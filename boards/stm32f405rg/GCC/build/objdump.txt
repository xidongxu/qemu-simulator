
build/stm32-qemu.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	20001238 	andcs	r1, r0, r8, lsr r2
 8000004:	08001af9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r9, fp, ip}
 8000008:	08000789 	stmdaeq	r0, {r0, r3, r7, r8, r9, sl}
 800000c:	080001d1 	stmdaeq	r0, {r0, r4, r6, r7, r8}
 8000010:	0800079d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, r9, sl}
 8000014:	080007b1 	stmdaeq	r0, {r0, r4, r5, r7, r8, r9, sl}
 8000018:	080007c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, r9, sl}
	...
 800002c:	080007d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, sl}
 8000030:	080007db 	stmdaeq	r0, {r0, r1, r3, r4, r6, r7, r8, r9, sl}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	080007dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, r9, sl}
 800003c:	080007df 	stmdaeq	r0, {r0, r1, r2, r3, r4, r6, r7, r8, r9, sl}
 8000040:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000044:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000048:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800004c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000050:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000054:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000058:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800005c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000060:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000064:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000068:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800006c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000070:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000074:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000078:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800007c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000080:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000084:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000088:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800008c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000090:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000094:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000098:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800009c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000a0:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000a4:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000a8:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000ac:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000b0:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000b4:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000b8:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000bc:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000c0:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000c4:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000c8:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000cc:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000d0:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000d4:	080007e9 	stmdaeq	r0, {r0, r3, r5, r6, r7, r8, r9, sl}
 80000d8:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000dc:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000e0:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000e4:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000e8:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000ec:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000f0:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000f4:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000f8:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 80000fc:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000100:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000104:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000108:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800010c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000110:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000114:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000118:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800011c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000120:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000124:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000128:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800012c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000130:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
	...
 800013c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000140:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000144:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000148:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800014c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000150:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000154:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000158:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800015c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000160:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000164:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000168:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 800016c:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000170:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000174:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
	...
 8000180:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}
 8000184:	08001b49 	stmdaeq	r0, {r0, r3, r6, r8, r9, fp, ip}

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000070 	andcs	r0, r0, r0, ror r0
 80001ac:	00000000 	andeq	r0, r0, r0
 80001b0:	08002bb8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, fp, sp}

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	andeq	r0, r0, r0
 80001c8:	20000074 	andcs	r0, r0, r4, ror r0
 80001cc:	08002bb8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, fp, sp}

080001d0 <HardFault_Handler>:
.global fault_dump_handler

.global HardFault_Handler
.type HardFault_Handler, % function
HardFault_Handler:
    cpsid   i                           /* disable interrupts */
 80001d0:	b672      	cpsid	i
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
 80001d2:	4b0e      	ldr	r3, [pc, #56]	; (800020c <stack_invalid+0xe>)
    ldr     r1, [r3]                    /* r1 = fd_main_stack_base  */
 80001d4:	6819      	ldr	r1, [r3, #0]
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
 80001d6:	4b0e      	ldr	r3, [pc, #56]	; (8000210 <stack_invalid+0x12>)
    ldr     r2, [r3]                    /* r2 = fd_main_stack_full  */
 80001d8:	681a      	ldr	r2, [r3, #0]

    tst     lr, #4                      /* use exc_return value get sp value */
 80001da:	f01e 0f04 	tst.w	lr, #4
    bne     stack_checked               /* if (sp != msp), jump to stack_checked */
 80001de:	d105      	bne.n	80001ec <stack_checked>

    mrs     r0, msp                     /* else (sp == msp), r0 = sp = msp */
 80001e0:	f3ef 8008 	mrs	r0, MSP
    cmp     r0, r1                      /* compare msp and stack base addr */
 80001e4:	4288      	cmp	r0, r1
    blt     stack_invalid               /* msp < stack_base_addr, msp is invalid */
 80001e6:	db0a      	blt.n	80001fe <stack_invalid>
    cmp     r0, r2                      /* compare msp and stack full addr */
 80001e8:	4290      	cmp	r0, r2
    bgt     stack_invalid               /* msp > stack_base_addr, msp is invalid */
 80001ea:	dc08      	bgt.n	80001fe <stack_invalid>

080001ec <stack_checked>:
    
stack_checked:
    push    {r4 - r11}                  /* sp value is in stack range, push r4 - r11 to stack */
 80001ec:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}

    tst     lr, #4                      /* update sp value to r0 */
 80001f0:	f01e 0f04 	tst.w	lr, #4
    ite     eq
 80001f4:	bf0c      	ite	eq
    mrseq   r0, msp                     /* lr & 0x04 == 1, r0 = sp = msp */
 80001f6:	f3ef 8008 	mrseq	r0, MSP
    mrsne   r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
 80001fa:	f3ef 8009 	mrsne	r0, PSP

080001fe <stack_invalid>:
stack_invalid:
    mov     r1, lr                      /* now, r0 = sp, r1 = lr */
 80001fe:	4671      	mov	r1, lr
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
 8000200:	4a04      	ldr	r2, [pc, #16]	; (8000214 <stack_invalid+0x16>)
    dsb                                 /* wait for memory access to complete */
 8000202:	f3bf 8f4f 	dsb	sy
    cpsie   i                           /* enable interrupts */
 8000206:	b662      	cpsie	i
    bx      r2                          /* jump to fault_dump_handler */
 8000208:	4710      	bx	r2
 800020a:	01dc0000 	bicseq	r0, ip, r0
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
 800020e:	01e02000 	mvneq	r2, r0
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
 8000212:	18ed2000 	stmiane	sp!, {sp}^
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
 8000216:	00000800 	andeq	r0, r0, r0, lsl #16
 800021a:	00000000 	andeq	r0, r0, r0
	...

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_uldivmod>:
 80002c0:	b953      	cbnz	r3, 80002d8 <__aeabi_uldivmod+0x18>
 80002c2:	b94a      	cbnz	r2, 80002d8 <__aeabi_uldivmod+0x18>
 80002c4:	2900      	cmp	r1, #0
 80002c6:	bf08      	it	eq
 80002c8:	2800      	cmpeq	r0, #0
 80002ca:	bf1c      	itt	ne
 80002cc:	f04f 31ff 	movne.w	r1, #4294967295
 80002d0:	f04f 30ff 	movne.w	r0, #4294967295
 80002d4:	f000 b974 	b.w	80005c0 <__aeabi_idiv0>
 80002d8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e0:	f000 f806 	bl	80002f0 <__udivmoddi4>
 80002e4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ec:	b004      	add	sp, #16
 80002ee:	4770      	bx	lr

080002f0 <__udivmoddi4>:
 80002f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f4:	9d08      	ldr	r5, [sp, #32]
 80002f6:	4604      	mov	r4, r0
 80002f8:	468e      	mov	lr, r1
 80002fa:	2b00      	cmp	r3, #0
 80002fc:	d14d      	bne.n	800039a <__udivmoddi4+0xaa>
 80002fe:	428a      	cmp	r2, r1
 8000300:	4694      	mov	ip, r2
 8000302:	d969      	bls.n	80003d8 <__udivmoddi4+0xe8>
 8000304:	fab2 f282 	clz	r2, r2
 8000308:	b152      	cbz	r2, 8000320 <__udivmoddi4+0x30>
 800030a:	fa01 f302 	lsl.w	r3, r1, r2
 800030e:	f1c2 0120 	rsb	r1, r2, #32
 8000312:	fa20 f101 	lsr.w	r1, r0, r1
 8000316:	fa0c fc02 	lsl.w	ip, ip, r2
 800031a:	ea41 0e03 	orr.w	lr, r1, r3
 800031e:	4094      	lsls	r4, r2
 8000320:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000324:	0c21      	lsrs	r1, r4, #16
 8000326:	fbbe f6f8 	udiv	r6, lr, r8
 800032a:	fa1f f78c 	uxth.w	r7, ip
 800032e:	fb08 e316 	mls	r3, r8, r6, lr
 8000332:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000336:	fb06 f107 	mul.w	r1, r6, r7
 800033a:	4299      	cmp	r1, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x64>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f106 30ff 	add.w	r0, r6, #4294967295
 8000346:	f080 811f 	bcs.w	8000588 <__udivmoddi4+0x298>
 800034a:	4299      	cmp	r1, r3
 800034c:	f240 811c 	bls.w	8000588 <__udivmoddi4+0x298>
 8000350:	3e02      	subs	r6, #2
 8000352:	4463      	add	r3, ip
 8000354:	1a5b      	subs	r3, r3, r1
 8000356:	b2a4      	uxth	r4, r4
 8000358:	fbb3 f0f8 	udiv	r0, r3, r8
 800035c:	fb08 3310 	mls	r3, r8, r0, r3
 8000360:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000364:	fb00 f707 	mul.w	r7, r0, r7
 8000368:	42a7      	cmp	r7, r4
 800036a:	d90a      	bls.n	8000382 <__udivmoddi4+0x92>
 800036c:	eb1c 0404 	adds.w	r4, ip, r4
 8000370:	f100 33ff 	add.w	r3, r0, #4294967295
 8000374:	f080 810a 	bcs.w	800058c <__udivmoddi4+0x29c>
 8000378:	42a7      	cmp	r7, r4
 800037a:	f240 8107 	bls.w	800058c <__udivmoddi4+0x29c>
 800037e:	4464      	add	r4, ip
 8000380:	3802      	subs	r0, #2
 8000382:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000386:	1be4      	subs	r4, r4, r7
 8000388:	2600      	movs	r6, #0
 800038a:	b11d      	cbz	r5, 8000394 <__udivmoddi4+0xa4>
 800038c:	40d4      	lsrs	r4, r2
 800038e:	2300      	movs	r3, #0
 8000390:	e9c5 4300 	strd	r4, r3, [r5]
 8000394:	4631      	mov	r1, r6
 8000396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039a:	428b      	cmp	r3, r1
 800039c:	d909      	bls.n	80003b2 <__udivmoddi4+0xc2>
 800039e:	2d00      	cmp	r5, #0
 80003a0:	f000 80ef 	beq.w	8000582 <__udivmoddi4+0x292>
 80003a4:	2600      	movs	r6, #0
 80003a6:	e9c5 0100 	strd	r0, r1, [r5]
 80003aa:	4630      	mov	r0, r6
 80003ac:	4631      	mov	r1, r6
 80003ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003b2:	fab3 f683 	clz	r6, r3
 80003b6:	2e00      	cmp	r6, #0
 80003b8:	d14a      	bne.n	8000450 <__udivmoddi4+0x160>
 80003ba:	428b      	cmp	r3, r1
 80003bc:	d302      	bcc.n	80003c4 <__udivmoddi4+0xd4>
 80003be:	4282      	cmp	r2, r0
 80003c0:	f200 80f9 	bhi.w	80005b6 <__udivmoddi4+0x2c6>
 80003c4:	1a84      	subs	r4, r0, r2
 80003c6:	eb61 0303 	sbc.w	r3, r1, r3
 80003ca:	2001      	movs	r0, #1
 80003cc:	469e      	mov	lr, r3
 80003ce:	2d00      	cmp	r5, #0
 80003d0:	d0e0      	beq.n	8000394 <__udivmoddi4+0xa4>
 80003d2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003d6:	e7dd      	b.n	8000394 <__udivmoddi4+0xa4>
 80003d8:	b902      	cbnz	r2, 80003dc <__udivmoddi4+0xec>
 80003da:	deff      	udf	#255	; 0xff
 80003dc:	fab2 f282 	clz	r2, r2
 80003e0:	2a00      	cmp	r2, #0
 80003e2:	f040 8092 	bne.w	800050a <__udivmoddi4+0x21a>
 80003e6:	eba1 010c 	sub.w	r1, r1, ip
 80003ea:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ee:	fa1f fe8c 	uxth.w	lr, ip
 80003f2:	2601      	movs	r6, #1
 80003f4:	0c20      	lsrs	r0, r4, #16
 80003f6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003fa:	fb07 1113 	mls	r1, r7, r3, r1
 80003fe:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000402:	fb0e f003 	mul.w	r0, lr, r3
 8000406:	4288      	cmp	r0, r1
 8000408:	d908      	bls.n	800041c <__udivmoddi4+0x12c>
 800040a:	eb1c 0101 	adds.w	r1, ip, r1
 800040e:	f103 38ff 	add.w	r8, r3, #4294967295
 8000412:	d202      	bcs.n	800041a <__udivmoddi4+0x12a>
 8000414:	4288      	cmp	r0, r1
 8000416:	f200 80cb 	bhi.w	80005b0 <__udivmoddi4+0x2c0>
 800041a:	4643      	mov	r3, r8
 800041c:	1a09      	subs	r1, r1, r0
 800041e:	b2a4      	uxth	r4, r4
 8000420:	fbb1 f0f7 	udiv	r0, r1, r7
 8000424:	fb07 1110 	mls	r1, r7, r0, r1
 8000428:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800042c:	fb0e fe00 	mul.w	lr, lr, r0
 8000430:	45a6      	cmp	lr, r4
 8000432:	d908      	bls.n	8000446 <__udivmoddi4+0x156>
 8000434:	eb1c 0404 	adds.w	r4, ip, r4
 8000438:	f100 31ff 	add.w	r1, r0, #4294967295
 800043c:	d202      	bcs.n	8000444 <__udivmoddi4+0x154>
 800043e:	45a6      	cmp	lr, r4
 8000440:	f200 80bb 	bhi.w	80005ba <__udivmoddi4+0x2ca>
 8000444:	4608      	mov	r0, r1
 8000446:	eba4 040e 	sub.w	r4, r4, lr
 800044a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800044e:	e79c      	b.n	800038a <__udivmoddi4+0x9a>
 8000450:	f1c6 0720 	rsb	r7, r6, #32
 8000454:	40b3      	lsls	r3, r6
 8000456:	fa22 fc07 	lsr.w	ip, r2, r7
 800045a:	ea4c 0c03 	orr.w	ip, ip, r3
 800045e:	fa20 f407 	lsr.w	r4, r0, r7
 8000462:	fa01 f306 	lsl.w	r3, r1, r6
 8000466:	431c      	orrs	r4, r3
 8000468:	40f9      	lsrs	r1, r7
 800046a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800046e:	fa00 f306 	lsl.w	r3, r0, r6
 8000472:	fbb1 f8f9 	udiv	r8, r1, r9
 8000476:	0c20      	lsrs	r0, r4, #16
 8000478:	fa1f fe8c 	uxth.w	lr, ip
 800047c:	fb09 1118 	mls	r1, r9, r8, r1
 8000480:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000484:	fb08 f00e 	mul.w	r0, r8, lr
 8000488:	4288      	cmp	r0, r1
 800048a:	fa02 f206 	lsl.w	r2, r2, r6
 800048e:	d90b      	bls.n	80004a8 <__udivmoddi4+0x1b8>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f108 3aff 	add.w	sl, r8, #4294967295
 8000498:	f080 8088 	bcs.w	80005ac <__udivmoddi4+0x2bc>
 800049c:	4288      	cmp	r0, r1
 800049e:	f240 8085 	bls.w	80005ac <__udivmoddi4+0x2bc>
 80004a2:	f1a8 0802 	sub.w	r8, r8, #2
 80004a6:	4461      	add	r1, ip
 80004a8:	1a09      	subs	r1, r1, r0
 80004aa:	b2a4      	uxth	r4, r4
 80004ac:	fbb1 f0f9 	udiv	r0, r1, r9
 80004b0:	fb09 1110 	mls	r1, r9, r0, r1
 80004b4:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80004b8:	fb00 fe0e 	mul.w	lr, r0, lr
 80004bc:	458e      	cmp	lr, r1
 80004be:	d908      	bls.n	80004d2 <__udivmoddi4+0x1e2>
 80004c0:	eb1c 0101 	adds.w	r1, ip, r1
 80004c4:	f100 34ff 	add.w	r4, r0, #4294967295
 80004c8:	d26c      	bcs.n	80005a4 <__udivmoddi4+0x2b4>
 80004ca:	458e      	cmp	lr, r1
 80004cc:	d96a      	bls.n	80005a4 <__udivmoddi4+0x2b4>
 80004ce:	3802      	subs	r0, #2
 80004d0:	4461      	add	r1, ip
 80004d2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004d6:	fba0 9402 	umull	r9, r4, r0, r2
 80004da:	eba1 010e 	sub.w	r1, r1, lr
 80004de:	42a1      	cmp	r1, r4
 80004e0:	46c8      	mov	r8, r9
 80004e2:	46a6      	mov	lr, r4
 80004e4:	d356      	bcc.n	8000594 <__udivmoddi4+0x2a4>
 80004e6:	d053      	beq.n	8000590 <__udivmoddi4+0x2a0>
 80004e8:	b15d      	cbz	r5, 8000502 <__udivmoddi4+0x212>
 80004ea:	ebb3 0208 	subs.w	r2, r3, r8
 80004ee:	eb61 010e 	sbc.w	r1, r1, lr
 80004f2:	fa01 f707 	lsl.w	r7, r1, r7
 80004f6:	fa22 f306 	lsr.w	r3, r2, r6
 80004fa:	40f1      	lsrs	r1, r6
 80004fc:	431f      	orrs	r7, r3
 80004fe:	e9c5 7100 	strd	r7, r1, [r5]
 8000502:	2600      	movs	r6, #0
 8000504:	4631      	mov	r1, r6
 8000506:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800050a:	f1c2 0320 	rsb	r3, r2, #32
 800050e:	40d8      	lsrs	r0, r3
 8000510:	fa0c fc02 	lsl.w	ip, ip, r2
 8000514:	fa21 f303 	lsr.w	r3, r1, r3
 8000518:	4091      	lsls	r1, r2
 800051a:	4301      	orrs	r1, r0
 800051c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000520:	fa1f fe8c 	uxth.w	lr, ip
 8000524:	fbb3 f0f7 	udiv	r0, r3, r7
 8000528:	fb07 3610 	mls	r6, r7, r0, r3
 800052c:	0c0b      	lsrs	r3, r1, #16
 800052e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000532:	fb00 f60e 	mul.w	r6, r0, lr
 8000536:	429e      	cmp	r6, r3
 8000538:	fa04 f402 	lsl.w	r4, r4, r2
 800053c:	d908      	bls.n	8000550 <__udivmoddi4+0x260>
 800053e:	eb1c 0303 	adds.w	r3, ip, r3
 8000542:	f100 38ff 	add.w	r8, r0, #4294967295
 8000546:	d22f      	bcs.n	80005a8 <__udivmoddi4+0x2b8>
 8000548:	429e      	cmp	r6, r3
 800054a:	d92d      	bls.n	80005a8 <__udivmoddi4+0x2b8>
 800054c:	3802      	subs	r0, #2
 800054e:	4463      	add	r3, ip
 8000550:	1b9b      	subs	r3, r3, r6
 8000552:	b289      	uxth	r1, r1
 8000554:	fbb3 f6f7 	udiv	r6, r3, r7
 8000558:	fb07 3316 	mls	r3, r7, r6, r3
 800055c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000560:	fb06 f30e 	mul.w	r3, r6, lr
 8000564:	428b      	cmp	r3, r1
 8000566:	d908      	bls.n	800057a <__udivmoddi4+0x28a>
 8000568:	eb1c 0101 	adds.w	r1, ip, r1
 800056c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000570:	d216      	bcs.n	80005a0 <__udivmoddi4+0x2b0>
 8000572:	428b      	cmp	r3, r1
 8000574:	d914      	bls.n	80005a0 <__udivmoddi4+0x2b0>
 8000576:	3e02      	subs	r6, #2
 8000578:	4461      	add	r1, ip
 800057a:	1ac9      	subs	r1, r1, r3
 800057c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000580:	e738      	b.n	80003f4 <__udivmoddi4+0x104>
 8000582:	462e      	mov	r6, r5
 8000584:	4628      	mov	r0, r5
 8000586:	e705      	b.n	8000394 <__udivmoddi4+0xa4>
 8000588:	4606      	mov	r6, r0
 800058a:	e6e3      	b.n	8000354 <__udivmoddi4+0x64>
 800058c:	4618      	mov	r0, r3
 800058e:	e6f8      	b.n	8000382 <__udivmoddi4+0x92>
 8000590:	454b      	cmp	r3, r9
 8000592:	d2a9      	bcs.n	80004e8 <__udivmoddi4+0x1f8>
 8000594:	ebb9 0802 	subs.w	r8, r9, r2
 8000598:	eb64 0e0c 	sbc.w	lr, r4, ip
 800059c:	3801      	subs	r0, #1
 800059e:	e7a3      	b.n	80004e8 <__udivmoddi4+0x1f8>
 80005a0:	4646      	mov	r6, r8
 80005a2:	e7ea      	b.n	800057a <__udivmoddi4+0x28a>
 80005a4:	4620      	mov	r0, r4
 80005a6:	e794      	b.n	80004d2 <__udivmoddi4+0x1e2>
 80005a8:	4640      	mov	r0, r8
 80005aa:	e7d1      	b.n	8000550 <__udivmoddi4+0x260>
 80005ac:	46d0      	mov	r8, sl
 80005ae:	e77b      	b.n	80004a8 <__udivmoddi4+0x1b8>
 80005b0:	3b02      	subs	r3, #2
 80005b2:	4461      	add	r1, ip
 80005b4:	e732      	b.n	800041c <__udivmoddi4+0x12c>
 80005b6:	4630      	mov	r0, r6
 80005b8:	e709      	b.n	80003ce <__udivmoddi4+0xde>
 80005ba:	4464      	add	r4, ip
 80005bc:	3802      	subs	r0, #2
 80005be:	e742      	b.n	8000446 <__udivmoddi4+0x156>

080005c0 <__aeabi_idiv0>:
 80005c0:	4770      	bx	lr
 80005c2:	bf00      	nop

080005c4 <__io_putchar>:
#include "fault-dump.h"

void SystemClock_Config(void);

#ifdef __GNUC__
int __io_putchar(int ch) {
 80005c4:	b500      	push	{lr}
 80005c6:	b083      	sub	sp, #12
 80005c8:	9001      	str	r0, [sp, #4]
    HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
 80005ca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80005ce:	2201      	movs	r2, #1
 80005d0:	a901      	add	r1, sp, #4
 80005d2:	4803      	ldr	r0, [pc, #12]	; (80005e0 <__io_putchar+0x1c>)
 80005d4:	f000 fbb8 	bl	8000d48 <HAL_UART_Transmit>
    return ch;
}
 80005d8:	9801      	ldr	r0, [sp, #4]
 80005da:	b003      	add	sp, #12
 80005dc:	f85d fb04 	ldr.w	pc, [sp], #4
 80005e0:	20000090 	mulcs	r0, r0, r0

080005e4 <fault_unalign_trigger>:
    SCB->CCR |= SCB_CCR_DIV_0_TRP_Msk;
    c = (a + (b / c));
    printf("c = %d\r\n", c);
}

void fault_unalign_trigger(void) {
 80005e4:	b530      	push	{r4, r5, lr}
 80005e6:	b083      	sub	sp, #12
    volatile int *addr = NULL;
    volatile int value = 0;
 80005e8:	2400      	movs	r4, #0
 80005ea:	9401      	str	r4, [sp, #4]
    SCB->CCR |= SCB_CCR_UNALIGN_TRP_Msk;
 80005ec:	4a0e      	ldr	r2, [pc, #56]	; (8000628 <fault_unalign_trigger+0x44>)
 80005ee:	6953      	ldr	r3, [r2, #20]
 80005f0:	f043 0308 	orr.w	r3, r3, #8
 80005f4:	6153      	str	r3, [r2, #20]

    addr = (int*)0x00;
    value = *addr;
 80005f6:	6823      	ldr	r3, [r4, #0]
 80005f8:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 80005fa:	9a01      	ldr	r2, [sp, #4]
 80005fc:	4d0b      	ldr	r5, [pc, #44]	; (800062c <fault_unalign_trigger+0x48>)
 80005fe:	4621      	mov	r1, r4
 8000600:	4628      	mov	r0, r5
 8000602:	f001 fad5 	bl	8001bb0 <iprintf>
    addr = (int*)0x04;
    value = *addr;
 8000606:	6863      	ldr	r3, [r4, #4]
 8000608:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 800060a:	9a01      	ldr	r2, [sp, #4]
 800060c:	2104      	movs	r1, #4
 800060e:	4628      	mov	r0, r5
 8000610:	f001 face 	bl	8001bb0 <iprintf>
    addr = (int*)0x03;
    value = *addr;
 8000614:	f8d4 3003 	ldr.w	r3, [r4, #3]
 8000618:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
 800061a:	9a01      	ldr	r2, [sp, #4]
 800061c:	2103      	movs	r1, #3
 800061e:	4628      	mov	r0, r5
 8000620:	f001 fac6 	bl	8001bb0 <iprintf>
}
 8000624:	b003      	add	sp, #12
 8000626:	bd30      	pop	{r4, r5, pc}
 8000628:	e000ed00 	and	lr, r0, r0, lsl #26
 800062c:	08002bd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, fp, sp}

08000630 <test0>:

void test0(void) {
 8000630:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 8000632:	4903      	ldr	r1, [pc, #12]	; (8000640 <test0+0x10>)
 8000634:	4803      	ldr	r0, [pc, #12]	; (8000644 <test0+0x14>)
 8000636:	f001 fabb 	bl	8001bb0 <iprintf>
    // trigger a fault.
    //float a = 0.0, b = 1.1;
    //printf("this is %f.\r\n", (a + b));
    fault_unalign_trigger();
 800063a:	f7ff ffd3 	bl	80005e4 <fault_unalign_trigger>
}
 800063e:	bd08      	pop	{r3, pc}
 8000640:	08002c34 	stmdaeq	r0, {r2, r4, r5, sl, fp, sp}
 8000644:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

08000648 <test1>:

void test1(void) {
 8000648:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 800064a:	4903      	ldr	r1, [pc, #12]	; (8000658 <test1+0x10>)
 800064c:	4803      	ldr	r0, [pc, #12]	; (800065c <test1+0x14>)
 800064e:	f001 faaf 	bl	8001bb0 <iprintf>
    test0();
 8000652:	f7ff ffed 	bl	8000630 <test0>
}
 8000656:	bd08      	pop	{r3, pc}
 8000658:	08002c2c 	stmdaeq	r0, {r2, r3, r5, sl, fp, sp}
 800065c:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

08000660 <test2>:

void test2(void) {
 8000660:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 8000662:	4903      	ldr	r1, [pc, #12]	; (8000670 <test2+0x10>)
 8000664:	4803      	ldr	r0, [pc, #12]	; (8000674 <test2+0x14>)
 8000666:	f001 faa3 	bl	8001bb0 <iprintf>
    test1();
 800066a:	f7ff ffed 	bl	8000648 <test1>
}
 800066e:	bd08      	pop	{r3, pc}
 8000670:	08002c24 	stmdaeq	r0, {r2, r5, sl, fp, sp}
 8000674:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

08000678 <test3>:

void test3(void) {
 8000678:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 800067a:	4903      	ldr	r1, [pc, #12]	; (8000688 <test3+0x10>)
 800067c:	4803      	ldr	r0, [pc, #12]	; (800068c <test3+0x14>)
 800067e:	f001 fa97 	bl	8001bb0 <iprintf>
    test2();
 8000682:	f7ff ffed 	bl	8000660 <test2>
}
 8000686:	bd08      	pop	{r3, pc}
 8000688:	08002c1c 	stmdaeq	r0, {r2, r3, r4, sl, fp, sp}
 800068c:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

08000690 <test4>:

void test4(void) {
 8000690:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 8000692:	4903      	ldr	r1, [pc, #12]	; (80006a0 <test4+0x10>)
 8000694:	4803      	ldr	r0, [pc, #12]	; (80006a4 <test4+0x14>)
 8000696:	f001 fa8b 	bl	8001bb0 <iprintf>
    test3();
 800069a:	f7ff ffed 	bl	8000678 <test3>
}
 800069e:	bd08      	pop	{r3, pc}
 80006a0:	08002c14 	stmdaeq	r0, {r2, r4, sl, fp, sp}
 80006a4:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

080006a8 <test5>:

void test5(void) {
 80006a8:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
 80006aa:	4903      	ldr	r1, [pc, #12]	; (80006b8 <test5+0x10>)
 80006ac:	4803      	ldr	r0, [pc, #12]	; (80006bc <test5+0x14>)
 80006ae:	f001 fa7f 	bl	8001bb0 <iprintf>
    test4();
 80006b2:	f7ff ffed 	bl	8000690 <test4>
}
 80006b6:	bd08      	pop	{r3, pc}
 80006b8:	08002c0c 	stmdaeq	r0, {r2, r3, sl, fp, sp}
 80006bc:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

080006c0 <main>:

int main(void) {
 80006c0:	b508      	push	{r3, lr}
    HAL_Init();
 80006c2:	f001 f825 	bl	8001710 <HAL_Init>
    // SystemClock_Config();
    MX_GPIO_Init();
 80006c6:	f000 f8af 	bl	8000828 <MX_GPIO_Init>
    MX_USART1_UART_Init();
 80006ca:	f000 f8d3 	bl	8000874 <MX_USART1_UART_Init>

    fault_dump_init();
 80006ce:	f001 f8a7 	bl	8001820 <fault_dump_init>
    test5();
 80006d2:	f7ff ffe9 	bl	80006a8 <test5>

    while (1) {
        printf("hello qemu.\r\n");
 80006d6:	4804      	ldr	r0, [pc, #16]	; (80006e8 <main+0x28>)
 80006d8:	f001 faf0 	bl	8001cbc <puts>
        HAL_Delay(1000);
 80006dc:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 80006e0:	f001 f842 	bl	8001768 <HAL_Delay>
    while (1) {
 80006e4:	e7f7      	b.n	80006d6 <main+0x16>
 80006e6:	bf00      	nop
 80006e8:	08002bfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, fp, sp}

080006ec <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80006ec:	b510      	push	{r4, lr}
 80006ee:	4603      	mov	r3, r0
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80006f0:	4a0c      	ldr	r2, [pc, #48]	; (8000724 <_sbrk+0x38>)
 80006f2:	490d      	ldr	r1, [pc, #52]	; (8000728 <_sbrk+0x3c>)
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80006f4:	480d      	ldr	r0, [pc, #52]	; (800072c <_sbrk+0x40>)
 80006f6:	6800      	ldr	r0, [r0, #0]
 80006f8:	b140      	cbz	r0, 800070c <_sbrk+0x20>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80006fa:	480c      	ldr	r0, [pc, #48]	; (800072c <_sbrk+0x40>)
 80006fc:	6800      	ldr	r0, [r0, #0]
 80006fe:	4403      	add	r3, r0
 8000700:	1a52      	subs	r2, r2, r1
 8000702:	4293      	cmp	r3, r2
 8000704:	d806      	bhi.n	8000714 <_sbrk+0x28>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 8000706:	4a09      	ldr	r2, [pc, #36]	; (800072c <_sbrk+0x40>)
 8000708:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
}
 800070a:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 800070c:	4807      	ldr	r0, [pc, #28]	; (800072c <_sbrk+0x40>)
 800070e:	4c08      	ldr	r4, [pc, #32]	; (8000730 <_sbrk+0x44>)
 8000710:	6004      	str	r4, [r0, #0]
 8000712:	e7f2      	b.n	80006fa <_sbrk+0xe>
    errno = ENOMEM;
 8000714:	f001 fa1a 	bl	8001b4c <__errno>
 8000718:	230c      	movs	r3, #12
 800071a:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 800071c:	f04f 30ff 	mov.w	r0, #4294967295
 8000720:	e7f3      	b.n	800070a <_sbrk+0x1e>
 8000722:	bf00      	nop
 8000724:	20001238 	andcs	r1, r0, r8, lsr r2
 8000728:	00000800 	andeq	r0, r0, r0, lsl #16
 800072c:	2000008c 	andcs	r0, r0, ip, lsl #1
 8000730:	20000238 	andcs	r0, r0, r8, lsr r2

08000734 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000734:	b570      	push	{r4, r5, r6, lr}
 8000736:	460c      	mov	r4, r1
 8000738:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800073a:	2500      	movs	r5, #0
 800073c:	e006      	b.n	800074c <_read+0x18>
  {
    *ptr++ = __io_getchar();
 800073e:	f3af 8000 	nop.w
 8000742:	4621      	mov	r1, r4
 8000744:	f801 0b01 	strb.w	r0, [r1], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000748:	3501      	adds	r5, #1
    *ptr++ = __io_getchar();
 800074a:	460c      	mov	r4, r1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800074c:	42b5      	cmp	r5, r6
 800074e:	dbf6      	blt.n	800073e <_read+0xa>
  }

  return len;
}
 8000750:	4630      	mov	r0, r6
 8000752:	bd70      	pop	{r4, r5, r6, pc}

08000754 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000754:	b570      	push	{r4, r5, r6, lr}
 8000756:	460c      	mov	r4, r1
 8000758:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800075a:	2500      	movs	r5, #0
 800075c:	e004      	b.n	8000768 <_write+0x14>
  {
    __io_putchar(*ptr++);
 800075e:	f814 0b01 	ldrb.w	r0, [r4], #1
 8000762:	f7ff ff2f 	bl	80005c4 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000766:	3501      	adds	r5, #1
 8000768:	42b5      	cmp	r5, r6
 800076a:	dbf8      	blt.n	800075e <_write+0xa>
  }
  return len;
}
 800076c:	4630      	mov	r0, r6
 800076e:	bd70      	pop	{r4, r5, r6, pc}

08000770 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8000770:	f04f 30ff 	mov.w	r0, #4294967295
 8000774:	4770      	bx	lr

08000776 <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 8000776:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800077a:	604b      	str	r3, [r1, #4]
  return 0;
}
 800077c:	2000      	movs	r0, #0
 800077e:	4770      	bx	lr

08000780 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8000780:	2001      	movs	r0, #1
 8000782:	4770      	bx	lr

08000784 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8000784:	2000      	movs	r0, #0
 8000786:	4770      	bx	lr

08000788 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000788:	b508      	push	{r3, lr}
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 800078a:	4902      	ldr	r1, [pc, #8]	; (8000794 <NMI_Handler+0xc>)
 800078c:	4802      	ldr	r0, [pc, #8]	; (8000798 <NMI_Handler+0x10>)
 800078e:	f001 fa0f 	bl	8001bb0 <iprintf>
  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000792:	e7fe      	b.n	8000792 <NMI_Handler+0xa>
 8000794:	08002c98 	stmdaeq	r0, {r3, r4, r7, sl, fp, sp}
 8000798:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

0800079c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800079c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 800079e:	4902      	ldr	r1, [pc, #8]	; (80007a8 <MemManage_Handler+0xc>)
 80007a0:	4802      	ldr	r0, [pc, #8]	; (80007ac <MemManage_Handler+0x10>)
 80007a2:	f001 fa05 	bl	8001bb0 <iprintf>
  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80007a6:	e7fe      	b.n	80007a6 <MemManage_Handler+0xa>
 80007a8:	08002c84 	stmdaeq	r0, {r2, r7, sl, fp, sp}
 80007ac:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

080007b0 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 80007b0:	b508      	push	{r3, lr}
  /* USER CODE BEGIN BusFault_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 80007b2:	4902      	ldr	r1, [pc, #8]	; (80007bc <BusFault_Handler+0xc>)
 80007b4:	4802      	ldr	r0, [pc, #8]	; (80007c0 <BusFault_Handler+0x10>)
 80007b6:	f001 f9fb 	bl	8001bb0 <iprintf>
  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80007ba:	e7fe      	b.n	80007ba <BusFault_Handler+0xa>
 80007bc:	08002c70 	stmdaeq	r0, {r4, r5, r6, sl, fp, sp}
 80007c0:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

080007c4 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80007c4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN UsageFault_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 80007c6:	4902      	ldr	r1, [pc, #8]	; (80007d0 <UsageFault_Handler+0xc>)
 80007c8:	4802      	ldr	r0, [pc, #8]	; (80007d4 <UsageFault_Handler+0x10>)
 80007ca:	f001 f9f1 	bl	8001bb0 <iprintf>
  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80007ce:	e7fe      	b.n	80007ce <UsageFault_Handler+0xa>
 80007d0:	08002c5c 	stmdaeq	r0, {r2, r3, r4, r6, sl, fp, sp}
 80007d4:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

080007d8 <SVC_Handler>:

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80007d8:	4770      	bx	lr

080007da <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80007da:	4770      	bx	lr

080007dc <PendSV_Handler>:

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80007dc:	4770      	bx	lr

080007de <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80007de:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80007e0:	f000 ffb0 	bl	8001744 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80007e4:	bd08      	pop	{r3, pc}
	...

080007e8 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 80007e8:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 80007ea:	4802      	ldr	r0, [pc, #8]	; (80007f4 <USART1_IRQHandler+0xc>)
 80007ec:	f000 fb9e 	bl	8000f2c <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 80007f0:	bd08      	pop	{r3, pc}
 80007f2:	bf00      	nop
 80007f4:	20000090 	mulcs	r0, r0, r0

080007f8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80007f8:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 80007fa:	4903      	ldr	r1, [pc, #12]	; (8000808 <Error_Handler+0x10>)
 80007fc:	4803      	ldr	r0, [pc, #12]	; (800080c <Error_Handler+0x14>)
 80007fe:	f001 f9d7 	bl	8001bb0 <iprintf>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000802:	b672      	cpsid	i
  __disable_irq();
  while (1) {}
 8000804:	e7fe      	b.n	8000804 <Error_Handler+0xc>
 8000806:	bf00      	nop
 8000808:	08002c4c 	stmdaeq	r0, {r2, r3, r6, sl, fp, sp}
 800080c:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

08000810 <assert_failed>:
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{
 8000810:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 8000812:	4903      	ldr	r1, [pc, #12]	; (8000820 <assert_failed+0x10>)
 8000814:	4803      	ldr	r0, [pc, #12]	; (8000824 <assert_failed+0x14>)
 8000816:	f001 f9cb 	bl	8001bb0 <iprintf>
 800081a:	b672      	cpsid	i
  __disable_irq();
  while (1) {}
 800081c:	e7fe      	b.n	800081c <assert_failed+0xc>
 800081e:	bf00      	nop
 8000820:	08002c3c 	stmdaeq	r0, {r2, r3, r4, r5, sl, fp, sp}
 8000824:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}

08000828 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000828:	b084      	sub	sp, #16

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800082a:	2200      	movs	r2, #0
 800082c:	9201      	str	r2, [sp, #4]
 800082e:	4b10      	ldr	r3, [pc, #64]	; (8000870 <MX_GPIO_Init+0x48>)
 8000830:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000832:	f041 0104 	orr.w	r1, r1, #4
 8000836:	6319      	str	r1, [r3, #48]	; 0x30
 8000838:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800083a:	f001 0104 	and.w	r1, r1, #4
 800083e:	9101      	str	r1, [sp, #4]
 8000840:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000842:	9202      	str	r2, [sp, #8]
 8000844:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000846:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 800084a:	6319      	str	r1, [r3, #48]	; 0x30
 800084c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800084e:	f001 0180 	and.w	r1, r1, #128	; 0x80
 8000852:	9102      	str	r1, [sp, #8]
 8000854:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000856:	9203      	str	r2, [sp, #12]
 8000858:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800085a:	f042 0201 	orr.w	r2, r2, #1
 800085e:	631a      	str	r2, [r3, #48]	; 0x30
 8000860:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000862:	f003 0301 	and.w	r3, r3, #1
 8000866:	9303      	str	r3, [sp, #12]
 8000868:	9b03      	ldr	r3, [sp, #12]

}
 800086a:	b004      	add	sp, #16
 800086c:	4770      	bx	lr
 800086e:	bf00      	nop
 8000870:	40023800 	andmi	r3, r2, r0, lsl #16

08000874 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8000874:	b508      	push	{r3, lr}
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000876:	480a      	ldr	r0, [pc, #40]	; (80008a0 <MX_USART1_UART_Init+0x2c>)
 8000878:	4b0a      	ldr	r3, [pc, #40]	; (80008a4 <MX_USART1_UART_Init+0x30>)
 800087a:	6003      	str	r3, [r0, #0]
  huart1.Init.BaudRate = 115200;
 800087c:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8000880:	6043      	str	r3, [r0, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8000882:	2300      	movs	r3, #0
 8000884:	6083      	str	r3, [r0, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000886:	60c3      	str	r3, [r0, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000888:	6103      	str	r3, [r0, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800088a:	220c      	movs	r2, #12
 800088c:	6142      	str	r2, [r0, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800088e:	6183      	str	r3, [r0, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8000890:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8000892:	f000 f9c3 	bl	8000c1c <HAL_UART_Init>
 8000896:	b900      	cbnz	r0, 800089a <MX_USART1_UART_Init+0x26>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000898:	bd08      	pop	{r3, pc}
    Error_Handler();
 800089a:	f7ff ffad 	bl	80007f8 <Error_Handler>
}
 800089e:	e7fb      	b.n	8000898 <MX_USART1_UART_Init+0x24>
 80008a0:	20000090 	mulcs	r0, r0, r0
 80008a4:	40011000 	andmi	r1, r1, r0

080008a8 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80008a8:	b510      	push	{r4, lr}
 80008aa:	b088      	sub	sp, #32

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80008ac:	2300      	movs	r3, #0
 80008ae:	9303      	str	r3, [sp, #12]
 80008b0:	9304      	str	r3, [sp, #16]
 80008b2:	9305      	str	r3, [sp, #20]
 80008b4:	9306      	str	r3, [sp, #24]
 80008b6:	9307      	str	r3, [sp, #28]
  if(uartHandle->Instance==USART1)
 80008b8:	6802      	ldr	r2, [r0, #0]
 80008ba:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80008be:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 80008c2:	429a      	cmp	r2, r3
 80008c4:	d001      	beq.n	80008ca <HAL_UART_MspInit+0x22>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 80008c6:	b008      	add	sp, #32
 80008c8:	bd10      	pop	{r4, pc}
    __HAL_RCC_USART1_CLK_ENABLE();
 80008ca:	2400      	movs	r4, #0
 80008cc:	9401      	str	r4, [sp, #4]
 80008ce:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 80008d2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80008d4:	f042 0210 	orr.w	r2, r2, #16
 80008d8:	645a      	str	r2, [r3, #68]	; 0x44
 80008da:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80008dc:	f002 0210 	and.w	r2, r2, #16
 80008e0:	9201      	str	r2, [sp, #4]
 80008e2:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80008e4:	9402      	str	r4, [sp, #8]
 80008e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80008e8:	f042 0201 	orr.w	r2, r2, #1
 80008ec:	631a      	str	r2, [r3, #48]	; 0x30
 80008ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008f0:	f003 0301 	and.w	r3, r3, #1
 80008f4:	9302      	str	r3, [sp, #8]
 80008f6:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 80008f8:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80008fc:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80008fe:	2302      	movs	r3, #2
 8000900:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000902:	2303      	movs	r3, #3
 8000904:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8000906:	2307      	movs	r3, #7
 8000908:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800090a:	a903      	add	r1, sp, #12
 800090c:	4805      	ldr	r0, [pc, #20]	; (8000924 <HAL_UART_MspInit+0x7c>)
 800090e:	f000 fc77 	bl	8001200 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 8000912:	4622      	mov	r2, r4
 8000914:	4621      	mov	r1, r4
 8000916:	2025      	movs	r0, #37	; 0x25
 8000918:	f000 fe62 	bl	80015e0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 800091c:	2025      	movs	r0, #37	; 0x25
 800091e:	f000 fea5 	bl	800166c <HAL_NVIC_EnableIRQ>
}
 8000922:	e7d0      	b.n	80008c6 <HAL_UART_MspInit+0x1e>
 8000924:	40020000 	andmi	r0, r2, r0

08000928 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000928:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800092a:	2100      	movs	r1, #0
 800092c:	9100      	str	r1, [sp, #0]
 800092e:	4b0b      	ldr	r3, [pc, #44]	; (800095c <HAL_MspInit+0x34>)
 8000930:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000932:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8000936:	645a      	str	r2, [r3, #68]	; 0x44
 8000938:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800093a:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 800093e:	9200      	str	r2, [sp, #0]
 8000940:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000942:	9101      	str	r1, [sp, #4]
 8000944:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000946:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800094a:	641a      	str	r2, [r3, #64]	; 0x40
 800094c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800094e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000952:	9301      	str	r3, [sp, #4]
 8000954:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000956:	b002      	add	sp, #8
 8000958:	4770      	bx	lr
 800095a:	bf00      	nop
 800095c:	40023800 	andmi	r3, r2, r0, lsl #16

08000960 <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8000960:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000962:	f102 030c 	add.w	r3, r2, #12
 8000966:	e853 3f00 	ldrex	r3, [r3]
 800096a:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800096e:	320c      	adds	r2, #12
 8000970:	e842 3100 	strex	r1, r3, [r2]
 8000974:	2900      	cmp	r1, #0
 8000976:	d1f3      	bne.n	8000960 <UART_EndRxTransfer>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8000978:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800097a:	f102 0314 	add.w	r3, r2, #20
 800097e:	e853 3f00 	ldrex	r3, [r3]
 8000982:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000986:	3214      	adds	r2, #20
 8000988:	e842 3100 	strex	r1, r3, [r2]
 800098c:	2900      	cmp	r1, #0
 800098e:	d1f3      	bne.n	8000978 <UART_EndRxTransfer+0x18>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8000990:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8000992:	2b01      	cmp	r3, #1
 8000994:	d005      	beq.n	80009a2 <UART_EndRxTransfer+0x42>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8000996:	2320      	movs	r3, #32
 8000998:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800099c:	2300      	movs	r3, #0
 800099e:	6303      	str	r3, [r0, #48]	; 0x30
}
 80009a0:	4770      	bx	lr
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80009a2:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80009a4:	f102 030c 	add.w	r3, r2, #12
 80009a8:	e853 3f00 	ldrex	r3, [r3]
 80009ac:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80009b0:	320c      	adds	r2, #12
 80009b2:	e842 3100 	strex	r1, r3, [r2]
 80009b6:	2900      	cmp	r1, #0
 80009b8:	d1f3      	bne.n	80009a2 <UART_EndRxTransfer+0x42>
 80009ba:	e7ec      	b.n	8000996 <UART_EndRxTransfer+0x36>

080009bc <UART_Transmit_IT>:
static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
{
  const uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 80009bc:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 80009c0:	b2db      	uxtb	r3, r3
 80009c2:	2b21      	cmp	r3, #33	; 0x21
 80009c4:	d001      	beq.n	80009ca <UART_Transmit_IT+0xe>
    }
    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 80009c6:	2002      	movs	r0, #2
  }
}
 80009c8:	4770      	bx	lr
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80009ca:	6883      	ldr	r3, [r0, #8]
 80009cc:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80009d0:	d017      	beq.n	8000a02 <UART_Transmit_IT+0x46>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 80009d2:	6a03      	ldr	r3, [r0, #32]
 80009d4:	1c5a      	adds	r2, r3, #1
 80009d6:	6202      	str	r2, [r0, #32]
 80009d8:	781a      	ldrb	r2, [r3, #0]
 80009da:	6803      	ldr	r3, [r0, #0]
 80009dc:	605a      	str	r2, [r3, #4]
    if (--huart->TxXferCount == 0U)
 80009de:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80009e0:	b29b      	uxth	r3, r3
 80009e2:	3b01      	subs	r3, #1
 80009e4:	b29b      	uxth	r3, r3
 80009e6:	84c3      	strh	r3, [r0, #38]	; 0x26
 80009e8:	b94b      	cbnz	r3, 80009fe <UART_Transmit_IT+0x42>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 80009ea:	6802      	ldr	r2, [r0, #0]
 80009ec:	68d3      	ldr	r3, [r2, #12]
 80009ee:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80009f2:	60d3      	str	r3, [r2, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 80009f4:	6802      	ldr	r2, [r0, #0]
 80009f6:	68d3      	ldr	r3, [r2, #12]
 80009f8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80009fc:	60d3      	str	r3, [r2, #12]
    return HAL_OK;
 80009fe:	2000      	movs	r0, #0
 8000a00:	4770      	bx	lr
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000a02:	6903      	ldr	r3, [r0, #16]
 8000a04:	2b00      	cmp	r3, #0
 8000a06:	d1e4      	bne.n	80009d2 <UART_Transmit_IT+0x16>
      tmp = (const uint16_t *) huart->pTxBuffPtr;
 8000a08:	6a03      	ldr	r3, [r0, #32]
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8000a0a:	881b      	ldrh	r3, [r3, #0]
 8000a0c:	6802      	ldr	r2, [r0, #0]
 8000a0e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000a12:	6053      	str	r3, [r2, #4]
      huart->pTxBuffPtr += 2U;
 8000a14:	6a03      	ldr	r3, [r0, #32]
 8000a16:	3302      	adds	r3, #2
 8000a18:	6203      	str	r3, [r0, #32]
 8000a1a:	e7e0      	b.n	80009de <UART_Transmit_IT+0x22>

08000a1c <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8000a1c:	b538      	push	{r3, r4, r5, lr}
 8000a1e:	4604      	mov	r4, r0
  uint32_t tmpreg;
  uint32_t pclk;

  /* Check the parameters */
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 8000a20:	6842      	ldr	r2, [r0, #4]
 8000a22:	4b57      	ldr	r3, [pc, #348]	; (8000b80 <UART_SetConfig+0x164>)
 8000a24:	429a      	cmp	r2, r3
 8000a26:	d83f      	bhi.n	8000aa8 <UART_SetConfig+0x8c>
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 8000a28:	68e3      	ldr	r3, [r4, #12]
 8000a2a:	b113      	cbz	r3, 8000a32 <UART_SetConfig+0x16>
 8000a2c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000a30:	d140      	bne.n	8000ab4 <UART_SetConfig+0x98>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 8000a32:	6923      	ldr	r3, [r4, #16]
 8000a34:	b12b      	cbz	r3, 8000a42 <UART_SetConfig+0x26>
 8000a36:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000a3a:	d002      	beq.n	8000a42 <UART_SetConfig+0x26>
 8000a3c:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 8000a40:	d13e      	bne.n	8000ac0 <UART_SetConfig+0xa4>
  assert_param(IS_UART_MODE(huart->Init.Mode));
 8000a42:	6963      	ldr	r3, [r4, #20]
 8000a44:	f64f 72f3 	movw	r2, #65523	; 0xfff3
 8000a48:	4213      	tst	r3, r2
 8000a4a:	d100      	bne.n	8000a4e <UART_SetConfig+0x32>
 8000a4c:	b923      	cbnz	r3, 8000a58 <UART_SetConfig+0x3c>
 8000a4e:	f640 6178 	movw	r1, #3704	; 0xe78
 8000a52:	484c      	ldr	r0, [pc, #304]	; (8000b84 <UART_SetConfig+0x168>)
 8000a54:	f7ff fedc 	bl	8000810 <assert_failed>

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8000a58:	6822      	ldr	r2, [r4, #0]
 8000a5a:	6913      	ldr	r3, [r2, #16]
 8000a5c:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8000a60:	68e1      	ldr	r1, [r4, #12]
 8000a62:	430b      	orrs	r3, r1
 8000a64:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8000a66:	68a3      	ldr	r3, [r4, #8]
 8000a68:	6922      	ldr	r2, [r4, #16]
 8000a6a:	4313      	orrs	r3, r2
 8000a6c:	6962      	ldr	r2, [r4, #20]
 8000a6e:	4313      	orrs	r3, r2
 8000a70:	69e2      	ldr	r2, [r4, #28]
 8000a72:	431a      	orrs	r2, r3
  MODIFY_REG(huart->Instance->CR1,
 8000a74:	6821      	ldr	r1, [r4, #0]
 8000a76:	68cb      	ldr	r3, [r1, #12]
 8000a78:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 8000a7c:	f023 030c 	bic.w	r3, r3, #12
 8000a80:	4313      	orrs	r3, r2
 8000a82:	60cb      	str	r3, [r1, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8000a84:	6822      	ldr	r2, [r4, #0]
 8000a86:	6953      	ldr	r3, [r2, #20]
 8000a88:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000a8c:	69a1      	ldr	r1, [r4, #24]
 8000a8e:	430b      	orrs	r3, r1
 8000a90:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8000a92:	6823      	ldr	r3, [r4, #0]
 8000a94:	4a3c      	ldr	r2, [pc, #240]	; (8000b88 <UART_SetConfig+0x16c>)
 8000a96:	4293      	cmp	r3, r2
 8000a98:	d018      	beq.n	8000acc <UART_SetConfig+0xb0>
 8000a9a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000a9e:	4293      	cmp	r3, r2
 8000aa0:	d014      	beq.n	8000acc <UART_SetConfig+0xb0>
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 8000aa2:	f000 fb8d 	bl	80011c0 <HAL_RCC_GetPCLK1Freq>
 8000aa6:	e013      	b.n	8000ad0 <UART_SetConfig+0xb4>
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 8000aa8:	f640 6175 	movw	r1, #3701	; 0xe75
 8000aac:	4835      	ldr	r0, [pc, #212]	; (8000b84 <UART_SetConfig+0x168>)
 8000aae:	f7ff feaf 	bl	8000810 <assert_failed>
 8000ab2:	e7b9      	b.n	8000a28 <UART_SetConfig+0xc>
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 8000ab4:	f640 6176 	movw	r1, #3702	; 0xe76
 8000ab8:	4832      	ldr	r0, [pc, #200]	; (8000b84 <UART_SetConfig+0x168>)
 8000aba:	f7ff fea9 	bl	8000810 <assert_failed>
 8000abe:	e7b8      	b.n	8000a32 <UART_SetConfig+0x16>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 8000ac0:	f640 6177 	movw	r1, #3703	; 0xe77
 8000ac4:	482f      	ldr	r0, [pc, #188]	; (8000b84 <UART_SetConfig+0x168>)
 8000ac6:	f7ff fea3 	bl	8000810 <assert_failed>
 8000aca:	e7ba      	b.n	8000a42 <UART_SetConfig+0x26>
      pclk = HAL_RCC_GetPCLK2Freq();
 8000acc:	f000 fb88 	bl	80011e0 <HAL_RCC_GetPCLK2Freq>
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8000ad0:	69e3      	ldr	r3, [r4, #28]
 8000ad2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8000ad6:	d029      	beq.n	8000b2c <UART_SetConfig+0x110>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8000ad8:	2100      	movs	r1, #0
 8000ada:	1803      	adds	r3, r0, r0
 8000adc:	4149      	adcs	r1, r1
 8000ade:	181b      	adds	r3, r3, r0
 8000ae0:	f141 0100 	adc.w	r1, r1, #0
 8000ae4:	00c9      	lsls	r1, r1, #3
 8000ae6:	ea41 7153 	orr.w	r1, r1, r3, lsr #29
 8000aea:	00db      	lsls	r3, r3, #3
 8000aec:	1818      	adds	r0, r3, r0
 8000aee:	6863      	ldr	r3, [r4, #4]
 8000af0:	ea4f 0283 	mov.w	r2, r3, lsl #2
 8000af4:	ea4f 7393 	mov.w	r3, r3, lsr #30
 8000af8:	f141 0100 	adc.w	r1, r1, #0
 8000afc:	f7ff fbe0 	bl	80002c0 <__aeabi_uldivmod>
 8000b00:	4d22      	ldr	r5, [pc, #136]	; (8000b8c <UART_SetConfig+0x170>)
 8000b02:	fba5 3200 	umull	r3, r2, r5, r0
 8000b06:	0951      	lsrs	r1, r2, #5
 8000b08:	2364      	movs	r3, #100	; 0x64
 8000b0a:	fb03 0311 	mls	r3, r3, r1, r0
 8000b0e:	011b      	lsls	r3, r3, #4
 8000b10:	3332      	adds	r3, #50	; 0x32
 8000b12:	fba5 2303 	umull	r2, r3, r5, r3
 8000b16:	095b      	lsrs	r3, r3, #5
 8000b18:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8000b1c:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8000b20:	f003 030f 	and.w	r3, r3, #15
 8000b24:	6821      	ldr	r1, [r4, #0]
 8000b26:	4413      	add	r3, r2
 8000b28:	608b      	str	r3, [r1, #8]
  }
}
 8000b2a:	bd38      	pop	{r3, r4, r5, pc}
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8000b2c:	2300      	movs	r3, #0
 8000b2e:	1802      	adds	r2, r0, r0
 8000b30:	eb43 0103 	adc.w	r1, r3, r3
 8000b34:	1812      	adds	r2, r2, r0
 8000b36:	f141 0100 	adc.w	r1, r1, #0
 8000b3a:	00c9      	lsls	r1, r1, #3
 8000b3c:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8000b40:	00d2      	lsls	r2, r2, #3
 8000b42:	1810      	adds	r0, r2, r0
 8000b44:	f141 0100 	adc.w	r1, r1, #0
 8000b48:	6862      	ldr	r2, [r4, #4]
 8000b4a:	1892      	adds	r2, r2, r2
 8000b4c:	415b      	adcs	r3, r3
 8000b4e:	f7ff fbb7 	bl	80002c0 <__aeabi_uldivmod>
 8000b52:	4d0e      	ldr	r5, [pc, #56]	; (8000b8c <UART_SetConfig+0x170>)
 8000b54:	fba5 3200 	umull	r3, r2, r5, r0
 8000b58:	0951      	lsrs	r1, r2, #5
 8000b5a:	2364      	movs	r3, #100	; 0x64
 8000b5c:	fb03 0311 	mls	r3, r3, r1, r0
 8000b60:	00db      	lsls	r3, r3, #3
 8000b62:	3332      	adds	r3, #50	; 0x32
 8000b64:	fba5 2303 	umull	r2, r3, r5, r3
 8000b68:	095b      	lsrs	r3, r3, #5
 8000b6a:	005a      	lsls	r2, r3, #1
 8000b6c:	f402 72f8 	and.w	r2, r2, #496	; 0x1f0
 8000b70:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8000b74:	f003 0307 	and.w	r3, r3, #7
 8000b78:	6821      	ldr	r1, [r4, #0]
 8000b7a:	4413      	add	r3, r2
 8000b7c:	608b      	str	r3, [r1, #8]
 8000b7e:	e7d4      	b.n	8000b2a <UART_SetConfig+0x10e>
 8000b80:	00a037a0 	adceq	r3, r0, r0, lsr #15
 8000b84:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
 8000b88:	40011000 	andmi	r1, r1, r0
 8000b8c:	51eb851f 	mvnpl	r8, pc, lsl r5

08000b90 <UART_WaitOnFlagUntilTimeout>:
{
 8000b90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000b94:	b083      	sub	sp, #12
 8000b96:	4605      	mov	r5, r0
 8000b98:	460e      	mov	r6, r1
 8000b9a:	4617      	mov	r7, r2
 8000b9c:	4699      	mov	r9, r3
 8000b9e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8000ba2:	682c      	ldr	r4, [r5, #0]
 8000ba4:	6824      	ldr	r4, [r4, #0]
 8000ba6:	ea36 0304 	bics.w	r3, r6, r4
 8000baa:	bf0c      	ite	eq
 8000bac:	f04f 0c01 	moveq.w	ip, #1
 8000bb0:	f04f 0c00 	movne.w	ip, #0
 8000bb4:	45bc      	cmp	ip, r7
 8000bb6:	d128      	bne.n	8000c0a <UART_WaitOnFlagUntilTimeout+0x7a>
    if (Timeout != HAL_MAX_DELAY)
 8000bb8:	f1b8 3fff 	cmp.w	r8, #4294967295
 8000bbc:	d0f1      	beq.n	8000ba2 <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8000bbe:	f000 fdcd 	bl	800175c <HAL_GetTick>
 8000bc2:	eba0 0009 	sub.w	r0, r0, r9
 8000bc6:	4540      	cmp	r0, r8
 8000bc8:	d823      	bhi.n	8000c12 <UART_WaitOnFlagUntilTimeout+0x82>
 8000bca:	f1b8 0f00 	cmp.w	r8, #0
 8000bce:	d022      	beq.n	8000c16 <UART_WaitOnFlagUntilTimeout+0x86>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 8000bd0:	682b      	ldr	r3, [r5, #0]
 8000bd2:	68da      	ldr	r2, [r3, #12]
 8000bd4:	f012 0f04 	tst.w	r2, #4
 8000bd8:	d0e3      	beq.n	8000ba2 <UART_WaitOnFlagUntilTimeout+0x12>
 8000bda:	2e80      	cmp	r6, #128	; 0x80
 8000bdc:	d0e1      	beq.n	8000ba2 <UART_WaitOnFlagUntilTimeout+0x12>
 8000bde:	2e40      	cmp	r6, #64	; 0x40
 8000be0:	d0df      	beq.n	8000ba2 <UART_WaitOnFlagUntilTimeout+0x12>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8000be2:	681a      	ldr	r2, [r3, #0]
 8000be4:	f012 0f08 	tst.w	r2, #8
 8000be8:	d0db      	beq.n	8000ba2 <UART_WaitOnFlagUntilTimeout+0x12>
          __HAL_UART_CLEAR_OREFLAG(huart);
 8000bea:	2400      	movs	r4, #0
 8000bec:	9401      	str	r4, [sp, #4]
 8000bee:	681a      	ldr	r2, [r3, #0]
 8000bf0:	9201      	str	r2, [sp, #4]
 8000bf2:	685b      	ldr	r3, [r3, #4]
 8000bf4:	9301      	str	r3, [sp, #4]
 8000bf6:	9b01      	ldr	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 8000bf8:	4628      	mov	r0, r5
 8000bfa:	f7ff feb1 	bl	8000960 <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 8000bfe:	2308      	movs	r3, #8
 8000c00:	646b      	str	r3, [r5, #68]	; 0x44
          __HAL_UNLOCK(huart);
 8000c02:	f885 4040 	strb.w	r4, [r5, #64]	; 0x40
          return HAL_ERROR;
 8000c06:	2001      	movs	r0, #1
 8000c08:	e000      	b.n	8000c0c <UART_WaitOnFlagUntilTimeout+0x7c>
  return HAL_OK;
 8000c0a:	2000      	movs	r0, #0
}
 8000c0c:	b003      	add	sp, #12
 8000c0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        return HAL_TIMEOUT;
 8000c12:	2003      	movs	r0, #3
 8000c14:	e7fa      	b.n	8000c0c <UART_WaitOnFlagUntilTimeout+0x7c>
 8000c16:	2003      	movs	r0, #3
 8000c18:	e7f8      	b.n	8000c0c <UART_WaitOnFlagUntilTimeout+0x7c>
	...

08000c1c <HAL_UART_Init>:
  if (huart == NULL)
 8000c1c:	2800      	cmp	r0, #0
 8000c1e:	f000 808c 	beq.w	8000d3a <HAL_UART_Init+0x11e>
{
 8000c22:	b510      	push	{r4, lr}
 8000c24:	4604      	mov	r4, r0
  if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 8000c26:	6983      	ldr	r3, [r0, #24]
 8000c28:	2b00      	cmp	r3, #0
 8000c2a:	d056      	beq.n	8000cda <HAL_UART_Init+0xbe>
    assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 8000c2c:	6803      	ldr	r3, [r0, #0]
 8000c2e:	4a44      	ldr	r2, [pc, #272]	; (8000d40 <HAL_UART_Init+0x124>)
 8000c30:	4293      	cmp	r3, r2
 8000c32:	d010      	beq.n	8000c56 <HAL_UART_Init+0x3a>
 8000c34:	f5a2 424c 	sub.w	r2, r2, #52224	; 0xcc00
 8000c38:	4293      	cmp	r3, r2
 8000c3a:	d00c      	beq.n	8000c56 <HAL_UART_Init+0x3a>
 8000c3c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000c40:	4293      	cmp	r3, r2
 8000c42:	d008      	beq.n	8000c56 <HAL_UART_Init+0x3a>
 8000c44:	f502 424c 	add.w	r2, r2, #52224	; 0xcc00
 8000c48:	4293      	cmp	r3, r2
 8000c4a:	d004      	beq.n	8000c56 <HAL_UART_Init+0x3a>
 8000c4c:	f240 1173 	movw	r1, #371	; 0x173
 8000c50:	483c      	ldr	r0, [pc, #240]	; (8000d44 <HAL_UART_Init+0x128>)
 8000c52:	f7ff fddd 	bl	8000810 <assert_failed>
    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 8000c56:	69a3      	ldr	r3, [r4, #24]
 8000c58:	b143      	cbz	r3, 8000c6c <HAL_UART_Init+0x50>
 8000c5a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000c5e:	d005      	beq.n	8000c6c <HAL_UART_Init+0x50>
 8000c60:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000c64:	d002      	beq.n	8000c6c <HAL_UART_Init+0x50>
 8000c66:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8000c6a:	d130      	bne.n	8000cce <HAL_UART_Init+0xb2>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 8000c6c:	68a3      	ldr	r3, [r4, #8]
 8000c6e:	b113      	cbz	r3, 8000c76 <HAL_UART_Init+0x5a>
 8000c70:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000c74:	d14f      	bne.n	8000d16 <HAL_UART_Init+0xfa>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8000c76:	69e3      	ldr	r3, [r4, #28]
 8000c78:	b113      	cbz	r3, 8000c80 <HAL_UART_Init+0x64>
 8000c7a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8000c7e:	d150      	bne.n	8000d22 <HAL_UART_Init+0x106>
  if (huart->gState == HAL_UART_STATE_RESET)
 8000c80:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
 8000c84:	2b00      	cmp	r3, #0
 8000c86:	d052      	beq.n	8000d2e <HAL_UART_Init+0x112>
  huart->gState = HAL_UART_STATE_BUSY;
 8000c88:	2324      	movs	r3, #36	; 0x24
 8000c8a:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UART_DISABLE(huart);
 8000c8e:	6822      	ldr	r2, [r4, #0]
 8000c90:	68d3      	ldr	r3, [r2, #12]
 8000c92:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000c96:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8000c98:	4620      	mov	r0, r4
 8000c9a:	f7ff febf 	bl	8000a1c <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8000c9e:	6822      	ldr	r2, [r4, #0]
 8000ca0:	6913      	ldr	r3, [r2, #16]
 8000ca2:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8000ca6:	6113      	str	r3, [r2, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8000ca8:	6822      	ldr	r2, [r4, #0]
 8000caa:	6953      	ldr	r3, [r2, #20]
 8000cac:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 8000cb0:	6153      	str	r3, [r2, #20]
  __HAL_UART_ENABLE(huart);
 8000cb2:	6822      	ldr	r2, [r4, #0]
 8000cb4:	68d3      	ldr	r3, [r2, #12]
 8000cb6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000cba:	60d3      	str	r3, [r2, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000cbc:	2000      	movs	r0, #0
 8000cbe:	6460      	str	r0, [r4, #68]	; 0x44
  huart->gState = HAL_UART_STATE_READY;
 8000cc0:	2320      	movs	r3, #32
 8000cc2:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8000cc6:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8000cca:	6360      	str	r0, [r4, #52]	; 0x34
}
 8000ccc:	bd10      	pop	{r4, pc}
    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 8000cce:	f44f 71ba 	mov.w	r1, #372	; 0x174
 8000cd2:	481c      	ldr	r0, [pc, #112]	; (8000d44 <HAL_UART_Init+0x128>)
 8000cd4:	f7ff fd9c 	bl	8000810 <assert_failed>
 8000cd8:	e7c8      	b.n	8000c6c <HAL_UART_Init+0x50>
    assert_param(IS_UART_INSTANCE(huart->Instance));
 8000cda:	6803      	ldr	r3, [r0, #0]
 8000cdc:	4a18      	ldr	r2, [pc, #96]	; (8000d40 <HAL_UART_Init+0x124>)
 8000cde:	4293      	cmp	r3, r2
 8000ce0:	d0c4      	beq.n	8000c6c <HAL_UART_Init+0x50>
 8000ce2:	f5a2 424c 	sub.w	r2, r2, #52224	; 0xcc00
 8000ce6:	4293      	cmp	r3, r2
 8000ce8:	d0c0      	beq.n	8000c6c <HAL_UART_Init+0x50>
 8000cea:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000cee:	4293      	cmp	r3, r2
 8000cf0:	d0bc      	beq.n	8000c6c <HAL_UART_Init+0x50>
 8000cf2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000cf6:	4293      	cmp	r3, r2
 8000cf8:	d0b8      	beq.n	8000c6c <HAL_UART_Init+0x50>
 8000cfa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000cfe:	4293      	cmp	r3, r2
 8000d00:	d0b4      	beq.n	8000c6c <HAL_UART_Init+0x50>
 8000d02:	f502 4244 	add.w	r2, r2, #50176	; 0xc400
 8000d06:	4293      	cmp	r3, r2
 8000d08:	d0b0      	beq.n	8000c6c <HAL_UART_Init+0x50>
 8000d0a:	f44f 71bc 	mov.w	r1, #376	; 0x178
 8000d0e:	480d      	ldr	r0, [pc, #52]	; (8000d44 <HAL_UART_Init+0x128>)
 8000d10:	f7ff fd7e 	bl	8000810 <assert_failed>
 8000d14:	e7aa      	b.n	8000c6c <HAL_UART_Init+0x50>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 8000d16:	f44f 71bd 	mov.w	r1, #378	; 0x17a
 8000d1a:	480a      	ldr	r0, [pc, #40]	; (8000d44 <HAL_UART_Init+0x128>)
 8000d1c:	f7ff fd78 	bl	8000810 <assert_failed>
 8000d20:	e7a9      	b.n	8000c76 <HAL_UART_Init+0x5a>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8000d22:	f240 117b 	movw	r1, #379	; 0x17b
 8000d26:	4807      	ldr	r0, [pc, #28]	; (8000d44 <HAL_UART_Init+0x128>)
 8000d28:	f7ff fd72 	bl	8000810 <assert_failed>
 8000d2c:	e7a8      	b.n	8000c80 <HAL_UART_Init+0x64>
    huart->Lock = HAL_UNLOCKED;
 8000d2e:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
    HAL_UART_MspInit(huart);
 8000d32:	4620      	mov	r0, r4
 8000d34:	f7ff fdb8 	bl	80008a8 <HAL_UART_MspInit>
 8000d38:	e7a6      	b.n	8000c88 <HAL_UART_Init+0x6c>
    return HAL_ERROR;
 8000d3a:	2001      	movs	r0, #1
}
 8000d3c:	4770      	bx	lr
 8000d3e:	bf00      	nop
 8000d40:	40011000 	andmi	r1, r1, r0
 8000d44:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}

08000d48 <HAL_UART_Transmit>:
{
 8000d48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d4c:	b082      	sub	sp, #8
 8000d4e:	461e      	mov	r6, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8000d50:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8000d54:	b2db      	uxtb	r3, r3
 8000d56:	2b20      	cmp	r3, #32
 8000d58:	d156      	bne.n	8000e08 <HAL_UART_Transmit+0xc0>
 8000d5a:	4604      	mov	r4, r0
 8000d5c:	460d      	mov	r5, r1
 8000d5e:	4690      	mov	r8, r2
    if ((pData == NULL) || (Size == 0U))
 8000d60:	2900      	cmp	r1, #0
 8000d62:	d055      	beq.n	8000e10 <HAL_UART_Transmit+0xc8>
 8000d64:	b90a      	cbnz	r2, 8000d6a <HAL_UART_Transmit+0x22>
      return  HAL_ERROR;
 8000d66:	2001      	movs	r0, #1
 8000d68:	e04f      	b.n	8000e0a <HAL_UART_Transmit+0xc2>
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000d6a:	2300      	movs	r3, #0
 8000d6c:	6443      	str	r3, [r0, #68]	; 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8000d6e:	2321      	movs	r3, #33	; 0x21
 8000d70:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
    tickstart = HAL_GetTick();
 8000d74:	f000 fcf2 	bl	800175c <HAL_GetTick>
 8000d78:	4607      	mov	r7, r0
    huart->TxXferSize = Size;
 8000d7a:	f8a4 8024 	strh.w	r8, [r4, #36]	; 0x24
    huart->TxXferCount = Size;
 8000d7e:	f8a4 8026 	strh.w	r8, [r4, #38]	; 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000d82:	68a3      	ldr	r3, [r4, #8]
 8000d84:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000d88:	d002      	beq.n	8000d90 <HAL_UART_Transmit+0x48>
      pdata16bits = NULL;
 8000d8a:	f04f 0800 	mov.w	r8, #0
 8000d8e:	e014      	b.n	8000dba <HAL_UART_Transmit+0x72>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000d90:	6923      	ldr	r3, [r4, #16]
 8000d92:	b32b      	cbz	r3, 8000de0 <HAL_UART_Transmit+0x98>
      pdata16bits = NULL;
 8000d94:	f04f 0800 	mov.w	r8, #0
 8000d98:	e00f      	b.n	8000dba <HAL_UART_Transmit+0x72>
        huart->gState = HAL_UART_STATE_READY;
 8000d9a:	2320      	movs	r3, #32
 8000d9c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        return HAL_TIMEOUT;
 8000da0:	2003      	movs	r0, #3
 8000da2:	e032      	b.n	8000e0a <HAL_UART_Transmit+0xc2>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8000da4:	f838 3b02 	ldrh.w	r3, [r8], #2
 8000da8:	6822      	ldr	r2, [r4, #0]
 8000daa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000dae:	6053      	str	r3, [r2, #4]
      huart->TxXferCount--;
 8000db0:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8000db2:	b292      	uxth	r2, r2
 8000db4:	3a01      	subs	r2, #1
 8000db6:	b292      	uxth	r2, r2
 8000db8:	84e2      	strh	r2, [r4, #38]	; 0x26
    while (huart->TxXferCount > 0U)
 8000dba:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8000dbc:	b29b      	uxth	r3, r3
 8000dbe:	b193      	cbz	r3, 8000de6 <HAL_UART_Transmit+0x9e>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8000dc0:	9600      	str	r6, [sp, #0]
 8000dc2:	463b      	mov	r3, r7
 8000dc4:	2200      	movs	r2, #0
 8000dc6:	2180      	movs	r1, #128	; 0x80
 8000dc8:	4620      	mov	r0, r4
 8000dca:	f7ff fee1 	bl	8000b90 <UART_WaitOnFlagUntilTimeout>
 8000dce:	2800      	cmp	r0, #0
 8000dd0:	d1e3      	bne.n	8000d9a <HAL_UART_Transmit+0x52>
      if (pdata8bits == NULL)
 8000dd2:	2d00      	cmp	r5, #0
 8000dd4:	d0e6      	beq.n	8000da4 <HAL_UART_Transmit+0x5c>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8000dd6:	f815 2b01 	ldrb.w	r2, [r5], #1
 8000dda:	6823      	ldr	r3, [r4, #0]
 8000ddc:	605a      	str	r2, [r3, #4]
        pdata8bits++;
 8000dde:	e7e7      	b.n	8000db0 <HAL_UART_Transmit+0x68>
      pdata16bits = (const uint16_t *) pData;
 8000de0:	46a8      	mov	r8, r5
      pdata8bits  = NULL;
 8000de2:	2500      	movs	r5, #0
 8000de4:	e7e9      	b.n	8000dba <HAL_UART_Transmit+0x72>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8000de6:	9600      	str	r6, [sp, #0]
 8000de8:	463b      	mov	r3, r7
 8000dea:	2200      	movs	r2, #0
 8000dec:	2140      	movs	r1, #64	; 0x40
 8000dee:	4620      	mov	r0, r4
 8000df0:	f7ff fece 	bl	8000b90 <UART_WaitOnFlagUntilTimeout>
 8000df4:	b918      	cbnz	r0, 8000dfe <HAL_UART_Transmit+0xb6>
    huart->gState = HAL_UART_STATE_READY;
 8000df6:	2320      	movs	r3, #32
 8000df8:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    return HAL_OK;
 8000dfc:	e005      	b.n	8000e0a <HAL_UART_Transmit+0xc2>
      huart->gState = HAL_UART_STATE_READY;
 8000dfe:	2320      	movs	r3, #32
 8000e00:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
      return HAL_TIMEOUT;
 8000e04:	2003      	movs	r0, #3
 8000e06:	e000      	b.n	8000e0a <HAL_UART_Transmit+0xc2>
    return HAL_BUSY;
 8000e08:	2002      	movs	r0, #2
}
 8000e0a:	b002      	add	sp, #8
 8000e0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      return  HAL_ERROR;
 8000e10:	2001      	movs	r0, #1
 8000e12:	e7fa      	b.n	8000e0a <HAL_UART_Transmit+0xc2>

08000e14 <HAL_UART_TxCpltCallback>:
}
 8000e14:	4770      	bx	lr

08000e16 <UART_EndTransmit_IT>:
{
 8000e16:	b508      	push	{r3, lr}
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8000e18:	6801      	ldr	r1, [r0, #0]
 8000e1a:	68ca      	ldr	r2, [r1, #12]
 8000e1c:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8000e20:	60ca      	str	r2, [r1, #12]
  huart->gState = HAL_UART_STATE_READY;
 8000e22:	2220      	movs	r2, #32
 8000e24:	f880 2041 	strb.w	r2, [r0, #65]	; 0x41
  HAL_UART_TxCpltCallback(huart);
 8000e28:	f7ff fff4 	bl	8000e14 <HAL_UART_TxCpltCallback>
}
 8000e2c:	2000      	movs	r0, #0
 8000e2e:	bd08      	pop	{r3, pc}

08000e30 <HAL_UART_RxCpltCallback>:
}
 8000e30:	4770      	bx	lr

08000e32 <HAL_UART_ErrorCallback>:
}
 8000e32:	4770      	bx	lr

08000e34 <UART_DMAAbortOnError>:
{
 8000e34:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8000e36:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 8000e38:	2300      	movs	r3, #0
 8000e3a:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 8000e3c:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 8000e3e:	f7ff fff8 	bl	8000e32 <HAL_UART_ErrorCallback>
}
 8000e42:	bd08      	pop	{r3, pc}

08000e44 <HAL_UARTEx_RxEventCallback>:
}
 8000e44:	4770      	bx	lr

08000e46 <UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8000e46:	f890 3042 	ldrb.w	r3, [r0, #66]	; 0x42
 8000e4a:	b2db      	uxtb	r3, r3
 8000e4c:	2b22      	cmp	r3, #34	; 0x22
 8000e4e:	d169      	bne.n	8000f24 <UART_Receive_IT+0xde>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000e50:	6883      	ldr	r3, [r0, #8]
 8000e52:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000e56:	d04f      	beq.n	8000ef8 <UART_Receive_IT+0xb2>
      pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 8000e58:	6a82      	ldr	r2, [r0, #40]	; 0x28
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 8000e5a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000e5e:	d004      	beq.n	8000e6a <UART_Receive_IT+0x24>
 8000e60:	2b00      	cmp	r3, #0
 8000e62:	d156      	bne.n	8000f12 <UART_Receive_IT+0xcc>
 8000e64:	6903      	ldr	r3, [r0, #16]
 8000e66:	2b00      	cmp	r3, #0
 8000e68:	d153      	bne.n	8000f12 <UART_Receive_IT+0xcc>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8000e6a:	6803      	ldr	r3, [r0, #0]
 8000e6c:	685b      	ldr	r3, [r3, #4]
 8000e6e:	7013      	strb	r3, [r2, #0]
      huart->pRxBuffPtr += 1U;
 8000e70:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000e72:	3301      	adds	r3, #1
 8000e74:	6283      	str	r3, [r0, #40]	; 0x28
    if (--huart->RxXferCount == 0U)
 8000e76:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8000e78:	b29b      	uxth	r3, r3
 8000e7a:	3b01      	subs	r3, #1
 8000e7c:	b29b      	uxth	r3, r3
 8000e7e:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8000e80:	2b00      	cmp	r3, #0
 8000e82:	d151      	bne.n	8000f28 <UART_Receive_IT+0xe2>
{
 8000e84:	b500      	push	{lr}
 8000e86:	b083      	sub	sp, #12
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 8000e88:	6802      	ldr	r2, [r0, #0]
 8000e8a:	68d3      	ldr	r3, [r2, #12]
 8000e8c:	f023 0320 	bic.w	r3, r3, #32
 8000e90:	60d3      	str	r3, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8000e92:	6802      	ldr	r2, [r0, #0]
 8000e94:	68d3      	ldr	r3, [r2, #12]
 8000e96:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000e9a:	60d3      	str	r3, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8000e9c:	6802      	ldr	r2, [r0, #0]
 8000e9e:	6953      	ldr	r3, [r2, #20]
 8000ea0:	f023 0301 	bic.w	r3, r3, #1
 8000ea4:	6153      	str	r3, [r2, #20]
      huart->RxState = HAL_UART_STATE_READY;
 8000ea6:	2320      	movs	r3, #32
 8000ea8:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8000eac:	2300      	movs	r3, #0
 8000eae:	6343      	str	r3, [r0, #52]	; 0x34
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8000eb0:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8000eb2:	2b01      	cmp	r3, #1
 8000eb4:	d133      	bne.n	8000f1e <UART_Receive_IT+0xd8>
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8000eb6:	2300      	movs	r3, #0
 8000eb8:	6303      	str	r3, [r0, #48]	; 0x30
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8000eba:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000ebc:	f102 030c 	add.w	r3, r2, #12
 8000ec0:	e853 3f00 	ldrex	r3, [r3]
 8000ec4:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000ec8:	320c      	adds	r2, #12
 8000eca:	e842 3100 	strex	r1, r3, [r2]
 8000ece:	2900      	cmp	r1, #0
 8000ed0:	d1f3      	bne.n	8000eba <UART_Receive_IT+0x74>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 8000ed2:	6803      	ldr	r3, [r0, #0]
 8000ed4:	681a      	ldr	r2, [r3, #0]
 8000ed6:	f012 0f10 	tst.w	r2, #16
 8000eda:	d006      	beq.n	8000eea <UART_Receive_IT+0xa4>
          __HAL_UART_CLEAR_IDLEFLAG(huart);
 8000edc:	2200      	movs	r2, #0
 8000ede:	9201      	str	r2, [sp, #4]
 8000ee0:	681a      	ldr	r2, [r3, #0]
 8000ee2:	9201      	str	r2, [sp, #4]
 8000ee4:	685b      	ldr	r3, [r3, #4]
 8000ee6:	9301      	str	r3, [sp, #4]
 8000ee8:	9b01      	ldr	r3, [sp, #4]
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8000eea:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8000eec:	f7ff ffaa 	bl	8000e44 <HAL_UARTEx_RxEventCallback>
      return HAL_OK;
 8000ef0:	2000      	movs	r0, #0
}
 8000ef2:	b003      	add	sp, #12
 8000ef4:	f85d fb04 	ldr.w	pc, [sp], #4
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000ef8:	6902      	ldr	r2, [r0, #16]
 8000efa:	2a00      	cmp	r2, #0
 8000efc:	d1ac      	bne.n	8000e58 <UART_Receive_IT+0x12>
      pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 8000efe:	6a82      	ldr	r2, [r0, #40]	; 0x28
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8000f00:	6803      	ldr	r3, [r0, #0]
 8000f02:	685b      	ldr	r3, [r3, #4]
 8000f04:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000f08:	8013      	strh	r3, [r2, #0]
      huart->pRxBuffPtr += 2U;
 8000f0a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000f0c:	3302      	adds	r3, #2
 8000f0e:	6283      	str	r3, [r0, #40]	; 0x28
 8000f10:	e7b1      	b.n	8000e76 <UART_Receive_IT+0x30>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8000f12:	6803      	ldr	r3, [r0, #0]
 8000f14:	685b      	ldr	r3, [r3, #4]
 8000f16:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000f1a:	7013      	strb	r3, [r2, #0]
 8000f1c:	e7a8      	b.n	8000e70 <UART_Receive_IT+0x2a>
        HAL_UART_RxCpltCallback(huart);
 8000f1e:	f7ff ff87 	bl	8000e30 <HAL_UART_RxCpltCallback>
 8000f22:	e7e5      	b.n	8000ef0 <UART_Receive_IT+0xaa>
    return HAL_BUSY;
 8000f24:	2002      	movs	r0, #2
 8000f26:	4770      	bx	lr
    return HAL_OK;
 8000f28:	2000      	movs	r0, #0
}
 8000f2a:	4770      	bx	lr

08000f2c <HAL_UART_IRQHandler>:
{
 8000f2c:	b530      	push	{r4, r5, lr}
 8000f2e:	b083      	sub	sp, #12
 8000f30:	4604      	mov	r4, r0
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8000f32:	6802      	ldr	r2, [r0, #0]
 8000f34:	6813      	ldr	r3, [r2, #0]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8000f36:	68d0      	ldr	r0, [r2, #12]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8000f38:	6951      	ldr	r1, [r2, #20]
  if (errorflags == RESET)
 8000f3a:	f013 050f 	ands.w	r5, r3, #15
 8000f3e:	d105      	bne.n	8000f4c <HAL_UART_IRQHandler+0x20>
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8000f40:	f013 0f20 	tst.w	r3, #32
 8000f44:	d002      	beq.n	8000f4c <HAL_UART_IRQHandler+0x20>
 8000f46:	f010 0f20 	tst.w	r0, #32
 8000f4a:	d119      	bne.n	8000f80 <HAL_UART_IRQHandler+0x54>
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 8000f4c:	b12d      	cbz	r5, 8000f5a <HAL_UART_IRQHandler+0x2e>
 8000f4e:	f011 0101 	ands.w	r1, r1, #1
 8000f52:	d119      	bne.n	8000f88 <HAL_UART_IRQHandler+0x5c>
                                || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8000f54:	f410 7f90 	tst.w	r0, #288	; 0x120
 8000f58:	d116      	bne.n	8000f88 <HAL_UART_IRQHandler+0x5c>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8000f5a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8000f5c:	2901      	cmp	r1, #1
 8000f5e:	d07d      	beq.n	800105c <HAL_UART_IRQHandler+0x130>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 8000f60:	f013 0f80 	tst.w	r3, #128	; 0x80
 8000f64:	d003      	beq.n	8000f6e <HAL_UART_IRQHandler+0x42>
 8000f66:	f010 0f80 	tst.w	r0, #128	; 0x80
 8000f6a:	f040 8119 	bne.w	80011a0 <HAL_UART_IRQHandler+0x274>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 8000f6e:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000f72:	d003      	beq.n	8000f7c <HAL_UART_IRQHandler+0x50>
 8000f74:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000f78:	f040 8116 	bne.w	80011a8 <HAL_UART_IRQHandler+0x27c>
}
 8000f7c:	b003      	add	sp, #12
 8000f7e:	bd30      	pop	{r4, r5, pc}
      UART_Receive_IT(huart);
 8000f80:	4620      	mov	r0, r4
 8000f82:	f7ff ff60 	bl	8000e46 <UART_Receive_IT>
      return;
 8000f86:	e7f9      	b.n	8000f7c <HAL_UART_IRQHandler+0x50>
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8000f88:	f013 0f01 	tst.w	r3, #1
 8000f8c:	d006      	beq.n	8000f9c <HAL_UART_IRQHandler+0x70>
 8000f8e:	f410 7f80 	tst.w	r0, #256	; 0x100
 8000f92:	d003      	beq.n	8000f9c <HAL_UART_IRQHandler+0x70>
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8000f94:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000f96:	f042 0201 	orr.w	r2, r2, #1
 8000f9a:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8000f9c:	f013 0f04 	tst.w	r3, #4
 8000fa0:	d004      	beq.n	8000fac <HAL_UART_IRQHandler+0x80>
 8000fa2:	b119      	cbz	r1, 8000fac <HAL_UART_IRQHandler+0x80>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8000fa4:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000fa6:	f042 0202 	orr.w	r2, r2, #2
 8000faa:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8000fac:	f013 0f02 	tst.w	r3, #2
 8000fb0:	d004      	beq.n	8000fbc <HAL_UART_IRQHandler+0x90>
 8000fb2:	b119      	cbz	r1, 8000fbc <HAL_UART_IRQHandler+0x90>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8000fb4:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000fb6:	f042 0204 	orr.w	r2, r2, #4
 8000fba:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 8000fbc:	f013 0f08 	tst.w	r3, #8
 8000fc0:	d007      	beq.n	8000fd2 <HAL_UART_IRQHandler+0xa6>
 8000fc2:	f010 0f20 	tst.w	r0, #32
 8000fc6:	d100      	bne.n	8000fca <HAL_UART_IRQHandler+0x9e>
                                                 || ((cr3its & USART_CR3_EIE) != RESET)))
 8000fc8:	b119      	cbz	r1, 8000fd2 <HAL_UART_IRQHandler+0xa6>
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8000fca:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000fcc:	f042 0208 	orr.w	r2, r2, #8
 8000fd0:	6462      	str	r2, [r4, #68]	; 0x44
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8000fd2:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000fd4:	2a00      	cmp	r2, #0
 8000fd6:	d0d1      	beq.n	8000f7c <HAL_UART_IRQHandler+0x50>
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8000fd8:	f013 0f20 	tst.w	r3, #32
 8000fdc:	d002      	beq.n	8000fe4 <HAL_UART_IRQHandler+0xb8>
 8000fde:	f010 0f20 	tst.w	r0, #32
 8000fe2:	d129      	bne.n	8001038 <HAL_UART_IRQHandler+0x10c>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8000fe4:	6823      	ldr	r3, [r4, #0]
 8000fe6:	695b      	ldr	r3, [r3, #20]
 8000fe8:	f003 0340 	and.w	r3, r3, #64	; 0x40
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8000fec:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000fee:	f012 0f08 	tst.w	r2, #8
 8000ff2:	d100      	bne.n	8000ff6 <HAL_UART_IRQHandler+0xca>
 8000ff4:	b363      	cbz	r3, 8001050 <HAL_UART_IRQHandler+0x124>
        UART_EndRxTransfer(huart);
 8000ff6:	4620      	mov	r0, r4
 8000ff8:	f7ff fcb2 	bl	8000960 <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8000ffc:	6823      	ldr	r3, [r4, #0]
 8000ffe:	695b      	ldr	r3, [r3, #20]
 8001000:	f013 0f40 	tst.w	r3, #64	; 0x40
 8001004:	d020      	beq.n	8001048 <HAL_UART_IRQHandler+0x11c>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8001006:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001008:	f102 0314 	add.w	r3, r2, #20
 800100c:	e853 3f00 	ldrex	r3, [r3]
 8001010:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001014:	3214      	adds	r2, #20
 8001016:	e842 3100 	strex	r1, r3, [r2]
 800101a:	2900      	cmp	r1, #0
 800101c:	d1f3      	bne.n	8001006 <HAL_UART_IRQHandler+0xda>
          if (huart->hdmarx != NULL)
 800101e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8001020:	b173      	cbz	r3, 8001040 <HAL_UART_IRQHandler+0x114>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8001022:	4a63      	ldr	r2, [pc, #396]	; (80011b0 <HAL_UART_IRQHandler+0x284>)
 8001024:	651a      	str	r2, [r3, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8001026:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8001028:	f000 faa8 	bl	800157c <HAL_DMA_Abort_IT>
 800102c:	2800      	cmp	r0, #0
 800102e:	d0a5      	beq.n	8000f7c <HAL_UART_IRQHandler+0x50>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8001030:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8001032:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8001034:	4798      	blx	r3
 8001036:	e7a1      	b.n	8000f7c <HAL_UART_IRQHandler+0x50>
        UART_Receive_IT(huart);
 8001038:	4620      	mov	r0, r4
 800103a:	f7ff ff04 	bl	8000e46 <UART_Receive_IT>
 800103e:	e7d1      	b.n	8000fe4 <HAL_UART_IRQHandler+0xb8>
            HAL_UART_ErrorCallback(huart);
 8001040:	4620      	mov	r0, r4
 8001042:	f7ff fef6 	bl	8000e32 <HAL_UART_ErrorCallback>
 8001046:	e799      	b.n	8000f7c <HAL_UART_IRQHandler+0x50>
          HAL_UART_ErrorCallback(huart);
 8001048:	4620      	mov	r0, r4
 800104a:	f7ff fef2 	bl	8000e32 <HAL_UART_ErrorCallback>
 800104e:	e795      	b.n	8000f7c <HAL_UART_IRQHandler+0x50>
        HAL_UART_ErrorCallback(huart);
 8001050:	4620      	mov	r0, r4
 8001052:	f7ff feee 	bl	8000e32 <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8001056:	2300      	movs	r3, #0
 8001058:	6463      	str	r3, [r4, #68]	; 0x44
    return;
 800105a:	e78f      	b.n	8000f7c <HAL_UART_IRQHandler+0x50>
      && ((isrflags & USART_SR_IDLE) != 0U)
 800105c:	f013 0f10 	tst.w	r3, #16
 8001060:	f43f af7e 	beq.w	8000f60 <HAL_UART_IRQHandler+0x34>
      && ((cr1its & USART_SR_IDLE) != 0U))
 8001064:	f010 0f10 	tst.w	r0, #16
 8001068:	f43f af7a 	beq.w	8000f60 <HAL_UART_IRQHandler+0x34>
    __HAL_UART_CLEAR_IDLEFLAG(huart);
 800106c:	2300      	movs	r3, #0
 800106e:	9301      	str	r3, [sp, #4]
 8001070:	6813      	ldr	r3, [r2, #0]
 8001072:	9301      	str	r3, [sp, #4]
 8001074:	6853      	ldr	r3, [r2, #4]
 8001076:	9301      	str	r3, [sp, #4]
 8001078:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 800107a:	6953      	ldr	r3, [r2, #20]
 800107c:	f013 0f40 	tst.w	r3, #64	; 0x40
 8001080:	d052      	beq.n	8001128 <HAL_UART_IRQHandler+0x1fc>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8001082:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8001084:	6813      	ldr	r3, [r2, #0]
 8001086:	685b      	ldr	r3, [r3, #4]
 8001088:	b29b      	uxth	r3, r3
      if ((nb_remaining_rx_data > 0U)
 800108a:	2b00      	cmp	r3, #0
 800108c:	f43f af76 	beq.w	8000f7c <HAL_UART_IRQHandler+0x50>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8001090:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8001092:	4299      	cmp	r1, r3
 8001094:	f67f af72 	bls.w	8000f7c <HAL_UART_IRQHandler+0x50>
        huart->RxXferCount = nb_remaining_rx_data;
 8001098:	85e3      	strh	r3, [r4, #46]	; 0x2e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 800109a:	69d3      	ldr	r3, [r2, #28]
 800109c:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80010a0:	d037      	beq.n	8001112 <HAL_UART_IRQHandler+0x1e6>
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 80010a2:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80010a4:	f102 030c 	add.w	r3, r2, #12
 80010a8:	e853 3f00 	ldrex	r3, [r3]
 80010ac:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80010b0:	320c      	adds	r2, #12
 80010b2:	e842 3100 	strex	r1, r3, [r2]
 80010b6:	2900      	cmp	r1, #0
 80010b8:	d1f3      	bne.n	80010a2 <HAL_UART_IRQHandler+0x176>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 80010ba:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80010bc:	f102 0314 	add.w	r3, r2, #20
 80010c0:	e853 3f00 	ldrex	r3, [r3]
 80010c4:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80010c8:	3214      	adds	r2, #20
 80010ca:	e842 3100 	strex	r1, r3, [r2]
 80010ce:	2900      	cmp	r1, #0
 80010d0:	d1f3      	bne.n	80010ba <HAL_UART_IRQHandler+0x18e>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 80010d2:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80010d4:	f102 0314 	add.w	r3, r2, #20
 80010d8:	e853 3f00 	ldrex	r3, [r3]
 80010dc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80010e0:	3214      	adds	r2, #20
 80010e2:	e842 3100 	strex	r1, r3, [r2]
 80010e6:	2900      	cmp	r1, #0
 80010e8:	d1f3      	bne.n	80010d2 <HAL_UART_IRQHandler+0x1a6>
          huart->RxState = HAL_UART_STATE_READY;
 80010ea:	2320      	movs	r3, #32
 80010ec:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 80010f0:	2300      	movs	r3, #0
 80010f2:	6323      	str	r3, [r4, #48]	; 0x30
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 80010f4:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80010f6:	f102 030c 	add.w	r3, r2, #12
 80010fa:	e853 3f00 	ldrex	r3, [r3]
 80010fe:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001102:	320c      	adds	r2, #12
 8001104:	e842 3100 	strex	r1, r3, [r2]
 8001108:	2900      	cmp	r1, #0
 800110a:	d1f3      	bne.n	80010f4 <HAL_UART_IRQHandler+0x1c8>
          (void)HAL_DMA_Abort(huart->hdmarx);
 800110c:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800110e:	f000 f9eb 	bl	80014e8 <HAL_DMA_Abort>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8001112:	2302      	movs	r3, #2
 8001114:	6363      	str	r3, [r4, #52]	; 0x34
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8001116:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8001118:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800111a:	b29b      	uxth	r3, r3
 800111c:	1ac9      	subs	r1, r1, r3
 800111e:	b289      	uxth	r1, r1
 8001120:	4620      	mov	r0, r4
 8001122:	f7ff fe8f 	bl	8000e44 <HAL_UARTEx_RxEventCallback>
      return;
 8001126:	e729      	b.n	8000f7c <HAL_UART_IRQHandler+0x50>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8001128:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800112a:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800112c:	b29b      	uxth	r3, r3
 800112e:	1ac9      	subs	r1, r1, r3
 8001130:	b289      	uxth	r1, r1
      if ((huart->RxXferCount > 0U)
 8001132:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8001134:	b29b      	uxth	r3, r3
 8001136:	2b00      	cmp	r3, #0
 8001138:	f43f af20 	beq.w	8000f7c <HAL_UART_IRQHandler+0x50>
          && (nb_rx_data > 0U))
 800113c:	2900      	cmp	r1, #0
 800113e:	f43f af1d 	beq.w	8000f7c <HAL_UART_IRQHandler+0x50>
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8001142:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001144:	f102 030c 	add.w	r3, r2, #12
 8001148:	e853 3f00 	ldrex	r3, [r3]
 800114c:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001150:	320c      	adds	r2, #12
 8001152:	e842 3000 	strex	r0, r3, [r2]
 8001156:	2800      	cmp	r0, #0
 8001158:	d1f3      	bne.n	8001142 <HAL_UART_IRQHandler+0x216>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800115a:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800115c:	f102 0314 	add.w	r3, r2, #20
 8001160:	e853 3f00 	ldrex	r3, [r3]
 8001164:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001168:	3214      	adds	r2, #20
 800116a:	e842 3000 	strex	r0, r3, [r2]
 800116e:	2800      	cmp	r0, #0
 8001170:	d1f3      	bne.n	800115a <HAL_UART_IRQHandler+0x22e>
        huart->RxState = HAL_UART_STATE_READY;
 8001172:	2320      	movs	r3, #32
 8001174:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8001178:	2300      	movs	r3, #0
 800117a:	6323      	str	r3, [r4, #48]	; 0x30
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800117c:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800117e:	f102 030c 	add.w	r3, r2, #12
 8001182:	e853 3f00 	ldrex	r3, [r3]
 8001186:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800118a:	320c      	adds	r2, #12
 800118c:	e842 3000 	strex	r0, r3, [r2]
 8001190:	2800      	cmp	r0, #0
 8001192:	d1f3      	bne.n	800117c <HAL_UART_IRQHandler+0x250>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8001194:	2302      	movs	r3, #2
 8001196:	6363      	str	r3, [r4, #52]	; 0x34
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 8001198:	4620      	mov	r0, r4
 800119a:	f7ff fe53 	bl	8000e44 <HAL_UARTEx_RxEventCallback>
      return;
 800119e:	e6ed      	b.n	8000f7c <HAL_UART_IRQHandler+0x50>
    UART_Transmit_IT(huart);
 80011a0:	4620      	mov	r0, r4
 80011a2:	f7ff fc0b 	bl	80009bc <UART_Transmit_IT>
    return;
 80011a6:	e6e9      	b.n	8000f7c <HAL_UART_IRQHandler+0x50>
    UART_EndTransmit_IT(huart);
 80011a8:	4620      	mov	r0, r4
 80011aa:	f7ff fe34 	bl	8000e16 <UART_EndTransmit_IT>
    return;
 80011ae:	e6e5      	b.n	8000f7c <HAL_UART_IRQHandler+0x50>
 80011b0:	08000e35 	stmdaeq	r0, {r0, r2, r4, r5, r9, sl, fp}

080011b4 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 80011b4:	4b01      	ldr	r3, [pc, #4]	; (80011bc <HAL_RCC_GetHCLKFreq+0x8>)
 80011b6:	6818      	ldr	r0, [r3, #0]
 80011b8:	4770      	bx	lr
 80011ba:	bf00      	nop
 80011bc:	20000008 	andcs	r0, r0, r8

080011c0 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80011c0:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80011c2:	f7ff fff7 	bl	80011b4 <HAL_RCC_GetHCLKFreq>
 80011c6:	4b04      	ldr	r3, [pc, #16]	; (80011d8 <HAL_RCC_GetPCLK1Freq+0x18>)
 80011c8:	689b      	ldr	r3, [r3, #8]
 80011ca:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80011ce:	4a03      	ldr	r2, [pc, #12]	; (80011dc <HAL_RCC_GetPCLK1Freq+0x1c>)
 80011d0:	5cd3      	ldrb	r3, [r2, r3]
}
 80011d2:	40d8      	lsrs	r0, r3
 80011d4:	bd08      	pop	{r3, pc}
 80011d6:	bf00      	nop
 80011d8:	40023800 	andmi	r3, r2, r0, lsl #16
 80011dc:	08002d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp, sp}

080011e0 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 80011e0:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80011e2:	f7ff ffe7 	bl	80011b4 <HAL_RCC_GetHCLKFreq>
 80011e6:	4b04      	ldr	r3, [pc, #16]	; (80011f8 <HAL_RCC_GetPCLK2Freq+0x18>)
 80011e8:	689b      	ldr	r3, [r3, #8]
 80011ea:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80011ee:	4a03      	ldr	r2, [pc, #12]	; (80011fc <HAL_RCC_GetPCLK2Freq+0x1c>)
 80011f0:	5cd3      	ldrb	r3, [r2, r3]
}
 80011f2:	40d8      	lsrs	r0, r3
 80011f4:	bd08      	pop	{r3, pc}
 80011f6:	bf00      	nop
 80011f8:	40023800 	andmi	r3, r2, r0, lsl #16
 80011fc:	08002d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp, sp}

08001200 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8001200:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001204:	b082      	sub	sp, #8
 8001206:	4607      	mov	r7, r0
 8001208:	460e      	mov	r6, r1
  uint32_t ioposition = 0x00U;
  uint32_t iocurrent = 0x00U;
  uint32_t temp = 0x00U;

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 800120a:	4b54      	ldr	r3, [pc, #336]	; (800135c <HAL_GPIO_Init+0x15c>)
 800120c:	4298      	cmp	r0, r3
 800120e:	d023      	beq.n	8001258 <HAL_GPIO_Init+0x58>
 8001210:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001214:	4298      	cmp	r0, r3
 8001216:	d01f      	beq.n	8001258 <HAL_GPIO_Init+0x58>
 8001218:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800121c:	4298      	cmp	r0, r3
 800121e:	d01b      	beq.n	8001258 <HAL_GPIO_Init+0x58>
 8001220:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001224:	4298      	cmp	r0, r3
 8001226:	d017      	beq.n	8001258 <HAL_GPIO_Init+0x58>
 8001228:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800122c:	4298      	cmp	r0, r3
 800122e:	d013      	beq.n	8001258 <HAL_GPIO_Init+0x58>
 8001230:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001234:	4298      	cmp	r0, r3
 8001236:	d00f      	beq.n	8001258 <HAL_GPIO_Init+0x58>
 8001238:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800123c:	4298      	cmp	r0, r3
 800123e:	d00b      	beq.n	8001258 <HAL_GPIO_Init+0x58>
 8001240:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001244:	4298      	cmp	r0, r3
 8001246:	d007      	beq.n	8001258 <HAL_GPIO_Init+0x58>
 8001248:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800124c:	4298      	cmp	r0, r3
 800124e:	d003      	beq.n	8001258 <HAL_GPIO_Init+0x58>
 8001250:	21ac      	movs	r1, #172	; 0xac
 8001252:	4843      	ldr	r0, [pc, #268]	; (8001360 <HAL_GPIO_Init+0x160>)
 8001254:	f7ff fadc 	bl	8000810 <assert_failed>
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 8001258:	6833      	ldr	r3, [r6, #0]
 800125a:	b29a      	uxth	r2, r3
 800125c:	b112      	cbz	r2, 8001264 <HAL_GPIO_Init+0x64>
 800125e:	0c1b      	lsrs	r3, r3, #16
 8001260:	041b      	lsls	r3, r3, #16
 8001262:	b11b      	cbz	r3, 800126c <HAL_GPIO_Init+0x6c>
 8001264:	21ad      	movs	r1, #173	; 0xad
 8001266:	483e      	ldr	r0, [pc, #248]	; (8001360 <HAL_GPIO_Init+0x160>)
 8001268:	f7ff fad2 	bl	8000810 <assert_failed>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 800126c:	6873      	ldr	r3, [r6, #4]
 800126e:	2b01      	cmp	r3, #1
 8001270:	d919      	bls.n	80012a6 <HAL_GPIO_Init+0xa6>
 8001272:	2b11      	cmp	r3, #17
 8001274:	d017      	beq.n	80012a6 <HAL_GPIO_Init+0xa6>
 8001276:	2b02      	cmp	r3, #2
 8001278:	d015      	beq.n	80012a6 <HAL_GPIO_Init+0xa6>
 800127a:	2b12      	cmp	r3, #18
 800127c:	d013      	beq.n	80012a6 <HAL_GPIO_Init+0xa6>
 800127e:	f5b3 1f88 	cmp.w	r3, #1114112	; 0x110000
 8001282:	d010      	beq.n	80012a6 <HAL_GPIO_Init+0xa6>
 8001284:	f5b3 1f04 	cmp.w	r3, #2162688	; 0x210000
 8001288:	d00d      	beq.n	80012a6 <HAL_GPIO_Init+0xa6>
 800128a:	f5b3 1f44 	cmp.w	r3, #3211264	; 0x310000
 800128e:	d00a      	beq.n	80012a6 <HAL_GPIO_Init+0xa6>
 8001290:	f5b3 1f90 	cmp.w	r3, #1179648	; 0x120000
 8001294:	d007      	beq.n	80012a6 <HAL_GPIO_Init+0xa6>
 8001296:	f5b3 1f08 	cmp.w	r3, #2228224	; 0x220000
 800129a:	d004      	beq.n	80012a6 <HAL_GPIO_Init+0xa6>
 800129c:	f5b3 1f48 	cmp.w	r3, #3276800	; 0x320000
 80012a0:	d001      	beq.n	80012a6 <HAL_GPIO_Init+0xa6>
 80012a2:	2b03      	cmp	r3, #3
 80012a4:	d101      	bne.n	80012aa <HAL_GPIO_Init+0xaa>
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80012a6:	2400      	movs	r4, #0
 80012a8:	e092      	b.n	80013d0 <HAL_GPIO_Init+0x1d0>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 80012aa:	21ae      	movs	r1, #174	; 0xae
 80012ac:	482c      	ldr	r0, [pc, #176]	; (8001360 <HAL_GPIO_Init+0x160>)
 80012ae:	f7ff faaf 	bl	8000810 <assert_failed>
 80012b2:	e7f8      	b.n	80012a6 <HAL_GPIO_Init+0xa6>
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 80012b4:	68f3      	ldr	r3, [r6, #12]
 80012b6:	2b03      	cmp	r3, #3
 80012b8:	d813      	bhi.n	80012e2 <HAL_GPIO_Init+0xe2>
        temp = GPIOx->OSPEEDR; 
 80012ba:	68ba      	ldr	r2, [r7, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80012bc:	0061      	lsls	r1, r4, #1
 80012be:	2303      	movs	r3, #3
 80012c0:	408b      	lsls	r3, r1
 80012c2:	ea22 0203 	bic.w	r2, r2, r3
        temp |= (GPIO_Init->Speed << (position * 2U));
 80012c6:	68f3      	ldr	r3, [r6, #12]
 80012c8:	408b      	lsls	r3, r1
 80012ca:	4313      	orrs	r3, r2
        GPIOx->OSPEEDR = temp;
 80012cc:	60bb      	str	r3, [r7, #8]
        temp = GPIOx->OTYPER;
 80012ce:	687a      	ldr	r2, [r7, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80012d0:	ea22 0205 	bic.w	r2, r2, r5
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80012d4:	6873      	ldr	r3, [r6, #4]
 80012d6:	f3c3 1500 	ubfx	r5, r3, #4, #1
 80012da:	40a5      	lsls	r5, r4
 80012dc:	4315      	orrs	r5, r2
        GPIOx->OTYPER = temp;
 80012de:	607d      	str	r5, [r7, #4]
 80012e0:	e087      	b.n	80013f2 <HAL_GPIO_Init+0x1f2>
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 80012e2:	21c0      	movs	r1, #192	; 0xc0
 80012e4:	481e      	ldr	r0, [pc, #120]	; (8001360 <HAL_GPIO_Init+0x160>)
 80012e6:	f7ff fa93 	bl	8000810 <assert_failed>
 80012ea:	e7e6      	b.n	80012ba <HAL_GPIO_Init+0xba>
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 80012ec:	21d1      	movs	r1, #209	; 0xd1
 80012ee:	481c      	ldr	r0, [pc, #112]	; (8001360 <HAL_GPIO_Init+0x160>)
 80012f0:	f7ff fa8e 	bl	8000810 <assert_failed>
 80012f4:	e086      	b.n	8001404 <HAL_GPIO_Init+0x204>
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 80012f6:	6933      	ldr	r3, [r6, #16]
 80012f8:	b1bb      	cbz	r3, 800132a <HAL_GPIO_Init+0x12a>
 80012fa:	2b09      	cmp	r3, #9
 80012fc:	d015      	beq.n	800132a <HAL_GPIO_Init+0x12a>
 80012fe:	2b01      	cmp	r3, #1
 8001300:	d013      	beq.n	800132a <HAL_GPIO_Init+0x12a>
 8001302:	2b02      	cmp	r3, #2
 8001304:	d011      	beq.n	800132a <HAL_GPIO_Init+0x12a>
 8001306:	2b03      	cmp	r3, #3
 8001308:	d00f      	beq.n	800132a <HAL_GPIO_Init+0x12a>
 800130a:	2b04      	cmp	r3, #4
 800130c:	d00d      	beq.n	800132a <HAL_GPIO_Init+0x12a>
 800130e:	2b05      	cmp	r3, #5
 8001310:	d00b      	beq.n	800132a <HAL_GPIO_Init+0x12a>
 8001312:	2b06      	cmp	r3, #6
 8001314:	d009      	beq.n	800132a <HAL_GPIO_Init+0x12a>
 8001316:	2b07      	cmp	r3, #7
 8001318:	d007      	beq.n	800132a <HAL_GPIO_Init+0x12a>
 800131a:	2b08      	cmp	r3, #8
 800131c:	d005      	beq.n	800132a <HAL_GPIO_Init+0x12a>
 800131e:	2b0a      	cmp	r3, #10
 8001320:	d003      	beq.n	800132a <HAL_GPIO_Init+0x12a>
 8001322:	2b0c      	cmp	r3, #12
 8001324:	d001      	beq.n	800132a <HAL_GPIO_Init+0x12a>
 8001326:	2b0f      	cmp	r3, #15
 8001328:	d110      	bne.n	800134c <HAL_GPIO_Init+0x14c>
        temp = GPIOx->AFR[position >> 3U];
 800132a:	08e2      	lsrs	r2, r4, #3
 800132c:	3208      	adds	r2, #8
 800132e:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8001332:	f004 0307 	and.w	r3, r4, #7
 8001336:	0099      	lsls	r1, r3, #2
 8001338:	230f      	movs	r3, #15
 800133a:	408b      	lsls	r3, r1
 800133c:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8001340:	6933      	ldr	r3, [r6, #16]
 8001342:	408b      	lsls	r3, r1
 8001344:	4303      	orrs	r3, r0
        GPIOx->AFR[position >> 3U] = temp;
 8001346:	f847 3022 	str.w	r3, [r7, r2, lsl #2]
 800134a:	e06b      	b.n	8001424 <HAL_GPIO_Init+0x224>
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 800134c:	21de      	movs	r1, #222	; 0xde
 800134e:	4804      	ldr	r0, [pc, #16]	; (8001360 <HAL_GPIO_Init+0x160>)
 8001350:	f7ff fa5e 	bl	8000810 <assert_failed>
 8001354:	e7e9      	b.n	800132a <HAL_GPIO_Init+0x12a>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001356:	2307      	movs	r3, #7
 8001358:	e005      	b.n	8001366 <HAL_GPIO_Init+0x166>
 800135a:	bf00      	nop
 800135c:	40020000 	andmi	r0, r2, r0
 8001360:	08002ce0 	stmdaeq	r0, {r5, r6, r7, sl, fp, sp}
 8001364:	2300      	movs	r3, #0
 8001366:	408b      	lsls	r3, r1
 8001368:	4303      	orrs	r3, r0
        SYSCFG->EXTICR[position >> 2U] = temp;
 800136a:	3202      	adds	r2, #2
 800136c:	495a      	ldr	r1, [pc, #360]	; (80014d8 <HAL_GPIO_Init+0x2d8>)
 800136e:	f841 3022 	str.w	r3, [r1, r2, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8001372:	4b5a      	ldr	r3, [pc, #360]	; (80014dc <HAL_GPIO_Init+0x2dc>)
 8001374:	689a      	ldr	r2, [r3, #8]
        temp &= ~((uint32_t)iocurrent);
 8001376:	ea6f 0308 	mvn.w	r3, r8
 800137a:	ea22 0108 	bic.w	r1, r2, r8
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800137e:	6870      	ldr	r0, [r6, #4]
 8001380:	f410 1f80 	tst.w	r0, #1048576	; 0x100000
 8001384:	d001      	beq.n	800138a <HAL_GPIO_Init+0x18a>
        {
          temp |= iocurrent;
 8001386:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->RTSR = temp;
 800138a:	4a54      	ldr	r2, [pc, #336]	; (80014dc <HAL_GPIO_Init+0x2dc>)
 800138c:	6091      	str	r1, [r2, #8]

        temp = EXTI->FTSR;
 800138e:	68d2      	ldr	r2, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 8001390:	ea03 0102 	and.w	r1, r3, r2
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8001394:	6870      	ldr	r0, [r6, #4]
 8001396:	f410 1f00 	tst.w	r0, #2097152	; 0x200000
 800139a:	d001      	beq.n	80013a0 <HAL_GPIO_Init+0x1a0>
        {
          temp |= iocurrent;
 800139c:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->FTSR = temp;
 80013a0:	4a4e      	ldr	r2, [pc, #312]	; (80014dc <HAL_GPIO_Init+0x2dc>)
 80013a2:	60d1      	str	r1, [r2, #12]

        temp = EXTI->EMR;
 80013a4:	6852      	ldr	r2, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 80013a6:	ea03 0102 	and.w	r1, r3, r2
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80013aa:	6870      	ldr	r0, [r6, #4]
 80013ac:	f410 3f00 	tst.w	r0, #131072	; 0x20000
 80013b0:	d001      	beq.n	80013b6 <HAL_GPIO_Init+0x1b6>
        {
          temp |= iocurrent;
 80013b2:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->EMR = temp;
 80013b6:	4a49      	ldr	r2, [pc, #292]	; (80014dc <HAL_GPIO_Init+0x2dc>)
 80013b8:	6051      	str	r1, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80013ba:	6812      	ldr	r2, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80013bc:	4013      	ands	r3, r2
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80013be:	6871      	ldr	r1, [r6, #4]
 80013c0:	f411 3f80 	tst.w	r1, #65536	; 0x10000
 80013c4:	d001      	beq.n	80013ca <HAL_GPIO_Init+0x1ca>
        {
          temp |= iocurrent;
 80013c6:	ea48 0302 	orr.w	r3, r8, r2
        }
        EXTI->IMR = temp;
 80013ca:	4a44      	ldr	r2, [pc, #272]	; (80014dc <HAL_GPIO_Init+0x2dc>)
 80013cc:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80013ce:	3401      	adds	r4, #1
 80013d0:	2c0f      	cmp	r4, #15
 80013d2:	d87e      	bhi.n	80014d2 <HAL_GPIO_Init+0x2d2>
    ioposition = 0x01U << position;
 80013d4:	2501      	movs	r5, #1
 80013d6:	40a5      	lsls	r5, r4
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80013d8:	6833      	ldr	r3, [r6, #0]
 80013da:	ea03 0805 	and.w	r8, r3, r5
    if(iocurrent == ioposition)
 80013de:	ea35 0303 	bics.w	r3, r5, r3
 80013e2:	d1f4      	bne.n	80013ce <HAL_GPIO_Init+0x1ce>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80013e4:	6873      	ldr	r3, [r6, #4]
 80013e6:	f003 0303 	and.w	r3, r3, #3
 80013ea:	3b01      	subs	r3, #1
 80013ec:	2b01      	cmp	r3, #1
 80013ee:	f67f af61 	bls.w	80012b4 <HAL_GPIO_Init+0xb4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80013f2:	6873      	ldr	r3, [r6, #4]
 80013f4:	f003 0303 	and.w	r3, r3, #3
 80013f8:	2b03      	cmp	r3, #3
 80013fa:	d00d      	beq.n	8001418 <HAL_GPIO_Init+0x218>
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 80013fc:	68b3      	ldr	r3, [r6, #8]
 80013fe:	2b02      	cmp	r3, #2
 8001400:	f63f af74 	bhi.w	80012ec <HAL_GPIO_Init+0xec>
        temp = GPIOx->PUPDR;
 8001404:	68fa      	ldr	r2, [r7, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8001406:	0061      	lsls	r1, r4, #1
 8001408:	2303      	movs	r3, #3
 800140a:	408b      	lsls	r3, r1
 800140c:	ea22 0203 	bic.w	r2, r2, r3
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8001410:	68b3      	ldr	r3, [r6, #8]
 8001412:	408b      	lsls	r3, r1
 8001414:	4313      	orrs	r3, r2
        GPIOx->PUPDR = temp;
 8001416:	60fb      	str	r3, [r7, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001418:	6873      	ldr	r3, [r6, #4]
 800141a:	f003 0303 	and.w	r3, r3, #3
 800141e:	2b02      	cmp	r3, #2
 8001420:	f43f af69 	beq.w	80012f6 <HAL_GPIO_Init+0xf6>
      temp = GPIOx->MODER;
 8001424:	683a      	ldr	r2, [r7, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8001426:	0061      	lsls	r1, r4, #1
 8001428:	2303      	movs	r3, #3
 800142a:	408b      	lsls	r3, r1
 800142c:	ea22 0203 	bic.w	r2, r2, r3
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8001430:	6873      	ldr	r3, [r6, #4]
 8001432:	f003 0303 	and.w	r3, r3, #3
 8001436:	408b      	lsls	r3, r1
 8001438:	4313      	orrs	r3, r2
      GPIOx->MODER = temp;
 800143a:	603b      	str	r3, [r7, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800143c:	6873      	ldr	r3, [r6, #4]
 800143e:	f413 3f40 	tst.w	r3, #196608	; 0x30000
 8001442:	d0c4      	beq.n	80013ce <HAL_GPIO_Init+0x1ce>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001444:	2300      	movs	r3, #0
 8001446:	9301      	str	r3, [sp, #4]
 8001448:	4b25      	ldr	r3, [pc, #148]	; (80014e0 <HAL_GPIO_Init+0x2e0>)
 800144a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800144c:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8001450:	645a      	str	r2, [r3, #68]	; 0x44
 8001452:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001454:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001458:	9301      	str	r3, [sp, #4]
 800145a:	9b01      	ldr	r3, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 800145c:	08a2      	lsrs	r2, r4, #2
 800145e:	1c91      	adds	r1, r2, #2
 8001460:	4b1d      	ldr	r3, [pc, #116]	; (80014d8 <HAL_GPIO_Init+0x2d8>)
 8001462:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8001466:	f004 0303 	and.w	r3, r4, #3
 800146a:	0099      	lsls	r1, r3, #2
 800146c:	230f      	movs	r3, #15
 800146e:	408b      	lsls	r3, r1
 8001470:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001474:	4b1b      	ldr	r3, [pc, #108]	; (80014e4 <HAL_GPIO_Init+0x2e4>)
 8001476:	429f      	cmp	r7, r3
 8001478:	f43f af74 	beq.w	8001364 <HAL_GPIO_Init+0x164>
 800147c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001480:	429f      	cmp	r7, r3
 8001482:	d01a      	beq.n	80014ba <HAL_GPIO_Init+0x2ba>
 8001484:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001488:	429f      	cmp	r7, r3
 800148a:	d018      	beq.n	80014be <HAL_GPIO_Init+0x2be>
 800148c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001490:	429f      	cmp	r7, r3
 8001492:	d016      	beq.n	80014c2 <HAL_GPIO_Init+0x2c2>
 8001494:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001498:	429f      	cmp	r7, r3
 800149a:	d014      	beq.n	80014c6 <HAL_GPIO_Init+0x2c6>
 800149c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80014a0:	429f      	cmp	r7, r3
 80014a2:	d012      	beq.n	80014ca <HAL_GPIO_Init+0x2ca>
 80014a4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80014a8:	429f      	cmp	r7, r3
 80014aa:	d010      	beq.n	80014ce <HAL_GPIO_Init+0x2ce>
 80014ac:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80014b0:	429f      	cmp	r7, r3
 80014b2:	f43f af50 	beq.w	8001356 <HAL_GPIO_Init+0x156>
 80014b6:	2308      	movs	r3, #8
 80014b8:	e755      	b.n	8001366 <HAL_GPIO_Init+0x166>
 80014ba:	2301      	movs	r3, #1
 80014bc:	e753      	b.n	8001366 <HAL_GPIO_Init+0x166>
 80014be:	2302      	movs	r3, #2
 80014c0:	e751      	b.n	8001366 <HAL_GPIO_Init+0x166>
 80014c2:	2303      	movs	r3, #3
 80014c4:	e74f      	b.n	8001366 <HAL_GPIO_Init+0x166>
 80014c6:	2304      	movs	r3, #4
 80014c8:	e74d      	b.n	8001366 <HAL_GPIO_Init+0x166>
 80014ca:	2305      	movs	r3, #5
 80014cc:	e74b      	b.n	8001366 <HAL_GPIO_Init+0x166>
 80014ce:	2306      	movs	r3, #6
 80014d0:	e749      	b.n	8001366 <HAL_GPIO_Init+0x166>
      }
    }
  }
}
 80014d2:	b002      	add	sp, #8
 80014d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80014d8:	40013800 	andmi	r3, r1, r0, lsl #16
 80014dc:	40013c00 	andmi	r3, r1, r0, lsl #24
 80014e0:	40023800 	andmi	r3, r2, r0, lsl #16
 80014e4:	40020000 	andmi	r0, r2, r0

080014e8 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 80014e8:	b570      	push	{r4, r5, r6, lr}
 80014ea:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80014ec:	6d86      	ldr	r6, [r0, #88]	; 0x58
  
  uint32_t tickstart = HAL_GetTick();
 80014ee:	f000 f935 	bl	800175c <HAL_GetTick>
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80014f2:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 80014f6:	b2db      	uxtb	r3, r3
 80014f8:	2b02      	cmp	r3, #2
 80014fa:	d006      	beq.n	800150a <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80014fc:	2380      	movs	r3, #128	; 0x80
 80014fe:	6563      	str	r3, [r4, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 8001500:	2300      	movs	r3, #0
 8001502:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    
    return HAL_ERROR;
 8001506:	2001      	movs	r0, #1
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }
  return HAL_OK;
}
 8001508:	bd70      	pop	{r4, r5, r6, pc}
 800150a:	4605      	mov	r5, r0
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 800150c:	6822      	ldr	r2, [r4, #0]
 800150e:	6813      	ldr	r3, [r2, #0]
 8001510:	f023 0316 	bic.w	r3, r3, #22
 8001514:	6013      	str	r3, [r2, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8001516:	6822      	ldr	r2, [r4, #0]
 8001518:	6953      	ldr	r3, [r2, #20]
 800151a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800151e:	6153      	str	r3, [r2, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8001520:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001522:	b1e3      	cbz	r3, 800155e <HAL_DMA_Abort+0x76>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8001524:	6822      	ldr	r2, [r4, #0]
 8001526:	6813      	ldr	r3, [r2, #0]
 8001528:	f023 0308 	bic.w	r3, r3, #8
 800152c:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
 800152e:	6822      	ldr	r2, [r4, #0]
 8001530:	6813      	ldr	r3, [r2, #0]
 8001532:	f023 0301 	bic.w	r3, r3, #1
 8001536:	6013      	str	r3, [r2, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8001538:	6823      	ldr	r3, [r4, #0]
 800153a:	681b      	ldr	r3, [r3, #0]
 800153c:	f013 0f01 	tst.w	r3, #1
 8001540:	d011      	beq.n	8001566 <HAL_DMA_Abort+0x7e>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8001542:	f000 f90b 	bl	800175c <HAL_GetTick>
 8001546:	1b43      	subs	r3, r0, r5
 8001548:	2b05      	cmp	r3, #5
 800154a:	d9f5      	bls.n	8001538 <HAL_DMA_Abort+0x50>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800154c:	2320      	movs	r3, #32
 800154e:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8001550:	2003      	movs	r0, #3
 8001552:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8001556:	2300      	movs	r3, #0
 8001558:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 800155c:	e7d4      	b.n	8001508 <HAL_DMA_Abort+0x20>
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800155e:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8001560:	2b00      	cmp	r3, #0
 8001562:	d1df      	bne.n	8001524 <HAL_DMA_Abort+0x3c>
 8001564:	e7e3      	b.n	800152e <HAL_DMA_Abort+0x46>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001566:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001568:	233f      	movs	r3, #63	; 0x3f
 800156a:	4093      	lsls	r3, r2
 800156c:	60b3      	str	r3, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800156e:	2301      	movs	r3, #1
 8001570:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8001574:	2000      	movs	r0, #0
 8001576:	f884 0034 	strb.w	r0, [r4, #52]	; 0x34
  return HAL_OK;
 800157a:	e7c5      	b.n	8001508 <HAL_DMA_Abort+0x20>

0800157c <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800157c:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 8001580:	b2db      	uxtb	r3, r3
 8001582:	2b02      	cmp	r3, #2
 8001584:	d003      	beq.n	800158e <HAL_DMA_Abort_IT+0x12>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8001586:	2380      	movs	r3, #128	; 0x80
 8001588:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 800158a:	2001      	movs	r0, #1
 800158c:	4770      	bx	lr
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 800158e:	2305      	movs	r3, #5
 8001590:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8001594:	6802      	ldr	r2, [r0, #0]
 8001596:	6813      	ldr	r3, [r2, #0]
 8001598:	f023 0301 	bic.w	r3, r3, #1
 800159c:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 800159e:	2000      	movs	r0, #0
}
 80015a0:	4770      	bx	lr
	...

080015a4 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80015a4:	b510      	push	{r4, lr}
 80015a6:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 80015a8:	1ec3      	subs	r3, r0, #3
 80015aa:	2b04      	cmp	r3, #4
 80015ac:	d80f      	bhi.n	80015ce <HAL_NVIC_SetPriorityGrouping+0x2a>
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80015ae:	4a0a      	ldr	r2, [pc, #40]	; (80015d8 <HAL_NVIC_SetPriorityGrouping+0x34>)
 80015b0:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80015b2:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80015b6:	041b      	lsls	r3, r3, #16
 80015b8:	0c1b      	lsrs	r3, r3, #16
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80015ba:	0224      	lsls	r4, r4, #8
 80015bc:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80015c0:	4323      	orrs	r3, r4
  reg_value  =  (reg_value                                   |
 80015c2:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80015c6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80015ca:	60d3      	str	r3, [r2, #12]
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80015cc:	bd10      	pop	{r4, pc}
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 80015ce:	2190      	movs	r1, #144	; 0x90
 80015d0:	4802      	ldr	r0, [pc, #8]	; (80015dc <HAL_NVIC_SetPriorityGrouping+0x38>)
 80015d2:	f7ff f91d 	bl	8000810 <assert_failed>
 80015d6:	e7ea      	b.n	80015ae <HAL_NVIC_SetPriorityGrouping+0xa>
 80015d8:	e000ed00 	and	lr, r0, r0, lsl #26
 80015dc:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}

080015e0 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80015e0:	b570      	push	{r4, r5, r6, lr}
 80015e2:	4605      	mov	r5, r0
 80015e4:	460c      	mov	r4, r1
 80015e6:	4616      	mov	r6, r2
  uint32_t prioritygroup = 0x00U;
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 80015e8:	2a0f      	cmp	r2, #15
 80015ea:	d825      	bhi.n	8001638 <HAL_NVIC_SetPriority+0x58>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 80015ec:	2c0f      	cmp	r4, #15
 80015ee:	d828      	bhi.n	8001642 <HAL_NVIC_SetPriority+0x62>
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80015f0:	4b1b      	ldr	r3, [pc, #108]	; (8001660 <HAL_NVIC_SetPriority+0x80>)
 80015f2:	68db      	ldr	r3, [r3, #12]
 80015f4:	f3c3 2302 	ubfx	r3, r3, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80015f8:	f1c3 0107 	rsb	r1, r3, #7
 80015fc:	2904      	cmp	r1, #4
 80015fe:	bf28      	it	cs
 8001600:	2104      	movcs	r1, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001602:	1d1a      	adds	r2, r3, #4
 8001604:	2a06      	cmp	r2, #6
 8001606:	d921      	bls.n	800164c <HAL_NVIC_SetPriority+0x6c>
 8001608:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800160a:	f04f 32ff 	mov.w	r2, #4294967295
 800160e:	fa02 f101 	lsl.w	r1, r2, r1
 8001612:	ea24 0401 	bic.w	r4, r4, r1
 8001616:	409c      	lsls	r4, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001618:	fa02 f303 	lsl.w	r3, r2, r3
 800161c:	ea26 0603 	bic.w	r6, r6, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001620:	4334      	orrs	r4, r6
  if ((int32_t)(IRQn) >= 0)
 8001622:	2d00      	cmp	r5, #0
 8001624:	db14      	blt.n	8001650 <HAL_NVIC_SetPriority+0x70>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001626:	0124      	lsls	r4, r4, #4
 8001628:	b2e4      	uxtb	r4, r4
 800162a:	f105 4560 	add.w	r5, r5, #3758096384	; 0xe0000000
 800162e:	f505 4561 	add.w	r5, r5, #57600	; 0xe100
 8001632:	f885 4300 	strb.w	r4, [r5, #768]	; 0x300
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8001636:	bd70      	pop	{r4, r5, r6, pc}
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 8001638:	21a8      	movs	r1, #168	; 0xa8
 800163a:	480a      	ldr	r0, [pc, #40]	; (8001664 <HAL_NVIC_SetPriority+0x84>)
 800163c:	f7ff f8e8 	bl	8000810 <assert_failed>
 8001640:	e7d4      	b.n	80015ec <HAL_NVIC_SetPriority+0xc>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 8001642:	21a9      	movs	r1, #169	; 0xa9
 8001644:	4807      	ldr	r0, [pc, #28]	; (8001664 <HAL_NVIC_SetPriority+0x84>)
 8001646:	f7ff f8e3 	bl	8000810 <assert_failed>
 800164a:	e7d1      	b.n	80015f0 <HAL_NVIC_SetPriority+0x10>
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800164c:	2300      	movs	r3, #0
 800164e:	e7dc      	b.n	800160a <HAL_NVIC_SetPriority+0x2a>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001650:	f005 050f 	and.w	r5, r5, #15
 8001654:	0124      	lsls	r4, r4, #4
 8001656:	b2e4      	uxtb	r4, r4
 8001658:	4b03      	ldr	r3, [pc, #12]	; (8001668 <HAL_NVIC_SetPriority+0x88>)
 800165a:	555c      	strb	r4, [r3, r5]
}
 800165c:	e7eb      	b.n	8001636 <HAL_NVIC_SetPriority+0x56>
 800165e:	bf00      	nop
 8001660:	e000ed00 	and	lr, r0, r0, lsl #26
 8001664:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
 8001668:	e000ed14 	and	lr, r0, r4, lsl sp

0800166c <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800166c:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 800166e:	1e04      	subs	r4, r0, #0
 8001670:	db0a      	blt.n	8001688 <HAL_NVIC_EnableIRQ+0x1c>
  if ((int32_t)(IRQn) >= 0)
 8001672:	2c00      	cmp	r4, #0
 8001674:	db07      	blt.n	8001686 <HAL_NVIC_EnableIRQ+0x1a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001676:	f004 021f 	and.w	r2, r4, #31
 800167a:	0964      	lsrs	r4, r4, #5
 800167c:	2301      	movs	r3, #1
 800167e:	4093      	lsls	r3, r2
 8001680:	4a04      	ldr	r2, [pc, #16]	; (8001694 <HAL_NVIC_EnableIRQ+0x28>)
 8001682:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8001686:	bd10      	pop	{r4, pc}
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 8001688:	21bc      	movs	r1, #188	; 0xbc
 800168a:	4803      	ldr	r0, [pc, #12]	; (8001698 <HAL_NVIC_EnableIRQ+0x2c>)
 800168c:	f7ff f8c0 	bl	8000810 <assert_failed>
 8001690:	e7ef      	b.n	8001672 <HAL_NVIC_EnableIRQ+0x6>
 8001692:	bf00      	nop
 8001694:	e000e100 	and	lr, r0, r0, lsl #2
 8001698:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}

0800169c <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 800169c:	3801      	subs	r0, #1
 800169e:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 80016a2:	d20b      	bcs.n	80016bc <HAL_SYSTICK_Config+0x20>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80016a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80016a8:	6158      	str	r0, [r3, #20]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80016aa:	4a05      	ldr	r2, [pc, #20]	; (80016c0 <HAL_SYSTICK_Config+0x24>)
 80016ac:	21f0      	movs	r1, #240	; 0xf0
 80016ae:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80016b2:	2000      	movs	r0, #0
 80016b4:	6198      	str	r0, [r3, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80016b6:	2207      	movs	r2, #7
 80016b8:	611a      	str	r2, [r3, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80016ba:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 80016bc:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 80016be:	4770      	bx	lr
 80016c0:	e000ed00 	and	lr, r0, r0, lsl #26

080016c4 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80016c4:	b510      	push	{r4, lr}
 80016c6:	4604      	mov	r4, r0
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80016c8:	4b0e      	ldr	r3, [pc, #56]	; (8001704 <HAL_InitTick+0x40>)
 80016ca:	7818      	ldrb	r0, [r3, #0]
 80016cc:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80016d0:	fbb3 f3f0 	udiv	r3, r3, r0
 80016d4:	4a0c      	ldr	r2, [pc, #48]	; (8001708 <HAL_InitTick+0x44>)
 80016d6:	6810      	ldr	r0, [r2, #0]
 80016d8:	fbb0 f0f3 	udiv	r0, r0, r3
 80016dc:	f7ff ffde 	bl	800169c <HAL_SYSTICK_Config>
 80016e0:	b968      	cbnz	r0, 80016fe <HAL_InitTick+0x3a>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80016e2:	2c0f      	cmp	r4, #15
 80016e4:	d901      	bls.n	80016ea <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 80016e6:	2001      	movs	r0, #1
 80016e8:	e00a      	b.n	8001700 <HAL_InitTick+0x3c>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80016ea:	2200      	movs	r2, #0
 80016ec:	4621      	mov	r1, r4
 80016ee:	f04f 30ff 	mov.w	r0, #4294967295
 80016f2:	f7ff ff75 	bl	80015e0 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80016f6:	4b05      	ldr	r3, [pc, #20]	; (800170c <HAL_InitTick+0x48>)
 80016f8:	601c      	str	r4, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80016fa:	2000      	movs	r0, #0
 80016fc:	e000      	b.n	8001700 <HAL_InitTick+0x3c>
    return HAL_ERROR;
 80016fe:	2001      	movs	r0, #1
}
 8001700:	bd10      	pop	{r4, pc}
 8001702:	bf00      	nop
 8001704:	20000000 	andcs	r0, r0, r0
 8001708:	20000008 	andcs	r0, r0, r8
 800170c:	20000004 	andcs	r0, r0, r4

08001710 <HAL_Init>:
{
 8001710:	b508      	push	{r3, lr}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8001712:	4b0b      	ldr	r3, [pc, #44]	; (8001740 <HAL_Init+0x30>)
 8001714:	681a      	ldr	r2, [r3, #0]
 8001716:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800171a:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_DATA_CACHE_ENABLE();
 800171c:	681a      	ldr	r2, [r3, #0]
 800171e:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001722:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001724:	681a      	ldr	r2, [r3, #0]
 8001726:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800172a:	601a      	str	r2, [r3, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800172c:	2003      	movs	r0, #3
 800172e:	f7ff ff39 	bl	80015a4 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 8001732:	200f      	movs	r0, #15
 8001734:	f7ff ffc6 	bl	80016c4 <HAL_InitTick>
  HAL_MspInit();
 8001738:	f7ff f8f6 	bl	8000928 <HAL_MspInit>
}
 800173c:	2000      	movs	r0, #0
 800173e:	bd08      	pop	{r3, pc}
 8001740:	40023c00 	andmi	r3, r2, r0, lsl #24

08001744 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8001744:	4a03      	ldr	r2, [pc, #12]	; (8001754 <HAL_IncTick+0x10>)
 8001746:	6811      	ldr	r1, [r2, #0]
 8001748:	4b03      	ldr	r3, [pc, #12]	; (8001758 <HAL_IncTick+0x14>)
 800174a:	781b      	ldrb	r3, [r3, #0]
 800174c:	440b      	add	r3, r1
 800174e:	6013      	str	r3, [r2, #0]
}
 8001750:	4770      	bx	lr
 8001752:	bf00      	nop
 8001754:	200000d8 	ldrdcs	r0, [r0], -r8
 8001758:	20000000 	andcs	r0, r0, r0

0800175c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 800175c:	4b01      	ldr	r3, [pc, #4]	; (8001764 <HAL_GetTick+0x8>)
 800175e:	6818      	ldr	r0, [r3, #0]
}
 8001760:	4770      	bx	lr
 8001762:	bf00      	nop
 8001764:	200000d8 	ldrdcs	r0, [r0], -r8

08001768 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001768:	b538      	push	{r3, r4, r5, lr}
 800176a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800176c:	f7ff fff6 	bl	800175c <HAL_GetTick>
 8001770:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8001772:	f1b4 3fff 	cmp.w	r4, #4294967295
 8001776:	d002      	beq.n	800177e <HAL_Delay+0x16>
  {
    wait += (uint32_t)(uwTickFreq);
 8001778:	4b04      	ldr	r3, [pc, #16]	; (800178c <HAL_Delay+0x24>)
 800177a:	781b      	ldrb	r3, [r3, #0]
 800177c:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800177e:	f7ff ffed 	bl	800175c <HAL_GetTick>
 8001782:	1b40      	subs	r0, r0, r5
 8001784:	42a0      	cmp	r0, r4
 8001786:	d3fa      	bcc.n	800177e <HAL_Delay+0x16>
  {
  }
}
 8001788:	bd38      	pop	{r3, r4, r5, pc}
 800178a:	bf00      	nop
 800178c:	20000000 	andcs	r0, r0, r0

08001790 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001790:	4a03      	ldr	r2, [pc, #12]	; (80017a0 <SystemInit+0x10>)
 8001792:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001796:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800179a:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800179e:	4770      	bx	lr
 80017a0:	e000ed00 	and	lr, r0, r0, lsl #26

080017a4 <fault_dump_opcode>:
    FD_CODE_TEXT_BASE,  FD_CODE_TEXT_ENDS,  FD_CODE_TEXT_SIZE );
    printf("Code Stack Growth Downward:%d\r\n", 
    FD_STACK_GROWTH_DOWNWARD);
}

static unsigned int fault_dump_opcode(unsigned int pc) {
 80017a4:	b082      	sub	sp, #8
    uint16_t value[2] = {0};
 80017a6:	2300      	movs	r3, #0
 80017a8:	9301      	str	r3, [sp, #4]
    unsigned int opcode = 0;
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
 80017aa:	e007      	b.n	80017bc <fault_dump_opcode+0x18>
        value[i] = *(uint16_t*)(pc + i * sizeof(uint16_t));
 80017ac:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 80017b0:	aa02      	add	r2, sp, #8
 80017b2:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80017b6:	f822 1c04 	strh.w	r1, [r2, #-4]
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
 80017ba:	3301      	adds	r3, #1
 80017bc:	2b01      	cmp	r3, #1
 80017be:	d9f5      	bls.n	80017ac <fault_dump_opcode+0x8>
    }
    opcode = ((unsigned int)value[1] << 0x10) |
 80017c0:	f8bd 0006 	ldrh.w	r0, [sp, #6]
             ((unsigned int)value[0] << 0x00);
 80017c4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    return opcode;
}
 80017c8:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 80017cc:	b002      	add	sp, #8
 80017ce:	4770      	bx	lr

080017d0 <opcode_is_bl_or_blx>:

static bool opcode_is_bl_or_blx(unsigned int ins) {
#define FD_BL_OPCODE_MASK   (0xF800)
#define FD_BL_OPCODE_BL     (0xF000)
#define FD_BL_OPCODE_BLX    (0xF800)
    uint16_t opcode1 = (((ins >> 0x00) & 0xFFFF) & FD_BL_OPCODE_MASK);
 80017d0:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
    uint16_t opcode2 = (((ins >> 0x10) & 0xFFFF) & FD_BL_OPCODE_MASK);
 80017d4:	0c00      	lsrs	r0, r0, #16
 80017d6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    if ((opcode1 == FD_BL_OPCODE_BL) || (opcode1 == FD_BL_OPCODE_BLX)) {
 80017da:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
 80017de:	d00a      	beq.n	80017f6 <opcode_is_bl_or_blx+0x26>
 80017e0:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
 80017e4:	d009      	beq.n	80017fa <opcode_is_bl_or_blx+0x2a>
        return true;
    }
    if ((opcode2 == FD_BL_OPCODE_BL) || (opcode2 == FD_BL_OPCODE_BLX)) {
 80017e6:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
 80017ea:	d008      	beq.n	80017fe <opcode_is_bl_or_blx+0x2e>
 80017ec:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
 80017f0:	d007      	beq.n	8001802 <opcode_is_bl_or_blx+0x32>
        return true;
    }
    return false;
 80017f2:	2000      	movs	r0, #0
 80017f4:	4770      	bx	lr
        return true;
 80017f6:	2001      	movs	r0, #1
 80017f8:	4770      	bx	lr
 80017fa:	2001      	movs	r0, #1
 80017fc:	4770      	bx	lr
        return true;
 80017fe:	2001      	movs	r0, #1
 8001800:	4770      	bx	lr
 8001802:	2001      	movs	r0, #1
}
 8001804:	4770      	bx	lr
	...

08001808 <dump_exc_return>:

static void dump_exc_return(unsigned int exc_return) {
 8001808:	b510      	push	{r4, lr}
 800180a:	4604      	mov	r4, r0
    printf(" EXE_RETURN: 0x%08X \r\n", exc_return);
 800180c:	4601      	mov	r1, r0
 800180e:	4803      	ldr	r0, [pc, #12]	; (800181c <dump_exc_return+0x14>)
 8001810:	f000 f9ce 	bl	8001bb0 <iprintf>
#if FD_DUMP_EXC_RETURN_VALUE
    extern void fault_dump_exc_return(unsigned int exc_return);
    fault_dump_exc_return(exc_return);
 8001814:	4620      	mov	r0, r4
 8001816:	f000 f92b 	bl	8001a70 <fault_dump_exc_return>
#endif
}
 800181a:	bd10      	pop	{r4, pc}
 800181c:	08002d60 	stmdaeq	r0, {r5, r6, r8, sl, fp, sp}

08001820 <fault_dump_init>:
void fault_dump_init(void) {
 8001820:	b508      	push	{r3, lr}
    fd_main_stack_base = FD_CODE_STACK_BASE;
 8001822:	490a      	ldr	r1, [pc, #40]	; (800184c <fault_dump_init+0x2c>)
 8001824:	4b0a      	ldr	r3, [pc, #40]	; (8001850 <fault_dump_init+0x30>)
 8001826:	6019      	str	r1, [r3, #0]
    fd_main_stack_full = FD_CODE_STACK_FULL;
 8001828:	4a0a      	ldr	r2, [pc, #40]	; (8001854 <fault_dump_init+0x34>)
 800182a:	4b0b      	ldr	r3, [pc, #44]	; (8001858 <fault_dump_init+0x38>)
 800182c:	601a      	str	r2, [r3, #0]
    printf("Code Stack:[%08X - %08X], size:%d\r\n",
 800182e:	1a53      	subs	r3, r2, r1
 8001830:	480a      	ldr	r0, [pc, #40]	; (800185c <fault_dump_init+0x3c>)
 8001832:	f000 f9bd 	bl	8001bb0 <iprintf>
    printf("Code Text :[%08X - %08X], size:%d\r\n",
 8001836:	490a      	ldr	r1, [pc, #40]	; (8001860 <fault_dump_init+0x40>)
 8001838:	4a0a      	ldr	r2, [pc, #40]	; (8001864 <fault_dump_init+0x44>)
 800183a:	1a53      	subs	r3, r2, r1
 800183c:	480a      	ldr	r0, [pc, #40]	; (8001868 <fault_dump_init+0x48>)
 800183e:	f000 f9b7 	bl	8001bb0 <iprintf>
    printf("Code Stack Growth Downward:%d\r\n", 
 8001842:	2101      	movs	r1, #1
 8001844:	4809      	ldr	r0, [pc, #36]	; (800186c <fault_dump_init+0x4c>)
 8001846:	f000 f9b3 	bl	8001bb0 <iprintf>
}
 800184a:	bd08      	pop	{r3, pc}
 800184c:	20000a38 	andcs	r0, r0, r8, lsr sl
 8001850:	200001dc 	ldrdcs	r0, [r0], -ip
 8001854:	20001238 	andcs	r1, r0, r8, lsr r2
 8001858:	200001e0 	andcs	r0, r0, r0, ror #3
 800185c:	08002d78 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, fp, sp}
 8001860:	08000190 	stmdaeq	r0, {r4, r7, r8}
 8001864:	08002bd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, fp, sp}
 8001868:	08002d9c 	stmdaeq	r0, {r2, r3, r4, r7, r8, sl, fp, sp}
 800186c:	08002dc0 	stmdaeq	r0, {r6, r7, r8, sl, fp, sp}

08001870 <fault_dump_callstack>:
    }
    printf("\r\n");
    while (1);
}

int fault_dump_callstack(unsigned int *buffer, size_t size, unsigned int *stack_point, unsigned int *stack_start) {
 8001870:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int count = 0;
    unsigned int pc = 0, op = 0, *sp = NULL;
    if ((buffer == NULL) || (size <= 0)) {
 8001874:	b348      	cbz	r0, 80018ca <fault_dump_callstack+0x5a>
 8001876:	460f      	mov	r7, r1
 8001878:	4614      	mov	r4, r2
 800187a:	461d      	mov	r5, r3
 800187c:	4680      	mov	r8, r0
 800187e:	b339      	cbz	r1, 80018d0 <fault_dump_callstack+0x60>
        return -FD_EEMPTY;
    }
    FD_STACK_CHECKIT(stack_point, stack_start) {
 8001880:	b34a      	cbz	r2, 80018d6 <fault_dump_callstack+0x66>
 8001882:	429a      	cmp	r2, r3
 8001884:	d82a      	bhi.n	80018dc <fault_dump_callstack+0x6c>
    int count = 0;
 8001886:	2600      	movs	r6, #0
 8001888:	e000      	b.n	800188c <fault_dump_callstack+0x1c>
        return -FD_EINVAL;
    }
    FD_STACK_FOREACH(stack_point, stack_start) {
 800188a:	3404      	adds	r4, #4
 800188c:	b1d4      	cbz	r4, 80018c4 <fault_dump_callstack+0x54>
 800188e:	42ac      	cmp	r4, r5
 8001890:	d818      	bhi.n	80018c4 <fault_dump_callstack+0x54>
        // Read stack[x] value to pc.
        pc = *(unsigned int *)sp;
 8001892:	6822      	ldr	r2, [r4, #0]
        // PC must be in the code segment.
        if ((pc < FD_CODE_TEXT_BASE) || (pc > FD_CODE_TEXT_ENDS)) {
 8001894:	4813      	ldr	r0, [pc, #76]	; (80018e4 <fault_dump_callstack+0x74>)
 8001896:	4290      	cmp	r0, r2
 8001898:	d8f7      	bhi.n	800188a <fault_dump_callstack+0x1a>
 800189a:	4b13      	ldr	r3, [pc, #76]	; (80018e8 <fault_dump_callstack+0x78>)
 800189c:	4293      	cmp	r3, r2
 800189e:	d3f4      	bcc.n	800188a <fault_dump_callstack+0x1a>
            continue;
        }
        // The thumb instruction must be an odd number.
        if ((pc % 2) == 0) {
 80018a0:	f012 0f01 	tst.w	r2, #1
 80018a4:	d0f1      	beq.n	800188a <fault_dump_callstack+0x1a>
            continue;
        }
        // Fix thumb instruction set.
        pc = pc - 1;
        // Calculate the address of the instruction being executed before pushing on the stack.
        pc = pc - sizeof(unsigned int);
 80018a6:	f1a2 0905 	sub.w	r9, r2, #5
        // The thumb instruction is at least 2-byte aligned.
        if ((pc & 0x1) != 0) {
 80018aa:	d0ee      	beq.n	800188a <fault_dump_callstack+0x1a>
            continue;
        }
        // Read the instruction at the PC address.
        op = fault_dump_opcode(pc);
 80018ac:	4648      	mov	r0, r9
 80018ae:	f7ff ff79 	bl	80017a4 <fault_dump_opcode>
        // Only BL or BLX opcode need to be recorded.
        if (!opcode_is_bl_or_blx(op)) {
 80018b2:	f7ff ff8d 	bl	80017d0 <opcode_is_bl_or_blx>
 80018b6:	2800      	cmp	r0, #0
 80018b8:	d0e7      	beq.n	800188a <fault_dump_callstack+0x1a>
            continue;
        }
        // storage this address.
        buffer[count] = pc;
 80018ba:	f848 9026 	str.w	r9, [r8, r6, lsl #2]
        count = count + 1;
 80018be:	3601      	adds	r6, #1
        if (count >= size) {
 80018c0:	42be      	cmp	r6, r7
 80018c2:	d3e2      	bcc.n	800188a <fault_dump_callstack+0x1a>
            break;
        }
    }
    return count;
}
 80018c4:	4630      	mov	r0, r6
 80018c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        return -FD_EEMPTY;
 80018ca:	f06f 0601 	mvn.w	r6, #1
 80018ce:	e7f9      	b.n	80018c4 <fault_dump_callstack+0x54>
 80018d0:	f06f 0601 	mvn.w	r6, #1
 80018d4:	e7f6      	b.n	80018c4 <fault_dump_callstack+0x54>
        return -FD_EINVAL;
 80018d6:	f06f 0602 	mvn.w	r6, #2
 80018da:	e7f3      	b.n	80018c4 <fault_dump_callstack+0x54>
 80018dc:	f06f 0602 	mvn.w	r6, #2
 80018e0:	e7f0      	b.n	80018c4 <fault_dump_callstack+0x54>
 80018e2:	bf00      	nop
 80018e4:	08000190 	stmdaeq	r0, {r4, r7, r8}
 80018e8:	08002bd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, fp, sp}

080018ec <fault_dump_handler>:
void fault_dump_handler(unsigned int *stack, unsigned int linker) {
 80018ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80018ee:	4605      	mov	r5, r0
 80018f0:	460e      	mov	r6, r1
    frame.manual.r4  = FD_STACK_READVAL(point);
 80018f2:	6803      	ldr	r3, [r0, #0]
 80018f4:	4c46      	ldr	r4, [pc, #280]	; (8001a10 <fault_dump_handler+0x124>)
 80018f6:	6023      	str	r3, [r4, #0]
    frame.manual.r5  = FD_STACK_READVAL(point);
 80018f8:	6843      	ldr	r3, [r0, #4]
 80018fa:	6063      	str	r3, [r4, #4]
    frame.manual.r6  = FD_STACK_READVAL(point);
 80018fc:	6883      	ldr	r3, [r0, #8]
 80018fe:	60a3      	str	r3, [r4, #8]
    frame.manual.r7  = FD_STACK_READVAL(point);
 8001900:	68c3      	ldr	r3, [r0, #12]
 8001902:	60e3      	str	r3, [r4, #12]
    frame.manual.r8  = FD_STACK_READVAL(point);
 8001904:	6903      	ldr	r3, [r0, #16]
 8001906:	6123      	str	r3, [r4, #16]
    frame.manual.r9  = FD_STACK_READVAL(point);
 8001908:	6943      	ldr	r3, [r0, #20]
 800190a:	6163      	str	r3, [r4, #20]
    frame.manual.r10 = FD_STACK_READVAL(point);
 800190c:	6983      	ldr	r3, [r0, #24]
 800190e:	61a3      	str	r3, [r4, #24]
    frame.manual.r11 = FD_STACK_READVAL(point);
 8001910:	69c3      	ldr	r3, [r0, #28]
 8001912:	61e3      	str	r3, [r4, #28]
    frame.except.r0  = FD_STACK_READVAL(point);
 8001914:	6a03      	ldr	r3, [r0, #32]
 8001916:	6223      	str	r3, [r4, #32]
    frame.except.r1  = FD_STACK_READVAL(point);
 8001918:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800191a:	6263      	str	r3, [r4, #36]	; 0x24
    frame.except.r2  = FD_STACK_READVAL(point);
 800191c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800191e:	62a3      	str	r3, [r4, #40]	; 0x28
    frame.except.r3  = FD_STACK_READVAL(point);
 8001920:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8001922:	62e3      	str	r3, [r4, #44]	; 0x2c
    frame.except.r12 = FD_STACK_READVAL(point);
 8001924:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8001926:	6323      	str	r3, [r4, #48]	; 0x30
    frame.except.lr  = FD_STACK_READVAL(point);
 8001928:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800192a:	6363      	str	r3, [r4, #52]	; 0x34
    frame.except.pc  = FD_STACK_READVAL(point);
 800192c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800192e:	63a3      	str	r3, [r4, #56]	; 0x38
    frame.except.psr = FD_STACK_READVAL(point);
 8001930:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 8001932:	63e3      	str	r3, [r4, #60]	; 0x3c
    printf("\r\n");
 8001934:	4f37      	ldr	r7, [pc, #220]	; (8001a14 <fault_dump_handler+0x128>)
 8001936:	4638      	mov	r0, r7
 8001938:	f000 f9c0 	bl	8001cbc <puts>
    printf(" HardFault Information Dump \r\n");
 800193c:	4836      	ldr	r0, [pc, #216]	; (8001a18 <fault_dump_handler+0x12c>)
 800193e:	f000 f9bd 	bl	8001cbc <puts>
    printf(" Stack Frame   \r\n");
 8001942:	4836      	ldr	r0, [pc, #216]	; (8001a1c <fault_dump_handler+0x130>)
 8001944:	f000 f9ba 	bl	8001cbc <puts>
    printf(" R0   = 0x%08X \r\n", (unsigned int)frame.except.r0);
 8001948:	6a21      	ldr	r1, [r4, #32]
 800194a:	4835      	ldr	r0, [pc, #212]	; (8001a20 <fault_dump_handler+0x134>)
 800194c:	f000 f930 	bl	8001bb0 <iprintf>
    printf(" R1   = 0x%08X \r\n", (unsigned int)frame.except.r1);
 8001950:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8001952:	4834      	ldr	r0, [pc, #208]	; (8001a24 <fault_dump_handler+0x138>)
 8001954:	f000 f92c 	bl	8001bb0 <iprintf>
    printf(" R2   = 0x%08X \r\n", (unsigned int)frame.except.r2);
 8001958:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800195a:	4833      	ldr	r0, [pc, #204]	; (8001a28 <fault_dump_handler+0x13c>)
 800195c:	f000 f928 	bl	8001bb0 <iprintf>
    printf(" R3   = 0x%08X \r\n", (unsigned int)frame.except.r3);
 8001960:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8001962:	4832      	ldr	r0, [pc, #200]	; (8001a2c <fault_dump_handler+0x140>)
 8001964:	f000 f924 	bl	8001bb0 <iprintf>
    printf(" R4   = 0x%08X \r\n", (unsigned int)frame.manual.r4);
 8001968:	6821      	ldr	r1, [r4, #0]
 800196a:	4831      	ldr	r0, [pc, #196]	; (8001a30 <fault_dump_handler+0x144>)
 800196c:	f000 f920 	bl	8001bb0 <iprintf>
    printf(" R5   = 0x%08X \r\n", (unsigned int)frame.manual.r5);
 8001970:	6861      	ldr	r1, [r4, #4]
 8001972:	4830      	ldr	r0, [pc, #192]	; (8001a34 <fault_dump_handler+0x148>)
 8001974:	f000 f91c 	bl	8001bb0 <iprintf>
    printf(" R6   = 0x%08X \r\n", (unsigned int)frame.manual.r6);
 8001978:	68a1      	ldr	r1, [r4, #8]
 800197a:	482f      	ldr	r0, [pc, #188]	; (8001a38 <fault_dump_handler+0x14c>)
 800197c:	f000 f918 	bl	8001bb0 <iprintf>
    printf(" R7   = 0x%08X \r\n", (unsigned int)frame.manual.r7);
 8001980:	68e1      	ldr	r1, [r4, #12]
 8001982:	482e      	ldr	r0, [pc, #184]	; (8001a3c <fault_dump_handler+0x150>)
 8001984:	f000 f914 	bl	8001bb0 <iprintf>
    printf(" R8   = 0x%08X \r\n", (unsigned int)frame.manual.r8);
 8001988:	6921      	ldr	r1, [r4, #16]
 800198a:	482d      	ldr	r0, [pc, #180]	; (8001a40 <fault_dump_handler+0x154>)
 800198c:	f000 f910 	bl	8001bb0 <iprintf>
    printf(" R9   = 0x%08X \r\n", (unsigned int)frame.manual.r9);
 8001990:	6961      	ldr	r1, [r4, #20]
 8001992:	482c      	ldr	r0, [pc, #176]	; (8001a44 <fault_dump_handler+0x158>)
 8001994:	f000 f90c 	bl	8001bb0 <iprintf>
    printf(" R10  = 0x%08X \r\n", (unsigned int)frame.manual.r10);
 8001998:	69a1      	ldr	r1, [r4, #24]
 800199a:	482b      	ldr	r0, [pc, #172]	; (8001a48 <fault_dump_handler+0x15c>)
 800199c:	f000 f908 	bl	8001bb0 <iprintf>
    printf(" R11  = 0x%08X \r\n", (unsigned int)frame.manual.r11);
 80019a0:	69e1      	ldr	r1, [r4, #28]
 80019a2:	482a      	ldr	r0, [pc, #168]	; (8001a4c <fault_dump_handler+0x160>)
 80019a4:	f000 f904 	bl	8001bb0 <iprintf>
    printf(" R12  = 0x%08X \r\n", (unsigned int)frame.except.r12);
 80019a8:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80019aa:	4829      	ldr	r0, [pc, #164]	; (8001a50 <fault_dump_handler+0x164>)
 80019ac:	f000 f900 	bl	8001bb0 <iprintf>
    printf(" LR   = 0x%08X \r\n", (unsigned int)frame.except.lr);
 80019b0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80019b2:	4828      	ldr	r0, [pc, #160]	; (8001a54 <fault_dump_handler+0x168>)
 80019b4:	f000 f8fc 	bl	8001bb0 <iprintf>
    printf(" PC   = 0x%08X \r\n", (unsigned int)frame.except.pc);
 80019b8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80019ba:	4827      	ldr	r0, [pc, #156]	; (8001a58 <fault_dump_handler+0x16c>)
 80019bc:	f000 f8f8 	bl	8001bb0 <iprintf>
    printf(" PSR  = 0x%08X \r\n", (unsigned int)frame.except.psr);
 80019c0:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80019c2:	4826      	ldr	r0, [pc, #152]	; (8001a5c <fault_dump_handler+0x170>)
 80019c4:	f000 f8f4 	bl	8001bb0 <iprintf>
    printf("\r\n");
 80019c8:	4638      	mov	r0, r7
 80019ca:	f000 f977 	bl	8001cbc <puts>
    dump_exc_return(linker);
 80019ce:	4630      	mov	r0, r6
 80019d0:	f7ff ff1a 	bl	8001808 <dump_exc_return>
    count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, 
 80019d4:	4b22      	ldr	r3, [pc, #136]	; (8001a60 <fault_dump_handler+0x174>)
 80019d6:	f105 0240 	add.w	r2, r5, #64	; 0x40
 80019da:	2140      	movs	r1, #64	; 0x40
 80019dc:	4821      	ldr	r0, [pc, #132]	; (8001a64 <fault_dump_handler+0x178>)
 80019de:	f7ff ff47 	bl	8001870 <fault_dump_callstack>
 80019e2:	4605      	mov	r5, r0
    printf(" Stack Call: ");
 80019e4:	4820      	ldr	r0, [pc, #128]	; (8001a68 <fault_dump_handler+0x17c>)
 80019e6:	f000 f8e3 	bl	8001bb0 <iprintf>
    printf("%08X ", (unsigned int)frame.except.pc);
 80019ea:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80019ec:	481f      	ldr	r0, [pc, #124]	; (8001a6c <fault_dump_handler+0x180>)
 80019ee:	f000 f8df 	bl	8001bb0 <iprintf>
    for (index = 0; index < count; index++) {
 80019f2:	2400      	movs	r4, #0
 80019f4:	e006      	b.n	8001a04 <fault_dump_handler+0x118>
        printf("%08X ", buffer[index]);
 80019f6:	4b1b      	ldr	r3, [pc, #108]	; (8001a64 <fault_dump_handler+0x178>)
 80019f8:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 80019fc:	481b      	ldr	r0, [pc, #108]	; (8001a6c <fault_dump_handler+0x180>)
 80019fe:	f000 f8d7 	bl	8001bb0 <iprintf>
    for (index = 0; index < count; index++) {
 8001a02:	3401      	adds	r4, #1
 8001a04:	42ac      	cmp	r4, r5
 8001a06:	dbf6      	blt.n	80019f6 <fault_dump_handler+0x10a>
    printf("\r\n");
 8001a08:	4802      	ldr	r0, [pc, #8]	; (8001a14 <fault_dump_handler+0x128>)
 8001a0a:	f000 f957 	bl	8001cbc <puts>
    while (1);
 8001a0e:	e7fe      	b.n	8001a0e <fault_dump_handler+0x122>
 8001a10:	200001e4 	andcs	r0, r0, r4, ror #3
 8001a14:	08002dfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, fp, sp}
 8001a18:	08002de0 	stmdaeq	r0, {r5, r6, r7, r8, sl, fp, sp}
 8001a1c:	08002e00 	stmdaeq	r0, {r9, sl, fp, sp}
 8001a20:	08002e14 	stmdaeq	r0, {r2, r4, r9, sl, fp, sp}
 8001a24:	08002e28 	stmdaeq	r0, {r3, r5, r9, sl, fp, sp}
 8001a28:	08002e3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, sl, fp, sp}
 8001a2c:	08002e50 	stmdaeq	r0, {r4, r6, r9, sl, fp, sp}
 8001a30:	08002e64 	stmdaeq	r0, {r2, r5, r6, r9, sl, fp, sp}
 8001a34:	08002e78 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, fp, sp}
 8001a38:	08002e8c 	stmdaeq	r0, {r2, r3, r7, r9, sl, fp, sp}
 8001a3c:	08002ea0 	stmdaeq	r0, {r5, r7, r9, sl, fp, sp}
 8001a40:	08002eb4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl, fp, sp}
 8001a44:	08002ec8 	stmdaeq	r0, {r3, r6, r7, r9, sl, fp, sp}
 8001a48:	08002edc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl, fp, sp}
 8001a4c:	08002ef0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl, fp, sp}
 8001a50:	08002f04 	stmdaeq	r0, {r2, r8, r9, sl, fp, sp}
 8001a54:	08002f18 	stmdaeq	r0, {r3, r4, r8, r9, sl, fp, sp}
 8001a58:	08002f2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, fp, sp}
 8001a5c:	08002f40 	stmdaeq	r0, {r6, r8, r9, sl, fp, sp}
 8001a60:	20001238 	andcs	r1, r0, r8, lsr r2
 8001a64:	200000dc 	ldrdcs	r0, [r0], -ip
 8001a68:	08002f54 	stmdaeq	r0, {r2, r4, r6, r8, r9, sl, fp, sp}
 8001a6c:	08002f64 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, fp, sp}

08001a70 <fault_dump_exc_return>:
  *
  ******************************************************************************
  */
#include "fault-dump.h"

void fault_dump_exc_return(unsigned int exc_return) {
 8001a70:	b510      	push	{r4, lr}
 8001a72:	4604      	mov	r4, r0
    printf(" \r\n");
 8001a74:	4816      	ldr	r0, [pc, #88]	; (8001ad0 <fault_dump_exc_return+0x60>)
 8001a76:	f000 f921 	bl	8001cbc <puts>
    printf(" Bit2 Return Stack Select: ");
 8001a7a:	4816      	ldr	r0, [pc, #88]	; (8001ad4 <fault_dump_exc_return+0x64>)
 8001a7c:	f000 f898 	bl	8001bb0 <iprintf>
    if (FD_CHECK_BIT(exc_return, 2)) {
 8001a80:	f014 0f04 	tst.w	r4, #4
 8001a84:	d018      	beq.n	8001ab8 <fault_dump_exc_return+0x48>
        printf("[Use PSP               ].\r\n");
 8001a86:	4814      	ldr	r0, [pc, #80]	; (8001ad8 <fault_dump_exc_return+0x68>)
 8001a88:	f000 f918 	bl	8001cbc <puts>
    } else {
        printf("[Use MSP               ].\r\n");
    }
    printf(" Bit3 Return Mode Select:  ");
 8001a8c:	4813      	ldr	r0, [pc, #76]	; (8001adc <fault_dump_exc_return+0x6c>)
 8001a8e:	f000 f88f 	bl	8001bb0 <iprintf>
    if (FD_CHECK_BIT(exc_return, 3)) {
 8001a92:	f014 0f08 	tst.w	r4, #8
 8001a96:	d013      	beq.n	8001ac0 <fault_dump_exc_return+0x50>
        printf("[Use Thread Mode       ].\r\n");
 8001a98:	4811      	ldr	r0, [pc, #68]	; (8001ae0 <fault_dump_exc_return+0x70>)
 8001a9a:	f000 f90f 	bl	8001cbc <puts>
    } else {
        printf("[Use Process Mode      ].\r\n");
    }
    printf(" Bit4 Stack Frame Type:    ");
 8001a9e:	4811      	ldr	r0, [pc, #68]	; (8001ae4 <fault_dump_exc_return+0x74>)
 8001aa0:	f000 f886 	bl	8001bb0 <iprintf>
    if (FD_CHECK_BIT(exc_return, 4)) {
 8001aa4:	f014 0f10 	tst.w	r4, #16
 8001aa8:	d00e      	beq.n	8001ac8 <fault_dump_exc_return+0x58>
        printf("[Use 8 World Frame     ].\r\n");
 8001aaa:	480f      	ldr	r0, [pc, #60]	; (8001ae8 <fault_dump_exc_return+0x78>)
 8001aac:	f000 f906 	bl	8001cbc <puts>
    } else {
        printf("[Use 26 World Frame    ].\r\n");
    }
    printf(" \r\n");
 8001ab0:	4807      	ldr	r0, [pc, #28]	; (8001ad0 <fault_dump_exc_return+0x60>)
 8001ab2:	f000 f903 	bl	8001cbc <puts>
}
 8001ab6:	bd10      	pop	{r4, pc}
        printf("[Use MSP               ].\r\n");
 8001ab8:	480c      	ldr	r0, [pc, #48]	; (8001aec <fault_dump_exc_return+0x7c>)
 8001aba:	f000 f8ff 	bl	8001cbc <puts>
 8001abe:	e7e5      	b.n	8001a8c <fault_dump_exc_return+0x1c>
        printf("[Use Process Mode      ].\r\n");
 8001ac0:	480b      	ldr	r0, [pc, #44]	; (8001af0 <fault_dump_exc_return+0x80>)
 8001ac2:	f000 f8fb 	bl	8001cbc <puts>
 8001ac6:	e7ea      	b.n	8001a9e <fault_dump_exc_return+0x2e>
        printf("[Use 26 World Frame    ].\r\n");
 8001ac8:	480a      	ldr	r0, [pc, #40]	; (8001af4 <fault_dump_exc_return+0x84>)
 8001aca:	f000 f8f7 	bl	8001cbc <puts>
 8001ace:	e7ef      	b.n	8001ab0 <fault_dump_exc_return+0x40>
 8001ad0:	08002f6c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, fp, sp}
 8001ad4:	08002f70 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl, fp, sp}
 8001ad8:	08002f8c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl, fp, sp}
 8001adc:	08002fc4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl, fp, sp}
 8001ae0:	08002fe0 	stmdaeq	r0, {r5, r6, r7, r8, r9, sl, fp, sp}
 8001ae4:	08003018 	stmdaeq	r0, {r3, r4, ip, sp}
 8001ae8:	08003034 	stmdaeq	r0, {r2, r4, r5, ip, sp}
 8001aec:	08002fa8 	stmdaeq	r0, {r3, r5, r7, r8, r9, sl, fp, sp}
 8001af0:	08002ffc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
 8001af4:	08003050 	stmdaeq	r0, {r4, r6, ip, sp}

08001af8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8001af8:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001b30 <LoopFillZerobss+0xe>
  
/* Call the clock system initialization function.*/
  bl  SystemInit  
 8001afc:	f7ff fe48 	bl	8001790 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8001b00:	480c      	ldr	r0, [pc, #48]	; (8001b34 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8001b02:	490d      	ldr	r1, [pc, #52]	; (8001b38 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8001b04:	4a0d      	ldr	r2, [pc, #52]	; (8001b3c <LoopFillZerobss+0x1a>)
  movs r3, #0
 8001b06:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001b08:	e002      	b.n	8001b10 <LoopCopyDataInit>

08001b0a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001b0a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001b0c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001b0e:	3304      	adds	r3, #4

08001b10 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001b10:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8001b12:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8001b14:	d3f9      	bcc.n	8001b0a <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8001b16:	4a0a      	ldr	r2, [pc, #40]	; (8001b40 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8001b18:	4c0a      	ldr	r4, [pc, #40]	; (8001b44 <LoopFillZerobss+0x22>)
  movs r3, #0
 8001b1a:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001b1c:	e001      	b.n	8001b22 <LoopFillZerobss>

08001b1e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001b1e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001b20:	3204      	adds	r2, #4

08001b22 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8001b22:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8001b24:	d3fb      	bcc.n	8001b1e <FillZerobss>
 
/* Call static constructors */
    bl __libc_init_array
 8001b26:	f000 f817 	bl	8001b58 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8001b2a:	f7fe fdc9 	bl	80006c0 <main>
  bx  lr    
 8001b2e:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8001b30:	20001238 	andcs	r1, r0, r8, lsr r2
  ldr r0, =_sdata
 8001b34:	20000000 	andcs	r0, r0, r0
  ldr r1, =_edata
 8001b38:	20000070 	andcs	r0, r0, r0, ror r0
  ldr r2, =_sidata
 8001b3c:	08003114 	stmdaeq	r0, {r2, r4, r8, ip, sp}
  ldr r2, =_sbss
 8001b40:	20000070 	andcs	r0, r0, r0, ror r0
  ldr r4, =_ebss
 8001b44:	20000234 	andcs	r0, r0, r4, lsr r2

08001b48 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001b48:	e7fe      	b.n	8001b48 <ADC_IRQHandler>
	...

08001b4c <__errno>:
 8001b4c:	4b01      	ldr	r3, [pc, #4]	; (8001b54 <__errno+0x8>)
 8001b4e:	6818      	ldr	r0, [r3, #0]
 8001b50:	4770      	bx	lr
 8001b52:	bf00      	nop
 8001b54:	2000000c 	andcs	r0, r0, ip

08001b58 <__libc_init_array>:
 8001b58:	b570      	push	{r4, r5, r6, lr}
 8001b5a:	4d0d      	ldr	r5, [pc, #52]	; (8001b90 <__libc_init_array+0x38>)
 8001b5c:	4c0d      	ldr	r4, [pc, #52]	; (8001b94 <__libc_init_array+0x3c>)
 8001b5e:	1b64      	subs	r4, r4, r5
 8001b60:	10a4      	asrs	r4, r4, #2
 8001b62:	2600      	movs	r6, #0
 8001b64:	42a6      	cmp	r6, r4
 8001b66:	d109      	bne.n	8001b7c <__libc_init_array+0x24>
 8001b68:	4d0b      	ldr	r5, [pc, #44]	; (8001b98 <__libc_init_array+0x40>)
 8001b6a:	4c0c      	ldr	r4, [pc, #48]	; (8001b9c <__libc_init_array+0x44>)
 8001b6c:	f001 f824 	bl	8002bb8 <_init>
 8001b70:	1b64      	subs	r4, r4, r5
 8001b72:	10a4      	asrs	r4, r4, #2
 8001b74:	2600      	movs	r6, #0
 8001b76:	42a6      	cmp	r6, r4
 8001b78:	d105      	bne.n	8001b86 <__libc_init_array+0x2e>
 8001b7a:	bd70      	pop	{r4, r5, r6, pc}
 8001b7c:	f855 3b04 	ldr.w	r3, [r5], #4
 8001b80:	4798      	blx	r3
 8001b82:	3601      	adds	r6, #1
 8001b84:	e7ee      	b.n	8001b64 <__libc_init_array+0xc>
 8001b86:	f855 3b04 	ldr.w	r3, [r5], #4
 8001b8a:	4798      	blx	r3
 8001b8c:	3601      	adds	r6, #1
 8001b8e:	e7f2      	b.n	8001b76 <__libc_init_array+0x1e>
 8001b90:	0800310c 	stmdaeq	r0, {r2, r3, r8, ip, sp}
 8001b94:	0800310c 	stmdaeq	r0, {r2, r3, r8, ip, sp}
 8001b98:	0800310c 	stmdaeq	r0, {r2, r3, r8, ip, sp}
 8001b9c:	08003110 	stmdaeq	r0, {r4, r8, ip, sp}

08001ba0 <memset>:
 8001ba0:	4402      	add	r2, r0
 8001ba2:	4603      	mov	r3, r0
 8001ba4:	4293      	cmp	r3, r2
 8001ba6:	d100      	bne.n	8001baa <memset+0xa>
 8001ba8:	4770      	bx	lr
 8001baa:	f803 1b01 	strb.w	r1, [r3], #1
 8001bae:	e7f9      	b.n	8001ba4 <memset+0x4>

08001bb0 <iprintf>:
 8001bb0:	b40f      	push	{r0, r1, r2, r3}
 8001bb2:	4b0a      	ldr	r3, [pc, #40]	; (8001bdc <iprintf+0x2c>)
 8001bb4:	b513      	push	{r0, r1, r4, lr}
 8001bb6:	681c      	ldr	r4, [r3, #0]
 8001bb8:	b124      	cbz	r4, 8001bc4 <iprintf+0x14>
 8001bba:	69a3      	ldr	r3, [r4, #24]
 8001bbc:	b913      	cbnz	r3, 8001bc4 <iprintf+0x14>
 8001bbe:	4620      	mov	r0, r4
 8001bc0:	f000 fa5e 	bl	8002080 <__sinit>
 8001bc4:	ab05      	add	r3, sp, #20
 8001bc6:	9a04      	ldr	r2, [sp, #16]
 8001bc8:	68a1      	ldr	r1, [r4, #8]
 8001bca:	9301      	str	r3, [sp, #4]
 8001bcc:	4620      	mov	r0, r4
 8001bce:	f000 fc67 	bl	80024a0 <_vfiprintf_r>
 8001bd2:	b002      	add	sp, #8
 8001bd4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8001bd8:	b004      	add	sp, #16
 8001bda:	4770      	bx	lr
 8001bdc:	2000000c 	andcs	r0, r0, ip

08001be0 <_puts_r>:
 8001be0:	b570      	push	{r4, r5, r6, lr}
 8001be2:	460e      	mov	r6, r1
 8001be4:	4605      	mov	r5, r0
 8001be6:	b118      	cbz	r0, 8001bf0 <_puts_r+0x10>
 8001be8:	6983      	ldr	r3, [r0, #24]
 8001bea:	b90b      	cbnz	r3, 8001bf0 <_puts_r+0x10>
 8001bec:	f000 fa48 	bl	8002080 <__sinit>
 8001bf0:	69ab      	ldr	r3, [r5, #24]
 8001bf2:	68ac      	ldr	r4, [r5, #8]
 8001bf4:	b913      	cbnz	r3, 8001bfc <_puts_r+0x1c>
 8001bf6:	4628      	mov	r0, r5
 8001bf8:	f000 fa42 	bl	8002080 <__sinit>
 8001bfc:	4b2c      	ldr	r3, [pc, #176]	; (8001cb0 <_puts_r+0xd0>)
 8001bfe:	429c      	cmp	r4, r3
 8001c00:	d120      	bne.n	8001c44 <_puts_r+0x64>
 8001c02:	686c      	ldr	r4, [r5, #4]
 8001c04:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001c06:	07db      	lsls	r3, r3, #31
 8001c08:	d405      	bmi.n	8001c16 <_puts_r+0x36>
 8001c0a:	89a3      	ldrh	r3, [r4, #12]
 8001c0c:	0598      	lsls	r0, r3, #22
 8001c0e:	d402      	bmi.n	8001c16 <_puts_r+0x36>
 8001c10:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001c12:	f000 fad3 	bl	80021bc <__retarget_lock_acquire_recursive>
 8001c16:	89a3      	ldrh	r3, [r4, #12]
 8001c18:	0719      	lsls	r1, r3, #28
 8001c1a:	d51d      	bpl.n	8001c58 <_puts_r+0x78>
 8001c1c:	6923      	ldr	r3, [r4, #16]
 8001c1e:	b1db      	cbz	r3, 8001c58 <_puts_r+0x78>
 8001c20:	3e01      	subs	r6, #1
 8001c22:	68a3      	ldr	r3, [r4, #8]
 8001c24:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8001c28:	3b01      	subs	r3, #1
 8001c2a:	60a3      	str	r3, [r4, #8]
 8001c2c:	bb39      	cbnz	r1, 8001c7e <_puts_r+0x9e>
 8001c2e:	2b00      	cmp	r3, #0
 8001c30:	da38      	bge.n	8001ca4 <_puts_r+0xc4>
 8001c32:	4622      	mov	r2, r4
 8001c34:	210a      	movs	r1, #10
 8001c36:	4628      	mov	r0, r5
 8001c38:	f000 f848 	bl	8001ccc <__swbuf_r>
 8001c3c:	3001      	adds	r0, #1
 8001c3e:	d011      	beq.n	8001c64 <_puts_r+0x84>
 8001c40:	250a      	movs	r5, #10
 8001c42:	e011      	b.n	8001c68 <_puts_r+0x88>
 8001c44:	4b1b      	ldr	r3, [pc, #108]	; (8001cb4 <_puts_r+0xd4>)
 8001c46:	429c      	cmp	r4, r3
 8001c48:	d101      	bne.n	8001c4e <_puts_r+0x6e>
 8001c4a:	68ac      	ldr	r4, [r5, #8]
 8001c4c:	e7da      	b.n	8001c04 <_puts_r+0x24>
 8001c4e:	4b1a      	ldr	r3, [pc, #104]	; (8001cb8 <_puts_r+0xd8>)
 8001c50:	429c      	cmp	r4, r3
 8001c52:	bf08      	it	eq
 8001c54:	68ec      	ldreq	r4, [r5, #12]
 8001c56:	e7d5      	b.n	8001c04 <_puts_r+0x24>
 8001c58:	4621      	mov	r1, r4
 8001c5a:	4628      	mov	r0, r5
 8001c5c:	f000 f888 	bl	8001d70 <__swsetup_r>
 8001c60:	2800      	cmp	r0, #0
 8001c62:	d0dd      	beq.n	8001c20 <_puts_r+0x40>
 8001c64:	f04f 35ff 	mov.w	r5, #4294967295
 8001c68:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001c6a:	07da      	lsls	r2, r3, #31
 8001c6c:	d405      	bmi.n	8001c7a <_puts_r+0x9a>
 8001c6e:	89a3      	ldrh	r3, [r4, #12]
 8001c70:	059b      	lsls	r3, r3, #22
 8001c72:	d402      	bmi.n	8001c7a <_puts_r+0x9a>
 8001c74:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001c76:	f000 faa2 	bl	80021be <__retarget_lock_release_recursive>
 8001c7a:	4628      	mov	r0, r5
 8001c7c:	bd70      	pop	{r4, r5, r6, pc}
 8001c7e:	2b00      	cmp	r3, #0
 8001c80:	da04      	bge.n	8001c8c <_puts_r+0xac>
 8001c82:	69a2      	ldr	r2, [r4, #24]
 8001c84:	429a      	cmp	r2, r3
 8001c86:	dc06      	bgt.n	8001c96 <_puts_r+0xb6>
 8001c88:	290a      	cmp	r1, #10
 8001c8a:	d004      	beq.n	8001c96 <_puts_r+0xb6>
 8001c8c:	6823      	ldr	r3, [r4, #0]
 8001c8e:	1c5a      	adds	r2, r3, #1
 8001c90:	6022      	str	r2, [r4, #0]
 8001c92:	7019      	strb	r1, [r3, #0]
 8001c94:	e7c5      	b.n	8001c22 <_puts_r+0x42>
 8001c96:	4622      	mov	r2, r4
 8001c98:	4628      	mov	r0, r5
 8001c9a:	f000 f817 	bl	8001ccc <__swbuf_r>
 8001c9e:	3001      	adds	r0, #1
 8001ca0:	d1bf      	bne.n	8001c22 <_puts_r+0x42>
 8001ca2:	e7df      	b.n	8001c64 <_puts_r+0x84>
 8001ca4:	6823      	ldr	r3, [r4, #0]
 8001ca6:	250a      	movs	r5, #10
 8001ca8:	1c5a      	adds	r2, r3, #1
 8001caa:	6022      	str	r2, [r4, #0]
 8001cac:	701d      	strb	r5, [r3, #0]
 8001cae:	e7db      	b.n	8001c68 <_puts_r+0x88>
 8001cb0:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
 8001cb4:	080030b0 	stmdaeq	r0, {r4, r5, r7, ip, sp}
 8001cb8:	08003070 	stmdaeq	r0, {r4, r5, r6, ip, sp}

08001cbc <puts>:
 8001cbc:	4b02      	ldr	r3, [pc, #8]	; (8001cc8 <puts+0xc>)
 8001cbe:	4601      	mov	r1, r0
 8001cc0:	6818      	ldr	r0, [r3, #0]
 8001cc2:	f7ff bf8d 	b.w	8001be0 <_puts_r>
 8001cc6:	bf00      	nop
 8001cc8:	2000000c 	andcs	r0, r0, ip

08001ccc <__swbuf_r>:
 8001ccc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001cce:	460e      	mov	r6, r1
 8001cd0:	4614      	mov	r4, r2
 8001cd2:	4605      	mov	r5, r0
 8001cd4:	b118      	cbz	r0, 8001cde <__swbuf_r+0x12>
 8001cd6:	6983      	ldr	r3, [r0, #24]
 8001cd8:	b90b      	cbnz	r3, 8001cde <__swbuf_r+0x12>
 8001cda:	f000 f9d1 	bl	8002080 <__sinit>
 8001cde:	4b21      	ldr	r3, [pc, #132]	; (8001d64 <__swbuf_r+0x98>)
 8001ce0:	429c      	cmp	r4, r3
 8001ce2:	d12b      	bne.n	8001d3c <__swbuf_r+0x70>
 8001ce4:	686c      	ldr	r4, [r5, #4]
 8001ce6:	69a3      	ldr	r3, [r4, #24]
 8001ce8:	60a3      	str	r3, [r4, #8]
 8001cea:	89a3      	ldrh	r3, [r4, #12]
 8001cec:	071a      	lsls	r2, r3, #28
 8001cee:	d52f      	bpl.n	8001d50 <__swbuf_r+0x84>
 8001cf0:	6923      	ldr	r3, [r4, #16]
 8001cf2:	b36b      	cbz	r3, 8001d50 <__swbuf_r+0x84>
 8001cf4:	6923      	ldr	r3, [r4, #16]
 8001cf6:	6820      	ldr	r0, [r4, #0]
 8001cf8:	1ac0      	subs	r0, r0, r3
 8001cfa:	6963      	ldr	r3, [r4, #20]
 8001cfc:	b2f6      	uxtb	r6, r6
 8001cfe:	4283      	cmp	r3, r0
 8001d00:	4637      	mov	r7, r6
 8001d02:	dc04      	bgt.n	8001d0e <__swbuf_r+0x42>
 8001d04:	4621      	mov	r1, r4
 8001d06:	4628      	mov	r0, r5
 8001d08:	f000 f926 	bl	8001f58 <_fflush_r>
 8001d0c:	bb30      	cbnz	r0, 8001d5c <__swbuf_r+0x90>
 8001d0e:	68a3      	ldr	r3, [r4, #8]
 8001d10:	3b01      	subs	r3, #1
 8001d12:	60a3      	str	r3, [r4, #8]
 8001d14:	6823      	ldr	r3, [r4, #0]
 8001d16:	1c5a      	adds	r2, r3, #1
 8001d18:	6022      	str	r2, [r4, #0]
 8001d1a:	701e      	strb	r6, [r3, #0]
 8001d1c:	6963      	ldr	r3, [r4, #20]
 8001d1e:	3001      	adds	r0, #1
 8001d20:	4283      	cmp	r3, r0
 8001d22:	d004      	beq.n	8001d2e <__swbuf_r+0x62>
 8001d24:	89a3      	ldrh	r3, [r4, #12]
 8001d26:	07db      	lsls	r3, r3, #31
 8001d28:	d506      	bpl.n	8001d38 <__swbuf_r+0x6c>
 8001d2a:	2e0a      	cmp	r6, #10
 8001d2c:	d104      	bne.n	8001d38 <__swbuf_r+0x6c>
 8001d2e:	4621      	mov	r1, r4
 8001d30:	4628      	mov	r0, r5
 8001d32:	f000 f911 	bl	8001f58 <_fflush_r>
 8001d36:	b988      	cbnz	r0, 8001d5c <__swbuf_r+0x90>
 8001d38:	4638      	mov	r0, r7
 8001d3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001d3c:	4b0a      	ldr	r3, [pc, #40]	; (8001d68 <__swbuf_r+0x9c>)
 8001d3e:	429c      	cmp	r4, r3
 8001d40:	d101      	bne.n	8001d46 <__swbuf_r+0x7a>
 8001d42:	68ac      	ldr	r4, [r5, #8]
 8001d44:	e7cf      	b.n	8001ce6 <__swbuf_r+0x1a>
 8001d46:	4b09      	ldr	r3, [pc, #36]	; (8001d6c <__swbuf_r+0xa0>)
 8001d48:	429c      	cmp	r4, r3
 8001d4a:	bf08      	it	eq
 8001d4c:	68ec      	ldreq	r4, [r5, #12]
 8001d4e:	e7ca      	b.n	8001ce6 <__swbuf_r+0x1a>
 8001d50:	4621      	mov	r1, r4
 8001d52:	4628      	mov	r0, r5
 8001d54:	f000 f80c 	bl	8001d70 <__swsetup_r>
 8001d58:	2800      	cmp	r0, #0
 8001d5a:	d0cb      	beq.n	8001cf4 <__swbuf_r+0x28>
 8001d5c:	f04f 37ff 	mov.w	r7, #4294967295
 8001d60:	e7ea      	b.n	8001d38 <__swbuf_r+0x6c>
 8001d62:	bf00      	nop
 8001d64:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
 8001d68:	080030b0 	stmdaeq	r0, {r4, r5, r7, ip, sp}
 8001d6c:	08003070 	stmdaeq	r0, {r4, r5, r6, ip, sp}

08001d70 <__swsetup_r>:
 8001d70:	4b32      	ldr	r3, [pc, #200]	; (8001e3c <__swsetup_r+0xcc>)
 8001d72:	b570      	push	{r4, r5, r6, lr}
 8001d74:	681d      	ldr	r5, [r3, #0]
 8001d76:	4606      	mov	r6, r0
 8001d78:	460c      	mov	r4, r1
 8001d7a:	b125      	cbz	r5, 8001d86 <__swsetup_r+0x16>
 8001d7c:	69ab      	ldr	r3, [r5, #24]
 8001d7e:	b913      	cbnz	r3, 8001d86 <__swsetup_r+0x16>
 8001d80:	4628      	mov	r0, r5
 8001d82:	f000 f97d 	bl	8002080 <__sinit>
 8001d86:	4b2e      	ldr	r3, [pc, #184]	; (8001e40 <__swsetup_r+0xd0>)
 8001d88:	429c      	cmp	r4, r3
 8001d8a:	d10f      	bne.n	8001dac <__swsetup_r+0x3c>
 8001d8c:	686c      	ldr	r4, [r5, #4]
 8001d8e:	89a3      	ldrh	r3, [r4, #12]
 8001d90:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001d94:	0719      	lsls	r1, r3, #28
 8001d96:	d42c      	bmi.n	8001df2 <__swsetup_r+0x82>
 8001d98:	06dd      	lsls	r5, r3, #27
 8001d9a:	d411      	bmi.n	8001dc0 <__swsetup_r+0x50>
 8001d9c:	2309      	movs	r3, #9
 8001d9e:	6033      	str	r3, [r6, #0]
 8001da0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001da4:	81a3      	strh	r3, [r4, #12]
 8001da6:	f04f 30ff 	mov.w	r0, #4294967295
 8001daa:	e03e      	b.n	8001e2a <__swsetup_r+0xba>
 8001dac:	4b25      	ldr	r3, [pc, #148]	; (8001e44 <__swsetup_r+0xd4>)
 8001dae:	429c      	cmp	r4, r3
 8001db0:	d101      	bne.n	8001db6 <__swsetup_r+0x46>
 8001db2:	68ac      	ldr	r4, [r5, #8]
 8001db4:	e7eb      	b.n	8001d8e <__swsetup_r+0x1e>
 8001db6:	4b24      	ldr	r3, [pc, #144]	; (8001e48 <__swsetup_r+0xd8>)
 8001db8:	429c      	cmp	r4, r3
 8001dba:	bf08      	it	eq
 8001dbc:	68ec      	ldreq	r4, [r5, #12]
 8001dbe:	e7e6      	b.n	8001d8e <__swsetup_r+0x1e>
 8001dc0:	0758      	lsls	r0, r3, #29
 8001dc2:	d512      	bpl.n	8001dea <__swsetup_r+0x7a>
 8001dc4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001dc6:	b141      	cbz	r1, 8001dda <__swsetup_r+0x6a>
 8001dc8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001dcc:	4299      	cmp	r1, r3
 8001dce:	d002      	beq.n	8001dd6 <__swsetup_r+0x66>
 8001dd0:	4630      	mov	r0, r6
 8001dd2:	f000 fa5b 	bl	800228c <_free_r>
 8001dd6:	2300      	movs	r3, #0
 8001dd8:	6363      	str	r3, [r4, #52]	; 0x34
 8001dda:	89a3      	ldrh	r3, [r4, #12]
 8001ddc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001de0:	81a3      	strh	r3, [r4, #12]
 8001de2:	2300      	movs	r3, #0
 8001de4:	6063      	str	r3, [r4, #4]
 8001de6:	6923      	ldr	r3, [r4, #16]
 8001de8:	6023      	str	r3, [r4, #0]
 8001dea:	89a3      	ldrh	r3, [r4, #12]
 8001dec:	f043 0308 	orr.w	r3, r3, #8
 8001df0:	81a3      	strh	r3, [r4, #12]
 8001df2:	6923      	ldr	r3, [r4, #16]
 8001df4:	b94b      	cbnz	r3, 8001e0a <__swsetup_r+0x9a>
 8001df6:	89a3      	ldrh	r3, [r4, #12]
 8001df8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001dfc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001e00:	d003      	beq.n	8001e0a <__swsetup_r+0x9a>
 8001e02:	4621      	mov	r1, r4
 8001e04:	4630      	mov	r0, r6
 8001e06:	f000 fa01 	bl	800220c <__smakebuf_r>
 8001e0a:	89a0      	ldrh	r0, [r4, #12]
 8001e0c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001e10:	f010 0301 	ands.w	r3, r0, #1
 8001e14:	d00a      	beq.n	8001e2c <__swsetup_r+0xbc>
 8001e16:	2300      	movs	r3, #0
 8001e18:	60a3      	str	r3, [r4, #8]
 8001e1a:	6963      	ldr	r3, [r4, #20]
 8001e1c:	425b      	negs	r3, r3
 8001e1e:	61a3      	str	r3, [r4, #24]
 8001e20:	6923      	ldr	r3, [r4, #16]
 8001e22:	b943      	cbnz	r3, 8001e36 <__swsetup_r+0xc6>
 8001e24:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001e28:	d1ba      	bne.n	8001da0 <__swsetup_r+0x30>
 8001e2a:	bd70      	pop	{r4, r5, r6, pc}
 8001e2c:	0781      	lsls	r1, r0, #30
 8001e2e:	bf58      	it	pl
 8001e30:	6963      	ldrpl	r3, [r4, #20]
 8001e32:	60a3      	str	r3, [r4, #8]
 8001e34:	e7f4      	b.n	8001e20 <__swsetup_r+0xb0>
 8001e36:	2000      	movs	r0, #0
 8001e38:	e7f7      	b.n	8001e2a <__swsetup_r+0xba>
 8001e3a:	bf00      	nop
 8001e3c:	2000000c 	andcs	r0, r0, ip
 8001e40:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
 8001e44:	080030b0 	stmdaeq	r0, {r4, r5, r7, ip, sp}
 8001e48:	08003070 	stmdaeq	r0, {r4, r5, r6, ip, sp}

08001e4c <__sflush_r>:
 8001e4c:	898a      	ldrh	r2, [r1, #12]
 8001e4e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e52:	4605      	mov	r5, r0
 8001e54:	0710      	lsls	r0, r2, #28
 8001e56:	460c      	mov	r4, r1
 8001e58:	d458      	bmi.n	8001f0c <__sflush_r+0xc0>
 8001e5a:	684b      	ldr	r3, [r1, #4]
 8001e5c:	2b00      	cmp	r3, #0
 8001e5e:	dc05      	bgt.n	8001e6c <__sflush_r+0x20>
 8001e60:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001e62:	2b00      	cmp	r3, #0
 8001e64:	dc02      	bgt.n	8001e6c <__sflush_r+0x20>
 8001e66:	2000      	movs	r0, #0
 8001e68:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001e6c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001e6e:	2e00      	cmp	r6, #0
 8001e70:	d0f9      	beq.n	8001e66 <__sflush_r+0x1a>
 8001e72:	2300      	movs	r3, #0
 8001e74:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001e78:	682f      	ldr	r7, [r5, #0]
 8001e7a:	602b      	str	r3, [r5, #0]
 8001e7c:	d032      	beq.n	8001ee4 <__sflush_r+0x98>
 8001e7e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001e80:	89a3      	ldrh	r3, [r4, #12]
 8001e82:	075a      	lsls	r2, r3, #29
 8001e84:	d505      	bpl.n	8001e92 <__sflush_r+0x46>
 8001e86:	6863      	ldr	r3, [r4, #4]
 8001e88:	1ac0      	subs	r0, r0, r3
 8001e8a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001e8c:	b10b      	cbz	r3, 8001e92 <__sflush_r+0x46>
 8001e8e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001e90:	1ac0      	subs	r0, r0, r3
 8001e92:	2300      	movs	r3, #0
 8001e94:	4602      	mov	r2, r0
 8001e96:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001e98:	6a21      	ldr	r1, [r4, #32]
 8001e9a:	4628      	mov	r0, r5
 8001e9c:	47b0      	blx	r6
 8001e9e:	1c43      	adds	r3, r0, #1
 8001ea0:	89a3      	ldrh	r3, [r4, #12]
 8001ea2:	d106      	bne.n	8001eb2 <__sflush_r+0x66>
 8001ea4:	6829      	ldr	r1, [r5, #0]
 8001ea6:	291d      	cmp	r1, #29
 8001ea8:	d82c      	bhi.n	8001f04 <__sflush_r+0xb8>
 8001eaa:	4a2a      	ldr	r2, [pc, #168]	; (8001f54 <__sflush_r+0x108>)
 8001eac:	40ca      	lsrs	r2, r1
 8001eae:	07d6      	lsls	r6, r2, #31
 8001eb0:	d528      	bpl.n	8001f04 <__sflush_r+0xb8>
 8001eb2:	2200      	movs	r2, #0
 8001eb4:	6062      	str	r2, [r4, #4]
 8001eb6:	04d9      	lsls	r1, r3, #19
 8001eb8:	6922      	ldr	r2, [r4, #16]
 8001eba:	6022      	str	r2, [r4, #0]
 8001ebc:	d504      	bpl.n	8001ec8 <__sflush_r+0x7c>
 8001ebe:	1c42      	adds	r2, r0, #1
 8001ec0:	d101      	bne.n	8001ec6 <__sflush_r+0x7a>
 8001ec2:	682b      	ldr	r3, [r5, #0]
 8001ec4:	b903      	cbnz	r3, 8001ec8 <__sflush_r+0x7c>
 8001ec6:	6560      	str	r0, [r4, #84]	; 0x54
 8001ec8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001eca:	602f      	str	r7, [r5, #0]
 8001ecc:	2900      	cmp	r1, #0
 8001ece:	d0ca      	beq.n	8001e66 <__sflush_r+0x1a>
 8001ed0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001ed4:	4299      	cmp	r1, r3
 8001ed6:	d002      	beq.n	8001ede <__sflush_r+0x92>
 8001ed8:	4628      	mov	r0, r5
 8001eda:	f000 f9d7 	bl	800228c <_free_r>
 8001ede:	2000      	movs	r0, #0
 8001ee0:	6360      	str	r0, [r4, #52]	; 0x34
 8001ee2:	e7c1      	b.n	8001e68 <__sflush_r+0x1c>
 8001ee4:	6a21      	ldr	r1, [r4, #32]
 8001ee6:	2301      	movs	r3, #1
 8001ee8:	4628      	mov	r0, r5
 8001eea:	47b0      	blx	r6
 8001eec:	1c41      	adds	r1, r0, #1
 8001eee:	d1c7      	bne.n	8001e80 <__sflush_r+0x34>
 8001ef0:	682b      	ldr	r3, [r5, #0]
 8001ef2:	2b00      	cmp	r3, #0
 8001ef4:	d0c4      	beq.n	8001e80 <__sflush_r+0x34>
 8001ef6:	2b1d      	cmp	r3, #29
 8001ef8:	d001      	beq.n	8001efe <__sflush_r+0xb2>
 8001efa:	2b16      	cmp	r3, #22
 8001efc:	d101      	bne.n	8001f02 <__sflush_r+0xb6>
 8001efe:	602f      	str	r7, [r5, #0]
 8001f00:	e7b1      	b.n	8001e66 <__sflush_r+0x1a>
 8001f02:	89a3      	ldrh	r3, [r4, #12]
 8001f04:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001f08:	81a3      	strh	r3, [r4, #12]
 8001f0a:	e7ad      	b.n	8001e68 <__sflush_r+0x1c>
 8001f0c:	690f      	ldr	r7, [r1, #16]
 8001f0e:	2f00      	cmp	r7, #0
 8001f10:	d0a9      	beq.n	8001e66 <__sflush_r+0x1a>
 8001f12:	0793      	lsls	r3, r2, #30
 8001f14:	680e      	ldr	r6, [r1, #0]
 8001f16:	bf08      	it	eq
 8001f18:	694b      	ldreq	r3, [r1, #20]
 8001f1a:	600f      	str	r7, [r1, #0]
 8001f1c:	bf18      	it	ne
 8001f1e:	2300      	movne	r3, #0
 8001f20:	eba6 0807 	sub.w	r8, r6, r7
 8001f24:	608b      	str	r3, [r1, #8]
 8001f26:	f1b8 0f00 	cmp.w	r8, #0
 8001f2a:	dd9c      	ble.n	8001e66 <__sflush_r+0x1a>
 8001f2c:	6a21      	ldr	r1, [r4, #32]
 8001f2e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001f30:	4643      	mov	r3, r8
 8001f32:	463a      	mov	r2, r7
 8001f34:	4628      	mov	r0, r5
 8001f36:	47b0      	blx	r6
 8001f38:	2800      	cmp	r0, #0
 8001f3a:	dc06      	bgt.n	8001f4a <__sflush_r+0xfe>
 8001f3c:	89a3      	ldrh	r3, [r4, #12]
 8001f3e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001f42:	81a3      	strh	r3, [r4, #12]
 8001f44:	f04f 30ff 	mov.w	r0, #4294967295
 8001f48:	e78e      	b.n	8001e68 <__sflush_r+0x1c>
 8001f4a:	4407      	add	r7, r0
 8001f4c:	eba8 0800 	sub.w	r8, r8, r0
 8001f50:	e7e9      	b.n	8001f26 <__sflush_r+0xda>
 8001f52:	bf00      	nop
 8001f54:	20400001 	subcs	r0, r0, r1

08001f58 <_fflush_r>:
 8001f58:	b538      	push	{r3, r4, r5, lr}
 8001f5a:	690b      	ldr	r3, [r1, #16]
 8001f5c:	4605      	mov	r5, r0
 8001f5e:	460c      	mov	r4, r1
 8001f60:	b913      	cbnz	r3, 8001f68 <_fflush_r+0x10>
 8001f62:	2500      	movs	r5, #0
 8001f64:	4628      	mov	r0, r5
 8001f66:	bd38      	pop	{r3, r4, r5, pc}
 8001f68:	b118      	cbz	r0, 8001f72 <_fflush_r+0x1a>
 8001f6a:	6983      	ldr	r3, [r0, #24]
 8001f6c:	b90b      	cbnz	r3, 8001f72 <_fflush_r+0x1a>
 8001f6e:	f000 f887 	bl	8002080 <__sinit>
 8001f72:	4b14      	ldr	r3, [pc, #80]	; (8001fc4 <_fflush_r+0x6c>)
 8001f74:	429c      	cmp	r4, r3
 8001f76:	d11b      	bne.n	8001fb0 <_fflush_r+0x58>
 8001f78:	686c      	ldr	r4, [r5, #4]
 8001f7a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001f7e:	2b00      	cmp	r3, #0
 8001f80:	d0ef      	beq.n	8001f62 <_fflush_r+0xa>
 8001f82:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001f84:	07d0      	lsls	r0, r2, #31
 8001f86:	d404      	bmi.n	8001f92 <_fflush_r+0x3a>
 8001f88:	0599      	lsls	r1, r3, #22
 8001f8a:	d402      	bmi.n	8001f92 <_fflush_r+0x3a>
 8001f8c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001f8e:	f000 f915 	bl	80021bc <__retarget_lock_acquire_recursive>
 8001f92:	4628      	mov	r0, r5
 8001f94:	4621      	mov	r1, r4
 8001f96:	f7ff ff59 	bl	8001e4c <__sflush_r>
 8001f9a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001f9c:	07da      	lsls	r2, r3, #31
 8001f9e:	4605      	mov	r5, r0
 8001fa0:	d4e0      	bmi.n	8001f64 <_fflush_r+0xc>
 8001fa2:	89a3      	ldrh	r3, [r4, #12]
 8001fa4:	059b      	lsls	r3, r3, #22
 8001fa6:	d4dd      	bmi.n	8001f64 <_fflush_r+0xc>
 8001fa8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001faa:	f000 f908 	bl	80021be <__retarget_lock_release_recursive>
 8001fae:	e7d9      	b.n	8001f64 <_fflush_r+0xc>
 8001fb0:	4b05      	ldr	r3, [pc, #20]	; (8001fc8 <_fflush_r+0x70>)
 8001fb2:	429c      	cmp	r4, r3
 8001fb4:	d101      	bne.n	8001fba <_fflush_r+0x62>
 8001fb6:	68ac      	ldr	r4, [r5, #8]
 8001fb8:	e7df      	b.n	8001f7a <_fflush_r+0x22>
 8001fba:	4b04      	ldr	r3, [pc, #16]	; (8001fcc <_fflush_r+0x74>)
 8001fbc:	429c      	cmp	r4, r3
 8001fbe:	bf08      	it	eq
 8001fc0:	68ec      	ldreq	r4, [r5, #12]
 8001fc2:	e7da      	b.n	8001f7a <_fflush_r+0x22>
 8001fc4:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
 8001fc8:	080030b0 	stmdaeq	r0, {r4, r5, r7, ip, sp}
 8001fcc:	08003070 	stmdaeq	r0, {r4, r5, r6, ip, sp}

08001fd0 <std>:
 8001fd0:	2300      	movs	r3, #0
 8001fd2:	b510      	push	{r4, lr}
 8001fd4:	4604      	mov	r4, r0
 8001fd6:	e9c0 3300 	strd	r3, r3, [r0]
 8001fda:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8001fde:	6083      	str	r3, [r0, #8]
 8001fe0:	8181      	strh	r1, [r0, #12]
 8001fe2:	6643      	str	r3, [r0, #100]	; 0x64
 8001fe4:	81c2      	strh	r2, [r0, #14]
 8001fe6:	6183      	str	r3, [r0, #24]
 8001fe8:	4619      	mov	r1, r3
 8001fea:	2208      	movs	r2, #8
 8001fec:	305c      	adds	r0, #92	; 0x5c
 8001fee:	f7ff fdd7 	bl	8001ba0 <memset>
 8001ff2:	4b05      	ldr	r3, [pc, #20]	; (8002008 <std+0x38>)
 8001ff4:	6263      	str	r3, [r4, #36]	; 0x24
 8001ff6:	4b05      	ldr	r3, [pc, #20]	; (800200c <std+0x3c>)
 8001ff8:	62a3      	str	r3, [r4, #40]	; 0x28
 8001ffa:	4b05      	ldr	r3, [pc, #20]	; (8002010 <std+0x40>)
 8001ffc:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001ffe:	4b05      	ldr	r3, [pc, #20]	; (8002014 <std+0x44>)
 8002000:	6224      	str	r4, [r4, #32]
 8002002:	6323      	str	r3, [r4, #48]	; 0x30
 8002004:	bd10      	pop	{r4, pc}
 8002006:	bf00      	nop
 8002008:	08002a49 	stmdaeq	r0, {r0, r3, r6, r9, fp, sp}
 800200c:	08002a6b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r9, fp, sp}
 8002010:	08002aa3 	stmdaeq	r0, {r0, r1, r5, r7, r9, fp, sp}
 8002014:	08002ac7 	stmdaeq	r0, {r0, r1, r2, r6, r7, r9, fp, sp}

08002018 <_cleanup_r>:
 8002018:	4901      	ldr	r1, [pc, #4]	; (8002020 <_cleanup_r+0x8>)
 800201a:	f000 b8af 	b.w	800217c <_fwalk_reent>
 800201e:	bf00      	nop
 8002020:	08001f59 	stmdaeq	r0, {r0, r3, r4, r6, r8, r9, sl, fp, ip}

08002024 <__sfmoreglue>:
 8002024:	b570      	push	{r4, r5, r6, lr}
 8002026:	2268      	movs	r2, #104	; 0x68
 8002028:	1e4d      	subs	r5, r1, #1
 800202a:	4355      	muls	r5, r2
 800202c:	460e      	mov	r6, r1
 800202e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8002032:	f000 f997 	bl	8002364 <_malloc_r>
 8002036:	4604      	mov	r4, r0
 8002038:	b140      	cbz	r0, 800204c <__sfmoreglue+0x28>
 800203a:	2100      	movs	r1, #0
 800203c:	e9c0 1600 	strd	r1, r6, [r0]
 8002040:	300c      	adds	r0, #12
 8002042:	60a0      	str	r0, [r4, #8]
 8002044:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8002048:	f7ff fdaa 	bl	8001ba0 <memset>
 800204c:	4620      	mov	r0, r4
 800204e:	bd70      	pop	{r4, r5, r6, pc}

08002050 <__sfp_lock_acquire>:
 8002050:	4801      	ldr	r0, [pc, #4]	; (8002058 <__sfp_lock_acquire+0x8>)
 8002052:	f000 b8b3 	b.w	80021bc <__retarget_lock_acquire_recursive>
 8002056:	bf00      	nop
 8002058:	20000225 	andcs	r0, r0, r5, lsr #4

0800205c <__sfp_lock_release>:
 800205c:	4801      	ldr	r0, [pc, #4]	; (8002064 <__sfp_lock_release+0x8>)
 800205e:	f000 b8ae 	b.w	80021be <__retarget_lock_release_recursive>
 8002062:	bf00      	nop
 8002064:	20000225 	andcs	r0, r0, r5, lsr #4

08002068 <__sinit_lock_acquire>:
 8002068:	4801      	ldr	r0, [pc, #4]	; (8002070 <__sinit_lock_acquire+0x8>)
 800206a:	f000 b8a7 	b.w	80021bc <__retarget_lock_acquire_recursive>
 800206e:	bf00      	nop
 8002070:	20000226 	andcs	r0, r0, r6, lsr #4

08002074 <__sinit_lock_release>:
 8002074:	4801      	ldr	r0, [pc, #4]	; (800207c <__sinit_lock_release+0x8>)
 8002076:	f000 b8a2 	b.w	80021be <__retarget_lock_release_recursive>
 800207a:	bf00      	nop
 800207c:	20000226 	andcs	r0, r0, r6, lsr #4

08002080 <__sinit>:
 8002080:	b510      	push	{r4, lr}
 8002082:	4604      	mov	r4, r0
 8002084:	f7ff fff0 	bl	8002068 <__sinit_lock_acquire>
 8002088:	69a3      	ldr	r3, [r4, #24]
 800208a:	b11b      	cbz	r3, 8002094 <__sinit+0x14>
 800208c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8002090:	f7ff bff0 	b.w	8002074 <__sinit_lock_release>
 8002094:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8002098:	6523      	str	r3, [r4, #80]	; 0x50
 800209a:	4b13      	ldr	r3, [pc, #76]	; (80020e8 <__sinit+0x68>)
 800209c:	4a13      	ldr	r2, [pc, #76]	; (80020ec <__sinit+0x6c>)
 800209e:	681b      	ldr	r3, [r3, #0]
 80020a0:	62a2      	str	r2, [r4, #40]	; 0x28
 80020a2:	42a3      	cmp	r3, r4
 80020a4:	bf04      	itt	eq
 80020a6:	2301      	moveq	r3, #1
 80020a8:	61a3      	streq	r3, [r4, #24]
 80020aa:	4620      	mov	r0, r4
 80020ac:	f000 f820 	bl	80020f0 <__sfp>
 80020b0:	6060      	str	r0, [r4, #4]
 80020b2:	4620      	mov	r0, r4
 80020b4:	f000 f81c 	bl	80020f0 <__sfp>
 80020b8:	60a0      	str	r0, [r4, #8]
 80020ba:	4620      	mov	r0, r4
 80020bc:	f000 f818 	bl	80020f0 <__sfp>
 80020c0:	2200      	movs	r2, #0
 80020c2:	60e0      	str	r0, [r4, #12]
 80020c4:	2104      	movs	r1, #4
 80020c6:	6860      	ldr	r0, [r4, #4]
 80020c8:	f7ff ff82 	bl	8001fd0 <std>
 80020cc:	68a0      	ldr	r0, [r4, #8]
 80020ce:	2201      	movs	r2, #1
 80020d0:	2109      	movs	r1, #9
 80020d2:	f7ff ff7d 	bl	8001fd0 <std>
 80020d6:	68e0      	ldr	r0, [r4, #12]
 80020d8:	2202      	movs	r2, #2
 80020da:	2112      	movs	r1, #18
 80020dc:	f7ff ff78 	bl	8001fd0 <std>
 80020e0:	2301      	movs	r3, #1
 80020e2:	61a3      	str	r3, [r4, #24]
 80020e4:	e7d2      	b.n	800208c <__sinit+0xc>
 80020e6:	bf00      	nop
 80020e8:	0800306c 	stmdaeq	r0, {r2, r3, r5, r6, ip, sp}
 80020ec:	08002019 	stmdaeq	r0, {r0, r3, r4, sp}

080020f0 <__sfp>:
 80020f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80020f2:	4607      	mov	r7, r0
 80020f4:	f7ff ffac 	bl	8002050 <__sfp_lock_acquire>
 80020f8:	4b1e      	ldr	r3, [pc, #120]	; (8002174 <__sfp+0x84>)
 80020fa:	681e      	ldr	r6, [r3, #0]
 80020fc:	69b3      	ldr	r3, [r6, #24]
 80020fe:	b913      	cbnz	r3, 8002106 <__sfp+0x16>
 8002100:	4630      	mov	r0, r6
 8002102:	f7ff ffbd 	bl	8002080 <__sinit>
 8002106:	3648      	adds	r6, #72	; 0x48
 8002108:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800210c:	3b01      	subs	r3, #1
 800210e:	d503      	bpl.n	8002118 <__sfp+0x28>
 8002110:	6833      	ldr	r3, [r6, #0]
 8002112:	b30b      	cbz	r3, 8002158 <__sfp+0x68>
 8002114:	6836      	ldr	r6, [r6, #0]
 8002116:	e7f7      	b.n	8002108 <__sfp+0x18>
 8002118:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800211c:	b9d5      	cbnz	r5, 8002154 <__sfp+0x64>
 800211e:	4b16      	ldr	r3, [pc, #88]	; (8002178 <__sfp+0x88>)
 8002120:	60e3      	str	r3, [r4, #12]
 8002122:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8002126:	6665      	str	r5, [r4, #100]	; 0x64
 8002128:	f000 f847 	bl	80021ba <__retarget_lock_init_recursive>
 800212c:	f7ff ff96 	bl	800205c <__sfp_lock_release>
 8002130:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8002134:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8002138:	6025      	str	r5, [r4, #0]
 800213a:	61a5      	str	r5, [r4, #24]
 800213c:	2208      	movs	r2, #8
 800213e:	4629      	mov	r1, r5
 8002140:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8002144:	f7ff fd2c 	bl	8001ba0 <memset>
 8002148:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800214c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8002150:	4620      	mov	r0, r4
 8002152:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002154:	3468      	adds	r4, #104	; 0x68
 8002156:	e7d9      	b.n	800210c <__sfp+0x1c>
 8002158:	2104      	movs	r1, #4
 800215a:	4638      	mov	r0, r7
 800215c:	f7ff ff62 	bl	8002024 <__sfmoreglue>
 8002160:	4604      	mov	r4, r0
 8002162:	6030      	str	r0, [r6, #0]
 8002164:	2800      	cmp	r0, #0
 8002166:	d1d5      	bne.n	8002114 <__sfp+0x24>
 8002168:	f7ff ff78 	bl	800205c <__sfp_lock_release>
 800216c:	230c      	movs	r3, #12
 800216e:	603b      	str	r3, [r7, #0]
 8002170:	e7ee      	b.n	8002150 <__sfp+0x60>
 8002172:	bf00      	nop
 8002174:	0800306c 	stmdaeq	r0, {r2, r3, r5, r6, ip, sp}
 8002178:	ffff0001 			; <UNDEFINED> instruction: 0xffff0001

0800217c <_fwalk_reent>:
 800217c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8002180:	4606      	mov	r6, r0
 8002182:	4688      	mov	r8, r1
 8002184:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8002188:	2700      	movs	r7, #0
 800218a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800218e:	f1b9 0901 	subs.w	r9, r9, #1
 8002192:	d505      	bpl.n	80021a0 <_fwalk_reent+0x24>
 8002194:	6824      	ldr	r4, [r4, #0]
 8002196:	2c00      	cmp	r4, #0
 8002198:	d1f7      	bne.n	800218a <_fwalk_reent+0xe>
 800219a:	4638      	mov	r0, r7
 800219c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80021a0:	89ab      	ldrh	r3, [r5, #12]
 80021a2:	2b01      	cmp	r3, #1
 80021a4:	d907      	bls.n	80021b6 <_fwalk_reent+0x3a>
 80021a6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80021aa:	3301      	adds	r3, #1
 80021ac:	d003      	beq.n	80021b6 <_fwalk_reent+0x3a>
 80021ae:	4629      	mov	r1, r5
 80021b0:	4630      	mov	r0, r6
 80021b2:	47c0      	blx	r8
 80021b4:	4307      	orrs	r7, r0
 80021b6:	3568      	adds	r5, #104	; 0x68
 80021b8:	e7e9      	b.n	800218e <_fwalk_reent+0x12>

080021ba <__retarget_lock_init_recursive>:
 80021ba:	4770      	bx	lr

080021bc <__retarget_lock_acquire_recursive>:
 80021bc:	4770      	bx	lr

080021be <__retarget_lock_release_recursive>:
 80021be:	4770      	bx	lr

080021c0 <__swhatbuf_r>:
 80021c0:	b570      	push	{r4, r5, r6, lr}
 80021c2:	460e      	mov	r6, r1
 80021c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80021c8:	2900      	cmp	r1, #0
 80021ca:	b096      	sub	sp, #88	; 0x58
 80021cc:	4614      	mov	r4, r2
 80021ce:	461d      	mov	r5, r3
 80021d0:	da08      	bge.n	80021e4 <__swhatbuf_r+0x24>
 80021d2:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80021d6:	2200      	movs	r2, #0
 80021d8:	602a      	str	r2, [r5, #0]
 80021da:	061a      	lsls	r2, r3, #24
 80021dc:	d410      	bmi.n	8002200 <__swhatbuf_r+0x40>
 80021de:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80021e2:	e00e      	b.n	8002202 <__swhatbuf_r+0x42>
 80021e4:	466a      	mov	r2, sp
 80021e6:	f000 fc95 	bl	8002b14 <_fstat_r>
 80021ea:	2800      	cmp	r0, #0
 80021ec:	dbf1      	blt.n	80021d2 <__swhatbuf_r+0x12>
 80021ee:	9a01      	ldr	r2, [sp, #4]
 80021f0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80021f4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80021f8:	425a      	negs	r2, r3
 80021fa:	415a      	adcs	r2, r3
 80021fc:	602a      	str	r2, [r5, #0]
 80021fe:	e7ee      	b.n	80021de <__swhatbuf_r+0x1e>
 8002200:	2340      	movs	r3, #64	; 0x40
 8002202:	2000      	movs	r0, #0
 8002204:	6023      	str	r3, [r4, #0]
 8002206:	b016      	add	sp, #88	; 0x58
 8002208:	bd70      	pop	{r4, r5, r6, pc}
	...

0800220c <__smakebuf_r>:
 800220c:	898b      	ldrh	r3, [r1, #12]
 800220e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8002210:	079d      	lsls	r5, r3, #30
 8002212:	4606      	mov	r6, r0
 8002214:	460c      	mov	r4, r1
 8002216:	d507      	bpl.n	8002228 <__smakebuf_r+0x1c>
 8002218:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800221c:	6023      	str	r3, [r4, #0]
 800221e:	6123      	str	r3, [r4, #16]
 8002220:	2301      	movs	r3, #1
 8002222:	6163      	str	r3, [r4, #20]
 8002224:	b002      	add	sp, #8
 8002226:	bd70      	pop	{r4, r5, r6, pc}
 8002228:	ab01      	add	r3, sp, #4
 800222a:	466a      	mov	r2, sp
 800222c:	f7ff ffc8 	bl	80021c0 <__swhatbuf_r>
 8002230:	9900      	ldr	r1, [sp, #0]
 8002232:	4605      	mov	r5, r0
 8002234:	4630      	mov	r0, r6
 8002236:	f000 f895 	bl	8002364 <_malloc_r>
 800223a:	b948      	cbnz	r0, 8002250 <__smakebuf_r+0x44>
 800223c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8002240:	059a      	lsls	r2, r3, #22
 8002242:	d4ef      	bmi.n	8002224 <__smakebuf_r+0x18>
 8002244:	f023 0303 	bic.w	r3, r3, #3
 8002248:	f043 0302 	orr.w	r3, r3, #2
 800224c:	81a3      	strh	r3, [r4, #12]
 800224e:	e7e3      	b.n	8002218 <__smakebuf_r+0xc>
 8002250:	4b0d      	ldr	r3, [pc, #52]	; (8002288 <__smakebuf_r+0x7c>)
 8002252:	62b3      	str	r3, [r6, #40]	; 0x28
 8002254:	89a3      	ldrh	r3, [r4, #12]
 8002256:	6020      	str	r0, [r4, #0]
 8002258:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800225c:	81a3      	strh	r3, [r4, #12]
 800225e:	9b00      	ldr	r3, [sp, #0]
 8002260:	6163      	str	r3, [r4, #20]
 8002262:	9b01      	ldr	r3, [sp, #4]
 8002264:	6120      	str	r0, [r4, #16]
 8002266:	b15b      	cbz	r3, 8002280 <__smakebuf_r+0x74>
 8002268:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800226c:	4630      	mov	r0, r6
 800226e:	f000 fc63 	bl	8002b38 <_isatty_r>
 8002272:	b128      	cbz	r0, 8002280 <__smakebuf_r+0x74>
 8002274:	89a3      	ldrh	r3, [r4, #12]
 8002276:	f023 0303 	bic.w	r3, r3, #3
 800227a:	f043 0301 	orr.w	r3, r3, #1
 800227e:	81a3      	strh	r3, [r4, #12]
 8002280:	89a0      	ldrh	r0, [r4, #12]
 8002282:	4305      	orrs	r5, r0
 8002284:	81a5      	strh	r5, [r4, #12]
 8002286:	e7cd      	b.n	8002224 <__smakebuf_r+0x18>
 8002288:	08002019 	stmdaeq	r0, {r0, r3, r4, sp}

0800228c <_free_r>:
 800228c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800228e:	2900      	cmp	r1, #0
 8002290:	d044      	beq.n	800231c <_free_r+0x90>
 8002292:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8002296:	9001      	str	r0, [sp, #4]
 8002298:	2b00      	cmp	r3, #0
 800229a:	f1a1 0404 	sub.w	r4, r1, #4
 800229e:	bfb8      	it	lt
 80022a0:	18e4      	addlt	r4, r4, r3
 80022a2:	f000 fc6b 	bl	8002b7c <__malloc_lock>
 80022a6:	4a1e      	ldr	r2, [pc, #120]	; (8002320 <_free_r+0x94>)
 80022a8:	9801      	ldr	r0, [sp, #4]
 80022aa:	6813      	ldr	r3, [r2, #0]
 80022ac:	b933      	cbnz	r3, 80022bc <_free_r+0x30>
 80022ae:	6063      	str	r3, [r4, #4]
 80022b0:	6014      	str	r4, [r2, #0]
 80022b2:	b003      	add	sp, #12
 80022b4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80022b8:	f000 bc66 	b.w	8002b88 <__malloc_unlock>
 80022bc:	42a3      	cmp	r3, r4
 80022be:	d908      	bls.n	80022d2 <_free_r+0x46>
 80022c0:	6825      	ldr	r5, [r4, #0]
 80022c2:	1961      	adds	r1, r4, r5
 80022c4:	428b      	cmp	r3, r1
 80022c6:	bf01      	itttt	eq
 80022c8:	6819      	ldreq	r1, [r3, #0]
 80022ca:	685b      	ldreq	r3, [r3, #4]
 80022cc:	1949      	addeq	r1, r1, r5
 80022ce:	6021      	streq	r1, [r4, #0]
 80022d0:	e7ed      	b.n	80022ae <_free_r+0x22>
 80022d2:	461a      	mov	r2, r3
 80022d4:	685b      	ldr	r3, [r3, #4]
 80022d6:	b10b      	cbz	r3, 80022dc <_free_r+0x50>
 80022d8:	42a3      	cmp	r3, r4
 80022da:	d9fa      	bls.n	80022d2 <_free_r+0x46>
 80022dc:	6811      	ldr	r1, [r2, #0]
 80022de:	1855      	adds	r5, r2, r1
 80022e0:	42a5      	cmp	r5, r4
 80022e2:	d10b      	bne.n	80022fc <_free_r+0x70>
 80022e4:	6824      	ldr	r4, [r4, #0]
 80022e6:	4421      	add	r1, r4
 80022e8:	1854      	adds	r4, r2, r1
 80022ea:	42a3      	cmp	r3, r4
 80022ec:	6011      	str	r1, [r2, #0]
 80022ee:	d1e0      	bne.n	80022b2 <_free_r+0x26>
 80022f0:	681c      	ldr	r4, [r3, #0]
 80022f2:	685b      	ldr	r3, [r3, #4]
 80022f4:	6053      	str	r3, [r2, #4]
 80022f6:	4421      	add	r1, r4
 80022f8:	6011      	str	r1, [r2, #0]
 80022fa:	e7da      	b.n	80022b2 <_free_r+0x26>
 80022fc:	d902      	bls.n	8002304 <_free_r+0x78>
 80022fe:	230c      	movs	r3, #12
 8002300:	6003      	str	r3, [r0, #0]
 8002302:	e7d6      	b.n	80022b2 <_free_r+0x26>
 8002304:	6825      	ldr	r5, [r4, #0]
 8002306:	1961      	adds	r1, r4, r5
 8002308:	428b      	cmp	r3, r1
 800230a:	bf04      	itt	eq
 800230c:	6819      	ldreq	r1, [r3, #0]
 800230e:	685b      	ldreq	r3, [r3, #4]
 8002310:	6063      	str	r3, [r4, #4]
 8002312:	bf04      	itt	eq
 8002314:	1949      	addeq	r1, r1, r5
 8002316:	6021      	streq	r1, [r4, #0]
 8002318:	6054      	str	r4, [r2, #4]
 800231a:	e7ca      	b.n	80022b2 <_free_r+0x26>
 800231c:	b003      	add	sp, #12
 800231e:	bd30      	pop	{r4, r5, pc}
 8002320:	20000228 	andcs	r0, r0, r8, lsr #4

08002324 <sbrk_aligned>:
 8002324:	b570      	push	{r4, r5, r6, lr}
 8002326:	4e0e      	ldr	r6, [pc, #56]	; (8002360 <sbrk_aligned+0x3c>)
 8002328:	460c      	mov	r4, r1
 800232a:	6831      	ldr	r1, [r6, #0]
 800232c:	4605      	mov	r5, r0
 800232e:	b911      	cbnz	r1, 8002336 <sbrk_aligned+0x12>
 8002330:	f000 fb7a 	bl	8002a28 <_sbrk_r>
 8002334:	6030      	str	r0, [r6, #0]
 8002336:	4621      	mov	r1, r4
 8002338:	4628      	mov	r0, r5
 800233a:	f000 fb75 	bl	8002a28 <_sbrk_r>
 800233e:	1c43      	adds	r3, r0, #1
 8002340:	d00a      	beq.n	8002358 <sbrk_aligned+0x34>
 8002342:	1cc4      	adds	r4, r0, #3
 8002344:	f024 0403 	bic.w	r4, r4, #3
 8002348:	42a0      	cmp	r0, r4
 800234a:	d007      	beq.n	800235c <sbrk_aligned+0x38>
 800234c:	1a21      	subs	r1, r4, r0
 800234e:	4628      	mov	r0, r5
 8002350:	f000 fb6a 	bl	8002a28 <_sbrk_r>
 8002354:	3001      	adds	r0, #1
 8002356:	d101      	bne.n	800235c <sbrk_aligned+0x38>
 8002358:	f04f 34ff 	mov.w	r4, #4294967295
 800235c:	4620      	mov	r0, r4
 800235e:	bd70      	pop	{r4, r5, r6, pc}
 8002360:	2000022c 	andcs	r0, r0, ip, lsr #4

08002364 <_malloc_r>:
 8002364:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002368:	1ccd      	adds	r5, r1, #3
 800236a:	f025 0503 	bic.w	r5, r5, #3
 800236e:	3508      	adds	r5, #8
 8002370:	2d0c      	cmp	r5, #12
 8002372:	bf38      	it	cc
 8002374:	250c      	movcc	r5, #12
 8002376:	2d00      	cmp	r5, #0
 8002378:	4607      	mov	r7, r0
 800237a:	db01      	blt.n	8002380 <_malloc_r+0x1c>
 800237c:	42a9      	cmp	r1, r5
 800237e:	d905      	bls.n	800238c <_malloc_r+0x28>
 8002380:	230c      	movs	r3, #12
 8002382:	603b      	str	r3, [r7, #0]
 8002384:	2600      	movs	r6, #0
 8002386:	4630      	mov	r0, r6
 8002388:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800238c:	4e2e      	ldr	r6, [pc, #184]	; (8002448 <_malloc_r+0xe4>)
 800238e:	f000 fbf5 	bl	8002b7c <__malloc_lock>
 8002392:	6833      	ldr	r3, [r6, #0]
 8002394:	461c      	mov	r4, r3
 8002396:	bb34      	cbnz	r4, 80023e6 <_malloc_r+0x82>
 8002398:	4629      	mov	r1, r5
 800239a:	4638      	mov	r0, r7
 800239c:	f7ff ffc2 	bl	8002324 <sbrk_aligned>
 80023a0:	1c43      	adds	r3, r0, #1
 80023a2:	4604      	mov	r4, r0
 80023a4:	d14d      	bne.n	8002442 <_malloc_r+0xde>
 80023a6:	6834      	ldr	r4, [r6, #0]
 80023a8:	4626      	mov	r6, r4
 80023aa:	2e00      	cmp	r6, #0
 80023ac:	d140      	bne.n	8002430 <_malloc_r+0xcc>
 80023ae:	6823      	ldr	r3, [r4, #0]
 80023b0:	4631      	mov	r1, r6
 80023b2:	4638      	mov	r0, r7
 80023b4:	eb04 0803 	add.w	r8, r4, r3
 80023b8:	f000 fb36 	bl	8002a28 <_sbrk_r>
 80023bc:	4580      	cmp	r8, r0
 80023be:	d13a      	bne.n	8002436 <_malloc_r+0xd2>
 80023c0:	6821      	ldr	r1, [r4, #0]
 80023c2:	3503      	adds	r5, #3
 80023c4:	1a6d      	subs	r5, r5, r1
 80023c6:	f025 0503 	bic.w	r5, r5, #3
 80023ca:	3508      	adds	r5, #8
 80023cc:	2d0c      	cmp	r5, #12
 80023ce:	bf38      	it	cc
 80023d0:	250c      	movcc	r5, #12
 80023d2:	4629      	mov	r1, r5
 80023d4:	4638      	mov	r0, r7
 80023d6:	f7ff ffa5 	bl	8002324 <sbrk_aligned>
 80023da:	3001      	adds	r0, #1
 80023dc:	d02b      	beq.n	8002436 <_malloc_r+0xd2>
 80023de:	6823      	ldr	r3, [r4, #0]
 80023e0:	442b      	add	r3, r5
 80023e2:	6023      	str	r3, [r4, #0]
 80023e4:	e00e      	b.n	8002404 <_malloc_r+0xa0>
 80023e6:	6822      	ldr	r2, [r4, #0]
 80023e8:	1b52      	subs	r2, r2, r5
 80023ea:	d41e      	bmi.n	800242a <_malloc_r+0xc6>
 80023ec:	2a0b      	cmp	r2, #11
 80023ee:	d916      	bls.n	800241e <_malloc_r+0xba>
 80023f0:	1961      	adds	r1, r4, r5
 80023f2:	42a3      	cmp	r3, r4
 80023f4:	6025      	str	r5, [r4, #0]
 80023f6:	bf18      	it	ne
 80023f8:	6059      	strne	r1, [r3, #4]
 80023fa:	6863      	ldr	r3, [r4, #4]
 80023fc:	bf08      	it	eq
 80023fe:	6031      	streq	r1, [r6, #0]
 8002400:	5162      	str	r2, [r4, r5]
 8002402:	604b      	str	r3, [r1, #4]
 8002404:	4638      	mov	r0, r7
 8002406:	f104 060b 	add.w	r6, r4, #11
 800240a:	f000 fbbd 	bl	8002b88 <__malloc_unlock>
 800240e:	f026 0607 	bic.w	r6, r6, #7
 8002412:	1d23      	adds	r3, r4, #4
 8002414:	1af2      	subs	r2, r6, r3
 8002416:	d0b6      	beq.n	8002386 <_malloc_r+0x22>
 8002418:	1b9b      	subs	r3, r3, r6
 800241a:	50a3      	str	r3, [r4, r2]
 800241c:	e7b3      	b.n	8002386 <_malloc_r+0x22>
 800241e:	6862      	ldr	r2, [r4, #4]
 8002420:	42a3      	cmp	r3, r4
 8002422:	bf0c      	ite	eq
 8002424:	6032      	streq	r2, [r6, #0]
 8002426:	605a      	strne	r2, [r3, #4]
 8002428:	e7ec      	b.n	8002404 <_malloc_r+0xa0>
 800242a:	4623      	mov	r3, r4
 800242c:	6864      	ldr	r4, [r4, #4]
 800242e:	e7b2      	b.n	8002396 <_malloc_r+0x32>
 8002430:	4634      	mov	r4, r6
 8002432:	6876      	ldr	r6, [r6, #4]
 8002434:	e7b9      	b.n	80023aa <_malloc_r+0x46>
 8002436:	230c      	movs	r3, #12
 8002438:	603b      	str	r3, [r7, #0]
 800243a:	4638      	mov	r0, r7
 800243c:	f000 fba4 	bl	8002b88 <__malloc_unlock>
 8002440:	e7a1      	b.n	8002386 <_malloc_r+0x22>
 8002442:	6025      	str	r5, [r4, #0]
 8002444:	e7de      	b.n	8002404 <_malloc_r+0xa0>
 8002446:	bf00      	nop
 8002448:	20000228 	andcs	r0, r0, r8, lsr #4

0800244c <__sfputc_r>:
 800244c:	6893      	ldr	r3, [r2, #8]
 800244e:	3b01      	subs	r3, #1
 8002450:	2b00      	cmp	r3, #0
 8002452:	b410      	push	{r4}
 8002454:	6093      	str	r3, [r2, #8]
 8002456:	da08      	bge.n	800246a <__sfputc_r+0x1e>
 8002458:	6994      	ldr	r4, [r2, #24]
 800245a:	42a3      	cmp	r3, r4
 800245c:	db01      	blt.n	8002462 <__sfputc_r+0x16>
 800245e:	290a      	cmp	r1, #10
 8002460:	d103      	bne.n	800246a <__sfputc_r+0x1e>
 8002462:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002466:	f7ff bc31 	b.w	8001ccc <__swbuf_r>
 800246a:	6813      	ldr	r3, [r2, #0]
 800246c:	1c58      	adds	r0, r3, #1
 800246e:	6010      	str	r0, [r2, #0]
 8002470:	7019      	strb	r1, [r3, #0]
 8002472:	4608      	mov	r0, r1
 8002474:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002478:	4770      	bx	lr

0800247a <__sfputs_r>:
 800247a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800247c:	4606      	mov	r6, r0
 800247e:	460f      	mov	r7, r1
 8002480:	4614      	mov	r4, r2
 8002482:	18d5      	adds	r5, r2, r3
 8002484:	42ac      	cmp	r4, r5
 8002486:	d101      	bne.n	800248c <__sfputs_r+0x12>
 8002488:	2000      	movs	r0, #0
 800248a:	e007      	b.n	800249c <__sfputs_r+0x22>
 800248c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8002490:	463a      	mov	r2, r7
 8002492:	4630      	mov	r0, r6
 8002494:	f7ff ffda 	bl	800244c <__sfputc_r>
 8002498:	1c43      	adds	r3, r0, #1
 800249a:	d1f3      	bne.n	8002484 <__sfputs_r+0xa>
 800249c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080024a0 <_vfiprintf_r>:
 80024a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024a4:	460d      	mov	r5, r1
 80024a6:	b09d      	sub	sp, #116	; 0x74
 80024a8:	4614      	mov	r4, r2
 80024aa:	4698      	mov	r8, r3
 80024ac:	4606      	mov	r6, r0
 80024ae:	b118      	cbz	r0, 80024b8 <_vfiprintf_r+0x18>
 80024b0:	6983      	ldr	r3, [r0, #24]
 80024b2:	b90b      	cbnz	r3, 80024b8 <_vfiprintf_r+0x18>
 80024b4:	f7ff fde4 	bl	8002080 <__sinit>
 80024b8:	4b89      	ldr	r3, [pc, #548]	; (80026e0 <_vfiprintf_r+0x240>)
 80024ba:	429d      	cmp	r5, r3
 80024bc:	d11b      	bne.n	80024f6 <_vfiprintf_r+0x56>
 80024be:	6875      	ldr	r5, [r6, #4]
 80024c0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80024c2:	07d9      	lsls	r1, r3, #31
 80024c4:	d405      	bmi.n	80024d2 <_vfiprintf_r+0x32>
 80024c6:	89ab      	ldrh	r3, [r5, #12]
 80024c8:	059a      	lsls	r2, r3, #22
 80024ca:	d402      	bmi.n	80024d2 <_vfiprintf_r+0x32>
 80024cc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80024ce:	f7ff fe75 	bl	80021bc <__retarget_lock_acquire_recursive>
 80024d2:	89ab      	ldrh	r3, [r5, #12]
 80024d4:	071b      	lsls	r3, r3, #28
 80024d6:	d501      	bpl.n	80024dc <_vfiprintf_r+0x3c>
 80024d8:	692b      	ldr	r3, [r5, #16]
 80024da:	b9eb      	cbnz	r3, 8002518 <_vfiprintf_r+0x78>
 80024dc:	4629      	mov	r1, r5
 80024de:	4630      	mov	r0, r6
 80024e0:	f7ff fc46 	bl	8001d70 <__swsetup_r>
 80024e4:	b1c0      	cbz	r0, 8002518 <_vfiprintf_r+0x78>
 80024e6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80024e8:	07dc      	lsls	r4, r3, #31
 80024ea:	d50e      	bpl.n	800250a <_vfiprintf_r+0x6a>
 80024ec:	f04f 30ff 	mov.w	r0, #4294967295
 80024f0:	b01d      	add	sp, #116	; 0x74
 80024f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80024f6:	4b7b      	ldr	r3, [pc, #492]	; (80026e4 <_vfiprintf_r+0x244>)
 80024f8:	429d      	cmp	r5, r3
 80024fa:	d101      	bne.n	8002500 <_vfiprintf_r+0x60>
 80024fc:	68b5      	ldr	r5, [r6, #8]
 80024fe:	e7df      	b.n	80024c0 <_vfiprintf_r+0x20>
 8002500:	4b79      	ldr	r3, [pc, #484]	; (80026e8 <_vfiprintf_r+0x248>)
 8002502:	429d      	cmp	r5, r3
 8002504:	bf08      	it	eq
 8002506:	68f5      	ldreq	r5, [r6, #12]
 8002508:	e7da      	b.n	80024c0 <_vfiprintf_r+0x20>
 800250a:	89ab      	ldrh	r3, [r5, #12]
 800250c:	0598      	lsls	r0, r3, #22
 800250e:	d4ed      	bmi.n	80024ec <_vfiprintf_r+0x4c>
 8002510:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8002512:	f7ff fe54 	bl	80021be <__retarget_lock_release_recursive>
 8002516:	e7e9      	b.n	80024ec <_vfiprintf_r+0x4c>
 8002518:	2300      	movs	r3, #0
 800251a:	9309      	str	r3, [sp, #36]	; 0x24
 800251c:	2320      	movs	r3, #32
 800251e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8002522:	f8cd 800c 	str.w	r8, [sp, #12]
 8002526:	2330      	movs	r3, #48	; 0x30
 8002528:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80026ec <_vfiprintf_r+0x24c>
 800252c:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8002530:	f04f 0901 	mov.w	r9, #1
 8002534:	4623      	mov	r3, r4
 8002536:	469a      	mov	sl, r3
 8002538:	f813 2b01 	ldrb.w	r2, [r3], #1
 800253c:	b10a      	cbz	r2, 8002542 <_vfiprintf_r+0xa2>
 800253e:	2a25      	cmp	r2, #37	; 0x25
 8002540:	d1f9      	bne.n	8002536 <_vfiprintf_r+0x96>
 8002542:	ebba 0b04 	subs.w	fp, sl, r4
 8002546:	d00b      	beq.n	8002560 <_vfiprintf_r+0xc0>
 8002548:	465b      	mov	r3, fp
 800254a:	4622      	mov	r2, r4
 800254c:	4629      	mov	r1, r5
 800254e:	4630      	mov	r0, r6
 8002550:	f7ff ff93 	bl	800247a <__sfputs_r>
 8002554:	3001      	adds	r0, #1
 8002556:	f000 80aa 	beq.w	80026ae <_vfiprintf_r+0x20e>
 800255a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800255c:	445a      	add	r2, fp
 800255e:	9209      	str	r2, [sp, #36]	; 0x24
 8002560:	f89a 3000 	ldrb.w	r3, [sl]
 8002564:	2b00      	cmp	r3, #0
 8002566:	f000 80a2 	beq.w	80026ae <_vfiprintf_r+0x20e>
 800256a:	2300      	movs	r3, #0
 800256c:	f04f 32ff 	mov.w	r2, #4294967295
 8002570:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8002574:	f10a 0a01 	add.w	sl, sl, #1
 8002578:	9304      	str	r3, [sp, #16]
 800257a:	9307      	str	r3, [sp, #28]
 800257c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8002580:	931a      	str	r3, [sp, #104]	; 0x68
 8002582:	4654      	mov	r4, sl
 8002584:	2205      	movs	r2, #5
 8002586:	f814 1b01 	ldrb.w	r1, [r4], #1
 800258a:	4858      	ldr	r0, [pc, #352]	; (80026ec <_vfiprintf_r+0x24c>)
 800258c:	f7fd fe48 	bl	8000220 <memchr>
 8002590:	9a04      	ldr	r2, [sp, #16]
 8002592:	b9d8      	cbnz	r0, 80025cc <_vfiprintf_r+0x12c>
 8002594:	06d1      	lsls	r1, r2, #27
 8002596:	bf44      	itt	mi
 8002598:	2320      	movmi	r3, #32
 800259a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800259e:	0713      	lsls	r3, r2, #28
 80025a0:	bf44      	itt	mi
 80025a2:	232b      	movmi	r3, #43	; 0x2b
 80025a4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 80025a8:	f89a 3000 	ldrb.w	r3, [sl]
 80025ac:	2b2a      	cmp	r3, #42	; 0x2a
 80025ae:	d015      	beq.n	80025dc <_vfiprintf_r+0x13c>
 80025b0:	9a07      	ldr	r2, [sp, #28]
 80025b2:	4654      	mov	r4, sl
 80025b4:	2000      	movs	r0, #0
 80025b6:	f04f 0c0a 	mov.w	ip, #10
 80025ba:	4621      	mov	r1, r4
 80025bc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80025c0:	3b30      	subs	r3, #48	; 0x30
 80025c2:	2b09      	cmp	r3, #9
 80025c4:	d94e      	bls.n	8002664 <_vfiprintf_r+0x1c4>
 80025c6:	b1b0      	cbz	r0, 80025f6 <_vfiprintf_r+0x156>
 80025c8:	9207      	str	r2, [sp, #28]
 80025ca:	e014      	b.n	80025f6 <_vfiprintf_r+0x156>
 80025cc:	eba0 0308 	sub.w	r3, r0, r8
 80025d0:	fa09 f303 	lsl.w	r3, r9, r3
 80025d4:	4313      	orrs	r3, r2
 80025d6:	9304      	str	r3, [sp, #16]
 80025d8:	46a2      	mov	sl, r4
 80025da:	e7d2      	b.n	8002582 <_vfiprintf_r+0xe2>
 80025dc:	9b03      	ldr	r3, [sp, #12]
 80025de:	1d19      	adds	r1, r3, #4
 80025e0:	681b      	ldr	r3, [r3, #0]
 80025e2:	9103      	str	r1, [sp, #12]
 80025e4:	2b00      	cmp	r3, #0
 80025e6:	bfbb      	ittet	lt
 80025e8:	425b      	neglt	r3, r3
 80025ea:	f042 0202 	orrlt.w	r2, r2, #2
 80025ee:	9307      	strge	r3, [sp, #28]
 80025f0:	9307      	strlt	r3, [sp, #28]
 80025f2:	bfb8      	it	lt
 80025f4:	9204      	strlt	r2, [sp, #16]
 80025f6:	7823      	ldrb	r3, [r4, #0]
 80025f8:	2b2e      	cmp	r3, #46	; 0x2e
 80025fa:	d10c      	bne.n	8002616 <_vfiprintf_r+0x176>
 80025fc:	7863      	ldrb	r3, [r4, #1]
 80025fe:	2b2a      	cmp	r3, #42	; 0x2a
 8002600:	d135      	bne.n	800266e <_vfiprintf_r+0x1ce>
 8002602:	9b03      	ldr	r3, [sp, #12]
 8002604:	1d1a      	adds	r2, r3, #4
 8002606:	681b      	ldr	r3, [r3, #0]
 8002608:	9203      	str	r2, [sp, #12]
 800260a:	2b00      	cmp	r3, #0
 800260c:	bfb8      	it	lt
 800260e:	f04f 33ff 	movlt.w	r3, #4294967295
 8002612:	3402      	adds	r4, #2
 8002614:	9305      	str	r3, [sp, #20]
 8002616:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80026fc <_vfiprintf_r+0x25c>
 800261a:	7821      	ldrb	r1, [r4, #0]
 800261c:	2203      	movs	r2, #3
 800261e:	4650      	mov	r0, sl
 8002620:	f7fd fdfe 	bl	8000220 <memchr>
 8002624:	b140      	cbz	r0, 8002638 <_vfiprintf_r+0x198>
 8002626:	2340      	movs	r3, #64	; 0x40
 8002628:	eba0 000a 	sub.w	r0, r0, sl
 800262c:	fa03 f000 	lsl.w	r0, r3, r0
 8002630:	9b04      	ldr	r3, [sp, #16]
 8002632:	4303      	orrs	r3, r0
 8002634:	3401      	adds	r4, #1
 8002636:	9304      	str	r3, [sp, #16]
 8002638:	f814 1b01 	ldrb.w	r1, [r4], #1
 800263c:	482c      	ldr	r0, [pc, #176]	; (80026f0 <_vfiprintf_r+0x250>)
 800263e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8002642:	2206      	movs	r2, #6
 8002644:	f7fd fdec 	bl	8000220 <memchr>
 8002648:	2800      	cmp	r0, #0
 800264a:	d03f      	beq.n	80026cc <_vfiprintf_r+0x22c>
 800264c:	4b29      	ldr	r3, [pc, #164]	; (80026f4 <_vfiprintf_r+0x254>)
 800264e:	bb1b      	cbnz	r3, 8002698 <_vfiprintf_r+0x1f8>
 8002650:	9b03      	ldr	r3, [sp, #12]
 8002652:	3307      	adds	r3, #7
 8002654:	f023 0307 	bic.w	r3, r3, #7
 8002658:	3308      	adds	r3, #8
 800265a:	9303      	str	r3, [sp, #12]
 800265c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800265e:	443b      	add	r3, r7
 8002660:	9309      	str	r3, [sp, #36]	; 0x24
 8002662:	e767      	b.n	8002534 <_vfiprintf_r+0x94>
 8002664:	fb0c 3202 	mla	r2, ip, r2, r3
 8002668:	460c      	mov	r4, r1
 800266a:	2001      	movs	r0, #1
 800266c:	e7a5      	b.n	80025ba <_vfiprintf_r+0x11a>
 800266e:	2300      	movs	r3, #0
 8002670:	3401      	adds	r4, #1
 8002672:	9305      	str	r3, [sp, #20]
 8002674:	4619      	mov	r1, r3
 8002676:	f04f 0c0a 	mov.w	ip, #10
 800267a:	4620      	mov	r0, r4
 800267c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8002680:	3a30      	subs	r2, #48	; 0x30
 8002682:	2a09      	cmp	r2, #9
 8002684:	d903      	bls.n	800268e <_vfiprintf_r+0x1ee>
 8002686:	2b00      	cmp	r3, #0
 8002688:	d0c5      	beq.n	8002616 <_vfiprintf_r+0x176>
 800268a:	9105      	str	r1, [sp, #20]
 800268c:	e7c3      	b.n	8002616 <_vfiprintf_r+0x176>
 800268e:	fb0c 2101 	mla	r1, ip, r1, r2
 8002692:	4604      	mov	r4, r0
 8002694:	2301      	movs	r3, #1
 8002696:	e7f0      	b.n	800267a <_vfiprintf_r+0x1da>
 8002698:	ab03      	add	r3, sp, #12
 800269a:	9300      	str	r3, [sp, #0]
 800269c:	462a      	mov	r2, r5
 800269e:	4b16      	ldr	r3, [pc, #88]	; (80026f8 <_vfiprintf_r+0x258>)
 80026a0:	a904      	add	r1, sp, #16
 80026a2:	4630      	mov	r0, r6
 80026a4:	f3af 8000 	nop.w
 80026a8:	4607      	mov	r7, r0
 80026aa:	1c78      	adds	r0, r7, #1
 80026ac:	d1d6      	bne.n	800265c <_vfiprintf_r+0x1bc>
 80026ae:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 80026b0:	07d9      	lsls	r1, r3, #31
 80026b2:	d405      	bmi.n	80026c0 <_vfiprintf_r+0x220>
 80026b4:	89ab      	ldrh	r3, [r5, #12]
 80026b6:	059a      	lsls	r2, r3, #22
 80026b8:	d402      	bmi.n	80026c0 <_vfiprintf_r+0x220>
 80026ba:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80026bc:	f7ff fd7f 	bl	80021be <__retarget_lock_release_recursive>
 80026c0:	89ab      	ldrh	r3, [r5, #12]
 80026c2:	065b      	lsls	r3, r3, #25
 80026c4:	f53f af12 	bmi.w	80024ec <_vfiprintf_r+0x4c>
 80026c8:	9809      	ldr	r0, [sp, #36]	; 0x24
 80026ca:	e711      	b.n	80024f0 <_vfiprintf_r+0x50>
 80026cc:	ab03      	add	r3, sp, #12
 80026ce:	9300      	str	r3, [sp, #0]
 80026d0:	462a      	mov	r2, r5
 80026d2:	4b09      	ldr	r3, [pc, #36]	; (80026f8 <_vfiprintf_r+0x258>)
 80026d4:	a904      	add	r1, sp, #16
 80026d6:	4630      	mov	r0, r6
 80026d8:	f000 f880 	bl	80027dc <_printf_i>
 80026dc:	e7e4      	b.n	80026a8 <_vfiprintf_r+0x208>
 80026de:	bf00      	nop
 80026e0:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
 80026e4:	080030b0 	stmdaeq	r0, {r4, r5, r7, ip, sp}
 80026e8:	08003070 	stmdaeq	r0, {r4, r5, r6, ip, sp}
 80026ec:	080030d0 	stmdaeq	r0, {r4, r6, r7, ip, sp}
 80026f0:	080030da 	stmdaeq	r0, {r1, r3, r4, r6, r7, ip, sp}
 80026f4:	00000000 	andeq	r0, r0, r0
 80026f8:	0800247b 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, sl, sp}
 80026fc:	080030d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, ip, sp}

08002700 <_printf_common>:
 8002700:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002704:	4616      	mov	r6, r2
 8002706:	4699      	mov	r9, r3
 8002708:	688a      	ldr	r2, [r1, #8]
 800270a:	690b      	ldr	r3, [r1, #16]
 800270c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002710:	4293      	cmp	r3, r2
 8002712:	bfb8      	it	lt
 8002714:	4613      	movlt	r3, r2
 8002716:	6033      	str	r3, [r6, #0]
 8002718:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 800271c:	4607      	mov	r7, r0
 800271e:	460c      	mov	r4, r1
 8002720:	b10a      	cbz	r2, 8002726 <_printf_common+0x26>
 8002722:	3301      	adds	r3, #1
 8002724:	6033      	str	r3, [r6, #0]
 8002726:	6823      	ldr	r3, [r4, #0]
 8002728:	0699      	lsls	r1, r3, #26
 800272a:	bf42      	ittt	mi
 800272c:	6833      	ldrmi	r3, [r6, #0]
 800272e:	3302      	addmi	r3, #2
 8002730:	6033      	strmi	r3, [r6, #0]
 8002732:	6825      	ldr	r5, [r4, #0]
 8002734:	f015 0506 	ands.w	r5, r5, #6
 8002738:	d106      	bne.n	8002748 <_printf_common+0x48>
 800273a:	f104 0a19 	add.w	sl, r4, #25
 800273e:	68e3      	ldr	r3, [r4, #12]
 8002740:	6832      	ldr	r2, [r6, #0]
 8002742:	1a9b      	subs	r3, r3, r2
 8002744:	42ab      	cmp	r3, r5
 8002746:	dc26      	bgt.n	8002796 <_printf_common+0x96>
 8002748:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 800274c:	1e13      	subs	r3, r2, #0
 800274e:	6822      	ldr	r2, [r4, #0]
 8002750:	bf18      	it	ne
 8002752:	2301      	movne	r3, #1
 8002754:	0692      	lsls	r2, r2, #26
 8002756:	d42b      	bmi.n	80027b0 <_printf_common+0xb0>
 8002758:	f104 0243 	add.w	r2, r4, #67	; 0x43
 800275c:	4649      	mov	r1, r9
 800275e:	4638      	mov	r0, r7
 8002760:	47c0      	blx	r8
 8002762:	3001      	adds	r0, #1
 8002764:	d01e      	beq.n	80027a4 <_printf_common+0xa4>
 8002766:	6823      	ldr	r3, [r4, #0]
 8002768:	68e5      	ldr	r5, [r4, #12]
 800276a:	6832      	ldr	r2, [r6, #0]
 800276c:	f003 0306 	and.w	r3, r3, #6
 8002770:	2b04      	cmp	r3, #4
 8002772:	bf08      	it	eq
 8002774:	1aad      	subeq	r5, r5, r2
 8002776:	68a3      	ldr	r3, [r4, #8]
 8002778:	6922      	ldr	r2, [r4, #16]
 800277a:	bf0c      	ite	eq
 800277c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002780:	2500      	movne	r5, #0
 8002782:	4293      	cmp	r3, r2
 8002784:	bfc4      	itt	gt
 8002786:	1a9b      	subgt	r3, r3, r2
 8002788:	18ed      	addgt	r5, r5, r3
 800278a:	2600      	movs	r6, #0
 800278c:	341a      	adds	r4, #26
 800278e:	42b5      	cmp	r5, r6
 8002790:	d11a      	bne.n	80027c8 <_printf_common+0xc8>
 8002792:	2000      	movs	r0, #0
 8002794:	e008      	b.n	80027a8 <_printf_common+0xa8>
 8002796:	2301      	movs	r3, #1
 8002798:	4652      	mov	r2, sl
 800279a:	4649      	mov	r1, r9
 800279c:	4638      	mov	r0, r7
 800279e:	47c0      	blx	r8
 80027a0:	3001      	adds	r0, #1
 80027a2:	d103      	bne.n	80027ac <_printf_common+0xac>
 80027a4:	f04f 30ff 	mov.w	r0, #4294967295
 80027a8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80027ac:	3501      	adds	r5, #1
 80027ae:	e7c6      	b.n	800273e <_printf_common+0x3e>
 80027b0:	18e1      	adds	r1, r4, r3
 80027b2:	1c5a      	adds	r2, r3, #1
 80027b4:	2030      	movs	r0, #48	; 0x30
 80027b6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80027ba:	4422      	add	r2, r4
 80027bc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80027c0:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80027c4:	3302      	adds	r3, #2
 80027c6:	e7c7      	b.n	8002758 <_printf_common+0x58>
 80027c8:	2301      	movs	r3, #1
 80027ca:	4622      	mov	r2, r4
 80027cc:	4649      	mov	r1, r9
 80027ce:	4638      	mov	r0, r7
 80027d0:	47c0      	blx	r8
 80027d2:	3001      	adds	r0, #1
 80027d4:	d0e6      	beq.n	80027a4 <_printf_common+0xa4>
 80027d6:	3601      	adds	r6, #1
 80027d8:	e7d9      	b.n	800278e <_printf_common+0x8e>
	...

080027dc <_printf_i>:
 80027dc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80027e0:	7e0f      	ldrb	r7, [r1, #24]
 80027e2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80027e4:	2f78      	cmp	r7, #120	; 0x78
 80027e6:	4691      	mov	r9, r2
 80027e8:	4680      	mov	r8, r0
 80027ea:	460c      	mov	r4, r1
 80027ec:	469a      	mov	sl, r3
 80027ee:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80027f2:	d807      	bhi.n	8002804 <_printf_i+0x28>
 80027f4:	2f62      	cmp	r7, #98	; 0x62
 80027f6:	d80a      	bhi.n	800280e <_printf_i+0x32>
 80027f8:	2f00      	cmp	r7, #0
 80027fa:	f000 80d8 	beq.w	80029ae <_printf_i+0x1d2>
 80027fe:	2f58      	cmp	r7, #88	; 0x58
 8002800:	f000 80a3 	beq.w	800294a <_printf_i+0x16e>
 8002804:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002808:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800280c:	e03a      	b.n	8002884 <_printf_i+0xa8>
 800280e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8002812:	2b15      	cmp	r3, #21
 8002814:	d8f6      	bhi.n	8002804 <_printf_i+0x28>
 8002816:	a101      	add	r1, pc, #4	; (adr r1, 800281c <_printf_i+0x40>)
 8002818:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800281c:	08002875 	stmdaeq	r0, {r0, r2, r4, r5, r6, fp, sp}
 8002820:	08002889 	stmdaeq	r0, {r0, r3, r7, fp, sp}
 8002824:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002828:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 800282c:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002830:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002834:	08002889 	stmdaeq	r0, {r0, r3, r7, fp, sp}
 8002838:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 800283c:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002840:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002844:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002848:	08002995 	stmdaeq	r0, {r0, r2, r4, r7, r8, fp, sp}
 800284c:	080028b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, sp}
 8002850:	08002977 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r8, fp, sp}
 8002854:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002858:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 800285c:	080029b7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r7, r8, fp, sp}
 8002860:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002864:	080028b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, fp, sp}
 8002868:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 800286c:	08002805 	stmdaeq	r0, {r0, r2, fp, sp}
 8002870:	0800297f 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r8, fp, sp}
 8002874:	682b      	ldr	r3, [r5, #0]
 8002876:	1d1a      	adds	r2, r3, #4
 8002878:	681b      	ldr	r3, [r3, #0]
 800287a:	602a      	str	r2, [r5, #0]
 800287c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002880:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002884:	2301      	movs	r3, #1
 8002886:	e0a3      	b.n	80029d0 <_printf_i+0x1f4>
 8002888:	6820      	ldr	r0, [r4, #0]
 800288a:	6829      	ldr	r1, [r5, #0]
 800288c:	0606      	lsls	r6, r0, #24
 800288e:	f101 0304 	add.w	r3, r1, #4
 8002892:	d50a      	bpl.n	80028aa <_printf_i+0xce>
 8002894:	680e      	ldr	r6, [r1, #0]
 8002896:	602b      	str	r3, [r5, #0]
 8002898:	2e00      	cmp	r6, #0
 800289a:	da03      	bge.n	80028a4 <_printf_i+0xc8>
 800289c:	232d      	movs	r3, #45	; 0x2d
 800289e:	4276      	negs	r6, r6
 80028a0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80028a4:	485e      	ldr	r0, [pc, #376]	; (8002a20 <_printf_i+0x244>)
 80028a6:	230a      	movs	r3, #10
 80028a8:	e019      	b.n	80028de <_printf_i+0x102>
 80028aa:	680e      	ldr	r6, [r1, #0]
 80028ac:	602b      	str	r3, [r5, #0]
 80028ae:	f010 0f40 	tst.w	r0, #64	; 0x40
 80028b2:	bf18      	it	ne
 80028b4:	b236      	sxthne	r6, r6
 80028b6:	e7ef      	b.n	8002898 <_printf_i+0xbc>
 80028b8:	682b      	ldr	r3, [r5, #0]
 80028ba:	6820      	ldr	r0, [r4, #0]
 80028bc:	1d19      	adds	r1, r3, #4
 80028be:	6029      	str	r1, [r5, #0]
 80028c0:	0601      	lsls	r1, r0, #24
 80028c2:	d501      	bpl.n	80028c8 <_printf_i+0xec>
 80028c4:	681e      	ldr	r6, [r3, #0]
 80028c6:	e002      	b.n	80028ce <_printf_i+0xf2>
 80028c8:	0646      	lsls	r6, r0, #25
 80028ca:	d5fb      	bpl.n	80028c4 <_printf_i+0xe8>
 80028cc:	881e      	ldrh	r6, [r3, #0]
 80028ce:	4854      	ldr	r0, [pc, #336]	; (8002a20 <_printf_i+0x244>)
 80028d0:	2f6f      	cmp	r7, #111	; 0x6f
 80028d2:	bf0c      	ite	eq
 80028d4:	2308      	moveq	r3, #8
 80028d6:	230a      	movne	r3, #10
 80028d8:	2100      	movs	r1, #0
 80028da:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80028de:	6865      	ldr	r5, [r4, #4]
 80028e0:	60a5      	str	r5, [r4, #8]
 80028e2:	2d00      	cmp	r5, #0
 80028e4:	bfa2      	ittt	ge
 80028e6:	6821      	ldrge	r1, [r4, #0]
 80028e8:	f021 0104 	bicge.w	r1, r1, #4
 80028ec:	6021      	strge	r1, [r4, #0]
 80028ee:	b90e      	cbnz	r6, 80028f4 <_printf_i+0x118>
 80028f0:	2d00      	cmp	r5, #0
 80028f2:	d04d      	beq.n	8002990 <_printf_i+0x1b4>
 80028f4:	4615      	mov	r5, r2
 80028f6:	fbb6 f1f3 	udiv	r1, r6, r3
 80028fa:	fb03 6711 	mls	r7, r3, r1, r6
 80028fe:	5dc7      	ldrb	r7, [r0, r7]
 8002900:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8002904:	4637      	mov	r7, r6
 8002906:	42bb      	cmp	r3, r7
 8002908:	460e      	mov	r6, r1
 800290a:	d9f4      	bls.n	80028f6 <_printf_i+0x11a>
 800290c:	2b08      	cmp	r3, #8
 800290e:	d10b      	bne.n	8002928 <_printf_i+0x14c>
 8002910:	6823      	ldr	r3, [r4, #0]
 8002912:	07de      	lsls	r6, r3, #31
 8002914:	d508      	bpl.n	8002928 <_printf_i+0x14c>
 8002916:	6923      	ldr	r3, [r4, #16]
 8002918:	6861      	ldr	r1, [r4, #4]
 800291a:	4299      	cmp	r1, r3
 800291c:	bfde      	ittt	le
 800291e:	2330      	movle	r3, #48	; 0x30
 8002920:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002924:	f105 35ff 	addle.w	r5, r5, #4294967295
 8002928:	1b52      	subs	r2, r2, r5
 800292a:	6122      	str	r2, [r4, #16]
 800292c:	f8cd a000 	str.w	sl, [sp]
 8002930:	464b      	mov	r3, r9
 8002932:	aa03      	add	r2, sp, #12
 8002934:	4621      	mov	r1, r4
 8002936:	4640      	mov	r0, r8
 8002938:	f7ff fee2 	bl	8002700 <_printf_common>
 800293c:	3001      	adds	r0, #1
 800293e:	d14c      	bne.n	80029da <_printf_i+0x1fe>
 8002940:	f04f 30ff 	mov.w	r0, #4294967295
 8002944:	b004      	add	sp, #16
 8002946:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800294a:	4835      	ldr	r0, [pc, #212]	; (8002a20 <_printf_i+0x244>)
 800294c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8002950:	6829      	ldr	r1, [r5, #0]
 8002952:	6823      	ldr	r3, [r4, #0]
 8002954:	f851 6b04 	ldr.w	r6, [r1], #4
 8002958:	6029      	str	r1, [r5, #0]
 800295a:	061d      	lsls	r5, r3, #24
 800295c:	d514      	bpl.n	8002988 <_printf_i+0x1ac>
 800295e:	07df      	lsls	r7, r3, #31
 8002960:	bf44      	itt	mi
 8002962:	f043 0320 	orrmi.w	r3, r3, #32
 8002966:	6023      	strmi	r3, [r4, #0]
 8002968:	b91e      	cbnz	r6, 8002972 <_printf_i+0x196>
 800296a:	6823      	ldr	r3, [r4, #0]
 800296c:	f023 0320 	bic.w	r3, r3, #32
 8002970:	6023      	str	r3, [r4, #0]
 8002972:	2310      	movs	r3, #16
 8002974:	e7b0      	b.n	80028d8 <_printf_i+0xfc>
 8002976:	6823      	ldr	r3, [r4, #0]
 8002978:	f043 0320 	orr.w	r3, r3, #32
 800297c:	6023      	str	r3, [r4, #0]
 800297e:	2378      	movs	r3, #120	; 0x78
 8002980:	4828      	ldr	r0, [pc, #160]	; (8002a24 <_printf_i+0x248>)
 8002982:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002986:	e7e3      	b.n	8002950 <_printf_i+0x174>
 8002988:	0659      	lsls	r1, r3, #25
 800298a:	bf48      	it	mi
 800298c:	b2b6      	uxthmi	r6, r6
 800298e:	e7e6      	b.n	800295e <_printf_i+0x182>
 8002990:	4615      	mov	r5, r2
 8002992:	e7bb      	b.n	800290c <_printf_i+0x130>
 8002994:	682b      	ldr	r3, [r5, #0]
 8002996:	6826      	ldr	r6, [r4, #0]
 8002998:	6961      	ldr	r1, [r4, #20]
 800299a:	1d18      	adds	r0, r3, #4
 800299c:	6028      	str	r0, [r5, #0]
 800299e:	0635      	lsls	r5, r6, #24
 80029a0:	681b      	ldr	r3, [r3, #0]
 80029a2:	d501      	bpl.n	80029a8 <_printf_i+0x1cc>
 80029a4:	6019      	str	r1, [r3, #0]
 80029a6:	e002      	b.n	80029ae <_printf_i+0x1d2>
 80029a8:	0670      	lsls	r0, r6, #25
 80029aa:	d5fb      	bpl.n	80029a4 <_printf_i+0x1c8>
 80029ac:	8019      	strh	r1, [r3, #0]
 80029ae:	2300      	movs	r3, #0
 80029b0:	6123      	str	r3, [r4, #16]
 80029b2:	4615      	mov	r5, r2
 80029b4:	e7ba      	b.n	800292c <_printf_i+0x150>
 80029b6:	682b      	ldr	r3, [r5, #0]
 80029b8:	1d1a      	adds	r2, r3, #4
 80029ba:	602a      	str	r2, [r5, #0]
 80029bc:	681d      	ldr	r5, [r3, #0]
 80029be:	6862      	ldr	r2, [r4, #4]
 80029c0:	2100      	movs	r1, #0
 80029c2:	4628      	mov	r0, r5
 80029c4:	f7fd fc2c 	bl	8000220 <memchr>
 80029c8:	b108      	cbz	r0, 80029ce <_printf_i+0x1f2>
 80029ca:	1b40      	subs	r0, r0, r5
 80029cc:	6060      	str	r0, [r4, #4]
 80029ce:	6863      	ldr	r3, [r4, #4]
 80029d0:	6123      	str	r3, [r4, #16]
 80029d2:	2300      	movs	r3, #0
 80029d4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80029d8:	e7a8      	b.n	800292c <_printf_i+0x150>
 80029da:	6923      	ldr	r3, [r4, #16]
 80029dc:	462a      	mov	r2, r5
 80029de:	4649      	mov	r1, r9
 80029e0:	4640      	mov	r0, r8
 80029e2:	47d0      	blx	sl
 80029e4:	3001      	adds	r0, #1
 80029e6:	d0ab      	beq.n	8002940 <_printf_i+0x164>
 80029e8:	6823      	ldr	r3, [r4, #0]
 80029ea:	079b      	lsls	r3, r3, #30
 80029ec:	d413      	bmi.n	8002a16 <_printf_i+0x23a>
 80029ee:	68e0      	ldr	r0, [r4, #12]
 80029f0:	9b03      	ldr	r3, [sp, #12]
 80029f2:	4298      	cmp	r0, r3
 80029f4:	bfb8      	it	lt
 80029f6:	4618      	movlt	r0, r3
 80029f8:	e7a4      	b.n	8002944 <_printf_i+0x168>
 80029fa:	2301      	movs	r3, #1
 80029fc:	4632      	mov	r2, r6
 80029fe:	4649      	mov	r1, r9
 8002a00:	4640      	mov	r0, r8
 8002a02:	47d0      	blx	sl
 8002a04:	3001      	adds	r0, #1
 8002a06:	d09b      	beq.n	8002940 <_printf_i+0x164>
 8002a08:	3501      	adds	r5, #1
 8002a0a:	68e3      	ldr	r3, [r4, #12]
 8002a0c:	9903      	ldr	r1, [sp, #12]
 8002a0e:	1a5b      	subs	r3, r3, r1
 8002a10:	42ab      	cmp	r3, r5
 8002a12:	dcf2      	bgt.n	80029fa <_printf_i+0x21e>
 8002a14:	e7eb      	b.n	80029ee <_printf_i+0x212>
 8002a16:	2500      	movs	r5, #0
 8002a18:	f104 0619 	add.w	r6, r4, #25
 8002a1c:	e7f5      	b.n	8002a0a <_printf_i+0x22e>
 8002a1e:	bf00      	nop
 8002a20:	080030e1 	stmdaeq	r0, {r0, r5, r6, r7, ip, sp}
 8002a24:	080030f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, ip, sp}

08002a28 <_sbrk_r>:
 8002a28:	b538      	push	{r3, r4, r5, lr}
 8002a2a:	4d06      	ldr	r5, [pc, #24]	; (8002a44 <_sbrk_r+0x1c>)
 8002a2c:	2300      	movs	r3, #0
 8002a2e:	4604      	mov	r4, r0
 8002a30:	4608      	mov	r0, r1
 8002a32:	602b      	str	r3, [r5, #0]
 8002a34:	f7fd fe5a 	bl	80006ec <_sbrk>
 8002a38:	1c43      	adds	r3, r0, #1
 8002a3a:	d102      	bne.n	8002a42 <_sbrk_r+0x1a>
 8002a3c:	682b      	ldr	r3, [r5, #0]
 8002a3e:	b103      	cbz	r3, 8002a42 <_sbrk_r+0x1a>
 8002a40:	6023      	str	r3, [r4, #0]
 8002a42:	bd38      	pop	{r3, r4, r5, pc}
 8002a44:	20000230 	andcs	r0, r0, r0, lsr r2

08002a48 <__sread>:
 8002a48:	b510      	push	{r4, lr}
 8002a4a:	460c      	mov	r4, r1
 8002a4c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002a50:	f000 f8a0 	bl	8002b94 <_read_r>
 8002a54:	2800      	cmp	r0, #0
 8002a56:	bfab      	itete	ge
 8002a58:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8002a5a:	89a3      	ldrhlt	r3, [r4, #12]
 8002a5c:	181b      	addge	r3, r3, r0
 8002a5e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8002a62:	bfac      	ite	ge
 8002a64:	6563      	strge	r3, [r4, #84]	; 0x54
 8002a66:	81a3      	strhlt	r3, [r4, #12]
 8002a68:	bd10      	pop	{r4, pc}

08002a6a <__swrite>:
 8002a6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002a6e:	461f      	mov	r7, r3
 8002a70:	898b      	ldrh	r3, [r1, #12]
 8002a72:	05db      	lsls	r3, r3, #23
 8002a74:	4605      	mov	r5, r0
 8002a76:	460c      	mov	r4, r1
 8002a78:	4616      	mov	r6, r2
 8002a7a:	d505      	bpl.n	8002a88 <__swrite+0x1e>
 8002a7c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002a80:	2302      	movs	r3, #2
 8002a82:	2200      	movs	r2, #0
 8002a84:	f000 f868 	bl	8002b58 <_lseek_r>
 8002a88:	89a3      	ldrh	r3, [r4, #12]
 8002a8a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8002a8e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8002a92:	81a3      	strh	r3, [r4, #12]
 8002a94:	4632      	mov	r2, r6
 8002a96:	463b      	mov	r3, r7
 8002a98:	4628      	mov	r0, r5
 8002a9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8002a9e:	f000 b817 	b.w	8002ad0 <_write_r>

08002aa2 <__sseek>:
 8002aa2:	b510      	push	{r4, lr}
 8002aa4:	460c      	mov	r4, r1
 8002aa6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002aaa:	f000 f855 	bl	8002b58 <_lseek_r>
 8002aae:	1c43      	adds	r3, r0, #1
 8002ab0:	89a3      	ldrh	r3, [r4, #12]
 8002ab2:	bf15      	itete	ne
 8002ab4:	6560      	strne	r0, [r4, #84]	; 0x54
 8002ab6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8002aba:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8002abe:	81a3      	strheq	r3, [r4, #12]
 8002ac0:	bf18      	it	ne
 8002ac2:	81a3      	strhne	r3, [r4, #12]
 8002ac4:	bd10      	pop	{r4, pc}

08002ac6 <__sclose>:
 8002ac6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8002aca:	f000 b813 	b.w	8002af4 <_close_r>
	...

08002ad0 <_write_r>:
 8002ad0:	b538      	push	{r3, r4, r5, lr}
 8002ad2:	4d07      	ldr	r5, [pc, #28]	; (8002af0 <_write_r+0x20>)
 8002ad4:	4604      	mov	r4, r0
 8002ad6:	4608      	mov	r0, r1
 8002ad8:	4611      	mov	r1, r2
 8002ada:	2200      	movs	r2, #0
 8002adc:	602a      	str	r2, [r5, #0]
 8002ade:	461a      	mov	r2, r3
 8002ae0:	f7fd fe38 	bl	8000754 <_write>
 8002ae4:	1c43      	adds	r3, r0, #1
 8002ae6:	d102      	bne.n	8002aee <_write_r+0x1e>
 8002ae8:	682b      	ldr	r3, [r5, #0]
 8002aea:	b103      	cbz	r3, 8002aee <_write_r+0x1e>
 8002aec:	6023      	str	r3, [r4, #0]
 8002aee:	bd38      	pop	{r3, r4, r5, pc}
 8002af0:	20000230 	andcs	r0, r0, r0, lsr r2

08002af4 <_close_r>:
 8002af4:	b538      	push	{r3, r4, r5, lr}
 8002af6:	4d06      	ldr	r5, [pc, #24]	; (8002b10 <_close_r+0x1c>)
 8002af8:	2300      	movs	r3, #0
 8002afa:	4604      	mov	r4, r0
 8002afc:	4608      	mov	r0, r1
 8002afe:	602b      	str	r3, [r5, #0]
 8002b00:	f7fd fe36 	bl	8000770 <_close>
 8002b04:	1c43      	adds	r3, r0, #1
 8002b06:	d102      	bne.n	8002b0e <_close_r+0x1a>
 8002b08:	682b      	ldr	r3, [r5, #0]
 8002b0a:	b103      	cbz	r3, 8002b0e <_close_r+0x1a>
 8002b0c:	6023      	str	r3, [r4, #0]
 8002b0e:	bd38      	pop	{r3, r4, r5, pc}
 8002b10:	20000230 	andcs	r0, r0, r0, lsr r2

08002b14 <_fstat_r>:
 8002b14:	b538      	push	{r3, r4, r5, lr}
 8002b16:	4d07      	ldr	r5, [pc, #28]	; (8002b34 <_fstat_r+0x20>)
 8002b18:	2300      	movs	r3, #0
 8002b1a:	4604      	mov	r4, r0
 8002b1c:	4608      	mov	r0, r1
 8002b1e:	4611      	mov	r1, r2
 8002b20:	602b      	str	r3, [r5, #0]
 8002b22:	f7fd fe28 	bl	8000776 <_fstat>
 8002b26:	1c43      	adds	r3, r0, #1
 8002b28:	d102      	bne.n	8002b30 <_fstat_r+0x1c>
 8002b2a:	682b      	ldr	r3, [r5, #0]
 8002b2c:	b103      	cbz	r3, 8002b30 <_fstat_r+0x1c>
 8002b2e:	6023      	str	r3, [r4, #0]
 8002b30:	bd38      	pop	{r3, r4, r5, pc}
 8002b32:	bf00      	nop
 8002b34:	20000230 	andcs	r0, r0, r0, lsr r2

08002b38 <_isatty_r>:
 8002b38:	b538      	push	{r3, r4, r5, lr}
 8002b3a:	4d06      	ldr	r5, [pc, #24]	; (8002b54 <_isatty_r+0x1c>)
 8002b3c:	2300      	movs	r3, #0
 8002b3e:	4604      	mov	r4, r0
 8002b40:	4608      	mov	r0, r1
 8002b42:	602b      	str	r3, [r5, #0]
 8002b44:	f7fd fe1c 	bl	8000780 <_isatty>
 8002b48:	1c43      	adds	r3, r0, #1
 8002b4a:	d102      	bne.n	8002b52 <_isatty_r+0x1a>
 8002b4c:	682b      	ldr	r3, [r5, #0]
 8002b4e:	b103      	cbz	r3, 8002b52 <_isatty_r+0x1a>
 8002b50:	6023      	str	r3, [r4, #0]
 8002b52:	bd38      	pop	{r3, r4, r5, pc}
 8002b54:	20000230 	andcs	r0, r0, r0, lsr r2

08002b58 <_lseek_r>:
 8002b58:	b538      	push	{r3, r4, r5, lr}
 8002b5a:	4d07      	ldr	r5, [pc, #28]	; (8002b78 <_lseek_r+0x20>)
 8002b5c:	4604      	mov	r4, r0
 8002b5e:	4608      	mov	r0, r1
 8002b60:	4611      	mov	r1, r2
 8002b62:	2200      	movs	r2, #0
 8002b64:	602a      	str	r2, [r5, #0]
 8002b66:	461a      	mov	r2, r3
 8002b68:	f7fd fe0c 	bl	8000784 <_lseek>
 8002b6c:	1c43      	adds	r3, r0, #1
 8002b6e:	d102      	bne.n	8002b76 <_lseek_r+0x1e>
 8002b70:	682b      	ldr	r3, [r5, #0]
 8002b72:	b103      	cbz	r3, 8002b76 <_lseek_r+0x1e>
 8002b74:	6023      	str	r3, [r4, #0]
 8002b76:	bd38      	pop	{r3, r4, r5, pc}
 8002b78:	20000230 	andcs	r0, r0, r0, lsr r2

08002b7c <__malloc_lock>:
 8002b7c:	4801      	ldr	r0, [pc, #4]	; (8002b84 <__malloc_lock+0x8>)
 8002b7e:	f7ff bb1d 	b.w	80021bc <__retarget_lock_acquire_recursive>
 8002b82:	bf00      	nop
 8002b84:	20000224 	andcs	r0, r0, r4, lsr #4

08002b88 <__malloc_unlock>:
 8002b88:	4801      	ldr	r0, [pc, #4]	; (8002b90 <__malloc_unlock+0x8>)
 8002b8a:	f7ff bb18 	b.w	80021be <__retarget_lock_release_recursive>
 8002b8e:	bf00      	nop
 8002b90:	20000224 	andcs	r0, r0, r4, lsr #4

08002b94 <_read_r>:
 8002b94:	b538      	push	{r3, r4, r5, lr}
 8002b96:	4d07      	ldr	r5, [pc, #28]	; (8002bb4 <_read_r+0x20>)
 8002b98:	4604      	mov	r4, r0
 8002b9a:	4608      	mov	r0, r1
 8002b9c:	4611      	mov	r1, r2
 8002b9e:	2200      	movs	r2, #0
 8002ba0:	602a      	str	r2, [r5, #0]
 8002ba2:	461a      	mov	r2, r3
 8002ba4:	f7fd fdc6 	bl	8000734 <_read>
 8002ba8:	1c43      	adds	r3, r0, #1
 8002baa:	d102      	bne.n	8002bb2 <_read_r+0x1e>
 8002bac:	682b      	ldr	r3, [r5, #0]
 8002bae:	b103      	cbz	r3, 8002bb2 <_read_r+0x1e>
 8002bb0:	6023      	str	r3, [r4, #0]
 8002bb2:	bd38      	pop	{r3, r4, r5, pc}
 8002bb4:	20000230 	andcs	r0, r0, r0, lsr r2

08002bb8 <_init>:
 8002bb8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bba:	bf00      	nop
 8002bbc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002bbe:	bc08      	pop	{r3}
 8002bc0:	469e      	mov	lr, r3
 8002bc2:	4770      	bx	lr

08002bc4 <_fini>:
 8002bc4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8002bc6:	bf00      	nop
 8002bc8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8002bca:	bc08      	pop	{r3}
 8002bcc:	469e      	mov	lr, r3
 8002bce:	4770      	bx	lr

Disassembly of section .rodata:

08002bd0 <__func__.0-0x3c>:
 8002bd0:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
 8002bd4:	2578303a 	ldrbcs	r3, [r8, #-58]!	; 0xffffffc6
 8002bd8:	2d583230 	lfmcs	f3, 2, [r8, #-192]	; 0xffffff40
 8002bdc:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
 8002be0:	78303a65 	ldmdavc	r0!, {r0, r2, r5, r6, r9, fp, ip, sp}
 8002be4:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002be8:	00000a0d 	andeq	r0, r0, sp, lsl #20
 8002bec:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 8002bf0:	20736920 	rsbscs	r6, r3, r0, lsr #18
 8002bf4:	0d2e7325 	stceq	3, cr7, [lr, #-148]!	; 0xffffff6c
 8002bf8:	0000000a 	andeq	r0, r0, sl
 8002bfc:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
 8002c00:	6571206f 	ldrbvs	r2, [r1, #-111]!	; 0xffffff91
 8002c04:	0d2e756d 	cfstr32eq	mvfx7, [lr, #-436]!	; 0xfffffe4c
 8002c08:	00000000 	andeq	r0, r0, r0

08002c0c <__func__.0>:
 8002c0c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c10:	00000035 	andeq	r0, r0, r5, lsr r0

08002c14 <__func__.1>:
 8002c14:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c18:	00000034 	andeq	r0, r0, r4, lsr r0

08002c1c <__func__.2>:
 8002c1c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c20:	00000033 	andeq	r0, r0, r3, lsr r0

08002c24 <__func__.3>:
 8002c24:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c28:	00000032 	andeq	r0, r0, r2, lsr r0

08002c2c <__func__.4>:
 8002c2c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c30:	00000031 	andeq	r0, r0, r1, lsr r0

08002c34 <__func__.5>:
 8002c34:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 8002c38:	00000030 	andeq	r0, r0, r0, lsr r0

08002c3c <__func__.0>:
 8002c3c:	65737361 	ldrbvs	r7, [r3, #-865]!	; 0xfffffc9f
 8002c40:	665f7472 			; <UNDEFINED> instruction: 0x665f7472
 8002c44:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 8002c48:	00000064 	andeq	r0, r0, r4, rrx

08002c4c <__func__.1>:
 8002c4c:	6f727245 	svcvs	0x00727245
 8002c50:	61485f72 	hvcvs	34290	; 0x85f2
 8002c54:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 8002c58:	00000072 	andeq	r0, r0, r2, ror r0

08002c5c <__func__.2>:
 8002c5c:	67617355 			; <UNDEFINED> instruction: 0x67617355
 8002c60:	75614665 	strbvc	r4, [r1, #-1637]!	; 0xfffff99b
 8002c64:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 8002c68:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
 8002c6c:	00007265 	andeq	r7, r0, r5, ror #4

08002c70 <__func__.3>:
 8002c70:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
 8002c74:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 8002c78:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
 8002c7c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
 8002c80:	00000000 	andeq	r0, r0, r0

08002c84 <__func__.4>:
 8002c84:	4d6d654d 	cfstr64mi	mvdx6, [sp, #-308]!	; 0xfffffecc
 8002c88:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
 8002c8c:	61485f65 	cmpvs	r8, r5, ror #30
 8002c90:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 8002c94:	00000072 	andeq	r0, r0, r2, ror r0

08002c98 <__func__.6>:
 8002c98:	5f494d4e 	svcpl	0x00494d4e
 8002c9c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
 8002ca0:	0072656c 	rsbseq	r6, r2, ip, ror #10
 8002ca4:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002cac <__func__.6+0x14>
 8002ca8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002cac:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002cb0:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002cb4:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002cb8:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002cbc:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002cc0:	2f726576 	svccs	0x00726576
 8002cc4:	2f637253 	svccs	0x00637253
 8002cc8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002ccc:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002cd0:	61685f78 	smcvs	34296	; 0x85f8
 8002cd4:	61755f6c 	cmnvs	r5, ip, ror #30
 8002cd8:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
 8002cdc:	00000000 	andeq	r0, r0, r0
 8002ce0:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002ce8 <__func__.6+0x50>
 8002ce4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002ce8:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002cec:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002cf0:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002cf4:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002cf8:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002cfc:	2f726576 	svccs	0x00726576
 8002d00:	2f637253 	svccs	0x00637253
 8002d04:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002d08:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002d0c:	61685f78 	smcvs	34296	; 0x85f8
 8002d10:	70675f6c 	rsbvc	r5, r7, ip, ror #30
 8002d14:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
 8002d18:	00000000 	andeq	r0, r0, r0
 8002d1c:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8002d24 <__func__.6+0x8c>
 8002d20:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8002d24:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8002d28:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8002d2c:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8002d30:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8002d34:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8002d38:	2f726576 	svccs	0x00726576
 8002d3c:	2f637253 	svccs	0x00637253
 8002d40:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8002d44:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8002d48:	61685f78 	smcvs	34296	; 0x85f8
 8002d4c:	6f635f6c 	svcvs	0x00635f6c
 8002d50:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
 8002d54:	0000632e 	andeq	r6, r0, lr, lsr #6

08002d58 <APBPrescTable>:
const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 8002d58:	00000000 	andeq	r0, r0, r0
 8002d5c:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 8002d60:	45584520 	ldrbmi	r4, [r8, #-1312]	; 0xfffffae0
 8002d64:	5445525f 	strbpl	r5, [r5], #-607	; 0xfffffda1
 8002d68:	3a4e5255 	bcc	93976c4 <_siccmram+0x1394540>
 8002d6c:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
 8002d70:	20583830 	subscs	r3, r8, r0, lsr r8
 8002d74:	00000a0d 	andeq	r0, r0, sp, lsl #20
 8002d78:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002d7c:	61745320 	cmnvs	r4, r0, lsr #6
 8002d80:	5b3a6b63 	blpl	8e9db14 <_siccmram+0xe9a990>
 8002d84:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002d88:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
 8002d8c:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
 8002d90:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
 8002d94:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
 8002d98:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002d9c:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002da0:	78655420 	stmdavc	r5!, {r5, sl, ip, lr}^
 8002da4:	5b3a2074 	blpl	8e8af7c <_siccmram+0xe87df8>
 8002da8:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002dac:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
 8002db0:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
 8002db4:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
 8002db8:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
 8002dbc:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002dc0:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8002dc4:	61745320 	cmnvs	r4, r0, lsr #6
 8002dc8:	47206b63 	strmi	r6, [r0, -r3, ror #22]!
 8002dcc:	74776f72 	ldrbtvc	r6, [r7], #-3954	; 0xfffff08e
 8002dd0:	6f442068 	svcvs	0x00442068
 8002dd4:	61776e77 	cmnvs	r7, r7, ror lr
 8002dd8:	253a6472 	ldrcs	r6, [sl, #-1138]!	; 0xfffffb8e
 8002ddc:	000a0d64 	andeq	r0, sl, r4, ror #26
 8002de0:	72614820 	rsbvc	r4, r1, #32, 16	; 0x200000
 8002de4:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
 8002de8:	4920746c 	stmdbmi	r0!, {r2, r3, r5, r6, sl, ip, sp, lr}
 8002dec:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
 8002df0:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 8002df4:	44206e6f 	strtmi	r6, [r0], #-3695	; 0xfffff191
 8002df8:	20706d75 	rsbscs	r6, r0, r5, ror sp
 8002dfc:	0000000d 	andeq	r0, r0, sp
 8002e00:	61745320 	cmnvs	r4, r0, lsr #6
 8002e04:	46206b63 	strtmi	r6, [r0], -r3, ror #22
 8002e08:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
 8002e0c:	0d202020 	stceq	0, cr2, [r0, #-128]!	; 0xffffff80
 8002e10:	00000000 	andeq	r0, r0, r0
 8002e14:	20305220 	eorscs	r5, r0, r0, lsr #4
 8002e18:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e1c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e20:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e24:	0000000a 	andeq	r0, r0, sl
 8002e28:	20315220 	eorscs	r5, r1, r0, lsr #4
 8002e2c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e30:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e34:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e38:	0000000a 	andeq	r0, r0, sl
 8002e3c:	20325220 	eorscs	r5, r2, r0, lsr #4
 8002e40:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e44:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e48:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e4c:	0000000a 	andeq	r0, r0, sl
 8002e50:	20335220 	eorscs	r5, r3, r0, lsr #4
 8002e54:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e58:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e5c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e60:	0000000a 	andeq	r0, r0, sl
 8002e64:	20345220 	eorscs	r5, r4, r0, lsr #4
 8002e68:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e6c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e70:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e74:	0000000a 	andeq	r0, r0, sl
 8002e78:	20355220 	eorscs	r5, r5, r0, lsr #4
 8002e7c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e80:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e84:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e88:	0000000a 	andeq	r0, r0, sl
 8002e8c:	20365220 	eorscs	r5, r6, r0, lsr #4
 8002e90:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002e94:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002e98:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002e9c:	0000000a 	andeq	r0, r0, sl
 8002ea0:	20375220 	eorscs	r5, r7, r0, lsr #4
 8002ea4:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ea8:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002eac:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002eb0:	0000000a 	andeq	r0, r0, sl
 8002eb4:	20385220 	eorscs	r5, r8, r0, lsr #4
 8002eb8:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ebc:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ec0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002ec4:	0000000a 	andeq	r0, r0, sl
 8002ec8:	20395220 	eorscs	r5, r9, r0, lsr #4
 8002ecc:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ed0:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ed4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002ed8:	0000000a 	andeq	r0, r0, sl
 8002edc:	30315220 	eorscc	r5, r1, r0, lsr #4
 8002ee0:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ee4:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002ee8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002eec:	0000000a 	andeq	r0, r0, sl
 8002ef0:	31315220 	teqcc	r1, r0, lsr #4
 8002ef4:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002ef8:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002efc:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f00:	0000000a 	andeq	r0, r0, sl
 8002f04:	32315220 	eorscc	r5, r1, #32, 4
 8002f08:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f0c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f10:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f14:	0000000a 	andeq	r0, r0, sl
 8002f18:	20524c20 	subscs	r4, r2, r0, lsr #24
 8002f1c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f20:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f24:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f28:	0000000a 	andeq	r0, r0, sl
 8002f2c:	20435020 	subcs	r5, r3, r0, lsr #32
 8002f30:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f34:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f38:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f3c:	0000000a 	andeq	r0, r0, sl
 8002f40:	52535020 	subspl	r5, r3, #32
 8002f44:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8002f48:	30257830 	eorcc	r7, r5, r0, lsr r8
 8002f4c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8002f50:	0000000a 	andeq	r0, r0, sl
 8002f54:	61745320 	cmnvs	r4, r0, lsr #6
 8002f58:	43206b63 			; <UNDEFINED> instruction: 0x43206b63
 8002f5c:	3a6c6c61 	bcc	9b1e0e8 <_siccmram+0x1b1af64>
 8002f60:	00000020 	andeq	r0, r0, r0, lsr #32
 8002f64:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8002f68:	00000020 	andeq	r0, r0, r0, lsr #32
 8002f6c:	00000d20 	andeq	r0, r0, r0, lsr #26
 8002f70:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 8002f74:	65522032 	ldrbvs	r2, [r2, #-50]	; 0xffffffce
 8002f78:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 8002f7c:	61745320 	cmnvs	r4, r0, lsr #6
 8002f80:	53206b63 			; <UNDEFINED> instruction: 0x53206b63
 8002f84:	63656c65 	cmnvs	r5, #25856	; 0x6500
 8002f88:	00203a74 	eoreq	r3, r0, r4, ror sl
 8002f8c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8002f90:	50535020 	subspl	r5, r3, r0, lsr #32
 8002f94:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002f98:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002f9c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002fa0:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8002fa4:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8002fa8:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8002fac:	50534d20 	subspl	r4, r3, r0, lsr #26
 8002fb0:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002fb4:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002fb8:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002fbc:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8002fc0:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8002fc4:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 8002fc8:	65522033 	ldrbvs	r2, [r2, #-51]	; 0xffffffcd
 8002fcc:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 8002fd0:	646f4d20 	strbtvs	r4, [pc], #-3360	; 8002fd8 <APBPrescTable+0x280>
 8002fd4:	65532065 	ldrbvs	r2, [r3, #-101]	; 0xffffff9b
 8002fd8:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
 8002fdc:	0020203a 	eoreq	r2, r0, sl, lsr r0
 8002fe0:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8002fe4:	72685420 	rsbvc	r5, r8, #32, 8	; 0x20000000
 8002fe8:	20646165 	rsbcs	r6, r4, r5, ror #2
 8002fec:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 8002ff0:	20202020 	eorcs	r2, r0, r0, lsr #32
 8002ff4:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8002ff8:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8002ffc:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8003000:	6f725020 	svcvs	0x00725020
 8003004:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
 8003008:	646f4d20 	strbtvs	r4, [pc], #-3360	; 8003010 <APBPrescTable+0x2b8>
 800300c:	20202065 	eorcs	r2, r0, r5, rrx
 8003010:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8003014:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8003018:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 800301c:	74532034 	ldrbvc	r2, [r3], #-52	; 0xffffffcc
 8003020:	206b6361 	rsbcs	r6, fp, r1, ror #6
 8003024:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
 8003028:	79542065 	ldmdbvc	r4, {r0, r2, r5, r6, sp}^
 800302c:	203a6570 	eorscs	r6, sl, r0, ror r5
 8003030:	00202020 	eoreq	r2, r0, r0, lsr #32
 8003034:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8003038:	57203820 	strpl	r3, [r0, -r0, lsr #16]!
 800303c:	646c726f 	strbtvs	r7, [ip], #-623	; 0xfffffd91
 8003040:	61724620 	cmnvs	r2, r0, lsr #12
 8003044:	2020656d 	eorcs	r6, r0, sp, ror #10
 8003048:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 800304c:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8003050:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8003054:	20363220 	eorscs	r3, r6, r0, lsr #4
 8003058:	6c726f57 	ldclvs	15, cr6, [r2], #-348	; 0xfffffea4
 800305c:	72462064 	subvc	r2, r6, #100	; 0x64
 8003060:	20656d61 	rsbcs	r6, r5, r1, ror #26
 8003064:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8003068:	00000d2e 	andeq	r0, r0, lr, lsr #26

0800306c <_global_impure_ptr>:
 800306c:	20000010 	andcs	r0, r0, r0, lsl r0

08003070 <__sf_fake_stderr>:
	...

08003090 <__sf_fake_stdin>:
	...

080030b0 <__sf_fake_stdout>:
	...
 80030d0:	2b302d23 	blcs	8c0e564 <_siccmram+0xc0b3e0>
 80030d4:	6c680020 	stclvs	0, cr0, [r8], #-128	; 0xffffff80
 80030d8:	6665004c 	strbtvs	r0, [r5], -ip, asr #32
 80030dc:	47464567 	strbmi	r4, [r6, -r7, ror #10]
 80030e0:	32313000 	eorscc	r3, r1, #0
 80030e4:	36353433 			; <UNDEFINED> instruction: 0x36353433
 80030e8:	41393837 	teqmi	r9, r7, lsr r8
 80030ec:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 80030f0:	31300046 	teqcc	r0, r6, asr #32
 80030f4:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 80030f8:	39383736 	ldmdbcc	r8!, {r1, r2, r4, r5, r8, r9, sl, ip, sp}
 80030fc:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 8003100:	00006665 	andeq	r6, r0, r5, ror #12

Disassembly of section .ARM:

08003104 <__exidx_start>:
 8003104:	7fffd1ec 	svcvc	0x00ffd1ec
 8003108:	00000001 	andeq	r0, r0, r1

Disassembly of section .init_array:

0800310c <__frame_dummy_init_array_entry>:
 800310c:	080001b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8}

Disassembly of section .fini_array:

08003110 <__do_global_dtors_aux_fini_array_entry>:
 8003110:	08000191 	stmdaeq	r0, {r0, r4, r7, r8}

Disassembly of section .data:

20000000 <uwTickFreq>:
HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
20000000:	00000001 	andeq	r0, r0, r1

20000004 <uwTickPrio>:
uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
20000004:	00000010 	andeq	r0, r0, r0, lsl r0

20000008 <SystemCoreClock>:
uint32_t SystemCoreClock = 16000000;
20000008:	00f42400 	rscseq	r2, r4, r0, lsl #8

2000000c <_impure_ptr>:
2000000c:	20000010 	andcs	r0, r0, r0, lsl r0

20000010 <impure_data>:
20000010:	00000000 	andeq	r0, r0, r0
20000014:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
20000018:	080030b0 	stmdaeq	r0, {r4, r5, r7, ip, sp}
2000001c:	08003070 	stmdaeq	r0, {r4, r5, r6, ip, sp}
	...

Disassembly of section .bss:

20000070 <__bss_start__>:
20000070:	00000000 	andeq	r0, r0, r0

20000074 <object.0>:
	...

2000008c <__sbrk_heap_end>:
static uint8_t *__sbrk_heap_end = NULL;
2000008c:	00000000 	andeq	r0, r0, r0

20000090 <huart1>:
	...

200000d8 <uwTick>:
__IO uint32_t uwTick;
200000d8:	00000000 	andeq	r0, r0, r0

200000dc <buffer.0>:
	...

200001dc <fd_main_stack_base>:
volatile unsigned int fd_main_stack_base = 0;
200001dc:	00000000 	andeq	r0, r0, r0

200001e0 <fd_main_stack_full>:
volatile unsigned int fd_main_stack_full = 0;
200001e0:	00000000 	andeq	r0, r0, r0

200001e4 <frame.1>:
	...

20000224 <__lock___malloc_recursive_mutex>:
	...

20000225 <__lock___sfp_recursive_mutex>:
	...

20000226 <__lock___sinit_recursive_mutex>:
	...

20000228 <__malloc_free_list>:
20000228:	00000000 	andeq	r0, r0, r0

2000022c <__malloc_sbrk_start>:
2000022c:	00000000 	andeq	r0, r0, r0

20000230 <errno>:
20000230:	00000000 	andeq	r0, r0, r0

Disassembly of section ._user_heap_stack:

20000234 <_end-0x4>:
20000234:	00000000 	andeq	r0, r0, r0

20000238 <_end>:
	...

20000a38 <_sstack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
    return __get_MSP();
}

unsigned int fault_dump_bm_stack_start(void) {
    return FD_STACK_START;
}
   0:	00002f41 	andeq	r2, r0, r1, asr #30
   4:	61656100 	cmnvs	r5, r0, lsl #2
int _execve(char *name, char **argv, char **env)
{
  (void)name;
  (void)argv;
  (void)env;
  errno = ENOMEM;
   8:	01006962 	tsteq	r0, r2, ror #18
  return -1;
}
   c:	00000025 	andeq	r0, r0, r5, lsr #32
  while (1)
  10:	2d453705 	stclcs	7, cr3, [r5, #-20]	; 0xffffffec
  {
  /* USER CODE BEGIN USART1_MspDeInit 0 */

  /* USER CODE END USART1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	0d06004d 	stceq	0, cr0, [r6, #-308]	; 0xfffffecc

    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	02094d07 	andeq	r4, r9, #448	; 0x1c0
  1c:	0412060a 	ldreq	r0, [r2], #-1546	; 0xfffff9f6

    /* USART1 interrupt Deinit */
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	01150114 	tsteq	r5, r4, lsl r1
  24:	01180317 	tsteq	r8, r7, lsl r3
  /* USER CODE BEGIN USART1_MspDeInit 1 */

  /* USER CODE END USART1_MspDeInit 1 */
  }
}
  28:	011b011a 	tsteq	fp, sl, lsl r1
  2c:	0122011c 			; <UNDEFINED> instruction: 0x0122011c

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	0000110f 	andeq	r1, r0, pc, lsl #2
       4:	00000002 	andeq	r0, r0, r2
  errno = ENOMEM;
       8:	01040000 	mrseq	r0, (UNDEF: 4)
}
       c:	00000588 	andeq	r0, r0, r8, lsl #11
      10:	0003560c 	andeq	r5, r3, ip, lsl #12
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	00086d00 	andeq	r6, r8, r0, lsl #26
	...
}
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	00000576 	andeq	r0, r0, r6, ror r5
      30:	00006603 	andeq	r6, r0, r3, lsl #12
    if (status != HAL_OK)
      34:	182b0200 	stmdane	fp!, {r9}
      uwTickFreq = prevTickFreq;
      38:	0000003c 	andeq	r0, r0, ip, lsr r0
      3c:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
      40:	02000005 	andeq	r0, r0, #5
      44:	03fd0502 	mvnseq	r0, #8388608	; 0x800000
         SYSCLK = PLL_VCO / PLL_P
         */    
      pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
      
      if (pllsource != 0)
      48:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
      4c:	02000006 	andeq	r0, r0, #6
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	00561939 	subseq	r1, r6, r9, lsr r9
      54:	02020000 	andeq	r0, r2, #0
      58:	00078f07 	andeq	r8, r7, r7, lsl #30
      5c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      }

      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	000002ec 	andeq	r0, r0, ip, ror #5
      64:	0002c203 	andeq	ip, r2, r3, lsl #4
      68:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
      SystemCoreClock = pllvco/pllp;
      6c:	00000070 	andeq	r0, r0, r0, ror r0
      70:	b3070402 	movwlt	r0, #29698	; 0x7402
      break;
      74:	02000000 	andeq	r0, r0, #0
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
      7c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      80:	0000ae07 	andeq	sl, r0, r7, lsl #28
      84:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
      88:	00746e69 	rsbseq	r6, r4, r9, ror #28
      8c:	00008505 	andeq	r8, r0, r5, lsl #10
      90:	07040200 	streq	r0, [r4, -r0, lsl #4]
      94:	000000b8 	strheq	r0, [r0], -r8
      98:	00006803 	andeq	r6, r0, r3, lsl #16
      9c:	13180300 	tstne	r8, #0, 6
    RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;

    if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
        Error_Handler();
    }
}
      a0:	00000030 	andeq	r0, r0, r0, lsr r0
      a4:	00009805 	andeq	r9, r0, r5, lsl #16
      a8:	00980600 	addseq	r0, r8, r0, lsl #12
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	f7030000 			; <UNDEFINED> instruction: 0xf7030000
      b0:	03000006 	movweq	r0, #6
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	004a1424 	subeq	r1, sl, r4, lsr #8
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	ae050000 	cdpge	0, 0, cr0, cr5, cr0, {0}
      bc:	03000000 	movweq	r0, #0
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	000002c4 	andeq	r0, r0, r4, asr #5
      c4:	64143003 	ldrvs	r3, [r4], #-3
      c8:	05000000 	streq	r0, [r0, #-0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
      d0:	0000cb06 	andeq	ip, r0, r6, lsl #22
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	048c0700 	streq	r0, [ip], #1792	; 0x700
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	310901bd 			; <UNDEFINED> instruction: 0x310901bd
      dc:	08000002 	stmdaeq	r0, {r1}
      e0:	00000101 	andeq	r0, r0, r1, lsl #2
    if (huart->hdmarx != NULL)
      e4:	1201bf04 	andne	fp, r1, #4, 30
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
      f0:	0000038c 	andeq	r0, r0, ip, lsl #7
    huart->TxXferCount = 0x00U;
      f4:	1201c004 	andne	ip, r1, #4
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	000000cb 	andeq	r0, r0, fp, asr #1
    huart->gState  = HAL_UART_STATE_READY;
      fc:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    huart->RxState = HAL_UART_STATE_READY;
     100:	00000351 	andeq	r0, r0, r1, asr r3
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	1201c104 	andne	ip, r1, #4, 2
    HAL_UART_AbortCpltCallback(huart);
     108:	000000cb 	andeq	r0, r0, fp, asr #1
     10c:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
  uint32_t AbortCplt = 0x01U;
     110:	000003a5 	andeq	r0, r0, r5, lsr #7
  if (AbortCplt == 0x01U)
     114:	1201c204 	andne	ip, r1, #4, 4	; 0x40000000
}
     118:	000000cb 	andeq	r0, r0, fp, asr #1
     11c:	090c2302 	stmdbeq	ip, {r1, r8, r9, sp}
     120:	00524353 	subseq	r4, r2, r3, asr r3
  else
  {
    MPU->RBAR = 0x00U;
    MPU->RASR = 0x00U;
  }
}
     124:	1201c304 	andne	ip, r1, #4, 6	; 0x10000000
    if(iocurrent == ioposition)
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	000000cb 	andeq	r0, r0, fp, asr #1
     12c:	09102302 	ldmdbeq	r0, {r1, r8, r9, sp}
     130:	00524343 	subseq	r4, r2, r3, asr #6
     134:	1201c404 	andne	ip, r1, #4, 8	; 0x4000000
     138:	000000cb 	andeq	r0, r0, fp, asr #1
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	09142302 	ldmdbeq	r4, {r1, r8, r9, sp}
     140:	00504853 	subseq	r4, r0, r3, asr r8
     144:	1201c504 	andne	ip, r1, #4, 10	; 0x1000000
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	00000241 	andeq	r0, r0, r1, asr #4
     14c:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	00000582 	andeq	r0, r0, r2, lsl #11
     154:	1201c604 	andne	ip, r1, #4, 12	; 0x400000
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	000000cb 	andeq	r0, r0, fp, asr #1
     15c:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	0000048c 	andeq	r0, r0, ip, lsl #9
     164:	1201c704 	andne	ip, r1, #4, 14	; 0x100000
     168:	000000cb 	andeq	r0, r0, fp, asr #1
     16c:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
     170:	000008f4 	strdeq	r0, [r0], -r4

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
    }
  }
}
     174:	1201c804 	andne	ip, r1, #4, 16	; 0x40000
     178:	000000cb 	andeq	r0, r0, fp, asr #1
     17c:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
     180:	000003ab 	andeq	r0, r0, fp, lsr #7
}
     184:	1201c904 	andne	ip, r1, #4, 18	; 0x10000
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	000000cb 	andeq	r0, r0, fp, asr #1
     18c:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	000003c9 	andeq	r0, r0, r9, asr #7
     194:	1201ca04 	andne	ip, r1, #4, 20	; 0x4000
     198:	000000cb 	andeq	r0, r0, fp, asr #1
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	08342302 	ldmdaeq	r4!, {r1, r8, r9, sp}
     1a0:	0000029c 	muleq	r0, ip, r2
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	1201cb04 	andne	ip, r1, #4, 22	; 0x1000
     1a8:	000000cb 	andeq	r0, r0, fp, asr #1
     1ac:	08382302 	ldmdaeq	r8!, {r1, r8, r9, sp}
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	0000076f 	andeq	r0, r0, pc, ror #14
     1b4:	1201cc04 	andne	ip, r1, #4, 24	; 0x400
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	000000cb 	andeq	r0, r0, fp, asr #1
     1bc:	093c2302 	ldmdbeq	ip!, {r1, r8, r9, sp}
     1c0:	00524650 	subseq	r4, r2, r0, asr r6
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	1201cd04 	andne	ip, r1, #4, 26	; 0x100
     1c8:	0000025b 	andeq	r0, r0, fp, asr r2
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	09402302 	stmdbeq	r0, {r1, r8, r9, sp}^
     1d0:	00524644 	subseq	r4, r2, r4, asr #12
     1d4:	1201ce04 	andne	ip, r1, #4, 28	; 0x40
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     1dc:	09482302 	stmdbeq	r8, {r1, r8, r9, sp}^
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	00524441 	subseq	r4, r2, r1, asr #8
     1e4:	1201cf04 	andne	ip, r1, #4, 30
     1e8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	084c2302 	stmdaeq	ip, {r1, r8, r9, sp}^
     1f0:	000003f8 	strdeq	r0, [r0], -r8
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	1201d004 	andne	sp, r1, #4
     1f8:	00000275 	andeq	r0, r0, r5, ror r2
     1fc:	08502302 	ldmdaeq	r0, {r1, r8, r9, sp}^
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	0000014e 	andeq	r0, r0, lr, asr #2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	1201d104 	andne	sp, r1, #4, 2
     208:	0000028f 	andeq	r0, r0, pc, lsl #5
     20c:	08602302 	stmdaeq	r0!, {r1, r8, r9, sp}^
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	0000050f 	andeq	r0, r0, pc, lsl #10
     214:	1201d204 	andne	sp, r1, #4, 4	; 0x40000000
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	00000294 	muleq	r0, r4, r2
     21c:	08742302 	ldmdaeq	r4!, {r1, r8, r9, sp}^
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	00000509 	andeq	r0, r0, r9, lsl #10
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	1201d304 	andne	sp, r1, #4, 6	; 0x10000000
     228:	000000cb 	andeq	r0, r0, fp, asr #1
  tmp = hdma->Instance->FCR;
     22c:	01882303 	orreq	r2, r8, r3, lsl #6
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	00a40a00 	adceq	r0, r4, r0, lsl #20
  tmp |= hdma->Init.FIFOMode;
     234:	02410000 	subeq	r0, r1, #0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	910b0000 	mrsls	r0, (UNDEF: 11)
    tmp |= hdma->Init.FIFOThreshold;
     23c:	0b000000 	bleq	244 <_Min_Heap_Size-0x5bc>
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	02310500 	eorseq	r0, r1, #0, 10
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	d00a0000 	andle	r0, sl, r0
     248:	56000000 	strpl	r0, [r0], -r0
  hdma->Instance->FCR = tmp;
     24c:	0b000002 	bleq	25c <_Min_Heap_Size-0x5a4>
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	00000091 	muleq	r0, r1, r0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	46060001 	strmi	r0, [r6], -r1
     258:	05000002 	streq	r0, [r0, #-2]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00000256 	andeq	r0, r0, r6, asr r2
  hdma->State = HAL_DMA_STATE_READY;
     260:	0000d00a 	andeq	sp, r0, sl
     264:	00027000 	andeq	r7, r2, r0
  return HAL_OK;
     268:	00910b00 	addseq	r0, r1, r0, lsl #22
     26c:	00030000 	andeq	r0, r3, r0
     270:	00026006 	andeq	r6, r2, r6
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	02700500 	rsbseq	r0, r0, #0, 10
     278:	d00a0000 	andle	r0, sl, r0
     27c:	8a000000 	bhi	284 <_Min_Heap_Size-0x57c>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	0b000002 	bleq	290 <_Min_Heap_Size-0x570>
        hdma->State = HAL_DMA_STATE_READY;
     284:	00000091 	muleq	r0, r1, r0
        return HAL_ERROR; 
     288:	7a060004 	bvc	1802a0 <_Min_Heap_Size+0x17faa0>
    return HAL_ERROR;
     28c:	05000002 	streq	r0, [r0, #-2]
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	0000028a 	andeq	r0, r0, sl, lsl #5
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	0000bf0a 	andeq	fp, r0, sl, lsl #30
     298:	0002a400 	andeq	sl, r2, r0, lsl #8
      tickstart = HAL_GetTick();
     29c:	00910b00 	addseq	r0, r1, r0, lsl #22
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00040000 	andeq	r0, r4, r0
     2a4:	0002d70c 	andeq	sp, r2, ip, lsl #14
     2a8:	01d40400 	bicseq	r0, r4, r0, lsl #8
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	0000d503 	andeq	sp, r0, r3, lsl #10
     2b0:	00bf0a00 	adcseq	r0, pc, r0, lsl #20
     2b4:	02c10000 	sbceq	r0, r1, #0
          return HAL_TIMEOUT;
     2b8:	910b0000 	mrsls	r0, (UNDEF: 11)
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	01000000 	mrseq	r0, (UNDEF: 0)
     2c0:	05180700 	ldreq	r0, [r8, #-1792]	; 0xfffff900
     2c4:	2b090144 	blcs	2407dc <_Min_Heap_Size+0x23ffdc>
    FlagStatus       pwrclkchanged = RESET;
     2c8:	09000003 	stmdbeq	r0, {r0, r1}
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
     2d0:	cb110146 	blgt	4407f0 <_Min_Heap_Size+0x43fff0>
     2d4:	02000000 	andeq	r0, r0, #0
      tickstart = HAL_GetTick();
     2d8:	55080023 	strpl	r0, [r8, #-35]	; 0xffffffdd
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	05000007 	streq	r0, [r0, #-7]
     2e0:	cb110147 	blgt	440804 <_Min_Heap_Size+0x440004>
     2e4:	02000000 	andeq	r0, r0, #0
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	50090423 	andpl	r0, r9, r3, lsr #8
     2ec:	05005241 	streq	r5, [r0, #-577]	; 0xfffffdbf
          return HAL_TIMEOUT;
     2f0:	cb110148 	blgt	440818 <_Min_Heap_Size+0x440018>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	02000000 	andeq	r0, r0, #0
     2f8:	42080823 	andmi	r0, r8, #2293760	; 0x230000
     2fc:	05000000 	streq	r0, [r0, #-0]
     300:	cb110149 	blgt	44082c <_Min_Heap_Size+0x44002c>
     304:	02000000 	andeq	r0, r0, #0
     308:	ae080c23 	cdpge	12, 0, cr0, cr8, cr3, {1}
     30c:	05000007 	streq	r0, [r0, #-7]
     310:	cb11014a 	blgt	440840 <_Min_Heap_Size+0x440040>
      tickstart = HAL_GetTick();
     314:	02000000 	andeq	r0, r0, #0
     318:	46091023 	strmi	r1, [r9], -r3, lsr #32
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
     320:	cb11014b 	blgt	440854 <_Min_Heap_Size+0x440054>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	02000000 	andeq	r0, r0, #0
     328:	0c001423 	cfstrseq	mvf1, [r0], {35}	; 0x23
     32c:	00000774 	andeq	r0, r0, r4, ror r7
     330:	03014c05 	movweq	r4, #7173	; 0x1c05
          return HAL_TIMEOUT;
     334:	000002c1 	andeq	r0, r0, r1, asr #5
    if(pwrclkchanged == SET)
     338:	ea050807 	b	14235c <_Min_Heap_Size+0x141b5c>
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	03620901 	cmneq	r2, #16384	; 0x4000
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	43090000 	movwmi	r0, #36864	; 0x9000
     344:	ec050052 	stc	0, cr0, [r5], {82}	; 0x52
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	00cb1101 	sbceq	r1, fp, r1, lsl #2
     34c:	23020000 	movwcs	r0, #8192	; 0x2000
     350:	53430900 	movtpl	r0, #14592	; 0x3900
     354:	ed050052 	stc	0, cr0, [r5, #-328]	; 0xfffffeb8
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	00cb1101 	sbceq	r1, fp, r1, lsl #2
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	23020000 	movwcs	r0, #8192	; 0x2000
     360:	aa0c0004 	bge	300378 <_Min_Heap_Size+0x2ffb78>
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	05000001 	streq	r0, [r0, #-1]
     368:	380301ee 	stmdacc	r3, {r1, r2, r3, r5, r6, r7, r8}
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	07000003 	streq	r0, [r0, -r3]
     370:	01f40588 	mvnseq	r0, r8, lsl #11
     374:	00055b09 	andeq	r5, r5, r9, lsl #22
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	52430900 	subpl	r0, r3, #0, 18
     37c:	01f60500 	mvnseq	r0, r0, lsl #10
     380:	0000cb11 	andeq	ip, r0, r1, lsl fp
     384:	00230200 	eoreq	r0, r3, r0, lsl #4
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	00028208 	andeq	r8, r2, r8, lsl #4
     38c:	01f70500 	mvnseq	r0, r0, lsl #10
        __HAL_RCC_PLL_DISABLE();
     390:	0000cb11 	andeq	ip, r0, r1, lsl fp
     394:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
        tickstart = HAL_GetTick();
     398:	00028508 	andeq	r8, r2, r8, lsl #10
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	01f80500 	mvnseq	r0, r0, lsl #10
     3a0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     3a4:	08230200 	stmdaeq	r3!, {r9}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	52494309 	subpl	r4, r9, #603979776	; 0x24000000
     3ac:	01f90500 	mvnseq	r0, r0, lsl #10
            return HAL_TIMEOUT;
     3b0:	0000cb11 	andeq	ip, r0, r1, lsl fp
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     3b8:	00016608 	andeq	r6, r1, r8, lsl #12
     3bc:	01fa0500 	mvnseq	r0, r0, lsl #10
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     3c4:	10230200 	eorne	r0, r3, r0, lsl #4
     3c8:	00071708 	andeq	r1, r7, r8, lsl #14
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	01fb0500 	mvnseq	r0, r0, lsl #10
     3d0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     3d4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	00067c08 	andeq	r7, r6, r8, lsl #24
     3dc:	01fc0500 	mvnseq	r0, r0, lsl #10
     3e0:	0000cb11 	andeq	ip, r0, r1, lsl fp
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	18230200 	stmdane	r3!, {r9}
     3e8:	00050f08 	andeq	r0, r5, r8, lsl #30
     3ec:	01fd0500 	mvnseq	r0, r0, lsl #10
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	0000bf11 	andeq	fp, r0, r1, lsl pc
     3f4:	1c230200 	sfmne	f0, 4, [r3], #-0
     3f8:	0004fa08 	andeq	pc, r4, r8, lsl #20
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	01fe0500 	mvnseq	r0, r0, lsl #10
     400:	0000cb11 	andeq	ip, r0, r1, lsl fp
     404:	20230200 	eorcs	r0, r3, r0, lsl #4
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	0001f908 	andeq	pc, r1, r8, lsl #18
     40c:	01ff0500 	mvnseq	r0, r0, lsl #10
     410:	0000cb11 	andeq	ip, r0, r1, lsl fp
     414:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     418:	00051908 	andeq	r1, r5, r8, lsl #18
     41c:	02000500 	andeq	r0, r0, #0, 10
     420:	0002b111 	andeq	fp, r2, r1, lsl r1
     424:	28230200 	stmdacs	r3!, {r9}
        __HAL_RCC_PLL_ENABLE();
     428:	0008ae08 	andeq	sl, r8, r8, lsl #28
     42c:	02010500 	andeq	r0, r1, #0, 10
        tickstart = HAL_GetTick();
     430:	0000cb11 	andeq	ip, r0, r1, lsl fp
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	30230200 	eorcc	r0, r3, r0, lsl #4
     438:	00078708 	andeq	r8, r7, r8, lsl #14
     43c:	02020500 	andeq	r0, r2, #0, 10
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	0000cb11 	andeq	ip, r0, r1, lsl fp
     444:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
            return HAL_TIMEOUT;
     448:	00049c08 	andeq	r9, r4, r8, lsl #24
  return HAL_OK;
     44c:	02030500 	andeq	r0, r3, #0, 10
        __HAL_RCC_PLL_DISABLE();
     450:	0000cb11 	andeq	ip, r0, r1, lsl fp
     454:	38230200 	stmdacc	r3!, {r9}
        tickstart = HAL_GetTick();
     458:	00052308 	andeq	r2, r5, r8, lsl #6
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	02040500 	andeq	r0, r4, #0, 10
     460:	0000bf11 	andeq	fp, r0, r1, lsl pc
     464:	3c230200 	sfmcc	f0, 4, [r3], #-0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	0006b708 	andeq	fp, r6, r8, lsl #14
     46c:	02050500 	andeq	r0, r5, #0, 10
            return HAL_TIMEOUT;
     470:	0000cb11 	andeq	ip, r0, r1, lsl fp
  return HAL_OK;
     474:	40230200 	eormi	r0, r3, r0, lsl #4
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	00067408 	andeq	r7, r6, r8, lsl #8
        pll_config = RCC->PLLCFGR;
     47c:	02060500 	andeq	r0, r6, #0, 10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	0000cb11 	andeq	ip, r0, r1, lsl fp
     484:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	00052d08 	andeq	r2, r5, r8, lsl #26
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	02070500 	andeq	r0, r7, #0, 10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	0002b111 	andeq	fp, r2, r1, lsl r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	48230200 	stmdami	r3!, {r9}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	00012b08 	andeq	r2, r1, r8, lsl #22
     49c:	02080500 	andeq	r0, r8, #0, 10
     4a0:	0000cb11 	andeq	ip, r0, r1, lsl fp
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	50230200 	eorpl	r0, r3, r0, lsl #4
     4a8:	0004d608 	andeq	sp, r4, r8, lsl #12
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	02090500 	andeq	r0, r9, #0, 10
     4b0:	0000cb11 	andeq	ip, r0, r1, lsl fp
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	00064208 	andeq	r4, r6, r8, lsl #4
     4bc:	020a0500 	andeq	r0, sl, #0, 10
  return HAL_OK;
     4c0:	0000cb11 	andeq	ip, r0, r1, lsl fp
}
     4c4:	58230200 	stmdapl	r3!, {r9}
        return HAL_ERROR;
     4c8:	00053708 	andeq	r3, r5, r8, lsl #14
        return HAL_ERROR;
     4cc:	020b0500 	andeq	r0, fp, #0, 10
}
     4d0:	0000bf11 	andeq	fp, r0, r1, lsl pc
        return HAL_ERROR;
     4d4:	5c230200 	sfmpl	f0, 4, [r3], #-0
          return HAL_ERROR;
     4d8:	00001b08 	andeq	r1, r0, r8, lsl #22
     4dc:	020c0500 	andeq	r0, ip, #0, 10
     4e0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     4e4:	60230200 	eorvs	r0, r3, r0, lsl #4
     4e8:	0003ee08 	andeq	lr, r3, r8, lsl #28
     4ec:	020d0500 	andeq	r0, sp, #0, 10
     4f0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     4f4:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
     4f8:	00054108 	andeq	r4, r5, r8, lsl #2
     4fc:	020e0500 	andeq	r0, lr, #0, 10
     500:	0002b111 	andeq	fp, r2, r1, lsl r1
     504:	68230200 	stmdavs	r3!, {r9}
     508:	00080908 	andeq	r0, r8, r8, lsl #18
     50c:	020f0500 	andeq	r0, pc, #0, 10
     510:	0000cb11 	andeq	ip, r0, r1, lsl fp
     514:	70230200 	eorvc	r0, r3, r0, lsl #4
     518:	52534309 	subspl	r4, r3, #603979776	; 0x24000000
     51c:	02100500 	andseq	r0, r0, #0, 10
     520:	0000cb11 	andeq	ip, r0, r1, lsl fp
     524:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
     528:	00054b08 	andeq	r4, r5, r8, lsl #22
     52c:	02110500 	andseq	r0, r1, #0, 10
     530:	0002b111 	andeq	fp, r2, r1, lsl r1
     534:	78230200 	stmdavc	r3!, {r9}
     538:	0007d808 	andeq	sp, r7, r8, lsl #16
     53c:	02120500 	andseq	r0, r2, #0, 10
     540:	0000cb11 	andeq	ip, r0, r1, lsl fp
     544:	80230300 	eorhi	r0, r3, r0, lsl #6
     548:	03810801 	orreq	r0, r1, #65536	; 0x10000
     54c:	13050000 	movwne	r0, #20480	; 0x5000
     550:	00cb1102 	sbceq	r1, fp, r2, lsl #2
     554:	23030000 	movwcs	r0, #12288	; 0x3000
     558:	0c000184 	stfeqs	f0, [r0], {132}	; 0x84
     55c:	000001cd 	andeq	r0, r0, sp, asr #3
     560:	03021405 	movweq	r1, #9221	; 0x2405
     564:	0000036f 	andeq	r0, r0, pc, ror #6
     568:	95051c07 	strls	r1, [r5, #-3079]	; 0xfffff3f9
     56c:	05e10902 	strbeq	r0, [r1, #2306]!	; 0x902
     570:	53090000 	movwpl	r0, #36864	; 0x9000
     574:	97050052 	smlsdls	r5, r2, r0, r0
     578:	00cb1102 	sbceq	r1, fp, r2, lsl #2
     57c:	23020000 	movwcs	r0, #8192	; 0x2000
     580:	52440900 	subpl	r0, r4, #0, 18
     584:	02980500 	addseq	r0, r8, #0, 10
     588:	0000cb11 	andeq	ip, r0, r1, lsl fp
     58c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     590:	52524209 	subspl	r4, r2, #-1879048192	; 0x90000000
     594:	02990500 	addseq	r0, r9, #0, 10
     598:	0000cb11 	andeq	ip, r0, r1, lsl fp
     59c:	08230200 	stmdaeq	r3!, {r9}
     5a0:	31524309 	cmpcc	r2, r9, lsl #6
     5a4:	029a0500 	addseq	r0, sl, #0, 10
     5a8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5ac:	0c230200 	sfmeq	f0, 4, [r3], #-0
     5b0:	32524309 	subscc	r4, r2, #603979776	; 0x24000000
     5b4:	029b0500 	addseq	r0, fp, #0, 10
     5b8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5bc:	10230200 	eorne	r0, r3, r0, lsl #4
     5c0:	33524309 	cmpcc	r2, #603979776	; 0x24000000
     5c4:	029c0500 	addseq	r0, ip, #0, 10
     5c8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5cc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     5d0:	00018908 	andeq	r8, r1, r8, lsl #18
     5d4:	029d0500 	addseq	r0, sp, #0, 10
     5d8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5dc:	18230200 	stmdane	r3!, {r9}
     5e0:	03e00c00 	mvneq	r0, #0, 24
     5e4:	9e050000 	cdpls	0, 0, cr0, cr5, cr0, {0}
     5e8:	05680302 	strbeq	r0, [r8, #-770]!	; 0xfffffcfe
     5ec:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     5f0:	0006bf04 	andeq	fp, r6, r4, lsl #30
     5f4:	01070d00 	tsteq	r7, r0, lsl #26
     5f8:	0000003c 	andeq	r0, r0, ip, lsr r0
     5fc:	1c012706 	stcne	7, cr2, [r1], {6}
     600:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
     604:	0000034a 	andeq	r0, r0, sl, asr #6
     608:	06ad0e00 	strteq	r0, [sp], r0, lsl #28
     60c:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
     610:	000008e3 	andeq	r0, r0, r3, ror #17
     614:	032b0e02 			; <UNDEFINED> instruction: 0x032b0e02
     618:	00030000 	andeq	r0, r3, r0
     61c:	3c01070d 	stccc	7, cr0, [r1], {13}
     620:	06000000 	streq	r0, [r0], -r0
     624:	06370132 			; <UNDEFINED> instruction: 0x06370132
     628:	d60e0000 	strle	r0, [lr], -r0
     62c:	00000008 	andeq	r0, r0, r8
     630:	0004910e 	andeq	r9, r4, lr, lsl #2
     634:	03000100 	movweq	r0, #256	; 0x100
     638:	000001bd 			; <UNDEFINED> instruction: 0x000001bd
     63c:	1c033506 	cfstr32ne	mvfx3, [r3], {6}
     640:	0f000006 	svceq	0x00000006
     644:	092d0718 	pusheq	{r3, r4, r8, r9, sl}
     648:	000006a7 	andeq	r0, r0, r7, lsr #13
     64c:	00008010 	andeq	r8, r0, r0, lsl r0
     650:	0c2f0700 	stceq	7, cr0, [pc], #-0	; 658 <_Min_Heap_Size-0x1a8>
     654:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     658:	10002302 	andne	r2, r0, r2, lsl #6
     65c:	0000064c 	andeq	r0, r0, ip, asr #12
     660:	bf0c3207 	svclt	0x000c3207
     664:	02000000 	andeq	r0, r0, #0
     668:	89100423 	ldmdbhi	r0, {r0, r1, r5, sl}
     66c:	07000000 	streq	r0, [r0, -r0]
     670:	00bf0c35 	adcseq	r0, pc, r5, lsr ip	; <UNPREDICTABLE>
     674:	23020000 	movwcs	r0, #8192	; 0x2000
     678:	008e1008 	addeq	r1, lr, r8
     67c:	38070000 	stmdacc	r7, {}	; <UNPREDICTABLE>
     680:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     684:	0c230200 	sfmeq	f0, 4, [r3], #-0
     688:	00009310 	andeq	r9, r0, r0, lsl r3
     68c:	0c3c0700 	ldceq	7, cr0, [ip], #-0
     690:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     694:	10102302 	andsne	r2, r0, r2, lsl #6
     698:	00000098 	muleq	r0, r8, r0
     69c:	bf0c3f07 	svclt	0x000c3f07
     6a0:	02000000 	andeq	r0, r0, #0
     6a4:	03001423 	movweq	r1, #1059	; 0x423
     6a8:	00000850 	andeq	r0, r0, r0, asr r8
     6ac:	43024907 	movwmi	r4, #10503	; 0x2907
     6b0:	0f000006 	svceq	0x00000006
     6b4:	09310830 	ldmdbeq	r1!, {r4, r5, fp}
     6b8:	00000726 	andeq	r0, r0, r6, lsr #14
     6bc:	0003ba10 	andeq	fp, r3, r0, lsl sl
     6c0:	0c330800 	ldceq	8, cr0, [r3], #-0
     6c4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     6c8:	10002302 	andne	r2, r0, r2, lsl #6
     6cc:	00000307 	andeq	r0, r0, r7, lsl #6
     6d0:	bf0c3608 	svclt	0x000c3608
     6d4:	02000000 	andeq	r0, r0, #0
     6d8:	e6100423 	ldr	r0, [r0], -r3, lsr #8
     6dc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     6e0:	00bf0c39 	adcseq	r0, pc, r9, lsr ip	; <UNPREDICTABLE>
     6e4:	23020000 	movwcs	r0, #8192	; 0x2000
     6e8:	02411008 	subeq	r1, r1, #8
     6ec:	3c080000 	stccc	0, cr0, [r8], {-0}
     6f0:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     6f4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     6f8:	00026010 	andeq	r6, r2, r0, lsl r0
     6fc:	0c3f0800 	ldceq	8, cr0, [pc], #-0	; 704 <_Min_Heap_Size-0xfc>
     700:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     704:	10102302 	andsne	r2, r0, r2, lsl #6
     708:	0000020c 	andeq	r0, r0, ip, lsl #4
     70c:	bf0c4208 	svclt	0x000c4208
     710:	02000000 	andeq	r0, r0, #0
     714:	50111423 	andspl	r1, r1, r3, lsr #8
     718:	08004c4c 	stmdaeq	r0, {r2, r3, r6, sl, fp, lr}
     71c:	06a71645 	strteq	r1, [r7], r5, asr #12
     720:	23020000 	movwcs	r0, #8192	; 0x2000
     724:	53030018 	movwpl	r0, #12312	; 0x3018
     728:	08000001 	stmdaeq	r0, {r0}
     72c:	06b30246 	ldrteq	r0, [r3], r6, asr #4
     730:	140f0000 	strne	r0, [pc], #-0	; 738 <_Min_Heap_Size-0xc8>
     734:	87094b08 	strhi	r4, [r9, -r8, lsl #22]
     738:	10000007 	andne	r0, r0, r7
     73c:	00000863 	andeq	r0, r0, r3, ror #16
     740:	bf0c4d08 	svclt	0x000c4d08
     744:	02000000 	andeq	r0, r0, #0
     748:	37100023 	ldrcc	r0, [r0, -r3, lsr #32]
     74c:	08000009 	stmdaeq	r0, {r0, r3}
     750:	00bf0c50 	adcseq	r0, pc, r0, asr ip	; <UNPREDICTABLE>
     754:	23020000 	movwcs	r0, #8192	; 0x2000
     758:	04071004 	streq	r1, [r7], #-4
     75c:	53080000 	movwpl	r0, #32768	; 0x8000
     760:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     764:	08230200 	stmdaeq	r3!, {r9}
     768:	00005710 	andeq	r5, r0, r0, lsl r7
     76c:	0c560800 	mrrceq	8, 0, r0, r6, cr0
     770:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     774:	100c2302 	andne	r2, ip, r2, lsl #6
     778:	00000733 	andeq	r0, r0, r3, lsr r7
     77c:	bf0c5908 	svclt	0x000c5908
     780:	02000000 	andeq	r0, r0, #0
     784:	03001023 	movweq	r1, #35	; 0x23
     788:	000004e7 	andeq	r0, r0, r7, ror #9
     78c:	32025c08 	andcc	r5, r2, #8, 24	; 0x800
     790:	0f000007 	svceq	0x00000007
     794:	09300930 	ldmdbeq	r0!, {r4, r5, r8, fp}
     798:	00000851 	andeq	r0, r0, r1, asr r8
     79c:	00056c10 	andeq	r6, r5, r0, lsl ip
     7a0:	0c320900 			; <UNDEFINED> instruction: 0x0c320900
     7a4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     7a8:	10002302 	andne	r2, r0, r2, lsl #6
     7ac:	000002cd 	andeq	r0, r0, sp, asr #5
     7b0:	bf0c3509 	svclt	0x000c3509
     7b4:	02000000 	andeq	r0, r0, #0
     7b8:	02100423 	andseq	r0, r0, #587202560	; 0x23000000
     7bc:	09000002 	stmdbeq	r0, {r1}
     7c0:	00bf0c39 	adcseq	r0, pc, r9, lsr ip	; <UNPREDICTABLE>
     7c4:	23020000 	movwcs	r0, #8192	; 0x2000
     7c8:	07201008 	streq	r1, [r0, -r8]!
     7cc:	3c090000 	stccc	0, cr0, [r9], {-0}
     7d0:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     7d4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     7d8:	0007b310 	andeq	fp, r7, r0, lsl r3
     7dc:	0c3f0900 			; <UNDEFINED> instruction: 0x0c3f0900
     7e0:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     7e4:	10102302 	andsne	r2, r0, r2, lsl #6
     7e8:	000003cf 	andeq	r0, r0, pc, asr #7
     7ec:	bf0c4209 	svclt	0x000c4209
     7f0:	02000000 	andeq	r0, r0, #0
     7f4:	9d101423 	cfldrsls	mvf1, [r0, #-140]	; 0xffffff74
     7f8:	09000006 	stmdbeq	r0, {r1, r2}
     7fc:	00bf0c45 	adcseq	r0, pc, r5, asr #24
     800:	23020000 	movwcs	r0, #8192	; 0x2000
     804:	221b1018 	andscs	r1, fp, #24
     808:	4a090000 	bmi	240810 <_Min_Heap_Size+0x240010>
     80c:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     810:	1c230200 	sfmne	f0, 4, [r3], #-0
     814:	00069910 	andeq	r9, r6, r0, lsl r9
     818:	0c4d0900 	mcrreq	9, 0, r0, sp, cr0	; <UNPREDICTABLE>
     81c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     820:	10202302 	eorne	r2, r0, r2, lsl #6
     824:	000006cb 	andeq	r0, r0, fp, asr #13
     828:	bf0c5209 	svclt	0x000c5209
     82c:	02000000 	andeq	r0, r0, #0
     830:	15102423 	ldrne	r2, [r0, #-1059]	; 0xfffffbdd
     834:	09000002 	stmdbeq	r0, {r1}
     838:	00bf0c55 	adcseq	r0, pc, r5, asr ip	; <UNPREDICTABLE>
     83c:	23020000 	movwcs	r0, #8192	; 0x2000
     840:	07271028 	streq	r1, [r7, -r8, lsr #32]!
     844:	5b090000 	blpl	24084c <_Min_Heap_Size+0x24004c>
     848:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     84c:	2c230200 	sfmcs	f0, 4, [r3], #-0
     850:	00470300 	subeq	r0, r7, r0, lsl #6
     854:	60090000 	andvs	r0, r9, r0
     858:	00079302 	andeq	r9, r7, r2, lsl #6
     85c:	01070d00 	tsteq	r7, r0, lsl #26
     860:	0000003c 	andeq	r0, r0, ip, lsr r0
     864:	90016709 	andls	r6, r1, r9, lsl #14
     868:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
     86c:	00000310 	andeq	r0, r0, r0, lsl r3
     870:	04230e00 	strteq	r0, [r3], #-3584	; 0xfffff200
     874:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
     878:	00000440 	andeq	r0, r0, r0, asr #8
     87c:	082f0e02 	stmdaeq	pc!, {r1, r9, sl, fp}	; <UNPREDICTABLE>
     880:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
     884:	0000022d 	andeq	r0, r0, sp, lsr #4
     888:	03910e04 	orrseq	r0, r1, #4, 28	; 0x40
     88c:	00050000 	andeq	r0, r5, r0
     890:	00062d03 	andeq	r2, r6, r3, lsl #26
     894:	026e0900 	rsbeq	r0, lr, #0, 18
     898:	0000085d 	andeq	r0, r0, sp, asr r8
     89c:	00089005 	andeq	r9, r8, r5
     8a0:	06851200 	streq	r1, [r5], r0, lsl #4
     8a4:	09600000 	stmdbeq	r0!, {}^	; <UNPREDICTABLE>
     8a8:	0981108a 	stmibeq	r1, {r1, r3, r7, ip}
     8ac:	a4100000 	ldrge	r0, [r0], #-0
     8b0:	09000004 	stmdbeq	r0, {r2}
     8b4:	09811f8c 	stmibeq	r1, {r2, r3, r7, r8, r9, sl, fp, ip}
     8b8:	23020000 	movwcs	r0, #8192	; 0x2000
     8bc:	1cfd1000 	ldclne	0, cr1, [sp]
     8c0:	8e090000 	cdphi	0, 0, cr0, cr9, cr0, {0}
     8c4:	0008511e 	andeq	r5, r8, lr, lsl r1
     8c8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     8cc:	0002a810 	andeq	sl, r2, r0, lsl r8
     8d0:	1e900900 	vfnmsne.f16	s0, s0, s0	; <UNPREDICTABLE>
     8d4:	00000637 	andeq	r0, r0, r7, lsr r6
     8d8:	10342302 	eorsne	r2, r4, r2, lsl #6
     8dc:	0000030a 	andeq	r0, r0, sl, lsl #6
     8e0:	9c1e9209 	lfmls	f1, 1, [lr], {9}
     8e4:	02000008 	andeq	r0, r0, #8
     8e8:	a1103523 	tstge	r0, r3, lsr #10
     8ec:	09000002 	stmdbeq	r0, {r1}
     8f0:	09871f94 	stmibeq	r7, {r2, r4, r7, r8, r9, sl, fp, ip}
     8f4:	23020000 	movwcs	r0, #8192	; 0x2000
     8f8:	09191038 	ldmdbeq	r9, {r3, r4, r5, ip}
     8fc:	96090000 	strls	r0, [r9], -r0
     900:	00099b21 	andeq	r9, r9, r1, lsr #22
     904:	3c230200 	sfmcc	f0, 4, [r3], #-0
     908:	0001d910 	andeq	sp, r1, r0, lsl r9
     90c:	21980900 	orrscs	r0, r8, r0, lsl #18
     910:	0000099b 	muleq	r0, fp, r9
     914:	10402302 	subne	r2, r0, r2, lsl #6
     918:	00000197 	muleq	r0, r7, r1
     91c:	9b219a09 	blls	867148 <_Min_Heap_Size+0x866948>
     920:	02000009 	andeq	r0, r0, #9
     924:	55104423 	ldrpl	r4, [r0, #-1059]	; 0xfffffbdd
     928:	09000005 	stmdbeq	r0, {r0, r2}
     92c:	099b219c 	ldmibeq	fp, {r2, r3, r4, r7, r8, sp}
     930:	23020000 	movwcs	r0, #8192	; 0x2000
     934:	04ad1048 	strteq	r1, [sp], #72	; 0x48
     938:	9e090000 	cdpls	0, 0, cr0, cr9, cr0, {0}
     93c:	00099b21 	andeq	r9, r9, r1, lsr #22
     940:	4c230200 	sfmmi	f0, 4, [r3], #-0
     944:	00090710 	andeq	r0, r9, r0, lsl r7
     948:	21a00900 	lslcs	r0, r0, #18
     94c:	0000099b 	muleq	r0, fp, r9
     950:	10502302 	subsne	r2, r0, r2, lsl #6
     954:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
     958:	cb1ea209 	blgt	7a9184 <_Min_Heap_Size+0x7a8984>
     95c:	02000000 	andeq	r0, r0, #0
     960:	8a105423 	bhi	4159f4 <_Min_Heap_Size+0x4151f4>
     964:	09000002 	stmdbeq	r0, {r1}
     968:	00bf1ea4 	adcseq	r1, pc, r4, lsr #29
     96c:	23020000 	movwcs	r0, #8192	; 0x2000
     970:	033e1058 	teqeq	lr, #88	; 0x58
     974:	a6090000 	strge	r0, [r9], -r0
     978:	0000bf1e 	andeq	fp, r0, lr, lsl pc
     97c:	5c230200 	sfmpl	f0, 4, [r3], #-0
     980:	2b041300 	blcs	105588 <_Min_Heap_Size+0x104d88>
     984:	14000003 	strne	r0, [r0], #-3
     988:	95011504 	strls	r1, [r1, #-1284]	; 0xfffffafc
     98c:	16000009 	strne	r0, [r0], -r9
     990:	00000995 	muleq	r0, r5, r9
     994:	a1041300 	mrsge	r1, LR_abt
     998:	13000008 	movwne	r0, #8
     99c:	00098904 	andeq	r8, r9, r4, lsl #18
     9a0:	06870300 	streq	r0, [r7], r0, lsl #6
     9a4:	a8090000 	stmdage	r9, {}	; <UNPREDICTABLE>
     9a8:	0008a102 	andeq	sl, r8, r2, lsl #2
     9ac:	0a1c0f00 	beq	7045b4 <_Min_Heap_Size+0x703db4>
     9b0:	0a20092e 	beq	802e70 <_Min_Heap_Size+0x802670>
     9b4:	8e100000 	cdphi	0, 1, cr0, cr0, cr0, {0}
     9b8:	0a000001 	beq	9c4 <_Min_Heap_Size+0x1c4>
     9bc:	00bf0c30 	adcseq	r0, pc, r0, lsr ip	; <UNPREDICTABLE>
     9c0:	23020000 	movwcs	r0, #8192	; 0x2000
     9c4:	06a21000 	strteq	r1, [r2], r0
     9c8:	360a0000 	strcc	r0, [sl], -r0
     9cc:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     9d0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     9d4:	00027910 	andeq	r7, r2, r0, lsl r9
     9d8:	0c390a00 			; <UNDEFINED> instruction: 0x0c390a00
     9dc:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     9e0:	10082302 	andne	r2, r8, r2, lsl #6
     9e4:	00000324 	andeq	r0, r0, r4, lsr #6
     9e8:	bf0c3c0a 	svclt	0x000c3c0a
     9ec:	02000000 	andeq	r0, r0, #0
     9f0:	9d100c23 	ldcls	12, cr0, [r0, #-140]	; 0xffffff74
     9f4:	0a000006 	beq	a14 <_Min_Heap_Size+0x214>
     9f8:	00bf0c43 	adcseq	r0, pc, r3, asr #24
     9fc:	23020000 	movwcs	r0, #8192	; 0x2000
     a00:	08251010 	stmdaeq	r5!, {r4, ip}
     a04:	460a0000 	strmi	r0, [sl], -r0
     a08:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     a0c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     a10:	00013510 	andeq	r3, r1, r0, lsl r5
     a14:	0c490a00 	mcrreq	10, 0, r0, r9, cr0
     a18:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     a1c:	00182302 	andseq	r2, r8, r2, lsl #6
     a20:	0007c703 	andeq	ip, r7, r3, lsl #14
     a24:	034b0a00 	movteq	r0, #47616	; 0xba00
     a28:	000009ad 	andeq	r0, r0, sp, lsr #19
     a2c:	3c01070d 	stccc	7, cr0, [r1], {13}
     a30:	0a000000 	beq	a38 <_Min_Heap_Size+0x238>
     a34:	0a6b0175 	beq	1ac1010 <_Min_Heap_Size+0x1ac0810>
     a38:	5a0e0000 	bpl	380a40 <_Min_Heap_Size+0x380240>
     a3c:	00000007 	andeq	r0, r0, r7
     a40:	0002ad0e 	andeq	sl, r2, lr, lsl #26
     a44:	c20e2000 	andgt	r2, lr, #0
     a48:	24000008 	strcs	r0, [r0], #-8
     a4c:	0004bf0e 	andeq	fp, r4, lr, lsl #30
     a50:	000e2100 	andeq	r2, lr, r0, lsl #2
     a54:	22000007 	andcs	r0, r0, #7
     a58:	00016f0e 	andeq	r6, r1, lr, lsl #30
     a5c:	0e0e2300 	cdpeq	3, 0, cr2, cr14, cr0, {0}
     a60:	a0000008 	andge	r0, r0, r8
     a64:	00065f0e 	andeq	r5, r6, lr, lsl #30
     a68:	0300e000 	movweq	lr, #0
     a6c:	00000025 	andeq	r0, r0, r5, lsr #32
     a70:	2c03870a 	stccs	7, cr8, [r3], {10}
     a74:	0500000a 	streq	r0, [r0, #-10]
     a78:	00000a6b 	andeq	r0, r0, fp, ror #20
     a7c:	0007de03 	andeq	sp, r7, r3, lsl #28
     a80:	12900a00 	addsne	r0, r0, #0, 20
     a84:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     a88:	000a7c05 	andeq	r7, sl, r5, lsl #24
     a8c:	00ca0300 	sbceq	r0, sl, r0, lsl #6
     a90:	9b0a0000 	blls	280a98 <_Min_Heap_Size+0x280298>
     a94:	0000bf12 	andeq	fp, r0, r2, lsl pc
     a98:	0a8d0500 	beq	fe341ea0 <_estack+0xde340c68>
     a9c:	77120000 	ldrvc	r0, [r2, -r0]
     aa0:	48000004 	stmdami	r0, {r2}
     aa4:	9c10a00a 	ldcls	0, cr10, [r0], {10}
     aa8:	1000000b 	andne	r0, r0, fp
     aac:	000004a4 	andeq	r0, r0, r4, lsr #9
     ab0:	9c22a20a 	sfmls	f2, 1, [r2], #-40	; 0xffffffd8
     ab4:	0200000b 	andeq	r0, r0, #11
     ab8:	fd100023 	ldc2	0, cr0, [r0, #-140]	; 0xffffff74
     abc:	0a00001c 	beq	b34 <_Min_Heap_Size+0x334>
     ac0:	0a2021a4 	beq	809158 <_Min_Heap_Size+0x808958>
     ac4:	23020000 	movwcs	r0, #8192	; 0x2000
     ac8:	01ee1004 	mvneq	r1, r4
     acc:	a60a0000 	strge	r0, [sl], -r0
     ad0:	000ba222 	andeq	sl, fp, r2, lsr #4
     ad4:	20230200 	eorcs	r0, r3, r0, lsl #4
     ad8:	00037610 	andeq	r7, r3, r0, lsl r6
     adc:	21a80a00 			; <UNDEFINED> instruction: 0x21a80a00
     ae0:	000000ae 	andeq	r0, r0, lr, lsr #1
     ae4:	10242302 	eorne	r2, r4, r2, lsl #6
     ae8:	00000142 	andeq	r0, r0, r2, asr #2
     aec:	ba21aa0a 	blt	86b31c <_Min_Heap_Size+0x86ab1c>
     af0:	02000000 	andeq	r0, r0, #0
     af4:	45102623 	ldrmi	r2, [r0, #-1571]	; 0xfffff9dd
     af8:	0a000008 	beq	b20 <_Min_Heap_Size+0x320>
     afc:	0ba822ac 	bleq	fea095b4 <_estack+0xdea0837c>
     b00:	23020000 	movwcs	r0, #8192	; 0x2000
     b04:	036b1028 	cmneq	fp, #40	; 0x28
     b08:	ae0a0000 	cdpge	0, 0, cr0, cr10, cr0, {0}
     b0c:	0000ae21 	andeq	sl, r0, r1, lsr #28
     b10:	2c230200 	sfmcs	f0, 4, [r3], #-0
     b14:	0008b610 	andeq	fp, r8, r0, lsl r6
     b18:	21b00a00 	lslscs	r0, r0, #20
     b1c:	000000ba 	strheq	r0, [r0], -sl
     b20:	102e2302 	eorne	r2, lr, r2, lsl #6
     b24:	000008f9 	strdeq	r0, [r0], -r9
     b28:	881fb20a 	ldmdahi	pc, {r1, r3, r9, ip, sp, pc}	; <UNPREDICTABLE>
     b2c:	0200000a 	andeq	r0, r0, #10
     b30:	12103023 	andsne	r3, r0, #35	; 0x23
     b34:	0a000013 	beq	b88 <_Min_Heap_Size+0x388>
     b38:	0a9924b4 	beq	fe649e10 <_estack+0xde648bd8>
     b3c:	23020000 	movwcs	r0, #8192	; 0x2000
     b40:	04e01034 	strbteq	r1, [r0], #52	; 0x34
     b44:	b60a0000 	strlt	r0, [sl], -r0
     b48:	000bae22 	andeq	sl, fp, r2, lsr #28
     b4c:	38230200 	stmdacc	r3!, {r9}
     b50:	0002e010 	andeq	lr, r2, r0, lsl r0
     b54:	22b80a00 	adcscs	r0, r8, #0, 20
     b58:	00000bae 	andeq	r0, r0, lr, lsr #23
     b5c:	103c2302 	eorsne	r2, ip, r2, lsl #6
     b60:	000002a8 	andeq	r0, r0, r8, lsr #5
     b64:	3721ba0a 	strcc	fp, [r1, -sl, lsl #20]!
     b68:	02000006 	andeq	r0, r0, #6
     b6c:	3b104023 	blcc	410c00 <_Min_Heap_Size+0x410400>
     b70:	0a000000 	beq	b78 <_Min_Heap_Size+0x378>
     b74:	0a7721bc 	beq	1dc926c <_Min_Heap_Size+0x1dc8a6c>
     b78:	23020000 	movwcs	r0, #8192	; 0x2000
     b7c:	08ec1041 	stmiaeq	ip!, {r0, r6, ip}^
     b80:	c00a0000 	andgt	r0, sl, r0
     b84:	000a7721 	andeq	r7, sl, r1, lsr #14
     b88:	42230200 	eormi	r0, r3, #0, 4
     b8c:	0003b010 	andeq	fp, r3, r0, lsl r0
     b90:	21c30a00 	biccs	r0, r3, r0, lsl #20
     b94:	000000cb 	andeq	r0, r0, fp, asr #1
     b98:	00442302 	subeq	r2, r4, r2, lsl #6
     b9c:	05e10413 	strbeq	r0, [r1, #1043]!	; 0x413
     ba0:	04130000 	ldreq	r0, [r3], #-0
     ba4:	000000a9 	andeq	r0, r0, r9, lsr #1
     ba8:	00980413 	addseq	r0, r8, r3, lsl r4
     bac:	04130000 	ldreq	r0, [r3], #-0
     bb0:	000009a1 	andeq	r0, r0, r1, lsr #19
     bb4:	00047903 	andeq	r7, r4, r3, lsl #18
     bb8:	03d50a00 	bicseq	r0, r5, #0, 20
     bbc:	00000a9e 	muleq	r0, lr, sl
     bc0:	00033717 	andeq	r3, r3, r7, lsl r7
     bc4:	1b240b00 	blne	9037cc <_Min_Heap_Size+0x902fcc>
     bc8:	00000bb4 			; <UNDEFINED> instruction: 0x00000bb4
     bcc:	01020101 	tsteq	r2, r1, lsl #2
     bd0:	00057d08 	andeq	r7, r5, r8, lsl #26
     bd4:	0bce0600 	bleq	ff3823dc <_estack+0xdf3811a4>
     bd8:	01180000 	tsteq	r8, r0
     bdc:	00000742 	andeq	r0, r0, r2, asr #14
     be0:	01067801 	tsteq	r6, r1, lsl #16
	...
     bf0:	000cb001 	andeq	fp, ip, r1
     bf4:	00ef1900 	rsceq	r1, pc, r0, lsl #18
     bf8:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
     bfc:	00072618 	andeq	r2, r7, r8, lsl r6
     c00:	48910200 	ldmmi	r1, {r9}
     c04:	0002f519 	andeq	pc, r2, r9, lsl r5	; <UNPREDICTABLE>
     c08:	187a0100 	ldmdane	sl!, {r8}^
     c0c:	00000787 	andeq	r0, r0, r7, lsl #15
     c10:	7fb49103 	svcvc	0x00b49103
     c14:	0000001a 	andeq	r0, r0, sl, lsl r0
     c18:	00000000 	andeq	r0, r0, r0
     c1c:	000c3200 	andeq	r3, ip, r0, lsl #4
     c20:	01b61900 			; <UNDEFINED> instruction: 0x01b61900
     c24:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
     c28:	0000cb05 	andeq	ip, r0, r5, lsl #22
     c2c:	ac910300 	ldcge	3, cr0, [r1], {0}
     c30:	001a007f 	andseq	r0, sl, pc, ror r0
     c34:	00000000 	andeq	r0, r0, r0
     c38:	50000000 	andpl	r0, r0, r0
     c3c:	1900000c 	stmdbne	r0, {r2, r3}
     c40:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
     c44:	cb057f01 	blgt	160850 <_Min_Heap_Size+0x160050>
     c48:	03000000 	movweq	r0, #0
     c4c:	007fb091 			; <UNDEFINED> instruction: 0x007fb091
     c50:	0000001b 	andeq	r0, r0, fp, lsl r0
     c54:	00106900 	andseq	r6, r0, r0, lsl #18
     c58:	000c6f00 	andeq	r6, ip, r0, lsl #30
     c5c:	50011c00 	andpl	r1, r1, r0, lsl #24
     c60:	1c489102 	stfnep	f1, [r8], {2}
     c64:	30015101 	andcc	r5, r1, r1, lsl #2
     c68:	0252011c 	subseq	r0, r2, #28, 2
     c6c:	1b003008 	blne	cc94 <_Min_Heap_Size+0xc494>
     c70:	00000000 	andeq	r0, r0, r0
     c74:	00001076 	andeq	r1, r0, r6, ror r0
     c78:	00000c83 	andeq	r0, r0, r3, lsl #25
     c7c:	0250011c 	subseq	r0, r0, #28, 2
     c80:	1b004891 	blne	12ecc <_Min_Heap_Size+0x126cc>
     c84:	00000000 	andeq	r0, r0, r0
     c88:	00001085 	andeq	r1, r0, r5, lsl #1
     c8c:	00000c9d 	muleq	r0, sp, ip
     c90:	0350011c 	cmpeq	r0, #28, 2
     c94:	1c7fb491 	cfldrdne	mvd11, [pc], #-580	; a58 <_Min_Heap_Size+0x258>
     c98:	35015101 	strcc	r5, [r1, #-257]	; 0xfffffeff
     c9c:	00001d00 	andeq	r1, r0, r0, lsl #26
     ca0:	10940000 	addsne	r0, r4, r0
     ca4:	001d0000 	andseq	r0, sp, r0
     ca8:	94000000 	strls	r0, [r0], #-0
     cac:	00000010 	andeq	r0, r0, r0, lsl r0
     cb0:	0274011e 	rsbseq	r0, r4, #-2147483641	; 0x80000007
     cb4:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
     cb8:	00850105 	addeq	r0, r5, r5, lsl #2
     cbc:	06c00000 	strbeq	r0, [r0], r0
     cc0:	06ec0800 	strbteq	r0, [ip], r0, lsl #16
     cc4:	00460800 	subeq	r0, r6, r0, lsl #16
     cc8:	25010000 	strcs	r0, [r1, #-0]
     ccc:	1d00000d 	stcne	0, cr0, [r0, #-52]	; 0xffffffcc
     cd0:	080006c6 	stmdaeq	r0, {r1, r2, r6, r7, r9, sl}
     cd4:	000010a2 	andeq	r1, r0, r2, lsr #1
     cd8:	0006ca1d 	andeq	ip, r6, sp, lsl sl
     cdc:	0010b008 	andseq	fp, r0, r8
     ce0:	06ce1d00 	strbeq	r1, [lr], r0, lsl #26
     ce4:	10be0800 	adcsne	r0, lr, r0, lsl #16
     ce8:	d21d0000 	andsle	r0, sp, #0
     cec:	cc080006 	stcgt	0, cr0, [r8], {6}
     cf0:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
     cf4:	080006d6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r9, sl}
     cf8:	00000d25 	andeq	r0, r0, r5, lsr #26
     cfc:	0006dc1b 	andeq	sp, r6, fp, lsl ip
     d00:	0010da08 	andseq	sp, r0, r8, lsl #20
     d04:	000d1300 	andeq	r1, sp, r0, lsl #6
     d08:	50011c00 	andpl	r1, r1, r0, lsl #24
     d0c:	2bfc0305 	blcs	fff01928 <_estack+0xdff006f0>
     d10:	1f000800 	svcne	0x00000800
     d14:	080006e4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl}
     d18:	000010e7 	andeq	r1, r0, r7, ror #1
     d1c:	0350011c 	cmpeq	r0, #28, 2
     d20:	0003e80a 	andeq	lr, r3, sl, lsl #16
     d24:	13011800 	movwne	r1, #6144	; 0x1800
     d28:	01000001 	tsteq	r0, r1
     d2c:	a8010663 	stmdage	r1, {r0, r1, r5, r6, r9, sl}
     d30:	c0080006 	andgt	r0, r8, r6
     d34:	66080006 	strvs	r0, [r8], -r6
     d38:	01000000 	mrseq	r0, (UNDEF: 0)
     d3c:	00000d7a 	andeq	r0, r0, sl, ror sp
     d40:	00065620 	andeq	r5, r6, r0, lsr #12
     d44:	000d8a00 	andeq	r8, sp, r0, lsl #20
     d48:	03050100 	movweq	r0, #20736	; 0x5100
     d4c:	08002c0c 	stmdaeq	r0, {r2, r3, sl, fp, sp}
     d50:	0006b21b 	andeq	fp, r6, fp, lsl r2
     d54:	0010f508 	andseq	pc, r0, r8, lsl #10
     d58:	000d7000 	andeq	r7, sp, r0
     d5c:	50011c00 	andpl	r1, r1, r0, lsl #24
     d60:	2bec0305 	blcs	ffb0197c <_estack+0xdfb00744>
     d64:	011c0800 	tsteq	ip, r0, lsl #16
     d68:	0c030551 	cfstr32eq	mvfx0, [r3], {81}	; 0x51
     d6c:	0008002c 	andeq	r0, r8, ip, lsr #32
     d70:	0006b61d 	andeq	fp, r6, sp, lsl r6
     d74:	000d8f08 	andeq	r8, sp, r8, lsl #30
     d78:	d50a0000 	strle	r0, [sl, #-0]
     d7c:	8a00000b 	bhi	db0 <_Min_Heap_Size+0x5b0>
     d80:	0b00000d 	bleq	dbc <_Min_Heap_Size+0x5bc>
     d84:	00000091 	muleq	r0, r1, r0
     d88:	7a060005 	bvc	180da4 <_Min_Heap_Size+0x1805a4>
     d8c:	1800000d 	stmdane	r0, {r0, r2, r3}
     d90:	00010d01 	andeq	r0, r1, r1, lsl #26
     d94:	065e0100 	ldrbeq	r0, [lr], -r0, lsl #2
     d98:	00069001 	andeq	r9, r6, r1
     d9c:	0006a808 	andeq	sl, r6, r8, lsl #16
     da0:	00008608 	andeq	r8, r0, r8, lsl #12
     da4:	0de40100 	stfeqe	f0, [r4]
     da8:	56200000 	strtpl	r0, [r0], -r0
     dac:	8a000006 	bhi	dcc <_Min_Heap_Size+0x5cc>
     db0:	0100000d 	tsteq	r0, sp
     db4:	2c140305 	ldccs	3, cr0, [r4], {5}
     db8:	9a1b0800 	bls	6c2dc0 <_Min_Heap_Size+0x6c25c0>
     dbc:	f5080006 			; <UNDEFINED> instruction: 0xf5080006
     dc0:	da000010 	ble	e08 <_Min_Heap_Size+0x608>
     dc4:	1c00000d 	stcne	0, cr0, [r0], {13}
     dc8:	03055001 	movweq	r5, #20481	; 0x5001
     dcc:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}
     dd0:	0551011c 	ldrbeq	r0, [r1, #-284]	; 0xfffffee4
     dd4:	002c1403 	eoreq	r1, ip, r3, lsl #8
     dd8:	9e1d0008 	cdpls	0, 1, cr0, cr13, cr8, {0}
     ddc:	e4080006 	str	r0, [r8], #-6
     de0:	0000000d 	andeq	r0, r0, sp
     de4:	01070118 	tsteq	r7, r8, lsl r1
     de8:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
     dec:	06780106 	ldrbteq	r0, [r8], -r6, lsl #2
     df0:	06900800 	ldreq	r0, [r0], r0, lsl #16
     df4:	00a60800 	adceq	r0, r6, r0, lsl #16
     df8:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
     dfc:	2000000e 	andcs	r0, r0, lr
     e00:	00000656 	andeq	r0, r0, r6, asr r6
     e04:	00000d8a 	andeq	r0, r0, sl, lsl #27
     e08:	1c030501 	cfstr32ne	mvfx0, [r3], {1}
     e0c:	1b08002c 	blne	200ec4 <_Min_Heap_Size+0x2006c4>
     e10:	08000682 	stmdaeq	r0, {r1, r7, r9, sl}
     e14:	000010f5 	strdeq	r1, [r0], -r5
     e18:	00000e2f 	andeq	r0, r0, pc, lsr #28
     e1c:	0550011c 	ldrbeq	r0, [r0, #-284]	; 0xfffffee4
     e20:	002bec03 	eoreq	lr, fp, r3, lsl #24
     e24:	51011c08 	tstpl	r1, r8, lsl #24
     e28:	2c1c0305 	ldccs	3, cr0, [ip], {5}
     e2c:	1d000800 	stcne	8, cr0, [r0, #-0]
     e30:	08000686 	stmdaeq	r0, {r1, r2, r7, r9, sl}
     e34:	00000e39 	andeq	r0, r0, r9, lsr lr
     e38:	03011800 	movweq	r1, #6144	; 0x1800
     e3c:	01000005 	tsteq	r0, r5
     e40:	60010654 	andvs	r0, r1, r4, asr r6
     e44:	78080006 	stmdavc	r8, {r1, r2}
     e48:	c6080006 	strgt	r0, [r8], -r6
     e4c:	01000000 	mrseq	r0, (UNDEF: 0)
     e50:	00000e8e 	andeq	r0, r0, lr, lsl #29
     e54:	00065620 	andeq	r5, r6, r0, lsr #12
     e58:	000d8a00 	andeq	r8, sp, r0, lsl #20
     e5c:	03050100 	movweq	r0, #20736	; 0x5100
     e60:	08002c24 	stmdaeq	r0, {r2, r5, sl, fp, sp}
     e64:	00066a1b 	andeq	r6, r6, fp, lsl sl
     e68:	0010f508 	andseq	pc, r0, r8, lsl #10
     e6c:	000e8400 	andeq	r8, lr, r0, lsl #8
     e70:	50011c00 	andpl	r1, r1, r0, lsl #24
     e74:	2bec0305 	blcs	ffb01a90 <_estack+0xdfb00858>
     e78:	011c0800 	tsteq	ip, r0, lsl #16
     e7c:	24030551 	strcs	r0, [r3], #-1361	; 0xfffffaaf
     e80:	0008002c 	andeq	r0, r8, ip, lsr #32
     e84:	00066e1d 	andeq	r6, r6, sp, lsl lr
     e88:	000e8e08 	andeq	r8, lr, r8, lsl #28
     e8c:	01180000 	tsteq	r8, r0
     e90:	000007a8 	andeq	r0, r0, r8, lsr #15
     e94:	01064f01 	tsteq	r6, r1, lsl #30
     e98:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
     e9c:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
     ea0:	000000e6 	andeq	r0, r0, r6, ror #1
     ea4:	000ee301 	andeq	lr, lr, r1, lsl #6
     ea8:	06562000 	ldrbeq	r2, [r6], -r0
     eac:	0d8a0000 	stceq	0, cr0, [sl]
     eb0:	05010000 	streq	r0, [r1, #-0]
     eb4:	002c2c03 	eoreq	r2, ip, r3, lsl #24
     eb8:	06521b08 	ldrbeq	r1, [r2], -r8, lsl #22
     ebc:	10f50800 	rscsne	r0, r5, r0, lsl #16
     ec0:	0ed90000 	cdpeq	0, 13, cr0, cr9, cr0, {0}
     ec4:	011c0000 	tsteq	ip, r0
     ec8:	ec030550 	cfstr32	mvfx0, [r3], {80}	; 0x50
     ecc:	1c08002b 	stcne	0, cr0, [r8], {43}	; 0x2b
     ed0:	03055101 	movweq	r5, #20737	; 0x5101
     ed4:	08002c2c 	stmdaeq	r0, {r2, r3, r5, sl, fp, sp}
     ed8:	06561d00 	ldrbeq	r1, [r6], -r0, lsl #26
     edc:	0ee30800 	cdpeq	8, 14, cr0, cr3, cr0, {0}
     ee0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     ee4:	0007a201 	andeq	sl, r7, r1, lsl #4
     ee8:	06470100 	strbeq	r0, [r7], -r0, lsl #2
     eec:	00063001 	andeq	r3, r6, r1
     ef0:	00064808 	andeq	r4, r6, r8, lsl #16
     ef4:	00010608 	andeq	r0, r1, r8, lsl #12
     ef8:	0f380100 	svceq	0x00380100
     efc:	56200000 	strtpl	r0, [r0], -r0
     f00:	8a000006 	bhi	f20 <_Min_Heap_Size+0x720>
     f04:	0100000d 	tsteq	r0, sp
     f08:	2c340305 	ldccs	3, cr0, [r4], #-20	; 0xffffffec
     f0c:	3a1b0800 	bcc	6c2f14 <_Min_Heap_Size+0x6c2714>
     f10:	f5080006 			; <UNDEFINED> instruction: 0xf5080006
     f14:	2e000010 	mcrcs	0, 0, r0, cr0, cr0, {0}
     f18:	1c00000f 	stcne	0, cr0, [r0], {15}
     f1c:	03055001 	movweq	r5, #20481	; 0x5001
     f20:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}
     f24:	0551011c 	ldrbeq	r0, [r1, #-284]	; 0xfffffee4
     f28:	002c3403 	eoreq	r3, ip, r3, lsl #8
     f2c:	3e1d0008 	cdpcc	0, 1, cr0, cr13, cr8, {0}
     f30:	38080006 	stmdacc	r8, {r1, r2}
     f34:	0000000f 	andeq	r0, r0, pc
     f38:	024a0118 	subeq	r0, sl, #24, 2
     f3c:	37010000 	strcc	r0, [r1, -r0]
     f40:	05e40106 	strbeq	r0, [r4, #262]!	; 0x106
     f44:	06300800 	ldrteq	r0, [r0], -r0, lsl #16
     f48:	01260800 			; <UNDEFINED> instruction: 0x01260800
     f4c:	bf010000 	svclt	0x00010000
     f50:	2100000f 	tstcs	r0, pc
     f54:	000000c5 	andeq	r0, r0, r5, asr #1
     f58:	bf133801 	svclt	0x00133801
     f5c:	6400000f 	strvs	r0, [r0], #-15
     f60:	5e000001 	cdppl	0, 0, cr0, cr0, cr1, {0}
     f64:	19000001 	stmdbne	r0, {r0}
     f68:	0000218f 	andeq	r2, r0, pc, lsl #3
     f6c:	8c123901 			; <UNDEFINED> instruction: 0x8c123901
     f70:	02000000 	andeq	r0, r0, #0
     f74:	061b6c91 			; <UNDEFINED> instruction: 0x061b6c91
     f78:	f5080006 			; <UNDEFINED> instruction: 0xf5080006
     f7c:	90000010 	andls	r0, r0, r0, lsl r0
     f80:	1c00000f 	stcne	0, cr0, [r0], {15}
     f84:	75025001 	strvc	r5, [r2, #-1]
     f88:	51011c00 	tstpl	r1, r0, lsl #24
     f8c:	00007402 	andeq	r7, r0, r2, lsl #8
     f90:	0006141b 	andeq	r1, r6, fp, lsl r4
     f94:	0010f508 	andseq	pc, r0, r8, lsl #10
     f98:	000fa900 	andeq	sl, pc, r0, lsl #18
     f9c:	50011c00 	andpl	r1, r1, r0, lsl #24
     fa0:	1c007502 	cfstr32ne	mvfx7, [r0], {2}
     fa4:	34015101 	strcc	r5, [r1], #-257	; 0xfffffeff
     fa8:	06241f00 	strteq	r1, [r4], -r0, lsl #30
     fac:	10f50800 	rscsne	r0, r5, r0, lsl #16
     fb0:	011c0000 	tsteq	ip, r0
     fb4:	00750250 	rsbseq	r0, r5, r0, asr r2
     fb8:	0151011c 	cmpeq	r1, ip, lsl r1
     fbc:	13000033 	movwne	r0, #51	; 0x33
     fc0:	00008c04 	andeq	r8, r0, r4, lsl #24
     fc4:	60011800 	andvs	r1, r1, r0, lsl #16
     fc8:	01000004 	tsteq	r0, r4
     fcc:	0001062f 	andeq	r0, r1, pc, lsr #12
     fd0:	00000000 	andeq	r0, r0, r0
     fd4:	90000000 	andls	r0, r0, r0
     fd8:	01000001 	tsteq	r0, r1
     fdc:	0000101a 	andeq	r1, r0, sl, lsl r0
     fe0:	01006122 	tsteq	r0, r2, lsr #2
     fe4:	00850930 	addeq	r0, r5, r0, lsr r9
     fe8:	22000000 	andcs	r0, r0, #0
     fec:	30010062 	andcc	r0, r1, r2, rrx
     ff0:	00008510 	andeq	r8, r0, r0, lsl r5
     ff4:	63220000 			; <UNDEFINED> instruction: 0x63220000
     ff8:	17300100 	ldrne	r0, [r0, -r0, lsl #2]!
     ffc:	00000085 	andeq	r0, r0, r5, lsl #1
    1000:	00001f00 	andeq	r1, r0, r0, lsl #30
    1004:	10f50000 	rscsne	r0, r5, r0
    1008:	011c0000 	tsteq	ip, r0
    100c:	00030550 	andeq	r0, r3, r0, asr r5
    1010:	1c000000 	stcne	0, cr0, [r0], {-0}
    1014:	30015101 	andcc	r5, r1, r1, lsl #2
    1018:	011e0000 	tsteq	lr, r0
    101c:	00000453 	andeq	r0, r0, r3, asr r4
    1020:	01051901 	tsteq	r5, r1, lsl #18
    1024:	00000085 	andeq	r0, r0, r5, lsl #1
    1028:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
    102c:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
    1030:	000001b0 			; <UNDEFINED> instruction: 0x000001b0
    1034:	00106901 	andseq	r6, r0, r1, lsl #18
    1038:	68632300 	stmdavs	r3!, {r8, r9, sp}^
    103c:	16190100 	ldrne	r0, [r9], -r0, lsl #2
    1040:	00000085 	andeq	r0, r0, r5, lsl #1
    1044:	000001ec 	andeq	r0, r0, ip, ror #3
    1048:	000001e8 	andeq	r0, r0, r8, ror #3
    104c:	0005d81f 	andeq	sp, r5, pc, lsl r8
    1050:	00110308 	andseq	r0, r1, r8, lsl #6
    1054:	51011c00 	tstpl	r1, r0, lsl #24
    1058:	1c749102 	ldfnep	f1, [r4], #-8
    105c:	31015201 	tstcc	r1, r1, lsl #4
    1060:	0353011c 	cmpeq	r3, #28, 2
    1064:	00ffff0a 	rscseq	pc, pc, sl, lsl #30
    1068:	01012400 	tsteq	r1, r0, lsl #8
    106c:	000000a7 	andeq	r0, r0, r7, lsr #1
    1070:	0000009d 	muleq	r0, sp, r0
    1074:	01250010 			; <UNDEFINED> instruction: 0x01250010
    1078:	0006d901 	andeq	sp, r6, r1, lsl #18
    107c:	0006d900 	andeq	sp, r6, r0, lsl #18
    1080:	04db0800 	ldrbeq	r0, [fp], #2048	; 0x800
    1084:	01012513 	tsteq	r1, r3, lsl r5
    1088:	000007f5 	strdeq	r0, [r0], -r5
    108c:	000007f5 	strdeq	r0, [r0], -r5
    1090:	1304dc08 	movwne	sp, #19464	; 0x4c08
    1094:	15010126 	strne	r0, [r1, #-294]	; 0xfffffeda
    1098:	15000004 	strne	r0, [r0, #-4]
    109c:	0c000004 	stceq	0, cr0, [r0], {4}
    10a0:	0126063c 			; <UNDEFINED> instruction: 0x0126063c
    10a4:	00043701 	andeq	r3, r4, r1, lsl #14
    10a8:	00043700 	andeq	r3, r4, r0, lsl #14
    10ac:	13db0d00 	bicsne	r0, fp, #0, 26
    10b0:	2a010126 	bcs	41550 <_Min_Heap_Size+0x40d50>
    10b4:	2a000009 	bcs	10e0 <_Min_Heap_Size+0x8e0>
    10b8:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    10bc:	01260627 			; <UNDEFINED> instruction: 0x01260627
    10c0:	00000701 	andeq	r0, r0, r1, lsl #14
    10c4:	00000700 	andeq	r0, r0, r0, lsl #14
    10c8:	062a0b00 	strteq	r0, [sl], -r0, lsl #22
    10cc:	70010126 	andvc	r0, r1, r6, lsr #2
    10d0:	70000000 	andvc	r0, r0, r0
    10d4:	0f000000 	svceq	0x00000000
    10d8:	01240646 			; <UNDEFINED> instruction: 0x01240646
    10dc:	00022801 	andeq	r2, r2, r1, lsl #16
    10e0:	00021e00 	andeq	r1, r2, r0, lsl #28
    10e4:	26001000 	strcs	r1, [r0], -r0
    10e8:	06eb0101 	strbteq	r0, [fp], r1, lsl #2
    10ec:	06eb0000 	strbteq	r0, [fp], r0
    10f0:	e90d0000 	stmdb	sp, {}	; <UNPREDICTABLE>
    10f4:	01012606 	tsteq	r1, r6, lsl #12
	...
    1100:	2505c811 	strcs	ip, [r5, #-2065]	; 0xfffff7ef
    1104:	01190101 	tsteq	r9, r1, lsl #2
    1108:	01190000 	tsteq	r9, r0
    110c:	e90a0000 	stmdb	sl, {}	; <UNPREDICTABLE>
    1110:	81001302 	tsthi	r0, r2, lsl #6
    1114:	02000001 	andeq	r0, r0, #1
    1118:	00023100 	andeq	r3, r2, r0, lsl #2
    111c:	88010400 	stmdahi	r1, {sl}
    1120:	0c000005 	stceq	0, cr0, [r0], {5}
    1124:	0000096d 	andeq	r0, r0, sp, ror #18
    1128:	0000086d 	andeq	r0, r0, sp, ror #16
    112c:	00000060 	andeq	r0, r0, r0, rrx
	...
    1138:	0000050e 	andeq	r0, r0, lr, lsl #10
    113c:	69050402 	stmdbvs	r5, {r1, sl}
    1140:	0300746e 	movweq	r7, #1134	; 0x46e
    1144:	00000963 	andeq	r0, r0, r3, ror #18
    1148:	291a8f02 	ldmdbcs	sl, {r1, r8, r9, sl, fp, pc}
    114c:	04000000 	streq	r0, [r0], #-0
    1150:	00b80704 	adcseq	r0, r8, r4, lsl #14
    1154:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    1158:	0002e705 	andeq	lr, r2, r5, lsl #14
    115c:	04080400 	streq	r0, [r8], #-1024	; 0xfffffc00
    1160:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
    1164:	76060104 	strvc	r0, [r6], -r4, lsl #2
    1168:	03000005 	movweq	r0, #5
    116c:	00000066 	andeq	r0, r0, r6, rrx
    1170:	64182b03 	ldrvs	r2, [r8], #-2819	; 0xfffff4fd
    1174:	04000000 	streq	r0, [r0], #-0
    1178:	05740801 	ldrbeq	r0, [r4, #-2049]!	; 0xfffff7ff
    117c:	02040000 	andeq	r0, r4, #0
    1180:	0003fd05 	andeq	pc, r3, r5, lsl #26
    1184:	07020400 	streq	r0, [r2, -r0, lsl #8]
    1188:	0000078f 	andeq	r0, r0, pc, lsl #15
    118c:	ec050404 	cfstrs	mvf0, [r5], {4}
    1190:	03000002 	movweq	r0, #2
    1194:	000002c2 	andeq	r0, r0, r2, asr #5
    1198:	8c194f03 	ldchi	15, cr4, [r9], {3}
    119c:	04000000 	streq	r0, [r0], #-0
    11a0:	00b30704 	adcseq	r0, r3, r4, lsl #14
    11a4:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    11a8:	0000ae07 	andeq	sl, r0, r7, lsl #28
    11ac:	04040500 	streq	r0, [r4], #-1280	; 0xfffffb00
    11b0:	057d0801 	ldrbeq	r0, [sp, #-2049]!	; 0xfffff7ff
    11b4:	68030000 	stmdavs	r3, {}	; <UNPREDICTABLE>
    11b8:	04000000 	streq	r0, [r0], #-0
    11bc:	00581318 	subseq	r1, r8, r8, lsl r3
    11c0:	a3060000 	movwge	r0, #24576	; 0x6000
    11c4:	03000000 	movweq	r0, #0
    11c8:	000002c4 	andeq	r0, r0, r4, asr #5
    11cc:	80143004 	andshi	r3, r4, r4
    11d0:	06000000 	streq	r0, [r0], -r0
    11d4:	000000b4 	strheq	r0, [r0], -r4
    11d8:	00099907 	andeq	r9, r9, r7, lsl #18
    11dc:	111e0100 	tstne	lr, r0, lsl #2
    11e0:	000000d7 	ldrdeq	r0, [r0], -r7
    11e4:	008c0305 	addeq	r0, ip, r5, lsl #6
    11e8:	04082000 	streq	r2, [r8], #-0
    11ec:	000000a3 	andeq	r0, r0, r3, lsr #1
    11f0:	09b10109 	ldmibeq	r1!, {r0, r3, r8}
    11f4:	35010000 	strcc	r0, [r1, #-0]
    11f8:	009a0107 	addseq	r0, sl, r7, lsl #2
    11fc:	06ec0000 	strbteq	r0, [ip], r0
    1200:	07340800 	ldreq	r0, [r4, -r0, lsl #16]!
    1204:	020b0800 	andeq	r0, fp, #0, 16
    1208:	70010000 	andvc	r0, r1, r0
    120c:	0a000001 	beq	1218 <_Min_Heap_Size+0xa18>
    1210:	00000994 	muleq	r0, r4, r9
    1214:	30173501 	andscc	r3, r7, r1, lsl #10
    1218:	35000000 	strcc	r0, [r0, #-0]
    121c:	2b000002 	blcs	122c <_Min_Heap_Size+0xa2c>
    1220:	0b000002 	bleq	1230 <_Min_Heap_Size+0xa30>
    1224:	000009a4 	andeq	r0, r0, r4, lsr #19
    1228:	a3123701 	tstge	r2, #262144	; 0x40000
    122c:	01000000 	mrseq	r0, (UNDEF: 0)
    1230:	09440b01 	stmdbeq	r4, {r0, r8, r9, fp}^
    1234:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
    1238:	0000a312 	andeq	sl, r0, r2, lsl r3
    123c:	0b010100 	bleq	41644 <_Min_Heap_Size+0x40e44>
    1240:	00000984 	andeq	r0, r0, r4, lsl #19
    1244:	b4133901 	ldrlt	r3, [r3], #-2305	; 0xfffff6ff
    1248:	01000000 	mrseq	r0, (UNDEF: 0)
    124c:	09b70c01 	ldmibeq	r7!, {r0, sl, fp}
    1250:	3a010000 	bcc	41258 <_Min_Heap_Size+0x40a58>
    1254:	0000c012 	andeq	ip, r0, r2, lsl r0
    1258:	095a0c00 	ldmdbeq	sl, {sl, fp}^
    125c:	3b010000 	blcc	41264 <_Min_Heap_Size+0x40a64>
    1260:	00017012 	andeq	r7, r1, r2, lsl r0
    1264:	094c0d00 	stmdbeq	ip, {r8, sl, fp}^
    1268:	3c010000 	stccc	0, cr0, [r1], {-0}
    126c:	0000d70c 	andeq	sp, r0, ip, lsl #14
    1270:	00027c00 	andeq	r7, r2, r0, lsl #24
    1274:	00027a00 	andeq	r7, r2, r0, lsl #20
    1278:	07180e00 	ldreq	r0, [r8, -r0, lsl #28]
    127c:	01760800 	cmneq	r6, r0, lsl #16
    1280:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1284:	0000af04 	andeq	sl, r0, r4, lsl #30
    1288:	01010f00 	tsteq	r1, r0, lsl #30
    128c:	000009a9 	andeq	r0, r0, r9, lsr #19
    1290:	000009a9 	andeq	r0, r0, r9, lsr #19
    1294:	000d0f05 	andeq	r0, sp, r5, lsl #30
    1298:	00000831 	andeq	r0, r0, r1, lsr r8
    129c:	031b0002 	tsteq	fp, #2
    12a0:	01040000 	mrseq	r0, (UNDEF: 4)
    12a4:	00000588 	andeq	r0, r0, r8, lsl #11
    12a8:	000a830c 	andeq	r8, sl, ip, lsl #6
    12ac:	00086d00 	andeq	r6, r8, r0, lsl #26
    12b0:	00007000 	andeq	r7, r0, r0
	...
    12bc:	0006f600 	andeq	pc, r6, r0, lsl #12
    12c0:	06010200 	streq	r0, [r1], -r0, lsl #4
    12c4:	00000576 	andeq	r0, r0, r6, ror r5
    12c8:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    12cc:	02000005 	andeq	r0, r0, #5
    12d0:	03fd0502 	mvnseq	r0, #8388608	; 0x800000
    12d4:	02020000 	andeq	r0, r2, #0
    12d8:	00078f07 	andeq	r8, r7, r7, lsl #30
    12dc:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    12e0:	000002ec 	andeq	r0, r0, ip, ror #5
    12e4:	0002c203 	andeq	ip, r2, r3, lsl #4
    12e8:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    12ec:	00000058 	andeq	r0, r0, r8, asr r0
    12f0:	b3070402 	movwlt	r0, #29698	; 0x7402
    12f4:	02000000 	andeq	r0, r0, #0
    12f8:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
    12fc:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1300:	0000ae07 	andeq	sl, r0, r7, lsl #28
    1304:	0a3d0300 	beq	f41f0c <_Min_Heap_Size+0xf4170c>
    1308:	c8020000 	stmdagt	r2, {}	; <UNPREDICTABLE>
    130c:	00005f1e 	andeq	r5, r0, lr, lsl pc
    1310:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    1314:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1318:	b8070402 	stmdalt	r7, {r1, sl}
    131c:	02000000 	andeq	r0, r0, #0
    1320:	06bf0408 	ldrteq	r0, [pc], r8, lsl #8
    1324:	b5030000 	strlt	r0, [r3, #-0]
    1328:	0300000b 	movweq	r0, #11
    132c:	00450e1e 	subeq	r0, r5, lr, lsl lr
    1330:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    1334:	0300000a 	movweq	r0, #10
    1338:	00450e22 	subeq	r0, r5, r2, lsr #28
    133c:	7e030000 	cdpvc	0, 0, cr0, cr3, cr0, {0}
    1340:	0300000b 	movweq	r0, #11
    1344:	00450e2e 	subeq	r0, r5, lr, lsr #28
    1348:	75030000 	strvc	r0, [r3, #-0]
    134c:	0300000b 	movweq	r0, #11
    1350:	00370f38 	eorseq	r0, r7, r8, lsr pc
    1354:	93030000 	movwls	r0, #12288	; 0x3000
    1358:	0300000b 	movweq	r0, #11
    135c:	003e183c 	eorseq	r1, lr, ip, lsr r8
    1360:	c0030000 	andgt	r0, r3, r0
    1364:	0300000b 	movweq	r0, #11
    1368:	003e183f 	eorseq	r1, lr, pc, lsr r8
    136c:	34030000 	strcc	r0, [r3], #-0
    1370:	0300000b 	movweq	r0, #11
    1374:	003e184b 	eorseq	r1, lr, fp, asr #16
    1378:	7a030000 	bvc	c1380 <_Min_Heap_Size+0xc0b80>
    137c:	0300000a 	movweq	r0, #10
    1380:	004c145a 	subeq	r1, ip, sl, asr r4
    1384:	7d030000 	stcvc	0, cr0, [r3, #-0]
    1388:	0300000b 	movweq	r0, #11
    138c:	00a61066 	adceq	r1, r6, r6, rrx
    1390:	ae030000 	cdpge	0, 0, cr0, cr3, cr0, {0}
    1394:	0300000a 	movweq	r0, #10
    1398:	003e18d1 	ldrsbteq	r1, [lr], -r1
    139c:	04050000 	streq	r0, [r5], #-0
    13a0:	0000010c 	andeq	r0, r0, ip, lsl #2
    13a4:	7d080102 	stfvcs	f0, [r8, #-8]
    13a8:	03000005 	movweq	r0, #5
    13ac:	00000a36 	andeq	r0, r0, r6, lsr sl
    13b0:	6d122a04 	vldrvs	s4, [r2, #-16]
    13b4:	06000000 	streq	r0, [r0], -r0
    13b8:	00000b8a 	andeq	r0, r0, sl, lsl #23
    13bc:	082f0510 	stmdaeq	pc!, {r4, r8, sl}	; <UNPREDICTABLE>
    13c0:	0000014b 	andeq	r0, r0, fp, asr #2
    13c4:	0009f507 	andeq	pc, r9, r7, lsl #10
    13c8:	09300500 	ldmdbeq	r0!, {r8, sl}
    13cc:	00000113 	andeq	r0, r0, r3, lsl r1
    13d0:	07002302 	streq	r2, [r0, -r2, lsl #6]
    13d4:	00000add 	ldrdeq	r0, [r0], -sp
    13d8:	45073105 	strmi	r3, [r7, #-261]	; 0xfffffefb
    13dc:	02000000 	andeq	r0, r0, #0
    13e0:	03000823 	movweq	r0, #2083	; 0x823
    13e4:	00000bb7 			; <UNDEFINED> instruction: 0x00000bb7
    13e8:	8e146106 	mufhis	f6, f4, f6
    13ec:	03000000 	movweq	r0, #0
    13f0:	00000afb 	strdeq	r0, [r0], -fp
    13f4:	9a156606 	bls	55ac14 <_Min_Heap_Size+0x55a414>
    13f8:	03000000 	movweq	r0, #0
    13fc:	000009cb 	andeq	r0, r0, fp, asr #19
    1400:	58136b06 	ldmdapl	r3, {r1, r2, r8, r9, fp, sp, lr}
    1404:	03000000 	movweq	r0, #0
    1408:	00000b36 	andeq	r0, r0, r6, lsr fp
    140c:	d6128b06 	ldrle	r8, [r2], -r6, lsl #22
    1410:	03000000 	movweq	r0, #0
    1414:	00000b7f 	andeq	r0, r0, pc, ror fp
    1418:	ee129d06 	cdp	13, 1, cr9, cr2, cr6, {0}
    141c:	03000000 	movweq	r0, #0
    1420:	00000b77 	andeq	r0, r0, r7, ror fp
    1424:	b212a106 	andslt	sl, r2, #-2147483647	; 0x80000001
    1428:	03000000 	movweq	r0, #0
    142c:	00000b95 	muleq	r0, r5, fp
    1430:	be12a506 	cfmul32lt	mvfx10, mvfx2, mvfx6
    1434:	03000000 	movweq	r0, #0
    1438:	00000bc2 	andeq	r0, r0, r2, asr #23
    143c:	ca12a906 	bgt	4ab85c <_Min_Heap_Size+0x4ab05c>
    1440:	03000000 	movweq	r0, #0
    1444:	00000a7c 	andeq	r0, r0, ip, ror sl
    1448:	e212bd06 	ands	fp, r2, #384	; 0x180
    144c:	03000000 	movweq	r0, #0
    1450:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
    1454:	fa13c206 	blx	4f1c74 <_Min_Heap_Size+0x4f1474>
    1458:	06000000 	streq	r0, [r0], -r0
    145c:	000009fd 	strdeq	r0, [r0], -sp
    1460:	081b0758 	ldmdaeq	fp, {r3, r4, r6, r8, r9, sl}
    1464:	000002a3 	andeq	r0, r0, r3, lsr #5
    1468:	000a1d07 	andeq	r1, sl, r7, lsl #26
    146c:	0a1d0700 	beq	743074 <_Min_Heap_Size+0x742874>
    1470:	00000187 	andeq	r0, r0, r7, lsl #3
    1474:	07002302 	streq	r2, [r0, -r2, lsl #6]
    1478:	00000ac3 	andeq	r0, r0, r3, asr #21
    147c:	6f0a1e07 	svcvs	0x000a1e07
    1480:	02000001 	andeq	r0, r0, #1
    1484:	9b070223 	blls	1c1d18 <_Min_Heap_Size+0x1c1518>
    1488:	0700000b 	streq	r0, [r0, -fp]
    148c:	01ab0a1f 			; <UNDEFINED> instruction: 0x01ab0a1f
    1490:	23020000 	movwcs	r0, #8192	; 0x2000
    1494:	0ae50704 	beq	ff9430ac <_estack+0xdf941e74>
    1498:	20070000 	andcs	r0, r7, r0
    149c:	0001b70b 	andeq	fp, r1, fp, lsl #14
    14a0:	08230200 	stmdaeq	r3!, {r9}
    14a4:	000b4607 	andeq	r4, fp, r7, lsl #12
    14a8:	0a210700 	beq	8430b0 <_Min_Heap_Size+0x8428b0>
    14ac:	00000193 	muleq	r0, r3, r1
    14b0:	070a2302 	streq	r2, [sl, -r2, lsl #6]
    14b4:	00000a73 	andeq	r0, r0, r3, ror sl
    14b8:	9f0a2207 	svcls	0x000a2207
    14bc:	02000001 	andeq	r0, r0, #1
    14c0:	c3070c23 	movwgt	r0, #31779	; 0x7c23
    14c4:	07000009 	streq	r0, [r0, -r9]
    14c8:	01870a23 	orreq	r0, r7, r3, lsr #20
    14cc:	23020000 	movwcs	r0, #8192	; 0x2000
    14d0:	0b4d070e 	bleq	1343110 <_Min_Heap_Size+0x1342910>
    14d4:	24070000 	strcs	r0, [r7], #-0
    14d8:	00017b0a 	andeq	r7, r1, sl, lsl #22
    14dc:	10230200 	eorne	r0, r3, r0, lsl #4
    14e0:	000b0507 	andeq	r0, fp, r7, lsl #10
    14e4:	132a0700 			; <UNDEFINED> instruction: 0x132a0700
    14e8:	0000011f 	andeq	r0, r0, pc, lsl r1
    14ec:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    14f0:	00000b2c 	andeq	r0, r0, ip, lsr #22
    14f4:	1f132b07 	svcne	0x00132b07
    14f8:	02000001 	andeq	r0, r0, #1
    14fc:	02072823 	andeq	r2, r7, #2293760	; 0x230000
    1500:	0700000a 	streq	r0, [r0, -sl]
    1504:	011f132c 	tsteq	pc, ip, lsr #6
    1508:	23020000 	movwcs	r0, #8192	; 0x2000
    150c:	0a4d0738 	beq	13431f4 <_Min_Heap_Size+0x13429f4>
    1510:	2d070000 	stccs	0, cr0, [r7, #-0]
    1514:	00015711 	andeq	r5, r1, r1, lsl r7
    1518:	48230200 	stmdami	r3!, {r9}
    151c:	000b1a07 	andeq	r1, fp, r7, lsl #20
    1520:	0c2e0700 	stceq	7, cr0, [lr], #-0
    1524:	0000014b 	andeq	r0, r0, fp, asr #2
    1528:	074c2302 	strbeq	r2, [ip, -r2, lsl #6]
    152c:	00000b55 	andeq	r0, r0, r5, asr fp
    1530:	a3093007 	movwge	r3, #36871	; 0x9007
    1534:	02000002 	andeq	r0, r0, #2
    1538:	08005023 	stmdaeq	r0, {r0, r1, r5, ip, lr}
    153c:	00000045 	andeq	r0, r0, r5, asr #32
    1540:	000002b3 			; <UNDEFINED> instruction: 0x000002b3
    1544:	00008009 	andeq	r8, r0, r9
    1548:	0a000100 	beq	1950 <_Min_Heap_Size+0x1150>
    154c:	00736d74 	rsbseq	r6, r3, r4, ror sp
    1550:	08110810 	ldmdaeq	r1, {r4, fp}
    1554:	000002fd 	strdeq	r0, [r0], -sp
    1558:	000ba307 	andeq	sl, fp, r7, lsl #6
    155c:	0a120800 	beq	483564 <_Min_Heap_Size+0x482d64>
    1560:	00000163 	andeq	r0, r0, r3, ror #2
    1564:	07002302 	streq	r2, [r0, -r2, lsl #6]
    1568:	00000b3c 	andeq	r0, r0, ip, lsr fp
    156c:	630a1308 	movwvs	r1, #41736	; 0xa308
    1570:	02000001 	andeq	r0, r0, #1
    1574:	e2070423 	and	r0, r7, #587202560	; 0x23000000
    1578:	08000009 	stmdaeq	r0, {r0, r3}
    157c:	01630a14 	cmneq	r3, r4, lsl sl
    1580:	23020000 	movwcs	r0, #8192	; 0x2000
    1584:	0a9c0708 	beq	fe7031ac <_estack+0xde701f74>
    1588:	15080000 	strne	r0, [r8, #-0]
    158c:	0001630a 	andeq	r6, r1, sl, lsl #6
    1590:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1594:	01060800 	tsteq	r6, r0, lsl #16
    1598:	030d0000 	movweq	r0, #53248	; 0xd000
    159c:	80090000 	andhi	r0, r9, r0
    15a0:	00000000 	andeq	r0, r0, r0
    15a4:	0a0a0b00 	beq	2841ac <_Min_Heap_Size+0x2839ac>
    15a8:	27010000 	strcs	r0, [r1, -r0]
    15ac:	0002fd07 	andeq	pc, r2, r7, lsl #26
    15b0:	03050100 	movweq	r0, #20736	; 0x5100
    15b4:	00000000 	andeq	r0, r0, r0
    15b8:	0009d30b 	andeq	sp, r9, fp, lsl #6
    15bc:	08280100 	stmdaeq	r8!, {r8}
    15c0:	00000333 	andeq	r0, r0, r3, lsr r3
    15c4:	00030501 	andeq	r0, r3, r1, lsl #10
    15c8:	05000000 	streq	r0, [r0, #-0]
    15cc:	00010604 	andeq	r0, r1, r4, lsl #12
    15d0:	ed010c00 	stc	12, cr0, [r1, #-0]
    15d4:	01000009 	tsteq	r0, r9
    15d8:	790105a9 	stmdbvc	r1, {r0, r3, r5, r7, r8, sl}
	...
    15e4:	8f000000 	svchi	0x00000000
    15e8:	01000002 	tsteq	r0, r2
    15ec:	0000039e 	muleq	r0, lr, r3
    15f0:	000ab80d 	andeq	fp, sl, sp, lsl #16
    15f4:	13a90100 			; <UNDEFINED> instruction: 0x13a90100
    15f8:	00000106 	andeq	r0, r0, r6, lsl #2
    15fc:	000002b3 			; <UNDEFINED> instruction: 0x000002b3
    1600:	000002af 	andeq	r0, r0, pc, lsr #5
    1604:	000af40d 	andeq	pc, sl, sp, lsl #8
    1608:	20a90100 	adccs	r0, r9, r0, lsl #2
    160c:	00000333 	andeq	r0, r0, r3, lsr r3
    1610:	000002d8 	ldrdeq	r0, [r0], -r8
    1614:	000002d4 	ldrdeq	r0, [r0], -r4
    1618:	766e650e 	strbtvc	r6, [lr], -lr, lsl #10
    161c:	2da90100 	stfcss	f0, [r9]
    1620:	00000333 	andeq	r0, r0, r3, lsr r3
    1624:	000002fd 	strdeq	r0, [r0], -sp
    1628:	000002f9 	strdeq	r0, [r0], -r9
    162c:	0000000f 	andeq	r0, r0, pc
    1630:	00080a00 	andeq	r0, r8, r0, lsl #20
    1634:	010c0000 	mrseq	r0, (UNDEF: 12)
    1638:	00000b67 	andeq	r0, r0, r7, ror #22
    163c:	0105a301 	tsteq	r5, r1, lsl #6
    1640:	00000079 	andeq	r0, r0, r9, ror r0
	...
    164c:	0000031e 	andeq	r0, r0, lr, lsl r3
    1650:	0003c701 	andeq	ip, r3, r1, lsl #14
    1654:	00000f00 	andeq	r0, r0, r0, lsl #30
    1658:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
    165c:	0c000000 	stceq	0, cr0, [r0], {-0}
    1660:	000b0d01 	andeq	r0, fp, r1, lsl #26
    1664:	059b0100 	ldreq	r0, [fp, #256]	; 0x100
    1668:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    1674:	00033e00 	andeq	r3, r3, r0, lsl #28
    1678:	04180100 	ldreq	r0, [r8], #-256	; 0xffffff00
    167c:	6f0e0000 	svcvs	0x000e0000
    1680:	0100646c 	tsteq	r0, ip, ror #8
    1684:	0106119b 			; <UNDEFINED> instruction: 0x0106119b
    1688:	03620000 	cmneq	r2, #0
    168c:	035e0000 	cmpeq	lr, #0
    1690:	6e0e0000 	cdpvs	0, 0, cr0, cr14, cr0, {0}
    1694:	01007765 	tsteq	r0, r5, ror #14
    1698:	01061c9b 			; <UNDEFINED> instruction: 0x01061c9b
    169c:	03870000 	orreq	r0, r7, #0
    16a0:	03830000 	orreq	r0, r3, #0
    16a4:	000f0000 	andeq	r0, pc, r0
    16a8:	0a000000 	beq	16b0 <_Min_Heap_Size+0xeb0>
    16ac:	00000008 	andeq	r0, r0, r8
    16b0:	09fc0110 	ldmibeq	ip!, {r4, r8}^
    16b4:	94010000 	strls	r0, [r1], #-0
    16b8:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    16c4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    16c8:	04580100 	ldrbeq	r0, [r8], #-256	; 0xffffff00
    16cc:	2b0d0000 	blcs	3416d4 <_Min_Heap_Size+0x340ed4>
    16d0:	0100000a 	tsteq	r0, sl
    16d4:	01061194 			; <UNDEFINED> instruction: 0x01061194
    16d8:	03ac0000 			; <UNDEFINED> instruction: 0x03ac0000
    16dc:	03a80000 			; <UNDEFINED> instruction: 0x03a80000
    16e0:	73110000 	tstvc	r1, #0
    16e4:	94010074 	strls	r0, [r1], #-116	; 0xffffff8c
    16e8:	00045824 	andeq	r5, r4, r4, lsr #16
    16ec:	00510100 	subseq	r0, r1, r0, lsl #2
    16f0:	01c30405 	biceq	r0, r3, r5, lsl #8
    16f4:	01100000 	tsteq	r0, r0
    16f8:	00000aa7 	andeq	r0, r0, r7, lsr #21
    16fc:	01058e01 	tsteq	r5, r1, lsl #28
    1700:	00000079 	andeq	r0, r0, r9, ror r0
	...
    170c:	01007d02 	tsteq	r0, r2, lsl #26
    1710:	00000491 	muleq	r0, r1, r4
    1714:	6675620e 	ldrbtvs	r6, [r5], -lr, lsl #4
    1718:	188e0100 	stmne	lr, {r8}
    171c:	00000491 	muleq	r0, r1, r4
    1720:	000003d1 	ldrdeq	r0, [r0], -r1
    1724:	000003cd 	andeq	r0, r0, sp, asr #7
    1728:	b3040500 	movwlt	r0, #17664	; 0x4500
    172c:	0c000002 	stceq	0, cr0, [r0], {2}
    1730:	000bad01 	andeq	sl, fp, r1, lsl #26
    1734:	05870100 	streq	r0, [r7, #256]	; 0x100
    1738:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    1744:	0003f200 	andeq	pc, r3, r0, lsl #4
    1748:	04d40100 	ldrbeq	r0, [r4], #256	; 0x100
    174c:	b80d0000 	stmdalt	sp, {}	; <UNPREDICTABLE>
    1750:	0100000a 	tsteq	r0, sl
    1754:	01061387 	smlabbeq	r6, r7, r3, r1
    1758:	04160000 	ldreq	r0, [r6], #-0
    175c:	04120000 	ldreq	r0, [r2], #-0
    1760:	000f0000 	andeq	r0, pc, r0
    1764:	0a000000 	beq	176c <_Min_Heap_Size+0xf6c>
    1768:	00000008 	andeq	r0, r0, r8
    176c:	0abd010c 	beq	fef41ba4 <_estack+0xdef4096c>
    1770:	80010000 	andhi	r0, r1, r0
    1774:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
    1780:	04370000 	ldrteq	r0, [r7], #-0
    1784:	11010000 	mrsne	r0, (UNDEF: 1)
    1788:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    178c:	00001c17 	andeq	r1, r0, r7, lsl ip
    1790:	11108001 	tstne	r0, r1
    1794:	5b000005 	blpl	17b0 <_Min_Heap_Size+0xfb0>
    1798:	57000004 	strpl	r0, [r0, -r4]
    179c:	0f000004 	svceq	0x00000004
    17a0:	00000000 	andeq	r0, r0, r0
    17a4:	0000080a 	andeq	r0, r0, sl, lsl #16
    17a8:	79040500 	stmdbvc	r4, {r8, sl}
    17ac:	0c000000 	stceq	0, cr0, [r0], {-0}
    17b0:	000aee01 	andeq	lr, sl, r1, lsl #28
    17b4:	05780100 	ldrbeq	r0, [r8, #-256]!	; 0xffffff00
    17b8:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    17c4:	00047c00 	andeq	r7, r4, r0, lsl #24
    17c8:	055b0100 	ldrbeq	r0, [fp, #-256]	; 0xffffff00
    17cc:	850d0000 	strhi	r0, [sp, #-0]
    17d0:	0100000b 	tsteq	r0, fp
    17d4:	01061178 	tsteq	r6, r8, ror r1
    17d8:	04ac0000 	strteq	r0, [ip], #0
    17dc:	04a80000 	strteq	r0, [r8], #0
    17e0:	71120000 	tstvc	r2, r0
    17e4:	01000015 	tsteq	r0, r5, lsl r0
    17e8:	00791b78 	rsbseq	r1, r9, r8, ror fp
    17ec:	91020000 	mrsls	r0, (UNDEF: 2)
    17f0:	10001374 	andne	r1, r0, r4, ror r3
    17f4:	0009db01 	andeq	sp, r9, r1, lsl #22
    17f8:	05700100 	ldrbeq	r0, [r0, #-256]!	; 0xffffff00
    17fc:	00007901 	andeq	r7, r0, r1, lsl #18
    1800:	00078400 	andeq	r8, r7, r0, lsl #8
    1804:	00078808 	andeq	r8, r7, r8, lsl #16
    1808:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    180c:	0005aa01 	andeq	sl, r5, r1, lsl #20
    1810:	0a2b0d00 	beq	ac4c18 <_Min_Heap_Size+0xac4418>
    1814:	70010000 	andvc	r0, r1, r0
    1818:	00007910 	andeq	r7, r0, r0, lsl r9
    181c:	0004d100 	andeq	sp, r4, r0, lsl #2
    1820:	0004cd00 	andeq	ip, r4, r0, lsl #26
    1824:	74701100 	ldrbtvc	r1, [r0], #-256	; 0xffffff00
    1828:	70010072 	andvc	r0, r1, r2, ror r0
    182c:	0000791a 	andeq	r7, r0, sl, lsl r9
    1830:	11510100 	cmpne	r1, r0, lsl #2
    1834:	00726964 	rsbseq	r6, r2, r4, ror #18
    1838:	79237001 	stmdbvc	r3!, {r0, ip, sp, lr}
    183c:	01000000 	mrseq	r0, (UNDEF: 0)
    1840:	01100052 	tsteq	r0, r2, asr r0
    1844:	00000b24 	andeq	r0, r0, r4, lsr #22
    1848:	01056a01 	tsteq	r5, r1, lsl #20
    184c:	00000079 	andeq	r0, r0, r9, ror r0
    1850:	08000780 	stmdaeq	r0, {r7, r8, r9, sl}
    1854:	08000784 	stmdaeq	r0, {r2, r7, r8, r9, sl}
    1858:	01007d02 	tsteq	r0, r2, lsl #26
    185c:	000005dd 	ldrdeq	r0, [r0], -sp
    1860:	000a2b0d 	andeq	r2, sl, sp, lsl #22
    1864:	116a0100 	cmnne	sl, r0, lsl #2
    1868:	00000079 	andeq	r0, r0, r9, ror r0
    186c:	000004f6 	strdeq	r0, [r0], -r6
    1870:	000004f2 	strdeq	r0, [r0], -r2
    1874:	24011000 	strcs	r1, [r1], #-0
    1878:	0100000a 	tsteq	r0, sl
    187c:	79010563 	stmdbvc	r1, {r0, r1, r5, r6, r8, sl}
    1880:	76000000 	strvc	r0, [r0], -r0
    1884:	80080007 	andhi	r0, r8, r7
    1888:	02080007 	andeq	r0, r8, #7
    188c:	1d01007d 	stcne	0, cr0, [r1, #-500]	; 0xfffffe0c
    1890:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    1894:	00000a2b 	andeq	r0, r0, fp, lsr #20
    1898:	79106301 	ldmdbvc	r0, {r0, r8, r9, sp, lr}
    189c:	1b000000 	blne	18a4 <_Min_Heap_Size+0x10a4>
    18a0:	17000005 	strne	r0, [r0, -r5]
    18a4:	11000005 	tstne	r0, r5
    18a8:	01007473 	tsteq	r0, r3, ror r4
    18ac:	04582363 	ldrbeq	r2, [r8], #-867	; 0xfffffc9d
    18b0:	51010000 	mrspl	r0, (UNDEF: 1)
    18b4:	13011000 	movwne	r1, #4096	; 0x1000
    18b8:	0100000b 	tsteq	r0, fp
    18bc:	7901055c 	stmdbvc	r1, {r2, r3, r4, r6, r8, sl}
    18c0:	70000000 	andvc	r0, r0, r0
    18c4:	76080007 	strvc	r0, [r8], -r7
    18c8:	02080007 	andeq	r0, r8, #7
    18cc:	5001007d 	andpl	r0, r1, sp, ror r0
    18d0:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    18d4:	00000a2b 	andeq	r0, r0, fp, lsr #20
    18d8:	79105c01 	ldmdbvc	r0, {r0, sl, fp, ip, lr}
    18dc:	40000000 	andmi	r0, r0, r0
    18e0:	3c000005 	stccc	0, cr0, [r0], {5}
    18e4:	00000005 	andeq	r0, r0, r5
    18e8:	0a16010c 	beq	581d20 <_Min_Heap_Size+0x581520>
    18ec:	50010000 	andpl	r0, r1, r0
    18f0:	0079011b 	rsbseq	r0, r9, fp, lsl r1
    18f4:	07540000 	ldrbeq	r0, [r4, -r0]
    18f8:	07700800 	ldrbeq	r0, [r0, -r0, lsl #16]!
    18fc:	05610800 	strbeq	r0, [r1, #-2048]!	; 0xfffff800
    1900:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    1904:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    1908:	00000a2b 	andeq	r0, r0, fp, lsr #20
    190c:	79265001 	stmdbvc	r6!, {r0, ip, lr}
    1910:	85000000 	strhi	r0, [r0, #-0]
    1914:	81000005 	tsthi	r0, r5
    1918:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    191c:	00727470 	rsbseq	r7, r2, r0, ror r4
    1920:	06325001 	ldrteq	r5, [r2], -r1
    1924:	ae000001 	cdpge	0, 0, cr0, cr0, cr1, {0}
    1928:	a6000005 	strge	r0, [r0], -r5
    192c:	0e000005 	cdpeq	0, 0, cr0, cr0, cr5, {0}
    1930:	006e656c 	rsbeq	r6, lr, ip, ror #10
    1934:	793b5001 	ldmdbvc	fp!, {r0, ip, lr}
    1938:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    193c:	e4000005 	str	r0, [r0], #-5
    1940:	14000005 	strne	r0, [r0], #-5
    1944:	00000b5f 	andeq	r0, r0, pc, asr fp
    1948:	79075301 	stmdbvc	r7, {r0, r8, r9, ip, lr}
    194c:	0a000000 	beq	1954 <_Min_Heap_Size+0x1154>
    1950:	06000006 	streq	r0, [r0], -r6
    1954:	0f000006 	svceq	0x00000006
    1958:	08000766 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9, sl}
    195c:	00000818 	andeq	r0, r0, r8, lsl r8
    1960:	ca010c00 	bgt	44968 <_Min_Heap_Size+0x44168>
    1964:	0100000a 	tsteq	r0, sl
    1968:	79011b43 	stmdbvc	r1, {r0, r1, r6, r8, r9, fp, ip}
    196c:	34000000 	strcc	r0, [r0], #-0
    1970:	54080007 	strpl	r0, [r8], #-7
    1974:	29080007 	stmdbcs	r8, {r0, r1, r2}
    1978:	01000006 	tsteq	r0, r6
    197c:	00000742 	andeq	r0, r0, r2, asr #14
    1980:	000a2b0d 	andeq	r2, sl, sp, lsl #22
    1984:	25430100 	strbcs	r0, [r3, #-256]	; 0xffffff00
    1988:	00000079 	andeq	r0, r0, r9, ror r0
    198c:	0000064d 	andeq	r0, r0, sp, asr #12
    1990:	00000649 	andeq	r0, r0, r9, asr #12
    1994:	7274700e 	rsbsvc	r7, r4, #14
    1998:	31430100 	mrscc	r0, (UNDEF: 83)
    199c:	00000106 	andeq	r0, r0, r6, lsl #2
    19a0:	00000676 	andeq	r0, r0, r6, ror r6
    19a4:	0000066e 	andeq	r0, r0, lr, ror #12
    19a8:	6e656c0e 	cdpvs	12, 6, cr6, cr5, cr14, {0}
    19ac:	3a430100 	bcc	10c1db4 <_Min_Heap_Size+0x10c15b4>
    19b0:	00000079 	andeq	r0, r0, r9, ror r0
    19b4:	000006b0 			; <UNDEFINED> instruction: 0x000006b0
    19b8:	000006ac 	andeq	r0, r0, ip, lsr #13
    19bc:	000b5f14 	andeq	r5, fp, r4, lsl pc
    19c0:	07460100 	strbeq	r0, [r6, -r0, lsl #2]
    19c4:	00000079 	andeq	r0, r0, r9, ror r0
    19c8:	000006d2 	ldrdeq	r0, [r0], -r2
    19cc:	000006ce 	andeq	r0, r0, lr, asr #13
    19d0:	0007420f 	andeq	r4, r7, pc, lsl #4
    19d4:	00082608 	andeq	r2, r8, r8, lsl #12
    19d8:	01150000 	tsteq	r5, r0
    19dc:	00000a10 	andeq	r0, r0, r0, lsl sl
    19e0:	01063d01 	tsteq	r6, r1, lsl #26
    19e4:	00000001 	andeq	r0, r0, r1
    19e8:	00000000 	andeq	r0, r0, r0
    19ec:	0006f100 	andeq	pc, r6, r0, lsl #2
    19f0:	078a0100 	streq	r0, [sl, r0, lsl #2]
    19f4:	170d0000 	strne	r0, [sp, -r0]
    19f8:	0100001c 	tsteq	r0, ip, lsl r0
    19fc:	0079113d 	rsbseq	r1, r9, sp, lsr r1
    1a00:	07150000 	ldreq	r0, [r5, -r0]
    1a04:	07110000 	ldreq	r0, [r1, -r0]
    1a08:	00160000 	andseq	r0, r6, r0
    1a0c:	8a000000 	bhi	1a14 <_Min_Heap_Size+0x1214>
    1a10:	17000007 	strne	r0, [r0, -r7]
    1a14:	f3035001 	vhadd.u8	d5, d3, d1
    1a18:	01175001 	tsteq	r7, r1
    1a1c:	ff090251 			; <UNDEFINED> instruction: 0xff090251
    1a20:	010c0000 	mrseq	r0, (UNDEF: 12)
    1a24:	00000a30 	andeq	r0, r0, r0, lsr sl
    1a28:	01053501 	tsteq	r5, r1, lsl #10
    1a2c:	00000079 	andeq	r0, r0, r9, ror r0
	...
    1a38:	00000736 	andeq	r0, r0, r6, lsr r7
    1a3c:	0007db01 	andeq	sp, r7, r1, lsl #22
    1a40:	69700e00 	ldmdbvs	r0!, {r9, sl, fp}^
    1a44:	35010064 	strcc	r0, [r1, #-100]	; 0xffffff9c
    1a48:	0000790f 	andeq	r7, r0, pc, lsl #18
    1a4c:	00075a00 	andeq	r5, r7, r0, lsl #20
    1a50:	00075600 	andeq	r5, r7, r0, lsl #12
    1a54:	69730e00 	ldmdbvs	r3!, {r9, sl, fp}^
    1a58:	35010067 	strcc	r0, [r1, #-103]	; 0xffffff99
    1a5c:	00007918 	andeq	r7, r0, r8, lsl r9
    1a60:	00077f00 	andeq	r7, r7, r0, lsl #30
    1a64:	00077b00 	andeq	r7, r7, r0, lsl #22
    1a68:	00000f00 	andeq	r0, r0, r0, lsl #30
    1a6c:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
    1a70:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1a74:	000b6d01 	andeq	r6, fp, r1, lsl #26
    1a78:	05300100 	ldreq	r0, [r0, #-256]!	; 0xffffff00
    1a7c:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    1a88:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    1a8c:	58011901 	stmdapl	r1, {r0, r8, fp, ip}
    1a90:	0100000a 	tsteq	r0, sl
    1a94:	0000062c 	andeq	r0, r0, ip, lsr #12
    1a98:	00000000 	andeq	r0, r0, r0
    1a9c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    1aa0:	011a0100 	tsteq	sl, r0, lsl #2
    1aa4:	0009a901 	andeq	sl, r9, r1, lsl #18
    1aa8:	0009a900 	andeq	sl, r9, r0, lsl #18
    1aac:	0d0f0900 	vstreq.16	s0, [pc, #-0]	; 1ab4 <_Min_Heap_Size+0x12b4>	; <UNPREDICTABLE>
    1ab0:	5301011a 	movwpl	r0, #4378	; 0x111a
    1ab4:	53000004 	movwpl	r0, #4
    1ab8:	01000004 	tsteq	r0, r4
    1abc:	011a0c23 	tsteq	sl, r3, lsr #24
    1ac0:	000ad001 	andeq	sp, sl, r1
    1ac4:	000ad000 	andeq	sp, sl, r0
    1ac8:	0c240100 	stfeqs	f0, [r4], #-0
    1acc:	0009bf00 	andeq	fp, r9, r0, lsl #30
    1ad0:	df000200 	svcle	0x00000200
    1ad4:	04000004 	streq	r0, [r0], #-4
    1ad8:	00058801 	andeq	r8, r5, r1, lsl #16
    1adc:	0c460c00 	mcrreq	12, 0, r0, r6, cr0
    1ae0:	086d0000 	stmdaeq	sp!, {}^	; <UNPREDICTABLE>
    1ae4:	01080000 	mrseq	r0, (UNDEF: 8)
	...
    1af0:	0b130000 	bleq	4c1af8 <_Min_Heap_Size+0x4c12f8>
    1af4:	01020000 	mrseq	r0, (UNDEF: 2)
    1af8:	00057606 	andeq	r7, r5, r6, lsl #12
    1afc:	00660300 	rsbeq	r0, r6, r0, lsl #6
    1b00:	2b030000 	blcs	c1b08 <_Min_Heap_Size+0xc1308>
    1b04:	00003c18 	andeq	r3, r0, r8, lsl ip
    1b08:	08010200 	stmdaeq	r1, {r9}
    1b0c:	00000574 	andeq	r0, r0, r4, ror r5
    1b10:	fd050202 	stc2	2, cr0, [r5, #-8]
    1b14:	03000003 	movweq	r0, #3
    1b18:	000006f5 	strdeq	r0, [r0], -r5
    1b1c:	56193903 	ldrpl	r3, [r9], -r3, lsl #18
    1b20:	02000000 	andeq	r0, r0, #0
    1b24:	078f0702 	streq	r0, [pc, r2, lsl #14]
    1b28:	04020000 	streq	r0, [r2], #-0
    1b2c:	0002ec05 	andeq	lr, r2, r5, lsl #24
    1b30:	02c20300 	sbceq	r0, r2, #0, 6
    1b34:	4f030000 	svcmi	0x00030000
    1b38:	00007019 	andeq	r7, r0, r9, lsl r0
    1b3c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1b40:	000000b3 	strheq	r0, [r0], -r3
    1b44:	e7050802 	str	r0, [r5, -r2, lsl #16]
    1b48:	02000002 	andeq	r0, r0, #2
    1b4c:	00ae0708 	adceq	r0, lr, r8, lsl #14
    1b50:	04040000 	streq	r0, [r4], #-0
    1b54:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    1b58:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1b5c:	000000b8 	strheq	r0, [r0], -r8
    1b60:	00006803 	andeq	r6, r0, r3, lsl #16
    1b64:	13180400 	tstne	r8, #0, 8
    1b68:	00000030 	andeq	r0, r0, r0, lsr r0
    1b6c:	00009305 	andeq	r9, r0, r5, lsl #6
    1b70:	06f70300 	ldrbteq	r0, [r7], r0, lsl #6
    1b74:	24040000 	strcs	r0, [r4], #-0
    1b78:	00004a14 	andeq	r4, r0, r4, lsl sl
    1b7c:	00a40600 	adceq	r0, r4, r0, lsl #12
    1b80:	c4030000 	strgt	r0, [r3], #-0
    1b84:	04000002 	streq	r0, [r0], #-2
    1b88:	00641430 	rsbeq	r1, r4, r0, lsr r4
    1b8c:	b5060000 	strlt	r0, [r6, #-0]
    1b90:	07000000 	streq	r0, [r0, -r0]
    1b94:	01440518 	cmpeq	r4, r8, lsl r5
    1b98:	00013009 	andeq	r3, r1, r9
    1b9c:	52430800 	subpl	r0, r3, #0, 16
    1ba0:	01460500 	cmpeq	r6, r0, lsl #10
    1ba4:	0000c111 	andeq	ip, r0, r1, lsl r1
    1ba8:	00230200 	eoreq	r0, r3, r0, lsl #4
    1bac:	00075509 	andeq	r5, r7, r9, lsl #10
    1bb0:	01470500 	cmpeq	r7, r0, lsl #10
    1bb4:	0000c111 	andeq	ip, r0, r1, lsl r1
    1bb8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1bbc:	52415008 	subpl	r5, r1, #8
    1bc0:	01480500 	cmpeq	r8, r0, lsl #10
    1bc4:	0000c111 	andeq	ip, r0, r1, lsl r1
    1bc8:	08230200 	stmdaeq	r3!, {r9}
    1bcc:	00004209 	andeq	r4, r0, r9, lsl #4
    1bd0:	01490500 	cmpeq	r9, r0, lsl #10
    1bd4:	0000c111 	andeq	ip, r0, r1, lsl r1
    1bd8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    1bdc:	0007ae09 	andeq	sl, r7, r9, lsl #28
    1be0:	014a0500 	cmpeq	sl, r0, lsl #10
    1be4:	0000c111 	andeq	ip, r0, r1, lsl r1
    1be8:	10230200 	eorne	r0, r3, r0, lsl #4
    1bec:	52434608 	subpl	r4, r3, #8, 12	; 0x800000
    1bf0:	014b0500 	cmpeq	fp, r0, lsl #10
    1bf4:	0000c111 	andeq	ip, r0, r1, lsl r1
    1bf8:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    1bfc:	07740a00 	ldrbeq	r0, [r4, -r0, lsl #20]!
    1c00:	4c050000 	stcmi	0, cr0, [r5], {-0}
    1c04:	00c60301 	sbceq	r0, r6, r1, lsl #6
    1c08:	1c070000 	stcne	0, cr0, [r7], {-0}
    1c0c:	09029505 	stmdbeq	r2, {r0, r2, r8, sl, ip, pc}
    1c10:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    1c14:	00525308 	subseq	r5, r2, r8, lsl #6
    1c18:	11029705 	tstne	r2, r5, lsl #14
    1c1c:	000000c1 	andeq	r0, r0, r1, asr #1
    1c20:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    1c24:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
    1c28:	c1110298 			; <UNDEFINED> instruction: 0xc1110298
    1c2c:	02000000 	andeq	r0, r0, #0
    1c30:	42080423 	andmi	r0, r8, #587202560	; 0x23000000
    1c34:	05005252 	streq	r5, [r0, #-594]	; 0xfffffdae
    1c38:	c1110299 			; <UNDEFINED> instruction: 0xc1110299
    1c3c:	02000000 	andeq	r0, r0, #0
    1c40:	43080823 	movwmi	r0, #34851	; 0x8823
    1c44:	05003152 	streq	r3, [r0, #-338]	; 0xfffffeae
    1c48:	c111029a 			; <UNDEFINED> instruction: 0xc111029a
    1c4c:	02000000 	andeq	r0, r0, #0
    1c50:	43080c23 	movwmi	r0, #35875	; 0x8c23
    1c54:	05003252 	streq	r3, [r0, #-594]	; 0xfffffdae
    1c58:	c111029b 			; <UNDEFINED> instruction: 0xc111029b
    1c5c:	02000000 	andeq	r0, r0, #0
    1c60:	43081023 	movwmi	r1, #32803	; 0x8023
    1c64:	05003352 	streq	r3, [r0, #-850]	; 0xfffffcae
    1c68:	c111029c 			; <UNDEFINED> instruction: 0xc111029c
    1c6c:	02000000 	andeq	r0, r0, #0
    1c70:	89091423 	stmdbhi	r9, {r0, r1, r5, sl, ip}
    1c74:	05000001 	streq	r0, [r0, #-1]
    1c78:	c111029d 			; <UNDEFINED> instruction: 0xc111029d
    1c7c:	02000000 	andeq	r0, r0, #0
    1c80:	0a001823 	beq	7d14 <_Min_Heap_Size+0x7514>
    1c84:	000003e0 	andeq	r0, r0, r0, ror #7
    1c88:	03029e05 	movweq	r9, #11781	; 0x2e05
    1c8c:	0000013d 	andeq	r0, r0, sp, lsr r1
    1c90:	bf040802 	svclt	0x00040802
    1c94:	0b000006 	bleq	1cb4 <_Min_Heap_Size+0x14b4>
    1c98:	003c0107 	eorseq	r0, ip, r7, lsl #2
    1c9c:	32060000 	andcc	r0, r6, #0
    1ca0:	0001e501 	andeq	lr, r1, r1, lsl #10
    1ca4:	08d60c00 	ldmeq	r6, {sl, fp}^
    1ca8:	0c000000 	stceq	0, cr0, [r0], {-0}
    1cac:	00000491 	muleq	r0, r1, r4
    1cb0:	bd030001 	stclt	0, cr0, [r3, #-4]
    1cb4:	06000001 	streq	r0, [r0], -r1
    1cb8:	01ca0335 	biceq	r0, sl, r5, lsr r3
    1cbc:	300d0000 	andcc	r0, sp, r0
    1cc0:	af093007 	svcge	0x00093007
    1cc4:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    1cc8:	0000056c 	andeq	r0, r0, ip, ror #10
    1ccc:	b50c3207 	strlt	r3, [ip, #-519]	; 0xfffffdf9
    1cd0:	02000000 	andeq	r0, r0, #0
    1cd4:	cd0e0023 	stcgt	0, cr0, [lr, #-140]	; 0xffffff74
    1cd8:	07000002 	streq	r0, [r0, -r2]
    1cdc:	00b50c35 	adcseq	r0, r5, r5, lsr ip
    1ce0:	23020000 	movwcs	r0, #8192	; 0x2000
    1ce4:	02020e04 	andeq	r0, r2, #4, 28	; 0x40
    1ce8:	39070000 	stmdbcc	r7, {}	; <UNPREDICTABLE>
    1cec:	0000b50c 	andeq	fp, r0, ip, lsl #10
    1cf0:	08230200 	stmdaeq	r3!, {r9}
    1cf4:	0007200e 	andeq	r2, r7, lr
    1cf8:	0c3c0700 	ldceq	7, cr0, [ip], #-0
    1cfc:	000000b5 	strheq	r0, [r0], -r5
    1d00:	0e0c2302 	cdpeq	3, 0, cr2, cr12, cr2, {0}
    1d04:	000007b3 			; <UNDEFINED> instruction: 0x000007b3
    1d08:	b50c3f07 	strlt	r3, [ip, #-3847]	; 0xfffff0f9
    1d0c:	02000000 	andeq	r0, r0, #0
    1d10:	cf0e1023 	svcgt	0x000e1023
    1d14:	07000003 	streq	r0, [r0, -r3]
    1d18:	00b50c42 	adcseq	r0, r5, r2, asr #24
    1d1c:	23020000 	movwcs	r0, #8192	; 0x2000
    1d20:	069d0e14 			; <UNDEFINED> instruction: 0x069d0e14
    1d24:	45070000 	strmi	r0, [r7, #-0]
    1d28:	0000b50c 	andeq	fp, r0, ip, lsl #10
    1d2c:	18230200 	stmdane	r3!, {r9}
    1d30:	00221b0e 	eoreq	r1, r2, lr, lsl #22
    1d34:	0c4a0700 	mcrreq	7, 0, r0, sl, cr0
    1d38:	000000b5 	strheq	r0, [r0], -r5
    1d3c:	0e1c2302 	cdpeq	3, 1, cr2, cr12, cr2, {0}
    1d40:	00000699 	muleq	r0, r9, r6
    1d44:	b50c4d07 	strlt	r4, [ip, #-3335]	; 0xfffff2f9
    1d48:	02000000 	andeq	r0, r0, #0
    1d4c:	cb0e2023 	blgt	389de0 <_Min_Heap_Size+0x3895e0>
    1d50:	07000006 	streq	r0, [r0, -r6]
    1d54:	00b50c52 	adcseq	r0, r5, r2, asr ip
    1d58:	23020000 	movwcs	r0, #8192	; 0x2000
    1d5c:	02150e24 	andseq	r0, r5, #36, 28	; 0x240
    1d60:	55070000 	strpl	r0, [r7, #-0]
    1d64:	0000b50c 	andeq	fp, r0, ip, lsl #10
    1d68:	28230200 	stmdacs	r3!, {r9}
    1d6c:	0007270e 	andeq	r2, r7, lr, lsl #14
    1d70:	0c5b0700 	mrrceq	7, 0, r0, fp, cr0
    1d74:	000000b5 	strheq	r0, [r0], -r5
    1d78:	002c2302 	eoreq	r2, ip, r2, lsl #6
    1d7c:	00004703 	andeq	r4, r0, r3, lsl #14
    1d80:	02600700 	rsbeq	r0, r0, #0, 14
    1d84:	000001f1 	strdeq	r0, [r0], -r1
    1d88:	3c01070b 	stccc	7, cr0, [r1], {11}
    1d8c:	07000000 	streq	r0, [r0, -r0]
    1d90:	02ee0167 	rsceq	r0, lr, #-1073741799	; 0xc0000019
    1d94:	100c0000 	andne	r0, ip, r0
    1d98:	00000003 	andeq	r0, r0, r3
    1d9c:	0004230c 	andeq	r2, r4, ip, lsl #6
    1da0:	400c0100 	andmi	r0, ip, r0, lsl #2
    1da4:	02000004 	andeq	r0, r0, #4
    1da8:	00082f0c 	andeq	r2, r8, ip, lsl #30
    1dac:	2d0c0300 	stccs	3, cr0, [ip, #-0]
    1db0:	04000002 	streq	r0, [r0], #-2
    1db4:	0003910c 	andeq	r9, r3, ip, lsl #2
    1db8:	03000500 	movweq	r0, #1280	; 0x500
    1dbc:	0000062d 	andeq	r0, r0, sp, lsr #12
    1dc0:	bb026e07 	bllt	9d5e4 <_Min_Heap_Size+0x9cde4>
    1dc4:	06000002 	streq	r0, [r0], -r2
    1dc8:	000002ee 	andeq	r0, r0, lr, ror #5
    1dcc:	0006850f 	andeq	r8, r6, pc, lsl #10
    1dd0:	8a076000 	bhi	1d9dd8 <_Min_Heap_Size+0x1d95d8>
    1dd4:	0003df10 	andeq	sp, r3, r0, lsl pc
    1dd8:	04a40e00 	strteq	r0, [r4], #3584	; 0xe00
    1ddc:	8c070000 	stchi	0, cr0, [r7], {-0}
    1de0:	0003df1f 	andeq	sp, r3, pc, lsl pc
    1de4:	00230200 	eoreq	r0, r3, r0, lsl #4
    1de8:	001cfd0e 	andseq	pc, ip, lr, lsl #26
    1dec:	1e8e0700 	cdpne	7, 8, cr0, cr14, cr0, {0}
    1df0:	000002af 	andeq	r0, r0, pc, lsr #5
    1df4:	0e042302 	cdpeq	3, 0, cr2, cr4, cr2, {0}
    1df8:	000002a8 	andeq	r0, r0, r8, lsr #5
    1dfc:	e51e9007 	ldr	r9, [lr, #-7]
    1e00:	02000001 	andeq	r0, r0, #1
    1e04:	0a0e3423 	beq	38ee98 <_Min_Heap_Size+0x38e698>
    1e08:	07000003 	streq	r0, [r0, -r3]
    1e0c:	02fa1e92 	rscseq	r1, sl, #2336	; 0x920
    1e10:	23020000 	movwcs	r0, #8192	; 0x2000
    1e14:	02a10e35 	adceq	r0, r1, #848	; 0x350
    1e18:	94070000 	strls	r0, [r7], #-0
    1e1c:	0003e51f 	andeq	lr, r3, pc, lsl r5
    1e20:	38230200 	stmdacc	r3!, {r9}
    1e24:	0009190e 	andeq	r1, r9, lr, lsl #18
    1e28:	21960700 	orrscs	r0, r6, r0, lsl #14
    1e2c:	000003f9 	strdeq	r0, [r0], -r9
    1e30:	0e3c2302 	cdpeq	3, 3, cr2, cr12, cr2, {0}
    1e34:	000001d9 	ldrdeq	r0, [r0], -r9
    1e38:	f9219807 			; <UNDEFINED> instruction: 0xf9219807
    1e3c:	02000003 	andeq	r0, r0, #3
    1e40:	970e4023 	strls	r4, [lr, -r3, lsr #32]
    1e44:	07000001 	streq	r0, [r0, -r1]
    1e48:	03f9219a 	mvnseq	r2, #-2147483610	; 0x80000026
    1e4c:	23020000 	movwcs	r0, #8192	; 0x2000
    1e50:	05550e44 	ldrbeq	r0, [r5, #-3652]	; 0xfffff1bc
    1e54:	9c070000 	stcls	0, cr0, [r7], {-0}
    1e58:	0003f921 	andeq	pc, r3, r1, lsr #18
    1e5c:	48230200 	stmdami	r3!, {r9}
    1e60:	0004ad0e 	andeq	sl, r4, lr, lsl #26
    1e64:	219e0700 	orrscs	r0, lr, r0, lsl #14
    1e68:	000003f9 	strdeq	r0, [r0], -r9
    1e6c:	0e4c2302 	cdpeq	3, 4, cr2, cr12, cr2, {0}
    1e70:	00000907 	andeq	r0, r0, r7, lsl #18
    1e74:	f921a007 			; <UNDEFINED> instruction: 0xf921a007
    1e78:	02000003 	andeq	r0, r0, #3
    1e7c:	b00e5023 	andlt	r5, lr, r3, lsr #32
    1e80:	07000003 	streq	r0, [r0, -r3]
    1e84:	00c11ea2 	sbceq	r1, r1, r2, lsr #29
    1e88:	23020000 	movwcs	r0, #8192	; 0x2000
    1e8c:	028a0e54 	addeq	r0, sl, #84, 28	; 0x540
    1e90:	a4070000 	strge	r0, [r7], #-0
    1e94:	0000b51e 	andeq	fp, r0, lr, lsl r5
    1e98:	58230200 	stmdapl	r3!, {r9}
    1e9c:	00033e0e 	andeq	r3, r3, lr, lsl #28
    1ea0:	1ea60700 	cdpne	7, 10, cr0, cr6, cr0, {0}
    1ea4:	000000b5 	strheq	r0, [r0], -r5
    1ea8:	005c2302 	subseq	r2, ip, r2, lsl #6
    1eac:	01300410 	teqeq	r0, r0, lsl r4
    1eb0:	04110000 	ldreq	r0, [r1], #-0
    1eb4:	03f30112 	mvnseq	r0, #-2147483644	; 0x80000004
    1eb8:	f3130000 	vhadd.u16	d0, d3, d0
    1ebc:	00000003 	andeq	r0, r0, r3
    1ec0:	02ff0410 	rscseq	r0, pc, #16, 8	; 0x10000000
    1ec4:	04100000 	ldreq	r0, [r0], #-0
    1ec8:	000003e7 	andeq	r0, r0, r7, ror #7
    1ecc:	00068703 	andeq	r8, r6, r3, lsl #14
    1ed0:	02a80700 	adceq	r0, r8, #0, 14
    1ed4:	000002ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1ed8:	2e081c0d 	cdpcs	12, 0, cr1, cr8, cr13, {0}
    1edc:	00047e09 	andeq	r7, r4, r9, lsl #28
    1ee0:	018e0e00 	orreq	r0, lr, r0, lsl #28
    1ee4:	30080000 	andcc	r0, r8, r0
    1ee8:	0000b50c 	andeq	fp, r0, ip, lsl #10
    1eec:	00230200 	eoreq	r0, r3, r0, lsl #4
    1ef0:	0006a20e 	andeq	sl, r6, lr, lsl #4
    1ef4:	0c360800 	ldceq	8, cr0, [r6], #-0
    1ef8:	000000b5 	strheq	r0, [r0], -r5
    1efc:	0e042302 	cdpeq	3, 0, cr2, cr4, cr2, {0}
    1f00:	00000279 	andeq	r0, r0, r9, ror r2
    1f04:	b50c3908 	strlt	r3, [ip, #-2312]	; 0xfffff6f8
    1f08:	02000000 	andeq	r0, r0, #0
    1f0c:	240e0823 	strcs	r0, [lr], #-2083	; 0xfffff7dd
    1f10:	08000003 	stmdaeq	r0, {r0, r1}
    1f14:	00b50c3c 	adcseq	r0, r5, ip, lsr ip
    1f18:	23020000 	movwcs	r0, #8192	; 0x2000
    1f1c:	069d0e0c 	ldreq	r0, [sp], ip, lsl #28
    1f20:	43080000 	movwmi	r0, #32768	; 0x8000
    1f24:	0000b50c 	andeq	fp, r0, ip, lsl #10
    1f28:	10230200 	eorne	r0, r3, r0, lsl #4
    1f2c:	0008250e 	andeq	r2, r8, lr, lsl #10
    1f30:	0c460800 	mcrreq	8, 0, r0, r6, cr0
    1f34:	000000b5 	strheq	r0, [r0], -r5
    1f38:	0e142302 	cdpeq	3, 1, cr2, cr4, cr2, {0}
    1f3c:	00000135 	andeq	r0, r0, r5, lsr r1
    1f40:	b50c4908 	strlt	r4, [ip, #-2312]	; 0xfffff6f8
    1f44:	02000000 	andeq	r0, r0, #0
    1f48:	03001823 	movweq	r1, #2083	; 0x823
    1f4c:	000007c7 	andeq	r0, r0, r7, asr #15
    1f50:	0b034b08 	bleq	d4b78 <_Min_Heap_Size+0xd4378>
    1f54:	0b000004 	bleq	1f6c <_Min_Heap_Size+0x176c>
    1f58:	003c0107 	eorseq	r0, ip, r7, lsl #2
    1f5c:	75080000 	strvc	r0, [r8, #-0]
    1f60:	0004c901 	andeq	ip, r4, r1, lsl #18
    1f64:	075a0c00 	ldrbeq	r0, [sl, -r0, lsl #24]
    1f68:	0c000000 	stceq	0, cr0, [r0], {-0}
    1f6c:	000002ad 	andeq	r0, r0, sp, lsr #5
    1f70:	08c20c20 	stmiaeq	r2, {r5, sl, fp}^
    1f74:	0c240000 	stceq	0, cr0, [r4], #-0
    1f78:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
    1f7c:	07000c21 	streq	r0, [r0, -r1, lsr #24]
    1f80:	0c220000 	stceq	0, cr0, [r2], #-0
    1f84:	0000016f 	andeq	r0, r0, pc, ror #2
    1f88:	080e0c23 	stmdaeq	lr, {r0, r1, r5, sl, fp}
    1f8c:	0ca00000 	stceq	0, cr0, [r0]
    1f90:	0000065f 	andeq	r0, r0, pc, asr r6
    1f94:	250300e0 	strcs	r0, [r3, #-224]	; 0xffffff20
    1f98:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1f9c:	048a0387 	streq	r0, [sl], #903	; 0x387
    1fa0:	c9060000 	stmdbgt	r6, {}	; <UNPREDICTABLE>
    1fa4:	03000004 	movweq	r0, #4
    1fa8:	000007de 	ldrdeq	r0, [r0], -lr
    1fac:	b5129008 	ldrlt	r9, [r2, #-8]
    1fb0:	06000000 	streq	r0, [r0], -r0
    1fb4:	000004da 	ldrdeq	r0, [r0], -sl
    1fb8:	0000ca03 	andeq	ip, r0, r3, lsl #20
    1fbc:	129b0800 	addsne	r0, fp, #0, 16
    1fc0:	000000b5 	strheq	r0, [r0], -r5
    1fc4:	0004eb06 	andeq	lr, r4, r6, lsl #22
    1fc8:	04770f00 	ldrbteq	r0, [r7], #-3840	; 0xfffff100
    1fcc:	08480000 	stmdaeq	r8, {}^	; <UNPREDICTABLE>
    1fd0:	05fa10a0 	ldrbeq	r1, [sl, #160]!	; 0xa0
    1fd4:	a40e0000 	strge	r0, [lr], #-0
    1fd8:	08000004 	stmdaeq	r0, {r2}
    1fdc:	05fa22a2 	ldrbeq	r2, [sl, #674]!	; 0x2a2
    1fe0:	23020000 	movwcs	r0, #8192	; 0x2000
    1fe4:	1cfd0e00 	ldclne	14, cr0, [sp]
    1fe8:	a4080000 	strge	r0, [r8], #-0
    1fec:	00047e21 	andeq	r7, r4, r1, lsr #28
    1ff0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1ff4:	0001ee0e 	andeq	lr, r1, lr, lsl #28
    1ff8:	22a60800 	adccs	r0, r6, #0, 16
    1ffc:	00000600 	andeq	r0, r0, r0, lsl #12
    2000:	0e202302 	cdpeq	3, 2, cr2, cr0, cr2, {0}
    2004:	00000376 	andeq	r0, r0, r6, ror r3
    2008:	a421a808 	strtge	sl, [r1], #-2056	; 0xfffff7f8
    200c:	02000000 	andeq	r0, r0, #0
    2010:	420e2423 	andmi	r2, lr, #587202560	; 0x23000000
    2014:	08000001 	stmdaeq	r0, {r0}
    2018:	00b021aa 	adcseq	r2, r0, sl, lsr #3
    201c:	23020000 	movwcs	r0, #8192	; 0x2000
    2020:	08450e26 	stmdaeq	r5, {r1, r2, r5, r9, sl, fp}^
    2024:	ac080000 	stcge	0, cr0, [r8], {-0}
    2028:	00060622 	andeq	r0, r6, r2, lsr #12
    202c:	28230200 	stmdacs	r3!, {r9}
    2030:	00036b0e 	andeq	r6, r3, lr, lsl #22
    2034:	21ae0800 			; <UNDEFINED> instruction: 0x21ae0800
    2038:	000000a4 	andeq	r0, r0, r4, lsr #1
    203c:	0e2c2302 	cdpeq	3, 2, cr2, cr12, cr2, {0}
    2040:	000008b6 			; <UNDEFINED> instruction: 0x000008b6
    2044:	b021b008 	eorlt	fp, r1, r8
    2048:	02000000 	andeq	r0, r0, #0
    204c:	f90e2e23 			; <UNDEFINED> instruction: 0xf90e2e23
    2050:	08000008 	stmdaeq	r0, {r3}
    2054:	04e61fb2 	strbteq	r1, [r6], #4018	; 0xfb2
    2058:	23020000 	movwcs	r0, #8192	; 0x2000
    205c:	13120e30 	tstne	r2, #48, 28	; 0x300
    2060:	b4080000 	strlt	r0, [r8], #-0
    2064:	0004f724 	andeq	pc, r4, r4, lsr #14
    2068:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    206c:	0004e00e 	andeq	lr, r4, lr
    2070:	22b60800 	adcscs	r0, r6, #0, 16
    2074:	0000060c 	andeq	r0, r0, ip, lsl #12
    2078:	0e382302 	cdpeq	3, 3, cr2, cr8, cr2, {0}
    207c:	000002e0 	andeq	r0, r0, r0, ror #5
    2080:	0c22b808 	stceq	8, cr11, [r2], #-32	; 0xffffffe0
    2084:	02000006 	andeq	r0, r0, #6
    2088:	a80e3c23 	stmdage	lr, {r0, r1, r5, sl, fp, ip, sp}
    208c:	08000002 	stmdaeq	r0, {r1}
    2090:	01e521ba 	strheq	r2, [r5, #26]!
    2094:	23020000 	movwcs	r0, #8192	; 0x2000
    2098:	003b0e40 	eorseq	r0, fp, r0, asr #28
    209c:	bc080000 	stclt	0, cr0, [r8], {-0}
    20a0:	0004d521 	andeq	sp, r4, r1, lsr #10
    20a4:	41230200 			; <UNDEFINED> instruction: 0x41230200
    20a8:	0008ec0e 	andeq	lr, r8, lr, lsl #24
    20ac:	21c00800 	biccs	r0, r0, r0, lsl #16
    20b0:	000004d5 	ldrdeq	r0, [r0], -r5
    20b4:	0e422302 	cdpeq	3, 4, cr2, cr2, cr2, {0}
    20b8:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
    20bc:	c121c308 			; <UNDEFINED> instruction: 0xc121c308
    20c0:	02000000 	andeq	r0, r0, #0
    20c4:	10004423 	andne	r4, r0, r3, lsr #8
    20c8:	0001b604 	andeq	fp, r1, r4, lsl #12
    20cc:	9f041000 	svcls	0x00041000
    20d0:	10000000 	andne	r0, r0, r0
    20d4:	00009304 	andeq	r9, r0, r4, lsl #6
    20d8:	ff041000 			; <UNDEFINED> instruction: 0xff041000
    20dc:	03000003 	movweq	r0, #3
    20e0:	00000479 	andeq	r0, r0, r9, ror r4
    20e4:	fc03d508 	stc2	5, cr13, [r3], {8}
    20e8:	02000004 	andeq	r0, r0, #4
    20ec:	057d0801 	ldrbeq	r0, [sp, #-2049]!	; 0xfffff7ff
    20f0:	1e050000 	cdpne	0, 0, cr0, cr5, cr0, {0}
    20f4:	14000006 	strne	r0, [r0], #-6
    20f8:	00000337 	andeq	r0, r0, r7, lsr r3
    20fc:	121b3b01 	andsne	r3, fp, #1024	; 0x400
    2100:	01000006 	tsteq	r0, r6
    2104:	8c011501 	cfstr32hi	mvfx1, [r1], {1}
    2108:	0100000c 	tsteq	r0, ip
    210c:	100106ec 	andne	r0, r1, ip, ror #13
    2110:	28080008 	stmdacs	r8, {r3}
    2114:	a0080008 	andge	r0, r8, r8
    2118:	01000007 	tsteq	r0, r7
    211c:	000006bd 			; <UNDEFINED> instruction: 0x000006bd
    2120:	000a2b16 	andeq	r2, sl, r6, lsl fp
    2124:	1dec0100 	stfnee	f0, [ip]
    2128:	00000606 	andeq	r0, r0, r6, lsl #12
    212c:	000007c4 	andeq	r0, r0, r4, asr #15
    2130:	000007c0 	andeq	r0, r0, r0, asr #15
    2134:	000c4116 	andeq	r4, ip, r6, lsl r1
    2138:	2cec0100 	stfcse	f0, [ip]
    213c:	000000b5 	strheq	r0, [r0], -r5
    2140:	000007e9 	andeq	r0, r0, r9, ror #15
    2144:	000007e5 	andeq	r0, r0, r5, ror #15
    2148:	00065617 	andeq	r5, r6, r7, lsl r6
    214c:	0006cd00 	andeq	ip, r6, r0, lsl #26
    2150:	03050100 	movweq	r0, #20736	; 0x5100
    2154:	08002c3c 	stmdaeq	r0, {r2, r3, r4, r5, sl, fp, sp}
    2158:	00098c18 	andeq	r8, r9, r8, lsl ip
    215c:	00081a00 	andeq	r1, r8, r0, lsl #20
    2160:	081a0108 	ldmdaeq	sl, {r3, r8}
    2164:	081c0800 	ldmdaeq	ip, {fp}
    2168:	ef010800 	svc	0x00010800
    216c:	081a1903 	ldmdaeq	sl, {r0, r1, r8, fp, ip}
    2170:	09970800 	ldmibeq	r7, {fp}
    2174:	011a0000 	tsteq	sl, r0
    2178:	ec030550 	cfstr32	mvfx0, [r3], {80}	; 0x50
    217c:	1a08002b 	bne	202230 <_Min_Heap_Size+0x201a30>
    2180:	03055101 	movweq	r5, #20737	; 0x5101
    2184:	08002c3c 	stmdaeq	r0, {r2, r3, r4, r5, sl, fp, sp}
    2188:	251b0000 	ldrcs	r0, [fp, #-0]
    218c:	cd000006 	stcgt	0, cr0, [r0, #-24]	; 0xffffffe8
    2190:	1c000006 	stcne	0, cr0, [r0], {6}
    2194:	0000008c 	andeq	r0, r0, ip, lsl #1
    2198:	bd05000d 	stclt	0, cr0, [r5, #-52]	; 0xffffffcc
    219c:	15000006 	strne	r0, [r0, #-6]
    21a0:	00041501 	andeq	r1, r4, r1, lsl #10
    21a4:	06dd0100 	ldrbeq	r0, [sp], r0, lsl #2
    21a8:	0007f801 	andeq	pc, r7, r1, lsl #16
    21ac:	00081008 	andeq	r1, r8, r8
    21b0:	00080a08 	andeq	r0, r8, r8, lsl #20
    21b4:	072f0100 	streq	r0, [pc, -r0, lsl #2]!
    21b8:	56170000 	ldrpl	r0, [r7], -r0
    21bc:	cd000006 	stcgt	0, cr0, [r0, #-24]	; 0xffffffe8
    21c0:	01000006 	tsteq	r0, r6
    21c4:	2c4c0305 	mcrrcs	3, 0, r0, ip, cr5
    21c8:	8c180800 	ldchi	8, cr0, [r8], {-0}
    21cc:	02000009 	andeq	r0, r0, #9
    21d0:	01080008 	tsteq	r8, r8
    21d4:	08000802 	stmdaeq	r0, {r1, fp}
    21d8:	08000804 	stmdaeq	r0, {r2, fp}
    21dc:	1903e001 	stmdbne	r3, {r0, sp, lr, pc}
    21e0:	08000802 	stmdaeq	r0, {r1, fp}
    21e4:	00000997 	muleq	r0, r7, r9
    21e8:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    21ec:	002bec03 	eoreq	lr, fp, r3, lsl #24
    21f0:	51011a08 	tstpl	r1, r8, lsl #20
    21f4:	2c4c0305 	mcrrcs	3, 0, r0, ip, cr5
    21f8:	00000800 	andeq	r0, r0, r0, lsl #16
    21fc:	0bf60115 	bleq	ffd82658 <_estack+0xdfd81420>
    2200:	cd010000 	stcgt	0, cr0, [r1, #-0]
    2204:	07e80106 	strbeq	r0, [r8, r6, lsl #2]!
    2208:	07f80800 	ldrbeq	r0, [r8, r0, lsl #16]!
    220c:	082a0800 	stmdaeq	sl!, {fp}
    2210:	54010000 	strpl	r0, [r1], #-0
    2214:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    2218:	080007f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl}
    221c:	000009a5 	andeq	r0, r0, r5, lsr #19
    2220:	a6011500 	strge	r1, [r1], -r0, lsl #10
    2224:	0100000c 	tsteq	r0, ip
    2228:	de0106b8 	mcrle	6, 0, r0, cr1, cr8, {5}
    222c:	e6080007 	str	r0, [r8], -r7
    2230:	4a080007 	bmi	202254 <_Min_Heap_Size+0x201a54>
    2234:	01000008 	tsteq	r0, r8
    2238:	00000779 	andeq	r0, r0, r9, ror r7
    223c:	0007e41d 	andeq	lr, r7, sp, lsl r4
    2240:	0009b408 	andeq	fp, r9, r8, lsl #8
    2244:	011e0000 	tsteq	lr, r0
    2248:	00000c63 	andeq	r0, r0, r3, ror #24
    224c:	0106ab01 	tsteq	r6, r1, lsl #22
    2250:	080007dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl}
    2254:	080007de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, r9, sl}
    2258:	01007d02 	tsteq	r0, r2, lsl #26
    225c:	0bd4011e 	bleq	ff5026dc <_estack+0xdf5014a4>
    2260:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
    2264:	07da0106 	ldrbeq	r0, [sl, r6, lsl #2]
    2268:	07dc0800 	ldrbeq	r0, [ip, r0, lsl #16]
    226c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    2270:	011e0100 	tsteq	lr, r0, lsl #2
    2274:	00000c9a 	muleq	r0, sl, ip
    2278:	01069101 	tsteq	r6, r1, lsl #2
    227c:	080007d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl}
    2280:	080007da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, sl}
    2284:	01007d02 	tsteq	r0, r2, lsl #26
    2288:	0c080115 	stfeqs	f0, [r8], {21}
    228c:	82010000 	andhi	r0, r1, #0
    2290:	07c40106 	strbeq	r0, [r4, r6, lsl #2]
    2294:	07d80800 	ldrbeq	r0, [r8, r0, lsl #16]
    2298:	086a0800 	stmdaeq	sl!, {fp}^
    229c:	03010000 	movweq	r0, #4096	; 0x1000
    22a0:	17000008 	strne	r0, [r0, -r8]
    22a4:	00000656 	andeq	r0, r0, r6, asr r6
    22a8:	00000813 	andeq	r0, r0, r3, lsl r8
    22ac:	5c030501 	cfstr32pl	mvfx0, [r3], {1}
    22b0:	1908002c 	stmdbne	r8, {r2, r3, r5}
    22b4:	080007ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, r9, sl}
    22b8:	00000997 	muleq	r0, r7, r9
    22bc:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    22c0:	002bec03 	eoreq	lr, fp, r3, lsl #24
    22c4:	51011a08 	tstpl	r1, r8, lsl #20
    22c8:	2c5c0305 	mrrccs	3, 0, r0, ip, cr5
    22cc:	00000800 	andeq	r0, r0, r0, lsl #16
    22d0:	0006251b 	andeq	r2, r6, fp, lsl r5
    22d4:	00081300 	andeq	r1, r8, r0, lsl #6
    22d8:	008c1c00 	addeq	r1, ip, r0, lsl #24
    22dc:	00120000 	andseq	r0, r2, r0
    22e0:	00080305 	andeq	r0, r8, r5, lsl #6
    22e4:	e5011500 	str	r1, [r1, #-1280]	; 0xfffffb00
    22e8:	0100000b 	tsteq	r0, fp
    22ec:	b0010673 	andlt	r0, r1, r3, ror r6
    22f0:	c4080007 	strgt	r0, [r8], #-7
    22f4:	8a080007 	bhi	202318 <_Min_Heap_Size+0x201b18>
    22f8:	01000008 	tsteq	r0, r8
    22fc:	00000860 	andeq	r0, r0, r0, ror #16
    2300:	00065617 	andeq	r5, r6, r7, lsl r6
    2304:	00087000 	andeq	r7, r8, r0
    2308:	03050100 	movweq	r0, #20736	; 0x5100
    230c:	08002c70 	stmdaeq	r0, {r4, r5, r6, sl, fp, sp}
    2310:	0007ba19 	andeq	fp, r7, r9, lsl sl
    2314:	00099708 	andeq	r9, r9, r8, lsl #14
    2318:	50011a00 	andpl	r1, r1, r0, lsl #20
    231c:	2bec0305 	blcs	ffb02f38 <_estack+0xdfb01d00>
    2320:	011a0800 	tsteq	sl, r0, lsl #16
    2324:	70030551 	andvc	r0, r3, r1, asr r5
    2328:	0008002c 	andeq	r0, r8, ip, lsr #32
    232c:	06251b00 	strteq	r1, [r5], -r0, lsl #22
    2330:	08700000 	ldmdaeq	r0!, {}^	; <UNPREDICTABLE>
    2334:	8c1c0000 	ldchi	0, cr0, [ip], {-0}
    2338:	10000000 	andne	r0, r0, r0
    233c:	08600500 	stmdaeq	r0!, {r8, sl}^
    2340:	01150000 	tsteq	r5, r0
    2344:	00000c2f 	andeq	r0, r0, pc, lsr #24
    2348:	01066401 	tsteq	r6, r1, lsl #8
    234c:	0800079c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl}
    2350:	080007b0 	stmdaeq	r0, {r4, r5, r7, r8, r9, sl}
    2354:	000008aa 	andeq	r0, r0, sl, lsr #17
    2358:	0008bd01 	andeq	fp, r8, r1, lsl #26
    235c:	06561700 	ldrbeq	r1, [r6], -r0, lsl #14
    2360:	08cd0000 	stmiaeq	sp, {}^	; <UNPREDICTABLE>
    2364:	05010000 	streq	r0, [r1, #-0]
    2368:	002c8403 	eoreq	r8, ip, r3, lsl #8
    236c:	07a61908 	streq	r1, [r6, r8, lsl #18]!
    2370:	09970800 	ldmibeq	r7, {fp}
    2374:	011a0000 	tsteq	sl, r0
    2378:	ec030550 	cfstr32	mvfx0, [r3], {80}	; 0x50
    237c:	1a08002b 	bne	202430 <_Min_Heap_Size+0x201c30>
    2380:	03055101 	movweq	r5, #20737	; 0x5101
    2384:	08002c84 	stmdaeq	r0, {r2, r7, sl, fp, sp}
    2388:	251b0000 	ldrcs	r0, [fp, #-0]
    238c:	cd000006 	stcgt	0, cr0, [r0, #-24]	; 0xffffffe8
    2390:	1c000008 	stcne	0, cr0, [r0], {8}
    2394:	0000008c 	andeq	r0, r0, ip, lsl #1
    2398:	bd050011 	stclt	0, cr0, [r5, #-68]	; 0xffffffbc
    239c:	15000008 	strne	r0, [r0, #-8]
    23a0:	000cb601 	andeq	fp, ip, r1, lsl #12
    23a4:	06550100 	ldrbeq	r0, [r5], -r0, lsl #2
    23a8:	00000001 	andeq	r0, r0, r1
    23ac:	00000000 	andeq	r0, r0, r0
    23b0:	0008ca00 	andeq	ip, r8, r0, lsl #20
    23b4:	091a0100 	ldmdbeq	sl, {r8}
    23b8:	56170000 	ldrpl	r0, [r7], -r0
    23bc:	2a000006 	bcs	23dc <_Min_Heap_Size+0x1bdc>
    23c0:	01000009 	tsteq	r0, r9
    23c4:	00000305 	andeq	r0, r0, r5, lsl #6
    23c8:	00190000 	andseq	r0, r9, r0
    23cc:	97000000 	strls	r0, [r0, -r0]
    23d0:	1a000009 	bne	23fc <_Min_Heap_Size+0x1bfc>
    23d4:	03055001 	movweq	r5, #20481	; 0x5001
    23d8:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}
    23dc:	0551011a 	ldrbeq	r0, [r1, #-282]	; 0xfffffee6
    23e0:	00000003 	andeq	r0, r0, r3
    23e4:	1b000000 	blne	23ec <_Min_Heap_Size+0x1bec>
    23e8:	00000625 	andeq	r0, r0, r5, lsr #12
    23ec:	0000092a 	andeq	r0, r0, sl, lsr #18
    23f0:	00008c1c 	andeq	r8, r0, ip, lsl ip
    23f4:	05001900 	streq	r1, [r0, #-2304]	; 0xfffff700
    23f8:	0000091a 	andeq	r0, r0, sl, lsl r9
    23fc:	0bc80115 	bleq	ff202858 <_estack+0xdf201620>
    2400:	46010000 	strmi	r0, [r1], -r0
    2404:	07880106 	streq	r0, [r8, r6, lsl #2]
    2408:	079c0800 	ldreq	r0, [ip, r0, lsl #16]
    240c:	08ea0800 	stmiaeq	sl!, {fp}^
    2410:	77010000 	strvc	r0, [r1, -r0]
    2414:	17000009 	strne	r0, [r0, -r9]
    2418:	00000656 	andeq	r0, r0, r6, asr r6
    241c:	00000987 	andeq	r0, r0, r7, lsl #19
    2420:	98030501 	stmdals	r3, {r0, r8, sl}
    2424:	1908002c 	stmdbne	r8, {r2, r3, r5}
    2428:	08000792 	stmdaeq	r0, {r1, r4, r7, r8, r9, sl}
    242c:	00000997 	muleq	r0, r7, r9
    2430:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    2434:	002bec03 	eoreq	lr, fp, r3, lsl #24
    2438:	51011a08 	tstpl	r1, r8, lsl #20
    243c:	2c980305 	ldccs	3, cr0, [r8], {5}
    2440:	00000800 	andeq	r0, r0, r0, lsl #16
    2444:	0006251b 	andeq	r2, r6, fp, lsl r5
    2448:	00098700 	andeq	r8, r9, r0, lsl #14
    244c:	008c1c00 	addeq	r1, ip, r0, lsl #24
    2450:	000b0000 	andeq	r0, fp, r0
    2454:	00097705 	andeq	r7, r9, r5, lsl #14
    2458:	0c7e1f00 	ldcleq	15, cr1, [lr], #-0
    245c:	c0020000 	andgt	r0, r2, r0
    2460:	03011b03 	movweq	r1, #6915	; 0x1b03
    2464:	00010120 	andeq	r0, r1, r0, lsr #2
    2468:	00000000 	andeq	r0, r0, r0
    246c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2470:	012105c8 	smlawteq	r1, r8, r5, r0
    2474:	000c1b01 	andeq	r1, ip, r1, lsl #22
    2478:	000c1b00 	andeq	r1, ip, r0, lsl #22
    247c:	03020800 	movweq	r0, #10240	; 0x2800
    2480:	01012006 	tsteq	r1, r6
    2484:	00000c72 	andeq	r0, r0, r2, ror ip
    2488:	00000c72 	andeq	r0, r0, r2, ror ip
    248c:	0006e80a 	andeq	lr, r6, sl, lsl #16
    2490:	00000304 	andeq	r0, r0, r4, lsl #6
    2494:	06c20002 	strbeq	r0, [r2], r2
    2498:	01040000 	mrseq	r0, (UNDEF: 4)
    249c:	00000588 	andeq	r0, r0, r8, lsl #11
    24a0:	000cd00c 	andeq	sp, ip, ip
    24a4:	00086d00 	andeq	r6, r8, r0, lsl #26
    24a8:	00017000 	andeq	r7, r1, r0
	...
    24b4:	000f0900 	andeq	r0, pc, r0, lsl #18
    24b8:	06010200 	streq	r0, [r1], -r0, lsl #4
    24bc:	00000576 	andeq	r0, r0, r6, ror r5
    24c0:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    24c4:	02000005 	andeq	r0, r0, #5
    24c8:	03fd0502 	mvnseq	r0, #8388608	; 0x800000
    24cc:	02020000 	andeq	r0, r2, #0
    24d0:	00078f07 	andeq	r8, r7, r7, lsl #30
    24d4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    24d8:	000002ec 	andeq	r0, r0, ip, ror #5
    24dc:	0002c203 	andeq	ip, r2, r3, lsl #4
    24e0:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    24e4:	00000058 	andeq	r0, r0, r8, asr r0
    24e8:	b3070402 	movwlt	r0, #29698	; 0x7402
    24ec:	02000000 	andeq	r0, r0, #0
    24f0:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
    24f4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    24f8:	0000ae07 	andeq	sl, r0, r7, lsl #28
    24fc:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    2500:	00746e69 	rsbseq	r6, r4, r9, ror #28
    2504:	b8070402 	stmdalt	r7, {r1, sl}
    2508:	03000000 	movweq	r0, #0
    250c:	000002c4 	andeq	r0, r0, r4, asr #5
    2510:	4c143003 	ldcmi	0, cr3, [r4], {3}
    2514:	05000000 	streq	r0, [r0, #-0]
    2518:	0000007b 	andeq	r0, r0, fp, ror r0
    251c:	00007b06 	andeq	r7, r0, r6, lsl #22
    2520:	00009c00 	andeq	r9, r0, r0, lsl #24
    2524:	00740700 	rsbseq	r0, r4, r0, lsl #14
    2528:	00010000 	andeq	r0, r1, r0
    252c:	f4048808 	vst2.8	{d8-d9}, [r4], r8
    2530:	02880901 	addeq	r0, r8, #16384	; 0x4000
    2534:	43090000 	movwmi	r0, #36864	; 0x9000
    2538:	f6040052 			; <UNDEFINED> instruction: 0xf6040052
    253c:	00871101 	addeq	r1, r7, r1, lsl #2
    2540:	23020000 	movwcs	r0, #8192	; 0x2000
    2544:	02820a00 	addeq	r0, r2, #0, 20
    2548:	f7040000 			; <UNDEFINED> instruction: 0xf7040000
    254c:	00871101 	addeq	r1, r7, r1, lsl #2
    2550:	23020000 	movwcs	r0, #8192	; 0x2000
    2554:	02850a04 	addeq	r0, r5, #4, 20	; 0x4000
    2558:	f8040000 			; <UNDEFINED> instruction: 0xf8040000
    255c:	00871101 	addeq	r1, r7, r1, lsl #2
    2560:	23020000 	movwcs	r0, #8192	; 0x2000
    2564:	49430908 	stmdbmi	r3, {r3, r8, fp}^
    2568:	f9040052 			; <UNDEFINED> instruction: 0xf9040052
    256c:	00871101 	addeq	r1, r7, r1, lsl #2
    2570:	23020000 	movwcs	r0, #8192	; 0x2000
    2574:	01660a0c 	cmneq	r6, ip, lsl #20
    2578:	fa040000 	blx	102580 <_Min_Heap_Size+0x101d80>
    257c:	00871101 	addeq	r1, r7, r1, lsl #2
    2580:	23020000 	movwcs	r0, #8192	; 0x2000
    2584:	07170a10 			; <UNDEFINED> instruction: 0x07170a10
    2588:	fb040000 	blx	102592 <_Min_Heap_Size+0x101d92>
    258c:	00871101 	addeq	r1, r7, r1, lsl #2
    2590:	23020000 	movwcs	r0, #8192	; 0x2000
    2594:	067c0a14 			; <UNDEFINED> instruction: 0x067c0a14
    2598:	fc040000 	stc2	0, cr0, [r4], {-0}
    259c:	00871101 	addeq	r1, r7, r1, lsl #2
    25a0:	23020000 	movwcs	r0, #8192	; 0x2000
    25a4:	050f0a18 	streq	r0, [pc, #-2584]	; 1b94 <_Min_Heap_Size+0x1394>
    25a8:	fd040000 	stc2	0, cr0, [r4, #-0]
    25ac:	007b1101 	rsbseq	r1, fp, r1, lsl #2
    25b0:	23020000 	movwcs	r0, #8192	; 0x2000
    25b4:	04fa0a1c 	ldrbteq	r0, [sl], #2588	; 0xa1c
    25b8:	fe040000 	cdp2	0, 0, cr0, cr4, cr0, {0}
    25bc:	00871101 	addeq	r1, r7, r1, lsl #2
    25c0:	23020000 	movwcs	r0, #8192	; 0x2000
    25c4:	01f90a20 	mvnseq	r0, r0, lsr #20
    25c8:	ff040000 			; <UNDEFINED> instruction: 0xff040000
    25cc:	00871101 	addeq	r1, r7, r1, lsl #2
    25d0:	23020000 	movwcs	r0, #8192	; 0x2000
    25d4:	05190a24 	ldreq	r0, [r9, #-2596]	; 0xfffff5dc
    25d8:	00040000 	andeq	r0, r4, r0
    25dc:	008c1102 	addeq	r1, ip, r2, lsl #2
    25e0:	23020000 	movwcs	r0, #8192	; 0x2000
    25e4:	08ae0a28 	stmiaeq	lr!, {r3, r5, r9, fp}
    25e8:	01040000 	mrseq	r0, (UNDEF: 4)
    25ec:	00871102 	addeq	r1, r7, r2, lsl #2
    25f0:	23020000 	movwcs	r0, #8192	; 0x2000
    25f4:	07870a30 			; <UNDEFINED> instruction: 0x07870a30
    25f8:	02040000 	andeq	r0, r4, #0
    25fc:	00871102 	addeq	r1, r7, r2, lsl #2
    2600:	23020000 	movwcs	r0, #8192	; 0x2000
    2604:	049c0a34 	ldreq	r0, [ip], #2612	; 0xa34
    2608:	03040000 	movweq	r0, #16384	; 0x4000
    260c:	00871102 	addeq	r1, r7, r2, lsl #2
    2610:	23020000 	movwcs	r0, #8192	; 0x2000
    2614:	05230a38 	streq	r0, [r3, #-2616]!	; 0xfffff5c8
    2618:	04040000 	streq	r0, [r4], #-0
    261c:	007b1102 	rsbseq	r1, fp, r2, lsl #2
    2620:	23020000 	movwcs	r0, #8192	; 0x2000
    2624:	06b70a3c 			; <UNDEFINED> instruction: 0x06b70a3c
    2628:	05040000 	streq	r0, [r4, #-0]
    262c:	00871102 	addeq	r1, r7, r2, lsl #2
    2630:	23020000 	movwcs	r0, #8192	; 0x2000
    2634:	06740a40 	ldrbteq	r0, [r4], -r0, asr #20
    2638:	06040000 	streq	r0, [r4], -r0
    263c:	00871102 	addeq	r1, r7, r2, lsl #2
    2640:	23020000 	movwcs	r0, #8192	; 0x2000
    2644:	052d0a44 	streq	r0, [sp, #-2628]!	; 0xfffff5bc
    2648:	07040000 	streq	r0, [r4, -r0]
    264c:	008c1102 	addeq	r1, ip, r2, lsl #2
    2650:	23020000 	movwcs	r0, #8192	; 0x2000
    2654:	012b0a48 			; <UNDEFINED> instruction: 0x012b0a48
    2658:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    265c:	00871102 	addeq	r1, r7, r2, lsl #2
    2660:	23020000 	movwcs	r0, #8192	; 0x2000
    2664:	04d60a50 	ldrbeq	r0, [r6], #2640	; 0xa50
    2668:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    266c:	00871102 	addeq	r1, r7, r2, lsl #2
    2670:	23020000 	movwcs	r0, #8192	; 0x2000
    2674:	06420a54 			; <UNDEFINED> instruction: 0x06420a54
    2678:	0a040000 	beq	102680 <_Min_Heap_Size+0x101e80>
    267c:	00871102 	addeq	r1, r7, r2, lsl #2
    2680:	23020000 	movwcs	r0, #8192	; 0x2000
    2684:	05370a58 	ldreq	r0, [r7, #-2648]!	; 0xfffff5a8
    2688:	0b040000 	bleq	102690 <_Min_Heap_Size+0x101e90>
    268c:	007b1102 	rsbseq	r1, fp, r2, lsl #2
    2690:	23020000 	movwcs	r0, #8192	; 0x2000
    2694:	001b0a5c 	andseq	r0, fp, ip, asr sl
    2698:	0c040000 	stceq	0, cr0, [r4], {-0}
    269c:	00871102 	addeq	r1, r7, r2, lsl #2
    26a0:	23020000 	movwcs	r0, #8192	; 0x2000
    26a4:	03ee0a60 	mvneq	r0, #96, 20	; 0x60000
    26a8:	0d040000 	stceq	0, cr0, [r4, #-0]
    26ac:	00871102 	addeq	r1, r7, r2, lsl #2
    26b0:	23020000 	movwcs	r0, #8192	; 0x2000
    26b4:	05410a64 	strbeq	r0, [r1, #-2660]	; 0xfffff59c
    26b8:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    26bc:	008c1102 	addeq	r1, ip, r2, lsl #2
    26c0:	23020000 	movwcs	r0, #8192	; 0x2000
    26c4:	08090a68 	stmdaeq	r9, {r3, r5, r6, r9, fp}
    26c8:	0f040000 	svceq	0x00040000
    26cc:	00871102 	addeq	r1, r7, r2, lsl #2
    26d0:	23020000 	movwcs	r0, #8192	; 0x2000
    26d4:	53430970 	movtpl	r0, #14704	; 0x3970
    26d8:	10040052 	andne	r0, r4, r2, asr r0
    26dc:	00871102 	addeq	r1, r7, r2, lsl #2
    26e0:	23020000 	movwcs	r0, #8192	; 0x2000
    26e4:	054b0a74 	strbeq	r0, [fp, #-2676]	; 0xfffff58c
    26e8:	11040000 	mrsne	r0, (UNDEF: 4)
    26ec:	008c1102 	addeq	r1, ip, r2, lsl #2
    26f0:	23020000 	movwcs	r0, #8192	; 0x2000
    26f4:	07d80a78 			; <UNDEFINED> instruction: 0x07d80a78
    26f8:	12040000 	andne	r0, r4, #0
    26fc:	00871102 	addeq	r1, r7, r2, lsl #2
    2700:	23030000 	movwcs	r0, #12288	; 0x3000
    2704:	810a0180 	smlabbhi	sl, r0, r1, r0
    2708:	04000003 	streq	r0, [r0], #-3
    270c:	87110213 			; <UNDEFINED> instruction: 0x87110213
    2710:	03000000 	movweq	r0, #0
    2714:	00018423 	andeq	r8, r1, r3, lsr #8
    2718:	0001cd0b 	andeq	ip, r1, fp, lsl #26
    271c:	02140400 	andseq	r0, r4, #0, 8
    2720:	00009c03 	andeq	r9, r0, r3, lsl #24
    2724:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    2728:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
    272c:	092a010c 	stmdbeq	sl!, {r2, r3, r8}
    2730:	2a010000 	bcs	42738 <_Min_Heap_Size+0x41f38>
    2734:	08280106 	stmdaeq	r8!, {r1, r2, r8}
    2738:	08740800 	ldmdaeq	r4!, {fp}^
    273c:	090a0800 	stmdbeq	sl, {fp}
    2740:	0d010000 	stceq	0, cr0, [r1, #-0]
    2744:	0800082a 	stmdaeq	r0, {r1, r3, r5, fp}
    2748:	08000842 	stmdaeq	r0, {r1, r6, fp}
    274c:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2750:	0001b60e 	andeq	fp, r1, lr, lsl #12
    2754:	032e0100 			; <UNDEFINED> instruction: 0x032e0100
    2758:	00000087 	andeq	r0, r0, r7, lsl #1
    275c:	00749102 	rsbseq	r9, r4, r2, lsl #2
    2760:	0008420d 	andeq	r4, r8, sp, lsl #4
    2764:	00085608 	andeq	r5, r8, r8, lsl #12
    2768:	0002ed08 	andeq	lr, r2, r8, lsl #26
    276c:	01b60e00 			; <UNDEFINED> instruction: 0x01b60e00
    2770:	2f010000 	svccs	0x00010000
    2774:	00008703 	andeq	r8, r0, r3, lsl #14
    2778:	78910200 	ldmvc	r1, {r9}
    277c:	08560f00 	ldmdaeq	r6, {r8, r9, sl, fp}^
    2780:	086a0800 	stmdaeq	sl!, {fp}^
    2784:	b60e0800 	strlt	r0, [lr], -r0, lsl #16
    2788:	01000001 	tsteq	r0, r1
    278c:	00870330 	addeq	r0, r7, r0, lsr r3
    2790:	91020000 	mrsls	r0, (UNDEF: 2)
    2794:	0000007c 	andeq	r0, r0, ip, ror r0
    2798:	00000d64 	andeq	r0, r0, r4, ror #26
    279c:	07950002 	ldreq	r0, [r5, r2]
    27a0:	01040000 	mrseq	r0, (UNDEF: 4)
    27a4:	00000588 	andeq	r0, r0, r8, lsl #11
    27a8:	0012150c 	andseq	r1, r2, ip, lsl #10
    27ac:	00086d00 	andeq	r6, r8, r0, lsl #26
    27b0:	00018000 	andeq	r8, r1, r0
	...
    27bc:	00107800 	andseq	r7, r0, r0, lsl #16
    27c0:	01050200 	mrseq	r0, SP_usr
    27c4:	0000023c 	andeq	r0, r0, ip, lsr r2
    27c8:	3c014204 	sfmcc	f4, 4, [r1], {4}
    27cc:	03000002 	movweq	r0, #2
    27d0:	00000f46 	andeq	r0, r0, r6, asr #30
    27d4:	0f750372 	svceq	0x00750372
    27d8:	03740000 	cmneq	r4, #0
    27dc:	00000fd5 	ldrdeq	r0, [r0], -r5
    27e0:	0e7c0375 	mrceq	3, 3, r0, cr12, cr5, {3}
    27e4:	03760000 	cmneq	r6, #0
    27e8:	00001027 	andeq	r1, r0, r7, lsr #32
    27ec:	11a2037b 			; <UNDEFINED> instruction: 0x11a2037b
    27f0:	037c0000 	cmneq	ip, #0
    27f4:	00001280 	andeq	r1, r0, r0, lsl #5
    27f8:	0dee037e 	stcleq	3, cr0, [lr, #504]!	; 0x1f8
    27fc:	047f0000 	ldrbteq	r0, [pc], #-0	; 2804 <_Min_Heap_Size+0x2004>
    2800:	00000f5a 	andeq	r0, r0, sl, asr pc
    2804:	11460400 	cmpne	r6, r0, lsl #8
    2808:	04010000 	streq	r0, [r1], #-0
    280c:	00000f8b 	andeq	r0, r0, fp, lsl #31
    2810:	0ce90402 	cfstrdeq	mvd0, [r9], #8
    2814:	04030000 	streq	r0, [r3], #-0
    2818:	00000d53 	andeq	r0, r0, r3, asr sp
    281c:	11d50404 	bicsne	r0, r5, r4, lsl #8
    2820:	04050000 	streq	r0, [r5], #-0
    2824:	00001173 	andeq	r1, r0, r3, ror r1
    2828:	0ee60406 	cdpeq	4, 14, cr0, cr6, cr6, {0}
    282c:	04070000 	streq	r0, [r7], #-0
    2830:	00000cf7 	strdeq	r0, [r0], -r7
    2834:	12750408 	rsbsne	r0, r5, #8, 8	; 0x8000000
    2838:	04090000 	streq	r0, [r9], #-0
    283c:	00001062 	andeq	r1, r0, r2, rrx
    2840:	10be040a 	adcsne	r0, lr, sl, lsl #8
    2844:	040b0000 	streq	r0, [fp], #-0
    2848:	00001088 	andeq	r1, r0, r8, lsl #1
    284c:	0e18040c 	cfmulseq	mvf0, mvf8, mvf12
    2850:	040d0000 	streq	r0, [sp], #-0
    2854:	000011de 	ldrdeq	r1, [r0], -lr
    2858:	117e040e 	cmnne	lr, lr, lsl #8
    285c:	040f0000 	streq	r0, [pc], #-0	; 2864 <_Min_Heap_Size+0x2064>
    2860:	00000efe 	strdeq	r0, [r0], -lr
    2864:	0d020410 	cfstrseq	mvf0, [r2, #-64]	; 0xffffffc0
    2868:	04110000 	ldreq	r0, [r1], #-0
    286c:	0000113d 	andeq	r1, r0, sp, lsr r1
    2870:	0ef10412 	mrceq	4, 7, r0, cr1, cr2, {0}
    2874:	04130000 	ldreq	r0, [r3], #-0
    2878:	00000e9a 	muleq	r0, sl, lr
    287c:	12430414 	subne	r0, r3, #20, 8	; 0x14000000
    2880:	04150000 	ldreq	r0, [r5], #-0
    2884:	00000f9b 	muleq	r0, fp, pc	; <UNPREDICTABLE>
    2888:	12510416 	subsne	r0, r1, #369098752	; 0x16000000
    288c:	04170000 	ldreq	r0, [r7], #-0
    2890:	00000fee 	andeq	r0, r0, lr, ror #31
    2894:	12020418 	andne	r0, r2, #24, 8	; 0x18000000
    2898:	04190000 	ldreq	r0, [r9], #-0
    289c:	00000dd6 	ldrdeq	r0, [r0], -r6
    28a0:	0ed9041a 	mrceq	4, 6, r0, cr9, cr10, {0}
    28a4:	041b0000 	ldreq	r0, [fp], #-0
    28a8:	00000d5e 	andeq	r0, r0, lr, asr sp
    28ac:	10fb041c 	rscsne	r0, fp, ip, lsl r4
    28b0:	041d0000 	ldreq	r0, [sp], #-0
    28b4:	00000ea8 	andeq	r0, r0, r8, lsr #29
    28b8:	0ecc041e 	mcreq	4, 6, r0, cr12, cr14, {0}
    28bc:	041f0000 	ldreq	r0, [pc], #-0	; 28c4 <_Min_Heap_Size+0x20c4>
    28c0:	00000e4c 	andeq	r0, r0, ip, asr #28
    28c4:	107b0420 	rsbsne	r0, fp, r0, lsr #8
    28c8:	04210000 	strteq	r0, [r1], #-0
    28cc:	00000fc0 	andeq	r0, r0, r0, asr #31
    28d0:	101d0422 	andsne	r0, sp, r2, lsr #8
    28d4:	04230000 	strteq	r0, [r3], #-0
    28d8:	00000d93 	muleq	r0, r3, sp
    28dc:	11050424 	tstne	r5, r4, lsr #8
    28e0:	04250000 	strteq	r0, [r5], #-0
    28e4:	00000eb2 			; <UNDEFINED> instruction: 0x00000eb2
    28e8:	0dfb0426 	cfldrdeq	mvd0, [fp, #152]!	; 0x98
    28ec:	04270000 	strteq	r0, [r7], #-0
    28f0:	000010ec 	andeq	r1, r0, ip, ror #1
    28f4:	10d00428 	sbcsne	r0, r0, r8, lsr #8
    28f8:	04290000 	strteq	r0, [r9], #-0
    28fc:	00001051 	andeq	r1, r0, r1, asr r0
    2900:	0d9d042a 	cfldrseq	mvf0, [sp, #168]	; 0xa8
    2904:	042b0000 	strteq	r0, [fp], #-0
    2908:	00000d14 	andeq	r0, r0, r4, lsl sp
    290c:	0f10042c 	svceq	0x0010042c
    2910:	042d0000 	strteq	r0, [sp], #-0
    2914:	0000125e 	andeq	r1, r0, lr, asr r2
    2918:	129f042e 	addsne	r0, pc, #771751936	; 0x2e000000
    291c:	042f0000 	strteq	r0, [pc], #-0	; 2924 <_Min_Heap_Size+0x2124>
    2920:	00001156 	andeq	r1, r0, r6, asr r1
    2924:	126b0430 	rsbne	r0, fp, #48, 8	; 0x30000000
    2928:	04310000 	ldrteq	r0, [r1], #-0
    292c:	00000e72 	andeq	r0, r0, r2, ror lr
    2930:	0d490432 	cfstrdeq	mvd0, [r9, #-200]	; 0xffffff38
    2934:	04330000 	ldrteq	r0, [r3], #-0
    2938:	0000103c 	andeq	r1, r0, ip, lsr r0
    293c:	0fe30434 	svceq	0x00e30434
    2940:	04350000 	ldrteq	r0, [r5], #-0
    2944:	0000106d 	andeq	r1, r0, sp, rrx
    2948:	10010436 	andne	r0, r1, r6, lsr r4
    294c:	04370000 	ldrteq	r0, [r7], #-0
    2950:	00000fa9 	andeq	r0, r0, r9, lsr #31
    2954:	0d370438 	cfldrseq	mvf0, [r7, #-224]!	; 0xffffff20
    2958:	04390000 	ldrteq	r0, [r9], #-0
    295c:	000012b1 			; <UNDEFINED> instruction: 0x000012b1
    2960:	109a043a 	addsne	r0, sl, sl, lsr r4
    2964:	043b0000 	ldrteq	r0, [fp], #-0
    2968:	00000e2a 	andeq	r0, r0, sl, lsr #28
    296c:	10ac043c 	adcne	r0, ip, ip, lsr r4
    2970:	043f0000 	ldrteq	r0, [pc], #-0	; 2978 <_Min_Heap_Size+0x2178>
    2974:	00000d68 	andeq	r0, r0, r8, ror #26
    2978:	112f0440 			; <UNDEFINED> instruction: 0x112f0440
    297c:	04410000 	strbeq	r0, [r1], #-0
    2980:	00000e64 	andeq	r0, r0, r4, ror #28
    2984:	0f3a0442 	svceq	0x003a0442
    2988:	04430000 	strbeq	r0, [r3], #-0
    298c:	00000dc4 	andeq	r0, r0, r4, asr #27
    2990:	11900444 	orrsne	r0, r0, r4, asr #8
    2994:	04450000 	strbeq	r0, [r5], #-0
    2998:	00000f28 	andeq	r0, r0, r8, lsr #30
    299c:	0d760446 	cfldrdeq	mvd0, [r6, #-280]!	; 0xfffffee8
    29a0:	04470000 	strbeq	r0, [r7], #-0
    29a4:	000011b4 			; <UNDEFINED> instruction: 0x000011b4
    29a8:	10df0448 	sbcsne	r0, pc, r8, asr #8
    29ac:	04490000 	strbeq	r0, [r9], #-0
    29b0:	00001229 	andeq	r1, r0, r9, lsr #4
    29b4:	128c044a 	addne	r0, ip, #1241513984	; 0x4a000000
    29b8:	044b0000 	strbeq	r0, [fp], #-0
    29bc:	00000f64 	andeq	r0, r0, r4, ror #30
    29c0:	100b044c 	andne	r0, fp, ip, asr #8
    29c4:	044d0000 	strbeq	r0, [sp], #-0
    29c8:	00001126 	andeq	r1, r0, r6, lsr #2
    29cc:	10330450 	eorsne	r0, r3, r0, asr r4
    29d0:	00510000 	subseq	r0, r1, r0
    29d4:	76060105 	strvc	r0, [r6], -r5, lsl #2
    29d8:	06000005 	streq	r0, [r0], -r5
    29dc:	00000066 	andeq	r0, r0, r6, rrx
    29e0:	4f182b02 	svcmi	0x00182b02
    29e4:	05000002 	streq	r0, [r0, #-2]
    29e8:	05740801 	ldrbeq	r0, [r4, #-2049]!	; 0xfffff7ff
    29ec:	02050000 	andeq	r0, r5, #0
    29f0:	0003fd05 	andeq	pc, r3, r5, lsl #26
    29f4:	06f50600 	ldrbteq	r0, [r5], r0, lsl #12
    29f8:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
    29fc:	00026919 	andeq	r6, r2, r9, lsl r9
    2a00:	07020500 	streq	r0, [r2, -r0, lsl #10]
    2a04:	0000078f 	andeq	r0, r0, pc, lsl #15
    2a08:	ec050405 	cfstrs	mvf0, [r5], {5}
    2a0c:	06000002 	streq	r0, [r0], -r2
    2a10:	000002c2 	andeq	r0, r0, r2, asr #5
    2a14:	83194f02 	tsthi	r9, #2, 30
    2a18:	05000002 	streq	r0, [r0, #-2]
    2a1c:	00b30704 	adcseq	r0, r3, r4, lsl #14
    2a20:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    2a24:	0002e705 	andeq	lr, r2, r5, lsl #14
    2a28:	07080500 	streq	r0, [r8, -r0, lsl #10]
    2a2c:	000000ae 	andeq	r0, r0, lr, lsr #1
    2a30:	69050407 	stmdbvs	r5, {r0, r1, r2, sl}
    2a34:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
    2a38:	00b80704 	adcseq	r0, r8, r4, lsl #14
    2a3c:	68060000 	stmdavs	r6, {}	; <UNPREDICTABLE>
    2a40:	03000000 	movweq	r0, #0
    2a44:	02431318 	subeq	r1, r3, #24, 6	; 0x60000000
    2a48:	a6080000 	strge	r0, [r8], -r0
    2a4c:	06000002 	streq	r0, [r0], -r2
    2a50:	000006f7 	strdeq	r0, [r0], -r7
    2a54:	5d142403 	cfldrspl	mvf2, [r4, #-12]
    2a58:	09000002 	stmdbeq	r0, {r1}
    2a5c:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    2a60:	0002c406 	andeq	ip, r2, r6, lsl #8
    2a64:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    2a68:	00000277 	andeq	r0, r0, r7, ror r2
    2a6c:	0002c809 	andeq	ip, r2, r9, lsl #16
    2a70:	02c80a00 	sbceq	r0, r8, #0, 20
    2a74:	02e90000 	rsceq	r0, r9, #0
    2a78:	9f0b0000 	svcls	0x000b0000
    2a7c:	01000002 	tsteq	r0, r2
    2a80:	04180c00 	ldreq	r0, [r8], #-3072	; 0xfffff400
    2a84:	53090144 	movwpl	r0, #37188	; 0x9144
    2a88:	0d000003 	stceq	0, cr0, [r0, #-12]
    2a8c:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    2a90:	d4110146 	ldrle	r0, [r1], #-326	; 0xfffffeba
    2a94:	02000002 	andeq	r0, r0, #2
    2a98:	550e0023 	strpl	r0, [lr, #-35]	; 0xffffffdd
    2a9c:	04000007 	streq	r0, [r0], #-7
    2aa0:	d4110147 	ldrle	r0, [r1], #-327	; 0xfffffeb9
    2aa4:	02000002 	andeq	r0, r0, #2
    2aa8:	500d0423 	andpl	r0, sp, r3, lsr #8
    2aac:	04005241 	streq	r5, [r0], #-577	; 0xfffffdbf
    2ab0:	d4110148 	ldrle	r0, [r1], #-328	; 0xfffffeb8
    2ab4:	02000002 	andeq	r0, r0, #2
    2ab8:	420e0823 	andmi	r0, lr, #2293760	; 0x230000
    2abc:	04000000 	streq	r0, [r0], #-0
    2ac0:	d4110149 	ldrle	r0, [r1], #-329	; 0xfffffeb7
    2ac4:	02000002 	andeq	r0, r0, #2
    2ac8:	ae0e0c23 	cdpge	12, 0, cr0, cr14, cr3, {1}
    2acc:	04000007 	streq	r0, [r0], #-7
    2ad0:	d411014a 	ldrle	r0, [r1], #-330	; 0xfffffeb6
    2ad4:	02000002 	andeq	r0, r0, #2
    2ad8:	460d1023 	strmi	r1, [sp], -r3, lsr #32
    2adc:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    2ae0:	d411014b 	ldrle	r0, [r1], #-331	; 0xfffffeb5
    2ae4:	02000002 	andeq	r0, r0, #2
    2ae8:	0f001423 	svceq	0x00001423
    2aec:	00000774 	andeq	r0, r0, r4, ror r7
    2af0:	03014c04 	movweq	r4, #7172	; 0x1c04
    2af4:	000002e9 	andeq	r0, r0, r9, ror #5
    2af8:	ae04280c 	cdpge	8, 0, cr2, cr4, cr12, {0}
    2afc:	03fb0901 	mvnseq	r0, #16384	; 0x4000
    2b00:	3d0e0000 	stccc	0, cr0, [lr, #-0]
    2b04:	04000012 	streq	r0, [r0], #-18	; 0xffffffee
    2b08:	d41101b0 	ldrle	r0, [r1], #-432	; 0xfffffe50
    2b0c:	02000002 	andeq	r0, r0, #2
    2b10:	4f0e0023 	svcmi	0x000e0023
    2b14:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    2b18:	d41101b1 	ldrle	r0, [r1], #-433	; 0xfffffe4f
    2b1c:	02000002 	andeq	r0, r0, #2
    2b20:	cd0e0423 	cfstrsgt	mvf0, [lr, #-140]	; 0xffffff74
    2b24:	0400000f 	streq	r0, [r0], #-15
    2b28:	d41101b2 	ldrle	r0, [r1], #-434	; 0xfffffe4e
    2b2c:	02000002 	andeq	r0, r0, #2
    2b30:	170e0823 	strne	r0, [lr, -r3, lsr #16]
    2b34:	04000010 	streq	r0, [r0], #-16
    2b38:	d41101b3 	ldrle	r0, [r1], #-435	; 0xfffffe4d
    2b3c:	02000002 	andeq	r0, r0, #2
    2b40:	490d0c23 	stmdbmi	sp, {r0, r1, r5, sl, fp}
    2b44:	04005244 	streq	r5, [r0], #-580	; 0xfffffdbc
    2b48:	d41101b4 	ldrle	r0, [r1], #-436	; 0xfffffe4c
    2b4c:	02000002 	andeq	r0, r0, #2
    2b50:	4f0d1023 	svcmi	0x000d1023
    2b54:	04005244 	streq	r5, [r0], #-580	; 0xfffffdbc
    2b58:	d41101b5 	ldrle	r0, [r1], #-437	; 0xfffffe4b
    2b5c:	02000002 	andeq	r0, r0, #2
    2b60:	f00e1423 			; <UNDEFINED> instruction: 0xf00e1423
    2b64:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    2b68:	d41101b6 	ldrle	r0, [r1], #-438	; 0xfffffe4a
    2b6c:	02000002 	andeq	r0, r0, #2
    2b70:	bb0e1823 	bllt	388c04 <_Min_Heap_Size+0x388404>
    2b74:	0400000f 	streq	r0, [r0], #-15
    2b78:	d41101b7 	ldrle	r0, [r1], #-439	; 0xfffffe49
    2b7c:	02000002 	andeq	r0, r0, #2
    2b80:	410d1c23 	tstmi	sp, r3, lsr #24
    2b84:	04005246 	streq	r5, [r0], #-582	; 0xfffffdba
    2b88:	0b1101b8 	bleq	443270 <_Min_Heap_Size+0x442a70>
    2b8c:	02000004 	andeq	r0, r0, #4
    2b90:	0a002023 	beq	ac24 <_Min_Heap_Size+0xa424>
    2b94:	000002d4 	ldrdeq	r0, [r0], -r4
    2b98:	0000040b 	andeq	r0, r0, fp, lsl #8
    2b9c:	00029f0b 	andeq	r9, r2, fp, lsl #30
    2ba0:	09000100 	stmdbeq	r0, {r8}
    2ba4:	000003fb 	strdeq	r0, [r0], -fp
    2ba8:	0011f50f 	andseq	pc, r1, pc, lsl #10
    2bac:	01b90400 			; <UNDEFINED> instruction: 0x01b90400
    2bb0:	00036003 	andeq	r6, r3, r3
    2bb4:	04880c00 	streq	r0, [r8], #3072	; 0xc00
    2bb8:	090901f4 	stmdbeq	r9, {r2, r4, r5, r6, r7, r8}
    2bbc:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    2bc0:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    2bc4:	d41101f6 	ldrle	r0, [r1], #-502	; 0xfffffe0a
    2bc8:	02000002 	andeq	r0, r0, #2
    2bcc:	820e0023 	andhi	r0, lr, #35	; 0x23
    2bd0:	04000002 	streq	r0, [r0], #-2
    2bd4:	d41101f7 	ldrle	r0, [r1], #-503	; 0xfffffe09
    2bd8:	02000002 	andeq	r0, r0, #2
    2bdc:	850e0423 	strhi	r0, [lr, #-1059]	; 0xfffffbdd
    2be0:	04000002 	streq	r0, [r0], #-2
    2be4:	d41101f8 	ldrle	r0, [r1], #-504	; 0xfffffe08
    2be8:	02000002 	andeq	r0, r0, #2
    2bec:	430d0823 	movwmi	r0, #55331	; 0xd823
    2bf0:	04005249 	streq	r5, [r0], #-585	; 0xfffffdb7
    2bf4:	d41101f9 	ldrle	r0, [r1], #-505	; 0xfffffe07
    2bf8:	02000002 	andeq	r0, r0, #2
    2bfc:	660e0c23 	strvs	r0, [lr], -r3, lsr #24
    2c00:	04000001 	streq	r0, [r0], #-1
    2c04:	d41101fa 	ldrle	r0, [r1], #-506	; 0xfffffe06
    2c08:	02000002 	andeq	r0, r0, #2
    2c0c:	170e1023 	strne	r1, [lr, -r3, lsr #32]
    2c10:	04000007 	streq	r0, [r0], #-7
    2c14:	d41101fb 	ldrle	r0, [r1], #-507	; 0xfffffe05
    2c18:	02000002 	andeq	r0, r0, #2
    2c1c:	7c0e1423 	cfstrsvc	mvf1, [lr], {35}	; 0x23
    2c20:	04000006 	streq	r0, [r0], #-6
    2c24:	d41101fc 	ldrle	r0, [r1], #-508	; 0xfffffe04
    2c28:	02000002 	andeq	r0, r0, #2
    2c2c:	0f0e1823 	svceq	0x000e1823
    2c30:	04000005 	streq	r0, [r0], #-5
    2c34:	c81101fd 	ldmdagt	r1, {r0, r2, r3, r4, r5, r6, r7, r8}
    2c38:	02000002 	andeq	r0, r0, #2
    2c3c:	fa0e1c23 	blx	389cd0 <_Min_Heap_Size+0x3894d0>
    2c40:	04000004 	streq	r0, [r0], #-4
    2c44:	d41101fe 	ldrle	r0, [r1], #-510	; 0xfffffe02
    2c48:	02000002 	andeq	r0, r0, #2
    2c4c:	f90e2023 			; <UNDEFINED> instruction: 0xf90e2023
    2c50:	04000001 	streq	r0, [r0], #-1
    2c54:	d41101ff 	ldrle	r0, [r1], #-511	; 0xfffffe01
    2c58:	02000002 	andeq	r0, r0, #2
    2c5c:	190e2423 	stmdbne	lr, {r0, r1, r5, sl, sp}
    2c60:	04000005 	streq	r0, [r0], #-5
    2c64:	d9110200 	ldmdble	r1, {r9}
    2c68:	02000002 	andeq	r0, r0, #2
    2c6c:	ae0e2823 	cdpge	8, 0, cr2, cr14, cr3, {1}
    2c70:	04000008 	streq	r0, [r0], #-8
    2c74:	d4110201 	ldrle	r0, [r1], #-513	; 0xfffffdff
    2c78:	02000002 	andeq	r0, r0, #2
    2c7c:	870e3023 	strhi	r3, [lr, -r3, lsr #32]
    2c80:	04000007 	streq	r0, [r0], #-7
    2c84:	d4110202 	ldrle	r0, [r1], #-514	; 0xfffffdfe
    2c88:	02000002 	andeq	r0, r0, #2
    2c8c:	9c0e3423 	cfstrsls	mvf3, [lr], {35}	; 0x23
    2c90:	04000004 	streq	r0, [r0], #-4
    2c94:	d4110203 	ldrle	r0, [r1], #-515	; 0xfffffdfd
    2c98:	02000002 	andeq	r0, r0, #2
    2c9c:	230e3823 	movwcs	r3, #59427	; 0xe823
    2ca0:	04000005 	streq	r0, [r0], #-5
    2ca4:	c8110204 	ldmdagt	r1, {r2, r9}
    2ca8:	02000002 	andeq	r0, r0, #2
    2cac:	b70e3c23 	strlt	r3, [lr, -r3, lsr #24]
    2cb0:	04000006 	streq	r0, [r0], #-6
    2cb4:	d4110205 	ldrle	r0, [r1], #-517	; 0xfffffdfb
    2cb8:	02000002 	andeq	r0, r0, #2
    2cbc:	740e4023 	strvc	r4, [lr], #-35	; 0xffffffdd
    2cc0:	04000006 	streq	r0, [r0], #-6
    2cc4:	d4110206 	ldrle	r0, [r1], #-518	; 0xfffffdfa
    2cc8:	02000002 	andeq	r0, r0, #2
    2ccc:	2d0e4423 	cfstrscs	mvf4, [lr, #-140]	; 0xffffff74
    2cd0:	04000005 	streq	r0, [r0], #-5
    2cd4:	d9110207 	ldmdble	r1, {r0, r1, r2, r9}
    2cd8:	02000002 	andeq	r0, r0, #2
    2cdc:	2b0e4823 	blcs	394d70 <_Min_Heap_Size+0x394570>
    2ce0:	04000001 	streq	r0, [r0], #-1
    2ce4:	d4110208 	ldrle	r0, [r1], #-520	; 0xfffffdf8
    2ce8:	02000002 	andeq	r0, r0, #2
    2cec:	d60e5023 	strle	r5, [lr], -r3, lsr #32
    2cf0:	04000004 	streq	r0, [r0], #-4
    2cf4:	d4110209 	ldrle	r0, [r1], #-521	; 0xfffffdf7
    2cf8:	02000002 	andeq	r0, r0, #2
    2cfc:	420e5423 	andmi	r5, lr, #587202560	; 0x23000000
    2d00:	04000006 	streq	r0, [r0], #-6
    2d04:	d411020a 	ldrle	r0, [r1], #-522	; 0xfffffdf6
    2d08:	02000002 	andeq	r0, r0, #2
    2d0c:	370e5823 	strcc	r5, [lr, -r3, lsr #16]
    2d10:	04000005 	streq	r0, [r0], #-5
    2d14:	c811020b 	ldmdagt	r1, {r0, r1, r3, r9}
    2d18:	02000002 	andeq	r0, r0, #2
    2d1c:	1b0e5c23 	blne	399db0 <_Min_Heap_Size+0x3995b0>
    2d20:	04000000 	streq	r0, [r0], #-0
    2d24:	d411020c 	ldrle	r0, [r1], #-524	; 0xfffffdf4
    2d28:	02000002 	andeq	r0, r0, #2
    2d2c:	ee0e6023 	cdp	0, 0, cr6, cr14, cr3, {1}
    2d30:	04000003 	streq	r0, [r0], #-3
    2d34:	d411020d 	ldrle	r0, [r1], #-525	; 0xfffffdf3
    2d38:	02000002 	andeq	r0, r0, #2
    2d3c:	410e6423 	tstmi	lr, r3, lsr #8
    2d40:	04000005 	streq	r0, [r0], #-5
    2d44:	d911020e 	ldmdble	r1, {r1, r2, r3, r9}
    2d48:	02000002 	andeq	r0, r0, #2
    2d4c:	090e6823 	stmdbeq	lr, {r0, r1, r5, fp, sp, lr}
    2d50:	04000008 	streq	r0, [r0], #-8
    2d54:	d411020f 	ldrle	r0, [r1], #-527	; 0xfffffdf1
    2d58:	02000002 	andeq	r0, r0, #2
    2d5c:	430d7023 	movwmi	r7, #53283	; 0xd023
    2d60:	04005253 	streq	r5, [r0], #-595	; 0xfffffdad
    2d64:	d4110210 	ldrle	r0, [r1], #-528	; 0xfffffdf0
    2d68:	02000002 	andeq	r0, r0, #2
    2d6c:	4b0e7423 	blmi	39fe00 <_Min_Heap_Size+0x39f600>
    2d70:	04000005 	streq	r0, [r0], #-5
    2d74:	d9110211 	ldmdble	r1, {r0, r4, r9}
    2d78:	02000002 	andeq	r0, r0, #2
    2d7c:	d80e7823 	stmdale	lr, {r0, r1, r5, fp, ip, sp, lr}
    2d80:	04000007 	streq	r0, [r0], #-7
    2d84:	d4110212 	ldrle	r0, [r1], #-530	; 0xfffffdee
    2d88:	03000002 	movweq	r0, #2
    2d8c:	0e018023 	cdpeq	0, 0, cr8, cr1, cr3, {1}
    2d90:	00000381 	andeq	r0, r0, r1, lsl #7
    2d94:	11021304 	tstne	r2, r4, lsl #6
    2d98:	000002d4 	ldrdeq	r0, [r0], -r4
    2d9c:	01842303 	orreq	r2, r4, r3, lsl #6
    2da0:	01cd0f00 	biceq	r0, sp, r0, lsl #30
    2da4:	14040000 	strne	r0, [r4], #-0
    2da8:	041d0302 	ldreq	r0, [sp], #-770	; 0xfffffcfe
    2dac:	1c0c0000 	stcne	0, cr0, [ip], {-0}
    2db0:	09029504 	stmdbeq	r2, {r2, r8, sl, ip, pc}
    2db4:	0000068f 	andeq	r0, r0, pc, lsl #13
    2db8:	0052530d 	subseq	r5, r2, sp, lsl #6
    2dbc:	11029704 	tstne	r2, r4, lsl #14
    2dc0:	000002d4 	ldrdeq	r0, [r0], -r4
    2dc4:	0d002302 	stceq	3, cr2, [r0, #-8]
    2dc8:	04005244 	streq	r5, [r0], #-580	; 0xfffffdbc
    2dcc:	d4110298 	ldrle	r0, [r1], #-664	; 0xfffffd68
    2dd0:	02000002 	andeq	r0, r0, #2
    2dd4:	420d0423 	andmi	r0, sp, #587202560	; 0x23000000
    2dd8:	04005252 	streq	r5, [r0], #-594	; 0xfffffdae
    2ddc:	d4110299 	ldrle	r0, [r1], #-665	; 0xfffffd67
    2de0:	02000002 	andeq	r0, r0, #2
    2de4:	430d0823 	movwmi	r0, #55331	; 0xd823
    2de8:	04003152 	streq	r3, [r0], #-338	; 0xfffffeae
    2dec:	d411029a 	ldrle	r0, [r1], #-666	; 0xfffffd66
    2df0:	02000002 	andeq	r0, r0, #2
    2df4:	430d0c23 	movwmi	r0, #56355	; 0xdc23
    2df8:	04003252 	streq	r3, [r0], #-594	; 0xfffffdae
    2dfc:	d411029b 	ldrle	r0, [r1], #-667	; 0xfffffd65
    2e00:	02000002 	andeq	r0, r0, #2
    2e04:	430d1023 	movwmi	r1, #53283	; 0xd023
    2e08:	04003352 	streq	r3, [r0], #-850	; 0xfffffcae
    2e0c:	d411029c 	ldrle	r0, [r1], #-668	; 0xfffffd64
    2e10:	02000002 	andeq	r0, r0, #2
    2e14:	890e1423 	stmdbhi	lr, {r0, r1, r5, sl, ip}
    2e18:	04000001 	streq	r0, [r0], #-1
    2e1c:	d411029d 	ldrle	r0, [r1], #-669	; 0xfffffd63
    2e20:	02000002 	andeq	r0, r0, #2
    2e24:	0f001823 	svceq	0x00001823
    2e28:	000003e0 	andeq	r0, r0, r0, ror #7
    2e2c:	03029e04 	movweq	r9, #11780	; 0x2e04
    2e30:	00000616 	andeq	r0, r0, r6, lsl r6
    2e34:	bf040805 	svclt	0x00040805
    2e38:	02000006 	andeq	r0, r0, #6
    2e3c:	024f0107 	subeq	r0, pc, #-1073741823	; 0xc0000001
    2e40:	27050000 	strcs	r0, [r5, -r0]
    2e44:	0006ca01 	andeq	ip, r6, r1, lsl #20
    2e48:	034a0400 	movteq	r0, #41984	; 0xa400
    2e4c:	04000000 	streq	r0, [r0], #-0
    2e50:	000006ad 	andeq	r0, r0, sp, lsr #13
    2e54:	08e30401 	stmiaeq	r3!, {r0, sl}^
    2e58:	04020000 	streq	r0, [r2], #-0
    2e5c:	0000032b 	andeq	r0, r0, fp, lsr #6
    2e60:	07020003 	streq	r0, [r2, -r3]
    2e64:	00024f01 	andeq	r4, r2, r1, lsl #30
    2e68:	01320500 	teqeq	r2, r0, lsl #10
    2e6c:	000006e5 	andeq	r0, r0, r5, ror #13
    2e70:	0008d604 	andeq	sp, r8, r4, lsl #12
    2e74:	91040000 	mrsls	r0, (UNDEF: 4)
    2e78:	01000004 	tsteq	r0, r4
    2e7c:	01bd0600 			; <UNDEFINED> instruction: 0x01bd0600
    2e80:	35050000 	strcc	r0, [r5, #-0]
    2e84:	0006ca03 	andeq	ip, r6, r3, lsl #20
    2e88:	06141000 	ldreq	r1, [r4], -r0
    2e8c:	0746092e 	strbeq	r0, [r6, -lr, lsr #18]
    2e90:	50110000 	andspl	r0, r1, r0
    2e94:	06006e69 	streq	r6, [r0], -r9, ror #28
    2e98:	02c80c30 	sbceq	r0, r8, #48, 24	; 0x3000
    2e9c:	23020000 	movwcs	r0, #8192	; 0x2000
    2ea0:	069d1200 	ldreq	r1, [sp], r0, lsl #4
    2ea4:	33060000 	movwcc	r0, #24576	; 0x6000
    2ea8:	0002c80c 	andeq	ip, r2, ip, lsl #16
    2eac:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2eb0:	0010b912 	andseq	fp, r0, r2, lsl r9
    2eb4:	0c360600 	ldceq	6, cr0, [r6], #-0
    2eb8:	000002c8 	andeq	r0, r0, r8, asr #5
    2ebc:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    2ec0:	00000ce3 	andeq	r0, r0, r3, ror #25
    2ec4:	c80c3906 	stmdagt	ip, {r1, r2, r8, fp, ip, sp}
    2ec8:	02000002 	andeq	r0, r0, #2
    2ecc:	47120c23 	ldrmi	r0, [r2, -r3, lsr #24]
    2ed0:	06000010 			; <UNDEFINED> instruction: 0x06000010
    2ed4:	02c80c3c 	sbceq	r0, r8, #60, 24	; 0x3c00
    2ed8:	23020000 	movwcs	r0, #8192	; 0x2000
    2edc:	07060010 	smladeq	r6, r0, r0, r0
    2ee0:	0600000e 	streq	r0, [r0], -lr
    2ee4:	06f1023e 			; <UNDEFINED> instruction: 0x06f1023e
    2ee8:	30100000 	andscc	r0, r0, r0
    2eec:	10093007 	andne	r3, r9, r7
    2ef0:	12000008 	andne	r0, r0, #8
    2ef4:	0000056c 	andeq	r0, r0, ip, ror #10
    2ef8:	c80c3207 	stmdagt	ip, {r0, r1, r2, r9, ip, sp}
    2efc:	02000002 	andeq	r0, r0, #2
    2f00:	cd120023 	ldcgt	0, cr0, [r2, #-140]	; 0xffffff74
    2f04:	07000002 	streq	r0, [r0, -r2]
    2f08:	02c80c35 	sbceq	r0, r8, #13568	; 0x3500
    2f0c:	23020000 	movwcs	r0, #8192	; 0x2000
    2f10:	02021204 	andeq	r1, r2, #4, 4	; 0x40000000
    2f14:	39070000 	stmdbcc	r7, {}	; <UNPREDICTABLE>
    2f18:	0002c80c 	andeq	ip, r2, ip, lsl #16
    2f1c:	08230200 	stmdaeq	r3!, {r9}
    2f20:	00072012 	andeq	r2, r7, r2, lsl r0
    2f24:	0c3c0700 	ldceq	7, cr0, [ip], #-0
    2f28:	000002c8 	andeq	r0, r0, r8, asr #5
    2f2c:	120c2302 	andne	r2, ip, #134217728	; 0x8000000
    2f30:	000007b3 			; <UNDEFINED> instruction: 0x000007b3
    2f34:	c80c3f07 	stmdagt	ip, {r0, r1, r2, r8, r9, sl, fp, ip, sp}
    2f38:	02000002 	andeq	r0, r0, #2
    2f3c:	cf121023 	svcgt	0x00121023
    2f40:	07000003 	streq	r0, [r0, -r3]
    2f44:	02c80c42 	sbceq	r0, r8, #16896	; 0x4200
    2f48:	23020000 	movwcs	r0, #8192	; 0x2000
    2f4c:	069d1214 			; <UNDEFINED> instruction: 0x069d1214
    2f50:	45070000 	strmi	r0, [r7, #-0]
    2f54:	0002c80c 	andeq	ip, r2, ip, lsl #16
    2f58:	18230200 	stmdane	r3!, {r9}
    2f5c:	00221b12 	eoreq	r1, r2, r2, lsl fp
    2f60:	0c4a0700 	mcrreq	7, 0, r0, sl, cr0
    2f64:	000002c8 	andeq	r0, r0, r8, asr #5
    2f68:	121c2302 	andsne	r2, ip, #134217728	; 0x8000000
    2f6c:	00000699 	muleq	r0, r9, r6
    2f70:	c80c4d07 	stmdagt	ip, {r0, r1, r2, r8, sl, fp, lr}
    2f74:	02000002 	andeq	r0, r0, #2
    2f78:	cb122023 	blgt	48b00c <_Min_Heap_Size+0x48a80c>
    2f7c:	07000006 	streq	r0, [r0, -r6]
    2f80:	02c80c52 	sbceq	r0, r8, #20992	; 0x5200
    2f84:	23020000 	movwcs	r0, #8192	; 0x2000
    2f88:	02151224 	andseq	r1, r5, #36, 4	; 0x40000002
    2f8c:	55070000 	strpl	r0, [r7, #-0]
    2f90:	0002c80c 	andeq	ip, r2, ip, lsl #16
    2f94:	28230200 	stmdacs	r3!, {r9}
    2f98:	00072712 	andeq	r2, r7, r2, lsl r7
    2f9c:	0c5b0700 	mrrceq	7, 0, r0, fp, cr0
    2fa0:	000002c8 	andeq	r0, r0, r8, asr #5
    2fa4:	002c2302 	eoreq	r2, ip, r2, lsl #6
    2fa8:	00004706 	andeq	r4, r0, r6, lsl #14
    2fac:	02600700 	rsbeq	r0, r0, #0, 14
    2fb0:	00000752 	andeq	r0, r0, r2, asr r7
    2fb4:	4f010702 	svcmi	0x00010702
    2fb8:	07000002 	streq	r0, [r0, -r2]
    2fbc:	084f0167 	stmdaeq	pc, {r0, r1, r2, r5, r6, r8}^	; <UNPREDICTABLE>
    2fc0:	10040000 	andne	r0, r4, r0
    2fc4:	00000003 	andeq	r0, r0, r3
    2fc8:	00042304 	andeq	r2, r4, r4, lsl #6
    2fcc:	40040100 	andmi	r0, r4, r0, lsl #2
    2fd0:	02000004 	andeq	r0, r0, #4
    2fd4:	00082f04 	andeq	r2, r8, r4, lsl #30
    2fd8:	2d040300 	stccs	3, cr0, [r4, #-0]
    2fdc:	04000002 	streq	r0, [r0], #-2
    2fe0:	00039104 	andeq	r9, r3, r4, lsl #2
    2fe4:	06000500 	streq	r0, [r0], -r0, lsl #10
    2fe8:	0000062d 	andeq	r0, r0, sp, lsr #12
    2fec:	1c026e07 	stcne	14, cr6, [r2], {7}
    2ff0:	09000008 	stmdbeq	r0, {r3}
    2ff4:	0000084f 	andeq	r0, r0, pc, asr #16
    2ff8:	00068513 	andeq	r8, r6, r3, lsl r5
    2ffc:	8a076000 	bhi	1db004 <_Min_Heap_Size+0x1da804>
    3000:	00094010 	andeq	r4, r9, r0, lsl r0
    3004:	04a41200 	strteq	r1, [r4], #512	; 0x200
    3008:	8c070000 	stchi	0, cr0, [r7], {-0}
    300c:	0009401f 	andeq	r4, r9, pc, lsl r0
    3010:	00230200 	eoreq	r0, r3, r0, lsl #4
    3014:	001cfd12 	andseq	pc, ip, r2, lsl sp	; <UNPREDICTABLE>
    3018:	1e8e0700 	cdpne	7, 8, cr0, cr14, cr0, {0}
    301c:	00000810 	andeq	r0, r0, r0, lsl r8
    3020:	12042302 	andne	r2, r4, #134217728	; 0x8000000
    3024:	000002a8 	andeq	r0, r0, r8, lsr #5
    3028:	e51e9007 	ldr	r9, [lr, #-7]
    302c:	02000006 	andeq	r0, r0, #6
    3030:	0a123423 	beq	4900c4 <_Min_Heap_Size+0x48f8c4>
    3034:	07000003 	streq	r0, [r0, -r3]
    3038:	085b1e92 	ldmdaeq	fp, {r1, r4, r7, r9, sl, fp, ip}^
    303c:	23020000 	movwcs	r0, #8192	; 0x2000
    3040:	02a11235 	adceq	r1, r1, #1342177283	; 0x50000003
    3044:	94070000 	strls	r0, [r7], #-0
    3048:	0009461f 	andeq	r4, r9, pc, lsl r6
    304c:	38230200 	stmdacc	r3!, {r9}
    3050:	00091912 	andeq	r1, r9, r2, lsl r9
    3054:	21960700 	orrscs	r0, r6, r0, lsl #14
    3058:	0000095a 	andeq	r0, r0, sl, asr r9
    305c:	123c2302 	eorsne	r2, ip, #134217728	; 0x8000000
    3060:	000001d9 	ldrdeq	r0, [r0], -r9
    3064:	5a219807 	bpl	869088 <_Min_Heap_Size+0x868888>
    3068:	02000009 	andeq	r0, r0, #9
    306c:	97124023 	ldrls	r4, [r2, -r3, lsr #32]
    3070:	07000001 	streq	r0, [r0, -r1]
    3074:	095a219a 	ldmdbeq	sl, {r1, r3, r4, r7, r8, sp}^
    3078:	23020000 	movwcs	r0, #8192	; 0x2000
    307c:	05551244 	ldrbeq	r1, [r5, #-580]	; 0xfffffdbc
    3080:	9c070000 	stcls	0, cr0, [r7], {-0}
    3084:	00095a21 	andeq	r5, r9, r1, lsr #20
    3088:	48230200 	stmdami	r3!, {r9}
    308c:	0004ad12 	andeq	sl, r4, r2, lsl sp
    3090:	219e0700 	orrscs	r0, lr, r0, lsl #14
    3094:	0000095a 	andeq	r0, r0, sl, asr r9
    3098:	124c2302 	subne	r2, ip, #134217728	; 0x8000000
    309c:	00000907 	andeq	r0, r0, r7, lsl #18
    30a0:	5a21a007 	bpl	86b0c4 <_Min_Heap_Size+0x86a8c4>
    30a4:	02000009 	andeq	r0, r0, #9
    30a8:	b0125023 	andslt	r5, r2, r3, lsr #32
    30ac:	07000003 	streq	r0, [r0, -r3]
    30b0:	02d41ea2 	sbcseq	r1, r4, #2592	; 0xa20
    30b4:	23020000 	movwcs	r0, #8192	; 0x2000
    30b8:	028a1254 	addeq	r1, sl, #84, 4	; 0x40000005
    30bc:	a4070000 	strge	r0, [r7], #-0
    30c0:	0002c81e 	andeq	ip, r2, lr, lsl r8
    30c4:	58230200 	stmdapl	r3!, {r9}
    30c8:	00033e12 	andeq	r3, r3, r2, lsl lr
    30cc:	1ea60700 	cdpne	7, 10, cr0, cr6, cr0, {0}
    30d0:	000002c8 	andeq	r0, r0, r8, asr #5
    30d4:	005c2302 	subseq	r2, ip, r2, lsl #6
    30d8:	03530414 	cmpeq	r3, #20, 8	; 0x14000000
    30dc:	04150000 	ldreq	r0, [r5], #-0
    30e0:	09540116 	ldmdbeq	r4, {r1, r2, r4, r8}^
    30e4:	54170000 	ldrpl	r0, [r7], #-0
    30e8:	00000009 	andeq	r0, r0, r9
    30ec:	08600414 	stmdaeq	r0!, {r2, r4, sl}^
    30f0:	04140000 	ldreq	r0, [r4], #-0
    30f4:	00000948 	andeq	r0, r0, r8, asr #18
    30f8:	00068706 	andeq	r8, r6, r6, lsl #14
    30fc:	02a80700 	adceq	r0, r8, #0, 14
    3100:	00000860 	andeq	r0, r0, r0, ror #16
    3104:	2e081c10 	mcrcs	12, 0, r1, cr8, cr0, {0}
    3108:	0009df09 	andeq	sp, r9, r9, lsl #30
    310c:	018e1200 	orreq	r1, lr, r0, lsl #4
    3110:	30080000 	andcc	r0, r8, r0
    3114:	0002c80c 	andeq	ip, r2, ip, lsl #16
    3118:	00230200 	eoreq	r0, r3, r0, lsl #4
    311c:	0006a212 	andeq	sl, r6, r2, lsl r2
    3120:	0c360800 	ldceq	8, cr0, [r6], #-0
    3124:	000002c8 	andeq	r0, r0, r8, asr #5
    3128:	12042302 	andne	r2, r4, #134217728	; 0x8000000
    312c:	00000279 	andeq	r0, r0, r9, ror r2
    3130:	c80c3908 	stmdagt	ip, {r3, r8, fp, ip, sp}
    3134:	02000002 	andeq	r0, r0, #2
    3138:	24120823 	ldrcs	r0, [r2], #-2083	; 0xfffff7dd
    313c:	08000003 	stmdaeq	r0, {r0, r1}
    3140:	02c80c3c 	sbceq	r0, r8, #60, 24	; 0x3c00
    3144:	23020000 	movwcs	r0, #8192	; 0x2000
    3148:	069d120c 	ldreq	r1, [sp], ip, lsl #4
    314c:	43080000 	movwmi	r0, #32768	; 0x8000
    3150:	0002c80c 	andeq	ip, r2, ip, lsl #16
    3154:	10230200 	eorne	r0, r3, r0, lsl #4
    3158:	00082512 	andeq	r2, r8, r2, lsl r5
    315c:	0c460800 	mcrreq	8, 0, r0, r6, cr0
    3160:	000002c8 	andeq	r0, r0, r8, asr #5
    3164:	12142302 	andsne	r2, r4, #134217728	; 0x8000000
    3168:	00000135 	andeq	r0, r0, r5, lsr r1
    316c:	c80c4908 	stmdagt	ip, {r3, r8, fp, lr}
    3170:	02000002 	andeq	r0, r0, #2
    3174:	06001823 	streq	r1, [r0], -r3, lsr #16
    3178:	000007c7 	andeq	r0, r0, r7, asr #15
    317c:	6c034b08 			; <UNDEFINED> instruction: 0x6c034b08
    3180:	02000009 	andeq	r0, r0, #9
    3184:	024f0107 	subeq	r0, pc, #-1073741823	; 0xc0000001
    3188:	75080000 	strvc	r0, [r8, #-0]
    318c:	000a2a01 	andeq	r2, sl, r1, lsl #20
    3190:	075a0400 	ldrbeq	r0, [sl, -r0, lsl #8]
    3194:	04000000 	streq	r0, [r0], #-0
    3198:	000002ad 	andeq	r0, r0, sp, lsr #5
    319c:	08c20420 	stmiaeq	r2, {r5, sl}^
    31a0:	04240000 	strteq	r0, [r4], #-0
    31a4:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
    31a8:	07000421 	streq	r0, [r0, -r1, lsr #8]
    31ac:	04220000 	strteq	r0, [r2], #-0
    31b0:	0000016f 	andeq	r0, r0, pc, ror #2
    31b4:	080e0423 	stmdaeq	lr, {r0, r1, r5, sl}
    31b8:	04a00000 	strteq	r0, [r0], #0
    31bc:	0000065f 	andeq	r0, r0, pc, asr r6
    31c0:	250600e0 	strcs	r0, [r6, #-224]	; 0xffffff20
    31c4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    31c8:	09eb0387 	stmibeq	fp!, {r0, r1, r2, r7, r8, r9}^
    31cc:	2a090000 	bcs	2431d4 <_Min_Heap_Size+0x2429d4>
    31d0:	0600000a 	streq	r0, [r0], -sl
    31d4:	000007de 	ldrdeq	r0, [r0], -lr
    31d8:	c8129008 	ldmdagt	r2, {r3, ip, pc}
    31dc:	09000002 	stmdbeq	r0, {r1}
    31e0:	00000a3b 	andeq	r0, r0, fp, lsr sl
    31e4:	0000ca06 	andeq	ip, r0, r6, lsl #20
    31e8:	129b0800 	addsne	r0, fp, #0, 16
    31ec:	000002c8 	andeq	r0, r0, r8, asr #5
    31f0:	000a4c09 	andeq	r4, sl, r9, lsl #24
    31f4:	04771300 	ldrbteq	r1, [r7], #-768	; 0xfffffd00
    31f8:	08480000 	stmdaeq	r8, {}^	; <UNPREDICTABLE>
    31fc:	0b5b10a0 	bleq	16c7484 <_Min_Heap_Size+0x16c6c84>
    3200:	a4120000 	ldrge	r0, [r2], #-0
    3204:	08000004 	stmdaeq	r0, {r2}
    3208:	0b5b22a2 	bleq	16cbc98 <_Min_Heap_Size+0x16cb498>
    320c:	23020000 	movwcs	r0, #8192	; 0x2000
    3210:	1cfd1200 	lfmne	f1, 2, [sp]
    3214:	a4080000 	strge	r0, [r8], #-0
    3218:	0009df21 	andeq	sp, r9, r1, lsr #30
    321c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    3220:	0001ee12 	andeq	lr, r1, r2, lsl lr
    3224:	22a60800 	adccs	r0, r6, #0, 16
    3228:	00000b61 	andeq	r0, r0, r1, ror #22
    322c:	12202302 	eorne	r2, r0, #134217728	; 0x8000000
    3230:	00000376 	andeq	r0, r0, r6, ror r3
    3234:	b721a808 	strlt	sl, [r1, -r8, lsl #16]!
    3238:	02000002 	andeq	r0, r0, #2
    323c:	42122423 	andsmi	r2, r2, #587202560	; 0x23000000
    3240:	08000001 	stmdaeq	r0, {r0}
    3244:	02c321aa 	sbceq	r2, r3, #-2147483606	; 0x8000002a
    3248:	23020000 	movwcs	r0, #8192	; 0x2000
    324c:	08451226 	stmdaeq	r5, {r1, r2, r5, r9, ip}^
    3250:	ac080000 	stcge	0, cr0, [r8], {-0}
    3254:	000b6722 	andeq	r6, fp, r2, lsr #14
    3258:	28230200 	stmdacs	r3!, {r9}
    325c:	00036b12 	andeq	r6, r3, r2, lsl fp
    3260:	21ae0800 			; <UNDEFINED> instruction: 0x21ae0800
    3264:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    3268:	122c2302 	eorne	r2, ip, #134217728	; 0x8000000
    326c:	000008b6 			; <UNDEFINED> instruction: 0x000008b6
    3270:	c321b008 			; <UNDEFINED> instruction: 0xc321b008
    3274:	02000002 	andeq	r0, r0, #2
    3278:	f9122e23 			; <UNDEFINED> instruction: 0xf9122e23
    327c:	08000008 	stmdaeq	r0, {r3}
    3280:	0a471fb2 	beq	11cb150 <_Min_Heap_Size+0x11ca950>
    3284:	23020000 	movwcs	r0, #8192	; 0x2000
    3288:	13121230 	tstne	r2, #48, 4
    328c:	b4080000 	strlt	r0, [r8], #-0
    3290:	000a5824 	andeq	r5, sl, r4, lsr #16
    3294:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    3298:	0004e012 	andeq	lr, r4, r2, lsl r0
    329c:	22b60800 	adcscs	r0, r6, #0, 16
    32a0:	00000b6d 	andeq	r0, r0, sp, ror #22
    32a4:	12382302 	eorsne	r2, r8, #134217728	; 0x8000000
    32a8:	000002e0 	andeq	r0, r0, r0, ror #5
    32ac:	6d22b808 	stcvs	8, cr11, [r2, #-32]!	; 0xffffffe0
    32b0:	0200000b 	andeq	r0, r0, #11
    32b4:	a8123c23 	ldmdage	r2, {r0, r1, r5, sl, fp, ip, sp}
    32b8:	08000002 	stmdaeq	r0, {r1}
    32bc:	06e521ba 			; <UNDEFINED> instruction: 0x06e521ba
    32c0:	23020000 	movwcs	r0, #8192	; 0x2000
    32c4:	003b1240 	eorseq	r1, fp, r0, asr #4
    32c8:	bc080000 	stclt	0, cr0, [r8], {-0}
    32cc:	000a3621 	andeq	r3, sl, r1, lsr #12
    32d0:	41230200 			; <UNDEFINED> instruction: 0x41230200
    32d4:	0008ec12 	andeq	lr, r8, r2, lsl ip
    32d8:	21c00800 	biccs	r0, r0, r0, lsl #16
    32dc:	00000a36 	andeq	r0, r0, r6, lsr sl
    32e0:	12422302 	subne	r2, r2, #134217728	; 0x8000000
    32e4:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
    32e8:	d421c308 	strtle	ip, [r1], #-776	; 0xfffffcf8
    32ec:	02000002 	andeq	r0, r0, #2
    32f0:	14004423 	strne	r4, [r0], #-1059	; 0xfffffbdd
    32f4:	00068f04 	andeq	r8, r6, r4, lsl #30
    32f8:	b2041400 	andlt	r1, r4, #0, 8
    32fc:	14000002 	strne	r0, [r0], #-2
    3300:	0002a604 	andeq	sl, r2, r4, lsl #12
    3304:	60041400 	andvs	r1, r4, r0, lsl #8
    3308:	06000009 	streq	r0, [r0], -r9
    330c:	00000479 	andeq	r0, r0, r9, ror r4
    3310:	5d03d508 	cfstr32pl	mvfx13, [r3, #-32]	; 0xffffffe0
    3314:	1800000a 	stmdane	r0, {r1, r3}
    3318:	00000337 	andeq	r0, r0, r7, lsr r3
    331c:	731b240b 	tstvc	fp, #184549376	; 0xb000000
    3320:	0100000b 	tsteq	r0, fp
    3324:	0b7f1901 	bleq	1fc9730 <_Min_Heap_Size+0x1fc8f30>
    3328:	1b010000 	blne	43330 <_Min_Heap_Size+0x42b30>
    332c:	90030514 	andls	r0, r3, r4, lsl r5
    3330:	1a200000 	bne	803338 <_Min_Heap_Size+0x802b38>
    3334:	000db101 	andeq	fp, sp, r1, lsl #2
    3338:	065c0100 	ldrbeq	r0, [ip], -r0, lsl #2
    333c:	00000001 	andeq	r0, r0, r1
    3340:	00000000 	andeq	r0, r0, r0
    3344:	00093600 	andeq	r3, r9, r0, lsl #12
    3348:	0bf90100 	bleq	ffe43750 <_estack+0xdfe42518>
    334c:	591b0000 	ldmdbpl	fp, {}	; <UNPREDICTABLE>
    3350:	0100000e 	tsteq	r0, lr
    3354:	0bf92d5c 	bleq	ffe4e8cc <_estack+0xdfe4d694>
    3358:	095e0000 	ldmdbeq	lr, {}^	; <UNPREDICTABLE>
    335c:	09560000 	ldmdbeq	r6, {}^	; <UNPREDICTABLE>
    3360:	001c0000 	andseq	r0, ip, r0
    3364:	01000000 	mrseq	r0, (UNDEF: 0)
    3368:	e800000d 	stmda	r0, {r0, r2, r3}
    336c:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    3370:	0c055001 	stceq	0, cr5, [r5], {1}
    3374:	40020000 	andmi	r0, r2, r0
    3378:	0351011d 	cmpeq	r1, #1073741831	; 0x40000007
    337c:	0006000a 	andeq	r0, r6, sl
    3380:	0000001e 	andeq	r0, r0, lr, lsl r0
    3384:	000d0f00 	andeq	r0, sp, r0, lsl #30
    3388:	50011d00 	andpl	r1, r1, r0, lsl #26
    338c:	00250802 	eoreq	r0, r5, r2, lsl #16
    3390:	73041400 	movwvc	r1, #17408	; 0x4400
    3394:	1a00000b 	bne	33c8 <_Min_Heap_Size+0x2bc8>
    3398:	000d8201 	andeq	r8, sp, r1, lsl #4
    339c:	063b0100 	ldrteq	r0, [fp], -r0, lsl #2
    33a0:	0008a801 	andeq	sl, r8, r1, lsl #16
    33a4:	00092808 	andeq	r2, r9, r8, lsl #16
    33a8:	00099808 	andeq	r9, r9, r8, lsl #16
    33ac:	0cc50100 	stfeqe	f0, [r5], {0}
    33b0:	591b0000 	ldmdbpl	fp, {}	; <UNPREDICTABLE>
    33b4:	0100000e 	tsteq	r0, lr
    33b8:	0bf92b3b 	bleq	ffe4e0ac <_estack+0xdfe4ce74>
    33bc:	09e40000 	stmibeq	r4!, {}^	; <UNPREDICTABLE>
    33c0:	09dc0000 	ldmibeq	ip, {}^	; <UNPREDICTABLE>
    33c4:	271f0000 	ldrcs	r0, [pc, -r0]
    33c8:	0100000d 	tsteq	r0, sp
    33cc:	0746143e 	smlaldxeq	r1, r6, lr, r4
    33d0:	91020000 	mrsls	r0, (UNDEF: 2)
    33d4:	08ca2064 	stmiaeq	sl, {r2, r5, r6, sp}^
    33d8:	08e40800 	stmiaeq	r4!, {fp}^
    33dc:	0c5a0800 	mrrceq	8, 0, r0, sl, cr0
    33e0:	b61f0000 	ldrlt	r0, [pc], -r0
    33e4:	01000001 	tsteq	r0, r1
    33e8:	02d40545 	sbcseq	r0, r4, #289406976	; 0x11400000
    33ec:	91020000 	mrsls	r0, (UNDEF: 2)
    33f0:	e420005c 	strt	r0, [r0], #-92	; 0xffffffa4
    33f4:	f8080008 			; <UNDEFINED> instruction: 0xf8080008
    33f8:	77080008 	strvc	r0, [r8, -r8]
    33fc:	1f00000c 	svcne	0x0000000c
    3400:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    3404:	d4054701 	strle	r4, [r5], #-1793	; 0xfffff8ff
    3408:	02000002 	andeq	r0, r0, #2
    340c:	1c006091 	stcne	0, cr6, [r0], {145}	; 0x91
    3410:	08000912 	stmdaeq	r0, {r1, r4, r8, fp}
    3414:	00000d1e 	andeq	r0, r0, lr, lsl sp
    3418:	00000c94 	muleq	r0, r4, ip
    341c:	0550011d 	ldrbeq	r0, [r0, #-285]	; 0xfffffee3
    3420:	0200000c 	andeq	r0, r0, #12
    3424:	51011d40 	tstpl	r1, r0, asr #26
    3428:	00649102 	rsbeq	r9, r4, r2, lsl #2
    342c:	00091c1c 	andeq	r1, r9, ip, lsl ip
    3430:	000d2c08 	andeq	r2, sp, r8, lsl #24
    3434:	000cb400 	andeq	fp, ip, r0, lsl #8
    3438:	50011d00 	andpl	r1, r1, r0, lsl #26
    343c:	1d250802 	stcne	8, cr0, [r5, #-8]!
    3440:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    3444:	52011d00 	andpl	r1, r1, #0, 26
    3448:	00007402 	andeq	r7, r0, r2, lsl #8
    344c:	0009221e 	andeq	r2, r9, lr, lsl r2
    3450:	000d3b08 	andeq	r3, sp, r8, lsl #22
    3454:	50011d00 	andpl	r1, r1, r0, lsl #26
    3458:	00250802 	eoreq	r0, r5, r2, lsl #16
    345c:	07011a00 	streq	r1, [r1, -r0, lsl #20]
    3460:	01000000 	mrseq	r0, (UNDEF: 0)
    3464:	7401061f 	strvc	r0, [r1], #-1567	; 0xfffff9e1
    3468:	a8080008 	stmdage	r8, {r3}
    346c:	1e080008 	cdpne	0, 0, cr0, cr8, cr8, {0}
    3470:	0100000a 	tsteq	r0, sl
    3474:	00000d01 	andeq	r0, r0, r1, lsl #26
    3478:	0008961c 	andeq	r9, r8, ip, lsl r6
    347c:	000d4a08 	andeq	r4, sp, r8, lsl #20
    3480:	000cf700 	andeq	pc, ip, r0, lsl #14
    3484:	50011d00 	andpl	r1, r1, r0, lsl #26
    3488:	00900305 	addseq	r0, r0, r5, lsl #6
    348c:	21002000 	mrscs	r2, (UNDEF: 0)
    3490:	0800089e 	stmdaeq	r0, {r1, r2, r3, r4, r7, fp}
    3494:	00000d59 	andeq	r0, r0, r9, asr sp
    3498:	01012200 	mrseq	r2, R9_usr
    349c:	00000e3c 	andeq	r0, r0, ip, lsr lr
    34a0:	00000e3c 	andeq	r0, r0, ip, lsr lr
    34a4:	2307e106 	movwcs	lr, #28934	; 0x7106
    34a8:	11c10101 	bicne	r0, r1, r1, lsl #2
    34ac:	11c10000 	bicne	r0, r1, r0
    34b0:	07090000 	streq	r0, [r9, -r0]
    34b4:	01220601 			; <UNDEFINED> instruction: 0x01220601
    34b8:	000e8c01 	andeq	r8, lr, r1, lsl #24
    34bc:	000e8c00 	andeq	r8, lr, r0, lsl #24
    34c0:	07e00600 	strbeq	r0, [r0, r0, lsl #12]!
    34c4:	11010123 	tstne	r1, r3, lsr #2
    34c8:	11000011 	tstne	r0, r1, lsl r0
    34cc:	09000011 	stmdbeq	r0, {r0, r4}
    34d0:	23060105 	movwcs	r0, #24837	; 0x6105
    34d4:	11600101 	cmnne	r0, r1, lsl #2
    34d8:	11600000 	cmnne	r0, r0
    34dc:	06090000 	streq	r0, [r9], -r0
    34e0:	01230601 			; <UNDEFINED> instruction: 0x01230601
    34e4:	000ebe01 	andeq	fp, lr, r1, lsl #28
    34e8:	000ebe00 	andeq	fp, lr, r0, lsl #28
    34ec:	02ce0800 	sbceq	r0, lr, #0, 16
    34f0:	01012213 	tsteq	r1, r3, lsl r2
    34f4:	00000415 	andeq	r0, r0, r5, lsl r4
    34f8:	00000415 	andeq	r0, r0, r5, lsl r4
    34fc:	00063c0a 	andeq	r3, r6, sl, lsl #24
    3500:	000002e7 	andeq	r0, r0, r7, ror #5
    3504:	097c0002 	ldmdbeq	ip!, {r1}^
    3508:	01040000 	mrseq	r0, (UNDEF: 4)
    350c:	00000588 	andeq	r0, r0, r8, lsl #11
    3510:	0012cf0c 	andseq	ip, r2, ip, lsl #30
    3514:	00086d00 	andeq	r6, r8, r0, lsl #26
    3518:	0001a000 	andeq	sl, r1, r0
	...
    3524:	00138800 	andseq	r8, r3, r0, lsl #16
    3528:	06010200 	streq	r0, [r1], -r0, lsl #4
    352c:	00000576 	andeq	r0, r0, r6, ror r5
    3530:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    3534:	02000005 	andeq	r0, r0, #5
    3538:	03fd0502 	mvnseq	r0, #8388608	; 0x800000
    353c:	02020000 	andeq	r0, r2, #0
    3540:	00078f07 	andeq	r8, r7, r7, lsl #30
    3544:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    3548:	000002ec 	andeq	r0, r0, ip, ror #5
    354c:	0002c203 	andeq	ip, r2, r3, lsl #4
    3550:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    3554:	00000058 	andeq	r0, r0, r8, asr r0
    3558:	b3070402 	movwlt	r0, #29698	; 0x7402
    355c:	02000000 	andeq	r0, r0, #0
    3560:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
    3564:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3568:	0000ae07 	andeq	sl, r0, r7, lsl #28
    356c:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    3570:	00746e69 	rsbseq	r6, r4, r9, ror #28
    3574:	b8070402 	stmdalt	r7, {r1, sl}
    3578:	03000000 	movweq	r0, #0
    357c:	000002c4 	andeq	r0, r0, r4, asr #5
    3580:	4c143003 	ldcmi	0, cr3, [r4], {3}
    3584:	05000000 	streq	r0, [r0, #-0]
    3588:	0000007b 	andeq	r0, r0, fp, ror r0
    358c:	00007b06 	andeq	r7, r0, r6, lsl #22
    3590:	00009c00 	andeq	r9, r0, r0, lsl #24
    3594:	00740700 	rsbseq	r0, r4, r0, lsl #14
    3598:	00010000 	andeq	r0, r1, r0
    359c:	f4048808 	vst2.8	{d8-d9}, [r4], r8
    35a0:	02880901 	addeq	r0, r8, #16384	; 0x4000
    35a4:	43090000 	movwmi	r0, #36864	; 0x9000
    35a8:	f6040052 			; <UNDEFINED> instruction: 0xf6040052
    35ac:	00871101 	addeq	r1, r7, r1, lsl #2
    35b0:	23020000 	movwcs	r0, #8192	; 0x2000
    35b4:	02820a00 	addeq	r0, r2, #0, 20
    35b8:	f7040000 			; <UNDEFINED> instruction: 0xf7040000
    35bc:	00871101 	addeq	r1, r7, r1, lsl #2
    35c0:	23020000 	movwcs	r0, #8192	; 0x2000
    35c4:	02850a04 	addeq	r0, r5, #4, 20	; 0x4000
    35c8:	f8040000 			; <UNDEFINED> instruction: 0xf8040000
    35cc:	00871101 	addeq	r1, r7, r1, lsl #2
    35d0:	23020000 	movwcs	r0, #8192	; 0x2000
    35d4:	49430908 	stmdbmi	r3, {r3, r8, fp}^
    35d8:	f9040052 			; <UNDEFINED> instruction: 0xf9040052
    35dc:	00871101 	addeq	r1, r7, r1, lsl #2
    35e0:	23020000 	movwcs	r0, #8192	; 0x2000
    35e4:	01660a0c 	cmneq	r6, ip, lsl #20
    35e8:	fa040000 	blx	1035f0 <_Min_Heap_Size+0x102df0>
    35ec:	00871101 	addeq	r1, r7, r1, lsl #2
    35f0:	23020000 	movwcs	r0, #8192	; 0x2000
    35f4:	07170a10 			; <UNDEFINED> instruction: 0x07170a10
    35f8:	fb040000 	blx	103602 <_Min_Heap_Size+0x102e02>
    35fc:	00871101 	addeq	r1, r7, r1, lsl #2
    3600:	23020000 	movwcs	r0, #8192	; 0x2000
    3604:	067c0a14 			; <UNDEFINED> instruction: 0x067c0a14
    3608:	fc040000 	stc2	0, cr0, [r4], {-0}
    360c:	00871101 	addeq	r1, r7, r1, lsl #2
    3610:	23020000 	movwcs	r0, #8192	; 0x2000
    3614:	050f0a18 	streq	r0, [pc, #-2584]	; 2c04 <_Min_Heap_Size+0x2404>
    3618:	fd040000 	stc2	0, cr0, [r4, #-0]
    361c:	007b1101 	rsbseq	r1, fp, r1, lsl #2
    3620:	23020000 	movwcs	r0, #8192	; 0x2000
    3624:	04fa0a1c 	ldrbteq	r0, [sl], #2588	; 0xa1c
    3628:	fe040000 	cdp2	0, 0, cr0, cr4, cr0, {0}
    362c:	00871101 	addeq	r1, r7, r1, lsl #2
    3630:	23020000 	movwcs	r0, #8192	; 0x2000
    3634:	01f90a20 	mvnseq	r0, r0, lsr #20
    3638:	ff040000 			; <UNDEFINED> instruction: 0xff040000
    363c:	00871101 	addeq	r1, r7, r1, lsl #2
    3640:	23020000 	movwcs	r0, #8192	; 0x2000
    3644:	05190a24 	ldreq	r0, [r9, #-2596]	; 0xfffff5dc
    3648:	00040000 	andeq	r0, r4, r0
    364c:	008c1102 	addeq	r1, ip, r2, lsl #2
    3650:	23020000 	movwcs	r0, #8192	; 0x2000
    3654:	08ae0a28 	stmiaeq	lr!, {r3, r5, r9, fp}
    3658:	01040000 	mrseq	r0, (UNDEF: 4)
    365c:	00871102 	addeq	r1, r7, r2, lsl #2
    3660:	23020000 	movwcs	r0, #8192	; 0x2000
    3664:	07870a30 			; <UNDEFINED> instruction: 0x07870a30
    3668:	02040000 	andeq	r0, r4, #0
    366c:	00871102 	addeq	r1, r7, r2, lsl #2
    3670:	23020000 	movwcs	r0, #8192	; 0x2000
    3674:	049c0a34 	ldreq	r0, [ip], #2612	; 0xa34
    3678:	03040000 	movweq	r0, #16384	; 0x4000
    367c:	00871102 	addeq	r1, r7, r2, lsl #2
    3680:	23020000 	movwcs	r0, #8192	; 0x2000
    3684:	05230a38 	streq	r0, [r3, #-2616]!	; 0xfffff5c8
    3688:	04040000 	streq	r0, [r4], #-0
    368c:	007b1102 	rsbseq	r1, fp, r2, lsl #2
    3690:	23020000 	movwcs	r0, #8192	; 0x2000
    3694:	06b70a3c 			; <UNDEFINED> instruction: 0x06b70a3c
    3698:	05040000 	streq	r0, [r4, #-0]
    369c:	00871102 	addeq	r1, r7, r2, lsl #2
    36a0:	23020000 	movwcs	r0, #8192	; 0x2000
    36a4:	06740a40 	ldrbteq	r0, [r4], -r0, asr #20
    36a8:	06040000 	streq	r0, [r4], -r0
    36ac:	00871102 	addeq	r1, r7, r2, lsl #2
    36b0:	23020000 	movwcs	r0, #8192	; 0x2000
    36b4:	052d0a44 	streq	r0, [sp, #-2628]!	; 0xfffff5bc
    36b8:	07040000 	streq	r0, [r4, -r0]
    36bc:	008c1102 	addeq	r1, ip, r2, lsl #2
    36c0:	23020000 	movwcs	r0, #8192	; 0x2000
    36c4:	012b0a48 			; <UNDEFINED> instruction: 0x012b0a48
    36c8:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    36cc:	00871102 	addeq	r1, r7, r2, lsl #2
    36d0:	23020000 	movwcs	r0, #8192	; 0x2000
    36d4:	04d60a50 	ldrbeq	r0, [r6], #2640	; 0xa50
    36d8:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    36dc:	00871102 	addeq	r1, r7, r2, lsl #2
    36e0:	23020000 	movwcs	r0, #8192	; 0x2000
    36e4:	06420a54 			; <UNDEFINED> instruction: 0x06420a54
    36e8:	0a040000 	beq	1036f0 <_Min_Heap_Size+0x102ef0>
    36ec:	00871102 	addeq	r1, r7, r2, lsl #2
    36f0:	23020000 	movwcs	r0, #8192	; 0x2000
    36f4:	05370a58 	ldreq	r0, [r7, #-2648]!	; 0xfffff5a8
    36f8:	0b040000 	bleq	103700 <_Min_Heap_Size+0x102f00>
    36fc:	007b1102 	rsbseq	r1, fp, r2, lsl #2
    3700:	23020000 	movwcs	r0, #8192	; 0x2000
    3704:	001b0a5c 	andseq	r0, fp, ip, asr sl
    3708:	0c040000 	stceq	0, cr0, [r4], {-0}
    370c:	00871102 	addeq	r1, r7, r2, lsl #2
    3710:	23020000 	movwcs	r0, #8192	; 0x2000
    3714:	03ee0a60 	mvneq	r0, #96, 20	; 0x60000
    3718:	0d040000 	stceq	0, cr0, [r4, #-0]
    371c:	00871102 	addeq	r1, r7, r2, lsl #2
    3720:	23020000 	movwcs	r0, #8192	; 0x2000
    3724:	05410a64 	strbeq	r0, [r1, #-2660]	; 0xfffff59c
    3728:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    372c:	008c1102 	addeq	r1, ip, r2, lsl #2
    3730:	23020000 	movwcs	r0, #8192	; 0x2000
    3734:	08090a68 	stmdaeq	r9, {r3, r5, r6, r9, fp}
    3738:	0f040000 	svceq	0x00040000
    373c:	00871102 	addeq	r1, r7, r2, lsl #2
    3740:	23020000 	movwcs	r0, #8192	; 0x2000
    3744:	53430970 	movtpl	r0, #14704	; 0x3970
    3748:	10040052 	andne	r0, r4, r2, asr r0
    374c:	00871102 	addeq	r1, r7, r2, lsl #2
    3750:	23020000 	movwcs	r0, #8192	; 0x2000
    3754:	054b0a74 	strbeq	r0, [fp, #-2676]	; 0xfffff58c
    3758:	11040000 	mrsne	r0, (UNDEF: 4)
    375c:	008c1102 	addeq	r1, ip, r2, lsl #2
    3760:	23020000 	movwcs	r0, #8192	; 0x2000
    3764:	07d80a78 			; <UNDEFINED> instruction: 0x07d80a78
    3768:	12040000 	andne	r0, r4, #0
    376c:	00871102 	addeq	r1, r7, r2, lsl #2
    3770:	23030000 	movwcs	r0, #12288	; 0x3000
    3774:	810a0180 	smlabbhi	sl, r0, r1, r0
    3778:	04000003 	streq	r0, [r0], #-3
    377c:	87110213 			; <UNDEFINED> instruction: 0x87110213
    3780:	03000000 	movweq	r0, #0
    3784:	00018423 	andeq	r8, r1, r3, lsr #8
    3788:	0001cd0b 	andeq	ip, r1, fp, lsl #26
    378c:	02140400 	andseq	r0, r4, #0, 8
    3790:	00009c03 	andeq	r9, r0, r3, lsl #24
    3794:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    3798:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
    379c:	12c3010c 	sbcne	r0, r3, #12, 2
    37a0:	3f010000 	svccc	0x00010000
    37a4:	09280106 	stmdbeq	r8!, {r1, r2, r8}
    37a8:	09600800 	stmdbeq	r0!, {fp}^
    37ac:	0a3e0800 	beq	f857b4 <_Min_Heap_Size+0xf84fb4>
    37b0:	0d010000 	stceq	0, cr0, [r1, #-0]
    37b4:	0800092a 	stmdaeq	r0, {r1, r3, r5, r8, fp}
    37b8:	08000942 	stmdaeq	r0, {r1, r6, r8, fp}
    37bc:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    37c0:	0001b60e 	andeq	fp, r1, lr, lsl #12
    37c4:	03460100 	movteq	r0, #24832	; 0x6100
    37c8:	00000087 	andeq	r0, r0, r7, lsl #1
    37cc:	00789102 	rsbseq	r9, r8, r2, lsl #2
    37d0:	0009420f 	andeq	r4, r9, pc, lsl #4
    37d4:	00095608 	andeq	r5, r9, r8, lsl #12
    37d8:	01b60e08 			; <UNDEFINED> instruction: 0x01b60e08
    37dc:	47010000 	strmi	r0, [r1, -r0]
    37e0:	00008703 	andeq	r8, r0, r3, lsl #14
    37e4:	7c910200 	lfmvc	f0, 4, [r1], {0}
    37e8:	2a000000 	bcs	37f0 <_Min_Heap_Size+0x2ff0>
    37ec:	02000046 	andeq	r0, r0, #70	; 0x46
    37f0:	000a4f00 	andeq	r4, sl, r0, lsl #30
    37f4:	88010400 	stmdahi	r1, {sl}
    37f8:	0c000005 	stceq	0, cr0, [r0], {5}
    37fc:	00001597 	muleq	r0, r7, r5
    3800:	0000086d 	andeq	r0, r0, sp, ror #16
    3804:	000001c8 	andeq	r0, r0, r8, asr #3
	...
    3810:	000014fe 	strdeq	r1, [r0], -lr
    3814:	76060102 	strvc	r0, [r6], -r2, lsl #2
    3818:	03000005 	movweq	r0, #5
    381c:	00000066 	andeq	r0, r0, r6, rrx
    3820:	3c182b03 			; <UNDEFINED> instruction: 0x3c182b03
    3824:	02000000 	andeq	r0, r0, #0
    3828:	05740801 	ldrbeq	r0, [r4, #-2049]!	; 0xfffff7ff
    382c:	02020000 	andeq	r0, r2, #0
    3830:	0003fd05 	andeq	pc, r3, r5, lsl #26
    3834:	06f50300 	ldrbteq	r0, [r5], r0, lsl #6
    3838:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
    383c:	00005619 	andeq	r5, r0, r9, lsl r6
    3840:	07020200 	streq	r0, [r2, -r0, lsl #4]
    3844:	0000078f 	andeq	r0, r0, pc, lsl #15
    3848:	ec050402 	cfstrs	mvf0, [r5], {2}
    384c:	03000002 	movweq	r0, #2
    3850:	000002c2 	andeq	r0, r0, r2, asr #5
    3854:	70194f03 	andsvc	r4, r9, r3, lsl #30
    3858:	02000000 	andeq	r0, r0, #0
    385c:	00b30704 	adcseq	r0, r3, r4, lsl #14
    3860:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3864:	0002e705 	andeq	lr, r2, r5, lsl #14
    3868:	172b0300 	strne	r0, [fp, -r0, lsl #6]!
    386c:	69030000 	stmdbvs	r3, {}	; <UNPREDICTABLE>
    3870:	00008a19 	andeq	r8, r0, r9, lsl sl
    3874:	07080200 	streq	r0, [r8, -r0, lsl #4]
    3878:	000000ae 	andeq	r0, r0, lr, lsr #1
    387c:	69050404 	stmdbvs	r5, {r2, sl}
    3880:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    3884:	00b80704 	adcseq	r0, r8, r4, lsl #14
    3888:	68030000 	stmdavs	r3, {}	; <UNPREDICTABLE>
    388c:	04000000 	streq	r0, [r0], #-0
    3890:	00301318 	eorseq	r1, r0, r8, lsl r3
    3894:	9f050000 	svcls	0x00050000
    3898:	03000000 	movweq	r0, #0
    389c:	000006f7 	strdeq	r0, [r0], -r7
    38a0:	4a142404 	bmi	50c8b8 <_Min_Heap_Size+0x50c0b8>
    38a4:	06000000 	streq	r0, [r0], -r0
    38a8:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    38ac:	0000b005 	andeq	fp, r0, r5
    38b0:	02c40300 	sbceq	r0, r4, #0, 6
    38b4:	30040000 	andcc	r0, r4, r0
    38b8:	00006414 	andeq	r6, r0, r4, lsl r4
    38bc:	00c60600 	sbceq	r0, r6, r0, lsl #12
    38c0:	c6050000 	strgt	r0, [r5], -r0
    38c4:	03000000 	movweq	r0, #0
    38c8:	0000172d 	andeq	r1, r0, sp, lsr #14
    38cc:	7e143c04 	cdpvc	12, 1, cr3, cr4, cr4, {0}
    38d0:	07000000 	streq	r0, [r0, -r0]
    38d4:	01440518 	cmpeq	r4, r8, lsl r5
    38d8:	00015209 	andeq	r5, r1, r9, lsl #4
    38dc:	52430800 	subpl	r0, r3, #0, 16
    38e0:	01460500 	cmpeq	r6, r0, lsl #10
    38e4:	0000d211 	andeq	sp, r0, r1, lsl r2
    38e8:	00230200 	eoreq	r0, r3, r0, lsl #4
    38ec:	00075509 	andeq	r5, r7, r9, lsl #10
    38f0:	01470500 	cmpeq	r7, r0, lsl #10
    38f4:	0000d211 	andeq	sp, r0, r1, lsl r2
    38f8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    38fc:	52415008 	subpl	r5, r1, #8
    3900:	01480500 	cmpeq	r8, r0, lsl #10
    3904:	0000d211 	andeq	sp, r0, r1, lsl r2
    3908:	08230200 	stmdaeq	r3!, {r9}
    390c:	00004209 	andeq	r4, r0, r9, lsl #4
    3910:	01490500 	cmpeq	r9, r0, lsl #10
    3914:	0000d211 	andeq	sp, r0, r1, lsl r2
    3918:	0c230200 	sfmeq	f0, 4, [r3], #-0
    391c:	0007ae09 	andeq	sl, r7, r9, lsl #28
    3920:	014a0500 	cmpeq	sl, r0, lsl #10
    3924:	0000d211 	andeq	sp, r0, r1, lsl r2
    3928:	10230200 	eorne	r0, r3, r0, lsl #4
    392c:	52434608 	subpl	r4, r3, #8, 12	; 0x800000
    3930:	014b0500 	cmpeq	fp, r0, lsl #10
    3934:	0000d211 	andeq	sp, r0, r1, lsl r2
    3938:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    393c:	07740a00 	ldrbeq	r0, [r4, -r0, lsl #20]!
    3940:	4c050000 	stcmi	0, cr0, [r5], {-0}
    3944:	00e80301 	rsceq	r0, r8, r1, lsl #6
    3948:	1c070000 	stcne	0, cr0, [r7], {-0}
    394c:	09029505 	stmdbeq	r2, {r0, r2, r8, sl, ip, pc}
    3950:	000001d8 	ldrdeq	r0, [r0], -r8
    3954:	00525308 	subseq	r5, r2, r8, lsl #6
    3958:	11029705 	tstne	r2, r5, lsl #14
    395c:	000000d2 	ldrdeq	r0, [r0], -r2
    3960:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    3964:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
    3968:	d2110298 	andsle	r0, r1, #152, 4	; 0x80000009
    396c:	02000000 	andeq	r0, r0, #0
    3970:	42080423 	andmi	r0, r8, #587202560	; 0x23000000
    3974:	05005252 	streq	r5, [r0, #-594]	; 0xfffffdae
    3978:	d2110299 	andsle	r0, r1, #-1879048183	; 0x90000009
    397c:	02000000 	andeq	r0, r0, #0
    3980:	43080823 	movwmi	r0, #34851	; 0x8823
    3984:	05003152 	streq	r3, [r0, #-338]	; 0xfffffeae
    3988:	d211029a 	andsle	r0, r1, #-1610612727	; 0xa0000009
    398c:	02000000 	andeq	r0, r0, #0
    3990:	43080c23 	movwmi	r0, #35875	; 0x8c23
    3994:	05003252 	streq	r3, [r0, #-594]	; 0xfffffdae
    3998:	d211029b 	andsle	r0, r1, #-1342177271	; 0xb0000009
    399c:	02000000 	andeq	r0, r0, #0
    39a0:	43081023 	movwmi	r1, #32803	; 0x8023
    39a4:	05003352 	streq	r3, [r0, #-850]	; 0xfffffcae
    39a8:	d211029c 	andsle	r0, r1, #156, 4	; 0xc0000009
    39ac:	02000000 	andeq	r0, r0, #0
    39b0:	89091423 	stmdbhi	r9, {r0, r1, r5, sl, ip}
    39b4:	05000001 	streq	r0, [r0, #-1]
    39b8:	d211029d 	andsle	r0, r1, #-805306359	; 0xd0000009
    39bc:	02000000 	andeq	r0, r0, #0
    39c0:	0a001823 	beq	9a54 <_Min_Heap_Size+0x9254>
    39c4:	000003e0 	andeq	r0, r0, r0, ror #7
    39c8:	03029e05 	movweq	r9, #11781	; 0x2e05
    39cc:	0000015f 	andeq	r0, r0, pc, asr r1
    39d0:	3c01070b 	stccc	7, cr0, [r1], {11}
    39d4:	06000000 	streq	r0, [r0], -r0
    39d8:	020001b9 	andeq	r0, r0, #1073741870	; 0x4000002e
    39dc:	1e0c0000 	cdpne	0, 0, cr0, cr12, cr0, {0}
    39e0:	00000003 	andeq	r0, r0, r3
    39e4:	5445530d 	strbpl	r5, [r5], #-781	; 0xfffffcf3
    39e8:	03000100 	movweq	r0, #256	; 0x100
    39ec:	00001342 	andeq	r1, r0, r2, asr #6
    39f0:	e503bc06 	str	fp, [r3, #-3078]	; 0xfffff3fa
    39f4:	02000001 	andeq	r0, r0, #1
    39f8:	06bf0408 	ldrteq	r0, [pc], r8, lsl #8
    39fc:	070b0000 	streq	r0, [fp, -r0]
    3a00:	00003c01 	andeq	r3, r0, r1, lsl #24
    3a04:	01270700 			; <UNDEFINED> instruction: 0x01270700
    3a08:	0000023a 	andeq	r0, r0, sl, lsr r2
    3a0c:	00034a0c 	andeq	r4, r3, ip, lsl #20
    3a10:	ad0c0000 	stcge	0, cr0, [ip, #-0]
    3a14:	01000006 	tsteq	r0, r6
    3a18:	0008e30c 	andeq	lr, r8, ip, lsl #6
    3a1c:	2b0c0200 	blcs	304224 <_Min_Heap_Size+0x303a24>
    3a20:	03000003 	movweq	r0, #3
    3a24:	15770300 	ldrbne	r0, [r7, #-768]!	; 0xfffffd00
    3a28:	2c070000 	stccs	0, cr0, [r7], {-0}
    3a2c:	00021303 	andeq	r1, r2, r3, lsl #6
    3a30:	01070b00 	tsteq	r7, r0, lsl #22
    3a34:	0000003c 	andeq	r0, r0, ip, lsr r0
    3a38:	61013207 	tstvs	r1, r7, lsl #4
    3a3c:	0c000002 	stceq	0, cr0, [r0], {2}
    3a40:	000008d6 	ldrdeq	r0, [r0], -r6
    3a44:	04910c00 	ldreq	r0, [r1], #3072	; 0xc00
    3a48:	00010000 	andeq	r0, r1, r0
    3a4c:	0001bd03 	andeq	fp, r1, r3, lsl #26
    3a50:	03350700 	teqeq	r5, #0, 14
    3a54:	00000246 	andeq	r0, r0, r6, asr #4
    3a58:	3008300e 	andcc	r3, r8, lr
    3a5c:	00032b09 	andeq	r2, r3, r9, lsl #22
    3a60:	056c0f00 	strbeq	r0, [ip, #-3840]!	; 0xfffff100
    3a64:	32080000 	andcc	r0, r8, #0
    3a68:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3a6c:	00230200 	eoreq	r0, r3, r0, lsl #4
    3a70:	0002cd0f 	andeq	ip, r2, pc, lsl #26
    3a74:	0c350800 	ldceq	8, cr0, [r5], #-0
    3a78:	000000c6 	andeq	r0, r0, r6, asr #1
    3a7c:	0f042302 	svceq	0x00042302
    3a80:	00000202 	andeq	r0, r0, r2, lsl #4
    3a84:	c60c3908 	strgt	r3, [ip], -r8, lsl #18
    3a88:	02000000 	andeq	r0, r0, #0
    3a8c:	200f0823 	andcs	r0, pc, r3, lsr #16
    3a90:	08000007 	stmdaeq	r0, {r0, r1, r2}
    3a94:	00c60c3c 	sbceq	r0, r6, ip, lsr ip
    3a98:	23020000 	movwcs	r0, #8192	; 0x2000
    3a9c:	07b30f0c 	ldreq	r0, [r3, ip, lsl #30]!
    3aa0:	3f080000 	svccc	0x00080000
    3aa4:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3aa8:	10230200 	eorne	r0, r3, r0, lsl #4
    3aac:	0003cf0f 	andeq	ip, r3, pc, lsl #30
    3ab0:	0c420800 	mcrreq	8, 0, r0, r2, cr0
    3ab4:	000000c6 	andeq	r0, r0, r6, asr #1
    3ab8:	0f142302 	svceq	0x00142302
    3abc:	0000069d 	muleq	r0, sp, r6
    3ac0:	c60c4508 	strgt	r4, [ip], -r8, lsl #10
    3ac4:	02000000 	andeq	r0, r0, #0
    3ac8:	1b0f1823 	blne	3c9b5c <_Min_Heap_Size+0x3c935c>
    3acc:	08000022 	stmdaeq	r0, {r1, r5}
    3ad0:	00c60c4a 	sbceq	r0, r6, sl, asr #24
    3ad4:	23020000 	movwcs	r0, #8192	; 0x2000
    3ad8:	06990f1c 			; <UNDEFINED> instruction: 0x06990f1c
    3adc:	4d080000 	stcmi	0, cr0, [r8, #-0]
    3ae0:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3ae4:	20230200 	eorcs	r0, r3, r0, lsl #4
    3ae8:	0006cb0f 	andeq	ip, r6, pc, lsl #22
    3aec:	0c520800 	mrrceq	8, 0, r0, r2, cr0
    3af0:	000000c6 	andeq	r0, r0, r6, asr #1
    3af4:	0f242302 	svceq	0x00242302
    3af8:	00000215 	andeq	r0, r0, r5, lsl r2
    3afc:	c60c5508 	strgt	r5, [ip], -r8, lsl #10
    3b00:	02000000 	andeq	r0, r0, #0
    3b04:	270f2823 	strcs	r2, [pc, -r3, lsr #16]
    3b08:	08000007 	stmdaeq	r0, {r0, r1, r2}
    3b0c:	00c60c5b 	sbceq	r0, r6, fp, asr ip
    3b10:	23020000 	movwcs	r0, #8192	; 0x2000
    3b14:	4703002c 	strmi	r0, [r3, -ip, lsr #32]
    3b18:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3b1c:	026d0260 	rsbeq	r0, sp, #96, 4
    3b20:	070b0000 	streq	r0, [fp, -r0]
    3b24:	00003c01 	andeq	r3, r0, r1, lsl #24
    3b28:	01670800 	cmneq	r7, r0, lsl #16
    3b2c:	0000036a 	andeq	r0, r0, sl, ror #6
    3b30:	0003100c 	andeq	r1, r3, ip
    3b34:	230c0000 	movwcs	r0, #49152	; 0xc000
    3b38:	01000004 	tsteq	r0, r4
    3b3c:	0004400c 	andeq	r4, r4, ip
    3b40:	2f0c0200 	svccs	0x000c0200
    3b44:	03000008 	movweq	r0, #8
    3b48:	00022d0c 	andeq	r2, r2, ip, lsl #26
    3b4c:	910c0400 	tstls	ip, r0, lsl #8
    3b50:	05000003 	streq	r0, [r0, #-3]
    3b54:	062d0300 	strteq	r0, [sp], -r0, lsl #6
    3b58:	6e080000 	cdpvs	0, 0, cr0, cr8, cr0, {0}
    3b5c:	00033702 	andeq	r3, r3, r2, lsl #14
    3b60:	036a0600 	cmneq	sl, #0, 12
    3b64:	85100000 	ldrhi	r0, [r0, #-0]
    3b68:	60000006 	andvs	r0, r0, r6
    3b6c:	5b108a08 	blpl	426394 <_Min_Heap_Size+0x425b94>
    3b70:	0f000004 	svceq	0x00000004
    3b74:	000004a4 	andeq	r0, r0, r4, lsr #9
    3b78:	5b1f8c08 	blpl	7e6ba0 <_Min_Heap_Size+0x7e63a0>
    3b7c:	02000004 	andeq	r0, r0, #4
    3b80:	fd0f0023 	stc2	0, cr0, [pc, #-140]	; 3afc <_Min_Heap_Size+0x32fc>
    3b84:	0800001c 	stmdaeq	r0, {r2, r3, r4}
    3b88:	032b1e8e 			; <UNDEFINED> instruction: 0x032b1e8e
    3b8c:	23020000 	movwcs	r0, #8192	; 0x2000
    3b90:	02a80f04 	adceq	r0, r8, #4, 30
    3b94:	90080000 	andls	r0, r8, r0
    3b98:	0002611e 	andeq	r6, r2, lr, lsl r1
    3b9c:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    3ba0:	00030a0f 	andeq	r0, r3, pc, lsl #20
    3ba4:	1e920800 	cdpne	8, 9, cr0, cr2, cr0, {0}
    3ba8:	00000376 	andeq	r0, r0, r6, ror r3
    3bac:	0f352302 	svceq	0x00352302
    3bb0:	000002a1 	andeq	r0, r0, r1, lsr #5
    3bb4:	611f9408 	tstvs	pc, r8, lsl #8
    3bb8:	02000004 	andeq	r0, r0, #4
    3bbc:	190f3823 	stmdbne	pc, {r0, r1, r5, fp, ip, sp}	; <UNPREDICTABLE>
    3bc0:	08000009 	stmdaeq	r0, {r0, r3}
    3bc4:	04752196 	ldrbteq	r2, [r5], #-406	; 0xfffffe6a
    3bc8:	23020000 	movwcs	r0, #8192	; 0x2000
    3bcc:	01d90f3c 	bicseq	r0, r9, ip, lsr pc
    3bd0:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
    3bd4:	00047521 	andeq	r7, r4, r1, lsr #10
    3bd8:	40230200 	eormi	r0, r3, r0, lsl #4
    3bdc:	0001970f 	andeq	r9, r1, pc, lsl #14
    3be0:	219a0800 	orrscs	r0, sl, r0, lsl #16
    3be4:	00000475 	andeq	r0, r0, r5, ror r4
    3be8:	0f442302 	svceq	0x00442302
    3bec:	00000555 	andeq	r0, r0, r5, asr r5
    3bf0:	75219c08 	strvc	r9, [r1, #-3080]!	; 0xfffff3f8
    3bf4:	02000004 	andeq	r0, r0, #4
    3bf8:	ad0f4823 	stcge	8, cr4, [pc, #-140]	; 3b74 <_Min_Heap_Size+0x3374>
    3bfc:	08000004 	stmdaeq	r0, {r2}
    3c00:	0475219e 	ldrbteq	r2, [r5], #-414	; 0xfffffe62
    3c04:	23020000 	movwcs	r0, #8192	; 0x2000
    3c08:	09070f4c 	stmdbeq	r7, {r2, r3, r6, r8, r9, sl, fp}
    3c0c:	a0080000 	andge	r0, r8, r0
    3c10:	00047521 	andeq	r7, r4, r1, lsr #10
    3c14:	50230200 	eorpl	r0, r3, r0, lsl #4
    3c18:	0003b00f 	andeq	fp, r3, pc
    3c1c:	1ea20800 	cdpne	8, 10, cr0, cr2, cr0, {0}
    3c20:	000000d2 	ldrdeq	r0, [r0], -r2
    3c24:	0f542302 	svceq	0x00542302
    3c28:	0000028a 	andeq	r0, r0, sl, lsl #5
    3c2c:	c61ea408 	ldrgt	sl, [lr], -r8, lsl #8
    3c30:	02000000 	andeq	r0, r0, #0
    3c34:	3e0f5823 	cdpcc	8, 0, cr5, cr15, cr3, {1}
    3c38:	08000003 	stmdaeq	r0, {r0, r1}
    3c3c:	00c61ea6 	sbceq	r1, r6, r6, lsr #29
    3c40:	23020000 	movwcs	r0, #8192	; 0x2000
    3c44:	0411005c 	ldreq	r0, [r1], #-92	; 0xffffffa4
    3c48:	00000152 	andeq	r0, r0, r2, asr r1
    3c4c:	01130412 	tsteq	r3, r2, lsl r4
    3c50:	0000046f 	andeq	r0, r0, pc, ror #8
    3c54:	00046f14 	andeq	r6, r4, r4, lsl pc
    3c58:	04110000 	ldreq	r0, [r1], #-0
    3c5c:	0000037b 	andeq	r0, r0, fp, ror r3
    3c60:	04630411 	strbteq	r0, [r3], #-1041	; 0xfffffbef
    3c64:	87030000 	strhi	r0, [r3, -r0]
    3c68:	08000006 	stmdaeq	r0, {r1, r2}
    3c6c:	037b02a8 	cmneq	fp, #168, 4	; 0x8000000a
    3c70:	1c0e0000 	stcne	0, cr0, [lr], {-0}
    3c74:	fa092e09 	blx	24f4a0 <_Min_Heap_Size+0x24eca0>
    3c78:	0f000004 	svceq	0x00000004
    3c7c:	0000018e 	andeq	r0, r0, lr, lsl #3
    3c80:	c60c3009 	strgt	r3, [ip], -r9
    3c84:	02000000 	andeq	r0, r0, #0
    3c88:	a20f0023 	andge	r0, pc, #35	; 0x23
    3c8c:	09000006 	stmdbeq	r0, {r1, r2}
    3c90:	00c60c36 	sbceq	r0, r6, r6, lsr ip
    3c94:	23020000 	movwcs	r0, #8192	; 0x2000
    3c98:	02790f04 	rsbseq	r0, r9, #4, 30
    3c9c:	39090000 	stmdbcc	r9, {}	; <UNPREDICTABLE>
    3ca0:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3ca4:	08230200 	stmdaeq	r3!, {r9}
    3ca8:	0003240f 	andeq	r2, r3, pc, lsl #8
    3cac:	0c3c0900 			; <UNDEFINED> instruction: 0x0c3c0900
    3cb0:	000000c6 	andeq	r0, r0, r6, asr #1
    3cb4:	0f0c2302 	svceq	0x000c2302
    3cb8:	0000069d 	muleq	r0, sp, r6
    3cbc:	c60c4309 	strgt	r4, [ip], -r9, lsl #6
    3cc0:	02000000 	andeq	r0, r0, #0
    3cc4:	250f1023 	strcs	r1, [pc, #-35]	; 3ca9 <_Min_Heap_Size+0x34a9>
    3cc8:	09000008 	stmdbeq	r0, {r3}
    3ccc:	00c60c46 	sbceq	r0, r6, r6, asr #24
    3cd0:	23020000 	movwcs	r0, #8192	; 0x2000
    3cd4:	01350f14 	teqeq	r5, r4, lsl pc
    3cd8:	49090000 	stmdbmi	r9, {}	; <UNPREDICTABLE>
    3cdc:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3ce0:	18230200 	stmdane	r3!, {r9}
    3ce4:	07c70300 	strbeq	r0, [r7, r0, lsl #6]
    3ce8:	4b090000 	blmi	243cf0 <_Min_Heap_Size+0x2434f0>
    3cec:	00048703 	andeq	r8, r4, r3, lsl #14
    3cf0:	01070b00 	tsteq	r7, r0, lsl #22
    3cf4:	0000003c 	andeq	r0, r0, ip, lsr r0
    3cf8:	45017509 	strmi	r7, [r1, #-1289]	; 0xfffffaf7
    3cfc:	0c000005 	stceq	0, cr0, [r0], {5}
    3d00:	0000075a 	andeq	r0, r0, sl, asr r7
    3d04:	02ad0c00 	adceq	r0, sp, #0, 24
    3d08:	0c200000 	stceq	0, cr0, [r0], #-0
    3d0c:	000008c2 	andeq	r0, r0, r2, asr #17
    3d10:	04bf0c24 	ldrteq	r0, [pc], #3108	; 3d18 <_Min_Heap_Size+0x3518>
    3d14:	0c210000 	stceq	0, cr0, [r1], #-0
    3d18:	00000700 	andeq	r0, r0, r0, lsl #14
    3d1c:	016f0c22 	cmneq	pc, r2, lsr #24
    3d20:	0c230000 	stceq	0, cr0, [r3], #-0
    3d24:	0000080e 	andeq	r0, r0, lr, lsl #16
    3d28:	065f0ca0 	ldrbeq	r0, [pc], -r0, lsr #25
    3d2c:	00e00000 	rsceq	r0, r0, r0
    3d30:	00002503 	andeq	r2, r0, r3, lsl #10
    3d34:	03870900 	orreq	r0, r7, #0, 18
    3d38:	00000506 	andeq	r0, r0, r6, lsl #10
    3d3c:	00054506 	andeq	r4, r5, r6, lsl #10
    3d40:	07de0300 	ldrbeq	r0, [lr, r0, lsl #6]
    3d44:	90090000 	andls	r0, r9, r0
    3d48:	0000c612 	andeq	ip, r0, r2, lsl r6
    3d4c:	05560600 	ldrbeq	r0, [r6, #-1536]	; 0xfffffa00
    3d50:	ca030000 	bgt	c3d58 <_Min_Heap_Size+0xc3558>
    3d54:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    3d58:	00c6129b 	smulleq	r1, r6, fp, r2
    3d5c:	67060000 	strvs	r0, [r6, -r0]
    3d60:	10000005 	andne	r0, r0, r5
    3d64:	00000477 	andeq	r0, r0, r7, ror r4
    3d68:	10a00948 	adcne	r0, r0, r8, asr #18
    3d6c:	00000676 	andeq	r0, r0, r6, ror r6
    3d70:	0004a40f 	andeq	sl, r4, pc, lsl #8
    3d74:	22a20900 	adccs	r0, r2, #0, 18
    3d78:	00000676 	andeq	r0, r0, r6, ror r6
    3d7c:	0f002302 	svceq	0x00002302
    3d80:	00001cfd 	strdeq	r1, [r0], -sp
    3d84:	fa21a409 	blx	86cdb0 <_Min_Heap_Size+0x86c5b0>
    3d88:	02000004 	andeq	r0, r0, #4
    3d8c:	ee0f0423 	cdp	4, 0, cr0, cr15, cr3, {1}
    3d90:	09000001 	stmdbeq	r0, {r0}
    3d94:	067c22a6 	ldrbteq	r2, [ip], -r6, lsr #5
    3d98:	23020000 	movwcs	r0, #8192	; 0x2000
    3d9c:	03760f20 	cmneq	r6, #32, 30	; 0x80
    3da0:	a8090000 	stmdage	r9, {}	; <UNPREDICTABLE>
    3da4:	0000b021 	andeq	fp, r0, r1, lsr #32
    3da8:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    3dac:	0001420f 	andeq	r4, r1, pc, lsl #4
    3db0:	21aa0900 			; <UNDEFINED> instruction: 0x21aa0900
    3db4:	000000bc 	strheq	r0, [r0], -ip
    3db8:	0f262302 	svceq	0x00262302
    3dbc:	00000845 	andeq	r0, r0, r5, asr #16
    3dc0:	8222ac09 	eorhi	sl, r2, #2304	; 0x900
    3dc4:	02000006 	andeq	r0, r0, #6
    3dc8:	6b0f2823 	blvs	3cde5c <_Min_Heap_Size+0x3cd65c>
    3dcc:	09000003 	stmdbeq	r0, {r0, r1}
    3dd0:	00b021ae 	adcseq	r2, r0, lr, lsr #3
    3dd4:	23020000 	movwcs	r0, #8192	; 0x2000
    3dd8:	08b60f2c 	ldmeq	r6!, {r2, r3, r5, r8, r9, sl, fp}
    3ddc:	b0090000 	andlt	r0, r9, r0
    3de0:	0000bc21 	andeq	fp, r0, r1, lsr #24
    3de4:	2e230200 	cdpcs	2, 2, cr0, cr3, cr0, {0}
    3de8:	0008f90f 	andeq	pc, r8, pc, lsl #18
    3dec:	1fb20900 	svcne	0x00b20900
    3df0:	00000562 	andeq	r0, r0, r2, ror #10
    3df4:	0f302302 	svceq	0x00302302
    3df8:	00001312 	andeq	r1, r0, r2, lsl r3
    3dfc:	7324b409 			; <UNDEFINED> instruction: 0x7324b409
    3e00:	02000005 	andeq	r0, r0, #5
    3e04:	e00f3423 	and	r3, pc, r3, lsr #8
    3e08:	09000004 	stmdbeq	r0, {r2}
    3e0c:	068822b6 			; <UNDEFINED> instruction: 0x068822b6
    3e10:	23020000 	movwcs	r0, #8192	; 0x2000
    3e14:	02e00f38 	rsceq	r0, r0, #56, 30	; 0xe0
    3e18:	b8090000 	stmdalt	r9, {}	; <UNPREDICTABLE>
    3e1c:	00068822 	andeq	r8, r6, r2, lsr #16
    3e20:	3c230200 	sfmcc	f0, 4, [r3], #-0
    3e24:	0002a80f 	andeq	sl, r2, pc, lsl #16
    3e28:	21ba0900 			; <UNDEFINED> instruction: 0x21ba0900
    3e2c:	00000261 	andeq	r0, r0, r1, ror #4
    3e30:	0f402302 	svceq	0x00402302
    3e34:	0000003b 	andeq	r0, r0, fp, lsr r0
    3e38:	5121bc09 			; <UNDEFINED> instruction: 0x5121bc09
    3e3c:	02000005 	andeq	r0, r0, #5
    3e40:	ec0f4123 	stfs	f4, [pc], {35}	; 0x23
    3e44:	09000008 	stmdbeq	r0, {r3}
    3e48:	055121c0 	ldrbeq	r2, [r1, #-448]	; 0xfffffe40
    3e4c:	23020000 	movwcs	r0, #8192	; 0x2000
    3e50:	03b00f42 	movseq	r0, #264	; 0x108
    3e54:	c3090000 	movwgt	r0, #36864	; 0x9000
    3e58:	0000d221 	andeq	sp, r0, r1, lsr #4
    3e5c:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    3e60:	d8041100 	stmdale	r4, {r8, ip}
    3e64:	11000001 	tstne	r0, r1
    3e68:	0000ab04 	andeq	sl, r0, r4, lsl #22
    3e6c:	9f041100 	svcls	0x00041100
    3e70:	11000000 	mrsne	r0, (UNDEF: 0)
    3e74:	00047b04 	andeq	r7, r4, r4, lsl #22
    3e78:	04790300 	ldrbteq	r0, [r9], #-768	; 0xfffffd00
    3e7c:	d5090000 	strle	r0, [r9, #-0]
    3e80:	00057803 	andeq	r7, r5, r3, lsl #16
    3e84:	068e0500 	streq	r0, [lr], r0, lsl #10
    3e88:	ea150000 	b	543e90 <_Min_Heap_Size+0x543690>
    3e8c:	01000014 	tsteq	r0, r4, lsl r0
    3e90:	010d0e6f 	tsteq	sp, pc, ror #28
    3e94:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
    3e98:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
    3e9c:	00000a6a 	andeq	r0, r0, sl, ror #20
    3ea0:	00079601 	andeq	r9, r7, r1, lsl #12
    3ea4:	17781600 	ldrbne	r1, [r8, -r0, lsl #12]!
    3ea8:	6f010000 	svcvs	0x00010000
    3eac:	0796300e 	ldreq	r3, [r6, lr]
    3eb0:	0a920000 	beq	fe483eb8 <_estack+0xde482c80>
    3eb4:	0a8a0000 	beq	fe283ebc <_estack+0xde282c84>
    3eb8:	b6170000 	ldrlt	r0, [r7], -r0
    3ebc:	01000001 	tsteq	r0, r1
    3ec0:	c60c0e71 			; <UNDEFINED> instruction: 0xc60c0e71
    3ec4:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
    3ec8:	c600000a 	strgt	r0, [r0], -sl
    3ecc:	1700000a 	strne	r0, [r0, -sl]
    3ed0:	000017b1 			; <UNDEFINED> instruction: 0x000017b1
    3ed4:	0c0e7201 	sfmeq	f7, 4, [lr], {1}
    3ed8:	000000c6 	andeq	r0, r0, r6, asr #1
    3edc:	00000ae1 	andeq	r0, r0, r1, ror #21
    3ee0:	00000adb 	ldrdeq	r0, [r0], -fp
    3ee4:	000a5818 	andeq	r5, sl, r8, lsl r8
    3ee8:	0045ab08 	subeq	sl, r5, r8, lsl #22
    3eec:	00071700 	andeq	r1, r7, r0, lsl #14
    3ef0:	50011900 	andpl	r1, r1, r0, lsl #18
    3ef4:	2ca40305 	stccs	3, cr0, [r4], #20
    3ef8:	01190800 	tsteq	r9, r0, lsl #16
    3efc:	780a0351 	stmdavc	sl, {r0, r4, r6, r8, r9}
    3f00:	a61a000e 	ldrge	r0, [sl], -lr
    3f04:	ba08000a 	blt	203f34 <_Min_Heap_Size+0x203734>
    3f08:	18000045 	stmdane	r0, {r0, r2, r6}
    3f0c:	08000ab2 	stmdaeq	r0, {r1, r4, r5, r7, r9, fp}
    3f10:	000045ab 	andeq	r4, r0, fp, lsr #11
    3f14:	0000073e 	andeq	r0, r0, lr, lsr r7
    3f18:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    3f1c:	002ca403 	eoreq	sl, ip, r3, lsl #8
    3f20:	51011908 	tstpl	r1, r8, lsl #18
    3f24:	0e750a03 	vaddeq.f32	s1, s10, s6
    3f28:	0abe1800 	beq	fef89f30 <_estack+0xdef88cf8>
    3f2c:	45ab0800 	strmi	r0, [fp, #2048]!	; 0x800
    3f30:	075c0000 	ldrbeq	r0, [ip, -r0]
    3f34:	01190000 	tsteq	r9, r0
    3f38:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    3f3c:	1908002c 	stmdbne	r8, {r2, r3, r5}
    3f40:	0a035101 	beq	d834c <_Min_Heap_Size+0xd7b4c>
    3f44:	18000e76 	stmdane	r0, {r1, r2, r4, r5, r6, r9, sl, fp}
    3f48:	08000aca 	stmdaeq	r0, {r1, r3, r6, r7, r9, fp}
    3f4c:	000045ab 	andeq	r4, r0, fp, lsr #11
    3f50:	0000077a 	andeq	r0, r0, sl, ror r7
    3f54:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    3f58:	002ca403 	eoreq	sl, ip, r3, lsl #8
    3f5c:	51011908 	tstpl	r1, r8, lsl #18
    3f60:	0e770a03 	vaddeq.f32	s1, s14, s6
    3f64:	0ad01a00 	beq	ff40a76c <_estack+0xdf409534>
    3f68:	45c90800 	strbmi	r0, [r9, #2048]	; 0x800
    3f6c:	001a0000 	andseq	r0, sl, r0
    3f70:	d808000b 	stmdale	r8, {r0, r1, r3}
    3f74:	1a000045 	bne	4090 <_Min_Heap_Size+0x3890>
    3f78:	08000b52 	stmdaeq	r0, {r1, r4, r6, r8, r9, fp}
    3f7c:	000045d8 	ldrdeq	r4, [r0], -r8
    3f80:	8e041100 	adfhis	f1, f4, f0
    3f84:	1b000006 	blne	3fa4 <_Min_Heap_Size+0x37a4>
    3f88:	00001988 	andeq	r1, r0, r8, lsl #19
    3f8c:	1a0e0a01 	bne	386798 <_Min_Heap_Size+0x385f98>
    3f90:	00023a01 	andeq	r3, r2, r1, lsl #20
    3f94:	000e4600 	andeq	r4, lr, r0, lsl #12
    3f98:	000f2c08 	andeq	r2, pc, r8, lsl #24
    3f9c:	000b0a08 	andeq	r0, fp, r8, lsl #20
    3fa0:	08cf0100 	stmiaeq	pc, {r8}^	; <UNPREDICTABLE>
    3fa4:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    3fa8:	01000017 	tsteq	r0, r7, lsl r0
    3fac:	963e0e0a 	ldrtls	r0, [lr], -sl, lsl #28
    3fb0:	76000007 	strvc	r0, [r0], -r7
    3fb4:	6600000b 	strvs	r0, [r0], -fp
    3fb8:	1700000b 	strne	r0, [r0, -fp]
    3fbc:	000013f5 	strdeq	r1, [r0], -r5
    3fc0:	0d0e0c01 	stceq	12, cr0, [lr, #-4]
    3fc4:	00000682 	andeq	r0, r0, r2, lsl #13
    3fc8:	00000be8 	andeq	r0, r0, r8, ror #23
    3fcc:	00000be2 	andeq	r0, r0, r2, ror #23
    3fd0:	00145f17 	andseq	r5, r4, r7, lsl pc
    3fd4:	0e0d0100 	adfeqe	f0, f5, f0
    3fd8:	0008cf0d 	andeq	ip, r8, sp, lsl #30
    3fdc:	000c1800 	andeq	r1, ip, r0, lsl #16
    3fe0:	000c1200 	andeq	r1, ip, r0, lsl #4
    3fe4:	0eba1c00 	cdpeq	12, 11, cr1, cr10, cr0, {0}
    3fe8:	0ed20800 	cdpeq	8, 13, cr0, cr2, cr0, {0}
    3fec:	08920800 	ldmeq	r2, {fp}
    3ff0:	761d0000 	ldrvc	r0, [sp], -r0
    3ff4:	01006c61 	tsteq	r0, r1, ror #24
    3ff8:	c6090e42 	strgt	r0, [r9], -r2, asr #28
    3ffc:	45000000 	strmi	r0, [r0, #-0]
    4000:	4300000c 	movwmi	r0, #12
    4004:	1e00000c 	cdpne	0, 0, cr0, cr0, cr12, {0}
    4008:	0000457d 	andeq	r4, r0, sp, ror r5
    400c:	08000ebc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, fp}
    4010:	0ebc0000 	cdpeq	0, 11, cr0, cr12, cr0, {0}
    4014:	0ec40800 	cdpeq	8, 12, cr0, cr4, cr0, {0}
    4018:	42010800 	andmi	r0, r1, #0, 16
    401c:	0852090e 	ldmdaeq	r2, {r1, r2, r3, r8, fp}^
    4020:	901f0000 	andsls	r0, pc, r0
    4024:	5e000045 	cdppl	0, 0, cr0, cr0, cr5, {2}
    4028:	5800000c 	stmdapl	r0, {r2, r3}
    402c:	2000000c 	andcs	r0, r0, ip
    4030:	0000459d 	muleq	r0, sp, r5
    4034:	00000c8d 	andeq	r0, r0, sp, lsl #25
    4038:	00000c8b 	andeq	r0, r0, fp, lsl #25
    403c:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    4040:	0ec80000 	cdpeq	0, 12, cr0, cr8, cr0, {0}
    4044:	00010800 	andeq	r0, r1, r0, lsl #16
    4048:	08000ec8 	stmdaeq	r0, {r3, r6, r7, r9, sl, fp}
    404c:	08000ece 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, sl, fp}
    4050:	090e4201 	stmdbeq	lr, {r0, r9, lr}
    4054:	00455c1f 	subeq	r5, r5, pc, lsl ip
    4058:	000ca400 	andeq	sl, ip, r0, lsl #8
    405c:	000ca000 	andeq	sl, ip, r0
    4060:	454f1f00 	strbmi	r1, [pc, #-3840]	; 3168 <_Min_Heap_Size+0x2968>
    4064:	0cc60000 	stcleq	0, cr0, [r6], {0}
    4068:	0cc40000 	stcleq	0, cr0, [r4], {0}
    406c:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    4070:	db000045 	blle	418c <_Min_Heap_Size+0x398c>
    4074:	d900000c 	stmdble	r0, {r2, r3}
    4078:	0000000c 	andeq	r0, r0, ip
    407c:	0edc1c00 	cdpeq	12, 13, cr1, cr12, cr0, {0}
    4080:	0eea0800 	cdpeq	8, 14, cr0, cr10, cr0, {0}
    4084:	08b00800 	ldmeq	r0!, {fp}
    4088:	b6220000 	strtlt	r0, [r2], -r0
    408c:	01000001 	tsteq	r0, r1
    4090:	d20b0e48 	andle	r0, fp, #72, 28	; 0x480
    4094:	02000000 	andeq	r0, r0, #0
    4098:	18007491 	stmdane	r0, {r0, r4, r7, sl, ip, sp, lr}
    409c:	08000ef0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl, fp}
    40a0:	00001a8f 	andeq	r1, r0, pc, lsl #21
    40a4:	000008c5 	andeq	r0, r0, r5, asr #17
    40a8:	03500119 	cmpeq	r0, #1073741830	; 0x40000006
    40ac:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    40b0:	000f221a 	andeq	r2, pc, sl, lsl r2	; <UNPREDICTABLE>
    40b4:	001ba008 	andseq	sl, fp, r8
    40b8:	04110000 	ldreq	r0, [r1], #-0
    40bc:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    40c0:	0018971b 	andseq	r9, r8, fp, lsl r7
    40c4:	0df10100 	ldfeqe	f0, [r1]
    40c8:	023a011a 	eorseq	r0, sl, #-2147483642	; 0x80000006
    40cc:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
    40d0:	0e300800 	cdpeq	8, 3, cr0, cr0, cr0, {0}
    40d4:	0cee0800 	stcleq	8, cr0, [lr]
    40d8:	1b010000 	blne	440e0 <_Min_Heap_Size+0x438e0>
    40dc:	16000009 	strne	r0, [r0], -r9
    40e0:	00001778 	andeq	r1, r0, r8, ror r7
    40e4:	420df101 	andmi	pc, sp, #1073741824	; 0x40000000
    40e8:	00000796 	muleq	r0, r6, r7
    40ec:	00000d12 	andeq	r0, r0, r2, lsl sp
    40f0:	00000d0e 	andeq	r0, r0, lr, lsl #26
    40f4:	000e2c23 	andeq	r2, lr, r3, lsr #24
    40f8:	001bf608 	andseq	pc, fp, r8, lsl #12
    40fc:	50011900 	andpl	r1, r1, r0, lsl #18
    4100:	5001f303 	andpl	pc, r1, r3, lsl #6
    4104:	34240000 	strtcc	r0, [r4], #-0
    4108:	01000018 	tsteq	r0, r8, lsl r0
    410c:	011a0dc9 	tsteq	sl, r9, asr #27
    4110:	0000023a 	andeq	r0, r0, sl, lsr r2
    4114:	080009bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, fp}
    4118:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
    411c:	01007d02 	tsteq	r0, r2, lsl #26
    4120:	00000964 	andeq	r0, r0, r4, ror #18
    4124:	00177816 	andseq	r7, r7, r6, lsl r8
    4128:	0dc90100 	stfeqe	f0, [r9]
    412c:	0007963f 	andeq	r9, r7, pc, lsr r6
    4130:	000d3d00 	andeq	r3, sp, r0, lsl #26
    4134:	000d3300 	andeq	r3, sp, r0, lsl #6
    4138:	6d741d00 	ldclvs	13, cr1, [r4, #-0]
    413c:	cb010070 	blgt	44304 <_Min_Heap_Size+0x43b04>
    4140:	0964130d 	stmdbeq	r4!, {r0, r2, r3, r8, r9, ip}^
    4144:	0d860000 	stceq	0, cr0, [r6]
    4148:	0d820000 	stceq	0, cr0, [r2]
    414c:	11000000 	mrsne	r0, (UNDEF: 0)
    4150:	0000c104 	andeq	ip, r0, r4, lsl #2
    4154:	15501500 	ldrbne	r1, [r0, #-1280]	; 0xfffffb00
    4158:	af010000 	svcge	0x00010000
    415c:	00010d0d 	andeq	r0, r1, sp, lsl #26
    4160:	00000000 	andeq	r0, r0, r0
    4164:	a5000000 	strge	r0, [r0, #-0]
    4168:	0100000d 	tsteq	r0, sp
    416c:	000009b9 			; <UNDEFINED> instruction: 0x000009b9
    4170:	00160016 	andseq	r0, r6, r6, lsl r0
    4174:	0daf0100 	stfeqs	f0, [pc]	; 417c <_Min_Heap_Size+0x397c>
    4178:	0006883c 	andeq	r8, r6, ip, lsr r8
    417c:	000dc900 	andeq	ip, sp, r0, lsl #18
    4180:	000dc500 	andeq	ip, sp, r0, lsl #10
    4184:	17781700 	ldrbne	r1, [r8, -r0, lsl #14]!
    4188:	b1010000 	mrslt	r0, (UNDEF: 1)
    418c:	0796170d 	ldreq	r1, [r6, sp, lsl #14]
    4190:	0dec0000 	stcleq	0, cr0, [ip]
    4194:	0dea0000 	stcleq	0, cr0, [sl]
    4198:	001a0000 	andseq	r0, sl, r0
    419c:	c9000000 	stmdbgt	r0, {}	; <UNPREDICTABLE>
    41a0:	0000001a 	andeq	r0, r0, sl, lsl r0
    41a4:	00193f15 	andseq	r3, r9, r5, lsl pc
    41a8:	0d930100 	ldfeqs	f0, [r3]
    41ac:	0000010d 	andeq	r0, r0, sp, lsl #2
    41b0:	00000000 	andeq	r0, r0, r0
    41b4:	0dff0000 	ldcleq	0, cr0, [pc]	; 41bc <_Min_Heap_Size+0x39bc>
    41b8:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    41bc:	1600000a 	strne	r0, [r0], -sl
    41c0:	00001600 	andeq	r1, r0, r0, lsl #12
    41c4:	3c0d9301 	stccc	3, cr9, [sp], {1}
    41c8:	00000688 	andeq	r0, r0, r8, lsl #13
    41cc:	00000e23 	andeq	r0, r0, r3, lsr #28
    41d0:	00000e1f 	andeq	r0, r0, pc, lsl lr
    41d4:	00177817 	andseq	r7, r7, r7, lsl r8
    41d8:	0d950100 	ldfeqs	f0, [r5]
    41dc:	00079617 	andeq	r9, r7, r7, lsl r6
    41e0:	000e4600 	andeq	r4, lr, r0, lsl #12
    41e4:	000e4400 	andeq	r4, lr, r0, lsl #8
    41e8:	00001a00 	andeq	r1, r0, r0, lsl #20
    41ec:	1af40000 	bne	ffd041f4 <_estack+0xdfd02fbc>
    41f0:	15000000 	strne	r0, [r0, #-0]
    41f4:	00001503 	andeq	r1, r0, r3, lsl #10
    41f8:	0d0d6501 	cfstr32eq	mvfx6, [sp, #-4]
    41fc:	00000001 	andeq	r0, r0, r1
    4200:	00000000 	andeq	r0, r0, r0
    4204:	000e5900 	andeq	r5, lr, r0, lsl #18
    4208:	0a570100 	beq	15c4610 <_Min_Heap_Size+0x15c3e10>
    420c:	00160000 	andseq	r0, r6, r0
    4210:	01000016 	tsteq	r0, r6, lsl r0
    4214:	88380d65 	ldmdahi	r8!, {r0, r2, r5, r6, r8, sl, fp}
    4218:	7d000006 	stcvc	0, cr0, [r0, #-24]	; 0xffffffe8
    421c:	7900000e 	stmdbvc	r0, {r1, r2, r3}
    4220:	1700000e 	strne	r0, [r0, -lr]
    4224:	00001778 	andeq	r1, r0, r8, ror r7
    4228:	170d6701 	strne	r6, [sp, -r1, lsl #14]
    422c:	00000796 	muleq	r0, r6, r7
    4230:	00000ea0 	andeq	r0, r0, r0, lsr #29
    4234:	00000e9e 	muleq	r0, lr, lr
    4238:	0000001a 	andeq	r0, r0, sl, lsl r0
    423c:	001b1f00 	andseq	r1, fp, r0, lsl #30
    4240:	e8150000 	ldmda	r5, {}	; <UNPREDICTABLE>
    4244:	01000015 	tsteq	r0, r5, lsl r0
    4248:	010d0d37 	tsteq	sp, r7, lsr sp
	...
    4254:	00000eb3 			; <UNDEFINED> instruction: 0x00000eb3
    4258:	000aa601 	andeq	sl, sl, r1, lsl #12
    425c:	16001600 	strne	r1, [r0], -r0, lsl #12
    4260:	37010000 	strcc	r0, [r1, -r0]
    4264:	0688380d 	streq	r3, [r8], sp, lsl #16
    4268:	0ed70000 	cdpeq	0, 13, cr0, cr7, cr0, {0}
    426c:	0ed30000 	cdpeq	0, 13, cr0, cr3, cr0, {0}
    4270:	78170000 	ldmdavc	r7, {}	; <UNPREDICTABLE>
    4274:	01000017 	tsteq	r0, r7, lsl r0
    4278:	96170d39 			; <UNDEFINED> instruction: 0x96170d39
    427c:	fa000007 	blx	42a0 <_Min_Heap_Size+0x3aa0>
    4280:	f800000e 			; <UNDEFINED> instruction: 0xf800000e
    4284:	1a00000e 	bne	42c4 <_Min_Heap_Size+0x3ac4>
    4288:	00000000 	andeq	r0, r0, r0
    428c:	00001b1f 	andeq	r1, r0, pc, lsl fp
    4290:	18451500 	stmdane	r5, {r8, sl, ip}^
    4294:	1f010000 	svcne	0x00010000
    4298:	34010d0d 	strcc	r0, [r1], #-3341	; 0xfffff2f3
    429c:	4408000e 	strmi	r0, [r8], #-14
    42a0:	0d08000e 	stceq	0, cr0, [r8, #-56]	; 0xffffffc8
    42a4:	0100000f 	tsteq	r0, pc
    42a8:	00000af5 	strdeq	r0, [r0], -r5
    42ac:	00160016 	andseq	r0, r6, r6, lsl r0
    42b0:	0d1f0100 	ldfeqs	f0, [pc, #-0]	; 42b8 <_Min_Heap_Size+0x3ab8>
    42b4:	00068835 	andeq	r8, r6, r5, lsr r8
    42b8:	000f3100 	andeq	r3, pc, r0, lsl #2
    42bc:	000f2d00 	andeq	r2, pc, r0, lsl #26
    42c0:	17781700 	ldrbne	r1, [r8, -r0, lsl #14]!
    42c4:	21010000 	mrscs	r0, (UNDEF: 1)
    42c8:	0796170d 	ldreq	r1, [r6, sp, lsl #14]
    42cc:	0f540000 	svceq	0x00540000
    42d0:	0f520000 	svceq	0x00520000
    42d4:	421a0000 	andsmi	r0, sl, #0
    42d8:	4a08000e 	bmi	204318 <_Min_Heap_Size+0x203b18>
    42dc:	0000001b 	andeq	r0, r0, fp, lsl r0
    42e0:	0013cf25 	andseq	ip, r3, r5, lsr #30
    42e4:	0d070100 	stfeqs	f0, [r7, #-0]
    42e8:	0960010d 	stmdbeq	r0!, {r0, r2, r3, r8}^
    42ec:	09bc0800 	ldmibeq	ip!, {fp}
    42f0:	7d020800 	stcvc	8, cr0, [r2, #-0]
    42f4:	0ce90100 	stfeqe	f0, [r9]
    42f8:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    42fc:	01000017 	tsteq	r0, r7, lsl r0
    4300:	96340d07 	ldrtls	r0, [r4], -r7, lsl #26
    4304:	69000007 	stmdbvs	r0, {r0, r1, r2}
    4308:	6700000f 	strvs	r0, [r0, -pc]
    430c:	1c00000f 	stcne	0, cr0, [r0], {15}
    4310:	08000960 	stmdaeq	r0, {r5, r6, r8, fp}
    4314:	08000978 	stmdaeq	r0, {r3, r4, r5, r6, r8, fp}
    4318:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
    431c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4320:	0d0a0100 	stfeqs	f0, [sl, #-0]
    4324:	0000c603 	andeq	ip, r0, r3, lsl #12
    4328:	000f7e00 	andeq	r7, pc, r0, lsl #28
    432c:	000f7c00 	andeq	r7, pc, r0, lsl #24
    4330:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
    4334:	09620000 	stmdbeq	r2!, {}^	; <UNPREDICTABLE>
    4338:	00000800 	andeq	r0, r0, r0, lsl #16
    433c:	08000962 	stmdaeq	r0, {r1, r5, r6, r8, fp}
    4340:	0800096a 	stmdaeq	r0, {r1, r3, r5, r6, r8, fp}
    4344:	030d0a01 	movweq	r0, #55809	; 0xda01
    4348:	00000b7c 	andeq	r0, r0, ip, ror fp
    434c:	0045901f 	subeq	r9, r5, pc, lsl r0
    4350:	000f9700 	andeq	r9, pc, r0, lsl #14
    4354:	000f9100 	andeq	r9, pc, r0, lsl #2
    4358:	459d2000 	ldrmi	r2, [sp]
    435c:	0fc60000 	svceq	0x00c60000
    4360:	0fc40000 	svceq	0x00c40000
    4364:	21000000 	mrscs	r0, (UNDEF: 0)
    4368:	0000453c 	andeq	r4, r0, ip, lsr r5
    436c:	0800096e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, fp}
    4370:	096e0001 	stmdbeq	lr!, {r0}^
    4374:	09740800 	ldmdbeq	r4!, {fp}^
    4378:	0a010800 	beq	46380 <_Min_Heap_Size+0x45b80>
    437c:	5c1f030d 	ldcpl	3, cr0, [pc], {13}
    4380:	dd000045 	stcle	0, cr0, [r0, #-276]	; 0xfffffeec
    4384:	d900000f 	stmdble	r0, {r0, r1, r2, r3}
    4388:	1f00000f 	svcne	0x0000000f
    438c:	0000454f 	andeq	r4, r0, pc, asr #10
    4390:	00000fff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    4394:	00000ffd 	strdeq	r0, [r0], -sp
    4398:	00456920 	subeq	r6, r5, r0, lsr #18
    439c:	00101400 	andseq	r1, r0, r0, lsl #8
    43a0:	00101200 	andseq	r1, r0, r0, lsl #4
    43a4:	1c000000 	stcne	0, cr0, [r0], {-0}
    43a8:	08000978 	stmdaeq	r0, {r3, r4, r5, r6, r8, fp}
    43ac:	08000990 	stmdaeq	r0, {r4, r7, r8, fp}
    43b0:	00000c54 	andeq	r0, r0, r4, asr ip
    43b4:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    43b8:	0d0b0100 	stfeqs	f0, [fp, #-0]
    43bc:	0000c603 	andeq	ip, r0, r3, lsl #12
    43c0:	00102900 	andseq	r2, r0, r0, lsl #18
    43c4:	00102700 	andseq	r2, r0, r0, lsl #14
    43c8:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
    43cc:	097a0000 	ldmdbeq	sl!, {}^	; <UNPREDICTABLE>
    43d0:	00000800 	andeq	r0, r0, r0, lsl #16
    43d4:	0800097a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, fp}
    43d8:	08000982 	stmdaeq	r0, {r1, r7, r8, fp}
    43dc:	030d0b01 	movweq	r0, #56065	; 0xdb01
    43e0:	00000c14 	andeq	r0, r0, r4, lsl ip
    43e4:	0045901f 	subeq	r9, r5, pc, lsl r0
    43e8:	00104200 	andseq	r4, r0, r0, lsl #4
    43ec:	00103c00 	andseq	r3, r0, r0, lsl #24
    43f0:	459d2000 	ldrmi	r2, [sp]
    43f4:	10710000 	rsbsne	r0, r1, r0
    43f8:	106f0000 	rsbne	r0, pc, r0
    43fc:	21000000 	mrscs	r0, (UNDEF: 0)
    4400:	0000453c 	andeq	r4, r0, ip, lsr r5
    4404:	08000986 	stmdaeq	r0, {r1, r2, r7, r8, fp}
    4408:	09860001 	stmibeq	r6, {r0}
    440c:	098c0800 	stmibeq	ip, {fp}
    4410:	0b010800 	bleq	46418 <_Min_Heap_Size+0x45c18>
    4414:	5c1f030d 	ldcpl	3, cr0, [pc], {13}
    4418:	88000045 	stmdahi	r0, {r0, r2, r6}
    441c:	84000010 	strhi	r0, [r0], #-16
    4420:	1f000010 	svcne	0x00000010
    4424:	0000454f 	andeq	r4, r0, pc, asr #10
    4428:	000010aa 	andeq	r1, r0, sl, lsr #1
    442c:	000010a8 	andeq	r1, r0, r8, lsr #1
    4430:	00456920 	subeq	r6, r5, r0, lsr #18
    4434:	0010bf00 	andseq	fp, r0, r0, lsl #30
    4438:	0010bd00 	andseq	fp, r0, r0, lsl #26
    443c:	26000000 	strcs	r0, [r0], -r0
    4440:	080009a2 	stmdaeq	r0, {r1, r5, r7, r8, fp}
    4444:	080009bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, fp}
    4448:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    444c:	0d100100 	ldfeqs	f0, [r0, #-0]
    4450:	0000c605 	andeq	ip, r0, r5, lsl #12
    4454:	0010d400 	andseq	sp, r0, r0, lsl #8
    4458:	0010d200 	andseq	sp, r0, r0, lsl #4
    445c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
    4460:	09a40000 	stmibeq	r4!, {}	; <UNPREDICTABLE>
    4464:	00000800 	andeq	r0, r0, r0, lsl #16
    4468:	080009a4 	stmdaeq	r0, {r2, r5, r7, r8, fp}
    446c:	080009ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp}
    4470:	050d1001 	streq	r1, [sp, #-1]
    4474:	00000ca8 	andeq	r0, r0, r8, lsr #25
    4478:	0045901f 	subeq	r9, r5, pc, lsl r0
    447c:	0010ed00 	andseq	lr, r0, r0, lsl #26
    4480:	0010e700 	andseq	lr, r0, r0, lsl #14
    4484:	459d2000 	ldrmi	r2, [sp]
    4488:	111c0000 	tstne	ip, r0
    448c:	111a0000 	tstne	sl, r0
    4490:	21000000 	mrscs	r0, (UNDEF: 0)
    4494:	0000453c 	andeq	r4, r0, ip, lsr r5
    4498:	080009b0 	stmdaeq	r0, {r4, r5, r7, r8, fp}
    449c:	09b00001 	ldmibeq	r0!, {r0}
    44a0:	09b60800 	ldmibeq	r6!, {fp}
    44a4:	10010800 	andne	r0, r1, r0, lsl #16
    44a8:	5c1f050d 	cfldr32pl	mvfx0, [pc], {13}
    44ac:	33000045 	movwcc	r0, #69	; 0x45
    44b0:	2f000011 	svccs	0x00000011
    44b4:	1f000011 	svcne	0x00000011
    44b8:	0000454f 	andeq	r4, r0, pc, asr #10
    44bc:	00001155 	andeq	r1, r0, r5, asr r1
    44c0:	00001153 	andeq	r1, r0, r3, asr r1
    44c4:	00456920 	subeq	r6, r5, r0, lsr #18
    44c8:	00116a00 	andseq	r6, r1, r0, lsl #20
    44cc:	00116800 	andseq	r6, r1, r0, lsl #16
    44d0:	00000000 	andeq	r0, r0, r0
    44d4:	0013e225 	andseq	lr, r3, r5, lsr #4
    44d8:	0cf90100 	ldfeqe	f0, [r9]
    44dc:	0000010d 	andeq	r0, r0, sp, lsl #2
    44e0:	00000000 	andeq	r0, r0, r0
    44e4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    44e8:	0dad0100 	stfeqs	f0, [sp]
    44ec:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    44f0:	01000017 	tsteq	r0, r7, lsl r0
    44f4:	96340cf9 			; <UNDEFINED> instruction: 0x96340cf9
    44f8:	7f000007 	svcvc	0x00000007
    44fc:	7d000011 	stcvc	0, cr0, [r0, #-68]	; 0xffffffbc
    4500:	26000011 			; <UNDEFINED> instruction: 0x26000011
	...
    450c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4510:	0cfc0100 	ldfeqe	f0, [ip]
    4514:	0000c603 	andeq	ip, r0, r3, lsl #12
    4518:	00119400 	andseq	r9, r1, r0, lsl #8
    451c:	00119200 	andseq	r9, r1, r0, lsl #4
    4520:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4534:	030cfc01 	movweq	pc, #52225	; 0xcc01	; <UNPREDICTABLE>
    4538:	00000d6c 	andeq	r0, r0, ip, ror #26
    453c:	0045901f 	subeq	r9, r5, pc, lsl r0
    4540:	0011ad00 	andseq	sl, r1, r0, lsl #26
    4544:	0011a700 	andseq	sl, r1, r0, lsl #14
    4548:	459d2000 	ldrmi	r2, [sp]
    454c:	11dc0000 	bicsne	r0, ip, r0
    4550:	11da0000 	bicsne	r0, sl, r0
    4554:	21000000 	mrscs	r0, (UNDEF: 0)
    4558:	0000453c 	andeq	r4, r0, ip, lsr r5
    455c:	00000000 	andeq	r0, r0, r0
    4560:	00000001 	andeq	r0, r0, r1
    4564:	00000000 	andeq	r0, r0, r0
    4568:	fc010000 	stc2	0, cr0, [r1], {-0}
    456c:	5c1f030c 	ldcpl	3, cr0, [pc], {12}
    4570:	f3000045 	vhadd.u8	q0, q0, <illegal reg q2.5>
    4574:	ef000011 	svc	0x00000011
    4578:	1f000011 	svcne	0x00000011
    457c:	0000454f 	andeq	r4, r0, pc, asr #10
    4580:	00001215 	andeq	r1, r0, r5, lsl r2
    4584:	00001213 	andeq	r1, r0, r3, lsl r2
    4588:	00456920 	subeq	r6, r5, r0, lsr #18
    458c:	00122a00 	andseq	r2, r2, r0, lsl #20
    4590:	00122800 	andseq	r2, r2, r0, lsl #16
    4594:	00000000 	andeq	r0, r0, r0
    4598:	16f80127 	ldrbtne	r0, [r8], r7, lsr #2
    459c:	c7010000 	strgt	r0, [r1, -r0]
    45a0:	3a01130c 	bcc	491d8 <_Min_Heap_Size+0x489d8>
    45a4:	00000002 	andeq	r0, r0, r2
    45a8:	00000000 	andeq	r0, r0, r0
    45ac:	3d000000 	stccc	0, cr0, [r0, #-0]
    45b0:	01000012 	tsteq	r0, r2, lsl r0
    45b4:	00001019 	andeq	r1, r0, r9, lsl r0
    45b8:	00177816 	andseq	r7, r7, r6, lsl r8
    45bc:	0cc70100 	stfeqe	f0, [r7], {0}
    45c0:	0007963e 	andeq	r9, r7, lr, lsr r6
    45c4:	00127b00 	andseq	r7, r2, r0, lsl #22
    45c8:	00127500 	andseq	r7, r2, r0, lsl #10
    45cc:	13c91600 	bicne	r1, r9, #0, 12
    45d0:	c7010000 	strgt	r0, [r1, -r0]
    45d4:	06824e0c 	streq	r4, [r2], ip, lsl #28
    45d8:	12ad0000 	adcne	r0, sp, #0
    45dc:	12a70000 	adcne	r0, r7, #0
    45e0:	8f160000 	svchi	0x00160000
    45e4:	01000009 	tsteq	r0, r9
    45e8:	b05e0cc7 	subslt	r0, lr, r7, asr #25
    45ec:	e1000000 	mrs	r0, (UNDEF: 0)
    45f0:	d9000012 	stmdble	r0, {r1, r4}
    45f4:	1d000012 	stcne	0, cr0, [r0, #-72]	; 0xffffffb8
    45f8:	00706d74 	rsbseq	r6, r0, r4, ror sp
    45fc:	0d0cc901 	vstreq.16	s24, [ip, #-2]	; <UNPREDICTABLE>
    4600:	00001019 	andeq	r1, r0, r9, lsl r0
    4604:	0000131c 	andeq	r1, r0, ip, lsl r3
    4608:	0000131a 	andeq	r1, r0, sl, lsl r3
    460c:	0000001c 	andeq	r0, r0, ip, lsl r0
    4610:	00000000 	andeq	r0, r0, r0
    4614:	000e3f00 	andeq	r3, lr, r0, lsl #30
    4618:	01b62200 			; <UNDEFINED> instruction: 0x01b62200
    461c:	e2010000 	and	r0, r1, #0
    4620:	00d2030c 	sbcseq	r0, r2, ip, lsl #6
    4624:	91020000 	mrsls	r0, (UNDEF: 2)
    4628:	001c006c 	andseq	r0, ip, ip, rrx
    462c:	00000000 	andeq	r0, r0, r0
    4630:	d7000000 	strle	r0, [r0, -r0]
    4634:	1d00000e 	stcne	0, cr0, [r0, #-56]	; 0xffffffc8
    4638:	006c6176 	rsbeq	r6, ip, r6, ror r1
    463c:	050ce701 	streq	lr, [ip, #-1793]	; 0xfffff8ff
    4640:	000000c6 	andeq	r0, r0, r6, asr #1
    4644:	00001336 	andeq	r1, r0, r6, lsr r3
    4648:	00001334 	andeq	r1, r0, r4, lsr r3
    464c:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    465c:	01000000 	mrseq	r0, (UNDEF: 0)
    4660:	97050ce7 	strls	r0, [r5, -r7, ror #25]
    4664:	1f00000e 	svcne	0x0000000e
    4668:	00004590 	muleq	r0, r0, r5
    466c:	0000134f 	andeq	r1, r0, pc, asr #6
    4670:	00001349 	andeq	r1, r0, r9, asr #6
    4674:	00459d20 	subeq	r9, r5, r0, lsr #26
    4678:	00137e00 	andseq	r7, r3, r0, lsl #28
    467c:	00137c00 	andseq	r7, r3, r0, lsl #24
    4680:	3c210000 	stccc	0, cr0, [r1], #-0
    4684:	00000045 	andeq	r0, r0, r5, asr #32
    4688:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4694:	0ce70100 	stfeqe	f0, [r7]
    4698:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    469c:	13950000 	orrsne	r0, r5, #0
    46a0:	13910000 	orrsne	r0, r1, #0
    46a4:	4f1f0000 	svcmi	0x001f0000
    46a8:	b7000045 	strlt	r0, [r0, -r5, asr #32]
    46ac:	b5000013 	strlt	r0, [r0, #-19]	; 0xffffffed
    46b0:	20000013 	andcs	r0, r0, r3, lsl r0
    46b4:	00004569 	andeq	r4, r0, r9, ror #10
    46b8:	000013cc 	andeq	r1, r0, ip, asr #7
    46bc:	000013ca 	andeq	r1, r0, sl, asr #7
    46c0:	001c0000 	andseq	r0, ip, r0
    46c4:	00000000 	andeq	r0, r0, r0
    46c8:	6f000000 	svcvs	0x00000000
    46cc:	1d00000f 	stcne	0, cr0, [r0, #-60]	; 0xffffffc4
    46d0:	006c6176 	rsbeq	r6, ip, r6, ror r1
    46d4:	030ceb01 	movweq	lr, #51969	; 0xcb01
    46d8:	000000c6 	andeq	r0, r0, r6, asr #1
    46dc:	000013e1 	andeq	r1, r0, r1, ror #7
    46e0:	000013df 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    46e4:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    46f4:	01000000 	mrseq	r0, (UNDEF: 0)
    46f8:	2f030ceb 	svccs	0x00030ceb
    46fc:	1f00000f 	svcne	0x0000000f
    4700:	00004590 	muleq	r0, r0, r5
    4704:	000013fa 	strdeq	r1, [r0], -sl
    4708:	000013f4 	strdeq	r1, [r0], -r4
    470c:	00459d20 	subeq	r9, r5, r0, lsr #26
    4710:	00142900 	andseq	r2, r4, r0, lsl #18
    4714:	00142700 	andseq	r2, r4, r0, lsl #14
    4718:	3c210000 	stccc	0, cr0, [r1], #-0
    471c:	00000045 	andeq	r0, r0, r5, asr #32
    4720:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    472c:	0ceb0100 	stfeqe	f0, [fp]
    4730:	455c1f03 	ldrbmi	r1, [ip, #-3843]	; 0xfffff0fd
    4734:	14400000 	strbne	r0, [r0], #-0
    4738:	143c0000 	ldrtne	r0, [ip], #-0
    473c:	4f1f0000 	svcmi	0x001f0000
    4740:	62000045 	andvs	r0, r0, #69	; 0x45
    4744:	60000014 	andvs	r0, r0, r4, lsl r0
    4748:	20000014 	andcs	r0, r0, r4, lsl r0
    474c:	00004569 	andeq	r4, r0, r9, ror #10
    4750:	00001477 	andeq	r1, r0, r7, ror r4
    4754:	00001475 	andeq	r1, r0, r5, ror r4
    4758:	001c0000 	andseq	r0, ip, r0
    475c:	00000000 	andeq	r0, r0, r0
    4760:	07000000 	streq	r0, [r0, -r0]
    4764:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    4768:	006c6176 	rsbeq	r6, ip, r6, ror r1
    476c:	030cef01 	movweq	lr, #52993	; 0xcf01
    4770:	000000c6 	andeq	r0, r0, r6, asr #1
    4774:	0000148c 	andeq	r1, r0, ip, lsl #9
    4778:	0000148a 	andeq	r1, r0, sl, lsl #9
    477c:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    478c:	01000000 	mrseq	r0, (UNDEF: 0)
    4790:	c7030cef 	strgt	r0, [r3, -pc, ror #25]
    4794:	1f00000f 	svcne	0x0000000f
    4798:	00004590 	muleq	r0, r0, r5
    479c:	000014a5 	andeq	r1, r0, r5, lsr #9
    47a0:	0000149f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
    47a4:	00459d20 	subeq	r9, r5, r0, lsr #26
    47a8:	0014d400 	andseq	sp, r4, r0, lsl #8
    47ac:	0014d200 	andseq	sp, r4, r0, lsl #4
    47b0:	3c210000 	stccc	0, cr0, [r1], #-0
    47b4:	00000045 	andeq	r0, r0, r5, asr #32
    47b8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    47c4:	0cef0100 	stfeqe	f0, [pc]	; 47cc <_Min_Heap_Size+0x3fcc>
    47c8:	455c1f03 	ldrbmi	r1, [ip, #-3843]	; 0xfffff0fd
    47cc:	14eb0000 	strbtne	r0, [fp], #0
    47d0:	14e70000 	strbtne	r0, [r7], #0
    47d4:	4f1f0000 	svcmi	0x001f0000
    47d8:	0d000045 	stceq	0, cr0, [r0, #-276]	; 0xfffffeec
    47dc:	0b000015 	bleq	4838 <_Min_Heap_Size+0x4038>
    47e0:	20000015 	andcs	r0, r0, r5, lsl r0
    47e4:	00004569 	andeq	r4, r0, r9, ror #10
    47e8:	00001522 	andeq	r1, r0, r2, lsr #10
    47ec:	00001520 	andeq	r1, r0, r0, lsr #10
    47f0:	00230000 	eoreq	r0, r3, r0
    47f4:	e3000000 	movw	r0, #0
    47f8:	19000045 	stmdbne	r0, {r0, r2, r6}
    47fc:	f3035201 	vhsub.u8	d5, d3, d1
    4800:	00005101 	andeq	r5, r0, r1, lsl #2
    4804:	00c60411 	sbceq	r0, r6, r1, lsl r4
    4808:	01280000 			; <UNDEFINED> instruction: 0x01280000
    480c:	000014d4 	ldrdeq	r1, [r0], -r4
    4810:	130ca401 	movwne	sl, #50177	; 0xc401
    4814:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    4820:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4824:	00107801 	andseq	r7, r0, r1, lsl #16
    4828:	17781600 	ldrbne	r1, [r8, -r0, lsl #12]!
    482c:	a4010000 	strge	r0, [r1], #-0
    4830:	07963d0c 	ldreq	r3, [r6, ip, lsl #26]
    4834:	15390000 	ldrne	r0, [r9, #-0]!
    4838:	15350000 	ldrne	r0, [r5, #-0]!
    483c:	c9290000 	stmdbgt	r9!, {}	; <UNPREDICTABLE>
    4840:	01000013 	tsteq	r0, r3, lsl r0
    4844:	824d0ca4 	subhi	r0, sp, #164, 24	; 0xa400
    4848:	01000006 	tsteq	r0, r6
    484c:	098f1651 	stmibeq	pc, {r0, r4, r6, r9, sl, ip}	; <UNPREDICTABLE>
    4850:	a4010000 	strge	r0, [r1], #-0
    4854:	00b05d0c 	adcseq	r5, r0, ip, lsl #26
    4858:	15600000 	strbne	r0, [r0, #-0]!
    485c:	155a0000 	ldrbne	r0, [sl, #-0]
    4860:	1b000000 	blne	4868 <_Min_Heap_Size+0x4068>
    4864:	00001699 	muleq	r0, r9, r6
    4868:	1a0c7101 	bne	320c74 <_Min_Heap_Size+0x320474>
    486c:	00023a01 	andeq	r3, r2, r1, lsl #20
    4870:	000b9000 	andeq	r9, fp, r0
    4874:	000c1a08 	andeq	r1, ip, r8, lsl #20
    4878:	00158d08 	andseq	r8, r5, r8, lsl #26
    487c:	11380100 	teqne	r8, r0, lsl #2
    4880:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    4884:	01000017 	tsteq	r0, r7, lsl r0
    4888:	964a0c71 			; <UNDEFINED> instruction: 0x964a0c71
    488c:	d5000007 	strle	r0, [r0, #-7]
    4890:	d1000015 	tstle	r0, r5, lsl r0
    4894:	16000015 			; <UNDEFINED> instruction: 0x16000015
    4898:	0000145a 	andeq	r1, r0, sl, asr r4
    489c:	5a0c7101 	bpl	320ca8 <_Min_Heap_Size+0x3204a8>
    48a0:	000000c6 	andeq	r0, r0, r6, asr #1
    48a4:	000015f7 	strdeq	r1, [r0], -r7
    48a8:	000015f3 	strdeq	r1, [r0], -r3
    48ac:	00134616 	andseq	r4, r3, r6, lsl r6
    48b0:	0c710100 	ldfeqe	f0, [r1], #-0
    48b4:	0002006b 	andeq	r0, r2, fp, rrx
    48b8:	00161900 	andseq	r1, r6, r0, lsl #18
    48bc:	00161500 	andseq	r1, r6, r0, lsl #10
    48c0:	14871600 	strne	r1, [r7], #1536	; 0x600
    48c4:	72010000 	andvc	r0, r1, #0
    48c8:	00c63f0c 	sbceq	r3, r6, ip, lsl #30
    48cc:	163e0000 	ldrtne	r0, [lr], -r0
    48d0:	163a0000 	ldrtne	r0, [sl], -r0
    48d4:	ad160000 	ldcge	0, cr0, [r6, #-0]
    48d8:	01000016 	tsteq	r0, r6, lsl r0
    48dc:	c6530c72 			; <UNDEFINED> instruction: 0xc6530c72
    48e0:	60000000 	andvs	r0, r0, r0
    48e4:	5c000016 	stcpl	0, cr0, [r0], {22}
    48e8:	1c000016 	stcne	0, cr0, [r0], {22}
    48ec:	08000bea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8, r9, fp}
    48f0:	08000bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp}
    48f4:	0000111e 	andeq	r1, r0, lr, lsl r1
    48f8:	0001b622 	andeq	fp, r1, r2, lsr #12
    48fc:	0c850100 	stfeqs	f0, [r5], {0}
    4900:	0000d20b 	andeq	sp, r0, fp, lsl #4
    4904:	5c910200 	lfmpl	f0, 4, [r1], {0}
    4908:	0bc21a00 	bleq	ff08b110 <_estack+0xdf089ed8>
    490c:	45f20800 	ldrbmi	r0, [r2, #2048]!	; 0x800
    4910:	fe230000 	cdp2	0, 2, cr0, cr3, cr0, {0}
    4914:	f508000b 			; <UNDEFINED> instruction: 0xf508000b
    4918:	1900000a 	stmdbne	r0, {r1, r3}
    491c:	75025001 	strvc	r5, [r2, #-1]
    4920:	15000000 	strne	r0, [r0, #-0]
    4924:	0000160e 	andeq	r1, r0, lr, lsl #12
    4928:	0d0c4701 	stceq	7, cr4, [ip, #-4]
    492c:	00000001 	andeq	r0, r0, r1
    4930:	00000000 	andeq	r0, r0, r0
    4934:	00168000 	andseq	r8, r6, r0
    4938:	11cb0100 	bicne	r0, fp, r0, lsl #2
    493c:	00160000 	andseq	r0, r6, r0
    4940:	01000016 	tsteq	r0, r6, lsl r0
    4944:	882e0c47 	stmdahi	lr!, {r0, r1, r2, r6, sl, fp}
    4948:	a8000006 	stmdage	r0, {r1, r2}
    494c:	a0000016 	andge	r0, r0, r6, lsl r0
    4950:	17000016 	smladne	r0, r6, r0, r0
    4954:	00001814 	andeq	r1, r0, r4, lsl r8
    4958:	0c0c4901 			; <UNDEFINED> instruction: 0x0c0c4901
    495c:	000000c6 	andeq	r0, r0, r6, asr #1
    4960:	000016ec 	andeq	r1, r0, ip, ror #13
    4964:	000016e2 	andeq	r1, r0, r2, ror #13
    4968:	00177817 	andseq	r7, r7, r7, lsl r8
    496c:	0c4a0100 	stfeqe	f0, [sl], {-0}
    4970:	00079617 	andeq	r9, r7, r7, lsl r6
    4974:	00175000 	andseq	r5, r7, r0
    4978:	00174e00 	andseq	r4, r7, r0, lsl #28
    497c:	00001800 	andeq	r1, r0, r0, lsl #16
    4980:	1b4a0000 	blne	1284988 <_Min_Heap_Size+0x1284188>
    4984:	11a60000 			; <UNDEFINED> instruction: 0x11a60000
    4988:	01190000 	tsteq	r9, r0
    498c:	00740250 	rsbseq	r0, r4, r0, asr r2
    4990:	00001800 	andeq	r1, r0, r0, lsl #16
    4994:	0ce90000 	stcleq	0, cr0, [r9]
    4998:	11ba0000 			; <UNDEFINED> instruction: 0x11ba0000
    499c:	01190000 	tsteq	r9, r0
    49a0:	00740250 	rsbseq	r0, r4, r0, asr r2
    49a4:	00002300 	andeq	r2, r0, r0, lsl #6
    49a8:	0af50000 	beq	ffd449b0 <_estack+0xdfd43778>
    49ac:	01190000 	tsteq	r9, r0
    49b0:	00740250 	rsbseq	r0, r4, r0, asr r2
    49b4:	3a150000 	bcc	5449bc <_Min_Heap_Size+0x5441bc>
    49b8:	01000016 	tsteq	r0, r6, lsl r0
    49bc:	010d0c20 	tsteq	sp, r0, lsr #24
	...
    49c8:	00001763 	andeq	r1, r0, r3, ror #14
    49cc:	00122301 	andseq	r2, r2, r1, lsl #6
    49d0:	16001600 	strne	r1, [r0], -r0, lsl #12
    49d4:	20010000 	andcs	r0, r1, r0
    49d8:	0688330c 	streq	r3, [r8], ip, lsl #6
    49dc:	17870000 	strne	r0, [r7, r0]
    49e0:	17830000 	strne	r0, [r3, r0]
    49e4:	78170000 	ldmdavc	r7, {}	; <UNPREDICTABLE>
    49e8:	01000017 	tsteq	r0, r7, lsl r0
    49ec:	96170c22 	ldrls	r0, [r7], -r2, lsr #24
    49f0:	ac000007 	stcge	0, cr0, [r0], {7}
    49f4:	a8000017 	stmdage	r0, {r0, r1, r2, r4}
    49f8:	1a000017 	bne	4a5c <_Min_Heap_Size+0x425c>
    49fc:	00000000 	andeq	r0, r0, r0
    4a00:	00001b75 	andeq	r1, r0, r5, ror fp
    4a04:	0000001a 	andeq	r0, r0, sl, lsl r0
    4a08:	001a8f00 	andseq	r8, sl, r0, lsl #30
    4a0c:	00150000 	andseq	r0, r5, r0
    4a10:	01000014 	tsteq	r0, r4, lsl r0
    4a14:	010d0be2 	smlatteq	sp, r2, fp, r0
	...
    4a20:	000017ca 	andeq	r1, r0, sl, asr #15
    4a24:	0014db01 	andseq	sp, r4, r1, lsl #22
    4a28:	16001600 	strne	r1, [r0], -r0, lsl #12
    4a2c:	e2010000 	and	r0, r1, #0
    4a30:	0688340b 	streq	r3, [r8], fp, lsl #8
    4a34:	17f00000 	ldrbne	r0, [r0, r0]!
    4a38:	17ea0000 	strbne	r0, [sl, r0]!
    4a3c:	78170000 	ldmdavc	r7, {}	; <UNPREDICTABLE>
    4a40:	01000017 	tsteq	r0, r7, lsl r0
    4a44:	96170be4 	ldrls	r0, [r7], -r4, ror #23
    4a48:	20000007 	andcs	r0, r0, r7
    4a4c:	1c000018 	stcne	0, cr0, [r0], {24}
    4a50:	1c000018 	stcne	0, cr0, [r0], {24}
	...
    4a5c:	00001300 	andeq	r1, r0, r0, lsl #6
    4a60:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4a64:	0bec0100 	bleq	ffb04e6c <_estack+0xdfb03c34>
    4a68:	0000c605 	andeq	ip, r0, r5, lsl #12
    4a6c:	00184000 	andseq	r4, r8, r0
    4a70:	00183e00 	andseq	r3, r8, r0, lsl #28
    4a74:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4a88:	050bec01 	streq	lr, [fp, #-3073]	; 0xfffff3ff
    4a8c:	000012c0 	andeq	r1, r0, r0, asr #5
    4a90:	0045901f 	subeq	r9, r5, pc, lsl r0
    4a94:	00185900 	andseq	r5, r8, r0, lsl #18
    4a98:	00185300 	andseq	r5, r8, r0, lsl #6
    4a9c:	459d2000 	ldrmi	r2, [sp]
    4aa0:	18880000 	stmne	r8, {}	; <UNPREDICTABLE>
    4aa4:	18860000 	stmne	r6, {}	; <UNPREDICTABLE>
    4aa8:	21000000 	mrscs	r0, (UNDEF: 0)
    4aac:	0000453c 	andeq	r4, r0, ip, lsr r5
    4ab0:	00000000 	andeq	r0, r0, r0
    4ab4:	00000001 	andeq	r0, r0, r1
    4ab8:	00000000 	andeq	r0, r0, r0
    4abc:	ec010000 	stc	0, cr0, [r1], {-0}
    4ac0:	5c1f050b 	cfldr32pl	mvfx0, [pc], {11}
    4ac4:	9f000045 	svcls	0x00000045
    4ac8:	9b000018 	blls	4b30 <_Min_Heap_Size+0x4330>
    4acc:	1f000018 	svcne	0x00000018
    4ad0:	0000454f 	andeq	r4, r0, pc, asr #10
    4ad4:	000018c1 	andeq	r1, r0, r1, asr #17
    4ad8:	000018bf 			; <UNDEFINED> instruction: 0x000018bf
    4adc:	00456920 	subeq	r6, r5, r0, lsr #18
    4ae0:	0018d600 	andseq	sp, r8, r0, lsl #12
    4ae4:	0018d400 	andseq	sp, r8, r0, lsl #8
    4ae8:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    4af4:	00001398 	muleq	r0, r8, r3
    4af8:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4afc:	0bed0100 	bleq	ffb44f04 <_estack+0xdfb43ccc>
    4b00:	0000c605 	andeq	ip, r0, r5, lsl #12
    4b04:	0018eb00 	andseq	lr, r8, r0, lsl #22
    4b08:	0018e900 	andseq	lr, r8, r0, lsl #18
    4b0c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4b20:	050bed01 	streq	lr, [fp, #-3329]	; 0xfffff2ff
    4b24:	00001358 	andeq	r1, r0, r8, asr r3
    4b28:	0045901f 	subeq	r9, r5, pc, lsl r0
    4b2c:	00190400 	andseq	r0, r9, r0, lsl #8
    4b30:	0018fe00 	andseq	pc, r8, r0, lsl #28
    4b34:	459d2000 	ldrmi	r2, [sp]
    4b38:	19330000 	ldmdbne	r3!, {}	; <UNPREDICTABLE>
    4b3c:	19310000 	ldmdbne	r1!, {}	; <UNPREDICTABLE>
    4b40:	21000000 	mrscs	r0, (UNDEF: 0)
    4b44:	0000453c 	andeq	r4, r0, ip, lsr r5
    4b48:	00000000 	andeq	r0, r0, r0
    4b4c:	00000001 	andeq	r0, r0, r1
    4b50:	00000000 	andeq	r0, r0, r0
    4b54:	ed010000 	stc	0, cr0, [r1, #-0]
    4b58:	5c1f050b 	cfldr32pl	mvfx0, [pc], {11}
    4b5c:	4a000045 	bmi	4c78 <_Min_Heap_Size+0x4478>
    4b60:	46000019 			; <UNDEFINED> instruction: 0x46000019
    4b64:	1f000019 	svcne	0x00000019
    4b68:	0000454f 	andeq	r4, r0, pc, asr #10
    4b6c:	0000196c 	andeq	r1, r0, ip, ror #18
    4b70:	0000196a 	andeq	r1, r0, sl, ror #18
    4b74:	00456920 	subeq	r6, r5, r0, lsr #18
    4b78:	00198100 	andseq	r8, r9, r0, lsl #2
    4b7c:	00197f00 	andseq	r7, r9, r0, lsl #30
    4b80:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    4b8c:	00001430 	andeq	r1, r0, r0, lsr r4
    4b90:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4b94:	0bf10100 	bleq	ffc44f9c <_estack+0xdfc43d64>
    4b98:	0000c605 	andeq	ip, r0, r5, lsl #12
    4b9c:	00199600 	andseq	r9, r9, r0, lsl #12
    4ba0:	00199400 	andseq	r9, r9, r0, lsl #8
    4ba4:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4bb8:	050bf101 	streq	pc, [fp, #-257]	; 0xfffffeff
    4bbc:	000013f0 	strdeq	r1, [r0], -r0
    4bc0:	0045901f 	subeq	r9, r5, pc, lsl r0
    4bc4:	0019af00 	andseq	sl, r9, r0, lsl #30
    4bc8:	0019a900 	andseq	sl, r9, r0, lsl #18
    4bcc:	459d2000 	ldrmi	r2, [sp]
    4bd0:	19de0000 	ldmibne	lr, {}^	; <UNPREDICTABLE>
    4bd4:	19dc0000 	ldmibne	ip, {}^	; <UNPREDICTABLE>
    4bd8:	21000000 	mrscs	r0, (UNDEF: 0)
    4bdc:	0000453c 	andeq	r4, r0, ip, lsr r5
    4be0:	00000000 	andeq	r0, r0, r0
    4be4:	00000001 	andeq	r0, r0, r1
    4be8:	00000000 	andeq	r0, r0, r0
    4bec:	f1010000 	setend	le
    4bf0:	5c1f050b 	cfldr32pl	mvfx0, [pc], {11}
    4bf4:	f5000045 			; <UNDEFINED> instruction: 0xf5000045
    4bf8:	f1000019 	cps	#25
    4bfc:	1f000019 	svcne	0x00000019
    4c00:	0000454f 	andeq	r4, r0, pc, asr #10
    4c04:	00001a17 	andeq	r1, r0, r7, lsl sl
    4c08:	00001a15 	andeq	r1, r0, r5, lsl sl
    4c0c:	00456920 	subeq	r6, r5, r0, lsr #18
    4c10:	001a2c00 	andseq	r2, sl, r0, lsl #24
    4c14:	001a2a00 	andseq	r2, sl, r0, lsl #20
    4c18:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    4c24:	000014c8 	andeq	r1, r0, r8, asr #9
    4c28:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4c2c:	0bf90100 	bleq	ffe45034 <_estack+0xdfe43dfc>
    4c30:	0000c607 	andeq	ip, r0, r7, lsl #12
    4c34:	001a4100 	andseq	r4, sl, r0, lsl #2
    4c38:	001a3f00 	andseq	r3, sl, r0, lsl #30
    4c3c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4c50:	070bf901 	streq	pc, [fp, -r1, lsl #18]
    4c54:	00001488 	andeq	r1, r0, r8, lsl #9
    4c58:	0045901f 	subeq	r9, r5, pc, lsl r0
    4c5c:	001a5a00 	andseq	r5, sl, r0, lsl #20
    4c60:	001a5400 	andseq	r5, sl, r0, lsl #8
    4c64:	459d2000 	ldrmi	r2, [sp]
    4c68:	1a890000 	bne	fe244c70 <_estack+0xde243a38>
    4c6c:	1a870000 	bne	fe1c4c74 <_estack+0xde1c3a3c>
    4c70:	21000000 	mrscs	r0, (UNDEF: 0)
    4c74:	0000453c 	andeq	r4, r0, ip, lsr r5
    4c78:	00000000 	andeq	r0, r0, r0
    4c7c:	00000001 	andeq	r0, r0, r1
    4c80:	00000000 	andeq	r0, r0, r0
    4c84:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    4c88:	5c1f070b 	ldcpl	7, cr0, [pc], {11}
    4c8c:	a0000045 	andge	r0, r0, r5, asr #32
    4c90:	9c00001a 	stcls	0, cr0, [r0], {26}
    4c94:	1f00001a 	svcne	0x0000001a
    4c98:	0000454f 	andeq	r4, r0, pc, asr #10
    4c9c:	00001ac2 	andeq	r1, r0, r2, asr #21
    4ca0:	00001ac0 	andeq	r1, r0, r0, asr #21
    4ca4:	00456920 	subeq	r6, r5, r0, lsr #18
    4ca8:	001ad700 	andseq	sp, sl, r0, lsl #14
    4cac:	001ad500 	andseq	sp, sl, r0, lsl #10
    4cb0:	1a000000 	bne	4cb8 <_Min_Heap_Size+0x44b8>
    4cb4:	00000000 	andeq	r0, r0, r0
    4cb8:	00001ba0 	andeq	r1, r0, r0, lsr #23
    4cbc:	0000001a 	andeq	r0, r0, sl, lsl r0
    4cc0:	001a8f00 	andseq	r8, sl, r0, lsl #30
    4cc4:	14150000 	ldrne	r0, [r5], #-0
    4cc8:	01000014 	tsteq	r0, r4, lsl r0
    4ccc:	010d0bcf 	smlabteq	sp, pc, fp, r0	; <UNPREDICTABLE>
	...
    4cd8:	00001aea 	andeq	r1, r0, sl, ror #21
    4cdc:	00152a01 	andseq	r2, r5, r1, lsl #20
    4ce0:	16001600 	strne	r1, [r0], -r0, lsl #12
    4ce4:	cf010000 	svcgt	0x00010000
    4ce8:	0688330b 	streq	r3, [r8], fp, lsl #6
    4cec:	1b0e0000 	blne	384cf4 <_Min_Heap_Size+0x3844f4>
    4cf0:	1b0a0000 	blne	284cf8 <_Min_Heap_Size+0x2844f8>
    4cf4:	78170000 	ldmdavc	r7, {}	; <UNPREDICTABLE>
    4cf8:	01000017 	tsteq	r0, r7, lsl r0
    4cfc:	96170bd1 			; <UNDEFINED> instruction: 0x96170bd1
    4d00:	33000007 	movwcc	r0, #7
    4d04:	2f00001b 	svccs	0x0000001b
    4d08:	1a00001b 	bne	4d7c <_Min_Heap_Size+0x457c>
    4d0c:	00000000 	andeq	r0, r0, r0
    4d10:	00001bcb 	andeq	r1, r0, fp, asr #23
    4d14:	18651500 	stmdane	r5!, {r8, sl, ip}^
    4d18:	ac010000 	stcge	0, cr0, [r1], {-0}
    4d1c:	00010d0b 	andeq	r0, r1, fp, lsl #26
    4d20:	00000000 	andeq	r0, r0, r0
    4d24:	52000000 	andpl	r0, r0, #0
    4d28:	0100001b 	tsteq	r0, fp, lsl r0
    4d2c:	000016a9 	andeq	r1, r0, r9, lsr #13
    4d30:	00160016 	andseq	r0, r6, r6, lsl r0
    4d34:	0bac0100 	bleq	feb0513c <_estack+0xdeb03f04>
    4d38:	00068835 	andeq	r8, r6, r5, lsr r8
    4d3c:	001b7800 	andseq	r7, fp, r0, lsl #16
    4d40:	001b7200 	andseq	r7, fp, r0, lsl #4
    4d44:	17781700 	ldrbne	r1, [r8, -r0, lsl #14]!
    4d48:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    4d4c:	0796170b 	ldreq	r1, [r6, fp, lsl #14]
    4d50:	1ba80000 	blne	fea04d58 <_estack+0xdea03b20>
    4d54:	1ba40000 	blne	fe904d5c <_estack+0xde903b24>
    4d58:	001c0000 	andseq	r0, ip, r0
    4d5c:	00000000 	andeq	r0, r0, r0
    4d60:	07000000 	streq	r0, [r0, -r0]
    4d64:	1d000016 	stcne	0, cr0, [r0, #-88]	; 0xffffffa8
    4d68:	006c6176 	rsbeq	r6, ip, r6, ror r1
    4d6c:	050bb601 	streq	fp, [fp, #-1537]	; 0xfffff9ff
    4d70:	000000c6 	andeq	r0, r0, r6, asr #1
    4d74:	00001bc8 	andeq	r1, r0, r8, asr #23
    4d78:	00001bc6 	andeq	r1, r0, r6, asr #23
    4d7c:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    4d8c:	01000000 	mrseq	r0, (UNDEF: 0)
    4d90:	c7050bb6 			; <UNDEFINED> instruction: 0xc7050bb6
    4d94:	1f000015 	svcne	0x00000015
    4d98:	00004590 	muleq	r0, r0, r5
    4d9c:	00001be1 	andeq	r1, r0, r1, ror #23
    4da0:	00001bdb 	ldrdeq	r1, [r0], -fp
    4da4:	00459d20 	subeq	r9, r5, r0, lsr #26
    4da8:	001c1000 	andseq	r1, ip, r0
    4dac:	001c0e00 	andseq	r0, ip, r0, lsl #28
    4db0:	3c210000 	stccc	0, cr0, [r1], #-0
    4db4:	00000045 	andeq	r0, r0, r5, asr #32
    4db8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4dc4:	0bb60100 	bleq	fed851cc <_estack+0xded83f94>
    4dc8:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    4dcc:	1c270000 	stcne	0, cr0, [r7], #-0
    4dd0:	1c230000 	stcne	0, cr0, [r3], #-0
    4dd4:	4f1f0000 	svcmi	0x001f0000
    4dd8:	49000045 	stmdbmi	r0, {r0, r2, r6}
    4ddc:	4700001c 	smladmi	r0, ip, r0, r0
    4de0:	2000001c 	andcs	r0, r0, ip, lsl r0
    4de4:	00004569 	andeq	r4, r0, r9, ror #10
    4de8:	00001c5e 	andeq	r1, r0, lr, asr ip
    4dec:	00001c5c 	andeq	r1, r0, ip, asr ip
    4df0:	001c0000 	andseq	r0, ip, r0
    4df4:	00000000 	andeq	r0, r0, r0
    4df8:	9f000000 	svcls	0x00000000
    4dfc:	1d000016 	stcne	0, cr0, [r0, #-88]	; 0xffffffa8
    4e00:	006c6176 	rsbeq	r6, ip, r6, ror r1
    4e04:	050bb901 	streq	fp, [fp, #-2305]	; 0xfffff6ff
    4e08:	000000c6 	andeq	r0, r0, r6, asr #1
    4e0c:	00001c73 	andeq	r1, r0, r3, ror ip
    4e10:	00001c71 	andeq	r1, r0, r1, ror ip
    4e14:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    4e24:	01000000 	mrseq	r0, (UNDEF: 0)
    4e28:	5f050bb9 	svcpl	0x00050bb9
    4e2c:	1f000016 	svcne	0x00000016
    4e30:	00004590 	muleq	r0, r0, r5
    4e34:	00001c8c 	andeq	r1, r0, ip, lsl #25
    4e38:	00001c86 	andeq	r1, r0, r6, lsl #25
    4e3c:	00459d20 	subeq	r9, r5, r0, lsr #26
    4e40:	001cbb00 	andseq	fp, ip, r0, lsl #22
    4e44:	001cb900 	andseq	fp, ip, r0, lsl #18
    4e48:	3c210000 	stccc	0, cr0, [r1], #-0
    4e4c:	00000045 	andeq	r0, r0, r5, asr #32
    4e50:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4e5c:	0bb90100 	bleq	fee45264 <_estack+0xdee4402c>
    4e60:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    4e64:	1cd20000 	ldclne	0, cr0, [r2], {0}
    4e68:	1cce0000 	stclne	0, cr0, [lr], {0}
    4e6c:	4f1f0000 	svcmi	0x001f0000
    4e70:	f4000045 	vst4.16	{d0-d3}, [r0], r5
    4e74:	f200001c 	vqadd.s8	d0, d0, d12
    4e78:	2000001c 	andcs	r0, r0, ip, lsl r0
    4e7c:	00004569 	andeq	r4, r0, r9, ror #10
    4e80:	00001d09 	andeq	r1, r0, r9, lsl #26
    4e84:	00001d07 	andeq	r1, r0, r7, lsl #26
    4e88:	001a0000 	andseq	r0, sl, r0
    4e8c:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    4e90:	0000001b 	andeq	r0, r0, fp, lsl r0
    4e94:	13b70128 			; <UNDEFINED> instruction: 0x13b70128
    4e98:	7f010000 	svcvc	0x00010000
    4e9c:	c6010a0b 	strgt	r0, [r1], -fp, lsl #20
	...
    4ea8:	02000000 	andeq	r0, r0, #0
    4eac:	de01007d 	mcrle	0, 0, r0, cr1, cr13, {3}
    4eb0:	16000016 			; <UNDEFINED> instruction: 0x16000016
    4eb4:	00001778 	andeq	r1, r0, r8, ror r7
    4eb8:	360b7f01 	strcc	r7, [fp], -r1, lsl #30
    4ebc:	000016de 	ldrdeq	r1, [r0], -lr
    4ec0:	00001d20 	andeq	r1, r0, r0, lsr #26
    4ec4:	00001d1c 	andeq	r1, r0, ip, lsl sp
    4ec8:	9a041100 	bls	1092d0 <_Min_Heap_Size+0x108ad0>
    4ecc:	28000006 	stmdacs	r0, {r1, r2}
    4ed0:	00153501 	andseq	r3, r5, r1, lsl #10
    4ed4:	0b700100 	bleq	1c052dc <_Min_Heap_Size+0x1c04adc>
    4ed8:	05450117 	strbeq	r0, [r5, #-279]	; 0xfffffee9
	...
    4ee4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    4ee8:	17430100 	strbne	r0, [r3, -r0, lsl #2]
    4eec:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    4ef0:	01000017 	tsteq	r0, r7, lsl r0
    4ef4:	de430b70 	vmovle.8	d3[3], r0
    4ef8:	45000016 	strmi	r0, [r0, #-22]	; 0xffffffea
    4efc:	4100001d 	tstmi	r0, sp, lsl r0
    4f00:	1700001d 	smladne	r0, sp, r0, r0
    4f04:	000017b6 			; <UNDEFINED> instruction: 0x000017b6
    4f08:	0c0b7201 	sfmeq	f7, 4, [fp], {1}
    4f0c:	000000c6 	andeq	r0, r0, r6, asr #1
    4f10:	00001d6a 	andeq	r1, r0, sl, ror #26
    4f14:	00001d66 	andeq	r1, r0, r6, ror #26
    4f18:	0017bc17 	andseq	fp, r7, r7, lsl ip
    4f1c:	0b720100 	bleq	1c85324 <_Min_Heap_Size+0x1c84b24>
    4f20:	0000c61b 	andeq	ip, r0, fp, lsl r6
    4f24:	001d8d00 	andseq	r8, sp, r0, lsl #26
    4f28:	001d8900 	andseq	r8, sp, r0, lsl #18
    4f2c:	01280000 			; <UNDEFINED> instruction: 0x01280000
    4f30:	00001793 	muleq	r0, r3, r7
    4f34:	130b3701 	movwne	r3, #46849	; 0xb701
    4f38:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    4f44:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4f48:	00178d01 	andseq	r8, r7, r1, lsl #26
    4f4c:	17781600 	ldrbne	r1, [r8, -r0, lsl #12]!
    4f50:	37010000 	strcc	r0, [r1, -r0]
    4f54:	0796450b 	ldreq	r4, [r6, fp, lsl #10]
    4f58:	1db40000 	ldcne	0, cr0, [r4]
    4f5c:	1dac0000 	stcne	0, cr0, [ip]
    4f60:	b6170000 	ldrlt	r0, [r7], -r0
    4f64:	01000001 	tsteq	r0, r1
    4f68:	c60c0b39 			; <UNDEFINED> instruction: 0xc60c0b39
    4f6c:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    4f70:	ee00001d 	mcr	0, 0, r0, cr0, cr13, {0}
    4f74:	0000001d 	andeq	r0, r0, sp, lsl r0
    4f78:	135e0128 	cmpne	lr, #40, 2
    4f7c:	14010000 	strne	r0, [r1], #-0
    4f80:	3a01130b 	bcc	49bb4 <_Min_Heap_Size+0x493b4>
    4f84:	00000002 	andeq	r0, r0, r2
    4f88:	00000000 	andeq	r0, r0, r0
    4f8c:	02000000 	andeq	r0, r0, #0
    4f90:	d701007d 	smlsdxle	r1, sp, r0, r0
    4f94:	16000017 			; <UNDEFINED> instruction: 0x16000017
    4f98:	00001778 	andeq	r1, r0, r8, ror r7
    4f9c:	480b1401 	stmdami	fp, {r0, sl, ip}
    4fa0:	00000796 	muleq	r0, r6, r7
    4fa4:	00001e35 	andeq	r1, r0, r5, lsr lr
    4fa8:	00001e2d 	andeq	r1, r0, sp, lsr #28
    4fac:	0001b617 	andeq	fp, r1, r7, lsl r6
    4fb0:	0b160100 	bleq	5853b8 <_Min_Heap_Size+0x584bb8>
    4fb4:	0000c60c 	andeq	ip, r0, ip, lsl #12
    4fb8:	001e7700 	andseq	r7, lr, r0, lsl #14
    4fbc:	001e6f00 	andseq	r6, lr, r0, lsl #30
    4fc0:	01270000 			; <UNDEFINED> instruction: 0x01270000
    4fc4:	00001758 	andeq	r1, r0, r8, asr r7
    4fc8:	130af801 	movwne	pc, #43009	; 0xa801	; <UNPREDICTABLE>
    4fcc:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    4fd8:	001eae00 	andseq	sl, lr, r0, lsl #28
    4fdc:	18bf0100 	ldmne	pc!, {r8}	; <UNPREDICTABLE>
    4fe0:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    4fe4:	01000017 	tsteq	r0, r7, lsl r0
    4fe8:	96470af8 			; <UNDEFINED> instruction: 0x96470af8
    4fec:	d2000007 	andle	r0, r0, #7
    4ff0:	ce00001e 	mcrgt	0, 0, r0, cr0, cr14, {0}
    4ff4:	1c00001e 	stcne	0, cr0, [r0], {30}
	...
    5000:	000018a4 	andeq	r1, r0, r4, lsr #17
    5004:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    5008:	0b030100 	bleq	c5410 <_Min_Heap_Size+0xc4c10>
    500c:	0000c603 	andeq	ip, r0, r3, lsl #12
    5010:	001ef200 	andseq	pc, lr, r0, lsl #4
    5014:	001ef000 	andseq	pc, lr, r0
    5018:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    502c:	030b0301 	movweq	r0, #45825	; 0xb301
    5030:	00001864 	andeq	r1, r0, r4, ror #16
    5034:	0045901f 	subeq	r9, r5, pc, lsl r0
    5038:	001f0b00 	andseq	r0, pc, r0, lsl #22
    503c:	001f0500 	andseq	r0, pc, r0, lsl #10
    5040:	459d2000 	ldrmi	r2, [sp]
    5044:	1f3a0000 	svcne	0x003a0000
    5048:	1f380000 	svcne	0x00380000
    504c:	21000000 	mrscs	r0, (UNDEF: 0)
    5050:	0000453c 	andeq	r4, r0, ip, lsr r5
    5054:	00000000 	andeq	r0, r0, r0
    5058:	00000001 	andeq	r0, r0, r1
    505c:	00000000 	andeq	r0, r0, r0
    5060:	03010000 	movweq	r0, #4096	; 0x1000
    5064:	5c1f030b 	ldcpl	3, cr0, [pc], {11}
    5068:	51000045 	tstpl	r0, r5, asr #32
    506c:	4d00001f 	stcmi	0, cr0, [r0, #-124]	; 0xffffff84
    5070:	1f00001f 	svcne	0x0000001f
    5074:	0000454f 	andeq	r4, r0, pc, asr #10
    5078:	00001f73 	andeq	r1, r0, r3, ror pc
    507c:	00001f71 	andeq	r1, r0, r1, ror pc
    5080:	00456920 	subeq	r6, r5, r0, lsr #18
    5084:	001f8800 	andseq	r8, pc, r0, lsl #16
    5088:	001f8600 	andseq	r8, pc, r0, lsl #12
    508c:	23000000 	movwcs	r0, #0
    5090:	00000000 	andeq	r0, r0, r0
    5094:	000045ab 	andeq	r4, r0, fp, lsr #11
    5098:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    509c:	002ca403 	eoreq	sl, ip, r3, lsl #8
    50a0:	51011908 	tstpl	r1, r8, lsl #18
    50a4:	0afb0a03 	beq	ffec78b8 <_estack+0xdfec6680>
    50a8:	01270000 			; <UNDEFINED> instruction: 0x01270000
    50ac:	0000191e 	andeq	r1, r0, lr, lsl r9
    50b0:	130adc01 	movwne	sp, #44033	; 0xac01
    50b4:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    50c0:	001f9b00 	andseq	r9, pc, r0, lsl #22
    50c4:	19a70100 	stmibne	r7!, {r8}
    50c8:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    50cc:	01000017 	tsteq	r0, r7, lsl r0
    50d0:	96480adc 			; <UNDEFINED> instruction: 0x96480adc
    50d4:	bf000007 	svclt	0x00000007
    50d8:	bb00001f 	bllt	515c <_Min_Heap_Size+0x495c>
    50dc:	1c00001f 	stcne	0, cr0, [r0], {31}
	...
    50e8:	0000198c 	andeq	r1, r0, ip, lsl #19
    50ec:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    50f0:	0ae70100 	beq	ff9c54f8 <_estack+0xdf9c42c0>
    50f4:	0000c603 	andeq	ip, r0, r3, lsl #12
    50f8:	001fdf00 	andseq	sp, pc, r0, lsl #30
    50fc:	001fdd00 	andseq	sp, pc, r0, lsl #26
    5100:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    5114:	030ae701 	movweq	lr, #42753	; 0xa701
    5118:	0000194c 	andeq	r1, r0, ip, asr #18
    511c:	0045901f 	subeq	r9, r5, pc, lsl r0
    5120:	001ff800 	andseq	pc, pc, r0, lsl #16
    5124:	001ff200 	andseq	pc, pc, r0, lsl #4
    5128:	459d2000 	ldrmi	r2, [sp]
    512c:	20270000 	eorcs	r0, r7, r0
    5130:	20250000 	eorcs	r0, r5, r0
    5134:	21000000 	mrscs	r0, (UNDEF: 0)
    5138:	0000453c 	andeq	r4, r0, ip, lsr r5
    513c:	00000000 	andeq	r0, r0, r0
    5140:	00000001 	andeq	r0, r0, r1
    5144:	00000000 	andeq	r0, r0, r0
    5148:	e7010000 	str	r0, [r1, -r0]
    514c:	5c1f030a 	ldcpl	3, cr0, [pc], {10}
    5150:	3e000045 	cdpcc	0, 0, cr0, cr0, cr5, {2}
    5154:	3a000020 	bcc	51dc <_Min_Heap_Size+0x49dc>
    5158:	1f000020 	svcne	0x00000020
    515c:	0000454f 	andeq	r4, r0, pc, asr #10
    5160:	00002060 	andeq	r2, r0, r0, rrx
    5164:	0000205e 	andeq	r2, r0, lr, asr r0
    5168:	00456920 	subeq	r6, r5, r0, lsr #18
    516c:	00207500 	eoreq	r7, r0, r0, lsl #10
    5170:	00207300 	eoreq	r7, r0, r0, lsl #6
    5174:	23000000 	movwcs	r0, #0
    5178:	00000000 	andeq	r0, r0, r0
    517c:	000045ab 	andeq	r4, r0, fp, lsr #11
    5180:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    5184:	002ca403 	eoreq	sl, ip, r3, lsl #8
    5188:	51011908 	tstpl	r1, r8, lsl #18
    518c:	0adf0a03 	beq	ff7c79a0 <_estack+0xdf7c6768>
    5190:	01270000 			; <UNDEFINED> instruction: 0x01270000
    5194:	00001330 	andeq	r1, r0, r0, lsr r3
    5198:	130ac101 	movwne	ip, #41217	; 0xa101
    519c:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    51a8:	00208800 	eoreq	r8, r0, r0, lsl #16
    51ac:	1a8f0100 	bne	fe3c55b4 <_estack+0xde3c437c>
    51b0:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    51b4:	01000017 	tsteq	r0, r7, lsl r0
    51b8:	96390ac1 	ldrtls	r0, [r9], -r1, asr #21
    51bc:	ac000007 	stcge	0, cr0, [r0], {7}
    51c0:	a8000020 	stmdage	r0, {r5}
    51c4:	1c000020 	stcne	0, cr0, [r0], {32}
	...
    51d0:	00001a74 	andeq	r1, r0, r4, ror sl
    51d4:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    51d8:	0acc0100 	beq	ff3055e0 <_estack+0xdf3043a8>
    51dc:	0000c603 	andeq	ip, r0, r3, lsl #12
    51e0:	0020cc00 	eoreq	ip, r0, r0, lsl #24
    51e4:	0020ca00 	eoreq	ip, r0, r0, lsl #20
    51e8:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    51fc:	030acc01 	movweq	ip, #44033	; 0xac01
    5200:	00001a34 	andeq	r1, r0, r4, lsr sl
    5204:	0045901f 	subeq	r9, r5, pc, lsl r0
    5208:	0020e500 	eoreq	lr, r0, r0, lsl #10
    520c:	0020df00 	eoreq	sp, r0, r0, lsl #30
    5210:	459d2000 	ldrmi	r2, [sp]
    5214:	21140000 	tstcs	r4, r0
    5218:	21120000 	tstcs	r2, r0
    521c:	21000000 	mrscs	r0, (UNDEF: 0)
    5220:	0000453c 	andeq	r4, r0, ip, lsr r5
    5224:	00000000 	andeq	r0, r0, r0
    5228:	00000001 	andeq	r0, r0, r1
    522c:	00000000 	andeq	r0, r0, r0
    5230:	cc010000 	stcgt	0, cr0, [r1], {-0}
    5234:	5c1f030a 	ldcpl	3, cr0, [pc], {10}
    5238:	2b000045 	blcs	5354 <_Min_Heap_Size+0x4b54>
    523c:	27000021 	strcs	r0, [r0, -r1, lsr #32]
    5240:	1f000021 	svcne	0x00000021
    5244:	0000454f 	andeq	r4, r0, pc, asr #10
    5248:	0000214d 	andeq	r2, r0, sp, asr #2
    524c:	0000214b 	andeq	r2, r0, fp, asr #2
    5250:	00456920 	subeq	r6, r5, r0, lsr #18
    5254:	00216200 	eoreq	r6, r1, r0, lsl #4
    5258:	00216000 	eoreq	r6, r1, r0
    525c:	23000000 	movwcs	r0, #0
    5260:	00000000 	andeq	r0, r0, r0
    5264:	000045ab 	andeq	r4, r0, fp, lsr #11
    5268:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    526c:	002ca403 	eoreq	sl, ip, r3, lsl #8
    5270:	51011908 	tstpl	r1, r8, lsl #18
    5274:	0ac40a03 	beq	ff107a88 <_estack+0xdf106850>
    5278:	012a0000 			; <UNDEFINED> instruction: 0x012a0000
    527c:	00001386 	andeq	r1, r0, r6, lsl #7
    5280:	0d0a9901 	vstreq.16	s18, [sl, #-2]	; <UNPREDICTABLE>
    5284:	000e4401 	andeq	r4, lr, r1, lsl #8
    5288:	000e4608 	andeq	r4, lr, r8, lsl #12
    528c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    5290:	001ac901 	andseq	ip, sl, r1, lsl #18
    5294:	17782900 	ldrbne	r2, [r8, -r0, lsl #18]!
    5298:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    529c:	07963c0a 	ldreq	r3, [r6, sl, lsl #24]
    52a0:	50010000 	andpl	r0, r1, r0
    52a4:	00098f29 	andeq	r8, r9, r9, lsr #30
    52a8:	0a990100 	beq	fe6456b0 <_estack+0xde644478>
    52ac:	0000b04c 	andeq	fp, r0, ip, asr #32
    52b0:	00510100 	subseq	r0, r1, r0, lsl #2
    52b4:	1438012a 	ldrtne	r0, [r8], #-298	; 0xfffffed6
    52b8:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    52bc:	00010d0a 	andeq	r0, r1, sl, lsl #26
    52c0:	00000000 	andeq	r0, r0, r0
    52c4:	02000000 	andeq	r0, r0, #0
    52c8:	f401007d 	vst4.16	{d0-d3}, [r1 :256]!
    52cc:	2900001a 	stmdbcs	r0, {r1, r3, r4}
    52d0:	00001778 	andeq	r1, r0, r8, ror r7
    52d4:	430a8801 	movwmi	r8, #43009	; 0xa801
    52d8:	00000796 	muleq	r0, r6, r7
    52dc:	2a005001 	bcs	192e8 <_Min_Heap_Size+0x18ae8>
    52e0:	0016b501 	andseq	fp, r6, r1, lsl #10
    52e4:	0a790100 	beq	1e456ec <_Min_Heap_Size+0x1e44eec>
    52e8:	0000010d 	andeq	r0, r0, sp, lsl #2
    52ec:	00000000 	andeq	r0, r0, r0
    52f0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    52f4:	1b1f0100 	blne	7c56fc <_Min_Heap_Size+0x7c4efc>
    52f8:	78290000 	stmdavc	r9!, {}	; <UNPREDICTABLE>
    52fc:	01000017 	tsteq	r0, r7, lsl r0
    5300:	96440a79 			; <UNDEFINED> instruction: 0x96440a79
    5304:	01000007 	tsteq	r0, r7
    5308:	012a0050 	qsubeq	r0, r0, sl
    530c:	000017f9 	strdeq	r1, [r0], -r9
    5310:	0d0a6a01 	vstreq	s12, [sl, #-4]
    5314:	00000001 	andeq	r0, r0, r1
    5318:	00000000 	andeq	r0, r0, r0
    531c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    5320:	001b4a01 	andseq	r4, fp, r1, lsl #20
    5324:	17782900 	ldrbne	r2, [r8, -r0, lsl #18]!
    5328:	6a010000 	bvs	45330 <_Min_Heap_Size+0x44b30>
    532c:	07963c0a 	ldreq	r3, [r6, sl, lsl #24]
    5330:	50010000 	andpl	r0, r1, r0
    5334:	c7012a00 	strgt	r2, [r1, -r0, lsl #20]
    5338:	01000018 	tsteq	r0, r8, lsl r0
    533c:	010d0a5c 	tsteq	sp, ip, asr sl
    5340:	08000e32 	stmdaeq	r0, {r1, r4, r5, r9, sl, fp}
    5344:	08000e34 	stmdaeq	r0, {r2, r4, r5, r9, sl, fp}
    5348:	01007d02 	tsteq	r0, r2, lsl #26
    534c:	00001b75 	andeq	r1, r0, r5, ror fp
    5350:	00177829 	andseq	r7, r7, r9, lsr #16
    5354:	0a5c0100 	beq	170575c <_Min_Heap_Size+0x1704f5c>
    5358:	00079638 	andeq	r9, r7, r8, lsr r6
    535c:	00500100 	subseq	r0, r0, r0, lsl #2
    5360:	146b012a 	strbtne	r0, [fp], #-298	; 0xfffffed6
    5364:	4d010000 	stcmi	0, cr0, [r1, #-0]
    5368:	00010d0a 	andeq	r0, r1, sl, lsl #26
    536c:	00000000 	andeq	r0, r0, r0
    5370:	02000000 	andeq	r0, r0, #0
    5374:	a001007d 	andge	r0, r1, sp, ror r0
    5378:	2900001b 	stmdbcs	r0, {r0, r1, r3, r4}
    537c:	00001778 	andeq	r1, r0, r8, ror r7
    5380:	3d0a4d01 	stccc	13, cr4, [sl, #-4]
    5384:	00000796 	muleq	r0, r6, r7
    5388:	2a005001 	bcs	19394 <_Min_Heap_Size+0x18b94>
    538c:	0017cc01 	andseq	ip, r7, r1, lsl #24
    5390:	0a3e0100 	beq	f85798 <_Min_Heap_Size+0xf84f98>
    5394:	0e30010d 	rsfeqs	f0, f0, #5.0
    5398:	0e320800 	cdpeq	8, 3, cr0, cr2, cr0, {0}
    539c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    53a0:	1bcb0100 	blne	ff2c57a8 <_estack+0xdf2c4570>
    53a4:	78290000 	stmdavc	r9!, {}	; <UNPREDICTABLE>
    53a8:	01000017 	tsteq	r0, r7, lsl r0
    53ac:	96390a3e 			; <UNDEFINED> instruction: 0x96390a3e
    53b0:	01000007 	tsteq	r0, r7
    53b4:	012a0050 	qsubeq	r0, r0, sl
    53b8:	000018ab 	andeq	r1, r0, fp, lsr #17
    53bc:	0d0a2f01 	stceq	15, cr2, [sl, #-4]
    53c0:	00000001 	andeq	r0, r0, r1
    53c4:	00000000 	andeq	r0, r0, r0
    53c8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    53cc:	001bf601 	andseq	pc, fp, r1, lsl #12
    53d0:	17782900 	ldrbne	r2, [r8, -r0, lsl #18]!
    53d4:	2f010000 	svccs	0x00010000
    53d8:	07963d0a 	ldreq	r3, [r6, sl, lsl #26]
    53dc:	50010000 	andpl	r0, r1, r0
    53e0:	d0012a00 	andle	r2, r1, r0, lsl #20
    53e4:	01000015 	tsteq	r0, r5, lsl r0
    53e8:	010d0a20 	tsteq	sp, r0, lsr #20
    53ec:	08000e14 	stmdaeq	r0, {r2, r4, r9, sl, fp}
    53f0:	08000e16 	stmdaeq	r0, {r1, r2, r4, r9, sl, fp}
    53f4:	01007d02 	tsteq	r0, r2, lsl #26
    53f8:	00001c21 	andeq	r1, r0, r1, lsr #24
    53fc:	00177829 	andseq	r7, r7, r9, lsr #16
    5400:	0a200100 	beq	805808 <_Min_Heap_Size+0x805008>
    5404:	00079639 	andeq	r9, r7, r9, lsr r6
    5408:	00500100 	subseq	r0, r0, r0, lsl #2
    540c:	0c1b012b 	ldfeqs	f0, [fp], {43}	; 0x2b
    5410:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    5414:	2c010609 	stccs	6, cr0, [r1], {9}
    5418:	b408000f 	strlt	r0, [r8], #-15
    541c:	75080011 	strvc	r0, [r8, #-17]	; 0xffffffef
    5420:	01000021 	tsteq	r0, r1, lsr #32
    5424:	000022ae 	andeq	r2, r0, lr, lsr #5
    5428:	00177816 	andseq	r7, r7, r6, lsl r8
    542c:	092e0100 	stmdbeq	lr!, {r8}
    5430:	0007962e 	andeq	r9, r7, lr, lsr #12
    5434:	0021bd00 	eoreq	fp, r1, r0, lsl #26
    5438:	0021b900 	eoreq	fp, r1, r0, lsl #18
    543c:	16051700 	strne	r1, [r5], -r0, lsl #14
    5440:	30010000 	andcc	r0, r1, r0
    5444:	00c60c09 	sbceq	r0, r6, r9, lsl #24
    5448:	21e90000 	mvncs	r0, r0
    544c:	21db0000 	bicscs	r0, fp, r0
    5450:	5b170000 	blpl	5c5458 <_Min_Heap_Size+0x5c4c58>
    5454:	01000019 	tsteq	r0, r9, lsl r0
    5458:	c60c0931 			; <UNDEFINED> instruction: 0xc60c0931
    545c:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
    5460:	3e000022 	cdpcc	0, 0, cr0, cr0, cr2, {1}
    5464:	17000022 	strne	r0, [r0, -r2, lsr #32]
    5468:	0000137f 	andeq	r1, r0, pc, ror r3
    546c:	0c093201 	sfmeq	f3, 4, [r9], {1}
    5470:	000000c6 	andeq	r0, r0, r6, asr #1
    5474:	000022b2 			; <UNDEFINED> instruction: 0x000022b2
    5478:	000022ae 	andeq	r2, r0, lr, lsr #5
    547c:	00156c17 	andseq	r6, r5, r7, lsl ip
    5480:	09330100 	ldmdbeq	r3!, {r8}
    5484:	0000c60c 	andeq	ip, r0, ip, lsl #12
    5488:	0022d600 	eoreq	sp, r2, r0, lsl #12
    548c:	0022d000 	eoreq	sp, r2, r0
    5490:	18141700 	ldmdane	r4, {r8, r9, sl, ip}
    5494:	34010000 	strcc	r0, [r1], #-0
    5498:	00c60c09 	sbceq	r0, r6, r9, lsl #24
    549c:	23100000 	tstcs	r0, #0
    54a0:	23040000 	movwcs	r0, #16384	; 0x4000
    54a4:	061c0000 	ldreq	r0, [ip], -r0
    54a8:	1e080010 	mcrne	0, 0, r0, cr8, cr0, {0}
    54ac:	53080010 	movwpl	r0, #32784	; 0x8010
    54b0:	1d00001d 	stcne	0, cr0, [r0, #-116]	; 0xffffff8c
    54b4:	006c6176 	rsbeq	r6, ip, r6, ror r1
    54b8:	0b097501 	bleq	2628c4 <_Min_Heap_Size+0x2620c4>
    54bc:	000000c6 	andeq	r0, r0, r6, asr #1
    54c0:	0000236e 	andeq	r2, r0, lr, ror #6
    54c4:	0000236c 	andeq	r2, r0, ip, ror #6
    54c8:	00457d1e 	subeq	r7, r5, lr, lsl sp
    54cc:	00100800 	andseq	r0, r0, r0, lsl #16
    54d0:	08000008 	stmdaeq	r0, {r3}
    54d4:	10080010 	andne	r0, r8, r0, lsl r0
    54d8:	01080010 	tsteq	r8, r0, lsl r0
    54dc:	130b0975 	movwne	r0, #47477	; 0xb975
    54e0:	1f00001d 	svcne	0x0000001d
    54e4:	00004590 	muleq	r0, r0, r5
    54e8:	00002387 	andeq	r2, r0, r7, lsl #7
    54ec:	00002381 	andeq	r2, r0, r1, lsl #7
    54f0:	00459d20 	subeq	r9, r5, r0, lsr #26
    54f4:	0023b600 	eoreq	fp, r3, r0, lsl #12
    54f8:	0023b400 	eoreq	fp, r3, r0, lsl #8
    54fc:	3c210000 	stccc	0, cr0, [r1], #-0
    5500:	14000045 	strne	r0, [r0], #-69	; 0xffffffbb
    5504:	01080010 	tsteq	r8, r0, lsl r0
    5508:	00101400 	andseq	r1, r0, r0, lsl #8
    550c:	00101a08 	andseq	r1, r0, r8, lsl #20
    5510:	09750108 	ldmdbeq	r5!, {r3, r8}^
    5514:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    5518:	23cd0000 	biccs	r0, sp, #0
    551c:	23c90000 	biccs	r0, r9, #0
    5520:	4f1f0000 	svcmi	0x001f0000
    5524:	ef000045 	svc	0x00000045
    5528:	ed000023 	stc	0, cr0, [r0, #-140]	; 0xffffff74
    552c:	20000023 	andcs	r0, r0, r3, lsr #32
    5530:	00004569 	andeq	r4, r0, r9, ror #10
    5534:	00002404 	andeq	r2, r0, r4, lsl #8
    5538:	00002402 	andeq	r2, r0, r2, lsl #8
    553c:	6c1c0000 	ldcvs	0, cr0, [ip], {-0}
    5540:	7a080010 	bvc	205588 <_Min_Heap_Size+0x204d88>
    5544:	71080010 	tstvc	r8, r0, lsl r0
    5548:	2200001d 	andcs	r0, r0, #29
    554c:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    5550:	0509b301 	streq	fp, [r9, #-769]	; 0xfffffcff
    5554:	000000d2 	ldrdeq	r0, [r0], -r2
    5558:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    555c:	0010821c 	andseq	r8, r0, ip, lsl r2
    5560:	00112808 	andseq	r2, r1, r8, lsl #16
    5564:	00200d08 	eoreq	r0, r0, r8, lsl #26
    5568:	17e41700 	strbne	r1, [r4, r0, lsl #14]!
    556c:	bc010000 	stclt	0, cr0, [r1], {-0}
    5570:	00b01009 	adcseq	r1, r0, r9
    5574:	241b0000 	ldrcs	r0, [fp], #-0
    5578:	24170000 	ldrcs	r0, [r7], #-0
    557c:	a21c0000 	andsge	r0, ip, #0
    5580:	ba080010 	blt	2055c8 <_Min_Heap_Size+0x204dc8>
    5584:	2b080010 	blcs	2055cc <_Min_Heap_Size+0x204dcc>
    5588:	1d00001e 	stcne	0, cr0, [r0, #-120]	; 0xffffff88
    558c:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5590:	0b09c701 	bleq	27719c <_Min_Heap_Size+0x27699c>
    5594:	000000c6 	andeq	r0, r0, r6, asr #1
    5598:	0000243c 	andeq	r2, r0, ip, lsr r4
    559c:	0000243a 	andeq	r2, r0, sl, lsr r4
    55a0:	00457d1e 	subeq	r7, r5, lr, lsl sp
    55a4:	0010a400 	andseq	sl, r0, r0, lsl #8
    55a8:	a4000008 	strge	r0, [r0], #-8
    55ac:	ac080010 	stcge	0, cr0, [r8], {16}
    55b0:	01080010 	tsteq	r8, r0, lsl r0
    55b4:	eb0b09c7 	bl	2c7cd8 <_Min_Heap_Size+0x2c74d8>
    55b8:	1f00001d 	svcne	0x0000001d
    55bc:	00004590 	muleq	r0, r0, r5
    55c0:	00002455 	andeq	r2, r0, r5, asr r4
    55c4:	0000244f 	andeq	r2, r0, pc, asr #8
    55c8:	00459d20 	subeq	r9, r5, r0, lsr #26
    55cc:	00248400 	eoreq	r8, r4, r0, lsl #8
    55d0:	00248200 	eoreq	r8, r4, r0, lsl #4
    55d4:	3c210000 	stccc	0, cr0, [r1], #-0
    55d8:	b0000045 	andlt	r0, r0, r5, asr #32
    55dc:	01080010 	tsteq	r8, r0, lsl r0
    55e0:	0010b000 	andseq	fp, r0, r0
    55e4:	0010b608 	andseq	fp, r0, r8, lsl #12
    55e8:	09c70108 	stmibeq	r7, {r3, r8}^
    55ec:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    55f0:	249b0000 	ldrcs	r0, [fp], #0
    55f4:	24970000 	ldrcs	r0, [r7], #0
    55f8:	4f1f0000 	svcmi	0x001f0000
    55fc:	bd000045 	stclt	0, cr0, [r0, #-276]	; 0xfffffeec
    5600:	bb000024 	bllt	5698 <_Min_Heap_Size+0x4e98>
    5604:	20000024 	andcs	r0, r0, r4, lsr #32
    5608:	00004569 	andeq	r4, r0, r9, ror #10
    560c:	000024d2 	ldrdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    5610:	000024d0 	ldrdeq	r2, [r0], -r0
    5614:	ba1c0000 	blt	70561c <_Min_Heap_Size+0x704e1c>
    5618:	d2080010 	andle	r0, r8, #16
    561c:	c3080010 	movwgt	r0, #32784	; 0x8010
    5620:	1d00001e 	stcne	0, cr0, [r0, #-120]	; 0xffffff88
    5624:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5628:	0b09c801 	bleq	277634 <_Min_Heap_Size+0x276e34>
    562c:	000000c6 	andeq	r0, r0, r6, asr #1
    5630:	000024e7 	andeq	r2, r0, r7, ror #9
    5634:	000024e5 	andeq	r2, r0, r5, ror #9
    5638:	00457d1e 	subeq	r7, r5, lr, lsl sp
    563c:	0010bc00 	andseq	fp, r0, r0, lsl #24
    5640:	bc000008 	stclt	0, cr0, [r0], {8}
    5644:	c4080010 	strgt	r0, [r8], #-16
    5648:	01080010 	tsteq	r8, r0, lsl r0
    564c:	830b09c8 	movwhi	r0, #47560	; 0xb9c8
    5650:	1f00001e 	svcne	0x0000001e
    5654:	00004590 	muleq	r0, r0, r5
    5658:	00002500 	andeq	r2, r0, r0, lsl #10
    565c:	000024fa 	strdeq	r2, [r0], -sl
    5660:	00459d20 	subeq	r9, r5, r0, lsr #26
    5664:	00252f00 	eoreq	r2, r5, r0, lsl #30
    5668:	00252d00 	eoreq	r2, r5, r0, lsl #26
    566c:	3c210000 	stccc	0, cr0, [r1], #-0
    5670:	c8000045 	stmdagt	r0, {r0, r2, r6}
    5674:	01080010 	tsteq	r8, r0, lsl r0
    5678:	0010c800 	andseq	ip, r0, r0, lsl #16
    567c:	0010ce08 	andseq	ip, r0, r8, lsl #28
    5680:	09c80108 	stmibeq	r8, {r3, r8}^
    5684:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    5688:	25460000 	strbcs	r0, [r6, #-0]
    568c:	25420000 	strbcs	r0, [r2, #-0]
    5690:	4f1f0000 	svcmi	0x001f0000
    5694:	68000045 	stmdavs	r0, {r0, r2, r6}
    5698:	66000025 	strvs	r0, [r0], -r5, lsr #32
    569c:	20000025 	andcs	r0, r0, r5, lsr #32
    56a0:	00004569 	andeq	r4, r0, r9, ror #10
    56a4:	0000257d 	andeq	r2, r0, sp, ror r5
    56a8:	0000257b 	andeq	r2, r0, fp, ror r5
    56ac:	d21c0000 	andsle	r0, ip, #0
    56b0:	ea080010 	b	2056f8 <_Min_Heap_Size+0x204ef8>
    56b4:	5b080010 	blpl	2056fc <_Min_Heap_Size+0x204efc>
    56b8:	1d00001f 	stcne	0, cr0, [r0, #-124]	; 0xffffff84
    56bc:	006c6176 	rsbeq	r6, ip, r6, ror r1
    56c0:	0b09cc01 	bleq	2786cc <_Min_Heap_Size+0x277ecc>
    56c4:	000000c6 	andeq	r0, r0, r6, asr #1
    56c8:	00002592 	muleq	r0, r2, r5
    56cc:	00002590 	muleq	r0, r0, r5
    56d0:	00457d1e 	subeq	r7, r5, lr, lsl sp
    56d4:	0010d400 	andseq	sp, r0, r0, lsl #8
    56d8:	d4000008 	strle	r0, [r0], #-8
    56dc:	dc080010 	stcle	0, cr0, [r8], {16}
    56e0:	01080010 	tsteq	r8, r0, lsl r0
    56e4:	1b0b09cc 	blne	2c7e1c <_Min_Heap_Size+0x2c761c>
    56e8:	1f00001f 	svcne	0x0000001f
    56ec:	00004590 	muleq	r0, r0, r5
    56f0:	000025ab 	andeq	r2, r0, fp, lsr #11
    56f4:	000025a5 	andeq	r2, r0, r5, lsr #11
    56f8:	00459d20 	subeq	r9, r5, r0, lsr #26
    56fc:	0025da00 	eoreq	sp, r5, r0, lsl #20
    5700:	0025d800 	eoreq	sp, r5, r0, lsl #16
    5704:	3c210000 	stccc	0, cr0, [r1], #-0
    5708:	e0000045 	and	r0, r0, r5, asr #32
    570c:	01080010 	tsteq	r8, r0, lsl r0
    5710:	0010e000 	andseq	lr, r0, r0
    5714:	0010e608 	andseq	lr, r0, r8, lsl #12
    5718:	09cc0108 	stmibeq	ip, {r3, r8}^
    571c:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    5720:	25f10000 	ldrbcs	r0, [r1, #0]!
    5724:	25ed0000 	strbcs	r0, [sp, #0]!
    5728:	4f1f0000 	svcmi	0x001f0000
    572c:	13000045 	movwne	r0, #69	; 0x45
    5730:	11000026 	tstne	r0, r6, lsr #32
    5734:	20000026 	andcs	r0, r0, r6, lsr #32
    5738:	00004569 	andeq	r4, r0, r9, ror #10
    573c:	00002628 	andeq	r2, r0, r8, lsr #12
    5740:	00002626 	andeq	r2, r0, r6, lsr #12
    5744:	f41c0000 			; <UNDEFINED> instruction: 0xf41c0000
    5748:	0c080010 	stceq	0, cr0, [r8], {16}
    574c:	f3080011 	vqadd.u8	d0, d8, d1
    5750:	1d00001f 	stcne	0, cr0, [r0, #-124]	; 0xffffff84
    5754:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5758:	0b09d201 	bleq	279f64 <_Min_Heap_Size+0x279764>
    575c:	000000c6 	andeq	r0, r0, r6, asr #1
    5760:	0000263d 	andeq	r2, r0, sp, lsr r6
    5764:	0000263b 	andeq	r2, r0, fp, lsr r6
    5768:	00457d1e 	subeq	r7, r5, lr, lsl sp
    576c:	0010f600 	andseq	pc, r0, r0, lsl #12
    5770:	f6000008 			; <UNDEFINED> instruction: 0xf6000008
    5774:	fe080010 	mcr2	0, 0, r0, cr8, cr0, {0}
    5778:	01080010 	tsteq	r8, r0, lsl r0
    577c:	b30b09d2 	movwlt	r0, #47570	; 0xb9d2
    5780:	1f00001f 	svcne	0x0000001f
    5784:	00004590 	muleq	r0, r0, r5
    5788:	00002656 	andeq	r2, r0, r6, asr r6
    578c:	00002650 	andeq	r2, r0, r0, asr r6
    5790:	00459d20 	subeq	r9, r5, r0, lsr #26
    5794:	00268500 	eoreq	r8, r6, r0, lsl #10
    5798:	00268300 	eoreq	r8, r6, r0, lsl #6
    579c:	3c210000 	stccc	0, cr0, [r1], #-0
    57a0:	02000045 	andeq	r0, r0, #69	; 0x45
    57a4:	01080011 	tsteq	r8, r1, lsl r0
    57a8:	00110200 	andseq	r0, r1, r0, lsl #4
    57ac:	00110808 	andseq	r0, r1, r8, lsl #16
    57b0:	09d20108 	ldmibeq	r2, {r3, r8}^
    57b4:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    57b8:	269c0000 	ldrcs	r0, [ip], r0
    57bc:	26980000 	ldrcs	r0, [r8], r0
    57c0:	4f1f0000 	svcmi	0x001f0000
    57c4:	be000045 	cdplt	0, 0, cr0, cr0, cr5, {2}
    57c8:	bc000026 	stclt	0, cr0, [r0], {38}	; 0x26
    57cc:	20000026 	andcs	r0, r0, r6, lsr #32
    57d0:	00004569 	andeq	r4, r0, r9, ror #10
    57d4:	000026d3 	ldrdeq	r2, [r0], -r3
    57d8:	000026d1 	ldrdeq	r2, [r0], -r1
    57dc:	121a0000 	andsne	r0, sl, #0
    57e0:	00080011 	andeq	r0, r8, r1, lsl r0
    57e4:	23000046 	movwcs	r0, #70	; 0x46
    57e8:	08001126 	stmdaeq	r0, {r1, r2, r5, r8, ip}
    57ec:	00001a8f 	andeq	r1, r0, pc, lsl #21
    57f0:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    57f4:	00000074 	andeq	r0, r0, r4, ror r0
    57f8:	0011281c 	andseq	r2, r1, ip, lsl r8
    57fc:	0011a008 	andseq	sl, r1, r8
    5800:	00220808 	eoreq	r0, r2, r8, lsl #16
    5804:	185a1700 	ldmdane	sl, {r8, r9, sl, ip}^
    5808:	eb010000 	bl	45810 <_Min_Heap_Size+0x45010>
    580c:	00b01009 	adcseq	r1, r0, r9
    5810:	26e80000 	strbtcs	r0, [r8], r0
    5814:	26e60000 	strbtcs	r0, [r6], r0
    5818:	421c0000 	andsmi	r0, ip, #0
    581c:	5a080011 	bpl	205868 <_Min_Heap_Size+0x205068>
    5820:	c7080011 	smladgt	r8, r1, r0, r0
    5824:	1d000020 	stcne	0, cr0, [r0, #-128]	; 0xffffff80
    5828:	006c6176 	rsbeq	r6, ip, r6, ror r1
    582c:	0909f001 	stmdbeq	r9, {r0, ip, sp, lr, pc}
    5830:	000000c6 	andeq	r0, r0, r6, asr #1
    5834:	000026fd 	strdeq	r2, [r0], -sp
    5838:	000026fb 	strdeq	r2, [r0], -fp
    583c:	00457d1e 	subeq	r7, r5, lr, lsl sp
    5840:	00114400 	andseq	r4, r1, r0, lsl #8
    5844:	44000008 	strmi	r0, [r0], #-8
    5848:	4c080011 	stcmi	0, cr0, [r8], {17}
    584c:	01080011 	tsteq	r8, r1, lsl r0
    5850:	870909f0 			; <UNDEFINED> instruction: 0x870909f0
    5854:	1f000020 	svcne	0x00000020
    5858:	00004590 	muleq	r0, r0, r5
    585c:	00002716 	andeq	r2, r0, r6, lsl r7
    5860:	00002710 	andeq	r2, r0, r0, lsl r7
    5864:	00459d20 	subeq	r9, r5, r0, lsr #26
    5868:	00274500 	eoreq	r4, r7, r0, lsl #10
    586c:	00274300 	eoreq	r4, r7, r0, lsl #6
    5870:	3c210000 	stccc	0, cr0, [r1], #-0
    5874:	50000045 	andpl	r0, r0, r5, asr #32
    5878:	01080011 	tsteq	r8, r1, lsl r0
    587c:	00115000 	andseq	r5, r1, r0
    5880:	00115608 	andseq	r5, r1, r8, lsl #12
    5884:	09f00108 	ldmibeq	r0!, {r3, r8}^
    5888:	455c1f09 	ldrbmi	r1, [ip, #-3849]	; 0xfffff0f7
    588c:	275c0000 	ldrbcs	r0, [ip, -r0]
    5890:	27580000 	ldrbcs	r0, [r8, -r0]
    5894:	4f1f0000 	svcmi	0x001f0000
    5898:	7e000045 	cdpvc	0, 0, cr0, cr0, cr5, {2}
    589c:	7c000027 	stcvc	0, cr0, [r0], {39}	; 0x27
    58a0:	20000027 	andcs	r0, r0, r7, lsr #32
    58a4:	00004569 	andeq	r4, r0, r9, ror #10
    58a8:	00002793 	muleq	r0, r3, r7
    58ac:	00002791 	muleq	r0, r1, r7
    58b0:	5a1c0000 	bpl	7058b8 <_Min_Heap_Size+0x7050b8>
    58b4:	72080011 	andvc	r0, r8, #17
    58b8:	5f080011 	svcpl	0x00080011
    58bc:	1d000021 	stcne	0, cr0, [r0, #-132]	; 0xffffff7c
    58c0:	006c6176 	rsbeq	r6, ip, r6, ror r1
    58c4:	0909f301 	stmdbeq	r9, {r0, r8, r9, ip, sp, lr, pc}
    58c8:	000000c6 	andeq	r0, r0, r6, asr #1
    58cc:	000027a8 	andeq	r2, r0, r8, lsr #15
    58d0:	000027a6 	andeq	r2, r0, r6, lsr #15
    58d4:	00457d1e 	subeq	r7, r5, lr, lsl sp
    58d8:	00115c00 	andseq	r5, r1, r0, lsl #24
    58dc:	5c000008 	stcpl	0, cr0, [r0], {8}
    58e0:	64080011 	strvs	r0, [r8], #-17	; 0xffffffef
    58e4:	01080011 	tsteq	r8, r1, lsl r0
    58e8:	1f0909f3 	svcne	0x000909f3
    58ec:	1f000021 	svcne	0x00000021
    58f0:	00004590 	muleq	r0, r0, r5
    58f4:	000027c1 	andeq	r2, r0, r1, asr #15
    58f8:	000027bb 			; <UNDEFINED> instruction: 0x000027bb
    58fc:	00459d20 	subeq	r9, r5, r0, lsr #26
    5900:	0027f000 	eoreq	pc, r7, r0
    5904:	0027ee00 	eoreq	lr, r7, r0, lsl #28
    5908:	3c210000 	stccc	0, cr0, [r1], #-0
    590c:	68000045 	stmdavs	r0, {r0, r2, r6}
    5910:	01080011 	tsteq	r8, r1, lsl r0
    5914:	00116800 	andseq	r6, r1, r0, lsl #16
    5918:	00116e08 	andseq	r6, r1, r8, lsl #28
    591c:	09f30108 	ldmibeq	r3!, {r3, r8}^
    5920:	455c1f09 	ldrbmi	r1, [ip, #-3849]	; 0xfffff0f7
    5924:	28070000 	stmdacs	r7, {}	; <UNPREDICTABLE>
    5928:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
    592c:	4f1f0000 	svcmi	0x001f0000
    5930:	29000045 	stmdbcs	r0, {r0, r2, r6}
    5934:	27000028 	strcs	r0, [r0, -r8, lsr #32]
    5938:	20000028 	andcs	r0, r0, r8, lsr #32
    593c:	00004569 	andeq	r4, r0, r9, ror #10
    5940:	0000283e 	andeq	r2, r0, lr, lsr r8
    5944:	0000283c 	andeq	r2, r0, ip, lsr r8
    5948:	7c1c0000 	ldcvc	0, cr0, [ip], {-0}
    594c:	94080011 	strls	r0, [r8], #-17	; 0xffffffef
    5950:	f7080011 			; <UNDEFINED> instruction: 0xf7080011
    5954:	1d000021 	stcne	0, cr0, [r0, #-132]	; 0xffffff7c
    5958:	006c6176 	rsbeq	r6, ip, r6, ror r1
    595c:	0909f901 	stmdbeq	r9, {r0, r8, fp, ip, sp, lr, pc}
    5960:	000000c6 	andeq	r0, r0, r6, asr #1
    5964:	00002853 	andeq	r2, r0, r3, asr r8
    5968:	00002851 	andeq	r2, r0, r1, asr r8
    596c:	00457d1e 	subeq	r7, r5, lr, lsl sp
    5970:	00117e00 	andseq	r7, r1, r0, lsl #28
    5974:	7e000008 	cdpvc	0, 0, cr0, cr0, cr8, {0}
    5978:	86080011 			; <UNDEFINED> instruction: 0x86080011
    597c:	01080011 	tsteq	r8, r1, lsl r0
    5980:	b70909f9 			; <UNDEFINED> instruction: 0xb70909f9
    5984:	1f000021 	svcne	0x00000021
    5988:	00004590 	muleq	r0, r0, r5
    598c:	0000286c 	andeq	r2, r0, ip, ror #16
    5990:	00002866 	andeq	r2, r0, r6, ror #16
    5994:	00459d20 	subeq	r9, r5, r0, lsr #26
    5998:	00289b00 	eoreq	r9, r8, r0, lsl #22
    599c:	00289900 	eoreq	r9, r8, r0, lsl #18
    59a0:	3c210000 	stccc	0, cr0, [r1], #-0
    59a4:	8a000045 	bhi	5ac0 <_Min_Heap_Size+0x52c0>
    59a8:	01080011 	tsteq	r8, r1, lsl r0
    59ac:	00118a00 	andseq	r8, r1, r0, lsl #20
    59b0:	00119008 	andseq	r9, r1, r8
    59b4:	09f90108 	ldmibeq	r9!, {r3, r8}^
    59b8:	455c1f09 	ldrbmi	r1, [ip, #-3849]	; 0xfffff0f7
    59bc:	28b20000 	ldmcs	r2!, {}	; <UNPREDICTABLE>
    59c0:	28ae0000 	stmiacs	lr!, {}	; <UNPREDICTABLE>
    59c4:	4f1f0000 	svcmi	0x001f0000
    59c8:	d4000045 	strle	r0, [r0], #-69	; 0xffffffbb
    59cc:	d2000028 	andle	r0, r0, #40	; 0x28
    59d0:	20000028 	andcs	r0, r0, r8, lsr #32
    59d4:	00004569 	andeq	r4, r0, r9, ror #10
    59d8:	000028e9 	andeq	r2, r0, r9, ror #17
    59dc:	000028e7 	andeq	r2, r0, r7, ror #17
    59e0:	9e230000 	cdpls	0, 2, cr0, cr3, cr0, {0}
    59e4:	8f080011 	svchi	0x00080011
    59e8:	1900001a 	stmdbne	r0, {r1, r3, r4}
    59ec:	74025001 	strvc	r5, [r2], #-1
    59f0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    59f4:	08000f86 	stmdaeq	r0, {r1, r2, r7, r8, r9, sl, fp}
    59f8:	0000079c 	muleq	r0, ip, r7
    59fc:	0000221c 	andeq	r2, r0, ip, lsl r2
    5a00:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    5a04:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    5a08:	08000ffc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
    5a0c:	00000af5 	strdeq	r0, [r0], -r5
    5a10:	00002230 	andeq	r2, r0, r0, lsr r2
    5a14:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    5a18:	1a000074 	bne	5bf0 <_Min_Heap_Size+0x53f0>
    5a1c:	0800102c 	stmdaeq	r0, {r2, r3, r5, ip}
    5a20:	0000460f 	andeq	r4, r0, pc, lsl #12
    5a24:	00103e18 	andseq	r3, r0, r8, lsl lr
    5a28:	00079c08 	andeq	r9, r7, r8, lsl #24
    5a2c:	00224d00 	eoreq	r4, r2, r0, lsl #26
    5a30:	50011900 	andpl	r1, r1, r0, lsl #18
    5a34:	00007402 	andeq	r7, r0, r2, lsl #8
    5a38:	00104618 	andseq	r4, r0, r8, lsl r6
    5a3c:	001b4a08 	andseq	r4, fp, r8, lsl #20
    5a40:	00226100 	eoreq	r6, r2, r0, lsl #2
    5a44:	50011900 	andpl	r1, r1, r0, lsl #18
    5a48:	00007402 	andeq	r7, r0, r2, lsl #8
    5a4c:	00104e18 	andseq	r4, r0, r8, lsl lr
    5a50:	001b4a08 	andseq	r4, fp, r8, lsl #20
    5a54:	00227500 	eoreq	r7, r2, r0, lsl #10
    5a58:	50011900 	andpl	r1, r1, r0, lsl #18
    5a5c:	00007402 	andeq	r7, r0, r2, lsl #8
    5a60:	00105618 	andseq	r5, r0, r8, lsl r6
    5a64:	001b4a08 	andseq	r4, fp, r8, lsl #20
    5a68:	00228900 	eoreq	r8, r2, r0, lsl #18
    5a6c:	50011900 	andpl	r1, r1, r0, lsl #18
    5a70:	00007402 	andeq	r7, r0, r2, lsl #8
    5a74:	0011a618 	andseq	sl, r1, r8, lsl r6
    5a78:	00091b08 	andeq	r1, r9, r8, lsl #22
    5a7c:	00229d00 	eoreq	r9, r2, r0, lsl #26
    5a80:	50011900 	andpl	r1, r1, r0, lsl #18
    5a84:	00007402 	andeq	r7, r0, r2, lsl #8
    5a88:	0011ae23 	andseq	sl, r1, r3, lsr #28
    5a8c:	0008d508 	andeq	sp, r8, r8, lsl #10
    5a90:	50011900 	andpl	r1, r1, r0, lsl #18
    5a94:	00007402 	andeq	r7, r0, r2, lsl #8
    5a98:	62012c00 	andvs	r2, r1, #0, 24
    5a9c:	01000016 	tsteq	r0, r6, lsl r0
    5aa0:	011308e0 	tsteq	r3, r0, ror #17
    5aa4:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    5ab0:	000028fc 	strdeq	r2, [r0], -ip
    5ab4:	00257101 	eoreq	r7, r5, r1, lsl #2
    5ab8:	17781600 	ldrbne	r1, [r8, -r0, lsl #12]!
    5abc:	e0010000 	and	r0, r1, r0
    5ac0:	07964008 	ldreq	r4, [r6, r8]
    5ac4:	292a0000 	stmdbcs	sl!, {}	; <UNPREDICTABLE>
    5ac8:	291c0000 	ldmdbcs	ip, {}	; <UNPREDICTABLE>
    5acc:	001c0000 	andseq	r0, ip, r0
    5ad0:	00000000 	andeq	r0, r0, r0
    5ad4:	7b000000 	blvc	5adc <_Min_Heap_Size+0x52dc>
    5ad8:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    5adc:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5ae0:	0308e301 	movweq	lr, #33537	; 0x8301
    5ae4:	000000c6 	andeq	r0, r0, r6, asr #1
    5ae8:	00002984 	andeq	r2, r0, r4, lsl #19
    5aec:	00002982 	andeq	r2, r0, r2, lsl #19
    5af0:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    5b00:	01000000 	mrseq	r0, (UNDEF: 0)
    5b04:	3b0308e3 	blcc	c7e98 <_Min_Heap_Size+0xc7698>
    5b08:	1f000023 	svcne	0x00000023
    5b0c:	00004590 	muleq	r0, r0, r5
    5b10:	0000299d 	muleq	r0, sp, r9
    5b14:	00002997 	muleq	r0, r7, r9
    5b18:	00459d20 	subeq	r9, r5, r0, lsr #26
    5b1c:	0029cc00 	eoreq	ip, r9, r0, lsl #24
    5b20:	0029ca00 	eoreq	ip, r9, r0, lsl #20
    5b24:	3c210000 	stccc	0, cr0, [r1], #-0
    5b28:	00000045 	andeq	r0, r0, r5, asr #32
    5b2c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5b38:	08e30100 	stmiaeq	r3!, {r8}^
    5b3c:	455c1f03 	ldrbmi	r1, [ip, #-3843]	; 0xfffff0fd
    5b40:	29e30000 	stmibcs	r3!, {}^	; <UNPREDICTABLE>
    5b44:	29df0000 	ldmibcs	pc, {}^	; <UNPREDICTABLE>
    5b48:	4f1f0000 	svcmi	0x001f0000
    5b4c:	05000045 	streq	r0, [r0, #-69]	; 0xffffffbb
    5b50:	0300002a 	movweq	r0, #42	; 0x2a
    5b54:	2000002a 	andcs	r0, r0, sl, lsr #32
    5b58:	00004569 	andeq	r4, r0, r9, ror #10
    5b5c:	00002a1a 	andeq	r2, r0, sl, lsl sl
    5b60:	00002a18 	andeq	r2, r0, r8, lsl sl
    5b64:	001c0000 	andseq	r0, ip, r0
    5b68:	00000000 	andeq	r0, r0, r0
    5b6c:	13000000 	movwne	r0, #0
    5b70:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5b74:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5b78:	0308e401 	movweq	lr, #33793	; 0x8401
    5b7c:	000000c6 	andeq	r0, r0, r6, asr #1
    5b80:	00002a2f 	andeq	r2, r0, pc, lsr #20
    5b84:	00002a2d 	andeq	r2, r0, sp, lsr #20
    5b88:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    5b98:	01000000 	mrseq	r0, (UNDEF: 0)
    5b9c:	d30308e4 	movwle	r0, #14564	; 0x38e4
    5ba0:	1f000023 	svcne	0x00000023
    5ba4:	00004590 	muleq	r0, r0, r5
    5ba8:	00002a48 	andeq	r2, r0, r8, asr #20
    5bac:	00002a42 	andeq	r2, r0, r2, asr #20
    5bb0:	00459d20 	subeq	r9, r5, r0, lsr #26
    5bb4:	002a7700 	eoreq	r7, sl, r0, lsl #14
    5bb8:	002a7500 	eoreq	r7, sl, r0, lsl #10
    5bbc:	3c210000 	stccc	0, cr0, [r1], #-0
    5bc0:	00000045 	andeq	r0, r0, r5, asr #32
    5bc4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5bd0:	08e40100 	stmiaeq	r4!, {r8}^
    5bd4:	455c1f03 	ldrbmi	r1, [ip, #-3843]	; 0xfffff0fd
    5bd8:	2a8e0000 	bcs	fe385be0 <_estack+0xde3849a8>
    5bdc:	2a8a0000 	bcs	fe285be4 <_estack+0xde2849ac>
    5be0:	4f1f0000 	svcmi	0x001f0000
    5be4:	b0000045 	andlt	r0, r0, r5, asr #32
    5be8:	ae00002a 	cdpge	0, 0, cr0, cr0, cr10, {1}
    5bec:	2000002a 	andcs	r0, r0, sl, lsr #32
    5bf0:	00004569 	andeq	r4, r0, r9, ror #10
    5bf4:	00002ac5 	andeq	r2, r0, r5, asr #21
    5bf8:	00002ac3 	andeq	r2, r0, r3, asr #21
    5bfc:	001c0000 	andseq	r0, ip, r0
    5c00:	00000000 	andeq	r0, r0, r0
    5c04:	ab000000 	blge	5c0c <_Min_Heap_Size+0x540c>
    5c08:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5c0c:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5c10:	0508e901 	streq	lr, [r8, #-2305]	; 0xfffff6ff
    5c14:	000000c6 	andeq	r0, r0, r6, asr #1
    5c18:	00002ada 	ldrdeq	r2, [r0], -sl
    5c1c:	00002ad8 	ldrdeq	r2, [r0], -r8
    5c20:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    5c30:	01000000 	mrseq	r0, (UNDEF: 0)
    5c34:	6b0508e9 	blvs	147fe0 <_Min_Heap_Size+0x1477e0>
    5c38:	1f000024 	svcne	0x00000024
    5c3c:	00004590 	muleq	r0, r0, r5
    5c40:	00002af3 	strdeq	r2, [r0], -r3
    5c44:	00002aed 	andeq	r2, r0, sp, ror #21
    5c48:	00459d20 	subeq	r9, r5, r0, lsr #26
    5c4c:	002b2200 	eoreq	r2, fp, r0, lsl #4
    5c50:	002b2000 	eoreq	r2, fp, r0
    5c54:	3c210000 	stccc	0, cr0, [r1], #-0
    5c58:	00000045 	andeq	r0, r0, r5, asr #32
    5c5c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5c68:	08e90100 	stmiaeq	r9!, {r8}^
    5c6c:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    5c70:	2b390000 	blcs	e45c78 <_Min_Heap_Size+0xe45478>
    5c74:	2b350000 	blcs	d45c7c <_Min_Heap_Size+0xd4547c>
    5c78:	4f1f0000 	svcmi	0x001f0000
    5c7c:	5b000045 	blpl	5d98 <_Min_Heap_Size+0x5598>
    5c80:	5900002b 	stmdbpl	r0, {r0, r1, r3, r5}
    5c84:	2000002b 	andcs	r0, r0, fp, lsr #32
    5c88:	00004569 	andeq	r4, r0, r9, ror #10
    5c8c:	00002b70 	andeq	r2, r0, r0, ror fp
    5c90:	00002b6e 	andeq	r2, r0, lr, ror #22
    5c94:	001c0000 	andseq	r0, ip, r0
    5c98:	00000000 	andeq	r0, r0, r0
    5c9c:	43000000 	movwmi	r0, #0
    5ca0:	1d000025 	stcne	0, cr0, [r0, #-148]	; 0xffffff6c
    5ca4:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5ca8:	0508ef01 	streq	lr, [r8, #-3841]	; 0xfffff0ff
    5cac:	000000c6 	andeq	r0, r0, r6, asr #1
    5cb0:	00002b85 	andeq	r2, r0, r5, lsl #23
    5cb4:	00002b83 	andeq	r2, r0, r3, lsl #23
    5cb8:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    5cc8:	01000000 	mrseq	r0, (UNDEF: 0)
    5ccc:	030508ef 	movweq	r0, #22767	; 0x58ef
    5cd0:	1f000025 	svcne	0x00000025
    5cd4:	00004590 	muleq	r0, r0, r5
    5cd8:	00002b9e 	muleq	r0, lr, fp
    5cdc:	00002b98 	muleq	r0, r8, fp
    5ce0:	00459d20 	subeq	r9, r5, r0, lsr #26
    5ce4:	002bcd00 	eoreq	ip, fp, r0, lsl #26
    5ce8:	002bcb00 	eoreq	ip, fp, r0, lsl #22
    5cec:	3c210000 	stccc	0, cr0, [r1], #-0
    5cf0:	00000045 	andeq	r0, r0, r5, asr #32
    5cf4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5d00:	08ef0100 	stmiaeq	pc!, {r8}^	; <UNPREDICTABLE>
    5d04:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    5d08:	2be40000 	blcs	ff905d10 <_estack+0xdf904ad8>
    5d0c:	2be00000 	blcs	ff805d14 <_estack+0xdf804adc>
    5d10:	4f1f0000 	svcmi	0x001f0000
    5d14:	06000045 	streq	r0, [r0], -r5, asr #32
    5d18:	0400002c 	streq	r0, [r0], #-44	; 0xffffffd4
    5d1c:	2000002c 	andcs	r0, r0, ip, lsr #32
    5d20:	00004569 	andeq	r4, r0, r9, ror #10
    5d24:	00002c1b 	andeq	r2, r0, fp, lsl ip
    5d28:	00002c19 	andeq	r2, r0, r9, lsl ip
    5d2c:	001a0000 	andseq	r0, sl, r0
    5d30:	0f000000 	svceq	0x00000000
    5d34:	18000046 	stmdane	r0, {r1, r2, r6}
    5d38:	00000000 	andeq	r0, r0, r0
    5d3c:	00001ac9 	andeq	r1, r0, r9, asr #21
    5d40:	00002560 	andeq	r2, r0, r0, ror #10
    5d44:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    5d48:	23000074 	movwcs	r0, #116	; 0x74
    5d4c:	00000000 	andeq	r0, r0, r0
    5d50:	00001ac9 	andeq	r1, r0, r9, asr #21
    5d54:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    5d58:	00000074 	andeq	r0, r0, r4, ror r0
    5d5c:	151b012c 	ldrne	r0, [fp, #-300]	; 0xfffffed4
    5d60:	93010000 	movwls	r0, #4096	; 0x1000
    5d64:	3a011308 	bcc	4a98c <_Min_Heap_Size+0x4a18c>
    5d68:	00000002 	andeq	r0, r0, r2
    5d6c:	00000000 	andeq	r0, r0, r0
    5d70:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    5d74:	0100002c 	tsteq	r0, ip, lsr #32
    5d78:	00002704 	andeq	r2, r0, r4, lsl #14
    5d7c:	00177816 	andseq	r7, r7, r6, lsl r8
    5d80:	08930100 	ldmeq	r3, {r8}
    5d84:	00079641 	andeq	r9, r7, r1, asr #12
    5d88:	002c5c00 	eoreq	r5, ip, r0, lsl #24
    5d8c:	002c4e00 	eoreq	r4, ip, r0, lsl #28
    5d90:	00001c00 	andeq	r1, r0, r0, lsl #24
    5d94:	00000000 	andeq	r0, r0, r0
    5d98:	263e0000 	ldrtcs	r0, [lr], -r0
    5d9c:	761d0000 	ldrvc	r0, [sp], -r0
    5da0:	01006c61 	tsteq	r0, r1, ror #24
    5da4:	c6030896 			; <UNDEFINED> instruction: 0xc6030896
    5da8:	b6000000 	strlt	r0, [r0], -r0
    5dac:	b400002c 	strlt	r0, [r0], #-44	; 0xffffffd4
    5db0:	1e00002c 	cdpne	0, 0, cr0, cr0, cr12, {1}
    5db4:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5dc4:	96010000 	strls	r0, [r1], -r0
    5dc8:	25fe0308 	ldrbcs	r0, [lr, #776]!	; 0x308
    5dcc:	901f0000 	andsls	r0, pc, r0
    5dd0:	cf000045 	svcgt	0x00000045
    5dd4:	c900002c 	stmdbgt	r0, {r2, r3, r5}
    5dd8:	2000002c 	andcs	r0, r0, ip, lsr #32
    5ddc:	0000459d 	muleq	r0, sp, r5
    5de0:	00002cfe 	strdeq	r2, [r0], -lr
    5de4:	00002cfc 	strdeq	r2, [r0], -ip
    5de8:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5dec:	00000000 	andeq	r0, r0, r0
    5df0:	00010000 	andeq	r0, r1, r0
	...
    5dfc:	03089601 	movweq	r9, #34305	; 0x8601
    5e00:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5e04:	002d1500 	eoreq	r1, sp, r0, lsl #10
    5e08:	002d1100 	eoreq	r1, sp, r0, lsl #2
    5e0c:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4f14 <_Min_Heap_Size+0x4714>
    5e10:	2d370000 	ldccs	0, cr0, [r7, #-0]
    5e14:	2d350000 	ldccs	0, cr0, [r5, #-0]
    5e18:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5e1c:	4c000045 	stcmi	0, cr0, [r0], {69}	; 0x45
    5e20:	4a00002d 	bmi	5edc <_Min_Heap_Size+0x56dc>
    5e24:	0000002d 	andeq	r0, r0, sp, lsr #32
    5e28:	00001c00 	andeq	r1, r0, r0, lsl #24
    5e2c:	00000000 	andeq	r0, r0, r0
    5e30:	26d60000 	ldrbcs	r0, [r6], r0
    5e34:	761d0000 	ldrvc	r0, [sp], -r0
    5e38:	01006c61 	tsteq	r0, r1, ror #24
    5e3c:	c605089b 			; <UNDEFINED> instruction: 0xc605089b
    5e40:	61000000 	mrsvs	r0, (UNDEF: 0)
    5e44:	5f00002d 	svcpl	0x0000002d
    5e48:	1e00002d 	cdpne	0, 0, cr0, cr0, cr13, {1}
    5e4c:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5e5c:	9b010000 	blls	45e64 <_Min_Heap_Size+0x45664>
    5e60:	26960508 	ldrcs	r0, [r6], r8, lsl #10
    5e64:	901f0000 	andsls	r0, pc, r0
    5e68:	7a000045 	bvc	5f84 <_Min_Heap_Size+0x5784>
    5e6c:	7400002d 	strvc	r0, [r0], #-45	; 0xffffffd3
    5e70:	2000002d 	andcs	r0, r0, sp, lsr #32
    5e74:	0000459d 	muleq	r0, sp, r5
    5e78:	00002da9 	andeq	r2, r0, r9, lsr #27
    5e7c:	00002da7 	andeq	r2, r0, r7, lsr #27
    5e80:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5e84:	00000000 	andeq	r0, r0, r0
    5e88:	00010000 	andeq	r0, r1, r0
	...
    5e94:	05089b01 	streq	r9, [r8, #-2817]	; 0xfffff4ff
    5e98:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5e9c:	002dc000 	eoreq	ip, sp, r0
    5ea0:	002dbc00 	eoreq	fp, sp, r0, lsl #24
    5ea4:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4fac <_Min_Heap_Size+0x47ac>
    5ea8:	2de20000 	stclcs	0, cr0, [r2]
    5eac:	2de00000 	stclcs	0, cr0, [r0]
    5eb0:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5eb4:	f7000045 			; <UNDEFINED> instruction: 0xf7000045
    5eb8:	f500002d 			; <UNDEFINED> instruction: 0xf500002d
    5ebc:	0000002d 	andeq	r0, r0, sp, lsr #32
    5ec0:	00001a00 	andeq	r1, r0, r0, lsl #20
    5ec4:	460f0000 	strmi	r0, [pc], -r0
    5ec8:	00180000 	andseq	r0, r8, r0
    5ecc:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    5ed0:	f300001a 	vqadd.u8	d0, d0, d10
    5ed4:	19000026 	stmdbne	r0, {r1, r2, r5}
    5ed8:	74025001 	strvc	r5, [r2], #-1
    5edc:	00230000 	eoreq	r0, r3, r0
    5ee0:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    5ee4:	1900001a 	stmdbne	r0, {r1, r3, r4}
    5ee8:	74025001 	strvc	r5, [r2], #-1
    5eec:	27000000 	strcs	r0, [r0, -r0]
    5ef0:	00162801 	andseq	r2, r6, r1, lsl #16
    5ef4:	080c0100 	stmdaeq	ip, {r8}
    5ef8:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    5f04:	2e0a0000 	cdpcs	0, 0, cr0, cr10, cr0, {0}
    5f08:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    5f0c:	1600002a 	strne	r0, [r0], -sl, lsr #32
    5f10:	00001778 	andeq	r1, r0, r8, ror r7
    5f14:	39080c01 	stmdbcc	r8, {r0, sl, fp}
    5f18:	00000796 	muleq	r0, r6, r7
    5f1c:	00002e34 	andeq	r2, r0, r4, lsr lr
    5f20:	00002e2a 	andeq	r2, r0, sl, lsr #28
    5f24:	0014f917 	andseq	pc, r4, r7, lsl r9	; <UNPREDICTABLE>
    5f28:	080e0100 	stmdaeq	lr, {r8}
    5f2c:	0000c60c 	andeq	ip, r0, ip, lsl #12
    5f30:	002e8000 	eoreq	r8, lr, r0
    5f34:	002e7600 	eoreq	r7, lr, r0, lsl #12
    5f38:	00001c00 	andeq	r1, r0, r0, lsl #24
    5f3c:	00000000 	andeq	r0, r0, r0
    5f40:	27e60000 	strbcs	r0, [r6, r0]!
    5f44:	761d0000 	ldrvc	r0, [sp], -r0
    5f48:	01006c61 	tsteq	r0, r1, ror #24
    5f4c:	c6030811 			; <UNDEFINED> instruction: 0xc6030811
    5f50:	c4000000 	strgt	r0, [r0], #-0
    5f54:	c200002e 	andgt	r0, r0, #46	; 0x2e
    5f58:	1e00002e 	cdpne	0, 0, cr0, cr0, cr14, {1}
    5f5c:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5f6c:	11010000 	mrsne	r0, (UNDEF: 1)
    5f70:	27a60308 	strcs	r0, [r6, r8, lsl #6]!
    5f74:	901f0000 	andsls	r0, pc, r0
    5f78:	dd000045 	stcle	0, cr0, [r0, #-276]	; 0xfffffeec
    5f7c:	d700002e 	strle	r0, [r0, -lr, lsr #32]
    5f80:	2000002e 	andcs	r0, r0, lr, lsr #32
    5f84:	0000459d 	muleq	r0, sp, r5
    5f88:	00002f0c 	andeq	r2, r0, ip, lsl #30
    5f8c:	00002f0a 	andeq	r2, r0, sl, lsl #30
    5f90:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5f94:	00000000 	andeq	r0, r0, r0
    5f98:	00010000 	andeq	r0, r1, r0
	...
    5fa4:	03081101 	movweq	r1, #33025	; 0x8101
    5fa8:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5fac:	002f2300 	eoreq	r2, pc, r0, lsl #6
    5fb0:	002f1f00 	eoreq	r1, pc, r0, lsl #30
    5fb4:	454f1f00 	strbmi	r1, [pc, #-3840]	; 50bc <_Min_Heap_Size+0x48bc>
    5fb8:	2f450000 	svccs	0x00450000
    5fbc:	2f430000 	svccs	0x00430000
    5fc0:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5fc4:	5a000045 	bpl	60e0 <_Min_Heap_Size+0x58e0>
    5fc8:	5800002f 	stmdapl	r0, {r0, r1, r2, r3, r5}
    5fcc:	0000002f 	andeq	r0, r0, pc, lsr #32
    5fd0:	00001c00 	andeq	r1, r0, r0, lsl #24
    5fd4:	00000000 	andeq	r0, r0, r0
    5fd8:	287e0000 	ldmdacs	lr!, {}^	; <UNPREDICTABLE>
    5fdc:	761d0000 	ldrvc	r0, [sp], -r0
    5fe0:	01006c61 	tsteq	r0, r1, ror #24
    5fe4:	c6030812 			; <UNDEFINED> instruction: 0xc6030812
    5fe8:	6f000000 	svcvs	0x00000000
    5fec:	6d00002f 	stcvs	0, cr0, [r0, #-188]	; 0xffffff44
    5ff0:	1e00002f 	cdpne	0, 0, cr0, cr0, cr15, {1}
    5ff4:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6004:	12010000 	andne	r0, r1, #0
    6008:	283e0308 	ldmdacs	lr!, {r3, r8, r9}
    600c:	901f0000 	andsls	r0, pc, r0
    6010:	88000045 	stmdahi	r0, {r0, r2, r6}
    6014:	8200002f 	andhi	r0, r0, #47	; 0x2f
    6018:	2000002f 	andcs	r0, r0, pc, lsr #32
    601c:	0000459d 	muleq	r0, sp, r5
    6020:	00002fb7 			; <UNDEFINED> instruction: 0x00002fb7
    6024:	00002fb5 			; <UNDEFINED> instruction: 0x00002fb5
    6028:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    602c:	00000000 	andeq	r0, r0, r0
    6030:	00010000 	andeq	r0, r1, r0
	...
    603c:	03081201 	movweq	r1, #33281	; 0x8201
    6040:	00455c1f 	subeq	r5, r5, pc, lsl ip
    6044:	002fce00 	eoreq	ip, pc, r0, lsl #28
    6048:	002fca00 	eoreq	ip, pc, r0, lsl #20
    604c:	454f1f00 	strbmi	r1, [pc, #-3840]	; 5154 <_Min_Heap_Size+0x4954>
    6050:	2ff00000 	svccs	0x00f00000	; IMB
    6054:	2fee0000 	svccs	0x00ee0000
    6058:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    605c:	05000045 	streq	r0, [r0, #-69]	; 0xffffffbb
    6060:	03000030 	movweq	r0, #48	; 0x30
    6064:	00000030 	andeq	r0, r0, r0, lsr r0
    6068:	00001c00 	andeq	r1, r0, r0, lsl #24
    606c:	00000000 	andeq	r0, r0, r0
    6070:	29160000 	ldmdbcs	r6, {}	; <UNPREDICTABLE>
    6074:	761d0000 	ldrvc	r0, [sp], -r0
    6078:	01006c61 	tsteq	r0, r1, ror #24
    607c:	c6050817 			; <UNDEFINED> instruction: 0xc6050817
    6080:	1a000000 	bne	6088 <_Min_Heap_Size+0x5888>
    6084:	18000030 	stmdane	r0, {r4, r5}
    6088:	1e000030 	mcrne	0, 0, r0, cr0, cr0, {1}
    608c:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    609c:	17010000 	strne	r0, [r1, -r0]
    60a0:	28d60508 	ldmcs	r6, {r3, r8, sl}^
    60a4:	901f0000 	andsls	r0, pc, r0
    60a8:	33000045 	movwcc	r0, #69	; 0x45
    60ac:	2d000030 	stccs	0, cr0, [r0, #-192]	; 0xffffff40
    60b0:	20000030 	andcs	r0, r0, r0, lsr r0
    60b4:	0000459d 	muleq	r0, sp, r5
    60b8:	00003062 	andeq	r3, r0, r2, rrx
    60bc:	00003060 	andeq	r3, r0, r0, rrx
    60c0:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    60c4:	00000000 	andeq	r0, r0, r0
    60c8:	00010000 	andeq	r0, r1, r0
	...
    60d4:	05081701 	streq	r1, [r8, #-1793]	; 0xfffff8ff
    60d8:	00455c1f 	subeq	r5, r5, pc, lsl ip
    60dc:	00307900 	eorseq	r7, r0, r0, lsl #18
    60e0:	00307500 	eorseq	r7, r0, r0, lsl #10
    60e4:	454f1f00 	strbmi	r1, [pc, #-3840]	; 51ec <_Min_Heap_Size+0x49ec>
    60e8:	309b0000 	addscc	r0, fp, r0
    60ec:	30990000 	addscc	r0, r9, r0
    60f0:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    60f4:	b0000045 	andlt	r0, r0, r5, asr #32
    60f8:	ae000030 	mcrge	0, 0, r0, cr0, cr0, {1}
    60fc:	00000030 	andeq	r0, r0, r0, lsr r0
    6100:	00001c00 	andeq	r1, r0, r0, lsl #24
    6104:	00000000 	andeq	r0, r0, r0
    6108:	29ae0000 	stmibcs	lr!, {}	; <UNPREDICTABLE>
    610c:	761d0000 	ldrvc	r0, [sp], -r0
    6110:	01006c61 	tsteq	r0, r1, ror #24
    6114:	c605083d 			; <UNDEFINED> instruction: 0xc605083d
    6118:	c7000000 	strgt	r0, [r0, -r0]
    611c:	c3000030 	movwgt	r0, #48	; 0x30
    6120:	1e000030 	mcrne	0, 0, r0, cr0, cr0, {1}
    6124:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6134:	3d010000 	stccc	0, cr0, [r1, #-0]
    6138:	296e0508 	stmdbcs	lr!, {r3, r8, sl}^
    613c:	901f0000 	andsls	r0, pc, r0
    6140:	eb000045 	bl	625c <_Min_Heap_Size+0x5a5c>
    6144:	e5000030 	str	r0, [r0, #-48]	; 0xffffffd0
    6148:	20000030 	andcs	r0, r0, r0, lsr r0
    614c:	0000459d 	muleq	r0, sp, r5
    6150:	0000311a 	andeq	r3, r0, sl, lsl r1
    6154:	00003118 	andeq	r3, r0, r8, lsl r1
    6158:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    615c:	00000000 	andeq	r0, r0, r0
    6160:	00010000 	andeq	r0, r1, r0
	...
    616c:	05083d01 	streq	r3, [r8, #-3329]	; 0xfffff2ff
    6170:	00455c1f 	subeq	r5, r5, pc, lsl ip
    6174:	00313100 	eorseq	r3, r1, r0, lsl #2
    6178:	00312d00 	eorseq	r2, r1, r0, lsl #26
    617c:	454f1f00 	strbmi	r1, [pc, #-3840]	; 5284 <_Min_Heap_Size+0x4a84>
    6180:	31530000 	cmpcc	r3, r0
    6184:	31510000 	cmpcc	r1, r0
    6188:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    618c:	68000045 	stmdavs	r0, {r0, r2, r6}
    6190:	66000031 			; <UNDEFINED> instruction: 0x66000031
    6194:	00000031 	andeq	r0, r0, r1, lsr r0
    6198:	00001c00 	andeq	r1, r0, r0, lsl #24
    619c:	00000000 	andeq	r0, r0, r0
    61a0:	2a460000 	bcs	11861a8 <_Min_Heap_Size+0x11859a8>
    61a4:	761d0000 	ldrvc	r0, [sp], -r0
    61a8:	01006c61 	tsteq	r0, r1, ror #24
    61ac:	c6050854 			; <UNDEFINED> instruction: 0xc6050854
    61b0:	7d000000 	stcvc	0, cr0, [r0, #-0]
    61b4:	7b000031 	blvc	6280 <_Min_Heap_Size+0x5a80>
    61b8:	1e000031 	mcrne	0, 0, r0, cr0, cr1, {1}
    61bc:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    61cc:	54010000 	strpl	r0, [r1], #-0
    61d0:	2a060508 	bcs	1875f8 <_Min_Heap_Size+0x186df8>
    61d4:	901f0000 	andsls	r0, pc, r0
    61d8:	96000045 	strls	r0, [r0], -r5, asr #32
    61dc:	90000031 	andls	r0, r0, r1, lsr r0
    61e0:	20000031 	andcs	r0, r0, r1, lsr r0
    61e4:	0000459d 	muleq	r0, sp, r5
    61e8:	000031c5 	andeq	r3, r0, r5, asr #3
    61ec:	000031c3 	andeq	r3, r0, r3, asr #3
    61f0:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    61f4:	00000000 	andeq	r0, r0, r0
    61f8:	00010000 	andeq	r0, r1, r0
	...
    6204:	05085401 	streq	r5, [r8, #-1025]	; 0xfffffbff
    6208:	00455c1f 	subeq	r5, r5, pc, lsl ip
    620c:	0031dc00 	eorseq	sp, r1, r0, lsl #24
    6210:	0031d800 	eorseq	sp, r1, r0, lsl #16
    6214:	454f1f00 	strbmi	r1, [pc, #-3840]	; 531c <_Min_Heap_Size+0x4b1c>
    6218:	31fe0000 	mvnscc	r0, r0
    621c:	31fc0000 	mvnscc	r0, r0
    6220:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6224:	13000045 	movwne	r0, #69	; 0x45
    6228:	11000032 	tstne	r0, r2, lsr r0
    622c:	00000032 	andeq	r0, r0, r2, lsr r0
    6230:	00001a00 	andeq	r1, r0, r0, lsl #20
    6234:	460f0000 	strmi	r0, [pc], -r0
    6238:	001a0000 	andseq	r0, sl, r0
    623c:	0f000000 	svceq	0x00000000
    6240:	23000046 	movwcs	r0, #70	; 0x46
    6244:	00000000 	andeq	r0, r0, r0
    6248:	00001b1f 	andeq	r1, r0, pc, lsl fp
    624c:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    6250:	00000074 	andeq	r0, r0, r4, ror r0
    6254:	13a10127 			; <UNDEFINED> instruction: 0x13a10127
    6258:	cf010000 	svcgt	0x00010000
    625c:	3a011307 	bcc	4ae80 <_Min_Heap_Size+0x4a680>
    6260:	00000002 	andeq	r0, r0, r2
    6264:	00000000 	andeq	r0, r0, r0
    6268:	26000000 	strcs	r0, [r0], -r0
    626c:	01000032 	tsteq	r0, r2, lsr r0
    6270:	00002d11 	andeq	r2, r0, r1, lsl sp
    6274:	00177816 	andseq	r7, r7, r6, lsl r8
    6278:	07cf0100 	strbeq	r0, [pc, r0, lsl #2]
    627c:	0007963d 	andeq	r9, r7, sp, lsr r6
    6280:	00324e00 	eorseq	r4, r2, r0, lsl #28
    6284:	00324600 	eorseq	r4, r2, r0, lsl #12
    6288:	00001c00 	andeq	r1, r0, r0, lsl #24
    628c:	00000000 	andeq	r0, r0, r0
    6290:	2b360000 	blcs	d86298 <_Min_Heap_Size+0xd85a98>
    6294:	761d0000 	ldrvc	r0, [sp], -r0
    6298:	01006c61 	tsteq	r0, r1, ror #24
    629c:	c60307d2 			; <UNDEFINED> instruction: 0xc60307d2
    62a0:	84000000 	strhi	r0, [r0], #-0
    62a4:	82000032 	andhi	r0, r0, #50	; 0x32
    62a8:	1e000032 	mcrne	0, 0, r0, cr0, cr2, {1}
    62ac:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    62bc:	d2010000 	andle	r0, r1, #0
    62c0:	2af60307 	bcs	ffd86ee4 <_estack+0xdfd85cac>
    62c4:	901f0000 	andsls	r0, pc, r0
    62c8:	9d000045 	stcls	0, cr0, [r0, #-276]	; 0xfffffeec
    62cc:	97000032 	smladxls	r0, r2, r0, r0
    62d0:	20000032 	andcs	r0, r0, r2, lsr r0
    62d4:	0000459d 	muleq	r0, sp, r5
    62d8:	000032cc 	andeq	r3, r0, ip, asr #5
    62dc:	000032ca 	andeq	r3, r0, sl, asr #5
    62e0:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    62e4:	00000000 	andeq	r0, r0, r0
    62e8:	00010000 	andeq	r0, r1, r0
	...
    62f4:	0307d201 	movweq	sp, #29185	; 0x7201
    62f8:	00455c1f 	subeq	r5, r5, pc, lsl ip
    62fc:	0032e300 	eorseq	lr, r2, r0, lsl #6
    6300:	0032df00 	eorseq	sp, r2, r0, lsl #30
    6304:	454f1f00 	strbmi	r1, [pc, #-3840]	; 540c <_Min_Heap_Size+0x4c0c>
    6308:	33050000 	movwcc	r0, #20480	; 0x5000
    630c:	33030000 	movwcc	r0, #12288	; 0x3000
    6310:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6314:	1a000045 	bne	6430 <_Min_Heap_Size+0x5c30>
    6318:	18000033 	stmdane	r0, {r0, r1, r4, r5}
    631c:	00000033 	andeq	r0, r0, r3, lsr r0
    6320:	00001c00 	andeq	r1, r0, r0, lsl #24
    6324:	00000000 	andeq	r0, r0, r0
    6328:	2bce0000 	blcs	ff386330 <_estack+0xdf3850f8>
    632c:	761d0000 	ldrvc	r0, [sp], -r0
    6330:	01006c61 	tsteq	r0, r1, ror #24
    6334:	c60307d3 			; <UNDEFINED> instruction: 0xc60307d3
    6338:	2f000000 	svccs	0x00000000
    633c:	2d000033 	stccs	0, cr0, [r0, #-204]	; 0xffffff34
    6340:	1e000033 	mcrne	0, 0, r0, cr0, cr3, {1}
    6344:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6354:	d3010000 	movwle	r0, #4096	; 0x1000
    6358:	2b8e0307 	blcs	fe386f7c <_estack+0xde385d44>
    635c:	901f0000 	andsls	r0, pc, r0
    6360:	48000045 	stmdami	r0, {r0, r2, r6}
    6364:	42000033 	andmi	r0, r0, #51	; 0x33
    6368:	20000033 	andcs	r0, r0, r3, lsr r0
    636c:	0000459d 	muleq	r0, sp, r5
    6370:	00003377 	andeq	r3, r0, r7, ror r3
    6374:	00003375 	andeq	r3, r0, r5, ror r3
    6378:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    637c:	00000000 	andeq	r0, r0, r0
    6380:	00010000 	andeq	r0, r1, r0
	...
    638c:	0307d301 	movweq	sp, #29441	; 0x7301
    6390:	00455c1f 	subeq	r5, r5, pc, lsl ip
    6394:	00338e00 	eorseq	r8, r3, r0, lsl #28
    6398:	00338a00 	eorseq	r8, r3, r0, lsl #20
    639c:	454f1f00 	strbmi	r1, [pc, #-3840]	; 54a4 <_Min_Heap_Size+0x4ca4>
    63a0:	33b00000 	movscc	r0, #0
    63a4:	33ae0000 			; <UNDEFINED> instruction: 0x33ae0000
    63a8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    63ac:	c5000045 	strgt	r0, [r0, #-69]	; 0xffffffbb
    63b0:	c3000033 	movwgt	r0, #51	; 0x33
    63b4:	00000033 	andeq	r0, r0, r3, lsr r0
    63b8:	00001c00 	andeq	r1, r0, r0, lsl #24
    63bc:	00000000 	andeq	r0, r0, r0
    63c0:	2c660000 	stclcs	0, cr0, [r6], #-0
    63c4:	761d0000 	ldrvc	r0, [sp], -r0
    63c8:	01006c61 	tsteq	r0, r1, ror #24
    63cc:	c60507d8 			; <UNDEFINED> instruction: 0xc60507d8
    63d0:	da000000 	ble	63d8 <_Min_Heap_Size+0x5bd8>
    63d4:	d8000033 	stmdale	r0, {r0, r1, r4, r5}
    63d8:	1e000033 	mcrne	0, 0, r0, cr0, cr3, {1}
    63dc:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    63ec:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    63f0:	2c260507 	cfstr32cs	mvfx0, [r6], #-28	; 0xffffffe4
    63f4:	901f0000 	andsls	r0, pc, r0
    63f8:	f3000045 	vhadd.u8	q0, q0, <illegal reg q2.5>
    63fc:	ed000033 	stc	0, cr0, [r0, #-204]	; 0xffffff34
    6400:	20000033 	andcs	r0, r0, r3, lsr r0
    6404:	0000459d 	muleq	r0, sp, r5
    6408:	00003422 	andeq	r3, r0, r2, lsr #8
    640c:	00003420 	andeq	r3, r0, r0, lsr #8
    6410:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    6414:	00000000 	andeq	r0, r0, r0
    6418:	00010000 	andeq	r0, r1, r0
	...
    6424:	0507d801 	streq	sp, [r7, #-2049]	; 0xfffff7ff
    6428:	00455c1f 	subeq	r5, r5, pc, lsl ip
    642c:	00343900 	eorseq	r3, r4, r0, lsl #18
    6430:	00343500 	eorseq	r3, r4, r0, lsl #10
    6434:	454f1f00 	strbmi	r1, [pc, #-3840]	; 553c <_Min_Heap_Size+0x4d3c>
    6438:	345b0000 	ldrbcc	r0, [fp], #-0
    643c:	34590000 	ldrbcc	r0, [r9], #-0
    6440:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6444:	70000045 	andvc	r0, r0, r5, asr #32
    6448:	6e000034 	mcrvs	0, 0, r0, cr0, cr4, {1}
    644c:	00000034 	andeq	r0, r0, r4, lsr r0
    6450:	00001c00 	andeq	r1, r0, r0, lsl #24
    6454:	00000000 	andeq	r0, r0, r0
    6458:	2cfe0000 	ldclcs	0, cr0, [lr]
    645c:	761d0000 	ldrvc	r0, [sp], -r0
    6460:	01006c61 	tsteq	r0, r1, ror #24
    6464:	c60507de 			; <UNDEFINED> instruction: 0xc60507de
    6468:	85000000 	strhi	r0, [r0, #-0]
    646c:	83000034 	movwhi	r0, #52	; 0x34
    6470:	1e000034 	mcrne	0, 0, r0, cr0, cr4, {1}
    6474:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6484:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    6488:	2cbe0507 	cfldr32cs	mvfx0, [lr], #28
    648c:	901f0000 	andsls	r0, pc, r0
    6490:	9e000045 	cdpls	0, 0, cr0, cr0, cr5, {2}
    6494:	98000034 	stmdals	r0, {r2, r4, r5}
    6498:	20000034 	andcs	r0, r0, r4, lsr r0
    649c:	0000459d 	muleq	r0, sp, r5
    64a0:	000034cd 	andeq	r3, r0, sp, asr #9
    64a4:	000034cb 	andeq	r3, r0, fp, asr #9
    64a8:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    64ac:	00000000 	andeq	r0, r0, r0
    64b0:	00010000 	andeq	r0, r1, r0
	...
    64bc:	0507de01 	streq	sp, [r7, #-3585]	; 0xfffff1ff
    64c0:	00455c1f 	subeq	r5, r5, pc, lsl ip
    64c4:	0034e400 	eorseq	lr, r4, r0, lsl #8
    64c8:	0034e000 	eorseq	lr, r4, r0
    64cc:	454f1f00 	strbmi	r1, [pc, #-3840]	; 55d4 <_Min_Heap_Size+0x4dd4>
    64d0:	35060000 	strcc	r0, [r6, #-0]
    64d4:	35040000 	strcc	r0, [r4, #-0]
    64d8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    64dc:	1b000045 	blne	65f8 <_Min_Heap_Size+0x5df8>
    64e0:	19000035 	stmdbne	r0, {r0, r2, r4, r5}
    64e4:	00000035 	andeq	r0, r0, r5, lsr r0
    64e8:	00001a00 	andeq	r1, r0, r0, lsl #20
    64ec:	46000000 	strmi	r0, [r0], -r0
    64f0:	001a0000 	andseq	r0, sl, r0
    64f4:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    64f8:	00000046 	andeq	r0, r0, r6, asr #32
    64fc:	16e10127 	strbtne	r0, [r1], r7, lsr #2
    6500:	9c010000 	stcls	0, cr0, [r1], {-0}
    6504:	3a011307 	bcc	4b128 <_Min_Heap_Size+0x4a928>
    6508:	00000002 	andeq	r0, r0, r2
    650c:	00000000 	andeq	r0, r0, r0
    6510:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    6514:	01000035 	tsteq	r0, r5, lsr r0
    6518:	00002e89 	andeq	r2, r0, r9, lsl #29
    651c:	00177816 	andseq	r7, r7, r6, lsl r8
    6520:	079c0100 	ldreq	r0, [ip, r0, lsl #2]
    6524:	0007963e 	andeq	r9, r7, lr, lsr r6
    6528:	00355200 	eorseq	r5, r5, r0, lsl #4
    652c:	00354e00 	eorseq	r4, r5, r0, lsl #28
    6530:	00001c00 	andeq	r1, r0, r0, lsl #24
    6534:	00000000 	andeq	r0, r0, r0
    6538:	2dde0000 	ldclcs	0, cr0, [lr]
    653c:	761d0000 	ldrvc	r0, [sp], -r0
    6540:	01006c61 	tsteq	r0, r1, ror #24
    6544:	c603079f 			; <UNDEFINED> instruction: 0xc603079f
    6548:	72000000 	andvc	r0, r0, #0
    654c:	70000035 	andvc	r0, r0, r5, lsr r0
    6550:	1e000035 	mcrne	0, 0, r0, cr0, cr5, {1}
    6554:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6564:	9f010000 	svcls	0x00010000
    6568:	2d9e0307 	ldccs	3, cr0, [lr, #28]
    656c:	901f0000 	andsls	r0, pc, r0
    6570:	8b000045 	blhi	668c <_Min_Heap_Size+0x5e8c>
    6574:	85000035 	strhi	r0, [r0, #-53]	; 0xffffffcb
    6578:	20000035 	andcs	r0, r0, r5, lsr r0
    657c:	0000459d 	muleq	r0, sp, r5
    6580:	000035ba 			; <UNDEFINED> instruction: 0x000035ba
    6584:	000035b8 			; <UNDEFINED> instruction: 0x000035b8
    6588:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    658c:	00000000 	andeq	r0, r0, r0
    6590:	00010000 	andeq	r0, r1, r0
	...
    659c:	03079f01 	movweq	r9, #32513	; 0x7f01
    65a0:	00455c1f 	subeq	r5, r5, pc, lsl ip
    65a4:	0035d100 	eorseq	sp, r5, r0, lsl #2
    65a8:	0035cd00 	eorseq	ip, r5, r0, lsl #26
    65ac:	454f1f00 	strbmi	r1, [pc, #-3840]	; 56b4 <_Min_Heap_Size+0x4eb4>
    65b0:	35f30000 	ldrbcc	r0, [r3, #0]!
    65b4:	35f10000 	ldrbcc	r0, [r1, #0]!
    65b8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    65bc:	08000045 	stmdaeq	r0, {r0, r2, r6}
    65c0:	06000036 			; <UNDEFINED> instruction: 0x06000036
    65c4:	00000036 	andeq	r0, r0, r6, lsr r0
    65c8:	00001c00 	andeq	r1, r0, r0, lsl #24
    65cc:	00000000 	andeq	r0, r0, r0
    65d0:	2e760000 	cdpcs	0, 7, cr0, cr6, cr0, {0}
    65d4:	761d0000 	ldrvc	r0, [sp], -r0
    65d8:	01006c61 	tsteq	r0, r1, ror #24
    65dc:	c60507a4 	strgt	r0, [r5], -r4, lsr #15
    65e0:	1d000000 	stcne	0, cr0, [r0, #-0]
    65e4:	1b000036 	blne	66c4 <_Min_Heap_Size+0x5ec4>
    65e8:	1e000036 	mcrne	0, 0, r0, cr0, cr6, {1}
    65ec:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    65fc:	a4010000 	strge	r0, [r1], #-0
    6600:	2e360507 	cdpcs	5, 3, cr0, cr6, cr7, {0}
    6604:	901f0000 	andsls	r0, pc, r0
    6608:	36000045 	strcc	r0, [r0], -r5, asr #32
    660c:	30000036 	andcc	r0, r0, r6, lsr r0
    6610:	20000036 	andcs	r0, r0, r6, lsr r0
    6614:	0000459d 	muleq	r0, sp, r5
    6618:	00003665 	andeq	r3, r0, r5, ror #12
    661c:	00003663 	andeq	r3, r0, r3, ror #12
    6620:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    6624:	00000000 	andeq	r0, r0, r0
    6628:	00010000 	andeq	r0, r1, r0
	...
    6634:	0507a401 	streq	sl, [r7, #-1025]	; 0xfffffbff
    6638:	00455c1f 	subeq	r5, r5, pc, lsl ip
    663c:	00367c00 	eorseq	r7, r6, r0, lsl #24
    6640:	00367800 	eorseq	r7, r6, r0, lsl #16
    6644:	454f1f00 	strbmi	r1, [pc, #-3840]	; 574c <_Min_Heap_Size+0x4f4c>
    6648:	369e0000 	ldrcc	r0, [lr], r0
    664c:	369c0000 	ldrcc	r0, [ip], r0
    6650:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6654:	b3000045 	movwlt	r0, #69	; 0x45
    6658:	b1000036 	tstlt	r0, r6, lsr r0
    665c:	00000036 	andeq	r0, r0, r6, lsr r0
    6660:	00001a00 	andeq	r1, r0, r0, lsl #20
    6664:	46000000 	strmi	r0, [r0], -r0
    6668:	001a0000 	andseq	r0, sl, r0
    666c:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    6670:	00000046 	andeq	r0, r0, r6, asr #32
    6674:	19750127 	ldmdbne	r5!, {r0, r1, r2, r5, r8}^
    6678:	43010000 	movwmi	r0, #4096	; 0x1000
    667c:	3a011307 	bcc	4b2a0 <_Min_Heap_Size+0x4aaa0>
    6680:	00000002 	andeq	r0, r0, r2
    6684:	00000000 	andeq	r0, r0, r0
    6688:	c6000000 	strgt	r0, [r0], -r0
    668c:	01000036 	tsteq	r0, r6, lsr r0
    6690:	000031db 	ldrdeq	r3, [r0], -fp
    6694:	00177816 	andseq	r7, r7, r6, lsl r8
    6698:	07430100 	strbeq	r0, [r3, -r0, lsl #2]
    669c:	00079636 	andeq	r9, r7, r6, lsr r6
    66a0:	0036ee00 	eorseq	lr, r6, r0, lsl #28
    66a4:	0036e600 	eorseq	lr, r6, r0, lsl #12
    66a8:	00001c00 	andeq	r1, r0, r0, lsl #24
    66ac:	00000000 	andeq	r0, r0, r0
    66b0:	2f560000 	svccs	0x00560000
    66b4:	761d0000 	ldrvc	r0, [sp], -r0
    66b8:	01006c61 	tsteq	r0, r1, ror #24
    66bc:	c6030746 	strgt	r0, [r3], -r6, asr #14
    66c0:	24000000 	strcs	r0, [r0], #-0
    66c4:	22000037 	andcs	r0, r0, #55	; 0x37
    66c8:	1e000037 	mcrne	0, 0, r0, cr0, cr7, {1}
    66cc:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    66dc:	46010000 	strmi	r0, [r1], -r0
    66e0:	2f160307 	svccs	0x00160307
    66e4:	901f0000 	andsls	r0, pc, r0
    66e8:	3d000045 	stccc	0, cr0, [r0, #-276]	; 0xfffffeec
    66ec:	37000037 	smladxcc	r0, r7, r0, r0
    66f0:	20000037 	andcs	r0, r0, r7, lsr r0
    66f4:	0000459d 	muleq	r0, sp, r5
    66f8:	0000376c 	andeq	r3, r0, ip, ror #14
    66fc:	0000376a 	andeq	r3, r0, sl, ror #14
    6700:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    6704:	00000000 	andeq	r0, r0, r0
    6708:	00010000 	andeq	r0, r1, r0
	...
    6714:	03074601 	movweq	r4, #30209	; 0x7601
    6718:	00455c1f 	subeq	r5, r5, pc, lsl ip
    671c:	00378300 	eorseq	r8, r7, r0, lsl #6
    6720:	00377f00 	eorseq	r7, r7, r0, lsl #30
    6724:	454f1f00 	strbmi	r1, [pc, #-3840]	; 582c <_Min_Heap_Size+0x502c>
    6728:	37a50000 	strcc	r0, [r5, r0]!
    672c:	37a30000 	strcc	r0, [r3, r0]!
    6730:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6734:	ba000045 	blt	6850 <_Min_Heap_Size+0x6050>
    6738:	b8000037 	stmdalt	r0, {r0, r1, r2, r4, r5}
    673c:	00000037 	andeq	r0, r0, r7, lsr r0
    6740:	00001c00 	andeq	r1, r0, r0, lsl #24
    6744:	00000000 	andeq	r0, r0, r0
    6748:	2fee0000 	svccs	0x00ee0000
    674c:	761d0000 	ldrvc	r0, [sp], -r0
    6750:	01006c61 	tsteq	r0, r1, ror #24
    6754:	c6030747 	strgt	r0, [r3], -r7, asr #14
    6758:	cf000000 	svcgt	0x00000000
    675c:	cd000037 	stcgt	0, cr0, [r0, #-220]	; 0xffffff24
    6760:	1e000037 	mcrne	0, 0, r0, cr0, cr7, {1}
    6764:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6774:	47010000 	strmi	r0, [r1, -r0]
    6778:	2fae0307 	svccs	0x00ae0307
    677c:	901f0000 	andsls	r0, pc, r0
    6780:	e8000045 	stmda	r0, {r0, r2, r6}
    6784:	e2000037 	and	r0, r0, #55	; 0x37
    6788:	20000037 	andcs	r0, r0, r7, lsr r0
    678c:	0000459d 	muleq	r0, sp, r5
    6790:	00003817 	andeq	r3, r0, r7, lsl r8
    6794:	00003815 	andeq	r3, r0, r5, lsl r8
    6798:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    679c:	00000000 	andeq	r0, r0, r0
    67a0:	00010000 	andeq	r0, r1, r0
	...
    67ac:	03074701 	movweq	r4, #30465	; 0x7701
    67b0:	00455c1f 	subeq	r5, r5, pc, lsl ip
    67b4:	00382e00 	eorseq	r2, r8, r0, lsl #28
    67b8:	00382a00 	eorseq	r2, r8, r0, lsl #20
    67bc:	454f1f00 	strbmi	r1, [pc, #-3840]	; 58c4 <_Min_Heap_Size+0x50c4>
    67c0:	38500000 	ldmdacc	r0, {}^	; <UNPREDICTABLE>
    67c4:	384e0000 	stmdacc	lr, {}^	; <UNPREDICTABLE>
    67c8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    67cc:	65000045 	strvs	r0, [r0, #-69]	; 0xffffffbb
    67d0:	63000038 	movwvs	r0, #56	; 0x38
    67d4:	00000038 	andeq	r0, r0, r8, lsr r0
    67d8:	00001c00 	andeq	r1, r0, r0, lsl #24
    67dc:	00000000 	andeq	r0, r0, r0
    67e0:	30860000 	addcc	r0, r6, r0
    67e4:	761d0000 	ldrvc	r0, [sp], -r0
    67e8:	01006c61 	tsteq	r0, r1, ror #24
    67ec:	c605074c 	strgt	r0, [r5], -ip, asr #14
    67f0:	7a000000 	bvc	67f8 <_Min_Heap_Size+0x5ff8>
    67f4:	78000038 	stmdavc	r0, {r3, r4, r5}
    67f8:	1e000038 	mcrne	0, 0, r0, cr0, cr8, {1}
    67fc:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    680c:	4c010000 	stcmi	0, cr0, [r1], {-0}
    6810:	30460507 	subcc	r0, r6, r7, lsl #10
    6814:	901f0000 	andsls	r0, pc, r0
    6818:	93000045 	movwls	r0, #69	; 0x45
    681c:	8d000038 	stchi	0, cr0, [r0, #-224]	; 0xffffff20
    6820:	20000038 	andcs	r0, r0, r8, lsr r0
    6824:	0000459d 	muleq	r0, sp, r5
    6828:	000038c2 	andeq	r3, r0, r2, asr #17
    682c:	000038c0 	andeq	r3, r0, r0, asr #17
    6830:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    6834:	00000000 	andeq	r0, r0, r0
    6838:	00010000 	andeq	r0, r1, r0
	...
    6844:	05074c01 	streq	r4, [r7, #-3073]	; 0xfffff3ff
    6848:	00455c1f 	subeq	r5, r5, pc, lsl ip
    684c:	0038d900 	eorseq	sp, r8, r0, lsl #18
    6850:	0038d500 	eorseq	sp, r8, r0, lsl #10
    6854:	454f1f00 	strbmi	r1, [pc, #-3840]	; 595c <_Min_Heap_Size+0x515c>
    6858:	38fb0000 	ldmcc	fp!, {}^	; <UNPREDICTABLE>
    685c:	38f90000 	ldmcc	r9!, {}^	; <UNPREDICTABLE>
    6860:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6864:	10000045 	andne	r0, r0, r5, asr #32
    6868:	0e000039 	mcreq	0, 0, r0, cr0, cr9, {1}
    686c:	00000039 	andeq	r0, r0, r9, lsr r0
    6870:	00001c00 	andeq	r1, r0, r0, lsl #24
    6874:	00000000 	andeq	r0, r0, r0
    6878:	311e0000 	tstcc	lr, r0
    687c:	761d0000 	ldrvc	r0, [sp], -r0
    6880:	01006c61 	tsteq	r0, r1, ror #24
    6884:	c6050752 			; <UNDEFINED> instruction: 0xc6050752
    6888:	25000000 	strcs	r0, [r0, #-0]
    688c:	23000039 	movwcs	r0, #57	; 0x39
    6890:	1e000039 	mcrne	0, 0, r0, cr0, cr9, {1}
    6894:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    68a4:	52010000 	andpl	r0, r1, #0
    68a8:	30de0507 	sbcscc	r0, lr, r7, lsl #10
    68ac:	901f0000 	andsls	r0, pc, r0
    68b0:	3e000045 	cdpcc	0, 0, cr0, cr0, cr5, {2}
    68b4:	38000039 	stmdacc	r0, {r0, r3, r4, r5}
    68b8:	20000039 	andcs	r0, r0, r9, lsr r0
    68bc:	0000459d 	muleq	r0, sp, r5
    68c0:	0000396d 	andeq	r3, r0, sp, ror #18
    68c4:	0000396b 	andeq	r3, r0, fp, ror #18
    68c8:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    68cc:	00000000 	andeq	r0, r0, r0
    68d0:	00010000 	andeq	r0, r1, r0
	...
    68dc:	05075201 	streq	r5, [r7, #-513]	; 0xfffffdff
    68e0:	00455c1f 	subeq	r5, r5, pc, lsl ip
    68e4:	00398400 	eorseq	r8, r9, r0, lsl #8
    68e8:	00398000 	eorseq	r8, r9, r0
    68ec:	454f1f00 	strbmi	r1, [pc, #-3840]	; 59f4 <_Min_Heap_Size+0x51f4>
    68f0:	39a60000 	stmibcc	r6!, {}	; <UNPREDICTABLE>
    68f4:	39a40000 	stmibcc	r4!, {}	; <UNPREDICTABLE>
    68f8:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    68fc:	bb000045 	bllt	6a18 <_Min_Heap_Size+0x6218>
    6900:	b9000039 	stmdblt	r0, {r0, r3, r4, r5}
    6904:	00000039 	andeq	r0, r0, r9, lsr r0
    6908:	00001c00 	andeq	r1, r0, r0, lsl #24
    690c:	00000000 	andeq	r0, r0, r0
    6910:	31b60000 			; <UNDEFINED> instruction: 0x31b60000
    6914:	761d0000 	ldrvc	r0, [sp], -r0
    6918:	01006c61 	tsteq	r0, r1, ror #24
    691c:	c605076b 	strgt	r0, [r5], -fp, ror #14
    6920:	d0000000 	andle	r0, r0, r0
    6924:	ce000039 	mcrgt	0, 0, r0, cr0, cr9, {1}
    6928:	1e000039 	mcrne	0, 0, r0, cr0, cr9, {1}
    692c:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    693c:	6b010000 	blvs	46944 <_Min_Heap_Size+0x46144>
    6940:	31760507 	cmncc	r6, r7, lsl #10
    6944:	901f0000 	andsls	r0, pc, r0
    6948:	e9000045 	stmdb	r0, {r0, r2, r6}
    694c:	e3000039 	movw	r0, #57	; 0x39
    6950:	20000039 	andcs	r0, r0, r9, lsr r0
    6954:	0000459d 	muleq	r0, sp, r5
    6958:	00003a18 	andeq	r3, r0, r8, lsl sl
    695c:	00003a16 	andeq	r3, r0, r6, lsl sl
    6960:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    6964:	00000000 	andeq	r0, r0, r0
    6968:	00010000 	andeq	r0, r1, r0
	...
    6974:	05076b01 	streq	r6, [r7, #-2817]	; 0xfffff4ff
    6978:	00455c1f 	subeq	r5, r5, pc, lsl ip
    697c:	003a2f00 	eorseq	r2, sl, r0, lsl #30
    6980:	003a2b00 	eorseq	r2, sl, r0, lsl #22
    6984:	454f1f00 	strbmi	r1, [pc, #-3840]	; 5a8c <_Min_Heap_Size+0x528c>
    6988:	3a510000 	bcc	1446990 <_Min_Heap_Size+0x1446190>
    698c:	3a4f0000 	bcc	13c6994 <_Min_Heap_Size+0x13c6194>
    6990:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6994:	66000045 	strvs	r0, [r0], -r5, asr #32
    6998:	6400003a 	strvs	r0, [r0], #-58	; 0xffffffc6
    699c:	0000003a 	andeq	r0, r0, sl, lsr r0
    69a0:	00001a00 	andeq	r1, r0, r0, lsl #20
    69a4:	46000000 	strmi	r0, [r0], -r0
    69a8:	001a0000 	andseq	r0, sl, r0
    69ac:	00000000 	andeq	r0, r0, r0
    69b0:	1a000046 	bne	6ad0 <_Min_Heap_Size+0x62d0>
    69b4:	00000000 	andeq	r0, r0, r0
    69b8:	0000461e 	andeq	r4, r0, lr, lsl r6
    69bc:	0000001a 	andeq	r0, r0, sl, lsl r0
    69c0:	00461e00 	subeq	r1, r6, r0, lsl #28
    69c4:	01280000 			; <UNDEFINED> instruction: 0x01280000
    69c8:	00001304 	andeq	r1, r0, r4, lsl #6
    69cc:	1d073101 	stfnes	f3, [r7, #-4]
    69d0:	00056701 	andeq	r6, r5, r1, lsl #14
	...
    69dc:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    69e0:	00321001 	eorseq	r1, r2, r1
    69e4:	17781600 	ldrbne	r1, [r8, -r0, lsl #12]!
    69e8:	31010000 	mrscc	r0, (UNDEF: 1)
    69ec:	07964b07 	ldreq	r4, [r6, r7, lsl #22]
    69f0:	3a7d0000 	bcc	1f469f8 <_Min_Heap_Size+0x1f461f8>
    69f4:	3a790000 	bcc	1e469fc <_Min_Heap_Size+0x1e461fc>
    69f8:	27000000 	strcs	r0, [r0, -r0]
    69fc:	00187a01 	andseq	r7, r8, r1, lsl #20
    6a00:	06ed0100 	strbteq	r0, [sp], r0, lsl #2
    6a04:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    6a10:	3a9e0000 	bcc	fe786a18 <_estack+0xde7857e0>
    6a14:	4b010000 	blmi	46a1c <_Min_Heap_Size+0x4621c>
    6a18:	16000033 			; <UNDEFINED> instruction: 0x16000033
    6a1c:	00001778 	andeq	r1, r0, r8, ror r7
    6a20:	4406ed01 	strmi	lr, [r6], #-3329	; 0xfffff2ff
    6a24:	00000796 	muleq	r0, r6, r7
    6a28:	00003b0a 	andeq	r3, r0, sl, lsl #22
    6a2c:	00003afa 	strdeq	r3, [r0], -sl
    6a30:	0013c916 	andseq	ip, r3, r6, lsl r9
    6a34:	06ed0100 	strbteq	r0, [sp], r0, lsl #2
    6a38:	00068254 	andeq	r8, r6, r4, asr r2
    6a3c:	003b7700 	eorseq	r7, fp, r0, lsl #14
    6a40:	003b6d00 	eorseq	r6, fp, r0, lsl #26
    6a44:	098f1600 	stmibeq	pc, {r9, sl, ip}	; <UNPREDICTABLE>
    6a48:	ed010000 	stc	0, cr0, [r1, #-0]
    6a4c:	00b06406 	adcseq	r6, r0, r6, lsl #8
    6a50:	3bc60000 	blcc	ff186a58 <_estack+0xdf185820>
    6a54:	3bbc0000 	blcc	fef06a5c <_estack+0xdef05824>
    6a58:	17170000 	ldrne	r0, [r7, -r0]
    6a5c:	0100001c 	tsteq	r0, ip, lsl r0
    6a60:	3a1506ef 	bcc	548624 <_Min_Heap_Size+0x547e24>
    6a64:	11000002 	tstne	r0, r2
    6a68:	0b00003c 	bleq	6b60 <_Min_Heap_Size+0x6360>
    6a6c:	1c00003c 	stcne	0, cr0, [r0], {60}	; 0x3c
	...
    6a78:	000032a2 	andeq	r3, r0, r2, lsr #5
    6a7c:	0001b622 	andeq	fp, r1, r2, lsr #12
    6a80:	07040100 	streq	r0, [r4, -r0, lsl #2]
    6a84:	0000d209 	andeq	sp, r0, r9, lsl #4
    6a88:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    6a8c:	00001c00 	andeq	r1, r0, r0, lsl #24
    6a90:	00000000 	andeq	r0, r0, r0
    6a94:	333a0000 	teqcc	sl, #0
    6a98:	761d0000 	ldrvc	r0, [sp], -r0
    6a9c:	01006c61 	tsteq	r0, r1, ror #24
    6aa0:	c6090705 	strgt	r0, [r9], -r5, lsl #14
    6aa4:	3d000000 	stccc	0, cr0, [r0, #-0]
    6aa8:	3b00003c 	blcc	6ba0 <_Min_Heap_Size+0x63a0>
    6aac:	1e00003c 	mcrne	0, 0, r0, cr0, cr12, {1}
    6ab0:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6ac0:	05010000 	streq	r0, [r1, #-0]
    6ac4:	32fa0907 	rscscc	r0, sl, #114688	; 0x1c000
    6ac8:	901f0000 	andsls	r0, pc, r0
    6acc:	56000045 	strpl	r0, [r0], -r5, asr #32
    6ad0:	5000003c 	andpl	r0, r0, ip, lsr r0
    6ad4:	2000003c 	andcs	r0, r0, ip, lsr r0
    6ad8:	0000459d 	muleq	r0, sp, r5
    6adc:	00003c85 	andeq	r3, r0, r5, lsl #25
    6ae0:	00003c83 	andeq	r3, r0, r3, lsl #25
    6ae4:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    6ae8:	00000000 	andeq	r0, r0, r0
    6aec:	00010000 	andeq	r0, r1, r0
	...
    6af8:	09070501 	stmdbeq	r7, {r0, r8, sl}
    6afc:	00455c1f 	subeq	r5, r5, pc, lsl ip
    6b00:	003c9c00 	eorseq	r9, ip, r0, lsl #24
    6b04:	003c9800 	eorseq	r9, ip, r0, lsl #16
    6b08:	454f1f00 	strbmi	r1, [pc, #-3840]	; 5c10 <_Min_Heap_Size+0x5410>
    6b0c:	3cbe0000 	ldccc	0, cr0, [lr]
    6b10:	3cbc0000 	ldccc	0, cr0, [ip]
    6b14:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6b18:	d3000045 	movwle	r0, #69	; 0x45
    6b1c:	d100003c 	tstle	r0, ip, lsr r0
    6b20:	0000003c 	andeq	r0, r0, ip, lsr r0
    6b24:	00002300 	andeq	r2, r0, r0, lsl #6
    6b28:	0dad0000 	stceq	0, cr0, [sp]
    6b2c:	01190000 	tsteq	r9, r0
    6b30:	00740250 	rsbseq	r0, r4, r0, asr r2
    6b34:	01270000 			; <UNDEFINED> instruction: 0x01270000
    6b38:	0000170f 	andeq	r1, r0, pc, lsl #14
    6b3c:	1306b101 	movwne	fp, #24833	; 0x6101
    6b40:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    6b4c:	003ce600 	eorseq	lr, ip, r0, lsl #12
    6b50:	34860100 	strcc	r0, [r6], #256	; 0x100
    6b54:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    6b58:	01000017 	tsteq	r0, r7, lsl r0
    6b5c:	964306b1 			; <UNDEFINED> instruction: 0x964306b1
    6b60:	52000007 	andpl	r0, r0, #7
    6b64:	4200003d 	andmi	r0, r0, #61	; 0x3d
    6b68:	1600003d 			; <UNDEFINED> instruction: 0x1600003d
    6b6c:	000013c9 	andeq	r1, r0, r9, asr #7
    6b70:	5306b101 	movwpl	fp, #24833	; 0x6101
    6b74:	00000682 	andeq	r0, r0, r2, lsl #13
    6b78:	00003dbf 			; <UNDEFINED> instruction: 0x00003dbf
    6b7c:	00003db5 			; <UNDEFINED> instruction: 0x00003db5
    6b80:	00098f16 	andeq	r8, r9, r6, lsl pc
    6b84:	06b10100 	ldrteq	r0, [r1], r0, lsl #2
    6b88:	0000b063 	andeq	fp, r0, r3, rrx
    6b8c:	003e0e00 	eorseq	r0, lr, r0, lsl #28
    6b90:	003e0400 	eorseq	r0, lr, r0, lsl #8
    6b94:	1c171700 	ldcne	7, cr1, [r7], {-0}
    6b98:	b3010000 	movwlt	r0, #4096	; 0x1000
    6b9c:	023a1506 	eorseq	r1, sl, #25165824	; 0x1800000
    6ba0:	3e590000 	cdpcc	0, 5, cr0, cr9, cr0, {0}
    6ba4:	3e530000 	cdpcc	0, 5, cr0, cr3, cr0, {0}
    6ba8:	001c0000 	andseq	r0, ip, r0
    6bac:	00000000 	andeq	r0, r0, r0
    6bb0:	dd000000 	stcle	0, cr0, [r0, #-0]
    6bb4:	22000033 	andcs	r0, r0, #51	; 0x33
    6bb8:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    6bbc:	0906c801 	stmdbeq	r6, {r0, fp, lr, pc}
    6bc0:	000000d2 	ldrdeq	r0, [r0], -r2
    6bc4:	00749102 	rsbseq	r9, r4, r2, lsl #2
    6bc8:	0000001c 	andeq	r0, r0, ip, lsl r0
    6bcc:	00000000 	andeq	r0, r0, r0
    6bd0:	00347500 	eorseq	r7, r4, r0, lsl #10
    6bd4:	61761d00 	cmnvs	r6, r0, lsl #26
    6bd8:	c901006c 	stmdbgt	r1, {r2, r3, r5, r6}
    6bdc:	00c60906 	sbceq	r0, r6, r6, lsl #18
    6be0:	3e850000 	cdpcc	0, 8, cr0, cr5, cr0, {0}
    6be4:	3e830000 	cdpcc	0, 8, cr0, cr3, cr0, {0}
    6be8:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6bec:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6bfc:	06c90100 	strbeq	r0, [r9], r0, lsl #2
    6c00:	00343509 	eorseq	r3, r4, r9, lsl #10
    6c04:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6c08:	3e9e0000 	cdpcc	0, 9, cr0, cr14, cr0, {0}
    6c0c:	3e980000 	cdpcc	0, 9, cr0, cr8, cr0, {0}
    6c10:	9d200000 	stcls	0, cr0, [r0, #-0]
    6c14:	cd000045 	stcgt	0, cr0, [r0, #-276]	; 0xfffffeec
    6c18:	cb00003e 	blgt	6d18 <_Min_Heap_Size+0x6518>
    6c1c:	0000003e 	andeq	r0, r0, lr, lsr r0
    6c20:	00453c21 	subeq	r3, r5, r1, lsr #24
    6c24:	00000000 	andeq	r0, r0, r0
    6c28:	00000100 	andeq	r0, r0, r0, lsl #2
    6c2c:	00000000 	andeq	r0, r0, r0
    6c30:	01000000 	mrseq	r0, (UNDEF: 0)
    6c34:	1f0906c9 	svcne	0x000906c9
    6c38:	0000455c 	andeq	r4, r0, ip, asr r5
    6c3c:	00003ee4 	andeq	r3, r0, r4, ror #29
    6c40:	00003ee0 	andeq	r3, r0, r0, ror #29
    6c44:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6c48:	003f0600 	eorseq	r0, pc, r0, lsl #12
    6c4c:	003f0400 	eorseq	r0, pc, r0, lsl #8
    6c50:	45692000 	strbmi	r2, [r9, #-0]!
    6c54:	3f1b0000 	svccc	0x001b0000
    6c58:	3f190000 	svccc	0x00190000
    6c5c:	00000000 	andeq	r0, r0, r0
    6c60:	00000023 	andeq	r0, r0, r3, lsr #32
    6c64:	00101f00 	andseq	r1, r0, r0, lsl #30
    6c68:	50011900 	andpl	r1, r1, r0, lsl #18
    6c6c:	00007402 	andeq	r7, r0, r2, lsl #8
    6c70:	05012700 	streq	r2, [r1, #-1792]	; 0xfffff900
    6c74:	01000019 	tsteq	r0, r9, lsl r0
    6c78:	01130634 	tsteq	r3, r4, lsr r6
    6c7c:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    6c88:	00003f2e 	andeq	r3, r0, lr, lsr #30
    6c8c:	00357f01 	eorseq	r7, r5, r1, lsl #30
    6c90:	17781600 	ldrbne	r1, [r8, -r0, lsl #12]!
    6c94:	34010000 	strcc	r0, [r1], #-0
    6c98:	07964006 	ldreq	r4, [r6, r6]
    6c9c:	3f820000 	svccc	0x00820000
    6ca0:	3f720000 	svccc	0x00720000
    6ca4:	c9160000 	ldmdbgt	r6, {}	; <UNPREDICTABLE>
    6ca8:	01000013 	tsteq	r0, r3, lsl r0
    6cac:	82500634 	subshi	r0, r0, #52, 12	; 0x3400000
    6cb0:	f7000006 			; <UNDEFINED> instruction: 0xf7000006
    6cb4:	e500003f 	str	r0, [r0, #-63]	; 0xffffffc1
    6cb8:	1600003f 			; <UNDEFINED> instruction: 0x1600003f
    6cbc:	0000098f 	andeq	r0, r0, pc, lsl #19
    6cc0:	60063401 	andvs	r3, r6, r1, lsl #8
    6cc4:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    6cc8:	00004075 	andeq	r4, r0, r5, ror r0
    6ccc:	0000406b 	andeq	r4, r0, fp, rrx
    6cd0:	00167b16 	andseq	r7, r6, r6, lsl fp
    6cd4:	06340100 	ldrteq	r0, [r4], -r0, lsl #2
    6cd8:	0008cf70 	andeq	ip, r8, r0, ror pc
    6cdc:	0040be00 	subeq	fp, r0, r0, lsl #28
    6ce0:	0040ba00 	subeq	fp, r0, r0, lsl #20
    6ce4:	16ad1600 	strtne	r1, [sp], r0, lsl #12
    6ce8:	35010000 	strcc	r0, [r1, #-0]
    6cec:	00c63506 	sbceq	r3, r6, r6, lsl #10
    6cf0:	40e00000 	rscmi	r0, r0, r0
    6cf4:	40dc0000 	sbcsmi	r0, ip, r0
    6cf8:	f5170000 			; <UNDEFINED> instruction: 0xf5170000
    6cfc:	01000013 	tsteq	r0, r3, lsl r0
    6d00:	820d0637 	andhi	r0, sp, #57671680	; 0x3700000
    6d04:	04000006 	streq	r0, [r0], #-6
    6d08:	00000041 	andeq	r0, r0, r1, asr #32
    6d0c:	17000041 	strne	r0, [r0, -r1, asr #32]
    6d10:	0000145f 	andeq	r1, r0, pc, asr r4
    6d14:	0d063801 	stceq	8, cr3, [r6, #-4]
    6d18:	000008cf 	andeq	r0, r0, pc, asr #17
    6d1c:	0000412a 	andeq	r4, r0, sl, lsr #2
    6d20:	00004122 	andeq	r4, r0, r2, lsr #2
    6d24:	0017c217 	andseq	ip, r7, r7, lsl r2
    6d28:	06390100 	ldrteq	r0, [r9], -r0, lsl #2
    6d2c:	0000c60c 	andeq	ip, r0, ip, lsl #12
    6d30:	00416400 	subeq	r6, r1, r0, lsl #8
    6d34:	00416000 	subeq	r6, r1, r0
    6d38:	00001c00 	andeq	r1, r0, r0, lsl #24
    6d3c:	00000000 	andeq	r0, r0, r0
    6d40:	356c0000 	strbcc	r0, [ip, #-0]!
    6d44:	b6220000 	strtlt	r0, [r2], -r0
    6d48:	01000001 	tsteq	r0, r1
    6d4c:	d2090664 	andle	r0, r9, #100, 12	; 0x6400000
    6d50:	02000000 	andeq	r0, r0, #0
    6d54:	1a005c91 	bne	1dfa0 <_Min_Heap_Size+0x1d7a0>
    6d58:	00000000 	andeq	r0, r0, r0
    6d5c:	000045f2 	strdeq	r4, [r0], -r2
    6d60:	0000001a 	andeq	r0, r0, sl, lsl r0
    6d64:	0045f200 	subeq	pc, r5, r0, lsl #4
    6d68:	01270000 			; <UNDEFINED> instruction: 0x01270000
    6d6c:	00001747 	andeq	r1, r0, r7, asr #14
    6d70:	1305fd01 	movwne	pc, #23809	; 0x5d01	; <UNPREDICTABLE>
    6d74:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    6d80:	00418200 	subeq	r8, r1, r0, lsl #4
    6d84:	37300100 	ldrcc	r0, [r0, -r0, lsl #2]!
    6d88:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    6d8c:	01000017 	tsteq	r0, r7, lsl r0
    6d90:	963805fd 			; <UNDEFINED> instruction: 0x963805fd
    6d94:	aa000007 	bge	6db8 <_Min_Heap_Size+0x65b8>
    6d98:	a2000041 	andge	r0, r0, #65	; 0x41
    6d9c:	17000041 	strne	r0, [r0, -r1, asr #32]
    6da0:	00001814 	andeq	r1, r0, r4, lsl r8
    6da4:	0c05ff01 	stceq	15, cr15, [r5], {1}
    6da8:	000000c6 	andeq	r0, r0, r6, asr #1
    6dac:	000041e8 	andeq	r4, r0, r8, ror #3
    6db0:	000041de 	ldrdeq	r4, [r0], -lr
    6db4:	0000001c 	andeq	r0, r0, ip, lsl r0
    6db8:	00000000 	andeq	r0, r0, r0
    6dbc:	00366100 	eorseq	r6, r6, r0, lsl #2
    6dc0:	61761d00 	cmnvs	r6, r0, lsl #26
    6dc4:	0a01006c 	beq	46f7c <_Min_Heap_Size+0x4677c>
    6dc8:	00c60506 	sbceq	r0, r6, r6, lsl #10
    6dcc:	424c0000 	submi	r0, ip, #0
    6dd0:	424a0000 	submi	r0, sl, #0
    6dd4:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6dd8:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6de8:	060a0100 	streq	r0, [sl], -r0, lsl #2
    6dec:	00362105 	eorseq	r2, r6, r5, lsl #2
    6df0:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6df4:	42650000 	rsbmi	r0, r5, #0
    6df8:	425f0000 	subsmi	r0, pc, #0
    6dfc:	9d200000 	stcls	0, cr0, [r0, #-0]
    6e00:	94000045 	strls	r0, [r0], #-69	; 0xffffffbb
    6e04:	92000042 	andls	r0, r0, #66	; 0x42
    6e08:	00000042 	andeq	r0, r0, r2, asr #32
    6e0c:	00453c21 	subeq	r3, r5, r1, lsr #24
    6e10:	00000000 	andeq	r0, r0, r0
    6e14:	00000100 	andeq	r0, r0, r0, lsl #2
    6e18:	00000000 	andeq	r0, r0, r0
    6e1c:	01000000 	mrseq	r0, (UNDEF: 0)
    6e20:	1f05060a 	svcne	0x0005060a
    6e24:	0000455c 	andeq	r4, r0, ip, asr r5
    6e28:	000042ab 	andeq	r4, r0, fp, lsr #5
    6e2c:	000042a7 	andeq	r4, r0, r7, lsr #5
    6e30:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6e34:	0042cd00 	subeq	ip, r2, r0, lsl #26
    6e38:	0042cb00 	subeq	ip, r2, r0, lsl #22
    6e3c:	45692000 	strbmi	r2, [r9, #-0]!
    6e40:	42e20000 	rscmi	r0, r2, #0
    6e44:	42e00000 	rscmi	r0, r0, #0
    6e48:	00000000 	andeq	r0, r0, r0
    6e4c:	0000001c 	andeq	r0, r0, ip, lsl r0
    6e50:	00000000 	andeq	r0, r0, r0
    6e54:	0036f900 	eorseq	pc, r6, r0, lsl #18
    6e58:	61761d00 	cmnvs	r6, r0, lsl #26
    6e5c:	1801006c 	stmdane	r1, {r2, r3, r5, r6}
    6e60:	00c60506 	sbceq	r0, r6, r6, lsl #10
    6e64:	42f70000 	rscsmi	r0, r7, #0
    6e68:	42f50000 	rscsmi	r0, r5, #0
    6e6c:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6e70:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6e80:	06180100 	ldreq	r0, [r8], -r0, lsl #2
    6e84:	0036b905 	eorseq	fp, r6, r5, lsl #18
    6e88:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6e8c:	43100000 	tstmi	r0, #0
    6e90:	430a0000 	movwmi	r0, #40960	; 0xa000
    6e94:	9d200000 	stcls	0, cr0, [r0, #-0]
    6e98:	3f000045 	svccc	0x00000045
    6e9c:	3d000043 	stccc	0, cr0, [r0, #-268]	; 0xfffffef4
    6ea0:	00000043 	andeq	r0, r0, r3, asr #32
    6ea4:	00453c21 	subeq	r3, r5, r1, lsr #24
    6ea8:	00000000 	andeq	r0, r0, r0
    6eac:	00000100 	andeq	r0, r0, r0, lsl #2
    6eb0:	00000000 	andeq	r0, r0, r0
    6eb4:	01000000 	mrseq	r0, (UNDEF: 0)
    6eb8:	1f050618 	svcne	0x00050618
    6ebc:	0000455c 	andeq	r4, r0, ip, asr r5
    6ec0:	00004356 	andeq	r4, r0, r6, asr r3
    6ec4:	00004352 	andeq	r4, r0, r2, asr r3
    6ec8:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6ecc:	00437800 	subeq	r7, r3, r0, lsl #16
    6ed0:	00437600 	subeq	r7, r3, r0, lsl #12
    6ed4:	45692000 	strbmi	r2, [r9, #-0]!
    6ed8:	438d0000 	orrmi	r0, sp, #0
    6edc:	438b0000 	orrmi	r0, fp, #0
    6ee0:	00000000 	andeq	r0, r0, r0
    6ee4:	0000001a 	andeq	r0, r0, sl, lsl r0
    6ee8:	00460000 	subeq	r0, r6, r0
    6eec:	00001800 	andeq	r1, r0, r0, lsl #16
    6ef0:	0ce90000 	stcleq	0, cr0, [r9]
    6ef4:	37160000 	ldrcc	r0, [r6, -r0]
    6ef8:	01190000 	tsteq	r9, r0
    6efc:	00740250 	rsbseq	r0, r4, r0, asr r2
    6f00:	00001a00 	andeq	r1, r0, r0, lsl #20
    6f04:	46000000 	strmi	r0, [r0], -r0
    6f08:	00230000 	eoreq	r0, r3, r0
    6f0c:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    6f10:	1900000a 	stmdbne	r0, {r1, r3}
    6f14:	74025001 	strvc	r5, [r2], #-1
    6f18:	27000000 	strcs	r0, [r0, -r0]
    6f1c:	00196201 	andseq	r6, r9, r1, lsl #4
    6f20:	05db0100 	ldrbeq	r0, [fp, #256]	; 0x100
    6f24:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    6f30:	43a00000 	movmi	r0, #0
    6f34:	e0010000 	and	r0, r1, r0
    6f38:	16000039 			; <UNDEFINED> instruction: 0x16000039
    6f3c:	00001778 	andeq	r1, r0, r8, ror r7
    6f40:	3a05db01 	bcc	17db4c <_Min_Heap_Size+0x17d34c>
    6f44:	00000796 	muleq	r0, r6, r7
    6f48:	000043d4 	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    6f4c:	000043cc 	andeq	r4, r0, ip, asr #7
    6f50:	0000001c 	andeq	r0, r0, ip, lsl r0
    6f54:	00000000 	andeq	r0, r0, r0
    6f58:	0037fd00 	eorseq	pc, r7, r0, lsl #26
    6f5c:	61761d00 	cmnvs	r6, r0, lsl #26
    6f60:	e101006c 	tst	r1, ip, rrx
    6f64:	00c60505 	sbceq	r0, r6, r5, lsl #10
    6f68:	44100000 	ldrmi	r0, [r0], #-0
    6f6c:	440e0000 	strmi	r0, [lr], #-0
    6f70:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6f74:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6f84:	05e10100 	strbeq	r0, [r1, #256]!	; 0x100
    6f88:	0037bd05 	eorseq	fp, r7, r5, lsl #26
    6f8c:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6f90:	44290000 	strtmi	r0, [r9], #-0
    6f94:	44230000 	strtmi	r0, [r3], #-0
    6f98:	9d200000 	stcls	0, cr0, [r0, #-0]
    6f9c:	58000045 	stmdapl	r0, {r0, r2, r6}
    6fa0:	56000044 	strpl	r0, [r0], -r4, asr #32
    6fa4:	00000044 	andeq	r0, r0, r4, asr #32
    6fa8:	00453c21 	subeq	r3, r5, r1, lsr #24
    6fac:	00000000 	andeq	r0, r0, r0
    6fb0:	00000100 	andeq	r0, r0, r0, lsl #2
    6fb4:	00000000 	andeq	r0, r0, r0
    6fb8:	01000000 	mrseq	r0, (UNDEF: 0)
    6fbc:	1f0505e1 	svcne	0x000505e1
    6fc0:	0000455c 	andeq	r4, r0, ip, asr r5
    6fc4:	0000446f 	andeq	r4, r0, pc, ror #8
    6fc8:	0000446b 	andeq	r4, r0, fp, ror #8
    6fcc:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6fd0:	00449100 	subeq	r9, r4, r0, lsl #2
    6fd4:	00448f00 	subeq	r8, r4, r0, lsl #30
    6fd8:	45692000 	strbmi	r2, [r9, #-0]!
    6fdc:	44a60000 	strtmi	r0, [r6], #0
    6fe0:	44a40000 	strtmi	r0, [r4], #0
    6fe4:	00000000 	andeq	r0, r0, r0
    6fe8:	0000001c 	andeq	r0, r0, ip, lsl r0
    6fec:	00000000 	andeq	r0, r0, r0
    6ff0:	00381b00 	eorseq	r1, r8, r0, lsl #22
    6ff4:	01b62200 			; <UNDEFINED> instruction: 0x01b62200
    6ff8:	e7010000 	str	r0, [r1, -r0]
    6ffc:	00d20505 	sbcseq	r0, r2, r5, lsl #10
    7000:	91020000 	mrsls	r0, (UNDEF: 2)
    7004:	001c007c 	andseq	r0, ip, ip, ror r0
    7008:	00000000 	andeq	r0, r0, r0
    700c:	b3000000 	movwlt	r0, #0
    7010:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    7014:	006c6176 	rsbeq	r6, ip, r6, ror r1
    7018:	0705ec01 	streq	lr, [r5, -r1, lsl #24]
    701c:	000000c6 	andeq	r0, r0, r6, asr #1
    7020:	000044bb 			; <UNDEFINED> instruction: 0x000044bb
    7024:	000044b9 			; <UNDEFINED> instruction: 0x000044b9
    7028:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    7038:	01000000 	mrseq	r0, (UNDEF: 0)
    703c:	730705ec 	movwvc	r0, #30188	; 0x75ec
    7040:	1f000038 	svcne	0x00000038
    7044:	00004590 	muleq	r0, r0, r5
    7048:	000044d4 	ldrdeq	r4, [r0], -r4	; <UNPREDICTABLE>
    704c:	000044ce 	andeq	r4, r0, lr, asr #9
    7050:	00459d20 	subeq	r9, r5, r0, lsr #26
    7054:	00450300 	subeq	r0, r5, r0, lsl #6
    7058:	00450100 	subeq	r0, r5, r0, lsl #2
    705c:	3c210000 	stccc	0, cr0, [r1], #-0
    7060:	00000045 	andeq	r0, r0, r5, asr #32
    7064:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7070:	05ec0100 	strbeq	r0, [ip, #256]!	; 0x100
    7074:	455c1f07 	ldrbmi	r1, [ip, #-3847]	; 0xfffff0f9
    7078:	451a0000 	ldrmi	r0, [sl, #-0]
    707c:	45160000 	ldrmi	r0, [r6, #-0]
    7080:	4f1f0000 	svcmi	0x001f0000
    7084:	3c000045 	stccc	0, cr0, [r0], {69}	; 0x45
    7088:	3a000045 	bcc	71a4 <_Min_Heap_Size+0x69a4>
    708c:	20000045 	andcs	r0, r0, r5, asr #32
    7090:	00004569 	andeq	r4, r0, r9, ror #10
    7094:	00004551 	andeq	r4, r0, r1, asr r5
    7098:	0000454f 	andeq	r4, r0, pc, asr #10
    709c:	001c0000 	andseq	r0, ip, r0
    70a0:	00000000 	andeq	r0, r0, r0
    70a4:	4b000000 	blmi	70ac <_Min_Heap_Size+0x68ac>
    70a8:	1d000039 	stcne	0, cr0, [r0, #-228]	; 0xffffff1c
    70ac:	006c6176 	rsbeq	r6, ip, r6, ror r1
    70b0:	0505ee01 	streq	lr, [r5, #-3585]	; 0xfffff1ff
    70b4:	000000c6 	andeq	r0, r0, r6, asr #1
    70b8:	00004566 	andeq	r4, r0, r6, ror #10
    70bc:	00004564 	andeq	r4, r0, r4, ror #10
    70c0:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    70d0:	01000000 	mrseq	r0, (UNDEF: 0)
    70d4:	0b0505ee 	bleq	148894 <_Min_Heap_Size+0x148094>
    70d8:	1f000039 	svcne	0x00000039
    70dc:	00004590 	muleq	r0, r0, r5
    70e0:	0000457f 	andeq	r4, r0, pc, ror r5
    70e4:	00004579 	andeq	r4, r0, r9, ror r5
    70e8:	00459d20 	subeq	r9, r5, r0, lsr #26
    70ec:	0045ae00 	subeq	sl, r5, r0, lsl #28
    70f0:	0045ac00 	subeq	sl, r5, r0, lsl #24
    70f4:	3c210000 	stccc	0, cr0, [r1], #-0
    70f8:	00000045 	andeq	r0, r0, r5, asr #32
    70fc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7108:	05ee0100 	strbeq	r0, [lr, #256]!	; 0x100
    710c:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    7110:	45c50000 	strbmi	r0, [r5]
    7114:	45c10000 	strbmi	r0, [r1]
    7118:	4f1f0000 	svcmi	0x001f0000
    711c:	e7000045 	str	r0, [r0, -r5, asr #32]
    7120:	e5000045 	str	r0, [r0, #-69]	; 0xffffffbb
    7124:	20000045 	andcs	r0, r0, r5, asr #32
    7128:	00004569 	andeq	r4, r0, r9, ror #10
    712c:	000045fc 	strdeq	r4, [r0], -ip
    7130:	000045fa 	strdeq	r4, [r0], -sl
    7134:	00260000 	eoreq	r0, r6, r0
    7138:	00000000 	andeq	r0, r0, r0
    713c:	1d000000 	stcne	0, cr0, [r0, #-0]
    7140:	006c6176 	rsbeq	r6, ip, r6, ror r1
    7144:	0505f101 	streq	pc, [r5, #-257]	; 0xfffffeff
    7148:	000000c6 	andeq	r0, r0, r6, asr #1
    714c:	00004611 	andeq	r4, r0, r1, lsl r6
    7150:	0000460f 	andeq	r4, r0, pc, lsl #12
    7154:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    7164:	01000000 	mrseq	r0, (UNDEF: 0)
    7168:	9f0505f1 	svcls	0x000505f1
    716c:	1f000039 	svcne	0x00000039
    7170:	00004590 	muleq	r0, r0, r5
    7174:	0000462a 	andeq	r4, r0, sl, lsr #12
    7178:	00004624 	andeq	r4, r0, r4, lsr #12
    717c:	00459d20 	subeq	r9, r5, r0, lsr #26
    7180:	00465900 	subeq	r5, r6, r0, lsl #18
    7184:	00465700 	subeq	r5, r6, r0, lsl #14
    7188:	3c210000 	stccc	0, cr0, [r1], #-0
    718c:	00000045 	andeq	r0, r0, r5, asr #32
    7190:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    719c:	05f10100 	ldrbeq	r0, [r1, #256]!	; 0x100
    71a0:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    71a4:	46700000 	ldrbtmi	r0, [r0], -r0
    71a8:	466c0000 	strbtmi	r0, [ip], -r0
    71ac:	4f1f0000 	svcmi	0x001f0000
    71b0:	92000045 	andls	r0, r0, #69	; 0x45
    71b4:	90000046 	andls	r0, r0, r6, asr #32
    71b8:	20000046 	andcs	r0, r0, r6, asr #32
    71bc:	00004569 	andeq	r4, r0, r9, ror #10
    71c0:	000046a7 	andeq	r4, r0, r7, lsr #13
    71c4:	000046a5 	andeq	r4, r0, r5, lsr #13
    71c8:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    71cc:	00131e01 	andseq	r1, r3, r1, lsl #28
    71d0:	05bc0100 	ldreq	r0, [ip, #256]!	; 0x100
    71d4:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    71e0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    71e4:	3c860100 	stfccs	f0, [r6], {0}
    71e8:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    71ec:	01000017 	tsteq	r0, r7, lsl r0
    71f0:	963905bc 			; <UNDEFINED> instruction: 0x963905bc
    71f4:	c0000007 	andgt	r0, r0, r7
    71f8:	ba000046 	blt	7318 <_Min_Heap_Size+0x6b18>
    71fc:	17000046 	strne	r0, [r0, -r6, asr #32]
    7200:	00001814 	andeq	r1, r0, r4, lsl r8
    7204:	0c05be01 	stceq	14, cr11, [r5], {1}
    7208:	000000c6 	andeq	r0, r0, r6, asr #1
    720c:	000046f6 	strdeq	r4, [r0], -r6
    7210:	000046ec 	andeq	r4, r0, ip, ror #13
    7214:	0000001c 	andeq	r0, r0, ip, lsl r0
    7218:	00000000 	andeq	r0, r0, r0
    721c:	003ac100 	eorseq	ip, sl, r0, lsl #2
    7220:	61761d00 	cmnvs	r6, r0, lsl #26
    7224:	c401006c 	strgt	r0, [r1], #-108	; 0xffffff94
    7228:	00c60505 	sbceq	r0, r6, r5, lsl #10
    722c:	47540000 	ldrbmi	r0, [r4, -r0]
    7230:	47520000 	ldrbmi	r0, [r2, -r0]
    7234:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    7238:	00000045 	andeq	r0, r0, r5, asr #32
	...
    7248:	05c40100 	strbeq	r0, [r4, #256]	; 0x100
    724c:	003a8105 	eorseq	r8, sl, r5, lsl #2
    7250:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    7254:	476d0000 	strbmi	r0, [sp, -r0]!
    7258:	47670000 	strbmi	r0, [r7, -r0]!
    725c:	9d200000 	stcls	0, cr0, [r0, #-0]
    7260:	9c000045 	stcls	0, cr0, [r0], {69}	; 0x45
    7264:	9a000047 	bls	7388 <_Min_Heap_Size+0x6b88>
    7268:	00000047 	andeq	r0, r0, r7, asr #32
    726c:	00453c21 	subeq	r3, r5, r1, lsr #24
    7270:	00000000 	andeq	r0, r0, r0
    7274:	00000100 	andeq	r0, r0, r0, lsl #2
    7278:	00000000 	andeq	r0, r0, r0
    727c:	01000000 	mrseq	r0, (UNDEF: 0)
    7280:	1f0505c4 	svcne	0x000505c4
    7284:	0000455c 	andeq	r4, r0, ip, asr r5
    7288:	000047b3 			; <UNDEFINED> instruction: 0x000047b3
    728c:	000047af 	andeq	r4, r0, pc, lsr #15
    7290:	00454f1f 	subeq	r4, r5, pc, lsl pc
    7294:	0047d500 	subeq	sp, r7, r0, lsl #10
    7298:	0047d300 	subeq	sp, r7, r0, lsl #6
    729c:	45692000 	strbmi	r2, [r9, #-0]!
    72a0:	47ea0000 	strbmi	r0, [sl, r0]!
    72a4:	47e80000 	strbmi	r0, [r8, r0]!
    72a8:	00000000 	andeq	r0, r0, r0
    72ac:	0000001c 	andeq	r0, r0, ip, lsl r0
    72b0:	00000000 	andeq	r0, r0, r0
    72b4:	003b5900 	eorseq	r5, fp, r0, lsl #18
    72b8:	61761d00 	cmnvs	r6, r0, lsl #26
    72bc:	cb01006c 	blgt	47474 <_Min_Heap_Size+0x46c74>
    72c0:	00c60505 	sbceq	r0, r6, r5, lsl #10
    72c4:	47ff0000 	ldrbmi	r0, [pc, r0]!
    72c8:	47fd0000 	ldrbmi	r0, [sp, r0]!
    72cc:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    72d0:	00000045 	andeq	r0, r0, r5, asr #32
	...
    72e0:	05cb0100 	strbeq	r0, [fp, #256]	; 0x100
    72e4:	003b1905 	eorseq	r1, fp, r5, lsl #18
    72e8:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    72ec:	48180000 	ldmdami	r8, {}	; <UNPREDICTABLE>
    72f0:	48120000 	ldmdami	r2, {}	; <UNPREDICTABLE>
    72f4:	9d200000 	stcls	0, cr0, [r0, #-0]
    72f8:	47000045 	strmi	r0, [r0, -r5, asr #32]
    72fc:	45000048 	strmi	r0, [r0, #-72]	; 0xffffffb8
    7300:	00000048 	andeq	r0, r0, r8, asr #32
    7304:	00453c21 	subeq	r3, r5, r1, lsr #24
    7308:	00000000 	andeq	r0, r0, r0
    730c:	00000100 	andeq	r0, r0, r0, lsl #2
    7310:	00000000 	andeq	r0, r0, r0
    7314:	01000000 	mrseq	r0, (UNDEF: 0)
    7318:	1f0505cb 	svcne	0x000505cb
    731c:	0000455c 	andeq	r4, r0, ip, asr r5
    7320:	0000485e 	andeq	r4, r0, lr, asr r8
    7324:	0000485a 	andeq	r4, r0, sl, asr r8
    7328:	00454f1f 	subeq	r4, r5, pc, lsl pc
    732c:	00488000 	subeq	r8, r8, r0
    7330:	00487e00 	subeq	r7, r8, r0, lsl #28
    7334:	45692000 	strbmi	r2, [r9, #-0]!
    7338:	48950000 	ldmmi	r5, {}	; <UNPREDICTABLE>
    733c:	48930000 	ldmmi	r3, {}	; <UNPREDICTABLE>
    7340:	00000000 	andeq	r0, r0, r0
    7344:	0000001c 	andeq	r0, r0, ip, lsl r0
    7348:	00000000 	andeq	r0, r0, r0
    734c:	003bf100 	eorseq	pc, fp, r0, lsl #2
    7350:	61761d00 	cmnvs	r6, r0, lsl #26
    7354:	cc01006c 	stcgt	0, cr0, [r1], {108}	; 0x6c
    7358:	00c60505 	sbceq	r0, r6, r5, lsl #10
    735c:	48aa0000 	stmiami	sl!, {}	; <UNPREDICTABLE>
    7360:	48a80000 	stmiami	r8!, {}	; <UNPREDICTABLE>
    7364:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    7368:	00000045 	andeq	r0, r0, r5, asr #32
	...
    7378:	05cc0100 	strbeq	r0, [ip, #256]	; 0x100
    737c:	003bb105 	eorseq	fp, fp, r5, lsl #2
    7380:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    7384:	48c30000 	stmiami	r3, {}^	; <UNPREDICTABLE>
    7388:	48bd0000 	popmi	{}	; <UNPREDICTABLE>
    738c:	9d200000 	stcls	0, cr0, [r0, #-0]
    7390:	f2000045 	vhadd.s8	q0, q0, <illegal reg q2.5>
    7394:	f0000048 			; <UNDEFINED> instruction: 0xf0000048
    7398:	00000048 	andeq	r0, r0, r8, asr #32
    739c:	00453c21 	subeq	r3, r5, r1, lsr #24
    73a0:	00000000 	andeq	r0, r0, r0
    73a4:	00000100 	andeq	r0, r0, r0, lsl #2
    73a8:	00000000 	andeq	r0, r0, r0
    73ac:	01000000 	mrseq	r0, (UNDEF: 0)
    73b0:	1f0505cc 	svcne	0x000505cc
    73b4:	0000455c 	andeq	r4, r0, ip, asr r5
    73b8:	00004909 	andeq	r4, r0, r9, lsl #18
    73bc:	00004905 	andeq	r4, r0, r5, lsl #18
    73c0:	00454f1f 	subeq	r4, r5, pc, lsl pc
    73c4:	00492b00 	subeq	r2, r9, r0, lsl #22
    73c8:	00492900 	subeq	r2, r9, r0, lsl #18
    73cc:	45692000 	strbmi	r2, [r9, #-0]!
    73d0:	49400000 	stmdbmi	r0, {}^	; <UNPREDICTABLE>
    73d4:	493e0000 	ldmdbmi	lr!, {}	; <UNPREDICTABLE>
    73d8:	00000000 	andeq	r0, r0, r0
    73dc:	00000026 	andeq	r0, r0, r6, lsr #32
    73e0:	00000000 	andeq	r0, r0, r0
    73e4:	61761d00 	cmnvs	r6, r0, lsl #26
    73e8:	cf01006c 	svcgt	0x0001006c
    73ec:	00c60505 	sbceq	r0, r6, r5, lsl #10
    73f0:	49550000 	ldmdbmi	r5, {}^	; <UNPREDICTABLE>
    73f4:	49530000 	ldmdbmi	r3, {}^	; <UNPREDICTABLE>
    73f8:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    73fc:	00000045 	andeq	r0, r0, r5, asr #32
	...
    740c:	05cf0100 	strbeq	r0, [pc, #256]	; 7514 <_Min_Heap_Size+0x6d14>
    7410:	003c4505 	eorseq	r4, ip, r5, lsl #10
    7414:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    7418:	496e0000 	stmdbmi	lr!, {}^	; <UNPREDICTABLE>
    741c:	49680000 	stmdbmi	r8!, {}^	; <UNPREDICTABLE>
    7420:	9d200000 	stcls	0, cr0, [r0, #-0]
    7424:	9d000045 	stcls	0, cr0, [r0, #-276]	; 0xfffffeec
    7428:	9b000049 	blls	7554 <_Min_Heap_Size+0x6d54>
    742c:	00000049 	andeq	r0, r0, r9, asr #32
    7430:	00453c21 	subeq	r3, r5, r1, lsr #24
    7434:	00000000 	andeq	r0, r0, r0
    7438:	00000100 	andeq	r0, r0, r0, lsl #2
    743c:	00000000 	andeq	r0, r0, r0
    7440:	01000000 	mrseq	r0, (UNDEF: 0)
    7444:	1f0505cf 	svcne	0x000505cf
    7448:	0000455c 	andeq	r4, r0, ip, asr r5
    744c:	000049b4 			; <UNDEFINED> instruction: 0x000049b4
    7450:	000049b0 			; <UNDEFINED> instruction: 0x000049b0
    7454:	00454f1f 	subeq	r4, r5, pc, lsl pc
    7458:	0049d600 	subeq	sp, r9, r0, lsl #12
    745c:	0049d400 	subeq	sp, r9, r0, lsl #8
    7460:	45692000 	strbmi	r2, [r9, #-0]!
    7464:	49eb0000 	stmibmi	fp!, {}^	; <UNPREDICTABLE>
    7468:	49e90000 	stmibmi	r9!, {}^	; <UNPREDICTABLE>
    746c:	00000000 	andeq	r0, r0, r0
    7470:	4d012700 	stcmi	7, cr2, [r1, #-0]
    7474:	01000016 	tsteq	r0, r6, lsl r0
    7478:	011305a1 	tsteq	r3, r1, lsr #11
    747c:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    7488:	000049fe 	strdeq	r4, [r0], -lr
    748c:	003cf701 	eorseq	pc, ip, r1, lsl #14
    7490:	17781600 	ldrbne	r1, [r8, -r0, lsl #12]!
    7494:	a1010000 	mrsge	r0, (UNDEF: 1)
    7498:	07963c05 	ldreq	r3, [r6, r5, lsl #24]
    749c:	4a2e0000 	bmi	b874a4 <_Min_Heap_Size+0xb86ca4>
    74a0:	4a1e0000 	bmi	7874a8 <_Min_Heap_Size+0x786ca8>
    74a4:	c9160000 	ldmdbgt	r6, {}	; <UNPREDICTABLE>
    74a8:	01000013 	tsteq	r0, r3, lsl r0
    74ac:	824c05a1 	subhi	r0, ip, #675282944	; 0x28400000
    74b0:	a4000006 	strge	r0, [r0], #-6
    74b4:	9a00004a 	bls	75e4 <_Min_Heap_Size+0x6de4>
    74b8:	1600004a 	strne	r0, [r0], -sl, asr #32
    74bc:	0000098f 	andeq	r0, r0, pc, lsl #19
    74c0:	5c05a101 	stfpld	f2, [r5], {1}
    74c4:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    74c8:	00004af3 	strdeq	r4, [r0], -r3
    74cc:	00004ae9 	andeq	r4, r0, r9, ror #21
    74d0:	00000023 	andeq	r0, r0, r3, lsr #32
    74d4:	000dad00 	andeq	sl, sp, r0, lsl #26
    74d8:	50011900 	andpl	r1, r1, r0, lsl #18
    74dc:	5001f303 	andpl	pc, r1, r3, lsl #6
    74e0:	01270000 			; <UNDEFINED> instruction: 0x01270000
    74e4:	000018ef 	andeq	r1, r0, pc, ror #17
    74e8:	13056301 	movwne	r6, #21249	; 0x5301
    74ec:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    74f8:	004b3800 	subeq	r3, fp, r0, lsl #16
    74fc:	3e110100 	mufccs	f0, f1, f0
    7500:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    7504:	01000017 	tsteq	r0, r7, lsl r0
    7508:	963d0563 	ldrtls	r0, [sp], -r3, ror #10
    750c:	68000007 	stmdavs	r0, {r0, r1, r2}
    7510:	5800004b 	stmdapl	r0, {r0, r1, r3, r6}
    7514:	1600004b 	strne	r0, [r0], -fp, asr #32
    7518:	000013c9 	andeq	r1, r0, r9, asr #7
    751c:	53056301 	movwpl	r6, #21249	; 0x5301
    7520:	0000067c 	andeq	r0, r0, ip, ror r6
    7524:	00004bd8 	ldrdeq	r4, [r0], -r8
    7528:	00004bce 	andeq	r4, r0, lr, asr #23
    752c:	00098f16 	andeq	r8, r9, r6, lsl pc
    7530:	05630100 	strbeq	r0, [r3, #-256]!	; 0xffffff00
    7534:	0000b063 	andeq	fp, r0, r3, rrx
    7538:	004c2700 	subeq	r2, ip, r0, lsl #14
    753c:	004c1d00 	subeq	r1, ip, r0, lsl #26
    7540:	6d741d00 	ldclvs	13, cr1, [r4, #-0]
    7544:	65010070 	strvs	r0, [r1, #-112]	; 0xffffff90
    7548:	3e111305 	cdpcc	3, 1, cr1, cr1, cr5, {0}
    754c:	4c6e0000 	stclmi	0, cr0, [lr], #-0
    7550:	4c6c0000 	stclmi	0, cr0, [ip], #-0
    7554:	b02d0000 	eorlt	r0, sp, r0
    7558:	ff000001 			; <UNDEFINED> instruction: 0xff000001
    755c:	1d00003d 	stcne	0, cr0, [r0, #-244]	; 0xffffff0c
    7560:	006c6176 	rsbeq	r6, ip, r6, ror r1
    7564:	05058b01 	streq	r8, [r5, #-2817]	; 0xfffff4ff
    7568:	000000c6 	andeq	r0, r0, r6, asr #1
    756c:	00004c88 	andeq	r4, r0, r8, lsl #25
    7570:	00004c86 	andeq	r4, r0, r6, lsl #25
    7574:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    7584:	01000000 	mrseq	r0, (UNDEF: 0)
    7588:	bf05058b 	svclt	0x0005058b
    758c:	1f00003d 	svcne	0x0000003d
    7590:	00004590 	muleq	r0, r0, r5
    7594:	00004ca1 	andeq	r4, r0, r1, lsr #25
    7598:	00004c9b 	muleq	r0, fp, ip
    759c:	00459d20 	subeq	r9, r5, r0, lsr #26
    75a0:	004cd000 	subeq	sp, ip, r0
    75a4:	004cce00 	subeq	ip, ip, r0, lsl #28
    75a8:	3c210000 	stccc	0, cr0, [r1], #-0
    75ac:	00000045 	andeq	r0, r0, r5, asr #32
    75b0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    75bc:	058b0100 	streq	r0, [fp, #256]	; 0x100
    75c0:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    75c4:	4ce70000 	stclmi	0, cr0, [r7]
    75c8:	4ce30000 	stclmi	0, cr0, [r3]
    75cc:	4f1f0000 	svcmi	0x001f0000
    75d0:	09000045 	stmdbeq	r0, {r0, r2, r6}
    75d4:	0700004d 	streq	r0, [r0, -sp, asr #32]
    75d8:	2000004d 	andcs	r0, r0, sp, asr #32
    75dc:	00004569 	andeq	r4, r0, r9, ror #10
    75e0:	00004d1e 	andeq	r4, r0, lr, lsl sp
    75e4:	00004d1c 	andeq	r4, r0, ip, lsl sp
    75e8:	00230000 	eoreq	r0, r3, r0
    75ec:	e3000000 	movw	r0, #0
    75f0:	19000045 	stmdbne	r0, {r0, r2, r6}
    75f4:	f3035101 	vrhadd.u8	d5, d3, d1
    75f8:	00005101 	andeq	r5, r0, r1, lsl #2
    75fc:	00d70411 	sbcseq	r0, r7, r1, lsl r4
    7600:	01270000 			; <UNDEFINED> instruction: 0x01270000
    7604:	00001984 	andeq	r1, r0, r4, lsl #19
    7608:	13054301 	movwne	r4, #21249	; 0x5301
    760c:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    7618:	004d3100 	subeq	r3, sp, r0, lsl #2
    761c:	3e880100 	rmfcce	f0, f0, f0
    7620:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    7624:	01000017 	tsteq	r0, r7, lsl r0
    7628:	963b0543 	ldrtls	r0, [fp], -r3, asr #10
    762c:	61000007 	tstvs	r0, r7
    7630:	5100004d 	tstpl	r0, sp, asr #32
    7634:	1600004d 	strne	r0, [r0], -sp, asr #32
    7638:	000013c9 	andeq	r1, r0, r9, asr #7
    763c:	4b054301 	blmi	158248 <_Min_Heap_Size+0x157a48>
    7640:	00000682 	andeq	r0, r0, r2, lsl #13
    7644:	00004dd7 	ldrdeq	r4, [r0], -r7
    7648:	00004dcd 	andeq	r4, r0, sp, asr #27
    764c:	00098f16 	andeq	r8, r9, r6, lsl pc
    7650:	05430100 	strbeq	r0, [r3, #-256]	; 0xffffff00
    7654:	0000b05b 	andeq	fp, r0, fp, asr r0
    7658:	004e2600 	subeq	r2, lr, r0, lsl #12
    765c:	004e1c00 	subeq	r1, lr, r0, lsl #24
    7660:	00002300 	andeq	r2, r0, r0, lsl #6
    7664:	101f0000 	andsne	r0, pc, r0
    7668:	01190000 	tsteq	r9, r0
    766c:	01f30350 	mvnseq	r0, r0, asr r3
    7670:	28000050 	stmdacs	r0, {r4, r6}
    7674:	00183001 	andseq	r3, r8, r1
    7678:	051c0100 	ldreq	r0, [ip, #-256]	; 0xffffff00
    767c:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    7688:	7d020000 	stcvc	0, cr0, [r2, #-0]
    768c:	3ee70100 	cdpcc	1, 14, cr0, cr7, cr0, {0}
    7690:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    7694:	01000017 	tsteq	r0, r7, lsl r0
    7698:	963c051c 			; <UNDEFINED> instruction: 0x963c051c
    769c:	7b000007 	blvc	76c0 <_Min_Heap_Size+0x6ec0>
    76a0:	6b00004e 	blvs	77e0 <_Min_Heap_Size+0x6fe0>
    76a4:	1600004e 	strne	r0, [r0], -lr, asr #32
    76a8:	000013c9 	andeq	r1, r0, r9, asr #7
    76ac:	52051c01 	andpl	r1, r5, #256	; 0x100
    76b0:	0000067c 	andeq	r0, r0, ip, ror r6
    76b4:	00004eef 	andeq	r4, r0, pc, ror #29
    76b8:	00004ee7 	andeq	r4, r0, r7, ror #29
    76bc:	00098f16 	andeq	r8, r9, r6, lsl pc
    76c0:	051c0100 	ldreq	r0, [ip, #-256]	; 0xffffff00
    76c4:	0000b062 	andeq	fp, r0, r2, rrx
    76c8:	004f2f00 	subeq	r2, pc, r0, lsl #30
    76cc:	004f2700 	subeq	r2, pc, r0, lsl #14
    76d0:	01270000 			; <UNDEFINED> instruction: 0x01270000
    76d4:	0000181f 	andeq	r1, r0, pc, lsl r8
    76d8:	1304c501 	movwne	ip, #17665	; 0x4501
    76dc:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    76e8:	004f6700 	subeq	r6, pc, r0, lsl #14
    76ec:	3fcc0100 	svccc	0x00cc0100
    76f0:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    76f4:	01000017 	tsteq	r0, r7, lsl r0
    76f8:	963804c5 	ldrtls	r0, [r8], -r5, asr #9
    76fc:	bb000007 	bllt	7720 <_Min_Heap_Size+0x6f20>
    7700:	ab00004f 	blge	7844 <_Min_Heap_Size+0x7044>
    7704:	1600004f 	strne	r0, [r0], -pc, asr #32
    7708:	000013c9 	andeq	r1, r0, r9, asr #7
    770c:	4804c501 	stmdami	r4, {r0, r8, sl, lr, pc}
    7710:	00000682 	andeq	r0, r0, r2, lsl #13
    7714:	0000502c 	andeq	r5, r0, ip, lsr #32
    7718:	0000501e 	andeq	r5, r0, lr, lsl r0
    771c:	00098f16 	andeq	r8, r9, r6, lsl pc
    7720:	04c50100 	strbeq	r0, [r5], #256	; 0x100
    7724:	0000b058 	andeq	fp, r0, r8, asr r0
    7728:	00509100 	subseq	r9, r0, r0, lsl #2
    772c:	00508700 	subseq	r8, r0, r0, lsl #14
    7730:	16ad1600 	strtne	r1, [sp], r0, lsl #12
    7734:	c5010000 	strgt	r0, [r1, #-0]
    7738:	00c66704 	sbceq	r6, r6, r4, lsl #14
    773c:	50da0000 	sbcspl	r0, sl, r0
    7740:	50d60000 	sbcspl	r0, r6, r0
    7744:	f5170000 			; <UNDEFINED> instruction: 0xf5170000
    7748:	01000013 	tsteq	r0, r3, lsl r0
    774c:	820d04c7 	andhi	r0, sp, #-956301312	; 0xc7000000
    7750:	fa000006 	blx	7770 <_Min_Heap_Size+0x6f70>
    7754:	f8000050 			; <UNDEFINED> instruction: 0xf8000050
    7758:	17000050 	smlsdne	r0, r0, r0, r0
    775c:	0000145f 	andeq	r1, r0, pc, asr r4
    7760:	0d04c801 	stceq	8, cr12, [r4, #-4]
    7764:	000008cf 	andeq	r0, r0, pc, asr #17
    7768:	00005113 	andeq	r5, r0, r3, lsl r1
    776c:	0000510d 	andeq	r5, r0, sp, lsl #2
    7770:	0017c217 	andseq	ip, r7, r7, lsl r2
    7774:	04c90100 	strbeq	r0, [r9], #256	; 0x100
    7778:	0000c60c 	andeq	ip, r0, ip, lsl #12
    777c:	00514800 	subseq	r4, r1, r0, lsl #16
    7780:	00513e00 	subseq	r3, r1, r0, lsl #28
    7784:	00001a00 	andeq	r1, r0, r0, lsl #20
    7788:	45f20000 	ldrbmi	r0, [r2, #0]!
    778c:	00230000 	eoreq	r0, r3, r0
    7790:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    7794:	19000010 	stmdbne	r0, {r4}
    7798:	74025001 	strvc	r5, [r2], #-1
    779c:	51011900 	tstpl	r1, r0, lsl #18
    77a0:	19200802 	stmdbne	r0!, {r1, fp}
    77a4:	30015201 	andcc	r5, r1, r1, lsl #4
    77a8:	02530119 	subseq	r0, r3, #1073741830	; 0x40000006
    77ac:	02190077 	andseq	r0, r9, #119	; 0x77
    77b0:	7602007d 			; <UNDEFINED> instruction: 0x7602007d
    77b4:	27000000 	strcs	r0, [r0, -r0]
    77b8:	00011901 	andeq	r1, r1, r1, lsl #18
    77bc:	046f0100 	strbteq	r0, [pc], #-256	; 77c4 <_Min_Heap_Size+0x6fc4>
    77c0:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
    77c4:	0d480000 	stcleq	0, cr0, [r8, #-0]
    77c8:	0e140800 	cdpeq	8, 1, cr0, cr4, cr0, {0}
    77cc:	518a0800 	orrpl	r0, sl, r0, lsl #16
    77d0:	dd010000 	stcle	0, cr0, [r1, #-0]
    77d4:	16000040 	strne	r0, [r0], -r0, asr #32
    77d8:	00001778 	andeq	r1, r0, r8, ror r7
    77dc:	39046f01 	stmdbcc	r4, {r0, r8, r9, sl, fp, sp, lr}
    77e0:	00000796 	muleq	r0, r6, r7
    77e4:	000051de 	ldrdeq	r5, [r0], -lr
    77e8:	000051ce 	andeq	r5, r0, lr, asr #3
    77ec:	0013c916 	andseq	ip, r3, r6, lsl r9
    77f0:	046f0100 	strbteq	r0, [pc], #-256	; 77f8 <_Min_Heap_Size+0x6ff8>
    77f4:	00067c4f 	andeq	r7, r6, pc, asr #24
    77f8:	00525300 	subseq	r5, r2, r0, lsl #6
    77fc:	00524100 	subseq	r4, r2, r0, lsl #2
    7800:	098f1600 	stmibeq	pc, {r9, sl, ip}	; <UNPREDICTABLE>
    7804:	6f010000 	svcvs	0x00010000
    7808:	00b05f04 	adcseq	r5, r0, r4, lsl #30
    780c:	52d10000 	sbcspl	r0, r1, #0
    7810:	52c70000 	sbcpl	r0, r7, #0
    7814:	ad160000 	ldcge	0, cr0, [r6, #-0]
    7818:	01000016 	tsteq	r0, r6, lsl r0
    781c:	c66e046f 	strbtgt	r0, [lr], -pc, ror #8
    7820:	1a000000 	bne	7828 <_Min_Heap_Size+0x7028>
    7824:	16000053 			; <UNDEFINED> instruction: 0x16000053
    7828:	17000053 	smlsdne	r0, r3, r0, r0
    782c:	000013f5 	strdeq	r1, [r0], -r5
    7830:	13047101 	movwne	r7, #16641	; 0x4101
    7834:	0000067c 	andeq	r0, r0, ip, ror r6
    7838:	00005340 	andeq	r5, r0, r0, asr #6
    783c:	00005338 	andeq	r5, r0, r8, lsr r3
    7840:	00145f17 	andseq	r5, r4, r7, lsl pc
    7844:	04720100 	ldrbteq	r0, [r2], #-256	; 0xffffff00
    7848:	00096413 	andeq	r6, r9, r3, lsl r4
    784c:	00537e00 	subseq	r7, r3, r0, lsl #28
    7850:	00537600 	subseq	r7, r3, r0, lsl #12
    7854:	17c21700 	strbne	r1, [r2, r0, lsl #14]
    7858:	73010000 	movwvc	r0, #4096	; 0x1000
    785c:	00c60c04 	sbceq	r0, r6, r4, lsl #24
    7860:	53c20000 	bicpl	r0, r2, #0
    7864:	53b40000 			; <UNDEFINED> instruction: 0x53b40000
    7868:	781a0000 	ldmdavc	sl, {}	; <UNPREDICTABLE>
    786c:	f208000d 	vhadd.s8	d0, d8, d13
    7870:	18000045 	stmdane	r0, {r0, r2, r6}
    7874:	08000dce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, sl, fp}
    7878:	00001078 	andeq	r1, r0, r8, ror r0
    787c:	000040b4 	strheq	r4, [r0], -r4	; <UNPREDICTABLE>
    7880:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    7884:	01190074 	tsteq	r9, r4, ror r0
    7888:	80080251 	andhi	r0, r8, r1, asr r2
    788c:	01520119 	cmpeq	r2, r9, lsl r1
    7890:	53011930 	movwpl	r1, #6448	; 0x1930
    7894:	19007702 	stmdbne	r0, {r1, r8, r9, sl, ip, sp, lr}
    7898:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    789c:	23000076 	movwcs	r0, #118	; 0x76
    78a0:	08000df4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, fp}
    78a4:	00001078 	andeq	r1, r0, r8, ror r0
    78a8:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    78ac:	01190074 	tsteq	r9, r4, ror r0
    78b0:	40080251 	andmi	r0, r8, r1, asr r2
    78b4:	01520119 	cmpeq	r2, r9, lsl r1
    78b8:	53011930 	movwpl	r1, #6448	; 0x1930
    78bc:	19007702 	stmdbne	r0, {r1, r8, r9, sl, ip, sp, lr}
    78c0:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    78c4:	00000076 	andeq	r0, r0, r6, ror r0
    78c8:	0db1012a 	ldfeqs	f0, [r1, #168]!	; 0xa8
    78cc:	da010000 	ble	478d4 <_Min_Heap_Size+0x470d4>
    78d0:	00010d02 	andeq	r0, r1, r2, lsl #26
    78d4:	00000000 	andeq	r0, r0, r0
    78d8:	02000000 	andeq	r0, r0, #0
    78dc:	0801007d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6}
    78e0:	29000041 	stmdbcs	r0, {r0, r6}
    78e4:	00001778 	andeq	r1, r0, r8, ror r7
    78e8:	3402da01 	strcc	sp, [r2], #-2561	; 0xfffff5ff
    78ec:	00000796 	muleq	r0, r6, r7
    78f0:	2a005001 	bcs	1b8fc <_Min_Heap_Size+0x1b0fc>
    78f4:	000d8201 	andeq	r8, sp, r1, lsl #4
    78f8:	02cb0100 	sbceq	r0, fp, #0, 2
    78fc:	0000010d 	andeq	r0, r0, sp, lsl #2
    7900:	00000000 	andeq	r0, r0, r0
    7904:	7d020000 	stcvc	0, cr0, [r2, #-0]
    7908:	41330100 	teqmi	r3, r0, lsl #2
    790c:	78290000 	stmdavc	r9!, {}	; <UNPREDICTABLE>
    7910:	01000017 	tsteq	r0, r7, lsl r0
    7914:	963202cb 	ldrtls	r0, [r2], -fp, asr #5
    7918:	01000007 	tsteq	r0, r7
    791c:	01270050 	qsubeq	r0, r0, r7
    7920:	000014a5 	andeq	r1, r0, r5, lsr #9
    7924:	13029d01 	movwne	r9, #11521	; 0x2d01
    7928:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    7934:	00541a00 	subseq	r1, r4, r0, lsl #20
    7938:	41970100 	orrsmi	r0, r7, r0, lsl #2
    793c:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    7940:	01000017 	tsteq	r0, r7, lsl r0
    7944:	9637029d 			; <UNDEFINED> instruction: 0x9637029d
    7948:	4e000007 	cdpmi	0, 0, cr0, cr0, cr7, {0}
    794c:	46000054 			; <UNDEFINED> instruction: 0x46000054
    7950:	18000054 	stmdane	r0, {r2, r4, r6}
    7954:	00000000 	andeq	r0, r0, r0
    7958:	000045ab 	andeq	r4, r0, fp, lsr #11
    795c:	00004186 	andeq	r4, r0, r6, lsl #3
    7960:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    7964:	002ca403 	eoreq	sl, ip, r3, lsl #8
    7968:	51011908 	tstpl	r1, r8, lsl #18
    796c:	02a60a03 	adceq	r0, r6, #12288	; 0x3000
    7970:	00002300 	andeq	r2, r0, r0, lsl #6
    7974:	40dd0000 	sbcsmi	r0, sp, r0
    7978:	01190000 	tsteq	r9, r0
    797c:	00740250 	rsbseq	r0, r4, r0, asr r2
    7980:	01270000 			; <UNDEFINED> instruction: 0x01270000
    7984:	00001681 	andeq	r1, r0, r1, lsl #13
    7988:	13024f01 	movwne	r4, #12033	; 0x2f01
    798c:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    7998:	00548500 	subseq	r8, r4, r0, lsl #10
    799c:	42b10100 	adcsmi	r0, r1, #0, 2
    79a0:	78160000 	ldmdavc	r6, {}	; <UNPREDICTABLE>
    79a4:	01000017 	tsteq	r0, r7, lsl r0
    79a8:	963f024f 	ldrtls	r0, [pc], -pc, asr #4
    79ac:	b9000007 	stmdblt	r0, {r0, r1, r2}
    79b0:	b1000054 	qaddlt	r0, r4, r0
    79b4:	16000054 			; <UNDEFINED> instruction: 0x16000054
    79b8:	00001f4d 	andeq	r1, r0, sp, asr #30
    79bc:	4e024f01 	cdpmi	15, 0, cr4, cr2, cr1, {0}
    79c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    79c4:	000054f6 	strdeq	r5, [r0], -r6
    79c8:	000054f0 	strdeq	r5, [r0], -r0
    79cc:	0014b516 	andseq	fp, r4, r6, lsl r5
    79d0:	024f0100 	subeq	r0, pc, #0, 2
    79d4:	0000c660 	andeq	ip, r0, r0, ror #12
    79d8:	00552c00 	subseq	r2, r5, r0, lsl #24
    79dc:	00552200 	subseq	r2, r5, r0, lsl #4
    79e0:	00001800 	andeq	r1, r0, r0, lsl #16
    79e4:	45ab0000 	strmi	r0, [fp, #0]!
    79e8:	42140000 	andsmi	r0, r4, #0
    79ec:	01190000 	tsteq	r9, r0
    79f0:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    79f4:	1908002c 	stmdbne	r8, {r2, r3, r5}
    79f8:	0a035101 	beq	dbe04 <_Min_Heap_Size+0xdb604>
    79fc:	18000258 	stmdane	r0, {r3, r4, r6, r9}
    7a00:	00000000 	andeq	r0, r0, r0
    7a04:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    7a08:	00004228 	andeq	r4, r0, r8, lsr #4
    7a0c:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    7a10:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    7a14:	00000000 	andeq	r0, r0, r0
    7a18:	000045ab 	andeq	r4, r0, fp, lsr #11
    7a1c:	00004246 	andeq	r4, r0, r6, asr #4
    7a20:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    7a24:	002ca403 	eoreq	sl, ip, r3, lsl #8
    7a28:	51011908 	tstpl	r1, r8, lsl #18
    7a2c:	025b0a03 	subseq	r0, fp, #12288	; 0x3000
    7a30:	00001800 	andeq	r1, r0, r0, lsl #16
    7a34:	45ab0000 	strmi	r0, [fp, #0]!
    7a38:	42640000 	rsbmi	r0, r4, #0
    7a3c:	01190000 	tsteq	r9, r0
    7a40:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    7a44:	1908002c 	stmdbne	r8, {r2, r3, r5}
    7a48:	0a035101 	beq	dbe54 <_Min_Heap_Size+0xdb654>
    7a4c:	1800025c 	stmdane	r0, {r2, r3, r4, r6, r9}
    7a50:	00000000 	andeq	r0, r0, r0
    7a54:	000045ab 	andeq	r4, r0, fp, lsr #11
    7a58:	00004282 	andeq	r4, r0, r2, lsl #5
    7a5c:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    7a60:	002ca403 	eoreq	sl, ip, r3, lsl #8
    7a64:	51011908 	tstpl	r1, r8, lsl #18
    7a68:	025d0a03 	subseq	r0, sp, #12288	; 0x3000
    7a6c:	00001800 	andeq	r1, r0, r0, lsl #16
    7a70:	45ab0000 	strmi	r0, [fp, #0]!
    7a74:	42a00000 	adcmi	r0, r0, #0
    7a78:	01190000 	tsteq	r9, r0
    7a7c:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    7a80:	1908002c 	stmdbne	r8, {r2, r3, r5}
    7a84:	0a035101 	beq	dbe90 <_Min_Heap_Size+0xdb690>
    7a88:	2300025e 	movwcs	r0, #606	; 0x25e
    7a8c:	00000000 	andeq	r0, r0, r0
    7a90:	00004108 	andeq	r4, r0, r8, lsl #2
    7a94:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    7a98:	00000074 	andeq	r0, r0, r4, ror r0
    7a9c:	19980127 	ldmibne	r8, {r0, r1, r2, r5, r8}
    7aa0:	fd010000 	stc2	0, cr0, [r1, #-0]
    7aa4:	3a011301 	bcc	4c6b0 <_Min_Heap_Size+0x4beb0>
    7aa8:	00000002 	andeq	r0, r0, r2
    7aac:	00000000 	andeq	r0, r0, r0
    7ab0:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    7ab4:	01000055 	qaddeq	r0, r5, r0
    7ab8:	00004398 	muleq	r0, r8, r3
    7abc:	00177816 	andseq	r7, r7, r6, lsl r8
    7ac0:	01fd0100 	mvnseq	r0, r0, lsl #2
    7ac4:	00079634 	andeq	r9, r7, r4, lsr r6
    7ac8:	0055a200 	subseq	sl, r5, r0, lsl #4
    7acc:	00559a00 	subseq	r9, r5, r0, lsl #20
    7ad0:	14c21600 	strbne	r1, [r2], #1536	; 0x600
    7ad4:	fd010000 	stc2	0, cr0, [r1, #-0]
    7ad8:	00c64401 	sbceq	r4, r6, r1, lsl #8
    7adc:	55e30000 	strbpl	r0, [r3, #0]!
    7ae0:	55d90000 	ldrbpl	r0, [r9]
    7ae4:	00180000 	andseq	r0, r8, r0
    7ae8:	ab000000 	blge	7af0 <_Min_Heap_Size+0x72f0>
    7aec:	19000045 	stmdbne	r0, {r0, r2, r6}
    7af0:	19000043 	stmdbne	r0, {r0, r1, r6}
    7af4:	03055001 	movweq	r5, #20481	; 0x5001
    7af8:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
    7afc:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7b00:	0002060a 	andeq	r0, r2, sl, lsl #12
    7b04:	00000018 	andeq	r0, r0, r8, lsl r0
    7b08:	00069f00 	andeq	r9, r6, r0, lsl #30
    7b0c:	00432d00 	subeq	r2, r3, r0, lsl #26
    7b10:	50011900 	andpl	r1, r1, r0, lsl #18
    7b14:	00007402 	andeq	r7, r0, r2, lsl #8
    7b18:	00000018 	andeq	r0, r0, r8, lsl r0
    7b1c:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7b20:	00434b00 	subeq	r4, r3, r0, lsl #22
    7b24:	50011900 	andpl	r1, r1, r0, lsl #18
    7b28:	2ca40305 	stccs	3, cr0, [r4], #20
    7b2c:	01190800 	tsteq	r9, r0, lsl #16
    7b30:	090a0351 	stmdbeq	sl, {r0, r4, r6, r8, r9}
    7b34:	00180002 	andseq	r0, r8, r2
    7b38:	ab000000 	blge	7b40 <_Min_Heap_Size+0x7340>
    7b3c:	69000045 	stmdbvs	r0, {r0, r2, r6}
    7b40:	19000043 	stmdbne	r0, {r0, r1, r6}
    7b44:	03055001 	movweq	r5, #20481	; 0x5001
    7b48:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
    7b4c:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7b50:	00020a0a 	andeq	r0, r2, sl, lsl #20
    7b54:	00000018 	andeq	r0, r0, r8, lsl r0
    7b58:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7b5c:	00438700 	subeq	r8, r3, r0, lsl #14
    7b60:	50011900 	andpl	r1, r1, r0, lsl #18
    7b64:	2ca40305 	stccs	3, cr0, [r4], #20
    7b68:	01190800 	tsteq	r9, r0, lsl #16
    7b6c:	0b0a0351 	bleq	2888b8 <_Min_Heap_Size+0x2880b8>
    7b70:	00230002 	eoreq	r0, r3, r2
    7b74:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7b78:	19000041 	stmdbne	r0, {r0, r6}
    7b7c:	74025001 	strvc	r5, [r2], #-1
    7b80:	27000000 	strcs	r0, [r0, -r0]
    7b84:	00149101 	andseq	r9, r4, r1, lsl #2
    7b88:	01b30100 			; <UNDEFINED> instruction: 0x01b30100
    7b8c:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    7b98:	56250000 	strtpl	r0, [r5], -r0
    7b9c:	4c010000 	stcmi	0, cr0, [r1], {-0}
    7ba0:	16000044 	strne	r0, [r0], -r4, asr #32
    7ba4:	00001778 	andeq	r1, r0, r8, ror r7
    7ba8:	3b01b301 	blcc	747b4 <_Min_Heap_Size+0x73fb4>
    7bac:	00000796 	muleq	r0, r6, r7
    7bb0:	00005659 	andeq	r5, r0, r9, asr r6
    7bb4:	00005651 	andeq	r5, r0, r1, asr r6
    7bb8:	00000018 	andeq	r0, r0, r8, lsl r0
    7bbc:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7bc0:	0043eb00 	subeq	lr, r3, r0, lsl #22
    7bc4:	50011900 	andpl	r1, r1, r0, lsl #18
    7bc8:	2ca40305 	stccs	3, cr0, [r4], #20
    7bcc:	01190800 	tsteq	r9, r0, lsl #16
    7bd0:	bc0a0351 	stclt	3, cr0, [sl], {81}	; 0x51
    7bd4:	00180001 	andseq	r0, r8, r1
    7bd8:	9f000000 	svcls	0x00000000
    7bdc:	ff000006 			; <UNDEFINED> instruction: 0xff000006
    7be0:	19000043 	stmdbne	r0, {r0, r1, r6}
    7be4:	74025001 	strvc	r5, [r2], #-1
    7be8:	00180000 	andseq	r0, r8, r0
    7bec:	ab000000 	blge	7bf4 <_Min_Heap_Size+0x73f4>
    7bf0:	1d000045 	stcne	0, cr0, [r0, #-276]	; 0xfffffeec
    7bf4:	19000044 	stmdbne	r0, {r2, r6}
    7bf8:	03055001 	movweq	r5, #20481	; 0x5001
    7bfc:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
    7c00:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7c04:	0001bd0a 	andeq	fp, r1, sl, lsl #26
    7c08:	00000018 	andeq	r0, r0, r8, lsl r0
    7c0c:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7c10:	00443b00 	subeq	r3, r4, r0, lsl #22
    7c14:	50011900 	andpl	r1, r1, r0, lsl #18
    7c18:	2ca40305 	stccs	3, cr0, [r4], #20
    7c1c:	01190800 	tsteq	r9, r0, lsl #16
    7c20:	be0a0351 	mcrlt	3, 0, r0, cr10, cr1, {2}
    7c24:	00230001 	eoreq	r0, r3, r1
    7c28:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7c2c:	19000041 	stmdbne	r0, {r0, r6}
    7c30:	74025001 	strvc	r5, [r2], #-1
    7c34:	27000000 	strcs	r0, [r0, -r0]
    7c38:	000ebe01 	andeq	fp, lr, r1, lsl #28
    7c3c:	01650100 	cmneq	r5, r0, lsl #2
    7c40:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
    7c44:	0c1c0000 	ldceq	0, cr0, [ip], {-0}
    7c48:	0d480800 	stcleq	8, cr0, [r8, #-0]
    7c4c:	56900800 	ldrpl	r0, [r0], r0, lsl #16
    7c50:	3c010000 	stccc	0, cr0, [r1], {-0}
    7c54:	16000045 	strne	r0, [r0], -r5, asr #32
    7c58:	00001778 	andeq	r1, r0, r8, ror r7
    7c5c:	35016501 	strcc	r6, [r1, #-1281]	; 0xfffffaff
    7c60:	00000796 	muleq	r0, r6, r7
    7c64:	000056c8 	andeq	r5, r0, r8, asr #13
    7c68:	000056bc 			; <UNDEFINED> instruction: 0x000056bc
    7c6c:	000c5618 	andeq	r5, ip, r8, lsl r6
    7c70:	0045ab08 	subeq	sl, r5, r8, lsl #22
    7c74:	00449f00 	subeq	r9, r4, r0, lsl #30
    7c78:	50011900 	andpl	r1, r1, r0, lsl #18
    7c7c:	2ca40305 	stccs	3, cr0, [r4], #20
    7c80:	01190800 	tsteq	r9, r0, lsl #16
    7c84:	730a0351 	movwvc	r0, #41809	; 0xa351
    7c88:	9e180001 	cdpls	0, 1, cr0, cr8, cr1, {0}
    7c8c:	9f08000c 	svcls	0x0008000c
    7c90:	b3000006 	movwlt	r0, #6
    7c94:	19000044 	stmdbne	r0, {r2, r6}
    7c98:	74025001 	strvc	r5, [r2], #-1
    7c9c:	d8180000 	ldmdale	r8, {}	; <UNPREDICTABLE>
    7ca0:	ab08000c 	blge	207cd8 <_Min_Heap_Size+0x2074d8>
    7ca4:	d1000045 	tstle	r0, r5, asr #32
    7ca8:	19000044 	stmdbne	r0, {r2, r6}
    7cac:	03055001 	movweq	r5, #20481	; 0x5001
    7cb0:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
    7cb4:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7cb8:	0001740a 	andeq	r7, r1, sl, lsl #8
    7cbc:	000d1418 	andeq	r1, sp, r8, lsl r4
    7cc0:	0045ab08 	subeq	sl, r5, r8, lsl #22
    7cc4:	0044ef00 	subeq	lr, r4, r0, lsl #30
    7cc8:	50011900 	andpl	r1, r1, r0, lsl #18
    7ccc:	2ca40305 	stccs	3, cr0, [r4], #20
    7cd0:	01190800 	tsteq	r9, r0, lsl #16
    7cd4:	780a0351 	stmdavc	sl, {r0, r4, r6, r8, r9}
    7cd8:	20180001 	andscs	r0, r8, r1
    7cdc:	ab08000d 	blge	207d18 <_Min_Heap_Size+0x207518>
    7ce0:	0d000045 	stceq	0, cr0, [r0, #-276]	; 0xfffffeec
    7ce4:	19000045 	stmdbne	r0, {r0, r2, r6}
    7ce8:	03055001 	movweq	r5, #20481	; 0x5001
    7cec:	08002ca4 	stmdaeq	r0, {r2, r5, r7, sl, fp, sp}
    7cf0:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7cf4:	00017a0a 	andeq	r7, r1, sl, lsl #20
    7cf8:	000d2c18 	andeq	r2, sp, r8, lsl ip
    7cfc:	0045ab08 	subeq	sl, r5, r8, lsl #22
    7d00:	00452b00 	subeq	r2, r5, r0, lsl #22
    7d04:	50011900 	andpl	r1, r1, r0, lsl #18
    7d08:	2ca40305 	stccs	3, cr0, [r4], #20
    7d0c:	01190800 	tsteq	r9, r0, lsl #16
    7d10:	7b0a0351 	blvc	288a5c <_Min_Heap_Size+0x28825c>
    7d14:	38230001 	stmdacc	r3!, {r0}
    7d18:	0808000d 	stmdaeq	r8, {r0, r2, r3}
    7d1c:	19000041 	stmdbne	r0, {r0, r6}
    7d20:	74025001 	strvc	r5, [r2], #-1
    7d24:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    7d28:	00001547 	andeq	r1, r0, r7, asr #10
    7d2c:	1f020f02 	svcne	0x00020f02
    7d30:	0000c601 	andeq	ip, r0, r1, lsl #12
    7d34:	45770300 	ldrbmi	r0, [r7, #-768]!	; 0xfffffd00
    7d38:	8f2f0000 	svchi	0x002f0000
    7d3c:	02000021 	andeq	r0, r0, #33	; 0x21
    7d40:	c631020f 	ldrtgt	r0, [r1], -pc, lsl #4
    7d44:	2f000000 	svccs	0x00000000
    7d48:	000000c5 	andeq	r0, r0, r5, asr #1
    7d4c:	4b020f02 	blmi	8b95c <_Min_Heap_Size+0x8b15c>
    7d50:	00004577 	andeq	r4, r0, r7, ror r5
    7d54:	0019a530 	andseq	sl, r9, r0, lsr r5
    7d58:	02110200 	andseq	r0, r1, #0, 4
    7d5c:	0000c60d 	andeq	ip, r0, sp, lsl #12
    7d60:	04110000 	ldreq	r0, [r1], #-0
    7d64:	000000d2 	ldrdeq	r0, [r0], -r2
    7d68:	0016d82e 	andseq	sp, r6, lr, lsr #16
    7d6c:	01dc0200 	bicseq	r0, ip, r0, lsl #4
    7d70:	00c6011f 	sbceq	r0, r6, pc, lsl r1
    7d74:	ab030000 	blge	c7d7c <_Min_Heap_Size+0xc757c>
    7d78:	2f000045 	svccs	0x00000045
    7d7c:	000000c5 	andeq	r0, r0, r5, asr #1
    7d80:	3b01dc02 	blcc	7ed90 <_Min_Heap_Size+0x7e590>
    7d84:	00004577 	andeq	r4, r0, r7, ror r5
    7d88:	0019a530 	andseq	sl, r9, r0, lsr r5
    7d8c:	01de0200 	bicseq	r0, lr, r0, lsl #4
    7d90:	0000c60e 	andeq	ip, r0, lr, lsl #12
    7d94:	01310000 	teqeq	r1, r0
    7d98:	000c8c01 	andeq	r8, ip, r1, lsl #24
    7d9c:	000c8c00 	andeq	r8, ip, r0, lsl #24
    7da0:	01e60a00 	mvneq	r0, r0, lsl #20
    7da4:	01013108 	tsteq	r1, r8, lsl #2
    7da8:	000012ef 	andeq	r1, r0, pc, ror #5
    7dac:	000012ef 	andeq	r1, r0, pc, ror #5
    7db0:	0a04ea0b 	beq	1425e4 <_Min_Heap_Size+0x141de4>
    7db4:	7e010131 	mcrvc	1, 0, r0, cr1, cr1, {1}
    7db8:	7e000017 	mcrvc	0, 0, r0, cr0, cr7, {0}
    7dbc:	0b000017 	bleq	7e20 <_Min_Heap_Size+0x7620>
    7dc0:	320a04eb 	andcc	r0, sl, #-352321536	; 0xeb000000
    7dc4:	17360101 	ldrne	r0, [r6, -r1, lsl #2]!
    7dc8:	17360000 	ldrne	r0, [r6, -r0]!
    7dcc:	01310000 	teqeq	r1, r0
    7dd0:	00142701 	andseq	r2, r4, r1, lsl #14
    7dd4:	00142700 	andseq	r2, r4, r0, lsl #14
    7dd8:	02970800 	addseq	r0, r7, #0, 16
    7ddc:	01013313 	tsteq	r1, r3, lsl r3
    7de0:	0000161c 	andeq	r1, r0, ip, lsl r6
    7de4:	0000161c 	andeq	r1, r0, ip, lsl r6
    7de8:	310aea0c 	tstcc	sl, ip, lsl #20
    7dec:	15890101 	strne	r0, [r9, #257]	; 0x101
    7df0:	15890000 	strne	r0, [r9]
    7df4:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
    7df8:	01311302 	teqeq	r1, r2, lsl #6
    7dfc:	00134d01 	andseq	r4, r3, r1, lsl #26
    7e00:	00134d00 	andseq	r4, r3, r0, lsl #26
    7e04:	02990800 	addseq	r0, r9, #0, 16
    7e08:	01013113 	tsteq	r1, r3, lsl r1
    7e0c:	000018de 	ldrdeq	r1, [r0], -lr
    7e10:	000018de 	ldrdeq	r1, [r0], -lr
    7e14:	1602a908 	strne	sl, [r2], -r8, lsl #18
    7e18:	000e7f00 	andeq	r7, lr, r0, lsl #30
    7e1c:	a5000200 	strge	r0, [r0, #-512]	; 0xfffffe00
    7e20:	0400000d 	streq	r0, [r0], #-13
    7e24:	00058801 	andeq	r8, r5, r1, lsl #16
    7e28:	1b0f0c00 	blne	3cae30 <_Min_Heap_Size+0x3ca630>
    7e2c:	086d0000 	stmdaeq	sp!, {}^	; <UNPREDICTABLE>
    7e30:	03d80000 	bicseq	r0, r8, #0
	...
    7e3c:	59f60000 	ldmibpl	r6!, {}^	; <UNPREDICTABLE>
    7e40:	01020000 	mrseq	r0, (UNDEF: 2)
    7e44:	00057606 	andeq	r7, r5, r6, lsl #12
    7e48:	00660300 	rsbeq	r0, r6, r0, lsl #6
    7e4c:	2b020000 	blcs	87e54 <_Min_Heap_Size+0x87654>
    7e50:	00003c18 	andeq	r3, r0, r8, lsl ip
    7e54:	08010200 	stmdaeq	r1, {r9}
    7e58:	00000574 	andeq	r0, r0, r4, ror r5
    7e5c:	fd050202 	stc2	2, cr0, [r5, #-8]
    7e60:	03000003 	movweq	r0, #3
    7e64:	000006f5 	strdeq	r0, [r0], -r5
    7e68:	56193902 	ldrpl	r3, [r9], -r2, lsl #18
    7e6c:	02000000 	andeq	r0, r0, #0
    7e70:	078f0702 	streq	r0, [pc, r2, lsl #14]
    7e74:	04020000 	streq	r0, [r2], #-0
    7e78:	0002ec05 	andeq	lr, r2, r5, lsl #24
    7e7c:	02c20300 	sbceq	r0, r2, #0, 6
    7e80:	4f020000 	svcmi	0x00020000
    7e84:	00007019 	andeq	r7, r0, r9, lsl r0
    7e88:	07040200 	streq	r0, [r4, -r0, lsl #4]
    7e8c:	000000b3 	strheq	r0, [r0], -r3
    7e90:	e7050802 	str	r0, [r5, -r2, lsl #16]
    7e94:	03000002 	movweq	r0, #2
    7e98:	0000172b 	andeq	r1, r0, fp, lsr #14
    7e9c:	8a196902 	bhi	6622ac <_Min_Heap_Size+0x661aac>
    7ea0:	02000000 	andeq	r0, r0, #0
    7ea4:	00ae0708 	adceq	r0, lr, r8, lsl #14
    7ea8:	04040000 	streq	r0, [r4], #-0
    7eac:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    7eb0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    7eb4:	000000b8 	strheq	r0, [r0], -r8
    7eb8:	00006803 	andeq	r6, r0, r3, lsl #16
    7ebc:	13180300 	tstne	r8, #0, 6
    7ec0:	00000030 	andeq	r0, r0, r0, lsr r0
    7ec4:	00009f05 	andeq	r9, r0, r5, lsl #30
    7ec8:	06f70300 	ldrbteq	r0, [r7], r0, lsl #6
    7ecc:	24030000 	strcs	r0, [r3], #-0
    7ed0:	00004a14 	andeq	r4, r0, r4, lsl sl
    7ed4:	02c40300 	sbceq	r0, r4, #0, 6
    7ed8:	30030000 	andcc	r0, r3, r0
    7edc:	00006414 	andeq	r6, r0, r4, lsl r4
    7ee0:	00bc0600 	adcseq	r0, ip, r0, lsl #12
    7ee4:	2d030000 	stccs	0, cr0, [r3, #-0]
    7ee8:	03000017 	movweq	r0, #23
    7eec:	007e143c 	rsbseq	r1, lr, ip, lsr r4
    7ef0:	bc070000 	stclt	0, cr0, [r7], {-0}
    7ef4:	e9000000 	stmdb	r0, {}	; <UNPREDICTABLE>
    7ef8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7efc:	00000098 	muleq	r0, r8, r0
    7f00:	77090001 	strvc	r0, [r9, -r1]
    7f04:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    7f08:	00bc1139 	adcseq	r1, ip, r9, lsr r1
    7f0c:	01010000 	mrseq	r0, (UNDEF: 1)
    7f10:	0000ab07 	andeq	sl, r0, r7, lsl #22
    7f14:	00010700 	andeq	r0, r1, r0, lsl #14
    7f18:	00980800 	addseq	r0, r8, r0, lsl #16
    7f1c:	000f0000 	andeq	r0, pc, r0
    7f20:	0000f705 	andeq	pc, r0, r5, lsl #14
    7f24:	1a370900 	bne	dca32c <_Min_Heap_Size+0xdc9b2c>
    7f28:	3b040000 	blcc	107f30 <_Min_Heap_Size+0x107730>
    7f2c:	00010717 	andeq	r0, r1, r7, lsl r7
    7f30:	07010100 	streq	r0, [r1, -r0, lsl #2]
    7f34:	000000ab 	andeq	r0, r0, fp, lsr #1
    7f38:	0000012a 	andeq	r0, r0, sl, lsr #2
    7f3c:	00009808 	andeq	r9, r0, r8, lsl #16
    7f40:	05000700 	streq	r0, [r0, #-1792]	; 0xfffff900
    7f44:	0000011a 	andeq	r0, r0, sl, lsl r1
    7f48:	0019d309 	andseq	sp, r9, r9, lsl #6
    7f4c:	173c0400 	ldrne	r0, [ip, -r0, lsl #8]!
    7f50:	0000012a 	andeq	r0, r0, sl, lsr #2
    7f54:	1c0a0101 	stfnes	f0, [sl], {1}
    7f58:	09016805 	stmdbeq	r1, {r0, r2, fp, sp, lr}
    7f5c:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    7f60:	5243410b 	subpl	r4, r3, #-1073741822	; 0xc0000002
    7f64:	016a0500 	cmneq	sl, r0, lsl #10
    7f68:	0000c811 	andeq	ip, r0, r1, lsl r8
    7f6c:	00230200 	eoreq	r0, r3, r0, lsl #4
    7f70:	0019ff0c 	andseq	pc, r9, ip, lsl #30
    7f74:	016b0500 	cmneq	fp, r0, lsl #10
    7f78:	0000c811 	andeq	ip, r0, r1, lsl r8
    7f7c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    7f80:	0019fc0c 	andseq	pc, r9, ip, lsl #24
    7f84:	016c0500 	cmneq	ip, r0, lsl #10
    7f88:	0000c811 	andeq	ip, r0, r1, lsl r8
    7f8c:	08230200 	stmdaeq	r3!, {r9}
    7f90:	0052530b 	subseq	r5, r2, fp, lsl #6
    7f94:	11016d05 	tstne	r1, r5, lsl #26
    7f98:	000000c8 	andeq	r0, r0, r8, asr #1
    7f9c:	0b0c2302 	bleq	310bac <_Min_Heap_Size+0x3103ac>
    7fa0:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    7fa4:	c811016e 	ldmdagt	r1, {r1, r2, r3, r5, r6, r8}
    7fa8:	02000000 	andeq	r0, r0, #0
    7fac:	e10c1023 	tst	ip, r3, lsr #32
    7fb0:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    7fb4:	c811016f 	ldmdagt	r1, {r0, r1, r2, r3, r5, r6, r8}
    7fb8:	02000000 	andeq	r0, r0, #0
    7fbc:	130c1423 	movwne	r1, #50211	; 0xc423
    7fc0:	0500001a 	streq	r0, [r0, #-26]	; 0xffffffe6
    7fc4:	c8110170 	ldmdagt	r1, {r4, r5, r6, r8}
    7fc8:	02000000 	andeq	r0, r0, #0
    7fcc:	0d001823 	stceq	8, cr1, [r0, #-140]	; 0xffffff74
    7fd0:	000019e7 	andeq	r1, r0, r7, ror #19
    7fd4:	03017105 	movweq	r7, #4357	; 0x1105
    7fd8:	0000013d 	andeq	r0, r0, sp, lsr r1
    7fdc:	ae05280a 	cdpge	8, 0, cr2, cr5, cr10, {0}
    7fe0:	025e0901 	subseq	r0, lr, #16384	; 0x4000
    7fe4:	3d0c0000 	stccc	0, cr0, [ip, #-0]
    7fe8:	05000012 	streq	r0, [r0, #-18]	; 0xffffffee
    7fec:	c81101b0 	ldmdagt	r1, {r4, r5, r7, r8}
    7ff0:	02000000 	andeq	r0, r0, #0
    7ff4:	4f0c0023 	svcmi	0x000c0023
    7ff8:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    7ffc:	c81101b1 	ldmdagt	r1, {r0, r4, r5, r7, r8}
    8000:	02000000 	andeq	r0, r0, #0
    8004:	cd0c0423 	cfstrsgt	mvf0, [ip, #-140]	; 0xffffff74
    8008:	0500000f 	streq	r0, [r0, #-15]
    800c:	c81101b2 	ldmdagt	r1, {r1, r4, r5, r7, r8}
    8010:	02000000 	andeq	r0, r0, #0
    8014:	170c0823 	strne	r0, [ip, -r3, lsr #16]
    8018:	05000010 	streq	r0, [r0, #-16]
    801c:	c81101b3 	ldmdagt	r1, {r0, r1, r4, r5, r7, r8}
    8020:	02000000 	andeq	r0, r0, #0
    8024:	490b0c23 	stmdbmi	fp, {r0, r1, r5, sl, fp}
    8028:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
    802c:	c81101b4 	ldmdagt	r1, {r2, r4, r5, r7, r8}
    8030:	02000000 	andeq	r0, r0, #0
    8034:	4f0b1023 	svcmi	0x000b1023
    8038:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
    803c:	c81101b5 	ldmdagt	r1, {r0, r2, r4, r5, r7, r8}
    8040:	02000000 	andeq	r0, r0, #0
    8044:	f00c1423 			; <UNDEFINED> instruction: 0xf00c1423
    8048:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    804c:	c81101b6 	ldmdagt	r1, {r1, r2, r4, r5, r7, r8}
    8050:	02000000 	andeq	r0, r0, #0
    8054:	bb0c1823 	bllt	30e0e8 <_Min_Heap_Size+0x30d8e8>
    8058:	0500000f 	streq	r0, [r0, #-15]
    805c:	c81101b7 	ldmdagt	r1, {r0, r1, r2, r4, r5, r7, r8}
    8060:	02000000 	andeq	r0, r0, #0
    8064:	410b1c23 	tstmi	fp, r3, lsr #24
    8068:	05005246 	streq	r5, [r0, #-582]	; 0xfffffdba
    806c:	6e1101b8 	mrcvs	1, 0, r0, cr1, cr8, {5}
    8070:	02000002 	andeq	r0, r0, #2
    8074:	07002023 	streq	r2, [r0, -r3, lsr #32]
    8078:	000000c8 	andeq	r0, r0, r8, asr #1
    807c:	0000026e 	andeq	r0, r0, lr, ror #4
    8080:	00009808 	andeq	r9, r0, r8, lsl #16
    8084:	06000100 	streq	r0, [r0], -r0, lsl #2
    8088:	0000025e 	andeq	r0, r0, lr, asr r2
    808c:	0011f50d 	andseq	pc, r1, sp, lsl #10
    8090:	01b90500 			; <UNDEFINED> instruction: 0x01b90500
    8094:	0001c303 	andeq	ip, r1, r3, lsl #6
    8098:	05080a00 	streq	r0, [r8, #-2560]	; 0xfffff600
    809c:	aa0901ea 	bge	24884c <_Min_Heap_Size+0x24804c>
    80a0:	0b000002 	bleq	80b0 <_Min_Heap_Size+0x78b0>
    80a4:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    80a8:	c81101ec 	ldmdagt	r1, {r2, r3, r5, r6, r7, r8}
    80ac:	02000000 	andeq	r0, r0, #0
    80b0:	430b0023 	movwmi	r0, #45091	; 0xb023
    80b4:	05005253 	streq	r5, [r0, #-595]	; 0xfffffdad
    80b8:	c81101ed 	ldmdagt	r1, {r0, r2, r3, r5, r6, r7, r8}
    80bc:	02000000 	andeq	r0, r0, #0
    80c0:	0d000423 	cfstrseq	mvf0, [r0, #-140]	; 0xffffff74
    80c4:	000001aa 	andeq	r0, r0, sl, lsr #3
    80c8:	0301ee05 	movweq	lr, #7685	; 0x1e05
    80cc:	00000280 	andeq	r0, r0, r0, lsl #5
    80d0:	f405880a 	vst2.8	{d8-d9}, [r5], sl
    80d4:	04a30901 	strteq	r0, [r3], #2305	; 0x901
    80d8:	430b0000 	movwmi	r0, #45056	; 0xb000
    80dc:	f6050052 			; <UNDEFINED> instruction: 0xf6050052
    80e0:	00c81101 	sbceq	r1, r8, r1, lsl #2
    80e4:	23020000 	movwcs	r0, #8192	; 0x2000
    80e8:	02820c00 	addeq	r0, r2, #0, 24
    80ec:	f7050000 			; <UNDEFINED> instruction: 0xf7050000
    80f0:	00c81101 	sbceq	r1, r8, r1, lsl #2
    80f4:	23020000 	movwcs	r0, #8192	; 0x2000
    80f8:	02850c04 	addeq	r0, r5, #4, 24	; 0x400
    80fc:	f8050000 			; <UNDEFINED> instruction: 0xf8050000
    8100:	00c81101 	sbceq	r1, r8, r1, lsl #2
    8104:	23020000 	movwcs	r0, #8192	; 0x2000
    8108:	49430b08 	stmdbmi	r3, {r3, r8, r9, fp}^
    810c:	f9050052 			; <UNDEFINED> instruction: 0xf9050052
    8110:	00c81101 	sbceq	r1, r8, r1, lsl #2
    8114:	23020000 	movwcs	r0, #8192	; 0x2000
    8118:	01660c0c 	cmneq	r6, ip, lsl #24
    811c:	fa050000 	blx	148124 <_Min_Heap_Size+0x147924>
    8120:	00c81101 	sbceq	r1, r8, r1, lsl #2
    8124:	23020000 	movwcs	r0, #8192	; 0x2000
    8128:	07170c10 			; <UNDEFINED> instruction: 0x07170c10
    812c:	fb050000 	blx	148136 <_Min_Heap_Size+0x147936>
    8130:	00c81101 	sbceq	r1, r8, r1, lsl #2
    8134:	23020000 	movwcs	r0, #8192	; 0x2000
    8138:	067c0c14 			; <UNDEFINED> instruction: 0x067c0c14
    813c:	fc050000 	stc2	0, cr0, [r5], {-0}
    8140:	00c81101 	sbceq	r1, r8, r1, lsl #2
    8144:	23020000 	movwcs	r0, #8192	; 0x2000
    8148:	050f0c18 	streq	r0, [pc, #-3096]	; 7538 <_Min_Heap_Size+0x6d38>
    814c:	fd050000 	stc2	0, cr0, [r5, #-0]
    8150:	00bc1101 	adcseq	r1, ip, r1, lsl #2
    8154:	23020000 	movwcs	r0, #8192	; 0x2000
    8158:	04fa0c1c 	ldrbteq	r0, [sl], #3100	; 0xc1c
    815c:	fe050000 	cdp2	0, 0, cr0, cr5, cr0, {0}
    8160:	00c81101 	sbceq	r1, r8, r1, lsl #2
    8164:	23020000 	movwcs	r0, #8192	; 0x2000
    8168:	01f90c20 	mvnseq	r0, r0, lsr #24
    816c:	ff050000 			; <UNDEFINED> instruction: 0xff050000
    8170:	00c81101 	sbceq	r1, r8, r1, lsl #2
    8174:	23020000 	movwcs	r0, #8192	; 0x2000
    8178:	05190c24 	ldreq	r0, [r9, #-3108]	; 0xfffff3dc
    817c:	00050000 	andeq	r0, r5, r0
    8180:	00d91102 	sbcseq	r1, r9, r2, lsl #2
    8184:	23020000 	movwcs	r0, #8192	; 0x2000
    8188:	08ae0c28 	stmiaeq	lr!, {r3, r5, sl, fp}
    818c:	01050000 	mrseq	r0, (UNDEF: 5)
    8190:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8194:	23020000 	movwcs	r0, #8192	; 0x2000
    8198:	07870c30 			; <UNDEFINED> instruction: 0x07870c30
    819c:	02050000 	andeq	r0, r5, #0
    81a0:	00c81102 	sbceq	r1, r8, r2, lsl #2
    81a4:	23020000 	movwcs	r0, #8192	; 0x2000
    81a8:	049c0c34 	ldreq	r0, [ip], #3124	; 0xc34
    81ac:	03050000 	movweq	r0, #20480	; 0x5000
    81b0:	00c81102 	sbceq	r1, r8, r2, lsl #2
    81b4:	23020000 	movwcs	r0, #8192	; 0x2000
    81b8:	05230c38 	streq	r0, [r3, #-3128]!	; 0xfffff3c8
    81bc:	04050000 	streq	r0, [r5], #-0
    81c0:	00bc1102 	adcseq	r1, ip, r2, lsl #2
    81c4:	23020000 	movwcs	r0, #8192	; 0x2000
    81c8:	06b70c3c 			; <UNDEFINED> instruction: 0x06b70c3c
    81cc:	05050000 	streq	r0, [r5, #-0]
    81d0:	00c81102 	sbceq	r1, r8, r2, lsl #2
    81d4:	23020000 	movwcs	r0, #8192	; 0x2000
    81d8:	06740c40 	ldrbteq	r0, [r4], -r0, asr #24
    81dc:	06050000 	streq	r0, [r5], -r0
    81e0:	00c81102 	sbceq	r1, r8, r2, lsl #2
    81e4:	23020000 	movwcs	r0, #8192	; 0x2000
    81e8:	052d0c44 	streq	r0, [sp, #-3140]!	; 0xfffff3bc
    81ec:	07050000 	streq	r0, [r5, -r0]
    81f0:	00d91102 	sbcseq	r1, r9, r2, lsl #2
    81f4:	23020000 	movwcs	r0, #8192	; 0x2000
    81f8:	012b0c48 			; <UNDEFINED> instruction: 0x012b0c48
    81fc:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    8200:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8204:	23020000 	movwcs	r0, #8192	; 0x2000
    8208:	04d60c50 	ldrbeq	r0, [r6], #3152	; 0xc50
    820c:	09050000 	stmdbeq	r5, {}	; <UNPREDICTABLE>
    8210:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8214:	23020000 	movwcs	r0, #8192	; 0x2000
    8218:	06420c54 			; <UNDEFINED> instruction: 0x06420c54
    821c:	0a050000 	beq	148224 <_Min_Heap_Size+0x147a24>
    8220:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8224:	23020000 	movwcs	r0, #8192	; 0x2000
    8228:	05370c58 	ldreq	r0, [r7, #-3160]!	; 0xfffff3a8
    822c:	0b050000 	bleq	148234 <_Min_Heap_Size+0x147a34>
    8230:	00bc1102 	adcseq	r1, ip, r2, lsl #2
    8234:	23020000 	movwcs	r0, #8192	; 0x2000
    8238:	001b0c5c 	andseq	r0, fp, ip, asr ip
    823c:	0c050000 	stceq	0, cr0, [r5], {-0}
    8240:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8244:	23020000 	movwcs	r0, #8192	; 0x2000
    8248:	03ee0c60 	mvneq	r0, #96, 24	; 0x6000
    824c:	0d050000 	stceq	0, cr0, [r5, #-0]
    8250:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8254:	23020000 	movwcs	r0, #8192	; 0x2000
    8258:	05410c64 	strbeq	r0, [r1, #-3172]	; 0xfffff39c
    825c:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    8260:	00d91102 	sbcseq	r1, r9, r2, lsl #2
    8264:	23020000 	movwcs	r0, #8192	; 0x2000
    8268:	08090c68 	stmdaeq	r9, {r3, r5, r6, sl, fp}
    826c:	0f050000 	svceq	0x00050000
    8270:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8274:	23020000 	movwcs	r0, #8192	; 0x2000
    8278:	53430b70 	movtpl	r0, #15216	; 0x3b70
    827c:	10050052 	andne	r0, r5, r2, asr r0
    8280:	00c81102 	sbceq	r1, r8, r2, lsl #2
    8284:	23020000 	movwcs	r0, #8192	; 0x2000
    8288:	054b0c74 	strbeq	r0, [fp, #-3188]	; 0xfffff38c
    828c:	11050000 	mrsne	r0, (UNDEF: 5)
    8290:	00d91102 	sbcseq	r1, r9, r2, lsl #2
    8294:	23020000 	movwcs	r0, #8192	; 0x2000
    8298:	07d80c78 			; <UNDEFINED> instruction: 0x07d80c78
    829c:	12050000 	andne	r0, r5, #0
    82a0:	00c81102 	sbceq	r1, r8, r2, lsl #2
    82a4:	23030000 	movwcs	r0, #12288	; 0x3000
    82a8:	810c0180 	smlabbhi	ip, r0, r1, r0
    82ac:	05000003 	streq	r0, [r0, #-3]
    82b0:	c8110213 	ldmdagt	r1, {r0, r1, r4, r9}
    82b4:	03000000 	movweq	r0, #0
    82b8:	00018423 	andeq	r8, r1, r3, lsr #8
    82bc:	0001cd0d 	andeq	ip, r1, sp, lsl #26
    82c0:	02140500 	andseq	r0, r4, #0, 10
    82c4:	0002b703 	andeq	fp, r2, r3, lsl #14
    82c8:	01070e00 	tsteq	r7, r0, lsl #28
    82cc:	0000003c 	andeq	r0, r0, ip, lsr r0
    82d0:	cb01b906 	blgt	766f0 <_Min_Heap_Size+0x75ef0>
    82d4:	0f000004 	svceq	0x00000004
    82d8:	0000031e 	andeq	r0, r0, lr, lsl r3
    82dc:	45531000 	ldrbmi	r1, [r3, #-0]
    82e0:	00010054 	andeq	r0, r1, r4, asr r0
    82e4:	00134203 	andseq	r4, r3, r3, lsl #4
    82e8:	03bc0600 			; <UNDEFINED> instruction: 0x03bc0600
    82ec:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
    82f0:	3c01070e 	stccc	7, cr0, [r1], {14}
    82f4:	06000000 	streq	r0, [r0], -r0
    82f8:	04f201bf 	ldrbteq	r0, [r2], #447	; 0x1bf
    82fc:	0b0f0000 	bleq	3c8304 <_Min_Heap_Size+0x3c7b04>
    8300:	0000001a 	andeq	r0, r0, sl, lsl r0
    8304:	0019f50f 	andseq	pc, r9, pc, lsl #10
    8308:	02000100 	andeq	r0, r0, #0, 2
    830c:	06bf0408 	ldrteq	r0, [pc], r8, lsl #8
    8310:	070e0000 	streq	r0, [lr, -r0]
    8314:	00003c01 	andeq	r3, r0, r1, lsl #24
    8318:	01270700 			; <UNDEFINED> instruction: 0x01270700
    831c:	00000520 	andeq	r0, r0, r0, lsr #10
    8320:	00034a0f 	andeq	r4, r3, pc, lsl #20
    8324:	ad0f0000 	stcge	0, cr0, [pc, #-0]	; 832c <_Min_Heap_Size+0x7b2c>
    8328:	01000006 	tsteq	r0, r6
    832c:	0008e30f 	andeq	lr, r8, pc, lsl #6
    8330:	2b0f0200 	blcs	3c8b38 <_Min_Heap_Size+0x3c8338>
    8334:	03000003 	movweq	r0, #3
    8338:	15770300 	ldrbne	r0, [r7, #-768]!	; 0xfffffd00
    833c:	2c070000 	stccs	0, cr0, [r7], {-0}
    8340:	0004f903 	andeq	pc, r4, r3, lsl #18
    8344:	08181100 	ldmdaeq	r8, {r8, ip}
    8348:	0590092d 	ldreq	r0, [r0, #2349]	; 0x92d
    834c:	80120000 	andshi	r0, r2, r0
    8350:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    8354:	00bc0c2f 	adcseq	r0, ip, pc, lsr #24
    8358:	23020000 	movwcs	r0, #8192	; 0x2000
    835c:	064c1200 	strbeq	r1, [ip], -r0, lsl #4
    8360:	32080000 	andcc	r0, r8, #0
    8364:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    8368:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    836c:	00008912 	andeq	r8, r0, r2, lsl r9
    8370:	0c350800 	ldceq	8, cr0, [r5], #-0
    8374:	000000bc 	strheq	r0, [r0], -ip
    8378:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    837c:	0000008e 	andeq	r0, r0, lr, lsl #1
    8380:	bc0c3808 	stclt	8, cr3, [ip], {8}
    8384:	02000000 	andeq	r0, r0, #0
    8388:	93120c23 	tstls	r2, #8960	; 0x2300
    838c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    8390:	00bc0c3c 	adcseq	r0, ip, ip, lsr ip
    8394:	23020000 	movwcs	r0, #8192	; 0x2000
    8398:	00981210 	addseq	r1, r8, r0, lsl r2
    839c:	3f080000 	svccc	0x00080000
    83a0:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    83a4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    83a8:	08500300 	ldmdaeq	r0, {r8, r9}^
    83ac:	49080000 	stmdbmi	r8, {}	; <UNPREDICTABLE>
    83b0:	00052c02 	andeq	r2, r5, r2, lsl #24
    83b4:	09301100 	ldmdbeq	r0!, {r8, ip}
    83b8:	060f0931 			; <UNDEFINED> instruction: 0x060f0931
    83bc:	ba120000 	blt	4883c4 <_Min_Heap_Size+0x487bc4>
    83c0:	09000003 	stmdbeq	r0, {r0, r1}
    83c4:	00bc0c33 	adcseq	r0, ip, r3, lsr ip
    83c8:	23020000 	movwcs	r0, #8192	; 0x2000
    83cc:	03071200 	movweq	r1, #29184	; 0x7200
    83d0:	36090000 	strcc	r0, [r9], -r0
    83d4:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    83d8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    83dc:	0000e612 	andeq	lr, r0, r2, lsl r6
    83e0:	0c390900 			; <UNDEFINED> instruction: 0x0c390900
    83e4:	000000bc 	strheq	r0, [r0], -ip
    83e8:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    83ec:	00000241 	andeq	r0, r0, r1, asr #4
    83f0:	bc0c3c09 	stclt	12, cr3, [ip], {9}
    83f4:	02000000 	andeq	r0, r0, #0
    83f8:	60120c23 	andsvs	r0, r2, r3, lsr #24
    83fc:	09000002 	stmdbeq	r0, {r1}
    8400:	00bc0c3f 	adcseq	r0, ip, pc, lsr ip
    8404:	23020000 	movwcs	r0, #8192	; 0x2000
    8408:	020c1210 	andeq	r1, ip, #16, 4
    840c:	42090000 	andmi	r0, r9, #0
    8410:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    8414:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    8418:	4c4c5013 	mcrrmi	0, 1, r5, ip, cr3
    841c:	16450900 	strbne	r0, [r5], -r0, lsl #18
    8420:	00000590 	muleq	r0, r0, r5
    8424:	00182302 	andseq	r2, r8, r2, lsl #6
    8428:	00015303 	andeq	r5, r1, r3, lsl #6
    842c:	02460900 	subeq	r0, r6, #0, 18
    8430:	0000059c 	muleq	r0, ip, r5
    8434:	4b091411 	blmi	24d480 <_Min_Heap_Size+0x24cc80>
    8438:	00067009 	andeq	r7, r6, r9
    843c:	08631200 	stmdaeq	r3!, {r9, ip}^
    8440:	4d090000 	stcmi	0, cr0, [r9, #-0]
    8444:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    8448:	00230200 	eoreq	r0, r3, r0, lsl #4
    844c:	00093712 	andeq	r3, r9, r2, lsl r7
    8450:	0c500900 	mrrceq	9, 0, r0, r0, cr0	; <UNPREDICTABLE>
    8454:	000000bc 	strheq	r0, [r0], -ip
    8458:	12042302 	andne	r2, r4, #134217728	; 0x8000000
    845c:	00000407 	andeq	r0, r0, r7, lsl #8
    8460:	bc0c5309 	stclt	3, cr5, [ip], {9}
    8464:	02000000 	andeq	r0, r0, #0
    8468:	57120823 	ldrpl	r0, [r2, -r3, lsr #16]
    846c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    8470:	00bc0c56 	adcseq	r0, ip, r6, asr ip
    8474:	23020000 	movwcs	r0, #8192	; 0x2000
    8478:	0733120c 	ldreq	r1, [r3, -ip, lsl #4]!
    847c:	59090000 	stmdbpl	r9, {}	; <UNPREDICTABLE>
    8480:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    8484:	10230200 	eorne	r0, r3, r0, lsl #4
    8488:	04e70300 	strbteq	r0, [r7], #768	; 0x300
    848c:	5c090000 	stcpl	0, cr0, [r9], {-0}
    8490:	00061b02 	andeq	r1, r6, r2, lsl #22
    8494:	0a141100 	beq	50c89c <_Min_Heap_Size+0x50c09c>
    8498:	06d1092e 	ldrbeq	r0, [r1], lr, lsr #18
    849c:	50130000 	andspl	r0, r3, r0
    84a0:	0a006e69 	beq	23e4c <_Min_Heap_Size+0x2364c>
    84a4:	00bc0c30 	adcseq	r0, ip, r0, lsr ip
    84a8:	23020000 	movwcs	r0, #8192	; 0x2000
    84ac:	069d1200 	ldreq	r1, [sp], r0, lsl #4
    84b0:	330a0000 	movwcc	r0, #40960	; 0xa000
    84b4:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    84b8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    84bc:	0010b912 	andseq	fp, r0, r2, lsl r9
    84c0:	0c360a00 			; <UNDEFINED> instruction: 0x0c360a00
    84c4:	000000bc 	strheq	r0, [r0], -ip
    84c8:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    84cc:	00000ce3 	andeq	r0, r0, r3, ror #25
    84d0:	bc0c390a 			; <UNDEFINED> instruction: 0xbc0c390a
    84d4:	02000000 	andeq	r0, r0, #0
    84d8:	47120c23 	ldrmi	r0, [r2, -r3, lsr #24]
    84dc:	0a000010 	beq	8524 <_Min_Heap_Size+0x7d24>
    84e0:	00bc0c3c 	adcseq	r0, ip, ip, lsr ip
    84e4:	23020000 	movwcs	r0, #8192	; 0x2000
    84e8:	07030010 	smladeq	r3, r0, r0, r0
    84ec:	0a00000e 	beq	852c <_Min_Heap_Size+0x7d2c>
    84f0:	067c023e 			; <UNDEFINED> instruction: 0x067c023e
    84f4:	9f090000 	svcls	0x00090000
    84f8:	0b00001a 	bleq	8568 <_Min_Heap_Size+0x7d68>
    84fc:	00bc11cd 	adcseq	r1, ip, sp, asr #3
    8500:	01010000 	mrseq	r0, (UNDEF: 1)
    8504:	19ac0114 	stmibne	ip!, {r2, r4, r8}
    8508:	4b010000 	blmi	48510 <_Min_Heap_Size+0x47d10>
    850c:	00010d04 	andeq	r0, r1, r4, lsl #26
    8510:	00000000 	andeq	r0, r0, r0
    8514:	02000000 	andeq	r0, r0, #0
    8518:	1501007d 	strne	r0, [r1, #-125]	; 0xffffff83
    851c:	001b6f01 	andseq	r6, fp, r1, lsl #30
    8520:	043a0100 	ldrteq	r0, [sl], #-256	; 0xffffff00
    8524:	00000106 	andeq	r0, r0, r6, lsl #2
    8528:	00000000 	andeq	r0, r0, r0
    852c:	57150000 	ldrpl	r0, [r5, -r0]
    8530:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    8534:	16000007 	strne	r0, [r0], -r7
    8538:	00000000 	andeq	r0, r0, r0
    853c:	000006eb 	andeq	r0, r0, fp, ror #13
    8540:	e4011700 	str	r1, [r1], #-1792	; 0xfffff900
    8544:	0100001a 	tsteq	r0, sl, lsl r0
    8548:	01060420 	tsteq	r6, r0, lsr #8
	...
    8554:	01007d02 	tsteq	r0, r2, lsl #26
    8558:	00000762 	andeq	r0, r0, r2, ror #14
    855c:	0002f518 	andeq	pc, r2, r8, lsl r5	; <UNPREDICTABLE>
    8560:	04200100 	strteq	r0, [r0], #-256	; 0xffffff00
    8564:	00076232 	andeq	r6, r7, r2, lsr r2
    8568:	18500100 	ldmdane	r0, {r8}^
    856c:	00001b50 	andeq	r1, r0, r0, asr fp
    8570:	4f042001 	svcmi	0x00042001
    8574:	00000768 	andeq	r0, r0, r8, ror #14
    8578:	19005101 	stmdbne	r0, {r0, r8, ip, lr}
    857c:	00067004 	andeq	r7, r6, r4
    8580:	bc041900 			; <UNDEFINED> instruction: 0xbc041900
    8584:	17000000 	strne	r0, [r0, -r0]
    8588:	001b5a01 	andseq	r5, fp, r1, lsl #20
    858c:	03d10100 	bicseq	r0, r1, #0, 2
    8590:	0000010d 	andeq	r0, r0, sp, lsl #2
    8594:	00000000 	andeq	r0, r0, r0
    8598:	7d020000 	stcvc	0, cr0, [r2, #-0]
    859c:	07990100 	ldreq	r0, [r9, r0, lsl #2]
    85a0:	ef180000 	svc	0x00180000
    85a4:	01000000 	mrseq	r0, (UNDEF: 0)
    85a8:	993703d1 	ldmdbls	r7!, {r0, r4, r6, r7, r8, r9}
    85ac:	01000007 	tsteq	r0, r7
    85b0:	04190050 	ldreq	r0, [r9], #-80	; 0xffffffb0
    85b4:	0000060f 	andeq	r0, r0, pc, lsl #12
    85b8:	177e011a 			; <UNDEFINED> instruction: 0x177e011a
    85bc:	c4010000 	strgt	r0, [r1], #-0
    85c0:	bc010a03 			; <UNDEFINED> instruction: 0xbc010a03
    85c4:	e0000000 	and	r0, r0, r0
    85c8:	00080011 	andeq	r0, r8, r1, lsl r0
    85cc:	35080012 	strcc	r0, [r8, #-18]	; 0xffffffee
    85d0:	01000057 	qaddeq	r0, r7, r0
    85d4:	000007c9 	andeq	r0, r0, r9, asr #15
    85d8:	0011e616 	andseq	lr, r1, r6, lsl r6
    85dc:	0007f308 	andeq	pc, r7, r8, lsl #6
    85e0:	011a0000 	tsteq	sl, r0
    85e4:	000012ef 	andeq	r1, r0, pc, ror #5
    85e8:	0a03b801 	beq	f65f4 <_Min_Heap_Size+0xf5df4>
    85ec:	0000bc01 	andeq	fp, r0, r1, lsl #24
    85f0:	0011c000 	andseq	ip, r1, r0
    85f4:	0011e008 	andseq	lr, r1, r8
    85f8:	00575508 	subseq	r5, r7, r8, lsl #10
    85fc:	07f30100 	ldrbeq	r0, [r3, r0, lsl #2]!
    8600:	c6160000 	ldrgt	r0, [r6], -r0
    8604:	f3080011 	vqadd.u8	d0, d8, d1
    8608:	00000007 	andeq	r0, r0, r7
    860c:	1afb011b 	bne	ffec8a80 <_estack+0xdfec7848>
    8610:	ad010000 	stcge	0, cr0, [r1, #-0]
    8614:	bc010a03 			; <UNDEFINED> instruction: 0xbc010a03
    8618:	b4000000 	strlt	r0, [r0], #-0
    861c:	c0080011 	andgt	r0, r8, r1, lsl r0
    8620:	02080011 	andeq	r0, r8, #17
    8624:	1a01007d 	bne	48820 <_Min_Heap_Size+0x48020>
    8628:	001aaf01 	andseq	sl, sl, r1, lsl #30
    862c:	03750100 	cmneq	r5, #0, 2
    8630:	00bc0111 	adcseq	r0, ip, r1, lsl r1
	...
    863c:	57750000 	ldrbpl	r0, [r5, -r0]!
    8640:	95010000 	strls	r0, [r1, #-0]
    8644:	1c000008 	stcne	0, cr0, [r0], {8}
    8648:	00001aaa 	andeq	r1, r0, sl, lsr #21
    864c:	0c037701 	stceq	7, cr7, [r3], {1}
    8650:	000000bc 	strheq	r0, [r0], -ip
    8654:	0000579d 	muleq	r0, sp, r7
    8658:	00005795 	muleq	r0, r5, r7
    865c:	001a041c 	andseq	r0, sl, ip, lsl r4
    8660:	03770100 	cmneq	r7, #0, 2
    8664:	0000bc17 	andeq	fp, r0, r7, lsl ip
    8668:	0057db00 	subseq	sp, r7, r0, lsl #22
    866c:	0057d300 	subseq	sp, r7, r0, lsl #6
    8670:	19c01c00 	stmibne	r0, {sl, fp, ip}^
    8674:	77010000 	strvc	r0, [r1, -r0]
    8678:	00bc2403 	adcseq	r2, ip, r3, lsl #8
    867c:	58180000 	ldmdapl	r8, {}	; <UNPREDICTABLE>
    8680:	58120000 	ldmdapl	r2, {}	; <UNPREDICTABLE>
    8684:	451c0000 	ldrmi	r0, [ip, #-0]
    8688:	0100001a 	tsteq	r0, sl, lsl r0
    868c:	bc0c0378 	stclt	3, cr0, [ip], {120}	; 0x78
    8690:	4b000000 	blmi	8698 <_Min_Heap_Size+0x7e98>
    8694:	43000058 	movwmi	r0, #88	; 0x58
    8698:	16000058 			; <UNDEFINED> instruction: 0x16000058
    869c:	00000000 	andeq	r0, r0, r0
    86a0:	00000e3e 	andeq	r0, r0, lr, lsr lr
    86a4:	00000016 	andeq	r0, r0, r6, lsl r0
    86a8:	000e3e00 	andeq	r3, lr, r0, lsl #28
    86ac:	01140000 	tsteq	r4, r0
    86b0:	00001a52 	andeq	r1, r0, r2, asr sl
    86b4:	06035201 	streq	r5, [r3], -r1, lsl #4
    86b8:	00000001 	andeq	r0, r0, r1
    86bc:	00000000 	andeq	r0, r0, r0
    86c0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    86c4:	25011401 	strcs	r1, [r1, #-1025]	; 0xfffffbff
    86c8:	0100001a 	tsteq	r0, sl, lsl r0
    86cc:	01060349 	tsteq	r6, r9, asr #6
	...
    86d8:	01007d02 	tsteq	r0, r2, lsl #26
    86dc:	1a650115 	bne	1948b38 <_Min_Heap_Size+0x1948338>
    86e0:	07010000 	streq	r0, [r1, -r0]
    86e4:	00010603 	andeq	r0, r1, r3, lsl #12
    86e8:	00000000 	andeq	r0, r0, r0
    86ec:	86000000 	strhi	r0, [r0], -r0
    86f0:	01000058 	qaddeq	r0, r8, r0
    86f4:	00000a19 	andeq	r0, r0, r9, lsl sl
    86f8:	001b471d 	andseq	r4, fp, sp, lsl r7
    86fc:	03070100 	movweq	r0, #28928	; 0x7100
    8700:	0000bc21 	andeq	fp, r0, r1, lsr #24
    8704:	0058d800 	subseq	sp, r8, r0, lsl #16
    8708:	0058ca00 	subseq	ip, r8, r0, lsl #20
    870c:	1ad61d00 	bne	ff58fb14 <_estack+0xdf58e8dc>
    8710:	07010000 	streq	r0, [r1, -r0]
    8714:	00bc3403 	adcseq	r3, ip, r3, lsl #8
    8718:	593b0000 	ldmdbpl	fp!, {}	; <UNPREDICTABLE>
    871c:	59330000 	ldmdbpl	r3!, {}	; <UNPREDICTABLE>
    8720:	1a1d0000 	bne	748728 <_Min_Heap_Size+0x747f28>
    8724:	0100001a 	tsteq	r0, sl, lsl r0
    8728:	bc4c0307 	mcrrlt	3, 0, r0, ip, cr7
    872c:	7d000000 	stcvc	0, cr0, [r0, #-0]
    8730:	6f000059 	svcvs	0x00000059
    8734:	1e000059 	mcrne	0, 0, r0, cr0, cr9, {2}
    8738:	00000d27 	andeq	r0, r0, r7, lsr #26
    873c:	14030901 	strne	r0, [r3], #-2305	; 0xfffff6ff
    8740:	000006d1 	ldrdeq	r0, [r0], -r1
    8744:	1f5c9102 	svcne	0x005c9102
	...
    8750:	0000094c 	andeq	r0, r0, ip, asr #18
    8754:	0001b61e 	andeq	fp, r1, lr, lsl r6
    8758:	03130100 	tsteq	r3, #0, 2
    875c:	0000c805 	andeq	ip, r0, r5, lsl #16
    8760:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    8764:	00001f00 	andeq	r1, r0, r0, lsl #30
    8768:	00000000 	andeq	r0, r0, r0
    876c:	096a0000 	stmdbeq	sl!, {}^	; <UNPREDICTABLE>
    8770:	b61e0000 	ldrlt	r0, [lr], -r0
    8774:	01000001 	tsteq	r0, r1
    8778:	c805032b 	stmdagt	r5, {r0, r1, r3, r5, r8, r9}
    877c:	02000000 	andeq	r0, r0, #0
    8780:	20005891 	mulcs	r0, r1, r8
    8784:	00000000 	andeq	r0, r0, r0
    8788:	00000e49 	andeq	r0, r0, r9, asr #28
    878c:	00000987 	andeq	r0, r0, r7, lsl #19
    8790:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    8794:	0200000c 	andeq	r0, r0, #12
    8798:	51012140 	tstpl	r1, r0, asr #2
    879c:	005c9102 	subseq	r9, ip, r2, lsl #2
    87a0:	00000020 	andeq	r0, r0, r0, lsr #32
    87a4:	000e5700 	andeq	r5, lr, r0, lsl #14
    87a8:	0009a500 	andeq	sl, r9, r0, lsl #10
    87ac:	50012100 	andpl	r2, r1, r0, lsl #2
    87b0:	00000305 	andeq	r0, r0, r5, lsl #6
    87b4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    87b8:	0b0a0351 	bleq	289504 <_Min_Heap_Size+0x288d04>
    87bc:	00200003 	eoreq	r0, r0, r3
    87c0:	57000000 	strpl	r0, [r0, -r0]
    87c4:	c300000e 	movwgt	r0, #14
    87c8:	21000009 	tstcs	r0, r9
    87cc:	03055001 	movweq	r5, #20481	; 0x5001
    87d0:	00000000 	andeq	r0, r0, r0
    87d4:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    87d8:	00030c0a 	andeq	r0, r3, sl, lsl #24
    87dc:	00000020 	andeq	r0, r0, r0, lsr #32
    87e0:	000e5700 	andeq	r5, lr, r0, lsl #14
    87e4:	0009e100 	andeq	lr, r9, r0, lsl #2
    87e8:	50012100 	andpl	r2, r1, r0, lsl #2
    87ec:	00000305 	andeq	r0, r0, r5, lsl #6
    87f0:	01210000 			; <UNDEFINED> instruction: 0x01210000
    87f4:	100a0351 	andne	r0, sl, r1, asr r3
    87f8:	00200003 	eoreq	r0, r0, r3
    87fc:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    8800:	fe00000e 	cdp2	0, 0, cr0, cr0, cr14, {0}
    8804:	21000009 	tstcs	r0, r9
    8808:	0c055001 	stceq	0, cr5, [r5], {1}
    880c:	40020800 	andmi	r0, r2, r0, lsl #16
    8810:	02510121 	subseq	r0, r1, #1073741832	; 0x40000008
    8814:	22005c91 	andcs	r5, r0, #37120	; 0x9100
    8818:	00000000 	andeq	r0, r0, r0
    881c:	00000e57 	andeq	r0, r0, r7, asr lr
    8820:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    8824:	00000003 	andeq	r0, r0, r3
    8828:	51012100 	mrspl	r2, (UNDEF: 17)
    882c:	03280a03 			; <UNDEFINED> instruction: 0x03280a03
    8830:	011a0000 	tsteq	sl, r0
    8834:	000007f5 	strdeq	r0, [r0], -r5
    8838:	13024f01 	movwne	r4, #12033	; 0x2f01
    883c:	00052001 	andeq	r2, r5, r1
	...
    8848:	0059d800 	subseq	sp, r9, r0, lsl #16
    884c:	0b4d0100 	bleq	1348c54 <_Min_Heap_Size+0x1348454>
    8850:	f51d0000 			; <UNDEFINED> instruction: 0xf51d0000
    8854:	01000002 	tsteq	r0, r2
    8858:	623c024f 	eorsvs	r0, ip, #-268435452	; 0xf0000004
    885c:	1e000007 	cdpne	0, 0, cr0, cr0, cr7, {0}
    8860:	1000005a 	andne	r0, r0, sl, asr r0
    8864:	1d00005a 	stcne	0, cr0, [r0, #-360]	; 0xfffffe98
    8868:	00001b51 	andeq	r1, r0, r1, asr fp
    886c:	58024f01 	stmdapl	r2, {r0, r8, r9, sl, fp, lr}
    8870:	000000bc 	strheq	r0, [r0], -ip
    8874:	00005a82 	andeq	r5, r0, r2, lsl #21
    8878:	00005a76 	andeq	r5, r0, r6, ror sl
    887c:	0017c21c 	andseq	ip, r7, ip, lsl r2
    8880:	02510100 	subseq	r0, r1, #0, 2
    8884:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    8888:	005ad000 	subseq	sp, sl, r0
    888c:	005acc00 	subseq	ip, sl, r0, lsl #24
    8890:	00001600 	andeq	r1, r0, r0, lsl #12
    8894:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8898:	00160000 	andseq	r0, r6, r0
    889c:	66000000 	strvs	r0, [r0], -r0
    88a0:	2000000e 	andcs	r0, r0, lr
    88a4:	00000000 	andeq	r0, r0, r0
    88a8:	00000e57 	andeq	r0, r0, r7, asr lr
    88ac:	00000aa8 	andeq	r0, r0, r8, lsr #21
    88b0:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    88b4:	00000003 	andeq	r0, r0, r3
    88b8:	51012100 	mrspl	r2, (UNDEF: 17)
    88bc:	025a0a03 	subseq	r0, sl, #12288	; 0x3000
    88c0:	00002000 	andeq	r2, r0, r0
    88c4:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    88c8:	0ac60000 	beq	ff1888d0 <_estack+0xdf187698>
    88cc:	01210000 			; <UNDEFINED> instruction: 0x01210000
    88d0:	00030550 	andeq	r0, r3, r0, asr r5
    88d4:	21000000 	mrscs	r0, (UNDEF: 0)
    88d8:	0a035101 	beq	dcce4 <_Min_Heap_Size+0xdc4e4>
    88dc:	2000025b 	andcs	r0, r0, fp, asr r2
    88e0:	00000000 	andeq	r0, r0, r0
    88e4:	00000e57 	andeq	r0, r0, r7, asr lr
    88e8:	00000ae4 	andeq	r0, r0, r4, ror #21
    88ec:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    88f0:	00000003 	andeq	r0, r0, r3
    88f4:	51012100 	mrspl	r2, (UNDEF: 17)
    88f8:	027e0a03 	rsbseq	r0, lr, #12288	; 0x3000
    88fc:	00002000 	andeq	r2, r0, r0
    8900:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    8904:	0b020000 	bleq	8890c <_Min_Heap_Size+0x8810c>
    8908:	01210000 			; <UNDEFINED> instruction: 0x01210000
    890c:	00030550 	andeq	r0, r3, r0, asr r5
    8910:	21000000 	mrscs	r0, (UNDEF: 0)
    8914:	0a035101 	beq	dcd20 <_Min_Heap_Size+0xdc520>
    8918:	16000285 	strne	r0, [r0], -r5, lsl #5
    891c:	00000000 	andeq	r0, r0, r0
    8920:	0000080e 	andeq	r0, r0, lr, lsl #16
    8924:	00000016 	andeq	r0, r0, r6, lsl r0
    8928:	000e7400 	andeq	r7, lr, r0, lsl #8
    892c:	00002000 	andeq	r2, r0, r0
    8930:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    8934:	0b320000 	bleq	c8893c <_Min_Heap_Size+0xc8813c>
    8938:	01210000 			; <UNDEFINED> instruction: 0x01210000
    893c:	00030550 	andeq	r0, r3, r0, asr r5
    8940:	21000000 	mrscs	r0, (UNDEF: 0)
    8944:	0a035101 	beq	dcd50 <_Min_Heap_Size+0xdc550>
    8948:	220002c3 	andcs	r0, r0, #805306380	; 0x3000000c
    894c:	00000000 	andeq	r0, r0, r0
    8950:	00000e57 	andeq	r0, r0, r7, asr lr
    8954:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    8958:	00000003 	andeq	r0, r0, r3
    895c:	51012100 	mrspl	r2, (UNDEF: 17)
    8960:	02ca0a03 	sbceq	r0, sl, #12288	; 0x3000
    8964:	01230000 			; <UNDEFINED> instruction: 0x01230000
    8968:	000006d9 	ldrdeq	r0, [r0], -r9
    896c:	011adb01 	tsteq	sl, r1, lsl #22
    8970:	00000520 	andeq	r0, r0, r0, lsr #10
	...
    897c:	00005aee 	andeq	r5, r0, lr, ror #21
    8980:	000e2401 	andeq	r2, lr, r1, lsl #8
    8984:	00ef2400 	rsceq	r2, pc, r0, lsl #8
    8988:	db010000 	blle	48990 <_Min_Heap_Size+0x48190>
    898c:	00079941 	andeq	r9, r7, r1, asr #18
    8990:	005b6400 	subseq	r6, fp, r0, lsl #8
    8994:	005b4a00 	subseq	r4, fp, r0, lsl #20
    8998:	17c22500 	strbne	r2, [r2, r0, lsl #10]
    899c:	dd010000 	stcle	0, cr0, [r1, #-0]
    89a0:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    89a4:	005c3b00 	subseq	r3, ip, r0, lsl #22
    89a8:	005c0700 	subseq	r0, ip, r0, lsl #14
    89ac:	1a942500 	bne	fe511db4 <_estack+0xde510b7c>
    89b0:	dd010000 	stcle	0, cr0, [r1, #-0]
    89b4:	0000bc17 	andeq	fp, r0, r7, lsl ip
    89b8:	005d6500 	subseq	r6, sp, r0, lsl #10
    89bc:	005d6100 	subseq	r6, sp, r0, lsl #2
    89c0:	03c02600 	biceq	r2, r0, #0, 12
    89c4:	0c390000 	ldceq	0, cr0, [r9], #-0
    89c8:	c51c0000 	ldrgt	r0, [ip, #-0]
    89cc:	01000019 	tsteq	r0, r9, lsl r0
    89d0:	cb160187 	blgt	588ff4 <_Min_Heap_Size+0x5887f4>
    89d4:	8f000004 	svchi	0x00000004
    89d8:	8300005d 	movwhi	r0, #93	; 0x5d
    89dc:	1f00005d 	svcne	0x0000005d
	...
    89e8:	00000be4 	andeq	r0, r0, r4, ror #23
    89ec:	0001b61e 	andeq	fp, r1, lr, lsl r6
    89f0:	01900100 	orrseq	r0, r0, r0, lsl #2
    89f4:	0000c807 	andeq	ip, r0, r7, lsl #16
    89f8:	6c910200 	lfmvs	f0, 4, [r1], {0}
    89fc:	00001600 	andeq	r1, r0, r0, lsl #12
    8a00:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8a04:	00160000 	andseq	r0, r6, r0
    8a08:	66000000 	strvs	r0, [r0], -r0
    8a0c:	2000000e 	andcs	r0, r0, lr
    8a10:	00000000 	andeq	r0, r0, r0
    8a14:	00000e57 	andeq	r0, r0, r7, asr lr
    8a18:	00000c14 	andeq	r0, r0, r4, lsl ip
    8a1c:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    8a20:	00000003 	andeq	r0, r0, r3
    8a24:	51012100 	mrspl	r2, (UNDEF: 17)
    8a28:	018a0a03 	orreq	r0, sl, r3, lsl #20
    8a2c:	00001600 	andeq	r1, r0, r0, lsl #12
    8a30:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8a34:	00160000 	andseq	r0, r6, r0
    8a38:	66000000 	strvs	r0, [r0], -r0
    8a3c:	1600000e 	strne	r0, [r0], -lr
    8a40:	00000000 	andeq	r0, r0, r0
    8a44:	00000e66 	andeq	r0, r0, r6, ror #28
    8a48:	00000016 	andeq	r0, r0, r6, lsl r0
    8a4c:	000e6600 	andeq	r6, lr, r0, lsl #12
    8a50:	00160000 	andseq	r0, r6, r0
    8a54:	66000000 	strvs	r0, [r0], -r0
    8a58:	1600000e 	strne	r0, [r0], -lr
    8a5c:	00000000 	andeq	r0, r0, r0
    8a60:	00000e66 	andeq	r0, r0, r6, ror #28
    8a64:	00000020 	andeq	r0, r0, r0, lsr #32
    8a68:	000e5700 	andeq	r5, lr, r0, lsl #14
    8a6c:	000c6800 	andeq	r6, ip, r0, lsl #16
    8a70:	50012100 	andpl	r2, r1, r0, lsl #2
    8a74:	00000305 	andeq	r0, r0, r5, lsl #6
    8a78:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8a7c:	e6080251 			; <UNDEFINED> instruction: 0xe6080251
    8a80:	00002000 	andeq	r2, r0, r0
    8a84:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    8a88:	0c850000 	stceq	0, cr0, [r5], {0}
    8a8c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8a90:	00030550 	andeq	r0, r3, r0, asr r5
    8a94:	21000000 	mrscs	r0, (UNDEF: 0)
    8a98:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    8a9c:	001600eb 	andseq	r0, r6, fp, ror #1
    8aa0:	66000000 	strvs	r0, [r0], -r0
    8aa4:	1600000e 	strne	r0, [r0], -lr
    8aa8:	00000000 	andeq	r0, r0, r0
    8aac:	00000e66 	andeq	r0, r0, r6, ror #28
    8ab0:	00000016 	andeq	r0, r0, r6, lsl r0
    8ab4:	000e6600 	andeq	r6, lr, r0, lsl #12
    8ab8:	00001600 	andeq	r1, r0, r0, lsl #12
    8abc:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8ac0:	00200000 	eoreq	r0, r0, r0
    8ac4:	57000000 	strpl	r0, [r0, -r0]
    8ac8:	c700000e 	strgt	r0, [r0, -lr]
    8acc:	2100000c 	tstcs	r0, ip
    8ad0:	03055001 	movweq	r5, #20481	; 0x5001
    8ad4:	00000000 	andeq	r0, r0, r0
    8ad8:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8adc:	00011d0a 	andeq	r1, r1, sl, lsl #26
    8ae0:	00000020 	andeq	r0, r0, r0, lsr #32
    8ae4:	000e5700 	andeq	r5, lr, r0, lsl #14
    8ae8:	000ce500 	andeq	lr, ip, r0, lsl #10
    8aec:	50012100 	andpl	r2, r1, r0, lsl #2
    8af0:	00000305 	andeq	r0, r0, r5, lsl #6
    8af4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8af8:	1e0a0351 	mcrne	3, 0, r0, cr10, cr1, {2}
    8afc:	00160001 	andseq	r0, r6, r1
    8b00:	66000000 	strvs	r0, [r0], -r0
    8b04:	1600000e 	strne	r0, [r0], -lr
    8b08:	00000000 	andeq	r0, r0, r0
    8b0c:	00000e66 	andeq	r0, r0, r6, ror #28
    8b10:	00000016 	andeq	r0, r0, r6, lsl r0
    8b14:	000e6600 	andeq	r6, lr, r0, lsl #12
    8b18:	00001600 	andeq	r1, r0, r0, lsl #12
    8b1c:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8b20:	00200000 	eoreq	r0, r0, r0
    8b24:	57000000 	strpl	r0, [r0, -r0]
    8b28:	2700000e 	strcs	r0, [r0, -lr]
    8b2c:	2100000d 	tstcs	r0, sp
    8b30:	03055001 	movweq	r5, #20481	; 0x5001
    8b34:	00000000 	andeq	r0, r0, r0
    8b38:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8b3c:	00015e0a 	andeq	r5, r1, sl, lsl #28
    8b40:	00000016 	andeq	r0, r0, r6, lsl r0
    8b44:	000e6600 	andeq	r6, lr, r0, lsl #12
    8b48:	00001600 	andeq	r1, r0, r0, lsl #12
    8b4c:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8b50:	00160000 	andseq	r0, r6, r0
    8b54:	66000000 	strvs	r0, [r0], -r0
    8b58:	1600000e 	strne	r0, [r0], -lr
    8b5c:	00000000 	andeq	r0, r0, r0
    8b60:	00000e66 	andeq	r0, r0, r6, ror #28
    8b64:	00000020 	andeq	r0, r0, r0, lsr #32
    8b68:	000e5700 	andeq	r5, lr, r0, lsl #14
    8b6c:	000d6900 	andeq	r6, sp, r0, lsl #18
    8b70:	50012100 	andpl	r2, r1, r0, lsl #2
    8b74:	00000305 	andeq	r0, r0, r5, lsl #6
    8b78:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8b7c:	cd0a0351 	stcgt	3, cr0, [sl, #-324]	; 0xfffffebc
    8b80:	00200001 	eoreq	r0, r0, r1
    8b84:	57000000 	strpl	r0, [r0, -r0]
    8b88:	8700000e 	strhi	r0, [r0, -lr]
    8b8c:	2100000d 	tstcs	r0, sp
    8b90:	03055001 	movweq	r5, #20481	; 0x5001
    8b94:	00000000 	andeq	r0, r0, r0
    8b98:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8b9c:	0001d60a 	andeq	sp, r1, sl, lsl #12
    8ba0:	00000020 	andeq	r0, r0, r0, lsr #32
    8ba4:	000e5700 	andeq	r5, lr, r0, lsl #14
    8ba8:	000da500 	andeq	sl, sp, r0, lsl #10
    8bac:	50012100 	andpl	r2, r1, r0, lsl #2
    8bb0:	00000305 	andeq	r0, r0, r5, lsl #6
    8bb4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8bb8:	d70a0351 	smlsdle	sl, r1, r3, r0
    8bbc:	00200001 	eoreq	r0, r0, r1
    8bc0:	57000000 	strpl	r0, [r0, -r0]
    8bc4:	c300000e 	movwgt	r0, #14
    8bc8:	2100000d 	tstcs	r0, sp
    8bcc:	03055001 	movweq	r5, #20481	; 0x5001
    8bd0:	00000000 	andeq	r0, r0, r0
    8bd4:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8bd8:	0001d80a 	andeq	sp, r1, sl, lsl #16
    8bdc:	00000020 	andeq	r0, r0, r0, lsr #32
    8be0:	000e5700 	andeq	r5, lr, r0, lsl #14
    8be4:	000de100 	andeq	lr, sp, r0, lsl #2
    8be8:	50012100 	andpl	r2, r1, r0, lsl #2
    8bec:	00000305 	andeq	r0, r0, r5, lsl #6
    8bf0:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8bf4:	d90a0351 	stmdble	sl, {r0, r4, r6, r8, r9}
    8bf8:	00200001 	eoreq	r0, r0, r1
    8bfc:	57000000 	strpl	r0, [r0, -r0]
    8c00:	ff00000e 			; <UNDEFINED> instruction: 0xff00000e
    8c04:	2100000d 	tstcs	r0, sp
    8c08:	03055001 	movweq	r5, #20481	; 0x5001
    8c0c:	00000000 	andeq	r0, r0, r0
    8c10:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8c14:	0001da0a 	andeq	sp, r1, sl, lsl #20
    8c18:	00000016 	andeq	r0, r0, r6, lsl r0
    8c1c:	000e6600 	andeq	r6, lr, r0, lsl #12
    8c20:	00001600 	andeq	r1, r0, r0, lsl #12
    8c24:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8c28:	00160000 	andseq	r0, r6, r0
    8c2c:	66000000 	strvs	r0, [r0], -r0
    8c30:	1600000e 	strne	r0, [r0], -lr
    8c34:	00000000 	andeq	r0, r0, r0
    8c38:	00000e66 	andeq	r0, r0, r6, ror #28
    8c3c:	c7012700 	strgt	r2, [r1, -r0, lsl #14]
    8c40:	0100001a 	tsteq	r0, sl, lsl r0
    8c44:	20011ac8 	andcs	r1, r1, r8, asr #21
    8c48:	00000005 	andeq	r0, r0, r5
    8c4c:	00000000 	andeq	r0, r0, r0
    8c50:	02000000 	andeq	r0, r0, #0
    8c54:	2801007d 	stmdacs	r1, {r0, r2, r3, r4, r5, r6}
    8c58:	17360101 	ldrne	r0, [r6, -r1, lsl #2]!
    8c5c:	17360000 	ldrne	r0, [r6, -r0]!
    8c60:	01290000 			; <UNDEFINED> instruction: 0x01290000
    8c64:	000e8c01 	andeq	r8, lr, r1, lsl #24
    8c68:	000e8c00 	andeq	r8, lr, r0, lsl #24
    8c6c:	07e00a00 	strbeq	r0, [r0, r0, lsl #20]!
    8c70:	8c01012a 	stfhis	f0, [r1], {42}	; 0x2a
    8c74:	8c00000c 	stchi	0, cr0, [r0], {12}
    8c78:	0c00000c 	stceq	0, cr0, [r0], {12}
    8c7c:	290801e6 	stmdbcs	r8, {r1, r2, r5, r6, r7, r8}
    8c80:	161c0101 	ldrne	r0, [ip], -r1, lsl #2
    8c84:	161c0000 	ldrne	r0, [ip], -r0
    8c88:	ea0b0000 	b	2c8c90 <_Min_Heap_Size+0x2c8490>
    8c8c:	0101290a 	tsteq	r1, sl, lsl #18
    8c90:	00001a87 	andeq	r1, r0, r7, lsl #21
    8c94:	00001a87 	andeq	r1, r0, r7, lsl #21
    8c98:	0013df0b 	andseq	sp, r3, fp, lsl #30
    8c9c:	000009da 	ldrdeq	r0, [r0], -sl
    8ca0:	10630002 	rsbne	r0, r3, r2
    8ca4:	01040000 	mrseq	r0, (UNDEF: 4)
    8ca8:	00000588 	andeq	r0, r0, r8, lsl #11
    8cac:	001c860c 	andseq	r8, ip, ip, lsl #12
    8cb0:	00086d00 	andeq	r6, r8, r0, lsl #26
    8cb4:	00045000 	andeq	r5, r4, r0
	...
    8cc0:	0066a100 	rsbeq	sl, r6, r0, lsl #2
    8cc4:	06010200 	streq	r0, [r1], -r0, lsl #4
    8cc8:	00000576 	andeq	r0, r0, r6, ror r5
    8ccc:	00006603 	andeq	r6, r0, r3, lsl #12
    8cd0:	182b0200 	stmdane	fp!, {r9}
    8cd4:	0000003c 	andeq	r0, r0, ip, lsr r0
    8cd8:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    8cdc:	02000005 	andeq	r0, r0, #5
    8ce0:	03fd0502 	mvnseq	r0, #8388608	; 0x800000
    8ce4:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    8ce8:	02000006 	andeq	r0, r0, #6
    8cec:	00561939 	subseq	r1, r6, r9, lsr r9
    8cf0:	02020000 	andeq	r0, r2, #0
    8cf4:	00078f07 	andeq	r8, r7, r7, lsl #30
    8cf8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    8cfc:	000002ec 	andeq	r0, r0, ip, ror #5
    8d00:	0002c203 	andeq	ip, r2, r3, lsl #4
    8d04:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    8d08:	00000070 	andeq	r0, r0, r0, ror r0
    8d0c:	b3070402 	movwlt	r0, #29698	; 0x7402
    8d10:	02000000 	andeq	r0, r0, #0
    8d14:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
    8d18:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    8d1c:	0000ae07 	andeq	sl, r0, r7, lsl #28
    8d20:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    8d24:	00746e69 	rsbseq	r6, r4, r9, ror #28
    8d28:	b8070402 	stmdalt	r7, {r1, sl}
    8d2c:	03000000 	movweq	r0, #0
    8d30:	00000068 	andeq	r0, r0, r8, rrx
    8d34:	30131803 	andscc	r1, r3, r3, lsl #16
    8d38:	03000000 	movweq	r0, #0
    8d3c:	000006f7 	strdeq	r0, [r0], -r7
    8d40:	4a142403 	bmi	511d54 <_Min_Heap_Size+0x511554>
    8d44:	03000000 	movweq	r0, #0
    8d48:	000002c4 	andeq	r0, r0, r4, asr #5
    8d4c:	64143003 	ldrvs	r3, [r4], #-3
    8d50:	05000000 	streq	r0, [r0, #-0]
    8d54:	000000ab 	andeq	r0, r0, fp, lsr #1
    8d58:	0000ab06 	andeq	sl, r0, r6, lsl #22
    8d5c:	0000cc00 	andeq	ip, r0, r0, lsl #24
    8d60:	008c0700 	addeq	r0, ip, r0, lsl #14
    8d64:	00010000 	andeq	r0, r1, r0
    8d68:	5a041808 	bpl	10ed90 <_Min_Heap_Size+0x10e590>
    8d6c:	01360901 	teqeq	r6, r1, lsl #18
    8d70:	49090000 	stmdbmi	r9, {}	; <UNPREDICTABLE>
    8d74:	0400524d 	streq	r5, [r0], #-589	; 0xfffffdb3
    8d78:	b711015c 			; <UNDEFINED> instruction: 0xb711015c
    8d7c:	02000000 	andeq	r0, r0, #0
    8d80:	45090023 	strmi	r0, [r9, #-35]	; 0xffffffdd
    8d84:	0400524d 	streq	r5, [r0], #-589	; 0xfffffdb3
    8d88:	b711015d 			; <UNDEFINED> instruction: 0xb711015d
    8d8c:	02000000 	andeq	r0, r0, #0
    8d90:	7b0a0423 	blvc	289e24 <_Min_Heap_Size+0x289624>
    8d94:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    8d98:	b711015e 			; <UNDEFINED> instruction: 0xb711015e
    8d9c:	02000000 	andeq	r0, r0, #0
    8da0:	440a0823 	strmi	r0, [sl], #-2083	; 0xfffff7dd
    8da4:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    8da8:	b711015f 			; <UNDEFINED> instruction: 0xb711015f
    8dac:	02000000 	andeq	r0, r0, #0
    8db0:	d60a0c23 	strle	r0, [sl], -r3, lsr #24
    8db4:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    8db8:	b7110160 	ldrlt	r0, [r1, -r0, ror #2]
    8dbc:	02000000 	andeq	r0, r0, #0
    8dc0:	50091023 	andpl	r1, r9, r3, lsr #32
    8dc4:	61040052 	qaddvs	r0, r2, r4
    8dc8:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8dcc:	23020000 	movwcs	r0, #8192	; 0x2000
    8dd0:	de0b0014 	mcrle	0, 0, r0, cr11, cr4, {0}
    8dd4:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    8dd8:	cc030162 	stfgts	f0, [r3], {98}	; 0x62
    8ddc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    8de0:	01ae0428 			; <UNDEFINED> instruction: 0x01ae0428
    8de4:	0001de09 	andeq	sp, r1, r9, lsl #28
    8de8:	123d0a00 	eorsne	r0, sp, #0, 20
    8dec:	b0040000 	andlt	r0, r4, r0
    8df0:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8df4:	23020000 	movwcs	r0, #8192	; 0x2000
    8df8:	114f0a00 	cmpne	pc, r0, lsl #20
    8dfc:	b1040000 	mrslt	r0, (UNDEF: 4)
    8e00:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8e04:	23020000 	movwcs	r0, #8192	; 0x2000
    8e08:	0fcd0a04 	svceq	0x00cd0a04
    8e0c:	b2040000 	andlt	r0, r4, #0
    8e10:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8e14:	23020000 	movwcs	r0, #8192	; 0x2000
    8e18:	10170a08 	andsne	r0, r7, r8, lsl #20
    8e1c:	b3040000 	movwlt	r0, #16384	; 0x4000
    8e20:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8e24:	23020000 	movwcs	r0, #8192	; 0x2000
    8e28:	4449090c 	strbmi	r0, [r9], #-2316	; 0xfffff6f4
    8e2c:	b4040052 	strlt	r0, [r4], #-82	; 0xffffffae
    8e30:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8e34:	23020000 	movwcs	r0, #8192	; 0x2000
    8e38:	444f0910 	strbmi	r0, [pc], #-2320	; 8e40 <_Min_Heap_Size+0x8640>
    8e3c:	b5040052 	strlt	r0, [r4, #-82]	; 0xffffffae
    8e40:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8e44:	23020000 	movwcs	r0, #8192	; 0x2000
    8e48:	11f00a14 	mvnsne	r0, r4, lsl sl
    8e4c:	b6040000 	strlt	r0, [r4], -r0
    8e50:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8e54:	23020000 	movwcs	r0, #8192	; 0x2000
    8e58:	0fbb0a18 	svceq	0x00bb0a18
    8e5c:	b7040000 	strlt	r0, [r4, -r0]
    8e60:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8e64:	23020000 	movwcs	r0, #8192	; 0x2000
    8e68:	4641091c 			; <UNDEFINED> instruction: 0x4641091c
    8e6c:	b8040052 	stmdalt	r4, {r1, r4, r6}
    8e70:	01ee1101 	mvneq	r1, r1, lsl #2
    8e74:	23020000 	movwcs	r0, #8192	; 0x2000
    8e78:	b7060020 	strlt	r0, [r6, -r0, lsr #32]
    8e7c:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    8e80:	07000001 	streq	r0, [r0, -r1]
    8e84:	0000008c 	andeq	r0, r0, ip, lsl #1
    8e88:	de050001 	cdple	0, 0, cr0, cr5, cr1, {0}
    8e8c:	0b000001 	bleq	8e98 <_Min_Heap_Size+0x8698>
    8e90:	000011f5 	strdeq	r1, [r0], -r5
    8e94:	0301b904 	movweq	fp, #6404	; 0x1904
    8e98:	00000143 	andeq	r0, r0, r3, asr #2
    8e9c:	bf042408 	svclt	0x00042408
    8ea0:	025b0901 	subseq	r0, fp, #16384	; 0x4000
    8ea4:	ab0a0000 	blge	288eac <_Min_Heap_Size+0x2886ac>
    8ea8:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    8eac:	b71101c1 	ldrlt	r0, [r1, -r1, asr #3]
    8eb0:	02000000 	andeq	r0, r0, #0
    8eb4:	50090023 	andpl	r0, r9, r3, lsr #32
    8eb8:	0400434d 	streq	r4, [r0], #-845	; 0xfffffcb3
    8ebc:	b71101c2 	ldrlt	r0, [r1, -r2, asr #3]
    8ec0:	02000000 	andeq	r0, r0, #0
    8ec4:	b20a0423 	andlt	r0, sl, #587202560	; 0x23000000
    8ec8:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    8ecc:	6b1101c3 	blvs	4495e0 <_Min_Heap_Size+0x448de0>
    8ed0:	02000002 	andeq	r0, r0, #2
    8ed4:	bf0a0823 	svclt	0x000a0823
    8ed8:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    8edc:	bc1101c4 	ldflts	f0, [r1], {196}	; 0xc4
    8ee0:	02000000 	andeq	r0, r0, #0
    8ee4:	0e0a1823 	cdpeq	8, 0, cr1, cr10, cr3, {1}
    8ee8:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    8eec:	b71101c5 	ldrlt	r0, [r1, -r5, asr #3]
    8ef0:	02000000 	andeq	r0, r0, #0
    8ef4:	06002023 	streq	r2, [r0], -r3, lsr #32
    8ef8:	000000b7 	strheq	r0, [r0], -r7
    8efc:	0000026b 	andeq	r0, r0, fp, ror #4
    8f00:	00008c07 	andeq	r8, r0, r7, lsl #24
    8f04:	05000300 	streq	r0, [r0, #-768]	; 0xfffffd00
    8f08:	0000025b 	andeq	r0, r0, fp, asr r2
    8f0c:	001c6c0b 	andseq	r6, ip, fp, lsl #24
    8f10:	01c60400 	biceq	r0, r6, r0, lsl #8
    8f14:	00020003 	andeq	r0, r2, r3
    8f18:	04880800 	streq	r0, [r8], #2048	; 0x800
    8f1c:	690901f4 	stmdbvs	r9, {r2, r4, r5, r6, r7, r8}
    8f20:	09000004 	stmdbeq	r0, {r2}
    8f24:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    8f28:	b71101f6 			; <UNDEFINED> instruction: 0xb71101f6
    8f2c:	02000000 	andeq	r0, r0, #0
    8f30:	820a0023 	andhi	r0, sl, #35	; 0x23
    8f34:	04000002 	streq	r0, [r0], #-2
    8f38:	b71101f7 			; <UNDEFINED> instruction: 0xb71101f7
    8f3c:	02000000 	andeq	r0, r0, #0
    8f40:	850a0423 	strhi	r0, [sl, #-1059]	; 0xfffffbdd
    8f44:	04000002 	streq	r0, [r0], #-2
    8f48:	b71101f8 			; <UNDEFINED> instruction: 0xb71101f8
    8f4c:	02000000 	andeq	r0, r0, #0
    8f50:	43090823 	movwmi	r0, #38947	; 0x9823
    8f54:	04005249 	streq	r5, [r0], #-585	; 0xfffffdb7
    8f58:	b71101f9 			; <UNDEFINED> instruction: 0xb71101f9
    8f5c:	02000000 	andeq	r0, r0, #0
    8f60:	660a0c23 	strvs	r0, [sl], -r3, lsr #24
    8f64:	04000001 	streq	r0, [r0], #-1
    8f68:	b71101fa 			; <UNDEFINED> instruction: 0xb71101fa
    8f6c:	02000000 	andeq	r0, r0, #0
    8f70:	170a1023 	strne	r1, [sl, -r3, lsr #32]
    8f74:	04000007 	streq	r0, [r0], #-7
    8f78:	b71101fb 			; <UNDEFINED> instruction: 0xb71101fb
    8f7c:	02000000 	andeq	r0, r0, #0
    8f80:	7c0a1423 	cfstrsvc	mvf1, [sl], {35}	; 0x23
    8f84:	04000006 	streq	r0, [r0], #-6
    8f88:	b71101fc 			; <UNDEFINED> instruction: 0xb71101fc
    8f8c:	02000000 	andeq	r0, r0, #0
    8f90:	0f0a1823 	svceq	0x000a1823
    8f94:	04000005 	streq	r0, [r0], #-5
    8f98:	ab1101fd 	blge	449794 <_Min_Heap_Size+0x448f94>
    8f9c:	02000000 	andeq	r0, r0, #0
    8fa0:	fa0a1c23 	blx	290034 <_Min_Heap_Size+0x28f834>
    8fa4:	04000004 	streq	r0, [r0], #-4
    8fa8:	b71101fe 			; <UNDEFINED> instruction: 0xb71101fe
    8fac:	02000000 	andeq	r0, r0, #0
    8fb0:	f90a2023 			; <UNDEFINED> instruction: 0xf90a2023
    8fb4:	04000001 	streq	r0, [r0], #-1
    8fb8:	b71101ff 			; <UNDEFINED> instruction: 0xb71101ff
    8fbc:	02000000 	andeq	r0, r0, #0
    8fc0:	190a2423 	stmdbne	sl, {r0, r1, r5, sl, sp}
    8fc4:	04000005 	streq	r0, [r0], #-5
    8fc8:	bc110200 	lfmlt	f0, 4, [r1], {-0}
    8fcc:	02000000 	andeq	r0, r0, #0
    8fd0:	ae0a2823 	cdpge	8, 0, cr2, cr10, cr3, {1}
    8fd4:	04000008 	streq	r0, [r0], #-8
    8fd8:	b7110201 	ldrlt	r0, [r1, -r1, lsl #4]
    8fdc:	02000000 	andeq	r0, r0, #0
    8fe0:	870a3023 	strhi	r3, [sl, -r3, lsr #32]
    8fe4:	04000007 	streq	r0, [r0], #-7
    8fe8:	b7110202 	ldrlt	r0, [r1, -r2, lsl #4]
    8fec:	02000000 	andeq	r0, r0, #0
    8ff0:	9c0a3423 	cfstrsls	mvf3, [sl], {35}	; 0x23
    8ff4:	04000004 	streq	r0, [r0], #-4
    8ff8:	b7110203 	ldrlt	r0, [r1, -r3, lsl #4]
    8ffc:	02000000 	andeq	r0, r0, #0
    9000:	230a3823 	movwcs	r3, #43043	; 0xa823
    9004:	04000005 	streq	r0, [r0], #-5
    9008:	ab110204 	blge	449820 <_Min_Heap_Size+0x449020>
    900c:	02000000 	andeq	r0, r0, #0
    9010:	b70a3c23 	strlt	r3, [sl, -r3, lsr #24]
    9014:	04000006 	streq	r0, [r0], #-6
    9018:	b7110205 	ldrlt	r0, [r1, -r5, lsl #4]
    901c:	02000000 	andeq	r0, r0, #0
    9020:	740a4023 	strvc	r4, [sl], #-35	; 0xffffffdd
    9024:	04000006 	streq	r0, [r0], #-6
    9028:	b7110206 	ldrlt	r0, [r1, -r6, lsl #4]
    902c:	02000000 	andeq	r0, r0, #0
    9030:	2d0a4423 	cfstrscs	mvf4, [sl, #-140]	; 0xffffff74
    9034:	04000005 	streq	r0, [r0], #-5
    9038:	bc110207 	lfmlt	f0, 4, [r1], {7}
    903c:	02000000 	andeq	r0, r0, #0
    9040:	2b0a4823 	blcs	29b0d4 <_Min_Heap_Size+0x29a8d4>
    9044:	04000001 	streq	r0, [r0], #-1
    9048:	b7110208 	ldrlt	r0, [r1, -r8, lsl #4]
    904c:	02000000 	andeq	r0, r0, #0
    9050:	d60a5023 	strle	r5, [sl], -r3, lsr #32
    9054:	04000004 	streq	r0, [r0], #-4
    9058:	b7110209 	ldrlt	r0, [r1, -r9, lsl #4]
    905c:	02000000 	andeq	r0, r0, #0
    9060:	420a5423 	andmi	r5, sl, #587202560	; 0x23000000
    9064:	04000006 	streq	r0, [r0], #-6
    9068:	b711020a 	ldrlt	r0, [r1, -sl, lsl #4]
    906c:	02000000 	andeq	r0, r0, #0
    9070:	370a5823 	strcc	r5, [sl, -r3, lsr #16]
    9074:	04000005 	streq	r0, [r0], #-5
    9078:	ab11020b 	blge	4498ac <_Min_Heap_Size+0x4490ac>
    907c:	02000000 	andeq	r0, r0, #0
    9080:	1b0a5c23 	blne	2a0114 <_Min_Heap_Size+0x29f914>
    9084:	04000000 	streq	r0, [r0], #-0
    9088:	b711020c 	ldrlt	r0, [r1, -ip, lsl #4]
    908c:	02000000 	andeq	r0, r0, #0
    9090:	ee0a6023 	cdp	0, 0, cr6, cr10, cr3, {1}
    9094:	04000003 	streq	r0, [r0], #-3
    9098:	b711020d 	ldrlt	r0, [r1, -sp, lsl #4]
    909c:	02000000 	andeq	r0, r0, #0
    90a0:	410a6423 	tstmi	sl, r3, lsr #8
    90a4:	04000005 	streq	r0, [r0], #-5
    90a8:	bc11020e 	lfmlt	f0, 4, [r1], {14}
    90ac:	02000000 	andeq	r0, r0, #0
    90b0:	090a6823 	stmdbeq	sl, {r0, r1, r5, fp, sp, lr}
    90b4:	04000008 	streq	r0, [r0], #-8
    90b8:	b711020f 	ldrlt	r0, [r1, -pc, lsl #4]
    90bc:	02000000 	andeq	r0, r0, #0
    90c0:	43097023 	movwmi	r7, #36899	; 0x9023
    90c4:	04005253 	streq	r5, [r0], #-595	; 0xfffffdad
    90c8:	b7110210 			; <UNDEFINED> instruction: 0xb7110210
    90cc:	02000000 	andeq	r0, r0, #0
    90d0:	4b0a7423 	blmi	2a6164 <_Min_Heap_Size+0x2a5964>
    90d4:	04000005 	streq	r0, [r0], #-5
    90d8:	bc110211 	lfmlt	f0, 4, [r1], {17}
    90dc:	02000000 	andeq	r0, r0, #0
    90e0:	d80a7823 	stmdale	sl, {r0, r1, r5, fp, ip, sp, lr}
    90e4:	04000007 	streq	r0, [r0], #-7
    90e8:	b7110212 			; <UNDEFINED> instruction: 0xb7110212
    90ec:	03000000 	movweq	r0, #0
    90f0:	0a018023 	beq	69184 <_Min_Heap_Size+0x68984>
    90f4:	00000381 	andeq	r0, r0, r1, lsl #7
    90f8:	11021304 	tstne	r2, r4, lsl #6
    90fc:	000000b7 	strheq	r0, [r0], -r7
    9100:	01842303 	orreq	r2, r4, r3, lsl #6
    9104:	01cd0b00 	biceq	r0, sp, r0, lsl #22
    9108:	14040000 	strne	r0, [r4], #-0
    910c:	027d0302 	rsbseq	r0, sp, #134217728	; 0x8000000
    9110:	070c0000 	streq	r0, [ip, -r0]
    9114:	00003c01 	andeq	r3, r0, r1, lsl #24
    9118:	01b90500 			; <UNDEFINED> instruction: 0x01b90500
    911c:	00000491 	muleq	r0, r1, r4
    9120:	00031e0d 	andeq	r1, r3, sp, lsl #28
    9124:	530e0000 	movwpl	r0, #57344	; 0xe000
    9128:	01005445 	tsteq	r0, r5, asr #8
    912c:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    9130:	000006bf 			; <UNDEFINED> instruction: 0x000006bf
    9134:	3c01070c 	stccc	7, cr0, [r1], {12}
    9138:	06000000 	streq	r0, [r0], -r0
    913c:	04bf0127 	ldrteq	r0, [pc], #295	; 9144 <_Min_Heap_Size+0x8944>
    9140:	4a0d0000 	bmi	349148 <_Min_Heap_Size+0x348948>
    9144:	00000003 	andeq	r0, r0, r3
    9148:	0006ad0d 	andeq	sl, r6, sp, lsl #26
    914c:	e30d0100 	movw	r0, #53504	; 0xd100
    9150:	02000008 	andeq	r0, r0, #8
    9154:	00032b0d 	andeq	r2, r3, sp, lsl #22
    9158:	03000300 	movweq	r0, #768	; 0x300
    915c:	00001577 	andeq	r1, r0, r7, ror r5
    9160:	98032c06 	stmdals	r3, {r1, r2, sl, fp, sp}
    9164:	0f000004 	svceq	0x00000004
    9168:	092e0714 	stmdbeq	lr!, {r2, r4, r8, r9, sl}
    916c:	00000520 	andeq	r0, r0, r0, lsr #10
    9170:	6e695010 	mcrvs	0, 3, r5, cr9, cr0, {0}
    9174:	0c300700 	ldceq	7, cr0, [r0], #-0
    9178:	000000ab 	andeq	r0, r0, fp, lsr #1
    917c:	11002302 	tstne	r0, r2, lsl #6
    9180:	0000069d 	muleq	r0, sp, r6
    9184:	ab0c3307 	blge	315da8 <_Min_Heap_Size+0x3155a8>
    9188:	02000000 	andeq	r0, r0, #0
    918c:	b9110423 	ldmdblt	r1, {r0, r1, r5, sl}
    9190:	07000010 	smladeq	r0, r0, r0, r0
    9194:	00ab0c36 	adceq	r0, fp, r6, lsr ip
    9198:	23020000 	movwcs	r0, #8192	; 0x2000
    919c:	0ce31108 	stfeqe	f1, [r3], #32
    91a0:	39070000 	stmdbcc	r7, {}	; <UNPREDICTABLE>
    91a4:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    91a8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    91ac:	00104711 	andseq	r4, r0, r1, lsl r7
    91b0:	0c3c0700 	ldceq	7, cr0, [ip], #-0
    91b4:	000000ab 	andeq	r0, r0, fp, lsr #1
    91b8:	00102302 	andseq	r2, r0, r2, lsl #6
    91bc:	000e0703 	andeq	r0, lr, r3, lsl #14
    91c0:	023e0700 	eorseq	r0, lr, #0, 14
    91c4:	000004cb 	andeq	r0, r0, fp, asr #9
    91c8:	3c01070c 	stccc	7, cr0, [r1], {12}
    91cc:	07000000 	streq	r0, [r0, -r0]
    91d0:	05470144 	strbeq	r0, [r7, #-324]	; 0xfffffebc
    91d4:	1e0d0000 	cdpne	0, 0, cr0, cr13, cr0, {0}
    91d8:	0000001c 	andeq	r0, r0, ip, lsl r0
    91dc:	001bd10d 	andseq	sp, fp, sp, lsl #2
    91e0:	03000100 	movweq	r0, #256	; 0x100
    91e4:	00001cc8 	andeq	r1, r0, r8, asr #25
    91e8:	2c024707 	stccs	7, cr4, [r2], {7}
    91ec:	12000005 	andne	r0, r0, #5
    91f0:	001c2d01 	andseq	r2, ip, r1, lsl #26
    91f4:	01fb0100 	mvnseq	r0, r0, lsl #2
    91f8:	0000010d 	andeq	r0, r0, sp, lsl #2
    91fc:	00000000 	andeq	r0, r0, r0
    9200:	7d020000 	stcvc	0, cr0, [r2, #-0]
    9204:	057e0100 	ldrbeq	r0, [lr, #-256]!	; 0xffffff00
    9208:	86130000 	ldrhi	r0, [r3], -r0
    920c:	0100001b 	tsteq	r0, fp, lsl r0
    9210:	9f2d01fb 	svcls	0x002d01fb
    9214:	01000000 	mrseq	r0, (UNDEF: 0)
    9218:	01140050 	tsteq	r4, r0, asr r0
    921c:	00001c49 	andeq	r1, r0, r9, asr #24
    9220:	0601ec01 	streq	lr, [r1], -r1, lsl #24
    9224:	00000001 	andeq	r0, r0, r1
    9228:	00000000 	andeq	r0, r0, r0
    922c:	005ddc00 	subseq	sp, sp, r0, lsl #24
    9230:	05b90100 	ldreq	r0, [r9, #256]!	; 0x100
    9234:	86150000 	ldrhi	r0, [r5], -r0
    9238:	0100001b 	tsteq	r0, fp, lsl r0
    923c:	9f2801ec 	svcls	0x002801ec
    9240:	04000000 	streq	r0, [r0], #-0
    9244:	fc00005e 	stc2	0, cr0, [r0], {94}	; 0x5e
    9248:	1600005d 			; <UNDEFINED> instruction: 0x1600005d
    924c:	00000000 	andeq	r0, r0, r0
    9250:	00000553 	andeq	r0, r0, r3, asr r5
    9254:	8f011700 	svchi	0x00011700
    9258:	0100001b 	tsteq	r0, fp, lsl r0
    925c:	011301ca 	tsteq	r3, sl, asr #3
    9260:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
	...
    926c:	00005e3e 	andeq	r5, r0, lr, lsr lr
    9270:	00062e01 	andeq	r2, r6, r1, lsl #28
    9274:	1c801500 	cfstr32ne	mvfx1, [r0], {0}
    9278:	ca010000 	bgt	49280 <_Min_Heap_Size+0x48a80>
    927c:	062e3201 	strteq	r3, [lr], -r1, lsl #4
    9280:	5e8a0000 	cdppl	0, 8, cr0, cr10, cr0, {0}
    9284:	5e820000 	cdppl	0, 8, cr0, cr2, cr0, {0}
    9288:	86150000 	ldrhi	r0, [r5], -r0
    928c:	0100001b 	tsteq	r0, fp, lsl r0
    9290:	9f4201ca 	svcls	0x004201ca
    9294:	c6000000 	strgt	r0, [r0], -r0
    9298:	be00005e 	mcrlt	0, 0, r0, cr0, cr14, {2}
    929c:	1800005e 	stmdane	r0, {r1, r2, r3, r4, r6}
    92a0:	00706d74 	rsbseq	r6, r0, r4, ror sp
    92a4:	1101cc01 	tstne	r1, r1, lsl #24
    92a8:	000000b7 	strheq	r0, [r0], -r7
    92ac:	196c9102 	stmdbne	ip!, {r1, r8, ip, pc}^
    92b0:	00000000 	andeq	r0, r0, r0
    92b4:	000009ce 	andeq	r0, r0, lr, asr #19
    92b8:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    92bc:	002ce003 	eoreq	lr, ip, r3
    92c0:	51011a08 	tstpl	r1, r8, lsl #20
    92c4:	01cf0a03 	biceq	r0, pc, r3, lsl #20
    92c8:	041b0000 	ldreq	r0, [fp], #-0
    92cc:	000001f3 	strdeq	r0, [r0], -r3
    92d0:	1bb90114 	blne	fee49728 <_estack+0xdee484f0>
    92d4:	b1010000 	mrslt	r0, (UNDEF: 1)
    92d8:	00010601 	andeq	r0, r1, r1, lsl #12
	...
    92e4:	0100005f 	qaddeq	r0, pc, r0	; <UNPREDICTABLE>
    92e8:	000006aa 	andeq	r0, r0, sl, lsr #13
    92ec:	001c8015 	andseq	r8, ip, r5, lsl r0
    92f0:	01b10100 			; <UNDEFINED> instruction: 0x01b10100
    92f4:	00062e27 	andeq	r2, r6, r7, lsr #28
    92f8:	005f2800 	subseq	r2, pc, r0, lsl #16
    92fc:	005f2000 	subseq	r2, pc, r0
    9300:	1b861500 	blne	fe18e708 <_estack+0xde18d4d0>
    9304:	b1010000 	mrslt	r0, (UNDEF: 1)
    9308:	009f3701 	addseq	r3, pc, r1, lsl #14
    930c:	5f640000 	svcpl	0x00640000
    9310:	5f5c0000 	svcpl	0x005c0000
    9314:	6f1c0000 	svcvs	0x001c0000
    9318:	01007264 	tsteq	r0, r4, ror #4
    931c:	ab0c01b3 	blge	3099f0 <_Min_Heap_Size+0x3091f0>
    9320:	a0000000 	andge	r0, r0, r0
    9324:	9e00005f 	mcrls	0, 0, r0, cr0, cr15, {2}
    9328:	1900005f 	stmdbne	r0, {r0, r1, r2, r3, r4, r6}
    932c:	00000000 	andeq	r0, r0, r0
    9330:	000009ce 	andeq	r0, r0, lr, asr #19
    9334:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    9338:	002ce003 	eoreq	lr, ip, r3
    933c:	51011a08 	tstpl	r1, r8, lsl #20
    9340:	01b60a03 			; <UNDEFINED> instruction: 0x01b60a03
    9344:	01140000 	tsteq	r4, r0
    9348:	00001bfc 	strdeq	r1, [r0], -ip
    934c:	06019a01 	streq	r9, [r1], -r1, lsl #20
    9350:	00000001 	andeq	r0, r0, r1
    9354:	00000000 	andeq	r0, r0, r0
    9358:	005fb300 	subseq	fp, pc, r0, lsl #6
    935c:	073e0100 	ldreq	r0, [lr, -r0, lsl #2]!
    9360:	80150000 	andshi	r0, r5, r0
    9364:	0100001c 	tsteq	r0, ip, lsl r0
    9368:	2e26019a 	mcrcs	1, 1, r0, cr6, cr10, {4}
    936c:	db000006 	blle	938c <_Min_Heap_Size+0x8b8c>
    9370:	d300005f 	movwle	r0, #95	; 0x5f
    9374:	1500005f 	strne	r0, [r0, #-95]	; 0xffffffa1
    9378:	00001b86 	andeq	r1, r0, r6, lsl #23
    937c:	36019a01 	strcc	r9, [r1], -r1, lsl #20
    9380:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9384:	00006017 	andeq	r6, r0, r7, lsl r0
    9388:	0000600f 	andeq	r6, r0, pc
    938c:	001ccd15 	andseq	ip, ip, r5, lsl sp
    9390:	019a0100 	orrseq	r0, sl, r0, lsl #2
    9394:	0005474e 	andeq	r4, r5, lr, asr #14
    9398:	00605900 	rsbeq	r5, r0, r0, lsl #18
    939c:	00605100 	rsbeq	r5, r0, r0, lsl #2
    93a0:	00001d00 	andeq	r1, r0, r0, lsl #26
    93a4:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    93a8:	07230000 	streq	r0, [r3, -r0]!
    93ac:	011a0000 	tsteq	sl, r0
    93b0:	e0030550 	and	r0, r3, r0, asr r5
    93b4:	1a08002c 	bne	20946c <_Min_Heap_Size+0x208c6c>
    93b8:	0a035101 	beq	dd7c4 <_Min_Heap_Size+0xdcfc4>
    93bc:	1900019d 	stmdbne	r0, {r0, r2, r3, r4, r7, r8}
    93c0:	00000000 	andeq	r0, r0, r0
    93c4:	000009ce 	andeq	r0, r0, lr, asr #19
    93c8:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    93cc:	002ce003 	eoreq	lr, ip, r3
    93d0:	51011a08 	tstpl	r1, r8, lsl #20
    93d4:	019e0a03 	orrseq	r0, lr, r3, lsl #20
    93d8:	01170000 	tsteq	r7, r0
    93dc:	00001beb 	andeq	r1, r0, fp, ror #23
    93e0:	0f017701 	svceq	0x00017701
    93e4:	00054701 	andeq	r4, r5, r1, lsl #14
	...
    93f0:	00609300 	rsbeq	r9, r0, r0, lsl #6
    93f4:	07b80100 	ldreq	r0, [r8, r0, lsl #2]!
    93f8:	80150000 	andshi	r0, r5, r0
    93fc:	0100001c 	tsteq	r0, ip, lsl r0
    9400:	2e2e0177 	mcrcs	1, 1, r0, cr14, cr7, {3}
    9404:	bb000006 	bllt	9424 <_Min_Heap_Size+0x8c24>
    9408:	b3000060 	movwlt	r0, #96	; 0x60
    940c:	15000060 	strne	r0, [r0, #-96]	; 0xffffffa0
    9410:	00001b86 	andeq	r1, r0, r6, lsl #23
    9414:	3e017701 	cdpcc	7, 0, cr7, cr1, cr1, {0}
    9418:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    941c:	000060f7 	strdeq	r6, [r0], -r7
    9420:	000060ef 	andeq	r6, r0, pc, ror #1
    9424:	001c141e 	andseq	r1, ip, lr, lsl r4
    9428:	01790100 	cmneq	r9, r0, lsl #2
    942c:	00054711 	andeq	r4, r5, r1, lsl r7
    9430:	00613300 	rsbeq	r3, r1, r0, lsl #6
    9434:	00613100 	rsbeq	r3, r1, r0, lsl #2
    9438:	00001900 	andeq	r1, r0, r0, lsl #18
    943c:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    9440:	011a0000 	tsteq	sl, r0
    9444:	e0030550 	and	r0, r3, r0, asr r5
    9448:	1a08002c 	bne	209500 <_Min_Heap_Size+0x208d00>
    944c:	0a035101 	beq	dd858 <_Min_Heap_Size+0xdd058>
    9450:	0000017c 	andeq	r0, r0, ip, ror r1
    9454:	0e3c0114 	mrceq	1, 1, r0, cr12, cr4, {0}
    9458:	26010000 	strcs	r0, [r1], -r0
    945c:	00010601 	andeq	r0, r1, r1, lsl #12
    9460:	00000000 	andeq	r0, r0, r0
    9464:	46000000 	strmi	r0, [r0], -r0
    9468:	01000061 	tsteq	r0, r1, rrx
    946c:	0000086d 	andeq	r0, r0, sp, ror #16
    9470:	001c8015 	andseq	r8, ip, r5, lsl r0
    9474:	01260100 			; <UNDEFINED> instruction: 0x01260100
    9478:	00062e25 	andeq	r2, r6, r5, lsr #28
    947c:	00616c00 	rsbeq	r6, r1, r0, lsl #24
    9480:	00616600 	rsbeq	r6, r1, r0, lsl #12
    9484:	1b861500 	blne	fe18e88c <_estack+0xde18d654>
    9488:	26010000 	strcs	r0, [r1], -r0
    948c:	00ab3501 	adceq	r3, fp, r1, lsl #10
    9490:	619e0000 	orrsvs	r0, lr, r0
    9494:	61980000 	orrsvs	r0, r8, r0
    9498:	a21e0000 	andsge	r0, lr, #0
    949c:	0100001b 	tsteq	r0, fp, lsl r0
    94a0:	ab0c0128 	blge	309948 <_Min_Heap_Size+0x309148>
    94a4:	cc000000 	stcgt	0, cr0, [r0], {-0}
    94a8:	ca000061 	bgt	9634 <_Min_Heap_Size+0x8e34>
    94ac:	1e000061 	cdpne	0, 0, cr0, cr0, cr1, {3}
    94b0:	00001ba0 	andeq	r1, r0, r0, lsr #23
    94b4:	0c012901 			; <UNDEFINED> instruction: 0x0c012901
    94b8:	000000ab 	andeq	r0, r0, fp, lsr #1
    94bc:	000061e7 	andeq	r6, r0, r7, ror #3
    94c0:	000061df 	ldrdeq	r6, [r0], -pc	; <UNPREDICTABLE>
    94c4:	001c621e 	andseq	r6, ip, lr, lsl r2
    94c8:	012a0100 			; <UNDEFINED> instruction: 0x012a0100
    94cc:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    94d0:	00622a00 	rsbeq	r2, r2, r0, lsl #20
    94d4:	00622000 	rsbeq	r2, r2, r0
    94d8:	6d741c00 	ldclvs	12, cr1, [r4, #-0]
    94dc:	2b010070 	blcs	496a4 <_Min_Heap_Size+0x48ea4>
    94e0:	00ab0c01 	adceq	r0, fp, r1, lsl #24
    94e4:	627e0000 	rsbsvs	r0, lr, #0
    94e8:	62760000 	rsbsvs	r0, r6, #0
    94ec:	00190000 	andseq	r0, r9, r0
    94f0:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    94f4:	1a000009 	bne	9520 <_Min_Heap_Size+0x8d20>
    94f8:	03055001 	movweq	r5, #20481	; 0x5001
    94fc:	08002ce0 	stmdaeq	r0, {r5, r6, r7, sl, fp, sp}
    9500:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    9504:	00012e0a 	andeq	r2, r1, sl, lsl #28
    9508:	8c011f00 	stchi	15, cr1, [r1], {-0}
    950c:	0100000e 	tsteq	r0, lr
    9510:	000106a4 	andeq	r0, r1, r4, lsr #13
    9514:	e8080012 	stmda	r8, {r1, r4}
    9518:	b3080014 	movwlt	r0, #32788	; 0x8014
    951c:	01000062 	tsteq	r0, r2, rrx
    9520:	000009c8 	andeq	r0, r0, r8, asr #19
    9524:	001c8020 	andseq	r8, ip, r0, lsr #32
    9528:	23a40100 			; <UNDEFINED> instruction: 0x23a40100
    952c:	0000062e 	andeq	r0, r0, lr, lsr #12
    9530:	000062f1 	strdeq	r6, [r0], -r1
    9534:	000062eb 	andeq	r6, r0, fp, ror #5
    9538:	000e9020 	andeq	r9, lr, r0, lsr #32
    953c:	3ca40100 	stfccs	f0, [r4]
    9540:	000009c8 	andeq	r0, r0, r8, asr #19
    9544:	00006323 	andeq	r6, r0, r3, lsr #6
    9548:	0000631d 	andeq	r6, r0, sp, lsl r3
    954c:	001ba221 	andseq	sl, fp, r1, lsr #4
    9550:	0ca60100 	stfeqs	f0, [r6]
    9554:	000000ab 	andeq	r0, r0, fp, lsr #1
    9558:	00006351 	andeq	r6, r0, r1, asr r3
    955c:	0000634f 	andeq	r6, r0, pc, asr #6
    9560:	001ba021 	andseq	sl, fp, r1, lsr #32
    9564:	0ca70100 	stfeqs	f0, [r7]
    9568:	000000ab 	andeq	r0, r0, fp, lsr #1
    956c:	00006376 	andeq	r6, r0, r6, ror r3
    9570:	00006364 	andeq	r6, r0, r4, ror #6
    9574:	001c6221 	andseq	r6, ip, r1, lsr #4
    9578:	0ca80100 	stfeqs	f0, [r8]
    957c:	000000ab 	andeq	r0, r0, fp, lsr #1
    9580:	000063fd 	strdeq	r6, [r0], -sp
    9584:	000063f7 	strdeq	r6, [r0], -r7
    9588:	001bcc21 	andseq	ip, fp, r1, lsr #24
    958c:	0ca90100 	stfeqs	f0, [r9]
    9590:	000000ab 	andeq	r0, r0, fp, lsr #1
    9594:	00006457 	andeq	r6, r0, r7, asr r4
    9598:	00006427 	andeq	r6, r0, r7, lsr #8
    959c:	00144422 	andseq	r4, r4, r2, lsr #8
    95a0:	00145c08 	andseq	r5, r4, r8, lsl #24
    95a4:	00091d08 	andeq	r1, r9, r8, lsl #26
    95a8:	01b62300 			; <UNDEFINED> instruction: 0x01b62300
    95ac:	f1010000 	setend	le
    95b0:	0000b709 	andeq	fp, r0, r9, lsl #14
    95b4:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    95b8:	12581d00 	subsne	r1, r8, #0, 26
    95bc:	09ce0800 	stmibeq	lr, {fp}^
    95c0:	093a0000 	ldmdbeq	sl!, {}	; <UNPREDICTABLE>
    95c4:	011a0000 	tsteq	sl, r0
    95c8:	e0030550 	and	r0, r3, r0, asr r5
    95cc:	1a08002c 	bne	209684 <_Min_Heap_Size+0x208e84>
    95d0:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    95d4:	6c1d00ac 	ldcvs	0, cr0, [sp], {172}	; 0xac
    95d8:	ce080012 	mcrgt	0, 0, r0, cr8, cr2, {0}
    95dc:	57000009 	strpl	r0, [r0, -r9]
    95e0:	1a000009 	bne	960c <_Min_Heap_Size+0x8e0c>
    95e4:	03055001 	movweq	r5, #20481	; 0x5001
    95e8:	08002ce0 	stmdaeq	r0, {r5, r6, r7, sl, fp, sp}
    95ec:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    95f0:	1d00ad08 	stcne	13, cr10, [r0, #-32]	; 0xffffffe0
    95f4:	080012b2 	stmdaeq	r0, {r1, r4, r5, r7, r9, ip}
    95f8:	000009ce 	andeq	r0, r0, lr, asr #19
    95fc:	00000974 	andeq	r0, r0, r4, ror r9
    9600:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    9604:	002ce003 	eoreq	lr, ip, r3
    9608:	51011a08 	tstpl	r1, r8, lsl #20
    960c:	00ae0802 	adceq	r0, lr, r2, lsl #16
    9610:	0012ea1d 	andseq	lr, r2, sp, lsl sl
    9614:	0009ce08 	andeq	ip, r9, r8, lsl #28
    9618:	00099100 	andeq	r9, r9, r0, lsl #2
    961c:	50011a00 	andpl	r1, r1, r0, lsl #20
    9620:	2ce00305 	stclcs	3, cr0, [r0], #20
    9624:	011a0800 	tsteq	sl, r0, lsl #16
    9628:	c0080251 	andgt	r0, r8, r1, asr r2
    962c:	12f41d00 	rscsne	r1, r4, #0, 26
    9630:	09ce0800 	stmibeq	lr, {fp}^
    9634:	09ae0000 	stmibeq	lr!, {}	; <UNPREDICTABLE>
    9638:	011a0000 	tsteq	sl, r0
    963c:	e0030550 	and	r0, r3, r0, asr r5
    9640:	1a08002c 	bne	2096f8 <_Min_Heap_Size+0x208ef8>
    9644:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    9648:	541900d1 	ldrpl	r0, [r9], #-209	; 0xffffff2f
    964c:	ce080013 	mcrgt	0, 0, r0, cr8, cr3, {0}
    9650:	1a000009 	bne	967c <_Min_Heap_Size+0x8e7c>
    9654:	03055001 	movweq	r5, #20481	; 0x5001
    9658:	08002ce0 	stmdaeq	r0, {r5, r6, r7, sl, fp, sp}
    965c:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    9660:	0000de08 	andeq	sp, r0, r8, lsl #28
    9664:	0520041b 	streq	r0, [r0, #-1051]!	; 0xfffffbe5
    9668:	01240000 			; <UNDEFINED> instruction: 0x01240000
    966c:	000c8c01 	andeq	r8, ip, r1, lsl #24
    9670:	000c8c00 	andeq	r8, ip, r0, lsl #24
    9674:	01e60800 	mvneq	r0, r0, lsl #16
    9678:	0dd30008 	ldcleq	0, cr0, [r3, #32]
    967c:	00020000 	andeq	r0, r2, r0
    9680:	000012ad 	andeq	r1, r0, sp, lsr #5
    9684:	05880104 	streq	r0, [r8, #260]	; 0x104
    9688:	b10c0000 	mrslt	r0, (UNDEF: 12)
    968c:	6d00001d 	stcvs	0, cr0, [r0, #-116]	; 0xffffff8c
    9690:	98000008 	stmdals	r0, {r3}
    9694:	00000004 	andeq	r0, r0, r4
    9698:	00000000 	andeq	r0, r0, r0
    969c:	26000000 	strcs	r0, [r0], -r0
    96a0:	0200006f 	andeq	r0, r0, #111	; 0x6f
    96a4:	00ae0708 	adceq	r0, lr, r8, lsl #14
    96a8:	04020000 	streq	r0, [r2], #-0
    96ac:	0000b807 	andeq	fp, r0, r7, lsl #16
    96b0:	06010200 	streq	r0, [r1], -r0, lsl #4
    96b4:	00000576 	andeq	r0, r0, r6, ror r5
    96b8:	00006603 	andeq	r6, r0, r3, lsl #12
    96bc:	182b0200 	stmdane	fp!, {r9}
    96c0:	0000004a 	andeq	r0, r0, sl, asr #32
    96c4:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    96c8:	02000005 	andeq	r0, r0, #5
    96cc:	03fd0502 	mvnseq	r0, #8388608	; 0x800000
    96d0:	02020000 	andeq	r0, r2, #0
    96d4:	00078f07 	andeq	r8, r7, r7, lsl #30
    96d8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    96dc:	000002ec 	andeq	r0, r0, ip, ror #5
    96e0:	0002c203 	andeq	ip, r2, r3, lsl #4
    96e4:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    96e8:	00000072 	andeq	r0, r0, r2, ror r0
    96ec:	b3070402 	movwlt	r0, #29698	; 0x7402
    96f0:	02000000 	andeq	r0, r0, #0
    96f4:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
    96f8:	04040000 	streq	r0, [r4], #-0
    96fc:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    9700:	00680300 	rsbeq	r0, r8, r0, lsl #6
    9704:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    9708:	00003e13 	andeq	r3, r0, r3, lsl lr
    970c:	00870500 	addeq	r0, r7, r0, lsl #10
    9710:	c4030000 	strgt	r0, [r3], #-0
    9714:	03000002 	movweq	r0, #2
    9718:	00661430 	rsbeq	r1, r6, r0, lsr r4
    971c:	98060000 	stmdals	r6, {}	; <UNPREDICTABLE>
    9720:	07000000 	streq	r0, [r0, -r0]
    9724:	00001a77 	andeq	r1, r0, r7, ror sl
    9728:	98113908 	ldmdals	r1, {r3, r8, fp, ip, sp}
    972c:	01000000 	mrseq	r0, (UNDEF: 0)
    9730:	00930801 	addseq	r0, r3, r1, lsl #16
    9734:	00c70000 	sbceq	r0, r7, r0
    9738:	30090000 	andcc	r0, r9, r0
    973c:	07000000 	streq	r0, [r0, -r0]
    9740:	00b70500 	adcseq	r0, r7, r0, lsl #10
    9744:	180a0000 	stmdane	sl, {}	; <UNPREDICTABLE>
    9748:	09014404 	stmdbeq	r1, {r2, sl, lr}
    974c:	00000136 	andeq	r0, r0, r6, lsr r1
    9750:	0052430b 	subseq	r4, r2, fp, lsl #6
    9754:	11014604 	tstne	r1, r4, lsl #12
    9758:	000000a4 	andeq	r0, r0, r4, lsr #1
    975c:	0c002302 	stceq	3, cr2, [r0], {2}
    9760:	00000755 	andeq	r0, r0, r5, asr r7
    9764:	11014704 	tstne	r1, r4, lsl #14
    9768:	000000a4 	andeq	r0, r0, r4, lsr #1
    976c:	0b042302 	bleq	11237c <_Min_Heap_Size+0x111b7c>
    9770:	00524150 	subseq	r4, r2, r0, asr r1
    9774:	11014804 	tstne	r1, r4, lsl #16
    9778:	000000a4 	andeq	r0, r0, r4, lsr #1
    977c:	0c082302 	stceq	3, cr2, [r8], {2}
    9780:	00000042 	andeq	r0, r0, r2, asr #32
    9784:	11014904 	tstne	r1, r4, lsl #18
    9788:	000000a4 	andeq	r0, r0, r4, lsr #1
    978c:	0c0c2302 	stceq	3, cr2, [ip], {2}
    9790:	000007ae 	andeq	r0, r0, lr, lsr #15
    9794:	11014a04 	tstne	r1, r4, lsl #20
    9798:	000000a4 	andeq	r0, r0, r4, lsr #1
    979c:	0b102302 	bleq	4123ac <_Min_Heap_Size+0x411bac>
    97a0:	00524346 	subseq	r4, r2, r6, asr #6
    97a4:	11014b04 	tstne	r1, r4, lsl #22
    97a8:	000000a4 	andeq	r0, r0, r4, lsr #1
    97ac:	00142302 	andseq	r2, r4, r2, lsl #6
    97b0:	0007740d 	andeq	r7, r7, sp, lsl #8
    97b4:	014c0400 	cmpeq	ip, r0, lsl #8
    97b8:	0000cc03 	andeq	ip, r0, r3, lsl #24
    97bc:	01070e00 	tsteq	r7, r0, lsl #28
    97c0:	0000004a 	andeq	r0, r0, sl, asr #32
    97c4:	5e01b905 	vmlapl.f16	s22, s2, s10	; <UNPREDICTABLE>
    97c8:	0f000001 	svceq	0x00000001
    97cc:	0000031e 	andeq	r0, r0, lr, lsl r3
    97d0:	45531000 	ldrbmi	r1, [r3, #-0]
    97d4:	00010054 	andeq	r0, r1, r4, asr r0
    97d8:	bf040802 	svclt	0x00040802
    97dc:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    97e0:	004a0107 	subeq	r0, sl, r7, lsl #2
    97e4:	27060000 	strcs	r0, [r6, -r0]
    97e8:	00018c01 	andeq	r8, r1, r1, lsl #24
    97ec:	034a0f00 	movteq	r0, #44800	; 0xaf00
    97f0:	0f000000 	svceq	0x00000000
    97f4:	000006ad 	andeq	r0, r0, sp, lsr #13
    97f8:	08e30f01 	stmiaeq	r3!, {r0, r8, r9, sl, fp}^
    97fc:	0f020000 	svceq	0x00020000
    9800:	0000032b 	andeq	r0, r0, fp, lsr #6
    9804:	77030003 	strvc	r0, [r3, -r3]
    9808:	06000015 			; <UNDEFINED> instruction: 0x06000015
    980c:	0165032c 	cmneq	r5, ip, lsr #6
    9810:	070e0000 	streq	r0, [lr, -r0]
    9814:	00004a01 	andeq	r4, r0, r1, lsl #20
    9818:	01320600 	teqeq	r2, r0, lsl #12
    981c:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
    9820:	0008d60f 	andeq	sp, r8, pc, lsl #12
    9824:	910f0000 	mrsls	r0, CPSR
    9828:	01000004 	tsteq	r0, r4
    982c:	01bd0300 			; <UNDEFINED> instruction: 0x01bd0300
    9830:	35060000 	strcc	r0, [r6, #-0]
    9834:	00019803 	andeq	r9, r1, r3, lsl #16
    9838:	07301100 	ldreq	r1, [r0, -r0, lsl #2]!
    983c:	027d0930 	rsbseq	r0, sp, #48, 18	; 0xc0000
    9840:	6c120000 	ldcvs	0, cr0, [r2], {-0}
    9844:	07000005 	streq	r0, [r0, -r5]
    9848:	00980c32 	addseq	r0, r8, r2, lsr ip
    984c:	23020000 	movwcs	r0, #8192	; 0x2000
    9850:	02cd1200 	sbceq	r1, sp, #0, 4
    9854:	35070000 	strcc	r0, [r7, #-0]
    9858:	0000980c 	andeq	r9, r0, ip, lsl #16
    985c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9860:	00020212 	andeq	r0, r2, r2, lsl r2
    9864:	0c390700 	ldceq	7, cr0, [r9], #-0
    9868:	00000098 	muleq	r0, r8, r0
    986c:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    9870:	00000720 	andeq	r0, r0, r0, lsr #14
    9874:	980c3c07 	stmdals	ip, {r0, r1, r2, sl, fp, ip, sp}
    9878:	02000000 	andeq	r0, r0, #0
    987c:	b3120c23 	tstlt	r2, #8960	; 0x2300
    9880:	07000007 	streq	r0, [r0, -r7]
    9884:	00980c3f 	addseq	r0, r8, pc, lsr ip
    9888:	23020000 	movwcs	r0, #8192	; 0x2000
    988c:	03cf1210 	biceq	r1, pc, #16, 4
    9890:	42070000 	andmi	r0, r7, #0
    9894:	0000980c 	andeq	r9, r0, ip, lsl #16
    9898:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    989c:	00069d12 	andeq	r9, r6, r2, lsl sp
    98a0:	0c450700 	mcrreq	7, 0, r0, r5, cr0
    98a4:	00000098 	muleq	r0, r8, r0
    98a8:	12182302 	andsne	r2, r8, #134217728	; 0x8000000
    98ac:	0000221b 	andeq	r2, r0, fp, lsl r2
    98b0:	980c4a07 	stmdals	ip, {r0, r1, r2, r9, fp, lr}
    98b4:	02000000 	andeq	r0, r0, #0
    98b8:	99121c23 	ldmdbls	r2, {r0, r1, r5, sl, fp, ip}
    98bc:	07000006 	streq	r0, [r0, -r6]
    98c0:	00980c4d 	addseq	r0, r8, sp, asr #24
    98c4:	23020000 	movwcs	r0, #8192	; 0x2000
    98c8:	06cb1220 	strbeq	r1, [fp], r0, lsr #4
    98cc:	52070000 	andpl	r0, r7, #0
    98d0:	0000980c 	andeq	r9, r0, ip, lsl #16
    98d4:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    98d8:	00021512 	andeq	r1, r2, r2, lsl r5
    98dc:	0c550700 	mrrceq	7, 0, r0, r5, cr0
    98e0:	00000098 	muleq	r0, r8, r0
    98e4:	12282302 	eorne	r2, r8, #134217728	; 0x8000000
    98e8:	00000727 	andeq	r0, r0, r7, lsr #14
    98ec:	980c5b07 	stmdals	ip, {r0, r1, r2, r8, r9, fp, ip, lr}
    98f0:	02000000 	andeq	r0, r0, #0
    98f4:	03002c23 	movweq	r2, #3107	; 0xc23
    98f8:	00000047 	andeq	r0, r0, r7, asr #32
    98fc:	bf026007 	svclt	0x00026007
    9900:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    9904:	004a0107 	subeq	r0, sl, r7, lsl #2
    9908:	67070000 	strvs	r0, [r7, -r0]
    990c:	0002bc01 	andeq	fp, r2, r1, lsl #24
    9910:	03100f00 	tsteq	r0, #0, 30
    9914:	0f000000 	svceq	0x00000000
    9918:	00000423 	andeq	r0, r0, r3, lsr #8
    991c:	04400f01 	strbeq	r0, [r0], #-3841	; 0xfffff0ff
    9920:	0f020000 	svceq	0x00020000
    9924:	0000082f 	andeq	r0, r0, pc, lsr #16
    9928:	022d0f03 	eoreq	r0, sp, #3, 30
    992c:	0f040000 	svceq	0x00040000
    9930:	00000391 	muleq	r0, r1, r3
    9934:	2d030005 	stccs	0, cr0, [r3, #-20]	; 0xffffffec
    9938:	07000006 	streq	r0, [r0, -r6]
    993c:	0289026e 	addeq	r0, r9, #-536870906	; 0xe0000006
    9940:	bc060000 	stclt	0, cr0, [r6], {-0}
    9944:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    9948:	004a0107 	subeq	r0, sl, r7, lsl #2
    994c:	74070000 	strvc	r0, [r7], #-0
    9950:	0002e801 	andeq	lr, r2, r1, lsl #16
    9954:	1e060f00 	cdpne	15, 0, cr0, cr6, cr0, {0}
    9958:	0f000000 	svceq	0x00000000
    995c:	00001d8d 	andeq	r1, r0, sp, lsl #27
    9960:	e9030001 	stmdb	r3, {r0}
    9964:	0700001d 	smladeq	r0, sp, r0, r0
    9968:	02cd0277 	sbceq	r0, sp, #1879048199	; 0x70000007
    996c:	070e0000 	streq	r0, [lr, -r0]
    9970:	00004a01 	andeq	r4, r0, r1, lsl #20
    9974:	017d0700 	cmneq	sp, r0, lsl #14
    9978:	0000032d 	andeq	r0, r0, sp, lsr #6
    997c:	001d3f0f 	andseq	r3, sp, pc, lsl #30
    9980:	0a0f0000 	beq	3c9988 <_Min_Heap_Size+0x3c9188>
    9984:	0100001f 	tsteq	r0, pc, lsl r0
    9988:	001e440f 	andseq	r4, lr, pc, lsl #8
    998c:	260f0200 	strcs	r0, [pc], -r0, lsl #4
    9990:	0300001f 	movweq	r0, #31
    9994:	001d740f 	andseq	r7, sp, pc, lsl #8
    9998:	dc0f0400 	cfstrsle	mvf0, [pc], {-0}
    999c:	0500001c 	streq	r0, [r0, #-28]	; 0xffffffe4
    99a0:	001ec80f 	andseq	ip, lr, pc, lsl #16
    99a4:	03000600 	movweq	r0, #1536	; 0x600
    99a8:	00001e2a 	andeq	r1, r0, sl, lsr #28
    99ac:	f4028507 	vst3.8	{d8,d10,d12}, [r2], r7
    99b0:	13000002 	movwne	r0, #2
    99b4:	00000685 	andeq	r0, r0, r5, lsl #13
    99b8:	108a0760 	addne	r0, sl, r0, ror #14
    99bc:	00000419 	andeq	r0, r0, r9, lsl r4
    99c0:	0004a412 	andeq	sl, r4, r2, lsl r4
    99c4:	1f8c0700 	svcne	0x008c0700
    99c8:	00000419 	andeq	r0, r0, r9, lsl r4
    99cc:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    99d0:	00001cfd 	strdeq	r1, [r0], -sp
    99d4:	7d1e8e07 	ldcvc	14, cr8, [lr, #-28]	; 0xffffffe4
    99d8:	02000002 	andeq	r0, r0, #2
    99dc:	a8120423 	ldmdage	r2, {r0, r1, r5, sl}
    99e0:	07000002 	streq	r0, [r0, -r2]
    99e4:	01b31e90 			; <UNDEFINED> instruction: 0x01b31e90
    99e8:	23020000 	movwcs	r0, #8192	; 0x2000
    99ec:	030a1234 	movweq	r1, #41524	; 0xa234
    99f0:	92070000 	andls	r0, r7, #0
    99f4:	0002c81e 	andeq	ip, r2, lr, lsl r8
    99f8:	35230200 	strcc	r0, [r3, #-512]!	; 0xfffffe00
    99fc:	0002a112 	andeq	sl, r2, r2, lsl r1
    9a00:	1f940700 	svcne	0x00940700
    9a04:	0000041f 	andeq	r0, r0, pc, lsl r4
    9a08:	12382302 	eorsne	r2, r8, #134217728	; 0x8000000
    9a0c:	00000919 	andeq	r0, r0, r9, lsl r9
    9a10:	33219607 			; <UNDEFINED> instruction: 0x33219607
    9a14:	02000004 	andeq	r0, r0, #4
    9a18:	d9123c23 	ldmdble	r2, {r0, r1, r5, sl, fp, ip, sp}
    9a1c:	07000001 	streq	r0, [r0, -r1]
    9a20:	04332198 	ldrteq	r2, [r3], #-408	; 0xfffffe68
    9a24:	23020000 	movwcs	r0, #8192	; 0x2000
    9a28:	01971240 	orrseq	r1, r7, r0, asr #4
    9a2c:	9a070000 	bls	1c9a34 <_Min_Heap_Size+0x1c9234>
    9a30:	00043321 	andeq	r3, r4, r1, lsr #6
    9a34:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    9a38:	00055512 	andeq	r5, r5, r2, lsl r5
    9a3c:	219c0700 	orrscs	r0, ip, r0, lsl #14
    9a40:	00000433 	andeq	r0, r0, r3, lsr r4
    9a44:	12482302 	subne	r2, r8, #134217728	; 0x8000000
    9a48:	000004ad 	andeq	r0, r0, sp, lsr #9
    9a4c:	33219e07 			; <UNDEFINED> instruction: 0x33219e07
    9a50:	02000004 	andeq	r0, r0, #4
    9a54:	07124c23 	ldreq	r4, [r2, -r3, lsr #24]
    9a58:	07000009 	streq	r0, [r0, -r9]
    9a5c:	043321a0 	ldrteq	r2, [r3], #-416	; 0xfffffe60
    9a60:	23020000 	movwcs	r0, #8192	; 0x2000
    9a64:	03b01250 	movseq	r1, #80, 4
    9a68:	a2070000 	andge	r0, r7, #0
    9a6c:	0000a41e 	andeq	sl, r0, lr, lsl r4
    9a70:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    9a74:	00028a12 	andeq	r8, r2, r2, lsl sl
    9a78:	1ea40700 	cdpne	7, 10, cr0, cr4, cr0, {0}
    9a7c:	00000098 	muleq	r0, r8, r0
    9a80:	12582302 	subsne	r2, r8, #134217728	; 0x8000000
    9a84:	0000033e 	andeq	r0, r0, lr, lsr r3
    9a88:	981ea607 	ldmdals	lr, {r0, r1, r2, r9, sl, sp, pc}
    9a8c:	02000000 	andeq	r0, r0, #0
    9a90:	14005c23 	strne	r5, [r0], #-3107	; 0xfffff3dd
    9a94:	00013604 	andeq	r3, r1, r4, lsl #12
    9a98:	16041500 	strne	r1, [r4], -r0, lsl #10
    9a9c:	00042d01 	andeq	r2, r4, r1, lsl #26
    9aa0:	042d1700 	strteq	r1, [sp], #-1792	; 0xfffff900
    9aa4:	14000000 	strne	r0, [r0], #-0
    9aa8:	00033904 	andeq	r3, r3, r4, lsl #18
    9aac:	21041400 	tstcs	r4, r0, lsl #8
    9ab0:	03000004 	movweq	r0, #4
    9ab4:	00000687 	andeq	r0, r0, r7, lsl #13
    9ab8:	3902a807 	stmdbcc	r2, {r0, r1, r2, fp, sp, pc}
    9abc:	14000003 	strne	r0, [r0], #-3
    9ac0:	00043904 	andeq	r3, r4, r4, lsl #18
    9ac4:	010c1100 	mrseq	r1, (UNDEF: 28)
    9ac8:	0482096f 	streq	r0, [r2], #2415	; 0x96f
    9acc:	49180000 	ldmdbmi	r8, {}	; <UNPREDICTABLE>
    9ad0:	01005253 	tsteq	r0, r3, asr r2
    9ad4:	00a41171 	adceq	r1, r4, r1, ror r1
    9ad8:	23020000 	movwcs	r0, #8192	; 0x2000
    9adc:	1d1b1200 	lfmne	f1, 4, [fp, #-0]
    9ae0:	72010000 	andvc	r0, r1, #0
    9ae4:	0000a411 	andeq	sl, r0, r1, lsl r4
    9ae8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9aec:	001e6c12 	andseq	r6, lr, r2, lsl ip
    9af0:	11730100 	cmnne	r3, r0, lsl #2
    9af4:	000000a4 	andeq	r0, r0, r4, lsr #1
    9af8:	00082302 	andeq	r2, r8, r2, lsl #6
    9afc:	001edf03 	andseq	sp, lr, r3, lsl #30
    9b00:	03740100 	cmneq	r4, #0, 2
    9b04:	0000044b 	andeq	r0, r0, fp, asr #8
    9b08:	001e8719 	andseq	r8, lr, r9, lsl r7
    9b0c:	04bd0100 	ldrteq	r0, [sp], #256	; 0x100
    9b10:	018c011a 	orreq	r0, ip, sl, lsl r1
	...
    9b1c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    9b20:	04ec0100 	strbteq	r0, [ip], #256	; 0x100
    9b24:	001a0000 	andseq	r0, sl, r0
    9b28:	01000016 	tsteq	r0, r6, lsl r0
    9b2c:	454004bd 	strbmi	r0, [r0, #-1213]	; 0xfffffb43
    9b30:	ab000004 	blge	9b48 <_Min_Heap_Size+0x9348>
    9b34:	6f000065 	svcvs	0x00000065
    9b38:	1b000065 	blne	9cd4 <_Min_Heap_Size+0x94d4>
    9b3c:	00001c17 	andeq	r1, r0, r7, lsl ip
    9b40:	1504bf01 	strne	fp, [r4, #-3841]	; 0xfffff0ff
    9b44:	0000018c 	andeq	r0, r0, ip, lsl #3
    9b48:	0000672e 	andeq	r6, r0, lr, lsr #14
    9b4c:	0000672a 	andeq	r6, r0, sl, lsr #14
    9b50:	706d741c 	rsbvc	r7, sp, ip, lsl r4
    9b54:	04c00100 	strbeq	r0, [r0], #256	; 0x100
    9b58:	0000980c 	andeq	r9, r0, ip, lsl #16
    9b5c:	00678300 	rsbeq	r8, r7, r0, lsl #6
    9b60:	00674d00 	rsbeq	r4, r7, r0, lsl #26
    9b64:	f21d0000 	vhadd.s16	d0, d13, d0
    9b68:	0100001e 	tsteq	r0, lr, lsl r0
    9b6c:	011104a1 	tsteq	r1, r1, lsr #9
    9b70:	00000098 	muleq	r0, r8, r0
	...
    9b7c:	000068e6 	andeq	r6, r0, r6, ror #17
    9b80:	00054901 	andeq	r4, r5, r1, lsl #18
    9b84:	16001a00 	strne	r1, [r0], -r0, lsl #20
    9b88:	a1010000 	mrsge	r0, (UNDEF: 1)
    9b8c:	04453c04 	strbeq	r3, [r5], #-3076	; 0xfffff3fc
    9b90:	69240000 	stmdbvs	r4!, {}	; <UNPREDICTABLE>
    9b94:	691e0000 	ldmdbvs	lr, {}	; <UNPREDICTABLE>
    9b98:	1c1b0000 	ldcne	0, cr0, [fp], {-0}
    9b9c:	0100001e 	tsteq	r0, lr, lsl r0
    9ba0:	980c04a3 	stmdals	ip, {r0, r1, r5, r7, sl}
    9ba4:	54000000 	strpl	r0, [r0], #-0
    9ba8:	50000069 	andpl	r0, r0, r9, rrx
    9bac:	1e000069 	cdpne	0, 0, cr0, cr0, cr9, {3}
    9bb0:	00001d25 	andeq	r1, r0, r5, lsr #26
    9bb4:	1804a601 	stmdane	r4, {r0, r9, sl, sp, pc}
    9bb8:	000000c7 	andeq	r0, r0, r7, asr #1
    9bbc:	00000305 	andeq	r0, r0, r5, lsl #6
    9bc0:	1f000000 	svcne	0x00000000
    9bc4:	00001da3 	andeq	r1, r0, r3, lsr #27
    9bc8:	0d047f01 	stceq	15, cr7, [r4, #-4]
    9bcc:	00000001 	andeq	r0, r0, r1
    9bd0:	00000000 	andeq	r0, r0, r0
    9bd4:	00698f00 	rsbeq	r8, r9, r0, lsl #30
    9bd8:	05a70100 	streq	r0, [r7, #256]!	; 0x100
    9bdc:	00200000 	eoreq	r0, r0, r0
    9be0:	01000016 	tsteq	r0, r6, lsl r0
    9be4:	452e047f 	strmi	r0, [lr, #-1151]!	; 0xfffffb81
    9be8:	01000004 	tsteq	r0, r4
    9bec:	1f4a2050 	svcne	0x004a2050
    9bf0:	7f010000 	svcvc	0x00010000
    9bf4:	00983d04 	addseq	r3, r8, r4, lsl #26
    9bf8:	51010000 	mrspl	r0, (UNDEF: 1)
    9bfc:	001e7120 	andseq	r7, lr, r0, lsr #2
    9c00:	047f0100 	ldrbteq	r0, [pc], #-256	; 9c08 <_Min_Heap_Size+0x9408>
    9c04:	00009852 	andeq	r9, r0, r2, asr r8
    9c08:	1a520100 	bne	148a010 <_Min_Heap_Size+0x1489810>
    9c0c:	00001f55 	andeq	r1, r0, r5, asr pc
    9c10:	67047f01 	strvs	r7, [r4, -r1, lsl #30]
    9c14:	00000098 	muleq	r0, r8, r0
    9c18:	000069d1 	ldrdeq	r6, [r0], -r1
    9c1c:	000069c7 	andeq	r6, r0, r7, asr #19
    9c20:	de012100 	adfles	f2, f1, f0
    9c24:	01000018 	tsteq	r0, r8, lsl r0
    9c28:	010a0465 	tsteq	sl, r5, ror #8
    9c2c:	00000098 	muleq	r0, r8, r0
	...
    9c38:	01007d02 	tsteq	r0, r2, lsl #26
    9c3c:	000005dc 	ldrdeq	r0, [r0], -ip
    9c40:	0016001a 	andseq	r0, r6, sl, lsl r0
    9c44:	04650100 	strbteq	r0, [r5], #-256	; 0xffffff00
    9c48:	0004452e 	andeq	r4, r4, lr, lsr #10
    9c4c:	006a1c00 	rsbeq	r1, sl, r0, lsl #24
    9c50:	006a1800 	rsbeq	r1, sl, r0, lsl #16
    9c54:	01210000 			; <UNDEFINED> instruction: 0x01210000
    9c58:	00001f60 	andeq	r1, r0, r0, ror #30
    9c5c:	16045a01 	strne	r5, [r4], -r1, lsl #20
    9c60:	0002bc01 	andeq	fp, r2, r1, lsl #24
	...
    9c6c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    9c70:	00061101 	andeq	r1, r6, r1, lsl #2
    9c74:	16001a00 	strne	r1, [r0], -r0, lsl #20
    9c78:	5a010000 	bpl	49c80 <_Min_Heap_Size+0x49480>
    9c7c:	04453a04 	strbeq	r3, [r5], #-2564	; 0xfffff5fc
    9c80:	6a410000 	bvs	1049c88 <_Min_Heap_Size+0x1049488>
    9c84:	6a3d0000 	bvs	f49c8c <_Min_Heap_Size+0xf4948c>
    9c88:	21000000 	mrscs	r0, (UNDEF: 0)
    9c8c:	001e9a01 	andseq	r9, lr, r1, lsl #20
    9c90:	04050100 	streq	r0, [r5], #-256	; 0xffffff00
    9c94:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    9ca0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    9ca4:	066a0100 	strbteq	r0, [sl], -r0, lsl #2
    9ca8:	001a0000 	andseq	r0, sl, r0
    9cac:	01000016 	tsteq	r0, r6, lsl r0
    9cb0:	45410405 	strbmi	r0, [r1, #-1029]	; 0xfffffbfb
    9cb4:	6a000004 	bvs	9ccc <_Min_Heap_Size+0x94cc>
    9cb8:	6200006a 	andvs	r0, r0, #106	; 0x6a
    9cbc:	2000006a 	andcs	r0, r0, sl, rrx
    9cc0:	00001e7c 	andeq	r1, r0, ip, ror lr
    9cc4:	61040501 	tstvs	r4, r1, lsl #10
    9cc8:	0000032d 	andeq	r0, r0, sp, lsr #6
    9ccc:	171b5101 	ldrne	r5, [fp, -r1, lsl #2]
    9cd0:	0100001c 	tsteq	r0, ip, lsl r0
    9cd4:	8c150407 	cfldrshi	mvf0, [r5], {7}
    9cd8:	a4000001 	strge	r0, [r0], #-1
    9cdc:	9e00006a 	cdpls	0, 0, cr0, cr0, cr10, {3}
    9ce0:	0000006a 	andeq	r0, r0, sl, rrx
    9ce4:	1d020121 	stfnes	f0, [r2, #-132]	; 0xffffff7c
    9ce8:	c7010000 	strgt	r0, [r1, -r0]
    9cec:	8c011303 	stchi	3, cr1, [r1], {3}
    9cf0:	00000001 	andeq	r0, r0, r1
    9cf4:	00000000 	andeq	r0, r0, r0
    9cf8:	02000000 	andeq	r0, r0, #0
    9cfc:	d801007d 	stmdale	r1, {r0, r2, r3, r4, r5, r6}
    9d00:	1a000006 	bne	9d20 <_Min_Heap_Size+0x9520>
    9d04:	00001600 	andeq	r1, r0, r0, lsl #12
    9d08:	3f03c701 	svccc	0x0003c701
    9d0c:	00000445 	andeq	r0, r0, r5, asr #8
    9d10:	00006ad3 	ldrdeq	r6, [r0], -r3
    9d14:	00006acf 	andeq	r6, r0, pc, asr #21
    9d18:	001e7c20 	andseq	r7, lr, r0, lsr #24
    9d1c:	03c70100 	biceq	r0, r7, #0, 2
    9d20:	00032d5f 	andeq	r2, r3, pc, asr sp
    9d24:	1a510100 	bne	144a12c <_Min_Heap_Size+0x144992c>
    9d28:	00001f71 	andeq	r1, r0, r1, ror pc
    9d2c:	7303c701 	movwvc	ip, #14081	; 0x3701
    9d30:	000006e4 	andeq	r0, r0, r4, ror #13
    9d34:	00006af7 	strdeq	r6, [r0], -r7
    9d38:	00006af1 	strdeq	r6, [r0], -r1
    9d3c:	001c171b 	andseq	r1, ip, fp, lsl r7
    9d40:	03ca0100 	biceq	r0, sl, #0, 2
    9d44:	00018c15 	andeq	r8, r1, r5, lsl ip
    9d48:	006b2900 	rsbeq	r2, fp, r0, lsl #18
    9d4c:	006b2300 	rsbeq	r2, fp, r0, lsl #6
    9d50:	01160000 	tsteq	r6, r0
    9d54:	000006e4 	andeq	r0, r0, r4, ror #13
    9d58:	00044517 	andeq	r4, r4, r7, lsl r5
    9d5c:	04140000 	ldreq	r0, [r4], #-0
    9d60:	000006d8 	ldrdeq	r0, [r0], -r8
    9d64:	1eb50122 	frdnesp	f0, f5, f2
    9d68:	ea010000 	b	49d70 <_Min_Heap_Size+0x49570>
    9d6c:	00010602 	andeq	r0, r1, r2, lsl #12
    9d70:	00000000 	andeq	r0, r0, r0
    9d74:	54000000 	strpl	r0, [r0], #-0
    9d78:	0100006b 	tsteq	r0, fp, rrx
    9d7c:	000007e7 	andeq	r0, r0, r7, ror #15
    9d80:	0016001a 	andseq	r0, r6, sl, lsl r0
    9d84:	02ea0100 	rsceq	r0, sl, #0, 2
    9d88:	0004452c 	andeq	r4, r4, ip, lsr #10
    9d8c:	006b9a00 	rsbeq	r9, fp, r0, lsl #20
    9d90:	006b8c00 	rsbeq	r8, fp, r0, lsl #24
    9d94:	1d381b00 	vldmdbne	r8!, {d1-d0}
    9d98:	ec010000 	stc	0, cr0, [r1], {-0}
    9d9c:	00980c02 	addseq	r0, r8, r2, lsl #24
    9da0:	6bf40000 	blvs	ffd09da8 <_estack+0xdfd08b70>
    9da4:	6bf20000 	blvs	ffc89dac <_estack+0xdfc88b74>
    9da8:	441e0000 	ldrmi	r0, [lr], #-0
    9dac:	0100001f 	tsteq	r0, pc, lsl r0
    9db0:	a41102ed 	ldrge	r0, [r1], #-749	; 0xfffffd13
    9db4:	02000000 	andeq	r0, r0, #0
    9db8:	7b1b6491 	blvc	6e3004 <_Min_Heap_Size+0x6e2804>
    9dbc:	0100001f 	tsteq	r0, pc, lsl r0
    9dc0:	980c02ee 	stmdals	ip, {r1, r2, r3, r5, r6, r7, r9}
    9dc4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    9dc8:	0700006c 	streq	r0, [r0, -ip, rrx]
    9dcc:	1b00006c 	blne	9f84 <_Min_Heap_Size+0x9784>
    9dd0:	00001f83 	andeq	r1, r0, r3, lsl #31
    9dd4:	1702f101 	strne	pc, [r2, -r1, lsl #2]
    9dd8:	000007e7 	andeq	r0, r0, r7, ror #15
    9ddc:	00006c1e 	andeq	r6, r0, lr, lsl ip
    9de0:	00006c1c 	andeq	r6, r0, ip, lsl ip
    9de4:	00000023 	andeq	r0, r0, r3, lsr #32
    9de8:	00077a00 	andeq	r7, r7, r0, lsl #20
    9dec:	50012400 	andpl	r2, r1, r0, lsl #8
    9df0:	00007402 	andeq	r7, r0, r2, lsl #8
    9df4:	00000023 	andeq	r0, r0, r3, lsr #32
    9df8:	00078a00 	andeq	r8, r7, r0, lsl #20
    9dfc:	50012400 	andpl	r2, r1, r0, lsl #8
    9e00:	00007402 	andeq	r7, r0, r2, lsl #8
    9e04:	00000023 	andeq	r0, r0, r3, lsr #32
    9e08:	00079a00 	andeq	r9, r7, r0, lsl #20
    9e0c:	50012400 	andpl	r2, r1, r0, lsl #8
    9e10:	00007402 	andeq	r7, r0, r2, lsl #8
    9e14:	00000023 	andeq	r0, r0, r3, lsr #32
    9e18:	0007aa00 	andeq	sl, r7, r0, lsl #20
    9e1c:	50012400 	andpl	r2, r1, r0, lsl #8
    9e20:	00007402 	andeq	r7, r0, r2, lsl #8
    9e24:	00000023 	andeq	r0, r0, r3, lsr #32
    9e28:	0007ba00 	andeq	fp, r7, r0, lsl #20
    9e2c:	50012400 	andpl	r2, r1, r0, lsl #8
    9e30:	00007402 	andeq	r7, r0, r2, lsl #8
    9e34:	00000023 	andeq	r0, r0, r3, lsr #32
    9e38:	0007ca00 	andeq	ip, r7, r0, lsl #20
    9e3c:	50012400 	andpl	r2, r1, r0, lsl #8
    9e40:	00007402 	andeq	r7, r0, r2, lsl #8
    9e44:	00000023 	andeq	r0, r0, r3, lsr #32
    9e48:	0007da00 	andeq	sp, r7, r0, lsl #20
    9e4c:	50012400 	andpl	r2, r1, r0, lsl #8
    9e50:	00007402 	andeq	r7, r0, r2, lsl #8
    9e54:	00000025 	andeq	r0, r0, r5, lsr #32
    9e58:	50012400 	andpl	r2, r1, r0, lsl #8
    9e5c:	00007402 	andeq	r7, r0, r2, lsl #8
    9e60:	82041400 	andhi	r1, r4, #0, 8
    9e64:	26000004 	strcs	r0, [r0], -r4
    9e68:	001f9701 	andseq	r9, pc, r1, lsl #14
    9e6c:	02620100 	rsbeq	r0, r2, #0, 2
    9e70:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    9e7c:	6c310000 	ldcvs	0, cr0, [r1], #-0
    9e80:	d1010000 	mrsle	r0, (UNDEF: 1)
    9e84:	1a000008 	bne	9eac <_Min_Heap_Size+0x96ac>
    9e88:	00001600 	andeq	r1, r0, r0, lsl #12
    9e8c:	3e026201 	cdpcc	2, 0, cr6, cr2, cr1, {0}
    9e90:	00000445 	andeq	r0, r0, r5, asr #8
    9e94:	00006c55 	andeq	r6, r0, r5, asr ip
    9e98:	00006c51 	andeq	r6, r0, r1, asr ip
    9e9c:	001e5e1a 	andseq	r5, lr, sl, lsl lr
    9ea0:	02620100 	rsbeq	r0, r2, #0, 2
    9ea4:	0002e861 	andeq	lr, r2, r1, ror #16
    9ea8:	006c7700 	rsbeq	r7, ip, r0, lsl #14
    9eac:	006c7300 	rsbeq	r7, ip, r0, lsl #6
    9eb0:	16ad1a00 	strtne	r1, [sp], r0, lsl #20
    9eb4:	62010000 	andvs	r0, r1, #0
    9eb8:	00987902 	addseq	r7, r8, r2, lsl #18
    9ebc:	6c9c0000 	ldcvs	0, cr0, [ip], {0}
    9ec0:	6c980000 	ldcvs	0, cr0, [r8], {0}
    9ec4:	17270000 	strne	r0, [r7, -r0]!
    9ec8:	0100001c 	tsteq	r0, ip, lsl r0
    9ecc:	8c150264 	lfmhi	f0, 4, [r5], {100}	; 0x64
    9ed0:	00000001 	andeq	r0, r0, r1
    9ed4:	001f881b 	andseq	r8, pc, fp, lsl r8	; <UNPREDICTABLE>
    9ed8:	02650100 	rsbeq	r0, r5, #0, 2
    9edc:	0000980c 	andeq	r9, r0, ip, lsl #16
    9ee0:	006cbe00 	rsbeq	fp, ip, r0, lsl #28
    9ee4:	006cba00 	rsbeq	fp, ip, r0, lsl #20
    9ee8:	17c21b00 	strbne	r1, [r2, r0, lsl #22]
    9eec:	66010000 	strvs	r0, [r1], -r0
    9ef0:	00980c02 	addseq	r0, r8, r2, lsl #24
    9ef4:	6cea0000 	stclvs	0, cr0, [sl]
    9ef8:	6cdc0000 	ldclvs	0, cr0, [ip], {0}
    9efc:	381b0000 	ldmdacc	fp, {}	; <UNPREDICTABLE>
    9f00:	0100001d 	tsteq	r0, sp, lsl r0
    9f04:	980c0267 	stmdals	ip, {r0, r1, r2, r5, r6, r9}
    9f08:	43000000 	movwmi	r0, #0
    9f0c:	3f00006d 	svccc	0x0000006d
    9f10:	1b00006d 	blne	a0cc <_Min_Heap_Size+0x98cc>
    9f14:	00001f83 	andeq	r1, r0, r3, lsl #31
    9f18:	17026a01 	strne	r6, [r2, -r1, lsl #20]
    9f1c:	000007e7 	andeq	r0, r0, r7, ror #15
    9f20:	00006d65 	andeq	r6, r0, r5, ror #26
    9f24:	00006d61 	andeq	r6, r0, r1, ror #26
    9f28:	00000028 	andeq	r0, r0, r8, lsr #32
    9f2c:	000db900 	andeq	fp, sp, r0, lsl #18
    9f30:	00002800 	andeq	r2, r0, r0, lsl #16
    9f34:	0db90000 	ldceq	0, cr0, [r9]
    9f38:	00290000 	eoreq	r0, r9, r0
    9f3c:	06000000 	streq	r0, [r0], -r0
    9f40:	24000009 	strcs	r0, [r0], #-9
    9f44:	74025001 	strvc	r5, [r2], #-1
    9f48:	21000000 	mrscs	r0, (UNDEF: 0)
    9f4c:	00134d01 	andseq	r4, r3, r1, lsl #26
    9f50:	02440100 	subeq	r0, r4, #0, 2
    9f54:	018c0113 	orreq	r0, ip, r3, lsl r1
    9f58:	157c0000 	ldrbne	r0, [ip, #-0]!
    9f5c:	15a20800 	strne	r0, [r2, #2048]!	; 0x800
    9f60:	7d020800 	stcvc	8, cr0, [r2, #-0]
    9f64:	09060100 	stmdbeq	r6, {r8}
    9f68:	001a0000 	andseq	r0, sl, r0
    9f6c:	01000016 	tsteq	r0, r6, lsl r0
    9f70:	45370244 	ldrmi	r0, [r7, #-580]!	; 0xfffffdbc
    9f74:	8b000004 	blhi	9f8c <_Min_Heap_Size+0x978c>
    9f78:	8300006d 	movwhi	r0, #109	; 0x6d
    9f7c:	0000006d 	andeq	r0, r0, sp, rrx
    9f80:	15890126 	strne	r0, [r9, #294]	; 0x126
    9f84:	01010000 	mrseq	r0, (UNDEF: 1)
    9f88:	8c011302 	stchi	3, cr1, [r1], {2}
    9f8c:	e8000001 	stmda	r0, {r0}
    9f90:	7c080014 	stcvc	0, cr0, [r8], {20}
    9f94:	c5080015 	strgt	r0, [r8, #-21]	; 0xffffffeb
    9f98:	0100006d 	tsteq	r0, sp, rrx
    9f9c:	00000978 	andeq	r0, r0, r8, ror r9
    9fa0:	0016001a 	andseq	r0, r6, sl, lsl r0
    9fa4:	02010100 	andeq	r0, r1, #0, 2
    9fa8:	00044534 	andeq	r4, r4, r4, lsr r5
    9fac:	006de900 	rsbeq	lr, sp, r0, lsl #18
    9fb0:	006de500 	rsbeq	lr, sp, r0, lsl #10
    9fb4:	1f831b00 	svcne	0x00831b00
    9fb8:	04010000 	streq	r0, [r1], #-0
    9fbc:	07e71702 	strbeq	r1, [r7, r2, lsl #14]!
    9fc0:	6e090000 	cdpvs	0, 0, cr0, cr9, cr0, {0}
    9fc4:	6e070000 	cdpvs	0, 0, cr0, cr7, cr0, {0}
    9fc8:	c21b0000 	andsgt	r0, fp, #0
    9fcc:	01000017 	tsteq	r0, r7, lsl r0
    9fd0:	980c0206 	stmdals	ip, {r1, r2, r9}
    9fd4:	26000000 	strcs	r0, [r0], -r0
    9fd8:	1c00006e 	stcne	0, cr0, [r0], {110}	; 0x6e
    9fdc:	2800006e 	stmdacs	r0, {r1, r2, r3, r5, r6}
    9fe0:	080014f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, sl, ip}
    9fe4:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    9fe8:	00154628 	andseq	r4, r5, r8, lsr #12
    9fec:	000db908 	andeq	fp, sp, r8, lsl #18
    9ff0:	01260000 			; <UNDEFINED> instruction: 0x01260000
    9ff4:	00001427 	andeq	r1, r0, r7, lsr #8
    9ff8:	1301c301 	movwne	ip, #4865	; 0x1301
    9ffc:	00018c01 	andeq	r8, r1, r1, lsl #24
	...
    a008:	006e6500 	rsbeq	r6, lr, r0, lsl #10
    a00c:	0a570100 	beq	15ca414 <_Min_Heap_Size+0x15c9c14>
    a010:	001a0000 	andseq	r0, sl, r0
    a014:	01000016 	tsteq	r0, r6, lsl r0
    a018:	453701c3 	ldrmi	r0, [r7, #-451]!	; 0xfffffe3d
    a01c:	8d000004 	stchi	0, cr0, [r0, #-16]
    a020:	8500006e 	strhi	r0, [r0, #-110]	; 0xffffff92
    a024:	1a00006e 	bne	a1e4 <_Min_Heap_Size+0x99e4>
    a028:	00001f4a 	andeq	r1, r0, sl, asr #30
    a02c:	4601c301 	strmi	ip, [r1], -r1, lsl #6
    a030:	00000098 	muleq	r0, r8, r0
    a034:	00006ec9 	andeq	r6, r0, r9, asr #29
    a038:	00006ec1 	andeq	r6, r0, r1, asr #29
    a03c:	001e711a 	andseq	r7, lr, sl, lsl r1
    a040:	01c30100 	biceq	r0, r3, r0, lsl #2
    a044:	0000985b 	andeq	r9, r0, fp, asr r8
    a048:	006f0100 	rsbeq	r0, pc, r0, lsl #2
    a04c:	006efd00 	rsbeq	pc, lr, r0, lsl #26
    a050:	1f551a00 	svcne	0x00551a00
    a054:	c3010000 	movwgt	r0, #4096	; 0x1000
    a058:	00987001 	addseq	r7, r8, r1
    a05c:	6f230000 	svcvs	0x00230000
    a060:	6f1f0000 	svcvs	0x001f0000
    a064:	171b0000 	ldrne	r0, [fp, -r0]
    a068:	0100001c 	tsteq	r0, ip, lsl r0
    a06c:	8c1501c5 	ldfhis	f0, [r5], {197}	; 0xc5
    a070:	47000001 	strmi	r0, [r0, -r1]
    a074:	4100006f 	tstmi	r0, pc, rrx
    a078:	1b00006f 	blne	a23c <_Min_Heap_Size+0x9a3c>
    a07c:	00001f83 	andeq	r1, r0, r3, lsl #31
    a080:	1701c801 	strne	ip, [r1, -r1, lsl #16]
    a084:	000007e7 	andeq	r0, r0, r7, ror #15
    a088:	00006f75 	andeq	r6, r0, r5, ror pc
    a08c:	00006f73 	andeq	r6, r0, r3, ror pc
    a090:	0000002a 	andeq	r0, r0, sl, lsr #32
    a094:	000dc700 	andeq	ip, sp, r0, lsl #14
    a098:	000a3400 	andeq	r3, sl, r0, lsl #8
    a09c:	50012400 	andpl	r2, r1, r0, lsl #8
    a0a0:	00000305 	andeq	r0, r0, r5, lsl #6
    a0a4:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a0a8:	cb0a0351 	blgt	28adf4 <_Min_Heap_Size+0x28a5f4>
    a0ac:	00290001 	eoreq	r0, r9, r1
    a0b0:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    a0b4:	24000005 	strcs	r0, [r0], #-5
    a0b8:	74025001 	strvc	r5, [r2], #-1
    a0bc:	51012400 	tstpl	r1, r0, lsl #8
    a0c0:	24007602 	strcs	r7, [r0], #-1538	; 0xfffff9fe
    a0c4:	77025201 	strvc	r5, [r2, -r1, lsl #4]
    a0c8:	53012400 	movwpl	r2, #5120	; 0x1400
    a0cc:	00007502 	andeq	r7, r0, r2, lsl #10
    a0d0:	57012600 	strpl	r2, [r1, -r0, lsl #12]
    a0d4:	0100001d 	tsteq	r0, sp, lsl r0
    a0d8:	01130197 			; <UNDEFINED> instruction: 0x01130197
    a0dc:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    a0e8:	00006f88 	andeq	r6, r0, r8, lsl #31
    a0ec:	000b2101 	andeq	r2, fp, r1, lsl #2
    a0f0:	16001a00 	strne	r1, [r0], -r0, lsl #20
    a0f4:	97010000 	strls	r0, [r1, -r0]
    a0f8:	04453401 	strbeq	r3, [r5], #-1025	; 0xfffffbff
    a0fc:	6fb00000 	svcvs	0x00b00000
    a100:	6fa80000 	svcvs	0x00a80000
    a104:	4a1a0000 	bmi	68a10c <_Min_Heap_Size+0x68990c>
    a108:	0100001f 	tsteq	r0, pc, lsl r0
    a10c:	98430197 	stmdals	r3, {r0, r1, r2, r4, r7, r8}^
    a110:	ec000000 	stc	0, cr0, [r0], {-0}
    a114:	e400006f 	str	r0, [r0], #-111	; 0xffffff91
    a118:	1a00006f 	bne	a2dc <_Min_Heap_Size+0x9adc>
    a11c:	00001e71 	andeq	r1, r0, r1, ror lr
    a120:	58019701 	stmdapl	r1, {r0, r8, r9, sl, ip, pc}
    a124:	00000098 	muleq	r0, r8, r0
    a128:	00007024 	andeq	r7, r0, r4, lsr #32
    a12c:	00007020 	andeq	r7, r0, r0, lsr #32
    a130:	001f551a 	andseq	r5, pc, sl, lsl r5	; <UNPREDICTABLE>
    a134:	01970100 	orrseq	r0, r7, r0, lsl #2
    a138:	0000986d 	andeq	r9, r0, sp, ror #16
    a13c:	00704600 	rsbseq	r4, r0, r0, lsl #12
    a140:	00704200 	rsbseq	r4, r0, r0, lsl #4
    a144:	1c171b00 			; <UNDEFINED> instruction: 0x1c171b00
    a148:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    a14c:	018c1501 	orreq	r1, ip, r1, lsl #10
    a150:	706a0000 	rsbvc	r0, sl, r0
    a154:	70640000 	rsbvc	r0, r4, r0
    a158:	002a0000 	eoreq	r0, sl, r0
    a15c:	c7000000 	strgt	r0, [r0, -r0]
    a160:	fe00000d 	cdp2	0, 0, cr0, cr0, cr13, {0}
    a164:	2400000a 	strcs	r0, [r0], #-10
    a168:	03055001 	movweq	r5, #20481	; 0x5001
    a16c:	00000000 	andeq	r0, r0, r0
    a170:	03510124 	cmpeq	r1, #36, 2
    a174:	00019c0a 	andeq	r9, r1, sl, lsl #24
    a178:	00000029 	andeq	r0, r0, r9, lsr #32
    a17c:	00054900 	andeq	r4, r5, r0, lsl #18
    a180:	50012400 	andpl	r2, r1, r0, lsl #8
    a184:	24007402 	strcs	r7, [r0], #-1026	; 0xfffffbfe
    a188:	76025101 	strvc	r5, [r2], -r1, lsl #2
    a18c:	52012400 	andpl	r2, r1, #0, 8
    a190:	24007702 	strcs	r7, [r0], #-1794	; 0xfffff8fe
    a194:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    a198:	26000000 	strcs	r0, [r0], -r0
    a19c:	001d6501 	andseq	r6, sp, r1, lsl #10
    a1a0:	01350100 	teqeq	r5, r0, lsl #2
    a1a4:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    a1b0:	70960000 	addsvc	r0, r6, r0
    a1b4:	9a010000 	bls	4a1bc <_Min_Heap_Size+0x499bc>
    a1b8:	1a00000b 	bne	a1ec <_Min_Heap_Size+0x99ec>
    a1bc:	00001600 	andeq	r1, r0, r0, lsl #12
    a1c0:	35013501 	strcc	r3, [r1, #-1281]	; 0xfffffaff
    a1c4:	00000445 	andeq	r0, r0, r5, asr #8
    a1c8:	000070ca 	andeq	r7, r0, sl, asr #1
    a1cc:	000070c2 	andeq	r7, r0, r2, asr #1
    a1d0:	001f831b 	andseq	r8, pc, fp, lsl r3	; <UNPREDICTABLE>
    a1d4:	01370100 	teqeq	r7, r0, lsl #2
    a1d8:	0007e717 	andeq	lr, r7, r7, lsl r7
    a1dc:	00710300 	rsbseq	r0, r1, r0, lsl #6
    a1e0:	00710100 	rsbseq	r0, r1, r0, lsl #2
    a1e4:	00002a00 	andeq	r2, r0, r0, lsl #20
    a1e8:	0dc70000 	stcleq	0, cr0, [r7]
    a1ec:	0b890000 	bleq	fe24a1f4 <_estack+0xde248fbc>
    a1f0:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a1f4:	00030550 	andeq	r0, r3, r0, asr r5
    a1f8:	24000000 	strcs	r0, [r0], #-0
    a1fc:	0a035101 	beq	de608 <_Min_Heap_Size+0xdde08>
    a200:	29000147 	stmdbcs	r0, {r0, r1, r2, r6, r8}
    a204:	00000000 	andeq	r0, r0, r0
    a208:	000004ec 	andeq	r0, r0, ip, ror #9
    a20c:	02500124 	subseq	r0, r0, #36, 2
    a210:	00000075 	andeq	r0, r0, r5, ror r0
    a214:	1cf5012b 	ldfnee	f0, [r5], #172	; 0xac
    a218:	aa010000 	bge	4a220 <_Min_Heap_Size+0x49a20>
    a21c:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    a228:	71160000 	tstvc	r6, r0
    a22c:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    a230:	2c00000d 	stccs	0, cr0, [r0], {13}
    a234:	00001600 	andeq	r1, r0, r0, lsl #12
    a238:	4533aa01 	ldrmi	sl, [r3, #-2561]!	; 0xfffff5ff
    a23c:	3a000004 	bcc	a254 <_Min_Heap_Size+0x9a54>
    a240:	36000071 			; <UNDEFINED> instruction: 0x36000071
    a244:	2d000071 	stccs	0, cr0, [r0, #-452]	; 0xfffffe3c
    a248:	00706d74 	rsbseq	r6, r0, r4, ror sp
    a24c:	980cac01 	stmdals	ip, {r0, sl, fp, sp, pc}
    a250:	6a000000 	bvs	a258 <_Min_Heap_Size+0x9a58>
    a254:	58000071 	stmdapl	r0, {r0, r4, r5, r6}
    a258:	2e000071 	mcrcs	0, 0, r0, cr0, cr1, {3}
    a25c:	000017c2 	andeq	r1, r0, r2, asr #15
    a260:	980cad01 	stmdals	ip, {r0, r8, sl, fp, sp, pc}
    a264:	e2000000 	and	r0, r0, #0
    a268:	d8000071 	stmdale	r0, {r0, r4, r5, r6}
    a26c:	2e000071 	mcrcs	0, 0, r0, cr0, cr1, {3}
    a270:	00001f83 	andeq	r1, r0, r3, lsl #31
    a274:	e717ae01 	ldr	sl, [r7, -r1, lsl #28]
    a278:	23000007 	movwcs	r0, #7
    a27c:	21000072 	tstcs	r0, r2, ror r0
    a280:	28000072 	stmdacs	r0, {r1, r4, r5, r6}
    a284:	00000000 	andeq	r0, r0, r0
    a288:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    a28c:	0000002a 	andeq	r0, r0, sl, lsr #32
    a290:	000dc700 	andeq	ip, sp, r0, lsl #14
    a294:	000c2f00 	andeq	r2, ip, r0, lsl #30
    a298:	50012400 	andpl	r2, r1, r0, lsl #8
    a29c:	00000305 	andeq	r0, r0, r5, lsl #6
    a2a0:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a2a4:	b7080251 	smlsdlt	r8, r1, r2, r0
    a2a8:	00002800 	andeq	r2, r0, r0, lsl #16
    a2ac:	0db90000 	ldceq	0, cr0, [r9]
    a2b0:	002a0000 	eoreq	r0, sl, r0
    a2b4:	c7000000 	strgt	r0, [r0, -r0]
    a2b8:	5500000d 	strpl	r0, [r0, #-13]
    a2bc:	2400000c 	strcs	r0, [r0], #-12
    a2c0:	03055001 	movweq	r5, #20481	; 0x5001
    a2c4:	00000000 	andeq	r0, r0, r0
    a2c8:	02510124 	subseq	r0, r1, #36, 2
    a2cc:	2a00b808 	bcs	382f4 <_Min_Heap_Size+0x37af4>
    a2d0:	00000000 	andeq	r0, r0, r0
    a2d4:	00000dc7 	andeq	r0, r0, r7, asr #27
    a2d8:	00000c72 	andeq	r0, r0, r2, ror ip
    a2dc:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    a2e0:	00000003 	andeq	r0, r0, r3
    a2e4:	51012400 	tstpl	r1, r0, lsl #8
    a2e8:	00b90802 	adcseq	r0, r9, r2, lsl #16
    a2ec:	0000002a 	andeq	r0, r0, sl, lsr #32
    a2f0:	000dc700 	andeq	ip, sp, r0, lsl #14
    a2f4:	000c8f00 	andeq	r8, ip, r0, lsl #30
    a2f8:	50012400 	andpl	r2, r1, r0, lsl #8
    a2fc:	00000305 	andeq	r0, r0, r5, lsl #6
    a300:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a304:	ba080251 	blt	20ac50 <_Min_Heap_Size+0x20a450>
    a308:	00002a00 	andeq	r2, r0, r0, lsl #20
    a30c:	0dc70000 	stcleq	0, cr0, [r7]
    a310:	0cac0000 	stceq	0, cr0, [ip]
    a314:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a318:	00030550 	andeq	r0, r3, r0, asr r5
    a31c:	24000000 	strcs	r0, [r0], #-0
    a320:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    a324:	002a00bb 	strhteq	r0, [sl], -fp
    a328:	c7000000 	strgt	r0, [r0, -r0]
    a32c:	c900000d 	stmdbgt	r0, {r0, r2, r3}
    a330:	2400000c 	strcs	r0, [r0], #-12
    a334:	03055001 	movweq	r5, #20481	; 0x5001
    a338:	00000000 	andeq	r0, r0, r0
    a33c:	02510124 	subseq	r0, r1, #36, 2
    a340:	2a00bc08 	bcs	39368 <_Min_Heap_Size+0x38b68>
    a344:	00000000 	andeq	r0, r0, r0
    a348:	00000dc7 	andeq	r0, r0, r7, asr #27
    a34c:	00000ce6 	andeq	r0, r0, r6, ror #25
    a350:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    a354:	00000003 	andeq	r0, r0, r3
    a358:	51012400 	tstpl	r1, r0, lsl #8
    a35c:	00bd0802 	adcseq	r0, sp, r2, lsl #16
    a360:	0000002a 	andeq	r0, r0, sl, lsr #32
    a364:	000dc700 	andeq	ip, sp, r0, lsl #14
    a368:	000d0300 	andeq	r0, sp, r0, lsl #6
    a36c:	50012400 	andpl	r2, r1, r0, lsl #8
    a370:	00000305 	andeq	r0, r0, r5, lsl #6
    a374:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a378:	be080251 	mcrlt	2, 0, r0, cr8, cr1, {2}
    a37c:	00002a00 	andeq	r2, r0, r0, lsl #20
    a380:	0dc70000 	stcleq	0, cr0, [r7]
    a384:	0d200000 	stceq	0, cr0, [r0, #-0]
    a388:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a38c:	00030550 	andeq	r0, r3, r0, asr r5
    a390:	24000000 	strcs	r0, [r0], #-0
    a394:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    a398:	002a00bf 	strhteq	r0, [sl], -pc
    a39c:	c7000000 	strgt	r0, [r0, -r0]
    a3a0:	3d00000d 	stccc	0, cr0, [r0, #-52]	; 0xffffffcc
    a3a4:	2400000d 	strcs	r0, [r0], #-13
    a3a8:	03055001 	movweq	r5, #20481	; 0x5001
    a3ac:	00000000 	andeq	r0, r0, r0
    a3b0:	02510124 	subseq	r0, r1, #36, 2
    a3b4:	2a00c008 	bcs	3a3dc <_Min_Heap_Size+0x39bdc>
    a3b8:	00000000 	andeq	r0, r0, r0
    a3bc:	00000dc7 	andeq	r0, r0, r7, asr #27
    a3c0:	00000d5a 	andeq	r0, r0, sl, asr sp
    a3c4:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    a3c8:	00000003 	andeq	r0, r0, r3
    a3cc:	51012400 	tstpl	r1, r0, lsl #8
    a3d0:	00c50802 	sbceq	r0, r5, r2, lsl #16
    a3d4:	0000002a 	andeq	r0, r0, sl, lsr #32
    a3d8:	000dc700 	andeq	ip, sp, r0, lsl #14
    a3dc:	000d7700 	andeq	r7, sp, r0, lsl #14
    a3e0:	50012400 	andpl	r2, r1, r0, lsl #8
    a3e4:	00000305 	andeq	r0, r0, r5, lsl #6
    a3e8:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a3ec:	c6080251 			; <UNDEFINED> instruction: 0xc6080251
    a3f0:	00002a00 	andeq	r2, r0, r0, lsl #20
    a3f4:	0dc70000 	stcleq	0, cr0, [r7]
    a3f8:	0d940000 	ldceq	0, cr0, [r4]
    a3fc:	01240000 			; <UNDEFINED> instruction: 0x01240000
    a400:	00030550 	andeq	r0, r3, r0, asr r5
    a404:	24000000 	strcs	r0, [r0], #-0
    a408:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    a40c:	002a00c7 	eoreq	r0, sl, r7, asr #1
    a410:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    a414:	a8000004 	stmdage	r0, {r2}
    a418:	2400000d 	strcs	r0, [r0], #-13
    a41c:	74025001 	strvc	r5, [r2], #-1
    a420:	00290000 	eoreq	r0, r9, r0
    a424:	ec000000 	stc	0, cr0, [r0], {-0}
    a428:	24000004 	strcs	r0, [r0], #-4
    a42c:	74025001 	strvc	r5, [r2], #-1
    a430:	2f000000 	svccs	0x00000000
    a434:	161c0101 	ldrne	r0, [ip], -r1, lsl #2
    a438:	161c0000 	ldrne	r0, [ip], -r0
    a43c:	ea090000 	b	24a444 <_Min_Heap_Size+0x249c44>
    a440:	0101300a 	tsteq	r1, sl
    a444:	00000c8c 	andeq	r0, r0, ip, lsl #25
    a448:	00000c8c 	andeq	r0, r0, ip, lsl #25
    a44c:	0801e60a 	stmdaeq	r1, {r1, r3, r9, sl, sp, lr, pc}
    a450:	00142400 	andseq	r2, r4, r0, lsl #8
    a454:	c0000200 	andgt	r0, r0, r0, lsl #4
    a458:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
    a45c:	00058801 	andeq	r8, r5, r1, lsl #16
    a460:	1fc10c00 	svcne	0x00c10c00
    a464:	086d0000 	stmdaeq	sp!, {}^	; <UNPREDICTABLE>
    a468:	05a80000 	streq	r0, [r8, #0]!
	...
    a474:	7f3a0000 	svcvc	0x003a0000
    a478:	05020000 	streq	r0, [r2, #-0]
    a47c:	00023c01 	andeq	r3, r2, r1, lsl #24
    a480:	01420400 	cmpeq	r2, r0, lsl #8
    a484:	0000023c 	andeq	r0, r0, ip, lsr r2
    a488:	000f4603 	andeq	r4, pc, r3, lsl #12
    a48c:	75037200 	strvc	r7, [r3, #-512]	; 0xfffffe00
    a490:	7400000f 	strvc	r0, [r0], #-15
    a494:	000fd503 	andeq	sp, pc, r3, lsl #10
    a498:	7c037500 	cfstr32vc	mvfx7, [r3], {-0}
    a49c:	7600000e 	strvc	r0, [r0], -lr
    a4a0:	00102703 	andseq	r2, r0, r3, lsl #14
    a4a4:	a2037b00 	andge	r7, r3, #0, 22
    a4a8:	7c000011 	stcvc	0, cr0, [r0], {17}
    a4ac:	00128003 	andseq	r8, r2, r3
    a4b0:	ee037e00 	cdp	14, 0, cr7, cr3, cr0, {0}
    a4b4:	7f00000d 	svcvc	0x0000000d
    a4b8:	000f5a04 	andeq	r5, pc, r4, lsl #20
    a4bc:	46040000 	strmi	r0, [r4], -r0
    a4c0:	01000011 	tsteq	r0, r1, lsl r0
    a4c4:	000f8b04 	andeq	r8, pc, r4, lsl #22
    a4c8:	e9040200 	stmdb	r4, {r9}
    a4cc:	0300000c 	movweq	r0, #12
    a4d0:	000d5304 	andeq	r5, sp, r4, lsl #6
    a4d4:	d5040400 	strle	r0, [r4, #-1024]	; 0xfffffc00
    a4d8:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    a4dc:	00117304 	andseq	r7, r1, r4, lsl #6
    a4e0:	e6040600 	str	r0, [r4], -r0, lsl #12
    a4e4:	0700000e 	streq	r0, [r0, -lr]
    a4e8:	000cf704 	andeq	pc, ip, r4, lsl #14
    a4ec:	75040800 	strvc	r0, [r4, #-2048]	; 0xfffff800
    a4f0:	09000012 	stmdbeq	r0, {r1, r4}
    a4f4:	00106204 	andseq	r6, r0, r4, lsl #4
    a4f8:	be040a00 	vmlalt.f32	s0, s8, s0
    a4fc:	0b000010 	bleq	a544 <_Min_Heap_Size+0x9d44>
    a500:	00108804 	andseq	r8, r0, r4, lsl #16
    a504:	18040c00 	stmdane	r4, {sl, fp}
    a508:	0d00000e 	stceq	0, cr0, [r0, #-56]	; 0xffffffc8
    a50c:	0011de04 	andseq	sp, r1, r4, lsl #28
    a510:	7e040e00 	cdpvc	14, 0, cr0, cr4, cr0, {0}
    a514:	0f000011 	svceq	0x00000011
    a518:	000efe04 	andeq	pc, lr, r4, lsl #28
    a51c:	02041000 	andeq	r1, r4, #0
    a520:	1100000d 	tstne	r0, sp
    a524:	00113d04 	andseq	r3, r1, r4, lsl #26
    a528:	f1041200 			; <UNDEFINED> instruction: 0xf1041200
    a52c:	1300000e 	movwne	r0, #14
    a530:	000e9a04 	andeq	r9, lr, r4, lsl #20
    a534:	43041400 	movwmi	r1, #17408	; 0x4400
    a538:	15000012 	strne	r0, [r0, #-18]	; 0xffffffee
    a53c:	000f9b04 	andeq	r9, pc, r4, lsl #22
    a540:	51041600 	tstpl	r4, r0, lsl #12
    a544:	17000012 	smladne	r0, r2, r0, r0
    a548:	000fee04 	andeq	lr, pc, r4, lsl #28
    a54c:	02041800 	andeq	r1, r4, #0, 16
    a550:	19000012 	stmdbne	r0, {r1, r4}
    a554:	000dd604 	andeq	sp, sp, r4, lsl #12
    a558:	d9041a00 	stmdble	r4, {r9, fp, ip}
    a55c:	1b00000e 	blne	a59c <_Min_Heap_Size+0x9d9c>
    a560:	000d5e04 	andeq	r5, sp, r4, lsl #28
    a564:	fb041c00 	blx	11156e <_Min_Heap_Size+0x110d6e>
    a568:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    a56c:	000ea804 	andeq	sl, lr, r4, lsl #16
    a570:	cc041e00 	stcgt	14, cr1, [r4], {-0}
    a574:	1f00000e 	svcne	0x0000000e
    a578:	000e4c04 	andeq	r4, lr, r4, lsl #24
    a57c:	7b042000 	blvc	112584 <_Min_Heap_Size+0x111d84>
    a580:	21000010 	tstcs	r0, r0, lsl r0
    a584:	000fc004 	andeq	ip, pc, r4
    a588:	1d042200 	sfmne	f2, 4, [r4, #-0]
    a58c:	23000010 	movwcs	r0, #16
    a590:	000d9304 	andeq	r9, sp, r4, lsl #6
    a594:	05042400 	streq	r2, [r4, #-1024]	; 0xfffffc00
    a598:	25000011 	strcs	r0, [r0, #-17]	; 0xffffffef
    a59c:	000eb204 	andeq	fp, lr, r4, lsl #4
    a5a0:	fb042600 	blx	113daa <_Min_Heap_Size+0x1135aa>
    a5a4:	2700000d 	strcs	r0, [r0, -sp]
    a5a8:	0010ec04 	andseq	lr, r0, r4, lsl #24
    a5ac:	d0042800 	andle	r2, r4, r0, lsl #16
    a5b0:	29000010 	stmdbcs	r0, {r4}
    a5b4:	00105104 	andseq	r5, r0, r4, lsl #2
    a5b8:	9d042a00 	vstrls	s4, [r4, #-0]
    a5bc:	2b00000d 	blcs	a5f8 <_Min_Heap_Size+0x9df8>
    a5c0:	000d1404 	andeq	r1, sp, r4, lsl #8
    a5c4:	10042c00 	andne	r2, r4, r0, lsl #24
    a5c8:	2d00000f 	stccs	0, cr0, [r0, #-60]	; 0xffffffc4
    a5cc:	00125e04 	andseq	r5, r2, r4, lsl #28
    a5d0:	9f042e00 	svcls	0x00042e00
    a5d4:	2f000012 	svccs	0x00000012
    a5d8:	00115604 	andseq	r5, r1, r4, lsl #12
    a5dc:	6b043000 	blvs	1165e4 <_Min_Heap_Size+0x115de4>
    a5e0:	31000012 	tstcc	r0, r2, lsl r0
    a5e4:	000e7204 	andeq	r7, lr, r4, lsl #4
    a5e8:	49043200 	stmdbmi	r4, {r9, ip, sp}
    a5ec:	3300000d 	movwcc	r0, #13
    a5f0:	00103c04 	andseq	r3, r0, r4, lsl #24
    a5f4:	e3043400 	movw	r3, #17408	; 0x4400
    a5f8:	3500000f 	strcc	r0, [r0, #-15]
    a5fc:	00106d04 	andseq	r6, r0, r4, lsl #26
    a600:	01043600 	tsteq	r4, r0, lsl #12
    a604:	37000010 	smladcc	r0, r0, r0, r0
    a608:	000fa904 	andeq	sl, pc, r4, lsl #18
    a60c:	37043800 	strcc	r3, [r4, -r0, lsl #16]
    a610:	3900000d 	stmdbcc	r0, {r0, r2, r3}
    a614:	0012b104 	andseq	fp, r2, r4, lsl #2
    a618:	9a043a00 	bls	118e20 <_Min_Heap_Size+0x118620>
    a61c:	3b000010 	blcc	a664 <_Min_Heap_Size+0x9e64>
    a620:	000e2a04 	andeq	r2, lr, r4, lsl #20
    a624:	ac043c00 	stcge	12, cr3, [r4], {-0}
    a628:	3f000010 	svccc	0x00000010
    a62c:	000d6804 	andeq	r6, sp, r4, lsl #16
    a630:	2f044000 	svccs	0x00044000
    a634:	41000011 	tstmi	r0, r1, lsl r0
    a638:	000e6404 	andeq	r6, lr, r4, lsl #8
    a63c:	3a044200 	bcc	11ae44 <_Min_Heap_Size+0x11a644>
    a640:	4300000f 	movwmi	r0, #15
    a644:	000dc404 	andeq	ip, sp, r4, lsl #8
    a648:	90044400 	andls	r4, r4, r0, lsl #8
    a64c:	45000011 	strmi	r0, [r0, #-17]	; 0xffffffef
    a650:	000f2804 	andeq	r2, pc, r4, lsl #16
    a654:	76044600 	strvc	r4, [r4], -r0, lsl #12
    a658:	4700000d 	strmi	r0, [r0, -sp]
    a65c:	0011b404 	andseq	fp, r1, r4, lsl #8
    a660:	df044800 	svcle	0x00044800
    a664:	49000010 	stmdbmi	r0, {r4}
    a668:	00122904 	andseq	r2, r2, r4, lsl #18
    a66c:	8c044a00 			; <UNDEFINED> instruction: 0x8c044a00
    a670:	4b000012 	blmi	a6c0 <_Min_Heap_Size+0x9ec0>
    a674:	000f6404 	andeq	r6, pc, r4, lsl #8
    a678:	0b044c00 	bleq	11d680 <_Min_Heap_Size+0x11ce80>
    a67c:	4d000010 	stcmi	0, cr0, [r0, #-64]	; 0xffffffc0
    a680:	00112604 	andseq	r2, r1, r4, lsl #12
    a684:	33045000 	movwcc	r5, #16384	; 0x4000
    a688:	51000010 	tstpl	r0, r0, lsl r0
    a68c:	06010500 	streq	r0, [r1], -r0, lsl #10
    a690:	00000576 	andeq	r0, r0, r6, ror r5
    a694:	00234106 	eoreq	r4, r3, r6, lsl #2
    a698:	039b0400 	orrseq	r0, fp, #0, 8
    a69c:	00000029 	andeq	r0, r0, r9, lsr #32
    a6a0:	00006606 	andeq	r6, r0, r6, lsl #12
    a6a4:	182b0500 	stmdane	fp!, {r8, sl}
    a6a8:	0000025b 	andeq	r0, r0, fp, asr r2
    a6ac:	74080105 	strvc	r0, [r8], #-261	; 0xfffffefb
    a6b0:	05000005 	streq	r0, [r0, #-5]
    a6b4:	03fd0502 	mvnseq	r0, #8388608	; 0x800000
    a6b8:	f5060000 			; <UNDEFINED> instruction: 0xf5060000
    a6bc:	05000006 	streq	r0, [r0, #-6]
    a6c0:	02751939 	rsbseq	r1, r5, #933888	; 0xe4000
    a6c4:	02050000 	andeq	r0, r5, #0
    a6c8:	00078f07 	andeq	r8, r7, r7, lsl #30
    a6cc:	21c60600 	biccs	r0, r6, r0, lsl #12
    a6d0:	4d050000 	stcmi	0, cr0, [r5, #-0]
    a6d4:	00028818 	andeq	r8, r2, r8, lsl r8
    a6d8:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    a6dc:	000002ec 	andeq	r0, r0, ip, ror #5
    a6e0:	0002c206 	andeq	ip, r2, r6, lsl #4
    a6e4:	194f0500 	stmdbne	pc, {r8, sl}^	; <UNPREDICTABLE>
    a6e8:	0000029b 	muleq	r0, fp, r2
    a6ec:	b3070405 	movwlt	r0, #29701	; 0x7405
    a6f0:	05000000 	streq	r0, [r0, #-0]
    a6f4:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
    a6f8:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    a6fc:	0000ae07 	andeq	sl, r0, r7, lsl #28
    a700:	05040700 	streq	r0, [r4, #-1792]	; 0xfffff900
    a704:	00746e69 	rsbseq	r6, r4, r9, ror #28
    a708:	b8070405 	stmdalt	r7, {r0, r2, sl}
    a70c:	06000000 	streq	r0, [r0], -r0
    a710:	00000068 	andeq	r0, r0, r8, rrx
    a714:	4f131806 	svcmi	0x00131806
    a718:	08000002 	stmdaeq	r0, {r1}
    a71c:	000002be 			; <UNDEFINED> instruction: 0x000002be
    a720:	0006f706 	andeq	pc, r6, r6, lsl #14
    a724:	14240600 	strtne	r0, [r4], #-1536	; 0xfffffa00
    a728:	00000269 	andeq	r0, r0, r9, ror #4
    a72c:	0021c806 	eoreq	ip, r1, r6, lsl #16
    a730:	132c0600 			; <UNDEFINED> instruction: 0x132c0600
    a734:	0000027c 	andeq	r0, r0, ip, ror r2
    a738:	0002c406 	andeq	ip, r2, r6, lsl #8
    a73c:	14300600 	ldrtne	r0, [r0], #-1536	; 0xfffffa00
    a740:	0000028f 	andeq	r0, r0, pc, lsl #5
    a744:	0002e708 	andeq	lr, r2, r8, lsl #14
    a748:	02f30900 	rscseq	r0, r3, #0, 18
    a74c:	040a0000 	streq	r0, [sl], #-0
    a750:	019b020e 	orrseq	r0, fp, lr, lsl #4
    a754:	0003e309 	andeq	lr, r3, r9, lsl #6
    a758:	22d90b00 	sbcscs	r0, r9, #0, 22
    a75c:	9d020000 	stcls	0, cr0, [r2, #-0]
    a760:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    a764:	23020000 	movwcs	r0, #8192	; 0x2000
    a768:	050f0b00 	streq	r0, [pc, #-2816]	; 9c70 <_Min_Heap_Size+0x9470>
    a76c:	9e020000 	cdpls	0, 0, cr0, cr2, cr0, {0}
    a770:	03f81201 	mvnseq	r1, #268435456	; 0x10000000
    a774:	23020000 	movwcs	r0, #8192	; 0x2000
    a778:	22780b20 	rsbscs	r0, r8, #32, 22	; 0x8000
    a77c:	9f020000 	svcls	0x00020000
    a780:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    a784:	23030000 	movwcs	r0, #12288	; 0x3000
    a788:	190b0180 	stmdbne	fp, {r7, r8}
    a78c:	02000005 	andeq	r0, r0, #5
    a790:	f81201a0 			; <UNDEFINED> instruction: 0xf81201a0
    a794:	03000003 	movweq	r0, #3
    a798:	0b01a023 	bleq	7282c <_Min_Heap_Size+0x7202c>
    a79c:	0000202d 	andeq	r2, r0, sp, lsr #32
    a7a0:	1201a102 	andne	sl, r1, #-2147483648	; 0x80000000
    a7a4:	000003f3 	strdeq	r0, [r0], -r3
    a7a8:	02802303 	addeq	r2, r0, #201326592	; 0xc000000
    a7ac:	0005230b 	andeq	r2, r5, fp, lsl #6
    a7b0:	01a20200 			; <UNDEFINED> instruction: 0x01a20200
    a7b4:	0003f812 	andeq	pc, r3, r2, lsl r8	; <UNPREDICTABLE>
    a7b8:	a0230300 	eorge	r0, r3, r0, lsl #6
    a7bc:	1faf0b02 	svcne	0x00af0b02
    a7c0:	a3020000 	movwge	r0, #8192	; 0x2000
    a7c4:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    a7c8:	23030000 	movwcs	r0, #12288	; 0x3000
    a7cc:	2d0b0380 	stccs	3, cr0, [fp, #-512]	; 0xfffffe00
    a7d0:	02000005 	andeq	r0, r0, #5
    a7d4:	f81201a4 			; <UNDEFINED> instruction: 0xf81201a4
    a7d8:	03000003 	movweq	r0, #3
    a7dc:	0b03a023 	bleq	f2870 <_Min_Heap_Size+0xf2070>
    a7e0:	00002244 	andeq	r2, r0, r4, asr #4
    a7e4:	1201a502 	andne	sl, r1, #8388608	; 0x800000
    a7e8:	000003f3 	strdeq	r0, [r0], -r3
    a7ec:	04802303 	streq	r2, [r0], #771	; 0x303
    a7f0:	0005370b 	andeq	r3, r5, fp, lsl #14
    a7f4:	01a60200 			; <UNDEFINED> instruction: 0x01a60200
    a7f8:	00040812 	andeq	r0, r4, r2, lsl r8
    a7fc:	a0230300 	eorge	r0, r3, r0, lsl #6
    a800:	50490c04 	subpl	r0, r9, r4, lsl #24
    a804:	01a70200 			; <UNDEFINED> instruction: 0x01a70200
    a808:	00042812 	andeq	r2, r4, r2, lsl r8
    a80c:	80230300 	eorhi	r0, r3, r0, lsl #6
    a810:	05410b06 	strbeq	r0, [r1, #-2822]	; 0xfffff4fa
    a814:	a8020000 	stmdage	r2, {}	; <UNPREDICTABLE>
    a818:	042d1201 	strteq	r1, [sp], #-513	; 0xfffffdff
    a81c:	23030000 	movwcs	r0, #12288	; 0x3000
    a820:	fc0b07f0 	stc2	7, cr0, [fp], {240}	; 0xf0
    a824:	02000023 	andeq	r0, r0, #35	; 0x23
    a828:	f31201a9 	vrhadd.u16	d0, d18, d25
    a82c:	03000002 	movweq	r0, #2
    a830:	001c8023 	andseq	r8, ip, r3, lsr #32
    a834:	0002f30d 	andeq	pc, r2, sp, lsl #6
    a838:	0003f300 	andeq	pc, r3, r0, lsl #6
    a83c:	02b70e00 	adcseq	r0, r7, #0, 28
    a840:	00070000 	andeq	r0, r7, r0
    a844:	0003e308 	andeq	lr, r3, r8, lsl #6
    a848:	02e70d00 	rsceq	r0, r7, #0, 26
    a84c:	04080000 	streq	r0, [r8], #-0
    a850:	b70e0000 	strlt	r0, [lr, -r0]
    a854:	17000002 	strne	r0, [r0, -r2]
    a858:	02e70d00 	rsceq	r0, r7, #0, 26
    a85c:	04180000 	ldreq	r0, [r8], #-0
    a860:	b70e0000 	strlt	r0, [lr, -r0]
    a864:	37000002 	strcc	r0, [r0, -r2]
    a868:	02ca0d00 	sbceq	r0, sl, #0, 26
    a86c:	04280000 	strteq	r0, [r8], #-0
    a870:	b70e0000 	strlt	r0, [lr, -r0]
    a874:	ef000002 	svc	0x00000002
    a878:	04180800 	ldreq	r0, [r8], #-2048	; 0xfffff800
    a87c:	e70d0000 	str	r0, [sp, -r0]
    a880:	3e000002 	cdpcc	0, 0, cr0, cr0, cr2, {0}
    a884:	0f000004 	svceq	0x00000004
    a888:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    a88c:	10000283 	andne	r0, r0, r3, lsl #5
    a890:	000022de 	ldrdeq	r2, [r0], -lr
    a894:	0401aa02 	streq	sl, [r1], #-2562	; 0xfffff5fe
    a898:	000002fd 	strdeq	r0, [r0], -sp
    a89c:	bd028c11 	stclt	12, cr8, [r2, #-68]	; 0xffffffbc
    a8a0:	05a70901 	streq	r0, [r7, #2305]!	; 0x901
    a8a4:	010b0000 	mrseq	r0, (UNDEF: 11)
    a8a8:	02000001 	andeq	r0, r0, #1
    a8ac:	f81201bf 			; <UNDEFINED> instruction: 0xf81201bf
    a8b0:	02000002 	andeq	r0, r0, #2
    a8b4:	8c0b0023 	stchi	0, cr0, [fp], {35}	; 0x23
    a8b8:	02000003 	andeq	r0, r0, #3
    a8bc:	f31201c0 	vrhadd.u16	q0, q9, q0
    a8c0:	02000002 	andeq	r0, r0, #2
    a8c4:	510b0423 	tstpl	fp, r3, lsr #8
    a8c8:	02000003 	andeq	r0, r0, #3
    a8cc:	f31201c1 	vrhadd.u16	q0, q9, <illegal reg q0.5>
    a8d0:	02000002 	andeq	r0, r0, #2
    a8d4:	a50b0823 	strge	r0, [fp, #-2083]	; 0xfffff7dd
    a8d8:	02000003 	andeq	r0, r0, #3
    a8dc:	f31201c2 	vrhadd.u16	q0, q9, q1
    a8e0:	02000002 	andeq	r0, r0, #2
    a8e4:	530c0c23 	movwpl	r0, #52259	; 0xcc23
    a8e8:	02005243 	andeq	r5, r0, #805306372	; 0x30000004
    a8ec:	f31201c3 	vrhadd.u16	q0, q9, <illegal reg q1.5>
    a8f0:	02000002 	andeq	r0, r0, #2
    a8f4:	430c1023 	movwmi	r1, #49187	; 0xc023
    a8f8:	02005243 	andeq	r5, r0, #805306372	; 0x30000004
    a8fc:	f31201c4 	vrhadd.u16	q0, q9, q2
    a900:	02000002 	andeq	r0, r0, #2
    a904:	530c1423 	movwpl	r1, #50211	; 0xc423
    a908:	02005048 	andeq	r5, r0, #72	; 0x48
    a90c:	b71201c5 	ldrlt	r0, [r2, -r5, asr #3]
    a910:	02000005 	andeq	r0, r0, #5
    a914:	820b1823 	andhi	r1, fp, #2293760	; 0x230000
    a918:	02000005 	andeq	r0, r0, #5
    a91c:	f31201c6 	vrhadd.u16	q0, q9, q3
    a920:	02000002 	andeq	r0, r0, #2
    a924:	8c0b2423 	cfstrshi	mvf2, [fp], {35}	; 0x23
    a928:	02000004 	andeq	r0, r0, #4
    a92c:	f31201c7 	vrhadd.u16	q0, q9, <illegal reg q3.5>
    a930:	02000002 	andeq	r0, r0, #2
    a934:	f40b2823 	vst2.8	{d2-d3}, [fp :128], r3
    a938:	02000008 	andeq	r0, r0, #8
    a93c:	f31201c8 	vrhadd.u16	q0, q9, q4
    a940:	02000002 	andeq	r0, r0, #2
    a944:	ab0b2c23 	blge	2d59d8 <_Min_Heap_Size+0x2d51d8>
    a948:	02000003 	andeq	r0, r0, #3
    a94c:	f31201c9 	vrhadd.u16	q0, q9, <illegal reg q4.5>
    a950:	02000002 	andeq	r0, r0, #2
    a954:	c90b3023 	stmdbgt	fp, {r0, r1, r5, ip, sp}
    a958:	02000003 	andeq	r0, r0, #3
    a95c:	f31201ca 	vrhadd.u16	q0, q9, q5
    a960:	02000002 	andeq	r0, r0, #2
    a964:	9c0b3423 	cfstrsls	mvf3, [fp], {35}	; 0x23
    a968:	02000002 	andeq	r0, r0, #2
    a96c:	f31201cb 	vrhadd.u16	q0, q9, <illegal reg q5.5>
    a970:	02000002 	andeq	r0, r0, #2
    a974:	6f0b3823 	svcvs	0x000b3823
    a978:	02000007 	andeq	r0, r0, #7
    a97c:	f31201cc 	vrhadd.u16	q0, q9, q6
    a980:	02000002 	andeq	r0, r0, #2
    a984:	500c3c23 	andpl	r3, ip, r3, lsr #24
    a988:	02005246 	andeq	r5, r0, #1610612740	; 0x60000004
    a98c:	d11201cd 	tstle	r2, sp, asr #3
    a990:	02000005 	andeq	r0, r0, #5
    a994:	440c4023 	strmi	r4, [ip], #-35	; 0xffffffdd
    a998:	02005246 	andeq	r5, r0, #1610612740	; 0x60000004
    a99c:	f81201ce 			; <UNDEFINED> instruction: 0xf81201ce
    a9a0:	02000002 	andeq	r0, r0, #2
    a9a4:	410c4823 	tstmi	ip, r3, lsr #16
    a9a8:	02005244 	andeq	r5, r0, #68, 4	; 0x40000004
    a9ac:	f81201cf 			; <UNDEFINED> instruction: 0xf81201cf
    a9b0:	02000002 	andeq	r0, r0, #2
    a9b4:	f80b4c23 			; <UNDEFINED> instruction: 0xf80b4c23
    a9b8:	02000003 	andeq	r0, r0, #3
    a9bc:	eb1201d0 	bl	48b104 <_Min_Heap_Size+0x48a904>
    a9c0:	02000005 	andeq	r0, r0, #5
    a9c4:	4e0b5023 	cdpmi	0, 0, cr5, cr11, cr3, {1}
    a9c8:	02000001 	andeq	r0, r0, #1
    a9cc:	051201d1 	ldreq	r0, [r2, #-465]	; 0xfffffe2f
    a9d0:	02000006 	andeq	r0, r0, #6
    a9d4:	0f0b6023 	svceq	0x000b6023
    a9d8:	02000005 	andeq	r0, r0, #5
    a9dc:	0a1201d2 	beq	48b12c <_Min_Heap_Size+0x48a92c>
    a9e0:	02000006 	andeq	r0, r0, #6
    a9e4:	090b7423 	stmdbeq	fp, {r0, r1, r5, sl, ip, sp, lr}
    a9e8:	02000005 	andeq	r0, r0, #5
    a9ec:	f31201d3 	vbsl	q0, q9, <illegal reg q1.5>
    a9f0:	03000002 	movweq	r0, #2
    a9f4:	00018823 	andeq	r8, r1, r3, lsr #16
    a9f8:	0002ca0d 	andeq	ip, r2, sp, lsl #20
    a9fc:	0005b700 	andeq	fp, r5, r0, lsl #14
    aa00:	02b70e00 	adcseq	r0, r7, #0, 28
    aa04:	000b0000 	andeq	r0, fp, r0
    aa08:	0005a708 	andeq	sl, r5, r8, lsl #14
    aa0c:	02f80d00 	rscseq	r0, r8, #0, 26
    aa10:	05cc0000 	strbeq	r0, [ip]
    aa14:	b70e0000 	strlt	r0, [lr, -r0]
    aa18:	01000002 	tsteq	r0, r2
    aa1c:	05bc0900 	ldreq	r0, [ip, #2304]!	; 0x900
    aa20:	cc080000 	stcgt	0, cr0, [r8], {-0}
    aa24:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    aa28:	000002f8 	strdeq	r0, [r0], -r8
    aa2c:	000005e6 	andeq	r0, r0, r6, ror #11
    aa30:	0002b70e 	andeq	fp, r2, lr, lsl #14
    aa34:	09000300 	stmdbeq	r0, {r8, r9}
    aa38:	000005d6 	ldrdeq	r0, [r0], -r6
    aa3c:	0005e608 	andeq	lr, r5, r8, lsl #12
    aa40:	02f80d00 	rscseq	r0, r8, #0, 26
    aa44:	06000000 	streq	r0, [r0], -r0
    aa48:	b70e0000 	strlt	r0, [lr, -r0]
    aa4c:	04000002 	streq	r0, [r0], #-2
    aa50:	05f00900 	ldrbeq	r0, [r0, #2304]!	; 0x900
    aa54:	00080000 	andeq	r0, r8, r0
    aa58:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    aa5c:	000002e7 	andeq	r0, r0, r7, ror #5
    aa60:	0000061a 	andeq	r0, r0, sl, lsl r6
    aa64:	0002b70e 	andeq	fp, r2, lr, lsl #14
    aa68:	10000400 	andne	r0, r0, r0, lsl #8
    aa6c:	000002d7 	ldrdeq	r0, [r0], -r7
    aa70:	0301d402 	movweq	sp, #5122	; 0x1402
    aa74:	0000044b 	andeq	r0, r0, fp, asr #8
    aa78:	fc021011 	stc2	0, cr1, [r2], {17}
    aa7c:	06720902 	ldrbteq	r0, [r2], -r2, lsl #18
    aa80:	cb0b0000 	blgt	2caa88 <_Min_Heap_Size+0x2ca288>
    aa84:	02000023 	andeq	r0, r0, #35	; 0x23
    aa88:	f31202fe 	vqsub.u16	q0, q9, q15
    aa8c:	02000002 	andeq	r0, r0, #2
    aa90:	390b0023 	stmdbcc	fp, {r0, r1, r5}
    aa94:	02000022 	andeq	r0, r0, #34	; 0x22
    aa98:	f31202ff 	vqsub.u16	q0, q9, <illegal reg q15.5>
    aa9c:	02000002 	andeq	r0, r0, #2
    aaa0:	560c0423 	strpl	r0, [ip], -r3, lsr #8
    aaa4:	02004c41 	andeq	r4, r0, #16640	; 0x4100
    aaa8:	f3120300 	vcgt.u16	d0, d2, d0
    aaac:	02000002 	andeq	r0, r0, #2
    aab0:	950b0823 	strls	r0, [fp, #-2083]	; 0xfffff7dd
    aab4:	02000021 	andeq	r0, r0, #33	; 0x21
    aab8:	f8120301 			; <UNDEFINED> instruction: 0xf8120301
    aabc:	02000002 	andeq	r0, r0, #2
    aac0:	10000c23 	andne	r0, r0, r3, lsr #24
    aac4:	00002140 	andeq	r2, r0, r0, asr #2
    aac8:	03030202 	movweq	r0, #12802	; 0x3202
    aacc:	00000627 	andeq	r0, r0, r7, lsr #12
    aad0:	bd022c11 	stclt	12, cr2, [r2, #-68]	; 0xffffffbc
    aad4:	073a0904 	ldreq	r0, [sl, -r4, lsl #18]!
    aad8:	760b0000 	strvc	r0, [fp], -r0
    aadc:	02000023 	andeq	r0, r0, #35	; 0x23
    aae0:	f81204bf 			; <UNDEFINED> instruction: 0xf81204bf
    aae4:	02000002 	andeq	r0, r0, #2
    aae8:	cb0b0023 	blgt	2cab7c <_Min_Heap_Size+0x2ca37c>
    aaec:	02000023 	andeq	r0, r0, #35	; 0x23
    aaf0:	f31204c0 	vshl.u16	q0, q0, q9
    aaf4:	02000002 	andeq	r0, r0, #2
    aaf8:	520c0423 	andpl	r0, ip, #587202560	; 0x23000000
    aafc:	0200524e 	andeq	r5, r0, #-536870908	; 0xe0000004
    ab00:	f31204c1 	vshl.u16	q0, <illegal reg q0.5>, q9
    ab04:	02000002 	andeq	r0, r0, #2
    ab08:	2b0b0823 	blcs	2ccb9c <_Min_Heap_Size+0x2cc39c>
    ab0c:	02000023 	andeq	r0, r0, #35	; 0x23
    ab10:	f31204c2 	vshl.u16	q0, q1, q9
    ab14:	02000002 	andeq	r0, r0, #2
    ab18:	550b0c23 	strpl	r0, [fp, #-3107]	; 0xfffff3dd
    ab1c:	02000023 	andeq	r0, r0, #35	; 0x23
    ab20:	f31204c3 	vshl.u16	q0, <illegal reg q1.5>, q9
    ab24:	02000002 	andeq	r0, r0, #2
    ab28:	e00b1023 	and	r1, fp, r3, lsr #32
    ab2c:	02000020 	andeq	r0, r0, #32
    ab30:	f31204c4 	vshl.u16	q0, q2, q9
    ab34:	02000002 	andeq	r0, r0, #2
    ab38:	8d0b1423 	cfstrshi	mvf1, [fp, #-140]	; 0xffffff74
    ab3c:	02000020 	andeq	r0, r0, #32
    ab40:	f31204c5 	vshl.u16	q0, <illegal reg q2.5>, q9
    ab44:	02000002 	andeq	r0, r0, #2
    ab48:	e80b1823 	stmda	fp, {r0, r1, r5, fp, ip}
    ab4c:	02000020 	andeq	r0, r0, #32
    ab50:	f31204c6 	vshl.u16	q0, q3, q9
    ab54:	02000002 	andeq	r0, r0, #2
    ab58:	150b1c23 	strne	r1, [fp, #-3107]	; 0xfffff3dd
    ab5c:	02000021 	andeq	r0, r0, #33	; 0x21
    ab60:	f31204c7 	vshl.u16	q0, <illegal reg q3.5>, q9
    ab64:	02000002 	andeq	r0, r0, #2
    ab68:	f00b2023 			; <UNDEFINED> instruction: 0xf00b2023
    ab6c:	02000020 	andeq	r0, r0, #32
    ab70:	f31204c8 	vshl.u16	q0, q4, q9
    ab74:	02000002 	andeq	r0, r0, #2
    ab78:	250b2423 	strcs	r2, [fp, #-1059]	; 0xfffffbdd
    ab7c:	02000020 	andeq	r0, r0, #32
    ab80:	f31204c9 	vshl.u16	q0, <illegal reg q4.5>, q9
    ab84:	02000002 	andeq	r0, r0, #2
    ab88:	10002823 	andne	r2, r0, r3, lsr #16
    ab8c:	00002437 	andeq	r2, r0, r7, lsr r4
    ab90:	0304ca02 	movweq	ip, #18946	; 0x4a02
    ab94:	0000067f 	andeq	r0, r0, pc, ror r6
    ab98:	5b010702 	blpl	4c7a8 <_Min_Heap_Size+0x4bfa8>
    ab9c:	07000002 	streq	r0, [r0, -r2]
    aba0:	076201b9 			; <UNDEFINED> instruction: 0x076201b9
    aba4:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
    aba8:	00000003 	andeq	r0, r0, r3
    abac:	54455312 	strbpl	r5, [r5], #-786	; 0xfffffcee
    abb0:	05000100 	streq	r0, [r0, #-256]	; 0xffffff00
    abb4:	06bf0408 	ldrteq	r0, [pc], r8, lsl #8
    abb8:	10130000 	andsne	r0, r3, r0
    abbc:	18092e08 	stmdane	r9, {r3, r9, sl, fp, sp}
    abc0:	14000008 	strne	r0, [r0], #-8
    abc4:	000023c4 	andeq	r2, r0, r4, asr #7
    abc8:	be1a3008 	cdplt	0, 1, cr3, cr10, cr8, {0}
    abcc:	02000002 	andeq	r0, r0, #2
    abd0:	24140023 	ldrcs	r0, [r4], #-35	; 0xffffffdd
    abd4:	08000022 	stmdaeq	r0, {r1, r5}
    abd8:	02be1a32 	adcseq	r1, lr, #204800	; 0x32000
    abdc:	23020000 	movwcs	r0, #8192	; 0x2000
    abe0:	02901401 	addseq	r1, r0, #16777216	; 0x1000000
    abe4:	34080000 	strcc	r0, [r8], #-0
    abe8:	0002e71a 	andeq	lr, r2, sl, lsl r7
    abec:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    abf0:	00098f14 	andeq	r8, r9, r4, lsl pc
    abf4:	1a350800 	bne	d4cbfc <_Min_Heap_Size+0xd4c3fc>
    abf8:	000002be 			; <UNDEFINED> instruction: 0x000002be
    abfc:	14082302 	strne	r2, [r8], #-770	; 0xfffffcfe
    ac00:	000022c8 	andeq	r2, r0, r8, asr #5
    ac04:	be1a3708 	cdplt	7, 1, cr3, cr10, cr8, {0}
    ac08:	02000002 	andeq	r0, r0, #2
    ac0c:	b4140923 	ldrlt	r0, [r4], #-2339	; 0xfffff6dd
    ac10:	0800001f 	stmdaeq	r0, {r0, r1, r2, r3, r4}
    ac14:	02be1a39 	adcseq	r1, lr, #233472	; 0x39000
    ac18:	23020000 	movwcs	r0, #8192	; 0x2000
    ac1c:	21ac140a 			; <UNDEFINED> instruction: 0x21ac140a
    ac20:	3b080000 	blcc	20ac28 <_Min_Heap_Size+0x20a428>
    ac24:	0002be1a 	andeq	fp, r2, sl, lsl lr
    ac28:	0b230200 	bleq	8cb430 <_Min_Heap_Size+0x8cac30>
    ac2c:	0022b614 	eoreq	fp, r2, r4, lsl r6
    ac30:	1a3d0800 	bne	f4cc38 <_Min_Heap_Size+0xf4c438>
    ac34:	000002be 			; <UNDEFINED> instruction: 0x000002be
    ac38:	140c2302 	strne	r2, [ip], #-770	; 0xfffffcfe
    ac3c:	00002401 	andeq	r2, r0, r1, lsl #8
    ac40:	be1a3f08 	cdplt	15, 1, cr3, cr10, cr8, {0}
    ac44:	02000002 	andeq	r0, r0, #2
    ac48:	34140d23 	ldrcc	r0, [r4], #-3363	; 0xfffff2dd
    ac4c:	08000021 	stmdaeq	r0, {r0, r5}
    ac50:	02be1a41 	adcseq	r1, lr, #266240	; 0x41000
    ac54:	23020000 	movwcs	r0, #8192	; 0x2000
    ac58:	2032140e 	eorscs	r1, r2, lr, lsl #8
    ac5c:	43080000 	movwmi	r0, #32768	; 0x8000
    ac60:	0002be1a 	andeq	fp, r2, sl, lsl lr
    ac64:	0f230200 	svceq	0x00230200
    ac68:	211d0600 	tstcs	sp, r0, lsl #12
    ac6c:	45080000 	strmi	r0, [r8, #-0]
    ac70:	00076902 	andeq	r6, r7, r2, lsl #18
    ac74:	a1011500 	tstge	r1, r0, lsl #10
    ac78:	01000022 	tsteq	r0, r2, lsr #32
    ac7c:	010d01e9 	smlatteq	sp, r9, r1, r0
	...
    ac88:	01007d02 	tsteq	r0, r2, lsl #26
    ac8c:	204d0116 	subcs	r0, sp, r6, lsl r1
    ac90:	e0010000 	and	r0, r1, r0
    ac94:	00010601 	andeq	r0, r1, r1, lsl #12
    ac98:	00000000 	andeq	r0, r0, r0
    ac9c:	36000000 	strcc	r0, [r0], -r0
    aca0:	01000072 	tsteq	r0, r2, ror r0
    aca4:	00000861 	andeq	r0, r0, r1, ror #16
    aca8:	00000017 	andeq	r0, r0, r7, lsl r0
    acac:	00082400 	andeq	r2, r8, r0, lsl #8
    acb0:	01160000 	tsteq	r6, r0
    acb4:	0000235a 	andeq	r2, r0, sl, asr r3
    acb8:	0601ce01 	streq	ip, [r1], -r1, lsl #28
    acbc:	00000001 	andeq	r0, r0, r1
    acc0:	00000000 	andeq	r0, r0, r0
    acc4:	00725600 	rsbseq	r5, r2, r0, lsl #12
    acc8:	08ad0100 	stmiaeq	sp!, {r8}
    accc:	3a180000 	bcc	60acd4 <_Min_Heap_Size+0x60a4d4>
    acd0:	01000009 	tsteq	r0, r9
    acd4:	e72b01ce 	str	r0, [fp, -lr, asr #3]!
    acd8:	7e000002 	cdpvc	0, 0, cr0, cr0, cr2, {0}
    acdc:	76000072 			; <UNDEFINED> instruction: 0x76000072
    ace0:	19000072 	stmdbne	r0, {r1, r4, r5, r6}
    ace4:	00000000 	andeq	r0, r0, r0
    ace8:	00001418 	andeq	r1, r0, r8, lsl r4
    acec:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    acf0:	002d1c03 	eoreq	r1, sp, r3, lsl #24
    acf4:	51011a08 	tstpl	r1, r8, lsl #20
    acf8:	01d10a03 	bicseq	r0, r1, r3, lsl #20
    acfc:	011b0000 	tsteq	fp, r0
    ad00:	000021eb 	andeq	r2, r0, fp, ror #3
    ad04:	0a01bd01 	beq	7a110 <_Min_Heap_Size+0x79910>
    ad08:	0002e701 	andeq	lr, r2, r1, lsl #14
	...
    ad14:	0072b200 	rsbseq	fp, r2, r0, lsl #4
    ad18:	09210100 	stmdbeq	r1!, {r8}
    ad1c:	10180000 	andsne	r0, r8, r0
    ad20:	01000012 	tsteq	r0, r2, lsl r0
    ad24:	432701bd 			; <UNDEFINED> instruction: 0x432701bd
    ad28:	da000002 	ble	ad38 <_Min_Heap_Size+0xa538>
    ad2c:	d2000072 	andle	r0, r0, #114	; 0x72
    ad30:	1c000072 	stcne	0, cr0, [r0], {114}	; 0x72
    ad34:	000012fb 	strdeq	r1, [r0], -fp
    ad38:	00000000 	andeq	r0, r0, r0
    ad3c:	00059001 	andeq	r9, r5, r1
    ad40:	01c30100 	biceq	r0, r3, r0, lsl #2
    ad44:	0009060a 	andeq	r0, r9, sl, lsl #12
    ad48:	130e1d00 	movwne	r1, #60672	; 0xed00
    ad4c:	73180000 	tstvc	r8, #0
    ad50:	73140000 	tstvc	r4, #0
    ad54:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    ad58:	00000000 	andeq	r0, r0, r0
    ad5c:	00001418 	andeq	r1, r0, r8, lsl r4
    ad60:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    ad64:	002d1c03 	eoreq	r1, sp, r3, lsl #24
    ad68:	51011a08 	tstpl	r1, r8, lsl #20
    ad6c:	01c00a03 	biceq	r0, r0, r3, lsl #20
    ad70:	01160000 	tsteq	r6, r0
    ad74:	00002064 	andeq	r2, r0, r4, rrx
    ad78:	0601ac01 	streq	sl, [r1], -r1, lsl #24
    ad7c:	00000001 	andeq	r0, r0, r1
    ad80:	00000000 	andeq	r0, r0, r0
    ad84:	00733600 	rsbseq	r3, r3, r0, lsl #12
    ad88:	09950100 	ldmibeq	r5, {r8}
    ad8c:	10180000 	andsne	r0, r8, r0
    ad90:	01000012 	tsteq	r0, r2, lsl r0
    ad94:	432901ac 			; <UNDEFINED> instruction: 0x432901ac
    ad98:	5e000002 	cdppl	0, 0, cr0, cr0, cr2, {0}
    ad9c:	56000073 			; <UNDEFINED> instruction: 0x56000073
    ada0:	1e000073 	mcrne	0, 0, r0, cr0, cr3, {3}
    ada4:	0000131c 	andeq	r1, r0, ip, lsl r3
    ada8:	00000000 	andeq	r0, r0, r0
    adac:	00000001 	andeq	r0, r0, r1
    adb0:	00000000 	andeq	r0, r0, r0
    adb4:	01b20100 			; <UNDEFINED> instruction: 0x01b20100
    adb8:	00097a03 	andeq	r7, r9, r3, lsl #20
    adbc:	132b1d00 			; <UNDEFINED> instruction: 0x132b1d00
    adc0:	739a0000 	orrsvc	r0, sl, #0
    adc4:	73980000 	orrsvc	r0, r8, #0
    adc8:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    adcc:	00000000 	andeq	r0, r0, r0
    add0:	00001418 	andeq	r1, r0, r8, lsl r4
    add4:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    add8:	002d1c03 	eoreq	r1, sp, r3, lsl #24
    addc:	51011a08 	tstpl	r1, r8, lsl #20
    ade0:	01af0a03 			; <UNDEFINED> instruction: 0x01af0a03
    ade4:	011b0000 	tsteq	fp, r0
    ade8:	0000215f 	andeq	r2, r0, pc, asr r1
    adec:	0a019c01 	beq	71df8 <_Min_Heap_Size+0x715f8>
    adf0:	0002e701 	andeq	lr, r2, r1, lsl #14
	...
    adfc:	0073ad00 	rsbseq	sl, r3, r0, lsl #26
    ae00:	0a090100 	beq	24b208 <_Min_Heap_Size+0x24aa08>
    ae04:	10180000 	andsne	r0, r8, r0
    ae08:	01000012 	tsteq	r0, r2, lsl r0
    ae0c:	432b019c 			; <UNDEFINED> instruction: 0x432b019c
    ae10:	d5000002 	strle	r0, [r0, #-2]
    ae14:	cd000073 	stcgt	0, cr0, [r0, #-460]	; 0xfffffe34
    ae18:	1c000073 	stcne	0, cr0, [r0], {115}	; 0x73
    ae1c:	00001356 	andeq	r1, r0, r6, asr r3
    ae20:	00000000 	andeq	r0, r0, r0
    ae24:	00057801 	andeq	r7, r5, r1, lsl #16
    ae28:	01a20100 			; <UNDEFINED> instruction: 0x01a20100
    ae2c:	0009ee0a 	andeq	lr, r9, sl, lsl #28
    ae30:	13691d00 	cmnne	r9, #0, 26
    ae34:	74130000 	ldrvc	r0, [r3], #-0
    ae38:	740f0000 	strvc	r0, [pc], #-0	; ae40 <_Min_Heap_Size+0xa640>
    ae3c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    ae40:	00000000 	andeq	r0, r0, r0
    ae44:	00001418 	andeq	r1, r0, r8, lsl r4
    ae48:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    ae4c:	002d1c03 	eoreq	r1, sp, r3, lsl #24
    ae50:	51011a08 	tstpl	r1, r8, lsl #20
    ae54:	019f0a03 	orrseq	r0, pc, r3, lsl #20
    ae58:	01160000 	tsteq	r6, r0
    ae5c:	00002420 	andeq	r2, r0, r0, lsr #8
    ae60:	06018a01 	streq	r8, [r1], -r1, lsl #20
    ae64:	00000001 	andeq	r0, r0, r1
    ae68:	00000000 	andeq	r0, r0, r0
    ae6c:	00743100 	rsbseq	r3, r4, r0, lsl #2
    ae70:	0a7d0100 	beq	1f4b278 <_Min_Heap_Size+0x1f4aa78>
    ae74:	10180000 	andsne	r0, r8, r0
    ae78:	01000012 	tsteq	r0, r2, lsl r0
    ae7c:	4327018a 			; <UNDEFINED> instruction: 0x4327018a
    ae80:	59000002 	stmdbpl	r0, {r1}
    ae84:	51000074 	tstpl	r0, r4, ror r0
    ae88:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    ae8c:	00001339 	andeq	r1, r0, r9, lsr r3
    ae90:	00000000 	andeq	r0, r0, r0
    ae94:	00000001 	andeq	r0, r0, r1
    ae98:	00000000 	andeq	r0, r0, r0
    ae9c:	01900100 	orrseq	r0, r0, r0, lsl #2
    aea0:	000a6203 	andeq	r6, sl, r3, lsl #4
    aea4:	13481d00 	movtne	r1, #36096	; 0x8d00
    aea8:	74950000 	ldrvc	r0, [r5], #0
    aeac:	74930000 	ldrvc	r0, [r3], #0
    aeb0:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    aeb4:	00000000 	andeq	r0, r0, r0
    aeb8:	00001418 	andeq	r1, r0, r8, lsl r4
    aebc:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    aec0:	002d1c03 	eoreq	r1, sp, r3, lsl #24
    aec4:	51011a08 	tstpl	r1, r8, lsl #20
    aec8:	018d0a03 	orreq	r0, sp, r3, lsl #20
    aecc:	01160000 	tsteq	r6, r0
    aed0:	000020a1 	andeq	r2, r0, r1, lsr #1
    aed4:	06017b01 	streq	r7, [r1], -r1, lsl #22
    aed8:	00000001 	andeq	r0, r0, r1
    aedc:	00000000 	andeq	r0, r0, r0
    aee0:	0074a800 	rsbseq	sl, r4, r0, lsl #16
    aee4:	0ba40100 	bleq	fe90b2ec <_estack+0xde90a0b4>
    aee8:	10180000 	andsne	r0, r8, r0
    aeec:	01000012 	tsteq	r0, r2, lsl r0
    aef0:	4325017b 			; <UNDEFINED> instruction: 0x4325017b
    aef4:	d0000002 	andle	r0, r0, r2
    aef8:	c8000074 	stmdagt	r0, {r2, r4, r5, r6}
    aefc:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    af00:	0000203f 	andeq	r2, r0, pc, lsr r0
    af04:	34017b01 	strcc	r7, [r1], #-2817	; 0xfffff4ff
    af08:	000002e7 	andeq	r0, r0, r7, ror #5
    af0c:	00007514 	andeq	r7, r0, r4, lsl r5
    af10:	0000750a 	andeq	r7, r0, sl, lsl #10
    af14:	00219b18 	eoreq	r9, r1, r8, lsl fp
    af18:	017b0100 	cmneq	fp, r0, lsl #2
    af1c:	000ba44d 	andeq	sl, fp, sp, asr #8
    af20:	00755e00 	rsbseq	r5, r5, r0, lsl #28
    af24:	00755600 	rsbseq	r5, r5, r0, lsl #12
    af28:	22171800 	andscs	r1, r7, #0, 16
    af2c:	7b010000 	blvc	4af34 <_Min_Heap_Size+0x4a734>
    af30:	0ba46901 	bleq	fe92533c <_estack+0xde924104>
    af34:	75960000 	ldrvc	r0, [r6]
    af38:	75920000 	ldrvc	r0, [r2]
    af3c:	b01c0000 	andslt	r0, ip, r0
    af40:	00000012 	andeq	r0, r0, r2, lsl r0
    af44:	01000000 	mrseq	r0, (UNDEF: 0)
    af48:	00000548 	andeq	r0, r0, r8, asr #10
    af4c:	03018001 	movweq	r8, #4097	; 0x1001
    af50:	00000b11 	andeq	r0, r0, r1, lsl fp
    af54:	0012c31d 	andseq	ip, r2, sp, lsl r3
    af58:	0075b800 	rsbseq	fp, r5, r0, lsl #16
    af5c:	0075b400 	rsbseq	fp, r5, r0, lsl #8
    af60:	e31c0000 	tst	ip, #0
    af64:	00000011 	andeq	r0, r0, r1, lsl r0
    af68:	01000000 	mrseq	r0, (UNDEF: 0)
    af6c:	00000560 	andeq	r0, r0, r0, ror #10
    af70:	03018001 	movweq	r8, #4097	; 0x1001
    af74:	00000b89 	andeq	r0, r0, r9, lsl #23
    af78:	0012191d 	andseq	r1, r2, sp, lsl r9
    af7c:	0075da00 	rsbseq	sp, r5, r0, lsl #20
    af80:	0075d600 	rsbseq	sp, r5, r0, lsl #12
    af84:	120c1d00 	andne	r1, ip, #0, 26
    af88:	75fc0000 	ldrbvc	r0, [ip, #0]!
    af8c:	75f80000 	ldrbvc	r0, [r8, #0]!
    af90:	ff1d0000 			; <UNDEFINED> instruction: 0xff1d0000
    af94:	20000011 	andcs	r0, r0, r1, lsl r0
    af98:	1a000076 	bne	b178 <_Min_Heap_Size+0xa978>
    af9c:	1d000076 	stcne	0, cr0, [r0, #-472]	; 0xfffffe28
    afa0:	000011f2 	strdeq	r1, [r0], -r2
    afa4:	00007650 	andeq	r7, r0, r0, asr r6
    afa8:	0000764c 	andeq	r7, r0, ip, asr #12
    afac:	0005601f 	andeq	r6, r5, pc, lsl r0
    afb0:	12262000 	eorne	r2, r6, #0
    afb4:	76780000 	ldrbtvc	r0, [r8], -r0
    afb8:	766e0000 	strbtvc	r0, [lr], -r0
    afbc:	33200000 	nopcc	{0}	; <UNPREDICTABLE>
    afc0:	c6000012 			; <UNDEFINED> instruction: 0xc6000012
    afc4:	c0000076 	andgt	r0, r0, r6, ror r0
    afc8:	20000076 	andcs	r0, r0, r6, ror r0
    afcc:	00001240 	andeq	r1, r0, r0, asr #4
    afd0:	0000770d 	andeq	r7, r0, sp, lsl #14
    afd4:	0000770b 	andeq	r7, r0, fp, lsl #14
    afd8:	00190000 	andseq	r0, r9, r0
    afdc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    afe0:	1a000014 	bne	b038 <_Min_Heap_Size+0xa838>
    afe4:	03055001 	movweq	r5, #20481	; 0x5001
    afe8:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
    afec:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    aff0:	00017e0a 	andeq	r7, r1, sl, lsl #28
    aff4:	e7042100 	str	r2, [r4, -r0, lsl #2]
    aff8:	09000002 	stmdbeq	r0, {r1}
    affc:	00000ba4 	andeq	r0, r0, r4, lsr #23
    b000:	239f0122 	orrscs	r0, pc, #-2147483640	; 0x80000008
    b004:	60010000 	andvs	r0, r1, r0
    b008:	e7010a01 	str	r0, [r1, -r1, lsl #20]
    b00c:	00000002 	andeq	r0, r0, r2
    b010:	00000000 	andeq	r0, r0, r0
    b014:	02000000 	andeq	r0, r0, #0
    b018:	e501007d 	str	r0, [r1, #-125]	; 0xffffff83
    b01c:	2300000b 	movwcs	r0, #11
    b020:	000013b1 			; <UNDEFINED> instruction: 0x000013b1
    b024:	00000000 	andeq	r0, r0, r0
    b028:	00000002 	andeq	r0, r0, r2
    b02c:	00000000 	andeq	r0, r0, r0
    b030:	01630100 	cmneq	r3, r0, lsl #2
    b034:	0115000a 	tsteq	r5, sl
    b038:	0000200f 	andeq	r2, r0, pc
    b03c:	06015601 	streq	r5, [r1], -r1, lsl #12
    b040:	00000001 	andeq	r0, r0, r1
    b044:	00000000 	andeq	r0, r0, r0
    b048:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b04c:	7b011601 	blvc	50858 <_Min_Heap_Size+0x50058>
    b050:	01000023 	tsteq	r0, r3, lsr #32
    b054:	0106012a 	tsteq	r6, sl, lsr #2
	...
    b060:	00007720 	andeq	r7, r0, r0, lsr #14
    b064:	000d5601 	andeq	r5, sp, r1, lsl #12
    b068:	20f81800 	rscscs	r1, r8, r0, lsl #16
    b06c:	2a010000 	bcs	4b074 <_Min_Heap_Size+0x4a874>
    b070:	0d563301 	ldcleq	3, cr3, [r6, #-4]
    b074:	77480000 	strbvc	r0, [r8, -r0]
    b078:	77400000 	strbvc	r0, [r0, -r0]
    b07c:	00240000 	eoreq	r0, r4, r0
    b080:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    b084:	4b000014 	blmi	b0dc <_Min_Heap_Size+0xa8dc>
    b088:	1a00000c 	bne	b0c0 <_Min_Heap_Size+0xa8c0>
    b08c:	03055001 	movweq	r5, #20481	; 0x5001
    b090:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
    b094:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    b098:	00012d0a 	andeq	r2, r1, sl, lsl #26
    b09c:	00000024 	andeq	r0, r0, r4, lsr #32
    b0a0:	00141800 	andseq	r1, r4, r0, lsl #16
    b0a4:	000c6900 	andeq	r6, ip, r0, lsl #18
    b0a8:	50011a00 	andpl	r1, r1, r0, lsl #20
    b0ac:	2d1c0305 	ldccs	3, cr0, [ip, #-20]	; 0xffffffec
    b0b0:	011a0800 	tsteq	sl, r0, lsl #16
    b0b4:	2e0a0351 	mcrcs	3, 0, r0, cr10, cr1, {2}
    b0b8:	00240001 	eoreq	r0, r4, r1
    b0bc:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    b0c0:	87000014 	smladhi	r0, r4, r0, r0
    b0c4:	1a00000c 	bne	b0fc <_Min_Heap_Size+0xa8fc>
    b0c8:	03055001 	movweq	r5, #20481	; 0x5001
    b0cc:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
    b0d0:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    b0d4:	0001360a 	andeq	r3, r1, sl, lsl #12
    b0d8:	00000024 	andeq	r0, r0, r4, lsr #32
    b0dc:	00141800 	andseq	r1, r4, r0, lsl #16
    b0e0:	000ca500 	andeq	sl, ip, r0, lsl #10
    b0e4:	50011a00 	andpl	r1, r1, r0, lsl #20
    b0e8:	2d1c0305 	ldccs	3, cr0, [ip, #-20]	; 0xffffffec
    b0ec:	011a0800 	tsteq	sl, r0, lsl #16
    b0f0:	370a0351 	smlsdcc	sl, r1, r3, r0
    b0f4:	00240001 	eoreq	r0, r4, r1
    b0f8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    b0fc:	c3000014 	movwgt	r0, #20
    b100:	1a00000c 	bne	b138 <_Min_Heap_Size+0xa938>
    b104:	03055001 	movweq	r5, #20481	; 0x5001
    b108:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
    b10c:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    b110:	0001380a 	andeq	r3, r1, sl, lsl #16
    b114:	00000024 	andeq	r0, r0, r4, lsr #32
    b118:	00141800 	andseq	r1, r4, r0, lsl #16
    b11c:	000ce100 	andeq	lr, ip, r0, lsl #2
    b120:	50011a00 	andpl	r1, r1, r0, lsl #20
    b124:	2d1c0305 	ldccs	3, cr0, [ip, #-20]	; 0xffffffec
    b128:	011a0800 	tsteq	sl, r0, lsl #16
    b12c:	390a0351 	stmdbcc	sl, {r0, r4, r6, r8, r9}
    b130:	00240001 	eoreq	r0, r4, r1
    b134:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    b138:	ff000014 			; <UNDEFINED> instruction: 0xff000014
    b13c:	1a00000c 	bne	b174 <_Min_Heap_Size+0xa974>
    b140:	03055001 	movweq	r5, #20481	; 0x5001
    b144:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
    b148:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    b14c:	00013a0a 	andeq	r3, r1, sl, lsl #20
    b150:	00000024 	andeq	r0, r0, r4, lsr #32
    b154:	00141800 	andseq	r1, r4, r0, lsl #16
    b158:	000d1d00 	andeq	r1, sp, r0, lsl #26
    b15c:	50011a00 	andpl	r1, r1, r0, lsl #20
    b160:	2d1c0305 	ldccs	3, cr0, [ip, #-20]	; 0xffffffec
    b164:	011a0800 	tsteq	sl, r0, lsl #16
    b168:	3b0a0351 	blcc	28beb4 <_Min_Heap_Size+0x28b6b4>
    b16c:	00240001 	eoreq	r0, r4, r1
    b170:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    b174:	3b000014 	blcc	b1cc <_Min_Heap_Size+0xa9cc>
    b178:	1a00000d 	bne	b1b4 <_Min_Heap_Size+0xa9b4>
    b17c:	03055001 	movweq	r5, #20481	; 0x5001
    b180:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
    b184:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    b188:	00013c0a 	andeq	r3, r1, sl, lsl #24
    b18c:	00000019 	andeq	r0, r0, r9, lsl r0
    b190:	00141800 	andseq	r1, r4, r0, lsl #16
    b194:	50011a00 	andpl	r1, r1, r0, lsl #20
    b198:	2d1c0305 	ldccs	3, cr0, [ip, #-20]	; 0xffffffec
    b19c:	011a0800 	tsteq	sl, r0, lsl #16
    b1a0:	3d0a0351 	stccc	3, cr0, [sl, #-324]	; 0xfffffebc
    b1a4:	21000001 	tstcs	r0, r1
    b1a8:	00081804 	andeq	r1, r8, r4, lsl #16
    b1ac:	bc012500 	cfstr32lt	mvfx2, [r1], {-0}
    b1b0:	01000023 	tsteq	r0, r3, lsr #32
    b1b4:	01060117 	tsteq	r6, r7, lsl r1
	...
    b1c0:	01007d02 	tsteq	r0, r2, lsl #26
    b1c4:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    b1c8:	00209518 	eoreq	r9, r0, r8, lsl r5
    b1cc:	01170100 	tsteq	r7, r0, lsl #2
    b1d0:	0002e71e 	andeq	lr, r2, lr, lsl r7
    b1d4:	00778000 	rsbseq	r8, r7, r0
    b1d8:	00777c00 	rsbseq	r7, r7, r0, lsl #24
    b1dc:	14022300 	strne	r2, [r2], #-768	; 0xfffffd00
    b1e0:	00000000 	andeq	r0, r0, r0
    b1e4:	00010000 	andeq	r0, r1, r0
    b1e8:	00000000 	andeq	r0, r0, r0
    b1ec:	01000000 	mrseq	r0, (UNDEF: 0)
    b1f0:	23030120 	movwcs	r0, #12576	; 0x3120
    b1f4:	0000140d 	andeq	r1, r0, sp, lsl #8
    b1f8:	00000000 	andeq	r0, r0, r0
    b1fc:	00000001 	andeq	r0, r0, r1
    b200:	00000000 	andeq	r0, r0, r0
    b204:	01210100 			; <UNDEFINED> instruction: 0x01210100
    b208:	01250003 			; <UNDEFINED> instruction: 0x01250003
    b20c:	0000207d 	andeq	r2, r0, sp, ror r0
    b210:	06010001 	streq	r0, [r1], -r1
    b214:	00000001 	andeq	r0, r0, r1
    b218:	00000000 	andeq	r0, r0, r0
    b21c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b220:	000deb01 	andeq	lr, sp, r1, lsl #22
    b224:	13f72300 	mvnsne	r2, #0, 6
    b228:	00000000 	andeq	r0, r0, r0
    b22c:	00020000 	andeq	r0, r2, r0
    b230:	00000000 	andeq	r0, r0, r0
    b234:	01000000 	mrseq	r0, (UNDEF: 0)
    b238:	00030103 	andeq	r0, r3, r3, lsl #2
    b23c:	1ffc0126 	svcne	0x00fc0126
    b240:	e3010000 	movw	r0, #4096	; 0x1000
    b244:	02e7010a 	rsceq	r0, r7, #-2147483646	; 0x80000002
    b248:	169c0000 	ldrne	r0, [ip], r0
    b24c:	16c40800 	strbne	r0, [r4], r0, lsl #16
    b250:	7d020800 	stcvc	8, cr0, [r2, #-0]
    b254:	0e720100 	rpweqs	f0, f2, f0
    b258:	4b270000 	blmi	9cb260 <_Min_Heap_Size+0x9caa60>
    b25c:	01000023 	tsteq	r0, r3, lsr #32
    b260:	02e726e3 	rsceq	r2, r7, #238026752	; 0xe300000
    b264:	77a70000 	strvc	r0, [r7, r0]!
    b268:	77a10000 	strvc	r0, [r1, r0]!
    b26c:	b6280000 	strtlt	r0, [r8], -r0
    b270:	9c000011 	stcls	0, cr0, [r0], {17}
    b274:	02080016 	andeq	r0, r8, #22
    b278:	0800169c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl, ip}
    b27c:	080016be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, sl, ip}
    b280:	1d0be501 	cfstr32ne	mvfx14, [fp, #-4]
    b284:	000011c9 	andeq	r1, r0, r9, asr #3
    b288:	000077db 	ldrdeq	r7, [r0], -fp
    b28c:	000077d5 	ldrdeq	r7, [r0], -r5
    b290:	0012d129 	andseq	sp, r2, r9, lsr #2
    b294:	0016aa00 	andseq	sl, r6, r0, lsl #20
    b298:	16aa0108 	strtne	r0, [sl], r8, lsl #2
    b29c:	16b20800 	ldrtne	r0, [r2], r0, lsl #16
    b2a0:	ee020800 	cdp	8, 0, cr0, cr2, cr0, {0}
    b2a4:	ed1d0307 	ldc	3, cr0, [sp, #-28]	; 0xffffffe4
    b2a8:	0b000012 	bleq	b2f8 <_Min_Heap_Size+0xaaf8>
    b2ac:	09000078 	stmdbeq	r0, {r3, r4, r5, r6}
    b2b0:	1d000078 	stcne	0, cr0, [r0, #-480]	; 0xfffffe20
    b2b4:	000012e0 	andeq	r1, r0, r0, ror #5
    b2b8:	00007821 	andeq	r7, r0, r1, lsr #16
    b2bc:	0000781f 	andeq	r7, r0, pc, lsl r8
    b2c0:	2a000000 	bcs	b2c8 <_Min_Heap_Size+0xaac8>
    b2c4:	00217601 	eoreq	r7, r1, r1, lsl #12
    b2c8:	06d60100 	ldrbeq	r0, [r6], r0, lsl #2
    b2cc:	00000001 	andeq	r0, r0, r1
    b2d0:	00000000 	andeq	r0, r0, r0
    b2d4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b2d8:	000ecf01 	andeq	ip, lr, r1, lsl #30
    b2dc:	11d72800 	bicsne	r2, r7, r0, lsl #16
    b2e0:	00000000 	andeq	r0, r0, r0
    b2e4:	00020000 	andeq	r0, r2, r0
    b2e8:	00000000 	andeq	r0, r0, r0
    b2ec:	01000000 	mrseq	r0, (UNDEF: 0)
    b2f0:	022303d9 	eoreq	r0, r3, #1677721603	; 0x64000003
    b2f4:	00000014 	andeq	r0, r0, r4, lsl r0
    b2f8:	04000000 	streq	r0, [r0], #-0
	...
    b304:	03079402 	movweq	r9, #29698	; 0x7402
    b308:	00140223 	andseq	r0, r4, r3, lsr #4
    b30c:	00000000 	andeq	r0, r0, r0
    b310:	00000100 	andeq	r0, r0, r0, lsl #2
    b314:	00000000 	andeq	r0, r0, r0
    b318:	99020000 	stmdbls	r2, {}	; <UNPREDICTABLE>
    b31c:	00000307 	andeq	r0, r0, r7, lsl #6
    b320:	11c1012b 	bicne	r0, r1, fp, lsr #2
    b324:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    b328:	00000106 	andeq	r0, r0, r6, lsl #2
    b32c:	00000000 	andeq	r0, r0, r0
    b330:	78360000 	ldmdavc	r6!, {}	; <UNPREDICTABLE>
    b334:	6b010000 	blvs	4b33c <_Min_Heap_Size+0x4ab3c>
    b338:	2700000f 	strcs	r0, [r0, -pc]
    b33c:	00001210 	andeq	r1, r0, r0, lsl r2
    b340:	4324c901 			; <UNDEFINED> instruction: 0x4324c901
    b344:	5e000002 	cdppl	0, 0, cr0, cr0, cr2, {0}
    b348:	56000078 			; <UNDEFINED> instruction: 0x56000078
    b34c:	2c000078 	stccs	0, cr0, [r0], {120}	; 0x78
    b350:	00001377 	andeq	r1, r0, r7, ror r3
    b354:	00000000 	andeq	r0, r0, r0
    b358:	00000001 	andeq	r0, r0, r1
    b35c:	00000000 	andeq	r0, r0, r0
    b360:	03cf0100 	biceq	r0, pc, #0, 2
    b364:	00000f51 	andeq	r0, r0, r1, asr pc
    b368:	0013861d 	andseq	r8, r3, sp, lsl r6
    b36c:	00789a00 	rsbseq	r9, r8, r0, lsl #20
    b370:	00789800 	rsbseq	r9, r8, r0, lsl #16
    b374:	14022300 	strne	r2, [r2], #-768	; 0xfffffd00
    b378:	00000000 	andeq	r0, r0, r0
    b37c:	00010000 	andeq	r0, r1, r0
    b380:	00000000 	andeq	r0, r0, r0
    b384:	02000000 	andeq	r0, r0, #0
    b388:	230506bf 	movwcs	r0, #22207	; 0x56bf
    b38c:	0000140d 	andeq	r1, r0, sp, lsl #8
    b390:	00000000 	andeq	r0, r0, r0
    b394:	00000001 	andeq	r0, r0, r1
    b398:	00000000 	andeq	r0, r0, r0
    b39c:	06c00200 	strbeq	r0, [r0], r0, lsl #4
    b3a0:	00190005 	andseq	r0, r9, r5
    b3a4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    b3a8:	1a000014 	bne	b400 <_Min_Heap_Size+0xac00>
    b3ac:	03055001 	movweq	r5, #20481	; 0x5001
    b3b0:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
    b3b4:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    b3b8:	0000cc08 	andeq	ip, r0, r8, lsl #24
    b3bc:	1160012b 	cmnne	r0, fp, lsr #2
    b3c0:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    b3c4:	166c0106 	strbtne	r0, [ip], -r6, lsl #2
    b3c8:	169c0800 	ldrne	r0, [ip], r0, lsl #16
    b3cc:	78ad0800 	stmiavc	sp!, {fp}
    b3d0:	db010000 	blle	4b3d8 <_Min_Heap_Size+0x4abd8>
    b3d4:	2700000f 	strcs	r0, [r0, -pc]
    b3d8:	00001210 	andeq	r1, r0, r0, lsl r2
    b3dc:	4323b901 			; <UNDEFINED> instruction: 0x4323b901
    b3e0:	d5000002 	strle	r0, [r0, #-2]
    b3e4:	cd000078 	stcgt	0, cr0, [r0, #-480]	; 0xfffffe20
    b3e8:	2c000078 	stccs	0, cr0, [r0], {120}	; 0x78
    b3ec:	00001394 	muleq	r0, r4, r3
    b3f0:	08001672 	stmdaeq	r0, {r1, r4, r5, r6, r9, sl, ip}
    b3f4:	00167201 	andseq	r7, r6, r1, lsl #4
    b3f8:	00168608 	andseq	r8, r6, r8, lsl #12
    b3fc:	03bf0108 			; <UNDEFINED> instruction: 0x03bf0108
    b400:	00000fc1 	andeq	r0, r0, r1, asr #31
    b404:	0013a31d 	andseq	sl, r3, sp, lsl r3
    b408:	00791100 	rsbseq	r1, r9, r0, lsl #2
    b40c:	00790f00 	rsbseq	r0, r9, r0, lsl #30
    b410:	90190000 	andsls	r0, r9, r0
    b414:	18080016 	stmdane	r8, {r1, r2, r4}
    b418:	1a000014 	bne	b470 <_Min_Heap_Size+0xac70>
    b41c:	03055001 	movweq	r5, #20481	; 0x5001
    b420:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
    b424:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    b428:	0000bc08 	andeq	fp, r0, r8, lsl #24
    b42c:	1111012b 	tstne	r1, fp, lsr #2
    b430:	a3010000 	movwge	r0, #4096	; 0x1000
    b434:	15e00106 	strbne	r0, [r0, #262]!	; 0x106
    b438:	166c0800 	strbtne	r0, [ip], -r0, lsl #16
    b43c:	79240800 	stmdbvc	r4!, {fp}
    b440:	2c010000 	stccs	0, cr0, [r1], {-0}
    b444:	27000011 	smladcs	r0, r1, r0, r0
    b448:	00001210 	andeq	r1, r0, r0, lsl r2
    b44c:	4325a301 			; <UNDEFINED> instruction: 0x4325a301
    b450:	4c000002 	stcmi	0, cr0, [r0], {2}
    b454:	44000079 	strmi	r0, [r0], #-121	; 0xffffff87
    b458:	27000079 	smlsdxcs	r0, r9, r0, r0
    b45c:	0000219c 	muleq	r0, ip, r1
    b460:	e734a301 	ldr	sl, [r4, -r1, lsl #6]!
    b464:	92000002 	andls	r0, r0, #2
    b468:	86000079 			; <UNDEFINED> instruction: 0x86000079
    b46c:	27000079 	smlsdxcs	r0, r9, r0, r0
    b470:	00002218 	andeq	r2, r0, r8, lsl r2
    b474:	e74ea301 	strb	sl, [lr, -r1, lsl #6]
    b478:	ee000002 	cdp	0, 0, cr0, cr0, cr2, {0}
    b47c:	e2000079 	and	r0, r0, #121	; 0x79
    b480:	2d000079 	stccs	0, cr0, [r0, #-484]	; 0xfffffe1c
    b484:	0000222b 	andeq	r2, r0, fp, lsr #4
    b488:	e70ca501 	str	sl, [ip, -r1, lsl #10]
    b48c:	4a000002 	bmi	b49c <_Min_Heap_Size+0xac9c>
    b490:	3e00007a 	mcrcc	0, 0, r0, cr0, cr10, {3}
    b494:	2e00007a 	mcrcs	0, 0, r0, cr0, cr10, {3}
    b498:	000013b1 			; <UNDEFINED> instruction: 0x000013b1
    b49c:	080015f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, sl, ip}
    b4a0:	0015f001 	andseq	pc, r5, r1
    b4a4:	0015f808 	andseq	pc, r5, r8, lsl #16
    b4a8:	13ab0108 			; <UNDEFINED> instruction: 0x13ab0108
    b4ac:	00124e2f 	andseq	r4, r2, pc, lsr #28
    b4b0:	0015f800 	andseq	pc, r5, r0, lsl #16
    b4b4:	05180208 	ldreq	r0, [r8, #-520]	; 0xfffffdf8
    b4b8:	ad010000 	stcge	0, cr0, [r1, #-0]
    b4bc:	0010c503 	andseq	ip, r0, r3, lsl #10
    b4c0:	127b1d00 	rsbsne	r1, fp, #0, 26
    b4c4:	7aa00000 	bvc	fe80b4cc <_estack+0xde80a294>
    b4c8:	7a9a0000 	bvc	fe68b4d0 <_estack+0xde68a298>
    b4cc:	6e1d0000 	cdpvs	0, 1, cr0, cr13, cr0, {0}
    b4d0:	d2000012 	andle	r0, r0, #18
    b4d4:	cc00007a 	stcgt	0, cr0, [r0], {122}	; 0x7a
    b4d8:	1d00007a 	stcne	0, cr0, [r0, #-488]	; 0xfffffe18
    b4dc:	00001261 	andeq	r1, r0, r1, ror #4
    b4e0:	00007b06 	andeq	r7, r0, r6, lsl #22
    b4e4:	00007afe 	strdeq	r7, [r0], -lr
    b4e8:	0005181f 	andeq	r1, r5, pc, lsl r8
    b4ec:	12882000 	addne	r2, r8, #0
    b4f0:	7b460000 	blvc	118b4f8 <_Min_Heap_Size+0x118acf8>
    b4f4:	7b3e0000 	blvc	f8b4fc <_Min_Heap_Size+0xf8acfc>
    b4f8:	95200000 	strls	r0, [r0, #-0]!
    b4fc:	82000012 	andhi	r0, r0, #18
    b500:	7e00007b 	mcrvc	0, 0, r0, cr0, cr11, {3}
    b504:	2000007b 	andcs	r0, r0, fp, ror r0
    b508:	000012a2 	andeq	r1, r0, r2, lsr #5
    b50c:	00007ba2 	andeq	r7, r0, r2, lsr #23
    b510:	00007ba0 	andeq	r7, r0, r0, lsr #23
    b514:	d12f0000 			; <UNDEFINED> instruction: 0xd12f0000
    b518:	22000012 	andcs	r0, r0, #18
    b51c:	01080016 	tsteq	r8, r6, lsl r0
    b520:	00000530 	andeq	r0, r0, r0, lsr r5
    b524:	f503ad01 			; <UNDEFINED> instruction: 0xf503ad01
    b528:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    b52c:	000012ed 	andeq	r1, r0, sp, ror #5
    b530:	00007bb9 			; <UNDEFINED> instruction: 0x00007bb9
    b534:	00007bb5 			; <UNDEFINED> instruction: 0x00007bb5
    b538:	0012e01d 	andseq	lr, r2, sp, lsl r0
    b53c:	007bdb00 	rsbseq	sp, fp, r0, lsl #22
    b540:	007bd700 	rsbseq	sp, fp, r0, lsl #14
    b544:	40240000 	eormi	r0, r4, r0
    b548:	18080016 	stmdane	r8, {r1, r2, r4}
    b54c:	12000014 	andne	r0, r0, #20
    b550:	1a000011 	bne	b59c <_Min_Heap_Size+0xad9c>
    b554:	03055001 	movweq	r5, #20481	; 0x5001
    b558:	08002d1c 	stmdaeq	r0, {r2, r3, r4, r8, sl, fp, sp}
    b55c:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    b560:	1900a808 	stmdbne	r0, {r3, fp, sp, pc}
    b564:	0800164a 	stmdaeq	r0, {r1, r3, r6, r9, sl, ip}
    b568:	00001418 	andeq	r1, r0, r8, lsl r4
    b56c:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    b570:	002d1c03 	eoreq	r1, sp, r3, lsl #24
    b574:	51011a08 	tstpl	r1, r8, lsl #20
    b578:	00a90802 	adceq	r0, r9, r2, lsl #16
    b57c:	e8012b00 	stmda	r1, {r8, r9, fp, sp}
    b580:	01000022 	tsteq	r0, r2, lsr #32
    b584:	a401068d 	strge	r0, [r1], #-1677	; 0xfffff973
    b588:	e0080015 	and	r0, r8, r5, lsl r0
    b58c:	f9080015 			; <UNDEFINED> instruction: 0xf9080015
    b590:	0100007b 	tsteq	r0, fp, ror r0
    b594:	000011b6 			; <UNDEFINED> instruction: 0x000011b6
    b598:	00203f27 	eoreq	r3, r0, r7, lsr #30
    b59c:	2c8d0100 	stfcss	f0, [sp], {0}
    b5a0:	000002e7 	andeq	r0, r0, r7, ror #5
    b5a4:	00007c23 	andeq	r7, r0, r3, lsr #24
    b5a8:	00007c19 	andeq	r7, r0, r9, lsl ip
    b5ac:	0013c02c 	andseq	ip, r3, ip, lsr #32
    b5b0:	0015ae00 	andseq	sl, r5, r0, lsl #28
    b5b4:	15ae0108 	strne	r0, [lr, #264]!	; 0x108
    b5b8:	15cc0800 	strbne	r0, [ip, #2048]	; 0x800
    b5bc:	93010800 	movwls	r0, #6144	; 0x1800
    b5c0:	00119c03 	andseq	r9, r1, r3, lsl #24
    b5c4:	13cf1d00 	bicne	r1, pc, #0, 26
    b5c8:	7c690000 	stclvc	0, cr0, [r9], #-0
    b5cc:	7c650000 	stclvc	0, cr0, [r5], #-0
    b5d0:	dc200000 	stcle	0, cr0, [r0], #-0
    b5d4:	90000013 	andls	r0, r0, r3, lsl r0
    b5d8:	8a00007c 	bhi	b7d0 <_Min_Heap_Size+0xafd0>
    b5dc:	2000007c 	andcs	r0, r0, ip, ror r0
    b5e0:	000013e9 	andeq	r1, r0, r9, ror #7
    b5e4:	00007cbd 			; <UNDEFINED> instruction: 0x00007cbd
    b5e8:	00007cb9 			; <UNDEFINED> instruction: 0x00007cb9
    b5ec:	15d61900 	ldrbne	r1, [r6, #2304]	; 0x900
    b5f0:	14180800 	ldrne	r0, [r8], #-2048	; 0xfffff800
    b5f4:	011a0000 	tsteq	sl, r0
    b5f8:	1c030550 	cfstr32ne	mvfx0, [r3], {80}	; 0x50
    b5fc:	1a08002d 	bne	20b6b8 <_Min_Heap_Size+0x20aeb8>
    b600:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    b604:	30000090 	mulcc	r0, r0, r0
    b608:	00002390 	muleq	r0, r0, r3
    b60c:	1a07e602 	bne	204e1c <_Min_Heap_Size+0x20461c>
    b610:	0002e701 	andeq	lr, r2, r1, lsl #14
    b614:	11d70300 	bicsne	r0, r7, r0, lsl #6
    b618:	3e310000 	cdpcc	0, 3, cr0, cr1, cr0, {0}
    b61c:	02000022 	andeq	r0, r0, #34	; 0x22
    b620:	e73207e6 	ldr	r0, [r2, -r6, ror #15]!
    b624:	00000002 	andeq	r0, r0, r2
    b628:	0020cd32 	eoreq	ip, r0, r2, lsr sp
    b62c:	07920200 	ldreq	r0, [r2, r0, lsl #4]
    b630:	03010122 	movweq	r0, #4386	; 0x1122
    b634:	00228d33 	eoreq	r8, r2, r3, lsr sp
    b638:	07600200 	strbeq	r0, [r0, -r0, lsl #4]!
    b63c:	4e030116 	mcrmi	1, 0, r0, cr3, cr6, {0}
    b640:	31000012 	tstcc	r0, r2, lsl r0
    b644:	0000221b 	andeq	r2, r0, fp, lsl r2
    b648:	34076002 	strcc	r6, [r7], #-2
    b64c:	000002e7 	andeq	r0, r0, r7, ror #5
    b650:	00203f31 	eoreq	r3, r0, r1, lsr pc
    b654:	07600200 	strbeq	r0, [r0, -r0, lsl #4]!
    b658:	0002e747 	andeq	lr, r2, r7, asr #14
    b65c:	219b3100 	orrscs	r3, fp, r0, lsl #2
    b660:	60020000 	andvs	r0, r2, r0
    b664:	0baa6607 	bleq	feaa4e88 <_estack+0xdeaa3c50>
    b668:	17310000 	ldrne	r0, [r1, -r0]!
    b66c:	02000022 	andeq	r0, r0, #34	; 0x22
    b670:	aa880760 	bge	fe20d3f8 <_estack+0xde20c1c0>
    b674:	3400000b 	strcc	r0, [r0], #-11
    b678:	00002330 	andeq	r2, r0, r0, lsr r3
    b67c:	0c076202 	sfmeq	f6, 4, [r7], {2}
    b680:	000002e7 	andeq	r0, r0, r7, ror #5
    b684:	00210134 	eoreq	r0, r1, r4, lsr r1
    b688:	07630200 	strbeq	r0, [r3, -r0, lsl #4]!
    b68c:	0002e70c 	andeq	lr, r2, ip, lsl #14
    b690:	227d3400 	rsbscs	r3, sp, #0, 8
    b694:	64020000 	strvs	r0, [r2], #-0
    b698:	02e70c07 	rsceq	r0, r7, #1792	; 0x700
    b69c:	30000000 	andcc	r0, r0, r0
    b6a0:	00002264 	andeq	r2, r0, r4, ror #4
    b6a4:	1a074502 	bne	1dcab4 <_Min_Heap_Size+0x1dc2b4>
    b6a8:	0002e701 	andeq	lr, r2, r1, lsl #14
    b6ac:	12b00300 	adcsne	r0, r0, #0, 6
    b6b0:	3f310000 	svccc	0x00310000
    b6b4:	02000020 	andeq	r0, r0, #32
    b6b8:	e7380745 	ldr	r0, [r8, -r5, asr #14]!
    b6bc:	31000002 	tstcc	r0, r2
    b6c0:	0000219c 	muleq	r0, ip, r1
    b6c4:	50074502 	andpl	r4, r7, r2, lsl #10
    b6c8:	000002e7 	andeq	r0, r0, r7, ror #5
    b6cc:	00221831 	eoreq	r1, r2, r1, lsr r8
    b6d0:	07450200 	strbeq	r0, [r5, -r0, lsl #4]
    b6d4:	0002e76a 	andeq	lr, r2, sl, ror #14
    b6d8:	23303400 	teqcs	r0, #0, 8
    b6dc:	47020000 	strmi	r0, [r2, -r0]
    b6e0:	02e70c07 	rsceq	r0, r7, #1792	; 0x700
    b6e4:	01340000 	teqeq	r4, r0
    b6e8:	02000021 	andeq	r0, r0, #33	; 0x21
    b6ec:	e70c0748 	str	r0, [ip, -r8, asr #14]
    b6f0:	34000002 	strcc	r0, [r0], #-2
    b6f4:	0000227d 	andeq	r2, r0, sp, ror r2
    b6f8:	0c074902 			; <UNDEFINED> instruction: 0x0c074902
    b6fc:	000002e7 	andeq	r0, r0, r7, ror #5
    b700:	22043000 	andcs	r3, r4, #0
    b704:	2c020000 	stccs	0, cr0, [r2], {-0}
    b708:	e7011a07 	str	r1, [r1, -r7, lsl #20]
    b70c:	03000002 	movweq	r0, #2
    b710:	000012d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    b714:	00121031 	andseq	r1, r2, r1, lsr r0
    b718:	072c0200 	streq	r0, [ip, -r0, lsl #4]!
    b71c:	00024337 	andeq	r4, r2, r7, lsr r3
    b720:	0d330000 	ldceq	0, cr0, [r3, #-0]
    b724:	02000024 	andeq	r0, r0, #36	; 0x24
    b728:	01160716 	tsteq	r6, r6, lsl r7
    b72c:	0012fb03 	andseq	pc, r2, r3, lsl #22
    b730:	12103100 	andsne	r3, r0, #0, 2
    b734:	16020000 	strne	r0, [r2], -r0
    b738:	02433307 	subeq	r3, r3, #469762048	; 0x1c000000
    b73c:	bd310000 	ldclt	0, cr0, [r1, #-0]
    b740:	02000021 	andeq	r0, r0, #33	; 0x21
    b744:	e7420716 	smlald	r0, r2, r6, r7
    b748:	00000002 	andeq	r0, r0, r2
    b74c:	0023d030 	eoreq	sp, r3, r0, lsr r0
    b750:	07000200 	streq	r0, [r0, -r0, lsl #4]
    b754:	02e7011a 	rsceq	r0, r7, #-2147483642	; 0x80000006
    b758:	1c030000 	stcne	0, cr0, [r3], {-0}
    b75c:	31000013 	tstcc	r0, r3, lsl r0
    b760:	00001210 	andeq	r1, r0, r0, lsl r2
    b764:	35070002 	strcc	r0, [r7, #-2]
    b768:	00000243 	andeq	r0, r0, r3, asr #4
    b76c:	20b63300 	adcscs	r3, r6, r0, lsl #6
    b770:	ef020000 	svc	0x00020000
    b774:	03011606 	movweq	r1, #5638	; 0x1606
    b778:	00001339 	andeq	r1, r0, r9, lsr r3
    b77c:	00121031 	andseq	r1, r2, r1, lsr r0
    b780:	06ef0200 	strbteq	r0, [pc], r0, lsl #4
    b784:	00024337 	andeq	r4, r2, r7, lsr r3
    b788:	05330000 	ldreq	r0, [r3, #-0]!
    b78c:	02000023 	andeq	r0, r0, #35	; 0x23
    b790:	011606e0 	tsteq	r6, r0, ror #13
    b794:	00135603 	andseq	r5, r3, r3, lsl #12
    b798:	12103100 	andsne	r3, r0, #0, 2
    b79c:	e0020000 	and	r0, r2, r0
    b7a0:	02433506 	subeq	r3, r3, #25165824	; 0x1800000
    b7a4:	30000000 	andcc	r0, r0, r0
    b7a8:	00002249 	andeq	r2, r0, r9, asr #4
    b7ac:	1a06cd02 	bne	1bebbc <_Min_Heap_Size+0x1be3bc>
    b7b0:	0002e701 	andeq	lr, r2, r1, lsl #14
    b7b4:	13770300 	cmnne	r7, #0, 6
    b7b8:	10310000 	eorsne	r0, r1, r0
    b7bc:	02000012 	andeq	r0, r0, #18
    b7c0:	433906cd 	teqmi	r9, #214958080	; 0xcd00000
    b7c4:	00000002 	andeq	r0, r0, r2
    b7c8:	00214d33 	eoreq	r4, r1, r3, lsr sp
    b7cc:	06ba0200 	ldrteq	r0, [sl], r0, lsl #4
    b7d0:	94030116 	strls	r0, [r3], #-278	; 0xfffffeea
    b7d4:	31000013 	tstcc	r0, r3, lsl r0
    b7d8:	00001210 	andeq	r1, r0, r0, lsl r2
    b7dc:	3206ba02 	andcc	fp, r6, #8192	; 0x2000
    b7e0:	00000243 	andeq	r0, r0, r3, asr #4
    b7e4:	231a3300 	tstcs	sl, #0, 6
    b7e8:	94020000 	strls	r0, [r2], #-0
    b7ec:	03011606 	movweq	r1, #5638	; 0x1606
    b7f0:	000013b1 			; <UNDEFINED> instruction: 0x000013b1
    b7f4:	00121031 	andseq	r1, r2, r1, lsr r0
    b7f8:	06940200 	ldreq	r0, [r4], r0, lsl #4
    b7fc:	00024331 	andeq	r4, r2, r1, lsr r3
    b800:	e1350000 	teq	r5, r0
    b804:	02000023 	andeq	r0, r0, #35	; 0x23
    b808:	011a0688 	tsteq	sl, r8, lsl #13
    b80c:	000002e7 	andeq	r0, r0, r7, ror #5
    b810:	21d03303 	bicscs	r3, r0, r3, lsl #6
    b814:	75020000 	strvc	r0, [r2, #-0]
    b818:	03011606 	movweq	r1, #5638	; 0x1606
    b81c:	000013f7 	strdeq	r1, [r0], -r7
    b820:	00203f31 	eoreq	r3, r0, r1, lsr pc
    b824:	06750200 	ldrbteq	r0, [r5], -r0, lsl #4
    b828:	0002e73a 	andeq	lr, r2, sl, lsr r7
    b82c:	218b3400 	orrcs	r3, fp, r0, lsl #8
    b830:	77020000 	strvc	r0, [r2, -r0]
    b834:	02e70c06 	rsceq	r0, r7, #1536	; 0x600
    b838:	30340000 	eorscc	r0, r4, r0
    b83c:	02000023 	andeq	r0, r0, #35	; 0x23
    b840:	e70c0678 	smlsdx	ip, r8, r6, r0
    b844:	00000002 	andeq	r0, r0, r2
    b848:	0022c236 	eoreq	ip, r2, r6, lsr r2
    b84c:	01180300 	tsteq	r8, r0, lsl #6
    b850:	3603011b 			; <UNDEFINED> instruction: 0x3603011b
    b854:	000021fe 	strdeq	r2, [r0], -lr
    b858:	1b010d03 	blne	4ec6c <_Min_Heap_Size+0x4e46c>
    b85c:	5e360301 	cdppl	3, 3, cr0, cr6, cr1, {0}
    b860:	03000022 	movweq	r0, #34	; 0x22
    b864:	011b0102 	tsteq	fp, r2, lsl #2
    b868:	01013703 	tsteq	r1, r3, lsl #14
    b86c:	00000c8c 	andeq	r0, r0, ip, lsl #25
    b870:	00000c8c 	andeq	r0, r0, ip, lsl #25
    b874:	0801e609 	stmdaeq	r1, {r0, r3, r9, sl, sp, lr, pc}
    b878:	000afe00 	andeq	pc, sl, r0, lsl #28
    b87c:	7e000200 	cdpvc	2, 0, cr0, cr0, cr0, {0}
    b880:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    b884:	00058801 	andeq	r8, r5, r1, lsl #16
    b888:	26760c00 	ldrbtcs	r0, [r6], -r0, lsl #24
    b88c:	086d0000 	stmdaeq	sp!, {}^	; <UNPREDICTABLE>
    b890:	06480000 	strbeq	r0, [r8], -r0
	...
    b89c:	882c0000 	stmdahi	ip!, {}	; <UNPREDICTABLE>
    b8a0:	05020000 	streq	r0, [r2, #-0]
    b8a4:	00023c01 	andeq	r3, r2, r1, lsl #24
    b8a8:	01420500 	cmpeq	r2, r0, lsl #10
    b8ac:	0000023c 	andeq	r0, r0, ip, lsr r2
    b8b0:	000f4603 	andeq	r4, pc, r3, lsl #12
    b8b4:	75037200 	strvc	r7, [r3, #-512]	; 0xfffffe00
    b8b8:	7400000f 	strvc	r0, [r0], #-15
    b8bc:	000fd503 	andeq	sp, pc, r3, lsl #10
    b8c0:	7c037500 	cfstr32vc	mvfx7, [r3], {-0}
    b8c4:	7600000e 	strvc	r0, [r0], -lr
    b8c8:	00102703 	andseq	r2, r0, r3, lsl #14
    b8cc:	a2037b00 	andge	r7, r3, #0, 22
    b8d0:	7c000011 	stcvc	0, cr0, [r0], {17}
    b8d4:	00128003 	andseq	r8, r2, r3
    b8d8:	ee037e00 	cdp	14, 0, cr7, cr3, cr0, {0}
    b8dc:	7f00000d 	svcvc	0x0000000d
    b8e0:	000f5a04 	andeq	r5, pc, r4, lsl #20
    b8e4:	46040000 	strmi	r0, [r4], -r0
    b8e8:	01000011 	tsteq	r0, r1, lsl r0
    b8ec:	000f8b04 	andeq	r8, pc, r4, lsl #22
    b8f0:	e9040200 	stmdb	r4, {r9}
    b8f4:	0300000c 	movweq	r0, #12
    b8f8:	000d5304 	andeq	r5, sp, r4, lsl #6
    b8fc:	d5040400 	strle	r0, [r4, #-1024]	; 0xfffffc00
    b900:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    b904:	00117304 	andseq	r7, r1, r4, lsl #6
    b908:	e6040600 	str	r0, [r4], -r0, lsl #12
    b90c:	0700000e 	streq	r0, [r0, -lr]
    b910:	000cf704 	andeq	pc, ip, r4, lsl #14
    b914:	75040800 	strvc	r0, [r4, #-2048]	; 0xfffff800
    b918:	09000012 	stmdbeq	r0, {r1, r4}
    b91c:	00106204 	andseq	r6, r0, r4, lsl #4
    b920:	be040a00 	vmlalt.f32	s0, s8, s0
    b924:	0b000010 	bleq	b96c <_Min_Heap_Size+0xb16c>
    b928:	00108804 	andseq	r8, r0, r4, lsl #16
    b92c:	18040c00 	stmdane	r4, {sl, fp}
    b930:	0d00000e 	stceq	0, cr0, [r0, #-56]	; 0xffffffc8
    b934:	0011de04 	andseq	sp, r1, r4, lsl #28
    b938:	7e040e00 	cdpvc	14, 0, cr0, cr4, cr0, {0}
    b93c:	0f000011 	svceq	0x00000011
    b940:	000efe04 	andeq	pc, lr, r4, lsl #28
    b944:	02041000 	andeq	r1, r4, #0
    b948:	1100000d 	tstne	r0, sp
    b94c:	00113d04 	andseq	r3, r1, r4, lsl #26
    b950:	f1041200 			; <UNDEFINED> instruction: 0xf1041200
    b954:	1300000e 	movwne	r0, #14
    b958:	000e9a04 	andeq	r9, lr, r4, lsl #20
    b95c:	43041400 	movwmi	r1, #17408	; 0x4400
    b960:	15000012 	strne	r0, [r0, #-18]	; 0xffffffee
    b964:	000f9b04 	andeq	r9, pc, r4, lsl #22
    b968:	51041600 	tstpl	r4, r0, lsl #12
    b96c:	17000012 	smladne	r0, r2, r0, r0
    b970:	000fee04 	andeq	lr, pc, r4, lsl #28
    b974:	02041800 	andeq	r1, r4, #0, 16
    b978:	19000012 	stmdbne	r0, {r1, r4}
    b97c:	000dd604 	andeq	sp, sp, r4, lsl #12
    b980:	d9041a00 	stmdble	r4, {r9, fp, ip}
    b984:	1b00000e 	blne	b9c4 <_Min_Heap_Size+0xb1c4>
    b988:	000d5e04 	andeq	r5, sp, r4, lsl #28
    b98c:	fb041c00 	blx	112996 <_Min_Heap_Size+0x112196>
    b990:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    b994:	000ea804 	andeq	sl, lr, r4, lsl #16
    b998:	cc041e00 	stcgt	14, cr1, [r4], {-0}
    b99c:	1f00000e 	svcne	0x0000000e
    b9a0:	000e4c04 	andeq	r4, lr, r4, lsl #24
    b9a4:	7b042000 	blvc	1139ac <_Min_Heap_Size+0x1131ac>
    b9a8:	21000010 	tstcs	r0, r0, lsl r0
    b9ac:	000fc004 	andeq	ip, pc, r4
    b9b0:	1d042200 	sfmne	f2, 4, [r4, #-0]
    b9b4:	23000010 	movwcs	r0, #16
    b9b8:	000d9304 	andeq	r9, sp, r4, lsl #6
    b9bc:	05042400 	streq	r2, [r4, #-1024]	; 0xfffffc00
    b9c0:	25000011 	strcs	r0, [r0, #-17]	; 0xffffffef
    b9c4:	000eb204 	andeq	fp, lr, r4, lsl #4
    b9c8:	fb042600 	blx	1151d2 <_Min_Heap_Size+0x1149d2>
    b9cc:	2700000d 	strcs	r0, [r0, -sp]
    b9d0:	0010ec04 	andseq	lr, r0, r4, lsl #24
    b9d4:	d0042800 	andle	r2, r4, r0, lsl #16
    b9d8:	29000010 	stmdbcs	r0, {r4}
    b9dc:	00105104 	andseq	r5, r0, r4, lsl #2
    b9e0:	9d042a00 	vstrls	s4, [r4, #-0]
    b9e4:	2b00000d 	blcs	ba20 <_Min_Heap_Size+0xb220>
    b9e8:	000d1404 	andeq	r1, sp, r4, lsl #8
    b9ec:	10042c00 	andne	r2, r4, r0, lsl #24
    b9f0:	2d00000f 	stccs	0, cr0, [r0, #-60]	; 0xffffffc4
    b9f4:	00125e04 	andseq	r5, r2, r4, lsl #28
    b9f8:	9f042e00 	svcls	0x00042e00
    b9fc:	2f000012 	svccs	0x00000012
    ba00:	00115604 	andseq	r5, r1, r4, lsl #12
    ba04:	6b043000 	blvs	117a0c <_Min_Heap_Size+0x11720c>
    ba08:	31000012 	tstcc	r0, r2, lsl r0
    ba0c:	000e7204 	andeq	r7, lr, r4, lsl #4
    ba10:	49043200 	stmdbmi	r4, {r9, ip, sp}
    ba14:	3300000d 	movwcc	r0, #13
    ba18:	00103c04 	andseq	r3, r0, r4, lsl #24
    ba1c:	e3043400 	movw	r3, #17408	; 0x4400
    ba20:	3500000f 	strcc	r0, [r0, #-15]
    ba24:	00106d04 	andseq	r6, r0, r4, lsl #26
    ba28:	01043600 	tsteq	r4, r0, lsl #12
    ba2c:	37000010 	smladcc	r0, r0, r0, r0
    ba30:	000fa904 	andeq	sl, pc, r4, lsl #18
    ba34:	37043800 	strcc	r3, [r4, -r0, lsl #16]
    ba38:	3900000d 	stmdbcc	r0, {r0, r2, r3}
    ba3c:	0012b104 	andseq	fp, r2, r4, lsl #2
    ba40:	9a043a00 	bls	11a248 <_Min_Heap_Size+0x119a48>
    ba44:	3b000010 	blcc	ba8c <_Min_Heap_Size+0xb28c>
    ba48:	000e2a04 	andeq	r2, lr, r4, lsl #20
    ba4c:	ac043c00 	stcge	12, cr3, [r4], {-0}
    ba50:	3f000010 	svccc	0x00000010
    ba54:	000d6804 	andeq	r6, sp, r4, lsl #16
    ba58:	2f044000 	svccs	0x00044000
    ba5c:	41000011 	tstmi	r0, r1, lsl r0
    ba60:	000e6404 	andeq	r6, lr, r4, lsl #8
    ba64:	3a044200 	bcc	11c26c <_Min_Heap_Size+0x11ba6c>
    ba68:	4300000f 	movwmi	r0, #15
    ba6c:	000dc404 	andeq	ip, sp, r4, lsl #8
    ba70:	90044400 	andls	r4, r4, r0, lsl #8
    ba74:	45000011 	strmi	r0, [r0, #-17]	; 0xffffffef
    ba78:	000f2804 	andeq	r2, pc, r4, lsl #16
    ba7c:	76044600 	strvc	r4, [r4], -r0, lsl #12
    ba80:	4700000d 	strmi	r0, [r0, -sp]
    ba84:	0011b404 	andseq	fp, r1, r4, lsl #8
    ba88:	df044800 	svcle	0x00044800
    ba8c:	49000010 	stmdbmi	r0, {r4}
    ba90:	00122904 	andseq	r2, r2, r4, lsl #18
    ba94:	8c044a00 			; <UNDEFINED> instruction: 0x8c044a00
    ba98:	4b000012 	blmi	bae8 <_Min_Heap_Size+0xb2e8>
    ba9c:	000f6404 	andeq	r6, pc, r4, lsl #8
    baa0:	0b044c00 	bleq	11eaa8 <_Min_Heap_Size+0x11e2a8>
    baa4:	4d000010 	stcmi	0, cr0, [r0, #-64]	; 0xffffffc0
    baa8:	00112604 	andseq	r2, r1, r4, lsl #12
    baac:	33045000 	movwcc	r5, #16384	; 0x4000
    bab0:	51000010 	tstpl	r0, r0, lsl r0
    bab4:	06010500 	streq	r0, [r1], -r0, lsl #10
    bab8:	00000576 	andeq	r0, r0, r6, ror r5
    babc:	00006606 	andeq	r6, r0, r6, lsl #12
    bac0:	182b0200 	stmdane	fp!, {r9}
    bac4:	0000024f 	andeq	r0, r0, pc, asr #4
    bac8:	74080105 	strvc	r0, [r8], #-261	; 0xfffffefb
    bacc:	05000005 	streq	r0, [r0, #-5]
    bad0:	03fd0502 	mvnseq	r0, #8388608	; 0x800000
    bad4:	02050000 	andeq	r0, r5, #0
    bad8:	00078f07 	andeq	r8, r7, r7, lsl #30
    badc:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    bae0:	000002ec 	andeq	r0, r0, ip, ror #5
    bae4:	0002c206 	andeq	ip, r2, r6, lsl #4
    bae8:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    baec:	00000277 	andeq	r0, r0, r7, ror r2
    baf0:	b3070405 	movwlt	r0, #29701	; 0x7405
    baf4:	05000000 	streq	r0, [r0, #-0]
    baf8:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
    bafc:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    bb00:	0000ae07 	andeq	sl, r0, r7, lsl #28
    bb04:	05040700 	streq	r0, [r4, #-1792]	; 0xfffff900
    bb08:	00746e69 	rsbseq	r6, r4, r9, ror #28
    bb0c:	b8070405 	stmdalt	r7, {r0, r2, sl}
    bb10:	06000000 	streq	r0, [r0], -r0
    bb14:	00000068 	andeq	r0, r0, r8, rrx
    bb18:	43131803 	tstmi	r3, #196608	; 0x30000
    bb1c:	06000002 	streq	r0, [r0], -r2
    bb20:	000002c4 	andeq	r0, r0, r4, asr #5
    bb24:	6b143003 	blvs	517b38 <_Min_Heap_Size+0x517338>
    bb28:	08000002 	stmdaeq	r0, {r1}
    bb2c:	000002a6 	andeq	r0, r0, r6, lsr #5
    bb30:	0002b209 	andeq	fp, r2, r9, lsl #4
    bb34:	04100a00 	ldreq	r0, [r0], #-2560	; 0xfffff600
    bb38:	070902fc 			; <UNDEFINED> instruction: 0x070902fc
    bb3c:	0b000003 	bleq	bb50 <_Min_Heap_Size+0xb350>
    bb40:	000023cb 	andeq	r2, r0, fp, asr #7
    bb44:	1202fe04 	andne	pc, r2, #4, 28	; 0x40
    bb48:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    bb4c:	0b002302 	bleq	1475c <_Min_Heap_Size+0x13f5c>
    bb50:	00002239 	andeq	r2, r0, r9, lsr r2
    bb54:	1202ff04 	andne	pc, r2, #4, 30
    bb58:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    bb5c:	0c042302 	stceq	3, cr2, [r4], {2}
    bb60:	004c4156 	subeq	r4, ip, r6, asr r1
    bb64:	12030004 	andne	r0, r3, #4
    bb68:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    bb6c:	0b082302 	bleq	21477c <_Min_Heap_Size+0x213f7c>
    bb70:	00002195 	muleq	r0, r5, r1
    bb74:	12030104 	andne	r0, r3, #4, 2
    bb78:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    bb7c:	000c2302 	andeq	r2, ip, r2, lsl #6
    bb80:	0021400d 	eoreq	r4, r1, sp
    bb84:	03020400 	movweq	r0, #9216	; 0x2400
    bb88:	0002bc03 	andeq	fp, r2, r3, lsl #24
    bb8c:	02a60e00 	adceq	r0, r6, #0, 28
    bb90:	03240000 			; <UNDEFINED> instruction: 0x03240000
    bb94:	930f0000 	movwls	r0, #61440	; 0xf000
    bb98:	01000002 	tsteq	r0, r2
    bb9c:	1a771000 	bne	1dcfba4 <_Min_Heap_Size+0x1dcf3a4>
    bba0:	39090000 	stmdbcc	r9, {}	; <UNPREDICTABLE>
    bba4:	0002a611 	andeq	sl, r2, r1, lsl r6
    bba8:	0a010100 	beq	4bfb0 <_Min_Heap_Size+0x4b7b0>
    bbac:	01370510 	teqeq	r7, r0, lsl r5
    bbb0:	00037c09 	andeq	r7, r3, r9, lsl #24
    bbb4:	24830b00 	strcs	r0, [r3], #2816	; 0xb00
    bbb8:	39050000 	stmdbcc	r5, {}	; <UNPREDICTABLE>
    bbbc:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bbc0:	23020000 	movwcs	r0, #8192	; 0x2000
    bbc4:	52430c00 	subpl	r0, r3, #0, 24
    bbc8:	013a0500 	teqeq	sl, r0, lsl #10
    bbcc:	0002b211 	andeq	fp, r2, r1, lsl r2
    bbd0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    bbd4:	0025cc0b 	eoreq	ip, r5, fp, lsl #24
    bbd8:	013b0500 	teqeq	fp, r0, lsl #10
    bbdc:	0002b211 	andeq	fp, r2, r1, lsl r2
    bbe0:	08230200 	stmdaeq	r3!, {r9}
    bbe4:	0025860b 	eoreq	r8, r5, fp, lsl #12
    bbe8:	013c0500 	teqeq	ip, r0, lsl #10
    bbec:	0002b211 	andeq	fp, r2, r1, lsl r2
    bbf0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    bbf4:	26220d00 	strtcs	r0, [r2], -r0, lsl #26
    bbf8:	3d050000 	stccc	0, cr0, [r5, #-0]
    bbfc:	03320301 	teqeq	r2, #67108864	; 0x4000000
    bc00:	1c0a0000 	stcne	0, cr0, [sl], {-0}
    bc04:	09016805 	stmdbeq	r1, {r0, r2, fp, sp, lr}
    bc08:	00000402 	andeq	r0, r0, r2, lsl #8
    bc0c:	5243410c 	subpl	r4, r3, #12, 2
    bc10:	016a0500 	cmneq	sl, r0, lsl #10
    bc14:	0002b211 	andeq	fp, r2, r1, lsl r2
    bc18:	00230200 	eoreq	r0, r3, r0, lsl #4
    bc1c:	0019ff0b 	andseq	pc, r9, fp, lsl #30
    bc20:	016b0500 	cmneq	fp, r0, lsl #10
    bc24:	0002b211 	andeq	fp, r2, r1, lsl r2
    bc28:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    bc2c:	0019fc0b 	andseq	pc, r9, fp, lsl #24
    bc30:	016c0500 	cmneq	ip, r0, lsl #10
    bc34:	0002b211 	andeq	fp, r2, r1, lsl r2
    bc38:	08230200 	stmdaeq	r3!, {r9}
    bc3c:	0052530c 	subseq	r5, r2, ip, lsl #6
    bc40:	11016d05 	tstne	r1, r5, lsl #26
    bc44:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    bc48:	0c0c2302 	stceq	3, cr2, [ip], {2}
    bc4c:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    bc50:	b211016e 	andslt	r0, r1, #-2147483621	; 0x8000001b
    bc54:	02000002 	andeq	r0, r0, #2
    bc58:	e10b1023 	tst	fp, r3, lsr #32
    bc5c:	05000019 	streq	r0, [r0, #-25]	; 0xffffffe7
    bc60:	b211016f 	andslt	r0, r1, #-1073741797	; 0xc000001b
    bc64:	02000002 	andeq	r0, r0, #2
    bc68:	130b1423 	movwne	r1, #46115	; 0xb423
    bc6c:	0500001a 	streq	r0, [r0, #-26]	; 0xffffffe6
    bc70:	b2110170 	andslt	r0, r1, #112, 2
    bc74:	02000002 	andeq	r0, r0, #2
    bc78:	0d001823 	stceq	8, cr1, [r0, #-140]	; 0xffffff74
    bc7c:	000019e7 	andeq	r1, r0, r7, ror #19
    bc80:	03017105 	movweq	r7, #4357	; 0x1105
    bc84:	00000389 	andeq	r0, r0, r9, lsl #7
    bc88:	f405880a 	vst2.8	{d8-d9}, [r5], sl
    bc8c:	05fb0901 	ldrbeq	r0, [fp, #2305]!	; 0x901
    bc90:	430c0000 	movwmi	r0, #49152	; 0xc000
    bc94:	f6050052 			; <UNDEFINED> instruction: 0xf6050052
    bc98:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bc9c:	23020000 	movwcs	r0, #8192	; 0x2000
    bca0:	02820b00 	addeq	r0, r2, #0, 22
    bca4:	f7050000 			; <UNDEFINED> instruction: 0xf7050000
    bca8:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bcac:	23020000 	movwcs	r0, #8192	; 0x2000
    bcb0:	02850b04 	addeq	r0, r5, #4, 22	; 0x1000
    bcb4:	f8050000 			; <UNDEFINED> instruction: 0xf8050000
    bcb8:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bcbc:	23020000 	movwcs	r0, #8192	; 0x2000
    bcc0:	49430c08 	stmdbmi	r3, {r3, sl, fp}^
    bcc4:	f9050052 			; <UNDEFINED> instruction: 0xf9050052
    bcc8:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bccc:	23020000 	movwcs	r0, #8192	; 0x2000
    bcd0:	01660b0c 	cmneq	r6, ip, lsl #22
    bcd4:	fa050000 	blx	14bcdc <_Min_Heap_Size+0x14b4dc>
    bcd8:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bcdc:	23020000 	movwcs	r0, #8192	; 0x2000
    bce0:	07170b10 			; <UNDEFINED> instruction: 0x07170b10
    bce4:	fb050000 	blx	14bcee <_Min_Heap_Size+0x14b4ee>
    bce8:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bcec:	23020000 	movwcs	r0, #8192	; 0x2000
    bcf0:	067c0b14 			; <UNDEFINED> instruction: 0x067c0b14
    bcf4:	fc050000 	stc2	0, cr0, [r5], {-0}
    bcf8:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bcfc:	23020000 	movwcs	r0, #8192	; 0x2000
    bd00:	050f0b18 	streq	r0, [pc, #-2840]	; b1f0 <_Min_Heap_Size+0xa9f0>
    bd04:	fd050000 	stc2	0, cr0, [r5, #-0]
    bd08:	02a61101 	adceq	r1, r6, #1073741824	; 0x40000000
    bd0c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd10:	04fa0b1c 	ldrbteq	r0, [sl], #2844	; 0xb1c
    bd14:	fe050000 	cdp2	0, 0, cr0, cr5, cr0, {0}
    bd18:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bd1c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd20:	01f90b20 	mvnseq	r0, r0, lsr #22
    bd24:	ff050000 			; <UNDEFINED> instruction: 0xff050000
    bd28:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    bd2c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd30:	05190b24 	ldreq	r0, [r9, #-2852]	; 0xfffff4dc
    bd34:	00050000 	andeq	r0, r5, r0
    bd38:	03141102 	tsteq	r4, #-2147483648	; 0x80000000
    bd3c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd40:	08ae0b28 	stmiaeq	lr!, {r3, r5, r8, r9, fp}
    bd44:	01050000 	mrseq	r0, (UNDEF: 5)
    bd48:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bd4c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd50:	07870b30 			; <UNDEFINED> instruction: 0x07870b30
    bd54:	02050000 	andeq	r0, r5, #0
    bd58:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bd5c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd60:	049c0b34 	ldreq	r0, [ip], #2868	; 0xb34
    bd64:	03050000 	movweq	r0, #20480	; 0x5000
    bd68:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bd6c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd70:	05230b38 	streq	r0, [r3, #-2872]!	; 0xfffff4c8
    bd74:	04050000 	streq	r0, [r5], #-0
    bd78:	02a61102 	adceq	r1, r6, #-2147483648	; 0x80000000
    bd7c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd80:	06b70b3c 			; <UNDEFINED> instruction: 0x06b70b3c
    bd84:	05050000 	streq	r0, [r5, #-0]
    bd88:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bd8c:	23020000 	movwcs	r0, #8192	; 0x2000
    bd90:	06740b40 	ldrbteq	r0, [r4], -r0, asr #22
    bd94:	06050000 	streq	r0, [r5], -r0
    bd98:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bd9c:	23020000 	movwcs	r0, #8192	; 0x2000
    bda0:	052d0b44 	streq	r0, [sp, #-2884]!	; 0xfffff4bc
    bda4:	07050000 	streq	r0, [r5, -r0]
    bda8:	03141102 	tsteq	r4, #-2147483648	; 0x80000000
    bdac:	23020000 	movwcs	r0, #8192	; 0x2000
    bdb0:	012b0b48 			; <UNDEFINED> instruction: 0x012b0b48
    bdb4:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    bdb8:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bdbc:	23020000 	movwcs	r0, #8192	; 0x2000
    bdc0:	04d60b50 	ldrbeq	r0, [r6], #2896	; 0xb50
    bdc4:	09050000 	stmdbeq	r5, {}	; <UNPREDICTABLE>
    bdc8:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bdcc:	23020000 	movwcs	r0, #8192	; 0x2000
    bdd0:	06420b54 			; <UNDEFINED> instruction: 0x06420b54
    bdd4:	0a050000 	beq	14bddc <_Min_Heap_Size+0x14b5dc>
    bdd8:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bddc:	23020000 	movwcs	r0, #8192	; 0x2000
    bde0:	05370b58 	ldreq	r0, [r7, #-2904]!	; 0xfffff4a8
    bde4:	0b050000 	bleq	14bdec <_Min_Heap_Size+0x14b5ec>
    bde8:	02a61102 	adceq	r1, r6, #-2147483648	; 0x80000000
    bdec:	23020000 	movwcs	r0, #8192	; 0x2000
    bdf0:	001b0b5c 	andseq	r0, fp, ip, asr fp
    bdf4:	0c050000 	stceq	0, cr0, [r5], {-0}
    bdf8:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    bdfc:	23020000 	movwcs	r0, #8192	; 0x2000
    be00:	03ee0b60 	mvneq	r0, #96, 22	; 0x18000
    be04:	0d050000 	stceq	0, cr0, [r5, #-0]
    be08:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    be0c:	23020000 	movwcs	r0, #8192	; 0x2000
    be10:	05410b64 	strbeq	r0, [r1, #-2916]	; 0xfffff49c
    be14:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    be18:	03141102 	tsteq	r4, #-2147483648	; 0x80000000
    be1c:	23020000 	movwcs	r0, #8192	; 0x2000
    be20:	08090b68 	stmdaeq	r9, {r3, r5, r6, r8, r9, fp}
    be24:	0f050000 	svceq	0x00050000
    be28:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    be2c:	23020000 	movwcs	r0, #8192	; 0x2000
    be30:	53430c70 	movtpl	r0, #15472	; 0x3c70
    be34:	10050052 	andne	r0, r5, r2, asr r0
    be38:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    be3c:	23020000 	movwcs	r0, #8192	; 0x2000
    be40:	054b0b74 	strbeq	r0, [fp, #-2932]	; 0xfffff48c
    be44:	11050000 	mrsne	r0, (UNDEF: 5)
    be48:	03141102 	tsteq	r4, #-2147483648	; 0x80000000
    be4c:	23020000 	movwcs	r0, #8192	; 0x2000
    be50:	07d80b78 			; <UNDEFINED> instruction: 0x07d80b78
    be54:	12050000 	andne	r0, r5, #0
    be58:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    be5c:	23030000 	movwcs	r0, #12288	; 0x3000
    be60:	810b0180 	smlabbhi	fp, r0, r1, r0
    be64:	05000003 	streq	r0, [r0, #-3]
    be68:	b2110213 	andslt	r0, r1, #805306369	; 0x30000001
    be6c:	03000002 	movweq	r0, #2
    be70:	00018423 	andeq	r8, r1, r3, lsr #8
    be74:	0001cd0d 	andeq	ip, r1, sp, lsl #26
    be78:	02140500 	andseq	r0, r4, #0, 10
    be7c:	00040f03 	andeq	r0, r4, r3, lsl #30
    be80:	01070200 	mrseq	r0, (UNDEF: 39)
    be84:	0000024f 	andeq	r0, r0, pc, asr #4
    be88:	2301bf06 	movwcs	fp, #7942	; 0x1f06
    be8c:	04000006 	streq	r0, [r0], #-6
    be90:	00001a0b 	andeq	r1, r0, fp, lsl #20
    be94:	19f50400 	ldmibne	r5!, {sl}^
    be98:	00010000 	andeq	r0, r1, r0
    be9c:	bf040805 	svclt	0x00040805
    bea0:	02000006 	andeq	r0, r0, #6
    bea4:	024f0107 	subeq	r0, pc, #-1073741823	; 0xc0000001
    bea8:	27070000 	strcs	r0, [r7, -r0]
    beac:	00065101 	andeq	r5, r6, r1, lsl #2
    beb0:	034a0400 	movteq	r0, #41984	; 0xa400
    beb4:	04000000 	streq	r0, [r0], #-0
    beb8:	000006ad 	andeq	r0, r0, sp, lsr #13
    bebc:	08e30401 	stmiaeq	r3!, {r0, sl}^
    bec0:	04020000 	streq	r0, [r2], #-0
    bec4:	0000032b 	andeq	r0, r0, fp, lsr #6
    bec8:	77060003 	strvc	r0, [r6, -r3]
    becc:	07000015 	smladeq	r0, r5, r0, r0
    bed0:	062a032c 	strteq	r0, [sl], -ip, lsr #6
    bed4:	07020000 	streq	r0, [r2, -r0]
    bed8:	00024f01 	andeq	r4, r2, r1, lsl #30
    bedc:	01320800 	teqeq	r2, r0, lsl #16
    bee0:	00000684 	andeq	r0, r0, r4, lsl #13
    bee4:	0024c704 	eoreq	ip, r4, r4, lsl #14
    bee8:	07046400 	streq	r6, [r4, -r0, lsl #8]
    beec:	0a000025 	beq	bf88 <_Min_Heap_Size+0xb788>
    bef0:	00255604 	eoreq	r5, r5, r4, lsl #12
    bef4:	a7040100 	strge	r0, [r4, -r0, lsl #2]
    bef8:	01000025 	tsteq	r0, r5, lsr #32
    befc:	24520600 	ldrbcs	r0, [r2], #-1536	; 0xfffffa00
    bf00:	37080000 	strcc	r0, [r8, -r0]
    bf04:	00065d03 	andeq	r5, r6, r3, lsl #26
    bf08:	254f1000 	strbcs	r1, [pc, #-0]	; bf10 <_Min_Heap_Size+0xb710>
    bf0c:	cc080000 	stcgt	0, cr0, [r8], {-0}
    bf10:	0002b216 	andeq	fp, r2, r6, lsl r2
    bf14:	10010100 	andne	r0, r1, r0, lsl #2
    bf18:	00001a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
    bf1c:	a611cd08 	ldrge	ip, [r1], -r8, lsl #26
    bf20:	01000002 	tsteq	r0, r2
    bf24:	25441001 	strbcs	r1, [r4, #-1]
    bf28:	ce080000 	cdpgt	0, 0, cr0, cr8, cr0, {0}
    bf2c:	0006841c 	andeq	r8, r6, ip, lsl r4
    bf30:	11010100 	mrsne	r0, (UNDEF: 17)
    bf34:	00000690 	muleq	r0, r0, r6
    bf38:	050f5e01 	streq	r5, [pc, #-3585]	; b13f <_Min_Heap_Size+0xa93f>
    bf3c:	0000d803 	andeq	sp, r0, r3, lsl #16
    bf40:	069e1120 	ldreq	r1, [lr], r0, lsr #2
    bf44:	5f010000 	svcpl	0x00010000
    bf48:	0403050a 	streq	r0, [r3], #-1290	; 0xfffffaf6
    bf4c:	11200000 			; <UNDEFINED> instruction: 0x11200000
    bf50:	000006ac 	andeq	r0, r0, ip, lsr #13
    bf54:	05156001 	ldreq	r6, [r5, #-1]
    bf58:	00000003 	andeq	r0, r0, r3
    bf5c:	8a011220 	bhi	507e4 <_Min_Heap_Size+0x4ffe4>
    bf60:	01000024 	tsteq	r0, r4, lsr #32
    bf64:	010a0233 	tsteq	sl, r3, lsr r2
    bf68:	000002a6 	andeq	r0, r0, r6, lsr #5
	...
    bf74:	01007d02 	tsteq	r0, r2, lsl #26
    bf78:	259a0112 	ldrcs	r0, [sl, #274]	; 0x112
    bf7c:	2a010000 	bcs	4bf84 <_Min_Heap_Size+0x4b784>
    bf80:	a6010a02 	strge	r0, [r1], -r2, lsl #20
    bf84:	00000002 	andeq	r0, r0, r2
    bf88:	00000000 	andeq	r0, r0, r0
    bf8c:	02000000 	andeq	r0, r0, #0
    bf90:	1201007d 	andne	r0, r1, #125	; 0x7d
    bf94:	00258d01 	eoreq	r8, r5, r1, lsl #26
    bf98:	02210100 	eoreq	r0, r1, #0, 2
    bf9c:	02a6010a 	adceq	r0, r6, #-2147483646	; 0x80000002
	...
    bfa8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    bfac:	01130100 	tsteq	r3, r0, lsl #2
    bfb0:	000026aa 	andeq	r2, r0, sl, lsr #13
    bfb4:	06021801 	streq	r1, [r2], -r1, lsl #16
    bfb8:	00000001 	andeq	r0, r0, r1
    bfbc:	00000000 	andeq	r0, r0, r0
    bfc0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    bfc4:	5b011301 	blpl	50bd0 <_Min_Heap_Size+0x503d0>
    bfc8:	01000026 	tsteq	r0, r6, lsr #32
    bfcc:	0106020d 	tsteq	r6, sp, lsl #4
	...
    bfd8:	01007d02 	tsteq	r0, r2, lsl #26
    bfdc:	25d30113 	ldrbcs	r0, [r3, #275]	; 0x113
    bfe0:	02010000 	andeq	r0, r1, #0
    bfe4:	00010602 	andeq	r0, r1, r2, lsl #12
    bfe8:	00000000 	andeq	r0, r0, r0
    bfec:	02000000 	andeq	r0, r0, #0
    bff0:	1301007d 	movwne	r0, #4221	; 0x107d
    bff4:	00249701 	eoreq	r9, r4, r1, lsl #14
    bff8:	01f90100 	mvnseq	r0, r0, lsl #2
    bffc:	00000106 	andeq	r0, r0, r6, lsl #2
    c000:	00000000 	andeq	r0, r0, r0
    c004:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c008:	01130100 	tsteq	r3, r0, lsl #2
    c00c:	0000251b 	andeq	r2, r0, fp, lsl r5
    c010:	0601f001 	streq	pc, [r1], -r1
    c014:	00000001 	andeq	r0, r0, r1
    c018:	00000000 	andeq	r0, r0, r0
    c01c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    c020:	69011301 	stmdbvs	r1, {r0, r8, r9, ip}
    c024:	01000025 	tsteq	r0, r5, lsr #32
    c028:	010601e7 	smlatteq	r6, r7, r1, r0
	...
    c034:	01007d02 	tsteq	r0, r2, lsl #26
    c038:	24e80113 	strbtcs	r0, [r8], #275	; 0x113
    c03c:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    c040:	00010601 	andeq	r0, r1, r1, lsl #12
    c044:	00000000 	andeq	r0, r0, r0
    c048:	02000000 	andeq	r0, r0, #0
    c04c:	1301007d 	movwne	r0, #4221	; 0x107d
    c050:	00260401 	eoreq	r0, r6, r1, lsl #8
    c054:	01d50100 	bicseq	r0, r5, r0, lsl #2
    c058:	00000106 	andeq	r0, r0, r6, lsl #2
    c05c:	00000000 	andeq	r0, r0, r0
    c060:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c064:	01120100 	tsteq	r2, r0, lsl #2
    c068:	000026c6 	andeq	r2, r0, r6, asr #13
    c06c:	0a01cc01 	beq	7f078 <_Min_Heap_Size+0x7e878>
    c070:	0002a601 	andeq	sl, r2, r1, lsl #12
	...
    c07c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    c080:	31011201 	tstcc	r1, r1, lsl #4
    c084:	01000026 	tsteq	r0, r6, lsr #32
    c088:	010a01c3 	smlabteq	sl, r3, r1, r0
    c08c:	000002a6 	andeq	r0, r0, r6, lsr #5
	...
    c098:	01007d02 	tsteq	r0, r2, lsl #26
    c09c:	24400112 	strbcs	r0, [r0], #-274	; 0xfffffeee
    c0a0:	ba010000 	blt	4c0a8 <_Min_Heap_Size+0x4b8a8>
    c0a4:	a6010a01 	strge	r0, [r1], -r1, lsl #20
    c0a8:	00000002 	andeq	r0, r0, r2
    c0ac:	00000000 	andeq	r0, r0, r0
    c0b0:	02000000 	andeq	r0, r0, #0
    c0b4:	1301007d 	movwne	r0, #4221	; 0x107d
    c0b8:	0025bd01 	eoreq	fp, r5, r1, lsl #26
    c0bc:	01b00100 	lslseq	r0, r0, #2
    c0c0:	0000010d 	andeq	r0, r0, sp, lsl #2
    c0c4:	00000000 	andeq	r0, r0, r0
    c0c8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c0cc:	01130100 	tsteq	r3, r0, lsl #2
    c0d0:	000025f4 	strdeq	r2, [r0], -r4
    c0d4:	0d01a001 	stceq	0, cr10, [r1, #-4]
    c0d8:	00000001 	andeq	r0, r0, r1
    c0dc:	00000000 	andeq	r0, r0, r0
    c0e0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    c0e4:	eb011401 	bl	510f0 <_Min_Heap_Size+0x508f0>
    c0e8:	01000006 	tsteq	r0, r6
    c0ec:	010d0186 	smlabbeq	sp, r6, r1, r0
    c0f0:	08001768 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl, ip}
    c0f4:	08001790 	stmdaeq	r0, {r4, r7, r8, r9, sl, ip}
    c0f8:	00007ce4 	andeq	r7, r0, r4, ror #25
    c0fc:	0008da01 	andeq	sp, r8, r1, lsl #20
    c100:	06ef1500 	strbteq	r1, [pc], r0, lsl #10
    c104:	86010000 	strhi	r0, [r1], -r0
    c108:	02a62001 	adceq	r2, r6, #1
    c10c:	7d0a0000 	stcvc	0, cr0, [sl, #-0]
    c110:	7d040000 	stcvc	0, cr0, [r4, #-0]
    c114:	c2160000 	andsgt	r0, r6, #0
    c118:	01000017 	tsteq	r0, r7, lsl r0
    c11c:	a60c0188 	strge	r0, [ip], -r8, lsl #3
    c120:	3a000002 	bcc	c130 <_Min_Heap_Size+0xb930>
    c124:	3600007d 			; <UNDEFINED> instruction: 0x3600007d
    c128:	1600007d 			; <UNDEFINED> instruction: 0x1600007d
    c12c:	00000abe 			; <UNDEFINED> instruction: 0x00000abe
    c130:	0c018901 			; <UNDEFINED> instruction: 0x0c018901
    c134:	000002a6 	andeq	r0, r0, r6, lsr #5
    c138:	00007d5a 	andeq	r7, r0, sl, asr sp
    c13c:	00007d58 	andeq	r7, r0, r8, asr sp
    c140:	00177017 	andseq	r7, r7, r7, lsl r0
    c144:	00099708 	andeq	r9, r9, r8, lsl #14
    c148:	17821700 	strne	r1, [r2, r0, lsl #14]
    c14c:	09970800 	ldmibeq	r7, {fp}
    c150:	12000000 	andne	r0, r0, #0
    c154:	00263e01 	eoreq	r3, r6, r1, lsl #28
    c158:	01760100 	cmneq	r6, r0, lsl #2
    c15c:	06840115 	pkhbteq	r0, r4, r5, lsl #2
	...
    c168:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c16c:	01180100 	tsteq	r8, r0, lsl #2
    c170:	00002473 	andeq	r2, r0, r3, ror r4
    c174:	13015501 	movwne	r5, #5377	; 0x1501
    c178:	00065101 	andeq	r5, r6, r1, lsl #2
	...
    c184:	007d6d00 	rsbseq	r6, sp, r0, lsl #26
    c188:	097c0100 	ldmdbeq	ip!, {r8}^
    c18c:	ff150000 			; <UNDEFINED> instruction: 0xff150000
    c190:	01000012 	tsteq	r0, r2, lsl r0
    c194:	84370155 	ldrthi	r0, [r7], #-341	; 0xfffffeab
    c198:	95000006 	strls	r0, [r0, #-6]
    c19c:	8d00007d 	stchi	0, cr0, [r0, #-500]	; 0xfffffe0c
    c1a0:	1600007d 			; <UNDEFINED> instruction: 0x1600007d
    c1a4:	00001c17 	andeq	r1, r0, r7, lsl ip
    c1a8:	15015701 	strne	r5, [r1, #-1793]	; 0xfffff8ff
    c1ac:	00000651 	andeq	r0, r0, r1, asr r6
    c1b0:	00007dd7 	ldrdeq	r7, [r0], -r7	; <UNPREDICTABLE>
    c1b4:	00007dcf 	andeq	r7, r0, pc, asr #27
    c1b8:	00264e16 	eoreq	r4, r6, r6, lsl lr
    c1bc:	01580100 	cmpeq	r8, r0, lsl #2
    c1c0:	00068417 	andeq	r8, r6, r7, lsl r4
    c1c4:	007e0f00 	rsbseq	r0, lr, r0, lsl #30
    c1c8:	007e0d00 	rsbseq	r0, lr, r0, lsl #26
    c1cc:	00001900 	andeq	r1, r0, r0, lsl #18
    c1d0:	0ac50000 	beq	ff14c1d8 <_estack+0xdf14afa0>
    c1d4:	09720000 	ldmdbeq	r2!, {}^	; <UNPREDICTABLE>
    c1d8:	011a0000 	tsteq	sl, r0
    c1dc:	00030550 	andeq	r0, r3, r0, asr r5
    c1e0:	1a000000 	bne	c1e8 <_Min_Heap_Size+0xb9e8>
    c1e4:	0a035101 	beq	e05f0 <_Min_Heap_Size+0xdfdf0>
    c1e8:	1700015a 	smlsdne	r0, sl, r1, r0
    c1ec:	00000000 	andeq	r0, r0, r0
    c1f0:	000009c9 	andeq	r0, r0, r9, asr #19
    c1f4:	b7011200 	strlt	r1, [r1, -r0, lsl #4]
    c1f8:	01000024 	tsteq	r0, r4, lsr #32
    c1fc:	010a014c 	tsteq	sl, ip, asr #2
    c200:	000002a6 	andeq	r0, r0, r6, lsr #5
	...
    c20c:	01007d02 	tsteq	r0, r2, lsl #26
    c210:	161c0112 			; <UNDEFINED> instruction: 0x161c0112
    c214:	43010000 	movwmi	r0, #4096	; 0x1000
    c218:	a6011101 	strge	r1, [r1], -r1, lsl #2
    c21c:	5c000002 	stcpl	0, cr0, [r0], {2}
    c220:	68080017 	stmdavs	r8, {r0, r1, r2, r4}
    c224:	02080017 	andeq	r0, r8, #23
    c228:	1301007d 	movwne	r0, #4221	; 0x107d
    c22c:	000c7201 	andeq	r7, ip, r1, lsl #4
    c230:	01380100 	teqeq	r8, r0, lsl #2
    c234:	1744010d 	strbne	r0, [r4, -sp, lsl #2]
    c238:	175c0800 	ldrbne	r0, [ip, -r0, lsl #16]
    c23c:	7d020800 	stcvc	8, cr0, [r2, #-0]
    c240:	011b0100 	tsteq	fp, r0, lsl #2
    c244:	00001a87 	andeq	r1, r0, r7, lsl #21
    c248:	011afd01 	tsteq	sl, r1, lsl #26	; <UNPREDICTABLE>
    c24c:	00000651 	andeq	r0, r0, r1, asr r6
    c250:	080016c4 	stmdaeq	r0, {r2, r6, r7, r9, sl, ip}
    c254:	08001710 	stmdaeq	r0, {r4, r8, r9, sl, ip}
    c258:	00007e22 	andeq	r7, r0, r2, lsr #28
    c25c:	000a2101 	andeq	r2, sl, r1, lsl #2
    c260:	24661c00 	strbtcs	r1, [r6], #-3072	; 0xfffff400
    c264:	fd010000 	stc2	0, cr0, [r1, #-0]
    c268:	0002a630 	andeq	sl, r2, r0, lsr r6
    c26c:	007e4800 	rsbseq	r4, lr, r0, lsl #16
    c270:	007e4200 	rsbseq	r4, lr, r0, lsl #4
    c274:	16e01700 	strbtne	r1, [r0], r0, lsl #14
    c278:	0ad40800 	beq	ff50e280 <_estack+0xdf50d048>
    c27c:	f61d0000 			; <UNDEFINED> instruction: 0xf61d0000
    c280:	e3080016 	movw	r0, #32790	; 0x8016
    c284:	1a00000a 	bne	c2b4 <_Min_Heap_Size+0xbab4>
    c288:	09025001 	stmdbeq	r2, {r0, ip, lr}
    c28c:	51011aff 	strdpl	r1, [r1, -pc]
    c290:	1a007402 	bne	292a0 <_Min_Heap_Size+0x28aa0>
    c294:	30015201 	andcc	r5, r1, r1, lsl #4
    c298:	011e0000 	tsteq	lr, r0
    c29c:	000024da 	ldrdeq	r2, [r0], -sl
    c2a0:	010de601 	tsteq	sp, r1, lsl #12
	...
    c2ac:	01007d02 	tsteq	r0, r2, lsl #26
    c2b0:	12c3011e 	sbcne	r0, r3, #-2147483641	; 0x80000007
    c2b4:	db010000 	blle	4c2bc <_Min_Heap_Size+0x4babc>
    c2b8:	0000010d 	andeq	r0, r0, sp, lsl #2
    c2bc:	00000000 	andeq	r0, r0, r0
    c2c0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c2c4:	011b0100 	tsteq	fp, r0, lsl #2
    c2c8:	00002539 	andeq	r2, r0, r9, lsr r5
    c2cc:	0113be01 	tsteq	r3, r1, lsl #28
    c2d0:	00000651 	andeq	r0, r0, r1, asr r6
	...
    c2dc:	00007e74 	andeq	r7, r0, r4, ror lr
    c2e0:	000a7601 	andeq	r7, sl, r1, lsl #12
    c2e4:	00001700 	andeq	r1, r0, r0, lsl #14
    c2e8:	0a210000 	beq	84c2f0 <_Min_Heap_Size+0x84baf0>
    c2ec:	1b000000 	blne	c2f4 <_Min_Heap_Size+0xbaf4>
    c2f0:	00043701 	andeq	r3, r4, r1, lsl #14
    c2f4:	139d0100 	orrsne	r0, sp, #0, 2
    c2f8:	00065101 	andeq	r5, r6, r1, lsl #2
    c2fc:	00171000 	andseq	r1, r7, r0
    c300:	00174408 	andseq	r4, r7, r8, lsl #8
    c304:	007e9408 	rsbseq	r9, lr, r8, lsl #8
    c308:	0ac50100 	beq	ff14c710 <_estack+0xdf14b4d8>
    c30c:	32190000 	andscc	r0, r9, #0
    c310:	f2080017 	vqadd.s8	d0, d8, d7
    c314:	a800000a 	stmdage	r0, {r1, r3}
    c318:	1a00000a 	bne	c348 <_Min_Heap_Size+0xbb48>
    c31c:	33015001 	movwcc	r5, #4097	; 0x1001
    c320:	17381900 	ldrne	r1, [r8, -r0, lsl #18]!
    c324:	09c90800 	stmibeq	r9, {fp}^
    c328:	0abb0000 	beq	feecc330 <_estack+0xdeecb0f8>
    c32c:	011a0000 	tsteq	sl, r0
    c330:	003f0150 	eorseq	r0, pc, r0, asr r1	; <UNPREDICTABLE>
    c334:	00173c17 	andseq	r3, r7, r7, lsl ip
    c338:	000a3708 	andeq	r3, sl, r8, lsl #14
    c33c:	011f0000 	tsteq	pc, r0
    c340:	000c8c01 	andeq	r8, ip, r1, lsl #24
    c344:	000c8c00 	andeq	r8, ip, r0, lsl #24
    c348:	01e60a00 	mvneq	r0, r0, lsl #20
    c34c:	01011f08 	tsteq	r1, r8, lsl #30
    c350:	00001ffc 	strdeq	r1, [r0], -ip
    c354:	00001ffc 	strdeq	r1, [r0], -ip
    c358:	0a01090b 	beq	4e78c <_Min_Heap_Size+0x4df8c>
    c35c:	1101011f 	tstne	r1, pc, lsl r1
    c360:	11000011 	tstne	r0, r1, lsl r0
    c364:	0b000011 	bleq	c3b0 <_Min_Heap_Size+0xbbb0>
    c368:	1f060105 	svcne	0x00060105
    c36c:	22e80101 	rsccs	r0, r8, #1073741824	; 0x40000000
    c370:	22e80000 	rsccs	r0, r8, #0
    c374:	040b0000 	streq	r0, [fp], #-0
    c378:	af000601 	svcge	0x00000601
    c37c:	02000005 	andeq	r0, r0, #5
    c380:	001b8700 	andseq	r8, fp, r0, lsl #14
    c384:	88010400 	stmdahi	r1, {sl}
    c388:	0c000005 	stceq	0, cr0, [r0], {5}
    c38c:	000026d3 	ldrdeq	r2, [r0], -r3
    c390:	0000086d 	andeq	r0, r0, sp, ror #16
    c394:	00000728 	andeq	r0, r0, r8, lsr #14
	...
    c3a0:	00008dee 	andeq	r8, r0, lr, ror #27
    c3a4:	76060102 	strvc	r0, [r6], -r2, lsl #2
    c3a8:	03000005 	movweq	r0, #5
    c3ac:	00000066 	andeq	r0, r0, r6, rrx
    c3b0:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
    c3b4:	02000000 	andeq	r0, r0, #0
    c3b8:	05740801 	ldrbeq	r0, [r4, #-2049]!	; 0xfffff7ff
    c3bc:	02020000 	andeq	r0, r2, #0
    c3c0:	0003fd05 	andeq	pc, r3, r5, lsl #26
    c3c4:	07020200 	streq	r0, [r2, -r0, lsl #4]
    c3c8:	0000078f 	andeq	r0, r0, pc, lsl #15
    c3cc:	ec050402 	cfstrs	mvf0, [r5], {2}
    c3d0:	03000002 	movweq	r0, #2
    c3d4:	000002c2 	andeq	r0, r0, r2, asr #5
    c3d8:	64194f02 	ldrvs	r4, [r9], #-3842	; 0xfffff0fe
    c3dc:	02000000 	andeq	r0, r0, #0
    c3e0:	00b30704 	adcseq	r0, r3, r4, lsl #14
    c3e4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    c3e8:	0002e705 	andeq	lr, r2, r5, lsl #14
    c3ec:	07080200 	streq	r0, [r8, -r0, lsl #4]
    c3f0:	000000ae 	andeq	r0, r0, lr, lsr #1
    c3f4:	69050404 	stmdbvs	r5, {r2, sl}
    c3f8:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    c3fc:	00b80704 	adcseq	r0, r8, r4, lsl #14
    c400:	68030000 	stmdavs	r3, {}	; <UNPREDICTABLE>
    c404:	03000000 	movweq	r0, #0
    c408:	00301318 	eorseq	r1, r0, r8, lsl r3
    c40c:	87050000 	strhi	r0, [r5, -r0]
    c410:	06000000 	streq	r0, [r0], -r0
    c414:	00000087 	andeq	r0, r0, r7, lsl #1
    c418:	0002c403 	andeq	ip, r2, r3, lsl #8
    c41c:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    c420:	00000058 	andeq	r0, r0, r8, asr r0
    c424:	00009d05 	andeq	r9, r0, r5, lsl #26
    c428:	00a90600 	adceq	r0, r9, r0, lsl #12
    c42c:	8c070000 	stchi	0, cr0, [r7], {-0}
    c430:	0901bd04 	stmdbeq	r1, {r2, r8, sl, fp, ip, sp, pc}
    c434:	0000020f 	andeq	r0, r0, pc, lsl #4
    c438:	00010108 	andeq	r0, r1, r8, lsl #2
    c43c:	01bf0400 			; <UNDEFINED> instruction: 0x01bf0400
    c440:	0000ae12 	andeq	sl, r0, r2, lsl lr
    c444:	00230200 	eoreq	r0, r3, r0, lsl #4
    c448:	00038c08 	andeq	r8, r3, r8, lsl #24
    c44c:	01c00400 	biceq	r0, r0, r0, lsl #8
    c450:	0000a912 	andeq	sl, r0, r2, lsl r9
    c454:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    c458:	00035108 	andeq	r5, r3, r8, lsl #2
    c45c:	01c10400 	biceq	r0, r1, r0, lsl #8
    c460:	0000a912 	andeq	sl, r0, r2, lsl r9
    c464:	08230200 	stmdaeq	r3!, {r9}
    c468:	0003a508 	andeq	sl, r3, r8, lsl #10
    c46c:	01c20400 	biceq	r0, r2, r0, lsl #8
    c470:	0000a912 	andeq	sl, r0, r2, lsl r9
    c474:	0c230200 	sfmeq	f0, 4, [r3], #-0
    c478:	52435309 	subpl	r5, r3, #603979776	; 0x24000000
    c47c:	01c30400 	biceq	r0, r3, r0, lsl #8
    c480:	0000a912 	andeq	sl, r0, r2, lsl r9
    c484:	10230200 	eorne	r0, r3, r0, lsl #4
    c488:	52434309 	subpl	r4, r3, #603979776	; 0x24000000
    c48c:	01c40400 	biceq	r0, r4, r0, lsl #8
    c490:	0000a912 	andeq	sl, r0, r2, lsl r9
    c494:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    c498:	50485309 	subpl	r5, r8, r9, lsl #6
    c49c:	01c50400 	biceq	r0, r5, r0, lsl #8
    c4a0:	00021f12 	andeq	r1, r2, r2, lsl pc
    c4a4:	18230200 	stmdane	r3!, {r9}
    c4a8:	00058208 	andeq	r8, r5, r8, lsl #4
    c4ac:	01c60400 	biceq	r0, r6, r0, lsl #8
    c4b0:	0000a912 	andeq	sl, r0, r2, lsl r9
    c4b4:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    c4b8:	00048c08 	andeq	r8, r4, r8, lsl #24
    c4bc:	01c70400 	biceq	r0, r7, r0, lsl #8
    c4c0:	0000a912 	andeq	sl, r0, r2, lsl r9
    c4c4:	28230200 	stmdacs	r3!, {r9}
    c4c8:	0008f408 	andeq	pc, r8, r8, lsl #8
    c4cc:	01c80400 	biceq	r0, r8, r0, lsl #8
    c4d0:	0000a912 	andeq	sl, r0, r2, lsl r9
    c4d4:	2c230200 	sfmcs	f0, 4, [r3], #-0
    c4d8:	0003ab08 	andeq	sl, r3, r8, lsl #22
    c4dc:	01c90400 	biceq	r0, r9, r0, lsl #8
    c4e0:	0000a912 	andeq	sl, r0, r2, lsl r9
    c4e4:	30230200 	eorcc	r0, r3, r0, lsl #4
    c4e8:	0003c908 	andeq	ip, r3, r8, lsl #18
    c4ec:	01ca0400 	biceq	r0, sl, r0, lsl #8
    c4f0:	0000a912 	andeq	sl, r0, r2, lsl r9
    c4f4:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    c4f8:	00029c08 	andeq	r9, r2, r8, lsl #24
    c4fc:	01cb0400 	biceq	r0, fp, r0, lsl #8
    c500:	0000a912 	andeq	sl, r0, r2, lsl r9
    c504:	38230200 	stmdacc	r3!, {r9}
    c508:	00076f08 	andeq	r6, r7, r8, lsl #30
    c50c:	01cc0400 	biceq	r0, ip, r0, lsl #8
    c510:	0000a912 	andeq	sl, r0, r2, lsl r9
    c514:	3c230200 	sfmcc	f0, 4, [r3], #-0
    c518:	52465009 	subpl	r5, r6, #9
    c51c:	01cd0400 	biceq	r0, sp, r0, lsl #8
    c520:	00023912 	andeq	r3, r2, r2, lsl r9
    c524:	40230200 	eormi	r0, r3, r0, lsl #4
    c528:	52464409 	subpl	r4, r6, #150994944	; 0x9000000
    c52c:	01ce0400 	biceq	r0, lr, r0, lsl #8
    c530:	0000ae12 	andeq	sl, r0, r2, lsl lr
    c534:	48230200 	stmdami	r3!, {r9}
    c538:	52444109 	subpl	r4, r4, #1073741826	; 0x40000002
    c53c:	01cf0400 	biceq	r0, pc, r0, lsl #8
    c540:	0000ae12 	andeq	sl, r0, r2, lsl lr
    c544:	4c230200 	sfmmi	f0, 4, [r3], #-0
    c548:	0003f808 	andeq	pc, r3, r8, lsl #16
    c54c:	01d00400 	bicseq	r0, r0, r0, lsl #8
    c550:	00025312 	andeq	r5, r2, r2, lsl r3
    c554:	50230200 	eorpl	r0, r3, r0, lsl #4
    c558:	00014e08 	andeq	r4, r1, r8, lsl #28
    c55c:	01d10400 	bicseq	r0, r1, r0, lsl #8
    c560:	00026d12 	andeq	r6, r2, r2, lsl sp
    c564:	60230200 	eorvs	r0, r3, r0, lsl #4
    c568:	00050f08 	andeq	r0, r5, r8, lsl #30
    c56c:	01d20400 	bicseq	r0, r2, r0, lsl #8
    c570:	00027212 	andeq	r7, r2, r2, lsl r2
    c574:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    c578:	00050908 	andeq	r0, r5, r8, lsl #18
    c57c:	01d30400 	bicseq	r0, r3, r0, lsl #8
    c580:	0000a912 	andeq	sl, r0, r2, lsl r9
    c584:	88230300 	stmdahi	r3!, {r8, r9}
    c588:	930a0001 	movwls	r0, #40961	; 0xa001
    c58c:	1f000000 	svcne	0x00000000
    c590:	0b000002 	bleq	c5a0 <_Min_Heap_Size+0xbda0>
    c594:	00000080 	andeq	r0, r0, r0, lsl #1
    c598:	0f05000b 	svceq	0x0005000b
    c59c:	0a000002 	beq	c5ac <_Min_Heap_Size+0xbdac>
    c5a0:	000000ae 	andeq	r0, r0, lr, lsr #1
    c5a4:	00000234 	andeq	r0, r0, r4, lsr r2
    c5a8:	0000800b 	andeq	r8, r0, fp
    c5ac:	06000100 	streq	r0, [r0], -r0, lsl #2
    c5b0:	00000224 	andeq	r0, r0, r4, lsr #4
    c5b4:	00023405 	andeq	r3, r2, r5, lsl #8
    c5b8:	00ae0a00 	adceq	r0, lr, r0, lsl #20
    c5bc:	024e0000 	subeq	r0, lr, #0
    c5c0:	800b0000 	andhi	r0, fp, r0
    c5c4:	03000000 	movweq	r0, #0
    c5c8:	023e0600 	eorseq	r0, lr, #0, 12
    c5cc:	4e050000 	cdpmi	0, 0, cr0, cr5, cr0, {0}
    c5d0:	0a000002 	beq	c5e0 <_Min_Heap_Size+0xbde0>
    c5d4:	000000ae 	andeq	r0, r0, lr, lsr #1
    c5d8:	00000268 	andeq	r0, r0, r8, ror #4
    c5dc:	0000800b 	andeq	r8, r0, fp
    c5e0:	06000400 	streq	r0, [r0], -r0, lsl #8
    c5e4:	00000258 	andeq	r0, r0, r8, asr r2
    c5e8:	00026805 	andeq	r6, r2, r5, lsl #16
    c5ec:	009d0a00 	addseq	r0, sp, r0, lsl #20
    c5f0:	02820000 	addeq	r0, r2, #0
    c5f4:	800b0000 	andhi	r0, fp, r0
    c5f8:	04000000 	streq	r0, [r0], #-0
    c5fc:	02d70c00 	sbcseq	r0, r7, #0, 24
    c600:	d4040000 	strle	r0, [r4], #-0
    c604:	00b30301 	adcseq	r0, r3, r1, lsl #6
    c608:	9d0a0000 	stcls	0, cr0, [sl, #-0]
    c60c:	9f000000 	svcls	0x00000000
    c610:	0b000002 	bleq	c620 <_Min_Heap_Size+0xbe20>
    c614:	00000080 	andeq	r0, r0, r0, lsl #1
    c618:	770d0001 	strvc	r0, [sp, -r1]
    c61c:	0500001a 	streq	r0, [r0, #-26]	; 0xffffffe6
    c620:	009d1139 	addseq	r1, sp, r9, lsr r1
    c624:	01010000 	mrseq	r0, (UNDEF: 1)
    c628:	0000980a 	andeq	r9, r0, sl, lsl #16
    c62c:	0002bd00 	andeq	fp, r2, r0, lsl #26
    c630:	00800b00 	addeq	r0, r0, r0, lsl #22
    c634:	000f0000 	andeq	r0, pc, r0
    c638:	0002ad06 	andeq	sl, r2, r6, lsl #26
    c63c:	1a370d00 	bne	dcfa44 <_Min_Heap_Size+0xdcf244>
    c640:	3b050000 	blcc	14c648 <_Min_Heap_Size+0x14be48>
    c644:	0002bd17 	andeq	fp, r2, r7, lsl sp
    c648:	0a010100 	beq	4ca50 <_Min_Heap_Size+0x4c250>
    c64c:	00000098 	muleq	r0, r8, r0
    c650:	000002e0 	andeq	r0, r0, r0, ror #5
    c654:	0000800b 	andeq	r8, r0, fp
    c658:	06000700 	streq	r0, [r0], -r0, lsl #14
    c65c:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    c660:	0019d30d 	andseq	sp, r9, sp, lsl #6
    c664:	173c0500 	ldrne	r0, [ip, -r0, lsl #10]!
    c668:	000002e0 	andeq	r0, r0, r0, ror #5
    c66c:	88070101 	stmdahi	r7, {r0, r8}
    c670:	0901f406 	stmdbeq	r1, {r1, r2, sl, ip, sp, lr, pc}
    c674:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    c678:	00524309 	subseq	r4, r2, r9, lsl #6
    c67c:	1101f606 	tstne	r1, r6, lsl #12	; <UNPREDICTABLE>
    c680:	000000a9 	andeq	r0, r0, r9, lsr #1
    c684:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    c688:	00000282 	andeq	r0, r0, r2, lsl #5
    c68c:	1101f706 	tstne	r1, r6, lsl #14	; <UNPREDICTABLE>
    c690:	000000a9 	andeq	r0, r0, r9, lsr #1
    c694:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    c698:	00000285 	andeq	r0, r0, r5, lsl #5
    c69c:	1101f806 	tstne	r1, r6, lsl #16	; <UNPREDICTABLE>
    c6a0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c6a4:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
    c6a8:	00524943 	subseq	r4, r2, r3, asr #18
    c6ac:	1101f906 	tstne	r1, r6, lsl #18	; <UNPREDICTABLE>
    c6b0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c6b4:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    c6b8:	00000166 	andeq	r0, r0, r6, ror #2
    c6bc:	1101fa06 	tstne	r1, r6, lsl #20	; <UNPREDICTABLE>
    c6c0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c6c4:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    c6c8:	00000717 	andeq	r0, r0, r7, lsl r7
    c6cc:	1101fb06 	tstne	r1, r6, lsl #22	; <UNPREDICTABLE>
    c6d0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c6d4:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    c6d8:	0000067c 	andeq	r0, r0, ip, ror r6
    c6dc:	1101fc06 	tstne	r1, r6, lsl #24	; <UNPREDICTABLE>
    c6e0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c6e4:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
    c6e8:	0000050f 	andeq	r0, r0, pc, lsl #10
    c6ec:	1101fd06 	tstne	r1, r6, lsl #26	; <UNPREDICTABLE>
    c6f0:	0000009d 	muleq	r0, sp, r0
    c6f4:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    c6f8:	000004fa 	strdeq	r0, [r0], -sl
    c6fc:	1101fe06 	tstne	r1, r6, lsl #28	; <UNPREDICTABLE>
    c700:	000000a9 	andeq	r0, r0, r9, lsr #1
    c704:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    c708:	000001f9 	strdeq	r0, [r0], -r9
    c70c:	1101ff06 	tstne	r1, r6, lsl #30	; <UNPREDICTABLE>
    c710:	000000a9 	andeq	r0, r0, r9, lsr #1
    c714:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    c718:	00000519 	andeq	r0, r0, r9, lsl r5
    c71c:	11020006 	tstne	r2, r6
    c720:	0000028f 	andeq	r0, r0, pc, lsl #5
    c724:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
    c728:	000008ae 	andeq	r0, r0, lr, lsr #17
    c72c:	11020106 	tstne	r2, r6, lsl #2
    c730:	000000a9 	andeq	r0, r0, r9, lsr #1
    c734:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
    c738:	00000787 	andeq	r0, r0, r7, lsl #15
    c73c:	11020206 	tstne	r2, r6, lsl #4
    c740:	000000a9 	andeq	r0, r0, r9, lsr #1
    c744:	08342302 	ldmdaeq	r4!, {r1, r8, r9, sp}
    c748:	0000049c 	muleq	r0, ip, r4
    c74c:	11020306 	tstne	r2, r6, lsl #6
    c750:	000000a9 	andeq	r0, r0, r9, lsr #1
    c754:	08382302 	ldmdaeq	r8!, {r1, r8, r9, sp}
    c758:	00000523 	andeq	r0, r0, r3, lsr #10
    c75c:	11020406 	tstne	r2, r6, lsl #8
    c760:	0000009d 	muleq	r0, sp, r0
    c764:	083c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}
    c768:	000006b7 			; <UNDEFINED> instruction: 0x000006b7
    c76c:	11020506 	tstne	r2, r6, lsl #10
    c770:	000000a9 	andeq	r0, r0, r9, lsr #1
    c774:	08402302 	stmdaeq	r0, {r1, r8, r9, sp}^
    c778:	00000674 	andeq	r0, r0, r4, ror r6
    c77c:	11020606 	tstne	r2, r6, lsl #12
    c780:	000000a9 	andeq	r0, r0, r9, lsr #1
    c784:	08442302 	stmdaeq	r4, {r1, r8, r9, sp}^
    c788:	0000052d 	andeq	r0, r0, sp, lsr #10
    c78c:	11020706 	tstne	r2, r6, lsl #14
    c790:	0000028f 	andeq	r0, r0, pc, lsl #5
    c794:	08482302 	stmdaeq	r8, {r1, r8, r9, sp}^
    c798:	0000012b 	andeq	r0, r0, fp, lsr #2
    c79c:	11020806 	tstne	r2, r6, lsl #16
    c7a0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c7a4:	08502302 	ldmdaeq	r0, {r1, r8, r9, sp}^
    c7a8:	000004d6 	ldrdeq	r0, [r0], -r6
    c7ac:	11020906 	tstne	r2, r6, lsl #18
    c7b0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c7b4:	08542302 	ldmdaeq	r4, {r1, r8, r9, sp}^
    c7b8:	00000642 	andeq	r0, r0, r2, asr #12
    c7bc:	11020a06 	tstne	r2, r6, lsl #20
    c7c0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c7c4:	08582302 	ldmdaeq	r8, {r1, r8, r9, sp}^
    c7c8:	00000537 	andeq	r0, r0, r7, lsr r5
    c7cc:	11020b06 	tstne	r2, r6, lsl #22
    c7d0:	0000009d 	muleq	r0, sp, r0
    c7d4:	085c2302 	ldmdaeq	ip, {r1, r8, r9, sp}^
    c7d8:	0000001b 	andeq	r0, r0, fp, lsl r0
    c7dc:	11020c06 	tstne	r2, r6, lsl #24
    c7e0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c7e4:	08602302 	stmdaeq	r0!, {r1, r8, r9, sp}^
    c7e8:	000003ee 	andeq	r0, r0, lr, ror #7
    c7ec:	11020d06 	tstne	r2, r6, lsl #26
    c7f0:	000000a9 	andeq	r0, r0, r9, lsr #1
    c7f4:	08642302 	stmdaeq	r4!, {r1, r8, r9, sp}^
    c7f8:	00000541 	andeq	r0, r0, r1, asr #10
    c7fc:	11020e06 	tstne	r2, r6, lsl #28
    c800:	0000028f 	andeq	r0, r0, pc, lsl #5
    c804:	08682302 	stmdaeq	r8!, {r1, r8, r9, sp}^
    c808:	00000809 	andeq	r0, r0, r9, lsl #16
    c80c:	11020f06 	tstne	r2, r6, lsl #30
    c810:	000000a9 	andeq	r0, r0, r9, lsr #1
    c814:	09702302 	ldmdbeq	r0!, {r1, r8, r9, sp}^
    c818:	00525343 	subseq	r5, r2, r3, asr #6
    c81c:	11021006 	tstne	r2, r6
    c820:	000000a9 	andeq	r0, r0, r9, lsr #1
    c824:	08742302 	ldmdaeq	r4!, {r1, r8, r9, sp}^
    c828:	0000054b 	andeq	r0, r0, fp, asr #10
    c82c:	11021106 	tstne	r2, r6, lsl #2
    c830:	0000028f 	andeq	r0, r0, pc, lsl #5
    c834:	08782302 	ldmdaeq	r8!, {r1, r8, r9, sp}^
    c838:	000007d8 	ldrdeq	r0, [r0], -r8
    c83c:	11021206 	tstne	r2, r6, lsl #4
    c840:	000000a9 	andeq	r0, r0, r9, lsr #1
    c844:	01802303 	orreq	r2, r0, r3, lsl #6
    c848:	00038108 	andeq	r8, r3, r8, lsl #2
    c84c:	02130600 	andseq	r0, r3, #0, 12
    c850:	0000a911 	andeq	sl, r0, r1, lsl r9
    c854:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    c858:	cd0c0001 	stcgt	0, cr0, [ip, #-4]
    c85c:	06000001 	streq	r0, [r0], -r1
    c860:	f3030214 	vqsub.u8	d0, d3, d4
    c864:	02000002 	andeq	r0, r0, #2
    c868:	06bf0408 	ldrteq	r0, [pc], r8, lsl #8
    c86c:	9f0e0000 	svcls	0x000e0000
    c870:	01000002 	tsteq	r0, r2
    c874:	03050a89 	movweq	r0, #23177	; 0x5a89
    c878:	20000008 	andcs	r0, r0, r8
    c87c:	0002c20e 	andeq	ip, r2, lr, lsl #4
    c880:	0f8a0100 	svceq	0x008a0100
    c884:	00000305 	andeq	r0, r0, r5, lsl #6
    c888:	e50e0000 	str	r0, [lr, #-0]
    c88c:	01000002 	tsteq	r0, r2
    c890:	03050f8b 	movweq	r0, #24459	; 0x5f8b
    c894:	08002d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp, sp}
    c898:	2707010f 	strcs	r0, [r7, -pc, lsl #2]
    c89c:	dc010000 	stcle	0, cr0, [r1], {-0}
    c8a0:	00000106 	andeq	r0, r0, r6, lsl #2
    c8a4:	00000000 	andeq	r0, r0, r0
    c8a8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c8ac:	059c0100 	ldreq	r0, [ip, #256]	; 0x100
    c8b0:	74100000 	ldrvc	r0, [r0], #-0
    c8b4:	0100706d 	tsteq	r0, sp, rrx
    c8b8:	009d0cde 			; <UNDEFINED> instruction: 0x009d0cde
    c8bc:	7ec00000 	cdpvc	0, 12, cr0, cr0, cr0, {0}
    c8c0:	7eb40000 	cdpvc	0, 11, cr0, cr4, cr0, {0}
    c8c4:	04110000 	ldreq	r0, [r1], #-0
    c8c8:	0100001a 	tsteq	r0, sl, lsl r0
    c8cc:	009d15de 			; <UNDEFINED> instruction: 0x009d15de
    c8d0:	7f150000 	svcvc	0x00150000
    c8d4:	7f0b0000 	svcvc	0x000b0000
    c8d8:	c0110000 	andsgt	r0, r1, r0
    c8dc:	01000019 	tsteq	r0, r9, lsl r0
    c8e0:	009d21de 			; <UNDEFINED> instruction: 0x009d21de
    c8e4:	7f5f0000 	svcvc	0x005f0000
    c8e8:	7f570000 	svcvc	0x00570000
    c8ec:	f2110000 	vhadd.s16	d0, d1, d0
    c8f0:	01000026 	tsteq	r0, r6, lsr #32
    c8f4:	009d2bde 			; <UNDEFINED> instruction: 0x009d2bde
    c8f8:	7f9c0000 	svcvc	0x009c0000
    c8fc:	7f960000 	svcvc	0x00960000
    c900:	aa110000 	bge	44c908 <_Min_Heap_Size+0x44c108>
    c904:	0100001a 	tsteq	r0, sl, lsl r0
    c908:	009d3ade 			; <UNDEFINED> instruction: 0x009d3ade
    c90c:	7fd60000 	svcvc	0x00d60000
    c910:	7fce0000 	svcvc	0x00ce0000
    c914:	12000000 	andne	r0, r0, #0
    c918:	0026fc01 	eoreq	pc, r6, r1, lsl #24
    c91c:	06a70100 	strteq	r0, [r7], r0, lsl #2
    c920:	00179001 	andseq	r9, r7, r1
    c924:	0017a408 	andseq	sl, r7, r8, lsl #8
    c928:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    c92c:	08ae0001 	stmiaeq	lr!, {r0}
    c930:	00020000 	andeq	r0, r2, r0
    c934:	00001ca2 	andeq	r1, r0, r2, lsr #25
    c938:	05880104 	streq	r0, [r8, #260]	; 0x104
    c93c:	3b0c0000 	blcc	30c944 <_Min_Heap_Size+0x30c144>
    c940:	6d000028 	stcvs	0, cr0, [r0, #-160]	; 0xffffff60
    c944:	40000008 	andmi	r0, r0, r8
    c948:	00000007 	andeq	r0, r0, r7
    c94c:	00000000 	andeq	r0, r0, r0
    c950:	5d000000 	stcpl	0, cr0, [r0, #-0]
    c954:	02000090 	andeq	r0, r0, #144	; 0x90
    c958:	05760601 	ldrbeq	r0, [r6, #-1537]!	; 0xfffff9ff
    c95c:	01020000 	mrseq	r0, (UNDEF: 2)
    c960:	00057408 	andeq	r7, r5, r8, lsl #8
    c964:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    c968:	000003fd 	strdeq	r0, [r0], -sp
    c96c:	0006f503 	andeq	pc, r6, r3, lsl #10
    c970:	19390300 	ldmdbne	r9!, {r8, r9}
    c974:	0000004a 	andeq	r0, r0, sl, asr #32
    c978:	8f070202 	svchi	0x00070202
    c97c:	02000007 	andeq	r0, r0, #7
    c980:	02ec0504 	rsceq	r0, ip, #4, 10	; 0x1000000
    c984:	c2030000 	andgt	r0, r3, #0
    c988:	03000002 	movweq	r0, #2
    c98c:	0064194f 	rsbeq	r1, r4, pc, asr #18
    c990:	04020000 	streq	r0, [r2], #-0
    c994:	0000b307 	andeq	fp, r0, r7, lsl #6
    c998:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    c99c:	000002e7 	andeq	r0, r0, r7, ror #5
    c9a0:	ae070802 	cdpge	8, 0, cr0, cr7, cr2, {0}
    c9a4:	04000000 	streq	r0, [r0], #-0
    c9a8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    c9ac:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    c9b0:	0000b807 	andeq	fp, r0, r7, lsl #16
    c9b4:	00800500 	addeq	r0, r0, r0, lsl #10
    c9b8:	fe030000 	cdp2	0, 0, cr0, cr3, cr0, {0}
    c9bc:	0400000a 	streq	r0, [r0], #-10
    c9c0:	008017d1 	ldrdeq	r1, [r0], r1	; <UNPREDICTABLE>
    c9c4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    c9c8:	0006bf04 	andeq	fp, r6, r4, lsl #30
    c9cc:	08010200 	stmdaeq	r1, {r9}
    c9d0:	0000057d 	andeq	r0, r0, sp, ror r5
    c9d4:	0006f703 	andeq	pc, r6, r3, lsl #14
    c9d8:	14240500 	strtne	r0, [r4], #-1280	; 0xfffffb00
    c9dc:	0000003e 	andeq	r0, r0, lr, lsr r0
    c9e0:	0002c403 	andeq	ip, r2, r3, lsl #8
    c9e4:	14300500 	ldrtne	r0, [r0], #-1280	; 0xfffffb00
    c9e8:	00000058 	andeq	r0, r0, r8, asr r0
    c9ec:	00280d03 	eoreq	r0, r8, r3, lsl #26
    c9f0:	23280600 			; <UNDEFINED> instruction: 0x23280600
    c9f4:	000000ca 	andeq	r0, r0, sl, asr #1
    c9f8:	0028a306 	eoreq	sl, r8, r6, lsl #6
    c9fc:	29062000 	stmdbcs	r6, {sp}
    ca00:	00014a08 	andeq	r4, r1, r8, lsl #20
    ca04:	30720700 	rsbscc	r0, r2, r0, lsl #14
    ca08:	122a0600 	eorne	r0, sl, #0, 12
    ca0c:	00000080 	andeq	r0, r0, r0, lsl #1
    ca10:	07002302 	streq	r2, [r0, -r2, lsl #6]
    ca14:	06003172 			; <UNDEFINED> instruction: 0x06003172
    ca18:	0080122b 	addeq	r1, r0, fp, lsr #4
    ca1c:	23020000 	movwcs	r0, #8192	; 0x2000
    ca20:	32720704 	rsbscc	r0, r2, #4, 14	; 0x100000
    ca24:	122c0600 	eorne	r0, ip, #0, 12
    ca28:	00000080 	andeq	r0, r0, r0, lsl #1
    ca2c:	07082302 	streq	r2, [r8, -r2, lsl #6]
    ca30:	06003372 			; <UNDEFINED> instruction: 0x06003372
    ca34:	0080122d 	addeq	r1, r0, sp, lsr #4
    ca38:	23020000 	movwcs	r0, #8192	; 0x2000
    ca3c:	3172070c 	cmncc	r2, ip, lsl #14
    ca40:	2e060032 	mcrcs	0, 0, r0, cr6, cr2, {1}
    ca44:	00008012 	andeq	r8, r0, r2, lsl r0
    ca48:	10230200 	eorne	r0, r3, r0, lsl #4
    ca4c:	00726c07 	rsbseq	r6, r2, r7, lsl #24
    ca50:	80122f06 	andshi	r2, r2, r6, lsl #30
    ca54:	02000000 	andeq	r0, r0, #0
    ca58:	70071423 	andvc	r1, r7, r3, lsr #8
    ca5c:	30060063 	andcc	r0, r6, r3, rrx
    ca60:	00008012 	andeq	r8, r0, r2, lsl r0
    ca64:	18230200 	stmdane	r3!, {r9}
    ca68:	72737007 	rsbsvc	r7, r3, #7
    ca6c:	12310600 	eorsne	r0, r1, #0, 12
    ca70:	00000080 	andeq	r0, r0, r0, lsl #1
    ca74:	001c2302 	andseq	r2, ip, r2, lsl #6
    ca78:	0027c903 	eoreq	ip, r7, r3, lsl #18
    ca7c:	23340600 	teqcs	r4, #0, 12
    ca80:	00000156 	andeq	r0, r0, r6, asr r1
    ca84:	0027ee06 	eoreq	lr, r7, r6, lsl #28
    ca88:	35062000 	strcc	r2, [r6, #-0]
    ca8c:	0001d608 	andeq	sp, r1, r8, lsl #12
    ca90:	34720700 	ldrbtcc	r0, [r2], #-1792	; 0xfffff900
    ca94:	12360600 	eorsne	r0, r6, #0, 12
    ca98:	00000080 	andeq	r0, r0, r0, lsl #1
    ca9c:	07002302 	streq	r2, [r0, -r2, lsl #6]
    caa0:	06003572 			; <UNDEFINED> instruction: 0x06003572
    caa4:	00801237 	addeq	r1, r0, r7, lsr r2
    caa8:	23020000 	movwcs	r0, #8192	; 0x2000
    caac:	36720704 	ldrbtcc	r0, [r2], -r4, lsl #14
    cab0:	12380600 	eorsne	r0, r8, #0, 12
    cab4:	00000080 	andeq	r0, r0, r0, lsl #1
    cab8:	07082302 	streq	r2, [r8, -r2, lsl #6]
    cabc:	06003772 			; <UNDEFINED> instruction: 0x06003772
    cac0:	00801239 	addeq	r1, r0, r9, lsr r2
    cac4:	23020000 	movwcs	r0, #8192	; 0x2000
    cac8:	3872070c 	ldmdacc	r2!, {r2, r3, r8, r9, sl}^
    cacc:	123a0600 	eorsne	r0, sl, #0, 12
    cad0:	00000080 	andeq	r0, r0, r0, lsl #1
    cad4:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    cad8:	06003972 			; <UNDEFINED> instruction: 0x06003972
    cadc:	0080123b 	addeq	r1, r0, fp, lsr r2
    cae0:	23020000 	movwcs	r0, #8192	; 0x2000
    cae4:	31720714 	cmncc	r2, r4, lsl r7
    cae8:	3c060030 	stccc	0, cr0, [r6], {48}	; 0x30
    caec:	00008012 	andeq	r8, r0, r2, lsl r0
    caf0:	18230200 	stmdane	r3!, {r9}
    caf4:	31317207 	teqcc	r1, r7, lsl #4
    caf8:	123d0600 	eorsne	r0, sp, #0, 12
    cafc:	00000080 	andeq	r0, r0, r0, lsl #1
    cb00:	001c2302 	andseq	r2, ip, r2, lsl #6
    cb04:	00273803 	eoreq	r3, r7, r3, lsl #16
    cb08:	1c400600 	mcrrne	6, 0, r0, r0, cr0
    cb0c:	000001e2 	andeq	r0, r0, r2, ror #3
    cb10:	00280106 	eoreq	r0, r8, r6, lsl #2
    cb14:	41064000 	mrsmi	r4, (UNDEF: 6)
    cb18:	00020e08 	andeq	r0, r2, r8, lsl #28
    cb1c:	27fa0800 	ldrbcs	r0, [sl, r0, lsl #16]!
    cb20:	42060000 	andmi	r0, r6, #0
    cb24:	00014a1a 	andeq	r4, r1, sl, lsl sl
    cb28:	00230200 	eoreq	r0, r3, r0, lsl #4
    cb2c:	0028af08 	eoreq	sl, r8, r8, lsl #30
    cb30:	1a430600 	bne	10ce338 <_Min_Heap_Size+0x10cdb38>
    cb34:	000000be 	strheq	r0, [r0], -lr
    cb38:	00202302 	eoreq	r2, r0, r2, lsl #6
    cb3c:	00271d09 	eoreq	r1, r7, r9, lsl #26
    cb40:	151d0100 	ldrne	r0, [sp, #-256]	; 0xffffff00
    cb44:	00000080 	andeq	r0, r0, r0, lsl #1
    cb48:	b6090101 	strlt	r0, [r9], -r1, lsl #2
    cb4c:	01000028 	tsteq	r0, r8, lsr #32
    cb50:	0080151e 	addeq	r1, r0, lr, lsl r5
    cb54:	01010000 	mrseq	r0, (UNDEF: 1)
    cb58:	00277909 	eoreq	r7, r7, r9, lsl #18
    cb5c:	151f0100 	ldrne	r0, [pc, #-256]	; ca64 <_Min_Heap_Size+0xc264>
    cb60:	00000080 	andeq	r0, r0, r0, lsl #1
    cb64:	44090101 	strmi	r0, [r9], #-257	; 0xfffffeff
    cb68:	01000009 	tsteq	r0, r9
    cb6c:	00801520 	addeq	r1, r0, r0, lsr #10
    cb70:	01010000 	mrseq	r0, (UNDEF: 1)
    cb74:	0028220a 	eoreq	r2, r8, sl, lsl #4
    cb78:	17710100 	ldrbne	r0, [r1, -r0, lsl #2]!
    cb7c:	00000087 	andeq	r0, r0, r7, lsl #1
    cb80:	dc030501 	cfstr32le	mvfx0, [r3], {1}
    cb84:	0a200001 	beq	80cb90 <_Min_Heap_Size+0x80c390>
    cb88:	00002746 	andeq	r2, r0, r6, asr #14
    cb8c:	87177201 	ldrhi	r7, [r7, -r1, lsl #4]
    cb90:	01000000 	mrseq	r0, (UNDEF: 0)
    cb94:	01e00305 	mvneq	r0, r5, lsl #6
    cb98:	010b2000 	mrseq	r2, (UNDEF: 11)
    cb9c:	0000275f 	andeq	r2, r0, pc, asr r7
    cba0:	0e010c01 	cdpeq	12, 0, cr0, cr1, cr1, {0}
    cba4:	00008001 	andeq	r8, r0, r1
	...
    cbb0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    cbb4:	81010c01 	tsthi	r1, r1, lsl #24
    cbb8:	01000027 	tsteq	r0, r7, lsr #32
    cbbc:	010e0108 	tsteq	lr, r8, lsl #2
    cbc0:	00000080 	andeq	r0, r0, r0, lsl #1
	...
    cbcc:	01007d02 	tsteq	r0, r2, lsl #26
    cbd0:	000002cb 	andeq	r0, r0, fp, asr #5
    cbd4:	0008670d 	andeq	r6, r8, sp, lsl #14
    cbd8:	00000000 	andeq	r0, r0, r0
    cbdc:	00000200 	andeq	r0, r0, r0, lsl #4
    cbe0:	00000000 	andeq	r0, r0, r0
    cbe4:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    cbe8:	7a0e0c01 	bvc	38fbf4 <_Min_Heap_Size+0x38f3f4>
    cbec:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    cbf0:	0c000080 	stceq	0, cr0, [r0], {128}	; 0x80
    cbf4:	00000080 	andeq	r0, r0, r0, lsl #1
    cbf8:	ad010f00 	stcge	15, cr0, [r1, #-0]
    cbfc:	01000027 	tsteq	r0, r7, lsr #32
    cc00:	790105dc 	stmdbvc	r1, {r2, r3, r4, r6, r7, r8, sl}
    cc04:	70000000 	andvc	r0, r0, r0
    cc08:	ec080018 	stc	0, cr0, [r8], {24}
    cc0c:	21080018 	tstcs	r8, r8, lsl r0
    cc10:	01000080 	smlabbeq	r0, r0, r0, r0
    cc14:	000003a5 	andeq	r0, r0, r5, lsr #7
    cc18:	00286910 	eoreq	r6, r8, r0, lsl r9
    cc1c:	28dc0100 	ldmcs	ip, {r8}^
    cc20:	000003a5 	andeq	r0, r0, r5, lsr #7
    cc24:	00008049 	andeq	r8, r0, r9, asr #32
    cc28:	00008041 	andeq	r8, r0, r1, asr #32
    cc2c:	000b5010 	andeq	r5, fp, r0, lsl r0
    cc30:	37dc0100 	ldrbcc	r0, [ip, r0, lsl #2]
    cc34:	0000008c 	andeq	r0, r0, ip, lsl #1
    cc38:	00008088 	andeq	r8, r0, r8, lsl #1
    cc3c:	00008080 	andeq	r8, r0, r0, lsl #1
    cc40:	00278f10 	eoreq	r8, r7, r0, lsl pc
    cc44:	4bdc0100 	blmi	ff70d04c <_estack+0xdf70be14>
    cc48:	000003a5 	andeq	r0, r0, r5, lsr #7
    cc4c:	000080c5 	andeq	r8, r0, r5, asr #1
    cc50:	000080bf 	strheq	r8, [r0], -pc	; <UNPREDICTABLE>
    cc54:	00276d10 	eoreq	r6, r7, r0, lsl sp
    cc58:	66dc0100 	ldrbvs	r0, [ip], r0, lsl #2
    cc5c:	000003a5 	andeq	r0, r0, r5, lsr #7
    cc60:	000080f9 	strdeq	r8, [r0], -r9
    cc64:	000080f1 	strdeq	r8, [r0], -r1
    cc68:	001f4411 	andseq	r4, pc, r1, lsl r4	; <UNPREDICTABLE>
    cc6c:	09dd0100 	ldmibeq	sp, {r8}^
    cc70:	00000079 	andeq	r0, r0, r9, ror r0
    cc74:	00008136 	andeq	r8, r0, r6, lsr r1
    cc78:	00008130 	andeq	r8, r0, r0, lsr r1
    cc7c:	00637012 	rsbeq	r7, r3, r2, lsl r0
    cc80:	8012de01 	andshi	sp, r2, r1, lsl #28
    cc84:	6b000000 	blvs	cc8c <_Min_Heap_Size+0xc48c>
    cc88:	61000081 	smlabbvs	r0, r1, r0, r0
    cc8c:	12000081 	andne	r0, r0, #129	; 0x81
    cc90:	0100706f 	tsteq	r0, pc, rrx
    cc94:	00801ade 	ldrdeq	r1, [r0], lr
    cc98:	81b40000 			; <UNDEFINED> instruction: 0x81b40000
    cc9c:	81ae0000 			; <UNDEFINED> instruction: 0x81ae0000
    cca0:	73120000 	tstvc	r2, #0
    cca4:	de010070 	mcrle	0, 0, r0, cr1, cr0, {3}
    cca8:	0003a523 	andeq	sl, r3, r3, lsr #10
    ccac:	0081e500 	addeq	lr, r1, r0, lsl #10
    ccb0:	0081df00 	addeq	sp, r1, r0, lsl #30
    ccb4:	18b21300 	ldmne	r2!, {r8, r9, ip}
    ccb8:	07840800 	streq	r0, [r4, r0, lsl #16]
    ccbc:	039b0000 	orrseq	r0, fp, #0
    ccc0:	01140000 	tsteq	r4, r0
    ccc4:	00790250 	rsbseq	r0, r9, r0, asr r2
    ccc8:	18b61500 	ldmne	r6!, {r8, sl, ip}
    cccc:	07230800 	streq	r0, [r3, -r0, lsl #16]!
    ccd0:	16000000 	strne	r0, [r0], -r0
    ccd4:	00008004 	andeq	r8, r0, r4
    ccd8:	70011700 	andvc	r1, r1, r0, lsl #14
    ccdc:	01000028 	tsteq	r0, r8, lsr #32
    cce0:	ec0106a1 	stc	6, cr0, [r1], {161}	; 0xa1
    cce4:	70080018 	andvc	r0, r8, r8, lsl r0
    cce8:	1008001a 	andne	r0, r8, sl, lsl r0
    ccec:	01000082 	smlabbeq	r0, r2, r0, r0
    ccf0:	000006a2 	andeq	r0, r0, r2, lsr #13
    ccf4:	00094610 	andeq	r4, r9, r0, lsl r6
    ccf8:	27a10100 	strcs	r0, [r1, r0, lsl #2]!
    ccfc:	000003a5 	andeq	r0, r0, r5, lsr #7
    cd00:	00008236 	andeq	r8, r0, r6, lsr r2
    cd04:	00008230 	andeq	r8, r0, r0, lsr r2
    cd08:	0027c210 	eoreq	ip, r7, r0, lsl r2
    cd0c:	3ba10100 	blcc	fe84d114 <_estack+0xde84bedc>
    cd10:	00000080 	andeq	r0, r0, r0, lsl #1
    cd14:	00008266 	andeq	r8, r0, r6, ror #4
    cd18:	00008262 	andeq	r8, r0, r2, ror #4
    cd1c:	001f4411 	andseq	r4, pc, r1, lsl r4	; <UNPREDICTABLE>
    cd20:	09a20100 	stmibeq	r2!, {r8}
    cd24:	00000079 	andeq	r0, r0, r9, ror r0
    cd28:	0000828a 	andeq	r8, r0, sl, lsl #5
    cd2c:	00008284 	andeq	r8, r0, r4, lsl #5
    cd30:	00275911 	eoreq	r5, r7, r1, lsl r9
    cd34:	14a20100 	strtne	r0, [r2], #256	; 0x100
    cd38:	00000079 	andeq	r0, r0, r9, ror r0
    cd3c:	000082bc 			; <UNDEFINED> instruction: 0x000082bc
    cd40:	000082b4 			; <UNDEFINED> instruction: 0x000082b4
    cd44:	00279511 	eoreq	r9, r7, r1, lsl r5
    cd48:	13a30100 			; <UNDEFINED> instruction: 0x13a30100
    cd4c:	000003a5 	andeq	r0, r0, r5, lsr #7
    cd50:	00008319 	andeq	r8, r0, r9, lsl r3
    cd54:	000082f3 	strdeq	r8, [r0], -r3
    cd58:	00280718 	eoreq	r0, r8, r8, lsl r7
    cd5c:	1aa40100 	bne	fe90d164 <_estack+0xde90bf2c>
    cd60:	000001d6 	ldrdeq	r0, [r0], -r6
    cd64:	01e40305 	mvneq	r0, r5, lsl #6
    cd68:	69182000 	ldmdbvs	r8, {sp}
    cd6c:	01000028 	tsteq	r0, r8, lsr #32
    cd70:	06a219a5 	strteq	r1, [r2], r5, lsr #19
    cd74:	03050000 	movweq	r0, #20480	; 0x5000
    cd78:	200000dc 	ldrdcs	r0, [r0], -ip
    cd7c:	00193c13 	andseq	r3, r9, r3, lsl ip
    cd80:	00088808 	andeq	r8, r8, r8, lsl #16
    cd84:	00046200 	andeq	r6, r4, r0, lsl #4
    cd88:	50011400 	andpl	r1, r1, r0, lsl #8
    cd8c:	00007702 	andeq	r7, r0, r2, lsl #14
    cd90:	00194213 	andseq	r4, r9, r3, lsl r2
    cd94:	00088808 	andeq	r8, r8, r8, lsl #16
    cd98:	00047900 	andeq	r7, r4, r0, lsl #18
    cd9c:	50011400 	andpl	r1, r1, r0, lsl #8
    cda0:	2de00305 	stclcs	3, cr0, [r0, #20]!
    cda4:	13000800 	movwne	r0, #2048	; 0x800
    cda8:	08001948 	stmdaeq	r0, {r3, r6, r8, fp, ip}
    cdac:	00000888 	andeq	r0, r0, r8, lsl #17
    cdb0:	00000490 	muleq	r0, r0, r4
    cdb4:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    cdb8:	002e0003 	eoreq	r0, lr, r3
    cdbc:	50130008 	andspl	r0, r3, r8
    cdc0:	95080019 	strls	r0, [r8, #-25]	; 0xffffffe7
    cdc4:	a7000008 	strge	r0, [r0, -r8]
    cdc8:	14000004 	strne	r0, [r0], #-4
    cdcc:	03055001 	movweq	r5, #20481	; 0x5001
    cdd0:	08002e14 	stmdaeq	r0, {r2, r4, r9, sl, fp, sp}
    cdd4:	19581300 	ldmdbne	r8, {r8, r9, ip}^
    cdd8:	08950800 	ldmeq	r5, {fp}
    cddc:	04be0000 	ldrteq	r0, [lr], #0
    cde0:	01140000 	tsteq	r4, r0
    cde4:	28030550 	stmdacs	r3, {r4, r6, r8, sl}
    cde8:	0008002e 	andeq	r0, r8, lr, lsr #32
    cdec:	00196013 	andseq	r6, r9, r3, lsl r0
    cdf0:	00089508 	andeq	r9, r8, r8, lsl #10
    cdf4:	0004d500 	andeq	sp, r4, r0, lsl #10
    cdf8:	50011400 	andpl	r1, r1, r0, lsl #8
    cdfc:	2e3c0305 	cdpcs	3, 3, cr0, cr12, cr5, {0}
    ce00:	13000800 	movwne	r0, #2048	; 0x800
    ce04:	08001968 	stmdaeq	r0, {r3, r5, r6, r8, fp, ip}
    ce08:	00000895 	muleq	r0, r5, r8
    ce0c:	000004ec 	andeq	r0, r0, ip, ror #9
    ce10:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    ce14:	002e5003 	eoreq	r5, lr, r3
    ce18:	70130008 	andsvc	r0, r3, r8
    ce1c:	95080019 	strls	r0, [r8, #-25]	; 0xffffffe7
    ce20:	03000008 	movweq	r0, #8
    ce24:	14000005 	strne	r0, [r0], #-5
    ce28:	03055001 	movweq	r5, #20481	; 0x5001
    ce2c:	08002e64 	stmdaeq	r0, {r2, r5, r6, r9, sl, fp, sp}
    ce30:	19781300 	ldmdbne	r8!, {r8, r9, ip}^
    ce34:	08950800 	ldmeq	r5, {fp}
    ce38:	051a0000 	ldreq	r0, [sl, #-0]
    ce3c:	01140000 	tsteq	r4, r0
    ce40:	78030550 	stmdavc	r3, {r4, r6, r8, sl}
    ce44:	0008002e 	andeq	r0, r8, lr, lsr #32
    ce48:	00198013 	andseq	r8, r9, r3, lsl r0
    ce4c:	00089508 	andeq	r9, r8, r8, lsl #10
    ce50:	00053100 	andeq	r3, r5, r0, lsl #2
    ce54:	50011400 	andpl	r1, r1, r0, lsl #8
    ce58:	2e8c0305 	cdpcs	3, 8, cr0, cr12, cr5, {0}
    ce5c:	13000800 	movwne	r0, #2048	; 0x800
    ce60:	08001988 	stmdaeq	r0, {r3, r7, r8, fp, ip}
    ce64:	00000895 	muleq	r0, r5, r8
    ce68:	00000548 	andeq	r0, r0, r8, asr #10
    ce6c:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    ce70:	002ea003 	eoreq	sl, lr, r3
    ce74:	90130008 	andsls	r0, r3, r8
    ce78:	95080019 	strls	r0, [r8, #-25]	; 0xffffffe7
    ce7c:	5f000008 	svcpl	0x00000008
    ce80:	14000005 	strne	r0, [r0], #-5
    ce84:	03055001 	movweq	r5, #20481	; 0x5001
    ce88:	08002eb4 	stmdaeq	r0, {r2, r4, r5, r7, r9, sl, fp, sp}
    ce8c:	19981300 	ldmibne	r8, {r8, r9, ip}
    ce90:	08950800 	ldmeq	r5, {fp}
    ce94:	05760000 	ldrbeq	r0, [r6, #-0]!
    ce98:	01140000 	tsteq	r4, r0
    ce9c:	c8030550 	stmdagt	r3, {r4, r6, r8, sl}
    cea0:	0008002e 	andeq	r0, r8, lr, lsr #32
    cea4:	0019a013 	andseq	sl, r9, r3, lsl r0
    cea8:	00089508 	andeq	r9, r8, r8, lsl #10
    ceac:	00058d00 	andeq	r8, r5, r0, lsl #26
    ceb0:	50011400 	andpl	r1, r1, r0, lsl #8
    ceb4:	2edc0305 	cdpcs	3, 13, cr0, cr12, cr5, {0}
    ceb8:	13000800 	movwne	r0, #2048	; 0x800
    cebc:	080019a8 	stmdaeq	r0, {r3, r5, r7, r8, fp, ip}
    cec0:	00000895 	muleq	r0, r5, r8
    cec4:	000005a4 	andeq	r0, r0, r4, lsr #11
    cec8:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    cecc:	002ef003 	eoreq	pc, lr, r3
    ced0:	b0130008 	andslt	r0, r3, r8
    ced4:	95080019 	strls	r0, [r8, #-25]	; 0xffffffe7
    ced8:	bb000008 	bllt	cf00 <_Min_Heap_Size+0xc700>
    cedc:	14000005 	strne	r0, [r0], #-5
    cee0:	03055001 	movweq	r5, #20481	; 0x5001
    cee4:	08002f04 	stmdaeq	r0, {r2, r8, r9, sl, fp, sp}
    cee8:	19b81300 	ldmibne	r8!, {r8, r9, ip}
    ceec:	08950800 	ldmeq	r5, {fp}
    cef0:	05d20000 	ldrbeq	r0, [r2]
    cef4:	01140000 	tsteq	r4, r0
    cef8:	18030550 	stmdane	r3, {r4, r6, r8, sl}
    cefc:	0008002f 	andeq	r0, r8, pc, lsr #32
    cf00:	0019c013 	andseq	ip, r9, r3, lsl r0
    cf04:	00089508 	andeq	r9, r8, r8, lsl #10
    cf08:	0005e900 	andeq	lr, r5, r0, lsl #18
    cf0c:	50011400 	andpl	r1, r1, r0, lsl #8
    cf10:	2f2c0305 	svccs	0x002c0305
    cf14:	13000800 	movwne	r0, #2048	; 0x800
    cf18:	080019c8 	stmdaeq	r0, {r3, r6, r7, r8, fp, ip}
    cf1c:	00000895 	muleq	r0, r5, r8
    cf20:	00000600 	andeq	r0, r0, r0, lsl #12
    cf24:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    cf28:	002f4003 	eoreq	r4, pc, r3
    cf2c:	ce130008 	cdpgt	0, 1, cr0, cr3, cr8, {0}
    cf30:	88080019 	stmdahi	r8, {r0, r3, r4}
    cf34:	14000008 	strne	r0, [r0], #-8
    cf38:	14000006 	strne	r0, [r0], #-6
    cf3c:	77025001 	strvc	r5, [r2, -r1]
    cf40:	d4130000 	ldrle	r0, [r3], #-0
    cf44:	b2080019 	andlt	r0, r8, #25
    cf48:	28000006 	stmdacs	r0, {r1, r2}
    cf4c:	14000006 	strne	r0, [r0], #-6
    cf50:	76025001 	strvc	r5, [r2], -r1
    cf54:	e2130000 	ands	r0, r3, #0
    cf58:	cb080019 	blgt	20cfc4 <_Min_Heap_Size+0x20c7c4>
    cf5c:	4c000002 	stcmi	0, cr0, [r0], {2}
    cf60:	14000006 	strne	r0, [r0], #-6
    cf64:	03055001 	movweq	r5, #20481	; 0x5001
    cf68:	200000dc 	ldrdcs	r0, [r0], -ip
    cf6c:	02510114 	subseq	r0, r1, #20, 2
    cf70:	01144008 	tsteq	r4, r8
    cf74:	c0750352 	rsbsgt	r0, r5, r2, asr r3
    cf78:	ea130000 	b	4ccf80 <_Min_Heap_Size+0x4cc780>
    cf7c:	95080019 	strls	r0, [r8, #-25]	; 0xffffffe7
    cf80:	63000008 	movwvs	r0, #8
    cf84:	14000006 	strne	r0, [r0], #-6
    cf88:	03055001 	movweq	r5, #20481	; 0x5001
    cf8c:	08002f54 	stmdaeq	r0, {r2, r4, r6, r8, r9, sl, fp, sp}
    cf90:	19f21300 	ldmibne	r2!, {r8, r9, ip}^
    cf94:	08950800 	ldmeq	r5, {fp}
    cf98:	067a0000 	ldrbteq	r0, [sl], -r0
    cf9c:	01140000 	tsteq	r4, r0
    cfa0:	64030550 	strvs	r0, [r3], #-1360	; 0xfffffab0
    cfa4:	0008002f 	andeq	r0, r8, pc, lsr #32
    cfa8:	001a0213 	andseq	r0, sl, r3, lsl r2
    cfac:	00089508 	andeq	r9, r8, r8, lsl #10
    cfb0:	00069100 	andeq	r9, r6, r0, lsl #2
    cfb4:	50011400 	andpl	r1, r1, r0, lsl #8
    cfb8:	2f640305 	svccs	0x00640305
    cfbc:	19000800 	stmdbne	r0, {fp}
    cfc0:	08001a0e 	stmdaeq	r0, {r1, r2, r3, r9, fp, ip}
    cfc4:	00000888 	andeq	r0, r0, r8, lsl #17
    cfc8:	02500114 	subseq	r0, r0, #20, 2
    cfcc:	00000077 	andeq	r0, r0, r7, ror r0
    cfd0:	0000801a 	andeq	r8, r0, sl, lsl r0
    cfd4:	0006b200 	andeq	fp, r6, r0, lsl #4
    cfd8:	00801b00 	addeq	r1, r0, r0, lsl #22
    cfdc:	003f0000 	eorseq	r0, pc, r0
    cfe0:	0028891c 	eoreq	r8, r8, ip, lsl r9
    cfe4:	0d990100 	ldfeqs	f0, [r9]
    cfe8:	00180801 	andseq	r0, r8, r1, lsl #16
    cfec:	00182008 	andseq	r2, r8, r8
    cff0:	00841b08 	addeq	r1, r4, r8, lsl #22
    cff4:	07230100 	streq	r0, [r3, -r0, lsl #2]!
    cff8:	8e100000 	cdphi	0, 1, cr0, cr0, cr0, {0}
    cffc:	01000028 	tsteq	r0, r8, lsr #32
    d000:	00802a99 	umulleq	r2, r0, r9, sl
    d004:	84430000 	strbhi	r0, [r3], #-0
    d008:	843b0000 	ldrthi	r0, [fp], #-0
    d00c:	011d0000 	tsteq	sp, r0
    d010:	00002883 	andeq	r2, r0, r3, lsl #17
    d014:	01119c01 	tsteq	r1, r1, lsl #24
    d018:	0006f501 	andeq	pc, r6, r1, lsl #10
    d01c:	00801e00 	addeq	r1, r0, r0, lsl #28
    d020:	13000000 	movwne	r0, #0
    d024:	08001814 	stmdaeq	r0, {r2, r4, fp, ip}
    d028:	00000895 	muleq	r0, r5, r8
    d02c:	00000712 	andeq	r0, r0, r2, lsl r7
    d030:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    d034:	002d6003 	eoreq	r6, sp, r3
    d038:	51011408 	tstpl	r1, r8, lsl #8
    d03c:	00007402 	andeq	r7, r0, r2, lsl #8
    d040:	00181a19 	andseq	r1, r8, r9, lsl sl
    d044:	0008a308 	andeq	sl, r8, r8, lsl #6
    d048:	50011400 	andpl	r1, r1, r0, lsl #8
    d04c:	00007402 	andeq	r7, r0, r2, lsl #8
    d050:	27241f00 	strcs	r1, [r4, -r0, lsl #30]!
    d054:	8a010000 	bhi	4d05c <_Min_Heap_Size+0x4c85c>
    d058:	077d010d 	ldrbeq	r0, [sp, -sp, lsl #2]!
    d05c:	17d00000 	ldrbne	r0, [r0, r0]
    d060:	18060800 	stmdane	r6, {fp}
    d064:	7d020800 	stcvc	8, cr0, [r2, #-0]
    d068:	077d0100 	ldrbeq	r0, [sp, -r0, lsl #2]!
    d06c:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    d070:	0100736e 	tsteq	r0, lr, ror #6
    d074:	00802e8a 	addeq	r2, r0, sl, lsl #29
    d078:	847e0000 	ldrbthi	r0, [lr], #-0
    d07c:	847a0000 	ldrbthi	r0, [sl], #-0
    d080:	de110000 	cdple	0, 1, cr0, cr1, cr0, {0}
    d084:	01000027 	tsteq	r0, r7, lsr #32
    d088:	00a60e8e 	adceq	r0, r6, lr, lsl #29
    d08c:	84a10000 	strthi	r0, [r1], #0
    d090:	849f0000 	ldrhi	r0, [pc], #0	; d098 <_Min_Heap_Size+0xc898>
    d094:	e6110000 	ldr	r0, [r1], -r0
    d098:	01000027 	tsteq	r0, r7, lsr #32
    d09c:	00a60e8f 	adceq	r0, r6, pc, lsl #29
    d0a0:	84c80000 	strbhi	r0, [r8], #0
    d0a4:	84b40000 	ldrthi	r0, [r4], #0
    d0a8:	02000000 	andeq	r0, r0, #0
    d0ac:	28350201 	ldmdacs	r5!, {r0, r9}
    d0b0:	9b210000 	blls	84d0b8 <_Min_Heap_Size+0x84c8b8>
    d0b4:	01000027 	tsteq	r0, r7, lsr #32
    d0b8:	8001157f 	andhi	r1, r1, pc, ror r5
    d0bc:	a4000000 	strge	r0, [r0], #-0
    d0c0:	d0080017 	andle	r0, r8, r7, lsl r0
    d0c4:	6b080017 	blvs	20d128 <_Min_Heap_Size+0x20c928>
    d0c8:	01000085 	smlabbeq	r0, r5, r0, r0
    d0cc:	000007f5 	strdeq	r0, [r0], -r5
    d0d0:	00637020 	rsbeq	r7, r3, r0, lsr #32
    d0d4:	80347f01 	eorshi	r7, r4, r1, lsl #30
    d0d8:	9b000000 	blls	d0e0 <_Min_Heap_Size+0xc8e0>
    d0dc:	97000085 	strls	r0, [r0, -r5, lsl #1]
    d0e0:	18000085 	stmdane	r0, {r0, r2, r7}
    d0e4:	0000218f 	andeq	r2, r0, pc, lsl #3
    d0e8:	f50e8001 			; <UNDEFINED> instruction: 0xf50e8001
    d0ec:	02000007 	andeq	r0, r0, #7
    d0f0:	a6117c91 			; <UNDEFINED> instruction: 0xa6117c91
    d0f4:	01000027 	tsteq	r0, r7, lsr #32
    d0f8:	00801281 	addeq	r1, r0, r1, lsl #5
    d0fc:	85c20000 	strbhi	r0, [r2]
    d100:	85bc0000 	ldrhi	r0, [ip, #0]!
    d104:	aa220000 	bge	88d10c <_Min_Heap_Size+0x88c90c>
    d108:	c0080017 	andgt	r0, r8, r7, lsl r0
    d10c:	12080017 	andne	r0, r8, #23
    d110:	82010069 	andhi	r0, r1, #105	; 0x69
    d114:	0000790e 	andeq	r7, r0, lr, lsl #18
    d118:	0085f700 	addeq	pc, r5, r0, lsl #14
    d11c:	0085f300 	addeq	pc, r5, r0, lsl #6
    d120:	1a000000 	bne	d128 <_Min_Heap_Size+0xc928>
    d124:	000000a6 	andeq	r0, r0, r6, lsr #1
    d128:	00000805 	andeq	r0, r0, r5, lsl #16
    d12c:	0000801b 	andeq	r8, r0, fp, lsl r0
    d130:	17000100 	strne	r0, [r0, -r0, lsl #2]
    d134:	00007001 	andeq	r7, r0, r1
    d138:	06740100 	ldrbteq	r0, [r4], -r0, lsl #2
    d13c:	00182001 	andseq	r2, r8, r1
    d140:	00187008 	andseq	r7, r8, r8
    d144:	00861608 	addeq	r1, r6, r8, lsl #12
    d148:	08670100 	stmdaeq	r7!, {r8}^
    d14c:	36130000 	ldrcc	r0, [r3], -r0
    d150:	95080018 	strls	r0, [r8, #-24]	; 0xffffffe8
    d154:	37000008 	strcc	r0, [r0, -r8]
    d158:	14000008 	strne	r0, [r0], #-8
    d15c:	03055001 	movweq	r5, #20481	; 0x5001
    d160:	08002d78 	stmdaeq	r0, {r3, r4, r5, r6, r8, sl, fp, sp}
    d164:	18421300 	stmdane	r2, {r8, r9, ip}^
    d168:	08950800 	ldmeq	r5, {fp}
    d16c:	084e0000 	stmdaeq	lr, {}^	; <UNPREDICTABLE>
    d170:	01140000 	tsteq	r4, r0
    d174:	9c030550 	cfstr32ls	mvfx0, [r3], {80}	; 0x50
    d178:	0008002d 	andeq	r0, r8, sp, lsr #32
    d17c:	00184a19 	andseq	r4, r8, r9, lsl sl
    d180:	00089508 	andeq	r9, r8, r8, lsl #10
    d184:	50011400 	andpl	r1, r1, r0, lsl #8
    d188:	2dc00305 	stclcs	3, cr0, [r0, #20]
    d18c:	01140800 	tsteq	r4, r0, lsl #16
    d190:	00310151 	eorseq	r0, r1, r1, asr r1
    d194:	28992300 	ldmcs	r9, {r8, r9, sp}
    d198:	63020000 	movwvs	r0, #8192	; 0x2000
    d19c:	b2011f04 	andlt	r1, r1, #4, 30
    d1a0:	03000000 	movweq	r0, #0
    d1a4:	00000888 	andeq	r0, r0, r8, lsl #17
    d1a8:	0019a524 	andseq	sl, r9, r4, lsr #10
    d1ac:	04650200 	strbteq	r0, [r5], #-512	; 0xfffffe00
    d1b0:	0000b20c 	andeq	fp, r0, ip, lsl #4
    d1b4:	01250000 			; <UNDEFINED> instruction: 0x01250000
    d1b8:	00022801 	andeq	r2, r2, r1, lsl #16
    d1bc:	00021e00 	andeq	r1, r2, r0, lsl #28
    d1c0:	26000800 	strcs	r0, [r0], -r0, lsl #16
    d1c4:	00000101 	andeq	r0, r0, r1, lsl #2
    d1c8:	00000000 	andeq	r0, r0, r0
    d1cc:	c8070000 	stmdagt	r7, {}	; <UNPREDICTABLE>
    d1d0:	01012605 	tsteq	r1, r5, lsl #12
    d1d4:	00002883 	andeq	r2, r0, r3, lsl #17
    d1d8:	00002883 	andeq	r2, r0, r3, lsl #17
    d1dc:	00119c01 	andseq	r9, r1, r1, lsl #24
    d1e0:	000001be 			; <UNDEFINED> instruction: 0x000001be
    d1e4:	1f3f0002 	svcne	0x003f0002
    d1e8:	01040000 	mrseq	r0, (UNDEF: 4)
    d1ec:	00000588 	andeq	r0, r0, r8, lsl #11
    d1f0:	0028bd0c 	eoreq	fp, r8, ip, lsl #26
    d1f4:	00086d00 	andeq	r6, r8, r0, lsl #26
    d1f8:	00078800 	andeq	r8, r7, r0, lsl #16
	...
    d204:	0095f800 	addseq	pc, r5, r0, lsl #16
    d208:	06010200 	streq	r0, [r1], -r0, lsl #4
    d20c:	00000576 	andeq	r0, r0, r6, ror r5
    d210:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    d214:	02000005 	andeq	r0, r0, #5
    d218:	03fd0502 	mvnseq	r0, #8388608	; 0x800000
    d21c:	02020000 	andeq	r0, r2, #0
    d220:	00078f07 	andeq	r8, r7, r7, lsl #30
    d224:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    d228:	000002ec 	andeq	r0, r0, ip, ror #5
    d22c:	b3070402 	movwlt	r0, #29698	; 0x7402
    d230:	02000000 	andeq	r0, r0, #0
    d234:	02e70508 	rsceq	r0, r7, #8, 10	; 0x2000000
    d238:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    d23c:	0000ae07 	andeq	sl, r0, r7, lsl #28
    d240:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    d244:	00746e69 	rsbseq	r6, r4, r9, ror #28
    d248:	b8070402 	stmdalt	r7, {r1, sl}
    d24c:	02000000 	andeq	r0, r0, #0
    d250:	06bf0408 	ldrteq	r0, [pc], r8, lsl #8
    d254:	01020000 	mrseq	r0, (UNDEF: 2)
    d258:	00057d08 	andeq	r7, r5, r8, lsl #26
    d25c:	83010400 	movwhi	r0, #5120	; 0x1400
    d260:	01000028 	tsteq	r0, r8, lsr #32
    d264:	7001060f 	andvc	r0, r1, pc, lsl #12
    d268:	f808001a 			; <UNDEFINED> instruction: 0xf808001a
    d26c:	3608001a 			; <UNDEFINED> instruction: 0x3608001a
    d270:	01000086 	smlabbeq	r0, r6, r0, r0
    d274:	000001a6 	andeq	r0, r0, r6, lsr #3
    d278:	00288e05 	eoreq	r8, r8, r5, lsl #28
    d27c:	290f0100 	stmdbcs	pc, {r8}	; <UNPREDICTABLE>
    d280:	00000068 	andeq	r0, r0, r8, rrx
    d284:	0000865a 	andeq	r8, r0, sl, asr r6
    d288:	00008656 	andeq	r8, r0, r6, asr r6
    d28c:	001a7a06 	andseq	r7, sl, r6, lsl #20
    d290:	0001a608 	andeq	sl, r1, r8, lsl #12
    d294:	0000c300 	andeq	ip, r0, r0, lsl #6
    d298:	50010700 	andpl	r0, r1, r0, lsl #14
    d29c:	2f6c0305 	svccs	0x006c0305
    d2a0:	06000800 	streq	r0, [r0], -r0, lsl #16
    d2a4:	08001a80 	stmdaeq	r0, {r7, r9, fp, ip}
    d2a8:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
    d2ac:	000000da 	ldrdeq	r0, [r0], -sl
    d2b0:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    d2b4:	002f7003 	eoreq	r7, pc, r3
    d2b8:	8c060008 	stchi	0, cr0, [r6], {8}
    d2bc:	a608001a 			; <UNDEFINED> instruction: 0xa608001a
    d2c0:	f1000001 	cps	#1
    d2c4:	07000000 	streq	r0, [r0, -r0]
    d2c8:	03055001 	movweq	r5, #20481	; 0x5001
    d2cc:	08002f8c 	stmdaeq	r0, {r2, r3, r7, r8, r9, sl, fp, sp}
    d2d0:	1a920600 	bne	fe48ead8 <_estack+0xde48d8a0>
    d2d4:	01b30800 			; <UNDEFINED> instruction: 0x01b30800
    d2d8:	01080000 	mrseq	r0, (UNDEF: 8)
    d2dc:	01070000 	mrseq	r0, (UNDEF: 7)
    d2e0:	c4030550 	strgt	r0, [r3], #-1360	; 0xfffffab0
    d2e4:	0008002f 	andeq	r0, r8, pc, lsr #32
    d2e8:	001a9e06 	andseq	r9, sl, r6, lsl #28
    d2ec:	0001a608 	andeq	sl, r1, r8, lsl #12
    d2f0:	00011f00 	andeq	r1, r1, r0, lsl #30
    d2f4:	50010700 	andpl	r0, r1, r0, lsl #14
    d2f8:	2fe00305 	svccs	0x00e00305
    d2fc:	06000800 	streq	r0, [r0], -r0, lsl #16
    d300:	08001aa4 	stmdaeq	r0, {r2, r5, r7, r9, fp, ip}
    d304:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
    d308:	00000136 	andeq	r0, r0, r6, lsr r1
    d30c:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    d310:	00301803 	eorseq	r1, r0, r3, lsl #16
    d314:	b0060008 	andlt	r0, r6, r8
    d318:	a608001a 			; <UNDEFINED> instruction: 0xa608001a
    d31c:	4d000001 	stcmi	0, cr0, [r0, #-4]
    d320:	07000001 	streq	r0, [r0, -r1]
    d324:	03055001 	movweq	r5, #20481	; 0x5001
    d328:	08003034 	stmdaeq	r0, {r2, r4, r5, ip, sp}
    d32c:	1ab60600 	bne	fed8eb34 <_estack+0xded8d8fc>
    d330:	01a60800 			; <UNDEFINED> instruction: 0x01a60800
    d334:	01640000 	cmneq	r4, r0
    d338:	01070000 	mrseq	r0, (UNDEF: 7)
    d33c:	6c030550 	cfstr32vs	mvfx0, [r3], {80}	; 0x50
    d340:	0008002f 	andeq	r0, r8, pc, lsr #32
    d344:	001abe06 	andseq	fp, sl, r6, lsl #28
    d348:	0001a608 	andeq	sl, r1, r8, lsl #12
    d34c:	00017b00 	andeq	r7, r1, r0, lsl #22
    d350:	50010700 	andpl	r0, r1, r0, lsl #14
    d354:	2fa80305 	svccs	0x00a80305
    d358:	06000800 	streq	r0, [r0], -r0, lsl #16
    d35c:	08001ac6 	stmdaeq	r0, {r1, r2, r6, r7, r9, fp, ip}
    d360:	000001a6 	andeq	r0, r0, r6, lsr #3
    d364:	00000192 	muleq	r0, r2, r1
    d368:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    d36c:	002ffc03 	eoreq	pc, pc, r3, lsl #24
    d370:	ce080008 	cdpgt	0, 0, cr0, cr8, cr8, {0}
    d374:	a608001a 			; <UNDEFINED> instruction: 0xa608001a
    d378:	07000001 	streq	r0, [r0, -r1]
    d37c:	03055001 	movweq	r5, #20481	; 0x5001
    d380:	08003050 	stmdaeq	r0, {r4, r6, ip, sp}
    d384:	01090000 	mrseq	r0, (UNDEF: 9)
    d388:	00022801 	andeq	r2, r2, r1, lsl #16
    d38c:	00021e00 	andeq	r1, r2, r0, lsl #28
    d390:	0a000200 	beq	db98 <_Min_Heap_Size+0xd398>
    d394:	00000101 	andeq	r0, r0, r1, lsl #2
    d398:	00000000 	andeq	r0, r0, r0
    d39c:	c8030000 	stmdagt	r3, {}	; <UNPREDICTABLE>
    d3a0:	001e0005 	andseq	r0, lr, r5
    d3a4:	00020000 	andeq	r0, r2, r0
    d3a8:	00001fe5 	andeq	r1, r0, r5, ror #31
    d3ac:	97070104 	strls	r0, [r7, -r4, lsl #2]
    d3b0:	07980000 	ldreq	r0, [r8, r0]
    d3b4:	28f40000 	ldmcs	r4!, {}^	; <UNPREDICTABLE>
    d3b8:	086d0000 	stmdaeq	sp!, {}^	; <UNPREDICTABLE>
    d3bc:	29140000 	ldmdbcs	r4, {}	; <UNPREDICTABLE>
    d3c0:	80010000 	andhi	r0, r1, r0
    d3c4:	00000022 	andeq	r0, r0, r2, lsr #32
    d3c8:	1ff70002 	svcne	0x00f70002
    d3cc:	01040000 	mrseq	r0, (UNDEF: 4)
    d3d0:	00009787 	andeq	r9, r0, r7, lsl #15
    d3d4:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
    d3d8:	08000218 	stmdaeq	r0, {r3, r4, r9}
    d3dc:	00002922 	andeq	r2, r0, r2, lsr #18
    d3e0:	0000086d 	andeq	r0, r0, sp, ror #16
    d3e4:	00002914 	andeq	r2, r0, r4, lsl r9
    d3e8:	Address 0x0000d3e8 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
  errno = ENOMEM;
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
}
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
      10:	00061001 	andeq	r1, r6, r1
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	0b3e0b0b 	bleq	f82c4c <_Min_Heap_Size+0xf8244c>
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	03001603 	movweq	r1, #1539	; 0x603
      24:	3b0b3a0e 	blcc	2ce864 <_Min_Heap_Size+0x2ce064>
}
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
      30:	0b0b0024 	bleq	2c00c8 <_Min_Heap_Size+0x2bf8c8>
    if (status != HAL_OK)
      34:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      uwTickFreq = prevTickFreq;
      38:	35050000 	strcc	r0, [r5, #-0]
      3c:	00134900 	andseq	r4, r3, r0, lsl #18
      40:	00260600 	eoreq	r0, r6, r0, lsl #12
      44:	00001349 	andeq	r1, r0, r9, asr #6
      if (pllsource != 0)
      48:	0b011307 	bleq	44c6c <_Min_Heap_Size+0x4446c>
      4c:	3b0b3a0b 	blcc	2ce880 <_Min_Heap_Size+0x2ce080>
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	010b3905 	tsteq	fp, r5, lsl #18
      54:	08000013 	stmdaeq	r0, {r0, r1, r4}
      58:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
      5c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	13490b39 	movtne	r0, #39737	; 0x9b39
      64:	00000a38 	andeq	r0, r0, r8, lsr sl
      68:	03000d09 	movweq	r0, #3337	; 0xd09
      SystemCoreClock = pllvco/pllp;
      6c:	3b0b3a08 	blcc	2ce894 <_Min_Heap_Size+0x2ce094>
      70:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
      break;
      74:	000a3813 	andeq	r3, sl, r3, lsl r8
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	01010a00 	tsteq	r1, r0, lsl #20
      7c:	13011349 	movwne	r1, #4937	; 0x1349
      80:	210b0000 	mrscs	r0, (UNDEF: 11)
      84:	2f134900 	svccs	0x00134900
      88:	0c00000b 	stceq	0, cr0, [r0], {11}
      8c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
      90:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      94:	13490b39 	movtne	r0, #39737	; 0x9b39
      98:	040d0000 	streq	r0, [sp], #-0
      9c:	0b0b3e01 	bleq	2cf8a8 <_Min_Heap_Size+0x2cf0a8>
      a0:	3a13490b 	bcc	4d24d4 <_Min_Heap_Size+0x4d1cd4>
      a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      a8:	0013010b 	andseq	r0, r3, fp, lsl #2
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	00280e00 	eoreq	r0, r8, r0, lsl #28
      b0:	0b1c0e03 	bleq	7038c4 <_Min_Heap_Size+0x7030c4>
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	130f0000 	movwne	r0, #61440	; 0xf000
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	3a0b0b01 	bcc	2c2cc4 <_Min_Heap_Size+0x2c24c4>
      bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	0013010b 	andseq	r0, r3, fp, lsl #2
      c4:	000d1000 	andeq	r1, sp, r0
      c8:	0b3a0e03 	bleq	e838dc <_Min_Heap_Size+0xe830dc>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	0b390b3b 	bleq	e42dc0 <_Min_Heap_Size+0xe425c0>
      d0:	0a381349 	beq	e04dfc <_Min_Heap_Size+0xe045fc>
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	0d110000 	ldceq	0, cr0, [r1, #-0]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	3a080300 	bcc	200ce0 <_Min_Heap_Size+0x2004e0>
      dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      e0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    if (huart->hdmarx != NULL)
      e4:	1200000a 	andne	r0, r0, #10
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	0b3a0b0b 	bleq	e82d20 <_Min_Heap_Size+0xe82520>
      f0:	0b390b3b 	bleq	e42de4 <_Min_Heap_Size+0xe425e4>
    huart->TxXferCount = 0x00U;
      f4:	00001301 	andeq	r1, r0, r1, lsl #6
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	0b000f13 	bleq	3d4c <_Min_Heap_Size+0x354c>
    huart->gState  = HAL_UART_STATE_READY;
      fc:	0013490b 	andseq	r4, r3, fp, lsl #18
    huart->RxState = HAL_UART_STATE_READY;
     100:	000f1400 	andeq	r1, pc, r0, lsl #8
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	00000b0b 	andeq	r0, r0, fp, lsl #22
    HAL_UART_AbortCpltCallback(huart);
     108:	27011515 	smladcs	r1, r5, r5, r1
     10c:	0013010c 	andseq	r0, r3, ip, lsl #2
  uint32_t AbortCplt = 0x01U;
     110:	00051600 	andeq	r1, r5, r0, lsl #12
  if (AbortCplt == 0x01U)
     114:	00001349 	andeq	r1, r0, r9, asr #6
}
     118:	03003417 	movweq	r3, #1047	; 0x417
     11c:	3b0b3a0e 	blcc	2ce95c <_Min_Heap_Size+0x2ce15c>
     120:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     124:	3c0c3f13 	stccc	15, cr3, [ip], {19}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	1800000c 	stmdane	r0, {r2, r3}
     12c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 7c <_Min_Heap_Size-0x784>
     130:	0b3a0e03 	bleq	e83944 <_Min_Heap_Size+0xe83144>
     134:	0b390b3b 	bleq	e42e28 <_Min_Heap_Size+0xe42628>
     138:	01110c27 	tsteq	r1, r7, lsr #24
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	06400112 			; <UNDEFINED> instruction: 0x06400112
     140:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     144:	19000013 	stmdbne	r0, {r0, r1, r4}
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     14c:	0b3b0b3a 	bleq	ec2e3c <_Min_Heap_Size+0xec263c>
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	13490b39 	movtne	r0, #39737	; 0x9b39
     154:	00000a02 	andeq	r0, r0, r2, lsl #20
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	11010b1a 	tstne	r1, sl, lsl fp
     15c:	01011201 	tsteq	r1, r1, lsl #4
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	1b000013 	blne	1b4 <_Min_Heap_Size-0x64c>
     164:	01018289 	smlabbeq	r1, r9, r2, r8
     168:	13310111 	teqne	r1, #1073741828	; 0x40000004
     16c:	00001301 	andeq	r1, r0, r1, lsl #6
     170:	01828a1c 	orreq	r8, r2, ip, lsl sl
}
     174:	910a0200 	mrsls	r0, R10_fiq
     178:	00000a42 	andeq	r0, r0, r2, asr #20
     17c:	0182891d 	orreq	r8, r2, sp, lsl r9
     180:	31011100 	mrscc	r1, (UNDEF: 17)
}
     184:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	0c3f012e 	ldfeqs	f0, [pc], #-184	; d8 <_Min_Heap_Size-0x728>
     18c:	0b3a0e03 	bleq	e839a0 <_Min_Heap_Size+0xe831a0>
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	0b390b3b 	bleq	e42e84 <_Min_Heap_Size+0xe42684>
     194:	13490c27 	movtne	r0, #39975	; 0x9c27
     198:	01120111 	tsteq	r2, r1, lsl r1
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     1a0:	0013010c 	andseq	r0, r3, ip, lsl #2
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	82891f00 	addhi	r1, r9, #0, 30
     1a8:	01110101 	tsteq	r1, r1, lsl #2
     1ac:	00001331 	andeq	r1, r0, r1, lsr r3
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	03003420 	movweq	r3, #1056	; 0x420
     1b4:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	000a020c 	andeq	r0, sl, ip, lsl #4
     1bc:	00342100 	eorseq	r2, r4, r0, lsl #2
     1c0:	0b3a0e03 	bleq	e839d4 <_Min_Heap_Size+0xe831d4>
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	0b390b3b 	bleq	e42eb8 <_Min_Heap_Size+0xe426b8>
     1c8:	06021349 	streq	r1, [r2], -r9, asr #6
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     1d0:	00342200 	eorseq	r2, r4, r0, lsl #4
     1d4:	0b3a0803 	bleq	e821e8 <_Min_Heap_Size+0xe819e8>
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	0b390b3b 	bleq	e42ecc <_Min_Heap_Size+0xe426cc>
     1dc:	0b1c1349 	bleq	704f08 <_Min_Heap_Size+0x704708>
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	05230000 	streq	r0, [r3, #-0]!
     1e4:	3a080300 	bcc	200dec <_Min_Heap_Size+0x2005ec>
     1e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     1f0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	2e240000 	cdpcs	0, 2, cr0, cr4, cr0, {0}
     1f8:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     1fc:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	0b3a0e03 	bleq	e83a14 <_Min_Heap_Size+0xe83214>
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	00000b3b 	andeq	r0, r0, fp, lsr fp
     208:	3f002e25 	svccc	0x00002e25
     20c:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     214:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	00000b39 	andeq	r0, r0, r9, lsr fp
     21c:	3f002e26 	svccc	0x00002e26
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     228:	0b3b0b3a 	bleq	ec2f18 <_Min_Heap_Size+0xec2718>
  tmp = hdma->Instance->FCR;
     22c:	00000b39 	andeq	r0, r0, r9, lsr fp
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	01110100 	tsteq	r1, r0, lsl #2
  tmp |= hdma->Init.FIFOMode;
     234:	0b130e25 	bleq	4c3ad0 <_Min_Heap_Size+0x4c32d0>
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    tmp |= hdma->Init.FIFOThreshold;
     23c:	01110655 	tsteq	r1, r5, asr r6
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	06100152 			; <UNDEFINED> instruction: 0x06100152
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	24020000 	strcs	r0, [r2], #-0
     248:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  hdma->Instance->FCR = tmp;
     24c:	0008030b 	andeq	r0, r8, fp, lsl #6
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	00160300 	andseq	r0, r6, r0, lsl #6
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	0b3a0e03 	bleq	e83a68 <_Min_Heap_Size+0xe83268>
     258:	0b390b3b 	bleq	e42f4c <_Min_Heap_Size+0xe4274c>
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00001349 	andeq	r1, r0, r9, asr #6
  hdma->State = HAL_DMA_STATE_READY;
     260:	0b002404 	bleq	9278 <_Min_Heap_Size+0x8a78>
     264:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  return HAL_OK;
     268:	0500000e 	streq	r0, [r0, #-14]
     26c:	0b0b000f 	bleq	2c02b0 <_Min_Heap_Size+0x2bfab0>
     270:	26060000 	strcs	r0, [r6], -r0
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	00134900 	andseq	r4, r3, r0, lsl #18
     278:	00340700 	eorseq	r0, r4, r0, lsl #14
     27c:	0b3a0e03 	bleq	e83a90 <_Min_Heap_Size+0xe83290>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	0b390b3b 	bleq	e42f74 <_Min_Heap_Size+0xe42774>
        hdma->State = HAL_DMA_STATE_READY;
     284:	0a021349 	beq	84fb0 <_Min_Heap_Size+0x847b0>
        return HAL_ERROR; 
     288:	0f080000 	svceq	0x00080000
    return HAL_ERROR;
     28c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	09000013 	stmdbeq	r0, {r0, r1, r4}
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1e4 <_Min_Heap_Size-0x61c>
     298:	0b3a0e03 	bleq	e83aac <_Min_Heap_Size+0xe832ac>
      tickstart = HAL_GetTick();
     29c:	0b390b3b 	bleq	e42f90 <_Min_Heap_Size+0xe42790>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	13490c27 	movtne	r0, #39975	; 0x9c27
     2a4:	01120111 	tsteq	r2, r1, lsl r1
     2a8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	0013010c 	andseq	r0, r3, ip, lsl #2
     2b0:	00050a00 	andeq	r0, r5, r0, lsl #20
     2b4:	0b3a0e03 	bleq	e83ac8 <_Min_Heap_Size+0xe832c8>
          return HAL_TIMEOUT;
     2b8:	0b390b3b 	bleq	e42fac <_Min_Heap_Size+0xe427ac>
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	06021349 	streq	r1, [r2], -r9, asr #6
     2c0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     2c4:	00340b00 	eorseq	r0, r4, r0, lsl #22
    FlagStatus       pwrclkchanged = RESET;
     2c8:	0b3a0e03 	bleq	e83adc <_Min_Heap_Size+0xe832dc>
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	0b390b3b 	bleq	e42fc0 <_Min_Heap_Size+0xe427c0>
     2d0:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1b4 <_Min_Heap_Size-0x64c>
     2d4:	00000c3c 	andeq	r0, r0, ip, lsr ip
      tickstart = HAL_GetTick();
     2d8:	0300340c 	movweq	r3, #1036	; 0x40c
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	3b0b3a0e 	blcc	2ceb1c <_Min_Heap_Size+0x2ce31c>
     2e0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     2e4:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     2ec:	0b3b0b3a 	bleq	ec2fdc <_Min_Heap_Size+0xec27dc>
          return HAL_TIMEOUT;
     2f0:	13490b39 	movtne	r0, #39737	; 0x9b39
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     2f8:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
     2fc:	00018289 	andeq	r8, r1, r9, lsl #5
     300:	13310111 	teqne	r1, #1073741828	; 0x40000004
     304:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
     308:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     30c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     310:	0b3a0e03 	bleq	e83b24 <_Min_Heap_Size+0xe83324>
      tickstart = HAL_GetTick();
     314:	0b390b3b 	bleq	e43008 <_Min_Heap_Size+0xe42808>
     318:	01000000 	mrseq	r0, (UNDEF: 0)
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     320:	0e030b13 	vmoveq.32	d3[0], r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
     328:	01520111 	cmpeq	r2, r1, lsl r1
     32c:	00000610 	andeq	r0, r0, r0, lsl r6
     330:	0b002402 	bleq	9340 <_Min_Heap_Size+0x8b40>
          return HAL_TIMEOUT;
     334:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    if(pwrclkchanged == SET)
     338:	0300000e 	movweq	r0, #14
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	0b3b0b3a 	bleq	ec3030 <_Min_Heap_Size+0xec2830>
     344:	13490b39 	movtne	r0, #39737	; 0x9b39
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	24040000 	strcs	r0, [r4], #-0
     34c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     350:	0008030b 	andeq	r0, r8, fp, lsl #6
     354:	000f0500 	andeq	r0, pc, r0, lsl #10
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	13490b0b 	movtne	r0, #39691	; 0x9b0b
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	13060000 	movwne	r0, #24576	; 0x6000
     360:	0b0e0301 	bleq	380f6c <_Min_Heap_Size+0x38076c>
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	3b0b3a0b 	blcc	2ceb98 <_Min_Heap_Size+0x2ce398>
     368:	010b390b 	tsteq	fp, fp, lsl #18
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	07000013 	smladeq	r0, r3, r0, r0
     370:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     374:	0b3b0b3a 	bleq	ec3064 <_Min_Heap_Size+0xec2864>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	13490b39 	movtne	r0, #39737	; 0x9b39
     37c:	00000a38 	andeq	r0, r0, r8, lsr sl
     380:	49010108 	stmdbmi	r1, {r3, r8}
     384:	00130113 	andseq	r0, r3, r3, lsl r1
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	00210900 	eoreq	r0, r1, r0, lsl #18
     38c:	0b2f1349 	bleq	bc50b8 <_Min_Heap_Size+0xbc48b8>
        __HAL_RCC_PLL_DISABLE();
     390:	130a0000 	movwne	r0, #40960	; 0xa000
     394:	0b080301 	bleq	200fa0 <_Min_Heap_Size+0x2007a0>
        tickstart = HAL_GetTick();
     398:	3b0b3a0b 	blcc	2cebcc <_Min_Heap_Size+0x2ce3cc>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	010b390b 	tsteq	fp, fp, lsl #18
     3a0:	0b000013 	bleq	3f4 <_Min_Heap_Size-0x40c>
     3a4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	0b3b0b3a 	bleq	ec3098 <_Min_Heap_Size+0xec2898>
     3ac:	13490b39 	movtne	r0, #39737	; 0x9b39
            return HAL_TIMEOUT;
     3b0:	0a020c3f 	beq	834b4 <_Min_Heap_Size+0x82cb4>
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
     3b8:	030c3f01 	movweq	r3, #52993	; 0xcf01
     3bc:	3b0b3a0e 	blcc	2cebfc <_Min_Heap_Size+0x2ce3fc>
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     3c4:	1113490c 	tstne	r3, ip, lsl #18
     3c8:	40011201 	andmi	r1, r1, r1, lsl #4
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     3d0:	00001301 	andeq	r1, r0, r1, lsl #6
     3d4:	0300050d 	movweq	r0, #1293	; 0x50d
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	3b0b3a0e 	blcc	2cec18 <_Min_Heap_Size+0x2ce418>
     3dc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     3e0:	b7060213 	smladlt	r6, r3, r2, r0
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	00000642 	andeq	r0, r0, r2, asr #12
     3e8:	0300050e 	movweq	r0, #1294	; 0x50e
     3ec:	3b0b3a08 	blcc	2cec14 <_Min_Heap_Size+0x2ce414>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     3f4:	b7060213 	smladlt	r6, r3, r2, r0
     3f8:	00000642 	andeq	r0, r0, r2, asr #12
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	0182890f 	orreq	r8, r2, pc, lsl #18
     400:	31011100 	mrscc	r1, (UNDEF: 17)
     404:	10000013 	andne	r0, r0, r3, lsl r0
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 358 <_Min_Heap_Size-0x4a8>
     40c:	0b3a0e03 	bleq	e83c20 <_Min_Heap_Size+0xe83420>
     410:	0b390b3b 	bleq	e43104 <_Min_Heap_Size+0xe42904>
     414:	13490c27 	movtne	r0, #39975	; 0x9c27
     418:	01120111 	tsteq	r2, r1, lsl r1
     41c:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     420:	0013010c 	andseq	r0, r3, ip, lsl #2
     424:	00051100 	andeq	r1, r5, r0, lsl #2
        __HAL_RCC_PLL_ENABLE();
     428:	0b3a0803 	bleq	e8243c <_Min_Heap_Size+0xe81c3c>
     42c:	0b390b3b 	bleq	e43120 <_Min_Heap_Size+0xe42920>
        tickstart = HAL_GetTick();
     430:	0a021349 	beq	8515c <_Min_Heap_Size+0x8495c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	05120000 	ldreq	r0, [r2, #-0]
     438:	3a0e0300 	bcc	381040 <_Min_Heap_Size+0x380840>
     43c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     444:	1300000a 	movwne	r0, #10
            return HAL_TIMEOUT;
     448:	00000018 	andeq	r0, r0, r8, lsl r0
  return HAL_OK;
     44c:	03003414 	movweq	r3, #1044	; 0x414
        __HAL_RCC_PLL_DISABLE();
     450:	3b0b3a0e 	blcc	2cec90 <_Min_Heap_Size+0x2ce490>
     454:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
        tickstart = HAL_GetTick();
     458:	b7060213 	smladlt	r6, r3, r2, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	00000642 	andeq	r0, r0, r2, asr #12
     460:	3f012e15 	svccc	0x00012e15
     464:	3a0e030c 	bcc	38109c <_Min_Heap_Size+0x38089c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     46c:	870c270b 	strhi	r2, [ip, -fp, lsl #14]
            return HAL_TIMEOUT;
     470:	01110c01 	tsteq	r1, r1, lsl #24
  return HAL_OK;
     474:	06400112 			; <UNDEFINED> instruction: 0x06400112
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
        pll_config = RCC->PLLCFGR;
     47c:	16000013 			; <UNDEFINED> instruction: 0x16000013
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	01018289 	smlabbeq	r1, r9, r2, r8
     484:	13310111 	teqne	r1, #1073741828	; 0x40000004
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	8a170000 	bhi	5c0490 <_Min_Heap_Size+0x5bfc90>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	0a42910a 	beq	10a48c0 <_Min_Heap_Size+0x10a40c0>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	030c3f00 	movweq	r3, #52992	; 0xcf00
     49c:	3b0b3a0e 	blcc	2cecdc <_Min_Heap_Size+0x2ce4dc>
     4a0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	1113490c 	tstne	r3, ip, lsl #18
     4a8:	40011201 	andmi	r1, r1, r1, lsl #4
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     4b0:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	030c3f00 	movweq	r3, #52992	; 0xcf00
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	3b0b3a0e 	blcc	2cecf8 <_Min_Heap_Size+0x2ce4f8>
     4bc:	110b390b 	tstne	fp, fp, lsl #18
  return HAL_OK;
     4c0:	40011201 	andmi	r1, r1, r1, lsl #4
}
     4c4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
        return HAL_ERROR;
     4c8:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
        return HAL_ERROR;
     4cc:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
}
     4d0:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
        return HAL_ERROR;
     4d4:	0b3a0e03 	bleq	e83ce8 <_Min_Heap_Size+0xe834e8>
          return HAL_ERROR;
     4d8:	0b390b3b 	bleq	e431cc <_Min_Heap_Size+0xe429cc>
     4dc:	01000000 	mrseq	r0, (UNDEF: 0)
     4e0:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     4e4:	0e030b13 	vmoveq.32	d3[0], r0
     4e8:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
     4ec:	01520111 	cmpeq	r2, r1, lsl r1
     4f0:	00000610 	andeq	r0, r0, r0, lsl r6
     4f4:	0b002402 	bleq	9504 <_Min_Heap_Size+0x8d04>
     4f8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     4fc:	0300000e 	movweq	r0, #14
     500:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     504:	0b3b0b3a 	bleq	ec31f4 <_Min_Heap_Size+0xec29f4>
     508:	13490b39 	movtne	r0, #39737	; 0x9b39
     50c:	24040000 	strcs	r0, [r4], #-0
     510:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     514:	0008030b 	andeq	r0, r8, fp, lsl #6
     518:	00260500 	eoreq	r0, r6, r0, lsl #10
     51c:	00001349 	andeq	r1, r0, r9, asr #6
     520:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
     524:	07000013 	smladeq	r0, r3, r0, r0
     528:	0b0b0113 	bleq	2c097c <_Min_Heap_Size+0x2c017c>
     52c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     530:	13010b39 	movwne	r0, #6969	; 0x1b39
     534:	0d080000 	stceq	0, cr0, [r8, #-0]
     538:	3a080300 	bcc	201140 <_Min_Heap_Size+0x200940>
     53c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     540:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     544:	0900000a 	stmdbeq	r0, {r1, r3}
     548:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     54c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     550:	13490b39 	movtne	r0, #39737	; 0x9b39
     554:	00000a38 	andeq	r0, r0, r8, lsr sl
     558:	0300160a 	movweq	r1, #1546	; 0x60a
     55c:	3b0b3a0e 	blcc	2ced9c <_Min_Heap_Size+0x2ce59c>
     560:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     564:	0b000013 	bleq	5b8 <_Min_Heap_Size-0x248>
     568:	0b3e0104 	bleq	f80980 <_Min_Heap_Size+0xf80180>
     56c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     570:	0b3b0b3a 	bleq	ec3260 <_Min_Heap_Size+0xec2a60>
     574:	13010b39 	movwne	r0, #6969	; 0x1b39
     578:	280c0000 	stmdacs	ip, {}	; <UNPREDICTABLE>
     57c:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     580:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
     584:	0b0b0113 	bleq	2c09d8 <_Min_Heap_Size+0x2c01d8>
     588:	0b3b0b3a 	bleq	ec3278 <_Min_Heap_Size+0xec2a78>
     58c:	13010b39 	movwne	r0, #6969	; 0x1b39
     590:	0d0e0000 	stceq	0, cr0, [lr, #-0]
     594:	3a0e0300 	bcc	38119c <_Min_Heap_Size+0x38099c>
     598:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     59c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     5a0:	0f00000a 	svceq	0x0000000a
     5a4:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
     5a8:	0b3a0b0b 	bleq	e831dc <_Min_Heap_Size+0xe829dc>
     5ac:	0b390b3b 	bleq	e432a0 <_Min_Heap_Size+0xe42aa0>
     5b0:	00001301 	andeq	r1, r0, r1, lsl #6
     5b4:	0b000f10 	bleq	41fc <_Min_Heap_Size+0x39fc>
     5b8:	0013490b 	andseq	r4, r3, fp, lsl #18
     5bc:	000f1100 	andeq	r1, pc, r0, lsl #2
     5c0:	00000b0b 	andeq	r0, r0, fp, lsl #22
     5c4:	27011512 	smladcs	r1, r2, r5, r1
     5c8:	0013010c 	andseq	r0, r3, ip, lsl #2
     5cc:	00051300 	andeq	r1, r5, r0, lsl #6
     5d0:	00001349 	andeq	r1, r0, r9, asr #6
     5d4:	03003414 	movweq	r3, #1044	; 0x414
     5d8:	3b0b3a0e 	blcc	2cee18 <_Min_Heap_Size+0x2ce618>
     5dc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     5e0:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     5e4:	1500000c 	strne	r0, [r0, #-12]
     5e8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 538 <_Min_Heap_Size-0x2c8>
     5ec:	0b3a0e03 	bleq	e83e00 <_Min_Heap_Size+0xe83600>
     5f0:	0b390b3b 	bleq	e432e4 <_Min_Heap_Size+0xe42ae4>
     5f4:	01110c27 	tsteq	r1, r7, lsr #24
     5f8:	06400112 			; <UNDEFINED> instruction: 0x06400112
     5fc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     600:	16000013 			; <UNDEFINED> instruction: 0x16000013
     604:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     608:	0b3b0b3a 	bleq	ec32f8 <_Min_Heap_Size+0xec2af8>
     60c:	13490b39 	movtne	r0, #39737	; 0x9b39
     610:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     614:	17000006 	strne	r0, [r0, -r6]
     618:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     61c:	0c341349 	ldceq	3, cr1, [r4], #-292	; 0xfffffedc
     620:	00000a02 	andeq	r0, r0, r2, lsl #20
     624:	31001d18 	tstcc	r0, r8, lsl sp
     628:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     62c:	01110b42 	tsteq	r1, r2, asr #22
     630:	0b580112 	bleq	1600a80 <_Min_Heap_Size+0x1600280>
     634:	0b570b59 	bleq	15c33a0 <_Min_Heap_Size+0x15c2ba0>
     638:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
     63c:	11010182 	smlabbne	r1, r2, r1, r0
     640:	00133101 	andseq	r3, r3, r1, lsl #2
     644:	828a1a00 	addhi	r1, sl, #0, 20
     648:	0a020001 	beq	80654 <_Min_Heap_Size+0x7fe54>
     64c:	000a4291 	muleq	sl, r1, r2
     650:	01011b00 	tsteq	r1, r0, lsl #22
     654:	13011349 	movwne	r1, #4937	; 0x1349
     658:	211c0000 	tstcs	ip, r0
     65c:	2f134900 	svccs	0x00134900
     660:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
     664:	00018289 	andeq	r8, r1, r9, lsl #5
     668:	13310111 	teqne	r1, #1073741828	; 0x40000004
     66c:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
     670:	030c3f00 	movweq	r3, #52992	; 0xcf00
     674:	3b0b3a0e 	blcc	2ceeb4 <_Min_Heap_Size+0x2ce6b4>
     678:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     67c:	1201110c 	andne	r1, r1, #12, 2
     680:	970a4001 	strls	r4, [sl, -r1]
     684:	00000c42 	andeq	r0, r0, r2, asr #24
     688:	03002e1f 	movweq	r2, #3615	; 0xe1f
     68c:	3b0b3a0e 	blcc	2ceecc <_Min_Heap_Size+0x2ce6cc>
     690:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     694:	000b200c 	andeq	r2, fp, ip
     698:	002e2000 	eoreq	r2, lr, r0
     69c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     6a0:	030e4087 	movweq	r4, #57479	; 0xe087
     6a4:	3b0b3a0e 	blcc	2ceee4 <_Min_Heap_Size+0x2ce6e4>
     6a8:	000b390b 	andeq	r3, fp, fp, lsl #18
     6ac:	002e2100 	eoreq	r2, lr, r0, lsl #2
     6b0:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     6b4:	030e4087 	movweq	r4, #57479	; 0xe087
     6b8:	3b0b3a0e 	blcc	2ceef8 <_Min_Heap_Size+0x2ce6f8>
     6bc:	000b3905 	andeq	r3, fp, r5, lsl #18
     6c0:	11010000 	mrsne	r0, (UNDEF: 1)
     6c4:	130e2501 	movwne	r2, #58625	; 0xe501
     6c8:	1b0e030b 	blne	3812fc <_Min_Heap_Size+0x380afc>
     6cc:	1106550e 	tstne	r6, lr, lsl #10
     6d0:	10015201 	andne	r5, r1, r1, lsl #4
     6d4:	02000006 	andeq	r0, r0, #6
     6d8:	0b0b0024 	bleq	2c0770 <_Min_Heap_Size+0x2bff70>
     6dc:	0e030b3e 	vmoveq.16	d3[0], r0
     6e0:	16030000 	strne	r0, [r3], -r0
     6e4:	3a0e0300 	bcc	3812ec <_Min_Heap_Size+0x380aec>
     6e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6ec:	0013490b 	andseq	r4, r3, fp, lsl #18
     6f0:	00240400 	eoreq	r0, r4, r0, lsl #8
     6f4:	0b3e0b0b 	bleq	f83328 <_Min_Heap_Size+0xf82b28>
     6f8:	00000803 	andeq	r0, r0, r3, lsl #16
     6fc:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
     700:	06000013 			; <UNDEFINED> instruction: 0x06000013
     704:	13490101 	movtne	r0, #37121	; 0x9101
     708:	00001301 	andeq	r1, r0, r1, lsl #6
     70c:	49002107 	stmdbmi	r0, {r0, r1, r2, r8, sp}
     710:	000b2f13 	andeq	r2, fp, r3, lsl pc
     714:	01130800 	tsteq	r3, r0, lsl #16
     718:	0b3a0b0b 	bleq	e8334c <_Min_Heap_Size+0xe82b4c>
     71c:	0b39053b 	bleq	e41c10 <_Min_Heap_Size+0xe41410>
     720:	00001301 	andeq	r1, r0, r1, lsl #6
     724:	03000d09 	movweq	r0, #3337	; 0xd09
     728:	3b0b3a08 	blcc	2cef50 <_Min_Heap_Size+0x2ce750>
     72c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     730:	000a3813 	andeq	r3, sl, r3, lsl r8
     734:	000d0a00 	andeq	r0, sp, r0, lsl #20
     738:	0b3a0e03 	bleq	e83f4c <_Min_Heap_Size+0xe8374c>
     73c:	0b39053b 	bleq	e41c30 <_Min_Heap_Size+0xe41430>
     740:	0a381349 	beq	e0546c <_Min_Heap_Size+0xe04c6c>
     744:	160b0000 	strne	r0, [fp], -r0
     748:	3a0e0300 	bcc	381350 <_Min_Heap_Size+0x380b50>
     74c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     750:	0013490b 	andseq	r4, r3, fp, lsl #18
     754:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
     758:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     75c:	0b3b0b3a 	bleq	ec344c <_Min_Heap_Size+0xec2c4c>
     760:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     764:	01120111 	tsteq	r2, r1, lsl r1
     768:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     76c:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
     770:	0111010b 	tsteq	r1, fp, lsl #2
     774:	13010112 	movwne	r0, #4370	; 0x1112
     778:	340e0000 	strcc	r0, [lr], #-0
     77c:	3a0e0300 	bcc	381384 <_Min_Heap_Size+0x380b84>
     780:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     784:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     788:	0f00000a 	svceq	0x0000000a
     78c:	0111010b 	tsteq	r1, fp, lsl #2
     790:	00000112 	andeq	r0, r0, r2, lsl r1
     794:	01110100 	tsteq	r1, r0, lsl #2
     798:	0b130e25 	bleq	4c4034 <_Min_Heap_Size+0x4c3834>
     79c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     7a0:	01110655 	tsteq	r1, r5, asr r6
     7a4:	06100152 			; <UNDEFINED> instruction: 0x06100152
     7a8:	04020000 	streq	r0, [r2], #-0
     7ac:	0b0b3e01 	bleq	2cffb8 <_Min_Heap_Size+0x2cf7b8>
     7b0:	3a13490b 	bcc	4d2be4 <_Min_Heap_Size+0x4d23e4>
     7b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7b8:	0013010b 	andseq	r0, r3, fp, lsl #2
     7bc:	00280300 	eoreq	r0, r8, r0, lsl #6
     7c0:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
     7c4:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
     7c8:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     7cc:	0500000b 	streq	r0, [r0, #-11]
     7d0:	0b0b0024 	bleq	2c0868 <_Min_Heap_Size+0x2c0068>
     7d4:	0e030b3e 	vmoveq.16	d3[0], r0
     7d8:	16060000 	strne	r0, [r6], -r0
     7dc:	3a0e0300 	bcc	3813e4 <_Min_Heap_Size+0x380be4>
     7e0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7e4:	0013490b 	andseq	r4, r3, fp, lsl #18
     7e8:	00240700 	eoreq	r0, r4, r0, lsl #14
     7ec:	0b3e0b0b 	bleq	f83420 <_Min_Heap_Size+0xf82c20>
     7f0:	00000803 	andeq	r0, r0, r3, lsl #16
     7f4:	49002608 	stmdbmi	r0, {r3, r9, sl, sp}
     7f8:	09000013 	stmdbeq	r0, {r0, r1, r4}
     7fc:	13490035 	movtne	r0, #36917	; 0x9035
     800:	010a0000 	mrseq	r0, (UNDEF: 10)
     804:	01134901 	tsteq	r3, r1, lsl #18
     808:	0b000013 	bleq	85c <_Min_Heap_Size+0x5c>
     80c:	13490021 	movtne	r0, #36897	; 0x9021
     810:	00000b2f 	andeq	r0, r0, pc, lsr #22
     814:	0b01130c 	bleq	4544c <_Min_Heap_Size+0x44c4c>
     818:	3b0b3a0b 	blcc	2cf04c <_Min_Heap_Size+0x2ce84c>
     81c:	010b3905 	tsteq	fp, r5, lsl #18
     820:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     824:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     828:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     82c:	13490b39 	movtne	r0, #39737	; 0x9b39
     830:	00000a38 	andeq	r0, r0, r8, lsr sl
     834:	03000d0e 	movweq	r0, #3342	; 0xd0e
     838:	3b0b3a0e 	blcc	2cf078 <_Min_Heap_Size+0x2ce878>
     83c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     840:	000a3813 	andeq	r3, sl, r3, lsl r8
     844:	00160f00 	andseq	r0, r6, r0, lsl #30
     848:	0b3a0e03 	bleq	e8405c <_Min_Heap_Size+0xe8385c>
     84c:	0b39053b 	bleq	e41d40 <_Min_Heap_Size+0xe41540>
     850:	00001349 	andeq	r1, r0, r9, asr #6
     854:	0b011310 	bleq	4549c <_Min_Heap_Size+0x44c9c>
     858:	3b0b3a0b 	blcc	2cf08c <_Min_Heap_Size+0x2ce88c>
     85c:	010b390b 	tsteq	fp, fp, lsl #18
     860:	11000013 	tstne	r0, r3, lsl r0
     864:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     868:	0b3b0b3a 	bleq	ec3558 <_Min_Heap_Size+0xec2d58>
     86c:	13490b39 	movtne	r0, #39737	; 0x9b39
     870:	00000a38 	andeq	r0, r0, r8, lsr sl
     874:	03000d12 	movweq	r0, #3346	; 0xd12
     878:	3b0b3a0e 	blcc	2cf0b8 <_Min_Heap_Size+0x2ce8b8>
     87c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     880:	000a3813 	andeq	r3, sl, r3, lsl r8
     884:	01131300 	tsteq	r3, r0, lsl #6
     888:	0b0b0e03 	bleq	2c409c <_Min_Heap_Size+0x2c389c>
     88c:	0b3b0b3a 	bleq	ec357c <_Min_Heap_Size+0xec2d7c>
     890:	13010b39 	movwne	r0, #6969	; 0x1b39
     894:	0f140000 	svceq	0x00140000
     898:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     89c:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
     8a0:	0b0b000f 	bleq	2c08e4 <_Min_Heap_Size+0x2c00e4>
     8a4:	15160000 	ldrne	r0, [r6, #-0]
     8a8:	010c2701 	tsteq	ip, r1, lsl #14
     8ac:	17000013 	smladne	r0, r3, r0, r0
     8b0:	13490005 	movtne	r0, #36869	; 0x9005
     8b4:	34180000 	ldrcc	r0, [r8], #-0
     8b8:	3a0e0300 	bcc	3814c0 <_Min_Heap_Size+0x380cc0>
     8bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     8c0:	3f13490b 	svccc	0x0013490b
     8c4:	000c3c0c 	andeq	r3, ip, ip, lsl #24
     8c8:	00341900 	eorseq	r1, r4, r0, lsl #18
     8cc:	0b3a1347 	bleq	e855f0 <_Min_Heap_Size+0xe84df0>
     8d0:	0b390b3b 	bleq	e435c4 <_Min_Heap_Size+0xe42dc4>
     8d4:	00000a02 	andeq	r0, r0, r2, lsl #20
     8d8:	3f012e1a 	svccc	0x00012e1a
     8dc:	3a0e030c 	bcc	381514 <_Min_Heap_Size+0x380d14>
     8e0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     8e4:	110c270b 	tstne	ip, fp, lsl #14
     8e8:	40011201 	andmi	r1, r1, r1, lsl #4
     8ec:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     8f0:	00001301 	andeq	r1, r0, r1, lsl #6
     8f4:	0300051b 	movweq	r0, #1307	; 0x51b
     8f8:	3b0b3a0e 	blcc	2cf138 <_Min_Heap_Size+0x2ce938>
     8fc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     900:	b7060213 	smladlt	r6, r3, r2, r0
     904:	00000642 	andeq	r0, r0, r2, asr #12
     908:	0182891c 	orreq	r8, r2, ip, lsl r9
     90c:	31011101 	tstcc	r1, r1, lsl #2
     910:	00130113 	andseq	r0, r3, r3, lsl r1
     914:	828a1d00 	addhi	r1, sl, #0, 26
     918:	0a020001 	beq	80924 <_Min_Heap_Size+0x80124>
     91c:	000a4291 	muleq	sl, r1, r2
     920:	82891e00 	addhi	r1, r9, #0, 28
     924:	01110101 	tsteq	r1, r1, lsl #2
     928:	00001331 	andeq	r1, r0, r1, lsr r3
     92c:	0300341f 	movweq	r3, #1055	; 0x41f
     930:	3b0b3a0e 	blcc	2cf170 <_Min_Heap_Size+0x2ce970>
     934:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     938:	000a0213 	andeq	r0, sl, r3, lsl r2
     93c:	010b2000 	mrseq	r2, (UNDEF: 11)
     940:	01120111 	tsteq	r2, r1, lsl r1
     944:	00001301 	andeq	r1, r0, r1, lsl #6
     948:	01828921 	orreq	r8, r2, r1, lsr #18
     94c:	31011100 	mrscc	r1, (UNDEF: 17)
     950:	22000013 	andcs	r0, r0, #19
     954:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 8a4 <_Min_Heap_Size+0xa4>
     958:	40870c3c 	addmi	r0, r7, ip, lsr ip
     95c:	3a0e030e 	bcc	38159c <_Min_Heap_Size+0x380d9c>
     960:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     964:	2300000b 	movwcs	r0, #11
     968:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 8b8 <_Min_Heap_Size+0xb8>
     96c:	40870c3c 	addmi	r0, r7, ip, lsr ip
     970:	3a0e030e 	bcc	3815b0 <_Min_Heap_Size+0x380db0>
     974:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     978:	0000000b 	andeq	r0, r0, fp
     97c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     980:	030b130e 	movweq	r1, #45838	; 0xb30e
     984:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     988:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     98c:	00061001 	andeq	r1, r6, r1
     990:	00240200 	eoreq	r0, r4, r0, lsl #4
     994:	0b3e0b0b 	bleq	f835c8 <_Min_Heap_Size+0xf82dc8>
     998:	00000e03 	andeq	r0, r0, r3, lsl #28
     99c:	03001603 	movweq	r1, #1539	; 0x603
     9a0:	3b0b3a0e 	blcc	2cf1e0 <_Min_Heap_Size+0x2ce9e0>
     9a4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     9a8:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     9ac:	0b0b0024 	bleq	2c0a44 <_Min_Heap_Size+0x2c0244>
     9b0:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     9b4:	35050000 	strcc	r0, [r5, #-0]
     9b8:	00134900 	andseq	r4, r3, r0, lsl #18
     9bc:	01010600 	tsteq	r1, r0, lsl #12
     9c0:	13011349 	movwne	r1, #4937	; 0x1349
     9c4:	21070000 	mrscs	r0, (UNDEF: 7)
     9c8:	2f134900 	svccs	0x00134900
     9cc:	0800000b 	stmdaeq	r0, {r0, r1, r3}
     9d0:	0b0b0113 	bleq	2c0e24 <_Min_Heap_Size+0x2c0624>
     9d4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     9d8:	13010b39 	movwne	r0, #6969	; 0x1b39
     9dc:	0d090000 	stceq	0, cr0, [r9, #-0]
     9e0:	3a080300 	bcc	2015e8 <_Min_Heap_Size+0x200de8>
     9e4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     9e8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     9ec:	0a00000a 	beq	a1c <_Min_Heap_Size+0x21c>
     9f0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     9f4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     9f8:	13490b39 	movtne	r0, #39737	; 0x9b39
     9fc:	00000a38 	andeq	r0, r0, r8, lsr sl
     a00:	0300160b 	movweq	r1, #1547	; 0x60b
     a04:	3b0b3a0e 	blcc	2cf244 <_Min_Heap_Size+0x2cea44>
     a08:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     a0c:	0c000013 	stceq	0, cr0, [r0], {19}
     a10:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 960 <_Min_Heap_Size+0x160>
     a14:	0b3a0e03 	bleq	e84228 <_Min_Heap_Size+0xe83a28>
     a18:	0b390b3b 	bleq	e4370c <_Min_Heap_Size+0xe42f0c>
     a1c:	01110c27 	tsteq	r1, r7, lsr #24
     a20:	06400112 			; <UNDEFINED> instruction: 0x06400112
     a24:	000c4297 	muleq	ip, r7, r2
     a28:	010b0d00 	tsteq	fp, r0, lsl #26
     a2c:	01120111 	tsteq	r2, r1, lsl r1
     a30:	00001301 	andeq	r1, r0, r1, lsl #6
     a34:	0300340e 	movweq	r3, #1038	; 0x40e
     a38:	3b0b3a0e 	blcc	2cf278 <_Min_Heap_Size+0x2cea78>
     a3c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     a40:	000a0213 	andeq	r0, sl, r3, lsl r2
     a44:	010b0f00 	tsteq	fp, r0, lsl #30
     a48:	01120111 	tsteq	r2, r1, lsl r1
     a4c:	01000000 	mrseq	r0, (UNDEF: 0)
     a50:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     a54:	0e030b13 	vmoveq.32	d3[0], r0
     a58:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
     a5c:	01520111 	cmpeq	r2, r1, lsl r1
     a60:	00000610 	andeq	r0, r0, r0, lsl r6
     a64:	0b002402 	bleq	9a74 <_Min_Heap_Size+0x9274>
     a68:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     a6c:	0300000e 	movweq	r0, #14
     a70:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     a74:	0b3b0b3a 	bleq	ec3764 <_Min_Heap_Size+0xec2f64>
     a78:	13490b39 	movtne	r0, #39737	; 0x9b39
     a7c:	24040000 	strcs	r0, [r4], #-0
     a80:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     a84:	0008030b 	andeq	r0, r8, fp, lsl #6
     a88:	00260500 	eoreq	r0, r6, r0, lsl #10
     a8c:	00001349 	andeq	r1, r0, r9, asr #6
     a90:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
     a94:	07000013 	smladeq	r0, r3, r0, r0
     a98:	0b0b0113 	bleq	2c0eec <_Min_Heap_Size+0x2c06ec>
     a9c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     aa0:	13010b39 	movwne	r0, #6969	; 0x1b39
     aa4:	0d080000 	stceq	0, cr0, [r8, #-0]
     aa8:	3a080300 	bcc	2016b0 <_Min_Heap_Size+0x200eb0>
     aac:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ab0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     ab4:	0900000a 	stmdbeq	r0, {r1, r3}
     ab8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     abc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ac0:	13490b39 	movtne	r0, #39737	; 0x9b39
     ac4:	00000a38 	andeq	r0, r0, r8, lsr sl
     ac8:	0300160a 	movweq	r1, #1546	; 0x60a
     acc:	3b0b3a0e 	blcc	2cf30c <_Min_Heap_Size+0x2ceb0c>
     ad0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     ad4:	0b000013 	bleq	b28 <_Min_Heap_Size+0x328>
     ad8:	0b3e0104 	bleq	f80ef0 <_Min_Heap_Size+0xf806f0>
     adc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     ae0:	0b3b0b3a 	bleq	ec37d0 <_Min_Heap_Size+0xec2fd0>
     ae4:	13010b39 	movwne	r0, #6969	; 0x1b39
     ae8:	280c0000 	stmdacs	ip, {}	; <UNPREDICTABLE>
     aec:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     af0:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
     af4:	08030028 	stmdaeq	r3, {r3, r5}
     af8:	00000b1c 	andeq	r0, r0, ip, lsl fp
     afc:	0b01130e 	bleq	4573c <_Min_Heap_Size+0x44f3c>
     b00:	3b0b3a0b 	blcc	2cf334 <_Min_Heap_Size+0x2ceb34>
     b04:	010b390b 	tsteq	fp, fp, lsl #18
     b08:	0f000013 	svceq	0x00000013
     b0c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     b10:	0b3b0b3a 	bleq	ec3800 <_Min_Heap_Size+0xec3000>
     b14:	13490b39 	movtne	r0, #39737	; 0x9b39
     b18:	00000a38 	andeq	r0, r0, r8, lsr sl
     b1c:	03011310 	movweq	r1, #4880	; 0x1310
     b20:	3a0b0b0e 	bcc	2c3760 <_Min_Heap_Size+0x2c2f60>
     b24:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b28:	0013010b 	andseq	r0, r3, fp, lsl #2
     b2c:	000f1100 	andeq	r1, pc, r0, lsl #2
     b30:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     b34:	0f120000 	svceq	0x00120000
     b38:	000b0b00 	andeq	r0, fp, r0, lsl #22
     b3c:	01151300 	tsteq	r5, r0, lsl #6
     b40:	13010c27 	movwne	r0, #7207	; 0x1c27
     b44:	05140000 	ldreq	r0, [r4, #-0]
     b48:	00134900 	andseq	r4, r3, r0, lsl #18
     b4c:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
     b50:	0b3a0e03 	bleq	e84364 <_Min_Heap_Size+0xe83b64>
     b54:	0b39053b 	bleq	e42048 <_Min_Heap_Size+0xe41848>
     b58:	01110c27 	tsteq	r1, r7, lsr #24
     b5c:	06400112 			; <UNDEFINED> instruction: 0x06400112
     b60:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     b64:	16000013 			; <UNDEFINED> instruction: 0x16000013
     b68:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     b6c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b70:	13490b39 	movtne	r0, #39737	; 0x9b39
     b74:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     b78:	17000006 	strne	r0, [r0, -r6]
     b7c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     b80:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b84:	13490b39 	movtne	r0, #39737	; 0x9b39
     b88:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     b8c:	18000006 	stmdane	r0, {r1, r2}
     b90:	01018289 	smlabbeq	r1, r9, r2, r8
     b94:	13310111 	teqne	r1, #1073741828	; 0x40000004
     b98:	00001301 	andeq	r1, r0, r1, lsl #6
     b9c:	01828a19 	orreq	r8, r2, r9, lsl sl
     ba0:	910a0200 	mrsls	r0, R10_fiq
     ba4:	00000a42 	andeq	r0, r0, r2, asr #20
     ba8:	0182891a 	orreq	r8, r2, sl, lsl r9
     bac:	31011100 	mrscc	r1, (UNDEF: 17)
     bb0:	1b000013 	blne	c04 <_Min_Heap_Size+0x404>
     bb4:	0e03012e 	adfeqsp	f0, f3, #0.5
     bb8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     bbc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     bc0:	01111349 	tsteq	r1, r9, asr #6
     bc4:	06400112 			; <UNDEFINED> instruction: 0x06400112
     bc8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     bcc:	1c000013 	stcne	0, cr0, [r0], {19}
     bd0:	0111010b 	tsteq	r1, fp, lsl #2
     bd4:	13010112 	movwne	r0, #4370	; 0x1112
     bd8:	341d0000 	ldrcc	r0, [sp], #-0
     bdc:	3a080300 	bcc	2017e4 <_Min_Heap_Size+0x200fe4>
     be0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     be4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     be8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     bec:	1d1e0000 	ldcne	0, cr0, [lr, #-0]
     bf0:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     bf4:	0542b801 	strbeq	fp, [r2, #-2049]	; 0xfffff7ff
     bf8:	01120111 	tsteq	r2, r1, lsl r1
     bfc:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
     c00:	13010b57 	movwne	r0, #6999	; 0x1b57
     c04:	051f0000 	ldreq	r0, [pc, #-0]	; c0c <_Min_Heap_Size+0x40c>
     c08:	02133100 	andseq	r3, r3, #0, 2
     c0c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     c10:	34200000 	strtcc	r0, [r0], #-0
     c14:	02133100 	andseq	r3, r3, #0, 2
     c18:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     c1c:	1d210000 	stcne	0, cr0, [r1, #-0]
     c20:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     c24:	0542b801 	strbeq	fp, [r2, #-2049]	; 0xfffff7ff
     c28:	01120111 	tsteq	r2, r1, lsl r1
     c2c:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
     c30:	00000b57 	andeq	r0, r0, r7, asr fp
     c34:	03003422 	movweq	r3, #1058	; 0x422
     c38:	3b0b3a0e 	blcc	2cf478 <_Min_Heap_Size+0x2cec78>
     c3c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     c40:	000a0213 	andeq	r0, sl, r3, lsl r2
     c44:	82892300 	addhi	r2, r9, #0, 6
     c48:	01110101 	tsteq	r1, r1, lsl #2
     c4c:	00001331 	andeq	r1, r0, r1, lsr r3
     c50:	03012e24 	movweq	r2, #7716	; 0x1e24
     c54:	3b0b3a0e 	blcc	2cf494 <_Min_Heap_Size+0x2cec94>
     c58:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     c5c:	1113490c 	tstne	r3, ip, lsl #18
     c60:	40011201 	andmi	r1, r1, r1, lsl #4
     c64:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     c68:	00001301 	andeq	r1, r0, r1, lsl #6
     c6c:	03012e25 	movweq	r2, #7717	; 0x1e25
     c70:	3b0b3a0e 	blcc	2cf4b0 <_Min_Heap_Size+0x2cecb0>
     c74:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     c78:	1201110c 	andne	r1, r1, #12, 2
     c7c:	970a4001 	strls	r4, [sl, -r1]
     c80:	13010c42 	movwne	r0, #7234	; 0x1c42
     c84:	0b260000 	bleq	980c8c <_Min_Heap_Size+0x98048c>
     c88:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     c8c:	27000001 	strcs	r0, [r0, -r1]
     c90:	0c3f012e 	ldfeqs	f0, [pc], #-184	; be0 <_Min_Heap_Size+0x3e0>
     c94:	0b3a0e03 	bleq	e844a8 <_Min_Heap_Size+0xe83ca8>
     c98:	0b39053b 	bleq	e4218c <_Min_Heap_Size+0xe4198c>
     c9c:	13490c27 	movtne	r0, #39975	; 0x9c27
     ca0:	01120111 	tsteq	r2, r1, lsl r1
     ca4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     ca8:	0013010c 	andseq	r0, r3, ip, lsl #2
     cac:	012e2800 			; <UNDEFINED> instruction: 0x012e2800
     cb0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     cb4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cb8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     cbc:	01111349 	tsteq	r1, r9, asr #6
     cc0:	0a400112 	beq	1001110 <_Min_Heap_Size+0x1000910>
     cc4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     cc8:	29000013 	stmdbcs	r0, {r0, r1, r4}
     ccc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     cd0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cd4:	13490b39 	movtne	r0, #39737	; 0x9b39
     cd8:	00000a02 	andeq	r0, r0, r2, lsl #20
     cdc:	3f012e2a 	svccc	0x00012e2a
     ce0:	3a0e030c 	bcc	381918 <_Min_Heap_Size+0x381118>
     ce4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     ce8:	110c270b 	tstne	ip, fp, lsl #14
     cec:	40011201 	andmi	r1, r1, r1, lsl #4
     cf0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     cf4:	00001301 	andeq	r1, r0, r1, lsl #6
     cf8:	3f012e2b 	svccc	0x00012e2b
     cfc:	3a0e030c 	bcc	381934 <_Min_Heap_Size+0x381134>
     d00:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d04:	110c270b 	tstne	ip, fp, lsl #14
     d08:	40011201 	andmi	r1, r1, r1, lsl #4
     d0c:	0c429606 	mcrreq	6, 0, r9, r2, cr6
     d10:	00001301 	andeq	r1, r0, r1, lsl #6
     d14:	3f012e2c 	svccc	0x00012e2c
     d18:	3a0e030c 	bcc	381950 <_Min_Heap_Size+0x381150>
     d1c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d20:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     d24:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     d28:	96064001 	strls	r4, [r6], -r1
     d2c:	13010c42 	movwne	r0, #7234	; 0x1c42
     d30:	0b2d0000 	bleq	b40d38 <_Min_Heap_Size+0xb40538>
     d34:	01065501 	tsteq	r6, r1, lsl #10
     d38:	2e000013 	mcrcs	0, 0, r0, cr0, cr3, {0}
     d3c:	0e03012e 	adfeqsp	f0, f3, #0.5
     d40:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     d44:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     d48:	0b201349 	bleq	805a74 <_Min_Heap_Size+0x805274>
     d4c:	00001301 	andeq	r1, r0, r1, lsl #6
     d50:	0300052f 	movweq	r0, #1327	; 0x52f
     d54:	3b0b3a0e 	blcc	2cf594 <_Min_Heap_Size+0x2ced94>
     d58:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     d5c:	30000013 	andcc	r0, r0, r3, lsl r0
     d60:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     d64:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     d68:	13490b39 	movtne	r0, #39737	; 0x9b39
     d6c:	2e310000 	cdpcs	0, 3, cr0, cr1, cr0, {0}
     d70:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     d74:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     d78:	0b3a0e03 	bleq	e8458c <_Min_Heap_Size+0xe83d8c>
     d7c:	0b39053b 	bleq	e42270 <_Min_Heap_Size+0xe41a70>
     d80:	2e320000 	cdpcs	0, 3, cr0, cr2, cr0, {0}
     d84:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     d88:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     d8c:	00000e03 	andeq	r0, r0, r3, lsl #28
     d90:	3f002e33 	svccc	0x00002e33
     d94:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     d98:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     d9c:	0b3b0b3a 	bleq	ec3a8c <_Min_Heap_Size+0xec328c>
     da0:	00000b39 	andeq	r0, r0, r9, lsr fp
     da4:	01110100 	tsteq	r1, r0, lsl #2
     da8:	0b130e25 	bleq	4c4644 <_Min_Heap_Size+0x4c3e44>
     dac:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     db0:	01110655 	tsteq	r1, r5, asr r6
     db4:	06100152 			; <UNDEFINED> instruction: 0x06100152
     db8:	24020000 	strcs	r0, [r2], #-0
     dbc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     dc0:	000e030b 	andeq	r0, lr, fp, lsl #6
     dc4:	00160300 	andseq	r0, r6, r0, lsl #6
     dc8:	0b3a0e03 	bleq	e845dc <_Min_Heap_Size+0xe83ddc>
     dcc:	0b390b3b 	bleq	e43ac0 <_Min_Heap_Size+0xe432c0>
     dd0:	00001349 	andeq	r1, r0, r9, asr #6
     dd4:	0b002404 	bleq	9dec <_Min_Heap_Size+0x95ec>
     dd8:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     ddc:	05000008 	streq	r0, [r0, #-8]
     de0:	13490026 	movtne	r0, #36902	; 0x9026
     de4:	35060000 	strcc	r0, [r6, #-0]
     de8:	00134900 	andseq	r4, r3, r0, lsl #18
     dec:	01010700 	tsteq	r1, r0, lsl #14
     df0:	13011349 	movwne	r1, #4937	; 0x1349
     df4:	21080000 	mrscs	r0, (UNDEF: 8)
     df8:	2f134900 	svccs	0x00134900
     dfc:	0900000b 	stmdbeq	r0, {r0, r1, r3}
     e00:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     e04:	0b3b0b3a 	bleq	ec3af4 <_Min_Heap_Size+0xec32f4>
     e08:	13490b39 	movtne	r0, #39737	; 0x9b39
     e0c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     e10:	130a0000 	movwne	r0, #40960	; 0xa000
     e14:	3a0b0b01 	bcc	2c3a20 <_Min_Heap_Size+0x2c3220>
     e18:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e1c:	0013010b 	andseq	r0, r3, fp, lsl #2
     e20:	000d0b00 	andeq	r0, sp, r0, lsl #22
     e24:	0b3a0803 	bleq	e82e38 <_Min_Heap_Size+0xe82638>
     e28:	0b39053b 	bleq	e4231c <_Min_Heap_Size+0xe41b1c>
     e2c:	0a381349 	beq	e05b58 <_Min_Heap_Size+0xe05358>
     e30:	0d0c0000 	stceq	0, cr0, [ip, #-0]
     e34:	3a0e0300 	bcc	381a3c <_Min_Heap_Size+0x38123c>
     e38:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e3c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     e40:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
     e44:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     e48:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e4c:	13490b39 	movtne	r0, #39737	; 0x9b39
     e50:	040e0000 	streq	r0, [lr], #-0
     e54:	0b0b3e01 	bleq	2d0660 <_Min_Heap_Size+0x2cfe60>
     e58:	3a13490b 	bcc	4d328c <_Min_Heap_Size+0x4d2a8c>
     e5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e60:	0013010b 	andseq	r0, r3, fp, lsl #2
     e64:	00280f00 	eoreq	r0, r8, r0, lsl #30
     e68:	0b1c0e03 	bleq	70467c <_Min_Heap_Size+0x703e7c>
     e6c:	28100000 	ldmdacs	r0, {}	; <UNPREDICTABLE>
     e70:	1c080300 	stcne	3, cr0, [r8], {-0}
     e74:	1100000b 	tstne	r0, fp
     e78:	0b0b0113 	bleq	2c12cc <_Min_Heap_Size+0x2c0acc>
     e7c:	0b3b0b3a 	bleq	ec3b6c <_Min_Heap_Size+0xec336c>
     e80:	13010b39 	movwne	r0, #6969	; 0x1b39
     e84:	0d120000 	ldceq	0, cr0, [r2, #-0]
     e88:	3a0e0300 	bcc	381a90 <_Min_Heap_Size+0x381290>
     e8c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     e90:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     e94:	1300000a 	movwne	r0, #10
     e98:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     e9c:	0b3b0b3a 	bleq	ec3b8c <_Min_Heap_Size+0xec338c>
     ea0:	13490b39 	movtne	r0, #39737	; 0x9b39
     ea4:	00000a38 	andeq	r0, r0, r8, lsr sl
     ea8:	3f002e14 	svccc	0x00002e14
     eac:	3a0e030c 	bcc	381ae4 <_Min_Heap_Size+0x3812e4>
     eb0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     eb4:	110c270b 	tstne	ip, fp, lsl #14
     eb8:	40011201 	andmi	r1, r1, r1, lsl #4
     ebc:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     ec0:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
     ec4:	030c3f01 	movweq	r3, #52993	; 0xcf01
     ec8:	3b0b3a0e 	blcc	2cf708 <_Min_Heap_Size+0x2cef08>
     ecc:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     ed0:	1201110c 	andne	r1, r1, #12, 2
     ed4:	97064001 	strls	r4, [r6, -r1]
     ed8:	13010c42 	movwne	r0, #7234	; 0x1c42
     edc:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
     ee0:	11000182 	smlabbne	r0, r2, r1, r0
     ee4:	00133101 	andseq	r3, r3, r1, lsl #2
     ee8:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
     eec:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     ef0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ef4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     ef8:	01120111 	tsteq	r2, r1, lsl r1
     efc:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     f00:	0013010c 	andseq	r0, r3, ip, lsl #2
     f04:	00051800 	andeq	r1, r5, r0, lsl #16
     f08:	0b3a0e03 	bleq	e8471c <_Min_Heap_Size+0xe83f1c>
     f0c:	0b39053b 	bleq	e42400 <_Min_Heap_Size+0xe41c00>
     f10:	0a021349 	beq	85c3c <_Min_Heap_Size+0x8543c>
     f14:	0f190000 	svceq	0x00190000
     f18:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     f1c:	1a000013 	bne	f70 <_Min_Heap_Size+0x770>
     f20:	0c3f012e 	ldfeqs	f0, [pc], #-184	; e70 <_Min_Heap_Size+0x670>
     f24:	0b3a0e03 	bleq	e84738 <_Min_Heap_Size+0xe83f38>
     f28:	0b39053b 	bleq	e4241c <_Min_Heap_Size+0xe41c1c>
     f2c:	13490c27 	movtne	r0, #39975	; 0x9c27
     f30:	01120111 	tsteq	r2, r1, lsl r1
     f34:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     f38:	0013010c 	andseq	r0, r3, ip, lsl #2
     f3c:	002e1b00 	eoreq	r1, lr, r0, lsl #22
     f40:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     f44:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     f48:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     f4c:	01111349 	tsteq	r1, r9, asr #6
     f50:	0a400112 	beq	10013a0 <_Min_Heap_Size+0x1000ba0>
     f54:	000c4297 	muleq	ip, r7, r2
     f58:	00341c00 	eorseq	r1, r4, r0, lsl #24
     f5c:	0b3a0e03 	bleq	e84770 <_Min_Heap_Size+0xe83f70>
     f60:	0b39053b 	bleq	e42454 <_Min_Heap_Size+0xe41c54>
     f64:	06021349 	streq	r1, [r2], -r9, asr #6
     f68:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     f6c:	00051d00 	andeq	r1, r5, r0, lsl #26
     f70:	0b3a0e03 	bleq	e84784 <_Min_Heap_Size+0xe83f84>
     f74:	0b39053b 	bleq	e42468 <_Min_Heap_Size+0xe41c68>
     f78:	06021349 	streq	r1, [r2], -r9, asr #6
     f7c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     f80:	00341e00 	eorseq	r1, r4, r0, lsl #28
     f84:	0b3a0e03 	bleq	e84798 <_Min_Heap_Size+0xe83f98>
     f88:	0b39053b 	bleq	e4247c <_Min_Heap_Size+0xe41c7c>
     f8c:	0a021349 	beq	85cb8 <_Min_Heap_Size+0x854b8>
     f90:	0b1f0000 	bleq	7c0f98 <_Min_Heap_Size+0x7c0798>
     f94:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     f98:	00130101 	andseq	r0, r3, r1, lsl #2
     f9c:	82892000 	addhi	r2, r9, #0
     fa0:	01110101 	tsteq	r1, r1, lsl #2
     fa4:	13011331 	movwne	r1, #4913	; 0x1331
     fa8:	8a210000 	bhi	840fb0 <_Min_Heap_Size+0x8407b0>
     fac:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     fb0:	0a42910a 	beq	10a53e0 <_Min_Heap_Size+0x10a4be0>
     fb4:	89220000 	stmdbhi	r2!, {}	; <UNPREDICTABLE>
     fb8:	11010182 	smlabbne	r1, r2, r1, r0
     fbc:	00133101 	andseq	r3, r3, r1, lsl #2
     fc0:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
     fc4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     fc8:	0b3b0b3a 	bleq	ec3cb8 <_Min_Heap_Size+0xec34b8>
     fcc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     fd0:	01111349 	tsteq	r1, r9, asr #6
     fd4:	06400112 			; <UNDEFINED> instruction: 0x06400112
     fd8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     fdc:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
     fe0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     fe4:	0b3b0b3a 	bleq	ec3cd4 <_Min_Heap_Size+0xec34d4>
     fe8:	13490b39 	movtne	r0, #39737	; 0x9b39
     fec:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     ff0:	25000006 	strcs	r0, [r0, #-6]
     ff4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     ff8:	0b3b0b3a 	bleq	ec3ce8 <_Min_Heap_Size+0xec34e8>
     ffc:	13490b39 	movtne	r0, #39737	; 0x9b39
    1000:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1004:	26000006 	strcs	r0, [r0], -r6
    1008:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
    100c:	00001301 	andeq	r1, r0, r1, lsl #6
    1010:	3f002e27 	svccc	0x00002e27
    1014:	3a0e030c 	bcc	381c4c <_Min_Heap_Size+0x38144c>
    1018:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    101c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1020:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1024:	970a4001 	strls	r4, [sl, -r1]
    1028:	00000c42 	andeq	r0, r0, r2, asr #24
    102c:	3f002e28 	svccc	0x00002e28
    1030:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1034:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1038:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
    103c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1040:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1044:	0b3a0e03 	bleq	e84858 <_Min_Heap_Size+0xe84058>
    1048:	0b390b3b 	bleq	e43d3c <_Min_Heap_Size+0xe4353c>
    104c:	2e2a0000 	cdpcs	0, 2, cr0, cr10, cr0, {0}
    1050:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1054:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1058:	0b3a0e03 	bleq	e8486c <_Min_Heap_Size+0xe8406c>
    105c:	0b39053b 	bleq	e42550 <_Min_Heap_Size+0xe41d50>
    1060:	01000000 	mrseq	r0, (UNDEF: 0)
    1064:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1068:	0e030b13 	vmoveq.32	d3[0], r0
    106c:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    1070:	01520111 	cmpeq	r2, r1, lsl r1
    1074:	00000610 	andeq	r0, r0, r0, lsl r6
    1078:	0b002402 	bleq	a088 <_Min_Heap_Size+0x9888>
    107c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1080:	0300000e 	movweq	r0, #14
    1084:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1088:	0b3b0b3a 	bleq	ec3d78 <_Min_Heap_Size+0xec3578>
    108c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1090:	24040000 	strcs	r0, [r4], #-0
    1094:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1098:	0008030b 	andeq	r0, r8, fp, lsl #6
    109c:	00350500 	eorseq	r0, r5, r0, lsl #10
    10a0:	00001349 	andeq	r1, r0, r9, asr #6
    10a4:	49010106 	stmdbmi	r1, {r1, r2, r8}
    10a8:	00130113 	andseq	r0, r3, r3, lsl r1
    10ac:	00210700 	eoreq	r0, r1, r0, lsl #14
    10b0:	0b2f1349 	bleq	bc5ddc <_Min_Heap_Size+0xbc55dc>
    10b4:	13080000 	movwne	r0, #32768	; 0x8000
    10b8:	3a0b0b01 	bcc	2c3cc4 <_Min_Heap_Size+0x2c34c4>
    10bc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    10c0:	0013010b 	andseq	r0, r3, fp, lsl #2
    10c4:	000d0900 	andeq	r0, sp, r0, lsl #18
    10c8:	0b3a0803 	bleq	e830dc <_Min_Heap_Size+0xe828dc>
    10cc:	0b39053b 	bleq	e425c0 <_Min_Heap_Size+0xe41dc0>
    10d0:	0a381349 	beq	e05dfc <_Min_Heap_Size+0xe055fc>
    10d4:	0d0a0000 	stceq	0, cr0, [sl, #-0]
    10d8:	3a0e0300 	bcc	381ce0 <_Min_Heap_Size+0x3814e0>
    10dc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    10e0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    10e4:	0b00000a 	bleq	1114 <_Min_Heap_Size+0x914>
    10e8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    10ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    10f0:	13490b39 	movtne	r0, #39737	; 0x9b39
    10f4:	040c0000 	streq	r0, [ip], #-0
    10f8:	0b0b3e01 	bleq	2d0904 <_Min_Heap_Size+0x2d0104>
    10fc:	3a13490b 	bcc	4d3530 <_Min_Heap_Size+0x4d2d30>
    1100:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1104:	0013010b 	andseq	r0, r3, fp, lsl #2
    1108:	00280d00 	eoreq	r0, r8, r0, lsl #26
    110c:	0b1c0e03 	bleq	704920 <_Min_Heap_Size+0x704120>
    1110:	280e0000 	stmdacs	lr, {}	; <UNPREDICTABLE>
    1114:	1c080300 	stcne	3, cr0, [r8], {-0}
    1118:	0f00000b 	svceq	0x0000000b
    111c:	0b0b0113 	bleq	2c1570 <_Min_Heap_Size+0x2c0d70>
    1120:	0b3b0b3a 	bleq	ec3e10 <_Min_Heap_Size+0xec3610>
    1124:	13010b39 	movwne	r0, #6969	; 0x1b39
    1128:	0d100000 	ldceq	0, cr0, [r0, #-0]
    112c:	3a080300 	bcc	201d34 <_Min_Heap_Size+0x201534>
    1130:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1134:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1138:	1100000a 	tstne	r0, sl
    113c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1140:	0b3b0b3a 	bleq	ec3e30 <_Min_Heap_Size+0xec3630>
    1144:	13490b39 	movtne	r0, #39737	; 0x9b39
    1148:	00000a38 	andeq	r0, r0, r8, lsr sl
    114c:	3f012e12 	svccc	0x00012e12
    1150:	3a0e030c 	bcc	381d88 <_Min_Heap_Size+0x381588>
    1154:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1158:	110c270b 	tstne	ip, fp, lsl #14
    115c:	40011201 	andmi	r1, r1, r1, lsl #4
    1160:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1164:	00001301 	andeq	r1, r0, r1, lsl #6
    1168:	03000513 	movweq	r0, #1299	; 0x513
    116c:	3b0b3a0e 	blcc	2cf9ac <_Min_Heap_Size+0x2cf1ac>
    1170:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1174:	000a0213 	andeq	r0, sl, r3, lsl r2
    1178:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
    117c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1180:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1184:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1188:	01120111 	tsteq	r2, r1, lsl r1
    118c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1190:	0013010c 	andseq	r0, r3, ip, lsl #2
    1194:	00051500 	andeq	r1, r5, r0, lsl #10
    1198:	0b3a0e03 	bleq	e849ac <_Min_Heap_Size+0xe841ac>
    119c:	0b39053b 	bleq	e42690 <_Min_Heap_Size+0xe41e90>
    11a0:	06021349 	streq	r1, [r2], -r9, asr #6
    11a4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    11a8:	82891600 	addhi	r1, r9, #0, 12
    11ac:	01110001 	tsteq	r1, r1
    11b0:	00001331 	andeq	r1, r0, r1, lsr r3
    11b4:	3f012e17 	svccc	0x00012e17
    11b8:	3a0e030c 	bcc	381df0 <_Min_Heap_Size+0x3815f0>
    11bc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11c0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    11c4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    11c8:	97064001 	strls	r4, [r6, -r1]
    11cc:	13010c42 	movwne	r0, #7234	; 0x1c42
    11d0:	34180000 	ldrcc	r0, [r8], #-0
    11d4:	3a080300 	bcc	201ddc <_Min_Heap_Size+0x2015dc>
    11d8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11dc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    11e0:	1900000a 	stmdbne	r0, {r1, r3}
    11e4:	01018289 	smlabbeq	r1, r9, r2, r8
    11e8:	13310111 	teqne	r1, #1073741828	; 0x40000004
    11ec:	8a1a0000 	bhi	6811f4 <_Min_Heap_Size+0x6809f4>
    11f0:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    11f4:	0a42910a 	beq	10a5624 <_Min_Heap_Size+0x10a4e24>
    11f8:	0f1b0000 	svceq	0x001b0000
    11fc:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1200:	1c000013 	stcne	0, cr0, [r0], {19}
    1204:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1208:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    120c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1210:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1214:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
    1218:	01018289 	smlabbeq	r1, r9, r2, r8
    121c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1220:	00001301 	andeq	r1, r0, r1, lsl #6
    1224:	0300341e 	movweq	r3, #1054	; 0x41e
    1228:	3b0b3a0e 	blcc	2cfa68 <_Min_Heap_Size+0x2cf268>
    122c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1230:	b7060213 	smladlt	r6, r3, r2, r0
    1234:	00000642 	andeq	r0, r0, r2, asr #12
    1238:	3f012e1f 	svccc	0x00012e1f
    123c:	3a0e030c 	bcc	381e74 <_Min_Heap_Size+0x381674>
    1240:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1244:	110c270b 	tstne	ip, fp, lsl #14
    1248:	40011201 	andmi	r1, r1, r1, lsl #4
    124c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1250:	00001301 	andeq	r1, r0, r1, lsl #6
    1254:	03000520 	movweq	r0, #1312	; 0x520
    1258:	3b0b3a0e 	blcc	2cfa98 <_Min_Heap_Size+0x2cf298>
    125c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1260:	b7060213 	smladlt	r6, r3, r2, r0
    1264:	00000642 	andeq	r0, r0, r2, asr #12
    1268:	03003421 	movweq	r3, #1057	; 0x421
    126c:	3b0b3a0e 	blcc	2cfaac <_Min_Heap_Size+0x2cf2ac>
    1270:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1274:	b7060213 	smladlt	r6, r3, r2, r0
    1278:	00000642 	andeq	r0, r0, r2, asr #12
    127c:	11010b22 	tstne	r1, r2, lsr #22
    1280:	01011201 	tsteq	r1, r1, lsl #4
    1284:	23000013 	movwcs	r0, #19
    1288:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    128c:	0b3b0b3a 	bleq	ec3f7c <_Min_Heap_Size+0xec377c>
    1290:	13490b39 	movtne	r0, #39737	; 0x9b39
    1294:	00000a02 	andeq	r0, r0, r2, lsl #20
    1298:	3f002e24 	svccc	0x00002e24
    129c:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    12a0:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    12a4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12a8:	00000b39 	andeq	r0, r0, r9, lsr fp
    12ac:	01110100 	tsteq	r1, r0, lsl #2
    12b0:	0b130e25 	bleq	4c4b4c <_Min_Heap_Size+0x4c434c>
    12b4:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    12b8:	01110655 	tsteq	r1, r5, asr r6
    12bc:	06100152 			; <UNDEFINED> instruction: 0x06100152
    12c0:	24020000 	strcs	r0, [r2], #-0
    12c4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    12c8:	000e030b 	andeq	r0, lr, fp, lsl #6
    12cc:	00160300 	andseq	r0, r6, r0, lsl #6
    12d0:	0b3a0e03 	bleq	e84ae4 <_Min_Heap_Size+0xe842e4>
    12d4:	0b390b3b 	bleq	e43fc8 <_Min_Heap_Size+0xe437c8>
    12d8:	00001349 	andeq	r1, r0, r9, asr #6
    12dc:	0b002404 	bleq	a2f4 <_Min_Heap_Size+0x9af4>
    12e0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    12e4:	05000008 	streq	r0, [r0, #-8]
    12e8:	13490026 	movtne	r0, #36902	; 0x9026
    12ec:	35060000 	strcc	r0, [r6, #-0]
    12f0:	00134900 	andseq	r4, r3, r0, lsl #18
    12f4:	00340700 	eorseq	r0, r4, r0, lsl #14
    12f8:	0b3a0e03 	bleq	e84b0c <_Min_Heap_Size+0xe8430c>
    12fc:	0b390b3b 	bleq	e43ff0 <_Min_Heap_Size+0xe437f0>
    1300:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 11e4 <_Min_Heap_Size+0x9e4>
    1304:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1308:	49010108 	stmdbmi	r1, {r3, r8}
    130c:	00130113 	andseq	r0, r3, r3, lsl r1
    1310:	00210900 	eoreq	r0, r1, r0, lsl #18
    1314:	0b2f1349 	bleq	bc6040 <_Min_Heap_Size+0xbc5840>
    1318:	130a0000 	movwne	r0, #40960	; 0xa000
    131c:	3a0b0b01 	bcc	2c3f28 <_Min_Heap_Size+0x2c3728>
    1320:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1324:	0013010b 	andseq	r0, r3, fp, lsl #2
    1328:	000d0b00 	andeq	r0, sp, r0, lsl #22
    132c:	0b3a0803 	bleq	e83340 <_Min_Heap_Size+0xe82b40>
    1330:	0b39053b 	bleq	e42824 <_Min_Heap_Size+0xe42024>
    1334:	0a381349 	beq	e06060 <_Min_Heap_Size+0xe05860>
    1338:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    133c:	3a0e0300 	bcc	381f44 <_Min_Heap_Size+0x381744>
    1340:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1344:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1348:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    134c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1350:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1354:	13490b39 	movtne	r0, #39737	; 0x9b39
    1358:	040e0000 	streq	r0, [lr], #-0
    135c:	0b0b3e01 	bleq	2d0b68 <_Min_Heap_Size+0x2d0368>
    1360:	3a13490b 	bcc	4d3794 <_Min_Heap_Size+0x4d2f94>
    1364:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1368:	0013010b 	andseq	r0, r3, fp, lsl #2
    136c:	00280f00 	eoreq	r0, r8, r0, lsl #30
    1370:	0b1c0e03 	bleq	704b84 <_Min_Heap_Size+0x704384>
    1374:	28100000 	ldmdacs	r0, {}	; <UNPREDICTABLE>
    1378:	1c080300 	stcne	3, cr0, [r8], {-0}
    137c:	1100000b 	tstne	r0, fp
    1380:	0b0b0113 	bleq	2c17d4 <_Min_Heap_Size+0x2c0fd4>
    1384:	0b3b0b3a 	bleq	ec4074 <_Min_Heap_Size+0xec3874>
    1388:	13010b39 	movwne	r0, #6969	; 0x1b39
    138c:	0d120000 	ldceq	0, cr0, [r2, #-0]
    1390:	3a0e0300 	bcc	381f98 <_Min_Heap_Size+0x381798>
    1394:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1398:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    139c:	1300000a 	movwne	r0, #10
    13a0:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    13a4:	0b3a0b0b 	bleq	e83fd8 <_Min_Heap_Size+0xe837d8>
    13a8:	0b390b3b 	bleq	e4409c <_Min_Heap_Size+0xe4389c>
    13ac:	00001301 	andeq	r1, r0, r1, lsl #6
    13b0:	0b000f14 	bleq	5008 <_Min_Heap_Size+0x4808>
    13b4:	0013490b 	andseq	r4, r3, fp, lsl #18
    13b8:	000f1500 	andeq	r1, pc, r0, lsl #10
    13bc:	00000b0b 	andeq	r0, r0, fp, lsl #22
    13c0:	27011516 	smladcs	r1, r6, r5, r1
    13c4:	0013010c 	andseq	r0, r3, ip, lsl #2
    13c8:	00051700 	andeq	r1, r5, r0, lsl #14
    13cc:	00001349 	andeq	r1, r0, r9, asr #6
    13d0:	03000d18 	movweq	r0, #3352	; 0xd18
    13d4:	3b0b3a08 	blcc	2cfbfc <_Min_Heap_Size+0x2cf3fc>
    13d8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    13dc:	000a3813 	andeq	r3, sl, r3, lsl r8
    13e0:	012e1900 			; <UNDEFINED> instruction: 0x012e1900
    13e4:	0b3a0e03 	bleq	e84bf8 <_Min_Heap_Size+0xe843f8>
    13e8:	0b39053b 	bleq	e428dc <_Min_Heap_Size+0xe420dc>
    13ec:	13490c27 	movtne	r0, #39975	; 0x9c27
    13f0:	01120111 	tsteq	r2, r1, lsl r1
    13f4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    13f8:	0013010c 	andseq	r0, r3, ip, lsl #2
    13fc:	00051a00 	andeq	r1, r5, r0, lsl #20
    1400:	0b3a0e03 	bleq	e84c14 <_Min_Heap_Size+0xe84414>
    1404:	0b39053b 	bleq	e428f8 <_Min_Heap_Size+0xe420f8>
    1408:	06021349 	streq	r1, [r2], -r9, asr #6
    140c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1410:	00341b00 	eorseq	r1, r4, r0, lsl #22
    1414:	0b3a0e03 	bleq	e84c28 <_Min_Heap_Size+0xe84428>
    1418:	0b39053b 	bleq	e4290c <_Min_Heap_Size+0xe4210c>
    141c:	06021349 	streq	r1, [r2], -r9, asr #6
    1420:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1424:	00341c00 	eorseq	r1, r4, r0, lsl #24
    1428:	0b3a0803 	bleq	e8343c <_Min_Heap_Size+0xe82c3c>
    142c:	0b39053b 	bleq	e42920 <_Min_Heap_Size+0xe42120>
    1430:	06021349 	streq	r1, [r2], -r9, asr #6
    1434:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1438:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    143c:	0b3a0e03 	bleq	e84c50 <_Min_Heap_Size+0xe84450>
    1440:	0b39053b 	bleq	e42934 <_Min_Heap_Size+0xe42134>
    1444:	13490c27 	movtne	r0, #39975	; 0x9c27
    1448:	01120111 	tsteq	r2, r1, lsl r1
    144c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1450:	0013010c 	andseq	r0, r3, ip, lsl #2
    1454:	00341e00 	eorseq	r1, r4, r0, lsl #28
    1458:	0b3a0e03 	bleq	e84c6c <_Min_Heap_Size+0xe8446c>
    145c:	0b39053b 	bleq	e42950 <_Min_Heap_Size+0xe42150>
    1460:	0a021349 	beq	8618c <_Min_Heap_Size+0x8598c>
    1464:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
    1468:	3a0e0301 	bcc	382074 <_Min_Heap_Size+0x381874>
    146c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1470:	110c270b 	tstne	ip, fp, lsl #14
    1474:	40011201 	andmi	r1, r1, r1, lsl #4
    1478:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    147c:	00001301 	andeq	r1, r0, r1, lsl #6
    1480:	03000520 	movweq	r0, #1312	; 0x520
    1484:	3b0b3a0e 	blcc	2cfcc4 <_Min_Heap_Size+0x2cf4c4>
    1488:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    148c:	000a0213 	andeq	r0, sl, r3, lsl r2
    1490:	012e2100 			; <UNDEFINED> instruction: 0x012e2100
    1494:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1498:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    149c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    14a0:	01111349 	tsteq	r1, r9, asr #6
    14a4:	0a400112 	beq	10018f4 <_Min_Heap_Size+0x10010f4>
    14a8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    14ac:	22000013 	andcs	r0, r0, #19
    14b0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1400 <_Min_Heap_Size+0xc00>
    14b4:	0b3a0e03 	bleq	e84cc8 <_Min_Heap_Size+0xe844c8>
    14b8:	0b39053b 	bleq	e429ac <_Min_Heap_Size+0xe421ac>
    14bc:	01110c27 	tsteq	r1, r7, lsr #24
    14c0:	06400112 			; <UNDEFINED> instruction: 0x06400112
    14c4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    14c8:	23000013 	movwcs	r0, #19
    14cc:	01018289 	smlabbeq	r1, r9, r2, r8
    14d0:	13010111 	movwne	r0, #4369	; 0x1111
    14d4:	8a240000 	bhi	9014dc <_Min_Heap_Size+0x900cdc>
    14d8:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    14dc:	0a42910a 	beq	10a590c <_Min_Heap_Size+0x10a510c>
    14e0:	89250000 	stmdbhi	r5!, {}	; <UNPREDICTABLE>
    14e4:	11010182 	smlabbne	r1, r2, r1, r0
    14e8:	26000001 	strcs	r0, [r0], -r1
    14ec:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 143c <_Min_Heap_Size+0xc3c>
    14f0:	0b3a0e03 	bleq	e84d04 <_Min_Heap_Size+0xe84504>
    14f4:	0b39053b 	bleq	e429e8 <_Min_Heap_Size+0xe421e8>
    14f8:	13490c27 	movtne	r0, #39975	; 0x9c27
    14fc:	01120111 	tsteq	r2, r1, lsl r1
    1500:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1504:	0013010c 	andseq	r0, r3, ip, lsl #2
    1508:	00342700 	eorseq	r2, r4, r0, lsl #14
    150c:	0b3a0e03 	bleq	e84d20 <_Min_Heap_Size+0xe84520>
    1510:	0b39053b 	bleq	e42a04 <_Min_Heap_Size+0xe42204>
    1514:	0b1c1349 	bleq	706240 <_Min_Heap_Size+0x705a40>
    1518:	89280000 	stmdbhi	r8!, {}	; <UNPREDICTABLE>
    151c:	11000182 	smlabbne	r0, r2, r1, r0
    1520:	00133101 	andseq	r3, r3, r1, lsl #2
    1524:	82892900 	addhi	r2, r9, #0, 18
    1528:	01110101 	tsteq	r1, r1, lsl #2
    152c:	00001331 	andeq	r1, r0, r1, lsr r3
    1530:	0182892a 	orreq	r8, r2, sl, lsr #18
    1534:	31011101 	tstcc	r1, r1, lsl #2
    1538:	00130113 	andseq	r0, r3, r3, lsl r1
    153c:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
    1540:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1544:	0b3b0b3a 	bleq	ec4234 <_Min_Heap_Size+0xec3a34>
    1548:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    154c:	01111349 	tsteq	r1, r9, asr #6
    1550:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1554:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1558:	2c000013 	stccs	0, cr0, [r0], {19}
    155c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1560:	0b3b0b3a 	bleq	ec4250 <_Min_Heap_Size+0xec3a50>
    1564:	13490b39 	movtne	r0, #39737	; 0x9b39
    1568:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    156c:	2d000006 	stccs	0, cr0, [r0, #-24]	; 0xffffffe8
    1570:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1574:	0b3b0b3a 	bleq	ec4264 <_Min_Heap_Size+0xec3a64>
    1578:	13490b39 	movtne	r0, #39737	; 0x9b39
    157c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1580:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
    1584:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1588:	0b3b0b3a 	bleq	ec4278 <_Min_Heap_Size+0xec3a78>
    158c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1590:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1594:	2f000006 	svccs	0x00000006
    1598:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 14e8 <_Min_Heap_Size+0xce8>
    159c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    15a0:	3a0e030e 	bcc	3821e0 <_Min_Heap_Size+0x3819e0>
    15a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    15a8:	3000000b 	andcc	r0, r0, fp
    15ac:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 14fc <_Min_Heap_Size+0xcfc>
    15b0:	40870c3c 	addmi	r0, r7, ip, lsr ip
    15b4:	3a0e030e 	bcc	3821f4 <_Min_Heap_Size+0x3819f4>
    15b8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    15bc:	0000000b 	andeq	r0, r0, fp
    15c0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    15c4:	030b130e 	movweq	r1, #45838	; 0xb30e
    15c8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    15cc:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    15d0:	00061001 	andeq	r1, r6, r1
    15d4:	01040200 	mrseq	r0, R12_usr
    15d8:	0b0b0b3e 	bleq	2c42d8 <_Min_Heap_Size+0x2c3ad8>
    15dc:	0b3a1349 	bleq	e86308 <_Min_Heap_Size+0xe85b08>
    15e0:	0b390b3b 	bleq	e442d4 <_Min_Heap_Size+0xe43ad4>
    15e4:	00001301 	andeq	r1, r0, r1, lsl #6
    15e8:	03002803 	movweq	r2, #2051	; 0x803
    15ec:	000d1c0e 	andeq	r1, sp, lr, lsl #24
    15f0:	00280400 	eoreq	r0, r8, r0, lsl #8
    15f4:	0b1c0e03 	bleq	704e08 <_Min_Heap_Size+0x704608>
    15f8:	24050000 	strcs	r0, [r5], #-0
    15fc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1600:	000e030b 	andeq	r0, lr, fp, lsl #6
    1604:	00160600 	andseq	r0, r6, r0, lsl #12
    1608:	0b3a0e03 	bleq	e84e1c <_Min_Heap_Size+0xe8461c>
    160c:	0b390b3b 	bleq	e44300 <_Min_Heap_Size+0xe43b00>
    1610:	00001349 	andeq	r1, r0, r9, asr #6
    1614:	0b002407 	bleq	a638 <_Min_Heap_Size+0x9e38>
    1618:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    161c:	08000008 	stmdaeq	r0, {r3}
    1620:	13490035 	movtne	r0, #36917	; 0x9035
    1624:	26090000 	strcs	r0, [r9], -r0
    1628:	00134900 	andseq	r4, r3, r0, lsl #18
    162c:	01130a00 	tsteq	r3, r0, lsl #20
    1630:	0b3a050b 	bleq	e82a64 <_Min_Heap_Size+0xe82264>
    1634:	0b39053b 	bleq	e42b28 <_Min_Heap_Size+0xe42328>
    1638:	00001301 	andeq	r1, r0, r1, lsl #6
    163c:	03000d0b 	movweq	r0, #3339	; 0xd0b
    1640:	3b0b3a0e 	blcc	2cfe80 <_Min_Heap_Size+0x2cf680>
    1644:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1648:	000a3813 	andeq	r3, sl, r3, lsl r8
    164c:	000d0c00 	andeq	r0, sp, r0, lsl #24
    1650:	0b3a0803 	bleq	e83664 <_Min_Heap_Size+0xe82e64>
    1654:	0b39053b 	bleq	e42b48 <_Min_Heap_Size+0xe42348>
    1658:	0a381349 	beq	e06384 <_Min_Heap_Size+0xe05b84>
    165c:	010d0000 	mrseq	r0, (UNDEF: 13)
    1660:	01134901 	tsteq	r3, r1, lsl #18
    1664:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    1668:	13490021 	movtne	r0, #36897	; 0x9021
    166c:	00000b2f 	andeq	r0, r0, pc, lsr #22
    1670:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
    1674:	00052f13 	andeq	r2, r5, r3, lsl pc
    1678:	00161000 	andseq	r1, r6, r0
    167c:	0b3a0e03 	bleq	e84e90 <_Min_Heap_Size+0xe84690>
    1680:	0b39053b 	bleq	e42b74 <_Min_Heap_Size+0xe42374>
    1684:	00001349 	andeq	r1, r0, r9, asr #6
    1688:	0b011311 	bleq	462d4 <_Min_Heap_Size+0x45ad4>
    168c:	3b0b3a0b 	blcc	2cfec0 <_Min_Heap_Size+0x2cf6c0>
    1690:	010b3905 	tsteq	fp, r5, lsl #18
    1694:	12000013 	andne	r0, r0, #19
    1698:	08030028 	stmdaeq	r3, {r3, r5}
    169c:	00000b1c 	andeq	r0, r0, ip, lsl fp
    16a0:	0b011313 	bleq	462f4 <_Min_Heap_Size+0x45af4>
    16a4:	3b0b3a0b 	blcc	2cfed8 <_Min_Heap_Size+0x2cf6d8>
    16a8:	010b390b 	tsteq	fp, fp, lsl #18
    16ac:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    16b0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    16b4:	0b3b0b3a 	bleq	ec43a4 <_Min_Heap_Size+0xec3ba4>
    16b8:	13490b39 	movtne	r0, #39737	; 0x9b39
    16bc:	00000a38 	andeq	r0, r0, r8, lsr sl
    16c0:	3f002e15 	svccc	0x00002e15
    16c4:	3a0e030c 	bcc	3822fc <_Min_Heap_Size+0x381afc>
    16c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    16cc:	110c270b 	tstne	ip, fp, lsl #14
    16d0:	40011201 	andmi	r1, r1, r1, lsl #4
    16d4:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    16d8:	2e160000 	cdpcs	0, 1, cr0, cr6, cr0, {0}
    16dc:	030c3f01 	movweq	r3, #52993	; 0xcf01
    16e0:	3b0b3a0e 	blcc	2cff20 <_Min_Heap_Size+0x2cf720>
    16e4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    16e8:	1201110c 	andne	r1, r1, #12, 2
    16ec:	97064001 	strls	r4, [r6, -r1]
    16f0:	13010c42 	movwne	r0, #7234	; 0x1c42
    16f4:	89170000 	ldmdbhi	r7, {}	; <UNPREDICTABLE>
    16f8:	11000182 	smlabbne	r0, r2, r1, r0
    16fc:	00133101 	andseq	r3, r3, r1, lsl #2
    1700:	00051800 	andeq	r1, r5, r0, lsl #16
    1704:	0b3a0e03 	bleq	e84f18 <_Min_Heap_Size+0xe84718>
    1708:	0b39053b 	bleq	e42bfc <_Min_Heap_Size+0xe423fc>
    170c:	06021349 	streq	r1, [r2], -r9, asr #6
    1710:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1714:	82891900 	addhi	r1, r9, #0, 18
    1718:	01110101 	tsteq	r1, r1, lsl #2
    171c:	00001331 	andeq	r1, r0, r1, lsr r3
    1720:	01828a1a 	orreq	r8, r2, sl, lsl sl
    1724:	910a0200 	mrsls	r0, R10_fiq
    1728:	00000a42 	andeq	r0, r0, r2, asr #20
    172c:	3f012e1b 	svccc	0x00012e1b
    1730:	3a0e030c 	bcc	382368 <_Min_Heap_Size+0x381b68>
    1734:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1738:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    173c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1740:	97064001 	strls	r4, [r6, -r1]
    1744:	13010c42 	movwne	r0, #7234	; 0x1c42
    1748:	1d1c0000 	ldcne	0, cr0, [ip, #-0]
    174c:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1750:	0b42b801 	bleq	10af75c <_Min_Heap_Size+0x10aef5c>
    1754:	0b580655 	bleq	16030b0 <_Min_Heap_Size+0x16028b0>
    1758:	0b570559 	bleq	15c2cc4 <_Min_Heap_Size+0x15c24c4>
    175c:	00001301 	andeq	r1, r0, r1, lsl #6
    1760:	3100051d 	tstcc	r0, sp, lsl r5
    1764:	b7060213 	smladlt	r6, r3, r2, r0
    1768:	00000642 	andeq	r0, r0, r2, asr #12
    176c:	31011d1e 	tstcc	r1, lr, lsl sp
    1770:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1774:	01110b42 	tsteq	r1, r2, asr #22
    1778:	0b580112 	bleq	1601bc8 <_Min_Heap_Size+0x16013c8>
    177c:	0b570559 	bleq	15c2ce8 <_Min_Heap_Size+0x15c24e8>
    1780:	00001301 	andeq	r1, r0, r1, lsl #6
    1784:	55010b1f 	strpl	r0, [r1, #-2847]	; 0xfffff4e1
    1788:	20000006 	andcs	r0, r0, r6
    178c:	13310034 	teqne	r1, #52	; 0x34
    1790:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1794:	21000006 	tstcs	r0, r6
    1798:	0b0b000f 	bleq	2c17dc <_Min_Heap_Size+0x2c0fdc>
    179c:	00001349 	andeq	r1, r0, r9, asr #6
    17a0:	3f012e22 	svccc	0x00012e22
    17a4:	3a0e030c 	bcc	3823dc <_Min_Heap_Size+0x381bdc>
    17a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    17ac:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    17b0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    17b4:	970a4001 	strls	r4, [sl, -r1]
    17b8:	13010c42 	movwne	r0, #7234	; 0x1c42
    17bc:	1d230000 	stcne	0, cr0, [r3, #-0]
    17c0:	52133100 	andspl	r3, r3, #0, 2
    17c4:	0b42b801 	bleq	10af7d0 <_Min_Heap_Size+0x10aefd0>
    17c8:	01120111 	tsteq	r2, r1, lsl r1
    17cc:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    17d0:	00000b57 	andeq	r0, r0, r7, asr fp
    17d4:	01828924 	orreq	r8, r2, r4, lsr #18
    17d8:	31011101 	tstcc	r1, r1, lsl #2
    17dc:	00130113 	andseq	r0, r3, r3, lsl r1
    17e0:	012e2500 			; <UNDEFINED> instruction: 0x012e2500
    17e4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    17e8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    17ec:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    17f0:	01120111 	tsteq	r2, r1, lsl r1
    17f4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    17f8:	0013010c 	andseq	r0, r3, ip, lsl #2
    17fc:	012e2600 			; <UNDEFINED> instruction: 0x012e2600
    1800:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1804:	0b3b0b3a 	bleq	ec44f4 <_Min_Heap_Size+0xec3cf4>
    1808:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    180c:	01111349 	tsteq	r1, r9, asr #6
    1810:	0a400112 	beq	1001c60 <_Min_Heap_Size+0x1001460>
    1814:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1818:	27000013 	smladcs	r0, r3, r0, r0
    181c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1820:	0b3b0b3a 	bleq	ec4510 <_Min_Heap_Size+0xec3d10>
    1824:	13490b39 	movtne	r0, #39737	; 0x9b39
    1828:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    182c:	28000006 	stmdacs	r0, {r1, r2}
    1830:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1834:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1838:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    183c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1840:	000b570b 	andeq	r5, fp, fp, lsl #14
    1844:	011d2900 	tsteq	sp, r0, lsl #18
    1848:	01521331 	cmpeq	r2, r1, lsr r3
    184c:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    1850:	58011201 	stmdapl	r1, {r0, r9, ip}
    1854:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    1858:	2a00000b 	bcs	188c <_Min_Heap_Size+0x108c>
    185c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 17ac <_Min_Heap_Size+0xfac>
    1860:	0b3a0e03 	bleq	e85074 <_Min_Heap_Size+0xe84874>
    1864:	0b390b3b 	bleq	e44558 <_Min_Heap_Size+0xe43d58>
    1868:	01110c27 	tsteq	r1, r7, lsr #24
    186c:	0a400112 	beq	1001cbc <_Min_Heap_Size+0x10014bc>
    1870:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1874:	2b000013 	blcs	18c8 <_Min_Heap_Size+0x10c8>
    1878:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 17c8 <_Min_Heap_Size+0xfc8>
    187c:	0b3a0e03 	bleq	e85090 <_Min_Heap_Size+0xe84890>
    1880:	0b390b3b 	bleq	e44574 <_Min_Heap_Size+0xe43d74>
    1884:	01110c27 	tsteq	r1, r7, lsr #24
    1888:	06400112 			; <UNDEFINED> instruction: 0x06400112
    188c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1890:	2c000013 	stccs	0, cr0, [r0], {19}
    1894:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1898:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    189c:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    18a0:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    18a4:	010b570b 	tsteq	fp, fp, lsl #14
    18a8:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
    18ac:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    18b0:	0b3b0b3a 	bleq	ec45a0 <_Min_Heap_Size+0xec3da0>
    18b4:	13490b39 	movtne	r0, #39737	; 0x9b39
    18b8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    18bc:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
    18c0:	1331001d 	teqne	r1, #29
    18c4:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    18c8:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    18cc:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    18d0:	000b570b 	andeq	r5, fp, fp, lsl #14
    18d4:	011d2f00 	tsteq	sp, r0, lsl #30
    18d8:	01521331 	cmpeq	r2, r1, lsr r3
    18dc:	550b42b8 	strpl	r4, [fp, #-696]	; 0xfffffd48
    18e0:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
    18e4:	010b570b 	tsteq	fp, fp, lsl #14
    18e8:	30000013 	andcc	r0, r0, r3, lsl r0
    18ec:	0e03012e 	adfeqsp	f0, f3, #0.5
    18f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    18f4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    18f8:	0b201349 	bleq	806624 <_Min_Heap_Size+0x805e24>
    18fc:	00001301 	andeq	r1, r0, r1, lsl #6
    1900:	03000531 	movweq	r0, #1329	; 0x531
    1904:	3b0b3a0e 	blcc	2d0144 <_Min_Heap_Size+0x2cf944>
    1908:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    190c:	32000013 	andcc	r0, r0, #19
    1910:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
    1914:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1918:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    191c:	200c0187 	andcs	r0, ip, r7, lsl #3
    1920:	3300000b 	movwcc	r0, #11
    1924:	0e03012e 	adfeqsp	f0, f3, #0.5
    1928:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    192c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1930:	13010b20 	movwne	r0, #6944	; 0x1b20
    1934:	34340000 	ldrtcc	r0, [r4], #-0
    1938:	3a0e0300 	bcc	382540 <_Min_Heap_Size+0x381d40>
    193c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1940:	0013490b 	andseq	r4, r3, fp, lsl #18
    1944:	002e3500 	eoreq	r3, lr, r0, lsl #10
    1948:	0b3a0e03 	bleq	e8515c <_Min_Heap_Size+0xe8495c>
    194c:	0b39053b 	bleq	e42e40 <_Min_Heap_Size+0xe42640>
    1950:	13490c27 	movtne	r0, #39975	; 0x9c27
    1954:	00000b20 	andeq	r0, r0, r0, lsr #22
    1958:	03002e36 	movweq	r2, #3638	; 0xe36
    195c:	3b0b3a0e 	blcc	2d019c <_Min_Heap_Size+0x2cf99c>
    1960:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1964:	000b200c 	andeq	r2, fp, ip
    1968:	002e3700 	eoreq	r3, lr, r0, lsl #14
    196c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1970:	030e4087 	movweq	r4, #57479	; 0xe087
    1974:	3b0b3a0e 	blcc	2d01b4 <_Min_Heap_Size+0x2cf9b4>
    1978:	000b3905 	andeq	r3, fp, r5, lsl #18
    197c:	11010000 	mrsne	r0, (UNDEF: 1)
    1980:	130e2501 	movwne	r2, #58625	; 0xe501
    1984:	1b0e030b 	blne	3825b8 <_Min_Heap_Size+0x381db8>
    1988:	1106550e 	tstne	r6, lr, lsl #10
    198c:	10015201 	andne	r5, r1, r1, lsl #4
    1990:	02000006 	andeq	r0, r0, #6
    1994:	0b3e0104 	bleq	f81dac <_Min_Heap_Size+0xf815ac>
    1998:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    199c:	0b3b0b3a 	bleq	ec468c <_Min_Heap_Size+0xec3e8c>
    19a0:	13010b39 	movwne	r0, #6969	; 0x1b39
    19a4:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
    19a8:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    19ac:	0400000d 	streq	r0, [r0], #-13
    19b0:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    19b4:	00000b1c 	andeq	r0, r0, ip, lsl fp
    19b8:	0b002405 	bleq	a9d4 <_Min_Heap_Size+0xa1d4>
    19bc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    19c0:	0600000e 	streq	r0, [r0], -lr
    19c4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    19c8:	0b3b0b3a 	bleq	ec46b8 <_Min_Heap_Size+0xec3eb8>
    19cc:	13490b39 	movtne	r0, #39737	; 0x9b39
    19d0:	24070000 	strcs	r0, [r7], #-0
    19d4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    19d8:	0008030b 	andeq	r0, r8, fp, lsl #6
    19dc:	00350800 	eorseq	r0, r5, r0, lsl #16
    19e0:	00001349 	andeq	r1, r0, r9, asr #6
    19e4:	49002609 	stmdbmi	r0, {r0, r3, r9, sl, sp}
    19e8:	0a000013 	beq	1a3c <_Min_Heap_Size+0x123c>
    19ec:	0b0b0113 	bleq	2c1e40 <_Min_Heap_Size+0x2c1640>
    19f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    19f4:	13010b39 	movwne	r0, #6969	; 0x1b39
    19f8:	0d0b0000 	stceq	0, cr0, [fp, #-0]
    19fc:	3a0e0300 	bcc	382604 <_Min_Heap_Size+0x381e04>
    1a00:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a04:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1a08:	0c00000a 	stceq	0, cr0, [r0], {10}
    1a0c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1a10:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1a14:	13490b39 	movtne	r0, #39737	; 0x9b39
    1a18:	00000a38 	andeq	r0, r0, r8, lsr sl
    1a1c:	0300160d 	movweq	r1, #1549	; 0x60d
    1a20:	3b0b3a0e 	blcc	2d0260 <_Min_Heap_Size+0x2cfa60>
    1a24:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1a28:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    1a2c:	13490101 	movtne	r0, #37121	; 0x9101
    1a30:	00001301 	andeq	r1, r0, r1, lsl #6
    1a34:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
    1a38:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1a3c:	00341000 	eorseq	r1, r4, r0
    1a40:	0b3a0e03 	bleq	e85254 <_Min_Heap_Size+0xe84a54>
    1a44:	0b390b3b 	bleq	e44738 <_Min_Heap_Size+0xe43f38>
    1a48:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 192c <_Min_Heap_Size+0x112c>
    1a4c:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1a50:	47003411 	smladmi	r0, r1, r4, r3
    1a54:	3b0b3a13 	blcc	2d02a8 <_Min_Heap_Size+0x2cfaa8>
    1a58:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
    1a5c:	1200000a 	andne	r0, r0, #10
    1a60:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 19b0 <_Min_Heap_Size+0x11b0>
    1a64:	0b3a0e03 	bleq	e85278 <_Min_Heap_Size+0xe84a78>
    1a68:	0b39053b 	bleq	e42f5c <_Min_Heap_Size+0xe4275c>
    1a6c:	13490c27 	movtne	r0, #39975	; 0x9c27
    1a70:	01120111 	tsteq	r2, r1, lsl r1
    1a74:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1a78:	1300000c 	movwne	r0, #12
    1a7c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 19cc <_Min_Heap_Size+0x11cc>
    1a80:	0b3a0e03 	bleq	e85294 <_Min_Heap_Size+0xe84a94>
    1a84:	0b39053b 	bleq	e42f78 <_Min_Heap_Size+0xe42778>
    1a88:	01110c27 	tsteq	r1, r7, lsr #24
    1a8c:	0a400112 	beq	1001edc <_Min_Heap_Size+0x10016dc>
    1a90:	000c4297 	muleq	ip, r7, r2
    1a94:	012e1400 			; <UNDEFINED> instruction: 0x012e1400
    1a98:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1a9c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1aa0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1aa4:	01120111 	tsteq	r2, r1, lsl r1
    1aa8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1aac:	0013010c 	andseq	r0, r3, ip, lsl #2
    1ab0:	00051500 	andeq	r1, r5, r0, lsl #10
    1ab4:	0b3a0e03 	bleq	e852c8 <_Min_Heap_Size+0xe84ac8>
    1ab8:	0b39053b 	bleq	e42fac <_Min_Heap_Size+0xe427ac>
    1abc:	06021349 	streq	r1, [r2], -r9, asr #6
    1ac0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1ac4:	00341600 	eorseq	r1, r4, r0, lsl #12
    1ac8:	0b3a0e03 	bleq	e852dc <_Min_Heap_Size+0xe84adc>
    1acc:	0b39053b 	bleq	e42fc0 <_Min_Heap_Size+0xe427c0>
    1ad0:	06021349 	streq	r1, [r2], -r9, asr #6
    1ad4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1ad8:	82891700 	addhi	r1, r9, #0, 14
    1adc:	01110001 	tsteq	r1, r1
    1ae0:	00001331 	andeq	r1, r0, r1, lsr r3
    1ae4:	3f012e18 	svccc	0x00012e18
    1ae8:	3a0e030c 	bcc	382720 <_Min_Heap_Size+0x381f20>
    1aec:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1af0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1af4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1af8:	97064001 	strls	r4, [r6, -r1]
    1afc:	13010c42 	movwne	r0, #7234	; 0x1c42
    1b00:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
    1b04:	11010182 	smlabbne	r1, r2, r1, r0
    1b08:	01133101 	tsteq	r3, r1, lsl #2
    1b0c:	1a000013 	bne	1b60 <_Min_Heap_Size+0x1360>
    1b10:	0001828a 	andeq	r8, r1, sl, lsl #5
    1b14:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1b18:	1b00000a 	blne	1b48 <_Min_Heap_Size+0x1348>
    1b1c:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1a6c <_Min_Heap_Size+0x126c>
    1b20:	0b3a0e03 	bleq	e85334 <_Min_Heap_Size+0xe84b34>
    1b24:	0b390b3b 	bleq	e44818 <_Min_Heap_Size+0xe44018>
    1b28:	13490c27 	movtne	r0, #39975	; 0x9c27
    1b2c:	01120111 	tsteq	r2, r1, lsl r1
    1b30:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1b34:	0013010c 	andseq	r0, r3, ip, lsl #2
    1b38:	00051c00 	andeq	r1, r5, r0, lsl #24
    1b3c:	0b3a0e03 	bleq	e85350 <_Min_Heap_Size+0xe84b50>
    1b40:	0b390b3b 	bleq	e44834 <_Min_Heap_Size+0xe44034>
    1b44:	06021349 	streq	r1, [r2], -r9, asr #6
    1b48:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1b4c:	82891d00 	addhi	r1, r9, #0, 26
    1b50:	01110101 	tsteq	r1, r1, lsl #2
    1b54:	00001331 	andeq	r1, r0, r1, lsr r3
    1b58:	3f002e1e 	svccc	0x00002e1e
    1b5c:	3a0e030c 	bcc	382794 <_Min_Heap_Size+0x381f94>
    1b60:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b64:	110c270b 	tstne	ip, fp, lsl #14
    1b68:	40011201 	andmi	r1, r1, r1, lsl #4
    1b6c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1b70:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
    1b74:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1b78:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1b7c:	0b3a0e03 	bleq	e85390 <_Min_Heap_Size+0xe84b90>
    1b80:	0b39053b 	bleq	e43074 <_Min_Heap_Size+0xe42874>
    1b84:	01000000 	mrseq	r0, (UNDEF: 0)
    1b88:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1b8c:	0e030b13 	vmoveq.32	d3[0], r0
    1b90:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    1b94:	01520111 	cmpeq	r2, r1, lsl r1
    1b98:	00000610 	andeq	r0, r0, r0, lsl r6
    1b9c:	0b002402 	bleq	abac <_Min_Heap_Size+0xa3ac>
    1ba0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1ba4:	0300000e 	movweq	r0, #14
    1ba8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1bac:	0b3b0b3a 	bleq	ec489c <_Min_Heap_Size+0xec409c>
    1bb0:	13490b39 	movtne	r0, #39737	; 0x9b39
    1bb4:	24040000 	strcs	r0, [r4], #-0
    1bb8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1bbc:	0008030b 	andeq	r0, r8, fp, lsl #6
    1bc0:	00350500 	eorseq	r0, r5, r0, lsl #10
    1bc4:	00001349 	andeq	r1, r0, r9, asr #6
    1bc8:	49002606 	stmdbmi	r0, {r1, r2, r9, sl, sp}
    1bcc:	07000013 	smladeq	r0, r3, r0, r0
    1bd0:	0b0b0113 	bleq	2c2024 <_Min_Heap_Size+0x2c1824>
    1bd4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1bd8:	13010b39 	movwne	r0, #6969	; 0x1b39
    1bdc:	0d080000 	stceq	0, cr0, [r8, #-0]
    1be0:	3a0e0300 	bcc	3827e8 <_Min_Heap_Size+0x381fe8>
    1be4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1be8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1bec:	0900000a 	stmdbeq	r0, {r1, r3}
    1bf0:	0803000d 	stmdaeq	r3, {r0, r2, r3}
    1bf4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1bf8:	13490b39 	movtne	r0, #39737	; 0x9b39
    1bfc:	00000a38 	andeq	r0, r0, r8, lsr sl
    1c00:	4901010a 	stmdbmi	r1, {r1, r3, r8}
    1c04:	00130113 	andseq	r0, r3, r3, lsl r1
    1c08:	00210b00 	eoreq	r0, r1, r0, lsl #22
    1c0c:	0b2f1349 	bleq	bc6938 <_Min_Heap_Size+0xbc6138>
    1c10:	160c0000 	strne	r0, [ip], -r0
    1c14:	3a0e0300 	bcc	38281c <_Min_Heap_Size+0x38201c>
    1c18:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c1c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1c20:	00340d00 	eorseq	r0, r4, r0, lsl #26
    1c24:	0b3a0e03 	bleq	e85438 <_Min_Heap_Size+0xe84c38>
    1c28:	0b390b3b 	bleq	e4491c <_Min_Heap_Size+0xe4411c>
    1c2c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1b10 <_Min_Heap_Size+0x1310>
    1c30:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1c34:	4700340e 	strmi	r3, [r0, -lr, lsl #8]
    1c38:	3b0b3a13 	blcc	2d048c <_Min_Heap_Size+0x2cfc8c>
    1c3c:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
    1c40:	0f00000a 	svceq	0x0000000a
    1c44:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1b94 <_Min_Heap_Size+0x1394>
    1c48:	0b3a0e03 	bleq	e8545c <_Min_Heap_Size+0xe84c5c>
    1c4c:	0b390b3b 	bleq	e44940 <_Min_Heap_Size+0xe44140>
    1c50:	01110c27 	tsteq	r1, r7, lsr #24
    1c54:	0a400112 	beq	10020a4 <_Min_Heap_Size+0x10018a4>
    1c58:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1c5c:	10000013 	andne	r0, r0, r3, lsl r0
    1c60:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1c64:	0b3b0b3a 	bleq	ec4954 <_Min_Heap_Size+0xec4154>
    1c68:	13490b39 	movtne	r0, #39737	; 0x9b39
    1c6c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1c70:	11000006 	tstne	r0, r6
    1c74:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1c78:	0b3b0b3a 	bleq	ec4968 <_Min_Heap_Size+0xec4168>
    1c7c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1c80:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1c84:	12000006 	andne	r0, r0, #6
    1c88:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1bd8 <_Min_Heap_Size+0x13d8>
    1c8c:	0b3a0e03 	bleq	e854a0 <_Min_Heap_Size+0xe84ca0>
    1c90:	0b390b3b 	bleq	e44984 <_Min_Heap_Size+0xe44184>
    1c94:	01110c27 	tsteq	r1, r7, lsr #24
    1c98:	0a400112 	beq	10020e8 <_Min_Heap_Size+0x10018e8>
    1c9c:	000c4297 	muleq	ip, r7, r2
    1ca0:	11010000 	mrsne	r0, (UNDEF: 1)
    1ca4:	130e2501 	movwne	r2, #58625	; 0xe501
    1ca8:	1b0e030b 	blne	3828dc <_Min_Heap_Size+0x3820dc>
    1cac:	1106550e 	tstne	r6, lr, lsl #10
    1cb0:	10015201 	andne	r5, r1, r1, lsl #4
    1cb4:	02000006 	andeq	r0, r0, #6
    1cb8:	0b0b0024 	bleq	2c1d50 <_Min_Heap_Size+0x2c1550>
    1cbc:	0e030b3e 	vmoveq.16	d3[0], r0
    1cc0:	16030000 	strne	r0, [r3], -r0
    1cc4:	3a0e0300 	bcc	3828cc <_Min_Heap_Size+0x3820cc>
    1cc8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ccc:	0013490b 	andseq	r4, r3, fp, lsl #18
    1cd0:	00240400 	eoreq	r0, r4, r0, lsl #8
    1cd4:	0b3e0b0b 	bleq	f84908 <_Min_Heap_Size+0xf84108>
    1cd8:	00000803 	andeq	r0, r0, r3, lsl #16
    1cdc:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
    1ce0:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1ce4:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1ce8:	0b3a0b0b 	bleq	e8491c <_Min_Heap_Size+0xe8411c>
    1cec:	0b390b3b 	bleq	e449e0 <_Min_Heap_Size+0xe441e0>
    1cf0:	00001301 	andeq	r1, r0, r1, lsl #6
    1cf4:	03000d07 	movweq	r0, #3335	; 0xd07
    1cf8:	3b0b3a08 	blcc	2d0520 <_Min_Heap_Size+0x2cfd20>
    1cfc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1d00:	000a3813 	andeq	r3, sl, r3, lsl r8
    1d04:	000d0800 	andeq	r0, sp, r0, lsl #16
    1d08:	0b3a0e03 	bleq	e8551c <_Min_Heap_Size+0xe84d1c>
    1d0c:	0b390b3b 	bleq	e44a00 <_Min_Heap_Size+0xe44200>
    1d10:	0a381349 	beq	e06a3c <_Min_Heap_Size+0xe0623c>
    1d14:	34090000 	strcc	r0, [r9], #-0
    1d18:	3a0e0300 	bcc	382920 <_Min_Heap_Size+0x382120>
    1d1c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d20:	3f13490b 	svccc	0x0013490b
    1d24:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    1d28:	00340a00 	eorseq	r0, r4, r0, lsl #20
    1d2c:	0b3a0e03 	bleq	e85540 <_Min_Heap_Size+0xe84d40>
    1d30:	0b390b3b 	bleq	e44a24 <_Min_Heap_Size+0xe44224>
    1d34:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1c18 <_Min_Heap_Size+0x1418>
    1d38:	00000a02 	andeq	r0, r0, r2, lsl #20
    1d3c:	3f002e0b 	svccc	0x00002e0b
    1d40:	3a0e030c 	bcc	382978 <_Min_Heap_Size+0x382178>
    1d44:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d48:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1d4c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1d50:	970a4001 	strls	r4, [sl, -r1]
    1d54:	00000c42 	andeq	r0, r0, r2, asr #24
    1d58:	3f012e0c 	svccc	0x00012e0c
    1d5c:	3a0e030c 	bcc	382994 <_Min_Heap_Size+0x382194>
    1d60:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d64:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1d68:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1d6c:	970a4001 	strls	r4, [sl, -r1]
    1d70:	13010c42 	movwne	r0, #7234	; 0x1c42
    1d74:	1d0d0000 	stcne	0, cr0, [sp, #-0]
    1d78:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1d7c:	0b42b801 	bleq	10afd88 <_Min_Heap_Size+0x10af588>
    1d80:	01120111 	tsteq	r2, r1, lsl r1
    1d84:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    1d88:	00000b57 	andeq	r0, r0, r7, asr fp
    1d8c:	3100340e 	tstcc	r0, lr, lsl #8
    1d90:	b7060213 	smladlt	r6, r3, r2, r0
    1d94:	00000642 	andeq	r0, r0, r2, asr #12
    1d98:	3f012e0f 	svccc	0x00012e0f
    1d9c:	3a0e030c 	bcc	3829d4 <_Min_Heap_Size+0x3821d4>
    1da0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1da4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1da8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1dac:	97064001 	strls	r4, [r6, -r1]
    1db0:	13010c42 	movwne	r0, #7234	; 0x1c42
    1db4:	05100000 	ldreq	r0, [r0, #-0]
    1db8:	3a0e0300 	bcc	3829c0 <_Min_Heap_Size+0x3821c0>
    1dbc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1dc0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1dc4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1dc8:	34110000 	ldrcc	r0, [r1], #-0
    1dcc:	3a0e0300 	bcc	3829d4 <_Min_Heap_Size+0x3821d4>
    1dd0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1dd4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1dd8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1ddc:	34120000 	ldrcc	r0, [r2], #-0
    1de0:	3a080300 	bcc	2029e8 <_Min_Heap_Size+0x2021e8>
    1de4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1de8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1dec:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1df0:	89130000 	ldmdbhi	r3, {}	; <UNPREDICTABLE>
    1df4:	11010182 	smlabbne	r1, r2, r1, r0
    1df8:	01133101 	tsteq	r3, r1, lsl #2
    1dfc:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    1e00:	0001828a 	andeq	r8, r1, sl, lsl #5
    1e04:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1e08:	1500000a 	strne	r0, [r0, #-10]
    1e0c:	00018289 	andeq	r8, r1, r9, lsl #5
    1e10:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1e14:	0f160000 	svceq	0x00160000
    1e18:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1e1c:	17000013 	smladne	r0, r3, r0, r0
    1e20:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1d70 <_Min_Heap_Size+0x1570>
    1e24:	0b3a0e03 	bleq	e85638 <_Min_Heap_Size+0xe84e38>
    1e28:	0b390b3b 	bleq	e44b1c <_Min_Heap_Size+0xe4431c>
    1e2c:	01110c27 	tsteq	r1, r7, lsr #24
    1e30:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1e34:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1e38:	18000013 	stmdane	r0, {r0, r1, r4}
    1e3c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1e40:	0b3b0b3a 	bleq	ec4b30 <_Min_Heap_Size+0xec4330>
    1e44:	13490b39 	movtne	r0, #39737	; 0x9b39
    1e48:	00000a02 	andeq	r0, r0, r2, lsl #20
    1e4c:	01828919 	orreq	r8, r2, r9, lsl r9
    1e50:	31011101 	tstcc	r1, r1, lsl #2
    1e54:	1a000013 	bne	1ea8 <_Min_Heap_Size+0x16a8>
    1e58:	13490101 	movtne	r0, #37121	; 0x9101
    1e5c:	00001301 	andeq	r1, r0, r1, lsl #6
    1e60:	4900211b 	stmdbmi	r0, {r0, r1, r3, r4, r8, sp}
    1e64:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1e68:	012e1c00 			; <UNDEFINED> instruction: 0x012e1c00
    1e6c:	0b3a0e03 	bleq	e85680 <_Min_Heap_Size+0xe84e80>
    1e70:	0b390b3b 	bleq	e44b64 <_Min_Heap_Size+0xe44364>
    1e74:	01110c27 	tsteq	r1, r7, lsr #24
    1e78:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1e7c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1e80:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    1e84:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1dd4 <_Min_Heap_Size+0x15d4>
    1e88:	0b3a0e03 	bleq	e8569c <_Min_Heap_Size+0xe84e9c>
    1e8c:	0b390b3b 	bleq	e44b80 <_Min_Heap_Size+0xe44380>
    1e90:	0c3c0c27 	ldceq	12, cr0, [ip], #-156	; 0xffffff64
    1e94:	00001301 	andeq	r1, r0, r1, lsl #6
    1e98:	4900051e 	stmdbmi	r0, {r1, r2, r3, r4, r8, sl}
    1e9c:	1f000013 	svcne	0x00000013
    1ea0:	0e03012e 	adfeqsp	f0, f3, #0.5
    1ea4:	0b3b0b3a 	bleq	ec4b94 <_Min_Heap_Size+0xec4394>
    1ea8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1eac:	01111349 	tsteq	r1, r9, asr #6
    1eb0:	0a400112 	beq	1002300 <_Min_Heap_Size+0x1001b00>
    1eb4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1eb8:	20000013 	andcs	r0, r0, r3, lsl r0
    1ebc:	08030005 	stmdaeq	r3, {r0, r2}
    1ec0:	0b3b0b3a 	bleq	ec4bb0 <_Min_Heap_Size+0xec43b0>
    1ec4:	13490b39 	movtne	r0, #39737	; 0x9b39
    1ec8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1ecc:	21000006 	tstcs	r0, r6
    1ed0:	0e03012e 	adfeqsp	f0, f3, #0.5
    1ed4:	0b3b0b3a 	bleq	ec4bc4 <_Min_Heap_Size+0xec43c4>
    1ed8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1edc:	01111349 	tsteq	r1, r9, asr #6
    1ee0:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1ee4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1ee8:	22000013 	andcs	r0, r0, #19
    1eec:	0111010b 	tsteq	r1, fp, lsl #2
    1ef0:	00000112 	andeq	r0, r0, r2, lsl r1
    1ef4:	03012e23 	movweq	r2, #7715	; 0x1e23
    1ef8:	3b0b3a0e 	blcc	2d0738 <_Min_Heap_Size+0x2cff38>
    1efc:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1f00:	2013490c 	andscs	r4, r3, ip, lsl #18
    1f04:	0013010b 	andseq	r0, r3, fp, lsl #2
    1f08:	00342400 	eorseq	r2, r4, r0, lsl #8
    1f0c:	0b3a0e03 	bleq	e85720 <_Min_Heap_Size+0xe84f20>
    1f10:	0b39053b 	bleq	e43404 <_Min_Heap_Size+0xe42c04>
    1f14:	00001349 	andeq	r1, r0, r9, asr #6
    1f18:	3f002e25 	svccc	0x00002e25
    1f1c:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1f20:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1f24:	0b3b0b3a 	bleq	ec4c14 <_Min_Heap_Size+0xec4414>
    1f28:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
    1f2c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1f30:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1f34:	0b3a0e03 	bleq	e85748 <_Min_Heap_Size+0xe84f48>
    1f38:	0b390b3b 	bleq	e44c2c <_Min_Heap_Size+0xe4442c>
    1f3c:	01000000 	mrseq	r0, (UNDEF: 0)
    1f40:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1f44:	0e030b13 	vmoveq.32	d3[0], r0
    1f48:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    1f4c:	01520111 	cmpeq	r2, r1, lsl r1
    1f50:	00000610 	andeq	r0, r0, r0, lsl r6
    1f54:	0b002402 	bleq	af64 <_Min_Heap_Size+0xa764>
    1f58:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1f5c:	0300000e 	movweq	r0, #14
    1f60:	0b0b0024 	bleq	2c1ff8 <_Min_Heap_Size+0x2c17f8>
    1f64:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1f68:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
    1f6c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1f70:	3b0b3a0e 	blcc	2d07b0 <_Min_Heap_Size+0x2cffb0>
    1f74:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1f78:	1201110c 	andne	r1, r1, #12, 2
    1f7c:	97064001 	strls	r4, [r6, -r1]
    1f80:	13010c42 	movwne	r0, #7234	; 0x1c42
    1f84:	05050000 	streq	r0, [r5, #-0]
    1f88:	3a0e0300 	bcc	382b90 <_Min_Heap_Size+0x382390>
    1f8c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f90:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1f94:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1f98:	89060000 	stmdbhi	r6, {}	; <UNPREDICTABLE>
    1f9c:	11010182 	smlabbne	r1, r2, r1, r0
    1fa0:	01133101 	tsteq	r3, r1, lsl #2
    1fa4:	07000013 	smladeq	r0, r3, r0, r0
    1fa8:	0001828a 	andeq	r8, r1, sl, lsl #5
    1fac:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1fb0:	0800000a 	stmdaeq	r0, {r1, r3}
    1fb4:	01018289 	smlabbeq	r1, r9, r2, r8
    1fb8:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1fbc:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
    1fc0:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1fc4:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1fc8:	0b3a0e03 	bleq	e857dc <_Min_Heap_Size+0xe84fdc>
    1fcc:	00000b3b 	andeq	r0, r0, fp, lsr fp
    1fd0:	3f002e0a 	svccc	0x00002e0a
    1fd4:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1fd8:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1fdc:	0b3b0b3a 	bleq	ec4ccc <_Min_Heap_Size+0xec44cc>
    1fe0:	00000b39 	andeq	r0, r0, r9, lsr fp
    1fe4:	00110100 	andseq	r0, r1, r0, lsl #2
    1fe8:	06550610 			; <UNDEFINED> instruction: 0x06550610
    1fec:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1ff0:	05130e25 	ldreq	r0, [r3, #-3621]	; 0xfffff1db
    1ff4:	01000000 	mrseq	r0, (UNDEF: 0)
    1ff8:	06100011 			; <UNDEFINED> instruction: 0x06100011
    1ffc:	01120111 	tsteq	r2, r1, lsl r1
    2000:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    2004:	05130e25 	ldreq	r0, [r3, #-3621]	; 0xfffff1db
    2008:	Address 0x00002008 is out of bounds.


Disassembly of section .debug_loc:

00000000 <.debug_loc>:
	...
  errno = ENOMEM;
       8:	007d0002 	rsbseq	r0, sp, r2
	...
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	d87d0003 	ldmdale	sp!, {r0, r1}^
	...
}
      2c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
      30:	00000004 	andeq	r0, r0, r4
    if (status != HAL_OK)
      34:	00000000 	andeq	r0, r0, r0
      uwTickFreq = prevTickFreq;
      38:	7d000300 	stcvc	3, cr0, [r0, #-0]
      3c:	000000d8 	ldrdeq	r0, [r0], -r8
      40:	00000000 	andeq	r0, r0, r0
      44:	06c00000 	strbeq	r0, [r0], r0
      if (pllsource != 0)
      48:	06c20800 	strbeq	r0, [r2], r0, lsl #16
      4c:	00020800 	andeq	r0, r2, r0, lsl #16
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	06c2007d 	uxtab16eq	r0, r2, sp
      54:	06ec0800 	strbteq	r0, [ip], r0, lsl #16
      58:	00020800 	andeq	r0, r2, r0, lsl #16
      5c:	0000087d 	andeq	r0, r0, sp, ror r8
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	00000000 	andeq	r0, r0, r0
      64:	06a80000 	strteq	r0, [r8], r0
      68:	06aa0800 	strteq	r0, [sl], r0, lsl #16
      SystemCoreClock = pllvco/pllp;
      6c:	00020800 	andeq	r0, r2, r0, lsl #16
      70:	06aa007d 	sxtabeq	r0, sl, sp
      break;
      74:	06c00800 	strbeq	r0, [r0], r0, lsl #16
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	00020800 	andeq	r0, r2, r0, lsl #16
      7c:	0000087d 	andeq	r0, r0, sp, ror r8
      80:	00000000 	andeq	r0, r0, r0
      84:	06900000 	ldreq	r0, [r0], r0
      88:	06920800 	ldreq	r0, [r2], r0, lsl #16
      8c:	00020800 	andeq	r0, r2, r0, lsl #16
      90:	0692007d 			; <UNDEFINED> instruction: 0x0692007d
      94:	06a80800 	strteq	r0, [r8], r0, lsl #16
      98:	00020800 	andeq	r0, r2, r0, lsl #16
      9c:	0000087d 	andeq	r0, r0, sp, ror r8
      a0:	00000000 	andeq	r0, r0, r0
      a4:	06780000 	ldrbteq	r0, [r8], -r0
      a8:	067a0800 	ldrbteq	r0, [sl], -r0, lsl #16
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	00020800 	andeq	r0, r2, r0, lsl #16
      b0:	067a007d 			; <UNDEFINED> instruction: 0x067a007d
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	06900800 	ldreq	r0, [r0], r0, lsl #16
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	00020800 	andeq	r0, r2, r0, lsl #16
      bc:	0000087d 	andeq	r0, r0, sp, ror r8
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	00000000 	andeq	r0, r0, r0
      c4:	06600000 	strbteq	r0, [r0], -r0
      c8:	06620800 	strbteq	r0, [r2], -r0, lsl #16
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	00020800 	andeq	r0, r2, r0, lsl #16
      d0:	0662007d 			; <UNDEFINED> instruction: 0x0662007d
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	06780800 	ldrbteq	r0, [r8], -r0, lsl #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	00020800 	andeq	r0, r2, r0, lsl #16
      dc:	0000087d 	andeq	r0, r0, sp, ror r8
      e0:	00000000 	andeq	r0, r0, r0
    if (huart->hdmarx != NULL)
      e4:	06480000 	strbeq	r0, [r8], -r0
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	064a0800 	strbeq	r0, [sl], -r0, lsl #16
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	00020800 	andeq	r0, r2, r0, lsl #16
      f0:	064a007d 			; <UNDEFINED> instruction: 0x064a007d
    huart->TxXferCount = 0x00U;
      f4:	06600800 	strbteq	r0, [r0], -r0, lsl #16
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	00020800 	andeq	r0, r2, r0, lsl #16
    huart->gState  = HAL_UART_STATE_READY;
      fc:	0000087d 	andeq	r0, r0, sp, ror r8
    huart->RxState = HAL_UART_STATE_READY;
     100:	00000000 	andeq	r0, r0, r0
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	06300000 	ldrteq	r0, [r0], -r0
    HAL_UART_AbortCpltCallback(huart);
     108:	06320800 	ldrteq	r0, [r2], -r0, lsl #16
     10c:	00020800 	andeq	r0, r2, r0, lsl #16
  uint32_t AbortCplt = 0x01U;
     110:	0632007d 			; <UNDEFINED> instruction: 0x0632007d
  if (AbortCplt == 0x01U)
     114:	06480800 	strbeq	r0, [r8], -r0, lsl #16
}
     118:	00020800 	andeq	r0, r2, r0, lsl #16
     11c:	0000087d 	andeq	r0, r0, sp, ror r8
     120:	00000000 	andeq	r0, r0, r0
     124:	05e40000 	strbeq	r0, [r4, #0]!
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	05e60800 	strbeq	r0, [r6, #2048]!	; 0x800
     12c:	00020800 	andeq	r0, r2, r0, lsl #16
     130:	05e6007d 	strbeq	r0, [r6, #125]!	; 0x7d
     134:	05e80800 	strbeq	r0, [r8, #2048]!	; 0x800
     138:	00020800 	andeq	r0, r2, r0, lsl #16
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	05e80c7d 	strbeq	r0, [r8, #3197]!	; 0xc7d
     140:	06260800 	strteq	r0, [r6], -r0, lsl #16
     144:	00020800 	andeq	r0, r2, r0, lsl #16
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	0626187d 			; <UNDEFINED> instruction: 0x0626187d
     14c:	06300800 	ldrteq	r0, [r0], -r0, lsl #16
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	00020800 	andeq	r0, r2, r0, lsl #16
     154:	00000c7d 	andeq	r0, r0, sp, ror ip
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	00000000 	andeq	r0, r0, r0
     15c:	01010000 	mrseq	r0, (UNDEF: 1)
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	00010101 	andeq	r0, r1, r1, lsl #2
     164:	080005e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, sl}
     168:	08000606 	stmdaeq	r0, {r1, r2, r9, sl}
     16c:	9f300002 	svcls	0x00300002
     170:	08000606 	stmdaeq	r0, {r1, r2, r9, sl}
}
     174:	08000614 	stmdaeq	r0, {r2, r4, r9, sl}
     178:	9f340002 	svcls	0x00340002
     17c:	08000614 	stmdaeq	r0, {r2, r4, r9, sl}
     180:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
}
     184:	9f330002 	svcls	0x00330002
	...
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     198:	007d0002 	rsbseq	r0, sp, r2
	...
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
     1b4:	080005c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, sl}
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	007d0002 	rsbseq	r0, sp, r2
     1bc:	080005c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, sl}
     1c0:	080005c8 	stmdaeq	r0, {r3, r6, r7, r8, sl}
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	047d0002 	ldrbteq	r0, [sp], #-2
     1c8:	080005c8 	stmdaeq	r0, {r3, r6, r7, r8, sl}
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	080005dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl}
     1d0:	107d0002 	rsbsne	r0, sp, r2
     1d4:	080005dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl}
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
     1dc:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
     1f0:	080005d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl}
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	d4500001 	ldrble	r0, [r0], #-1
     1f8:	d7080005 	strle	r0, [r8, -r5]
     1fc:	02080005 	andeq	r0, r8, #5
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	00007100 	andeq	r7, r0, r0, lsl #2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	00000000 	andeq	r0, r0, r0
     208:	ec000000 	stc	0, cr0, [r0], {-0}
     20c:	ee080006 	cdp	0, 0, cr0, cr8, cr6, {0}
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	02080006 	andeq	r0, r8, #6
     214:	ee007d00 	cdp	13, 0, cr7, cr0, cr0, {0}
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	34080006 	strcc	r0, [r8], #-6
     21c:	02080007 	andeq	r0, r8, #7
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
  tmp |= hdma->Init.FIFOMode;
     234:	0006ec00 	andeq	lr, r6, r0, lsl #24
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	0006f608 	andeq	pc, r6, r8, lsl #12
    tmp |= hdma->Init.FIFOThreshold;
     23c:	50000108 	andpl	r0, r0, r8, lsl #2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	080006f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9, sl}
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	08000700 	stmdaeq	r0, {r8, r9, sl}
     248:	00530001 	subseq	r0, r3, r1
  hdma->Instance->FCR = tmp;
     24c:	0c080007 	stceq	0, cr0, [r8], {7}
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	04080007 	streq	r0, [r8], #-7
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	5001f300 	andpl	pc, r1, r0, lsl #6
     258:	00070c9f 	muleq	r7, pc, ip	; <UNPREDICTABLE>
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00071408 	andeq	r1, r7, r8, lsl #8
  hdma->State = HAL_DMA_STATE_READY;
     260:	53000108 	movwpl	r0, #264	; 0x108
     264:	08000714 	stmdaeq	r0, {r2, r4, r8, r9, sl}
  return HAL_OK;
     268:	08000734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl}
     26c:	01f30004 	mvnseq	r0, r4
     270:	00009f50 	andeq	r9, r0, r0, asr pc
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	00000000 	andeq	r0, r0, r0
     278:	01010000 	mrseq	r0, (UNDEF: 1)
     27c:	08000706 	stmdaeq	r0, {r1, r2, r8, r9, sl}
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	0800070a 	stmdaeq	r0, {r1, r3, r8, r9, sl}
        hdma->State = HAL_DMA_STATE_READY;
     284:	00500001 	subseq	r0, r0, r1
	...
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	02000000 	andeq	r0, r0, #0
     298:	00007d00 	andeq	r7, r0, r0, lsl #26
      tickstart = HAL_GetTick();
     29c:	00000000 	andeq	r0, r0, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	02000000 	andeq	r0, r0, #0
     2a4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
          return HAL_TIMEOUT;
     2b8:	01000000 	mrseq	r0, (UNDEF: 0)
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	00005000 	andeq	r5, r0, r0
     2c0:	00000000 	andeq	r0, r0, r0
     2c4:	00040000 	andeq	r0, r4, r0
    FlagStatus       pwrclkchanged = RESET;
     2c8:	9f5001f3 	svcls	0x005001f3
	...
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2e0:	00510001 	subseq	r0, r1, r1
     2e4:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	04000000 	streq	r0, [r0], #-0
     2ec:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
          return HAL_TIMEOUT;
     2f0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     304:	52000100 	andpl	r0, r0, #0, 2
	...
     310:	01f30004 	mvnseq	r0, r4
      tickstart = HAL_GetTick();
     314:	00009f52 	andeq	r9, r0, r2, asr pc
	...
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	00020000 	andeq	r0, r2, r0
     328:	0000007d 	andeq	r0, r0, sp, ror r0
     32c:	00000000 	andeq	r0, r0, r0
     330:	00020000 	andeq	r0, r2, r0
          return HAL_TIMEOUT;
     334:	0000087d 	andeq	r0, r0, sp, ror r8
	...
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     344:	00020000 	andeq	r0, r2, r0
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	0000007d 	andeq	r0, r0, sp, ror r0
     34c:	00000000 	andeq	r0, r0, r0
     350:	00020000 	andeq	r0, r2, r0
     354:	0000087d 	andeq	r0, r0, sp, ror r8
	...
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     368:	00010000 	andeq	r0, r1, r0
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	00000050 	andeq	r0, r0, r0, asr r0
     370:	00000000 	andeq	r0, r0, r0
     374:	f3000400 	vshl.u8	d0, d0, d0
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	009f5001 	addseq	r5, pc, r1
	...
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     38c:	01000000 	mrseq	r0, (UNDEF: 0)
        __HAL_RCC_PLL_DISABLE();
     390:	00005100 	andeq	r5, r0, r0, lsl #2
     394:	00000000 	andeq	r0, r0, r0
        tickstart = HAL_GetTick();
     398:	00040000 	andeq	r0, r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	9f5101f3 	svcls	0x005101f3
	...
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	00500001 	subseq	r0, r0, r1
     3b8:	00000000 	andeq	r0, r0, r0
     3bc:	04000000 	streq	r0, [r0], #-0
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	5001f300 	andpl	pc, r1, r0, lsl #6
     3c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	01f30004 	mvnseq	r0, r4
     3e8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f8:	00020000 	andeq	r0, r2, r0
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	0000007d 	andeq	r0, r0, sp, ror r0
     400:	00000000 	andeq	r0, r0, r0
     404:	00020000 	andeq	r0, r2, r0
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     41c:	00010000 	andeq	r0, r1, r0
     420:	00000050 	andeq	r0, r0, r0, asr r0
     424:	00000000 	andeq	r0, r0, r0
        __HAL_RCC_PLL_ENABLE();
     428:	f3000400 	vshl.u8	d0, d0, d0
     42c:	009f5001 	addseq	r5, pc, r1
	...
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     43c:	02000000 	andeq	r0, r0, #0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	00007d00 	andeq	r7, r0, r0, lsl #26
     444:	00000000 	andeq	r0, r0, r0
            return HAL_TIMEOUT;
     448:	02000000 	andeq	r0, r0, #0
  return HAL_OK;
     44c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     460:	01000000 	mrseq	r0, (UNDEF: 0)
     464:	00005000 	andeq	r5, r0, r0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	00000000 	andeq	r0, r0, r0
     46c:	00040000 	andeq	r0, r4, r0
            return HAL_TIMEOUT;
     470:	9f5001f3 	svcls	0x005001f3
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     484:	007d0002 	rsbseq	r0, sp, r2
	...
     490:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     49c:	007d0002 	rsbseq	r0, sp, r2
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	00500001 	subseq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	00000000 	andeq	r0, r0, r0
     4bc:	04000000 	streq	r0, [r0], #-0
  return HAL_OK;
     4c0:	5001f300 	andpl	pc, r1, r0, lsl #6
}
     4c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     4d0:	00078400 	andeq	r8, r7, r0, lsl #8
        return HAL_ERROR;
     4d4:	00078608 	andeq	r8, r7, r8, lsl #12
          return HAL_ERROR;
     4d8:	50000108 	andpl	r0, r0, r8, lsl #2
     4dc:	08000786 	stmdaeq	r0, {r1, r2, r7, r8, r9, sl}
     4e0:	08000788 	stmdaeq	r0, {r3, r7, r8, r9, sl}
     4e4:	01f30004 	mvnseq	r0, r4
     4e8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     4f4:	07800000 	streq	r0, [r0, r0]
     4f8:	07820800 	streq	r0, [r2, r0, lsl #16]
     4fc:	00010800 	andeq	r0, r1, r0, lsl #16
     500:	00078250 	andeq	r8, r7, r0, asr r2
     504:	00078408 	andeq	r8, r7, r8, lsl #8
     508:	f3000408 	vshl.u8	d0, d8, d0
     50c:	009f5001 	addseq	r5, pc, r1
	...
     518:	76000000 	strvc	r0, [r0], -r0
     51c:	7e080007 	cdpvc	0, 0, cr0, cr8, cr7, {0}
     520:	01080007 	tsteq	r8, r7
     524:	077e5000 	ldrbeq	r5, [lr, -r0]!
     528:	07800800 	streq	r0, [r0, r0, lsl #16]
     52c:	00040800 	andeq	r0, r4, r0, lsl #16
     530:	9f5001f3 	svcls	0x005001f3
	...
     540:	08000770 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl}
     544:	08000774 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl}
     548:	74500001 	ldrbvc	r0, [r0], #-1
     54c:	76080007 	strvc	r0, [r8], -r7
     550:	04080007 	streq	r0, [r8], #-7
     554:	5001f300 	andpl	pc, r1, r0, lsl #6
     558:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     55c:	00000000 	andeq	r0, r0, r0
     560:	00075400 	andeq	r5, r7, r0, lsl #8
     564:	00075608 	andeq	r5, r7, r8, lsl #12
     568:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     56c:	00075600 	andeq	r5, r7, r0, lsl #12
     570:	00077008 	andeq	r7, r7, r8
     574:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     578:	00000010 	andeq	r0, r0, r0, lsl r0
	...
     584:	00075400 	andeq	r5, r7, r0, lsl #8
     588:	00075e08 	andeq	r5, r7, r8, lsl #28
     58c:	50000108 	andpl	r0, r0, r8, lsl #2
     590:	0800075e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, r9, sl}
     594:	08000770 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl}
     598:	01f30004 	mvnseq	r0, r4
     59c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     5a8:	00010100 	andeq	r0, r1, r0, lsl #2
     5ac:	07540000 	ldrbeq	r0, [r4, -r0]
     5b0:	075e0800 	ldrbeq	r0, [lr, -r0, lsl #16]
     5b4:	00010800 	andeq	r0, r1, r0, lsl #16
     5b8:	00075e51 	andeq	r5, r7, r1, asr lr
     5bc:	00075e08 	andeq	r5, r7, r8, lsl #28
     5c0:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
     5c4:	0800075e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, r9, sl}
     5c8:	08000762 	stmdaeq	r0, {r1, r5, r6, r8, r9, sl}
     5cc:	01740003 	cmneq	r4, r3
     5d0:	0007629f 	muleq	r7, pc, r2	; <UNPREDICTABLE>
     5d4:	00077008 	andeq	r7, r7, r8
     5d8:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
     5e8:	08000754 	stmdaeq	r0, {r2, r4, r6, r8, r9, sl}
     5ec:	0800075e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, r9, sl}
     5f0:	5e520001 	cdppl	0, 5, cr0, cr2, cr1, {0}
     5f4:	70080007 	andvc	r0, r8, r7
     5f8:	01080007 	tsteq	r8, r7
     5fc:	00005600 	andeq	r5, r0, r0, lsl #12
     600:	00000000 	andeq	r0, r0, r0
     604:	00030000 	andeq	r0, r3, r0
     608:	075a0000 	ldrbeq	r0, [sl, -r0]
     60c:	075e0800 	ldrbeq	r0, [lr, -r0, lsl #16]
     610:	00020800 	andeq	r0, r2, r0, lsl #16
     614:	075e9f30 	smmlareq	lr, r0, pc, r9	; <UNPREDICTABLE>
     618:	07700800 	ldrbeq	r0, [r0, -r0, lsl #16]!
     61c:	00010800 	andeq	r0, r1, r0, lsl #16
     620:	00000055 	andeq	r0, r0, r5, asr r0
     624:	00000000 	andeq	r0, r0, r0
     628:	00073400 	andeq	r3, r7, r0, lsl #8
     62c:	00073608 	andeq	r3, r7, r8, lsl #12
     630:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     634:	00073600 	andeq	r3, r7, r0, lsl #12
     638:	00075408 	andeq	r5, r7, r8, lsl #8
     63c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     640:	00000010 	andeq	r0, r0, r0, lsl r0
	...
     64c:	00073400 	andeq	r3, r7, r0, lsl #8
     650:	00073e08 	andeq	r3, r7, r8, lsl #28
     654:	50000108 	andpl	r0, r0, r8, lsl #2
     658:	0800073e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9, sl}
     65c:	08000754 	stmdaeq	r0, {r2, r4, r6, r8, r9, sl}
     660:	01f30004 	mvnseq	r0, r4
     664:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     674:	07340000 	ldreq	r0, [r4, -r0]!
     678:	07410800 	strbeq	r0, [r1, -r0, lsl #16]
     67c:	00010800 	andeq	r0, r1, r0, lsl #16
     680:	00074151 	andeq	r4, r7, r1, asr r1
     684:	00074408 	andeq	r4, r7, r8, lsl #8
     688:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
     68c:	08000744 	stmdaeq	r0, {r2, r6, r8, r9, sl}
     690:	08000748 	stmdaeq	r0, {r3, r6, r8, r9, sl}
     694:	01710003 	cmneq	r1, r3
     698:	0007489f 	muleq	r7, pc, r8	; <UNPREDICTABLE>
     69c:	00075408 	andeq	r5, r7, r8, lsl #8
     6a0:	51000108 	tstpl	r0, r8, lsl #2
	...
     6b0:	08000734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl}
     6b4:	0800073e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9, sl}
     6b8:	3e520001 	cdpcc	0, 5, cr0, cr2, cr1, {0}
     6bc:	54080007 	strpl	r0, [r8], #-7
     6c0:	01080007 	tsteq	r8, r7
     6c4:	00005600 	andeq	r5, r0, r0, lsl #12
     6c8:	00000000 	andeq	r0, r0, r0
     6cc:	00030000 	andeq	r0, r3, r0
     6d0:	073a0000 	ldreq	r0, [sl, -r0]!
     6d4:	073e0800 	ldreq	r0, [lr, -r0, lsl #16]!
     6d8:	00020800 	andeq	r0, r2, r0, lsl #16
     6dc:	073e9f30 			; <UNDEFINED> instruction: 0x073e9f30
     6e0:	07540800 	ldrbeq	r0, [r4, -r0, lsl #16]
     6e4:	00010800 	andeq	r0, r1, r0, lsl #16
     6e8:	00000055 	andeq	r0, r0, r5, asr r0
	...
     6f8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     704:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     708:	00000008 	andeq	r0, r0, r8
	...
     71c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     728:	01f30004 	mvnseq	r0, r4
     72c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     73c:	00020000 	andeq	r0, r2, r0
     740:	0000007d 	andeq	r0, r0, sp, ror r0
     744:	00000000 	andeq	r0, r0, r0
     748:	00020000 	andeq	r0, r2, r0
     74c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     760:	00010000 	andeq	r0, r1, r0
     764:	00000050 	andeq	r0, r0, r0, asr r0
     768:	00000000 	andeq	r0, r0, r0
     76c:	f3000400 	vshl.u8	d0, d0, d0
     770:	009f5001 	addseq	r5, pc, r1
	...
     784:	01000000 	mrseq	r0, (UNDEF: 0)
     788:	00005100 	andeq	r5, r0, r0, lsl #2
     78c:	00000000 	andeq	r0, r0, r0
     790:	00040000 	andeq	r0, r4, r0
     794:	9f5101f3 	svcls	0x005101f3
	...
     7a0:	08000810 	stmdaeq	r0, {r4, fp}
     7a4:	08000812 	stmdaeq	r0, {r1, r4, fp}
     7a8:	007d0002 	rsbseq	r0, sp, r2
     7ac:	08000812 	stmdaeq	r0, {r1, r4, fp}
     7b0:	08000828 	stmdaeq	r0, {r3, r5, fp}
     7b4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     7c4:	08000810 	stmdaeq	r0, {r4, fp}
     7c8:	08000816 	stmdaeq	r0, {r1, r2, r4, fp}
     7cc:	16500001 	ldrbne	r0, [r0], -r1
     7d0:	28080008 	stmdacs	r8, {r3}
     7d4:	04080008 	streq	r0, [r8], #-8
     7d8:	5001f300 	andpl	pc, r1, r0, lsl #6
     7dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     7e8:	00081000 	andeq	r1, r8, r0
     7ec:	00081408 	andeq	r1, r8, r8, lsl #8
     7f0:	51000108 	tstpl	r0, r8, lsl #2
     7f4:	08000814 	stmdaeq	r0, {r2, r4, fp}
     7f8:	08000828 	stmdaeq	r0, {r3, r5, fp}
     7fc:	01f30004 	mvnseq	r0, r4
     800:	00009f51 	andeq	r9, r0, r1, asr pc
     804:	00000000 	andeq	r0, r0, r0
     808:	07f80000 	ldrbeq	r0, [r8, r0]!
     80c:	07fa0800 	ldrbeq	r0, [sl, r0, lsl #16]!
     810:	00020800 	andeq	r0, r2, r0, lsl #16
     814:	07fa007d 			; <UNDEFINED> instruction: 0x07fa007d
     818:	08100800 	ldmdaeq	r0, {fp}
     81c:	00020800 	andeq	r0, r2, r0, lsl #16
     820:	0000087d 	andeq	r0, r0, sp, ror r8
     824:	00000000 	andeq	r0, r0, r0
     828:	07e80000 	strbeq	r0, [r8, r0]!
     82c:	07ea0800 	strbeq	r0, [sl, r0, lsl #16]!
     830:	00020800 	andeq	r0, r2, r0, lsl #16
     834:	07ea007d 			; <UNDEFINED> instruction: 0x07ea007d
     838:	07f80800 	ldrbeq	r0, [r8, r0, lsl #16]!
     83c:	00020800 	andeq	r0, r2, r0, lsl #16
     840:	0000087d 	andeq	r0, r0, sp, ror r8
     844:	00000000 	andeq	r0, r0, r0
     848:	07de0000 	ldrbeq	r0, [lr, r0]
     84c:	07e00800 	strbeq	r0, [r0, r0, lsl #16]!
     850:	00020800 	andeq	r0, r2, r0, lsl #16
     854:	07e0007d 			; <UNDEFINED> instruction: 0x07e0007d
     858:	07e60800 	strbeq	r0, [r6, r0, lsl #16]!
     85c:	00020800 	andeq	r0, r2, r0, lsl #16
     860:	0000087d 	andeq	r0, r0, sp, ror r8
     864:	00000000 	andeq	r0, r0, r0
     868:	07c40000 	strbeq	r0, [r4, r0]
     86c:	07c60800 	strbeq	r0, [r6, r0, lsl #16]
     870:	00020800 	andeq	r0, r2, r0, lsl #16
     874:	07c6007d 			; <UNDEFINED> instruction: 0x07c6007d
     878:	07d80800 	ldrbeq	r0, [r8, r0, lsl #16]
     87c:	00020800 	andeq	r0, r2, r0, lsl #16
     880:	0000087d 	andeq	r0, r0, sp, ror r8
     884:	00000000 	andeq	r0, r0, r0
     888:	07b00000 	ldreq	r0, [r0, r0]!
     88c:	07b20800 	ldreq	r0, [r2, r0, lsl #16]!
     890:	00020800 	andeq	r0, r2, r0, lsl #16
     894:	07b2007d 			; <UNDEFINED> instruction: 0x07b2007d
     898:	07c40800 	strbeq	r0, [r4, r0, lsl #16]
     89c:	00020800 	andeq	r0, r2, r0, lsl #16
     8a0:	0000087d 	andeq	r0, r0, sp, ror r8
     8a4:	00000000 	andeq	r0, r0, r0
     8a8:	079c0000 	ldreq	r0, [ip, r0]
     8ac:	079e0800 	ldreq	r0, [lr, r0, lsl #16]
     8b0:	00020800 	andeq	r0, r2, r0, lsl #16
     8b4:	079e007d 			; <UNDEFINED> instruction: 0x079e007d
     8b8:	07b00800 	ldreq	r0, [r0, r0, lsl #16]!
     8bc:	00020800 	andeq	r0, r2, r0, lsl #16
     8c0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     8d0:	00020000 	andeq	r0, r2, r0
     8d4:	0000007d 	andeq	r0, r0, sp, ror r0
     8d8:	00000000 	andeq	r0, r0, r0
     8dc:	00020000 	andeq	r0, r2, r0
     8e0:	0000087d 	andeq	r0, r0, sp, ror r8
     8e4:	00000000 	andeq	r0, r0, r0
     8e8:	07880000 	streq	r0, [r8, r0]
     8ec:	078a0800 	streq	r0, [sl, r0, lsl #16]
     8f0:	00020800 	andeq	r0, r2, r0, lsl #16
     8f4:	078a007d 			; <UNDEFINED> instruction: 0x078a007d
     8f8:	079c0800 	ldreq	r0, [ip, r0, lsl #16]
     8fc:	00020800 	andeq	r0, r2, r0, lsl #16
     900:	0000087d 	andeq	r0, r0, sp, ror r8
     904:	00000000 	andeq	r0, r0, r0
     908:	08280000 	stmdaeq	r8!, {}	; <UNPREDICTABLE>
     90c:	082a0800 	stmdaeq	sl!, {fp}
     910:	00020800 	andeq	r0, r2, r0, lsl #16
     914:	082a007d 	stmdaeq	sl!, {r0, r2, r3, r4, r5, r6}
     918:	086c0800 	stmdaeq	ip!, {fp}^
     91c:	00020800 	andeq	r0, r2, r0, lsl #16
     920:	086c107d 	stmdaeq	ip!, {r0, r2, r3, r4, r5, r6, ip}^
     924:	08740800 	ldmdaeq	r4!, {fp}^
     928:	00020800 	andeq	r0, r2, r0, lsl #16
     92c:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     93c:	00020000 	andeq	r0, r2, r0
     940:	0000007d 	andeq	r0, r0, sp, ror r0
     944:	00000000 	andeq	r0, r0, r0
     948:	00020000 	andeq	r0, r2, r0
     94c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     964:	00010000 	andeq	r0, r1, r0
     968:	00000050 	andeq	r0, r0, r0, asr r0
     96c:	00000000 	andeq	r0, r0, r0
     970:	f3000400 	vshl.u8	d0, d0, d0
     974:	009f5001 	addseq	r5, pc, r1
     978:	00000000 	andeq	r0, r0, r0
     97c:	01000000 	mrseq	r0, (UNDEF: 0)
     980:	00005000 	andeq	r5, r0, r0
     984:	00000000 	andeq	r0, r0, r0
     988:	00040000 	andeq	r0, r4, r0
     98c:	9f5001f3 	svcls	0x005001f3
	...
     998:	080008a8 	stmdaeq	r0, {r3, r5, r7, fp}
     99c:	080008aa 	stmdaeq	r0, {r1, r3, r5, r7, fp}
     9a0:	007d0002 	rsbseq	r0, sp, r2
     9a4:	080008aa 	stmdaeq	r0, {r1, r3, r5, r7, fp}
     9a8:	080008ac 	stmdaeq	r0, {r2, r3, r5, r7, fp}
     9ac:	087d0002 	ldmdaeq	sp!, {r1}^
     9b0:	080008ac 	stmdaeq	r0, {r2, r3, r5, r7, fp}
     9b4:	080008c8 	stmdaeq	r0, {r3, r6, r7, fp}
     9b8:	287d0002 	ldmdacs	sp!, {r1}^
     9bc:	080008c8 	stmdaeq	r0, {r3, r6, r7, fp}
     9c0:	080008ca 	stmdaeq	r0, {r1, r3, r6, r7, fp}
     9c4:	087d0002 	ldmdaeq	sp!, {r1}^
     9c8:	080008ca 	stmdaeq	r0, {r1, r3, r6, r7, fp}
     9cc:	08000928 	stmdaeq	r0, {r3, r5, r8, fp}
     9d0:	287d0002 	ldmdacs	sp!, {r1}^
	...
     9e4:	080008a8 	stmdaeq	r0, {r3, r5, r7, fp}
     9e8:	080008c6 	stmdaeq	r0, {r1, r2, r6, r7, fp}
     9ec:	c6500001 	ldrbgt	r0, [r0], -r1
     9f0:	ca080008 	bgt	200a18 <_Min_Heap_Size+0x200218>
     9f4:	04080008 	streq	r0, [r8], #-8
     9f8:	5001f300 	andpl	pc, r1, r0, lsl #6
     9fc:	0008ca9f 	muleq	r8, pc, sl	; <UNPREDICTABLE>
     a00:	00090e08 	andeq	r0, r9, r8, lsl #28
     a04:	50000108 	andpl	r0, r0, r8, lsl #2
     a08:	0800090e 	stmdaeq	r0, {r1, r2, r3, r8, fp}
     a0c:	08000928 	stmdaeq	r0, {r3, r5, r8, fp}
     a10:	01f30004 	mvnseq	r0, r4
     a14:	00009f50 	andeq	r9, r0, r0, asr pc
     a18:	00000000 	andeq	r0, r0, r0
     a1c:	08740000 	ldmdaeq	r4!, {}^	; <UNPREDICTABLE>
     a20:	08760800 	ldmdaeq	r6!, {fp}^
     a24:	00020800 	andeq	r0, r2, r0, lsl #16
     a28:	0876007d 	ldmdaeq	r6!, {r0, r2, r3, r4, r5, r6}^
     a2c:	08a80800 	stmiaeq	r8!, {fp}
     a30:	00020800 	andeq	r0, r2, r0, lsl #16
     a34:	0000087d 	andeq	r0, r0, sp, ror r8
     a38:	00000000 	andeq	r0, r0, r0
     a3c:	09280000 	stmdbeq	r8!, {}	; <UNPREDICTABLE>
     a40:	092a0800 	stmdbeq	sl!, {fp}
     a44:	00020800 	andeq	r0, r2, r0, lsl #16
     a48:	092a007d 	stmdbeq	sl!, {r0, r2, r3, r4, r5, r6}
     a4c:	09580800 	ldmdbeq	r8, {fp}^
     a50:	00020800 	andeq	r0, r2, r0, lsl #16
     a54:	0958087d 	ldmdbeq	r8, {r0, r2, r3, r4, r5, r6, fp}^
     a58:	09600800 	stmdbeq	r0!, {fp}^
     a5c:	00020800 	andeq	r0, r2, r0, lsl #16
     a60:	0000007d 	andeq	r0, r0, sp, ror r0
     a64:	00000000 	andeq	r0, r0, r0
     a68:	0a1c0000 	beq	700a70 <_Min_Heap_Size+0x700270>
     a6c:	0a1e0800 	beq	782a74 <_Min_Heap_Size+0x782274>
     a70:	00020800 	andeq	r0, r2, r0, lsl #16
     a74:	0a1e007d 	beq	780c70 <_Min_Heap_Size+0x780470>
     a78:	0b900800 	bleq	fe402a80 <_estack+0xde401848>
     a7c:	00020800 	andeq	r0, r2, r0, lsl #16
     a80:	0000107d 	andeq	r1, r0, sp, ror r0
	...
     a90:	0a1c0000 	beq	700a98 <_Min_Heap_Size+0x700298>
     a94:	0a280800 	beq	a02a9c <_Min_Heap_Size+0xa0229c>
     a98:	00010800 	andeq	r0, r1, r0, lsl #16
     a9c:	000a2850 	andeq	r2, sl, r0, asr r8
     aa0:	000aa808 	andeq	sl, sl, r8, lsl #16
     aa4:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
     aa8:	08000aa8 	stmdaeq	r0, {r3, r5, r7, r9, fp}
     aac:	08000aae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9, fp}
     ab0:	ae500001 	cdpge	0, 5, cr0, cr0, cr1, {0}
     ab4:	9008000a 	andls	r0, r8, sl
     ab8:	0108000b 	tsteq	r8, fp
     abc:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     ac8:	08000a74 	stmdaeq	r0, {r2, r4, r5, r6, r9, fp}
     acc:	08000a86 	stmdaeq	r0, {r1, r2, r7, r9, fp}
     ad0:	00520001 	subseq	r0, r2, r1
	...
     ae0:	000aa600 	andeq	sl, sl, r0, lsl #12
     ae4:	000aa808 	andeq	sl, sl, r8, lsl #16
     ae8:	50000108 	andpl	r0, r0, r8, lsl #2
     aec:	08000ad0 	stmdaeq	r0, {r4, r6, r7, r9, fp}
     af0:	08000aee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, fp}
     af4:	2c500001 	mrrccs	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
     af8:	4408000b 	strmi	r0, [r8], #-11
     afc:	0108000b 	tsteq	r8, fp
     b00:	00005000 	andeq	r5, r0, r0
     b04:	00000000 	andeq	r0, r0, r0
     b08:	0e460000 	cdpeq	0, 4, cr0, cr6, cr0, {0}
     b0c:	0e860800 	cdpeq	8, 8, cr0, cr6, cr0, {0}
     b10:	00020800 	andeq	r0, r2, r0, lsl #16
     b14:	0e86007d 	mcreq	0, 4, r0, cr6, cr13, {3}
     b18:	0e880800 	cdpeq	8, 8, cr0, cr8, cr0, {0}
     b1c:	00020800 	andeq	r0, r2, r0, lsl #16
     b20:	0e88047d 	mcreq	4, 4, r0, cr8, cr13, {3}
     b24:	0ef40800 	cdpeq	8, 15, cr0, cr4, cr0, {0}
     b28:	00020800 	andeq	r0, r2, r0, lsl #16
     b2c:	0ef4107d 	mrceq	0, 7, r1, cr4, cr13, {3}
     b30:	0ef80800 	cdpeq	8, 15, cr0, cr8, cr0, {0}
     b34:	00020800 	andeq	r0, r2, r0, lsl #16
     b38:	0ef8047d 	mrceq	4, 7, r0, cr8, cr13, {3}
     b3c:	0f1e0800 	svceq	0x001e0800
     b40:	00020800 	andeq	r0, r2, r0, lsl #16
     b44:	0f1e007d 	svceq	0x001e007d
     b48:	0f240800 	svceq	0x00240800
     b4c:	00020800 	andeq	r0, r2, r0, lsl #16
     b50:	0f24107d 	svceq	0x0024107d
     b54:	0f2c0800 	svceq	0x002c0800
     b58:	00020800 	andeq	r0, r2, r0, lsl #16
     b5c:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     b74:	0e460000 	cdpeq	0, 4, cr0, cr6, cr0, {0}
     b78:	0eef0800 	cdpeq	8, 14, cr0, cr15, cr0, {0}
     b7c:	00010800 	andeq	r0, r1, r0, lsl #16
     b80:	000eef50 	andeq	lr, lr, r0, asr pc
     b84:	000ef808 	andeq	pc, lr, r8, lsl #16
     b88:	f3000408 	vshl.u8	d0, d8, d0
     b8c:	f89f5001 			; <UNDEFINED> instruction: 0xf89f5001
     b90:	2108000e 	tstcs	r8, lr
     b94:	0108000f 	tsteq	r8, pc
     b98:	0f215000 	svceq	0x00215000
     b9c:	0f240800 	svceq	0x00240800
     ba0:	00040800 	andeq	r0, r4, r0, lsl #16
     ba4:	9f5001f3 	svcls	0x005001f3
     ba8:	08000f24 	stmdaeq	r0, {r2, r5, r8, r9, sl, fp}
     bac:	08000f26 	stmdaeq	r0, {r1, r2, r5, r8, r9, sl, fp}
     bb0:	26500001 	ldrbcs	r0, [r0], -r1
     bb4:	2808000f 	stmdacs	r8, {r0, r1, r2, r3}
     bb8:	0408000f 	streq	r0, [r8], #-15
     bbc:	5001f300 	andpl	pc, r1, r0, lsl #6
     bc0:	000f289f 	muleq	pc, pc, r8	; <UNPREDICTABLE>
     bc4:	000f2a08 	andeq	r2, pc, r8, lsl #20
     bc8:	50000108 	andpl	r0, r0, r8, lsl #2
     bcc:	08000f2a 	stmdaeq	r0, {r1, r3, r5, r8, r9, sl, fp}
     bd0:	08000f2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, fp}
     bd4:	01f30004 	mvnseq	r0, r4
     bd8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     be4:	00000001 	andeq	r0, r0, r1
     be8:	08000e5a 	stmdaeq	r0, {r1, r3, r4, r6, r9, sl, fp}
     bec:	08000e76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9, sl, fp}
     bf0:	fe520001 	cdp2	0, 5, cr0, cr2, cr1, {0}
     bf4:	1208000e 	andne	r0, r8, #14
     bf8:	0208000f 	andeq	r0, r8, #15
     bfc:	129f3000 	addsne	r3, pc, #0
     c00:	1e08000f 	cdpne	0, 0, cr0, cr8, cr15, {0}
     c04:	0108000f 	tsteq	r8, pc
     c08:	00005200 	andeq	r5, r0, r0, lsl #4
     c0c:	00000000 	andeq	r0, r0, r0
     c10:	00010000 	andeq	r0, r1, r0
     c14:	00000000 	andeq	r0, r0, r0
     c18:	08000e5a 	stmdaeq	r0, {r1, r3, r4, r6, r9, sl, fp}
     c1c:	08000e76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9, sl, fp}
     c20:	9f300002 	svcls	0x00300002
     c24:	08000f00 	stmdaeq	r0, {r8, r9, sl, fp}
     c28:	08000f12 	stmdaeq	r0, {r1, r4, r8, r9, sl, fp}
     c2c:	12520001 	subsne	r0, r2, #1
     c30:	1e08000f 	cdpne	0, 0, cr0, cr8, cr15, {0}
     c34:	0208000f 	andeq	r0, r8, #15
     c38:	009f3000 	addseq	r3, pc, r0
	...
     c44:	000ec800 	andeq	ip, lr, r0, lsl #16
     c48:	000ed408 	andeq	sp, lr, r8, lsl #8
     c4c:	53000108 	movwpl	r0, #264	; 0x108
	...
     c5c:	0ebc0100 	frdeqe	f0, f4, f0
     c60:	0ec00800 	cdpeq	8, 12, cr0, cr0, cr0, {0}
     c64:	00030800 	andeq	r0, r3, r0, lsl #16
     c68:	c09f0c72 	addsgt	r0, pc, r2, ror ip	; <UNPREDICTABLE>
     c6c:	c408000e 	strgt	r0, [r8], #-14
     c70:	0108000e 	tsteq	r8, lr
     c74:	0ec45300 	cdpeq	3, 12, cr5, cr4, cr0, {0}
     c78:	0ec40800 	cdpeq	8, 12, cr0, cr4, cr0, {0}
     c7c:	00030800 	andeq	r0, r3, r0, lsl #16
     c80:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
     c8c:	000ec401 	andeq	ip, lr, r1, lsl #8
     c90:	000ec408 	andeq	ip, lr, r8, lsl #8
     c94:	53000108 	movwpl	r0, #264	; 0x108
	...
     ca0:	01000001 	tsteq	r0, r1
     ca4:	08000ec8 	stmdaeq	r0, {r3, r6, r7, r9, sl, fp}
     ca8:	08000eca 	stmdaeq	r0, {r1, r3, r6, r7, r9, sl, fp}
     cac:	0c720003 	ldcleq	0, cr0, [r2], #-12
     cb0:	000eca9f 	muleq	lr, pc, sl	; <UNPREDICTABLE>
     cb4:	000ece08 	andeq	ip, lr, r8, lsl #28
     cb8:	52000108 	andpl	r0, r0, #8, 2
	...
     cc4:	0ec80101 	poleqe	f0, f0, f1
     cc8:	0ece0800 	cdpeq	8, 12, cr0, cr14, cr0, {0}
     ccc:	00010800 	andeq	r0, r1, r0, lsl #16
     cd0:	00000053 	andeq	r0, r0, r3, asr r0
     cd4:	00000000 	andeq	r0, r0, r0
     cd8:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
     cdc:	ce08000e 	cdpgt	0, 0, cr0, cr8, cr14, {0}
     ce0:	0108000e 	tsteq	r8, lr
     ce4:	00005100 	andeq	r5, r0, r0, lsl #2
     ce8:	00000000 	andeq	r0, r0, r0
     cec:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
     cf0:	0e180800 	cdpeq	8, 1, cr0, cr8, cr0, {0}
     cf4:	00020800 	andeq	r0, r2, r0, lsl #16
     cf8:	0e18007d 	mrceq	0, 0, r0, cr8, cr13, {3}
     cfc:	0e300800 	cdpeq	8, 3, cr0, cr0, cr0, {0}
     d00:	00020800 	andeq	r0, r2, r0, lsl #16
     d04:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     d10:	0e160000 	cdpeq	0, 1, cr0, cr6, cr0, {0}
     d14:	0e2b0800 	cdpeq	8, 2, cr0, cr11, cr0, {0}
     d18:	00010800 	andeq	r0, r1, r0, lsl #16
     d1c:	000e2b50 	andeq	r2, lr, r0, asr fp
     d20:	000e3008 	andeq	r3, lr, r8
     d24:	f3000408 	vshl.u8	d0, d8, d0
     d28:	009f5001 	addseq	r5, pc, r1
	...
     d3c:	0009bc00 	andeq	fp, r9, r0, lsl #24
     d40:	0009c808 	andeq	ip, r9, r8, lsl #16
     d44:	50000108 	andpl	r0, r0, r8, lsl #2
     d48:	080009c8 	stmdaeq	r0, {r3, r6, r7, r8, fp}
     d4c:	080009ca 	stmdaeq	r0, {r1, r3, r6, r7, r8, fp}
     d50:	01f30004 	mvnseq	r0, r4
     d54:	09ca9f50 	stmibeq	sl, {r4, r6, r8, r9, sl, fp, ip, pc}^
     d58:	0a000800 	beq	2d60 <_Min_Heap_Size+0x2560>
     d5c:	00010800 	andeq	r0, r1, r0, lsl #16
     d60:	000a0050 	andeq	r0, sl, r0, asr r0
     d64:	000a0208 	andeq	r0, sl, r8, lsl #4
     d68:	f3000408 	vshl.u8	d0, d8, d0
     d6c:	029f5001 	addseq	r5, pc, #1
     d70:	1c08000a 	stcne	0, cr0, [r8], {10}
     d74:	0108000a 	tsteq	r8, sl
     d78:	00005000 	andeq	r5, r0, r0
	...
     d84:	0a0a0000 	beq	280d8c <_Min_Heap_Size+0x28058c>
     d88:	0a0c0800 	beq	302d90 <_Min_Heap_Size+0x302590>
     d8c:	00010800 	andeq	r0, r1, r0, lsl #16
     d90:	000a0c53 	andeq	r0, sl, r3, asr ip
     d94:	000a1408 	andeq	r1, sl, r8, lsl #8
     d98:	70000208 	andvc	r0, r0, r8, lsl #4
     d9c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
     dac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     db8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     dbc:	00000008 	andeq	r0, r0, r8
	...
     dd0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     ddc:	01f30004 	mvnseq	r0, r4
     de0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     df4:	00500001 	subseq	r0, r0, r1
	...
     e04:	02000000 	andeq	r0, r0, #0
     e08:	00007d00 	andeq	r7, r0, r0, lsl #26
     e0c:	00000000 	andeq	r0, r0, r0
     e10:	02000000 	andeq	r0, r0, #0
     e14:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
     e28:	01000000 	mrseq	r0, (UNDEF: 0)
     e2c:	00005000 	andeq	r5, r0, r0
     e30:	00000000 	andeq	r0, r0, r0
     e34:	00040000 	andeq	r0, r4, r0
     e38:	9f5001f3 	svcls	0x005001f3
	...
     e4c:	00010000 	andeq	r0, r1, r0
     e50:	00000050 	andeq	r0, r0, r0, asr r0
	...
     e60:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     e6c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     e70:	00000008 	andeq	r0, r0, r8
	...
     e84:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     e90:	01f30004 	mvnseq	r0, r4
     e94:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     ea8:	00500001 	subseq	r0, r0, r1
	...
     eb8:	02000000 	andeq	r0, r0, #0
     ebc:	00007d00 	andeq	r7, r0, r0, lsl #26
     ec0:	00000000 	andeq	r0, r0, r0
     ec4:	02000000 	andeq	r0, r0, #0
     ec8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
     edc:	01000000 	mrseq	r0, (UNDEF: 0)
     ee0:	00005000 	andeq	r5, r0, r0
     ee4:	00000000 	andeq	r0, r0, r0
     ee8:	00040000 	andeq	r0, r4, r0
     eec:	9f5001f3 	svcls	0x005001f3
	...
     f00:	00010000 	andeq	r0, r1, r0
     f04:	00000050 	andeq	r0, r0, r0, asr r0
     f08:	00000000 	andeq	r0, r0, r0
     f0c:	000e3400 	andeq	r3, lr, r0, lsl #8
     f10:	000e3608 	andeq	r3, lr, r8, lsl #12
     f14:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     f18:	000e3600 	andeq	r3, lr, r0, lsl #12
     f1c:	000e4408 	andeq	r4, lr, r8, lsl #8
     f20:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     f24:	00000008 	andeq	r0, r0, r8
	...
     f30:	000e3400 	andeq	r3, lr, r0, lsl #8
     f34:	000e3808 	andeq	r3, lr, r8, lsl #16
     f38:	50000108 	andpl	r0, r0, r8, lsl #2
     f3c:	08000e38 	stmdaeq	r0, {r3, r4, r5, r9, sl, fp}
     f40:	08000e44 	stmdaeq	r0, {r2, r6, r9, sl, fp}
     f44:	01f30004 	mvnseq	r0, r4
     f48:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     f54:	08000e38 	stmdaeq	r0, {r3, r4, r5, r9, sl, fp}
     f58:	08000e41 	stmdaeq	r0, {r0, r6, r9, sl, fp}
     f5c:	00500001 	subseq	r0, r0, r1
     f60:	00000000 	andeq	r0, r0, r0
     f64:	01000000 	mrseq	r0, (UNDEF: 0)
     f68:	00096000 	andeq	r6, r9, r0
     f6c:	0009bc08 	andeq	fp, r9, r8, lsl #24
     f70:	50000108 	andpl	r0, r0, r8, lsl #2
	...
     f7c:	096e0000 	stmdbeq	lr!, {}^	; <UNPREDICTABLE>
     f80:	09780800 	ldmdbeq	r8!, {fp}^
     f84:	00010800 	andeq	r0, r1, r0, lsl #16
     f88:	00000053 	andeq	r0, r0, r3, asr r0
	...
     f94:	62010000 	andvs	r0, r1, #0
     f98:	66080009 	strvs	r0, [r8], -r9
     f9c:	03080009 	movweq	r0, #32777	; 0x8009
     fa0:	9f0c7200 	svcls	0x000c7200
     fa4:	08000966 	stmdaeq	r0, {r1, r2, r5, r6, r8, fp}
     fa8:	0800096a 	stmdaeq	r0, {r1, r3, r5, r6, r8, fp}
     fac:	6a530001 	bvs	14c0fb8 <_Min_Heap_Size+0x14c07b8>
     fb0:	6a080009 	bvs	200fdc <_Min_Heap_Size+0x2007dc>
     fb4:	03080009 	movweq	r0, #32777	; 0x8009
     fb8:	9f0c7200 	svcls	0x000c7200
	...
     fc4:	096a0100 	stmdbeq	sl!, {r8}^
     fc8:	096a0800 	stmdbeq	sl!, {fp}^
     fcc:	00010800 	andeq	r0, r1, r0, lsl #16
     fd0:	00000053 	andeq	r0, r0, r3, asr r0
     fd4:	00000000 	andeq	r0, r0, r0
     fd8:	00000100 	andeq	r0, r0, r0, lsl #2
     fdc:	00096e01 	andeq	r6, r9, r1, lsl #28
     fe0:	00097008 	andeq	r7, r9, r8
     fe4:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     fe8:	09709f0c 	ldmdbeq	r0!, {r2, r3, r8, r9, sl, fp, ip, pc}^
     fec:	09740800 	ldmdbeq	r4!, {fp}^
     ff0:	00010800 	andeq	r0, r1, r0, lsl #16
     ff4:	00000052 	andeq	r0, r0, r2, asr r0
     ff8:	00000000 	andeq	r0, r0, r0
     ffc:	6e010100 	adfvss	f0, f1, f0
    1000:	74080009 	strvc	r0, [r8], #-9
    1004:	01080009 	tsteq	r8, r9
    1008:	00005300 	andeq	r5, r0, r0, lsl #6
    100c:	00000000 	andeq	r0, r0, r0
    1010:	01000000 	mrseq	r0, (UNDEF: 0)
    1014:	08000974 	stmdaeq	r0, {r2, r4, r5, r6, r8, fp}
    1018:	08000974 	stmdaeq	r0, {r2, r4, r5, r6, r8, fp}
    101c:	00510001 	subseq	r0, r1, r1
	...
    1028:	00098600 	andeq	r8, r9, r0, lsl #12
    102c:	00099208 	andeq	r9, r9, r8, lsl #4
    1030:	53000108 	movwpl	r0, #264	; 0x108
	...
    1040:	097a0100 	ldmdbeq	sl!, {r8}^
    1044:	097e0800 	ldmdbeq	lr!, {fp}^
    1048:	00030800 	andeq	r0, r3, r0, lsl #16
    104c:	7e9f1472 	mrcvc	4, 4, r1, cr15, cr2, {3}
    1050:	82080009 	andhi	r0, r8, #9
    1054:	01080009 	tsteq	r8, r9
    1058:	09825300 	stmibeq	r2, {r8, r9, ip, lr}
    105c:	09820800 	stmibeq	r2, {fp}
    1060:	00030800 	andeq	r0, r3, r0, lsl #16
    1064:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    1070:	00098201 	andeq	r8, r9, r1, lsl #4
    1074:	00098208 	andeq	r8, r9, r8, lsl #4
    1078:	53000108 	movwpl	r0, #264	; 0x108
	...
    1084:	01000001 	tsteq	r0, r1
    1088:	08000986 	stmdaeq	r0, {r1, r2, r7, r8, fp}
    108c:	08000988 	stmdaeq	r0, {r3, r7, r8, fp}
    1090:	14720003 	ldrbtne	r0, [r2], #-3
    1094:	0009889f 	muleq	r9, pc, r8	; <UNPREDICTABLE>
    1098:	00098c08 	andeq	r8, r9, r8, lsl #24
    109c:	52000108 	andpl	r0, r0, #8, 2
	...
    10a8:	09860101 	stmibeq	r6, {r0, r8}
    10ac:	098c0800 	stmibeq	ip, {fp}
    10b0:	00010800 	andeq	r0, r1, r0, lsl #16
    10b4:	00000053 	andeq	r0, r0, r3, asr r0
    10b8:	00000000 	andeq	r0, r0, r0
    10bc:	8c010000 	stchi	0, cr0, [r1], {-0}
    10c0:	8c080009 	stchi	0, cr0, [r8], {9}
    10c4:	01080009 	tsteq	r8, r9
    10c8:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    10d4:	080009b0 	stmdaeq	r0, {r4, r5, r7, r8, fp}
    10d8:	080009bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, fp}
    10dc:	00530001 	subseq	r0, r3, r1
	...
    10ec:	0009a401 	andeq	sl, r9, r1, lsl #8
    10f0:	0009a808 	andeq	sl, r9, r8, lsl #16
    10f4:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    10f8:	09a89f0c 	stmibeq	r8!, {r2, r3, r8, r9, sl, fp, ip, pc}
    10fc:	09ac0800 	stmibeq	ip!, {fp}
    1100:	00010800 	andeq	r0, r1, r0, lsl #16
    1104:	0009ac53 	andeq	sl, r9, r3, asr ip
    1108:	0009ac08 	andeq	sl, r9, r8, lsl #24
    110c:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    1110:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1114:	00000000 	andeq	r0, r0, r0
    1118:	01000000 	mrseq	r0, (UNDEF: 0)
    111c:	080009ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp}
    1120:	080009ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp}
    1124:	00530001 	subseq	r0, r3, r1
    1128:	00000000 	andeq	r0, r0, r0
    112c:	01000000 	mrseq	r0, (UNDEF: 0)
    1130:	b0010000 	andlt	r0, r1, r0
    1134:	b2080009 	andlt	r0, r8, #9
    1138:	03080009 	movweq	r0, #32777	; 0x8009
    113c:	9f0c7200 	svcls	0x000c7200
    1140:	080009b2 	stmdaeq	r0, {r1, r4, r5, r7, r8, fp}
    1144:	080009b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, fp}
    1148:	00520001 	subseq	r0, r2, r1
    114c:	00000000 	andeq	r0, r0, r0
    1150:	01000000 	mrseq	r0, (UNDEF: 0)
    1154:	0009b001 	andeq	fp, r9, r1
    1158:	0009b608 	andeq	fp, r9, r8, lsl #12
    115c:	53000108 	movwpl	r0, #264	; 0x108
	...
    1168:	09b60100 	ldmibeq	r6!, {r8}
    116c:	09b60800 	ldmibeq	r6!, {fp}
    1170:	00010800 	andeq	r0, r1, r0, lsl #16
    1174:	00000051 	andeq	r0, r0, r1, asr r0
    1178:	00000000 	andeq	r0, r0, r0
    117c:	00000100 	andeq	r0, r0, r0, lsl #2
    1180:	00000000 	andeq	r0, r0, r0
    1184:	01000000 	mrseq	r0, (UNDEF: 0)
    1188:	00005000 	andeq	r5, r0, r0
	...
    119c:	00530001 	subseq	r0, r3, r1
	...
    11ac:	00000001 	andeq	r0, r0, r1
    11b0:	00000000 	andeq	r0, r0, r0
    11b4:	72000300 	andvc	r0, r0, #0, 6
    11b8:	00009f0c 	andeq	r9, r0, ip, lsl #30
    11bc:	00000000 	andeq	r0, r0, r0
    11c0:	00010000 	andeq	r0, r1, r0
    11c4:	00000053 	andeq	r0, r0, r3, asr r0
    11c8:	00000000 	andeq	r0, r0, r0
    11cc:	72000300 	andvc	r0, r0, #0, 6
    11d0:	00009f0c 	andeq	r9, r0, ip, lsl #30
    11d4:	00000000 	andeq	r0, r0, r0
    11d8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    11e4:	00530001 	subseq	r0, r3, r1
    11e8:	00000000 	andeq	r0, r0, r0
    11ec:	01000000 	mrseq	r0, (UNDEF: 0)
    11f0:	00010000 	andeq	r0, r1, r0
    11f4:	00000000 	andeq	r0, r0, r0
    11f8:	03000000 	movweq	r0, #0
    11fc:	9f0c7200 	svcls	0x000c7200
	...
    1208:	00520001 	subseq	r0, r2, r1
    120c:	00000000 	andeq	r0, r0, r0
    1210:	01000000 	mrseq	r0, (UNDEF: 0)
    1214:	00000001 	andeq	r0, r0, r1
    1218:	00000000 	andeq	r0, r0, r0
    121c:	53000100 	movwpl	r0, #256	; 0x100
	...
    1228:	00000100 	andeq	r0, r0, r0, lsl #2
    122c:	00000000 	andeq	r0, r0, r0
    1230:	00010000 	andeq	r0, r1, r0
    1234:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1244:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    1250:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1254:	0000000c 	andeq	r0, r0, ip
    1258:	00000000 	andeq	r0, r0, r0
    125c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1260:	00000018 	andeq	r0, r0, r8, lsl r0
    1264:	00000000 	andeq	r0, r0, r0
    1268:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    126c:	0000000c 	andeq	r0, r0, ip
	...
    1280:	01000000 	mrseq	r0, (UNDEF: 0)
    1284:	00005000 	andeq	r5, r0, r0
    1288:	00000000 	andeq	r0, r0, r0
    128c:	00010000 	andeq	r0, r1, r0
    1290:	00000054 	andeq	r0, r0, r4, asr r0
    1294:	00000000 	andeq	r0, r0, r0
    1298:	f3000400 	vshl.u8	d0, d0, d0
    129c:	009f5001 	addseq	r5, pc, r1
	...
    12b4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    12c0:	00520001 	subseq	r0, r2, r1
    12c4:	00000000 	andeq	r0, r0, r0
    12c8:	04000000 	streq	r0, [r0], #-0
    12cc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    12d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    12e8:	52000100 	andpl	r0, r0, #0, 2
	...
    12f4:	2c700002 	ldclcs	0, cr0, [r0], #-8
	...
    1300:	2c740002 	ldclcs	0, cr0, [r4], #-8
	...
    130c:	01f30004 	mvnseq	r0, r4
    1310:	00009f52 	andeq	r9, r0, r2, asr pc
    1314:	00000000 	andeq	r0, r0, r0
    1318:	00010000 	andeq	r0, r1, r0
	...
    1324:	cdf20006 	ldclgt	0, cr0, [r2, #24]!
    1328:	00000045 	andeq	r0, r0, r5, asr #32
	...
    133c:	00010000 	andeq	r0, r1, r0
    1340:	00000053 	andeq	r0, r0, r3, asr r0
	...
    134c:	00010000 	andeq	r0, r1, r0
    1350:	00000000 	andeq	r0, r0, r0
    1354:	03000000 	movweq	r0, #0
    1358:	9f0c7200 	svcls	0x000c7200
	...
    1364:	00530001 	subseq	r0, r3, r1
    1368:	00000000 	andeq	r0, r0, r0
    136c:	03000000 	movweq	r0, #0
    1370:	9f0c7200 	svcls	0x000c7200
	...
    137c:	00000100 	andeq	r0, r0, r0, lsl #2
    1380:	00000000 	andeq	r0, r0, r0
    1384:	00010000 	andeq	r0, r1, r0
    1388:	00000053 	andeq	r0, r0, r3, asr r0
    138c:	00000000 	andeq	r0, r0, r0
    1390:	00000100 	andeq	r0, r0, r0, lsl #2
    1394:	00000001 	andeq	r0, r0, r1
    1398:	00000000 	andeq	r0, r0, r0
    139c:	72000300 	andvc	r0, r0, #0, 6
    13a0:	00009f0c 	andeq	r9, r0, ip, lsl #30
    13a4:	00000000 	andeq	r0, r0, r0
    13a8:	00010000 	andeq	r0, r1, r0
    13ac:	00000052 	andeq	r0, r0, r2, asr r0
    13b0:	00000000 	andeq	r0, r0, r0
    13b4:	00010100 	andeq	r0, r1, r0, lsl #2
    13b8:	00000000 	andeq	r0, r0, r0
    13bc:	01000000 	mrseq	r0, (UNDEF: 0)
    13c0:	00005300 	andeq	r5, r0, r0, lsl #6
    13c4:	00000000 	andeq	r0, r0, r0
    13c8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    13d4:	00510001 	subseq	r0, r1, r1
	...
    13e8:	53000100 	movwpl	r0, #256	; 0x100
	...
    13f8:	00000100 	andeq	r0, r0, r0, lsl #2
    13fc:	00000000 	andeq	r0, r0, r0
    1400:	00030000 	andeq	r0, r3, r0
    1404:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    1408:	00000000 	andeq	r0, r0, r0
    140c:	01000000 	mrseq	r0, (UNDEF: 0)
    1410:	00005300 	andeq	r5, r0, r0, lsl #6
    1414:	00000000 	andeq	r0, r0, r0
    1418:	00030000 	andeq	r0, r3, r0
    141c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    1428:	00000001 	andeq	r0, r0, r1
    142c:	00000000 	andeq	r0, r0, r0
    1430:	53000100 	movwpl	r0, #256	; 0x100
	...
    143c:	01000001 	tsteq	r0, r1
	...
    1448:	14720003 	ldrbtne	r0, [r2], #-3
    144c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1450:	00000000 	andeq	r0, r0, r0
    1454:	52000100 	andpl	r0, r0, #0, 2
	...
    1460:	00000101 	andeq	r0, r0, r1, lsl #2
    1464:	00000000 	andeq	r0, r0, r0
    1468:	00010000 	andeq	r0, r1, r0
    146c:	00000053 	andeq	r0, r0, r3, asr r0
    1470:	00000000 	andeq	r0, r0, r0
    1474:	00010000 	andeq	r0, r1, r0
    1478:	00000000 	andeq	r0, r0, r0
    147c:	01000000 	mrseq	r0, (UNDEF: 0)
    1480:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1494:	00530001 	subseq	r0, r3, r1
	...
    14a4:	00000001 	andeq	r0, r0, r1
    14a8:	00000000 	andeq	r0, r0, r0
    14ac:	72000300 	andvc	r0, r0, #0, 6
    14b0:	00009f14 	andeq	r9, r0, r4, lsl pc
    14b4:	00000000 	andeq	r0, r0, r0
    14b8:	00010000 	andeq	r0, r1, r0
    14bc:	00000053 	andeq	r0, r0, r3, asr r0
    14c0:	00000000 	andeq	r0, r0, r0
    14c4:	72000300 	andvc	r0, r0, #0, 6
    14c8:	00009f14 	andeq	r9, r0, r4, lsl pc
    14cc:	00000000 	andeq	r0, r0, r0
    14d0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    14dc:	00530001 	subseq	r0, r3, r1
    14e0:	00000000 	andeq	r0, r0, r0
    14e4:	01000000 	mrseq	r0, (UNDEF: 0)
    14e8:	00010000 	andeq	r0, r1, r0
    14ec:	00000000 	andeq	r0, r0, r0
    14f0:	03000000 	movweq	r0, #0
    14f4:	9f147200 	svcls	0x00147200
	...
    1500:	00520001 	subseq	r0, r2, r1
    1504:	00000000 	andeq	r0, r0, r0
    1508:	01000000 	mrseq	r0, (UNDEF: 0)
    150c:	00000001 	andeq	r0, r0, r1
    1510:	00000000 	andeq	r0, r0, r0
    1514:	53000100 	movwpl	r0, #256	; 0x100
	...
    1520:	00000100 	andeq	r0, r0, r0, lsl #2
    1524:	00000000 	andeq	r0, r0, r0
    1528:	00010000 	andeq	r0, r1, r0
    152c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1540:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    154c:	01f30004 	mvnseq	r0, r4
    1550:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    1568:	00520001 	subseq	r0, r2, r1
    156c:	00000000 	andeq	r0, r0, r0
    1570:	02000000 	andeq	r0, r0, #0
    1574:	002c7000 	eoreq	r7, ip, r0
    1578:	00000000 	andeq	r0, r0, r0
    157c:	04000000 	streq	r0, [r0], #-0
    1580:	5201f300 	andpl	pc, r1, #0, 6
    1584:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1588:	00000000 	andeq	r0, r0, r0
    158c:	000b9000 	andeq	r9, fp, r0
    1590:	000b9408 	andeq	r9, fp, r8, lsl #8
    1594:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    1598:	000b9400 	andeq	r9, fp, r0, lsl #8
    159c:	000b9608 	andeq	r9, fp, r8, lsl #12
    15a0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    15a4:	000b961c 	andeq	r9, fp, ip, lsl r6
    15a8:	000c0e08 	andeq	r0, ip, r8, lsl #28
    15ac:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    15b0:	000c0e28 	andeq	r0, ip, r8, lsr #28
    15b4:	000c1208 	andeq	r1, ip, r8, lsl #4
    15b8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    15bc:	000c121c 	andeq	r1, ip, ip, lsl r2
    15c0:	000c1a08 	andeq	r1, ip, r8, lsl #20
    15c4:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    15c8:	00000028 	andeq	r0, r0, r8, lsr #32
    15cc:	00000000 	andeq	r0, r0, r0
    15d0:	01010000 	mrseq	r0, (UNDEF: 1)
    15d4:	000b9000 	andeq	r9, fp, r0
    15d8:	000ba208 	andeq	sl, fp, r8, lsl #4
    15dc:	50000108 	andpl	r0, r0, r8, lsl #2
    15e0:	08000ba2 	stmdaeq	r0, {r1, r5, r7, r8, r9, fp}
    15e4:	08000c1a 	stmdaeq	r0, {r1, r3, r4, sl, fp}
    15e8:	00550001 	subseq	r0, r5, r1
	...
    15f4:	90000101 	andls	r0, r0, r1, lsl #2
    15f8:	a208000b 	andge	r0, r8, #11
    15fc:	0108000b 	tsteq	r8, fp
    1600:	0ba25100 	bleq	fe895a08 <_estack+0xde8947d0>
    1604:	0c1a0800 	ldceq	8, cr0, [sl], {-0}
    1608:	00010800 	andeq	r0, r1, r0, lsl #16
    160c:	00000056 	andeq	r0, r0, r6, asr r0
    1610:	00000000 	andeq	r0, r0, r0
    1614:	01010000 	mrseq	r0, (UNDEF: 1)
    1618:	000b9000 	andeq	r9, fp, r0
    161c:	000ba208 	andeq	sl, fp, r8, lsl #4
    1620:	52000108 	andpl	r0, r0, #8, 2
    1624:	08000ba2 	stmdaeq	r0, {r1, r5, r7, r8, r9, fp}
    1628:	08000c1a 	stmdaeq	r0, {r1, r3, r4, sl, fp}
    162c:	01f30004 	mvnseq	r0, r4
    1630:	00009f52 	andeq	r9, r0, r2, asr pc
    1634:	00000000 	andeq	r0, r0, r0
    1638:	01000000 	mrseq	r0, (UNDEF: 0)
    163c:	0b900001 	bleq	fe401648 <_estack+0xde400410>
    1640:	0ba20800 	bleq	fe883648 <_estack+0xde882410>
    1644:	00010800 	andeq	r0, r1, r0, lsl #16
    1648:	000ba253 	andeq	sl, fp, r3, asr r2
    164c:	000c1a08 	andeq	r1, ip, r8, lsl #20
    1650:	59000108 	stmdbpl	r0, {r3, r8}
	...
    1660:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
    1664:	08000c12 	stmdaeq	r0, {r1, r4, sl, fp}
    1668:	00910002 	addseq	r0, r1, r2
    166c:	08000c12 	stmdaeq	r0, {r1, r4, sl, fp}
    1670:	08000c1a 	stmdaeq	r0, {r1, r3, r4, sl, fp}
    1674:	00910002 	addseq	r0, r1, r2
	...
    1688:	007d0002 	rsbseq	r0, sp, r2
	...
    1694:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    16b0:	00500001 	subseq	r0, r0, r1
    16b4:	00000000 	andeq	r0, r0, r0
    16b8:	04000000 	streq	r0, [r0], #-0
    16bc:	5001f300 	andpl	pc, r1, r0, lsl #6
    16c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    16c4:	00000000 	andeq	r0, r0, r0
    16c8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    16d4:	01f30004 	mvnseq	r0, r4
    16d8:	00009f50 	andeq	r9, r0, r0, asr pc
    16dc:	00000000 	andeq	r0, r0, r0
    16e0:	00010000 	andeq	r0, r1, r0
	...
    16f4:	9f300002 	svcls	0x00300002
	...
    1700:	0072000b 	rsbseq	r0, r2, fp
    1704:	301a8008 	andscc	r8, sl, r8
    1708:	1aff082e 	bne	fffc37c8 <_estack+0xdffc2590>
    170c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1710:	00000000 	andeq	r0, r0, r0
    1714:	72000800 	andvc	r0, r0, #0, 16
    1718:	082e3000 	stmdaeq	lr!, {ip, sp}
    171c:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    1720:	00000000 	andeq	r0, r0, r0
    1724:	0b000000 	bleq	172c <_Min_Heap_Size+0xf2c>
    1728:	08007200 	stmdaeq	r0, {r9, ip, sp, lr}
    172c:	2e301a80 	vaddcs.f32	s2, s1, s0
    1730:	9f1aff08 	svcls	0x001aff08
	...
    173c:	00720008 	rsbseq	r0, r2, r8
    1740:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    1744:	00009f1a 	andeq	r9, r0, sl, lsl pc
	...
    1758:	00540001 	subseq	r0, r4, r1
	...
    1768:	02000000 	andeq	r0, r0, #0
    176c:	00007d00 	andeq	r7, r0, r0, lsl #26
    1770:	00000000 	andeq	r0, r0, r0
    1774:	02000000 	andeq	r0, r0, #0
    1778:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    178c:	01000000 	mrseq	r0, (UNDEF: 0)
    1790:	00005000 	andeq	r5, r0, r0
    1794:	00000000 	andeq	r0, r0, r0
    1798:	00040000 	andeq	r0, r4, r0
    179c:	9f5001f3 	svcls	0x005001f3
	...
    17b4:	00500001 	subseq	r0, r0, r1
    17b8:	00000000 	andeq	r0, r0, r0
    17bc:	01000000 	mrseq	r0, (UNDEF: 0)
    17c0:	00005000 	andeq	r5, r0, r0
	...
    17d0:	00020000 	andeq	r0, r2, r0
    17d4:	0000007d 	andeq	r0, r0, sp, ror r0
    17d8:	00000000 	andeq	r0, r0, r0
    17dc:	00020000 	andeq	r0, r2, r0
    17e0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    17f8:	00500001 	subseq	r0, r0, r1
    17fc:	00000000 	andeq	r0, r0, r0
    1800:	01000000 	mrseq	r0, (UNDEF: 0)
    1804:	00005300 	andeq	r5, r0, r0, lsl #6
    1808:	00000000 	andeq	r0, r0, r0
    180c:	00040000 	andeq	r0, r4, r0
    1810:	9f5001f3 	svcls	0x005001f3
	...
    1828:	00500001 	subseq	r0, r0, r1
    182c:	00000000 	andeq	r0, r0, r0
    1830:	01000000 	mrseq	r0, (UNDEF: 0)
    1834:	00005000 	andeq	r5, r0, r0
	...
    1848:	00530001 	subseq	r0, r3, r1
	...
    1858:	00000001 	andeq	r0, r0, r1
    185c:	00000000 	andeq	r0, r0, r0
    1860:	72000300 	andvc	r0, r0, #0, 6
    1864:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1868:	00000000 	andeq	r0, r0, r0
    186c:	00010000 	andeq	r0, r1, r0
    1870:	00000053 	andeq	r0, r0, r3, asr r0
    1874:	00000000 	andeq	r0, r0, r0
    1878:	72000300 	andvc	r0, r0, #0, 6
    187c:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1880:	00000000 	andeq	r0, r0, r0
    1884:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1890:	00530001 	subseq	r0, r3, r1
    1894:	00000000 	andeq	r0, r0, r0
    1898:	01000000 	mrseq	r0, (UNDEF: 0)
    189c:	00010000 	andeq	r0, r1, r0
    18a0:	00000000 	andeq	r0, r0, r0
    18a4:	03000000 	movweq	r0, #0
    18a8:	9f0c7200 	svcls	0x000c7200
	...
    18b4:	00520001 	subseq	r0, r2, r1
    18b8:	00000000 	andeq	r0, r0, r0
    18bc:	01000000 	mrseq	r0, (UNDEF: 0)
    18c0:	00000001 	andeq	r0, r0, r1
    18c4:	00000000 	andeq	r0, r0, r0
    18c8:	53000100 	movwpl	r0, #256	; 0x100
	...
    18d4:	00000100 	andeq	r0, r0, r0, lsl #2
    18d8:	00000000 	andeq	r0, r0, r0
    18dc:	00010000 	andeq	r0, r1, r0
    18e0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    18f0:	01000000 	mrseq	r0, (UNDEF: 0)
    18f4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1900:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    190c:	14720003 	ldrbtne	r0, [r2], #-3
    1910:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1914:	00000000 	andeq	r0, r0, r0
    1918:	53000100 	movwpl	r0, #256	; 0x100
	...
    1924:	14720003 	ldrbtne	r0, [r2], #-3
    1928:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    192c:	00000000 	andeq	r0, r0, r0
    1930:	00010000 	andeq	r0, r1, r0
    1934:	00000000 	andeq	r0, r0, r0
    1938:	01000000 	mrseq	r0, (UNDEF: 0)
    193c:	00005300 	andeq	r5, r0, r0, lsl #6
    1940:	00000000 	andeq	r0, r0, r0
    1944:	00010000 	andeq	r0, r1, r0
    1948:	00000100 	andeq	r0, r0, r0, lsl #2
    194c:	00000000 	andeq	r0, r0, r0
    1950:	00030000 	andeq	r0, r3, r0
    1954:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    1958:	00000000 	andeq	r0, r0, r0
    195c:	01000000 	mrseq	r0, (UNDEF: 0)
    1960:	00005200 	andeq	r5, r0, r0, lsl #4
    1964:	00000000 	andeq	r0, r0, r0
    1968:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1974:	00530001 	subseq	r0, r3, r1
	...
    1980:	00000001 	andeq	r0, r0, r1
    1984:	00000000 	andeq	r0, r0, r0
    1988:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    199c:	00010000 	andeq	r0, r1, r0
    19a0:	00000053 	andeq	r0, r0, r3, asr r0
	...
    19ac:	00010000 	andeq	r0, r1, r0
    19b0:	00000000 	andeq	r0, r0, r0
    19b4:	03000000 	movweq	r0, #0
    19b8:	9f147200 	svcls	0x00147200
	...
    19c4:	00530001 	subseq	r0, r3, r1
    19c8:	00000000 	andeq	r0, r0, r0
    19cc:	03000000 	movweq	r0, #0
    19d0:	9f147200 	svcls	0x00147200
	...
    19dc:	00000100 	andeq	r0, r0, r0, lsl #2
    19e0:	00000000 	andeq	r0, r0, r0
    19e4:	00010000 	andeq	r0, r1, r0
    19e8:	00000053 	andeq	r0, r0, r3, asr r0
    19ec:	00000000 	andeq	r0, r0, r0
    19f0:	00000100 	andeq	r0, r0, r0, lsl #2
    19f4:	00000001 	andeq	r0, r0, r1
    19f8:	00000000 	andeq	r0, r0, r0
    19fc:	72000300 	andvc	r0, r0, #0, 6
    1a00:	00009f14 	andeq	r9, r0, r4, lsl pc
    1a04:	00000000 	andeq	r0, r0, r0
    1a08:	00010000 	andeq	r0, r1, r0
    1a0c:	00000052 	andeq	r0, r0, r2, asr r0
    1a10:	00000000 	andeq	r0, r0, r0
    1a14:	00010100 	andeq	r0, r1, r0, lsl #2
    1a18:	00000000 	andeq	r0, r0, r0
    1a1c:	01000000 	mrseq	r0, (UNDEF: 0)
    1a20:	00005300 	andeq	r5, r0, r0, lsl #6
    1a24:	00000000 	andeq	r0, r0, r0
    1a28:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1a34:	00510001 	subseq	r0, r1, r1
	...
    1a48:	53000100 	movwpl	r0, #256	; 0x100
	...
    1a58:	00000100 	andeq	r0, r0, r0, lsl #2
    1a5c:	00000000 	andeq	r0, r0, r0
    1a60:	00030000 	andeq	r0, r3, r0
    1a64:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1a68:	00000000 	andeq	r0, r0, r0
    1a6c:	01000000 	mrseq	r0, (UNDEF: 0)
    1a70:	00005300 	andeq	r5, r0, r0, lsl #6
    1a74:	00000000 	andeq	r0, r0, r0
    1a78:	00030000 	andeq	r0, r3, r0
    1a7c:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    1a88:	00000001 	andeq	r0, r0, r1
    1a8c:	00000000 	andeq	r0, r0, r0
    1a90:	53000100 	movwpl	r0, #256	; 0x100
	...
    1a9c:	01000001 	tsteq	r0, r1
	...
    1aa8:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1aac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1ab0:	00000000 	andeq	r0, r0, r0
    1ab4:	52000100 	andpl	r0, r0, #0, 2
	...
    1ac0:	00000101 	andeq	r0, r0, r1, lsl #2
    1ac4:	00000000 	andeq	r0, r0, r0
    1ac8:	00010000 	andeq	r0, r1, r0
    1acc:	00000053 	andeq	r0, r0, r3, asr r0
    1ad0:	00000000 	andeq	r0, r0, r0
    1ad4:	00010000 	andeq	r0, r1, r0
    1ad8:	00000000 	andeq	r0, r0, r0
    1adc:	01000000 	mrseq	r0, (UNDEF: 0)
    1ae0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1af0:	00020000 	andeq	r0, r2, r0
    1af4:	0000007d 	andeq	r0, r0, sp, ror r0
    1af8:	00000000 	andeq	r0, r0, r0
    1afc:	00020000 	andeq	r0, r2, r0
    1b00:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    1b14:	00010000 	andeq	r0, r1, r0
    1b18:	00000050 	andeq	r0, r0, r0, asr r0
    1b1c:	00000000 	andeq	r0, r0, r0
    1b20:	f3000400 	vshl.u8	d0, d0, d0
    1b24:	009f5001 	addseq	r5, pc, r1
    1b28:	00000000 	andeq	r0, r0, r0
    1b2c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1b38:	02000000 	andeq	r0, r0, #0
    1b3c:	00387000 	eorseq	r7, r8, r0
    1b40:	00000000 	andeq	r0, r0, r0
    1b44:	01000000 	mrseq	r0, (UNDEF: 0)
    1b48:	00005000 	andeq	r5, r0, r0
	...
    1b58:	00020000 	andeq	r0, r2, r0
    1b5c:	0000007d 	andeq	r0, r0, sp, ror r0
    1b60:	00000000 	andeq	r0, r0, r0
    1b64:	00020000 	andeq	r0, r2, r0
    1b68:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    1b80:	00500001 	subseq	r0, r0, r1
    1b84:	00000000 	andeq	r0, r0, r0
    1b88:	01000000 	mrseq	r0, (UNDEF: 0)
    1b8c:	00005300 	andeq	r5, r0, r0, lsl #6
    1b90:	00000000 	andeq	r0, r0, r0
    1b94:	00040000 	andeq	r0, r4, r0
    1b98:	9f5001f3 	svcls	0x005001f3
	...
    1bb0:	00500001 	subseq	r0, r0, r1
    1bb4:	00000000 	andeq	r0, r0, r0
    1bb8:	01000000 	mrseq	r0, (UNDEF: 0)
    1bbc:	00005000 	andeq	r5, r0, r0
	...
    1bd0:	00530001 	subseq	r0, r3, r1
	...
    1be0:	00000001 	andeq	r0, r0, r1
    1be4:	00000000 	andeq	r0, r0, r0
    1be8:	72000300 	andvc	r0, r0, #0, 6
    1bec:	00009f14 	andeq	r9, r0, r4, lsl pc
    1bf0:	00000000 	andeq	r0, r0, r0
    1bf4:	00010000 	andeq	r0, r1, r0
    1bf8:	00000053 	andeq	r0, r0, r3, asr r0
    1bfc:	00000000 	andeq	r0, r0, r0
    1c00:	72000300 	andvc	r0, r0, #0, 6
    1c04:	00009f14 	andeq	r9, r0, r4, lsl pc
    1c08:	00000000 	andeq	r0, r0, r0
    1c0c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1c18:	00530001 	subseq	r0, r3, r1
    1c1c:	00000000 	andeq	r0, r0, r0
    1c20:	01000000 	mrseq	r0, (UNDEF: 0)
    1c24:	00010000 	andeq	r0, r1, r0
    1c28:	00000000 	andeq	r0, r0, r0
    1c2c:	03000000 	movweq	r0, #0
    1c30:	9f147200 	svcls	0x00147200
	...
    1c3c:	00520001 	subseq	r0, r2, r1
    1c40:	00000000 	andeq	r0, r0, r0
    1c44:	01000000 	mrseq	r0, (UNDEF: 0)
    1c48:	00000001 	andeq	r0, r0, r1
    1c4c:	00000000 	andeq	r0, r0, r0
    1c50:	53000100 	movwpl	r0, #256	; 0x100
	...
    1c5c:	00000100 	andeq	r0, r0, r0, lsl #2
    1c60:	00000000 	andeq	r0, r0, r0
    1c64:	00010000 	andeq	r0, r1, r0
    1c68:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1c78:	01000000 	mrseq	r0, (UNDEF: 0)
    1c7c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1c88:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1c94:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1c98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1c9c:	00000000 	andeq	r0, r0, r0
    1ca0:	53000100 	movwpl	r0, #256	; 0x100
	...
    1cac:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1cb0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1cb4:	00000000 	andeq	r0, r0, r0
    1cb8:	00010000 	andeq	r0, r1, r0
    1cbc:	00000000 	andeq	r0, r0, r0
    1cc0:	01000000 	mrseq	r0, (UNDEF: 0)
    1cc4:	00005300 	andeq	r5, r0, r0, lsl #6
    1cc8:	00000000 	andeq	r0, r0, r0
    1ccc:	00010000 	andeq	r0, r1, r0
    1cd0:	00000100 	andeq	r0, r0, r0, lsl #2
    1cd4:	00000000 	andeq	r0, r0, r0
    1cd8:	00030000 	andeq	r0, r3, r0
    1cdc:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1ce0:	00000000 	andeq	r0, r0, r0
    1ce4:	01000000 	mrseq	r0, (UNDEF: 0)
    1ce8:	00005200 	andeq	r5, r0, r0, lsl #4
    1cec:	00000000 	andeq	r0, r0, r0
    1cf0:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1cfc:	00530001 	subseq	r0, r3, r1
	...
    1d08:	00000001 	andeq	r0, r0, r1
    1d0c:	00000000 	andeq	r0, r0, r0
    1d10:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1d28:	00500001 	subseq	r0, r0, r1
    1d2c:	00000000 	andeq	r0, r0, r0
    1d30:	04000000 	streq	r0, [r0], #-0
    1d34:	5001f300 	andpl	pc, r1, r0, lsl #6
    1d38:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1d4c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1d58:	01f30004 	mvnseq	r0, r4
    1d5c:	00009f50 	andeq	r9, r0, r0, asr pc
    1d60:	00000000 	andeq	r0, r0, r0
    1d64:	00020000 	andeq	r0, r2, r0
	...
    1d70:	00020000 	andeq	r0, r2, r0
    1d74:	00009f30 	andeq	r9, r0, r0, lsr pc
    1d78:	00000000 	andeq	r0, r0, r0
    1d7c:	00010000 	andeq	r0, r1, r0
    1d80:	00000053 	andeq	r0, r0, r3, asr r0
    1d84:	00000000 	andeq	r0, r0, r0
    1d88:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    1d94:	30000200 	andcc	r0, r0, r0, lsl #4
    1d98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1d9c:	00000000 	andeq	r0, r0, r0
    1da0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1dbc:	00500001 	subseq	r0, r0, r1
    1dc0:	00000000 	andeq	r0, r0, r0
    1dc4:	04000000 	streq	r0, [r0], #-0
    1dc8:	5001f300 	andpl	pc, r1, r0, lsl #6
    1dcc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1dd0:	00000000 	andeq	r0, r0, r0
    1dd4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1de0:	01f30004 	mvnseq	r0, r4
    1de4:	00009f50 	andeq	r9, r0, r0, asr pc
    1de8:	00000000 	andeq	r0, r0, r0
    1dec:	00020000 	andeq	r0, r2, r0
	...
    1dfc:	00020000 	andeq	r0, r2, r0
    1e00:	00009f30 	andeq	r9, r0, r0, lsr pc
    1e04:	00000000 	andeq	r0, r0, r0
    1e08:	00010000 	andeq	r0, r1, r0
    1e0c:	00000053 	andeq	r0, r0, r3, asr r0
    1e10:	00000000 	andeq	r0, r0, r0
    1e14:	72000200 	andvc	r0, r0, #0, 4
    1e18:	0000000c 	andeq	r0, r0, ip
    1e1c:	00000000 	andeq	r0, r0, r0
    1e20:	30000200 	andcc	r0, r0, r0, lsl #4
    1e24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1e3c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1e48:	01f30004 	mvnseq	r0, r4
    1e4c:	00009f50 	andeq	r9, r0, r0, asr pc
    1e50:	00000000 	andeq	r0, r0, r0
    1e54:	00010000 	andeq	r0, r1, r0
    1e58:	00000050 	andeq	r0, r0, r0, asr r0
    1e5c:	00000000 	andeq	r0, r0, r0
    1e60:	f3000400 	vshl.u8	d0, d0, d0
    1e64:	009f5001 	addseq	r5, pc, r1
    1e68:	00000000 	andeq	r0, r0, r0
    1e6c:	02000000 	andeq	r0, r0, #0
	...
    1e7c:	02000000 	andeq	r0, r0, #0
    1e80:	009f3000 	addseq	r3, pc, r0
    1e84:	00000000 	andeq	r0, r0, r0
    1e88:	01000000 	mrseq	r0, (UNDEF: 0)
    1e8c:	00005300 	andeq	r5, r0, r0, lsl #6
    1e90:	00000000 	andeq	r0, r0, r0
    1e94:	00020000 	andeq	r0, r2, r0
    1e98:	00000c72 	andeq	r0, r0, r2, ror ip
    1e9c:	00000000 	andeq	r0, r0, r0
    1ea0:	00020000 	andeq	r0, r2, r0
    1ea4:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    1eb4:	00020000 	andeq	r0, r2, r0
    1eb8:	0000007d 	andeq	r0, r0, sp, ror r0
    1ebc:	00000000 	andeq	r0, r0, r0
    1ec0:	00020000 	andeq	r0, r2, r0
    1ec4:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    1ed8:	00010000 	andeq	r0, r1, r0
    1edc:	00000050 	andeq	r0, r0, r0, asr r0
    1ee0:	00000000 	andeq	r0, r0, r0
    1ee4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    1ef8:	00010000 	andeq	r0, r1, r0
    1efc:	00000053 	andeq	r0, r0, r3, asr r0
	...
    1f08:	00010000 	andeq	r0, r1, r0
    1f0c:	00000000 	andeq	r0, r0, r0
    1f10:	03000000 	movweq	r0, #0
    1f14:	9f0c7200 	svcls	0x000c7200
	...
    1f20:	00530001 	subseq	r0, r3, r1
    1f24:	00000000 	andeq	r0, r0, r0
    1f28:	03000000 	movweq	r0, #0
    1f2c:	9f0c7200 	svcls	0x000c7200
	...
    1f38:	00000100 	andeq	r0, r0, r0, lsl #2
    1f3c:	00000000 	andeq	r0, r0, r0
    1f40:	00010000 	andeq	r0, r1, r0
    1f44:	00000053 	andeq	r0, r0, r3, asr r0
    1f48:	00000000 	andeq	r0, r0, r0
    1f4c:	00000100 	andeq	r0, r0, r0, lsl #2
    1f50:	00000001 	andeq	r0, r0, r1
    1f54:	00000000 	andeq	r0, r0, r0
    1f58:	72000300 	andvc	r0, r0, #0, 6
    1f5c:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1f60:	00000000 	andeq	r0, r0, r0
    1f64:	00010000 	andeq	r0, r1, r0
    1f68:	00000052 	andeq	r0, r0, r2, asr r0
    1f6c:	00000000 	andeq	r0, r0, r0
    1f70:	00010100 	andeq	r0, r1, r0, lsl #2
    1f74:	00000000 	andeq	r0, r0, r0
    1f78:	01000000 	mrseq	r0, (UNDEF: 0)
    1f7c:	00005300 	andeq	r5, r0, r0, lsl #6
    1f80:	00000000 	andeq	r0, r0, r0
    1f84:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1f90:	00510001 	subseq	r0, r1, r1
	...
    1fa0:	02000000 	andeq	r0, r0, #0
    1fa4:	00007d00 	andeq	r7, r0, r0, lsl #26
    1fa8:	00000000 	andeq	r0, r0, r0
    1fac:	02000000 	andeq	r0, r0, #0
    1fb0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1fc4:	01000000 	mrseq	r0, (UNDEF: 0)
    1fc8:	00005000 	andeq	r5, r0, r0
    1fcc:	00000000 	andeq	r0, r0, r0
    1fd0:	00010000 	andeq	r0, r1, r0
    1fd4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1fe4:	01000000 	mrseq	r0, (UNDEF: 0)
    1fe8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1ff4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2000:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2004:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2008:	00000000 	andeq	r0, r0, r0
    200c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2018:	0c720003 	ldcleq	0, cr0, [r2], #-12
    201c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2020:	00000000 	andeq	r0, r0, r0
    2024:	00010000 	andeq	r0, r1, r0
    2028:	00000000 	andeq	r0, r0, r0
    202c:	01000000 	mrseq	r0, (UNDEF: 0)
    2030:	00005300 	andeq	r5, r0, r0, lsl #6
    2034:	00000000 	andeq	r0, r0, r0
    2038:	00010000 	andeq	r0, r1, r0
    203c:	00000100 	andeq	r0, r0, r0, lsl #2
    2040:	00000000 	andeq	r0, r0, r0
    2044:	00030000 	andeq	r0, r3, r0
    2048:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    204c:	00000000 	andeq	r0, r0, r0
    2050:	01000000 	mrseq	r0, (UNDEF: 0)
    2054:	00005200 	andeq	r5, r0, r0, lsl #4
    2058:	00000000 	andeq	r0, r0, r0
    205c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2068:	00530001 	subseq	r0, r3, r1
	...
    2074:	00000001 	andeq	r0, r0, r1
    2078:	00000000 	andeq	r0, r0, r0
    207c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2090:	007d0002 	rsbseq	r0, sp, r2
	...
    209c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    20b4:	00500001 	subseq	r0, r0, r1
    20b8:	00000000 	andeq	r0, r0, r0
    20bc:	01000000 	mrseq	r0, (UNDEF: 0)
    20c0:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    20d4:	00530001 	subseq	r0, r3, r1
	...
    20e4:	00000001 	andeq	r0, r0, r1
    20e8:	00000000 	andeq	r0, r0, r0
    20ec:	72000300 	andvc	r0, r0, #0, 6
    20f0:	00009f0c 	andeq	r9, r0, ip, lsl #30
    20f4:	00000000 	andeq	r0, r0, r0
    20f8:	00010000 	andeq	r0, r1, r0
    20fc:	00000053 	andeq	r0, r0, r3, asr r0
    2100:	00000000 	andeq	r0, r0, r0
    2104:	72000300 	andvc	r0, r0, #0, 6
    2108:	00009f0c 	andeq	r9, r0, ip, lsl #30
    210c:	00000000 	andeq	r0, r0, r0
    2110:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    211c:	00530001 	subseq	r0, r3, r1
    2120:	00000000 	andeq	r0, r0, r0
    2124:	01000000 	mrseq	r0, (UNDEF: 0)
    2128:	00010000 	andeq	r0, r1, r0
    212c:	00000000 	andeq	r0, r0, r0
    2130:	03000000 	movweq	r0, #0
    2134:	9f0c7200 	svcls	0x000c7200
	...
    2140:	00520001 	subseq	r0, r2, r1
    2144:	00000000 	andeq	r0, r0, r0
    2148:	01000000 	mrseq	r0, (UNDEF: 0)
    214c:	00000001 	andeq	r0, r0, r1
    2150:	00000000 	andeq	r0, r0, r0
    2154:	53000100 	movwpl	r0, #256	; 0x100
	...
    2160:	00000100 	andeq	r0, r0, r0, lsl #2
    2164:	00000000 	andeq	r0, r0, r0
    2168:	00010000 	andeq	r0, r1, r0
    216c:	00000051 	andeq	r0, r0, r1, asr r0
    2170:	00000000 	andeq	r0, r0, r0
    2174:	000f2c00 	andeq	r2, pc, r0, lsl #24
    2178:	000f2e08 	andeq	r2, pc, r8, lsl #28
    217c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    2180:	000f2e00 	andeq	r2, pc, r0, lsl #28
    2184:	000f3008 	andeq	r3, pc, r8
    2188:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    218c:	000f300c 	andeq	r3, pc, ip
    2190:	000f7e08 	andeq	r7, pc, r8, lsl #28
    2194:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    2198:	000f7e18 	andeq	r7, pc, r8, lsl lr	; <UNPREDICTABLE>
    219c:	000f8008 	andeq	r8, pc, r8
    21a0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    21a4:	000f800c 	andeq	r8, pc, ip
    21a8:	0011b408 	andseq	fp, r1, r8, lsl #8
    21ac:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    21b0:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    21bc:	000f2c00 	andeq	r2, pc, r0, lsl #24
    21c0:	000f3808 	andeq	r3, pc, r8, lsl #16
    21c4:	50000108 	andpl	r0, r0, r8, lsl #2
    21c8:	08000f38 	stmdaeq	r0, {r3, r4, r5, r8, r9, sl, fp}
    21cc:	080011b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, ip}
    21d0:	00540001 	subseq	r0, r4, r1
	...
    21e8:	000f3600 	andeq	r3, pc, r0, lsl #12
    21ec:	000f7c08 	andeq	r7, pc, r8, lsl #24
    21f0:	53000108 	movwpl	r0, #264	; 0x108
    21f4:	08000f80 	stmdaeq	r0, {r7, r8, r9, sl, fp}
    21f8:	08000f85 	stmdaeq	r0, {r0, r2, r7, r8, r9, sl, fp}
    21fc:	88530001 	ldmdahi	r3, {r0}^
    2200:	e408000f 	str	r0, [r8], #-15
    2204:	0108000f 	tsteq	r8, pc
    2208:	10385300 	eorsne	r5, r8, r0, lsl #6
    220c:	103d0800 	eorsne	r0, sp, r0, lsl #16
    2210:	00010800 	andeq	r0, r1, r0, lsl #16
    2214:	00105c53 	andseq	r5, r0, r3, asr ip
    2218:	00106e08 	andseq	r6, r0, r8, lsl #28
    221c:	53000108 	movwpl	r0, #264	; 0x108
    2220:	080011a0 	stmdaeq	r0, {r5, r7, r8, ip}
    2224:	080011a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, ip}
    2228:	a8530001 	ldmdage	r3, {r0}^
    222c:	ad080011 	stcge	0, cr0, [r8, #-68]	; 0xffffffbc
    2230:	01080011 	tsteq	r8, r1, lsl r0
    2234:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    224c:	0f380000 	svceq	0x00380000
    2250:	0f7c0800 	svceq	0x007c0800
    2254:	00010800 	andeq	r0, r1, r0, lsl #16
    2258:	000f8050 	andeq	r8, pc, r0, asr r0	; <UNPREDICTABLE>
    225c:	000f8208 	andeq	r8, pc, r8, lsl #4
    2260:	50000108 	andpl	r0, r0, r8, lsl #2
    2264:	08000f88 	stmdaeq	r0, {r3, r7, r8, r9, sl, fp}
    2268:	08000fe4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, sl, fp}
    226c:	38500001 	ldmdacc	r0, {r0}^
    2270:	3a080010 	bcc	2022b8 <_Min_Heap_Size+0x201ab8>
    2274:	01080010 	tsteq	r8, r0, lsl r0
    2278:	105c5000 	subsne	r5, ip, r0
    227c:	110e0800 	tstne	lr, r0, lsl #16
    2280:	00010800 	andeq	r0, r1, r0, lsl #16
    2284:	00112850 	andseq	r2, r1, r0, asr r8
    2288:	00114208 	andseq	r4, r1, r8, lsl #4
    228c:	50000108 	andpl	r0, r0, r8, lsl #2
    2290:	080011a0 	stmdaeq	r0, {r5, r7, r8, ip}
    2294:	080011a2 	stmdaeq	r0, {r1, r5, r7, r8, ip}
    2298:	a8500001 	ldmdage	r0, {r0}^
    229c:	aa080011 	bge	2022e8 <_Min_Heap_Size+0x201ae8>
    22a0:	01080011 	tsteq	r8, r1, lsl r0
    22a4:	00005000 	andeq	r5, r0, r0
	...
    22b0:	0f3a0000 	svceq	0x003a0000
    22b4:	0f520800 	svceq	0x00520800
    22b8:	00010800 	andeq	r0, r1, r0, lsl #16
    22bc:	000f8051 	andeq	r8, pc, r1, asr r0	; <UNPREDICTABLE>
    22c0:	000f8508 	andeq	r8, pc, r8, lsl #10
    22c4:	51000108 	tstpl	r0, r8, lsl #2
	...
    22d0:	00030301 	andeq	r0, r3, r1, lsl #6
    22d4:	0f3a0000 	svceq	0x003a0000
    22d8:	0f3a0800 	svceq	0x003a0800
    22dc:	00020800 	andeq	r0, r2, r0, lsl #16
    22e0:	0f3a9f30 	svceq	0x003a9f30
    22e4:	0f3e0800 	svceq	0x003e0800
    22e8:	00050800 	andeq	r0, r5, r0, lsl #16
    22ec:	1a3f0073 	bne	fc24c0 <_Min_Heap_Size+0xfc1cc0>
    22f0:	000f3e9f 	muleq	pc, pc, lr	; <UNPREDICTABLE>
    22f4:	0011b408 	andseq	fp, r1, r8, lsl #8
    22f8:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    2304:	00000002 	andeq	r0, r0, r2
	...
    2310:	08000f3a 	stmdaeq	r0, {r1, r3, r4, r5, r8, r9, sl, fp}
    2314:	08000f7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, sl, fp}
    2318:	9f300002 	svcls	0x00300002
    231c:	08000f80 	stmdaeq	r0, {r7, r8, r9, sl, fp}
    2320:	08000fec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, fp}
    2324:	9f300002 	svcls	0x00300002
    2328:	08000fec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, fp}
    232c:	08000ffb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, r8, r9, sl, fp}
    2330:	00730008 	rsbseq	r0, r3, r8
    2334:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    2338:	10389f1a 	eorsne	r9, r8, sl, lsl pc
    233c:	10400800 	subne	r0, r0, r0, lsl #16
    2340:	00020800 	andeq	r0, r2, r0, lsl #16
    2344:	10509f30 	subsne	r9, r0, r0, lsr pc
    2348:	10550800 	subsne	r0, r5, r0, lsl #16
    234c:	00080800 	andeq	r0, r8, r0, lsl #16
    2350:	2e300073 	mrccs	0, 1, r0, cr0, cr3, {3}
    2354:	9f1aff08 	svcls	0x001aff08
    2358:	0800105c 	stmdaeq	r0, {r2, r3, r4, r6, ip}
    235c:	080011b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, ip}
    2360:	9f300002 	svcls	0x00300002
	...
    236c:	10140000 	andsne	r0, r4, r0
    2370:	10200800 	eorne	r0, r0, r0, lsl #16
    2374:	00010800 	andeq	r0, r1, r0, lsl #16
    2378:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2384:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    2388:	0c080010 	stceq	0, cr0, [r8], {16}
    238c:	03080010 	movweq	r0, #32784	; 0x8010
    2390:	9f147200 	svcls	0x00147200
    2394:	0800100c 	stmdaeq	r0, {r2, r3, ip}
    2398:	08001010 	stmdaeq	r0, {r4, ip}
    239c:	10530001 	subsne	r0, r3, r1
    23a0:	10080010 	andne	r0, r8, r0, lsl r0
    23a4:	03080010 	movweq	r0, #32784	; 0x8010
    23a8:	9f147200 	svcls	0x00147200
	...
    23b4:	10100100 	andsne	r0, r0, r0, lsl #2
    23b8:	10100800 	andsne	r0, r0, r0, lsl #16
    23bc:	00010800 	andeq	r0, r1, r0, lsl #16
    23c0:	00000053 	andeq	r0, r0, r3, asr r0
    23c4:	00000000 	andeq	r0, r0, r0
    23c8:	00000100 	andeq	r0, r0, r0, lsl #2
    23cc:	00101401 	andseq	r1, r0, r1, lsl #8
    23d0:	00101608 	andseq	r1, r0, r8, lsl #12
    23d4:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    23d8:	10169f14 	andsne	r9, r6, r4, lsl pc
    23dc:	101a0800 	andsne	r0, sl, r0, lsl #16
    23e0:	00010800 	andeq	r0, r1, r0, lsl #16
    23e4:	00000052 	andeq	r0, r0, r2, asr r0
    23e8:	00000000 	andeq	r0, r0, r0
    23ec:	14010100 	strne	r0, [r1], #-256	; 0xffffff00
    23f0:	1a080010 	bne	202438 <_Min_Heap_Size+0x201c38>
    23f4:	01080010 	tsteq	r8, r0, lsl r0
    23f8:	00005300 	andeq	r5, r0, r0, lsl #6
    23fc:	00000000 	andeq	r0, r0, r0
    2400:	01000000 	mrseq	r0, (UNDEF: 0)
    2404:	0800101a 	stmdaeq	r0, {r1, r3, r4, ip}
    2408:	0800101a 	stmdaeq	r0, {r1, r3, r4, ip}
    240c:	00510001 	subseq	r0, r1, r1
	...
    2418:	8a000000 	bhi	2420 <_Min_Heap_Size+0x1c20>
    241c:	9c080010 	stcls	0, cr0, [r8], {16}
    2420:	01080010 	tsteq	r8, r0, lsl r0
    2424:	109c5300 	addsne	r5, ip, r0, lsl #6
    2428:	10f00800 	rscsne	r0, r0, r0, lsl #16
    242c:	00020800 	andeq	r0, r2, r0, lsl #16
    2430:	00002e74 	andeq	r2, r0, r4, ror lr
	...
    243c:	080010b0 	stmdaeq	r0, {r4, r5, r7, ip}
    2440:	080010ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, ip}
    2444:	00530001 	subseq	r0, r3, r1
	...
    2454:	0010a401 	andseq	sl, r0, r1, lsl #8
    2458:	0010a808 	andseq	sl, r0, r8, lsl #16
    245c:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    2460:	10a89f0c 	adcne	r9, r8, ip, lsl #30
    2464:	10ac0800 	adcne	r0, ip, r0, lsl #16
    2468:	00010800 	andeq	r0, r1, r0, lsl #16
    246c:	0010ac53 	andseq	sl, r0, r3, asr ip
    2470:	0010ac08 	andseq	sl, r0, r8, lsl #24
    2474:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    2478:	00009f0c 	andeq	r9, r0, ip, lsl #30
    247c:	00000000 	andeq	r0, r0, r0
    2480:	01000000 	mrseq	r0, (UNDEF: 0)
    2484:	080010ac 	stmdaeq	r0, {r2, r3, r5, r7, ip}
    2488:	080010ac 	stmdaeq	r0, {r2, r3, r5, r7, ip}
    248c:	00530001 	subseq	r0, r3, r1
    2490:	00000000 	andeq	r0, r0, r0
    2494:	01000000 	mrseq	r0, (UNDEF: 0)
    2498:	b0010000 	andlt	r0, r1, r0
    249c:	b2080010 	andlt	r0, r8, #16
    24a0:	03080010 	movweq	r0, #32784	; 0x8010
    24a4:	9f0c7200 	svcls	0x000c7200
    24a8:	080010b2 	stmdaeq	r0, {r1, r4, r5, r7, ip}
    24ac:	080010b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, ip}
    24b0:	00520001 	subseq	r0, r2, r1
    24b4:	00000000 	andeq	r0, r0, r0
    24b8:	01000000 	mrseq	r0, (UNDEF: 0)
    24bc:	0010b001 	andseq	fp, r0, r1
    24c0:	0010b608 	andseq	fp, r0, r8, lsl #12
    24c4:	53000108 	movwpl	r0, #264	; 0x108
	...
    24d0:	10b60100 	adcsne	r0, r6, r0, lsl #2
    24d4:	10b60800 	adcsne	r0, r6, r0, lsl #16
    24d8:	00010800 	andeq	r0, r1, r0, lsl #16
    24dc:	00000051 	andeq	r0, r0, r1, asr r0
    24e0:	00000000 	andeq	r0, r0, r0
    24e4:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
    24e8:	d2080010 	andle	r0, r8, #16
    24ec:	01080010 	tsteq	r8, r0, lsl r0
    24f0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    24fc:	01000000 	mrseq	r0, (UNDEF: 0)
    2500:	080010bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip}
    2504:	080010c0 	stmdaeq	r0, {r6, r7, ip}
    2508:	14720003 	ldrbtne	r0, [r2], #-3
    250c:	0010c09f 	mulseq	r0, pc, r0	; <UNPREDICTABLE>
    2510:	0010c408 	andseq	ip, r0, r8, lsl #8
    2514:	53000108 	movwpl	r0, #264	; 0x108
    2518:	080010c4 	stmdaeq	r0, {r2, r6, r7, ip}
    251c:	080010c4 	stmdaeq	r0, {r2, r6, r7, ip}
    2520:	14720003 	ldrbtne	r0, [r2], #-3
    2524:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2528:	00000000 	andeq	r0, r0, r0
    252c:	c4010000 	strgt	r0, [r1], #-0
    2530:	c4080010 	strgt	r0, [r8], #-16
    2534:	01080010 	tsteq	r8, r0, lsl r0
    2538:	00005300 	andeq	r5, r0, r0, lsl #6
    253c:	00000000 	andeq	r0, r0, r0
    2540:	00010000 	andeq	r0, r1, r0
    2544:	10c80100 	sbcne	r0, r8, r0, lsl #2
    2548:	10ca0800 	sbcne	r0, sl, r0, lsl #16
    254c:	00030800 	andeq	r0, r3, r0, lsl #16
    2550:	ca9f1472 	bgt	fe7c7720 <_estack+0xde7c64e8>
    2554:	ce080010 	mcrgt	0, 0, r0, cr8, cr0, {0}
    2558:	01080010 	tsteq	r8, r0, lsl r0
    255c:	00005200 	andeq	r5, r0, r0, lsl #4
    2560:	00000000 	andeq	r0, r0, r0
    2564:	01010000 	mrseq	r0, (UNDEF: 1)
    2568:	080010c8 	stmdaeq	r0, {r3, r6, r7, ip}
    256c:	080010ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, ip}
    2570:	00530001 	subseq	r0, r3, r1
	...
    257c:	0010ce01 	andseq	ip, r0, r1, lsl #28
    2580:	0010ce08 	andseq	ip, r0, r8, lsl #28
    2584:	51000108 	tstpl	r0, r8, lsl #2
	...
    2590:	10e00000 	rscne	r0, r0, r0
    2594:	10ec0800 	rscne	r0, ip, r0, lsl #16
    2598:	00010800 	andeq	r0, r1, r0, lsl #16
    259c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    25a8:	d4010000 	strle	r0, [r1], #-0
    25ac:	d8080010 	stmdale	r8, {r4}
    25b0:	03080010 	movweq	r0, #32784	; 0x8010
    25b4:	9f147200 	svcls	0x00147200
    25b8:	080010d8 	stmdaeq	r0, {r3, r4, r6, r7, ip}
    25bc:	080010dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip}
    25c0:	dc530001 	mrrcle	0, 0, r0, r3, cr1
    25c4:	dc080010 	stcle	0, cr0, [r8], {16}
    25c8:	03080010 	movweq	r0, #32784	; 0x8010
    25cc:	9f147200 	svcls	0x00147200
	...
    25d8:	10dc0100 	sbcsne	r0, ip, r0, lsl #2
    25dc:	10dc0800 	sbcsne	r0, ip, r0, lsl #16
    25e0:	00010800 	andeq	r0, r1, r0, lsl #16
    25e4:	00000053 	andeq	r0, r0, r3, asr r0
    25e8:	00000000 	andeq	r0, r0, r0
    25ec:	00000100 	andeq	r0, r0, r0, lsl #2
    25f0:	0010e001 	andseq	lr, r0, r1
    25f4:	0010e208 	andseq	lr, r0, r8, lsl #4
    25f8:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    25fc:	10e29f14 	rscne	r9, r2, r4, lsl pc
    2600:	10e60800 	rscne	r0, r6, r0, lsl #16
    2604:	00010800 	andeq	r0, r1, r0, lsl #16
    2608:	00000052 	andeq	r0, r0, r2, asr r0
    260c:	00000000 	andeq	r0, r0, r0
    2610:	e0010100 	and	r0, r1, r0, lsl #2
    2614:	e6080010 			; <UNDEFINED> instruction: 0xe6080010
    2618:	01080010 	tsteq	r8, r0, lsl r0
    261c:	00005300 	andeq	r5, r0, r0, lsl #6
    2620:	00000000 	andeq	r0, r0, r0
    2624:	01000000 	mrseq	r0, (UNDEF: 0)
    2628:	080010e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, ip}
    262c:	080010e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, ip}
    2630:	00510001 	subseq	r0, r1, r1
	...
    263c:	00110200 	andseq	r0, r1, r0, lsl #4
    2640:	00111108 	andseq	r1, r1, r8, lsl #2
    2644:	53000108 	movwpl	r0, #264	; 0x108
	...
    2654:	10f60100 	rscsne	r0, r6, r0, lsl #2
    2658:	10fa0800 	rscsne	r0, sl, r0, lsl #16
    265c:	00030800 	andeq	r0, r3, r0, lsl #16
    2660:	fa9f0c72 	blx	fe7c5830 <_estack+0xde7c45f8>
    2664:	fe080010 	mcr2	0, 0, r0, cr8, cr0, {0}
    2668:	01080010 	tsteq	r8, r0, lsl r0
    266c:	10fe5300 	rscsne	r5, lr, r0, lsl #6
    2670:	10fe0800 	rscsne	r0, lr, r0, lsl #16
    2674:	00030800 	andeq	r0, r3, r0, lsl #16
    2678:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    2684:	0010fe01 	andseq	pc, r0, r1, lsl #28
    2688:	0010fe08 	andseq	pc, r0, r8, lsl #28
    268c:	53000108 	movwpl	r0, #264	; 0x108
	...
    2698:	01000001 	tsteq	r0, r1
    269c:	08001102 	stmdaeq	r0, {r1, r8, ip}
    26a0:	08001104 	stmdaeq	r0, {r2, r8, ip}
    26a4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    26a8:	0011049f 	mulseq	r1, pc, r4	; <UNPREDICTABLE>
    26ac:	00110808 	andseq	r0, r1, r8, lsl #16
    26b0:	52000108 	andpl	r0, r0, #8, 2
	...
    26bc:	11020101 	tstne	r2, r1, lsl #2
    26c0:	11080800 	tstne	r8, r0, lsl #16
    26c4:	00010800 	andeq	r0, r1, r0, lsl #16
    26c8:	00000053 	andeq	r0, r0, r3, asr r0
    26cc:	00000000 	andeq	r0, r0, r0
    26d0:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    26d4:	08080011 	stmdaeq	r8, {r0, r4}
    26d8:	01080011 	tsteq	r8, r1, lsl r0
    26dc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    26e8:	08001132 	stmdaeq	r0, {r1, r4, r5, r8, ip}
    26ec:	0800119d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, ip}
    26f0:	00510001 	subseq	r0, r1, r1
	...
    26fc:	00115000 	andseq	r5, r1, r0
    2700:	00115a08 	andseq	r5, r1, r8, lsl #20
    2704:	53000108 	movwpl	r0, #264	; 0x108
	...
    2714:	11440100 	mrsne	r0, (UNDEF: 84)
    2718:	11480800 	cmpne	r8, r0, lsl #16
    271c:	00030800 	andeq	r0, r3, r0, lsl #16
    2720:	489f0c72 	ldmmi	pc, {r1, r4, r5, r6, sl, fp}	; <UNPREDICTABLE>
    2724:	4c080011 	stcmi	0, cr0, [r8], {17}
    2728:	01080011 	tsteq	r8, r1, lsl r0
    272c:	114c5300 	mrsne	r5, SPSR_mon
    2730:	114c0800 	cmpne	ip, r0, lsl #16
    2734:	00030800 	andeq	r0, r3, r0, lsl #16
    2738:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    2744:	00114c01 	andseq	r4, r1, r1, lsl #24
    2748:	00114c08 	andseq	r4, r1, r8, lsl #24
    274c:	53000108 	movwpl	r0, #264	; 0x108
	...
    2758:	01000001 	tsteq	r0, r1
    275c:	08001150 	stmdaeq	r0, {r4, r6, r8, ip}
    2760:	08001152 	stmdaeq	r0, {r1, r4, r6, r8, ip}
    2764:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2768:	0011529f 	mulseq	r1, pc, r2	; <UNPREDICTABLE>
    276c:	00115608 	andseq	r5, r1, r8, lsl #12
    2770:	52000108 	andpl	r0, r0, #8, 2
	...
    277c:	11500101 	cmpne	r0, r1, lsl #2
    2780:	11560800 	cmpne	r6, r0, lsl #16
    2784:	00010800 	andeq	r0, r1, r0, lsl #16
    2788:	00000053 	andeq	r0, r0, r3, asr r0
    278c:	00000000 	andeq	r0, r0, r0
    2790:	56010000 	strpl	r0, [r1], -r0
    2794:	56080011 			; <UNDEFINED> instruction: 0x56080011
    2798:	01080011 	tsteq	r8, r1, lsl r0
    279c:	00005000 	andeq	r5, r0, r0
	...
    27a8:	08001168 	stmdaeq	r0, {r3, r5, r6, r8, ip}
    27ac:	08001174 	stmdaeq	r0, {r2, r4, r5, r6, r8, ip}
    27b0:	00530001 	subseq	r0, r3, r1
	...
    27c0:	00115c01 	andseq	r5, r1, r1, lsl #24
    27c4:	00116008 	andseq	r6, r1, r8
    27c8:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    27cc:	11609f14 	cmnne	r0, r4, lsl pc
    27d0:	11640800 	cmnne	r4, r0, lsl #16
    27d4:	00010800 	andeq	r0, r1, r0, lsl #16
    27d8:	00116453 	andseq	r6, r1, r3, asr r4
    27dc:	00116408 	andseq	r6, r1, r8, lsl #8
    27e0:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    27e4:	00009f14 	andeq	r9, r0, r4, lsl pc
    27e8:	00000000 	andeq	r0, r0, r0
    27ec:	01000000 	mrseq	r0, (UNDEF: 0)
    27f0:	08001164 	stmdaeq	r0, {r2, r5, r6, r8, ip}
    27f4:	08001164 	stmdaeq	r0, {r2, r5, r6, r8, ip}
    27f8:	00530001 	subseq	r0, r3, r1
    27fc:	00000000 	andeq	r0, r0, r0
    2800:	01000000 	mrseq	r0, (UNDEF: 0)
    2804:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    2808:	6a080011 	bvs	202854 <_Min_Heap_Size+0x202054>
    280c:	03080011 	movweq	r0, #32785	; 0x8011
    2810:	9f147200 	svcls	0x00147200
    2814:	0800116a 	stmdaeq	r0, {r1, r3, r5, r6, r8, ip}
    2818:	0800116e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, ip}
    281c:	00520001 	subseq	r0, r2, r1
    2820:	00000000 	andeq	r0, r0, r0
    2824:	01000000 	mrseq	r0, (UNDEF: 0)
    2828:	00116801 	andseq	r6, r1, r1, lsl #16
    282c:	00116e08 	andseq	r6, r1, r8, lsl #28
    2830:	53000108 	movwpl	r0, #264	; 0x108
	...
    283c:	116e0100 	cmnne	lr, r0, lsl #2
    2840:	116e0800 	cmnne	lr, r0, lsl #16
    2844:	00010800 	andeq	r0, r1, r0, lsl #16
    2848:	00000050 	andeq	r0, r0, r0, asr r0
    284c:	00000000 	andeq	r0, r0, r0
    2850:	8a000000 	bhi	2858 <_Min_Heap_Size+0x2058>
    2854:	96080011 			; <UNDEFINED> instruction: 0x96080011
    2858:	01080011 	tsteq	r8, r1, lsl r0
    285c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2868:	01000000 	mrseq	r0, (UNDEF: 0)
    286c:	0800117e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, ip}
    2870:	08001182 	stmdaeq	r0, {r1, r7, r8, ip}
    2874:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2878:	0011829f 	mulseq	r1, pc, r2	; <UNPREDICTABLE>
    287c:	00118608 	andseq	r8, r1, r8, lsl #12
    2880:	53000108 	movwpl	r0, #264	; 0x108
    2884:	08001186 	stmdaeq	r0, {r1, r2, r7, r8, ip}
    2888:	08001186 	stmdaeq	r0, {r1, r2, r7, r8, ip}
    288c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2890:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2894:	00000000 	andeq	r0, r0, r0
    2898:	86010000 	strhi	r0, [r1], -r0
    289c:	86080011 			; <UNDEFINED> instruction: 0x86080011
    28a0:	01080011 	tsteq	r8, r1, lsl r0
    28a4:	00005300 	andeq	r5, r0, r0, lsl #6
    28a8:	00000000 	andeq	r0, r0, r0
    28ac:	00010000 	andeq	r0, r1, r0
    28b0:	118a0100 	orrne	r0, sl, r0, lsl #2
    28b4:	118c0800 	orrne	r0, ip, r0, lsl #16
    28b8:	00030800 	andeq	r0, r3, r0, lsl #16
    28bc:	8c9f0c72 	ldchi	12, cr0, [pc], {114}	; 0x72
    28c0:	90080011 	andls	r0, r8, r1, lsl r0
    28c4:	01080011 	tsteq	r8, r1, lsl r0
    28c8:	00005200 	andeq	r5, r0, r0, lsl #4
    28cc:	00000000 	andeq	r0, r0, r0
    28d0:	01010000 	mrseq	r0, (UNDEF: 1)
    28d4:	0800118a 	stmdaeq	r0, {r1, r3, r7, r8, ip}
    28d8:	08001190 	stmdaeq	r0, {r4, r7, r8, ip}
    28dc:	00530001 	subseq	r0, r3, r1
	...
    28e8:	00119001 	andseq	r9, r1, r1
    28ec:	00119008 	andseq	r9, r1, r8
    28f0:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    2904:	007d0002 	rsbseq	r0, sp, r2
	...
    2910:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2930:	00010000 	andeq	r0, r1, r0
    2934:	00000050 	andeq	r0, r0, r0, asr r0
    2938:	00000000 	andeq	r0, r0, r0
    293c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    2948:	00500001 	subseq	r0, r0, r1
    294c:	00000000 	andeq	r0, r0, r0
    2950:	01000000 	mrseq	r0, (UNDEF: 0)
    2954:	00005400 	andeq	r5, r0, r0, lsl #8
    2958:	00000000 	andeq	r0, r0, r0
    295c:	00010000 	andeq	r0, r1, r0
    2960:	00000050 	andeq	r0, r0, r0, asr r0
    2964:	00000000 	andeq	r0, r0, r0
    2968:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    2974:	01f30004 	mvnseq	r0, r4
    2978:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    298c:	00530001 	subseq	r0, r3, r1
	...
    299c:	00000001 	andeq	r0, r0, r1
    29a0:	00000000 	andeq	r0, r0, r0
    29a4:	72000300 	andvc	r0, r0, #0, 6
    29a8:	00009f0c 	andeq	r9, r0, ip, lsl #30
    29ac:	00000000 	andeq	r0, r0, r0
    29b0:	00010000 	andeq	r0, r1, r0
    29b4:	00000053 	andeq	r0, r0, r3, asr r0
    29b8:	00000000 	andeq	r0, r0, r0
    29bc:	72000300 	andvc	r0, r0, #0, 6
    29c0:	00009f0c 	andeq	r9, r0, ip, lsl #30
    29c4:	00000000 	andeq	r0, r0, r0
    29c8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    29d4:	00530001 	subseq	r0, r3, r1
    29d8:	00000000 	andeq	r0, r0, r0
    29dc:	01000000 	mrseq	r0, (UNDEF: 0)
    29e0:	00010000 	andeq	r0, r1, r0
    29e4:	00000000 	andeq	r0, r0, r0
    29e8:	03000000 	movweq	r0, #0
    29ec:	9f0c7200 	svcls	0x000c7200
	...
    29f8:	00520001 	subseq	r0, r2, r1
    29fc:	00000000 	andeq	r0, r0, r0
    2a00:	01000000 	mrseq	r0, (UNDEF: 0)
    2a04:	00000001 	andeq	r0, r0, r1
    2a08:	00000000 	andeq	r0, r0, r0
    2a0c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2a18:	00000100 	andeq	r0, r0, r0, lsl #2
    2a1c:	00000000 	andeq	r0, r0, r0
    2a20:	00010000 	andeq	r0, r1, r0
    2a24:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2a34:	01000000 	mrseq	r0, (UNDEF: 0)
    2a38:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2a44:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2a50:	14720003 	ldrbtne	r0, [r2], #-3
    2a54:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2a58:	00000000 	andeq	r0, r0, r0
    2a5c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2a68:	14720003 	ldrbtne	r0, [r2], #-3
    2a6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2a70:	00000000 	andeq	r0, r0, r0
    2a74:	00010000 	andeq	r0, r1, r0
    2a78:	00000000 	andeq	r0, r0, r0
    2a7c:	01000000 	mrseq	r0, (UNDEF: 0)
    2a80:	00005300 	andeq	r5, r0, r0, lsl #6
    2a84:	00000000 	andeq	r0, r0, r0
    2a88:	00010000 	andeq	r0, r1, r0
    2a8c:	00000100 	andeq	r0, r0, r0, lsl #2
    2a90:	00000000 	andeq	r0, r0, r0
    2a94:	00030000 	andeq	r0, r3, r0
    2a98:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    2a9c:	00000000 	andeq	r0, r0, r0
    2aa0:	01000000 	mrseq	r0, (UNDEF: 0)
    2aa4:	00005200 	andeq	r5, r0, r0, lsl #4
    2aa8:	00000000 	andeq	r0, r0, r0
    2aac:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2ab8:	00530001 	subseq	r0, r3, r1
	...
    2ac4:	00000001 	andeq	r0, r0, r1
    2ac8:	00000000 	andeq	r0, r0, r0
    2acc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2ae0:	00010000 	andeq	r0, r1, r0
    2ae4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2af0:	00010000 	andeq	r0, r1, r0
    2af4:	00000000 	andeq	r0, r0, r0
    2af8:	03000000 	movweq	r0, #0
    2afc:	9f0c7200 	svcls	0x000c7200
	...
    2b08:	00530001 	subseq	r0, r3, r1
    2b0c:	00000000 	andeq	r0, r0, r0
    2b10:	03000000 	movweq	r0, #0
    2b14:	9f0c7200 	svcls	0x000c7200
	...
    2b20:	00000100 	andeq	r0, r0, r0, lsl #2
    2b24:	00000000 	andeq	r0, r0, r0
    2b28:	00010000 	andeq	r0, r1, r0
    2b2c:	00000053 	andeq	r0, r0, r3, asr r0
    2b30:	00000000 	andeq	r0, r0, r0
    2b34:	00000100 	andeq	r0, r0, r0, lsl #2
    2b38:	00000001 	andeq	r0, r0, r1
    2b3c:	00000000 	andeq	r0, r0, r0
    2b40:	72000300 	andvc	r0, r0, #0, 6
    2b44:	00009f0c 	andeq	r9, r0, ip, lsl #30
    2b48:	00000000 	andeq	r0, r0, r0
    2b4c:	00010000 	andeq	r0, r1, r0
    2b50:	00000052 	andeq	r0, r0, r2, asr r0
    2b54:	00000000 	andeq	r0, r0, r0
    2b58:	00010100 	andeq	r0, r1, r0, lsl #2
    2b5c:	00000000 	andeq	r0, r0, r0
    2b60:	01000000 	mrseq	r0, (UNDEF: 0)
    2b64:	00005300 	andeq	r5, r0, r0, lsl #6
    2b68:	00000000 	andeq	r0, r0, r0
    2b6c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2b78:	00510001 	subseq	r0, r1, r1
	...
    2b8c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2b9c:	00000100 	andeq	r0, r0, r0, lsl #2
    2ba0:	00000000 	andeq	r0, r0, r0
    2ba4:	00030000 	andeq	r0, r3, r0
    2ba8:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    2bac:	00000000 	andeq	r0, r0, r0
    2bb0:	01000000 	mrseq	r0, (UNDEF: 0)
    2bb4:	00005300 	andeq	r5, r0, r0, lsl #6
    2bb8:	00000000 	andeq	r0, r0, r0
    2bbc:	00030000 	andeq	r0, r3, r0
    2bc0:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    2bcc:	00000001 	andeq	r0, r0, r1
    2bd0:	00000000 	andeq	r0, r0, r0
    2bd4:	53000100 	movwpl	r0, #256	; 0x100
	...
    2be0:	01000001 	tsteq	r0, r1
	...
    2bec:	14720003 	ldrbtne	r0, [r2], #-3
    2bf0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2bf4:	00000000 	andeq	r0, r0, r0
    2bf8:	52000100 	andpl	r0, r0, #0, 2
	...
    2c04:	00000101 	andeq	r0, r0, r1, lsl #2
    2c08:	00000000 	andeq	r0, r0, r0
    2c0c:	00010000 	andeq	r0, r1, r0
    2c10:	00000053 	andeq	r0, r0, r3, asr r0
    2c14:	00000000 	andeq	r0, r0, r0
    2c18:	00010000 	andeq	r0, r1, r0
    2c1c:	00000000 	andeq	r0, r0, r0
    2c20:	01000000 	mrseq	r0, (UNDEF: 0)
    2c24:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2c34:	00020000 	andeq	r0, r2, r0
    2c38:	0000007d 	andeq	r0, r0, sp, ror r0
    2c3c:	00000000 	andeq	r0, r0, r0
    2c40:	00020000 	andeq	r0, r2, r0
    2c44:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    2c64:	00500001 	subseq	r0, r0, r1
    2c68:	00000000 	andeq	r0, r0, r0
    2c6c:	01000000 	mrseq	r0, (UNDEF: 0)
    2c70:	00005400 	andeq	r5, r0, r0, lsl #8
    2c74:	00000000 	andeq	r0, r0, r0
    2c78:	00010000 	andeq	r0, r1, r0
    2c7c:	00000050 	andeq	r0, r0, r0, asr r0
    2c80:	00000000 	andeq	r0, r0, r0
    2c84:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    2c90:	00500001 	subseq	r0, r0, r1
    2c94:	00000000 	andeq	r0, r0, r0
    2c98:	01000000 	mrseq	r0, (UNDEF: 0)
    2c9c:	00005400 	andeq	r5, r0, r0, lsl #8
    2ca0:	00000000 	andeq	r0, r0, r0
    2ca4:	00040000 	andeq	r0, r4, r0
    2ca8:	9f5001f3 	svcls	0x005001f3
	...
    2cbc:	00010000 	andeq	r0, r1, r0
    2cc0:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2ccc:	00010000 	andeq	r0, r1, r0
    2cd0:	00000000 	andeq	r0, r0, r0
    2cd4:	03000000 	movweq	r0, #0
    2cd8:	9f0c7200 	svcls	0x000c7200
	...
    2ce4:	00530001 	subseq	r0, r3, r1
    2ce8:	00000000 	andeq	r0, r0, r0
    2cec:	03000000 	movweq	r0, #0
    2cf0:	9f0c7200 	svcls	0x000c7200
	...
    2cfc:	00000100 	andeq	r0, r0, r0, lsl #2
    2d00:	00000000 	andeq	r0, r0, r0
    2d04:	00010000 	andeq	r0, r1, r0
    2d08:	00000053 	andeq	r0, r0, r3, asr r0
    2d0c:	00000000 	andeq	r0, r0, r0
    2d10:	00000100 	andeq	r0, r0, r0, lsl #2
    2d14:	00000001 	andeq	r0, r0, r1
    2d18:	00000000 	andeq	r0, r0, r0
    2d1c:	72000300 	andvc	r0, r0, #0, 6
    2d20:	00009f0c 	andeq	r9, r0, ip, lsl #30
    2d24:	00000000 	andeq	r0, r0, r0
    2d28:	00010000 	andeq	r0, r1, r0
    2d2c:	00000052 	andeq	r0, r0, r2, asr r0
    2d30:	00000000 	andeq	r0, r0, r0
    2d34:	00010100 	andeq	r0, r1, r0, lsl #2
    2d38:	00000000 	andeq	r0, r0, r0
    2d3c:	01000000 	mrseq	r0, (UNDEF: 0)
    2d40:	00005300 	andeq	r5, r0, r0, lsl #6
    2d44:	00000000 	andeq	r0, r0, r0
    2d48:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2d54:	00510001 	subseq	r0, r1, r1
	...
    2d68:	53000100 	movwpl	r0, #256	; 0x100
	...
    2d78:	00000100 	andeq	r0, r0, r0, lsl #2
    2d7c:	00000000 	andeq	r0, r0, r0
    2d80:	00030000 	andeq	r0, r3, r0
    2d84:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    2d88:	00000000 	andeq	r0, r0, r0
    2d8c:	01000000 	mrseq	r0, (UNDEF: 0)
    2d90:	00005300 	andeq	r5, r0, r0, lsl #6
    2d94:	00000000 	andeq	r0, r0, r0
    2d98:	00030000 	andeq	r0, r3, r0
    2d9c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    2da8:	00000001 	andeq	r0, r0, r1
    2dac:	00000000 	andeq	r0, r0, r0
    2db0:	53000100 	movwpl	r0, #256	; 0x100
	...
    2dbc:	01000001 	tsteq	r0, r1
	...
    2dc8:	14720003 	ldrbtne	r0, [r2], #-3
    2dcc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2dd0:	00000000 	andeq	r0, r0, r0
    2dd4:	52000100 	andpl	r0, r0, #0, 2
	...
    2de0:	00000101 	andeq	r0, r0, r1, lsl #2
    2de4:	00000000 	andeq	r0, r0, r0
    2de8:	00010000 	andeq	r0, r1, r0
    2dec:	00000053 	andeq	r0, r0, r3, asr r0
    2df0:	00000000 	andeq	r0, r0, r0
    2df4:	00010000 	andeq	r0, r1, r0
    2df8:	00000000 	andeq	r0, r0, r0
    2dfc:	01000000 	mrseq	r0, (UNDEF: 0)
    2e00:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2e10:	00020000 	andeq	r0, r2, r0
    2e14:	0000007d 	andeq	r0, r0, sp, ror r0
    2e18:	00000000 	andeq	r0, r0, r0
    2e1c:	00020000 	andeq	r0, r2, r0
    2e20:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    2e3c:	00500001 	subseq	r0, r0, r1
    2e40:	00000000 	andeq	r0, r0, r0
    2e44:	01000000 	mrseq	r0, (UNDEF: 0)
    2e48:	00005400 	andeq	r5, r0, r0, lsl #8
    2e4c:	00000000 	andeq	r0, r0, r0
    2e50:	00010000 	andeq	r0, r1, r0
    2e54:	00000050 	andeq	r0, r0, r0, asr r0
    2e58:	00000000 	andeq	r0, r0, r0
    2e5c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    2e68:	01f30004 	mvnseq	r0, r4
    2e6c:	00009f50 	andeq	r9, r0, r0, asr pc
    2e70:	00000000 	andeq	r0, r0, r0
    2e74:	00010000 	andeq	r0, r1, r0
    2e78:	02010100 	andeq	r0, r1, #0, 2
	...
    2e88:	9f310002 	svcls	0x00310002
	...
    2e94:	00550001 	subseq	r0, r5, r1
    2e98:	00000000 	andeq	r0, r0, r0
    2e9c:	02000000 	andeq	r0, r0, #0
    2ea0:	009f3100 	addseq	r3, pc, r0, lsl #2
    2ea4:	00000000 	andeq	r0, r0, r0
    2ea8:	02000000 	andeq	r0, r0, #0
    2eac:	009f3100 	addseq	r3, pc, r0, lsl #2
    2eb0:	00000000 	andeq	r0, r0, r0
    2eb4:	01000000 	mrseq	r0, (UNDEF: 0)
    2eb8:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    2ecc:	00530001 	subseq	r0, r3, r1
	...
    2edc:	00000001 	andeq	r0, r0, r1
    2ee0:	00000000 	andeq	r0, r0, r0
    2ee4:	72000300 	andvc	r0, r0, #0, 6
    2ee8:	00009f0c 	andeq	r9, r0, ip, lsl #30
    2eec:	00000000 	andeq	r0, r0, r0
    2ef0:	00010000 	andeq	r0, r1, r0
    2ef4:	00000053 	andeq	r0, r0, r3, asr r0
    2ef8:	00000000 	andeq	r0, r0, r0
    2efc:	72000300 	andvc	r0, r0, #0, 6
    2f00:	00009f0c 	andeq	r9, r0, ip, lsl #30
    2f04:	00000000 	andeq	r0, r0, r0
    2f08:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2f14:	00530001 	subseq	r0, r3, r1
    2f18:	00000000 	andeq	r0, r0, r0
    2f1c:	01000000 	mrseq	r0, (UNDEF: 0)
    2f20:	00010000 	andeq	r0, r1, r0
    2f24:	00000000 	andeq	r0, r0, r0
    2f28:	03000000 	movweq	r0, #0
    2f2c:	9f0c7200 	svcls	0x000c7200
	...
    2f38:	00520001 	subseq	r0, r2, r1
    2f3c:	00000000 	andeq	r0, r0, r0
    2f40:	01000000 	mrseq	r0, (UNDEF: 0)
    2f44:	00000001 	andeq	r0, r0, r1
    2f48:	00000000 	andeq	r0, r0, r0
    2f4c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2f58:	00000100 	andeq	r0, r0, r0, lsl #2
    2f5c:	00000000 	andeq	r0, r0, r0
    2f60:	00010000 	andeq	r0, r1, r0
    2f64:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2f74:	01000000 	mrseq	r0, (UNDEF: 0)
    2f78:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2f84:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2f90:	14720003 	ldrbtne	r0, [r2], #-3
    2f94:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2f98:	00000000 	andeq	r0, r0, r0
    2f9c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2fa8:	14720003 	ldrbtne	r0, [r2], #-3
    2fac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2fb0:	00000000 	andeq	r0, r0, r0
    2fb4:	00010000 	andeq	r0, r1, r0
    2fb8:	00000000 	andeq	r0, r0, r0
    2fbc:	01000000 	mrseq	r0, (UNDEF: 0)
    2fc0:	00005300 	andeq	r5, r0, r0, lsl #6
    2fc4:	00000000 	andeq	r0, r0, r0
    2fc8:	00010000 	andeq	r0, r1, r0
    2fcc:	00000100 	andeq	r0, r0, r0, lsl #2
    2fd0:	00000000 	andeq	r0, r0, r0
    2fd4:	00030000 	andeq	r0, r3, r0
    2fd8:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    2fdc:	00000000 	andeq	r0, r0, r0
    2fe0:	01000000 	mrseq	r0, (UNDEF: 0)
    2fe4:	00005200 	andeq	r5, r0, r0, lsl #4
    2fe8:	00000000 	andeq	r0, r0, r0
    2fec:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2ff8:	00530001 	subseq	r0, r3, r1
	...
    3004:	00000001 	andeq	r0, r0, r1
    3008:	00000000 	andeq	r0, r0, r0
    300c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3020:	00010000 	andeq	r0, r1, r0
    3024:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3030:	00010000 	andeq	r0, r1, r0
    3034:	00000000 	andeq	r0, r0, r0
    3038:	03000000 	movweq	r0, #0
    303c:	9f0c7200 	svcls	0x000c7200
	...
    3048:	00530001 	subseq	r0, r3, r1
    304c:	00000000 	andeq	r0, r0, r0
    3050:	03000000 	movweq	r0, #0
    3054:	9f0c7200 	svcls	0x000c7200
	...
    3060:	00000100 	andeq	r0, r0, r0, lsl #2
    3064:	00000000 	andeq	r0, r0, r0
    3068:	00010000 	andeq	r0, r1, r0
    306c:	00000053 	andeq	r0, r0, r3, asr r0
    3070:	00000000 	andeq	r0, r0, r0
    3074:	00000100 	andeq	r0, r0, r0, lsl #2
    3078:	00000001 	andeq	r0, r0, r1
    307c:	00000000 	andeq	r0, r0, r0
    3080:	72000300 	andvc	r0, r0, #0, 6
    3084:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3088:	00000000 	andeq	r0, r0, r0
    308c:	00010000 	andeq	r0, r1, r0
    3090:	00000052 	andeq	r0, r0, r2, asr r0
    3094:	00000000 	andeq	r0, r0, r0
    3098:	00010100 	andeq	r0, r1, r0, lsl #2
    309c:	00000000 	andeq	r0, r0, r0
    30a0:	01000000 	mrseq	r0, (UNDEF: 0)
    30a4:	00005300 	andeq	r5, r0, r0, lsl #6
    30a8:	00000000 	andeq	r0, r0, r0
    30ac:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    30b8:	00510001 	subseq	r0, r1, r1
	...
    30cc:	01000000 	mrseq	r0, (UNDEF: 0)
    30d0:	00005300 	andeq	r5, r0, r0, lsl #6
    30d4:	00000000 	andeq	r0, r0, r0
    30d8:	00010000 	andeq	r0, r1, r0
    30dc:	00000053 	andeq	r0, r0, r3, asr r0
	...
    30e8:	00010000 	andeq	r0, r1, r0
    30ec:	00000000 	andeq	r0, r0, r0
    30f0:	03000000 	movweq	r0, #0
    30f4:	9f147100 	svcls	0x00147100
	...
    3100:	00530001 	subseq	r0, r3, r1
    3104:	00000000 	andeq	r0, r0, r0
    3108:	03000000 	movweq	r0, #0
    310c:	9f147100 	svcls	0x00147100
	...
    3118:	00000100 	andeq	r0, r0, r0, lsl #2
    311c:	00000000 	andeq	r0, r0, r0
    3120:	00010000 	andeq	r0, r1, r0
    3124:	00000053 	andeq	r0, r0, r3, asr r0
    3128:	00000000 	andeq	r0, r0, r0
    312c:	00000100 	andeq	r0, r0, r0, lsl #2
    3130:	00000001 	andeq	r0, r0, r1
    3134:	00000000 	andeq	r0, r0, r0
    3138:	71000300 	mrsvc	r0, LR_irq
    313c:	00009f14 	andeq	r9, r0, r4, lsl pc
    3140:	00000000 	andeq	r0, r0, r0
    3144:	00010000 	andeq	r0, r1, r0
    3148:	00000051 	andeq	r0, r0, r1, asr r0
    314c:	00000000 	andeq	r0, r0, r0
    3150:	00010100 	andeq	r0, r1, r0, lsl #2
    3154:	00000000 	andeq	r0, r0, r0
    3158:	01000000 	mrseq	r0, (UNDEF: 0)
    315c:	00005300 	andeq	r5, r0, r0, lsl #6
    3160:	00000000 	andeq	r0, r0, r0
    3164:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3170:	00520001 	subseq	r0, r2, r1
	...
    3184:	53000100 	movwpl	r0, #256	; 0x100
	...
    3194:	00000100 	andeq	r0, r0, r0, lsl #2
    3198:	00000000 	andeq	r0, r0, r0
    319c:	00030000 	andeq	r0, r3, r0
    31a0:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    31a4:	00000000 	andeq	r0, r0, r0
    31a8:	01000000 	mrseq	r0, (UNDEF: 0)
    31ac:	00005300 	andeq	r5, r0, r0, lsl #6
    31b0:	00000000 	andeq	r0, r0, r0
    31b4:	00030000 	andeq	r0, r3, r0
    31b8:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    31c4:	00000001 	andeq	r0, r0, r1
    31c8:	00000000 	andeq	r0, r0, r0
    31cc:	53000100 	movwpl	r0, #256	; 0x100
	...
    31d8:	01000001 	tsteq	r0, r1
	...
    31e4:	14720003 	ldrbtne	r0, [r2], #-3
    31e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    31ec:	00000000 	andeq	r0, r0, r0
    31f0:	52000100 	andpl	r0, r0, #0, 2
	...
    31fc:	00000101 	andeq	r0, r0, r1, lsl #2
    3200:	00000000 	andeq	r0, r0, r0
    3204:	00010000 	andeq	r0, r1, r0
    3208:	00000053 	andeq	r0, r0, r3, asr r0
    320c:	00000000 	andeq	r0, r0, r0
    3210:	00010000 	andeq	r0, r1, r0
    3214:	00000000 	andeq	r0, r0, r0
    3218:	01000000 	mrseq	r0, (UNDEF: 0)
    321c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    322c:	00020000 	andeq	r0, r2, r0
    3230:	0000007d 	andeq	r0, r0, sp, ror r0
    3234:	00000000 	andeq	r0, r0, r0
    3238:	00020000 	andeq	r0, r2, r0
    323c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3254:	00010000 	andeq	r0, r1, r0
    3258:	00000050 	andeq	r0, r0, r0, asr r0
    325c:	00000000 	andeq	r0, r0, r0
    3260:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    326c:	00500001 	subseq	r0, r0, r1
    3270:	00000000 	andeq	r0, r0, r0
    3274:	01000000 	mrseq	r0, (UNDEF: 0)
    3278:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    328c:	00530001 	subseq	r0, r3, r1
	...
    329c:	00000001 	andeq	r0, r0, r1
    32a0:	00000000 	andeq	r0, r0, r0
    32a4:	72000300 	andvc	r0, r0, #0, 6
    32a8:	00009f0c 	andeq	r9, r0, ip, lsl #30
    32ac:	00000000 	andeq	r0, r0, r0
    32b0:	00010000 	andeq	r0, r1, r0
    32b4:	00000053 	andeq	r0, r0, r3, asr r0
    32b8:	00000000 	andeq	r0, r0, r0
    32bc:	72000300 	andvc	r0, r0, #0, 6
    32c0:	00009f0c 	andeq	r9, r0, ip, lsl #30
    32c4:	00000000 	andeq	r0, r0, r0
    32c8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    32d4:	00530001 	subseq	r0, r3, r1
    32d8:	00000000 	andeq	r0, r0, r0
    32dc:	01000000 	mrseq	r0, (UNDEF: 0)
    32e0:	00010000 	andeq	r0, r1, r0
    32e4:	00000000 	andeq	r0, r0, r0
    32e8:	03000000 	movweq	r0, #0
    32ec:	9f0c7200 	svcls	0x000c7200
	...
    32f8:	00520001 	subseq	r0, r2, r1
    32fc:	00000000 	andeq	r0, r0, r0
    3300:	01000000 	mrseq	r0, (UNDEF: 0)
    3304:	00000001 	andeq	r0, r0, r1
    3308:	00000000 	andeq	r0, r0, r0
    330c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3318:	00000100 	andeq	r0, r0, r0, lsl #2
    331c:	00000000 	andeq	r0, r0, r0
    3320:	00010000 	andeq	r0, r1, r0
    3324:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3334:	01000000 	mrseq	r0, (UNDEF: 0)
    3338:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3344:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3350:	14720003 	ldrbtne	r0, [r2], #-3
    3354:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3358:	00000000 	andeq	r0, r0, r0
    335c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3368:	14720003 	ldrbtne	r0, [r2], #-3
    336c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3370:	00000000 	andeq	r0, r0, r0
    3374:	00010000 	andeq	r0, r1, r0
    3378:	00000000 	andeq	r0, r0, r0
    337c:	01000000 	mrseq	r0, (UNDEF: 0)
    3380:	00005300 	andeq	r5, r0, r0, lsl #6
    3384:	00000000 	andeq	r0, r0, r0
    3388:	00010000 	andeq	r0, r1, r0
    338c:	00000100 	andeq	r0, r0, r0, lsl #2
    3390:	00000000 	andeq	r0, r0, r0
    3394:	00030000 	andeq	r0, r3, r0
    3398:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    339c:	00000000 	andeq	r0, r0, r0
    33a0:	01000000 	mrseq	r0, (UNDEF: 0)
    33a4:	00005200 	andeq	r5, r0, r0, lsl #4
    33a8:	00000000 	andeq	r0, r0, r0
    33ac:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    33b8:	00530001 	subseq	r0, r3, r1
	...
    33c4:	00000001 	andeq	r0, r0, r1
    33c8:	00000000 	andeq	r0, r0, r0
    33cc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    33e0:	00010000 	andeq	r0, r1, r0
    33e4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    33f0:	00010000 	andeq	r0, r1, r0
    33f4:	00000000 	andeq	r0, r0, r0
    33f8:	03000000 	movweq	r0, #0
    33fc:	9f0c7200 	svcls	0x000c7200
	...
    3408:	00530001 	subseq	r0, r3, r1
    340c:	00000000 	andeq	r0, r0, r0
    3410:	03000000 	movweq	r0, #0
    3414:	9f0c7200 	svcls	0x000c7200
	...
    3420:	00000100 	andeq	r0, r0, r0, lsl #2
    3424:	00000000 	andeq	r0, r0, r0
    3428:	00010000 	andeq	r0, r1, r0
    342c:	00000053 	andeq	r0, r0, r3, asr r0
    3430:	00000000 	andeq	r0, r0, r0
    3434:	00000100 	andeq	r0, r0, r0, lsl #2
    3438:	00000001 	andeq	r0, r0, r1
    343c:	00000000 	andeq	r0, r0, r0
    3440:	72000300 	andvc	r0, r0, #0, 6
    3444:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3448:	00000000 	andeq	r0, r0, r0
    344c:	00010000 	andeq	r0, r1, r0
    3450:	00000052 	andeq	r0, r0, r2, asr r0
    3454:	00000000 	andeq	r0, r0, r0
    3458:	00010100 	andeq	r0, r1, r0, lsl #2
    345c:	00000000 	andeq	r0, r0, r0
    3460:	01000000 	mrseq	r0, (UNDEF: 0)
    3464:	00005300 	andeq	r5, r0, r0, lsl #6
    3468:	00000000 	andeq	r0, r0, r0
    346c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3478:	00510001 	subseq	r0, r1, r1
	...
    348c:	53000100 	movwpl	r0, #256	; 0x100
	...
    349c:	00000100 	andeq	r0, r0, r0, lsl #2
    34a0:	00000000 	andeq	r0, r0, r0
    34a4:	00030000 	andeq	r0, r3, r0
    34a8:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    34ac:	00000000 	andeq	r0, r0, r0
    34b0:	01000000 	mrseq	r0, (UNDEF: 0)
    34b4:	00005300 	andeq	r5, r0, r0, lsl #6
    34b8:	00000000 	andeq	r0, r0, r0
    34bc:	00030000 	andeq	r0, r3, r0
    34c0:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    34cc:	00000001 	andeq	r0, r0, r1
    34d0:	00000000 	andeq	r0, r0, r0
    34d4:	53000100 	movwpl	r0, #256	; 0x100
	...
    34e0:	01000001 	tsteq	r0, r1
	...
    34ec:	14720003 	ldrbtne	r0, [r2], #-3
    34f0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    34f4:	00000000 	andeq	r0, r0, r0
    34f8:	52000100 	andpl	r0, r0, #0, 2
	...
    3504:	00000101 	andeq	r0, r0, r1, lsl #2
    3508:	00000000 	andeq	r0, r0, r0
    350c:	00010000 	andeq	r0, r1, r0
    3510:	00000053 	andeq	r0, r0, r3, asr r0
    3514:	00000000 	andeq	r0, r0, r0
    3518:	00010000 	andeq	r0, r1, r0
    351c:	00000000 	andeq	r0, r0, r0
    3520:	01000000 	mrseq	r0, (UNDEF: 0)
    3524:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3534:	00020000 	andeq	r0, r2, r0
    3538:	0000007d 	andeq	r0, r0, sp, ror r0
    353c:	00000000 	andeq	r0, r0, r0
    3540:	00020000 	andeq	r0, r2, r0
    3544:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3558:	00010000 	andeq	r0, r1, r0
    355c:	00000050 	andeq	r0, r0, r0, asr r0
    3560:	00000000 	andeq	r0, r0, r0
    3564:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3578:	00010000 	andeq	r0, r1, r0
    357c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3588:	00010000 	andeq	r0, r1, r0
    358c:	00000000 	andeq	r0, r0, r0
    3590:	03000000 	movweq	r0, #0
    3594:	9f0c7200 	svcls	0x000c7200
	...
    35a0:	00530001 	subseq	r0, r3, r1
    35a4:	00000000 	andeq	r0, r0, r0
    35a8:	03000000 	movweq	r0, #0
    35ac:	9f0c7200 	svcls	0x000c7200
	...
    35b8:	00000100 	andeq	r0, r0, r0, lsl #2
    35bc:	00000000 	andeq	r0, r0, r0
    35c0:	00010000 	andeq	r0, r1, r0
    35c4:	00000053 	andeq	r0, r0, r3, asr r0
    35c8:	00000000 	andeq	r0, r0, r0
    35cc:	00000100 	andeq	r0, r0, r0, lsl #2
    35d0:	00000001 	andeq	r0, r0, r1
    35d4:	00000000 	andeq	r0, r0, r0
    35d8:	72000300 	andvc	r0, r0, #0, 6
    35dc:	00009f0c 	andeq	r9, r0, ip, lsl #30
    35e0:	00000000 	andeq	r0, r0, r0
    35e4:	00010000 	andeq	r0, r1, r0
    35e8:	00000052 	andeq	r0, r0, r2, asr r0
    35ec:	00000000 	andeq	r0, r0, r0
    35f0:	00010100 	andeq	r0, r1, r0, lsl #2
    35f4:	00000000 	andeq	r0, r0, r0
    35f8:	01000000 	mrseq	r0, (UNDEF: 0)
    35fc:	00005300 	andeq	r5, r0, r0, lsl #6
    3600:	00000000 	andeq	r0, r0, r0
    3604:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3610:	00510001 	subseq	r0, r1, r1
	...
    3624:	53000100 	movwpl	r0, #256	; 0x100
	...
    3634:	00000100 	andeq	r0, r0, r0, lsl #2
    3638:	00000000 	andeq	r0, r0, r0
    363c:	00030000 	andeq	r0, r3, r0
    3640:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    3644:	00000000 	andeq	r0, r0, r0
    3648:	01000000 	mrseq	r0, (UNDEF: 0)
    364c:	00005300 	andeq	r5, r0, r0, lsl #6
    3650:	00000000 	andeq	r0, r0, r0
    3654:	00030000 	andeq	r0, r3, r0
    3658:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    3664:	00000001 	andeq	r0, r0, r1
    3668:	00000000 	andeq	r0, r0, r0
    366c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3678:	01000001 	tsteq	r0, r1
	...
    3684:	14720003 	ldrbtne	r0, [r2], #-3
    3688:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    368c:	00000000 	andeq	r0, r0, r0
    3690:	52000100 	andpl	r0, r0, #0, 2
	...
    369c:	00000101 	andeq	r0, r0, r1, lsl #2
    36a0:	00000000 	andeq	r0, r0, r0
    36a4:	00010000 	andeq	r0, r1, r0
    36a8:	00000053 	andeq	r0, r0, r3, asr r0
    36ac:	00000000 	andeq	r0, r0, r0
    36b0:	00010000 	andeq	r0, r1, r0
    36b4:	00000000 	andeq	r0, r0, r0
    36b8:	01000000 	mrseq	r0, (UNDEF: 0)
    36bc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    36cc:	00020000 	andeq	r0, r2, r0
    36d0:	0000007d 	andeq	r0, r0, sp, ror r0
    36d4:	00000000 	andeq	r0, r0, r0
    36d8:	00020000 	andeq	r0, r2, r0
    36dc:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    36f4:	00010000 	andeq	r0, r1, r0
    36f8:	00000050 	andeq	r0, r0, r0, asr r0
    36fc:	00000000 	andeq	r0, r0, r0
    3700:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    370c:	00500001 	subseq	r0, r0, r1
    3710:	00000000 	andeq	r0, r0, r0
    3714:	01000000 	mrseq	r0, (UNDEF: 0)
    3718:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    372c:	00530001 	subseq	r0, r3, r1
	...
    373c:	00000001 	andeq	r0, r0, r1
    3740:	00000000 	andeq	r0, r0, r0
    3744:	72000300 	andvc	r0, r0, #0, 6
    3748:	00009f0c 	andeq	r9, r0, ip, lsl #30
    374c:	00000000 	andeq	r0, r0, r0
    3750:	00010000 	andeq	r0, r1, r0
    3754:	00000053 	andeq	r0, r0, r3, asr r0
    3758:	00000000 	andeq	r0, r0, r0
    375c:	72000300 	andvc	r0, r0, #0, 6
    3760:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3764:	00000000 	andeq	r0, r0, r0
    3768:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3774:	00530001 	subseq	r0, r3, r1
    3778:	00000000 	andeq	r0, r0, r0
    377c:	01000000 	mrseq	r0, (UNDEF: 0)
    3780:	00010000 	andeq	r0, r1, r0
    3784:	00000000 	andeq	r0, r0, r0
    3788:	03000000 	movweq	r0, #0
    378c:	9f0c7200 	svcls	0x000c7200
	...
    3798:	00520001 	subseq	r0, r2, r1
    379c:	00000000 	andeq	r0, r0, r0
    37a0:	01000000 	mrseq	r0, (UNDEF: 0)
    37a4:	00000001 	andeq	r0, r0, r1
    37a8:	00000000 	andeq	r0, r0, r0
    37ac:	53000100 	movwpl	r0, #256	; 0x100
	...
    37b8:	00000100 	andeq	r0, r0, r0, lsl #2
    37bc:	00000000 	andeq	r0, r0, r0
    37c0:	00010000 	andeq	r0, r1, r0
    37c4:	00000051 	andeq	r0, r0, r1, asr r0
	...
    37d4:	01000000 	mrseq	r0, (UNDEF: 0)
    37d8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    37e4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    37f0:	14720003 	ldrbtne	r0, [r2], #-3
    37f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    37f8:	00000000 	andeq	r0, r0, r0
    37fc:	53000100 	movwpl	r0, #256	; 0x100
	...
    3808:	14720003 	ldrbtne	r0, [r2], #-3
    380c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3810:	00000000 	andeq	r0, r0, r0
    3814:	00010000 	andeq	r0, r1, r0
    3818:	00000000 	andeq	r0, r0, r0
    381c:	01000000 	mrseq	r0, (UNDEF: 0)
    3820:	00005300 	andeq	r5, r0, r0, lsl #6
    3824:	00000000 	andeq	r0, r0, r0
    3828:	00010000 	andeq	r0, r1, r0
    382c:	00000100 	andeq	r0, r0, r0, lsl #2
    3830:	00000000 	andeq	r0, r0, r0
    3834:	00030000 	andeq	r0, r3, r0
    3838:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    383c:	00000000 	andeq	r0, r0, r0
    3840:	01000000 	mrseq	r0, (UNDEF: 0)
    3844:	00005200 	andeq	r5, r0, r0, lsl #4
    3848:	00000000 	andeq	r0, r0, r0
    384c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    3858:	00530001 	subseq	r0, r3, r1
	...
    3864:	00000001 	andeq	r0, r0, r1
    3868:	00000000 	andeq	r0, r0, r0
    386c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3880:	00010000 	andeq	r0, r1, r0
    3884:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3890:	00010000 	andeq	r0, r1, r0
    3894:	00000000 	andeq	r0, r0, r0
    3898:	03000000 	movweq	r0, #0
    389c:	9f0c7200 	svcls	0x000c7200
	...
    38a8:	00530001 	subseq	r0, r3, r1
    38ac:	00000000 	andeq	r0, r0, r0
    38b0:	03000000 	movweq	r0, #0
    38b4:	9f0c7200 	svcls	0x000c7200
	...
    38c0:	00000100 	andeq	r0, r0, r0, lsl #2
    38c4:	00000000 	andeq	r0, r0, r0
    38c8:	00010000 	andeq	r0, r1, r0
    38cc:	00000053 	andeq	r0, r0, r3, asr r0
    38d0:	00000000 	andeq	r0, r0, r0
    38d4:	00000100 	andeq	r0, r0, r0, lsl #2
    38d8:	00000001 	andeq	r0, r0, r1
    38dc:	00000000 	andeq	r0, r0, r0
    38e0:	72000300 	andvc	r0, r0, #0, 6
    38e4:	00009f0c 	andeq	r9, r0, ip, lsl #30
    38e8:	00000000 	andeq	r0, r0, r0
    38ec:	00010000 	andeq	r0, r1, r0
    38f0:	00000052 	andeq	r0, r0, r2, asr r0
    38f4:	00000000 	andeq	r0, r0, r0
    38f8:	00010100 	andeq	r0, r1, r0, lsl #2
    38fc:	00000000 	andeq	r0, r0, r0
    3900:	01000000 	mrseq	r0, (UNDEF: 0)
    3904:	00005300 	andeq	r5, r0, r0, lsl #6
    3908:	00000000 	andeq	r0, r0, r0
    390c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3918:	00510001 	subseq	r0, r1, r1
	...
    392c:	53000100 	movwpl	r0, #256	; 0x100
	...
    393c:	00000100 	andeq	r0, r0, r0, lsl #2
    3940:	00000000 	andeq	r0, r0, r0
    3944:	00030000 	andeq	r0, r3, r0
    3948:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    394c:	00000000 	andeq	r0, r0, r0
    3950:	01000000 	mrseq	r0, (UNDEF: 0)
    3954:	00005300 	andeq	r5, r0, r0, lsl #6
    3958:	00000000 	andeq	r0, r0, r0
    395c:	00030000 	andeq	r0, r3, r0
    3960:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    396c:	00000001 	andeq	r0, r0, r1
    3970:	00000000 	andeq	r0, r0, r0
    3974:	53000100 	movwpl	r0, #256	; 0x100
	...
    3980:	01000001 	tsteq	r0, r1
	...
    398c:	14720003 	ldrbtne	r0, [r2], #-3
    3990:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3994:	00000000 	andeq	r0, r0, r0
    3998:	52000100 	andpl	r0, r0, #0, 2
	...
    39a4:	00000101 	andeq	r0, r0, r1, lsl #2
    39a8:	00000000 	andeq	r0, r0, r0
    39ac:	00010000 	andeq	r0, r1, r0
    39b0:	00000053 	andeq	r0, r0, r3, asr r0
    39b4:	00000000 	andeq	r0, r0, r0
    39b8:	00010000 	andeq	r0, r1, r0
    39bc:	00000000 	andeq	r0, r0, r0
    39c0:	01000000 	mrseq	r0, (UNDEF: 0)
    39c4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    39d8:	00530001 	subseq	r0, r3, r1
	...
    39e8:	00000001 	andeq	r0, r0, r1
    39ec:	00000000 	andeq	r0, r0, r0
    39f0:	72000300 	andvc	r0, r0, #0, 6
    39f4:	00009f14 	andeq	r9, r0, r4, lsl pc
    39f8:	00000000 	andeq	r0, r0, r0
    39fc:	00010000 	andeq	r0, r1, r0
    3a00:	00000053 	andeq	r0, r0, r3, asr r0
    3a04:	00000000 	andeq	r0, r0, r0
    3a08:	72000300 	andvc	r0, r0, #0, 6
    3a0c:	00009f14 	andeq	r9, r0, r4, lsl pc
    3a10:	00000000 	andeq	r0, r0, r0
    3a14:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3a20:	00530001 	subseq	r0, r3, r1
    3a24:	00000000 	andeq	r0, r0, r0
    3a28:	01000000 	mrseq	r0, (UNDEF: 0)
    3a2c:	00010000 	andeq	r0, r1, r0
    3a30:	00000000 	andeq	r0, r0, r0
    3a34:	03000000 	movweq	r0, #0
    3a38:	9f147200 	svcls	0x00147200
	...
    3a44:	00520001 	subseq	r0, r2, r1
    3a48:	00000000 	andeq	r0, r0, r0
    3a4c:	01000000 	mrseq	r0, (UNDEF: 0)
    3a50:	00000001 	andeq	r0, r0, r1
    3a54:	00000000 	andeq	r0, r0, r0
    3a58:	53000100 	movwpl	r0, #256	; 0x100
	...
    3a64:	00000100 	andeq	r0, r0, r0, lsl #2
    3a68:	00000000 	andeq	r0, r0, r0
    3a6c:	00010000 	andeq	r0, r1, r0
    3a70:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3a84:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3a90:	01f30004 	mvnseq	r0, r4
    3a94:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    3aa4:	00020000 	andeq	r0, r2, r0
    3aa8:	0000007d 	andeq	r0, r0, sp, ror r0
    3aac:	00000000 	andeq	r0, r0, r0
    3ab0:	00020000 	andeq	r0, r2, r0
    3ab4:	0000087d 	andeq	r0, r0, sp, ror r8
    3ab8:	00000000 	andeq	r0, r0, r0
    3abc:	00020000 	andeq	r0, r2, r0
    3ac0:	0000107d 	andeq	r1, r0, sp, ror r0
    3ac4:	00000000 	andeq	r0, r0, r0
    3ac8:	00020000 	andeq	r0, r2, r0
    3acc:	0000087d 	andeq	r0, r0, sp, ror r8
    3ad0:	00000000 	andeq	r0, r0, r0
    3ad4:	00020000 	andeq	r0, r2, r0
    3ad8:	0000107d 	andeq	r1, r0, sp, ror r0
    3adc:	00000000 	andeq	r0, r0, r0
    3ae0:	00020000 	andeq	r0, r2, r0
    3ae4:	0000007d 	andeq	r0, r0, sp, ror r0
    3ae8:	00000000 	andeq	r0, r0, r0
    3aec:	00020000 	andeq	r0, r2, r0
    3af0:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    3b10:	00010000 	andeq	r0, r1, r0
    3b14:	00000050 	andeq	r0, r0, r0, asr r0
    3b18:	00000000 	andeq	r0, r0, r0
    3b1c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3b28:	00500001 	subseq	r0, r0, r1
    3b2c:	00000000 	andeq	r0, r0, r0
    3b30:	01000000 	mrseq	r0, (UNDEF: 0)
    3b34:	00005400 	andeq	r5, r0, r0, lsl #8
    3b38:	00000000 	andeq	r0, r0, r0
    3b3c:	00010000 	andeq	r0, r1, r0
    3b40:	00000050 	andeq	r0, r0, r0, asr r0
    3b44:	00000000 	andeq	r0, r0, r0
    3b48:	f3000400 	vshl.u8	d0, d0, d0
    3b4c:	009f5001 	addseq	r5, pc, r1
    3b50:	00000000 	andeq	r0, r0, r0
    3b54:	01000000 	mrseq	r0, (UNDEF: 0)
    3b58:	00005000 	andeq	r5, r0, r0
    3b5c:	00000000 	andeq	r0, r0, r0
    3b60:	00010000 	andeq	r0, r1, r0
    3b64:	00000054 	andeq	r0, r0, r4, asr r0
	...
    3b7c:	01000000 	mrseq	r0, (UNDEF: 0)
    3b80:	00005100 	andeq	r5, r0, r0, lsl #2
    3b84:	00000000 	andeq	r0, r0, r0
    3b88:	00040000 	andeq	r0, r4, r0
    3b8c:	9f5101f3 	svcls	0x005101f3
	...
    3b98:	00510001 	subseq	r0, r1, r1
    3b9c:	00000000 	andeq	r0, r0, r0
    3ba0:	04000000 	streq	r0, [r0], #-0
    3ba4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3ba8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3bac:	00000000 	andeq	r0, r0, r0
    3bb0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3bcc:	00010000 	andeq	r0, r1, r0
    3bd0:	00000052 	andeq	r0, r0, r2, asr r0
    3bd4:	00000000 	andeq	r0, r0, r0
    3bd8:	f3000400 	vshl.u8	d0, d0, d0
    3bdc:	009f5201 	addseq	r5, pc, r1, lsl #4
    3be0:	00000000 	andeq	r0, r0, r0
    3be4:	01000000 	mrseq	r0, (UNDEF: 0)
    3be8:	00005200 	andeq	r5, r0, r0, lsl #4
    3bec:	00000000 	andeq	r0, r0, r0
    3bf0:	00040000 	andeq	r0, r4, r0
    3bf4:	9f5201f3 	svcls	0x005201f3
	...
    3c00:	00520001 	subseq	r0, r2, r1
	...
    3c18:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3c24:	9f310002 	svcls	0x00310002
	...
    3c30:	00500001 	subseq	r0, r0, r1
	...
    3c44:	53000100 	movwpl	r0, #256	; 0x100
	...
    3c54:	00000100 	andeq	r0, r0, r0, lsl #2
    3c58:	00000000 	andeq	r0, r0, r0
    3c5c:	00030000 	andeq	r0, r3, r0
    3c60:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    3c64:	00000000 	andeq	r0, r0, r0
    3c68:	01000000 	mrseq	r0, (UNDEF: 0)
    3c6c:	00005300 	andeq	r5, r0, r0, lsl #6
    3c70:	00000000 	andeq	r0, r0, r0
    3c74:	00030000 	andeq	r0, r3, r0
    3c78:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    3c84:	00000001 	andeq	r0, r0, r1
    3c88:	00000000 	andeq	r0, r0, r0
    3c8c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3c98:	01000001 	tsteq	r0, r1
	...
    3ca4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3ca8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3cac:	00000000 	andeq	r0, r0, r0
    3cb0:	52000100 	andpl	r0, r0, #0, 2
	...
    3cbc:	00000101 	andeq	r0, r0, r1, lsl #2
    3cc0:	00000000 	andeq	r0, r0, r0
    3cc4:	00010000 	andeq	r0, r1, r0
    3cc8:	00000053 	andeq	r0, r0, r3, asr r0
    3ccc:	00000000 	andeq	r0, r0, r0
    3cd0:	00010000 	andeq	r0, r1, r0
    3cd4:	00000000 	andeq	r0, r0, r0
    3cd8:	01000000 	mrseq	r0, (UNDEF: 0)
    3cdc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3cec:	00020000 	andeq	r0, r2, r0
    3cf0:	0000007d 	andeq	r0, r0, sp, ror r0
    3cf4:	00000000 	andeq	r0, r0, r0
    3cf8:	00020000 	andeq	r0, r2, r0
    3cfc:	0000087d 	andeq	r0, r0, sp, ror r8
    3d00:	00000000 	andeq	r0, r0, r0
    3d04:	00020000 	andeq	r0, r2, r0
    3d08:	0000107d 	andeq	r1, r0, sp, ror r0
    3d0c:	00000000 	andeq	r0, r0, r0
    3d10:	00020000 	andeq	r0, r2, r0
    3d14:	0000087d 	andeq	r0, r0, sp, ror r8
    3d18:	00000000 	andeq	r0, r0, r0
    3d1c:	00020000 	andeq	r0, r2, r0
    3d20:	0000107d 	andeq	r1, r0, sp, ror r0
    3d24:	00000000 	andeq	r0, r0, r0
    3d28:	00020000 	andeq	r0, r2, r0
    3d2c:	0000007d 	andeq	r0, r0, sp, ror r0
    3d30:	00000000 	andeq	r0, r0, r0
    3d34:	00020000 	andeq	r0, r2, r0
    3d38:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    3d58:	00010000 	andeq	r0, r1, r0
    3d5c:	00000050 	andeq	r0, r0, r0, asr r0
    3d60:	00000000 	andeq	r0, r0, r0
    3d64:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3d70:	00500001 	subseq	r0, r0, r1
    3d74:	00000000 	andeq	r0, r0, r0
    3d78:	01000000 	mrseq	r0, (UNDEF: 0)
    3d7c:	00005400 	andeq	r5, r0, r0, lsl #8
    3d80:	00000000 	andeq	r0, r0, r0
    3d84:	00010000 	andeq	r0, r1, r0
    3d88:	00000050 	andeq	r0, r0, r0, asr r0
    3d8c:	00000000 	andeq	r0, r0, r0
    3d90:	f3000400 	vshl.u8	d0, d0, d0
    3d94:	009f5001 	addseq	r5, pc, r1
    3d98:	00000000 	andeq	r0, r0, r0
    3d9c:	01000000 	mrseq	r0, (UNDEF: 0)
    3da0:	00005000 	andeq	r5, r0, r0
    3da4:	00000000 	andeq	r0, r0, r0
    3da8:	00010000 	andeq	r0, r1, r0
    3dac:	00000054 	andeq	r0, r0, r4, asr r0
	...
    3dc4:	01000000 	mrseq	r0, (UNDEF: 0)
    3dc8:	00005100 	andeq	r5, r0, r0, lsl #2
    3dcc:	00000000 	andeq	r0, r0, r0
    3dd0:	00040000 	andeq	r0, r4, r0
    3dd4:	9f5101f3 	svcls	0x005101f3
	...
    3de0:	00510001 	subseq	r0, r1, r1
    3de4:	00000000 	andeq	r0, r0, r0
    3de8:	04000000 	streq	r0, [r0], #-0
    3dec:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3df0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3df4:	00000000 	andeq	r0, r0, r0
    3df8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3e14:	00010000 	andeq	r0, r1, r0
    3e18:	00000052 	andeq	r0, r0, r2, asr r0
    3e1c:	00000000 	andeq	r0, r0, r0
    3e20:	f3000400 	vshl.u8	d0, d0, d0
    3e24:	009f5201 	addseq	r5, pc, r1, lsl #4
    3e28:	00000000 	andeq	r0, r0, r0
    3e2c:	01000000 	mrseq	r0, (UNDEF: 0)
    3e30:	00005200 	andeq	r5, r0, r0, lsl #4
    3e34:	00000000 	andeq	r0, r0, r0
    3e38:	00040000 	andeq	r0, r4, r0
    3e3c:	9f5201f3 	svcls	0x005201f3
	...
    3e48:	00520001 	subseq	r0, r2, r1
	...
    3e60:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3e6c:	9f310002 	svcls	0x00310002
	...
    3e78:	00500001 	subseq	r0, r0, r1
	...
    3e8c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3e9c:	00000100 	andeq	r0, r0, r0, lsl #2
    3ea0:	00000000 	andeq	r0, r0, r0
    3ea4:	00030000 	andeq	r0, r3, r0
    3ea8:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    3eac:	00000000 	andeq	r0, r0, r0
    3eb0:	01000000 	mrseq	r0, (UNDEF: 0)
    3eb4:	00005300 	andeq	r5, r0, r0, lsl #6
    3eb8:	00000000 	andeq	r0, r0, r0
    3ebc:	00030000 	andeq	r0, r3, r0
    3ec0:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    3ecc:	00000001 	andeq	r0, r0, r1
    3ed0:	00000000 	andeq	r0, r0, r0
    3ed4:	53000100 	movwpl	r0, #256	; 0x100
	...
    3ee0:	01000001 	tsteq	r0, r1
	...
    3eec:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3ef0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ef4:	00000000 	andeq	r0, r0, r0
    3ef8:	52000100 	andpl	r0, r0, #0, 2
	...
    3f04:	00000101 	andeq	r0, r0, r1, lsl #2
    3f08:	00000000 	andeq	r0, r0, r0
    3f0c:	00010000 	andeq	r0, r1, r0
    3f10:	00000053 	andeq	r0, r0, r3, asr r0
    3f14:	00000000 	andeq	r0, r0, r0
    3f18:	00010000 	andeq	r0, r1, r0
    3f1c:	00000000 	andeq	r0, r0, r0
    3f20:	01000000 	mrseq	r0, (UNDEF: 0)
    3f24:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3f34:	00020000 	andeq	r0, r2, r0
    3f38:	0000007d 	andeq	r0, r0, sp, ror r0
    3f3c:	00000000 	andeq	r0, r0, r0
    3f40:	00020000 	andeq	r0, r2, r0
    3f44:	00001c7d 	andeq	r1, r0, sp, ror ip
    3f48:	00000000 	andeq	r0, r0, r0
    3f4c:	00020000 	andeq	r0, r2, r0
    3f50:	0000287d 	andeq	r2, r0, sp, ror r8
    3f54:	00000000 	andeq	r0, r0, r0
    3f58:	00020000 	andeq	r0, r2, r0
    3f5c:	00001c7d 	andeq	r1, r0, sp, ror ip
    3f60:	00000000 	andeq	r0, r0, r0
    3f64:	00020000 	andeq	r0, r2, r0
    3f68:	0000287d 	andeq	r2, r0, sp, ror r8
	...
    3f88:	00010000 	andeq	r0, r1, r0
    3f8c:	00000050 	andeq	r0, r0, r0, asr r0
    3f90:	00000000 	andeq	r0, r0, r0
    3f94:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    3fa0:	00500001 	subseq	r0, r0, r1
    3fa4:	00000000 	andeq	r0, r0, r0
    3fa8:	01000000 	mrseq	r0, (UNDEF: 0)
    3fac:	00005400 	andeq	r5, r0, r0, lsl #8
    3fb0:	00000000 	andeq	r0, r0, r0
    3fb4:	00010000 	andeq	r0, r1, r0
    3fb8:	00000050 	andeq	r0, r0, r0, asr r0
    3fbc:	00000000 	andeq	r0, r0, r0
    3fc0:	f3000400 	vshl.u8	d0, d0, d0
    3fc4:	009f5001 	addseq	r5, pc, r1
    3fc8:	00000000 	andeq	r0, r0, r0
    3fcc:	01000000 	mrseq	r0, (UNDEF: 0)
    3fd0:	00005000 	andeq	r5, r0, r0
    3fd4:	00000000 	andeq	r0, r0, r0
    3fd8:	00010000 	andeq	r0, r1, r0
    3fdc:	00000054 	andeq	r0, r0, r4, asr r0
	...
    3ffc:	01000000 	mrseq	r0, (UNDEF: 0)
    4000:	00005100 	andeq	r5, r0, r0, lsl #2
    4004:	00000000 	andeq	r0, r0, r0
    4008:	00010000 	andeq	r0, r1, r0
    400c:	00000055 	andeq	r0, r0, r5, asr r0
    4010:	00000000 	andeq	r0, r0, r0
    4014:	f3000400 	vshl.u8	d0, d0, d0
    4018:	009f5101 	addseq	r5, pc, r1, lsl #2
    401c:	00000000 	andeq	r0, r0, r0
    4020:	01000000 	mrseq	r0, (UNDEF: 0)
    4024:	00005500 	andeq	r5, r0, r0, lsl #10
    4028:	00000000 	andeq	r0, r0, r0
    402c:	00010000 	andeq	r0, r1, r0
    4030:	00000059 	andeq	r0, r0, r9, asr r0
    4034:	00000000 	andeq	r0, r0, r0
    4038:	f3000400 	vshl.u8	d0, d0, d0
    403c:	009f5101 	addseq	r5, pc, r1, lsl #2
    4040:	00000000 	andeq	r0, r0, r0
    4044:	01000000 	mrseq	r0, (UNDEF: 0)
    4048:	00005100 	andeq	r5, r0, r0, lsl #2
    404c:	00000000 	andeq	r0, r0, r0
    4050:	00040000 	andeq	r0, r4, r0
    4054:	9f5101f3 	svcls	0x005101f3
	...
    4060:	00510001 	subseq	r0, r1, r1
	...
    407c:	52000100 	andpl	r0, r0, #0, 2
	...
    4088:	01f30004 	mvnseq	r0, r4
    408c:	00009f52 	andeq	r9, r0, r2, asr pc
    4090:	00000000 	andeq	r0, r0, r0
    4094:	00010000 	andeq	r0, r1, r0
    4098:	00000052 	andeq	r0, r0, r2, asr r0
    409c:	00000000 	andeq	r0, r0, r0
    40a0:	f3000400 	vshl.u8	d0, d0, d0
    40a4:	009f5201 	addseq	r5, pc, r1, lsl #4
    40a8:	00000000 	andeq	r0, r0, r0
    40ac:	01000000 	mrseq	r0, (UNDEF: 0)
    40b0:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    40c4:	00010000 	andeq	r0, r1, r0
    40c8:	00000053 	andeq	r0, r0, r3, asr r0
    40cc:	00000000 	andeq	r0, r0, r0
    40d0:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    40e8:	00910002 	addseq	r0, r1, r2
	...
    40f4:	00910002 	addseq	r0, r1, r2
	...
    410c:	00550001 	subseq	r0, r5, r1
    4110:	00000000 	andeq	r0, r0, r0
    4114:	01000000 	mrseq	r0, (UNDEF: 0)
    4118:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    4124:	01000000 	mrseq	r0, (UNDEF: 0)
    4128:	00000001 	andeq	r0, r0, r1
    412c:	00000000 	andeq	r0, r0, r0
    4130:	00010000 	andeq	r0, r1, r0
    4134:	00000059 	andeq	r0, r0, r9, asr r0
    4138:	00000000 	andeq	r0, r0, r0
    413c:	59000100 	stmdbpl	r0, {r8}
	...
    4148:	7e790003 	cdpvc	0, 7, cr0, cr9, cr3, {0}
    414c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4150:	00000000 	andeq	r0, r0, r0
    4154:	59000100 	stmdbpl	r0, {r8}
	...
    416c:	00500001 	subseq	r0, r0, r1
    4170:	00000000 	andeq	r0, r0, r0
    4174:	01000000 	mrseq	r0, (UNDEF: 0)
    4178:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    4188:	00020000 	andeq	r0, r2, r0
    418c:	0000007d 	andeq	r0, r0, sp, ror r0
    4190:	00000000 	andeq	r0, r0, r0
    4194:	00020000 	andeq	r0, r2, r0
    4198:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    41b0:	00010000 	andeq	r0, r1, r0
    41b4:	00000050 	andeq	r0, r0, r0, asr r0
    41b8:	00000000 	andeq	r0, r0, r0
    41bc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    41c8:	00500001 	subseq	r0, r0, r1
    41cc:	00000000 	andeq	r0, r0, r0
    41d0:	01000000 	mrseq	r0, (UNDEF: 0)
    41d4:	00005400 	andeq	r5, r0, r0, lsl #8
    41d8:	00000000 	andeq	r0, r0, r0
    41dc:	00010000 	andeq	r0, r1, r0
	...
    41f0:	9f300002 	svcls	0x00300002
	...
    41fc:	0072000b 	rsbseq	r0, r2, fp
    4200:	301a8008 	andscc	r8, sl, r8
    4204:	1aff082e 	bne	fffc62c4 <_estack+0xdffc508c>
    4208:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    420c:	00000000 	andeq	r0, r0, r0
    4210:	72000800 	andvc	r0, r0, #0, 16
    4214:	082e3000 	stmdaeq	lr!, {ip, sp}
    4218:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    421c:	00000000 	andeq	r0, r0, r0
    4220:	0b000000 	bleq	4228 <_Min_Heap_Size+0x3a28>
    4224:	08007200 	stmdaeq	r0, {r9, ip, sp, lr}
    4228:	2e301a80 	vaddcs.f32	s2, s1, s0
    422c:	9f1aff08 	svcls	0x001aff08
	...
    4238:	00720008 	rsbseq	r0, r2, r8
    423c:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    4240:	00009f1a 	andeq	r9, r0, sl, lsl pc
	...
    4254:	00530001 	subseq	r0, r3, r1
	...
    4264:	00000001 	andeq	r0, r0, r1
    4268:	00000000 	andeq	r0, r0, r0
    426c:	72000300 	andvc	r0, r0, #0, 6
    4270:	00009f14 	andeq	r9, r0, r4, lsl pc
    4274:	00000000 	andeq	r0, r0, r0
    4278:	00010000 	andeq	r0, r1, r0
    427c:	00000053 	andeq	r0, r0, r3, asr r0
    4280:	00000000 	andeq	r0, r0, r0
    4284:	72000300 	andvc	r0, r0, #0, 6
    4288:	00009f14 	andeq	r9, r0, r4, lsl pc
    428c:	00000000 	andeq	r0, r0, r0
    4290:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    429c:	00530001 	subseq	r0, r3, r1
    42a0:	00000000 	andeq	r0, r0, r0
    42a4:	01000000 	mrseq	r0, (UNDEF: 0)
    42a8:	00010000 	andeq	r0, r1, r0
    42ac:	00000000 	andeq	r0, r0, r0
    42b0:	03000000 	movweq	r0, #0
    42b4:	9f147200 	svcls	0x00147200
	...
    42c0:	00520001 	subseq	r0, r2, r1
    42c4:	00000000 	andeq	r0, r0, r0
    42c8:	01000000 	mrseq	r0, (UNDEF: 0)
    42cc:	00000001 	andeq	r0, r0, r1
    42d0:	00000000 	andeq	r0, r0, r0
    42d4:	53000100 	movwpl	r0, #256	; 0x100
	...
    42e0:	00000100 	andeq	r0, r0, r0, lsl #2
    42e4:	00000000 	andeq	r0, r0, r0
    42e8:	00010000 	andeq	r0, r1, r0
    42ec:	00000051 	andeq	r0, r0, r1, asr r0
	...
    42fc:	01000000 	mrseq	r0, (UNDEF: 0)
    4300:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    430c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4318:	14720003 	ldrbtne	r0, [r2], #-3
    431c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4320:	00000000 	andeq	r0, r0, r0
    4324:	53000100 	movwpl	r0, #256	; 0x100
	...
    4330:	14720003 	ldrbtne	r0, [r2], #-3
    4334:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4338:	00000000 	andeq	r0, r0, r0
    433c:	00010000 	andeq	r0, r1, r0
    4340:	00000000 	andeq	r0, r0, r0
    4344:	01000000 	mrseq	r0, (UNDEF: 0)
    4348:	00005300 	andeq	r5, r0, r0, lsl #6
    434c:	00000000 	andeq	r0, r0, r0
    4350:	00010000 	andeq	r0, r1, r0
    4354:	00000100 	andeq	r0, r0, r0, lsl #2
    4358:	00000000 	andeq	r0, r0, r0
    435c:	00030000 	andeq	r0, r3, r0
    4360:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    4364:	00000000 	andeq	r0, r0, r0
    4368:	01000000 	mrseq	r0, (UNDEF: 0)
    436c:	00005200 	andeq	r5, r0, r0, lsl #4
    4370:	00000000 	andeq	r0, r0, r0
    4374:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4380:	00530001 	subseq	r0, r3, r1
	...
    438c:	00000001 	andeq	r0, r0, r1
    4390:	00000000 	andeq	r0, r0, r0
    4394:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    43a8:	007d0002 	rsbseq	r0, sp, r2
	...
    43b4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    43c0:	007d0002 	rsbseq	r0, sp, r2
	...
    43dc:	00500001 	subseq	r0, r0, r1
    43e0:	00000000 	andeq	r0, r0, r0
    43e4:	04000000 	streq	r0, [r0], #-0
    43e8:	5001f300 	andpl	pc, r1, r0, lsl #6
    43ec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    43f0:	00000000 	andeq	r0, r0, r0
    43f4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4400:	01f30004 	mvnseq	r0, r4
    4404:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4418:	00530001 	subseq	r0, r3, r1
	...
    4428:	00000001 	andeq	r0, r0, r1
    442c:	00000000 	andeq	r0, r0, r0
    4430:	72000300 	andvc	r0, r0, #0, 6
    4434:	00009f14 	andeq	r9, r0, r4, lsl pc
    4438:	00000000 	andeq	r0, r0, r0
    443c:	00010000 	andeq	r0, r1, r0
    4440:	00000053 	andeq	r0, r0, r3, asr r0
    4444:	00000000 	andeq	r0, r0, r0
    4448:	72000300 	andvc	r0, r0, #0, 6
    444c:	00009f14 	andeq	r9, r0, r4, lsl pc
    4450:	00000000 	andeq	r0, r0, r0
    4454:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4460:	00530001 	subseq	r0, r3, r1
    4464:	00000000 	andeq	r0, r0, r0
    4468:	01000000 	mrseq	r0, (UNDEF: 0)
    446c:	00010000 	andeq	r0, r1, r0
    4470:	00000000 	andeq	r0, r0, r0
    4474:	03000000 	movweq	r0, #0
    4478:	9f147200 	svcls	0x00147200
	...
    4484:	00520001 	subseq	r0, r2, r1
    4488:	00000000 	andeq	r0, r0, r0
    448c:	01000000 	mrseq	r0, (UNDEF: 0)
    4490:	00000001 	andeq	r0, r0, r1
    4494:	00000000 	andeq	r0, r0, r0
    4498:	53000100 	movwpl	r0, #256	; 0x100
	...
    44a4:	00000100 	andeq	r0, r0, r0, lsl #2
    44a8:	00000000 	andeq	r0, r0, r0
    44ac:	00010000 	andeq	r0, r1, r0
    44b0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    44c0:	01000000 	mrseq	r0, (UNDEF: 0)
    44c4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    44d0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    44dc:	0c720003 	ldcleq	0, cr0, [r2], #-12
    44e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    44e4:	00000000 	andeq	r0, r0, r0
    44e8:	53000100 	movwpl	r0, #256	; 0x100
	...
    44f4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    44f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    44fc:	00000000 	andeq	r0, r0, r0
    4500:	00010000 	andeq	r0, r1, r0
    4504:	00000000 	andeq	r0, r0, r0
    4508:	01000000 	mrseq	r0, (UNDEF: 0)
    450c:	00005300 	andeq	r5, r0, r0, lsl #6
    4510:	00000000 	andeq	r0, r0, r0
    4514:	00010000 	andeq	r0, r1, r0
    4518:	00000100 	andeq	r0, r0, r0, lsl #2
    451c:	00000000 	andeq	r0, r0, r0
    4520:	00030000 	andeq	r0, r3, r0
    4524:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    4528:	00000000 	andeq	r0, r0, r0
    452c:	01000000 	mrseq	r0, (UNDEF: 0)
    4530:	00005200 	andeq	r5, r0, r0, lsl #4
    4534:	00000000 	andeq	r0, r0, r0
    4538:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4544:	00530001 	subseq	r0, r3, r1
	...
    4550:	00000001 	andeq	r0, r0, r1
    4554:	00000000 	andeq	r0, r0, r0
    4558:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    456c:	00010000 	andeq	r0, r1, r0
    4570:	00000053 	andeq	r0, r0, r3, asr r0
	...
    457c:	00010000 	andeq	r0, r1, r0
    4580:	00000000 	andeq	r0, r0, r0
    4584:	03000000 	movweq	r0, #0
    4588:	9f147200 	svcls	0x00147200
	...
    4594:	00530001 	subseq	r0, r3, r1
    4598:	00000000 	andeq	r0, r0, r0
    459c:	03000000 	movweq	r0, #0
    45a0:	9f147200 	svcls	0x00147200
	...
    45ac:	00000100 	andeq	r0, r0, r0, lsl #2
    45b0:	00000000 	andeq	r0, r0, r0
    45b4:	00010000 	andeq	r0, r1, r0
    45b8:	00000053 	andeq	r0, r0, r3, asr r0
    45bc:	00000000 	andeq	r0, r0, r0
    45c0:	00000100 	andeq	r0, r0, r0, lsl #2
    45c4:	00000001 	andeq	r0, r0, r1
    45c8:	00000000 	andeq	r0, r0, r0
    45cc:	72000300 	andvc	r0, r0, #0, 6
    45d0:	00009f14 	andeq	r9, r0, r4, lsl pc
    45d4:	00000000 	andeq	r0, r0, r0
    45d8:	00010000 	andeq	r0, r1, r0
    45dc:	00000052 	andeq	r0, r0, r2, asr r0
    45e0:	00000000 	andeq	r0, r0, r0
    45e4:	00010100 	andeq	r0, r1, r0, lsl #2
    45e8:	00000000 	andeq	r0, r0, r0
    45ec:	01000000 	mrseq	r0, (UNDEF: 0)
    45f0:	00005300 	andeq	r5, r0, r0, lsl #6
    45f4:	00000000 	andeq	r0, r0, r0
    45f8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4604:	00510001 	subseq	r0, r1, r1
	...
    4618:	53000100 	movwpl	r0, #256	; 0x100
	...
    4628:	00000100 	andeq	r0, r0, r0, lsl #2
    462c:	00000000 	andeq	r0, r0, r0
    4630:	00030000 	andeq	r0, r3, r0
    4634:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    4638:	00000000 	andeq	r0, r0, r0
    463c:	01000000 	mrseq	r0, (UNDEF: 0)
    4640:	00005300 	andeq	r5, r0, r0, lsl #6
    4644:	00000000 	andeq	r0, r0, r0
    4648:	00030000 	andeq	r0, r3, r0
    464c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    4658:	00000001 	andeq	r0, r0, r1
    465c:	00000000 	andeq	r0, r0, r0
    4660:	53000100 	movwpl	r0, #256	; 0x100
	...
    466c:	01000001 	tsteq	r0, r1
	...
    4678:	14720003 	ldrbtne	r0, [r2], #-3
    467c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4680:	00000000 	andeq	r0, r0, r0
    4684:	52000100 	andpl	r0, r0, #0, 2
	...
    4690:	00000101 	andeq	r0, r0, r1, lsl #2
    4694:	00000000 	andeq	r0, r0, r0
    4698:	00010000 	andeq	r0, r1, r0
    469c:	00000053 	andeq	r0, r0, r3, asr r0
    46a0:	00000000 	andeq	r0, r0, r0
    46a4:	00010000 	andeq	r0, r1, r0
    46a8:	00000000 	andeq	r0, r0, r0
    46ac:	01000000 	mrseq	r0, (UNDEF: 0)
    46b0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    46c8:	00500001 	subseq	r0, r0, r1
    46cc:	00000000 	andeq	r0, r0, r0
    46d0:	04000000 	streq	r0, [r0], #-0
    46d4:	5001f300 	andpl	pc, r1, r0, lsl #6
    46d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    46dc:	00000000 	andeq	r0, r0, r0
    46e0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    46ec:	00000002 	andeq	r0, r0, r2
	...
    46fc:	00020000 	andeq	r0, r2, r0
    4700:	00009f30 	andeq	r9, r0, r0, lsr pc
    4704:	00000000 	andeq	r0, r0, r0
    4708:	00080000 	andeq	r0, r8, r0
    470c:	2e300072 	mrccs	0, 1, r0, cr0, cr2, {3}
    4710:	9f1aff08 	svcls	0x001aff08
	...
    471c:	00720008 	rsbseq	r0, r2, r8
    4720:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    4724:	00009f1a 	andeq	r9, r0, sl, lsl pc
    4728:	00000000 	andeq	r0, r0, r0
    472c:	00080000 	andeq	r0, r8, r0
    4730:	2e300072 	mrccs	0, 1, r0, cr0, cr2, {3}
    4734:	9f1aff08 	svcls	0x001aff08
	...
    4740:	00720008 	rsbseq	r0, r2, r8
    4744:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    4748:	00009f1a 	andeq	r9, r0, sl, lsl pc
	...
    475c:	00530001 	subseq	r0, r3, r1
	...
    476c:	00000001 	andeq	r0, r0, r1
    4770:	00000000 	andeq	r0, r0, r0
    4774:	72000300 	andvc	r0, r0, #0, 6
    4778:	00009f14 	andeq	r9, r0, r4, lsl pc
    477c:	00000000 	andeq	r0, r0, r0
    4780:	00010000 	andeq	r0, r1, r0
    4784:	00000053 	andeq	r0, r0, r3, asr r0
    4788:	00000000 	andeq	r0, r0, r0
    478c:	72000300 	andvc	r0, r0, #0, 6
    4790:	00009f14 	andeq	r9, r0, r4, lsl pc
    4794:	00000000 	andeq	r0, r0, r0
    4798:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    47a4:	00530001 	subseq	r0, r3, r1
    47a8:	00000000 	andeq	r0, r0, r0
    47ac:	01000000 	mrseq	r0, (UNDEF: 0)
    47b0:	00010000 	andeq	r0, r1, r0
    47b4:	00000000 	andeq	r0, r0, r0
    47b8:	03000000 	movweq	r0, #0
    47bc:	9f147200 	svcls	0x00147200
	...
    47c8:	00520001 	subseq	r0, r2, r1
    47cc:	00000000 	andeq	r0, r0, r0
    47d0:	01000000 	mrseq	r0, (UNDEF: 0)
    47d4:	00000001 	andeq	r0, r0, r1
    47d8:	00000000 	andeq	r0, r0, r0
    47dc:	53000100 	movwpl	r0, #256	; 0x100
	...
    47e8:	00000100 	andeq	r0, r0, r0, lsl #2
    47ec:	00000000 	andeq	r0, r0, r0
    47f0:	00010000 	andeq	r0, r1, r0
    47f4:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4804:	01000000 	mrseq	r0, (UNDEF: 0)
    4808:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    4814:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4820:	0c720003 	ldcleq	0, cr0, [r2], #-12
    4824:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4828:	00000000 	andeq	r0, r0, r0
    482c:	53000100 	movwpl	r0, #256	; 0x100
	...
    4838:	0c720003 	ldcleq	0, cr0, [r2], #-12
    483c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4840:	00000000 	andeq	r0, r0, r0
    4844:	00010000 	andeq	r0, r1, r0
    4848:	00000000 	andeq	r0, r0, r0
    484c:	01000000 	mrseq	r0, (UNDEF: 0)
    4850:	00005300 	andeq	r5, r0, r0, lsl #6
    4854:	00000000 	andeq	r0, r0, r0
    4858:	00010000 	andeq	r0, r1, r0
    485c:	00000100 	andeq	r0, r0, r0, lsl #2
    4860:	00000000 	andeq	r0, r0, r0
    4864:	00030000 	andeq	r0, r3, r0
    4868:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    486c:	00000000 	andeq	r0, r0, r0
    4870:	01000000 	mrseq	r0, (UNDEF: 0)
    4874:	00005200 	andeq	r5, r0, r0, lsl #4
    4878:	00000000 	andeq	r0, r0, r0
    487c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4888:	00530001 	subseq	r0, r3, r1
	...
    4894:	00000001 	andeq	r0, r0, r1
    4898:	00000000 	andeq	r0, r0, r0
    489c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    48b0:	00010000 	andeq	r0, r1, r0
    48b4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    48c0:	00010000 	andeq	r0, r1, r0
    48c4:	00000000 	andeq	r0, r0, r0
    48c8:	03000000 	movweq	r0, #0
    48cc:	9f147200 	svcls	0x00147200
	...
    48d8:	00530001 	subseq	r0, r3, r1
    48dc:	00000000 	andeq	r0, r0, r0
    48e0:	03000000 	movweq	r0, #0
    48e4:	9f147200 	svcls	0x00147200
	...
    48f0:	00000100 	andeq	r0, r0, r0, lsl #2
    48f4:	00000000 	andeq	r0, r0, r0
    48f8:	00010000 	andeq	r0, r1, r0
    48fc:	00000053 	andeq	r0, r0, r3, asr r0
    4900:	00000000 	andeq	r0, r0, r0
    4904:	00000100 	andeq	r0, r0, r0, lsl #2
    4908:	00000001 	andeq	r0, r0, r1
    490c:	00000000 	andeq	r0, r0, r0
    4910:	72000300 	andvc	r0, r0, #0, 6
    4914:	00009f14 	andeq	r9, r0, r4, lsl pc
    4918:	00000000 	andeq	r0, r0, r0
    491c:	00010000 	andeq	r0, r1, r0
    4920:	00000052 	andeq	r0, r0, r2, asr r0
    4924:	00000000 	andeq	r0, r0, r0
    4928:	00010100 	andeq	r0, r1, r0, lsl #2
    492c:	00000000 	andeq	r0, r0, r0
    4930:	01000000 	mrseq	r0, (UNDEF: 0)
    4934:	00005300 	andeq	r5, r0, r0, lsl #6
    4938:	00000000 	andeq	r0, r0, r0
    493c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4948:	00510001 	subseq	r0, r1, r1
	...
    495c:	53000100 	movwpl	r0, #256	; 0x100
	...
    496c:	00000100 	andeq	r0, r0, r0, lsl #2
    4970:	00000000 	andeq	r0, r0, r0
    4974:	00030000 	andeq	r0, r3, r0
    4978:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    497c:	00000000 	andeq	r0, r0, r0
    4980:	01000000 	mrseq	r0, (UNDEF: 0)
    4984:	00005300 	andeq	r5, r0, r0, lsl #6
    4988:	00000000 	andeq	r0, r0, r0
    498c:	00030000 	andeq	r0, r3, r0
    4990:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    499c:	00000001 	andeq	r0, r0, r1
    49a0:	00000000 	andeq	r0, r0, r0
    49a4:	53000100 	movwpl	r0, #256	; 0x100
	...
    49b0:	01000001 	tsteq	r0, r1
	...
    49bc:	14720003 	ldrbtne	r0, [r2], #-3
    49c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    49c4:	00000000 	andeq	r0, r0, r0
    49c8:	52000100 	andpl	r0, r0, #0, 2
	...
    49d4:	00000101 	andeq	r0, r0, r1, lsl #2
    49d8:	00000000 	andeq	r0, r0, r0
    49dc:	00010000 	andeq	r0, r1, r0
    49e0:	00000053 	andeq	r0, r0, r3, asr r0
    49e4:	00000000 	andeq	r0, r0, r0
    49e8:	00010000 	andeq	r0, r1, r0
    49ec:	00000000 	andeq	r0, r0, r0
    49f0:	01000000 	mrseq	r0, (UNDEF: 0)
    49f4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    4a04:	00020000 	andeq	r0, r2, r0
    4a08:	0000007d 	andeq	r0, r0, sp, ror r0
    4a0c:	00000000 	andeq	r0, r0, r0
    4a10:	00020000 	andeq	r0, r2, r0
    4a14:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    4a34:	00010000 	andeq	r0, r1, r0
    4a38:	00000050 	andeq	r0, r0, r0, asr r0
    4a3c:	00000000 	andeq	r0, r0, r0
    4a40:	f3000400 	vshl.u8	d0, d0, d0
    4a44:	009f5001 	addseq	r5, pc, r1
    4a48:	00000000 	andeq	r0, r0, r0
    4a4c:	01000000 	mrseq	r0, (UNDEF: 0)
    4a50:	00005000 	andeq	r5, r0, r0
    4a54:	00000000 	andeq	r0, r0, r0
    4a58:	00040000 	andeq	r0, r4, r0
    4a5c:	9f5001f3 	svcls	0x005001f3
	...
    4a68:	00500001 	subseq	r0, r0, r1
    4a6c:	00000000 	andeq	r0, r0, r0
    4a70:	04000000 	streq	r0, [r0], #-0
    4a74:	5001f300 	andpl	pc, r1, r0, lsl #6
    4a78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4a7c:	00000000 	andeq	r0, r0, r0
    4a80:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4a8c:	01f30004 	mvnseq	r0, r4
    4a90:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4aac:	00510001 	subseq	r0, r1, r1
    4ab0:	00000000 	andeq	r0, r0, r0
    4ab4:	04000000 	streq	r0, [r0], #-0
    4ab8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4abc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4ac0:	00000000 	andeq	r0, r0, r0
    4ac4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4ad0:	01f30004 	mvnseq	r0, r4
    4ad4:	00009f51 	andeq	r9, r0, r1, asr pc
    4ad8:	00000000 	andeq	r0, r0, r0
    4adc:	00010000 	andeq	r0, r1, r0
    4ae0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4af8:	01000000 	mrseq	r0, (UNDEF: 0)
    4afc:	00005200 	andeq	r5, r0, r0, lsl #4
    4b00:	00000000 	andeq	r0, r0, r0
    4b04:	00040000 	andeq	r0, r4, r0
    4b08:	9f5201f3 	svcls	0x005201f3
	...
    4b14:	00520001 	subseq	r0, r2, r1
    4b18:	00000000 	andeq	r0, r0, r0
    4b1c:	04000000 	streq	r0, [r0], #-0
    4b20:	5201f300 	andpl	pc, r1, #0, 6
    4b24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4b28:	00000000 	andeq	r0, r0, r0
    4b2c:	52000100 	andpl	r0, r0, #0, 2
	...
    4b40:	007d0002 	rsbseq	r0, sp, r2
	...
    4b4c:	107d0002 	rsbsne	r0, sp, r2
	...
    4b70:	00500001 	subseq	r0, r0, r1
    4b74:	00000000 	andeq	r0, r0, r0
    4b78:	04000000 	streq	r0, [r0], #-0
    4b7c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4b80:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4b84:	00000000 	andeq	r0, r0, r0
    4b88:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4b94:	00540001 	subseq	r0, r4, r1
    4b98:	00000000 	andeq	r0, r0, r0
    4b9c:	01000000 	mrseq	r0, (UNDEF: 0)
    4ba0:	00005000 	andeq	r5, r0, r0
    4ba4:	00000000 	andeq	r0, r0, r0
    4ba8:	00040000 	andeq	r0, r4, r0
    4bac:	9f5001f3 	svcls	0x005001f3
	...
    4bb8:	00500001 	subseq	r0, r0, r1
    4bbc:	00000000 	andeq	r0, r0, r0
    4bc0:	01000000 	mrseq	r0, (UNDEF: 0)
    4bc4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    4be0:	00510001 	subseq	r0, r1, r1
    4be4:	00000000 	andeq	r0, r0, r0
    4be8:	04000000 	streq	r0, [r0], #-0
    4bec:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4bf0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4bf4:	00000000 	andeq	r0, r0, r0
    4bf8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4c04:	01f30004 	mvnseq	r0, r4
    4c08:	00009f51 	andeq	r9, r0, r1, asr pc
    4c0c:	00000000 	andeq	r0, r0, r0
    4c10:	00010000 	andeq	r0, r1, r0
    4c14:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4c2c:	01000000 	mrseq	r0, (UNDEF: 0)
    4c30:	00005200 	andeq	r5, r0, r0, lsl #4
    4c34:	00000000 	andeq	r0, r0, r0
    4c38:	00040000 	andeq	r0, r4, r0
    4c3c:	9f5201f3 	svcls	0x005201f3
	...
    4c48:	00520001 	subseq	r0, r2, r1
    4c4c:	00000000 	andeq	r0, r0, r0
    4c50:	04000000 	streq	r0, [r0], #-0
    4c54:	5201f300 	andpl	pc, r1, #0, 6
    4c58:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4c5c:	00000000 	andeq	r0, r0, r0
    4c60:	52000100 	andpl	r0, r0, #0, 2
	...
    4c6c:	00000001 	andeq	r0, r0, r1
    4c70:	00000000 	andeq	r0, r0, r0
    4c74:	00060000 	andeq	r0, r6, r0
    4c78:	007517f2 	ldrshteq	r1, [r5], #-114	; 0xffffff8e
	...
    4c90:	00530001 	subseq	r0, r3, r1
	...
    4ca0:	00000001 	andeq	r0, r0, r1
    4ca4:	00000000 	andeq	r0, r0, r0
    4ca8:	72000300 	andvc	r0, r0, #0, 6
    4cac:	00009f14 	andeq	r9, r0, r4, lsl pc
    4cb0:	00000000 	andeq	r0, r0, r0
    4cb4:	00010000 	andeq	r0, r1, r0
    4cb8:	00000053 	andeq	r0, r0, r3, asr r0
    4cbc:	00000000 	andeq	r0, r0, r0
    4cc0:	72000300 	andvc	r0, r0, #0, 6
    4cc4:	00009f14 	andeq	r9, r0, r4, lsl pc
    4cc8:	00000000 	andeq	r0, r0, r0
    4ccc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4cd8:	00530001 	subseq	r0, r3, r1
    4cdc:	00000000 	andeq	r0, r0, r0
    4ce0:	01000000 	mrseq	r0, (UNDEF: 0)
    4ce4:	00010000 	andeq	r0, r1, r0
    4ce8:	00000000 	andeq	r0, r0, r0
    4cec:	03000000 	movweq	r0, #0
    4cf0:	9f147200 	svcls	0x00147200
	...
    4cfc:	00520001 	subseq	r0, r2, r1
    4d00:	00000000 	andeq	r0, r0, r0
    4d04:	01000000 	mrseq	r0, (UNDEF: 0)
    4d08:	00000001 	andeq	r0, r0, r1
    4d0c:	00000000 	andeq	r0, r0, r0
    4d10:	53000100 	movwpl	r0, #256	; 0x100
	...
    4d1c:	00000100 	andeq	r0, r0, r0, lsl #2
    4d20:	00000000 	andeq	r0, r0, r0
    4d24:	00010000 	andeq	r0, r1, r0
    4d28:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4d38:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    4d44:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    4d48:	00000008 	andeq	r0, r0, r8
	...
    4d68:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4d74:	01f30004 	mvnseq	r0, r4
    4d78:	00009f50 	andeq	r9, r0, r0, asr pc
    4d7c:	00000000 	andeq	r0, r0, r0
    4d80:	00010000 	andeq	r0, r1, r0
    4d84:	00000050 	andeq	r0, r0, r0, asr r0
    4d88:	00000000 	andeq	r0, r0, r0
    4d8c:	f3000400 	vshl.u8	d0, d0, d0
    4d90:	009f5001 	addseq	r5, pc, r1
    4d94:	00000000 	andeq	r0, r0, r0
    4d98:	01000000 	mrseq	r0, (UNDEF: 0)
    4d9c:	00005000 	andeq	r5, r0, r0
    4da0:	00000000 	andeq	r0, r0, r0
    4da4:	00040000 	andeq	r0, r4, r0
    4da8:	9f5001f3 	svcls	0x005001f3
	...
    4db4:	00500001 	subseq	r0, r0, r1
    4db8:	00000000 	andeq	r0, r0, r0
    4dbc:	04000000 	streq	r0, [r0], #-0
    4dc0:	5001f300 	andpl	pc, r1, r0, lsl #6
    4dc4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    4ddc:	01000000 	mrseq	r0, (UNDEF: 0)
    4de0:	00005100 	andeq	r5, r0, r0, lsl #2
    4de4:	00000000 	andeq	r0, r0, r0
    4de8:	00040000 	andeq	r0, r4, r0
    4dec:	9f5101f3 	svcls	0x005101f3
	...
    4df8:	00510001 	subseq	r0, r1, r1
    4dfc:	00000000 	andeq	r0, r0, r0
    4e00:	04000000 	streq	r0, [r0], #-0
    4e04:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4e08:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4e0c:	00000000 	andeq	r0, r0, r0
    4e10:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4e2c:	00010000 	andeq	r0, r1, r0
    4e30:	00000052 	andeq	r0, r0, r2, asr r0
    4e34:	00000000 	andeq	r0, r0, r0
    4e38:	f3000400 	vshl.u8	d0, d0, d0
    4e3c:	009f5201 	addseq	r5, pc, r1, lsl #4
    4e40:	00000000 	andeq	r0, r0, r0
    4e44:	01000000 	mrseq	r0, (UNDEF: 0)
    4e48:	00005200 	andeq	r5, r0, r0, lsl #4
    4e4c:	00000000 	andeq	r0, r0, r0
    4e50:	00040000 	andeq	r0, r4, r0
    4e54:	9f5201f3 	svcls	0x005201f3
	...
    4e60:	00520001 	subseq	r0, r2, r1
	...
    4e80:	01000000 	mrseq	r0, (UNDEF: 0)
    4e84:	00005000 	andeq	r5, r0, r0
    4e88:	00000000 	andeq	r0, r0, r0
    4e8c:	00040000 	andeq	r0, r4, r0
    4e90:	9f5001f3 	svcls	0x005001f3
	...
    4e9c:	00500001 	subseq	r0, r0, r1
    4ea0:	00000000 	andeq	r0, r0, r0
    4ea4:	04000000 	streq	r0, [r0], #-0
    4ea8:	5001f300 	andpl	pc, r1, r0, lsl #6
    4eac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4eb0:	00000000 	andeq	r0, r0, r0
    4eb4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4ec0:	01f30004 	mvnseq	r0, r4
    4ec4:	00009f50 	andeq	r9, r0, r0, asr pc
    4ec8:	00000000 	andeq	r0, r0, r0
    4ecc:	00010000 	andeq	r0, r1, r0
    4ed0:	00000050 	andeq	r0, r0, r0, asr r0
    4ed4:	00000000 	andeq	r0, r0, r0
    4ed8:	f3000400 	vshl.u8	d0, d0, d0
    4edc:	009f5001 	addseq	r5, pc, r1
	...
    4ef4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ef8:	00005100 	andeq	r5, r0, r0, lsl #2
    4efc:	00000000 	andeq	r0, r0, r0
    4f00:	00020000 	andeq	r0, r2, r0
    4f04:	00002070 	andeq	r2, r0, r0, ror r0
    4f08:	00000000 	andeq	r0, r0, r0
    4f0c:	00040000 	andeq	r0, r4, r0
    4f10:	9f5101f3 	svcls	0x005101f3
	...
    4f1c:	00510001 	subseq	r0, r1, r1
	...
    4f34:	01000000 	mrseq	r0, (UNDEF: 0)
    4f38:	00005200 	andeq	r5, r0, r0, lsl #4
    4f3c:	00000000 	andeq	r0, r0, r0
    4f40:	00020000 	andeq	r0, r2, r0
    4f44:	00002470 	andeq	r2, r0, r0, ror r4
    4f48:	00000000 	andeq	r0, r0, r0
    4f4c:	00040000 	andeq	r0, r4, r0
    4f50:	9f5201f3 	svcls	0x005201f3
	...
    4f5c:	00520001 	subseq	r0, r2, r1
	...
    4f6c:	02000000 	andeq	r0, r0, #0
    4f70:	00007d00 	andeq	r7, r0, r0, lsl #26
    4f74:	00000000 	andeq	r0, r0, r0
    4f78:	02000000 	andeq	r0, r0, #0
    4f7c:	00187d00 	andseq	r7, r8, r0, lsl #26
    4f80:	00000000 	andeq	r0, r0, r0
    4f84:	02000000 	andeq	r0, r0, #0
    4f88:	00207d00 	eoreq	r7, r0, r0, lsl #26
    4f8c:	00000000 	andeq	r0, r0, r0
    4f90:	02000000 	andeq	r0, r0, #0
    4f94:	00187d00 	andseq	r7, r8, r0, lsl #26
    4f98:	00000000 	andeq	r0, r0, r0
    4f9c:	02000000 	andeq	r0, r0, #0
    4fa0:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    4fc0:	01000000 	mrseq	r0, (UNDEF: 0)
    4fc4:	00005000 	andeq	r5, r0, r0
    4fc8:	00000000 	andeq	r0, r0, r0
    4fcc:	00010000 	andeq	r0, r1, r0
    4fd0:	00000054 	andeq	r0, r0, r4, asr r0
    4fd4:	00000000 	andeq	r0, r0, r0
    4fd8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4fe4:	00540001 	subseq	r0, r4, r1
    4fe8:	00000000 	andeq	r0, r0, r0
    4fec:	01000000 	mrseq	r0, (UNDEF: 0)
    4ff0:	00005000 	andeq	r5, r0, r0
    4ff4:	00000000 	andeq	r0, r0, r0
    4ff8:	00040000 	andeq	r0, r4, r0
    4ffc:	9f5001f3 	svcls	0x005001f3
	...
    5008:	00500001 	subseq	r0, r0, r1
    500c:	00000000 	andeq	r0, r0, r0
    5010:	01000000 	mrseq	r0, (UNDEF: 0)
    5014:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5034:	00510001 	subseq	r0, r1, r1
    5038:	00000000 	andeq	r0, r0, r0
    503c:	01000000 	mrseq	r0, (UNDEF: 0)
    5040:	00005500 	andeq	r5, r0, r0, lsl #10
    5044:	00000000 	andeq	r0, r0, r0
    5048:	00010000 	andeq	r0, r1, r0
    504c:	00000058 	andeq	r0, r0, r8, asr r0
    5050:	00000000 	andeq	r0, r0, r0
    5054:	f3000400 	vshl.u8	d0, d0, d0
    5058:	009f5101 	addseq	r5, pc, r1, lsl #2
    505c:	00000000 	andeq	r0, r0, r0
    5060:	01000000 	mrseq	r0, (UNDEF: 0)
    5064:	00005100 	andeq	r5, r0, r0, lsl #2
    5068:	00000000 	andeq	r0, r0, r0
    506c:	00040000 	andeq	r0, r4, r0
    5070:	9f5101f3 	svcls	0x005101f3
	...
    507c:	00510001 	subseq	r0, r1, r1
	...
    5098:	52000100 	andpl	r0, r0, #0, 2
	...
    50a4:	01f30004 	mvnseq	r0, r4
    50a8:	00009f52 	andeq	r9, r0, r2, asr pc
    50ac:	00000000 	andeq	r0, r0, r0
    50b0:	00010000 	andeq	r0, r1, r0
    50b4:	00000052 	andeq	r0, r0, r2, asr r0
    50b8:	00000000 	andeq	r0, r0, r0
    50bc:	f3000400 	vshl.u8	d0, d0, d0
    50c0:	009f5201 	addseq	r5, pc, r1, lsl #4
    50c4:	00000000 	andeq	r0, r0, r0
    50c8:	01000000 	mrseq	r0, (UNDEF: 0)
    50cc:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    50e0:	00010000 	andeq	r0, r1, r0
    50e4:	00000053 	andeq	r0, r0, r3, asr r0
    50e8:	00000000 	andeq	r0, r0, r0
    50ec:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    5100:	00010000 	andeq	r0, r1, r0
    5104:	00000055 	andeq	r0, r0, r5, asr r0
	...
    5110:	00000101 	andeq	r0, r0, r1, lsl #2
    5114:	00000000 	andeq	r0, r0, r0
    5118:	01000000 	mrseq	r0, (UNDEF: 0)
    511c:	00005800 	andeq	r5, r0, r0, lsl #16
    5120:	00000000 	andeq	r0, r0, r0
    5124:	00030000 	andeq	r0, r3, r0
    5128:	009f7e78 	addseq	r7, pc, r8, ror lr	; <UNPREDICTABLE>
    512c:	00000000 	andeq	r0, r0, r0
    5130:	01000000 	mrseq	r0, (UNDEF: 0)
    5134:	00005800 	andeq	r5, r0, r0, lsl #16
    5138:	00000000 	andeq	r0, r0, r0
    513c:	00030000 	andeq	r0, r3, r0
	...
    5150:	9f300002 	svcls	0x00300002
	...
    515c:	00500001 	subseq	r0, r0, r1
    5160:	00000000 	andeq	r0, r0, r0
    5164:	01000000 	mrseq	r0, (UNDEF: 0)
    5168:	00005700 	andeq	r5, r0, r0, lsl #14
    516c:	00000000 	andeq	r0, r0, r0
    5170:	00020000 	andeq	r0, r2, r0
    5174:	00009f30 	andeq	r9, r0, r0, lsr pc
    5178:	00000000 	andeq	r0, r0, r0
    517c:	00020000 	andeq	r0, r2, r0
    5180:	00009f30 	andeq	r9, r0, r0, lsr pc
    5184:	00000000 	andeq	r0, r0, r0
    5188:	0d480000 	stcleq	0, cr0, [r8, #-0]
    518c:	0d4c0800 	stcleq	8, cr0, [ip, #-0]
    5190:	00020800 	andeq	r0, r2, r0, lsl #16
    5194:	0d4c007d 	stcleq	0, cr0, [ip, #-500]	; 0xfffffe0c
    5198:	0d4e0800 	stcleq	8, cr0, [lr, #-0]
    519c:	00020800 	andeq	r0, r2, r0, lsl #16
    51a0:	0d4e187d 	stcleq	8, cr1, [lr, #-500]	; 0xfffffe0c
    51a4:	0e0c0800 	cdpeq	8, 0, cr0, cr12, cr0, {0}
    51a8:	00020800 	andeq	r0, r2, r0, lsl #16
    51ac:	0e0c207d 	mcreq	0, 0, r2, cr12, cr13, {3}
    51b0:	0e100800 	cdpeq	8, 1, cr0, cr0, cr0, {0}
    51b4:	00020800 	andeq	r0, r2, r0, lsl #16
    51b8:	0e10187d 	mrceq	8, 0, r1, cr0, cr13, {3}
    51bc:	0e140800 	cdpeq	8, 1, cr0, cr4, cr0, {0}
    51c0:	00020800 	andeq	r0, r2, r0, lsl #16
    51c4:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    51dc:	0d480000 	stcleq	0, cr0, [r8, #-0]
    51e0:	0d680800 	stcleq	8, cr0, [r8, #-0]
    51e4:	00010800 	andeq	r0, r1, r0, lsl #16
    51e8:	000d6850 	andeq	r6, sp, r0, asr r8
    51ec:	000d6a08 	andeq	r6, sp, r8, lsl #20
    51f0:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    51f4:	08000d6a 	stmdaeq	r0, {r1, r3, r5, r6, r8, sl, fp}
    51f8:	08000d77 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r8, sl, fp}
    51fc:	77500001 	ldrbvc	r0, [r0, -r1]
    5200:	0808000d 	stmdaeq	r8, {r0, r2, r3}
    5204:	0108000e 	tsteq	r8, lr
    5208:	0e085400 	cfcpyseq	mvf5, mvf8
    520c:	0e0a0800 	cdpeq	8, 0, cr0, cr10, cr0, {0}
    5210:	00010800 	andeq	r0, r1, r0, lsl #16
    5214:	000e0a50 	andeq	r0, lr, r0, asr sl
    5218:	000e1008 	andeq	r1, lr, r8
    521c:	f3000408 	vshl.u8	d0, d8, d0
    5220:	109f5001 	addsne	r5, pc, r1
    5224:	1208000e 	andne	r0, r8, #14
    5228:	0108000e 	tsteq	r8, lr
    522c:	0e125000 	cdpeq	0, 1, cr5, cr2, cr0, {0}
    5230:	0e140800 	cdpeq	8, 1, cr0, cr4, cr0, {0}
    5234:	00010800 	andeq	r0, r1, r0, lsl #16
    5238:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5250:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    5254:	7708000d 	strvc	r0, [r8, -sp]
    5258:	0108000d 	tsteq	r8, sp
    525c:	0d775100 	ldfeqe	f5, [r7, #-0]
    5260:	0d9a0800 	ldceq	8, cr0, [sl]
    5264:	00010800 	andeq	r0, r1, r0, lsl #16
    5268:	000d9a55 	andeq	r9, sp, r5, asr sl
    526c:	000de008 	andeq	lr, sp, r8
    5270:	f3000408 	vshl.u8	d0, d8, d0
    5274:	e09f5101 	adds	r5, pc, r1, lsl #2
    5278:	e408000d 	str	r0, [r8], #-13
    527c:	0108000d 	tsteq	r8, sp
    5280:	0de45500 	cfstr64eq	mvdx5, [r4]
    5284:	0de60800 	stcleq	8, cr0, [r6]
    5288:	00010800 	andeq	r0, r1, r0, lsl #16
    528c:	000de658 	andeq	lr, sp, r8, asr r6
    5290:	000e0808 	andeq	r0, lr, r8, lsl #16
    5294:	f3000408 	vshl.u8	d0, d8, d0
    5298:	089f5101 	ldmeq	pc, {r0, r8, ip, lr}	; <UNPREDICTABLE>
    529c:	0a08000e 	beq	2052dc <_Min_Heap_Size+0x204adc>
    52a0:	0108000e 	tsteq	r8, lr
    52a4:	0e0a5100 	adfeqe	f5, f2, f0
    52a8:	0e100800 	cdpeq	8, 1, cr0, cr0, cr0, {0}
    52ac:	00040800 	andeq	r0, r4, r0, lsl #16
    52b0:	9f5101f3 	svcls	0x005101f3
    52b4:	08000e10 	stmdaeq	r0, {r4, r9, sl, fp}
    52b8:	08000e14 	stmdaeq	r0, {r2, r4, r9, sl, fp}
    52bc:	00510001 	subseq	r0, r1, r1
	...
    52d0:	000d4800 	andeq	r4, sp, r0, lsl #16
    52d4:	000d7708 	andeq	r7, sp, r8, lsl #14
    52d8:	52000108 	andpl	r0, r0, #8, 2
    52dc:	08000d77 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r8, sl, fp}
    52e0:	08000e08 	stmdaeq	r0, {r3, r9, sl, fp}
    52e4:	01f30004 	mvnseq	r0, r4
    52e8:	0e089f52 	mcreq	15, 0, r9, cr8, cr2, {2}
    52ec:	0e0a0800 	cdpeq	8, 0, cr0, cr10, cr0, {0}
    52f0:	00010800 	andeq	r0, r1, r0, lsl #16
    52f4:	000e0a52 	andeq	r0, lr, r2, asr sl
    52f8:	000e1008 	andeq	r1, lr, r8
    52fc:	f3000408 	vshl.u8	d0, d8, d0
    5300:	109f5201 	addsne	r5, pc, r1, lsl #4
    5304:	1408000e 	strne	r0, [r8], #-14
    5308:	0108000e 	tsteq	r8, lr
    530c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    5318:	0d480000 	stcleq	0, cr0, [r8, #-0]
    531c:	0d540800 	ldcleq	8, cr0, [r4, #-0]
    5320:	00010800 	andeq	r0, r1, r0, lsl #16
    5324:	000d5453 	andeq	r5, sp, r3, asr r4
    5328:	000e1408 	andeq	r1, lr, r8, lsl #8
    532c:	56000108 	strpl	r0, [r0], -r8, lsl #2
	...
    5338:	01000000 	mrseq	r0, (UNDEF: 0)
    533c:	00000001 	andeq	r0, r0, r1
    5340:	08000d9a 	stmdaeq	r0, {r1, r3, r4, r7, r8, sl, fp}
    5344:	08000dda 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, sl, fp}
    5348:	da550001 	ble	1545354 <_Min_Heap_Size+0x1544b54>
    534c:	de08000d 	cdple	0, 0, cr0, cr8, cr13, {0}
    5350:	0308000d 	movweq	r0, #32781	; 0x800d
    5354:	9f7f7500 	svcls	0x007f7500
    5358:	08000dde 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, sl, fp}
    535c:	08000de0 	stmdaeq	r0, {r5, r6, r7, r8, sl, fp}
    5360:	e6550001 	ldrb	r0, [r5], -r1
    5364:	0808000d 	stmdaeq	r8, {r0, r2, r3}
    5368:	0108000e 	tsteq	r8, lr
    536c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    5378:	00010100 	andeq	r0, r1, r0, lsl #2
    537c:	0d9a0000 	ldceq	0, cr0, [sl]
    5380:	0da80800 	stceq	8, cr0, [r8]
    5384:	00010800 	andeq	r0, r1, r0, lsl #16
    5388:	000da858 	andeq	sl, sp, r8, asr r8
    538c:	000db008 	andeq	fp, sp, r8
    5390:	78000308 	stmdavc	r0, {r3, r8, r9}
    5394:	0db09f7e 	ldceq	15, cr9, [r0, #504]!	; 0x1f8
    5398:	0de00800 	stcleq	8, cr0, [r0]
    539c:	00010800 	andeq	r0, r1, r0, lsl #16
    53a0:	000de658 	andeq	lr, sp, r8, asr r6
    53a4:	000e0808 	andeq	r0, lr, r8, lsl #16
    53a8:	58000108 	stmdapl	r0, {r3, r8}
	...
    53b4:	00000003 	andeq	r0, r0, r3
	...
    53c0:	0d500000 	ldcleq	0, cr0, [r0, #-0]
    53c4:	0d7a0800 	ldcleq	8, cr0, [sl, #-0]
    53c8:	00020800 	andeq	r0, r2, r0, lsl #16
    53cc:	0d7a9f30 	ldcleq	15, cr9, [sl, #-192]!	; 0xffffff40
    53d0:	0d9a0800 	ldceq	8, cr0, [sl]
    53d4:	00010800 	andeq	r0, r1, r0, lsl #16
    53d8:	000d9a50 	andeq	r9, sp, r0, asr sl
    53dc:	000de008 	andeq	lr, sp, r8
    53e0:	57000108 	strpl	r0, [r0, -r8, lsl #2]
    53e4:	08000de0 	stmdaeq	r0, {r5, r6, r7, r8, sl, fp}
    53e8:	08000de6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, sl, fp}
    53ec:	e6500001 	ldrb	r0, [r0], -r1
    53f0:	0808000d 	stmdaeq	r8, {r0, r2, r3}
    53f4:	0108000e 	tsteq	r8, lr
    53f8:	0e085700 	cdpeq	7, 0, cr5, cr8, cr0, {0}
    53fc:	0e0a0800 	cdpeq	8, 0, cr0, cr10, cr0, {0}
    5400:	00020800 	andeq	r0, r2, r0, lsl #16
    5404:	0e109f30 	mrceq	15, 0, r9, cr0, cr0, {1}
    5408:	0e140800 	cdpeq	8, 1, cr0, cr4, cr0, {0}
    540c:	00020800 	andeq	r0, r2, r0, lsl #16
    5410:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    5420:	00020000 	andeq	r0, r2, r0
    5424:	0000007d 	andeq	r0, r0, sp, ror r0
    5428:	00000000 	andeq	r0, r0, r0
    542c:	00020000 	andeq	r0, r2, r0
    5430:	0000087d 	andeq	r0, r0, sp, ror r8
    5434:	00000000 	andeq	r0, r0, r0
    5438:	00020000 	andeq	r0, r2, r0
    543c:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    5454:	00010000 	andeq	r0, r1, r0
    5458:	00000050 	andeq	r0, r0, r0, asr r0
    545c:	00000000 	andeq	r0, r0, r0
    5460:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    546c:	00500001 	subseq	r0, r0, r1
    5470:	00000000 	andeq	r0, r0, r0
    5474:	04000000 	streq	r0, [r0], #-0
    5478:	5001f300 	andpl	pc, r1, r0, lsl #6
    547c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    548c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5498:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    549c:	00000010 	andeq	r0, r0, r0, lsl r0
    54a0:	00000000 	andeq	r0, r0, r0
    54a4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    54c0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    54cc:	00540001 	subseq	r0, r4, r1
    54d0:	00000000 	andeq	r0, r0, r0
    54d4:	01000000 	mrseq	r0, (UNDEF: 0)
    54d8:	00005000 	andeq	r5, r0, r0
    54dc:	00000000 	andeq	r0, r0, r0
    54e0:	00040000 	andeq	r0, r4, r0
    54e4:	9f5001f3 	svcls	0x005001f3
	...
    54fc:	00010000 	andeq	r0, r1, r0
    5500:	00000051 	andeq	r0, r0, r1, asr r0
    5504:	00000000 	andeq	r0, r0, r0
    5508:	f3000400 	vshl.u8	d0, d0, d0
    550c:	009f5101 	addseq	r5, pc, r1, lsl #2
    5510:	00000000 	andeq	r0, r0, r0
    5514:	01000000 	mrseq	r0, (UNDEF: 0)
    5518:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    5534:	00520001 	subseq	r0, r2, r1
    5538:	00000000 	andeq	r0, r0, r0
    553c:	01000000 	mrseq	r0, (UNDEF: 0)
    5540:	00005600 	andeq	r5, r0, r0, lsl #12
    5544:	00000000 	andeq	r0, r0, r0
    5548:	00040000 	andeq	r0, r4, r0
    554c:	9f5201f3 	svcls	0x005201f3
	...
    5558:	00560001 	subseq	r0, r6, r1
    555c:	00000000 	andeq	r0, r0, r0
    5560:	01000000 	mrseq	r0, (UNDEF: 0)
    5564:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    5574:	00020000 	andeq	r0, r2, r0
    5578:	0000007d 	andeq	r0, r0, sp, ror r0
    557c:	00000000 	andeq	r0, r0, r0
    5580:	00020000 	andeq	r0, r2, r0
    5584:	0000107d 	andeq	r1, r0, sp, ror r0
    5588:	00000000 	andeq	r0, r0, r0
    558c:	00020000 	andeq	r0, r2, r0
    5590:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    55a8:	00010000 	andeq	r0, r1, r0
    55ac:	00000050 	andeq	r0, r0, r0, asr r0
    55b0:	00000000 	andeq	r0, r0, r0
    55b4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    55c0:	00500001 	subseq	r0, r0, r1
    55c4:	00000000 	andeq	r0, r0, r0
    55c8:	04000000 	streq	r0, [r0], #-0
    55cc:	5001f300 	andpl	pc, r1, r0, lsl #6
    55d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    55e8:	01000000 	mrseq	r0, (UNDEF: 0)
    55ec:	00005100 	andeq	r5, r0, r0, lsl #2
    55f0:	00000000 	andeq	r0, r0, r0
    55f4:	00010000 	andeq	r0, r1, r0
    55f8:	00000055 	andeq	r0, r0, r5, asr r0
    55fc:	00000000 	andeq	r0, r0, r0
    5600:	f3000400 	vshl.u8	d0, d0, d0
    5604:	009f5101 	addseq	r5, pc, r1, lsl #2
    5608:	00000000 	andeq	r0, r0, r0
    560c:	01000000 	mrseq	r0, (UNDEF: 0)
    5610:	00005500 	andeq	r5, r0, r0, lsl #10
    5614:	00000000 	andeq	r0, r0, r0
    5618:	00010000 	andeq	r0, r1, r0
    561c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    562c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5638:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    563c:	00000008 	andeq	r0, r0, r8
    5640:	00000000 	andeq	r0, r0, r0
    5644:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5660:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    566c:	00540001 	subseq	r0, r4, r1
    5670:	00000000 	andeq	r0, r0, r0
    5674:	01000000 	mrseq	r0, (UNDEF: 0)
    5678:	00005000 	andeq	r5, r0, r0
    567c:	00000000 	andeq	r0, r0, r0
    5680:	00040000 	andeq	r0, r4, r0
    5684:	9f5001f3 	svcls	0x005001f3
	...
    5690:	08000c1c 	stmdaeq	r0, {r2, r3, r4, sl, fp}
    5694:	08000c24 	stmdaeq	r0, {r2, r5, sl, fp}
    5698:	007d0002 	rsbseq	r0, sp, r2
    569c:	08000c24 	stmdaeq	r0, {r2, r5, sl, fp}
    56a0:	08000d3a 	stmdaeq	r0, {r1, r3, r4, r5, r8, sl, fp}
    56a4:	087d0002 	ldmdaeq	sp!, {r1}^
    56a8:	08000d3a 	stmdaeq	r0, {r1, r3, r4, r5, r8, sl, fp}
    56ac:	08000d48 	stmdaeq	r0, {r3, r6, r8, sl, fp}
    56b0:	007d0002 	rsbseq	r0, sp, r2
	...
    56c8:	08000c1c 	stmdaeq	r0, {r2, r3, r4, sl, fp}
    56cc:	08000c52 	stmdaeq	r0, {r1, r4, r6, sl, fp}
    56d0:	52500001 	subspl	r0, r0, #1
    56d4:	da08000c 	ble	20570c <_Min_Heap_Size+0x204f0c>
    56d8:	0108000c 	tsteq	r8, ip
    56dc:	0cda5400 	cfldrdeq	mvd5, [sl], {0}
    56e0:	0d100800 	ldceq	8, cr0, [r0, #-0]
    56e4:	00010800 	andeq	r0, r1, r0, lsl #16
    56e8:	000d1050 	andeq	r1, sp, r0, asr r0
    56ec:	000d3a08 	andeq	r3, sp, r8, lsl #20
    56f0:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    56f4:	08000d3a 	stmdaeq	r0, {r1, r3, r4, r5, r8, sl, fp}
    56f8:	08000d3c 	stmdaeq	r0, {r2, r3, r4, r5, r8, sl, fp}
    56fc:	3c500001 	mrrccc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    5700:	4808000d 	stmdami	r8, {r0, r2, r3}
    5704:	0408000d 	streq	r0, [r8], #-13
    5708:	5001f300 	andpl	pc, r1, r0, lsl #6
    570c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    571c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5728:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    572c:	00000008 	andeq	r0, r0, r8
    5730:	00000000 	andeq	r0, r0, r0
    5734:	0011e000 	andseq	lr, r1, r0
    5738:	0011e208 	andseq	lr, r1, r8, lsl #4
    573c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    5740:	0011e200 	andseq	lr, r1, r0, lsl #4
    5744:	00120008 	andseq	r0, r2, r8
    5748:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    574c:	00000008 	andeq	r0, r0, r8
    5750:	00000000 	andeq	r0, r0, r0
    5754:	0011c000 	andseq	ip, r1, r0
    5758:	0011c208 	andseq	ip, r1, r8, lsl #4
    575c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    5760:	0011c200 	andseq	ip, r1, r0, lsl #4
    5764:	0011e008 	andseq	lr, r1, r8
    5768:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    576c:	00000008 	andeq	r0, r0, r8
	...
    577c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5788:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    578c:	00000008 	andeq	r0, r0, r8
    5790:	00000000 	andeq	r0, r0, r0
    5794:	00000100 	andeq	r0, r0, r0, lsl #2
    5798:	00000000 	andeq	r0, r0, r0
    579c:	00000001 	andeq	r0, r0, r1
    57a0:	00000000 	andeq	r0, r0, r0
    57a4:	30000200 	andcc	r0, r0, r0, lsl #4
    57a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    57ac:	00000000 	andeq	r0, r0, r0
    57b0:	52000100 	andpl	r0, r0, #0, 2
	...
    57bc:	00520001 	subseq	r0, r2, r1
    57c0:	00000000 	andeq	r0, r0, r0
    57c4:	02000000 	andeq	r0, r0, #0
    57c8:	009f3000 	addseq	r3, pc, r0
    57cc:	00000000 	andeq	r0, r0, r0
    57d0:	01000000 	mrseq	r0, (UNDEF: 0)
    57d4:	00000000 	andeq	r0, r0, r0
    57d8:	00010000 	andeq	r0, r1, r0
    57dc:	00000000 	andeq	r0, r0, r0
    57e0:	02000000 	andeq	r0, r0, #0
    57e4:	009f3000 	addseq	r3, pc, r0
    57e8:	00000000 	andeq	r0, r0, r0
    57ec:	01000000 	mrseq	r0, (UNDEF: 0)
    57f0:	00005000 	andeq	r5, r0, r0
    57f4:	00000000 	andeq	r0, r0, r0
    57f8:	00020000 	andeq	r0, r2, r0
    57fc:	00009f30 	andeq	r9, r0, r0, lsr pc
    5800:	00000000 	andeq	r0, r0, r0
    5804:	00020000 	andeq	r0, r2, r0
    5808:	00009f30 	andeq	r9, r0, r0, lsr pc
    580c:	00000000 	andeq	r0, r0, r0
    5810:	00010000 	andeq	r0, r1, r0
    5814:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5820:	9f300002 	svcls	0x00300002
	...
    582c:	00530001 	subseq	r0, r3, r1
    5830:	00000000 	andeq	r0, r0, r0
    5834:	02000000 	andeq	r0, r0, #0
    5838:	009f3000 	addseq	r3, pc, r0
    583c:	00000000 	andeq	r0, r0, r0
    5840:	02000000 	andeq	r0, r0, #0
    5844:	00000000 	andeq	r0, r0, r0
    5848:	00010000 	andeq	r0, r1, r0
    584c:	00000000 	andeq	r0, r0, r0
    5850:	02000000 	andeq	r0, r0, #0
    5854:	009f3000 	addseq	r3, pc, r0
    5858:	00000000 	andeq	r0, r0, r0
    585c:	01000000 	mrseq	r0, (UNDEF: 0)
    5860:	00005000 	andeq	r5, r0, r0
    5864:	00000000 	andeq	r0, r0, r0
    5868:	00020000 	andeq	r0, r2, r0
    586c:	00009f30 	andeq	r9, r0, r0, lsr pc
    5870:	00000000 	andeq	r0, r0, r0
    5874:	00060000 	andeq	r0, r6, r0
    5878:	f424000c 	vld4.8	{d0-d3}, [r4], ip
    587c:	00009f00 	andeq	r9, r0, r0, lsl #30
	...
    588c:	00020000 	andeq	r0, r2, r0
    5890:	0000007d 	andeq	r0, r0, sp, ror r0
    5894:	00000000 	andeq	r0, r0, r0
    5898:	00020000 	andeq	r0, r2, r0
    589c:	0000107d 	andeq	r1, r0, sp, ror r0
    58a0:	00000000 	andeq	r0, r0, r0
    58a4:	00020000 	andeq	r0, r2, r0
    58a8:	0000307d 	andeq	r3, r0, sp, ror r0
    58ac:	00000000 	andeq	r0, r0, r0
    58b0:	00020000 	andeq	r0, r2, r0
    58b4:	0000107d 	andeq	r1, r0, sp, ror r0
    58b8:	00000000 	andeq	r0, r0, r0
    58bc:	00020000 	andeq	r0, r2, r0
    58c0:	0000307d 	andeq	r3, r0, sp, ror r0
	...
    58e0:	00500001 	subseq	r0, r0, r1
    58e4:	00000000 	andeq	r0, r0, r0
    58e8:	01000000 	mrseq	r0, (UNDEF: 0)
    58ec:	00005600 	andeq	r5, r0, r0, lsl #12
    58f0:	00000000 	andeq	r0, r0, r0
    58f4:	00040000 	andeq	r0, r4, r0
    58f8:	9f5001f3 	svcls	0x005001f3
	...
    5904:	00500001 	subseq	r0, r0, r1
    5908:	00000000 	andeq	r0, r0, r0
    590c:	01000000 	mrseq	r0, (UNDEF: 0)
    5910:	00005600 	andeq	r5, r0, r0, lsl #12
    5914:	00000000 	andeq	r0, r0, r0
    5918:	00040000 	andeq	r0, r4, r0
    591c:	9f5001f3 	svcls	0x005001f3
	...
    5928:	00560001 	subseq	r0, r6, r1
	...
    5940:	01000000 	mrseq	r0, (UNDEF: 0)
    5944:	00005100 	andeq	r5, r0, r0, lsl #2
    5948:	00000000 	andeq	r0, r0, r0
    594c:	00010000 	andeq	r0, r1, r0
    5950:	00000055 	andeq	r0, r0, r5, asr r0
    5954:	00000000 	andeq	r0, r0, r0
    5958:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5964:	00550001 	subseq	r0, r5, r1
	...
    5984:	52000100 	andpl	r0, r0, #0, 2
	...
    5990:	00540001 	subseq	r0, r4, r1
    5994:	00000000 	andeq	r0, r0, r0
    5998:	04000000 	streq	r0, [r0], #-0
    599c:	5201f300 	andpl	pc, r1, #0, 6
    59a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    59a4:	00000000 	andeq	r0, r0, r0
    59a8:	52000100 	andpl	r0, r0, #0, 2
	...
    59b4:	00540001 	subseq	r0, r4, r1
    59b8:	00000000 	andeq	r0, r0, r0
    59bc:	04000000 	streq	r0, [r0], #-0
    59c0:	5201f300 	andpl	pc, r1, #0, 6
    59c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    59c8:	00000000 	andeq	r0, r0, r0
    59cc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    59e0:	007d0002 	rsbseq	r0, sp, r2
	...
    59ec:	107d0002 	rsbsne	r0, sp, r2
	...
    59f8:	007d0002 	rsbseq	r0, sp, r2
	...
    5a04:	107d0002 	rsbsne	r0, sp, r2
	...
    5a24:	00010000 	andeq	r0, r1, r0
    5a28:	00000050 	andeq	r0, r0, r0, asr r0
    5a2c:	00000000 	andeq	r0, r0, r0
    5a30:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5a3c:	00500001 	subseq	r0, r0, r1
    5a40:	00000000 	andeq	r0, r0, r0
    5a44:	01000000 	mrseq	r0, (UNDEF: 0)
    5a48:	00005400 	andeq	r5, r0, r0, lsl #8
    5a4c:	00000000 	andeq	r0, r0, r0
    5a50:	00010000 	andeq	r0, r1, r0
    5a54:	00000050 	andeq	r0, r0, r0, asr r0
    5a58:	00000000 	andeq	r0, r0, r0
    5a5c:	f3000400 	vshl.u8	d0, d0, d0
    5a60:	009f5001 	addseq	r5, pc, r1
    5a64:	00000000 	andeq	r0, r0, r0
    5a68:	01000000 	mrseq	r0, (UNDEF: 0)
    5a6c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5a88:	00010000 	andeq	r0, r1, r0
    5a8c:	00000051 	andeq	r0, r0, r1, asr r0
    5a90:	00000000 	andeq	r0, r0, r0
    5a94:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5aa0:	00510001 	subseq	r0, r1, r1
    5aa4:	00000000 	andeq	r0, r0, r0
    5aa8:	01000000 	mrseq	r0, (UNDEF: 0)
    5aac:	00005500 	andeq	r5, r0, r0, lsl #10
    5ab0:	00000000 	andeq	r0, r0, r0
    5ab4:	00010000 	andeq	r0, r1, r0
    5ab8:	00000051 	andeq	r0, r0, r1, asr r0
    5abc:	00000000 	andeq	r0, r0, r0
    5ac0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5acc:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    5ad8:	00500001 	subseq	r0, r0, r1
    5adc:	00000000 	andeq	r0, r0, r0
    5ae0:	01000000 	mrseq	r0, (UNDEF: 0)
    5ae4:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    5af4:	00020000 	andeq	r0, r2, r0
    5af8:	0000007d 	andeq	r0, r0, sp, ror r0
    5afc:	00000000 	andeq	r0, r0, r0
    5b00:	00020000 	andeq	r0, r2, r0
    5b04:	0000107d 	andeq	r1, r0, sp, ror r0
    5b08:	00000000 	andeq	r0, r0, r0
    5b0c:	00020000 	andeq	r0, r2, r0
    5b10:	0000187d 	andeq	r1, r0, sp, ror r8
    5b14:	00000000 	andeq	r0, r0, r0
    5b18:	00020000 	andeq	r0, r2, r0
    5b1c:	0000007d 	andeq	r0, r0, sp, ror r0
    5b20:	00000000 	andeq	r0, r0, r0
    5b24:	00020000 	andeq	r0, r2, r0
    5b28:	0000187d 	andeq	r1, r0, sp, ror r8
    5b2c:	00000000 	andeq	r0, r0, r0
    5b30:	00020000 	andeq	r0, r2, r0
    5b34:	0000107d 	andeq	r1, r0, sp, ror r0
    5b38:	00000000 	andeq	r0, r0, r0
    5b3c:	00020000 	andeq	r0, r2, r0
    5b40:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    5b6c:	00500001 	subseq	r0, r0, r1
    5b70:	00000000 	andeq	r0, r0, r0
    5b74:	01000000 	mrseq	r0, (UNDEF: 0)
    5b78:	00005400 	andeq	r5, r0, r0, lsl #8
    5b7c:	00000000 	andeq	r0, r0, r0
    5b80:	00010000 	andeq	r0, r1, r0
    5b84:	00000050 	andeq	r0, r0, r0, asr r0
    5b88:	00000000 	andeq	r0, r0, r0
    5b8c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5b98:	01f30004 	mvnseq	r0, r4
    5b9c:	00009f50 	andeq	r9, r0, r0, asr pc
    5ba0:	00000000 	andeq	r0, r0, r0
    5ba4:	00010000 	andeq	r0, r1, r0
    5ba8:	00000054 	andeq	r0, r0, r4, asr r0
    5bac:	00000000 	andeq	r0, r0, r0
    5bb0:	f3000400 	vshl.u8	d0, d0, d0
    5bb4:	009f5001 	addseq	r5, pc, r1
    5bb8:	00000000 	andeq	r0, r0, r0
    5bbc:	01000000 	mrseq	r0, (UNDEF: 0)
    5bc0:	00005400 	andeq	r5, r0, r0, lsl #8
    5bc4:	00000000 	andeq	r0, r0, r0
    5bc8:	00010000 	andeq	r0, r1, r0
    5bcc:	00000050 	andeq	r0, r0, r0, asr r0
    5bd0:	00000000 	andeq	r0, r0, r0
    5bd4:	f3000400 	vshl.u8	d0, d0, d0
    5bd8:	009f5001 	addseq	r5, pc, r1
    5bdc:	00000000 	andeq	r0, r0, r0
    5be0:	01000000 	mrseq	r0, (UNDEF: 0)
    5be4:	00005400 	andeq	r5, r0, r0, lsl #8
    5be8:	00000000 	andeq	r0, r0, r0
    5bec:	00040000 	andeq	r0, r4, r0
    5bf0:	9f5001f3 	svcls	0x005001f3
	...
    5bfc:	00540001 	subseq	r0, r4, r1
	...
    5c08:	00000101 	andeq	r0, r0, r1, lsl #2
    5c0c:	00000101 	andeq	r0, r0, r1, lsl #2
    5c10:	00000101 	andeq	r0, r0, r1, lsl #2
    5c14:	00000101 	andeq	r0, r0, r1, lsl #2
    5c18:	00000101 	andeq	r0, r0, r1, lsl #2
    5c1c:	00000101 	andeq	r0, r0, r1, lsl #2
    5c20:	00000101 	andeq	r0, r0, r1, lsl #2
    5c24:	00000101 	andeq	r0, r0, r1, lsl #2
    5c28:	00000101 	andeq	r0, r0, r1, lsl #2
    5c2c:	00000101 	andeq	r0, r0, r1, lsl #2
    5c30:	00000000 	andeq	r0, r0, r0
    5c34:	00000101 	andeq	r0, r0, r1, lsl #2
    5c38:	00000101 	andeq	r0, r0, r1, lsl #2
    5c3c:	00000000 	andeq	r0, r0, r0
    5c40:	01000000 	mrseq	r0, (UNDEF: 0)
    5c44:	00005000 	andeq	r5, r0, r0
    5c48:	00000000 	andeq	r0, r0, r0
    5c4c:	00010000 	andeq	r0, r1, r0
    5c50:	00000055 	andeq	r0, r0, r5, asr r0
    5c54:	00000000 	andeq	r0, r0, r0
    5c58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5c64:	00550001 	subseq	r0, r5, r1
    5c68:	00000000 	andeq	r0, r0, r0
    5c6c:	01000000 	mrseq	r0, (UNDEF: 0)
    5c70:	00005000 	andeq	r5, r0, r0
    5c74:	00000000 	andeq	r0, r0, r0
    5c78:	00010000 	andeq	r0, r1, r0
    5c7c:	00000055 	andeq	r0, r0, r5, asr r0
    5c80:	00000000 	andeq	r0, r0, r0
    5c84:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5c90:	00550001 	subseq	r0, r5, r1
    5c94:	00000000 	andeq	r0, r0, r0
    5c98:	01000000 	mrseq	r0, (UNDEF: 0)
    5c9c:	00005000 	andeq	r5, r0, r0
    5ca0:	00000000 	andeq	r0, r0, r0
    5ca4:	00010000 	andeq	r0, r1, r0
    5ca8:	00000055 	andeq	r0, r0, r5, asr r0
    5cac:	00000000 	andeq	r0, r0, r0
    5cb0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5cbc:	00550001 	subseq	r0, r5, r1
    5cc0:	00000000 	andeq	r0, r0, r0
    5cc4:	01000000 	mrseq	r0, (UNDEF: 0)
    5cc8:	00005000 	andeq	r5, r0, r0
    5ccc:	00000000 	andeq	r0, r0, r0
    5cd0:	00010000 	andeq	r0, r1, r0
    5cd4:	00000056 	andeq	r0, r0, r6, asr r0
    5cd8:	00000000 	andeq	r0, r0, r0
    5cdc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5ce8:	00560001 	subseq	r0, r6, r1
    5cec:	00000000 	andeq	r0, r0, r0
    5cf0:	01000000 	mrseq	r0, (UNDEF: 0)
    5cf4:	00005000 	andeq	r5, r0, r0
    5cf8:	00000000 	andeq	r0, r0, r0
    5cfc:	00010000 	andeq	r0, r1, r0
    5d00:	00000056 	andeq	r0, r0, r6, asr r0
    5d04:	00000000 	andeq	r0, r0, r0
    5d08:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5d14:	00550001 	subseq	r0, r5, r1
    5d18:	00000000 	andeq	r0, r0, r0
    5d1c:	01000000 	mrseq	r0, (UNDEF: 0)
    5d20:	00005600 	andeq	r5, r0, r0, lsl #12
    5d24:	00000000 	andeq	r0, r0, r0
    5d28:	00010000 	andeq	r0, r1, r0
    5d2c:	00000055 	andeq	r0, r0, r5, asr r0
    5d30:	00000000 	andeq	r0, r0, r0
    5d34:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5d40:	00540001 	subseq	r0, r4, r1
    5d44:	00000000 	andeq	r0, r0, r0
    5d48:	01000000 	mrseq	r0, (UNDEF: 0)
    5d4c:	00005000 	andeq	r5, r0, r0
    5d50:	00000000 	andeq	r0, r0, r0
    5d54:	00010000 	andeq	r0, r1, r0
    5d58:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5d6c:	53000100 	movwpl	r0, #256	; 0x100
	...
    5d78:	00530001 	subseq	r0, r3, r1
    5d7c:	00000000 	andeq	r0, r0, r0
    5d80:	01000000 	mrseq	r0, (UNDEF: 0)
    5d84:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    5d94:	02000000 	andeq	r0, r0, #0
    5d98:	009f3000 	addseq	r3, pc, r0
    5d9c:	00000000 	andeq	r0, r0, r0
    5da0:	02000000 	andeq	r0, r0, #0
    5da4:	009f3100 	addseq	r3, pc, r0, lsl #2
    5da8:	00000000 	andeq	r0, r0, r0
    5dac:	01000000 	mrseq	r0, (UNDEF: 0)
    5db0:	00005500 	andeq	r5, r0, r0, lsl #10
    5db4:	00000000 	andeq	r0, r0, r0
    5db8:	00020000 	andeq	r0, r2, r0
    5dbc:	00009f30 	andeq	r9, r0, r0, lsr pc
    5dc0:	00000000 	andeq	r0, r0, r0
    5dc4:	00010000 	andeq	r0, r1, r0
    5dc8:	00000055 	andeq	r0, r0, r5, asr r0
    5dcc:	00000000 	andeq	r0, r0, r0
    5dd0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5de4:	007d0002 	rsbseq	r0, sp, r2
	...
    5df0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    5e0c:	00500001 	subseq	r0, r0, r1
    5e10:	00000000 	andeq	r0, r0, r0
    5e14:	04000000 	streq	r0, [r0], #-0
    5e18:	5001f300 	andpl	pc, r1, r0, lsl #6
    5e1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5e20:	00000000 	andeq	r0, r0, r0
    5e24:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5e30:	01f30004 	mvnseq	r0, r4
    5e34:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5e44:	00020000 	andeq	r0, r2, r0
    5e48:	0000007d 	andeq	r0, r0, sp, ror r0
    5e4c:	00000000 	andeq	r0, r0, r0
    5e50:	00020000 	andeq	r0, r2, r0
    5e54:	00000c7d 	andeq	r0, r0, sp, ror ip
    5e58:	00000000 	andeq	r0, r0, r0
    5e5c:	00020000 	andeq	r0, r2, r0
    5e60:	0000187d 	andeq	r1, r0, sp, ror r8
    5e64:	00000000 	andeq	r0, r0, r0
    5e68:	00020000 	andeq	r0, r2, r0
    5e6c:	00000c7d 	andeq	r0, r0, sp, ror ip
    5e70:	00000000 	andeq	r0, r0, r0
    5e74:	00020000 	andeq	r0, r2, r0
    5e78:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    5e90:	00010000 	andeq	r0, r1, r0
    5e94:	00000050 	andeq	r0, r0, r0, asr r0
    5e98:	00000000 	andeq	r0, r0, r0
    5e9c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5ea8:	00500001 	subseq	r0, r0, r1
    5eac:	00000000 	andeq	r0, r0, r0
    5eb0:	01000000 	mrseq	r0, (UNDEF: 0)
    5eb4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    5ecc:	00010000 	andeq	r0, r1, r0
    5ed0:	00000051 	andeq	r0, r0, r1, asr r0
    5ed4:	00000000 	andeq	r0, r0, r0
    5ed8:	f3000400 	vshl.u8	d0, d0, d0
    5edc:	009f5101 	addseq	r5, pc, r1, lsl #2
    5ee0:	00000000 	andeq	r0, r0, r0
    5ee4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ee8:	00005100 	andeq	r5, r0, r0, lsl #2
    5eec:	00000000 	andeq	r0, r0, r0
    5ef0:	00040000 	andeq	r0, r4, r0
    5ef4:	9f5101f3 	svcls	0x005101f3
	...
    5f08:	007d0002 	rsbseq	r0, sp, r2
	...
    5f14:	107d0002 	rsbsne	r0, sp, r2
	...
    5f30:	00500001 	subseq	r0, r0, r1
    5f34:	00000000 	andeq	r0, r0, r0
    5f38:	01000000 	mrseq	r0, (UNDEF: 0)
    5f3c:	00005500 	andeq	r5, r0, r0, lsl #10
    5f40:	00000000 	andeq	r0, r0, r0
    5f44:	00010000 	andeq	r0, r1, r0
    5f48:	00000050 	andeq	r0, r0, r0, asr r0
    5f4c:	00000000 	andeq	r0, r0, r0
    5f50:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5f6c:	00510001 	subseq	r0, r1, r1
    5f70:	00000000 	andeq	r0, r0, r0
    5f74:	04000000 	streq	r0, [r0], #-0
    5f78:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5f7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5f80:	00000000 	andeq	r0, r0, r0
    5f84:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5f90:	01f30004 	mvnseq	r0, r4
    5f94:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    5fa8:	00530001 	subseq	r0, r3, r1
	...
    5fb8:	02000000 	andeq	r0, r0, #0
    5fbc:	00007d00 	andeq	r7, r0, r0, lsl #26
    5fc0:	00000000 	andeq	r0, r0, r0
    5fc4:	02000000 	andeq	r0, r0, #0
    5fc8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    5fe0:	01000000 	mrseq	r0, (UNDEF: 0)
    5fe4:	00005000 	andeq	r5, r0, r0
    5fe8:	00000000 	andeq	r0, r0, r0
    5fec:	00010000 	andeq	r0, r1, r0
    5ff0:	00000055 	andeq	r0, r0, r5, asr r0
    5ff4:	00000000 	andeq	r0, r0, r0
    5ff8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6004:	00550001 	subseq	r0, r5, r1
	...
    601c:	01000000 	mrseq	r0, (UNDEF: 0)
    6020:	00005100 	andeq	r5, r0, r0, lsl #2
    6024:	00000000 	andeq	r0, r0, r0
    6028:	00040000 	andeq	r0, r4, r0
    602c:	9f5101f3 	svcls	0x005101f3
	...
    6038:	00510001 	subseq	r0, r1, r1
    603c:	00000000 	andeq	r0, r0, r0
    6040:	04000000 	streq	r0, [r0], #-0
    6044:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    6048:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6060:	52000100 	andpl	r0, r0, #0, 2
	...
    606c:	01f30004 	mvnseq	r0, r4
    6070:	00009f52 	andeq	r9, r0, r2, asr pc
    6074:	00000000 	andeq	r0, r0, r0
    6078:	00010000 	andeq	r0, r1, r0
    607c:	00000052 	andeq	r0, r0, r2, asr r0
    6080:	00000000 	andeq	r0, r0, r0
    6084:	f3000400 	vshl.u8	d0, d0, d0
    6088:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    6098:	02000000 	andeq	r0, r0, #0
    609c:	00007d00 	andeq	r7, r0, r0, lsl #26
    60a0:	00000000 	andeq	r0, r0, r0
    60a4:	02000000 	andeq	r0, r0, #0
    60a8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    60c0:	01000000 	mrseq	r0, (UNDEF: 0)
    60c4:	00005000 	andeq	r5, r0, r0
    60c8:	00000000 	andeq	r0, r0, r0
    60cc:	00010000 	andeq	r0, r1, r0
    60d0:	00000054 	andeq	r0, r0, r4, asr r0
    60d4:	00000000 	andeq	r0, r0, r0
    60d8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    60e4:	00540001 	subseq	r0, r4, r1
	...
    60fc:	01000000 	mrseq	r0, (UNDEF: 0)
    6100:	00005100 	andeq	r5, r0, r0, lsl #2
    6104:	00000000 	andeq	r0, r0, r0
    6108:	00040000 	andeq	r0, r4, r0
    610c:	9f5101f3 	svcls	0x005101f3
	...
    6118:	00510001 	subseq	r0, r1, r1
    611c:	00000000 	andeq	r0, r0, r0
    6120:	04000000 	streq	r0, [r0], #-0
    6124:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    6128:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6138:	01000000 	mrseq	r0, (UNDEF: 0)
    613c:	00005000 	andeq	r5, r0, r0
	...
    614c:	00020000 	andeq	r0, r2, r0
    6150:	0000007d 	andeq	r0, r0, sp, ror r0
    6154:	00000000 	andeq	r0, r0, r0
    6158:	00020000 	andeq	r0, r2, r0
    615c:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    6174:	00500001 	subseq	r0, r0, r1
    6178:	00000000 	andeq	r0, r0, r0
    617c:	01000000 	mrseq	r0, (UNDEF: 0)
    6180:	00005400 	andeq	r5, r0, r0, lsl #8
    6184:	00000000 	andeq	r0, r0, r0
    6188:	00040000 	andeq	r0, r4, r0
    618c:	9f5001f3 	svcls	0x005001f3
	...
    61a4:	00010000 	andeq	r0, r1, r0
    61a8:	00000051 	andeq	r0, r0, r1, asr r0
    61ac:	00000000 	andeq	r0, r0, r0
    61b0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    61bc:	01f30004 	mvnseq	r0, r4
    61c0:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    61d4:	00530001 	subseq	r0, r3, r1
    61d8:	00000000 	andeq	r0, r0, r0
    61dc:	02000000 	andeq	r0, r0, #0
	...
    61ec:	02000000 	andeq	r0, r0, #0
    61f0:	009f3000 	addseq	r3, pc, r0
    61f4:	00000000 	andeq	r0, r0, r0
    61f8:	01000000 	mrseq	r0, (UNDEF: 0)
    61fc:	00005200 	andeq	r5, r0, r0, lsl #4
    6200:	00000000 	andeq	r0, r0, r0
    6204:	00050000 	andeq	r0, r5, r0
    6208:	24007331 	strcs	r7, [r0], #-817	; 0xfffffccf
    620c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6210:	00000000 	andeq	r0, r0, r0
    6214:	52000100 	andpl	r0, r0, #0, 2
	...
    6220:	00000003 	andeq	r0, r0, r3
	...
    6230:	00020000 	andeq	r0, r2, r0
    6234:	00009f30 	andeq	r9, r0, r0, lsr pc
    6238:	00000000 	andeq	r0, r0, r0
    623c:	00010000 	andeq	r0, r1, r0
    6240:	0000005c 	andeq	r0, r0, ip, asr r0
    6244:	00000000 	andeq	r0, r0, r0
    6248:	72000600 	andvc	r0, r0, #0, 12
    624c:	1a007500 	bne	23654 <_Min_Heap_Size+0x22e54>
    6250:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6254:	00000000 	andeq	r0, r0, r0
    6258:	31000800 	tstcc	r0, r0, lsl #16
    625c:	75240073 	strvc	r0, [r4, #-115]!	; 0xffffff8d
    6260:	009f1a00 	addseq	r1, pc, r0, lsl #20
    6264:	00000000 	andeq	r0, r0, r0
    6268:	01000000 	mrseq	r0, (UNDEF: 0)
    626c:	00005c00 	andeq	r5, r0, r0, lsl #24
    6270:	00000000 	andeq	r0, r0, r0
    6274:	00040000 	andeq	r0, r4, r0
    6278:	00000000 	andeq	r0, r0, r0
    627c:	00000001 	andeq	r0, r0, r1
    6280:	00000000 	andeq	r0, r0, r0
    6284:	00020000 	andeq	r0, r2, r0
    6288:	00009f30 	andeq	r9, r0, r0, lsr pc
    628c:	00000000 	andeq	r0, r0, r0
    6290:	00010000 	andeq	r0, r1, r0
    6294:	00000050 	andeq	r0, r0, r0, asr r0
    6298:	00000000 	andeq	r0, r0, r0
    629c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    62a8:	00570001 	subseq	r0, r7, r1
	...
    62b4:	04080012 	streq	r0, [r8], #-18	; 0xffffffee
    62b8:	02080012 	andeq	r0, r8, #18
    62bc:	04007d00 	streq	r7, [r0], #-3328	; 0xfffff300
    62c0:	06080012 			; <UNDEFINED> instruction: 0x06080012
    62c4:	02080012 	andeq	r0, r8, #18
    62c8:	06187d00 	ldreq	r7, [r8], -r0, lsl #26
    62cc:	d4080012 	strle	r0, [r8], #-18	; 0xffffffee
    62d0:	02080014 	andeq	r0, r8, #20
    62d4:	d4207d00 	strtle	r7, [r0], #-3328	; 0xfffff300
    62d8:	e8080014 	stmda	r8, {r2, r4}
    62dc:	02080014 	andeq	r0, r8, #20
    62e0:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    62f0:	00120000 	andseq	r0, r2, r0
    62f4:	00125408 	andseq	r5, r2, r8, lsl #8
    62f8:	50000108 	andpl	r0, r0, r8, lsl #2
    62fc:	08001254 	stmdaeq	r0, {r2, r4, r6, r9, ip}
    6300:	080014d8 	stmdaeq	r0, {r3, r4, r6, r7, sl, ip}
    6304:	d8570001 	ldmdale	r7, {r0}^
    6308:	e8080014 	stmda	r8, {r2, r4}
    630c:	04080014 	streq	r0, [r8], #-20	; 0xffffffec
    6310:	5001f300 	andpl	pc, r1, r0, lsl #6
    6314:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6324:	52080012 	andpl	r0, r8, #18
    6328:	01080012 	tsteq	r8, r2, lsl r0
    632c:	12525100 	subsne	r5, r2, #0, 2
    6330:	14d80800 	ldrbne	r0, [r8], #2048	; 0x800
    6334:	00010800 	andeq	r0, r1, r0, lsl #16
    6338:	0014d856 	andseq	sp, r4, r6, asr r8
    633c:	0014e808 	andseq	lr, r4, r8, lsl #16
    6340:	f3000408 	vshl.u8	d0, d8, d0
    6344:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    6350:	0012b400 	andseq	fp, r2, r0, lsl #8
    6354:	0014d808 	andseq	sp, r4, r8, lsl #16
    6358:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    6364:	00000002 	andeq	r0, r0, r2
	...
    6374:	120a0000 	andne	r0, sl, #0
    6378:	12b40800 	adcsne	r0, r4, #0, 16
    637c:	00020800 	andeq	r0, r2, r0, lsl #16
    6380:	12b49f30 	adcsne	r9, r4, #48, 30	; 0xc0
    6384:	12da0800 	sbcsne	r0, sl, #0, 16
    6388:	00010800 	andeq	r0, r1, r0, lsl #16
    638c:	0012da55 	andseq	sp, r2, r5, asr sl
    6390:	0012e208 	andseq	lr, r2, r8, lsl #4
    6394:	31000508 	tstcc	r0, r8, lsl #10
    6398:	9f240074 	svcls	0x00240074
    639c:	080012e2 	stmdaeq	r0, {r1, r5, r6, r7, r9, ip}
    63a0:	080012ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, ip}
    63a4:	ec550001 	mrrc	0, 0, r0, r5, cr1
    63a8:	d0080012 	andle	r0, r8, r2, lsl r0
    63ac:	05080013 	streq	r0, [r8, #-19]	; 0xffffffed
    63b0:	00743100 	rsbseq	r3, r4, r0, lsl #2
    63b4:	13d89f24 	bicsne	r9, r8, #36, 30	; 0x90
    63b8:	13f20800 	mvnsne	r0, #0, 16
    63bc:	00010800 	andeq	r0, r1, r0, lsl #16
    63c0:	0013f255 	andseq	pc, r3, r5, asr r2	; <UNPREDICTABLE>
    63c4:	0014bc08 	andseq	fp, r4, r8, lsl #24
    63c8:	31000508 	tstcc	r0, r8, lsl #10
    63cc:	9f240074 	svcls	0x00240074
    63d0:	080014bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, ip}
    63d4:	080014be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, sl, ip}
    63d8:	00730006 	rsbseq	r0, r3, r6
    63dc:	9f240074 	svcls	0x00240074
    63e0:	080014be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, sl, ip}
    63e4:	080014d2 	stmdaeq	r0, {r1, r4, r6, r7, sl, ip}
    63e8:	74310005 	ldrtvc	r0, [r1], #-5
    63ec:	009f2400 	addseq	r2, pc, r0, lsl #8
    63f0:	00000000 	andeq	r0, r0, r0
    63f4:	03000000 	movweq	r0, #0
    63f8:	00000000 	andeq	r0, r0, r0
    63fc:	00120a00 	andseq	r0, r2, r0, lsl #20
    6400:	0012b408 	andseq	fp, r2, r8, lsl #8
    6404:	30000208 	andcc	r0, r0, r8, lsl #4
    6408:	0012b49f 	mulseq	r2, pc, r4	; <UNPREDICTABLE>
    640c:	0013d008 	andseq	sp, r3, r8
    6410:	58000108 	stmdapl	r0, {r3, r8}
    6414:	080013de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, r9, ip}
    6418:	080014d2 	stmdaeq	r0, {r1, r4, r6, r7, sl, ip}
    641c:	00580001 	subseq	r0, r8, r1
    6420:	00000000 	andeq	r0, r0, r0
    6424:	04000000 	streq	r0, [r0], #-0
	...
    6454:	0a000000 	beq	645c <_Min_Heap_Size+0x5c5c>
    6458:	b4080012 	strlt	r0, [r8], #-18	; 0xffffffee
    645c:	02080012 	andeq	r0, r8, #18
    6460:	bc9f3000 	ldclt	0, cr3, [pc], {0}
    6464:	cc080012 	stcgt	0, cr0, [r8], {18}
    6468:	01080012 	tsteq	r8, r2, lsl r0
    646c:	12cc5200 	sbcne	r5, ip, #0, 4
    6470:	12d00800 	sbcsne	r0, r0, #0, 16
    6474:	00010800 	andeq	r0, r1, r0, lsl #16
    6478:	0012d053 	andseq	sp, r2, r3, asr r0
    647c:	0012de08 	andseq	sp, r2, r8, lsl #28
    6480:	52000108 	andpl	r0, r0, #8, 2
    6484:	080012de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, ip}
    6488:	080012e2 	stmdaeq	r0, {r1, r5, r6, r7, r9, ip}
    648c:	32550001 	subscc	r0, r5, #1
    6490:	46080013 			; <UNDEFINED> instruction: 0x46080013
    6494:	01080013 	tsteq	r8, r3, lsl r0
    6498:	13465000 	movtne	r5, #24576	; 0x6000
    649c:	134c0800 	movtne	r0, #51200	; 0xc800
    64a0:	00010800 	andeq	r0, r1, r0, lsl #16
    64a4:	00135653 	andseq	r5, r3, r3, asr r6
    64a8:	00136a08 	andseq	r6, r3, r8, lsl #20
    64ac:	50000108 	andpl	r0, r0, r8, lsl #2
    64b0:	0800136a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, ip}
    64b4:	08001374 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, ip}
    64b8:	74530001 	ldrbvc	r0, [r3], #-1
    64bc:	76080013 			; <UNDEFINED> instruction: 0x76080013
    64c0:	07080013 	smladeq	r8, r3, r0, r0
    64c4:	32007200 	andcc	r7, r0, #0, 4
    64c8:	22007124 	andcs	r7, r0, #36, 2
    64cc:	08001376 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, ip}
    64d0:	0800137e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, ip}
    64d4:	7e520001 	cdpvc	0, 5, cr0, cr2, cr1, {0}
    64d8:	90080013 	andls	r0, r8, r3, lsl r0
    64dc:	01080013 	tsteq	r8, r3, lsl r0
    64e0:	13905100 	orrsne	r5, r0, #0, 2
    64e4:	13940800 	orrsne	r0, r4, #0, 16
    64e8:	00010800 	andeq	r0, r1, r0, lsl #16
    64ec:	00139452 	andseq	r9, r3, r2, asr r4
    64f0:	0013a608 	andseq	sl, r3, r8, lsl #12
    64f4:	51000108 	tstpl	r0, r8, lsl #2
    64f8:	080013a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, ip}
    64fc:	080013aa 	stmdaeq	r0, {r1, r3, r5, r7, r8, r9, ip}
    6500:	aa520001 	bge	148650c <_Min_Heap_Size+0x1485d0c>
    6504:	bc080013 	stclt	0, cr0, [r8], {19}
    6508:	01080013 	tsteq	r8, r3, lsl r0
    650c:	13bc5100 			; <UNDEFINED> instruction: 0x13bc5100
    6510:	13be0800 			; <UNDEFINED> instruction: 0x13be0800
    6514:	00010800 	andeq	r0, r1, r0, lsl #16
    6518:	0013be52 	andseq	fp, r3, r2, asr lr
    651c:	0013ce08 	andseq	ip, r3, r8, lsl #28
    6520:	53000108 	movwpl	r0, #264	; 0x108
    6524:	08001406 	stmdaeq	r0, {r1, r2, sl, ip}
    6528:	08001416 	stmdaeq	r0, {r1, r2, r4, sl, ip}
    652c:	16520001 	ldrbne	r0, [r2], -r1
    6530:	18080014 	stmdane	r8, {r2, r4}
    6534:	01080014 	tsteq	r8, r4, lsl r0
    6538:	14265300 	strtne	r5, [r6], #-768	; 0xfffffd00
    653c:	143a0800 	ldrtne	r0, [sl], #-2048	; 0xfffff800
    6540:	00010800 	andeq	r0, r1, r0, lsl #16
    6544:	00143a52 	andseq	r3, r4, r2, asr sl
    6548:	00143e08 	andseq	r3, r4, r8, lsl #28
    654c:	53000108 	movwpl	r0, #264	; 0x108
    6550:	0800143e 	stmdaeq	r0, {r1, r2, r3, r4, r5, sl, ip}
    6554:	08001448 	stmdaeq	r0, {r3, r6, sl, ip}
    6558:	00770002 	rsbseq	r0, r7, r2
    655c:	08001466 	stmdaeq	r0, {r1, r2, r5, r6, sl, ip}
    6560:	080014d2 	stmdaeq	r0, {r1, r4, r6, r7, sl, ip}
    6564:	00500001 	subseq	r0, r0, r1
	...
    65b0:	01000000 	mrseq	r0, (UNDEF: 0)
    65b4:	00005000 	andeq	r5, r0, r0
    65b8:	00000000 	andeq	r0, r0, r0
    65bc:	00040000 	andeq	r0, r4, r0
    65c0:	9f5001f3 	svcls	0x005001f3
	...
    65cc:	00500001 	subseq	r0, r0, r1
    65d0:	00000000 	andeq	r0, r0, r0
    65d4:	04000000 	streq	r0, [r0], #-0
    65d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    65dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    65e0:	00000000 	andeq	r0, r0, r0
    65e4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    65f0:	01f30004 	mvnseq	r0, r4
    65f4:	00009f50 	andeq	r9, r0, r0, asr pc
    65f8:	00000000 	andeq	r0, r0, r0
    65fc:	00010000 	andeq	r0, r1, r0
    6600:	00000050 	andeq	r0, r0, r0, asr r0
    6604:	00000000 	andeq	r0, r0, r0
    6608:	f3000400 	vshl.u8	d0, d0, d0
    660c:	009f5001 	addseq	r5, pc, r1
    6610:	00000000 	andeq	r0, r0, r0
    6614:	01000000 	mrseq	r0, (UNDEF: 0)
    6618:	00005000 	andeq	r5, r0, r0
    661c:	00000000 	andeq	r0, r0, r0
    6620:	00040000 	andeq	r0, r4, r0
    6624:	9f5001f3 	svcls	0x005001f3
	...
    6630:	00500001 	subseq	r0, r0, r1
    6634:	00000000 	andeq	r0, r0, r0
    6638:	04000000 	streq	r0, [r0], #-0
    663c:	5001f300 	andpl	pc, r1, r0, lsl #6
    6640:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6644:	00000000 	andeq	r0, r0, r0
    6648:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6654:	01f30004 	mvnseq	r0, r4
    6658:	00009f50 	andeq	r9, r0, r0, asr pc
    665c:	00000000 	andeq	r0, r0, r0
    6660:	00010000 	andeq	r0, r1, r0
    6664:	00000050 	andeq	r0, r0, r0, asr r0
    6668:	00000000 	andeq	r0, r0, r0
    666c:	f3000400 	vshl.u8	d0, d0, d0
    6670:	009f5001 	addseq	r5, pc, r1
    6674:	00000000 	andeq	r0, r0, r0
    6678:	01000000 	mrseq	r0, (UNDEF: 0)
    667c:	00005000 	andeq	r5, r0, r0
    6680:	00000000 	andeq	r0, r0, r0
    6684:	00040000 	andeq	r0, r4, r0
    6688:	9f5001f3 	svcls	0x005001f3
	...
    6694:	00500001 	subseq	r0, r0, r1
    6698:	00000000 	andeq	r0, r0, r0
    669c:	04000000 	streq	r0, [r0], #-0
    66a0:	5001f300 	andpl	pc, r1, r0, lsl #6
    66a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    66a8:	00000000 	andeq	r0, r0, r0
    66ac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    66b8:	01f30004 	mvnseq	r0, r4
    66bc:	00009f50 	andeq	r9, r0, r0, asr pc
    66c0:	00000000 	andeq	r0, r0, r0
    66c4:	00010000 	andeq	r0, r1, r0
    66c8:	00000050 	andeq	r0, r0, r0, asr r0
    66cc:	00000000 	andeq	r0, r0, r0
    66d0:	f3000400 	vshl.u8	d0, d0, d0
    66d4:	009f5001 	addseq	r5, pc, r1
    66d8:	00000000 	andeq	r0, r0, r0
    66dc:	01000000 	mrseq	r0, (UNDEF: 0)
    66e0:	00005000 	andeq	r5, r0, r0
    66e4:	00000000 	andeq	r0, r0, r0
    66e8:	00040000 	andeq	r0, r4, r0
    66ec:	9f5001f3 	svcls	0x005001f3
	...
    66f8:	00500001 	subseq	r0, r0, r1
    66fc:	00000000 	andeq	r0, r0, r0
    6700:	04000000 	streq	r0, [r0], #-0
    6704:	5001f300 	andpl	pc, r1, r0, lsl #6
    6708:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    670c:	00000000 	andeq	r0, r0, r0
    6710:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    671c:	01f30004 	mvnseq	r0, r4
    6720:	00009f50 	andeq	r9, r0, r0, asr pc
    6724:	00000000 	andeq	r0, r0, r0
    6728:	00020000 	andeq	r0, r2, r0
	...
    6734:	00020000 	andeq	r0, r2, r0
    6738:	00009f30 	andeq	r9, r0, r0, lsr pc
    673c:	00000000 	andeq	r0, r0, r0
    6740:	00010000 	andeq	r0, r1, r0
    6744:	00000050 	andeq	r0, r0, r0, asr r0
	...
    6788:	01000000 	mrseq	r0, (UNDEF: 0)
    678c:	00005300 	andeq	r5, r0, r0, lsl #6
    6790:	00000000 	andeq	r0, r0, r0
    6794:	00020000 	andeq	r0, r2, r0
    6798:	00002870 	andeq	r2, r0, r0, ror r8
    679c:	00000000 	andeq	r0, r0, r0
    67a0:	00050000 	andeq	r0, r5, r0
    67a4:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    67a8:	00000028 	andeq	r0, r0, r8, lsr #32
    67ac:	00000000 	andeq	r0, r0, r0
    67b0:	53000100 	movwpl	r0, #256	; 0x100
	...
    67bc:	28700002 	ldmdacs	r0!, {r1}^
	...
    67c8:	01f30005 	mvnseq	r0, r5
    67cc:	00282350 	eoreq	r2, r8, r0, asr r3
    67d0:	00000000 	andeq	r0, r0, r0
    67d4:	01000000 	mrseq	r0, (UNDEF: 0)
    67d8:	00005300 	andeq	r5, r0, r0, lsl #6
    67dc:	00000000 	andeq	r0, r0, r0
    67e0:	00020000 	andeq	r0, r2, r0
    67e4:	00002870 	andeq	r2, r0, r0, ror r8
    67e8:	00000000 	andeq	r0, r0, r0
    67ec:	00050000 	andeq	r0, r5, r0
    67f0:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    67f4:	00000028 	andeq	r0, r0, r8, lsr #32
    67f8:	00000000 	andeq	r0, r0, r0
    67fc:	53000100 	movwpl	r0, #256	; 0x100
	...
    6808:	28700002 	ldmdacs	r0!, {r1}^
	...
    6814:	01f30005 	mvnseq	r0, r5
    6818:	00282350 	eoreq	r2, r8, r0, asr r3
    681c:	00000000 	andeq	r0, r0, r0
    6820:	01000000 	mrseq	r0, (UNDEF: 0)
    6824:	00005300 	andeq	r5, r0, r0, lsl #6
    6828:	00000000 	andeq	r0, r0, r0
    682c:	00020000 	andeq	r0, r2, r0
    6830:	00002870 	andeq	r2, r0, r0, ror r8
    6834:	00000000 	andeq	r0, r0, r0
    6838:	00050000 	andeq	r0, r5, r0
    683c:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    6840:	00000028 	andeq	r0, r0, r8, lsr #32
    6844:	00000000 	andeq	r0, r0, r0
    6848:	70000200 	andvc	r0, r0, r0, lsl #4
    684c:	00000028 	andeq	r0, r0, r8, lsr #32
    6850:	00000000 	andeq	r0, r0, r0
    6854:	f3000500 	vrshl.u8	d0, d0, d0
    6858:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    6864:	28700002 	ldmdacs	r0!, {r1}^
	...
    6870:	01f30005 	mvnseq	r0, r5
    6874:	00282350 	eoreq	r2, r8, r0, asr r3
    6878:	00000000 	andeq	r0, r0, r0
    687c:	01000000 	mrseq	r0, (UNDEF: 0)
    6880:	00005300 	andeq	r5, r0, r0, lsl #6
    6884:	00000000 	andeq	r0, r0, r0
    6888:	00020000 	andeq	r0, r2, r0
    688c:	00002870 	andeq	r2, r0, r0, ror r8
    6890:	00000000 	andeq	r0, r0, r0
    6894:	00050000 	andeq	r0, r5, r0
    6898:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    689c:	00000028 	andeq	r0, r0, r8, lsr #32
    68a0:	00000000 	andeq	r0, r0, r0
    68a4:	70000200 	andvc	r0, r0, r0, lsl #4
    68a8:	00000028 	andeq	r0, r0, r8, lsr #32
    68ac:	00000000 	andeq	r0, r0, r0
    68b0:	f3000500 	vrshl.u8	d0, d0, d0
    68b4:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    68c0:	00530001 	subseq	r0, r3, r1
    68c4:	00000000 	andeq	r0, r0, r0
    68c8:	02000000 	andeq	r0, r0, #0
    68cc:	00287000 	eoreq	r7, r8, r0
    68d0:	00000000 	andeq	r0, r0, r0
    68d4:	05000000 	streq	r0, [r0, #-0]
    68d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    68dc:	00002823 	andeq	r2, r0, r3, lsr #16
	...
    68ec:	00020000 	andeq	r0, r2, r0
    68f0:	0000007d 	andeq	r0, r0, sp, ror r0
    68f4:	00000000 	andeq	r0, r0, r0
    68f8:	00020000 	andeq	r0, r2, r0
    68fc:	0000047d 	andeq	r0, r0, sp, ror r4
    6900:	00000000 	andeq	r0, r0, r0
    6904:	00020000 	andeq	r0, r2, r0
    6908:	0000007d 	andeq	r0, r0, sp, ror r0
    690c:	00000000 	andeq	r0, r0, r0
    6910:	00020000 	andeq	r0, r2, r0
    6914:	0000047d 	andeq	r0, r0, sp, ror r4
	...
    692c:	00500001 	subseq	r0, r0, r1
    6930:	00000000 	andeq	r0, r0, r0
    6934:	04000000 	streq	r0, [r0], #-0
    6938:	5001f300 	andpl	pc, r1, r0, lsl #6
    693c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6940:	00000000 	andeq	r0, r0, r0
    6944:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    695c:	00520001 	subseq	r0, r2, r1
    6960:	00000000 	andeq	r0, r0, r0
    6964:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    6968:	f7007100 			; <UNDEFINED> instruction: 0xf7007100
    696c:	f429f730 	vld1.8	{d15}, [r9 :256], r0
    6970:	aaab0829 	bge	feac8a1c <_estack+0xdeac77e4>
    6974:	0000aaaa 	andeq	sl, r0, sl, lsr #21
    6978:	081e0000 	ldmdaeq	lr, {}	; <UNPREDICTABLE>
    697c:	2529f720 	strcs	pc, [r9, #-1824]!	; 0xfffff8e0
    6980:	00f730f7 	ldrshteq	r3, [r7], #7
    6984:	009f2534 	addseq	r2, pc, r4, lsr r5	; <UNPREDICTABLE>
	...
    6994:	02000000 	andeq	r0, r0, #0
    6998:	00007d00 	andeq	r7, r0, r0, lsl #26
    699c:	00000000 	andeq	r0, r0, r0
    69a0:	02000000 	andeq	r0, r0, #0
    69a4:	00087d00 	andeq	r7, r8, r0, lsl #26
    69a8:	00000000 	andeq	r0, r0, r0
    69ac:	02000000 	andeq	r0, r0, #0
    69b0:	00007d00 	andeq	r7, r0, r0, lsl #26
    69b4:	00000000 	andeq	r0, r0, r0
    69b8:	02000000 	andeq	r0, r0, #0
    69bc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    69d8:	53000100 	movwpl	r0, #256	; 0x100
	...
    69e4:	04740002 	ldrbteq	r0, [r4], #-2
	...
    69f0:	01f30004 	mvnseq	r0, r4
    69f4:	00009f53 	andeq	r9, r0, r3, asr pc
    69f8:	00000000 	andeq	r0, r0, r0
    69fc:	00020000 	andeq	r0, r2, r0
    6a00:	00000474 	andeq	r0, r0, r4, ror r4
    6a04:	00000000 	andeq	r0, r0, r0
    6a08:	00040000 	andeq	r0, r4, r0
    6a0c:	9f5301f3 	svcls	0x005301f3
	...
    6a24:	00500001 	subseq	r0, r0, r1
    6a28:	00000000 	andeq	r0, r0, r0
    6a2c:	04000000 	streq	r0, [r0], #-0
    6a30:	5001f300 	andpl	pc, r1, r0, lsl #6
    6a34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6a48:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6a54:	01f30004 	mvnseq	r0, r4
    6a58:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    6a70:	00010000 	andeq	r0, r1, r0
    6a74:	00000050 	andeq	r0, r0, r0, asr r0
    6a78:	00000000 	andeq	r0, r0, r0
    6a7c:	53000100 	movwpl	r0, #256	; 0x100
	...
    6a88:	00500001 	subseq	r0, r0, r1
    6a8c:	00000000 	andeq	r0, r0, r0
    6a90:	01000000 	mrseq	r0, (UNDEF: 0)
    6a94:	00005300 	andeq	r5, r0, r0, lsl #6
    6a98:	00000000 	andeq	r0, r0, r0
    6a9c:	00010000 	andeq	r0, r1, r0
	...
    6aac:	9f300002 	svcls	0x00300002
	...
    6ab8:	00500001 	subseq	r0, r0, r1
    6abc:	00000000 	andeq	r0, r0, r0
    6ac0:	02000000 	andeq	r0, r0, #0
    6ac4:	009f3000 	addseq	r3, pc, r0
	...
    6ad8:	01000000 	mrseq	r0, (UNDEF: 0)
    6adc:	00005000 	andeq	r5, r0, r0
    6ae0:	00000000 	andeq	r0, r0, r0
    6ae4:	00010000 	andeq	r0, r1, r0
    6ae8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    6afc:	01000000 	mrseq	r0, (UNDEF: 0)
    6b00:	00005200 	andeq	r5, r0, r0, lsl #4
    6b04:	00000000 	andeq	r0, r0, r0
    6b08:	00040000 	andeq	r0, r4, r0
    6b0c:	9f5201f3 	svcls	0x005201f3
	...
    6b18:	00520001 	subseq	r0, r2, r1
    6b1c:	00000000 	andeq	r0, r0, r0
    6b20:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6b30:	30000200 	andcc	r0, r0, r0, lsl #4
    6b34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6b38:	00000000 	andeq	r0, r0, r0
    6b3c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6b48:	9f300002 	svcls	0x00300002
	...
    6b5c:	007d0002 	rsbseq	r0, sp, r2
	...
    6b68:	147d0002 	ldrbtne	r0, [sp], #-2
	...
    6b74:	207d0002 	rsbscs	r0, sp, r2
	...
    6b80:	147d0002 	ldrbtne	r0, [sp], #-2
	...
    6ba0:	00010000 	andeq	r0, r1, r0
    6ba4:	00000050 	andeq	r0, r0, r0, asr r0
    6ba8:	00000000 	andeq	r0, r0, r0
    6bac:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6bb8:	00500001 	subseq	r0, r0, r1
    6bbc:	00000000 	andeq	r0, r0, r0
    6bc0:	01000000 	mrseq	r0, (UNDEF: 0)
    6bc4:	00005400 	andeq	r5, r0, r0, lsl #8
    6bc8:	00000000 	andeq	r0, r0, r0
    6bcc:	00010000 	andeq	r0, r1, r0
    6bd0:	00000050 	andeq	r0, r0, r0, asr r0
    6bd4:	00000000 	andeq	r0, r0, r0
    6bd8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6be4:	01f30004 	mvnseq	r0, r4
    6be8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    6bfc:	00560001 	subseq	r0, r6, r1
	...
    6c10:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6c24:	00010000 	andeq	r0, r1, r0
    6c28:	00000057 	andeq	r0, r0, r7, asr r0
	...
    6c38:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6c44:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6c48:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    6c5c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6c68:	00540001 	subseq	r0, r4, r1
	...
    6c7c:	01000000 	mrseq	r0, (UNDEF: 0)
    6c80:	00005100 	andeq	r5, r0, r0, lsl #2
    6c84:	00000000 	andeq	r0, r0, r0
    6c88:	00040000 	andeq	r0, r4, r0
    6c8c:	9f5101f3 	svcls	0x005101f3
	...
    6ca4:	00520001 	subseq	r0, r2, r1
    6ca8:	00000000 	andeq	r0, r0, r0
    6cac:	01000000 	mrseq	r0, (UNDEF: 0)
    6cb0:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    6cc4:	00010000 	andeq	r0, r1, r0
    6cc8:	0000005a 	andeq	r0, r0, sl, asr r0
    6ccc:	00000000 	andeq	r0, r0, r0
    6cd0:	5a000100 	bpl	70d8 <_Min_Heap_Size+0x68d8>
	...
    6cdc:	01000000 	mrseq	r0, (UNDEF: 0)
    6ce0:	00000001 	andeq	r0, r0, r1
	...
    6cf0:	00010000 	andeq	r0, r1, r0
    6cf4:	00000050 	andeq	r0, r0, r0, asr r0
    6cf8:	00000000 	andeq	r0, r0, r0
    6cfc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6d08:	00590001 	subseq	r0, r9, r1
    6d0c:	00000000 	andeq	r0, r0, r0
    6d10:	01000000 	mrseq	r0, (UNDEF: 0)
    6d14:	00005000 	andeq	r5, r0, r0
    6d18:	00000000 	andeq	r0, r0, r0
    6d1c:	00010000 	andeq	r0, r1, r0
    6d20:	00000059 	andeq	r0, r0, r9, asr r0
    6d24:	00000000 	andeq	r0, r0, r0
    6d28:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6d34:	00590001 	subseq	r0, r9, r1
	...
    6d48:	01000000 	mrseq	r0, (UNDEF: 0)
    6d4c:	00005300 	andeq	r5, r0, r0, lsl #6
    6d50:	00000000 	andeq	r0, r0, r0
    6d54:	00010000 	andeq	r0, r1, r0
    6d58:	00000053 	andeq	r0, r0, r3, asr r0
	...
    6d6c:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    6d78:	00570001 	subseq	r0, r7, r1
	...
    6d88:	7c000000 	stcvc	0, cr0, [r0], {-0}
    6d8c:	8c080015 	stchi	0, cr0, [r8], {21}
    6d90:	01080015 	tsteq	r8, r5, lsl r0
    6d94:	158c5000 	strne	r5, [ip]
    6d98:	158e0800 	strne	r0, [lr, #2048]	; 0x800
    6d9c:	00040800 	andeq	r0, r4, r0, lsl #16
    6da0:	9f5001f3 	svcls	0x005001f3
    6da4:	0800158e 	stmdaeq	r0, {r1, r2, r3, r7, r8, sl, ip}
    6da8:	080015a0 	stmdaeq	r0, {r5, r7, r8, sl, ip}
    6dac:	a0500001 	subsge	r0, r0, r1
    6db0:	a2080015 	andge	r0, r8, #21
    6db4:	04080015 	streq	r0, [r8], #-21	; 0xffffffeb
    6db8:	5001f300 	andpl	pc, r1, r0, lsl #6
    6dbc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6dc0:	00000000 	andeq	r0, r0, r0
    6dc4:	0014e800 	andseq	lr, r4, r0, lsl #16
    6dc8:	0014ea08 	andseq	lr, r4, r8, lsl #20
    6dcc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    6dd0:	0014ea00 	andseq	lr, r4, r0, lsl #20
    6dd4:	00157c08 	andseq	r7, r5, r8, lsl #24
    6dd8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    6ddc:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    6de8:	0014e800 	andseq	lr, r4, r0, lsl #16
    6dec:	0014f108 	andseq	pc, r4, r8, lsl #2
    6df0:	50000108 	andpl	r0, r0, r8, lsl #2
    6df4:	080014f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, sl, ip}
    6df8:	0800157c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip}
    6dfc:	00540001 	subseq	r0, r4, r1
	...
    6e08:	0014ee00 	andseq	lr, r4, r0, lsl #28
    6e0c:	00157c08 	andseq	r7, r5, r8, lsl #24
    6e10:	56000108 	strpl	r0, [r0], -r8, lsl #2
	...
    6e1c:	01000000 	mrseq	r0, (UNDEF: 0)
    6e20:	00000001 	andeq	r0, r0, r1
    6e24:	14f20000 	ldrbtne	r0, [r2], #0
    6e28:	15080800 	strne	r0, [r8, #-2048]	; 0xfffff800
    6e2c:	00010800 	andeq	r0, r1, r0, lsl #16
    6e30:	00150a50 	andseq	r0, r5, r0, asr sl
    6e34:	00153808 	andseq	r3, r5, r8, lsl #16
    6e38:	50000108 	andpl	r0, r0, r8, lsl #2
    6e3c:	08001538 	stmdaeq	r0, {r3, r4, r5, r8, sl, ip}
    6e40:	0800155e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, sl, ip}
    6e44:	5e550001 	cdppl	0, 5, cr0, cr5, cr1, {0}
    6e48:	66080015 			; <UNDEFINED> instruction: 0x66080015
    6e4c:	01080015 	tsteq	r8, r5, lsl r0
    6e50:	15665000 	strbne	r5, [r6, #-0]!
    6e54:	157c0800 	ldrbne	r0, [ip, #-2048]!	; 0xfffff800
    6e58:	00010800 	andeq	r0, r1, r0, lsl #16
    6e5c:	00000055 	andeq	r0, r0, r5, asr r0
	...
    6e6c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6e78:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6e7c:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    6e94:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6ea0:	00540001 	subseq	r0, r4, r1
    6ea4:	00000000 	andeq	r0, r0, r0
    6ea8:	01000000 	mrseq	r0, (UNDEF: 0)
    6eac:	00005000 	andeq	r5, r0, r0
    6eb0:	00000000 	andeq	r0, r0, r0
    6eb4:	00010000 	andeq	r0, r1, r0
    6eb8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    6ed0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    6edc:	00560001 	subseq	r0, r6, r1
    6ee0:	00000000 	andeq	r0, r0, r0
    6ee4:	01000000 	mrseq	r0, (UNDEF: 0)
    6ee8:	00005100 	andeq	r5, r0, r0, lsl #2
    6eec:	00000000 	andeq	r0, r0, r0
    6ef0:	00010000 	andeq	r0, r1, r0
    6ef4:	00000056 	andeq	r0, r0, r6, asr r0
	...
    6f08:	52000100 	andpl	r0, r0, #0, 2
	...
    6f14:	00570001 	subseq	r0, r7, r1
	...
    6f28:	01000000 	mrseq	r0, (UNDEF: 0)
    6f2c:	00005300 	andeq	r5, r0, r0, lsl #6
    6f30:	00000000 	andeq	r0, r0, r0
    6f34:	00010000 	andeq	r0, r1, r0
    6f38:	00000055 	andeq	r0, r0, r5, asr r0
    6f3c:	00000000 	andeq	r0, r0, r0
    6f40:	02020100 	andeq	r0, r2, #0, 2
	...
    6f4c:	02000000 	andeq	r0, r0, #0
    6f50:	009f3000 	addseq	r3, pc, r0
    6f54:	00000000 	andeq	r0, r0, r0
    6f58:	02000000 	andeq	r0, r0, #0
    6f5c:	009f3200 	addseq	r3, pc, r0, lsl #4
    6f60:	00000000 	andeq	r0, r0, r0
    6f64:	02000000 	andeq	r0, r0, #0
    6f68:	009f3000 	addseq	r3, pc, r0
	...
    6f7c:	58000100 	stmdapl	r0, {r8}
	...
    6f90:	007d0002 	rsbseq	r0, sp, r2
	...
    6f9c:	187d0002 	ldmdane	sp!, {r1}^
	...
    6fb8:	00500001 	subseq	r0, r0, r1
    6fbc:	00000000 	andeq	r0, r0, r0
    6fc0:	01000000 	mrseq	r0, (UNDEF: 0)
    6fc4:	00005400 	andeq	r5, r0, r0, lsl #8
    6fc8:	00000000 	andeq	r0, r0, r0
    6fcc:	00010000 	andeq	r0, r1, r0
    6fd0:	00000050 	andeq	r0, r0, r0, asr r0
    6fd4:	00000000 	andeq	r0, r0, r0
    6fd8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6ff4:	00510001 	subseq	r0, r1, r1
    6ff8:	00000000 	andeq	r0, r0, r0
    6ffc:	01000000 	mrseq	r0, (UNDEF: 0)
    7000:	00005600 	andeq	r5, r0, r0, lsl #12
    7004:	00000000 	andeq	r0, r0, r0
    7008:	00010000 	andeq	r0, r1, r0
    700c:	00000051 	andeq	r0, r0, r1, asr r0
    7010:	00000000 	andeq	r0, r0, r0
    7014:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    702c:	00520001 	subseq	r0, r2, r1
    7030:	00000000 	andeq	r0, r0, r0
    7034:	01000000 	mrseq	r0, (UNDEF: 0)
    7038:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    704c:	00010000 	andeq	r0, r1, r0
    7050:	00000053 	andeq	r0, r0, r3, asr r0
    7054:	00000000 	andeq	r0, r0, r0
    7058:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    7064:	00020201 	andeq	r0, r2, r1, lsl #4
	...
    7070:	00020000 	andeq	r0, r2, r0
    7074:	00009f30 	andeq	r9, r0, r0, lsr pc
    7078:	00000000 	andeq	r0, r0, r0
    707c:	00020000 	andeq	r0, r2, r0
    7080:	00009f32 	andeq	r9, r0, r2, lsr pc
    7084:	00000000 	andeq	r0, r0, r0
    7088:	00020000 	andeq	r0, r2, r0
    708c:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    709c:	00020000 	andeq	r0, r2, r0
    70a0:	0000007d 	andeq	r0, r0, sp, ror r0
    70a4:	00000000 	andeq	r0, r0, r0
    70a8:	00020000 	andeq	r0, r2, r0
    70ac:	0000107d 	andeq	r1, r0, sp, ror r0
    70b0:	00000000 	andeq	r0, r0, r0
    70b4:	00020000 	andeq	r0, r2, r0
    70b8:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    70d0:	00010000 	andeq	r0, r1, r0
    70d4:	00000050 	andeq	r0, r0, r0, asr r0
    70d8:	00000000 	andeq	r0, r0, r0
    70dc:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    70e8:	00500001 	subseq	r0, r0, r1
    70ec:	00000000 	andeq	r0, r0, r0
    70f0:	04000000 	streq	r0, [r0], #-0
    70f4:	5001f300 	andpl	pc, r1, r0, lsl #6
    70f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    7108:	01000000 	mrseq	r0, (UNDEF: 0)
    710c:	00005000 	andeq	r5, r0, r0
	...
    711c:	00020000 	andeq	r0, r2, r0
    7120:	0000007d 	andeq	r0, r0, sp, ror r0
    7124:	00000000 	andeq	r0, r0, r0
    7128:	00020000 	andeq	r0, r2, r0
    712c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    7140:	00010000 	andeq	r0, r1, r0
    7144:	00000050 	andeq	r0, r0, r0, asr r0
    7148:	00000000 	andeq	r0, r0, r0
    714c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7158:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    7170:	00020000 	andeq	r0, r2, r0
    7174:	00009f30 	andeq	r9, r0, r0, lsr pc
    7178:	00000000 	andeq	r0, r0, r0
    717c:	00020000 	andeq	r0, r2, r0
    7180:	00009f30 	andeq	r9, r0, r0, lsr pc
    7184:	00000000 	andeq	r0, r0, r0
    7188:	00010000 	andeq	r0, r1, r0
    718c:	00000052 	andeq	r0, r0, r2, asr r0
    7190:	00000000 	andeq	r0, r0, r0
    7194:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    71a0:	00520001 	subseq	r0, r2, r1
    71a4:	00000000 	andeq	r0, r0, r0
    71a8:	01000000 	mrseq	r0, (UNDEF: 0)
    71ac:	00005500 	andeq	r5, r0, r0, lsl #10
    71b0:	00000000 	andeq	r0, r0, r0
    71b4:	00010000 	andeq	r0, r1, r0
    71b8:	00000052 	andeq	r0, r0, r2, asr r0
    71bc:	00000000 	andeq	r0, r0, r0
    71c0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    71cc:	9f300002 	svcls	0x00300002
	...
    71d8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    71e8:	00010000 	andeq	r0, r1, r0
    71ec:	00000050 	andeq	r0, r0, r0, asr r0
    71f0:	00000000 	andeq	r0, r0, r0
    71f4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    7200:	00550001 	subseq	r0, r5, r1
    7204:	00000000 	andeq	r0, r0, r0
    7208:	01000000 	mrseq	r0, (UNDEF: 0)
    720c:	00005500 	andeq	r5, r0, r0, lsl #10
    7210:	00000000 	andeq	r0, r0, r0
    7214:	00010000 	andeq	r0, r1, r0
    7218:	00000050 	andeq	r0, r0, r0, asr r0
	...
    7228:	01000000 	mrseq	r0, (UNDEF: 0)
    722c:	00005000 	andeq	r5, r0, r0
	...
    723c:	00020000 	andeq	r0, r2, r0
    7240:	0000007d 	andeq	r0, r0, sp, ror r0
    7244:	00000000 	andeq	r0, r0, r0
    7248:	00020000 	andeq	r0, r2, r0
    724c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    725c:	00020000 	andeq	r0, r2, r0
    7260:	0000007d 	andeq	r0, r0, sp, ror r0
    7264:	00000000 	andeq	r0, r0, r0
    7268:	00020000 	andeq	r0, r2, r0
    726c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7284:	00010000 	andeq	r0, r1, r0
    7288:	00000050 	andeq	r0, r0, r0, asr r0
    728c:	00000000 	andeq	r0, r0, r0
    7290:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    729c:	00500001 	subseq	r0, r0, r1
    72a0:	00000000 	andeq	r0, r0, r0
    72a4:	01000000 	mrseq	r0, (UNDEF: 0)
    72a8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    72b8:	00020000 	andeq	r0, r2, r0
    72bc:	0000007d 	andeq	r0, r0, sp, ror r0
    72c0:	00000000 	andeq	r0, r0, r0
    72c4:	00020000 	andeq	r0, r2, r0
    72c8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    72e0:	00010000 	andeq	r0, r1, r0
    72e4:	00000050 	andeq	r0, r0, r0, asr r0
    72e8:	00000000 	andeq	r0, r0, r0
    72ec:	f3000400 	vshl.u8	d0, d0, d0
    72f0:	009f5001 	addseq	r5, pc, r1
    72f4:	00000000 	andeq	r0, r0, r0
    72f8:	01000000 	mrseq	r0, (UNDEF: 0)
    72fc:	00005000 	andeq	r5, r0, r0
    7300:	00000000 	andeq	r0, r0, r0
    7304:	00040000 	andeq	r0, r4, r0
    7308:	9f5001f3 	svcls	0x005001f3
	...
    7314:	00000001 	andeq	r0, r0, r1
	...
    7320:	00540001 	subseq	r0, r4, r1
    7324:	00000000 	andeq	r0, r0, r0
    7328:	01000000 	mrseq	r0, (UNDEF: 0)
    732c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    733c:	00020000 	andeq	r0, r2, r0
    7340:	0000007d 	andeq	r0, r0, sp, ror r0
    7344:	00000000 	andeq	r0, r0, r0
    7348:	00020000 	andeq	r0, r2, r0
    734c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7364:	00010000 	andeq	r0, r1, r0
    7368:	00000050 	andeq	r0, r0, r0, asr r0
    736c:	00000000 	andeq	r0, r0, r0
    7370:	f3000400 	vshl.u8	d0, d0, d0
    7374:	009f5001 	addseq	r5, pc, r1
    7378:	00000000 	andeq	r0, r0, r0
    737c:	01000000 	mrseq	r0, (UNDEF: 0)
    7380:	00005000 	andeq	r5, r0, r0
    7384:	00000000 	andeq	r0, r0, r0
    7388:	00040000 	andeq	r0, r4, r0
    738c:	9f5001f3 	svcls	0x005001f3
	...
    7398:	00000001 	andeq	r0, r0, r1
    739c:	00000000 	andeq	r0, r0, r0
    73a0:	00010000 	andeq	r0, r1, r0
    73a4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    73b4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    73c0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    73c4:	00000008 	andeq	r0, r0, r8
	...
    73dc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    73e8:	01f30004 	mvnseq	r0, r4
    73ec:	00009f50 	andeq	r9, r0, r0, asr pc
    73f0:	00000000 	andeq	r0, r0, r0
    73f4:	00010000 	andeq	r0, r1, r0
    73f8:	00000050 	andeq	r0, r0, r0, asr r0
    73fc:	00000000 	andeq	r0, r0, r0
    7400:	f3000400 	vshl.u8	d0, d0, d0
    7404:	009f5001 	addseq	r5, pc, r1
    7408:	00000000 	andeq	r0, r0, r0
    740c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7418:	01000000 	mrseq	r0, (UNDEF: 0)
    741c:	00005400 	andeq	r5, r0, r0, lsl #8
    7420:	00000000 	andeq	r0, r0, r0
    7424:	00010000 	andeq	r0, r1, r0
    7428:	00000054 	andeq	r0, r0, r4, asr r0
	...
    7438:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7444:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7448:	00000008 	andeq	r0, r0, r8
	...
    7460:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    746c:	01f30004 	mvnseq	r0, r4
    7470:	00009f50 	andeq	r9, r0, r0, asr pc
    7474:	00000000 	andeq	r0, r0, r0
    7478:	00010000 	andeq	r0, r1, r0
    747c:	00000050 	andeq	r0, r0, r0, asr r0
    7480:	00000000 	andeq	r0, r0, r0
    7484:	f3000400 	vshl.u8	d0, d0, d0
    7488:	009f5001 	addseq	r5, pc, r1
    748c:	00000000 	andeq	r0, r0, r0
    7490:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    749c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    74b0:	007d0002 	rsbseq	r0, sp, r2
	...
    74bc:	187d0002 	ldmdane	sp!, {r1}^
	...
    74d8:	00500001 	subseq	r0, r0, r1
    74dc:	00000000 	andeq	r0, r0, r0
    74e0:	04000000 	streq	r0, [r0], #-0
    74e4:	5001f300 	andpl	pc, r1, r0, lsl #6
    74e8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    74ec:	00000000 	andeq	r0, r0, r0
    74f0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    74fc:	01f30004 	mvnseq	r0, r4
    7500:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    751c:	00510001 	subseq	r0, r1, r1
    7520:	00000000 	andeq	r0, r0, r0
    7524:	01000000 	mrseq	r0, (UNDEF: 0)
    7528:	00005400 	andeq	r5, r0, r0, lsl #8
    752c:	00000000 	andeq	r0, r0, r0
    7530:	00040000 	andeq	r0, r4, r0
    7534:	9f5101f3 	svcls	0x005101f3
	...
    7540:	00510001 	subseq	r0, r1, r1
    7544:	00000000 	andeq	r0, r0, r0
    7548:	01000000 	mrseq	r0, (UNDEF: 0)
    754c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    7564:	00010000 	andeq	r0, r1, r0
    7568:	00000052 	andeq	r0, r0, r2, asr r0
    756c:	00000000 	andeq	r0, r0, r0
    7570:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    757c:	00520001 	subseq	r0, r2, r1
    7580:	00000000 	andeq	r0, r0, r0
    7584:	01000000 	mrseq	r0, (UNDEF: 0)
    7588:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    759c:	00010000 	andeq	r0, r1, r0
    75a0:	00000053 	andeq	r0, r0, r3, asr r0
    75a4:	00000000 	andeq	r0, r0, r0
    75a8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    75b4:	00000001 	andeq	r0, r0, r1
	...
    75c0:	00550001 	subseq	r0, r5, r1
    75c4:	00000000 	andeq	r0, r0, r0
    75c8:	01000000 	mrseq	r0, (UNDEF: 0)
    75cc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    75e0:	00010000 	andeq	r0, r1, r0
    75e4:	00000056 	andeq	r0, r0, r6, asr r0
    75e8:	00000000 	andeq	r0, r0, r0
    75ec:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    7604:	00570001 	subseq	r0, r7, r1
    7608:	00000000 	andeq	r0, r0, r0
    760c:	01000000 	mrseq	r0, (UNDEF: 0)
    7610:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    7628:	00540001 	subseq	r0, r4, r1
    762c:	00000000 	andeq	r0, r0, r0
    7630:	04000000 	streq	r0, [r0], #-0
    7634:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7638:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    763c:	00000000 	andeq	r0, r0, r0
    7640:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7658:	00530001 	subseq	r0, r3, r1
    765c:	00000000 	andeq	r0, r0, r0
    7660:	01000000 	mrseq	r0, (UNDEF: 0)
    7664:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7680:	00510001 	subseq	r0, r1, r1
    7684:	00000000 	andeq	r0, r0, r0
    7688:	03000000 	movweq	r0, #0
    768c:	9f7c7000 	svcls	0x007c7000
	...
    7698:	01f30006 	mvnseq	r0, r6
    769c:	9f1a3751 	svcls	0x001a3751
	...
    76a8:	00510001 	subseq	r0, r1, r1
    76ac:	00000000 	andeq	r0, r0, r0
    76b0:	03000000 	movweq	r0, #0
    76b4:	9f7c7000 	svcls	0x007c7000
	...
    76cc:	00010000 	andeq	r0, r1, r0
    76d0:	00000052 	andeq	r0, r0, r2, asr r0
    76d4:	00000000 	andeq	r0, r0, r0
    76d8:	34001d00 	strcc	r1, [r0], #-3328	; 0xfffff300
    76dc:	205101f3 	ldrshcs	r0, [r1], #-19	; 0xffffffed
    76e0:	01f31a37 	mvnseq	r1, r7, lsr sl
    76e4:	1a372051 	bne	dcf830 <_Min_Heap_Size+0xdcf030>
    76e8:	22244b40 	eorcs	r4, r4, #64, 22	; 0x10000
    76ec:	0000040c 	andeq	r0, r0, ip, lsl #8
    76f0:	01282a80 	smlawbeq	r8, r0, sl, r2
    76f4:	9f131600 	svcls	0x00131600
	...
    7700:	00520001 	subseq	r0, r2, r1
	...
    7714:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7728:	007d0002 	rsbseq	r0, sp, r2
	...
    7734:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7750:	00500001 	subseq	r0, r0, r1
    7754:	00000000 	andeq	r0, r0, r0
    7758:	01000000 	mrseq	r0, (UNDEF: 0)
    775c:	00005400 	andeq	r5, r0, r0, lsl #8
    7760:	00000000 	andeq	r0, r0, r0
    7764:	00010000 	andeq	r0, r1, r0
    7768:	00000050 	andeq	r0, r0, r0, asr r0
    776c:	00000000 	andeq	r0, r0, r0
    7770:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    7788:	00500001 	subseq	r0, r0, r1
    778c:	00000000 	andeq	r0, r0, r0
    7790:	04000000 	streq	r0, [r0], #-0
    7794:	5001f300 	andpl	pc, r1, r0, lsl #6
    7798:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    77a4:	9c000000 	stcls	0, cr0, [r0], {-0}
    77a8:	9e080016 	mcrls	0, 0, r0, cr8, cr6, {0}
    77ac:	01080016 	tsteq	r8, r6, lsl r0
    77b0:	169e5000 	ldrne	r5, [lr], r0
    77b4:	16b40800 	ldrtne	r0, [r4], r0, lsl #16
    77b8:	00030800 	andeq	r0, r3, r0, lsl #16
    77bc:	b49f0170 	ldrlt	r0, [pc], #368	; 77c4 <_Min_Heap_Size+0x6fc4>
    77c0:	c4080016 	strgt	r0, [r8], #-22	; 0xffffffea
    77c4:	04080016 	streq	r0, [r8], #-22	; 0xffffffea
    77c8:	5001f300 	andpl	pc, r1, r0, lsl #6
    77cc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    77d0:	00000000 	andeq	r0, r0, r0
    77d4:	00000200 	andeq	r0, r0, r0, lsl #4
    77d8:	9c000000 	stcls	0, cr0, [r0], {-0}
    77dc:	9e080016 	mcrls	0, 0, r0, cr8, cr6, {0}
    77e0:	01080016 	tsteq	r8, r6, lsl r0
    77e4:	169e5000 	ldrne	r5, [lr], r0
    77e8:	16b40800 	ldrtne	r0, [r4], r0, lsl #16
    77ec:	00030800 	andeq	r0, r3, r0, lsl #16
    77f0:	b49f0170 	ldrlt	r0, [pc], #368	; 77f8 <_Min_Heap_Size+0x6ff8>
    77f4:	be080016 	mcrlt	0, 0, r0, cr8, cr6, {0}
    77f8:	04080016 	streq	r0, [r8], #-22	; 0xffffffea
    77fc:	5001f300 	andpl	pc, r1, r0, lsl #6
    7800:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7804:	00000000 	andeq	r0, r0, r0
    7808:	aa000100 	bge	7c10 <_Min_Heap_Size+0x7410>
    780c:	b2080016 	andlt	r0, r8, #22
    7810:	02080016 	andeq	r0, r8, #22
    7814:	009f3f00 	addseq	r3, pc, r0, lsl #30
    7818:	00000000 	andeq	r0, r0, r0
    781c:	01000000 	mrseq	r0, (UNDEF: 0)
    7820:	0016aa00 	andseq	sl, r6, r0, lsl #20
    7824:	0016b208 	andseq	fp, r6, r8, lsl #4
    7828:	09000308 	stmdbeq	r0, {r3, r8, r9}
    782c:	00009fff 	strdeq	r9, [r0], -pc	; <UNPREDICTABLE>
	...
    783c:	00020000 	andeq	r0, r2, r0
    7840:	0000007d 	andeq	r0, r0, sp, ror r0
    7844:	00000000 	andeq	r0, r0, r0
    7848:	00020000 	andeq	r0, r2, r0
    784c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7864:	00010000 	andeq	r0, r1, r0
    7868:	00000050 	andeq	r0, r0, r0, asr r0
    786c:	00000000 	andeq	r0, r0, r0
    7870:	f3000400 	vshl.u8	d0, d0, d0
    7874:	009f5001 	addseq	r5, pc, r1
    7878:	00000000 	andeq	r0, r0, r0
    787c:	01000000 	mrseq	r0, (UNDEF: 0)
    7880:	00005000 	andeq	r5, r0, r0
    7884:	00000000 	andeq	r0, r0, r0
    7888:	00040000 	andeq	r0, r4, r0
    788c:	9f5001f3 	svcls	0x005001f3
	...
    7898:	00000001 	andeq	r0, r0, r1
    789c:	00000000 	andeq	r0, r0, r0
    78a0:	00010000 	andeq	r0, r1, r0
    78a4:	00000054 	andeq	r0, r0, r4, asr r0
    78a8:	00000000 	andeq	r0, r0, r0
    78ac:	00166c00 	andseq	r6, r6, r0, lsl #24
    78b0:	00166e08 	andseq	r6, r6, r8, lsl #28
    78b4:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    78b8:	00166e00 	andseq	r6, r6, r0, lsl #28
    78bc:	00169c08 	andseq	r9, r6, r8, lsl #24
    78c0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    78c4:	00000008 	andeq	r0, r0, r8
	...
    78d4:	00166c00 	andseq	r6, r6, r0, lsl #24
    78d8:	00167208 	andseq	r7, r6, r8, lsl #4
    78dc:	50000108 	andpl	r0, r0, r8, lsl #2
    78e0:	08001672 	stmdaeq	r0, {r1, r4, r5, r6, r9, sl, ip}
    78e4:	08001688 	stmdaeq	r0, {r3, r7, r9, sl, ip}
    78e8:	01f30004 	mvnseq	r0, r4
    78ec:	16889f50 	pkhtbne	r9, r8, r0, asr #30
    78f0:	168c0800 	strne	r0, [ip], r0, lsl #16
    78f4:	00010800 	andeq	r0, r1, r0, lsl #16
    78f8:	00168c50 	andseq	r8, r6, r0, asr ip
    78fc:	00169c08 	andseq	r9, r6, r8, lsl #24
    7900:	f3000408 	vshl.u8	d0, d8, d0
    7904:	009f5001 	addseq	r5, pc, r1
    7908:	00000000 	andeq	r0, r0, r0
    790c:	01000000 	mrseq	r0, (UNDEF: 0)
    7910:	00167200 	andseq	r7, r6, r0, lsl #4
    7914:	00167c08 	andseq	r7, r6, r8, lsl #24
    7918:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    7924:	080015e0 	stmdaeq	r0, {r5, r6, r7, r8, sl, ip}
    7928:	080015e2 	stmdaeq	r0, {r1, r5, r6, r7, r8, sl, ip}
    792c:	007d0002 	rsbseq	r0, sp, r2
    7930:	080015e2 	stmdaeq	r0, {r1, r5, r6, r7, r8, sl, ip}
    7934:	0800166c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl, ip}
    7938:	107d0002 	rsbsne	r0, sp, r2
	...
    794c:	080015e0 	stmdaeq	r0, {r5, r6, r7, r8, sl, ip}
    7950:	080015ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl, ip}
    7954:	ec500001 	mrrc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    7958:	38080015 	stmdacc	r8, {r0, r2, r4}
    795c:	04080016 	streq	r0, [r8], #-22	; 0xffffffea
    7960:	5001f300 	andpl	pc, r1, r0, lsl #6
    7964:	0016389f 	mulseq	r6, pc, r8	; <UNPREDICTABLE>
    7968:	00163c08 	andseq	r3, r6, r8, lsl #24
    796c:	50000108 	andpl	r0, r0, r8, lsl #2
    7970:	0800163c 	stmdaeq	r0, {r2, r3, r4, r5, r9, sl, ip}
    7974:	0800166c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl, ip}
    7978:	01f30004 	mvnseq	r0, r4
    797c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7990:	15e00000 	strbne	r0, [r0, #0]!
    7994:	15ec0800 	strbne	r0, [ip, #2048]!	; 0x800
    7998:	00010800 	andeq	r0, r1, r0, lsl #16
    799c:	0015ec51 	andseq	lr, r5, r1, asr ip
    79a0:	00161608 	andseq	r1, r6, r8, lsl #12
    79a4:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    79a8:	08001616 	stmdaeq	r0, {r1, r2, r4, r9, sl, ip}
    79ac:	08001638 	stmdaeq	r0, {r3, r4, r5, r9, sl, ip}
    79b0:	01f30004 	mvnseq	r0, r4
    79b4:	16389f51 	shsaxne	r9, r8, r1
    79b8:	163a0800 	ldrtne	r0, [sl], -r0, lsl #16
    79bc:	00010800 	andeq	r0, r1, r0, lsl #16
    79c0:	00163a51 	andseq	r3, r6, r1, asr sl
    79c4:	00165008 	andseq	r5, r6, r8
    79c8:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    79cc:	08001650 	stmdaeq	r0, {r4, r6, r9, sl, ip}
    79d0:	0800166c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl, ip}
    79d4:	01f30004 	mvnseq	r0, r4
    79d8:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    79ec:	15e00000 	strbne	r0, [r0, #0]!
    79f0:	15ec0800 	strbne	r0, [ip, #2048]!	; 0x800
    79f4:	00010800 	andeq	r0, r1, r0, lsl #16
    79f8:	0015ec52 	andseq	lr, r5, r2, asr ip
    79fc:	00162008 	andseq	r2, r6, r8
    7a00:	56000108 	strpl	r0, [r0], -r8, lsl #2
    7a04:	08001620 	stmdaeq	r0, {r5, r9, sl, ip}
    7a08:	08001638 	stmdaeq	r0, {r3, r4, r5, r9, sl, ip}
    7a0c:	01f30004 	mvnseq	r0, r4
    7a10:	16389f52 	shsaxne	r9, r8, r2
    7a14:	163f0800 	ldrtne	r0, [pc], -r0, lsl #16
    7a18:	00010800 	andeq	r0, r1, r0, lsl #16
    7a1c:	00163f52 	andseq	r3, r6, r2, asr pc
    7a20:	00165008 	andseq	r5, r6, r8
    7a24:	56000108 	strpl	r0, [r0], -r8, lsl #2
    7a28:	08001650 	stmdaeq	r0, {r4, r6, r9, sl, ip}
    7a2c:	0800166c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl, ip}
    7a30:	01f30004 	mvnseq	r0, r4
    7a34:	00009f52 	andeq	r9, r0, r2, asr pc
    7a38:	00000000 	andeq	r0, r0, r0
    7a3c:	00010000 	andeq	r0, r1, r0
	...
    7a48:	15e80000 	strbne	r0, [r8, #0]!
    7a4c:	15f80800 	ldrbne	r0, [r8, #2048]!	; 0x800
    7a50:	00020800 	andeq	r0, r2, r0, lsl #16
    7a54:	15f89f30 	ldrbne	r9, [r8, #3888]!	; 0xf30
    7a58:	160a0800 	strne	r0, [sl], -r0, lsl #16
    7a5c:	00010800 	andeq	r0, r1, r0, lsl #16
    7a60:	00160a53 	andseq	r0, r6, r3, asr sl
    7a64:	00160e08 	andseq	r0, r6, r8, lsl #28
    7a68:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    7a6c:	16389f7c 	shsub16ne	r9, r8, ip
    7a70:	164c0800 	strbne	r0, [ip], -r0, lsl #16
    7a74:	00020800 	andeq	r0, r2, r0, lsl #16
    7a78:	164c9f30 			; <UNDEFINED> instruction: 0x164c9f30
    7a7c:	164e0800 	strbne	r0, [lr], -r0, lsl #16
    7a80:	00010800 	andeq	r0, r1, r0, lsl #16
    7a84:	00164e53 	andseq	r4, r6, r3, asr lr
    7a88:	00165008 	andseq	r5, r6, r8
    7a8c:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    7a90:	00009f7c 	andeq	r9, r0, ip, ror pc
    7a94:	00000000 	andeq	r0, r0, r0
    7a98:	00020000 	andeq	r0, r2, r0
    7a9c:	00000000 	andeq	r0, r0, r0
    7aa0:	080015f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl, ip}
    7aa4:	08001620 	stmdaeq	r0, {r5, r9, sl, ip}
    7aa8:	20560001 	subscs	r0, r6, r1
    7aac:	22080016 	andcs	r0, r8, #22
    7ab0:	04080016 	streq	r0, [r8], #-22	; 0xffffffea
    7ab4:	5201f300 	andpl	pc, r1, #0, 6
    7ab8:	00164c9f 	mulseq	r6, pc, ip	; <UNPREDICTABLE>
    7abc:	00165008 	andseq	r5, r6, r8
    7ac0:	56000108 	strpl	r0, [r0], -r8, lsl #2
	...
    7acc:	00000002 	andeq	r0, r0, r2
    7ad0:	15f80000 	ldrbne	r0, [r8, #0]!
    7ad4:	16160800 	ldrne	r0, [r6], -r0, lsl #16
    7ad8:	00010800 	andeq	r0, r1, r0, lsl #16
    7adc:	00161654 	andseq	r1, r6, r4, asr r6
    7ae0:	00162208 	andseq	r2, r6, r8, lsl #4
    7ae4:	f3000408 	vshl.u8	d0, d8, d0
    7ae8:	4c9f5101 	ldfmis	f5, [pc], {1}
    7aec:	50080016 	andpl	r0, r8, r6, lsl r0
    7af0:	01080016 	tsteq	r8, r6, lsl r0
    7af4:	00005400 	andeq	r5, r0, r0, lsl #8
    7af8:	00000000 	andeq	r0, r0, r0
    7afc:	00020000 	andeq	r0, r2, r0
    7b00:	00000000 	andeq	r0, r0, r0
    7b04:	15f80000 	ldrbne	r0, [r8, #0]!
    7b08:	160a0800 	strne	r0, [sl], -r0, lsl #16
    7b0c:	00010800 	andeq	r0, r1, r0, lsl #16
    7b10:	00160a53 	andseq	r0, r6, r3, asr sl
    7b14:	00160e08 	andseq	r0, r6, r8, lsl #28
    7b18:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    7b1c:	164c9f7c 			; <UNDEFINED> instruction: 0x164c9f7c
    7b20:	164e0800 	strbne	r0, [lr], -r0, lsl #16
    7b24:	00010800 	andeq	r0, r1, r0, lsl #16
    7b28:	00164e53 	andseq	r4, r6, r3, asr lr
    7b2c:	00165008 	andseq	r5, r6, r8
    7b30:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    7b34:	00009f7c 	andeq	r9, r0, ip, ror pc
    7b38:	00000000 	andeq	r0, r0, r0
    7b3c:	00040000 	andeq	r0, r4, r0
    7b40:	00000000 	andeq	r0, r0, r0
    7b44:	15f80000 	ldrbne	r0, [r8, #0]!
    7b48:	160a0800 	strne	r0, [sl], -r0, lsl #16
    7b4c:	00010800 	andeq	r0, r1, r0, lsl #16
    7b50:	00160a53 	andseq	r0, r6, r3, asr sl
    7b54:	00160e08 	andseq	r0, r6, r8, lsl #28
    7b58:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    7b5c:	164c9f7c 			; <UNDEFINED> instruction: 0x164c9f7c
    7b60:	164e0800 	strbne	r0, [lr], -r0, lsl #16
    7b64:	00010800 	andeq	r0, r1, r0, lsl #16
    7b68:	00164e53 	andseq	r4, r6, r3, asr lr
    7b6c:	00165008 	andseq	r5, r6, r8
    7b70:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    7b74:	00009f7c 	andeq	r9, r0, ip, ror pc
	...
    7b80:	16020000 	strne	r0, [r2], -r0
    7b84:	16120800 	ldrne	r0, [r2], -r0, lsl #16
    7b88:	00010800 	andeq	r0, r1, r0, lsl #16
    7b8c:	00164c51 	andseq	r4, r6, r1, asr ip
    7b90:	00165008 	andseq	r5, r6, r8
    7b94:	51000108 	tstpl	r0, r8, lsl #2
	...
    7ba0:	160a0000 	strne	r0, [sl], -r0
    7ba4:	161c0800 	ldrne	r0, [ip], -r0, lsl #16
    7ba8:	00010800 	andeq	r0, r1, r0, lsl #16
    7bac:	00000053 	andeq	r0, r0, r3, asr r0
	...
    7bb8:	00162200 	andseq	r2, r6, r0, lsl #4
    7bbc:	00162808 	andseq	r2, r6, r8, lsl #16
    7bc0:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    7bc4:	08001650 	stmdaeq	r0, {r4, r6, r9, sl, ip}
    7bc8:	08001656 	stmdaeq	r0, {r1, r2, r4, r6, r9, sl, ip}
    7bcc:	00540001 	subseq	r0, r4, r1
	...
    7bd8:	22000000 	andcs	r0, r0, #0
    7bdc:	2e080016 	mcrcs	0, 0, r0, cr8, cr6, {0}
    7be0:	01080016 	tsteq	r8, r6, lsl r0
    7be4:	16505500 	ldrbne	r5, [r0], -r0, lsl #10
    7be8:	16540800 	ldrbne	r0, [r4], -r0, lsl #16
    7bec:	00010800 	andeq	r0, r1, r0, lsl #16
    7bf0:	00000055 	andeq	r0, r0, r5, asr r0
    7bf4:	00000000 	andeq	r0, r0, r0
    7bf8:	0015a400 	andseq	sl, r5, r0, lsl #8
    7bfc:	0015a608 	andseq	sl, r5, r8, lsl #12
    7c00:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7c04:	0015a600 	andseq	sl, r5, r0, lsl #12
    7c08:	0015e008 	andseq	lr, r5, r8
    7c0c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7c10:	00000008 	andeq	r0, r0, r8
	...
    7c20:	a4000000 	strge	r0, [r0], #-0
    7c24:	ae080015 	mcrge	0, 0, r0, cr8, cr5, {0}
    7c28:	01080015 	tsteq	r8, r5, lsl r0
    7c2c:	15ae5000 	strne	r5, [lr, #0]!
    7c30:	15bc0800 	ldrne	r0, [ip, #2048]!	; 0x800
    7c34:	00010800 	andeq	r0, r1, r0, lsl #16
    7c38:	0015bc54 	andseq	fp, r5, r4, asr ip
    7c3c:	0015ce08 	andseq	ip, r5, r8, lsl #28
    7c40:	f3000408 	vshl.u8	d0, d8, d0
    7c44:	ce9f5001 	cdpgt	0, 9, cr5, cr15, cr1, {0}
    7c48:	d2080015 	andle	r0, r8, #21
    7c4c:	01080015 	tsteq	r8, r5, lsl r0
    7c50:	15d25000 	ldrbne	r5, [r2]
    7c54:	15e00800 	strbne	r0, [r0, #2048]!	; 0x800
    7c58:	00010800 	andeq	r0, r1, r0, lsl #16
    7c5c:	00000054 	andeq	r0, r0, r4, asr r0
    7c60:	00000000 	andeq	r0, r0, r0
    7c64:	00000100 	andeq	r0, r0, r0, lsl #2
    7c68:	0015ae00 	andseq	sl, r5, r0, lsl #28
    7c6c:	0015bc08 	andseq	fp, r5, r8, lsl #24
    7c70:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    7c74:	080015bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sl, ip}
    7c78:	080015cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, sl, ip}
    7c7c:	01f30004 	mvnseq	r0, r4
    7c80:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7c90:	080015b2 	stmdaeq	r0, {r1, r4, r5, r7, r8, sl, ip}
    7c94:	080015b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, sl, ip}
    7c98:	ba530001 	blt	14c7ca4 <_Min_Heap_Size+0x14c74a4>
    7c9c:	c2080015 	andgt	r0, r8, #21
    7ca0:	01080015 	tsteq	r8, r5, lsl r0
    7ca4:	15ca5300 	strbne	r5, [sl, #768]	; 0x300
    7ca8:	15cc0800 	strbne	r0, [ip, #2048]	; 0x800
    7cac:	00010800 	andeq	r0, r1, r0, lsl #16
    7cb0:	00000053 	andeq	r0, r0, r3, asr r0
    7cb4:	00000000 	andeq	r0, r0, r0
    7cb8:	00000400 	andeq	r0, r0, r0, lsl #8
    7cbc:	0015ae00 	andseq	sl, r5, r0, lsl #28
    7cc0:	0015bc08 	andseq	fp, r5, r8, lsl #24
    7cc4:	74000508 	strvc	r0, [r0], #-1288	; 0xfffffaf8
    7cc8:	9f1a3700 	svcls	0x001a3700
    7ccc:	080015bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sl, ip}
    7cd0:	080015ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, sl, ip}
    7cd4:	01f30006 	mvnseq	r0, r6
    7cd8:	9f1a3750 	svcls	0x001a3750
	...
    7ce4:	08001768 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl, ip}
    7ce8:	0800176a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl, ip}
    7cec:	007d0002 	rsbseq	r0, sp, r2
    7cf0:	0800176a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl, ip}
    7cf4:	08001790 	stmdaeq	r0, {r4, r7, r8, r9, sl, ip}
    7cf8:	107d0002 	rsbsne	r0, sp, r2
	...
    7d08:	17680000 	strbne	r0, [r8, -r0]!
    7d0c:	176f0800 	strbne	r0, [pc, -r0, lsl #16]!
    7d10:	00010800 	andeq	r0, r1, r0, lsl #16
    7d14:	00176f50 	andseq	r6, r7, r0, asr pc
    7d18:	00177e08 	andseq	r7, r7, r8, lsl #28
    7d1c:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    7d20:	0800177e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, sl, ip}
    7d24:	08001790 	stmdaeq	r0, {r4, r7, r8, r9, sl, ip}
    7d28:	01f30004 	mvnseq	r0, r4
    7d2c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7d38:	17720000 	ldrbne	r0, [r2, -r0]!
    7d3c:	177e0800 	ldrbne	r0, [lr, -r0, lsl #16]!
    7d40:	00010800 	andeq	r0, r1, r0, lsl #16
    7d44:	00177e50 	andseq	r7, r7, r0, asr lr
    7d48:	00178a08 	andseq	r8, r7, r8, lsl #20
    7d4c:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    7d58:	17720001 	ldrbne	r0, [r2, -r1]!
    7d5c:	178a0800 	strne	r0, [sl, r0, lsl #16]
    7d60:	00010800 	andeq	r0, r1, r0, lsl #16
    7d64:	00000054 	andeq	r0, r0, r4, asr r0
	...
    7d74:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    7d80:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7d84:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    7d9c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7da8:	01f30004 	mvnseq	r0, r4
    7dac:	00009f50 	andeq	r9, r0, r0, asr pc
    7db0:	00000000 	andeq	r0, r0, r0
    7db4:	00010000 	andeq	r0, r1, r0
    7db8:	00000050 	andeq	r0, r0, r0, asr r0
    7dbc:	00000000 	andeq	r0, r0, r0
    7dc0:	f3000400 	vshl.u8	d0, d0, d0
    7dc4:	009f5001 	addseq	r5, pc, r1
    7dc8:	00000000 	andeq	r0, r0, r0
    7dcc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    7ddc:	02000000 	andeq	r0, r0, #0
    7de0:	009f3000 	addseq	r3, pc, r0
    7de4:	00000000 	andeq	r0, r0, r0
    7de8:	01000000 	mrseq	r0, (UNDEF: 0)
    7dec:	00005000 	andeq	r5, r0, r0
    7df0:	00000000 	andeq	r0, r0, r0
    7df4:	00020000 	andeq	r0, r2, r0
    7df8:	00009f30 	andeq	r9, r0, r0, lsr pc
    7dfc:	00000000 	andeq	r0, r0, r0
    7e00:	00010000 	andeq	r0, r1, r0
    7e04:	00000050 	andeq	r0, r0, r0, asr r0
    7e08:	00000000 	andeq	r0, r0, r0
    7e0c:	00000100 	andeq	r0, r0, r0, lsl #2
    7e10:	00000000 	andeq	r0, r0, r0
    7e14:	01000000 	mrseq	r0, (UNDEF: 0)
    7e18:	00005500 	andeq	r5, r0, r0, lsl #10
    7e1c:	00000000 	andeq	r0, r0, r0
    7e20:	16c40000 	strbne	r0, [r4], r0
    7e24:	16c60800 	strbne	r0, [r6], r0, lsl #16
    7e28:	00020800 	andeq	r0, r2, r0, lsl #16
    7e2c:	16c6007d 	uxtab16ne	r0, r6, sp
    7e30:	17100800 	ldrne	r0, [r0, -r0, lsl #16]
    7e34:	00020800 	andeq	r0, r2, r0, lsl #16
    7e38:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7e48:	080016c4 	stmdaeq	r0, {r2, r6, r7, r9, sl, ip}
    7e4c:	080016cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip}
    7e50:	cc500001 	mrrcgt	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    7e54:	02080016 	andeq	r0, r8, #22
    7e58:	01080017 	tsteq	r8, r7, lsl r0
    7e5c:	17025400 	strne	r5, [r2, -r0, lsl #8]
    7e60:	17100800 	ldrne	r0, [r0, -r0, lsl #16]
    7e64:	00040800 	andeq	r0, r4, r0, lsl #16
    7e68:	9f5001f3 	svcls	0x005001f3
	...
    7e7c:	007d0002 	rsbseq	r0, sp, r2
	...
    7e88:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7e94:	08001710 	stmdaeq	r0, {r4, r8, r9, sl, ip}
    7e98:	08001712 	stmdaeq	r0, {r1, r4, r8, r9, sl, ip}
    7e9c:	007d0002 	rsbseq	r0, sp, r2
    7ea0:	08001712 	stmdaeq	r0, {r1, r4, r8, r9, sl, ip}
    7ea4:	08001744 	stmdaeq	r0, {r2, r6, r8, r9, sl, ip}
    7ea8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7eb4:	00000002 	andeq	r0, r0, r2
	...
    7ec8:	9f300002 	svcls	0x00300002
	...
    7ed4:	00530001 	subseq	r0, r3, r1
    7ed8:	00000000 	andeq	r0, r0, r0
    7edc:	01000000 	mrseq	r0, (UNDEF: 0)
    7ee0:	00005300 	andeq	r5, r0, r0, lsl #6
    7ee4:	00000000 	andeq	r0, r0, r0
    7ee8:	00010000 	andeq	r0, r1, r0
    7eec:	00000051 	andeq	r0, r0, r1, asr r0
    7ef0:	00000000 	andeq	r0, r0, r0
    7ef4:	53000100 	movwpl	r0, #256	; 0x100
	...
    7f00:	00530001 	subseq	r0, r3, r1
    7f04:	00000000 	andeq	r0, r0, r0
    7f08:	02000000 	andeq	r0, r0, #0
    7f0c:	00000001 	andeq	r0, r0, r1
	...
    7f1c:	30000200 	andcc	r0, r0, r0, lsl #4
    7f20:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7f24:	00000000 	andeq	r0, r0, r0
    7f28:	30000200 	andcc	r0, r0, r0, lsl #4
    7f2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7f30:	00000000 	andeq	r0, r0, r0
    7f34:	53000100 	movwpl	r0, #256	; 0x100
	...
    7f40:	9f300002 	svcls	0x00300002
	...
    7f4c:	00530001 	subseq	r0, r3, r1
    7f50:	00000000 	andeq	r0, r0, r0
    7f54:	02000000 	andeq	r0, r0, #0
    7f58:	00000001 	andeq	r0, r0, r1
	...
    7f64:	02000000 	andeq	r0, r0, #0
    7f68:	009f3200 	addseq	r3, pc, r0, lsl #4
    7f6c:	00000000 	andeq	r0, r0, r0
    7f70:	02000000 	andeq	r0, r0, #0
    7f74:	009f3200 	addseq	r3, pc, r0, lsl #4
    7f78:	00000000 	andeq	r0, r0, r0
    7f7c:	01000000 	mrseq	r0, (UNDEF: 0)
    7f80:	00005200 	andeq	r5, r0, r0, lsl #4
    7f84:	00000000 	andeq	r0, r0, r0
    7f88:	00020000 	andeq	r0, r2, r0
    7f8c:	00009f32 	andeq	r9, r0, r2, lsr pc
    7f90:	00000000 	andeq	r0, r0, r0
    7f94:	01020000 	mrseq	r0, (UNDEF: 2)
	...
    7fa4:	9f300002 	svcls	0x00300002
	...
    7fb0:	9f300002 	svcls	0x00300002
	...
    7fbc:	00710008 	rsbseq	r0, r1, r8
    7fc0:	3324ed09 			; <UNDEFINED> instruction: 0x3324ed09
    7fc4:	00009f25 	andeq	r9, r0, r5, lsr #30
    7fc8:	00000000 	andeq	r0, r0, r0
    7fcc:	01020000 	mrseq	r0, (UNDEF: 2)
	...
    7fdc:	00020000 	andeq	r0, r2, r0
    7fe0:	00009f32 	andeq	r9, r0, r2, lsr pc
    7fe4:	00000000 	andeq	r0, r0, r0
    7fe8:	00020000 	andeq	r0, r2, r0
    7fec:	00009f32 	andeq	r9, r0, r2, lsr pc
    7ff0:	00000000 	andeq	r0, r0, r0
    7ff4:	00010000 	andeq	r0, r1, r0
    7ff8:	00000052 	andeq	r0, r0, r2, asr r0
    7ffc:	00000000 	andeq	r0, r0, r0
    8000:	52000100 	andpl	r0, r0, #0, 2
	...
    800c:	00000100 	andeq	r0, r0, r0, lsl #2
    8010:	00000000 	andeq	r0, r0, r0
    8014:	00010000 	andeq	r0, r1, r0
    8018:	00000050 	andeq	r0, r0, r0, asr r0
    801c:	00000000 	andeq	r0, r0, r0
    8020:	00187000 	andseq	r7, r8, r0
    8024:	00187408 	andseq	r7, r8, r8, lsl #8
    8028:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    802c:	00187400 	andseq	r7, r8, r0, lsl #8
    8030:	0018ec08 	andseq	lr, r8, r8, lsl #24
    8034:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8038:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    8048:	00187000 	andseq	r7, r8, r0
    804c:	00188a08 	andseq	r8, r8, r8, lsl #20
    8050:	50000108 	andpl	r0, r0, r8, lsl #2
    8054:	0800188a 	stmdaeq	r0, {r1, r3, r7, fp, ip}
    8058:	080018c4 	stmdaeq	r0, {r2, r6, r7, fp, ip}
    805c:	c4580001 	ldrbgt	r0, [r8], #-1
    8060:	ca080018 	bgt	2080c8 <_Min_Heap_Size+0x2078c8>
    8064:	04080018 	streq	r0, [r8], #-24	; 0xffffffe8
    8068:	5001f300 	andpl	pc, r1, r0, lsl #6
    806c:	0018ca9f 	mulseq	r8, pc, sl	; <UNPREDICTABLE>
    8070:	0018ec08 	andseq	lr, r8, r8, lsl #24
    8074:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    8088:	08001870 	stmdaeq	r0, {r4, r5, r6, fp, ip}
    808c:	0800188a 	stmdaeq	r0, {r1, r3, r7, fp, ip}
    8090:	8a510001 	bhi	144809c <_Min_Heap_Size+0x144789c>
    8094:	c4080018 	strgt	r0, [r8], #-24	; 0xffffffe8
    8098:	01080018 	tsteq	r8, r8, lsl r0
    809c:	18c45700 	stmiane	r4, {r8, r9, sl, ip, lr}^
    80a0:	18ca0800 	stmiane	sl, {fp}^
    80a4:	00040800 	andeq	r0, r4, r0, lsl #16
    80a8:	9f5101f3 	svcls	0x005101f3
    80ac:	080018ca 	stmdaeq	r0, {r1, r3, r6, r7, fp, ip}
    80b0:	080018ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip}
    80b4:	00510001 	subseq	r0, r1, r1
	...
    80c4:	00187000 	andseq	r7, r8, r0
    80c8:	00188a08 	andseq	r8, r8, r8, lsl #20
    80cc:	52000108 	andpl	r0, r0, #8, 2
    80d0:	0800188a 	stmdaeq	r0, {r1, r3, r7, fp, ip}
    80d4:	080018ca 	stmdaeq	r0, {r1, r3, r6, r7, fp, ip}
    80d8:	01f30004 	mvnseq	r0, r4
    80dc:	18ca9f52 	stmiane	sl, {r1, r4, r6, r8, r9, sl, fp, ip, pc}^
    80e0:	18ec0800 	stmiane	ip!, {fp}^
    80e4:	00010800 	andeq	r0, r1, r0, lsl #16
    80e8:	00000052 	andeq	r0, r0, r2, asr r0
	...
    80f8:	00187000 	andseq	r7, r8, r0
    80fc:	00188a08 	andseq	r8, r8, r8, lsl #20
    8100:	53000108 	movwpl	r0, #264	; 0x108
    8104:	0800188a 	stmdaeq	r0, {r1, r3, r7, fp, ip}
    8108:	080018c4 	stmdaeq	r0, {r2, r6, r7, fp, ip}
    810c:	c4550001 	ldrbgt	r0, [r5], #-1
    8110:	ca080018 	bgt	208178 <_Min_Heap_Size+0x207978>
    8114:	04080018 	streq	r0, [r8], #-24	; 0xffffffe8
    8118:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    811c:	0018ca9f 	mulseq	r8, pc, sl	; <UNPREDICTABLE>
    8120:	0018ec08 	andseq	lr, r8, r8, lsl #24
    8124:	53000108 	movwpl	r0, #264	; 0x108
	...
    8130:	00000001 	andeq	r0, r0, r1
    8134:	18740000 	ldmdane	r4!, {}^	; <UNPREDICTABLE>
    8138:	188a0800 	stmne	sl, {fp}
    813c:	00020800 	andeq	r0, r2, r0, lsl #16
    8140:	188a9f30 	stmne	sl, {r4, r5, r8, r9, sl, fp, ip, pc}
    8144:	18c40800 	stmiane	r4, {fp}^
    8148:	00010800 	andeq	r0, r1, r0, lsl #16
    814c:	0018ca56 	andseq	ip, r8, r6, asr sl
    8150:	0018e008 	andseq	lr, r8, r8
    8154:	30000208 	andcc	r0, r0, r8, lsl #4
    8158:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    815c:	00000000 	andeq	r0, r0, r0
    8160:	00000200 	andeq	r0, r0, r0, lsl #4
    8164:	00000101 	andeq	r0, r0, r1, lsl #2
    8168:	74000000 	strvc	r0, [r0], #-0
    816c:	8a080018 	bhi	2081d4 <_Min_Heap_Size+0x2079d4>
    8170:	02080018 	andeq	r0, r8, #24
    8174:	949f3000 	ldrls	r3, [pc], #0	; 817c <_Min_Heap_Size+0x797c>
    8178:	a6080018 			; <UNDEFINED> instruction: 0xa6080018
    817c:	01080018 	tsteq	r8, r8, lsl r0
    8180:	18a65200 	stmiane	r6!, {r9, ip, lr}
    8184:	18aa0800 	stmiane	sl!, {fp}
    8188:	00030800 	andeq	r0, r3, r0, lsl #16
    818c:	aa9f7f72 	bge	fe7e7f5c <_estack+0xde7e6d24>
    8190:	c4080018 	strgt	r0, [r8], #-24	; 0xffffffe8
    8194:	01080018 	tsteq	r8, r8, lsl r0
    8198:	18ca5900 	stmiane	sl, {r8, fp, ip, lr}^
    819c:	18ec0800 	stmiane	ip!, {fp}^
    81a0:	00020800 	andeq	r0, r2, r0, lsl #16
    81a4:	00009f30 	andeq	r9, r0, r0, lsr pc
    81a8:	00000000 	andeq	r0, r0, r0
    81ac:	00020000 	andeq	r0, r2, r0
    81b0:	00000000 	andeq	r0, r0, r0
    81b4:	08001874 	stmdaeq	r0, {r2, r4, r5, r6, fp, ip}
    81b8:	0800188a 	stmdaeq	r0, {r1, r3, r7, fp, ip}
    81bc:	9f300002 	svcls	0x00300002
    81c0:	080018b2 	stmdaeq	r0, {r1, r4, r5, r7, fp, ip}
    81c4:	080018b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, fp, ip}
    81c8:	ca500001 	bgt	14081d4 <_Min_Heap_Size+0x14079d4>
    81cc:	ec080018 	stc	0, cr0, [r8], {24}
    81d0:	02080018 	andeq	r0, r8, #24
    81d4:	009f3000 	addseq	r3, pc, r0
    81d8:	00000000 	andeq	r0, r0, r0
    81dc:	02000000 	andeq	r0, r0, #0
    81e0:	00000000 	andeq	r0, r0, r0
    81e4:	00187400 	andseq	r7, r8, r0, lsl #8
    81e8:	00188a08 	andseq	r8, r8, r8, lsl #20
    81ec:	30000208 	andcc	r0, r0, r8, lsl #4
    81f0:	00188a9f 	mulseq	r8, pc, sl	; <UNPREDICTABLE>
    81f4:	0018c408 	andseq	ip, r8, r8, lsl #8
    81f8:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    81fc:	080018ca 	stmdaeq	r0, {r1, r3, r6, r7, fp, ip}
    8200:	080018ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip}
    8204:	9f300002 	svcls	0x00300002
	...
    8210:	080018ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip}
    8214:	080018ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, fp, ip}
    8218:	007d0002 	rsbseq	r0, sp, r2
    821c:	080018ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, fp, ip}
    8220:	08001a70 	stmdaeq	r0, {r4, r5, r6, r9, fp, ip}
    8224:	187d0002 	ldmdane	sp!, {r1}^
	...
    8234:	18ec0000 	stmiane	ip!, {}^	; <UNPREDICTABLE>
    8238:	19380800 	ldmdbne	r8!, {fp}
    823c:	00010800 	andeq	r0, r1, r0, lsl #16
    8240:	00193850 	andseq	r3, r9, r0, asr r8
    8244:	0019e408 	andseq	lr, r9, r8, lsl #8
    8248:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    824c:	080019e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, fp, ip}
    8250:	08001a70 	stmdaeq	r0, {r4, r5, r6, r9, fp, ip}
    8254:	01f30004 	mvnseq	r0, r4
    8258:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8264:	18ec0000 	stmiane	ip!, {}^	; <UNPREDICTABLE>
    8268:	193b0800 	ldmdbne	fp!, {fp}
    826c:	00010800 	andeq	r0, r1, r0, lsl #16
    8270:	00193b51 	andseq	r3, r9, r1, asr fp
    8274:	001a7008 	andseq	r7, sl, r8
    8278:	56000108 	strpl	r0, [r0], -r8, lsl #2
	...
    8284:	00000001 	andeq	r0, r0, r1
    8288:	18f20000 	ldmne	r2!, {}^	; <UNPREDICTABLE>
    828c:	19e40800 	stmibne	r4!, {fp}^
    8290:	00020800 	andeq	r0, r2, r0, lsl #16
    8294:	19e49f30 	stmibne	r4!, {r4, r5, r8, r9, sl, fp, ip, pc}^
    8298:	19e60800 	stmibne	r6!, {fp}^
    829c:	00010800 	andeq	r0, r1, r0, lsl #16
    82a0:	0019e650 	andseq	lr, r9, r0, asr r6
    82a4:	001a7008 	andseq	r7, sl, r8
    82a8:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    82b4:	01010101 	tsteq	r1, r1, lsl #2
    82b8:	00000001 	andeq	r0, r0, r1
    82bc:	080018f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, fp, ip}
    82c0:	080019d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, fp, ip}
    82c4:	9f300002 	svcls	0x00300002
    82c8:	080019d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, fp, ip}
    82cc:	080019f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, fp, ip}
    82d0:	9f400002 	svcls	0x00400002
    82d4:	080019f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, fp, ip}
    82d8:	080019f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, fp, ip}
    82dc:	9f300002 	svcls	0x00300002
    82e0:	080019f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, fp, ip}
    82e4:	08001a70 	stmdaeq	r0, {r4, r5, r6, r9, fp, ip}
    82e8:	00540001 	subseq	r0, r4, r1
    82ec:	00000000 	andeq	r0, r0, r0
    82f0:	02000000 	andeq	r0, r0, #0
    82f4:	01010505 	tsteq	r1, r5, lsl #10
    82f8:	01010101 	tsteq	r1, r1, lsl #2
    82fc:	01010101 	tsteq	r1, r1, lsl #2
    8300:	01010101 	tsteq	r1, r1, lsl #2
    8304:	01010101 	tsteq	r1, r1, lsl #2
    8308:	01010101 	tsteq	r1, r1, lsl #2
    830c:	01010101 	tsteq	r1, r1, lsl #2
    8310:	01010101 	tsteq	r1, r1, lsl #2
    8314:	00000000 	andeq	r0, r0, r0
    8318:	0018f200 	andseq	pc, r8, r0, lsl #4
    831c:	0018f208 	andseq	pc, r8, r8, lsl #4
    8320:	50000108 	andpl	r0, r0, r8, lsl #2
    8324:	080018f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, fp, ip}
    8328:	080018f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp, ip}
    832c:	04700003 	ldrbteq	r0, [r0], #-3
    8330:	0018f89f 	mulseq	r8, pc, r8	; <UNPREDICTABLE>
    8334:	0018fc08 	andseq	pc, r8, r8, lsl #24
    8338:	70000308 	andvc	r0, r0, r8, lsl #6
    833c:	18fc9f08 	ldmne	ip!, {r3, r8, r9, sl, fp, ip, pc}^
    8340:	19000800 	stmdbne	r0, {fp}
    8344:	00030800 	andeq	r0, r3, r0, lsl #16
    8348:	009f0c70 	addseq	r0, pc, r0, ror ip	; <UNPREDICTABLE>
    834c:	04080019 	streq	r0, [r8], #-25	; 0xffffffe7
    8350:	03080019 	movweq	r0, #32793	; 0x8019
    8354:	9f107000 	svcls	0x00107000
    8358:	08001904 	stmdaeq	r0, {r2, r8, fp, ip}
    835c:	08001908 	stmdaeq	r0, {r3, r8, fp, ip}
    8360:	14700003 	ldrbtne	r0, [r0], #-3
    8364:	0019089f 	mulseq	r9, pc, r8	; <UNPREDICTABLE>
    8368:	00190c08 	andseq	r0, r9, r8, lsl #24
    836c:	70000308 	andvc	r0, r0, r8, lsl #6
    8370:	190c9f18 	stmdbne	ip, {r3, r4, r8, r9, sl, fp, ip, pc}
    8374:	19100800 	ldmdbne	r0, {fp}
    8378:	00030800 	andeq	r0, r3, r0, lsl #16
    837c:	109f1c70 	addsne	r1, pc, r0, ror ip	; <UNPREDICTABLE>
    8380:	14080019 	strne	r0, [r8], #-25	; 0xffffffe7
    8384:	03080019 	movweq	r0, #32793	; 0x8019
    8388:	9f207000 	svcls	0x00207000
    838c:	08001914 	stmdaeq	r0, {r2, r4, r8, fp, ip}
    8390:	08001918 	stmdaeq	r0, {r3, r4, r8, fp, ip}
    8394:	24700003 	ldrbtcs	r0, [r0], #-3
    8398:	0019189f 	mulseq	r9, pc, r8	; <UNPREDICTABLE>
    839c:	00191c08 	andseq	r1, r9, r8, lsl #24
    83a0:	70000308 	andvc	r0, r0, r8, lsl #6
    83a4:	191c9f28 	ldmdbne	ip, {r3, r5, r8, r9, sl, fp, ip, pc}
    83a8:	19200800 	stmdbne	r0!, {fp}
    83ac:	00030800 	andeq	r0, r3, r0, lsl #16
    83b0:	209f2c70 	addscs	r2, pc, r0, ror ip	; <UNPREDICTABLE>
    83b4:	24080019 	strcs	r0, [r8], #-25	; 0xffffffe7
    83b8:	03080019 	movweq	r0, #32793	; 0x8019
    83bc:	9f307000 	svcls	0x00307000
    83c0:	08001924 	stmdaeq	r0, {r2, r5, r8, fp, ip}
    83c4:	08001928 	stmdaeq	r0, {r3, r5, r8, fp, ip}
    83c8:	34700003 	ldrbtcc	r0, [r0], #-3
    83cc:	0019289f 	mulseq	r9, pc, r8	; <UNPREDICTABLE>
    83d0:	00192c08 	andseq	r2, r9, r8, lsl #24
    83d4:	70000308 	andvc	r0, r0, r8, lsl #6
    83d8:	192c9f38 	stmdbne	ip!, {r3, r4, r5, r8, r9, sl, fp, ip, pc}
    83dc:	19300800 	ldmdbne	r0!, {fp}
    83e0:	00030800 	andeq	r0, r3, r0, lsl #16
    83e4:	309f3c70 	addscc	r3, pc, r0, ror ip	; <UNPREDICTABLE>
    83e8:	38080019 	stmdacc	r8, {r0, r3, r4}
    83ec:	04080019 	streq	r0, [r8], #-25	; 0xffffffe7
    83f0:	00c07000 	sbceq	r7, r0, r0
    83f4:	0019389f 	mulseq	r9, pc, r8	; <UNPREDICTABLE>
    83f8:	0019e408 	andseq	lr, r9, r8, lsl #8
    83fc:	75000408 	strvc	r0, [r0, #-1032]	; 0xfffffbf8
    8400:	e49f00c0 	ldr	r0, [pc], #192	; 8408 <_Min_Heap_Size+0x7c08>
    8404:	70080019 	andvc	r0, r8, r9, lsl r0
    8408:	0608001a 			; <UNDEFINED> instruction: 0x0608001a
    840c:	5001f300 	andpl	pc, r1, r0, lsl #6
    8410:	009f4023 	addseq	r4, pc, r3, lsr #32
    8414:	00000000 	andeq	r0, r0, r0
    8418:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    841c:	0a080018 	beq	208484 <_Min_Heap_Size+0x207c84>
    8420:	02080018 	andeq	r0, r8, #24
    8424:	0a007d00 	beq	2782c <_Min_Heap_Size+0x2702c>
    8428:	20080018 	andcs	r0, r8, r8, lsl r0
    842c:	02080018 	andeq	r0, r8, #24
    8430:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    8440:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    8444:	10080018 	andne	r0, r8, r8, lsl r0
    8448:	01080018 	tsteq	r8, r8, lsl r0
    844c:	18105000 	ldmdane	r0, {ip, lr}
    8450:	18130800 	ldmdane	r3, {fp}
    8454:	00010800 	andeq	r0, r1, r0, lsl #16
    8458:	00181351 	andseq	r1, r8, r1, asr r3
    845c:	00181c08 	andseq	r1, r8, r8, lsl #24
    8460:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    8464:	0800181c 	stmdaeq	r0, {r2, r3, r4, fp, ip}
    8468:	08001820 	stmdaeq	r0, {r5, fp, ip}
    846c:	01f30004 	mvnseq	r0, r4
    8470:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    847c:	17d00000 	ldrbne	r0, [r0, r0]
    8480:	17d60800 	ldrbne	r0, [r6, r0, lsl #16]
    8484:	00010800 	andeq	r0, r1, r0, lsl #16
    8488:	0017d650 	andseq	sp, r7, r0, asr r6
    848c:	00180608 	andseq	r0, r8, r8, lsl #12
    8490:	f3000408 	vshl.u8	d0, d8, d0
    8494:	009f5001 	addseq	r5, pc, r1
	...
    84a0:	0017d400 	andseq	sp, r7, r0, lsl #8
    84a4:	00180608 	andseq	r0, r8, r8, lsl #12
    84a8:	53000108 	movwpl	r0, #264	; 0x108
	...
    84c8:	080017da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, sl, ip}
    84cc:	080017f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, ip}
    84d0:	f4500001 			; <UNDEFINED> instruction: 0xf4500001
    84d4:	f6080017 			; <UNDEFINED> instruction: 0xf6080017
    84d8:	0a080017 	beq	20853c <_Min_Heap_Size+0x207d3c>
    84dc:	5001f300 	andpl	pc, r1, r0, lsl #6
    84e0:	000a2540 	andeq	r2, sl, r0, asr #10
    84e4:	f69f1af8 			; <UNDEFINED> instruction: 0xf69f1af8
    84e8:	f8080017 			; <UNDEFINED> instruction: 0xf8080017
    84ec:	01080017 	tsteq	r8, r7, lsl r0
    84f0:	17f85000 	ldrbne	r5, [r8, r0]!
    84f4:	17fa0800 	ldrbne	r0, [sl, r0, lsl #16]!
    84f8:	000a0800 	andeq	r0, sl, r0, lsl #16
    84fc:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    8500:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    8504:	17fa9f1a 			; <UNDEFINED> instruction: 0x17fa9f1a
    8508:	17fc0800 	ldrbne	r0, [ip, r0, lsl #16]!
    850c:	00010800 	andeq	r0, r1, r0, lsl #16
    8510:	0017fc50 	andseq	pc, r7, r0, asr ip	; <UNPREDICTABLE>
    8514:	0017fe08 	andseq	pc, r7, r8, lsl #28
    8518:	f3000a08 	vpmax.u8	d0, d0, d8
    851c:	25405001 	strbcs	r5, [r0, #-1]
    8520:	1af8000a 	bne	ffe08550 <_estack+0xdfe07318>
    8524:	0017fe9f 	mulseq	r7, pc, lr	; <UNPREDICTABLE>
    8528:	00180008 	andseq	r0, r8, r8
    852c:	50000108 	andpl	r0, r0, r8, lsl #2
    8530:	08001800 	stmdaeq	r0, {fp, ip}
    8534:	08001802 	stmdaeq	r0, {r1, fp, ip}
    8538:	01f3000a 	mvnseq	r0, sl
    853c:	0a254050 	beq	958684 <_Min_Heap_Size+0x957e84>
    8540:	9f1af800 	svcls	0x001af800
    8544:	08001802 	stmdaeq	r0, {r1, fp, ip}
    8548:	08001804 	stmdaeq	r0, {r2, fp, ip}
    854c:	04500001 	ldrbeq	r0, [r0], #-1
    8550:	06080018 			; <UNDEFINED> instruction: 0x06080018
    8554:	0a080018 	beq	2085bc <_Min_Heap_Size+0x207dbc>
    8558:	5001f300 	andpl	pc, r1, r0, lsl #6
    855c:	000a2540 	andeq	r2, sl, r0, asr #10
    8560:	009f1af8 			; <UNDEFINED> instruction: 0x009f1af8
    8564:	00000000 	andeq	r0, r0, r0
    8568:	a4000000 	strge	r0, [r0], #-0
    856c:	a6080017 			; <UNDEFINED> instruction: 0xa6080017
    8570:	02080017 	andeq	r0, r8, #23
    8574:	a6007d00 	strge	r7, [r0], -r0, lsl #26
    8578:	ce080017 	mcrgt	0, 0, r0, cr8, cr7, {0}
    857c:	02080017 	andeq	r0, r8, #23
    8580:	ce087d00 	cdpgt	13, 0, cr7, cr8, cr0, {0}
    8584:	d0080017 	andle	r0, r8, r7, lsl r0
    8588:	02080017 	andeq	r0, r8, #23
    858c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    8598:	a4000000 	strge	r0, [r0], #-0
    859c:	c4080017 	strgt	r0, [r8], #-23	; 0xffffffe9
    85a0:	01080017 	tsteq	r8, r7, lsl r0
    85a4:	17c45000 	strbne	r5, [r4, r0]
    85a8:	17d00800 	ldrbne	r0, [r0, r0, lsl #16]
    85ac:	00040800 	andeq	r0, r4, r0, lsl #16
    85b0:	9f5001f3 	svcls	0x005001f3
	...
    85bc:	00000001 	andeq	r0, r0, r1
    85c0:	17aa0000 	strne	r0, [sl, r0]!
    85c4:	17c80800 	strbne	r0, [r8, r0, lsl #16]
    85c8:	00020800 	andeq	r0, r2, r0, lsl #16
    85cc:	17c89f30 			; <UNDEFINED> instruction: 0x17c89f30
    85d0:	17cc0800 	strbne	r0, [ip, r0, lsl #16]
    85d4:	00080800 	andeq	r0, r8, r0, lsl #16
    85d8:	24400070 	strbcs	r0, [r0], #-112	; 0xffffff90
    85dc:	9f210073 	svcls	0x00210073
    85e0:	080017cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, r9, sl, ip}
    85e4:	080017d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, ip}
    85e8:	00500001 	subseq	r0, r0, r1
    85ec:	00000000 	andeq	r0, r0, r0
    85f0:	03000000 	movweq	r0, #0
    85f4:	aa000000 	bge	85fc <_Min_Heap_Size+0x7dfc>
    85f8:	ac080017 	stcge	0, cr0, [r8], {23}
    85fc:	02080017 	andeq	r0, r8, #23
    8600:	ac9f3000 	ldcge	0, cr3, [pc], {0}
    8604:	c8080017 	stmdagt	r8, {r0, r1, r2, r4}
    8608:	01080017 	tsteq	r8, r7, lsl r0
    860c:	00005300 	andeq	r5, r0, r0, lsl #6
    8610:	00000000 	andeq	r0, r0, r0
    8614:	18200000 	stmdane	r0!, {}	; <UNPREDICTABLE>
    8618:	18220800 	stmdane	r2!, {fp}
    861c:	00020800 	andeq	r0, r2, r0, lsl #16
    8620:	1822007d 	stmdane	r2!, {r0, r2, r3, r4, r5, r6}
    8624:	18700800 	ldmdane	r0!, {fp}^
    8628:	00020800 	andeq	r0, r2, r0, lsl #16
    862c:	0000087d 	andeq	r0, r0, sp, ror r8
    8630:	00000000 	andeq	r0, r0, r0
    8634:	1a700000 	bne	1c0863c <_Min_Heap_Size+0x1c07e3c>
    8638:	1a720800 	bne	1c8a640 <_Min_Heap_Size+0x1c89e40>
    863c:	00020800 	andeq	r0, r2, r0, lsl #16
    8640:	1a72007d 	bne	1c8883c <_Min_Heap_Size+0x1c8803c>
    8644:	1af80800 	bne	ffe0a64c <_estack+0xdfe09414>
    8648:	00020800 	andeq	r0, r2, r0, lsl #16
    864c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    8658:	1a700000 	bne	1c08660 <_Min_Heap_Size+0x1c07e60>
    865c:	1a760800 	bne	1d8a664 <_Min_Heap_Size+0x1d89e64>
    8660:	00010800 	andeq	r0, r1, r0, lsl #16
    8664:	001a7650 	andseq	r7, sl, r0, asr r6
    8668:	001af808 	andseq	pc, sl, r8, lsl #16
    866c:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000006c 	andeq	r0, r0, ip, rrx
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
}
   c:	00000000 	andeq	r0, r0, r0
  10:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	00000020 	andeq	r0, r0, r0, lsr #32
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	00000000 	andeq	r0, r0, r0
  1c:	00000020 	andeq	r0, r0, r0, lsr #32
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
  24:	0000004c 	andeq	r0, r0, ip, asr #32
}
  28:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
  2c:	00000018 	andeq	r0, r0, r8, lsl r0
  30:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
    if (status != HAL_OK)
  34:	00000018 	andeq	r0, r0, r8, lsl r0
      uwTickFreq = prevTickFreq;
  38:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
  44:	00000018 	andeq	r0, r0, r8, lsl r0
      if (pllsource != 0)
  48:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
  4c:	00000018 	andeq	r0, r0, r8, lsl r0
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  50:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
  54:	00000018 	andeq	r0, r0, r8, lsl r0
  58:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
  5c:	0000002c 	andeq	r0, r0, ip, lsr #32
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
  60:	00000000 	andeq	r0, r0, r0
  64:	000000a8 	andeq	r0, r0, r8, lsr #1
	...
      SystemCoreClock = pllvco/pllp;
  70:	0000001c 	andeq	r0, r0, ip, lsl r0
      break;
  74:	11130002 	tstne	r3, r2
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  78:	00040000 	andeq	r0, r4, r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
  84:	00000048 	andeq	r0, r0, r8, asr #32
	...
  90:	000000a4 	andeq	r0, r0, r4, lsr #1
  94:	12980002 	addsne	r0, r8, #2
  98:	00040000 	andeq	r0, r4, r0
	...
  a4:	00000002 	andeq	r0, r0, r2
  a8:	00000000 	andeq	r0, r0, r0
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
  ac:	00000004 	andeq	r0, r0, r4
  b0:	00000000 	andeq	r0, r0, r0
      huart->hdmatx->XferAbortCallback = NULL;
  b4:	00000010 	andeq	r0, r0, r0, lsl r0
      huart->hdmarx->XferAbortCallback = NULL;
  b8:	00000000 	andeq	r0, r0, r0
  bc:	0000000c 	andeq	r0, r0, ip
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
  c0:	08000734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl}
  c4:	00000020 	andeq	r0, r0, r0, lsr #32
  c8:	08000754 	stmdaeq	r0, {r2, r4, r6, r8, r9, sl}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  cc:	0000001c 	andeq	r0, r0, ip, lsl r0
  d0:	08000770 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl}
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
  d4:	00000006 	andeq	r0, r0, r6
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  d8:	08000776 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, sl}
  dc:	0000000a 	andeq	r0, r0, sl
  e0:	08000780 	stmdaeq	r0, {r7, r8, r9, sl}
    if (huart->hdmarx != NULL)
  e4:	00000004 	andeq	r0, r0, r4
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
  e8:	08000784 	stmdaeq	r0, {r2, r7, r8, r9, sl}
        huart->hdmarx->XferAbortCallback = NULL;
  ec:	00000004 	andeq	r0, r0, r4
  f0:	00000000 	andeq	r0, r0, r0
    huart->TxXferCount = 0x00U;
  f4:	0000000a 	andeq	r0, r0, sl
    huart->ErrorCode = HAL_UART_ERROR_NONE;
  f8:	00000000 	andeq	r0, r0, r0
    huart->gState  = HAL_UART_STATE_READY;
  fc:	00000010 	andeq	r0, r0, r0, lsl r0
    huart->RxState = HAL_UART_STATE_READY;
 100:	00000000 	andeq	r0, r0, r0
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 104:	00000010 	andeq	r0, r0, r0, lsl r0
    HAL_UART_AbortCpltCallback(huart);
 108:	00000000 	andeq	r0, r0, r0
 10c:	00000006 	andeq	r0, r0, r6
  uint32_t AbortCplt = 0x01U;
 110:	00000000 	andeq	r0, r0, r0
  if (AbortCplt == 0x01U)
 114:	0000000a 	andeq	r0, r0, sl
}
 118:	00000000 	andeq	r0, r0, r0
 11c:	00000010 	andeq	r0, r0, r0, lsl r0
 120:	00000000 	andeq	r0, r0, r0
 124:	00000010 	andeq	r0, r0, r0, lsl r0
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 128:	00000000 	andeq	r0, r0, r0
 12c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
 138:	00000074 	andeq	r0, r0, r4, ror r0
        EXTI->IMR &= ~((uint32_t)iocurrent);
 13c:	1acd0002 	bne	ff34014c <_estack+0xdf33ef14>
 140:	00040000 	andeq	r0, r4, r0
 144:	00000000 	andeq	r0, r0, r0
        EXTI->EMR &= ~((uint32_t)iocurrent);
 148:	08000788 	stmdaeq	r0, {r3, r7, r8, r9, sl}
 14c:	00000014 	andeq	r0, r0, r4, lsl r0
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 150:	00000000 	andeq	r0, r0, r0
 154:	00000014 	andeq	r0, r0, r4, lsl r0
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 158:	0800079c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl}
 15c:	00000014 	andeq	r0, r0, r4, lsl r0
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 160:	080007b0 	stmdaeq	r0, {r4, r5, r7, r8, r9, sl}
 164:	00000014 	andeq	r0, r0, r4, lsl r0
 168:	080007c4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl}
 16c:	00000014 	andeq	r0, r0, r4, lsl r0
 170:	080007d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl}
}
 174:	00000002 	andeq	r0, r0, r2
 178:	080007da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, sl}
 17c:	00000002 	andeq	r0, r0, r2
 180:	080007dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl}
}
 184:	00000002 	andeq	r0, r0, r2
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 188:	080007de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, r9, sl}
 18c:	00000008 	andeq	r0, r0, r8
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 190:	080007e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl}
 194:	00000010 	andeq	r0, r0, r0, lsl r0
 198:	080007f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl}
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 19c:	00000018 	andeq	r0, r0, r8, lsl r0
 1a0:	08000810 	stmdaeq	r0, {r4, fp}
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 1a4:	00000018 	andeq	r0, r0, r8, lsl r0
	...
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 1b0:	0000001c 	andeq	r0, r0, ip, lsl r0
 1b4:	24900002 	ldrcs	r0, [r0], #2
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 1b8:	00040000 	andeq	r0, r4, r0
 1bc:	00000000 	andeq	r0, r0, r0
 1c0:	08000828 	stmdaeq	r0, {r3, r5, fp}
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
 1c4:	0000004c 	andeq	r0, r0, ip, asr #32
	...
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 1d0:	0000002c 	andeq	r0, r0, ip, lsr #32
 1d4:	27980002 	ldrcs	r0, [r8, r2]
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 1d8:	00040000 	andeq	r0, r4, r0
 1dc:	00000000 	andeq	r0, r0, r0
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 1e0:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
 1e4:	00000034 	andeq	r0, r0, r4, lsr r0
 1e8:	080008a8 	stmdaeq	r0, {r3, r5, r7, fp}
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 1ec:	00000080 	andeq	r0, r0, r0, lsl #1
 1f0:	00000000 	andeq	r0, r0, r0
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 1f4:	00000034 	andeq	r0, r0, r4, lsr r0
	...
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 200:	0000001c 	andeq	r0, r0, ip, lsl r0
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 204:	35000002 	strcc	r0, [r0, #-2]
 208:	00040000 	andeq	r0, r4, r0
 20c:	00000000 	andeq	r0, r0, r0
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 210:	08000928 	stmdaeq	r0, {r3, r5, r8, fp}
 214:	00000038 	andeq	r0, r0, r8, lsr r0
	...
          hdma->Init.Mode                | hdma->Init.Priority;
 220:	00000204 	andeq	r0, r0, r4, lsl #4
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 224:	37eb0002 	strbcc	r0, [fp, r2]!
 228:	00040000 	andeq	r0, r4, r0
	...
  tmp |= hdma->Init.FIFOMode;
 234:	00000020 	andeq	r0, r0, r0, lsr #32
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 238:	08000960 	stmdaeq	r0, {r5, r6, r8, fp}
    tmp |= hdma->Init.FIFOThreshold;
 23c:	0000005c 	andeq	r0, r0, ip, asr r0
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 240:	080009bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, fp}
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 244:	00000060 	andeq	r0, r0, r0, rrx
 248:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
  hdma->Instance->FCR = tmp;
 24c:	00000174 	andeq	r0, r0, r4, ror r1
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 250:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 254:	0000008a 	andeq	r0, r0, sl, lsl #1
 258:	00000000 	andeq	r0, r0, r0
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 25c:	00000002 	andeq	r0, r0, r2
  hdma->State = HAL_DMA_STATE_READY;
 260:	08000c1c 	stmdaeq	r0, {r2, r3, r4, sl, fp}
 264:	0000012c 	andeq	r0, r0, ip, lsr #2
  return HAL_OK;
 268:	00000000 	andeq	r0, r0, r0
 26c:	000000e0 	andeq	r0, r0, r0, ror #1
 270:	00000000 	andeq	r0, r0, r0
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 274:	000000fc 	strdeq	r0, [r0], -ip
 278:	00000000 	andeq	r0, r0, r0
 27c:	00000124 	andeq	r0, r0, r4, lsr #2
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 280:	00000000 	andeq	r0, r0, r0
        hdma->State = HAL_DMA_STATE_READY;
 284:	00000002 	andeq	r0, r0, r2
        return HAL_ERROR; 
 288:	00000000 	andeq	r0, r0, r0
    return HAL_ERROR;
 28c:	00000078 	andeq	r0, r0, r8, ror r0
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 290:	08000d48 	stmdaeq	r0, {r3, r6, r8, sl, fp}
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 294:	000000cc 	andeq	r0, r0, ip, asr #1
 298:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
 29c:	000000d2 	ldrdeq	r0, [r0], -r2
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 2a0:	00000000 	andeq	r0, r0, r0
 2a4:	00000038 	andeq	r0, r0, r8, lsr r0
 2a8:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 2ac:	00000084 	andeq	r0, r0, r4, lsl #1
 2b0:	00000000 	andeq	r0, r0, r0
 2b4:	00000094 	muleq	r0, r4, r0
          return HAL_TIMEOUT;
 2b8:	00000000 	andeq	r0, r0, r0
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 2bc:	00000096 	muleq	r0, r6, r0
 2c0:	00000000 	andeq	r0, r0, r0
 2c4:	00000084 	andeq	r0, r0, r4, lsl #1
    FlagStatus       pwrclkchanged = RESET;
 2c8:	00000000 	andeq	r0, r0, r0
      SET_BIT(PWR->CR, PWR_CR_DBP);
 2cc:	00000120 	andeq	r0, r0, r0, lsr #2
 2d0:	00000000 	andeq	r0, r0, r0
 2d4:	00000004 	andeq	r0, r0, r4
      tickstart = HAL_GetTick();
 2d8:	00000000 	andeq	r0, r0, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 2dc:	000000f2 	strdeq	r0, [r0], -r2
 2e0:	00000000 	andeq	r0, r0, r0
 2e4:	0000006c 	andeq	r0, r0, ip, rrx
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 2e8:	00000000 	andeq	r0, r0, r0
 2ec:	000000a6 	andeq	r0, r0, r6, lsr #1
          return HAL_TIMEOUT;
 2f0:	08000e14 	stmdaeq	r0, {r2, r4, r9, sl, fp}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 2f4:	00000002 	andeq	r0, r0, r2
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	0000004c 	andeq	r0, r0, ip, asr #32
 300:	08000e16 	stmdaeq	r0, {r1, r2, r4, r9, sl, fp}
 304:	0000001a 	andeq	r0, r0, sl, lsl r0
 308:	00000000 	andeq	r0, r0, r0
 30c:	00000002 	andeq	r0, r0, r2
 310:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
 314:	0000000a 	andeq	r0, r0, sl
 318:	08000e30 	stmdaeq	r0, {r4, r5, r9, sl, fp}
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 31c:	00000002 	andeq	r0, r0, r2
 320:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 324:	00000002 	andeq	r0, r0, r2
 328:	08000e32 	stmdaeq	r0, {r1, r4, r5, r9, sl, fp}
 32c:	00000002 	andeq	r0, r0, r2
 330:	00000000 	andeq	r0, r0, r0
          return HAL_TIMEOUT;
 334:	00000058 	andeq	r0, r0, r8, asr r0
    if(pwrclkchanged == SET)
 338:	08000e34 	stmdaeq	r0, {r2, r4, r5, r9, sl, fp}
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 33c:	00000010 	andeq	r0, r0, r0, lsl r0
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 340:	00000000 	andeq	r0, r0, r0
 344:	00000002 	andeq	r0, r0, r2
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 348:	00000000 	andeq	r0, r0, r0
 34c:	00000124 	andeq	r0, r0, r4, lsr #2
 350:	00000000 	andeq	r0, r0, r0
 354:	0000002c 	andeq	r0, r0, ip, lsr #32
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 358:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 35c:	0000002c 	andeq	r0, r0, ip, lsr #32
 360:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 364:	00000002 	andeq	r0, r0, r2
 368:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 36c:	00000080 	andeq	r0, r0, r0, lsl #1
 370:	00000000 	andeq	r0, r0, r0
 374:	00000014 	andeq	r0, r0, r4, lsl r0
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 378:	00000000 	andeq	r0, r0, r0
 37c:	00000002 	andeq	r0, r0, r2
 380:	00000000 	andeq	r0, r0, r0
 384:	000000bc 	strheq	r0, [r0], -ip
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 388:	00000000 	andeq	r0, r0, r0
 38c:	00000016 	andeq	r0, r0, r6, lsl r0
        __HAL_RCC_PLL_DISABLE();
 390:	08000e44 	stmdaeq	r0, {r2, r6, r9, sl, fp}
 394:	00000002 	andeq	r0, r0, r2
        tickstart = HAL_GetTick();
 398:	08000e46 	stmdaeq	r0, {r1, r2, r6, r9, sl, fp}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 39c:	000000e6 	andeq	r0, r0, r6, ror #1
 3a0:	08000f2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, fp}
 3a4:	00000288 	andeq	r0, r0, r8, lsl #5
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 3a8:	00000000 	andeq	r0, r0, r0
 3ac:	0000001e 	andeq	r0, r0, lr, lsl r0
            return HAL_TIMEOUT;
 3b0:	00000000 	andeq	r0, r0, r0
      __HAL_RCC_PWR_CLK_DISABLE();
 3b4:	0000009a 	muleq	r0, sl, r0
 3b8:	00000000 	andeq	r0, r0, r0
 3bc:	00000084 	andeq	r0, r0, r4, lsl #1
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 3c0:	00000000 	andeq	r0, r0, r0
 3c4:	00000088 	andeq	r0, r0, r8, lsl #1
 3c8:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 3cc:	00000088 	andeq	r0, r0, r8, lsl #1
 3d0:	00000000 	andeq	r0, r0, r0
 3d4:	00000036 	andeq	r0, r0, r6, lsr r0
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 3d8:	00000000 	andeq	r0, r0, r0
 3dc:	00000036 	andeq	r0, r0, r6, lsr r0
 3e0:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 3e4:	0000000c 	andeq	r0, r0, ip
 3e8:	00000000 	andeq	r0, r0, r0
 3ec:	00000004 	andeq	r0, r0, r4
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 3f0:	00000000 	andeq	r0, r0, r0
 3f4:	00000036 	andeq	r0, r0, r6, lsr r0
 3f8:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 3fc:	00000026 	andeq	r0, r0, r6, lsr #32
 400:	00000000 	andeq	r0, r0, r0
 404:	00000066 	andeq	r0, r0, r6, rrx
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 408:	00000000 	andeq	r0, r0, r0
 40c:	000000a4 	andeq	r0, r0, r4, lsr #1
 410:	00000000 	andeq	r0, r0, r0
 414:	00000026 	andeq	r0, r0, r6, lsr #32
 418:	00000000 	andeq	r0, r0, r0
 41c:	00000066 	andeq	r0, r0, r6, rrx
	...
        __HAL_RCC_PLL_ENABLE();
 428:	00000084 	andeq	r0, r0, r4, lsl #1
 42c:	7e190002 	cdpvc	0, 1, cr0, cr9, cr2, {0}
        tickstart = HAL_GetTick();
 430:	00040000 	andeq	r0, r4, r0
	...
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 43c:	00000004 	andeq	r0, r0, r4
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 440:	00000000 	andeq	r0, r0, r0
 444:	000004fc 	strdeq	r0, [r0], -ip
            return HAL_TIMEOUT;
 448:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
 44c:	00000118 	andeq	r0, r0, r8, lsl r1
        __HAL_RCC_PLL_DISABLE();
 450:	00000000 	andeq	r0, r0, r0
 454:	0000000c 	andeq	r0, r0, ip
        tickstart = HAL_GetTick();
 458:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 45c:	0000000c 	andeq	r0, r0, ip
 460:	00000000 	andeq	r0, r0, r0
 464:	000000d4 	ldrdeq	r0, [r0], -r4
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 468:	00000000 	andeq	r0, r0, r0
 46c:	0000021c 	andeq	r0, r0, ip, lsl r2
            return HAL_TIMEOUT;
 470:	080011b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, ip}
  return HAL_OK;
 474:	0000000c 	andeq	r0, r0, ip
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 478:	080011c0 	stmdaeq	r0, {r6, r7, r8, ip}
        pll_config = RCC->PLLCFGR;
 47c:	00000020 	andeq	r0, r0, r0, lsr #32
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 480:	080011e0 	stmdaeq	r0, {r5, r6, r7, r8, ip}
 484:	00000020 	andeq	r0, r0, r0, lsr #32
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 488:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 48c:	000000cc 	andeq	r0, r0, ip, asr #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 490:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 494:	0000003c 	andeq	r0, r0, ip, lsr r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 498:	00000000 	andeq	r0, r0, r0
 49c:	00000002 	andeq	r0, r0, r2
 4a0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4a4:	00000020 	andeq	r0, r0, r0, lsr #32
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4b0:	00000054 	andeq	r0, r0, r4, asr r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 4b4:	8c9c0002 	ldchi	0, cr0, [ip], {2}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4b8:	00040000 	andeq	r0, r4, r0
 4bc:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
 4c0:	08001200 	stmdaeq	r0, {r9, ip}
}
 4c4:	000002e8 	andeq	r0, r0, r8, ror #5
        return HAL_ERROR;
 4c8:	00000000 	andeq	r0, r0, r0
        return HAL_ERROR;
 4cc:	00000184 	andeq	r0, r0, r4, lsl #3
}
 4d0:	00000000 	andeq	r0, r0, r0
        return HAL_ERROR;
 4d4:	00000028 	andeq	r0, r0, r8, lsr #32
          return HAL_ERROR;
 4d8:	00000000 	andeq	r0, r0, r0
 4dc:	00000038 	andeq	r0, r0, r8, lsr r0
 4e0:	00000000 	andeq	r0, r0, r0
 4e4:	0000002c 	andeq	r0, r0, ip, lsr #32
 4e8:	00000000 	andeq	r0, r0, r0
 4ec:	00000048 	andeq	r0, r0, r8, asr #32
 4f0:	00000000 	andeq	r0, r0, r0
 4f4:	00000002 	andeq	r0, r0, r2
 4f8:	00000000 	andeq	r0, r0, r0
 4fc:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
 508:	0000008c 	andeq	r0, r0, ip, lsl #1
 50c:	967a0002 	ldrbtls	r0, [sl], -r2
 510:	00040000 	andeq	r0, r4, r0
	...
 51c:	0000002c 	andeq	r0, r0, ip, lsr #32
 520:	00000000 	andeq	r0, r0, r0
 524:	00000044 	andeq	r0, r0, r4, asr #32
 528:	00000000 	andeq	r0, r0, r0
 52c:	0000008e 	andeq	r0, r0, lr, lsl #1
 530:	00000000 	andeq	r0, r0, r0
 534:	0000028e 	andeq	r0, r0, lr, lsl #5
 538:	00000000 	andeq	r0, r0, r0
 53c:	000000dc 	ldrdeq	r0, [r0], -ip
 540:	00000000 	andeq	r0, r0, r0
 544:	00000078 	andeq	r0, r0, r8, ror r0
 548:	00000000 	andeq	r0, r0, r0
 54c:	00000098 	muleq	r0, r8, r0
 550:	080014e8 	stmdaeq	r0, {r3, r5, r6, r7, sl, ip}
 554:	00000094 	muleq	r0, r4, r0
 558:	0800157c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip}
 55c:	00000026 	andeq	r0, r0, r6, lsr #32
 560:	00000000 	andeq	r0, r0, r0
 564:	00000128 	andeq	r0, r0, r8, lsr #2
 568:	00000000 	andeq	r0, r0, r0
 56c:	000001dc 	ldrdeq	r0, [r0], -ip
 570:	00000000 	andeq	r0, r0, r0
 574:	0000005a 	andeq	r0, r0, sl, asr r0
 578:	00000000 	andeq	r0, r0, r0
 57c:	0000006e 	andeq	r0, r0, lr, rrx
 580:	00000000 	andeq	r0, r0, r0
 584:	00000006 	andeq	r0, r0, r6
 588:	00000000 	andeq	r0, r0, r0
 58c:	00000004 	andeq	r0, r0, r4
	...
 598:	000000ac 	andeq	r0, r0, ip, lsr #1
 59c:	a4510002 	ldrbge	r0, [r1], #-2
 5a0:	00040000 	andeq	r0, r4, r0
 5a4:	00000000 	andeq	r0, r0, r0
 5a8:	080015a4 	stmdaeq	r0, {r2, r5, r7, r8, sl, ip}
 5ac:	0000003c 	andeq	r0, r0, ip, lsr r0
 5b0:	080015e0 	stmdaeq	r0, {r5, r6, r7, r8, sl, ip}
 5b4:	0000008c 	andeq	r0, r0, ip, lsl #1
 5b8:	0800166c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl, ip}
 5bc:	00000030 	andeq	r0, r0, r0, lsr r0
 5c0:	00000000 	andeq	r0, r0, r0
 5c4:	00000038 	andeq	r0, r0, r8, lsr r0
 5c8:	00000000 	andeq	r0, r0, r0
 5cc:	00000024 	andeq	r0, r0, r4, lsr #32
 5d0:	0800169c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl, ip}
 5d4:	00000028 	andeq	r0, r0, r8, lsr #32
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	0000001c 	andeq	r0, r0, ip, lsl r0
 5e0:	00000000 	andeq	r0, r0, r0
 5e4:	00000020 	andeq	r0, r0, r0, lsr #32
 5e8:	00000000 	andeq	r0, r0, r0
 5ec:	00000128 	andeq	r0, r0, r8, lsr #2
 5f0:	00000000 	andeq	r0, r0, r0
 5f4:	00000006 	andeq	r0, r0, r6
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	00000010 	andeq	r0, r0, r0, lsl r0
 600:	00000000 	andeq	r0, r0, r0
 604:	0000007c 	andeq	r0, r0, ip, ror r0
 608:	00000000 	andeq	r0, r0, r0
 60c:	00000034 	andeq	r0, r0, r4, lsr r0
 610:	00000000 	andeq	r0, r0, r0
 614:	0000003c 	andeq	r0, r0, ip, lsr r0
 618:	00000000 	andeq	r0, r0, r0
 61c:	00000034 	andeq	r0, r0, r4, lsr r0
 620:	00000000 	andeq	r0, r0, r0
 624:	0000003c 	andeq	r0, r0, ip, lsr r0
 628:	00000000 	andeq	r0, r0, r0
 62c:	0000003c 	andeq	r0, r0, ip, lsr r0
 630:	00000000 	andeq	r0, r0, r0
 634:	00000002 	andeq	r0, r0, r2
 638:	00000000 	andeq	r0, r0, r0
 63c:	00000008 	andeq	r0, r0, r8
	...
 648:	000000ec 	andeq	r0, r0, ip, ror #1
 64c:	b8790002 	ldmdalt	r9!, {r1}^
 650:	00040000 	andeq	r0, r4, r0
	...
 65c:	00000002 	andeq	r0, r0, r2
 660:	00000000 	andeq	r0, r0, r0
 664:	00000002 	andeq	r0, r0, r2
 668:	00000000 	andeq	r0, r0, r0
 66c:	0000003c 	andeq	r0, r0, ip, lsr r0
 670:	080016c4 	stmdaeq	r0, {r2, r6, r7, r9, sl, ip}
 674:	0000004c 	andeq	r0, r0, ip, asr #32
 678:	08001710 	stmdaeq	r0, {r4, r8, r9, sl, ip}
 67c:	00000034 	andeq	r0, r0, r4, lsr r0
 680:	08001744 	stmdaeq	r0, {r2, r6, r8, r9, sl, ip}
 684:	00000018 	andeq	r0, r0, r8, lsl r0
 688:	0800175c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl, ip}
 68c:	0000000c 	andeq	r0, r0, ip
 690:	00000000 	andeq	r0, r0, r0
 694:	0000000c 	andeq	r0, r0, ip
 698:	00000000 	andeq	r0, r0, r0
 69c:	00000048 	andeq	r0, r0, r8, asr #32
 6a0:	00000000 	andeq	r0, r0, r0
 6a4:	0000000c 	andeq	r0, r0, ip
 6a8:	08001768 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl, ip}
 6ac:	00000028 	andeq	r0, r0, r8, lsr #32
 6b0:	00000000 	andeq	r0, r0, r0
 6b4:	0000000e 	andeq	r0, r0, lr
 6b8:	00000000 	andeq	r0, r0, r0
 6bc:	0000000e 	andeq	r0, r0, lr
 6c0:	00000000 	andeq	r0, r0, r0
 6c4:	00000008 	andeq	r0, r0, r8
 6c8:	00000000 	andeq	r0, r0, r0
 6cc:	0000000c 	andeq	r0, r0, ip
 6d0:	00000000 	andeq	r0, r0, r0
 6d4:	00000010 	andeq	r0, r0, r0, lsl r0
 6d8:	00000000 	andeq	r0, r0, r0
 6dc:	00000010 	andeq	r0, r0, r0, lsl r0
 6e0:	00000000 	andeq	r0, r0, r0
 6e4:	00000010 	andeq	r0, r0, r0, lsl r0
 6e8:	00000000 	andeq	r0, r0, r0
 6ec:	00000010 	andeq	r0, r0, r0, lsl r0
 6f0:	00000000 	andeq	r0, r0, r0
 6f4:	00000010 	andeq	r0, r0, r0, lsl r0
 6f8:	00000000 	andeq	r0, r0, r0
 6fc:	00000010 	andeq	r0, r0, r0, lsl r0
 700:	00000000 	andeq	r0, r0, r0
 704:	00000010 	andeq	r0, r0, r0, lsl r0
 708:	00000000 	andeq	r0, r0, r0
 70c:	00000010 	andeq	r0, r0, r0, lsl r0
 710:	00000000 	andeq	r0, r0, r0
 714:	00000010 	andeq	r0, r0, r0, lsl r0
 718:	00000000 	andeq	r0, r0, r0
 71c:	0000000c 	andeq	r0, r0, ip
 720:	00000000 	andeq	r0, r0, r0
 724:	0000000c 	andeq	r0, r0, ip
 728:	00000000 	andeq	r0, r0, r0
 72c:	0000000c 	andeq	r0, r0, ip
	...
 738:	00000024 	andeq	r0, r0, r4, lsr #32
 73c:	c37b0002 	cmngt	fp, #2
 740:	00040000 	andeq	r0, r4, r0
 744:	00000000 	andeq	r0, r0, r0
 748:	08001790 	stmdaeq	r0, {r4, r7, r8, r9, sl, ip}
 74c:	00000014 	andeq	r0, r0, r4, lsl r0
 750:	00000000 	andeq	r0, r0, r0
 754:	000000a0 	andeq	r0, r0, r0, lsr #1
	...
 760:	00000054 	andeq	r0, r0, r4, asr r0
 764:	c92e0002 	stmdbgt	lr!, {r1}
 768:	00040000 	andeq	r0, r4, r0
 76c:	00000000 	andeq	r0, r0, r0
 770:	080017a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, ip}
 774:	0000002c 	andeq	r0, r0, ip, lsr #32
 778:	080017d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, ip}
 77c:	00000036 	andeq	r0, r0, r6, lsr r0
 780:	08001808 	stmdaeq	r0, {r3, fp, ip}
 784:	00000018 	andeq	r0, r0, r8, lsl r0
 788:	08001820 	stmdaeq	r0, {r5, fp, ip}
 78c:	00000050 	andeq	r0, r0, r0, asr r0
 790:	08001870 	stmdaeq	r0, {r4, r5, r6, fp, ip}
 794:	0000007c 	andeq	r0, r0, ip, ror r0
 798:	080018ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip}
 79c:	00000184 	andeq	r0, r0, r4, lsl #3
 7a0:	00000000 	andeq	r0, r0, r0
 7a4:	00000006 	andeq	r0, r0, r6
 7a8:	00000000 	andeq	r0, r0, r0
 7ac:	00000008 	andeq	r0, r0, r8
	...
 7b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 7bc:	d1e00002 	mvnle	r0, r2
 7c0:	00040000 	andeq	r0, r4, r0
 7c4:	00000000 	andeq	r0, r0, r0
 7c8:	08001a70 	stmdaeq	r0, {r4, r5, r6, r9, fp, ip}
 7cc:	00000088 	andeq	r0, r0, r8, lsl #1
	...
 7d8:	00000024 	andeq	r0, r0, r4, lsr #32
 7dc:	d3a20002 			; <UNDEFINED> instruction: 0xd3a20002
 7e0:	00040000 	andeq	r0, r4, r0
 7e4:	00000000 	andeq	r0, r0, r0
 7e8:	08001af8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, fp, ip}
 7ec:	00000050 	andeq	r0, r0, r0, asr r0
 7f0:	08001b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip}
 7f4:	00000002 	andeq	r0, r0, r2
	...
 800:	0000001c 	andeq	r0, r0, ip, lsl r0
 804:	d3c40002 	bicle	r0, r4, #2
 808:	00040000 	andeq	r0, r4, r0
 80c:	00000000 	andeq	r0, r0, r0
 810:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
 814:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
   4:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
  errno = ENOMEM;
   8:	00000001 	andeq	r0, r0, r1
}
   c:	00000001 	andeq	r0, r0, r1
  10:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
  1c:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
  24:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
}
  28:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
  2c:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
  30:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
    if (status != HAL_OK)
  34:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
      uwTickFreq = prevTickFreq;
  38:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
  3c:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
  40:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
  44:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
      if (pllsource != 0)
  48:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
  4c:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  50:	00000001 	andeq	r0, r0, r1
  54:	00000001 	andeq	r0, r0, r1
	...
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
  60:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
  64:	08000734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl}
	...
      SystemCoreClock = pllvco/pllp;
  70:	00000001 	andeq	r0, r0, r1
      break;
  74:	00000001 	andeq	r0, r0, r1
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
  78:	00000001 	andeq	r0, r0, r1
  7c:	00000001 	andeq	r0, r0, r1
  80:	00000001 	andeq	r0, r0, r1
  84:	00000001 	andeq	r0, r0, r1
  88:	00000001 	andeq	r0, r0, r1
  8c:	00000001 	andeq	r0, r0, r1
  90:	08000734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl}
  94:	08000754 	stmdaeq	r0, {r2, r4, r6, r8, r9, sl}
  98:	08000754 	stmdaeq	r0, {r2, r4, r6, r8, r9, sl}
  9c:	08000770 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl}
  a0:	08000770 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl}
  a4:	08000776 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, sl}
  a8:	08000776 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, sl}
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
  ac:	08000780 	stmdaeq	r0, {r7, r8, r9, sl}
  b0:	08000780 	stmdaeq	r0, {r7, r8, r9, sl}
      huart->hdmatx->XferAbortCallback = NULL;
  b4:	08000784 	stmdaeq	r0, {r2, r7, r8, r9, sl}
      huart->hdmarx->XferAbortCallback = NULL;
  b8:	08000784 	stmdaeq	r0, {r2, r7, r8, r9, sl}
  bc:	08000788 	stmdaeq	r0, {r3, r7, r8, r9, sl}
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
  c0:	00000001 	andeq	r0, r0, r1
  c4:	00000001 	andeq	r0, r0, r1
  c8:	00000001 	andeq	r0, r0, r1
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  cc:	00000001 	andeq	r0, r0, r1
  d0:	00000001 	andeq	r0, r0, r1
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
  d4:	00000001 	andeq	r0, r0, r1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  d8:	00000001 	andeq	r0, r0, r1
  dc:	00000001 	andeq	r0, r0, r1
  e0:	00000001 	andeq	r0, r0, r1
    if (huart->hdmarx != NULL)
  e4:	00000001 	andeq	r0, r0, r1
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
  e8:	00000001 	andeq	r0, r0, r1
        huart->hdmarx->XferAbortCallback = NULL;
  ec:	00000001 	andeq	r0, r0, r1
  f0:	00000001 	andeq	r0, r0, r1
    huart->TxXferCount = 0x00U;
  f4:	00000001 	andeq	r0, r0, r1
    huart->ErrorCode = HAL_UART_ERROR_NONE;
  f8:	00000001 	andeq	r0, r0, r1
    huart->gState  = HAL_UART_STATE_READY;
  fc:	00000001 	andeq	r0, r0, r1
	...
    HAL_UART_AbortCpltCallback(huart);
 108:	08000788 	stmdaeq	r0, {r3, r7, r8, r9, sl}
 10c:	0800079c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl}
  uint32_t AbortCplt = 0x01U;
 110:	00000001 	andeq	r0, r0, r1
  if (AbortCplt == 0x01U)
 114:	00000001 	andeq	r0, r0, r1
}
 118:	0800079c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl}
 11c:	080007b0 	stmdaeq	r0, {r4, r5, r7, r8, r9, sl}
 120:	080007b0 	stmdaeq	r0, {r4, r5, r7, r8, r9, sl}
 124:	080007c4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 128:	080007c4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl}
 12c:	080007d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl}
 130:	080007d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl}
 134:	080007da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, sl}
 138:	080007da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, sl}
        EXTI->IMR &= ~((uint32_t)iocurrent);
 13c:	080007dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl}
 140:	080007dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl}
 144:	080007de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, r9, sl}
        EXTI->EMR &= ~((uint32_t)iocurrent);
 148:	080007de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, r9, sl}
 14c:	080007e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, r9, sl}
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 150:	080007e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl}
 154:	080007f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl}
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 158:	080007f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl}
 15c:	08000810 	stmdaeq	r0, {r4, fp}
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 160:	08000810 	stmdaeq	r0, {r4, fp}
 164:	08000828 	stmdaeq	r0, {r3, r5, fp}
	...
 170:	08000828 	stmdaeq	r0, {r3, r5, fp}
}
 174:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
	...
 180:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
}
 184:	080008a8 	stmdaeq	r0, {r3, r5, r7, fp}
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 188:	080008a8 	stmdaeq	r0, {r3, r5, r7, fp}
 18c:	08000928 	stmdaeq	r0, {r3, r5, r8, fp}
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 190:	00000001 	andeq	r0, r0, r1
 194:	00000001 	andeq	r0, r0, r1
	...
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 1a0:	08000928 	stmdaeq	r0, {r3, r5, r8, fp}
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 1a4:	08000960 	stmdaeq	r0, {r5, r6, r8, fp}
	...
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 1b0:	00000001 	andeq	r0, r0, r1
 1b4:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
	...
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
 1c8:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	08000960 	stmdaeq	r0, {r5, r6, r8, fp}
 1d4:	080009bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, fp}
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 1d8:	080009bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, fp}
 1dc:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 1e0:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
 1e4:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
 1e8:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 1ec:	08000c1a 	stmdaeq	r0, {r1, r3, r4, sl, fp}
 1f0:	00000001 	andeq	r0, r0, r1
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 1f4:	00000001 	andeq	r0, r0, r1
 1f8:	08000c1c 	stmdaeq	r0, {r2, r3, r4, sl, fp}
 1fc:	08000d48 	stmdaeq	r0, {r3, r6, r8, sl, fp}
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 200:	00000001 	andeq	r0, r0, r1
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 204:	00000001 	andeq	r0, r0, r1
 208:	00000001 	andeq	r0, r0, r1
 20c:	00000001 	andeq	r0, r0, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 210:	00000001 	andeq	r0, r0, r1
 214:	00000001 	andeq	r0, r0, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 218:	00000001 	andeq	r0, r0, r1
 21c:	00000001 	andeq	r0, r0, r1
          hdma->Init.Mode                | hdma->Init.Priority;
 220:	00000001 	andeq	r0, r0, r1
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 224:	00000001 	andeq	r0, r0, r1
 228:	08000d48 	stmdaeq	r0, {r3, r6, r8, sl, fp}
  tmp = hdma->Instance->FCR;
 22c:	08000e14 	stmdaeq	r0, {r2, r4, r9, sl, fp}
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 230:	00000001 	andeq	r0, r0, r1
  tmp |= hdma->Init.FIFOMode;
 234:	00000001 	andeq	r0, r0, r1
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 238:	00000001 	andeq	r0, r0, r1
    tmp |= hdma->Init.FIFOThreshold;
 23c:	00000001 	andeq	r0, r0, r1
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 240:	00000001 	andeq	r0, r0, r1
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 244:	00000001 	andeq	r0, r0, r1
 248:	00000001 	andeq	r0, r0, r1
  hdma->Instance->FCR = tmp;
 24c:	00000001 	andeq	r0, r0, r1
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 250:	00000001 	andeq	r0, r0, r1
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 254:	00000001 	andeq	r0, r0, r1
 258:	00000001 	andeq	r0, r0, r1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 25c:	00000001 	andeq	r0, r0, r1
  hdma->State = HAL_DMA_STATE_READY;
 260:	00000001 	andeq	r0, r0, r1
 264:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 268:	00000001 	andeq	r0, r0, r1
 26c:	00000001 	andeq	r0, r0, r1
 270:	00000001 	andeq	r0, r0, r1
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 274:	00000001 	andeq	r0, r0, r1
 278:	00000001 	andeq	r0, r0, r1
 27c:	00000001 	andeq	r0, r0, r1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 280:	00000001 	andeq	r0, r0, r1
        hdma->State = HAL_DMA_STATE_READY;
 284:	00000001 	andeq	r0, r0, r1
        return HAL_ERROR; 
 288:	08000e14 	stmdaeq	r0, {r2, r4, r9, sl, fp}
    return HAL_ERROR;
 28c:	08000e16 	stmdaeq	r0, {r1, r2, r4, r9, sl, fp}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 290:	00000001 	andeq	r0, r0, r1
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 294:	00000001 	andeq	r0, r0, r1
 298:	08000e16 	stmdaeq	r0, {r1, r2, r4, r9, sl, fp}
      tickstart = HAL_GetTick();
 29c:	08000e30 	stmdaeq	r0, {r4, r5, r9, sl, fp}
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 2a0:	00000001 	andeq	r0, r0, r1
 2a4:	00000001 	andeq	r0, r0, r1
 2a8:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 2ac:	00000001 	andeq	r0, r0, r1
 2b0:	08000e30 	stmdaeq	r0, {r4, r5, r9, sl, fp}
 2b4:	08000e32 	stmdaeq	r0, {r1, r4, r5, r9, sl, fp}
          return HAL_TIMEOUT;
 2b8:	00000001 	andeq	r0, r0, r1
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 2bc:	00000001 	andeq	r0, r0, r1
 2c0:	08000e32 	stmdaeq	r0, {r1, r4, r5, r9, sl, fp}
 2c4:	08000e34 	stmdaeq	r0, {r2, r4, r5, r9, sl, fp}
    FlagStatus       pwrclkchanged = RESET;
 2c8:	00000001 	andeq	r0, r0, r1
      SET_BIT(PWR->CR, PWR_CR_DBP);
 2cc:	00000001 	andeq	r0, r0, r1
 2d0:	08000e34 	stmdaeq	r0, {r2, r4, r5, r9, sl, fp}
 2d4:	08000e44 	stmdaeq	r0, {r2, r6, r9, sl, fp}
      tickstart = HAL_GetTick();
 2d8:	00000001 	andeq	r0, r0, r1
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 2dc:	00000001 	andeq	r0, r0, r1
 2e0:	00000001 	andeq	r0, r0, r1
 2e4:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 2e8:	00000001 	andeq	r0, r0, r1
 2ec:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
 2f0:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 2f4:	00000001 	andeq	r0, r0, r1
 2f8:	00000001 	andeq	r0, r0, r1
 2fc:	00000001 	andeq	r0, r0, r1
 300:	00000001 	andeq	r0, r0, r1
 304:	00000001 	andeq	r0, r0, r1
 308:	00000001 	andeq	r0, r0, r1
 30c:	00000001 	andeq	r0, r0, r1
 310:	00000001 	andeq	r0, r0, r1
      tickstart = HAL_GetTick();
 314:	00000001 	andeq	r0, r0, r1
 318:	00000001 	andeq	r0, r0, r1
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 31c:	00000001 	andeq	r0, r0, r1
 320:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 324:	00000001 	andeq	r0, r0, r1
 328:	08000e44 	stmdaeq	r0, {r2, r6, r9, sl, fp}
 32c:	08000e46 	stmdaeq	r0, {r1, r2, r6, r9, sl, fp}
 330:	08000e46 	stmdaeq	r0, {r1, r2, r6, r9, sl, fp}
          return HAL_TIMEOUT;
 334:	08000f2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, fp}
    if(pwrclkchanged == SET)
 338:	08000f2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, fp}
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 33c:	080011b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, ip}
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 340:	00000001 	andeq	r0, r0, r1
 344:	00000001 	andeq	r0, r0, r1
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 348:	00000001 	andeq	r0, r0, r1
 34c:	00000001 	andeq	r0, r0, r1
 350:	00000001 	andeq	r0, r0, r1
 354:	00000001 	andeq	r0, r0, r1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 358:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 35c:	00000001 	andeq	r0, r0, r1
 360:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 364:	00000001 	andeq	r0, r0, r1
 368:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 36c:	00000001 	andeq	r0, r0, r1
 370:	00000001 	andeq	r0, r0, r1
 374:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 378:	00000001 	andeq	r0, r0, r1
 37c:	00000001 	andeq	r0, r0, r1
 380:	00000001 	andeq	r0, r0, r1
 384:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 388:	00000001 	andeq	r0, r0, r1
 38c:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_DISABLE();
 390:	00000001 	andeq	r0, r0, r1
 394:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 398:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 39c:	00000001 	andeq	r0, r0, r1
 3a0:	00000001 	andeq	r0, r0, r1
 3a4:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 3a8:	00000001 	andeq	r0, r0, r1
 3ac:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
 3b0:	00000001 	andeq	r0, r0, r1
      __HAL_RCC_PWR_CLK_DISABLE();
 3b4:	00000001 	andeq	r0, r0, r1
	...
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 3c0:	00000001 	andeq	r0, r0, r1
 3c4:	00000001 	andeq	r0, r0, r1
 3c8:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 3cc:	00000001 	andeq	r0, r0, r1
	...
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 3d8:	00000001 	andeq	r0, r0, r1
 3dc:	00000001 	andeq	r0, r0, r1
 3e0:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 3e4:	00000001 	andeq	r0, r0, r1
 3e8:	00000001 	andeq	r0, r0, r1
 3ec:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 3f0:	00000001 	andeq	r0, r0, r1
 3f4:	00000001 	andeq	r0, r0, r1
 3f8:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 3fc:	00000001 	andeq	r0, r0, r1
 400:	00000001 	andeq	r0, r0, r1
 404:	00000001 	andeq	r0, r0, r1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 408:	00000001 	andeq	r0, r0, r1
 40c:	00000001 	andeq	r0, r0, r1
 410:	080011b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, ip}
 414:	080011c0 	stmdaeq	r0, {r6, r7, r8, ip}
 418:	080011c0 	stmdaeq	r0, {r6, r7, r8, ip}
 41c:	080011e0 	stmdaeq	r0, {r5, r6, r7, r8, ip}
 420:	080011e0 	stmdaeq	r0, {r5, r6, r7, r8, ip}
 424:	08001200 	stmdaeq	r0, {r9, ip}
        __HAL_RCC_PLL_ENABLE();
 428:	00000001 	andeq	r0, r0, r1
 42c:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
 430:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 434:	00000001 	andeq	r0, r0, r1
 438:	00000001 	andeq	r0, r0, r1
 43c:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 440:	00000001 	andeq	r0, r0, r1
 444:	00000001 	andeq	r0, r0, r1
	...
        __HAL_RCC_PLL_DISABLE();
 450:	08001200 	stmdaeq	r0, {r9, ip}
 454:	080014e8 	stmdaeq	r0, {r3, r5, r6, r7, sl, ip}
        tickstart = HAL_GetTick();
 458:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 45c:	00000001 	andeq	r0, r0, r1
 460:	00000001 	andeq	r0, r0, r1
 464:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 468:	00000001 	andeq	r0, r0, r1
 46c:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
 470:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 474:	00000001 	andeq	r0, r0, r1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 478:	00000001 	andeq	r0, r0, r1
        pll_config = RCC->PLLCFGR;
 47c:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 480:	00000001 	andeq	r0, r0, r1
 484:	00000001 	andeq	r0, r0, r1
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 488:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 48c:	00000001 	andeq	r0, r0, r1
	...
 498:	00000001 	andeq	r0, r0, r1
 49c:	00000001 	andeq	r0, r0, r1
 4a0:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4a4:	00000001 	andeq	r0, r0, r1
 4a8:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4ac:	00000001 	andeq	r0, r0, r1
 4b0:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 4b4:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4b8:	00000001 	andeq	r0, r0, r1
 4bc:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
 4c0:	00000001 	andeq	r0, r0, r1
}
 4c4:	00000001 	andeq	r0, r0, r1
        return HAL_ERROR;
 4c8:	00000001 	andeq	r0, r0, r1
        return HAL_ERROR;
 4cc:	00000001 	andeq	r0, r0, r1
}
 4d0:	080014e8 	stmdaeq	r0, {r3, r5, r6, r7, sl, ip}
        return HAL_ERROR;
 4d4:	0800157c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip}
          return HAL_ERROR;
 4d8:	0800157c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip}
 4dc:	080015a2 	stmdaeq	r0, {r1, r5, r7, r8, sl, ip}
 4e0:	00000001 	andeq	r0, r0, r1
 4e4:	00000001 	andeq	r0, r0, r1
 4e8:	00000001 	andeq	r0, r0, r1
 4ec:	00000001 	andeq	r0, r0, r1
 4f0:	00000001 	andeq	r0, r0, r1
 4f4:	00000001 	andeq	r0, r0, r1
 4f8:	00000001 	andeq	r0, r0, r1
 4fc:	00000001 	andeq	r0, r0, r1
 500:	00000001 	andeq	r0, r0, r1
 504:	00000001 	andeq	r0, r0, r1
 508:	00000001 	andeq	r0, r0, r1
 50c:	00000001 	andeq	r0, r0, r1
	...
 518:	080015f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl, ip}
 51c:	08001622 	stmdaeq	r0, {r1, r5, r9, sl, ip}
 520:	0800164c 	stmdaeq	r0, {r2, r3, r6, r9, sl, ip}
 524:	08001650 	stmdaeq	r0, {r4, r6, r9, sl, ip}
	...
 530:	08001622 	stmdaeq	r0, {r1, r5, r9, sl, ip}
 534:	08001636 	stmdaeq	r0, {r1, r2, r4, r5, r9, sl, ip}
 538:	08001650 	stmdaeq	r0, {r4, r6, r9, sl, ip}
 53c:	0800165c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, ip}
	...
 548:	00000001 	andeq	r0, r0, r1
 54c:	00000001 	andeq	r0, r0, r1
 550:	00000001 	andeq	r0, r0, r1
 554:	00000001 	andeq	r0, r0, r1
	...
 560:	00000001 	andeq	r0, r0, r1
 564:	00000001 	andeq	r0, r0, r1
 568:	00000001 	andeq	r0, r0, r1
 56c:	00000001 	andeq	r0, r0, r1
	...
 578:	00000001 	andeq	r0, r0, r1
 57c:	00000001 	andeq	r0, r0, r1
 580:	00000001 	andeq	r0, r0, r1
 584:	00000001 	andeq	r0, r0, r1
	...
 590:	00000001 	andeq	r0, r0, r1
 594:	00000001 	andeq	r0, r0, r1
 598:	00000001 	andeq	r0, r0, r1
 59c:	00000001 	andeq	r0, r0, r1
	...
 5a8:	080015a4 	stmdaeq	r0, {r2, r5, r7, r8, sl, ip}
 5ac:	080015e0 	stmdaeq	r0, {r5, r6, r7, r8, sl, ip}
 5b0:	080015e0 	stmdaeq	r0, {r5, r6, r7, r8, sl, ip}
 5b4:	0800166c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl, ip}
 5b8:	0800166c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl, ip}
 5bc:	0800169c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl, ip}
 5c0:	00000001 	andeq	r0, r0, r1
 5c4:	00000001 	andeq	r0, r0, r1
 5c8:	00000001 	andeq	r0, r0, r1
 5cc:	00000001 	andeq	r0, r0, r1
 5d0:	0800169c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl, ip}
 5d4:	080016c4 	stmdaeq	r0, {r2, r6, r7, r9, sl, ip}
 5d8:	00000001 	andeq	r0, r0, r1
 5dc:	00000001 	andeq	r0, r0, r1
 5e0:	00000001 	andeq	r0, r0, r1
 5e4:	00000001 	andeq	r0, r0, r1
 5e8:	00000001 	andeq	r0, r0, r1
 5ec:	00000001 	andeq	r0, r0, r1
 5f0:	00000001 	andeq	r0, r0, r1
 5f4:	00000001 	andeq	r0, r0, r1
 5f8:	00000001 	andeq	r0, r0, r1
 5fc:	00000001 	andeq	r0, r0, r1
 600:	00000001 	andeq	r0, r0, r1
 604:	00000001 	andeq	r0, r0, r1
 608:	00000001 	andeq	r0, r0, r1
 60c:	00000001 	andeq	r0, r0, r1
 610:	00000001 	andeq	r0, r0, r1
 614:	00000001 	andeq	r0, r0, r1
 618:	00000001 	andeq	r0, r0, r1
 61c:	00000001 	andeq	r0, r0, r1
 620:	00000001 	andeq	r0, r0, r1
 624:	00000001 	andeq	r0, r0, r1
 628:	00000001 	andeq	r0, r0, r1
 62c:	00000001 	andeq	r0, r0, r1
 630:	00000001 	andeq	r0, r0, r1
 634:	00000001 	andeq	r0, r0, r1
 638:	00000001 	andeq	r0, r0, r1
 63c:	00000001 	andeq	r0, r0, r1
	...
 648:	00000001 	andeq	r0, r0, r1
 64c:	00000001 	andeq	r0, r0, r1
 650:	00000001 	andeq	r0, r0, r1
 654:	00000001 	andeq	r0, r0, r1
 658:	00000001 	andeq	r0, r0, r1
 65c:	00000001 	andeq	r0, r0, r1
 660:	080016c4 	stmdaeq	r0, {r2, r6, r7, r9, sl, ip}
 664:	08001710 	stmdaeq	r0, {r4, r8, r9, sl, ip}
 668:	08001710 	stmdaeq	r0, {r4, r8, r9, sl, ip}
 66c:	08001744 	stmdaeq	r0, {r2, r6, r8, r9, sl, ip}
 670:	08001744 	stmdaeq	r0, {r2, r6, r8, r9, sl, ip}
 674:	0800175c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl, ip}
 678:	0800175c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl, ip}
 67c:	08001768 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl, ip}
 680:	00000001 	andeq	r0, r0, r1
 684:	00000001 	andeq	r0, r0, r1
 688:	00000001 	andeq	r0, r0, r1
 68c:	00000001 	andeq	r0, r0, r1
 690:	00000001 	andeq	r0, r0, r1
 694:	00000001 	andeq	r0, r0, r1
 698:	08001768 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl, ip}
 69c:	08001790 	stmdaeq	r0, {r4, r7, r8, r9, sl, ip}
 6a0:	00000001 	andeq	r0, r0, r1
 6a4:	00000001 	andeq	r0, r0, r1
 6a8:	00000001 	andeq	r0, r0, r1
 6ac:	00000001 	andeq	r0, r0, r1
 6b0:	00000001 	andeq	r0, r0, r1
 6b4:	00000001 	andeq	r0, r0, r1
 6b8:	00000001 	andeq	r0, r0, r1
 6bc:	00000001 	andeq	r0, r0, r1
 6c0:	00000001 	andeq	r0, r0, r1
 6c4:	00000001 	andeq	r0, r0, r1
 6c8:	00000001 	andeq	r0, r0, r1
 6cc:	00000001 	andeq	r0, r0, r1
 6d0:	00000001 	andeq	r0, r0, r1
 6d4:	00000001 	andeq	r0, r0, r1
 6d8:	00000001 	andeq	r0, r0, r1
 6dc:	00000001 	andeq	r0, r0, r1
 6e0:	00000001 	andeq	r0, r0, r1
 6e4:	00000001 	andeq	r0, r0, r1
 6e8:	00000001 	andeq	r0, r0, r1
 6ec:	00000001 	andeq	r0, r0, r1
 6f0:	00000001 	andeq	r0, r0, r1
 6f4:	00000001 	andeq	r0, r0, r1
 6f8:	00000001 	andeq	r0, r0, r1
 6fc:	00000001 	andeq	r0, r0, r1
 700:	00000001 	andeq	r0, r0, r1
 704:	00000001 	andeq	r0, r0, r1
 708:	00000001 	andeq	r0, r0, r1
 70c:	00000001 	andeq	r0, r0, r1
 710:	00000001 	andeq	r0, r0, r1
 714:	00000001 	andeq	r0, r0, r1
 718:	00000001 	andeq	r0, r0, r1
 71c:	00000001 	andeq	r0, r0, r1
	...
 728:	08001790 	stmdaeq	r0, {r4, r7, r8, r9, sl, ip}
 72c:	080017a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, ip}
 730:	00000001 	andeq	r0, r0, r1
 734:	00000001 	andeq	r0, r0, r1
	...
 740:	080017a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, ip}
 744:	080017d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, ip}
 748:	080017d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, ip}
 74c:	08001806 	stmdaeq	r0, {r1, r2, fp, ip}
 750:	08001808 	stmdaeq	r0, {r3, fp, ip}
 754:	08001820 	stmdaeq	r0, {r5, fp, ip}
 758:	08001820 	stmdaeq	r0, {r5, fp, ip}
 75c:	08001870 	stmdaeq	r0, {r4, r5, r6, fp, ip}
 760:	08001870 	stmdaeq	r0, {r4, r5, r6, fp, ip}
 764:	080018ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip}
 768:	080018ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip}
 76c:	08001a70 	stmdaeq	r0, {r4, r5, r6, r9, fp, ip}
 770:	00000001 	andeq	r0, r0, r1
 774:	00000001 	andeq	r0, r0, r1
 778:	00000001 	andeq	r0, r0, r1
 77c:	00000001 	andeq	r0, r0, r1
	...
 788:	08001a70 	stmdaeq	r0, {r4, r5, r6, r9, fp, ip}
 78c:	08001af8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, fp, ip}
	...
 798:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 79c:	00000000 	andeq	r0, r0, r0
 7a0:	08001af8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, fp, ip}
 7a4:	08001b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip}
 7a8:	08001b48 	stmdaeq	r0, {r3, r6, r8, r9, fp, ip}
 7ac:	08001b4a 	stmdaeq	r0, {r1, r3, r6, r8, r9, fp, ip}
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	0000050a 	andeq	r0, r0, sl, lsl #10
       4:	02e40003 	rsceq	r0, r4, #3
  errno = ENOMEM;
       8:	01020000 	mrseq	r0, (UNDEF: 2)
}
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	01000000 	mrseq	r0, (UNDEF: 0)
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
}
      28:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
      2c:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
      30:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    if (status != HAL_OK)
      34:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
      uwTickFreq = prevTickFreq;
      38:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      3c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
      40:	5f6d7261 	svcpl	0x006d7261
      44:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
      if (pllsource != 0)
      48:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
      4c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      54:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      58:	30312d69 	eorscc	r2, r1, r9, ror #26
      5c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      64:	615c3031 	cmpvs	ip, r1, lsr r0
      68:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      SystemCoreClock = pllvco/pllp;
      6c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      70:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      break;
      74:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      7c:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
      80:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
      84:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
      88:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
      8c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
      90:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
      94:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
      98:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
      9c:	5f6d7261 	svcpl	0x006d7261
      a0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
      a4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
      a8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      b0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	30312d69 	eorscc	r2, r1, r9, ror #26
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      bc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	615c3031 	cmpvs	ip, r1, lsr r0
      c4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      c8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      d0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
      dc:	2f2e2e00 	svccs	0x002e2e00
      e0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    if (huart->hdmarx != NULL)
      e4:	2f737265 	svccs	0x00737265
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
      f0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    huart->TxXferCount = 0x00U;
      f4:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    huart->gState  = HAL_UART_STATE_READY;
      fc:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    huart->RxState = HAL_UART_STATE_READY;
     100:	534d432f 	movtpl	r4, #54063	; 0xd32f
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	442f5349 	strtmi	r5, [pc], #-841	; 10c <_Min_Heap_Size-0x6f4>
    HAL_UART_AbortCpltCallback(huart);
     108:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     10c:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
  uint32_t AbortCplt = 0x01U;
     110:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
  if (AbortCplt == 0x01U)
     114:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
}
     118:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
     11c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     120:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     124:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     12c:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
     130:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     134:	5f787834 	svcpl	0x00787834
     138:	5f4c4148 	svcpl	0x004c4148
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     140:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
     144:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	6f432f2e 	svcvs	0x00432f2e
     14c:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
     154:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	2f2e2e2f 	svccs	0x002e2e2f
     15c:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
     164:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
     168:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
     16c:	2f706d75 	svccs	0x00706d75
     170:	00636e69 	rsbeq	r6, r3, r9, ror #28
}
     174:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     178:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     17c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     180:	705c6e6f 	subsvc	r6, ip, pc, ror #28
}
     184:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	615c6d61 	cmpvs	ip, r1, ror #26
     18c:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     194:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     198:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     1a0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	2e30312d 	rsfcssp	f3, f0, #5.0
     1a8:	30322d33 	eorscc	r2, r2, r3, lsr sp
     1ac:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     1b4:	6f6e2d6d 	svcvs	0x006e2d6d
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     1bc:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     1c0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	00656475 	rsbeq	r6, r5, r5, ror r4
     1c8:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	00632e6e 	rsbeq	r2, r3, lr, ror #28
     1d0:	5f000001 	svcpl	0x00000001
     1d4:	61666564 	cmnvs	r6, r4, ror #10
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	5f746c75 	svcpl	0x00746c75
     1dc:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	00682e73 	rsbeq	r2, r8, r3, ror lr
     1e4:	5f000002 	svcpl	0x00000002
     1e8:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     1f0:	00000300 	andeq	r0, r0, r0, lsl #6
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
     1f8:	346d635f 	strbtcc	r6, [sp], #-863	; 0xfffffca1
     1fc:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	74730000 	ldrbtvc	r0, [r3], #-0
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     208:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
     20c:	00682e78 	rsbeq	r2, r8, r8, ror lr
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	73000005 	movwvc	r0, #5
     214:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     21c:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	0600682e 	streq	r6, [r0], -lr, lsr #16
     228:	74730000 	ldrbtvc	r0, [r3], #-0
  tmp = hdma->Instance->FCR;
     22c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	5f787834 	svcpl	0x00787834
  tmp |= hdma->Init.FIFOMode;
     234:	5f6c6168 	svcpl	0x006c6168
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	5f636372 	svcpl	0x00636372
    tmp |= hdma->Init.FIFOThreshold;
     23c:	682e7865 	stmdavs	lr!, {r0, r2, r5, r6, fp, ip, sp, lr}
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	00000600 	andeq	r0, r0, r0, lsl #12
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     248:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
  hdma->Instance->FCR = tmp;
     24c:	61685f78 	smcvs	34296	; 0x85f8
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	63725f6c 	cmnvs	r2, #108, 30	; 0x1b0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	00682e63 	rsbeq	r2, r8, r3, ror #28
     258:	73000006 	movwvc	r0, #6
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
  hdma->State = HAL_DMA_STATE_READY;
     260:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     264:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
  return HAL_OK;
     268:	616d645f 	cmnvs	sp, pc, asr r4
     26c:	0600682e 	streq	r6, [r0], -lr, lsr #16
     270:	74730000 	ldrbtvc	r0, [r3], #-0
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     278:	5f787834 	svcpl	0x00787834
     27c:	5f6c6168 	svcpl	0x006c6168
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
        hdma->State = HAL_DMA_STATE_READY;
     284:	0600682e 	streq	r6, [r0], -lr, lsr #16
        return HAL_ERROR; 
     288:	73750000 	cmnvc	r5, #0
    return HAL_ERROR;
     28c:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	00070068 	andeq	r0, r7, r8, rrx
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     298:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
      tickstart = HAL_GetTick();
     29c:	695f7878 	ldmdbvs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00682e74 	rsbeq	r2, r8, r4, ror lr
     2a4:	73000007 	movwvc	r0, #7
     2a8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     2b0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     2b4:	0600682e 	streq	r6, [r0], -lr, lsr #16
          return HAL_TIMEOUT;
     2b8:	70670000 	rsbvc	r0, r7, r0
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     2c0:	00000700 	andeq	r0, r0, r0, lsl #14
     2c4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    FlagStatus       pwrclkchanged = RESET;
     2c8:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	682e706d 	stmdavs	lr!, {r0, r2, r3, r5, r6, ip, sp, lr}
     2d0:	00000800 	andeq	r0, r0, r0, lsl #16
     2d4:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
      tickstart = HAL_GetTick();
     2d8:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	00003e6e 	andeq	r3, r0, lr, ror #28
     2e0:	74730000 	ldrbtvc	r0, [r3], #-0
     2e4:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	00090068 	andeq	r0, r9, r8, rrx
     2ec:	1a050000 	bne	1402f4 <_Min_Heap_Size+0x13faf4>
          return HAL_TIMEOUT;
     2f0:	c4020500 	strgt	r0, [r2], #-1280	; 0xfffffb00
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	03080005 	movweq	r0, #32773	; 0x8005
     2f8:	01060118 	tsteq	r6, r8, lsl r1
     2fc:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     300:	2f065806 	svccs	0x00065806
     304:	13060105 	movwne	r0, #24837	; 0x6105
     308:	01000602 	tsteq	r0, r2, lsl #12
     30c:	00230501 	eoreq	r0, r3, r1, lsl #10
     310:	00000205 	andeq	r0, r0, r5, lsl #4
      tickstart = HAL_GetTick();
     314:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
     318:	21050501 	tstcs	r5, r1, lsl #10
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
     320:	06050501 	streq	r0, [r5], -r1, lsl #10
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	01051359 	tsteq	r5, r9, asr r3
     328:	06024b06 	streq	r4, [r2], -r6, lsl #22
     32c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     330:	02050022 	andeq	r0, r5, #34	; 0x22
          return HAL_TIMEOUT;
     334:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
    if(pwrclkchanged == SET)
     338:	05013603 	streq	r3, [r1, #-1539]	; 0xfffff9fd
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	05132f05 	ldreq	r2, [r3, #-3845]	; 0xfffff0fb
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     344:	052f0605 	streq	r0, [pc, #-1541]!	; fffffd47 <_estack+0xdfffeb0f>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     34c:	135a0605 	cmpne	sl, #5242880	; 0x500000
     350:	01060d05 	tsteq	r6, r5, lsl #26
     354:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	67210605 	strvs	r0, [r1, -r5, lsl #12]!
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
     360:	200b0501 	andcs	r0, fp, r1, lsl #10
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	21060505 	tstcs	r6, r5, lsl #10
     368:	0d051359 	stceq	3, cr1, [r5, #-356]	; 0xfffffe9c
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	0b050106 	bleq	14078c <_Min_Heap_Size+0x13ff8c>
     370:	0605052e 	streq	r0, [r5], -lr, lsr #10
     374:	06010521 	streq	r0, [r1], -r1, lsr #10
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	00060259 	andeq	r0, r6, r9, asr r2
     37c:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     380:	30020500 	andcc	r0, r2, r0, lsl #10
     384:	03080006 	movweq	r0, #32774	; 0x8006
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	050100c6 	streq	r0, [r1, #-198]	; 0xffffff3a
     38c:	054e2105 	strbeq	r2, [lr, #-261]	; 0xfffffefb
        __HAL_RCC_PLL_DISABLE();
     390:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     394:	01010005 	tsteq	r1, r5
        tickstart = HAL_GetTick();
     398:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	00064802 	andeq	r4, r6, r2, lsl #16
     3a0:	00ce0308 	sbceq	r0, lr, r8, lsl #6
     3a4:	21050501 	tstcs	r5, r1, lsl #10
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	0601054b 	streq	r0, [r1], -fp, asr #10
     3ac:	0005022f 	andeq	r0, r5, pc, lsr #4
            return HAL_TIMEOUT;
     3b0:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	60020500 	andvs	r0, r2, r0, lsl #10
     3b8:	03080006 	movweq	r0, #32774	; 0x8006
     3bc:	050100d3 	streq	r0, [r1, #-211]	; 0xffffff2d
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     3c4:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     3c8:	01010005 	tsteq	r1, r5
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     3d0:	00067802 	andeq	r7, r6, r2, lsl #16
     3d4:	00d80308 	sbcseq	r0, r8, r8, lsl #6
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	21050501 	tstcs	r5, r1, lsl #10
     3dc:	0601054b 	streq	r0, [r1], -fp, asr #10
     3e0:	0005022f 	andeq	r0, r5, pc, lsr #4
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     3e8:	90020500 	andls	r0, r2, r0, lsl #10
     3ec:	03080006 	movweq	r0, #32774	; 0x8006
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	050100dd 	streq	r0, [r1, #-221]	; 0xffffff23
     3f4:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     3f8:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	01010005 	tsteq	r1, r5
     400:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     404:	0006a802 	andeq	sl, r6, r2, lsl #16
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	00e20308 	rsceq	r0, r2, r8, lsl #6
     40c:	21050501 	tstcs	r5, r1, lsl #10
     410:	0601054b 	streq	r0, [r1], -fp, asr #10
     414:	0005022f 	andeq	r0, r5, pc, lsr #4
     418:	10050101 	andne	r0, r5, r1, lsl #2
     41c:	c0020500 	andgt	r0, r2, r0, lsl #10
     420:	03080006 	movweq	r0, #32774	; 0x8006
     424:	050100e7 	streq	r0, [r1, #-231]	; 0xffffff19
        __HAL_RCC_PLL_ENABLE();
     428:	2f302105 	svccs	0x00302105
     42c:	02002f30 	andeq	r2, r0, #48, 30	; 0xc0
        tickstart = HAL_GetTick();
     430:	05300104 	ldreq	r0, [r0, #-260]!	; 0xfffffefc
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	04020009 	streq	r0, [r2], #-9
     438:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
     43c:	053d0104 	ldreq	r0, [sp, #-260]!	; 0xfffffefc
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	0402000b 	streq	r0, [r2], #-11
     444:	04024801 	streq	r4, [r2], #-2049	; 0xfffff7ff
            return HAL_TIMEOUT;
     448:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
  return HAL_OK;
     44c:	0205001f 	andeq	r0, r5, #31
        __HAL_RCC_PLL_DISABLE();
     450:	00000000 	andeq	r0, r0, r0
     454:	0100f703 	tsteq	r0, r3, lsl #14	; <UNPREDICTABLE>
        tickstart = HAL_GetTick();
     458:	052f0505 	streq	r0, [pc, #-1285]!	; ffffff5b <_estack+0xdfffed23>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
     460:	05590605 	ldrbeq	r0, [r9, #-1541]	; 0xfffff9fb
     464:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	016a0605 	cmneq	sl, r5, lsl #12
     46c:	204a5820 	subcs	r5, sl, r0, lsr #16
            return HAL_TIMEOUT;
     470:	58200113 	stmdapl	r0!, {r0, r1, r4, r8}
  return HAL_OK;
     474:	0517204a 	ldreq	r2, [r7, #-74]	; 0xffffffb6
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
        pll_config = RCC->PLLCFGR;
     47c:	052f0605 	streq	r0, [pc, #-1541]!	; fffffe7f <_estack+0xdfffec47>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
     484:	052f0605 	streq	r0, [pc, #-1541]!	; fffffe87 <_estack+0xdfffec4f>
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	052f0605 	streq	r0, [pc, #-1541]!	; fffffe8f <_estack+0xdfffec57>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
     49c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     4a0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	052f0605 	streq	r0, [pc, #-1541]!	; fffffea7 <_estack+0xdfffec6f>
     4a8:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	052f0605 	streq	r0, [pc, #-1541]!	; fffffeaf <_estack+0xdfffec77>
     4b0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
     4bc:	052f0605 	streq	r0, [pc, #-1541]!	; fffffebf <_estack+0xdfffec87>
  return HAL_OK;
     4c0:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
}
     4c4:	05053c08 	streq	r3, [r5, #-3080]	; 0xfffff3f8
        return HAL_ERROR;
     4c8:	21052606 	tstcs	r5, r6, lsl #12
        return HAL_ERROR;
     4cc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
}
     4d0:	24053006 	strcs	r3, [r5], #-6
        return HAL_ERROR;
     4d4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
          return HAL_ERROR;
     4d8:	25052f06 	strcs	r2, [r5, #-3846]	; 0xfffff0fa
     4dc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     4e0:	26052f06 	strcs	r2, [r5], -r6, lsl #30
     4e4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     4e8:	26053d06 	strcs	r3, [r5], -r6, lsl #26
     4ec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     4f0:	09053e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, ip, sp}
     4f4:	08050106 	stmdaeq	r5, {r1, r2, r8}
     4f8:	2301054a 	movwcs	r0, #5450	; 0x154a
     4fc:	03060905 	movweq	r0, #26885	; 0x6905
     500:	0d033c71 	stceq	12, cr3, [r3, #-452]	; 0xfffffe3c
     504:	0601053c 			; <UNDEFINED> instruction: 0x0601053c
     508:	00050230 	andeq	r0, r5, r0, lsr r2
     50c:	01e40101 	mvneq	r0, r1, lsl #2
     510:	00030000 	andeq	r0, r3, r0
     514:	0000017c 	andeq	r0, r0, ip, ror r1
     518:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     51c:	0101000d 	tsteq	r1, sp
     520:	00000101 	andeq	r0, r0, r1, lsl #2
     524:	00000100 	andeq	r0, r0, r0, lsl #2
     528:	612f2e01 			; <UNDEFINED> instruction: 0x612f2e01
     52c:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     530:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     534:	63006e6f 	movwvs	r6, #3695	; 0xe6f
     538:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     53c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     540:	6f646978 	svcvs	0x00646978
     544:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     548:	6172676f 	cmnvs	r2, pc, ror #14
     54c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     550:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     554:	63675c63 	cmnvs	r7, #25344	; 0x6300
     558:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     55c:	6f6e2d6d 	svcvs	0x006e2d6d
     560:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     564:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     568:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     56c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     570:	30312e31 	eorscc	r2, r1, r1, lsr lr
     574:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
     578:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     57c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     580:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     584:	61652d65 	cmnvs	r5, r5, ror #26
     588:	315c6962 	cmpcc	ip, r2, ror #18
     58c:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
     590:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
     594:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     598:	3a630065 	bcc	18c0734 <_Min_Heap_Size+0x18bff34>
     59c:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     5a0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     5a4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     5a8:	6f72705c 	svcvs	0x0072705c
     5ac:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     5b0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     5b4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     5b8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     5bc:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     5c0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     5c4:	61652d65 	cmnvs	r5, r5, ror #26
     5c8:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     5cc:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     5d0:	31323032 	teqcc	r2, r2, lsr r0
     5d4:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     5d8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     5dc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     5e0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     5e4:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     5e8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     5ec:	616d5c65 	cmnvs	sp, r5, ror #24
     5f0:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
     5f4:	3a630065 	bcc	18c0790 <_Min_Heap_Size+0x18bff90>
     5f8:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     5fc:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     600:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     604:	6f72705c 	svcvs	0x0072705c
     608:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     60c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     610:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     614:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     618:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     61c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     620:	61652d65 	cmnvs	r5, r5, ror #26
     624:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     628:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     62c:	31323032 	teqcc	r2, r2, lsr r0
     630:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     634:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     638:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     63c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     640:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     644:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     648:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
     64c:	73000073 	movwvc	r0, #115	; 0x73
     650:	656d7379 	strbvs	r7, [sp, #-889]!	; 0xfffffc87
     654:	00632e6d 	rsbeq	r2, r3, sp, ror #28
     658:	73000001 	movwvc	r0, #1
     65c:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
     660:	00682e66 	rsbeq	r2, r8, r6, ror #28
     664:	5f000002 	svcpl	0x00000002
     668:	61666564 	cmnvs	r6, r4, ror #10
     66c:	5f746c75 	svcpl	0x00746c75
     670:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     674:	00682e73 	rsbeq	r2, r8, r3, ror lr
     678:	5f000003 	svcpl	0x00000003
     67c:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     680:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     684:	00000400 	andeq	r0, r0, r0, lsl #8
     688:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
     68c:	00682e6f 	rsbeq	r2, r8, pc, ror #28
     690:	00000004 	andeq	r0, r0, r4
     694:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     698:	0006ec02 	andeq	lr, r6, r2, lsl #24
     69c:	01350308 	teqeq	r5, r8, lsl #6
     6a0:	03050106 	movweq	r0, #20742	; 0x5106
     6a4:	13132f06 	tstne	r3, #6, 30
     6a8:	06120513 			; <UNDEFINED> instruction: 0x06120513
     6ac:	06030501 	streq	r0, [r3], -r1, lsl #10
     6b0:	0515132f 	ldreq	r1, [r5, #-815]	; 0xfffffcd1
     6b4:	2001060c 	andcs	r0, r1, ip, lsl #12
     6b8:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
     6bc:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
     6c0:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
     6c4:	03053c06 	movweq	r3, #23558	; 0x5c06
     6c8:	05134206 	ldreq	r4, [r3, #-518]	; 0xfffffdfa
     6cc:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
     6d0:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     6d4:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
     6d8:	72030605 	andvc	r0, r3, #5242880	; 0x500000
     6dc:	06150520 	ldreq	r0, [r5], -r0, lsr #10
     6e0:	06050501 	streq	r0, [r5], -r1, lsl #10
     6e4:	060b0550 			; <UNDEFINED> instruction: 0x060b0550
     6e8:	0605052e 	streq	r0, [r5], -lr, lsr #10
     6ec:	060c052f 	streq	r0, [ip], -pc, lsr #10
     6f0:	000c0201 	andeq	r0, ip, r1, lsl #4
     6f4:	04190101 	ldreq	r0, [r9], #-257	; 0xfffffeff
     6f8:	00030000 	andeq	r0, r3, r0
     6fc:	0000014b 	andeq	r0, r0, fp, asr #2
     700:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     704:	0101000d 	tsteq	r1, sp
     708:	00000101 	andeq	r0, r0, r1, lsl #2
     70c:	00000100 	andeq	r0, r0, r0, lsl #2
     710:	612f2e01 			; <UNDEFINED> instruction: 0x612f2e01
     714:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     718:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     71c:	63006e6f 	movwvs	r6, #3695	; 0xe6f
     720:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     724:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     728:	6f646978 	svcvs	0x00646978
     72c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     730:	6172676f 	cmnvs	r2, pc, ror #14
     734:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     738:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     73c:	63675c63 	cmnvs	r7, #25344	; 0x6300
     740:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     744:	6f6e2d6d 	svcvs	0x006e2d6d
     748:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     74c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     750:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     754:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     758:	30312e31 	eorscc	r2, r1, r1, lsr lr
     75c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     760:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     764:	61652d65 	cmnvs	r5, r5, ror #26
     768:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     76c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     770:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
     774:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
     778:	6300656e 	movwvs	r6, #1390	; 0x56e
     77c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     780:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     784:	6f646978 	svcvs	0x00646978
     788:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     78c:	6172676f 	cmnvs	r2, pc, ror #14
     790:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     794:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     798:	63675c63 	cmnvs	r7, #25344	; 0x6300
     79c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     7a0:	6f6e2d6d 	svcvs	0x006e2d6d
     7a4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     7a8:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     7ac:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     7b0:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     7b4:	30312e31 	eorscc	r2, r1, r1, lsr lr
     7b8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     7bc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     7c0:	61652d65 	cmnvs	r5, r5, ror #26
     7c4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     7c8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     7cc:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
     7d0:	00007379 	andeq	r7, r0, r9, ror r3
     7d4:	63737973 	cmnvs	r3, #1884160	; 0x1cc000
     7d8:	736c6c61 	cmnvc	ip, #24832	; 0x6100
     7dc:	0100632e 	tsteq	r0, lr, lsr #6
     7e0:	645f0000 	ldrbvs	r0, [pc], #-0	; 7e8 <_Min_Heap_Size-0x18>
     7e4:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     7e8:	745f746c 	ldrbvc	r7, [pc], #-1132	; 7f0 <_Min_Heap_Size-0x10>
     7ec:	73657079 	cmnvc	r5, #121	; 0x79
     7f0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     7f4:	745f0000 	ldrbvc	r0, [pc], #-0	; 7fc <_Min_Heap_Size-0x4>
     7f8:	73657079 	cmnvc	r5, #121	; 0x79
     7fc:	0300682e 	movweq	r6, #2094	; 0x82e
     800:	745f0000 	ldrbvc	r0, [pc], #-0	; 808 <_Min_Heap_Size+0x8>
     804:	76656d69 	strbtvc	r6, [r5], -r9, ror #26
     808:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
     80c:	00000300 	andeq	r0, r0, r0, lsl #6
     810:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     814:	65707365 	ldrbvs	r7, [r0, #-869]!	; 0xfffffc9b
     818:	00682e63 	rsbeq	r2, r8, r3, ror #28
     81c:	74000003 	strvc	r0, [r0], #-3
     820:	73657079 	cmnvc	r5, #121	; 0x79
     824:	0300682e 	movweq	r6, #2094	; 0x82e
     828:	74730000 	ldrbtvc	r0, [r3], #-0
     82c:	682e7461 	stmdavs	lr!, {r0, r5, r6, sl, ip, sp, lr}
     830:	00000300 	andeq	r0, r0, r0, lsl #6
     834:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     838:	00682e73 	rsbeq	r2, r8, r3, ror lr
     83c:	65000003 	strvs	r0, [r0, #-3]
     840:	6f6e7272 	svcvs	0x006e7272
     844:	0300682e 	movweq	r6, #2094	; 0x82e
     848:	05000000 	streq	r0, [r0, #-0]
     84c:	02050001 	andeq	r0, r5, #1
     850:	00000000 	andeq	r0, r0, r0
     854:	13012c03 	movwne	r2, #7171	; 0x1c03
     858:	01000102 	tsteq	r0, r2, lsl #2
     85c:	00010501 	andeq	r0, r1, r1, lsl #10
     860:	00000205 	andeq	r0, r0, r5, lsl #4
     864:	30030000 	andcc	r0, r3, r0
     868:	13030501 	movwne	r0, #13569	; 0x3501
     86c:	13060105 	movwne	r0, #24837	; 0x6105
     870:	01000202 	tsteq	r0, r2, lsl #4
     874:	00010501 	andeq	r0, r1, r1, lsl #10
     878:	00000205 	andeq	r0, r0, r5, lsl #4
     87c:	35030000 	strcc	r0, [r3, #-0]
     880:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     884:	13210603 			; <UNDEFINED> instruction: 0x13210603
     888:	06090513 			; <UNDEFINED> instruction: 0x06090513
     88c:	0603052e 	streq	r0, [r3], -lr, lsr #10
     890:	0601052f 	streq	r0, [r1], -pc, lsr #10
     894:	00030213 	andeq	r0, r3, r3, lsl r2
     898:	01050101 	tsteq	r5, r1, lsl #2
     89c:	00020500 	andeq	r0, r2, r0, lsl #10
     8a0:	03000000 	movweq	r0, #0
     8a4:	0106013d 	tsteq	r6, sp, lsr r1
     8a8:	21060305 	tstcs	r6, r5, lsl #6
     8ac:	01040200 	mrseq	r0, R12_usr
     8b0:	000e054b 	andeq	r0, lr, fp, asr #10
     8b4:	01010402 	tsteq	r1, r2, lsl #8
     8b8:	02000905 	andeq	r0, r0, #81920	; 0x14000
     8bc:	02010104 	andeq	r0, r1, #4, 2
     8c0:	01010001 	tsteq	r1, r1
     8c4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     8c8:	00073402 	andeq	r3, r7, r2, lsl #8
     8cc:	00c30308 	sbceq	r0, r3, r8, lsl #6
     8d0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     8d4:	133d0603 	teqne	sp, #3145728	; 0x300000
     8d8:	06100514 			; <UNDEFINED> instruction: 0x06100514
     8dc:	20030501 	andcs	r0, r3, r1, lsl #10
     8e0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     8e4:	22060304 	andcs	r0, r6, #4, 6	; 0x10000000
     8e8:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     8ec:	01060304 	tsteq	r6, r4, lsl #6
     8f0:	02000905 	andeq	r0, r0, #81920	; 0x14000
     8f4:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     8f8:	0402000c 	streq	r0, [r2], #-12
     8fc:	24052003 	strcs	r2, [r5], #-3
     900:	03040200 	movweq	r0, #16896	; 0x4200
     904:	2b052c06 	blcs	14b924 <_Min_Heap_Size+0x14b124>
     908:	03040200 	movweq	r0, #16896	; 0x4200
     90c:	09050106 	stmdbeq	r5, {r1, r2, r8}
     910:	03040200 	movweq	r0, #16896	; 0x4200
     914:	00150522 	andseq	r0, r5, r2, lsr #10
     918:	06010402 	streq	r0, [r1], -r2, lsl #8
     91c:	0003051e 	andeq	r0, r3, lr, lsl r5
     920:	06010402 	streq	r0, [r1], -r2, lsl #8
     924:	05330601 	ldreq	r0, [r3, #-1537]!	; 0xfffff9ff
     928:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
     92c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     930:	02050001 	andeq	r0, r5, #1
     934:	08000754 	stmdaeq	r0, {r2, r4, r6, r8, r9, sl}
     938:	0100d003 	tsteq	r0, r3
     93c:	03050106 	movweq	r0, #20742	; 0x5106
     940:	14133d06 	ldrne	r3, [r3], #-3334	; 0xfffff2fa
     944:	01061005 	tsteq	r6, r5
     948:	05200305 	streq	r0, [r0, #-773]!	; 0xfffffcfb
     94c:	04020005 	streq	r0, [r2], #-5
     950:	00220603 	eoreq	r0, r2, r3, lsl #12
     954:	06030402 	streq	r0, [r3], -r2, lsl #8
     958:	04020001 	streq	r0, [r2], #-1
     95c:	24052e03 	strcs	r2, [r5], #-3587	; 0xfffff1fd
     960:	03040200 	movweq	r0, #16896	; 0x4200
     964:	2b052c06 	blcs	14b984 <_Min_Heap_Size+0x14b184>
     968:	03040200 	movweq	r0, #16896	; 0x4200
     96c:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
     970:	01040200 	mrseq	r0, R12_usr
     974:	03052006 	movweq	r2, #20486	; 0x5006
     978:	01040200 	mrseq	r0, R12_usr
     97c:	32060106 	andcc	r0, r6, #-2147483647	; 0x80000001
     980:	13060105 	movwne	r0, #24837	; 0x6105
     984:	0101002e 	tsteq	r1, lr, lsr #32
     988:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     98c:	00077002 	andeq	r7, r7, r2
     990:	00dc0308 	sbcseq	r0, ip, r8, lsl #6
     994:	13030501 	movwne	r0, #13569	; 0x3501
     998:	06010513 			; <UNDEFINED> instruction: 0x06010513
     99c:	01022e13 	tsteq	r2, r3, lsl lr
     9a0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     9a4:	02050001 	andeq	r0, r5, #1
     9a8:	08000776 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, sl}
     9ac:	0100e303 	tsteq	r0, r3, lsl #6
     9b0:	13130305 	tstne	r3, #335544320	; 0x14000000
     9b4:	01060f05 	tsteq	r6, r5, lsl #30
     9b8:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     9bc:	13060105 	movwne	r0, #24837	; 0x6105
     9c0:	00010220 	andeq	r0, r1, r0, lsr #4
     9c4:	01050101 	tsteq	r5, r1, lsl #2
     9c8:	80020500 	andhi	r0, r2, r0, lsl #10
     9cc:	03080007 	movweq	r0, #32775	; 0x8007
     9d0:	050100ea 	streq	r0, [r1, #-234]	; 0xffffff16
     9d4:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
     9d8:	20130601 	andscs	r0, r3, r1, lsl #12
     9dc:	01000102 	tsteq	r0, r2, lsl #2
     9e0:	00010501 	andeq	r0, r1, r1, lsl #10
     9e4:	07840205 	streq	r0, [r4, r5, lsl #4]
     9e8:	f0030800 			; <UNDEFINED> instruction: 0xf0030800
     9ec:	03050100 	movweq	r0, #20736	; 0x5100
     9f0:	13131313 	tstne	r3, #1275068416	; 0x4c000000
     9f4:	13060105 	movwne	r0, #24837	; 0x6105
     9f8:	00010220 	andeq	r0, r1, r0, lsr #4
     9fc:	01050101 	tsteq	r5, r1, lsl #2
     a00:	00020500 	andeq	r0, r2, r0, lsl #10
     a04:	03000000 	movweq	r0, #0
     a08:	060100f8 			; <UNDEFINED> instruction: 0x060100f8
     a0c:	06030501 	streq	r0, [r3], -r1, lsl #10
     a10:	05141321 	ldreq	r1, [r4, #-801]	; 0xfffffcdf
     a14:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
     a18:	01000202 	tsteq	r0, r2, lsl #4
     a1c:	00010501 	andeq	r0, r1, r1, lsl #10
     a20:	00000205 	andeq	r0, r0, r5, lsl #4
     a24:	80030000 	andhi	r0, r3, r0
     a28:	01060101 	tsteq	r6, r1, lsl #2
     a2c:	21060305 	tstcs	r6, r5, lsl #6
     a30:	06090513 			; <UNDEFINED> instruction: 0x06090513
     a34:	0603052e 	streq	r0, [r3], -lr, lsr #10
     a38:	0601052f 	streq	r0, [r1], -pc, lsr #10
     a3c:	00030213 	andeq	r0, r3, r3, lsl r2
     a40:	01050101 	tsteq	r5, r1, lsl #2
     a44:	00020500 	andeq	r0, r2, r0, lsl #10
     a48:	03000000 	movweq	r0, #0
     a4c:	06010187 	streq	r0, [r1], -r7, lsl #3
     a50:	06030501 	streq	r0, [r3], -r1, lsl #10
     a54:	09051321 	stmdbeq	r5, {r0, r5, r8, r9, ip}
     a58:	03052e06 	movweq	r2, #24070	; 0x5e06
     a5c:	01052f06 	tsteq	r5, r6, lsl #30
     a60:	03021306 	movweq	r1, #8966	; 0x2306
     a64:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     a68:	02050001 	andeq	r0, r5, #1
     a6c:	00000000 	andeq	r0, r0, r0
     a70:	01018e03 	tsteq	r1, r3, lsl #28
     a74:	13130305 	tstne	r3, #335544320	; 0x14000000
     a78:	13060105 	movwne	r0, #24837	; 0x6105
     a7c:	0001022e 	andeq	r0, r1, lr, lsr #4
     a80:	01050101 	tsteq	r5, r1, lsl #2
     a84:	00020500 	andeq	r0, r2, r0, lsl #10
     a88:	03000000 	movweq	r0, #0
     a8c:	05010194 	streq	r0, [r1, #-404]	; 0xfffffe6c
     a90:	05131303 	ldreq	r1, [r3, #-771]	; 0xfffffcfd
     a94:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
     a98:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
     a9c:	20130601 	andscs	r0, r3, r1, lsl #12
     aa0:	01000102 	tsteq	r0, r2, lsl #2
     aa4:	00010501 	andeq	r0, r1, r1, lsl #10
     aa8:	00000205 	andeq	r0, r0, r5, lsl #4
     aac:	9b030000 	blls	c0ab4 <_Min_Heap_Size+0xc02b4>
     ab0:	01060101 	tsteq	r6, r1, lsl #2
     ab4:	21060305 	tstcs	r6, r5, lsl #6
     ab8:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
     abc:	03052e06 	movweq	r2, #24070	; 0x5e06
     ac0:	01052f06 	tsteq	r5, r6, lsl #30
     ac4:	03021306 	movweq	r1, #8966	; 0x2306
     ac8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     acc:	02050001 	andeq	r0, r5, #1
     ad0:	00000000 	andeq	r0, r0, r0
     ad4:	0101a303 	tsteq	r1, r3, lsl #6
     ad8:	05210305 	streq	r0, [r1, #-773]!	; 0xfffffcfb
     adc:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
     ae0:	052f0603 	streq	r0, [pc, #-1539]!	; 4e5 <_Min_Heap_Size-0x31b>
     ae4:	02130601 	andseq	r0, r3, #1048576	; 0x100000
     ae8:	01010003 	tsteq	r1, r3
     aec:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     af0:	00000002 	andeq	r0, r0, r2
     af4:	01a90300 			; <UNDEFINED> instruction: 0x01a90300
     af8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     afc:	13210603 			; <UNDEFINED> instruction: 0x13210603
     b00:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
     b04:	03052e06 	movweq	r2, #24070	; 0x5e06
     b08:	01052f06 	tsteq	r5, r6, lsl #30
     b0c:	03021306 	movweq	r1, #8966	; 0x2306
     b10:	f2010100 	vrhadd.s8	d0, d1, d0
     b14:	03000003 	movweq	r0, #3
     b18:	00024a00 	andeq	r4, r2, r0, lsl #20
     b1c:	fb010200 	blx	41326 <_Min_Heap_Size+0x40b26>
     b20:	01000d0e 	tsteq	r0, lr, lsl #26
     b24:	00010101 	andeq	r0, r1, r1, lsl #2
     b28:	00010000 	andeq	r0, r1, r0
     b2c:	2f2e0100 	svccs	0x002e0100
     b30:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
     b34:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
     b38:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     b3c:	442f2e2e 	strtmi	r2, [pc], #-3630	; b44 <_Min_Heap_Size+0x344>
     b40:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     b44:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     b48:	5349534d 	movtpl	r5, #37709	; 0x934d
     b4c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     b50:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     b54:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     b58:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     b5c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     b60:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     b64:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     b68:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     b6c:	5f6d7261 	svcpl	0x006d7261
     b70:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     b74:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     b78:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     b7c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     b80:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     b84:	30312d69 	eorscc	r2, r1, r9, ror #26
     b88:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     b8c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     b90:	615c3031 	cmpvs	ip, r1, lsr r0
     b94:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     b98:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     b9c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     ba0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     ba4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     ba8:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
     bac:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
     bb0:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     bb4:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     bb8:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     bbc:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     bc0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     bc4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     bc8:	5f6d7261 	svcpl	0x006d7261
     bcc:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     bd0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     bd4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     bd8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     bdc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     be0:	30312d69 	eorscc	r2, r1, r9, ror #26
     be4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     be8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     bec:	615c3031 	cmpvs	ip, r1, lsr r0
     bf0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     bf4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     bf8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     bfc:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     c00:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     c04:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
     c08:	2f2e2e00 	svccs	0x002e2e00
     c0c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     c10:	2f737265 	svccs	0x00737265
     c14:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     c18:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
     c1c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
     c20:	2f54532f 	svccs	0x0054532f
     c24:	334d5453 	movtcc	r5, #54355	; 0xd453
     c28:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
     c2c:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
     c30:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     c34:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     c38:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     c3c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     c40:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     c44:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     c48:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     c4c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; c54 <_Min_Heap_Size+0x454>
     c50:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     c54:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
     c58:	3a630063 	bcc	18c0dec <_Min_Heap_Size+0x18c05ec>
     c5c:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     c60:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     c64:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     c68:	6f72705c 	svcvs	0x0072705c
     c6c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     c70:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     c74:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     c78:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     c7c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     c80:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     c84:	61652d65 	cmnvs	r5, r5, ror #26
     c88:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     c8c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     c90:	31323032 	teqcc	r2, r2, lsr r0
     c94:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     c98:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     c9c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     ca0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     ca4:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     ca8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     cac:	73000065 	movwvc	r0, #101	; 0x65
     cb0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     cb4:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     cb8:	2e74695f 			; <UNDEFINED> instruction: 0x2e74695f
     cbc:	00010063 	andeq	r0, r1, r3, rrx
     cc0:	736d6300 	cmnvc	sp, #0, 6
     cc4:	675f7369 	ldrbvs	r7, [pc, -r9, ror #6]
     cc8:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
     ccc:	00000200 	andeq	r0, r0, r0, lsl #4
     cd0:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     cd4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     cd8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     cdc:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     ce0:	00000300 	andeq	r0, r0, r0, lsl #6
     ce4:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     ce8:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     cec:	00040068 	andeq	r0, r4, r8, rrx
     cf0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     cf4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     cf8:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
     cfc:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     d00:	74730000 	ldrbtvc	r0, [r3], #-0
     d04:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     d08:	5f787834 	svcpl	0x00787834
     d0c:	5f6c6168 	svcpl	0x006c6168
     d10:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     d14:	00060068 	andeq	r0, r6, r8, rrx
     d18:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     d1c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     d20:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     d24:	645f6c61 	ldrbvs	r6, [pc], #-3169	; d2c <_Min_Heap_Size+0x52c>
     d28:	682e616d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}
     d2c:	00000600 	andeq	r0, r0, r0, lsl #12
     d30:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     d34:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     d38:	61685f78 	smcvs	34296	; 0x85f8
     d3c:	61755f6c 	cmnvs	r5, ip, ror #30
     d40:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
     d44:	00000600 	andeq	r0, r0, r0, lsl #12
     d48:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     d4c:	00682e6f 	rsbeq	r2, r8, pc, ror #28
     d50:	73000007 	movwvc	r0, #7
     d54:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     d58:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     d5c:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     d60:	0600682e 	streq	r6, [r0], -lr, lsr #16
     d64:	05000000 	streq	r0, [r0, #-0]
     d68:	02050001 	andeq	r0, r5, #1
     d6c:	08000788 	stmdaeq	r0, {r3, r7, r8, r9, sl}
     d70:	0100c603 	tsteq	r0, r3, lsl #12
     d74:	00220305 	eoreq	r0, r2, r5, lsl #6
     d78:	4d010402 	cfstrsmi	mvf0, [r1, #-8]
     d7c:	01040200 	mrseq	r0, R12_usr
     d80:	00090514 	andeq	r0, r9, r4, lsl r5
     d84:	10010402 	andne	r0, r1, r2, lsl #8
     d88:	01000502 	tsteq	r0, r2, lsl #10
     d8c:	00010501 	andeq	r0, r1, r1, lsl #10
     d90:	00000205 	andeq	r0, r0, r5, lsl #4
     d94:	d5030000 	strle	r0, [r3, #-0]
     d98:	03050100 	movweq	r0, #20736	; 0x5100
     d9c:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     da0:	02004c01 	andeq	r4, r0, #256	; 0x100
     da4:	05160104 	ldreq	r0, [r6, #-260]	; 0xfffffefc
     da8:	04020009 	streq	r0, [r2], #-9
     dac:	05020e01 	streq	r0, [r2, #-3585]	; 0xfffff1ff
     db0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     db4:	02050001 	andeq	r0, r5, #1
     db8:	0800079c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl}
     dbc:	0100e403 	tsteq	r0, r3, lsl #8
     dc0:	00220305 	eoreq	r0, r2, r5, lsl #6
     dc4:	4c010402 	cfstrsmi	mvf0, [r1], {2}
     dc8:	01040200 	mrseq	r0, R12_usr
     dcc:	00090516 	andeq	r0, r9, r6, lsl r5
     dd0:	0e010402 	cdpeq	4, 0, cr0, cr1, cr2, {0}
     dd4:	01000502 	tsteq	r0, r2, lsl #10
     dd8:	00010501 	andeq	r0, r1, r1, lsl #10
     ddc:	07b00205 	ldreq	r0, [r0, r5, lsl #4]!
     de0:	f3030800 	vsub.i8	d0, d3, d0
     de4:	03050100 	movweq	r0, #20736	; 0x5100
     de8:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     dec:	02004c01 	andeq	r4, r0, #256	; 0x100
     df0:	05160104 	ldreq	r0, [r6, #-260]	; 0xfffffefc
     df4:	04020009 	streq	r0, [r2], #-9
     df8:	05020e01 	streq	r0, [r2, #-3585]	; 0xfffff1ff
     dfc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     e00:	02050001 	andeq	r0, r5, #1
     e04:	080007c4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl}
     e08:	01018203 	tsteq	r1, r3, lsl #4
     e0c:	00220305 	eoreq	r0, r2, r5, lsl #6
     e10:	4c010402 	cfstrsmi	mvf0, [r1], {2}
     e14:	01040200 	mrseq	r0, R12_usr
     e18:	00090516 	andeq	r0, r9, r6, lsl r5
     e1c:	0e010402 	cdpeq	4, 0, cr0, cr1, cr2, {0}
     e20:	01000502 	tsteq	r0, r2, lsl #10
     e24:	00010501 	andeq	r0, r1, r1, lsl #10
     e28:	07d80205 	ldrbeq	r0, [r8, r5, lsl #4]
     e2c:	91030800 	tstls	r3, r0, lsl #16
     e30:	02190101 	andseq	r0, r9, #1073741824	; 0x40000000
     e34:	01010001 	tsteq	r1, r1
     e38:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     e3c:	0007da02 	andeq	sp, r7, r2, lsl #20
     e40:	019e0308 	orrseq	r0, lr, r8, lsl #6
     e44:	01021901 	tsteq	r2, r1, lsl #18
     e48:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     e4c:	02050001 	andeq	r0, r5, #1
     e50:	080007dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl}
     e54:	0101ab03 	tsteq	r1, r3, lsl #22
     e58:	00010219 	andeq	r0, r1, r9, lsl r2
     e5c:	01050101 	tsteq	r5, r1, lsl #2
     e60:	de020500 	cfsh32le	mvfx0, mvfx2, #0
     e64:	03080007 	movweq	r0, #32775	; 0x8007
     e68:	050101b8 	streq	r0, [r1, #-440]	; 0xfffffe48
     e6c:	01052403 	tsteq	r5, r3, lsl #8
     e70:	01023206 	tsteq	r2, r6, lsl #4
     e74:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     e78:	02050001 	andeq	r0, r5, #1
     e7c:	080007e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl}
     e80:	0101cd03 	tsteq	r1, r3, lsl #26
     e84:	05240305 	streq	r0, [r4, #-773]!	; 0xfffffcfb
     e88:	02400601 	subeq	r0, r0, #1048576	; 0x100000
     e8c:	01010004 	tsteq	r1, r4
     e90:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     e94:	0007f802 	andeq	pc, r7, r2, lsl #16
     e98:	01dd0308 	bicseq	r0, sp, r8, lsl #6
     e9c:	21030501 	tstcs	r3, r1, lsl #10
     ea0:	0502044b 	streq	r0, [r2, #-1099]	; 0xfffffbb5
     ea4:	05e0031b 	strbeq	r0, [r0, #795]!	; 0x31b
     ea8:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     eac:	02000104 	andeq	r0, r0, #4, 2
     eb0:	9f030104 	svcls	0x00030104
     eb4:	0e05207a 	mcreq	0, 0, r2, cr5, cr10, {3}
     eb8:	01040200 	mrseq	r0, R12_usr
     ebc:	00090501 	andeq	r0, r9, r1, lsl #10
     ec0:	01010402 	tsteq	r1, r2, lsl #8
     ec4:	01000602 	tsteq	r0, r2, lsl #12
     ec8:	00010501 	andeq	r0, r1, r1, lsl #10
     ecc:	08100205 	ldmdaeq	r0, {r0, r2, r9}
     ed0:	ec030800 	stc	8, cr0, [r3], {-0}
     ed4:	01060101 	tsteq	r6, r1, lsl #2
     ed8:	21060305 	tstcs	r6, r5, lsl #6
     edc:	06202006 	strteq	r2, [r0], -r6
     ee0:	0502042f 	streq	r0, [r2, #-1071]	; 0xfffffbd1
     ee4:	05d1031b 	ldrbeq	r0, [r1, #795]	; 0x31b
     ee8:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     eec:	02000104 	andeq	r0, r0, #4, 2
     ef0:	ae030104 	adfges	f0, f3, f4
     ef4:	0e05207a 	mcreq	0, 0, r2, cr5, cr10, {3}
     ef8:	01040200 	mrseq	r0, R12_usr
     efc:	00090501 	andeq	r0, r9, r1, lsl #10
     f00:	01010402 	tsteq	r1, r2, lsl #8
     f04:	01000602 	tsteq	r0, r2, lsl #12
     f08:	00016b01 	andeq	r6, r1, r1, lsl #22
     f0c:	3c000300 	stccc	3, cr0, [r0], {-0}
     f10:	02000001 	andeq	r0, r0, #1
     f14:	0d0efb01 	vstreq	d15, [lr, #-4]
     f18:	01010100 	mrseq	r0, (UNDEF: 17)
     f1c:	00000001 	andeq	r0, r0, r1
     f20:	01000001 	tsteq	r0, r1
     f24:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     f28:	2f65726f 	svccs	0x0065726f
     f2c:	00637253 	rsbeq	r7, r3, r3, asr r2
     f30:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     f34:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     f38:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     f3c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     f40:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     f44:	615c6d61 	cmpvs	ip, r1, ror #26
     f48:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     f4c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     f50:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     f54:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     f58:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     f5c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     f60:	2e30312d 	rsfcssp	f3, f0, #5.0
     f64:	30322d33 	eorscc	r2, r2, r3, lsr sp
     f68:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     f6c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     f70:	6f6e2d6d 	svcvs	0x006e2d6d
     f74:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     f78:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     f7c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     f80:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     f84:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     f88:	00656e69 	rsbeq	r6, r5, r9, ror #28
     f8c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     f90:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     f94:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     f98:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     f9c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     fa0:	615c6d61 	cmpvs	ip, r1, ror #26
     fa4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     fa8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     fac:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     fb0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     fb4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     fb8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     fbc:	2e30312d 	rsfcssp	f3, f0, #5.0
     fc0:	30322d33 	eorscc	r2, r2, r3, lsr sp
     fc4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     fc8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     fcc:	6f6e2d6d 	svcvs	0x006e2d6d
     fd0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     fd4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     fd8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     fdc:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     fe0:	00737973 	rsbseq	r7, r3, r3, ror r9
     fe4:	442f2e2e 	strtmi	r2, [pc], #-3630	; fec <_Min_Heap_Size+0x7ec>
     fe8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     fec:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     ff0:	5349534d 	movtpl	r5, #37709	; 0x934d
     ff4:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
     ff8:	2f656369 	svccs	0x00656369
     ffc:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    1000:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    1004:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    1008:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    100c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1010:	70670000 	rsbvc	r0, r7, r0
    1014:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
    1018:	00000100 	andeq	r0, r0, r0, lsl #2
    101c:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    1020:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    1024:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    1028:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    102c:	00000200 	andeq	r0, r0, r0, lsl #4
    1030:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    1034:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    1038:	00030068 	andeq	r0, r3, r8, rrx
    103c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1040:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1044:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    1048:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    104c:	05000000 	streq	r0, [r0, #-0]
    1050:	02050001 	andeq	r0, r5, #1
    1054:	08000828 	stmdaeq	r0, {r3, r5, fp}
    1058:	05012a03 	streq	r2, [r1, #-2563]	; 0xfffff5fd
    105c:	2e012303 	cdpcs	3, 0, cr2, cr1, cr3, {0}
    1060:	13204a58 			; <UNDEFINED> instruction: 0x13204a58
    1064:	4a4a2001 	bmi	1289070 <_Min_Heap_Size+0x1288870>
    1068:	20011320 	andcs	r1, r1, r0, lsr #6
    106c:	05204a4a 	streq	r4, [r0, #-2634]!	; 0xfffff5b6
    1070:	02140601 	andseq	r0, r4, #1048576	; 0x100000
    1074:	01010005 	tsteq	r1, r5
    1078:	0000030c 	andeq	r0, r0, ip, lsl #6
    107c:	02020003 	andeq	r0, r2, #3
    1080:	01020000 	mrseq	r0, (UNDEF: 2)
    1084:	000d0efb 	strdeq	r0, [sp], -fp
    1088:	01010101 	tsteq	r1, r1, lsl #2
    108c:	01000000 	mrseq	r0, (UNDEF: 0)
    1090:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    1094:	6f432f2e 	svcvs	0x00432f2e
    1098:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
    109c:	63006372 	movwvs	r6, #882	; 0x372
    10a0:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    10a4:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    10a8:	6f646978 	svcvs	0x00646978
    10ac:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    10b0:	6172676f 	cmnvs	r2, pc, ror #14
    10b4:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    10b8:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    10bc:	63675c63 	cmnvs	r7, #25344	; 0x6300
    10c0:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    10c4:	6f6e2d6d 	svcvs	0x006e2d6d
    10c8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    10cc:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    10d0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    10d4:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    10d8:	30312e31 	eorscc	r2, r1, r1, lsr lr
    10dc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    10e0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    10e4:	61652d65 	cmnvs	r5, r5, ror #26
    10e8:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    10ec:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    10f0:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    10f4:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    10f8:	6300656e 	movwvs	r6, #1390	; 0x56e
    10fc:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1100:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1104:	6f646978 	svcvs	0x00646978
    1108:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    110c:	6172676f 	cmnvs	r2, pc, ror #14
    1110:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1114:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1118:	63675c63 	cmnvs	r7, #25344	; 0x6300
    111c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1120:	6f6e2d6d 	svcvs	0x006e2d6d
    1124:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1128:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    112c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1130:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1134:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1138:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    113c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1140:	61652d65 	cmnvs	r5, r5, ror #26
    1144:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    1148:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    114c:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    1150:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    1154:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    1158:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    115c:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    1160:	2f534953 	svccs	0x00534953
    1164:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    1168:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
    116c:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
    1170:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    1174:	2f787834 	svccs	0x00787834
    1178:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    117c:	00656475 	rsbeq	r6, r5, r5, ror r4
    1180:	442f2e2e 	strtmi	r2, [pc], #-3630	; 1188 <_Min_Heap_Size+0x988>
    1184:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1188:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    118c:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    1190:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    1194:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    1198:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    119c:	2f726576 	svccs	0x00726576
    11a0:	00636e49 	rsbeq	r6, r3, r9, asr #28
    11a4:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    11a8:	2f65726f 	svccs	0x0065726f
    11ac:	00636e49 	rsbeq	r6, r3, r9, asr #28
    11b0:	61737500 	cmnvs	r3, r0, lsl #10
    11b4:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
    11b8:	00000100 	andeq	r0, r0, r0, lsl #2
    11bc:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    11c0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    11c4:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    11c8:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    11cc:	00000200 	andeq	r0, r0, r0, lsl #4
    11d0:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    11d4:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    11d8:	00030068 	andeq	r0, r3, r8, rrx
    11dc:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    11e0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    11e4:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    11e8:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    11ec:	74730000 	ldrbtvc	r0, [r3], #-0
    11f0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    11f4:	5f787834 	svcpl	0x00787834
    11f8:	5f6c6168 	svcpl	0x006c6168
    11fc:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    1200:	00050068 	andeq	r0, r5, r8, rrx
    1204:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1208:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    120c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1210:	675f6c61 	ldrbvs	r6, [pc, -r1, ror #24]
    1214:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    1218:	00050068 	andeq	r0, r5, r8, rrx
    121c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1220:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1224:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1228:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 1230 <_Min_Heap_Size+0xa30>
    122c:	682e616d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}
    1230:	00000500 	andeq	r0, r0, r0, lsl #10
    1234:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1238:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    123c:	61685f78 	smcvs	34296	; 0x85f8
    1240:	61755f6c 	cmnvs	r5, ip, ror #30
    1244:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    1248:	00000500 	andeq	r0, r0, r0, lsl #10
    124c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1250:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1254:	61685f78 	smcvs	34296	; 0x85f8
    1258:	6f635f6c 	svcvs	0x00635f6c
    125c:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    1260:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1264:	74730000 	ldrbtvc	r0, [r3], #-0
    1268:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    126c:	5f787834 	svcpl	0x00787834
    1270:	682e7469 	stmdavs	lr!, {r0, r3, r5, r6, sl, ip, sp, lr}
    1274:	00000600 	andeq	r0, r0, r0, lsl #12
    1278:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
    127c:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1280:	00000006 	andeq	r0, r0, r6
    1284:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1288:	00087402 	andeq	r7, r8, r2, lsl #8
    128c:	011f0308 	tsteq	pc, r8, lsl #6
    1290:	09030305 	stmdbeq	r3, {r0, r2, r8, r9}
    1294:	06130520 	ldreq	r0, [r3], -r0, lsr #10
    1298:	06030501 	streq	r0, [r3], -r1, lsl #10
    129c:	0618053d 			; <UNDEFINED> instruction: 0x0618053d
    12a0:	06030501 	streq	r0, [r3], -r1, lsl #10
    12a4:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    12a8:	06030501 	streq	r0, [r3], -r1, lsl #10
    12ac:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    12b0:	06030501 	streq	r0, [r3], -r1, lsl #10
    12b4:	06160521 	ldreq	r0, [r6], -r1, lsr #10
    12b8:	06030501 	streq	r0, [r3], -r1, lsl #10
    12bc:	06140521 	ldreq	r0, [r4], -r1, lsr #10
    12c0:	06030501 	streq	r0, [r3], -r1, lsl #10
    12c4:	0619052f 	ldreq	r0, [r9], -pc, lsr #10
    12c8:	06030501 	streq	r0, [r3], -r1, lsl #10
    12cc:	061c0521 	ldreq	r0, [ip], -r1, lsr #10
    12d0:	06030501 	streq	r0, [r3], -r1, lsl #10
    12d4:	06070521 	streq	r0, [r7], -r1, lsr #10
    12d8:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
    12dc:	05280105 	streq	r0, [r8, #-261]!	; 0xfffffefb
    12e0:	7a030605 	bvc	c2afc <_Min_Heap_Size+0xc22fc>
    12e4:	06010520 	streq	r0, [r1], -r0, lsr #10
    12e8:	00050234 	andeq	r0, r5, r4, lsr r2
    12ec:	01050101 	tsteq	r5, r1, lsl #2
    12f0:	a8020500 	stmdage	r2, {r8, sl}
    12f4:	03080008 	movweq	r0, #32776	; 0x8008
    12f8:	0106013b 	tsteq	r6, fp, lsr r1
    12fc:	30060305 	andcc	r0, r6, r5, lsl #6
    1300:	01061405 	tsteq	r6, r5, lsl #8
    1304:	67060305 	strvs	r0, [r6, -r5, lsl #6]
    1308:	01061005 	tsteq	r6, r5
    130c:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    1310:	661b0301 	ldrvs	r0, [fp], -r1, lsl #6
    1314:	03060505 	movweq	r0, #25861	; 0x6505
    1318:	2e012e6b 	cdpcs	14, 0, cr2, cr1, cr11, {3}
    131c:	14204a66 	strtne	r4, [r0], #-2662	; 0xfffff59a
    1320:	4a4a2001 	bmi	128932c <_Min_Heap_Size+0x1288b2c>
    1324:	19051720 	stmdbne	r5, {r5, r8, r9, sl, ip}
    1328:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    132c:	1a053d06 	bne	15074c <_Min_Heap_Size+0x14ff4c>
    1330:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1334:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1338:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    133c:	052f0605 	streq	r0, [pc, #-1541]!	; d3f <_Min_Heap_Size+0x53f>
    1340:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    1344:	062f0605 	strteq	r0, [pc], -r5, lsl #12
    1348:	5931062e 	ldmdbpl	r1!, {r1, r2, r3, r5, r9, sl}
    134c:	41060105 	tstmi	r6, r5, lsl #2
    1350:	01000302 	tsteq	r0, r2, lsl #6
    1354:	00010501 	andeq	r0, r1, r1, lsl #10
    1358:	00000205 	andeq	r0, r0, r5, lsl #4
    135c:	dc030000 	stcle	0, cr0, [r3], {-0}
    1360:	01060100 	mrseq	r0, (UNDEF: 22)
    1364:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    1368:	01061005 	tsteq	r6, r5
    136c:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    1370:	3c140301 	ldccc	3, cr0, [r4], {1}
    1374:	03060505 	movweq	r0, #25861	; 0x6505
    1378:	065e2072 			; <UNDEFINED> instruction: 0x065e2072
    137c:	0531063c 	ldreq	r0, [r1, #-1596]!	; 0xfffff9c4
    1380:	02410601 	subeq	r0, r1, #1048576	; 0x100000
    1384:	01010007 	tsteq	r1, r7
    1388:	00000172 	andeq	r0, r0, r2, ror r1
    138c:	01490003 	cmpeq	r9, r3
    1390:	01020000 	mrseq	r0, (UNDEF: 2)
    1394:	000d0efb 	strdeq	r0, [sp], -fp
    1398:	01010101 	tsteq	r1, r1, lsl #2
    139c:	01000000 	mrseq	r0, (UNDEF: 0)
    13a0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    13a4:	6f432f2e 	svcvs	0x00432f2e
    13a8:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
    13ac:	63006372 	movwvs	r6, #882	; 0x372
    13b0:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    13b4:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    13b8:	6f646978 	svcvs	0x00646978
    13bc:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    13c0:	6172676f 	cmnvs	r2, pc, ror #14
    13c4:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    13c8:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    13cc:	63675c63 	cmnvs	r7, #25344	; 0x6300
    13d0:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    13d4:	6f6e2d6d 	svcvs	0x006e2d6d
    13d8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    13dc:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    13e0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    13e4:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    13e8:	30312e31 	eorscc	r2, r1, r1, lsr lr
    13ec:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    13f0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    13f4:	61652d65 	cmnvs	r5, r5, ror #26
    13f8:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    13fc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1400:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    1404:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    1408:	6300656e 	movwvs	r6, #1390	; 0x56e
    140c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1410:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1414:	6f646978 	svcvs	0x00646978
    1418:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    141c:	6172676f 	cmnvs	r2, pc, ror #14
    1420:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1424:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1428:	63675c63 	cmnvs	r7, #25344	; 0x6300
    142c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1430:	6f6e2d6d 	svcvs	0x006e2d6d
    1434:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1438:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    143c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1440:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1444:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1448:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    144c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1450:	61652d65 	cmnvs	r5, r5, ror #26
    1454:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    1458:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    145c:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    1460:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    1464:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    1468:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    146c:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    1470:	2f534953 	svccs	0x00534953
    1474:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    1478:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
    147c:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
    1480:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    1484:	2f787834 	svccs	0x00787834
    1488:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    148c:	00656475 	rsbeq	r6, r5, r5, ror r4
    1490:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1494:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1498:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    149c:	6d5f6c61 	ldclvs	12, cr6, [pc, #-388]	; 1320 <_Min_Heap_Size+0xb20>
    14a0:	632e7073 			; <UNDEFINED> instruction: 0x632e7073
    14a4:	00000100 	andeq	r0, r0, r0, lsl #2
    14a8:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    14ac:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    14b0:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    14b4:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    14b8:	00000200 	andeq	r0, r0, r0, lsl #4
    14bc:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    14c0:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    14c4:	00030068 	andeq	r0, r3, r8, rrx
    14c8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    14cc:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    14d0:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    14d4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    14d8:	05000000 	streq	r0, [r0, #-0]
    14dc:	02050001 	andeq	r0, r5, #1
    14e0:	08000928 	stmdaeq	r0, {r3, r5, r8, fp}
    14e4:	05013f03 	streq	r3, [r1, #-3843]	; 0xfffff0fd
    14e8:	2e012603 	cfmadd32cs	mvax0, mvfx2, mvfx1, mvfx3
    14ec:	13204a58 			; <UNDEFINED> instruction: 0x13204a58
    14f0:	4a4a2001 	bmi	12894fc <_Min_Heap_Size+0x1288cfc>
    14f4:	06010520 	streq	r0, [r1], -r0, lsr #10
    14f8:	00050219 	andeq	r0, r5, r9, lsl r2
    14fc:	44f40101 	ldrbtmi	r0, [r4], #257	; 0x101
    1500:	00030000 	andeq	r0, r3, r0
    1504:	00000251 	andeq	r0, r0, r1, asr r2
    1508:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    150c:	0101000d 	tsteq	r1, sp
    1510:	00000101 	andeq	r0, r0, r1, lsl #2
    1514:	00000100 	andeq	r0, r0, r0, lsl #2
    1518:	2f2e2e01 	svccs	0x002e2e01
    151c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1520:	2f737265 	svccs	0x00737265
    1524:	334d5453 	movtcc	r5, #54355	; 0xd453
    1528:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    152c:	41485f78 	hvcmi	34296	; 0x85f8
    1530:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    1534:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1538:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    153c:	2f2e2e00 	svccs	0x002e2e00
    1540:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1544:	2f737265 	svccs	0x00737265
    1548:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    154c:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
    1550:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1554:	3a630065 	bcc	18c16f0 <_Min_Heap_Size+0x18c0ef0>
    1558:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    155c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    1560:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    1564:	6f72705c 	svcvs	0x0072705c
    1568:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    156c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1570:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    1574:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    1578:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    157c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1580:	61652d65 	cmnvs	r5, r5, ror #26
    1584:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    1588:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    158c:	31323032 	teqcc	r2, r2, lsr r0
    1590:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    1594:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1598:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    159c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    15a0:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    15a4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    15a8:	616d5c65 	cmnvs	sp, r5, ror #24
    15ac:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    15b0:	3a630065 	bcc	18c174c <_Min_Heap_Size+0x18c0f4c>
    15b4:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    15b8:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    15bc:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    15c0:	6f72705c 	svcvs	0x0072705c
    15c4:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    15c8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    15cc:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    15d0:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    15d4:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    15d8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    15dc:	61652d65 	cmnvs	r5, r5, ror #26
    15e0:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    15e4:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    15e8:	31323032 	teqcc	r2, r2, lsr r0
    15ec:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    15f0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    15f4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    15f8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    15fc:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    1600:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1604:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    1608:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    160c:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    1610:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1614:	534d432f 	movtpl	r4, #54063	; 0xd32f
    1618:	442f5349 	strtmi	r5, [pc], #-841	; 1620 <_Min_Heap_Size+0xe20>
    161c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    1620:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
    1624:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    1628:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    162c:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
    1630:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1634:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    1638:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    163c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1640:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    1644:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    1648:	5f787834 	svcpl	0x00787834
    164c:	5f4c4148 	svcpl	0x004c4148
    1650:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1654:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
    1658:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    165c:	6f432f2e 	svcvs	0x00432f2e
    1660:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    1664:	0000636e 	andeq	r6, r0, lr, ror #6
    1668:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    166c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1670:	61685f78 	smcvs	34296	; 0x85f8
    1674:	61755f6c 	cmnvs	r5, ip, ror #30
    1678:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
    167c:	00000100 	andeq	r0, r0, r0, lsl #2
    1680:	69736d63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, sl, fp, sp, lr}^
    1684:	63675f73 	cmnvs	r7, #460	; 0x1cc
    1688:	00682e63 	rsbeq	r2, r8, r3, ror #28
    168c:	5f000002 	svcpl	0x00000002
    1690:	61666564 	cmnvs	r6, r4, ror #10
    1694:	5f746c75 	svcpl	0x00746c75
    1698:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    169c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    16a0:	5f000003 	svcpl	0x00000003
    16a4:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    16a8:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    16ac:	00000400 	andeq	r0, r0, r0, lsl #8
    16b0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    16b4:	30346632 	eorscc	r6, r4, r2, lsr r6
    16b8:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
    16bc:	00050068 	andeq	r0, r5, r8, rrx
    16c0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    16c4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    16c8:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    16cc:	00000500 	andeq	r0, r0, r0, lsl #10
    16d0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    16d4:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    16d8:	61685f78 	smcvs	34296	; 0x85f8
    16dc:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
    16e0:	00682e66 	rsbeq	r2, r8, r6, ror #28
    16e4:	73000006 	movwvc	r0, #6
    16e8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    16ec:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    16f0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    16f4:	616d645f 	cmnvs	sp, pc, asr r4
    16f8:	0600682e 	streq	r6, [r0], -lr, lsr #16
    16fc:	74730000 	ldrbtvc	r0, [r3], #-0
    1700:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1704:	5f787834 	svcpl	0x00787834
    1708:	5f6c6168 	svcpl	0x006c6168
    170c:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    1710:	0600682e 	streq	r6, [r0], -lr, lsr #16
    1714:	74730000 	ldrbtvc	r0, [r3], #-0
    1718:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    171c:	5f787834 	svcpl	0x00787834
    1720:	5f6c6168 	svcpl	0x006c6168
    1724:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1728:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    172c:	74730000 	ldrbtvc	r0, [r3], #-0
    1730:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1734:	5f787834 	svcpl	0x00787834
    1738:	5f6c6168 	svcpl	0x006c6168
    173c:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
    1740:	00060068 	andeq	r0, r6, r8, rrx
    1744:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1748:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    174c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1750:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    1754:	00000600 	andeq	r0, r0, r0, lsl #12
    1758:	00010500 	andeq	r0, r1, r0, lsl #10
    175c:	00000205 	andeq	r0, r0, r5, lsl #4
    1760:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    1764:	03050119 	movweq	r0, #20761	; 0x5119
    1768:	01040200 	mrseq	r0, R12_usr
    176c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1770:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    1774:	00010104 	andeq	r0, r1, r4, lsl #2
    1778:	01010402 	tsteq	r1, r2, lsl #8
    177c:	1f050204 	svcne	0x00050204
    1780:	01040200 	mrseq	r0, R12_usr
    1784:	2069e003 	rsbcs	lr, r9, r3
    1788:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    178c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    1790:	04020004 	streq	r0, [r2], #-4
    1794:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1798:	2e060104 	adfcss	f0, f6, f4
    179c:	01040200 	mrseq	r0, R12_usr
    17a0:	02002f06 	andeq	r2, r0, #6, 30
    17a4:	01060104 	tsteq	r6, r4, lsl #2
    17a8:	03050104 	movweq	r0, #20740	; 0x5104
    17ac:	01040200 	mrseq	r0, R12_usr
    17b0:	01169b03 	tsteq	r6, r3, lsl #22
    17b4:	01040200 	mrseq	r0, R12_usr
    17b8:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    17bc:	02001f05 	andeq	r1, r0, #5, 30
    17c0:	93030104 	movwls	r0, #12548	; 0x3104
    17c4:	0405016a 	streq	r0, [r5], #-362	; 0xfffffe96
    17c8:	01040200 	mrseq	r0, R12_usr
    17cc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    17d0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    17d4:	20060104 	andcs	r0, r6, r4, lsl #2
    17d8:	01040200 	mrseq	r0, R12_usr
    17dc:	02002f06 	andeq	r2, r0, #6, 30
    17e0:	01060104 	tsteq	r6, r4, lsl #2
    17e4:	03050104 	movweq	r0, #20740	; 0x5104
    17e8:	01040200 	mrseq	r0, R12_usr
    17ec:	0115e803 	tsteq	r5, r3, lsl #16
    17f0:	02040200 	andeq	r0, r4, #0, 4
    17f4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    17f8:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    17fc:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    1800:	00010602 	andeq	r0, r1, r2, lsl #12
    1804:	20020402 	andcs	r0, r2, r2, lsl #8
    1808:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    180c:	022f0204 	eoreq	r0, pc, #4, 4	; 0x40000000
    1810:	01010001 	tsteq	r1, r1
    1814:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1818:	00096002 	andeq	r6, r9, r2
    181c:	1a870308 	bne	fe1c2444 <_estack+0xde1c120c>
    1820:	00030501 	andeq	r0, r3, r1, lsl #10
    1824:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1828:	01040200 	mrseq	r0, R12_usr
    182c:	04020001 	streq	r0, [r2], #-1
    1830:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    1834:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    1838:	001f0502 	andseq	r0, pc, r2, lsl #10
    183c:	03010402 	movweq	r0, #5122	; 0x1402
    1840:	052069d2 	streq	r6, [r0, #-2514]!	; 0xfffff62e
    1844:	04020005 	streq	r0, [r2], #-5
    1848:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    184c:	01040200 	mrseq	r0, R12_usr
    1850:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1854:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1858:	06010402 	streq	r0, [r1], -r2, lsl #8
    185c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1860:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    1864:	00030501 	andeq	r0, r3, r1, lsl #10
    1868:	03010402 	movweq	r0, #5122	; 0x1402
    186c:	000116a9 	andeq	r1, r1, r9, lsr #13
    1870:	06010402 	streq	r0, [r1], -r2, lsl #8
    1874:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    1878:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    187c:	6a850301 	bvs	fe142488 <_estack+0xde141250>
    1880:	00040501 	andeq	r0, r4, r1, lsl #10
    1884:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1888:	01040200 	mrseq	r0, R12_usr
    188c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1890:	00200601 	eoreq	r0, r0, r1, lsl #12
    1894:	06010402 	streq	r0, [r1], -r2, lsl #8
    1898:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    189c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    18a0:	00030501 	andeq	r0, r3, r1, lsl #10
    18a4:	03010402 	movweq	r0, #5122	; 0x1402
    18a8:	000115f6 	strdeq	r1, [r1], -r6
    18ac:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    18b0:	01040200 	mrseq	r0, R12_usr
    18b4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    18b8:	00130104 	andseq	r0, r3, r4, lsl #2
    18bc:	01010402 	tsteq	r1, r2, lsl #8
    18c0:	01040200 	mrseq	r0, R12_usr
    18c4:	04020001 	streq	r0, [r2], #-1
    18c8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    18cc:	02001f05 	andeq	r1, r0, #5, 30
    18d0:	d1030104 	tstle	r3, r4, lsl #2
    18d4:	05052069 	streq	r2, [r5, #-105]	; 0xffffff97
    18d8:	01040200 	mrseq	r0, R12_usr
    18dc:	00040514 	andeq	r0, r4, r4, lsl r5
    18e0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    18e4:	01040200 	mrseq	r0, R12_usr
    18e8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    18ec:	2f060104 	svccs	0x00060104
    18f0:	01040200 	mrseq	r0, R12_usr
    18f4:	01040106 	tsteq	r4, r6, lsl #2
    18f8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    18fc:	aa030104 	bge	c1d14 <_Min_Heap_Size+0xc1514>
    1900:	02000116 	andeq	r0, r0, #-2147483643	; 0x80000005
    1904:	2e060104 	adfcss	f0, f6, f4
    1908:	1f050204 	svcne	0x00050204
    190c:	01040200 	mrseq	r0, R12_usr
    1910:	016a8403 	cmneq	sl, r3, lsl #8
    1914:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    1918:	00140104 	andseq	r0, r4, r4, lsl #2
    191c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1920:	01040200 	mrseq	r0, R12_usr
    1924:	02002006 	andeq	r2, r0, #6
    1928:	2f060104 	svccs	0x00060104
    192c:	01040200 	mrseq	r0, R12_usr
    1930:	01040106 	tsteq	r4, r6, lsl #2
    1934:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1938:	f7030104 			; <UNDEFINED> instruction: 0xf7030104
    193c:	02000115 	andeq	r0, r0, #1073741829	; 0x40000005
    1940:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    1944:	02040200 	andeq	r0, r4, #0, 4
    1948:	000c0515 	andeq	r0, ip, r5, lsl r5
    194c:	06020402 	streq	r0, [r2], -r2, lsl #8
    1950:	00060501 	andeq	r0, r6, r1, lsl #10
    1954:	20020402 	andcs	r0, r2, r2, lsl #8
    1958:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    195c:	30060204 	andcc	r0, r6, r4, lsl #4
    1960:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1964:	05160204 	ldreq	r0, [r6, #-516]	; 0xfffffdfc
    1968:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    196c:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    1970:	04020003 	streq	r0, [r2], #-3
    1974:	053d0602 	ldreq	r0, [sp, #-1538]!	; 0xfffff9fe
    1978:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    197c:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    1980:	04020001 	streq	r0, [r2], #-1
    1984:	05052f02 	streq	r2, [r5, #-3842]	; 0xfffff0fe
    1988:	01040200 	mrseq	r0, R12_usr
    198c:	207a0306 	rsbscs	r0, sl, r6, lsl #6
    1990:	01040200 	mrseq	r0, R12_usr
    1994:	04020001 	streq	r0, [r2], #-1
    1998:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    199c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    19a0:	001f0502 	andseq	r0, pc, r2, lsl #10
    19a4:	03010402 	movweq	r0, #5122	; 0x1402
    19a8:	052069cc 	streq	r6, [r0, #-2508]!	; 0xfffff634
    19ac:	04020005 	streq	r0, [r2], #-5
    19b0:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    19b4:	01040200 	mrseq	r0, R12_usr
    19b8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    19bc:	002e0601 	eoreq	r0, lr, r1, lsl #12
    19c0:	06010402 	streq	r0, [r1], -r2, lsl #8
    19c4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    19c8:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    19cc:	00050501 	andeq	r0, r5, r1, lsl #10
    19d0:	03010402 	movweq	r0, #5122	; 0x1402
    19d4:	000116af 	andeq	r1, r1, pc, lsr #13
    19d8:	06010402 	streq	r0, [r1], -r2, lsl #8
    19dc:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    19e0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    19e4:	69ff0301 	ldmibvs	pc!, {r0, r8, r9}^	; <UNPREDICTABLE>
    19e8:	00040501 	andeq	r0, r4, r1, lsl #10
    19ec:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    19f0:	01040200 	mrseq	r0, R12_usr
    19f4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    19f8:	00200601 	eoreq	r0, r0, r1, lsl #12
    19fc:	06010402 	streq	r0, [r1], -r2, lsl #8
    1a00:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1a04:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    1a08:	00050501 	andeq	r0, r5, r1, lsl #10
    1a0c:	03010402 	movweq	r0, #5122	; 0x1402
    1a10:	020115fc 	andeq	r1, r1, #252, 10	; 0x3f000000
    1a14:	01010003 	tsteq	r1, r3
    1a18:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1a1c:	0009bc02 	andeq	fp, r9, r2, lsl #24
    1a20:	1bc90308 	blne	ff242648 <_estack+0xdf241410>
    1a24:	13030501 	movwne	r0, #13569	; 0x3501
    1a28:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    1a2c:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    1a30:	19030c05 	stmdbne	r3, {r0, r2, sl, fp}
    1a34:	2201052e 	andcs	r0, r1, #192937984	; 0xb800000
    1a38:	03060505 	movweq	r0, #25861	; 0x6505
    1a3c:	15052067 	strne	r2, [r5, #-103]	; 0xffffff99
    1a40:	08050106 	stmdaeq	r5, {r1, r2, r8}
    1a44:	06070520 	streq	r0, [r7], -r0, lsr #10
    1a48:	062d0544 	strteq	r0, [sp], -r4, asr #10
    1a4c:	20390501 	eorscs	r0, r9, r1, lsl #10
    1a50:	052e2705 	streq	r2, [lr, #-1797]!	; 0xfffff8fb
    1a54:	1b05200c 	blne	149a8c <_Min_Heap_Size+0x14928c>
    1a58:	06050520 	streq	r0, [r5], -r0, lsr #10
    1a5c:	06100523 	ldreq	r0, [r0], -r3, lsr #10
    1a60:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
    1a64:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    1a68:	5b310607 	blpl	c4328c <_Min_Heap_Size+0xc42a8c>
    1a6c:	055a0505 	ldrbeq	r0, [sl, #-1285]	; 0xfffffafb
    1a70:	2001060c 	andcs	r0, r1, ip, lsl #12
    1a74:	02004705 	andeq	r4, r0, #1310720	; 0x140000
    1a78:	6d030104 	stfvss	f0, [r3, #-16]
    1a7c:	00380520 	eorseq	r0, r8, r0, lsr #10
    1a80:	20010402 	andcs	r0, r1, r2, lsl #8
    1a84:	30060705 	andcc	r0, r6, r5, lsl #14
    1a88:	01060b05 	tsteq	r6, r5, lsl #22
    1a8c:	21060705 	tstcs	r6, r5, lsl #14
    1a90:	01062805 	tsteq	r6, r5, lsl #16
    1a94:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    1a98:	1b05201d 	blne	149b14 <_Min_Heap_Size+0x149314>
    1a9c:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1aa0:	06190521 	ldreq	r0, [r9], -r1, lsr #10
    1aa4:	00040201 	andeq	r0, r4, r1, lsl #4
    1aa8:	01050101 	tsteq	r5, r1, lsl #2
    1aac:	1c020500 	cfstr32ne	mvfx0, [r2], {-0}
    1ab0:	0308000a 	movweq	r0, #32778	; 0x800a
    1ab4:	06011cef 	streq	r1, [r1], -pc, ror #25
    1ab8:	06030501 	streq	r0, [r3], -r1, lsl #10
    1abc:	4b15132f 	blmi	546780 <_Min_Heap_Size+0x545f80>
    1ac0:	01040200 	mrseq	r0, R12_usr
    1ac4:	3d062e06 	stccc	14, cr2, [r6, #-24]	; 0xffffffe8
    1ac8:	01040200 	mrseq	r0, R12_usr
    1acc:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    1ad0:	063c0204 	ldrteq	r0, [ip], -r4, lsl #4
    1ad4:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    1ad8:	00580602 	subseq	r0, r8, r2, lsl #12
    1adc:	20030402 	andcs	r0, r3, r2, lsl #8
    1ae0:	09035d06 	stmdbeq	r3, {r1, r2, r8, sl, fp, ip, lr}
    1ae4:	06210574 			; <UNDEFINED> instruction: 0x06210574
    1ae8:	203a0501 	eorscs	r0, sl, r1, lsl #10
    1aec:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
    1af0:	4205204f 	andmi	r2, r5, #79	; 0x4f
    1af4:	20620520 	rsbcs	r0, r2, r0, lsr #10
    1af8:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    1afc:	88210603 	stmdahi	r1!, {r0, r1, r9, sl}
    1b00:	05052006 	streq	r2, [r5, #-6]
    1b04:	66090306 	strvs	r0, [r9], -r6, lsl #6
    1b08:	01060f05 	tsteq	r6, r5, lsl #30
    1b0c:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    1b10:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    1b14:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    1b18:	4a0c0306 	bmi	302738 <_Min_Heap_Size+0x301f38>
    1b1c:	01060e05 	tsteq	r6, r5, lsl #28
    1b20:	0003052e 	andeq	r0, r3, lr, lsr #10
    1b24:	03010402 	movweq	r0, #5122	; 0x1402
    1b28:	02002053 	andeq	r2, r0, #83	; 0x53
    1b2c:	003c0104 	eorseq	r0, ip, r4, lsl #2
    1b30:	3d020402 	cfstrscc	mvf0, [r2, #-8]
    1b34:	03040200 	movweq	r0, #16896	; 0x4200
    1b38:	06070567 	streq	r0, [r7], -r7, ror #10
    1b3c:	05662103 	strbeq	r2, [r6, #-259]!	; 0xfffffefd
    1b40:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1b44:	0d030603 	stceq	6, cr0, [r3, #-12]
    1b48:	0612052e 	ldreq	r0, [r2], -lr, lsr #10
    1b4c:	20060501 	andcs	r0, r6, r1, lsl #10
    1b50:	42060505 	andmi	r0, r6, #20971520	; 0x1400000
    1b54:	01061c05 	tsteq	r6, r5, lsl #24
    1b58:	080a05ac 	stmdaeq	sl, {r2, r3, r5, r7, r8, sl}
    1b5c:	201c059e 	mulscs	ip, lr, r5
    1b60:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    1b64:	05052201 	streq	r2, [r5, #-513]	; 0xfffffdff
    1b68:	207a0306 	rsbscs	r0, sl, r6, lsl #6
    1b6c:	01061c05 	tsteq	r6, r5, lsl #24
    1b70:	080a05ba 	stmdaeq	sl, {r1, r3, r4, r5, r7, r8, sl}
    1b74:	201c0590 	mulscs	ip, r0, r5
    1b78:	02201a05 	eoreq	r1, r0, #20480	; 0x5000
    1b7c:	0101000a 	tsteq	r1, sl
    1b80:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1b84:	000b9002 	andeq	r9, fp, r2
    1b88:	18f20308 	ldmne	r2!, {r3, r8, r9}^
    1b8c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1b90:	05920603 	ldreq	r0, [r2, #1539]	; 0x603
    1b94:	0b050109 	bleq	141fc0 <_Min_Heap_Size+0x1417c0>
    1b98:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    1b9c:	7409052e 	strvc	r0, [r9], #-1326	; 0xfffffad2
    1ba0:	31060505 	tstcc	r6, r5, lsl #10
    1ba4:	01060805 	tsteq	r6, r5, lsl #16
    1ba8:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    1bac:	01060d05 	tsteq	r6, r5, lsl #26
    1bb0:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    1bb4:	33052e0a 	movwcc	r2, #24074	; 0x5e0a
    1bb8:	01040200 	mrseq	r0, R12_usr
    1bbc:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1bc0:	060c0542 	streq	r0, [ip], -r2, asr #10
    1bc4:	2e0a0501 	cfsh32cs	mvfx0, mvfx10, #1
    1bc8:	02004005 	andeq	r4, r0, #5
    1bcc:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    1bd0:	0402005b 	streq	r0, [r2], #-91	; 0xffffffa5
    1bd4:	09052e02 	stmdbeq	r5, {r1, r9, sl, fp, sp}
    1bd8:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    1bdc:	0c050106 	stfeqs	f0, [r5], {6}
    1be0:	060b0520 	streq	r0, [fp], -r0, lsr #10
    1be4:	2e2e013f 	mcrcs	1, 1, r0, cr14, cr15, {1}
    1be8:	3e17202e 	cdpcc	0, 1, cr2, cr7, cr14, {1}
    1bec:	01061c05 	tsteq	r6, r5, lsl #24
    1bf0:	31060b05 	tstcc	r6, r5, lsl #22
    1bf4:	05142e01 	ldreq	r2, [r4, #-3585]	; 0xfffff1ff
    1bf8:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    1bfc:	0105330a 	tsteq	r5, sl, lsl #6
    1c00:	03100521 	tsteq	r0, #138412032	; 0x8400000
    1c04:	04023c66 	streq	r3, [r2], #-3174	; 0xfffff39a
    1c08:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1c0c:	02050001 	andeq	r0, r5, #1
    1c10:	00000000 	andeq	r0, r0, r0
    1c14:	0105cb03 	tsteq	r5, r3, lsl #22
    1c18:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    1c1c:	02160601 	andseq	r0, r6, #1048576	; 0x100000
    1c20:	01010001 	tsteq	r1, r1
    1c24:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1c28:	000c1c02 	andeq	r1, ip, r2, lsl #24
    1c2c:	02e50308 	rsceq	r0, r5, #8, 6	; 0x20000000
    1c30:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1c34:	01060605 	tsteq	r6, r5, lsl #12
    1c38:	053a0105 	ldreq	r0, [sl, #-261]!	; 0xfffffefb
    1c3c:	05360603 	ldreq	r0, [r6, #-1539]!	; 0xfffff9fd
    1c40:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    1c44:	05052006 	streq	r2, [r5, #-6]
    1c48:	02003306 	andeq	r3, r0, #402653184	; 0x18000000
    1c4c:	4a060104 	bmi	182064 <_Min_Heap_Size+0x181864>
    1c50:	02040200 	andeq	r0, r4, #0, 4
    1c54:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1c58:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    1c5c:	004a0404 	subeq	r0, sl, r4, lsl #8
    1c60:	3c040402 	cfstrscc	mvf0, [r4], {2}
    1c64:	02002f06 	andeq	r2, r0, #6, 30
    1c68:	2e060104 	adfcss	f0, f6, f4
    1c6c:	02040200 	andeq	r0, r4, #0, 4
    1c70:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    1c74:	03053c03 	movweq	r3, #23555	; 0x5c03
    1c78:	02004206 	andeq	r4, r0, #1610612736	; 0x60000000
    1c7c:	2e060104 	adfcss	f0, f6, f4
    1c80:	02003d06 	andeq	r3, r0, #384	; 0x180
    1c84:	2e060104 	adfcss	f0, f6, f4
    1c88:	0c053e06 	stceq	14, cr3, [r5], {6}
    1c8c:	06050106 	streq	r0, [r5], -r6, lsl #2
    1c90:	0603052e 	streq	r0, [r3], -lr, lsr #10
    1c94:	052e1503 	streq	r1, [lr, #-1283]!	; 0xfffffafd
    1c98:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1c9c:	5b3f0603 	blpl	fc34b0 <_Min_Heap_Size+0xfc2cb0>
    1ca0:	5b5b5941 	blpl	16d81ac <_Min_Heap_Size+0x16d79ac>
    1ca4:	01061405 	tsteq	r6, r5, lsl #8
    1ca8:	2f060305 	svccs	0x00060305
    1cac:	01061105 	tsteq	r6, r5, lsl #2
    1cb0:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    1cb4:	01061205 	tsteq	r6, r5, lsl #4
    1cb8:	2f060305 	svccs	0x00060305
    1cbc:	01061605 	tsteq	r6, r5, lsl #12
    1cc0:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    1cc4:	13060105 	movwne	r0, #24837	; 0x6105
    1cc8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1ccc:	4a030404 	bmi	c2ce4 <_Min_Heap_Size+0xc24e4>
    1cd0:	006a0620 	rsbeq	r0, sl, r0, lsr #12
    1cd4:	06010402 	streq	r0, [r1], -r2, lsl #8
    1cd8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1cdc:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    1ce0:	004a0304 	subeq	r0, sl, r4, lsl #6
    1ce4:	4a040402 	bmi	102cf4 <_Min_Heap_Size+0x1024f4>
    1ce8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1cec:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1cf0:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1cf4:	053c0604 	ldreq	r0, [ip, #-1540]!	; 0xfffff9fc
    1cf8:	04020003 	streq	r0, [r2], #-3
    1cfc:	02003e02 	andeq	r3, r0, #2, 28
    1d00:	05670204 	strbeq	r0, [r7, #-516]!	; 0xfffffdfc
    1d04:	056b0605 	strbeq	r0, [fp, #-1541]!	; 0xfffff9fb
    1d08:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1d0c:	0e030605 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx5
    1d10:	060c052e 	streq	r0, [ip], -lr, lsr #10
    1d14:	054a5c03 	strbeq	r5, [sl, #-3075]	; 0xfffff3fd
    1d18:	00c00301 	sbceq	r0, r0, r1, lsl #6
    1d1c:	00060220 	andeq	r0, r6, r0, lsr #4
    1d20:	01050101 	tsteq	r5, r1, lsl #2
    1d24:	00020500 	andeq	r0, r2, r0, lsl #10
    1d28:	03000000 	movweq	r0, #0
    1d2c:	050103b3 	streq	r0, [r1, #-947]	; 0xfffffc4d
    1d30:	06051403 	streq	r1, [r5], -r3, lsl #8
    1d34:	01050106 	tsteq	r5, r6, lsl #2
    1d38:	0603052c 	streq	r0, [r3], -ip, lsr #10
    1d3c:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    1d40:	004a0601 	subeq	r0, sl, r1, lsl #12
    1d44:	4a020402 	bmi	82d54 <_Min_Heap_Size+0x82554>
    1d48:	03040200 	movweq	r0, #16896	; 0x4200
    1d4c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1d50:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    1d54:	004a0504 	subeq	r0, sl, r4, lsl #10
    1d58:	4a060402 	bmi	182d68 <_Min_Heap_Size+0x182568>
    1d5c:	06040200 	streq	r0, [r4], -r0, lsl #4
    1d60:	002f063c 	eoreq	r0, pc, ip, lsr r6	; <UNPREDICTABLE>
    1d64:	06010402 	streq	r0, [r1], -r2, lsl #8
    1d68:	003d062e 	eorseq	r0, sp, lr, lsr #12
    1d6c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1d70:	053e062e 	ldreq	r0, [lr, #-1582]!	; 0xfffff9d2
    1d74:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1d78:	03052e06 	movweq	r2, #24070	; 0x5e06
    1d7c:	2e150306 	cdpcs	3, 1, cr0, cr5, cr6, {0}
    1d80:	01061105 	tsteq	r6, r5, lsl #2
    1d84:	3f060305 	svccc	0x00060305
    1d88:	5b59415b 	blpl	16522fc <_Min_Heap_Size+0x1651afc>
    1d8c:	14055b5b 	strne	r5, [r5], #-2907	; 0xfffff4a5
    1d90:	03050106 	movweq	r0, #20742	; 0x5106
    1d94:	11052f06 	tstne	r5, r6, lsl #30
    1d98:	03050106 	movweq	r0, #20742	; 0x5106
    1d9c:	12053d06 	andne	r3, r5, #384	; 0x180
    1da0:	03050106 	movweq	r0, #20742	; 0x5106
    1da4:	16052f06 	strne	r2, [r5], -r6, lsl #30
    1da8:	03050106 	movweq	r0, #20742	; 0x5106
    1dac:	01052206 	tsteq	r5, r6, lsl #4
    1db0:	03051306 	movweq	r1, #21254	; 0x5306
    1db4:	02040200 	andeq	r0, r4, #0, 4
    1db8:	00204d03 	eoreq	r4, r0, r3, lsl #26
    1dbc:	67020402 	strvs	r0, [r2, -r2, lsl #8]
    1dc0:	6b060505 	blvs	1831dc <_Min_Heap_Size+0x1829dc>
    1dc4:	01061105 	tsteq	r6, r5, lsl #2
    1dc8:	03060505 	movweq	r0, #25861	; 0x6505
    1dcc:	0c052e0e 	stceq	14, cr2, [r5], {14}
    1dd0:	4a670306 	bmi	19c29f0 <_Min_Heap_Size+0x19c21f0>
    1dd4:	38030105 	stmdacc	r3, {r0, r2, r8}
    1dd8:	00060220 	andeq	r0, r6, r0, lsr #4
    1ddc:	01050101 	tsteq	r5, r1, lsl #2
    1de0:	00020500 	andeq	r0, r2, r0, lsl #10
    1de4:	03000000 	movweq	r0, #0
    1de8:	050103fd 	streq	r0, [r1, #-1021]	; 0xfffffc03
    1dec:	06051403 	streq	r1, [r5], -r3, lsl #8
    1df0:	01050106 	tsteq	r5, r6, lsl #2
    1df4:	0603052c 	streq	r0, [r3], -ip, lsr #10
    1df8:	04020044 	streq	r0, [r2], #-68	; 0xffffffbc
    1dfc:	004a0601 	subeq	r0, sl, r1, lsl #12
    1e00:	4a020402 	bmi	82e10 <_Min_Heap_Size+0x82610>
    1e04:	03040200 	movweq	r0, #16896	; 0x4200
    1e08:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1e0c:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    1e10:	004a0504 	subeq	r0, sl, r4, lsl #10
    1e14:	4a060402 	bmi	182e24 <_Min_Heap_Size+0x182624>
    1e18:	06040200 	streq	r0, [r4], -r0, lsl #4
    1e1c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1e20:	31062006 	tstcc	r6, r6
    1e24:	01040200 	mrseq	r0, R12_usr
    1e28:	2f062006 	svccs	0x00062006
    1e2c:	0c053e3d 	stceq	14, cr3, [r5], {61}	; 0x3d
    1e30:	06050106 	streq	r0, [r5], -r6, lsl #2
    1e34:	0603052e 	streq	r0, [r3], -lr, lsr #10
    1e38:	052e1503 	streq	r1, [lr, #-1283]!	; 0xfffffafd
    1e3c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1e40:	5b3f0603 	blpl	fc3654 <_Min_Heap_Size+0xfc2e54>
    1e44:	5b5b5941 	blpl	16d8350 <_Min_Heap_Size+0x16d7b50>
    1e48:	063c0659 			; <UNDEFINED> instruction: 0x063c0659
    1e4c:	14055b23 	strne	r5, [r5], #-2851	; 0xfffff4dd
    1e50:	03050106 	movweq	r0, #20742	; 0x5106
    1e54:	11052f06 	tstne	r5, r6, lsl #30
    1e58:	03050106 	movweq	r0, #20742	; 0x5106
    1e5c:	12053d06 	andne	r3, r5, #384	; 0x180
    1e60:	03050106 	movweq	r0, #20742	; 0x5106
    1e64:	16052f06 	strne	r2, [r5], -r6, lsl #30
    1e68:	03050106 	movweq	r0, #20742	; 0x5106
    1e6c:	01052206 	tsteq	r5, r6, lsl #4
    1e70:	03051306 	movweq	r1, #21254	; 0x5306
    1e74:	02040200 	andeq	r0, r4, #0, 4
    1e78:	00204803 	eoreq	r4, r0, r3, lsl #16
    1e7c:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    1e80:	01040200 	mrseq	r0, R12_usr
    1e84:	06050567 	streq	r0, [r5], -r7, ror #10
    1e88:	0611056b 	ldreq	r0, [r1], -fp, ror #10
    1e8c:	06050501 	streq	r0, [r5], -r1, lsl #10
    1e90:	052e0e03 	streq	r0, [lr, #-3587]!	; 0xfffff1fd
    1e94:	6403060c 	strvs	r0, [r3], #-1548	; 0xfffff9f4
    1e98:	0301054a 	movweq	r0, #5450	; 0x154a
    1e9c:	0502203f 	streq	r2, [r2, #-63]	; 0xffffffc1
    1ea0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1ea4:	02050001 	andeq	r0, r5, #1
    1ea8:	00000000 	andeq	r0, r0, r0
    1eac:	0104cf03 	tsteq	r4, r3, lsl #30
    1eb0:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    1eb4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    1eb8:	03053a01 	movweq	r3, #23041	; 0x5a01
    1ebc:	2e065206 	cdpcs	2, 0, cr5, cr6, cr6, {0}
    1ec0:	01040200 	mrseq	r0, R12_usr
    1ec4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1ec8:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    1ecc:	004a0304 	subeq	r0, sl, r4, lsl #6
    1ed0:	4a040402 	bmi	102ee0 <_Min_Heap_Size+0x1026e0>
    1ed4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1ed8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1edc:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1ee0:	002e0604 	eoreq	r0, lr, r4, lsl #12
    1ee4:	20060402 	andcs	r0, r6, r2, lsl #8
    1ee8:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    1eec:	20060104 	andcs	r0, r6, r4, lsl #2
    1ef0:	002f3d06 	eoreq	r3, pc, r6, lsl #26
    1ef4:	06010402 	streq	r0, [r1], -r2, lsl #8
    1ef8:	003d062e 	eorseq	r0, sp, lr, lsr #12
    1efc:	06010402 	streq	r0, [r1], -r2, lsl #8
    1f00:	053e062e 	ldreq	r0, [lr, #-1582]!	; 0xfffff9d2
    1f04:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1f08:	03052e06 	movweq	r2, #24070	; 0x5e06
    1f0c:	2e150306 	cdpcs	3, 1, cr0, cr5, cr6, {0}
    1f10:	01061105 	tsteq	r6, r5, lsl #2
    1f14:	3f060305 	svccc	0x00060305
    1f18:	5b59415b 	blpl	165248c <_Min_Heap_Size+0x1651c8c>
    1f1c:	06594d59 			; <UNDEFINED> instruction: 0x06594d59
    1f20:	5b23063c 	blpl	8c3818 <_Min_Heap_Size+0x8c3018>
    1f24:	01061405 	tsteq	r6, r5, lsl #8
    1f28:	2f060305 	svccs	0x00060305
    1f2c:	01061105 	tsteq	r6, r5, lsl #2
    1f30:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    1f34:	01061205 	tsteq	r6, r5, lsl #4
    1f38:	2f060305 	svccs	0x00060305
    1f3c:	01061605 	tsteq	r6, r5, lsl #12
    1f40:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    1f44:	13060105 	movwne	r0, #24837	; 0x6105
    1f48:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1f4c:	46030204 	strmi	r0, [r3], -r4, lsl #4
    1f50:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1f54:	02006701 	andeq	r6, r0, #262144	; 0x40000
    1f58:	00670204 	rsbeq	r0, r7, r4, lsl #4
    1f5c:	67020402 	strvs	r0, [r2, -r2, lsl #8]
    1f60:	6b060505 	blvs	18337c <_Min_Heap_Size+0x182b7c>
    1f64:	01061105 	tsteq	r6, r5, lsl #2
    1f68:	03060505 	movweq	r0, #25861	; 0x6505
    1f6c:	0c052e0e 	stceq	14, cr2, [r5], {14}
    1f70:	4a630306 	bmi	18c2b90 <_Min_Heap_Size+0x18c2390>
    1f74:	c1030105 	tstgt	r3, r5, lsl #2
    1f78:	06022000 	streq	r2, [r2], -r0
    1f7c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1f80:	02050001 	andeq	r0, r5, #1
    1f84:	00000000 	andeq	r0, r0, r0
    1f88:	0105da03 	tsteq	r5, r3, lsl #20
    1f8c:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    1f90:	02160601 	andseq	r0, r6, #1048576	; 0x100000
    1f94:	01010001 	tsteq	r1, r1
    1f98:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1f9c:	00000002 	andeq	r0, r0, r2
    1fa0:	059d0300 	ldreq	r0, [sp, #768]	; 0x300
    1fa4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    1fa8:	01060605 	tsteq	r6, r5, lsl #12
    1fac:	051e0105 	ldreq	r0, [lr, #-261]	; 0xfffffefb
    1fb0:	00360603 	eorseq	r0, r6, r3, lsl #12
    1fb4:	06010402 	streq	r0, [r1], -r2, lsl #8
    1fb8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1fbc:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    1fc0:	004a0304 	subeq	r0, sl, r4, lsl #6
    1fc4:	4a040402 	bmi	102fd4 <_Min_Heap_Size+0x1027d4>
    1fc8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1fcc:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1fd0:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1fd4:	063c0604 	ldrteq	r0, [ip], -r4, lsl #12
    1fd8:	06110530 			; <UNDEFINED> instruction: 0x06110530
    1fdc:	06030501 	streq	r0, [r3], -r1, lsl #10
    1fe0:	580b033f 	stmdapl	fp, {r0, r1, r2, r3, r4, r5, r8, r9}
    1fe4:	0614053f 			; <UNDEFINED> instruction: 0x0614053f
    1fe8:	06030501 	streq	r0, [r3], -r1, lsl #10
    1fec:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    1ff0:	06030501 	streq	r0, [r3], -r1, lsl #10
    1ff4:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
    1ff8:	06030501 	streq	r0, [r3], -r1, lsl #10
    1ffc:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    2000:	06030501 	streq	r0, [r3], -r1, lsl #10
    2004:	06160521 	ldreq	r0, [r6], -r1, lsr #10
    2008:	06030501 	streq	r0, [r3], -r1, lsl #10
    200c:	142e0123 	strtne	r0, [lr], #-291	; 0xfffffedd
    2010:	13060105 	movwne	r0, #24837	; 0x6105
    2014:	5f030c05 	svcpl	0x00030c05
    2018:	03010520 	movweq	r0, #5408	; 0x1520
    201c:	05022021 	streq	r2, [r2, #-33]	; 0xffffffdf
    2020:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2024:	02050001 	andeq	r0, r5, #1
    2028:	08000d48 	stmdaeq	r0, {r3, r6, r8, sl, fp}
    202c:	0108ef03 	tsteq	r8, r3, lsl #30
    2030:	03050106 	movweq	r0, #20742	; 0x5106
    2034:	13134b06 	tstne	r3, #6144	; 0x1800
    2038:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    203c:	06052e01 	streq	r2, [r5], -r1, lsl #28
    2040:	06050520 	streq	r0, [r5], -r0, lsr #10
    2044:	0608055a 			; <UNDEFINED> instruction: 0x0608055a
    2048:	00190501 	andseq	r0, r9, r1, lsl #10
    204c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2050:	20220f05 	eorcs	r0, r2, r5, lsl #30
    2054:	23060505 	movwcs	r0, #25861	; 0x6505
    2058:	01061605 	tsteq	r6, r5, lsl #12
    205c:	2f060505 	svccs	0x00060505
    2060:	01061305 	tsteq	r6, r5, lsl #6
    2064:	3f060505 	svccc	0x00060505
    2068:	01061105 	tsteq	r6, r5, lsl #2
    206c:	0605052e 	streq	r0, [r5], -lr, lsr #10
    2070:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    2074:	06050501 	streq	r0, [r5], -r1, lsl #10
    2078:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    207c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2080:	06150531 			; <UNDEFINED> instruction: 0x06150531
    2084:	20080501 	andcs	r0, r8, r1, lsl #10
    2088:	05441305 	strbeq	r1, [r4, #-773]	; 0xfffffcfb
    208c:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    2090:	3c780301 	ldclcc	3, cr0, [r8], #-4
    2094:	02003805 	andeq	r3, r0, #327680	; 0x50000
    2098:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    209c:	09052813 	stmdbeq	r5, {r0, r1, r4, fp, sp}
    20a0:	17054306 	strne	r4, [r5, -r6, lsl #6]
    20a4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    20a8:	10053e06 	andne	r3, r5, r6, lsl #28
    20ac:	09050106 	stmdbeq	r5, {r1, r2, r8}
    20b0:	2a053206 	bcs	14e8d0 <_Min_Heap_Size+0x14e0d0>
    20b4:	0e050106 	adfeqs	f0, f5, f6
    20b8:	201f052e 	andscs	r0, pc, lr, lsr #10
    20bc:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    20c0:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    20c4:	0c051907 			; <UNDEFINED> instruction: 0x0c051907
    20c8:	19050106 	stmdbne	r5, {r1, r2, r8}
    20cc:	060b052e 	streq	r0, [fp], -lr, lsr #10
    20d0:	053c6e03 	ldreq	r6, [ip, #-3587]!	; 0xfffff1fd
    20d4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    20d8:	07052e0b 	streq	r2, [r5, -fp, lsl #28]
    20dc:	0b052206 	bleq	14a8fc <_Min_Heap_Size+0x14a0fc>
    20e0:	0a050106 	beq	142500 <_Min_Heap_Size+0x141d00>
    20e4:	06070574 			; <UNDEFINED> instruction: 0x06070574
    20e8:	060a0534 			; <UNDEFINED> instruction: 0x060a0534
    20ec:	06090501 	streq	r0, [r9], -r1, lsl #10
    20f0:	06290535 			; <UNDEFINED> instruction: 0x06290535
    20f4:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    20f8:	05201d05 	streq	r1, [r0, #-3333]!	; 0xfffff2fb
    20fc:	06210609 	strteq	r0, [r1], -r9, lsl #12
    2100:	03130501 	tsteq	r3, #4194304	; 0x400000
    2104:	201f2068 	andscs	r2, pc, r8, rrx
    2108:	03060505 	movweq	r0, #25861	; 0x6505
    210c:	0905201e 	stmdbeq	r5, {r1, r2, r3, r4, sp}
    2110:	08050106 	stmdaeq	r5, {r1, r2, r8}
    2114:	06050574 			; <UNDEFINED> instruction: 0x06050574
    2118:	06130528 	ldreq	r0, [r3], -r8, lsr #10
    211c:	06050501 	streq	r0, [r5], -r1, lsl #10
    2120:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    2124:	06070501 	streq	r0, [r7], -r1, lsl #10
    2128:	05207803 	streq	r7, [r0, #-2051]!	; 0xfffff7fd
    212c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    2130:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    2134:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    2138:	2e0a030c 	cdpcs	3, 0, cr0, cr10, cr12, {0}
    213c:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    2140:	3c43030f 	mcrrcc	3, 0, r0, r3, cr15
    2144:	00010220 	andeq	r0, r1, r0, lsr #4
    2148:	01050101 	tsteq	r5, r1, lsl #2
    214c:	00020500 	andeq	r0, r2, r0, lsl #10
    2150:	03000000 	movweq	r0, #0
    2154:	060109c5 	streq	r0, [r1], -r5, asr #19
    2158:	06030501 	streq	r0, [r3], -r1, lsl #10
    215c:	1513134b 	ldrne	r1, [r3, #-843]	; 0xfffffcb5
    2160:	01060c05 	tsteq	r6, r5, lsl #24
    2164:	2006052e 	andcs	r0, r6, lr, lsr #10
    2168:	5a060505 	bpl	183584 <_Min_Heap_Size+0x182d84>
    216c:	01060805 	tsteq	r6, r5, lsl #16
    2170:	02001905 	andeq	r1, r0, #81920	; 0x14000
    2174:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    2178:	0520220f 	streq	r2, [r0, #-527]!	; 0xfffffdf1
    217c:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    2180:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    2184:	052f0605 	streq	r0, [pc, #-1541]!	; 1b87 <_Min_Heap_Size+0x1387>
    2188:	20010614 	andcs	r0, r1, r4, lsl r6
    218c:	2f060505 	svccs	0x00060505
    2190:	01061a05 	tsteq	r6, r5, lsl #20
    2194:	23060505 	movwcs	r0, #25861	; 0x6505
    2198:	01061105 	tsteq	r6, r5, lsl #2
    219c:	0605052e 	streq	r0, [r5], -lr, lsr #10
    21a0:	06170522 	ldreq	r0, [r7], -r2, lsr #10
    21a4:	06050501 	streq	r0, [r5], -r1, lsl #10
    21a8:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    21ac:	06050501 	streq	r0, [r5], -r1, lsl #10
    21b0:	06150531 			; <UNDEFINED> instruction: 0x06150531
    21b4:	20080501 	andcs	r0, r8, r1, lsl #10
    21b8:	05441305 	strbeq	r1, [r4, #-773]	; 0xfffffcfb
    21bc:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    21c0:	3c780301 	ldclcc	3, cr0, [r8], #-4
    21c4:	02003805 	andeq	r3, r0, #327680	; 0x50000
    21c8:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    21cc:	1f372813 	svcne	0x00372813
    21d0:	06090520 	streq	r0, [r9], -r0, lsr #10
    21d4:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    21d8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    21dc:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    21e0:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    21e4:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    21e8:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    21ec:	18052032 	stmdane	r5, {r1, r4, r5, sp}
    21f0:	2e160520 	cfmul64cs	mvdx0, mvdx6, mvdx0
    21f4:	2f060905 	svccs	0x00060905
    21f8:	0b050106 	bleq	142618 <_Min_Heap_Size+0x141e18>
    21fc:	28052606 	stmdacs	r5, {r1, r2, r9, sl, sp}
    2200:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    2204:	20170520 	andscs	r0, r7, r0, lsr #10
    2208:	26060905 	strcs	r0, [r6], -r5, lsl #18
    220c:	01061305 	tsteq	r6, r5, lsl #6
    2210:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    2214:	01060c05 	tsteq	r6, r5, lsl #24
    2218:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    221c:	6703060b 	strvs	r0, [r3, -fp, lsl #12]
    2220:	0611053c 			; <UNDEFINED> instruction: 0x0611053c
    2224:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    2228:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    222c:	01060b05 	tsteq	r6, r5, lsl #22
    2230:	05740a05 	ldrbeq	r0, [r4, #-2565]!	; 0xfffff5fb
    2234:	05340607 	ldreq	r0, [r4, #-1543]!	; 0xfffff9f9
    2238:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    223c:	05350609 	ldreq	r0, [r5, #-1545]!	; 0xfffff9f7
    2240:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    2244:	3c05200c 	stccc	0, cr2, [r5], {12}
    2248:	01040200 	mrseq	r0, R12_usr
    224c:	007e053c 	rsbseq	r0, lr, ip, lsr r5
    2250:	20020402 	andcs	r0, r2, r2, lsl #8
    2254:	02006f05 	andeq	r6, r0, #5, 30
    2258:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    225c:	0534060b 	ldreq	r0, [r4, #-1547]!	; 0xfffff9f5
    2260:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    2264:	19052032 	stmdbne	r5, {r1, r4, r5, sp}
    2268:	2e170520 	cfmul64cs	mvdx0, mvdx7, mvdx0
    226c:	36060505 	strcc	r0, [r6], -r5, lsl #10
    2270:	01061405 	tsteq	r6, r5, lsl #8
    2274:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    2278:	01060c05 	tsteq	r6, r5, lsl #24
    227c:	22010532 	andcs	r0, r1, #209715200	; 0xc800000
    2280:	41030f05 	tstmi	r3, r5, lsl #30
    2284:	0102203c 	tsteq	r2, ip, lsr r0
    2288:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    228c:	02050001 	andeq	r0, r5, #1
    2290:	00000000 	andeq	r0, r0, r0
    2294:	010a9c03 	tsteq	sl, r3, lsl #24
    2298:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    229c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    22a0:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
    22a4:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    22a8:	19050106 	stmdbne	r5, {r1, r2, r8}
    22ac:	01040200 	mrseq	r0, R12_usr
    22b0:	06050520 	streq	r0, [r5], -r0, lsr #10
    22b4:	06170525 	ldreq	r0, [r7], -r5, lsr #10
    22b8:	06050501 	streq	r0, [r5], -r1, lsl #10
    22bc:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    22c0:	06050501 	streq	r0, [r5], -r1, lsl #10
    22c4:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    22c8:	06050501 	streq	r0, [r5], -r1, lsl #10
    22cc:	06160522 	ldreq	r0, [r6], -r2, lsr #10
    22d0:	06050501 	streq	r0, [r5], -r1, lsl #10
    22d4:	0613052f 	ldreq	r0, [r3], -pc, lsr #10
    22d8:	05052001 	streq	r2, [r5, #-1]
    22dc:	20063106 	andcs	r3, r6, r6, lsl #2
    22e0:	0c054c06 	stceq	12, cr4, [r5], {6}
    22e4:	24200106 	strtcs	r0, [r0], #-262	; 0xfffffefa
    22e8:	030e0520 	movweq	r0, #58656	; 0xe520
    22ec:	2020206f 	eorcs	r2, r0, pc, rrx
    22f0:	13030105 	movwne	r0, #12549	; 0x3105
    22f4:	00010220 	andeq	r0, r1, r0, lsr #4
    22f8:	01050101 	tsteq	r5, r1, lsl #2
    22fc:	00020500 	andeq	r0, r2, r0, lsl #10
    2300:	03000000 	movweq	r0, #0
    2304:	06010ae3 	streq	r0, [r1], -r3, ror #21
    2308:	06030501 	streq	r0, [r3], -r1, lsl #10
    230c:	0c051521 	cfstr32eq	mvfx1, [r5], {33}	; 0x21
    2310:	06050106 	streq	r0, [r5], -r6, lsl #2
    2314:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    2318:	0608053e 			; <UNDEFINED> instruction: 0x0608053e
    231c:	00190501 	andseq	r0, r9, r1, lsl #10
    2320:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2324:	05220e05 	streq	r0, [r2, #-3589]!	; 0xfffff1fb
    2328:	20270301 	eorcs	r0, r7, r1, lsl #6
    232c:	03060505 	movweq	r0, #25861	; 0x6505
    2330:	1705205c 	smlsdne	r5, ip, r0, r2
    2334:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2338:	17052106 	strne	r2, [r5, -r6, lsl #2]
    233c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2340:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    2344:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2348:	16052206 	strne	r2, [r5], -r6, lsl #4
    234c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2350:	13052f06 	movwne	r2, #24326	; 0x5f06
    2354:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2358:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    235c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    2360:	05052025 	streq	r2, [r5, #-37]	; 0xffffffdb
    2364:	0a053106 	beq	14e784 <_Min_Heap_Size+0x14df84>
    2368:	29050106 	stmdbcs	r5, {r1, r2, r8}
    236c:	06050520 	streq	r0, [r5], -r0, lsr #10
    2370:	060a0531 			; <UNDEFINED> instruction: 0x060a0531
    2374:	20260501 	eorcs	r0, r6, r1, lsl #10
    2378:	31060505 	tstcc	r6, r5, lsl #10
    237c:	01060a05 	tsteq	r6, r5, lsl #20
    2380:	05202605 	streq	r2, [r0, #-1541]!	; 0xfffff9fb
    2384:	13230605 			; <UNDEFINED> instruction: 0x13230605
    2388:	01064d05 	tsteq	r6, r5, lsl #26
    238c:	2e200505 	cfsh64cs	mvdx0, mvdx0, #5
    2390:	02003f06 	andeq	r3, r0, #6, 30
    2394:	004e0104 	subeq	r0, lr, r4, lsl #2
    2398:	01010402 	tsteq	r1, r2, lsl #8
    239c:	01040200 	mrseq	r0, R12_usr
    23a0:	04020001 	streq	r0, [r2], #-1
    23a4:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    23a8:	02001f05 	andeq	r1, r0, #5, 30
    23ac:	d1030104 	tstle	r3, r4, lsl #2
    23b0:	05052078 	streq	r2, [r5, #-120]	; 0xffffff88
    23b4:	01040200 	mrseq	r0, R12_usr
    23b8:	00040514 	andeq	r0, r4, r4, lsl r5
    23bc:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    23c0:	01040200 	mrseq	r0, R12_usr
    23c4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    23c8:	2f060104 	svccs	0x00060104
    23cc:	01040200 	mrseq	r0, R12_usr
    23d0:	01040106 	tsteq	r4, r6, lsl #2
    23d4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    23d8:	aa030104 	bge	c27f0 <_Min_Heap_Size+0xc1ff0>
    23dc:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    23e0:	2e060104 	adfcss	f0, f6, f4
    23e4:	1f050204 	svcne	0x00050204
    23e8:	01040200 	mrseq	r0, R12_usr
    23ec:	01798403 	cmneq	r9, r3, lsl #8
    23f0:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    23f4:	00140104 	andseq	r0, r4, r4, lsl #2
    23f8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    23fc:	01040200 	mrseq	r0, R12_usr
    2400:	02002006 	andeq	r2, r0, #6
    2404:	2f060104 	svccs	0x00060104
    2408:	01040200 	mrseq	r0, R12_usr
    240c:	01040106 	tsteq	r4, r6, lsl #2
    2410:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2414:	f7030104 			; <UNDEFINED> instruction: 0xf7030104
    2418:	0c050106 	stfeqs	f0, [r5], {6}
    241c:	20162e30 	andscs	r2, r6, r0, lsr lr
    2420:	5b030e05 	blpl	c5c3c <_Min_Heap_Size+0xc543c>
    2424:	08022020 	stmdaeq	r2, {r5, sp}
    2428:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    242c:	02050001 	andeq	r0, r5, #1
    2430:	00000000 	andeq	r0, r0, r0
    2434:	010bbc03 	tsteq	fp, r3, lsl #24
    2438:	14130305 	ldrne	r0, [r3], #-773	; 0xfffffcfb
    243c:	01061005 	tsteq	r6, r5
    2440:	4b060305 	blmi	18305c <_Min_Heap_Size+0x18285c>
    2444:	01060d05 	tsteq	r6, r5, lsl #26
    2448:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    244c:	04020005 	streq	r0, [r2], #-5
    2450:	05310602 	ldreq	r0, [r1, #-1538]!	; 0xfffff9fe
    2454:	04020003 	streq	r0, [r2], #-3
    2458:	10051502 	andne	r1, r5, r2, lsl #10
    245c:	02040200 	andeq	r0, r4, #0, 4
    2460:	03050106 	movweq	r0, #20742	; 0x5106
    2464:	02040200 	andeq	r0, r4, #0, 4
    2468:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
    246c:	02040200 	andeq	r0, r4, #0, 4
    2470:	06050106 	streq	r0, [r5], -r6, lsl #2
    2474:	02040200 	andeq	r0, r4, #0, 4
    2478:	0005053c 	andeq	r0, r5, ip, lsr r5
    247c:	06020402 	streq	r0, [r2], -r2, lsl #8
    2480:	00030535 	andeq	r0, r3, r5, lsr r5
    2484:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    2488:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    248c:	13060204 	movwne	r0, #25092	; 0x6204
    2490:	02040200 	andeq	r0, r4, #0, 4
    2494:	00310520 	eorseq	r0, r1, r0, lsr #10
    2498:	03010402 	movweq	r0, #5122	; 0x1402
    249c:	0505206e 	streq	r2, [r5, #-110]	; 0xffffff92
    24a0:	01040200 	mrseq	r0, R12_usr
    24a4:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    24a8:	00010104 	andeq	r0, r1, r4, lsl #2
    24ac:	01010402 	tsteq	r1, r2, lsl #8
    24b0:	01040200 	mrseq	r0, R12_usr
    24b4:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    24b8:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    24bc:	78980301 	ldmvc	r8, {r0, r8, r9}
    24c0:	00050520 	andeq	r0, r5, r0, lsr #10
    24c4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    24c8:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    24cc:	00140104 	andseq	r0, r4, r4, lsl #2
    24d0:	06010402 	streq	r0, [r1], -r2, lsl #8
    24d4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    24d8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    24dc:	06010402 	streq	r0, [r1], -r2, lsl #8
    24e0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    24e4:	04020005 	streq	r0, [r2], #-5
    24e8:	07e30301 	strbeq	r0, [r3, r1, lsl #6]!
    24ec:	04020001 	streq	r0, [r2], #-1
    24f0:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    24f4:	001f0502 	andseq	r0, pc, r2, lsl #10
    24f8:	03010402 	movweq	r0, #5122	; 0x1402
    24fc:	050178cb 	streq	r7, [r1, #-2251]	; 0xfffff735
    2500:	04020004 	streq	r0, [r2], #-4
    2504:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2508:	00140104 	andseq	r0, r4, r4, lsl #2
    250c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2510:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2514:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2518:	06010402 	streq	r0, [r1], -r2, lsl #8
    251c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2520:	04020005 	streq	r0, [r2], #-5
    2524:	07b00301 	ldreq	r0, [r0, r1, lsl #6]!
    2528:	04020001 	streq	r0, [r2], #-1
    252c:	32053c01 	andcc	r3, r5, #256	; 0x100
    2530:	01040200 	mrseq	r0, R12_usr
    2534:	00050516 	andeq	r0, r5, r6, lsl r5
    2538:	06010402 	streq	r0, [r1], -r2, lsl #8
    253c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    2540:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2544:	00010104 	andeq	r0, r1, r4, lsl #2
    2548:	01010402 	tsteq	r1, r2, lsl #8
    254c:	1f050204 	svcne	0x00050204
    2550:	01040200 	mrseq	r0, R12_usr
    2554:	20789103 	rsbscs	r9, r8, r3, lsl #2
    2558:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    255c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2560:	04020004 	streq	r0, [r2], #-4
    2564:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2568:	2e060104 	adfcss	f0, f6, f4
    256c:	01040200 	mrseq	r0, R12_usr
    2570:	02002f06 	andeq	r2, r0, #6, 30
    2574:	01060104 	tsteq	r6, r4, lsl #2
    2578:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    257c:	01040200 	mrseq	r0, R12_usr
    2580:	0107ea03 	tsteq	r7, r3, lsl #20
    2584:	01040200 	mrseq	r0, R12_usr
    2588:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    258c:	02001f05 	andeq	r1, r0, #5, 30
    2590:	c4030104 	strgt	r0, [r3], #-260	; 0xfffffefc
    2594:	04050178 	streq	r0, [r5], #-376	; 0xfffffe88
    2598:	01040200 	mrseq	r0, R12_usr
    259c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    25a0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    25a4:	20060104 	andcs	r0, r6, r4, lsl #2
    25a8:	01040200 	mrseq	r0, R12_usr
    25ac:	02002f06 	andeq	r2, r0, #6, 30
    25b0:	01060104 	tsteq	r6, r4, lsl #2
    25b4:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    25b8:	01040200 	mrseq	r0, R12_usr
    25bc:	0107b703 	tsteq	r7, r3, lsl #14
    25c0:	01040200 	mrseq	r0, R12_usr
    25c4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    25c8:	00010601 	andeq	r0, r1, r1, lsl #12
    25cc:	13010402 	movwne	r0, #5122	; 0x1402
    25d0:	01040200 	mrseq	r0, R12_usr
    25d4:	04020001 	streq	r0, [r2], #-1
    25d8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    25dc:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    25e0:	001f0502 	andseq	r0, pc, r2, lsl #10
    25e4:	03010402 	movweq	r0, #5122	; 0x1402
    25e8:	05207890 	streq	r7, [r0, #-2192]!	; 0xfffff770
    25ec:	04020005 	streq	r0, [r2], #-5
    25f0:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    25f4:	01040200 	mrseq	r0, R12_usr
    25f8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    25fc:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2600:	06010402 	streq	r0, [r1], -r2, lsl #8
    2604:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2608:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    260c:	00050501 	andeq	r0, r5, r1, lsl #10
    2610:	03010402 	movweq	r0, #5122	; 0x1402
    2614:	000107eb 	andeq	r0, r1, fp, ror #15
    2618:	06010402 	streq	r0, [r1], -r2, lsl #8
    261c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2620:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2624:	78c30301 	stmiavc	r3, {r0, r8, r9}^
    2628:	00040501 	andeq	r0, r4, r1, lsl #10
    262c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2630:	01040200 	mrseq	r0, R12_usr
    2634:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2638:	00200601 	eoreq	r0, r0, r1, lsl #12
    263c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2640:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2644:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2648:	00050501 	andeq	r0, r5, r1, lsl #10
    264c:	03010402 	movweq	r0, #5122	; 0x1402
    2650:	000107b8 			; <UNDEFINED> instruction: 0x000107b8
    2654:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    2658:	01040200 	mrseq	r0, R12_usr
    265c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    2660:	00150104 	andseq	r0, r5, r4, lsl #2
    2664:	01010402 	tsteq	r1, r2, lsl #8
    2668:	01040200 	mrseq	r0, R12_usr
    266c:	04020001 	streq	r0, [r2], #-1
    2670:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2674:	02001f05 	andeq	r1, r0, #5, 30
    2678:	8d030104 	stfhis	f0, [r3, #-16]
    267c:	05052078 	streq	r2, [r5, #-120]	; 0xffffff88
    2680:	01040200 	mrseq	r0, R12_usr
    2684:	00040514 	andeq	r0, r4, r4, lsl r5
    2688:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    268c:	01040200 	mrseq	r0, R12_usr
    2690:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2694:	2f060104 	svccs	0x00060104
    2698:	01040200 	mrseq	r0, R12_usr
    269c:	01040106 	tsteq	r4, r6, lsl #2
    26a0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    26a4:	ee030104 	adfs	f0, f3, f4
    26a8:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    26ac:	2e060104 	adfcss	f0, f6, f4
    26b0:	1f050204 	svcne	0x00050204
    26b4:	01040200 	mrseq	r0, R12_usr
    26b8:	0178c003 	cmneq	r8, r3
    26bc:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    26c0:	00140104 	andseq	r0, r4, r4, lsl #2
    26c4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    26c8:	01040200 	mrseq	r0, R12_usr
    26cc:	02002006 	andeq	r2, r0, #6
    26d0:	2f060104 	svccs	0x00060104
    26d4:	01040200 	mrseq	r0, R12_usr
    26d8:	01040106 	tsteq	r4, r6, lsl #2
    26dc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    26e0:	bb030104 	bllt	c2af8 <_Min_Heap_Size+0xc22f8>
    26e4:	03020107 	movweq	r0, #8455	; 0x2107
    26e8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    26ec:	02050001 	andeq	r0, r5, #1
    26f0:	00000000 	andeq	r0, r0, r0
    26f4:	010bdb03 	tsteq	fp, r3, lsl #22
    26f8:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    26fc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    2700:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
    2704:	02040200 	andeq	r0, r4, #0, 4
    2708:	03053106 	movweq	r3, #20742	; 0x5106
    270c:	02040200 	andeq	r0, r4, #0, 4
    2710:	000c0515 	andeq	r0, ip, r5, lsl r5
    2714:	06020402 	streq	r0, [r2], -r2, lsl #8
    2718:	00060501 	andeq	r0, r6, r1, lsl #10
    271c:	3c020402 	cfstrscc	mvf0, [r2], {2}
    2720:	03060505 	movweq	r0, #25861	; 0x6505
    2724:	03052e0d 	movweq	r2, #24077	; 0x5e0d
    2728:	06010515 			; <UNDEFINED> instruction: 0x06010515
    272c:	05052013 	streq	r2, [r5, #-19]	; 0xffffffed
    2730:	01040200 	mrseq	r0, R12_usr
    2734:	206c0306 	rsbcs	r0, ip, r6, lsl #6
    2738:	01040200 	mrseq	r0, R12_usr
    273c:	04020001 	streq	r0, [r2], #-1
    2740:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2744:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2748:	001f0502 	andseq	r0, pc, r2, lsl #10
    274c:	03010402 	movweq	r0, #5122	; 0x1402
    2750:	052077fb 	streq	r7, [r0, #-2043]!	; 0xfffff805
    2754:	04020005 	streq	r0, [r2], #-5
    2758:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    275c:	01040200 	mrseq	r0, R12_usr
    2760:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2764:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2768:	06010402 	streq	r0, [r1], -r2, lsl #8
    276c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2770:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2774:	00050501 	andeq	r0, r5, r1, lsl #10
    2778:	03010402 	movweq	r0, #5122	; 0x1402
    277c:	00010880 	andeq	r0, r1, r0, lsl #17
    2780:	06010402 	streq	r0, [r1], -r2, lsl #8
    2784:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2788:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    278c:	78ae0301 	stmiavc	lr!, {r0, r8, r9}
    2790:	00040501 	andeq	r0, r4, r1, lsl #10
    2794:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2798:	01040200 	mrseq	r0, R12_usr
    279c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    27a0:	00200601 	eoreq	r0, r0, r1, lsl #12
    27a4:	06010402 	streq	r0, [r1], -r2, lsl #8
    27a8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    27ac:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    27b0:	00050501 	andeq	r0, r5, r1, lsl #10
    27b4:	03010402 	movweq	r0, #5122	; 0x1402
    27b8:	000107cd 	andeq	r0, r1, sp, asr #15
    27bc:	3c010402 	cfstrscc	mvf0, [r1], {2}
    27c0:	050d0105 	streq	r0, [sp, #-261]	; 0xfffffefb
    27c4:	0b030605 	bleq	c3fe0 <_Min_Heap_Size+0xc37e0>
    27c8:	3c2e0120 	stfccs	f0, [lr], #-128	; 0xffffff80
    27cc:	0515202e 	ldreq	r2, [r5, #-46]	; 0xffffffd2
    27d0:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    27d4:	07052008 	streq	r2, [r5, -r8]
    27d8:	01040200 	mrseq	r0, R12_usr
    27dc:	02002206 	andeq	r2, r0, #1610612736	; 0x60000000
    27e0:	00010104 	andeq	r0, r1, r4, lsl #2
    27e4:	01010402 	tsteq	r1, r2, lsl #8
    27e8:	01040200 	mrseq	r0, R12_usr
    27ec:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    27f0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    27f4:	77f00301 	ldrbvc	r0, [r0, r1, lsl #6]!
    27f8:	00050520 	andeq	r0, r5, r0, lsr #10
    27fc:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2800:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2804:	00140104 	andseq	r0, r4, r4, lsl #2
    2808:	06010402 	streq	r0, [r1], -r2, lsl #8
    280c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2810:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2814:	06010402 	streq	r0, [r1], -r2, lsl #8
    2818:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    281c:	04020007 	streq	r0, [r2], #-7
    2820:	088b0301 	stmeq	fp, {r0, r8, r9}
    2824:	04020001 	streq	r0, [r2], #-1
    2828:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    282c:	001f0502 	andseq	r0, pc, r2, lsl #10
    2830:	03010402 	movweq	r0, #5122	; 0x1402
    2834:	050178a3 	streq	r7, [r1, #-2211]	; 0xfffff75d
    2838:	04020004 	streq	r0, [r2], #-4
    283c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2840:	00140104 	andseq	r0, r4, r4, lsl #2
    2844:	06010402 	streq	r0, [r1], -r2, lsl #8
    2848:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    284c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2850:	06010402 	streq	r0, [r1], -r2, lsl #8
    2854:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2858:	04020007 	streq	r0, [r2], #-7
    285c:	07d80301 	ldrbeq	r0, [r8, r1, lsl #6]
    2860:	04020001 	streq	r0, [r2], #-1
    2864:	02002e01 	andeq	r2, r0, #1, 28
    2868:	01060104 	tsteq	r6, r4, lsl #2
    286c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2870:	00140104 	andseq	r0, r4, r4, lsl #2
    2874:	01010402 	tsteq	r1, r2, lsl #8
    2878:	01040200 	mrseq	r0, R12_usr
    287c:	04020001 	streq	r0, [r2], #-1
    2880:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2884:	02001f05 	andeq	r1, r0, #5, 30
    2888:	ee030104 	adfs	f0, f3, f4
    288c:	05052077 	streq	r2, [r5, #-119]	; 0xffffff89
    2890:	01040200 	mrseq	r0, R12_usr
    2894:	00040514 	andeq	r0, r4, r4, lsl r5
    2898:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    289c:	01040200 	mrseq	r0, R12_usr
    28a0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    28a4:	2f060104 	svccs	0x00060104
    28a8:	01040200 	mrseq	r0, R12_usr
    28ac:	01040106 	tsteq	r4, r6, lsl #2
    28b0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    28b4:	8d030104 	stfhis	f0, [r3, #-16]
    28b8:	02000108 	andeq	r0, r0, #8, 2
    28bc:	2e060104 	adfcss	f0, f6, f4
    28c0:	1f050204 	svcne	0x00050204
    28c4:	01040200 	mrseq	r0, R12_usr
    28c8:	0178a103 	cmneq	r8, r3, lsl #2
    28cc:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    28d0:	00140104 	andseq	r0, r4, r4, lsl #2
    28d4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    28d8:	01040200 	mrseq	r0, R12_usr
    28dc:	02002006 	andeq	r2, r0, #6
    28e0:	2f060104 	svccs	0x00060104
    28e4:	01040200 	mrseq	r0, R12_usr
    28e8:	01040106 	tsteq	r4, r6, lsl #2
    28ec:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    28f0:	da030104 	ble	c2d08 <_Min_Heap_Size+0xc2508>
    28f4:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    28f8:	002e0104 	eoreq	r0, lr, r4, lsl #2
    28fc:	06010402 	streq	r0, [r1], -r2, lsl #8
    2900:	04020001 	streq	r0, [r2], #-1
    2904:	02001501 	andeq	r1, r0, #4194304	; 0x400000
    2908:	00010104 	andeq	r0, r1, r4, lsl #2
    290c:	01010402 	tsteq	r1, r2, lsl #8
    2910:	01040200 	mrseq	r0, R12_usr
    2914:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2918:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    291c:	77eb0301 	strbvc	r0, [fp, r1, lsl #6]!
    2920:	00050520 	andeq	r0, r5, r0, lsr #10
    2924:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2928:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    292c:	00140104 	andseq	r0, r4, r4, lsl #2
    2930:	06010402 	streq	r0, [r1], -r2, lsl #8
    2934:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2938:	002f0601 	eoreq	r0, pc, r1, lsl #12
    293c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2940:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2944:	04020005 	streq	r0, [r2], #-5
    2948:	08900301 	ldmeq	r0, {r0, r8, r9}
    294c:	04020001 	streq	r0, [r2], #-1
    2950:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2954:	001f0502 	andseq	r0, pc, r2, lsl #10
    2958:	03010402 	movweq	r0, #5122	; 0x1402
    295c:	0501789e 	streq	r7, [r1, #-2206]	; 0xfffff762
    2960:	04020004 	streq	r0, [r2], #-4
    2964:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2968:	00140104 	andseq	r0, r4, r4, lsl #2
    296c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2970:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2974:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2978:	06010402 	streq	r0, [r1], -r2, lsl #8
    297c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2980:	04020005 	streq	r0, [r2], #-5
    2984:	07dd0301 	ldrbeq	r0, [sp, r1, lsl #6]
    2988:	04020001 	streq	r0, [r2], #-1
    298c:	052e0602 	streq	r0, [lr, #-1538]!	; 0xfffff9fe
    2990:	04020003 	streq	r0, [r2], #-3
    2994:	01051502 	tsteq	r5, r2, lsl #10
    2998:	02040200 	andeq	r0, r4, #0, 4
    299c:	02001306 	andeq	r1, r0, #402653184	; 0x18000000
    29a0:	02200204 	eoreq	r0, r0, #4, 4	; 0x40000000
    29a4:	01010002 	tsteq	r1, r2
    29a8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    29ac:	00000002 	andeq	r0, r0, r2
    29b0:	0bfd0300 	bleq	fff435b8 <_estack+0xdff42380>
    29b4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    29b8:	1a2f0603 	bne	bc41cc <_Min_Heap_Size+0xbc39cc>
    29bc:	01061005 	tsteq	r6, r5
    29c0:	2f060305 	svccs	0x00060305
    29c4:	01060d05 	tsteq	r6, r5, lsl #26
    29c8:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    29cc:	0d030603 	stceq	6, cr0, [r3, #-12]
    29d0:	0610052e 	ldreq	r0, [r0], -lr, lsr #10
    29d4:	06030501 	streq	r0, [r3], -r1, lsl #10
    29d8:	060d054b 	streq	r0, [sp], -fp, asr #10
    29dc:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    29e0:	03060305 	movweq	r0, #25349	; 0x6305
    29e4:	01052e0c 	tsteq	r5, ip, lsl #28
    29e8:	052e1306 	streq	r1, [lr, #-774]!	; 0xfffffcfa
    29ec:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    29f0:	2e650301 	cdpcs	3, 6, cr0, cr5, cr1, {0}
    29f4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    29f8:	30060104 	andcc	r0, r6, r4, lsl #2
    29fc:	01040200 	mrseq	r0, R12_usr
    2a00:	04020001 	streq	r0, [r2], #-1
    2a04:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2a08:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2a0c:	001f0502 	andseq	r0, pc, r2, lsl #10
    2a10:	03010402 	movweq	r0, #5122	; 0x1402
    2a14:	052077d2 	streq	r7, [r0, #-2002]!	; 0xfffff82e
    2a18:	04020005 	streq	r0, [r2], #-5
    2a1c:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2a20:	01040200 	mrseq	r0, R12_usr
    2a24:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2a28:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2a2c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a30:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2a34:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2a38:	00050501 	andeq	r0, r5, r1, lsl #10
    2a3c:	03010402 	movweq	r0, #5122	; 0x1402
    2a40:	000108a9 	andeq	r0, r1, r9, lsr #17
    2a44:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a48:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2a4c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2a50:	78850301 	stmvc	r5, {r0, r8, r9}
    2a54:	00040501 	andeq	r0, r4, r1, lsl #10
    2a58:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2a5c:	01040200 	mrseq	r0, R12_usr
    2a60:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2a64:	00200601 	eoreq	r0, r0, r1, lsl #12
    2a68:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a6c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2a70:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2a74:	00050501 	andeq	r0, r5, r1, lsl #10
    2a78:	03010402 	movweq	r0, #5122	; 0x1402
    2a7c:	000107f6 	strdeq	r0, [r1], -r6
    2a80:	06020402 	streq	r0, [r2], -r2, lsl #8
    2a84:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2a88:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    2a8c:	02040200 	andeq	r0, r4, #0, 4
    2a90:	08050106 	stmdaeq	r5, {r1, r2, r8}
    2a94:	02040200 	andeq	r0, r4, #0, 4
    2a98:	06070520 	streq	r0, [r7], -r0, lsr #10
    2a9c:	30050522 	andcc	r0, r5, r2, lsr #10
    2aa0:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    2aa4:	4f060104 	svcmi	0x00060104
    2aa8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2aac:	30060104 	andcc	r0, r6, r4, lsl #2
    2ab0:	01040200 	mrseq	r0, R12_usr
    2ab4:	04020001 	streq	r0, [r2], #-1
    2ab8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2abc:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2ac0:	001f0502 	andseq	r0, pc, r2, lsl #10
    2ac4:	03010402 	movweq	r0, #5122	; 0x1402
    2ac8:	052077c4 	streq	r7, [r0, #-1988]!	; 0xfffff83c
    2acc:	04020005 	streq	r0, [r2], #-5
    2ad0:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2ad4:	01040200 	mrseq	r0, R12_usr
    2ad8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2adc:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2ae0:	06010402 	streq	r0, [r1], -r2, lsl #8
    2ae4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2ae8:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2aec:	00050501 	andeq	r0, r5, r1, lsl #10
    2af0:	03010402 	movweq	r0, #5122	; 0x1402
    2af4:	000108b7 			; <UNDEFINED> instruction: 0x000108b7
    2af8:	06010402 	streq	r0, [r1], -r2, lsl #8
    2afc:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2b00:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2b04:	77f70301 	ldrbvc	r0, [r7, r1, lsl #6]!
    2b08:	00040501 	andeq	r0, r4, r1, lsl #10
    2b0c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2b10:	01040200 	mrseq	r0, R12_usr
    2b14:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2b18:	00200601 	eoreq	r0, r0, r1, lsl #12
    2b1c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2b20:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2b24:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2b28:	00050501 	andeq	r0, r5, r1, lsl #10
    2b2c:	03010402 	movweq	r0, #5122	; 0x1402
    2b30:	00010884 	andeq	r0, r1, r4, lsl #17
    2b34:	06020402 	streq	r0, [r2], -r2, lsl #8
    2b38:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2b3c:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    2b40:	02040200 	andeq	r0, r4, #0, 4
    2b44:	08050106 	stmdaeq	r5, {r1, r2, r8}
    2b48:	02040200 	andeq	r0, r4, #0, 4
    2b4c:	06070520 	streq	r0, [r7], -r0, lsr #10
    2b50:	30050522 	andcc	r0, r5, r2, lsr #10
    2b54:	01000402 	tsteq	r0, r2, lsl #8
    2b58:	00010501 	andeq	r0, r1, r1, lsl #10
    2b5c:	00000205 	andeq	r0, r0, r5, lsl #4
    2b60:	b5030000 	strlt	r0, [r3, #-0]
    2b64:	0106010c 	tsteq	r6, ip, lsl #2
    2b68:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
    2b6c:	05151313 	ldreq	r1, [r5, #-787]	; 0xfffffced
    2b70:	2e01060c 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx12
    2b74:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    2b78:	055a0605 	ldrbeq	r0, [sl, #-1541]	; 0xfffff9fb
    2b7c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2b80:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    2b84:	0f052e01 	svceq	0x00052e01
    2b88:	05052022 	streq	r2, [r5, #-34]	; 0xffffffde
    2b8c:	16052306 	strne	r2, [r5], -r6, lsl #6
    2b90:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2b94:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    2b98:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    2b9c:	052f0605 	streq	r0, [pc, #-1541]!	; 259f <_Min_Heap_Size+0x1d9f>
    2ba0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    2ba4:	052f0605 	streq	r0, [pc, #-1541]!	; 25a7 <_Min_Heap_Size+0x1da7>
    2ba8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2bac:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    2bb0:	2e010611 	mcrcs	6, 0, r0, cr1, cr1, {0}
    2bb4:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    2bb8:	01061805 	tsteq	r6, r5, lsl #16
    2bbc:	2f060505 	svccs	0x00060505
    2bc0:	01061805 	tsteq	r6, r5, lsl #16
    2bc4:	31060505 	tstcc	r6, r5, lsl #10
    2bc8:	01061505 	tsteq	r6, r5, lsl #10
    2bcc:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    2bd0:	05054413 	streq	r4, [r5, #-1043]	; 0xfffffbed
    2bd4:	0c053206 	sfmeq	f3, 4, [r5], {6}
    2bd8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2bdc:	0b053106 	bleq	14effc <_Min_Heap_Size+0x14e7fc>
    2be0:	47050106 	strmi	r0, [r5, -r6, lsl #2]
    2be4:	01040200 	mrseq	r0, R12_usr
    2be8:	05207103 	streq	r7, [r0, #-259]!	; 0xfffffefd
    2bec:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    2bf0:	13052001 	movwne	r2, #20481	; 0x5001
    2bf4:	201f3728 	andscs	r3, pc, r8, lsr #14
    2bf8:	03060b05 	movweq	r0, #27397	; 0x6b05
    2bfc:	1e052019 	mcrne	0, 0, r2, cr5, cr9, {0}
    2c00:	0b050106 	bleq	143020 <_Min_Heap_Size+0x142820>
    2c04:	1a052f06 	bne	14e824 <_Min_Heap_Size+0x14e024>
    2c08:	0b050106 	bleq	143028 <_Min_Heap_Size+0x142828>
    2c0c:	12053e06 	andne	r3, r5, #6, 28	; 0x60
    2c10:	0b050106 	bleq	143030 <_Min_Heap_Size+0x142830>
    2c14:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    2c18:	01063405 	tsteq	r6, r5, lsl #8
    2c1c:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    2c20:	0b052e18 	bleq	14e488 <_Min_Heap_Size+0x14dc88>
    2c24:	01062f06 	tsteq	r6, r6, lsl #30
    2c28:	26060d05 	strcs	r0, [r6], -r5, lsl #26
    2c2c:	01063405 	tsteq	r6, r5, lsl #8
    2c30:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    2c34:	0527060b 	streq	r0, [r7, #-1547]!	; 0xfffff9f5
    2c38:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    2c3c:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    2c40:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    2c44:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    2c48:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    2c4c:	07052e1b 	smladeq	r5, fp, lr, r2
    2c50:	0a054006 	beq	152c70 <_Min_Heap_Size+0x152470>
    2c54:	0b050106 	bleq	143074 <_Min_Heap_Size+0x142874>
    2c58:	3c520306 	mrrccc	3, 0, r0, r2, cr6
    2c5c:	01061105 	tsteq	r6, r5, lsl #2
    2c60:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    2c64:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
    2c68:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    2c6c:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    2c70:	2e013f06 	cdpcs	15, 0, cr3, cr1, cr6, {0}
    2c74:	16202e2e 	strtne	r2, [r0], -lr, lsr #28
    2c78:	01060d05 	tsteq	r6, r5, lsl #26
    2c7c:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    2c80:	0a030607 	beq	c44a4 <_Min_Heap_Size+0xc3ca4>
    2c84:	060b052e 	streq	r0, [fp], -lr, lsr #10
    2c88:	200a0501 	andcs	r0, sl, r1, lsl #10
    2c8c:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    2c90:	01060c05 	tsteq	r6, r5, lsl #24
    2c94:	35060b05 	strcc	r0, [r6, #-2821]	; 0xfffff4fb
    2c98:	01061b05 	tsteq	r6, r5, lsl #22
    2c9c:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    2ca0:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    2ca4:	80053c01 	andhi	r3, r5, r1, lsl #24
    2ca8:	04020001 	streq	r0, [r2], #-1
    2cac:	71052002 	tstvc	r5, r2
    2cb0:	02040200 	andeq	r0, r4, #0, 4
    2cb4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    2cb8:	06340534 			; <UNDEFINED> instruction: 0x06340534
    2cbc:	201b0501 	andscs	r0, fp, r1, lsl #10
    2cc0:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    2cc4:	0d030609 	stceq	6, cr0, [r3, #-36]	; 0xffffffdc
    2cc8:	060f052e 	streq	r0, [pc], -lr, lsr #10
    2ccc:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    2cd0:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    2cd4:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
    2cd8:	0b052e01 	bleq	14e4e4 <_Min_Heap_Size+0x14dce4>
    2cdc:	1a053006 	bne	14ecfc <_Min_Heap_Size+0x14e4fc>
    2ce0:	0b050106 	bleq	143100 <_Min_Heap_Size+0x142900>
    2ce4:	12053e06 	andne	r3, r5, #6, 28	; 0x60
    2ce8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2cec:	13053406 	movwne	r3, #21510	; 0x5406
    2cf0:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    2cf4:	2e200520 	cfsh64cs	mvdx0, mvdx0, #16
    2cf8:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    2cfc:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    2d00:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    2d04:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    2d08:	3201060c 	andcc	r0, r1, #12, 12	; 0xc00000
    2d0c:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    2d10:	7f9e030f 	svcvc	0x009e030f
    2d14:	0102203c 	tsteq	r2, ip, lsr r0
    2d18:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2d1c:	02050001 	andeq	r0, r5, #1
    2d20:	00000000 	andeq	r0, r0, r0
    2d24:	010eb103 	tsteq	lr, r3, lsl #2
    2d28:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    2d2c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    2d30:	01022101 	tsteq	r2, r1, lsl #2
    2d34:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2d38:	02050001 	andeq	r0, r5, #1
    2d3c:	00000000 	andeq	r0, r0, r0
    2d40:	010ec303 	tsteq	lr, r3, lsl #6
    2d44:	03050106 	movweq	r0, #20742	; 0x5106
    2d48:	01040200 	mrseq	r0, R12_usr
    2d4c:	02003006 	andeq	r3, r0, #6
    2d50:	00010104 	andeq	r0, r1, r4, lsl #2
    2d54:	01010402 	tsteq	r1, r2, lsl #8
    2d58:	01040200 	mrseq	r0, R12_usr
    2d5c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2d60:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2d64:	75960301 	ldrvc	r0, [r6, #769]	; 0x301
    2d68:	00050520 	andeq	r0, r5, r0, lsr #10
    2d6c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2d70:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2d74:	00140104 	andseq	r0, r4, r4, lsl #2
    2d78:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d7c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2d80:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2d84:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d88:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2d8c:	04020003 	streq	r0, [r2], #-3
    2d90:	0ae50301 	beq	ff94399c <_estack+0xdf942764>
    2d94:	04020001 	streq	r0, [r2], #-1
    2d98:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2d9c:	001f0502 	andseq	r0, pc, r2, lsl #10
    2da0:	03010402 	movweq	r0, #5122	; 0x1402
    2da4:	050175c9 	streq	r7, [r1, #-1481]	; 0xfffffa37
    2da8:	04020004 	streq	r0, [r2], #-4
    2dac:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2db0:	00140104 	andseq	r0, r4, r4, lsl #2
    2db4:	06010402 	streq	r0, [r1], -r2, lsl #8
    2db8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2dbc:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2dc0:	06010402 	streq	r0, [r1], -r2, lsl #8
    2dc4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2dc8:	04020003 	streq	r0, [r2], #-3
    2dcc:	0ab20301 	beq	fec839d8 <_estack+0xdec827a0>
    2dd0:	04020001 	streq	r0, [r2], #-1
    2dd4:	02002e01 	andeq	r2, r0, #1, 28
    2dd8:	01060104 	tsteq	r6, r4, lsl #2
    2ddc:	01040200 	mrseq	r0, R12_usr
    2de0:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    2de4:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2de8:	00010104 	andeq	r0, r1, r4, lsl #2
    2dec:	01010402 	tsteq	r1, r2, lsl #8
    2df0:	1f050204 	svcne	0x00050204
    2df4:	01040200 	mrseq	r0, R12_usr
    2df8:	20759503 	rsbscs	r9, r5, r3, lsl #10
    2dfc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2e00:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2e04:	04020004 	streq	r0, [r2], #-4
    2e08:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2e0c:	2e060104 	adfcss	f0, f6, f4
    2e10:	01040200 	mrseq	r0, R12_usr
    2e14:	02002f06 	andeq	r2, r0, #6, 30
    2e18:	01060104 	tsteq	r6, r4, lsl #2
    2e1c:	03050104 	movweq	r0, #20740	; 0x5104
    2e20:	01040200 	mrseq	r0, R12_usr
    2e24:	010ae603 	tsteq	sl, r3, lsl #12
    2e28:	01040200 	mrseq	r0, R12_usr
    2e2c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2e30:	02001f05 	andeq	r1, r0, #5, 30
    2e34:	c8030104 	stmdagt	r3, {r2, r8}
    2e38:	04050175 	streq	r0, [r5], #-373	; 0xfffffe8b
    2e3c:	01040200 	mrseq	r0, R12_usr
    2e40:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2e44:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2e48:	20060104 	andcs	r0, r6, r4, lsl #2
    2e4c:	01040200 	mrseq	r0, R12_usr
    2e50:	02002f06 	andeq	r2, r0, #6, 30
    2e54:	01060104 	tsteq	r6, r4, lsl #2
    2e58:	03050104 	movweq	r0, #20740	; 0x5104
    2e5c:	01040200 	mrseq	r0, R12_usr
    2e60:	010ab303 	tsteq	sl, r3, lsl #6
    2e64:	02040200 	andeq	r0, r4, #0, 4
    2e68:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2e6c:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    2e70:	0402000c 	streq	r0, [r2], #-12
    2e74:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    2e78:	04020006 	streq	r0, [r2], #-6
    2e7c:	05052002 	streq	r2, [r5, #-2]
    2e80:	02040200 	andeq	r0, r4, #0, 4
    2e84:	03053006 	movweq	r3, #20486	; 0x5006
    2e88:	02040200 	andeq	r0, r4, #0, 4
    2e8c:	00070516 	andeq	r0, r7, r6, lsl r5
    2e90:	06020402 	streq	r0, [r2], -r2, lsl #8
    2e94:	00060501 	andeq	r0, r6, r1, lsl #10
    2e98:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    2e9c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2ea0:	3e060104 	adfccs	f0, f6, f4
    2ea4:	01040200 	mrseq	r0, R12_usr
    2ea8:	04020001 	streq	r0, [r2], #-1
    2eac:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2eb0:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2eb4:	001f0502 	andseq	r0, pc, r2, lsl #10
    2eb8:	03010402 	movweq	r0, #5122	; 0x1402
    2ebc:	0520758a 	streq	r7, [r0, #-1418]!	; 0xfffffa76
    2ec0:	04020005 	streq	r0, [r2], #-5
    2ec4:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2ec8:	01040200 	mrseq	r0, R12_usr
    2ecc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2ed0:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2ed4:	06010402 	streq	r0, [r1], -r2, lsl #8
    2ed8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2edc:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2ee0:	00050501 	andeq	r0, r5, r1, lsl #10
    2ee4:	03010402 	movweq	r0, #5122	; 0x1402
    2ee8:	00010af1 	strdeq	r0, [r1], -r1
    2eec:	06010402 	streq	r0, [r1], -r2, lsl #8
    2ef0:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2ef4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2ef8:	75bd0301 	ldrvc	r0, [sp, #769]!	; 0x301
    2efc:	00040501 	andeq	r0, r4, r1, lsl #10
    2f00:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2f04:	01040200 	mrseq	r0, R12_usr
    2f08:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2f0c:	00200601 	eoreq	r0, r0, r1, lsl #12
    2f10:	06010402 	streq	r0, [r1], -r2, lsl #8
    2f14:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2f18:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2f1c:	00050501 	andeq	r0, r5, r1, lsl #10
    2f20:	03010402 	movweq	r0, #5122	; 0x1402
    2f24:	00010abe 			; <UNDEFINED> instruction: 0x00010abe
    2f28:	06020402 	streq	r0, [r2], -r2, lsl #8
    2f2c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2f30:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    2f34:	02040200 	andeq	r0, r4, #0, 4
    2f38:	08050106 	stmdaeq	r5, {r1, r2, r8}
    2f3c:	02040200 	andeq	r0, r4, #0, 4
    2f40:	06070520 	streq	r0, [r7], -r0, lsr #10
    2f44:	06280524 	strteq	r0, [r8], -r4, lsr #10
    2f48:	06070501 	streq	r0, [r7], -r1, lsl #10
    2f4c:	060b0530 			; <UNDEFINED> instruction: 0x060b0530
    2f50:	0a052001 	beq	14af5c <_Min_Heap_Size+0x14a75c>
    2f54:	0603052e 	streq	r0, [r3], -lr, lsr #10
    2f58:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    2f5c:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    2f60:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    2f64:	01040200 	mrseq	r0, R12_usr
    2f68:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    2f6c:	00010104 	andeq	r0, r1, r4, lsl #2
    2f70:	01010402 	tsteq	r1, r2, lsl #8
    2f74:	01040200 	mrseq	r0, R12_usr
    2f78:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2f7c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2f80:	74f10301 	ldrbtvc	r0, [r1], #769	; 0x301
    2f84:	00050520 	andeq	r0, r5, r0, lsr #10
    2f88:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2f8c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2f90:	00140104 	andseq	r0, r4, r4, lsl #2
    2f94:	06010402 	streq	r0, [r1], -r2, lsl #8
    2f98:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2f9c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2fa0:	06010402 	streq	r0, [r1], -r2, lsl #8
    2fa4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2fa8:	04020005 	streq	r0, [r2], #-5
    2fac:	0b8a0301 	bleq	fe283bb8 <_estack+0xde282980>
    2fb0:	04020001 	streq	r0, [r2], #-1
    2fb4:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2fb8:	001f0502 	andseq	r0, pc, r2, lsl #10
    2fbc:	03010402 	movweq	r0, #5122	; 0x1402
    2fc0:	050175a4 	streq	r7, [r1, #-1444]	; 0xfffffa5c
    2fc4:	04020004 	streq	r0, [r2], #-4
    2fc8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2fcc:	00140104 	andseq	r0, r4, r4, lsl #2
    2fd0:	06010402 	streq	r0, [r1], -r2, lsl #8
    2fd4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2fd8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2fdc:	06010402 	streq	r0, [r1], -r2, lsl #8
    2fe0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2fe4:	04020005 	streq	r0, [r2], #-5
    2fe8:	0ad70301 	beq	ff5c3bf4 <_estack+0xdf5c29bc>
    2fec:	04020001 	streq	r0, [r2], #-1
    2ff0:	002e0602 	eoreq	r0, lr, r2, lsl #12
    2ff4:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    2ff8:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    2ffc:	01060204 	tsteq	r6, r4, lsl #4
    3000:	02000805 	andeq	r0, r0, #327680	; 0x50000
    3004:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    3008:	05240607 	streq	r0, [r4, #-1543]!	; 0xfffff9f9
    300c:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    3010:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    3014:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    3018:	03053c0a 	movweq	r3, #23562	; 0x5c0a
    301c:	200e0306 	andcs	r0, lr, r6, lsl #6
    3020:	01061605 	tsteq	r6, r5, lsl #12
    3024:	2f060305 	svccs	0x00060305
    3028:	01061605 	tsteq	r6, r5, lsl #12
    302c:	23060305 	movwcs	r0, #25349	; 0x6305
    3030:	01061405 	tsteq	r6, r5, lsl #8
    3034:	23060305 	movwcs	r0, #25349	; 0x6305
    3038:	01061205 	tsteq	r6, r5, lsl #4
    303c:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    3040:	01061105 	tsteq	r6, r5, lsl #2
    3044:	2f060305 	svccs	0x00060305
    3048:	01061805 	tsteq	r6, r5, lsl #16
    304c:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    3050:	13060105 	movwne	r0, #24837	; 0x6105
    3054:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3058:	03060104 	movweq	r0, #24836	; 0x6104
    305c:	00207fbe 	strhteq	r7, [r0], -lr
    3060:	01010402 	tsteq	r1, r2, lsl #8
    3064:	01040200 	mrseq	r0, R12_usr
    3068:	04020001 	streq	r0, [r2], #-1
    306c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    3070:	02001f05 	andeq	r1, r0, #5, 30
    3074:	90030104 	andls	r0, r3, r4, lsl #2
    3078:	05052075 	streq	r2, [r5, #-117]	; 0xffffff8b
    307c:	01040200 	mrseq	r0, R12_usr
    3080:	00040514 	andeq	r0, r4, r4, lsl r5
    3084:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3088:	01040200 	mrseq	r0, R12_usr
    308c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3090:	2f060104 	svccs	0x00060104
    3094:	01040200 	mrseq	r0, R12_usr
    3098:	01040106 	tsteq	r4, r6, lsl #2
    309c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    30a0:	eb030104 	bl	c34b8 <_Min_Heap_Size+0xc2cb8>
    30a4:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    30a8:	2e060104 	adfcss	f0, f6, f4
    30ac:	1f050204 	svcne	0x00050204
    30b0:	01040200 	mrseq	r0, R12_usr
    30b4:	0175c303 	cmneq	r5, r3, lsl #6
    30b8:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    30bc:	00140104 	andseq	r0, r4, r4, lsl #2
    30c0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    30c4:	01040200 	mrseq	r0, R12_usr
    30c8:	02002006 	andeq	r2, r0, #6
    30cc:	2f060104 	svccs	0x00060104
    30d0:	01040200 	mrseq	r0, R12_usr
    30d4:	01040106 	tsteq	r4, r6, lsl #2
    30d8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    30dc:	b8030104 	stmdalt	r3, {r2, r8}
    30e0:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    30e4:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    30e8:	11030609 	tstne	r3, r9, lsl #12
    30ec:	060d0501 	streq	r0, [sp], -r1, lsl #10
    30f0:	3c0c0501 	cfstr32cc	mvfx0, [ip], {1}
    30f4:	31060b05 	tstcc	r6, r5, lsl #22
    30f8:	01061c05 	tsteq	r6, r5, lsl #24
    30fc:	30060b05 	andcc	r0, r6, r5, lsl #22
    3100:	01061205 	tsteq	r6, r5, lsl #4
    3104:	03060905 	movweq	r0, #26885	; 0x6905
    3108:	0d052e14 	stceq	14, cr2, [r5, #-80]	; 0xffffffb0
    310c:	0c050106 	stfeqs	f0, [r5], {6}
    3110:	060b053c 			; <UNDEFINED> instruction: 0x060b053c
    3114:	061c0531 			; <UNDEFINED> instruction: 0x061c0531
    3118:	060b0501 	streq	r0, [fp], -r1, lsl #10
    311c:	06120530 			; <UNDEFINED> instruction: 0x06120530
    3120:	00020201 	andeq	r0, r2, r1, lsl #4
    3124:	01050101 	tsteq	r5, r1, lsl #2
    3128:	00020500 	andeq	r0, r2, r0, lsl #10
    312c:	03000000 	movweq	r0, #0
    3130:	06010f9c 			; <UNDEFINED> instruction: 0x06010f9c
    3134:	00030501 	andeq	r0, r3, r1, lsl #10
    3138:	06010402 	streq	r0, [r1], -r2, lsl #8
    313c:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    3140:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3144:	00010104 	andeq	r0, r1, r4, lsl #2
    3148:	01010402 	tsteq	r1, r2, lsl #8
    314c:	1f050204 	svcne	0x00050204
    3150:	01040200 	mrseq	r0, R12_usr
    3154:	2074bd03 	rsbscs	fp, r4, r3, lsl #26
    3158:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    315c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3160:	04020004 	streq	r0, [r2], #-4
    3164:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3168:	2e060104 	adfcss	f0, f6, f4
    316c:	01040200 	mrseq	r0, R12_usr
    3170:	02002f06 	andeq	r2, r0, #6, 30
    3174:	01060104 	tsteq	r6, r4, lsl #2
    3178:	03050104 	movweq	r0, #20740	; 0x5104
    317c:	01040200 	mrseq	r0, R12_usr
    3180:	010bbe03 	tsteq	fp, r3, lsl #28
    3184:	01040200 	mrseq	r0, R12_usr
    3188:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    318c:	02001f05 	andeq	r1, r0, #5, 30
    3190:	f0030104 			; <UNDEFINED> instruction: 0xf0030104
    3194:	04050174 	streq	r0, [r5], #-372	; 0xfffffe8c
    3198:	01040200 	mrseq	r0, R12_usr
    319c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    31a0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    31a4:	20060104 	andcs	r0, r6, r4, lsl #2
    31a8:	01040200 	mrseq	r0, R12_usr
    31ac:	02002f06 	andeq	r2, r0, #6, 30
    31b0:	01060104 	tsteq	r6, r4, lsl #2
    31b4:	03050104 	movweq	r0, #20740	; 0x5104
    31b8:	01040200 	mrseq	r0, R12_usr
    31bc:	010b8b03 	tsteq	fp, r3, lsl #22
    31c0:	02040200 	andeq	r0, r4, #0, 4
    31c4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    31c8:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    31cc:	04020007 	streq	r0, [r2], #-7
    31d0:	00010602 	andeq	r0, r1, r2, lsl #12
    31d4:	20020402 	andcs	r0, r2, r2, lsl #8
    31d8:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    31dc:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    31e0:	04020005 	streq	r0, [r2], #-5
    31e4:	003e0601 	eorseq	r0, lr, r1, lsl #12
    31e8:	01010402 	tsteq	r1, r2, lsl #8
    31ec:	01040200 	mrseq	r0, R12_usr
    31f0:	04020001 	streq	r0, [r2], #-1
    31f4:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    31f8:	02001f05 	andeq	r1, r0, #5, 30
    31fc:	b8030104 	stmdalt	r3, {r2, r8}
    3200:	05052074 	streq	r2, [r5, #-116]	; 0xffffff8c
    3204:	01040200 	mrseq	r0, R12_usr
    3208:	00040514 	andeq	r0, r4, r4, lsl r5
    320c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3210:	01040200 	mrseq	r0, R12_usr
    3214:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3218:	2f060104 	svccs	0x00060104
    321c:	01040200 	mrseq	r0, R12_usr
    3220:	01040106 	tsteq	r4, r6, lsl #2
    3224:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3228:	c3030104 	movwgt	r0, #12548	; 0x3104
    322c:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    3230:	2e060104 	adfcss	f0, f6, f4
    3234:	1f050204 	svcne	0x00050204
    3238:	01040200 	mrseq	r0, R12_usr
    323c:	0174eb03 	cmneq	r4, r3, lsl #22
    3240:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3244:	00140104 	andseq	r0, r4, r4, lsl #2
    3248:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    324c:	01040200 	mrseq	r0, R12_usr
    3250:	02002006 	andeq	r2, r0, #6
    3254:	2f060104 	svccs	0x00060104
    3258:	01040200 	mrseq	r0, R12_usr
    325c:	01040106 	tsteq	r4, r6, lsl #2
    3260:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3264:	90030104 	andls	r0, r3, r4, lsl #2
    3268:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    326c:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    3270:	02040200 	andeq	r0, r4, #0, 4
    3274:	000e0515 	andeq	r0, lr, r5, lsl r5
    3278:	06020402 	streq	r0, [r2], -r2, lsl #8
    327c:	00080501 	andeq	r0, r8, r1, lsl #10
    3280:	20020402 	andcs	r0, r2, r2, lsl #8
    3284:	24060705 	strcs	r0, [r6], #-1797	; 0xfffff8fb
    3288:	01062805 	tsteq	r6, r5, lsl #16
    328c:	30060705 	andcc	r0, r6, r5, lsl #14
    3290:	01060b05 	tsteq	r6, r5, lsl #22
    3294:	2e0a0520 	cfsh32cs	mvfx0, mvfx10, #16
    3298:	03060305 	movweq	r0, #25349	; 0x6305
    329c:	1605200e 	strne	r2, [r5], -lr
    32a0:	03050106 	movweq	r0, #20742	; 0x5106
    32a4:	11053106 	tstne	r5, r6, lsl #2
    32a8:	03050106 	movweq	r0, #20742	; 0x5106
    32ac:	01053e06 	tsteq	r5, r6, lsl #28
    32b0:	09051306 	stmdbeq	r5, {r1, r2, r8, r9, ip}
    32b4:	206e0306 	rsbcs	r0, lr, r6, lsl #6
    32b8:	01060d05 	tsteq	r6, r5, lsl #26
    32bc:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    32c0:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    32c4:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    32c8:	0530060b 	ldreq	r0, [r0, #-1547]!	; 0xfffff9f5
    32cc:	02010612 	andeq	r0, r1, #18874368	; 0x1200000
    32d0:	01010002 	tsteq	r1, r2
    32d4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    32d8:	00000002 	andeq	r0, r0, r2
    32dc:	0fcf0300 	svceq	0x00cf0300
    32e0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    32e4:	04020003 	streq	r0, [r2], #-3
    32e8:	00300601 	eorseq	r0, r0, r1, lsl #12
    32ec:	01010402 	tsteq	r1, r2, lsl #8
    32f0:	01040200 	mrseq	r0, R12_usr
    32f4:	04020001 	streq	r0, [r2], #-1
    32f8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    32fc:	02001f05 	andeq	r1, r0, #5, 30
    3300:	8a030104 	bhi	c3718 <_Min_Heap_Size+0xc2f18>
    3304:	05052074 	streq	r2, [r5, #-116]	; 0xffffff8c
    3308:	01040200 	mrseq	r0, R12_usr
    330c:	00040514 	andeq	r0, r4, r4, lsl r5
    3310:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3314:	01040200 	mrseq	r0, R12_usr
    3318:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    331c:	2f060104 	svccs	0x00060104
    3320:	01040200 	mrseq	r0, R12_usr
    3324:	01040106 	tsteq	r4, r6, lsl #2
    3328:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    332c:	f1030104 			; <UNDEFINED> instruction: 0xf1030104
    3330:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    3334:	2e060104 	adfcss	f0, f6, f4
    3338:	1f050204 	svcne	0x00050204
    333c:	01040200 	mrseq	r0, R12_usr
    3340:	0174bd03 	cmneq	r4, r3, lsl #26
    3344:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3348:	00140104 	andseq	r0, r4, r4, lsl #2
    334c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3350:	01040200 	mrseq	r0, R12_usr
    3354:	02002006 	andeq	r2, r0, #6
    3358:	2f060104 	svccs	0x00060104
    335c:	01040200 	mrseq	r0, R12_usr
    3360:	01040106 	tsteq	r4, r6, lsl #2
    3364:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3368:	be030104 	adflts	f0, f3, f4
    336c:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    3370:	002e0104 	eoreq	r0, lr, r4, lsl #2
    3374:	06010402 	streq	r0, [r1], -r2, lsl #8
    3378:	04020001 	streq	r0, [r2], #-1
    337c:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    3380:	00010104 	andeq	r0, r1, r4, lsl #2
    3384:	01010402 	tsteq	r1, r2, lsl #8
    3388:	01040200 	mrseq	r0, R12_usr
    338c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3390:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3394:	74890301 	strvc	r0, [r9], #769	; 0x301
    3398:	00050520 	andeq	r0, r5, r0, lsr #10
    339c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    33a0:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    33a4:	00140104 	andseq	r0, r4, r4, lsl #2
    33a8:	06010402 	streq	r0, [r1], -r2, lsl #8
    33ac:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    33b0:	002f0601 	eoreq	r0, pc, r1, lsl #12
    33b4:	06010402 	streq	r0, [r1], -r2, lsl #8
    33b8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    33bc:	04020003 	streq	r0, [r2], #-3
    33c0:	0bf20301 	bleq	ffc83fcc <_estack+0xdfc82d94>
    33c4:	04020001 	streq	r0, [r2], #-1
    33c8:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    33cc:	001f0502 	andseq	r0, pc, r2, lsl #10
    33d0:	03010402 	movweq	r0, #5122	; 0x1402
    33d4:	050174bc 	streq	r7, [r1, #-1212]	; 0xfffffb44
    33d8:	04020004 	streq	r0, [r2], #-4
    33dc:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    33e0:	00140104 	andseq	r0, r4, r4, lsl #2
    33e4:	06010402 	streq	r0, [r1], -r2, lsl #8
    33e8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    33ec:	002f0601 	eoreq	r0, pc, r1, lsl #12
    33f0:	06010402 	streq	r0, [r1], -r2, lsl #8
    33f4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    33f8:	04020003 	streq	r0, [r2], #-3
    33fc:	0bbf0301 	bleq	fefc4008 <_estack+0xdefc2dd0>
    3400:	04020001 	streq	r0, [r2], #-1
    3404:	002e0602 	eoreq	r0, lr, r2, lsl #12
    3408:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    340c:	02000c05 	andeq	r0, r0, #1280	; 0x500
    3410:	01060204 	tsteq	r6, r4, lsl #4
    3414:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    3418:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    341c:	04020005 	streq	r0, [r2], #-5
    3420:	05300602 	ldreq	r0, [r0, #-1538]!	; 0xfffff9fe
    3424:	04020003 	streq	r0, [r2], #-3
    3428:	07051602 	streq	r1, [r5, -r2, lsl #12]
    342c:	02040200 	andeq	r0, r4, #0, 4
    3430:	06050106 	streq	r0, [r5], -r6, lsl #2
    3434:	02040200 	andeq	r0, r4, #0, 4
    3438:	0005052e 	andeq	r0, r5, lr, lsr #10
    343c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3440:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    3444:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3448:	00010104 	andeq	r0, r1, r4, lsl #2
    344c:	01010402 	tsteq	r1, r2, lsl #8
    3450:	1f050204 	svcne	0x00050204
    3454:	01040200 	mrseq	r0, R12_usr
    3458:	2073fe03 	rsbscs	pc, r3, r3, lsl #28
    345c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3460:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3464:	04020004 	streq	r0, [r2], #-4
    3468:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    346c:	2e060104 	adfcss	f0, f6, f4
    3470:	01040200 	mrseq	r0, R12_usr
    3474:	02002f06 	andeq	r2, r0, #6, 30
    3478:	01060104 	tsteq	r6, r4, lsl #2
    347c:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3480:	01040200 	mrseq	r0, R12_usr
    3484:	010bfd03 	tsteq	fp, r3, lsl #26	; <UNPREDICTABLE>
    3488:	01040200 	mrseq	r0, R12_usr
    348c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3490:	02001f05 	andeq	r1, r0, #5, 30
    3494:	b1030104 	tstlt	r3, r4, lsl #2
    3498:	04050174 	streq	r0, [r5], #-372	; 0xfffffe8c
    349c:	01040200 	mrseq	r0, R12_usr
    34a0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    34a4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    34a8:	20060104 	andcs	r0, r6, r4, lsl #2
    34ac:	01040200 	mrseq	r0, R12_usr
    34b0:	02002f06 	andeq	r2, r0, #6, 30
    34b4:	01060104 	tsteq	r6, r4, lsl #2
    34b8:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    34bc:	01040200 	mrseq	r0, R12_usr
    34c0:	010bca03 	tsteq	fp, r3, lsl #20
    34c4:	02040200 	andeq	r0, r4, #0, 4
    34c8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    34cc:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    34d0:	0402000e 	streq	r0, [r2], #-14
    34d4:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    34d8:	04020008 	streq	r0, [r2], #-8
    34dc:	07052002 	streq	r2, [r5, -r2]
    34e0:	28052406 	stmdacs	r5, {r1, r2, sl, sp}
    34e4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    34e8:	0b053006 	bleq	14f508 <_Min_Heap_Size+0x14ed08>
    34ec:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    34f0:	03052e0a 	movweq	r2, #24074	; 0x5e0a
    34f4:	200e0306 	andcs	r0, lr, r6, lsl #6
    34f8:	01061605 	tsteq	r6, r5, lsl #12
    34fc:	31060305 	tstcc	r6, r5, lsl #6
    3500:	01061205 	tsteq	r6, r5, lsl #4
    3504:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    3508:	01061805 	tsteq	r6, r5, lsl #16
    350c:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    3510:	13060105 	movwne	r0, #24837	; 0x6105
    3514:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3518:	03060104 	movweq	r0, #24836	; 0x6104
    351c:	0200205c 	andeq	r2, r0, #92	; 0x5c
    3520:	00010104 	andeq	r0, r1, r4, lsl #2
    3524:	01010402 	tsteq	r1, r2, lsl #8
    3528:	01040200 	mrseq	r0, R12_usr
    352c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3530:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3534:	74840301 	strvc	r0, [r4], #769	; 0x301
    3538:	00050520 	andeq	r0, r5, r0, lsr #10
    353c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3540:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3544:	00140104 	andseq	r0, r4, r4, lsl #2
    3548:	06010402 	streq	r0, [r1], -r2, lsl #8
    354c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3550:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3554:	06010402 	streq	r0, [r1], -r2, lsl #8
    3558:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    355c:	04020005 	streq	r0, [r2], #-5
    3560:	0bf70301 	bleq	ffdc416c <_estack+0xdfdc2f34>
    3564:	04020001 	streq	r0, [r2], #-1
    3568:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    356c:	001f0502 	andseq	r0, pc, r2, lsl #10
    3570:	03010402 	movweq	r0, #5122	; 0x1402
    3574:	050174b7 	streq	r7, [r1, #-1207]	; 0xfffffb49
    3578:	04020004 	streq	r0, [r2], #-4
    357c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3580:	00140104 	andseq	r0, r4, r4, lsl #2
    3584:	06010402 	streq	r0, [r1], -r2, lsl #8
    3588:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    358c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3590:	06010402 	streq	r0, [r1], -r2, lsl #8
    3594:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3598:	04020005 	streq	r0, [r2], #-5
    359c:	0bc40301 	bleq	ff1041a8 <_estack+0xdf102f70>
    35a0:	04020001 	streq	r0, [r2], #-1
    35a4:	09053c01 	stmdbeq	r5, {r0, sl, fp, ip, sp}
    35a8:	01110306 	tsteq	r1, r6, lsl #6
    35ac:	01060d05 	tsteq	r6, r5, lsl #26
    35b0:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    35b4:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    35b8:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    35bc:	0530060b 	ldreq	r0, [r0, #-1547]!	; 0xfffff9f5
    35c0:	02010612 	andeq	r0, r1, #18874368	; 0x1200000
    35c4:	01010002 	tsteq	r1, r2
    35c8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    35cc:	000e1402 	andeq	r1, lr, r2, lsl #8
    35d0:	14a00308 	strtne	r0, [r0], #776	; 0x308
    35d4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    35d8:	16060105 	strne	r0, [r6], -r5, lsl #2
    35dc:	01000102 	tsteq	r0, r2, lsl #2
    35e0:	00010501 	andeq	r0, r1, r1, lsl #10
    35e4:	00000205 	andeq	r0, r0, r5, lsl #4
    35e8:	ac030000 	stcge	0, cr0, [r3], {-0}
    35ec:	01060117 	tsteq	r6, r7, lsl r1
    35f0:	2f060305 	svccs	0x00060305
    35f4:	01061705 	tsteq	r6, r5, lsl #14
    35f8:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    35fc:	01060c05 	tsteq	r6, r5, lsl #24
    3600:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    3604:	05052006 	streq	r2, [r5, #-6]
    3608:	18053e06 	stmdane	r5, {r1, r2, r9, sl, fp, ip, sp}
    360c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3610:	01040200 	mrseq	r0, R12_usr
    3614:	02003206 	andeq	r3, r0, #1610612736	; 0x60000000
    3618:	00010104 	andeq	r0, r1, r4, lsl #2
    361c:	01010402 	tsteq	r1, r2, lsl #8
    3620:	01040200 	mrseq	r0, R12_usr
    3624:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3628:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    362c:	6ca60301 	stcvs	3, cr0, [r6], #4
    3630:	00050520 	andeq	r0, r5, r0, lsr #10
    3634:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3638:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    363c:	00140104 	andseq	r0, r4, r4, lsl #2
    3640:	06010402 	streq	r0, [r1], -r2, lsl #8
    3644:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3648:	002f0601 	eoreq	r0, pc, r1, lsl #12
    364c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3650:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3654:	04020005 	streq	r0, [r2], #-5
    3658:	13d50301 	bicsne	r0, r5, #67108864	; 0x4000000
    365c:	04020001 	streq	r0, [r2], #-1
    3660:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    3664:	001f0502 	andseq	r0, pc, r2, lsl #10
    3668:	03010402 	movweq	r0, #5122	; 0x1402
    366c:	05016cd9 	streq	r6, [r1, #-3289]	; 0xfffff327
    3670:	04020004 	streq	r0, [r2], #-4
    3674:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3678:	00140104 	andseq	r0, r4, r4, lsl #2
    367c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3680:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3684:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3688:	06010402 	streq	r0, [r1], -r2, lsl #8
    368c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3690:	04020005 	streq	r0, [r2], #-5
    3694:	13a20301 			; <UNDEFINED> instruction: 0x13a20301
    3698:	04020001 	streq	r0, [r2], #-1
    369c:	02002e01 	andeq	r2, r0, #1, 28
    36a0:	01060104 	tsteq	r6, r4, lsl #2
    36a4:	01040200 	mrseq	r0, R12_usr
    36a8:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    36ac:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    36b0:	00010104 	andeq	r0, r1, r4, lsl #2
    36b4:	01010402 	tsteq	r1, r2, lsl #8
    36b8:	1f050204 	svcne	0x00050204
    36bc:	01040200 	mrseq	r0, R12_usr
    36c0:	206ca303 	rsbcs	sl, ip, r3, lsl #6
    36c4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    36c8:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    36cc:	04020004 	streq	r0, [r2], #-4
    36d0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    36d4:	2e060104 	adfcss	f0, f6, f4
    36d8:	01040200 	mrseq	r0, R12_usr
    36dc:	02002f06 	andeq	r2, r0, #6, 30
    36e0:	01060104 	tsteq	r6, r4, lsl #2
    36e4:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    36e8:	01040200 	mrseq	r0, R12_usr
    36ec:	0113d803 	tsteq	r3, r3, lsl #16
    36f0:	01040200 	mrseq	r0, R12_usr
    36f4:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    36f8:	02001f05 	andeq	r1, r0, #5, 30
    36fc:	d6030104 	strle	r0, [r3], -r4, lsl #2
    3700:	0405016c 	streq	r0, [r5], #-364	; 0xfffffe94
    3704:	01040200 	mrseq	r0, R12_usr
    3708:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    370c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3710:	20060104 	andcs	r0, r6, r4, lsl #2
    3714:	01040200 	mrseq	r0, R12_usr
    3718:	02002f06 	andeq	r2, r0, #6, 30
    371c:	01060104 	tsteq	r6, r4, lsl #2
    3720:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3724:	01040200 	mrseq	r0, R12_usr
    3728:	0113a503 	tsteq	r3, r3, lsl #10
    372c:	01040200 	mrseq	r0, R12_usr
    3730:	0301052e 	movweq	r0, #5422	; 0x152e
    3734:	0505010e 	streq	r0, [r5, #-270]	; 0xfffffef2
    3738:	01051d06 	tsteq	r5, r6, lsl #26
    373c:	01023106 	tsteq	r2, r6, lsl #2
    3740:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3744:	02050001 	andeq	r0, r5, #1
    3748:	08000e16 	stmdaeq	r0, {r1, r2, r4, r9, sl, fp}
    374c:	011bf103 	tsteq	fp, r3, lsl #2	; <UNPREDICTABLE>
    3750:	03050106 	movweq	r0, #20742	; 0x5106
    3754:	055b2206 	ldrbeq	r2, [fp, #-518]	; 0xfffffdfa
    3758:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    375c:	31430603 	cmpcc	r3, r3, lsl #12
    3760:	13060105 	movwne	r0, #24837	; 0x6105
    3764:	01000202 	tsteq	r0, r2, lsl #4
    3768:	00010501 	andeq	r0, r1, r1, lsl #10
    376c:	00000205 	andeq	r0, r0, r5, lsl #4
    3770:	af030000 	svcge	0x00030000
    3774:	03050114 	movweq	r0, #20756	; 0x5114
    3778:	06010514 			; <UNDEFINED> instruction: 0x06010514
    377c:	00010216 	andeq	r0, r1, r6, lsl r2
    3780:	01050101 	tsteq	r5, r1, lsl #2
    3784:	00020500 	andeq	r0, r2, r0, lsl #10
    3788:	03000000 	movweq	r0, #0
    378c:	060117cf 	streq	r1, [r1], -pc, asr #15
    3790:	06030501 	streq	r0, [r3], -r1, lsl #10
    3794:	20061921 	andcs	r1, r6, r1, lsr #18
    3798:	02300105 	eorseq	r0, r0, #1073741825	; 0x40000001
    379c:	01010001 	tsteq	r1, r1
    37a0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    37a4:	000e3002 	andeq	r3, lr, r2
    37a8:	14be0308 	ldrtne	r0, [lr], #776	; 0x308
    37ac:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    37b0:	16060105 	strne	r0, [r6], -r5, lsl #2
    37b4:	01000102 	tsteq	r0, r2, lsl #2
    37b8:	00010501 	andeq	r0, r1, r1, lsl #10
    37bc:	00000205 	andeq	r0, r0, r5, lsl #4
    37c0:	cd030000 	stcgt	0, cr0, [r3, #-0]
    37c4:	03050114 	movweq	r0, #20756	; 0x5114
    37c8:	06010514 			; <UNDEFINED> instruction: 0x06010514
    37cc:	00010216 	andeq	r0, r1, r6, lsl r2
    37d0:	01050101 	tsteq	r5, r1, lsl #2
    37d4:	32020500 	andcc	r0, r2, #0, 10
    37d8:	0308000e 	movweq	r0, #32782	; 0x800e
    37dc:	050114dc 	streq	r1, [r1, #-1244]	; 0xfffffb24
    37e0:	01051403 	tsteq	r5, r3, lsl #8
    37e4:	01021606 	tsteq	r2, r6, lsl #12
    37e8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    37ec:	02050001 	andeq	r0, r5, #1
    37f0:	00000000 	andeq	r0, r0, r0
    37f4:	0118c703 	tsteq	r8, r3, lsl #14
    37f8:	03050106 	movweq	r0, #20742	; 0x5106
    37fc:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
    3800:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    3804:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    3808:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    380c:	052f0603 	streq	r0, [pc, #-1539]!	; 3211 <_Min_Heap_Size+0x2a11>
    3810:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    3814:	03053c06 	movweq	r3, #23558	; 0x5c06
    3818:	10053506 	andne	r3, r5, r6, lsl #10
    381c:	03050106 	movweq	r0, #20742	; 0x5106
    3820:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
    3824:	06050106 	streq	r0, [r5], -r6, lsl #2
    3828:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    382c:	06140534 			; <UNDEFINED> instruction: 0x06140534
    3830:	06030501 	streq	r0, [r3], -r1, lsl #10
    3834:	06010550 			; <UNDEFINED> instruction: 0x06010550
    3838:	3105203e 	tstcc	r5, lr, lsr r0
    383c:	01040200 	mrseq	r0, R12_usr
    3840:	052e6a03 	streq	r6, [lr, #-2563]!	; 0xfffff5fd
    3844:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    3848:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    384c:	062f0605 	strteq	r0, [pc], -r5, lsl #12
    3850:	00320520 	eorseq	r0, r2, r0, lsr #10
    3854:	41010402 	tstmi	r1, r2, lsl #8
    3858:	30060505 	andcc	r0, r6, r5, lsl #10
    385c:	01061805 	tsteq	r6, r5, lsl #16
    3860:	2f060505 	svccs	0x00060505
    3864:	01023c06 	tsteq	r2, r6, lsl #24
    3868:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    386c:	02050001 	andeq	r0, r5, #1
    3870:	08000e34 	stmdaeq	r0, {r2, r4, r5, r9, sl, fp}
    3874:	011a9f03 	tsteq	sl, r3, lsl #30
    3878:	03050106 	movweq	r0, #20742	; 0x5106
    387c:	17052106 	strne	r2, [r5, -r6, lsl #2]
    3880:	03050106 	movweq	r0, #20742	; 0x5106
    3884:	16052106 	strne	r2, [r5], -r6, lsl #2
    3888:	03050106 	movweq	r0, #20742	; 0x5106
    388c:	16052f06 	strne	r2, [r5], -r6, lsl #30
    3890:	03050106 	movweq	r0, #20742	; 0x5106
    3894:	01052706 	tsteq	r5, r6, lsl #14
    3898:	01023006 	tsteq	r2, r6
    389c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    38a0:	02050001 	andeq	r0, r5, #1
    38a4:	00000000 	andeq	r0, r0, r0
    38a8:	0114ea03 	tsteq	r4, r3, lsl #20
    38ac:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    38b0:	02170601 	andseq	r0, r7, #1048576	; 0x100000
    38b4:	01010001 	tsteq	r1, r1
    38b8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    38bc:	00000002 	andeq	r0, r0, r2
    38c0:	108c0300 	addne	r0, ip, r0, lsl #6
    38c4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    38c8:	002f0603 	eoreq	r0, pc, r3, lsl #12
    38cc:	15010402 	strne	r0, [r1, #-1026]	; 0xfffffbfe
    38d0:	01040200 	mrseq	r0, R12_usr
    38d4:	04020001 	streq	r0, [r2], #-1
    38d8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    38dc:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    38e0:	001f0502 	andseq	r0, pc, r2, lsl #10
    38e4:	03010402 	movweq	r0, #5122	; 0x1402
    38e8:	052073cb 	streq	r7, [r0, #-971]!	; 0xfffffc35
    38ec:	04020005 	streq	r0, [r2], #-5
    38f0:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    38f4:	01040200 	mrseq	r0, R12_usr
    38f8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    38fc:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3900:	06010402 	streq	r0, [r1], -r2, lsl #8
    3904:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3908:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    390c:	00030501 	andeq	r0, r3, r1, lsl #10
    3910:	03010402 	movweq	r0, #5122	; 0x1402
    3914:	00010cb0 			; <UNDEFINED> instruction: 0x00010cb0
    3918:	06010402 	streq	r0, [r1], -r2, lsl #8
    391c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3920:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3924:	73fe0301 	mvnsvc	r0, #67108864	; 0x4000000
    3928:	00040501 	andeq	r0, r4, r1, lsl #10
    392c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3930:	01040200 	mrseq	r0, R12_usr
    3934:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3938:	00200601 	eoreq	r0, r0, r1, lsl #12
    393c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3940:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3944:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3948:	00030501 	andeq	r0, r3, r1, lsl #10
    394c:	03010402 	movweq	r0, #5122	; 0x1402
    3950:	00010bfd 	strdeq	r0, [r1], -sp
    3954:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3958:	01040200 	mrseq	r0, R12_usr
    395c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    3960:	00130104 	andseq	r0, r3, r4, lsl #2
    3964:	01010402 	tsteq	r1, r2, lsl #8
    3968:	01040200 	mrseq	r0, R12_usr
    396c:	04020001 	streq	r0, [r2], #-1
    3970:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    3974:	02001f05 	andeq	r1, r0, #5, 30
    3978:	ca030104 	bgt	c3d90 <_Min_Heap_Size+0xc3590>
    397c:	05052073 	streq	r2, [r5, #-115]	; 0xffffff8d
    3980:	01040200 	mrseq	r0, R12_usr
    3984:	00040514 	andeq	r0, r4, r4, lsl r5
    3988:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    398c:	01040200 	mrseq	r0, R12_usr
    3990:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3994:	2f060104 	svccs	0x00060104
    3998:	01040200 	mrseq	r0, R12_usr
    399c:	01040106 	tsteq	r4, r6, lsl #2
    39a0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    39a4:	b1030104 	tstlt	r3, r4, lsl #2
    39a8:	0200010c 	andeq	r0, r0, #12, 2
    39ac:	2e060104 	adfcss	f0, f6, f4
    39b0:	1f050204 	svcne	0x00050204
    39b4:	01040200 	mrseq	r0, R12_usr
    39b8:	0173fd03 	cmneq	r3, r3, lsl #26	; <UNPREDICTABLE>
    39bc:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    39c0:	00140104 	andseq	r0, r4, r4, lsl #2
    39c4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    39c8:	01040200 	mrseq	r0, R12_usr
    39cc:	02002006 	andeq	r2, r0, #6
    39d0:	2f060104 	svccs	0x00060104
    39d4:	01040200 	mrseq	r0, R12_usr
    39d8:	01040106 	tsteq	r4, r6, lsl #2
    39dc:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    39e0:	fe030104 	cdp2	1, 0, cr0, cr3, cr4, {0}
    39e4:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    39e8:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    39ec:	02040200 	andeq	r0, r4, #0, 4
    39f0:	000c0515 	andeq	r0, ip, r5, lsl r5
    39f4:	06020402 	streq	r0, [r2], -r2, lsl #8
    39f8:	00060501 	andeq	r0, r6, r1, lsl #10
    39fc:	20020402 	andcs	r0, r2, r2, lsl #8
    3a00:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3a04:	30060204 	andcc	r0, r6, r4, lsl #4
    3a08:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3a0c:	05180204 	ldreq	r0, [r8, #-516]	; 0xfffffdfc
    3a10:	0402000c 	streq	r0, [r2], #-12
    3a14:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    3a18:	04020006 	streq	r0, [r2], #-6
    3a1c:	05052002 	streq	r2, [r5, #-2]
    3a20:	09052406 	stmdbeq	r5, {r1, r2, sl, sp}
    3a24:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3a28:	0607052e 	streq	r0, [r7], -lr, lsr #10
    3a2c:	0628053e 			; <UNDEFINED> instruction: 0x0628053e
    3a30:	06030501 	streq	r0, [r3], -r1, lsl #10
    3a34:	060c0536 			; <UNDEFINED> instruction: 0x060c0536
    3a38:	20060501 	andcs	r0, r6, r1, lsl #10
    3a3c:	24060505 	strcs	r0, [r6], #-1285	; 0xfffffafb
    3a40:	01060905 	tsteq	r6, r5, lsl #18
    3a44:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    3a48:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    3a4c:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    3a50:	09030603 	stmdbeq	r3, {r0, r1, r9, sl}
    3a54:	0607052e 	streq	r0, [r7], -lr, lsr #10
    3a58:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
    3a5c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3a60:	3f060104 	svccc	0x00060104
    3a64:	01040200 	mrseq	r0, R12_usr
    3a68:	04020001 	streq	r0, [r2], #-1
    3a6c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3a70:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    3a74:	001f0502 	andseq	r0, pc, r2, lsl #10
    3a78:	03010402 	movweq	r0, #5122	; 0x1402
    3a7c:	0520739f 	streq	r7, [r0, #-927]!	; 0xfffffc61
    3a80:	04020005 	streq	r0, [r2], #-5
    3a84:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    3a88:	01040200 	mrseq	r0, R12_usr
    3a8c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3a90:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3a94:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a98:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3a9c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3aa0:	00050501 	andeq	r0, r5, r1, lsl #10
    3aa4:	03010402 	movweq	r0, #5122	; 0x1402
    3aa8:	00010cdc 	ldrdeq	r0, [r1], -ip
    3aac:	06010402 	streq	r0, [r1], -r2, lsl #8
    3ab0:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3ab4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3ab8:	73d20301 	bicsvc	r0, r2, #67108864	; 0x4000000
    3abc:	00040501 	andeq	r0, r4, r1, lsl #10
    3ac0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3ac4:	01040200 	mrseq	r0, R12_usr
    3ac8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3acc:	00200601 	eoreq	r0, r0, r1, lsl #12
    3ad0:	06010402 	streq	r0, [r1], -r2, lsl #8
    3ad4:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    3ad8:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3adc:	00050501 	andeq	r0, r5, r1, lsl #10
    3ae0:	03010402 	movweq	r0, #5122	; 0x1402
    3ae4:	00010ca9 	andeq	r0, r1, r9, lsr #25
    3ae8:	06020402 	streq	r0, [r2], -r2, lsl #8
    3aec:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3af0:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    3af4:	02040200 	andeq	r0, r4, #0, 4
    3af8:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3afc:	02040200 	andeq	r0, r4, #0, 4
    3b00:	06070520 	streq	r0, [r7], -r0, lsr #10
    3b04:	060b0534 			; <UNDEFINED> instruction: 0x060b0534
    3b08:	2e0a0501 	cfsh32cs	mvfx0, mvfx10, #1
    3b0c:	22060905 	andcs	r0, r6, #81920	; 0x14000
    3b10:	01060e05 	tsteq	r6, r5, lsl #28
    3b14:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    3b18:	2e46030c 	cdpcs	3, 4, cr0, cr6, cr12, {0}
    3b1c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3b20:	03060104 	movweq	r0, #24836	; 0x6104
    3b24:	02002e09 	andeq	r2, r0, #9, 28	; 0x90
    3b28:	00010104 	andeq	r0, r1, r4, lsl #2
    3b2c:	01010402 	tsteq	r1, r2, lsl #8
    3b30:	01040200 	mrseq	r0, R12_usr
    3b34:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3b38:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3b3c:	73c50301 	bicvc	r0, r5, #67108864	; 0x4000000
    3b40:	00050520 	andeq	r0, r5, r0, lsr #10
    3b44:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3b48:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3b4c:	00140104 	andseq	r0, r4, r4, lsl #2
    3b50:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b54:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3b58:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3b5c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b60:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3b64:	04020005 	streq	r0, [r2], #-5
    3b68:	0cb60301 	ldceq	3, cr0, [r6], #4
    3b6c:	04020001 	streq	r0, [r2], #-1
    3b70:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    3b74:	001f0502 	andseq	r0, pc, r2, lsl #10
    3b78:	03010402 	movweq	r0, #5122	; 0x1402
    3b7c:	050173f8 	streq	r7, [r1, #-1016]	; 0xfffffc08
    3b80:	04020004 	streq	r0, [r2], #-4
    3b84:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3b88:	00140104 	andseq	r0, r4, r4, lsl #2
    3b8c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b90:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3b94:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3b98:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b9c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3ba0:	04020005 	streq	r0, [r2], #-5
    3ba4:	0c830301 	stceq	3, cr0, [r3], {1}
    3ba8:	04020001 	streq	r0, [r2], #-1
    3bac:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    3bb0:	01100306 	tsteq	r0, r6, lsl #6
    3bb4:	01062805 	tsteq	r6, r5, lsl #16
    3bb8:	03060705 	movweq	r0, #26373	; 0x6705
    3bbc:	28053c0e 	stmdacs	r5, {r1, r2, r3, sl, fp, ip, sp}
    3bc0:	0c050106 	stfeqs	f0, [r5], {6}
    3bc4:	053c5903 	ldreq	r5, [ip, #-2307]!	; 0xfffff6fd
    3bc8:	c4030603 	strgt	r0, [r3], #-1539	; 0xfffff9fd
    3bcc:	07052000 	streq	r2, [r5, -r0]
    3bd0:	06050106 	streq	r0, [r5], -r6, lsl #2
    3bd4:	0005052e 	andeq	r0, r5, lr, lsr #10
    3bd8:	06010402 	streq	r0, [r1], -r2, lsl #8
    3bdc:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    3be0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3be4:	00010104 	andeq	r0, r1, r4, lsl #2
    3be8:	01010402 	tsteq	r1, r2, lsl #8
    3bec:	1f050204 	svcne	0x00050204
    3bf0:	01040200 	mrseq	r0, R12_usr
    3bf4:	20738803 	rsbscs	r8, r3, r3, lsl #16
    3bf8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3bfc:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3c00:	04020004 	streq	r0, [r2], #-4
    3c04:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3c08:	2e060104 	adfcss	f0, f6, f4
    3c0c:	01040200 	mrseq	r0, R12_usr
    3c10:	02002f06 	andeq	r2, r0, #6, 30
    3c14:	01060104 	tsteq	r6, r4, lsl #2
    3c18:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3c1c:	01040200 	mrseq	r0, R12_usr
    3c20:	010cf303 	tsteq	ip, r3, lsl #6	; <UNPREDICTABLE>
    3c24:	01040200 	mrseq	r0, R12_usr
    3c28:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3c2c:	02001f05 	andeq	r1, r0, #5, 30
    3c30:	bb030104 	bllt	c4048 <_Min_Heap_Size+0xc3848>
    3c34:	04050173 	streq	r0, [r5], #-371	; 0xfffffe8d
    3c38:	01040200 	mrseq	r0, R12_usr
    3c3c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3c40:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3c44:	20060104 	andcs	r0, r6, r4, lsl #2
    3c48:	01040200 	mrseq	r0, R12_usr
    3c4c:	02002f06 	andeq	r2, r0, #6, 30
    3c50:	01060104 	tsteq	r6, r4, lsl #2
    3c54:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3c58:	01040200 	mrseq	r0, R12_usr
    3c5c:	010cc003 	tsteq	ip, r3
    3c60:	02040200 	andeq	r0, r4, #0, 4
    3c64:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3c68:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    3c6c:	0402000e 	streq	r0, [r2], #-14
    3c70:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    3c74:	04020008 	streq	r0, [r2], #-8
    3c78:	07052002 	streq	r2, [r5, -r2]
    3c7c:	0b052606 	bleq	14d49c <_Min_Heap_Size+0x14cc9c>
    3c80:	0a050106 	beq	1440a0 <_Min_Heap_Size+0x1438a0>
    3c84:	0609052e 	streq	r0, [r9], -lr, lsr #10
    3c88:	060e0522 	streq	r0, [lr], -r2, lsr #10
    3c8c:	202a0501 	eorcs	r0, sl, r1, lsl #10
    3c90:	2f060905 	svccs	0x00060905
    3c94:	0a030305 	beq	c48b0 <_Min_Heap_Size+0xc40b0>
    3c98:	15050501 	strne	r0, [r5, #-1281]	; 0xfffffaff
    3c9c:	01061805 	tsteq	r6, r5, lsl #16
    3ca0:	2f060505 	svccs	0x00060505
    3ca4:	01061805 	tsteq	r6, r5, lsl #16
    3ca8:	23060505 	movwcs	r0, #25861	; 0x6505
    3cac:	01061605 	tsteq	r6, r5, lsl #12
    3cb0:	23060505 	movwcs	r0, #25861	; 0x6505
    3cb4:	01061405 	tsteq	r6, r5, lsl #8
    3cb8:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    3cbc:	01061405 	tsteq	r6, r5, lsl #8
    3cc0:	2f060505 	svccs	0x00060505
    3cc4:	01061a05 	tsteq	r6, r5, lsl #20
    3cc8:	28060505 	stmdacs	r6, {r0, r2, r8, sl}
    3ccc:	03060c05 	movweq	r0, #27653	; 0x6c05
    3cd0:	054a7f90 	strbeq	r7, [sl, #-3984]	; 0xfffff070
    3cd4:	dc030603 	stcle	6, cr0, [r3], {3}
    3cd8:	06052e00 	streq	r2, [r5], -r0, lsl #28
    3cdc:	03050106 	movweq	r0, #20742	; 0x5106
    3ce0:	2e180306 	cdpcs	3, 1, cr0, cr8, cr6, {0}
    3ce4:	13060105 	movwne	r0, #24837	; 0x6105
    3ce8:	0005022e 	andeq	r0, r5, lr, lsr #4
    3cec:	01050101 	tsteq	r5, r1, lsl #2
    3cf0:	00020500 	andeq	r0, r2, r0, lsl #10
    3cf4:	03000000 	movweq	r0, #0
    3cf8:	06011ae5 	streq	r1, [r1], -r5, ror #21
    3cfc:	06030501 	streq	r0, [r3], -r1, lsl #10
    3d00:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    3d04:	06030501 	streq	r0, [r3], -r1, lsl #10
    3d08:	06080522 	streq	r0, [r8], -r2, lsr #10
    3d0c:	20240501 	eorcs	r0, r4, r1, lsl #10
    3d10:	31060305 	tstcc	r6, r5, lsl #6
    3d14:	01060c05 	tsteq	r6, r5, lsl #24
    3d18:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    3d1c:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    3d20:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3d24:	03052008 	movweq	r2, #20488	; 0x5008
    3d28:	16052706 	strne	r2, [r5], -r6, lsl #14
    3d2c:	03050106 	movweq	r0, #20742	; 0x5106
    3d30:	16052f06 	strne	r2, [r5], -r6, lsl #30
    3d34:	03050106 	movweq	r0, #20742	; 0x5106
    3d38:	14052306 	strne	r2, [r5], #-774	; 0xfffffcfa
    3d3c:	03050106 	movweq	r0, #20742	; 0x5106
    3d40:	12052306 	andne	r2, r5, #402653184	; 0x18000000
    3d44:	03050106 	movweq	r0, #20742	; 0x5106
    3d48:	12053d06 	andne	r3, r5, #384	; 0x180
    3d4c:	03050106 	movweq	r0, #20742	; 0x5106
    3d50:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    3d54:	03050106 	movweq	r0, #20742	; 0x5106
    3d58:	01052806 	tsteq	r5, r6, lsl #16
    3d5c:	01023006 	tsteq	r2, r6
    3d60:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3d64:	02050001 	andeq	r0, r5, #1
    3d68:	00000000 	andeq	r0, r0, r0
    3d6c:	011ab703 	tsteq	sl, r3, lsl #14
    3d70:	03050106 	movweq	r0, #20742	; 0x5106
    3d74:	17052106 	strne	r2, [r5, -r6, lsl #2]
    3d78:	03050106 	movweq	r0, #20742	; 0x5106
    3d7c:	08052206 	stmdaeq	r5, {r1, r2, r9, sp}
    3d80:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    3d84:	06030520 	streq	r0, [r3], -r0, lsr #10
    3d88:	060c0531 			; <UNDEFINED> instruction: 0x060c0531
    3d8c:	20060501 	andcs	r0, r6, r1, lsl #10
    3d90:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    3d94:	01061605 	tsteq	r6, r5, lsl #12
    3d98:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    3d9c:	05270603 	streq	r0, [r7, #-1539]!	; 0xfffff9fd
    3da0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3da4:	052f0603 	streq	r0, [pc, #-1539]!	; 37a9 <_Min_Heap_Size+0x2fa9>
    3da8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3dac:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    3db0:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    3db4:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    3db8:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    3dbc:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    3dc0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    3dc4:	052f0603 	streq	r0, [pc, #-1539]!	; 37c9 <_Min_Heap_Size+0x2fc9>
    3dc8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    3dcc:	05280603 	streq	r0, [r8, #-1539]!	; 0xfffff9fd
    3dd0:	02300601 	eorseq	r0, r0, #1048576	; 0x100000
    3dd4:	01010001 	tsteq	r1, r1
    3dd8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3ddc:	00000002 	andeq	r0, r0, r2
    3de0:	14f90300 	ldrbtne	r0, [r9], #768	; 0x300
    3de4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    3de8:	17060105 	strne	r0, [r6, -r5, lsl #2]
    3dec:	01000102 	tsteq	r0, r2, lsl #2
    3df0:	00010501 	andeq	r0, r1, r1, lsl #10
    3df4:	00000205 	andeq	r0, r0, r5, lsl #4
    3df8:	93030000 	movwls	r0, #12288	; 0x3000
    3dfc:	01060111 	tsteq	r6, r1, lsl r1
    3e00:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3e04:	30060104 	andcc	r0, r6, r4, lsl #2
    3e08:	01040200 	mrseq	r0, R12_usr
    3e0c:	04020001 	streq	r0, [r2], #-1
    3e10:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3e14:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    3e18:	001f0502 	andseq	r0, pc, r2, lsl #10
    3e1c:	03010402 	movweq	r0, #5122	; 0x1402
    3e20:	052072c6 	streq	r7, [r0, #-710]!	; 0xfffffd3a
    3e24:	04020005 	streq	r0, [r2], #-5
    3e28:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    3e2c:	01040200 	mrseq	r0, R12_usr
    3e30:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3e34:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3e38:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e3c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3e40:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3e44:	00030501 	andeq	r0, r3, r1, lsl #10
    3e48:	03010402 	movweq	r0, #5122	; 0x1402
    3e4c:	00010db5 			; <UNDEFINED> instruction: 0x00010db5
    3e50:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e54:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3e58:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3e5c:	72f90301 	rscsvc	r0, r9, #67108864	; 0x4000000
    3e60:	00040501 	andeq	r0, r4, r1, lsl #10
    3e64:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3e68:	01040200 	mrseq	r0, R12_usr
    3e6c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3e70:	00200601 	eoreq	r0, r0, r1, lsl #12
    3e74:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e78:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3e7c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3e80:	00030501 	andeq	r0, r3, r1, lsl #10
    3e84:	03010402 	movweq	r0, #5122	; 0x1402
    3e88:	00010d82 	andeq	r0, r1, r2, lsl #27
    3e8c:	06020402 	streq	r0, [r2], -r2, lsl #8
    3e90:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3e94:	07051502 	streq	r1, [r5, -r2, lsl #10]
    3e98:	02040200 	andeq	r0, r4, #0, 4
    3e9c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    3ea0:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    3ea4:	04020006 	streq	r0, [r2], #-6
    3ea8:	05052002 	streq	r2, [r5, #-2]
    3eac:	01040200 	mrseq	r0, R12_usr
    3eb0:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    3eb4:	00010104 	andeq	r0, r1, r4, lsl #2
    3eb8:	01010402 	tsteq	r1, r2, lsl #8
    3ebc:	01040200 	mrseq	r0, R12_usr
    3ec0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3ec4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3ec8:	72c10301 	sbcvc	r0, r1, #67108864	; 0x4000000
    3ecc:	00050520 	andeq	r0, r5, r0, lsr #10
    3ed0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3ed4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3ed8:	00140104 	andseq	r0, r4, r4, lsl #2
    3edc:	06010402 	streq	r0, [r1], -r2, lsl #8
    3ee0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3ee4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3ee8:	06010402 	streq	r0, [r1], -r2, lsl #8
    3eec:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3ef0:	04020005 	streq	r0, [r2], #-5
    3ef4:	0dba0301 	ldceq	3, cr0, [sl, #4]!
    3ef8:	04020001 	streq	r0, [r2], #-1
    3efc:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    3f00:	001f0502 	andseq	r0, pc, r2, lsl #10
    3f04:	03010402 	movweq	r0, #5122	; 0x1402
    3f08:	050172f4 	streq	r7, [r1, #-756]	; 0xfffffd0c
    3f0c:	04020004 	streq	r0, [r2], #-4
    3f10:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3f14:	00140104 	andseq	r0, r4, r4, lsl #2
    3f18:	06010402 	streq	r0, [r1], -r2, lsl #8
    3f1c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3f20:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3f24:	06010402 	streq	r0, [r1], -r2, lsl #8
    3f28:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3f2c:	04020005 	streq	r0, [r2], #-5
    3f30:	0d870301 	stceq	3, cr0, [r7, #4]
    3f34:	04020001 	streq	r0, [r2], #-1
    3f38:	002e0602 	eoreq	r0, lr, r2, lsl #12
    3f3c:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    3f40:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    3f44:	01060204 	tsteq	r6, r4, lsl #4
    3f48:	02000805 	andeq	r0, r0, #327680	; 0x50000
    3f4c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    3f50:	05240607 	streq	r0, [r4, #-1543]!	; 0xfffff9f9
    3f54:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    3f58:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
    3f5c:	2001060b 	andcs	r0, r1, fp, lsl #12
    3f60:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    3f64:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    3f68:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    3f6c:	09052016 	stmdbeq	r5, {r1, r2, r4, sp}
    3f70:	06070520 	streq	r0, [r7], -r0, lsr #10
    3f74:	061a0534 			; <UNDEFINED> instruction: 0x061a0534
    3f78:	06070501 	streq	r0, [r7], -r1, lsl #10
    3f7c:	06150531 			; <UNDEFINED> instruction: 0x06150531
    3f80:	06070501 	streq	r0, [r7], -r1, lsl #10
    3f84:	05200644 	streq	r0, [r0, #-1604]!	; 0xfffff9bc
    3f88:	05430605 	strbeq	r0, [r3, #-1541]	; 0xfffff9fb
    3f8c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    3f90:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    3f94:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    3f98:	06440605 	strbeq	r0, [r4], -r5, lsl #12
    3f9c:	06030520 	streq	r0, [r3], -r0, lsr #10
    3fa0:	06010532 			; <UNDEFINED> instruction: 0x06010532
    3fa4:	02022e13 	andeq	r2, r2, #304	; 0x130
    3fa8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3fac:	02050001 	andeq	r0, r5, #1
    3fb0:	00000000 	andeq	r0, r0, r0
    3fb4:	011b9303 	tsteq	fp, r3, lsl #6
    3fb8:	03050106 	movweq	r0, #20742	; 0x5106
    3fbc:	17052106 	strne	r2, [r5, -r6, lsl #2]
    3fc0:	03050106 	movweq	r0, #20742	; 0x5106
    3fc4:	16052206 	strne	r2, [r5], -r6, lsl #4
    3fc8:	03050106 	movweq	r0, #20742	; 0x5106
    3fcc:	11053106 	tstne	r5, r6, lsl #2
    3fd0:	03050106 	movweq	r0, #20742	; 0x5106
    3fd4:	01054406 	tsteq	r5, r6, lsl #8
    3fd8:	01023006 	tsteq	r2, r6
    3fdc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3fe0:	02050001 	andeq	r0, r5, #1
    3fe4:	00000000 	andeq	r0, r0, r0
    3fe8:	01158803 	tsteq	r5, r3, lsl #16
    3fec:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    3ff0:	02170601 	andseq	r0, r7, #1048576	; 0x100000
    3ff4:	01010001 	tsteq	r1, r1
    3ff8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3ffc:	00000002 	andeq	r0, r0, r2
    4000:	11e00300 	mvnne	r0, r0, lsl #6
    4004:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4008:	04020003 	streq	r0, [r2], #-3
    400c:	00300601 	eorseq	r0, r0, r1, lsl #12
    4010:	01010402 	tsteq	r1, r2, lsl #8
    4014:	01040200 	mrseq	r0, R12_usr
    4018:	04020001 	streq	r0, [r2], #-1
    401c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    4020:	02001f05 	andeq	r1, r0, #5, 30
    4024:	f9030104 			; <UNDEFINED> instruction: 0xf9030104
    4028:	05052071 	streq	r2, [r5, #-113]	; 0xffffff8f
    402c:	01040200 	mrseq	r0, R12_usr
    4030:	00040514 	andeq	r0, r4, r4, lsl r5
    4034:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4038:	01040200 	mrseq	r0, R12_usr
    403c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4040:	2f060104 	svccs	0x00060104
    4044:	01040200 	mrseq	r0, R12_usr
    4048:	01040106 	tsteq	r4, r6, lsl #2
    404c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4050:	82030104 	andhi	r0, r3, #4, 2
    4054:	0200010e 	andeq	r0, r0, #-2147483645	; 0x80000003
    4058:	2e060104 	adfcss	f0, f6, f4
    405c:	1f050204 	svcne	0x00050204
    4060:	01040200 	mrseq	r0, R12_usr
    4064:	0172ac03 	cmneq	r2, r3, lsl #24
    4068:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    406c:	00140104 	andseq	r0, r4, r4, lsl #2
    4070:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4074:	01040200 	mrseq	r0, R12_usr
    4078:	02002006 	andeq	r2, r0, #6
    407c:	2f060104 	svccs	0x00060104
    4080:	01040200 	mrseq	r0, R12_usr
    4084:	01040106 	tsteq	r4, r6, lsl #2
    4088:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    408c:	cf030104 	svcgt	0x00030104
    4090:	0200010d 	andeq	r0, r0, #1073741827	; 0x40000003
    4094:	002e0104 	eoreq	r0, lr, r4, lsl #2
    4098:	06010402 	streq	r0, [r1], -r2, lsl #8
    409c:	04020001 	streq	r0, [r2], #-1
    40a0:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    40a4:	00010104 	andeq	r0, r1, r4, lsl #2
    40a8:	01010402 	tsteq	r1, r2, lsl #8
    40ac:	01040200 	mrseq	r0, R12_usr
    40b0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    40b4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    40b8:	71f80301 	mvnsvc	r0, r1, lsl #6
    40bc:	00050520 	andeq	r0, r5, r0, lsr #10
    40c0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    40c4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    40c8:	00140104 	andseq	r0, r4, r4, lsl #2
    40cc:	06010402 	streq	r0, [r1], -r2, lsl #8
    40d0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    40d4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    40d8:	06010402 	streq	r0, [r1], -r2, lsl #8
    40dc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    40e0:	04020003 	streq	r0, [r2], #-3
    40e4:	0e830301 	cdpeq	3, 8, cr0, cr3, cr1, {0}
    40e8:	04020001 	streq	r0, [r2], #-1
    40ec:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    40f0:	001f0502 	andseq	r0, pc, r2, lsl #10
    40f4:	03010402 	movweq	r0, #5122	; 0x1402
    40f8:	050172ab 	streq	r7, [r1, #-683]	; 0xfffffd55
    40fc:	04020004 	streq	r0, [r2], #-4
    4100:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4104:	00140104 	andseq	r0, r4, r4, lsl #2
    4108:	06010402 	streq	r0, [r1], -r2, lsl #8
    410c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4110:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4114:	06010402 	streq	r0, [r1], -r2, lsl #8
    4118:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    411c:	04020003 	streq	r0, [r2], #-3
    4120:	0dd00301 	ldcleq	3, cr0, [r0, #4]
    4124:	04020001 	streq	r0, [r2], #-1
    4128:	002e0602 	eoreq	r0, lr, r2, lsl #12
    412c:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    4130:	02000c05 	andeq	r0, r0, #1280	; 0x500
    4134:	01060204 	tsteq	r6, r4, lsl #4
    4138:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    413c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4140:	04020005 	streq	r0, [r2], #-5
    4144:	05300602 	ldreq	r0, [r0, #-1538]!	; 0xfffff9fe
    4148:	04020003 	streq	r0, [r2], #-3
    414c:	07051602 	streq	r1, [r5, -r2, lsl #12]
    4150:	02040200 	andeq	r0, r4, #0, 4
    4154:	06050106 	streq	r0, [r5], -r6, lsl #2
    4158:	02040200 	andeq	r0, r4, #0, 4
    415c:	0005052e 	andeq	r0, r5, lr, lsr #10
    4160:	06010402 	streq	r0, [r1], -r2, lsl #8
    4164:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    4168:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    416c:	00010104 	andeq	r0, r1, r4, lsl #2
    4170:	01010402 	tsteq	r1, r2, lsl #8
    4174:	1f050204 	svcne	0x00050204
    4178:	01040200 	mrseq	r0, R12_usr
    417c:	2071ed03 	rsbscs	lr, r1, r3, lsl #26
    4180:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4184:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4188:	04020004 	streq	r0, [r2], #-4
    418c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4190:	2e060104 	adfcss	f0, f6, f4
    4194:	01040200 	mrseq	r0, R12_usr
    4198:	02002f06 	andeq	r2, r0, #6, 30
    419c:	01060104 	tsteq	r6, r4, lsl #2
    41a0:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    41a4:	01040200 	mrseq	r0, R12_usr
    41a8:	010e8e03 	tsteq	lr, r3, lsl #28
    41ac:	01040200 	mrseq	r0, R12_usr
    41b0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    41b4:	02001f05 	andeq	r1, r0, #5, 30
    41b8:	a0030104 	andge	r0, r3, r4, lsl #2
    41bc:	04050172 	streq	r0, [r5], #-370	; 0xfffffe8e
    41c0:	01040200 	mrseq	r0, R12_usr
    41c4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    41c8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    41cc:	20060104 	andcs	r0, r6, r4, lsl #2
    41d0:	01040200 	mrseq	r0, R12_usr
    41d4:	02002f06 	andeq	r2, r0, #6, 30
    41d8:	01060104 	tsteq	r6, r4, lsl #2
    41dc:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    41e0:	01040200 	mrseq	r0, R12_usr
    41e4:	010ddb03 	tsteq	sp, r3, lsl #22
    41e8:	02040200 	andeq	r0, r4, #0, 4
    41ec:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    41f0:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    41f4:	0402000e 	streq	r0, [r2], #-14
    41f8:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    41fc:	04020008 	streq	r0, [r2], #-8
    4200:	07052002 	streq	r2, [r5, -r2]
    4204:	28052406 	stmdacs	r5, {r1, r2, sl, sp}
    4208:	07050106 	streq	r0, [r5, -r6, lsl #2]
    420c:	0b053106 	bleq	15062c <_Min_Heap_Size+0x14fe2c>
    4210:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    4214:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    4218:	0e052306 	cdpeq	3, 0, cr2, cr5, cr6, {0}
    421c:	16050106 	strne	r0, [r5], -r6, lsl #2
    4220:	20090520 	andcs	r0, r9, r0, lsr #10
    4224:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4228:	03060104 	movweq	r0, #24836	; 0x6104
    422c:	02002e6d 	andeq	r2, r0, #1744	; 0x6d0
    4230:	00010104 	andeq	r0, r1, r4, lsl #2
    4234:	01010402 	tsteq	r1, r2, lsl #8
    4238:	01040200 	mrseq	r0, R12_usr
    423c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4240:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4244:	71f30301 	mvnsvc	r0, r1, lsl #6
    4248:	00050520 	andeq	r0, r5, r0, lsr #10
    424c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4250:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4254:	00140104 	andseq	r0, r4, r4, lsl #2
    4258:	06010402 	streq	r0, [r1], -r2, lsl #8
    425c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4260:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4264:	06010402 	streq	r0, [r1], -r2, lsl #8
    4268:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    426c:	04020005 	streq	r0, [r2], #-5
    4270:	0e880301 	cdpeq	3, 8, cr0, cr8, cr1, {0}
    4274:	04020001 	streq	r0, [r2], #-1
    4278:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    427c:	001f0502 	andseq	r0, pc, r2, lsl #10
    4280:	03010402 	movweq	r0, #5122	; 0x1402
    4284:	050172a6 	streq	r7, [r1, #-678]	; 0xfffffd5a
    4288:	04020004 	streq	r0, [r2], #-4
    428c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4290:	00140104 	andseq	r0, r4, r4, lsl #2
    4294:	06010402 	streq	r0, [r1], -r2, lsl #8
    4298:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    429c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    42a0:	06010402 	streq	r0, [r1], -r2, lsl #8
    42a4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    42a8:	04020005 	streq	r0, [r2], #-5
    42ac:	0dd50301 	ldcleq	3, cr0, [r5, #4]
    42b0:	04020001 	streq	r0, [r2], #-1
    42b4:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    42b8:	01190306 	tsteq	r9, r6, lsl #6
    42bc:	01061a05 	tsteq	r6, r5, lsl #20
    42c0:	31060705 	tstcc	r6, r5, lsl #14
    42c4:	01061605 	tsteq	r6, r5, lsl #12
    42c8:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
    42cc:	01061c05 	tsteq	r6, r5, lsl #24
    42d0:	28060705 	stmdacs	r6, {r0, r2, r8, r9, sl}
    42d4:	05052006 	streq	r2, [r5, #-6]
    42d8:	18054306 	stmdane	r5, {r1, r2, r8, r9, lr}
    42dc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    42e0:	14053106 	strne	r3, [r5], #-262	; 0xfffffefa
    42e4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    42e8:	1a053d06 	bne	153708 <_Min_Heap_Size+0x152f08>
    42ec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    42f0:	20062806 	andcs	r2, r6, r6, lsl #16
    42f4:	32060305 	andcc	r0, r6, #335544320	; 0x14000000
    42f8:	13060105 	movwne	r0, #24837	; 0x6105
    42fc:	0002022e 	andeq	r0, r2, lr, lsr #4
    4300:	01050101 	tsteq	r5, r1, lsl #2
    4304:	00020500 	andeq	r0, r2, r0, lsl #10
    4308:	03000000 	movweq	r0, #0
    430c:	06011baf 	streq	r1, [r1], -pc, lsr #23
    4310:	06030501 	streq	r0, [r3], -r1, lsl #10
    4314:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    4318:	06030501 	streq	r0, [r3], -r1, lsl #10
    431c:	06160522 	ldreq	r0, [r6], -r2, lsr #10
    4320:	06030501 	streq	r0, [r3], -r1, lsl #10
    4324:	06120531 			; <UNDEFINED> instruction: 0x06120531
    4328:	06030501 	streq	r0, [r3], -r1, lsl #10
    432c:	0618053d 			; <UNDEFINED> instruction: 0x0618053d
    4330:	06030501 	streq	r0, [r3], -r1, lsl #10
    4334:	06010528 	streq	r0, [r1], -r8, lsr #10
    4338:	00010230 	andeq	r0, r1, r0, lsr r2
    433c:	01050101 	tsteq	r5, r1, lsl #2
    4340:	44020500 	strmi	r0, [r2], #-1280	; 0xfffffb00
    4344:	0308000e 	movweq	r0, #32782	; 0x800e
    4348:	05011599 	streq	r1, [r1, #-1433]	; 0xfffffa67
    434c:	05131403 	ldreq	r1, [r3, #-1027]	; 0xfffffbfd
    4350:	02170601 	andseq	r0, r7, #1048576	; 0x100000
    4354:	01010001 	tsteq	r1, r1
    4358:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    435c:	000e4602 	andeq	r4, lr, r2, lsl #12
    4360:	1c8a0308 	stcne	3, cr0, [sl], {8}
    4364:	13030501 	movwne	r0, #13569	; 0x3501
    4368:	0c051513 	cfstr32eq	mvfx1, [r5], {19}
    436c:	06050106 	streq	r0, [r5], -r6, lsl #2
    4370:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    4374:	06150530 			; <UNDEFINED> instruction: 0x06150530
    4378:	20080501 	andcs	r0, r8, r1, lsl #10
    437c:	03060705 	movweq	r0, #26373	; 0x6705
    4380:	12053c09 	andne	r3, r5, #2304	; 0x900
    4384:	07050106 	streq	r0, [r5, -r6, lsl #2]
    4388:	05142106 	ldreq	r2, [r4, #-262]	; 0xfffffefa
    438c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    4390:	0402003a 	streq	r0, [r2], #-58	; 0xffffffc6
    4394:	7c053c01 	stcvc	12, cr3, [r5], {1}
    4398:	02040200 	andeq	r0, r4, #0, 4
    439c:	006d052e 	rsbeq	r0, sp, lr, lsr #10
    43a0:	20020402 	andcs	r0, r2, r2, lsl #8
    43a4:	30060905 	andcc	r0, r6, r5, lsl #18
    43a8:	01062605 	tsteq	r6, r5, lsl #12
    43ac:	05203005 	streq	r3, [r0, #-5]!
    43b0:	07052015 	smladeq	r5, r5, r0, r2
    43b4:	19052606 	stmdbne	r5, {r1, r2, r9, sl, sp}
    43b8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    43bc:	10053f06 	andne	r3, r5, r6, lsl #30
    43c0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    43c4:	2e08052e 	cfsh32cs	mvfx0, mvfx8, #30
    43c8:	62030105 	andvs	r0, r3, #1073741825	; 0x40000001
    43cc:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    43d0:	5b2e2103 	blpl	b8c7e4 <_Min_Heap_Size+0xb8bfe4>
    43d4:	16055b5b 			; <UNDEFINED> instruction: 0x16055b5b
    43d8:	07050106 	streq	r0, [r5, -r6, lsl #2]
    43dc:	1a053f06 	bne	153ffc <_Min_Heap_Size+0x1537fc>
    43e0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    43e4:	10053206 	andne	r3, r5, r6, lsl #4
    43e8:	0a050106 	beq	144808 <_Min_Heap_Size+0x144008>
    43ec:	06090520 	streq	r0, [r9], -r0, lsr #10
    43f0:	061e0531 			; <UNDEFINED> instruction: 0x061e0531
    43f4:	00090501 	andeq	r0, r9, r1, lsl #10
    43f8:	06010402 	streq	r0, [r1], -r2, lsl #8
    43fc:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    4400:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4404:	00010104 	andeq	r0, r1, r4, lsl #2
    4408:	01010402 	tsteq	r1, r2, lsl #8
    440c:	1f050204 	svcne	0x00050204
    4410:	01040200 	mrseq	r0, R12_usr
    4414:	20679a03 	rsbcs	r9, r7, r3, lsl #20
    4418:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    441c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4420:	04020004 	streq	r0, [r2], #-4
    4424:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4428:	2e060104 	adfcss	f0, f6, f4
    442c:	01040200 	mrseq	r0, R12_usr
    4430:	02002f06 	andeq	r2, r0, #6, 30
    4434:	01060104 	tsteq	r6, r4, lsl #2
    4438:	09050104 	stmdbeq	r5, {r2, r8}
    443c:	01040200 	mrseq	r0, R12_usr
    4440:	0118e103 	tsteq	r8, r3, lsl #2
    4444:	01040200 	mrseq	r0, R12_usr
    4448:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    444c:	02001f05 	andeq	r1, r0, #5, 30
    4450:	cd030104 	stfgts	f0, [r3, #-16]
    4454:	04050167 	streq	r0, [r5], #-359	; 0xfffffe99
    4458:	01040200 	mrseq	r0, R12_usr
    445c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4460:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4464:	20060104 	andcs	r0, r6, r4, lsl #2
    4468:	01040200 	mrseq	r0, R12_usr
    446c:	02002f06 	andeq	r2, r0, #6, 30
    4470:	01060104 	tsteq	r6, r4, lsl #2
    4474:	09050104 	stmdbeq	r5, {r2, r8}
    4478:	01040200 	mrseq	r0, R12_usr
    447c:	0118ae03 	tsteq	r8, r3, lsl #28
    4480:	02040200 	andeq	r0, r4, #0, 4
    4484:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4488:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    448c:	0402000d 	streq	r0, [r2], #-13
    4490:	00010602 	andeq	r0, r1, r2, lsl #12
    4494:	20020402 	andcs	r0, r2, r2, lsl #8
    4498:	02000c05 	andeq	r0, r0, #1280	; 0x500
    449c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    44a0:	013f060b 	teqeq	pc, fp, lsl #12
    44a4:	002e2e2e 	eoreq	r2, lr, lr, lsr #28
    44a8:	20010402 	andcs	r0, r1, r2, lsl #8
    44ac:	02000905 	andeq	r0, r0, #81920	; 0x14000
    44b0:	051a0104 	ldreq	r0, [sl, #-260]	; 0xfffffefc
    44b4:	3c0f0307 	stccc	3, cr0, [pc], {7}
    44b8:	01060e05 	tsteq	r6, r5, lsl #28
    44bc:	05280105 	streq	r0, [r8, #-261]!	; 0xfffffefb
    44c0:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    44c4:	7fab0301 	svcvc	0x00ab0301
    44c8:	0038053c 	eorseq	r0, r8, ip, lsr r5
    44cc:	20010402 	andcs	r0, r1, r2, lsl #8
    44d0:	30060705 	andcc	r0, r6, r5, lsl #14
    44d4:	06130513 			; <UNDEFINED> instruction: 0x06130513
    44d8:	06070501 	streq	r0, [r7], -r1, lsl #10
    44dc:	06260521 	strteq	r0, [r6], -r1, lsr #10
    44e0:	20300501 	eorscs	r0, r0, r1, lsl #10
    44e4:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    44e8:	07052e14 	smladeq	r5, r4, lr, r2
    44ec:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    44f0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    44f4:	4a0d0306 	bmi	345114 <_Min_Heap_Size+0x344914>
    44f8:	01062605 	tsteq	r6, r5, lsl #12
    44fc:	05203005 	streq	r3, [r0, #-5]!
    4500:	15052017 	strne	r2, [r5, #-23]	; 0xffffffe9
    4504:	0609052e 	streq	r0, [r9], -lr, lsr #10
    4508:	062e3703 	strteq	r3, [lr], -r3, lsl #14
    450c:	030c052e 	movweq	r0, #50478	; 0xc52e
    4510:	1c20200a 	stcne	0, cr2, [r0], #-40	; 0xffffffd8
    4514:	02260105 	eoreq	r0, r6, #1073741825	; 0x40000001
    4518:	01010001 	tsteq	r1, r1
    451c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4520:	000f2c02 	andeq	r2, pc, r2, lsl #24
    4524:	12ae0308 	adcne	r0, lr, #8, 6	; 0x20000000
    4528:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    452c:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    4530:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    4534:	0305200c 	movweq	r2, #20492	; 0x500c
    4538:	0c052106 	stfeqs	f2, [r5], {6}
    453c:	03050106 	movweq	r0, #20742	; 0x5106
    4540:	0c052106 	stfeqs	f2, [r5], {6}
    4544:	03050106 	movweq	r0, #20742	; 0x5106
    4548:	15132106 	ldrne	r2, [r3, #-262]	; 0xfffffefa
    454c:	06060513 			; <UNDEFINED> instruction: 0x06060513
    4550:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    4554:	08052306 	stmdaeq	r5, {r1, r2, r8, r9, sp}
    4558:	2f050106 	svccs	0x00050106
    455c:	01040200 	mrseq	r0, R12_usr
    4560:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    4564:	06060544 	streq	r0, [r6], -r4, asr #10
    4568:	001d0501 	andseq	r0, sp, r1, lsl #10
    456c:	20010402 	andcs	r0, r1, r2, lsl #8
    4570:	01040200 	mrseq	r0, R12_usr
    4574:	2121052e 			; <UNDEFINED> instruction: 0x2121052e
    4578:	03060305 	movweq	r0, #25349	; 0x6305
    457c:	053c00eb 	ldreq	r0, [ip, #-235]!	; 0xffffff15
    4580:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    4584:	03052006 	movweq	r2, #20486	; 0x5006
    4588:	00dd0306 	sbcseq	r0, sp, r6, lsl #6
    458c:	0606052e 	streq	r0, [r6], -lr, lsr #10
    4590:	002c0501 	eoreq	r0, ip, r1, lsl #10
    4594:	3c010402 	cfstrscc	mvf0, [r1], {2}
    4598:	51060305 	tstpl	r6, r5, lsl #6
    459c:	01060605 	tsteq	r6, r5, lsl #12
    45a0:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    45a4:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    45a8:	07054f01 	streq	r4, [r5, -r1, lsl #30]
    45ac:	7ea50306 	cdpvc	3, 10, cr0, cr5, cr6, {0}
    45b0:	0620062e 	strteq	r0, [r0], -lr, lsr #12
    45b4:	0305052f 	movweq	r0, #21807	; 0x552f
    45b8:	08052009 	stmdaeq	r5, {r0, r3, sp}
    45bc:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    45c0:	01040200 	mrseq	r0, R12_usr
    45c4:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    45c8:	0618053e 			; <UNDEFINED> instruction: 0x0618053e
    45cc:	06050501 	streq	r0, [r5], -r1, lsl #10
    45d0:	0608054e 	streq	r0, [r8], -lr, asr #10
    45d4:	002d0501 	eoreq	r0, sp, r1, lsl #10
    45d8:	3c010402 	cfstrscc	mvf0, [r1], {2}
    45dc:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    45e0:	01061805 	tsteq	r6, r5, lsl #16
    45e4:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    45e8:	01060805 	tsteq	r6, r5, lsl #16
    45ec:	02002d05 	andeq	r2, r0, #320	; 0x140
    45f0:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    45f4:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    45f8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    45fc:	054e0605 	strbeq	r0, [lr, #-1541]	; 0xfffff9fb
    4600:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    4604:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4608:	32053c01 	andcc	r3, r5, #256	; 0x100
    460c:	0607053d 			; <UNDEFINED> instruction: 0x0607053d
    4610:	06180522 	ldreq	r0, [r8], -r2, lsr #10
    4614:	06050501 	streq	r0, [r5], -r1, lsl #10
    4618:	060e054e 	streq	r0, [lr], -lr, asr #10
    461c:	20080501 	andcs	r0, r8, r1, lsl #10
    4620:	31060705 	tstcc	r6, r5, lsl #14
    4624:	01060a05 	tsteq	r6, r5, lsl #20
    4628:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    462c:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    4630:	05430607 	strbeq	r0, [r3, #-1543]	; 0xfffff9f9
    4634:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    4638:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
    463c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    4640:	3e05200a 	cdpcc	0, 0, cr2, cr5, cr10, {0}
    4644:	01040200 	mrseq	r0, R12_usr
    4648:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    464c:	0d053f25 	stceq	15, cr3, [r5, #-148]	; 0xffffff6c
    4650:	0c050106 	stfeqs	f0, [r5], {6}
    4654:	000b052e 	andeq	r0, fp, lr, lsr #10
    4658:	06010402 	streq	r0, [r1], -r2, lsl #8
    465c:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    4660:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4664:	00010104 	andeq	r0, r1, r4, lsl #2
    4668:	01010402 	tsteq	r1, r2, lsl #8
    466c:	1f050204 	svcne	0x00050204
    4670:	01040200 	mrseq	r0, R12_usr
    4674:	2070e703 	rsbscs	lr, r0, r3, lsl #14
    4678:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    467c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4680:	04020004 	streq	r0, [r2], #-4
    4684:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4688:	2e060104 	adfcss	f0, f6, f4
    468c:	01040200 	mrseq	r0, R12_usr
    4690:	02002f06 	andeq	r2, r0, #6, 30
    4694:	01060104 	tsteq	r6, r4, lsl #2
    4698:	0b050104 	bleq	144ab0 <_Min_Heap_Size+0x1442b0>
    469c:	01040200 	mrseq	r0, R12_usr
    46a0:	010f9403 	tsteq	pc, r3, lsl #8
    46a4:	01040200 	mrseq	r0, R12_usr
    46a8:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    46ac:	02001f05 	andeq	r1, r0, #5, 30
    46b0:	9a030104 	bls	c4ac8 <_Min_Heap_Size+0xc42c8>
    46b4:	04050171 	streq	r0, [r5], #-369	; 0xfffffe8f
    46b8:	01040200 	mrseq	r0, R12_usr
    46bc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    46c0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    46c4:	20060104 	andcs	r0, r6, r4, lsl #2
    46c8:	01040200 	mrseq	r0, R12_usr
    46cc:	02002f06 	andeq	r2, r0, #6, 30
    46d0:	01060104 	tsteq	r6, r4, lsl #2
    46d4:	0b050104 	bleq	144aec <_Min_Heap_Size+0x1442ec>
    46d8:	01040200 	mrseq	r0, R12_usr
    46dc:	010ee103 	tsteq	lr, r3, lsl #2
    46e0:	02040200 	andeq	r0, r4, #0, 4
    46e4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    46e8:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    46ec:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    46f0:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    46f4:	0402000e 	streq	r0, [r2], #-14
    46f8:	0d052002 	stceq	0, cr2, [r5, #-8]
    46fc:	2e052406 	cdpcs	4, 0, cr2, cr5, cr6, {0}
    4700:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4704:	11052f06 	tstne	r5, r6, lsl #30
    4708:	10050106 	andne	r0, r5, r6, lsl #2
    470c:	060f053c 			; <UNDEFINED> instruction: 0x060f053c
    4710:	06140531 			; <UNDEFINED> instruction: 0x06140531
    4714:	201c0501 	andscs	r0, ip, r1, lsl #10
    4718:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    471c:	65030609 	strvs	r0, [r3, #-1545]	; 0xfffff9f7
    4720:	2e20062e 	cfmadda32cs	mvax1, mvax0, mvfx0, mvfx14
    4724:	03060d05 	movweq	r0, #27909	; 0x6d05
    4728:	0b052026 	bleq	14c7c8 <_Min_Heap_Size+0x14bfc8>
    472c:	054a0c03 	strbeq	r0, [sl, #-3075]	; 0xfffff3fd
    4730:	4a0d0309 	bmi	34535c <_Min_Heap_Size+0x344b5c>
    4734:	061a053f 			; <UNDEFINED> instruction: 0x061a053f
    4738:	06050501 	streq	r0, [r5], -r1, lsl #10
    473c:	06070531 			; <UNDEFINED> instruction: 0x06070531
    4740:	05054b26 	streq	r4, [r5, #-2854]	; 0xfffff4da
    4744:	06014c06 	streq	r4, [r1], -r6, lsl #24
    4748:	2e200620 	cfmadda32cs	mvax1, mvax0, mvfx0, mvfx0
    474c:	0515202e 	ldreq	r2, [r5, #-46]	; 0xffffffd2
    4750:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    4754:	07052008 	streq	r2, [r5, -r8]
    4758:	32054206 	andcc	r4, r5, #1610612736	; 0x60000000
    475c:	10050106 	andne	r0, r5, r6, lsl #2
    4760:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    4764:	060a0521 	streq	r0, [sl], -r1, lsr #10
    4768:	3d2b0501 	cfstr32cc	mvfx0, [fp, #-4]!
    476c:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    4770:	053f0609 	ldreq	r0, [pc, #-1545]!	; 416f <_Min_Heap_Size+0x396f>
    4774:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    4778:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    477c:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    4780:	0b05200c 	bleq	14c7b8 <_Min_Heap_Size+0x14bfb8>
    4784:	01040200 	mrseq	r0, R12_usr
    4788:	02003f06 	andeq	r3, r0, #6, 30
    478c:	00010104 	andeq	r0, r1, r4, lsl #2
    4790:	01010402 	tsteq	r1, r2, lsl #8
    4794:	01040200 	mrseq	r0, R12_usr
    4798:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    479c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    47a0:	70950301 	addsvc	r0, r5, r1, lsl #6
    47a4:	00050520 	andeq	r0, r5, r0, lsr #10
    47a8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    47ac:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    47b0:	00140104 	andseq	r0, r4, r4, lsl #2
    47b4:	06010402 	streq	r0, [r1], -r2, lsl #8
    47b8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    47bc:	002f0601 	eoreq	r0, pc, r1, lsl #12
    47c0:	06010402 	streq	r0, [r1], -r2, lsl #8
    47c4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    47c8:	0402000b 	streq	r0, [r2], #-11
    47cc:	0fe60301 	svceq	0x00e60301
    47d0:	04020001 	streq	r0, [r2], #-1
    47d4:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    47d8:	001f0502 	andseq	r0, pc, r2, lsl #10
    47dc:	03010402 	movweq	r0, #5122	; 0x1402
    47e0:	050170c8 	streq	r7, [r1, #-200]	; 0xffffff38
    47e4:	04020004 	streq	r0, [r2], #-4
    47e8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    47ec:	00140104 	andseq	r0, r4, r4, lsl #2
    47f0:	06010402 	streq	r0, [r1], -r2, lsl #8
    47f4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    47f8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    47fc:	06010402 	streq	r0, [r1], -r2, lsl #8
    4800:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4804:	0402000b 	streq	r0, [r2], #-11
    4808:	0fb30301 	svceq	0x00b30301
    480c:	04020001 	streq	r0, [r2], #-1
    4810:	02002e01 	andeq	r2, r0, #1, 28
    4814:	01060104 	tsteq	r6, r4, lsl #2
    4818:	01040200 	mrseq	r0, R12_usr
    481c:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    4820:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4824:	00010104 	andeq	r0, r1, r4, lsl #2
    4828:	01010402 	tsteq	r1, r2, lsl #8
    482c:	1f050204 	svcne	0x00050204
    4830:	01040200 	mrseq	r0, R12_usr
    4834:	20709403 	rsbscs	r9, r0, r3, lsl #8
    4838:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    483c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4840:	04020004 	streq	r0, [r2], #-4
    4844:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4848:	2e060104 	adfcss	f0, f6, f4
    484c:	01040200 	mrseq	r0, R12_usr
    4850:	02002f06 	andeq	r2, r0, #6, 30
    4854:	01060104 	tsteq	r6, r4, lsl #2
    4858:	0b050104 	bleq	144c70 <_Min_Heap_Size+0x144470>
    485c:	01040200 	mrseq	r0, R12_usr
    4860:	010fe703 	tsteq	pc, r3, lsl #14
    4864:	01040200 	mrseq	r0, R12_usr
    4868:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    486c:	02001f05 	andeq	r1, r0, #5, 30
    4870:	c7030104 	strgt	r0, [r3, -r4, lsl #2]
    4874:	04050170 	streq	r0, [r5], #-368	; 0xfffffe90
    4878:	01040200 	mrseq	r0, R12_usr
    487c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4880:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4884:	20060104 	andcs	r0, r6, r4, lsl #2
    4888:	01040200 	mrseq	r0, R12_usr
    488c:	02002f06 	andeq	r2, r0, #6, 30
    4890:	01060104 	tsteq	r6, r4, lsl #2
    4894:	0b050104 	bleq	144cac <_Min_Heap_Size+0x1444ac>
    4898:	01040200 	mrseq	r0, R12_usr
    489c:	010fb403 	tsteq	pc, r3, lsl #8
    48a0:	01040200 	mrseq	r0, R12_usr
    48a4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    48a8:	00010601 	andeq	r0, r1, r1, lsl #12
    48ac:	16010402 	strne	r0, [r1], -r2, lsl #8
    48b0:	01040200 	mrseq	r0, R12_usr
    48b4:	04020001 	streq	r0, [r2], #-1
    48b8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    48bc:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    48c0:	001f0502 	andseq	r0, pc, r2, lsl #10
    48c4:	03010402 	movweq	r0, #5122	; 0x1402
    48c8:	05207090 	streq	r7, [r0, #-144]!	; 0xffffff70
    48cc:	04020005 	streq	r0, [r2], #-5
    48d0:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    48d4:	01040200 	mrseq	r0, R12_usr
    48d8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    48dc:	002e0601 	eoreq	r0, lr, r1, lsl #12
    48e0:	06010402 	streq	r0, [r1], -r2, lsl #8
    48e4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    48e8:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    48ec:	000b0501 	andeq	r0, fp, r1, lsl #10
    48f0:	03010402 	movweq	r0, #5122	; 0x1402
    48f4:	00010feb 	andeq	r0, r1, fp, ror #31
    48f8:	06010402 	streq	r0, [r1], -r2, lsl #8
    48fc:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4900:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4904:	70c30301 	sbcvc	r0, r3, r1, lsl #6
    4908:	00040501 	andeq	r0, r4, r1, lsl #10
    490c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4910:	01040200 	mrseq	r0, R12_usr
    4914:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4918:	00200601 	eoreq	r0, r0, r1, lsl #12
    491c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4920:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4924:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4928:	000b0501 	andeq	r0, fp, r1, lsl #10
    492c:	03010402 	movweq	r0, #5122	; 0x1402
    4930:	00010fb8 			; <UNDEFINED> instruction: 0x00010fb8
    4934:	06020402 	streq	r0, [r2], -r2, lsl #8
    4938:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    493c:	1a051502 	bne	149d4c <_Min_Heap_Size+0x14954c>
    4940:	02040200 	andeq	r0, r4, #0, 4
    4944:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4948:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    494c:	0402000b 	streq	r0, [r2], #-11
    4950:	052f0602 	streq	r0, [pc, #-1538]!	; 4356 <_Min_Heap_Size+0x3b56>
    4954:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4958:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    495c:	0402000b 	streq	r0, [r2], #-11
    4960:	00300601 	eorseq	r0, r0, r1, lsl #12
    4964:	01010402 	tsteq	r1, r2, lsl #8
    4968:	01040200 	mrseq	r0, R12_usr
    496c:	04020001 	streq	r0, [r2], #-1
    4970:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    4974:	02001f05 	andeq	r1, r0, #5, 30
    4978:	8a030104 	bhi	c4d90 <_Min_Heap_Size+0xc4590>
    497c:	05052070 	streq	r2, [r5, #-112]	; 0xffffff90
    4980:	01040200 	mrseq	r0, R12_usr
    4984:	00040514 	andeq	r0, r4, r4, lsl r5
    4988:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    498c:	01040200 	mrseq	r0, R12_usr
    4990:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4994:	2f060104 	svccs	0x00060104
    4998:	01040200 	mrseq	r0, R12_usr
    499c:	01040106 	tsteq	r4, r6, lsl #2
    49a0:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    49a4:	f1030104 			; <UNDEFINED> instruction: 0xf1030104
    49a8:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    49ac:	2e060104 	adfcss	f0, f6, f4
    49b0:	1f050204 	svcne	0x00050204
    49b4:	01040200 	mrseq	r0, R12_usr
    49b8:	0170bd03 	cmneq	r0, r3, lsl #26
    49bc:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    49c0:	00140104 	andseq	r0, r4, r4, lsl #2
    49c4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    49c8:	01040200 	mrseq	r0, R12_usr
    49cc:	02002006 	andeq	r2, r0, #6
    49d0:	2f060104 	svccs	0x00060104
    49d4:	01040200 	mrseq	r0, R12_usr
    49d8:	01040106 	tsteq	r4, r6, lsl #2
    49dc:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    49e0:	be030104 	adflts	f0, f3, f4
    49e4:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    49e8:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    49ec:	02040200 	andeq	r0, r4, #0, 4
    49f0:	00110515 	andseq	r0, r1, r5, lsl r5
    49f4:	06020402 	streq	r0, [r2], -r2, lsl #8
    49f8:	04020001 	streq	r0, [r2], #-1
    49fc:	09052002 	stmdbeq	r5, {r1, sp}
    4a00:	1c053306 	stcne	3, cr3, [r5], {6}
    4a04:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4a08:	31053506 	tstcc	r5, r6, lsl #10
    4a0c:	45050106 	strmi	r0, [r5, #-262]	; 0xfffffefa
    4a10:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
    4a14:	5b060705 	blpl	186630 <_Min_Heap_Size+0x185e30>
    4a18:	19062006 	stmdbne	r6, {r1, r2, sp}
    4a1c:	01062205 	tsteq	r6, r5, lsl #4
    4a20:	05203605 	streq	r3, [r0, #-1541]!	; 0xfffff9fb
    4a24:	07052e10 	smladeq	r5, r0, lr, r2
    4a28:	11052f06 	tstne	r5, r6, lsl #30
    4a2c:	0a050106 	beq	144e4c <_Min_Heap_Size+0x14464c>
    4a30:	3d0b052e 	cfstr32cc	mvfx0, [fp, #-184]	; 0xffffff48
    4a34:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4a38:	3f060104 	svccc	0x00060104
    4a3c:	01040200 	mrseq	r0, R12_usr
    4a40:	04020001 	streq	r0, [r2], #-1
    4a44:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4a48:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4a4c:	001f0502 	andseq	r0, pc, r2, lsl #10
    4a50:	03010402 	movweq	r0, #5122	; 0x1402
    4a54:	05206fec 	streq	r6, [r0, #-4076]!	; 0xfffff014
    4a58:	04020005 	streq	r0, [r2], #-5
    4a5c:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4a60:	01040200 	mrseq	r0, R12_usr
    4a64:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4a68:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4a6c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4a70:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4a74:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4a78:	00090501 	andeq	r0, r9, r1, lsl #10
    4a7c:	03010402 	movweq	r0, #5122	; 0x1402
    4a80:	0001108f 	andeq	r1, r1, pc, lsl #1
    4a84:	06010402 	streq	r0, [r1], -r2, lsl #8
    4a88:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4a8c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4a90:	709f0301 	addsvc	r0, pc, r1, lsl #6
    4a94:	00040501 	andeq	r0, r4, r1, lsl #10
    4a98:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4a9c:	01040200 	mrseq	r0, R12_usr
    4aa0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4aa4:	00200601 	eoreq	r0, r0, r1, lsl #12
    4aa8:	06010402 	streq	r0, [r1], -r2, lsl #8
    4aac:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4ab0:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4ab4:	00090501 	andeq	r0, r9, r1, lsl #10
    4ab8:	03010402 	movweq	r0, #5122	; 0x1402
    4abc:	00010fdc 	ldrdeq	r0, [r1], -ip
    4ac0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4ac4:	01040200 	mrseq	r0, R12_usr
    4ac8:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4acc:	00150104 	andseq	r0, r5, r4, lsl #2
    4ad0:	01010402 	tsteq	r1, r2, lsl #8
    4ad4:	01040200 	mrseq	r0, R12_usr
    4ad8:	04020001 	streq	r0, [r2], #-1
    4adc:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    4ae0:	02001f05 	andeq	r1, r0, #5, 30
    4ae4:	e9030104 	stmdb	r3, {r2, r8}
    4ae8:	0505206f 	streq	r2, [r5, #-111]	; 0xffffff91
    4aec:	01040200 	mrseq	r0, R12_usr
    4af0:	00040514 	andeq	r0, r4, r4, lsl r5
    4af4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4af8:	01040200 	mrseq	r0, R12_usr
    4afc:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4b00:	2f060104 	svccs	0x00060104
    4b04:	01040200 	mrseq	r0, R12_usr
    4b08:	01040106 	tsteq	r4, r6, lsl #2
    4b0c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4b10:	92030104 	andls	r0, r3, #4, 2
    4b14:	02000110 	andeq	r0, r0, #16, 2
    4b18:	2e060104 	adfcss	f0, f6, f4
    4b1c:	1f050204 	svcne	0x00050204
    4b20:	01040200 	mrseq	r0, R12_usr
    4b24:	01709c03 	cmneq	r0, r3, lsl #24
    4b28:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4b2c:	00140104 	andseq	r0, r4, r4, lsl #2
    4b30:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4b34:	01040200 	mrseq	r0, R12_usr
    4b38:	02002006 	andeq	r2, r0, #6
    4b3c:	2f060104 	svccs	0x00060104
    4b40:	01040200 	mrseq	r0, R12_usr
    4b44:	01040106 	tsteq	r4, r6, lsl #2
    4b48:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4b4c:	df030104 	svcle	0x00030104
    4b50:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    4b54:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    4b58:	02040200 	andeq	r0, r4, #0, 4
    4b5c:	00180515 	andseq	r0, r8, r5, lsl r5
    4b60:	06020402 	streq	r0, [r2], -r2, lsl #8
    4b64:	04020001 	streq	r0, [r2], #-1
    4b68:	09052002 	stmdbeq	r5, {r1, sp}
    4b6c:	02040200 	andeq	r0, r4, #0, 4
    4b70:	1e052f06 	cdpne	15, 0, cr2, cr5, cr6, {0}
    4b74:	02040200 	andeq	r0, r4, #0, 4
    4b78:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4b7c:	01040200 	mrseq	r0, R12_usr
    4b80:	02003006 	andeq	r3, r0, #6
    4b84:	00010104 	andeq	r0, r1, r4, lsl #2
    4b88:	01010402 	tsteq	r1, r2, lsl #8
    4b8c:	01040200 	mrseq	r0, R12_usr
    4b90:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4b94:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4b98:	6fe30301 	svcvs	0x00e30301
    4b9c:	00050520 	andeq	r0, r5, r0, lsr #10
    4ba0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4ba4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4ba8:	00140104 	andseq	r0, r4, r4, lsl #2
    4bac:	06010402 	streq	r0, [r1], -r2, lsl #8
    4bb0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4bb4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4bb8:	06010402 	streq	r0, [r1], -r2, lsl #8
    4bbc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4bc0:	04020009 	streq	r0, [r2], #-9
    4bc4:	10980301 	addsne	r0, r8, r1, lsl #6
    4bc8:	04020001 	streq	r0, [r2], #-1
    4bcc:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4bd0:	001f0502 	andseq	r0, pc, r2, lsl #10
    4bd4:	03010402 	movweq	r0, #5122	; 0x1402
    4bd8:	05017096 	streq	r7, [r1, #-150]	; 0xffffff6a
    4bdc:	04020004 	streq	r0, [r2], #-4
    4be0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4be4:	00140104 	andseq	r0, r4, r4, lsl #2
    4be8:	06010402 	streq	r0, [r1], -r2, lsl #8
    4bec:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4bf0:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4bf4:	06010402 	streq	r0, [r1], -r2, lsl #8
    4bf8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4bfc:	04020009 	streq	r0, [r2], #-9
    4c00:	0fe50301 	svceq	0x00e50301
    4c04:	04020001 	streq	r0, [r2], #-1
    4c08:	002e0602 	eoreq	r0, lr, r2, lsl #12
    4c0c:	16020402 	strne	r0, [r2], -r2, lsl #8
    4c10:	02001c05 	andeq	r1, r0, #1280	; 0x500
    4c14:	01060204 	tsteq	r6, r4, lsl #4
    4c18:	02040200 	andeq	r0, r4, #0, 4
    4c1c:	00090520 	andeq	r0, r9, r0, lsr #10
    4c20:	06020402 	streq	r0, [r2], -r2, lsl #8
    4c24:	00070527 	andeq	r0, r7, r7, lsr #10
    4c28:	3f020402 	svccc	0x00020402
    4c2c:	02040200 	andeq	r0, r4, #0, 4
    4c30:	05052006 	streq	r2, [r5, #-6]
    4c34:	20061906 	andcs	r1, r6, r6, lsl #18
    4c38:	06262f06 	strteq	r2, [r6], -r6, lsl #30
    4c3c:	022f0620 	eoreq	r0, pc, #32, 12	; 0x2000000
    4c40:	01010003 	tsteq	r1, r3
    4c44:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4c48:	00000002 	andeq	r0, r0, r2
    4c4c:	18a00300 	stmiane	r0!, {r8, r9}
    4c50:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4c54:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    4c58:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    4c5c:	05240603 	streq	r0, [r4, #-1539]!	; 0xfffff9fd
    4c60:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    4c64:	05320603 	ldreq	r0, [r2, #-1539]!	; 0xfffff9fd
    4c68:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    4c6c:	05052006 	streq	r2, [r5, #-6]
    4c70:	2e120306 	cdpcs	3, 1, cr0, cr2, cr6, {0}
    4c74:	31060105 	tstcc	r6, r5, lsl #2
    4c78:	03060505 	movweq	r0, #25861	; 0x6505
    4c7c:	2c052072 	stccs	0, cr2, [r5], {114}	; 0x72
    4c80:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4c84:	01023c20 	tsteq	r2, r0, lsr #24
    4c88:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4c8c:	02050001 	andeq	r0, r5, #1
    4c90:	00000000 	andeq	r0, r0, r0
    4c94:	0117e203 	tsteq	r7, r3, lsl #4
    4c98:	03050106 	movweq	r0, #20742	; 0x5106
    4c9c:	17052f06 	strne	r2, [r5, -r6, lsl #30]
    4ca0:	03050106 	movweq	r0, #20742	; 0x5106
    4ca4:	0c052306 	stceq	3, cr2, [r5], {6}
    4ca8:	16050106 	strne	r0, [r5], -r6, lsl #2
    4cac:	20060520 	andcs	r0, r6, r0, lsr #10
    4cb0:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    4cb4:	01061805 	tsteq	r6, r5, lsl #16
    4cb8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4cbc:	31060104 	tstcc	r6, r4, lsl #2
    4cc0:	01040200 	mrseq	r0, R12_usr
    4cc4:	04020001 	streq	r0, [r2], #-1
    4cc8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4ccc:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4cd0:	001f0502 	andseq	r0, pc, r2, lsl #10
    4cd4:	03010402 	movweq	r0, #5122	; 0x1402
    4cd8:	05206bf0 	streq	r6, [r0, #-3056]!	; 0xfffff410
    4cdc:	04020005 	streq	r0, [r2], #-5
    4ce0:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4ce4:	01040200 	mrseq	r0, R12_usr
    4ce8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4cec:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4cf0:	06010402 	streq	r0, [r1], -r2, lsl #8
    4cf4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4cf8:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4cfc:	00050501 	andeq	r0, r5, r1, lsl #10
    4d00:	03010402 	movweq	r0, #5122	; 0x1402
    4d04:	0001148b 	andeq	r1, r1, fp, lsl #9
    4d08:	06010402 	streq	r0, [r1], -r2, lsl #8
    4d0c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4d10:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4d14:	6ca30301 	stcvs	3, cr0, [r3], #4
    4d18:	00040501 	andeq	r0, r4, r1, lsl #10
    4d1c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4d20:	01040200 	mrseq	r0, R12_usr
    4d24:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4d28:	00200601 	eoreq	r0, r0, r1, lsl #12
    4d2c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4d30:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4d34:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4d38:	00050501 	andeq	r0, r5, r1, lsl #10
    4d3c:	03010402 	movweq	r0, #5122	; 0x1402
    4d40:	000113d8 	ldrdeq	r1, [r1], -r8
    4d44:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4d48:	01040200 	mrseq	r0, R12_usr
    4d4c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4d50:	00130104 	andseq	r0, r3, r4, lsl #2
    4d54:	01010402 	tsteq	r1, r2, lsl #8
    4d58:	01040200 	mrseq	r0, R12_usr
    4d5c:	04020001 	streq	r0, [r2], #-1
    4d60:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    4d64:	02001f05 	andeq	r1, r0, #5, 30
    4d68:	ef030104 	svc	0x00030104
    4d6c:	0505206b 	streq	r2, [r5, #-107]	; 0xffffff95
    4d70:	01040200 	mrseq	r0, R12_usr
    4d74:	00040514 	andeq	r0, r4, r4, lsl r5
    4d78:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4d7c:	01040200 	mrseq	r0, R12_usr
    4d80:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4d84:	2f060104 	svccs	0x00060104
    4d88:	01040200 	mrseq	r0, R12_usr
    4d8c:	01040106 	tsteq	r4, r6, lsl #2
    4d90:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4d94:	8c030104 	stfhis	f0, [r3], {4}
    4d98:	02000114 	andeq	r0, r0, #20, 2
    4d9c:	2e060104 	adfcss	f0, f6, f4
    4da0:	1f050204 	svcne	0x00050204
    4da4:	01040200 	mrseq	r0, R12_usr
    4da8:	016ca203 	cmneq	ip, r3, lsl #4
    4dac:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4db0:	00140104 	andseq	r0, r4, r4, lsl #2
    4db4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4db8:	01040200 	mrseq	r0, R12_usr
    4dbc:	02002006 	andeq	r2, r0, #6
    4dc0:	2f060104 	svccs	0x00060104
    4dc4:	01040200 	mrseq	r0, R12_usr
    4dc8:	01040106 	tsteq	r4, r6, lsl #2
    4dcc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4dd0:	d9030104 	stmdble	r3, {r2, r8}
    4dd4:	02000113 	andeq	r0, r0, #-1073741820	; 0xc0000004
    4dd8:	002e0104 	eoreq	r0, lr, r4, lsl #2
    4ddc:	06010402 	streq	r0, [r1], -r2, lsl #8
    4de0:	04020001 	streq	r0, [r2], #-1
    4de4:	02001601 	andeq	r1, r0, #1048576	; 0x100000
    4de8:	00010104 	andeq	r0, r1, r4, lsl #2
    4dec:	01010402 	tsteq	r1, r2, lsl #8
    4df0:	01040200 	mrseq	r0, R12_usr
    4df4:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4df8:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4dfc:	6beb0301 	blvs	ffac5a08 <_estack+0xdfac47d0>
    4e00:	00050520 	andeq	r0, r5, r0, lsr #10
    4e04:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4e08:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4e0c:	00140104 	andseq	r0, r4, r4, lsl #2
    4e10:	06010402 	streq	r0, [r1], -r2, lsl #8
    4e14:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4e18:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4e1c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4e20:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4e24:	04020005 	streq	r0, [r2], #-5
    4e28:	14900301 	ldrne	r0, [r0], #769	; 0x301
    4e2c:	04020001 	streq	r0, [r2], #-1
    4e30:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4e34:	001f0502 	andseq	r0, pc, r2, lsl #10
    4e38:	03010402 	movweq	r0, #5122	; 0x1402
    4e3c:	05016c9e 	streq	r6, [r1, #-3230]	; 0xfffff362
    4e40:	04020004 	streq	r0, [r2], #-4
    4e44:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4e48:	00140104 	andseq	r0, r4, r4, lsl #2
    4e4c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4e50:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4e54:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4e58:	06010402 	streq	r0, [r1], -r2, lsl #8
    4e5c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4e60:	04020005 	streq	r0, [r2], #-5
    4e64:	13dd0301 	bicsne	r0, sp, #67108864	; 0x4000000
    4e68:	04020001 	streq	r0, [r2], #-1
    4e6c:	002e0602 	eoreq	r0, lr, r2, lsl #12
    4e70:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    4e74:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    4e78:	01060204 	tsteq	r6, r4, lsl #4
    4e7c:	02040200 	andeq	r0, r4, #0, 4
    4e80:	00050520 	andeq	r0, r5, r0, lsr #10
    4e84:	06020402 	streq	r0, [r2], -r2, lsl #8
    4e88:	000e0531 	andeq	r0, lr, r1, lsr r5
    4e8c:	06020402 	streq	r0, [r2], -r2, lsl #8
    4e90:	00080501 	andeq	r0, r8, r1, lsl #10
    4e94:	20020402 	andcs	r0, r2, r2, lsl #8
    4e98:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    4e9c:	30060204 	andcc	r0, r6, r4, lsl #4
    4ea0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4ea4:	05180204 	ldreq	r0, [r8, #-516]	; 0xfffffdfc
    4ea8:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    4eac:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4eb0:	04020003 	streq	r0, [r2], #-3
    4eb4:	05320602 	ldreq	r0, [r2, #-1538]!	; 0xfffff9fe
    4eb8:	0402000c 	streq	r0, [r2], #-12
    4ebc:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4ec0:	04020006 	streq	r0, [r2], #-6
    4ec4:	05052002 	streq	r2, [r5, #-2]
    4ec8:	2e120306 	cdpcs	3, 1, cr0, cr2, cr6, {0}
    4ecc:	31060105 	tstcc	r6, r5, lsl #2
    4ed0:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    4ed4:	03060104 	movweq	r0, #24836	; 0x6104
    4ed8:	02002061 	andeq	r2, r0, #97	; 0x61
    4edc:	00010104 	andeq	r0, r1, r4, lsl #2
    4ee0:	01010402 	tsteq	r1, r2, lsl #8
    4ee4:	01040200 	mrseq	r0, R12_usr
    4ee8:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4eec:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4ef0:	6be30301 	blvs	ff8c5afc <_estack+0xdf8c48c4>
    4ef4:	00050520 	andeq	r0, r5, r0, lsr #10
    4ef8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4efc:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4f00:	00140104 	andseq	r0, r4, r4, lsl #2
    4f04:	06010402 	streq	r0, [r1], -r2, lsl #8
    4f08:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4f0c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4f10:	06010402 	streq	r0, [r1], -r2, lsl #8
    4f14:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4f18:	04020007 	streq	r0, [r2], #-7
    4f1c:	14980301 	ldrne	r0, [r8], #769	; 0x301
    4f20:	04020001 	streq	r0, [r2], #-1
    4f24:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4f28:	001f0502 	andseq	r0, pc, r2, lsl #10
    4f2c:	03010402 	movweq	r0, #5122	; 0x1402
    4f30:	05016c96 	streq	r6, [r1, #-3222]	; 0xfffff36a
    4f34:	04020004 	streq	r0, [r2], #-4
    4f38:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4f3c:	00140104 	andseq	r0, r4, r4, lsl #2
    4f40:	06010402 	streq	r0, [r1], -r2, lsl #8
    4f44:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4f48:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4f4c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4f50:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4f54:	04020007 	streq	r0, [r2], #-7
    4f58:	13e50301 	mvnne	r0, #67108864	; 0x4000000
    4f5c:	04020001 	streq	r0, [r2], #-1
    4f60:	05053c01 	streq	r3, [r5, #-3073]	; 0xfffff3ff
    4f64:	01110306 	tsteq	r1, r6, lsl #6
    4f68:	01023c06 	tsteq	r2, r6, lsl #24
    4f6c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4f70:	02050001 	andeq	r0, r5, #1
    4f74:	00000000 	andeq	r0, r0, r0
    4f78:	0115c103 	tsteq	r5, r3, lsl #2
    4f7c:	03050106 	movweq	r0, #20742	; 0x5106
    4f80:	02003006 	andeq	r3, r0, #6
    4f84:	4a060104 	bmi	18539c <_Min_Heap_Size+0x184b9c>
    4f88:	02040200 	andeq	r0, r4, #0, 4
    4f8c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4f90:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    4f94:	004a0404 	subeq	r0, sl, r4, lsl #8
    4f98:	4a050402 	bmi	145fa8 <_Min_Heap_Size+0x1457a8>
    4f9c:	06040200 	streq	r0, [r4], -r0, lsl #4
    4fa0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4fa4:	31063c06 	tstcc	r6, r6, lsl #24
    4fa8:	04020001 	streq	r0, [r2], #-1
    4fac:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    4fb0:	003c0204 	eorseq	r0, ip, r4, lsl #4
    4fb4:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    4fb8:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    4fbc:	01060204 	tsteq	r6, r4, lsl #4
    4fc0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4fc4:	3f060104 	svccc	0x00060104
    4fc8:	01040200 	mrseq	r0, R12_usr
    4fcc:	04020001 	streq	r0, [r2], #-1
    4fd0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4fd4:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4fd8:	001f0502 	andseq	r0, pc, r2, lsl #10
    4fdc:	03010402 	movweq	r0, #5122	; 0x1402
    4fe0:	05206e90 	streq	r6, [r0, #-3728]!	; 0xfffff170
    4fe4:	04020005 	streq	r0, [r2], #-5
    4fe8:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4fec:	01040200 	mrseq	r0, R12_usr
    4ff0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4ff4:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4ff8:	06010402 	streq	r0, [r1], -r2, lsl #8
    4ffc:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    5000:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    5004:	00030501 	andeq	r0, r3, r1, lsl #10
    5008:	03010402 	movweq	r0, #5122	; 0x1402
    500c:	000111eb 	andeq	r1, r1, fp, ror #3
    5010:	06010402 	streq	r0, [r1], -r2, lsl #8
    5014:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    5018:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    501c:	6ec30301 	cdpvs	3, 12, cr0, cr3, cr1, {0}
    5020:	00040501 	andeq	r0, r4, r1, lsl #10
    5024:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5028:	01040200 	mrseq	r0, R12_usr
    502c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    5030:	00200601 	eoreq	r0, r0, r1, lsl #12
    5034:	06010402 	streq	r0, [r1], -r2, lsl #8
    5038:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    503c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    5040:	00030501 	andeq	r0, r3, r1, lsl #10
    5044:	03010402 	movweq	r0, #5122	; 0x1402
    5048:	000111b8 			; <UNDEFINED> instruction: 0x000111b8
    504c:	06020402 	streq	r0, [r2], -r2, lsl #8
    5050:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5054:	11051402 	tstne	r5, r2, lsl #8
    5058:	02040200 	andeq	r0, r4, #0, 4
    505c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    5060:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    5064:	04020003 	streq	r0, [r2], #-3
    5068:	00310602 	eorseq	r0, r1, r2, lsl #12
    506c:	01020402 	tsteq	r2, r2, lsl #8
    5070:	02040200 	andeq	r0, r4, #0, 4
    5074:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5078:	01051402 	tsteq	r5, r2, lsl #8
    507c:	03051306 	movweq	r1, #21254	; 0x5306
    5080:	02207303 	eoreq	r7, r0, #201326592	; 0xc000000
    5084:	01010006 	tsteq	r1, r6
    5088:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    508c:	00000002 	andeq	r0, r0, r2
    5090:	15dc0300 	ldrbne	r0, [ip, #768]	; 0x300
    5094:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5098:	00300603 	eorseq	r0, r0, r3, lsl #12
    509c:	06010402 	streq	r0, [r1], -r2, lsl #8
    50a0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    50a4:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    50a8:	004a0304 	subeq	r0, sl, r4, lsl #6
    50ac:	4a040402 	bmi	1060bc <_Min_Heap_Size+0x1058bc>
    50b0:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    50b4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    50b8:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    50bc:	063c0604 	ldrteq	r0, [ip], -r4, lsl #12
    50c0:	02000131 	andeq	r0, r0, #1073741836	; 0x4000000c
    50c4:	004a0204 	subeq	r0, sl, r4, lsl #4
    50c8:	3c020402 	cfstrscc	mvf0, [r2], {2}
    50cc:	02040200 	andeq	r0, r4, #0, 4
    50d0:	00110514 	andseq	r0, r1, r4, lsl r5
    50d4:	06020402 	streq	r0, [r2], -r2, lsl #8
    50d8:	00030501 	andeq	r0, r3, r1, lsl #10
    50dc:	06010402 	streq	r0, [r1], -r2, lsl #8
    50e0:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    50e4:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    50e8:	00010104 	andeq	r0, r1, r4, lsl #2
    50ec:	01010402 	tsteq	r1, r2, lsl #8
    50f0:	1f050204 	svcne	0x00050204
    50f4:	01040200 	mrseq	r0, R12_usr
    50f8:	206df503 	rsbcs	pc, sp, r3, lsl #10
    50fc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5100:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    5104:	04020004 	streq	r0, [r2], #-4
    5108:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    510c:	2e060104 	adfcss	f0, f6, f4
    5110:	01040200 	mrseq	r0, R12_usr
    5114:	02002f06 	andeq	r2, r0, #6, 30
    5118:	01060104 	tsteq	r6, r4, lsl #2
    511c:	03050104 	movweq	r0, #20740	; 0x5104
    5120:	01040200 	mrseq	r0, R12_usr
    5124:	01128603 	tsteq	r2, r3, lsl #12
    5128:	01040200 	mrseq	r0, R12_usr
    512c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    5130:	02001f05 	andeq	r1, r0, #5, 30
    5134:	a8030104 	stmdage	r3, {r2, r8}
    5138:	0405016e 	streq	r0, [r5], #-366	; 0xfffffe92
    513c:	01040200 	mrseq	r0, R12_usr
    5140:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    5144:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    5148:	20060104 	andcs	r0, r6, r4, lsl #2
    514c:	01040200 	mrseq	r0, R12_usr
    5150:	02002f06 	andeq	r2, r0, #6, 30
    5154:	01060104 	tsteq	r6, r4, lsl #2
    5158:	03050104 	movweq	r0, #20740	; 0x5104
    515c:	01040200 	mrseq	r0, R12_usr
    5160:	0111d303 	tsteq	r1, r3, lsl #6
    5164:	02040200 	andeq	r0, r4, #0, 4
    5168:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    516c:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    5170:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    5174:	00010602 	andeq	r0, r1, r2, lsl #12
    5178:	20020402 	andcs	r0, r2, r2, lsl #8
    517c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    5180:	2f060204 	svccs	0x00060204
    5184:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    5188:	01060204 	tsteq	r6, r4, lsl #4
    518c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    5190:	31060204 	tstcc	r6, r4, lsl #4
    5194:	02040200 	andeq	r0, r4, #0, 4
    5198:	04020001 	streq	r0, [r2], #-1
    519c:	02002e02 	andeq	r2, r0, #2, 28
    51a0:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    51a4:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    51a8:	20720303 	rsbscs	r0, r2, r3, lsl #6
    51ac:	01000702 	tsteq	r0, r2, lsl #14
    51b0:	00010501 	andeq	r0, r1, r1, lsl #10
    51b4:	00000205 	andeq	r0, r0, r5, lsl #4
    51b8:	f8030000 			; <UNDEFINED> instruction: 0xf8030000
    51bc:	01060115 	tsteq	r6, r5, lsl r1
    51c0:	30060305 	andcc	r0, r6, r5, lsl #6
    51c4:	01040200 	mrseq	r0, R12_usr
    51c8:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    51cc:	004a0204 	subeq	r0, sl, r4, lsl #4
    51d0:	4a030402 	bmi	c61e0 <_Min_Heap_Size+0xc59e0>
    51d4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    51d8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    51dc:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    51e0:	004a0604 	subeq	r0, sl, r4, lsl #12
    51e4:	3c060402 	cfstrscc	mvf0, [r6], {2}
    51e8:	00013106 	andeq	r3, r1, r6, lsl #2
    51ec:	4a020402 	bmi	861fc <_Min_Heap_Size+0x859fc>
    51f0:	02040200 	andeq	r0, r4, #0, 4
    51f4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    51f8:	11051402 	tstne	r5, r2, lsl #8
    51fc:	02040200 	andeq	r0, r4, #0, 4
    5200:	03050106 	movweq	r0, #20742	; 0x5106
    5204:	01040200 	mrseq	r0, R12_usr
    5208:	02003f06 	andeq	r3, r0, #6, 30
    520c:	00010104 	andeq	r0, r1, r4, lsl #2
    5210:	01010402 	tsteq	r1, r2, lsl #8
    5214:	01040200 	mrseq	r0, R12_usr
    5218:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    521c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    5220:	6dd90301 	ldclvs	3, cr0, [r9, #4]
    5224:	00050520 	andeq	r0, r5, r0, lsr #10
    5228:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    522c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    5230:	00140104 	andseq	r0, r4, r4, lsl #2
    5234:	06010402 	streq	r0, [r1], -r2, lsl #8
    5238:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    523c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    5240:	06010402 	streq	r0, [r1], -r2, lsl #8
    5244:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    5248:	04020003 	streq	r0, [r2], #-3
    524c:	12a20301 	adcne	r0, r2, #67108864	; 0x4000000
    5250:	04020001 	streq	r0, [r2], #-1
    5254:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    5258:	001f0502 	andseq	r0, pc, r2, lsl #10
    525c:	03010402 	movweq	r0, #5122	; 0x1402
    5260:	05016e8c 	streq	r6, [r1, #-3724]	; 0xfffff174
    5264:	04020004 	streq	r0, [r2], #-4
    5268:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    526c:	00140104 	andseq	r0, r4, r4, lsl #2
    5270:	06010402 	streq	r0, [r1], -r2, lsl #8
    5274:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    5278:	002f0601 	eoreq	r0, pc, r1, lsl #12
    527c:	06010402 	streq	r0, [r1], -r2, lsl #8
    5280:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    5284:	04020003 	streq	r0, [r2], #-3
    5288:	11ef0301 	mvnne	r0, r1, lsl #6
    528c:	04020001 	streq	r0, [r2], #-1
    5290:	002e0602 	eoreq	r0, lr, r2, lsl #12
    5294:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    5298:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    529c:	01060204 	tsteq	r6, r4, lsl #4
    52a0:	02040200 	andeq	r0, r4, #0, 4
    52a4:	00030520 	andeq	r0, r3, r0, lsr #10
    52a8:	06020402 	streq	r0, [r2], -r2, lsl #8
    52ac:	0016052f 	andseq	r0, r6, pc, lsr #10
    52b0:	06020402 	streq	r0, [r2], -r2, lsl #8
    52b4:	00030501 	andeq	r0, r3, r1, lsl #10
    52b8:	06020402 	streq	r0, [r2], -r2, lsl #8
    52bc:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    52c0:	02000102 	andeq	r0, r0, #-2147483648	; 0x80000000
    52c4:	002e0204 	eoreq	r0, lr, r4, lsl #4
    52c8:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    52cc:	13060105 	movwne	r0, #24837	; 0x6105
    52d0:	72030305 	andvc	r0, r3, #335544320	; 0x14000000
    52d4:	00070220 	andeq	r0, r7, r0, lsr #4
    52d8:	01050101 	tsteq	r5, r1, lsl #2
    52dc:	00020500 	andeq	r0, r2, r0, lsl #10
    52e0:	03000000 	movweq	r0, #0
    52e4:	05011694 	streq	r1, [r1, #-1684]	; 0xfffff96c
    52e8:	01151303 	tsteq	r5, r3, lsl #6
    52ec:	02040200 	andeq	r0, r4, #0, 4
    52f0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    52f4:	02003c02 	andeq	r3, r0, #512	; 0x200
    52f8:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    52fc:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    5300:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    5304:	04020003 	streq	r0, [r2], #-3
    5308:	053f0602 	ldreq	r0, [pc, #-1538]!	; 4d0e <_Min_Heap_Size+0x450e>
    530c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    5310:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    5314:	0402000a 	streq	r0, [r2], #-10
    5318:	03052002 	movweq	r2, #20482	; 0x5002
    531c:	02040200 	andeq	r0, r4, #0, 4
    5320:	0a052306 	beq	14df40 <_Min_Heap_Size+0x14d740>
    5324:	02040200 	andeq	r0, r4, #0, 4
    5328:	03050106 	movweq	r0, #20742	; 0x5106
    532c:	02040200 	andeq	r0, r4, #0, 4
    5330:	0a053106 	beq	151750 <_Min_Heap_Size+0x150f50>
    5334:	02040200 	andeq	r0, r4, #0, 4
    5338:	03050106 	movweq	r0, #20742	; 0x5106
    533c:	02040200 	andeq	r0, r4, #0, 4
    5340:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    5344:	05220204 	streq	r0, [r2, #-516]!	; 0xfffffdfc
    5348:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    534c:	00010602 	andeq	r0, r1, r2, lsl #12
    5350:	20020402 	andcs	r0, r2, r2, lsl #8
    5354:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    5358:	31060204 	tstcc	r6, r4, lsl #4
    535c:	02040200 	andeq	r0, r4, #0, 4
    5360:	04020001 	streq	r0, [r2], #-1
    5364:	02003c02 	andeq	r3, r0, #512	; 0x200
    5368:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    536c:	0402000a 	streq	r0, [r2], #-10
    5370:	00010602 	andeq	r0, r1, r2, lsl #12
    5374:	20020402 	andcs	r0, r2, r2, lsl #8
    5378:	6b030305 	blvs	c5f94 <_Min_Heap_Size+0xc5794>
    537c:	03010520 	movweq	r0, #5408	; 0x1520
    5380:	01022016 	tsteq	r2, r6, lsl r0
    5384:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5388:	02050001 	andeq	r0, r5, #1
    538c:	00000000 	andeq	r0, r0, r0
    5390:	0116b703 	tsteq	r6, r3, lsl #14
    5394:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    5398:	04020001 	streq	r0, [r2], #-1
    539c:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    53a0:	003c0204 	eorseq	r0, ip, r4, lsl #4
    53a4:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    53a8:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    53ac:	01060204 	tsteq	r6, r4, lsl #4
    53b0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    53b4:	3f060204 	svccc	0x00060204
    53b8:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    53bc:	01060204 	tsteq	r6, r4, lsl #4
    53c0:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    53c4:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    53c8:	04020003 	streq	r0, [r2], #-3
    53cc:	05230602 	streq	r0, [r3, #-1538]!	; 0xfffff9fe
    53d0:	0402000a 	streq	r0, [r2], #-10
    53d4:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    53d8:	04020003 	streq	r0, [r2], #-3
    53dc:	05310602 	ldreq	r0, [r1, #-1538]!	; 0xfffff9fe
    53e0:	0402000a 	streq	r0, [r2], #-10
    53e4:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    53e8:	04020003 	streq	r0, [r2], #-3
    53ec:	00310602 	eorseq	r0, r1, r2, lsl #12
    53f0:	22020402 	andcs	r0, r2, #33554432	; 0x2000000
    53f4:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    53f8:	01060204 	tsteq	r6, r4, lsl #4
    53fc:	02040200 	andeq	r0, r4, #0, 4
    5400:	00030520 	andeq	r0, r3, r0, lsr #10
    5404:	06020402 	streq	r0, [r2], -r2, lsl #8
    5408:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    540c:	02000102 	andeq	r0, r0, #-2147483648	; 0x80000000
    5410:	003c0204 	eorseq	r0, ip, r4, lsl #4
    5414:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    5418:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    541c:	01060204 	tsteq	r6, r4, lsl #4
    5420:	02040200 	andeq	r0, r4, #0, 4
    5424:	03030520 	movweq	r0, #13600	; 0x3520
    5428:	0105206b 	tsteq	r5, fp, rrx
    542c:	02201603 	eoreq	r1, r0, #3145728	; 0x300000
    5430:	01010001 	tsteq	r1, r1
    5434:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5438:	00000002 	andeq	r0, r0, r2
    543c:	16f00300 	ldrbtne	r0, [r0], r0, lsl #6
    5440:	13030501 	movwne	r0, #13569	; 0x3501
    5444:	06100513 			; <UNDEFINED> instruction: 0x06100513
    5448:	06030501 	streq	r0, [r3], -r1, lsl #10
    544c:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
    5450:	06030501 	streq	r0, [r3], -r1, lsl #10
    5454:	06010530 			; <UNDEFINED> instruction: 0x06010530
    5458:	01022013 	tsteq	r2, r3, lsl r0
    545c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5460:	02050001 	andeq	r0, r5, #1
    5464:	00000000 	andeq	r0, r0, r0
    5468:	0116ff03 	tsteq	r6, r3, lsl #30	; <UNPREDICTABLE>
    546c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    5470:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5474:	01022101 	tsteq	r2, r1, lsl #2
    5478:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    547c:	02050001 	andeq	r0, r5, #1
    5480:	00000000 	andeq	r0, r0, r0
    5484:	0119a403 	tsteq	r9, r3, lsl #8
    5488:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    548c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5490:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    5494:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5498:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    549c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    54a0:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    54a4:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    54a8:	052f0603 	streq	r0, [pc, #-1539]!	; 4ead <_Min_Heap_Size+0x46ad>
    54ac:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    54b0:	053e0603 	ldreq	r0, [lr, #-1539]!	; 0xfffff9fd
    54b4:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    54b8:	05052006 	streq	r2, [r5, #-6]
    54bc:	20062306 	andcs	r2, r6, r6, lsl #6
    54c0:	4e060305 	cdpmi	3, 0, cr0, cr6, cr5, {0}
    54c4:	01055a5b 	tsteq	r5, fp, asr sl
    54c8:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    54cc:	01010001 	tsteq	r1, r1
    54d0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    54d4:	00000002 	andeq	r0, r0, r2
    54d8:	0ac30300 	beq	ff0c60e0 <_estack+0xdf0c4ea8>
    54dc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    54e0:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    54e4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    54e8:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
    54ec:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    54f0:	19050106 	stmdbne	r5, {r1, r2, r8}
    54f4:	01040200 	mrseq	r0, R12_usr
    54f8:	220e0520 	andcs	r0, lr, #32, 10	; 0x8000000
    54fc:	0c030105 	stfeqs	f0, [r3], {5}
    5500:	06050520 	streq	r0, [r5], -r0, lsr #10
    5504:	05207803 	streq	r7, [r0, #-2051]!	; 0xfffff7fd
    5508:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    550c:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    5510:	2e01060d 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx13
    5514:	20240c05 	eorcs	r0, r4, r5, lsl #24
    5518:	76030e05 	strvc	r0, [r3], -r5, lsl #28
    551c:	01022020 	tsteq	r2, r0, lsr #32
    5520:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5524:	02050001 	andeq	r0, r5, #1
    5528:	00000000 	andeq	r0, r0, r0
    552c:	010db103 	tsteq	sp, r3, lsl #2
    5530:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    5534:	01060c05 	tsteq	r6, r5, lsl #24
    5538:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    553c:	05052a01 	streq	r2, [r5, #-2561]	; 0xfffff5ff
    5540:	08054206 	stmdaeq	r5, {r1, r2, r9, lr}
    5544:	19050106 	stmdbne	r5, {r1, r2, r8}
    5548:	01040200 	mrseq	r0, R12_usr
    554c:	220e0520 	andcs	r0, lr, #32, 10	; 0x8000000
    5550:	21030105 	tstcs	r3, r5, lsl #2
    5554:	06050520 	streq	r0, [r5], -r0, lsr #10
    5558:	052e6303 	streq	r6, [lr, #-771]!	; 0xfffffcfd
    555c:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    5560:	052f0605 	streq	r0, [pc, #-1541]!	; 4f63 <_Min_Heap_Size+0x4763>
    5564:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    5568:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    556c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5570:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    5574:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5578:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    557c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    5580:	1005200a 	andne	r2, r5, sl
    5584:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    5588:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
    558c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    5590:	73030609 	movwvc	r0, #13833	; 0x3609
    5594:	3c2e0120 	stfccs	f0, [lr], #-128	; 0xffffff80
    5598:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    559c:	02002001 	andeq	r2, r0, #1
    55a0:	00130104 	andseq	r0, r3, r4, lsl #2
    55a4:	01010402 	tsteq	r1, r2, lsl #8
    55a8:	01040200 	mrseq	r0, R12_usr
    55ac:	04020001 	streq	r0, [r2], #-1
    55b0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    55b4:	02001f05 	andeq	r1, r0, #5, 30
    55b8:	93030104 	movwls	r0, #12548	; 0x3104
    55bc:	05052076 	streq	r2, [r5, #-118]	; 0xffffff8a
    55c0:	01040200 	mrseq	r0, R12_usr
    55c4:	00040514 	andeq	r0, r4, r4, lsl r5
    55c8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    55cc:	01040200 	mrseq	r0, R12_usr
    55d0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    55d4:	2f060104 	svccs	0x00060104
    55d8:	01040200 	mrseq	r0, R12_usr
    55dc:	01040106 	tsteq	r4, r6, lsl #2
    55e0:	02000905 	andeq	r0, r0, #81920	; 0x14000
    55e4:	e8030104 	stmda	r3, {r2, r8}
    55e8:	02000109 	andeq	r0, r0, #1073741826	; 0x40000002
    55ec:	2e060104 	adfcss	f0, f6, f4
    55f0:	1f050204 	svcne	0x00050204
    55f4:	01040200 	mrseq	r0, R12_usr
    55f8:	0176c603 	cmneq	r6, r3, lsl #12
    55fc:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    5600:	00140104 	andseq	r0, r4, r4, lsl #2
    5604:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5608:	01040200 	mrseq	r0, R12_usr
    560c:	02002006 	andeq	r2, r0, #6
    5610:	2f060104 	svccs	0x00060104
    5614:	01040200 	mrseq	r0, R12_usr
    5618:	01040106 	tsteq	r4, r6, lsl #2
    561c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5620:	b5030104 	strlt	r0, [r3, #-260]	; 0xfffffefc
    5624:	02000109 	andeq	r0, r0, #1073741826	; 0x40000002
    5628:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    562c:	0110030c 	tsteq	r0, ip, lsl #6
    5630:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    5634:	205f030e 	subscs	r0, pc, lr, lsl #6
    5638:	00010220 	andeq	r0, r1, r0, lsr #4
    563c:	01050101 	tsteq	r5, r1, lsl #2
    5640:	00020500 	andeq	r0, r2, r0, lsl #10
    5644:	03000000 	movweq	r0, #0
    5648:	060119c7 	streq	r1, [r1], -r7, asr #19
    564c:	06030501 	streq	r0, [r3], -r1, lsl #10
    5650:	1505144b 	strne	r1, [r5, #-1099]	; 0xfffffbb5
    5654:	03050106 	movweq	r0, #20742	; 0x5106
    5658:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    565c:	03050106 	movweq	r0, #20742	; 0x5106
    5660:	14052206 	strne	r2, [r5], #-518	; 0xfffffdfa
    5664:	03050106 	movweq	r0, #20742	; 0x5106
    5668:	12052f06 	andne	r2, r5, #6, 30
    566c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    5670:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    5674:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5678:	05202023 	streq	r2, [r0, #-35]!	; 0xffffffdd
    567c:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    5680:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5684:	03052027 	movweq	r2, #20519	; 0x5027
    5688:	08053106 	stmdaeq	r5, {r1, r2, r8, ip, sp}
    568c:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    5690:	06030520 	streq	r0, [r3], -r0, lsr #10
    5694:	06080531 			; <UNDEFINED> instruction: 0x06080531
    5698:	20240501 	eorcs	r0, r4, r1, lsl #10
    569c:	23060305 	movwcs	r0, #25349	; 0x6305
    56a0:	06330513 			; <UNDEFINED> instruction: 0x06330513
    56a4:	20030501 	andcs	r0, r3, r1, lsl #10
    56a8:	013f062e 	teqeq	pc, lr, lsr #12
    56ac:	202e3c20 	eorcs	r3, lr, r0, lsr #24
    56b0:	06120514 			; <UNDEFINED> instruction: 0x06120514
    56b4:	20060501 	andcs	r0, r6, r1, lsl #10
    56b8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    56bc:	23060104 	movwcs	r0, #24836	; 0x6104
    56c0:	01040200 	mrseq	r0, R12_usr
    56c4:	04020001 	streq	r0, [r2], #-1
    56c8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    56cc:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    56d0:	001f0502 	andseq	r0, pc, r2, lsl #10
    56d4:	03010402 	movweq	r0, #5122	; 0x1402
    56d8:	052069f5 	streq	r6, [r0, #-2549]!	; 0xfffff60b
    56dc:	04020005 	streq	r0, [r2], #-5
    56e0:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    56e4:	01040200 	mrseq	r0, R12_usr
    56e8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    56ec:	002e0601 	eoreq	r0, lr, r1, lsl #12
    56f0:	06010402 	streq	r0, [r1], -r2, lsl #8
    56f4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    56f8:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    56fc:	00050501 	andeq	r0, r5, r1, lsl #10
    5700:	03010402 	movweq	r0, #5122	; 0x1402
    5704:	00011686 	andeq	r1, r1, r6, lsl #13
    5708:	06010402 	streq	r0, [r1], -r2, lsl #8
    570c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    5710:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    5714:	6aa80301 	bvs	fea06320 <_estack+0xdea050e8>
    5718:	00040501 	andeq	r0, r4, r1, lsl #10
    571c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5720:	01040200 	mrseq	r0, R12_usr
    5724:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    5728:	00200601 	eoreq	r0, r0, r1, lsl #12
    572c:	06010402 	streq	r0, [r1], -r2, lsl #8
    5730:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    5734:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    5738:	00050501 	andeq	r0, r5, r1, lsl #10
    573c:	03010402 	movweq	r0, #5122	; 0x1402
    5740:	000115d3 	ldrdeq	r1, [r1], -r3
    5744:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    5748:	01040200 	mrseq	r0, R12_usr
    574c:	03050106 	movweq	r0, #20742	; 0x5106
    5750:	01040200 	mrseq	r0, R12_usr
    5754:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    5758:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    575c:	00010104 	andeq	r0, r1, r4, lsl #2
    5760:	01010402 	tsteq	r1, r2, lsl #8
    5764:	1f050204 	svcne	0x00050204
    5768:	01040200 	mrseq	r0, R12_usr
    576c:	2069f103 	rsbcs	pc, r9, r3, lsl #2
    5770:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5774:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    5778:	04020004 	streq	r0, [r2], #-4
    577c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    5780:	2e060104 	adfcss	f0, f6, f4
    5784:	01040200 	mrseq	r0, R12_usr
    5788:	02002f06 	andeq	r2, r0, #6, 30
    578c:	01060104 	tsteq	r6, r4, lsl #2
    5790:	03050104 	movweq	r0, #20740	; 0x5104
    5794:	01040200 	mrseq	r0, R12_usr
    5798:	01168a03 	tsteq	r6, r3, lsl #20
    579c:	01040200 	mrseq	r0, R12_usr
    57a0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    57a4:	02001f05 	andeq	r1, r0, #5, 30
    57a8:	a4030104 	strge	r0, [r3], #-260	; 0xfffffefc
    57ac:	0405016a 	streq	r0, [r5], #-362	; 0xfffffe96
    57b0:	01040200 	mrseq	r0, R12_usr
    57b4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    57b8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    57bc:	20060104 	andcs	r0, r6, r4, lsl #2
    57c0:	01040200 	mrseq	r0, R12_usr
    57c4:	02002f06 	andeq	r2, r0, #6, 30
    57c8:	01060104 	tsteq	r6, r4, lsl #2
    57cc:	03050104 	movweq	r0, #20740	; 0x5104
    57d0:	01040200 	mrseq	r0, R12_usr
    57d4:	0115d703 	tsteq	r5, r3, lsl #14
    57d8:	01040200 	mrseq	r0, R12_usr
    57dc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    57e0:	00010601 	andeq	r0, r1, r1, lsl #12
    57e4:	16010402 	strne	r0, [r1], -r2, lsl #8
    57e8:	01040200 	mrseq	r0, R12_usr
    57ec:	04020001 	streq	r0, [r2], #-1
    57f0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    57f4:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    57f8:	001f0502 	andseq	r0, pc, r2, lsl #10
    57fc:	03010402 	movweq	r0, #5122	; 0x1402
    5800:	052069ed 	streq	r6, [r0, #-2541]!	; 0xfffff613
    5804:	04020005 	streq	r0, [r2], #-5
    5808:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    580c:	01040200 	mrseq	r0, R12_usr
    5810:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    5814:	002e0601 	eoreq	r0, lr, r1, lsl #12
    5818:	06010402 	streq	r0, [r1], -r2, lsl #8
    581c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    5820:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    5824:	00030501 	andeq	r0, r3, r1, lsl #10
    5828:	03010402 	movweq	r0, #5122	; 0x1402
    582c:	0001168e 	andeq	r1, r1, lr, lsl #13
    5830:	06010402 	streq	r0, [r1], -r2, lsl #8
    5834:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    5838:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    583c:	6aa00301 	bvs	fe806448 <_estack+0xde805210>
    5840:	00040501 	andeq	r0, r4, r1, lsl #10
    5844:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5848:	01040200 	mrseq	r0, R12_usr
    584c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    5850:	00200601 	eoreq	r0, r0, r1, lsl #12
    5854:	06010402 	streq	r0, [r1], -r2, lsl #8
    5858:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    585c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    5860:	00030501 	andeq	r0, r3, r1, lsl #10
    5864:	03010402 	movweq	r0, #5122	; 0x1402
    5868:	000115db 	ldrdeq	r1, [r1], -fp
    586c:	06020402 	streq	r0, [r2], -r2, lsl #8
    5870:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5874:	01051402 	tsteq	r5, r2, lsl #8
    5878:	02040200 	andeq	r0, r4, #0, 4
    587c:	02001306 	andeq	r1, r0, #402653184	; 0x18000000
    5880:	023c0204 	eorseq	r0, ip, #4, 4	; 0x40000000
    5884:	01010006 	tsteq	r1, r6
    5888:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    588c:	00000002 	andeq	r0, r0, r2
    5890:	0ba10300 	bleq	fe846498 <_estack+0xde845260>
    5894:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5898:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    589c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    58a0:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
    58a4:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    58a8:	19050106 	stmdbne	r5, {r1, r2, r8}
    58ac:	01040200 	mrseq	r0, R12_usr
    58b0:	220e0520 	andcs	r0, lr, #32, 10	; 0x8000000
    58b4:	0c030105 	stfeqs	f0, [r3], {5}
    58b8:	06050520 	streq	r0, [r5], -r0, lsr #10
    58bc:	05207803 	streq	r7, [r0, #-2051]!	; 0xfffff7fd
    58c0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    58c4:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    58c8:	2e01060d 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx13
    58cc:	20240c05 	eorcs	r0, r4, r5, lsl #24
    58d0:	76030e05 	strvc	r0, [r3], -r5, lsl #28
    58d4:	01022020 	tsteq	r2, r0, lsr #32
    58d8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    58dc:	02050001 	andeq	r0, r5, #1
    58e0:	00000000 	andeq	r0, r0, r0
    58e4:	010ded03 	tsteq	sp, r3, lsl #26
    58e8:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    58ec:	01060c05 	tsteq	r6, r5, lsl #24
    58f0:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    58f4:	05052a01 	streq	r2, [r5, #-2561]	; 0xfffff5ff
    58f8:	08054206 	stmdaeq	r5, {r1, r2, r9, lr}
    58fc:	19050106 	stmdbne	r5, {r1, r2, r8}
    5900:	01040200 	mrseq	r0, R12_usr
    5904:	220e0520 	andcs	r0, lr, #32, 10	; 0x8000000
    5908:	21030105 	tstcs	r3, r5, lsl #2
    590c:	06050520 	streq	r0, [r5], -r0, lsr #10
    5910:	052e6303 	streq	r6, [lr, #-771]!	; 0xfffffcfd
    5914:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    5918:	052f0605 	streq	r0, [pc, #-1541]!	; 531b <_Min_Heap_Size+0x4b1b>
    591c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    5920:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    5924:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5928:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    592c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5930:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    5934:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    5938:	1005200a 	andne	r2, r5, sl
    593c:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    5940:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
    5944:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    5948:	73030609 	movwvc	r0, #13833	; 0x3609
    594c:	3c2e0120 	stfccs	f0, [lr], #-128	; 0xffffff80
    5950:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5954:	02002001 	andeq	r2, r0, #1
    5958:	00130104 	andseq	r0, r3, r4, lsl #2
    595c:	01010402 	tsteq	r1, r2, lsl #8
    5960:	01040200 	mrseq	r0, R12_usr
    5964:	04020001 	streq	r0, [r2], #-1
    5968:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    596c:	02001f05 	andeq	r1, r0, #5, 30
    5970:	d7030104 	strle	r0, [r3, -r4, lsl #2]
    5974:	05052075 	streq	r2, [r5, #-117]	; 0xffffff8b
    5978:	01040200 	mrseq	r0, R12_usr
    597c:	00040514 	andeq	r0, r4, r4, lsl r5
    5980:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5984:	01040200 	mrseq	r0, R12_usr
    5988:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    598c:	2f060104 	svccs	0x00060104
    5990:	01040200 	mrseq	r0, R12_usr
    5994:	01040106 	tsteq	r4, r6, lsl #2
    5998:	02000905 	andeq	r0, r0, #81920	; 0x14000
    599c:	a4030104 	strge	r0, [r3], #-260	; 0xfffffefc
    59a0:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    59a4:	2e060104 	adfcss	f0, f6, f4
    59a8:	1f050204 	svcne	0x00050204
    59ac:	01040200 	mrseq	r0, R12_usr
    59b0:	01768a03 	cmneq	r6, r3, lsl #20
    59b4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    59b8:	00140104 	andseq	r0, r4, r4, lsl #2
    59bc:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    59c0:	01040200 	mrseq	r0, R12_usr
    59c4:	02002006 	andeq	r2, r0, #6
    59c8:	2f060104 	svccs	0x00060104
    59cc:	01040200 	mrseq	r0, R12_usr
    59d0:	01040106 	tsteq	r4, r6, lsl #2
    59d4:	02000905 	andeq	r0, r0, #81920	; 0x14000
    59d8:	f1030104 			; <UNDEFINED> instruction: 0xf1030104
    59dc:	02000109 	andeq	r0, r0, #1073741826	; 0x40000002
    59e0:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    59e4:	0110030c 	tsteq	r0, ip, lsl #6
    59e8:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    59ec:	205f030e 	subscs	r0, pc, lr, lsl #6
    59f0:	00010220 	andeq	r0, r1, r0, lsr #4
    59f4:	0ca70101 	stfeqs	f0, [r7], #4
    59f8:	00030000 	andeq	r0, r3, r0
    59fc:	00000241 	andeq	r0, r0, r1, asr #4
    5a00:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    5a04:	0101000d 	tsteq	r1, sp
    5a08:	00000101 	andeq	r0, r0, r1, lsl #2
    5a0c:	00000100 	andeq	r0, r0, r0, lsl #2
    5a10:	2f2e2e01 	svccs	0x002e2e01
    5a14:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    5a18:	2f737265 	svccs	0x00737265
    5a1c:	334d5453 	movtcc	r5, #54355	; 0xd453
    5a20:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    5a24:	41485f78 	hvcmi	34296	; 0x85f8
    5a28:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    5a2c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    5a30:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    5a34:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    5a38:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    5a3c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    5a40:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    5a44:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    5a48:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    5a4c:	5f6d7261 	svcpl	0x006d7261
    5a50:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    5a54:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    5a58:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    5a5c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    5a60:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    5a64:	30312d69 	eorscc	r2, r1, r9, ror #26
    5a68:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    5a6c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    5a70:	615c3031 	cmpvs	ip, r1, lsr r0
    5a74:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    5a78:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    5a7c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    5a80:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    5a84:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    5a88:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    5a8c:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    5a90:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    5a94:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    5a98:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    5a9c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    5aa0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    5aa4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    5aa8:	5f6d7261 	svcpl	0x006d7261
    5aac:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    5ab0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    5ab4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    5ab8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    5abc:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    5ac0:	30312d69 	eorscc	r2, r1, r9, ror #26
    5ac4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    5ac8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    5acc:	615c3031 	cmpvs	ip, r1, lsr r0
    5ad0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    5ad4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    5ad8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    5adc:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    5ae0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    5ae4:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    5ae8:	2f2e2e00 	svccs	0x002e2e00
    5aec:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    5af0:	2f737265 	svccs	0x00737265
    5af4:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    5af8:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    5afc:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    5b00:	2f54532f 	svccs	0x0054532f
    5b04:	334d5453 	movtcc	r5, #54355	; 0xd453
    5b08:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    5b0c:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    5b10:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    5b14:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    5b18:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    5b1c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    5b20:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    5b24:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    5b28:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    5b2c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 5b34 <_Min_Heap_Size+0x5334>
    5b30:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    5b34:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
    5b38:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    5b3c:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    5b40:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
    5b44:	73000063 	movwvc	r0, #99	; 0x63
    5b48:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    5b4c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    5b50:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    5b54:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
    5b58:	0100632e 	tsteq	r0, lr, lsr #6
    5b5c:	645f0000 	ldrbvs	r0, [pc], #-0	; 5b64 <_Min_Heap_Size+0x5364>
    5b60:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    5b64:	745f746c 	ldrbvc	r7, [pc], #-1132	; 5b6c <_Min_Heap_Size+0x536c>
    5b68:	73657079 	cmnvc	r5, #121	; 0x79
    5b6c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    5b70:	735f0000 	cmpvc	pc, #0
    5b74:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    5b78:	00682e74 	rsbeq	r2, r8, r4, ror lr
    5b7c:	73000003 	movwvc	r0, #3
    5b80:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    5b84:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    5b88:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    5b8c:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    5b90:	00040068 	andeq	r0, r4, r8, rrx
    5b94:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    5b98:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    5b9c:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    5ba0:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    5ba4:	74730000 	ldrbtvc	r0, [r3], #-0
    5ba8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    5bac:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    5bb0:	00040068 	andeq	r0, r4, r8, rrx
    5bb4:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    5bb8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    5bbc:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    5bc0:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 5bc8 <_Min_Heap_Size+0x53c8>
    5bc4:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    5bc8:	00000500 	andeq	r0, r0, r0, lsl #10
    5bcc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    5bd0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    5bd4:	61685f78 	smcvs	34296	; 0x85f8
    5bd8:	63725f6c 	cmnvs	r2, #108, 30	; 0x1b0
    5bdc:	78655f63 	stmdavc	r5!, {r0, r1, r5, r6, r8, r9, sl, fp, ip, lr}^
    5be0:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    5be4:	74730000 	ldrbtvc	r0, [r3], #-0
    5be8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    5bec:	5f787834 	svcpl	0x00787834
    5bf0:	5f6c6168 	svcpl	0x006c6168
    5bf4:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
    5bf8:	00050068 	andeq	r0, r5, r8, rrx
    5bfc:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    5c00:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    5c04:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    5c08:	675f6c61 	ldrbvs	r6, [pc, -r1, ror #24]
    5c0c:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    5c10:	00050068 	andeq	r0, r5, r8, rrx
    5c14:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    5c18:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    5c1c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    5c20:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
    5c24:	00000500 	andeq	r0, r0, r0, lsl #10
    5c28:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    5c2c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    5c30:	61685f78 	smcvs	34296	; 0x85f8
    5c34:	6f635f6c 	svcvs	0x00635f6c
    5c38:	682e666e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r9, sl, sp, lr}
    5c3c:	00000600 	andeq	r0, r0, r0, lsl #12
    5c40:	00010500 	andeq	r0, r1, r0, lsl #10
    5c44:	00000205 	andeq	r0, r0, r5, lsl #4
    5c48:	c8030000 	stmdagt	r3, {}	; <UNPREDICTABLE>
    5c4c:	03050101 	movweq	r0, #20737	; 0x5101
    5c50:	06010513 			; <UNDEFINED> instruction: 0x06010513
    5c54:	00020213 	andeq	r0, r2, r3, lsl r2
    5c58:	01050101 	tsteq	r5, r1, lsl #2
    5c5c:	00020500 	andeq	r0, r2, r0, lsl #10
    5c60:	03000000 	movweq	r0, #0
    5c64:	050101db 	streq	r0, [r1, #-475]	; 0xfffffe25
    5c68:	05151303 	ldreq	r1, [r5, #-771]	; 0xfffffcfd
    5c6c:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
    5c70:	03053801 	movweq	r3, #22529	; 0x5801
    5c74:	3c0a0306 	stccc	3, cr0, [sl], {6}
    5c78:	0619053e 			; <UNDEFINED> instruction: 0x0619053e
    5c7c:	20050501 	andcs	r0, r5, r1, lsl #10
    5c80:	02003f06 	andeq	r3, r0, #6, 30
    5c84:	2e060104 	adfcss	f0, f6, f4
    5c88:	02040200 	andeq	r0, r4, #0, 4
    5c8c:	053e063c 	ldreq	r0, [lr, #-1596]!	; 0xfffff9c4
    5c90:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    5c94:	09054a07 	stmdbeq	r5, {r0, r1, r2, r9, fp, lr}
    5c98:	01040200 	mrseq	r0, R12_usr
    5c9c:	003c052f 	eorseq	r0, ip, pc, lsr #10
    5ca0:	49010402 	stmdbmi	r1, {r1, sl}
    5ca4:	03060705 	movweq	r0, #26373	; 0x6705
    5ca8:	00012e0b 	andeq	r2, r1, fp, lsl #28
    5cac:	4a020402 	bmi	86cbc <_Min_Heap_Size+0x864bc>
    5cb0:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    5cb4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5cb8:	02005805 	andeq	r5, r0, #327680	; 0x50000
    5cbc:	004a0704 	subeq	r0, sl, r4, lsl #14
    5cc0:	15070402 	strne	r0, [r7, #-1026]	; 0xfffffbfe
    5cc4:	02001c05 	andeq	r1, r0, #1280	; 0x500
    5cc8:	01060704 	tsteq	r6, r4, lsl #14
    5ccc:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5cd0:	06200704 	strteq	r0, [r0], -r4, lsl #14
    5cd4:	06150531 			; <UNDEFINED> instruction: 0x06150531
    5cd8:	06090501 	streq	r0, [r9], -r1, lsl #10
    5cdc:	010e053f 	tsteq	lr, pc, lsr r5
    5ce0:	01060f05 	tsteq	r6, r5, lsl #30
    5ce4:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    5ce8:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
    5cec:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5cf0:	0d052e1d 	stceq	14, cr2, [r5, #-116]	; 0xffffff8c
    5cf4:	30140520 	andscc	r0, r4, r0, lsr #10
    5cf8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    5cfc:	61030104 	tstvs	r3, r4, lsl #2
    5d00:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5d04:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    5d08:	03040200 	movweq	r0, #16896	; 0x4200
    5d0c:	5b440541 	blpl	1107218 <_Min_Heap_Size+0x1106a18>
    5d10:	052e3c05 	streq	r3, [lr, #-3077]!	; 0xfffff3fb
    5d14:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    5d18:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5d1c:	4e052e09 	cdpmi	14, 0, cr2, cr5, cr9, {0}
    5d20:	01040200 	mrseq	r0, R12_usr
    5d24:	0039053c 	eorseq	r0, r9, ip, lsr r5
    5d28:	20010402 	andcs	r0, r1, r2, lsl #8
    5d2c:	03060305 	movweq	r0, #25349	; 0x6305
    5d30:	19053c2a 	stmdbne	r5, {r1, r3, r5, sl, fp, ip, sp}
    5d34:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5d38:	3d3f0620 	ldccc	6, cr0, [pc, #-128]!	; 5cc0 <_Min_Heap_Size+0x54c0>
    5d3c:	0609053f 			; <UNDEFINED> instruction: 0x0609053f
    5d40:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    5d44:	02000905 	andeq	r0, r0, #81920	; 0x14000
    5d48:	053d0104 	ldreq	r0, [sp, #-260]!	; 0xfffffefc
    5d4c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5d50:	07054901 	streq	r4, [r5, -r1, lsl #18]
    5d54:	2e120306 	cdpcs	3, 1, cr0, cr2, cr6, {0}
    5d58:	01061c05 	tsteq	r6, r5, lsl #24
    5d5c:	06200905 	strteq	r0, [r0], -r5, lsl #18
    5d60:	15053f31 	strne	r3, [r5, #-3889]	; 0xfffff0cf
    5d64:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5d68:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    5d6c:	060f0501 	streq	r0, [pc], -r1, lsl #10
    5d70:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    5d74:	3e060b05 	vmlacc.f64	d0, d6, d5
    5d78:	01060f05 	tsteq	r6, r5, lsl #30
    5d7c:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    5d80:	1405200d 	strne	r2, [r5], #-13
    5d84:	00070530 	andeq	r0, r7, r0, lsr r5
    5d88:	06010402 	streq	r0, [r1], -r2, lsl #8
    5d8c:	2e7fb803 	cdpcs	8, 7, cr11, cr15, cr3, {0}
    5d90:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5d94:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5d98:	09055804 	stmdbeq	r5, {r2, fp, ip, lr}
    5d9c:	05581403 	ldrbeq	r1, [r8, #-1027]	; 0xfffffbfd
    5da0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5da4:	053f0609 	ldreq	r0, [pc, #-1545]!	; 57a3 <_Min_Heap_Size+0x4fa3>
    5da8:	0f05010e 	svceq	0x0005010e
    5dac:	0e050106 	adfeqs	f0, f5, f6
    5db0:	060b052e 	streq	r0, [fp], -lr, lsr #10
    5db4:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    5db8:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    5dbc:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
    5dc0:	05053014 	streq	r3, [r5, #-20]	; 0xffffffec
    5dc4:	01040200 	mrseq	r0, R12_usr
    5dc8:	002e0a03 	eoreq	r0, lr, r3, lsl #20
    5dcc:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    5dd0:	056a4405 	strbeq	r4, [sl, #-1029]!	; 0xfffffbfb
    5dd4:	07052e3c 	smladxeq	r5, ip, lr, r2
    5dd8:	0b053f06 	bleq	1559f8 <_Min_Heap_Size+0x1551f8>
    5ddc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5de0:	004e052e 	subeq	r0, lr, lr, lsr #10
    5de4:	3c010402 	cfstrscc	mvf0, [r1], {2}
    5de8:	02003905 	andeq	r3, r0, #81920	; 0x14000
    5dec:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    5df0:	05440609 	strbeq	r0, [r4, #-1545]	; 0xfffff9f7
    5df4:	822e0303 	eorhi	r0, lr, #201326592	; 0xc000000
    5df8:	01061905 	tsteq	r6, r5, lsl #18
    5dfc:	06200505 	strteq	r0, [r0], -r5, lsl #10
    5e00:	1a053f3f 	bne	155b04 <_Min_Heap_Size+0x155304>
    5e04:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5e08:	4d230620 	stcmi	6, cr0, [r3, #-128]!	; 0xffffff80
    5e0c:	01061305 	tsteq	r6, r5, lsl #6
    5e10:	3f060705 	svccc	0x00060705
    5e14:	05010c05 	streq	r0, [r1, #-3077]	; 0xfffff3fb
    5e18:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    5e1c:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    5e20:	0d053e06 	stceq	14, cr3, [r5, #-24]	; 0xffffffe8
    5e24:	1b050106 	blne	146244 <_Min_Heap_Size+0x145a44>
    5e28:	200b052e 	andcs	r0, fp, lr, lsr #10
    5e2c:	05301205 	ldreq	r1, [r0, #-517]!	; 0xfffffdfb
    5e30:	57030609 	strpl	r0, [r3, -r9, lsl #12]
    5e34:	053f952e 	ldreq	r9, [pc, #-1326]!	; 590e <_Min_Heap_Size+0x510e>
    5e38:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5e3c:	053f0609 	ldreq	r0, [pc, #-1545]!	; 583b <_Min_Heap_Size+0x503b>
    5e40:	0f05010e 	svceq	0x0005010e
    5e44:	0e050106 	adfeqs	f0, f5, f6
    5e48:	060b052e 	streq	r0, [fp], -lr, lsr #10
    5e4c:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    5e50:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    5e54:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
    5e58:	05053014 	streq	r3, [r5, #-20]	; 0xffffffec
    5e5c:	01040200 	mrseq	r0, R12_usr
    5e60:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    5e64:	17030607 	strne	r0, [r3, -r7, lsl #12]
    5e68:	13054d66 	movwne	r4, #23910	; 0x5d66
    5e6c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5e70:	0c053f06 	stceq	15, cr3, [r5], {6}
    5e74:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5e78:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    5e7c:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    5e80:	01060d05 	tsteq	r6, r5, lsl #26
    5e84:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    5e88:	1205200b 	andne	r2, r5, #11
    5e8c:	06030530 			; <UNDEFINED> instruction: 0x06030530
    5e90:	06190588 	ldreq	r0, [r9], -r8, lsl #11
    5e94:	20050501 	andcs	r0, r5, r1, lsl #10
    5e98:	00153e06 	andseq	r3, r5, r6, lsl #28
    5e9c:	06010402 	streq	r0, [r1], -r2, lsl #8
    5ea0:	0532063c 	ldreq	r0, [r2, #-1596]!	; 0xfffff9c4
    5ea4:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5ea8:	3e062e07 	cdpcc	14, 0, cr2, cr6, cr7, {0}
    5eac:	4a582e01 	bmi	16116b8 <_Min_Heap_Size+0x1610eb8>
    5eb0:	15051320 	strne	r1, [r5, #-800]	; 0xfffffce0
    5eb4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5eb8:	08052306 	stmdaeq	r5, {r1, r2, r8, r9, sp}
    5ebc:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5ec0:	0605052e 	streq	r0, [r5], -lr, lsr #10
    5ec4:	013c1203 	teqeq	ip, r3, lsl #4
    5ec8:	02040200 	andeq	r0, r4, #0, 4
    5ecc:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5ed0:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    5ed4:	00580504 	subseq	r0, r8, r4, lsl #10
    5ed8:	4a070402 	bmi	1c6ee8 <_Min_Heap_Size+0x1c66e8>
    5edc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5ee0:	001a0514 	andseq	r0, sl, r4, lsl r5
    5ee4:	06070402 	streq	r0, [r7], -r2, lsl #8
    5ee8:	00070501 	andeq	r0, r7, r1, lsl #10
    5eec:	20070402 	andcs	r0, r7, r2, lsl #8
    5ef0:	13053106 	movwne	r3, #20742	; 0x5106
    5ef4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5ef8:	0c053f06 	stceq	15, cr3, [r5], {6}
    5efc:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5f00:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    5f04:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    5f08:	01060d05 	tsteq	r6, r5, lsl #26
    5f0c:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    5f10:	1205200b 	andne	r2, r5, #11
    5f14:	0005054c 	andeq	r0, r5, ip, asr #10
    5f18:	03020402 	movweq	r0, #9218	; 0x2402
    5f1c:	16052e58 			; <UNDEFINED> instruction: 0x16052e58
    5f20:	06070563 	streq	r0, [r7], -r3, ror #10
    5f24:	5b2e1003 	blpl	b89f38 <_Min_Heap_Size+0xb89738>
    5f28:	01061305 	tsteq	r6, r5, lsl #6
    5f2c:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    5f30:	05010c05 	streq	r0, [r1, #-3077]	; 0xfffff3fb
    5f34:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    5f38:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    5f3c:	0d053e06 	stceq	14, cr3, [r5, #-24]	; 0xffffffe8
    5f40:	1b050106 	blne	146360 <_Min_Heap_Size+0x145b60>
    5f44:	200b052e 	andcs	r0, fp, lr, lsr #10
    5f48:	05301205 	ldreq	r1, [r0, #-517]!	; 0xfffffdfb
    5f4c:	04020005 	streq	r0, [r2], #-5
    5f50:	00340601 	eorseq	r0, r4, r1, lsl #12
    5f54:	66040402 	strvs	r0, [r4], -r2, lsl #8
    5f58:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5f5c:	03070558 	movweq	r0, #30040	; 0x7558
    5f60:	13055813 	movwne	r5, #22547	; 0x5813
    5f64:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5f68:	0c053f06 	stceq	15, cr3, [r5], {6}
    5f6c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5f70:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    5f74:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    5f78:	01060d05 	tsteq	r6, r5, lsl #26
    5f7c:	052e1b05 	streq	r1, [lr, #-2821]!	; 0xfffff4fb
    5f80:	1205200b 	andne	r2, r5, #11
    5f84:	0605054c 	streq	r0, [r5], -ip, asr #10
    5f88:	06070534 			; <UNDEFINED> instruction: 0x06070534
    5f8c:	03052e01 	movweq	r2, #24065	; 0x5e01
    5f90:	053d1906 	ldreq	r1, [sp, #-2310]!	; 0xfffff6fa
    5f94:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    5f98:	05052006 	streq	r2, [r5, #-6]
    5f9c:	08053f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
    5fa0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5fa4:	053e064a 	ldreq	r0, [lr, #-1610]!	; 0xfffff9b6
    5fa8:	06010609 	streq	r0, [r1], -r9, lsl #12
    5fac:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    5fb0:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    5fb4:	00594b3d 	subseq	r4, r9, sp, lsr fp
    5fb8:	06010402 	streq	r0, [r1], -r2, lsl #8
    5fbc:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5fc0:	02002e02 	andeq	r2, r0, #2, 28
    5fc4:	062e0304 	strteq	r0, [lr], -r4, lsl #6
    5fc8:	053f4d2f 	ldreq	r4, [pc, #-3375]!	; 52a1 <_Min_Heap_Size+0x4aa1>
    5fcc:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5fd0:	053f0609 	ldreq	r0, [pc, #-1545]!	; 59cf <_Min_Heap_Size+0x51cf>
    5fd4:	0f05010e 	svceq	0x0005010e
    5fd8:	0e050106 	adfeqs	f0, f5, f6
    5fdc:	060b052e 	streq	r0, [fp], -lr, lsr #10
    5fe0:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    5fe4:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    5fe8:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
    5fec:	07053014 	smladeq	r5, r4, r0, r3
    5ff0:	2e610306 	cdpcs	3, 6, cr0, cr1, cr6, {0}
    5ff4:	03056606 	movweq	r6, #22022	; 0x5606
    5ff8:	01040200 	mrseq	r0, R12_usr
    5ffc:	00090517 	andeq	r0, r9, r7, lsl r5
    6000:	03020402 	movweq	r0, #9218	; 0x2402
    6004:	02006609 	andeq	r6, r0, #9437184	; 0x900000
    6008:	00670104 	rsbeq	r0, r7, r4, lsl #2
    600c:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    6010:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6014:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    6018:	03066701 	movweq	r6, #26369	; 0x6701
    601c:	3ff86612 	svccc	0x00f86612
    6020:	01061505 	tsteq	r6, r5, lsl #10
    6024:	3f060905 	svccc	0x00060905
    6028:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
    602c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    6030:	0b052e0e 	bleq	151870 <_Min_Heap_Size+0x151070>
    6034:	0f053e06 	svceq	0x00053e06
    6038:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    603c:	200d052e 	andcs	r0, sp, lr, lsr #10
    6040:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    6044:	2e37030a 	cdpcs	3, 3, cr0, cr7, cr10, {0}
    6048:	03060905 	movweq	r0, #26885	; 0x6905
    604c:	053f2e50 	ldreq	r2, [pc, #-3664]!	; 5204 <_Min_Heap_Size+0x4a04>
    6050:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    6054:	053f0609 	ldreq	r0, [pc, #-1545]!	; 5a53 <_Min_Heap_Size+0x5253>
    6058:	0f05010e 	svceq	0x0005010e
    605c:	0e050106 	adfeqs	f0, f5, f6
    6060:	060b052e 	streq	r0, [fp], -lr, lsr #10
    6064:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    6068:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    606c:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
    6070:	0a053014 	beq	1520c8 <_Min_Heap_Size+0x1518c8>
    6074:	052e2603 	streq	r2, [lr, #-1539]!	; 0xfffff9fd
    6078:	62030607 	andvs	r0, r3, #7340032	; 0x700000
    607c:	0609052e 	streq	r0, [r9], -lr, lsr #10
    6080:	05350601 	ldreq	r0, [r5, #-1537]!	; 0xfffff9ff
    6084:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6088:	0a030609 	beq	c78b4 <_Min_Heap_Size+0xc70b4>
    608c:	060e052e 	streq	r0, [lr], -lr, lsr #10
    6090:	2e500513 	mrccs	5, 2, r0, cr0, cr3, {0}
    6094:	051f4005 	ldreq	r4, [pc, #-5]	; 6097 <_Min_Heap_Size+0x5897>
    6098:	5605300e 	strpl	r3, [r5], -lr
    609c:	1f5c052e 	svcne	0x005c052e
    60a0:	05304f05 	ldreq	r4, [r0, #-3845]!	; 0xfffff0fb
    60a4:	0e051f6f 	cdpeq	15, 0, cr1, cr5, cr15, {3}
    60a8:	2e510568 	cdpcs	5, 5, cr0, cr1, cr8, {3}
    60ac:	05205705 	streq	r5, [r0, #-1797]!	; 0xfffff8fb
    60b0:	6f05205e 	svcvs	0x0005205e
    60b4:	3e0e051f 	mcrcc	5, 0, r0, cr14, cr15, {0}
    60b8:	052e4f05 	streq	r4, [lr, #-3845]!	; 0xfffff0fb
    60bc:	0a051f7e 	beq	14debc <_Min_Heap_Size+0x14d6bc>
    60c0:	053c0903 	ldreq	r0, [ip, #-2307]!	; 0xfffff6fd
    60c4:	7daf030c 	stcvc	3, cr0, [pc, #48]!	; 60fc <_Min_Heap_Size+0x58fc>
    60c8:	0301052e 	movweq	r0, #5422	; 0x152e
    60cc:	052002d2 	streq	r0, [r0, #-722]!	; 0xfffffd2e
    60d0:	7dbe0310 	ldcvc	3, cr0, [lr, #64]!	; 0x40
    60d4:	2e350320 	cdpcs	3, 3, cr0, cr5, cr0, {1}
    60d8:	8c030a05 			; <UNDEFINED> instruction: 0x8c030a05
    60dc:	01052e02 	tsteq	r5, r2, lsl #28
    60e0:	03100521 	tsteq	r0, #138412032	; 0x8400000
    60e4:	12052e63 	andne	r2, r5, #1584	; 0x630
    60e8:	f22e1703 	vabd.s32	d1, d14, d3
    60ec:	01000202 	tsteq	r0, r2, lsl #4
    60f0:	00010501 	andeq	r0, r1, r1, lsl #10
    60f4:	00000205 	andeq	r0, r0, r5, lsl #4
    60f8:	87030000 	strhi	r0, [r3, -r0]
    60fc:	01060106 	tsteq	r6, r6, lsl #2
    6100:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
    6104:	02002f14 	andeq	r2, r0, #20, 30	; 0x50
    6108:	20060104 	andcs	r0, r6, r4, lsl #2
    610c:	02040200 	andeq	r0, r4, #0, 4
    6110:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6114:	02003c03 	andeq	r3, r0, #768	; 0x300
    6118:	063c0404 	ldrteq	r0, [ip], -r4, lsl #8
    611c:	0605053e 			; <UNDEFINED> instruction: 0x0605053e
    6120:	00300601 	eorseq	r0, r0, r1, lsl #12
    6124:	06010402 	streq	r0, [r1], -r2, lsl #8
    6128:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    612c:	02003c02 	andeq	r3, r0, #512	; 0x200
    6130:	063c0304 	ldrteq	r0, [ip], -r4, lsl #6
    6134:	062e013f 			; <UNDEFINED> instruction: 0x062e013f
    6138:	4a4a0620 	bmi	12879c0 <_Min_Heap_Size+0x12871c0>
    613c:	19051520 	stmdbne	r5, {r5, r8, sl, ip}
    6140:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6144:	1a053d06 	bne	155564 <_Min_Heap_Size+0x154d64>
    6148:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    614c:	1b052f06 	blne	151d6c <_Min_Heap_Size+0x15156c>
    6150:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6154:	1a052f06 	bne	151d74 <_Min_Heap_Size+0x151574>
    6158:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    615c:	1f052106 	svcne	0x00052106
    6160:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6164:	064d2106 	strbeq	r2, [sp], -r6, lsl #2
    6168:	0301054a 	movweq	r0, #5450	; 0x154a
    616c:	03052e20 	movweq	r2, #24096	; 0x5e20
    6170:	01040200 	mrseq	r0, R12_usr
    6174:	002e4d03 	eoreq	r4, lr, r3, lsl #26
    6178:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    617c:	01040200 	mrseq	r0, R12_usr
    6180:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6184:	02002e01 	andeq	r2, r0, #1, 28
    6188:	05210504 	streq	r0, [r1, #-1284]!	; 0xfffffafc
    618c:	04020005 	streq	r0, [r2], #-5
    6190:	03066a04 	movweq	r6, #27140	; 0x6a04
    6194:	02006618 	andeq	r6, r0, #24, 12	; 0x1800000
    6198:	20060104 	andcs	r0, r6, r4, lsl #2
    619c:	02040200 	andeq	r0, r4, #0, 4
    61a0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    61a4:	3f063c03 	svccc	0x00063c03
    61a8:	20062e01 	andcs	r2, r6, r1, lsl #28
    61ac:	204a4a06 	subcs	r4, sl, r6, lsl #20
    61b0:	06190515 			; <UNDEFINED> instruction: 0x06190515
    61b4:	06050501 	streq	r0, [r5], -r1, lsl #10
    61b8:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    61bc:	06050501 	streq	r0, [r5], -r1, lsl #10
    61c0:	061b052f 	ldreq	r0, [fp], -pc, lsr #10
    61c4:	06050501 	streq	r0, [r5], -r1, lsl #10
    61c8:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    61cc:	06050501 	streq	r0, [r5], -r1, lsl #10
    61d0:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    61d4:	06050501 	streq	r0, [r5], -r1, lsl #10
    61d8:	58064d21 	stmdapl	r6, {r0, r5, r8, sl, fp, lr}
    61dc:	05360105 	ldreq	r0, [r6, #-261]!	; 0xfffffefb
    61e0:	04020005 	streq	r0, [r2], #-5
    61e4:	206a0304 	rsbcs	r0, sl, r4, lsl #6
    61e8:	01000e02 	tsteq	r0, r2, lsl #28
    61ec:	00010501 	andeq	r0, r1, r1, lsl #10
    61f0:	00000205 	andeq	r0, r0, r5, lsl #4
    61f4:	c9030000 	stmdbgt	r3, {}	; <UNPREDICTABLE>
    61f8:	03050106 	movweq	r0, #20742	; 0x5106
    61fc:	06260513 			; <UNDEFINED> instruction: 0x06260513
    6200:	3d010501 	cfstr32cc	mvfx0, [r1, #-4]
    6204:	01000302 	tsteq	r0, r2, lsl #6
    6208:	00010501 	andeq	r0, r1, r1, lsl #10
    620c:	00000205 	andeq	r0, r0, r5, lsl #4
    6210:	d2030000 	andle	r0, r3, #0
    6214:	03050106 	movweq	r0, #20742	; 0x5106
    6218:	06260513 			; <UNDEFINED> instruction: 0x06260513
    621c:	3d010501 	cfstr32cc	mvfx0, [r1, #-4]
    6220:	01000302 	tsteq	r0, r2, lsl #6
    6224:	00010501 	andeq	r0, r1, r1, lsl #10
    6228:	00000205 	andeq	r0, r0, r5, lsl #4
    622c:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    6230:	03050106 	movweq	r0, #20742	; 0x5106
    6234:	05151321 	ldreq	r1, [r5, #-801]	; 0xfffffcdf
    6238:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    623c:	03052e15 	movweq	r2, #24085	; 0x5e15
    6240:	0607052e 	streq	r0, [r7], -lr, lsr #10
    6244:	054a1003 	strbeq	r1, [sl, #-3]
    6248:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    624c:	07052e0c 	streq	r2, [r5, -ip, lsl #28]
    6250:	0a052f06 	beq	151e70 <_Min_Heap_Size+0x151670>
    6254:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6258:	053f0620 	ldreq	r0, [pc, #-1568]!	; 5c40 <_Min_Heap_Size+0x5440>
    625c:	05010648 	streq	r0, [r1, #-1608]	; 0xfffff9b8
    6260:	35052e38 	strcc	r2, [r5, #-3640]	; 0xfffff1c8
    6264:	0182052e 	orreq	r0, r2, lr, lsr #10
    6268:	07056608 	streq	r6, [r5, -r8, lsl #12]
    626c:	15057b06 	strne	r7, [r5, #-2822]	; 0xfffff4fa
    6270:	33050106 	movwcc	r0, #20742	; 0x5106
    6274:	2e4c052e 	cdpcs	5, 4, cr0, cr12, cr14, {1}
    6278:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    627c:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    6280:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6284:	052f0607 	streq	r0, [pc, #-1543]!	; 5c85 <_Min_Heap_Size+0x5485>
    6288:	48051b09 	stmdami	r5, {r0, r3, r8, r9, fp, ip}
    628c:	38050106 	stmdacc	r5, {r1, r2, r8}
    6290:	2e35052e 	cdpcs	5, 3, cr0, cr5, cr14, {1}
    6294:	08018205 	stmdaeq	r1, {r0, r2, r9, pc}
    6298:	14057466 	strne	r7, [r5], #-1126	; 0xfffffb9a
    629c:	05207003 	streq	r7, [r0, #-3]!
    62a0:	2e770303 	cdpcs	3, 7, cr0, cr7, cr3, {0}
    62a4:	20260306 	eorcs	r0, r6, r6, lsl #6
    62a8:	13060105 	movwne	r0, #24837	; 0x6105
    62ac:	01000802 	tsteq	r0, r2, lsl #16
    62b0:	00010501 	andeq	r0, r1, r1, lsl #10
    62b4:	00000205 	andeq	r0, r0, r5, lsl #4
    62b8:	cf030000 	svcgt	0x00030000
    62bc:	03050104 	movweq	r0, #20740	; 0x5104
    62c0:	05051513 	streq	r1, [r5, #-1299]	; 0xfffffaed
    62c4:	01050106 	tsteq	r5, r6, lsl #2
    62c8:	06030538 			; <UNDEFINED> instruction: 0x06030538
    62cc:	4b3c0a03 	blmi	f08ae0 <_Min_Heap_Size+0xf082e0>
    62d0:	06110535 			; <UNDEFINED> instruction: 0x06110535
    62d4:	4a050501 	bmi	1476e0 <_Min_Heap_Size+0x146ee0>
    62d8:	05403106 	strbeq	r3, [r0, #-262]	; 0xfffffefa
    62dc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    62e0:	03053c07 	movweq	r3, #23559	; 0x5c07
    62e4:	19054306 	stmdbne	r5, {r1, r2, r8, r9, lr}
    62e8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    62ec:	05400620 	strbeq	r0, [r0, #-1568]	; 0xfffff9e0
    62f0:	06010607 	streq	r0, [r1], -r7, lsl #12
    62f4:	5b05053e 	blpl	1477f4 <_Min_Heap_Size+0x146ff4>
    62f8:	01061b05 	tsteq	r6, r5, lsl #22
    62fc:	06200705 	strteq	r0, [r0], -r5, lsl #14
    6300:	5b05053e 	blpl	147800 <_Min_Heap_Size+0x147000>
    6304:	01040200 	mrseq	r0, R12_usr
    6308:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    630c:	002e0204 	eoreq	r0, lr, r4, lsl #4
    6310:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6314:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6318:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    631c:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    6320:	002e0604 	eoreq	r0, lr, r4, lsl #12
    6324:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
    6328:	08040200 	stmdaeq	r4, {r9}
    632c:	052f062e 	streq	r0, [pc, #-1582]!	; 5d06 <_Min_Heap_Size+0x5506>
    6330:	19057803 	stmdbne	r5, {r0, r1, fp, ip, sp, lr}
    6334:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6338:	3f3e0620 	svccc	0x003e0620
    633c:	01061905 	tsteq	r6, r5, lsl #18
    6340:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    6344:	0903060a 	stmdbeq	r3, {r1, r3, r9, sl}
    6348:	064c052e 	strbeq	r0, [ip], -lr, lsr #10
    634c:	200c0501 	andcs	r0, ip, r1, lsl #10
    6350:	03060705 	movweq	r0, #26373	; 0x6705
    6354:	0a052e0d 	beq	151b90 <_Min_Heap_Size+0x151390>
    6358:	09050106 	stmdbeq	r5, {r1, r2, r8}
    635c:	0605052e 	streq	r0, [r5], -lr, lsr #10
    6360:	11056950 	tstne	r5, r0, asr r9
    6364:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6368:	0b053e06 	bleq	155b88 <_Min_Heap_Size+0x155388>
    636c:	060c0501 	streq	r0, [ip], -r1, lsl #10
    6370:	4a3f0501 	bmi	fc777c <_Min_Heap_Size+0xfc6f7c>
    6374:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    6378:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    637c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    6380:	0a052e1a 	beq	151bf0 <_Min_Heap_Size+0x1513f0>
    6384:	4c100520 	cfldr32mi	mvfx0, [r0], {32}
    6388:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    638c:	ad030104 	stfges	f0, [r3, #-16]
    6390:	02002e7f 	andeq	r2, r0, #2032	; 0x7f0
    6394:	002e0104 	eoreq	r0, lr, r4, lsl #2
    6398:	20010402 	andcs	r0, r1, r2, lsl #8
    639c:	01040200 	mrseq	r0, R12_usr
    63a0:	0005053d 	andeq	r0, r5, sp, lsr r5
    63a4:	03090402 	movweq	r0, #37890	; 0x9402
    63a8:	02006623 	andeq	r6, r0, #36700160	; 0x2300000
    63ac:	056d0104 	strbeq	r0, [sp, #-260]!	; 0xfffffefc
    63b0:	056c0607 	strbeq	r0, [ip, #-1543]!	; 0xfffff9f9
    63b4:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    63b8:	10052e09 	andne	r2, r5, r9, lsl #28
    63bc:	0607053e 			; <UNDEFINED> instruction: 0x0607053e
    63c0:	060a0536 			; <UNDEFINED> instruction: 0x060a0536
    63c4:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
    63c8:	053e1005 	ldreq	r1, [lr, #-5]!
    63cc:	1c030603 	stcne	6, cr0, [r3], {3}
    63d0:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    63d4:	4a050501 	bmi	1477e0 <_Min_Heap_Size+0x146fe0>
    63d8:	05403106 	strbeq	r3, [r0, #-262]	; 0xfffffefa
    63dc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    63e0:	03053c07 	movweq	r3, #23559	; 0x5c07
    63e4:	19053506 	stmdbne	r5, {r1, r2, r8, sl, ip, sp}
    63e8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    63ec:	003e0620 	eorseq	r0, lr, r0, lsr #12
    63f0:	06010402 	streq	r0, [r1], -r2, lsl #8
    63f4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    63f8:	02003c02 	andeq	r3, r0, #512	; 0x200
    63fc:	003c0304 	eorseq	r0, ip, r4, lsl #6
    6400:	3c040402 	cfstrscc	mvf0, [r4], {2}
    6404:	03053d06 	movweq	r3, #23814	; 0x5d06
    6408:	06190578 			; <UNDEFINED> instruction: 0x06190578
    640c:	20050501 	andcs	r0, r5, r1, lsl #10
    6410:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    6414:	2e060104 	adfcss	f0, f6, f4
    6418:	02040200 	andeq	r0, r4, #0, 4
    641c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6420:	02003c03 	andeq	r3, r0, #768	; 0x300
    6424:	063c0404 	ldrteq	r0, [ip], -r4, lsl #8
    6428:	8603053d 			; <UNDEFINED> instruction: 0x8603053d
    642c:	01061505 	tsteq	r6, r5, lsl #10
    6430:	052e4405 	streq	r4, [lr, #-1029]!	; 0xfffffbfb
    6434:	3f052e5b 	svccc	0x00052e5b
    6438:	2e2f052e 	cfsh64cs	mvdx0, mvdx15, #30
    643c:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    6440:	4c310603 	ldcmi	6, cr0, [r1], #-12
    6444:	01060a05 	tsteq	r6, r5, lsl #20
    6448:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
    644c:	04020005 	streq	r0, [r2], #-5
    6450:	206e0305 	rsbcs	r0, lr, r5, lsl #6
    6454:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    6458:	030c056d 	movweq	r0, #50541	; 0xc56d
    645c:	05667f8c 	strbeq	r7, [r6, #-3980]!	; 0xfffff074
    6460:	00ff0301 	rscseq	r0, pc, r1, lsl #6
    6464:	030e0520 	movweq	r0, #58656	; 0xe520
    6468:	05207f96 	streq	r7, [r0, #-3990]!	; 0xfffff06a
    646c:	2e350310 	mrccs	3, 1, r0, cr5, cr0, {0}
    6470:	1c030e05 	stcne	14, cr0, [r3], {5}
    6474:	000e022e 	andeq	r0, lr, lr, lsr #4
    6478:	01050101 	tsteq	r5, r1, lsl #2
    647c:	b4020500 	strlt	r0, [r2], #-1280	; 0xfffffb00
    6480:	03080011 	movweq	r0, #32785	; 0x8011
    6484:	050107ad 	streq	r0, [r1, #-1965]	; 0xfffff853
    6488:	01051303 	tsteq	r5, r3, lsl #6
    648c:	06021306 	streq	r1, [r2], -r6, lsl #6
    6490:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6494:	02050001 	andeq	r0, r5, #1
    6498:	080011c0 	stmdaeq	r0, {r6, r7, r8, ip}
    649c:	0107b803 	tsteq	r7, r3, lsl #16
    64a0:	05220305 	streq	r0, [r2, #-773]!	; 0xfffffcfb
    64a4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    64a8:	4e052e36 	mcrmi	14, 0, r2, cr5, cr6, {1}
    64ac:	2e31052e 	cdpcs	5, 3, cr0, cr1, cr14, {1}
    64b0:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    64b4:	01010007 	tsteq	r1, r7
    64b8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    64bc:	0011e002 	andseq	lr, r1, r2
    64c0:	07c40308 	strbeq	r0, [r4, r8, lsl #6]
    64c4:	22030501 	andcs	r0, r3, #4194304	; 0x400000
    64c8:	01060b05 	tsteq	r6, r5, lsl #22
    64cc:	052e3505 	streq	r3, [lr, #-1285]!	; 0xfffffafb
    64d0:	30052e4d 	andcc	r2, r5, sp, asr #28
    64d4:	2f01052e 	svccs	0x0001052e
    64d8:	01000702 	tsteq	r0, r2, lsl #14
    64dc:	00010501 	andeq	r0, r1, r1, lsl #10
    64e0:	00000205 	andeq	r0, r0, r5, lsl #4
    64e4:	d1030000 	mrsle	r0, (UNDEF: 3)
    64e8:	03050107 	movweq	r0, #20743	; 0x5107
    64ec:	06250514 			; <UNDEFINED> instruction: 0x06250514
    64f0:	06030501 	streq	r0, [r3], -r1, lsl #10
    64f4:	060a0531 			; <UNDEFINED> instruction: 0x060a0531
    64f8:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    64fc:	21053e06 	tstcs	r5, r6, lsl #28
    6500:	03050106 	movweq	r0, #20742	; 0x5106
    6504:	3c0c0306 	stccc	3, cr0, [ip], {6}
    6508:	01060a05 	tsteq	r6, r5, lsl #20
    650c:	062e0505 	strteq	r0, [lr], -r5, lsl #10
    6510:	0621053e 			; <UNDEFINED> instruction: 0x0621053e
    6514:	06030501 	streq	r0, [r3], -r1, lsl #10
    6518:	063b0535 			; <UNDEFINED> instruction: 0x063b0535
    651c:	2e2c0501 	cfsh64cs	mvdx0, mvdx12, #1
    6520:	052e2a05 	streq	r2, [lr, #-2565]!	; 0xfffff5fb
    6524:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6528:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    652c:	3e062005 	cdpcc	0, 0, cr2, cr6, cr5, {0}
    6530:	01062105 	tsteq	r6, r5, lsl #2
    6534:	03060305 	movweq	r0, #25349	; 0x6305
    6538:	0a052e0c 	beq	151d70 <_Min_Heap_Size+0x151570>
    653c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6540:	053e062e 	ldreq	r0, [lr, #-1582]!	; 0xfffff9d2
    6544:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    6548:	05360603 	ldreq	r0, [r6, #-1539]!	; 0xfffff9fd
    654c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    6550:	3e062e05 	cdpcc	14, 0, cr2, cr6, cr5, {0}
    6554:	01062505 	tsteq	r6, r5, lsl #10
    6558:	34060305 	strcc	r0, [r6], #-773	; 0xfffffcfb
    655c:	01063405 	tsteq	r6, r5, lsl #8
    6560:	052e2605 	streq	r2, [lr, #-1541]!	; 0xfffff9fb
    6564:	03052e24 	movweq	r2, #24100	; 0x5e24
    6568:	2f052106 	svccs	0x00052106
    656c:	21050106 	tstcs	r5, r6, lsl #2
    6570:	2e1f0520 	cfmul64cs	mvdx0, mvdx15, mvdx0
    6574:	21060305 	tstcs	r6, r5, lsl #6
    6578:	01063005 	tsteq	r6, r5
    657c:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    6580:	03052e1f 	movweq	r2, #24095	; 0x5e1f
    6584:	32052106 	andcc	r2, r5, #-2147483647	; 0x80000001
    6588:	3c050106 	stfccs	f0, [r5], {6}
    658c:	2e500520 	cdpcs	5, 5, cr0, cr0, cr0, {1}
    6590:	052e2105 	streq	r2, [lr, #-261]!	; 0xfffffefb
    6594:	0305201f 	movweq	r2, #20511	; 0x501f
    6598:	30052106 	andcc	r2, r5, r6, lsl #2
    659c:	21050106 	tstcs	r5, r6, lsl #2
    65a0:	2e1f0520 	cfmul64cs	mvdx0, mvdx15, mvdx0
    65a4:	05210105 	streq	r0, [r1, #-261]!	; 0xfffffefb
    65a8:	45030608 	strmi	r0, [r3, #-1544]	; 0xfffff9f8
    65ac:	060f0520 	streq	r0, [pc], -r0, lsr #10
    65b0:	2e0a0501 	cfsh32cs	mvfx0, mvfx10, #1
    65b4:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    65b8:	01062105 	tsteq	r6, r5, lsl #2
    65bc:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    65c0:	01062105 	tsteq	r6, r5, lsl #2
    65c4:	03060505 	movweq	r0, #25861	; 0x6505
    65c8:	21053c0a 	tstcs	r5, sl, lsl #24
    65cc:	08050106 	stmdaeq	r5, {r1, r2, r8}
    65d0:	3c0a0306 	stccc	3, cr0, [sl], {6}
    65d4:	01060f05 	tsteq	r6, r5, lsl #30
    65d8:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    65dc:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    65e0:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    65e4:	05400605 	strbeq	r0, [r0, #-1541]	; 0xfffff9fb
    65e8:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    65ec:	0a030605 	beq	c7e08 <_Min_Heap_Size+0xc7608>
    65f0:	0621053c 			; <UNDEFINED> instruction: 0x0621053c
    65f4:	06050501 	streq	r0, [r5], -r1, lsl #10
    65f8:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
    65fc:	02010625 	andeq	r0, r1, #38797312	; 0x2500000
    6600:	01010006 	tsteq	r1, r6
    6604:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6608:	00000002 	andeq	r0, r0, r2
    660c:	08a00300 	stmiaeq	r0!, {r8, r9}
    6610:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    6614:	01062005 	tsteq	r6, r5
    6618:	31060305 	tstcc	r6, r5, lsl #6
    661c:	01063305 	tsteq	r6, r5, lsl #6
    6620:	052e2505 	streq	r2, [lr, #-1285]!	; 0xfffffafb
    6624:	03052e23 	movweq	r2, #24099	; 0x5e23
    6628:	34052306 	strcc	r2, [r5], #-774	; 0xfffffcfa
    662c:	26050106 	strcs	r0, [r5], -r6, lsl #2
    6630:	2e240520 	cfsh64cs	mvdx0, mvdx4, #16
    6634:	23060305 	movwcs	r0, #25349	; 0x6305
    6638:	01063505 	tsteq	r6, r5, lsl #10
    663c:	05202705 	streq	r2, [r0, #-1797]!	; 0xfffff8fb
    6640:	03052e25 	movweq	r2, #24101	; 0x5e25
    6644:	36052306 	strcc	r2, [r5], -r6, lsl #6
    6648:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    664c:	3c250520 	cfstr32cc	mvfx0, [r5], #-128	; 0xffffff80
    6650:	23060305 	movwcs	r0, #25349	; 0x6305
    6654:	01062005 	tsteq	r6, r5
    6658:	052e1005 	streq	r1, [lr, #-5]!
    665c:	01052e0e 	tsteq	r5, lr, lsl #28
    6660:	00050221 	andeq	r0, r5, r1, lsr #4
    6664:	01050101 	tsteq	r5, r1, lsl #2
    6668:	00020500 	andeq	r0, r2, r0, lsl #10
    666c:	03000000 	movweq	r0, #0
    6670:	160108cb 	strne	r0, [r1], -fp, asr #17
    6674:	01000102 	tsteq	r0, r2, lsl #2
    6678:	00010501 	andeq	r0, r1, r1, lsl #10
    667c:	00000205 	andeq	r0, r0, r5, lsl #4
    6680:	ba030000 	blt	c6688 <_Min_Heap_Size+0xc5e88>
    6684:	03050108 	movweq	r0, #20744	; 0x5108
    6688:	06060522 	streq	r0, [r6], -r2, lsr #10
    668c:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    6690:	05440105 	strbeq	r0, [r4, #-261]	; 0xfffffefb
    6694:	311b0605 	tstcc	fp, r5, lsl #12
    6698:	3e060105 	adfccs	f0, f6, f5
    669c:	01000402 	tsteq	r0, r2, lsl #8
    66a0:	00088101 	andeq	r8, r8, r1, lsl #2
    66a4:	e8000300 	stmda	r0, {r8, r9}
    66a8:	02000001 	andeq	r0, r0, #1
    66ac:	0d0efb01 	vstreq	d15, [lr, #-4]
    66b0:	01010100 	mrseq	r0, (UNDEF: 17)
    66b4:	00000001 	andeq	r0, r0, r1
    66b8:	01000001 	tsteq	r0, r1
    66bc:	442f2e2e 	strtmi	r2, [pc], #-3630	; 66c4 <_Min_Heap_Size+0x5ec4>
    66c0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    66c4:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    66c8:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    66cc:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    66d0:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    66d4:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    66d8:	2f726576 	svccs	0x00726576
    66dc:	00637253 	rsbeq	r7, r3, r3, asr r2
    66e0:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    66e4:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    66e8:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    66ec:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    66f0:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    66f4:	615c6d61 	cmpvs	ip, r1, ror #26
    66f8:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    66fc:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    6700:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    6704:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    6708:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    670c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    6710:	2e30312d 	rsfcssp	f3, f0, #5.0
    6714:	30322d33 	eorscc	r2, r2, r3, lsr sp
    6718:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    671c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    6720:	6f6e2d6d 	svcvs	0x006e2d6d
    6724:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    6728:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    672c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    6730:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    6734:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    6738:	00656e69 	rsbeq	r6, r5, r9, ror #28
    673c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    6740:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    6744:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    6748:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    674c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    6750:	615c6d61 	cmpvs	ip, r1, ror #26
    6754:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    6758:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    675c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    6760:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    6764:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    6768:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    676c:	2e30312d 	rsfcssp	f3, f0, #5.0
    6770:	30322d33 	eorscc	r2, r2, r3, lsr sp
    6774:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    6778:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    677c:	6f6e2d6d 	svcvs	0x006e2d6d
    6780:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    6784:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    6788:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    678c:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    6790:	00737973 	rsbseq	r7, r3, r3, ror r9
    6794:	442f2e2e 	strtmi	r2, [pc], #-3630	; 679c <_Min_Heap_Size+0x5f9c>
    6798:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    679c:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    67a0:	5349534d 	movtpl	r5, #37709	; 0x934d
    67a4:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    67a8:	2f656369 	svccs	0x00656369
    67ac:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    67b0:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    67b4:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    67b8:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    67bc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    67c0:	2f2e2e00 	svccs	0x002e2e00
    67c4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    67c8:	2f737265 	svccs	0x00737265
    67cc:	334d5453 	movtcc	r5, #54355	; 0xd453
    67d0:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    67d4:	41485f78 	hvcmi	34296	; 0x85f8
    67d8:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    67dc:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    67e0:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    67e4:	2f2e2e00 	svccs	0x002e2e00
    67e8:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    67ec:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    67f0:	74730000 	ldrbtvc	r0, [r3], #-0
    67f4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    67f8:	5f787834 	svcpl	0x00787834
    67fc:	5f6c6168 	svcpl	0x006c6168
    6800:	6f697067 	svcvs	0x00697067
    6804:	0100632e 	tsteq	r0, lr, lsr #6
    6808:	645f0000 	ldrbvs	r0, [pc], #-0	; 6810 <_Min_Heap_Size+0x6010>
    680c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    6810:	745f746c 	ldrbvc	r7, [pc], #-1132	; 6818 <_Min_Heap_Size+0x6018>
    6814:	73657079 	cmnvc	r5, #121	; 0x79
    6818:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    681c:	735f0000 	cmpvc	pc, #0
    6820:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    6824:	00682e74 	rsbeq	r2, r8, r4, ror lr
    6828:	73000003 	movwvc	r0, #3
    682c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    6830:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    6834:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    6838:	00000400 	andeq	r0, r0, r0, lsl #8
    683c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    6840:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    6844:	00682e78 	rsbeq	r2, r8, r8, ror lr
    6848:	73000004 	movwvc	r0, #4
    684c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    6850:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    6854:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    6858:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    685c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    6860:	74730000 	ldrbtvc	r0, [r3], #-0
    6864:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    6868:	5f787834 	svcpl	0x00787834
    686c:	5f6c6168 	svcpl	0x006c6168
    6870:	6f697067 	svcvs	0x00697067
    6874:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    6878:	74730000 	ldrbtvc	r0, [r3], #-0
    687c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    6880:	5f787834 	svcpl	0x00787834
    6884:	5f6c6168 	svcpl	0x006c6168
    6888:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    688c:	0600682e 	streq	r6, [r0], -lr, lsr #16
    6890:	05000000 	streq	r0, [r0, #-0]
    6894:	02050001 	andeq	r0, r5, #1
    6898:	08001200 	stmdaeq	r0, {r9, ip}
    689c:	0101a403 	tsteq	r1, r3, lsl #8
    68a0:	03050106 	movweq	r0, #20742	; 0x5106
    68a4:	13135906 	tstne	r3, #98304	; 0x18000
    68a8:	02001513 	andeq	r1, r0, #79691776	; 0x4c00000
    68ac:	3c060104 	stfccs	f0, [r6], {4}
    68b0:	02040200 	andeq	r0, r4, #0, 4
    68b4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    68b8:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    68bc:	004a0404 	subeq	r0, sl, r4, lsl #8
    68c0:	4a050402 	bmi	1478d0 <_Min_Heap_Size+0x1470d0>
    68c4:	06040200 	streq	r0, [r4], -r0, lsl #4
    68c8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    68cc:	02004a07 	andeq	r4, r0, #28672	; 0x7000
    68d0:	004a0804 	subeq	r0, sl, r4, lsl #16
    68d4:	4a090402 	bmi	2478e4 <_Min_Heap_Size+0x2470e4>
    68d8:	09040200 	stmdbeq	r4, {r9}
    68dc:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    68e0:	2f062009 	svccs	0x00062009
    68e4:	02040200 	andeq	r0, r4, #0, 4
    68e8:	02003c06 	andeq	r3, r0, #1536	; 0x600
    68ec:	063c0304 	ldrteq	r0, [ip], -r4, lsl #6
    68f0:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
    68f4:	003c0601 	eorseq	r0, ip, r1, lsl #12
    68f8:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    68fc:	03040200 	movweq	r0, #16896	; 0x4200
    6900:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6904:	02002e04 	andeq	r2, r0, #4, 28	; 0x40
    6908:	003c0504 	eorseq	r0, ip, r4, lsl #10
    690c:	3c060402 	cfstrscc	mvf0, [r6], {2}
    6910:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6914:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6918:	02003c08 	andeq	r3, r0, #8, 24	; 0x800
    691c:	003c0904 	eorseq	r0, ip, r4, lsl #18
    6920:	3c0a0402 	cfstrscc	mvf0, [sl], {2}
    6924:	02001d05 	andeq	r1, r0, #320	; 0x140
    6928:	c7030104 	strgt	r0, [r3, -r4, lsl #2]
    692c:	03052e00 	movweq	r2, #24064	; 0x5e00
    6930:	0b040200 	bleq	107138 <_Min_Heap_Size+0x106938>
    6934:	2e7fb903 	vaddcs.f16	s23, s30, s6	; <UNPREDICTABLE>
    6938:	03060905 	movweq	r0, #26885	; 0x6905
    693c:	053e5812 	ldreq	r5, [lr, #-2066]!	; 0xfffff7ee
    6940:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    6944:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    6948:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
    694c:	0e05202a 	cdpeq	0, 0, cr2, cr5, cr10, {1}
    6950:	0609052e 	streq	r0, [r9], -lr, lsr #10
    6954:	061b052f 	ldreq	r0, [fp], -pc, lsr #10
    6958:	20230501 	eorcs	r0, r3, r1, lsl #10
    695c:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    6960:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    6964:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    6968:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    696c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    6970:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    6974:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    6978:	052f0609 	streq	r0, [pc, #-1545]!	; 6377 <_Min_Heap_Size+0x5b77>
    697c:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    6980:	47052033 	smladxmi	r5, r3, r0, r2
    6984:	200e052e 	andcs	r0, lr, lr, lsr #10
    6988:	21060905 	tstcs	r6, r5, lsl #18
    698c:	01061705 	tsteq	r6, r5, lsl #14
    6990:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6994:	75030104 	strvc	r0, [r3, #-260]	; 0xfffffefc
    6998:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    699c:	58110301 	ldmdapl	r1, {r0, r8, r9}
    69a0:	580d0306 	stmdapl	sp, {r1, r2, r8, r9}
    69a4:	01040200 	mrseq	r0, R12_usr
    69a8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    69ac:	002e0604 	eoreq	r0, lr, r4, lsl #12
    69b0:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
    69b4:	0b040200 	bleq	1071bc <_Min_Heap_Size+0x1069bc>
    69b8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    69bc:	02002e0c 	andeq	r2, r0, #12, 28	; 0xc0
    69c0:	002e0f04 	eoreq	r0, lr, r4, lsl #30
    69c4:	2e120402 	cfmulscs	mvf0, mvf2, mvf2
    69c8:	14040200 	strne	r0, [r4], #-512	; 0xfffffe00
    69cc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    69d0:	02002e17 	andeq	r2, r0, #368	; 0x170
    69d4:	002e1c04 	eoreq	r1, lr, r4, lsl #24
    69d8:	2e1e0402 	cfmulscs	mvf0, mvf14, mvf2
    69dc:	21040200 	mrscs	r0, R12_usr
    69e0:	0530062e 	ldreq	r0, [r0, #-1582]!	; 0xfffff9d2
    69e4:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    69e8:	0905200e 	stmdbeq	r5, {r1, r2, r3, sp}
    69ec:	1c053d06 	stcne	13, cr3, [r5], {6}
    69f0:	39050106 	stmdbcc	r5, {r1, r2, r8}
    69f4:	2018052e 	andscs	r0, r8, lr, lsr #10
    69f8:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    69fc:	052f0609 	streq	r0, [pc, #-1545]!	; 63fb <_Min_Heap_Size+0x5bfb>
    6a00:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    6a04:	0e052033 	mcreq	0, 0, r2, cr5, cr3, {1}
    6a08:	06090520 	streq	r0, [r9], -r0, lsr #10
    6a0c:	06240521 	strteq	r0, [r4], -r1, lsr #10
    6a10:	00090501 	andeq	r0, r9, r1, lsl #10
    6a14:	37220402 	strcc	r0, [r2, -r2, lsl #8]!
    6a18:	17031d05 	strne	r1, [r3, -r5, lsl #26]
    6a1c:	74120558 	ldrvc	r0, [r2], #-1368	; 0xfffffaa8
    6a20:	02003405 	andeq	r3, r0, #83886080	; 0x5000000
    6a24:	05202004 	streq	r2, [r0, #-4]!
    6a28:	0402000e 	streq	r0, [r2], #-14
    6a2c:	09052020 	stmdbeq	r5, {r5, sp}
    6a30:	20040200 	andcs	r0, r4, r0, lsl #4
    6a34:	28052106 	stmdacs	r5, {r1, r2, r8, sp}
    6a38:	20040200 	andcs	r0, r4, r0, lsl #4
    6a3c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6a40:	20040200 	andcs	r0, r4, r0, lsl #4
    6a44:	0e054d06 	cdpeq	13, 0, cr4, cr5, cr6, {0}
    6a48:	20040200 	andcs	r0, r4, r0, lsl #4
    6a4c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    6a50:	05202004 	streq	r2, [r0, #-4]!
    6a54:	04020009 	streq	r0, [r2], #-9
    6a58:	05210620 	streq	r0, [r1, #-1568]!	; 0xfffff9e0
    6a5c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    6a60:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    6a64:	0402000e 	streq	r0, [r2], #-14
    6a68:	09052e20 	stmdbeq	r5, {r5, r9, sl, fp, sp}
    6a6c:	20040200 	andcs	r0, r4, r0, lsl #4
    6a70:	16052f06 	strne	r2, [r5], -r6, lsl #30
    6a74:	20040200 	andcs	r0, r4, r0, lsl #4
    6a78:	0b050106 	bleq	146e98 <_Min_Heap_Size+0x146698>
    6a7c:	20040200 	andcs	r0, r4, r0, lsl #4
    6a80:	053e0620 	ldreq	r0, [lr, #-1568]!	; 0xfffff9e0
    6a84:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    6a88:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    6a8c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6a90:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    6a94:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    6a98:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    6a9c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    6aa0:	052f0609 	streq	r0, [pc, #-1545]!	; 649f <_Min_Heap_Size+0x5c9f>
    6aa4:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6aa8:	3e06200b 	cdpcc	0, 0, cr2, cr6, cr11, {0}
    6aac:	01061005 	tsteq	r6, r5
    6ab0:	30060905 	andcc	r0, r6, r5, lsl #18
    6ab4:	01061405 	tsteq	r6, r5, lsl #8
    6ab8:	30060905 	andcc	r0, r6, r5, lsl #18
    6abc:	01060e05 	tsteq	r6, r5, lsl #28
    6ac0:	21060905 	tstcs	r6, r5, lsl #18
    6ac4:	01060e05 	tsteq	r6, r5, lsl #28
    6ac8:	2f060905 	svccs	0x00060905
    6acc:	01061605 	tsteq	r6, r5, lsl #12
    6ad0:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    6ad4:	0610053e 			; <UNDEFINED> instruction: 0x0610053e
    6ad8:	06090501 	streq	r0, [r9], -r1, lsl #10
    6adc:	06130530 			; <UNDEFINED> instruction: 0x06130530
    6ae0:	06090501 	streq	r0, [r9], -r1, lsl #10
    6ae4:	060e0531 			; <UNDEFINED> instruction: 0x060e0531
    6ae8:	06090501 	streq	r0, [r9], -r1, lsl #10
    6aec:	060e0521 	streq	r0, [lr], -r1, lsr #10
    6af0:	06090501 	streq	r0, [r9], -r1, lsl #10
    6af4:	06160521 	ldreq	r0, [r6], -r1, lsr #10
    6af8:	200b0501 	andcs	r0, fp, r1, lsl #10
    6afc:	10053e06 	andne	r3, r5, r6, lsl #28
    6b00:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6b04:	13053006 	movwne	r3, #20486	; 0x5006
    6b08:	2e050106 	adfcss	f0, f5, f6
    6b0c:	02040200 	andeq	r0, r4, #0, 4
    6b10:	7f990306 	svcvc	0x00990306
    6b14:	0036052e 	eorseq	r0, r6, lr, lsr #10
    6b18:	06020402 	streq	r0, [r2], -r2, lsl #8
    6b1c:	00160501 	andseq	r0, r6, r1, lsl #10
    6b20:	06010402 	streq	r0, [r1], -r2, lsl #8
    6b24:	00030520 	andeq	r0, r3, r0, lsr #10
    6b28:	06010402 	streq	r0, [r1], -r2, lsl #8
    6b2c:	06050501 	streq	r0, [r5], -r1, lsl #10
    6b30:	06100531 			; <UNDEFINED> instruction: 0x06100531
    6b34:	06050501 	streq	r0, [r5], -r1, lsl #10
    6b38:	06250530 			; <UNDEFINED> instruction: 0x06250530
    6b3c:	200f0501 	andcs	r0, pc, r1, lsl #10
    6b40:	30060505 	andcc	r0, r6, r5, lsl #10
    6b44:	01060705 	tsteq	r6, r5, lsl #14
    6b48:	15054006 	strne	r4, [r5, #-6]
    6b4c:	1c050106 	stfnes	f0, [r5], {6}
    6b50:	2e390520 	cfabs64cs	mvdx0, mvdx9
    6b54:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    6b58:	12030607 	andne	r0, r3, #7340032	; 0x700000
    6b5c:	0614053c 			; <UNDEFINED> instruction: 0x0614053c
    6b60:	201b0501 	andscs	r0, fp, r1, lsl #10
    6b64:	062e0905 	strteq	r0, [lr], -r5, lsl #18
    6b68:	0e054d31 	mcreq	13, 0, r4, cr5, cr1, {1}
    6b6c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6b70:	32052106 	andcc	r2, r5, #-2147483647	; 0x80000001
    6b74:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    6b78:	2e0e0520 	cfsh32cs	mvfx0, mvfx14, #16
    6b7c:	2f060905 	svccs	0x00060905
    6b80:	01061c05 	tsteq	r6, r5, lsl #24
    6b84:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    6b88:	0905200e 	stmdbeq	r5, {r1, r2, r3, sp}
    6b8c:	16052106 	strne	r2, [r5], -r6, lsl #2
    6b90:	07050106 	streq	r0, [r5, -r6, lsl #2]
    6b94:	14052406 	strne	r2, [r5], #-1030	; 0xfffffbfa
    6b98:	1b050106 	blne	146fb8 <_Min_Heap_Size+0x1467b8>
    6b9c:	2e090520 	cfsh32cs	mvfx0, mvfx9, #16
    6ba0:	03060705 	movweq	r0, #26373	; 0x6705
    6ba4:	0c053c0c 	stceq	12, cr3, [r5], {12}
    6ba8:	07050106 	streq	r0, [r5, -r6, lsl #2]
    6bac:	30052106 	andcc	r2, r5, r6, lsl #2
    6bb0:	23050106 	movwcs	r0, #20742	; 0x5106
    6bb4:	2e0c0520 	cfsh32cs	mvfx0, mvfx12, #16
    6bb8:	2f060705 	svccs	0x00060705
    6bbc:	01061a05 	tsteq	r6, r5, lsl #20
    6bc0:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    6bc4:	0c052e2e 	stceq	14, cr2, [r5], {46}	; 0x2e
    6bc8:	06070520 	streq	r0, [r7], -r0, lsr #10
    6bcc:	06140521 	ldreq	r0, [r4], -r1, lsr #10
    6bd0:	06070501 	streq	r0, [r7], -r1, lsl #10
    6bd4:	06140524 	ldreq	r0, [r4], -r4, lsr #10
    6bd8:	20090501 	andcs	r0, r9, r1, lsl #10
    6bdc:	2e013f06 	cdpcs	15, 0, cr3, cr1, cr6, {0}
    6be0:	14204a58 	strtne	r4, [r0], #-2648	; 0xfffff5a8
    6be4:	01062805 	tsteq	r6, r5, lsl #16
    6be8:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    6bec:	054b0609 	strbeq	r0, [fp, #-1545]	; 0xfffff9f7
    6bf0:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    6bf4:	19052e20 	stmdbne	r5, {r5, r9, sl, fp, sp}
    6bf8:	2e0e0520 	cfsh32cs	mvfx0, mvfx14, #16
    6bfc:	2f060905 	svccs	0x00060905
    6c00:	01061205 	tsteq	r6, r5, lsl #4
    6c04:	02001d05 	andeq	r1, r0, #320	; 0x140
    6c08:	004a0104 	subeq	r0, sl, r4, lsl #2
    6c0c:	4a030402 	bmi	c7c1c <_Min_Heap_Size+0xc741c>
    6c10:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    6c14:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6c18:	02004a07 	andeq	r4, r0, #28672	; 0x7000
    6c1c:	004a0904 	subeq	r0, sl, r4, lsl #18
    6c20:	4a0b0402 	bmi	2c7c30 <_Min_Heap_Size+0x2c7430>
    6c24:	0d040200 	sfmeq	f0, 4, [r4, #-0]
    6c28:	203c584a 	eorscs	r5, ip, sl, asr #16
    6c2c:	27030105 	strcs	r0, [r3, -r5, lsl #2]
    6c30:	08023c9e 	stmdaeq	r2, {r1, r2, r3, r4, r7, sl, fp, ip, sp}
    6c34:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6c38:	02050001 	andeq	r0, r5, #1
    6c3c:	00000000 	andeq	r0, r0, r0
    6c40:	0102a603 	tsteq	r2, r3, lsl #12
    6c44:	03050106 	movweq	r0, #20742	; 0x5106
    6c48:	13133d06 	tstne	r3, #384	; 0x180
    6c4c:	02001513 	andeq	r1, r0, #79691776	; 0x4c00000
    6c50:	3c060104 	stfccs	f0, [r6], {4}
    6c54:	02040200 	andeq	r0, r4, #0, 4
    6c58:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6c5c:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    6c60:	004a0404 	subeq	r0, sl, r4, lsl #8
    6c64:	4a050402 	bmi	147c74 <_Min_Heap_Size+0x147474>
    6c68:	06040200 	streq	r0, [r4], -r0, lsl #4
    6c6c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6c70:	02004a07 	andeq	r4, r0, #28672	; 0x7000
    6c74:	004a0804 	subeq	r0, sl, r4, lsl #16
    6c78:	4a090402 	bmi	247c88 <_Min_Heap_Size+0x247488>
    6c7c:	09040200 	stmdbeq	r4, {r9}
    6c80:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6c84:	1d052009 	stcne	0, cr2, [r5, #-36]	; 0xffffffdc
    6c88:	01040200 	mrseq	r0, R12_usr
    6c8c:	2e2e0f03 	cdpcs	15, 2, cr0, cr14, cr3, {0}
    6c90:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
    6c94:	04020034 	streq	r0, [r2], #-52	; 0xffffffcc
    6c98:	09052020 	stmdbeq	r5, {r5, sp}
    6c9c:	20040200 	andcs	r0, r4, r0, lsl #4
    6ca0:	0607052e 	streq	r0, [r7], -lr, lsr #10
    6ca4:	052e1103 	streq	r1, [lr, #-259]!	; 0xfffffefd
    6ca8:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6cac:	2b052038 	blcs	14ed94 <_Min_Heap_Size+0x14e594>
    6cb0:	3c140520 	cfldr32cc	mvfx0, [r4], {32}
    6cb4:	3f060705 	svccc	0x00060705
    6cb8:	01062205 	tsteq	r6, r5, lsl #4
    6cbc:	05583005 	ldrbeq	r3, [r8, #-5]
    6cc0:	2c052e4d 	stccs	14, cr2, [r5], {77}	; 0x4d
    6cc4:	4a22052e 	bmi	888184 <_Min_Heap_Size+0x887984>
    6cc8:	4d060705 	stcmi	7, cr0, [r6, #-20]	; 0xffffffec
    6ccc:	01061405 	tsteq	r6, r5, lsl #8
    6cd0:	4d060705 	stcmi	7, cr0, [r6, #-20]	; 0xffffffec
    6cd4:	01061605 	tsteq	r6, r5, lsl #12
    6cd8:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    6cdc:	06160523 	ldreq	r0, [r6], -r3, lsr #10
    6ce0:	002e0501 	eoreq	r0, lr, r1, lsl #10
    6ce4:	06020402 	streq	r0, [r2], -r2, lsl #8
    6ce8:	054a5703 	strbeq	r5, [sl, #-1795]	; 0xfffff8fd
    6cec:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    6cf0:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    6cf4:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    6cf8:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    6cfc:	04020003 	streq	r0, [r2], #-3
    6d00:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6d04:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    6d08:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    6d0c:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    6d10:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    6d14:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    6d18:	06010607 	streq	r0, [r1], -r7, lsl #12
    6d1c:	0625053f 			; <UNDEFINED> instruction: 0x0625053f
    6d20:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    6d24:	59060705 	stmdbpl	r6, {r0, r2, r8, r9, sl}
    6d28:	01062805 	tsteq	r6, r5, lsl #16
    6d2c:	052e1c05 	streq	r1, [lr, #-3077]!	; 0xfffff3fb
    6d30:	0b052015 	bleq	14ed8c <_Min_Heap_Size+0x14e58c>
    6d34:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    6d38:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    6d3c:	001d0501 	andseq	r0, sp, r1, lsl #10
    6d40:	3c010402 	cfstrscc	mvf0, [r1], {2}
    6d44:	03040200 	movweq	r0, #16896	; 0x4200
    6d48:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6d4c:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    6d50:	004a0704 	subeq	r0, sl, r4, lsl #14
    6d54:	4a090402 	bmi	247d64 <_Min_Heap_Size+0x247564>
    6d58:	0b040200 	bleq	107560 <_Min_Heap_Size+0x106d60>
    6d5c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6d60:	054a4a0d 	strbeq	r4, [sl, #-2573]	; 0xfffff5f3
    6d64:	05d90609 	ldrbeq	r0, [r9, #1545]	; 0x609
    6d68:	2e010613 	mcrcs	6, 0, r0, cr1, cr3, {0}
    6d6c:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    6d70:	01061305 	tsteq	r6, r5, lsl #6
    6d74:	4d060905 	vstrmi.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    6d78:	01061405 	tsteq	r6, r5, lsl #8
    6d7c:	4b060905 	blmi	189198 <_Min_Heap_Size+0x188998>
    6d80:	01061405 	tsteq	r6, r5, lsl #8
    6d84:	4d060905 	vstrmi.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    6d88:	06280513 			; <UNDEFINED> instruction: 0x06280513
    6d8c:	03010501 	movweq	r0, #5377	; 0x1501
    6d90:	02209e14 	eoreq	r9, r0, #20, 28	; 0x140
    6d94:	01010008 	tsteq	r1, r8
    6d98:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6d9c:	00000002 	andeq	r0, r0, r2
    6da0:	02f70300 	rscseq	r0, r7, #0, 6
    6da4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6da8:	152f0603 	strne	r0, [pc, #-1539]!	; 67ad <_Min_Heap_Size+0x5fad>
    6dac:	060c0530 			; <UNDEFINED> instruction: 0x060c0530
    6db0:	20050501 	andcs	r0, r5, r1, lsl #10
    6db4:	05300f05 	ldreq	r0, [r0, #-3845]!	; 0xfffff0fb
    6db8:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
    6dbc:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    6dc0:	04020003 	streq	r0, [r2], #-3
    6dc4:	20750303 	rsbscs	r0, r5, r3, lsl #6
    6dc8:	03040200 	movweq	r0, #16896	; 0x4200
    6dcc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6dd0:	0f052003 	svceq	0x00052003
    6dd4:	00050244 	andeq	r0, r5, r4, asr #4
    6dd8:	01050101 	tsteq	r5, r1, lsl #2
    6ddc:	00020500 	andeq	r0, r2, r0, lsl #10
    6de0:	03000000 	movweq	r0, #0
    6de4:	0601039a 			; <UNDEFINED> instruction: 0x0601039a
    6de8:	06030501 	streq	r0, [r3], -r1, lsl #10
    6dec:	05302f3e 	ldreq	r2, [r0, #-3902]!	; 0xfffff0c2
    6df0:	06010605 	streq	r0, [r1], -r5, lsl #12
    6df4:	06110522 	ldreq	r0, [r1], -r2, lsr #10
    6df8:	26010501 	strcs	r0, [r1], -r1, lsl #10
    6dfc:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    6e00:	75030304 	strvc	r0, [r3, #-772]	; 0xfffffcfc
    6e04:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    6e08:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6e0c:	00200304 	eoreq	r0, r0, r4, lsl #6
    6e10:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6e14:	01040200 	mrseq	r0, R12_usr
    6e18:	06050521 	streq	r0, [r5], -r1, lsr #10
    6e1c:	0626056e 	strteq	r0, [r6], -lr, ror #10
    6e20:	20110501 	andscs	r0, r1, r1, lsl #10
    6e24:	02220105 	eoreq	r0, r2, #1073741825	; 0x40000001
    6e28:	01010004 	tsteq	r1, r4
    6e2c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6e30:	00000002 	andeq	r0, r0, r2
    6e34:	03b10300 			; <UNDEFINED> instruction: 0x03b10300
    6e38:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6e3c:	152f0603 	strne	r0, [pc, #-1539]!	; 6841 <_Min_Heap_Size+0x6041>
    6e40:	06070531 			; <UNDEFINED> instruction: 0x06070531
    6e44:	06030501 	streq	r0, [r3], -r1, lsl #10
    6e48:	06170523 	ldreq	r0, [r7], -r3, lsr #10
    6e4c:	2e3b0501 	cdpcs	5, 3, cr0, cr11, cr1, {0}
    6e50:	052e3305 	streq	r3, [lr, #-773]!	; 0xfffffcfb
    6e54:	01052e0f 	tsteq	r5, pc, lsl #28
    6e58:	00030521 	andeq	r0, r3, r1, lsr #10
    6e5c:	03030402 	movweq	r0, #13314	; 0x3402
    6e60:	02002079 	andeq	r2, r0, #121	; 0x79
    6e64:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6e68:	20030402 	andcs	r0, r3, r2, lsl #8
    6e6c:	01000602 	tsteq	r0, r2, lsl #12
    6e70:	00010501 	andeq	r0, r1, r1, lsl #10
    6e74:	00000205 	andeq	r0, r0, r5, lsl #4
    6e78:	ca030000 	bgt	c6e80 <_Min_Heap_Size+0xc6680>
    6e7c:	01060103 	tsteq	r6, r3, lsl #2
    6e80:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    6e84:	01061105 	tsteq	r6, r5, lsl #2
    6e88:	3f060305 	svccc	0x00060305
    6e8c:	06070531 			; <UNDEFINED> instruction: 0x06070531
    6e90:	06030501 	streq	r0, [r3], -r1, lsl #10
    6e94:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    6e98:	06030501 	streq	r0, [r3], -r1, lsl #10
    6e9c:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    6ea0:	06030501 	streq	r0, [r3], -r1, lsl #10
    6ea4:	060f0522 	streq	r0, [pc], -r2, lsr #10
    6ea8:	06030501 	streq	r0, [r3], -r1, lsl #10
    6eac:	060e0530 			; <UNDEFINED> instruction: 0x060e0530
    6eb0:	20070501 	andcs	r0, r7, r1, lsl #10
    6eb4:	23060205 	movwcs	r0, #25093	; 0x6205
    6eb8:	01060b05 	tsteq	r6, r5, lsl #22
    6ebc:	05200405 	streq	r0, [r0, #-1029]!	; 0xfffffbfb
    6ec0:	01053e0c 	tsteq	r5, ip, lsl #28
    6ec4:	00030526 	andeq	r0, r3, r6, lsr #10
    6ec8:	03030402 	movweq	r0, #13314	; 0x3402
    6ecc:	02002e6a 	andeq	r2, r0, #1696	; 0x6a0
    6ed0:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6ed4:	20030402 	andcs	r0, r3, r2, lsl #8
    6ed8:	14030c05 	strne	r0, [r3], #-3077	; 0xfffff3fb
    6edc:	0005023c 	andeq	r0, r5, ip, lsr r2
    6ee0:	01050101 	tsteq	r5, r1, lsl #2
    6ee4:	00020500 	andeq	r0, r2, r0, lsl #10
    6ee8:	03000000 	movweq	r0, #0
    6eec:	050103fb 	streq	r0, [r1, #-1019]	; 0xfffffc05
    6ef0:	01051403 	tsteq	r5, r3, lsl #8
    6ef4:	01021606 	tsteq	r2, r6, lsl #12
    6ef8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6efc:	02050001 	andeq	r0, r5, #1
    6f00:	00000000 	andeq	r0, r0, r0
    6f04:	0103ec03 	tsteq	r3, r3, lsl #24
    6f08:	03050106 	movweq	r0, #20742	; 0x5106
    6f0c:	06052206 	streq	r2, [r5], -r6, lsl #4
    6f10:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6f14:	3301052e 	movwcc	r0, #5422	; 0x152e
    6f18:	1d060505 	cfstr32ne	mvfx0, [r6, #-20]	; 0xffffffec
    6f1c:	0601052f 	streq	r0, [r1], -pc, lsr #10
    6f20:	00040230 	andeq	r0, r4, r0, lsr r2
    6f24:	10100101 	andsne	r0, r0, r1, lsl #2
    6f28:	00030000 	andeq	r0, r3, r0
    6f2c:	0000020f 	andeq	r0, r0, pc, lsl #4
    6f30:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    6f34:	0101000d 	tsteq	r1, sp
    6f38:	00000101 	andeq	r0, r0, r1, lsl #2
    6f3c:	00000100 	andeq	r0, r0, r0, lsl #2
    6f40:	2f2e2e01 	svccs	0x002e2e01
    6f44:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    6f48:	2f737265 	svccs	0x00737265
    6f4c:	334d5453 	movtcc	r5, #54355	; 0xd453
    6f50:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    6f54:	41485f78 	hvcmi	34296	; 0x85f8
    6f58:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    6f5c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    6f60:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    6f64:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    6f68:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    6f6c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    6f70:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    6f74:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    6f78:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    6f7c:	5f6d7261 	svcpl	0x006d7261
    6f80:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    6f84:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    6f88:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    6f8c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    6f90:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    6f94:	30312d69 	eorscc	r2, r1, r9, ror #26
    6f98:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    6f9c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    6fa0:	615c3031 	cmpvs	ip, r1, lsr r0
    6fa4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    6fa8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    6fac:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    6fb0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    6fb4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    6fb8:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    6fbc:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    6fc0:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    6fc4:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    6fc8:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    6fcc:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    6fd0:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    6fd4:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    6fd8:	5f6d7261 	svcpl	0x006d7261
    6fdc:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    6fe0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    6fe4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    6fe8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    6fec:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    6ff0:	30312d69 	eorscc	r2, r1, r9, ror #26
    6ff4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    6ff8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    6ffc:	615c3031 	cmpvs	ip, r1, lsr r0
    7000:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7004:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7008:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    700c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    7010:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    7014:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    7018:	2f2e2e00 	svccs	0x002e2e00
    701c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    7020:	2f737265 	svccs	0x00737265
    7024:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    7028:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    702c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    7030:	2f54532f 	svccs	0x0054532f
    7034:	334d5453 	movtcc	r5, #54355	; 0xd453
    7038:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    703c:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    7040:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7044:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    7048:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    704c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    7050:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    7054:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    7058:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    705c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 7064 <_Min_Heap_Size+0x6864>
    7060:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    7064:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
    7068:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    706c:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    7070:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
    7074:	73000063 	movwvc	r0, #99	; 0x63
    7078:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    707c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    7080:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    7084:	616d645f 	cmnvs	sp, pc, asr r4
    7088:	0100632e 	tsteq	r0, lr, lsr #6
    708c:	645f0000 	ldrbvs	r0, [pc], #-0	; 7094 <_Min_Heap_Size+0x6894>
    7090:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    7094:	745f746c 	ldrbvc	r7, [pc], #-1132	; 709c <_Min_Heap_Size+0x689c>
    7098:	73657079 	cmnvc	r5, #121	; 0x79
    709c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    70a0:	735f0000 	cmpvc	pc, #0
    70a4:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    70a8:	00682e74 	rsbeq	r2, r8, r4, ror lr
    70ac:	73000003 	movwvc	r0, #3
    70b0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    70b4:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    70b8:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    70bc:	00000400 	andeq	r0, r0, r0, lsl #8
    70c0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    70c4:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    70c8:	00682e78 	rsbeq	r2, r8, r8, ror lr
    70cc:	73000004 	movwvc	r0, #4
    70d0:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    70d4:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    70d8:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    70dc:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    70e0:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    70e4:	74730000 	ldrbtvc	r0, [r3], #-0
    70e8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    70ec:	5f787834 	svcpl	0x00787834
    70f0:	5f6c6168 	svcpl	0x006c6168
    70f4:	2e616d64 	cdpcs	13, 6, cr6, cr1, cr4, {3}
    70f8:	00050068 	andeq	r0, r5, r8, rrx
    70fc:	73797300 	cmnvc	r9, #0, 6
    7100:	5f6d6574 	svcpl	0x006d6574
    7104:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    7108:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    710c:	00682e78 	rsbeq	r2, r8, r8, ror lr
    7110:	73000004 	movwvc	r0, #4
    7114:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    7118:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    711c:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    7120:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    7124:	74730000 	ldrbtvc	r0, [r3], #-0
    7128:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    712c:	5f787834 	svcpl	0x00787834
    7130:	5f6c6168 	svcpl	0x006c6168
    7134:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    7138:	0600682e 	streq	r6, [r0], -lr, lsr #16
    713c:	05000000 	streq	r0, [r0, #-0]
    7140:	02050001 	andeq	r0, r5, #1
    7144:	00000000 	andeq	r0, r0, r0
    7148:	0108ff03 	tsteq	r8, r3, lsl #30	; <UNPREDICTABLE>
    714c:	03050106 	movweq	r0, #20742	; 0x5106
    7150:	07052206 	streq	r2, [r5, -r6, lsl #4]
    7154:	16050106 	strne	r0, [r5], -r6, lsl #2
    7158:	06030520 	streq	r0, [r3], -r0, lsr #10
    715c:	0607054d 	streq	r0, [r7], -sp, asr #10
    7160:	20180501 	andscs	r0, r8, r1, lsl #10
    7164:	23060305 	movwcs	r0, #25349	; 0x6305
    7168:	01061105 	tsteq	r6, r5, lsl #2
    716c:	06200505 	strteq	r0, [r0], -r5, lsl #10
    7170:	052e0c03 	streq	r0, [lr, #-3075]!	; 0xfffff3fd
    7174:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    7178:	05052019 	streq	r2, [r5, #-25]	; 0xffffffe7
    717c:	09052306 	stmdbeq	r5, {r1, r2, r8, r9, sp}
    7180:	1a050106 	bne	1475a0 <_Min_Heap_Size+0x146da0>
    7184:	22010520 	andcs	r0, r1, #32, 10	; 0x8000000
    7188:	03060505 	movweq	r0, #25861	; 0x6505
    718c:	09052e72 	stmdbeq	r5, {r1, r4, r5, r6, r9, sl, fp, sp}
    7190:	19050106 	stmdbne	r5, {r1, r2, r8}
    7194:	06050520 	streq	r0, [r5], -r0, lsr #10
    7198:	06090523 	streq	r0, [r9], -r3, lsr #10
    719c:	201a0501 	andscs	r0, sl, r1, lsl #10
    71a0:	01000202 	tsteq	r0, r2, lsl #4
    71a4:	00010501 	andeq	r0, r1, r1, lsl #10
    71a8:	00000205 	andeq	r0, r0, r5, lsl #4
    71ac:	a1030000 	mrsge	r0, (UNDEF: 3)
    71b0:	01060109 	tsteq	r6, r9, lsl #2
    71b4:	21060305 	tstcs	r6, r5, lsl #6
    71b8:	01062c05 	tsteq	r6, r5, lsl #24
    71bc:	05203705 	streq	r3, [r0, #-1797]!	; 0xfffff8fb
    71c0:	0c052040 	stceq	0, cr2, [r5], {64}	; 0x40
    71c4:	06030520 	streq	r0, [r3], -r0, lsr #10
    71c8:	2905134d 	stmdbcs	r5, {r0, r2, r3, r6, r8, r9, ip}
    71cc:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    71d0:	0603052e 	streq	r0, [r3], -lr, lsr #10
    71d4:	06060522 	streq	r0, [r6], -r2, lsr #10
    71d8:	06050501 	streq	r0, [r5], -r1, lsl #10
    71dc:	063a0531 			; <UNDEFINED> instruction: 0x063a0531
    71e0:	4a510501 	bmi	14485ec <_Min_Heap_Size+0x1447dec>
    71e4:	05201d05 	streq	r1, [r0, #-3333]!	; 0xfffff2fb
    71e8:	05280603 	streq	r0, [r8, #-1539]!	; 0xfffff9fd
    71ec:	20130601 	andscs	r0, r3, r1, lsl #12
    71f0:	38060505 	stmdacc	r6, {r0, r2, r8, sl}
    71f4:	01063905 	tsteq	r6, r5, lsl #18
    71f8:	024a1d05 	subeq	r1, sl, #320	; 0x140
    71fc:	01010007 	tsteq	r1, r7
    7200:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7204:	00000002 	andeq	r0, r0, r2
    7208:	09bd0300 	ldmibeq	sp!, {r8, r9}
    720c:	13030501 	movwne	r0, #13569	; 0x3501
    7210:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
    7214:	06030501 	streq	r0, [r3], -r1, lsl #10
    7218:	06100523 	ldreq	r0, [r0], -r3, lsr #10
    721c:	20050501 	andcs	r0, r5, r1, lsl #10
    7220:	66062206 	strvs	r2, [r6], -r6, lsl #4
    7224:	24060705 	strcs	r0, [r6], #-1797	; 0xfffff8fb
    7228:	01061605 	tsteq	r6, r5, lsl #12
    722c:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    7230:	3c760315 	ldclcc	3, cr0, [r6], #-84	; 0xffffffac
    7234:	06070520 	streq	r0, [r7], -r0, lsr #10
    7238:	05201003 	streq	r1, [r0, #-3]!
    723c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    7240:	1505200a 	strne	r2, [r5, #-10]
    7244:	203c7003 	eorscs	r7, ip, r3
    7248:	03060805 	movweq	r0, #26629	; 0x6805
    724c:	0b05201d 	bleq	14f2c8 <_Min_Heap_Size+0x14eac8>
    7250:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7254:	3c1c0306 	ldccc	3, cr0, [ip], {6}
    7258:	05520705 	ldrbeq	r0, [r2, #-1797]	; 0xfffff8fb
    725c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    7260:	1505200a 	strne	r2, [r5, #-10]
    7264:	3c7fbf03 	ldclcc	15, cr11, [pc], #-12	; 7260 <_Min_Heap_Size+0x6a60>
    7268:	06050520 	streq	r0, [r5], -r0, lsr #10
    726c:	06201f03 	strteq	r1, [r0], -r3, lsl #30
    7270:	06070574 			; <UNDEFINED> instruction: 0x06070574
    7274:	06160527 	ldreq	r0, [r6], -r7, lsr #10
    7278:	200a0501 	andcs	r0, sl, r1, lsl #10
    727c:	5a031505 	bpl	cc698 <_Min_Heap_Size+0xcbe98>
    7280:	0705203c 	smladxeq	r5, ip, r0, r2
    7284:	202c0306 	eorcs	r0, ip, r6, lsl #6
    7288:	01061505 	tsteq	r6, r5, lsl #10
    728c:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    7290:	3c540315 	mrrccc	3, 1, r0, r4, cr5
    7294:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    7298:	2620200c 	strtcs	r2, [r0], -ip
    729c:	030e0520 	movweq	r0, #58656	; 0xe520
    72a0:	05202011 	streq	r2, [r0, #-17]!	; 0xffffffef
    72a4:	26202510 			; <UNDEFINED> instruction: 0x26202510
    72a8:	030e0520 	movweq	r0, #58656	; 0xe520
    72ac:	05202010 	streq	r2, [r0, #-16]!
    72b0:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    72b4:	200a0310 	andcs	r0, sl, r0, lsl r3
    72b8:	28060305 	stmdacs	r6, {r0, r2, r8, r9}
    72bc:	13060105 	movwne	r0, #24837	; 0x6105
    72c0:	01000102 	tsteq	r0, r2, lsl #2
    72c4:	00010501 	andeq	r0, r1, r1, lsl #10
    72c8:	00000205 	andeq	r0, r0, r5, lsl #4
    72cc:	aa030000 	bge	c72d4 <_Min_Heap_Size+0xc6ad4>
    72d0:	01060101 	tsteq	r6, r1, lsl #2
    72d4:	2f060305 	svccs	0x00060305
    72d8:	06180513 			; <UNDEFINED> instruction: 0x06180513
    72dc:	06030501 	streq	r0, [r3], -r1, lsl #10
    72e0:	0505152f 	streq	r1, [r5, #-1327]	; 0xfffffad1
    72e4:	03050106 	movweq	r0, #20742	; 0x5106
    72e8:	02005006 	andeq	r5, r0, #6
    72ec:	4a060104 	bmi	187704 <_Min_Heap_Size+0x186f04>
    72f0:	02040200 	andeq	r0, r4, #0, 4
    72f4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    72f8:	02003c03 	andeq	r3, r0, #768	; 0x300
    72fc:	003c0404 	eorseq	r0, ip, r4, lsl #8
    7300:	3c050402 	cfstrscc	mvf0, [r5], {2}
    7304:	06040200 	streq	r0, [r4], -r0, lsl #4
    7308:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    730c:	02003c07 	andeq	r3, r0, #1792	; 0x700
    7310:	003c0804 	eorseq	r0, ip, r4, lsl #16
    7314:	4a090402 	bmi	248324 <_Min_Heap_Size+0x247b24>
    7318:	0a040200 	beq	107b20 <_Min_Heap_Size+0x107320>
    731c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7320:	02003c0b 	andeq	r3, r0, #2816	; 0xb00
    7324:	003c0c04 	eorseq	r0, ip, r4, lsl #24
    7328:	3c0d0402 	cfstrscc	mvf0, [sp], {2}
    732c:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    7330:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7334:	02003c0f 	andeq	r3, r0, #3840	; 0xf00
    7338:	003c1004 	eorseq	r1, ip, r4
    733c:	2e100402 	cfmulscs	mvf0, mvf0, mvf2
    7340:	02002f06 	andeq	r2, r0, #6, 30
    7344:	2e060104 	adfcss	f0, f6, f4
    7348:	02040200 	andeq	r0, r4, #0, 4
    734c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7350:	02003c03 	andeq	r3, r0, #768	; 0x300
    7354:	003c0404 	eorseq	r0, ip, r4, lsl #8
    7358:	3c050402 	cfstrscc	mvf0, [r5], {2}
    735c:	06040200 	streq	r0, [r4], -r0, lsl #4
    7360:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7364:	3d063c07 	stccc	12, cr3, [r6, #-28]	; 0xffffffe4
    7368:	01040200 	mrseq	r0, R12_usr
    736c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    7370:	062e0204 	strteq	r0, [lr], -r4, lsl #4
    7374:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    7378:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
    737c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    7380:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
    7384:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    7388:	002e0601 	eoreq	r0, lr, r1, lsl #12
    738c:	3c020402 	cfstrscc	mvf0, [r2], {2}
    7390:	02003d06 	andeq	r3, r0, #384	; 0x180
    7394:	2e060104 	adfcss	f0, f6, f4
    7398:	02040200 	andeq	r0, r4, #0, 4
    739c:	003d063c 	eorseq	r0, sp, ip, lsr r6
    73a0:	06010402 	streq	r0, [r1], -r2, lsl #8
    73a4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    73a8:	2f063c02 	svccs	0x00063c02
    73ac:	01040200 	mrseq	r0, R12_usr
    73b0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    73b4:	003c0204 	eorseq	r0, ip, r4, lsl #4
    73b8:	3c030402 	cfstrscc	mvf0, [r3], {2}
    73bc:	02003d06 	andeq	r3, r0, #384	; 0x180
    73c0:	2e060104 	adfcss	f0, f6, f4
    73c4:	10053106 	andne	r3, r5, r6, lsl #2
    73c8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    73cc:	3d220620 	stccc	6, cr0, [r2, #-128]!	; 0xffffff80
    73d0:	01040200 	mrseq	r0, R12_usr
    73d4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    73d8:	003c0204 	eorseq	r0, ip, r4, lsl #4
    73dc:	3c030402 	cfstrscc	mvf0, [r3], {2}
    73e0:	02003d06 	andeq	r3, r0, #384	; 0x180
    73e4:	2e060104 	adfcss	f0, f6, f4
    73e8:	02040200 	andeq	r0, r4, #0, 4
    73ec:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    73f0:	03053c03 	movweq	r3, #23555	; 0x5c03
    73f4:	0f054006 	svceq	0x00054006
    73f8:	03050106 	movweq	r0, #20742	; 0x5106
    73fc:	3c013f06 	stccc	15, cr3, [r1], {6}
    7400:	08055b15 	stmdaeq	r5, {r0, r2, r4, r8, r9, fp, ip, lr}
    7404:	060e0501 	streq	r0, [lr], -r1, lsl #10
    7408:	20180501 	andscs	r0, r8, r1, lsl #10
    740c:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    7410:	053f0605 	ldreq	r0, [pc, #-1541]!	; 6e13 <_Min_Heap_Size+0x6613>
    7414:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    7418:	07052e17 	smladeq	r5, r7, lr, r2
    741c:	05310620 	ldreq	r0, [r1, #-1568]!	; 0xfffff9e0
    7420:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    7424:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
    7428:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    742c:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    7430:	ce030601 	cfmadd32gt	mvax0, mvfx0, mvfx3, mvfx1
    7434:	03050100 	movweq	r0, #20736	; 0x5100
    7438:	08040200 	stmdaeq	r4, {r9}
    743c:	207f8b03 	rsbscs	r8, pc, r3, lsl #22
    7440:	03040200 	movweq	r0, #16896	; 0x4200
    7444:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
    7448:	02005902 	andeq	r5, r0, #32768	; 0x8000
    744c:	00590204 	subseq	r0, r9, r4, lsl #4
    7450:	59030402 	stmdbpl	r3, {r1, sl}
    7454:	03040200 	movweq	r0, #16896	; 0x4200
    7458:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
    745c:	02005903 	andeq	r5, r0, #49152	; 0xc000
    7460:	00590404 	subseq	r0, r9, r4, lsl #8
    7464:	59020402 	stmdbpl	r2, {r1, sl}
    7468:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    746c:	005d0104 	subseq	r0, sp, r4, lsl #2
    7470:	59040402 	stmdbpl	r4, {r1, sl}
    7474:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    7478:	06030559 			; <UNDEFINED> instruction: 0x06030559
    747c:	05581d03 	ldrbeq	r1, [r8, #-3331]	; 0xfffff2fd
    7480:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    7484:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    7488:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    748c:	05340603 	ldreq	r0, [r4, #-1539]!	; 0xfffff9fd
    7490:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    7494:	2a052036 	bcs	14f574 <_Min_Heap_Size+0x14ed74>
    7498:	21150520 	tstcs	r5, r0, lsr #10
    749c:	051f4805 	ldreq	r4, [pc, #-2053]	; 6c9f <_Min_Heap_Size+0x649f>
    74a0:	2a052136 	bcs	14f980 <_Min_Heap_Size+0x14f180>
    74a4:	21150520 	tstcs	r5, r0, lsr #10
    74a8:	051f4805 	ldreq	r4, [pc, #-2053]	; 6cab <_Min_Heap_Size+0x64ab>
    74ac:	2a052136 	bcs	14f98c <_Min_Heap_Size+0x14f18c>
    74b0:	21150520 	tstcs	r5, r0, lsr #10
    74b4:	051f4805 	ldreq	r4, [pc, #-2053]	; 6cb7 <_Min_Heap_Size+0x64b7>
    74b8:	2a052136 	bcs	14f998 <_Min_Heap_Size+0x14f198>
    74bc:	1d070520 	cfstr32ne	mvfx0, [r7, #-128]	; 0xffffff80
    74c0:	26060305 	strcs	r0, [r6], -r5, lsl #6
    74c4:	01061005 	tsteq	r6, r5
    74c8:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    74cc:	05350603 	ldreq	r0, [r5, #-1539]!	; 0xfffff9fd
    74d0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    74d4:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    74d8:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    74dc:	03052007 	movweq	r2, #20487	; 0x5007
    74e0:	07052306 	streq	r2, [r5, -r6, lsl #6]
    74e4:	03050106 	movweq	r0, #20742	; 0x5106
    74e8:	14053106 	strne	r3, [r5], #-262	; 0xfffffefa
    74ec:	07050106 	streq	r0, [r5, -r6, lsl #2]
    74f0:	06030520 	streq	r0, [r3], -r0, lsr #10
    74f4:	06050523 	streq	r0, [r5], -r3, lsr #10
    74f8:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
    74fc:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    7500:	05052009 	streq	r2, [r5, #-9]
    7504:	13052406 	movwne	r2, #21510	; 0x5406
    7508:	08050106 	stmdaeq	r5, {r1, r2, r8}
    750c:	06070520 	streq	r0, [r7], -r0, lsr #10
    7510:	060b0522 	streq	r0, [fp], -r2, lsr #10
    7514:	3c0a0501 	cfstr32cc	mvfx0, [sl], {1}
    7518:	03060305 	movweq	r0, #25349	; 0x6305
    751c:	1705200e 	strne	r2, [r5, -lr]
    7520:	03050106 	movweq	r0, #20742	; 0x5106
    7524:	20052406 	andcs	r2, r5, r6, lsl #8
    7528:	03050106 	movweq	r0, #20742	; 0x5106
    752c:	1d053f06 	stcne	15, cr3, [r5, #-24]	; 0xffffffe8
    7530:	16050106 	strne	r0, [r5], -r6, lsl #2
    7534:	2e0e0520 	cfsh32cs	mvfx0, mvfx14, #16
    7538:	23060305 	movwcs	r0, #25349	; 0x6305
    753c:	01061305 	tsteq	r6, r5, lsl #6
    7540:	06030520 	streq	r0, [r3], -r0, lsr #10
    7544:	060f0523 	streq	r0, [pc], -r3, lsr #10
    7548:	06030501 	streq	r0, [r3], -r1, lsl #10
    754c:	060a053e 			; <UNDEFINED> instruction: 0x060a053e
    7550:	06050501 	streq	r0, [r5], -r1, lsl #10
    7554:	05744a03 	ldrbeq	r4, [r4, #-2563]!	; 0xfffff5fd
    7558:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    755c:	2105202d 	tstcs	r5, sp, lsr #32
    7560:	20090520 	andcs	r0, r9, r0, lsr #10
    7564:	1c030620 	stcne	6, cr0, [r3], {32}
    7568:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    756c:	06090501 	streq	r0, [r9], -r1, lsl #10
    7570:	06150531 			; <UNDEFINED> instruction: 0x06150531
    7574:	06090501 	streq	r0, [r9], -r1, lsl #10
    7578:	0610053e 			; <UNDEFINED> instruction: 0x0610053e
    757c:	030c0501 	movweq	r0, #50433	; 0xc501
    7580:	20207f9c 	mlacs	r0, ip, pc, r7	; <UNPREDICTABLE>
    7584:	01000102 	tsteq	r0, r2, lsl #2
    7588:	00010501 	andeq	r0, r1, r1, lsl #10
    758c:	00000205 	andeq	r0, r0, r5, lsl #4
    7590:	b5030000 	strlt	r0, [r3, #-0]
    7594:	03050102 	movweq	r0, #20738	; 0x5102
    7598:	05051513 	streq	r1, [r5, #-1299]	; 0xfffffaed
    759c:	01050106 	tsteq	r5, r6, lsl #2
    75a0:	0603052a 	streq	r0, [r3], -sl, lsr #10
    75a4:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    75a8:	2e01060a 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx10
    75ac:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    75b0:	00350603 	eorseq	r0, r5, r3, lsl #12
    75b4:	06010402 	streq	r0, [r1], -r2, lsl #8
    75b8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    75bc:	02003c02 	andeq	r3, r0, #512	; 0x200
    75c0:	003c0304 	eorseq	r0, ip, r4, lsl #6
    75c4:	3c040402 	cfstrscc	mvf0, [r4], {2}
    75c8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    75cc:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    75d0:	02003c06 	andeq	r3, r0, #1536	; 0x600
    75d4:	003c0704 	eorseq	r0, ip, r4, lsl #14
    75d8:	3c080402 	cfstrscc	mvf0, [r8], {2}
    75dc:	09040200 	stmdbeq	r4, {r9}
    75e0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    75e4:	02003c0a 	andeq	r3, r0, #2560	; 0xa00
    75e8:	003c0b04 	eorseq	r0, ip, r4, lsl #22
    75ec:	3c0c0402 	cfstrscc	mvf0, [ip], {2}
    75f0:	0d040200 	sfmeq	f0, 4, [r4, #-0]
    75f4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    75f8:	02003c0e 	andeq	r3, r0, #3584	; 0xe00
    75fc:	003c0f04 	eorseq	r0, ip, r4, lsl #30
    7600:	3c100402 	cfldrscc	mvf0, [r0], {2}
    7604:	055b5b06 	ldrbeq	r5, [fp, #-2822]	; 0xfffff4fa
    7608:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    760c:	03052018 	movweq	r2, #20504	; 0x5018
    7610:	07053106 	streq	r3, [r5, -r6, lsl #2]
    7614:	18050106 	stmdane	r5, {r1, r2, r8}
    7618:	06030520 	streq	r0, [r3], -r0, lsr #10
    761c:	06070523 	streq	r0, [r7], -r3, lsr #10
    7620:	20180501 	andscs	r0, r8, r1, lsl #10
    7624:	23060305 	movwcs	r0, #25349	; 0x6305
    7628:	01060705 	tsteq	r6, r5, lsl #14
    762c:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    7630:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    7634:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    7638:	03052018 	movweq	r2, #20504	; 0x5018
    763c:	07052306 	streq	r2, [r5, -r6, lsl #6]
    7640:	18050106 	stmdane	r5, {r1, r2, r8}
    7644:	06030520 	streq	r0, [r3], -r0, lsr #10
    7648:	06200531 			; <UNDEFINED> instruction: 0x06200531
    764c:	06030501 	streq	r0, [r3], -r1, lsl #10
    7650:	061a053f 			; <UNDEFINED> instruction: 0x061a053f
    7654:	06030501 	streq	r0, [r3], -r1, lsl #10
    7658:	061e0521 	ldreq	r0, [lr], -r1, lsr #10
    765c:	06030501 	streq	r0, [r3], -r1, lsl #10
    7660:	061c0521 	ldreq	r0, [ip], -r1, lsr #10
    7664:	06030501 	streq	r0, [r3], -r1, lsl #10
    7668:	06200521 	strteq	r0, [r0], -r1, lsr #10
    766c:	06030501 	streq	r0, [r3], -r1, lsl #10
    7670:	061b0521 	ldreq	r0, [fp], -r1, lsr #10
    7674:	06030501 	streq	r0, [r3], -r1, lsl #10
    7678:	061b0521 	ldreq	r0, [fp], -r1, lsr #10
    767c:	06030501 	streq	r0, [r3], -r1, lsl #10
    7680:	061d0523 	ldreq	r0, [sp], -r3, lsr #10
    7684:	20160501 	andscs	r0, r6, r1, lsl #10
    7688:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    768c:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    7690:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    7694:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    7698:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    769c:	01310603 	teqeq	r1, r3, lsl #12
    76a0:	0a05142e 	beq	14c760 <_Min_Heap_Size+0x14bf60>
    76a4:	01050106 	tsteq	r5, r6, lsl #2
    76a8:	030c0521 	movweq	r0, #50465	; 0xc521
    76ac:	01052046 	tsteq	r5, r6, asr #32
    76b0:	02203a03 	eoreq	r3, r0, #12288	; 0x3000
    76b4:	01010006 	tsteq	r1, r6
    76b8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    76bc:	00000002 	andeq	r0, r0, r2
    76c0:	03970300 	orrseq	r0, r7, #0, 6
    76c4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    76c8:	15670603 	strbne	r0, [r7, #-1539]!	; 0xfffff9fd
    76cc:	062e2006 	strteq	r2, [lr], -r6
    76d0:	02000131 	andeq	r0, r0, #1073741836	; 0x4000000c
    76d4:	004a0204 	subeq	r0, sl, r4, lsl #4
    76d8:	3c020402 	cfstrscc	mvf0, [r2], {2}
    76dc:	02040200 	andeq	r0, r4, #0, 4
    76e0:	00210514 	eoreq	r0, r1, r4, lsl r5
    76e4:	06020402 	streq	r0, [r2], -r2, lsl #8
    76e8:	00050501 	andeq	r0, r5, r1, lsl #10
    76ec:	3c020402 	cfstrscc	mvf0, [r2], {2}
    76f0:	2e110306 	cdpcs	3, 1, cr0, cr1, cr6, {0}
    76f4:	05153c01 	ldreq	r3, [r5, #-3073]	; 0xfffff3ff
    76f8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    76fc:	03052301 	movweq	r2, #21249	; 0x5301
    7700:	01040200 	mrseq	r0, R12_usr
    7704:	002e6403 	eoreq	r6, lr, r3, lsl #8
    7708:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    770c:	01040200 	mrseq	r0, R12_usr
    7710:	06050520 	streq	r0, [r5], -r0, lsr #10
    7714:	06110544 	ldreq	r0, [r1], -r4, asr #10
    7718:	06050501 	streq	r0, [r5], -r1, lsl #10
    771c:	0615053f 			; <UNDEFINED> instruction: 0x0615053f
    7720:	06050501 	streq	r0, [r5], -r1, lsl #10
    7724:	1505694d 	strne	r6, [r5, #-2381]	; 0xfffff6b3
    7728:	586c0306 	stmdapl	ip!, {r1, r2, r8, r9}^
    772c:	02340305 	eorseq	r0, r4, #335544320	; 0x14000000
    7730:	01010005 	tsteq	r1, r5
    7734:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7738:	00000002 	andeq	r0, r0, r2
    773c:	03c30300 	biceq	r0, r3, #0, 6
    7740:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7744:	15670603 	strbne	r0, [r7, #-1539]!	; 0xfffff9fd
    7748:	01063805 	tsteq	r6, r5, lsl #16
    774c:	31060305 	tstcc	r6, r5, lsl #6
    7750:	062e2006 	strteq	r2, [lr], -r6
    7754:	02000131 	andeq	r0, r0, #1073741836	; 0x4000000c
    7758:	004a0204 	subeq	r0, sl, r4, lsl #4
    775c:	3c020402 	cfstrscc	mvf0, [r2], {2}
    7760:	02040200 	andeq	r0, r4, #0, 4
    7764:	00210514 	eoreq	r0, r1, r4, lsl r5
    7768:	06020402 	streq	r0, [r2], -r2, lsl #8
    776c:	00050501 	andeq	r0, r5, r1, lsl #10
    7770:	3c020402 	cfstrscc	mvf0, [r2], {2}
    7774:	2e1c0306 	cdpcs	3, 1, cr0, cr12, cr6, {0}
    7778:	05153c01 	ldreq	r3, [r5, #-3073]	; 0xfffff3ff
    777c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    7780:	03052401 	movweq	r2, #21505	; 0x5401
    7784:	01040200 	mrseq	r0, R12_usr
    7788:	002e5803 	eoreq	r5, lr, r3, lsl #16
    778c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    7790:	01040200 	mrseq	r0, R12_usr
    7794:	06050520 	streq	r0, [r5], -r0, lsr #10
    7798:	06110544 	ldreq	r0, [r1], -r4, asr #10
    779c:	06050501 	streq	r0, [r5], -r1, lsl #10
    77a0:	0615053f 			; <UNDEFINED> instruction: 0x0615053f
    77a4:	06050501 	streq	r0, [r5], -r1, lsl #10
    77a8:	1f056931 	svcne	0x00056931
    77ac:	18050106 	stmdane	r5, {r1, r2, r8}
    77b0:	2e100520 	cfmul64cs	mvdx0, mvdx0, mvdx0
    77b4:	31060505 	tstcc	r6, r5, lsl #10
    77b8:	01060905 	tsteq	r6, r5, lsl #18
    77bc:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    77c0:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
    77c4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    77c8:	22062007 	andcs	r2, r6, #7
    77cc:	01060b05 	tsteq	r6, r5, lsl #22
    77d0:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    77d4:	054e0605 	strbeq	r0, [lr, #-1541]	; 0xfffff9fb
    77d8:	5e030615 	mcrpl	6, 0, r0, cr3, cr5, {0}
    77dc:	03030558 	movweq	r0, #13656	; 0x3558
    77e0:	04022e09 	streq	r2, [r2], #-3593	; 0xfffff1f7
    77e4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    77e8:	02050001 	andeq	r0, r5, #1
    77ec:	080014e8 	stmdaeq	r0, {r3, r5, r6, r7, sl, ip}
    77f0:	01048103 	tsteq	r4, r3, lsl #2
    77f4:	03050106 	movweq	r0, #20742	; 0x5106
    77f8:	38053006 	stmdacc	r5, {r1, r2, ip, sp}
    77fc:	03050106 	movweq	r0, #20742	; 0x5106
    7800:	18052206 	stmdane	r5, {r1, r2, r9, sp}
    7804:	03050106 	movweq	r0, #20742	; 0x5106
    7808:	0a053006 	beq	153828 <_Min_Heap_Size+0x153028>
    780c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7810:	0530063c 	ldreq	r0, [r0, #-1596]!	; 0xfffff9c4
    7814:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    7818:	01310605 	teqeq	r1, r5, lsl #12
    781c:	0c05143c 	cfstrseq	mvf1, [r5], {60}	; 0x3c
    7820:	01050106 	tsteq	r5, r6, lsl #2
    7824:	20202d03 	eorcs	r2, r0, r3, lsl #26
    7828:	03060505 	movweq	r0, #25861	; 0x6505
    782c:	09052058 	stmdbeq	r5, {r3, r4, r6, sp}
    7830:	19050106 	stmdbne	r5, {r1, r2, r8}
    7834:	06050520 	streq	r0, [r5], -r0, lsr #10
    7838:	0609054b 	streq	r0, [r9], -fp, asr #10
    783c:	20190501 	andscs	r0, r9, r1, lsl #10
    7840:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
    7844:	01060d05 	tsteq	r6, r5, lsl #26
    7848:	06200705 	strteq	r0, [r0], -r5, lsl #14
    784c:	060b0522 	streq	r0, [fp], -r2, lsr #10
    7850:	201b0501 	andscs	r0, fp, r1, lsl #10
    7854:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    7858:	010a055b 	tsteq	sl, fp, asr r5
    785c:	01061005 	tsteq	r6, r5
    7860:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    7864:	0705200a 	streq	r2, [r5, -sl]
    7868:	0b053f06 	bleq	157488 <_Min_Heap_Size+0x156c88>
    786c:	19050106 	stmdbne	r5, {r1, r2, r8}
    7870:	2009052e 	andcs	r0, r9, lr, lsr #10
    7874:	19053106 	stmdbne	r5, {r1, r2, r8, ip, sp}
    7878:	09050106 	stmdbeq	r5, {r1, r2, r8}
    787c:	15053106 	strne	r3, [r5, #-262]	; 0xfffffefa
    7880:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7884:	3c013f06 	stccc	15, cr3, [r1], {6}
    7888:	06100514 			; <UNDEFINED> instruction: 0x06100514
    788c:	00350501 	eorseq	r0, r5, r1, lsl #10
    7890:	03010402 	movweq	r0, #5122	; 0x1402
    7894:	2d052069 	stccs	0, cr2, [r5, #-420]	; 0xfffffe5c
    7898:	01040200 	mrseq	r0, R12_usr
    789c:	06050520 	streq	r0, [r5], -r0, lsr #10
    78a0:	053c1c03 	ldreq	r1, [ip, #-3075]!	; 0xfffff3fd
    78a4:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    78a8:	10052018 	andne	r2, r5, r8, lsl r0
    78ac:	0605052e 	streq	r0, [r5], -lr, lsr #10
    78b0:	06110523 	ldreq	r0, [r1], -r3, lsr #10
    78b4:	06050501 	streq	r0, [r5], -r1, lsl #10
    78b8:	053c013f 	ldreq	r0, [ip, #-319]!	; 0xfffffec1
    78bc:	0a051403 	beq	14c8d0 <_Min_Heap_Size+0x14c0d0>
    78c0:	01020106 	tsteq	r2, r6, lsl #2
    78c4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    78c8:	02050001 	andeq	r0, r5, #1
    78cc:	0800157c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip}
    78d0:	0104c403 	tsteq	r4, r3, lsl #8
    78d4:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    78d8:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    78dc:	30063c05 	andcc	r3, r6, r5, lsl #24
    78e0:	01061505 	tsteq	r6, r5, lsl #10
    78e4:	2f060505 	svccs	0x00060505
    78e8:	01060c05 	tsteq	r6, r5, lsl #24
    78ec:	06050520 	streq	r0, [r5], -r0, lsr #10
    78f0:	06110525 	ldreq	r0, [r1], -r5, lsr #10
    78f4:	06050501 	streq	r0, [r5], -r1, lsl #10
    78f8:	5b03053f 	blpl	c8dfc <_Min_Heap_Size+0xc85fc>
    78fc:	01060a05 	tsteq	r6, r5, lsl #20
    7900:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
    7904:	01010001 	tsteq	r1, r1
    7908:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    790c:	00000002 	andeq	r0, r0, r2
    7910:	04e20300 	strbteq	r0, [r2], #768	; 0x300
    7914:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7918:	13590603 	cmpne	r9, #3145728	; 0x300000
    791c:	06180513 			; <UNDEFINED> instruction: 0x06180513
    7920:	06030501 	streq	r0, [r3], -r1, lsl #10
    7924:	0514152f 	ldreq	r1, [r4, #-1327]	; 0xfffffad1
    7928:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    792c:	31063c05 	tstcc	r6, r5, lsl #24
    7930:	01061505 	tsteq	r6, r5, lsl #10
    7934:	2f060505 	svccs	0x00060505
    7938:	05133c01 	ldreq	r3, [r3, #-3073]	; 0xfffff3ff
    793c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    7940:	00f10301 	rscseq	r0, r1, r1, lsl #6
    7944:	03052e20 	movweq	r2, #24096	; 0x5e20
    7948:	7f930306 	svcvc	0x00930306
    794c:	060c0520 	streq	r0, [ip], -r0, lsr #10
    7950:	20160501 	andscs	r0, r6, r1, lsl #10
    7954:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    7958:	05430603 	strbeq	r0, [r3, #-1539]	; 0xfffff9fd
    795c:	06010605 	streq	r0, [r1], -r5, lsl #12
    7960:	062e053f 			; <UNDEFINED> instruction: 0x062e053f
    7964:	20140501 	andscs	r0, r4, r1, lsl #10
    7968:	52060305 	andpl	r0, r6, #335544320	; 0x14000000
    796c:	01062405 	tsteq	r6, r5, lsl #8
    7970:	21060305 	tstcs	r6, r5, lsl #6
    7974:	01060a05 	tsteq	r6, r5, lsl #20
    7978:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    797c:	05010805 	streq	r0, [r1, #-2053]	; 0xfffff7fb
    7980:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    7984:	053c0601 	ldreq	r0, [ip, #-1537]!	; 0xfffff9ff
    7988:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    798c:	05052001 	streq	r2, [r5, #-1]
    7990:	07053f06 	streq	r3, [r5, -r6, lsl #30]
    7994:	3e060106 	adfccs	f0, f6, f6
    7998:	01060905 	tsteq	r6, r5, lsl #18
    799c:	02001d05 	andeq	r1, r0, #320	; 0x140
    79a0:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    79a4:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    79a8:	19052e01 	stmdbne	r5, {r0, r9, sl, fp, sp}
    79ac:	01040200 	mrseq	r0, R12_usr
    79b0:	0605052e 	streq	r0, [r5], -lr, lsr #10
    79b4:	052e1003 	streq	r1, [lr, #-3]!
    79b8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    79bc:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    79c0:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    79c4:	07052024 	streq	r2, [r5, -r4, lsr #32]
    79c8:	0531062e 	ldreq	r0, [r1, #-1582]!	; 0xfffff9d2
    79cc:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    79d0:	054d0607 	strbeq	r0, [sp, #-1543]	; 0xfffff9f9
    79d4:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    79d8:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    79dc:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    79e0:	07052024 	streq	r2, [r5, -r4, lsr #32]
    79e4:	0531062e 	ldreq	r0, [r1, #-1582]!	; 0xfffff9d2
    79e8:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    79ec:	054d0607 	strbeq	r0, [sp, #-1543]	; 0xfffff9f9
    79f0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    79f4:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    79f8:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    79fc:	07052025 	streq	r2, [r5, -r5, lsr #32]
    7a00:	0531062e 	ldreq	r0, [r1, #-1582]!	; 0xfffff9d2
    7a04:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    7a08:	054d0607 	strbeq	r0, [sp, #-1543]	; 0xfffff9f9
    7a0c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7a10:	be030605 	cfmadd32lt	mvax0, mvfx0, mvfx3, mvfx5
    7a14:	15052e7f 	strne	r2, [r5, #-3711]	; 0xfffff181
    7a18:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7a1c:	0c053d06 	stceq	13, cr3, [r5], {6}
    7a20:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    7a24:	0c030605 	stceq	6, cr0, [r3], {5}
    7a28:	062e0520 	strteq	r0, [lr], -r0, lsr #10
    7a2c:	20140501 	andscs	r0, r4, r1, lsl #10
    7a30:	0609054a 	streq	r0, [r9], -sl, asr #10
    7a34:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    7a38:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    7a3c:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    7a40:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    7a44:	013f0609 	teqeq	pc, r9, lsl #12
    7a48:	1005143c 	andne	r1, r5, ip, lsr r4
    7a4c:	03050106 	movweq	r0, #20742	; 0x5106
    7a50:	2e230306 	cdpcs	3, 2, cr0, cr3, cr6, {0}
    7a54:	01060a05 	tsteq	r6, r5, lsl #20
    7a58:	06200505 	strteq	r0, [r0], -r5, lsl #10
    7a5c:	060d0522 	streq	r0, [sp], -r2, lsr #10
    7a60:	20070501 	andcs	r0, r7, r1, lsl #10
    7a64:	03060305 	movweq	r0, #25349	; 0x6305
    7a68:	05053c12 	streq	r3, [r5, #-3090]	; 0xfffff3ee
    7a6c:	3f060106 	svccc	0x00060106
    7a70:	01063f05 	tsteq	r6, r5, lsl #30
    7a74:	05203805 	streq	r3, [r0, #-2053]!	; 0xfffff7fb
    7a78:	05052e10 	streq	r2, [r5, #-3600]	; 0xfffff1f0
    7a7c:	11052206 	tstne	r5, r6, lsl #4
    7a80:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7a84:	3c013f06 	stccc	15, cr3, [r1], {6}
    7a88:	1a060a05 	bne	18a2a4 <_Min_Heap_Size+0x189aa4>
    7a8c:	03060705 	movweq	r0, #26373	; 0x6705
    7a90:	053f2e60 	ldreq	r2, [pc, #-3680]!	; 6c38 <_Min_Heap_Size+0x6438>
    7a94:	05010641 	streq	r0, [r1, #-1601]	; 0xfffff9bf
    7a98:	1205203a 	andne	r2, r5, #58	; 0x3a
    7a9c:	0607052e 	streq	r0, [r7], -lr, lsr #10
    7aa0:	06120523 	ldreq	r0, [r2], -r3, lsr #10
    7aa4:	06070501 	streq	r0, [r7], -r1, lsl #10
    7aa8:	143c013f 	ldrtne	r0, [ip], #-319	; 0xfffffec1
    7aac:	01060e05 	tsteq	r6, r5, lsl #28
    7ab0:	03060505 	movweq	r0, #25861	; 0x6505
    7ab4:	2c052012 	stccs	0, cr2, [r5], {18}
    7ab8:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    7abc:	2e100520 	cfmul64cs	mvdx0, mvdx0, mvdx0
    7ac0:	02230a05 	eoreq	r0, r3, #20480	; 0x5000
    7ac4:	01010002 	tsteq	r1, r2
    7ac8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7acc:	00000002 	andeq	r0, r0, r2
    7ad0:	05ea0300 	strbeq	r0, [sl, #768]!	; 0x300
    7ad4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7ad8:	133d0603 	teqne	sp, #3145728	; 0x300000
    7adc:	01061105 	tsteq	r6, r5, lsl #2
    7ae0:	2f060305 	svccs	0x00060305
    7ae4:	01062605 	tsteq	r6, r5, lsl #12
    7ae8:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    7aec:	054d0603 	strbeq	r0, [sp, #-1539]	; 0xfffff9fd
    7af0:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    7af4:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    7af8:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    7afc:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    7b00:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    7b04:	06052023 	streq	r2, [r5], -r3, lsr #32
    7b08:	0605052e 	streq	r0, [r5], -lr, lsr #10
    7b0c:	06080530 			; <UNDEFINED> instruction: 0x06080530
    7b10:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    7b14:	1b053f06 	blne	157734 <_Min_Heap_Size+0x156f34>
    7b18:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7b1c:	2c054d06 	stccs	13, cr4, [r5], {6}
    7b20:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    7b24:	2e120520 	cfmul64cs	mvdx0, mvdx2, mvdx0
    7b28:	23060705 	movwcs	r0, #26373	; 0x6705
    7b2c:	01061705 	tsteq	r6, r5, lsl #14
    7b30:	4e060305 	cdpmi	3, 0, cr0, cr6, cr5, {0}
    7b34:	01062a05 	tsteq	r6, r5, lsl #20
    7b38:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    7b3c:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    7b40:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    7b44:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7b48:	053f062e 	ldreq	r0, [pc, #-1582]!	; 7522 <_Min_Heap_Size+0x6d22>
    7b4c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7b50:	05230607 	streq	r0, [r3, #-1543]!	; 0xfffff9f9
    7b54:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    7b58:	054e0603 	strbeq	r0, [lr, #-1539]	; 0xfffff9fd
    7b5c:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    7b60:	06052024 	streq	r2, [r5], -r4, lsr #32
    7b64:	0605052e 	streq	r0, [r5], -lr, lsr #10
    7b68:	06080530 			; <UNDEFINED> instruction: 0x06080530
    7b6c:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    7b70:	12053f06 	andne	r3, r5, #6, 30
    7b74:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7b78:	17052306 	strne	r2, [r5, -r6, lsl #6]
    7b7c:	03050106 	movweq	r0, #20742	; 0x5106
    7b80:	2a054e06 	bcs	15b3a0 <_Min_Heap_Size+0x15aba0>
    7b84:	23050106 	movwcs	r0, #20742	; 0x5106
    7b88:	2e060520 	cfsh32cs	mvfx0, mvfx6, #16
    7b8c:	30060505 	andcc	r0, r6, r5, lsl #10
    7b90:	01060805 	tsteq	r6, r5, lsl #16
    7b94:	062e0705 	strteq	r0, [lr], -r5, lsl #14
    7b98:	0612053f 			; <UNDEFINED> instruction: 0x0612053f
    7b9c:	06070501 	streq	r0, [r7], -r1, lsl #10
    7ba0:	06100523 	ldreq	r0, [r0], -r3, lsr #10
    7ba4:	201a0501 	andscs	r0, sl, r1, lsl #10
    7ba8:	06200905 	strteq	r0, [r0], -r5, lsl #18
    7bac:	061b053f 			; <UNDEFINED> instruction: 0x061b053f
    7bb0:	200b0501 	andcs	r0, fp, r1, lsl #10
    7bb4:	12053e06 	andne	r3, r5, #6, 28	; 0x60
    7bb8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    7bbc:	06230620 	strteq	r0, [r3], -r0, lsr #12
    7bc0:	060b0520 	streq	r0, [fp], -r0, lsr #10
    7bc4:	06120534 			; <UNDEFINED> instruction: 0x06120534
    7bc8:	200d0501 	andcs	r0, sp, r1, lsl #10
    7bcc:	20062306 	andcs	r2, r6, r6, lsl #6
    7bd0:	35060905 	strcc	r0, [r6, #-2309]	; 0xfffff6fb
    7bd4:	01061b05 	tsteq	r6, r5, lsl #22
    7bd8:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    7bdc:	061f053f 			; <UNDEFINED> instruction: 0x061f053f
    7be0:	06090501 	streq	r0, [r9], -r1, lsl #10
    7be4:	0610054d 	ldreq	r0, [r0], -sp, asr #10
    7be8:	200b0501 	andcs	r0, fp, r1, lsl #10
    7bec:	20062306 	andcs	r2, r6, r6, lsl #6
    7bf0:	26060305 	strcs	r0, [r6], -r5, lsl #6
    7bf4:	01062a05 	tsteq	r6, r5, lsl #20
    7bf8:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    7bfc:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    7c00:	08053006 	stmdaeq	r5, {r1, r2, ip, sp}
    7c04:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7c08:	053f062e 	ldreq	r0, [pc, #-1582]!	; 75e2 <_Min_Heap_Size+0x6de2>
    7c0c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    7c10:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    7c14:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    7c18:	07053c09 	streq	r3, [r5, -r9, lsl #24]
    7c1c:	2e1b0306 	cdpcs	3, 1, cr0, cr11, cr6, {0}
    7c20:	01061005 	tsteq	r6, r5
    7c24:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    7c28:	3f062009 	svccc	0x00062009
    7c2c:	01061b05 	tsteq	r6, r5, lsl #22
    7c30:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    7c34:	0612053e 			; <UNDEFINED> instruction: 0x0612053e
    7c38:	200d0501 	andcs	r0, sp, r1, lsl #10
    7c3c:	09053106 	stmdbeq	r5, {r1, r2, r8, ip, sp}
    7c40:	053c6003 	ldreq	r6, [ip, #-3]!
    7c44:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    7c48:	0905201d 	stmdbeq	r5, {r0, r2, r3, r4, sp}
    7c4c:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
    7c50:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    7c54:	06090520 	streq	r0, [r9], -r0, lsr #10
    7c58:	0611054c 	ldreq	r0, [r1], -ip, asr #10
    7c5c:	200b0501 	andcs	r0, fp, r1, lsl #10
    7c60:	0f052206 	svceq	0x00052206
    7c64:	1f050106 	svcne	0x00050106
    7c68:	06090520 	streq	r0, [r9], -r0, lsr #10
    7c6c:	0623054e 	strteq	r0, [r3], -lr, asr #10
    7c70:	201c0501 	andscs	r0, ip, r1, lsl #10
    7c74:	052e1405 	streq	r1, [lr, #-1029]!	; 0xfffffbfb
    7c78:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    7c7c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    7c80:	013f0609 	teqeq	pc, r9, lsl #12
    7c84:	1005143c 	andne	r1, r5, ip, lsr r4
    7c88:	0b050106 	bleq	1480a8 <_Min_Heap_Size+0x1478a8>
    7c8c:	05300620 	ldreq	r0, [r0, #-1568]!	; 0xfffff9e0
    7c90:	39053009 	stmdbcc	r5, {r0, r3, ip, sp}
    7c94:	01040200 	mrseq	r0, R12_usr
    7c98:	206e0306 	rsbcs	r0, lr, r6, lsl #6
    7c9c:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    7ca0:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    7ca4:	2303060b 	movwcs	r0, #13835	; 0x360b
    7ca8:	0612053c 			; <UNDEFINED> instruction: 0x0612053c
    7cac:	200d0501 	andcs	r0, sp, r1, lsl #10
    7cb0:	09052306 	stmdbeq	r5, {r1, r2, r8, r9, sp}
    7cb4:	061b0543 	ldreq	r0, [fp], -r3, asr #10
    7cb8:	200b0501 	andcs	r0, fp, r1, lsl #10
    7cbc:	1f053f06 	svcne	0x00053f06
    7cc0:	0b050106 	bleq	1480e0 <_Min_Heap_Size+0x1478e0>
    7cc4:	17054d06 	strne	r4, [r5, -r6, lsl #26]
    7cc8:	0b050106 	bleq	1480e8 <_Min_Heap_Size+0x1478e8>
    7ccc:	00013f06 	andeq	r3, r1, r6, lsl #30
    7cd0:	3c010402 	cfstrscc	mvf0, [r1], {2}
    7cd4:	02000905 	andeq	r0, r0, #81920	; 0x14000
    7cd8:	05150104 	ldreq	r0, [r5, #-260]	; 0xfffffefc
    7cdc:	04020010 	streq	r0, [r2], #-16
    7ce0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7ce4:	0402000b 	streq	r0, [r2], #-11
    7ce8:	23062001 	movwcs	r2, #24577	; 0x6001
    7cec:	05350305 	ldreq	r0, [r5, #-773]!	; 0xfffffcfb
    7cf0:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    7cf4:	22062005 	andcs	r2, r6, #5
    7cf8:	01060d05 	tsteq	r6, r5, lsl #26
    7cfc:	06200705 	strteq	r0, [r0], -r5, lsl #14
    7d00:	0613053e 			; <UNDEFINED> instruction: 0x0613053e
    7d04:	06070501 	streq	r0, [r7], -r1, lsl #10
    7d08:	09055a3f 	stmdbeq	r5, {r0, r1, r2, r3, r4, r5, r9, fp, ip, lr}
    7d0c:	060d0514 			; <UNDEFINED> instruction: 0x060d0514
    7d10:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    7d14:	12054106 	andne	r4, r5, #-2147483647	; 0x80000001
    7d18:	1c050106 	stfnes	f0, [r5], {6}
    7d1c:	20070520 	andcs	r0, r7, r0, lsr #10
    7d20:	13053f06 	movwne	r3, #24326	; 0x5f06
    7d24:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7d28:	00013f06 	andeq	r3, r1, r6, lsl #30
    7d2c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    7d30:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    7d34:	05150104 	ldreq	r0, [r5, #-260]	; 0xfffffefc
    7d38:	0402000c 	streq	r0, [r2], #-12
    7d3c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7d40:	04020007 	streq	r0, [r2], #-7
    7d44:	23062001 	movwcs	r2, #24577	; 0x6001
    7d48:	31060105 	tstcc	r6, r5, lsl #2
    7d4c:	0004022e 	andeq	r0, r4, lr, lsr #4
    7d50:	01050101 	tsteq	r5, r1, lsl #2
    7d54:	00020500 	andeq	r0, r2, r0, lsl #10
    7d58:	03000000 	movweq	r0, #0
    7d5c:	060107c7 	streq	r0, [r1], -r7, asr #15
    7d60:	06030501 	streq	r0, [r3], -r1, lsl #10
    7d64:	06011522 	streq	r1, [r1], -r2, lsr #10
    7d68:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    7d6c:	002e0602 	eoreq	r0, lr, r2, lsl #12
    7d70:	3c020402 	cfstrscc	mvf0, [r2], {2}
    7d74:	02040200 	andeq	r0, r4, #0, 4
    7d78:	00210514 	eoreq	r0, r1, r4, lsl r5
    7d7c:	06020402 	streq	r0, [r2], -r2, lsl #8
    7d80:	00050501 	andeq	r0, r5, r1, lsl #10
    7d84:	3c020402 	cfstrscc	mvf0, [r2], {2}
    7d88:	25030c05 	strcs	r0, [r3, #-3077]	; 0xfffff3fb
    7d8c:	0603052e 	streq	r0, [r3], -lr, lsr #10
    7d90:	20060124 	andcs	r0, r6, r4, lsr #2
    7d94:	05142e06 	ldreq	r2, [r4, #-3590]	; 0xfffff1fa
    7d98:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    7d9c:	57030605 	strpl	r0, [r3, -r5, lsl #12]
    7da0:	77070520 	strvc	r0, [r7, -r0, lsr #10]
    7da4:	01061e05 	tsteq	r6, r5, lsl #28
    7da8:	21060705 	tstcs	r6, r5, lsl #14
    7dac:	03061505 	movweq	r1, #25861	; 0x6505
    7db0:	07050175 	smlsdxeq	r5, r5, r1, r0
    7db4:	06200b03 	strteq	r0, [r0], -r3, lsl #22
    7db8:	06220523 	strteq	r0, [r2], -r3, lsr #10
    7dbc:	06070501 	streq	r0, [r7], -r1, lsl #10
    7dc0:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    7dc4:	05017103 	streq	r7, [r1, #-259]	; 0xfffffefd
    7dc8:	200f0307 	andcs	r0, pc, r7, lsl #6
    7dcc:	20052306 	andcs	r2, r5, r6, lsl #6
    7dd0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7dd4:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    7dd8:	016d0306 	cmneq	sp, r6, lsl #6
    7ddc:	13030705 	movwne	r0, #14085	; 0x3705
    7de0:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    7de4:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    7de8:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    7dec:	69030615 	stmdbvs	r3, {r0, r2, r4, r9, sl}
    7df0:	03070501 	movweq	r0, #29953	; 0x7501
    7df4:	23062017 	movwcs	r2, #24599	; 0x6017
    7df8:	01061f05 	tsteq	r6, r5, lsl #30
    7dfc:	21060705 	tstcs	r6, r5, lsl #14
    7e00:	03061505 	movweq	r1, #25861	; 0x6505
    7e04:	07050165 	streq	r0, [r5, -r5, ror #2]
    7e08:	06201b03 	strteq	r1, [r0], -r3, lsl #22
    7e0c:	061f0523 	ldreq	r0, [pc], -r3, lsr #10
    7e10:	06070501 	streq	r0, [r7], -r1, lsl #10
    7e14:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    7e18:	05016103 	streq	r6, [r1, #-259]	; 0xfffffefd
    7e1c:	201f0307 	andscs	r0, pc, r7, lsl #6
    7e20:	64030305 	strvs	r0, [r3], #-773	; 0xfffffcfb
    7e24:	03010520 	movweq	r0, #5408	; 0x1520
    7e28:	0102202e 	tsteq	r2, lr, lsr #32
    7e2c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7e30:	02050001 	andeq	r0, r5, #1
    7e34:	00000000 	andeq	r0, r0, r0
    7e38:	01088503 	tsteq	r8, r3, lsl #10
    7e3c:	03050106 	movweq	r0, #20742	; 0x5106
    7e40:	01152106 	tsteq	r5, r6, lsl #2
    7e44:	02040200 	andeq	r0, r4, #0, 4
    7e48:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    7e4c:	02003c02 	andeq	r3, r0, #512	; 0x200
    7e50:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    7e54:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    7e58:	00010602 	andeq	r0, r1, r2, lsl #12
    7e5c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    7e60:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    7e64:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    7e68:	2e2c030c 	cdpcs	3, 2, cr0, cr12, cr12, {0}
    7e6c:	24060305 	strcs	r0, [r6], #-773	; 0xfffffcfb
    7e70:	05143c01 	ldreq	r3, [r4, #-3073]	; 0xfffff3ff
    7e74:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    7e78:	50030605 	andpl	r0, r3, r5, lsl #12
    7e7c:	85070520 	strhi	r0, [r7, #-1312]	; 0xfffffae0
    7e80:	01061e05 	tsteq	r6, r5, lsl #28
    7e84:	2f060705 	svccs	0x00060705
    7e88:	03061505 	movweq	r1, #25861	; 0x6505
    7e8c:	07050175 	smlsdxeq	r5, r5, r1, r0
    7e90:	06200b03 	strteq	r0, [r0], -r3, lsl #22
    7e94:	06220523 	strteq	r0, [r2], -r3, lsr #10
    7e98:	06070501 	streq	r0, [r7], -r1, lsl #10
    7e9c:	2005232f 	andcs	r2, r5, pc, lsr #6
    7ea0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7ea4:	05232f06 	streq	r2, [r3, #-3846]!	; 0xfffff0fa
    7ea8:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    7eac:	232f0607 			; <UNDEFINED> instruction: 0x232f0607
    7eb0:	01061f05 	tsteq	r6, r5, lsl #30
    7eb4:	2f060705 	svccs	0x00060705
    7eb8:	061f0523 	ldreq	r0, [pc], -r3, lsr #10
    7ebc:	06070501 	streq	r0, [r7], -r1, lsl #10
    7ec0:	1e05232f 	cdpne	3, 0, cr2, cr5, cr15, {1}
    7ec4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7ec8:	22052f06 	andcs	r2, r5, #6, 30
    7ecc:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7ed0:	20052106 	andcs	r2, r5, r6, lsl #2
    7ed4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7ed8:	24052106 	strcs	r2, [r5], #-262	; 0xfffffefa
    7edc:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7ee0:	1f052106 	svcne	0x00052106
    7ee4:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7ee8:	1f052106 	svcne	0x00052106
    7eec:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7ef0:	03052106 	movweq	r2, #20742	; 0x5106
    7ef4:	205b0306 	subscs	r0, fp, r6, lsl #6
    7ef8:	35030105 	strcc	r0, [r3, #-261]	; 0xfffffefb
    7efc:	00010220 	andeq	r0, r1, r0, lsr #4
    7f00:	01050101 	tsteq	r5, r1, lsl #2
    7f04:	00020500 	andeq	r0, r2, r0, lsl #10
    7f08:	03000000 	movweq	r0, #0
    7f0c:	050108da 	streq	r0, [r1, #-2266]	; 0xfffff726
    7f10:	0e051303 	cdpeq	3, 0, cr1, cr5, cr3, {0}
    7f14:	01050106 	tsteq	r5, r6, lsl #2
    7f18:	0001022f 	andeq	r0, r1, pc, lsr #4
    7f1c:	01050101 	tsteq	r5, r1, lsl #2
    7f20:	00020500 	andeq	r0, r2, r0, lsl #10
    7f24:	03000000 	movweq	r0, #0
    7f28:	050108e5 	streq	r0, [r1, #-2277]	; 0xfffff71b
    7f2c:	0e051303 	cdpeq	3, 0, cr1, cr5, cr3, {0}
    7f30:	01050106 	tsteq	r5, r6, lsl #2
    7f34:	00010221 	andeq	r0, r1, r1, lsr #4
    7f38:	08ee0101 	stmiaeq	lr!, {r0, r8}^
    7f3c:	00030000 	andeq	r0, r3, r0
    7f40:	0000020b 	andeq	r0, r0, fp, lsl #4
    7f44:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    7f48:	0101000d 	tsteq	r1, sp
    7f4c:	00000101 	andeq	r0, r0, r1, lsl #2
    7f50:	00000100 	andeq	r0, r0, r0, lsl #2
    7f54:	2f2e2e01 	svccs	0x002e2e01
    7f58:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    7f5c:	2f737265 	svccs	0x00737265
    7f60:	334d5453 	movtcc	r5, #54355	; 0xd453
    7f64:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    7f68:	41485f78 	hvcmi	34296	; 0x85f8
    7f6c:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    7f70:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    7f74:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    7f78:	2f2e2e00 	svccs	0x002e2e00
    7f7c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    7f80:	2f737265 	svccs	0x00737265
    7f84:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    7f88:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
    7f8c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7f90:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    7f94:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    7f98:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    7f9c:	534d432f 	movtpl	r4, #54063	; 0xd32f
    7fa0:	442f5349 	strtmi	r5, [pc], #-841	; 7fa8 <_Min_Heap_Size+0x77a8>
    7fa4:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    7fa8:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
    7fac:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    7fb0:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    7fb4:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
    7fb8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    7fbc:	63006564 	movwvs	r6, #1380	; 0x564
    7fc0:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    7fc4:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    7fc8:	6f646978 	svcvs	0x00646978
    7fcc:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    7fd0:	6172676f 	cmnvs	r2, pc, ror #14
    7fd4:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    7fd8:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    7fdc:	63675c63 	cmnvs	r7, #25344	; 0x6300
    7fe0:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    7fe4:	6f6e2d6d 	svcvs	0x006e2d6d
    7fe8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7fec:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    7ff0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    7ff4:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    7ff8:	30312e31 	eorscc	r2, r1, r1, lsr lr
    7ffc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8000:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8004:	61652d65 	cmnvs	r5, r5, ror #26
    8008:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    800c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8010:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    8014:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    8018:	6300656e 	movwvs	r6, #1390	; 0x56e
    801c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    8020:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    8024:	6f646978 	svcvs	0x00646978
    8028:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    802c:	6172676f 	cmnvs	r2, pc, ror #14
    8030:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    8034:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    8038:	63675c63 	cmnvs	r7, #25344	; 0x6300
    803c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    8040:	6f6e2d6d 	svcvs	0x006e2d6d
    8044:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8048:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    804c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    8050:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    8054:	30312e31 	eorscc	r2, r1, r1, lsr lr
    8058:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    805c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8060:	61652d65 	cmnvs	r5, r5, ror #26
    8064:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    8068:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    806c:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    8070:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    8074:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    8078:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    807c:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    8080:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    8084:	5f787834 	svcpl	0x00787834
    8088:	5f4c4148 	svcpl	0x004c4148
    808c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    8090:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
    8094:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    8098:	6f432f2e 	svcvs	0x00432f2e
    809c:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
    80a0:	0000636e 	andeq	r6, r0, lr, ror #6
    80a4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    80a8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    80ac:	61685f78 	smcvs	34296	; 0x85f8
    80b0:	6f635f6c 	svcvs	0x00635f6c
    80b4:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    80b8:	0100632e 	tsteq	r0, lr, lsr #6
    80bc:	6f630000 	svcvs	0x00630000
    80c0:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    80c4:	682e346d 	stmdavs	lr!, {r0, r2, r3, r5, r6, sl, ip, sp}
    80c8:	00000200 	andeq	r0, r0, r0, lsl #4
    80cc:	69736d63 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, sl, fp, sp, lr}^
    80d0:	63675f73 	cmnvs	r7, #460	; 0x1cc
    80d4:	00682e63 	rsbeq	r2, r8, r3, ror #28
    80d8:	73000002 	movwvc	r0, #2
    80dc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    80e0:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    80e4:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    80e8:	00000300 	andeq	r0, r0, r0, lsl #6
    80ec:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    80f0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    80f4:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    80f8:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    80fc:	00000400 	andeq	r0, r0, r0, lsl #8
    8100:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    8104:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    8108:	00050068 	andeq	r0, r5, r8, rrx
    810c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    8110:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    8114:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    8118:	00000300 	andeq	r0, r0, r0, lsl #6
    811c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    8120:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    8124:	61685f78 	smcvs	34296	; 0x85f8
    8128:	6f635f6c 	svcvs	0x00635f6c
    812c:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    8130:	0600682e 	streq	r6, [r0], -lr, lsr #16
    8134:	74730000 	ldrbtvc	r0, [r3], #-0
    8138:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    813c:	5f787834 	svcpl	0x00787834
    8140:	5f6c6168 	svcpl	0x006c6168
    8144:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    8148:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    814c:	05000000 	streq	r0, [r0, #-0]
    8150:	02050001 	andeq	r0, r5, #1
    8154:	080015a4 	stmdaeq	r0, {r2, r5, r7, r8, sl, ip}
    8158:	01018d03 	tsteq	r1, r3, lsl #26
    815c:	03050106 	movweq	r0, #20742	; 0x5106
    8160:	043f3006 	ldrteq	r3, [pc], #-6	; 8168 <_Min_Heap_Size+0x7968>
    8164:	03160502 	tsteq	r6, #8388608	; 0x800000
    8168:	05010be2 	streq	r0, [r1, #-3042]	; 0xfffff41e
    816c:	14131403 	ldrne	r1, [r3], #-1027	; 0xfffffbfd
    8170:	01060e05 	tsteq	r6, r5, lsl #28
    8174:	2f060305 	svccs	0x00060305
    8178:	01060d05 	tsteq	r6, r5, lsl #26
    817c:	0603052e 	streq	r0, [r3], -lr, lsr #10
    8180:	0623052f 	strteq	r0, [r3], -pc, lsr #10
    8184:	3e052014 	mcrcc	0, 0, r2, cr5, cr4, {0}
    8188:	1f0e052d 	svcne	0x000e052d
    818c:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
    8190:	01060e05 	tsteq	r6, r5, lsl #28
    8194:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    8198:	74950301 	ldrvc	r0, [r5], #769	; 0x301
    819c:	00030501 	andeq	r0, r3, r1, lsl #10
    81a0:	1c010402 	cfstrsne	mvf0, [r1], {2}
    81a4:	01040200 	mrseq	r0, R12_usr
    81a8:	0007022e 	andeq	r0, r7, lr, lsr #4
    81ac:	01050101 	tsteq	r5, r1, lsl #2
    81b0:	e0020500 	and	r0, r2, r0, lsl #10
    81b4:	03080015 	movweq	r0, #32789	; 0x8015
    81b8:	060101a3 	streq	r0, [r1], -r3, lsr #3
    81bc:	06030501 	streq	r0, [r3], -r1, lsl #10
    81c0:	302f154b 	eorcc	r1, pc, fp, asr #10
    81c4:	1a050204 	bne	1489dc <_Min_Heap_Size+0x1481dc>
    81c8:	010bdd03 	tsteq	fp, r3, lsl #26
    81cc:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    81d0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    81d4:	042e2e0b 	strteq	r2, [lr], #-3595	; 0xfffff1f5
    81d8:	06030501 	streq	r0, [r3], -r1, lsl #10
    81dc:	0174a303 	cmneq	r4, r3, lsl #6
    81e0:	1a050204 	bne	1489f8 <_Min_Heap_Size+0x1481f8>
    81e4:	010d9803 	tsteq	sp, r3, lsl #16
    81e8:	13140305 	tstne	r4, #335544320	; 0x14000000
    81ec:	1f051413 	svcne	0x00051413
    81f0:	17050106 	strne	r0, [r5, -r6, lsl #2]
    81f4:	0603052e 	streq	r0, [r3], -lr, lsr #10
    81f8:	062c053d 			; <UNDEFINED> instruction: 0x062c053d
    81fc:	206d0501 	rsbcs	r0, sp, r1, lsl #10
    8200:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    8204:	13061e05 	movwne	r1, #28165	; 0x6e05
    8208:	52052e2e 	andpl	r2, r5, #736	; 0x2e0
    820c:	211e052e 	tstcs	lr, lr, lsr #10
    8210:	2d66052e 	cfstr64cs	mvdx0, [r6, #-184]!	; 0xffffff48
    8214:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    8218:	05014703 	streq	r4, [r1, #-1795]	; 0xfffff8fd
    821c:	06051403 	streq	r1, [r5], -r3, lsl #8
    8220:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8224:	30053006 	andcc	r3, r5, r6
    8228:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    822c:	4a2e202e 	bmi	b902ec <_Min_Heap_Size+0xb8faec>
    8230:	01050104 	tsteq	r5, r4, lsl #2
    8234:	01739403 	cmneq	r3, r3, lsl #8
    8238:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    823c:	7a030104 	bvc	c8654 <_Min_Heap_Size+0xc7e54>
    8240:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    8244:	02002001 	andeq	r2, r0, #1
    8248:	00200104 	eoreq	r0, r0, r4, lsl #2
    824c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    8250:	01040200 	mrseq	r0, R12_usr
    8254:	05020421 	streq	r0, [r2, #-1057]	; 0xfffffbdf
    8258:	0da3036d 	stceq	3, cr0, [r3, #436]!	; 0x1b4
    825c:	05202058 	streq	r2, [r0, #-88]!	; 0xffffffa8
    8260:	52030605 	andpl	r0, r3, #5242880	; 0x500000
    8264:	06200501 	strteq	r0, [r0], -r1, lsl #10
    8268:	2e300501 	cdpcs	5, 3, cr0, cr0, cr1, {0}
    826c:	202e0520 	eorcs	r0, lr, r0, lsr #10
    8270:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    8274:	73900301 	orrsvc	r0, r0, #67108864	; 0x4000000
    8278:	00080201 	andeq	r0, r8, r1, lsl #4
    827c:	01050101 	tsteq	r5, r1, lsl #2
    8280:	6c020500 	cfstr32vs	mvfx0, [r2], {-0}
    8284:	03080016 	movweq	r0, #32790	; 0x8016
    8288:	060101b9 			; <UNDEFINED> instruction: 0x060101b9
    828c:	06030501 	streq	r0, [r3], -r1, lsl #10
    8290:	02043122 	andeq	r3, r4, #-2147483640	; 0x80000008
    8294:	d5031605 	strle	r1, [r3, #-1541]	; 0xfffff9fb
    8298:	0305010b 	movweq	r0, #20747	; 0x510b
    829c:	06060514 			; <UNDEFINED> instruction: 0x06060514
    82a0:	06050501 	streq	r0, [r5], -r1, lsl #10
    82a4:	51051330 	tstpl	r5, r0, lsr r3
    82a8:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    82ac:	202d052e 	eorcs	r0, sp, lr, lsr #10
    82b0:	052e2b05 	streq	r2, [lr, #-2821]!	; 0xfffff4fb
    82b4:	063d0605 	ldrteq	r0, [sp], -r5, lsl #12
    82b8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    82bc:	74a60301 	strtvc	r0, [r6], #769	; 0x301
    82c0:	00030501 	andeq	r0, r3, r1, lsl #10
    82c4:	1c010402 	cfstrsne	mvf0, [r1], {2}
    82c8:	01040200 	mrseq	r0, R12_usr
    82cc:	0008022e 	andeq	r0, r8, lr, lsr #4
    82d0:	01050101 	tsteq	r5, r1, lsl #2
    82d4:	00020500 	andeq	r0, r2, r0, lsl #10
    82d8:	03000000 	movweq	r0, #0
    82dc:	060101c9 	streq	r0, [r1], -r9, asr #3
    82e0:	06030501 	streq	r0, [r3], -r1, lsl #10
    82e4:	02043122 	andeq	r3, r4, #-2147483640	; 0x80000008
    82e8:	eb031605 	bl	cdb04 <_Min_Heap_Size+0xcd304>
    82ec:	0305010b 	movweq	r0, #20747	; 0x510b
    82f0:	06060514 			; <UNDEFINED> instruction: 0x06060514
    82f4:	06050501 	streq	r0, [r5], -r1, lsl #10
    82f8:	06510530 			; <UNDEFINED> instruction: 0x06510530
    82fc:	2e220501 	cfsh64cs	mvdx0, mvdx2, #1
    8300:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
    8304:	05052e2b 	streq	r2, [r5, #-3627]	; 0xfffff1d5
    8308:	03044b06 	movweq	r4, #19206	; 0x4b06
    830c:	ce031b05 	vmlagt.f64	d1, d3, d5
    8310:	03050174 	movweq	r0, #20852	; 0x5174
    8314:	05020414 	streq	r0, [r2, #-1044]	; 0xfffffbec
    8318:	0bb10305 	bleq	fec48f34 <_estack+0xdec47cfc>
    831c:	0503042e 	streq	r0, [r3, #-1070]	; 0xfffffbd2
    8320:	74c2031b 	strbvc	r0, [r2], #795	; 0x31b
    8324:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    8328:	01042e06 	tsteq	r4, r6, lsl #28
    832c:	4c030105 	stfmis	f0, [r3], {5}
    8330:	00030501 	andeq	r0, r3, r1, lsl #10
    8334:	1c010402 	cfstrsne	mvf0, [r1], {2}
    8338:	01040200 	mrseq	r0, R12_usr
    833c:	0007022e 	andeq	r0, r7, lr, lsr #4
    8340:	01050101 	tsteq	r5, r1, lsl #2
    8344:	00020500 	andeq	r0, r2, r0, lsl #10
    8348:	03000000 	movweq	r0, #0
    834c:	050101d6 	streq	r0, [r1, #-470]	; 0xfffffe2a
    8350:	02041403 	andeq	r1, r4, #50331648	; 0x3000000
    8354:	b9032205 	stmdblt	r3, {r0, r2, r9, sp}
    8358:	0305010d 	movweq	r0, #20749	; 0x510d
    835c:	05030414 	streq	r0, [r3, #-1044]	; 0xfffffbec
    8360:	72f9031b 	rscsvc	r0, r9, #1811939328	; 0x6c000000
    8364:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    8368:	87030204 	strhi	r0, [r3, -r4, lsl #4]
    836c:	20052e0d 	andcs	r2, r5, sp, lsl #28
    8370:	28051306 	stmdacs	r5, {r1, r2, r8, r9, ip}
    8374:	2d11052e 	cfldr32cs	mvfx0, [r1, #-184]	; 0xffffff48
    8378:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    837c:	04230603 	strteq	r0, [r3], #-1539	; 0xfffff9fd
    8380:	031b0503 	tsteq	fp, #12582912	; 0xc00000
    8384:	050172f4 	streq	r7, [r1, #-756]	; 0xfffffd0c
    8388:	02041403 	andeq	r1, r4, #50331648	; 0x3000000
    838c:	2e0d8c03 	cdpcs	12, 0, cr8, cr13, cr3, {0}
    8390:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    8394:	06021e08 	streq	r1, [r2], -r8, lsl #28
    8398:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    839c:	02050001 	andeq	r0, r5, #1
    83a0:	0800169c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl, ip}
    83a4:	0101e303 	tsteq	r1, r3, lsl #6
    83a8:	04130405 	ldreq	r0, [r3], #-1029	; 0xfffffbfb
    83ac:	031a0502 	tsteq	sl, #8388608	; 0x800000
    83b0:	05010e81 	streq	r0, [r1, #-3713]	; 0xfffff17f
    83b4:	0e051403 	cdpeq	4, 0, cr1, cr5, cr3, {0}
    83b8:	06050106 	streq	r0, [r5], -r6, lsl #2
    83bc:	06030520 	streq	r0, [r3], -r0, lsr #10
    83c0:	06120541 	ldreq	r0, [r2], -r1, asr #10
    83c4:	06030501 	streq	r0, [r3], -r1, lsl #10
    83c8:	0316053d 	tsteq	r6, #255852544	; 0xf400000
    83cc:	05017ea8 	streq	r7, [r1, #-3752]	; 0xfffff158
    83d0:	05051403 	streq	r1, [r5, #-1027]	; 0xfffffbfd
    83d4:	062e0518 			; <UNDEFINED> instruction: 0x062e0518
    83d8:	03054a01 	movweq	r4, #23041	; 0x5a01
    83dc:	01d10306 	bicseq	r0, r1, r6, lsl #6
    83e0:	06120501 	ldreq	r0, [r2], -r1, lsl #10
    83e4:	03052001 	movweq	r2, #20481	; 0x5001
    83e8:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
    83ec:	03050106 	movweq	r0, #20742	; 0x5106
    83f0:	0a053106 	beq	154810 <_Min_Heap_Size+0x154010>
    83f4:	0c050106 	stfeqs	f0, [r5], {6}
    83f8:	20207703 	eorcs	r7, r0, r3, lsl #14
    83fc:	01050104 	tsteq	r5, r4, lsl #2
    8400:	0171fc03 	cmneq	r1, r3, lsl #24	; <UNPREDICTABLE>
    8404:	01000302 	tsteq	r0, r2, lsl #6
    8408:	00010501 	andeq	r0, r1, r1, lsl #10
    840c:	00000205 	andeq	r0, r0, r5, lsl #4
    8410:	80030000 	andhi	r0, r3, r0
    8414:	03050102 	movweq	r0, #20738	; 0x5102
    8418:	05030414 	streq	r0, [r3, #-1044]	; 0xfffffbec
    841c:	0115031b 	tsteq	r5, fp, lsl r3
    8420:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
    8424:	2e6c0301 	cdpcs	3, 6, cr0, cr12, cr1, {0}
    8428:	01060e05 	tsteq	r6, r5, lsl #28
    842c:	5b060305 	blpl	189048 <_Min_Heap_Size+0x188848>
    8430:	01060d05 	tsteq	r6, r5, lsl #26
    8434:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
    8438:	01010004 	tsteq	r1, r4
    843c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8440:	00000002 	andeq	r0, r0, r2
    8444:	02970300 	addseq	r0, r7, #0, 6
    8448:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    844c:	01061b05 	tsteq	r6, r5, lsl #22
    8450:	052e0d05 	streq	r0, [lr, #-3333]!	; 0xfffff2fb
    8454:	053f0603 	ldreq	r0, [pc, #-1539]!	; 7e59 <_Min_Heap_Size+0x7659>
    8458:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    845c:	044d0603 	strbeq	r0, [sp], #-1539	; 0xfffff9fd
    8460:	031b0503 	tsteq	fp, #12582912	; 0xc00000
    8464:	0305016d 	movweq	r0, #20845	; 0x516d
    8468:	03010414 	movweq	r0, #5140	; 0x1414
    846c:	03042e12 	movweq	r2, #19986	; 0x4e12
    8470:	61031b05 	tstvs	r3, r5, lsl #22
    8474:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    8478:	01050104 	tsteq	r5, r4, lsl #2
    847c:	2e1e0306 	cdpcs	3, 1, cr0, cr14, cr6, {0}
    8480:	01000302 	tsteq	r0, r2, lsl #6
    8484:	00010501 	andeq	r0, r1, r1, lsl #10
    8488:	00000205 	andeq	r0, r0, r5, lsl #4
    848c:	aa030000 	bge	c8494 <_Min_Heap_Size+0xc7c94>
    8490:	01060102 	tsteq	r6, r2, lsl #2
    8494:	30060305 	andcc	r0, r6, r5, lsl #6
    8498:	16053f3d 			; <UNDEFINED> instruction: 0x16053f3d
    849c:	0c050106 	stfeqs	f0, [r5], {6}
    84a0:	06030520 	streq	r0, [r3], -r0, lsr #10
    84a4:	0610053e 			; <UNDEFINED> instruction: 0x0610053e
    84a8:	20060501 	andcs	r0, r6, r1, lsl #10
    84ac:	31060505 	tstcc	r6, r5, lsl #10
    84b0:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    84b4:	003c0601 	eorseq	r0, ip, r1, lsl #12
    84b8:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    84bc:	3d3d2f06 	ldccc	15, cr2, [sp, #-24]!	; 0xffffffe8
    84c0:	5a3d3d3d 	bpl	f579bc <_Min_Heap_Size+0xf571bc>
    84c4:	01061905 	tsteq	r6, r5, lsl #18
    84c8:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    84cc:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    84d0:	21010624 	tstcs	r1, r4, lsr #12
    84d4:	05203e05 	streq	r3, [r0, #-3589]!	; 0xfffff1fb
    84d8:	24051f54 	strcs	r1, [r5], #-3924	; 0xfffff0ac
    84dc:	1f540530 	svcne	0x00540530
    84e0:	05302405 	ldreq	r2, [r0, #-1029]!	; 0xfffffbfb
    84e4:	24051f54 	strcs	r1, [r5], #-3924	; 0xfffff0ac
    84e8:	1f540530 	svcne	0x00540530
    84ec:	05302405 	ldreq	r2, [r0, #-1029]!	; 0xfffffbfb
    84f0:	24051f54 	strcs	r1, [r5], #-3924	; 0xfffff0ac
    84f4:	1f540530 	svcne	0x00540530
    84f8:	05302405 	ldreq	r2, [r0, #-1029]!	; 0xfffffbfb
    84fc:	24051f54 	strcs	r1, [r5], #-3924	; 0xfffff0ac
    8500:	1f540530 	svcne	0x00540530
    8504:	79030f05 	stmdbvc	r3, {r0, r2, r8, r9, sl, fp}
    8508:	03010520 	movweq	r0, #5408	; 0x1520
    850c:	03052e0f 	movweq	r2, #24079	; 0x5e0f
    8510:	01040200 	mrseq	r0, R12_usr
    8514:	00205e03 	eoreq	r5, r0, r3, lsl #28
    8518:	3c010402 	cfstrscc	mvf0, [r1], {2}
    851c:	01040200 	mrseq	r0, R12_usr
    8520:	0005053d 	andeq	r0, r5, sp, lsr r5
    8524:	6e010402 	cdpvs	4, 0, cr0, cr1, cr2, {0}
    8528:	03040200 	movweq	r0, #16896	; 0x4200
    852c:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    8530:	02006701 	andeq	r6, r0, #262144	; 0x40000
    8534:	00670104 	rsbeq	r0, r7, r4, lsl #2
    8538:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    853c:	01040200 	mrseq	r0, R12_usr
    8540:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    8544:	02006701 	andeq	r6, r0, #262144	; 0x40000
    8548:	06670104 	strbteq	r0, [r7], -r4, lsl #2
    854c:	05660f03 	strbeq	r0, [r6, #-3843]!	; 0xfffff0fd
    8550:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    8554:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
    8558:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    855c:	05023001 	streq	r3, [r2, #-1]
    8560:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8564:	02050001 	andeq	r0, r5, #1
    8568:	00000000 	andeq	r0, r0, r0
    856c:	0102d603 	tsteq	r2, r3, lsl #12
    8570:	21130305 	tstcs	r3, r5, lsl #6
    8574:	21060105 	tstcs	r6, r5, lsl #2
    8578:	01000102 	tsteq	r0, r2, lsl #2
    857c:	00010501 	andeq	r0, r1, r1, lsl #10
    8580:	00000205 	andeq	r0, r0, r5, lsl #4
    8584:	e0030000 	and	r0, r3, r0
    8588:	03050102 	movweq	r0, #20738	; 0x5102
    858c:	05020414 	streq	r0, [r2, #-1044]	; 0xfffffbec
    8590:	0aa5031a 	beq	fe949200 <_estack+0xde947fc8>
    8594:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    8598:	01061a05 	tsteq	r6, r5, lsl #20
    859c:	01050104 	tsteq	r5, r4, lsl #2
    85a0:	2e75da03 	vaddcs.f32	s27, s10, s6
    85a4:	01000602 	tsteq	r0, r2, lsl #12
    85a8:	00010501 	andeq	r0, r1, r1, lsl #10
    85ac:	00000205 	andeq	r0, r0, r5, lsl #4
    85b0:	fb030000 	blx	c85ba <_Min_Heap_Size+0xc7dba>
    85b4:	01060102 	tsteq	r6, r2, lsl #2
    85b8:	5a060305 	bpl	1891d4 <_Min_Heap_Size+0x1889d4>
    85bc:	30062006 	andcc	r2, r6, r6
    85c0:	1a050204 	bne	148dd8 <_Min_Heap_Size+0x1485d8>
    85c4:	010bac03 	tsteq	fp, r3, lsl #24
    85c8:	05150305 	ldreq	r0, [r5, #-773]	; 0xfffffcfb
    85cc:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    85d0:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    85d4:	2e01061f 	mcrcs	6, 0, r0, cr1, cr15, {0}
    85d8:	204a4005 	subcs	r4, sl, r5
    85dc:	03061605 	movweq	r1, #26117	; 0x6605
    85e0:	0305012f 	movweq	r0, #20783	; 0x512f
    85e4:	060c0514 			; <UNDEFINED> instruction: 0x060c0514
    85e8:	06030501 	streq	r0, [r3], -r1, lsl #10
    85ec:	0514132f 	ldreq	r1, [r4, #-815]	; 0xfffffcd1
    85f0:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    85f4:	03052e17 	movweq	r2, #24087	; 0x5e17
    85f8:	2c053d06 	stccs	13, cr3, [r5], {6}
    85fc:	6d050106 	stfvss	f0, [r5, #-24]	; 0xffffffe8
    8600:	06030520 	streq	r0, [r3], -r0, lsr #10
    8604:	0621053e 			; <UNDEFINED> instruction: 0x0621053e
    8608:	2e350501 	cdpcs	5, 3, cr0, cr5, cr1, {0}
    860c:	15052e2e 	strne	r2, [r5, #-3630]	; 0xfffff1d2
    8610:	0603052e 	streq	r0, [r3], -lr, lsr #10
    8614:	06350521 	ldrteq	r0, [r5], -r1, lsr #10
    8618:	15052e01 	strne	r2, [r5, #-3585]	; 0xfffff1ff
    861c:	0104202e 	tsteq	r4, lr, lsr #32
    8620:	97030105 	strls	r0, [r3, -r5, lsl #2]
    8624:	03050174 	movweq	r0, #20852	; 0x5174
    8628:	01040200 	mrseq	r0, R12_usr
    862c:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    8630:	02002e01 	andeq	r2, r0, #1, 28
    8634:	00200104 	eoreq	r0, r0, r4, lsl #2
    8638:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    863c:	05050204 	streq	r0, [r5, #-516]	; 0xfffffdfc
    8640:	0bb70306 	bleq	fedc9260 <_estack+0xdedc8028>
    8644:	06320520 	ldrteq	r0, [r2], -r0, lsr #10
    8648:	2e1f0501 	cfmul32cs	mvfx0, mvfx15, mvfx1
    864c:	2e2e4005 	cdpcs	0, 2, cr4, cr14, cr5, {0}
    8650:	32036d05 	andcc	r6, r3, #320	; 0x140
    8654:	06022001 	streq	r2, [r2], -r1
    8658:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    865c:	02050001 	andeq	r0, r5, #1
    8660:	00000000 	andeq	r0, r0, r0
    8664:	01038a03 	tsteq	r3, r3, lsl #20
    8668:	03050106 	movweq	r0, #20742	; 0x5106
    866c:	04312206 	ldrteq	r2, [r1], #-518	; 0xfffffdfa
    8670:	03160502 	tsteq	r6, #8388608	; 0x800000
    8674:	05010ad0 	streq	r0, [r1, #-2768]	; 0xfffff530
    8678:	06051403 	streq	r1, [r5], -r3, lsl #8
    867c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8680:	51053006 	tstpl	r5, r6
    8684:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    8688:	202d052e 	eorcs	r0, sp, lr, lsr #10
    868c:	4a2e2b05 	bmi	b932a8 <_Min_Heap_Size+0xb92aa8>
    8690:	01050104 	tsteq	r5, r4, lsl #2
    8694:	0175ad03 	cmneq	r5, r3, lsl #26
    8698:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    869c:	001c0104 	andseq	r0, ip, r4, lsl #2
    86a0:	3c010402 	cfstrscc	mvf0, [r1], {2}
    86a4:	01000802 	tsteq	r0, r2, lsl #16
    86a8:	00010501 	andeq	r0, r1, r1, lsl #10
    86ac:	00000205 	andeq	r0, r0, r5, lsl #4
    86b0:	9c030000 	stcls	0, cr0, [r3], {-0}
    86b4:	01060103 	tsteq	r6, r3, lsl #2
    86b8:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    86bc:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    86c0:	0aab031a 	beq	feac9330 <_estack+0xdeac80f8>
    86c4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    86c8:	01060605 	tsteq	r6, r5, lsl #12
    86cc:	30060505 	andcc	r0, r6, r5, lsl #10
    86d0:	01063605 	tsteq	r6, r5, lsl #12
    86d4:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    86d8:	67054a5b 	smlsdvs	r5, fp, sl, r4
    86dc:	2e0c052e 	cfsh32cs	mvfx0, mvfx12, #30
    86e0:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    86e4:	75d20301 	ldrbvc	r0, [r2, #769]	; 0x301
    86e8:	00030501 	andeq	r0, r3, r1, lsl #10
    86ec:	1c010402 	cfstrsne	mvf0, [r1], {2}
    86f0:	01040200 	mrseq	r0, R12_usr
    86f4:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    86f8:	0ab6030b 	beq	fed8932c <_estack+0xded880f4>
    86fc:	0104203c 	tsteq	r4, ip, lsr r0
    8700:	cd030a05 	vstrgt	s0, [r3, #-20]	; 0xffffffec
    8704:	06020175 			; <UNDEFINED> instruction: 0x06020175
    8708:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    870c:	02050001 	andeq	r0, r5, #1
    8710:	00000000 	andeq	r0, r0, r0
    8714:	0103ac03 	tsteq	r3, r3, lsl #24
    8718:	03050106 	movweq	r0, #20742	; 0x5106
    871c:	04312206 	ldrteq	r2, [r1], #-518	; 0xfffffdfa
    8720:	03160502 	tsteq	r6, #8388608	; 0x800000
    8724:	05010abd 	streq	r0, [r1, #-2749]	; 0xfffff543
    8728:	06051403 	streq	r1, [r5], -r3, lsl #8
    872c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8730:	51053006 	tstpl	r5, r6
    8734:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    8738:	202d052e 	eorcs	r0, sp, lr, lsr #10
    873c:	4a2e2b05 	bmi	b93358 <_Min_Heap_Size+0xb92b58>
    8740:	01050104 	tsteq	r5, r4, lsl #2
    8744:	0175c003 	cmneq	r5, r3
    8748:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    874c:	001c0104 	andseq	r0, ip, r4, lsl #2
    8750:	3c010402 	cfstrscc	mvf0, [r1], {2}
    8754:	01000802 	tsteq	r0, r2, lsl #16
    8758:	00010501 	andeq	r0, r1, r1, lsl #10
    875c:	00000205 	andeq	r0, r0, r5, lsl #4
    8760:	bd030000 	stclt	0, cr0, [r3, #-0]
    8764:	01060103 	tsteq	r6, r3, lsl #2
    8768:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    876c:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    8770:	0abd031a 	beq	fef493e0 <_estack+0xdef481a8>
    8774:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    8778:	01060605 	tsteq	r6, r5, lsl #12
    877c:	30060505 	andcc	r0, r6, r5, lsl #10
    8780:	01063605 	tsteq	r6, r5, lsl #12
    8784:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    8788:	67054a5b 	smlsdvs	r5, fp, sl, r4
    878c:	2e0c052e 	cfsh32cs	mvfx0, mvfx12, #30
    8790:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    8794:	75c00301 	strbvc	r0, [r0, #769]	; 0x301
    8798:	00030501 	andeq	r0, r3, r1, lsl #10
    879c:	1c010402 	cfstrsne	mvf0, [r1], {2}
    87a0:	01040200 	mrseq	r0, R12_usr
    87a4:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    87a8:	0ac8030b 	beq	ff2093dc <_estack+0xdf2081a4>
    87ac:	0104203c 	tsteq	r4, ip, lsr r0
    87b0:	bb030a05 	bllt	cafcc <_Min_Heap_Size+0xca7cc>
    87b4:	06020175 			; <UNDEFINED> instruction: 0x06020175
    87b8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    87bc:	02050001 	andeq	r0, r5, #1
    87c0:	00000000 	andeq	r0, r0, r0
    87c4:	0103ce03 	tsteq	r3, r3, lsl #28
    87c8:	03050106 	movweq	r0, #20742	; 0x5106
    87cc:	02003006 	andeq	r3, r0, #6
    87d0:	2e060104 	adfcss	f0, f6, f4
    87d4:	06052106 	streq	r2, [r5], -r6, lsl #2
    87d8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    87dc:	13053406 	movwne	r3, #21510	; 0x5406
    87e0:	01050106 	tsteq	r5, r6, lsl #2
    87e4:	00030568 	andeq	r0, r3, r8, ror #10
    87e8:	03020402 	movweq	r0, #9218	; 0x2402
    87ec:	02002077 	andeq	r2, r0, #119	; 0x77
    87f0:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
    87f4:	053f0605 	ldreq	r0, [pc, #-1541]!	; 81f7 <_Min_Heap_Size+0x79f7>
    87f8:	02010613 	andeq	r0, r1, #19922944	; 0x1300000
    87fc:	0101000a 	tsteq	r1, sl
    8800:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8804:	00000002 	andeq	r0, r0, r2
    8808:	03e90300 	mvneq	r0, #0, 6
    880c:	01021601 	tsteq	r2, r1, lsl #12
    8810:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8814:	02050001 	andeq	r0, r5, #1
    8818:	00000000 	andeq	r0, r0, r0
    881c:	0103e003 	tsteq	r3, r3
    8820:	05210305 	streq	r0, [r1, #-773]!	; 0xfffffcfb
    8824:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
    8828:	01010001 	tsteq	r1, r1
    882c:	000005be 			; <UNDEFINED> instruction: 0x000005be
    8830:	02350003 	eorseq	r0, r5, #3
    8834:	01020000 	mrseq	r0, (UNDEF: 2)
    8838:	000d0efb 	strdeq	r0, [sp], -fp
    883c:	01010101 	tsteq	r1, r1, lsl #2
    8840:	01000000 	mrseq	r0, (UNDEF: 0)
    8844:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    8848:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    884c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    8850:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    8854:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    8858:	5f787834 	svcpl	0x00787834
    885c:	5f4c4148 	svcpl	0x004c4148
    8860:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    8864:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    8868:	63006372 	movwvs	r6, #882	; 0x372
    886c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    8870:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    8874:	6f646978 	svcvs	0x00646978
    8878:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    887c:	6172676f 	cmnvs	r2, pc, ror #14
    8880:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    8884:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    8888:	63675c63 	cmnvs	r7, #25344	; 0x6300
    888c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    8890:	6f6e2d6d 	svcvs	0x006e2d6d
    8894:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8898:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    889c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    88a0:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    88a4:	30312e31 	eorscc	r2, r1, r1, lsr lr
    88a8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    88ac:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    88b0:	61652d65 	cmnvs	r5, r5, ror #26
    88b4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    88b8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    88bc:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    88c0:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    88c4:	6300656e 	movwvs	r6, #1390	; 0x56e
    88c8:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    88cc:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    88d0:	6f646978 	svcvs	0x00646978
    88d4:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    88d8:	6172676f 	cmnvs	r2, pc, ror #14
    88dc:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    88e0:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    88e4:	63675c63 	cmnvs	r7, #25344	; 0x6300
    88e8:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    88ec:	6f6e2d6d 	svcvs	0x006e2d6d
    88f0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    88f4:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    88f8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    88fc:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    8900:	30312e31 	eorscc	r2, r1, r1, lsr lr
    8904:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    8908:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    890c:	61652d65 	cmnvs	r5, r5, ror #26
    8910:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    8914:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8918:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    891c:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    8920:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    8924:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    8928:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    892c:	2f534953 	svccs	0x00534953
    8930:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    8934:	00656475 	rsbeq	r6, r5, r5, ror r4
    8938:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8940 <_Min_Heap_Size+0x8140>
    893c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    8940:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    8944:	5349534d 	movtpl	r5, #37709	; 0x934d
    8948:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    894c:	2f656369 	svccs	0x00656369
    8950:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    8954:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    8958:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    895c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    8960:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8964:	2f2e2e00 	svccs	0x002e2e00
    8968:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    896c:	2f737265 	svccs	0x00737265
    8970:	334d5453 	movtcc	r5, #54355	; 0xd453
    8974:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    8978:	41485f78 	hvcmi	34296	; 0x85f8
    897c:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    8980:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    8984:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    8988:	2f2e2e00 	svccs	0x002e2e00
    898c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    8990:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    8994:	74730000 	ldrbtvc	r0, [r3], #-0
    8998:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    899c:	5f787834 	svcpl	0x00787834
    89a0:	2e6c6168 	powcsez	f6, f4, #0.0
    89a4:	00010063 	andeq	r0, r1, r3, rrx
    89a8:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    89ac:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    89b0:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    89b4:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    89b8:	00020068 	andeq	r0, r2, r8, rrx
    89bc:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    89c0:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    89c4:	0300682e 	movweq	r6, #2094	; 0x82e
    89c8:	6f630000 	svcvs	0x00630000
    89cc:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    89d0:	682e346d 	stmdavs	lr!, {r0, r2, r3, r5, r6, sl, ip, sp}
    89d4:	00000400 	andeq	r0, r0, r0, lsl #8
    89d8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    89dc:	30346632 	eorscc	r6, r4, r2, lsr r6
    89e0:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
    89e4:	00050068 	andeq	r0, r5, r8, rrx
    89e8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    89ec:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    89f0:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    89f4:	00000500 	andeq	r0, r0, r0, lsl #10
    89f8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    89fc:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    8a00:	61685f78 	smcvs	34296	; 0x85f8
    8a04:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
    8a08:	00682e66 	rsbeq	r2, r8, r6, ror #28
    8a0c:	73000006 	movwvc	r0, #6
    8a10:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    8a14:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    8a18:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    8a1c:	0600682e 	streq	r6, [r0], -lr, lsr #16
    8a20:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    8a24:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    8a28:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    8a2c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    8a30:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    8a34:	00000500 	andeq	r0, r0, r0, lsl #10
    8a38:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    8a3c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    8a40:	61685f78 	smcvs	34296	; 0x85f8
    8a44:	6f635f6c 	svcvs	0x00635f6c
    8a48:	682e666e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r9, sl, sp, lr}
    8a4c:	00000700 	andeq	r0, r0, r0, lsl #14
    8a50:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    8a54:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    8a58:	61685f78 	smcvs	34296	; 0x85f8
    8a5c:	6f635f6c 	svcvs	0x00635f6c
    8a60:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    8a64:	0600682e 	streq	r6, [r0], -lr, lsr #16
    8a68:	05000000 	streq	r0, [r0, #-0]
    8a6c:	02050001 	andeq	r0, r5, #1
    8a70:	00000000 	andeq	r0, r0, r0
    8a74:	0101db03 	tsteq	r1, r3, lsl #22
    8a78:	00010216 	andeq	r0, r1, r6, lsl r2
    8a7c:	01050101 	tsteq	r5, r1, lsl #2
    8a80:	00020500 	andeq	r0, r2, r0, lsl #10
    8a84:	03000000 	movweq	r0, #0
    8a88:	160101e6 	strne	r0, [r1], -r6, ror #3
    8a8c:	01000102 	tsteq	r0, r2, lsl #2
    8a90:	00010501 	andeq	r0, r1, r1, lsl #10
    8a94:	00000205 	andeq	r0, r0, r5, lsl #4
    8a98:	be030000 	cdplt	0, 0, cr0, cr3, cr0, {0}
    8a9c:	03050101 	movweq	r0, #20737	; 0x5101
    8aa0:	2f303d22 	svccs	0x00303d22
    8aa4:	2f222f22 	svccs	0x00222f22
    8aa8:	31232f22 			; <UNDEFINED> instruction: 0x31232f22
    8aac:	13060105 	movwne	r0, #24837	; 0x6105
    8ab0:	01000a02 	tsteq	r0, r2, lsl #20
    8ab4:	00010501 	andeq	r0, r1, r1, lsl #10
    8ab8:	16c40205 	strbne	r0, [r4], r5, lsl #4
    8abc:	fd030800 	stc2	8, cr0, [r3, #-0]
    8ac0:	01060101 	tsteq	r6, r1, lsl #2
    8ac4:	30060305 	andcc	r0, r6, r5, lsl #6
    8ac8:	01063305 	tsteq	r6, r5, lsl #6
    8acc:	4a07052e 	bmi	1c9f8c <_Min_Heap_Size+0x1c978c>
    8ad0:	05660605 	strbeq	r0, [r6, #-1541]!	; 0xfffff9fb
    8ad4:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
    8ad8:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    8adc:	0505350c 	streq	r3, [r5, #-1292]	; 0xfffffaf4
    8ae0:	05672906 	strbeq	r2, [r7, #-2310]!	; 0xfffff6fa
    8ae4:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    8ae8:	05360603 	ldreq	r0, [r6, #-1539]!	; 0xfffff9fd
    8aec:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    8af0:	2e71030c 	cdpcs	3, 7, cr0, cr1, cr12, {0}
    8af4:	10030105 	andne	r0, r3, r5, lsl #2
    8af8:	07022020 	streq	r2, [r2, -r0, lsr #32]
    8afc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8b00:	02050001 	andeq	r0, r5, #1
    8b04:	08001710 	stmdaeq	r0, {r4, r8, r9, sl, ip}
    8b08:	01019d03 	tsteq	r1, r3, lsl #26
    8b0c:	5c230305 	stcpl	3, cr0, [r3], #-20	; 0xffffffec
    8b10:	3f3f4e4e 	svccc	0x003f4e4e
    8b14:	06010531 			; <UNDEFINED> instruction: 0x06010531
    8b18:	00040213 	andeq	r0, r4, r3, lsl r2
    8b1c:	01050101 	tsteq	r5, r1, lsl #2
    8b20:	44020500 	strmi	r0, [r2], #-1280	; 0xfffffb00
    8b24:	03080017 	movweq	r0, #32791	; 0x8017
    8b28:	050102b8 	streq	r0, [r1, #-696]	; 0xfffffd48
    8b2c:	0a051303 	beq	14d740 <_Min_Heap_Size+0x14cf40>
    8b30:	01050106 	tsteq	r5, r6, lsl #2
    8b34:	00060267 	andeq	r0, r6, r7, ror #4
    8b38:	01050101 	tsteq	r5, r1, lsl #2
    8b3c:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
    8b40:	03080017 	movweq	r0, #32791	; 0x8017
    8b44:	050102c3 	streq	r0, [r1, #-707]	; 0xfffffd3d
    8b48:	0a051303 	beq	14d75c <_Min_Heap_Size+0x14cf5c>
    8b4c:	01050106 	tsteq	r5, r6, lsl #2
    8b50:	0004022f 	andeq	r0, r4, pc, lsr #4
    8b54:	01050101 	tsteq	r5, r1, lsl #2
    8b58:	00020500 	andeq	r0, r2, r0, lsl #10
    8b5c:	03000000 	movweq	r0, #0
    8b60:	050102cc 	streq	r0, [r1, #-716]	; 0xfffffd34
    8b64:	01051303 	tsteq	r5, r3, lsl #6
    8b68:	06021306 	streq	r1, [r2], -r6, lsl #6
    8b6c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8b70:	02050001 	andeq	r0, r5, #1
    8b74:	00000000 	andeq	r0, r0, r0
    8b78:	0102d503 	tsteq	r2, r3, lsl #10
    8b7c:	03050106 	movweq	r0, #20742	; 0x5106
    8b80:	14132f06 	ldrne	r2, [r3], #-3846	; 0xfffff0fa
    8b84:	01040200 	mrseq	r0, R12_usr
    8b88:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    8b8c:	062e0204 	strteq	r0, [lr], -r4, lsl #4
    8b90:	06120530 			; <UNDEFINED> instruction: 0x06120530
    8b94:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
    8b98:	05291505 	streq	r1, [r9, #-1285]!	; 0xfffffafb
    8b9c:	17030603 	strne	r0, [r3, -r3, lsl #12]
    8ba0:	06010520 	streq	r0, [r1], -r0, lsr #10
    8ba4:	00030513 	andeq	r0, r3, r3, lsl r5
    8ba8:	03030402 	movweq	r0, #13314	; 0x3402
    8bac:	0200206b 	andeq	r2, r0, #107	; 0x6b
    8bb0:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    8bb4:	15410605 	strbne	r0, [r1, #-1541]	; 0xfffff9fb
    8bb8:	01061005 	tsteq	r6, r5
    8bbc:	23060505 	movwcs	r0, #25861	; 0x6505
    8bc0:	01060e05 	tsteq	r6, r5, lsl #28
    8bc4:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
    8bc8:	01060805 	tsteq	r6, r5, lsl #16
    8bcc:	31060705 	tstcc	r6, r5, lsl #14
    8bd0:	01061205 	tsteq	r6, r5, lsl #4
    8bd4:	01000902 	tsteq	r0, r2, lsl #18
    8bd8:	00010501 	andeq	r0, r1, r1, lsl #10
    8bdc:	00000205 	andeq	r0, r0, r5, lsl #4
    8be0:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    8be4:	03050102 	movweq	r0, #20738	; 0x5102
    8be8:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8bec:	00060213 	andeq	r0, r6, r3, lsl r2
    8bf0:	01050101 	tsteq	r5, r1, lsl #2
    8bf4:	68020500 	stmdavs	r2, {r8, sl}
    8bf8:	03080017 	movweq	r0, #32791	; 0x8017
    8bfc:	06010386 	streq	r0, [r1], -r6, lsl #7
    8c00:	06030501 	streq	r0, [r3], -r1, lsl #10
    8c04:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    8c08:	03052e01 	movweq	r2, #24065	; 0x5e01
    8c0c:	05152106 	ldreq	r2, [r5, #-262]	; 0xfffffefa
    8c10:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    8c14:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    8c18:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    8c1c:	03052e0a 	movweq	r2, #24074	; 0x5e0a
    8c20:	01040200 	mrseq	r0, R12_usr
    8c24:	08052506 	stmdaeq	r5, {r1, r2, r8, sl, sp}
    8c28:	01040200 	mrseq	r0, R12_usr
    8c2c:	000a0510 	andeq	r0, sl, r0, lsl r5
    8c30:	06010402 	streq	r0, [r1], -r2, lsl #8
    8c34:	00180501 	andseq	r0, r8, r1, lsl #10
    8c38:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    8c3c:	02000805 	andeq	r0, r0, #327680	; 0x50000
    8c40:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    8c44:	02203101 	eoreq	r3, r0, #1073741824	; 0x40000000
    8c48:	01010003 	tsteq	r1, r3
    8c4c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8c50:	00000002 	andeq	r0, r0, r2
    8c54:	03a00300 	moveq	r0, #0, 6
    8c58:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    8c5c:	01061105 	tsteq	r6, r5, lsl #2
    8c60:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
    8c64:	01010001 	tsteq	r1, r1
    8c68:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8c6c:	00000002 	andeq	r0, r0, r2
    8c70:	03b00300 	movseq	r0, #0, 6
    8c74:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    8c78:	01061205 	tsteq	r6, r5, lsl #4
    8c7c:	02670105 	rsbeq	r0, r7, #1073741825	; 0x40000001
    8c80:	01010001 	tsteq	r1, r1
    8c84:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8c88:	00000002 	andeq	r0, r0, r2
    8c8c:	03ba0300 			; <UNDEFINED> instruction: 0x03ba0300
    8c90:	13030501 	movwne	r0, #13569	; 0x3501
    8c94:	13060105 	movwne	r0, #24837	; 0x6105
    8c98:	01000402 	tsteq	r0, r2, lsl #8
    8c9c:	00010501 	andeq	r0, r1, r1, lsl #10
    8ca0:	00000205 	andeq	r0, r0, r5, lsl #4
    8ca4:	c3030000 	movwgt	r0, #12288	; 0x3000
    8ca8:	03050103 	movweq	r0, #20739	; 0x5103
    8cac:	06110513 			; <UNDEFINED> instruction: 0x06110513
    8cb0:	2f010501 	svccs	0x00010501
    8cb4:	01000402 	tsteq	r0, r2, lsl #8
    8cb8:	00010501 	andeq	r0, r1, r1, lsl #10
    8cbc:	00000205 	andeq	r0, r0, r5, lsl #4
    8cc0:	cc030000 	stcgt	0, cr0, [r3], {-0}
    8cc4:	03050103 	movweq	r0, #20739	; 0x5103
    8cc8:	06110513 			; <UNDEFINED> instruction: 0x06110513
    8ccc:	2f010501 	svccs	0x00010501
    8cd0:	01000602 	tsteq	r0, r2, lsl #12
    8cd4:	00010501 	andeq	r0, r1, r1, lsl #10
    8cd8:	00000205 	andeq	r0, r0, r5, lsl #4
    8cdc:	d5030000 	strle	r0, [r3, #-0]
    8ce0:	03050103 	movweq	r0, #20739	; 0x5103
    8ce4:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8ce8:	00030259 	andeq	r0, r3, r9, asr r2
    8cec:	01050101 	tsteq	r5, r1, lsl #2
    8cf0:	00020500 	andeq	r0, r2, r0, lsl #10
    8cf4:	03000000 	movweq	r0, #0
    8cf8:	050103de 	streq	r0, [r1, #-990]	; 0xfffffc22
    8cfc:	01051303 	tsteq	r5, r3, lsl #6
    8d00:	03025906 	movweq	r5, #10502	; 0x2906
    8d04:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8d08:	02050001 	andeq	r0, r5, #1
    8d0c:	00000000 	andeq	r0, r0, r0
    8d10:	0103e703 	tsteq	r3, r3, lsl #14
    8d14:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8d18:	02590601 	subseq	r0, r9, #1048576	; 0x100000
    8d1c:	01010003 	tsteq	r1, r3
    8d20:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8d24:	00000002 	andeq	r0, r0, r2
    8d28:	03f00300 	mvnseq	r0, #0, 6
    8d2c:	13030501 	movwne	r0, #13569	; 0x3501
    8d30:	59060105 	stmdbpl	r6, {r0, r2, r8}
    8d34:	01000302 	tsteq	r0, r2, lsl #6
    8d38:	00010501 	andeq	r0, r1, r1, lsl #10
    8d3c:	00000205 	andeq	r0, r0, r5, lsl #4
    8d40:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    8d44:	03050103 	movweq	r0, #20739	; 0x5103
    8d48:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8d4c:	00030259 	andeq	r0, r3, r9, asr r2
    8d50:	01050101 	tsteq	r5, r1, lsl #2
    8d54:	00020500 	andeq	r0, r2, r0, lsl #10
    8d58:	03000000 	movweq	r0, #0
    8d5c:	05010482 	streq	r0, [r1, #-1154]	; 0xfffffb7e
    8d60:	01051303 	tsteq	r5, r3, lsl #6
    8d64:	03025906 	movweq	r5, #10502	; 0x2906
    8d68:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8d6c:	02050001 	andeq	r0, r5, #1
    8d70:	00000000 	andeq	r0, r0, r0
    8d74:	01048d03 	tsteq	r4, r3, lsl #26
    8d78:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8d7c:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    8d80:	04024b01 	streq	r4, [r2], #-2817	; 0xfffff4ff
    8d84:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8d88:	02050001 	andeq	r0, r5, #1
    8d8c:	00000000 	andeq	r0, r0, r0
    8d90:	01049803 	tsteq	r4, r3, lsl #16
    8d94:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8d98:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    8d9c:	04024b01 	streq	r4, [r2], #-2817	; 0xfffff4ff
    8da0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8da4:	02050001 	andeq	r0, r5, #1
    8da8:	00000000 	andeq	r0, r0, r0
    8dac:	0104a103 	tsteq	r4, r3, lsl #2
    8db0:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8db4:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    8db8:	01010006 	tsteq	r1, r6
    8dbc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8dc0:	00000002 	andeq	r0, r0, r2
    8dc4:	04aa0300 	strteq	r0, [sl], #768	; 0x300
    8dc8:	13030501 	movwne	r0, #13569	; 0x3501
    8dcc:	13060105 	movwne	r0, #24837	; 0x6105
    8dd0:	01000602 	tsteq	r0, r2, lsl #12
    8dd4:	00010501 	andeq	r0, r1, r1, lsl #10
    8dd8:	00000205 	andeq	r0, r0, r5, lsl #4
    8ddc:	b3030000 	movwlt	r0, #12288	; 0x3000
    8de0:	03050104 	movweq	r0, #20740	; 0x5104
    8de4:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8de8:	00060213 	andeq	r0, r6, r3, lsl r2
    8dec:	026b0101 	rsbeq	r0, fp, #1073741824	; 0x40000000
    8df0:	00030000 	andeq	r0, r3, r0
    8df4:	00000185 	andeq	r0, r0, r5, lsl #3
    8df8:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    8dfc:	0101000d 	tsteq	r1, sp
    8e00:	00000101 	andeq	r0, r0, r1, lsl #2
    8e04:	00000100 	andeq	r0, r0, r0, lsl #2
    8e08:	2f2e2e01 	svccs	0x002e2e01
    8e0c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    8e10:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    8e14:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    8e18:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    8e1c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    8e20:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    8e24:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    8e28:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    8e2c:	5f6d7261 	svcpl	0x006d7261
    8e30:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    8e34:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8e38:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8e3c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8e40:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8e44:	30312d69 	eorscc	r2, r1, r9, ror #26
    8e48:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    8e4c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8e50:	615c3031 	cmpvs	ip, r1, lsr r0
    8e54:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8e58:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8e5c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8e60:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    8e64:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8e68:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    8e6c:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    8e70:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    8e74:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    8e78:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    8e7c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    8e80:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    8e84:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    8e88:	5f6d7261 	svcpl	0x006d7261
    8e8c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    8e90:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8e94:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8e98:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8e9c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8ea0:	30312d69 	eorscc	r2, r1, r9, ror #26
    8ea4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    8ea8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8eac:	615c3031 	cmpvs	ip, r1, lsr r0
    8eb0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8eb4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8eb8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8ebc:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    8ec0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8ec4:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    8ec8:	2f2e2e00 	svccs	0x002e2e00
    8ecc:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    8ed0:	2f737265 	svccs	0x00737265
    8ed4:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    8ed8:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
    8edc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8ee0:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    8ee4:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    8ee8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    8eec:	534d432f 	movtpl	r4, #54063	; 0xd32f
    8ef0:	442f5349 	strtmi	r5, [pc], #-841	; 8ef8 <_Min_Heap_Size+0x86f8>
    8ef4:	63697665 	cmnvs	r9, #105906176	; 0x6500000
    8ef8:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
    8efc:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    8f00:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    8f04:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
    8f08:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8f0c:	00006564 	andeq	r6, r0, r4, ror #10
    8f10:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    8f14:	735f6d65 	cmpvc	pc, #6464	; 0x1940
    8f18:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    8f1c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    8f20:	0100632e 	tsteq	r0, lr, lsr #6
    8f24:	645f0000 	ldrbvs	r0, [pc], #-0	; 8f2c <_Min_Heap_Size+0x872c>
    8f28:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    8f2c:	745f746c 	ldrbvc	r7, [pc], #-1132	; 8f34 <_Min_Heap_Size+0x8734>
    8f30:	73657079 	cmnvc	r5, #121	; 0x79
    8f34:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    8f38:	735f0000 	cmpvc	pc, #0
    8f3c:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    8f40:	00682e74 	rsbeq	r2, r8, r4, ror lr
    8f44:	63000003 	movwvs	r0, #3
    8f48:	5f65726f 	svcpl	0x0065726f
    8f4c:	2e346d63 	cdpcs	13, 3, cr6, cr4, cr3, {3}
    8f50:	00040068 	andeq	r0, r4, r8, rrx
    8f54:	73797300 	cmnvc	r9, #0, 6
    8f58:	5f6d6574 	svcpl	0x006d6574
    8f5c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    8f60:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    8f64:	00682e78 	rsbeq	r2, r8, r8, ror lr
    8f68:	73000005 	movwvc	r0, #5
    8f6c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    8f70:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    8f74:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    8f78:	00000500 	andeq	r0, r0, r0, lsl #10
    8f7c:	00010500 	andeq	r0, r1, r0, lsl #10
    8f80:	17900205 	ldrne	r0, [r0, r5, lsl #4]
    8f84:	a7030800 	strge	r0, [r3, -r0, lsl #16]
    8f88:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    8f8c:	06100515 			; <UNDEFINED> instruction: 0x06100515
    8f90:	03010501 	movweq	r0, #5377	; 0x1501
    8f94:	0302740b 	movweq	r7, #9227	; 0x240b
    8f98:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8f9c:	02050001 	andeq	r0, r5, #1
    8fa0:	00000000 	andeq	r0, r0, r0
    8fa4:	0101dc03 	tsteq	r1, r3, lsl #24
    8fa8:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    8fac:	01060c05 	tsteq	r6, r5, lsl #24
    8fb0:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    8fb4:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    8fb8:	581f0307 	ldmdapl	pc, {r0, r1, r2, r8, r9}	; <UNPREDICTABLE>
    8fbc:	01061705 	tsteq	r6, r5, lsl #14
    8fc0:	06070520 	streq	r0, [r7], -r0, lsr #10
    8fc4:	2063032f 	rsbcs	r0, r3, pc, lsr #6
    8fc8:	01061705 	tsteq	r6, r5, lsl #14
    8fcc:	06070520 	streq	r0, [r7], -r0, lsr #10
    8fd0:	0303052f 	movweq	r0, #13615	; 0x352f
    8fd4:	1c050120 	stfnes	f0, [r5], {32}
    8fd8:	34050106 	strcc	r0, [r5], #-262	; 0xfffffefa
    8fdc:	2e16052e 	cfmul64cs	mvdx0, mvdx6, mvdx14
    8fe0:	30060305 	andcc	r0, r6, r5, lsl #6
    8fe4:	01061305 	tsteq	r6, r5, lsl #6
    8fe8:	054b0105 	strbeq	r0, [fp, #-261]	; 0xfffffefb
    8fec:	5f030607 	svcpl	0x00030607
    8ff0:	06170520 	ldreq	r0, [r7], -r0, lsr #10
    8ff4:	07052001 	streq	r2, [r5, -r1]
    8ff8:	05262f06 	streq	r2, [r6, #-3846]!	; 0xfffff0fa
    8ffc:	20010617 	andcs	r0, r1, r7, lsl r6
    9000:	21060705 	tstcs	r6, r5, lsl #14
    9004:	01061105 	tsteq	r6, r5, lsl #2
    9008:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    900c:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    9010:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    9014:	053f0609 	ldreq	r0, [pc, #-1545]!	; 8a13 <_Min_Heap_Size+0x8213>
    9018:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    901c:	05203c2c 	streq	r3, [r0, #-3116]!	; 0xfffff3d4
    9020:	1005204a 	andne	r2, r5, sl, asr #32
    9024:	0607052e 	streq	r0, [r7], -lr, lsr #10
    9028:	06140536 			; <UNDEFINED> instruction: 0x06140536
    902c:	2e320501 	cdpcs	5, 3, cr0, cr2, cr1, {0}
    9030:	052e3805 	streq	r3, [lr, #-2053]!	; 0xfffff7fb
    9034:	0705200c 	streq	r2, [r5, -ip]
    9038:	1f052106 	svcne	0x00052106
    903c:	17050106 	strne	r0, [r5, -r6, lsl #2]
    9040:	0705202e 	streq	r2, [r5, -lr, lsr #32]
    9044:	09052106 	stmdbeq	r5, {r1, r2, r8, sp}
    9048:	061d051b 			; <UNDEFINED> instruction: 0x061d051b
    904c:	3c2c0501 	cfstr32cc	mvfx0, [ip], #-4
    9050:	204a0520 	subcs	r0, sl, r0, lsr #10
    9054:	2e2e1005 	cdpcs	0, 2, cr1, cr14, cr5, {0}
    9058:	01000c02 	tsteq	r0, r2, lsl #24
    905c:	00059701 	andeq	r9, r5, r1, lsl #14
    9060:	4e000300 	cdpmi	3, 0, cr0, cr0, cr0, {0}
    9064:	02000002 	andeq	r0, r0, #2
    9068:	0d0efb01 	vstreq	d15, [lr, #-4]
    906c:	01010100 	mrseq	r0, (UNDEF: 17)
    9070:	00000001 	andeq	r0, r0, r1
    9074:	01000001 	tsteq	r0, r1
    9078:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    907c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    9080:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    9084:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    9088:	61662f73 	smcvs	25331	; 0x62f3
    908c:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    9090:	706d7564 	rsbvc	r7, sp, r4, ror #10
    9094:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    9098:	2f2e2e00 	svccs	0x002e2e00
    909c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    90a0:	2f737265 	svccs	0x00737265
    90a4:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    90a8:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
    90ac:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    90b0:	3a630065 	bcc	18c924c <_Min_Heap_Size+0x18c8a4c>
    90b4:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    90b8:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    90bc:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    90c0:	6f72705c 	svcvs	0x0072705c
    90c4:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    90c8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    90cc:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    90d0:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    90d4:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    90d8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    90dc:	61652d65 	cmnvs	r5, r5, ror #26
    90e0:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    90e4:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    90e8:	31323032 	teqcc	r2, r2, lsr r0
    90ec:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    90f0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    90f4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    90f8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    90fc:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    9100:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    9104:	616d5c65 	cmnvs	sp, r5, ror #24
    9108:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    910c:	3a630065 	bcc	18c92a8 <_Min_Heap_Size+0x18c8aa8>
    9110:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    9114:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    9118:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    911c:	6f72705c 	svcvs	0x0072705c
    9120:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    9124:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    9128:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    912c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    9130:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    9134:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    9138:	61652d65 	cmnvs	r5, r5, ror #26
    913c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    9140:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    9144:	31323032 	teqcc	r2, r2, lsr r0
    9148:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    914c:	5c62696c 			; <UNDEFINED> instruction: 0x5c62696c
    9150:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    9154:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    9158:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    915c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    9160:	30315c69 	eorscc	r5, r1, r9, ror #24
    9164:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    9168:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    916c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    9170:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    9174:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    9178:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    917c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    9180:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    9184:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    9188:	5f6d7261 	svcpl	0x006d7261
    918c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    9190:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    9194:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    9198:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    919c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    91a0:	30312d69 	eorscc	r2, r1, r9, ror #26
    91a4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    91a8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    91ac:	615c3031 	cmpvs	ip, r1, lsr r0
    91b0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    91b4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    91b8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    91bc:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    91c0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    91c4:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
    91c8:	2f2e2e00 	svccs	0x002e2e00
    91cc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    91d0:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    91d4:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    91d8:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    91dc:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    91e0:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    91e4:	6e692f70 	mcrvs	15, 3, r2, cr9, cr0, {3}
    91e8:	3a630063 	bcc	18c937c <_Min_Heap_Size+0x18c8b7c>
    91ec:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    91f0:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    91f4:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    91f8:	6f72705c 	svcvs	0x0072705c
    91fc:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    9200:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    9204:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    9208:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    920c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    9210:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    9214:	61652d65 	cmnvs	r5, r5, ror #26
    9218:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    921c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    9220:	31323032 	teqcc	r2, r2, lsr r0
    9224:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    9228:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    922c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    9230:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    9234:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    9238:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    923c:	66000065 	strvs	r0, [r0], -r5, rrx
    9240:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    9244:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    9248:	00632e70 	rsbeq	r2, r3, r0, ror lr
    924c:	63000001 	movwvs	r0, #1
    9250:	7369736d 	cmnvc	r9, #-1275068415	; 0xb4000001
    9254:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    9258:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    925c:	645f0000 	ldrbvs	r0, [pc], #-0	; 9264 <_Min_Heap_Size+0x8a64>
    9260:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    9264:	745f746c 	ldrbvc	r7, [pc], #-1132	; 926c <_Min_Heap_Size+0x8a6c>
    9268:	73657079 	cmnvc	r5, #121	; 0x79
    926c:	0300682e 	movweq	r6, #2094	; 0x82e
    9270:	74730000 	ldrbtvc	r0, [r3], #-0
    9274:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    9278:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    927c:	735f0000 	cmpvc	pc, #0
    9280:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    9284:	00682e74 	rsbeq	r2, r8, r4, ror lr
    9288:	66000005 	strvs	r0, [r0], -r5
    928c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    9290:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    9294:	00682e70 	rsbeq	r2, r8, r0, ror lr
    9298:	73000006 	movwvc	r0, #6
    929c:	6f696474 	svcvs	0x00696474
    92a0:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    92a4:	623c0000 	eorsvs	r0, ip, #0
    92a8:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    92ac:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    92b0:	00000000 	andeq	r0, r0, r0
    92b4:	00380500 	eorseq	r0, r8, r0, lsl #10
    92b8:	17a40205 	strne	r0, [r4, r5, lsl #4]!
    92bc:	fe030800 	vcmla.f16	d0, d3, d0[0], #0
    92c0:	01060100 	mrseq	r0, (UNDEF: 22)
    92c4:	21060505 	tstcs	r6, r5, lsl #10
    92c8:	01060e05 	tsteq	r6, r5, lsl #28
    92cc:	2f060505 	svccs	0x00060505
    92d0:	010a0513 	tsteq	sl, r3, lsl r5
    92d4:	01060505 	tsteq	r6, r5, lsl #10
    92d8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    92dc:	21060304 	tstcs	r6, r4, lsl #6
    92e0:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    92e4:	01060304 	tsteq	r6, r4, lsl #6
    92e8:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
    92ec:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    92f0:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    92f4:	05570603 	ldrbeq	r0, [r7, #-1539]	; 0xfffff9fd
    92f8:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    92fc:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    9300:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    9304:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    9308:	04020005 	streq	r0, [r2], #-5
    930c:	06010601 	streq	r0, [r1], -r1, lsl #12
    9310:	06220531 			; <UNDEFINED> instruction: 0x06220531
    9314:	05052f01 	streq	r2, [r5, #-3841]	; 0xfffff0ff
    9318:	01052f06 	tsteq	r5, r6, lsl #30
    931c:	022e1306 	eoreq	r1, lr, #402653184	; 0x18000000
    9320:	01010002 	tsteq	r1, r2
    9324:	05003305 	streq	r3, [r0, #-773]	; 0xfffffcfb
    9328:	0017d002 	andseq	sp, r7, r2
    932c:	01890308 	orreq	r0, r9, r8, lsl #6
    9330:	16050501 	strne	r0, [r5], -r1, lsl #10
    9334:	01060e05 	tsteq	r6, r5, lsl #28
    9338:	2f060505 	svccs	0x00060505
    933c:	01063205 	tsteq	r6, r5, lsl #4
    9340:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    9344:	052f0605 	streq	r0, [pc, #-1541]!	; 8d47 <_Min_Heap_Size+0x8547>
    9348:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    934c:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    9350:	05053c01 	streq	r3, [r5, #-3073]	; 0xfffff3ff
    9354:	08053f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
    9358:	26050106 	strcs	r0, [r5], -r6, lsl #2
    935c:	01040200 	mrseq	r0, R12_usr
    9360:	3f0c053c 	svccc	0x000c053c
    9364:	1b100520 	blne	40a7ec <_Min_Heap_Size+0x409fec>
    9368:	23202020 			; <UNDEFINED> instruction: 0x23202020
    936c:	01052020 	tsteq	r5, r0, lsr #32
    9370:	00010223 	andeq	r0, r1, r3, lsr #4
    9374:	36050101 	strcc	r0, [r5], -r1, lsl #2
    9378:	08020500 	stmdaeq	r2, {r8, sl}
    937c:	03080018 	movweq	r0, #32792	; 0x8018
    9380:	06010198 			; <UNDEFINED> instruction: 0x06010198
    9384:	06050501 	streq	r0, [r5], -r1, lsl #10
    9388:	062e062f 	strteq	r0, [lr], -pc, lsr #12
    938c:	01051330 	tsteq	r5, r0, lsr r3
    9390:	02203e06 	eoreq	r3, r0, #6, 28	; 0x60
    9394:	01010002 	tsteq	r1, r2
    9398:	05001c05 	streq	r1, [r0, #-3077]	; 0xfffff3fb
    939c:	00182002 	andseq	r2, r8, r2
    93a0:	00f30308 	rscseq	r0, r3, r8, lsl #6
    93a4:	21050501 	tstcs	r5, r1, lsl #10
    93a8:	01061a05 	tsteq	r6, r5, lsl #20
    93ac:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    93b0:	052f0605 	streq	r0, [pc, #-1541]!	; 8db3 <_Min_Heap_Size+0x85b3>
    93b4:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    93b8:	05052018 	streq	r2, [r5, #-24]	; 0xffffffe8
    93bc:	684c2f06 	stmdavs	ip, {r1, r2, r8, r9, sl, fp, sp}^
    93c0:	4c060105 	stfmis	f0, [r6], {5}
    93c4:	01001302 	tsteq	r0, r2, lsl #6
    93c8:	00730501 	rsbseq	r0, r3, r1, lsl #10
    93cc:	18700205 	ldmdane	r0!, {r0, r2, r9}^
    93d0:	db030800 	blle	cb3d8 <_Min_Heap_Size+0xcabd8>
    93d4:	01060101 	tsteq	r6, r1, lsl #2
    93d8:	2f060505 	svccs	0x00060505
    93dc:	08051313 	stmdaeq	r5, {r0, r1, r4, r8, r9, ip}
    93e0:	1a050106 	bne	149800 <_Min_Heap_Size+0x149000>
    93e4:	01040200 	mrseq	r0, R12_usr
    93e8:	06050558 			; <UNDEFINED> instruction: 0x06050558
    93ec:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
    93f0:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    93f4:	05052909 	streq	r2, [r5, #-2313]	; 0xfffff6f7
    93f8:	02040200 	andeq	r0, r4, #0, 4
    93fc:	02003606 	andeq	r3, r0, #6291456	; 0x600000
    9400:	00200104 	eoreq	r0, r0, r4, lsl #2
    9404:	06030402 	streq	r0, [r3], -r2, lsl #8
    9408:	06090520 	streq	r0, [r9], -r0, lsr #10
    940c:	060c0530 			; <UNDEFINED> instruction: 0x060c0530
    9410:	06090501 	streq	r0, [r9], -r1, lsl #10
    9414:	06130522 	ldreq	r0, [r3], -r2, lsr #10
    9418:	200c0501 	andcs	r0, ip, r1, lsl #10
    941c:	02002f05 	andeq	r2, r0, #5, 30
    9420:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    9424:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
    9428:	09052001 	stmdbeq	r5, {r0, sp}
    942c:	0c053206 	sfmeq	f3, 4, [r5], {6}
    9430:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9434:	05144006 	ldreq	r4, [r4, #-6]
    9438:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    943c:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    9440:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    9444:	05240609 	streq	r0, [r4, #-1545]!	; 0xfffff9f7
    9448:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    944c:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    9450:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    9454:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    9458:	17053206 	strne	r3, [r5, -r6, lsl #4]
    945c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9460:	0f052f06 	svceq	0x00052f06
    9464:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9468:	0c052106 	stfeqs	f2, [r5], {6}
    946c:	01050106 	tsteq	r5, r6, lsl #2
    9470:	03100533 	tsteq	r0, #213909504	; 0xcc00000
    9474:	3f3c3c5a 	svccc	0x003c3c5a
    9478:	00060258 	andeq	r0, r6, r8, asr r2
    947c:	43050101 	movwmi	r0, #20737	; 0x5101
    9480:	ec020500 	cfstr32	mvfx0, [r2], {-0}
    9484:	03080018 	movweq	r0, #32792	; 0x8018
    9488:	060101a0 	streq	r0, [r1], -r0, lsr #3
    948c:	06050501 	streq	r0, [r5], -r1, lsl #10
    9490:	1313133d 	tstne	r3, #-201326592	; 0xf4000000
    9494:	06180514 			; <UNDEFINED> instruction: 0x06180514
    9498:	20160501 	andscs	r0, r6, r1, lsl #10
    949c:	2f060505 	svccs	0x00060505
    94a0:	01061805 	tsteq	r6, r5, lsl #16
    94a4:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    94a8:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    94ac:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    94b0:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    94b4:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    94b8:	16050106 	strne	r0, [r5], -r6, lsl #2
    94bc:	06050520 	streq	r0, [r5], -r0, lsr #10
    94c0:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    94c4:	20160501 	andscs	r0, r6, r1, lsl #10
    94c8:	21060505 	tstcs	r6, r5, lsl #10
    94cc:	01061805 	tsteq	r6, r5, lsl #16
    94d0:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    94d4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    94d8:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    94dc:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    94e0:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    94e4:	16050106 	strne	r0, [r5], -r6, lsl #2
    94e8:	06050520 	streq	r0, [r5], -r0, lsr #10
    94ec:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    94f0:	20160501 	andscs	r0, r6, r1, lsl #10
    94f4:	21060505 	tstcs	r6, r5, lsl #10
    94f8:	01061805 	tsteq	r6, r5, lsl #16
    94fc:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    9500:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    9504:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    9508:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    950c:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    9510:	16050106 	strne	r0, [r5], -r6, lsl #2
    9514:	06050520 	streq	r0, [r5], -r0, lsr #10
    9518:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    951c:	20160501 	andscs	r0, r6, r1, lsl #10
    9520:	21060505 	tstcs	r6, r5, lsl #10
    9524:	01061805 	tsteq	r6, r5, lsl #16
    9528:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    952c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    9530:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    9534:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    9538:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    953c:	16050106 	strne	r0, [r5], -r6, lsl #2
    9540:	06050520 	streq	r0, [r5], -r0, lsr #10
    9544:	062e0622 	strteq	r0, [lr], -r2, lsr #12
    9548:	4b3d3d2f 	blmi	f58a0c <_Min_Heap_Size+0xf5820c>
    954c:	4b4b4b4b 	blmi	12dc280 <_Min_Heap_Size+0x12dba80>
    9550:	4b4b4b4b 	blmi	12dc284 <_Min_Heap_Size+0x12dba84>
    9554:	4b4b4b4b 	blmi	12dc288 <_Min_Heap_Size+0x12dba88>
    9558:	3d4b4b4b 	vstrcc	d20, [fp, #-300]	; 0xfffffed4
    955c:	0d05133e 	stceq	3, cr1, [r5, #-248]	; 0xffffff08
    9560:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    9564:	20068606 	andcs	r8, r6, r6, lsl #12
    9568:	054b2f06 	strbeq	r2, [fp, #-3846]	; 0xfffff0fa
    956c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    9570:	09052005 	stmdbeq	r5, {r0, r2, sp}
    9574:	03040200 	movweq	r0, #16896	; 0x4200
    9578:	24052106 	strcs	r2, [r5], #-262	; 0xfffffefa
    957c:	03040200 	movweq	r0, #16896	; 0x4200
    9580:	00290565 	eoreq	r0, r9, r5, ror #10
    9584:	06030402 	streq	r0, [r3], -r2, lsl #8
    9588:	00150501 	andseq	r0, r5, r1, lsl #10
    958c:	06010402 	streq	r0, [r1], -r2, lsl #8
    9590:	00050520 	andeq	r0, r5, r0, lsr #10
    9594:	06010402 	streq	r0, [r1], -r2, lsl #8
    9598:	00310601 	eorseq	r0, r1, r1, lsl #12
    959c:	3d010402 	cfstrscc	mvf0, [r1, #-8]
    95a0:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    95a4:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
    95a8:	0402000b 	streq	r0, [r2], #-11
    95ac:	31020101 	tstcc	r2, r1, lsl #2
    95b0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    95b4:	0205002e 	andeq	r0, r5, #46	; 0x2e
    95b8:	00000000 	andeq	r0, r0, r0
    95bc:	01028703 	tsteq	r2, r3, lsl #14
    95c0:	04130505 	ldreq	r0, [r3], #-1285	; 0xfffffafb
    95c4:	031f0502 	tsteq	pc, #8388608	; 0x800000
    95c8:	050106da 	streq	r0, [r1, #-1754]	; 0xfffff926
    95cc:	2f141403 	svccs	0x00141403
    95d0:	01040106 	tsteq	r4, r6, lsl #2
    95d4:	a2030105 	andge	r0, r3, #1073741825	; 0x40000001
    95d8:	01020179 	tsteq	r2, r9, ror r1
    95dc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    95e0:	0205002e 	andeq	r0, r5, #46	; 0x2e
    95e4:	00000000 	andeq	r0, r0, r0
    95e8:	01028b03 	tsteq	r2, r3, lsl #22
    95ec:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    95f0:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    95f4:	01010004 	tsteq	r1, r4
    95f8:	0000010b 	andeq	r0, r0, fp, lsl #2
    95fc:	00ba0003 	adcseq	r0, sl, r3
    9600:	01020000 	mrseq	r0, (UNDEF: 2)
    9604:	000d0efb 	strdeq	r0, [sp], -fp
    9608:	01010101 	tsteq	r1, r1, lsl #2
    960c:	01000000 	mrseq	r0, (UNDEF: 0)
    9610:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    9614:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    9618:	2f2e2e2f 	svccs	0x002e2e2f
    961c:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    9620:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    9624:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    9628:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    962c:	2f706d75 	svccs	0x00706d75
    9630:	2f757063 	svccs	0x00757063
    9634:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    9638:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
    963c:	3a630034 	bcc	18c9714 <_Min_Heap_Size+0x18c8f14>
    9640:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    9644:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    9648:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    964c:	6f72705c 	svcvs	0x0072705c
    9650:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    9654:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    9658:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    965c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    9660:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    9664:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    9668:	61652d65 	cmnvs	r5, r5, ror #26
    966c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    9670:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    9674:	31323032 	teqcc	r2, r2, lsr r0
    9678:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    967c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    9680:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    9684:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    9688:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    968c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    9690:	66000065 	strvs	r0, [r0], -r5, rrx
    9694:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    9698:	6c61682d 	stclvs	8, cr6, [r1], #-180	; 0xffffff4c
    969c:	0100632e 	tsteq	r0, lr, lsr #6
    96a0:	623c0000 	eorsvs	r0, ip, #0
    96a4:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    96a8:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    96ac:	00000000 	andeq	r0, r0, r0
    96b0:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    96b4:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    96b8:	00000002 	andeq	r0, r0, r2
    96bc:	05003505 	streq	r3, [r0, #-1285]	; 0xfffffafb
    96c0:	001a7002 	andseq	r7, sl, r2
    96c4:	010e0308 	tsteq	lr, r8, lsl #6
    96c8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    96cc:	20062f06 	andcs	r2, r6, r6, lsl #30
    96d0:	053d2f06 	ldreq	r2, [sp, #-3846]!	; 0xfffff0fa
    96d4:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    96d8:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    96dc:	053d4005 	ldreq	r4, [sp, #-5]!
    96e0:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    96e4:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    96e8:	053d4005 	ldreq	r4, [sp, #-5]!
    96ec:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    96f0:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    96f4:	01054005 	tsteq	r5, r5
    96f8:	09053d06 	stmdbeq	r5, {r1, r2, r8, sl, fp, ip, sp}
    96fc:	20710306 	rsbscs	r0, r1, r6, lsl #6
    9700:	18025050 	stmdane	r2, {r4, r6, ip, lr}
    9704:	7c010100 	stfvcs	f0, [r1], {-0}
    9708:	03000000 	movweq	r0, #0
    970c:	00003600 	andeq	r3, r0, r0, lsl #12
    9710:	fb010200 	blx	49f1a <_Min_Heap_Size+0x4971a>
    9714:	01000d0e 	tsteq	r0, lr, lsl #26
    9718:	00010101 	andeq	r0, r1, r1, lsl #2
    971c:	00010000 	andeq	r0, r1, r0
    9720:	2f2e0100 	svccs	0x002e0100
    9724:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    9728:	00707574 	rsbseq	r7, r0, r4, ror r5
    972c:	61747300 	cmnvs	r4, r0, lsl #6
    9730:	70757472 	rsbsvc	r7, r5, r2, ror r4
    9734:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    9738:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    973c:	78783530 	ldmdavc	r8!, {r4, r5, r8, sl, ip, sp}^
    9740:	0100732e 	tsteq	r0, lr, lsr #6
    9744:	00000000 	andeq	r0, r0, r0
    9748:	1af80205 	bne	ffe09f64 <_estack+0xdfe08d2c>
    974c:	3c030800 	stccc	8, cr0, [r3], {-0}
    9750:	21313101 	teqcs	r1, r1, lsl #2
    9754:	23212121 			; <UNDEFINED> instruction: 0x23212121
    9758:	21232121 			; <UNDEFINED> instruction: 0x21232121
    975c:	21212321 			; <UNDEFINED> instruction: 0x21212321
    9760:	23212321 			; <UNDEFINED> instruction: 0x23212321
    9764:	2f302321 	svccs	0x00302321
    9768:	34205803 	strtcc	r5, [r0], #-2051	; 0xfffff7fd
    976c:	0f032f2f 	svceq	0x00032f2f
    9770:	02022f2e 	andeq	r2, r2, #46, 30	; 0xb8
    9774:	00010100 	andeq	r0, r1, r0, lsl #2
    9778:	1b480205 	blne	1209f94 <_Min_Heap_Size+0x1209794>
    977c:	f1030800 			; <UNDEFINED> instruction: 0xf1030800
    9780:	01020100 	mrseq	r0, (UNDEF: 18)
    9784:	7e010100 	adfvcs	f0, f1, f0
    9788:	03000000 	movweq	r0, #0
    978c:	00004d00 	andeq	r4, r0, r0, lsl #26
    9790:	fb010200 	blx	49f9a <_Min_Heap_Size+0x4979a>
    9794:	01000d0e 	tsteq	r0, lr, lsl #26
    9798:	00010101 	andeq	r0, r1, r1, lsl #2
    979c:	00010000 	andeq	r0, r1, r0
    97a0:	2e2e0100 	sufcse	f0, f6, f0
    97a4:	2f2e2e2f 	svccs	0x002e2e2f
    97a8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 96f8 <_Min_Heap_Size+0x8ef8>
    97ac:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    97b0:	2f736c69 	svccs	0x00736c69
    97b4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    97b8:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    97bc:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
    97c0:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
    97c4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    97c8:	346d2d78 	strbtcc	r2, [sp], #-3448	; 0xfffff288
    97cc:	61660000 	cmnvs	r6, r0
    97d0:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    97d4:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
    97d8:	00010073 	andeq	r0, r1, r3, ror r0
    97dc:	05000000 	streq	r0, [r0, #-0]
    97e0:	0001d002 	andeq	sp, r1, r2
    97e4:	01190308 	tsteq	r9, r8, lsl #6
    97e8:	21212121 			; <UNDEFINED> instruction: 0x21212121
    97ec:	2f222f22 	svccs	0x00222f22
    97f0:	23212121 			; <UNDEFINED> instruction: 0x23212121
    97f4:	2f212f30 	svccs	0x00212f30
    97f8:	2f212130 	svccs	0x00212130
    97fc:	2e660321 	cdpcs	3, 6, cr0, cr6, cr1, {1}
    9800:	2e150330 	mrccs	3, 0, r0, cr5, cr0, {1}
    9804:	01000202 	tsteq	r0, r2, lsl #4
    9808:	Address 0x00009808 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
       4:	4d006674 	stcmi	6, cr6, [r0, #-464]	; 0xfffffe30
  errno = ENOMEM;
       8:	53555f58 	cmppl	r5, #88, 30	; 0x160
}
       c:	31545241 	cmpcc	r4, r1, asr #4
      10:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	6e495f54 	mcrvs	15, 2, r5, cr9, cr4, {2}
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	41007469 	tstmi	r0, r9, ror #8
      1c:	4c314250 	lfmmi	f4, 4, [r1], #-320	; 0xfffffec0
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
      24:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
}
      28:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
      2c:	74535f54 	ldrbvc	r5, [r3], #-3924	; 0xfffff0ac
      30:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
    if (status != HAL_OK)
      34:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      uwTickFreq = prevTickFreq;
      38:	67006665 	strvs	r6, [r0, -r5, ror #12]
      3c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
      40:	304d0065 	subcc	r0, sp, r5, rrx
      44:	44005241 	strmi	r5, [r0], #-577	; 0xfffffdbf
      if (pllsource != 0)
      48:	495f414d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
      4c:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      54:	41006665 	tstmi	r0, r5, ror #12
      58:	43314250 	teqmi	r1, #80, 4
      5c:	69444b4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, fp, lr}^
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	65646976 	strbvs	r6, [r4, #-2422]!	; 0xfffff68a
      64:	5f5f0072 	svcpl	0x005f0072
      68:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
      SystemCoreClock = pllvco/pllp;
      6c:	00745f38 	rsbseq	r5, r4, r8, lsr pc
      70:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
      break;
      74:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	695f706d 	ldmdbvs	pc, {r0, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
      7c:	0074696e 	rsbseq	r6, r4, lr, ror #18
      80:	534c4c50 	movtpl	r4, #52304	; 0xcc50
      84:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
      88:	4c4c5000 	marmi	acc0, r5, ip
      8c:	4c50004d 	mrrcmi	0, 4, r0, r0, cr13	; <UNPREDICTABLE>
      90:	50004e4c 	andpl	r4, r0, ip, asr #28
      94:	00504c4c 	subseq	r4, r0, ip, asr #24
      98:	514c4c50 	cmppl	ip, r0, asr ip
      9c:	625f5f00 	subsvs	r5, pc, #0, 30
      a0:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
      a4:	6d5f6e69 	ldclvs	14, cr6, [pc, #-420]	; ffffff08 <_estack+0xdfffecd0>
      a8:	65736d65 	ldrbvs	r6, [r3, #-3429]!	; 0xfffff29b
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	6f6c0074 	svcvs	0x006c0074
      b0:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
      bc:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
      c4:	64646100 	strbtvs	r6, [r4], #-256	; 0xffffff00
      c8:	41480072 	hvcmi	32770	; 0x8002
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	41555f4c 	cmpmi	r5, ip, asr #30
      d0:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	65764578 	ldrbvs	r4, [r6, #-1400]!	; 0xfffffa88
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	7954746e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
      dc:	79546570 	ldmdbvc	r4, {r4, r5, r6, r8, sl, sp, lr}^
      e0:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    if (huart->hdmarx != NULL)
      e4:	534c0066 	movtpl	r0, #49254	; 0xc066
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	61745345 	cmnvs	r4, r5, asr #6
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	52006574 	andpl	r6, r0, #116, 10	; 0x1d000000
      f0:	4f5f4343 	svcmi	0x005f4343
    huart->TxXferCount = 0x00U;
      f4:	6e496373 	mcrvs	3, 2, r6, cr9, cr3, {3}
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	74537469 	ldrbvc	r7, [r3], #-1129	; 0xfffffb97
    huart->gState  = HAL_UART_STATE_READY;
      fc:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
    huart->RxState = HAL_UART_STATE_READY;
     100:	55504300 	ldrbpl	r4, [r0, #-768]	; 0xfffffd00
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	74004449 	strvc	r4, [r0], #-1097	; 0xfffffbb7
    HAL_UART_AbortCpltCallback(huart);
     108:	33747365 	cmncc	r4, #-1811939327	; 0x94000001
     10c:	73657400 	cmnvc	r5, #0, 8
  uint32_t AbortCplt = 0x01U;
     110:	74003474 	strvc	r3, [r0], #-1140	; 0xfffffb8c
  if (AbortCplt == 0x01U)
     114:	35747365 	ldrbcc	r7, [r4, #-869]!	; 0xfffffc9b
}
     118:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     11c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     120:	72545f54 	subsvc	r5, r4, #84, 30	; 0x150
     124:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	41007469 	tstmi	r0, r9, ror #8
     12c:	4c314248 	lfmmi	f4, 4, [r1], #-288	; 0xfffffee0
     130:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     134:	65764f00 	ldrbvs	r4, [r6, #-3840]!	; 0xfffff100
     138:	6d615372 	stclvs	3, cr5, [r1, #-456]!	; 0xfffffe38
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	6e696c70 	mcrvs	12, 3, r6, cr9, cr0, {3}
     140:	78540067 	ldmdavc	r4, {r0, r1, r2, r5, r6}^
     144:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     14c:	53490074 	movtpl	r0, #36980	; 0x9074
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	52005241 	andpl	r5, r0, #268435460	; 0x10000004
     154:	4f5f4343 	svcmi	0x005f4343
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	6e496373 	mcrvs	3, 2, r6, cr9, cr3, {3}
     15c:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     164:	48410066 	stmdami	r1, {r1, r2, r5, r6}^
     168:	53523142 	cmppl	r2, #-2147483632	; 0x80000010
     16c:	48005254 	stmdami	r0, {r2, r4, r6, r9, ip, lr}
     170:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffff537 <_estack+0xdfffe2ff>
}
     174:	5f545241 	svcpl	0x00545241
     178:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     17c:	55425f45 	strbpl	r5, [r2, #-3909]	; 0xfffff0bb
     180:	545f5953 	ldrbpl	r5, [pc], #-2387	; 188 <_Min_Heap_Size-0x678>
}
     184:	58525f58 	ldmdapl	r2, {r3, r4, r6, r8, r9, sl, fp, ip, lr}^
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	50544700 	subspl	r4, r4, r0, lsl #14
     18c:	61420052 	qdaddvs	r0, r2, r2
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	61526475 	cmpvs	r2, r5, ror r4
     194:	58006574 	stmdapl	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
     198:	4d726566 	cfldr64mi	mvdx6, [r2, #-408]!	; 0xfffffe68
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	6c704331 	ldclvs	3, cr4, [r0], #-196	; 0xffffff3c
     1a0:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
     1a8:	5750006b 	ldrbpl	r0, [r0, -fp, rrx]
     1ac:	79545f52 	ldmdbvc	r4, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     1b4:	6d740066 	ldclvs	0, cr0, [r4, #-408]!	; 0xfffffe68
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	67657270 			; <UNDEFINED> instruction: 0x67657270
     1bc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     1c0:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	7079546b 	rsbsvc	r5, r9, fp, ror #8
     1c8:	66654465 	strbtvs	r4, [r5], -r5, ror #8
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	43435200 	movtmi	r5, #12800	; 0x3200
     1d0:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     1d4:	66654465 	strbtvs	r4, [r5], -r5, ror #8
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
     1dc:	6c614872 	stclvs	8, cr4, [r1], #-456	; 0xfffffe38
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
     1e4:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
     1e8:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	5470006b 	ldrbtpl	r0, [r0], #-107	; 0xffffff95
     1f0:	66754278 			; <UNDEFINED> instruction: 0x66754278
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	72745066 	rsbsvc	r5, r4, #102	; 0x66
     1f8:	42504100 	subsmi	r4, r0, #0, 2
     1fc:	54535232 	ldrbpl	r5, [r3], #-562	; 0xfffffdce
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	65500052 	ldrbvs	r0, [r0, #-82]	; 0xffffffae
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     208:	00636e49 	rsbeq	r6, r3, r9, asr #28
     20c:	5349534c 	movtpl	r5, #37708	; 0x934c
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     214:	6d654d00 	stclvs	13, cr4, [r5, #-0]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	73727542 	cmnvc	r2, #276824064	; 0x10800000
     21c:	5f5f0074 	svcpl	0x005f0074
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	5f6e6974 	svcpl	0x006e6974
     228:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
  tmp = hdma->Instance->FCR;
     22c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	414d445f 	cmpmi	sp, pc, asr r4
  tmp |= hdma->Init.FIFOMode;
     234:	4154535f 	cmpmi	r4, pc, asr r3
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	455f4554 	ldrbmi	r4, [pc, #-1364]	; fffffcec <_estack+0xdfffeab4>
    tmp |= hdma->Init.FIFOThreshold;
     23c:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	49534800 	ldmdbmi	r3, {fp, lr}^
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
     248:	61660065 	cmnvs	r6, r5, rrx
  hdma->Instance->FCR = tmp;
     24c:	5f746c75 	svcpl	0x00746c75
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	6c616e75 	stclvs	14, cr6, [r1], #-468	; 0xfffffe2c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	5f6e6769 	svcpl	0x006e6769
     258:	67697274 			; <UNDEFINED> instruction: 0x67697274
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00726567 	rsbseq	r6, r2, r7, ror #10
  hdma->State = HAL_DMA_STATE_READY;
     260:	43495348 	movtmi	r5, #37704	; 0x9348
     264:	62696c61 	rsbvs	r6, r9, #24832	; 0x6100
  return HAL_OK;
     268:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
     26c:	61566e6f 	cmpvs	r6, pc, ror #28
     270:	0065756c 	rsbeq	r7, r5, ip, ror #10
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	6e69616d 	powvsez	f6, f1, #5.0
     278:	6f745300 	svcvs	0x00745300
     27c:	74694270 	strbtvc	r4, [r9], #-624	; 0xfffffd90
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	4c500073 	mrrcmi	0, 7, r0, r0, cr3	; <UNPREDICTABLE>
        hdma->State = HAL_DMA_STATE_READY;
     284:	4746434c 	strbmi	r4, [r6, -ip, asr #6]
        return HAL_ERROR; 
     288:	74530052 	ldrbvc	r0, [r3], #-82	; 0xffffffae
    return HAL_ERROR;
     28c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
     298:	00737365 	rsbseq	r7, r3, r5, ror #6
      tickstart = HAL_GetTick();
     29c:	52414642 	subpl	r4, r1, #69206016	; 0x4200000
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	72615000 	rsbvc	r5, r1, #0
     2a4:	00746e65 	rsbseq	r6, r4, r5, ror #28
     2a8:	6b636f4c 	blvs	18dbfe0 <_Min_Heap_Size+0x18db7e0>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     2b0:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     2b4:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
          return HAL_TIMEOUT;
     2b8:	5f455441 	svcpl	0x00455441
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	44414552 	strbmi	r4, [r1], #-1362	; 0xfffffaae
     2c0:	5f5f0059 	svcpl	0x005f0059
     2c4:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
    FlagStatus       pwrclkchanged = RESET;
     2c8:	745f3233 	ldrbvc	r3, [pc], #-563	; 2d0 <_Min_Heap_Size-0x530>
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	72694400 	rsbvc	r4, r9, #0, 8
     2d0:	69746365 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sp, lr}^
     2d4:	53006e6f 	movwpl	r6, #3695	; 0xe6f
      tickstart = HAL_GetTick();
     2d8:	545f4243 	ldrbpl	r4, [pc], #-579	; 2e0 <_Min_Heap_Size-0x520>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	00657079 	rsbeq	r7, r5, r9, ror r0
     2e0:	616d6468 	cmnvs	sp, r8, ror #8
     2e4:	6c007872 	stcvs	8, cr7, [r0], {114}	; 0x72
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     2ec:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
          return HAL_TIMEOUT;
     2f0:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	43435200 	movtmi	r5, #12800	; 0x3200
     2f8:	6b6c435f 	blvs	1b1107c <_Min_Heap_Size+0x1b1087c>
     2fc:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     300:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
     304:	48007463 	stmdami	r0, {r0, r1, r5, r6, sl, ip, sp, lr}
     308:	74534553 	ldrbvc	r4, [r3], #-1363	; 0xfffffaad
     30c:	00657461 	rsbeq	r7, r5, r1, ror #8
     310:	5f4c4148 	svcpl	0x004c4148
      tickstart = HAL_GetTick();
     314:	5f414d44 	svcpl	0x00414d44
     318:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	45525f45 	ldrbmi	r5, [r2, #-3909]	; 0xfffff0bb
     320:	00544553 	subseq	r4, r4, r3, asr r5
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	69726150 	ldmdbvs	r2!, {r4, r6, r8, sp, lr}^
     328:	48007974 	stmdami	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
     32c:	545f4c41 	ldrbpl	r4, [pc], #-3137	; 334 <_Min_Heap_Size-0x4cc>
     330:	4f454d49 	svcmi	0x00454d49
          return HAL_TIMEOUT;
     334:	68005455 	stmdavs	r0, {r0, r2, r4, r6, sl, ip, lr}
    if(pwrclkchanged == SET)
     338:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	74530031 	ldrbvc	r0, [r3], #-49	; 0xffffffcf
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     344:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	41480078 	hvcmi	32776	; 0x8008
     34c:	4b4f5f4c 	blmi	13d8084 <_Min_Heap_Size+0x13d7884>
     350:	4f545600 	svcmi	0x00545600
     354:	2f2e0052 	svccs	0x002e0052
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
     360:	2f6e6f69 	svccs	0x006e6f69
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	6e69616d 	powvsez	f6, f1, #5.0
     368:	5200632e 	andpl	r6, r0, #-1207959552	; 0xb8000000
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	65665878 	strbvs	r5, [r6, #-2168]!	; 0xfffff788
     370:	7a695372 	bvc	1a55140 <_Min_Heap_Size+0x1a54940>
     374:	78540065 	ldmdavc	r4, {r0, r2, r5, r6}^
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     37c:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
     380:	4c4c5000 	marmi	acc0, r5, ip
     384:	43533249 	cmpmi	r3, #-1879048188	; 0x90000004
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	00524746 	subseq	r4, r2, r6, asr #14
     38c:	52534349 	subspl	r4, r3, #603979777	; 0x24000001
        __HAL_RCC_PLL_DISABLE();
     390:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     394:	414d445f 	cmpmi	sp, pc, asr r4
        tickstart = HAL_GetTick();
     398:	4154535f 	cmpmi	r4, pc, asr r3
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	415f4554 	cmpmi	pc, r4, asr r5	; <UNPREDICTABLE>
     3a0:	54524f42 	ldrbpl	r4, [r2], #-3906	; 0xfffff0be
     3a4:	52494100 	subpl	r4, r9, #0, 2
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	44005243 	strmi	r5, [r0], #-579	; 0xfffffdbd
     3ac:	00525346 	subseq	r5, r2, r6, asr #6
            return HAL_TIMEOUT;
     3b0:	6f727245 	svcvs	0x00727245
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	646f4372 	strbtvs	r4, [pc], #-882	; 3bc <_Min_Heap_Size-0x444>
     3b8:	734f0065 	movtvc	r0, #61541	; 0xf065
     3bc:	6c6c6963 			; <UNDEFINED> instruction: 0x6c6c6963
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	726f7461 	rsbvc	r7, pc, #1627389952	; 0x61000000
     3c4:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     3c8:	464d4d00 	strbmi	r4, [sp], -r0, lsl #26
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	4d005241 	sfmmi	f5, 4, [r0, #-260]	; 0xfffffefc
     3d0:	61446d65 	cmpvs	r4, r5, ror #26
     3d4:	6c416174 	stfvse	f6, [r1], {116}	; 0x74
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	6d6e6769 	stclvs	7, cr6, [lr, #-420]!	; 0xfffffe5c
     3dc:	00746e65 	rsbseq	r6, r4, r5, ror #28
     3e0:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	79545f54 	ldmdbvc	r4, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
     3e8:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     3ec:	50410066 	subpl	r0, r1, r6, rrx
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	504c3242 	subpl	r3, ip, r2, asr #4
     3f4:	00524e45 	subseq	r4, r2, r5, asr #28
     3f8:	52464d4d 	subpl	r4, r6, #4928	; 0x1340
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	6f687300 	svcvs	0x00687300
     400:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
     404:	4100746e 	tstmi	r0, lr, ror #8
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	4c434248 	sfmmi	f4, 2, [r3], {72}	; 0x48
     40c:	7669444b 	strbtvc	r4, [r9], -fp, asr #8
     410:	72656469 	rsbvc	r6, r5, #1761607680	; 0x69000000
     414:	72724500 	rsbsvc	r4, r2, #0, 10
     418:	485f726f 	ldmdami	pc, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     41c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     420:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     424:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 42c <_Min_Heap_Size-0x3d4>
        __HAL_RCC_PLL_ENABLE();
     428:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
     42c:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
        tickstart = HAL_GetTick();
     430:	4145525f 	cmpmi	r5, pc, asr r2
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	48005944 	stmdami	r0, {r2, r6, r8, fp, ip, lr}
     438:	495f4c41 	ldmdbmi	pc, {r0, r6, sl, fp, lr}^	; <UNPREDICTABLE>
     43c:	0074696e 	rsbseq	r6, r4, lr, ror #18
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	5f4c4148 	svcpl	0x004c4148
     444:	5f414d44 	svcpl	0x00414d44
            return HAL_TIMEOUT;
     448:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
  return HAL_OK;
     44c:	55425f45 	strbpl	r5, [r2, #-3909]	; 0xfffff0bb
        __HAL_RCC_PLL_DISABLE();
     450:	5f005953 	svcpl	0x00005953
     454:	5f6f695f 	svcpl	0x006f695f
        tickstart = HAL_GetTick();
     458:	63747570 	cmnvs	r4, #112, 10	; 0x1c000000
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	00726168 	rsbseq	r6, r2, r8, ror #2
     460:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     464:	69645f74 	stmdbvs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	657a5f76 	ldrbvs	r5, [sl, #-3958]!	; 0xfffff08a
     46c:	745f6f72 	ldrbvc	r6, [pc], #-3954	; 474 <_Min_Heap_Size-0x38c>
            return HAL_TIMEOUT;
     470:	67676972 			; <UNDEFINED> instruction: 0x67676972
  return HAL_OK;
     474:	5f007265 	svcpl	0x00007265
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
        pll_config = RCC->PLLCFGR;
     47c:	61485f54 	cmpvs	r8, r4, asr pc
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     484:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	00666544 	rsbeq	r6, r6, r4, asr #10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	434f4c5f 	movtmi	r4, #64607	; 0xfc5f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	0044454b 	subeq	r4, r4, fp, asr #10
     49c:	33424841 	movtcc	r4, #10305	; 0x2841
     4a0:	00524e45 	subseq	r4, r2, r5, asr #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	74736e49 	ldrbtvc	r6, [r3], #-3657	; 0xfffff1b7
     4a8:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
     4b0:	72724572 	rsbsvc	r4, r2, #478150656	; 0x1c800000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	6143726f 	cmpvs	r3, pc, ror #4
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	61626c6c 	cmnvs	r2, ip, ror #24
     4bc:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
  return HAL_OK;
     4c0:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffff887 <_estack+0xdfffe64f>
}
     4c4:	5f545241 	svcpl	0x00545241
        return HAL_ERROR;
     4c8:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
        return HAL_ERROR;
     4cc:	55425f45 	strbpl	r5, [r2, #-3909]	; 0xfffff0bb
}
     4d0:	545f5953 	ldrbpl	r5, [pc], #-2387	; 4d8 <_Min_Heap_Size-0x328>
        return HAL_ERROR;
     4d4:	48410058 	stmdami	r1, {r3, r4, r6}^
          return HAL_ERROR;
     4d8:	504c3242 	subpl	r3, ip, r2, asr #4
     4dc:	00524e45 	subseq	r4, r2, r5, asr #28
     4e0:	616d6468 	cmnvs	sp, r8, ror #8
     4e4:	52007874 	andpl	r7, r0, #116, 16	; 0x740000
     4e8:	435f4343 	cmpmi	pc, #201326593	; 0xc000001
     4ec:	6e496b6c 	vmlsvs.f64	d22, d9, d28
     4f0:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
     4f4:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     4f8:	50410066 	subpl	r0, r1, r6, rrx
     4fc:	53523142 	cmppl	r2, #-2147483632	; 0x80000010
     500:	74005254 	strvc	r5, [r0], #-596	; 0xfffffdac
     504:	32747365 	rsbscc	r7, r4, #-1811939327	; 0x94000001
     508:	41504300 	cmpmi	r0, r0, lsl #6
     50c:	52005243 	andpl	r5, r0, #805306372	; 0x30000004
     510:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     514:	30444556 	subcc	r4, r4, r6, asr r5
     518:	53455200 	movtpl	r5, #20992	; 0x5200
     51c:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     520:	52003144 	andpl	r3, r0, #68, 2
     524:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     528:	32444556 	subcc	r4, r4, #360710144	; 0x15800000
     52c:	53455200 	movtpl	r5, #20992	; 0x5200
     530:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     534:	52003344 	andpl	r3, r0, #68, 6	; 0x10000001
     538:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     53c:	34444556 	strbcc	r4, [r4], #-1366	; 0xfffffaaa
     540:	53455200 	movtpl	r5, #20992	; 0x5200
     544:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     548:	52003544 	andpl	r3, r0, #68, 10	; 0x11000000
     54c:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     550:	36444556 			; <UNDEFINED> instruction: 0x36444556
     554:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
     558:	48314d72 	ldmdami	r1!, {r1, r4, r5, r6, r8, sl, fp, lr}
     55c:	43666c61 	cmnmi	r6, #24832	; 0x6100
     560:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
     564:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
     568:	006b6361 	rsbeq	r6, fp, r1, ror #6
     56c:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     570:	006c656e 	rsbeq	r6, ip, lr, ror #10
     574:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
     578:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
     57c:	61686320 	cmnvs	r8, r0, lsr #6
     580:	48530072 	ldmdami	r3, {r1, r4, r5, r6}^
     584:	00525343 	subseq	r5, r2, r3, asr #6
     588:	20554e47 	subscs	r4, r5, r7, asr #28
     58c:	20373143 	eorscs	r3, r7, r3, asr #2
     590:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     594:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
     598:	30313230 	eorscc	r3, r1, r0, lsr r2
     59c:	20343238 	eorscs	r3, r4, r8, lsr r2
     5a0:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
     5a4:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
     5a8:	6d2d2029 	stcvs	0, cr2, [sp, #-164]!	; 0xffffff5c
     5ac:	3d757063 	ldclcc	0, cr7, [r5, #-396]!	; 0xfffffe74
     5b0:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
     5b4:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
     5b8:	6d2d2034 	stcvs	0, cr2, [sp, #-208]!	; 0xffffff30
     5bc:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
     5c0:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
     5c4:	3d757066 	ldclcc	0, cr7, [r5, #-408]!	; 0xfffffe68
     5c8:	34767066 	ldrbtcc	r7, [r6], #-102	; 0xffffff9a
     5cc:	2d70732d 	ldclcs	3, cr7, [r0, #-180]!	; 0xffffff4c
     5d0:	20363164 	eorscs	r3, r6, r4, ror #2
     5d4:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
     5d8:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
     5dc:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
     5e0:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
     5e4:	616d2d20 	cmnvs	sp, r0, lsr #26
     5e8:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
     5ec:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
     5f0:	6d2d6537 	cfstr32vs	mvfx6, [sp, #-220]!	; 0xffffff24
     5f4:	2070662b 	rsbscs	r6, r0, fp, lsr #12
     5f8:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
     5fc:	61776467 	cmnvs	r7, r7, ror #8
     600:	322d6672 	eorcc	r6, sp, #119537664	; 0x7200000
     604:	674f2d20 	strbvs	r2, [pc, -r0, lsr #26]
     608:	64662d20 	strbtvs	r2, [r6], #-3360	; 0xfffff2e0
     60c:	2d617461 	cfstrdcs	mvd7, [r1, #-388]!	; 0xfffffe7c
     610:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
     614:	736e6f69 	cmnvc	lr, #420	; 0x1a4
     618:	66662d20 	strbtvs	r2, [r6], -r0, lsr #26
     61c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
     620:	2d6e6f69 	stclcs	15, cr6, [lr, #-420]!	; 0xfffffe5c
     624:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
     628:	736e6f69 	cmnvc	lr, #420	; 0x1a4
     62c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     630:	414d445f 	cmpmi	sp, pc, asr r4
     634:	6174535f 	cmnvs	r4, pc, asr r3
     638:	79546574 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
     63c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     640:	48410066 	stmdami	r1, {r1, r2, r5, r6}^
     644:	504c3342 	subpl	r3, ip, r2, asr #6
     648:	00524e45 	subseq	r4, r2, r5, asr #28
     64c:	534c4c50 	movtpl	r4, #52304	; 0xcc50
     650:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
     654:	5f5f0065 	svcpl	0x005f0065
     658:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     65c:	48005f5f 	stmdami	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}
     660:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffffa27 <_estack+0xdfffe7ef>
     664:	5f545241 	svcpl	0x00545241
     668:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     66c:	52455f45 	subpl	r5, r5, #276	; 0x114
     670:	00524f52 	subseq	r4, r2, r2, asr pc
     674:	32425041 	subcc	r5, r2, #65	; 0x41
     678:	00524e45 	subseq	r4, r2, r5, asr #28
     67c:	33424841 	movtcc	r4, #10305	; 0x2841
     680:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     684:	445f5f00 	ldrbmi	r5, [pc], #-3840	; 68c <_Min_Heap_Size-0x174>
     688:	485f414d 	ldmdami	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
     68c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     690:	70795465 	rsbsvc	r5, r9, r5, ror #8
     694:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     698:	46494600 	strbmi	r4, [r9], -r0, lsl #12
     69c:	646f4d4f 	strbtvs	r4, [pc], #-3407	; 6a4 <_Min_Heap_Size-0x15c>
     6a0:	6f570065 	svcvs	0x00570065
     6a4:	654c6472 	strbvs	r6, [ip, #-1138]	; 0xfffffb8e
     6a8:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
     6ac:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     6b0:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
     6b4:	4100524f 	tstmi	r0, pc, asr #4
     6b8:	45314250 	ldrmi	r4, [r1, #-592]!	; 0xfffffdb0
     6bc:	6c00524e 	sfmvs	f5, 4, [r0], {78}	; 0x4e
     6c0:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     6c4:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
     6c8:	4600656c 	strmi	r6, [r0], -ip, ror #10
     6cc:	544f4649 	strbpl	r4, [pc], #-1609	; 6d4 <_Min_Heap_Size-0x12c>
     6d0:	73657268 	cmnvc	r5, #104, 4	; 0x80000006
     6d4:	646c6f68 	strbtvs	r6, [ip], #-3944	; 0xfffff098
     6d8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     6dc:	4343525f 	movtmi	r5, #12895	; 0x325f
     6e0:	63734f5f 	cmnvs	r3, #380	; 0x17c
     6e4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
     6e8:	48006769 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, sp, lr}
     6ec:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 6f4 <_Min_Heap_Size-0x10c>
     6f0:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
     6f4:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff7fc <_estack+0xdfffe5c4>
     6f8:	31746e69 	cmncc	r4, r9, ror #28
     6fc:	00745f36 	rsbseq	r5, r4, r6, lsr pc
     700:	5f4c4148 	svcpl	0x004c4148
     704:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     708:	4154535f 	cmpmi	r4, pc, asr r3
     70c:	425f4554 	subsmi	r4, pc, #84, 10	; 0x15000000
     710:	5f595355 	svcpl	0x00595355
     714:	41005852 	tstmi	r0, r2, asr r8
     718:	52324248 	eorspl	r4, r2, #72, 4	; 0x80000004
     71c:	00525453 	subseq	r5, r2, r3, asr r4
     720:	496d654d 	stmdbmi	sp!, {r0, r2, r3, r6, r8, sl, sp, lr}^
     724:	5000636e 	andpl	r6, r0, lr, ror #6
     728:	70697265 	rsbvc	r7, r9, r5, ror #4
     72c:	72754268 	rsbsvc	r4, r5, #104, 4	; 0x80000006
     730:	41007473 	tstmi	r0, r3, ror r4
     734:	43324250 	teqmi	r2, #80, 4
     738:	69444b4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, fp, lr}^
     73c:	65646976 	strbvs	r6, [r4, #-2422]!	; 0xfffff68a
     740:	79530072 	ldmdbvc	r3, {r1, r4, r5, r6}^
     744:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     748:	636f6c43 	cmnvs	pc, #17152	; 0x4300
     74c:	6f435f6b 	svcvs	0x00435f6b
     750:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     754:	54444e00 	strbpl	r4, [r4], #-3584	; 0xfffff200
     758:	41480052 	qdaddmi	r0, r2, r8
     75c:	41555f4c 	cmpmi	r5, ip, asr #30
     760:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     764:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     768:	5345525f 	movtpl	r5, #21087	; 0x525f
     76c:	41005445 	tstmi	r0, r5, asr #8
     770:	00525346 	subseq	r5, r2, r6, asr #6
     774:	5f414d44 	svcpl	0x00414d44
     778:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     77c:	545f6d61 	ldrbpl	r6, [pc], #-3425	; 784 <_Min_Heap_Size-0x7c>
     780:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     784:	41006665 	tstmi	r0, r5, ror #12
     788:	45324248 	ldrmi	r4, [r2, #-584]!	; 0xfffffdb8
     78c:	7300524e 	movwvc	r5, #590	; 0x24e
     790:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
     794:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
     798:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     79c:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
     7a0:	65740074 	ldrbvs	r0, [r4, #-116]!	; 0xffffff8c
     7a4:	00307473 	eorseq	r7, r0, r3, ror r4
     7a8:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     7ac:	314d0031 	cmpcc	sp, r1, lsr r0
     7b0:	50005241 	andpl	r5, r0, r1, asr #4
     7b4:	70697265 	rsbvc	r7, r9, r5, ror #4
     7b8:	74614468 	strbtvc	r4, [r1], #-1128	; 0xfffffb98
     7bc:	696c4161 	stmdbvs	ip!, {r0, r5, r6, r8, lr}^
     7c0:	656d6e67 	strbvs	r6, [sp, #-3687]!	; 0xfffff199
     7c4:	5500746e 	strpl	r7, [r0, #-1134]	; 0xfffffb92
     7c8:	5f545241 	svcpl	0x00545241
     7cc:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     7d0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     7d4:	00666544 	rsbeq	r6, r6, r4, asr #10
     7d8:	47435353 	smlsldmi	r5, r3, r3, r3
     7dc:	41480052 	qdaddmi	r0, r2, r8
     7e0:	41555f4c 	cmpmi	r5, ip, asr #30
     7e4:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
     7e8:	70795478 	rsbsvc	r5, r9, r8, ror r4
     7ec:	70795465 	rsbsvc	r5, r9, r5, ror #8
     7f0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     7f4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     7f8:	4343525f 	movtmi	r5, #12895	; 0x325f
     7fc:	6f6c435f 	svcvs	0x006c435f
     800:	6f436b63 	svcvs	0x00436b63
     804:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     808:	43444200 	movtmi	r4, #16896	; 0x4200
     80c:	41480052 	qdaddmi	r0, r2, r8
     810:	41555f4c 	cmpmi	r5, ip, asr #30
     814:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     818:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     81c:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     820:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
     824:	46774800 	ldrbtmi	r4, [r7], -r0, lsl #16
     828:	43776f6c 	cmnmi	r7, #108, 30	; 0x1b0
     82c:	48006c74 	stmdami	r0, {r2, r4, r5, r6, sl, fp, sp, lr}
     830:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 838 <_Min_Heap_Size+0x38>
     834:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
     838:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     83c:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     840:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
     844:	78527000 	ldmdavc	r2, {ip, sp, lr}^
     848:	66667542 	strbtvs	r7, [r6], -r2, asr #10
     84c:	00727450 	rsbseq	r7, r2, r0, asr r4
     850:	5f434352 	svcpl	0x00434352
     854:	494c4c50 	stmdbmi	ip, {r4, r6, sl, fp, lr}^
     858:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     85c:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     860:	43006665 	movwmi	r6, #1637	; 0x665
     864:	6b636f6c 	blvs	18dc61c <_Min_Heap_Size+0x18dbe1c>
     868:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     86c:	5c3a4300 	ldcpl	3, cr4, [sl], #-0
     870:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
     874:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     878:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     87c:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
     880:	7469675c 	strbtvc	r6, [r9], #-1884	; 0xfffff8a4
     884:	5c627568 	cfstr64pl	mvdx7, [r2], #-416	; 0xfffffe60
     888:	756d6571 	strbvc	r6, [sp, #-1393]!	; 0xfffffa8f
     88c:	6d69732d 	stclvs	3, cr7, [r9, #-180]!	; 0xffffff4c
     890:	74616c75 	strbtvc	r6, [r1], #-3189	; 0xfffff38b
     894:	625c726f 	subsvs	r7, ip, #-268435450	; 0xf0000006
     898:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
     89c:	74735c73 	ldrbtvc	r5, [r3], #-3187	; 0xfffff38d
     8a0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     8a4:	72353034 	eorsvc	r3, r5, #52	; 0x34
     8a8:	43475c67 	movtmi	r5, #31847	; 0x7c67
     8ac:	48410043 	stmdami	r1, {r0, r1, r6}^
     8b0:	4e453142 	dvfmism	f3, f5, f2
     8b4:	78520052 	ldmdavc	r2, {r1, r4, r6}^
     8b8:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     8bc:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
     8c0:	41480074 	hvcmi	32772	; 0x8004
     8c4:	41555f4c 	cmpmi	r5, ip, asr #30
     8c8:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     8cc:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     8d0:	5355425f 	cmppl	r5, #-268435451	; 0xf0000005
     8d4:	41480059 	qdaddmi	r0, r9, r8
     8d8:	4e555f4c 	cdpmi	15, 5, cr5, cr5, cr12, {2}
     8dc:	4b434f4c 	blmi	10d4614 <_Min_Heap_Size+0x10d3e14>
     8e0:	48004445 	stmdami	r0, {r0, r2, r6, sl, lr}
     8e4:	425f4c41 	subsmi	r4, pc, #16640	; 0x4100
     8e8:	00595355 	subseq	r5, r9, r5, asr r3
     8ec:	74537852 	ldrbvc	r7, [r3], #-2130	; 0xfffff7ae
     8f0:	00657461 	rsbeq	r7, r5, r1, ror #8
     8f4:	52534648 	subspl	r4, r3, #72, 12	; 0x4800000
     8f8:	63655200 	cmnvs	r5, #0, 4
     8fc:	69747065 	ldmdbvs	r4!, {r0, r2, r5, r6, ip, sp, lr}^
     900:	79546e6f 	ldmdbvc	r4, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     904:	58006570 	stmdapl	r0, {r4, r5, r6, r8, sl, sp, lr}
     908:	41726566 	cmnmi	r2, r6, ror #10
     90c:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
     910:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     914:	6b636162 	blvs	18d8ea4 <_Min_Heap_Size+0x18d86a4>
     918:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
     91c:	6c704372 	ldclvs	3, cr4, [r0], #-456	; 0xfffffe38
     920:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
     924:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
     928:	584d006b 	stmdapl	sp, {r0, r1, r3, r5, r6}^
     92c:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
     930:	6e495f4f 	cdpvs	15, 4, cr5, cr9, cr15, {2}
     934:	53007469 	movwpl	r7, #1129	; 0x469
     938:	4c435359 	mcrrmi	3, 5, r5, r3, cr9
     93c:	756f534b 	strbvc	r5, [pc, #-843]!	; 5f9 <_Min_Heap_Size-0x207>
     940:	00656372 	rsbeq	r6, r5, r2, ror r3
     944:	7473655f 	ldrbtvc	r6, [r3], #-1375	; 0xfffffaa1
     948:	006b6361 	rsbeq	r6, fp, r1, ror #6
     94c:	76657270 			; <UNDEFINED> instruction: 0x76657270
     950:	6165685f 	cmnvs	r5, pc, asr r8
     954:	6e655f70 	mcrvs	15, 3, r5, cr5, cr0, {3}
     958:	616d0064 	cmnvs	sp, r4, rrx
     95c:	65685f78 	strbvs	r5, [r8, #-3960]!	; 0xfffff088
     960:	70007061 	andvc	r7, r0, r1, rrx
     964:	69647274 	stmdbvs	r4!, {r2, r4, r5, r6, r9, ip, sp, lr}^
     968:	745f6666 	ldrbvc	r6, [pc], #-1638	; 970 <_Min_Heap_Size+0x170>
     96c:	612f2e00 			; <UNDEFINED> instruction: 0x612f2e00
     970:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     974:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     978:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
     97c:	656d7379 	strbvs	r7, [sp, #-889]!	; 0xfffffc87
     980:	00632e6d 	rsbeq	r2, r3, sp, ror #28
     984:	6e694d5f 	mcrvs	13, 3, r4, cr9, cr15, {2}
     988:	6174535f 	cmnvs	r4, pc, asr r3
     98c:	535f6b63 	cmppl	pc, #101376	; 0x18c00
     990:	00657a69 	rsbeq	r7, r5, r9, ror #20
     994:	72636e69 	rsbvc	r6, r3, #1680	; 0x690
     998:	735f5f00 	cmpvc	pc, #0, 30
     99c:	5f6b7262 	svcpl	0x006b7262
     9a0:	70616568 	rsbvc	r6, r1, r8, ror #10
     9a4:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
     9a8:	655f5f00 	ldrbvs	r5, [pc, #-3840]	; fffffab0 <_estack+0xdfffe878>
     9ac:	6f6e7272 	svcvs	0x006e7272
     9b0:	62735f00 	rsbsvs	r5, r3, #0, 30
     9b4:	73006b72 	movwvc	r6, #2930	; 0xb72
     9b8:	6b636174 	blvs	18d8f90 <_Min_Heap_Size+0x18d8790>
     9bc:	6d696c5f 	stclvs	12, cr6, [r9, #-380]!	; 0xfffffe84
     9c0:	73007469 	movwvc	r7, #1129	; 0x469
     9c4:	64725f74 	ldrbtvs	r5, [r2], #-3956	; 0xfffff08c
     9c8:	63007665 	movwvs	r7, #1637	; 0x665
     9cc:	6b636f6c 	blvs	18dc784 <_Min_Heap_Size+0x18dbf84>
     9d0:	6500745f 	strvs	r7, [r0, #-1119]	; 0xfffffba1
     9d4:	7269766e 	rsbvc	r7, r9, #115343360	; 0x6e00000
     9d8:	5f006e6f 	svcpl	0x00006e6f
     9dc:	6565736c 	strbvs	r7, [r5, #-876]!	; 0xfffffc94
     9e0:	6d74006b 	ldclvs	0, cr0, [r4, #-428]!	; 0xfffffe54
     9e4:	75635f73 	strbvc	r5, [r3, #-3955]!	; 0xfffff08d
     9e8:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     9ec:	78655f00 	stmdavc	r5!, {r8, r9, sl, fp, ip, lr}^
     9f0:	65766365 	ldrbvs	r6, [r6, #-869]!	; 0xfffffc9b
     9f4:	5f767400 	svcpl	0x00767400
     9f8:	00636573 	rsbeq	r6, r3, r3, ror r5
     9fc:	6174735f 	cmnvs	r4, pc, asr r3
     a00:	74730074 	ldrbtvc	r0, [r3], #-116	; 0xffffff8c
     a04:	6974635f 	ldmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, sp, lr}^
     a08:	5f5f006d 	svcpl	0x005f006d
     a0c:	00766e65 	rsbseq	r6, r6, r5, ror #28
     a10:	6978655f 	ldmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, sl, sp, lr}^
     a14:	775f0074 			; <UNDEFINED> instruction: 0x775f0074
     a18:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
     a1c:	5f747300 	svcpl	0x00747300
     a20:	00766564 	rsbseq	r6, r6, r4, ror #10
     a24:	7473665f 	ldrbtvc	r6, [r3], #-1631	; 0xfffff9a1
     a28:	66007461 	strvs	r7, [r0], -r1, ror #8
     a2c:	00656c69 	rsbeq	r6, r5, r9, ror #24
     a30:	6c696b5f 			; <UNDEFINED> instruction: 0x6c696b5f
     a34:	6974006c 	ldmdbvs	r4!, {r2, r3, r5, r6}^
     a38:	745f656d 	ldrbvc	r6, [pc], #-1389	; a40 <_Min_Heap_Size+0x240>
     a3c:	695f5f00 	ldmdbvs	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
     a40:	6c5f746e 	cfldrdvs	mvd7, [pc], {110}	; 0x6e
     a44:	74736165 	ldrbtvc	r6, [r3], #-357	; 0xfffffe9b
     a48:	745f3436 	ldrbvc	r3, [pc], #-1078	; a50 <_Min_Heap_Size+0x250>
     a4c:	5f747300 	svcpl	0x00747300
     a50:	736b6c62 	cmnvc	fp, #25088	; 0x6200
     a54:	00657a69 	rsbeq	r7, r5, r9, ror #20
     a58:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
     a5c:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
     a60:	6d5f6573 	cfldr64vs	mvdx6, [pc, #-460]	; 89c <_Min_Heap_Size+0x9c>
     a64:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
     a68:	685f726f 	ldmdavs	pc, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     a6c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     a70:	73007365 	movwvc	r7, #869	; 0x365
     a74:	69675f74 	stmdbvs	r7!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     a78:	5f5f0064 	svcpl	0x005f0064
     a7c:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
     a80:	2e00745f 	cfmvsrcs	mvf0, r7
     a84:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
     a88:	6163696c 	cmnvs	r3, ip, ror #18
     a8c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     a90:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
     a94:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
     a98:	00632e73 	rsbeq	r2, r3, r3, ror lr
     a9c:	5f736d74 	svcpl	0x00736d74
     aa0:	69747363 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, r9, ip, sp, lr}^
     aa4:	5f00656d 	svcpl	0x0000656d
     aa8:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     aac:	5f5f0073 	svcpl	0x005f0073
     ab0:	6e696c6e 	cdpvs	12, 6, cr6, cr9, cr14, {3}
     ab4:	00745f6b 	rsbseq	r5, r4, fp, ror #30
     ab8:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
     abc:	61775f00 	cmnvs	r7, r0, lsl #30
     ac0:	73007469 	movwvc	r7, #1129	; 0x469
     ac4:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
     ac8:	725f006f 	subsvc	r0, pc, #111	; 0x6f
     acc:	00646165 	rsbeq	r6, r4, r5, ror #2
     ad0:	6f695f5f 	svcvs	0x00695f5f
     ad4:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
     ad8:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     adc:	5f767400 	svcpl	0x00767400
     ae0:	6365736e 	cmnvs	r5, #-1207959551	; 0xb8000001
     ae4:	5f747300 	svcpl	0x00747300
     ae8:	6e696c6e 	cdpvs	12, 6, cr6, cr9, cr14, {3}
     aec:	6f5f006b 	svcvs	0x005f006b
     af0:	006e6570 	rsbeq	r6, lr, r0, ror r5
     af4:	76677261 	strbtvc	r7, [r7], -r1, ror #4
     af8:	625f5f00 	subsvs	r5, pc, #0, 30
     afc:	69736b6c 	ldmdbvs	r3!, {r2, r3, r5, r6, r8, r9, fp, sp, lr}^
     b00:	745f657a 	ldrbvc	r6, [pc], #-1402	; b08 <_Min_Heap_Size+0x308>
     b04:	5f747300 	svcpl	0x00747300
     b08:	6d697461 	cfstrdvs	mvd7, [r9, #-388]!	; 0xfffffe7c
     b0c:	696c5f00 	stmdbvs	ip!, {r8, r9, sl, fp, ip, lr}^
     b10:	5f006b6e 	svcpl	0x00006b6e
     b14:	736f6c63 	cmnvc	pc, #25344	; 0x6300
     b18:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
     b1c:	6f6c625f 	svcvs	0x006c625f
     b20:	00736b63 	rsbseq	r6, r3, r3, ror #22
     b24:	6173695f 	cmnvs	r3, pc, asr r9
     b28:	00797474 	rsbseq	r7, r9, r4, ror r4
     b2c:	6d5f7473 	cfldrdvs	mvd7, [pc, #-460]	; 968 <_Min_Heap_Size+0x168>
     b30:	006d6974 	rsbeq	r6, sp, r4, ror r9
     b34:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
     b38:	00745f6f 	rsbseq	r5, r4, pc, ror #30
     b3c:	5f736d74 	svcpl	0x00736d74
     b40:	6d697473 	cfstrdvs	mvd7, [r9, #-460]!	; 0xfffffe34
     b44:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
     b48:	6469755f 	strbtvs	r7, [r9], #-1375	; 0xfffffaa1
     b4c:	5f747300 	svcpl	0x00747300
     b50:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     b54:	5f747300 	svcpl	0x00747300
     b58:	72617073 	rsbvc	r7, r1, #115	; 0x73
     b5c:	44003465 	strmi	r3, [r0], #-1125	; 0xfffffb9b
     b60:	49617461 	stmdbmi	r1!, {r0, r5, r6, sl, ip, sp, lr}^
     b64:	5f007864 	svcpl	0x00007864
     b68:	6b726f66 	blvs	1c9c908 <_Min_Heap_Size+0x1c9c108>
     b6c:	65675f00 	strbvs	r5, [r7, #-3840]!	; 0xfffff100
     b70:	64697074 	strbtvs	r7, [r9], #-116	; 0xffffff8c
     b74:	645f5f00 	ldrbvs	r5, [pc], #-3840	; b7c <_Min_Heap_Size+0x37c>
     b78:	745f7665 	ldrbvc	r7, [pc], #-1637	; b80 <_Min_Heap_Size+0x380>
     b7c:	6f5f5f00 	svcvs	0x005f5f00
     b80:	745f6666 	ldrbvc	r6, [pc], #-1638	; b88 <_Min_Heap_Size+0x388>
     b84:	74617000 	strbtvc	r7, [r1], #-0
     b88:	69740068 	ldmdbvs	r4!, {r3, r5, r6}^
     b8c:	7073656d 	rsbsvc	r6, r3, sp, ror #10
     b90:	5f006365 	svcpl	0x00006365
     b94:	6469755f 	strbtvs	r7, [r9], #-1375	; 0xfffffaa1
     b98:	7300745f 	movwvc	r7, #1119	; 0x45f
     b9c:	6f6d5f74 	svcvs	0x006d5f74
     ba0:	74006564 	strvc	r6, [r0], #-1380	; 0xfffffa9c
     ba4:	755f736d 	ldrbvc	r7, [pc, #-877]	; 83f <_Min_Heap_Size+0x3f>
     ba8:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     bac:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
     bb0:	6b6e696c 	blvs	1b9b168 <_Min_Heap_Size+0x1b9a968>
     bb4:	625f5f00 	subsvs	r5, pc, #0, 30
     bb8:	6e636b6c 	vnmulvs.f64	d22, d3, d28
     bbc:	00745f74 	rsbseq	r5, r4, r4, ror pc
     bc0:	69675f5f 	stmdbvs	r7!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     bc4:	00745f64 	rsbseq	r5, r4, r4, ror #30
     bc8:	5f494d4e 	svcpl	0x00494d4e
     bcc:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     bd0:	0072656c 	rsbseq	r6, r2, ip, ror #10
     bd4:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
     bd8:	6e6f4d67 	cdpvs	13, 6, cr4, cr15, cr7, {3}
     bdc:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     be0:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     be4:	73754200 	cmnvc	r5, #0, 4
     be8:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     bec:	61485f74 	hvcvs	34292	; 0x85f4
     bf0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     bf4:	53550072 	cmppl	r5, #114	; 0x72
     bf8:	31545241 	cmpcc	r4, r1, asr #4
     bfc:	5152495f 	cmppl	r2, pc, asr r9
     c00:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     c04:	0072656c 	rsbseq	r6, r2, ip, ror #10
     c08:	67617355 			; <UNDEFINED> instruction: 0x67617355
     c0c:	75614665 	strbvc	r4, [r1, #-1637]!	; 0xfffff99b
     c10:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     c14:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     c18:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     c1c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; ffffffe3 <_estack+0xdfffedab>
     c20:	5f545241 	svcpl	0x00545241
     c24:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     c28:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     c2c:	4d007265 	sfmmi	f7, 4, [r0, #-404]	; 0xfffffe6c
     c30:	614d6d65 	cmpvs	sp, r5, ror #26
     c34:	6567616e 	strbvs	r6, [r7, #-366]!	; 0xfffffe92
     c38:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     c3c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     c40:	6e696c00 	cdpvs	12, 6, cr6, cr9, cr0, {0}
     c44:	2f2e0065 	svccs	0x002e0065
     c48:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
     c4c:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
     c50:	2f6e6f69 	svccs	0x006e6f69
     c54:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     c58:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     c5c:	74695f78 	strbtvc	r5, [r9], #-3960	; 0xfffff088
     c60:	5000632e 	andpl	r6, r0, lr, lsr #6
     c64:	53646e65 	cmnpl	r4, #1616	; 0x650
     c68:	61485f56 	cmpvs	r8, r6, asr pc
     c6c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     c70:	41480072 	hvcmi	32770	; 0x8002
     c74:	6e495f4c 	cdpvs	15, 4, cr5, cr9, cr12, {2}
     c78:	63695463 	cmnvs	r9, #1660944384	; 0x63000000
     c7c:	5f5f006b 	svcpl	0x005f006b
     c80:	61736964 	cmnvs	r3, r4, ror #18
     c84:	5f656c62 	svcpl	0x00656c62
     c88:	00717269 	rsbseq	r7, r1, r9, ror #4
     c8c:	65737361 	ldrbvs	r7, [r3, #-865]!	; 0xfffffc9f
     c90:	665f7472 			; <UNDEFINED> instruction: 0x665f7472
     c94:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
     c98:	56530064 	ldrbpl	r0, [r3], -r4, rrx
     c9c:	61485f43 	cmpvs	r8, r3, asr #30
     ca0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     ca4:	79530072 	ldmdbvc	r3, {r1, r4, r5, r6}^
     ca8:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
     cac:	61485f6b 	cmpvs	r8, fp, ror #30
     cb0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     cb4:	61480072 	hvcvs	32770	; 0x8002
     cb8:	61466472 	hvcvs	26178	; 0x6642
     cbc:	5f746c75 	svcpl	0x00746c75
     cc0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     cc4:	5f72656c 	svcpl	0x0072656c
     cc8:	6567654c 	strbvs	r6, [r7, #-1356]!	; 0xfffffab4
     ccc:	0079636e 	rsbseq	r6, r9, lr, ror #6
     cd0:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     cd4:	2f65726f 	svccs	0x0065726f
     cd8:	2f637253 	svccs	0x00637253
     cdc:	6f697067 	svcvs	0x00697067
     ce0:	5300632e 	movwpl	r6, #814	; 0x32e
     ce4:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
     ce8:	43545200 	cmpmi	r4, #0, 4
     cec:	554b575f 	strbpl	r5, [fp, #-1887]	; 0xfffff8a1
     cf0:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     cf4:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
     cf8:	32495458 	subcc	r5, r9, #88, 8	; 0x58000000
     cfc:	5152495f 	cmppl	r2, pc, asr r9
     d00:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     d04:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     d08:	61657274 	smcvs	22308	; 0x5724
     d0c:	495f366d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     d10:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d14:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
     d18:	5f50555f 	svcpl	0x0050555f
     d1c:	314d4954 	cmpcc	sp, r4, asr r9
     d20:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     d24:	47006e51 	smlsdmi	r0, r1, lr, r6
     d28:	5f4f4950 	svcpl	0x004f4950
     d2c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     d30:	75727453 	ldrbvc	r7, [r2, #-1107]!	; 0xfffffbad
     d34:	44007463 	strmi	r7, [r0], #-1123	; 0xfffffb9d
     d38:	5f32414d 	svcpl	0x0032414d
     d3c:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     d40:	5f316d61 	svcpl	0x00316d61
     d44:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d48:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     d4c:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     d50:	46006e51 			; <UNDEFINED> instruction: 0x46006e51
     d54:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
     d58:	5152495f 	cmppl	r2, pc, asr r9
     d5c:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     d60:	495f324d 	ldmdbmi	pc, {r0, r2, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     d64:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d68:	324e4143 	subcc	r4, lr, #-1073741808	; 0xc0000010
     d6c:	3058525f 	subscc	r5, r8, pc, asr r2
     d70:	5152495f 	cmppl	r2, pc, asr r9
     d74:	5355006e 	cmppl	r5, #110	; 0x6e
     d78:	36545241 	ldrbcc	r5, [r4], -r1, asr #4
     d7c:	5152495f 	cmppl	r2, pc, asr r9
     d80:	4148006e 	cmpmi	r8, lr, rrx
     d84:	41555f4c 	cmpmi	r5, ip, asr #30
     d88:	4d5f5452 	cfldrdmi	mvd5, [pc, #-328]	; c48 <_Min_Heap_Size+0x448>
     d8c:	6e497073 	mcrvs	0, 2, r7, cr9, cr3, {3}
     d90:	53007469 	movwpl	r7, #1129	; 0x469
     d94:	5f324950 	svcpl	0x00324950
     d98:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     d9c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     da0:	52425f38 	subpl	r5, r2, #56, 30	; 0xe0
     da4:	49545f4b 	ldmdbmi	r4, {r0, r1, r3, r6, r8, r9, sl, fp, ip, lr}^
     da8:	5f32314d 	svcpl	0x0032314d
     dac:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     db0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     db4:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     db8:	734d5f54 	movtvc	r5, #57172	; 0xdf54
     dbc:	49654470 	stmdbmi	r5!, {r4, r5, r6, sl, lr}^
     dc0:	0074696e 	rsbseq	r6, r4, lr, ror #18
     dc4:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     dc8:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     dcc:	356d6165 	strbcc	r6, [sp, #-357]!	; 0xfffffe9b
     dd0:	5152495f 	cmppl	r2, pc, asr r9
     dd4:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     dd8:	545f314d 	ldrbpl	r3, [pc], #-333	; de0 <_Min_Heap_Size+0x5e0>
     ddc:	435f4752 	cmpmi	pc, #21495808	; 0x1480000
     de0:	545f4d4f 	ldrbpl	r4, [pc], #-3407	; de8 <_Min_Heap_Size+0x5e8>
     de4:	31314d49 	teqcc	r1, r9, asr #26
     de8:	5152495f 	cmppl	r2, pc, asr r9
     dec:	7953006e 	ldmdbvc	r3, {r1, r2, r3, r5, r6}^
     df0:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
     df4:	52495f6b 	subpl	r5, r9, #428	; 0x1ac
     df8:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     dfc:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     e00:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     e04:	47006e51 	smlsdmi	r0, r1, lr, r6
     e08:	5f4f4950 	svcpl	0x004f4950
     e0c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     e10:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     e14:	00666544 	rsbeq	r6, r6, r4, asr #10
     e18:	31414d44 	cmpcc	r1, r4, asr #26
     e1c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     e20:	326d6165 	rsbcc	r6, sp, #1073741849	; 0x40000019
     e24:	5152495f 	cmppl	r2, pc, asr r9
     e28:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     e2c:	535f3241 	cmppl	pc, #268435460	; 0x10000004
     e30:	61657274 	smcvs	22308	; 0x5724
     e34:	495f346d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     e38:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e3c:	5f4c4148 	svcpl	0x004c4148
     e40:	4f495047 	svcmi	0x00495047
     e44:	4965445f 	stmdbmi	r5!, {r0, r1, r2, r3, r4, r6, sl, lr}^
     e48:	0074696e 	rsbseq	r6, r4, lr, ror #18
     e4c:	31433249 	cmpcc	r3, r9, asr #4
     e50:	5f52455f 	svcpl	0x0052455f
     e54:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e58:	72617500 	rsbvc	r7, r1, #0, 10
     e5c:	6e614874 	mcrvs	8, 3, r4, cr1, cr4, {3}
     e60:	00656c64 	rsbeq	r6, r5, r4, ror #24
     e64:	324e4143 	subcc	r4, lr, #-1073741808	; 0xc0000010
     e68:	4543535f 	strbmi	r5, [r3, #-863]	; 0xfffffca1
     e6c:	5152495f 	cmppl	r2, pc, asr r9
     e70:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     e74:	495f354d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     e78:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e7c:	67617355 			; <UNDEFINED> instruction: 0x67617355
     e80:	75614665 	strbvc	r4, [r1, #-1637]!	; 0xfffff99b
     e84:	495f746c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     e88:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e8c:	5f4c4148 	svcpl	0x004c4148
     e90:	4f495047 	svcmi	0x00495047
     e94:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     e98:	41430074 	hvcmi	12292	; 0x3004
     e9c:	525f314e 	subspl	r3, pc, #-2147483629	; 0x80000013
     ea0:	495f3058 	ldmdbmi	pc, {r3, r4, r6, ip, sp}^	; <UNPREDICTABLE>
     ea4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ea8:	344d4954 	strbcc	r4, [sp], #-2388	; 0xfffff6ac
     eac:	5152495f 	cmppl	r2, pc, asr r9
     eb0:	5355006e 	cmppl	r5, #110	; 0x6e
     eb4:	32545241 	subscc	r5, r4, #268435460	; 0x10000004
     eb8:	5152495f 	cmppl	r2, pc, asr r9
     ebc:	4148006e 	cmpmi	r8, lr, rrx
     ec0:	41555f4c 	cmpmi	r5, ip, asr #30
     ec4:	495f5452 	ldmdbmi	pc, {r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
     ec8:	0074696e 	rsbseq	r6, r4, lr, ror #18
     ecc:	31433249 	cmpcc	r3, r9, asr #4
     ed0:	5f56455f 	svcpl	0x0056455f
     ed4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ed8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     edc:	43435f31 	movtmi	r5, #16177	; 0x3f31
     ee0:	5152495f 	cmppl	r2, pc, asr r9
     ee4:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     ee8:	5f314954 	svcpl	0x00314954
     eec:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ef0:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     ef4:	58545f31 	ldmdapl	r4, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     ef8:	5152495f 	cmppl	r2, pc, asr r9
     efc:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     f00:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     f04:	61657274 	smcvs	22308	; 0x5724
     f08:	495f356d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     f0c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f10:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
     f14:	4752545f 			; <UNDEFINED> instruction: 0x4752545f
     f18:	4d4f435f 	stclmi	3, cr4, [pc, #-380]	; da4 <_Min_Heap_Size+0x5a4>
     f1c:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     f20:	495f3431 	ldmdbmi	pc, {r0, r4, r5, sl, ip, sp}^	; <UNPREDICTABLE>
     f24:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f28:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     f2c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     f30:	376d6165 	strbcc	r6, [sp, -r5, ror #2]!
     f34:	5152495f 	cmppl	r2, pc, asr r9
     f38:	544f006e 	strbpl	r0, [pc], #-110	; f40 <_Min_Heap_Size+0x740>
     f3c:	53465f47 	movtpl	r5, #28487	; 0x6f47
     f40:	5152495f 	cmppl	r2, pc, asr r9
     f44:	6f4e006e 	svcvs	0x004e006e
     f48:	73614d6e 	cmnvc	r1, #7040	; 0x1b80
     f4c:	6c62616b 	stfvse	f6, [r2], #-428	; 0xfffffe54
     f50:	746e4965 	strbtvc	r4, [lr], #-2405	; 0xfffff69b
     f54:	5152495f 	cmppl	r2, pc, asr r9
     f58:	5757006e 	ldrbpl	r0, [r7, -lr, rrx]
     f5c:	495f4744 	ldmdbmi	pc, {r2, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
     f60:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f64:	5f47544f 	svcpl	0x0047544f
     f68:	575f5348 	ldrbpl	r5, [pc, -r8, asr #6]
     f6c:	5f50554b 	svcpl	0x0050554b
     f70:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f74:	6d654d00 	stclvs	13, cr4, [r5, #-0]
     f78:	4d79726f 	lfmmi	f7, 2, [r9, #-444]!	; 0xfffffe44
     f7c:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
     f80:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
     f84:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     f88:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     f8c:	5f504d41 	svcpl	0x00504d41
     f90:	4d415453 	cfstrdmi	mvd5, [r1, #-332]	; 0xfffffeb4
     f94:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     f98:	43006e51 	movwmi	r6, #3665	; 0xe51
     f9c:	5f314e41 	svcpl	0x00314e41
     fa0:	5f454353 	svcpl	0x00454353
     fa4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     fa8:	414d4400 	cmpmi	sp, r0, lsl #8
     fac:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
     fb0:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     fb4:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     fb8:	4c006e51 	stcmi	14, cr6, [r0], {81}	; 0x51
     fbc:	00524b43 	subseq	r4, r2, r3, asr #22
     fc0:	32433249 	subcc	r3, r3, #-1879048188	; 0x90000004
     fc4:	5f52455f 	svcpl	0x0052455f
     fc8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     fcc:	50534f00 	subspl	r4, r3, r0, lsl #30
     fd0:	52444545 	subpl	r4, r4, #289406976	; 0x11400000
     fd4:	73754200 	cmnvc	r5, #0, 4
     fd8:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     fdc:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     fe0:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     fe4:	35545241 	ldrbcc	r5, [r4, #-577]	; 0xfffffdbf
     fe8:	5152495f 	cmppl	r2, pc, asr r9
     fec:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     ff0:	425f314d 	subsmi	r3, pc, #1073741843	; 0x40000013
     ff4:	545f4b52 	ldrbpl	r4, [pc], #-2898	; ffc <_Min_Heap_Size+0x7fc>
     ff8:	5f394d49 	svcpl	0x00394d49
     ffc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1000:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    1004:	52495f37 	subpl	r5, r9, #55, 30	; 0xdc
    1008:	4f006e51 	svcmi	0x00006e51
    100c:	485f4754 	ldmdami	pc, {r2, r4, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
    1010:	52495f53 	subpl	r5, r9, #332	; 0x14c
    1014:	50006e51 	andpl	r6, r0, r1, asr lr
    1018:	52445055 	subpl	r5, r4, #85	; 0x55
    101c:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
    1020:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
    1024:	53006e51 	movwpl	r6, #3665	; 0xe51
    1028:	6c614356 	stclvs	3, cr4, [r1], #-344	; 0xfffffea8
    102c:	52495f6c 	subpl	r5, r9, #108, 30	; 0x1b0
    1030:	46006e51 			; <UNDEFINED> instruction: 0x46006e51
    1034:	495f5550 	ldmdbmi	pc, {r4, r6, r8, sl, ip, lr}^	; <UNPREDICTABLE>
    1038:	006e5152 	rsbeq	r5, lr, r2, asr r1
    103c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1040:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
    1044:	41006e51 	tstmi	r0, r1, asr lr
    1048:	7265746c 	rsbvc	r7, r5, #108, 8	; 0x6c000000
    104c:	6574616e 	ldrbvs	r6, [r4, #-366]!	; 0xfffffe92
    1050:	47544f00 	ldrbmi	r4, [r4, -r0, lsl #30]
    1054:	5f53465f 	svcpl	0x0053465f
    1058:	50554b57 	subspl	r4, r5, r7, asr fp
    105c:	5152495f 	cmppl	r2, pc, asr r9
    1060:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
    1064:	5f344954 	svcpl	0x00344954
    1068:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    106c:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    1070:	41445f36 	cmpmi	r4, r6, lsr pc
    1074:	52495f43 	subpl	r5, r9, #268	; 0x10c
    1078:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
    107c:	5f324332 	svcpl	0x00324332
    1080:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
    1084:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1088:	31414d44 	cmpcc	r1, r4, asr #26
    108c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    1090:	316d6165 	cmncc	sp, r5, ror #2
    1094:	5152495f 	cmppl	r2, pc, asr r9
    1098:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
    109c:	535f3241 	cmppl	pc, #268435460	; 0x10000004
    10a0:	61657274 	smcvs	22308	; 0x5724
    10a4:	495f336d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
    10a8:	006e5152 	rsbeq	r5, lr, r2, asr r1
    10ac:	324e4143 	subcc	r4, lr, #-1073741808	; 0xc0000010
    10b0:	5f58545f 	svcpl	0x0058545f
    10b4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    10b8:	6c755000 	ldclvs	0, cr5, [r5], #-0
    10bc:	4d44006c 	stclmi	0, cr0, [r4, #-432]	; 0xfffffe50
    10c0:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
    10c4:	61657274 	smcvs	22308	; 0x5724
    10c8:	495f306d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, ip, sp}^	; <UNPREDICTABLE>
    10cc:	006e5152 	rsbeq	r5, lr, r2, asr r1
    10d0:	5f435452 	svcpl	0x00435452
    10d4:	72616c41 	rsbvc	r6, r1, #16640	; 0x4100
    10d8:	52495f6d 	subpl	r5, r9, #436	; 0x1b4
    10dc:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
    10e0:	5f334332 	svcpl	0x00334332
    10e4:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
    10e8:	006e5152 	rsbeq	r5, lr, r2, asr r1
    10ec:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    10f0:	315f3531 	cmpcc	pc, r1, lsr r5	; <UNPREDICTABLE>
    10f4:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
    10f8:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
    10fc:	5f334d49 	svcpl	0x00334d49
    1100:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1104:	41535500 	cmpmi	r3, r0, lsl #10
    1108:	5f315452 	svcpl	0x00315452
    110c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1110:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1114:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1118:	65535f43 	ldrbvs	r5, [r3, #-3907]	; 0xfffff0bd
    111c:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
    1120:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1124:	4e520079 	mrcmi	0, 2, r0, cr2, cr9, {3}
    1128:	52495f47 	subpl	r5, r9, #284	; 0x11c
    112c:	43006e51 	movwmi	r6, #3665	; 0xe51
    1130:	5f324e41 	svcpl	0x00324e41
    1134:	5f315852 	svcpl	0x00315852
    1138:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    113c:	43444100 	movtmi	r4, #16640	; 0x4100
    1140:	5152495f 	cmppl	r2, pc, asr r9
    1144:	5650006e 	ldrbpl	r0, [r0], -lr, rrx
    1148:	52495f44 	subpl	r5, r9, #68, 30	; 0x110
    114c:	4f006e51 	svcmi	0x00006e51
    1150:	45505954 	ldrbmi	r5, [r0, #-2388]	; 0xfffff6ac
    1154:	53460052 	movtpl	r0, #24658	; 0x6052
    1158:	495f434d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, r9, lr}^	; <UNPREDICTABLE>
    115c:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1160:	5f4c4148 	svcpl	0x004c4148
    1164:	4349564e 	movtmi	r5, #38478	; 0x964e
    1168:	616e455f 	cmnvs	lr, pc, asr r5
    116c:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    1170:	45005152 	strmi	r5, [r0, #-338]	; 0xfffffeae
    1174:	30495458 	subcc	r5, r9, r8, asr r4
    1178:	5152495f 	cmppl	r2, pc, asr r9
    117c:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
    1180:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
    1184:	61657274 	smcvs	22308	; 0x5724
    1188:	495f346d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
    118c:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1190:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
    1194:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
    1198:	366d6165 	strbtcc	r6, [sp], -r5, ror #2
    119c:	5152495f 	cmppl	r2, pc, asr r9
    11a0:	6544006e 	strbvs	r0, [r4, #-110]	; 0xffffff92
    11a4:	4d677562 	cfstr64mi	mvdx7, [r7, #-392]!	; 0xfffffe78
    11a8:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    11ac:	495f726f 	ldmdbmi	pc, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    11b0:	006e5152 	rsbeq	r5, lr, r2, asr r1
    11b4:	33433249 	movtcc	r3, #12873	; 0x3249
    11b8:	5f56455f 	svcpl	0x0056455f
    11bc:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    11c0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    11c4:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    11c8:	69445f43 	stmdbvs	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    11cc:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    11d0:	51524965 	cmppl	r2, r5, ror #18
    11d4:	43435200 	movtmi	r5, #12800	; 0x3200
    11d8:	5152495f 	cmppl	r2, pc, asr r9
    11dc:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
    11e0:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
    11e4:	61657274 	smcvs	22308	; 0x5724
    11e8:	495f336d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
    11ec:	006e5152 	rsbeq	r5, lr, r2, asr r1
    11f0:	52525342 	subspl	r5, r2, #134217729	; 0x8000001
    11f4:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    11f8:	79545f4f 	ldmdbvc	r4, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    11fc:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    1200:	49540066 	ldmdbmi	r4, {r1, r2, r5, r6}^
    1204:	555f314d 	ldrbpl	r3, [pc, #-333]	; 10bf <_Min_Heap_Size+0x8bf>
    1208:	49545f50 	ldmdbmi	r4, {r4, r6, r8, r9, sl, fp, ip, lr}^
    120c:	5f30314d 	svcpl	0x0030314d
    1210:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1214:	2f2e2e00 	svccs	0x002e2e00
    1218:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    121c:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1220:	6173752f 	cmnvs	r3, pc, lsr #10
    1224:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
    1228:	47544f00 	ldrbmi	r4, [r4, -r0, lsl #30]
    122c:	5f53485f 	svcpl	0x0053485f
    1230:	5f315045 	svcpl	0x00315045
    1234:	5f54554f 	svcpl	0x0054554f
    1238:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    123c:	444f4d00 	strbmi	r4, [pc], #-3328	; 1244 <_Min_Heap_Size+0xa44>
    1240:	43005245 	movwmi	r5, #581	; 0x245
    1244:	5f314e41 	svcpl	0x00314e41
    1248:	5f315852 	svcpl	0x00315852
    124c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1250:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
    1254:	355f3949 	ldrbcc	r3, [pc, #-2377]	; 913 <_Min_Heap_Size+0x113>
    1258:	5152495f 	cmppl	r2, pc, asr r9
    125c:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
    1260:	435f384d 	cmpmi	pc, #5046272	; 0x4d0000
    1264:	52495f43 	subpl	r5, r9, #268	; 0x10c
    1268:	53006e51 	movwpl	r6, #3665	; 0xe51
    126c:	5f4f4944 	svcpl	0x004f4944
    1270:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1274:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
    1278:	495f3349 	ldmdbmi	pc, {r0, r3, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
    127c:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1280:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    1284:	495f5653 	ldmdbmi	pc, {r0, r1, r4, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
    1288:	006e5152 	rsbeq	r5, lr, r2, asr r1
    128c:	5f47544f 	svcpl	0x0047544f
    1290:	455f5348 	ldrbmi	r5, [pc, #-840]	; f50 <_Min_Heap_Size+0x750>
    1294:	495f3150 	ldmdbmi	pc, {r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
    1298:	52495f4e 	subpl	r5, r9, #312	; 0x138
    129c:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
    12a0:	5f31414d 	svcpl	0x0031414d
    12a4:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
    12a8:	5f376d61 	svcpl	0x00376d61
    12ac:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    12b0:	414d4400 	cmpmi	sp, r0, lsl #8
    12b4:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
    12b8:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    12bc:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
    12c0:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
    12c4:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 11c8 <_Min_Heap_Size+0x9c8>
    12c8:	6e497073 	mcrvs	0, 2, r7, cr9, cr3, {3}
    12cc:	2e007469 	cdpcs	4, 0, cr7, cr0, cr9, {3}
    12d0:	6f432f2e 	svcvs	0x00432f2e
    12d4:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
    12d8:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    12dc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    12e0:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    12e4:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    12e8:	70736d5f 	rsbsvc	r6, r3, pc, asr sp
    12ec:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    12f0:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    12f4:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    12f8:	43507465 	cmpmi	r0, #1694498816	; 0x65000000
    12fc:	46314b4c 	ldrtmi	r4, [r1], -ip, asr #22
    1300:	00716572 	rsbseq	r6, r1, r2, ror r5
    1304:	5f4c4148 	svcpl	0x004c4148
    1308:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    130c:	475f7845 	ldrbmi	r7, [pc, -r5, asr #16]
    1310:	78527465 	ldmdavc	r2, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1314:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    1318:	70795474 	rsbsvc	r5, r9, r4, ror r4
    131c:	41480065 	cmpmi	r8, r5, rrx
    1320:	41555f4c 	cmpmi	r5, ip, asr #30
    1324:	445f5452 	ldrbmi	r5, [pc], #-1106	; 132c <_Min_Heap_Size+0xb2c>
    1328:	6150414d 	cmpvs	r0, sp, asr #2
    132c:	00657375 	rsbeq	r7, r5, r5, ror r3
    1330:	5f4c4148 	svcpl	0x004c4148
    1334:	5f4e494c 	svcpl	0x004e494c
    1338:	646e6553 	strbtvs	r6, [lr], #-1363	; 0xfffffaad
    133c:	61657242 	cmnvs	r5, r2, asr #4
    1340:	6c46006b 	mcrrvs	0, 6, r0, r6, cr11
    1344:	74536761 	ldrbvc	r6, [r3], #-1889	; 0xfffff89f
    1348:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
    134c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1350:	414d445f 	cmpmi	sp, pc, asr r4
    1354:	6f62415f 	svcvs	0x0062415f
    1358:	495f7472 	ldmdbmi	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    135c:	41480054 	qdaddmi	r0, r4, r8
    1360:	61485f4c 	cmpvs	r8, ip, asr #30
    1364:	7544666c 	strbvc	r6, [r4, #-1644]	; 0xfffff994
    1368:	78656c70 	stmdavc	r5!, {r4, r5, r6, sl, fp, sp, lr}^
    136c:	616e455f 	cmnvs	lr, pc, asr r5
    1370:	54656c62 	strbtpl	r6, [r5], #-3170	; 0xfffff39e
    1374:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    1378:	7474696d 	ldrbtvc	r6, [r4], #-2413	; 0xfffff693
    137c:	63007265 	movwvs	r7, #613	; 0x265
    1380:	74693372 	strbtvc	r3, [r9], #-882	; 0xfffffc8e
    1384:	41480073 	hvcmi	32771	; 0x8003
    1388:	41555f4c 	cmpmi	r5, ip, asr #30
    138c:	78455452 	stmdavc	r5, {r1, r4, r6, sl, ip, lr}^
    1390:	4578525f 	ldrbmi	r5, [r8, #-607]!	; 0xfffffda1
    1394:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    1398:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    139c:	6b636162 	blvs	18d992c <_Min_Heap_Size+0x18d912c>
    13a0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    13a4:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    13a8:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    13ac:	5274726f 	rsbspl	r7, r4, #-268435450	; 0xf0000006
    13b0:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    13b4:	48006576 	stmdami	r0, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
    13b8:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 77f <_Min_Heap_Size-0x81>
    13bc:	5f545241 	svcpl	0x00545241
    13c0:	45746547 	ldrbmi	r6, [r4, #-1351]!	; 0xfffffab9
    13c4:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    13c8:	61447000 	mrsvs	r7, (UNDEF: 68)
    13cc:	55006174 	strpl	r6, [r0, #-372]	; 0xfffffe8c
    13d0:	5f545241 	svcpl	0x00545241
    13d4:	52646e45 	rsbpl	r6, r4, #1104	; 0x450
    13d8:	61725478 	cmnvs	r2, r8, ror r4
    13dc:	6566736e 	strbvs	r7, [r6, #-878]!	; 0xfffffc92
    13e0:	41550072 	cmpmi	r5, r2, ror r0
    13e4:	455f5452 	ldrbmi	r5, [pc, #-1106]	; f9a <_Min_Heap_Size+0x79a>
    13e8:	7854646e 	ldmdavc	r4, {r1, r2, r3, r5, r6, sl, sp, lr}^
    13ec:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    13f0:	72656673 	rsbvc	r6, r5, #120586240	; 0x7300000
    13f4:	61647000 	cmnvs	r4, r0
    13f8:	62386174 	eorsvs	r6, r8, #116, 2
    13fc:	00737469 	rsbseq	r7, r3, r9, ror #8
    1400:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1404:	414d445f 	cmpmi	sp, pc, asr r4
    1408:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    140c:	43657669 	cmnmi	r5, #110100480	; 0x6900000
    1410:	00746c70 	rsbseq	r6, r4, r0, ror ip
    1414:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1418:	414d445f 	cmpmi	sp, pc, asr r4
    141c:	61487854 	cmpvs	r8, r4, asr r8
    1420:	7043666c 	subvc	r6, r3, ip, ror #12
    1424:	4800746c 	stmdami	r0, {r2, r3, r5, r6, sl, ip, sp, lr}
    1428:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1430 <_Min_Heap_Size+0xc30>
    142c:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
    1430:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1434:	0054495f 	subseq	r4, r4, pc, asr r9
    1438:	5f4c4148 	svcpl	0x004c4148
    143c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1440:	6f62415f 	svcvs	0x0062415f
    1444:	65527472 	ldrbvs	r7, [r2, #-1138]	; 0xfffffb8e
    1448:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    144c:	6c704365 	ldclvs	3, cr4, [r0], #-404	; 0xfffffe6c
    1450:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    1454:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1458:	6c46006b 	mcrrvs	0, 6, r0, r6, cr11
    145c:	70006761 	andvc	r6, r0, r1, ror #14
    1460:	61746164 	cmnvs	r4, r4, ror #2
    1464:	69623631 	stmdbvs	r2!, {r0, r4, r5, r9, sl, ip, sp}^
    1468:	48007374 	stmdami	r0, {r2, r4, r5, r6, r8, r9, ip, sp, lr}
    146c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 833 <_Min_Heap_Size+0x33>
    1470:	5f545241 	svcpl	0x00545241
    1474:	61487852 	cmpvs	r8, r2, asr r8
    1478:	7043666c 	subvc	r6, r3, ip, ror #12
    147c:	6143746c 	cmpvs	r3, ip, ror #8
    1480:	61626c6c 	cmnvs	r2, ip, ror #24
    1484:	54006b63 	strpl	r6, [r0], #-2915	; 0xfffff49d
    1488:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
    148c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1490:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1494:	6c61485f 	stclvs	8, cr4, [r1], #-380	; 0xfffffe84
    1498:	70754466 	rsbsvc	r4, r5, r6, ror #8
    149c:	5f78656c 	svcpl	0x0078656c
    14a0:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    14a4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    14a8:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    14ac:	65445f54 	strbvs	r5, [r4, #-3924]	; 0xfffff0ac
    14b0:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    14b4:	6b615700 	blvs	18570bc <_Min_Heap_Size+0x18568bc>
    14b8:	4d705565 	cfldr64mi	mvdx5, [r0, #-404]!	; 0xfffffe6c
    14bc:	6f687465 	svcvs	0x00687465
    14c0:	72420064 	subvc	r0, r2, #100	; 0x64
    14c4:	446b6165 	strbtmi	r6, [fp], #-357	; 0xfffffe9b
    14c8:	63657465 	cmnvs	r5, #1694498816	; 0x65000000
    14cc:	6e654c74 	mcrvs	12, 3, r4, cr5, cr4, {3}
    14d0:	00687467 	rsbeq	r7, r8, r7, ror #8
    14d4:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    14d8:	6174535f 	cmnvs	r4, pc, asr r3
    14dc:	525f7472 	subspl	r7, pc, #1912602624	; 0x72000000
    14e0:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    14e4:	495f6576 	ldmdbmi	pc, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    14e8:	41550054 	cmpmi	r5, r4, asr r0
    14ec:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
    14f0:	6f437465 	svcvs	0x00437465
    14f4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    14f8:	6f624100 	svcvs	0x00624100
    14fc:	70437472 	subvc	r7, r3, r2, ror r4
    1500:	5500746c 	strpl	r7, [r0, #-1132]	; 0xfffffb94
    1504:	5f545241 	svcpl	0x00545241
    1508:	52414d44 	subpl	r4, r1, #68, 26	; 0x1100
    150c:	6f624178 	svcvs	0x00624178
    1510:	61437472 	hvcvs	14146	; 0x3742
    1514:	61626c6c 	cmnvs	r2, ip, ror #24
    1518:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    151c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 8e3 <_Min_Heap_Size+0xe3>
    1520:	5f545241 	svcpl	0x00545241
    1524:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1528:	61725474 	cmnvs	r2, r4, ror r4
    152c:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    1530:	54495f74 	strbpl	r5, [r9], #-3956	; 0xfffff08c
    1534:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1538:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    153c:	65475f54 	strbvs	r5, [r7, #-3924]	; 0xfffff0ac
    1540:	61745374 	cmnvs	r4, r4, ror r3
    1544:	5f006574 	svcpl	0x00006574
    1548:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
    154c:	00575845 	subseq	r5, r7, r5, asr #16
    1550:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1554:	414d445f 	cmpmi	sp, pc, asr r4
    1558:	6e4f7852 	mcrvs	8, 2, r7, cr15, cr2, {2}
    155c:	6241796c 	subvs	r7, r1, #108, 18	; 0x1b0000
    1560:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
    1564:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1568:	006b6361 	rsbeq	r6, fp, r1, ror #6
    156c:	6f727265 	svcvs	0x00727265
    1570:	616c6672 	smcvs	50786	; 0xc662
    1574:	48007367 	stmdami	r0, {r0, r1, r2, r5, r6, r8, r9, ip, sp, lr}
    1578:	535f4c41 	cmppl	pc, #16640	; 0x4100
    157c:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    1580:	70795473 	rsbsvc	r5, r9, r3, ror r4
    1584:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1588:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    158c:	414d445f 	cmpmi	sp, pc, asr r4
    1590:	6f62415f 	svcvs	0x0062415f
    1594:	2e007472 	mcrcs	4, 0, r7, cr0, cr2, {3}
    1598:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    159c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    15a0:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    15a4:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    15a8:	5f787834 	svcpl	0x00787834
    15ac:	5f4c4148 	svcpl	0x004c4148
    15b0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    15b4:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    15b8:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    15bc:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    15c0:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    15c4:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    15c8:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
    15cc:	00632e74 	rsbeq	r2, r3, r4, ror lr
    15d0:	5f4c4148 	svcpl	0x004c4148
    15d4:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    15d8:	4378545f 	cmnmi	r8, #1593835520	; 0x5f000000
    15dc:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
    15e0:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    15e4:	006b6361 	rsbeq	r6, fp, r1, ror #6
    15e8:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    15ec:	414d445f 	cmpmi	sp, pc, asr r4
    15f0:	62417854 	subvs	r7, r1, #84, 16	; 0x540000
    15f4:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
    15f8:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    15fc:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1600:	616d6468 	cmnvs	sp, r8, ror #8
    1604:	72736900 	rsbsvc	r6, r3, #0, 18
    1608:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    160c:	41550073 	cmpmi	r5, r3, ror r0
    1610:	445f5452 	ldrbmi	r5, [pc], #-1106	; 1618 <_Min_Heap_Size+0xe18>
    1614:	7245414d 	subvc	r4, r5, #1073741843	; 0x40000013
    1618:	00726f72 	rsbseq	r6, r2, r2, ror pc
    161c:	5f4c4148 	svcpl	0x004c4148
    1620:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
    1624:	006b6369 	rsbeq	r6, fp, r9, ror #6
    1628:	5f4c4148 	svcpl	0x004c4148
    162c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1630:	6f62415f 	svcvs	0x0062415f
    1634:	495f7472 	ldmdbmi	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1638:	41550054 	cmpmi	r5, r4, asr r0
    163c:	445f5452 	ldrbmi	r5, [pc], #-1106	; 1644 <_Min_Heap_Size+0xe44>
    1640:	7852414d 	ldmdavc	r2, {r0, r2, r3, r6, r8, lr}^
    1644:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    1648:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    164c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1650:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1654:	65525f54 	ldrbvs	r5, [r2, #-3924]	; 0xfffff0ac
    1658:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    165c:	4d445f65 	stclmi	15, cr5, [r4, #-404]	; 0xfffffe6c
    1660:	41480041 	cmpmi	r8, r1, asr #32
    1664:	41555f4c 	cmpmi	r5, ip, asr #30
    1668:	415f5452 	cmpmi	pc, r2, asr r4	; <UNPREDICTABLE>
    166c:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    1670:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1674:	5f657669 	svcpl	0x00657669
    1678:	52005449 	andpl	r5, r0, #1224736768	; 0x49000000
    167c:	6e654c78 	mcrvs	12, 3, r4, cr5, cr8, {3}
    1680:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1684:	6c754d5f 	ldclvs	13, cr4, [r5], #-380	; 0xfffffe84
    1688:	72506974 	subsvc	r6, r0, #116, 18	; 0x1d0000
    168c:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    1690:	5f726f73 	svcpl	0x00726f73
    1694:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1698:	52415500 	subpl	r5, r1, #0, 10
    169c:	61575f54 	cmpvs	r7, r4, asr pc
    16a0:	6e4f7469 	cdpvs	4, 4, cr7, cr15, cr9, {3}
    16a4:	67616c46 	strbvs	r6, [r1, -r6, asr #24]!
    16a8:	69746e55 	ldmdbvs	r4!, {r0, r2, r4, r6, r9, sl, fp, sp, lr}^
    16ac:	6d69546c 	cfstrdvs	mvd5, [r9, #-432]!	; 0xfffffe50
    16b0:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
    16b4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    16b8:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    16bc:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    16c0:	5474726f 	ldrbtpl	r7, [r4], #-623	; 0xfffffd91
    16c4:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    16c8:	4374696d 	cmnmi	r4, #1785856	; 0x1b4000
    16cc:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
    16d0:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    16d4:	006b6361 	rsbeq	r6, fp, r1, ror #6
    16d8:	444c5f5f 	strbmi	r5, [ip], #-3935	; 0xfffff0a1
    16dc:	57584552 			; <UNDEFINED> instruction: 0x57584552
    16e0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    16e4:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    16e8:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    16ec:	5474726f 	ldrbtpl	r7, [r4], #-623	; 0xfffffd91
    16f0:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    16f4:	0074696d 	rsbseq	r6, r4, sp, ror #18
    16f8:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    16fc:	6174535f 	cmnvs	r4, pc, asr r3
    1700:	525f7472 	subspl	r7, pc, #1912602624	; 0x72000000
    1704:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    1708:	445f6576 	ldrbmi	r6, [pc], #-1398	; 1710 <_Min_Heap_Size+0xf10>
    170c:	4800414d 	stmdami	r0, {r0, r2, r3, r6, r8, lr}
    1710:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; ad7 <_Min_Heap_Size+0x2d7>
    1714:	45545241 	ldrbmi	r5, [r4, #-577]	; 0xfffffdbf
    1718:	65525f78 	ldrbvs	r5, [r2, #-3960]	; 0xfffff088
    171c:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    1720:	496f5465 	stmdbmi	pc!, {r0, r2, r5, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    1724:	5f656c64 	svcpl	0x00656c64
    1728:	5f005449 	svcpl	0x00005449
    172c:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
    1730:	5f343674 	svcpl	0x00343674
    1734:	5f5f0074 	svcpl	0x005f0074
    1738:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
    173c:	6c755f69 	ldclvs	15, cr5, [r5], #-420	; 0xfffffe5c
    1740:	6d766964 			; <UNDEFINED> instruction: 0x6d766964
    1744:	4800646f 	stmdami	r0, {r0, r1, r2, r3, r5, r6, sl, sp, lr}
    1748:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; b0f <_Min_Heap_Size+0x30f>
    174c:	5f545241 	svcpl	0x00545241
    1750:	53414d44 	movtpl	r4, #7492	; 0x1d44
    1754:	00706f74 	rsbseq	r6, r0, r4, ror pc
    1758:	5f4c4148 	svcpl	0x004c4148
    175c:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
    1760:	6f725069 	svcvs	0x00725069
    1764:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    1768:	455f726f 	ldrbmi	r7, [pc, #-623]	; 1501 <_Min_Heap_Size+0xd01>
    176c:	4d746978 			; <UNDEFINED> instruction: 0x4d746978
    1770:	4d657475 	cfstrdmi	mvd7, [r5, #-468]!	; 0xfffffe2c
    1774:	0065646f 	rsbeq	r6, r5, pc, ror #8
    1778:	72617568 	rsbvc	r7, r1, #104, 10	; 0x1a000000
    177c:	41480074 	hvcmi	32772	; 0x8004
    1780:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1784:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1788:	4c435074 	mcrrmi	0, 7, r5, r3, cr4
    178c:	7246324b 	subvc	r3, r6, #-1342177276	; 0xb0000004
    1790:	48007165 	stmdami	r0, {r0, r2, r5, r6, r8, ip, sp, lr}
    1794:	485f4c41 	ldmdami	pc, {r0, r6, sl, fp, lr}^	; <UNPREDICTABLE>
    1798:	44666c61 	strbtmi	r6, [r6], #-3169	; 0xfffff39f
    179c:	656c7075 	strbvs	r7, [ip, #-117]!	; 0xffffff8b
    17a0:	6e455f78 	mcrvs	15, 2, r5, cr5, cr8, {3}
    17a4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    17a8:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    17ac:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    17b0:	6c637000 	stclvs	0, cr7, [r3], #-0
    17b4:	6574006b 	ldrbvs	r0, [r4, #-107]!	; 0xffffff95
    17b8:	0031706d 	eorseq	r7, r1, sp, rrx
    17bc:	706d6574 	rsbvc	r6, sp, r4, ror r5
    17c0:	69740032 	ldmdbvs	r4!, {r1, r4, r5}^
    17c4:	74736b63 	ldrbtvc	r6, [r3], #-2915	; 0xfffff49d
    17c8:	00747261 	rsbseq	r7, r4, r1, ror #4
    17cc:	5f4c4148 	svcpl	0x004c4148
    17d0:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    17d4:	4378525f 	cmnmi	r8, #-268435451	; 0xf0000005
    17d8:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
    17dc:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    17e0:	006b6361 	rsbeq	r6, fp, r1, ror #6
    17e4:	725f626e 	subsvc	r6, pc, #-536870906	; 0xe0000006
    17e8:	69616d65 	stmdbvs	r1!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
    17ec:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
    17f0:	5f78725f 	svcpl	0x0078725f
    17f4:	61746164 	cmnvs	r4, r4, ror #2
    17f8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    17fc:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1800:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    1804:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
    1808:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
    180c:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1810:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1814:	72616d64 	rsbvc	r6, r1, #100, 26	; 0x1900
    1818:	65757165 	ldrbvs	r7, [r5, #-357]!	; 0xfffffe9b
    181c:	48007473 	stmdami	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    1820:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; be7 <_Min_Heap_Size+0x3e7>
    1824:	5f545241 	svcpl	0x00545241
    1828:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    182c:	00657669 	rsbeq	r7, r5, r9, ror #12
    1830:	5f4c4148 	svcpl	0x004c4148
    1834:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1838:	6172545f 	cmnvs	r2, pc, asr r4
    183c:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    1840:	54495f74 	strbpl	r5, [r9], #-3956	; 0xfffff08c
    1844:	52415500 	subpl	r5, r1, #0, 10
    1848:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    184c:	6f624141 	svcvs	0x00624141
    1850:	6e4f7472 	mcrvs	4, 2, r7, cr15, cr2, {3}
    1854:	6f727245 	svcvs	0x00727245
    1858:	626e0072 	rsbvs	r0, lr, #114	; 0x72
    185c:	5f78725f 	svcpl	0x0078725f
    1860:	61746164 	cmnvs	r4, r4, ror #2
    1864:	52415500 	subpl	r5, r1, #0, 10
    1868:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    186c:	61725441 	cmnvs	r2, r1, asr #8
    1870:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    1874:	6c704374 	ldclvs	3, cr4, [r0], #-464	; 0xfffffe30
    1878:	41480074 	hvcmi	32772	; 0x8004
    187c:	41555f4c 	cmpmi	r5, ip, asr #30
    1880:	78455452 	stmdavc	r5, {r1, r4, r6, sl, ip, lr}^
    1884:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    1888:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    188c:	64496f54 	strbvs	r6, [r9], #-3924	; 0xfffff0ac
    1890:	445f656c 	ldrbmi	r6, [pc], #-1388	; 1898 <_Min_Heap_Size+0x1098>
    1894:	5500414d 	strpl	r4, [r0, #-333]	; 0xfffffeb3
    1898:	5f545241 	svcpl	0x00545241
    189c:	54646e45 	strbtpl	r6, [r4], #-3653	; 0xfffff1bb
    18a0:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    18a4:	5f74696d 	svcpl	0x0074696d
    18a8:	48005449 	stmdami	r0, {r0, r3, r6, sl, ip, lr}
    18ac:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; c73 <_Min_Heap_Size+0x473>
    18b0:	5f545241 	svcpl	0x00545241
    18b4:	61487854 	cmpvs	r8, r4, asr r8
    18b8:	7043666c 	subvc	r6, r3, ip, ror #12
    18bc:	6143746c 	cmpvs	r3, ip, ror #8
    18c0:	61626c6c 	cmnvs	r2, ip, ror #24
    18c4:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    18c8:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; c8f <_Min_Heap_Size+0x48f>
    18cc:	5f545241 	svcpl	0x00545241
    18d0:	6f727245 	svcvs	0x00727245
    18d4:	6c614372 	stclvs	3, cr4, [r1], #-456	; 0xfffffe38
    18d8:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    18dc:	4148006b 	cmpmi	r8, fp, rrx
    18e0:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    18e4:	65475f41 	strbvs	r5, [r7, #-3905]	; 0xfffff0bf
    18e8:	72724574 	rsbsvc	r4, r2, #116, 10	; 0x1d000000
    18ec:	4800726f 	stmdami	r0, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}
    18f0:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; cb7 <_Min_Heap_Size+0x4b7>
    18f4:	5f545241 	svcpl	0x00545241
    18f8:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    18fc:	74696d73 	strbtvc	r6, [r9], #-3443	; 0xfffff28d
    1900:	414d445f 	cmpmi	sp, pc, asr r4
    1904:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1908:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    190c:	5f784554 	svcpl	0x00784554
    1910:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1914:	54657669 	strbtpl	r7, [r5], #-1641	; 0xfffff997
    1918:	6c64496f 			; <UNDEFINED> instruction: 0x6c64496f
    191c:	41480065 	cmpmi	r8, r5, rrx
    1920:	754d5f4c 	strbvc	r5, [sp, #-3916]	; 0xfffff0b4
    1924:	5069746c 	rsbpl	r7, r9, ip, ror #8
    1928:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    192c:	726f7373 	rsbvc	r7, pc, #-872415231	; 0xcc000001
    1930:	746e455f 	strbtvc	r4, [lr], #-1375	; 0xfffffaa1
    1934:	754d7265 	strbvc	r7, [sp, #-613]	; 0xfffffd9b
    1938:	6f4d6574 	svcvs	0x004d6574
    193c:	55006564 	strpl	r6, [r0, #-1380]	; 0xfffffa9c
    1940:	5f545241 	svcpl	0x00545241
    1944:	54414d44 	strbpl	r4, [r1], #-3396	; 0xfffff2bc
    1948:	6c6e4f78 	stclvs	15, cr4, [lr], #-480	; 0xfffffe20
    194c:	6f624179 	svcvs	0x00624179
    1950:	61437472 	hvcvs	14146	; 0x3742
    1954:	61626c6c 	cmnvs	r2, ip, ror #24
    1958:	63006b63 	movwvs	r6, #2915	; 0xb63
    195c:	74693172 	strbtvc	r3, [r9], #-370	; 0xfffffe8e
    1960:	41480073 	hvcmi	32771	; 0x8003
    1964:	41555f4c 	cmpmi	r5, ip, asr #30
    1968:	445f5452 	ldrbmi	r5, [pc], #-1106	; 1970 <_Min_Heap_Size+0x1170>
    196c:	6552414d 	ldrbvs	r4, [r2, #-333]	; 0xfffffeb3
    1970:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    1974:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1978:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    197c:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    1980:	0074726f 	rsbseq	r7, r4, pc, ror #4
    1984:	5f4c4148 	svcpl	0x004c4148
    1988:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    198c:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    1990:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    1994:	0054495f 	subseq	r4, r4, pc, asr r9
    1998:	5f4c4148 	svcpl	0x004c4148
    199c:	5f4e494c 	svcpl	0x004e494c
    19a0:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    19a4:	73657200 	cmnvc	r5, #0, 4
    19a8:	00746c75 	rsbseq	r6, r4, r5, ror ip
    19ac:	5f4c4148 	svcpl	0x004c4148
    19b0:	5f434352 	svcpl	0x00434352
    19b4:	43535343 	cmpmi	r3, #201326593	; 0xc000001
    19b8:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    19bc:	006b6361 	rsbeq	r6, fp, r1, ror #6
    19c0:	706c6c70 	rsbvc	r6, ip, r0, ror ip
    19c4:	72777000 	rsbsvc	r7, r7, #0
    19c8:	636b6c63 	cmnvs	fp, #25344	; 0x6300
    19cc:	676e6168 	strbvs	r6, [lr, -r8, ror #2]!
    19d0:	41006465 	tstmi	r0, r5, ror #8
    19d4:	72504250 	subsvc	r4, r0, #80, 4
    19d8:	54637365 	strbtpl	r7, [r3], #-869	; 0xfffffc9b
    19dc:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    19e0:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
    19e4:	46005243 	strmi	r5, [r0], -r3, asr #4
    19e8:	4853414c 	ldmdami	r3, {r2, r3, r6, r8, lr}^
    19ec:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    19f0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    19f4:	414e4500 	cmpmi	lr, r0, lsl #10
    19f8:	00454c42 	subeq	r4, r5, r2, asr #24
    19fc:	4b54504f 	blmi	1515b40 <_Min_Heap_Size+0x1515340>
    1a00:	00525945 	subseq	r5, r2, r5, asr #18
    1a04:	766c6c70 			; <UNDEFINED> instruction: 0x766c6c70
    1a08:	44006f63 	strmi	r6, [r0], #-3939	; 0xfffff09d
    1a0c:	42415349 	submi	r5, r1, #603979777	; 0x24000001
    1a10:	4f00454c 	svcmi	0x0000454c
    1a14:	52435450 	subpl	r5, r3, #80, 8	; 0x50000000
    1a18:	43520031 	cmpmi	r2, #49	; 0x31
    1a1c:	434d5f43 	movtmi	r5, #57155	; 0xdf43
    1a20:	7669444f 	strbtvc	r4, [r9], -pc, asr #8
    1a24:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1a28:	4343525f 	movtmi	r5, #12895	; 0x325f
    1a2c:	616e455f 	cmnvs	lr, pc, asr r5
    1a30:	43656c62 	cmnmi	r5, #25088	; 0x6200
    1a34:	41005353 	tstmi	r0, r3, asr r3
    1a38:	72504248 	subsvc	r4, r0, #72, 4	; 0x80000004
    1a3c:	54637365 	strbtpl	r7, [r3], #-869	; 0xfffffc9b
    1a40:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1a44:	73797300 	cmnvc	r9, #0, 6
    1a48:	636f6c63 	cmnvs	pc, #25344	; 0x6300
    1a4c:	6572666b 	ldrbvs	r6, [r2, #-1643]!	; 0xfffff995
    1a50:	41480071 	hvcmi	32769	; 0x8001
    1a54:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1a58:	69445f43 	stmdbvs	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    1a5c:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    1a60:	53534365 	cmppl	r3, #-1811939327	; 0x94000001
    1a64:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1a68:	4343525f 	movtmi	r5, #12895	; 0x325f
    1a6c:	4f434d5f 	svcmi	0x00434d5f
    1a70:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1a74:	53006769 	movwpl	r6, #1897	; 0x769
    1a78:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1a7c:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
    1a80:	6f6c4365 	svcvs	0x006c4365
    1a84:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    1a88:	495f4c41 	ldmdbmi	pc, {r0, r6, sl, fp, lr}^	; <UNPREDICTABLE>
    1a8c:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
    1a90:	006b6369 	rsbeq	r6, fp, r9, ror #6
    1a94:	5f6c6c70 	svcpl	0x006c6c70
    1a98:	666e6f63 	strbtvs	r6, [lr], -r3, ror #30
    1a9c:	75006769 	strvc	r6, [r0, #-1897]	; 0xfffff897
    1aa0:	63695477 	cmnvs	r9, #1996488704	; 0x77000000
    1aa4:	6972506b 	ldmdbvs	r2!, {r0, r1, r3, r5, r6, ip, lr}^
    1aa8:	6c70006f 	ldclvs	0, cr0, [r0], #-444	; 0xfffffe44
    1aac:	48006d6c 	stmdami	r0, {r2, r3, r5, r6, r8, sl, fp, sp, lr}
    1ab0:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1ab4:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    1ab8:	79537465 	ldmdbvc	r3, {r0, r2, r5, r6, sl, ip, sp, lr}^
    1abc:	6f6c4373 	svcvs	0x006c4373
    1ac0:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    1ac4:	48007165 	stmdami	r0, {r0, r2, r5, r6, r8, ip, sp, lr}
    1ac8:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1acc:	445f4343 	ldrbmi	r4, [pc], #-835	; 1ad4 <_Min_Heap_Size+0x12d4>
    1ad0:	696e4965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, lr}^
    1ad4:	43520074 	cmpmi	r2, #116	; 0x74
    1ad8:	434d5f43 	movtmi	r5, #57155	; 0xdf43
    1adc:	756f534f 	strbvc	r5, [pc, #-847]!	; 1795 <_Min_Heap_Size+0xf95>
    1ae0:	00656372 	rsbeq	r6, r5, r2, ror r3
    1ae4:	5f4c4148 	svcpl	0x004c4148
    1ae8:	5f434352 	svcpl	0x00434352
    1aec:	43746547 	cmnmi	r4, #297795584	; 0x11c00000
    1af0:	6b636f6c 	blvs	18dd8a8 <_Min_Heap_Size+0x18dd0a8>
    1af4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1af8:	48006769 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, sp, lr}
    1afc:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1b00:	475f4343 	ldrbmi	r4, [pc, -r3, asr #6]
    1b04:	43487465 	movtmi	r7, #33893	; 0x8465
    1b08:	72464b4c 	subvc	r4, r6, #76, 22	; 0x13000
    1b0c:	2e007165 	adfcssz	f7, f0, f5
    1b10:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    1b14:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1b18:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    1b1c:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    1b20:	5f787834 	svcpl	0x00787834
    1b24:	5f4c4148 	svcpl	0x004c4148
    1b28:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1b2c:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    1b30:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    1b34:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1b38:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1b3c:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    1b40:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
    1b44:	5200632e 	andpl	r6, r0, #-1207959552	; 0xb8000000
    1b48:	4d5f4343 	ldclmi	3, cr4, [pc, #-268]	; 1a44 <_Min_Heap_Size+0x1244>
    1b4c:	00784f43 	rsbseq	r4, r8, r3, asr #30
    1b50:	614c4670 	hvcvs	50272	; 0xc460
    1b54:	636e6574 	cmnvs	lr, #116, 10	; 0x1d000000
    1b58:	41480079 	hvcmi	32777	; 0x8009
    1b5c:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1b60:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1b64:	63734f74 	cmnvs	r3, #116, 30	; 0x1d0
    1b68:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1b6c:	48006769 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, sp, lr}
    1b70:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1b74:	4e5f4343 	cdpmi	3, 5, cr4, cr15, cr3, {2}
    1b78:	495f494d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, fp, lr}^	; <UNPREDICTABLE>
    1b7c:	61485152 	cmpvs	r8, r2, asr r1
    1b80:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1b84:	50470072 	subpl	r0, r7, r2, ror r0
    1b88:	505f4f49 	subspl	r4, pc, r9, asr #30
    1b8c:	48006e69 	stmdami	r0, {r0, r3, r5, r6, r9, sl, fp, sp, lr}
    1b90:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    1b94:	5f4f4950 	svcpl	0x004f4950
    1b98:	6b636f4c 	blvs	18dd8d0 <_Min_Heap_Size+0x18dd0d0>
    1b9c:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1ba0:	6f706f69 	svcvs	0x00706f69
    1ba4:	69746973 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
    1ba8:	4d006e6f 	stcmi	14, cr6, [r0, #-444]	; 0xfffffe44
    1bac:	4d524d45 	ldclmi	13, cr4, [r2, #-276]	; 0xfffffeec
    1bb0:	58450050 	stmdapl	r5, {r4, r6}^
    1bb4:	52434954 	subpl	r4, r3, #84, 18	; 0x150000
    1bb8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1bbc:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    1bc0:	6f545f4f 	svcvs	0x00545f4f
    1bc4:	656c6767 	strbvs	r6, [ip, #-1895]!	; 0xfffff899
    1bc8:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1bcc:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1bd0:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
    1bd4:	49505f4f 	ldmdbmi	r0, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1bd8:	45535f4e 	ldrbmi	r5, [r3, #-3918]	; 0xfffff0b2
    1bdc:	58450054 	stmdapl	r5, {r2, r4, r6}^
    1be0:	545f4954 	ldrbpl	r4, [pc], #-2388	; 1be8 <_Min_Heap_Size+0x13e8>
    1be4:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    1be8:	48006665 	stmdami	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
    1bec:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    1bf0:	5f4f4950 	svcpl	0x004f4950
    1bf4:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    1bf8:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1bfc:	5f4c4148 	svcpl	0x004c4148
    1c00:	4f495047 	svcmi	0x00495047
    1c04:	6972575f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, lr}^
    1c08:	69506574 	ldmdbvs	r0, {r2, r4, r5, r6, r8, sl, sp, lr}^
    1c0c:	4d43006e 	stclmi	0, cr0, [r3, #-440]	; 0xfffffe48
    1c10:	00524350 	subseq	r4, r2, r0, asr r3
    1c14:	73746962 	cmnvc	r4, #1605632	; 0x188000
    1c18:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    1c1c:	50470073 	subpl	r0, r7, r3, ror r0
    1c20:	505f4f49 	subspl	r4, pc, r9, asr #30
    1c24:	525f4e49 	subspl	r4, pc, #1168	; 0x490
    1c28:	54455345 	strbpl	r5, [r5], #-837	; 0xfffffcbb
    1c2c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1c30:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    1c34:	58455f4f 	stmdapl	r5, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1c38:	435f4954 	cmpmi	pc, #84, 18	; 0x150000
    1c3c:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1c40:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1c44:	52535446 	subspl	r5, r3, #1174405120	; 0x46000000
    1c48:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1c4c:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    1c50:	58455f4f 	stmdapl	r5, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1c54:	495f4954 	ldmdbmi	pc, {r2, r4, r6, r8, fp, lr}^	; <UNPREDICTABLE>
    1c58:	61485152 	cmpvs	r8, r2, asr r1
    1c5c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1c60:	6f690072 	svcvs	0x00690072
    1c64:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
    1c68:	00746e65 	rsbseq	r6, r4, r5, ror #28
    1c6c:	43535953 	cmpmi	r3, #1359872	; 0x14c000
    1c70:	545f4746 	ldrbpl	r4, [pc], #-1862	; 1c78 <_Min_Heap_Size+0x1478>
    1c74:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    1c78:	52006665 	andpl	r6, r0, #105906176	; 0x6500000
    1c7c:	00525354 	subseq	r5, r2, r4, asr r3
    1c80:	4f495047 	svcmi	0x00495047
    1c84:	2e2e0078 	mcrcs	0, 1, r0, cr14, cr8, {3}
    1c88:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    1c8c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1c90:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    1c94:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    1c98:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1c9c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1ca4 <_Min_Heap_Size+0x14a4>
    1ca0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1ca4:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    1ca8:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    1cac:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    1cb0:	5f787834 	svcpl	0x00787834
    1cb4:	5f6c6168 	svcpl	0x006c6168
    1cb8:	6f697067 	svcvs	0x00697067
    1cbc:	5200632e 	andpl	r6, r0, #-1207959552	; 0xb8000000
    1cc0:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
    1cc4:	00444556 	subeq	r4, r4, r6, asr r5
    1cc8:	4f495047 	svcmi	0x00495047
    1ccc:	6e69505f 	mcrvs	0, 3, r5, cr9, cr15, {2}
    1cd0:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1cd4:	57530065 	ldrbpl	r0, [r3, -r5, rrx]
    1cd8:	00524549 	subseq	r4, r2, r9, asr #10
    1cdc:	5f4c4148 	svcpl	0x004c4148
    1ce0:	5f414d44 	svcpl	0x00414d44
    1ce4:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1ce8:	4f42415f 	svcmi	0x0042415f
    1cec:	435f5452 	cmpmi	pc, #1375731712	; 0x52000000
    1cf0:	44495f42 	strbmi	r5, [r9], #-3906	; 0xfffff0be
    1cf4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1cf8:	414d445f 	cmpmi	sp, pc, asr r4
    1cfc:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    1d00:	41480074 	hvcmi	32772	; 0x8004
    1d04:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1d08:	65525f41 	ldrbvs	r5, [r2, #-3905]	; 0xfffff0bf
    1d0c:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    1d10:	61437265 	cmpvs	r3, r5, ror #4
    1d14:	61626c6c 	cmnvs	r2, ip, ror #24
    1d18:	52006b63 	andpl	r6, r0, #101376	; 0x18c00
    1d1c:	72657365 	rsbvc	r7, r5, #-1811939327	; 0x94000001
    1d20:	30646576 	rsbcc	r6, r4, r6, ror r5
    1d24:	616c6600 	cmnvs	ip, r0, lsl #12
    1d28:	74694267 	strbtvc	r4, [r9], #-615	; 0xfffffd99
    1d2c:	66696873 			; <UNDEFINED> instruction: 0x66696873
    1d30:	66664f74 	uqsub16vs	r4, r6, r4
    1d34:	00746573 	rsbseq	r6, r4, r3, ror r5
    1d38:	69706d74 	ldmdbvs	r0!, {r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    1d3c:	48007273 	stmdami	r0, {r0, r1, r4, r5, r6, r9, ip, sp, lr}
    1d40:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1d48 <_Min_Heap_Size+0x1548>
    1d44:	585f414d 	ldmdapl	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1d48:	5f524546 	svcpl	0x00524546
    1d4c:	544c5043 	strbpl	r5, [ip], #-67	; 0xffffffbd
    1d50:	5f42435f 	svcpl	0x0042435f
    1d54:	48004449 	stmdami	r0, {r0, r3, r6, sl, lr}
    1d58:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1d60 <_Min_Heap_Size+0x1560>
    1d5c:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
    1d60:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1d64:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1d68:	414d445f 	cmpmi	sp, pc, asr r4
    1d6c:	4965445f 	stmdbmi	r5!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1d70:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1d74:	5f4c4148 	svcpl	0x004c4148
    1d78:	5f414d44 	svcpl	0x00414d44
    1d7c:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1d80:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
    1d84:	435f524f 	cmpmi	pc, #-268435452	; 0xf0000004
    1d88:	44495f42 	strbmi	r5, [r9], #-3906	; 0xfffff0be
    1d8c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1d90:	414d445f 	cmpmi	sp, pc, asr r4
    1d94:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    1d98:	52545f46 	subspl	r5, r4, #280	; 0x118
    1d9c:	46534e41 	ldrbmi	r4, [r3], -r1, asr #28
    1da0:	44005245 	strmi	r5, [r0], #-581	; 0xfffffdbb
    1da4:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
    1da8:	6f437465 	svcvs	0x00437465
    1dac:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1db0:	2f2e2e00 	svccs	0x002e2e00
    1db4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1db8:	2f737265 	svccs	0x00737265
    1dbc:	334d5453 	movtcc	r5, #54355	; 0xd453
    1dc0:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    1dc4:	41485f78 	hvcmi	34296	; 0x85f8
    1dc8:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    1dcc:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1dd0:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1dd4:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    1dd8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1ddc:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1de0:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 1de8 <_Min_Heap_Size+0x15e8>
    1de4:	632e616d 			; <UNDEFINED> instruction: 0x632e616d
    1de8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1dec:	414d445f 	cmpmi	sp, pc, asr r4
    1df0:	76654c5f 			; <UNDEFINED> instruction: 0x76654c5f
    1df4:	6f436c65 	svcvs	0x00436c65
    1df8:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1dfc:	79546574 	ldmdbvc	r4, {r2, r4, r5, r6, r8, sl, sp, lr}^
    1e00:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    1e04:	41480066 	cmpmi	r8, r6, rrx
    1e08:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1e0c:	55465f41 	strbpl	r5, [r6, #-3905]	; 0xfffff0bf
    1e10:	545f4c4c 	ldrbpl	r4, [pc], #-3148	; 1e18 <_Min_Heap_Size+0x1618>
    1e14:	534e4152 	movtpl	r4, #57682	; 0xe152
    1e18:	00524546 	subseq	r4, r2, r6, asr #10
    1e1c:	65727473 	ldrbvs	r7, [r2, #-1139]!	; 0xfffffb8d
    1e20:	6e5f6d61 	cdpvs	13, 5, cr6, cr15, cr1, {3}
    1e24:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    1e28:	41480072 	hvcmi	32770	; 0x8002
    1e2c:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1e30:	61435f41 	cmpvs	r3, r1, asr #30
    1e34:	61626c6c 	cmnvs	r2, ip, ror #24
    1e38:	44496b63 	strbmi	r6, [r9], #-2915	; 0xfffff49d
    1e3c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1e40:	00666544 	rsbeq	r6, r6, r4, asr #10
    1e44:	5f4c4148 	svcpl	0x004c4148
    1e48:	5f414d44 	svcpl	0x00414d44
    1e4c:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1e50:	43314d5f 	teqmi	r1, #6080	; 0x17c0
    1e54:	5f544c50 	svcpl	0x00544c50
    1e58:	495f4243 	ldmdbmi	pc, {r0, r1, r6, r9, lr}^	; <UNPREDICTABLE>
    1e5c:	6f430044 	svcvs	0x00430044
    1e60:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    1e64:	654c6574 	strbvs	r6, [ip, #-1396]	; 0xfffffa8c
    1e68:	006c6576 	rsbeq	r6, ip, r6, ror r5
    1e6c:	52434649 	subpl	r4, r3, #76546048	; 0x4900000
    1e70:	74734400 	ldrbtvc	r4, [r3], #-1024	; 0xfffffc00
    1e74:	72646441 	rsbvc	r6, r4, #1090519040	; 0x41000000
    1e78:	00737365 	rsbseq	r7, r3, r5, ror #6
    1e7c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1e80:	6b636162 	blvs	18da410 <_Min_Heap_Size+0x18d9c10>
    1e84:	44004449 	strmi	r4, [r0], #-1097	; 0xfffffbb7
    1e88:	435f414d 	cmpmi	pc, #1073741843	; 0x40000013
    1e8c:	6b636568 	blvs	18db434 <_Min_Heap_Size+0x18dac34>
    1e90:	6f666946 	svcvs	0x00666946
    1e94:	61726150 	cmnvs	r2, r0, asr r1
    1e98:	4148006d 	cmpmi	r8, sp, rrx
    1e9c:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1ea0:	6e555f41 	cdpvs	15, 5, cr5, cr5, cr1, {2}
    1ea4:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1ea8:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    1eac:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1eb0:	6b636162 	blvs	18da440 <_Min_Heap_Size+0x18d9c40>
    1eb4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1eb8:	414d445f 	cmpmi	sp, pc, asr r4
    1ebc:	5152495f 	cmppl	r2, pc, asr r9
    1ec0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1ec4:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1ec8:	5f4c4148 	svcpl	0x004c4148
    1ecc:	5f414d44 	svcpl	0x00414d44
    1ed0:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1ed4:	4c4c415f 	stfmie	f4, [ip], {95}	; 0x5f
    1ed8:	5f42435f 	svcpl	0x0042435f
    1edc:	44004449 	strmi	r4, [r0], #-1097	; 0xfffffbb7
    1ee0:	425f414d 	subsmi	r4, pc, #1073741843	; 0x40000013
    1ee4:	5f657361 	svcpl	0x00657361
    1ee8:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1eec:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    1ef0:	4d440073 	stclmi	0, cr0, [r4, #-460]	; 0xfffffe34
    1ef4:	61435f41 	cmpvs	r3, r1, asr #30
    1ef8:	6142636c 	cmpvs	r2, ip, ror #6
    1efc:	6e416573 	mcrvs	5, 2, r6, cr1, cr3, {3}
    1f00:	74694264 	strbtvc	r4, [r9], #-612	; 0xfffffd9c
    1f04:	66696873 			; <UNDEFINED> instruction: 0x66696873
    1f08:	41480074 	hvcmi	32772	; 0x8004
    1f0c:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1f10:	46585f41 	ldrbmi	r5, [r8], -r1, asr #30
    1f14:	485f5245 	ldmdami	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
    1f18:	43464c41 	movtmi	r4, #27713	; 0x6c41
    1f1c:	5f544c50 	svcpl	0x00544c50
    1f20:	495f4243 	ldmdbmi	pc, {r0, r1, r6, r9, lr}^	; <UNPREDICTABLE>
    1f24:	41480044 	cmpmi	r8, r4, asr #32
    1f28:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1f2c:	46585f41 	ldrbmi	r5, [r8], -r1, asr #30
    1f30:	4d5f5245 	lfmmi	f5, 2, [pc, #-276]	; 1e24 <_Min_Heap_Size+0x1624>
    1f34:	4c414831 	mcrrmi	8, 3, r4, r1, cr1
    1f38:	4c504346 	mrrcmi	3, 4, r4, r0, cr6
    1f3c:	42435f54 	submi	r5, r3, #84, 30	; 0x150
    1f40:	0044495f 	subeq	r4, r4, pc, asr r9
    1f44:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1f48:	72530074 	subsvc	r0, r3, #116	; 0x74
    1f4c:	64644163 	strbtvs	r4, [r4], #-355	; 0xfffffe9d
    1f50:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    1f54:	74614400 	strbtvc	r4, [r1], #-1024	; 0xfffffc00
    1f58:	6e654c61 	cdpvs	12, 6, cr4, cr5, cr1, {3}
    1f5c:	00687467 	rsbeq	r7, r8, r7, ror #8
    1f60:	5f4c4148 	svcpl	0x004c4148
    1f64:	5f414d44 	svcpl	0x00414d44
    1f68:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
    1f6c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1f70:	61437000 	mrsvs	r7, (UNDEF: 67)
    1f74:	61626c6c 	cmnvs	r2, ip, ror #24
    1f78:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
    1f7c:	6f656d69 	svcvs	0x00656d69
    1f80:	72007475 	andvc	r7, r0, #1962934272	; 0x75000000
    1f84:	00736765 	rsbseq	r6, r3, r5, ror #14
    1f88:	6b73616d 	blvs	1cda544 <_Min_Heap_Size+0x1cd9d44>
    1f8c:	6c70635f 	ldclvs	3, cr6, [r0], #-380	; 0xfffffe84
    1f90:	76656c74 			; <UNDEFINED> instruction: 0x76656c74
    1f94:	48006c65 	stmdami	r0, {r0, r2, r5, r6, sl, fp, sp, lr}
    1f98:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1fa0 <_Min_Heap_Size+0x17a0>
    1f9c:	505f414d 	subspl	r4, pc, sp, asr #2
    1fa0:	466c6c6f 	strbtmi	r6, [ip], -pc, ror #24
    1fa4:	7254726f 	subsvc	r7, r4, #-268435450	; 0xf0000006
    1fa8:	66736e61 	ldrbtvs	r6, [r3], -r1, ror #28
    1fac:	49007265 	stmdbmi	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    1fb0:	00525043 	subseq	r5, r2, r3, asr #32
    1fb4:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1fb8:	46747845 	ldrbtmi	r7, [r4], -r5, asr #16
    1fbc:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    1fc0:	2f2e2e00 	svccs	0x002e2e00
    1fc4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1fc8:	2f737265 	svccs	0x00737265
    1fcc:	334d5453 	movtcc	r5, #54355	; 0xd453
    1fd0:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    1fd4:	41485f78 	hvcmi	34296	; 0x85f8
    1fd8:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    1fdc:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1fe0:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1fe4:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    1fe8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1fec:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1ff0:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    1ff4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    1ff8:	00632e78 	rsbeq	r2, r3, r8, ror lr
    1ffc:	5f4c4148 	svcpl	0x004c4148
    2000:	54535953 	ldrbpl	r5, [r3], #-2387	; 0xfffff6ad
    2004:	5f4b4349 	svcpl	0x004b4349
    2008:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    200c:	48006769 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, sp, lr}
    2010:	435f4c41 	cmpmi	pc, #16640	; 0x4100
    2014:	4554524f 	ldrbmi	r5, [r4, #-591]	; 0xfffffdb1
    2018:	6c435f58 	mcrrvs	15, 5, r5, r3, cr8
    201c:	45726165 	ldrbmi	r6, [r2, #-357]!	; 0xfffffe9b
    2020:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    2024:	53415200 	movtpl	r5, #4608	; 0x1200
    2028:	33415f52 	movtcc	r5, #8018	; 0x1f52
    202c:	50534900 	subspl	r4, r3, r0, lsl #18
    2030:	73490052 	movtvc	r0, #36946	; 0x9052
    2034:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    2038:	62617265 	rsbvs	r7, r1, #1342177286	; 0x50000006
    203c:	5000656c 	andpl	r6, r0, ip, ror #10
    2040:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2044:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    2048:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    204c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2050:	5359535f 	cmppl	r9, #2080374785	; 0x7c000001
    2054:	4b434954 	blmi	10d45ac <_Min_Heap_Size+0x10d3dac>
    2058:	5152495f 	cmppl	r2, pc, asr r9
    205c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    2060:	0072656c 	rsbseq	r6, r2, ip, ror #10
    2064:	5f4c4148 	svcpl	0x004c4148
    2068:	4349564e 	movtmi	r5, #38478	; 0x964e
    206c:	656c435f 	strbvs	r4, [ip, #-863]!	; 0xfffffca1
    2070:	65507261 	ldrbvs	r7, [r0, #-609]	; 0xfffffd9f
    2074:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    2078:	51524967 	cmppl	r2, r7, ror #18
    207c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2080:	55504d5f 	ldrbpl	r4, [r0, #-3423]	; 0xfffff2a1
    2084:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2088:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    208c:	53415200 	movtpl	r5, #4608	; 0x1200
    2090:	31415f52 	cmpcc	r1, r2, asr pc
    2094:	55504d00 	ldrbpl	r4, [r0, #-3328]	; 0xfffff300
    2098:	6e6f435f 	mcrvs	3, 3, r4, cr15, cr15, {2}
    209c:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 1ed4 <_Min_Heap_Size+0x16d4>
    20a0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    20a4:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    20a8:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    20ac:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
    20b0:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    20b4:	5f5f0079 	svcpl	0x005f0079
    20b8:	4349564e 	movtmi	r5, #38478	; 0x964e
    20bc:	656c435f 	strbvs	r4, [ip, #-863]!	; 0xfffffca1
    20c0:	65507261 	ldrbvs	r7, [r0, #-609]	; 0xfffffd9f
    20c4:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    20c8:	51524967 	cmppl	r2, r7, ror #18
    20cc:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    20d0:	5f434956 	svcpl	0x00434956
    20d4:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
    20d8:	65526d65 	ldrbvs	r6, [r2, #-3429]	; 0xfffff29b
    20dc:	00746573 	rsbseq	r6, r4, r3, ror r5
    20e0:	52414252 	subpl	r4, r1, #536870917	; 0x20000005
    20e4:	0031415f 	eorseq	r4, r1, pc, asr r1
    20e8:	52414252 	subpl	r4, r1, #536870917	; 0x20000005
    20ec:	0032415f 	eorseq	r4, r2, pc, asr r1
    20f0:	52414252 	subpl	r4, r1, #536870917	; 0x20000005
    20f4:	0033415f 	eorseq	r4, r3, pc, asr r1
    20f8:	5f55504d 	svcpl	0x0055504d
    20fc:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    2100:	65725000 	ldrbvs	r5, [r2, #-0]!
    2104:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
    2108:	6f697250 	svcvs	0x00697250
    210c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2110:	73746942 	cmnvc	r4, #1081344	; 0x108000
    2114:	53415200 	movtpl	r5, #4608	; 0x1200
    2118:	32415f52 	subcc	r5, r1, #328	; 0x148
    211c:	55504d00 	ldrbpl	r4, [r0, #-3328]	; 0xfffff300
    2120:	6765525f 			; <UNDEFINED> instruction: 0x6765525f
    2124:	5f6e6f69 	svcpl	0x006e6f69
    2128:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    212c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    2130:	00666544 	rsbeq	r6, r6, r4, asr #10
    2134:	61437349 	cmpvs	r3, r9, asr #6
    2138:	61656863 	cmnvs	r5, r3, ror #16
    213c:	00656c62 	rsbeq	r6, r5, r2, ror #24
    2140:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
    2144:	5f6b6369 	svcpl	0x006b6369
    2148:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    214c:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    2150:	5f434956 	svcpl	0x00434956
    2154:	61736944 	cmnvs	r3, r4, asr #18
    2158:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    215c:	48005152 	stmdami	r0, {r1, r4, r6, r8, ip, lr}
    2160:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    2164:	5f434956 	svcpl	0x00434956
    2168:	50746547 	rsbspl	r6, r4, r7, asr #10
    216c:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    2170:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
    2174:	41480051 	qdaddmi	r0, r1, r8
    2178:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    217c:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    2180:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    2184:	7365526d 	cmnvc	r5, #-805306362	; 0xd0000006
    2188:	72007465 	andvc	r7, r0, #1694498816	; 0x65000000
    218c:	765f6765 	ldrbvc	r6, [pc], -r5, ror #14
    2190:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    2194:	4c414300 	mcrrmi	3, 0, r4, r1, cr0
    2198:	70004249 	andvc	r4, r0, r9, asr #4
    219c:	65657250 	strbvs	r7, [r5, #-592]!	; 0xfffffdb0
    21a0:	5074706d 	rsbspl	r7, r4, sp, rrx
    21a4:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    21a8:	00797469 	rsbseq	r7, r9, r9, ror #8
    21ac:	65636341 	strbvs	r6, [r3, #-833]!	; 0xfffffcbf
    21b0:	65507373 	ldrbvs	r7, [r0, #-883]	; 0xfffffc8d
    21b4:	73696d72 	cmnvc	r9, #7296	; 0x1c80
    21b8:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
    21bc:	69727000 	ldmdbvs	r2!, {ip, sp, lr}^
    21c0:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    21c4:	5f5f0079 	svcpl	0x005f0079
    21c8:	33746e69 	cmncc	r4, #1680	; 0x690
    21cc:	00745f32 	rsbseq	r5, r4, r2, lsr pc
    21d0:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    21d4:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    21d8:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    21dc:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    21e0:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
    21e4:	6970756f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    21e8:	4800676e 	stmdami	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    21ec:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    21f0:	5f434956 	svcpl	0x00434956
    21f4:	41746547 	cmnmi	r4, r7, asr #10
    21f8:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    21fc:	5f5f0065 	svcpl	0x005f0065
    2200:	00425344 	subeq	r5, r2, r4, asr #6
    2204:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    2208:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    220c:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    2210:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2214:	70007974 	andvc	r7, r0, r4, ror r9
    2218:	50627553 	rsbpl	r7, r2, r3, asr r5
    221c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2220:	00797469 	rsbseq	r7, r9, r9, ror #8
    2224:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2228:	70007265 	andvc	r7, r0, r5, ror #4
    222c:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2230:	67797469 	ldrbvs	r7, [r9, -r9, ror #8]!
    2234:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    2238:	414f4c00 	cmpmi	pc, r0, lsl #24
    223c:	69740044 	ldmdbvs	r4!, {r2, r6}^
    2240:	00736b63 	rsbseq	r6, r3, r3, ror #22
    2244:	52424149 	subpl	r4, r2, #1073741842	; 0x40000012
    2248:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    224c:	5f434956 	svcpl	0x00434956
    2250:	50746547 	rsbspl	r6, r4, r7, asr #10
    2254:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    2258:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
    225c:	5f5f0051 	svcpl	0x005f0051
    2260:	00425349 	subeq	r5, r2, r9, asr #6
    2264:	4349564e 	movtmi	r5, #38478	; 0x964e
    2268:	636e455f 	cmnvs	lr, #398458880	; 0x17c00000
    226c:	5065646f 	rsbpl	r6, r5, pc, ror #8
    2270:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2274:	00797469 	rsbseq	r7, r9, r9, ror #8
    2278:	52454349 	subpl	r4, r5, #603979777	; 0x24000001
    227c:	62755300 	rsbsvs	r5, r5, #0, 6
    2280:	6f697250 	svcvs	0x00697250
    2284:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2288:	73746942 	cmnvc	r4, #1081344	; 0x108000
    228c:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    2290:	65445f43 	strbvs	r5, [r4, #-3907]	; 0xfffff0bd
    2294:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
    2298:	6f697250 	svcvs	0x00697250
    229c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    22a0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    22a4:	5359535f 	cmppl	r9, #2080374785	; 0x7c000001
    22a8:	4b434954 	blmi	10d4800 <_Min_Heap_Size+0x10d4000>
    22ac:	6c61435f 	stclvs	3, cr4, [r1], #-380	; 0xfffffe84
    22b0:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    22b4:	6944006b 	stmdbvs	r4, {r0, r1, r3, r5, r6}^
    22b8:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    22bc:	65784565 	ldrbvs	r4, [r8, #-1381]!	; 0xfffffa9b
    22c0:	5f5f0063 	svcpl	0x005f0063
    22c4:	00424d44 	subeq	r4, r2, r4, asr #26
    22c8:	52627553 	rsbpl	r7, r2, #348127232	; 0x14c00000
    22cc:	6f696765 	svcvs	0x00696765
    22d0:	7369446e 	cmnvc	r9, #1845493760	; 0x6e000000
    22d4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    22d8:	45534900 	ldrbmi	r4, [r3, #-2304]	; 0xfffff700
    22dc:	564e0052 			; <UNDEFINED> instruction: 0x564e0052
    22e0:	545f4349 	ldrbpl	r4, [pc], #-841	; 22e8 <_Min_Heap_Size+0x1ae8>
    22e4:	00657079 	rsbeq	r7, r5, r9, ror r0
    22e8:	5f4c4148 	svcpl	0x004c4148
    22ec:	4349564e 	movtmi	r5, #38478	; 0x964e
    22f0:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    22f4:	6f697250 	svcvs	0x00697250
    22f8:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    22fc:	756f7247 	strbvc	r7, [pc, #-583]!	; 20bd <_Min_Heap_Size+0x18bd>
    2300:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
    2304:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    2308:	5f434956 	svcpl	0x00434956
    230c:	50746553 	rsbspl	r6, r4, r3, asr r5
    2310:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    2314:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
    2318:	5f5f0051 	svcpl	0x005f0051
    231c:	4349564e 	movtmi	r5, #38478	; 0x964e
    2320:	616e455f 	cmnvs	lr, pc, asr r5
    2324:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
    2328:	52005152 	andpl	r5, r0, #-2147483628	; 0x80000014
    232c:	00524142 	subseq	r4, r2, r2, asr #2
    2330:	6f697250 	svcvs	0x00697250
    2334:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2338:	756f7247 	strbvc	r7, [pc, #-583]!	; 20f9 <_Min_Heap_Size+0x18f9>
    233c:	706d5470 	rsbvc	r5, sp, r0, ror r4
    2340:	51524900 	cmppl	r2, r0, lsl #18
    2344:	79545f6e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    2348:	54006570 	strpl	r6, [r0], #-1392	; 0xfffffa90
    234c:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
    2350:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    2354:	53415200 	movtpl	r5, #4608	; 0x1200
    2358:	41480052 	qdaddmi	r0, r2, r8
    235c:	59535f4c 	ldmdbpl	r3, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2360:	43495453 	movtmi	r5, #37971	; 0x9453
    2364:	4c435f4b 	mcrrmi	15, 4, r5, r3, cr11
    2368:	756f534b 	strbvc	r5, [pc, #-843]!	; 2025 <_Min_Heap_Size+0x1825>
    236c:	43656372 	cmnmi	r5, #-939524095	; 0xc8000001
    2370:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2374:	59540067 	ldmdbpl	r4, {r0, r1, r2, r5, r6}^
    2378:	48004550 	stmdami	r0, {r4, r6, r8, sl, lr}
    237c:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 2280 <_Min_Heap_Size+0x1a80>
    2380:	435f5550 	cmpmi	pc, #80, 10	; 0x14000000
    2384:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    2388:	67655267 	strbvs	r5, [r5, -r7, ror #4]!
    238c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    2390:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
    2394:	5f6b6369 	svcpl	0x006b6369
    2398:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    239c:	48006769 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, sp, lr}
    23a0:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    23a4:	5f434956 	svcpl	0x00434956
    23a8:	50746547 	rsbspl	r6, r4, r7, asr #10
    23ac:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    23b0:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    23b4:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    23b8:	00676e69 	rsbeq	r6, r7, r9, ror #28
    23bc:	5f4c4148 	svcpl	0x004c4148
    23c0:	5f55504d 	svcpl	0x0055504d
    23c4:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    23c8:	4300656c 	movwmi	r6, #1388	; 0x56c
    23cc:	004c5254 	subeq	r5, ip, r4, asr r2
    23d0:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    23d4:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    23d8:	63417465 	movtvs	r7, #5221	; 0x1465
    23dc:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
    23e0:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    23e4:	5f434956 	svcpl	0x00434956
    23e8:	50746547 	rsbspl	r6, r4, r7, asr #10
    23ec:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    23f0:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    23f4:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    23f8:	00676e69 	rsbeq	r6, r7, r9, ror #28
    23fc:	52495453 	subpl	r5, r9, #1392508928	; 0x53000000
    2400:	53734900 	cmnpl	r3, #0, 18
    2404:	65726168 	ldrbvs	r6, [r2, #-360]!	; 0xfffffe98
    2408:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    240c:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    2410:	5f434956 	svcpl	0x00434956
    2414:	50746553 	rsbspl	r6, r4, r3, asr r5
    2418:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    241c:	00797469 	rsbseq	r7, r9, r9, ror #8
    2420:	5f4c4148 	svcpl	0x004c4148
    2424:	4349564e 	movtmi	r5, #38478	; 0x964e
    2428:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    242c:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    2430:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    2434:	4d005152 	stfmis	f5, [r0, #-328]	; 0xfffffeb8
    2438:	545f5550 	ldrbpl	r5, [pc], #-1360	; 2440 <_Min_Heap_Size+0x1c40>
    243c:	00657079 	rsbeq	r7, r5, r9, ror r0
    2440:	5f4c4148 	svcpl	0x004c4148
    2444:	48746547 	ldmdami	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    2448:	65566c61 	ldrbvs	r6, [r6, #-3169]	; 0xfffff39f
    244c:	6f697372 	svcvs	0x00697372
    2450:	4148006e 	cmpmi	r8, lr, rrx
    2454:	69545f4c 	ldmdbvs	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2458:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    245c:	79547165 	ldmdbvc	r4, {r0, r2, r5, r6, r8, ip, sp, lr}^
    2460:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    2464:	69540066 	ldmdbvs	r4, {r1, r2, r5, r6}^
    2468:	72506b63 	subsvc	r6, r0, #101376	; 0x18c00
    246c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2470:	48007974 	stmdami	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
    2474:	535f4c41 	cmppl	pc, #16640	; 0x4100
    2478:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    247c:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    2480:	49007165 	stmdbmi	r0, {r0, r2, r5, r6, r8, ip, sp, lr}
    2484:	444f4344 	strbmi	r4, [pc], #-836	; 248c <_Min_Heap_Size+0x1c8c>
    2488:	41480045 	cmpmi	r8, r5, asr #32
    248c:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    2490:	44495574 	strbmi	r5, [r9], #-1396	; 0xfffffa8c
    2494:	48003277 	stmdami	r0, {r0, r1, r2, r4, r5, r6, r9, ip, sp}
    2498:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 24a0 <_Min_Heap_Size+0x1ca0>
    249c:	434d4742 	movtmi	r4, #55106	; 0xd742
    24a0:	6e455f55 	mcrvs	15, 2, r5, cr5, cr5, {2}
    24a4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    24a8:	53474244 	movtpl	r4, #29252	; 0x7244
    24ac:	646e6174 	strbtvs	r6, [lr], #-372	; 0xfffffe8c
    24b0:	6f4d7962 	svcvs	0x004d7962
    24b4:	48006564 	stmdami	r0, {r2, r5, r6, r8, sl, sp, lr}
    24b8:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    24bc:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    24c0:	72506b63 	subsvc	r6, r0, #101376	; 0x18c00
    24c4:	48006f69 	stmdami	r0, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    24c8:	545f4c41 	ldrbpl	r4, [pc], #-3137	; 24d0 <_Min_Heap_Size+0x1cd0>
    24cc:	5f4b4349 	svcpl	0x004b4349
    24d0:	51455246 	cmppl	r5, r6, asr #4
    24d4:	4830315f 	ldmdami	r0!, {r0, r1, r2, r3, r4, r6, r8, ip, sp}
    24d8:	4148005a 	qdaddmi	r0, sl, r8
    24dc:	734d5f4c 	movtvc	r5, #57164	; 0xdf4c
    24e0:	49654470 	stmdbmi	r5!, {r4, r5, r6, sl, lr}^
    24e4:	0074696e 	rsbseq	r6, r4, lr, ror #18
    24e8:	5f4c4148 	svcpl	0x004c4148
    24ec:	4d474244 	sfmmi	f4, 2, [r7, #-272]	; 0xfffffef0
    24f0:	445f5543 	ldrbmi	r5, [pc], #-1347	; 24f8 <_Min_Heap_Size+0x1cf8>
    24f4:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    24f8:	4244656c 	submi	r6, r4, #108, 10	; 0x1b000000
    24fc:	656c5347 	strbvs	r5, [ip, #-839]!	; 0xfffffcb9
    2500:	6f4d7065 	svcvs	0x004d7065
    2504:	48006564 	stmdami	r0, {r2, r5, r6, r8, sl, sp, lr}
    2508:	545f4c41 	ldrbpl	r4, [pc], #-3137	; 2510 <_Min_Heap_Size+0x1d10>
    250c:	5f4b4349 	svcpl	0x004b4349
    2510:	51455246 	cmppl	r5, r6, asr #4
    2514:	3030315f 	eorscc	r3, r0, pc, asr r1
    2518:	48005a48 	stmdami	r0, {r3, r6, r9, fp, ip, lr}
    251c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 2524 <_Min_Heap_Size+0x1d24>
    2520:	434d4742 	movtmi	r4, #55106	; 0xd742
    2524:	69445f55 	stmdbvs	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    2528:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    252c:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    2530:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
    2534:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    2538:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    253c:	4965445f 	stmdbmi	r5!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    2540:	0074696e 	rsbseq	r6, r4, lr, ror #18
    2544:	69547775 	ldmdbvs	r4, {r0, r2, r4, r5, r6, r8, r9, sl, ip, sp, lr}^
    2548:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    254c:	75007165 	strvc	r7, [r0, #-357]	; 0xfffffe9b
    2550:	63695477 	cmnvs	r9, #1996488704	; 0x77000000
    2554:	4148006b 	cmpmi	r8, fp, rrx
    2558:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    255c:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
    2560:	5f514552 	svcpl	0x00514552
    2564:	5a484b31 	bpl	1215230 <_Min_Heap_Size+0x1214a30>
    2568:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    256c:	4742445f 	smlsldmi	r4, r2, pc, r4	; <UNPREDICTABLE>
    2570:	5f55434d 	svcpl	0x0055434d
    2574:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    2578:	4244656c 	submi	r6, r4, #108, 10	; 0x1b000000
    257c:	6f745347 	svcvs	0x00745347
    2580:	646f4d70 	strbtvs	r4, [pc], #-3440	; 2588 <_Min_Heap_Size+0x1d88>
    2584:	50410065 	subpl	r0, r1, r5, rrx
    2588:	5a463242 	bpl	118ee98 <_Min_Heap_Size+0x118e698>
    258c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2590:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    2594:	77444955 	smlsldvc	r4, r4, r5, r9	; <UNPREDICTABLE>
    2598:	41480030 	cmpmi	r8, r0, lsr r0
    259c:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    25a0:	44495574 	strbmi	r5, [r9], #-1396	; 0xfffffa8c
    25a4:	48003177 	stmdami	r0, {r0, r1, r2, r4, r5, r6, r8, ip, sp}
    25a8:	545f4c41 	ldrbpl	r4, [pc], #-3137	; 25b0 <_Min_Heap_Size+0x1db0>
    25ac:	5f4b4349 	svcpl	0x004b4349
    25b0:	51455246 	cmppl	r5, r6, asr #4
    25b4:	4645445f 			; <UNDEFINED> instruction: 0x4645445f
    25b8:	544c5541 	strbpl	r5, [ip], #-1345	; 0xfffffabf
    25bc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    25c0:	7365525f 	cmnvc	r5, #-268435451	; 0xf0000005
    25c4:	54656d75 	strbtpl	r6, [r5], #-3445	; 0xfffff28b
    25c8:	006b6369 	rsbeq	r6, fp, r9, ror #6
    25cc:	31425041 	cmpcc	r2, r1, asr #32
    25d0:	48005a46 	stmdami	r0, {r1, r2, r6, r9, fp, ip, lr}
    25d4:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 25dc <_Min_Heap_Size+0x1ddc>
    25d8:	434d4742 	movtmi	r4, #55106	; 0xd742
    25dc:	69445f55 	stmdbvs	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    25e0:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    25e4:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    25e8:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
    25ec:	4d796264 	lfmmi	f6, 2, [r9, #-400]!	; 0xfffffe70
    25f0:	0065646f 	rsbeq	r6, r5, pc, ror #8
    25f4:	5f4c4148 	svcpl	0x004c4148
    25f8:	70737553 	rsbsvc	r7, r3, r3, asr r5
    25fc:	54646e65 	strbtpl	r6, [r4], #-3685	; 0xfffff19b
    2600:	006b6369 	rsbeq	r6, fp, r9, ror #6
    2604:	5f4c4148 	svcpl	0x004c4148
    2608:	4d474244 	sfmmi	f4, 2, [r7, #-272]	; 0xfffffef0
    260c:	455f5543 	ldrbmi	r5, [pc, #-1347]	; 20d1 <_Min_Heap_Size+0x18d1>
    2610:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    2614:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    2618:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    261c:	646f4d70 	strbtvs	r4, [pc], #-3440	; 2624 <_Min_Heap_Size+0x1e24>
    2620:	42440065 	submi	r0, r4, #101	; 0x65
    2624:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    2628:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    262c:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    2630:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2634:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    2638:	49564552 	ldmdbmi	r6, {r1, r4, r6, r8, sl, lr}^
    263c:	41480044 	cmpmi	r8, r4, asr #32
    2640:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    2644:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    2648:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    264c:	72700071 	rsbsvc	r0, r0, #113	; 0x71
    2650:	69547665 	ldmdbvs	r4, {r0, r2, r5, r6, r9, sl, ip, sp, lr}^
    2654:	72466b63 	subvc	r6, r6, #101376	; 0x18c00
    2658:	48007165 	stmdami	r0, {r0, r2, r5, r6, r8, ip, sp, lr}
    265c:	455f4c41 	ldrbmi	r4, [pc, #-3137]	; 1a23 <_Min_Heap_Size+0x1223>
    2660:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    2664:	6d6f4365 	stclvs	3, cr4, [pc, #-404]!	; 24d8 <_Min_Heap_Size+0x1cd8>
    2668:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
    266c:	6f697461 	svcvs	0x00697461
    2670:	6c65436e 	stclvs	3, cr4, [r5], #-440	; 0xfffffe48
    2674:	2e2e006c 	cdpcs	0, 2, cr0, cr14, cr12, {3}
    2678:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    267c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    2680:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    2684:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    2688:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    268c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 2694 <_Min_Heap_Size+0x1e94>
    2690:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    2694:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    2698:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    269c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    26a0:	5f787834 	svcpl	0x00787834
    26a4:	2e6c6168 	powcsez	f6, f4, #0.0
    26a8:	41480063 	cmpmi	r8, r3, rrx
    26ac:	69445f4c 	stmdbvs	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    26b0:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    26b4:	6d6f4365 	stclvs	3, cr4, [pc, #-404]!	; 2528 <_Min_Heap_Size+0x1d28>
    26b8:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
    26bc:	6f697461 	svcvs	0x00697461
    26c0:	6c65436e 	stclvs	3, cr4, [r5], #-440	; 0xfffffe48
    26c4:	4148006c 	cmpmi	r8, ip, rrx
    26c8:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    26cc:	56454474 			; <UNDEFINED> instruction: 0x56454474
    26d0:	2e004449 	cdpcs	4, 0, cr4, cr0, cr9, {2}
    26d4:	6f432f2e 	svcvs	0x00432f2e
    26d8:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
    26dc:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    26e0:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    26e4:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    26e8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    26ec:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    26f0:	6c700063 	ldclvs	0, cr0, [r0], #-396	; 0xfffffe74
    26f4:	756f736c 	strbvc	r7, [pc, #-876]!	; 2390 <_Min_Heap_Size+0x1b90>
    26f8:	00656372 	rsbeq	r6, r5, r2, ror r3
    26fc:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
    2700:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
    2704:	53007469 	movwpl	r7, #1129	; 0x469
    2708:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    270c:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
    2710:	6f6c4365 	svcvs	0x006c4365
    2714:	70556b63 	subsvc	r6, r5, r3, ror #22
    2718:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
    271c:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    2720:	00747865 	rsbseq	r7, r4, r5, ror #16
    2724:	6f63706f 	svcvs	0x0063706f
    2728:	695f6564 	ldmdbvs	pc, {r2, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    272c:	6c625f73 	stclvs	15, cr5, [r2], #-460	; 0xfffffe34
    2730:	5f726f5f 	svcpl	0x00726f5f
    2734:	00786c62 	rsbseq	r6, r8, r2, ror #24
    2738:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    273c:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
    2740:	5f656d61 	svcpl	0x00656d61
    2744:	64660074 	strbtvs	r0, [r6], #-116	; 0xffffff8c
    2748:	69616d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    274c:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
    2750:	5f6b6361 	svcpl	0x006b6361
    2754:	6c6c7566 	cfstr64vs	mvdx7, [ip], #-408	; 0xfffffe68
    2758:	646e6900 	strbtvs	r6, [lr], #-2304	; 0xfffff700
    275c:	66007865 	strvs	r7, [r0], -r5, ror #16
    2760:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2764:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
    2768:	6d625f70 	stclvs	15, cr5, [r2, #-448]!	; 0xfffffe40
    276c:	6174735f 	cmnvs	r4, pc, asr r3
    2770:	735f6b63 	cmpvc	pc, #101376	; 0x18c00
    2774:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2778:	73735f00 	cmnvc	r3, #0, 30
    277c:	6b636174 	blvs	18dad54 <_Min_Heap_Size+0x18da554>
    2780:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    2784:	645f746c 	ldrbvs	r7, [pc], #-1132	; 278c <_Min_Heap_Size+0x1f8c>
    2788:	5f706d75 	svcpl	0x00706d75
    278c:	735f6d62 	cmpvc	pc, #6272	; 0x1880
    2790:	6b636174 	blvs	18dad68 <_Min_Heap_Size+0x18da568>
    2794:	696f705f 	stmdbvs	pc!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^	; <UNPREDICTABLE>
    2798:	6600746e 	strvs	r7, [r0], -lr, ror #8
    279c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    27a0:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
    27a4:	706f5f70 	rsbvc	r5, pc, r0, ror pc	; <UNPREDICTABLE>
    27a8:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
    27ac:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    27b0:	645f746c 	ldrbvs	r7, [pc], #-1132	; 27b8 <_Min_Heap_Size+0x1fb8>
    27b4:	5f706d75 	svcpl	0x00706d75
    27b8:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
    27bc:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    27c0:	696c006b 	stmdbvs	ip!, {r0, r1, r3, r5, r6}^
    27c4:	72656b6e 	rsbvc	r6, r5, #112640	; 0x1b800
    27c8:	61747300 	cmnvs	r4, r0, lsl #6
    27cc:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
    27d0:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    27d4:	6e616d5f 	mcrvs	13, 3, r6, cr1, cr15, {2}
    27d8:	5f6c6175 	svcpl	0x006c6175
    27dc:	706f0074 	rsbvc	r0, pc, r4, ror r0	; <UNPREDICTABLE>
    27e0:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
    27e4:	706f0031 	rsbvc	r0, pc, r1, lsr r0	; <UNPREDICTABLE>
    27e8:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
    27ec:	74730032 	ldrbtvc	r0, [r3], #-50	; 0xffffffce
    27f0:	5f6b6361 	svcpl	0x006b6361
    27f4:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
    27f8:	616d5f65 	cmnvs	sp, r5, ror #30
    27fc:	6c61756e 	cfstr64vs	mvdx7, [r1], #-440	; 0xfffffe48
    2800:	61747300 	cmnvs	r4, r0, lsl #6
    2804:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
    2808:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    280c:	61747300 	cmnvs	r4, r0, lsl #6
    2810:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
    2814:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2818:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    281c:	5f747065 	svcpl	0x00747065
    2820:	64660074 	strbtvs	r0, [r6], #-116	; 0xffffff8c
    2824:	69616d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
    2828:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
    282c:	5f6b6361 	svcpl	0x006b6361
    2830:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
    2834:	6f425f00 	svcvs	0x00425f00
    2838:	2e006c6f 	cdpcs	12, 0, cr6, cr0, cr15, {3}
    283c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2840:	2f2e2e2f 	svccs	0x002e2e2f
    2844:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    2848:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    284c:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    2850:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    2854:	2f706d75 	svccs	0x00706d75
    2858:	2f637273 	svccs	0x00637273
    285c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    2860:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    2864:	632e706d 			; <UNDEFINED> instruction: 0x632e706d
    2868:	66756200 	ldrbtvs	r6, [r5], -r0, lsl #4
    286c:	00726566 	rsbseq	r6, r2, r6, ror #10
    2870:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    2874:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
    2878:	685f706d 	ldmdavs	pc, {r0, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
    287c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    2880:	66007265 	strvs	r7, [r0], -r5, ror #4
    2884:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2888:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
    288c:	78655f70 	stmdavc	r5!, {r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2890:	65725f63 	ldrbvs	r5, [r2, #-3939]!	; 0xfffff09d
    2894:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
    2898:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
    289c:	4d5f7465 	cfldrdmi	mvd7, [pc, #-404]	; 2710 <_Min_Heap_Size+0x1f10>
    28a0:	73005053 	movwvc	r5, #83	; 0x53
    28a4:	6b636174 	blvs	18dae7c <_Min_Heap_Size+0x18da67c>
    28a8:	6172665f 	cmnvs	r2, pc, asr r6
    28ac:	655f656d 	ldrbvs	r6, [pc, #-1389]	; 2347 <_Min_Heap_Size+0x1b47>
    28b0:	70656378 	rsbvc	r6, r5, r8, ror r3
    28b4:	655f0074 	ldrbvs	r0, [pc, #-116]	; 2848 <_Min_Heap_Size+0x2048>
    28b8:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
    28bc:	2f2e2e00 	svccs	0x002e2e00
    28c0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    28c4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    28c8:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    28cc:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    28d0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    28d4:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    28d8:	70632f70 	rsbvc	r2, r3, r0, ror pc
    28dc:	6f632f75 	svcvs	0x00632f75
    28e0:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    28e4:	2f346d2d 	svccs	0x00346d2d
    28e8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    28ec:	61682d74 	smcvs	33492	; 0x82d4
    28f0:	00632e6c 	rsbeq	r2, r3, ip, ror #28
    28f4:	74732f2e 	ldrbtvc	r2, [r3], #-3886	; 0xfffff0d2
    28f8:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    28fc:	74732f70 	ldrbtvc	r2, [r3], #-3952	; 0xfffff090
    2900:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    2904:	74735f70 	ldrbtvc	r5, [r3], #-3952	; 0xfffff090
    2908:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    290c:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    2910:	00732e78 	rsbseq	r2, r3, r8, ror lr
    2914:	20554e47 	subscs	r4, r5, r7, asr #28
    2918:	32205341 	eorcc	r5, r0, #67108865	; 0x4000001
    291c:	2e36332e 	cdpcs	3, 3, cr3, cr6, cr14, {1}
    2920:	2e2e0031 	mcrcs	0, 1, r0, cr14, cr1, {1}
    2924:	2f2e2e2f 	svccs	0x002e2e2f
    2928:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2878 <_Min_Heap_Size+0x2078>
    292c:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    2930:	2f736c69 	svccs	0x00736c69
    2934:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    2938:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    293c:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
    2940:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
    2944:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    2948:	346d2d78 	strbtcc	r2, [sp], #-3448	; 0xfffff288
    294c:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    2950:	672d746c 	strvs	r7, [sp, -ip, ror #8]!
    2954:	732e6363 			; <UNDEFINED> instruction: 0x732e6363
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_Min_Heap_Size+0x10d0524>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
  errno = ENOMEM;
   8:	72412055 	subvc	r2, r1, #85	; 0x55
}
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
    __HAL_RCC_USART1_CLK_DISABLE();
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
  1c:	6e696168 	powvsez	f6, f1, #0.0
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
}
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    if (status != HAL_OK)
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
      uwTickFreq = prevTickFreq;
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  errno = ENOMEM;
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	00000018 	andeq	r0, r0, r8, lsl r0
    __HAL_RCC_USART1_CLK_DISABLE();
      14:	00000000 	andeq	r0, r0, r0
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
      1c:	00000020 	andeq	r0, r0, r0, lsr #32
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
      24:	100e4101 	andne	r4, lr, r1, lsl #2
}
      28:	00040e4a 	andeq	r0, r4, sl, asr #28
      2c:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      38:	00000020 	andeq	r0, r0, r0, lsr #32
      3c:	83080e41 	movwhi	r0, #36417	; 0x8e41
      40:	00018e02 	andeq	r8, r1, r2, lsl #28
      44:	0000001c 	andeq	r0, r0, ip, lsl r0
      if (pllsource != 0)
      48:	00000000 	andeq	r0, r0, r0
      4c:	080005e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, sl}
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      50:	0000004c 	andeq	r0, r0, ip, asr #32
      54:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
      58:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
      5c:	180e4101 	stmdane	lr, {r0, r8, lr}
      pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
      60:	000c0e5f 	andeq	r0, ip, pc, asr lr
      64:	00000014 	andeq	r0, r0, r4, lsl r0
      68:	00000000 	andeq	r0, r0, r0
      SystemCoreClock = pllvco/pllp;
      6c:	08000630 	stmdaeq	r0, {r4, r5, r9, sl}
      70:	00000018 	andeq	r0, r0, r8, lsl r0
      break;
      74:	83080e41 	movwhi	r0, #36417	; 0x8e41
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      78:	00018e02 	andeq	r8, r1, r2, lsl #28
      7c:	00000014 	andeq	r0, r0, r4, lsl r0
      80:	00000000 	andeq	r0, r0, r0
      84:	08000648 	stmdaeq	r0, {r3, r6, r9, sl}
      88:	00000018 	andeq	r0, r0, r8, lsl r0
      8c:	83080e41 	movwhi	r0, #36417	; 0x8e41
      90:	00018e02 	andeq	r8, r1, r2, lsl #28
      94:	00000014 	andeq	r0, r0, r4, lsl r0
      98:	00000000 	andeq	r0, r0, r0
      9c:	08000660 	stmdaeq	r0, {r5, r6, r9, sl}
      a0:	00000018 	andeq	r0, r0, r8, lsl r0
      a4:	83080e41 	movwhi	r0, #36417	; 0x8e41
      a8:	00018e02 	andeq	r8, r1, r2, lsl #28
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	00000014 	andeq	r0, r0, r4, lsl r0
      b0:	00000000 	andeq	r0, r0, r0
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	08000678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl}
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	00000018 	andeq	r0, r0, r8, lsl r0
      bc:	83080e41 	movwhi	r0, #36417	; 0x8e41
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	00018e02 	andeq	r8, r1, r2, lsl #28
      c4:	00000014 	andeq	r0, r0, r4, lsl r0
      c8:	00000000 	andeq	r0, r0, r0
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	08000690 	stmdaeq	r0, {r4, r7, r9, sl}
      d0:	00000018 	andeq	r0, r0, r8, lsl r0
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	83080e41 	movwhi	r0, #36417	; 0x8e41
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	00018e02 	andeq	r8, r1, r2, lsl #28
      dc:	00000014 	andeq	r0, r0, r4, lsl r0
      e0:	00000000 	andeq	r0, r0, r0
    if (huart->hdmarx != NULL)
      e4:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	00000018 	andeq	r0, r0, r8, lsl r0
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	83080e41 	movwhi	r0, #36417	; 0x8e41
      f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    huart->TxXferCount = 0x00U;
      f4:	00000014 	andeq	r0, r0, r4, lsl r0
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	00000000 	andeq	r0, r0, r0
    huart->gState  = HAL_UART_STATE_READY;
      fc:	080006c0 	stmdaeq	r0, {r6, r7, r9, sl}
    huart->RxState = HAL_UART_STATE_READY;
     100:	0000002c 	andeq	r0, r0, ip, lsr #32
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	83080e41 	movwhi	r0, #36417	; 0x8e41
    HAL_UART_AbortCpltCallback(huart);
     108:	00018e02 	andeq	r8, r1, r2, lsl #28
     10c:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
}
     118:	000000a8 	andeq	r0, r0, r8, lsr #1
     11c:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     120:	580e4101 	stmdapl	lr, {r0, r8, lr}
     124:	0e0a4602 	cfmadd32eq	mvax0, mvfx4, mvfx10, mvfx2
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
     128:	000b4204 	andeq	r4, fp, r4, lsl #4
     12c:	0000000c 	andeq	r0, r0, ip
     130:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     134:	7c020001 	stcvc	0, cr0, [r2], {1}
     138:	000d0c0e 	andeq	r0, sp, lr, lsl #24
        EXTI->IMR &= ~((uint32_t)iocurrent);
     13c:	00000014 	andeq	r0, r0, r4, lsl r0
     140:	0000012c 	andeq	r0, r0, ip, lsr #2
     144:	080006ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl}
        EXTI->EMR &= ~((uint32_t)iocurrent);
     148:	00000048 	andeq	r0, r0, r8, asr #32
     14c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
        EXTI->FTSR &= ~((uint32_t)iocurrent);
     150:	00018e02 	andeq	r8, r1, r2, lsl #28
     154:	0000000c 	andeq	r0, r0, ip
        EXTI->RTSR &= ~((uint32_t)iocurrent);
     158:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     15c:	7c020001 	stcvc	0, cr0, [r2], {1}
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
     160:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     164:	0000000c 	andeq	r0, r0, ip
     168:	00000154 	andeq	r0, r0, r4, asr r1
     16c:	00000000 	andeq	r0, r0, r0
     170:	00000002 	andeq	r0, r0, r2
}
     174:	0000000c 	andeq	r0, r0, ip
     178:	00000154 	andeq	r0, r0, r4, asr r1
     17c:	00000000 	andeq	r0, r0, r0
     180:	00000004 	andeq	r0, r0, r4
}
     184:	00000014 	andeq	r0, r0, r4, lsl r0
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	00000154 	andeq	r0, r0, r4, asr r1
     18c:	00000000 	andeq	r0, r0, r0
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	00000010 	andeq	r0, r0, r0, lsl r0
     194:	83080e41 	movwhi	r0, #36417	; 0x8e41
     198:	00018e02 	andeq	r8, r1, r2, lsl #28
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	00000014 	andeq	r0, r0, r4, lsl r0
     1a0:	00000154 	andeq	r0, r0, r4, asr r1
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	00000000 	andeq	r0, r0, r0
     1a8:	0000000c 	andeq	r0, r0, ip
     1ac:	83080e41 	movwhi	r0, #36417	; 0x8e41
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	00018e02 	andeq	r8, r1, r2, lsl #28
     1b4:	00000018 	andeq	r0, r0, r8, lsl r0
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	00000154 	andeq	r0, r0, r4, asr r1
     1bc:	08000734 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl}
     1c0:	00000020 	andeq	r0, r0, r0, lsr #32
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     1c8:	86038504 	strhi	r8, [r3], -r4, lsl #10
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	00018e02 	andeq	r8, r1, r2, lsl #28
     1d0:	00000018 	andeq	r0, r0, r8, lsl r0
     1d4:	00000154 	andeq	r0, r0, r4, asr r1
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	08000754 	stmdaeq	r0, {r2, r4, r6, r8, r9, sl}
     1dc:	0000001c 	andeq	r0, r0, ip, lsl r0
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     1e4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     1e8:	00018e02 	andeq	r8, r1, r2, lsl #28
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	0000000c 	andeq	r0, r0, ip
     1f0:	00000154 	andeq	r0, r0, r4, asr r1
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	08000770 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl}
     1f8:	00000006 	andeq	r0, r0, r6
     1fc:	0000000c 	andeq	r0, r0, ip
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	00000154 	andeq	r0, r0, r4, asr r1
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	08000776 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, sl}
     208:	0000000a 	andeq	r0, r0, sl
     20c:	0000000c 	andeq	r0, r0, ip
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	00000154 	andeq	r0, r0, r4, asr r1
     214:	08000780 	stmdaeq	r0, {r7, r8, r9, sl}
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	00000004 	andeq	r0, r0, r4
     21c:	0000000c 	andeq	r0, r0, ip
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	00000154 	andeq	r0, r0, r4, asr r1
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	08000784 	stmdaeq	r0, {r2, r7, r8, r9, sl}
     228:	00000004 	andeq	r0, r0, r4
  tmp = hdma->Instance->FCR;
     22c:	0000001c 	andeq	r0, r0, ip, lsl r0
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	00000154 	andeq	r0, r0, r4, asr r1
  tmp |= hdma->Init.FIFOMode;
     234:	00000000 	andeq	r0, r0, r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	0000000a 	andeq	r0, r0, sl
    tmp |= hdma->Init.FIFOThreshold;
     23c:	810c0e41 	tsthi	ip, r1, asr #28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	83028203 	movwhi	r8, #8707	; 0x2203
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	c2c34301 	sbcgt	r4, r3, #67108864	; 0x4000000
     248:	00000ec1 	andeq	r0, r0, r1, asr #29
  hdma->Instance->FCR = tmp;
     24c:	00000014 	andeq	r0, r0, r4, lsl r0
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	00000154 	andeq	r0, r0, r4, asr r1
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	00000000 	andeq	r0, r0, r0
     258:	00000010 	andeq	r0, r0, r0, lsl r0
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	83080e41 	movwhi	r0, #36417	; 0x8e41
  hdma->State = HAL_DMA_STATE_READY;
     260:	00018e02 	andeq	r8, r1, r2, lsl #28
     264:	00000014 	andeq	r0, r0, r4, lsl r0
  return HAL_OK;
     268:	00000154 	andeq	r0, r0, r4, asr r1
     26c:	00000000 	andeq	r0, r0, r0
     270:	00000010 	andeq	r0, r0, r0, lsl r0
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	83080e41 	movwhi	r0, #36417	; 0x8e41
     278:	00018e02 	andeq	r8, r1, r2, lsl #28
     27c:	0000000c 	andeq	r0, r0, ip
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	00000154 	andeq	r0, r0, r4, asr r1
        hdma->State = HAL_DMA_STATE_READY;
     284:	00000000 	andeq	r0, r0, r0
        return HAL_ERROR; 
     288:	00000006 	andeq	r0, r0, r6
    return HAL_ERROR;
     28c:	0000000c 	andeq	r0, r0, ip
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	00000154 	andeq	r0, r0, r4, asr r1
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	00000000 	andeq	r0, r0, r0
     298:	0000000a 	andeq	r0, r0, sl
      tickstart = HAL_GetTick();
     29c:	00000014 	andeq	r0, r0, r4, lsl r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00000154 	andeq	r0, r0, r4, asr r1
     2a4:	00000000 	andeq	r0, r0, r0
     2a8:	00000010 	andeq	r0, r0, r0, lsl r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	83080e41 	movwhi	r0, #36417	; 0x8e41
     2b0:	00018e02 	andeq	r8, r1, r2, lsl #28
     2b4:	00000014 	andeq	r0, r0, r4, lsl r0
          return HAL_TIMEOUT;
     2b8:	00000154 	andeq	r0, r0, r4, asr r1
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	00000000 	andeq	r0, r0, r0
     2c0:	00000010 	andeq	r0, r0, r0, lsl r0
     2c4:	83080e41 	movwhi	r0, #36417	; 0x8e41
    FlagStatus       pwrclkchanged = RESET;
     2c8:	00018e02 	andeq	r8, r1, r2, lsl #28
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	00000014 	andeq	r0, r0, r4, lsl r0
     2d0:	00000154 	andeq	r0, r0, r4, asr r1
     2d4:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
     2d8:	00000010 	andeq	r0, r0, r0, lsl r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     2e0:	00018e02 	andeq	r8, r1, r2, lsl #28
     2e4:	0000000c 	andeq	r0, r0, ip
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     2ec:	7c020001 	stcvc	0, cr0, [r2], {1}
          return HAL_TIMEOUT;
     2f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	00000014 	andeq	r0, r0, r4, lsl r0
     2f8:	000002e4 	andeq	r0, r0, r4, ror #5
     2fc:	08000788 	stmdaeq	r0, {r3, r7, r8, r9, sl}
     300:	00000014 	andeq	r0, r0, r4, lsl r0
     304:	83080e41 	movwhi	r0, #36417	; 0x8e41
     308:	00018e02 	andeq	r8, r1, r2, lsl #28
     30c:	00000014 	andeq	r0, r0, r4, lsl r0
     310:	000002e4 	andeq	r0, r0, r4, ror #5
      tickstart = HAL_GetTick();
     314:	00000000 	andeq	r0, r0, r0
     318:	00000014 	andeq	r0, r0, r4, lsl r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     320:	00018e02 	andeq	r8, r1, r2, lsl #28
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	00000014 	andeq	r0, r0, r4, lsl r0
     328:	000002e4 	andeq	r0, r0, r4, ror #5
     32c:	0800079c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sl}
     330:	00000014 	andeq	r0, r0, r4, lsl r0
          return HAL_TIMEOUT;
     334:	83080e41 	movwhi	r0, #36417	; 0x8e41
    if(pwrclkchanged == SET)
     338:	00018e02 	andeq	r8, r1, r2, lsl #28
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	00000014 	andeq	r0, r0, r4, lsl r0
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	000002e4 	andeq	r0, r0, r4, ror #5
     344:	080007b0 	stmdaeq	r0, {r4, r5, r7, r8, r9, sl}
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	00000014 	andeq	r0, r0, r4, lsl r0
     34c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     350:	00018e02 	andeq	r8, r1, r2, lsl #28
     354:	00000014 	andeq	r0, r0, r4, lsl r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	000002e4 	andeq	r0, r0, r4, ror #5
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	080007c4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl}
     360:	00000014 	andeq	r0, r0, r4, lsl r0
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	83080e41 	movwhi	r0, #36417	; 0x8e41
     368:	00018e02 	andeq	r8, r1, r2, lsl #28
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	0000000c 	andeq	r0, r0, ip
     370:	000002e4 	andeq	r0, r0, r4, ror #5
     374:	080007d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl}
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	00000002 	andeq	r0, r0, r2
     37c:	0000000c 	andeq	r0, r0, ip
     380:	000002e4 	andeq	r0, r0, r4, ror #5
     384:	080007da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, sl}
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	00000002 	andeq	r0, r0, r2
     38c:	0000000c 	andeq	r0, r0, ip
        __HAL_RCC_PLL_DISABLE();
     390:	000002e4 	andeq	r0, r0, r4, ror #5
     394:	080007dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl}
        tickstart = HAL_GetTick();
     398:	00000002 	andeq	r0, r0, r2
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	00000014 	andeq	r0, r0, r4, lsl r0
     3a0:	000002e4 	andeq	r0, r0, r4, ror #5
     3a4:	080007de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r8, r9, sl}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	00000008 	andeq	r0, r0, r8
     3ac:	83080e41 	movwhi	r0, #36417	; 0x8e41
            return HAL_TIMEOUT;
     3b0:	00018e02 	andeq	r8, r1, r2, lsl #28
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	00000014 	andeq	r0, r0, r4, lsl r0
     3b8:	000002e4 	andeq	r0, r0, r4, ror #5
     3bc:	080007e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl}
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	00000010 	andeq	r0, r0, r0, lsl r0
     3c4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     3c8:	00018e02 	andeq	r8, r1, r2, lsl #28
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	00000014 	andeq	r0, r0, r4, lsl r0
     3d0:	000002e4 	andeq	r0, r0, r4, ror #5
     3d4:	080007f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, sl}
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	00000018 	andeq	r0, r0, r8, lsl r0
     3dc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     3e0:	00018e02 	andeq	r8, r1, r2, lsl #28
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	00000014 	andeq	r0, r0, r4, lsl r0
     3e8:	000002e4 	andeq	r0, r0, r4, ror #5
     3ec:	08000810 	stmdaeq	r0, {r4, fp}
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	00000018 	andeq	r0, r0, r8, lsl r0
     3f4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     3f8:	00018e02 	andeq	r8, r1, r2, lsl #28
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	0000000c 	andeq	r0, r0, ip
     400:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     404:	7c020001 	stcvc	0, cr0, [r2], {1}
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     40c:	00000014 	andeq	r0, r0, r4, lsl r0
     410:	000003fc 	strdeq	r0, [r0], -ip
     414:	08000828 	stmdaeq	r0, {r3, r5, fp}
     418:	0000004c 	andeq	r0, r0, ip, asr #32
     41c:	61100e41 	tstvs	r0, r1, asr #28
     420:	0000000e 	andeq	r0, r0, lr
     424:	0000000c 	andeq	r0, r0, ip
        __HAL_RCC_PLL_ENABLE();
     428:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     42c:	7c020001 	stcvc	0, cr0, [r2], {1}
        tickstart = HAL_GetTick();
     430:	000d0c0e 	andeq	r0, sp, lr, lsl #24
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	00000014 	andeq	r0, r0, r4, lsl r0
     438:	00000424 	andeq	r0, r0, r4, lsr #8
     43c:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	00000034 	andeq	r0, r0, r4, lsr r0
     444:	83080e41 	movwhi	r0, #36417	; 0x8e41
            return HAL_TIMEOUT;
     448:	00018e02 	andeq	r8, r1, r2, lsl #28
  return HAL_OK;
     44c:	0000001c 	andeq	r0, r0, ip, lsl r0
        __HAL_RCC_PLL_DISABLE();
     450:	00000424 	andeq	r0, r0, r4, lsr #8
     454:	080008a8 	stmdaeq	r0, {r3, r5, r7, fp}
        tickstart = HAL_GetTick();
     458:	00000080 	andeq	r0, r0, r0, lsl #1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     460:	41018e02 	tstmi	r1, r2, lsl #28
     464:	0a4e280e 	beq	138a4a4 <_Min_Heap_Size+0x1389ca4>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	0b41080e 	bleq	10424a8 <_Min_Heap_Size+0x1041ca8>
     46c:	00000014 	andeq	r0, r0, r4, lsl r0
            return HAL_TIMEOUT;
     470:	00000424 	andeq	r0, r0, r4, lsr #8
  return HAL_OK;
     474:	00000000 	andeq	r0, r0, r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	00000034 	andeq	r0, r0, r4, lsr r0
        pll_config = RCC->PLLCFGR;
     47c:	83080e41 	movwhi	r0, #36417	; 0x8e41
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	00018e02 	andeq	r8, r1, r2, lsl #28
     484:	0000000c 	andeq	r0, r0, ip
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	7c020001 	stcvc	0, cr0, [r2], {1}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	000d0c0e 	andeq	r0, sp, lr, lsl #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	00000014 	andeq	r0, r0, r4, lsl r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	00000484 	andeq	r0, r0, r4, lsl #9
     49c:	08000928 	stmdaeq	r0, {r3, r5, r8, fp}
     4a0:	00000038 	andeq	r0, r0, r8, lsr r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	57080e41 	strpl	r0, [r8, -r1, asr #28]
     4a8:	0000000e 	andeq	r0, r0, lr
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	0000000c 	andeq	r0, r0, ip
     4b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	7c020001 	stcvc	0, cr0, [r2], {1}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     4bc:	0000000c 	andeq	r0, r0, ip
  return HAL_OK;
     4c0:	000004ac 	andeq	r0, r0, ip, lsr #9
}
     4c4:	00000000 	andeq	r0, r0, r0
        return HAL_ERROR;
     4c8:	00000020 	andeq	r0, r0, r0, lsr #32
        return HAL_ERROR;
     4cc:	0000000c 	andeq	r0, r0, ip
}
     4d0:	000004ac 	andeq	r0, r0, ip, lsr #9
        return HAL_ERROR;
     4d4:	08000960 	stmdaeq	r0, {r5, r6, r8, fp}
          return HAL_ERROR;
     4d8:	0000005c 	andeq	r0, r0, ip, asr r0
     4dc:	0000000c 	andeq	r0, r0, ip
     4e0:	000004ac 	andeq	r0, r0, ip, lsr #9
     4e4:	080009bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, fp}
     4e8:	00000060 	andeq	r0, r0, r0, rrx
     4ec:	00000018 	andeq	r0, r0, r8, lsl r0
     4f0:	000004ac 	andeq	r0, r0, ip, lsr #9
     4f4:	08000a1c 	stmdaeq	r0, {r2, r3, r4, r9, fp}
     4f8:	00000174 	andeq	r0, r0, r4, ror r1
     4fc:	83100e41 	tsthi	r0, #1040	; 0x410
     500:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     504:	00018e02 	andeq	r8, r1, r2, lsl #28
     508:	00000028 	andeq	r0, r0, r8, lsr #32
     50c:	000004ac 	andeq	r0, r0, ip, lsr #9
     510:	08000b90 	stmdaeq	r0, {r4, r7, r8, r9, fp}
     514:	0000008a 	andeq	r0, r0, sl, lsl #1
     518:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     51c:	86068507 	strhi	r8, [r6], -r7, lsl #10
     520:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     524:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     528:	280e4101 	stmdacs	lr, {r0, r8, lr}
     52c:	1c0e0a7c 			; <UNDEFINED> instruction: 0x1c0e0a7c
     530:	00000b42 	andeq	r0, r0, r2, asr #22
     534:	0000000c 	andeq	r0, r0, ip
     538:	000004ac 	andeq	r0, r0, ip, lsr #9
     53c:	00000000 	andeq	r0, r0, r0
     540:	00000002 	andeq	r0, r0, r2
     544:	0000001c 	andeq	r0, r0, ip, lsl r0
     548:	000004ac 	andeq	r0, r0, ip, lsr #9
     54c:	08000c1c 	stmdaeq	r0, {r2, r3, r4, sl, fp}
     550:	0000012c 	andeq	r0, r0, ip, lsr #2
     554:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     558:	02018e02 	andeq	r8, r1, #2, 28
     55c:	c4000e8b 	strgt	r0, [r0], #-3723	; 0xfffff175
     560:	000000ce 	andeq	r0, r0, lr, asr #1
     564:	0000001c 	andeq	r0, r0, ip, lsl r0
     568:	000004ac 	andeq	r0, r0, ip, lsr #9
     56c:	00000000 	andeq	r0, r0, r0
     570:	000000e0 	andeq	r0, r0, r0, ror #1
     574:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
     578:	02018e02 	andeq	r8, r1, #2, 28
     57c:	c4000e66 	strgt	r0, [r0], #-3686	; 0xfffff19a
     580:	000000ce 	andeq	r0, r0, lr, asr #1
     584:	00000020 	andeq	r0, r0, r0, lsr #32
     588:	000004ac 	andeq	r0, r0, ip, lsr #9
     58c:	00000000 	andeq	r0, r0, r0
     590:	000000fc 	strdeq	r0, [r0], -ip
     594:	83100e43 	tsthi	r0, #1072	; 0x430
     598:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     59c:	02018e02 	andeq	r8, r1, #2, 28
     5a0:	c3000e75 	movwgt	r0, #3701	; 0xe75
     5a4:	00cec5c4 	sbceq	ip, lr, r4, asr #11
     5a8:	00000020 	andeq	r0, r0, r0, lsr #32
     5ac:	000004ac 	andeq	r0, r0, ip, lsr #9
     5b0:	00000000 	andeq	r0, r0, r0
     5b4:	00000124 	andeq	r0, r0, r4, lsr #2
     5b8:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     5bc:	86038504 	strhi	r8, [r3], -r4, lsl #10
     5c0:	02018e02 	andeq	r8, r1, #2, 28
     5c4:	c4000e87 	strgt	r0, [r0], #-3719	; 0xfffff179
     5c8:	00cec6c5 	sbceq	ip, lr, r5, asr #13
     5cc:	0000000c 	andeq	r0, r0, ip
     5d0:	000004ac 	andeq	r0, r0, ip, lsr #9
     5d4:	00000000 	andeq	r0, r0, r0
     5d8:	00000002 	andeq	r0, r0, r2
     5dc:	00000018 	andeq	r0, r0, r8, lsl r0
     5e0:	000004ac 	andeq	r0, r0, ip, lsr #9
     5e4:	00000000 	andeq	r0, r0, r0
     5e8:	00000078 	andeq	r0, r0, r8, ror r0
     5ec:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     5f0:	74018e02 	strvc	r8, [r1], #-3586	; 0xfffff1fe
     5f4:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
     5f8:	00000028 	andeq	r0, r0, r8, lsr #32
     5fc:	000004ac 	andeq	r0, r0, ip, lsr #9
     600:	08000d48 	stmdaeq	r0, {r3, r6, r8, sl, fp}
     604:	000000cc 	andeq	r0, r0, ip, asr #1
     608:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     60c:	86058506 	strhi	r8, [r5], -r6, lsl #10
     610:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     614:	41018e02 	tstmi	r1, r2, lsl #28
     618:	5f02200e 	svcpl	0x0002200e
     61c:	42180e0a 	andsmi	r0, r8, #10, 28	; 0xa0
     620:	0000000b 	andeq	r0, r0, fp
     624:	00000028 	andeq	r0, r0, r8, lsr #32
     628:	000004ac 	andeq	r0, r0, ip, lsr #9
     62c:	00000000 	andeq	r0, r0, r0
     630:	000000d2 	ldrdeq	r0, [r0], -r2
     634:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     638:	86058506 	strhi	r8, [r5], -r6, lsl #10
     63c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     640:	41018e02 	tstmi	r1, r2, lsl #28
     644:	6202200e 	andvs	r2, r2, #14
     648:	42180e0a 	andsmi	r0, r8, #10, 28	; 0xa0
     64c:	0000000b 	andeq	r0, r0, fp
     650:	0000000c 	andeq	r0, r0, ip
     654:	000004ac 	andeq	r0, r0, ip, lsr #9
     658:	00000000 	andeq	r0, r0, r0
     65c:	00000038 	andeq	r0, r0, r8, lsr r0
     660:	00000018 	andeq	r0, r0, r8, lsl r0
     664:	000004ac 	andeq	r0, r0, ip, lsr #9
     668:	00000000 	andeq	r0, r0, r0
     66c:	00000084 	andeq	r0, r0, r4, lsl #1
     670:	83100e41 	tsthi	r0, #1040	; 0x410
     674:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     678:	00018e02 	andeq	r8, r1, r2, lsl #28
     67c:	0000000c 	andeq	r0, r0, ip
     680:	000004ac 	andeq	r0, r0, ip, lsr #9
     684:	00000000 	andeq	r0, r0, r0
     688:	00000094 	muleq	r0, r4, r0
     68c:	00000014 	andeq	r0, r0, r4, lsl r0
     690:	000004ac 	andeq	r0, r0, ip, lsr #9
     694:	00000000 	andeq	r0, r0, r0
     698:	00000096 	muleq	r0, r6, r0
     69c:	70080e5a 	andvc	r0, r8, sl, asr lr
     6a0:	0000000e 	andeq	r0, r0, lr
     6a4:	00000014 	andeq	r0, r0, r4, lsl r0
     6a8:	000004ac 	andeq	r0, r0, ip, lsr #9
     6ac:	00000000 	andeq	r0, r0, r0
     6b0:	00000084 	andeq	r0, r0, r4, lsl #1
     6b4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6b8:	00018e02 	andeq	r8, r1, r2, lsl #28
     6bc:	00000028 	andeq	r0, r0, r8, lsr #32
     6c0:	000004ac 	andeq	r0, r0, ip, lsr #9
     6c4:	00000000 	andeq	r0, r0, r0
     6c8:	00000120 	andeq	r0, r0, r0, lsr #2
     6cc:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     6d0:	86068507 	strhi	r8, [r6], -r7, lsl #10
     6d4:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     6d8:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     6dc:	280e4101 	stmdacs	lr, {r0, r8, lr}
     6e0:	0e0a8902 	vmlaeq.f16	s16, s20, s4	; <UNPREDICTABLE>
     6e4:	000b421c 	andeq	r4, fp, ip, lsl r2
     6e8:	0000000c 	andeq	r0, r0, ip
     6ec:	000004ac 	andeq	r0, r0, ip, lsr #9
     6f0:	00000000 	andeq	r0, r0, r0
     6f4:	00000004 	andeq	r0, r0, r4
     6f8:	00000014 	andeq	r0, r0, r4, lsl r0
     6fc:	000004ac 	andeq	r0, r0, ip, lsr #9
     700:	00000000 	andeq	r0, r0, r0
     704:	000000f2 	strdeq	r0, [r0], -r2
     708:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     70c:	00018e02 	andeq	r8, r1, r2, lsl #28
     710:	00000014 	andeq	r0, r0, r4, lsl r0
     714:	000004ac 	andeq	r0, r0, ip, lsr #9
     718:	00000000 	andeq	r0, r0, r0
     71c:	0000006c 	andeq	r0, r0, ip, rrx
     720:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     724:	00018e02 	andeq	r8, r1, r2, lsl #28
     728:	00000014 	andeq	r0, r0, r4, lsl r0
     72c:	000004ac 	andeq	r0, r0, ip, lsr #9
     730:	00000000 	andeq	r0, r0, r0
     734:	000000a6 	andeq	r0, r0, r6, lsr #1
     738:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     73c:	00018e02 	andeq	r8, r1, r2, lsl #28
     740:	0000000c 	andeq	r0, r0, ip
     744:	000004ac 	andeq	r0, r0, ip, lsr #9
     748:	08000e14 	stmdaeq	r0, {r2, r4, r9, sl, fp}
     74c:	00000002 	andeq	r0, r0, r2
     750:	00000014 	andeq	r0, r0, r4, lsl r0
     754:	000004ac 	andeq	r0, r0, ip, lsr #9
     758:	00000000 	andeq	r0, r0, r0
     75c:	0000004c 	andeq	r0, r0, ip, asr #32
     760:	83080e41 	movwhi	r0, #36417	; 0x8e41
     764:	00018e02 	andeq	r8, r1, r2, lsl #28
     768:	00000014 	andeq	r0, r0, r4, lsl r0
     76c:	000004ac 	andeq	r0, r0, ip, lsr #9
     770:	08000e16 	stmdaeq	r0, {r1, r2, r4, r9, sl, fp}
     774:	0000001a 	andeq	r0, r0, sl, lsl r0
     778:	83080e41 	movwhi	r0, #36417	; 0x8e41
     77c:	00018e02 	andeq	r8, r1, r2, lsl #28
     780:	0000000c 	andeq	r0, r0, ip
     784:	000004ac 	andeq	r0, r0, ip, lsr #9
     788:	00000000 	andeq	r0, r0, r0
     78c:	00000002 	andeq	r0, r0, r2
     790:	00000014 	andeq	r0, r0, r4, lsl r0
     794:	000004ac 	andeq	r0, r0, ip, lsr #9
     798:	00000000 	andeq	r0, r0, r0
     79c:	0000000a 	andeq	r0, r0, sl
     7a0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7a4:	00018e02 	andeq	r8, r1, r2, lsl #28
     7a8:	0000000c 	andeq	r0, r0, ip
     7ac:	000004ac 	andeq	r0, r0, ip, lsr #9
     7b0:	08000e30 	stmdaeq	r0, {r4, r5, r9, sl, fp}
     7b4:	00000002 	andeq	r0, r0, r2
     7b8:	0000000c 	andeq	r0, r0, ip
     7bc:	000004ac 	andeq	r0, r0, ip, lsr #9
     7c0:	00000000 	andeq	r0, r0, r0
     7c4:	00000002 	andeq	r0, r0, r2
     7c8:	0000000c 	andeq	r0, r0, ip
     7cc:	000004ac 	andeq	r0, r0, ip, lsr #9
     7d0:	08000e32 	stmdaeq	r0, {r1, r4, r5, r9, sl, fp}
     7d4:	00000002 	andeq	r0, r0, r2
     7d8:	00000014 	andeq	r0, r0, r4, lsl r0
     7dc:	000004ac 	andeq	r0, r0, ip, lsr #9
     7e0:	00000000 	andeq	r0, r0, r0
     7e4:	00000058 	andeq	r0, r0, r8, asr r0
     7e8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     7ec:	00018e02 	andeq	r8, r1, r2, lsl #28
     7f0:	00000014 	andeq	r0, r0, r4, lsl r0
     7f4:	000004ac 	andeq	r0, r0, ip, lsr #9
     7f8:	08000e34 	stmdaeq	r0, {r2, r4, r5, r9, sl, fp}
     7fc:	00000010 	andeq	r0, r0, r0, lsl r0
     800:	83080e41 	movwhi	r0, #36417	; 0x8e41
     804:	00018e02 	andeq	r8, r1, r2, lsl #28
     808:	0000000c 	andeq	r0, r0, ip
     80c:	000004ac 	andeq	r0, r0, ip, lsr #9
     810:	00000000 	andeq	r0, r0, r0
     814:	00000002 	andeq	r0, r0, r2
     818:	00000018 	andeq	r0, r0, r8, lsl r0
     81c:	000004ac 	andeq	r0, r0, ip, lsr #9
     820:	00000000 	andeq	r0, r0, r0
     824:	00000124 	andeq	r0, r0, r4, lsr #2
     828:	83100e41 	tsthi	r0, #1040	; 0x410
     82c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     830:	00018e02 	andeq	r8, r1, r2, lsl #28
     834:	00000014 	andeq	r0, r0, r4, lsl r0
     838:	000004ac 	andeq	r0, r0, ip, lsr #9
     83c:	00000000 	andeq	r0, r0, r0
     840:	0000002c 	andeq	r0, r0, ip, lsr #32
     844:	83080e41 	movwhi	r0, #36417	; 0x8e41
     848:	00018e02 	andeq	r8, r1, r2, lsl #28
     84c:	00000014 	andeq	r0, r0, r4, lsl r0
     850:	000004ac 	andeq	r0, r0, ip, lsr #9
     854:	00000000 	andeq	r0, r0, r0
     858:	0000002c 	andeq	r0, r0, ip, lsr #32
     85c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     860:	00018e02 	andeq	r8, r1, r2, lsl #28
     864:	0000000c 	andeq	r0, r0, ip
     868:	000004ac 	andeq	r0, r0, ip, lsr #9
     86c:	00000000 	andeq	r0, r0, r0
     870:	00000002 	andeq	r0, r0, r2
     874:	00000014 	andeq	r0, r0, r4, lsl r0
     878:	000004ac 	andeq	r0, r0, ip, lsr #9
     87c:	00000000 	andeq	r0, r0, r0
     880:	00000080 	andeq	r0, r0, r0, lsl #1
     884:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     888:	00018e02 	andeq	r8, r1, r2, lsl #28
     88c:	00000014 	andeq	r0, r0, r4, lsl r0
     890:	000004ac 	andeq	r0, r0, ip, lsr #9
     894:	00000000 	andeq	r0, r0, r0
     898:	00000014 	andeq	r0, r0, r4, lsl r0
     89c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     8a0:	00018e02 	andeq	r8, r1, r2, lsl #28
     8a4:	0000000c 	andeq	r0, r0, ip
     8a8:	000004ac 	andeq	r0, r0, ip, lsr #9
     8ac:	00000000 	andeq	r0, r0, r0
     8b0:	00000002 	andeq	r0, r0, r2
     8b4:	00000014 	andeq	r0, r0, r4, lsl r0
     8b8:	000004ac 	andeq	r0, r0, ip, lsr #9
     8bc:	00000000 	andeq	r0, r0, r0
     8c0:	000000bc 	strheq	r0, [r0], -ip
     8c4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     8c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     8cc:	00000014 	andeq	r0, r0, r4, lsl r0
     8d0:	000004ac 	andeq	r0, r0, ip, lsr #9
     8d4:	00000000 	andeq	r0, r0, r0
     8d8:	00000016 	andeq	r0, r0, r6, lsl r0
     8dc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     8e0:	00018e02 	andeq	r8, r1, r2, lsl #28
     8e4:	0000000c 	andeq	r0, r0, ip
     8e8:	000004ac 	andeq	r0, r0, ip, lsr #9
     8ec:	08000e44 	stmdaeq	r0, {r2, r6, r9, sl, fp}
     8f0:	00000002 	andeq	r0, r0, r2
     8f4:	00000024 	andeq	r0, r0, r4, lsr #32
     8f8:	000004ac 	andeq	r0, r0, ip, lsr #9
     8fc:	08000e46 	stmdaeq	r0, {r1, r2, r6, r9, sl, fp}
     900:	000000e6 	andeq	r0, r0, r6, ror #1
     904:	8e040e60 	cdphi	14, 0, cr0, cr4, cr0, {3}
     908:	100e4101 	andne	r4, lr, r1, lsl #2
     90c:	42040e76 	andmi	r0, r4, #1888	; 0x760
     910:	53ce000e 	bicpl	r0, lr, #14
     914:	018e100e 	orreq	r1, lr, lr
     918:	ce000e43 	cdpgt	14, 0, cr0, cr0, cr3, {2}
     91c:	00000020 	andeq	r0, r0, r0, lsr #32
     920:	000004ac 	andeq	r0, r0, ip, lsr #9
     924:	08000f2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, fp}
     928:	00000288 	andeq	r0, r0, r8, lsl #5
     92c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     930:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     934:	180e4101 	stmdane	lr, {r0, r8, lr}
     938:	0c0e0a67 			; <UNDEFINED> instruction: 0x0c0e0a67
     93c:	00000b41 	andeq	r0, r0, r1, asr #22
     940:	00000014 	andeq	r0, r0, r4, lsl r0
     944:	000004ac 	andeq	r0, r0, ip, lsr #9
     948:	00000000 	andeq	r0, r0, r0
     94c:	0000001e 	andeq	r0, r0, lr, lsl r0
     950:	83080e41 	movwhi	r0, #36417	; 0x8e41
     954:	00018e02 	andeq	r8, r1, r2, lsl #28
     958:	00000014 	andeq	r0, r0, r4, lsl r0
     95c:	000004ac 	andeq	r0, r0, ip, lsr #9
     960:	00000000 	andeq	r0, r0, r0
     964:	0000009a 	muleq	r0, sl, r0
     968:	83080e41 	movwhi	r0, #36417	; 0x8e41
     96c:	00018e02 	andeq	r8, r1, r2, lsl #28
     970:	00000014 	andeq	r0, r0, r4, lsl r0
     974:	000004ac 	andeq	r0, r0, ip, lsr #9
     978:	00000000 	andeq	r0, r0, r0
     97c:	00000084 	andeq	r0, r0, r4, lsl #1
     980:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     984:	00018e02 	andeq	r8, r1, r2, lsl #28
     988:	00000014 	andeq	r0, r0, r4, lsl r0
     98c:	000004ac 	andeq	r0, r0, ip, lsr #9
     990:	00000000 	andeq	r0, r0, r0
     994:	00000088 	andeq	r0, r0, r8, lsl #1
     998:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     99c:	00018e02 	andeq	r8, r1, r2, lsl #28
     9a0:	00000014 	andeq	r0, r0, r4, lsl r0
     9a4:	000004ac 	andeq	r0, r0, ip, lsr #9
     9a8:	00000000 	andeq	r0, r0, r0
     9ac:	00000088 	andeq	r0, r0, r8, lsl #1
     9b0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     9b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     9b8:	0000000c 	andeq	r0, r0, ip
     9bc:	000004ac 	andeq	r0, r0, ip, lsr #9
     9c0:	00000000 	andeq	r0, r0, r0
     9c4:	00000036 	andeq	r0, r0, r6, lsr r0
     9c8:	0000000c 	andeq	r0, r0, ip
     9cc:	000004ac 	andeq	r0, r0, ip, lsr #9
     9d0:	00000000 	andeq	r0, r0, r0
     9d4:	00000036 	andeq	r0, r0, r6, lsr r0
     9d8:	0000000c 	andeq	r0, r0, ip
     9dc:	000004ac 	andeq	r0, r0, ip, lsr #9
     9e0:	00000000 	andeq	r0, r0, r0
     9e4:	0000000c 	andeq	r0, r0, ip
     9e8:	0000000c 	andeq	r0, r0, ip
     9ec:	000004ac 	andeq	r0, r0, ip, lsr #9
     9f0:	00000000 	andeq	r0, r0, r0
     9f4:	00000004 	andeq	r0, r0, r4
     9f8:	0000000c 	andeq	r0, r0, ip
     9fc:	000004ac 	andeq	r0, r0, ip, lsr #9
     a00:	00000000 	andeq	r0, r0, r0
     a04:	00000036 	andeq	r0, r0, r6, lsr r0
     a08:	00000014 	andeq	r0, r0, r4, lsl r0
     a0c:	000004ac 	andeq	r0, r0, ip, lsr #9
     a10:	00000000 	andeq	r0, r0, r0
     a14:	00000026 	andeq	r0, r0, r6, lsr #32
     a18:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a1c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a20:	00000028 	andeq	r0, r0, r8, lsr #32
     a24:	000004ac 	andeq	r0, r0, ip, lsr #9
     a28:	00000000 	andeq	r0, r0, r0
     a2c:	00000066 	andeq	r0, r0, r6, rrx
     a30:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     a34:	41018e02 	tstmi	r1, r2, lsl #28
     a38:	0a45100e 	beq	1144a78 <_Min_Heap_Size+0x1144278>
     a3c:	0b41080e 	bleq	1042a7c <_Min_Heap_Size+0x104227c>
     a40:	c4000e62 	strgt	r0, [r0], #-3682	; 0xfffff19e
     a44:	100e42ce 	andne	r4, lr, lr, asr #5
     a48:	018e0284 	orreq	r0, lr, r4, lsl #5
     a4c:	0000001c 	andeq	r0, r0, ip, lsl r0
     a50:	000004ac 	andeq	r0, r0, ip, lsr #9
     a54:	00000000 	andeq	r0, r0, r0
     a58:	000000a4 	andeq	r0, r0, r4, lsr #1
     a5c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     a60:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     a64:	180e4101 	stmdane	lr, {r0, r8, lr}
     a68:	0c0e4902 			; <UNDEFINED> instruction: 0x0c0e4902
     a6c:	00000014 	andeq	r0, r0, r4, lsl r0
     a70:	000004ac 	andeq	r0, r0, ip, lsr #9
     a74:	00000000 	andeq	r0, r0, r0
     a78:	00000026 	andeq	r0, r0, r6, lsr #32
     a7c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a80:	00018e02 	andeq	r8, r1, r2, lsl #28
     a84:	00000028 	andeq	r0, r0, r8, lsr #32
     a88:	000004ac 	andeq	r0, r0, ip, lsr #9
     a8c:	00000000 	andeq	r0, r0, r0
     a90:	00000066 	andeq	r0, r0, r6, rrx
     a94:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     a98:	41018e02 	tstmi	r1, r2, lsl #28
     a9c:	0a45100e 	beq	1144adc <_Min_Heap_Size+0x11442dc>
     aa0:	0b41080e 	bleq	1042ae0 <_Min_Heap_Size+0x10422e0>
     aa4:	c4000e62 	strgt	r0, [r0], #-3682	; 0xfffff19e
     aa8:	100e42ce 	andne	r4, lr, lr, asr #5
     aac:	018e0284 	orreq	r0, lr, r4, lsl #5
     ab0:	0000000c 	andeq	r0, r0, ip
     ab4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ab8:	7c020001 	stcvc	0, cr0, [r2], {1}
     abc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ac0:	0000000c 	andeq	r0, r0, ip
     ac4:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     ac8:	00000000 	andeq	r0, r0, r0
     acc:	00000004 	andeq	r0, r0, r4
     ad0:	00000034 	andeq	r0, r0, r4, lsr r0
     ad4:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     ad8:	00000000 	andeq	r0, r0, r0
     adc:	000004fc 	strdeq	r0, [r0], -ip
     ae0:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     ae4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     ae8:	41018e02 	tstmi	r1, r2, lsl #28
     aec:	5c03180e 	stcpl	8, cr1, [r3], {14}
     af0:	c4000e02 	strgt	r0, [r0], #-3586	; 0xfffff1fe
     af4:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
     af8:	0484180e 	streq	r1, [r4], #2062	; 0x80e
     afc:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     b00:	0a46018e 	beq	1181140 <_Min_Heap_Size+0x1180940>
     b04:	0b41100e 	bleq	1044b44 <_Min_Heap_Size+0x1044344>
     b08:	00000020 	andeq	r0, r0, r0, lsr #32
     b0c:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     b10:	00000000 	andeq	r0, r0, r0
     b14:	00000118 	andeq	r0, r0, r8, lsl r1
     b18:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     b1c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     b20:	41018e02 	tstmi	r1, r2, lsl #28
     b24:	0a7e300e 	beq	1f8cb64 <_Min_Heap_Size+0x1f8c364>
     b28:	0b41100e 	bleq	1044b68 <_Min_Heap_Size+0x1044368>
     b2c:	0000000c 	andeq	r0, r0, ip
     b30:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     b34:	00000000 	andeq	r0, r0, r0
     b38:	0000000c 	andeq	r0, r0, ip
     b3c:	0000000c 	andeq	r0, r0, ip
     b40:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     b44:	00000000 	andeq	r0, r0, r0
     b48:	0000000c 	andeq	r0, r0, ip
     b4c:	00000014 	andeq	r0, r0, r4, lsl r0
     b50:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     b54:	00000000 	andeq	r0, r0, r0
     b58:	000000d4 	ldrdeq	r0, [r0], -r4
     b5c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b60:	00018e02 	andeq	r8, r1, r2, lsl #28
     b64:	0000002c 	andeq	r0, r0, ip, lsr #32
     b68:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     b6c:	00000000 	andeq	r0, r0, r0
     b70:	0000021c 	andeq	r0, r0, ip, lsl r2
     b74:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     b78:	86038504 	strhi	r8, [r3], -r4, lsl #10
     b7c:	02018e02 	andeq	r8, r1, #2, 28
     b80:	c4000ef6 	strgt	r0, [r0], #-3830	; 0xfffff10a
     b84:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
     b88:	0484100e 	streq	r1, [r4], #14
     b8c:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     b90:	0000018e 	andeq	r0, r0, lr, lsl #3
     b94:	0000000c 	andeq	r0, r0, ip
     b98:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     b9c:	080011b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, ip}
     ba0:	0000000c 	andeq	r0, r0, ip
     ba4:	00000014 	andeq	r0, r0, r4, lsl r0
     ba8:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     bac:	080011c0 	stmdaeq	r0, {r6, r7, r8, ip}
     bb0:	00000020 	andeq	r0, r0, r0, lsr #32
     bb4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     bb8:	00018e02 	andeq	r8, r1, r2, lsl #28
     bbc:	00000014 	andeq	r0, r0, r4, lsl r0
     bc0:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     bc4:	080011e0 	stmdaeq	r0, {r5, r6, r7, r8, ip}
     bc8:	00000020 	andeq	r0, r0, r0, lsr #32
     bcc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     bd0:	00018e02 	andeq	r8, r1, r2, lsl #28
     bd4:	0000000c 	andeq	r0, r0, ip
     bd8:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     bdc:	00000000 	andeq	r0, r0, r0
     be0:	000000cc 	andeq	r0, r0, ip, asr #1
     be4:	0000000c 	andeq	r0, r0, ip
     be8:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     bec:	00000000 	andeq	r0, r0, r0
     bf0:	0000003c 	andeq	r0, r0, ip, lsr r0
     bf4:	0000000c 	andeq	r0, r0, ip
     bf8:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     bfc:	00000000 	andeq	r0, r0, r0
     c00:	00000002 	andeq	r0, r0, r2
     c04:	00000014 	andeq	r0, r0, r4, lsl r0
     c08:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     c0c:	00000000 	andeq	r0, r0, r0
     c10:	00000020 	andeq	r0, r0, r0, lsr #32
     c14:	83080e41 	movwhi	r0, #36417	; 0x8e41
     c18:	00018e02 	andeq	r8, r1, r2, lsl #28
     c1c:	0000000c 	andeq	r0, r0, ip
     c20:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c24:	7c020001 	stcvc	0, cr0, [r2], {1}
     c28:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     c2c:	00000024 	andeq	r0, r0, r4, lsr #32
     c30:	00000c1c 	andeq	r0, r0, ip, lsl ip
     c34:	08001200 	stmdaeq	r0, {r9, ip}
     c38:	000002e8 	andeq	r0, r0, r8, ror #5
     c3c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     c40:	86058506 	strhi	r8, [r5], -r6, lsl #10
     c44:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     c48:	41018e02 	tstmi	r1, r2, lsl #28
     c4c:	6703200e 	strvs	r2, [r3, -lr]
     c50:	00180e01 	andseq	r0, r8, r1, lsl #28
     c54:	0000001c 	andeq	r0, r0, ip, lsl r0
     c58:	00000c1c 	andeq	r0, r0, ip, lsl ip
     c5c:	00000000 	andeq	r0, r0, r0
     c60:	00000184 	andeq	r0, r0, r4, lsl #3
     c64:	83180e41 	tsthi	r8, #1040	; 0x410
     c68:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     c6c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     c70:	00018e02 	andeq	r8, r1, r2, lsl #28
     c74:	00000018 	andeq	r0, r0, r8, lsl r0
     c78:	00000c1c 	andeq	r0, r0, ip, lsl ip
     c7c:	00000000 	andeq	r0, r0, r0
     c80:	00000028 	andeq	r0, r0, r8, lsr #32
     c84:	83100e41 	tsthi	r0, #1040	; 0x410
     c88:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     c8c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c90:	00000018 	andeq	r0, r0, r8, lsl r0
     c94:	00000c1c 	andeq	r0, r0, ip, lsl ip
     c98:	00000000 	andeq	r0, r0, r0
     c9c:	00000038 	andeq	r0, r0, r8, lsr r0
     ca0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     ca4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     ca8:	00018e02 	andeq	r8, r1, r2, lsl #28
     cac:	00000018 	andeq	r0, r0, r8, lsl r0
     cb0:	00000c1c 	andeq	r0, r0, ip, lsl ip
     cb4:	00000000 	andeq	r0, r0, r0
     cb8:	0000002c 	andeq	r0, r0, ip, lsr #32
     cbc:	83100e41 	tsthi	r0, #1040	; 0x410
     cc0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     cc4:	00018e02 	andeq	r8, r1, r2, lsl #28
     cc8:	00000020 	andeq	r0, r0, r0, lsr #32
     ccc:	00000c1c 	andeq	r0, r0, ip, lsl ip
     cd0:	00000000 	andeq	r0, r0, r0
     cd4:	00000048 	andeq	r0, r0, r8, asr #32
     cd8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     cdc:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     ce0:	180e4101 	stmdane	lr, {r0, r8, lr}
     ce4:	0c0e0a56 			; <UNDEFINED> instruction: 0x0c0e0a56
     ce8:	00000b41 	andeq	r0, r0, r1, asr #22
     cec:	0000000c 	andeq	r0, r0, ip
     cf0:	00000c1c 	andeq	r0, r0, ip, lsl ip
     cf4:	00000000 	andeq	r0, r0, r0
     cf8:	00000002 	andeq	r0, r0, r2
     cfc:	00000014 	andeq	r0, r0, r4, lsl r0
     d00:	00000c1c 	andeq	r0, r0, ip, lsl ip
     d04:	00000000 	andeq	r0, r0, r0
     d08:	0000001c 	andeq	r0, r0, ip, lsl r0
     d0c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     d10:	00018e02 	andeq	r8, r1, r2, lsl #28
     d14:	0000000c 	andeq	r0, r0, ip
     d18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     d1c:	7c020001 	stcvc	0, cr0, [r2], {1}
     d20:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     d24:	0000001c 	andeq	r0, r0, ip, lsl r0
     d28:	00000d14 	andeq	r0, r0, r4, lsl sp
     d2c:	00000000 	andeq	r0, r0, r0
     d30:	0000002c 	andeq	r0, r0, ip, lsr #32
     d34:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d38:	4f018502 	svcmi	0x00018502
     d3c:	0ec4c50a 	cdpeq	5, 12, cr12, cr4, cr10, {0}
     d40:	000b4100 	andeq	r4, fp, r0, lsl #2
     d44:	00000018 	andeq	r0, r0, r8, lsl r0
     d48:	00000d14 	andeq	r0, r0, r4, lsl sp
     d4c:	00000000 	andeq	r0, r0, r0
     d50:	00000044 	andeq	r0, r0, r4, asr #32
     d54:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     d58:	c40a5501 	strgt	r5, [sl], #-1281	; 0xfffffaff
     d5c:	0b41000e 	bleq	1040d9c <_Min_Heap_Size+0x104059c>
     d60:	0000000c 	andeq	r0, r0, ip
     d64:	00000d14 	andeq	r0, r0, r4, lsl sp
     d68:	00000000 	andeq	r0, r0, r0
     d6c:	0000008e 	andeq	r0, r0, lr, lsl #1
     d70:	00000018 	andeq	r0, r0, r8, lsl r0
     d74:	00000d14 	andeq	r0, r0, r4, lsl sp
     d78:	00000000 	andeq	r0, r0, r0
     d7c:	0000028e 	andeq	r0, r0, lr, lsl #5
     d80:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     d84:	86038504 	strhi	r8, [r3], -r4, lsl #10
     d88:	00018e02 	andeq	r8, r1, r2, lsl #28
     d8c:	00000020 	andeq	r0, r0, r0, lsr #32
     d90:	00000d14 	andeq	r0, r0, r4, lsl sp
     d94:	00000000 	andeq	r0, r0, r0
     d98:	000000dc 	ldrdeq	r0, [r0], -ip
     d9c:	83100e43 	tsthi	r0, #1072	; 0x430
     da0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     da4:	02018e02 	andeq	r8, r1, #2, 28
     da8:	c3000e64 	movwgt	r0, #3684	; 0xe64
     dac:	00cec5c4 	sbceq	ip, lr, r4, asr #11
     db0:	0000001c 	andeq	r0, r0, ip, lsl r0
     db4:	00000d14 	andeq	r0, r0, r4, lsl sp
     db8:	00000000 	andeq	r0, r0, r0
     dbc:	00000078 	andeq	r0, r0, r8, ror r0
     dc0:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     dc4:	86058506 	strhi	r8, [r5], -r6, lsl #10
     dc8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     dcc:	00018e02 	andeq	r8, r1, r2, lsl #28
     dd0:	0000001c 	andeq	r0, r0, ip, lsl r0
     dd4:	00000d14 	andeq	r0, r0, r4, lsl sp
     dd8:	00000000 	andeq	r0, r0, r0
     ddc:	00000098 	muleq	r0, r8, r0
     de0:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     de4:	86058506 	strhi	r8, [r5], -r6, lsl #10
     de8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     dec:	00018e02 	andeq	r8, r1, r2, lsl #28
     df0:	00000018 	andeq	r0, r0, r8, lsl r0
     df4:	00000d14 	andeq	r0, r0, r4, lsl sp
     df8:	080014e8 	stmdaeq	r0, {r3, r5, r6, r7, sl, ip}
     dfc:	00000094 	muleq	r0, r4, r0
     e00:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     e04:	86038504 	strhi	r8, [r3], -r4, lsl #10
     e08:	00018e02 	andeq	r8, r1, r2, lsl #28
     e0c:	0000000c 	andeq	r0, r0, ip
     e10:	00000d14 	andeq	r0, r0, r4, lsl sp
     e14:	0800157c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, ip}
     e18:	00000026 	andeq	r0, r0, r6, lsr #32
     e1c:	00000020 	andeq	r0, r0, r0, lsr #32
     e20:	00000d14 	andeq	r0, r0, r4, lsl sp
     e24:	00000000 	andeq	r0, r0, r0
     e28:	00000128 	andeq	r0, r0, r8, lsr #2
     e2c:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     e30:	86078508 	strhi	r8, [r7], -r8, lsl #10
     e34:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     e38:	8a038904 	bhi	e3250 <_Min_Heap_Size+0xe2a50>
     e3c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e40:	00000020 	andeq	r0, r0, r0, lsr #32
     e44:	00000d14 	andeq	r0, r0, r4, lsl sp
     e48:	00000000 	andeq	r0, r0, r0
     e4c:	000001dc 	ldrdeq	r0, [r0], -ip
     e50:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     e54:	86048505 	strhi	r8, [r4], -r5, lsl #10
     e58:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     e5c:	200e4101 	andcs	r4, lr, r1, lsl #2
     e60:	140ee702 	strne	lr, [lr], #-1794	; 0xfffff8fe
     e64:	0000000c 	andeq	r0, r0, ip
     e68:	00000d14 	andeq	r0, r0, r4, lsl sp
     e6c:	00000000 	andeq	r0, r0, r0
     e70:	0000005a 	andeq	r0, r0, sl, asr r0
     e74:	0000000c 	andeq	r0, r0, ip
     e78:	00000d14 	andeq	r0, r0, r4, lsl sp
     e7c:	00000000 	andeq	r0, r0, r0
     e80:	0000006e 	andeq	r0, r0, lr, rrx
     e84:	0000000c 	andeq	r0, r0, ip
     e88:	00000d14 	andeq	r0, r0, r4, lsl sp
     e8c:	00000000 	andeq	r0, r0, r0
     e90:	00000006 	andeq	r0, r0, r6
     e94:	0000000c 	andeq	r0, r0, ip
     e98:	00000d14 	andeq	r0, r0, r4, lsl sp
     e9c:	00000000 	andeq	r0, r0, r0
     ea0:	00000004 	andeq	r0, r0, r4
     ea4:	0000000c 	andeq	r0, r0, ip
     ea8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     eac:	7c020001 	stcvc	0, cr0, [r2], {1}
     eb0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     eb4:	00000014 	andeq	r0, r0, r4, lsl r0
     eb8:	00000ea4 	andeq	r0, r0, r4, lsr #29
     ebc:	080015a4 	stmdaeq	r0, {r2, r5, r7, r8, sl, ip}
     ec0:	0000003c 	andeq	r0, r0, ip, lsr r0
     ec4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ec8:	00018e02 	andeq	r8, r1, r2, lsl #28
     ecc:	00000018 	andeq	r0, r0, r8, lsl r0
     ed0:	00000ea4 	andeq	r0, r0, r4, lsr #29
     ed4:	080015e0 	stmdaeq	r0, {r5, r6, r7, r8, sl, ip}
     ed8:	0000008c 	andeq	r0, r0, ip, lsl #1
     edc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     ee0:	86038504 	strhi	r8, [r3], -r4, lsl #10
     ee4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ee8:	00000014 	andeq	r0, r0, r4, lsl r0
     eec:	00000ea4 	andeq	r0, r0, r4, lsr #29
     ef0:	0800166c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl, ip}
     ef4:	00000030 	andeq	r0, r0, r0, lsr r0
     ef8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     efc:	00018e02 	andeq	r8, r1, r2, lsl #28
     f00:	00000014 	andeq	r0, r0, r4, lsl r0
     f04:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f08:	00000000 	andeq	r0, r0, r0
     f0c:	00000038 	andeq	r0, r0, r8, lsr r0
     f10:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f14:	00018e02 	andeq	r8, r1, r2, lsl #28
     f18:	0000000c 	andeq	r0, r0, ip
     f1c:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f20:	00000000 	andeq	r0, r0, r0
     f24:	00000024 	andeq	r0, r0, r4, lsr #32
     f28:	0000000c 	andeq	r0, r0, ip
     f2c:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f30:	0800169c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sl, ip}
     f34:	00000028 	andeq	r0, r0, r8, lsr #32
     f38:	0000000c 	andeq	r0, r0, ip
     f3c:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f40:	00000000 	andeq	r0, r0, r0
     f44:	0000001c 	andeq	r0, r0, ip, lsl r0
     f48:	0000000c 	andeq	r0, r0, ip
     f4c:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f50:	00000000 	andeq	r0, r0, r0
     f54:	00000020 	andeq	r0, r0, r0, lsr #32
     f58:	00000014 	andeq	r0, r0, r4, lsl r0
     f5c:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f60:	00000000 	andeq	r0, r0, r0
     f64:	00000128 	andeq	r0, r0, r8, lsr #2
     f68:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f6c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f70:	0000000c 	andeq	r0, r0, ip
     f74:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f78:	00000000 	andeq	r0, r0, r0
     f7c:	00000006 	andeq	r0, r0, r6
     f80:	0000000c 	andeq	r0, r0, ip
     f84:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f88:	00000000 	andeq	r0, r0, r0
     f8c:	00000010 	andeq	r0, r0, r0, lsl r0
     f90:	0000001c 	andeq	r0, r0, ip, lsl r0
     f94:	00000ea4 	andeq	r0, r0, r4, lsr #29
     f98:	00000000 	andeq	r0, r0, r0
     f9c:	0000007c 	andeq	r0, r0, ip, ror r0
     fa0:	83180e41 	tsthi	r8, #1040	; 0x410
     fa4:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     fa8:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     fac:	00018e02 	andeq	r8, r1, r2, lsl #28
     fb0:	00000014 	andeq	r0, r0, r4, lsl r0
     fb4:	00000ea4 	andeq	r0, r0, r4, lsr #29
     fb8:	00000000 	andeq	r0, r0, r0
     fbc:	00000034 	andeq	r0, r0, r4, lsr r0
     fc0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     fc4:	00018e02 	andeq	r8, r1, r2, lsl #28
     fc8:	00000014 	andeq	r0, r0, r4, lsl r0
     fcc:	00000ea4 	andeq	r0, r0, r4, lsr #29
     fd0:	00000000 	andeq	r0, r0, r0
     fd4:	0000003c 	andeq	r0, r0, ip, lsr r0
     fd8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     fdc:	00018e02 	andeq	r8, r1, r2, lsl #28
     fe0:	00000014 	andeq	r0, r0, r4, lsl r0
     fe4:	00000ea4 	andeq	r0, r0, r4, lsr #29
     fe8:	00000000 	andeq	r0, r0, r0
     fec:	00000034 	andeq	r0, r0, r4, lsr r0
     ff0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ff4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ff8:	00000014 	andeq	r0, r0, r4, lsl r0
     ffc:	00000ea4 	andeq	r0, r0, r4, lsr #29
    1000:	00000000 	andeq	r0, r0, r0
    1004:	0000003c 	andeq	r0, r0, ip, lsr r0
    1008:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    100c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1010:	00000014 	andeq	r0, r0, r4, lsl r0
    1014:	00000ea4 	andeq	r0, r0, r4, lsr #29
    1018:	00000000 	andeq	r0, r0, r0
    101c:	0000003c 	andeq	r0, r0, ip, lsr r0
    1020:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1024:	00018e02 	andeq	r8, r1, r2, lsl #28
    1028:	0000000c 	andeq	r0, r0, ip
    102c:	00000ea4 	andeq	r0, r0, r4, lsr #29
    1030:	00000000 	andeq	r0, r0, r0
    1034:	00000002 	andeq	r0, r0, r2
    1038:	00000014 	andeq	r0, r0, r4, lsl r0
    103c:	00000ea4 	andeq	r0, r0, r4, lsr #29
    1040:	00000000 	andeq	r0, r0, r0
    1044:	00000008 	andeq	r0, r0, r8
    1048:	83080e41 	movwhi	r0, #36417	; 0x8e41
    104c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1050:	0000000c 	andeq	r0, r0, ip
    1054:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1058:	7c020001 	stcvc	0, cr0, [r2], {1}
    105c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1060:	0000000c 	andeq	r0, r0, ip
    1064:	00001050 	andeq	r1, r0, r0, asr r0
    1068:	00000000 	andeq	r0, r0, r0
    106c:	00000002 	andeq	r0, r0, r2
    1070:	0000000c 	andeq	r0, r0, ip
    1074:	00001050 	andeq	r1, r0, r0, asr r0
    1078:	00000000 	andeq	r0, r0, r0
    107c:	00000002 	andeq	r0, r0, r2
    1080:	00000014 	andeq	r0, r0, r4, lsl r0
    1084:	00001050 	andeq	r1, r0, r0, asr r0
    1088:	00000000 	andeq	r0, r0, r0
    108c:	0000003c 	andeq	r0, r0, ip, lsr r0
    1090:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1094:	00018e02 	andeq	r8, r1, r2, lsl #28
    1098:	00000014 	andeq	r0, r0, r4, lsl r0
    109c:	00001050 	andeq	r1, r0, r0, asr r0
    10a0:	080016c4 	stmdaeq	r0, {r2, r6, r7, r9, sl, ip}
    10a4:	0000004c 	andeq	r0, r0, ip, asr #32
    10a8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    10ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    10b0:	00000014 	andeq	r0, r0, r4, lsl r0
    10b4:	00001050 	andeq	r1, r0, r0, asr r0
    10b8:	08001710 	stmdaeq	r0, {r4, r8, r9, sl, ip}
    10bc:	00000034 	andeq	r0, r0, r4, lsr r0
    10c0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    10c4:	00018e02 	andeq	r8, r1, r2, lsl #28
    10c8:	0000000c 	andeq	r0, r0, ip
    10cc:	00001050 	andeq	r1, r0, r0, asr r0
    10d0:	08001744 	stmdaeq	r0, {r2, r6, r8, r9, sl, ip}
    10d4:	00000018 	andeq	r0, r0, r8, lsl r0
    10d8:	0000000c 	andeq	r0, r0, ip
    10dc:	00001050 	andeq	r1, r0, r0, asr r0
    10e0:	0800175c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, sl, ip}
    10e4:	0000000c 	andeq	r0, r0, ip
    10e8:	0000000c 	andeq	r0, r0, ip
    10ec:	00001050 	andeq	r1, r0, r0, asr r0
    10f0:	00000000 	andeq	r0, r0, r0
    10f4:	0000000c 	andeq	r0, r0, ip
    10f8:	00000018 	andeq	r0, r0, r8, lsl r0
    10fc:	00001050 	andeq	r1, r0, r0, asr r0
    1100:	00000000 	andeq	r0, r0, r0
    1104:	00000048 	andeq	r0, r0, r8, asr #32
    1108:	83100e41 	tsthi	r0, #1040	; 0x410
    110c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1110:	00018e02 	andeq	r8, r1, r2, lsl #28
    1114:	0000000c 	andeq	r0, r0, ip
    1118:	00001050 	andeq	r1, r0, r0, asr r0
    111c:	00000000 	andeq	r0, r0, r0
    1120:	0000000c 	andeq	r0, r0, ip
    1124:	00000018 	andeq	r0, r0, r8, lsl r0
    1128:	00001050 	andeq	r1, r0, r0, asr r0
    112c:	08001768 	stmdaeq	r0, {r3, r5, r6, r8, r9, sl, ip}
    1130:	00000028 	andeq	r0, r0, r8, lsr #32
    1134:	83100e41 	tsthi	r0, #1040	; 0x410
    1138:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    113c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1140:	0000000c 	andeq	r0, r0, ip
    1144:	00001050 	andeq	r1, r0, r0, asr r0
    1148:	00000000 	andeq	r0, r0, r0
    114c:	0000000e 	andeq	r0, r0, lr
    1150:	0000000c 	andeq	r0, r0, ip
    1154:	00001050 	andeq	r1, r0, r0, asr r0
    1158:	00000000 	andeq	r0, r0, r0
    115c:	0000000e 	andeq	r0, r0, lr
    1160:	0000000c 	andeq	r0, r0, ip
    1164:	00001050 	andeq	r1, r0, r0, asr r0
    1168:	00000000 	andeq	r0, r0, r0
    116c:	00000008 	andeq	r0, r0, r8
    1170:	0000000c 	andeq	r0, r0, ip
    1174:	00001050 	andeq	r1, r0, r0, asr r0
    1178:	00000000 	andeq	r0, r0, r0
    117c:	0000000c 	andeq	r0, r0, ip
    1180:	0000000c 	andeq	r0, r0, ip
    1184:	00001050 	andeq	r1, r0, r0, asr r0
    1188:	00000000 	andeq	r0, r0, r0
    118c:	00000010 	andeq	r0, r0, r0, lsl r0
    1190:	0000000c 	andeq	r0, r0, ip
    1194:	00001050 	andeq	r1, r0, r0, asr r0
    1198:	00000000 	andeq	r0, r0, r0
    119c:	00000010 	andeq	r0, r0, r0, lsl r0
    11a0:	0000000c 	andeq	r0, r0, ip
    11a4:	00001050 	andeq	r1, r0, r0, asr r0
    11a8:	00000000 	andeq	r0, r0, r0
    11ac:	00000010 	andeq	r0, r0, r0, lsl r0
    11b0:	0000000c 	andeq	r0, r0, ip
    11b4:	00001050 	andeq	r1, r0, r0, asr r0
    11b8:	00000000 	andeq	r0, r0, r0
    11bc:	00000010 	andeq	r0, r0, r0, lsl r0
    11c0:	0000000c 	andeq	r0, r0, ip
    11c4:	00001050 	andeq	r1, r0, r0, asr r0
    11c8:	00000000 	andeq	r0, r0, r0
    11cc:	00000010 	andeq	r0, r0, r0, lsl r0
    11d0:	0000000c 	andeq	r0, r0, ip
    11d4:	00001050 	andeq	r1, r0, r0, asr r0
    11d8:	00000000 	andeq	r0, r0, r0
    11dc:	00000010 	andeq	r0, r0, r0, lsl r0
    11e0:	0000000c 	andeq	r0, r0, ip
    11e4:	00001050 	andeq	r1, r0, r0, asr r0
    11e8:	00000000 	andeq	r0, r0, r0
    11ec:	00000010 	andeq	r0, r0, r0, lsl r0
    11f0:	0000000c 	andeq	r0, r0, ip
    11f4:	00001050 	andeq	r1, r0, r0, asr r0
    11f8:	00000000 	andeq	r0, r0, r0
    11fc:	00000010 	andeq	r0, r0, r0, lsl r0
    1200:	0000000c 	andeq	r0, r0, ip
    1204:	00001050 	andeq	r1, r0, r0, asr r0
    1208:	00000000 	andeq	r0, r0, r0
    120c:	00000010 	andeq	r0, r0, r0, lsl r0
    1210:	0000000c 	andeq	r0, r0, ip
    1214:	00001050 	andeq	r1, r0, r0, asr r0
    1218:	00000000 	andeq	r0, r0, r0
    121c:	0000000c 	andeq	r0, r0, ip
    1220:	0000000c 	andeq	r0, r0, ip
    1224:	00001050 	andeq	r1, r0, r0, asr r0
    1228:	00000000 	andeq	r0, r0, r0
    122c:	0000000c 	andeq	r0, r0, ip
    1230:	0000000c 	andeq	r0, r0, ip
    1234:	00001050 	andeq	r1, r0, r0, asr r0
    1238:	00000000 	andeq	r0, r0, r0
    123c:	0000000c 	andeq	r0, r0, ip
    1240:	0000000c 	andeq	r0, r0, ip
    1244:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1248:	7c020001 	stcvc	0, cr0, [r2], {1}
    124c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1250:	0000000c 	andeq	r0, r0, ip
    1254:	00001240 	andeq	r1, r0, r0, asr #4
    1258:	08001790 	stmdaeq	r0, {r4, r7, r8, r9, sl, ip}
    125c:	00000014 	andeq	r0, r0, r4, lsl r0
    1260:	0000000c 	andeq	r0, r0, ip
    1264:	00001240 	andeq	r1, r0, r0, asr #4
    1268:	00000000 	andeq	r0, r0, r0
    126c:	000000a0 	andeq	r0, r0, r0, lsr #1
    1270:	0000000c 	andeq	r0, r0, ip
    1274:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1278:	7c020001 	stcvc	0, cr0, [r2], {1}
    127c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1280:	00000014 	andeq	r0, r0, r4, lsl r0
    1284:	00001270 	andeq	r1, r0, r0, ror r2
    1288:	080017a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl, ip}
    128c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1290:	54080e41 	strpl	r0, [r8], #-3649	; 0xfffff1bf
    1294:	0000000e 	andeq	r0, r0, lr
    1298:	0000000c 	andeq	r0, r0, ip
    129c:	00001270 	andeq	r1, r0, r0, ror r2
    12a0:	080017d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, ip}
    12a4:	00000036 	andeq	r0, r0, r6, lsr r0
    12a8:	00000014 	andeq	r0, r0, r4, lsl r0
    12ac:	00001270 	andeq	r1, r0, r0, ror r2
    12b0:	08001808 	stmdaeq	r0, {r3, fp, ip}
    12b4:	00000018 	andeq	r0, r0, r8, lsl r0
    12b8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    12bc:	00018e02 	andeq	r8, r1, r2, lsl #28
    12c0:	00000014 	andeq	r0, r0, r4, lsl r0
    12c4:	00001270 	andeq	r1, r0, r0, ror r2
    12c8:	08001820 	stmdaeq	r0, {r5, fp, ip}
    12cc:	00000050 	andeq	r0, r0, r0, asr r0
    12d0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    12d4:	00018e02 	andeq	r8, r1, r2, lsl #28
    12d8:	00000020 	andeq	r0, r0, r0, lsr #32
    12dc:	00001270 	andeq	r1, r0, r0, ror r2
    12e0:	08001870 	stmdaeq	r0, {r4, r5, r6, fp, ip}
    12e4:	0000007c 	andeq	r0, r0, ip, ror r0
    12e8:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
    12ec:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    12f0:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    12f4:	89038804 	stmdbhi	r3, {r2, fp, pc}
    12f8:	00018e02 	andeq	r8, r1, r2, lsl #28
    12fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1300:	00001270 	andeq	r1, r0, r0, ror r2
    1304:	080018ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, fp, ip}
    1308:	00000184 	andeq	r0, r0, r4, lsl #3
    130c:	83180e41 	tsthi	r8, #1040	; 0x410
    1310:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1314:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1318:	00018e02 	andeq	r8, r1, r2, lsl #28
    131c:	0000000c 	andeq	r0, r0, ip
    1320:	00001270 	andeq	r1, r0, r0, ror r2
    1324:	00000000 	andeq	r0, r0, r0
    1328:	00000006 	andeq	r0, r0, r6
    132c:	0000000c 	andeq	r0, r0, ip
    1330:	00001270 	andeq	r1, r0, r0, ror r2
    1334:	00000000 	andeq	r0, r0, r0
    1338:	00000008 	andeq	r0, r0, r8
    133c:	0000000c 	andeq	r0, r0, ip
    1340:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1344:	7c020001 	stcvc	0, cr0, [r2], {1}
    1348:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    134c:	00000014 	andeq	r0, r0, r4, lsl r0
    1350:	0000133c 	andeq	r1, r0, ip, lsr r3
    1354:	08001a70 	stmdaeq	r0, {r4, r5, r6, r9, fp, ip}
    1358:	00000088 	andeq	r0, r0, r8, lsl #1
    135c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1360:	00018e02 	andeq	r8, r1, r2, lsl #28
    1364:	0000000c 	andeq	r0, r0, ip
    1368:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    136c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1370:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1374:	0000000c 	andeq	r0, r0, ip
    1378:	00001364 	andeq	r1, r0, r4, ror #6
    137c:	08001b4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, fp, ip}
    1380:	0000000c 	andeq	r0, r0, ip
    1384:	0000000c 	andeq	r0, r0, ip
    1388:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    138c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1390:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1394:	00000018 	andeq	r0, r0, r8, lsl r0
    1398:	00001384 	andeq	r1, r0, r4, lsl #7
    139c:	08001b58 	stmdaeq	r0, {r3, r4, r6, r8, r9, fp, ip}
    13a0:	00000048 	andeq	r0, r0, r8, asr #32
    13a4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    13a8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    13ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    13b0:	0000000c 	andeq	r0, r0, ip
    13b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    13b8:	7c020001 	stcvc	0, cr0, [r2], {1}
    13bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    13c0:	0000000c 	andeq	r0, r0, ip
    13c4:	000013b0 			; <UNDEFINED> instruction: 0x000013b0
    13c8:	08001ba0 	stmdaeq	r0, {r5, r7, r8, r9, fp, ip}
    13cc:	00000010 	andeq	r0, r0, r0, lsl r0
    13d0:	0000000c 	andeq	r0, r0, ip
    13d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    13d8:	7c020001 	stcvc	0, cr0, [r2], {1}
    13dc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    13e0:	0000002c 	andeq	r0, r0, ip, lsr #32
    13e4:	000013d0 	ldrdeq	r1, [r0], -r0
    13e8:	00000000 	andeq	r0, r0, r0
    13ec:	00000028 	andeq	r0, r0, r8, lsr #32
    13f0:	810c0e41 	tsthi	ip, r1, asr #28
    13f4:	83028203 	movwhi	r8, #8707	; 0x2203
    13f8:	200e4101 	andcs	r4, lr, r1, lsl #2
    13fc:	048e0584 	streq	r0, [lr], #1412	; 0x584
    1400:	42140e4e 	andsmi	r0, r4, #1248	; 0x4e0
    1404:	0c0ec4ce 	cfstrseq	mvf12, [lr], {206}	; 0xce
    1408:	c1c2c341 	bicgt	ip, r2, r1, asr #6
    140c:	0000000e 	andeq	r0, r0, lr
    1410:	00000030 	andeq	r0, r0, r0, lsr r0
    1414:	000013d0 	ldrdeq	r1, [r0], -r0
    1418:	08001bb0 	stmdaeq	r0, {r4, r5, r7, r8, r9, fp, ip}
    141c:	00000030 	andeq	r0, r0, r0, lsr r0
    1420:	80100e41 	andshi	r0, r0, r1, asr #28
    1424:	82038104 	andhi	r8, r3, #4, 2
    1428:	42018302 	andmi	r8, r1, #134217728	; 0x8000000
    142c:	0684200e 	streq	r2, [r4], lr
    1430:	0e4f058e 	cdpeq	5, 4, cr0, cr15, cr14, {4}
    1434:	c4ce4218 	strbgt	r4, [lr], #536	; 0x218
    1438:	c341100e 	movtgt	r1, #4110	; 0x100e
    143c:	0ec0c1c2 	acseqdm	f4, f2
    1440:	00000000 	andeq	r0, r0, r0
    1444:	0000000c 	andeq	r0, r0, ip
    1448:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    144c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1450:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1454:	00000018 	andeq	r0, r0, r8, lsl r0
    1458:	00001444 	andeq	r1, r0, r4, asr #8
    145c:	08001be0 	stmdaeq	r0, {r5, r6, r7, r8, r9, fp, ip}
    1460:	000000dc 	ldrdeq	r0, [r0], -ip
    1464:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1468:	86038504 	strhi	r8, [r3], -r4, lsl #10
    146c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1470:	0000000c 	andeq	r0, r0, ip
    1474:	00001444 	andeq	r1, r0, r4, asr #8
    1478:	08001cbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, sl, fp, ip}
    147c:	00000010 	andeq	r0, r0, r0, lsl r0
    1480:	0000000c 	andeq	r0, r0, ip
    1484:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1488:	7c020001 	stcvc	0, cr0, [r2], {1}
    148c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1490:	0000001c 	andeq	r0, r0, ip, lsl r0
    1494:	00001480 	andeq	r1, r0, r0, lsl #9
    1498:	08001ccc 	stmdaeq	r0, {r2, r3, r6, r7, sl, fp, ip}
    149c:	000000a4 	andeq	r0, r0, r4, lsr #1
    14a0:	83180e41 	tsthi	r8, #1040	; 0x410
    14a4:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    14a8:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    14ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    14b0:	0000000c 	andeq	r0, r0, ip
    14b4:	00001480 	andeq	r1, r0, r0, lsl #9
    14b8:	00000000 	andeq	r0, r0, r0
    14bc:	00000010 	andeq	r0, r0, r0, lsl r0
    14c0:	0000000c 	andeq	r0, r0, ip
    14c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    14c8:	7c020001 	stcvc	0, cr0, [r2], {1}
    14cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    14d0:	00000018 	andeq	r0, r0, r8, lsl r0
    14d4:	000014c0 	andeq	r1, r0, r0, asr #9
    14d8:	08001d70 	stmdaeq	r0, {r4, r5, r6, r8, sl, fp, ip}
    14dc:	000000dc 	ldrdeq	r0, [r0], -ip
    14e0:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    14e4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    14e8:	00018e02 	andeq	r8, r1, r2, lsl #28
    14ec:	0000000c 	andeq	r0, r0, ip
    14f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    14f4:	7c020001 	stcvc	0, cr0, [r2], {1}
    14f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    14fc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1500:	000014ec 	andeq	r1, r0, ip, ror #9
    1504:	08001e4c 	stmdaeq	r0, {r2, r3, r6, r9, sl, fp, ip}
    1508:	0000010c 	andeq	r0, r0, ip, lsl #2
    150c:	84180e43 	ldrhi	r0, [r8], #-3651	; 0xfffff1bd
    1510:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1514:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1518:	00018e02 	andeq	r8, r1, r2, lsl #28
    151c:	00000018 	andeq	r0, r0, r8, lsl r0
    1520:	000014ec 	andeq	r1, r0, ip, ror #9
    1524:	08001f58 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl, fp, ip}
    1528:	00000078 	andeq	r0, r0, r8, ror r0
    152c:	83100e41 	tsthi	r0, #1040	; 0x410
    1530:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1534:	00018e02 	andeq	r8, r1, r2, lsl #28
    1538:	0000000c 	andeq	r0, r0, ip
    153c:	000014ec 	andeq	r1, r0, ip, ror #9
    1540:	00000000 	andeq	r0, r0, r0
    1544:	00000024 	andeq	r0, r0, r4, lsr #32
    1548:	0000000c 	andeq	r0, r0, ip
    154c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1550:	7c020001 	stcvc	0, cr0, [r2], {1}
    1554:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1558:	00000014 	andeq	r0, r0, r4, lsl r0
    155c:	00001548 	andeq	r1, r0, r8, asr #10
    1560:	08001fd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, fp, ip}
    1564:	00000048 	andeq	r0, r0, r8, asr #32
    1568:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
    156c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1570:	0000000c 	andeq	r0, r0, ip
    1574:	00001548 	andeq	r1, r0, r8, asr #10
    1578:	08002018 	stmdaeq	r0, {r3, r4, sp}
    157c:	0000000c 	andeq	r0, r0, ip
    1580:	00000014 	andeq	r0, r0, r4, lsl r0
    1584:	00001548 	andeq	r1, r0, r8, asr #10
    1588:	00000000 	andeq	r0, r0, r0
    158c:	00000018 	andeq	r0, r0, r8, lsl r0
    1590:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1594:	00018e02 	andeq	r8, r1, r2, lsl #28
    1598:	00000014 	andeq	r0, r0, r4, lsl r0
    159c:	00001548 	andeq	r1, r0, r8, asr #10
    15a0:	00000000 	andeq	r0, r0, r0
    15a4:	00000018 	andeq	r0, r0, r8, lsl r0
    15a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    15ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    15b0:	00000018 	andeq	r0, r0, r8, lsl r0
    15b4:	00001548 	andeq	r1, r0, r8, asr #10
    15b8:	08002024 	stmdaeq	r0, {r2, r5, sp}
    15bc:	0000002c 	andeq	r0, r0, ip, lsr #32
    15c0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    15c4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    15c8:	00018e02 	andeq	r8, r1, r2, lsl #28
    15cc:	0000000c 	andeq	r0, r0, ip
    15d0:	00001548 	andeq	r1, r0, r8, asr #10
    15d4:	00000000 	andeq	r0, r0, r0
    15d8:	0000000c 	andeq	r0, r0, ip
    15dc:	0000000c 	andeq	r0, r0, ip
    15e0:	00001548 	andeq	r1, r0, r8, asr #10
    15e4:	08002050 	stmdaeq	r0, {r4, r6, sp}
    15e8:	0000000c 	andeq	r0, r0, ip
    15ec:	0000000c 	andeq	r0, r0, ip
    15f0:	00001548 	andeq	r1, r0, r8, asr #10
    15f4:	0800205c 	stmdaeq	r0, {r2, r3, r4, r6, sp}
    15f8:	0000000c 	andeq	r0, r0, ip
    15fc:	0000000c 	andeq	r0, r0, ip
    1600:	00001548 	andeq	r1, r0, r8, asr #10
    1604:	08002068 	stmdaeq	r0, {r3, r5, r6, sp}
    1608:	0000000c 	andeq	r0, r0, ip
    160c:	0000000c 	andeq	r0, r0, ip
    1610:	00001548 	andeq	r1, r0, r8, asr #10
    1614:	08002074 	stmdaeq	r0, {r2, r4, r5, r6, sp}
    1618:	0000000c 	andeq	r0, r0, ip
    161c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1620:	00001548 	andeq	r1, r0, r8, asr #10
    1624:	08002080 	stmdaeq	r0, {r7, sp}
    1628:	00000070 	andeq	r0, r0, r0, ror r0
    162c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1630:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    1634:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
    1638:	000b4200 	andeq	r4, fp, r0, lsl #4
    163c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1640:	00001548 	andeq	r1, r0, r8, asr #10
    1644:	080020f0 	stmdaeq	r0, {r4, r5, r6, r7, sp}
    1648:	0000008c 	andeq	r0, r0, ip, lsl #1
    164c:	83180e41 	tsthi	r8, #1040	; 0x410
    1650:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1654:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1658:	00018e02 	andeq	r8, r1, r2, lsl #28
    165c:	00000018 	andeq	r0, r0, r8, lsl r0
    1660:	00001548 	andeq	r1, r0, r8, asr #10
    1664:	00000000 	andeq	r0, r0, r0
    1668:	0000001c 	andeq	r0, r0, ip, lsl r0
    166c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1670:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    1674:	000ec3ce 	andeq	ip, lr, lr, asr #7
    1678:	00000018 	andeq	r0, r0, r8, lsl r0
    167c:	00001548 	andeq	r1, r0, r8, asr #10
    1680:	00000000 	andeq	r0, r0, r0
    1684:	0000001c 	andeq	r0, r0, ip, lsl r0
    1688:	83080e41 	movwhi	r0, #36417	; 0x8e41
    168c:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    1690:	000ec3ce 	andeq	ip, lr, lr, asr #7
    1694:	0000000c 	andeq	r0, r0, ip
    1698:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    169c:	7c020001 	stcvc	0, cr0, [r2], {1}
    16a0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    16a4:	0000001c 	andeq	r0, r0, ip, lsl r0
    16a8:	00001694 	muleq	r0, r4, r6
    16ac:	00000000 	andeq	r0, r0, r0
    16b0:	0000003a 	andeq	r0, r0, sl, lsr r0
    16b4:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    16b8:	86058506 	strhi	r8, [r5], -r6, lsl #10
    16bc:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    16c0:	00018e02 	andeq	r8, r1, r2, lsl #28
    16c4:	00000020 	andeq	r0, r0, r0, lsr #32
    16c8:	00001694 	muleq	r0, r4, r6
    16cc:	0800217c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sp}
    16d0:	0000003e 	andeq	r0, r0, lr, lsr r0
    16d4:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
    16d8:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    16dc:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    16e0:	89038804 	stmdbhi	r3, {r2, fp, pc}
    16e4:	00018e02 	andeq	r8, r1, r2, lsl #28
    16e8:	0000000c 	andeq	r0, r0, ip
    16ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    16f0:	7c020001 	stcvc	0, cr0, [r2], {1}
    16f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    16f8:	0000000c 	andeq	r0, r0, ip
    16fc:	000016e8 	andeq	r1, r0, r8, ror #13
    1700:	00000000 	andeq	r0, r0, r0
    1704:	00000002 	andeq	r0, r0, r2
    1708:	0000000c 	andeq	r0, r0, ip
    170c:	000016e8 	andeq	r1, r0, r8, ror #13
    1710:	080021ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, sp}
    1714:	00000002 	andeq	r0, r0, r2
    1718:	0000000c 	andeq	r0, r0, ip
    171c:	000016e8 	andeq	r1, r0, r8, ror #13
    1720:	00000000 	andeq	r0, r0, r0
    1724:	00000002 	andeq	r0, r0, r2
    1728:	0000000c 	andeq	r0, r0, ip
    172c:	000016e8 	andeq	r1, r0, r8, ror #13
    1730:	00000000 	andeq	r0, r0, r0
    1734:	00000002 	andeq	r0, r0, r2
    1738:	0000000c 	andeq	r0, r0, ip
    173c:	000016e8 	andeq	r1, r0, r8, ror #13
    1740:	00000000 	andeq	r0, r0, r0
    1744:	00000002 	andeq	r0, r0, r2
    1748:	0000000c 	andeq	r0, r0, ip
    174c:	000016e8 	andeq	r1, r0, r8, ror #13
    1750:	080021bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sp}
    1754:	00000002 	andeq	r0, r0, r2
    1758:	0000000c 	andeq	r0, r0, ip
    175c:	000016e8 	andeq	r1, r0, r8, ror #13
    1760:	00000000 	andeq	r0, r0, r0
    1764:	00000004 	andeq	r0, r0, r4
    1768:	0000000c 	andeq	r0, r0, ip
    176c:	000016e8 	andeq	r1, r0, r8, ror #13
    1770:	00000000 	andeq	r0, r0, r0
    1774:	00000004 	andeq	r0, r0, r4
    1778:	0000000c 	andeq	r0, r0, ip
    177c:	000016e8 	andeq	r1, r0, r8, ror #13
    1780:	00000000 	andeq	r0, r0, r0
    1784:	00000002 	andeq	r0, r0, r2
    1788:	0000000c 	andeq	r0, r0, ip
    178c:	000016e8 	andeq	r1, r0, r8, ror #13
    1790:	080021be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r8, sp}
    1794:	00000002 	andeq	r0, r0, r2
    1798:	0000000c 	andeq	r0, r0, ip
    179c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17a0:	7c020001 	stcvc	0, cr0, [r2], {1}
    17a4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    17a8:	00000020 	andeq	r0, r0, r0, lsr #32
    17ac:	00001798 	muleq	r0, r8, r7
    17b0:	080021c0 	stmdaeq	r0, {r6, r7, r8, sp}
    17b4:	0000004a 	andeq	r0, r0, sl, asr #32
    17b8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    17bc:	86038504 	strhi	r8, [r3], -r4, lsl #10
    17c0:	45018e02 	strmi	r8, [r1, #-3586]	; 0xfffff1fe
    17c4:	0e5e680e 	cdpeq	8, 5, cr6, cr14, cr14, {0}
    17c8:	00000010 	andeq	r0, r0, r0, lsl r0
    17cc:	00000020 	andeq	r0, r0, r0, lsr #32
    17d0:	00001798 	muleq	r0, r8, r7
    17d4:	0800220c 	stmdaeq	r0, {r2, r3, r9, sp}
    17d8:	00000080 	andeq	r0, r0, r0, lsl #1
    17dc:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    17e0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    17e4:	4b018e02 	blmi	64ff4 <_Min_Heap_Size+0x647f4>
    17e8:	41100e0a 	tstmi	r0, sl, lsl #28
    17ec:	0000000b 	andeq	r0, r0, fp
    17f0:	0000000c 	andeq	r0, r0, ip
    17f4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17f8:	7c020001 	stcvc	0, cr0, [r2], {1}
    17fc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1800:	00000024 	andeq	r0, r0, r4, lsr #32
    1804:	000017f0 	strdeq	r1, [r0], -r0
    1808:	0800228c 	stmdaeq	r0, {r2, r3, r7, r9, sp}
    180c:	00000098 	muleq	r0, r8, r0
    1810:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
    1814:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1818:	0e0a5301 	cdpeq	3, 0, cr5, cr10, cr1, {0}
    181c:	c5ce420c 	strbgt	r4, [lr, #524]	; 0x20c
    1820:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1824:	0c0e710b 	stfeqs	f7, [lr], {11}
    1828:	0000000c 	andeq	r0, r0, ip
    182c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1830:	7c020001 	stcvc	0, cr0, [r2], {1}
    1834:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1838:	00000018 	andeq	r0, r0, r8, lsl r0
    183c:	00001828 	andeq	r1, r0, r8, lsr #16
    1840:	08002324 	stmdaeq	r0, {r2, r5, r8, r9, sp}
    1844:	00000040 	andeq	r0, r0, r0, asr #32
    1848:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    184c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1850:	00018e02 	andeq	r8, r1, r2, lsl #28
    1854:	0000001c 	andeq	r0, r0, ip, lsl r0
    1858:	00001828 	andeq	r1, r0, r8, lsr #16
    185c:	08002364 	stmdaeq	r0, {r2, r5, r6, r8, r9, sp}
    1860:	000000e8 	andeq	r0, r0, r8, ror #1
    1864:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1868:	86058506 	strhi	r8, [r5], -r6, lsl #10
    186c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1870:	00018e02 	andeq	r8, r1, r2, lsl #28
    1874:	0000000c 	andeq	r0, r0, ip
    1878:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    187c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1880:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1884:	0000001c 	andeq	r0, r0, ip, lsl r0
    1888:	00001874 	andeq	r1, r0, r4, ror r8
    188c:	0800244c 	stmdaeq	r0, {r2, r3, r6, sl, sp}
    1890:	0000002e 	andeq	r0, r0, lr, lsr #32
    1894:	84040e44 	strhi	r0, [r4], #-3652	; 0xfffff1bc
    1898:	c40a4901 	strgt	r4, [sl], #-2305	; 0xfffff6ff
    189c:	0b42000e 	bleq	10818dc <_Min_Heap_Size+0x10810dc>
    18a0:	000ec447 	andeq	ip, lr, r7, asr #8
    18a4:	0000001c 	andeq	r0, r0, ip, lsl r0
    18a8:	00001874 	andeq	r1, r0, r4, ror r8
    18ac:	0800247a 	stmdaeq	r0, {r1, r3, r4, r5, r6, sl, sp}
    18b0:	00000024 	andeq	r0, r0, r4, lsr #32
    18b4:	83180e41 	tsthi	r8, #1040	; 0x410
    18b8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    18bc:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    18c0:	00018e02 	andeq	r8, r1, r2, lsl #28
    18c4:	00000018 	andeq	r0, r0, r8, lsl r0
    18c8:	00001874 	andeq	r1, r0, r4, ror r8
    18cc:	00000000 	andeq	r0, r0, r0
    18d0:	0000001a 	andeq	r0, r0, sl, lsl r0
    18d4:	83100e41 	tsthi	r0, #1040	; 0x410
    18d8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    18dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    18e0:	0000002c 	andeq	r0, r0, ip, lsr #32
    18e4:	00001874 	andeq	r1, r0, r4, ror r8
    18e8:	080024a0 	stmdaeq	r0, {r5, r7, sl, sp}
    18ec:	00000260 	andeq	r0, r0, r0, ror #4
    18f0:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    18f4:	86088509 	strhi	r8, [r8], -r9, lsl #10
    18f8:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    18fc:	8a048905 	bhi	123d18 <_Min_Heap_Size+0x123518>
    1900:	8e028b03 	vmlahi.f64	d8, d2, d3
    1904:	980e4201 	stmdals	lr, {r0, r9, lr}
    1908:	0e0a6501 	cfsh32eq	mvfx6, mvfx10, #1
    190c:	000b4224 	andeq	r4, fp, r4, lsr #4
    1910:	0000000c 	andeq	r0, r0, ip
    1914:	00001874 	andeq	r1, r0, r4, ror r8
    1918:	00000000 	andeq	r0, r0, r0
    191c:	00000014 	andeq	r0, r0, r4, lsl r0
    1920:	0000000c 	andeq	r0, r0, ip
    1924:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1928:	7c020001 	stcvc	0, cr0, [r2], {1}
    192c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1930:	00000020 	andeq	r0, r0, r0, lsr #32
    1934:	00001920 	andeq	r1, r0, r0, lsr #18
    1938:	08002700 	stmdaeq	r0, {r8, r9, sl, sp}
    193c:	000000da 	ldrdeq	r0, [r0], -sl
    1940:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1944:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1948:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    194c:	8a038904 	bhi	e3d64 <_Min_Heap_Size+0xe3564>
    1950:	00018e02 	andeq	r8, r1, r2, lsl #28
    1954:	00000028 	andeq	r0, r0, r8, lsr #32
    1958:	00001920 	andeq	r1, r0, r0, lsr #18
    195c:	080027dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, sp}
    1960:	0000024c 	andeq	r0, r0, ip, asr #4
    1964:	84300e42 	ldrthi	r0, [r0], #-3650	; 0xfffff1be
    1968:	86078508 	strhi	r8, [r7], -r8, lsl #10
    196c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1970:	8a038904 	bhi	e3d88 <_Min_Heap_Size+0xe3588>
    1974:	02018e02 	andeq	r8, r1, #2, 28
    1978:	200e0ab3 			; <UNDEFINED> instruction: 0x200e0ab3
    197c:	00000b42 	andeq	r0, r0, r2, asr #22
    1980:	0000000c 	andeq	r0, r0, ip
    1984:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1988:	7c020001 	stcvc	0, cr0, [r2], {1}
    198c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1990:	00000018 	andeq	r0, r0, r8, lsl r0
    1994:	00001980 	andeq	r1, r0, r0, lsl #19
    1998:	08002a28 	stmdaeq	r0, {r3, r5, r9, fp, sp}
    199c:	00000020 	andeq	r0, r0, r0, lsr #32
    19a0:	83100e41 	tsthi	r0, #1040	; 0x410
    19a4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    19a8:	00018e02 	andeq	r8, r1, r2, lsl #28
    19ac:	0000000c 	andeq	r0, r0, ip
    19b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    19b4:	7c020001 	stcvc	0, cr0, [r2], {1}
    19b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    19bc:	00000014 	andeq	r0, r0, r4, lsl r0
    19c0:	000019ac 	andeq	r1, r0, ip, lsr #19
    19c4:	08002a48 	stmdaeq	r0, {r3, r6, r9, fp, sp}
    19c8:	00000022 	andeq	r0, r0, r2, lsr #32
    19cc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    19d0:	00018e02 	andeq	r8, r1, r2, lsl #28
    19d4:	0000000c 	andeq	r0, r0, ip
    19d8:	000019ac 	andeq	r1, r0, ip, lsr #19
    19dc:	00000000 	andeq	r0, r0, r0
    19e0:	00000004 	andeq	r0, r0, r4
    19e4:	00000024 	andeq	r0, r0, r4, lsr #32
    19e8:	000019ac 	andeq	r1, r0, ip, lsr #19
    19ec:	08002a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp, sp}
    19f0:	00000038 	andeq	r0, r0, r8, lsr r0
    19f4:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    19f8:	86058506 	strhi	r8, [r5], -r6, lsl #10
    19fc:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1a00:	58018e02 	stmdapl	r1, {r1, r9, sl, fp, pc}
    1a04:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
    1a08:	000ec4c5 	andeq	ip, lr, r5, asr #9
    1a0c:	00000014 	andeq	r0, r0, r4, lsl r0
    1a10:	000019ac 	andeq	r1, r0, ip, lsr #19
    1a14:	08002aa2 	stmdaeq	r0, {r1, r5, r7, r9, fp, sp}
    1a18:	00000024 	andeq	r0, r0, r4, lsr #32
    1a1c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1a20:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a24:	0000000c 	andeq	r0, r0, ip
    1a28:	000019ac 	andeq	r1, r0, ip, lsr #19
    1a2c:	08002ac6 	stmdaeq	r0, {r1, r2, r6, r7, r9, fp, sp}
    1a30:	00000008 	andeq	r0, r0, r8
    1a34:	0000000c 	andeq	r0, r0, ip
    1a38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a3c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a40:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a44:	00000018 	andeq	r0, r0, r8, lsl r0
    1a48:	00001a34 	andeq	r1, r0, r4, lsr sl
    1a4c:	08002ad0 	stmdaeq	r0, {r4, r6, r7, r9, fp, sp}
    1a50:	00000024 	andeq	r0, r0, r4, lsr #32
    1a54:	83100e41 	tsthi	r0, #1040	; 0x410
    1a58:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1a5c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a60:	0000000c 	andeq	r0, r0, ip
    1a64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a68:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a6c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a70:	00000018 	andeq	r0, r0, r8, lsl r0
    1a74:	00001a60 	andeq	r1, r0, r0, ror #20
    1a78:	08002af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp, sp}
    1a7c:	00000020 	andeq	r0, r0, r0, lsr #32
    1a80:	83100e41 	tsthi	r0, #1040	; 0x410
    1a84:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1a88:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a8c:	0000000c 	andeq	r0, r0, ip
    1a90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1a94:	7c020001 	stcvc	0, cr0, [r2], {1}
    1a98:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1a9c:	00000018 	andeq	r0, r0, r8, lsl r0
    1aa0:	00001a8c 	andeq	r1, r0, ip, lsl #21
    1aa4:	08002b14 	stmdaeq	r0, {r2, r4, r8, r9, fp, sp}
    1aa8:	00000024 	andeq	r0, r0, r4, lsr #32
    1aac:	83100e41 	tsthi	r0, #1040	; 0x410
    1ab0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1ab4:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ab8:	0000000c 	andeq	r0, r0, ip
    1abc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ac0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ac4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ac8:	00000018 	andeq	r0, r0, r8, lsl r0
    1acc:	00001ab8 			; <UNDEFINED> instruction: 0x00001ab8
    1ad0:	08002b38 	stmdaeq	r0, {r3, r4, r5, r8, r9, fp, sp}
    1ad4:	00000020 	andeq	r0, r0, r0, lsr #32
    1ad8:	83100e41 	tsthi	r0, #1040	; 0x410
    1adc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1ae0:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ae4:	0000000c 	andeq	r0, r0, ip
    1ae8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1aec:	7c020001 	stcvc	0, cr0, [r2], {1}
    1af0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1af4:	00000018 	andeq	r0, r0, r8, lsl r0
    1af8:	00001ae4 	andeq	r1, r0, r4, ror #21
    1afc:	08002b58 	stmdaeq	r0, {r3, r4, r6, r8, r9, fp, sp}
    1b00:	00000024 	andeq	r0, r0, r4, lsr #32
    1b04:	83100e41 	tsthi	r0, #1040	; 0x410
    1b08:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b0c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b10:	0000000c 	andeq	r0, r0, ip
    1b14:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b18:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b1c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b20:	0000000c 	andeq	r0, r0, ip
    1b24:	00001b10 	andeq	r1, r0, r0, lsl fp
    1b28:	08002b7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, r9, fp, sp}
    1b2c:	0000000c 	andeq	r0, r0, ip
    1b30:	0000000c 	andeq	r0, r0, ip
    1b34:	00001b10 	andeq	r1, r0, r0, lsl fp
    1b38:	08002b88 	stmdaeq	r0, {r3, r7, r8, r9, fp, sp}
    1b3c:	0000000c 	andeq	r0, r0, ip
    1b40:	0000000c 	andeq	r0, r0, ip
    1b44:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b48:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b4c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b50:	00000018 	andeq	r0, r0, r8, lsl r0
    1b54:	00001b40 	andeq	r1, r0, r0, asr #22
    1b58:	08002b94 	stmdaeq	r0, {r2, r4, r7, r8, r9, fp, sp}
    1b5c:	00000024 	andeq	r0, r0, r4, lsr #32
    1b60:	83100e41 	tsthi	r0, #1040	; 0x410
    1b64:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b68:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b6c:	0000000c 	andeq	r0, r0, ip
    1b70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1b74:	7c020001 	stcvc	0, cr0, [r2], {1}
    1b78:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1b7c:	00000020 	andeq	r0, r0, r0, lsr #32
    1b80:	00001b6c 	andeq	r1, r0, ip, ror #22
    1b84:	00000000 	andeq	r0, r0, r0
    1b88:	0000001a 	andeq	r0, r0, sl, lsl r0
    1b8c:	83100e41 	tsthi	r0, #1040	; 0x410
    1b90:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b94:	4a018e02 	bmi	653a4 <_Min_Heap_Size+0x64ba4>
    1b98:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    1b9c:	0000000e 	andeq	r0, r0, lr
    1ba0:	00000024 	andeq	r0, r0, r4, lsr #32
    1ba4:	00001b6c 	andeq	r1, r0, ip, ror #22
    1ba8:	00000000 	andeq	r0, r0, r0
    1bac:	000000b8 	strheq	r0, [r0], -r8
    1bb0:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
    1bb4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1bb8:	7f018e02 	svcvc	0x00018e02
    1bbc:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
    1bc0:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1bc4:	0000000b 	andeq	r0, r0, fp
    1bc8:	0000000c 	andeq	r0, r0, ip
    1bcc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1bd0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1bd4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1bd8:	00000018 	andeq	r0, r0, r8, lsl r0
    1bdc:	00001bc8 	andeq	r1, r0, r8, asr #23
    1be0:	080002c0 	stmdaeq	r0, {r6, r7, r9}
    1be4:	00000030 	andeq	r0, r0, r0, lsr r0
    1be8:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    1bec:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    1bf0:	00000010 	andeq	r0, r0, r0, lsl r0
    1bf4:	0000000c 	andeq	r0, r0, ip
    1bf8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1bfc:	7c020001 	stcvc	0, cr0, [r2], {1}
    1c00:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1c04:	00000020 	andeq	r0, r0, r0, lsr #32
    1c08:	00001bf4 	strdeq	r1, [r0], -r4
    1c0c:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
    1c10:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1c14:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1c18:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1c1c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1c20:	8a038904 	bhi	e4038 <_Min_Heap_Size+0xe3838>
    1c24:	00018e02 	andeq	r8, r1, r2, lsl #28

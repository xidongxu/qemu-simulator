
build/gcc/stm32-qemu.elf:     file format elf32-littlearm


Disassembly of section .isr_vector:

08000000 <g_pfnVectors>:
 8000000:	200099a0 	andcs	r9, r0, r0, lsr #19
 8000004:	0800335d 	stmdaeq	r0, {r0, r2, r3, r4, r6, r8, r9, ip, sp}
 8000008:	0800066d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r9, sl}
 800000c:	080001d1 	stmdaeq	r0, {r0, r4, r6, r7, r8}
 8000010:	08000681 	stmdaeq	r0, {r0, r7, r9, sl}
 8000014:	08000695 	stmdaeq	r0, {r0, r2, r4, r7, r9, sl}
 8000018:	080006a9 	stmdaeq	r0, {r0, r3, r5, r7, r9, sl}
	...
 800002c:	080006bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r9, sl}
 8000030:	080006c5 	stmdaeq	r0, {r0, r2, r6, r7, r9, sl}
 8000034:	00000000 	andeq	r0, r0, r0
 8000038:	080006c7 	stmdaeq	r0, {r0, r1, r2, r6, r7, r9, sl}
 800003c:	080006cf 	stmdaeq	r0, {r0, r1, r2, r3, r6, r7, r9, sl}
 8000040:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000044:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000048:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 800004c:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000050:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000054:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000058:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 800005c:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000060:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000064:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000068:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 800006c:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000070:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000074:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000078:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 800007c:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000080:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000084:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000088:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 800008c:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000090:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000094:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000098:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 800009c:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000a0:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000a4:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000a8:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000ac:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000b0:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000b4:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000b8:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000bc:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000c0:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000c4:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000c8:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000cc:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000d0:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000d4:	080006e5 	stmdaeq	r0, {r0, r2, r5, r6, r7, r9, sl}
 80000d8:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000dc:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000e0:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000e4:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000e8:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000ec:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000f0:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000f4:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000f8:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 80000fc:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000100:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000104:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000108:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 800010c:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000110:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000114:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000118:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 800011c:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000120:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000124:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000128:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 800012c:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000130:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
	...
 800013c:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000140:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000144:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000148:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 800014c:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000150:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000154:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000158:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 800015c:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000160:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000164:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000168:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 800016c:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000170:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000174:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
	...
 8000180:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}
 8000184:	080033ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, r9, ip, sp}

Disassembly of section .text:

08000190 <__do_global_dtors_aux>:
 8000190:	b510      	push	{r4, lr}
 8000192:	4c05      	ldr	r4, [pc, #20]	; (80001a8 <__do_global_dtors_aux+0x18>)
 8000194:	7823      	ldrb	r3, [r4, #0]
 8000196:	b933      	cbnz	r3, 80001a6 <__do_global_dtors_aux+0x16>
 8000198:	4b04      	ldr	r3, [pc, #16]	; (80001ac <__do_global_dtors_aux+0x1c>)
 800019a:	b113      	cbz	r3, 80001a2 <__do_global_dtors_aux+0x12>
 800019c:	4804      	ldr	r0, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x20>)
 800019e:	f3af 8000 	nop.w
 80001a2:	2301      	movs	r3, #1
 80001a4:	7023      	strb	r3, [r4, #0]
 80001a6:	bd10      	pop	{r4, pc}
 80001a8:	20000078 	andcs	r0, r0, r8, ror r0
 80001ac:	00000000 	andeq	r0, r0, r0
 80001b0:	08004438 	stmdaeq	r0, {r3, r4, r5, sl, lr}

080001b4 <frame_dummy>:
 80001b4:	b508      	push	{r3, lr}
 80001b6:	4b03      	ldr	r3, [pc, #12]	; (80001c4 <frame_dummy+0x10>)
 80001b8:	b11b      	cbz	r3, 80001c2 <frame_dummy+0xe>
 80001ba:	4903      	ldr	r1, [pc, #12]	; (80001c8 <frame_dummy+0x14>)
 80001bc:	4803      	ldr	r0, [pc, #12]	; (80001cc <frame_dummy+0x18>)
 80001be:	f3af 8000 	nop.w
 80001c2:	bd08      	pop	{r3, pc}
 80001c4:	00000000 	andeq	r0, r0, r0
 80001c8:	2000007c 	andcs	r0, r0, ip, ror r0
 80001cc:	08004438 	stmdaeq	r0, {r3, r4, r5, sl, lr}

080001d0 <HardFault_Handler>:
.global fault_dump_handler

.global HardFault_Handler
.type HardFault_Handler, % function
HardFault_Handler:
    cpsid   i                           /* disable interrupts */
 80001d0:	b672      	cpsid	i
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
 80001d2:	4b0e      	ldr	r3, [pc, #56]	; (800020c <stack_invalid+0xe>)
    ldr     r1, [r3]                    /* r1 = fd_main_stack_base  */
 80001d4:	6819      	ldr	r1, [r3, #0]
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
 80001d6:	4b0e      	ldr	r3, [pc, #56]	; (8000210 <stack_invalid+0x12>)
    ldr     r2, [r3]                    /* r2 = fd_main_stack_full  */
 80001d8:	681a      	ldr	r2, [r3, #0]

    tst     lr, #4                      /* use exc_return value get sp value */
 80001da:	f01e 0f04 	tst.w	lr, #4
    bne     stack_checked               /* if (sp != msp), jump to stack_checked */
 80001de:	d105      	bne.n	80001ec <stack_checked>

    mrs     r0, msp                     /* else (sp == msp), r0 = sp = msp */
 80001e0:	f3ef 8008 	mrs	r0, MSP
    cmp     r0, r1                      /* compare msp and stack base addr */
 80001e4:	4288      	cmp	r0, r1
    blt     stack_invalid               /* msp < stack_base_addr, msp is invalid */
 80001e6:	db0a      	blt.n	80001fe <stack_invalid>
    cmp     r0, r2                      /* compare msp and stack full addr */
 80001e8:	4290      	cmp	r0, r2
    bgt     stack_invalid               /* msp > stack_base_addr, msp is invalid */
 80001ea:	dc08      	bgt.n	80001fe <stack_invalid>

080001ec <stack_checked>:
    
stack_checked:
    push    {r4 - r11}                  /* sp value is in stack range, push r4 - r11 to stack */
 80001ec:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}

    tst     lr, #4                      /* update sp value to r0 */
 80001f0:	f01e 0f04 	tst.w	lr, #4
    ite     eq
 80001f4:	bf0c      	ite	eq
    mrseq   r0, msp                     /* lr & 0x04 == 1, r0 = sp = msp */
 80001f6:	f3ef 8008 	mrseq	r0, MSP
    mrsne   r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
 80001fa:	f3ef 8009 	mrsne	r0, PSP

080001fe <stack_invalid>:
stack_invalid:
    mov     r1, lr                      /* now, r0 = sp, r1 = lr */
 80001fe:	4671      	mov	r1, lr
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
 8000200:	4a04      	ldr	r2, [pc, #16]	; (8000214 <stack_invalid+0x16>)
    dsb                                 /* wait for memory access to complete */
 8000202:	f3bf 8f4f 	dsb	sy
    cpsie   i                           /* enable interrupts */
 8000206:	b662      	cpsie	i
    bx      r2                          /* jump to fault_dump_handler */
 8000208:	4710      	bx	r2
 800020a:	81e40000 	mvnhi	r0, r0
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
 800020e:	81e82000 	mvnhi	r2, r0
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
 8000212:	17e92000 	strbne	r2, [r9, r0]!
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
 8000216:	00000800 	andeq	r0, r0, r0, lsl #16
 800021a:	00000000 	andeq	r0, r0, r0
	...

08000220 <memchr>:
 8000220:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000224:	2a10      	cmp	r2, #16
 8000226:	db2b      	blt.n	8000280 <memchr+0x60>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	d008      	beq.n	8000240 <memchr+0x20>
 800022e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000232:	3a01      	subs	r2, #1
 8000234:	428b      	cmp	r3, r1
 8000236:	d02d      	beq.n	8000294 <memchr+0x74>
 8000238:	f010 0f07 	tst.w	r0, #7
 800023c:	b342      	cbz	r2, 8000290 <memchr+0x70>
 800023e:	d1f6      	bne.n	800022e <memchr+0xe>
 8000240:	b4f0      	push	{r4, r5, r6, r7}
 8000242:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000246:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800024a:	f022 0407 	bic.w	r4, r2, #7
 800024e:	f07f 0700 	mvns.w	r7, #0
 8000252:	2300      	movs	r3, #0
 8000254:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000258:	3c08      	subs	r4, #8
 800025a:	ea85 0501 	eor.w	r5, r5, r1
 800025e:	ea86 0601 	eor.w	r6, r6, r1
 8000262:	fa85 f547 	uadd8	r5, r5, r7
 8000266:	faa3 f587 	sel	r5, r3, r7
 800026a:	fa86 f647 	uadd8	r6, r6, r7
 800026e:	faa5 f687 	sel	r6, r5, r7
 8000272:	b98e      	cbnz	r6, 8000298 <memchr+0x78>
 8000274:	d1ee      	bne.n	8000254 <memchr+0x34>
 8000276:	bcf0      	pop	{r4, r5, r6, r7}
 8000278:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800027c:	f002 0207 	and.w	r2, r2, #7
 8000280:	b132      	cbz	r2, 8000290 <memchr+0x70>
 8000282:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000286:	3a01      	subs	r2, #1
 8000288:	ea83 0301 	eor.w	r3, r3, r1
 800028c:	b113      	cbz	r3, 8000294 <memchr+0x74>
 800028e:	d1f8      	bne.n	8000282 <memchr+0x62>
 8000290:	2000      	movs	r0, #0
 8000292:	4770      	bx	lr
 8000294:	3801      	subs	r0, #1
 8000296:	4770      	bx	lr
 8000298:	2d00      	cmp	r5, #0
 800029a:	bf06      	itte	eq
 800029c:	4635      	moveq	r5, r6
 800029e:	3803      	subeq	r0, #3
 80002a0:	3807      	subne	r0, #7
 80002a2:	f015 0f01 	tst.w	r5, #1
 80002a6:	d107      	bne.n	80002b8 <memchr+0x98>
 80002a8:	3001      	adds	r0, #1
 80002aa:	f415 7f80 	tst.w	r5, #256	; 0x100
 80002ae:	bf02      	ittt	eq
 80002b0:	3001      	addeq	r0, #1
 80002b2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002b6:	3001      	addeq	r0, #1
 80002b8:	bcf0      	pop	{r4, r5, r6, r7}
 80002ba:	3801      	subs	r0, #1
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop

080002c0 <__aeabi_uldivmod>:
 80002c0:	b953      	cbnz	r3, 80002d8 <__aeabi_uldivmod+0x18>
 80002c2:	b94a      	cbnz	r2, 80002d8 <__aeabi_uldivmod+0x18>
 80002c4:	2900      	cmp	r1, #0
 80002c6:	bf08      	it	eq
 80002c8:	2800      	cmpeq	r0, #0
 80002ca:	bf1c      	itt	ne
 80002cc:	f04f 31ff 	movne.w	r1, #4294967295	; 0xffffffff
 80002d0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
 80002d4:	f000 b974 	b.w	80005c0 <__aeabi_idiv0>
 80002d8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002dc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002e0:	f000 f806 	bl	80002f0 <__udivmoddi4>
 80002e4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002e8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ec:	b004      	add	sp, #16
 80002ee:	4770      	bx	lr

080002f0 <__udivmoddi4>:
 80002f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002f4:	9d08      	ldr	r5, [sp, #32]
 80002f6:	4604      	mov	r4, r0
 80002f8:	468e      	mov	lr, r1
 80002fa:	2b00      	cmp	r3, #0
 80002fc:	d14d      	bne.n	800039a <__udivmoddi4+0xaa>
 80002fe:	428a      	cmp	r2, r1
 8000300:	4694      	mov	ip, r2
 8000302:	d969      	bls.n	80003d8 <__udivmoddi4+0xe8>
 8000304:	fab2 f282 	clz	r2, r2
 8000308:	b152      	cbz	r2, 8000320 <__udivmoddi4+0x30>
 800030a:	fa01 f302 	lsl.w	r3, r1, r2
 800030e:	f1c2 0120 	rsb	r1, r2, #32
 8000312:	fa20 f101 	lsr.w	r1, r0, r1
 8000316:	fa0c fc02 	lsl.w	ip, ip, r2
 800031a:	ea41 0e03 	orr.w	lr, r1, r3
 800031e:	4094      	lsls	r4, r2
 8000320:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000324:	0c21      	lsrs	r1, r4, #16
 8000326:	fbbe f6f8 	udiv	r6, lr, r8
 800032a:	fa1f f78c 	uxth.w	r7, ip
 800032e:	fb08 e316 	mls	r3, r8, r6, lr
 8000332:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000336:	fb06 f107 	mul.w	r1, r6, r7
 800033a:	4299      	cmp	r1, r3
 800033c:	d90a      	bls.n	8000354 <__udivmoddi4+0x64>
 800033e:	eb1c 0303 	adds.w	r3, ip, r3
 8000342:	f106 30ff 	add.w	r0, r6, #4294967295	; 0xffffffff
 8000346:	f080 811f 	bcs.w	8000588 <__udivmoddi4+0x298>
 800034a:	4299      	cmp	r1, r3
 800034c:	f240 811c 	bls.w	8000588 <__udivmoddi4+0x298>
 8000350:	3e02      	subs	r6, #2
 8000352:	4463      	add	r3, ip
 8000354:	1a5b      	subs	r3, r3, r1
 8000356:	b2a4      	uxth	r4, r4
 8000358:	fbb3 f0f8 	udiv	r0, r3, r8
 800035c:	fb08 3310 	mls	r3, r8, r0, r3
 8000360:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000364:	fb00 f707 	mul.w	r7, r0, r7
 8000368:	42a7      	cmp	r7, r4
 800036a:	d90a      	bls.n	8000382 <__udivmoddi4+0x92>
 800036c:	eb1c 0404 	adds.w	r4, ip, r4
 8000370:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 8000374:	f080 810a 	bcs.w	800058c <__udivmoddi4+0x29c>
 8000378:	42a7      	cmp	r7, r4
 800037a:	f240 8107 	bls.w	800058c <__udivmoddi4+0x29c>
 800037e:	4464      	add	r4, ip
 8000380:	3802      	subs	r0, #2
 8000382:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000386:	1be4      	subs	r4, r4, r7
 8000388:	2600      	movs	r6, #0
 800038a:	b11d      	cbz	r5, 8000394 <__udivmoddi4+0xa4>
 800038c:	40d4      	lsrs	r4, r2
 800038e:	2300      	movs	r3, #0
 8000390:	e9c5 4300 	strd	r4, r3, [r5]
 8000394:	4631      	mov	r1, r6
 8000396:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800039a:	428b      	cmp	r3, r1
 800039c:	d909      	bls.n	80003b2 <__udivmoddi4+0xc2>
 800039e:	2d00      	cmp	r5, #0
 80003a0:	f000 80ef 	beq.w	8000582 <__udivmoddi4+0x292>
 80003a4:	2600      	movs	r6, #0
 80003a6:	e9c5 0100 	strd	r0, r1, [r5]
 80003aa:	4630      	mov	r0, r6
 80003ac:	4631      	mov	r1, r6
 80003ae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003b2:	fab3 f683 	clz	r6, r3
 80003b6:	2e00      	cmp	r6, #0
 80003b8:	d14a      	bne.n	8000450 <__udivmoddi4+0x160>
 80003ba:	428b      	cmp	r3, r1
 80003bc:	d302      	bcc.n	80003c4 <__udivmoddi4+0xd4>
 80003be:	4282      	cmp	r2, r0
 80003c0:	f200 80f9 	bhi.w	80005b6 <__udivmoddi4+0x2c6>
 80003c4:	1a84      	subs	r4, r0, r2
 80003c6:	eb61 0303 	sbc.w	r3, r1, r3
 80003ca:	2001      	movs	r0, #1
 80003cc:	469e      	mov	lr, r3
 80003ce:	2d00      	cmp	r5, #0
 80003d0:	d0e0      	beq.n	8000394 <__udivmoddi4+0xa4>
 80003d2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003d6:	e7dd      	b.n	8000394 <__udivmoddi4+0xa4>
 80003d8:	b902      	cbnz	r2, 80003dc <__udivmoddi4+0xec>
 80003da:	deff      	udf	#255	; 0xff
 80003dc:	fab2 f282 	clz	r2, r2
 80003e0:	2a00      	cmp	r2, #0
 80003e2:	f040 8092 	bne.w	800050a <__udivmoddi4+0x21a>
 80003e6:	eba1 010c 	sub.w	r1, r1, ip
 80003ea:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003ee:	fa1f fe8c 	uxth.w	lr, ip
 80003f2:	2601      	movs	r6, #1
 80003f4:	0c20      	lsrs	r0, r4, #16
 80003f6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003fa:	fb07 1113 	mls	r1, r7, r3, r1
 80003fe:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000402:	fb0e f003 	mul.w	r0, lr, r3
 8000406:	4288      	cmp	r0, r1
 8000408:	d908      	bls.n	800041c <__udivmoddi4+0x12c>
 800040a:	eb1c 0101 	adds.w	r1, ip, r1
 800040e:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 8000412:	d202      	bcs.n	800041a <__udivmoddi4+0x12a>
 8000414:	4288      	cmp	r0, r1
 8000416:	f200 80cb 	bhi.w	80005b0 <__udivmoddi4+0x2c0>
 800041a:	4643      	mov	r3, r8
 800041c:	1a09      	subs	r1, r1, r0
 800041e:	b2a4      	uxth	r4, r4
 8000420:	fbb1 f0f7 	udiv	r0, r1, r7
 8000424:	fb07 1110 	mls	r1, r7, r0, r1
 8000428:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800042c:	fb0e fe00 	mul.w	lr, lr, r0
 8000430:	45a6      	cmp	lr, r4
 8000432:	d908      	bls.n	8000446 <__udivmoddi4+0x156>
 8000434:	eb1c 0404 	adds.w	r4, ip, r4
 8000438:	f100 31ff 	add.w	r1, r0, #4294967295	; 0xffffffff
 800043c:	d202      	bcs.n	8000444 <__udivmoddi4+0x154>
 800043e:	45a6      	cmp	lr, r4
 8000440:	f200 80bb 	bhi.w	80005ba <__udivmoddi4+0x2ca>
 8000444:	4608      	mov	r0, r1
 8000446:	eba4 040e 	sub.w	r4, r4, lr
 800044a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800044e:	e79c      	b.n	800038a <__udivmoddi4+0x9a>
 8000450:	f1c6 0720 	rsb	r7, r6, #32
 8000454:	40b3      	lsls	r3, r6
 8000456:	fa22 fc07 	lsr.w	ip, r2, r7
 800045a:	ea4c 0c03 	orr.w	ip, ip, r3
 800045e:	fa20 f407 	lsr.w	r4, r0, r7
 8000462:	fa01 f306 	lsl.w	r3, r1, r6
 8000466:	431c      	orrs	r4, r3
 8000468:	40f9      	lsrs	r1, r7
 800046a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800046e:	fa00 f306 	lsl.w	r3, r0, r6
 8000472:	fbb1 f8f9 	udiv	r8, r1, r9
 8000476:	0c20      	lsrs	r0, r4, #16
 8000478:	fa1f fe8c 	uxth.w	lr, ip
 800047c:	fb09 1118 	mls	r1, r9, r8, r1
 8000480:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000484:	fb08 f00e 	mul.w	r0, r8, lr
 8000488:	4288      	cmp	r0, r1
 800048a:	fa02 f206 	lsl.w	r2, r2, r6
 800048e:	d90b      	bls.n	80004a8 <__udivmoddi4+0x1b8>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f108 3aff 	add.w	sl, r8, #4294967295	; 0xffffffff
 8000498:	f080 8088 	bcs.w	80005ac <__udivmoddi4+0x2bc>
 800049c:	4288      	cmp	r0, r1
 800049e:	f240 8085 	bls.w	80005ac <__udivmoddi4+0x2bc>
 80004a2:	f1a8 0802 	sub.w	r8, r8, #2
 80004a6:	4461      	add	r1, ip
 80004a8:	1a09      	subs	r1, r1, r0
 80004aa:	b2a4      	uxth	r4, r4
 80004ac:	fbb1 f0f9 	udiv	r0, r1, r9
 80004b0:	fb09 1110 	mls	r1, r9, r0, r1
 80004b4:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 80004b8:	fb00 fe0e 	mul.w	lr, r0, lr
 80004bc:	458e      	cmp	lr, r1
 80004be:	d908      	bls.n	80004d2 <__udivmoddi4+0x1e2>
 80004c0:	eb1c 0101 	adds.w	r1, ip, r1
 80004c4:	f100 34ff 	add.w	r4, r0, #4294967295	; 0xffffffff
 80004c8:	d26c      	bcs.n	80005a4 <__udivmoddi4+0x2b4>
 80004ca:	458e      	cmp	lr, r1
 80004cc:	d96a      	bls.n	80005a4 <__udivmoddi4+0x2b4>
 80004ce:	3802      	subs	r0, #2
 80004d0:	4461      	add	r1, ip
 80004d2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004d6:	fba0 9402 	umull	r9, r4, r0, r2
 80004da:	eba1 010e 	sub.w	r1, r1, lr
 80004de:	42a1      	cmp	r1, r4
 80004e0:	46c8      	mov	r8, r9
 80004e2:	46a6      	mov	lr, r4
 80004e4:	d356      	bcc.n	8000594 <__udivmoddi4+0x2a4>
 80004e6:	d053      	beq.n	8000590 <__udivmoddi4+0x2a0>
 80004e8:	b15d      	cbz	r5, 8000502 <__udivmoddi4+0x212>
 80004ea:	ebb3 0208 	subs.w	r2, r3, r8
 80004ee:	eb61 010e 	sbc.w	r1, r1, lr
 80004f2:	fa01 f707 	lsl.w	r7, r1, r7
 80004f6:	fa22 f306 	lsr.w	r3, r2, r6
 80004fa:	40f1      	lsrs	r1, r6
 80004fc:	431f      	orrs	r7, r3
 80004fe:	e9c5 7100 	strd	r7, r1, [r5]
 8000502:	2600      	movs	r6, #0
 8000504:	4631      	mov	r1, r6
 8000506:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800050a:	f1c2 0320 	rsb	r3, r2, #32
 800050e:	40d8      	lsrs	r0, r3
 8000510:	fa0c fc02 	lsl.w	ip, ip, r2
 8000514:	fa21 f303 	lsr.w	r3, r1, r3
 8000518:	4091      	lsls	r1, r2
 800051a:	4301      	orrs	r1, r0
 800051c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000520:	fa1f fe8c 	uxth.w	lr, ip
 8000524:	fbb3 f0f7 	udiv	r0, r3, r7
 8000528:	fb07 3610 	mls	r6, r7, r0, r3
 800052c:	0c0b      	lsrs	r3, r1, #16
 800052e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000532:	fb00 f60e 	mul.w	r6, r0, lr
 8000536:	429e      	cmp	r6, r3
 8000538:	fa04 f402 	lsl.w	r4, r4, r2
 800053c:	d908      	bls.n	8000550 <__udivmoddi4+0x260>
 800053e:	eb1c 0303 	adds.w	r3, ip, r3
 8000542:	f100 38ff 	add.w	r8, r0, #4294967295	; 0xffffffff
 8000546:	d22f      	bcs.n	80005a8 <__udivmoddi4+0x2b8>
 8000548:	429e      	cmp	r6, r3
 800054a:	d92d      	bls.n	80005a8 <__udivmoddi4+0x2b8>
 800054c:	3802      	subs	r0, #2
 800054e:	4463      	add	r3, ip
 8000550:	1b9b      	subs	r3, r3, r6
 8000552:	b289      	uxth	r1, r1
 8000554:	fbb3 f6f7 	udiv	r6, r3, r7
 8000558:	fb07 3316 	mls	r3, r7, r6, r3
 800055c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000560:	fb06 f30e 	mul.w	r3, r6, lr
 8000564:	428b      	cmp	r3, r1
 8000566:	d908      	bls.n	800057a <__udivmoddi4+0x28a>
 8000568:	eb1c 0101 	adds.w	r1, ip, r1
 800056c:	f106 38ff 	add.w	r8, r6, #4294967295	; 0xffffffff
 8000570:	d216      	bcs.n	80005a0 <__udivmoddi4+0x2b0>
 8000572:	428b      	cmp	r3, r1
 8000574:	d914      	bls.n	80005a0 <__udivmoddi4+0x2b0>
 8000576:	3e02      	subs	r6, #2
 8000578:	4461      	add	r1, ip
 800057a:	1ac9      	subs	r1, r1, r3
 800057c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000580:	e738      	b.n	80003f4 <__udivmoddi4+0x104>
 8000582:	462e      	mov	r6, r5
 8000584:	4628      	mov	r0, r5
 8000586:	e705      	b.n	8000394 <__udivmoddi4+0xa4>
 8000588:	4606      	mov	r6, r0
 800058a:	e6e3      	b.n	8000354 <__udivmoddi4+0x64>
 800058c:	4618      	mov	r0, r3
 800058e:	e6f8      	b.n	8000382 <__udivmoddi4+0x92>
 8000590:	454b      	cmp	r3, r9
 8000592:	d2a9      	bcs.n	80004e8 <__udivmoddi4+0x1f8>
 8000594:	ebb9 0802 	subs.w	r8, r9, r2
 8000598:	eb64 0e0c 	sbc.w	lr, r4, ip
 800059c:	3801      	subs	r0, #1
 800059e:	e7a3      	b.n	80004e8 <__udivmoddi4+0x1f8>
 80005a0:	4646      	mov	r6, r8
 80005a2:	e7ea      	b.n	800057a <__udivmoddi4+0x28a>
 80005a4:	4620      	mov	r0, r4
 80005a6:	e794      	b.n	80004d2 <__udivmoddi4+0x1e2>
 80005a8:	4640      	mov	r0, r8
 80005aa:	e7d1      	b.n	8000550 <__udivmoddi4+0x260>
 80005ac:	46d0      	mov	r8, sl
 80005ae:	e77b      	b.n	80004a8 <__udivmoddi4+0x1b8>
 80005b0:	3b02      	subs	r3, #2
 80005b2:	4461      	add	r1, ip
 80005b4:	e732      	b.n	800041c <__udivmoddi4+0x12c>
 80005b6:	4630      	mov	r0, r6
 80005b8:	e709      	b.n	80003ce <__udivmoddi4+0xde>
 80005ba:	4464      	add	r4, ip
 80005bc:	3802      	subs	r0, #2
 80005be:	e742      	b.n	8000446 <__udivmoddi4+0x156>

080005c0 <__aeabi_idiv0>:
 80005c0:	4770      	bx	lr
 80005c2:	bf00      	nop

080005c4 <main_task_init>:
        vTaskDelay(1000);
        printf("hello this is FreeRTOS.\r\n");
    }
}

static void main_task_init(void) {
 80005c4:	b500      	push	{lr}
 80005c6:	b083      	sub	sp, #12
    static TaskHandle_t main_task = NULL;
    BaseType_t xReturn = pdPASS;
    xReturn = xTaskCreate(main_task_entry, "main_task", 2048, NULL, 1U, &main_task);
 80005c8:	4b0b      	ldr	r3, [pc, #44]	; (80005f8 <main_task_init+0x34>)
 80005ca:	9301      	str	r3, [sp, #4]
 80005cc:	2301      	movs	r3, #1
 80005ce:	9300      	str	r3, [sp, #0]
 80005d0:	2300      	movs	r3, #0
 80005d2:	f44f 6200 	mov.w	r2, #2048	; 0x800
 80005d6:	4909      	ldr	r1, [pc, #36]	; (80005fc <main_task_init+0x38>)
 80005d8:	4809      	ldr	r0, [pc, #36]	; (8000600 <main_task_init+0x3c>)
 80005da:	f001 fe4d 	bl	8002278 <xTaskCreate>
    if (xReturn == pdPASS) {
 80005de:	2801      	cmp	r0, #1
 80005e0:	d006      	beq.n	80005f0 <main_task_init+0x2c>
 80005e2:	4601      	mov	r1, r0
        vTaskStartScheduler();
    } else {
        printf("main task create failed(%d).\r\n", (int)(xReturn));
 80005e4:	4807      	ldr	r0, [pc, #28]	; (8000604 <main_task_init+0x40>)
 80005e6:	f002 ff23 	bl	8003430 <iprintf>
    }
}
 80005ea:	b003      	add	sp, #12
 80005ec:	f85d fb04 	ldr.w	pc, [sp], #4
        vTaskStartScheduler();
 80005f0:	f002 f9fa 	bl	80029e8 <vTaskStartScheduler>
 80005f4:	e7f9      	b.n	80005ea <main_task_init+0x26>
 80005f6:	bf00      	nop
 80005f8:	20000094 	mulcs	r0, r4, r0
 80005fc:	08004450 	stmdaeq	r0, {r4, r6, sl, lr}
 8000600:	08000609 	stmdaeq	r0, {r0, r3, r9, sl}
 8000604:	0800445c 	stmdaeq	r0, {r2, r3, r4, r6, sl, lr}

08000608 <main_task_entry>:
static void main_task_entry(void *parameters) {
 8000608:	b508      	push	{r3, lr}
        vTaskDelay(1000);
 800060a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 800060e:	f001 ffc7 	bl	80025a0 <vTaskDelay>
        printf("hello this is FreeRTOS.\r\n");
 8000612:	4802      	ldr	r0, [pc, #8]	; (800061c <main_task_entry+0x14>)
 8000614:	f002 ff92 	bl	800353c <puts>
    while(1) {
 8000618:	e7f7      	b.n	800060a <main_task_entry+0x2>
 800061a:	bf00      	nop
 800061c:	0800447c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl, lr}

08000620 <__io_putchar>:
int __io_putchar(int ch) {
 8000620:	b500      	push	{lr}
 8000622:	b083      	sub	sp, #12
 8000624:	9001      	str	r0, [sp, #4]
    HAL_UART_Transmit(&huart1, (uint8_t *)&ch, 1, 0xFFFF);
 8000626:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800062a:	2201      	movs	r2, #1
 800062c:	a901      	add	r1, sp, #4
 800062e:	4803      	ldr	r0, [pc, #12]	; (800063c <__io_putchar+0x1c>)
 8000630:	f000 fb08 	bl	8000c44 <HAL_UART_Transmit>
}
 8000634:	9801      	ldr	r0, [sp, #4]
 8000636:	b003      	add	sp, #12
 8000638:	f85d fb04 	ldr.w	pc, [sp], #4
 800063c:	20008098 	mulcs	r0, r8, r0

08000640 <main>:

int main(void) {
 8000640:	b508      	push	{r3, lr}
    HAL_Init();
 8000642:	f000 ffe3 	bl	800160c <HAL_Init>
    // SystemClock_Config();
    MX_GPIO_Init();
 8000646:	f000 f86d 	bl	8000724 <MX_GPIO_Init>
    MX_USART1_UART_Init();
 800064a:	f000 f891 	bl	8000770 <MX_USART1_UART_Init>

    fault_dump_init();
 800064e:	f001 f865 	bl	800171c <fault_dump_init>
    main_task_init();
 8000652:	f7ff ffb7 	bl	80005c4 <main_task_init>
    // test5();

    while (1) {
        printf("hello qemu.\r\n");
 8000656:	4804      	ldr	r0, [pc, #16]	; (8000668 <main+0x28>)
 8000658:	f002 ff70 	bl	800353c <puts>
        HAL_Delay(1000);
 800065c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000660:	f001 f800 	bl	8001664 <HAL_Delay>
    while (1) {
 8000664:	e7f7      	b.n	8000656 <main+0x16>
 8000666:	bf00      	nop
 8000668:	08004498 	stmdaeq	r0, {r3, r4, r7, sl, lr}

0800066c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800066c:	b508      	push	{r3, lr}
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 800066e:	4902      	ldr	r1, [pc, #8]	; (8000678 <NMI_Handler+0xc>)
 8000670:	4802      	ldr	r0, [pc, #8]	; (800067c <NMI_Handler+0x10>)
 8000672:	f002 fedd 	bl	8003430 <iprintf>
  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000676:	e7fe      	b.n	8000676 <NMI_Handler+0xa>
 8000678:	08004514 	stmdaeq	r0, {r2, r4, r8, sl, lr}
 800067c:	080044a8 	stmdaeq	r0, {r3, r5, r7, sl, lr}

08000680 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000680:	b508      	push	{r3, lr}
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 8000682:	4902      	ldr	r1, [pc, #8]	; (800068c <MemManage_Handler+0xc>)
 8000684:	4802      	ldr	r0, [pc, #8]	; (8000690 <MemManage_Handler+0x10>)
 8000686:	f002 fed3 	bl	8003430 <iprintf>
  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 800068a:	e7fe      	b.n	800068a <MemManage_Handler+0xa>
 800068c:	08004500 	stmdaeq	r0, {r8, sl, lr}
 8000690:	080044a8 	stmdaeq	r0, {r3, r5, r7, sl, lr}

08000694 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000694:	b508      	push	{r3, lr}
  /* USER CODE BEGIN BusFault_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 8000696:	4902      	ldr	r1, [pc, #8]	; (80006a0 <BusFault_Handler+0xc>)
 8000698:	4802      	ldr	r0, [pc, #8]	; (80006a4 <BusFault_Handler+0x10>)
 800069a:	f002 fec9 	bl	8003430 <iprintf>
  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800069e:	e7fe      	b.n	800069e <BusFault_Handler+0xa>
 80006a0:	080044ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, lr}
 80006a4:	080044a8 	stmdaeq	r0, {r3, r5, r7, sl, lr}

080006a8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 80006a8:	b508      	push	{r3, lr}
  /* USER CODE BEGIN UsageFault_IRQn 0 */
  printf("this is %s.\r\n", __func__);
 80006aa:	4902      	ldr	r1, [pc, #8]	; (80006b4 <UsageFault_Handler+0xc>)
 80006ac:	4802      	ldr	r0, [pc, #8]	; (80006b8 <UsageFault_Handler+0x10>)
 80006ae:	f002 febf 	bl	8003430 <iprintf>
  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80006b2:	e7fe      	b.n	80006b2 <UsageFault_Handler+0xa>
 80006b4:	080044d8 	stmdaeq	r0, {r3, r4, r6, r7, sl, lr}
 80006b8:	080044a8 	stmdaeq	r0, {r3, r5, r7, sl, lr}

080006bc <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 80006bc:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SVCall_IRQn 0 */
  vPortSVCHandler();
 80006be:	f002 fcb7 	bl	8003030 <vPortSVCHandler>
  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 80006c2:	bd08      	pop	{r3, pc}

080006c4 <DebugMon_Handler>:

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 80006c4:	4770      	bx	lr

080006c6 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 80006c6:	b508      	push	{r3, lr}
  /* USER CODE BEGIN PendSV_IRQn 0 */
  xPortPendSVHandler();
 80006c8:	f002 fce2 	bl	8003090 <xPortPendSVHandler>
  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 80006cc:	bd08      	pop	{r3, pc}

080006ce <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80006ce:	b508      	push	{r3, lr}
  /* USER CODE BEGIN SysTick_IRQn 0 */
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 80006d0:	f002 f8f8 	bl	80028c4 <xTaskGetSchedulerState>
 80006d4:	2801      	cmp	r0, #1
 80006d6:	d102      	bne.n	80006de <SysTick_Handler+0x10>
  {
    xPortSysTickHandler();
  }
  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80006d8:	f000 ffb2 	bl	8001640 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80006dc:	bd08      	pop	{r3, pc}
    xPortSysTickHandler();
 80006de:	f002 fd09 	bl	80030f4 <xPortSysTickHandler>
 80006e2:	e7f9      	b.n	80006d8 <SysTick_Handler+0xa>

080006e4 <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 80006e4:	b508      	push	{r3, lr}
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 80006e6:	4802      	ldr	r0, [pc, #8]	; (80006f0 <USART1_IRQHandler+0xc>)
 80006e8:	f000 fb9e 	bl	8000e28 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 80006ec:	bd08      	pop	{r3, pc}
 80006ee:	bf00      	nop
 80006f0:	20008098 	mulcs	r0, r8, r0

080006f4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80006f4:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 80006f6:	4903      	ldr	r1, [pc, #12]	; (8000704 <Error_Handler+0x10>)
 80006f8:	4803      	ldr	r0, [pc, #12]	; (8000708 <Error_Handler+0x14>)
 80006fa:	f002 fe99 	bl	8003430 <iprintf>
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80006fe:	b672      	cpsid	i
  __disable_irq();
  while (1) {}
 8000700:	e7fe      	b.n	8000700 <Error_Handler+0xc>
 8000702:	bf00      	nop
 8000704:	080044c8 	stmdaeq	r0, {r3, r6, r7, sl, lr}
 8000708:	080044a8 	stmdaeq	r0, {r3, r5, r7, sl, lr}

0800070c <assert_failed>:
  * @param  file: pointer to the source file name
  * @param  line: assert_param error line source number
  * @retval None
  */
void assert_failed(uint8_t *file, uint32_t line)
{
 800070c:	b508      	push	{r3, lr}
  printf("this is %s.\r\n", __func__);
 800070e:	4903      	ldr	r1, [pc, #12]	; (800071c <assert_failed+0x10>)
 8000710:	4803      	ldr	r0, [pc, #12]	; (8000720 <assert_failed+0x14>)
 8000712:	f002 fe8d 	bl	8003430 <iprintf>
 8000716:	b672      	cpsid	i
  __disable_irq();
  while (1) {}
 8000718:	e7fe      	b.n	8000718 <assert_failed+0xc>
 800071a:	bf00      	nop
 800071c:	080044b8 	stmdaeq	r0, {r3, r4, r5, r7, sl, lr}
 8000720:	080044a8 	stmdaeq	r0, {r3, r5, r7, sl, lr}

08000724 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000724:	b084      	sub	sp, #16

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000726:	2200      	movs	r2, #0
 8000728:	9201      	str	r2, [sp, #4]
 800072a:	4b10      	ldr	r3, [pc, #64]	; (800076c <MX_GPIO_Init+0x48>)
 800072c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800072e:	f041 0104 	orr.w	r1, r1, #4
 8000732:	6319      	str	r1, [r3, #48]	; 0x30
 8000734:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000736:	f001 0104 	and.w	r1, r1, #4
 800073a:	9101      	str	r1, [sp, #4]
 800073c:	9901      	ldr	r1, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800073e:	9202      	str	r2, [sp, #8]
 8000740:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8000742:	f041 0180 	orr.w	r1, r1, #128	; 0x80
 8000746:	6319      	str	r1, [r3, #48]	; 0x30
 8000748:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800074a:	f001 0180 	and.w	r1, r1, #128	; 0x80
 800074e:	9102      	str	r1, [sp, #8]
 8000750:	9902      	ldr	r1, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000752:	9203      	str	r2, [sp, #12]
 8000754:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000756:	f042 0201 	orr.w	r2, r2, #1
 800075a:	631a      	str	r2, [r3, #48]	; 0x30
 800075c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800075e:	f003 0301 	and.w	r3, r3, #1
 8000762:	9303      	str	r3, [sp, #12]
 8000764:	9b03      	ldr	r3, [sp, #12]

}
 8000766:	b004      	add	sp, #16
 8000768:	4770      	bx	lr
 800076a:	bf00      	nop
 800076c:	40023800 	andmi	r3, r2, r0, lsl #16

08000770 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8000770:	b508      	push	{r3, lr}
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8000772:	480a      	ldr	r0, [pc, #40]	; (800079c <MX_USART1_UART_Init+0x2c>)
 8000774:	4b0a      	ldr	r3, [pc, #40]	; (80007a0 <MX_USART1_UART_Init+0x30>)
 8000776:	6003      	str	r3, [r0, #0]
  huart1.Init.BaudRate = 115200;
 8000778:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 800077c:	6043      	str	r3, [r0, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800077e:	2300      	movs	r3, #0
 8000780:	6083      	str	r3, [r0, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8000782:	60c3      	str	r3, [r0, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8000784:	6103      	str	r3, [r0, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8000786:	220c      	movs	r2, #12
 8000788:	6142      	str	r2, [r0, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800078a:	6183      	str	r3, [r0, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 800078c:	61c3      	str	r3, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800078e:	f000 f9c3 	bl	8000b18 <HAL_UART_Init>
 8000792:	b900      	cbnz	r0, 8000796 <MX_USART1_UART_Init+0x26>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8000794:	bd08      	pop	{r3, pc}
    Error_Handler();
 8000796:	f7ff ffad 	bl	80006f4 <Error_Handler>
}
 800079a:	e7fb      	b.n	8000794 <MX_USART1_UART_Init+0x24>
 800079c:	20008098 	mulcs	r0, r8, r0
 80007a0:	40011000 	andmi	r1, r1, r0

080007a4 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80007a4:	b510      	push	{r4, lr}
 80007a6:	b088      	sub	sp, #32

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80007a8:	2300      	movs	r3, #0
 80007aa:	9303      	str	r3, [sp, #12]
 80007ac:	9304      	str	r3, [sp, #16]
 80007ae:	9305      	str	r3, [sp, #20]
 80007b0:	9306      	str	r3, [sp, #24]
 80007b2:	9307      	str	r3, [sp, #28]
  if(uartHandle->Instance==USART1)
 80007b4:	6802      	ldr	r2, [r0, #0]
 80007b6:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 80007ba:	f503 3388 	add.w	r3, r3, #69632	; 0x11000
 80007be:	429a      	cmp	r2, r3
 80007c0:	d001      	beq.n	80007c6 <HAL_UART_MspInit+0x22>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 80007c2:	b008      	add	sp, #32
 80007c4:	bd10      	pop	{r4, pc}
    __HAL_RCC_USART1_CLK_ENABLE();
 80007c6:	2400      	movs	r4, #0
 80007c8:	9401      	str	r4, [sp, #4]
 80007ca:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 80007ce:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80007d0:	f042 0210 	orr.w	r2, r2, #16
 80007d4:	645a      	str	r2, [r3, #68]	; 0x44
 80007d6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80007d8:	f002 0210 	and.w	r2, r2, #16
 80007dc:	9201      	str	r2, [sp, #4]
 80007de:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80007e0:	9402      	str	r4, [sp, #8]
 80007e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80007e4:	f042 0201 	orr.w	r2, r2, #1
 80007e8:	631a      	str	r2, [r3, #48]	; 0x30
 80007ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80007ec:	f003 0301 	and.w	r3, r3, #1
 80007f0:	9302      	str	r3, [sp, #8]
 80007f2:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 80007f4:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80007f8:	9303      	str	r3, [sp, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80007fa:	2302      	movs	r3, #2
 80007fc:	9304      	str	r3, [sp, #16]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80007fe:	2303      	movs	r3, #3
 8000800:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8000802:	2307      	movs	r3, #7
 8000804:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000806:	a903      	add	r1, sp, #12
 8000808:	4805      	ldr	r0, [pc, #20]	; (8000820 <HAL_UART_MspInit+0x7c>)
 800080a:	f000 fc77 	bl	80010fc <HAL_GPIO_Init>
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 800080e:	4622      	mov	r2, r4
 8000810:	4621      	mov	r1, r4
 8000812:	2025      	movs	r0, #37	; 0x25
 8000814:	f000 fe62 	bl	80014dc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8000818:	2025      	movs	r0, #37	; 0x25
 800081a:	f000 fea5 	bl	8001568 <HAL_NVIC_EnableIRQ>
}
 800081e:	e7d0      	b.n	80007c2 <HAL_UART_MspInit+0x1e>
 8000820:	40020000 	andmi	r0, r2, r0

08000824 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000824:	b082      	sub	sp, #8

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8000826:	2100      	movs	r1, #0
 8000828:	9100      	str	r1, [sp, #0]
 800082a:	4b0b      	ldr	r3, [pc, #44]	; (8000858 <HAL_MspInit+0x34>)
 800082c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800082e:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8000832:	645a      	str	r2, [r3, #68]	; 0x44
 8000834:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000836:	f402 4280 	and.w	r2, r2, #16384	; 0x4000
 800083a:	9200      	str	r2, [sp, #0]
 800083c:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800083e:	9101      	str	r1, [sp, #4]
 8000840:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000842:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8000846:	641a      	str	r2, [r3, #64]	; 0x40
 8000848:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800084a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800084e:	9301      	str	r3, [sp, #4]
 8000850:	9b01      	ldr	r3, [sp, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000852:	b002      	add	sp, #8
 8000854:	4770      	bx	lr
 8000856:	bf00      	nop
 8000858:	40023800 	andmi	r3, r2, r0, lsl #16

0800085c <UART_EndRxTransfer>:
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800085c:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800085e:	f102 030c 	add.w	r3, r2, #12
 8000862:	e853 3f00 	ldrex	r3, [r3]
 8000866:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800086a:	320c      	adds	r2, #12
 800086c:	e842 3100 	strex	r1, r3, [r2]
 8000870:	2900      	cmp	r1, #0
 8000872:	d1f3      	bne.n	800085c <UART_EndRxTransfer>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8000874:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000876:	f102 0314 	add.w	r3, r2, #20
 800087a:	e853 3f00 	ldrex	r3, [r3]
 800087e:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000882:	3214      	adds	r2, #20
 8000884:	e842 3100 	strex	r1, r3, [r2]
 8000888:	2900      	cmp	r1, #0
 800088a:	d1f3      	bne.n	8000874 <UART_EndRxTransfer+0x18>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800088c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800088e:	2b01      	cmp	r3, #1
 8000890:	d005      	beq.n	800089e <UART_EndRxTransfer+0x42>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 8000892:	2320      	movs	r3, #32
 8000894:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8000898:	2300      	movs	r3, #0
 800089a:	6303      	str	r3, [r0, #48]	; 0x30
}
 800089c:	4770      	bx	lr
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800089e:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 80008a0:	f102 030c 	add.w	r3, r2, #12
 80008a4:	e853 3f00 	ldrex	r3, [r3]
 80008a8:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 80008ac:	320c      	adds	r2, #12
 80008ae:	e842 3100 	strex	r1, r3, [r2]
 80008b2:	2900      	cmp	r1, #0
 80008b4:	d1f3      	bne.n	800089e <UART_EndRxTransfer+0x42>
 80008b6:	e7ec      	b.n	8000892 <UART_EndRxTransfer+0x36>

080008b8 <UART_Transmit_IT>:
static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
{
  const uint16_t *tmp;

  /* Check that a Tx process is ongoing */
  if (huart->gState == HAL_UART_STATE_BUSY_TX)
 80008b8:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 80008bc:	b2db      	uxtb	r3, r3
 80008be:	2b21      	cmp	r3, #33	; 0x21
 80008c0:	d001      	beq.n	80008c6 <UART_Transmit_IT+0xe>
    }
    return HAL_OK;
  }
  else
  {
    return HAL_BUSY;
 80008c2:	2002      	movs	r0, #2
  }
}
 80008c4:	4770      	bx	lr
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80008c6:	6883      	ldr	r3, [r0, #8]
 80008c8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80008cc:	d017      	beq.n	80008fe <UART_Transmit_IT+0x46>
      huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 80008ce:	6a03      	ldr	r3, [r0, #32]
 80008d0:	1c5a      	adds	r2, r3, #1
 80008d2:	6202      	str	r2, [r0, #32]
 80008d4:	781a      	ldrb	r2, [r3, #0]
 80008d6:	6803      	ldr	r3, [r0, #0]
 80008d8:	605a      	str	r2, [r3, #4]
    if (--huart->TxXferCount == 0U)
 80008da:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 80008dc:	b29b      	uxth	r3, r3
 80008de:	3b01      	subs	r3, #1
 80008e0:	b29b      	uxth	r3, r3
 80008e2:	84c3      	strh	r3, [r0, #38]	; 0x26
 80008e4:	b94b      	cbnz	r3, 80008fa <UART_Transmit_IT+0x42>
      __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 80008e6:	6802      	ldr	r2, [r0, #0]
 80008e8:	68d3      	ldr	r3, [r2, #12]
 80008ea:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80008ee:	60d3      	str	r3, [r2, #12]
      __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 80008f0:	6802      	ldr	r2, [r0, #0]
 80008f2:	68d3      	ldr	r3, [r2, #12]
 80008f4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80008f8:	60d3      	str	r3, [r2, #12]
    return HAL_OK;
 80008fa:	2000      	movs	r0, #0
 80008fc:	4770      	bx	lr
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 80008fe:	6903      	ldr	r3, [r0, #16]
 8000900:	2b00      	cmp	r3, #0
 8000902:	d1e4      	bne.n	80008ce <UART_Transmit_IT+0x16>
      tmp = (const uint16_t *) huart->pTxBuffPtr;
 8000904:	6a03      	ldr	r3, [r0, #32]
      huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8000906:	881b      	ldrh	r3, [r3, #0]
 8000908:	6802      	ldr	r2, [r0, #0]
 800090a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800090e:	6053      	str	r3, [r2, #4]
      huart->pTxBuffPtr += 2U;
 8000910:	6a03      	ldr	r3, [r0, #32]
 8000912:	3302      	adds	r3, #2
 8000914:	6203      	str	r3, [r0, #32]
 8000916:	e7e0      	b.n	80008da <UART_Transmit_IT+0x22>

08000918 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8000918:	b538      	push	{r3, r4, r5, lr}
 800091a:	4604      	mov	r4, r0
  uint32_t tmpreg;
  uint32_t pclk;

  /* Check the parameters */
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 800091c:	6842      	ldr	r2, [r0, #4]
 800091e:	4b57      	ldr	r3, [pc, #348]	; (8000a7c <UART_SetConfig+0x164>)
 8000920:	429a      	cmp	r2, r3
 8000922:	d83f      	bhi.n	80009a4 <UART_SetConfig+0x8c>
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 8000924:	68e3      	ldr	r3, [r4, #12]
 8000926:	b113      	cbz	r3, 800092e <UART_SetConfig+0x16>
 8000928:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800092c:	d140      	bne.n	80009b0 <UART_SetConfig+0x98>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 800092e:	6923      	ldr	r3, [r4, #16]
 8000930:	b12b      	cbz	r3, 800093e <UART_SetConfig+0x26>
 8000932:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8000936:	d002      	beq.n	800093e <UART_SetConfig+0x26>
 8000938:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 800093c:	d13e      	bne.n	80009bc <UART_SetConfig+0xa4>
  assert_param(IS_UART_MODE(huart->Init.Mode));
 800093e:	6963      	ldr	r3, [r4, #20]
 8000940:	f64f 72f3 	movw	r2, #65523	; 0xfff3
 8000944:	4213      	tst	r3, r2
 8000946:	d100      	bne.n	800094a <UART_SetConfig+0x32>
 8000948:	b923      	cbnz	r3, 8000954 <UART_SetConfig+0x3c>
 800094a:	f640 6178 	movw	r1, #3704	; 0xe78
 800094e:	484c      	ldr	r0, [pc, #304]	; (8000a80 <UART_SetConfig+0x168>)
 8000950:	f7ff fedc 	bl	800070c <assert_failed>

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8000954:	6822      	ldr	r2, [r4, #0]
 8000956:	6913      	ldr	r3, [r2, #16]
 8000958:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 800095c:	68e1      	ldr	r1, [r4, #12]
 800095e:	430b      	orrs	r3, r1
 8000960:	6113      	str	r3, [r2, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8000962:	68a3      	ldr	r3, [r4, #8]
 8000964:	6922      	ldr	r2, [r4, #16]
 8000966:	4313      	orrs	r3, r2
 8000968:	6962      	ldr	r2, [r4, #20]
 800096a:	4313      	orrs	r3, r2
 800096c:	69e2      	ldr	r2, [r4, #28]
 800096e:	431a      	orrs	r2, r3
  MODIFY_REG(huart->Instance->CR1,
 8000970:	6821      	ldr	r1, [r4, #0]
 8000972:	68cb      	ldr	r3, [r1, #12]
 8000974:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 8000978:	f023 030c 	bic.w	r3, r3, #12
 800097c:	4313      	orrs	r3, r2
 800097e:	60cb      	str	r3, [r1, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8000980:	6822      	ldr	r2, [r4, #0]
 8000982:	6953      	ldr	r3, [r2, #20]
 8000984:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000988:	69a1      	ldr	r1, [r4, #24]
 800098a:	430b      	orrs	r3, r1
 800098c:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 800098e:	6823      	ldr	r3, [r4, #0]
 8000990:	4a3c      	ldr	r2, [pc, #240]	; (8000a84 <UART_SetConfig+0x16c>)
 8000992:	4293      	cmp	r3, r2
 8000994:	d018      	beq.n	80009c8 <UART_SetConfig+0xb0>
 8000996:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800099a:	4293      	cmp	r3, r2
 800099c:	d014      	beq.n	80009c8 <UART_SetConfig+0xb0>
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 800099e:	f000 fb8d 	bl	80010bc <HAL_RCC_GetPCLK1Freq>
 80009a2:	e013      	b.n	80009cc <UART_SetConfig+0xb4>
  assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
 80009a4:	f640 6175 	movw	r1, #3701	; 0xe75
 80009a8:	4835      	ldr	r0, [pc, #212]	; (8000a80 <UART_SetConfig+0x168>)
 80009aa:	f7ff feaf 	bl	800070c <assert_failed>
 80009ae:	e7b9      	b.n	8000924 <UART_SetConfig+0xc>
  assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
 80009b0:	f640 6176 	movw	r1, #3702	; 0xe76
 80009b4:	4832      	ldr	r0, [pc, #200]	; (8000a80 <UART_SetConfig+0x168>)
 80009b6:	f7ff fea9 	bl	800070c <assert_failed>
 80009ba:	e7b8      	b.n	800092e <UART_SetConfig+0x16>
  assert_param(IS_UART_PARITY(huart->Init.Parity));
 80009bc:	f640 6177 	movw	r1, #3703	; 0xe77
 80009c0:	482f      	ldr	r0, [pc, #188]	; (8000a80 <UART_SetConfig+0x168>)
 80009c2:	f7ff fea3 	bl	800070c <assert_failed>
 80009c6:	e7ba      	b.n	800093e <UART_SetConfig+0x26>
      pclk = HAL_RCC_GetPCLK2Freq();
 80009c8:	f000 fb88 	bl	80010dc <HAL_RCC_GetPCLK2Freq>
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 80009cc:	69e3      	ldr	r3, [r4, #28]
 80009ce:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80009d2:	d029      	beq.n	8000a28 <UART_SetConfig+0x110>
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 80009d4:	2100      	movs	r1, #0
 80009d6:	1803      	adds	r3, r0, r0
 80009d8:	4149      	adcs	r1, r1
 80009da:	181b      	adds	r3, r3, r0
 80009dc:	f141 0100 	adc.w	r1, r1, #0
 80009e0:	00c9      	lsls	r1, r1, #3
 80009e2:	ea41 7153 	orr.w	r1, r1, r3, lsr #29
 80009e6:	00db      	lsls	r3, r3, #3
 80009e8:	1818      	adds	r0, r3, r0
 80009ea:	6863      	ldr	r3, [r4, #4]
 80009ec:	ea4f 0283 	mov.w	r2, r3, lsl #2
 80009f0:	ea4f 7393 	mov.w	r3, r3, lsr #30
 80009f4:	f141 0100 	adc.w	r1, r1, #0
 80009f8:	f7ff fc62 	bl	80002c0 <__aeabi_uldivmod>
 80009fc:	4d22      	ldr	r5, [pc, #136]	; (8000a88 <UART_SetConfig+0x170>)
 80009fe:	fba5 3200 	umull	r3, r2, r5, r0
 8000a02:	0951      	lsrs	r1, r2, #5
 8000a04:	2364      	movs	r3, #100	; 0x64
 8000a06:	fb03 0311 	mls	r3, r3, r1, r0
 8000a0a:	011b      	lsls	r3, r3, #4
 8000a0c:	3332      	adds	r3, #50	; 0x32
 8000a0e:	fba5 2303 	umull	r2, r3, r5, r3
 8000a12:	095b      	lsrs	r3, r3, #5
 8000a14:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8000a18:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8000a1c:	f003 030f 	and.w	r3, r3, #15
 8000a20:	6821      	ldr	r1, [r4, #0]
 8000a22:	4413      	add	r3, r2
 8000a24:	608b      	str	r3, [r1, #8]
  }
}
 8000a26:	bd38      	pop	{r3, r4, r5, pc}
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8000a28:	2300      	movs	r3, #0
 8000a2a:	1802      	adds	r2, r0, r0
 8000a2c:	eb43 0103 	adc.w	r1, r3, r3
 8000a30:	1812      	adds	r2, r2, r0
 8000a32:	f141 0100 	adc.w	r1, r1, #0
 8000a36:	00c9      	lsls	r1, r1, #3
 8000a38:	ea41 7152 	orr.w	r1, r1, r2, lsr #29
 8000a3c:	00d2      	lsls	r2, r2, #3
 8000a3e:	1810      	adds	r0, r2, r0
 8000a40:	f141 0100 	adc.w	r1, r1, #0
 8000a44:	6862      	ldr	r2, [r4, #4]
 8000a46:	1892      	adds	r2, r2, r2
 8000a48:	415b      	adcs	r3, r3
 8000a4a:	f7ff fc39 	bl	80002c0 <__aeabi_uldivmod>
 8000a4e:	4d0e      	ldr	r5, [pc, #56]	; (8000a88 <UART_SetConfig+0x170>)
 8000a50:	fba5 3200 	umull	r3, r2, r5, r0
 8000a54:	0951      	lsrs	r1, r2, #5
 8000a56:	2364      	movs	r3, #100	; 0x64
 8000a58:	fb03 0311 	mls	r3, r3, r1, r0
 8000a5c:	00db      	lsls	r3, r3, #3
 8000a5e:	3332      	adds	r3, #50	; 0x32
 8000a60:	fba5 2303 	umull	r2, r3, r5, r3
 8000a64:	095b      	lsrs	r3, r3, #5
 8000a66:	005a      	lsls	r2, r3, #1
 8000a68:	f402 72f8 	and.w	r2, r2, #496	; 0x1f0
 8000a6c:	eb02 1201 	add.w	r2, r2, r1, lsl #4
 8000a70:	f003 0307 	and.w	r3, r3, #7
 8000a74:	6821      	ldr	r1, [r4, #0]
 8000a76:	4413      	add	r3, r2
 8000a78:	608b      	str	r3, [r1, #8]
 8000a7a:	e7d4      	b.n	8000a26 <UART_SetConfig+0x10e>
 8000a7c:	00a037a0 	adceq	r3, r0, r0, lsr #15
 8000a80:	08004520 	stmdaeq	r0, {r5, r8, sl, lr}
 8000a84:	40011000 	andmi	r1, r1, r0
 8000a88:	51eb851f 	mvnpl	r8, pc, lsl r5

08000a8c <UART_WaitOnFlagUntilTimeout>:
{
 8000a8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8000a90:	b083      	sub	sp, #12
 8000a92:	4605      	mov	r5, r0
 8000a94:	460e      	mov	r6, r1
 8000a96:	4617      	mov	r7, r2
 8000a98:	4699      	mov	r9, r3
 8000a9a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8000a9e:	682c      	ldr	r4, [r5, #0]
 8000aa0:	6824      	ldr	r4, [r4, #0]
 8000aa2:	ea36 0304 	bics.w	r3, r6, r4
 8000aa6:	bf0c      	ite	eq
 8000aa8:	f04f 0c01 	moveq.w	ip, #1
 8000aac:	f04f 0c00 	movne.w	ip, #0
 8000ab0:	45bc      	cmp	ip, r7
 8000ab2:	d128      	bne.n	8000b06 <UART_WaitOnFlagUntilTimeout+0x7a>
    if (Timeout != HAL_MAX_DELAY)
 8000ab4:	f1b8 3fff 	cmp.w	r8, #4294967295	; 0xffffffff
 8000ab8:	d0f1      	beq.n	8000a9e <UART_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8000aba:	f000 fdcd 	bl	8001658 <HAL_GetTick>
 8000abe:	eba0 0009 	sub.w	r0, r0, r9
 8000ac2:	4540      	cmp	r0, r8
 8000ac4:	d823      	bhi.n	8000b0e <UART_WaitOnFlagUntilTimeout+0x82>
 8000ac6:	f1b8 0f00 	cmp.w	r8, #0
 8000aca:	d022      	beq.n	8000b12 <UART_WaitOnFlagUntilTimeout+0x86>
      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 8000acc:	682b      	ldr	r3, [r5, #0]
 8000ace:	68da      	ldr	r2, [r3, #12]
 8000ad0:	f012 0f04 	tst.w	r2, #4
 8000ad4:	d0e3      	beq.n	8000a9e <UART_WaitOnFlagUntilTimeout+0x12>
 8000ad6:	2e80      	cmp	r6, #128	; 0x80
 8000ad8:	d0e1      	beq.n	8000a9e <UART_WaitOnFlagUntilTimeout+0x12>
 8000ada:	2e40      	cmp	r6, #64	; 0x40
 8000adc:	d0df      	beq.n	8000a9e <UART_WaitOnFlagUntilTimeout+0x12>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 8000ade:	681a      	ldr	r2, [r3, #0]
 8000ae0:	f012 0f08 	tst.w	r2, #8
 8000ae4:	d0db      	beq.n	8000a9e <UART_WaitOnFlagUntilTimeout+0x12>
          __HAL_UART_CLEAR_OREFLAG(huart);
 8000ae6:	2400      	movs	r4, #0
 8000ae8:	9401      	str	r4, [sp, #4]
 8000aea:	681a      	ldr	r2, [r3, #0]
 8000aec:	9201      	str	r2, [sp, #4]
 8000aee:	685b      	ldr	r3, [r3, #4]
 8000af0:	9301      	str	r3, [sp, #4]
 8000af2:	9b01      	ldr	r3, [sp, #4]
          UART_EndRxTransfer(huart);
 8000af4:	4628      	mov	r0, r5
 8000af6:	f7ff feb1 	bl	800085c <UART_EndRxTransfer>
          huart->ErrorCode = HAL_UART_ERROR_ORE;
 8000afa:	2308      	movs	r3, #8
 8000afc:	646b      	str	r3, [r5, #68]	; 0x44
          __HAL_UNLOCK(huart);
 8000afe:	f885 4040 	strb.w	r4, [r5, #64]	; 0x40
          return HAL_ERROR;
 8000b02:	2001      	movs	r0, #1
 8000b04:	e000      	b.n	8000b08 <UART_WaitOnFlagUntilTimeout+0x7c>
  return HAL_OK;
 8000b06:	2000      	movs	r0, #0
}
 8000b08:	b003      	add	sp, #12
 8000b0a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
        return HAL_TIMEOUT;
 8000b0e:	2003      	movs	r0, #3
 8000b10:	e7fa      	b.n	8000b08 <UART_WaitOnFlagUntilTimeout+0x7c>
 8000b12:	2003      	movs	r0, #3
 8000b14:	e7f8      	b.n	8000b08 <UART_WaitOnFlagUntilTimeout+0x7c>
	...

08000b18 <HAL_UART_Init>:
  if (huart == NULL)
 8000b18:	2800      	cmp	r0, #0
 8000b1a:	f000 808c 	beq.w	8000c36 <HAL_UART_Init+0x11e>
{
 8000b1e:	b510      	push	{r4, lr}
 8000b20:	4604      	mov	r4, r0
  if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 8000b22:	6983      	ldr	r3, [r0, #24]
 8000b24:	2b00      	cmp	r3, #0
 8000b26:	d056      	beq.n	8000bd6 <HAL_UART_Init+0xbe>
    assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 8000b28:	6803      	ldr	r3, [r0, #0]
 8000b2a:	4a44      	ldr	r2, [pc, #272]	; (8000c3c <HAL_UART_Init+0x124>)
 8000b2c:	4293      	cmp	r3, r2
 8000b2e:	d010      	beq.n	8000b52 <HAL_UART_Init+0x3a>
 8000b30:	f5a2 424c 	sub.w	r2, r2, #52224	; 0xcc00
 8000b34:	4293      	cmp	r3, r2
 8000b36:	d00c      	beq.n	8000b52 <HAL_UART_Init+0x3a>
 8000b38:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000b3c:	4293      	cmp	r3, r2
 8000b3e:	d008      	beq.n	8000b52 <HAL_UART_Init+0x3a>
 8000b40:	f502 424c 	add.w	r2, r2, #52224	; 0xcc00
 8000b44:	4293      	cmp	r3, r2
 8000b46:	d004      	beq.n	8000b52 <HAL_UART_Init+0x3a>
 8000b48:	f240 1173 	movw	r1, #371	; 0x173
 8000b4c:	483c      	ldr	r0, [pc, #240]	; (8000c40 <HAL_UART_Init+0x128>)
 8000b4e:	f7ff fddd 	bl	800070c <assert_failed>
    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 8000b52:	69a3      	ldr	r3, [r4, #24]
 8000b54:	b143      	cbz	r3, 8000b68 <HAL_UART_Init+0x50>
 8000b56:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000b5a:	d005      	beq.n	8000b68 <HAL_UART_Init+0x50>
 8000b5c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000b60:	d002      	beq.n	8000b68 <HAL_UART_Init+0x50>
 8000b62:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8000b66:	d130      	bne.n	8000bca <HAL_UART_Init+0xb2>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 8000b68:	68a3      	ldr	r3, [r4, #8]
 8000b6a:	b113      	cbz	r3, 8000b72 <HAL_UART_Init+0x5a>
 8000b6c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000b70:	d14f      	bne.n	8000c12 <HAL_UART_Init+0xfa>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8000b72:	69e3      	ldr	r3, [r4, #28]
 8000b74:	b113      	cbz	r3, 8000b7c <HAL_UART_Init+0x64>
 8000b76:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8000b7a:	d150      	bne.n	8000c1e <HAL_UART_Init+0x106>
  if (huart->gState == HAL_UART_STATE_RESET)
 8000b7c:	f894 3041 	ldrb.w	r3, [r4, #65]	; 0x41
 8000b80:	2b00      	cmp	r3, #0
 8000b82:	d052      	beq.n	8000c2a <HAL_UART_Init+0x112>
  huart->gState = HAL_UART_STATE_BUSY;
 8000b84:	2324      	movs	r3, #36	; 0x24
 8000b86:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UART_DISABLE(huart);
 8000b8a:	6822      	ldr	r2, [r4, #0]
 8000b8c:	68d3      	ldr	r3, [r2, #12]
 8000b8e:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000b92:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8000b94:	4620      	mov	r0, r4
 8000b96:	f7ff febf 	bl	8000918 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8000b9a:	6822      	ldr	r2, [r4, #0]
 8000b9c:	6913      	ldr	r3, [r2, #16]
 8000b9e:	f423 4390 	bic.w	r3, r3, #18432	; 0x4800
 8000ba2:	6113      	str	r3, [r2, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8000ba4:	6822      	ldr	r2, [r4, #0]
 8000ba6:	6953      	ldr	r3, [r2, #20]
 8000ba8:	f023 032a 	bic.w	r3, r3, #42	; 0x2a
 8000bac:	6153      	str	r3, [r2, #20]
  __HAL_UART_ENABLE(huart);
 8000bae:	6822      	ldr	r2, [r4, #0]
 8000bb0:	68d3      	ldr	r3, [r2, #12]
 8000bb2:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000bb6:	60d3      	str	r3, [r2, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000bb8:	2000      	movs	r0, #0
 8000bba:	6460      	str	r0, [r4, #68]	; 0x44
  huart->gState = HAL_UART_STATE_READY;
 8000bbc:	2320      	movs	r3, #32
 8000bbe:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  huart->RxState = HAL_UART_STATE_READY;
 8000bc2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 8000bc6:	6360      	str	r0, [r4, #52]	; 0x34
}
 8000bc8:	bd10      	pop	{r4, pc}
    assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 8000bca:	f44f 71ba 	mov.w	r1, #372	; 0x174
 8000bce:	481c      	ldr	r0, [pc, #112]	; (8000c40 <HAL_UART_Init+0x128>)
 8000bd0:	f7ff fd9c 	bl	800070c <assert_failed>
 8000bd4:	e7c8      	b.n	8000b68 <HAL_UART_Init+0x50>
    assert_param(IS_UART_INSTANCE(huart->Instance));
 8000bd6:	6803      	ldr	r3, [r0, #0]
 8000bd8:	4a18      	ldr	r2, [pc, #96]	; (8000c3c <HAL_UART_Init+0x124>)
 8000bda:	4293      	cmp	r3, r2
 8000bdc:	d0c4      	beq.n	8000b68 <HAL_UART_Init+0x50>
 8000bde:	f5a2 424c 	sub.w	r2, r2, #52224	; 0xcc00
 8000be2:	4293      	cmp	r3, r2
 8000be4:	d0c0      	beq.n	8000b68 <HAL_UART_Init+0x50>
 8000be6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000bea:	4293      	cmp	r3, r2
 8000bec:	d0bc      	beq.n	8000b68 <HAL_UART_Init+0x50>
 8000bee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000bf2:	4293      	cmp	r3, r2
 8000bf4:	d0b8      	beq.n	8000b68 <HAL_UART_Init+0x50>
 8000bf6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8000bfa:	4293      	cmp	r3, r2
 8000bfc:	d0b4      	beq.n	8000b68 <HAL_UART_Init+0x50>
 8000bfe:	f502 4244 	add.w	r2, r2, #50176	; 0xc400
 8000c02:	4293      	cmp	r3, r2
 8000c04:	d0b0      	beq.n	8000b68 <HAL_UART_Init+0x50>
 8000c06:	f44f 71bc 	mov.w	r1, #376	; 0x178
 8000c0a:	480d      	ldr	r0, [pc, #52]	; (8000c40 <HAL_UART_Init+0x128>)
 8000c0c:	f7ff fd7e 	bl	800070c <assert_failed>
 8000c10:	e7aa      	b.n	8000b68 <HAL_UART_Init+0x50>
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 8000c12:	f44f 71bd 	mov.w	r1, #378	; 0x17a
 8000c16:	480a      	ldr	r0, [pc, #40]	; (8000c40 <HAL_UART_Init+0x128>)
 8000c18:	f7ff fd78 	bl	800070c <assert_failed>
 8000c1c:	e7a9      	b.n	8000b72 <HAL_UART_Init+0x5a>
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 8000c1e:	f240 117b 	movw	r1, #379	; 0x17b
 8000c22:	4807      	ldr	r0, [pc, #28]	; (8000c40 <HAL_UART_Init+0x128>)
 8000c24:	f7ff fd72 	bl	800070c <assert_failed>
 8000c28:	e7a8      	b.n	8000b7c <HAL_UART_Init+0x64>
    huart->Lock = HAL_UNLOCKED;
 8000c2a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
    HAL_UART_MspInit(huart);
 8000c2e:	4620      	mov	r0, r4
 8000c30:	f7ff fdb8 	bl	80007a4 <HAL_UART_MspInit>
 8000c34:	e7a6      	b.n	8000b84 <HAL_UART_Init+0x6c>
    return HAL_ERROR;
 8000c36:	2001      	movs	r0, #1
}
 8000c38:	4770      	bx	lr
 8000c3a:	bf00      	nop
 8000c3c:	40011000 	andmi	r1, r1, r0
 8000c40:	08004520 	stmdaeq	r0, {r5, r8, sl, lr}

08000c44 <HAL_UART_Transmit>:
{
 8000c44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c48:	b082      	sub	sp, #8
 8000c4a:	461e      	mov	r6, r3
  if (huart->gState == HAL_UART_STATE_READY)
 8000c4c:	f890 3041 	ldrb.w	r3, [r0, #65]	; 0x41
 8000c50:	b2db      	uxtb	r3, r3
 8000c52:	2b20      	cmp	r3, #32
 8000c54:	d156      	bne.n	8000d04 <HAL_UART_Transmit+0xc0>
 8000c56:	4604      	mov	r4, r0
 8000c58:	460d      	mov	r5, r1
 8000c5a:	4690      	mov	r8, r2
    if ((pData == NULL) || (Size == 0U))
 8000c5c:	2900      	cmp	r1, #0
 8000c5e:	d055      	beq.n	8000d0c <HAL_UART_Transmit+0xc8>
 8000c60:	b90a      	cbnz	r2, 8000c66 <HAL_UART_Transmit+0x22>
      return  HAL_ERROR;
 8000c62:	2001      	movs	r0, #1
 8000c64:	e04f      	b.n	8000d06 <HAL_UART_Transmit+0xc2>
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000c66:	2300      	movs	r3, #0
 8000c68:	6443      	str	r3, [r0, #68]	; 0x44
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8000c6a:	2321      	movs	r3, #33	; 0x21
 8000c6c:	f880 3041 	strb.w	r3, [r0, #65]	; 0x41
    tickstart = HAL_GetTick();
 8000c70:	f000 fcf2 	bl	8001658 <HAL_GetTick>
 8000c74:	4607      	mov	r7, r0
    huart->TxXferSize = Size;
 8000c76:	f8a4 8024 	strh.w	r8, [r4, #36]	; 0x24
    huart->TxXferCount = Size;
 8000c7a:	f8a4 8026 	strh.w	r8, [r4, #38]	; 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000c7e:	68a3      	ldr	r3, [r4, #8]
 8000c80:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000c84:	d002      	beq.n	8000c8c <HAL_UART_Transmit+0x48>
      pdata16bits = NULL;
 8000c86:	f04f 0800 	mov.w	r8, #0
 8000c8a:	e014      	b.n	8000cb6 <HAL_UART_Transmit+0x72>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000c8c:	6923      	ldr	r3, [r4, #16]
 8000c8e:	b32b      	cbz	r3, 8000cdc <HAL_UART_Transmit+0x98>
      pdata16bits = NULL;
 8000c90:	f04f 0800 	mov.w	r8, #0
 8000c94:	e00f      	b.n	8000cb6 <HAL_UART_Transmit+0x72>
        huart->gState = HAL_UART_STATE_READY;
 8000c96:	2320      	movs	r3, #32
 8000c98:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        return HAL_TIMEOUT;
 8000c9c:	2003      	movs	r0, #3
 8000c9e:	e032      	b.n	8000d06 <HAL_UART_Transmit+0xc2>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8000ca0:	f838 3b02 	ldrh.w	r3, [r8], #2
 8000ca4:	6822      	ldr	r2, [r4, #0]
 8000ca6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000caa:	6053      	str	r3, [r2, #4]
      huart->TxXferCount--;
 8000cac:	8ce2      	ldrh	r2, [r4, #38]	; 0x26
 8000cae:	b292      	uxth	r2, r2
 8000cb0:	3a01      	subs	r2, #1
 8000cb2:	b292      	uxth	r2, r2
 8000cb4:	84e2      	strh	r2, [r4, #38]	; 0x26
    while (huart->TxXferCount > 0U)
 8000cb6:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 8000cb8:	b29b      	uxth	r3, r3
 8000cba:	b193      	cbz	r3, 8000ce2 <HAL_UART_Transmit+0x9e>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8000cbc:	9600      	str	r6, [sp, #0]
 8000cbe:	463b      	mov	r3, r7
 8000cc0:	2200      	movs	r2, #0
 8000cc2:	2180      	movs	r1, #128	; 0x80
 8000cc4:	4620      	mov	r0, r4
 8000cc6:	f7ff fee1 	bl	8000a8c <UART_WaitOnFlagUntilTimeout>
 8000cca:	2800      	cmp	r0, #0
 8000ccc:	d1e3      	bne.n	8000c96 <HAL_UART_Transmit+0x52>
      if (pdata8bits == NULL)
 8000cce:	2d00      	cmp	r5, #0
 8000cd0:	d0e6      	beq.n	8000ca0 <HAL_UART_Transmit+0x5c>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8000cd2:	f815 2b01 	ldrb.w	r2, [r5], #1
 8000cd6:	6823      	ldr	r3, [r4, #0]
 8000cd8:	605a      	str	r2, [r3, #4]
        pdata8bits++;
 8000cda:	e7e7      	b.n	8000cac <HAL_UART_Transmit+0x68>
      pdata16bits = (const uint16_t *) pData;
 8000cdc:	46a8      	mov	r8, r5
      pdata8bits  = NULL;
 8000cde:	2500      	movs	r5, #0
 8000ce0:	e7e9      	b.n	8000cb6 <HAL_UART_Transmit+0x72>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8000ce2:	9600      	str	r6, [sp, #0]
 8000ce4:	463b      	mov	r3, r7
 8000ce6:	2200      	movs	r2, #0
 8000ce8:	2140      	movs	r1, #64	; 0x40
 8000cea:	4620      	mov	r0, r4
 8000cec:	f7ff fece 	bl	8000a8c <UART_WaitOnFlagUntilTimeout>
 8000cf0:	b918      	cbnz	r0, 8000cfa <HAL_UART_Transmit+0xb6>
    huart->gState = HAL_UART_STATE_READY;
 8000cf2:	2320      	movs	r3, #32
 8000cf4:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
    return HAL_OK;
 8000cf8:	e005      	b.n	8000d06 <HAL_UART_Transmit+0xc2>
      huart->gState = HAL_UART_STATE_READY;
 8000cfa:	2320      	movs	r3, #32
 8000cfc:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
      return HAL_TIMEOUT;
 8000d00:	2003      	movs	r0, #3
 8000d02:	e000      	b.n	8000d06 <HAL_UART_Transmit+0xc2>
    return HAL_BUSY;
 8000d04:	2002      	movs	r0, #2
}
 8000d06:	b002      	add	sp, #8
 8000d08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      return  HAL_ERROR;
 8000d0c:	2001      	movs	r0, #1
 8000d0e:	e7fa      	b.n	8000d06 <HAL_UART_Transmit+0xc2>

08000d10 <HAL_UART_TxCpltCallback>:
}
 8000d10:	4770      	bx	lr

08000d12 <UART_EndTransmit_IT>:
{
 8000d12:	b508      	push	{r3, lr}
  __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8000d14:	6801      	ldr	r1, [r0, #0]
 8000d16:	68ca      	ldr	r2, [r1, #12]
 8000d18:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8000d1c:	60ca      	str	r2, [r1, #12]
  huart->gState = HAL_UART_STATE_READY;
 8000d1e:	2220      	movs	r2, #32
 8000d20:	f880 2041 	strb.w	r2, [r0, #65]	; 0x41
  HAL_UART_TxCpltCallback(huart);
 8000d24:	f7ff fff4 	bl	8000d10 <HAL_UART_TxCpltCallback>
}
 8000d28:	2000      	movs	r0, #0
 8000d2a:	bd08      	pop	{r3, pc}

08000d2c <HAL_UART_RxCpltCallback>:
}
 8000d2c:	4770      	bx	lr

08000d2e <HAL_UART_ErrorCallback>:
}
 8000d2e:	4770      	bx	lr

08000d30 <UART_DMAAbortOnError>:
{
 8000d30:	b508      	push	{r3, lr}
  UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8000d32:	6b80      	ldr	r0, [r0, #56]	; 0x38
  huart->RxXferCount = 0x00U;
 8000d34:	2300      	movs	r3, #0
 8000d36:	85c3      	strh	r3, [r0, #46]	; 0x2e
  huart->TxXferCount = 0x00U;
 8000d38:	84c3      	strh	r3, [r0, #38]	; 0x26
  HAL_UART_ErrorCallback(huart);
 8000d3a:	f7ff fff8 	bl	8000d2e <HAL_UART_ErrorCallback>
}
 8000d3e:	bd08      	pop	{r3, pc}

08000d40 <HAL_UARTEx_RxEventCallback>:
}
 8000d40:	4770      	bx	lr

08000d42 <UART_Receive_IT>:
  if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8000d42:	f890 3042 	ldrb.w	r3, [r0, #66]	; 0x42
 8000d46:	b2db      	uxtb	r3, r3
 8000d48:	2b22      	cmp	r3, #34	; 0x22
 8000d4a:	d169      	bne.n	8000e20 <UART_Receive_IT+0xde>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000d4c:	6883      	ldr	r3, [r0, #8]
 8000d4e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000d52:	d04f      	beq.n	8000df4 <UART_Receive_IT+0xb2>
      pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 8000d54:	6a82      	ldr	r2, [r0, #40]	; 0x28
      if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 8000d56:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8000d5a:	d004      	beq.n	8000d66 <UART_Receive_IT+0x24>
 8000d5c:	2b00      	cmp	r3, #0
 8000d5e:	d156      	bne.n	8000e0e <UART_Receive_IT+0xcc>
 8000d60:	6903      	ldr	r3, [r0, #16]
 8000d62:	2b00      	cmp	r3, #0
 8000d64:	d153      	bne.n	8000e0e <UART_Receive_IT+0xcc>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8000d66:	6803      	ldr	r3, [r0, #0]
 8000d68:	685b      	ldr	r3, [r3, #4]
 8000d6a:	7013      	strb	r3, [r2, #0]
      huart->pRxBuffPtr += 1U;
 8000d6c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000d6e:	3301      	adds	r3, #1
 8000d70:	6283      	str	r3, [r0, #40]	; 0x28
    if (--huart->RxXferCount == 0U)
 8000d72:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 8000d74:	b29b      	uxth	r3, r3
 8000d76:	3b01      	subs	r3, #1
 8000d78:	b29b      	uxth	r3, r3
 8000d7a:	85c3      	strh	r3, [r0, #46]	; 0x2e
 8000d7c:	2b00      	cmp	r3, #0
 8000d7e:	d151      	bne.n	8000e24 <UART_Receive_IT+0xe2>
{
 8000d80:	b500      	push	{lr}
 8000d82:	b083      	sub	sp, #12
      __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 8000d84:	6802      	ldr	r2, [r0, #0]
 8000d86:	68d3      	ldr	r3, [r2, #12]
 8000d88:	f023 0320 	bic.w	r3, r3, #32
 8000d8c:	60d3      	str	r3, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 8000d8e:	6802      	ldr	r2, [r0, #0]
 8000d90:	68d3      	ldr	r3, [r2, #12]
 8000d92:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000d96:	60d3      	str	r3, [r2, #12]
      __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 8000d98:	6802      	ldr	r2, [r0, #0]
 8000d9a:	6953      	ldr	r3, [r2, #20]
 8000d9c:	f023 0301 	bic.w	r3, r3, #1
 8000da0:	6153      	str	r3, [r2, #20]
      huart->RxState = HAL_UART_STATE_READY;
 8000da2:	2320      	movs	r3, #32
 8000da4:	f880 3042 	strb.w	r3, [r0, #66]	; 0x42
      huart->RxEventType = HAL_UART_RXEVENT_TC;
 8000da8:	2300      	movs	r3, #0
 8000daa:	6343      	str	r3, [r0, #52]	; 0x34
      if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8000dac:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8000dae:	2b01      	cmp	r3, #1
 8000db0:	d133      	bne.n	8000e1a <UART_Receive_IT+0xd8>
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8000db2:	2300      	movs	r3, #0
 8000db4:	6303      	str	r3, [r0, #48]	; 0x30
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8000db6:	6802      	ldr	r2, [r0, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000db8:	f102 030c 	add.w	r3, r2, #12
 8000dbc:	e853 3f00 	ldrex	r3, [r3]
 8000dc0:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000dc4:	320c      	adds	r2, #12
 8000dc6:	e842 3100 	strex	r1, r3, [r2]
 8000dca:	2900      	cmp	r1, #0
 8000dcc:	d1f3      	bne.n	8000db6 <UART_Receive_IT+0x74>
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 8000dce:	6803      	ldr	r3, [r0, #0]
 8000dd0:	681a      	ldr	r2, [r3, #0]
 8000dd2:	f012 0f10 	tst.w	r2, #16
 8000dd6:	d006      	beq.n	8000de6 <UART_Receive_IT+0xa4>
          __HAL_UART_CLEAR_IDLEFLAG(huart);
 8000dd8:	2200      	movs	r2, #0
 8000dda:	9201      	str	r2, [sp, #4]
 8000ddc:	681a      	ldr	r2, [r3, #0]
 8000dde:	9201      	str	r2, [sp, #4]
 8000de0:	685b      	ldr	r3, [r3, #4]
 8000de2:	9301      	str	r3, [sp, #4]
 8000de4:	9b01      	ldr	r3, [sp, #4]
        HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 8000de6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 8000de8:	f7ff ffaa 	bl	8000d40 <HAL_UARTEx_RxEventCallback>
      return HAL_OK;
 8000dec:	2000      	movs	r0, #0
}
 8000dee:	b003      	add	sp, #12
 8000df0:	f85d fb04 	ldr.w	pc, [sp], #4
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8000df4:	6902      	ldr	r2, [r0, #16]
 8000df6:	2a00      	cmp	r2, #0
 8000df8:	d1ac      	bne.n	8000d54 <UART_Receive_IT+0x12>
      pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 8000dfa:	6a82      	ldr	r2, [r0, #40]	; 0x28
      *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8000dfc:	6803      	ldr	r3, [r0, #0]
 8000dfe:	685b      	ldr	r3, [r3, #4]
 8000e00:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000e04:	8013      	strh	r3, [r2, #0]
      huart->pRxBuffPtr += 2U;
 8000e06:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8000e08:	3302      	adds	r3, #2
 8000e0a:	6283      	str	r3, [r0, #40]	; 0x28
 8000e0c:	e7b1      	b.n	8000d72 <UART_Receive_IT+0x30>
        *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8000e0e:	6803      	ldr	r3, [r0, #0]
 8000e10:	685b      	ldr	r3, [r3, #4]
 8000e12:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8000e16:	7013      	strb	r3, [r2, #0]
 8000e18:	e7a8      	b.n	8000d6c <UART_Receive_IT+0x2a>
        HAL_UART_RxCpltCallback(huart);
 8000e1a:	f7ff ff87 	bl	8000d2c <HAL_UART_RxCpltCallback>
 8000e1e:	e7e5      	b.n	8000dec <UART_Receive_IT+0xaa>
    return HAL_BUSY;
 8000e20:	2002      	movs	r0, #2
 8000e22:	4770      	bx	lr
    return HAL_OK;
 8000e24:	2000      	movs	r0, #0
}
 8000e26:	4770      	bx	lr

08000e28 <HAL_UART_IRQHandler>:
{
 8000e28:	b530      	push	{r4, r5, lr}
 8000e2a:	b083      	sub	sp, #12
 8000e2c:	4604      	mov	r4, r0
  uint32_t isrflags   = READ_REG(huart->Instance->SR);
 8000e2e:	6802      	ldr	r2, [r0, #0]
 8000e30:	6813      	ldr	r3, [r2, #0]
  uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 8000e32:	68d0      	ldr	r0, [r2, #12]
  uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 8000e34:	6951      	ldr	r1, [r2, #20]
  if (errorflags == RESET)
 8000e36:	f013 050f 	ands.w	r5, r3, #15
 8000e3a:	d105      	bne.n	8000e48 <HAL_UART_IRQHandler+0x20>
    if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8000e3c:	f013 0f20 	tst.w	r3, #32
 8000e40:	d002      	beq.n	8000e48 <HAL_UART_IRQHandler+0x20>
 8000e42:	f010 0f20 	tst.w	r0, #32
 8000e46:	d119      	bne.n	8000e7c <HAL_UART_IRQHandler+0x54>
  if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 8000e48:	b12d      	cbz	r5, 8000e56 <HAL_UART_IRQHandler+0x2e>
 8000e4a:	f011 0101 	ands.w	r1, r1, #1
 8000e4e:	d119      	bne.n	8000e84 <HAL_UART_IRQHandler+0x5c>
                                || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 8000e50:	f410 7f90 	tst.w	r0, #288	; 0x120
 8000e54:	d116      	bne.n	8000e84 <HAL_UART_IRQHandler+0x5c>
  if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8000e56:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8000e58:	2901      	cmp	r1, #1
 8000e5a:	d07d      	beq.n	8000f58 <HAL_UART_IRQHandler+0x130>
  if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 8000e5c:	f013 0f80 	tst.w	r3, #128	; 0x80
 8000e60:	d003      	beq.n	8000e6a <HAL_UART_IRQHandler+0x42>
 8000e62:	f010 0f80 	tst.w	r0, #128	; 0x80
 8000e66:	f040 8119 	bne.w	800109c <HAL_UART_IRQHandler+0x274>
  if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 8000e6a:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000e6e:	d003      	beq.n	8000e78 <HAL_UART_IRQHandler+0x50>
 8000e70:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000e74:	f040 8116 	bne.w	80010a4 <HAL_UART_IRQHandler+0x27c>
}
 8000e78:	b003      	add	sp, #12
 8000e7a:	bd30      	pop	{r4, r5, pc}
      UART_Receive_IT(huart);
 8000e7c:	4620      	mov	r0, r4
 8000e7e:	f7ff ff60 	bl	8000d42 <UART_Receive_IT>
      return;
 8000e82:	e7f9      	b.n	8000e78 <HAL_UART_IRQHandler+0x50>
    if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 8000e84:	f013 0f01 	tst.w	r3, #1
 8000e88:	d006      	beq.n	8000e98 <HAL_UART_IRQHandler+0x70>
 8000e8a:	f410 7f80 	tst.w	r0, #256	; 0x100
 8000e8e:	d003      	beq.n	8000e98 <HAL_UART_IRQHandler+0x70>
      huart->ErrorCode |= HAL_UART_ERROR_PE;
 8000e90:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000e92:	f042 0201 	orr.w	r2, r2, #1
 8000e96:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8000e98:	f013 0f04 	tst.w	r3, #4
 8000e9c:	d004      	beq.n	8000ea8 <HAL_UART_IRQHandler+0x80>
 8000e9e:	b119      	cbz	r1, 8000ea8 <HAL_UART_IRQHandler+0x80>
      huart->ErrorCode |= HAL_UART_ERROR_NE;
 8000ea0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000ea2:	f042 0202 	orr.w	r2, r2, #2
 8000ea6:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 8000ea8:	f013 0f02 	tst.w	r3, #2
 8000eac:	d004      	beq.n	8000eb8 <HAL_UART_IRQHandler+0x90>
 8000eae:	b119      	cbz	r1, 8000eb8 <HAL_UART_IRQHandler+0x90>
      huart->ErrorCode |= HAL_UART_ERROR_FE;
 8000eb0:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000eb2:	f042 0204 	orr.w	r2, r2, #4
 8000eb6:	6462      	str	r2, [r4, #68]	; 0x44
    if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 8000eb8:	f013 0f08 	tst.w	r3, #8
 8000ebc:	d007      	beq.n	8000ece <HAL_UART_IRQHandler+0xa6>
 8000ebe:	f010 0f20 	tst.w	r0, #32
 8000ec2:	d100      	bne.n	8000ec6 <HAL_UART_IRQHandler+0x9e>
                                                 || ((cr3its & USART_CR3_EIE) != RESET)))
 8000ec4:	b119      	cbz	r1, 8000ece <HAL_UART_IRQHandler+0xa6>
      huart->ErrorCode |= HAL_UART_ERROR_ORE;
 8000ec6:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000ec8:	f042 0208 	orr.w	r2, r2, #8
 8000ecc:	6462      	str	r2, [r4, #68]	; 0x44
    if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 8000ece:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000ed0:	2a00      	cmp	r2, #0
 8000ed2:	d0d1      	beq.n	8000e78 <HAL_UART_IRQHandler+0x50>
      if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 8000ed4:	f013 0f20 	tst.w	r3, #32
 8000ed8:	d002      	beq.n	8000ee0 <HAL_UART_IRQHandler+0xb8>
 8000eda:	f010 0f20 	tst.w	r0, #32
 8000ede:	d129      	bne.n	8000f34 <HAL_UART_IRQHandler+0x10c>
      dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 8000ee0:	6823      	ldr	r3, [r4, #0]
 8000ee2:	695b      	ldr	r3, [r3, #20]
 8000ee4:	f003 0340 	and.w	r3, r3, #64	; 0x40
      if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 8000ee8:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8000eea:	f012 0f08 	tst.w	r2, #8
 8000eee:	d100      	bne.n	8000ef2 <HAL_UART_IRQHandler+0xca>
 8000ef0:	b363      	cbz	r3, 8000f4c <HAL_UART_IRQHandler+0x124>
        UART_EndRxTransfer(huart);
 8000ef2:	4620      	mov	r0, r4
 8000ef4:	f7ff fcb2 	bl	800085c <UART_EndRxTransfer>
        if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8000ef8:	6823      	ldr	r3, [r4, #0]
 8000efa:	695b      	ldr	r3, [r3, #20]
 8000efc:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000f00:	d020      	beq.n	8000f44 <HAL_UART_IRQHandler+0x11c>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8000f02:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000f04:	f102 0314 	add.w	r3, r2, #20
 8000f08:	e853 3f00 	ldrex	r3, [r3]
 8000f0c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000f10:	3214      	adds	r2, #20
 8000f12:	e842 3100 	strex	r1, r3, [r2]
 8000f16:	2900      	cmp	r1, #0
 8000f18:	d1f3      	bne.n	8000f02 <HAL_UART_IRQHandler+0xda>
          if (huart->hdmarx != NULL)
 8000f1a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8000f1c:	b173      	cbz	r3, 8000f3c <HAL_UART_IRQHandler+0x114>
            huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 8000f1e:	4a63      	ldr	r2, [pc, #396]	; (80010ac <HAL_UART_IRQHandler+0x284>)
 8000f20:	651a      	str	r2, [r3, #80]	; 0x50
            if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 8000f22:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8000f24:	f000 faa8 	bl	8001478 <HAL_DMA_Abort_IT>
 8000f28:	2800      	cmp	r0, #0
 8000f2a:	d0a5      	beq.n	8000e78 <HAL_UART_IRQHandler+0x50>
              huart->hdmarx->XferAbortCallback(huart->hdmarx);
 8000f2c:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8000f2e:	6d03      	ldr	r3, [r0, #80]	; 0x50
 8000f30:	4798      	blx	r3
 8000f32:	e7a1      	b.n	8000e78 <HAL_UART_IRQHandler+0x50>
        UART_Receive_IT(huart);
 8000f34:	4620      	mov	r0, r4
 8000f36:	f7ff ff04 	bl	8000d42 <UART_Receive_IT>
 8000f3a:	e7d1      	b.n	8000ee0 <HAL_UART_IRQHandler+0xb8>
            HAL_UART_ErrorCallback(huart);
 8000f3c:	4620      	mov	r0, r4
 8000f3e:	f7ff fef6 	bl	8000d2e <HAL_UART_ErrorCallback>
 8000f42:	e799      	b.n	8000e78 <HAL_UART_IRQHandler+0x50>
          HAL_UART_ErrorCallback(huart);
 8000f44:	4620      	mov	r0, r4
 8000f46:	f7ff fef2 	bl	8000d2e <HAL_UART_ErrorCallback>
 8000f4a:	e795      	b.n	8000e78 <HAL_UART_IRQHandler+0x50>
        HAL_UART_ErrorCallback(huart);
 8000f4c:	4620      	mov	r0, r4
 8000f4e:	f7ff feee 	bl	8000d2e <HAL_UART_ErrorCallback>
        huart->ErrorCode = HAL_UART_ERROR_NONE;
 8000f52:	2300      	movs	r3, #0
 8000f54:	6463      	str	r3, [r4, #68]	; 0x44
    return;
 8000f56:	e78f      	b.n	8000e78 <HAL_UART_IRQHandler+0x50>
      && ((isrflags & USART_SR_IDLE) != 0U)
 8000f58:	f013 0f10 	tst.w	r3, #16
 8000f5c:	f43f af7e 	beq.w	8000e5c <HAL_UART_IRQHandler+0x34>
      && ((cr1its & USART_SR_IDLE) != 0U))
 8000f60:	f010 0f10 	tst.w	r0, #16
 8000f64:	f43f af7a 	beq.w	8000e5c <HAL_UART_IRQHandler+0x34>
    __HAL_UART_CLEAR_IDLEFLAG(huart);
 8000f68:	2300      	movs	r3, #0
 8000f6a:	9301      	str	r3, [sp, #4]
 8000f6c:	6813      	ldr	r3, [r2, #0]
 8000f6e:	9301      	str	r3, [sp, #4]
 8000f70:	6853      	ldr	r3, [r2, #4]
 8000f72:	9301      	str	r3, [sp, #4]
 8000f74:	9b01      	ldr	r3, [sp, #4]
    if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 8000f76:	6953      	ldr	r3, [r2, #20]
 8000f78:	f013 0f40 	tst.w	r3, #64	; 0x40
 8000f7c:	d052      	beq.n	8001024 <HAL_UART_IRQHandler+0x1fc>
      uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 8000f7e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 8000f80:	6813      	ldr	r3, [r2, #0]
 8000f82:	685b      	ldr	r3, [r3, #4]
 8000f84:	b29b      	uxth	r3, r3
      if ((nb_remaining_rx_data > 0U)
 8000f86:	2b00      	cmp	r3, #0
 8000f88:	f43f af76 	beq.w	8000e78 <HAL_UART_IRQHandler+0x50>
          && (nb_remaining_rx_data < huart->RxXferSize))
 8000f8c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8000f8e:	4299      	cmp	r1, r3
 8000f90:	f67f af72 	bls.w	8000e78 <HAL_UART_IRQHandler+0x50>
        huart->RxXferCount = nb_remaining_rx_data;
 8000f94:	85e3      	strh	r3, [r4, #46]	; 0x2e
        if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 8000f96:	69d3      	ldr	r3, [r2, #28]
 8000f98:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000f9c:	d037      	beq.n	800100e <HAL_UART_IRQHandler+0x1e6>
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 8000f9e:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000fa0:	f102 030c 	add.w	r3, r2, #12
 8000fa4:	e853 3f00 	ldrex	r3, [r3]
 8000fa8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000fac:	320c      	adds	r2, #12
 8000fae:	e842 3100 	strex	r1, r3, [r2]
 8000fb2:	2900      	cmp	r1, #0
 8000fb4:	d1f3      	bne.n	8000f9e <HAL_UART_IRQHandler+0x176>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8000fb6:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000fb8:	f102 0314 	add.w	r3, r2, #20
 8000fbc:	e853 3f00 	ldrex	r3, [r3]
 8000fc0:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000fc4:	3214      	adds	r2, #20
 8000fc6:	e842 3100 	strex	r1, r3, [r2]
 8000fca:	2900      	cmp	r1, #0
 8000fcc:	d1f3      	bne.n	8000fb6 <HAL_UART_IRQHandler+0x18e>
          ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8000fce:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000fd0:	f102 0314 	add.w	r3, r2, #20
 8000fd4:	e853 3f00 	ldrex	r3, [r3]
 8000fd8:	f023 0340 	bic.w	r3, r3, #64	; 0x40
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000fdc:	3214      	adds	r2, #20
 8000fde:	e842 3100 	strex	r1, r3, [r2]
 8000fe2:	2900      	cmp	r1, #0
 8000fe4:	d1f3      	bne.n	8000fce <HAL_UART_IRQHandler+0x1a6>
          huart->RxState = HAL_UART_STATE_READY;
 8000fe6:	2320      	movs	r3, #32
 8000fe8:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
          huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8000fec:	2300      	movs	r3, #0
 8000fee:	6323      	str	r3, [r4, #48]	; 0x30
          ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8000ff0:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8000ff2:	f102 030c 	add.w	r3, r2, #12
 8000ff6:	e853 3f00 	ldrex	r3, [r3]
 8000ffa:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8000ffe:	320c      	adds	r2, #12
 8001000:	e842 3100 	strex	r1, r3, [r2]
 8001004:	2900      	cmp	r1, #0
 8001006:	d1f3      	bne.n	8000ff0 <HAL_UART_IRQHandler+0x1c8>
          (void)HAL_DMA_Abort(huart->hdmarx);
 8001008:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800100a:	f000 f9eb 	bl	80013e4 <HAL_DMA_Abort>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 800100e:	2302      	movs	r3, #2
 8001010:	6363      	str	r3, [r4, #52]	; 0x34
        HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 8001012:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8001014:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8001016:	b29b      	uxth	r3, r3
 8001018:	1ac9      	subs	r1, r1, r3
 800101a:	b289      	uxth	r1, r1
 800101c:	4620      	mov	r0, r4
 800101e:	f7ff fe8f 	bl	8000d40 <HAL_UARTEx_RxEventCallback>
      return;
 8001022:	e729      	b.n	8000e78 <HAL_UART_IRQHandler+0x50>
      uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 8001024:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 8001026:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8001028:	b29b      	uxth	r3, r3
 800102a:	1ac9      	subs	r1, r1, r3
 800102c:	b289      	uxth	r1, r1
      if ((huart->RxXferCount > 0U)
 800102e:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8001030:	b29b      	uxth	r3, r3
 8001032:	2b00      	cmp	r3, #0
 8001034:	f43f af20 	beq.w	8000e78 <HAL_UART_IRQHandler+0x50>
          && (nb_rx_data > 0U))
 8001038:	2900      	cmp	r1, #0
 800103a:	f43f af1d 	beq.w	8000e78 <HAL_UART_IRQHandler+0x50>
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 800103e:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001040:	f102 030c 	add.w	r3, r2, #12
 8001044:	e853 3f00 	ldrex	r3, [r3]
 8001048:	f423 7390 	bic.w	r3, r3, #288	; 0x120
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800104c:	320c      	adds	r2, #12
 800104e:	e842 3000 	strex	r0, r3, [r2]
 8001052:	2800      	cmp	r0, #0
 8001054:	d1f3      	bne.n	800103e <HAL_UART_IRQHandler+0x216>
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8001056:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8001058:	f102 0314 	add.w	r3, r2, #20
 800105c:	e853 3f00 	ldrex	r3, [r3]
 8001060:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001064:	3214      	adds	r2, #20
 8001066:	e842 3000 	strex	r0, r3, [r2]
 800106a:	2800      	cmp	r0, #0
 800106c:	d1f3      	bne.n	8001056 <HAL_UART_IRQHandler+0x22e>
        huart->RxState = HAL_UART_STATE_READY;
 800106e:	2320      	movs	r3, #32
 8001070:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
        huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8001074:	2300      	movs	r3, #0
 8001076:	6323      	str	r3, [r4, #48]	; 0x30
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8001078:	6822      	ldr	r2, [r4, #0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800107a:	f102 030c 	add.w	r3, r2, #12
 800107e:	e853 3f00 	ldrex	r3, [r3]
 8001082:	f023 0310 	bic.w	r3, r3, #16
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8001086:	320c      	adds	r2, #12
 8001088:	e842 3000 	strex	r0, r3, [r2]
 800108c:	2800      	cmp	r0, #0
 800108e:	d1f3      	bne.n	8001078 <HAL_UART_IRQHandler+0x250>
        huart->RxEventType = HAL_UART_RXEVENT_IDLE;
 8001090:	2302      	movs	r3, #2
 8001092:	6363      	str	r3, [r4, #52]	; 0x34
        HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 8001094:	4620      	mov	r0, r4
 8001096:	f7ff fe53 	bl	8000d40 <HAL_UARTEx_RxEventCallback>
      return;
 800109a:	e6ed      	b.n	8000e78 <HAL_UART_IRQHandler+0x50>
    UART_Transmit_IT(huart);
 800109c:	4620      	mov	r0, r4
 800109e:	f7ff fc0b 	bl	80008b8 <UART_Transmit_IT>
    return;
 80010a2:	e6e9      	b.n	8000e78 <HAL_UART_IRQHandler+0x50>
    UART_EndTransmit_IT(huart);
 80010a4:	4620      	mov	r0, r4
 80010a6:	f7ff fe34 	bl	8000d12 <UART_EndTransmit_IT>
    return;
 80010aa:	e6e5      	b.n	8000e78 <HAL_UART_IRQHandler+0x50>
 80010ac:	08000d31 	stmdaeq	r0, {r0, r4, r5, r8, sl, fp}

080010b0 <HAL_RCC_GetHCLKFreq>:
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
  return SystemCoreClock;
}
 80010b0:	4b01      	ldr	r3, [pc, #4]	; (80010b8 <HAL_RCC_GetHCLKFreq+0x8>)
 80010b2:	6818      	ldr	r0, [r3, #0]
 80010b4:	4770      	bx	lr
 80010b6:	bf00      	nop
 80010b8:	20000008 	andcs	r0, r0, r8

080010bc <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80010bc:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80010be:	f7ff fff7 	bl	80010b0 <HAL_RCC_GetHCLKFreq>
 80010c2:	4b04      	ldr	r3, [pc, #16]	; (80010d4 <HAL_RCC_GetPCLK1Freq+0x18>)
 80010c4:	689b      	ldr	r3, [r3, #8]
 80010c6:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80010ca:	4a03      	ldr	r2, [pc, #12]	; (80010d8 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80010cc:	5cd3      	ldrb	r3, [r2, r3]
}
 80010ce:	40d8      	lsrs	r0, r3
 80010d0:	bd08      	pop	{r3, pc}
 80010d2:	bf00      	nop
 80010d4:	40023800 	andmi	r3, r2, r0, lsl #16
 80010d8:	080045d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, lr}

080010dc <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 80010dc:	b508      	push	{r3, lr}
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80010de:	f7ff ffe7 	bl	80010b0 <HAL_RCC_GetHCLKFreq>
 80010e2:	4b04      	ldr	r3, [pc, #16]	; (80010f4 <HAL_RCC_GetPCLK2Freq+0x18>)
 80010e4:	689b      	ldr	r3, [r3, #8]
 80010e6:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80010ea:	4a03      	ldr	r2, [pc, #12]	; (80010f8 <HAL_RCC_GetPCLK2Freq+0x1c>)
 80010ec:	5cd3      	ldrb	r3, [r2, r3]
}
 80010ee:	40d8      	lsrs	r0, r3
 80010f0:	bd08      	pop	{r3, pc}
 80010f2:	bf00      	nop
 80010f4:	40023800 	andmi	r3, r2, r0, lsl #16
 80010f8:	080045d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, lr}

080010fc <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80010fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001100:	b082      	sub	sp, #8
 8001102:	4607      	mov	r7, r0
 8001104:	460e      	mov	r6, r1
  uint32_t ioposition = 0x00U;
  uint32_t iocurrent = 0x00U;
  uint32_t temp = 0x00U;

  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
 8001106:	4b54      	ldr	r3, [pc, #336]	; (8001258 <HAL_GPIO_Init+0x15c>)
 8001108:	4298      	cmp	r0, r3
 800110a:	d023      	beq.n	8001154 <HAL_GPIO_Init+0x58>
 800110c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001110:	4298      	cmp	r0, r3
 8001112:	d01f      	beq.n	8001154 <HAL_GPIO_Init+0x58>
 8001114:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001118:	4298      	cmp	r0, r3
 800111a:	d01b      	beq.n	8001154 <HAL_GPIO_Init+0x58>
 800111c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001120:	4298      	cmp	r0, r3
 8001122:	d017      	beq.n	8001154 <HAL_GPIO_Init+0x58>
 8001124:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001128:	4298      	cmp	r0, r3
 800112a:	d013      	beq.n	8001154 <HAL_GPIO_Init+0x58>
 800112c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001130:	4298      	cmp	r0, r3
 8001132:	d00f      	beq.n	8001154 <HAL_GPIO_Init+0x58>
 8001134:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001138:	4298      	cmp	r0, r3
 800113a:	d00b      	beq.n	8001154 <HAL_GPIO_Init+0x58>
 800113c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001140:	4298      	cmp	r0, r3
 8001142:	d007      	beq.n	8001154 <HAL_GPIO_Init+0x58>
 8001144:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001148:	4298      	cmp	r0, r3
 800114a:	d003      	beq.n	8001154 <HAL_GPIO_Init+0x58>
 800114c:	21ac      	movs	r1, #172	; 0xac
 800114e:	4843      	ldr	r0, [pc, #268]	; (800125c <HAL_GPIO_Init+0x160>)
 8001150:	f7ff fadc 	bl	800070c <assert_failed>
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
 8001154:	6833      	ldr	r3, [r6, #0]
 8001156:	b29a      	uxth	r2, r3
 8001158:	b112      	cbz	r2, 8001160 <HAL_GPIO_Init+0x64>
 800115a:	0c1b      	lsrs	r3, r3, #16
 800115c:	041b      	lsls	r3, r3, #16
 800115e:	b11b      	cbz	r3, 8001168 <HAL_GPIO_Init+0x6c>
 8001160:	21ad      	movs	r1, #173	; 0xad
 8001162:	483e      	ldr	r0, [pc, #248]	; (800125c <HAL_GPIO_Init+0x160>)
 8001164:	f7ff fad2 	bl	800070c <assert_failed>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 8001168:	6873      	ldr	r3, [r6, #4]
 800116a:	2b01      	cmp	r3, #1
 800116c:	d919      	bls.n	80011a2 <HAL_GPIO_Init+0xa6>
 800116e:	2b11      	cmp	r3, #17
 8001170:	d017      	beq.n	80011a2 <HAL_GPIO_Init+0xa6>
 8001172:	2b02      	cmp	r3, #2
 8001174:	d015      	beq.n	80011a2 <HAL_GPIO_Init+0xa6>
 8001176:	2b12      	cmp	r3, #18
 8001178:	d013      	beq.n	80011a2 <HAL_GPIO_Init+0xa6>
 800117a:	f5b3 1f88 	cmp.w	r3, #1114112	; 0x110000
 800117e:	d010      	beq.n	80011a2 <HAL_GPIO_Init+0xa6>
 8001180:	f5b3 1f04 	cmp.w	r3, #2162688	; 0x210000
 8001184:	d00d      	beq.n	80011a2 <HAL_GPIO_Init+0xa6>
 8001186:	f5b3 1f44 	cmp.w	r3, #3211264	; 0x310000
 800118a:	d00a      	beq.n	80011a2 <HAL_GPIO_Init+0xa6>
 800118c:	f5b3 1f90 	cmp.w	r3, #1179648	; 0x120000
 8001190:	d007      	beq.n	80011a2 <HAL_GPIO_Init+0xa6>
 8001192:	f5b3 1f08 	cmp.w	r3, #2228224	; 0x220000
 8001196:	d004      	beq.n	80011a2 <HAL_GPIO_Init+0xa6>
 8001198:	f5b3 1f48 	cmp.w	r3, #3276800	; 0x320000
 800119c:	d001      	beq.n	80011a2 <HAL_GPIO_Init+0xa6>
 800119e:	2b03      	cmp	r3, #3
 80011a0:	d101      	bne.n	80011a6 <HAL_GPIO_Init+0xaa>
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();

        temp = SYSCFG->EXTICR[position >> 2U];
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80011a2:	2400      	movs	r4, #0
 80011a4:	e092      	b.n	80012cc <HAL_GPIO_Init+0x1d0>
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
 80011a6:	21ae      	movs	r1, #174	; 0xae
 80011a8:	482c      	ldr	r0, [pc, #176]	; (800125c <HAL_GPIO_Init+0x160>)
 80011aa:	f7ff faaf 	bl	800070c <assert_failed>
 80011ae:	e7f8      	b.n	80011a2 <HAL_GPIO_Init+0xa6>
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 80011b0:	68f3      	ldr	r3, [r6, #12]
 80011b2:	2b03      	cmp	r3, #3
 80011b4:	d813      	bhi.n	80011de <HAL_GPIO_Init+0xe2>
        temp = GPIOx->OSPEEDR; 
 80011b6:	68ba      	ldr	r2, [r7, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80011b8:	0061      	lsls	r1, r4, #1
 80011ba:	2303      	movs	r3, #3
 80011bc:	408b      	lsls	r3, r1
 80011be:	ea22 0203 	bic.w	r2, r2, r3
        temp |= (GPIO_Init->Speed << (position * 2U));
 80011c2:	68f3      	ldr	r3, [r6, #12]
 80011c4:	408b      	lsls	r3, r1
 80011c6:	4313      	orrs	r3, r2
        GPIOx->OSPEEDR = temp;
 80011c8:	60bb      	str	r3, [r7, #8]
        temp = GPIOx->OTYPER;
 80011ca:	687a      	ldr	r2, [r7, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80011cc:	ea22 0205 	bic.w	r2, r2, r5
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80011d0:	6873      	ldr	r3, [r6, #4]
 80011d2:	f3c3 1500 	ubfx	r5, r3, #4, #1
 80011d6:	40a5      	lsls	r5, r4
 80011d8:	4315      	orrs	r5, r2
        GPIOx->OTYPER = temp;
 80011da:	607d      	str	r5, [r7, #4]
 80011dc:	e087      	b.n	80012ee <HAL_GPIO_Init+0x1f2>
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
 80011de:	21c0      	movs	r1, #192	; 0xc0
 80011e0:	481e      	ldr	r0, [pc, #120]	; (800125c <HAL_GPIO_Init+0x160>)
 80011e2:	f7ff fa93 	bl	800070c <assert_failed>
 80011e6:	e7e6      	b.n	80011b6 <HAL_GPIO_Init+0xba>
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 80011e8:	21d1      	movs	r1, #209	; 0xd1
 80011ea:	481c      	ldr	r0, [pc, #112]	; (800125c <HAL_GPIO_Init+0x160>)
 80011ec:	f7ff fa8e 	bl	800070c <assert_failed>
 80011f0:	e086      	b.n	8001300 <HAL_GPIO_Init+0x204>
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 80011f2:	6933      	ldr	r3, [r6, #16]
 80011f4:	b1bb      	cbz	r3, 8001226 <HAL_GPIO_Init+0x12a>
 80011f6:	2b09      	cmp	r3, #9
 80011f8:	d015      	beq.n	8001226 <HAL_GPIO_Init+0x12a>
 80011fa:	2b01      	cmp	r3, #1
 80011fc:	d013      	beq.n	8001226 <HAL_GPIO_Init+0x12a>
 80011fe:	2b02      	cmp	r3, #2
 8001200:	d011      	beq.n	8001226 <HAL_GPIO_Init+0x12a>
 8001202:	2b03      	cmp	r3, #3
 8001204:	d00f      	beq.n	8001226 <HAL_GPIO_Init+0x12a>
 8001206:	2b04      	cmp	r3, #4
 8001208:	d00d      	beq.n	8001226 <HAL_GPIO_Init+0x12a>
 800120a:	2b05      	cmp	r3, #5
 800120c:	d00b      	beq.n	8001226 <HAL_GPIO_Init+0x12a>
 800120e:	2b06      	cmp	r3, #6
 8001210:	d009      	beq.n	8001226 <HAL_GPIO_Init+0x12a>
 8001212:	2b07      	cmp	r3, #7
 8001214:	d007      	beq.n	8001226 <HAL_GPIO_Init+0x12a>
 8001216:	2b08      	cmp	r3, #8
 8001218:	d005      	beq.n	8001226 <HAL_GPIO_Init+0x12a>
 800121a:	2b0a      	cmp	r3, #10
 800121c:	d003      	beq.n	8001226 <HAL_GPIO_Init+0x12a>
 800121e:	2b0c      	cmp	r3, #12
 8001220:	d001      	beq.n	8001226 <HAL_GPIO_Init+0x12a>
 8001222:	2b0f      	cmp	r3, #15
 8001224:	d110      	bne.n	8001248 <HAL_GPIO_Init+0x14c>
        temp = GPIOx->AFR[position >> 3U];
 8001226:	08e2      	lsrs	r2, r4, #3
 8001228:	3208      	adds	r2, #8
 800122a:	f857 0022 	ldr.w	r0, [r7, r2, lsl #2]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800122e:	f004 0307 	and.w	r3, r4, #7
 8001232:	0099      	lsls	r1, r3, #2
 8001234:	230f      	movs	r3, #15
 8001236:	408b      	lsls	r3, r1
 8001238:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 800123c:	6933      	ldr	r3, [r6, #16]
 800123e:	408b      	lsls	r3, r1
 8001240:	4303      	orrs	r3, r0
        GPIOx->AFR[position >> 3U] = temp;
 8001242:	f847 3022 	str.w	r3, [r7, r2, lsl #2]
 8001246:	e06b      	b.n	8001320 <HAL_GPIO_Init+0x224>
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
 8001248:	21de      	movs	r1, #222	; 0xde
 800124a:	4804      	ldr	r0, [pc, #16]	; (800125c <HAL_GPIO_Init+0x160>)
 800124c:	f7ff fa5e 	bl	800070c <assert_failed>
 8001250:	e7e9      	b.n	8001226 <HAL_GPIO_Init+0x12a>
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001252:	2307      	movs	r3, #7
 8001254:	e005      	b.n	8001262 <HAL_GPIO_Init+0x166>
 8001256:	bf00      	nop
 8001258:	40020000 	andmi	r0, r2, r0
 800125c:	0800455c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl, lr}
 8001260:	2300      	movs	r3, #0
 8001262:	408b      	lsls	r3, r1
 8001264:	4303      	orrs	r3, r0
        SYSCFG->EXTICR[position >> 2U] = temp;
 8001266:	3202      	adds	r2, #2
 8001268:	495a      	ldr	r1, [pc, #360]	; (80013d4 <HAL_GPIO_Init+0x2d8>)
 800126a:	f841 3022 	str.w	r3, [r1, r2, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800126e:	4b5a      	ldr	r3, [pc, #360]	; (80013d8 <HAL_GPIO_Init+0x2dc>)
 8001270:	689a      	ldr	r2, [r3, #8]
        temp &= ~((uint32_t)iocurrent);
 8001272:	ea6f 0308 	mvn.w	r3, r8
 8001276:	ea22 0108 	bic.w	r1, r2, r8
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 800127a:	6870      	ldr	r0, [r6, #4]
 800127c:	f410 1f80 	tst.w	r0, #1048576	; 0x100000
 8001280:	d001      	beq.n	8001286 <HAL_GPIO_Init+0x18a>
        {
          temp |= iocurrent;
 8001282:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->RTSR = temp;
 8001286:	4a54      	ldr	r2, [pc, #336]	; (80013d8 <HAL_GPIO_Init+0x2dc>)
 8001288:	6091      	str	r1, [r2, #8]

        temp = EXTI->FTSR;
 800128a:	68d2      	ldr	r2, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
 800128c:	ea03 0102 	and.w	r1, r3, r2
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8001290:	6870      	ldr	r0, [r6, #4]
 8001292:	f410 1f00 	tst.w	r0, #2097152	; 0x200000
 8001296:	d001      	beq.n	800129c <HAL_GPIO_Init+0x1a0>
        {
          temp |= iocurrent;
 8001298:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->FTSR = temp;
 800129c:	4a4e      	ldr	r2, [pc, #312]	; (80013d8 <HAL_GPIO_Init+0x2dc>)
 800129e:	60d1      	str	r1, [r2, #12]

        temp = EXTI->EMR;
 80012a0:	6852      	ldr	r2, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
 80012a2:	ea03 0102 	and.w	r1, r3, r2
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80012a6:	6870      	ldr	r0, [r6, #4]
 80012a8:	f410 3f00 	tst.w	r0, #131072	; 0x20000
 80012ac:	d001      	beq.n	80012b2 <HAL_GPIO_Init+0x1b6>
        {
          temp |= iocurrent;
 80012ae:	ea48 0102 	orr.w	r1, r8, r2
        }
        EXTI->EMR = temp;
 80012b2:	4a49      	ldr	r2, [pc, #292]	; (80013d8 <HAL_GPIO_Init+0x2dc>)
 80012b4:	6051      	str	r1, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80012b6:	6812      	ldr	r2, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80012b8:	4013      	ands	r3, r2
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80012ba:	6871      	ldr	r1, [r6, #4]
 80012bc:	f411 3f80 	tst.w	r1, #65536	; 0x10000
 80012c0:	d001      	beq.n	80012c6 <HAL_GPIO_Init+0x1ca>
        {
          temp |= iocurrent;
 80012c2:	ea48 0302 	orr.w	r3, r8, r2
        }
        EXTI->IMR = temp;
 80012c6:	4a44      	ldr	r2, [pc, #272]	; (80013d8 <HAL_GPIO_Init+0x2dc>)
 80012c8:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80012ca:	3401      	adds	r4, #1
 80012cc:	2c0f      	cmp	r4, #15
 80012ce:	d87e      	bhi.n	80013ce <HAL_GPIO_Init+0x2d2>
    ioposition = 0x01U << position;
 80012d0:	2501      	movs	r5, #1
 80012d2:	40a5      	lsls	r5, r4
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80012d4:	6833      	ldr	r3, [r6, #0]
 80012d6:	ea03 0805 	and.w	r8, r3, r5
    if(iocurrent == ioposition)
 80012da:	ea35 0303 	bics.w	r3, r5, r3
 80012de:	d1f4      	bne.n	80012ca <HAL_GPIO_Init+0x1ce>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80012e0:	6873      	ldr	r3, [r6, #4]
 80012e2:	f003 0303 	and.w	r3, r3, #3
 80012e6:	3b01      	subs	r3, #1
 80012e8:	2b01      	cmp	r3, #1
 80012ea:	f67f af61 	bls.w	80011b0 <HAL_GPIO_Init+0xb4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80012ee:	6873      	ldr	r3, [r6, #4]
 80012f0:	f003 0303 	and.w	r3, r3, #3
 80012f4:	2b03      	cmp	r3, #3
 80012f6:	d00d      	beq.n	8001314 <HAL_GPIO_Init+0x218>
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
 80012f8:	68b3      	ldr	r3, [r6, #8]
 80012fa:	2b02      	cmp	r3, #2
 80012fc:	f63f af74 	bhi.w	80011e8 <HAL_GPIO_Init+0xec>
        temp = GPIOx->PUPDR;
 8001300:	68fa      	ldr	r2, [r7, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8001302:	0061      	lsls	r1, r4, #1
 8001304:	2303      	movs	r3, #3
 8001306:	408b      	lsls	r3, r1
 8001308:	ea22 0203 	bic.w	r2, r2, r3
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 800130c:	68b3      	ldr	r3, [r6, #8]
 800130e:	408b      	lsls	r3, r1
 8001310:	4313      	orrs	r3, r2
        GPIOx->PUPDR = temp;
 8001312:	60fb      	str	r3, [r7, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8001314:	6873      	ldr	r3, [r6, #4]
 8001316:	f003 0303 	and.w	r3, r3, #3
 800131a:	2b02      	cmp	r3, #2
 800131c:	f43f af69 	beq.w	80011f2 <HAL_GPIO_Init+0xf6>
      temp = GPIOx->MODER;
 8001320:	683a      	ldr	r2, [r7, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8001322:	0061      	lsls	r1, r4, #1
 8001324:	2303      	movs	r3, #3
 8001326:	408b      	lsls	r3, r1
 8001328:	ea22 0203 	bic.w	r2, r2, r3
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800132c:	6873      	ldr	r3, [r6, #4]
 800132e:	f003 0303 	and.w	r3, r3, #3
 8001332:	408b      	lsls	r3, r1
 8001334:	4313      	orrs	r3, r2
      GPIOx->MODER = temp;
 8001336:	603b      	str	r3, [r7, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8001338:	6873      	ldr	r3, [r6, #4]
 800133a:	f413 3f40 	tst.w	r3, #196608	; 0x30000
 800133e:	d0c4      	beq.n	80012ca <HAL_GPIO_Init+0x1ce>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001340:	2300      	movs	r3, #0
 8001342:	9301      	str	r3, [sp, #4]
 8001344:	4b25      	ldr	r3, [pc, #148]	; (80013dc <HAL_GPIO_Init+0x2e0>)
 8001346:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001348:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800134c:	645a      	str	r2, [r3, #68]	; 0x44
 800134e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001350:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8001354:	9301      	str	r3, [sp, #4]
 8001356:	9b01      	ldr	r3, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8001358:	08a2      	lsrs	r2, r4, #2
 800135a:	1c91      	adds	r1, r2, #2
 800135c:	4b1d      	ldr	r3, [pc, #116]	; (80013d4 <HAL_GPIO_Init+0x2d8>)
 800135e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8001362:	f004 0303 	and.w	r3, r4, #3
 8001366:	0099      	lsls	r1, r3, #2
 8001368:	230f      	movs	r3, #15
 800136a:	408b      	lsls	r3, r1
 800136c:	ea20 0003 	bic.w	r0, r0, r3
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8001370:	4b1b      	ldr	r3, [pc, #108]	; (80013e0 <HAL_GPIO_Init+0x2e4>)
 8001372:	429f      	cmp	r7, r3
 8001374:	f43f af74 	beq.w	8001260 <HAL_GPIO_Init+0x164>
 8001378:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800137c:	429f      	cmp	r7, r3
 800137e:	d01a      	beq.n	80013b6 <HAL_GPIO_Init+0x2ba>
 8001380:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001384:	429f      	cmp	r7, r3
 8001386:	d018      	beq.n	80013ba <HAL_GPIO_Init+0x2be>
 8001388:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800138c:	429f      	cmp	r7, r3
 800138e:	d016      	beq.n	80013be <HAL_GPIO_Init+0x2c2>
 8001390:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001394:	429f      	cmp	r7, r3
 8001396:	d014      	beq.n	80013c2 <HAL_GPIO_Init+0x2c6>
 8001398:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800139c:	429f      	cmp	r7, r3
 800139e:	d012      	beq.n	80013c6 <HAL_GPIO_Init+0x2ca>
 80013a0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013a4:	429f      	cmp	r7, r3
 80013a6:	d010      	beq.n	80013ca <HAL_GPIO_Init+0x2ce>
 80013a8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013ac:	429f      	cmp	r7, r3
 80013ae:	f43f af50 	beq.w	8001252 <HAL_GPIO_Init+0x156>
 80013b2:	2308      	movs	r3, #8
 80013b4:	e755      	b.n	8001262 <HAL_GPIO_Init+0x166>
 80013b6:	2301      	movs	r3, #1
 80013b8:	e753      	b.n	8001262 <HAL_GPIO_Init+0x166>
 80013ba:	2302      	movs	r3, #2
 80013bc:	e751      	b.n	8001262 <HAL_GPIO_Init+0x166>
 80013be:	2303      	movs	r3, #3
 80013c0:	e74f      	b.n	8001262 <HAL_GPIO_Init+0x166>
 80013c2:	2304      	movs	r3, #4
 80013c4:	e74d      	b.n	8001262 <HAL_GPIO_Init+0x166>
 80013c6:	2305      	movs	r3, #5
 80013c8:	e74b      	b.n	8001262 <HAL_GPIO_Init+0x166>
 80013ca:	2306      	movs	r3, #6
 80013cc:	e749      	b.n	8001262 <HAL_GPIO_Init+0x166>
      }
    }
  }
}
 80013ce:	b002      	add	sp, #8
 80013d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80013d4:	40013800 	andmi	r3, r1, r0, lsl #16
 80013d8:	40013c00 	andmi	r3, r1, r0, lsl #24
 80013dc:	40023800 	andmi	r3, r2, r0, lsl #16
 80013e0:	40020000 	andmi	r0, r2, r0

080013e4 <HAL_DMA_Abort>:
  *        and the Stream will be effectively disabled only after the transfer of
  *        this single data is finished.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort(DMA_HandleTypeDef *hdma)
{
 80013e4:	b570      	push	{r4, r5, r6, lr}
 80013e6:	4604      	mov	r4, r0
  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80013e8:	6d86      	ldr	r6, [r0, #88]	; 0x58
  
  uint32_t tickstart = HAL_GetTick();
 80013ea:	f000 f935 	bl	8001658 <HAL_GetTick>
  
  if(hdma->State != HAL_DMA_STATE_BUSY)
 80013ee:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 80013f2:	b2db      	uxtb	r3, r3
 80013f4:	2b02      	cmp	r3, #2
 80013f6:	d006      	beq.n	8001406 <HAL_DMA_Abort+0x22>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 80013f8:	2380      	movs	r3, #128	; 0x80
 80013fa:	6563      	str	r3, [r4, #84]	; 0x54
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
 80013fc:	2300      	movs	r3, #0
 80013fe:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    
    return HAL_ERROR;
 8001402:	2001      	movs	r0, #1
    
    /* Process Unlocked */
    __HAL_UNLOCK(hdma);
  }
  return HAL_OK;
}
 8001404:	bd70      	pop	{r4, r5, r6, pc}
 8001406:	4605      	mov	r5, r0
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8001408:	6822      	ldr	r2, [r4, #0]
 800140a:	6813      	ldr	r3, [r2, #0]
 800140c:	f023 0316 	bic.w	r3, r3, #22
 8001410:	6013      	str	r3, [r2, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8001412:	6822      	ldr	r2, [r4, #0]
 8001414:	6953      	ldr	r3, [r2, #20]
 8001416:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800141a:	6153      	str	r3, [r2, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800141c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800141e:	b1e3      	cbz	r3, 800145a <HAL_DMA_Abort+0x76>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8001420:	6822      	ldr	r2, [r4, #0]
 8001422:	6813      	ldr	r3, [r2, #0]
 8001424:	f023 0308 	bic.w	r3, r3, #8
 8001428:	6013      	str	r3, [r2, #0]
    __HAL_DMA_DISABLE(hdma);
 800142a:	6822      	ldr	r2, [r4, #0]
 800142c:	6813      	ldr	r3, [r2, #0]
 800142e:	f023 0301 	bic.w	r3, r3, #1
 8001432:	6013      	str	r3, [r2, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8001434:	6823      	ldr	r3, [r4, #0]
 8001436:	681b      	ldr	r3, [r3, #0]
 8001438:	f013 0f01 	tst.w	r3, #1
 800143c:	d011      	beq.n	8001462 <HAL_DMA_Abort+0x7e>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800143e:	f000 f90b 	bl	8001658 <HAL_GetTick>
 8001442:	1b43      	subs	r3, r0, r5
 8001444:	2b05      	cmp	r3, #5
 8001446:	d9f5      	bls.n	8001434 <HAL_DMA_Abort+0x50>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8001448:	2320      	movs	r3, #32
 800144a:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800144c:	2003      	movs	r0, #3
 800144e:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8001452:	2300      	movs	r3, #0
 8001454:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8001458:	e7d4      	b.n	8001404 <HAL_DMA_Abort+0x20>
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 800145a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800145c:	2b00      	cmp	r3, #0
 800145e:	d1df      	bne.n	8001420 <HAL_DMA_Abort+0x3c>
 8001460:	e7e3      	b.n	800142a <HAL_DMA_Abort+0x46>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8001462:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 8001464:	233f      	movs	r3, #63	; 0x3f
 8001466:	4093      	lsls	r3, r2
 8001468:	60b3      	str	r3, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 800146a:	2301      	movs	r3, #1
 800146c:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8001470:	2000      	movs	r0, #0
 8001472:	f884 0034 	strb.w	r0, [r4, #52]	; 0x34
  return HAL_OK;
 8001476:	e7c5      	b.n	8001404 <HAL_DMA_Abort+0x20>

08001478 <HAL_DMA_Abort_IT>:
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8001478:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 800147c:	b2db      	uxtb	r3, r3
 800147e:	2b02      	cmp	r3, #2
 8001480:	d003      	beq.n	800148a <HAL_DMA_Abort_IT+0x12>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8001482:	2380      	movs	r3, #128	; 0x80
 8001484:	6543      	str	r3, [r0, #84]	; 0x54
    return HAL_ERROR;
 8001486:	2001      	movs	r0, #1
 8001488:	4770      	bx	lr
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 800148a:	2305      	movs	r3, #5
 800148c:	f880 3035 	strb.w	r3, [r0, #53]	; 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8001490:	6802      	ldr	r2, [r0, #0]
 8001492:	6813      	ldr	r3, [r2, #0]
 8001494:	f023 0301 	bic.w	r3, r3, #1
 8001498:	6013      	str	r3, [r2, #0]
  }

  return HAL_OK;
 800149a:	2000      	movs	r0, #0
}
 800149c:	4770      	bx	lr
	...

080014a0 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80014a0:	b510      	push	{r4, lr}
 80014a2:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 80014a4:	1ec3      	subs	r3, r0, #3
 80014a6:	2b04      	cmp	r3, #4
 80014a8:	d80f      	bhi.n	80014ca <HAL_NVIC_SetPriorityGrouping+0x2a>
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80014aa:	4a0a      	ldr	r2, [pc, #40]	; (80014d4 <HAL_NVIC_SetPriorityGrouping+0x34>)
 80014ac:	68d3      	ldr	r3, [r2, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80014ae:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80014b2:	041b      	lsls	r3, r3, #16
 80014b4:	0c1b      	lsrs	r3, r3, #16
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80014b6:	0224      	lsls	r4, r4, #8
 80014b8:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80014bc:	4323      	orrs	r3, r4
  reg_value  =  (reg_value                                   |
 80014be:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80014c2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80014c6:	60d3      	str	r3, [r2, #12]
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80014c8:	bd10      	pop	{r4, pc}
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 80014ca:	2190      	movs	r1, #144	; 0x90
 80014cc:	4802      	ldr	r0, [pc, #8]	; (80014d8 <HAL_NVIC_SetPriorityGrouping+0x38>)
 80014ce:	f7ff f91d 	bl	800070c <assert_failed>
 80014d2:	e7ea      	b.n	80014aa <HAL_NVIC_SetPriorityGrouping+0xa>
 80014d4:	e000ed00 	and	lr, r0, r0, lsl #26
 80014d8:	08004598 	stmdaeq	r0, {r3, r4, r7, r8, sl, lr}

080014dc <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80014dc:	b570      	push	{r4, r5, r6, lr}
 80014de:	4605      	mov	r5, r0
 80014e0:	460c      	mov	r4, r1
 80014e2:	4616      	mov	r6, r2
  uint32_t prioritygroup = 0x00U;
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 80014e4:	2a0f      	cmp	r2, #15
 80014e6:	d825      	bhi.n	8001534 <HAL_NVIC_SetPriority+0x58>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 80014e8:	2c0f      	cmp	r4, #15
 80014ea:	d828      	bhi.n	800153e <HAL_NVIC_SetPriority+0x62>
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80014ec:	4b1b      	ldr	r3, [pc, #108]	; (800155c <HAL_NVIC_SetPriority+0x80>)
 80014ee:	68db      	ldr	r3, [r3, #12]
 80014f0:	f3c3 2302 	ubfx	r3, r3, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80014f4:	f1c3 0107 	rsb	r1, r3, #7
 80014f8:	2904      	cmp	r1, #4
 80014fa:	bf28      	it	cs
 80014fc:	2104      	movcs	r1, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80014fe:	1d1a      	adds	r2, r3, #4
 8001500:	2a06      	cmp	r2, #6
 8001502:	d921      	bls.n	8001548 <HAL_NVIC_SetPriority+0x6c>
 8001504:	3b03      	subs	r3, #3

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001506:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800150a:	fa02 f101 	lsl.w	r1, r2, r1
 800150e:	ea24 0401 	bic.w	r4, r4, r1
 8001512:	409c      	lsls	r4, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001514:	fa02 f303 	lsl.w	r3, r2, r3
 8001518:	ea26 0603 	bic.w	r6, r6, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800151c:	4334      	orrs	r4, r6
  if ((int32_t)(IRQn) >= 0)
 800151e:	2d00      	cmp	r5, #0
 8001520:	db14      	blt.n	800154c <HAL_NVIC_SetPriority+0x70>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001522:	0124      	lsls	r4, r4, #4
 8001524:	b2e4      	uxtb	r4, r4
 8001526:	f105 4560 	add.w	r5, r5, #3758096384	; 0xe0000000
 800152a:	f505 4561 	add.w	r5, r5, #57600	; 0xe100
 800152e:	f885 4300 	strb.w	r4, [r5, #768]	; 0x300
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8001532:	bd70      	pop	{r4, r5, r6, pc}
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 8001534:	21a8      	movs	r1, #168	; 0xa8
 8001536:	480a      	ldr	r0, [pc, #40]	; (8001560 <HAL_NVIC_SetPriority+0x84>)
 8001538:	f7ff f8e8 	bl	800070c <assert_failed>
 800153c:	e7d4      	b.n	80014e8 <HAL_NVIC_SetPriority+0xc>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 800153e:	21a9      	movs	r1, #169	; 0xa9
 8001540:	4807      	ldr	r0, [pc, #28]	; (8001560 <HAL_NVIC_SetPriority+0x84>)
 8001542:	f7ff f8e3 	bl	800070c <assert_failed>
 8001546:	e7d1      	b.n	80014ec <HAL_NVIC_SetPriority+0x10>
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001548:	2300      	movs	r3, #0
 800154a:	e7dc      	b.n	8001506 <HAL_NVIC_SetPriority+0x2a>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800154c:	f005 050f 	and.w	r5, r5, #15
 8001550:	0124      	lsls	r4, r4, #4
 8001552:	b2e4      	uxtb	r4, r4
 8001554:	4b03      	ldr	r3, [pc, #12]	; (8001564 <HAL_NVIC_SetPriority+0x88>)
 8001556:	555c      	strb	r4, [r3, r5]
}
 8001558:	e7eb      	b.n	8001532 <HAL_NVIC_SetPriority+0x56>
 800155a:	bf00      	nop
 800155c:	e000ed00 	and	lr, r0, r0, lsl #26
 8001560:	08004598 	stmdaeq	r0, {r3, r4, r7, r8, sl, lr}
 8001564:	e000ed14 	and	lr, r0, r4, lsl sp

08001568 <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8001568:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 800156a:	1e04      	subs	r4, r0, #0
 800156c:	db0a      	blt.n	8001584 <HAL_NVIC_EnableIRQ+0x1c>
  if ((int32_t)(IRQn) >= 0)
 800156e:	2c00      	cmp	r4, #0
 8001570:	db07      	blt.n	8001582 <HAL_NVIC_EnableIRQ+0x1a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001572:	f004 021f 	and.w	r2, r4, #31
 8001576:	0964      	lsrs	r4, r4, #5
 8001578:	2301      	movs	r3, #1
 800157a:	4093      	lsls	r3, r2
 800157c:	4a04      	ldr	r2, [pc, #16]	; (8001590 <HAL_NVIC_EnableIRQ+0x28>)
 800157e:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8001582:	bd10      	pop	{r4, pc}
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 8001584:	21bc      	movs	r1, #188	; 0xbc
 8001586:	4803      	ldr	r0, [pc, #12]	; (8001594 <HAL_NVIC_EnableIRQ+0x2c>)
 8001588:	f7ff f8c0 	bl	800070c <assert_failed>
 800158c:	e7ef      	b.n	800156e <HAL_NVIC_EnableIRQ+0x6>
 800158e:	bf00      	nop
 8001590:	e000e100 	and	lr, r0, r0, lsl #2
 8001594:	08004598 	stmdaeq	r0, {r3, r4, r7, r8, sl, lr}

08001598 <HAL_SYSTICK_Config>:
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001598:	3801      	subs	r0, #1
 800159a:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 800159e:	d20b      	bcs.n	80015b8 <HAL_SYSTICK_Config+0x20>
  {
    return (1UL);                                                   /* Reload value impossible */
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80015a0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80015a4:	6158      	str	r0, [r3, #20]
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80015a6:	4a05      	ldr	r2, [pc, #20]	; (80015bc <HAL_SYSTICK_Config+0x24>)
 80015a8:	21f0      	movs	r1, #240	; 0xf0
 80015aa:	f882 1023 	strb.w	r1, [r2, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80015ae:	2000      	movs	r0, #0
 80015b0:	6198      	str	r0, [r3, #24]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80015b2:	2207      	movs	r2, #7
 80015b4:	611a      	str	r2, [r3, #16]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80015b6:	4770      	bx	lr
    return (1UL);                                                   /* Reload value impossible */
 80015b8:	2001      	movs	r0, #1
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
   return SysTick_Config(TicksNumb);
}
 80015ba:	4770      	bx	lr
 80015bc:	e000ed00 	and	lr, r0, r0, lsl #26

080015c0 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80015c0:	b510      	push	{r4, lr}
 80015c2:	4604      	mov	r4, r0
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80015c4:	4b0e      	ldr	r3, [pc, #56]	; (8001600 <HAL_InitTick+0x40>)
 80015c6:	7818      	ldrb	r0, [r3, #0]
 80015c8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80015cc:	fbb3 f3f0 	udiv	r3, r3, r0
 80015d0:	4a0c      	ldr	r2, [pc, #48]	; (8001604 <HAL_InitTick+0x44>)
 80015d2:	6810      	ldr	r0, [r2, #0]
 80015d4:	fbb0 f0f3 	udiv	r0, r0, r3
 80015d8:	f7ff ffde 	bl	8001598 <HAL_SYSTICK_Config>
 80015dc:	b968      	cbnz	r0, 80015fa <HAL_InitTick+0x3a>
  {
    return HAL_ERROR;
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80015de:	2c0f      	cmp	r4, #15
 80015e0:	d901      	bls.n	80015e6 <HAL_InitTick+0x26>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
    uwTickPrio = TickPriority;
  }
  else
  {
    return HAL_ERROR;
 80015e2:	2001      	movs	r0, #1
 80015e4:	e00a      	b.n	80015fc <HAL_InitTick+0x3c>
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80015e6:	2200      	movs	r2, #0
 80015e8:	4621      	mov	r1, r4
 80015ea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80015ee:	f7ff ff75 	bl	80014dc <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80015f2:	4b05      	ldr	r3, [pc, #20]	; (8001608 <HAL_InitTick+0x48>)
 80015f4:	601c      	str	r4, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 80015f6:	2000      	movs	r0, #0
 80015f8:	e000      	b.n	80015fc <HAL_InitTick+0x3c>
    return HAL_ERROR;
 80015fa:	2001      	movs	r0, #1
}
 80015fc:	bd10      	pop	{r4, pc}
 80015fe:	bf00      	nop
 8001600:	20000000 	andcs	r0, r0, r0
 8001604:	20000008 	andcs	r0, r0, r8
 8001608:	20000004 	andcs	r0, r0, r4

0800160c <HAL_Init>:
{
 800160c:	b508      	push	{r3, lr}
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800160e:	4b0b      	ldr	r3, [pc, #44]	; (800163c <HAL_Init+0x30>)
 8001610:	681a      	ldr	r2, [r3, #0]
 8001612:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001616:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8001618:	681a      	ldr	r2, [r3, #0]
 800161a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800161e:	601a      	str	r2, [r3, #0]
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8001620:	681a      	ldr	r2, [r3, #0]
 8001622:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001626:	601a      	str	r2, [r3, #0]
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001628:	2003      	movs	r0, #3
 800162a:	f7ff ff39 	bl	80014a0 <HAL_NVIC_SetPriorityGrouping>
  HAL_InitTick(TICK_INT_PRIORITY);
 800162e:	200f      	movs	r0, #15
 8001630:	f7ff ffc6 	bl	80015c0 <HAL_InitTick>
  HAL_MspInit();
 8001634:	f7ff f8f6 	bl	8000824 <HAL_MspInit>
}
 8001638:	2000      	movs	r0, #0
 800163a:	bd08      	pop	{r3, pc}
 800163c:	40023c00 	andmi	r3, r2, r0, lsl #24

08001640 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8001640:	4a03      	ldr	r2, [pc, #12]	; (8001650 <HAL_IncTick+0x10>)
 8001642:	6811      	ldr	r1, [r2, #0]
 8001644:	4b03      	ldr	r3, [pc, #12]	; (8001654 <HAL_IncTick+0x14>)
 8001646:	781b      	ldrb	r3, [r3, #0]
 8001648:	440b      	add	r3, r1
 800164a:	6013      	str	r3, [r2, #0]
}
 800164c:	4770      	bx	lr
 800164e:	bf00      	nop
 8001650:	200080e0 	andcs	r8, r0, r0, ror #1
 8001654:	20000000 	andcs	r0, r0, r0

08001658 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8001658:	4b01      	ldr	r3, [pc, #4]	; (8001660 <HAL_GetTick+0x8>)
 800165a:	6818      	ldr	r0, [r3, #0]
}
 800165c:	4770      	bx	lr
 800165e:	bf00      	nop
 8001660:	200080e0 	andcs	r8, r0, r0, ror #1

08001664 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001664:	b538      	push	{r3, r4, r5, lr}
 8001666:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8001668:	f7ff fff6 	bl	8001658 <HAL_GetTick>
 800166c:	4605      	mov	r5, r0
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 800166e:	f1b4 3fff 	cmp.w	r4, #4294967295	; 0xffffffff
 8001672:	d002      	beq.n	800167a <HAL_Delay+0x16>
  {
    wait += (uint32_t)(uwTickFreq);
 8001674:	4b04      	ldr	r3, [pc, #16]	; (8001688 <HAL_Delay+0x24>)
 8001676:	781b      	ldrb	r3, [r3, #0]
 8001678:	441c      	add	r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 800167a:	f7ff ffed 	bl	8001658 <HAL_GetTick>
 800167e:	1b40      	subs	r0, r0, r5
 8001680:	42a0      	cmp	r0, r4
 8001682:	d3fa      	bcc.n	800167a <HAL_Delay+0x16>
  {
  }
}
 8001684:	bd38      	pop	{r3, r4, r5, pc}
 8001686:	bf00      	nop
 8001688:	20000000 	andcs	r0, r0, r0

0800168c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800168c:	4a03      	ldr	r2, [pc, #12]	; (800169c <SystemInit+0x10>)
 800168e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
 8001692:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001696:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 800169a:	4770      	bx	lr
 800169c:	e000ed00 	and	lr, r0, r0, lsl #26

080016a0 <fault_dump_opcode>:
    FD_CODE_TEXT_BASE,  FD_CODE_TEXT_ENDS,  FD_CODE_TEXT_SIZE );
    printf("Code Stack Growth Downward:%d\r\n", 
    FD_STACK_GROWTH_DOWNWARD);
}

static unsigned int fault_dump_opcode(unsigned int pc) {
 80016a0:	b082      	sub	sp, #8
    uint16_t value[2] = {0};
 80016a2:	2300      	movs	r3, #0
 80016a4:	9301      	str	r3, [sp, #4]
    unsigned int opcode = 0;
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
 80016a6:	e007      	b.n	80016b8 <fault_dump_opcode+0x18>
        value[i] = *(uint16_t*)(pc + i * sizeof(uint16_t));
 80016a8:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 80016ac:	aa02      	add	r2, sp, #8
 80016ae:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 80016b2:	f822 1c04 	strh.w	r1, [r2, #-4]
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
 80016b6:	3301      	adds	r3, #1
 80016b8:	2b01      	cmp	r3, #1
 80016ba:	d9f5      	bls.n	80016a8 <fault_dump_opcode+0x8>
    }
    opcode = ((unsigned int)value[1] << 0x10) |
 80016bc:	f8bd 0006 	ldrh.w	r0, [sp, #6]
             ((unsigned int)value[0] << 0x00);
 80016c0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    return opcode;
}
 80016c4:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 80016c8:	b002      	add	sp, #8
 80016ca:	4770      	bx	lr

080016cc <opcode_is_bl_or_blx>:

static bool opcode_is_bl_or_blx(unsigned int ins) {
#define FD_BL_OPCODE_MASK   (0xF800)
#define FD_BL_OPCODE_BL     (0xF000)
#define FD_BL_OPCODE_BLX    (0xF800)
    uint16_t opcode1 = (((ins >> 0x00) & 0xFFFF) & FD_BL_OPCODE_MASK);
 80016cc:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
    uint16_t opcode2 = (((ins >> 0x10) & 0xFFFF) & FD_BL_OPCODE_MASK);
 80016d0:	0c00      	lsrs	r0, r0, #16
 80016d2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    if ((opcode1 == FD_BL_OPCODE_BL) || (opcode1 == FD_BL_OPCODE_BLX)) {
 80016d6:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
 80016da:	d00a      	beq.n	80016f2 <opcode_is_bl_or_blx+0x26>
 80016dc:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
 80016e0:	d009      	beq.n	80016f6 <opcode_is_bl_or_blx+0x2a>
        return true;
    }
    if ((opcode2 == FD_BL_OPCODE_BL) || (opcode2 == FD_BL_OPCODE_BLX)) {
 80016e2:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
 80016e6:	d008      	beq.n	80016fa <opcode_is_bl_or_blx+0x2e>
 80016e8:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
 80016ec:	d007      	beq.n	80016fe <opcode_is_bl_or_blx+0x32>
        return true;
    }
    return false;
 80016ee:	2000      	movs	r0, #0
 80016f0:	4770      	bx	lr
        return true;
 80016f2:	2001      	movs	r0, #1
 80016f4:	4770      	bx	lr
 80016f6:	2001      	movs	r0, #1
 80016f8:	4770      	bx	lr
        return true;
 80016fa:	2001      	movs	r0, #1
 80016fc:	4770      	bx	lr
 80016fe:	2001      	movs	r0, #1
}
 8001700:	4770      	bx	lr
	...

08001704 <dump_exc_return>:

static void dump_exc_return(unsigned int exc_return) {
 8001704:	b510      	push	{r4, lr}
 8001706:	4604      	mov	r4, r0
    printf(" EXE_RETURN: 0x%08X \r\n", exc_return);
 8001708:	4601      	mov	r1, r0
 800170a:	4803      	ldr	r0, [pc, #12]	; (8001718 <dump_exc_return+0x14>)
 800170c:	f001 fe90 	bl	8003430 <iprintf>
#if FD_DUMP_EXC_RETURN_VALUE
    extern void fault_dump_exc_return(unsigned int exc_return);
    fault_dump_exc_return(exc_return);
 8001710:	4620      	mov	r0, r4
 8001712:	f000 f92b 	bl	800196c <fault_dump_exc_return>
#endif
}
 8001716:	bd10      	pop	{r4, pc}
 8001718:	080045dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, sl, lr}

0800171c <fault_dump_init>:
void fault_dump_init(void) {
 800171c:	b508      	push	{r3, lr}
    fd_main_stack_base = FD_CODE_STACK_BASE;
 800171e:	490a      	ldr	r1, [pc, #40]	; (8001748 <fault_dump_init+0x2c>)
 8001720:	4b0a      	ldr	r3, [pc, #40]	; (800174c <fault_dump_init+0x30>)
 8001722:	6019      	str	r1, [r3, #0]
    fd_main_stack_full = FD_CODE_STACK_FULL;
 8001724:	4a0a      	ldr	r2, [pc, #40]	; (8001750 <fault_dump_init+0x34>)
 8001726:	4b0b      	ldr	r3, [pc, #44]	; (8001754 <fault_dump_init+0x38>)
 8001728:	601a      	str	r2, [r3, #0]
    printf("Code Stack:[%08X - %08X], size:%d\r\n",
 800172a:	1a53      	subs	r3, r2, r1
 800172c:	480a      	ldr	r0, [pc, #40]	; (8001758 <fault_dump_init+0x3c>)
 800172e:	f001 fe7f 	bl	8003430 <iprintf>
    printf("Code Text :[%08X - %08X], size:%d\r\n",
 8001732:	490a      	ldr	r1, [pc, #40]	; (800175c <fault_dump_init+0x40>)
 8001734:	4a0a      	ldr	r2, [pc, #40]	; (8001760 <fault_dump_init+0x44>)
 8001736:	1a53      	subs	r3, r2, r1
 8001738:	480a      	ldr	r0, [pc, #40]	; (8001764 <fault_dump_init+0x48>)
 800173a:	f001 fe79 	bl	8003430 <iprintf>
    printf("Code Stack Growth Downward:%d\r\n", 
 800173e:	2101      	movs	r1, #1
 8001740:	4809      	ldr	r0, [pc, #36]	; (8001768 <fault_dump_init+0x4c>)
 8001742:	f001 fe75 	bl	8003430 <iprintf>
}
 8001746:	bd08      	pop	{r3, pc}
 8001748:	200091a0 	andcs	r9, r0, r0, lsr #3
 800174c:	200081e4 	andcs	r8, r0, r4, ror #3
 8001750:	200099a0 	andcs	r9, r0, r0, lsr #19
 8001754:	200081e8 	andcs	r8, r0, r8, ror #3
 8001758:	080045f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, lr}
 800175c:	08000190 	stmdaeq	r0, {r4, r7, r8}
 8001760:	08004450 	stmdaeq	r0, {r4, r6, sl, lr}
 8001764:	08004618 	stmdaeq	r0, {r3, r4, r9, sl, lr}
 8001768:	0800463c 	stmdaeq	r0, {r2, r3, r4, r5, r9, sl, lr}

0800176c <fault_dump_callstack>:
    }
    printf("\r\n");
    while (1);
}

int fault_dump_callstack(unsigned int *buffer, size_t size, unsigned int *stack_point, unsigned int *stack_start) {
 800176c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int count = 0;
    unsigned int pc = 0, op = 0, *sp = NULL;
    if ((buffer == NULL) || (size <= 0)) {
 8001770:	b348      	cbz	r0, 80017c6 <fault_dump_callstack+0x5a>
 8001772:	460f      	mov	r7, r1
 8001774:	4614      	mov	r4, r2
 8001776:	461d      	mov	r5, r3
 8001778:	4680      	mov	r8, r0
 800177a:	b339      	cbz	r1, 80017cc <fault_dump_callstack+0x60>
        return -FD_EEMPTY;
    }
    FD_STACK_CHECKIT(stack_point, stack_start) {
 800177c:	b34a      	cbz	r2, 80017d2 <fault_dump_callstack+0x66>
 800177e:	429a      	cmp	r2, r3
 8001780:	d82a      	bhi.n	80017d8 <fault_dump_callstack+0x6c>
    int count = 0;
 8001782:	2600      	movs	r6, #0
 8001784:	e000      	b.n	8001788 <fault_dump_callstack+0x1c>
        return -FD_EINVAL;
    }
    FD_STACK_FOREACH(stack_point, stack_start) {
 8001786:	3404      	adds	r4, #4
 8001788:	b1d4      	cbz	r4, 80017c0 <fault_dump_callstack+0x54>
 800178a:	42ac      	cmp	r4, r5
 800178c:	d818      	bhi.n	80017c0 <fault_dump_callstack+0x54>
        // Read stack[x] value to pc.
        pc = *(unsigned int *)sp;
 800178e:	6822      	ldr	r2, [r4, #0]
        // PC must be in the code segment.
        if ((pc < FD_CODE_TEXT_BASE) || (pc > FD_CODE_TEXT_ENDS)) {
 8001790:	4813      	ldr	r0, [pc, #76]	; (80017e0 <fault_dump_callstack+0x74>)
 8001792:	4290      	cmp	r0, r2
 8001794:	d8f7      	bhi.n	8001786 <fault_dump_callstack+0x1a>
 8001796:	4b13      	ldr	r3, [pc, #76]	; (80017e4 <fault_dump_callstack+0x78>)
 8001798:	4293      	cmp	r3, r2
 800179a:	d3f4      	bcc.n	8001786 <fault_dump_callstack+0x1a>
            continue;
        }
        // The thumb instruction must be an odd number.
        if ((pc % 2) == 0) {
 800179c:	f012 0f01 	tst.w	r2, #1
 80017a0:	d0f1      	beq.n	8001786 <fault_dump_callstack+0x1a>
            continue;
        }
        // Fix thumb instruction set.
        pc = pc - 1;
        // Calculate the address of the instruction being executed before pushing on the stack.
        pc = pc - sizeof(unsigned int);
 80017a2:	f1a2 0905 	sub.w	r9, r2, #5
        // The thumb instruction is at least 2-byte aligned.
        if ((pc & 0x1) != 0) {
 80017a6:	d0ee      	beq.n	8001786 <fault_dump_callstack+0x1a>
            continue;
        }
        // Read the instruction at the PC address.
        op = fault_dump_opcode(pc);
 80017a8:	4648      	mov	r0, r9
 80017aa:	f7ff ff79 	bl	80016a0 <fault_dump_opcode>
        // Only BL or BLX opcode need to be recorded.
        if (!opcode_is_bl_or_blx(op)) {
 80017ae:	f7ff ff8d 	bl	80016cc <opcode_is_bl_or_blx>
 80017b2:	2800      	cmp	r0, #0
 80017b4:	d0e7      	beq.n	8001786 <fault_dump_callstack+0x1a>
            continue;
        }
        // storage this address.
        buffer[count] = pc;
 80017b6:	f848 9026 	str.w	r9, [r8, r6, lsl #2]
        count = count + 1;
 80017ba:	3601      	adds	r6, #1
        if (count >= size) {
 80017bc:	42be      	cmp	r6, r7
 80017be:	d3e2      	bcc.n	8001786 <fault_dump_callstack+0x1a>
            break;
        }
    }
    return count;
}
 80017c0:	4630      	mov	r0, r6
 80017c2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        return -FD_EEMPTY;
 80017c6:	f06f 0601 	mvn.w	r6, #1
 80017ca:	e7f9      	b.n	80017c0 <fault_dump_callstack+0x54>
 80017cc:	f06f 0601 	mvn.w	r6, #1
 80017d0:	e7f6      	b.n	80017c0 <fault_dump_callstack+0x54>
        return -FD_EINVAL;
 80017d2:	f06f 0602 	mvn.w	r6, #2
 80017d6:	e7f3      	b.n	80017c0 <fault_dump_callstack+0x54>
 80017d8:	f06f 0602 	mvn.w	r6, #2
 80017dc:	e7f0      	b.n	80017c0 <fault_dump_callstack+0x54>
 80017de:	bf00      	nop
 80017e0:	08000190 	stmdaeq	r0, {r4, r7, r8}
 80017e4:	08004450 	stmdaeq	r0, {r4, r6, sl, lr}

080017e8 <fault_dump_handler>:
void fault_dump_handler(unsigned int *stack, unsigned int linker) {
 80017e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80017ea:	4605      	mov	r5, r0
 80017ec:	460e      	mov	r6, r1
    frame.manual.r4  = FD_STACK_READVAL(point);
 80017ee:	6803      	ldr	r3, [r0, #0]
 80017f0:	4c46      	ldr	r4, [pc, #280]	; (800190c <fault_dump_handler+0x124>)
 80017f2:	6023      	str	r3, [r4, #0]
    frame.manual.r5  = FD_STACK_READVAL(point);
 80017f4:	6843      	ldr	r3, [r0, #4]
 80017f6:	6063      	str	r3, [r4, #4]
    frame.manual.r6  = FD_STACK_READVAL(point);
 80017f8:	6883      	ldr	r3, [r0, #8]
 80017fa:	60a3      	str	r3, [r4, #8]
    frame.manual.r7  = FD_STACK_READVAL(point);
 80017fc:	68c3      	ldr	r3, [r0, #12]
 80017fe:	60e3      	str	r3, [r4, #12]
    frame.manual.r8  = FD_STACK_READVAL(point);
 8001800:	6903      	ldr	r3, [r0, #16]
 8001802:	6123      	str	r3, [r4, #16]
    frame.manual.r9  = FD_STACK_READVAL(point);
 8001804:	6943      	ldr	r3, [r0, #20]
 8001806:	6163      	str	r3, [r4, #20]
    frame.manual.r10 = FD_STACK_READVAL(point);
 8001808:	6983      	ldr	r3, [r0, #24]
 800180a:	61a3      	str	r3, [r4, #24]
    frame.manual.r11 = FD_STACK_READVAL(point);
 800180c:	69c3      	ldr	r3, [r0, #28]
 800180e:	61e3      	str	r3, [r4, #28]
    frame.except.r0  = FD_STACK_READVAL(point);
 8001810:	6a03      	ldr	r3, [r0, #32]
 8001812:	6223      	str	r3, [r4, #32]
    frame.except.r1  = FD_STACK_READVAL(point);
 8001814:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8001816:	6263      	str	r3, [r4, #36]	; 0x24
    frame.except.r2  = FD_STACK_READVAL(point);
 8001818:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800181a:	62a3      	str	r3, [r4, #40]	; 0x28
    frame.except.r3  = FD_STACK_READVAL(point);
 800181c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800181e:	62e3      	str	r3, [r4, #44]	; 0x2c
    frame.except.r12 = FD_STACK_READVAL(point);
 8001820:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8001822:	6323      	str	r3, [r4, #48]	; 0x30
    frame.except.lr  = FD_STACK_READVAL(point);
 8001824:	6b43      	ldr	r3, [r0, #52]	; 0x34
 8001826:	6363      	str	r3, [r4, #52]	; 0x34
    frame.except.pc  = FD_STACK_READVAL(point);
 8001828:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800182a:	63a3      	str	r3, [r4, #56]	; 0x38
    frame.except.psr = FD_STACK_READVAL(point);
 800182c:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800182e:	63e3      	str	r3, [r4, #60]	; 0x3c
    printf("\r\n");
 8001830:	4f37      	ldr	r7, [pc, #220]	; (8001910 <fault_dump_handler+0x128>)
 8001832:	4638      	mov	r0, r7
 8001834:	f001 fe82 	bl	800353c <puts>
    printf(" HardFault Information Dump \r\n");
 8001838:	4836      	ldr	r0, [pc, #216]	; (8001914 <fault_dump_handler+0x12c>)
 800183a:	f001 fe7f 	bl	800353c <puts>
    printf(" Stack Frame   \r\n");
 800183e:	4836      	ldr	r0, [pc, #216]	; (8001918 <fault_dump_handler+0x130>)
 8001840:	f001 fe7c 	bl	800353c <puts>
    printf(" R0   = 0x%08X \r\n", (unsigned int)frame.except.r0);
 8001844:	6a21      	ldr	r1, [r4, #32]
 8001846:	4835      	ldr	r0, [pc, #212]	; (800191c <fault_dump_handler+0x134>)
 8001848:	f001 fdf2 	bl	8003430 <iprintf>
    printf(" R1   = 0x%08X \r\n", (unsigned int)frame.except.r1);
 800184c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800184e:	4834      	ldr	r0, [pc, #208]	; (8001920 <fault_dump_handler+0x138>)
 8001850:	f001 fdee 	bl	8003430 <iprintf>
    printf(" R2   = 0x%08X \r\n", (unsigned int)frame.except.r2);
 8001854:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8001856:	4833      	ldr	r0, [pc, #204]	; (8001924 <fault_dump_handler+0x13c>)
 8001858:	f001 fdea 	bl	8003430 <iprintf>
    printf(" R3   = 0x%08X \r\n", (unsigned int)frame.except.r3);
 800185c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800185e:	4832      	ldr	r0, [pc, #200]	; (8001928 <fault_dump_handler+0x140>)
 8001860:	f001 fde6 	bl	8003430 <iprintf>
    printf(" R4   = 0x%08X \r\n", (unsigned int)frame.manual.r4);
 8001864:	6821      	ldr	r1, [r4, #0]
 8001866:	4831      	ldr	r0, [pc, #196]	; (800192c <fault_dump_handler+0x144>)
 8001868:	f001 fde2 	bl	8003430 <iprintf>
    printf(" R5   = 0x%08X \r\n", (unsigned int)frame.manual.r5);
 800186c:	6861      	ldr	r1, [r4, #4]
 800186e:	4830      	ldr	r0, [pc, #192]	; (8001930 <fault_dump_handler+0x148>)
 8001870:	f001 fdde 	bl	8003430 <iprintf>
    printf(" R6   = 0x%08X \r\n", (unsigned int)frame.manual.r6);
 8001874:	68a1      	ldr	r1, [r4, #8]
 8001876:	482f      	ldr	r0, [pc, #188]	; (8001934 <fault_dump_handler+0x14c>)
 8001878:	f001 fdda 	bl	8003430 <iprintf>
    printf(" R7   = 0x%08X \r\n", (unsigned int)frame.manual.r7);
 800187c:	68e1      	ldr	r1, [r4, #12]
 800187e:	482e      	ldr	r0, [pc, #184]	; (8001938 <fault_dump_handler+0x150>)
 8001880:	f001 fdd6 	bl	8003430 <iprintf>
    printf(" R8   = 0x%08X \r\n", (unsigned int)frame.manual.r8);
 8001884:	6921      	ldr	r1, [r4, #16]
 8001886:	482d      	ldr	r0, [pc, #180]	; (800193c <fault_dump_handler+0x154>)
 8001888:	f001 fdd2 	bl	8003430 <iprintf>
    printf(" R9   = 0x%08X \r\n", (unsigned int)frame.manual.r9);
 800188c:	6961      	ldr	r1, [r4, #20]
 800188e:	482c      	ldr	r0, [pc, #176]	; (8001940 <fault_dump_handler+0x158>)
 8001890:	f001 fdce 	bl	8003430 <iprintf>
    printf(" R10  = 0x%08X \r\n", (unsigned int)frame.manual.r10);
 8001894:	69a1      	ldr	r1, [r4, #24]
 8001896:	482b      	ldr	r0, [pc, #172]	; (8001944 <fault_dump_handler+0x15c>)
 8001898:	f001 fdca 	bl	8003430 <iprintf>
    printf(" R11  = 0x%08X \r\n", (unsigned int)frame.manual.r11);
 800189c:	69e1      	ldr	r1, [r4, #28]
 800189e:	482a      	ldr	r0, [pc, #168]	; (8001948 <fault_dump_handler+0x160>)
 80018a0:	f001 fdc6 	bl	8003430 <iprintf>
    printf(" R12  = 0x%08X \r\n", (unsigned int)frame.except.r12);
 80018a4:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80018a6:	4829      	ldr	r0, [pc, #164]	; (800194c <fault_dump_handler+0x164>)
 80018a8:	f001 fdc2 	bl	8003430 <iprintf>
    printf(" LR   = 0x%08X \r\n", (unsigned int)frame.except.lr);
 80018ac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80018ae:	4828      	ldr	r0, [pc, #160]	; (8001950 <fault_dump_handler+0x168>)
 80018b0:	f001 fdbe 	bl	8003430 <iprintf>
    printf(" PC   = 0x%08X \r\n", (unsigned int)frame.except.pc);
 80018b4:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80018b6:	4827      	ldr	r0, [pc, #156]	; (8001954 <fault_dump_handler+0x16c>)
 80018b8:	f001 fdba 	bl	8003430 <iprintf>
    printf(" PSR  = 0x%08X \r\n", (unsigned int)frame.except.psr);
 80018bc:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 80018be:	4826      	ldr	r0, [pc, #152]	; (8001958 <fault_dump_handler+0x170>)
 80018c0:	f001 fdb6 	bl	8003430 <iprintf>
    printf("\r\n");
 80018c4:	4638      	mov	r0, r7
 80018c6:	f001 fe39 	bl	800353c <puts>
    dump_exc_return(linker);
 80018ca:	4630      	mov	r0, r6
 80018cc:	f7ff ff1a 	bl	8001704 <dump_exc_return>
    count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, 
 80018d0:	4b22      	ldr	r3, [pc, #136]	; (800195c <fault_dump_handler+0x174>)
 80018d2:	f105 0240 	add.w	r2, r5, #64	; 0x40
 80018d6:	2140      	movs	r1, #64	; 0x40
 80018d8:	4821      	ldr	r0, [pc, #132]	; (8001960 <fault_dump_handler+0x178>)
 80018da:	f7ff ff47 	bl	800176c <fault_dump_callstack>
 80018de:	4605      	mov	r5, r0
    printf(" Stack Call: ");
 80018e0:	4820      	ldr	r0, [pc, #128]	; (8001964 <fault_dump_handler+0x17c>)
 80018e2:	f001 fda5 	bl	8003430 <iprintf>
    printf("%08X ", (unsigned int)frame.except.pc);
 80018e6:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80018e8:	481f      	ldr	r0, [pc, #124]	; (8001968 <fault_dump_handler+0x180>)
 80018ea:	f001 fda1 	bl	8003430 <iprintf>
    for (index = 0; index < count; index++) {
 80018ee:	2400      	movs	r4, #0
 80018f0:	e006      	b.n	8001900 <fault_dump_handler+0x118>
        printf("%08X ", buffer[index]);
 80018f2:	4b1b      	ldr	r3, [pc, #108]	; (8001960 <fault_dump_handler+0x178>)
 80018f4:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
 80018f8:	481b      	ldr	r0, [pc, #108]	; (8001968 <fault_dump_handler+0x180>)
 80018fa:	f001 fd99 	bl	8003430 <iprintf>
    for (index = 0; index < count; index++) {
 80018fe:	3401      	adds	r4, #1
 8001900:	42ac      	cmp	r4, r5
 8001902:	dbf6      	blt.n	80018f2 <fault_dump_handler+0x10a>
    printf("\r\n");
 8001904:	4802      	ldr	r0, [pc, #8]	; (8001910 <fault_dump_handler+0x128>)
 8001906:	f001 fe19 	bl	800353c <puts>
    while (1);
 800190a:	e7fe      	b.n	800190a <fault_dump_handler+0x122>
 800190c:	200081ec 	andcs	r8, r0, ip, ror #3
 8001910:	08004678 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, lr}
 8001914:	0800465c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, lr}
 8001918:	0800467c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, sl, lr}
 800191c:	08004690 	stmdaeq	r0, {r4, r7, r9, sl, lr}
 8001920:	080046a4 	stmdaeq	r0, {r2, r5, r7, r9, sl, lr}
 8001924:	080046b8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sl, lr}
 8001928:	080046cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, lr}
 800192c:	080046e0 	stmdaeq	r0, {r5, r6, r7, r9, sl, lr}
 8001930:	080046f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, lr}
 8001934:	08004708 	stmdaeq	r0, {r3, r8, r9, sl, lr}
 8001938:	0800471c 	stmdaeq	r0, {r2, r3, r4, r8, r9, sl, lr}
 800193c:	08004730 	stmdaeq	r0, {r4, r5, r8, r9, sl, lr}
 8001940:	08004744 	stmdaeq	r0, {r2, r6, r8, r9, sl, lr}
 8001944:	08004758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl, lr}
 8001948:	0800476c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, lr}
 800194c:	08004780 	stmdaeq	r0, {r7, r8, r9, sl, lr}
 8001950:	08004794 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, lr}
 8001954:	080047a8 	stmdaeq	r0, {r3, r5, r7, r8, r9, sl, lr}
 8001958:	080047bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, sl, lr}
 800195c:	200099a0 	andcs	r9, r0, r0, lsr #19
 8001960:	200080e4 	andcs	r8, r0, r4, ror #1
 8001964:	080047d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, lr}
 8001968:	080047e0 	stmdaeq	r0, {r5, r6, r7, r8, r9, sl, lr}

0800196c <fault_dump_exc_return>:
  *
  ******************************************************************************
  */
#include "fault-dump.h"

void fault_dump_exc_return(unsigned int exc_return) {
 800196c:	b510      	push	{r4, lr}
 800196e:	4604      	mov	r4, r0
    printf(" \r\n");
 8001970:	4816      	ldr	r0, [pc, #88]	; (80019cc <fault_dump_exc_return+0x60>)
 8001972:	f001 fde3 	bl	800353c <puts>
    printf(" Bit2 Return Stack Select: ");
 8001976:	4816      	ldr	r0, [pc, #88]	; (80019d0 <fault_dump_exc_return+0x64>)
 8001978:	f001 fd5a 	bl	8003430 <iprintf>
    if (FD_CHECK_BIT(exc_return, 2)) {
 800197c:	f014 0f04 	tst.w	r4, #4
 8001980:	d018      	beq.n	80019b4 <fault_dump_exc_return+0x48>
        printf("[Use PSP               ].\r\n");
 8001982:	4814      	ldr	r0, [pc, #80]	; (80019d4 <fault_dump_exc_return+0x68>)
 8001984:	f001 fdda 	bl	800353c <puts>
    } else {
        printf("[Use MSP               ].\r\n");
    }
    printf(" Bit3 Return Mode Select:  ");
 8001988:	4813      	ldr	r0, [pc, #76]	; (80019d8 <fault_dump_exc_return+0x6c>)
 800198a:	f001 fd51 	bl	8003430 <iprintf>
    if (FD_CHECK_BIT(exc_return, 3)) {
 800198e:	f014 0f08 	tst.w	r4, #8
 8001992:	d013      	beq.n	80019bc <fault_dump_exc_return+0x50>
        printf("[Use Thread Mode       ].\r\n");
 8001994:	4811      	ldr	r0, [pc, #68]	; (80019dc <fault_dump_exc_return+0x70>)
 8001996:	f001 fdd1 	bl	800353c <puts>
    } else {
        printf("[Use Process Mode      ].\r\n");
    }
    printf(" Bit4 Stack Frame Type:    ");
 800199a:	4811      	ldr	r0, [pc, #68]	; (80019e0 <fault_dump_exc_return+0x74>)
 800199c:	f001 fd48 	bl	8003430 <iprintf>
    if (FD_CHECK_BIT(exc_return, 4)) {
 80019a0:	f014 0f10 	tst.w	r4, #16
 80019a4:	d00e      	beq.n	80019c4 <fault_dump_exc_return+0x58>
        printf("[Use 8 World Frame     ].\r\n");
 80019a6:	480f      	ldr	r0, [pc, #60]	; (80019e4 <fault_dump_exc_return+0x78>)
 80019a8:	f001 fdc8 	bl	800353c <puts>
    } else {
        printf("[Use 26 World Frame    ].\r\n");
    }
    printf(" \r\n");
 80019ac:	4807      	ldr	r0, [pc, #28]	; (80019cc <fault_dump_exc_return+0x60>)
 80019ae:	f001 fdc5 	bl	800353c <puts>
}
 80019b2:	bd10      	pop	{r4, pc}
        printf("[Use MSP               ].\r\n");
 80019b4:	480c      	ldr	r0, [pc, #48]	; (80019e8 <fault_dump_exc_return+0x7c>)
 80019b6:	f001 fdc1 	bl	800353c <puts>
 80019ba:	e7e5      	b.n	8001988 <fault_dump_exc_return+0x1c>
        printf("[Use Process Mode      ].\r\n");
 80019bc:	480b      	ldr	r0, [pc, #44]	; (80019ec <fault_dump_exc_return+0x80>)
 80019be:	f001 fdbd 	bl	800353c <puts>
 80019c2:	e7ea      	b.n	800199a <fault_dump_exc_return+0x2e>
        printf("[Use 26 World Frame    ].\r\n");
 80019c4:	480a      	ldr	r0, [pc, #40]	; (80019f0 <fault_dump_exc_return+0x84>)
 80019c6:	f001 fdb9 	bl	800353c <puts>
 80019ca:	e7ef      	b.n	80019ac <fault_dump_exc_return+0x40>
 80019cc:	080047e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl, lr}
 80019d0:	080047ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, sl, lr}
 80019d4:	08004808 	stmdaeq	r0, {r3, fp, lr}
 80019d8:	08004840 	stmdaeq	r0, {r6, fp, lr}
 80019dc:	0800485c 	stmdaeq	r0, {r2, r3, r4, r6, fp, lr}
 80019e0:	08004894 	stmdaeq	r0, {r2, r4, r7, fp, lr}
 80019e4:	080048b0 	stmdaeq	r0, {r4, r5, r7, fp, lr}
 80019e8:	08004824 	stmdaeq	r0, {r2, r5, fp, lr}
 80019ec:	08004878 	stmdaeq	r0, {r3, r4, r5, r6, fp, lr}
 80019f0:	080048cc 	stmdaeq	r0, {r2, r3, r6, r7, fp, lr}

080019f4 <vListInitialise>:
    traceENTER_vListInitialise( pxList );

    /* The list structure contains a list item which is used to mark the
     * end of the list.  To initialise the list the list end is inserted
     * as the only list entry. */
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );
 80019f4:	f100 0308 	add.w	r3, r0, #8
 80019f8:	6043      	str	r3, [r0, #4]

    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );

    /* The list end value is the highest possible value in the list to
     * ensure it remains at the end of the list. */
    pxList->xListEnd.xItemValue = portMAX_DELAY;
 80019fa:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80019fe:	6082      	str	r2, [r0, #8]

    /* The list end next and previous pointers point to itself so we know
     * when the list is empty. */
    pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );
 8001a00:	60c3      	str	r3, [r0, #12]
    pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );
 8001a02:	6103      	str	r3, [r0, #16]

    /* Initialize the remaining fields of xListEnd when it is a proper ListItem_t */
    #if ( configUSE_MINI_LIST_ITEM == 0 )
    {
        pxList->xListEnd.pvOwner = NULL;
 8001a04:	2300      	movs	r3, #0
 8001a06:	6143      	str	r3, [r0, #20]
        pxList->xListEnd.pxContainer = NULL;
 8001a08:	6183      	str	r3, [r0, #24]
        listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );
    }
    #endif

    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8001a0a:	6003      	str	r3, [r0, #0]
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
    listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );

    traceRETURN_vListInitialise();
}
 8001a0c:	4770      	bx	lr

08001a0e <vListInitialiseItem>:
void vListInitialiseItem( ListItem_t * const pxItem )
{
    traceENTER_vListInitialiseItem( pxItem );

    /* Make sure the list item is not recorded as being on a list. */
    pxItem->pxContainer = NULL;
 8001a0e:	2300      	movs	r3, #0
 8001a10:	6103      	str	r3, [r0, #16]
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
    listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );

    traceRETURN_vListInitialiseItem();
}
 8001a12:	4770      	bx	lr

08001a14 <vListInsert>:
}
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
 8001a14:	b430      	push	{r4, r5}
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8001a16:	680d      	ldr	r5, [r1, #0]
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
 8001a18:	f1b5 3fff 	cmp.w	r5, #4294967295	; 0xffffffff
 8001a1c:	d011      	beq.n	8001a42 <vListInsert+0x2e>
        *   5) If the FreeRTOS port supports interrupt nesting then ensure that
        *      the priority of the tick interrupt is at or below
        *      configMAX_SYSCALL_INTERRUPT_PRIORITY.
        **********************************************************************/

        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
 8001a1e:	f100 0308 	add.w	r3, r0, #8
 8001a22:	461c      	mov	r4, r3
 8001a24:	685b      	ldr	r3, [r3, #4]
 8001a26:	681a      	ldr	r2, [r3, #0]
 8001a28:	42aa      	cmp	r2, r5
 8001a2a:	d9fa      	bls.n	8001a22 <vListInsert+0xe>
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
 8001a2c:	6863      	ldr	r3, [r4, #4]
 8001a2e:	604b      	str	r3, [r1, #4]
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8001a30:	6099      	str	r1, [r3, #8]
    pxNewListItem->pxPrevious = pxIterator;
 8001a32:	608c      	str	r4, [r1, #8]
    pxIterator->pxNext = pxNewListItem;
 8001a34:	6061      	str	r1, [r4, #4]

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;
 8001a36:	6108      	str	r0, [r1, #16]

    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
 8001a38:	6803      	ldr	r3, [r0, #0]
 8001a3a:	3301      	adds	r3, #1
 8001a3c:	6003      	str	r3, [r0, #0]

    traceRETURN_vListInsert();
}
 8001a3e:	bc30      	pop	{r4, r5}
 8001a40:	4770      	bx	lr
        pxIterator = pxList->xListEnd.pxPrevious;
 8001a42:	6904      	ldr	r4, [r0, #16]
 8001a44:	e7f2      	b.n	8001a2c <vListInsert+0x18>

08001a46 <uxListRemove>:

UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
    /* The list item knows which list it is in.  Obtain the list from the list
     * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
 8001a46:	6903      	ldr	r3, [r0, #16]

    traceENTER_uxListRemove( pxItemToRemove );

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8001a48:	6841      	ldr	r1, [r0, #4]
 8001a4a:	6882      	ldr	r2, [r0, #8]
 8001a4c:	608a      	str	r2, [r1, #8]
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8001a4e:	6841      	ldr	r1, [r0, #4]
 8001a50:	6051      	str	r1, [r2, #4]

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
 8001a52:	685a      	ldr	r2, [r3, #4]
 8001a54:	4282      	cmp	r2, r0
 8001a56:	d005      	beq.n	8001a64 <uxListRemove+0x1e>
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
 8001a58:	2200      	movs	r2, #0
 8001a5a:	6102      	str	r2, [r0, #16]
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems - 1U );
 8001a5c:	6818      	ldr	r0, [r3, #0]
 8001a5e:	3801      	subs	r0, #1
 8001a60:	6018      	str	r0, [r3, #0]

    traceRETURN_uxListRemove( pxList->uxNumberOfItems );

    return pxList->uxNumberOfItems;
}
 8001a62:	4770      	bx	lr
        pxList->pxIndex = pxItemToRemove->pxPrevious;
 8001a64:	6882      	ldr	r2, [r0, #8]
 8001a66:	605a      	str	r2, [r3, #4]
 8001a68:	e7f6      	b.n	8001a58 <uxListRemove+0x12>

08001a6a <prvIsQueueEmpty>:
    taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
{
 8001a6a:	b510      	push	{r4, lr}
 8001a6c:	4604      	mov	r4, r0
    BaseType_t xReturn;

    taskENTER_CRITICAL();
 8001a6e:	f001 faf1 	bl	8003054 <vPortEnterCritical>
    {
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
 8001a72:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8001a74:	b923      	cbnz	r3, 8001a80 <prvIsQueueEmpty+0x16>
        {
            xReturn = pdTRUE;
 8001a76:	2401      	movs	r4, #1
        else
        {
            xReturn = pdFALSE;
        }
    }
    taskEXIT_CRITICAL();
 8001a78:	f001 fafc 	bl	8003074 <vPortExitCritical>

    return xReturn;
}
 8001a7c:	4620      	mov	r0, r4
 8001a7e:	bd10      	pop	{r4, pc}
            xReturn = pdFALSE;
 8001a80:	2400      	movs	r4, #0
 8001a82:	e7f9      	b.n	8001a78 <prvIsQueueEmpty+0xe>

08001a84 <prvCopyDataToQueue>:
{
 8001a84:	b570      	push	{r4, r5, r6, lr}
 8001a86:	4604      	mov	r4, r0
 8001a88:	4615      	mov	r5, r2
    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8001a8a:	6c86      	ldr	r6, [r0, #72]	; 0x48
    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8001a8c:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8001a8e:	b95a      	cbnz	r2, 8001aa8 <prvCopyDataToQueue+0x24>
            if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8001a90:	6803      	ldr	r3, [r0, #0]
 8001a92:	b11b      	cbz	r3, 8001a9c <prvCopyDataToQueue+0x18>
    BaseType_t xReturn = pdFALSE;
 8001a94:	2000      	movs	r0, #0
    pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting + ( UBaseType_t ) 1 );
 8001a96:	3601      	adds	r6, #1
 8001a98:	64a6      	str	r6, [r4, #72]	; 0x48
}
 8001a9a:	bd70      	pop	{r4, r5, r6, pc}
                xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8001a9c:	6880      	ldr	r0, [r0, #8]
 8001a9e:	f000 ff21 	bl	80028e4 <xTaskPriorityDisinherit>
                pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8001aa2:	2300      	movs	r3, #0
 8001aa4:	60a3      	str	r3, [r4, #8]
 8001aa6:	e7f6      	b.n	8001a96 <prvCopyDataToQueue+0x12>
    else if( xPosition == queueSEND_TO_BACK )
 8001aa8:	b96d      	cbnz	r5, 8001ac6 <prvCopyDataToQueue+0x42>
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
 8001aaa:	6840      	ldr	r0, [r0, #4]
 8001aac:	f001 fcaa 	bl	8003404 <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;
 8001ab0:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001ab2:	6863      	ldr	r3, [r4, #4]
 8001ab4:	4413      	add	r3, r2
 8001ab6:	6063      	str	r3, [r4, #4]
        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )
 8001ab8:	68a2      	ldr	r2, [r4, #8]
 8001aba:	4293      	cmp	r3, r2
 8001abc:	d319      	bcc.n	8001af2 <prvCopyDataToQueue+0x6e>
            pxQueue->pcWriteTo = pxQueue->pcHead;
 8001abe:	6823      	ldr	r3, [r4, #0]
 8001ac0:	6063      	str	r3, [r4, #4]
    BaseType_t xReturn = pdFALSE;
 8001ac2:	4628      	mov	r0, r5
 8001ac4:	e7e7      	b.n	8001a96 <prvCopyDataToQueue+0x12>
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
 8001ac6:	68c0      	ldr	r0, [r0, #12]
 8001ac8:	f001 fc9c 	bl	8003404 <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8001acc:	6d22      	ldr	r2, [r4, #80]	; 0x50
 8001ace:	4251      	negs	r1, r2
 8001ad0:	68e3      	ldr	r3, [r4, #12]
 8001ad2:	1a9b      	subs	r3, r3, r2
 8001ad4:	60e3      	str	r3, [r4, #12]
        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead )
 8001ad6:	6822      	ldr	r2, [r4, #0]
 8001ad8:	4293      	cmp	r3, r2
 8001ada:	d202      	bcs.n	8001ae2 <prvCopyDataToQueue+0x5e>
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8001adc:	68a3      	ldr	r3, [r4, #8]
 8001ade:	440b      	add	r3, r1
 8001ae0:	60e3      	str	r3, [r4, #12]
        if( xPosition == queueOVERWRITE )
 8001ae2:	2d02      	cmp	r5, #2
 8001ae4:	d001      	beq.n	8001aea <prvCopyDataToQueue+0x66>
    BaseType_t xReturn = pdFALSE;
 8001ae6:	2000      	movs	r0, #0
 8001ae8:	e7d5      	b.n	8001a96 <prvCopyDataToQueue+0x12>
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8001aea:	b126      	cbz	r6, 8001af6 <prvCopyDataToQueue+0x72>
                --uxMessagesWaiting;
 8001aec:	3e01      	subs	r6, #1
    BaseType_t xReturn = pdFALSE;
 8001aee:	2000      	movs	r0, #0
 8001af0:	e7d1      	b.n	8001a96 <prvCopyDataToQueue+0x12>
 8001af2:	4628      	mov	r0, r5
 8001af4:	e7cf      	b.n	8001a96 <prvCopyDataToQueue+0x12>
 8001af6:	2000      	movs	r0, #0
 8001af8:	e7cd      	b.n	8001a96 <prvCopyDataToQueue+0x12>

08001afa <prvCopyDataFromQueue>:
{
 8001afa:	4603      	mov	r3, r0
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8001afc:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8001afe:	b16a      	cbz	r2, 8001b1c <prvCopyDataFromQueue+0x22>
{
 8001b00:	b510      	push	{r4, lr}
 8001b02:	4608      	mov	r0, r1
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
 8001b04:	68d9      	ldr	r1, [r3, #12]
 8001b06:	4411      	add	r1, r2
 8001b08:	60d9      	str	r1, [r3, #12]
        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
 8001b0a:	689c      	ldr	r4, [r3, #8]
 8001b0c:	42a1      	cmp	r1, r4
 8001b0e:	d301      	bcc.n	8001b14 <prvCopyDataFromQueue+0x1a>
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8001b10:	6819      	ldr	r1, [r3, #0]
 8001b12:	60d9      	str	r1, [r3, #12]
        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize );
 8001b14:	68d9      	ldr	r1, [r3, #12]
 8001b16:	f001 fc75 	bl	8003404 <memcpy>
}
 8001b1a:	bd10      	pop	{r4, pc}
 8001b1c:	4770      	bx	lr

08001b1e <prvNotifyQueueSetContainer>:
/*-----------------------------------------------------------*/

#if ( configUSE_QUEUE_SETS == 1 )

    static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue )
    {
 8001b1e:	b570      	push	{r4, r5, r6, lr}
 8001b20:	b082      	sub	sp, #8
 8001b22:	9001      	str	r0, [sp, #4]
        Queue_t * pxQueueSetContainer = pxQueue->pxQueueSetContainer;
 8001b24:	6d84      	ldr	r4, [r0, #88]	; 0x58
         * to prvNotifyQueueSetContainer is preceded by a check that
         * pxQueueSetContainer != NULL */
        configASSERT( pxQueueSetContainer ); /* LCOV_EXCL_BR_LINE */
        configASSERT( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength );

        if( pxQueueSetContainer->uxMessagesWaiting < pxQueueSetContainer->uxLength )
 8001b26:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8001b28:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8001b2a:	429a      	cmp	r2, r3
 8001b2c:	d303      	bcc.n	8001b36 <prvNotifyQueueSetContainer+0x18>
        BaseType_t xReturn = pdFALSE;
 8001b2e:	2500      	movs	r5, #0
        {
            mtCOVERAGE_TEST_MARKER();
        }

        return xReturn;
    }
 8001b30:	4628      	mov	r0, r5
 8001b32:	b002      	add	sp, #8
 8001b34:	bd70      	pop	{r4, r5, r6, pc}
            const int8_t cTxLock = pxQueueSetContainer->cTxLock;
 8001b36:	f894 6055 	ldrb.w	r6, [r4, #85]	; 0x55
 8001b3a:	b276      	sxtb	r6, r6
            xReturn = prvCopyDataToQueue( pxQueueSetContainer, &pxQueue, queueSEND_TO_BACK );
 8001b3c:	2200      	movs	r2, #0
 8001b3e:	a901      	add	r1, sp, #4
 8001b40:	4620      	mov	r0, r4
 8001b42:	f7ff ff9f 	bl	8001a84 <prvCopyDataToQueue>
 8001b46:	4605      	mov	r5, r0
            if( cTxLock == queueUNLOCKED )
 8001b48:	f1b6 3fff 	cmp.w	r6, #4294967295	; 0xffffffff
 8001b4c:	d10a      	bne.n	8001b64 <prvNotifyQueueSetContainer+0x46>
                if( listLIST_IS_EMPTY( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) == pdFALSE )
 8001b4e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8001b50:	2b00      	cmp	r3, #0
 8001b52:	d0ed      	beq.n	8001b30 <prvNotifyQueueSetContainer+0x12>
                    if( xTaskRemoveFromEventList( &( pxQueueSetContainer->xTasksWaitingToReceive ) ) != pdFALSE )
 8001b54:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001b58:	f000 fdce 	bl	80026f8 <xTaskRemoveFromEventList>
 8001b5c:	2800      	cmp	r0, #0
 8001b5e:	d0e7      	beq.n	8001b30 <prvNotifyQueueSetContainer+0x12>
                        xReturn = pdTRUE;
 8001b60:	2501      	movs	r5, #1
        return xReturn;
 8001b62:	e7e5      	b.n	8001b30 <prvNotifyQueueSetContainer+0x12>
                prvIncrementQueueTxLock( pxQueueSetContainer, cTxLock );
 8001b64:	f000 fba8 	bl	80022b8 <uxTaskGetNumberOfTasks>
 8001b68:	4286      	cmp	r6, r0
 8001b6a:	d2e1      	bcs.n	8001b30 <prvNotifyQueueSetContainer+0x12>
 8001b6c:	3601      	adds	r6, #1
 8001b6e:	b276      	sxtb	r6, r6
 8001b70:	f884 6055 	strb.w	r6, [r4, #85]	; 0x55
 8001b74:	e7dc      	b.n	8001b30 <prvNotifyQueueSetContainer+0x12>

08001b76 <prvUnlockQueue>:
{
 8001b76:	b538      	push	{r3, r4, r5, lr}
 8001b78:	4605      	mov	r5, r0
    taskENTER_CRITICAL();
 8001b7a:	f001 fa6b 	bl	8003054 <vPortEnterCritical>
        int8_t cTxLock = pxQueue->cTxLock;
 8001b7e:	f895 4055 	ldrb.w	r4, [r5, #85]	; 0x55
 8001b82:	b264      	sxtb	r4, r4
        while( cTxLock > queueLOCKED_UNMODIFIED )
 8001b84:	e008      	b.n	8001b98 <prvUnlockQueue+0x22>
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8001b86:	6aeb      	ldr	r3, [r5, #44]	; 0x2c
 8001b88:	b1b3      	cbz	r3, 8001bb8 <prvUnlockQueue+0x42>
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8001b8a:	f105 002c 	add.w	r0, r5, #44	; 0x2c
 8001b8e:	f000 fdb3 	bl	80026f8 <xTaskRemoveFromEventList>
 8001b92:	b970      	cbnz	r0, 8001bb2 <prvUnlockQueue+0x3c>
            --cTxLock;
 8001b94:	3c01      	subs	r4, #1
 8001b96:	b264      	sxtb	r4, r4
        while( cTxLock > queueLOCKED_UNMODIFIED )
 8001b98:	2c00      	cmp	r4, #0
 8001b9a:	dd0d      	ble.n	8001bb8 <prvUnlockQueue+0x42>
                if( pxQueue->pxQueueSetContainer != NULL )
 8001b9c:	6dab      	ldr	r3, [r5, #88]	; 0x58
 8001b9e:	2b00      	cmp	r3, #0
 8001ba0:	d0f1      	beq.n	8001b86 <prvUnlockQueue+0x10>
                    if( prvNotifyQueueSetContainer( pxQueue ) != pdFALSE )
 8001ba2:	4628      	mov	r0, r5
 8001ba4:	f7ff ffbb 	bl	8001b1e <prvNotifyQueueSetContainer>
 8001ba8:	2800      	cmp	r0, #0
 8001baa:	d0f3      	beq.n	8001b94 <prvUnlockQueue+0x1e>
                        vTaskMissedYield();
 8001bac:	f000 fe60 	bl	8002870 <vTaskMissedYield>
 8001bb0:	e7f0      	b.n	8001b94 <prvUnlockQueue+0x1e>
                            vTaskMissedYield();
 8001bb2:	f000 fe5d 	bl	8002870 <vTaskMissedYield>
 8001bb6:	e7ed      	b.n	8001b94 <prvUnlockQueue+0x1e>
        pxQueue->cTxLock = queueUNLOCKED;
 8001bb8:	23ff      	movs	r3, #255	; 0xff
 8001bba:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
    taskEXIT_CRITICAL();
 8001bbe:	f001 fa59 	bl	8003074 <vPortExitCritical>
    taskENTER_CRITICAL();
 8001bc2:	f001 fa47 	bl	8003054 <vPortEnterCritical>
        int8_t cRxLock = pxQueue->cRxLock;
 8001bc6:	f895 4054 	ldrb.w	r4, [r5, #84]	; 0x54
 8001bca:	b264      	sxtb	r4, r4
        while( cRxLock > queueLOCKED_UNMODIFIED )
 8001bcc:	e001      	b.n	8001bd2 <prvUnlockQueue+0x5c>
                --cRxLock;
 8001bce:	3c01      	subs	r4, #1
 8001bd0:	b264      	sxtb	r4, r4
        while( cRxLock > queueLOCKED_UNMODIFIED )
 8001bd2:	2c00      	cmp	r4, #0
 8001bd4:	dd0a      	ble.n	8001bec <prvUnlockQueue+0x76>
            if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8001bd6:	692b      	ldr	r3, [r5, #16]
 8001bd8:	b143      	cbz	r3, 8001bec <prvUnlockQueue+0x76>
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8001bda:	f105 0010 	add.w	r0, r5, #16
 8001bde:	f000 fd8b 	bl	80026f8 <xTaskRemoveFromEventList>
 8001be2:	2800      	cmp	r0, #0
 8001be4:	d0f3      	beq.n	8001bce <prvUnlockQueue+0x58>
                    vTaskMissedYield();
 8001be6:	f000 fe43 	bl	8002870 <vTaskMissedYield>
 8001bea:	e7f0      	b.n	8001bce <prvUnlockQueue+0x58>
        pxQueue->cRxLock = queueUNLOCKED;
 8001bec:	23ff      	movs	r3, #255	; 0xff
 8001bee:	f885 3054 	strb.w	r3, [r5, #84]	; 0x54
    taskEXIT_CRITICAL();
 8001bf2:	f001 fa3f 	bl	8003074 <vPortExitCritical>
}
 8001bf6:	bd38      	pop	{r3, r4, r5, pc}

08001bf8 <xQueueGenericReset>:
    if( ( pxQueue != NULL ) &&
 8001bf8:	2800      	cmp	r0, #0
 8001bfa:	d044      	beq.n	8001c86 <xQueueGenericReset+0x8e>
{
 8001bfc:	b538      	push	{r3, r4, r5, lr}
 8001bfe:	460d      	mov	r5, r1
 8001c00:	4604      	mov	r4, r0
        ( pxQueue->uxLength >= 1U ) &&
 8001c02:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
    if( ( pxQueue != NULL ) &&
 8001c04:	2b00      	cmp	r3, #0
 8001c06:	d040      	beq.n	8001c8a <xQueueGenericReset+0x92>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
 8001c08:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8001c0a:	2100      	movs	r1, #0
 8001c0c:	fba3 2302 	umull	r2, r3, r3, r2
 8001c10:	b913      	cbnz	r3, 8001c18 <xQueueGenericReset+0x20>
        ( pxQueue->uxLength >= 1U ) &&
 8001c12:	b119      	cbz	r1, 8001c1c <xQueueGenericReset+0x24>
        xReturn = pdFAIL;
 8001c14:	2000      	movs	r0, #0
    return xReturn;
 8001c16:	e039      	b.n	8001c8c <xQueueGenericReset+0x94>
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
 8001c18:	2101      	movs	r1, #1
 8001c1a:	e7fa      	b.n	8001c12 <xQueueGenericReset+0x1a>
        taskENTER_CRITICAL();
 8001c1c:	f001 fa1a 	bl	8003054 <vPortEnterCritical>
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 8001c20:	6823      	ldr	r3, [r4, #0]
 8001c22:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
 8001c24:	6d21      	ldr	r1, [r4, #80]	; 0x50
 8001c26:	fb01 3002 	mla	r0, r1, r2, r3
 8001c2a:	60a0      	str	r0, [r4, #8]
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 8001c2c:	2000      	movs	r0, #0
 8001c2e:	64a0      	str	r0, [r4, #72]	; 0x48
            pxQueue->pcWriteTo = pxQueue->pcHead;
 8001c30:	6063      	str	r3, [r4, #4]
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize );
 8001c32:	3a01      	subs	r2, #1
 8001c34:	fb02 3301 	mla	r3, r2, r1, r3
 8001c38:	60e3      	str	r3, [r4, #12]
            pxQueue->cRxLock = queueUNLOCKED;
 8001c3a:	23ff      	movs	r3, #255	; 0xff
 8001c3c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
            pxQueue->cTxLock = queueUNLOCKED;
 8001c40:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
            if( xNewQueue == pdFALSE )
 8001c44:	b9b5      	cbnz	r5, 8001c74 <xQueueGenericReset+0x7c>
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8001c46:	6923      	ldr	r3, [r4, #16]
 8001c48:	b91b      	cbnz	r3, 8001c52 <xQueueGenericReset+0x5a>
        taskEXIT_CRITICAL();
 8001c4a:	f001 fa13 	bl	8003074 <vPortExitCritical>
    BaseType_t xReturn = pdPASS;
 8001c4e:	2001      	movs	r0, #1
        taskEXIT_CRITICAL();
 8001c50:	e01c      	b.n	8001c8c <xQueueGenericReset+0x94>
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8001c52:	f104 0010 	add.w	r0, r4, #16
 8001c56:	f000 fd4f 	bl	80026f8 <xTaskRemoveFromEventList>
 8001c5a:	2800      	cmp	r0, #0
 8001c5c:	d0f5      	beq.n	8001c4a <xQueueGenericReset+0x52>
                        queueYIELD_IF_USING_PREEMPTION();
 8001c5e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001c62:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001c66:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8001c6a:	f3bf 8f4f 	dsb	sy
 8001c6e:	f3bf 8f6f 	isb	sy
 8001c72:	e7ea      	b.n	8001c4a <xQueueGenericReset+0x52>
                vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8001c74:	f104 0010 	add.w	r0, r4, #16
 8001c78:	f7ff febc 	bl	80019f4 <vListInitialise>
                vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8001c7c:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001c80:	f7ff feb8 	bl	80019f4 <vListInitialise>
 8001c84:	e7e1      	b.n	8001c4a <xQueueGenericReset+0x52>
        xReturn = pdFAIL;
 8001c86:	2000      	movs	r0, #0
}
 8001c88:	4770      	bx	lr
        xReturn = pdFAIL;
 8001c8a:	2000      	movs	r0, #0
}
 8001c8c:	bd38      	pop	{r3, r4, r5, pc}

08001c8e <prvInitialiseNewQueue>:
{
 8001c8e:	b510      	push	{r4, lr}
 8001c90:	9c02      	ldr	r4, [sp, #8]
    if( uxItemSize == ( UBaseType_t ) 0 )
 8001c92:	460b      	mov	r3, r1
 8001c94:	b949      	cbnz	r1, 8001caa <prvInitialiseNewQueue+0x1c>
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 8001c96:	6024      	str	r4, [r4, #0]
    pxNewQueue->uxLength = uxQueueLength;
 8001c98:	64e0      	str	r0, [r4, #76]	; 0x4c
    pxNewQueue->uxItemSize = uxItemSize;
 8001c9a:	6523      	str	r3, [r4, #80]	; 0x50
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8001c9c:	2101      	movs	r1, #1
 8001c9e:	4620      	mov	r0, r4
 8001ca0:	f7ff ffaa 	bl	8001bf8 <xQueueGenericReset>
        pxNewQueue->pxQueueSetContainer = NULL;
 8001ca4:	2300      	movs	r3, #0
 8001ca6:	65a3      	str	r3, [r4, #88]	; 0x58
}
 8001ca8:	bd10      	pop	{r4, pc}
        pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 8001caa:	6022      	str	r2, [r4, #0]
 8001cac:	e7f4      	b.n	8001c98 <prvInitialiseNewQueue+0xa>

08001cae <xQueueGenericCreateStatic>:
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 8001cae:	b1b8      	cbz	r0, 8001ce0 <xQueueGenericCreateStatic+0x32>
    {
 8001cb0:	b510      	push	{r4, lr}
 8001cb2:	b082      	sub	sp, #8
 8001cb4:	461c      	mov	r4, r3
 8001cb6:	4684      	mov	ip, r0
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
 8001cb8:	b1a3      	cbz	r3, 8001ce4 <xQueueGenericCreateStatic+0x36>
            ( pxStaticQueue != NULL ) &&
 8001cba:	b102      	cbz	r2, 8001cbe <xQueueGenericCreateStatic+0x10>
            ( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0U ) ) ) &&
 8001cbc:	b1a1      	cbz	r1, 8001ce8 <xQueueGenericCreateStatic+0x3a>
 8001cbe:	b15a      	cbz	r2, 8001cd8 <xQueueGenericCreateStatic+0x2a>
                pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8001cc0:	2301      	movs	r3, #1
 8001cc2:	f884 3056 	strb.w	r3, [r4, #86]	; 0x56
            prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 8001cc6:	9400      	str	r4, [sp, #0]
 8001cc8:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8001ccc:	4660      	mov	r0, ip
 8001cce:	f7ff ffde 	bl	8001c8e <prvInitialiseNewQueue>
            pxNewQueue = ( Queue_t * ) pxStaticQueue;
 8001cd2:	4620      	mov	r0, r4
    }
 8001cd4:	b002      	add	sp, #8
 8001cd6:	bd10      	pop	{r4, pc}
            ( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0U ) ) ) )
 8001cd8:	2900      	cmp	r1, #0
 8001cda:	d0f1      	beq.n	8001cc0 <xQueueGenericCreateStatic+0x12>
        Queue_t * pxNewQueue = NULL;
 8001cdc:	4610      	mov	r0, r2
        return pxNewQueue;
 8001cde:	e7f9      	b.n	8001cd4 <xQueueGenericCreateStatic+0x26>
        Queue_t * pxNewQueue = NULL;
 8001ce0:	2000      	movs	r0, #0
    }
 8001ce2:	4770      	bx	lr
        Queue_t * pxNewQueue = NULL;
 8001ce4:	4618      	mov	r0, r3
 8001ce6:	e7f5      	b.n	8001cd4 <xQueueGenericCreateStatic+0x26>
 8001ce8:	2000      	movs	r0, #0
 8001cea:	e7f3      	b.n	8001cd4 <xQueueGenericCreateStatic+0x26>

08001cec <xQueueReceive>:
{
 8001cec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001cee:	b085      	sub	sp, #20
 8001cf0:	4604      	mov	r4, r0
 8001cf2:	460f      	mov	r7, r1
 8001cf4:	9201      	str	r2, [sp, #4]
    BaseType_t xEntryTimeSet = pdFALSE;
 8001cf6:	2600      	movs	r6, #0
 8001cf8:	e03e      	b.n	8001d78 <xQueueReceive+0x8c>
                prvCopyDataFromQueue( pxQueue, pvBuffer );
 8001cfa:	4639      	mov	r1, r7
 8001cfc:	4620      	mov	r0, r4
 8001cfe:	f7ff fefc 	bl	8001afa <prvCopyDataFromQueue>
                pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting - ( UBaseType_t ) 1 );
 8001d02:	3d01      	subs	r5, #1
 8001d04:	64a5      	str	r5, [r4, #72]	; 0x48
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8001d06:	6923      	ldr	r3, [r4, #16]
 8001d08:	b923      	cbnz	r3, 8001d14 <xQueueReceive+0x28>
                taskEXIT_CRITICAL();
 8001d0a:	f001 f9b3 	bl	8003074 <vPortExitCritical>
                return pdPASS;
 8001d0e:	2001      	movs	r0, #1
}
 8001d10:	b005      	add	sp, #20
 8001d12:	bdf0      	pop	{r4, r5, r6, r7, pc}
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8001d14:	f104 0010 	add.w	r0, r4, #16
 8001d18:	f000 fcee 	bl	80026f8 <xTaskRemoveFromEventList>
 8001d1c:	2800      	cmp	r0, #0
 8001d1e:	d0f4      	beq.n	8001d0a <xQueueReceive+0x1e>
                        queueYIELD_IF_USING_PREEMPTION();
 8001d20:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001d24:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001d28:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8001d2c:	f3bf 8f4f 	dsb	sy
 8001d30:	f3bf 8f6f 	isb	sy
 8001d34:	e7e9      	b.n	8001d0a <xQueueReceive+0x1e>
                    taskEXIT_CRITICAL();
 8001d36:	f001 f99d 	bl	8003074 <vPortExitCritical>
                    return errQUEUE_EMPTY;
 8001d3a:	2000      	movs	r0, #0
 8001d3c:	e7e8      	b.n	8001d10 <xQueueReceive+0x24>
                    vTaskInternalSetTimeOutState( &xTimeOut );
 8001d3e:	a802      	add	r0, sp, #8
 8001d40:	f000 fd4c 	bl	80027dc <vTaskInternalSetTimeOutState>
                    xEntryTimeSet = pdTRUE;
 8001d44:	2601      	movs	r6, #1
 8001d46:	e021      	b.n	8001d8c <xQueueReceive+0xa0>
        prvLockQueue( pxQueue );
 8001d48:	2300      	movs	r3, #0
 8001d4a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8001d4e:	e029      	b.n	8001da4 <xQueueReceive+0xb8>
 8001d50:	2300      	movs	r3, #0
 8001d52:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8001d56:	e02b      	b.n	8001db0 <xQueueReceive+0xc4>
                prvUnlockQueue( pxQueue );
 8001d58:	4620      	mov	r0, r4
 8001d5a:	f7ff ff0c 	bl	8001b76 <prvUnlockQueue>
                ( void ) xTaskResumeAll();
 8001d5e:	f000 fb7f 	bl	8002460 <xTaskResumeAll>
 8001d62:	e009      	b.n	8001d78 <xQueueReceive+0x8c>
            prvUnlockQueue( pxQueue );
 8001d64:	4620      	mov	r0, r4
 8001d66:	f7ff ff06 	bl	8001b76 <prvUnlockQueue>
            ( void ) xTaskResumeAll();
 8001d6a:	f000 fb79 	bl	8002460 <xTaskResumeAll>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8001d6e:	4620      	mov	r0, r4
 8001d70:	f7ff fe7b 	bl	8001a6a <prvIsQueueEmpty>
 8001d74:	2800      	cmp	r0, #0
 8001d76:	d13f      	bne.n	8001df8 <xQueueReceive+0x10c>
        taskENTER_CRITICAL();
 8001d78:	f001 f96c 	bl	8003054 <vPortEnterCritical>
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8001d7c:	6ca5      	ldr	r5, [r4, #72]	; 0x48
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8001d7e:	2d00      	cmp	r5, #0
 8001d80:	d1bb      	bne.n	8001cfa <xQueueReceive+0xe>
                if( xTicksToWait == ( TickType_t ) 0 )
 8001d82:	9b01      	ldr	r3, [sp, #4]
 8001d84:	2b00      	cmp	r3, #0
 8001d86:	d0d6      	beq.n	8001d36 <xQueueReceive+0x4a>
                else if( xEntryTimeSet == pdFALSE )
 8001d88:	2e00      	cmp	r6, #0
 8001d8a:	d0d8      	beq.n	8001d3e <xQueueReceive+0x52>
        taskEXIT_CRITICAL();
 8001d8c:	f001 f972 	bl	8003074 <vPortExitCritical>
        vTaskSuspendAll();
 8001d90:	f000 fa84 	bl	800229c <vTaskSuspendAll>
        prvLockQueue( pxQueue );
 8001d94:	f001 f95e 	bl	8003054 <vPortEnterCritical>
 8001d98:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8001d9c:	b25b      	sxtb	r3, r3
 8001d9e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8001da2:	d0d1      	beq.n	8001d48 <xQueueReceive+0x5c>
 8001da4:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8001da8:	b25b      	sxtb	r3, r3
 8001daa:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8001dae:	d0cf      	beq.n	8001d50 <xQueueReceive+0x64>
 8001db0:	f001 f960 	bl	8003074 <vPortExitCritical>
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8001db4:	a901      	add	r1, sp, #4
 8001db6:	a802      	add	r0, sp, #8
 8001db8:	f000 fd1c 	bl	80027f4 <xTaskCheckForTimeOut>
 8001dbc:	2800      	cmp	r0, #0
 8001dbe:	d1d1      	bne.n	8001d64 <xQueueReceive+0x78>
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8001dc0:	4620      	mov	r0, r4
 8001dc2:	f7ff fe52 	bl	8001a6a <prvIsQueueEmpty>
 8001dc6:	2800      	cmp	r0, #0
 8001dc8:	d0c6      	beq.n	8001d58 <xQueueReceive+0x6c>
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8001dca:	9901      	ldr	r1, [sp, #4]
 8001dcc:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001dd0:	f000 fc66 	bl	80026a0 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
 8001dd4:	4620      	mov	r0, r4
 8001dd6:	f7ff fece 	bl	8001b76 <prvUnlockQueue>
                if( xTaskResumeAll() == pdFALSE )
 8001dda:	f000 fb41 	bl	8002460 <xTaskResumeAll>
 8001dde:	2800      	cmp	r0, #0
 8001de0:	d1ca      	bne.n	8001d78 <xQueueReceive+0x8c>
                    taskYIELD_WITHIN_API();
 8001de2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001de6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8001dea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8001dee:	f3bf 8f4f 	dsb	sy
 8001df2:	f3bf 8f6f 	isb	sy
 8001df6:	e7bf      	b.n	8001d78 <xQueueReceive+0x8c>
                return errQUEUE_EMPTY;
 8001df8:	2000      	movs	r0, #0
 8001dfa:	e789      	b.n	8001d10 <xQueueReceive+0x24>

08001dfc <vQueueWaitForMessageRestricted>:
    {
 8001dfc:	b570      	push	{r4, r5, r6, lr}
 8001dfe:	4604      	mov	r4, r0
 8001e00:	460d      	mov	r5, r1
 8001e02:	4616      	mov	r6, r2
        prvLockQueue( pxQueue );
 8001e04:	f001 f926 	bl	8003054 <vPortEnterCritical>
 8001e08:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8001e0c:	b25b      	sxtb	r3, r3
 8001e0e:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8001e12:	d00d      	beq.n	8001e30 <vQueueWaitForMessageRestricted+0x34>
 8001e14:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8001e18:	b25b      	sxtb	r3, r3
 8001e1a:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
 8001e1e:	d00b      	beq.n	8001e38 <vQueueWaitForMessageRestricted+0x3c>
 8001e20:	f001 f928 	bl	8003074 <vPortExitCritical>
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8001e24:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 8001e26:	b15b      	cbz	r3, 8001e40 <vQueueWaitForMessageRestricted+0x44>
        prvUnlockQueue( pxQueue );
 8001e28:	4620      	mov	r0, r4
 8001e2a:	f7ff fea4 	bl	8001b76 <prvUnlockQueue>
    }
 8001e2e:	bd70      	pop	{r4, r5, r6, pc}
        prvLockQueue( pxQueue );
 8001e30:	2300      	movs	r3, #0
 8001e32:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8001e36:	e7ed      	b.n	8001e14 <vQueueWaitForMessageRestricted+0x18>
 8001e38:	2300      	movs	r3, #0
 8001e3a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8001e3e:	e7ef      	b.n	8001e20 <vQueueWaitForMessageRestricted+0x24>
            vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8001e40:	4632      	mov	r2, r6
 8001e42:	4629      	mov	r1, r5
 8001e44:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001e48:	f000 fc38 	bl	80026bc <vTaskPlaceOnEventListRestricted>
 8001e4c:	e7ec      	b.n	8001e28 <vQueueWaitForMessageRestricted+0x2c>
	...

08001e50 <prvGetExpectedIdleTime>:
         * configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
         * task that are in the Ready state, even though the idle task is
         * running. */
        #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
        {
            if( uxTopReadyPriority > tskIDLE_PRIORITY )
 8001e50:	4b0a      	ldr	r3, [pc, #40]	; (8001e7c <prvGetExpectedIdleTime+0x2c>)
 8001e52:	681b      	ldr	r3, [r3, #0]
 8001e54:	b103      	cbz	r3, 8001e58 <prvGetExpectedIdleTime+0x8>
            {
                uxHigherPriorityReadyTasks = pdTRUE;
 8001e56:	2301      	movs	r3, #1
                uxHigherPriorityReadyTasks = pdTRUE;
            }
        }
        #endif /* if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 ) */

        if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
 8001e58:	4a09      	ldr	r2, [pc, #36]	; (8001e80 <prvGetExpectedIdleTime+0x30>)
 8001e5a:	6812      	ldr	r2, [r2, #0]
 8001e5c:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
 8001e5e:	b950      	cbnz	r0, 8001e76 <prvGetExpectedIdleTime+0x26>
        {
            xReturn = 0;
        }
        else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1U )
 8001e60:	4a08      	ldr	r2, [pc, #32]	; (8001e84 <prvGetExpectedIdleTime+0x34>)
 8001e62:	6812      	ldr	r2, [r2, #0]
 8001e64:	2a01      	cmp	r2, #1
 8001e66:	d807      	bhi.n	8001e78 <prvGetExpectedIdleTime+0x28>
            /* There are other idle priority tasks in the ready state.  If
             * time slicing is used then the very next tick interrupt must be
             * processed. */
            xReturn = 0;
        }
        else if( uxHigherPriorityReadyTasks != pdFALSE )
 8001e68:	b933      	cbnz	r3, 8001e78 <prvGetExpectedIdleTime+0x28>
             * configUSE_PREEMPTION is 0. */
            xReturn = 0;
        }
        else
        {
            xReturn = xNextTaskUnblockTime;
 8001e6a:	4b07      	ldr	r3, [pc, #28]	; (8001e88 <prvGetExpectedIdleTime+0x38>)
 8001e6c:	6818      	ldr	r0, [r3, #0]
            xReturn -= xTickCount;
 8001e6e:	4b07      	ldr	r3, [pc, #28]	; (8001e8c <prvGetExpectedIdleTime+0x3c>)
 8001e70:	681b      	ldr	r3, [r3, #0]
 8001e72:	1ac0      	subs	r0, r0, r3
 8001e74:	4770      	bx	lr
            xReturn = 0;
 8001e76:	2000      	movs	r0, #0
        }

        return xReturn;
    }
 8001e78:	4770      	bx	lr
 8001e7a:	bf00      	nop
 8001e7c:	200086d4 	ldrdcs	r8, [r0], -r4
 8001e80:	2000822c 	andcs	r8, r0, ip, lsr #4
 8001e84:	20008238 	andcs	r8, r0, r8, lsr r2
 8001e88:	20008760 	andcs	r8, r0, r0, ror #14
 8001e8c:	200087c4 	andcs	r8, r0, r4, asr #15

08001e90 <prvResetNextTaskUnblockTime>:
#endif /* INCLUDE_vTaskDelete */
/*-----------------------------------------------------------*/

static void prvResetNextTaskUnblockTime( void )
{
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8001e90:	4b07      	ldr	r3, [pc, #28]	; (8001eb0 <prvResetNextTaskUnblockTime+0x20>)
 8001e92:	681b      	ldr	r3, [r3, #0]
 8001e94:	681b      	ldr	r3, [r3, #0]
 8001e96:	b923      	cbnz	r3, 8001ea2 <prvResetNextTaskUnblockTime+0x12>
    {
        /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
         * the maximum possible value so it is  extremely unlikely that the
         * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
         * there is an item in the delayed list. */
        xNextTaskUnblockTime = portMAX_DELAY;
 8001e98:	4b06      	ldr	r3, [pc, #24]	; (8001eb4 <prvResetNextTaskUnblockTime+0x24>)
 8001e9a:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8001e9e:	601a      	str	r2, [r3, #0]
 8001ea0:	4770      	bx	lr
    {
        /* The new current delayed list is not empty, get the value of
         * the item at the head of the delayed list.  This is the time at
         * which the task at the head of the delayed list should be removed
         * from the Blocked state. */
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
 8001ea2:	4b03      	ldr	r3, [pc, #12]	; (8001eb0 <prvResetNextTaskUnblockTime+0x20>)
 8001ea4:	681b      	ldr	r3, [r3, #0]
 8001ea6:	68db      	ldr	r3, [r3, #12]
 8001ea8:	681a      	ldr	r2, [r3, #0]
 8001eaa:	4b02      	ldr	r3, [pc, #8]	; (8001eb4 <prvResetNextTaskUnblockTime+0x24>)
 8001eac:	601a      	str	r2, [r3, #0]
    }
}
 8001eae:	4770      	bx	lr
 8001eb0:	20008230 	andcs	r8, r0, r0, lsr r2
 8001eb4:	20008760 	andcs	r8, r0, r0, ror #14

08001eb8 <prvInitialiseNewTask>:
{
 8001eb8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001ebc:	4680      	mov	r8, r0
 8001ebe:	460d      	mov	r5, r1
 8001ec0:	4617      	mov	r7, r2
 8001ec2:	4699      	mov	r9, r3
 8001ec4:	9e08      	ldr	r6, [sp, #32]
 8001ec6:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
 8001eca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
        ( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) uxStackDepth * sizeof( StackType_t ) );
 8001ecc:	0092      	lsls	r2, r2, #2
 8001ece:	21a5      	movs	r1, #165	; 0xa5
 8001ed0:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8001ed2:	f001 faa5 	bl	8003420 <memset>
        pxTopOfStack = &( pxNewTCB->pxStack[ uxStackDepth - ( configSTACK_DEPTH_TYPE ) 1 ] );
 8001ed6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ed8:	f107 4280 	add.w	r2, r7, #1073741824	; 0x40000000
 8001edc:	3a01      	subs	r2, #1
 8001ede:	eb03 0782 	add.w	r7, r3, r2, lsl #2
        pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) );
 8001ee2:	f027 0707 	bic.w	r7, r7, #7
    if( pcName != NULL )
 8001ee6:	b19d      	cbz	r5, 8001f10 <prvInitialiseNewTask+0x58>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8001ee8:	f04f 0c00 	mov.w	ip, #0
 8001eec:	f1bc 0f03 	cmp.w	ip, #3
 8001ef0:	d80b      	bhi.n	8001f0a <prvInitialiseNewTask+0x52>
            pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8001ef2:	f815 200c 	ldrb.w	r2, [r5, ip]
 8001ef6:	eb04 030c 	add.w	r3, r4, ip
 8001efa:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
            if( pcName[ x ] == ( char ) 0x00 )
 8001efe:	f815 300c 	ldrb.w	r3, [r5, ip]
 8001f02:	b113      	cbz	r3, 8001f0a <prvInitialiseNewTask+0x52>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8001f04:	f10c 0c01 	add.w	ip, ip, #1
 8001f08:	e7f0      	b.n	8001eec <prvInitialiseNewTask+0x34>
        pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1U ] = '\0';
 8001f0a:	2300      	movs	r3, #0
 8001f0c:	f884 3037 	strb.w	r3, [r4, #55]	; 0x37
    if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8001f10:	2e04      	cmp	r6, #4
 8001f12:	d900      	bls.n	8001f16 <prvInitialiseNewTask+0x5e>
        uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 8001f14:	2604      	movs	r6, #4
    pxNewTCB->uxPriority = uxPriority;
 8001f16:	62e6      	str	r6, [r4, #44]	; 0x2c
        pxNewTCB->uxBasePriority = uxPriority;
 8001f18:	63a6      	str	r6, [r4, #56]	; 0x38
    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8001f1a:	1d20      	adds	r0, r4, #4
 8001f1c:	f7ff fd77 	bl	8001a0e <vListInitialiseItem>
    vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8001f20:	f104 0018 	add.w	r0, r4, #24
 8001f24:	f7ff fd73 	bl	8001a0e <vListInitialiseItem>
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8001f28:	6124      	str	r4, [r4, #16]
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority );
 8001f2a:	f1c6 0605 	rsb	r6, r6, #5
 8001f2e:	61a6      	str	r6, [r4, #24]
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8001f30:	6264      	str	r4, [r4, #36]	; 0x24
            pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8001f32:	464a      	mov	r2, r9
 8001f34:	4641      	mov	r1, r8
 8001f36:	4638      	mov	r0, r7
 8001f38:	f001 f860 	bl	8002ffc <pxPortInitialiseStack>
 8001f3c:	6020      	str	r0, [r4, #0]
    if( pxCreatedTask != NULL )
 8001f3e:	f1ba 0f00 	cmp.w	sl, #0
 8001f42:	d001      	beq.n	8001f48 <prvInitialiseNewTask+0x90>
        *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8001f44:	f8ca 4000 	str.w	r4, [sl]
}
 8001f48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08001f4c <prvCreateStaticTask>:
    {
 8001f4c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001f50:	b085      	sub	sp, #20
 8001f52:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8001f54:	9c0e      	ldr	r4, [sp, #56]	; 0x38
        if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 8001f56:	b1f4      	cbz	r4, 8001f96 <prvCreateStaticTask+0x4a>
 8001f58:	4605      	mov	r5, r0
 8001f5a:	4689      	mov	r9, r1
 8001f5c:	4690      	mov	r8, r2
 8001f5e:	461f      	mov	r7, r3
 8001f60:	b1de      	cbz	r6, 8001f9a <prvCreateStaticTask+0x4e>
            ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 8001f62:	224c      	movs	r2, #76	; 0x4c
 8001f64:	2100      	movs	r1, #0
 8001f66:	4620      	mov	r0, r4
 8001f68:	f001 fa5a 	bl	8003420 <memset>
            pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8001f6c:	6326      	str	r6, [r4, #48]	; 0x30
                pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8001f6e:	2302      	movs	r3, #2
 8001f70:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8001f74:	2300      	movs	r3, #0
 8001f76:	9303      	str	r3, [sp, #12]
 8001f78:	9402      	str	r4, [sp, #8]
 8001f7a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8001f7c:	9301      	str	r3, [sp, #4]
 8001f7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8001f80:	9300      	str	r3, [sp, #0]
 8001f82:	463b      	mov	r3, r7
 8001f84:	4642      	mov	r2, r8
 8001f86:	4649      	mov	r1, r9
 8001f88:	4628      	mov	r0, r5
 8001f8a:	f7ff ff95 	bl	8001eb8 <prvInitialiseNewTask>
            pxNewTCB = ( TCB_t * ) pxTaskBuffer;
 8001f8e:	4620      	mov	r0, r4
    }
 8001f90:	b005      	add	sp, #20
 8001f92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
            pxNewTCB = NULL;
 8001f96:	4620      	mov	r0, r4
 8001f98:	e7fa      	b.n	8001f90 <prvCreateStaticTask+0x44>
 8001f9a:	4630      	mov	r0, r6
        return pxNewTCB;
 8001f9c:	e7f8      	b.n	8001f90 <prvCreateStaticTask+0x44>
	...

08001fa0 <prvInitialiseTaskLists>:
{
 8001fa0:	b538      	push	{r3, r4, r5, lr}
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8001fa2:	2400      	movs	r4, #0
 8001fa4:	e007      	b.n	8001fb6 <prvInitialiseTaskLists+0x16>
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8001fa6:	ebc4 02c4 	rsb	r2, r4, r4, lsl #3
 8001faa:	0093      	lsls	r3, r2, #2
 8001fac:	480e      	ldr	r0, [pc, #56]	; (8001fe8 <prvInitialiseTaskLists+0x48>)
 8001fae:	4418      	add	r0, r3
 8001fb0:	f7ff fd20 	bl	80019f4 <vListInitialise>
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8001fb4:	3401      	adds	r4, #1
 8001fb6:	2c04      	cmp	r4, #4
 8001fb8:	d9f5      	bls.n	8001fa6 <prvInitialiseTaskLists+0x6>
    vListInitialise( &xDelayedTaskList1 );
 8001fba:	4d0c      	ldr	r5, [pc, #48]	; (8001fec <prvInitialiseTaskLists+0x4c>)
 8001fbc:	4628      	mov	r0, r5
 8001fbe:	f7ff fd19 	bl	80019f4 <vListInitialise>
    vListInitialise( &xDelayedTaskList2 );
 8001fc2:	4c0b      	ldr	r4, [pc, #44]	; (8001ff0 <prvInitialiseTaskLists+0x50>)
 8001fc4:	4620      	mov	r0, r4
 8001fc6:	f7ff fd15 	bl	80019f4 <vListInitialise>
    vListInitialise( &xPendingReadyList );
 8001fca:	480a      	ldr	r0, [pc, #40]	; (8001ff4 <prvInitialiseTaskLists+0x54>)
 8001fcc:	f7ff fd12 	bl	80019f4 <vListInitialise>
        vListInitialise( &xTasksWaitingTermination );
 8001fd0:	4809      	ldr	r0, [pc, #36]	; (8001ff8 <prvInitialiseTaskLists+0x58>)
 8001fd2:	f7ff fd0f 	bl	80019f4 <vListInitialise>
        vListInitialise( &xSuspendedTaskList );
 8001fd6:	4809      	ldr	r0, [pc, #36]	; (8001ffc <prvInitialiseTaskLists+0x5c>)
 8001fd8:	f7ff fd0c 	bl	80019f4 <vListInitialise>
    pxDelayedTaskList = &xDelayedTaskList1;
 8001fdc:	4b08      	ldr	r3, [pc, #32]	; (8002000 <prvInitialiseTaskLists+0x60>)
 8001fde:	601d      	str	r5, [r3, #0]
    pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8001fe0:	4b08      	ldr	r3, [pc, #32]	; (8002004 <prvInitialiseTaskLists+0x64>)
 8001fe2:	601c      	str	r4, [r3, #0]
}
 8001fe4:	bd38      	pop	{r3, r4, r5, pc}
 8001fe6:	bf00      	nop
 8001fe8:	20008238 	andcs	r8, r0, r8, lsr r2
 8001fec:	200086d8 	ldrdcs	r8, [r0], -r8	; <UNPREDICTABLE>
 8001ff0:	200086f4 	strdcs	r8, [r0], -r4
 8001ff4:	2000876c 	andcs	r8, r0, ip, ror #14
 8001ff8:	200087a8 	andcs	r8, r0, r8, lsr #15
 8001ffc:	2000878c 	andcs	r8, r0, ip, lsl #15
 8002000:	20008230 	andcs	r8, r0, r0, lsr r2
 8002004:	20008234 	andcs	r8, r0, r4, lsr r2

08002008 <prvAddNewTaskToReadyList>:
    {
 8002008:	b510      	push	{r4, lr}
 800200a:	4604      	mov	r4, r0
        taskENTER_CRITICAL();
 800200c:	f001 f822 	bl	8003054 <vPortEnterCritical>
            uxCurrentNumberOfTasks = ( UBaseType_t ) ( uxCurrentNumberOfTasks + 1U );
 8002010:	4a2a      	ldr	r2, [pc, #168]	; (80020bc <prvAddNewTaskToReadyList+0xb4>)
 8002012:	6813      	ldr	r3, [r2, #0]
 8002014:	3301      	adds	r3, #1
 8002016:	6013      	str	r3, [r2, #0]
            if( pxCurrentTCB == NULL )
 8002018:	4b29      	ldr	r3, [pc, #164]	; (80020c0 <prvAddNewTaskToReadyList+0xb8>)
 800201a:	681b      	ldr	r3, [r3, #0]
 800201c:	b15b      	cbz	r3, 8002036 <prvAddNewTaskToReadyList+0x2e>
                if( xSchedulerRunning == pdFALSE )
 800201e:	4b29      	ldr	r3, [pc, #164]	; (80020c4 <prvAddNewTaskToReadyList+0xbc>)
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	b96b      	cbnz	r3, 8002040 <prvAddNewTaskToReadyList+0x38>
                    if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8002024:	4b26      	ldr	r3, [pc, #152]	; (80020c0 <prvAddNewTaskToReadyList+0xb8>)
 8002026:	681b      	ldr	r3, [r3, #0]
 8002028:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800202a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800202c:	429a      	cmp	r2, r3
 800202e:	d807      	bhi.n	8002040 <prvAddNewTaskToReadyList+0x38>
                        pxCurrentTCB = pxNewTCB;
 8002030:	4b23      	ldr	r3, [pc, #140]	; (80020c0 <prvAddNewTaskToReadyList+0xb8>)
 8002032:	601c      	str	r4, [r3, #0]
 8002034:	e004      	b.n	8002040 <prvAddNewTaskToReadyList+0x38>
                pxCurrentTCB = pxNewTCB;
 8002036:	4b22      	ldr	r3, [pc, #136]	; (80020c0 <prvAddNewTaskToReadyList+0xb8>)
 8002038:	601c      	str	r4, [r3, #0]
                if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800203a:	6813      	ldr	r3, [r2, #0]
 800203c:	2b01      	cmp	r3, #1
 800203e:	d039      	beq.n	80020b4 <prvAddNewTaskToReadyList+0xac>
            uxTaskNumber++;
 8002040:	4a21      	ldr	r2, [pc, #132]	; (80020c8 <prvAddNewTaskToReadyList+0xc0>)
 8002042:	6813      	ldr	r3, [r2, #0]
 8002044:	3301      	adds	r3, #1
 8002046:	6013      	str	r3, [r2, #0]
            prvAddTaskToReadyList( pxNewTCB );
 8002048:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800204a:	4a20      	ldr	r2, [pc, #128]	; (80020cc <prvAddNewTaskToReadyList+0xc4>)
 800204c:	6812      	ldr	r2, [r2, #0]
 800204e:	4293      	cmp	r3, r2
 8002050:	d901      	bls.n	8002056 <prvAddNewTaskToReadyList+0x4e>
 8002052:	4a1e      	ldr	r2, [pc, #120]	; (80020cc <prvAddNewTaskToReadyList+0xc4>)
 8002054:	6013      	str	r3, [r2, #0]
 8002056:	4a1e      	ldr	r2, [pc, #120]	; (80020d0 <prvAddNewTaskToReadyList+0xc8>)
 8002058:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 800205c:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8002060:	685b      	ldr	r3, [r3, #4]
 8002062:	60a3      	str	r3, [r4, #8]
 8002064:	6898      	ldr	r0, [r3, #8]
 8002066:	60e0      	str	r0, [r4, #12]
 8002068:	1d21      	adds	r1, r4, #4
 800206a:	6041      	str	r1, [r0, #4]
 800206c:	6099      	str	r1, [r3, #8]
 800206e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002070:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
 8002074:	eb02 0081 	add.w	r0, r2, r1, lsl #2
 8002078:	6160      	str	r0, [r4, #20]
 800207a:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800207e:	3101      	adds	r1, #1
 8002080:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8002084:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
        taskEXIT_CRITICAL();
 8002088:	f000 fff4 	bl	8003074 <vPortExitCritical>
        if( xSchedulerRunning != pdFALSE )
 800208c:	4b0d      	ldr	r3, [pc, #52]	; (80020c4 <prvAddNewTaskToReadyList+0xbc>)
 800208e:	681b      	ldr	r3, [r3, #0]
 8002090:	b17b      	cbz	r3, 80020b2 <prvAddNewTaskToReadyList+0xaa>
            taskYIELD_ANY_CORE_IF_USING_PREEMPTION( pxNewTCB );
 8002092:	4b0b      	ldr	r3, [pc, #44]	; (80020c0 <prvAddNewTaskToReadyList+0xb8>)
 8002094:	681b      	ldr	r3, [r3, #0]
 8002096:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002098:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800209a:	429a      	cmp	r2, r3
 800209c:	d209      	bcs.n	80020b2 <prvAddNewTaskToReadyList+0xaa>
 800209e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80020a2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80020a6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80020aa:	f3bf 8f4f 	dsb	sy
 80020ae:	f3bf 8f6f 	isb	sy
    }
 80020b2:	bd10      	pop	{r4, pc}
                    prvInitialiseTaskLists();
 80020b4:	f7ff ff74 	bl	8001fa0 <prvInitialiseTaskLists>
 80020b8:	e7c2      	b.n	8002040 <prvAddNewTaskToReadyList+0x38>
 80020ba:	bf00      	nop
 80020bc:	200082c4 	andcs	r8, r0, r4, asr #5
 80020c0:	2000822c 	andcs	r8, r0, ip, lsr #4
 80020c4:	20008788 	andcs	r8, r0, r8, lsl #15
 80020c8:	200084d0 	ldrdcs	r8, [r0], -r0
 80020cc:	200086d4 	ldrdcs	r8, [r0], -r4
 80020d0:	20008238 	andcs	r8, r0, r8, lsr r2

080020d4 <prvCreateTask>:
    {
 80020d4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80020d8:	b085      	sub	sp, #20
 80020da:	4606      	mov	r6, r0
 80020dc:	460f      	mov	r7, r1
 80020de:	4615      	mov	r5, r2
 80020e0:	4698      	mov	r8, r3
            pxStack = pvPortMallocStack( ( ( ( size_t ) uxStackDepth ) * sizeof( StackType_t ) ) );
 80020e2:	0090      	lsls	r0, r2, #2
 80020e4:	f000 feca 	bl	8002e7c <pvPortMalloc>
            if( pxStack != NULL )
 80020e8:	4681      	mov	r9, r0
 80020ea:	b310      	cbz	r0, 8002132 <prvCreateTask+0x5e>
                pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 80020ec:	204c      	movs	r0, #76	; 0x4c
 80020ee:	f000 fec5 	bl	8002e7c <pvPortMalloc>
                if( pxNewTCB != NULL )
 80020f2:	4604      	mov	r4, r0
 80020f4:	b1c8      	cbz	r0, 800212a <prvCreateTask+0x56>
                    ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
 80020f6:	224c      	movs	r2, #76	; 0x4c
 80020f8:	2100      	movs	r1, #0
 80020fa:	f001 f991 	bl	8003420 <memset>
                    pxNewTCB->pxStack = pxStack;
 80020fe:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
        if( pxNewTCB != NULL )
 8002102:	b174      	cbz	r4, 8002122 <prvCreateTask+0x4e>
                pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8002104:	2300      	movs	r3, #0
 8002106:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800210a:	9303      	str	r3, [sp, #12]
 800210c:	9402      	str	r4, [sp, #8]
 800210e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002110:	9301      	str	r3, [sp, #4]
 8002112:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8002114:	9300      	str	r3, [sp, #0]
 8002116:	4643      	mov	r3, r8
 8002118:	462a      	mov	r2, r5
 800211a:	4639      	mov	r1, r7
 800211c:	4630      	mov	r0, r6
 800211e:	f7ff fecb 	bl	8001eb8 <prvInitialiseNewTask>
    }
 8002122:	4620      	mov	r0, r4
 8002124:	b005      	add	sp, #20
 8002126:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
                    vPortFreeStack( pxStack );
 800212a:	4648      	mov	r0, r9
 800212c:	f000 ff10 	bl	8002f50 <vPortFree>
 8002130:	e7e7      	b.n	8002102 <prvCreateTask+0x2e>
                pxNewTCB = NULL;
 8002132:	4604      	mov	r4, r0
        return pxNewTCB;
 8002134:	e7f5      	b.n	8002122 <prvCreateTask+0x4e>

08002136 <prvDeleteTCB>:
    {
 8002136:	b510      	push	{r4, lr}
 8002138:	4604      	mov	r4, r0
            if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800213a:	f890 3049 	ldrb.w	r3, [r0, #73]	; 0x49
 800213e:	b113      	cbz	r3, 8002146 <prvDeleteTCB+0x10>
            else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8002140:	2b01      	cmp	r3, #1
 8002142:	d007      	beq.n	8002154 <prvDeleteTCB+0x1e>
    }
 8002144:	bd10      	pop	{r4, pc}
                vPortFreeStack( pxTCB->pxStack );
 8002146:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002148:	f000 ff02 	bl	8002f50 <vPortFree>
                vPortFree( pxTCB );
 800214c:	4620      	mov	r0, r4
 800214e:	f000 feff 	bl	8002f50 <vPortFree>
 8002152:	e7f7      	b.n	8002144 <prvDeleteTCB+0xe>
                vPortFree( pxTCB );
 8002154:	f000 fefc 	bl	8002f50 <vPortFree>
    }
 8002158:	e7f4      	b.n	8002144 <prvDeleteTCB+0xe>
	...

0800215c <prvCheckTasksWaitingTermination>:
        while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800215c:	4b0f      	ldr	r3, [pc, #60]	; (800219c <prvCheckTasksWaitingTermination+0x40>)
 800215e:	681b      	ldr	r3, [r3, #0]
 8002160:	b1d3      	cbz	r3, 8002198 <prvCheckTasksWaitingTermination+0x3c>
{
 8002162:	b510      	push	{r4, lr}
                taskENTER_CRITICAL();
 8002164:	f000 ff76 	bl	8003054 <vPortEnterCritical>
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
 8002168:	4b0d      	ldr	r3, [pc, #52]	; (80021a0 <prvCheckTasksWaitingTermination+0x44>)
 800216a:	68db      	ldr	r3, [r3, #12]
 800216c:	68dc      	ldr	r4, [r3, #12]
                        ( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800216e:	1d20      	adds	r0, r4, #4
 8002170:	f7ff fc69 	bl	8001a46 <uxListRemove>
                        --uxCurrentNumberOfTasks;
 8002174:	4a0b      	ldr	r2, [pc, #44]	; (80021a4 <prvCheckTasksWaitingTermination+0x48>)
 8002176:	6813      	ldr	r3, [r2, #0]
 8002178:	3b01      	subs	r3, #1
 800217a:	6013      	str	r3, [r2, #0]
                        --uxDeletedTasksWaitingCleanUp;
 800217c:	4a07      	ldr	r2, [pc, #28]	; (800219c <prvCheckTasksWaitingTermination+0x40>)
 800217e:	6813      	ldr	r3, [r2, #0]
 8002180:	3b01      	subs	r3, #1
 8002182:	6013      	str	r3, [r2, #0]
                taskEXIT_CRITICAL();
 8002184:	f000 ff76 	bl	8003074 <vPortExitCritical>
                prvDeleteTCB( pxTCB );
 8002188:	4620      	mov	r0, r4
 800218a:	f7ff ffd4 	bl	8002136 <prvDeleteTCB>
        while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800218e:	4b03      	ldr	r3, [pc, #12]	; (800219c <prvCheckTasksWaitingTermination+0x40>)
 8002190:	681b      	ldr	r3, [r3, #0]
 8002192:	2b00      	cmp	r3, #0
 8002194:	d1e6      	bne.n	8002164 <prvCheckTasksWaitingTermination+0x8>
}
 8002196:	bd10      	pop	{r4, pc}
 8002198:	4770      	bx	lr
 800219a:	bf00      	nop
 800219c:	200082c8 	andcs	r8, r0, r8, asr #5
 80021a0:	200087a8 	andcs	r8, r0, r8, lsr #15
 80021a4:	200082c4 	andcs	r8, r0, r4, asr #5

080021a8 <prvAddCurrentTaskToDelayedList>:
#endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) */
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                            const BaseType_t xCanBlockIndefinitely )
{
 80021a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80021ac:	4604      	mov	r4, r0
 80021ae:	460d      	mov	r5, r1
    TickType_t xTimeToWake;
    const TickType_t xConstTickCount = xTickCount;
 80021b0:	4b21      	ldr	r3, [pc, #132]	; (8002238 <prvAddCurrentTaskToDelayedList+0x90>)
 80021b2:	681e      	ldr	r6, [r3, #0]
    List_t * const pxDelayedList = pxDelayedTaskList;
 80021b4:	4b21      	ldr	r3, [pc, #132]	; (800223c <prvAddCurrentTaskToDelayedList+0x94>)
 80021b6:	681f      	ldr	r7, [r3, #0]
    List_t * const pxOverflowDelayedList = pxOverflowDelayedTaskList;
 80021b8:	4b21      	ldr	r3, [pc, #132]	; (8002240 <prvAddCurrentTaskToDelayedList+0x98>)
 80021ba:	f8d3 8000 	ldr.w	r8, [r3]
    #if ( INCLUDE_xTaskAbortDelay == 1 )
    {
        /* About to enter a delayed list, so ensure the ucDelayAborted flag is
         * reset to pdFALSE so it can be detected as having been set to pdTRUE
         * when the task leaves the Blocked state. */
        pxCurrentTCB->ucDelayAborted = ( uint8_t ) pdFALSE;
 80021be:	4b21      	ldr	r3, [pc, #132]	; (8002244 <prvAddCurrentTaskToDelayedList+0x9c>)
 80021c0:	681a      	ldr	r2, [r3, #0]
 80021c2:	2100      	movs	r1, #0
 80021c4:	f882 104a 	strb.w	r1, [r2, #74]	; 0x4a
    }
    #endif

    /* Remove the task from the ready list before adding it to the blocked list
     * as the same list item is used for both lists. */
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80021c8:	6818      	ldr	r0, [r3, #0]
 80021ca:	3004      	adds	r0, #4
 80021cc:	f7ff fc3b 	bl	8001a46 <uxListRemove>
        mtCOVERAGE_TEST_MARKER();
    }

    #if ( INCLUDE_vTaskSuspend == 1 )
    {
        if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80021d0:	f1b4 3fff 	cmp.w	r4, #4294967295	; 0xffffffff
 80021d4:	d00d      	beq.n	80021f2 <prvAddCurrentTaskToDelayedList+0x4a>
        else
        {
            /* Calculate the time at which the task should be woken if the event
             * does not occur.  This may overflow but this doesn't matter, the
             * kernel will manage it correctly. */
            xTimeToWake = xConstTickCount + xTicksToWait;
 80021d6:	4434      	add	r4, r6

            /* The list item will be inserted in wake time order. */
            listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80021d8:	4b1a      	ldr	r3, [pc, #104]	; (8002244 <prvAddCurrentTaskToDelayedList+0x9c>)
 80021da:	681b      	ldr	r3, [r3, #0]
 80021dc:	605c      	str	r4, [r3, #4]

            if( xTimeToWake < xConstTickCount )
 80021de:	42a6      	cmp	r6, r4
 80021e0:	d91d      	bls.n	800221e <prvAddCurrentTaskToDelayedList+0x76>
            {
                /* Wake time has overflowed.  Place this item in the overflow
                 * list. */
                traceMOVED_TASK_TO_OVERFLOW_DELAYED_LIST();
                vListInsert( pxOverflowDelayedList, &( pxCurrentTCB->xStateListItem ) );
 80021e2:	4b18      	ldr	r3, [pc, #96]	; (8002244 <prvAddCurrentTaskToDelayedList+0x9c>)
 80021e4:	6819      	ldr	r1, [r3, #0]
 80021e6:	3104      	adds	r1, #4
 80021e8:	4640      	mov	r0, r8
 80021ea:	f7ff fc13 	bl	8001a14 <vListInsert>

        /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
        ( void ) xCanBlockIndefinitely;
    }
    #endif /* INCLUDE_vTaskSuspend */
}
 80021ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80021f2:	2d00      	cmp	r5, #0
 80021f4:	d0ef      	beq.n	80021d6 <prvAddCurrentTaskToDelayedList+0x2e>
            listINSERT_END( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80021f6:	4a14      	ldr	r2, [pc, #80]	; (8002248 <prvAddCurrentTaskToDelayedList+0xa0>)
 80021f8:	6851      	ldr	r1, [r2, #4]
 80021fa:	4b12      	ldr	r3, [pc, #72]	; (8002244 <prvAddCurrentTaskToDelayedList+0x9c>)
 80021fc:	6818      	ldr	r0, [r3, #0]
 80021fe:	6081      	str	r1, [r0, #8]
 8002200:	6818      	ldr	r0, [r3, #0]
 8002202:	688c      	ldr	r4, [r1, #8]
 8002204:	60c4      	str	r4, [r0, #12]
 8002206:	6818      	ldr	r0, [r3, #0]
 8002208:	3004      	adds	r0, #4
 800220a:	6060      	str	r0, [r4, #4]
 800220c:	6818      	ldr	r0, [r3, #0]
 800220e:	3004      	adds	r0, #4
 8002210:	6088      	str	r0, [r1, #8]
 8002212:	681b      	ldr	r3, [r3, #0]
 8002214:	615a      	str	r2, [r3, #20]
 8002216:	6813      	ldr	r3, [r2, #0]
 8002218:	3301      	adds	r3, #1
 800221a:	6013      	str	r3, [r2, #0]
 800221c:	e7e7      	b.n	80021ee <prvAddCurrentTaskToDelayedList+0x46>
                vListInsert( pxDelayedList, &( pxCurrentTCB->xStateListItem ) );
 800221e:	4b09      	ldr	r3, [pc, #36]	; (8002244 <prvAddCurrentTaskToDelayedList+0x9c>)
 8002220:	6819      	ldr	r1, [r3, #0]
 8002222:	3104      	adds	r1, #4
 8002224:	4638      	mov	r0, r7
 8002226:	f7ff fbf5 	bl	8001a14 <vListInsert>
                if( xTimeToWake < xNextTaskUnblockTime )
 800222a:	4b08      	ldr	r3, [pc, #32]	; (800224c <prvAddCurrentTaskToDelayedList+0xa4>)
 800222c:	681b      	ldr	r3, [r3, #0]
 800222e:	42a3      	cmp	r3, r4
 8002230:	d9dd      	bls.n	80021ee <prvAddCurrentTaskToDelayedList+0x46>
                    xNextTaskUnblockTime = xTimeToWake;
 8002232:	4b06      	ldr	r3, [pc, #24]	; (800224c <prvAddCurrentTaskToDelayedList+0xa4>)
 8002234:	601c      	str	r4, [r3, #0]
}
 8002236:	e7da      	b.n	80021ee <prvAddCurrentTaskToDelayedList+0x46>
 8002238:	200087c4 	andcs	r8, r0, r4, asr #15
 800223c:	20008230 	andcs	r8, r0, r0, lsr r2
 8002240:	20008234 	andcs	r8, r0, r4, lsr r2
 8002244:	2000822c 	andcs	r8, r0, ip, lsr #4
 8002248:	2000878c 	andcs	r8, r0, ip, lsl #15
 800224c:	20008760 	andcs	r8, r0, r0, ror #14

08002250 <xTaskCreateStatic>:
    {
 8002250:	b510      	push	{r4, lr}
 8002252:	b086      	sub	sp, #24
        TaskHandle_t xReturn = NULL;
 8002254:	2400      	movs	r4, #0
 8002256:	9405      	str	r4, [sp, #20]
        pxNewTCB = prvCreateStaticTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, puxStackBuffer, pxTaskBuffer, &xReturn );
 8002258:	ac05      	add	r4, sp, #20
 800225a:	9403      	str	r4, [sp, #12]
 800225c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800225e:	9402      	str	r4, [sp, #8]
 8002260:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8002262:	9401      	str	r4, [sp, #4]
 8002264:	9c08      	ldr	r4, [sp, #32]
 8002266:	9400      	str	r4, [sp, #0]
 8002268:	f7ff fe70 	bl	8001f4c <prvCreateStaticTask>
        if( pxNewTCB != NULL )
 800226c:	b108      	cbz	r0, 8002272 <xTaskCreateStatic+0x22>
            prvAddNewTaskToReadyList( pxNewTCB );
 800226e:	f7ff fecb 	bl	8002008 <prvAddNewTaskToReadyList>
    }
 8002272:	9805      	ldr	r0, [sp, #20]
 8002274:	b006      	add	sp, #24
 8002276:	bd10      	pop	{r4, pc}

08002278 <xTaskCreate>:
    {
 8002278:	b510      	push	{r4, lr}
 800227a:	b082      	sub	sp, #8
        pxNewTCB = prvCreateTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask );
 800227c:	9c05      	ldr	r4, [sp, #20]
 800227e:	9401      	str	r4, [sp, #4]
 8002280:	9c04      	ldr	r4, [sp, #16]
 8002282:	9400      	str	r4, [sp, #0]
 8002284:	f7ff ff26 	bl	80020d4 <prvCreateTask>
        if( pxNewTCB != NULL )
 8002288:	b120      	cbz	r0, 8002294 <xTaskCreate+0x1c>
            prvAddNewTaskToReadyList( pxNewTCB );
 800228a:	f7ff febd 	bl	8002008 <prvAddNewTaskToReadyList>
            xReturn = pdPASS;
 800228e:	2001      	movs	r0, #1
    }
 8002290:	b002      	add	sp, #8
 8002292:	bd10      	pop	{r4, pc}
            xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8002294:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
        return xReturn;
 8002298:	e7fa      	b.n	8002290 <xTaskCreate+0x18>
	...

0800229c <vTaskSuspendAll>:
        uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended + 1U );
 800229c:	4a02      	ldr	r2, [pc, #8]	; (80022a8 <vTaskSuspendAll+0xc>)
 800229e:	6813      	ldr	r3, [r2, #0]
 80022a0:	3301      	adds	r3, #1
 80022a2:	6013      	str	r3, [r2, #0]
}
 80022a4:	4770      	bx	lr
 80022a6:	bf00      	nop
 80022a8:	200084cc 	andcs	r8, r0, ip, asr #9

080022ac <xTaskGetTickCount>:
        xTicks = xTickCount;
 80022ac:	4b01      	ldr	r3, [pc, #4]	; (80022b4 <xTaskGetTickCount+0x8>)
 80022ae:	6818      	ldr	r0, [r3, #0]
}
 80022b0:	4770      	bx	lr
 80022b2:	bf00      	nop
 80022b4:	200087c4 	andcs	r8, r0, r4, asr #15

080022b8 <uxTaskGetNumberOfTasks>:
    return uxCurrentNumberOfTasks;
 80022b8:	4b01      	ldr	r3, [pc, #4]	; (80022c0 <uxTaskGetNumberOfTasks+0x8>)
 80022ba:	6818      	ldr	r0, [r3, #0]
}
 80022bc:	4770      	bx	lr
 80022be:	bf00      	nop
 80022c0:	200082c4 	andcs	r8, r0, r4, asr #5

080022c4 <vTaskStepTick>:
    {
 80022c4:	b510      	push	{r4, lr}
 80022c6:	4604      	mov	r4, r0
        xUpdatedTickCount = xTickCount + xTicksToJump;
 80022c8:	4b0a      	ldr	r3, [pc, #40]	; (80022f4 <vTaskStepTick+0x30>)
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	4403      	add	r3, r0
        if( xUpdatedTickCount == xNextTaskUnblockTime )
 80022ce:	4a0a      	ldr	r2, [pc, #40]	; (80022f8 <vTaskStepTick+0x34>)
 80022d0:	6812      	ldr	r2, [r2, #0]
 80022d2:	429a      	cmp	r2, r3
 80022d4:	d004      	beq.n	80022e0 <vTaskStepTick+0x1c>
        xTickCount += xTicksToJump;
 80022d6:	4b07      	ldr	r3, [pc, #28]	; (80022f4 <vTaskStepTick+0x30>)
 80022d8:	6818      	ldr	r0, [r3, #0]
 80022da:	4404      	add	r4, r0
 80022dc:	601c      	str	r4, [r3, #0]
    }
 80022de:	bd10      	pop	{r4, pc}
            taskENTER_CRITICAL();
 80022e0:	f000 feb8 	bl	8003054 <vPortEnterCritical>
                xPendedTicks++;
 80022e4:	4a05      	ldr	r2, [pc, #20]	; (80022fc <vTaskStepTick+0x38>)
 80022e6:	6813      	ldr	r3, [r2, #0]
 80022e8:	3301      	adds	r3, #1
 80022ea:	6013      	str	r3, [r2, #0]
            taskEXIT_CRITICAL();
 80022ec:	f000 fec2 	bl	8003074 <vPortExitCritical>
            xTicksToJump--;
 80022f0:	3c01      	subs	r4, #1
 80022f2:	e7f0      	b.n	80022d6 <vTaskStepTick+0x12>
 80022f4:	200087c4 	andcs	r8, r0, r4, asr #15
 80022f8:	20008760 	andcs	r8, r0, r0, ror #14
 80022fc:	20008768 	andcs	r8, r0, r8, ror #14

08002300 <xTaskIncrementTick>:
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
 8002300:	4b4c      	ldr	r3, [pc, #304]	; (8002434 <xTaskIncrementTick+0x134>)
 8002302:	681b      	ldr	r3, [r3, #0]
 8002304:	2b00      	cmp	r3, #0
 8002306:	f040 808d 	bne.w	8002424 <xTaskIncrementTick+0x124>
{
 800230a:	b570      	push	{r4, r5, r6, lr}
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800230c:	4b4a      	ldr	r3, [pc, #296]	; (8002438 <xTaskIncrementTick+0x138>)
 800230e:	681c      	ldr	r4, [r3, #0]
 8002310:	3401      	adds	r4, #1
        xTickCount = xConstTickCount;
 8002312:	601c      	str	r4, [r3, #0]
        if( xConstTickCount == ( TickType_t ) 0U )
 8002314:	b1a4      	cbz	r4, 8002340 <xTaskIncrementTick+0x40>
        if( xConstTickCount >= xNextTaskUnblockTime )
 8002316:	4b49      	ldr	r3, [pc, #292]	; (800243c <xTaskIncrementTick+0x13c>)
 8002318:	681b      	ldr	r3, [r3, #0]
 800231a:	42a3      	cmp	r3, r4
 800231c:	d91d      	bls.n	800235a <xTaskIncrementTick+0x5a>
    BaseType_t xSwitchRequired = pdFALSE;
 800231e:	2000      	movs	r0, #0
                if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > 1U )
 8002320:	4b47      	ldr	r3, [pc, #284]	; (8002440 <xTaskIncrementTick+0x140>)
 8002322:	681b      	ldr	r3, [r3, #0]
 8002324:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002326:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 800232a:	009a      	lsls	r2, r3, #2
 800232c:	4b45      	ldr	r3, [pc, #276]	; (8002444 <xTaskIncrementTick+0x144>)
 800232e:	589b      	ldr	r3, [r3, r2]
 8002330:	2b01      	cmp	r3, #1
 8002332:	d900      	bls.n	8002336 <xTaskIncrementTick+0x36>
                    xSwitchRequired = pdTRUE;
 8002334:	2001      	movs	r0, #1
                if( xYieldPendings[ 0 ] != pdFALSE )
 8002336:	4b44      	ldr	r3, [pc, #272]	; (8002448 <xTaskIncrementTick+0x148>)
 8002338:	681b      	ldr	r3, [r3, #0]
 800233a:	2b00      	cmp	r3, #0
 800233c:	d178      	bne.n	8002430 <xTaskIncrementTick+0x130>
}
 800233e:	bd70      	pop	{r4, r5, r6, pc}
            taskSWITCH_DELAYED_LISTS();
 8002340:	4a42      	ldr	r2, [pc, #264]	; (800244c <xTaskIncrementTick+0x14c>)
 8002342:	6811      	ldr	r1, [r2, #0]
 8002344:	4b42      	ldr	r3, [pc, #264]	; (8002450 <xTaskIncrementTick+0x150>)
 8002346:	6818      	ldr	r0, [r3, #0]
 8002348:	6010      	str	r0, [r2, #0]
 800234a:	6019      	str	r1, [r3, #0]
 800234c:	4a41      	ldr	r2, [pc, #260]	; (8002454 <xTaskIncrementTick+0x154>)
 800234e:	6813      	ldr	r3, [r2, #0]
 8002350:	3301      	adds	r3, #1
 8002352:	6013      	str	r3, [r2, #0]
 8002354:	f7ff fd9c 	bl	8001e90 <prvResetNextTaskUnblockTime>
 8002358:	e7dd      	b.n	8002316 <xTaskIncrementTick+0x16>
    BaseType_t xSwitchRequired = pdFALSE;
 800235a:	2000      	movs	r0, #0
 800235c:	e037      	b.n	80023ce <xTaskIncrementTick+0xce>
                    xNextTaskUnblockTime = portMAX_DELAY;
 800235e:	4b37      	ldr	r3, [pc, #220]	; (800243c <xTaskIncrementTick+0x13c>)
 8002360:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002364:	601a      	str	r2, [r3, #0]
                    break;
 8002366:	e7db      	b.n	8002320 <xTaskIncrementTick+0x20>
                        xNextTaskUnblockTime = xItemValue;
 8002368:	4b34      	ldr	r3, [pc, #208]	; (800243c <xTaskIncrementTick+0x13c>)
 800236a:	601a      	str	r2, [r3, #0]
                        break;
 800236c:	e7d8      	b.n	8002320 <xTaskIncrementTick+0x20>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 800236e:	68d9      	ldr	r1, [r3, #12]
 8002370:	6051      	str	r1, [r2, #4]
 8002372:	e042      	b.n	80023fa <xTaskIncrementTick+0xfa>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 8002374:	2100      	movs	r1, #0
 8002376:	6299      	str	r1, [r3, #40]	; 0x28
 8002378:	6811      	ldr	r1, [r2, #0]
 800237a:	3901      	subs	r1, #1
 800237c:	6011      	str	r1, [r2, #0]
                    prvAddTaskToReadyList( pxTCB );
 800237e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002380:	4935      	ldr	r1, [pc, #212]	; (8002458 <xTaskIncrementTick+0x158>)
 8002382:	6809      	ldr	r1, [r1, #0]
 8002384:	428a      	cmp	r2, r1
 8002386:	d901      	bls.n	800238c <xTaskIncrementTick+0x8c>
 8002388:	4933      	ldr	r1, [pc, #204]	; (8002458 <xTaskIncrementTick+0x158>)
 800238a:	600a      	str	r2, [r1, #0]
 800238c:	492d      	ldr	r1, [pc, #180]	; (8002444 <xTaskIncrementTick+0x144>)
 800238e:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
 8002392:	ea4f 0c82 	mov.w	ip, r2, lsl #2
 8002396:	448c      	add	ip, r1
 8002398:	f8dc 2004 	ldr.w	r2, [ip, #4]
 800239c:	609a      	str	r2, [r3, #8]
 800239e:	6896      	ldr	r6, [r2, #8]
 80023a0:	60de      	str	r6, [r3, #12]
 80023a2:	6075      	str	r5, [r6, #4]
 80023a4:	6095      	str	r5, [r2, #8]
 80023a6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80023a8:	ebc2 0cc2 	rsb	ip, r2, r2, lsl #3
 80023ac:	ea4f 058c 	mov.w	r5, ip, lsl #2
 80023b0:	194e      	adds	r6, r1, r5
 80023b2:	615e      	str	r6, [r3, #20]
 80023b4:	594d      	ldr	r5, [r1, r5]
 80023b6:	3501      	adds	r5, #1
 80023b8:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 80023bc:	f841 500c 	str.w	r5, [r1, ip]
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 80023c0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80023c2:	4b1f      	ldr	r3, [pc, #124]	; (8002440 <xTaskIncrementTick+0x140>)
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80023c8:	429a      	cmp	r2, r3
 80023ca:	d900      	bls.n	80023ce <xTaskIncrementTick+0xce>
                                xSwitchRequired = pdTRUE;
 80023cc:	2001      	movs	r0, #1
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80023ce:	4b1f      	ldr	r3, [pc, #124]	; (800244c <xTaskIncrementTick+0x14c>)
 80023d0:	681b      	ldr	r3, [r3, #0]
 80023d2:	681b      	ldr	r3, [r3, #0]
 80023d4:	2b00      	cmp	r3, #0
 80023d6:	d0c2      	beq.n	800235e <xTaskIncrementTick+0x5e>
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 80023d8:	4b1c      	ldr	r3, [pc, #112]	; (800244c <xTaskIncrementTick+0x14c>)
 80023da:	681b      	ldr	r3, [r3, #0]
 80023dc:	68db      	ldr	r3, [r3, #12]
 80023de:	68db      	ldr	r3, [r3, #12]
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80023e0:	685a      	ldr	r2, [r3, #4]
                    if( xConstTickCount < xItemValue )
 80023e2:	4294      	cmp	r4, r2
 80023e4:	d3c0      	bcc.n	8002368 <xTaskIncrementTick+0x68>
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 80023e6:	695a      	ldr	r2, [r3, #20]
 80023e8:	689d      	ldr	r5, [r3, #8]
 80023ea:	68d9      	ldr	r1, [r3, #12]
 80023ec:	60a9      	str	r1, [r5, #8]
 80023ee:	689d      	ldr	r5, [r3, #8]
 80023f0:	604d      	str	r5, [r1, #4]
 80023f2:	6851      	ldr	r1, [r2, #4]
 80023f4:	1d1d      	adds	r5, r3, #4
 80023f6:	42a9      	cmp	r1, r5
 80023f8:	d0b9      	beq.n	800236e <xTaskIncrementTick+0x6e>
 80023fa:	2100      	movs	r1, #0
 80023fc:	6159      	str	r1, [r3, #20]
 80023fe:	6811      	ldr	r1, [r2, #0]
 8002400:	3901      	subs	r1, #1
 8002402:	6011      	str	r1, [r2, #0]
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8002404:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002406:	2a00      	cmp	r2, #0
 8002408:	d0b9      	beq.n	800237e <xTaskIncrementTick+0x7e>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 800240a:	69de      	ldr	r6, [r3, #28]
 800240c:	6a19      	ldr	r1, [r3, #32]
 800240e:	60b1      	str	r1, [r6, #8]
 8002410:	69de      	ldr	r6, [r3, #28]
 8002412:	604e      	str	r6, [r1, #4]
 8002414:	6856      	ldr	r6, [r2, #4]
 8002416:	f103 0118 	add.w	r1, r3, #24
 800241a:	428e      	cmp	r6, r1
 800241c:	d1aa      	bne.n	8002374 <xTaskIncrementTick+0x74>
 800241e:	6a19      	ldr	r1, [r3, #32]
 8002420:	6051      	str	r1, [r2, #4]
 8002422:	e7a7      	b.n	8002374 <xTaskIncrementTick+0x74>
        xPendedTicks += 1U;
 8002424:	4a0d      	ldr	r2, [pc, #52]	; (800245c <xTaskIncrementTick+0x15c>)
 8002426:	6813      	ldr	r3, [r2, #0]
 8002428:	3301      	adds	r3, #1
 800242a:	6013      	str	r3, [r2, #0]
    BaseType_t xSwitchRequired = pdFALSE;
 800242c:	2000      	movs	r0, #0
}
 800242e:	4770      	bx	lr
                    xSwitchRequired = pdTRUE;
 8002430:	2001      	movs	r0, #1
    return xSwitchRequired;
 8002432:	e784      	b.n	800233e <xTaskIncrementTick+0x3e>
 8002434:	200084cc 	andcs	r8, r0, ip, asr #9
 8002438:	200087c4 	andcs	r8, r0, r4, asr #15
 800243c:	20008760 	andcs	r8, r0, r0, ror #14
 8002440:	2000822c 	andcs	r8, r0, ip, lsr #4
 8002444:	20008238 	andcs	r8, r0, r8, lsr r2
 8002448:	20008814 	andcs	r8, r0, r4, lsl r8
 800244c:	20008230 	andcs	r8, r0, r0, lsr r2
 8002450:	20008234 	andcs	r8, r0, r4, lsr r2
 8002454:	20008764 	andcs	r8, r0, r4, ror #14
 8002458:	200086d4 	ldrdcs	r8, [r0], -r4
 800245c:	20008768 	andcs	r8, r0, r8, ror #14

08002460 <xTaskResumeAll>:
{
 8002460:	b510      	push	{r4, lr}
        taskENTER_CRITICAL();
 8002462:	f000 fdf7 	bl	8003054 <vPortEnterCritical>
            uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended - 1U );
 8002466:	4b46      	ldr	r3, [pc, #280]	; (8002580 <xTaskResumeAll+0x120>)
 8002468:	681a      	ldr	r2, [r3, #0]
 800246a:	3a01      	subs	r2, #1
 800246c:	601a      	str	r2, [r3, #0]
            if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
 800246e:	681b      	ldr	r3, [r3, #0]
 8002470:	2b00      	cmp	r3, #0
 8002472:	d17f      	bne.n	8002574 <xTaskResumeAll+0x114>
                if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8002474:	4b43      	ldr	r3, [pc, #268]	; (8002584 <xTaskResumeAll+0x124>)
 8002476:	681b      	ldr	r3, [r3, #0]
 8002478:	b93b      	cbnz	r3, 800248a <xTaskResumeAll+0x2a>
    BaseType_t xAlreadyYielded = pdFALSE;
 800247a:	2400      	movs	r4, #0
 800247c:	e07b      	b.n	8002576 <xTaskResumeAll+0x116>
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 800247e:	6a19      	ldr	r1, [r3, #32]
 8002480:	6051      	str	r1, [r2, #4]
 8002482:	e015      	b.n	80024b0 <xTaskResumeAll+0x50>
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 8002484:	68d9      	ldr	r1, [r3, #12]
 8002486:	6051      	str	r1, [r2, #4]
 8002488:	e021      	b.n	80024ce <xTaskResumeAll+0x6e>
    TCB_t * pxTCB = NULL;
 800248a:	2300      	movs	r3, #0
                    while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800248c:	4a3e      	ldr	r2, [pc, #248]	; (8002588 <xTaskResumeAll+0x128>)
 800248e:	6812      	ldr	r2, [r2, #0]
 8002490:	2a00      	cmp	r2, #0
 8002492:	d04a      	beq.n	800252a <xTaskResumeAll+0xca>
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
 8002494:	4b3c      	ldr	r3, [pc, #240]	; (8002588 <xTaskResumeAll+0x128>)
 8002496:	68db      	ldr	r3, [r3, #12]
 8002498:	68db      	ldr	r3, [r3, #12]
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
 800249a:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 800249c:	69d8      	ldr	r0, [r3, #28]
 800249e:	6a19      	ldr	r1, [r3, #32]
 80024a0:	6081      	str	r1, [r0, #8]
 80024a2:	69d8      	ldr	r0, [r3, #28]
 80024a4:	6048      	str	r0, [r1, #4]
 80024a6:	6850      	ldr	r0, [r2, #4]
 80024a8:	f103 0118 	add.w	r1, r3, #24
 80024ac:	4288      	cmp	r0, r1
 80024ae:	d0e6      	beq.n	800247e <xTaskResumeAll+0x1e>
 80024b0:	2100      	movs	r1, #0
 80024b2:	6299      	str	r1, [r3, #40]	; 0x28
 80024b4:	6811      	ldr	r1, [r2, #0]
 80024b6:	3901      	subs	r1, #1
 80024b8:	6011      	str	r1, [r2, #0]
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
 80024ba:	695a      	ldr	r2, [r3, #20]
 80024bc:	6898      	ldr	r0, [r3, #8]
 80024be:	68d9      	ldr	r1, [r3, #12]
 80024c0:	6081      	str	r1, [r0, #8]
 80024c2:	6898      	ldr	r0, [r3, #8]
 80024c4:	6048      	str	r0, [r1, #4]
 80024c6:	6851      	ldr	r1, [r2, #4]
 80024c8:	1d18      	adds	r0, r3, #4
 80024ca:	4281      	cmp	r1, r0
 80024cc:	d0da      	beq.n	8002484 <xTaskResumeAll+0x24>
 80024ce:	2100      	movs	r1, #0
 80024d0:	6159      	str	r1, [r3, #20]
 80024d2:	6811      	ldr	r1, [r2, #0]
 80024d4:	3901      	subs	r1, #1
 80024d6:	6011      	str	r1, [r2, #0]
                        prvAddTaskToReadyList( pxTCB );
 80024d8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80024da:	492c      	ldr	r1, [pc, #176]	; (800258c <xTaskResumeAll+0x12c>)
 80024dc:	6809      	ldr	r1, [r1, #0]
 80024de:	428a      	cmp	r2, r1
 80024e0:	d901      	bls.n	80024e6 <xTaskResumeAll+0x86>
 80024e2:	492a      	ldr	r1, [pc, #168]	; (800258c <xTaskResumeAll+0x12c>)
 80024e4:	600a      	str	r2, [r1, #0]
 80024e6:	492a      	ldr	r1, [pc, #168]	; (8002590 <xTaskResumeAll+0x130>)
 80024e8:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
 80024ec:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80024f0:	6852      	ldr	r2, [r2, #4]
 80024f2:	609a      	str	r2, [r3, #8]
 80024f4:	6894      	ldr	r4, [r2, #8]
 80024f6:	60dc      	str	r4, [r3, #12]
 80024f8:	6060      	str	r0, [r4, #4]
 80024fa:	6090      	str	r0, [r2, #8]
 80024fc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80024fe:	ebc2 00c2 	rsb	r0, r2, r2, lsl #3
 8002502:	eb01 0480 	add.w	r4, r1, r0, lsl #2
 8002506:	615c      	str	r4, [r3, #20]
 8002508:	f851 0020 	ldr.w	r0, [r1, r0, lsl #2]
 800250c:	3001      	adds	r0, #1
 800250e:	ebc2 02c2 	rsb	r2, r2, r2, lsl #3
 8002512:	f841 0022 	str.w	r0, [r1, r2, lsl #2]
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 8002516:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8002518:	4a1e      	ldr	r2, [pc, #120]	; (8002594 <xTaskResumeAll+0x134>)
 800251a:	6812      	ldr	r2, [r2, #0]
 800251c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800251e:	4291      	cmp	r1, r2
 8002520:	d9b4      	bls.n	800248c <xTaskResumeAll+0x2c>
                                xYieldPendings[ xCoreID ] = pdTRUE;
 8002522:	4a1d      	ldr	r2, [pc, #116]	; (8002598 <xTaskResumeAll+0x138>)
 8002524:	2101      	movs	r1, #1
 8002526:	6011      	str	r1, [r2, #0]
 8002528:	e7b0      	b.n	800248c <xTaskResumeAll+0x2c>
                    if( pxTCB != NULL )
 800252a:	b10b      	cbz	r3, 8002530 <xTaskResumeAll+0xd0>
                        prvResetNextTaskUnblockTime();
 800252c:	f7ff fcb0 	bl	8001e90 <prvResetNextTaskUnblockTime>
                        TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8002530:	4b1a      	ldr	r3, [pc, #104]	; (800259c <xTaskResumeAll+0x13c>)
 8002532:	681c      	ldr	r4, [r3, #0]
                        if( xPendedCounts > ( TickType_t ) 0U )
 8002534:	b994      	cbnz	r4, 800255c <xTaskResumeAll+0xfc>
                    if( xYieldPendings[ xCoreID ] != pdFALSE )
 8002536:	4b18      	ldr	r3, [pc, #96]	; (8002598 <xTaskResumeAll+0x138>)
 8002538:	681c      	ldr	r4, [r3, #0]
 800253a:	b1e4      	cbz	r4, 8002576 <xTaskResumeAll+0x116>
                            taskYIELD_TASK_CORE_IF_USING_PREEMPTION( pxCurrentTCB );
 800253c:	4b15      	ldr	r3, [pc, #84]	; (8002594 <xTaskResumeAll+0x134>)
 800253e:	681b      	ldr	r3, [r3, #0]
 8002540:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8002544:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002548:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800254c:	f3bf 8f4f 	dsb	sy
 8002550:	f3bf 8f6f 	isb	sy
                            xAlreadyYielded = pdTRUE;
 8002554:	2401      	movs	r4, #1
 8002556:	e00e      	b.n	8002576 <xTaskResumeAll+0x116>
                            } while( xPendedCounts > ( TickType_t ) 0U );
 8002558:	3c01      	subs	r4, #1
 800255a:	d007      	beq.n	800256c <xTaskResumeAll+0x10c>
                                if( xTaskIncrementTick() != pdFALSE )
 800255c:	f7ff fed0 	bl	8002300 <xTaskIncrementTick>
 8002560:	2800      	cmp	r0, #0
 8002562:	d0f9      	beq.n	8002558 <xTaskResumeAll+0xf8>
                                    xYieldPendings[ xCoreID ] = pdTRUE;
 8002564:	4b0c      	ldr	r3, [pc, #48]	; (8002598 <xTaskResumeAll+0x138>)
 8002566:	2201      	movs	r2, #1
 8002568:	601a      	str	r2, [r3, #0]
 800256a:	e7f5      	b.n	8002558 <xTaskResumeAll+0xf8>
                            xPendedTicks = 0;
 800256c:	4b0b      	ldr	r3, [pc, #44]	; (800259c <xTaskResumeAll+0x13c>)
 800256e:	2200      	movs	r2, #0
 8002570:	601a      	str	r2, [r3, #0]
 8002572:	e7e0      	b.n	8002536 <xTaskResumeAll+0xd6>
    BaseType_t xAlreadyYielded = pdFALSE;
 8002574:	2400      	movs	r4, #0
        taskEXIT_CRITICAL();
 8002576:	f000 fd7d 	bl	8003074 <vPortExitCritical>
}
 800257a:	4620      	mov	r0, r4
 800257c:	bd10      	pop	{r4, pc}
 800257e:	bf00      	nop
 8002580:	200084cc 	andcs	r8, r0, ip, asr #9
 8002584:	200082c4 	andcs	r8, r0, r4, asr #5
 8002588:	2000876c 	andcs	r8, r0, ip, ror #14
 800258c:	200086d4 	ldrdcs	r8, [r0], -r4
 8002590:	20008238 	andcs	r8, r0, r8, lsr r2
 8002594:	2000822c 	andcs	r8, r0, ip, lsr #4
 8002598:	20008814 	andcs	r8, r0, r4, lsl r8
 800259c:	20008768 	andcs	r8, r0, r8, ror #14

080025a0 <vTaskDelay>:
    {
 80025a0:	b510      	push	{r4, lr}
        if( xTicksToDelay > ( TickType_t ) 0U )
 80025a2:	b950      	cbnz	r0, 80025ba <vTaskDelay+0x1a>
            taskYIELD_WITHIN_API();
 80025a4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80025a8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80025ac:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80025b0:	f3bf 8f4f 	dsb	sy
 80025b4:	f3bf 8f6f 	isb	sy
    }
 80025b8:	bd10      	pop	{r4, pc}
 80025ba:	4604      	mov	r4, r0
            vTaskSuspendAll();
 80025bc:	f7ff fe6e 	bl	800229c <vTaskSuspendAll>
                prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 80025c0:	2100      	movs	r1, #0
 80025c2:	4620      	mov	r0, r4
 80025c4:	f7ff fdf0 	bl	80021a8 <prvAddCurrentTaskToDelayedList>
            xAlreadyYielded = xTaskResumeAll();
 80025c8:	f7ff ff4a 	bl	8002460 <xTaskResumeAll>
        if( xAlreadyYielded == pdFALSE )
 80025cc:	2800      	cmp	r0, #0
 80025ce:	d1f3      	bne.n	80025b8 <vTaskDelay+0x18>
 80025d0:	e7e8      	b.n	80025a4 <vTaskDelay+0x4>
	...

080025d4 <prvIdleTask>:
{
 80025d4:	b508      	push	{r3, lr}
 80025d6:	e00d      	b.n	80025f4 <prvIdleTask+0x20>
                taskYIELD();
 80025d8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80025dc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80025e0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80025e4:	f3bf 8f4f 	dsb	sy
 80025e8:	f3bf 8f6f 	isb	sy
            xExpectedIdleTime = prvGetExpectedIdleTime();
 80025ec:	f7ff fc30 	bl	8001e50 <prvGetExpectedIdleTime>
            if( xExpectedIdleTime >= ( TickType_t ) configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
 80025f0:	2801      	cmp	r0, #1
 80025f2:	d806      	bhi.n	8002602 <prvIdleTask+0x2e>
        prvCheckTasksWaitingTermination();
 80025f4:	f7ff fdb2 	bl	800215c <prvCheckTasksWaitingTermination>
            if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) configNUMBER_OF_CORES )
 80025f8:	4b07      	ldr	r3, [pc, #28]	; (8002618 <prvIdleTask+0x44>)
 80025fa:	681b      	ldr	r3, [r3, #0]
 80025fc:	2b01      	cmp	r3, #1
 80025fe:	d8eb      	bhi.n	80025d8 <prvIdleTask+0x4>
 8002600:	e7f4      	b.n	80025ec <prvIdleTask+0x18>
                vTaskSuspendAll();
 8002602:	f7ff fe4b 	bl	800229c <vTaskSuspendAll>
                    xExpectedIdleTime = prvGetExpectedIdleTime();
 8002606:	f7ff fc23 	bl	8001e50 <prvGetExpectedIdleTime>
                    if( xExpectedIdleTime >= ( TickType_t ) configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
 800260a:	2801      	cmp	r0, #1
 800260c:	d901      	bls.n	8002612 <prvIdleTask+0x3e>
                        portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
 800260e:	f000 fd87 	bl	8003120 <vPortSuppressTicksAndSleep>
                ( void ) xTaskResumeAll();
 8002612:	f7ff ff25 	bl	8002460 <xTaskResumeAll>
 8002616:	e7ed      	b.n	80025f4 <prvIdleTask+0x20>
 8002618:	20008238 	andcs	r8, r0, r8, lsr r2

0800261c <vTaskSwitchContext>:
        if( uxSchedulerSuspended != ( UBaseType_t ) 0U )
 800261c:	4b1b      	ldr	r3, [pc, #108]	; (800268c <vTaskSwitchContext+0x70>)
 800261e:	681b      	ldr	r3, [r3, #0]
 8002620:	b11b      	cbz	r3, 800262a <vTaskSwitchContext+0xe>
            xYieldPendings[ 0 ] = pdTRUE;
 8002622:	4b1b      	ldr	r3, [pc, #108]	; (8002690 <vTaskSwitchContext+0x74>)
 8002624:	2201      	movs	r2, #1
 8002626:	601a      	str	r2, [r3, #0]
 8002628:	4770      	bx	lr
            xYieldPendings[ 0 ] = pdFALSE;
 800262a:	4b19      	ldr	r3, [pc, #100]	; (8002690 <vTaskSwitchContext+0x74>)
 800262c:	2200      	movs	r2, #0
 800262e:	601a      	str	r2, [r3, #0]
            taskSELECT_HIGHEST_PRIORITY_TASK();
 8002630:	4b18      	ldr	r3, [pc, #96]	; (8002694 <vTaskSwitchContext+0x78>)
 8002632:	681b      	ldr	r3, [r3, #0]
 8002634:	e000      	b.n	8002638 <vTaskSwitchContext+0x1c>
 8002636:	3b01      	subs	r3, #1
 8002638:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
 800263c:	008a      	lsls	r2, r1, #2
 800263e:	4916      	ldr	r1, [pc, #88]	; (8002698 <vTaskSwitchContext+0x7c>)
 8002640:	588a      	ldr	r2, [r1, r2]
 8002642:	2a00      	cmp	r2, #0
 8002644:	d0f7      	beq.n	8002636 <vTaskSwitchContext+0x1a>
 8002646:	ebc3 00c3 	rsb	r0, r3, r3, lsl #3
 800264a:	0082      	lsls	r2, r0, #2
 800264c:	440a      	add	r2, r1
 800264e:	6850      	ldr	r0, [r2, #4]
 8002650:	6840      	ldr	r0, [r0, #4]
 8002652:	6050      	str	r0, [r2, #4]
 8002654:	ebc3 0cc3 	rsb	ip, r3, r3, lsl #3
 8002658:	ea4f 028c 	mov.w	r2, ip, lsl #2
 800265c:	3208      	adds	r2, #8
 800265e:	4411      	add	r1, r2
 8002660:	4288      	cmp	r0, r1
 8002662:	d00c      	beq.n	800267e <vTaskSwitchContext+0x62>
 8002664:	ebc3 02c3 	rsb	r2, r3, r3, lsl #3
 8002668:	0091      	lsls	r1, r2, #2
 800266a:	4a0b      	ldr	r2, [pc, #44]	; (8002698 <vTaskSwitchContext+0x7c>)
 800266c:	440a      	add	r2, r1
 800266e:	6852      	ldr	r2, [r2, #4]
 8002670:	68d1      	ldr	r1, [r2, #12]
 8002672:	4a0a      	ldr	r2, [pc, #40]	; (800269c <vTaskSwitchContext+0x80>)
 8002674:	6011      	str	r1, [r2, #0]
 8002676:	4907      	ldr	r1, [pc, #28]	; (8002694 <vTaskSwitchContext+0x78>)
 8002678:	600b      	str	r3, [r1, #0]
            portTASK_SWITCH_HOOK( pxCurrentTCB );
 800267a:	6813      	ldr	r3, [r2, #0]
    }
 800267c:	4770      	bx	lr
            taskSELECT_HIGHEST_PRIORITY_TASK();
 800267e:	4662      	mov	r2, ip
 8002680:	0091      	lsls	r1, r2, #2
 8002682:	4a05      	ldr	r2, [pc, #20]	; (8002698 <vTaskSwitchContext+0x7c>)
 8002684:	440a      	add	r2, r1
 8002686:	68d1      	ldr	r1, [r2, #12]
 8002688:	6051      	str	r1, [r2, #4]
 800268a:	e7eb      	b.n	8002664 <vTaskSwitchContext+0x48>
 800268c:	200084cc 	andcs	r8, r0, ip, asr #9
 8002690:	20008814 	andcs	r8, r0, r4, lsl r8
 8002694:	200086d4 	ldrdcs	r8, [r0], -r4
 8002698:	20008238 	andcs	r8, r0, r8, lsr r2
 800269c:	2000822c 	andcs	r8, r0, ip, lsr #4

080026a0 <vTaskPlaceOnEventList>:
{
 80026a0:	b510      	push	{r4, lr}
 80026a2:	460c      	mov	r4, r1
    vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80026a4:	4b04      	ldr	r3, [pc, #16]	; (80026b8 <vTaskPlaceOnEventList+0x18>)
 80026a6:	6819      	ldr	r1, [r3, #0]
 80026a8:	3118      	adds	r1, #24
 80026aa:	f7ff f9b3 	bl	8001a14 <vListInsert>
    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 80026ae:	2101      	movs	r1, #1
 80026b0:	4620      	mov	r0, r4
 80026b2:	f7ff fd79 	bl	80021a8 <prvAddCurrentTaskToDelayedList>
}
 80026b6:	bd10      	pop	{r4, pc}
 80026b8:	2000822c 	andcs	r8, r0, ip, lsr #4

080026bc <vTaskPlaceOnEventListRestricted>:
    {
 80026bc:	b570      	push	{r4, r5, r6, lr}
 80026be:	4603      	mov	r3, r0
 80026c0:	4608      	mov	r0, r1
        listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80026c2:	6859      	ldr	r1, [r3, #4]
 80026c4:	4c0b      	ldr	r4, [pc, #44]	; (80026f4 <vTaskPlaceOnEventListRestricted+0x38>)
 80026c6:	6825      	ldr	r5, [r4, #0]
 80026c8:	61e9      	str	r1, [r5, #28]
 80026ca:	6825      	ldr	r5, [r4, #0]
 80026cc:	688e      	ldr	r6, [r1, #8]
 80026ce:	622e      	str	r6, [r5, #32]
 80026d0:	6825      	ldr	r5, [r4, #0]
 80026d2:	3518      	adds	r5, #24
 80026d4:	6075      	str	r5, [r6, #4]
 80026d6:	6825      	ldr	r5, [r4, #0]
 80026d8:	3518      	adds	r5, #24
 80026da:	608d      	str	r5, [r1, #8]
 80026dc:	6821      	ldr	r1, [r4, #0]
 80026de:	628b      	str	r3, [r1, #40]	; 0x28
 80026e0:	6819      	ldr	r1, [r3, #0]
 80026e2:	3101      	adds	r1, #1
 80026e4:	6019      	str	r1, [r3, #0]
        if( xWaitIndefinitely != pdFALSE )
 80026e6:	4611      	mov	r1, r2
 80026e8:	b10a      	cbz	r2, 80026ee <vTaskPlaceOnEventListRestricted+0x32>
            xTicksToWait = portMAX_DELAY;
 80026ea:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
        prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80026ee:	f7ff fd5b 	bl	80021a8 <prvAddCurrentTaskToDelayedList>
    }
 80026f2:	bd70      	pop	{r4, r5, r6, pc}
 80026f4:	2000822c 	andcs	r8, r0, ip, lsr #4

080026f8 <xTaskRemoveFromEventList>:
{
 80026f8:	b510      	push	{r4, lr}
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
 80026fa:	68c3      	ldr	r3, [r0, #12]
 80026fc:	68dc      	ldr	r4, [r3, #12]
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 80026fe:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8002700:	69e1      	ldr	r1, [r4, #28]
 8002702:	6a22      	ldr	r2, [r4, #32]
 8002704:	608a      	str	r2, [r1, #8]
 8002706:	69e1      	ldr	r1, [r4, #28]
 8002708:	6051      	str	r1, [r2, #4]
 800270a:	685a      	ldr	r2, [r3, #4]
 800270c:	f104 0118 	add.w	r1, r4, #24
 8002710:	428a      	cmp	r2, r1
 8002712:	d042      	beq.n	800279a <xTaskRemoveFromEventList+0xa2>
 8002714:	2200      	movs	r2, #0
 8002716:	62a2      	str	r2, [r4, #40]	; 0x28
 8002718:	681a      	ldr	r2, [r3, #0]
 800271a:	3a01      	subs	r2, #1
 800271c:	601a      	str	r2, [r3, #0]
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
 800271e:	4b29      	ldr	r3, [pc, #164]	; (80027c4 <xTaskRemoveFromEventList+0xcc>)
 8002720:	681b      	ldr	r3, [r3, #0]
 8002722:	2b00      	cmp	r3, #0
 8002724:	d13f      	bne.n	80027a6 <xTaskRemoveFromEventList+0xae>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
 8002726:	6963      	ldr	r3, [r4, #20]
 8002728:	68a1      	ldr	r1, [r4, #8]
 800272a:	68e2      	ldr	r2, [r4, #12]
 800272c:	608a      	str	r2, [r1, #8]
 800272e:	68a1      	ldr	r1, [r4, #8]
 8002730:	6051      	str	r1, [r2, #4]
 8002732:	685a      	ldr	r2, [r3, #4]
 8002734:	1d21      	adds	r1, r4, #4
 8002736:	428a      	cmp	r2, r1
 8002738:	d032      	beq.n	80027a0 <xTaskRemoveFromEventList+0xa8>
 800273a:	2200      	movs	r2, #0
 800273c:	6162      	str	r2, [r4, #20]
 800273e:	681a      	ldr	r2, [r3, #0]
 8002740:	3a01      	subs	r2, #1
 8002742:	601a      	str	r2, [r3, #0]
        prvAddTaskToReadyList( pxUnblockedTCB );
 8002744:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002746:	4a20      	ldr	r2, [pc, #128]	; (80027c8 <xTaskRemoveFromEventList+0xd0>)
 8002748:	6812      	ldr	r2, [r2, #0]
 800274a:	4293      	cmp	r3, r2
 800274c:	d901      	bls.n	8002752 <xTaskRemoveFromEventList+0x5a>
 800274e:	4a1e      	ldr	r2, [pc, #120]	; (80027c8 <xTaskRemoveFromEventList+0xd0>)
 8002750:	6013      	str	r3, [r2, #0]
 8002752:	4a1e      	ldr	r2, [pc, #120]	; (80027cc <xTaskRemoveFromEventList+0xd4>)
 8002754:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8002758:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800275c:	685b      	ldr	r3, [r3, #4]
 800275e:	60a3      	str	r3, [r4, #8]
 8002760:	6898      	ldr	r0, [r3, #8]
 8002762:	60e0      	str	r0, [r4, #12]
 8002764:	6041      	str	r1, [r0, #4]
 8002766:	6099      	str	r1, [r3, #8]
 8002768:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800276a:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
 800276e:	eb02 0081 	add.w	r0, r2, r1, lsl #2
 8002772:	6160      	str	r0, [r4, #20]
 8002774:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8002778:	3101      	adds	r1, #1
 800277a:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 800277e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
            prvResetNextTaskUnblockTime();
 8002782:	f7ff fb85 	bl	8001e90 <prvResetNextTaskUnblockTime>
        if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8002786:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8002788:	4b11      	ldr	r3, [pc, #68]	; (80027d0 <xTaskRemoveFromEventList+0xd8>)
 800278a:	681b      	ldr	r3, [r3, #0]
 800278c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800278e:	429a      	cmp	r2, r3
 8002790:	d915      	bls.n	80027be <xTaskRemoveFromEventList+0xc6>
            xYieldPendings[ 0 ] = pdTRUE;
 8002792:	2001      	movs	r0, #1
 8002794:	4b0f      	ldr	r3, [pc, #60]	; (80027d4 <xTaskRemoveFromEventList+0xdc>)
 8002796:	6018      	str	r0, [r3, #0]
}
 8002798:	bd10      	pop	{r4, pc}
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
 800279a:	6a22      	ldr	r2, [r4, #32]
 800279c:	605a      	str	r2, [r3, #4]
 800279e:	e7b9      	b.n	8002714 <xTaskRemoveFromEventList+0x1c>
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
 80027a0:	68e2      	ldr	r2, [r4, #12]
 80027a2:	605a      	str	r2, [r3, #4]
 80027a4:	e7c9      	b.n	800273a <xTaskRemoveFromEventList+0x42>
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80027a6:	4b0c      	ldr	r3, [pc, #48]	; (80027d8 <xTaskRemoveFromEventList+0xe0>)
 80027a8:	685a      	ldr	r2, [r3, #4]
 80027aa:	61e2      	str	r2, [r4, #28]
 80027ac:	6890      	ldr	r0, [r2, #8]
 80027ae:	6220      	str	r0, [r4, #32]
 80027b0:	6041      	str	r1, [r0, #4]
 80027b2:	6091      	str	r1, [r2, #8]
 80027b4:	62a3      	str	r3, [r4, #40]	; 0x28
 80027b6:	681a      	ldr	r2, [r3, #0]
 80027b8:	3201      	adds	r2, #1
 80027ba:	601a      	str	r2, [r3, #0]
 80027bc:	e7e3      	b.n	8002786 <xTaskRemoveFromEventList+0x8e>
            xReturn = pdFALSE;
 80027be:	2000      	movs	r0, #0
    return xReturn;
 80027c0:	e7ea      	b.n	8002798 <xTaskRemoveFromEventList+0xa0>
 80027c2:	bf00      	nop
 80027c4:	200084cc 	andcs	r8, r0, ip, asr #9
 80027c8:	200086d4 	ldrdcs	r8, [r0], -r4
 80027cc:	20008238 	andcs	r8, r0, r8, lsr r2
 80027d0:	2000822c 	andcs	r8, r0, ip, lsr #4
 80027d4:	20008814 	andcs	r8, r0, r4, lsl r8
 80027d8:	2000876c 	andcs	r8, r0, ip, ror #14

080027dc <vTaskInternalSetTimeOutState>:
    pxTimeOut->xOverflowCount = xNumOfOverflows;
 80027dc:	4b03      	ldr	r3, [pc, #12]	; (80027ec <vTaskInternalSetTimeOutState+0x10>)
 80027de:	681b      	ldr	r3, [r3, #0]
 80027e0:	6003      	str	r3, [r0, #0]
    pxTimeOut->xTimeOnEntering = xTickCount;
 80027e2:	4b03      	ldr	r3, [pc, #12]	; (80027f0 <vTaskInternalSetTimeOutState+0x14>)
 80027e4:	681b      	ldr	r3, [r3, #0]
 80027e6:	6043      	str	r3, [r0, #4]
}
 80027e8:	4770      	bx	lr
 80027ea:	bf00      	nop
 80027ec:	20008764 	andcs	r8, r0, r4, ror #14
 80027f0:	200087c4 	andcs	r8, r0, r4, asr #15

080027f4 <xTaskCheckForTimeOut>:
{
 80027f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80027f6:	4604      	mov	r4, r0
 80027f8:	460d      	mov	r5, r1
    taskENTER_CRITICAL();
 80027fa:	f000 fc2b 	bl	8003054 <vPortEnterCritical>
        const TickType_t xConstTickCount = xTickCount;
 80027fe:	4b19      	ldr	r3, [pc, #100]	; (8002864 <xTaskCheckForTimeOut+0x70>)
 8002800:	681a      	ldr	r2, [r3, #0]
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8002802:	6863      	ldr	r3, [r4, #4]
 8002804:	1ad0      	subs	r0, r2, r3
            if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
 8002806:	4918      	ldr	r1, [pc, #96]	; (8002868 <xTaskCheckForTimeOut+0x74>)
 8002808:	6809      	ldr	r1, [r1, #0]
 800280a:	f891 104a 	ldrb.w	r1, [r1, #74]	; 0x4a
 800280e:	b149      	cbz	r1, 8002824 <xTaskCheckForTimeOut+0x30>
                pxCurrentTCB->ucDelayAborted = ( uint8_t ) pdFALSE;
 8002810:	4b15      	ldr	r3, [pc, #84]	; (8002868 <xTaskCheckForTimeOut+0x74>)
 8002812:	681b      	ldr	r3, [r3, #0]
 8002814:	2200      	movs	r2, #0
 8002816:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
                xReturn = pdTRUE;
 800281a:	2401      	movs	r4, #1
    taskEXIT_CRITICAL();
 800281c:	f000 fc2a 	bl	8003074 <vPortExitCritical>
}
 8002820:	4620      	mov	r0, r4
 8002822:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
            if( *pxTicksToWait == portMAX_DELAY )
 8002824:	6829      	ldr	r1, [r5, #0]
 8002826:	f1b1 3fff 	cmp.w	r1, #4294967295	; 0xffffffff
 800282a:	d018      	beq.n	800285e <xTaskCheckForTimeOut+0x6a>
        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) )
 800282c:	4e0f      	ldr	r6, [pc, #60]	; (800286c <xTaskCheckForTimeOut+0x78>)
 800282e:	6836      	ldr	r6, [r6, #0]
 8002830:	6827      	ldr	r7, [r4, #0]
 8002832:	42b7      	cmp	r7, r6
 8002834:	d005      	beq.n	8002842 <xTaskCheckForTimeOut+0x4e>
 8002836:	4293      	cmp	r3, r2
 8002838:	d803      	bhi.n	8002842 <xTaskCheckForTimeOut+0x4e>
            *pxTicksToWait = ( TickType_t ) 0;
 800283a:	2300      	movs	r3, #0
 800283c:	602b      	str	r3, [r5, #0]
            xReturn = pdTRUE;
 800283e:	2401      	movs	r4, #1
            *pxTicksToWait = ( TickType_t ) 0;
 8002840:	e7ec      	b.n	800281c <xTaskCheckForTimeOut+0x28>
        else if( xElapsedTime < *pxTicksToWait )
 8002842:	4281      	cmp	r1, r0
 8002844:	d803      	bhi.n	800284e <xTaskCheckForTimeOut+0x5a>
            *pxTicksToWait = ( TickType_t ) 0;
 8002846:	2300      	movs	r3, #0
 8002848:	602b      	str	r3, [r5, #0]
            xReturn = pdTRUE;
 800284a:	2401      	movs	r4, #1
 800284c:	e7e6      	b.n	800281c <xTaskCheckForTimeOut+0x28>
            *pxTicksToWait -= xElapsedTime;
 800284e:	1a9b      	subs	r3, r3, r2
 8002850:	440b      	add	r3, r1
 8002852:	602b      	str	r3, [r5, #0]
            vTaskInternalSetTimeOutState( pxTimeOut );
 8002854:	4620      	mov	r0, r4
 8002856:	f7ff ffc1 	bl	80027dc <vTaskInternalSetTimeOutState>
            xReturn = pdFALSE;
 800285a:	2400      	movs	r4, #0
 800285c:	e7de      	b.n	800281c <xTaskCheckForTimeOut+0x28>
                xReturn = pdFALSE;
 800285e:	2400      	movs	r4, #0
 8002860:	e7dc      	b.n	800281c <xTaskCheckForTimeOut+0x28>
 8002862:	bf00      	nop
 8002864:	200087c4 	andcs	r8, r0, r4, asr #15
 8002868:	2000822c 	andcs	r8, r0, ip, lsr #4
 800286c:	20008764 	andcs	r8, r0, r4, ror #14

08002870 <vTaskMissedYield>:
    xYieldPendings[ portGET_CORE_ID() ] = pdTRUE;
 8002870:	4b01      	ldr	r3, [pc, #4]	; (8002878 <vTaskMissedYield+0x8>)
 8002872:	2201      	movs	r2, #1
 8002874:	601a      	str	r2, [r3, #0]
}
 8002876:	4770      	bx	lr
 8002878:	20008814 	andcs	r8, r0, r4, lsl r8

0800287c <eTaskConfirmSleepModeStatus>:
        if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0U )
 800287c:	4b0c      	ldr	r3, [pc, #48]	; (80028b0 <eTaskConfirmSleepModeStatus+0x34>)
 800287e:	681b      	ldr	r3, [r3, #0]
 8002880:	b973      	cbnz	r3, 80028a0 <eTaskConfirmSleepModeStatus+0x24>
        else if( xYieldPendings[ portGET_CORE_ID() ] != pdFALSE )
 8002882:	4b0c      	ldr	r3, [pc, #48]	; (80028b4 <eTaskConfirmSleepModeStatus+0x38>)
 8002884:	681b      	ldr	r3, [r3, #0]
 8002886:	b96b      	cbnz	r3, 80028a4 <eTaskConfirmSleepModeStatus+0x28>
        else if( xPendedTicks != 0U )
 8002888:	4b0b      	ldr	r3, [pc, #44]	; (80028b8 <eTaskConfirmSleepModeStatus+0x3c>)
 800288a:	681b      	ldr	r3, [r3, #0]
 800288c:	b963      	cbnz	r3, 80028a8 <eTaskConfirmSleepModeStatus+0x2c>
            else if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicationTasks ) )
 800288e:	4b0b      	ldr	r3, [pc, #44]	; (80028bc <eTaskConfirmSleepModeStatus+0x40>)
 8002890:	681a      	ldr	r2, [r3, #0]
 8002892:	4b0b      	ldr	r3, [pc, #44]	; (80028c0 <eTaskConfirmSleepModeStatus+0x44>)
 8002894:	681b      	ldr	r3, [r3, #0]
 8002896:	3b01      	subs	r3, #1
 8002898:	429a      	cmp	r2, r3
 800289a:	d007      	beq.n	80028ac <eTaskConfirmSleepModeStatus+0x30>
        eSleepModeStatus eReturn = eStandardSleep;
 800289c:	2001      	movs	r0, #1
 800289e:	4770      	bx	lr
            eReturn = eAbortSleep;
 80028a0:	2000      	movs	r0, #0
 80028a2:	4770      	bx	lr
            eReturn = eAbortSleep;
 80028a4:	2000      	movs	r0, #0
 80028a6:	4770      	bx	lr
            eReturn = eAbortSleep;
 80028a8:	2000      	movs	r0, #0
 80028aa:	4770      	bx	lr
                eReturn = eNoTasksWaitingTimeout;
 80028ac:	2002      	movs	r0, #2
    }
 80028ae:	4770      	bx	lr
 80028b0:	2000876c 	andcs	r8, r0, ip, ror #14
 80028b4:	20008814 	andcs	r8, r0, r4, lsl r8
 80028b8:	20008768 	andcs	r8, r0, r8, ror #14
 80028bc:	2000878c 	andcs	r8, r0, ip, lsl #15
 80028c0:	200082c4 	andcs	r8, r0, r4, asr #5

080028c4 <xTaskGetSchedulerState>:
        if( xSchedulerRunning == pdFALSE )
 80028c4:	4b05      	ldr	r3, [pc, #20]	; (80028dc <xTaskGetSchedulerState+0x18>)
 80028c6:	681b      	ldr	r3, [r3, #0]
 80028c8:	b133      	cbz	r3, 80028d8 <xTaskGetSchedulerState+0x14>
                if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
 80028ca:	4b05      	ldr	r3, [pc, #20]	; (80028e0 <xTaskGetSchedulerState+0x1c>)
 80028cc:	681b      	ldr	r3, [r3, #0]
 80028ce:	b10b      	cbz	r3, 80028d4 <xTaskGetSchedulerState+0x10>
                    xReturn = taskSCHEDULER_SUSPENDED;
 80028d0:	2000      	movs	r0, #0
    }
 80028d2:	4770      	bx	lr
                    xReturn = taskSCHEDULER_RUNNING;
 80028d4:	2002      	movs	r0, #2
 80028d6:	4770      	bx	lr
            xReturn = taskSCHEDULER_NOT_STARTED;
 80028d8:	2001      	movs	r0, #1
 80028da:	4770      	bx	lr
 80028dc:	20008788 	andcs	r8, r0, r8, lsl #15
 80028e0:	200084cc 	andcs	r8, r0, ip, asr #9

080028e4 <xTaskPriorityDisinherit>:
        if( pxMutexHolder != NULL )
 80028e4:	2800      	cmp	r0, #0
 80028e6:	d034      	beq.n	8002952 <xTaskPriorityDisinherit+0x6e>
    {
 80028e8:	b538      	push	{r3, r4, r5, lr}
 80028ea:	4604      	mov	r4, r0
            ( pxTCB->uxMutexesHeld )--;
 80028ec:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 80028ee:	3b01      	subs	r3, #1
 80028f0:	63c3      	str	r3, [r0, #60]	; 0x3c
            if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80028f2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 80028f4:	6b82      	ldr	r2, [r0, #56]	; 0x38
 80028f6:	4291      	cmp	r1, r2
 80028f8:	d02d      	beq.n	8002956 <xTaskPriorityDisinherit+0x72>
                if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80028fa:	b10b      	cbz	r3, 8002900 <xTaskPriorityDisinherit+0x1c>
        BaseType_t xReturn = pdFALSE;
 80028fc:	2000      	movs	r0, #0
    }
 80028fe:	bd38      	pop	{r3, r4, r5, pc}
                    if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8002900:	1d05      	adds	r5, r0, #4
 8002902:	4628      	mov	r0, r5
 8002904:	f7ff f89f 	bl	8001a46 <uxListRemove>
                    pxTCB->uxPriority = pxTCB->uxBasePriority;
 8002908:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800290a:	62e3      	str	r3, [r4, #44]	; 0x2c
                    listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority );
 800290c:	f1c3 0205 	rsb	r2, r3, #5
 8002910:	61a2      	str	r2, [r4, #24]
                    prvAddTaskToReadyList( pxTCB );
 8002912:	4a12      	ldr	r2, [pc, #72]	; (800295c <xTaskPriorityDisinherit+0x78>)
 8002914:	6812      	ldr	r2, [r2, #0]
 8002916:	4293      	cmp	r3, r2
 8002918:	d901      	bls.n	800291e <xTaskPriorityDisinherit+0x3a>
 800291a:	4a10      	ldr	r2, [pc, #64]	; (800295c <xTaskPriorityDisinherit+0x78>)
 800291c:	6013      	str	r3, [r2, #0]
 800291e:	4a10      	ldr	r2, [pc, #64]	; (8002960 <xTaskPriorityDisinherit+0x7c>)
 8002920:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 8002924:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8002928:	685b      	ldr	r3, [r3, #4]
 800292a:	60a3      	str	r3, [r4, #8]
 800292c:	6899      	ldr	r1, [r3, #8]
 800292e:	60e1      	str	r1, [r4, #12]
 8002930:	604d      	str	r5, [r1, #4]
 8002932:	609d      	str	r5, [r3, #8]
 8002934:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8002936:	ebc3 01c3 	rsb	r1, r3, r3, lsl #3
 800293a:	eb02 0081 	add.w	r0, r2, r1, lsl #2
 800293e:	6160      	str	r0, [r4, #20]
 8002940:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8002944:	3101      	adds	r1, #1
 8002946:	ebc3 03c3 	rsb	r3, r3, r3, lsl #3
 800294a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
                    xReturn = pdTRUE;
 800294e:	2001      	movs	r0, #1
 8002950:	e7d5      	b.n	80028fe <xTaskPriorityDisinherit+0x1a>
        BaseType_t xReturn = pdFALSE;
 8002952:	2000      	movs	r0, #0
    }
 8002954:	4770      	bx	lr
        BaseType_t xReturn = pdFALSE;
 8002956:	2000      	movs	r0, #0
 8002958:	e7d1      	b.n	80028fe <xTaskPriorityDisinherit+0x1a>
 800295a:	bf00      	nop
 800295c:	200086d4 	ldrdcs	r8, [r0], -r4
 8002960:	20008238 	andcs	r8, r0, r8, lsr r2

08002964 <vApplicationGetIdleTaskMemory>:
                                        configSTACK_DEPTH_TYPE * puxIdleTaskStackSize )
    {
        static StaticTask_t xIdleTaskTCB;
        static StackType_t uxIdleTaskStack[ configMINIMAL_STACK_SIZE ];

        *ppxIdleTaskTCBBuffer = &( xIdleTaskTCB );
 8002964:	4b03      	ldr	r3, [pc, #12]	; (8002974 <vApplicationGetIdleTaskMemory+0x10>)
 8002966:	6003      	str	r3, [r0, #0]
        *ppxIdleTaskStackBuffer = &( uxIdleTaskStack[ 0 ] );
 8002968:	4b03      	ldr	r3, [pc, #12]	; (8002978 <vApplicationGetIdleTaskMemory+0x14>)
 800296a:	600b      	str	r3, [r1, #0]
        *puxIdleTaskStackSize = configMINIMAL_STACK_SIZE;
 800296c:	2380      	movs	r3, #128	; 0x80
 800296e:	6013      	str	r3, [r2, #0]
    }
 8002970:	4770      	bx	lr
 8002972:	bf00      	nop
 8002974:	20008714 	andcs	r8, r0, r4, lsl r7
 8002978:	200082cc 	andcs	r8, r0, ip, asr #5

0800297c <prvCreateIdleTasks>:
{
 800297c:	b530      	push	{r4, r5, lr}
 800297e:	b089      	sub	sp, #36	; 0x24
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
 8002980:	2300      	movs	r3, #0
 8002982:	2b03      	cmp	r3, #3
 8002984:	dc09      	bgt.n	800299a <prvCreateIdleTasks+0x1e>
        cIdleName[ xIdleTaskNameIndex ] = configIDLE_TASK_NAME[ xIdleTaskNameIndex ];
 8002986:	4a15      	ldr	r2, [pc, #84]	; (80029dc <prvCreateIdleTasks+0x60>)
 8002988:	5cd2      	ldrb	r2, [r2, r3]
 800298a:	f103 0120 	add.w	r1, r3, #32
 800298e:	4469      	add	r1, sp
 8002990:	f801 2c04 	strb.w	r2, [r1, #-4]
        if( cIdleName[ xIdleTaskNameIndex ] == ( char ) 0x00 )
 8002994:	b10a      	cbz	r2, 800299a <prvCreateIdleTasks+0x1e>
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
 8002996:	3301      	adds	r3, #1
 8002998:	e7f3      	b.n	8002982 <prvCreateIdleTasks+0x6>
 800299a:	2400      	movs	r4, #0
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
 800299c:	2c00      	cmp	r4, #0
 800299e:	dd02      	ble.n	80029a6 <prvCreateIdleTasks+0x2a>
 80029a0:	2001      	movs	r0, #1
}
 80029a2:	b009      	add	sp, #36	; 0x24
 80029a4:	bd30      	pop	{r4, r5, pc}
            StaticTask_t * pxIdleTaskTCBBuffer = NULL;
 80029a6:	2500      	movs	r5, #0
 80029a8:	9504      	str	r5, [sp, #16]
            StackType_t * pxIdleTaskStackBuffer = NULL;
 80029aa:	9505      	str	r5, [sp, #20]
                vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &uxIdleTaskStackSize );
 80029ac:	aa06      	add	r2, sp, #24
 80029ae:	a905      	add	r1, sp, #20
 80029b0:	a804      	add	r0, sp, #16
 80029b2:	f7ff ffd7 	bl	8002964 <vApplicationGetIdleTaskMemory>
            xIdleTaskHandles[ xCoreID ] = xTaskCreateStatic( pxIdleTaskFunction,
 80029b6:	9b04      	ldr	r3, [sp, #16]
 80029b8:	9302      	str	r3, [sp, #8]
 80029ba:	9b05      	ldr	r3, [sp, #20]
 80029bc:	9301      	str	r3, [sp, #4]
 80029be:	9500      	str	r5, [sp, #0]
 80029c0:	462b      	mov	r3, r5
 80029c2:	9a06      	ldr	r2, [sp, #24]
 80029c4:	a907      	add	r1, sp, #28
 80029c6:	4806      	ldr	r0, [pc, #24]	; (80029e0 <prvCreateIdleTasks+0x64>)
 80029c8:	f7ff fc42 	bl	8002250 <xTaskCreateStatic>
 80029cc:	4b05      	ldr	r3, [pc, #20]	; (80029e4 <prvCreateIdleTasks+0x68>)
 80029ce:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
            if( xIdleTaskHandles[ xCoreID ] != NULL )
 80029d2:	b108      	cbz	r0, 80029d8 <prvCreateIdleTasks+0x5c>
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
 80029d4:	3401      	adds	r4, #1
 80029d6:	e7e1      	b.n	800299c <prvCreateIdleTasks+0x20>
                xReturn = pdFAIL;
 80029d8:	2000      	movs	r0, #0
 80029da:	e7e2      	b.n	80029a2 <prvCreateIdleTasks+0x26>
 80029dc:	080048e8 	stmdaeq	r0, {r3, r5, r6, r7, fp, lr}
 80029e0:	080025d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, sl, sp}
 80029e4:	20008710 	andcs	r8, r0, r0, lsl r7

080029e8 <vTaskStartScheduler>:
{
 80029e8:	b508      	push	{r3, lr}
    xReturn = prvCreateIdleTasks();
 80029ea:	f7ff ffc7 	bl	800297c <prvCreateIdleTasks>
        if( xReturn == pdPASS )
 80029ee:	2801      	cmp	r0, #1
 80029f0:	d004      	beq.n	80029fc <vTaskStartScheduler+0x14>
    if( xReturn == pdPASS )
 80029f2:	2801      	cmp	r0, #1
 80029f4:	d005      	beq.n	8002a02 <vTaskStartScheduler+0x1a>
    ( void ) uxTopUsedPriority;
 80029f6:	4b0d      	ldr	r3, [pc, #52]	; (8002a2c <vTaskStartScheduler+0x44>)
 80029f8:	681b      	ldr	r3, [r3, #0]
}
 80029fa:	bd08      	pop	{r3, pc}
            xReturn = xTimerCreateTimerTask();
 80029fc:	f000 f9b2 	bl	8002d64 <xTimerCreateTimerTask>
 8002a00:	e7f7      	b.n	80029f2 <vTaskStartScheduler+0xa>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
    uint32_t ulNewBASEPRI;

    __asm volatile
 8002a02:	f04f 03bf 	mov.w	r3, #191	; 0xbf
 8002a06:	f383 8811 	msr	BASEPRI, r3
 8002a0a:	f3bf 8f6f 	isb	sy
 8002a0e:	f3bf 8f4f 	dsb	sy
        xNextTaskUnblockTime = portMAX_DELAY;
 8002a12:	4b07      	ldr	r3, [pc, #28]	; (8002a30 <vTaskStartScheduler+0x48>)
 8002a14:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002a18:	601a      	str	r2, [r3, #0]
        xSchedulerRunning = pdTRUE;
 8002a1a:	4b06      	ldr	r3, [pc, #24]	; (8002a34 <vTaskStartScheduler+0x4c>)
 8002a1c:	2201      	movs	r2, #1
 8002a1e:	601a      	str	r2, [r3, #0]
        xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8002a20:	4b05      	ldr	r3, [pc, #20]	; (8002a38 <vTaskStartScheduler+0x50>)
 8002a22:	2200      	movs	r2, #0
 8002a24:	601a      	str	r2, [r3, #0]
        ( void ) xPortStartScheduler();
 8002a26:	f000 fc23 	bl	8003270 <xPortStartScheduler>
 8002a2a:	e7e4      	b.n	80029f6 <vTaskStartScheduler+0xe>
 8002a2c:	2000000c 	andcs	r0, r0, ip
 8002a30:	20008760 	andcs	r8, r0, r0, ror #14
 8002a34:	20008788 	andcs	r8, r0, r8, lsl #15
 8002a38:	200087c4 	andcs	r8, r0, r4, asr #15

08002a3c <vApplicationGetTimerTaskMemory>:
                                         configSTACK_DEPTH_TYPE * puxTimerTaskStackSize )
    {
        static StaticTask_t xTimerTaskTCB;
        static StackType_t uxTimerTaskStack[ configTIMER_TASK_STACK_DEPTH ];

        *ppxTimerTaskTCBBuffer = &( xTimerTaskTCB );
 8002a3c:	4b03      	ldr	r3, [pc, #12]	; (8002a4c <vApplicationGetTimerTaskMemory+0x10>)
 8002a3e:	6003      	str	r3, [r0, #0]
        *ppxTimerTaskStackBuffer = &( uxTimerTaskStack[ 0 ] );
 8002a40:	4b03      	ldr	r3, [pc, #12]	; (8002a50 <vApplicationGetTimerTaskMemory+0x14>)
 8002a42:	600b      	str	r3, [r1, #0]
        *puxTimerTaskStackSize = configTIMER_TASK_STACK_DEPTH;
 8002a44:	2380      	movs	r3, #128	; 0x80
 8002a46:	6013      	str	r3, [r2, #0]
    }
 8002a48:	4770      	bx	lr
 8002a4a:	bf00      	nop
 8002a4c:	200087c8 	andcs	r8, r0, r8, asr #15
 8002a50:	200084d4 	ldrdcs	r8, [r0], -r4

08002a54 <prvGetNextExpireTime>:
         * the timer with the nearest expiry time will expire.  If there are no
         * active timers then just set the next expire time to 0.  That will cause
         * this task to unblock when the tick count overflows, at which point the
         * timer lists will be switched and the next expiry time can be
         * re-assessed.  */
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8002a54:	4b06      	ldr	r3, [pc, #24]	; (8002a70 <prvGetNextExpireTime+0x1c>)
 8002a56:	681a      	ldr	r2, [r3, #0]
 8002a58:	6813      	ldr	r3, [r2, #0]
 8002a5a:	b92b      	cbnz	r3, 8002a68 <prvGetNextExpireTime+0x14>
 8002a5c:	2301      	movs	r3, #1
 8002a5e:	6003      	str	r3, [r0, #0]

        if( *pxListWasEmpty == pdFALSE )
 8002a60:	b923      	cbnz	r3, 8002a6c <prvGetNextExpireTime+0x18>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8002a62:	68d3      	ldr	r3, [r2, #12]
 8002a64:	6818      	ldr	r0, [r3, #0]
 8002a66:	4770      	bx	lr
        *pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8002a68:	2300      	movs	r3, #0
 8002a6a:	e7f8      	b.n	8002a5e <prvGetNextExpireTime+0xa>
        }
        else
        {
            /* Ensure the task unblocks when the tick count rolls over. */
            xNextExpireTime = ( TickType_t ) 0U;
 8002a6c:	2000      	movs	r0, #0
        }

        return xNextExpireTime;
    }
 8002a6e:	4770      	bx	lr
 8002a70:	20008818 	andcs	r8, r0, r8, lsl r8

08002a74 <prvInsertTimerInActiveList>:

    static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer,
                                                  const TickType_t xNextExpiryTime,
                                                  const TickType_t xTimeNow,
                                                  const TickType_t xCommandTime )
    {
 8002a74:	b508      	push	{r3, lr}
        BaseType_t xProcessTimerNow = pdFALSE;

        listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8002a76:	6041      	str	r1, [r0, #4]
        listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8002a78:	6100      	str	r0, [r0, #16]

        if( xNextExpiryTime <= xTimeNow )
 8002a7a:	4291      	cmp	r1, r2
 8002a7c:	d80c      	bhi.n	8002a98 <prvInsertTimerInActiveList+0x24>
        {
            /* Has the expiry time elapsed between the command to start/reset a
             * timer was issued, and the time the command was processed? */
            if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks )
 8002a7e:	1ad2      	subs	r2, r2, r3
 8002a80:	6983      	ldr	r3, [r0, #24]
 8002a82:	429a      	cmp	r2, r3
 8002a84:	d301      	bcc.n	8002a8a <prvInsertTimerInActiveList+0x16>
            {
                /* The time between a command being issued and the command being
                 * processed actually exceeds the timers period.  */
                xProcessTimerNow = pdTRUE;
 8002a86:	2001      	movs	r0, #1
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
            }
        }

        return xProcessTimerNow;
    }
 8002a88:	bd08      	pop	{r3, pc}
                vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8002a8a:	1d01      	adds	r1, r0, #4
 8002a8c:	4b09      	ldr	r3, [pc, #36]	; (8002ab4 <prvInsertTimerInActiveList+0x40>)
 8002a8e:	6818      	ldr	r0, [r3, #0]
 8002a90:	f7fe ffc0 	bl	8001a14 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
 8002a94:	2000      	movs	r0, #0
 8002a96:	e7f7      	b.n	8002a88 <prvInsertTimerInActiveList+0x14>
            if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8002a98:	429a      	cmp	r2, r3
 8002a9a:	d201      	bcs.n	8002aa0 <prvInsertTimerInActiveList+0x2c>
 8002a9c:	4299      	cmp	r1, r3
 8002a9e:	d206      	bcs.n	8002aae <prvInsertTimerInActiveList+0x3a>
                vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8002aa0:	1d01      	adds	r1, r0, #4
 8002aa2:	4b05      	ldr	r3, [pc, #20]	; (8002ab8 <prvInsertTimerInActiveList+0x44>)
 8002aa4:	6818      	ldr	r0, [r3, #0]
 8002aa6:	f7fe ffb5 	bl	8001a14 <vListInsert>
        BaseType_t xProcessTimerNow = pdFALSE;
 8002aaa:	2000      	movs	r0, #0
 8002aac:	e7ec      	b.n	8002a88 <prvInsertTimerInActiveList+0x14>
                xProcessTimerNow = pdTRUE;
 8002aae:	2001      	movs	r0, #1
        return xProcessTimerNow;
 8002ab0:	e7ea      	b.n	8002a88 <prvInsertTimerInActiveList+0x14>
 8002ab2:	bf00      	nop
 8002ab4:	2000881c 	andcs	r8, r0, ip, lsl r8
 8002ab8:	20008818 	andcs	r8, r0, r8, lsl r8

08002abc <prvReloadTimer>:
    {
 8002abc:	b570      	push	{r4, r5, r6, lr}
 8002abe:	4604      	mov	r4, r0
 8002ac0:	460d      	mov	r5, r1
 8002ac2:	4616      	mov	r6, r2
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
 8002ac4:	e004      	b.n	8002ad0 <prvReloadTimer+0x14>
            xExpiredTime += pxTimer->xTimerPeriodInTicks;
 8002ac6:	69a3      	ldr	r3, [r4, #24]
 8002ac8:	441d      	add	r5, r3
            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8002aca:	6a23      	ldr	r3, [r4, #32]
 8002acc:	4620      	mov	r0, r4
 8002ace:	4798      	blx	r3
        while( prvInsertTimerInActiveList( pxTimer, ( xExpiredTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xExpiredTime ) != pdFALSE )
 8002ad0:	69a1      	ldr	r1, [r4, #24]
 8002ad2:	462b      	mov	r3, r5
 8002ad4:	4632      	mov	r2, r6
 8002ad6:	4429      	add	r1, r5
 8002ad8:	4620      	mov	r0, r4
 8002ada:	f7ff ffcb 	bl	8002a74 <prvInsertTimerInActiveList>
 8002ade:	2800      	cmp	r0, #0
 8002ae0:	d1f1      	bne.n	8002ac6 <prvReloadTimer+0xa>
    }
 8002ae2:	bd70      	pop	{r4, r5, r6, pc}

08002ae4 <prvProcessExpiredTimer>:
    {
 8002ae4:	b570      	push	{r4, r5, r6, lr}
 8002ae6:	4605      	mov	r5, r0
 8002ae8:	460e      	mov	r6, r1
        Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList );
 8002aea:	4b0d      	ldr	r3, [pc, #52]	; (8002b20 <prvProcessExpiredTimer+0x3c>)
 8002aec:	681b      	ldr	r3, [r3, #0]
 8002aee:	68db      	ldr	r3, [r3, #12]
 8002af0:	68dc      	ldr	r4, [r3, #12]
        ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8002af2:	1d20      	adds	r0, r4, #4
 8002af4:	f7fe ffa7 	bl	8001a46 <uxListRemove>
        if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
 8002af8:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 8002afc:	f013 0f04 	tst.w	r3, #4
 8002b00:	d107      	bne.n	8002b12 <prvProcessExpiredTimer+0x2e>
            pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 8002b02:	f023 0301 	bic.w	r3, r3, #1
 8002b06:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
        pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8002b0a:	6a23      	ldr	r3, [r4, #32]
 8002b0c:	4620      	mov	r0, r4
 8002b0e:	4798      	blx	r3
    }
 8002b10:	bd70      	pop	{r4, r5, r6, pc}
            prvReloadTimer( pxTimer, xNextExpireTime, xTimeNow );
 8002b12:	4632      	mov	r2, r6
 8002b14:	4629      	mov	r1, r5
 8002b16:	4620      	mov	r0, r4
 8002b18:	f7ff ffd0 	bl	8002abc <prvReloadTimer>
 8002b1c:	e7f5      	b.n	8002b0a <prvProcessExpiredTimer+0x26>
 8002b1e:	bf00      	nop
 8002b20:	20008818 	andcs	r8, r0, r8, lsl r8

08002b24 <prvSwitchTimerLists>:
        }
    }
/*-----------------------------------------------------------*/

    static void prvSwitchTimerLists( void )
    {
 8002b24:	b508      	push	{r3, lr}

        /* The tick count has overflowed.  The timer lists must be switched.
         * If there are any timers still referenced from the current timer list
         * then they must have expired and should be processed before the lists
         * are switched. */
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8002b26:	e005      	b.n	8002b34 <prvSwitchTimerLists+0x10>
        {
            xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8002b28:	68db      	ldr	r3, [r3, #12]

            /* Process the expired timer.  For auto-reload timers, be careful to
             * process only expirations that occur on the current list.  Further
             * expirations must wait until after the lists are switched. */
            prvProcessExpiredTimer( xNextExpireTime, tmrMAX_TIME_BEFORE_OVERFLOW );
 8002b2a:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8002b2e:	6818      	ldr	r0, [r3, #0]
 8002b30:	f7ff ffd8 	bl	8002ae4 <prvProcessExpiredTimer>
        while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8002b34:	4b05      	ldr	r3, [pc, #20]	; (8002b4c <prvSwitchTimerLists+0x28>)
 8002b36:	681b      	ldr	r3, [r3, #0]
 8002b38:	681a      	ldr	r2, [r3, #0]
 8002b3a:	2a00      	cmp	r2, #0
 8002b3c:	d1f4      	bne.n	8002b28 <prvSwitchTimerLists+0x4>
        }

        pxTemp = pxCurrentTimerList;
        pxCurrentTimerList = pxOverflowTimerList;
 8002b3e:	4a04      	ldr	r2, [pc, #16]	; (8002b50 <prvSwitchTimerLists+0x2c>)
 8002b40:	6810      	ldr	r0, [r2, #0]
 8002b42:	4902      	ldr	r1, [pc, #8]	; (8002b4c <prvSwitchTimerLists+0x28>)
 8002b44:	6008      	str	r0, [r1, #0]
        pxOverflowTimerList = pxTemp;
 8002b46:	6013      	str	r3, [r2, #0]
    }
 8002b48:	bd08      	pop	{r3, pc}
 8002b4a:	bf00      	nop
 8002b4c:	20008818 	andcs	r8, r0, r8, lsl r8
 8002b50:	2000881c 	andcs	r8, r0, ip, lsl r8

08002b54 <prvSampleTimeNow>:
    {
 8002b54:	b538      	push	{r3, r4, r5, lr}
 8002b56:	4605      	mov	r5, r0
        xTimeNow = xTaskGetTickCount();
 8002b58:	f7ff fba8 	bl	80022ac <xTaskGetTickCount>
 8002b5c:	4604      	mov	r4, r0
        if( xTimeNow < xLastTime )
 8002b5e:	4b07      	ldr	r3, [pc, #28]	; (8002b7c <prvSampleTimeNow+0x28>)
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	4283      	cmp	r3, r0
 8002b64:	d805      	bhi.n	8002b72 <prvSampleTimeNow+0x1e>
            *pxTimerListsWereSwitched = pdFALSE;
 8002b66:	2300      	movs	r3, #0
 8002b68:	602b      	str	r3, [r5, #0]
        xLastTime = xTimeNow;
 8002b6a:	4b04      	ldr	r3, [pc, #16]	; (8002b7c <prvSampleTimeNow+0x28>)
 8002b6c:	601c      	str	r4, [r3, #0]
    }
 8002b6e:	4620      	mov	r0, r4
 8002b70:	bd38      	pop	{r3, r4, r5, pc}
            prvSwitchTimerLists();
 8002b72:	f7ff ffd7 	bl	8002b24 <prvSwitchTimerLists>
            *pxTimerListsWereSwitched = pdTRUE;
 8002b76:	2301      	movs	r3, #1
 8002b78:	602b      	str	r3, [r5, #0]
 8002b7a:	e7f6      	b.n	8002b6a <prvSampleTimeNow+0x16>
 8002b7c:	200088f8 	strdcs	r8, [r0], -r8	; <UNPREDICTABLE>

08002b80 <prvProcessTimerOrBlockTask>:
    {
 8002b80:	b570      	push	{r4, r5, r6, lr}
 8002b82:	b082      	sub	sp, #8
 8002b84:	4606      	mov	r6, r0
 8002b86:	460c      	mov	r4, r1
        vTaskSuspendAll();
 8002b88:	f7ff fb88 	bl	800229c <vTaskSuspendAll>
            xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8002b8c:	a801      	add	r0, sp, #4
 8002b8e:	f7ff ffe1 	bl	8002b54 <prvSampleTimeNow>
            if( xTimerListsWereSwitched == pdFALSE )
 8002b92:	9b01      	ldr	r3, [sp, #4]
 8002b94:	bb33      	cbnz	r3, 8002be4 <prvProcessTimerOrBlockTask+0x64>
 8002b96:	4605      	mov	r5, r0
                if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8002b98:	b90c      	cbnz	r4, 8002b9e <prvProcessTimerOrBlockTask+0x1e>
 8002b9a:	42b0      	cmp	r0, r6
 8002b9c:	d219      	bcs.n	8002bd2 <prvProcessTimerOrBlockTask+0x52>
                    if( xListWasEmpty != pdFALSE )
 8002b9e:	b124      	cbz	r4, 8002baa <prvProcessTimerOrBlockTask+0x2a>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8002ba0:	4a12      	ldr	r2, [pc, #72]	; (8002bec <prvProcessTimerOrBlockTask+0x6c>)
 8002ba2:	6812      	ldr	r2, [r2, #0]
 8002ba4:	6812      	ldr	r2, [r2, #0]
 8002ba6:	b9da      	cbnz	r2, 8002be0 <prvProcessTimerOrBlockTask+0x60>
 8002ba8:	2401      	movs	r4, #1
                    vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8002baa:	4622      	mov	r2, r4
 8002bac:	1b71      	subs	r1, r6, r5
 8002bae:	4b10      	ldr	r3, [pc, #64]	; (8002bf0 <prvProcessTimerOrBlockTask+0x70>)
 8002bb0:	6818      	ldr	r0, [r3, #0]
 8002bb2:	f7ff f923 	bl	8001dfc <vQueueWaitForMessageRestricted>
                    if( xTaskResumeAll() == pdFALSE )
 8002bb6:	f7ff fc53 	bl	8002460 <xTaskResumeAll>
 8002bba:	b9a8      	cbnz	r0, 8002be8 <prvProcessTimerOrBlockTask+0x68>
                        taskYIELD_WITHIN_API();
 8002bbc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8002bc0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002bc4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8002bc8:	f3bf 8f4f 	dsb	sy
 8002bcc:	f3bf 8f6f 	isb	sy
 8002bd0:	e00a      	b.n	8002be8 <prvProcessTimerOrBlockTask+0x68>
                    ( void ) xTaskResumeAll();
 8002bd2:	f7ff fc45 	bl	8002460 <xTaskResumeAll>
                    prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 8002bd6:	4629      	mov	r1, r5
 8002bd8:	4630      	mov	r0, r6
 8002bda:	f7ff ff83 	bl	8002ae4 <prvProcessExpiredTimer>
 8002bde:	e003      	b.n	8002be8 <prvProcessTimerOrBlockTask+0x68>
                        xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8002be0:	461c      	mov	r4, r3
 8002be2:	e7e2      	b.n	8002baa <prvProcessTimerOrBlockTask+0x2a>
                ( void ) xTaskResumeAll();
 8002be4:	f7ff fc3c 	bl	8002460 <xTaskResumeAll>
    }
 8002be8:	b002      	add	sp, #8
 8002bea:	bd70      	pop	{r4, r5, r6, pc}
 8002bec:	2000881c 	andcs	r8, r0, ip, lsl r8
 8002bf0:	20008958 	andcs	r8, r0, r8, asr r9

08002bf4 <prvProcessReceivedCommands>:
    {
 8002bf4:	b530      	push	{r4, r5, lr}
 8002bf6:	b087      	sub	sp, #28
        DaemonTaskMessage_t xMessage = { 0 };
 8002bf8:	2300      	movs	r3, #0
 8002bfa:	9302      	str	r3, [sp, #8]
 8002bfc:	9303      	str	r3, [sp, #12]
 8002bfe:	9304      	str	r3, [sp, #16]
 8002c00:	9305      	str	r3, [sp, #20]
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
 8002c02:	e002      	b.n	8002c0a <prvProcessReceivedCommands+0x16>
            if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8002c04:	9b02      	ldr	r3, [sp, #8]
 8002c06:	2b00      	cmp	r3, #0
 8002c08:	da0f      	bge.n	8002c2a <prvProcessReceivedCommands+0x36>
        while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL )
 8002c0a:	2200      	movs	r2, #0
 8002c0c:	a902      	add	r1, sp, #8
 8002c0e:	4b36      	ldr	r3, [pc, #216]	; (8002ce8 <prvProcessReceivedCommands+0xf4>)
 8002c10:	6818      	ldr	r0, [r3, #0]
 8002c12:	f7ff f86b 	bl	8001cec <xQueueReceive>
 8002c16:	2800      	cmp	r0, #0
 8002c18:	d064      	beq.n	8002ce4 <prvProcessReceivedCommands+0xf0>
                if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8002c1a:	9b02      	ldr	r3, [sp, #8]
 8002c1c:	2b00      	cmp	r3, #0
 8002c1e:	daf1      	bge.n	8002c04 <prvProcessReceivedCommands+0x10>
                    pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8002c20:	9905      	ldr	r1, [sp, #20]
 8002c22:	9804      	ldr	r0, [sp, #16]
 8002c24:	9b03      	ldr	r3, [sp, #12]
 8002c26:	4798      	blx	r3
 8002c28:	e7ec      	b.n	8002c04 <prvProcessReceivedCommands+0x10>
                pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8002c2a:	9c04      	ldr	r4, [sp, #16]
                if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE )
 8002c2c:	6963      	ldr	r3, [r4, #20]
 8002c2e:	b113      	cbz	r3, 8002c36 <prvProcessReceivedCommands+0x42>
                    ( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8002c30:	1d20      	adds	r0, r4, #4
 8002c32:	f7fe ff08 	bl	8001a46 <uxListRemove>
                xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8002c36:	a801      	add	r0, sp, #4
 8002c38:	f7ff ff8c 	bl	8002b54 <prvSampleTimeNow>
 8002c3c:	4605      	mov	r5, r0
                switch( xMessage.xMessageID )
 8002c3e:	9b02      	ldr	r3, [sp, #8]
 8002c40:	3b01      	subs	r3, #1
 8002c42:	2b08      	cmp	r3, #8
 8002c44:	d8e1      	bhi.n	8002c0a <prvProcessReceivedCommands+0x16>
 8002c46:	e8df f003 	tbb	[pc, r3]
 8002c4a:	30290505 	eorcc	r0, r9, r5, lsl #10
 8002c4e:	2905053f 	stmdbcs	r5, {r0, r1, r2, r3, r4, r5, r8, sl}
 8002c52:	f8940030 			; <UNDEFINED> instruction: 0xf8940030
                        pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
 8002c56:	3024      	adds	r0, #36	; 0x24
 8002c58:	f043 0301 	orr.w	r3, r3, #1
 8002c5c:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        if( prvInsertTimerInActiveList( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8002c60:	9b03      	ldr	r3, [sp, #12]
 8002c62:	69a1      	ldr	r1, [r4, #24]
 8002c64:	4602      	mov	r2, r0
 8002c66:	4419      	add	r1, r3
 8002c68:	4620      	mov	r0, r4
 8002c6a:	f7ff ff03 	bl	8002a74 <prvInsertTimerInActiveList>
 8002c6e:	2800      	cmp	r0, #0
 8002c70:	d0cb      	beq.n	8002c0a <prvProcessReceivedCommands+0x16>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0U )
 8002c72:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 8002c76:	f013 0f04 	tst.w	r3, #4
 8002c7a:	d107      	bne.n	8002c8c <prvProcessReceivedCommands+0x98>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 8002c7c:	f023 0301 	bic.w	r3, r3, #1
 8002c80:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                            pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8002c84:	6a23      	ldr	r3, [r4, #32]
 8002c86:	4620      	mov	r0, r4
 8002c88:	4798      	blx	r3
 8002c8a:	e7be      	b.n	8002c0a <prvProcessReceivedCommands+0x16>
                                prvReloadTimer( pxTimer, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow );
 8002c8c:	69a3      	ldr	r3, [r4, #24]
 8002c8e:	462a      	mov	r2, r5
 8002c90:	9903      	ldr	r1, [sp, #12]
 8002c92:	4419      	add	r1, r3
 8002c94:	4620      	mov	r0, r4
 8002c96:	f7ff ff11 	bl	8002abc <prvReloadTimer>
 8002c9a:	e7f3      	b.n	8002c84 <prvProcessReceivedCommands+0x90>
                        pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 8002c9c:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 8002ca0:	f023 0301 	bic.w	r3, r3, #1
 8002ca4:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        break;
 8002ca8:	e7af      	b.n	8002c0a <prvProcessReceivedCommands+0x16>
                        pxTimer->ucStatus |= ( uint8_t ) tmrSTATUS_IS_ACTIVE;
 8002caa:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 8002cae:	f043 0301 	orr.w	r3, r3, #1
 8002cb2:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
                        pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8002cb6:	9903      	ldr	r1, [sp, #12]
 8002cb8:	61a1      	str	r1, [r4, #24]
                        ( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8002cba:	4603      	mov	r3, r0
 8002cbc:	4602      	mov	r2, r0
 8002cbe:	4401      	add	r1, r0
 8002cc0:	4620      	mov	r0, r4
 8002cc2:	f7ff fed7 	bl	8002a74 <prvInsertTimerInActiveList>
                        break;
 8002cc6:	e7a0      	b.n	8002c0a <prvProcessReceivedCommands+0x16>
                            if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8002cc8:	f894 3024 	ldrb.w	r3, [r4, #36]	; 0x24
 8002ccc:	f013 0f02 	tst.w	r3, #2
 8002cd0:	d004      	beq.n	8002cdc <prvProcessReceivedCommands+0xe8>
                                pxTimer->ucStatus &= ( ( uint8_t ) ~tmrSTATUS_IS_ACTIVE );
 8002cd2:	f023 0301 	bic.w	r3, r3, #1
 8002cd6:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
 8002cda:	e796      	b.n	8002c0a <prvProcessReceivedCommands+0x16>
                                vPortFree( pxTimer );
 8002cdc:	4620      	mov	r0, r4
 8002cde:	f000 f937 	bl	8002f50 <vPortFree>
 8002ce2:	e792      	b.n	8002c0a <prvProcessReceivedCommands+0x16>
    }
 8002ce4:	b007      	add	sp, #28
 8002ce6:	bd30      	pop	{r4, r5, pc}
 8002ce8:	20008958 	andcs	r8, r0, r8, asr r9

08002cec <prvTimerTask>:
    {
 8002cec:	b500      	push	{lr}
 8002cee:	b083      	sub	sp, #12
            xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 8002cf0:	a801      	add	r0, sp, #4
 8002cf2:	f7ff feaf 	bl	8002a54 <prvGetNextExpireTime>
            prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 8002cf6:	9901      	ldr	r1, [sp, #4]
 8002cf8:	f7ff ff42 	bl	8002b80 <prvProcessTimerOrBlockTask>
            prvProcessReceivedCommands();
 8002cfc:	f7ff ff7a 	bl	8002bf4 <prvProcessReceivedCommands>
        for( ; configCONTROL_INFINITE_LOOP(); )
 8002d00:	e7f6      	b.n	8002cf0 <prvTimerTask+0x4>
	...

08002d04 <prvCheckForValidListAndQueue>:
/*-----------------------------------------------------------*/

    static void prvCheckForValidListAndQueue( void )
    {
 8002d04:	b530      	push	{r4, r5, lr}
 8002d06:	b083      	sub	sp, #12
        /* Check that the list from which active timers are referenced, and the
         * queue used to communicate with the timer service, have been
         * initialised. */
        taskENTER_CRITICAL();
 8002d08:	f000 f9a4 	bl	8003054 <vPortEnterCritical>
        {
            if( xTimerQueue == NULL )
 8002d0c:	4b0e      	ldr	r3, [pc, #56]	; (8002d48 <prvCheckForValidListAndQueue+0x44>)
 8002d0e:	681b      	ldr	r3, [r3, #0]
 8002d10:	b11b      	cbz	r3, 8002d1a <prvCheckForValidListAndQueue+0x16>
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
 8002d12:	f000 f9af 	bl	8003074 <vPortExitCritical>
    }
 8002d16:	b003      	add	sp, #12
 8002d18:	bd30      	pop	{r4, r5, pc}
                vListInitialise( &xActiveTimerList1 );
 8002d1a:	4d0c      	ldr	r5, [pc, #48]	; (8002d4c <prvCheckForValidListAndQueue+0x48>)
 8002d1c:	4628      	mov	r0, r5
 8002d1e:	f7fe fe69 	bl	80019f4 <vListInitialise>
                vListInitialise( &xActiveTimerList2 );
 8002d22:	4c0b      	ldr	r4, [pc, #44]	; (8002d50 <prvCheckForValidListAndQueue+0x4c>)
 8002d24:	4620      	mov	r0, r4
 8002d26:	f7fe fe65 	bl	80019f4 <vListInitialise>
                pxCurrentTimerList = &xActiveTimerList1;
 8002d2a:	4b0a      	ldr	r3, [pc, #40]	; (8002d54 <prvCheckForValidListAndQueue+0x50>)
 8002d2c:	601d      	str	r5, [r3, #0]
                pxOverflowTimerList = &xActiveTimerList2;
 8002d2e:	4b0a      	ldr	r3, [pc, #40]	; (8002d58 <prvCheckForValidListAndQueue+0x54>)
 8002d30:	601c      	str	r4, [r3, #0]
                    xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8002d32:	2300      	movs	r3, #0
 8002d34:	9300      	str	r3, [sp, #0]
 8002d36:	4b09      	ldr	r3, [pc, #36]	; (8002d5c <prvCheckForValidListAndQueue+0x58>)
 8002d38:	4a09      	ldr	r2, [pc, #36]	; (8002d60 <prvCheckForValidListAndQueue+0x5c>)
 8002d3a:	2110      	movs	r1, #16
 8002d3c:	200a      	movs	r0, #10
 8002d3e:	f7fe ffb6 	bl	8001cae <xQueueGenericCreateStatic>
 8002d42:	4b01      	ldr	r3, [pc, #4]	; (8002d48 <prvCheckForValidListAndQueue+0x44>)
 8002d44:	6018      	str	r0, [r3, #0]
 8002d46:	e7e4      	b.n	8002d12 <prvCheckForValidListAndQueue+0xe>
 8002d48:	20008958 	andcs	r8, r0, r8, asr r9
 8002d4c:	200088c0 	andcs	r8, r0, r0, asr #17
 8002d50:	200088dc 	ldrdcs	r8, [r0], -ip
 8002d54:	20008818 	andcs	r8, r0, r8, lsl r8
 8002d58:	2000881c 	andcs	r8, r0, ip, lsl r8
 8002d5c:	200088fc 	strdcs	r8, [r0], -ip
 8002d60:	20008820 	andcs	r8, r0, r0, lsr #16

08002d64 <xTimerCreateTimerTask>:
    {
 8002d64:	b510      	push	{r4, lr}
 8002d66:	b088      	sub	sp, #32
        prvCheckForValidListAndQueue();
 8002d68:	f7ff ffcc 	bl	8002d04 <prvCheckForValidListAndQueue>
        if( xTimerQueue != NULL )
 8002d6c:	4b10      	ldr	r3, [pc, #64]	; (8002db0 <xTimerCreateTimerTask+0x4c>)
 8002d6e:	681b      	ldr	r3, [r3, #0]
 8002d70:	b1d3      	cbz	r3, 8002da8 <xTimerCreateTimerTask+0x44>
                    StaticTask_t * pxTimerTaskTCBBuffer = NULL;
 8002d72:	2400      	movs	r4, #0
 8002d74:	9405      	str	r4, [sp, #20]
                    StackType_t * pxTimerTaskStackBuffer = NULL;
 8002d76:	9406      	str	r4, [sp, #24]
                    vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &uxTimerTaskStackSize );
 8002d78:	aa07      	add	r2, sp, #28
 8002d7a:	a906      	add	r1, sp, #24
 8002d7c:	a805      	add	r0, sp, #20
 8002d7e:	f7ff fe5d 	bl	8002a3c <vApplicationGetTimerTaskMemory>
                    xTimerTaskHandle = xTaskCreateStatic( prvTimerTask,
 8002d82:	9b05      	ldr	r3, [sp, #20]
 8002d84:	9302      	str	r3, [sp, #8]
 8002d86:	9b06      	ldr	r3, [sp, #24]
 8002d88:	9301      	str	r3, [sp, #4]
 8002d8a:	2304      	movs	r3, #4
 8002d8c:	9300      	str	r3, [sp, #0]
 8002d8e:	4623      	mov	r3, r4
 8002d90:	9a07      	ldr	r2, [sp, #28]
 8002d92:	4908      	ldr	r1, [pc, #32]	; (8002db4 <xTimerCreateTimerTask+0x50>)
 8002d94:	4808      	ldr	r0, [pc, #32]	; (8002db8 <xTimerCreateTimerTask+0x54>)
 8002d96:	f7ff fa5b 	bl	8002250 <xTaskCreateStatic>
 8002d9a:	4b08      	ldr	r3, [pc, #32]	; (8002dbc <xTimerCreateTimerTask+0x58>)
 8002d9c:	6018      	str	r0, [r3, #0]
                    if( xTimerTaskHandle != NULL )
 8002d9e:	b108      	cbz	r0, 8002da4 <xTimerCreateTimerTask+0x40>
                        xReturn = pdPASS;
 8002da0:	2001      	movs	r0, #1
 8002da2:	e002      	b.n	8002daa <xTimerCreateTimerTask+0x46>
        BaseType_t xReturn = pdFAIL;
 8002da4:	4620      	mov	r0, r4
 8002da6:	e000      	b.n	8002daa <xTimerCreateTimerTask+0x46>
 8002da8:	2000      	movs	r0, #0
    }
 8002daa:	b008      	add	sp, #32
 8002dac:	bd10      	pop	{r4, pc}
 8002dae:	bf00      	nop
 8002db0:	20008958 	andcs	r8, r0, r8, asr r9
 8002db4:	080048f0 	stmdaeq	r0, {r4, r5, r6, r7, fp, lr}
 8002db8:	08002ced 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, sl, fp, sp}
 8002dbc:	2000895c 	andcs	r8, r0, ip, asr r9

08002dc0 <prvHeapInit>:
    BlockLink_t * pxFirstFreeBlock;
    portPOINTER_SIZE_TYPE uxStartAddress, uxEndAddress;
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;

    /* Ensure the heap starts on a correctly aligned boundary. */
    uxStartAddress = ( portPOINTER_SIZE_TYPE ) ucHeap;
 8002dc0:	4a10      	ldr	r2, [pc, #64]	; (8002e04 <prvHeapInit+0x44>)

    if( ( uxStartAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8002dc2:	f012 0f07 	tst.w	r2, #7
 8002dc6:	d01a      	beq.n	8002dfe <prvHeapInit+0x3e>
    {
        uxStartAddress += ( portBYTE_ALIGNMENT - 1 );
 8002dc8:	1dd1      	adds	r1, r2, #7
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
 8002dca:	f021 0107 	bic.w	r1, r1, #7
        xTotalHeapSize -= ( size_t ) ( uxStartAddress - ( portPOINTER_SIZE_TYPE ) ucHeap );
 8002dce:	f5c1 4300 	rsb	r3, r1, #32768	; 0x8000
 8002dd2:	4413      	add	r3, r2
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
 8002dd4:	460a      	mov	r2, r1
    }
    #endif

    /* xStart is used to hold a pointer to the first item in the list of free
     * blocks.  The void cast is used to prevent compiler warnings. */
    xStart.pxNextFreeBlock = ( void * ) heapPROTECT_BLOCK_POINTER( uxStartAddress );
 8002dd6:	480c      	ldr	r0, [pc, #48]	; (8002e08 <prvHeapInit+0x48>)
 8002dd8:	6002      	str	r2, [r0, #0]
    xStart.xBlockSize = ( size_t ) 0;
 8002dda:	2100      	movs	r1, #0
 8002ddc:	6041      	str	r1, [r0, #4]

    /* pxEnd is used to mark the end of the list of free blocks and is inserted
     * at the end of the heap space. */
    uxEndAddress = uxStartAddress + ( portPOINTER_SIZE_TYPE ) xTotalHeapSize;
 8002dde:	4413      	add	r3, r2
    uxEndAddress -= ( portPOINTER_SIZE_TYPE ) xHeapStructSize;
 8002de0:	3b08      	subs	r3, #8
    uxEndAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
 8002de2:	f023 0307 	bic.w	r3, r3, #7
    pxEnd = ( BlockLink_t * ) uxEndAddress;
 8002de6:	4809      	ldr	r0, [pc, #36]	; (8002e0c <prvHeapInit+0x4c>)
 8002de8:	6003      	str	r3, [r0, #0]
    pxEnd->xBlockSize = 0;
 8002dea:	6059      	str	r1, [r3, #4]
    pxEnd->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( NULL );
 8002dec:	6019      	str	r1, [r3, #0]

    /* To start with there is a single free block that is sized to take up the
     * entire heap space, minus the space taken by pxEnd. */
    pxFirstFreeBlock = ( BlockLink_t * ) uxStartAddress;
    pxFirstFreeBlock->xBlockSize = ( size_t ) ( uxEndAddress - ( portPOINTER_SIZE_TYPE ) pxFirstFreeBlock );
 8002dee:	1a99      	subs	r1, r3, r2
 8002df0:	6051      	str	r1, [r2, #4]
    pxFirstFreeBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
 8002df2:	6013      	str	r3, [r2, #0]

    /* Only one block exists - and it covers the entire usable heap space. */
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8002df4:	4b06      	ldr	r3, [pc, #24]	; (8002e10 <prvHeapInit+0x50>)
 8002df6:	6019      	str	r1, [r3, #0]
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8002df8:	4b06      	ldr	r3, [pc, #24]	; (8002e14 <prvHeapInit+0x54>)
 8002dfa:	6019      	str	r1, [r3, #0]
}
 8002dfc:	4770      	bx	lr
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8002dfe:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8002e02:	e7e8      	b.n	8002dd6 <prvHeapInit+0x16>
 8002e04:	20000098 	mulcs	r0, r8, r0
 8002e08:	20008974 	andcs	r8, r0, r4, ror r9
 8002e0c:	20008960 	andcs	r8, r0, r0, ror #18
 8002e10:	20008968 	andcs	r8, r0, r8, ror #18
 8002e14:	20008964 	andcs	r8, r0, r4, ror #18

08002e18 <prvInsertBlockIntoFreeList>:
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) < pxBlockToInsert; pxIterator = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
 8002e18:	4b16      	ldr	r3, [pc, #88]	; (8002e74 <prvInsertBlockIntoFreeList+0x5c>)
 8002e1a:	461a      	mov	r2, r3
 8002e1c:	681b      	ldr	r3, [r3, #0]
 8002e1e:	4283      	cmp	r3, r0
 8002e20:	d3fb      	bcc.n	8002e1a <prvInsertBlockIntoFreeList+0x2>

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8002e22:	6851      	ldr	r1, [r2, #4]
 8002e24:	eb02 0c01 	add.w	ip, r2, r1
 8002e28:	4584      	cmp	ip, r0
 8002e2a:	d009      	beq.n	8002e40 <prvInsertBlockIntoFreeList+0x28>

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
 8002e2c:	6841      	ldr	r1, [r0, #4]
 8002e2e:	eb00 0c01 	add.w	ip, r0, r1
 8002e32:	4563      	cmp	r3, ip
 8002e34:	d009      	beq.n	8002e4a <prvInsertBlockIntoFreeList+0x32>
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
        }
    }
    else
    {
        pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8002e36:	6003      	str	r3, [r0, #0]

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
 8002e38:	4290      	cmp	r0, r2
 8002e3a:	d019      	beq.n	8002e70 <prvInsertBlockIntoFreeList+0x58>
    {
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
 8002e3c:	6010      	str	r0, [r2, #0]
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
 8002e3e:	4770      	bx	lr
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8002e40:	6840      	ldr	r0, [r0, #4]
 8002e42:	4401      	add	r1, r0
 8002e44:	6051      	str	r1, [r2, #4]
        pxBlockToInsert = pxIterator;
 8002e46:	4610      	mov	r0, r2
 8002e48:	e7f0      	b.n	8002e2c <prvInsertBlockIntoFreeList+0x14>
{
 8002e4a:	b410      	push	{r4}
        if( heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) != pxEnd )
 8002e4c:	4c0a      	ldr	r4, [pc, #40]	; (8002e78 <prvInsertBlockIntoFreeList+0x60>)
 8002e4e:	6824      	ldr	r4, [r4, #0]
 8002e50:	42a3      	cmp	r3, r4
 8002e52:	d00b      	beq.n	8002e6c <prvInsertBlockIntoFreeList+0x54>
            pxBlockToInsert->xBlockSize += heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->xBlockSize;
 8002e54:	685b      	ldr	r3, [r3, #4]
 8002e56:	4419      	add	r1, r3
 8002e58:	6041      	str	r1, [r0, #4]
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->pxNextFreeBlock;
 8002e5a:	6813      	ldr	r3, [r2, #0]
 8002e5c:	681b      	ldr	r3, [r3, #0]
 8002e5e:	6003      	str	r3, [r0, #0]
    if( pxIterator != pxBlockToInsert )
 8002e60:	4290      	cmp	r0, r2
 8002e62:	d000      	beq.n	8002e66 <prvInsertBlockIntoFreeList+0x4e>
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
 8002e64:	6010      	str	r0, [r2, #0]
    }
}
 8002e66:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002e6a:	4770      	bx	lr
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
 8002e6c:	6004      	str	r4, [r0, #0]
 8002e6e:	e7f7      	b.n	8002e60 <prvInsertBlockIntoFreeList+0x48>
 8002e70:	4770      	bx	lr
 8002e72:	bf00      	nop
 8002e74:	20008974 	andcs	r8, r0, r4, ror r9
 8002e78:	20008960 	andcs	r8, r0, r0, ror #18

08002e7c <pvPortMalloc>:
{
 8002e7c:	b570      	push	{r4, r5, r6, lr}
    if( xWantedSize > 0 )
 8002e7e:	4604      	mov	r4, r0
 8002e80:	b170      	cbz	r0, 8002ea0 <pvPortMalloc+0x24>
        if( heapADD_WILL_OVERFLOW( xWantedSize, xHeapStructSize ) == 0 )
 8002e82:	f110 0f09 	cmn.w	r0, #9
 8002e86:	d80a      	bhi.n	8002e9e <pvPortMalloc+0x22>
            xWantedSize += xHeapStructSize;
 8002e88:	3408      	adds	r4, #8
            if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8002e8a:	f014 0307 	ands.w	r3, r4, #7
 8002e8e:	d007      	beq.n	8002ea0 <pvPortMalloc+0x24>
                xAdditionalRequiredSize = portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK );
 8002e90:	f1c3 0308 	rsb	r3, r3, #8
                if( heapADD_WILL_OVERFLOW( xWantedSize, xAdditionalRequiredSize ) == 0 )
 8002e94:	43da      	mvns	r2, r3
 8002e96:	42a2      	cmp	r2, r4
 8002e98:	d312      	bcc.n	8002ec0 <pvPortMalloc+0x44>
                    xWantedSize += xAdditionalRequiredSize;
 8002e9a:	441c      	add	r4, r3
 8002e9c:	e000      	b.n	8002ea0 <pvPortMalloc+0x24>
            xWantedSize = 0;
 8002e9e:	2400      	movs	r4, #0
    vTaskSuspendAll();
 8002ea0:	f7ff f9fc 	bl	800229c <vTaskSuspendAll>
        if( pxEnd == NULL )
 8002ea4:	4b25      	ldr	r3, [pc, #148]	; (8002f3c <pvPortMalloc+0xc0>)
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	b163      	cbz	r3, 8002ec4 <pvPortMalloc+0x48>
        if( heapBLOCK_SIZE_IS_VALID( xWantedSize ) != 0 )
 8002eaa:	2c00      	cmp	r4, #0
 8002eac:	db3e      	blt.n	8002f2c <pvPortMalloc+0xb0>
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8002eae:	2c00      	cmp	r4, #0
 8002eb0:	d03e      	beq.n	8002f30 <pvPortMalloc+0xb4>
 8002eb2:	4b23      	ldr	r3, [pc, #140]	; (8002f40 <pvPortMalloc+0xc4>)
 8002eb4:	681e      	ldr	r6, [r3, #0]
 8002eb6:	42a6      	cmp	r6, r4
 8002eb8:	d33c      	bcc.n	8002f34 <pvPortMalloc+0xb8>
                pxBlock = heapPROTECT_BLOCK_POINTER( xStart.pxNextFreeBlock );
 8002eba:	4922      	ldr	r1, [pc, #136]	; (8002f44 <pvPortMalloc+0xc8>)
 8002ebc:	680b      	ldr	r3, [r1, #0]
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
 8002ebe:	e006      	b.n	8002ece <pvPortMalloc+0x52>
                    xWantedSize = 0;
 8002ec0:	2400      	movs	r4, #0
 8002ec2:	e7ed      	b.n	8002ea0 <pvPortMalloc+0x24>
            prvHeapInit();
 8002ec4:	f7ff ff7c 	bl	8002dc0 <prvHeapInit>
 8002ec8:	e7ef      	b.n	8002eaa <pvPortMalloc+0x2e>
                    pxPreviousBlock = pxBlock;
 8002eca:	4619      	mov	r1, r3
                    pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
 8002ecc:	4613      	mov	r3, r2
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
 8002ece:	685a      	ldr	r2, [r3, #4]
 8002ed0:	42a2      	cmp	r2, r4
 8002ed2:	d202      	bcs.n	8002eda <pvPortMalloc+0x5e>
 8002ed4:	681a      	ldr	r2, [r3, #0]
 8002ed6:	2a00      	cmp	r2, #0
 8002ed8:	d1f7      	bne.n	8002eca <pvPortMalloc+0x4e>
                if( pxBlock != pxEnd )
 8002eda:	4a18      	ldr	r2, [pc, #96]	; (8002f3c <pvPortMalloc+0xc0>)
 8002edc:	6812      	ldr	r2, [r2, #0]
 8002ede:	429a      	cmp	r2, r3
 8002ee0:	d02a      	beq.n	8002f38 <pvPortMalloc+0xbc>
                    pvReturn = ( void * ) ( ( ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxPreviousBlock->pxNextFreeBlock ) ) + xHeapStructSize );
 8002ee2:	680d      	ldr	r5, [r1, #0]
 8002ee4:	3508      	adds	r5, #8
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8002ee6:	681a      	ldr	r2, [r3, #0]
 8002ee8:	600a      	str	r2, [r1, #0]
                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8002eea:	6858      	ldr	r0, [r3, #4]
 8002eec:	1b00      	subs	r0, r0, r4
 8002eee:	2810      	cmp	r0, #16
 8002ef0:	d905      	bls.n	8002efe <pvPortMalloc+0x82>
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8002ef2:	191a      	adds	r2, r3, r4
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8002ef4:	6050      	str	r0, [r2, #4]
                        pxBlock->xBlockSize = xWantedSize;
 8002ef6:	605c      	str	r4, [r3, #4]
                        pxNewBlockLink->pxNextFreeBlock = pxPreviousBlock->pxNextFreeBlock;
 8002ef8:	6808      	ldr	r0, [r1, #0]
 8002efa:	5118      	str	r0, [r3, r4]
                        pxPreviousBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxNewBlockLink );
 8002efc:	600a      	str	r2, [r1, #0]
                    xFreeBytesRemaining -= pxBlock->xBlockSize;
 8002efe:	6859      	ldr	r1, [r3, #4]
 8002f00:	1a76      	subs	r6, r6, r1
 8002f02:	480f      	ldr	r0, [pc, #60]	; (8002f40 <pvPortMalloc+0xc4>)
 8002f04:	6006      	str	r6, [r0, #0]
                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8002f06:	4810      	ldr	r0, [pc, #64]	; (8002f48 <pvPortMalloc+0xcc>)
 8002f08:	6800      	ldr	r0, [r0, #0]
 8002f0a:	4286      	cmp	r6, r0
 8002f0c:	d201      	bcs.n	8002f12 <pvPortMalloc+0x96>
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8002f0e:	480e      	ldr	r0, [pc, #56]	; (8002f48 <pvPortMalloc+0xcc>)
 8002f10:	6006      	str	r6, [r0, #0]
                    heapALLOCATE_BLOCK( pxBlock );
 8002f12:	f041 4100 	orr.w	r1, r1, #2147483648	; 0x80000000
 8002f16:	6059      	str	r1, [r3, #4]
                    pxBlock->pxNextFreeBlock = NULL;
 8002f18:	2200      	movs	r2, #0
 8002f1a:	601a      	str	r2, [r3, #0]
                    xNumberOfSuccessfulAllocations++;
 8002f1c:	4a0b      	ldr	r2, [pc, #44]	; (8002f4c <pvPortMalloc+0xd0>)
 8002f1e:	6813      	ldr	r3, [r2, #0]
 8002f20:	3301      	adds	r3, #1
 8002f22:	6013      	str	r3, [r2, #0]
    ( void ) xTaskResumeAll();
 8002f24:	f7ff fa9c 	bl	8002460 <xTaskResumeAll>
}
 8002f28:	4628      	mov	r0, r5
 8002f2a:	bd70      	pop	{r4, r5, r6, pc}
    void * pvReturn = NULL;
 8002f2c:	2500      	movs	r5, #0
 8002f2e:	e7f9      	b.n	8002f24 <pvPortMalloc+0xa8>
 8002f30:	2500      	movs	r5, #0
 8002f32:	e7f7      	b.n	8002f24 <pvPortMalloc+0xa8>
 8002f34:	2500      	movs	r5, #0
 8002f36:	e7f5      	b.n	8002f24 <pvPortMalloc+0xa8>
 8002f38:	2500      	movs	r5, #0
 8002f3a:	e7f3      	b.n	8002f24 <pvPortMalloc+0xa8>
 8002f3c:	20008960 	andcs	r8, r0, r0, ror #18
 8002f40:	20008964 	andcs	r8, r0, r4, ror #18
 8002f44:	20008974 	andcs	r8, r0, r4, ror r9
 8002f48:	20008968 	andcs	r8, r0, r8, ror #18
 8002f4c:	2000896c 	andcs	r8, r0, ip, ror #18

08002f50 <vPortFree>:
    if( pv != NULL )
 8002f50:	b308      	cbz	r0, 8002f96 <vPortFree+0x46>
{
 8002f52:	b538      	push	{r3, r4, r5, lr}
 8002f54:	4604      	mov	r4, r0
        puc -= xHeapStructSize;
 8002f56:	f1a0 0508 	sub.w	r5, r0, #8
        if( heapBLOCK_IS_ALLOCATED( pxLink ) != 0 )
 8002f5a:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8002f5e:	2b00      	cmp	r3, #0
 8002f60:	da02      	bge.n	8002f68 <vPortFree+0x18>
            if( pxLink->pxNextFreeBlock == NULL )
 8002f62:	f850 2c08 	ldr.w	r2, [r0, #-8]
 8002f66:	b102      	cbz	r2, 8002f6a <vPortFree+0x1a>
}
 8002f68:	bd38      	pop	{r3, r4, r5, pc}
                heapFREE_BLOCK( pxLink );
 8002f6a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8002f6e:	f840 3c04 	str.w	r3, [r0, #-4]
                vTaskSuspendAll();
 8002f72:	f7ff f993 	bl	800229c <vTaskSuspendAll>
                    xFreeBytesRemaining += pxLink->xBlockSize;
 8002f76:	f854 1c04 	ldr.w	r1, [r4, #-4]
 8002f7a:	4a07      	ldr	r2, [pc, #28]	; (8002f98 <vPortFree+0x48>)
 8002f7c:	6813      	ldr	r3, [r2, #0]
 8002f7e:	440b      	add	r3, r1
 8002f80:	6013      	str	r3, [r2, #0]
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8002f82:	4628      	mov	r0, r5
 8002f84:	f7ff ff48 	bl	8002e18 <prvInsertBlockIntoFreeList>
                    xNumberOfSuccessfulFrees++;
 8002f88:	4a04      	ldr	r2, [pc, #16]	; (8002f9c <vPortFree+0x4c>)
 8002f8a:	6813      	ldr	r3, [r2, #0]
 8002f8c:	3301      	adds	r3, #1
 8002f8e:	6013      	str	r3, [r2, #0]
                ( void ) xTaskResumeAll();
 8002f90:	f7ff fa66 	bl	8002460 <xTaskResumeAll>
}
 8002f94:	e7e8      	b.n	8002f68 <vPortFree+0x18>
 8002f96:	4770      	bx	lr
 8002f98:	20008964 	andcs	r8, r0, r4, ror #18
 8002f9c:	20008970 	andcs	r8, r0, r0, ror r9

08002fa0 <prvTaskExitError>:
    return pxTopOfStack;
}
/*-----------------------------------------------------------*/

static void prvTaskExitError( void )
{
 8002fa0:	b082      	sub	sp, #8
    volatile uint32_t ulDummy = 0;
 8002fa2:	2300      	movs	r3, #0
 8002fa4:	9301      	str	r3, [sp, #4]
 8002fa6:	f04f 03bf 	mov.w	r3, #191	; 0xbf
 8002faa:	f383 8811 	msr	BASEPRI, r3
 8002fae:	f3bf 8f6f 	isb	sy
 8002fb2:	f3bf 8f4f 	dsb	sy
     * Artificially force an assert() to be triggered if configASSERT() is
     * defined, then stop here so application writers can catch the error. */
    configASSERT( uxCriticalNesting == ~0UL );
    portDISABLE_INTERRUPTS();

    while( ulDummy == 0 )
 8002fb6:	9b01      	ldr	r3, [sp, #4]
 8002fb8:	2b00      	cmp	r3, #0
 8002fba:	d0fc      	beq.n	8002fb6 <prvTaskExitError+0x16>
         * about code appearing after this function is called - making ulDummy
         * volatile makes the compiler think the function could return and
         * therefore not output an 'unreachable code' warning for code that appears
         * after it. */
    }
}
 8002fbc:	b002      	add	sp, #8
 8002fbe:	4770      	bx	lr

08002fc0 <prvPortStartFirstTask>:
{
    /* Start the first task.  This also clears the bit that indicates the FPU is
     * in use in case the FPU was used before the scheduler was started - which
     * would otherwise result in the unnecessary leaving of space in the SVC stack
     * for lazy saving of FPU registers. */
    __asm volatile (
 8002fc0:	4808      	ldr	r0, [pc, #32]	; (8002fe4 <prvPortStartFirstTask+0x24>)
 8002fc2:	6800      	ldr	r0, [r0, #0]
 8002fc4:	6800      	ldr	r0, [r0, #0]
 8002fc6:	f380 8808 	msr	MSP, r0
 8002fca:	f04f 0000 	mov.w	r0, #0
 8002fce:	f380 8814 	msr	CONTROL, r0
 8002fd2:	b662      	cpsie	i
 8002fd4:	b661      	cpsie	f
 8002fd6:	f3bf 8f4f 	dsb	sy
 8002fda:	f3bf 8f6f 	isb	sy
 8002fde:	df00      	svc	0
 8002fe0:	bf00      	nop
 8002fe2:	ed080000 	stc	0, cr0, [r8, #-0]
 8002fe6:	 			; <UNDEFINED> instruction: 0xf8dfe000

08002fe8 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
    __asm volatile
 8002fe8:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8002ff8 <vPortEnableVFP+0x10>
 8002fec:	6801      	ldr	r1, [r0, #0]
 8002fee:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8002ff2:	6001      	str	r1, [r0, #0]
 8002ff4:	4770      	bx	lr
 8002ff6:	ed880000 	stc	0, cr0, [r8]
 8002ffa:	 			; <UNDEFINED> instruction: 0xf04fe000

08002ffc <pxPortInitialiseStack>:
    *pxTopOfStack = portINITIAL_XPSR;                                    /* xPSR */
 8002ffc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8003000:	f840 3c04 	str.w	r3, [r0, #-4]
    *pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK; /* PC */
 8003004:	f021 0101 	bic.w	r1, r1, #1
 8003008:	f840 1c08 	str.w	r1, [r0, #-8]
    *pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;             /* LR */
 800300c:	4b05      	ldr	r3, [pc, #20]	; (8003024 <pxPortInitialiseStack+0x28>)
 800300e:	f840 3c0c 	str.w	r3, [r0, #-12]
    *pxTopOfStack = ( StackType_t ) pvParameters; /* R0 */
 8003012:	f840 2c20 	str.w	r2, [r0, #-32]
    *pxTopOfStack = portINITIAL_EXC_RETURN;
 8003016:	f06f 0302 	mvn.w	r3, #2
 800301a:	f840 3c24 	str.w	r3, [r0, #-36]
}
 800301e:	3844      	subs	r0, #68	; 0x44
 8003020:	4770      	bx	lr
 8003022:	bf00      	nop
 8003024:	08002fa1 	stmdaeq	r0, {r0, r5, r7, r8, r9, sl, fp, sp}
	...

08003030 <vPortSVCHandler>:
    __asm volatile (
 8003030:	4b07      	ldr	r3, [pc, #28]	; (8003050 <pxCurrentTCBConst2>)
 8003032:	6819      	ldr	r1, [r3, #0]
 8003034:	6808      	ldr	r0, [r1, #0]
 8003036:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800303a:	f380 8809 	msr	PSP, r0
 800303e:	f3bf 8f6f 	isb	sy
 8003042:	f04f 0000 	mov.w	r0, #0
 8003046:	f380 8811 	msr	BASEPRI, r0
 800304a:	4770      	bx	lr
 800304c:	f3af 8000 	nop.w

08003050 <pxCurrentTCBConst2>:
 8003050:	2000822c 	andcs	r8, r0, ip, lsr #4

08003054 <vPortEnterCritical>:
 8003054:	f04f 03bf 	mov.w	r3, #191	; 0xbf
 8003058:	f383 8811 	msr	BASEPRI, r3
 800305c:	f3bf 8f6f 	isb	sy
 8003060:	f3bf 8f4f 	dsb	sy
    uxCriticalNesting++;
 8003064:	4a02      	ldr	r2, [pc, #8]	; (8003070 <vPortEnterCritical+0x1c>)
 8003066:	6813      	ldr	r3, [r2, #0]
 8003068:	3301      	adds	r3, #1
 800306a:	6013      	str	r3, [r2, #0]
}
 800306c:	4770      	bx	lr
 800306e:	bf00      	nop
 8003070:	20000010 	andcs	r0, r0, r0, lsl r0

08003074 <vPortExitCritical>:
    uxCriticalNesting--;
 8003074:	4a03      	ldr	r2, [pc, #12]	; (8003084 <vPortExitCritical+0x10>)
 8003076:	6813      	ldr	r3, [r2, #0]
 8003078:	3b01      	subs	r3, #1
 800307a:	6013      	str	r3, [r2, #0]
    if( uxCriticalNesting == 0 )
 800307c:	b90b      	cbnz	r3, 8003082 <vPortExitCritical+0xe>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
    __asm volatile
 800307e:	f383 8811 	msr	BASEPRI, r3
}
 8003082:	4770      	bx	lr
 8003084:	20000010 	andcs	r0, r0, r0, lsl r0
	...

08003090 <xPortPendSVHandler>:
    __asm volatile
 8003090:	f3ef 8009 	mrs	r0, PSP
 8003094:	f3bf 8f6f 	isb	sy
 8003098:	4b15      	ldr	r3, [pc, #84]	; (80030f0 <pxCurrentTCBConst>)
 800309a:	681a      	ldr	r2, [r3, #0]
 800309c:	f01e 0f10 	tst.w	lr, #16
 80030a0:	bf08      	it	eq
 80030a2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80030a6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80030aa:	6010      	str	r0, [r2, #0]
 80030ac:	e92d 0009 	stmdb	sp!, {r0, r3}
 80030b0:	f04f 00bf 	mov.w	r0, #191	; 0xbf
 80030b4:	f380 8811 	msr	BASEPRI, r0
 80030b8:	f3bf 8f4f 	dsb	sy
 80030bc:	f3bf 8f6f 	isb	sy
 80030c0:	f7ff faac 	bl	800261c <vTaskSwitchContext>
 80030c4:	f04f 0000 	mov.w	r0, #0
 80030c8:	f380 8811 	msr	BASEPRI, r0
 80030cc:	bc09      	pop	{r0, r3}
 80030ce:	6819      	ldr	r1, [r3, #0]
 80030d0:	6808      	ldr	r0, [r1, #0]
 80030d2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80030d6:	f01e 0f10 	tst.w	lr, #16
 80030da:	bf08      	it	eq
 80030dc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80030e0:	f380 8809 	msr	PSP, r0
 80030e4:	f3bf 8f6f 	isb	sy
 80030e8:	4770      	bx	lr
 80030ea:	bf00      	nop
 80030ec:	f3af 8000 	nop.w

080030f0 <pxCurrentTCBConst>:
 80030f0:	2000822c 	andcs	r8, r0, ip, lsr #4

080030f4 <xPortSysTickHandler>:
{
 80030f4:	b508      	push	{r3, lr}
    __asm volatile
 80030f6:	f04f 03bf 	mov.w	r3, #191	; 0xbf
 80030fa:	f383 8811 	msr	BASEPRI, r3
 80030fe:	f3bf 8f6f 	isb	sy
 8003102:	f3bf 8f4f 	dsb	sy
        if( xTaskIncrementTick() != pdFALSE )
 8003106:	f7ff f8fb 	bl	8002300 <xTaskIncrementTick>
 800310a:	b128      	cbz	r0, 8003118 <xPortSysTickHandler+0x24>
            portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 800310c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8003110:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003114:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm volatile
 8003118:	2300      	movs	r3, #0
 800311a:	f383 8811 	msr	BASEPRI, r3
}
 800311e:	bd08      	pop	{r3, pc}

08003120 <vPortSuppressTicksAndSleep>:
    {
 8003120:	b510      	push	{r4, lr}
        if( xExpectedIdleTime > xMaximumPossibleSuppressedTicks )
 8003122:	4b41      	ldr	r3, [pc, #260]	; (8003228 <vPortSuppressTicksAndSleep+0x108>)
 8003124:	681c      	ldr	r4, [r3, #0]
 8003126:	4284      	cmp	r4, r0
 8003128:	d300      	bcc.n	800312c <vPortSuppressTicksAndSleep+0xc>
 800312a:	4604      	mov	r4, r0
        __asm volatile ( "cpsid i" ::: "memory" );
 800312c:	b672      	cpsid	i
        __asm volatile ( "dsb" );
 800312e:	f3bf 8f4f 	dsb	sy
        __asm volatile ( "isb" );
 8003132:	f3bf 8f6f 	isb	sy
        if( eTaskConfirmSleepModeStatus() == eAbortSleep )
 8003136:	f7ff fba1 	bl	800287c <eTaskConfirmSleepModeStatus>
 800313a:	b908      	cbnz	r0, 8003140 <vPortSuppressTicksAndSleep+0x20>
            __asm volatile ( "cpsie i" ::: "memory" );
 800313c:	b662      	cpsie	i
    }
 800313e:	bd10      	pop	{r4, pc}
            portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT );
 8003140:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8003144:	2206      	movs	r2, #6
 8003146:	611a      	str	r2, [r3, #16]
            ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 8003148:	699b      	ldr	r3, [r3, #24]
            if( ulSysTickDecrementsLeft == 0 )
 800314a:	b90b      	cbnz	r3, 8003150 <vPortSuppressTicksAndSleep+0x30>
                ulSysTickDecrementsLeft = ulTimerCountsForOneTick;
 800314c:	4b37      	ldr	r3, [pc, #220]	; (800322c <vPortSuppressTicksAndSleep+0x10c>)
 800314e:	681b      	ldr	r3, [r3, #0]
            ulReloadValue = ulSysTickDecrementsLeft + ( ulTimerCountsForOneTick * ( xExpectedIdleTime - 1UL ) );
 8003150:	1e60      	subs	r0, r4, #1
 8003152:	4a36      	ldr	r2, [pc, #216]	; (800322c <vPortSuppressTicksAndSleep+0x10c>)
 8003154:	6812      	ldr	r2, [r2, #0]
 8003156:	fb02 3300 	mla	r3, r2, r0, r3
            if( ( portNVIC_INT_CTRL_REG & portNVIC_PEND_SYSTICK_SET_BIT ) != 0 )
 800315a:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800315e:	f8d2 2d04 	ldr.w	r2, [r2, #3332]	; 0xd04
 8003162:	f012 6f80 	tst.w	r2, #67108864	; 0x4000000
 8003166:	d008      	beq.n	800317a <vPortSuppressTicksAndSleep+0x5a>
                portNVIC_INT_CTRL_REG = portNVIC_PEND_SYSTICK_CLEAR_BIT;
 8003168:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 800316c:	f04f 7100 	mov.w	r1, #33554432	; 0x2000000
 8003170:	f8c2 1d04 	str.w	r1, [r2, #3332]	; 0xd04
                ulReloadValue -= ulTimerCountsForOneTick;
 8003174:	4a2d      	ldr	r2, [pc, #180]	; (800322c <vPortSuppressTicksAndSleep+0x10c>)
 8003176:	6812      	ldr	r2, [r2, #0]
 8003178:	1a9b      	subs	r3, r3, r2
            if( ulReloadValue > ulStoppedTimerCompensation )
 800317a:	4a2d      	ldr	r2, [pc, #180]	; (8003230 <vPortSuppressTicksAndSleep+0x110>)
 800317c:	6812      	ldr	r2, [r2, #0]
 800317e:	429a      	cmp	r2, r3
 8003180:	d200      	bcs.n	8003184 <vPortSuppressTicksAndSleep+0x64>
                ulReloadValue -= ulStoppedTimerCompensation;
 8003182:	1a9b      	subs	r3, r3, r2
            portNVIC_SYSTICK_LOAD_REG = ulReloadValue;
 8003184:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8003188:	6153      	str	r3, [r2, #20]
            portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800318a:	2100      	movs	r1, #0
 800318c:	6191      	str	r1, [r2, #24]
            portNVIC_SYSTICK_CTRL_REG |= portNVIC_SYSTICK_ENABLE_BIT;
 800318e:	6911      	ldr	r1, [r2, #16]
 8003190:	f041 0101 	orr.w	r1, r1, #1
 8003194:	6111      	str	r1, [r2, #16]
            if( xModifiableIdleTime > 0 )
 8003196:	b124      	cbz	r4, 80031a2 <vPortSuppressTicksAndSleep+0x82>
                __asm volatile ( "dsb" ::: "memory" );
 8003198:	f3bf 8f4f 	dsb	sy
                __asm volatile ( "wfi" );
 800319c:	bf30      	wfi
                __asm volatile ( "isb" );
 800319e:	f3bf 8f6f 	isb	sy
            __asm volatile ( "cpsie i" ::: "memory" );
 80031a2:	b662      	cpsie	i
            __asm volatile ( "dsb" );
 80031a4:	f3bf 8f4f 	dsb	sy
            __asm volatile ( "isb" );
 80031a8:	f3bf 8f6f 	isb	sy
            __asm volatile ( "cpsid i" ::: "memory" );
 80031ac:	b672      	cpsid	i
            __asm volatile ( "dsb" );
 80031ae:	f3bf 8f4f 	dsb	sy
            __asm volatile ( "isb" );
 80031b2:	f3bf 8f6f 	isb	sy
            portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT );
 80031b6:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80031ba:	2106      	movs	r1, #6
 80031bc:	6111      	str	r1, [r2, #16]
            if( ( portNVIC_SYSTICK_CTRL_REG & portNVIC_SYSTICK_COUNT_FLAG_BIT ) != 0 )
 80031be:	6912      	ldr	r2, [r2, #16]
 80031c0:	f412 3f80 	tst.w	r2, #65536	; 0x10000
 80031c4:	d01f      	beq.n	8003206 <vPortSuppressTicksAndSleep+0xe6>
                ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL ) - ( ulReloadValue - portNVIC_SYSTICK_CURRENT_VALUE_REG );
 80031c6:	4a19      	ldr	r2, [pc, #100]	; (800322c <vPortSuppressTicksAndSleep+0x10c>)
 80031c8:	6811      	ldr	r1, [r2, #0]
 80031ca:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80031ce:	6992      	ldr	r2, [r2, #24]
 80031d0:	1ad3      	subs	r3, r2, r3
 80031d2:	440b      	add	r3, r1
 80031d4:	3b01      	subs	r3, #1
                if( ( ulCalculatedLoadValue <= ulStoppedTimerCompensation ) || ( ulCalculatedLoadValue > ulTimerCountsForOneTick ) )
 80031d6:	4a16      	ldr	r2, [pc, #88]	; (8003230 <vPortSuppressTicksAndSleep+0x110>)
 80031d8:	6812      	ldr	r2, [r2, #0]
 80031da:	429a      	cmp	r2, r3
 80031dc:	d201      	bcs.n	80031e2 <vPortSuppressTicksAndSleep+0xc2>
 80031de:	4299      	cmp	r1, r3
 80031e0:	d200      	bcs.n	80031e4 <vPortSuppressTicksAndSleep+0xc4>
                    ulCalculatedLoadValue = ( ulTimerCountsForOneTick - 1UL );
 80031e2:	1e4b      	subs	r3, r1, #1
                portNVIC_SYSTICK_LOAD_REG = ulCalculatedLoadValue;
 80031e4:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80031e8:	6153      	str	r3, [r2, #20]
            portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80031ea:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80031ee:	2200      	movs	r2, #0
 80031f0:	619a      	str	r2, [r3, #24]
            portNVIC_SYSTICK_CTRL_REG = portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT;
 80031f2:	2207      	movs	r2, #7
 80031f4:	611a      	str	r2, [r3, #16]
                portNVIC_SYSTICK_LOAD_REG = ulTimerCountsForOneTick - 1UL;
 80031f6:	4a0d      	ldr	r2, [pc, #52]	; (800322c <vPortSuppressTicksAndSleep+0x10c>)
 80031f8:	6812      	ldr	r2, [r2, #0]
 80031fa:	3a01      	subs	r2, #1
 80031fc:	615a      	str	r2, [r3, #20]
            vTaskStepTick( ulCompleteTickPeriods );
 80031fe:	f7ff f861 	bl	80022c4 <vTaskStepTick>
            __asm volatile ( "cpsie i" ::: "memory" );
 8003202:	b662      	cpsie	i
    }
 8003204:	e79b      	b.n	800313e <vPortSuppressTicksAndSleep+0x1e>
                ulSysTickDecrementsLeft = portNVIC_SYSTICK_CURRENT_VALUE_REG;
 8003206:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
 800320a:	698b      	ldr	r3, [r1, #24]
                ulCompletedSysTickDecrements = ( xExpectedIdleTime * ulTimerCountsForOneTick ) - ulSysTickDecrementsLeft;
 800320c:	4a07      	ldr	r2, [pc, #28]	; (800322c <vPortSuppressTicksAndSleep+0x10c>)
 800320e:	6812      	ldr	r2, [r2, #0]
 8003210:	fb02 f404 	mul.w	r4, r2, r4
 8003214:	1ae0      	subs	r0, r4, r3
                ulCompleteTickPeriods = ulCompletedSysTickDecrements / ulTimerCountsForOneTick;
 8003216:	fbb0 f0f2 	udiv	r0, r0, r2
                portNVIC_SYSTICK_LOAD_REG = ( ( ulCompleteTickPeriods + 1UL ) * ulTimerCountsForOneTick ) - ulCompletedSysTickDecrements;
 800321a:	fb00 2202 	mla	r2, r0, r2, r2
 800321e:	1b1c      	subs	r4, r3, r4
 8003220:	4414      	add	r4, r2
 8003222:	614c      	str	r4, [r1, #20]
 8003224:	e7e1      	b.n	80031ea <vPortSuppressTicksAndSleep+0xca>
 8003226:	bf00      	nop
 8003228:	20008984 	andcs	r8, r0, r4, lsl #19
 800322c:	20008980 	andcs	r8, r0, r0, lsl #19
 8003230:	2000897c 	andcs	r8, r0, ip, ror r9

08003234 <vPortSetupTimerInterrupt>:
        ulTimerCountsForOneTick = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ );
 8003234:	4b09      	ldr	r3, [pc, #36]	; (800325c <vPortSetupTimerInterrupt+0x28>)
 8003236:	4a0a      	ldr	r2, [pc, #40]	; (8003260 <vPortSetupTimerInterrupt+0x2c>)
 8003238:	601a      	str	r2, [r3, #0]
        xMaximumPossibleSuppressedTicks = portMAX_24_BIT_NUMBER / ulTimerCountsForOneTick;
 800323a:	4b0a      	ldr	r3, [pc, #40]	; (8003264 <vPortSetupTimerInterrupt+0x30>)
 800323c:	2253      	movs	r2, #83	; 0x53
 800323e:	601a      	str	r2, [r3, #0]
        ulStoppedTimerCompensation = portMISSED_COUNTS_FACTOR / ( configCPU_CLOCK_HZ / configSYSTICK_CLOCK_HZ );
 8003240:	4b09      	ldr	r3, [pc, #36]	; (8003268 <vPortSetupTimerInterrupt+0x34>)
 8003242:	225e      	movs	r2, #94	; 0x5e
 8003244:	601a      	str	r2, [r3, #0]
    portNVIC_SYSTICK_CTRL_REG = 0UL;
 8003246:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800324a:	2200      	movs	r2, #0
 800324c:	611a      	str	r2, [r3, #16]
    portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 800324e:	619a      	str	r2, [r3, #24]
    portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8003250:	4a06      	ldr	r2, [pc, #24]	; (800326c <vPortSetupTimerInterrupt+0x38>)
 8003252:	615a      	str	r2, [r3, #20]
    portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT_CONFIG | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8003254:	2207      	movs	r2, #7
 8003256:	611a      	str	r2, [r3, #16]
}
 8003258:	4770      	bx	lr
 800325a:	bf00      	nop
 800325c:	20008980 	andcs	r8, r0, r0, lsl #19
 8003260:	00030d40 	andeq	r0, r3, r0, asr #26
 8003264:	20008984 	andcs	r8, r0, r4, lsl #19
 8003268:	2000897c 	andcs	r8, r0, ip, ror r9
 800326c:	00030d3f 	andeq	r0, r3, pc, lsr sp

08003270 <xPortStartScheduler>:
{
 8003270:	b538      	push	{r3, r4, r5, lr}
    portNVIC_SHPR3_REG |= portNVIC_PENDSV_PRI;
 8003272:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
 8003276:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800327a:	f443 037f 	orr.w	r3, r3, #16711680	; 0xff0000
 800327e:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
    portNVIC_SHPR3_REG |= portNVIC_SYSTICK_PRI;
 8003282:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8003286:	f043 437f 	orr.w	r3, r3, #4278190080	; 0xff000000
 800328a:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
    portNVIC_SHPR2_REG = 0;
 800328e:	2500      	movs	r5, #0
 8003290:	f8c4 5d1c 	str.w	r5, [r4, #3356]	; 0xd1c
    vPortSetupTimerInterrupt();
 8003294:	f7ff ffce 	bl	8003234 <vPortSetupTimerInterrupt>
    uxCriticalNesting = 0;
 8003298:	4b08      	ldr	r3, [pc, #32]	; (80032bc <xPortStartScheduler+0x4c>)
 800329a:	601d      	str	r5, [r3, #0]
    vPortEnableVFP();
 800329c:	f7ff fea4 	bl	8002fe8 <vPortEnableVFP>
    *( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80032a0:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 80032a4:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80032a8:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
    prvPortStartFirstTask();
 80032ac:	f7ff fe88 	bl	8002fc0 <prvPortStartFirstTask>
    vTaskSwitchContext();
 80032b0:	f7ff f9b4 	bl	800261c <vTaskSwitchContext>
    prvTaskExitError();
 80032b4:	f7ff fe74 	bl	8002fa0 <prvTaskExitError>
}
 80032b8:	4628      	mov	r0, r5
 80032ba:	bd38      	pop	{r3, r4, r5, pc}
 80032bc:	20000010 	andcs	r0, r0, r0, lsl r0

080032c0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80032c0:	b510      	push	{r4, lr}
 80032c2:	4603      	mov	r3, r0
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80032c4:	4a0c      	ldr	r2, [pc, #48]	; (80032f8 <_sbrk+0x38>)
 80032c6:	490d      	ldr	r1, [pc, #52]	; (80032fc <_sbrk+0x3c>)
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80032c8:	480d      	ldr	r0, [pc, #52]	; (8003300 <_sbrk+0x40>)
 80032ca:	6800      	ldr	r0, [r0, #0]
 80032cc:	b140      	cbz	r0, 80032e0 <_sbrk+0x20>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80032ce:	480c      	ldr	r0, [pc, #48]	; (8003300 <_sbrk+0x40>)
 80032d0:	6800      	ldr	r0, [r0, #0]
 80032d2:	4403      	add	r3, r0
 80032d4:	1a52      	subs	r2, r2, r1
 80032d6:	4293      	cmp	r3, r2
 80032d8:	d806      	bhi.n	80032e8 <_sbrk+0x28>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
 80032da:	4a09      	ldr	r2, [pc, #36]	; (8003300 <_sbrk+0x40>)
 80032dc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
}
 80032de:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
 80032e0:	4807      	ldr	r0, [pc, #28]	; (8003300 <_sbrk+0x40>)
 80032e2:	4c08      	ldr	r4, [pc, #32]	; (8003304 <_sbrk+0x44>)
 80032e4:	6004      	str	r4, [r0, #0]
 80032e6:	e7f2      	b.n	80032ce <_sbrk+0xe>
    errno = ENOMEM;
 80032e8:	f000 f862 	bl	80033b0 <__errno>
 80032ec:	230c      	movs	r3, #12
 80032ee:	6003      	str	r3, [r0, #0]
    return (void *)-1;
 80032f0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80032f4:	e7f3      	b.n	80032de <_sbrk+0x1e>
 80032f6:	bf00      	nop
 80032f8:	200099a0 	andcs	r9, r0, r0, lsr #19
 80032fc:	00000800 	andeq	r0, r0, r0, lsl #16
 8003300:	20008988 	andcs	r8, r0, r8, lsl #19
 8003304:	200089a0 	andcs	r8, r0, r0, lsr #19

08003308 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8003308:	b570      	push	{r4, r5, r6, lr}
 800330a:	460c      	mov	r4, r1
 800330c:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800330e:	2500      	movs	r5, #0
 8003310:	e006      	b.n	8003320 <_read+0x18>
  {
    *ptr++ = __io_getchar();
 8003312:	f3af 8000 	nop.w
 8003316:	4621      	mov	r1, r4
 8003318:	f801 0b01 	strb.w	r0, [r1], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800331c:	3501      	adds	r5, #1
    *ptr++ = __io_getchar();
 800331e:	460c      	mov	r4, r1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003320:	42b5      	cmp	r5, r6
 8003322:	dbf6      	blt.n	8003312 <_read+0xa>
  }

  return len;
}
 8003324:	4630      	mov	r0, r6
 8003326:	bd70      	pop	{r4, r5, r6, pc}

08003328 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8003328:	b570      	push	{r4, r5, r6, lr}
 800332a:	460c      	mov	r4, r1
 800332c:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800332e:	2500      	movs	r5, #0
 8003330:	e004      	b.n	800333c <_write+0x14>
  {
    __io_putchar(*ptr++);
 8003332:	f814 0b01 	ldrb.w	r0, [r4], #1
 8003336:	f7fd f973 	bl	8000620 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800333a:	3501      	adds	r5, #1
 800333c:	42b5      	cmp	r5, r6
 800333e:	dbf8      	blt.n	8003332 <_write+0xa>
  }
  return len;
}
 8003340:	4630      	mov	r0, r6
 8003342:	bd70      	pop	{r4, r5, r6, pc}

08003344 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
 8003344:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003348:	4770      	bx	lr

0800334a <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
 800334a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800334e:	604b      	str	r3, [r1, #4]
  return 0;
}
 8003350:	2000      	movs	r0, #0
 8003352:	4770      	bx	lr

08003354 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
 8003354:	2001      	movs	r0, #1
 8003356:	4770      	bx	lr

08003358 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
 8003358:	2000      	movs	r0, #0
 800335a:	4770      	bx	lr

0800335c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 800335c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8003394 <LoopFillZerobss+0xe>
  
/* Call the clock system initialization function.*/
  bl  SystemInit  
 8003360:	f7fe f994 	bl	800168c <SystemInit>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 8003364:	480c      	ldr	r0, [pc, #48]	; (8003398 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8003366:	490d      	ldr	r1, [pc, #52]	; (800339c <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8003368:	4a0d      	ldr	r2, [pc, #52]	; (80033a0 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800336a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800336c:	e002      	b.n	8003374 <LoopCopyDataInit>

0800336e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800336e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003370:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8003372:	3304      	adds	r3, #4

08003374 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003374:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8003376:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003378:	d3f9      	bcc.n	800336e <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800337a:	4a0a      	ldr	r2, [pc, #40]	; (80033a4 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 800337c:	4c0a      	ldr	r4, [pc, #40]	; (80033a8 <LoopFillZerobss+0x22>)
  movs r3, #0
 800337e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003380:	e001      	b.n	8003386 <LoopFillZerobss>

08003382 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8003382:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003384:	3204      	adds	r2, #4

08003386 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8003386:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003388:	d3fb      	bcc.n	8003382 <FillZerobss>
 
/* Call static constructors */
    bl __libc_init_array
 800338a:	f000 f817 	bl	80033bc <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800338e:	f7fd f957 	bl	8000640 <main>
  bx  lr    
 8003392:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8003394:	200099a0 	andcs	r9, r0, r0, lsr #19
  ldr r0, =_sdata
 8003398:	20000000 	andcs	r0, r0, r0
  ldr r1, =_edata
 800339c:	20000078 	andcs	r0, r0, r8, ror r0
  ldr r2, =_sidata
 80033a0:	080049a0 	stmdaeq	r0, {r5, r7, r8, fp, lr}
  ldr r2, =_sbss
 80033a4:	20000078 	andcs	r0, r0, r8, ror r0
  ldr r4, =_ebss
 80033a8:	2000899c 	mulcs	r0, ip, r9

080033ac <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80033ac:	e7fe      	b.n	80033ac <ADC_IRQHandler>
	...

080033b0 <__errno>:
 80033b0:	4b01      	ldr	r3, [pc, #4]	; (80033b8 <__errno+0x8>)
 80033b2:	6818      	ldr	r0, [r3, #0]
 80033b4:	4770      	bx	lr
 80033b6:	bf00      	nop
 80033b8:	20000014 	andcs	r0, r0, r4, lsl r0

080033bc <__libc_init_array>:
 80033bc:	b570      	push	{r4, r5, r6, lr}
 80033be:	4d0d      	ldr	r5, [pc, #52]	; (80033f4 <__libc_init_array+0x38>)
 80033c0:	4c0d      	ldr	r4, [pc, #52]	; (80033f8 <__libc_init_array+0x3c>)
 80033c2:	1b64      	subs	r4, r4, r5
 80033c4:	10a4      	asrs	r4, r4, #2
 80033c6:	2600      	movs	r6, #0
 80033c8:	42a6      	cmp	r6, r4
 80033ca:	d109      	bne.n	80033e0 <__libc_init_array+0x24>
 80033cc:	4d0b      	ldr	r5, [pc, #44]	; (80033fc <__libc_init_array+0x40>)
 80033ce:	4c0c      	ldr	r4, [pc, #48]	; (8003400 <__libc_init_array+0x44>)
 80033d0:	f001 f832 	bl	8004438 <_init>
 80033d4:	1b64      	subs	r4, r4, r5
 80033d6:	10a4      	asrs	r4, r4, #2
 80033d8:	2600      	movs	r6, #0
 80033da:	42a6      	cmp	r6, r4
 80033dc:	d105      	bne.n	80033ea <__libc_init_array+0x2e>
 80033de:	bd70      	pop	{r4, r5, r6, pc}
 80033e0:	f855 3b04 	ldr.w	r3, [r5], #4
 80033e4:	4798      	blx	r3
 80033e6:	3601      	adds	r6, #1
 80033e8:	e7ee      	b.n	80033c8 <__libc_init_array+0xc>
 80033ea:	f855 3b04 	ldr.w	r3, [r5], #4
 80033ee:	4798      	blx	r3
 80033f0:	3601      	adds	r6, #1
 80033f2:	e7f2      	b.n	80033da <__libc_init_array+0x1e>
 80033f4:	08004998 	stmdaeq	r0, {r3, r4, r7, r8, fp, lr}
 80033f8:	08004998 	stmdaeq	r0, {r3, r4, r7, r8, fp, lr}
 80033fc:	08004998 	stmdaeq	r0, {r3, r4, r7, r8, fp, lr}
 8003400:	0800499c 	stmdaeq	r0, {r2, r3, r4, r7, r8, fp, lr}

08003404 <memcpy>:
 8003404:	440a      	add	r2, r1
 8003406:	4291      	cmp	r1, r2
 8003408:	f100 33ff 	add.w	r3, r0, #4294967295	; 0xffffffff
 800340c:	d100      	bne.n	8003410 <memcpy+0xc>
 800340e:	4770      	bx	lr
 8003410:	b510      	push	{r4, lr}
 8003412:	f811 4b01 	ldrb.w	r4, [r1], #1
 8003416:	f803 4f01 	strb.w	r4, [r3, #1]!
 800341a:	4291      	cmp	r1, r2
 800341c:	d1f9      	bne.n	8003412 <memcpy+0xe>
 800341e:	bd10      	pop	{r4, pc}

08003420 <memset>:
 8003420:	4402      	add	r2, r0
 8003422:	4603      	mov	r3, r0
 8003424:	4293      	cmp	r3, r2
 8003426:	d100      	bne.n	800342a <memset+0xa>
 8003428:	4770      	bx	lr
 800342a:	f803 1b01 	strb.w	r1, [r3], #1
 800342e:	e7f9      	b.n	8003424 <memset+0x4>

08003430 <iprintf>:
 8003430:	b40f      	push	{r0, r1, r2, r3}
 8003432:	4b0a      	ldr	r3, [pc, #40]	; (800345c <iprintf+0x2c>)
 8003434:	b513      	push	{r0, r1, r4, lr}
 8003436:	681c      	ldr	r4, [r3, #0]
 8003438:	b124      	cbz	r4, 8003444 <iprintf+0x14>
 800343a:	69a3      	ldr	r3, [r4, #24]
 800343c:	b913      	cbnz	r3, 8003444 <iprintf+0x14>
 800343e:	4620      	mov	r0, r4
 8003440:	f000 fa5e 	bl	8003900 <__sinit>
 8003444:	ab05      	add	r3, sp, #20
 8003446:	9a04      	ldr	r2, [sp, #16]
 8003448:	68a1      	ldr	r1, [r4, #8]
 800344a:	9301      	str	r3, [sp, #4]
 800344c:	4620      	mov	r0, r4
 800344e:	f000 fc67 	bl	8003d20 <_vfiprintf_r>
 8003452:	b002      	add	sp, #8
 8003454:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003458:	b004      	add	sp, #16
 800345a:	4770      	bx	lr
 800345c:	20000014 	andcs	r0, r0, r4, lsl r0

08003460 <_puts_r>:
 8003460:	b570      	push	{r4, r5, r6, lr}
 8003462:	460e      	mov	r6, r1
 8003464:	4605      	mov	r5, r0
 8003466:	b118      	cbz	r0, 8003470 <_puts_r+0x10>
 8003468:	6983      	ldr	r3, [r0, #24]
 800346a:	b90b      	cbnz	r3, 8003470 <_puts_r+0x10>
 800346c:	f000 fa48 	bl	8003900 <__sinit>
 8003470:	69ab      	ldr	r3, [r5, #24]
 8003472:	68ac      	ldr	r4, [r5, #8]
 8003474:	b913      	cbnz	r3, 800347c <_puts_r+0x1c>
 8003476:	4628      	mov	r0, r5
 8003478:	f000 fa42 	bl	8003900 <__sinit>
 800347c:	4b2c      	ldr	r3, [pc, #176]	; (8003530 <_puts_r+0xd0>)
 800347e:	429c      	cmp	r4, r3
 8003480:	d120      	bne.n	80034c4 <_puts_r+0x64>
 8003482:	686c      	ldr	r4, [r5, #4]
 8003484:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8003486:	07db      	lsls	r3, r3, #31
 8003488:	d405      	bmi.n	8003496 <_puts_r+0x36>
 800348a:	89a3      	ldrh	r3, [r4, #12]
 800348c:	0598      	lsls	r0, r3, #22
 800348e:	d402      	bmi.n	8003496 <_puts_r+0x36>
 8003490:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8003492:	f000 fad3 	bl	8003a3c <__retarget_lock_acquire_recursive>
 8003496:	89a3      	ldrh	r3, [r4, #12]
 8003498:	0719      	lsls	r1, r3, #28
 800349a:	d51d      	bpl.n	80034d8 <_puts_r+0x78>
 800349c:	6923      	ldr	r3, [r4, #16]
 800349e:	b1db      	cbz	r3, 80034d8 <_puts_r+0x78>
 80034a0:	3e01      	subs	r6, #1
 80034a2:	68a3      	ldr	r3, [r4, #8]
 80034a4:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80034a8:	3b01      	subs	r3, #1
 80034aa:	60a3      	str	r3, [r4, #8]
 80034ac:	bb39      	cbnz	r1, 80034fe <_puts_r+0x9e>
 80034ae:	2b00      	cmp	r3, #0
 80034b0:	da38      	bge.n	8003524 <_puts_r+0xc4>
 80034b2:	4622      	mov	r2, r4
 80034b4:	210a      	movs	r1, #10
 80034b6:	4628      	mov	r0, r5
 80034b8:	f000 f848 	bl	800354c <__swbuf_r>
 80034bc:	3001      	adds	r0, #1
 80034be:	d011      	beq.n	80034e4 <_puts_r+0x84>
 80034c0:	250a      	movs	r5, #10
 80034c2:	e011      	b.n	80034e8 <_puts_r+0x88>
 80034c4:	4b1b      	ldr	r3, [pc, #108]	; (8003534 <_puts_r+0xd4>)
 80034c6:	429c      	cmp	r4, r3
 80034c8:	d101      	bne.n	80034ce <_puts_r+0x6e>
 80034ca:	68ac      	ldr	r4, [r5, #8]
 80034cc:	e7da      	b.n	8003484 <_puts_r+0x24>
 80034ce:	4b1a      	ldr	r3, [pc, #104]	; (8003538 <_puts_r+0xd8>)
 80034d0:	429c      	cmp	r4, r3
 80034d2:	bf08      	it	eq
 80034d4:	68ec      	ldreq	r4, [r5, #12]
 80034d6:	e7d5      	b.n	8003484 <_puts_r+0x24>
 80034d8:	4621      	mov	r1, r4
 80034da:	4628      	mov	r0, r5
 80034dc:	f000 f888 	bl	80035f0 <__swsetup_r>
 80034e0:	2800      	cmp	r0, #0
 80034e2:	d0dd      	beq.n	80034a0 <_puts_r+0x40>
 80034e4:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 80034e8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80034ea:	07da      	lsls	r2, r3, #31
 80034ec:	d405      	bmi.n	80034fa <_puts_r+0x9a>
 80034ee:	89a3      	ldrh	r3, [r4, #12]
 80034f0:	059b      	lsls	r3, r3, #22
 80034f2:	d402      	bmi.n	80034fa <_puts_r+0x9a>
 80034f4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80034f6:	f000 faa2 	bl	8003a3e <__retarget_lock_release_recursive>
 80034fa:	4628      	mov	r0, r5
 80034fc:	bd70      	pop	{r4, r5, r6, pc}
 80034fe:	2b00      	cmp	r3, #0
 8003500:	da04      	bge.n	800350c <_puts_r+0xac>
 8003502:	69a2      	ldr	r2, [r4, #24]
 8003504:	429a      	cmp	r2, r3
 8003506:	dc06      	bgt.n	8003516 <_puts_r+0xb6>
 8003508:	290a      	cmp	r1, #10
 800350a:	d004      	beq.n	8003516 <_puts_r+0xb6>
 800350c:	6823      	ldr	r3, [r4, #0]
 800350e:	1c5a      	adds	r2, r3, #1
 8003510:	6022      	str	r2, [r4, #0]
 8003512:	7019      	strb	r1, [r3, #0]
 8003514:	e7c5      	b.n	80034a2 <_puts_r+0x42>
 8003516:	4622      	mov	r2, r4
 8003518:	4628      	mov	r0, r5
 800351a:	f000 f817 	bl	800354c <__swbuf_r>
 800351e:	3001      	adds	r0, #1
 8003520:	d1bf      	bne.n	80034a2 <_puts_r+0x42>
 8003522:	e7df      	b.n	80034e4 <_puts_r+0x84>
 8003524:	6823      	ldr	r3, [r4, #0]
 8003526:	250a      	movs	r5, #10
 8003528:	1c5a      	adds	r2, r3, #1
 800352a:	6022      	str	r2, [r4, #0]
 800352c:	701d      	strb	r5, [r3, #0]
 800352e:	e7db      	b.n	80034e8 <_puts_r+0x88>
 8003530:	0800491c 	stmdaeq	r0, {r2, r3, r4, r8, fp, lr}
 8003534:	0800493c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, lr}
 8003538:	080048fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, fp, lr}

0800353c <puts>:
 800353c:	4b02      	ldr	r3, [pc, #8]	; (8003548 <puts+0xc>)
 800353e:	4601      	mov	r1, r0
 8003540:	6818      	ldr	r0, [r3, #0]
 8003542:	f7ff bf8d 	b.w	8003460 <_puts_r>
 8003546:	bf00      	nop
 8003548:	20000014 	andcs	r0, r0, r4, lsl r0

0800354c <__swbuf_r>:
 800354c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800354e:	460e      	mov	r6, r1
 8003550:	4614      	mov	r4, r2
 8003552:	4605      	mov	r5, r0
 8003554:	b118      	cbz	r0, 800355e <__swbuf_r+0x12>
 8003556:	6983      	ldr	r3, [r0, #24]
 8003558:	b90b      	cbnz	r3, 800355e <__swbuf_r+0x12>
 800355a:	f000 f9d1 	bl	8003900 <__sinit>
 800355e:	4b21      	ldr	r3, [pc, #132]	; (80035e4 <__swbuf_r+0x98>)
 8003560:	429c      	cmp	r4, r3
 8003562:	d12b      	bne.n	80035bc <__swbuf_r+0x70>
 8003564:	686c      	ldr	r4, [r5, #4]
 8003566:	69a3      	ldr	r3, [r4, #24]
 8003568:	60a3      	str	r3, [r4, #8]
 800356a:	89a3      	ldrh	r3, [r4, #12]
 800356c:	071a      	lsls	r2, r3, #28
 800356e:	d52f      	bpl.n	80035d0 <__swbuf_r+0x84>
 8003570:	6923      	ldr	r3, [r4, #16]
 8003572:	b36b      	cbz	r3, 80035d0 <__swbuf_r+0x84>
 8003574:	6923      	ldr	r3, [r4, #16]
 8003576:	6820      	ldr	r0, [r4, #0]
 8003578:	1ac0      	subs	r0, r0, r3
 800357a:	6963      	ldr	r3, [r4, #20]
 800357c:	b2f6      	uxtb	r6, r6
 800357e:	4283      	cmp	r3, r0
 8003580:	4637      	mov	r7, r6
 8003582:	dc04      	bgt.n	800358e <__swbuf_r+0x42>
 8003584:	4621      	mov	r1, r4
 8003586:	4628      	mov	r0, r5
 8003588:	f000 f926 	bl	80037d8 <_fflush_r>
 800358c:	bb30      	cbnz	r0, 80035dc <__swbuf_r+0x90>
 800358e:	68a3      	ldr	r3, [r4, #8]
 8003590:	3b01      	subs	r3, #1
 8003592:	60a3      	str	r3, [r4, #8]
 8003594:	6823      	ldr	r3, [r4, #0]
 8003596:	1c5a      	adds	r2, r3, #1
 8003598:	6022      	str	r2, [r4, #0]
 800359a:	701e      	strb	r6, [r3, #0]
 800359c:	6963      	ldr	r3, [r4, #20]
 800359e:	3001      	adds	r0, #1
 80035a0:	4283      	cmp	r3, r0
 80035a2:	d004      	beq.n	80035ae <__swbuf_r+0x62>
 80035a4:	89a3      	ldrh	r3, [r4, #12]
 80035a6:	07db      	lsls	r3, r3, #31
 80035a8:	d506      	bpl.n	80035b8 <__swbuf_r+0x6c>
 80035aa:	2e0a      	cmp	r6, #10
 80035ac:	d104      	bne.n	80035b8 <__swbuf_r+0x6c>
 80035ae:	4621      	mov	r1, r4
 80035b0:	4628      	mov	r0, r5
 80035b2:	f000 f911 	bl	80037d8 <_fflush_r>
 80035b6:	b988      	cbnz	r0, 80035dc <__swbuf_r+0x90>
 80035b8:	4638      	mov	r0, r7
 80035ba:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80035bc:	4b0a      	ldr	r3, [pc, #40]	; (80035e8 <__swbuf_r+0x9c>)
 80035be:	429c      	cmp	r4, r3
 80035c0:	d101      	bne.n	80035c6 <__swbuf_r+0x7a>
 80035c2:	68ac      	ldr	r4, [r5, #8]
 80035c4:	e7cf      	b.n	8003566 <__swbuf_r+0x1a>
 80035c6:	4b09      	ldr	r3, [pc, #36]	; (80035ec <__swbuf_r+0xa0>)
 80035c8:	429c      	cmp	r4, r3
 80035ca:	bf08      	it	eq
 80035cc:	68ec      	ldreq	r4, [r5, #12]
 80035ce:	e7ca      	b.n	8003566 <__swbuf_r+0x1a>
 80035d0:	4621      	mov	r1, r4
 80035d2:	4628      	mov	r0, r5
 80035d4:	f000 f80c 	bl	80035f0 <__swsetup_r>
 80035d8:	2800      	cmp	r0, #0
 80035da:	d0cb      	beq.n	8003574 <__swbuf_r+0x28>
 80035dc:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80035e0:	e7ea      	b.n	80035b8 <__swbuf_r+0x6c>
 80035e2:	bf00      	nop
 80035e4:	0800491c 	stmdaeq	r0, {r2, r3, r4, r8, fp, lr}
 80035e8:	0800493c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, lr}
 80035ec:	080048fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, fp, lr}

080035f0 <__swsetup_r>:
 80035f0:	4b32      	ldr	r3, [pc, #200]	; (80036bc <__swsetup_r+0xcc>)
 80035f2:	b570      	push	{r4, r5, r6, lr}
 80035f4:	681d      	ldr	r5, [r3, #0]
 80035f6:	4606      	mov	r6, r0
 80035f8:	460c      	mov	r4, r1
 80035fa:	b125      	cbz	r5, 8003606 <__swsetup_r+0x16>
 80035fc:	69ab      	ldr	r3, [r5, #24]
 80035fe:	b913      	cbnz	r3, 8003606 <__swsetup_r+0x16>
 8003600:	4628      	mov	r0, r5
 8003602:	f000 f97d 	bl	8003900 <__sinit>
 8003606:	4b2e      	ldr	r3, [pc, #184]	; (80036c0 <__swsetup_r+0xd0>)
 8003608:	429c      	cmp	r4, r3
 800360a:	d10f      	bne.n	800362c <__swsetup_r+0x3c>
 800360c:	686c      	ldr	r4, [r5, #4]
 800360e:	89a3      	ldrh	r3, [r4, #12]
 8003610:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003614:	0719      	lsls	r1, r3, #28
 8003616:	d42c      	bmi.n	8003672 <__swsetup_r+0x82>
 8003618:	06dd      	lsls	r5, r3, #27
 800361a:	d411      	bmi.n	8003640 <__swsetup_r+0x50>
 800361c:	2309      	movs	r3, #9
 800361e:	6033      	str	r3, [r6, #0]
 8003620:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8003624:	81a3      	strh	r3, [r4, #12]
 8003626:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800362a:	e03e      	b.n	80036aa <__swsetup_r+0xba>
 800362c:	4b25      	ldr	r3, [pc, #148]	; (80036c4 <__swsetup_r+0xd4>)
 800362e:	429c      	cmp	r4, r3
 8003630:	d101      	bne.n	8003636 <__swsetup_r+0x46>
 8003632:	68ac      	ldr	r4, [r5, #8]
 8003634:	e7eb      	b.n	800360e <__swsetup_r+0x1e>
 8003636:	4b24      	ldr	r3, [pc, #144]	; (80036c8 <__swsetup_r+0xd8>)
 8003638:	429c      	cmp	r4, r3
 800363a:	bf08      	it	eq
 800363c:	68ec      	ldreq	r4, [r5, #12]
 800363e:	e7e6      	b.n	800360e <__swsetup_r+0x1e>
 8003640:	0758      	lsls	r0, r3, #29
 8003642:	d512      	bpl.n	800366a <__swsetup_r+0x7a>
 8003644:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8003646:	b141      	cbz	r1, 800365a <__swsetup_r+0x6a>
 8003648:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800364c:	4299      	cmp	r1, r3
 800364e:	d002      	beq.n	8003656 <__swsetup_r+0x66>
 8003650:	4630      	mov	r0, r6
 8003652:	f000 fa5b 	bl	8003b0c <_free_r>
 8003656:	2300      	movs	r3, #0
 8003658:	6363      	str	r3, [r4, #52]	; 0x34
 800365a:	89a3      	ldrh	r3, [r4, #12]
 800365c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8003660:	81a3      	strh	r3, [r4, #12]
 8003662:	2300      	movs	r3, #0
 8003664:	6063      	str	r3, [r4, #4]
 8003666:	6923      	ldr	r3, [r4, #16]
 8003668:	6023      	str	r3, [r4, #0]
 800366a:	89a3      	ldrh	r3, [r4, #12]
 800366c:	f043 0308 	orr.w	r3, r3, #8
 8003670:	81a3      	strh	r3, [r4, #12]
 8003672:	6923      	ldr	r3, [r4, #16]
 8003674:	b94b      	cbnz	r3, 800368a <__swsetup_r+0x9a>
 8003676:	89a3      	ldrh	r3, [r4, #12]
 8003678:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800367c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003680:	d003      	beq.n	800368a <__swsetup_r+0x9a>
 8003682:	4621      	mov	r1, r4
 8003684:	4630      	mov	r0, r6
 8003686:	f000 fa01 	bl	8003a8c <__smakebuf_r>
 800368a:	89a0      	ldrh	r0, [r4, #12]
 800368c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8003690:	f010 0301 	ands.w	r3, r0, #1
 8003694:	d00a      	beq.n	80036ac <__swsetup_r+0xbc>
 8003696:	2300      	movs	r3, #0
 8003698:	60a3      	str	r3, [r4, #8]
 800369a:	6963      	ldr	r3, [r4, #20]
 800369c:	425b      	negs	r3, r3
 800369e:	61a3      	str	r3, [r4, #24]
 80036a0:	6923      	ldr	r3, [r4, #16]
 80036a2:	b943      	cbnz	r3, 80036b6 <__swsetup_r+0xc6>
 80036a4:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80036a8:	d1ba      	bne.n	8003620 <__swsetup_r+0x30>
 80036aa:	bd70      	pop	{r4, r5, r6, pc}
 80036ac:	0781      	lsls	r1, r0, #30
 80036ae:	bf58      	it	pl
 80036b0:	6963      	ldrpl	r3, [r4, #20]
 80036b2:	60a3      	str	r3, [r4, #8]
 80036b4:	e7f4      	b.n	80036a0 <__swsetup_r+0xb0>
 80036b6:	2000      	movs	r0, #0
 80036b8:	e7f7      	b.n	80036aa <__swsetup_r+0xba>
 80036ba:	bf00      	nop
 80036bc:	20000014 	andcs	r0, r0, r4, lsl r0
 80036c0:	0800491c 	stmdaeq	r0, {r2, r3, r4, r8, fp, lr}
 80036c4:	0800493c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, lr}
 80036c8:	080048fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, fp, lr}

080036cc <__sflush_r>:
 80036cc:	898a      	ldrh	r2, [r1, #12]
 80036ce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80036d2:	4605      	mov	r5, r0
 80036d4:	0710      	lsls	r0, r2, #28
 80036d6:	460c      	mov	r4, r1
 80036d8:	d458      	bmi.n	800378c <__sflush_r+0xc0>
 80036da:	684b      	ldr	r3, [r1, #4]
 80036dc:	2b00      	cmp	r3, #0
 80036de:	dc05      	bgt.n	80036ec <__sflush_r+0x20>
 80036e0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80036e2:	2b00      	cmp	r3, #0
 80036e4:	dc02      	bgt.n	80036ec <__sflush_r+0x20>
 80036e6:	2000      	movs	r0, #0
 80036e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80036ec:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80036ee:	2e00      	cmp	r6, #0
 80036f0:	d0f9      	beq.n	80036e6 <__sflush_r+0x1a>
 80036f2:	2300      	movs	r3, #0
 80036f4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80036f8:	682f      	ldr	r7, [r5, #0]
 80036fa:	602b      	str	r3, [r5, #0]
 80036fc:	d032      	beq.n	8003764 <__sflush_r+0x98>
 80036fe:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8003700:	89a3      	ldrh	r3, [r4, #12]
 8003702:	075a      	lsls	r2, r3, #29
 8003704:	d505      	bpl.n	8003712 <__sflush_r+0x46>
 8003706:	6863      	ldr	r3, [r4, #4]
 8003708:	1ac0      	subs	r0, r0, r3
 800370a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800370c:	b10b      	cbz	r3, 8003712 <__sflush_r+0x46>
 800370e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8003710:	1ac0      	subs	r0, r0, r3
 8003712:	2300      	movs	r3, #0
 8003714:	4602      	mov	r2, r0
 8003716:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8003718:	6a21      	ldr	r1, [r4, #32]
 800371a:	4628      	mov	r0, r5
 800371c:	47b0      	blx	r6
 800371e:	1c43      	adds	r3, r0, #1
 8003720:	89a3      	ldrh	r3, [r4, #12]
 8003722:	d106      	bne.n	8003732 <__sflush_r+0x66>
 8003724:	6829      	ldr	r1, [r5, #0]
 8003726:	291d      	cmp	r1, #29
 8003728:	d82c      	bhi.n	8003784 <__sflush_r+0xb8>
 800372a:	4a2a      	ldr	r2, [pc, #168]	; (80037d4 <__sflush_r+0x108>)
 800372c:	40ca      	lsrs	r2, r1
 800372e:	07d6      	lsls	r6, r2, #31
 8003730:	d528      	bpl.n	8003784 <__sflush_r+0xb8>
 8003732:	2200      	movs	r2, #0
 8003734:	6062      	str	r2, [r4, #4]
 8003736:	04d9      	lsls	r1, r3, #19
 8003738:	6922      	ldr	r2, [r4, #16]
 800373a:	6022      	str	r2, [r4, #0]
 800373c:	d504      	bpl.n	8003748 <__sflush_r+0x7c>
 800373e:	1c42      	adds	r2, r0, #1
 8003740:	d101      	bne.n	8003746 <__sflush_r+0x7a>
 8003742:	682b      	ldr	r3, [r5, #0]
 8003744:	b903      	cbnz	r3, 8003748 <__sflush_r+0x7c>
 8003746:	6560      	str	r0, [r4, #84]	; 0x54
 8003748:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800374a:	602f      	str	r7, [r5, #0]
 800374c:	2900      	cmp	r1, #0
 800374e:	d0ca      	beq.n	80036e6 <__sflush_r+0x1a>
 8003750:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8003754:	4299      	cmp	r1, r3
 8003756:	d002      	beq.n	800375e <__sflush_r+0x92>
 8003758:	4628      	mov	r0, r5
 800375a:	f000 f9d7 	bl	8003b0c <_free_r>
 800375e:	2000      	movs	r0, #0
 8003760:	6360      	str	r0, [r4, #52]	; 0x34
 8003762:	e7c1      	b.n	80036e8 <__sflush_r+0x1c>
 8003764:	6a21      	ldr	r1, [r4, #32]
 8003766:	2301      	movs	r3, #1
 8003768:	4628      	mov	r0, r5
 800376a:	47b0      	blx	r6
 800376c:	1c41      	adds	r1, r0, #1
 800376e:	d1c7      	bne.n	8003700 <__sflush_r+0x34>
 8003770:	682b      	ldr	r3, [r5, #0]
 8003772:	2b00      	cmp	r3, #0
 8003774:	d0c4      	beq.n	8003700 <__sflush_r+0x34>
 8003776:	2b1d      	cmp	r3, #29
 8003778:	d001      	beq.n	800377e <__sflush_r+0xb2>
 800377a:	2b16      	cmp	r3, #22
 800377c:	d101      	bne.n	8003782 <__sflush_r+0xb6>
 800377e:	602f      	str	r7, [r5, #0]
 8003780:	e7b1      	b.n	80036e6 <__sflush_r+0x1a>
 8003782:	89a3      	ldrh	r3, [r4, #12]
 8003784:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003788:	81a3      	strh	r3, [r4, #12]
 800378a:	e7ad      	b.n	80036e8 <__sflush_r+0x1c>
 800378c:	690f      	ldr	r7, [r1, #16]
 800378e:	2f00      	cmp	r7, #0
 8003790:	d0a9      	beq.n	80036e6 <__sflush_r+0x1a>
 8003792:	0793      	lsls	r3, r2, #30
 8003794:	680e      	ldr	r6, [r1, #0]
 8003796:	bf08      	it	eq
 8003798:	694b      	ldreq	r3, [r1, #20]
 800379a:	600f      	str	r7, [r1, #0]
 800379c:	bf18      	it	ne
 800379e:	2300      	movne	r3, #0
 80037a0:	eba6 0807 	sub.w	r8, r6, r7
 80037a4:	608b      	str	r3, [r1, #8]
 80037a6:	f1b8 0f00 	cmp.w	r8, #0
 80037aa:	dd9c      	ble.n	80036e6 <__sflush_r+0x1a>
 80037ac:	6a21      	ldr	r1, [r4, #32]
 80037ae:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80037b0:	4643      	mov	r3, r8
 80037b2:	463a      	mov	r2, r7
 80037b4:	4628      	mov	r0, r5
 80037b6:	47b0      	blx	r6
 80037b8:	2800      	cmp	r0, #0
 80037ba:	dc06      	bgt.n	80037ca <__sflush_r+0xfe>
 80037bc:	89a3      	ldrh	r3, [r4, #12]
 80037be:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80037c2:	81a3      	strh	r3, [r4, #12]
 80037c4:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80037c8:	e78e      	b.n	80036e8 <__sflush_r+0x1c>
 80037ca:	4407      	add	r7, r0
 80037cc:	eba8 0800 	sub.w	r8, r8, r0
 80037d0:	e7e9      	b.n	80037a6 <__sflush_r+0xda>
 80037d2:	bf00      	nop
 80037d4:	20400001 	subcs	r0, r0, r1

080037d8 <_fflush_r>:
 80037d8:	b538      	push	{r3, r4, r5, lr}
 80037da:	690b      	ldr	r3, [r1, #16]
 80037dc:	4605      	mov	r5, r0
 80037de:	460c      	mov	r4, r1
 80037e0:	b913      	cbnz	r3, 80037e8 <_fflush_r+0x10>
 80037e2:	2500      	movs	r5, #0
 80037e4:	4628      	mov	r0, r5
 80037e6:	bd38      	pop	{r3, r4, r5, pc}
 80037e8:	b118      	cbz	r0, 80037f2 <_fflush_r+0x1a>
 80037ea:	6983      	ldr	r3, [r0, #24]
 80037ec:	b90b      	cbnz	r3, 80037f2 <_fflush_r+0x1a>
 80037ee:	f000 f887 	bl	8003900 <__sinit>
 80037f2:	4b14      	ldr	r3, [pc, #80]	; (8003844 <_fflush_r+0x6c>)
 80037f4:	429c      	cmp	r4, r3
 80037f6:	d11b      	bne.n	8003830 <_fflush_r+0x58>
 80037f8:	686c      	ldr	r4, [r5, #4]
 80037fa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80037fe:	2b00      	cmp	r3, #0
 8003800:	d0ef      	beq.n	80037e2 <_fflush_r+0xa>
 8003802:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8003804:	07d0      	lsls	r0, r2, #31
 8003806:	d404      	bmi.n	8003812 <_fflush_r+0x3a>
 8003808:	0599      	lsls	r1, r3, #22
 800380a:	d402      	bmi.n	8003812 <_fflush_r+0x3a>
 800380c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800380e:	f000 f915 	bl	8003a3c <__retarget_lock_acquire_recursive>
 8003812:	4628      	mov	r0, r5
 8003814:	4621      	mov	r1, r4
 8003816:	f7ff ff59 	bl	80036cc <__sflush_r>
 800381a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800381c:	07da      	lsls	r2, r3, #31
 800381e:	4605      	mov	r5, r0
 8003820:	d4e0      	bmi.n	80037e4 <_fflush_r+0xc>
 8003822:	89a3      	ldrh	r3, [r4, #12]
 8003824:	059b      	lsls	r3, r3, #22
 8003826:	d4dd      	bmi.n	80037e4 <_fflush_r+0xc>
 8003828:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800382a:	f000 f908 	bl	8003a3e <__retarget_lock_release_recursive>
 800382e:	e7d9      	b.n	80037e4 <_fflush_r+0xc>
 8003830:	4b05      	ldr	r3, [pc, #20]	; (8003848 <_fflush_r+0x70>)
 8003832:	429c      	cmp	r4, r3
 8003834:	d101      	bne.n	800383a <_fflush_r+0x62>
 8003836:	68ac      	ldr	r4, [r5, #8]
 8003838:	e7df      	b.n	80037fa <_fflush_r+0x22>
 800383a:	4b04      	ldr	r3, [pc, #16]	; (800384c <_fflush_r+0x74>)
 800383c:	429c      	cmp	r4, r3
 800383e:	bf08      	it	eq
 8003840:	68ec      	ldreq	r4, [r5, #12]
 8003842:	e7da      	b.n	80037fa <_fflush_r+0x22>
 8003844:	0800491c 	stmdaeq	r0, {r2, r3, r4, r8, fp, lr}
 8003848:	0800493c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, lr}
 800384c:	080048fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, fp, lr}

08003850 <std>:
 8003850:	2300      	movs	r3, #0
 8003852:	b510      	push	{r4, lr}
 8003854:	4604      	mov	r4, r0
 8003856:	e9c0 3300 	strd	r3, r3, [r0]
 800385a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800385e:	6083      	str	r3, [r0, #8]
 8003860:	8181      	strh	r1, [r0, #12]
 8003862:	6643      	str	r3, [r0, #100]	; 0x64
 8003864:	81c2      	strh	r2, [r0, #14]
 8003866:	6183      	str	r3, [r0, #24]
 8003868:	4619      	mov	r1, r3
 800386a:	2208      	movs	r2, #8
 800386c:	305c      	adds	r0, #92	; 0x5c
 800386e:	f7ff fdd7 	bl	8003420 <memset>
 8003872:	4b05      	ldr	r3, [pc, #20]	; (8003888 <std+0x38>)
 8003874:	6263      	str	r3, [r4, #36]	; 0x24
 8003876:	4b05      	ldr	r3, [pc, #20]	; (800388c <std+0x3c>)
 8003878:	62a3      	str	r3, [r4, #40]	; 0x28
 800387a:	4b05      	ldr	r3, [pc, #20]	; (8003890 <std+0x40>)
 800387c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800387e:	4b05      	ldr	r3, [pc, #20]	; (8003894 <std+0x44>)
 8003880:	6224      	str	r4, [r4, #32]
 8003882:	6323      	str	r3, [r4, #48]	; 0x30
 8003884:	bd10      	pop	{r4, pc}
 8003886:	bf00      	nop
 8003888:	080042c9 	stmdaeq	r0, {r0, r3, r6, r7, r9, lr}
 800388c:	080042eb 	stmdaeq	r0, {r0, r1, r3, r5, r6, r7, r9, lr}
 8003890:	08004323 	stmdaeq	r0, {r0, r1, r5, r8, r9, lr}
 8003894:	08004347 	stmdaeq	r0, {r0, r1, r2, r6, r8, r9, lr}

08003898 <_cleanup_r>:
 8003898:	4901      	ldr	r1, [pc, #4]	; (80038a0 <_cleanup_r+0x8>)
 800389a:	f000 b8af 	b.w	80039fc <_fwalk_reent>
 800389e:	bf00      	nop
 80038a0:	080037d9 	stmdaeq	r0, {r0, r3, r4, r6, r7, r8, r9, sl, ip, sp}

080038a4 <__sfmoreglue>:
 80038a4:	b570      	push	{r4, r5, r6, lr}
 80038a6:	2268      	movs	r2, #104	; 0x68
 80038a8:	1e4d      	subs	r5, r1, #1
 80038aa:	4355      	muls	r5, r2
 80038ac:	460e      	mov	r6, r1
 80038ae:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80038b2:	f000 f997 	bl	8003be4 <_malloc_r>
 80038b6:	4604      	mov	r4, r0
 80038b8:	b140      	cbz	r0, 80038cc <__sfmoreglue+0x28>
 80038ba:	2100      	movs	r1, #0
 80038bc:	e9c0 1600 	strd	r1, r6, [r0]
 80038c0:	300c      	adds	r0, #12
 80038c2:	60a0      	str	r0, [r4, #8]
 80038c4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80038c8:	f7ff fdaa 	bl	8003420 <memset>
 80038cc:	4620      	mov	r0, r4
 80038ce:	bd70      	pop	{r4, r5, r6, pc}

080038d0 <__sfp_lock_acquire>:
 80038d0:	4801      	ldr	r0, [pc, #4]	; (80038d8 <__sfp_lock_acquire+0x8>)
 80038d2:	f000 b8b3 	b.w	8003a3c <__retarget_lock_acquire_recursive>
 80038d6:	bf00      	nop
 80038d8:	2000898d 	andcs	r8, r0, sp, lsl #19

080038dc <__sfp_lock_release>:
 80038dc:	4801      	ldr	r0, [pc, #4]	; (80038e4 <__sfp_lock_release+0x8>)
 80038de:	f000 b8ae 	b.w	8003a3e <__retarget_lock_release_recursive>
 80038e2:	bf00      	nop
 80038e4:	2000898d 	andcs	r8, r0, sp, lsl #19

080038e8 <__sinit_lock_acquire>:
 80038e8:	4801      	ldr	r0, [pc, #4]	; (80038f0 <__sinit_lock_acquire+0x8>)
 80038ea:	f000 b8a7 	b.w	8003a3c <__retarget_lock_acquire_recursive>
 80038ee:	bf00      	nop
 80038f0:	2000898e 	andcs	r8, r0, lr, lsl #19

080038f4 <__sinit_lock_release>:
 80038f4:	4801      	ldr	r0, [pc, #4]	; (80038fc <__sinit_lock_release+0x8>)
 80038f6:	f000 b8a2 	b.w	8003a3e <__retarget_lock_release_recursive>
 80038fa:	bf00      	nop
 80038fc:	2000898e 	andcs	r8, r0, lr, lsl #19

08003900 <__sinit>:
 8003900:	b510      	push	{r4, lr}
 8003902:	4604      	mov	r4, r0
 8003904:	f7ff fff0 	bl	80038e8 <__sinit_lock_acquire>
 8003908:	69a3      	ldr	r3, [r4, #24]
 800390a:	b11b      	cbz	r3, 8003914 <__sinit+0x14>
 800390c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003910:	f7ff bff0 	b.w	80038f4 <__sinit_lock_release>
 8003914:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8003918:	6523      	str	r3, [r4, #80]	; 0x50
 800391a:	4b13      	ldr	r3, [pc, #76]	; (8003968 <__sinit+0x68>)
 800391c:	4a13      	ldr	r2, [pc, #76]	; (800396c <__sinit+0x6c>)
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	62a2      	str	r2, [r4, #40]	; 0x28
 8003922:	42a3      	cmp	r3, r4
 8003924:	bf04      	itt	eq
 8003926:	2301      	moveq	r3, #1
 8003928:	61a3      	streq	r3, [r4, #24]
 800392a:	4620      	mov	r0, r4
 800392c:	f000 f820 	bl	8003970 <__sfp>
 8003930:	6060      	str	r0, [r4, #4]
 8003932:	4620      	mov	r0, r4
 8003934:	f000 f81c 	bl	8003970 <__sfp>
 8003938:	60a0      	str	r0, [r4, #8]
 800393a:	4620      	mov	r0, r4
 800393c:	f000 f818 	bl	8003970 <__sfp>
 8003940:	2200      	movs	r2, #0
 8003942:	60e0      	str	r0, [r4, #12]
 8003944:	2104      	movs	r1, #4
 8003946:	6860      	ldr	r0, [r4, #4]
 8003948:	f7ff ff82 	bl	8003850 <std>
 800394c:	68a0      	ldr	r0, [r4, #8]
 800394e:	2201      	movs	r2, #1
 8003950:	2109      	movs	r1, #9
 8003952:	f7ff ff7d 	bl	8003850 <std>
 8003956:	68e0      	ldr	r0, [r4, #12]
 8003958:	2202      	movs	r2, #2
 800395a:	2112      	movs	r1, #18
 800395c:	f7ff ff78 	bl	8003850 <std>
 8003960:	2301      	movs	r3, #1
 8003962:	61a3      	str	r3, [r4, #24]
 8003964:	e7d2      	b.n	800390c <__sinit+0xc>
 8003966:	bf00      	nop
 8003968:	080048f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp, lr}
 800396c:	08003899 	stmdaeq	r0, {r0, r3, r4, r7, fp, ip, sp}

08003970 <__sfp>:
 8003970:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003972:	4607      	mov	r7, r0
 8003974:	f7ff ffac 	bl	80038d0 <__sfp_lock_acquire>
 8003978:	4b1e      	ldr	r3, [pc, #120]	; (80039f4 <__sfp+0x84>)
 800397a:	681e      	ldr	r6, [r3, #0]
 800397c:	69b3      	ldr	r3, [r6, #24]
 800397e:	b913      	cbnz	r3, 8003986 <__sfp+0x16>
 8003980:	4630      	mov	r0, r6
 8003982:	f7ff ffbd 	bl	8003900 <__sinit>
 8003986:	3648      	adds	r6, #72	; 0x48
 8003988:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800398c:	3b01      	subs	r3, #1
 800398e:	d503      	bpl.n	8003998 <__sfp+0x28>
 8003990:	6833      	ldr	r3, [r6, #0]
 8003992:	b30b      	cbz	r3, 80039d8 <__sfp+0x68>
 8003994:	6836      	ldr	r6, [r6, #0]
 8003996:	e7f7      	b.n	8003988 <__sfp+0x18>
 8003998:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800399c:	b9d5      	cbnz	r5, 80039d4 <__sfp+0x64>
 800399e:	4b16      	ldr	r3, [pc, #88]	; (80039f8 <__sfp+0x88>)
 80039a0:	60e3      	str	r3, [r4, #12]
 80039a2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80039a6:	6665      	str	r5, [r4, #100]	; 0x64
 80039a8:	f000 f847 	bl	8003a3a <__retarget_lock_init_recursive>
 80039ac:	f7ff ff96 	bl	80038dc <__sfp_lock_release>
 80039b0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80039b4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80039b8:	6025      	str	r5, [r4, #0]
 80039ba:	61a5      	str	r5, [r4, #24]
 80039bc:	2208      	movs	r2, #8
 80039be:	4629      	mov	r1, r5
 80039c0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80039c4:	f7ff fd2c 	bl	8003420 <memset>
 80039c8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80039cc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80039d0:	4620      	mov	r0, r4
 80039d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80039d4:	3468      	adds	r4, #104	; 0x68
 80039d6:	e7d9      	b.n	800398c <__sfp+0x1c>
 80039d8:	2104      	movs	r1, #4
 80039da:	4638      	mov	r0, r7
 80039dc:	f7ff ff62 	bl	80038a4 <__sfmoreglue>
 80039e0:	4604      	mov	r4, r0
 80039e2:	6030      	str	r0, [r6, #0]
 80039e4:	2800      	cmp	r0, #0
 80039e6:	d1d5      	bne.n	8003994 <__sfp+0x24>
 80039e8:	f7ff ff78 	bl	80038dc <__sfp_lock_release>
 80039ec:	230c      	movs	r3, #12
 80039ee:	603b      	str	r3, [r7, #0]
 80039f0:	e7ee      	b.n	80039d0 <__sfp+0x60>
 80039f2:	bf00      	nop
 80039f4:	080048f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, fp, lr}
 80039f8:	ffff0001 			; <UNDEFINED> instruction: 0xffff0001

080039fc <_fwalk_reent>:
 80039fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003a00:	4606      	mov	r6, r0
 8003a02:	4688      	mov	r8, r1
 8003a04:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8003a08:	2700      	movs	r7, #0
 8003a0a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8003a0e:	f1b9 0901 	subs.w	r9, r9, #1
 8003a12:	d505      	bpl.n	8003a20 <_fwalk_reent+0x24>
 8003a14:	6824      	ldr	r4, [r4, #0]
 8003a16:	2c00      	cmp	r4, #0
 8003a18:	d1f7      	bne.n	8003a0a <_fwalk_reent+0xe>
 8003a1a:	4638      	mov	r0, r7
 8003a1c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003a20:	89ab      	ldrh	r3, [r5, #12]
 8003a22:	2b01      	cmp	r3, #1
 8003a24:	d907      	bls.n	8003a36 <_fwalk_reent+0x3a>
 8003a26:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8003a2a:	3301      	adds	r3, #1
 8003a2c:	d003      	beq.n	8003a36 <_fwalk_reent+0x3a>
 8003a2e:	4629      	mov	r1, r5
 8003a30:	4630      	mov	r0, r6
 8003a32:	47c0      	blx	r8
 8003a34:	4307      	orrs	r7, r0
 8003a36:	3568      	adds	r5, #104	; 0x68
 8003a38:	e7e9      	b.n	8003a0e <_fwalk_reent+0x12>

08003a3a <__retarget_lock_init_recursive>:
 8003a3a:	4770      	bx	lr

08003a3c <__retarget_lock_acquire_recursive>:
 8003a3c:	4770      	bx	lr

08003a3e <__retarget_lock_release_recursive>:
 8003a3e:	4770      	bx	lr

08003a40 <__swhatbuf_r>:
 8003a40:	b570      	push	{r4, r5, r6, lr}
 8003a42:	460e      	mov	r6, r1
 8003a44:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8003a48:	2900      	cmp	r1, #0
 8003a4a:	b096      	sub	sp, #88	; 0x58
 8003a4c:	4614      	mov	r4, r2
 8003a4e:	461d      	mov	r5, r3
 8003a50:	da08      	bge.n	8003a64 <__swhatbuf_r+0x24>
 8003a52:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8003a56:	2200      	movs	r2, #0
 8003a58:	602a      	str	r2, [r5, #0]
 8003a5a:	061a      	lsls	r2, r3, #24
 8003a5c:	d410      	bmi.n	8003a80 <__swhatbuf_r+0x40>
 8003a5e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003a62:	e00e      	b.n	8003a82 <__swhatbuf_r+0x42>
 8003a64:	466a      	mov	r2, sp
 8003a66:	f000 fc95 	bl	8004394 <_fstat_r>
 8003a6a:	2800      	cmp	r0, #0
 8003a6c:	dbf1      	blt.n	8003a52 <__swhatbuf_r+0x12>
 8003a6e:	9a01      	ldr	r2, [sp, #4]
 8003a70:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8003a74:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8003a78:	425a      	negs	r2, r3
 8003a7a:	415a      	adcs	r2, r3
 8003a7c:	602a      	str	r2, [r5, #0]
 8003a7e:	e7ee      	b.n	8003a5e <__swhatbuf_r+0x1e>
 8003a80:	2340      	movs	r3, #64	; 0x40
 8003a82:	2000      	movs	r0, #0
 8003a84:	6023      	str	r3, [r4, #0]
 8003a86:	b016      	add	sp, #88	; 0x58
 8003a88:	bd70      	pop	{r4, r5, r6, pc}
	...

08003a8c <__smakebuf_r>:
 8003a8c:	898b      	ldrh	r3, [r1, #12]
 8003a8e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003a90:	079d      	lsls	r5, r3, #30
 8003a92:	4606      	mov	r6, r0
 8003a94:	460c      	mov	r4, r1
 8003a96:	d507      	bpl.n	8003aa8 <__smakebuf_r+0x1c>
 8003a98:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8003a9c:	6023      	str	r3, [r4, #0]
 8003a9e:	6123      	str	r3, [r4, #16]
 8003aa0:	2301      	movs	r3, #1
 8003aa2:	6163      	str	r3, [r4, #20]
 8003aa4:	b002      	add	sp, #8
 8003aa6:	bd70      	pop	{r4, r5, r6, pc}
 8003aa8:	ab01      	add	r3, sp, #4
 8003aaa:	466a      	mov	r2, sp
 8003aac:	f7ff ffc8 	bl	8003a40 <__swhatbuf_r>
 8003ab0:	9900      	ldr	r1, [sp, #0]
 8003ab2:	4605      	mov	r5, r0
 8003ab4:	4630      	mov	r0, r6
 8003ab6:	f000 f895 	bl	8003be4 <_malloc_r>
 8003aba:	b948      	cbnz	r0, 8003ad0 <__smakebuf_r+0x44>
 8003abc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003ac0:	059a      	lsls	r2, r3, #22
 8003ac2:	d4ef      	bmi.n	8003aa4 <__smakebuf_r+0x18>
 8003ac4:	f023 0303 	bic.w	r3, r3, #3
 8003ac8:	f043 0302 	orr.w	r3, r3, #2
 8003acc:	81a3      	strh	r3, [r4, #12]
 8003ace:	e7e3      	b.n	8003a98 <__smakebuf_r+0xc>
 8003ad0:	4b0d      	ldr	r3, [pc, #52]	; (8003b08 <__smakebuf_r+0x7c>)
 8003ad2:	62b3      	str	r3, [r6, #40]	; 0x28
 8003ad4:	89a3      	ldrh	r3, [r4, #12]
 8003ad6:	6020      	str	r0, [r4, #0]
 8003ad8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003adc:	81a3      	strh	r3, [r4, #12]
 8003ade:	9b00      	ldr	r3, [sp, #0]
 8003ae0:	6163      	str	r3, [r4, #20]
 8003ae2:	9b01      	ldr	r3, [sp, #4]
 8003ae4:	6120      	str	r0, [r4, #16]
 8003ae6:	b15b      	cbz	r3, 8003b00 <__smakebuf_r+0x74>
 8003ae8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8003aec:	4630      	mov	r0, r6
 8003aee:	f000 fc63 	bl	80043b8 <_isatty_r>
 8003af2:	b128      	cbz	r0, 8003b00 <__smakebuf_r+0x74>
 8003af4:	89a3      	ldrh	r3, [r4, #12]
 8003af6:	f023 0303 	bic.w	r3, r3, #3
 8003afa:	f043 0301 	orr.w	r3, r3, #1
 8003afe:	81a3      	strh	r3, [r4, #12]
 8003b00:	89a0      	ldrh	r0, [r4, #12]
 8003b02:	4305      	orrs	r5, r0
 8003b04:	81a5      	strh	r5, [r4, #12]
 8003b06:	e7cd      	b.n	8003aa4 <__smakebuf_r+0x18>
 8003b08:	08003899 	stmdaeq	r0, {r0, r3, r4, r7, fp, ip, sp}

08003b0c <_free_r>:
 8003b0c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003b0e:	2900      	cmp	r1, #0
 8003b10:	d044      	beq.n	8003b9c <_free_r+0x90>
 8003b12:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003b16:	9001      	str	r0, [sp, #4]
 8003b18:	2b00      	cmp	r3, #0
 8003b1a:	f1a1 0404 	sub.w	r4, r1, #4
 8003b1e:	bfb8      	it	lt
 8003b20:	18e4      	addlt	r4, r4, r3
 8003b22:	f000 fc6b 	bl	80043fc <__malloc_lock>
 8003b26:	4a1e      	ldr	r2, [pc, #120]	; (8003ba0 <_free_r+0x94>)
 8003b28:	9801      	ldr	r0, [sp, #4]
 8003b2a:	6813      	ldr	r3, [r2, #0]
 8003b2c:	b933      	cbnz	r3, 8003b3c <_free_r+0x30>
 8003b2e:	6063      	str	r3, [r4, #4]
 8003b30:	6014      	str	r4, [r2, #0]
 8003b32:	b003      	add	sp, #12
 8003b34:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003b38:	f000 bc66 	b.w	8004408 <__malloc_unlock>
 8003b3c:	42a3      	cmp	r3, r4
 8003b3e:	d908      	bls.n	8003b52 <_free_r+0x46>
 8003b40:	6825      	ldr	r5, [r4, #0]
 8003b42:	1961      	adds	r1, r4, r5
 8003b44:	428b      	cmp	r3, r1
 8003b46:	bf01      	itttt	eq
 8003b48:	6819      	ldreq	r1, [r3, #0]
 8003b4a:	685b      	ldreq	r3, [r3, #4]
 8003b4c:	1949      	addeq	r1, r1, r5
 8003b4e:	6021      	streq	r1, [r4, #0]
 8003b50:	e7ed      	b.n	8003b2e <_free_r+0x22>
 8003b52:	461a      	mov	r2, r3
 8003b54:	685b      	ldr	r3, [r3, #4]
 8003b56:	b10b      	cbz	r3, 8003b5c <_free_r+0x50>
 8003b58:	42a3      	cmp	r3, r4
 8003b5a:	d9fa      	bls.n	8003b52 <_free_r+0x46>
 8003b5c:	6811      	ldr	r1, [r2, #0]
 8003b5e:	1855      	adds	r5, r2, r1
 8003b60:	42a5      	cmp	r5, r4
 8003b62:	d10b      	bne.n	8003b7c <_free_r+0x70>
 8003b64:	6824      	ldr	r4, [r4, #0]
 8003b66:	4421      	add	r1, r4
 8003b68:	1854      	adds	r4, r2, r1
 8003b6a:	42a3      	cmp	r3, r4
 8003b6c:	6011      	str	r1, [r2, #0]
 8003b6e:	d1e0      	bne.n	8003b32 <_free_r+0x26>
 8003b70:	681c      	ldr	r4, [r3, #0]
 8003b72:	685b      	ldr	r3, [r3, #4]
 8003b74:	6053      	str	r3, [r2, #4]
 8003b76:	4421      	add	r1, r4
 8003b78:	6011      	str	r1, [r2, #0]
 8003b7a:	e7da      	b.n	8003b32 <_free_r+0x26>
 8003b7c:	d902      	bls.n	8003b84 <_free_r+0x78>
 8003b7e:	230c      	movs	r3, #12
 8003b80:	6003      	str	r3, [r0, #0]
 8003b82:	e7d6      	b.n	8003b32 <_free_r+0x26>
 8003b84:	6825      	ldr	r5, [r4, #0]
 8003b86:	1961      	adds	r1, r4, r5
 8003b88:	428b      	cmp	r3, r1
 8003b8a:	bf04      	itt	eq
 8003b8c:	6819      	ldreq	r1, [r3, #0]
 8003b8e:	685b      	ldreq	r3, [r3, #4]
 8003b90:	6063      	str	r3, [r4, #4]
 8003b92:	bf04      	itt	eq
 8003b94:	1949      	addeq	r1, r1, r5
 8003b96:	6021      	streq	r1, [r4, #0]
 8003b98:	6054      	str	r4, [r2, #4]
 8003b9a:	e7ca      	b.n	8003b32 <_free_r+0x26>
 8003b9c:	b003      	add	sp, #12
 8003b9e:	bd30      	pop	{r4, r5, pc}
 8003ba0:	20008990 	mulcs	r0, r0, r9

08003ba4 <sbrk_aligned>:
 8003ba4:	b570      	push	{r4, r5, r6, lr}
 8003ba6:	4e0e      	ldr	r6, [pc, #56]	; (8003be0 <sbrk_aligned+0x3c>)
 8003ba8:	460c      	mov	r4, r1
 8003baa:	6831      	ldr	r1, [r6, #0]
 8003bac:	4605      	mov	r5, r0
 8003bae:	b911      	cbnz	r1, 8003bb6 <sbrk_aligned+0x12>
 8003bb0:	f000 fb7a 	bl	80042a8 <_sbrk_r>
 8003bb4:	6030      	str	r0, [r6, #0]
 8003bb6:	4621      	mov	r1, r4
 8003bb8:	4628      	mov	r0, r5
 8003bba:	f000 fb75 	bl	80042a8 <_sbrk_r>
 8003bbe:	1c43      	adds	r3, r0, #1
 8003bc0:	d00a      	beq.n	8003bd8 <sbrk_aligned+0x34>
 8003bc2:	1cc4      	adds	r4, r0, #3
 8003bc4:	f024 0403 	bic.w	r4, r4, #3
 8003bc8:	42a0      	cmp	r0, r4
 8003bca:	d007      	beq.n	8003bdc <sbrk_aligned+0x38>
 8003bcc:	1a21      	subs	r1, r4, r0
 8003bce:	4628      	mov	r0, r5
 8003bd0:	f000 fb6a 	bl	80042a8 <_sbrk_r>
 8003bd4:	3001      	adds	r0, #1
 8003bd6:	d101      	bne.n	8003bdc <sbrk_aligned+0x38>
 8003bd8:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8003bdc:	4620      	mov	r0, r4
 8003bde:	bd70      	pop	{r4, r5, r6, pc}
 8003be0:	20008994 	mulcs	r0, r4, r9

08003be4 <_malloc_r>:
 8003be4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003be8:	1ccd      	adds	r5, r1, #3
 8003bea:	f025 0503 	bic.w	r5, r5, #3
 8003bee:	3508      	adds	r5, #8
 8003bf0:	2d0c      	cmp	r5, #12
 8003bf2:	bf38      	it	cc
 8003bf4:	250c      	movcc	r5, #12
 8003bf6:	2d00      	cmp	r5, #0
 8003bf8:	4607      	mov	r7, r0
 8003bfa:	db01      	blt.n	8003c00 <_malloc_r+0x1c>
 8003bfc:	42a9      	cmp	r1, r5
 8003bfe:	d905      	bls.n	8003c0c <_malloc_r+0x28>
 8003c00:	230c      	movs	r3, #12
 8003c02:	603b      	str	r3, [r7, #0]
 8003c04:	2600      	movs	r6, #0
 8003c06:	4630      	mov	r0, r6
 8003c08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003c0c:	4e2e      	ldr	r6, [pc, #184]	; (8003cc8 <_malloc_r+0xe4>)
 8003c0e:	f000 fbf5 	bl	80043fc <__malloc_lock>
 8003c12:	6833      	ldr	r3, [r6, #0]
 8003c14:	461c      	mov	r4, r3
 8003c16:	bb34      	cbnz	r4, 8003c66 <_malloc_r+0x82>
 8003c18:	4629      	mov	r1, r5
 8003c1a:	4638      	mov	r0, r7
 8003c1c:	f7ff ffc2 	bl	8003ba4 <sbrk_aligned>
 8003c20:	1c43      	adds	r3, r0, #1
 8003c22:	4604      	mov	r4, r0
 8003c24:	d14d      	bne.n	8003cc2 <_malloc_r+0xde>
 8003c26:	6834      	ldr	r4, [r6, #0]
 8003c28:	4626      	mov	r6, r4
 8003c2a:	2e00      	cmp	r6, #0
 8003c2c:	d140      	bne.n	8003cb0 <_malloc_r+0xcc>
 8003c2e:	6823      	ldr	r3, [r4, #0]
 8003c30:	4631      	mov	r1, r6
 8003c32:	4638      	mov	r0, r7
 8003c34:	eb04 0803 	add.w	r8, r4, r3
 8003c38:	f000 fb36 	bl	80042a8 <_sbrk_r>
 8003c3c:	4580      	cmp	r8, r0
 8003c3e:	d13a      	bne.n	8003cb6 <_malloc_r+0xd2>
 8003c40:	6821      	ldr	r1, [r4, #0]
 8003c42:	3503      	adds	r5, #3
 8003c44:	1a6d      	subs	r5, r5, r1
 8003c46:	f025 0503 	bic.w	r5, r5, #3
 8003c4a:	3508      	adds	r5, #8
 8003c4c:	2d0c      	cmp	r5, #12
 8003c4e:	bf38      	it	cc
 8003c50:	250c      	movcc	r5, #12
 8003c52:	4629      	mov	r1, r5
 8003c54:	4638      	mov	r0, r7
 8003c56:	f7ff ffa5 	bl	8003ba4 <sbrk_aligned>
 8003c5a:	3001      	adds	r0, #1
 8003c5c:	d02b      	beq.n	8003cb6 <_malloc_r+0xd2>
 8003c5e:	6823      	ldr	r3, [r4, #0]
 8003c60:	442b      	add	r3, r5
 8003c62:	6023      	str	r3, [r4, #0]
 8003c64:	e00e      	b.n	8003c84 <_malloc_r+0xa0>
 8003c66:	6822      	ldr	r2, [r4, #0]
 8003c68:	1b52      	subs	r2, r2, r5
 8003c6a:	d41e      	bmi.n	8003caa <_malloc_r+0xc6>
 8003c6c:	2a0b      	cmp	r2, #11
 8003c6e:	d916      	bls.n	8003c9e <_malloc_r+0xba>
 8003c70:	1961      	adds	r1, r4, r5
 8003c72:	42a3      	cmp	r3, r4
 8003c74:	6025      	str	r5, [r4, #0]
 8003c76:	bf18      	it	ne
 8003c78:	6059      	strne	r1, [r3, #4]
 8003c7a:	6863      	ldr	r3, [r4, #4]
 8003c7c:	bf08      	it	eq
 8003c7e:	6031      	streq	r1, [r6, #0]
 8003c80:	5162      	str	r2, [r4, r5]
 8003c82:	604b      	str	r3, [r1, #4]
 8003c84:	4638      	mov	r0, r7
 8003c86:	f104 060b 	add.w	r6, r4, #11
 8003c8a:	f000 fbbd 	bl	8004408 <__malloc_unlock>
 8003c8e:	f026 0607 	bic.w	r6, r6, #7
 8003c92:	1d23      	adds	r3, r4, #4
 8003c94:	1af2      	subs	r2, r6, r3
 8003c96:	d0b6      	beq.n	8003c06 <_malloc_r+0x22>
 8003c98:	1b9b      	subs	r3, r3, r6
 8003c9a:	50a3      	str	r3, [r4, r2]
 8003c9c:	e7b3      	b.n	8003c06 <_malloc_r+0x22>
 8003c9e:	6862      	ldr	r2, [r4, #4]
 8003ca0:	42a3      	cmp	r3, r4
 8003ca2:	bf0c      	ite	eq
 8003ca4:	6032      	streq	r2, [r6, #0]
 8003ca6:	605a      	strne	r2, [r3, #4]
 8003ca8:	e7ec      	b.n	8003c84 <_malloc_r+0xa0>
 8003caa:	4623      	mov	r3, r4
 8003cac:	6864      	ldr	r4, [r4, #4]
 8003cae:	e7b2      	b.n	8003c16 <_malloc_r+0x32>
 8003cb0:	4634      	mov	r4, r6
 8003cb2:	6876      	ldr	r6, [r6, #4]
 8003cb4:	e7b9      	b.n	8003c2a <_malloc_r+0x46>
 8003cb6:	230c      	movs	r3, #12
 8003cb8:	603b      	str	r3, [r7, #0]
 8003cba:	4638      	mov	r0, r7
 8003cbc:	f000 fba4 	bl	8004408 <__malloc_unlock>
 8003cc0:	e7a1      	b.n	8003c06 <_malloc_r+0x22>
 8003cc2:	6025      	str	r5, [r4, #0]
 8003cc4:	e7de      	b.n	8003c84 <_malloc_r+0xa0>
 8003cc6:	bf00      	nop
 8003cc8:	20008990 	mulcs	r0, r0, r9

08003ccc <__sfputc_r>:
 8003ccc:	6893      	ldr	r3, [r2, #8]
 8003cce:	3b01      	subs	r3, #1
 8003cd0:	2b00      	cmp	r3, #0
 8003cd2:	b410      	push	{r4}
 8003cd4:	6093      	str	r3, [r2, #8]
 8003cd6:	da08      	bge.n	8003cea <__sfputc_r+0x1e>
 8003cd8:	6994      	ldr	r4, [r2, #24]
 8003cda:	42a3      	cmp	r3, r4
 8003cdc:	db01      	blt.n	8003ce2 <__sfputc_r+0x16>
 8003cde:	290a      	cmp	r1, #10
 8003ce0:	d103      	bne.n	8003cea <__sfputc_r+0x1e>
 8003ce2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003ce6:	f7ff bc31 	b.w	800354c <__swbuf_r>
 8003cea:	6813      	ldr	r3, [r2, #0]
 8003cec:	1c58      	adds	r0, r3, #1
 8003cee:	6010      	str	r0, [r2, #0]
 8003cf0:	7019      	strb	r1, [r3, #0]
 8003cf2:	4608      	mov	r0, r1
 8003cf4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003cf8:	4770      	bx	lr

08003cfa <__sfputs_r>:
 8003cfa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003cfc:	4606      	mov	r6, r0
 8003cfe:	460f      	mov	r7, r1
 8003d00:	4614      	mov	r4, r2
 8003d02:	18d5      	adds	r5, r2, r3
 8003d04:	42ac      	cmp	r4, r5
 8003d06:	d101      	bne.n	8003d0c <__sfputs_r+0x12>
 8003d08:	2000      	movs	r0, #0
 8003d0a:	e007      	b.n	8003d1c <__sfputs_r+0x22>
 8003d0c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d10:	463a      	mov	r2, r7
 8003d12:	4630      	mov	r0, r6
 8003d14:	f7ff ffda 	bl	8003ccc <__sfputc_r>
 8003d18:	1c43      	adds	r3, r0, #1
 8003d1a:	d1f3      	bne.n	8003d04 <__sfputs_r+0xa>
 8003d1c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08003d20 <_vfiprintf_r>:
 8003d20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003d24:	460d      	mov	r5, r1
 8003d26:	b09d      	sub	sp, #116	; 0x74
 8003d28:	4614      	mov	r4, r2
 8003d2a:	4698      	mov	r8, r3
 8003d2c:	4606      	mov	r6, r0
 8003d2e:	b118      	cbz	r0, 8003d38 <_vfiprintf_r+0x18>
 8003d30:	6983      	ldr	r3, [r0, #24]
 8003d32:	b90b      	cbnz	r3, 8003d38 <_vfiprintf_r+0x18>
 8003d34:	f7ff fde4 	bl	8003900 <__sinit>
 8003d38:	4b89      	ldr	r3, [pc, #548]	; (8003f60 <_vfiprintf_r+0x240>)
 8003d3a:	429d      	cmp	r5, r3
 8003d3c:	d11b      	bne.n	8003d76 <_vfiprintf_r+0x56>
 8003d3e:	6875      	ldr	r5, [r6, #4]
 8003d40:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003d42:	07d9      	lsls	r1, r3, #31
 8003d44:	d405      	bmi.n	8003d52 <_vfiprintf_r+0x32>
 8003d46:	89ab      	ldrh	r3, [r5, #12]
 8003d48:	059a      	lsls	r2, r3, #22
 8003d4a:	d402      	bmi.n	8003d52 <_vfiprintf_r+0x32>
 8003d4c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003d4e:	f7ff fe75 	bl	8003a3c <__retarget_lock_acquire_recursive>
 8003d52:	89ab      	ldrh	r3, [r5, #12]
 8003d54:	071b      	lsls	r3, r3, #28
 8003d56:	d501      	bpl.n	8003d5c <_vfiprintf_r+0x3c>
 8003d58:	692b      	ldr	r3, [r5, #16]
 8003d5a:	b9eb      	cbnz	r3, 8003d98 <_vfiprintf_r+0x78>
 8003d5c:	4629      	mov	r1, r5
 8003d5e:	4630      	mov	r0, r6
 8003d60:	f7ff fc46 	bl	80035f0 <__swsetup_r>
 8003d64:	b1c0      	cbz	r0, 8003d98 <_vfiprintf_r+0x78>
 8003d66:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003d68:	07dc      	lsls	r4, r3, #31
 8003d6a:	d50e      	bpl.n	8003d8a <_vfiprintf_r+0x6a>
 8003d6c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003d70:	b01d      	add	sp, #116	; 0x74
 8003d72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d76:	4b7b      	ldr	r3, [pc, #492]	; (8003f64 <_vfiprintf_r+0x244>)
 8003d78:	429d      	cmp	r5, r3
 8003d7a:	d101      	bne.n	8003d80 <_vfiprintf_r+0x60>
 8003d7c:	68b5      	ldr	r5, [r6, #8]
 8003d7e:	e7df      	b.n	8003d40 <_vfiprintf_r+0x20>
 8003d80:	4b79      	ldr	r3, [pc, #484]	; (8003f68 <_vfiprintf_r+0x248>)
 8003d82:	429d      	cmp	r5, r3
 8003d84:	bf08      	it	eq
 8003d86:	68f5      	ldreq	r5, [r6, #12]
 8003d88:	e7da      	b.n	8003d40 <_vfiprintf_r+0x20>
 8003d8a:	89ab      	ldrh	r3, [r5, #12]
 8003d8c:	0598      	lsls	r0, r3, #22
 8003d8e:	d4ed      	bmi.n	8003d6c <_vfiprintf_r+0x4c>
 8003d90:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003d92:	f7ff fe54 	bl	8003a3e <__retarget_lock_release_recursive>
 8003d96:	e7e9      	b.n	8003d6c <_vfiprintf_r+0x4c>
 8003d98:	2300      	movs	r3, #0
 8003d9a:	9309      	str	r3, [sp, #36]	; 0x24
 8003d9c:	2320      	movs	r3, #32
 8003d9e:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003da2:	f8cd 800c 	str.w	r8, [sp, #12]
 8003da6:	2330      	movs	r3, #48	; 0x30
 8003da8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8003f6c <_vfiprintf_r+0x24c>
 8003dac:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003db0:	f04f 0901 	mov.w	r9, #1
 8003db4:	4623      	mov	r3, r4
 8003db6:	469a      	mov	sl, r3
 8003db8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003dbc:	b10a      	cbz	r2, 8003dc2 <_vfiprintf_r+0xa2>
 8003dbe:	2a25      	cmp	r2, #37	; 0x25
 8003dc0:	d1f9      	bne.n	8003db6 <_vfiprintf_r+0x96>
 8003dc2:	ebba 0b04 	subs.w	fp, sl, r4
 8003dc6:	d00b      	beq.n	8003de0 <_vfiprintf_r+0xc0>
 8003dc8:	465b      	mov	r3, fp
 8003dca:	4622      	mov	r2, r4
 8003dcc:	4629      	mov	r1, r5
 8003dce:	4630      	mov	r0, r6
 8003dd0:	f7ff ff93 	bl	8003cfa <__sfputs_r>
 8003dd4:	3001      	adds	r0, #1
 8003dd6:	f000 80aa 	beq.w	8003f2e <_vfiprintf_r+0x20e>
 8003dda:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003ddc:	445a      	add	r2, fp
 8003dde:	9209      	str	r2, [sp, #36]	; 0x24
 8003de0:	f89a 3000 	ldrb.w	r3, [sl]
 8003de4:	2b00      	cmp	r3, #0
 8003de6:	f000 80a2 	beq.w	8003f2e <_vfiprintf_r+0x20e>
 8003dea:	2300      	movs	r3, #0
 8003dec:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003df0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003df4:	f10a 0a01 	add.w	sl, sl, #1
 8003df8:	9304      	str	r3, [sp, #16]
 8003dfa:	9307      	str	r3, [sp, #28]
 8003dfc:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003e00:	931a      	str	r3, [sp, #104]	; 0x68
 8003e02:	4654      	mov	r4, sl
 8003e04:	2205      	movs	r2, #5
 8003e06:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e0a:	4858      	ldr	r0, [pc, #352]	; (8003f6c <_vfiprintf_r+0x24c>)
 8003e0c:	f7fc fa08 	bl	8000220 <memchr>
 8003e10:	9a04      	ldr	r2, [sp, #16]
 8003e12:	b9d8      	cbnz	r0, 8003e4c <_vfiprintf_r+0x12c>
 8003e14:	06d1      	lsls	r1, r2, #27
 8003e16:	bf44      	itt	mi
 8003e18:	2320      	movmi	r3, #32
 8003e1a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003e1e:	0713      	lsls	r3, r2, #28
 8003e20:	bf44      	itt	mi
 8003e22:	232b      	movmi	r3, #43	; 0x2b
 8003e24:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003e28:	f89a 3000 	ldrb.w	r3, [sl]
 8003e2c:	2b2a      	cmp	r3, #42	; 0x2a
 8003e2e:	d015      	beq.n	8003e5c <_vfiprintf_r+0x13c>
 8003e30:	9a07      	ldr	r2, [sp, #28]
 8003e32:	4654      	mov	r4, sl
 8003e34:	2000      	movs	r0, #0
 8003e36:	f04f 0c0a 	mov.w	ip, #10
 8003e3a:	4621      	mov	r1, r4
 8003e3c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003e40:	3b30      	subs	r3, #48	; 0x30
 8003e42:	2b09      	cmp	r3, #9
 8003e44:	d94e      	bls.n	8003ee4 <_vfiprintf_r+0x1c4>
 8003e46:	b1b0      	cbz	r0, 8003e76 <_vfiprintf_r+0x156>
 8003e48:	9207      	str	r2, [sp, #28]
 8003e4a:	e014      	b.n	8003e76 <_vfiprintf_r+0x156>
 8003e4c:	eba0 0308 	sub.w	r3, r0, r8
 8003e50:	fa09 f303 	lsl.w	r3, r9, r3
 8003e54:	4313      	orrs	r3, r2
 8003e56:	9304      	str	r3, [sp, #16]
 8003e58:	46a2      	mov	sl, r4
 8003e5a:	e7d2      	b.n	8003e02 <_vfiprintf_r+0xe2>
 8003e5c:	9b03      	ldr	r3, [sp, #12]
 8003e5e:	1d19      	adds	r1, r3, #4
 8003e60:	681b      	ldr	r3, [r3, #0]
 8003e62:	9103      	str	r1, [sp, #12]
 8003e64:	2b00      	cmp	r3, #0
 8003e66:	bfbb      	ittet	lt
 8003e68:	425b      	neglt	r3, r3
 8003e6a:	f042 0202 	orrlt.w	r2, r2, #2
 8003e6e:	9307      	strge	r3, [sp, #28]
 8003e70:	9307      	strlt	r3, [sp, #28]
 8003e72:	bfb8      	it	lt
 8003e74:	9204      	strlt	r2, [sp, #16]
 8003e76:	7823      	ldrb	r3, [r4, #0]
 8003e78:	2b2e      	cmp	r3, #46	; 0x2e
 8003e7a:	d10c      	bne.n	8003e96 <_vfiprintf_r+0x176>
 8003e7c:	7863      	ldrb	r3, [r4, #1]
 8003e7e:	2b2a      	cmp	r3, #42	; 0x2a
 8003e80:	d135      	bne.n	8003eee <_vfiprintf_r+0x1ce>
 8003e82:	9b03      	ldr	r3, [sp, #12]
 8003e84:	1d1a      	adds	r2, r3, #4
 8003e86:	681b      	ldr	r3, [r3, #0]
 8003e88:	9203      	str	r2, [sp, #12]
 8003e8a:	2b00      	cmp	r3, #0
 8003e8c:	bfb8      	it	lt
 8003e8e:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8003e92:	3402      	adds	r4, #2
 8003e94:	9305      	str	r3, [sp, #20]
 8003e96:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8003f7c <_vfiprintf_r+0x25c>
 8003e9a:	7821      	ldrb	r1, [r4, #0]
 8003e9c:	2203      	movs	r2, #3
 8003e9e:	4650      	mov	r0, sl
 8003ea0:	f7fc f9be 	bl	8000220 <memchr>
 8003ea4:	b140      	cbz	r0, 8003eb8 <_vfiprintf_r+0x198>
 8003ea6:	2340      	movs	r3, #64	; 0x40
 8003ea8:	eba0 000a 	sub.w	r0, r0, sl
 8003eac:	fa03 f000 	lsl.w	r0, r3, r0
 8003eb0:	9b04      	ldr	r3, [sp, #16]
 8003eb2:	4303      	orrs	r3, r0
 8003eb4:	3401      	adds	r4, #1
 8003eb6:	9304      	str	r3, [sp, #16]
 8003eb8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003ebc:	482c      	ldr	r0, [pc, #176]	; (8003f70 <_vfiprintf_r+0x250>)
 8003ebe:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003ec2:	2206      	movs	r2, #6
 8003ec4:	f7fc f9ac 	bl	8000220 <memchr>
 8003ec8:	2800      	cmp	r0, #0
 8003eca:	d03f      	beq.n	8003f4c <_vfiprintf_r+0x22c>
 8003ecc:	4b29      	ldr	r3, [pc, #164]	; (8003f74 <_vfiprintf_r+0x254>)
 8003ece:	bb1b      	cbnz	r3, 8003f18 <_vfiprintf_r+0x1f8>
 8003ed0:	9b03      	ldr	r3, [sp, #12]
 8003ed2:	3307      	adds	r3, #7
 8003ed4:	f023 0307 	bic.w	r3, r3, #7
 8003ed8:	3308      	adds	r3, #8
 8003eda:	9303      	str	r3, [sp, #12]
 8003edc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ede:	443b      	add	r3, r7
 8003ee0:	9309      	str	r3, [sp, #36]	; 0x24
 8003ee2:	e767      	b.n	8003db4 <_vfiprintf_r+0x94>
 8003ee4:	fb0c 3202 	mla	r2, ip, r2, r3
 8003ee8:	460c      	mov	r4, r1
 8003eea:	2001      	movs	r0, #1
 8003eec:	e7a5      	b.n	8003e3a <_vfiprintf_r+0x11a>
 8003eee:	2300      	movs	r3, #0
 8003ef0:	3401      	adds	r4, #1
 8003ef2:	9305      	str	r3, [sp, #20]
 8003ef4:	4619      	mov	r1, r3
 8003ef6:	f04f 0c0a 	mov.w	ip, #10
 8003efa:	4620      	mov	r0, r4
 8003efc:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003f00:	3a30      	subs	r2, #48	; 0x30
 8003f02:	2a09      	cmp	r2, #9
 8003f04:	d903      	bls.n	8003f0e <_vfiprintf_r+0x1ee>
 8003f06:	2b00      	cmp	r3, #0
 8003f08:	d0c5      	beq.n	8003e96 <_vfiprintf_r+0x176>
 8003f0a:	9105      	str	r1, [sp, #20]
 8003f0c:	e7c3      	b.n	8003e96 <_vfiprintf_r+0x176>
 8003f0e:	fb0c 2101 	mla	r1, ip, r1, r2
 8003f12:	4604      	mov	r4, r0
 8003f14:	2301      	movs	r3, #1
 8003f16:	e7f0      	b.n	8003efa <_vfiprintf_r+0x1da>
 8003f18:	ab03      	add	r3, sp, #12
 8003f1a:	9300      	str	r3, [sp, #0]
 8003f1c:	462a      	mov	r2, r5
 8003f1e:	4b16      	ldr	r3, [pc, #88]	; (8003f78 <_vfiprintf_r+0x258>)
 8003f20:	a904      	add	r1, sp, #16
 8003f22:	4630      	mov	r0, r6
 8003f24:	f3af 8000 	nop.w
 8003f28:	4607      	mov	r7, r0
 8003f2a:	1c78      	adds	r0, r7, #1
 8003f2c:	d1d6      	bne.n	8003edc <_vfiprintf_r+0x1bc>
 8003f2e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8003f30:	07d9      	lsls	r1, r3, #31
 8003f32:	d405      	bmi.n	8003f40 <_vfiprintf_r+0x220>
 8003f34:	89ab      	ldrh	r3, [r5, #12]
 8003f36:	059a      	lsls	r2, r3, #22
 8003f38:	d402      	bmi.n	8003f40 <_vfiprintf_r+0x220>
 8003f3a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8003f3c:	f7ff fd7f 	bl	8003a3e <__retarget_lock_release_recursive>
 8003f40:	89ab      	ldrh	r3, [r5, #12]
 8003f42:	065b      	lsls	r3, r3, #25
 8003f44:	f53f af12 	bmi.w	8003d6c <_vfiprintf_r+0x4c>
 8003f48:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003f4a:	e711      	b.n	8003d70 <_vfiprintf_r+0x50>
 8003f4c:	ab03      	add	r3, sp, #12
 8003f4e:	9300      	str	r3, [sp, #0]
 8003f50:	462a      	mov	r2, r5
 8003f52:	4b09      	ldr	r3, [pc, #36]	; (8003f78 <_vfiprintf_r+0x258>)
 8003f54:	a904      	add	r1, sp, #16
 8003f56:	4630      	mov	r0, r6
 8003f58:	f000 f880 	bl	800405c <_printf_i>
 8003f5c:	e7e4      	b.n	8003f28 <_vfiprintf_r+0x208>
 8003f5e:	bf00      	nop
 8003f60:	0800491c 	stmdaeq	r0, {r2, r3, r4, r8, fp, lr}
 8003f64:	0800493c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, lr}
 8003f68:	080048fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, fp, lr}
 8003f6c:	0800495c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp, lr}
 8003f70:	08004966 	stmdaeq	r0, {r1, r2, r5, r6, r8, fp, lr}
 8003f74:	00000000 	andeq	r0, r0, r0
 8003f78:	08003cfb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, sl, fp, ip, sp}
 8003f7c:	08004962 	stmdaeq	r0, {r1, r5, r6, r8, fp, lr}

08003f80 <_printf_common>:
 8003f80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003f84:	4616      	mov	r6, r2
 8003f86:	4699      	mov	r9, r3
 8003f88:	688a      	ldr	r2, [r1, #8]
 8003f8a:	690b      	ldr	r3, [r1, #16]
 8003f8c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003f90:	4293      	cmp	r3, r2
 8003f92:	bfb8      	it	lt
 8003f94:	4613      	movlt	r3, r2
 8003f96:	6033      	str	r3, [r6, #0]
 8003f98:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003f9c:	4607      	mov	r7, r0
 8003f9e:	460c      	mov	r4, r1
 8003fa0:	b10a      	cbz	r2, 8003fa6 <_printf_common+0x26>
 8003fa2:	3301      	adds	r3, #1
 8003fa4:	6033      	str	r3, [r6, #0]
 8003fa6:	6823      	ldr	r3, [r4, #0]
 8003fa8:	0699      	lsls	r1, r3, #26
 8003faa:	bf42      	ittt	mi
 8003fac:	6833      	ldrmi	r3, [r6, #0]
 8003fae:	3302      	addmi	r3, #2
 8003fb0:	6033      	strmi	r3, [r6, #0]
 8003fb2:	6825      	ldr	r5, [r4, #0]
 8003fb4:	f015 0506 	ands.w	r5, r5, #6
 8003fb8:	d106      	bne.n	8003fc8 <_printf_common+0x48>
 8003fba:	f104 0a19 	add.w	sl, r4, #25
 8003fbe:	68e3      	ldr	r3, [r4, #12]
 8003fc0:	6832      	ldr	r2, [r6, #0]
 8003fc2:	1a9b      	subs	r3, r3, r2
 8003fc4:	42ab      	cmp	r3, r5
 8003fc6:	dc26      	bgt.n	8004016 <_printf_common+0x96>
 8003fc8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003fcc:	1e13      	subs	r3, r2, #0
 8003fce:	6822      	ldr	r2, [r4, #0]
 8003fd0:	bf18      	it	ne
 8003fd2:	2301      	movne	r3, #1
 8003fd4:	0692      	lsls	r2, r2, #26
 8003fd6:	d42b      	bmi.n	8004030 <_printf_common+0xb0>
 8003fd8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003fdc:	4649      	mov	r1, r9
 8003fde:	4638      	mov	r0, r7
 8003fe0:	47c0      	blx	r8
 8003fe2:	3001      	adds	r0, #1
 8003fe4:	d01e      	beq.n	8004024 <_printf_common+0xa4>
 8003fe6:	6823      	ldr	r3, [r4, #0]
 8003fe8:	68e5      	ldr	r5, [r4, #12]
 8003fea:	6832      	ldr	r2, [r6, #0]
 8003fec:	f003 0306 	and.w	r3, r3, #6
 8003ff0:	2b04      	cmp	r3, #4
 8003ff2:	bf08      	it	eq
 8003ff4:	1aad      	subeq	r5, r5, r2
 8003ff6:	68a3      	ldr	r3, [r4, #8]
 8003ff8:	6922      	ldr	r2, [r4, #16]
 8003ffa:	bf0c      	ite	eq
 8003ffc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004000:	2500      	movne	r5, #0
 8004002:	4293      	cmp	r3, r2
 8004004:	bfc4      	itt	gt
 8004006:	1a9b      	subgt	r3, r3, r2
 8004008:	18ed      	addgt	r5, r5, r3
 800400a:	2600      	movs	r6, #0
 800400c:	341a      	adds	r4, #26
 800400e:	42b5      	cmp	r5, r6
 8004010:	d11a      	bne.n	8004048 <_printf_common+0xc8>
 8004012:	2000      	movs	r0, #0
 8004014:	e008      	b.n	8004028 <_printf_common+0xa8>
 8004016:	2301      	movs	r3, #1
 8004018:	4652      	mov	r2, sl
 800401a:	4649      	mov	r1, r9
 800401c:	4638      	mov	r0, r7
 800401e:	47c0      	blx	r8
 8004020:	3001      	adds	r0, #1
 8004022:	d103      	bne.n	800402c <_printf_common+0xac>
 8004024:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004028:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800402c:	3501      	adds	r5, #1
 800402e:	e7c6      	b.n	8003fbe <_printf_common+0x3e>
 8004030:	18e1      	adds	r1, r4, r3
 8004032:	1c5a      	adds	r2, r3, #1
 8004034:	2030      	movs	r0, #48	; 0x30
 8004036:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800403a:	4422      	add	r2, r4
 800403c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8004040:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004044:	3302      	adds	r3, #2
 8004046:	e7c7      	b.n	8003fd8 <_printf_common+0x58>
 8004048:	2301      	movs	r3, #1
 800404a:	4622      	mov	r2, r4
 800404c:	4649      	mov	r1, r9
 800404e:	4638      	mov	r0, r7
 8004050:	47c0      	blx	r8
 8004052:	3001      	adds	r0, #1
 8004054:	d0e6      	beq.n	8004024 <_printf_common+0xa4>
 8004056:	3601      	adds	r6, #1
 8004058:	e7d9      	b.n	800400e <_printf_common+0x8e>
	...

0800405c <_printf_i>:
 800405c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004060:	7e0f      	ldrb	r7, [r1, #24]
 8004062:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8004064:	2f78      	cmp	r7, #120	; 0x78
 8004066:	4691      	mov	r9, r2
 8004068:	4680      	mov	r8, r0
 800406a:	460c      	mov	r4, r1
 800406c:	469a      	mov	sl, r3
 800406e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8004072:	d807      	bhi.n	8004084 <_printf_i+0x28>
 8004074:	2f62      	cmp	r7, #98	; 0x62
 8004076:	d80a      	bhi.n	800408e <_printf_i+0x32>
 8004078:	2f00      	cmp	r7, #0
 800407a:	f000 80d8 	beq.w	800422e <_printf_i+0x1d2>
 800407e:	2f58      	cmp	r7, #88	; 0x58
 8004080:	f000 80a3 	beq.w	80041ca <_printf_i+0x16e>
 8004084:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004088:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 800408c:	e03a      	b.n	8004104 <_printf_i+0xa8>
 800408e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8004092:	2b15      	cmp	r3, #21
 8004094:	d8f6      	bhi.n	8004084 <_printf_i+0x28>
 8004096:	a101      	add	r1, pc, #4	; (adr r1, 800409c <_printf_i+0x40>)
 8004098:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 800409c:	080040f5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, lr}
 80040a0:	08004109 	stmdaeq	r0, {r0, r3, r8, lr}
 80040a4:	08004085 	stmdaeq	r0, {r0, r2, r7, lr}
 80040a8:	08004085 	stmdaeq	r0, {r0, r2, r7, lr}
 80040ac:	08004085 	stmdaeq	r0, {r0, r2, r7, lr}
 80040b0:	08004085 	stmdaeq	r0, {r0, r2, r7, lr}
 80040b4:	08004109 	stmdaeq	r0, {r0, r3, r8, lr}
 80040b8:	08004085 	stmdaeq	r0, {r0, r2, r7, lr}
 80040bc:	08004085 	stmdaeq	r0, {r0, r2, r7, lr}
 80040c0:	08004085 	stmdaeq	r0, {r0, r2, r7, lr}
 80040c4:	08004085 	stmdaeq	r0, {r0, r2, r7, lr}
 80040c8:	08004215 	stmdaeq	r0, {r0, r2, r4, r9, lr}
 80040cc:	08004139 	stmdaeq	r0, {r0, r3, r4, r5, r8, lr}
 80040d0:	080041f7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r7, r8, lr}
 80040d4:	08004085 	stmdaeq	r0, {r0, r2, r7, lr}
 80040d8:	08004085 	stmdaeq	r0, {r0, r2, r7, lr}
 80040dc:	08004237 	stmdaeq	r0, {r0, r1, r2, r4, r5, r9, lr}
 80040e0:	08004085 	stmdaeq	r0, {r0, r2, r7, lr}
 80040e4:	08004139 	stmdaeq	r0, {r0, r3, r4, r5, r8, lr}
 80040e8:	08004085 	stmdaeq	r0, {r0, r2, r7, lr}
 80040ec:	08004085 	stmdaeq	r0, {r0, r2, r7, lr}
 80040f0:	080041ff 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80040f4:	682b      	ldr	r3, [r5, #0]
 80040f6:	1d1a      	adds	r2, r3, #4
 80040f8:	681b      	ldr	r3, [r3, #0]
 80040fa:	602a      	str	r2, [r5, #0]
 80040fc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004100:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004104:	2301      	movs	r3, #1
 8004106:	e0a3      	b.n	8004250 <_printf_i+0x1f4>
 8004108:	6820      	ldr	r0, [r4, #0]
 800410a:	6829      	ldr	r1, [r5, #0]
 800410c:	0606      	lsls	r6, r0, #24
 800410e:	f101 0304 	add.w	r3, r1, #4
 8004112:	d50a      	bpl.n	800412a <_printf_i+0xce>
 8004114:	680e      	ldr	r6, [r1, #0]
 8004116:	602b      	str	r3, [r5, #0]
 8004118:	2e00      	cmp	r6, #0
 800411a:	da03      	bge.n	8004124 <_printf_i+0xc8>
 800411c:	232d      	movs	r3, #45	; 0x2d
 800411e:	4276      	negs	r6, r6
 8004120:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004124:	485e      	ldr	r0, [pc, #376]	; (80042a0 <_printf_i+0x244>)
 8004126:	230a      	movs	r3, #10
 8004128:	e019      	b.n	800415e <_printf_i+0x102>
 800412a:	680e      	ldr	r6, [r1, #0]
 800412c:	602b      	str	r3, [r5, #0]
 800412e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8004132:	bf18      	it	ne
 8004134:	b236      	sxthne	r6, r6
 8004136:	e7ef      	b.n	8004118 <_printf_i+0xbc>
 8004138:	682b      	ldr	r3, [r5, #0]
 800413a:	6820      	ldr	r0, [r4, #0]
 800413c:	1d19      	adds	r1, r3, #4
 800413e:	6029      	str	r1, [r5, #0]
 8004140:	0601      	lsls	r1, r0, #24
 8004142:	d501      	bpl.n	8004148 <_printf_i+0xec>
 8004144:	681e      	ldr	r6, [r3, #0]
 8004146:	e002      	b.n	800414e <_printf_i+0xf2>
 8004148:	0646      	lsls	r6, r0, #25
 800414a:	d5fb      	bpl.n	8004144 <_printf_i+0xe8>
 800414c:	881e      	ldrh	r6, [r3, #0]
 800414e:	4854      	ldr	r0, [pc, #336]	; (80042a0 <_printf_i+0x244>)
 8004150:	2f6f      	cmp	r7, #111	; 0x6f
 8004152:	bf0c      	ite	eq
 8004154:	2308      	moveq	r3, #8
 8004156:	230a      	movne	r3, #10
 8004158:	2100      	movs	r1, #0
 800415a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800415e:	6865      	ldr	r5, [r4, #4]
 8004160:	60a5      	str	r5, [r4, #8]
 8004162:	2d00      	cmp	r5, #0
 8004164:	bfa2      	ittt	ge
 8004166:	6821      	ldrge	r1, [r4, #0]
 8004168:	f021 0104 	bicge.w	r1, r1, #4
 800416c:	6021      	strge	r1, [r4, #0]
 800416e:	b90e      	cbnz	r6, 8004174 <_printf_i+0x118>
 8004170:	2d00      	cmp	r5, #0
 8004172:	d04d      	beq.n	8004210 <_printf_i+0x1b4>
 8004174:	4615      	mov	r5, r2
 8004176:	fbb6 f1f3 	udiv	r1, r6, r3
 800417a:	fb03 6711 	mls	r7, r3, r1, r6
 800417e:	5dc7      	ldrb	r7, [r0, r7]
 8004180:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8004184:	4637      	mov	r7, r6
 8004186:	42bb      	cmp	r3, r7
 8004188:	460e      	mov	r6, r1
 800418a:	d9f4      	bls.n	8004176 <_printf_i+0x11a>
 800418c:	2b08      	cmp	r3, #8
 800418e:	d10b      	bne.n	80041a8 <_printf_i+0x14c>
 8004190:	6823      	ldr	r3, [r4, #0]
 8004192:	07de      	lsls	r6, r3, #31
 8004194:	d508      	bpl.n	80041a8 <_printf_i+0x14c>
 8004196:	6923      	ldr	r3, [r4, #16]
 8004198:	6861      	ldr	r1, [r4, #4]
 800419a:	4299      	cmp	r1, r3
 800419c:	bfde      	ittt	le
 800419e:	2330      	movle	r3, #48	; 0x30
 80041a0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80041a4:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 80041a8:	1b52      	subs	r2, r2, r5
 80041aa:	6122      	str	r2, [r4, #16]
 80041ac:	f8cd a000 	str.w	sl, [sp]
 80041b0:	464b      	mov	r3, r9
 80041b2:	aa03      	add	r2, sp, #12
 80041b4:	4621      	mov	r1, r4
 80041b6:	4640      	mov	r0, r8
 80041b8:	f7ff fee2 	bl	8003f80 <_printf_common>
 80041bc:	3001      	adds	r0, #1
 80041be:	d14c      	bne.n	800425a <_printf_i+0x1fe>
 80041c0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80041c4:	b004      	add	sp, #16
 80041c6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80041ca:	4835      	ldr	r0, [pc, #212]	; (80042a0 <_printf_i+0x244>)
 80041cc:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80041d0:	6829      	ldr	r1, [r5, #0]
 80041d2:	6823      	ldr	r3, [r4, #0]
 80041d4:	f851 6b04 	ldr.w	r6, [r1], #4
 80041d8:	6029      	str	r1, [r5, #0]
 80041da:	061d      	lsls	r5, r3, #24
 80041dc:	d514      	bpl.n	8004208 <_printf_i+0x1ac>
 80041de:	07df      	lsls	r7, r3, #31
 80041e0:	bf44      	itt	mi
 80041e2:	f043 0320 	orrmi.w	r3, r3, #32
 80041e6:	6023      	strmi	r3, [r4, #0]
 80041e8:	b91e      	cbnz	r6, 80041f2 <_printf_i+0x196>
 80041ea:	6823      	ldr	r3, [r4, #0]
 80041ec:	f023 0320 	bic.w	r3, r3, #32
 80041f0:	6023      	str	r3, [r4, #0]
 80041f2:	2310      	movs	r3, #16
 80041f4:	e7b0      	b.n	8004158 <_printf_i+0xfc>
 80041f6:	6823      	ldr	r3, [r4, #0]
 80041f8:	f043 0320 	orr.w	r3, r3, #32
 80041fc:	6023      	str	r3, [r4, #0]
 80041fe:	2378      	movs	r3, #120	; 0x78
 8004200:	4828      	ldr	r0, [pc, #160]	; (80042a4 <_printf_i+0x248>)
 8004202:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8004206:	e7e3      	b.n	80041d0 <_printf_i+0x174>
 8004208:	0659      	lsls	r1, r3, #25
 800420a:	bf48      	it	mi
 800420c:	b2b6      	uxthmi	r6, r6
 800420e:	e7e6      	b.n	80041de <_printf_i+0x182>
 8004210:	4615      	mov	r5, r2
 8004212:	e7bb      	b.n	800418c <_printf_i+0x130>
 8004214:	682b      	ldr	r3, [r5, #0]
 8004216:	6826      	ldr	r6, [r4, #0]
 8004218:	6961      	ldr	r1, [r4, #20]
 800421a:	1d18      	adds	r0, r3, #4
 800421c:	6028      	str	r0, [r5, #0]
 800421e:	0635      	lsls	r5, r6, #24
 8004220:	681b      	ldr	r3, [r3, #0]
 8004222:	d501      	bpl.n	8004228 <_printf_i+0x1cc>
 8004224:	6019      	str	r1, [r3, #0]
 8004226:	e002      	b.n	800422e <_printf_i+0x1d2>
 8004228:	0670      	lsls	r0, r6, #25
 800422a:	d5fb      	bpl.n	8004224 <_printf_i+0x1c8>
 800422c:	8019      	strh	r1, [r3, #0]
 800422e:	2300      	movs	r3, #0
 8004230:	6123      	str	r3, [r4, #16]
 8004232:	4615      	mov	r5, r2
 8004234:	e7ba      	b.n	80041ac <_printf_i+0x150>
 8004236:	682b      	ldr	r3, [r5, #0]
 8004238:	1d1a      	adds	r2, r3, #4
 800423a:	602a      	str	r2, [r5, #0]
 800423c:	681d      	ldr	r5, [r3, #0]
 800423e:	6862      	ldr	r2, [r4, #4]
 8004240:	2100      	movs	r1, #0
 8004242:	4628      	mov	r0, r5
 8004244:	f7fb ffec 	bl	8000220 <memchr>
 8004248:	b108      	cbz	r0, 800424e <_printf_i+0x1f2>
 800424a:	1b40      	subs	r0, r0, r5
 800424c:	6060      	str	r0, [r4, #4]
 800424e:	6863      	ldr	r3, [r4, #4]
 8004250:	6123      	str	r3, [r4, #16]
 8004252:	2300      	movs	r3, #0
 8004254:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004258:	e7a8      	b.n	80041ac <_printf_i+0x150>
 800425a:	6923      	ldr	r3, [r4, #16]
 800425c:	462a      	mov	r2, r5
 800425e:	4649      	mov	r1, r9
 8004260:	4640      	mov	r0, r8
 8004262:	47d0      	blx	sl
 8004264:	3001      	adds	r0, #1
 8004266:	d0ab      	beq.n	80041c0 <_printf_i+0x164>
 8004268:	6823      	ldr	r3, [r4, #0]
 800426a:	079b      	lsls	r3, r3, #30
 800426c:	d413      	bmi.n	8004296 <_printf_i+0x23a>
 800426e:	68e0      	ldr	r0, [r4, #12]
 8004270:	9b03      	ldr	r3, [sp, #12]
 8004272:	4298      	cmp	r0, r3
 8004274:	bfb8      	it	lt
 8004276:	4618      	movlt	r0, r3
 8004278:	e7a4      	b.n	80041c4 <_printf_i+0x168>
 800427a:	2301      	movs	r3, #1
 800427c:	4632      	mov	r2, r6
 800427e:	4649      	mov	r1, r9
 8004280:	4640      	mov	r0, r8
 8004282:	47d0      	blx	sl
 8004284:	3001      	adds	r0, #1
 8004286:	d09b      	beq.n	80041c0 <_printf_i+0x164>
 8004288:	3501      	adds	r5, #1
 800428a:	68e3      	ldr	r3, [r4, #12]
 800428c:	9903      	ldr	r1, [sp, #12]
 800428e:	1a5b      	subs	r3, r3, r1
 8004290:	42ab      	cmp	r3, r5
 8004292:	dcf2      	bgt.n	800427a <_printf_i+0x21e>
 8004294:	e7eb      	b.n	800426e <_printf_i+0x212>
 8004296:	2500      	movs	r5, #0
 8004298:	f104 0619 	add.w	r6, r4, #25
 800429c:	e7f5      	b.n	800428a <_printf_i+0x22e>
 800429e:	bf00      	nop
 80042a0:	0800496d 	stmdaeq	r0, {r0, r2, r3, r5, r6, r8, fp, lr}
 80042a4:	0800497e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, fp, lr}

080042a8 <_sbrk_r>:
 80042a8:	b538      	push	{r3, r4, r5, lr}
 80042aa:	4d06      	ldr	r5, [pc, #24]	; (80042c4 <_sbrk_r+0x1c>)
 80042ac:	2300      	movs	r3, #0
 80042ae:	4604      	mov	r4, r0
 80042b0:	4608      	mov	r0, r1
 80042b2:	602b      	str	r3, [r5, #0]
 80042b4:	f7ff f804 	bl	80032c0 <_sbrk>
 80042b8:	1c43      	adds	r3, r0, #1
 80042ba:	d102      	bne.n	80042c2 <_sbrk_r+0x1a>
 80042bc:	682b      	ldr	r3, [r5, #0]
 80042be:	b103      	cbz	r3, 80042c2 <_sbrk_r+0x1a>
 80042c0:	6023      	str	r3, [r4, #0]
 80042c2:	bd38      	pop	{r3, r4, r5, pc}
 80042c4:	20008998 	mulcs	r0, r8, r9

080042c8 <__sread>:
 80042c8:	b510      	push	{r4, lr}
 80042ca:	460c      	mov	r4, r1
 80042cc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80042d0:	f000 f8a0 	bl	8004414 <_read_r>
 80042d4:	2800      	cmp	r0, #0
 80042d6:	bfab      	itete	ge
 80042d8:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 80042da:	89a3      	ldrhlt	r3, [r4, #12]
 80042dc:	181b      	addge	r3, r3, r0
 80042de:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 80042e2:	bfac      	ite	ge
 80042e4:	6563      	strge	r3, [r4, #84]	; 0x54
 80042e6:	81a3      	strhlt	r3, [r4, #12]
 80042e8:	bd10      	pop	{r4, pc}

080042ea <__swrite>:
 80042ea:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80042ee:	461f      	mov	r7, r3
 80042f0:	898b      	ldrh	r3, [r1, #12]
 80042f2:	05db      	lsls	r3, r3, #23
 80042f4:	4605      	mov	r5, r0
 80042f6:	460c      	mov	r4, r1
 80042f8:	4616      	mov	r6, r2
 80042fa:	d505      	bpl.n	8004308 <__swrite+0x1e>
 80042fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8004300:	2302      	movs	r3, #2
 8004302:	2200      	movs	r2, #0
 8004304:	f000 f868 	bl	80043d8 <_lseek_r>
 8004308:	89a3      	ldrh	r3, [r4, #12]
 800430a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800430e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8004312:	81a3      	strh	r3, [r4, #12]
 8004314:	4632      	mov	r2, r6
 8004316:	463b      	mov	r3, r7
 8004318:	4628      	mov	r0, r5
 800431a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800431e:	f000 b817 	b.w	8004350 <_write_r>

08004322 <__sseek>:
 8004322:	b510      	push	{r4, lr}
 8004324:	460c      	mov	r4, r1
 8004326:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800432a:	f000 f855 	bl	80043d8 <_lseek_r>
 800432e:	1c43      	adds	r3, r0, #1
 8004330:	89a3      	ldrh	r3, [r4, #12]
 8004332:	bf15      	itete	ne
 8004334:	6560      	strne	r0, [r4, #84]	; 0x54
 8004336:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800433a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800433e:	81a3      	strheq	r3, [r4, #12]
 8004340:	bf18      	it	ne
 8004342:	81a3      	strhne	r3, [r4, #12]
 8004344:	bd10      	pop	{r4, pc}

08004346 <__sclose>:
 8004346:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800434a:	f000 b813 	b.w	8004374 <_close_r>
	...

08004350 <_write_r>:
 8004350:	b538      	push	{r3, r4, r5, lr}
 8004352:	4d07      	ldr	r5, [pc, #28]	; (8004370 <_write_r+0x20>)
 8004354:	4604      	mov	r4, r0
 8004356:	4608      	mov	r0, r1
 8004358:	4611      	mov	r1, r2
 800435a:	2200      	movs	r2, #0
 800435c:	602a      	str	r2, [r5, #0]
 800435e:	461a      	mov	r2, r3
 8004360:	f7fe ffe2 	bl	8003328 <_write>
 8004364:	1c43      	adds	r3, r0, #1
 8004366:	d102      	bne.n	800436e <_write_r+0x1e>
 8004368:	682b      	ldr	r3, [r5, #0]
 800436a:	b103      	cbz	r3, 800436e <_write_r+0x1e>
 800436c:	6023      	str	r3, [r4, #0]
 800436e:	bd38      	pop	{r3, r4, r5, pc}
 8004370:	20008998 	mulcs	r0, r8, r9

08004374 <_close_r>:
 8004374:	b538      	push	{r3, r4, r5, lr}
 8004376:	4d06      	ldr	r5, [pc, #24]	; (8004390 <_close_r+0x1c>)
 8004378:	2300      	movs	r3, #0
 800437a:	4604      	mov	r4, r0
 800437c:	4608      	mov	r0, r1
 800437e:	602b      	str	r3, [r5, #0]
 8004380:	f7fe ffe0 	bl	8003344 <_close>
 8004384:	1c43      	adds	r3, r0, #1
 8004386:	d102      	bne.n	800438e <_close_r+0x1a>
 8004388:	682b      	ldr	r3, [r5, #0]
 800438a:	b103      	cbz	r3, 800438e <_close_r+0x1a>
 800438c:	6023      	str	r3, [r4, #0]
 800438e:	bd38      	pop	{r3, r4, r5, pc}
 8004390:	20008998 	mulcs	r0, r8, r9

08004394 <_fstat_r>:
 8004394:	b538      	push	{r3, r4, r5, lr}
 8004396:	4d07      	ldr	r5, [pc, #28]	; (80043b4 <_fstat_r+0x20>)
 8004398:	2300      	movs	r3, #0
 800439a:	4604      	mov	r4, r0
 800439c:	4608      	mov	r0, r1
 800439e:	4611      	mov	r1, r2
 80043a0:	602b      	str	r3, [r5, #0]
 80043a2:	f7fe ffd2 	bl	800334a <_fstat>
 80043a6:	1c43      	adds	r3, r0, #1
 80043a8:	d102      	bne.n	80043b0 <_fstat_r+0x1c>
 80043aa:	682b      	ldr	r3, [r5, #0]
 80043ac:	b103      	cbz	r3, 80043b0 <_fstat_r+0x1c>
 80043ae:	6023      	str	r3, [r4, #0]
 80043b0:	bd38      	pop	{r3, r4, r5, pc}
 80043b2:	bf00      	nop
 80043b4:	20008998 	mulcs	r0, r8, r9

080043b8 <_isatty_r>:
 80043b8:	b538      	push	{r3, r4, r5, lr}
 80043ba:	4d06      	ldr	r5, [pc, #24]	; (80043d4 <_isatty_r+0x1c>)
 80043bc:	2300      	movs	r3, #0
 80043be:	4604      	mov	r4, r0
 80043c0:	4608      	mov	r0, r1
 80043c2:	602b      	str	r3, [r5, #0]
 80043c4:	f7fe ffc6 	bl	8003354 <_isatty>
 80043c8:	1c43      	adds	r3, r0, #1
 80043ca:	d102      	bne.n	80043d2 <_isatty_r+0x1a>
 80043cc:	682b      	ldr	r3, [r5, #0]
 80043ce:	b103      	cbz	r3, 80043d2 <_isatty_r+0x1a>
 80043d0:	6023      	str	r3, [r4, #0]
 80043d2:	bd38      	pop	{r3, r4, r5, pc}
 80043d4:	20008998 	mulcs	r0, r8, r9

080043d8 <_lseek_r>:
 80043d8:	b538      	push	{r3, r4, r5, lr}
 80043da:	4d07      	ldr	r5, [pc, #28]	; (80043f8 <_lseek_r+0x20>)
 80043dc:	4604      	mov	r4, r0
 80043de:	4608      	mov	r0, r1
 80043e0:	4611      	mov	r1, r2
 80043e2:	2200      	movs	r2, #0
 80043e4:	602a      	str	r2, [r5, #0]
 80043e6:	461a      	mov	r2, r3
 80043e8:	f7fe ffb6 	bl	8003358 <_lseek>
 80043ec:	1c43      	adds	r3, r0, #1
 80043ee:	d102      	bne.n	80043f6 <_lseek_r+0x1e>
 80043f0:	682b      	ldr	r3, [r5, #0]
 80043f2:	b103      	cbz	r3, 80043f6 <_lseek_r+0x1e>
 80043f4:	6023      	str	r3, [r4, #0]
 80043f6:	bd38      	pop	{r3, r4, r5, pc}
 80043f8:	20008998 	mulcs	r0, r8, r9

080043fc <__malloc_lock>:
 80043fc:	4801      	ldr	r0, [pc, #4]	; (8004404 <__malloc_lock+0x8>)
 80043fe:	f7ff bb1d 	b.w	8003a3c <__retarget_lock_acquire_recursive>
 8004402:	bf00      	nop
 8004404:	2000898c 	andcs	r8, r0, ip, lsl #19

08004408 <__malloc_unlock>:
 8004408:	4801      	ldr	r0, [pc, #4]	; (8004410 <__malloc_unlock+0x8>)
 800440a:	f7ff bb18 	b.w	8003a3e <__retarget_lock_release_recursive>
 800440e:	bf00      	nop
 8004410:	2000898c 	andcs	r8, r0, ip, lsl #19

08004414 <_read_r>:
 8004414:	b538      	push	{r3, r4, r5, lr}
 8004416:	4d07      	ldr	r5, [pc, #28]	; (8004434 <_read_r+0x20>)
 8004418:	4604      	mov	r4, r0
 800441a:	4608      	mov	r0, r1
 800441c:	4611      	mov	r1, r2
 800441e:	2200      	movs	r2, #0
 8004420:	602a      	str	r2, [r5, #0]
 8004422:	461a      	mov	r2, r3
 8004424:	f7fe ff70 	bl	8003308 <_read>
 8004428:	1c43      	adds	r3, r0, #1
 800442a:	d102      	bne.n	8004432 <_read_r+0x1e>
 800442c:	682b      	ldr	r3, [r5, #0]
 800442e:	b103      	cbz	r3, 8004432 <_read_r+0x1e>
 8004430:	6023      	str	r3, [r4, #0]
 8004432:	bd38      	pop	{r3, r4, r5, pc}
 8004434:	20008998 	mulcs	r0, r8, r9

08004438 <_init>:
 8004438:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800443a:	bf00      	nop
 800443c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800443e:	bc08      	pop	{r3}
 8004440:	469e      	mov	lr, r3
 8004442:	4770      	bx	lr

08004444 <_fini>:
 8004444:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004446:	bf00      	nop
 8004448:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800444a:	bc08      	pop	{r3}
 800444c:	469e      	mov	lr, r3
 800444e:	4770      	bx	lr

Disassembly of section .rodata:

08004450 <__func__.0-0x68>:
 8004450:	6e69616d 	powvsez	f6, f1, #5.0
 8004454:	7361745f 	cmnvc	r1, #1593835520	; 0x5f000000
 8004458:	0000006b 	andeq	r0, r0, fp, rrx
 800445c:	6e69616d 	powvsez	f6, f1, #5.0
 8004460:	73617420 	cmnvc	r1, #32, 8	; 0x20000000
 8004464:	7263206b 	rsbvc	r2, r3, #107	; 0x6b
 8004468:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
 800446c:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
 8004470:	2864656c 	stmdacs	r4!, {r2, r3, r5, r6, r8, sl, sp, lr}^
 8004474:	2e296425 	cdpcs	4, 2, cr6, cr9, cr5, {1}
 8004478:	00000a0d 	andeq	r0, r0, sp, lsl #20
 800447c:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
 8004480:	6874206f 	ldmdavs	r4!, {r0, r1, r2, r3, r5, r6, sp}^
 8004484:	69207369 	stmdbvs	r0!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}
 8004488:	72462073 	subvc	r2, r6, #115	; 0x73
 800448c:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
 8004490:	0d2e534f 	stceq	3, cr5, [lr, #-316]!	; 0xfffffec4
 8004494:	00000000 	andeq	r0, r0, r0
 8004498:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
 800449c:	6571206f 	ldrbvs	r2, [r1, #-111]!	; 0xffffff91
 80044a0:	0d2e756d 	cfstr32eq	mvfx7, [lr, #-436]!	; 0xfffffe4c
 80044a4:	00000000 	andeq	r0, r0, r0
 80044a8:	73696874 	cmnvc	r9, #116, 16	; 0x740000
 80044ac:	20736920 	rsbscs	r6, r3, r0, lsr #18
 80044b0:	0d2e7325 	stceq	3, cr7, [lr, #-148]!	; 0xffffff6c
 80044b4:	0000000a 	andeq	r0, r0, sl

080044b8 <__func__.0>:
 80044b8:	65737361 	ldrbvs	r7, [r3, #-865]!	; 0xfffffc9f
 80044bc:	665f7472 			; <UNDEFINED> instruction: 0x665f7472
 80044c0:	656c6961 	strbvs	r6, [ip, #-2401]!	; 0xfffff69f
 80044c4:	00000064 	andeq	r0, r0, r4, rrx

080044c8 <__func__.1>:
 80044c8:	6f727245 	svcvs	0x00727245
 80044cc:	61485f72 	hvcvs	34290	; 0x85f2
 80044d0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 80044d4:	00000072 	andeq	r0, r0, r2, ror r0

080044d8 <__func__.2>:
 80044d8:	67617355 			; <UNDEFINED> instruction: 0x67617355
 80044dc:	75614665 	strbvc	r4, [r1, #-1637]!	; 0xfffff99b
 80044e0:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 80044e4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
 80044e8:	00007265 	andeq	r7, r0, r5, ror #4

080044ec <__func__.3>:
 80044ec:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
 80044f0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 80044f4:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
 80044f8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
 80044fc:	00000000 	andeq	r0, r0, r0

08004500 <__func__.4>:
 8004500:	4d6d654d 	cfstr64mi	mvdx6, [sp, #-308]!	; 0xfffffecc
 8004504:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
 8004508:	61485f65 	cmpvs	r8, r5, ror #30
 800450c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 8004510:	00000072 	andeq	r0, r0, r2, ror r0

08004514 <__func__.6>:
 8004514:	5f494d4e 	svcpl	0x00494d4e
 8004518:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
 800451c:	0072656c 	rsbseq	r6, r2, ip, ror #10
 8004520:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8004528 <__func__.6+0x14>
 8004524:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8004528:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 800452c:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 8004530:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8004534:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8004538:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 800453c:	2f726576 	svccs	0x00726576
 8004540:	2f637253 	svccs	0x00637253
 8004544:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8004548:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 800454c:	61685f78 	smcvs	34296	; 0x85f8
 8004550:	61755f6c 	cmnvs	r5, ip, ror #30
 8004554:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
 8004558:	00000000 	andeq	r0, r0, r0
 800455c:	442f2e2e 	strtmi	r2, [pc], #-3630	; 8004564 <__func__.6+0x50>
 8004560:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 8004564:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 8004568:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 800456c:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 8004570:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 8004574:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 8004578:	2f726576 	svccs	0x00726576
 800457c:	2f637253 	svccs	0x00637253
 8004580:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 8004584:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 8004588:	61685f78 	smcvs	34296	; 0x85f8
 800458c:	70675f6c 	rsbvc	r5, r7, ip, ror #30
 8004590:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
 8004594:	00000000 	andeq	r0, r0, r0
 8004598:	442f2e2e 	strtmi	r2, [pc], #-3630	; 80045a0 <__func__.6+0x8c>
 800459c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 80045a0:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
 80045a4:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
 80045a8:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
 80045ac:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
 80045b0:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
 80045b4:	2f726576 	svccs	0x00726576
 80045b8:	2f637253 	svccs	0x00637253
 80045bc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 80045c0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
 80045c4:	61685f78 	smcvs	34296	; 0x85f8
 80045c8:	6f635f6c 	svcvs	0x00635f6c
 80045cc:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
 80045d0:	0000632e 	andeq	r6, r0, lr, lsr #6

080045d4 <APBPrescTable>:
const uint8_t APBPrescTable[8]  = {0, 0, 0, 0, 1, 2, 3, 4};
 80045d4:	00000000 	andeq	r0, r0, r0
 80045d8:	04030201 	streq	r0, [r3], #-513	; 0xfffffdff
 80045dc:	45584520 	ldrbmi	r4, [r8, #-1312]	; 0xfffffae0
 80045e0:	5445525f 	strbpl	r5, [r5], #-607	; 0xfffffda1
 80045e4:	3a4e5255 	bcc	9398f40 <_siccmram+0x1394528>
 80045e8:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
 80045ec:	20583830 	subscs	r3, r8, r0, lsr r8
 80045f0:	00000a0d 	andeq	r0, r0, sp, lsl #20
 80045f4:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 80045f8:	61745320 	cmnvs	r4, r0, lsr #6
 80045fc:	5b3a6b63 	blpl	8e9f390 <_siccmram+0xe9a978>
 8004600:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8004604:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
 8004608:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
 800460c:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
 8004610:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
 8004614:	000a0d64 	andeq	r0, sl, r4, ror #26
 8004618:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 800461c:	78655420 	stmdavc	r5!, {r5, sl, ip, lr}^
 8004620:	5b3a2074 	blpl	8e8c7f8 <_siccmram+0xe87de0>
 8004624:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 8004628:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
 800462c:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
 8004630:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
 8004634:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
 8004638:	000a0d64 	andeq	r0, sl, r4, ror #26
 800463c:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 8004640:	61745320 	cmnvs	r4, r0, lsr #6
 8004644:	47206b63 	strmi	r6, [r0, -r3, ror #22]!
 8004648:	74776f72 	ldrbtvc	r6, [r7], #-3954	; 0xfffff08e
 800464c:	6f442068 	svcvs	0x00442068
 8004650:	61776e77 	cmnvs	r7, r7, ror lr
 8004654:	253a6472 	ldrcs	r6, [sl, #-1138]!	; 0xfffffb8e
 8004658:	000a0d64 	andeq	r0, sl, r4, ror #26
 800465c:	72614820 	rsbvc	r4, r1, #32, 16	; 0x200000
 8004660:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
 8004664:	4920746c 	stmdbmi	r0!, {r2, r3, r5, r6, sl, ip, sp, lr}
 8004668:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
 800466c:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
 8004670:	44206e6f 	strtmi	r6, [r0], #-3695	; 0xfffff191
 8004674:	20706d75 	rsbscs	r6, r0, r5, ror sp
 8004678:	0000000d 	andeq	r0, r0, sp
 800467c:	61745320 	cmnvs	r4, r0, lsr #6
 8004680:	46206b63 	strtmi	r6, [r0], -r3, ror #22
 8004684:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
 8004688:	0d202020 	stceq	0, cr2, [r0, #-128]!	; 0xffffff80
 800468c:	00000000 	andeq	r0, r0, r0
 8004690:	20305220 	eorscs	r5, r0, r0, lsr #4
 8004694:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8004698:	30257830 	eorcc	r7, r5, r0, lsr r8
 800469c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 80046a0:	0000000a 	andeq	r0, r0, sl
 80046a4:	20315220 	eorscs	r5, r1, r0, lsr #4
 80046a8:	203d2020 	eorscs	r2, sp, r0, lsr #32
 80046ac:	30257830 	eorcc	r7, r5, r0, lsr r8
 80046b0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 80046b4:	0000000a 	andeq	r0, r0, sl
 80046b8:	20325220 	eorscs	r5, r2, r0, lsr #4
 80046bc:	203d2020 	eorscs	r2, sp, r0, lsr #32
 80046c0:	30257830 	eorcc	r7, r5, r0, lsr r8
 80046c4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 80046c8:	0000000a 	andeq	r0, r0, sl
 80046cc:	20335220 	eorscs	r5, r3, r0, lsr #4
 80046d0:	203d2020 	eorscs	r2, sp, r0, lsr #32
 80046d4:	30257830 	eorcc	r7, r5, r0, lsr r8
 80046d8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 80046dc:	0000000a 	andeq	r0, r0, sl
 80046e0:	20345220 	eorscs	r5, r4, r0, lsr #4
 80046e4:	203d2020 	eorscs	r2, sp, r0, lsr #32
 80046e8:	30257830 	eorcc	r7, r5, r0, lsr r8
 80046ec:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 80046f0:	0000000a 	andeq	r0, r0, sl
 80046f4:	20355220 	eorscs	r5, r5, r0, lsr #4
 80046f8:	203d2020 	eorscs	r2, sp, r0, lsr #32
 80046fc:	30257830 	eorcc	r7, r5, r0, lsr r8
 8004700:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8004704:	0000000a 	andeq	r0, r0, sl
 8004708:	20365220 	eorscs	r5, r6, r0, lsr #4
 800470c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8004710:	30257830 	eorcc	r7, r5, r0, lsr r8
 8004714:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8004718:	0000000a 	andeq	r0, r0, sl
 800471c:	20375220 	eorscs	r5, r7, r0, lsr #4
 8004720:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8004724:	30257830 	eorcc	r7, r5, r0, lsr r8
 8004728:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 800472c:	0000000a 	andeq	r0, r0, sl
 8004730:	20385220 	eorscs	r5, r8, r0, lsr #4
 8004734:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8004738:	30257830 	eorcc	r7, r5, r0, lsr r8
 800473c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8004740:	0000000a 	andeq	r0, r0, sl
 8004744:	20395220 	eorscs	r5, r9, r0, lsr #4
 8004748:	203d2020 	eorscs	r2, sp, r0, lsr #32
 800474c:	30257830 	eorcc	r7, r5, r0, lsr r8
 8004750:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8004754:	0000000a 	andeq	r0, r0, sl
 8004758:	30315220 	eorscc	r5, r1, r0, lsr #4
 800475c:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8004760:	30257830 	eorcc	r7, r5, r0, lsr r8
 8004764:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8004768:	0000000a 	andeq	r0, r0, sl
 800476c:	31315220 	teqcc	r1, r0, lsr #4
 8004770:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8004774:	30257830 	eorcc	r7, r5, r0, lsr r8
 8004778:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 800477c:	0000000a 	andeq	r0, r0, sl
 8004780:	32315220 	eorscc	r5, r1, #32, 4
 8004784:	203d2020 	eorscs	r2, sp, r0, lsr #32
 8004788:	30257830 	eorcc	r7, r5, r0, lsr r8
 800478c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 8004790:	0000000a 	andeq	r0, r0, sl
 8004794:	20524c20 	subscs	r4, r2, r0, lsr #24
 8004798:	203d2020 	eorscs	r2, sp, r0, lsr #32
 800479c:	30257830 	eorcc	r7, r5, r0, lsr r8
 80047a0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 80047a4:	0000000a 	andeq	r0, r0, sl
 80047a8:	20435020 	subcs	r5, r3, r0, lsr #32
 80047ac:	203d2020 	eorscs	r2, sp, r0, lsr #32
 80047b0:	30257830 	eorcc	r7, r5, r0, lsr r8
 80047b4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 80047b8:	0000000a 	andeq	r0, r0, sl
 80047bc:	52535020 	subspl	r5, r3, #32
 80047c0:	203d2020 	eorscs	r2, sp, r0, lsr #32
 80047c4:	30257830 	eorcc	r7, r5, r0, lsr r8
 80047c8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
 80047cc:	0000000a 	andeq	r0, r0, sl
 80047d0:	61745320 	cmnvs	r4, r0, lsr #6
 80047d4:	43206b63 			; <UNDEFINED> instruction: 0x43206b63
 80047d8:	3a6c6c61 	bcc	9b1f964 <_siccmram+0x1b1af4c>
 80047dc:	00000020 	andeq	r0, r0, r0, lsr #32
 80047e0:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
 80047e4:	00000020 	andeq	r0, r0, r0, lsr #32
 80047e8:	00000d20 	andeq	r0, r0, r0, lsr #26
 80047ec:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 80047f0:	65522032 	ldrbvs	r2, [r2, #-50]	; 0xffffffce
 80047f4:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 80047f8:	61745320 	cmnvs	r4, r0, lsr #6
 80047fc:	53206b63 			; <UNDEFINED> instruction: 0x53206b63
 8004800:	63656c65 	cmnvs	r5, #25856	; 0x6500
 8004804:	00203a74 	eoreq	r3, r0, r4, ror sl
 8004808:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 800480c:	50535020 	subspl	r5, r3, r0, lsr #32
 8004810:	20202020 	eorcs	r2, r0, r0, lsr #32
 8004814:	20202020 	eorcs	r2, r0, r0, lsr #32
 8004818:	20202020 	eorcs	r2, r0, r0, lsr #32
 800481c:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8004820:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8004824:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8004828:	50534d20 	subspl	r4, r3, r0, lsr #26
 800482c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8004830:	20202020 	eorcs	r2, r0, r0, lsr #32
 8004834:	20202020 	eorcs	r2, r0, r0, lsr #32
 8004838:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 800483c:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8004840:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 8004844:	65522033 	ldrbvs	r2, [r2, #-51]	; 0xffffffcd
 8004848:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 800484c:	646f4d20 	strbtvs	r4, [pc], #-3360	; 8004854 <APBPrescTable+0x280>
 8004850:	65532065 	ldrbvs	r2, [r3, #-101]	; 0xffffff9b
 8004854:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
 8004858:	0020203a 	eoreq	r2, r0, sl, lsr r0
 800485c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 8004860:	72685420 	rsbvc	r5, r8, #32, 8	; 0x20000000
 8004864:	20646165 	rsbcs	r6, r4, r5, ror #2
 8004868:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
 800486c:	20202020 	eorcs	r2, r0, r0, lsr #32
 8004870:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8004874:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8004878:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 800487c:	6f725020 	svcvs	0x00725020
 8004880:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
 8004884:	646f4d20 	strbtvs	r4, [pc], #-3360	; 800488c <APBPrescTable+0x2b8>
 8004888:	20202065 	eorcs	r2, r0, r5, rrx
 800488c:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 8004890:	00000d2e 	andeq	r0, r0, lr, lsr #26
 8004894:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
 8004898:	74532034 	ldrbvc	r2, [r3], #-52	; 0xffffffcc
 800489c:	206b6361 	rsbcs	r6, fp, r1, ror #6
 80048a0:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
 80048a4:	79542065 	ldmdbvc	r4, {r0, r2, r5, r6, sp}^
 80048a8:	203a6570 	eorscs	r6, sl, r0, ror r5
 80048ac:	00202020 	eoreq	r2, r0, r0, lsr #32
 80048b0:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 80048b4:	57203820 	strpl	r3, [r0, -r0, lsr #16]!
 80048b8:	646c726f 	strbtvs	r7, [ip], #-623	; 0xfffffd91
 80048bc:	61724620 	cmnvs	r2, r0, lsr #12
 80048c0:	2020656d 	eorcs	r6, r0, sp, ror #10
 80048c4:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 80048c8:	00000d2e 	andeq	r0, r0, lr, lsr #26
 80048cc:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
 80048d0:	20363220 	eorscs	r3, r6, r0, lsr #4
 80048d4:	6c726f57 	ldclvs	15, cr6, [r2], #-348	; 0xfffffea4
 80048d8:	72462064 	subvc	r2, r6, #100	; 0x64
 80048dc:	20656d61 	rsbcs	r6, r5, r1, ror #26
 80048e0:	5d202020 	stcpl	0, cr2, [r0, #-128]!	; 0xffffff80
 80048e4:	00000d2e 	andeq	r0, r0, lr, lsr #26
 80048e8:	454c4449 	strbmi	r4, [ip, #-1097]	; 0xfffffbb7
 80048ec:	00000000 	andeq	r0, r0, r0
 80048f0:	20726d54 	rsbscs	r6, r2, r4, asr sp
 80048f4:	00637653 	rsbeq	r7, r3, r3, asr r6

080048f8 <_global_impure_ptr>:
 80048f8:	20000018 	andcs	r0, r0, r8, lsl r0

080048fc <__sf_fake_stderr>:
	...

0800491c <__sf_fake_stdin>:
	...

0800493c <__sf_fake_stdout>:
	...
 800495c:	2b302d23 	blcs	8c0fdf0 <_siccmram+0xc0b3d8>
 8004960:	6c680020 	stclvs	0, cr0, [r8], #-128	; 0xffffff80
 8004964:	6665004c 	strbtvs	r0, [r5], -ip, asr #32
 8004968:	47464567 	strbmi	r4, [r6, -r7, ror #10]
 800496c:	32313000 	eorscc	r3, r1, #0
 8004970:	36353433 			; <UNDEFINED> instruction: 0x36353433
 8004974:	41393837 	teqmi	r9, r7, lsr r8
 8004978:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
 800497c:	31300046 	teqcc	r0, r6, asr #32
 8004980:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
 8004984:	39383736 	ldmdbcc	r8!, {r1, r2, r4, r5, r8, r9, sl, ip, sp}
 8004988:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
 800498c:	00006665 	andeq	r6, r0, r5, ror #12

Disassembly of section .ARM:

08004990 <__exidx_start>:
 8004990:	7fffb960 	svcvc	0x00ffb960
 8004994:	00000001 	andeq	r0, r0, r1

Disassembly of section .init_array:

08004998 <__frame_dummy_init_array_entry>:
 8004998:	080001b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8}

Disassembly of section .fini_array:

0800499c <__do_global_dtors_aux_fini_array_entry>:
 800499c:	08000191 	stmdaeq	r0, {r0, r4, r7, r8}

Disassembly of section .data:

20000000 <uwTickFreq>:
HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
20000000:	00000001 	andeq	r0, r0, r1

20000004 <uwTickPrio>:
uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
20000004:	00000010 	andeq	r0, r0, r0, lsl r0

20000008 <SystemCoreClock>:
uint32_t SystemCoreClock = 16000000;
20000008:	00f42400 	rscseq	r2, r4, r0, lsl #8

2000000c <uxTopUsedPriority>:
static const volatile UBaseType_t uxTopUsedPriority = configMAX_PRIORITIES - 1U;
2000000c:	00000004 	andeq	r0, r0, r4

20000010 <uxCriticalNesting>:
static UBaseType_t uxCriticalNesting = 0xaaaaaaaa;
20000010:	aaaaaaaa 	bge	1eaaaac0 <_eccmram+0xeaaaac0>

20000014 <_impure_ptr>:
20000014:	20000018 	andcs	r0, r0, r8, lsl r0

20000018 <impure_data>:
20000018:	00000000 	andeq	r0, r0, r0
2000001c:	0800491c 	stmdaeq	r0, {r2, r3, r4, r8, fp, lr}
20000020:	0800493c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, lr}
20000024:	080048fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, fp, lr}
	...

Disassembly of section .bss:

20000078 <__bss_start__>:
20000078:	00000000 	andeq	r0, r0, r0

2000007c <object.0>:
	...

20000094 <main_task.0>:
20000094:	00000000 	andeq	r0, r0, r0

20000098 <ucHeap>:
	...

20008098 <huart1>:
	...

200080e0 <uwTick>:
__IO uint32_t uwTick;
200080e0:	00000000 	andeq	r0, r0, r0

200080e4 <buffer.0>:
	...

200081e4 <fd_main_stack_base>:
volatile unsigned int fd_main_stack_base = 0;
200081e4:	00000000 	andeq	r0, r0, r0

200081e8 <fd_main_stack_full>:
volatile unsigned int fd_main_stack_full = 0;
200081e8:	00000000 	andeq	r0, r0, r0

200081ec <frame.1>:
	...

2000822c <pxCurrentTCB>:
    portDONT_DISCARD PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
2000822c:	00000000 	andeq	r0, r0, r0

20008230 <pxDelayedTaskList>:
PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;              /**< Points to the delayed task list currently being used. */
20008230:	00000000 	andeq	r0, r0, r0

20008234 <pxOverflowDelayedTaskList>:
PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;      /**< Points to the delayed task list currently being used to hold tasks that have overflowed the current tick count. */
20008234:	00000000 	andeq	r0, r0, r0

20008238 <pxReadyTasksLists>:
	...

200082c4 <uxCurrentNumberOfTasks>:
PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
200082c4:	00000000 	andeq	r0, r0, r0

200082c8 <uxDeletedTasksWaitingCleanUp>:
    PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
200082c8:	00000000 	andeq	r0, r0, r0

200082cc <uxIdleTaskStack.2>:
	...

200084cc <uxSchedulerSuspended>:
PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended = ( UBaseType_t ) 0U;
200084cc:	00000000 	andeq	r0, r0, r0

200084d0 <uxTaskNumber>:
PRIVILEGED_DATA static UBaseType_t uxTaskNumber = ( UBaseType_t ) 0U;
200084d0:	00000000 	andeq	r0, r0, r0

200084d4 <uxTimerTaskStack.0>:
	...

200086d4 <uxTopReadyPriority>:
PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority = tskIDLE_PRIORITY;
200086d4:	00000000 	andeq	r0, r0, r0

200086d8 <xDelayedTaskList1>:
	...

200086f4 <xDelayedTaskList2>:
	...

20008710 <xIdleTaskHandles>:
PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandles[ configNUMBER_OF_CORES ];       /**< Holds the handles of the idle tasks.  The idle tasks are created automatically when the scheduler is started. */
20008710:	00000000 	andeq	r0, r0, r0

20008714 <xIdleTaskTCB.3>:
	...

20008760 <xNextTaskUnblockTime>:
PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime = ( TickType_t ) 0U; /* Initialised to portMAX_DELAY before the scheduler starts. */
20008760:	00000000 	andeq	r0, r0, r0

20008764 <xNumOfOverflows>:
PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows = ( BaseType_t ) 0;
20008764:	00000000 	andeq	r0, r0, r0

20008768 <xPendedTicks>:
PRIVILEGED_DATA static volatile TickType_t xPendedTicks = ( TickType_t ) 0U;
20008768:	00000000 	andeq	r0, r0, r0

2000876c <xPendingReadyList>:
	...

20008788 <xSchedulerRunning>:
PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning = pdFALSE;
20008788:	00000000 	andeq	r0, r0, r0

2000878c <xSuspendedTaskList>:
	...

200087a8 <xTasksWaitingTermination>:
	...

200087c4 <xTickCount>:
PRIVILEGED_DATA static volatile TickType_t xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
200087c4:	00000000 	andeq	r0, r0, r0

200087c8 <xTimerTaskTCB.1>:
	...

20008814 <xYieldPendings>:
PRIVILEGED_DATA static volatile BaseType_t xYieldPendings[ configNUMBER_OF_CORES ] = { pdFALSE };
20008814:	00000000 	andeq	r0, r0, r0

20008818 <pxCurrentTimerList>:
    PRIVILEGED_DATA static List_t * pxCurrentTimerList;
20008818:	00000000 	andeq	r0, r0, r0

2000881c <pxOverflowTimerList>:
    PRIVILEGED_DATA static List_t * pxOverflowTimerList;
2000881c:	00000000 	andeq	r0, r0, r0

20008820 <ucStaticTimerQueueStorage.1>:
	...

200088c0 <xActiveTimerList1>:
	...

200088dc <xActiveTimerList2>:
	...

200088f8 <xLastTime.2>:
200088f8:	00000000 	andeq	r0, r0, r0

200088fc <xStaticTimerQueue.0>:
	...

20008958 <xTimerQueue>:
    PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
20008958:	00000000 	andeq	r0, r0, r0

2000895c <xTimerTaskHandle>:
    PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
2000895c:	00000000 	andeq	r0, r0, r0

20008960 <pxEnd>:
PRIVILEGED_DATA static BlockLink_t * pxEnd = NULL;
20008960:	00000000 	andeq	r0, r0, r0

20008964 <xFreeBytesRemaining>:
PRIVILEGED_DATA static size_t xFreeBytesRemaining = ( size_t ) 0U;
20008964:	00000000 	andeq	r0, r0, r0

20008968 <xMinimumEverFreeBytesRemaining>:
PRIVILEGED_DATA static size_t xMinimumEverFreeBytesRemaining = ( size_t ) 0U;
20008968:	00000000 	andeq	r0, r0, r0

2000896c <xNumberOfSuccessfulAllocations>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulAllocations = ( size_t ) 0U;
2000896c:	00000000 	andeq	r0, r0, r0

20008970 <xNumberOfSuccessfulFrees>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulFrees = ( size_t ) 0U;
20008970:	00000000 	andeq	r0, r0, r0

20008974 <xStart>:
	...

2000897c <ulStoppedTimerCompensation>:
    static uint32_t ulStoppedTimerCompensation = 0;
2000897c:	00000000 	andeq	r0, r0, r0

20008980 <ulTimerCountsForOneTick>:
    static uint32_t ulTimerCountsForOneTick = 0;
20008980:	00000000 	andeq	r0, r0, r0

20008984 <xMaximumPossibleSuppressedTicks>:
    static uint32_t xMaximumPossibleSuppressedTicks = 0;
20008984:	00000000 	andeq	r0, r0, r0

20008988 <__sbrk_heap_end>:
static uint8_t *__sbrk_heap_end = NULL;
20008988:	00000000 	andeq	r0, r0, r0

2000898c <__lock___malloc_recursive_mutex>:
	...

2000898d <__lock___sfp_recursive_mutex>:
	...

2000898e <__lock___sinit_recursive_mutex>:
	...

20008990 <__malloc_free_list>:
20008990:	00000000 	andeq	r0, r0, r0

20008994 <__malloc_sbrk_start>:
20008994:	00000000 	andeq	r0, r0, r0

20008998 <errno>:
20008998:	00000000 	andeq	r0, r0, r0

Disassembly of section ._user_heap_stack:

2000899c <_end-0x4>:
2000899c:	00000000 	andeq	r0, r0, r0

200089a0 <_end>:
	...

200091a0 <_sstack>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
}
   0:	00002f41 	andeq	r2, r0, r1, asr #30
    return __get_MSP();
}

unsigned int fault_dump_bm_stack_start(void) {
    return FD_STACK_START;
}
   4:	61656100 	cmnvs	r5, r0, lsl #2
int _execve(char *name, char **argv, char **env)
{
  (void)name;
  (void)argv;
  (void)env;
  errno = ENOMEM;
   8:	01006962 	tsteq	r0, r2, ror #18
  return -1;
}
   c:	00000025 	andeq	r0, r0, r5, lsr #32
  while (1)
  10:	2d453705 	stclcs	7, cr3, [r5, #-20]	; 0xffffffec
}
  14:	0d06004d 	stceq	0, cr0, [r6, #-308]	; 0xfffffecc

    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	02094d07 	andeq	r4, r9, #448	; 0x1c0
  1c:	0412060a 	ldreq	r0, [r2], #-1546	; 0xfffff9f6

    /* USART1 interrupt Deinit */
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	01150114 	tsteq	r5, r4, lsl r1
  24:	01180317 	tsteq	r8, r7, lsl r3
  /* USER CODE BEGIN USART1_MspDeInit 1 */

  /* USER CODE END USART1_MspDeInit 1 */
  }
}
  28:	011b011a 	tsteq	fp, sl, lsl r1
  2c:	0122011c 			; <UNDEFINED> instruction: 0x0122011c

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00001278 	andeq	r1, r0, r8, ror r2
       4:	00000002 	andeq	r0, r0, r2
  errno = ENOMEM;
       8:	01040000 	mrseq	r0, (UNDEF: 4)
}
       c:	00000621 	andeq	r0, r0, r1, lsr #12
      10:	0003830c 	andeq	r8, r3, ip, lsl #6
      14:	0004e900 	andeq	lr, r4, r0, lsl #18
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	0000060f 	andeq	r0, r0, pc, lsl #12
      30:	00007603 	andeq	r7, r0, r3, lsl #12
    if (status != HAL_OK)
      34:	182b0200 	stmdane	fp!, {r9}
      uwTickFreq = prevTickFreq;
      38:	0000003c 	andeq	r0, r0, ip, lsr r0
      3c:	0d080102 	stfeqs	f0, [r8, #-8]
      40:	02000006 	andeq	r0, r0, #6
      44:	042a0502 	strteq	r0, [sl], #-1282	; 0xfffffafe
    }
      48:	8e030000 	cdphi	0, 0, cr0, cr3, cr0, {0}
                    xMinSize = pxBlock->xBlockSize;
                }

                /* Move to the next block in the chain until the last block is
                 * reached. */
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	02000007 	andeq	r0, r0, #7
            while( pxBlock != pxEnd )
      50:	00561939 	subseq	r1, r6, r9, lsr r9
      54:	02020000 	andeq	r0, r2, #0
                if( pxBlock->xBlockSize > xMaxSize )
      58:	00082807 	andeq	r2, r8, r7, lsl #16
      5c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
                if( pxBlock->xBlockSize < xMinSize )
      60:	0000032d 	andeq	r0, r0, sp, lsr #6
                    xMinSize = pxBlock->xBlockSize;
      64:	0002ef03 	andeq	lr, r2, r3, lsl #30
      68:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
      6c:	00000070 	andeq	r0, r0, r0, ror r0
      70:	c3070402 	movwgt	r0, #29698	; 0x7402
      74:	02000000 	andeq	r0, r0, #0
      78:	03280508 			; <UNDEFINED> instruction: 0x03280508
      7c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
        pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
      80:	0000be07 	andeq	fp, r0, r7, lsl #28
      84:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
      88:	00746e69 	rsbseq	r6, r4, r9, ror #28
      8c:	00008505 	andeq	r8, r0, r5, lsl #10
      90:	07040200 	streq	r0, [r4, -r0, lsl #4]
      94:	000000c8 	andeq	r0, r0, r8, asr #1
      98:	00007803 	andeq	r7, r0, r3, lsl #16
      9c:	13180300 	tstne	r8, #0, 6
    RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;

    if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK) {
        Error_Handler();
    }
}
      a0:	00000030 	andeq	r0, r0, r0, lsr r0
      a4:	00009805 	andeq	r9, r0, r5, lsl #16
      a8:	00980600 	addseq	r0, r8, r0, lsl #12
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	90030000 	andls	r0, r3, r0
      b0:	03000007 	movweq	r0, #7
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	004a1424 	subeq	r1, sl, r4, lsr #8
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	ae050000 	cdpge	0, 0, cr0, cr5, cr0, {0}
      bc:	03000000 	movweq	r0, #0
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	000002f1 	strdeq	r0, [r0], -r1
      c4:	64143003 	ldrvs	r3, [r4], #-3
      c8:	05000000 	streq	r0, [r0, #-0]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
      d0:	0000cb06 	andeq	ip, r0, r6, lsl #22
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	048c0700 	streq	r0, [ip], #1792	; 0x700
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	310901bd 			; <UNDEFINED> instruction: 0x310901bd
      dc:	08000002 	stmdaeq	r0, {r1}
      e0:	0000011c 	andeq	r0, r0, ip, lsl r1
    if (huart->hdmarx != NULL)
      e4:	1201bf04 	andne	fp, r1, #4, 30
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
      f0:	000003b9 			; <UNDEFINED> instruction: 0x000003b9
    huart->TxXferCount = 0x00U;
      f4:	1201c004 	andne	ip, r1, #4
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	000000cb 	andeq	r0, r0, fp, asr #1
    huart->gState  = HAL_UART_STATE_READY;
      fc:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    huart->RxState = HAL_UART_STATE_READY;
     100:	0000037e 	andeq	r0, r0, lr, ror r3
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	1201c104 	andne	ip, r1, #4, 2
    HAL_UART_AbortCpltCallback(huart);
     108:	000000cb 	andeq	r0, r0, fp, asr #1
     10c:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
  uint32_t AbortCplt = 0x01U;
     110:	000003d2 	ldrdeq	r0, [r0], -r2
  if (AbortCplt == 0x01U)
     114:	1201c204 	andne	ip, r1, #4, 4	; 0x40000000
}
     118:	000000cb 	andeq	r0, r0, fp, asr #1
     11c:	090c2302 	stmdbeq	ip, {r1, r8, r9, sp}
     120:	00524353 	subseq	r4, r2, r3, asr r3
  else
  {
    MPU->RBAR = 0x00U;
    MPU->RASR = 0x00U;
  }
}
     124:	1201c304 	andne	ip, r1, #4, 6	; 0x10000000
                    taskYIELD_WITHIN_API();
     128:	000000cb 	andeq	r0, r0, fp, asr #1
     12c:	09102302 	ldmdbeq	r0, {r1, r8, r9, sp}
     130:	00524343 	subseq	r4, r2, r3, asr #6
     134:	1201c404 	andne	ip, r1, #4, 8	; 0x4000000
     138:	000000cb 	andeq	r0, r0, fp, asr #1
            prvUnlockQueue( pxQueue );
     13c:	09142302 	ldmdbeq	r4, {r1, r8, r9, sp}
     140:	00504853 	subseq	r4, r0, r3, asr r8
            ( void ) xTaskResumeAll();
     144:	1201c504 	andne	ip, r1, #4, 10	; 0x1000000
            return errQUEUE_FULL;
     148:	00000241 	andeq	r0, r0, r1, asr #4
                    listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
     14c:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
     150:	0000061b 	andeq	r0, r0, fp, lsl r6
     154:	1201c604 	andne	ip, r1, #4, 12	; 0x400000
     158:	000000cb 	andeq	r0, r0, fp, asr #1
     15c:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
     160:	000004d8 	ldrdeq	r0, [r0], -r8
     164:	1201c704 	andne	ip, r1, #4, 14	; 0x100000
     168:	000000cb 	andeq	r0, r0, fp, asr #1
     16c:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
     170:	0000095b 	andeq	r0, r0, fp, asr r9
     174:	1201c804 	andne	ip, r1, #4, 16	; 0x40000

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
    }
  }
}
     178:	000000cb 	andeq	r0, r0, fp, asr #1
     17c:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
     180:	000003d8 	ldrdeq	r0, [r0], -r8
}
     184:	1201c904 	andne	ip, r1, #4, 18	; 0x10000
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	000000cb 	andeq	r0, r0, fp, asr #1
     18c:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	000003f6 	strdeq	r0, [r0], -r6
     194:	1201ca04 	andne	ip, r1, #4, 20	; 0x4000
     198:	000000cb 	andeq	r0, r0, fp, asr #1
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	08342302 	ldmdaeq	r4!, {r1, r8, r9, sp}
     1a0:	000002ce 	andeq	r0, r0, lr, asr #5
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	1201cb04 	andne	ip, r1, #4, 22	; 0x1000
     1a8:	000000cb 	andeq	r0, r0, fp, asr #1
     1ac:	08382302 	ldmdaeq	r8!, {r1, r8, r9, sp}
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	00000808 	andeq	r0, r0, r8, lsl #16
     1b4:	1201cc04 	andne	ip, r1, #4, 24	; 0x400
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	000000cb 	andeq	r0, r0, fp, asr #1
     1bc:	093c2302 	ldmdbeq	ip!, {r1, r8, r9, sp}
     1c0:	00524650 	subseq	r4, r2, r0, asr r6
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	1201cd04 	andne	ip, r1, #4, 26	; 0x100
     1c8:	0000025b 	andeq	r0, r0, fp, asr r2
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	09402302 	stmdbeq	r0, {r1, r8, r9, sp}^
     1d0:	00524644 	subseq	r4, r2, r4, asr #12
     1d4:	1201ce04 	andne	ip, r1, #4, 28	; 0x40
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     1dc:	09482302 	stmdbeq	r8, {r1, r8, r9, sp}^
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	00524441 	subseq	r4, r2, r1, asr #8
     1e4:	1201cf04 	andne	ip, r1, #4, 30
     1e8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	084c2302 	stmdaeq	ip, {r1, r8, r9, sp}^
     1f0:	00000425 	andeq	r0, r0, r5, lsr #8
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	1201d004 	andne	sp, r1, #4
     1f8:	00000275 	andeq	r0, r0, r5, ror r2
     1fc:	08502302 	ldmdaeq	r0, {r1, r8, r9, sp}^
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	00000177 	andeq	r0, r0, r7, ror r1
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	1201d104 	andne	sp, r1, #4, 2
     208:	0000028f 	andeq	r0, r0, pc, lsl #5
     20c:	08602302 	stmdaeq	r0!, {r1, r8, r9, sp}^
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	000005a8 	andeq	r0, r0, r8, lsr #11
     214:	1201d204 	andne	sp, r1, #4, 4	; 0x40000000
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	00000294 	muleq	r0, r4, r2
     21c:	08742302 	ldmdaeq	r4!, {r1, r8, r9, sp}^
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	000005a2 	andeq	r0, r0, r2, lsr #11
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	1201d304 	andne	sp, r1, #4, 6	; 0x10000000
     228:	000000cb 	andeq	r0, r0, fp, asr #1
  tmp = hdma->Instance->FCR;
     22c:	01882303 	orreq	r2, r8, r3, lsl #6
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	00a40a00 	adceq	r0, r4, r0, lsl #20
  tmp |= hdma->Init.FIFOMode;
     234:	02410000 	subeq	r0, r1, #0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	910b0000 	mrsls	r0, (UNDEF: 11)
    tmp |= hdma->Init.FIFOThreshold;
     23c:	0b000000 	bleq	244 <_Min_Heap_Size-0x5bc>
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	02310500 	eorseq	r0, r1, #0, 10
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	d00a0000 	andle	r0, sl, r0
     248:	56000000 	strpl	r0, [r0], -r0
  hdma->Instance->FCR = tmp;
     24c:	0b000002 	bleq	25c <_Min_Heap_Size-0x5a4>
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	00000091 	muleq	r0, r1, r0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	46060001 	strmi	r0, [r6], -r1
     258:	05000002 	streq	r0, [r0, #-2]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00000256 	andeq	r0, r0, r6, asr r2
  hdma->State = HAL_DMA_STATE_READY;
     260:	0000d00a 	andeq	sp, r0, sl
     264:	00027000 	andeq	r7, r2, r0
  return HAL_OK;
     268:	00910b00 	addseq	r0, r1, r0, lsl #22
     26c:	00030000 	andeq	r0, r3, r0
     270:	00026006 	andeq	r6, r2, r6
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	02700500 	rsbseq	r0, r0, #0, 10
     278:	d00a0000 	andle	r0, sl, r0
     27c:	8a000000 	bhi	284 <_Min_Heap_Size-0x57c>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	0b000002 	bleq	290 <_Min_Heap_Size-0x570>
        hdma->State = HAL_DMA_STATE_READY;
     284:	00000091 	muleq	r0, r1, r0
        return HAL_ERROR; 
     288:	7a060004 	bvc	1802a0 <_Min_Heap_Size+0x17faa0>
    return HAL_ERROR;
     28c:	05000002 	streq	r0, [r0, #-2]
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	0000028a 	andeq	r0, r0, sl, lsl #5
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	0000bf0a 	andeq	fp, r0, sl, lsl #30
     298:	0002a400 	andeq	sl, r2, r0, lsl #8
      tickstart = HAL_GetTick();
     29c:	00910b00 	addseq	r0, r1, r0, lsl #22
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00040000 	andeq	r0, r4, r0
     2a4:	0003180c 	andeq	r1, r3, ip, lsl #16
     2a8:	01d40400 	bicseq	r0, r4, r0, lsl #8
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	0000d503 	andeq	sp, r0, r3, lsl #10
     2b0:	00bf0a00 	adcseq	r0, pc, r0, lsl #20
     2b4:	02c10000 	sbceq	r0, r1, #0
          return HAL_TIMEOUT;
     2b8:	910b0000 	mrsls	r0, (UNDEF: 11)
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	01000000 	mrseq	r0, (UNDEF: 0)
     2c0:	05180700 	ldreq	r0, [r8, #-1792]	; 0xfffff900
     2c4:	2b090144 	blcs	2407dc <_Min_Heap_Size+0x23ffdc>
    FlagStatus       pwrclkchanged = RESET;
     2c8:	09000003 	stmdbeq	r0, {r0, r1}
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
     2d0:	cb110146 	blgt	4407f0 <_Min_Heap_Size+0x43fff0>
     2d4:	02000000 	andeq	r0, r0, #0
      tickstart = HAL_GetTick();
     2d8:	ee080023 	cdp	0, 0, cr0, cr8, cr3, {1}
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	05000007 	streq	r0, [r0, #-7]
     2e0:	cb110147 	blgt	440804 <_Min_Heap_Size+0x440004>
     2e4:	02000000 	andeq	r0, r0, #0
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	50090423 	andpl	r0, r9, r3, lsr #8
     2ec:	05005241 	streq	r5, [r0, #-577]	; 0xfffffdbf
          return HAL_TIMEOUT;
     2f0:	cb110148 	blgt	440818 <_Min_Heap_Size+0x440018>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	02000000 	andeq	r0, r0, #0
     2f8:	42080823 	andmi	r0, r8, #2293760	; 0x230000
     2fc:	05000000 	streq	r0, [r0, #-0]
     300:	cb110149 	blgt	44082c <_Min_Heap_Size+0x44002c>
     304:	02000000 	andeq	r0, r0, #0
     308:	50080c23 	andpl	r0, r8, r3, lsr #24
     30c:	05000008 	streq	r0, [r0, #-8]
     310:	cb11014a 	blgt	440840 <_Min_Heap_Size+0x440040>
      tickstart = HAL_GetTick();
     314:	02000000 	andeq	r0, r0, #0
     318:	46091023 	strmi	r1, [r9], -r3, lsr #32
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
     320:	cb11014b 	blgt	440854 <_Min_Heap_Size+0x440054>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	02000000 	andeq	r0, r0, #0
     328:	0c001423 	cfstrseq	mvf1, [r0], {35}	; 0x23
     32c:	0000080d 	andeq	r0, r0, sp, lsl #16
     330:	03014c05 	movweq	r4, #7173	; 0x1c05
          return HAL_TIMEOUT;
     334:	000002c1 	andeq	r0, r0, r1, asr #5
    if(pwrclkchanged == SET)
     338:	ea050807 	b	14235c <_Min_Heap_Size+0x141b5c>
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	03620901 	cmneq	r2, #16384	; 0x4000
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	43090000 	movwmi	r0, #36864	; 0x9000
     344:	ec050052 	stc	0, cr0, [r5], {82}	; 0x52
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	00cb1101 	sbceq	r1, fp, r1, lsl #2
     34c:	23020000 	movwcs	r0, #8192	; 0x2000
     350:	53430900 	movtpl	r0, #14592	; 0x3900
     354:	ed050052 	stc	0, cr0, [r5, #-328]	; 0xfffffeb8
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	00cb1101 	sbceq	r1, fp, r1, lsl #2
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	23020000 	movwcs	r0, #8192	; 0x2000
     360:	de0c0004 	cdple	0, 0, cr0, cr12, cr4, {0}
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	05000001 	streq	r0, [r0, #-1]
     368:	380301ee 	stmdacc	r3, {r1, r2, r3, r5, r6, r7, r8}
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	07000003 	streq	r0, [r0, -r3]
     370:	01f40588 	mvnseq	r0, r8, lsl #11
     374:	00055b09 	andeq	r5, r5, r9, lsl #22
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	52430900 	subpl	r0, r3, #0, 18
     37c:	01f60500 	mvnseq	r0, r0, lsl #10
     380:	0000cb11 	andeq	ip, r0, r1, lsl fp
     384:	00230200 	eoreq	r0, r3, r0, lsl #4
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	0002b408 	andeq	fp, r2, r8, lsl #8
     38c:	01f70500 	mvnseq	r0, r0, lsl #10
        __HAL_RCC_PLL_DISABLE();
     390:	0000cb11 	andeq	ip, r0, r1, lsl fp
     394:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
        tickstart = HAL_GetTick();
     398:	0002b708 	andeq	fp, r2, r8, lsl #14
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	01f80500 	mvnseq	r0, r0, lsl #10
     3a0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     3a4:	08230200 	stmdaeq	r3!, {r9}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	52494309 	subpl	r4, r9, #603979776	; 0x24000000
     3ac:	01f90500 	mvnseq	r0, r0, lsl #10
            return HAL_TIMEOUT;
     3b0:	0000cb11 	andeq	ip, r0, r1, lsl fp
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     3b8:	00018f08 	andeq	r8, r1, r8, lsl #30
     3bc:	01fa0500 	mvnseq	r0, r0, lsl #10
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     3c4:	10230200 	eorne	r0, r3, r0, lsl #4
     3c8:	0007b008 	andeq	fp, r7, r8
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	01fb0500 	mvnseq	r0, r0, lsl #10
     3d0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     3d4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	00071508 	andeq	r1, r7, r8, lsl #10
     3dc:	01fc0500 	mvnseq	r0, r0, lsl #10
     3e0:	0000cb11 	andeq	ip, r0, r1, lsl fp
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	18230200 	stmdane	r3!, {r9}
     3e8:	0005a808 	andeq	sl, r5, r8, lsl #16
     3ec:	01fd0500 	mvnseq	r0, r0, lsl #10
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	0000bf11 	andeq	fp, r0, r1, lsl pc
     3f4:	1c230200 	sfmne	f0, 4, [r3], #-0
     3f8:	00059308 	andeq	r9, r5, r8, lsl #6
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	01fe0500 	mvnseq	r0, r0, lsl #10
     400:	0000cb11 	andeq	ip, r0, r1, lsl fp
     404:	20230200 	eorcs	r0, r3, r0, lsl #4
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	00022d08 	andeq	r2, r2, r8, lsl #26
     40c:	01ff0500 	mvnseq	r0, r0, lsl #10
     410:	0000cb11 	andeq	ip, r0, r1, lsl fp
     414:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     418:	0005b208 	andeq	fp, r5, r8, lsl #4
     41c:	02000500 	andeq	r0, r0, #0, 10
     420:	0002b111 	andeq	fp, r2, r1, lsl r1
     424:	28230200 	stmdacs	r3!, {r9}
        __HAL_RCC_PLL_ENABLE();
     428:	00091508 	andeq	r1, r9, r8, lsl #10
     42c:	02010500 	andeq	r0, r1, #0, 10
        tickstart = HAL_GetTick();
     430:	0000cb11 	andeq	ip, r0, r1, lsl fp
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	30230200 	eorcc	r0, r3, r0, lsl #4
     438:	00082008 	andeq	r2, r8, r8
     43c:	02020500 	andeq	r0, r2, #0, 10
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	0000cb11 	andeq	ip, r0, r1, lsl fp
     444:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
            return HAL_TIMEOUT;
     448:	00052e08 	andeq	r2, r5, r8, lsl #28
  return HAL_OK;
     44c:	02030500 	andeq	r0, r3, #0, 10
        __HAL_RCC_PLL_DISABLE();
     450:	0000cb11 	andeq	ip, r0, r1, lsl fp
     454:	38230200 	stmdacc	r3!, {r9}
        tickstart = HAL_GetTick();
     458:	0005bc08 	andeq	fp, r5, r8, lsl #24
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	02040500 	andeq	r0, r4, #0, 10
     460:	0000bf11 	andeq	fp, r0, r1, lsl pc
     464:	3c230200 	sfmcc	f0, 4, [r3], #-0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	00075008 	andeq	r5, r7, r8
     46c:	02050500 	andeq	r0, r5, #0, 10
            return HAL_TIMEOUT;
     470:	0000cb11 	andeq	ip, r0, r1, lsl fp
  return HAL_OK;
     474:	40230200 	eormi	r0, r3, r0, lsl #4
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	00070d08 	andeq	r0, r7, r8, lsl #26
        pll_config = RCC->PLLCFGR;
     47c:	02060500 	andeq	r0, r6, #0, 10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	0000cb11 	andeq	ip, r0, r1, lsl fp
     484:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	0005c608 	andeq	ip, r5, r8, lsl #12
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	02070500 	andeq	r0, r7, #0, 10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	0002b111 	andeq	fp, r2, r1, lsl r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	48230200 	stmdami	r3!, {r9}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	00015408 	andeq	r5, r1, r8, lsl #8
     49c:	02080500 	andeq	r0, r8, #0, 10
     4a0:	0000cb11 	andeq	ip, r0, r1, lsl fp
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	50230200 	eorpl	r0, r3, r0, lsl #4
     4a8:	00056808 	andeq	r6, r5, r8, lsl #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	02090500 	andeq	r0, r9, #0, 10
     4b0:	0000cb11 	andeq	ip, r0, r1, lsl fp
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	0006db08 	andeq	sp, r6, r8, lsl #22
     4bc:	020a0500 	andeq	r0, sl, #0, 10
  return HAL_OK;
     4c0:	0000cb11 	andeq	ip, r0, r1, lsl fp
}
     4c4:	58230200 	stmdapl	r3!, {r9}
        return HAL_ERROR;
     4c8:	0005d008 	andeq	sp, r5, r8
        return HAL_ERROR;
     4cc:	020b0500 	andeq	r0, fp, #0, 10
}
     4d0:	0000bf11 	andeq	fp, r0, r1, lsl pc
        return HAL_ERROR;
     4d4:	5c230200 	sfmpl	f0, 4, [r3], #-0
          return HAL_ERROR;
     4d8:	00001b08 	andeq	r1, r0, r8, lsl #22
     4dc:	020c0500 	andeq	r0, ip, #0, 10
     4e0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     4e4:	60230200 	eorvs	r0, r3, r0, lsl #4
     4e8:	00041b08 	andeq	r1, r4, r8, lsl #22
     4ec:	020d0500 	andeq	r0, sp, #0, 10
     4f0:	0000cb11 	andeq	ip, r0, r1, lsl fp
     4f4:	64230200 	strtvs	r0, [r3], #-512	; 0xfffffe00
     4f8:	0005da08 	andeq	sp, r5, r8, lsl #20
     4fc:	020e0500 	andeq	r0, lr, #0, 10
     500:	0002b111 	andeq	fp, r2, r1, lsl r1
     504:	68230200 	stmdavs	r3!, {r9}
     508:	0008b108 	andeq	fp, r8, r8, lsl #2
     50c:	020f0500 	andeq	r0, pc, #0, 10
     510:	0000cb11 	andeq	ip, r0, r1, lsl fp
     514:	70230200 	eorvc	r0, r3, r0, lsl #4
     518:	52534309 	subspl	r4, r3, #603979776	; 0x24000000
     51c:	02100500 	andseq	r0, r0, #0, 10
     520:	0000cb11 	andeq	ip, r0, r1, lsl fp
     524:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
     528:	0005e408 	andeq	lr, r5, r8, lsl #8
     52c:	02110500 	andseq	r0, r1, #0, 10
     530:	0002b111 	andeq	fp, r2, r1, lsl r1
     534:	78230200 	stmdavc	r3!, {r9}
     538:	00088008 	andeq	r8, r8, r8
     53c:	02120500 	andseq	r0, r2, #0, 10
     540:	0000cb11 	andeq	ip, r0, r1, lsl fp
     544:	80230300 	eorhi	r0, r3, r0, lsl #6
     548:	03ae0801 			; <UNDEFINED> instruction: 0x03ae0801
     54c:	13050000 	movwne	r0, #20480	; 0x5000
     550:	00cb1102 	sbceq	r1, fp, r2, lsl #2
     554:	23030000 	movwcs	r0, #12288	; 0x3000
     558:	0c000184 	stfeqs	f0, [r0], {132}	; 0x84
     55c:	00000201 	andeq	r0, r0, r1, lsl #4
     560:	03021405 	movweq	r1, #9221	; 0x2405
     564:	0000036f 	andeq	r0, r0, pc, ror #6
     568:	95051c07 	strls	r1, [r5, #-3079]	; 0xfffff3f9
     56c:	05e10902 	strbeq	r0, [r1, #2306]!	; 0x902
     570:	53090000 	movwpl	r0, #36864	; 0x9000
     574:	97050052 	smlsdls	r5, r2, r0, r0
     578:	00cb1102 	sbceq	r1, fp, r2, lsl #2
     57c:	23020000 	movwcs	r0, #8192	; 0x2000
     580:	52440900 	subpl	r0, r4, #0, 18
     584:	02980500 	addseq	r0, r8, #0, 10
     588:	0000cb11 	andeq	ip, r0, r1, lsl fp
     58c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     590:	52524209 	subspl	r4, r2, #-1879048192	; 0x90000000
     594:	02990500 	addseq	r0, r9, #0, 10
     598:	0000cb11 	andeq	ip, r0, r1, lsl fp
     59c:	08230200 	stmdaeq	r3!, {r9}
     5a0:	31524309 	cmpcc	r2, r9, lsl #6
     5a4:	029a0500 	addseq	r0, sl, #0, 10
     5a8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5ac:	0c230200 	sfmeq	f0, 4, [r3], #-0
     5b0:	32524309 	subscc	r4, r2, #603979776	; 0x24000000
     5b4:	029b0500 	addseq	r0, fp, #0, 10
     5b8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5bc:	10230200 	eorne	r0, r3, r0, lsl #4
     5c0:	33524309 	cmpcc	r2, #603979776	; 0x24000000
     5c4:	029c0500 	addseq	r0, ip, #0, 10
     5c8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5cc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     5d0:	0001b208 	andeq	fp, r1, r8, lsl #4
     5d4:	029d0500 	addseq	r0, sp, #0, 10
     5d8:	0000cb11 	andeq	ip, r0, r1, lsl fp
     5dc:	18230200 	stmdane	r3!, {r9}
     5e0:	040d0c00 	streq	r0, [sp], #-3072	; 0xfffff400
     5e4:	9e050000 	cdpls	0, 0, cr0, cr5, cr0, {0}
     5e8:	05680302 	strbeq	r0, [r8, #-770]!	; 0xfffffcfe
     5ec:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     5f0:	00075804 	andeq	r5, r7, r4, lsl #16
     5f4:	01070d00 	tsteq	r7, r0, lsl #26
     5f8:	0000003c 	andeq	r0, r0, ip, lsr r0
     5fc:	1c012706 	stcne	7, cr2, [r1], {6}
     600:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
     604:	00000377 	andeq	r0, r0, r7, ror r3
     608:	07460e00 	strbeq	r0, [r6, -r0, lsl #28]
     60c:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
     610:	0000094a 	andeq	r0, r0, sl, asr #18
     614:	03580e02 	cmpeq	r8, #2, 28
     618:	00030000 	andeq	r0, r3, r0
     61c:	3c01070d 	stccc	7, cr0, [r1], {13}
     620:	06000000 	streq	r0, [r0], -r0
     624:	06370132 			; <UNDEFINED> instruction: 0x06370132
     628:	3d0e0000 	stccc	0, cr0, [lr, #-0]
     62c:	00000009 	andeq	r0, r0, r9
     630:	0005230e 	andeq	r2, r5, lr, lsl #6
     634:	03000100 	movweq	r0, #256	; 0x100
     638:	000001f1 	strdeq	r0, [r0], -r1
     63c:	1c033506 	cfstr32ne	mvfx3, [r3], {6}
     640:	0f000006 	svceq	0x00000006
     644:	092d0718 	pusheq	{r3, r4, r8, r9, sl}
     648:	000006a7 	andeq	r0, r0, r7, lsr #13
     64c:	00009010 	andeq	r9, r0, r0, lsl r0
     650:	0c2f0700 	stceq	7, cr0, [pc], #-0	; 658 <_Min_Heap_Size-0x1a8>
     654:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     658:	10002302 	andne	r2, r0, r2, lsl #6
     65c:	000006e5 	andeq	r0, r0, r5, ror #13
     660:	bf0c3207 	svclt	0x000c3207
     664:	02000000 	andeq	r0, r0, #0
     668:	99100423 	ldmdbls	r0, {r0, r1, r5, sl}
     66c:	07000000 	streq	r0, [r0, -r0]
     670:	00bf0c35 	adcseq	r0, pc, r5, lsr ip	; <UNPREDICTABLE>
     674:	23020000 	movwcs	r0, #8192	; 0x2000
     678:	009e1008 	addseq	r1, lr, r8
     67c:	38070000 	stmdacc	r7, {}	; <UNPREDICTABLE>
     680:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     684:	0c230200 	sfmeq	f0, 4, [r3], #-0
     688:	0000a310 	andeq	sl, r0, r0, lsl r3
     68c:	0c3c0700 	ldceq	7, cr0, [ip], #-0
     690:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     694:	10102302 	andsne	r2, r0, r2, lsl #6
     698:	000000a8 	andeq	r0, r0, r8, lsr #1
     69c:	bf0c3f07 	svclt	0x000c3f07
     6a0:	02000000 	andeq	r0, r0, #0
     6a4:	03001423 	movweq	r1, #1059	; 0x423
     6a8:	000008f8 	strdeq	r0, [r0], -r8
     6ac:	43024907 	movwmi	r4, #10503	; 0x2907
     6b0:	0f000006 	svceq	0x00000006
     6b4:	09310830 	ldmdbeq	r1!, {r4, r5, fp}
     6b8:	00000726 	andeq	r0, r0, r6, lsr #14
     6bc:	0003e710 	andeq	lr, r3, r0, lsl r7
     6c0:	0c330800 	ldceq	8, cr0, [r3], #-0
     6c4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     6c8:	10002302 	andne	r2, r0, r2, lsl #6
     6cc:	00000348 	andeq	r0, r0, r8, asr #6
     6d0:	bf0c3608 	svclt	0x000c3608
     6d4:	02000000 	andeq	r0, r0, #0
     6d8:	01100423 	tsteq	r0, r3, lsr #8
     6dc:	08000001 	stmdaeq	r0, {r0}
     6e0:	00bf0c39 	adcseq	r0, pc, r9, lsr ip	; <UNPREDICTABLE>
     6e4:	23020000 	movwcs	r0, #8192	; 0x2000
     6e8:	02731008 	rsbseq	r1, r3, #8
     6ec:	3c080000 	stccc	0, cr0, [r8], {-0}
     6f0:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     6f4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     6f8:	00029210 	andeq	r9, r2, r0, lsl r2
     6fc:	0c3f0800 	ldceq	8, cr0, [pc], #-0	; 704 <_Min_Heap_Size-0xfc>
     700:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     704:	10102302 	andsne	r2, r0, r2, lsl #6
     708:	00000240 	andeq	r0, r0, r0, asr #4
     70c:	bf0c4208 	svclt	0x000c4208
     710:	02000000 	andeq	r0, r0, #0
     714:	50111423 	andspl	r1, r1, r3, lsr #8
     718:	08004c4c 	stmdaeq	r0, {r2, r3, r6, sl, fp, lr}
     71c:	06a71645 	strteq	r1, [r7], r5, asr #12
     720:	23020000 	movwcs	r0, #8192	; 0x2000
     724:	7c030018 	stcvc	0, cr0, [r3], {24}
     728:	08000001 	stmdaeq	r0, {r0}
     72c:	06b30246 	ldrteq	r0, [r3], r6, asr #4
     730:	140f0000 	strne	r0, [pc], #-0	; 738 <_Min_Heap_Size-0xc8>
     734:	87094b08 	strhi	r4, [r9, -r8, lsl #22]
     738:	10000007 	andne	r0, r0, r7
     73c:	0000090b 	andeq	r0, r0, fp, lsl #18
     740:	bf0c4d08 	svclt	0x000c4d08
     744:	02000000 	andeq	r0, r0, #0
     748:	b2100023 	andslt	r0, r0, #35	; 0x23
     74c:	08000009 	stmdaeq	r0, {r0, r3}
     750:	00bf0c50 	adcseq	r0, pc, r0, asr ip	; <UNPREDICTABLE>
     754:	23020000 	movwcs	r0, #8192	; 0x2000
     758:	04431004 	strbeq	r1, [r3], #-4
     75c:	53080000 	movwpl	r0, #32768	; 0x8000
     760:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     764:	08230200 	stmdaeq	r3!, {r9}
     768:	00005d10 	andeq	r5, r0, r0, lsl sp
     76c:	0c560800 	mrrceq	8, 0, r0, r6, cr0
     770:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     774:	100c2302 	andne	r2, ip, r2, lsl #6
     778:	000007cc 	andeq	r0, r0, ip, asr #15
     77c:	bf0c5908 	svclt	0x000c5908
     780:	02000000 	andeq	r0, r0, #0
     784:	03001023 	movweq	r1, #35	; 0x23
     788:	00000580 	andeq	r0, r0, r0, lsl #11
     78c:	32025c08 	andcc	r5, r2, #8, 24	; 0x800
     790:	0f000007 	svceq	0x00000007
     794:	09300930 	ldmdbeq	r0!, {r4, r5, r8, fp}
     798:	00000851 	andeq	r0, r0, r1, asr r8
     79c:	00060510 	andeq	r0, r6, r0, lsl r5
     7a0:	0c320900 			; <UNDEFINED> instruction: 0x0c320900
     7a4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     7a8:	10002302 	andne	r2, r0, r2, lsl #6
     7ac:	0000030e 	andeq	r0, r0, lr, lsl #6
     7b0:	bf0c3509 	svclt	0x000c3509
     7b4:	02000000 	andeq	r0, r0, #0
     7b8:	36100423 	ldrcc	r0, [r0], -r3, lsr #8
     7bc:	09000002 	stmdbeq	r0, {r1}
     7c0:	00bf0c39 	adcseq	r0, pc, r9, lsr ip	; <UNPREDICTABLE>
     7c4:	23020000 	movwcs	r0, #8192	; 0x2000
     7c8:	07b91008 	ldreq	r1, [r9, r8]!
     7cc:	3c090000 	stccc	0, cr0, [r9], {-0}
     7d0:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     7d4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     7d8:	00085b10 	andeq	r5, r8, r0, lsl fp
     7dc:	0c3f0900 			; <UNDEFINED> instruction: 0x0c3f0900
     7e0:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     7e4:	10102302 	andsne	r2, r0, r2, lsl #6
     7e8:	000003fc 	strdeq	r0, [r0], -ip
     7ec:	bf0c4209 	svclt	0x000c4209
     7f0:	02000000 	andeq	r0, r0, #0
     7f4:	36101423 	ldrcc	r1, [r0], -r3, lsr #8
     7f8:	09000007 	stmdbeq	r0, {r0, r1, r2}
     7fc:	00bf0c45 	adcseq	r0, pc, r5, asr #24
     800:	23020000 	movwcs	r0, #8192	; 0x2000
     804:	20651018 	rsbcs	r1, r5, r8, lsl r0
     808:	4a090000 	bmi	240810 <_Min_Heap_Size+0x240010>
     80c:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     810:	1c230200 	sfmne	f0, 4, [r3], #-0
     814:	00073210 	andeq	r3, r7, r0, lsl r2
     818:	0c4d0900 	mcrreq	9, 0, r0, sp, cr0	; <UNPREDICTABLE>
     81c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     820:	10202302 	eorne	r2, r0, r2, lsl #6
     824:	00000764 	andeq	r0, r0, r4, ror #14
     828:	bf0c5209 	svclt	0x000c5209
     82c:	02000000 	andeq	r0, r0, #0
     830:	49102423 	ldmdbmi	r0, {r0, r1, r5, sl, sp}
     834:	09000002 	stmdbeq	r0, {r1}
     838:	00bf0c55 	adcseq	r0, pc, r5, asr ip	; <UNPREDICTABLE>
     83c:	23020000 	movwcs	r0, #8192	; 0x2000
     840:	07c01028 	strbeq	r1, [r0, r8, lsr #32]
     844:	5b090000 	blpl	24084c <_Min_Heap_Size+0x24004c>
     848:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     84c:	2c230200 	sfmcs	f0, 4, [r3], #-0
     850:	004d0300 	subeq	r0, sp, r0, lsl #6
     854:	60090000 	andvs	r0, r9, r0
     858:	00079302 	andeq	r9, r7, r2, lsl #6
     85c:	01070d00 	tsteq	r7, r0, lsl #26
     860:	0000003c 	andeq	r0, r0, ip, lsr r0
     864:	90016709 	andls	r6, r1, r9, lsl #14
     868:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
     86c:	00000122 	andeq	r0, r0, r2, lsr #2
     870:	045f0e00 	ldrbeq	r0, [pc], #-3584	; 878 <_Min_Heap_Size+0x78>
     874:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
     878:	0000047c 	andeq	r0, r0, ip, ror r4
     87c:	08d70e02 	ldmeq	r7, {r1, r9, sl, fp}^
     880:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
     884:	0000025f 	andeq	r0, r0, pc, asr r2
     888:	03be0e04 			; <UNDEFINED> instruction: 0x03be0e04
     88c:	00050000 	andeq	r0, r5, r0
     890:	0006c603 	andeq	ip, r6, r3, lsl #12
     894:	026e0900 	rsbeq	r0, lr, #0, 18
     898:	0000085d 	andeq	r0, r0, sp, asr r8
     89c:	00089005 	andeq	r9, r8, r5
     8a0:	071e1200 	ldreq	r1, [lr, -r0, lsl #4]
     8a4:	09600000 	stmdbeq	r0!, {}^	; <UNPREDICTABLE>
     8a8:	0981108a 	stmibeq	r1, {r1, r3, r7, ip}
     8ac:	36100000 	ldrcc	r0, [r0], -r0
     8b0:	09000005 	stmdbeq	r0, {r0, r2}
     8b4:	09811f8c 	stmibeq	r1, {r2, r3, r7, r8, r9, sl, fp, ip}
     8b8:	23020000 	movwcs	r0, #8192	; 0x2000
     8bc:	1b471000 	blne	11c48c4 <_Min_Heap_Size+0x11c40c4>
     8c0:	8e090000 	cdphi	0, 0, cr0, cr9, cr0, {0}
     8c4:	0008511e 	andeq	r5, r8, lr, lsl r1
     8c8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     8cc:	0031e810 	eorseq	lr, r1, r0, lsl r8
     8d0:	1e900900 	vfnmsne.f16	s0, s0, s0	; <UNPREDICTABLE>
     8d4:	00000637 	andeq	r0, r0, r7, lsr r6
     8d8:	10342302 	eorsne	r2, r4, r2, lsl #6
     8dc:	0000034b 	andeq	r0, r0, fp, asr #6
     8e0:	9c1e9209 	lfmls	f1, 1, [lr], {9}
     8e4:	02000008 	andeq	r0, r0, #8
     8e8:	d3103523 	tstle	r0, #146800640	; 0x8c00000
     8ec:	09000002 	stmdbeq	r0, {r1}
     8f0:	09871f94 	stmibeq	r7, {r2, r4, r7, r8, r9, sl, fp, ip}
     8f4:	23020000 	movwcs	r0, #8192	; 0x2000
     8f8:	09801038 	stmibeq	r0, {r3, r4, r5, ip}
     8fc:	96090000 	strls	r0, [r9], -r0
     900:	00099b21 	andeq	r9, r9, r1, lsr #22
     904:	3c230200 	sfmcc	f0, 4, [r3], #-0
     908:	00020d10 	andeq	r0, r2, r0, lsl sp
     90c:	21980900 	orrscs	r0, r8, r0, lsl #18
     910:	0000099b 	muleq	r0, fp, r9
     914:	10402302 	subne	r2, r0, r2, lsl #6
     918:	000001cb 	andeq	r0, r0, fp, asr #3
     91c:	9b219a09 	blls	867148 <_Min_Heap_Size+0x866948>
     920:	02000009 	andeq	r0, r0, #9
     924:	ee104423 	cfmuld	mvd4, mvd0, mvd3
     928:	09000005 	stmdbeq	r0, {r0, r2}
     92c:	099b219c 	ldmibeq	fp, {r2, r3, r4, r7, r8, sp}
     930:	23020000 	movwcs	r0, #8192	; 0x2000
     934:	053f1048 	ldreq	r1, [pc, #-72]!	; 8f4 <_Min_Heap_Size+0xf4>
     938:	9e090000 	cdpls	0, 0, cr0, cr9, cr0, {0}
     93c:	00099b21 	andeq	r9, r9, r1, lsr #22
     940:	4c230200 	sfmmi	f0, 4, [r3], #-0
     944:	00096e10 	andeq	r6, r9, r0, lsl lr
     948:	21a00900 	lslcs	r0, r0, #18
     94c:	0000099b 	muleq	r0, fp, r9
     950:	10502302 	subsne	r2, r0, r2, lsl #6
     954:	000003dd 	ldrdeq	r0, [r0], -sp
     958:	cb1ea209 	blgt	7a9184 <_Min_Heap_Size+0x7a8984>
     95c:	02000000 	andeq	r0, r0, #0
     960:	bc105423 	cfldrslt	mvf5, [r0], {35}	; 0x23
     964:	09000002 	stmdbeq	r0, {r1}
     968:	00bf1ea4 	adcseq	r1, pc, r4, lsr #29
     96c:	23020000 	movwcs	r0, #8192	; 0x2000
     970:	036b1058 	cmneq	fp, #88	; 0x58
     974:	a6090000 	strge	r0, [r9], -r0
     978:	0000bf1e 	andeq	fp, r0, lr, lsl pc
     97c:	5c230200 	sfmpl	f0, 4, [r3], #-0
     980:	2b041300 	blcs	105588 <_Min_Heap_Size+0x104d88>
     984:	14000003 	strne	r0, [r0], #-3
     988:	95011504 	strls	r1, [r1, #-1284]	; 0xfffffafc
     98c:	16000009 	strne	r0, [r0], -r9
     990:	00000995 	muleq	r0, r5, r9
     994:	a1041300 	mrsge	r1, LR_abt
     998:	13000008 	movwne	r0, #8
     99c:	00098904 	andeq	r8, r9, r4, lsl #18
     9a0:	07200300 	streq	r0, [r0, -r0, lsl #6]!
     9a4:	a8090000 	stmdage	r9, {}	; <UNPREDICTABLE>
     9a8:	0008a102 	andeq	sl, r8, r2, lsl #2
     9ac:	0a1c0f00 	beq	7045b4 <_Min_Heap_Size+0x703db4>
     9b0:	0a20092e 	beq	802e70 <_Min_Heap_Size+0x802670>
     9b4:	b7100000 	ldrlt	r0, [r0, -r0]
     9b8:	0a000001 	beq	9c4 <_Min_Heap_Size+0x1c4>
     9bc:	00bf0c30 	adcseq	r0, pc, r0, lsr ip	; <UNPREDICTABLE>
     9c0:	23020000 	movwcs	r0, #8192	; 0x2000
     9c4:	073b1000 	ldreq	r1, [fp, -r0]!
     9c8:	360a0000 	strcc	r0, [sl], -r0
     9cc:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     9d0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     9d4:	0002ab10 	andeq	sl, r2, r0, lsl fp
     9d8:	0c390a00 			; <UNDEFINED> instruction: 0x0c390a00
     9dc:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     9e0:	10082302 	andne	r2, r8, r2, lsl #6
     9e4:	00000351 	andeq	r0, r0, r1, asr r3
     9e8:	bf0c3c0a 	svclt	0x000c3c0a
     9ec:	02000000 	andeq	r0, r0, #0
     9f0:	36100c23 	ldrcc	r0, [r0], -r3, lsr #24
     9f4:	0a000007 	beq	a18 <_Min_Heap_Size+0x218>
     9f8:	00bf0c43 	adcseq	r0, pc, r3, asr #24
     9fc:	23020000 	movwcs	r0, #8192	; 0x2000
     a00:	08cd1010 	stmiaeq	sp, {r4, ip}^
     a04:	460a0000 	strmi	r0, [sl], -r0
     a08:	0000bf0c 	andeq	fp, r0, ip, lsl #30
     a0c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     a10:	00015e10 	andeq	r5, r1, r0, lsl lr
     a14:	0c490a00 	mcrreq	10, 0, r0, r9, cr0
     a18:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     a1c:	00182302 	andseq	r2, r8, r2, lsl #6
     a20:	00086f03 	andeq	r6, r8, r3, lsl #30
     a24:	034b0a00 	movteq	r0, #47616	; 0xba00
     a28:	000009ad 	andeq	r0, r0, sp, lsr #19
     a2c:	3c01070d 	stccc	7, cr0, [r1], {13}
     a30:	0a000000 	beq	a38 <_Min_Heap_Size+0x238>
     a34:	0a6b0175 	beq	1ac1010 <_Min_Heap_Size+0x1ac0810>
     a38:	f30e0000 	vhadd.u8	d0, d14, d0
     a3c:	00000007 	andeq	r0, r0, r7
     a40:	0002da0e 	andeq	sp, r2, lr, lsl #20
     a44:	290e2000 	stmdbcs	lr, {sp}
     a48:	24000009 	strcs	r0, [r0], #-9
     a4c:	0005510e 	andeq	r5, r5, lr, lsl #2
     a50:	990e2100 	stmdbls	lr, {r8, sp}
     a54:	22000007 	andcs	r0, r0, #7
     a58:	0001980e 	andeq	r9, r1, lr, lsl #16
     a5c:	b60e2300 	strlt	r2, [lr], -r0, lsl #6
     a60:	a0000008 	andge	r0, r0, r8
     a64:	0006f80e 	andeq	pc, r6, lr, lsl #16
     a68:	0300e000 	movweq	lr, #0
     a6c:	00000025 	andeq	r0, r0, r5, lsr #32
     a70:	2c03870a 	stccs	7, cr8, [r3], {10}
     a74:	0500000a 	streq	r0, [r0, #-10]
     a78:	00000a6b 	andeq	r0, r0, fp, ror #20
     a7c:	00088603 	andeq	r8, r8, r3, lsl #12
     a80:	12900a00 	addsne	r0, r0, #0, 20
     a84:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     a88:	000a7c05 	andeq	r7, sl, r5, lsl #24
     a8c:	00da0300 	sbcseq	r0, sl, r0, lsl #6
     a90:	9b0a0000 	blls	280a98 <_Min_Heap_Size+0x280298>
     a94:	0000bf12 	andeq	fp, r0, r2, lsl pc
     a98:	0a8d0500 	beq	fe341ea0 <_estack+0xde338500>
     a9c:	b3120000 	tstlt	r2, #0
     aa0:	48000004 	stmdami	r0, {r2}
     aa4:	9c10a00a 	ldcls	0, cr10, [r0], {10}
     aa8:	1000000b 	andne	r0, r0, fp
     aac:	00000536 	andeq	r0, r0, r6, lsr r5
     ab0:	9c22a20a 	sfmls	f2, 1, [r2], #-40	; 0xffffffd8
     ab4:	0200000b 	andeq	r0, r0, #11
     ab8:	47100023 	ldrmi	r0, [r0, -r3, lsr #32]
     abc:	0a00001b 	beq	b30 <_Min_Heap_Size+0x330>
     ac0:	0a2021a4 	beq	809158 <_Min_Heap_Size+0x808958>
     ac4:	23020000 	movwcs	r0, #8192	; 0x2000
     ac8:	02221004 	eoreq	r1, r2, #4
     acc:	a60a0000 	strge	r0, [sl], -r0
     ad0:	000ba222 	andeq	sl, fp, r2, lsr #4
     ad4:	20230200 	eorcs	r0, r3, r0, lsl #4
     ad8:	0003a310 	andeq	sl, r3, r0, lsl r3
     adc:	21a80a00 			; <UNDEFINED> instruction: 0x21a80a00
     ae0:	000000ae 	andeq	r0, r0, lr, lsr #1
     ae4:	10242302 	eorne	r2, r4, r2, lsl #6
     ae8:	0000016b 	andeq	r0, r0, fp, ror #2
     aec:	ba21aa0a 	blt	86b31c <_Min_Heap_Size+0x86ab1c>
     af0:	02000000 	andeq	r0, r0, #0
     af4:	ed102623 	ldc	6, cr2, [r0, #-140]	; 0xffffff74
     af8:	0a000008 	beq	b20 <_Min_Heap_Size+0x320>
     afc:	0ba822ac 	bleq	fea095b4 <_estack+0xde9ffc14>
     b00:	23020000 	movwcs	r0, #8192	; 0x2000
     b04:	03981028 	orrseq	r1, r8, #40	; 0x28
     b08:	ae0a0000 	cdpge	0, 0, cr0, cr10, cr0, {0}
     b0c:	0000ae21 	andeq	sl, r0, r1, lsr #28
     b10:	2c230200 	sfmcs	f0, 4, [r3], #-0
     b14:	00091d10 	andeq	r1, r9, r0, lsl sp
     b18:	21b00a00 	lslscs	r0, r0, #20
     b1c:	000000ba 	strheq	r0, [r0], -sl
     b20:	102e2302 	eorne	r2, lr, r2, lsl #6
     b24:	00000960 	andeq	r0, r0, r0, ror #18
     b28:	881fb20a 	ldmdahi	pc, {r1, r3, r9, ip, sp, pc}	; <UNPREDICTABLE>
     b2c:	0200000a 	andeq	r0, r0, #10
     b30:	5c103023 	ldcpl	0, cr3, [r0], {35}	; 0x23
     b34:	0a000011 	beq	b80 <_Min_Heap_Size+0x380>
     b38:	0a9924b4 	beq	fe649e10 <_estack+0xde640470>
     b3c:	23020000 	movwcs	r0, #8192	; 0x2000
     b40:	05791034 	ldrbeq	r1, [r9, #-52]!	; 0xffffffcc
     b44:	b60a0000 	strlt	r0, [sl], -r0
     b48:	000bae22 	andeq	sl, fp, r2, lsr #28
     b4c:	38230200 	stmdacc	r3!, {r9}
     b50:	00032110 	andeq	r2, r3, r0, lsl r1
     b54:	22b80a00 	adcscs	r0, r8, #0, 20
     b58:	00000bae 	andeq	r0, r0, lr, lsr #23
     b5c:	103c2302 	eorsne	r2, ip, r2, lsl #6
     b60:	000031e8 	andeq	r3, r0, r8, ror #3
     b64:	3721ba0a 	strcc	fp, [r1, -sl, lsl #20]!
     b68:	02000006 	andeq	r0, r0, #6
     b6c:	3b104023 	blcc	410c00 <_Min_Heap_Size+0x410400>
     b70:	0a000000 	beq	b78 <_Min_Heap_Size+0x378>
     b74:	0a7721bc 	beq	1dc926c <_Min_Heap_Size+0x1dc8a6c>
     b78:	23020000 	movwcs	r0, #8192	; 0x2000
     b7c:	09531041 	ldmdbeq	r3, {r0, r6, ip}^
     b80:	c00a0000 	andgt	r0, sl, r0
     b84:	000a7721 	andeq	r7, sl, r1, lsr #14
     b88:	42230200 	eormi	r0, r3, #0, 4
     b8c:	0003dd10 	andeq	sp, r3, r0, lsl sp
     b90:	21c30a00 	biccs	r0, r3, r0, lsl #20
     b94:	000000cb 	andeq	r0, r0, fp, asr #1
     b98:	00442302 	subeq	r2, r4, r2, lsl #6
     b9c:	05e10413 	strbeq	r0, [r1, #1043]!	; 0x413
     ba0:	04130000 	ldreq	r0, [r3], #-0
     ba4:	000000a9 	andeq	r0, r0, r9, lsr #1
     ba8:	00980413 	addseq	r0, r8, r3, lsl r4
     bac:	04130000 	ldreq	r0, [r3], #-0
     bb0:	000009a1 	andeq	r0, r0, r1, lsr #19
     bb4:	0004b503 	andeq	fp, r4, r3, lsl #10
     bb8:	03d50a00 	bicseq	r0, r5, #0, 20
     bbc:	00000a9e 	muleq	r0, lr, sl
     bc0:	00036417 	andeq	r6, r3, r7, lsl r4
     bc4:	1b240d00 	blne	903fcc <_Min_Heap_Size+0x9037cc>
     bc8:	00000bb4 			; <UNDEFINED> instruction: 0x00000bb4
     bcc:	01020101 	tsteq	r2, r1, lsl #2
     bd0:	00061608 	andeq	r1, r6, r8, lsl #12
     bd4:	0bce0600 	bleq	ff3823dc <_estack+0xdf378a3c>
     bd8:	fd030000 	stc2	0, cr0, [r3, #-0]
     bdc:	0b000027 	bleq	c80 <_Min_Heap_Size+0x480>
     be0:	005d1a3b 	subseq	r1, sp, fp, lsr sl
     be4:	52030000 	andpl	r0, r3, #0
     be8:	0c000002 	stceq	0, cr0, [r0], {2}
     bec:	0bf22e5c 	bleq	ffc8c564 <_estack+0xdfc82bc4>
     bf0:	04130000 	ldreq	r0, [r3], #-0
     bf4:	00000bf8 	strdeq	r0, [r0], -r8
     bf8:	00099e18 	andeq	r9, r9, r8, lsl lr
     bfc:	980a0100 	stmdals	sl, {r8}
     c00:	0f000000 	svceq	0x00000000
     c04:	1900000c 	stmdbne	r0, {r2, r3}
     c08:	00000091 	muleq	r0, r1, r0
     c0c:	1a007fff 	bne	20c10 <_Min_Heap_Size+0x20410>
     c10:	00000572 	andeq	r0, r0, r2, ror r5
     c14:	fe091b01 	vseleq.f64	d1, d9, d1
     c18:	0100000b 	tsteq	r0, fp
     c1c:	00980305 	addseq	r0, r8, r5, lsl #6
     c20:	011b2000 	tsteq	fp, r0
     c24:	000007db 	ldrdeq	r0, [r0], -fp
     c28:	01069101 	tsteq	r6, r1, lsl #2
	...
     c38:	000cf801 	andeq	pc, ip, r1, lsl #16
     c3c:	010a1c00 	tsteq	sl, r0, lsl #24
     c40:	92010000 	andls	r0, r1, #0
     c44:	00072618 	andeq	r2, r7, r8, lsl r6
     c48:	48910200 	ldmmi	r1, {r9}
     c4c:	0003361c 	andeq	r3, r3, ip, lsl r6
     c50:	18930100 	ldmne	r3, {r8}
     c54:	00000787 	andeq	r0, r0, r7, lsl #15
     c58:	7fb49103 	svcvc	0x00b49103
     c5c:	0000001d 	andeq	r0, r0, sp, lsl r0
     c60:	00000000 	andeq	r0, r0, r0
     c64:	000c7a00 	andeq	r7, ip, r0, lsl #20
     c68:	01ea1c00 	mvneq	r1, r0, lsl #24
     c6c:	97010000 	strls	r0, [r1, -r0]
     c70:	0000cb05 	andeq	ip, r0, r5, lsl #22
     c74:	ac910300 	ldcge	3, cr0, [r1], {0}
     c78:	001d007f 	andseq	r0, sp, pc, ror r0
     c7c:	00000000 	andeq	r0, r0, r0
     c80:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
     c84:	1c00000c 	stcne	0, cr0, [r0], {12}
     c88:	000001ea 	andeq	r0, r0, sl, ror #3
     c8c:	cb059801 	blgt	166c98 <_Min_Heap_Size+0x166498>
     c90:	03000000 	movweq	r0, #0
     c94:	007fb091 			; <UNDEFINED> instruction: 0x007fb091
     c98:	0000001e 	andeq	r0, r0, lr, lsl r0
     c9c:	0011a500 	andseq	sl, r1, r0, lsl #10
     ca0:	000cb700 	andeq	fp, ip, r0, lsl #14
     ca4:	50011f00 	andpl	r1, r1, r0, lsl #30
     ca8:	1f489102 	svcne	0x00489102
     cac:	30015101 	andcc	r5, r1, r1, lsl #2
     cb0:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
     cb4:	1e003008 	cdpne	0, 0, cr3, cr0, cr8, {0}
     cb8:	00000000 	andeq	r0, r0, r0
     cbc:	000011b2 			; <UNDEFINED> instruction: 0x000011b2
     cc0:	00000ccb 	andeq	r0, r0, fp, asr #25
     cc4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
     cc8:	1e004891 	mcrne	8, 0, r4, cr0, cr1, {4}
     ccc:	00000000 	andeq	r0, r0, r0
     cd0:	000011c1 	andeq	r1, r0, r1, asr #3
     cd4:	00000ce5 	andeq	r0, r0, r5, ror #25
     cd8:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
     cdc:	1f7fb491 	svcne	0x007fb491
     ce0:	35015101 	strcc	r5, [r1, #-257]	; 0xfffffeff
     ce4:	00002000 	andeq	r2, r0, r0
     ce8:	11d00000 	bicsne	r0, r0, r0
     cec:	00200000 	eoreq	r0, r0, r0
     cf0:	d0000000 	andle	r0, r0, r0
     cf4:	00000011 	andeq	r0, r0, r1, lsl r0
     cf8:	02a60121 	adceq	r0, r6, #1073741832	; 0x40000008
     cfc:	80010000 	andhi	r0, r1, r0
     d00:	00850105 	addeq	r0, r5, r5, lsl #2
     d04:	06400000 	strbeq	r0, [r0], -r0
     d08:	066c0800 	strbteq	r0, [ip], -r0, lsl #16
     d0c:	00460800 	subeq	r0, r6, r0, lsl #16
     d10:	6d010000 	stcvs	0, cr0, [r1, #-0]
     d14:	2000000d 	andcs	r0, r0, sp
     d18:	08000646 	stmdaeq	r0, {r1, r2, r6, r9, sl}
     d1c:	000011de 	ldrdeq	r1, [r0], -lr
     d20:	00064a20 	andeq	r4, r6, r0, lsr #20
     d24:	0011ec08 	andseq	lr, r1, r8, lsl #24
     d28:	064e2000 	strbeq	r2, [lr], -r0
     d2c:	11fa0800 	mvnsne	r0, r0, lsl #16
     d30:	52200000 	eorpl	r0, r0, #0
     d34:	08080006 	stmdaeq	r8, {r1, r2}
     d38:	20000012 	andcs	r0, r0, r2, lsl r0
     d3c:	08000656 	stmdaeq	r0, {r1, r2, r4, r6, r9, sl}
     d40:	00000d6d 	andeq	r0, r0, sp, ror #26
     d44:	00065c1e 	andeq	r5, r6, lr, lsl ip
     d48:	00121608 	andseq	r1, r2, r8, lsl #12
     d4c:	000d5b00 	andeq	r5, sp, r0, lsl #22
     d50:	50011f00 	andpl	r1, r1, r0, lsl #30
     d54:	44980305 	ldrmi	r0, [r8], #773	; 0x305
     d58:	22000800 	andcs	r0, r0, #0, 16
     d5c:	08000664 	stmdaeq	r0, {r2, r5, r6, r9, sl}
     d60:	00001223 	andeq	r1, r0, r3, lsr #4
     d64:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
     d68:	0003e80a 	andeq	lr, r3, sl, lsl #16
     d6c:	08412300 	stmdaeq	r1, {r8, r9, sp}^
     d70:	75010000 	strvc	r0, [r1, #-0]
     d74:	05c4010d 	strbeq	r0, [r4, #269]	; 0x10d
     d78:	06080800 	streq	r0, [r8], -r0, lsl #16
     d7c:	00660800 	rsbeq	r0, r6, r0, lsl #16
     d80:	0a010000 	beq	40d88 <_Min_Heap_Size+0x40588>
     d84:	1c00000e 	stcne	0, cr0, [r0], {14}
     d88:	0000006c 	andeq	r0, r0, ip, rrx
     d8c:	e6197601 	ldr	r7, [r9], -r1, lsl #12
     d90:	0500000b 	streq	r0, [r0, #-11]
     d94:	00009403 	andeq	r9, r0, r3, lsl #8
     d98:	38482420 	stmdacc	r8, {r5, sl, sp}^
     d9c:	77010000 	strvc	r0, [r1, -r0]
     da0:	000bda10 	andeq	sp, fp, r0, lsl sl
     da4:	0000b200 	andeq	fp, r0, r0, lsl #4
     da8:	0000aa00 	andeq	sl, r0, r0, lsl #20
     dac:	05de1e00 	ldrbeq	r1, [lr, #3584]	; 0xe00
     db0:	12310800 	eorsne	r0, r1, #0, 16
     db4:	0de90000 	stcleq	0, cr0, [r9]
     db8:	011f0000 	tsteq	pc, r0
     dbc:	09030550 	stmdbeq	r3, {r4, r6, r8, sl}
     dc0:	1f080006 	svcne	0x00080006
     dc4:	03055101 	movweq	r5, #20737	; 0x5101
     dc8:	08004450 	stmdaeq	r0, {r4, r6, sl, lr}
     dcc:	0352011f 	cmpeq	r2, #-1073741817	; 0xc0000007
     dd0:	1f08000a 	svcne	0x0008000a
     dd4:	30015301 	andcc	r5, r1, r1, lsl #6
     dd8:	007d021f 	rsbseq	r0, sp, pc, lsl r2
     ddc:	021f3101 	andseq	r3, pc, #1073741824	; 0x40000000
     de0:	0305047d 	movweq	r0, #21629	; 0x547d
     de4:	20000094 	mulcs	r0, r4, r0
     de8:	05ea1e00 	strbeq	r1, [sl, #3584]!	; 0xe00
     dec:	12400800 	subne	r0, r0, #0, 16
     df0:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     df4:	011f0000 	tsteq	pc, r0
     df8:	5c030550 	cfstr32pl	mvfx0, [r3], {80}	; 0x50
     dfc:	00080044 	andeq	r0, r8, r4, asr #32
     e00:	0005f420 	andeq	pc, r5, r0, lsr #8
     e04:	00124e08 	andseq	r4, r2, r8, lsl #28
     e08:	c8230000 	stmdagt	r3!, {}	; <UNPREDICTABLE>
     e0c:	01000004 	tsteq	r0, r4
     e10:	08010d6e 	stmdaeq	r1, {r1, r2, r3, r5, r6, r8, sl, fp}
     e14:	20080006 	andcs	r0, r8, r6
     e18:	e7080006 	str	r0, [r8, -r6]
     e1c:	01000000 	mrseq	r0, (UNDEF: 0)
     e20:	00000e61 	andeq	r0, r0, r1, ror #28
     e24:	0000f625 	andeq	pc, r0, r5, lsr #12
     e28:	236e0100 	cmncs	lr, #0, 2
     e2c:	00000987 	andeq	r0, r0, r7, lsl #19
     e30:	0000010b 	andeq	r0, r0, fp, lsl #2
     e34:	00000107 	andeq	r0, r0, r7, lsl #2
     e38:	0006121e 	andeq	r1, r6, lr, lsl r2
     e3c:	00125d08 	andseq	r5, r2, r8, lsl #26
     e40:	000e4d00 	andeq	r4, lr, r0, lsl #26
     e44:	50011f00 	andpl	r1, r1, r0, lsl #30
     e48:	03e80a03 	mvneq	r0, #12288	; 0x3000
     e4c:	06182200 	ldreq	r2, [r8], -r0, lsl #4
     e50:	12160800 	andsne	r0, r6, #0, 16
     e54:	011f0000 	tsteq	pc, r0
     e58:	7c030550 	cfstr32vc	mvfx0, [r3], {80}	; 0x50
     e5c:	00080044 	andeq	r0, r8, r4, asr #32
     e60:	3c011b00 			; <UNDEFINED> instruction: 0x3c011b00
     e64:	01000001 	tsteq	r0, r1
     e68:	00010669 	andeq	r0, r1, r9, ror #12
     e6c:	00000000 	andeq	r0, r0, r0
     e70:	2c000000 	stccs	0, cr0, [r0], {-0}
     e74:	01000001 	tsteq	r0, r1
     e78:	00000eb6 			; <UNDEFINED> instruction: 0x00000eb6
     e7c:	0006ef26 	andeq	lr, r6, r6, lsr #30
     e80:	000ec600 	andeq	ip, lr, r0, lsl #12
     e84:	03050100 	movweq	r0, #20736	; 0x5100
     e88:	00000000 	andeq	r0, r0, r0
     e8c:	0000001e 	andeq	r0, r0, lr, lsl r0
     e90:	00124000 	andseq	r4, r2, r0
     e94:	000eac00 	andeq	sl, lr, r0, lsl #24
     e98:	50011f00 	andpl	r1, r1, r0, lsl #30
     e9c:	00000305 	andeq	r0, r0, r5, lsl #6
     ea0:	011f0000 	tsteq	pc, r0
     ea4:	00030551 	andeq	r0, r3, r1, asr r5
     ea8:	00000000 	andeq	r0, r0, r0
     eac:	00000020 	andeq	r0, r0, r0, lsr #32
     eb0:	000ecb00 	andeq	ip, lr, r0, lsl #22
     eb4:	d50a0000 	strle	r0, [sl, #-0]
     eb8:	c600000b 	strgt	r0, [r0], -fp
     ebc:	0b00000e 	bleq	efc <_Min_Heap_Size+0x6fc>
     ec0:	00000091 	muleq	r0, r1, r0
     ec4:	b6060005 	strlt	r0, [r6], -r5
     ec8:	1b00000e 	blne	f08 <_Min_Heap_Size+0x708>
     ecc:	00013601 	andeq	r3, r1, r1, lsl #12
     ed0:	06640100 	strbteq	r0, [r4], -r0, lsl #2
     ed4:	00000001 	andeq	r0, r0, r1
     ed8:	00000000 	andeq	r0, r0, r0
     edc:	00014c00 	andeq	r4, r1, r0, lsl #24
     ee0:	0f200100 	svceq	0x00200100
     ee4:	ef260000 	svc	0x00260000
     ee8:	c6000006 	strgt	r0, [r0], -r6
     eec:	0100000e 	tsteq	r0, lr
     ef0:	00000305 	andeq	r0, r0, r5, lsl #6
     ef4:	001e0000 	andseq	r0, lr, r0
     ef8:	40000000 	andmi	r0, r0, r0
     efc:	16000012 			; <UNDEFINED> instruction: 0x16000012
     f00:	1f00000f 	svcne	0x0000000f
     f04:	03055001 	movweq	r5, #20481	; 0x5001
     f08:	00000000 	andeq	r0, r0, r0
     f0c:	0551011f 	ldrbeq	r0, [r1, #-287]	; 0xfffffee1
     f10:	00000003 	andeq	r0, r0, r3
     f14:	00200000 	eoreq	r0, r0, r0
     f18:	20000000 	andcs	r0, r0, r0
     f1c:	0000000f 	andeq	r0, r0, pc
     f20:	0855011b 	ldmdaeq	r5, {r0, r1, r3, r4, r8}^
     f24:	5f010000 	svcpl	0x00010000
     f28:	00000106 	andeq	r0, r0, r6, lsl #2
     f2c:	00000000 	andeq	r0, r0, r0
     f30:	016c0000 	cmneq	ip, r0
     f34:	75010000 	strvc	r0, [r1, #-0]
     f38:	2600000f 	strcs	r0, [r0], -pc
     f3c:	000006ef 	andeq	r0, r0, pc, ror #13
     f40:	00000ec6 	andeq	r0, r0, r6, asr #29
     f44:	00030501 	andeq	r0, r3, r1, lsl #10
     f48:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
     f4c:	00000000 	andeq	r0, r0, r0
     f50:	00001240 	andeq	r1, r0, r0, asr #4
     f54:	00000f6b 	andeq	r0, r0, fp, ror #30
     f58:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
     f5c:	00000003 	andeq	r0, r0, r3
     f60:	51011f00 	tstpl	r1, r0, lsl #30
     f64:	00000305 	andeq	r0, r0, r5, lsl #6
     f68:	20000000 	andcs	r0, r0, r0
     f6c:	00000000 	andeq	r0, r0, r0
     f70:	00000f75 	andeq	r0, r0, r5, ror pc
     f74:	9c011b00 			; <UNDEFINED> instruction: 0x9c011b00
     f78:	01000005 	tsteq	r0, r5
     f7c:	0001065a 	andeq	r0, r1, sl, asr r6
     f80:	00000000 	andeq	r0, r0, r0
     f84:	8c000000 	stchi	0, cr0, [r0], {-0}
     f88:	01000001 	tsteq	r0, r1
     f8c:	00000fca 	andeq	r0, r0, sl, asr #31
     f90:	0006ef26 	andeq	lr, r6, r6, lsr #30
     f94:	000ec600 	andeq	ip, lr, r0, lsl #12
     f98:	03050100 	movweq	r0, #20736	; 0x5100
     f9c:	00000000 	andeq	r0, r0, r0
     fa0:	0000001e 	andeq	r0, r0, lr, lsl r0
     fa4:	00124000 	andseq	r4, r2, r0
     fa8:	000fc000 	andeq	ip, pc, r0
     fac:	50011f00 	andpl	r1, r1, r0, lsl #30
     fb0:	00000305 	andeq	r0, r0, r5, lsl #6
     fb4:	011f0000 	tsteq	pc, r0
     fb8:	00030551 	andeq	r0, r3, r1, asr r5
     fbc:	00000000 	andeq	r0, r0, r0
     fc0:	00000020 	andeq	r0, r0, r0, lsr #32
     fc4:	000fca00 	andeq	ip, pc, r0, lsl #20
     fc8:	011b0000 	tsteq	fp, r0
     fcc:	00000047 	andeq	r0, r0, r7, asr #32
     fd0:	01065501 	tsteq	r6, r1, lsl #10
	...
     fdc:	000001ac 	andeq	r0, r0, ip, lsr #3
     fe0:	00101f01 	andseq	r1, r0, r1, lsl #30
     fe4:	06ef2600 	strbteq	r2, [pc], r0, lsl #12
     fe8:	0ec60000 	cdpeq	0, 12, cr0, cr6, cr0, {0}
     fec:	05010000 	streq	r0, [r1, #-0]
     ff0:	00000003 	andeq	r0, r0, r3
     ff4:	00001e00 	andeq	r1, r0, r0, lsl #28
     ff8:	12400000 	subne	r0, r0, #0
     ffc:	10150000 	andsne	r0, r5, r0
    1000:	011f0000 	tsteq	pc, r0
    1004:	00030550 	andeq	r0, r3, r0, asr r5
    1008:	1f000000 	svcne	0x00000000
    100c:	03055101 	movweq	r5, #20737	; 0x5101
    1010:	00000000 	andeq	r0, r0, r0
    1014:	00002000 	andeq	r2, r0, r0
    1018:	101f0000 	andsne	r0, pc, r0
    101c:	1b000000 	blne	1024 <_Min_Heap_Size+0x824>
    1020:	00083b01 	andeq	r3, r8, r1, lsl #22
    1024:	064d0100 	strbeq	r0, [sp], -r0, lsl #2
    1028:	00000001 	andeq	r0, r0, r1
    102c:	00000000 	andeq	r0, r0, r0
    1030:	0001cc00 	andeq	ip, r1, r0, lsl #24
    1034:	10740100 	rsbsne	r0, r4, r0, lsl #2
    1038:	ef260000 	svc	0x00260000
    103c:	c6000006 	strgt	r0, [r0], -r6
    1040:	0100000e 	tsteq	r0, lr
    1044:	00000305 	andeq	r0, r0, r5, lsl #6
    1048:	001e0000 	andseq	r0, lr, r0
    104c:	40000000 	andmi	r0, r0, r0
    1050:	6a000012 	bvs	10a0 <_Min_Heap_Size+0x8a0>
    1054:	1f000010 	svcne	0x00000010
    1058:	03055001 	movweq	r5, #20481	; 0x5001
    105c:	00000000 	andeq	r0, r0, r0
    1060:	0551011f 	ldrbeq	r0, [r1, #-287]	; 0xfffffee1
    1064:	00000003 	andeq	r0, r0, r3
    1068:	00200000 	eoreq	r0, r0, r0
    106c:	74000000 	strvc	r0, [r0], #-0
    1070:	00000010 	andeq	r0, r0, r0, lsl r0
    1074:	027c011b 	rsbseq	r0, ip, #-1073741818	; 0xc0000006
    1078:	3d010000 	stccc	0, cr0, [r1, #-0]
    107c:	00000106 	andeq	r0, r0, r6, lsl #2
    1080:	00000000 	andeq	r0, r0, r0
    1084:	01ec0000 	mvneq	r0, r0
    1088:	fb010000 	blx	41092 <_Min_Heap_Size+0x40892>
    108c:	24000010 	strcs	r0, [r0], #-16
    1090:	000000d5 	ldrdeq	r0, [r0], -r5
    1094:	fb133e01 	blx	4d08a2 <_Min_Heap_Size+0x4d00a2>
    1098:	2a000010 	bcs	10e0 <_Min_Heap_Size+0x8e0>
    109c:	24000002 	strcs	r0, [r0], #-2
    10a0:	1c000002 	stcne	0, cr0, [r0], {2}
    10a4:	00001fd9 	ldrdeq	r1, [r0], -r9
    10a8:	8c123f01 	ldchi	15, cr3, [r2], {1}
    10ac:	02000000 	andeq	r0, r0, #0
    10b0:	001e6c91 	mulseq	lr, r1, ip
    10b4:	40000000 	andmi	r0, r0, r0
    10b8:	cc000012 	stcgt	0, cr0, [r0], {18}
    10bc:	1f000010 	svcne	0x00000010
    10c0:	75025001 	strvc	r5, [r2, #-1]
    10c4:	51011f00 	tstpl	r1, r0, lsl #30
    10c8:	00007402 	andeq	r7, r0, r2, lsl #8
    10cc:	0000001e 	andeq	r0, r0, lr, lsl r0
    10d0:	00124000 	andseq	r4, r2, r0
    10d4:	0010e500 	andseq	lr, r0, r0, lsl #10
    10d8:	50011f00 	andpl	r1, r1, r0, lsl #30
    10dc:	1f007502 	svcne	0x00007502
    10e0:	34015101 	strcc	r5, [r1], #-257	; 0xfffffeff
    10e4:	00002200 	andeq	r2, r0, r0, lsl #4
    10e8:	12400000 	subne	r0, r0, #0
    10ec:	011f0000 	tsteq	pc, r0
    10f0:	00750250 	rsbseq	r0, r5, r0, asr r2
    10f4:	0151011f 	cmpeq	r1, pc, lsl r1
    10f8:	13000033 	movwne	r0, #51	; 0x33
    10fc:	00008c04 	andeq	r8, r0, r4, lsl #24
    1100:	9c011b00 			; <UNDEFINED> instruction: 0x9c011b00
    1104:	01000004 	tsteq	r0, r4
    1108:	00010635 	andeq	r0, r1, r5, lsr r6
    110c:	00000000 	andeq	r0, r0, r0
    1110:	56000000 	strpl	r0, [r0], -r0
    1114:	01000002 	tsteq	r0, r2
    1118:	00001156 	andeq	r1, r0, r6, asr r1
    111c:	01006127 	tsteq	r0, r7, lsr #2
    1120:	00850936 	addeq	r0, r5, r6, lsr r9
    1124:	27000000 	strcs	r0, [r0, -r0]
    1128:	36010062 	strcc	r0, [r1], -r2, rrx
    112c:	00008510 	andeq	r8, r0, r0, lsl r5
    1130:	63270000 			; <UNDEFINED> instruction: 0x63270000
    1134:	17360100 	ldrne	r0, [r6, -r0, lsl #2]!
    1138:	00000085 	andeq	r0, r0, r5, lsl #1
    113c:	00002200 	andeq	r2, r0, r0, lsl #4
    1140:	12400000 	subne	r0, r0, #0
    1144:	011f0000 	tsteq	pc, r0
    1148:	00030550 	andeq	r0, r3, r0, asr r5
    114c:	1f000000 	svcne	0x00000000
    1150:	30015101 	andcc	r5, r1, r1, lsl #2
    1154:	01210000 			; <UNDEFINED> instruction: 0x01210000
    1158:	0000048f 	andeq	r0, r0, pc, lsl #9
    115c:	01051f01 	tsteq	r5, r1, lsl #30
    1160:	00000085 	andeq	r0, r0, r5, lsl #1
    1164:	08000620 	stmdaeq	r0, {r5, r9, sl}
    1168:	08000640 	stmdaeq	r0, {r6, r9, sl}
    116c:	00000276 	andeq	r0, r0, r6, ror r2
    1170:	0011a501 	andseq	sl, r1, r1, lsl #10
    1174:	68632800 	stmdavs	r3!, {fp, sp}^
    1178:	161f0100 	ldrne	r0, [pc], -r0, lsl #2
    117c:	00000085 	andeq	r0, r0, r5, lsl #1
    1180:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    1184:	000002ae 	andeq	r0, r0, lr, lsr #5
    1188:	00063422 	andeq	r3, r6, r2, lsr #8
    118c:	00126c08 	andseq	r6, r2, r8, lsl #24
    1190:	51011f00 	tstpl	r1, r0, lsl #30
    1194:	1f749102 	svcne	0x00749102
    1198:	31015201 	tstcc	r1, r1, lsl #4
    119c:	0353011f 	cmpeq	r3, #-1073741817	; 0xc0000007
    11a0:	00ffff0a 	rscseq	pc, pc, sl, lsl #30
    11a4:	01012900 	tsteq	r1, r0, lsl #18
    11a8:	000000b7 	strheq	r0, [r0], -r7
    11ac:	000000ad 	andeq	r0, r0, sp, lsr #1
    11b0:	012a0012 			; <UNDEFINED> instruction: 0x012a0012
    11b4:	00077201 	andeq	r7, r7, r1, lsl #4
    11b8:	00077200 	andeq	r7, r7, r0, lsl #4
    11bc:	04db0800 	ldrbeq	r0, [fp], #2048	; 0x800
    11c0:	01012a13 	tsteq	r1, r3, lsl sl
    11c4:	0000089d 	muleq	r0, sp, r8
    11c8:	0000089d 	muleq	r0, sp, r8
    11cc:	1304dc08 	movwne	sp, #19464	; 0x4c08
    11d0:	5101012b 	tstpl	r1, fp, lsr #2
    11d4:	51000004 	tstpl	r0, r4
    11d8:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
    11dc:	012b063c 			; <UNDEFINED> instruction: 0x012b063c
    11e0:	00047301 	andeq	r7, r4, r1, lsl #6
    11e4:	00047300 	andeq	r7, r4, r0, lsl #6
    11e8:	13db0f00 	bicsne	r0, fp, #0, 30
    11ec:	9101012b 	tstls	r1, fp, lsr #2
    11f0:	91000009 	tstls	r0, r9
    11f4:	10000009 	andne	r0, r0, r9
    11f8:	012b0627 			; <UNDEFINED> instruction: 0x012b0627
    11fc:	00000701 	andeq	r0, r0, r1, lsl #14
    1200:	00000700 	andeq	r0, r0, r0, lsl #14
    1204:	062a0d00 	strteq	r0, [sl], -r0, lsl #26
    1208:	8001012b 	andhi	r0, r1, fp, lsr #2
    120c:	80000000 	andhi	r0, r0, r0
    1210:	11000000 	mrsne	r0, (UNDEF: 0)
    1214:	01290646 			; <UNDEFINED> instruction: 0x01290646
    1218:	00043e01 	andeq	r3, r4, r1, lsl #28
    121c:	00043400 	andeq	r3, r4, r0, lsl #8
    1220:	2b001200 	blcs	5a28 <_Min_Heap_Size+0x5228>
    1224:	07840101 	streq	r0, [r4, r1, lsl #2]
    1228:	07840000 	streq	r0, [r4, r0]
    122c:	e90f0000 	stmdb	pc, {}	; <UNPREDICTABLE>
    1230:	01012a06 	tsteq	r1, r6, lsl #20
    1234:	000004dd 	ldrdeq	r0, [r0], -sp
    1238:	000004dd 	ldrdeq	r0, [r0], -sp
    123c:	10017e0c 	andne	r7, r1, ip, lsl #28
    1240:	0001012b 	andeq	r0, r1, fp, lsr #2
    1244:	00000000 	andeq	r0, r0, r0
    1248:	13000000 	movwne	r0, #0
    124c:	012a05c8 	smlawteq	sl, r8, r5, r0
    1250:	0002fa01 	andeq	pc, r2, r1, lsl #20
    1254:	0002fa00 	andeq	pc, r2, r0, lsl #20
    1258:	05ec0c00 	strbeq	r0, [ip, #3072]!	; 0xc00
    125c:	01012a06 	tsteq	r1, r6, lsl #20
    1260:	000001c0 	andeq	r0, r0, r0, asr #3
    1264:	000001c0 	andeq	r0, r0, r0, asr #3
    1268:	0603580c 	streq	r5, [r3], -ip, lsl #16
    126c:	4201012a 	andmi	r0, r1, #-2147483638	; 0x8000000a
    1270:	42000001 	andmi	r0, r0, #1
    1274:	0a000001 	beq	1280 <_Min_Heap_Size+0xa80>
    1278:	001302e9 	andseq	r0, r3, r9, ror #5
    127c:	00000a34 	andeq	r0, r0, r4, lsr sl
    1280:	02840002 	addeq	r0, r4, #2
    1284:	01040000 	mrseq	r0, (UNDEF: 4)
    1288:	00000621 	andeq	r0, r0, r1, lsr #12
    128c:	000a640c 	andeq	r6, sl, ip, lsl #8
    1290:	0004e900 	andeq	lr, r4, r0, lsl #18
    1294:	00007000 	andeq	r7, r0, r0
	...
    12a0:	00058c00 	andeq	r8, r5, r0, lsl #24
    12a4:	06010200 	streq	r0, [r1], -r0, lsl #4
    12a8:	0000060f 	andeq	r0, r0, pc, lsl #12
    12ac:	00007603 	andeq	r7, r0, r3, lsl #12
    12b0:	182b0300 	stmdane	fp!, {r8, r9}
    12b4:	0000003c 	andeq	r0, r0, ip, lsr r0
    12b8:	0d080102 	stfeqs	f0, [r8, #-8]
    12bc:	02000006 	andeq	r0, r0, #6
    12c0:	042a0502 	strteq	r0, [sl], #-1282	; 0xfffffafe
    12c4:	8e030000 	cdphi	0, 0, cr0, cr3, cr0, {0}
    12c8:	03000007 	movweq	r0, #7
    12cc:	00561939 	subseq	r1, r6, r9, lsr r9
    12d0:	02020000 	andeq	r0, r2, #0
    12d4:	00082807 	andeq	r2, r8, r7, lsl #16
    12d8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    12dc:	0000032d 	andeq	r0, r0, sp, lsr #6
    12e0:	0002ef03 	andeq	lr, r2, r3, lsl #30
    12e4:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
    12e8:	00000070 	andeq	r0, r0, r0, ror r0
    12ec:	c3070402 	movwgt	r0, #29698	; 0x7402
    12f0:	02000000 	andeq	r0, r0, #0
    12f4:	03280508 			; <UNDEFINED> instruction: 0x03280508
    12f8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    12fc:	0000be07 	andeq	fp, r0, r7, lsl #28
    1300:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    1304:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1308:	c8070402 	stmdagt	r7, {r1, sl}
    130c:	03000000 	movweq	r0, #0
    1310:	00000078 	andeq	r0, r0, r8, ror r0
    1314:	30131804 	andscc	r1, r3, r4, lsl #16
    1318:	05000000 	streq	r0, [r0, #-0]
    131c:	00000093 	muleq	r0, r3, r0
    1320:	00079003 	andeq	r9, r7, r3
    1324:	14240400 	strtne	r0, [r4], #-1024	; 0xfffffc00
    1328:	0000004a 	andeq	r0, r0, sl, asr #32
    132c:	0000a406 	andeq	sl, r0, r6, lsl #8
    1330:	02f10300 	rscseq	r0, r1, #0, 6
    1334:	30040000 	andcc	r0, r4, r0
    1338:	00006414 	andeq	r6, r0, r4, lsl r4
    133c:	00b50600 	adcseq	r0, r5, r0, lsl #12
    1340:	18070000 	stmdane	r7, {}	; <UNPREDICTABLE>
    1344:	09014405 	stmdbeq	r1, {r0, r2, sl, lr}
    1348:	00000130 	andeq	r0, r0, r0, lsr r1
    134c:	00524308 	subseq	r4, r2, r8, lsl #6
    1350:	11014605 	tstne	r1, r5, lsl #12
    1354:	000000c1 	andeq	r0, r0, r1, asr #1
    1358:	09002302 	stmdbeq	r0, {r1, r8, r9, sp}
    135c:	000007ee 	andeq	r0, r0, lr, ror #15
    1360:	11014705 	tstne	r1, r5, lsl #14
    1364:	000000c1 	andeq	r0, r0, r1, asr #1
    1368:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    136c:	00524150 	subseq	r4, r2, r0, asr r1
    1370:	11014805 	tstne	r1, r5, lsl #16
    1374:	000000c1 	andeq	r0, r0, r1, asr #1
    1378:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
    137c:	00000042 	andeq	r0, r0, r2, asr #32
    1380:	11014905 	tstne	r1, r5, lsl #18
    1384:	000000c1 	andeq	r0, r0, r1, asr #1
    1388:	090c2302 	stmdbeq	ip, {r1, r8, r9, sp}
    138c:	00000850 	andeq	r0, r0, r0, asr r8
    1390:	11014a05 	tstne	r1, r5, lsl #20
    1394:	000000c1 	andeq	r0, r0, r1, asr #1
    1398:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    139c:	00524346 	subseq	r4, r2, r6, asr #6
    13a0:	11014b05 	tstne	r1, r5, lsl #22
    13a4:	000000c1 	andeq	r0, r0, r1, asr #1
    13a8:	00142302 	andseq	r2, r4, r2, lsl #6
    13ac:	00080d0a 	andeq	r0, r8, sl, lsl #26
    13b0:	014c0500 	cmpeq	ip, r0, lsl #10
    13b4:	0000c603 	andeq	ip, r0, r3, lsl #12
    13b8:	051c0700 	ldreq	r0, [ip, #-1792]	; 0xfffff900
    13bc:	b6090295 			; <UNDEFINED> instruction: 0xb6090295
    13c0:	08000001 	stmdaeq	r0, {r0}
    13c4:	05005253 	streq	r5, [r0, #-595]	; 0xfffffdad
    13c8:	c1110297 			; <UNDEFINED> instruction: 0xc1110297
    13cc:	02000000 	andeq	r0, r0, #0
    13d0:	44080023 	strmi	r0, [r8], #-35	; 0xffffffdd
    13d4:	98050052 	stmdals	r5, {r1, r4, r6}
    13d8:	00c11102 	sbceq	r1, r1, r2, lsl #2
    13dc:	23020000 	movwcs	r0, #8192	; 0x2000
    13e0:	52420804 	subpl	r0, r2, #4, 16	; 0x40000
    13e4:	99050052 	stmdbls	r5, {r1, r4, r6}
    13e8:	00c11102 	sbceq	r1, r1, r2, lsl #2
    13ec:	23020000 	movwcs	r0, #8192	; 0x2000
    13f0:	52430808 	subpl	r0, r3, #8, 16	; 0x80000
    13f4:	9a050031 	bls	1414c0 <_Min_Heap_Size+0x140cc0>
    13f8:	00c11102 	sbceq	r1, r1, r2, lsl #2
    13fc:	23020000 	movwcs	r0, #8192	; 0x2000
    1400:	5243080c 	subpl	r0, r3, #12, 16	; 0xc0000
    1404:	9b050032 	blls	1414d4 <_Min_Heap_Size+0x140cd4>
    1408:	00c11102 	sbceq	r1, r1, r2, lsl #2
    140c:	23020000 	movwcs	r0, #8192	; 0x2000
    1410:	52430810 	subpl	r0, r3, #16, 16	; 0x100000
    1414:	9c050033 	stcls	0, cr0, [r5], {51}	; 0x33
    1418:	00c11102 	sbceq	r1, r1, r2, lsl #2
    141c:	23020000 	movwcs	r0, #8192	; 0x2000
    1420:	01b20914 			; <UNDEFINED> instruction: 0x01b20914
    1424:	9d050000 	stcls	0, cr0, [r5, #-0]
    1428:	00c11102 	sbceq	r1, r1, r2, lsl #2
    142c:	23020000 	movwcs	r0, #8192	; 0x2000
    1430:	0d0a0018 	stceq	0, cr0, [sl, #-96]	; 0xffffffa0
    1434:	05000004 	streq	r0, [r0, #-4]
    1438:	3d03029e 	sfmcc	f0, 4, [r3, #-632]	; 0xfffffd88
    143c:	02000001 	andeq	r0, r0, #1
    1440:	07580408 	ldrbeq	r0, [r8, -r8, lsl #8]
    1444:	070b0000 	streq	r0, [fp, -r0]
    1448:	00003c01 	andeq	r3, r0, r1, lsl #24
    144c:	01320600 	teqeq	r2, r0, lsl #12
    1450:	000001e5 	andeq	r0, r0, r5, ror #3
    1454:	00093d0c 	andeq	r3, r9, ip, lsl #26
    1458:	230c0000 	movwcs	r0, #49152	; 0xc000
    145c:	01000005 	tsteq	r0, r5
    1460:	01f10300 	mvnseq	r0, r0, lsl #6
    1464:	35060000 	strcc	r0, [r6, #-0]
    1468:	0001ca03 	andeq	ip, r1, r3, lsl #20
    146c:	07300d00 	ldreq	r0, [r0, -r0, lsl #26]!
    1470:	02af0930 	adceq	r0, pc, #48, 18	; 0xc0000
    1474:	050e0000 	streq	r0, [lr, #-0]
    1478:	07000006 	streq	r0, [r0, -r6]
    147c:	00b50c32 	adcseq	r0, r5, r2, lsr ip
    1480:	23020000 	movwcs	r0, #8192	; 0x2000
    1484:	030e0e00 	movweq	r0, #60928	; 0xee00
    1488:	35070000 	strcc	r0, [r7, #-0]
    148c:	0000b50c 	andeq	fp, r0, ip, lsl #10
    1490:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    1494:	0002360e 	andeq	r3, r2, lr, lsl #12
    1498:	0c390700 	ldceq	7, cr0, [r9], #-0
    149c:	000000b5 	strheq	r0, [r0], -r5
    14a0:	0e082302 	cdpeq	3, 0, cr2, cr8, cr2, {0}
    14a4:	000007b9 			; <UNDEFINED> instruction: 0x000007b9
    14a8:	b50c3c07 	strlt	r3, [ip, #-3079]	; 0xfffff3f9
    14ac:	02000000 	andeq	r0, r0, #0
    14b0:	5b0e0c23 	blpl	384544 <_Min_Heap_Size+0x383d44>
    14b4:	07000008 	streq	r0, [r0, -r8]
    14b8:	00b50c3f 	adcseq	r0, r5, pc, lsr ip
    14bc:	23020000 	movwcs	r0, #8192	; 0x2000
    14c0:	03fc0e10 	mvnseq	r0, #16, 28	; 0x100
    14c4:	42070000 	andmi	r0, r7, #0
    14c8:	0000b50c 	andeq	fp, r0, ip, lsl #10
    14cc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    14d0:	0007360e 	andeq	r3, r7, lr, lsl #12
    14d4:	0c450700 	mcrreq	7, 0, r0, r5, cr0
    14d8:	000000b5 	strheq	r0, [r0], -r5
    14dc:	0e182302 	cdpeq	3, 1, cr2, cr8, cr2, {0}
    14e0:	00002065 	andeq	r2, r0, r5, rrx
    14e4:	b50c4a07 	strlt	r4, [ip, #-2567]	; 0xfffff5f9
    14e8:	02000000 	andeq	r0, r0, #0
    14ec:	320e1c23 	andcc	r1, lr, #8960	; 0x2300
    14f0:	07000007 	streq	r0, [r0, -r7]
    14f4:	00b50c4d 	adcseq	r0, r5, sp, asr #24
    14f8:	23020000 	movwcs	r0, #8192	; 0x2000
    14fc:	07640e20 	strbeq	r0, [r4, -r0, lsr #28]!
    1500:	52070000 	andpl	r0, r7, #0
    1504:	0000b50c 	andeq	fp, r0, ip, lsl #10
    1508:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    150c:	0002490e 	andeq	r4, r2, lr, lsl #18
    1510:	0c550700 	mrrceq	7, 0, r0, r5, cr0
    1514:	000000b5 	strheq	r0, [r0], -r5
    1518:	0e282302 	cdpeq	3, 2, cr2, cr8, cr2, {0}
    151c:	000007c0 	andeq	r0, r0, r0, asr #15
    1520:	b50c5b07 	strlt	r5, [ip, #-2823]	; 0xfffff4f9
    1524:	02000000 	andeq	r0, r0, #0
    1528:	03002c23 	movweq	r2, #3107	; 0xc23
    152c:	0000004d 	andeq	r0, r0, sp, asr #32
    1530:	f1026007 			; <UNDEFINED> instruction: 0xf1026007
    1534:	0b000001 	bleq	1540 <_Min_Heap_Size+0xd40>
    1538:	003c0107 	eorseq	r0, ip, r7, lsl #2
    153c:	67070000 	strvs	r0, [r7, -r0]
    1540:	0002ee01 	andeq	lr, r2, r1, lsl #28
    1544:	01220c00 			; <UNDEFINED> instruction: 0x01220c00
    1548:	0c000000 	stceq	0, cr0, [r0], {-0}
    154c:	0000045f 	andeq	r0, r0, pc, asr r4
    1550:	047c0c01 	ldrbteq	r0, [ip], #-3073	; 0xfffff3ff
    1554:	0c020000 	stceq	0, cr0, [r2], {-0}
    1558:	000008d7 	ldrdeq	r0, [r0], -r7
    155c:	025f0c03 	subseq	r0, pc, #768	; 0x300
    1560:	0c040000 	stceq	0, cr0, [r4], {-0}
    1564:	000003be 			; <UNDEFINED> instruction: 0x000003be
    1568:	c6030005 	strgt	r0, [r3], -r5
    156c:	07000006 	streq	r0, [r0, -r6]
    1570:	02bb026e 	adcseq	r0, fp, #-536870906	; 0xe0000006
    1574:	ee060000 	cdp	0, 0, cr0, cr6, cr0, {0}
    1578:	0f000002 	svceq	0x00000002
    157c:	0000071e 	andeq	r0, r0, lr, lsl r7
    1580:	108a0760 	addne	r0, sl, r0, ror #14
    1584:	000003df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1588:	0005360e 	andeq	r3, r5, lr, lsl #12
    158c:	1f8c0700 	svcne	0x008c0700
    1590:	000003df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1594:	0e002302 	cdpeq	3, 0, cr2, cr0, cr2, {0}
    1598:	00001b47 	andeq	r1, r0, r7, asr #22
    159c:	af1e8e07 	svcge	0x001e8e07
    15a0:	02000002 	andeq	r0, r0, #2
    15a4:	e80e0423 	stmda	lr, {r0, r1, r5, sl}
    15a8:	07000031 	smladxeq	r0, r1, r0, r0
    15ac:	01e51e90 	stlexheq	r1, r0, [r5]
    15b0:	23020000 	movwcs	r0, #8192	; 0x2000
    15b4:	034b0e34 	movteq	r0, #48692	; 0xbe34
    15b8:	92070000 	andls	r0, r7, #0
    15bc:	0002fa1e 	andeq	pc, r2, lr, lsl sl	; <UNPREDICTABLE>
    15c0:	35230200 	strcc	r0, [r3, #-512]!	; 0xfffffe00
    15c4:	0002d30e 	andeq	sp, r2, lr, lsl #6
    15c8:	1f940700 	svcne	0x00940700
    15cc:	000003e5 	andeq	r0, r0, r5, ror #7
    15d0:	0e382302 	cdpeq	3, 3, cr2, cr8, cr2, {0}
    15d4:	00000980 	andeq	r0, r0, r0, lsl #19
    15d8:	f9219607 			; <UNDEFINED> instruction: 0xf9219607
    15dc:	02000003 	andeq	r0, r0, #3
    15e0:	0d0e3c23 	stceq	12, cr3, [lr, #-140]	; 0xffffff74
    15e4:	07000002 	streq	r0, [r0, -r2]
    15e8:	03f92198 	mvnseq	r2, #152, 2	; 0x26
    15ec:	23020000 	movwcs	r0, #8192	; 0x2000
    15f0:	01cb0e40 	biceq	r0, fp, r0, asr #28
    15f4:	9a070000 	bls	1c15fc <_Min_Heap_Size+0x1c0dfc>
    15f8:	0003f921 	andeq	pc, r3, r1, lsr #18
    15fc:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    1600:	0005ee0e 	andeq	lr, r5, lr, lsl #28
    1604:	219c0700 	orrscs	r0, ip, r0, lsl #14
    1608:	000003f9 	strdeq	r0, [r0], -r9
    160c:	0e482302 	cdpeq	3, 4, cr2, cr8, cr2, {0}
    1610:	0000053f 	andeq	r0, r0, pc, lsr r5
    1614:	f9219e07 			; <UNDEFINED> instruction: 0xf9219e07
    1618:	02000003 	andeq	r0, r0, #3
    161c:	6e0e4c23 	cdpvs	12, 0, cr4, cr14, cr3, {1}
    1620:	07000009 	streq	r0, [r0, -r9]
    1624:	03f921a0 	mvnseq	r2, #160, 2	; 0x28
    1628:	23020000 	movwcs	r0, #8192	; 0x2000
    162c:	03dd0e50 	bicseq	r0, sp, #80, 28	; 0x500
    1630:	a2070000 	andge	r0, r7, #0
    1634:	0000c11e 	andeq	ip, r0, lr, lsl r1
    1638:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    163c:	0002bc0e 	andeq	fp, r2, lr, lsl #24
    1640:	1ea40700 	cdpne	7, 10, cr0, cr4, cr0, {0}
    1644:	000000b5 	strheq	r0, [r0], -r5
    1648:	0e582302 	cdpeq	3, 5, cr2, cr8, cr2, {0}
    164c:	0000036b 	andeq	r0, r0, fp, ror #6
    1650:	b51ea607 	ldrlt	sl, [lr, #-1543]	; 0xfffff9f9
    1654:	02000000 	andeq	r0, r0, #0
    1658:	10005c23 	andne	r5, r0, r3, lsr #24
    165c:	00013004 	andeq	r3, r1, r4
    1660:	12041100 	andne	r1, r4, #0, 2
    1664:	0003f301 	andeq	pc, r3, r1, lsl #6
    1668:	03f31300 	mvnseq	r1, #0, 6
    166c:	10000000 	andne	r0, r0, r0
    1670:	0002ff04 	andeq	pc, r2, r4, lsl #30
    1674:	e7041000 	str	r1, [r4, -r0]
    1678:	03000003 	movweq	r0, #3
    167c:	00000720 	andeq	r0, r0, r0, lsr #14
    1680:	ff02a807 			; <UNDEFINED> instruction: 0xff02a807
    1684:	0d000002 	stceq	0, cr0, [r0, #-8]
    1688:	092e081c 	stmdbeq	lr!, {r2, r3, r4, fp}
    168c:	0000047e 	andeq	r0, r0, lr, ror r4
    1690:	0001b70e 	andeq	fp, r1, lr, lsl #14
    1694:	0c300800 	ldceq	8, cr0, [r0], #-0
    1698:	000000b5 	strheq	r0, [r0], -r5
    169c:	0e002302 	cdpeq	3, 0, cr2, cr0, cr2, {0}
    16a0:	0000073b 	andeq	r0, r0, fp, lsr r7
    16a4:	b50c3608 	strlt	r3, [ip, #-1544]	; 0xfffff9f8
    16a8:	02000000 	andeq	r0, r0, #0
    16ac:	ab0e0423 	blge	382740 <_Min_Heap_Size+0x381f40>
    16b0:	08000002 	stmdaeq	r0, {r1}
    16b4:	00b50c39 	adcseq	r0, r5, r9, lsr ip
    16b8:	23020000 	movwcs	r0, #8192	; 0x2000
    16bc:	03510e08 	cmpeq	r1, #8, 28	; 0x80
    16c0:	3c080000 	stccc	0, cr0, [r8], {-0}
    16c4:	0000b50c 	andeq	fp, r0, ip, lsl #10
    16c8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    16cc:	0007360e 	andeq	r3, r7, lr, lsl #12
    16d0:	0c430800 	mcrreq	8, 0, r0, r3, cr0
    16d4:	000000b5 	strheq	r0, [r0], -r5
    16d8:	0e102302 	cdpeq	3, 1, cr2, cr0, cr2, {0}
    16dc:	000008cd 	andeq	r0, r0, sp, asr #17
    16e0:	b50c4608 	strlt	r4, [ip, #-1544]	; 0xfffff9f8
    16e4:	02000000 	andeq	r0, r0, #0
    16e8:	5e0e1423 	cdppl	4, 0, cr1, cr14, cr3, {1}
    16ec:	08000001 	stmdaeq	r0, {r0}
    16f0:	00b50c49 	adcseq	r0, r5, r9, asr #24
    16f4:	23020000 	movwcs	r0, #8192	; 0x2000
    16f8:	6f030018 	svcvs	0x00030018
    16fc:	08000008 	stmdaeq	r0, {r3}
    1700:	040b034b 	streq	r0, [fp], #-843	; 0xfffffcb5
    1704:	070b0000 	streq	r0, [fp, -r0]
    1708:	00003c01 	andeq	r3, r0, r1, lsl #24
    170c:	01750800 	cmneq	r5, r0, lsl #16
    1710:	000004c9 	andeq	r0, r0, r9, asr #9
    1714:	0007f30c 	andeq	pc, r7, ip, lsl #6
    1718:	da0c0000 	ble	301720 <_Min_Heap_Size+0x300f20>
    171c:	20000002 	andcs	r0, r0, r2
    1720:	0009290c 	andeq	r2, r9, ip, lsl #18
    1724:	510c2400 	tstpl	ip, r0, lsl #8
    1728:	21000005 	tstcs	r0, r5
    172c:	0007990c 	andeq	r9, r7, ip, lsl #18
    1730:	980c2200 	stmdals	ip, {r9, sp}
    1734:	23000001 	movwcs	r0, #1
    1738:	0008b60c 	andeq	fp, r8, ip, lsl #12
    173c:	f80ca000 			; <UNDEFINED> instruction: 0xf80ca000
    1740:	e0000006 	and	r0, r0, r6
    1744:	00250300 	eoreq	r0, r5, r0, lsl #6
    1748:	87080000 	strhi	r0, [r8, -r0]
    174c:	00048a03 	andeq	r8, r4, r3, lsl #20
    1750:	04c90600 	strbeq	r0, [r9], #1536	; 0x600
    1754:	86030000 	strhi	r0, [r3], -r0
    1758:	08000008 	stmdaeq	r0, {r3}
    175c:	00b51290 	umlalseq	r1, r5, r0, r2
    1760:	da060000 	ble	181768 <_Min_Heap_Size+0x180f68>
    1764:	03000004 	movweq	r0, #4
    1768:	000000da 	ldrdeq	r0, [r0], -sl
    176c:	b5129b08 	ldrlt	r9, [r2, #-2824]	; 0xfffff4f8
    1770:	06000000 	streq	r0, [r0], -r0
    1774:	000004eb 	andeq	r0, r0, fp, ror #9
    1778:	0004b30f 	andeq	fp, r4, pc, lsl #6
    177c:	a0084800 	andge	r4, r8, r0, lsl #16
    1780:	0005fa10 	andeq	pc, r5, r0, lsl sl	; <UNPREDICTABLE>
    1784:	05360e00 	ldreq	r0, [r6, #-3584]!	; 0xfffff200
    1788:	a2080000 	andge	r0, r8, #0
    178c:	0005fa22 	andeq	pc, r5, r2, lsr #20
    1790:	00230200 	eoreq	r0, r3, r0, lsl #4
    1794:	001b470e 	andseq	r4, fp, lr, lsl #14
    1798:	21a40800 			; <UNDEFINED> instruction: 0x21a40800
    179c:	0000047e 	andeq	r0, r0, lr, ror r4
    17a0:	0e042302 	cdpeq	3, 0, cr2, cr4, cr2, {0}
    17a4:	00000222 	andeq	r0, r0, r2, lsr #4
    17a8:	0022a608 	eoreq	sl, r2, r8, lsl #12
    17ac:	02000006 	andeq	r0, r0, #6
    17b0:	a30e2023 	movwge	r2, #57379	; 0xe023
    17b4:	08000003 	stmdaeq	r0, {r0, r1}
    17b8:	00a421a8 	adceq	r2, r4, r8, lsr #3
    17bc:	23020000 	movwcs	r0, #8192	; 0x2000
    17c0:	016b0e24 	cmneq	fp, r4, lsr #28
    17c4:	aa080000 	bge	2017cc <_Min_Heap_Size+0x200fcc>
    17c8:	0000b021 	andeq	fp, r0, r1, lsr #32
    17cc:	26230200 	strtcs	r0, [r3], -r0, lsl #4
    17d0:	0008ed0e 	andeq	lr, r8, lr, lsl #26
    17d4:	22ac0800 	adccs	r0, ip, #0, 16
    17d8:	00000606 	andeq	r0, r0, r6, lsl #12
    17dc:	0e282302 	cdpeq	3, 2, cr2, cr8, cr2, {0}
    17e0:	00000398 	muleq	r0, r8, r3
    17e4:	a421ae08 	strtge	sl, [r1], #-3592	; 0xfffff1f8
    17e8:	02000000 	andeq	r0, r0, #0
    17ec:	1d0e2c23 	stcne	12, cr2, [lr, #-140]	; 0xffffff74
    17f0:	08000009 	stmdaeq	r0, {r0, r3}
    17f4:	00b021b0 	ldrhteq	r2, [r0], r0
    17f8:	23020000 	movwcs	r0, #8192	; 0x2000
    17fc:	09600e2e 	stmdbeq	r0!, {r1, r2, r3, r5, r9, sl, fp}^
    1800:	b2080000 	andlt	r0, r8, #0
    1804:	0004e61f 	andeq	lr, r4, pc, lsl r6
    1808:	30230200 	eorcc	r0, r3, r0, lsl #4
    180c:	00115c0e 	andseq	r5, r1, lr, lsl #24
    1810:	24b40800 	ldrtcs	r0, [r4], #2048	; 0x800
    1814:	000004f7 	strdeq	r0, [r0], -r7
    1818:	0e342302 	cdpeq	3, 3, cr2, cr4, cr2, {0}
    181c:	00000579 	andeq	r0, r0, r9, ror r5
    1820:	0c22b608 	stceq	6, cr11, [r2], #-32	; 0xffffffe0
    1824:	02000006 	andeq	r0, r0, #6
    1828:	210e3823 	tstcs	lr, r3, lsr #16
    182c:	08000003 	stmdaeq	r0, {r0, r1}
    1830:	060c22b8 			; <UNDEFINED> instruction: 0x060c22b8
    1834:	23020000 	movwcs	r0, #8192	; 0x2000
    1838:	31e80e3c 	mvncc	r0, ip, lsr lr
    183c:	ba080000 	blt	201844 <_Min_Heap_Size+0x201044>
    1840:	0001e521 	andeq	lr, r1, r1, lsr #10
    1844:	40230200 	eormi	r0, r3, r0, lsl #4
    1848:	00003b0e 	andeq	r3, r0, lr, lsl #22
    184c:	21bc0800 			; <UNDEFINED> instruction: 0x21bc0800
    1850:	000004d5 	ldrdeq	r0, [r0], -r5
    1854:	0e412302 	cdpeq	3, 4, cr2, cr1, cr2, {0}
    1858:	00000953 	andeq	r0, r0, r3, asr r9
    185c:	d521c008 	strle	ip, [r1, #-8]!
    1860:	02000004 	andeq	r0, r0, #4
    1864:	dd0e4223 	sfmle	f4, 4, [lr, #-140]	; 0xffffff74
    1868:	08000003 	stmdaeq	r0, {r0, r1}
    186c:	00c121c3 	sbceq	r2, r1, r3, asr #3
    1870:	23020000 	movwcs	r0, #8192	; 0x2000
    1874:	04100044 	ldreq	r0, [r0], #-68	; 0xffffffbc
    1878:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    187c:	009f0410 	addseq	r0, pc, r0, lsl r4	; <UNPREDICTABLE>
    1880:	04100000 	ldreq	r0, [r0], #-0
    1884:	00000093 	muleq	r0, r3, r0
    1888:	03ff0410 	mvnseq	r0, #16, 8	; 0x10000000
    188c:	b5030000 	strlt	r0, [r3, #-0]
    1890:	08000004 	stmdaeq	r0, {r2}
    1894:	04fc03d5 	ldrbteq	r0, [ip], #981	; 0x3d5
    1898:	01020000 	mrseq	r0, (UNDEF: 2)
    189c:	00061608 	andeq	r1, r6, r8, lsl #12
    18a0:	061e0500 	ldreq	r0, [lr], -r0, lsl #10
    18a4:	fd030000 	stc2	0, cr0, [r3, #-0]
    18a8:	09000027 	stmdbeq	r0, {r0, r1, r2, r5}
    18ac:	005d1a3b 	subseq	r1, sp, fp, lsr sl
    18b0:	64140000 	ldrvs	r0, [r4], #-0
    18b4:	01000003 	tsteq	r0, r3
    18b8:	06121b3c 			; <UNDEFINED> instruction: 0x06121b3c
    18bc:	01010000 	mrseq	r0, (UNDEF: 1)
    18c0:	0aaa0115 	beq	fea81d1c <_estack+0xdea7837c>
    18c4:	f2010000 	vhadd.s8	d0, d1, d0
    18c8:	070c0106 	streq	r0, [ip, -r6, lsl #2]
    18cc:	07240800 	streq	r0, [r4, -r0, lsl #16]!
    18d0:	02d10800 	sbcseq	r0, r1, #0, 16
    18d4:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    18d8:	16000006 	strne	r0, [r0], -r6
    18dc:	00000ab8 			; <UNDEFINED> instruction: 0x00000ab8
    18e0:	061df201 	ldreq	pc, [sp], -r1, lsl #4
    18e4:	f5000006 			; <UNDEFINED> instruction: 0xf5000006
    18e8:	f1000002 	cps	#2
    18ec:	16000002 	strne	r0, [r0], -r2
    18f0:	00000a5f 	andeq	r0, r0, pc, asr sl
    18f4:	b52cf201 	strlt	pc, [ip, #-513]!	; 0xfffffdff
    18f8:	1a000000 	bne	1900 <_Min_Heap_Size+0x1100>
    18fc:	16000003 	strne	r0, [r0], -r3
    1900:	17000003 	strne	r0, [r0, -r3]
    1904:	000006ef 	andeq	r0, r0, pc, ror #13
    1908:	000006d9 	ldrdeq	r0, [r0], -r9
    190c:	b8030501 	stmdalt	r3, {r0, r8, sl}
    1910:	18080044 	stmdane	r8, {r2, r6}
    1914:	000009c8 	andeq	r0, r0, r8, asr #19
    1918:	08000716 	stmdaeq	r0, {r1, r2, r4, r8, r9, sl}
    191c:	00071601 	andeq	r1, r7, r1, lsl #12
    1920:	00071808 	andeq	r1, r7, r8, lsl #16
    1924:	03f50108 	mvnseq	r0, #8, 2
    1928:	00071619 	andeq	r1, r7, r9, lsl r6
    192c:	0009d308 	andeq	sp, r9, r8, lsl #6
    1930:	50011a00 	andpl	r1, r1, r0, lsl #20
    1934:	44a80305 	strtmi	r0, [r8], #773	; 0x305
    1938:	011a0800 	tsteq	sl, r0, lsl #16
    193c:	b8030551 	stmdalt	r3, {r0, r4, r6, r8, sl}
    1940:	00080044 	andeq	r0, r8, r4, asr #32
    1944:	06251b00 	strteq	r1, [r5], -r0, lsl #22
    1948:	06d90000 	ldrbeq	r0, [r9], r0
    194c:	8c1c0000 	ldchi	0, cr0, [ip], {-0}
    1950:	0d000000 	stceq	0, cr0, [r0, #-0]
    1954:	06c90500 	strbeq	r0, [r9], r0, lsl #10
    1958:	01150000 	tsteq	r5, r0
    195c:	00000451 	andeq	r0, r0, r1, asr r4
    1960:	0106e301 	tsteq	r6, r1, lsl #6
    1964:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
    1968:	0800070c 	stmdaeq	r0, {r2, r3, r8, r9, sl}
    196c:	0000033b 	andeq	r0, r0, fp, lsr r3
    1970:	00073b01 	andeq	r3, r7, r1, lsl #22
    1974:	06ef1700 	strbteq	r1, [pc], r0, lsl #14
    1978:	06d90000 	ldrbeq	r0, [r9], r0
    197c:	05010000 	streq	r0, [r1, #-0]
    1980:	0044c803 	subeq	ip, r4, r3, lsl #16
    1984:	09c81808 	stmibeq	r8, {r3, fp, ip}^
    1988:	06fe0000 	ldrbteq	r0, [lr], r0
    198c:	fe010800 	vcmla.f16	d0, d1, d0[0], #0
    1990:	00080006 	andeq	r0, r8, r6
    1994:	01080007 	tsteq	r8, r7
    1998:	fe1903e6 	cdp2	3, 1, cr0, cr9, cr6, {7}
    199c:	d3080006 	movwle	r0, #32774	; 0x8006
    19a0:	1a000009 	bne	19cc <_Min_Heap_Size+0x11cc>
    19a4:	03055001 	movweq	r5, #20481	; 0x5001
    19a8:	080044a8 	stmdaeq	r0, {r3, r5, r7, sl, lr}
    19ac:	0551011a 	ldrbeq	r0, [r1, #-282]	; 0xfffffee6
    19b0:	0044c803 	subeq	ip, r4, r3, lsl #16
    19b4:	15000008 	strne	r0, [r0, #-8]
    19b8:	000a0101 	andeq	r0, sl, r1, lsl #2
    19bc:	06d30100 	ldrbeq	r0, [r3], r0, lsl #2
    19c0:	0006e401 	andeq	lr, r6, r1, lsl #8
    19c4:	0006f408 	andeq	pc, r6, r8, lsl #8
    19c8:	00035b08 	andeq	r5, r3, r8, lsl #22
    19cc:	07600100 	strbeq	r0, [r0, -r0, lsl #2]!
    19d0:	ec1d0000 	ldc	0, cr0, [sp], {-0}
    19d4:	e1080006 	tst	r8, r6
    19d8:	00000009 	andeq	r0, r0, r9
    19dc:	0af00115 	beq	ffc01e38 <_estack+0xdfbf8498>
    19e0:	bb010000 	bllt	419e8 <_Min_Heap_Size+0x411e8>
    19e4:	06ce0106 	strbeq	r0, [lr], r6, lsl #2
    19e8:	06e40800 	strbteq	r0, [r4], r0, lsl #16
    19ec:	037b0800 	cmneq	fp, #0, 16
    19f0:	97010000 	strls	r0, [r1, -r0]
    19f4:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    19f8:	080006d4 	stmdaeq	r0, {r2, r4, r6, r7, r9, sl}
    19fc:	000009f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1a00:	0006dc1d 	andeq	sp, r6, sp, lsl ip
    1a04:	0009ff08 	andeq	pc, r9, r8, lsl #30
    1a08:	06e21d00 	strbteq	r1, [r2], r0, lsl #26
    1a0c:	0a0d0800 	beq	343a14 <_Min_Heap_Size+0x343214>
    1a10:	15000000 	strne	r0, [r0, #-0]
    1a14:	000a8101 	andeq	r8, sl, r1, lsl #2
    1a18:	06ae0100 	strteq	r0, [lr], r0, lsl #2
    1a1c:	0006c601 	andeq	ip, r6, r1, lsl #12
    1a20:	0006ce08 	andeq	ip, r6, r8, lsl #28
    1a24:	00039b08 	andeq	r9, r3, r8, lsl #22
    1a28:	07bc0100 	ldreq	r0, [ip, r0, lsl #2]!
    1a2c:	cc1d0000 	ldcgt	0, cr0, [sp], {-0}
    1a30:	1b080006 	blne	201a50 <_Min_Heap_Size+0x201250>
    1a34:	0000000a 	andeq	r0, r0, sl
    1a38:	09cb011e 	stmibeq	fp, {r1, r2, r3, r4, r8}^
    1a3c:	a1010000 	mrsge	r0, (UNDEF: 1)
    1a40:	06c40106 	strbeq	r0, [r4], r6, lsl #2
    1a44:	06c60800 	strbeq	r0, [r6], r0, lsl #16
    1a48:	7d020800 	stcvc	8, cr0, [r2, #-0]
    1a4c:	01150100 	tsteq	r5, r0, lsl #2
    1a50:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    1a54:	01069401 	tsteq	r6, r1, lsl #8
    1a58:	080006bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl}
    1a5c:	080006c4 	stmdaeq	r0, {r2, r6, r7, r9, sl}
    1a60:	000003bb 			; <UNDEFINED> instruction: 0x000003bb
    1a64:	0007f701 	andeq	pc, r7, r1, lsl #14
    1a68:	06c21d00 	strbeq	r1, [r2], r0, lsl #26
    1a6c:	0a290800 	beq	a43a74 <_Min_Heap_Size+0xa43274>
    1a70:	15000000 	strne	r0, [r0, #-0]
    1a74:	000a1301 	andeq	r1, sl, r1, lsl #6
    1a78:	06850100 	streq	r0, [r5], r0, lsl #2
    1a7c:	0006a801 	andeq	sl, r6, r1, lsl #16
    1a80:	0006bc08 	andeq	fp, r6, r8, lsl #24
    1a84:	0003db08 	andeq	sp, r3, r8, lsl #22
    1a88:	083f0100 	ldmdaeq	pc!, {r8}	; <UNPREDICTABLE>
    1a8c:	ef170000 	svc	0x00170000
    1a90:	4f000006 	svcmi	0x00000006
    1a94:	01000008 	tsteq	r0, r8
    1a98:	44d80305 	ldrbmi	r0, [r8], #773	; 0x305
    1a9c:	b2190800 	andslt	r0, r9, #0, 16
    1aa0:	d3080006 	movwle	r0, #32774	; 0x8006
    1aa4:	1a000009 	bne	1ad0 <_Min_Heap_Size+0x12d0>
    1aa8:	03055001 	movweq	r5, #20481	; 0x5001
    1aac:	080044a8 	stmdaeq	r0, {r3, r5, r7, sl, lr}
    1ab0:	0551011a 	ldrbeq	r0, [r1, #-282]	; 0xfffffee6
    1ab4:	0044d803 	subeq	sp, r4, r3, lsl #16
    1ab8:	1b000008 	blne	1ae0 <_Min_Heap_Size+0x12e0>
    1abc:	00000625 	andeq	r0, r0, r5, lsr #12
    1ac0:	0000084f 	andeq	r0, r0, pc, asr #16
    1ac4:	00008c1c 	andeq	r8, r0, ip, lsl ip
    1ac8:	05001200 	streq	r1, [r0, #-512]	; 0xfffffe00
    1acc:	0000083f 	andeq	r0, r0, pc, lsr r8
    1ad0:	09f00115 	ldmibeq	r0!, {r0, r2, r4, r8}^
    1ad4:	76010000 	strvc	r0, [r1], -r0
    1ad8:	06940106 	ldreq	r0, [r4], r6, lsl #2
    1adc:	06a80800 	strteq	r0, [r8], r0, lsl #16
    1ae0:	03fb0800 	mvnseq	r0, #0, 16
    1ae4:	9c010000 	stcls	0, cr0, [r1], {-0}
    1ae8:	17000008 	strne	r0, [r0, -r8]
    1aec:	000006ef 	andeq	r0, r0, pc, ror #13
    1af0:	000008ac 	andeq	r0, r0, ip, lsr #17
    1af4:	ec030501 	cfstr32	mvfx0, [r3], {1}
    1af8:	19080044 	stmdbne	r8, {r2, r6}
    1afc:	0800069e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r9, sl}
    1b00:	000009d3 	ldrdeq	r0, [r0], -r3
    1b04:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    1b08:	0044a803 	subeq	sl, r4, r3, lsl #16
    1b0c:	51011a08 	tstpl	r1, r8, lsl #20
    1b10:	44ec0305 	strbtmi	r0, [ip], #773	; 0x305
    1b14:	00000800 	andeq	r0, r0, r0, lsl #16
    1b18:	0006251b 	andeq	r2, r6, fp, lsl r5
    1b1c:	0008ac00 	andeq	sl, r8, r0, lsl #24
    1b20:	008c1c00 	addeq	r1, ip, r0, lsl #24
    1b24:	00100000 	andseq	r0, r0, r0
    1b28:	00089c05 	andeq	r9, r8, r5, lsl #24
    1b2c:	4d011500 	cfstr32mi	mvfx1, [r1, #-0]
    1b30:	0100000a 	tsteq	r0, sl
    1b34:	80010667 	andhi	r0, r1, r7, ror #12
    1b38:	94080006 	strls	r0, [r8], #-6
    1b3c:	1b080006 	blne	201b5c <_Min_Heap_Size+0x20135c>
    1b40:	01000004 	tsteq	r0, r4
    1b44:	000008f9 	strdeq	r0, [r0], -r9
    1b48:	0006ef17 	andeq	lr, r6, r7, lsl pc
    1b4c:	00090900 	andeq	r0, r9, r0, lsl #18
    1b50:	03050100 	movweq	r0, #20736	; 0x5100
    1b54:	08004500 	stmdaeq	r0, {r8, sl, lr}
    1b58:	00068a19 	andeq	r8, r6, r9, lsl sl
    1b5c:	0009d308 	andeq	sp, r9, r8, lsl #6
    1b60:	50011a00 	andpl	r1, r1, r0, lsl #20
    1b64:	44a80305 	strtmi	r0, [r8], #773	; 0x305
    1b68:	011a0800 	tsteq	sl, r0, lsl #16
    1b6c:	00030551 	andeq	r0, r3, r1, asr r5
    1b70:	00080045 	andeq	r0, r8, r5, asr #32
    1b74:	06251b00 	strteq	r1, [r5], -r0, lsl #22
    1b78:	09090000 	stmdbeq	r9, {}	; <UNPREDICTABLE>
    1b7c:	8c1c0000 	ldchi	0, cr0, [ip], {-0}
    1b80:	11000000 	mrsne	r0, (UNDEF: 0)
    1b84:	08f90500 	ldmeq	r9!, {r8, sl}^
    1b88:	01150000 	tsteq	r5, r0
    1b8c:	00000b00 	andeq	r0, r0, r0, lsl #22
    1b90:	01065801 	tsteq	r6, r1, lsl #16
	...
    1b9c:	0000043b 	andeq	r0, r0, fp, lsr r4
    1ba0:	00095601 	andeq	r5, r9, r1, lsl #12
    1ba4:	06ef1700 	strbteq	r1, [pc], r0, lsl #14
    1ba8:	09660000 	stmdbeq	r6!, {}^	; <UNPREDICTABLE>
    1bac:	05010000 	streq	r0, [r1, #-0]
    1bb0:	00000003 	andeq	r0, r0, r3
    1bb4:	00001900 	andeq	r1, r0, r0, lsl #18
    1bb8:	09d30000 	ldmibeq	r3, {}^	; <UNPREDICTABLE>
    1bbc:	011a0000 	tsteq	sl, r0
    1bc0:	a8030550 	stmdage	r3, {r4, r6, r8, sl}
    1bc4:	1a080044 	bne	201cdc <_Min_Heap_Size+0x2014dc>
    1bc8:	03055101 	movweq	r5, #20737	; 0x5101
    1bcc:	00000000 	andeq	r0, r0, r0
    1bd0:	251b0000 	ldrcs	r0, [fp, #-0]
    1bd4:	66000006 	strvs	r0, [r0], -r6
    1bd8:	1c000009 	stcne	0, cr0, [r0], {9}
    1bdc:	0000008c 	andeq	r0, r0, ip, lsl #1
    1be0:	56050019 			; <UNDEFINED> instruction: 0x56050019
    1be4:	15000009 	strne	r0, [r0, #-9]
    1be8:	0009bf01 	andeq	fp, r9, r1, lsl #30
    1bec:	06490100 	strbeq	r0, [r9], -r0, lsl #2
    1bf0:	00066c01 	andeq	r6, r6, r1, lsl #24
    1bf4:	00068008 	andeq	r8, r6, r8
    1bf8:	00045b08 	andeq	r5, r4, r8, lsl #22
    1bfc:	09b30100 	ldmibeq	r3!, {r8}
    1c00:	ef170000 	svc	0x00170000
    1c04:	c3000006 	movwgt	r0, #6
    1c08:	01000009 	tsteq	r0, r9
    1c0c:	45140305 	ldrmi	r0, [r4, #-773]	; 0xfffffcfb
    1c10:	76190800 	ldrvc	r0, [r9], -r0, lsl #16
    1c14:	d3080006 	movwle	r0, #32774	; 0x8006
    1c18:	1a000009 	bne	1c44 <_Min_Heap_Size+0x1444>
    1c1c:	03055001 	movweq	r5, #20481	; 0x5001
    1c20:	080044a8 	stmdaeq	r0, {r3, r5, r7, sl, lr}
    1c24:	0551011a 	ldrbeq	r0, [r1, #-282]	; 0xfffffee6
    1c28:	00451403 	subeq	r1, r5, r3, lsl #8
    1c2c:	1b000008 	blne	1c54 <_Min_Heap_Size+0x1454>
    1c30:	00000625 	andeq	r0, r0, r5, lsr #12
    1c34:	000009c3 	andeq	r0, r0, r3, asr #19
    1c38:	00008c1c 	andeq	r8, r0, ip, lsl ip
    1c3c:	05000b00 	streq	r0, [r0, #-2816]	; 0xfffff500
    1c40:	000009b3 			; <UNDEFINED> instruction: 0x000009b3
    1c44:	000a9c1f 	andeq	r9, sl, pc, lsl ip
    1c48:	03c00200 	biceq	r0, r0, #0, 4
    1c4c:	2003011b 	andcs	r0, r3, fp, lsl r1
    1c50:	00000101 	andeq	r0, r0, r1, lsl #2
    1c54:	00000000 	andeq	r0, r0, r0
    1c58:	c80a0000 	stmdagt	sl, {}	; <UNPREDICTABLE>
    1c5c:	01012105 	tsteq	r1, r5, lsl #2
    1c60:	00000a39 	andeq	r0, r0, r9, lsr sl
    1c64:	00000a39 	andeq	r0, r0, r9, lsr sl
    1c68:	06030208 	streq	r0, [r3], -r8, lsl #4
    1c6c:	c9010121 	stmdbgt	r1, {r0, r5, r8}
    1c70:	c900000a 	stmdbgt	r0, {r1, r3}
    1c74:	0b00000a 	bleq	1ca4 <_Min_Heap_Size+0x14a4>
    1c78:	200c0e14 	andcs	r0, ip, r4, lsl lr
    1c7c:	0a900101 	beq	fe402088 <_estack+0xde3f86e8>
    1c80:	0a900000 	beq	fe401c88 <_estack+0xde3f82e8>
    1c84:	e80c0000 	stmda	ip, {}	; <UNPREDICTABLE>
    1c88:	01012006 	tsteq	r1, r6
    1c8c:	000009dc 	ldrdeq	r0, [r0], -ip
    1c90:	000009dc 	ldrdeq	r0, [r0], -ip
    1c94:	20133e01 	andscs	r3, r3, r1, lsl #28
    1c98:	0a260101 	beq	9820a4 <_Min_Heap_Size+0x9818a4>
    1c9c:	0a260000 	beq	981ca4 <_Min_Heap_Size+0x9814a4>
    1ca0:	3f010000 	svccc	0x00010000
    1ca4:	0101200d 	tsteq	r1, sp
    1ca8:	00000ae0 	andeq	r0, r0, r0, ror #21
    1cac:	00000ae0 	andeq	r0, r0, r0, ror #21
    1cb0:	000d4001 	andeq	r4, sp, r1
    1cb4:	00000304 	andeq	r0, r0, r4, lsl #6
    1cb8:	04670002 	strbteq	r0, [r7], #-2
    1cbc:	01040000 	mrseq	r0, (UNDEF: 4)
    1cc0:	00000621 	andeq	r0, r0, r1, lsr #12
    1cc4:	000b1a0c 	andeq	r1, fp, ip, lsl #20
    1cc8:	0004e900 	andeq	lr, r4, r0, lsl #18
    1ccc:	0000d800 	andeq	sp, r0, r0, lsl #16
	...
    1cd8:	0009bc00 	andeq	fp, r9, r0, lsl #24
    1cdc:	06010200 	streq	r0, [r1], -r0, lsl #4
    1ce0:	0000060f 	andeq	r0, r0, pc, lsl #12
    1ce4:	0d080102 	stfeqs	f0, [r8, #-8]
    1ce8:	02000006 	andeq	r0, r0, #6
    1cec:	042a0502 	strteq	r0, [sl], #-1282	; 0xfffffafe
    1cf0:	02020000 	andeq	r0, r2, #0
    1cf4:	00082807 	andeq	r2, r8, r7, lsl #16
    1cf8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1cfc:	0000032d 	andeq	r0, r0, sp, lsr #6
    1d00:	0002ef03 	andeq	lr, r2, r3, lsl #30
    1d04:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    1d08:	00000058 	andeq	r0, r0, r8, asr r0
    1d0c:	c3070402 	movwgt	r0, #29698	; 0x7402
    1d10:	02000000 	andeq	r0, r0, #0
    1d14:	03280508 			; <UNDEFINED> instruction: 0x03280508
    1d18:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1d1c:	0000be07 	andeq	fp, r0, r7, lsl #28
    1d20:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    1d24:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1d28:	c8070402 	stmdagt	r7, {r1, sl}
    1d2c:	03000000 	movweq	r0, #0
    1d30:	000002f1 	strdeq	r0, [r0], -r1
    1d34:	4c143003 	ldcmi	0, cr3, [r4], {3}
    1d38:	05000000 	streq	r0, [r0, #-0]
    1d3c:	0000007b 	andeq	r0, r0, fp, ror r0
    1d40:	00007b06 	andeq	r7, r0, r6, lsl #22
    1d44:	00009c00 	andeq	r9, r0, r0, lsl #24
    1d48:	00740700 	rsbseq	r0, r4, r0, lsl #14
    1d4c:	00010000 	andeq	r0, r1, r0
    1d50:	f4048808 	vst2.8	{d8-d9}, [r4], r8
    1d54:	02880901 	addeq	r0, r8, #16384	; 0x4000
    1d58:	43090000 	movwmi	r0, #36864	; 0x9000
    1d5c:	f6040052 			; <UNDEFINED> instruction: 0xf6040052
    1d60:	00871101 	addeq	r1, r7, r1, lsl #2
    1d64:	23020000 	movwcs	r0, #8192	; 0x2000
    1d68:	02b40a00 	adcseq	r0, r4, #0, 20
    1d6c:	f7040000 			; <UNDEFINED> instruction: 0xf7040000
    1d70:	00871101 	addeq	r1, r7, r1, lsl #2
    1d74:	23020000 	movwcs	r0, #8192	; 0x2000
    1d78:	02b70a04 	adcseq	r0, r7, #4, 20	; 0x4000
    1d7c:	f8040000 			; <UNDEFINED> instruction: 0xf8040000
    1d80:	00871101 	addeq	r1, r7, r1, lsl #2
    1d84:	23020000 	movwcs	r0, #8192	; 0x2000
    1d88:	49430908 	stmdbmi	r3, {r3, r8, fp}^
    1d8c:	f9040052 			; <UNDEFINED> instruction: 0xf9040052
    1d90:	00871101 	addeq	r1, r7, r1, lsl #2
    1d94:	23020000 	movwcs	r0, #8192	; 0x2000
    1d98:	018f0a0c 	orreq	r0, pc, ip, lsl #20
    1d9c:	fa040000 	blx	101da4 <_Min_Heap_Size+0x1015a4>
    1da0:	00871101 	addeq	r1, r7, r1, lsl #2
    1da4:	23020000 	movwcs	r0, #8192	; 0x2000
    1da8:	07b00a10 			; <UNDEFINED> instruction: 0x07b00a10
    1dac:	fb040000 	blx	101db6 <_Min_Heap_Size+0x1015b6>
    1db0:	00871101 	addeq	r1, r7, r1, lsl #2
    1db4:	23020000 	movwcs	r0, #8192	; 0x2000
    1db8:	07150a14 			; <UNDEFINED> instruction: 0x07150a14
    1dbc:	fc040000 	stc2	0, cr0, [r4], {-0}
    1dc0:	00871101 	addeq	r1, r7, r1, lsl #2
    1dc4:	23020000 	movwcs	r0, #8192	; 0x2000
    1dc8:	05a80a18 	streq	r0, [r8, #2584]!	; 0xa18
    1dcc:	fd040000 	stc2	0, cr0, [r4, #-0]
    1dd0:	007b1101 	rsbseq	r1, fp, r1, lsl #2
    1dd4:	23020000 	movwcs	r0, #8192	; 0x2000
    1dd8:	05930a1c 	ldreq	r0, [r3, #2588]	; 0xa1c
    1ddc:	fe040000 	cdp2	0, 0, cr0, cr4, cr0, {0}
    1de0:	00871101 	addeq	r1, r7, r1, lsl #2
    1de4:	23020000 	movwcs	r0, #8192	; 0x2000
    1de8:	022d0a20 	eoreq	r0, sp, #32, 20	; 0x20000
    1dec:	ff040000 			; <UNDEFINED> instruction: 0xff040000
    1df0:	00871101 	addeq	r1, r7, r1, lsl #2
    1df4:	23020000 	movwcs	r0, #8192	; 0x2000
    1df8:	05b20a24 	ldreq	r0, [r2, #2596]!	; 0xa24
    1dfc:	00040000 	andeq	r0, r4, r0
    1e00:	008c1102 	addeq	r1, ip, r2, lsl #2
    1e04:	23020000 	movwcs	r0, #8192	; 0x2000
    1e08:	09150a28 	ldmdbeq	r5, {r3, r5, r9, fp}
    1e0c:	01040000 	mrseq	r0, (UNDEF: 4)
    1e10:	00871102 	addeq	r1, r7, r2, lsl #2
    1e14:	23020000 	movwcs	r0, #8192	; 0x2000
    1e18:	08200a30 	stmdaeq	r0!, {r4, r5, r9, fp}
    1e1c:	02040000 	andeq	r0, r4, #0
    1e20:	00871102 	addeq	r1, r7, r2, lsl #2
    1e24:	23020000 	movwcs	r0, #8192	; 0x2000
    1e28:	052e0a34 	streq	r0, [lr, #-2612]!	; 0xfffff5cc
    1e2c:	03040000 	movweq	r0, #16384	; 0x4000
    1e30:	00871102 	addeq	r1, r7, r2, lsl #2
    1e34:	23020000 	movwcs	r0, #8192	; 0x2000
    1e38:	05bc0a38 	ldreq	r0, [ip, #2616]!	; 0xa38
    1e3c:	04040000 	streq	r0, [r4], #-0
    1e40:	007b1102 	rsbseq	r1, fp, r2, lsl #2
    1e44:	23020000 	movwcs	r0, #8192	; 0x2000
    1e48:	07500a3c 	smmlareq	r0, ip, sl, r0
    1e4c:	05040000 	streq	r0, [r4, #-0]
    1e50:	00871102 	addeq	r1, r7, r2, lsl #2
    1e54:	23020000 	movwcs	r0, #8192	; 0x2000
    1e58:	070d0a40 	streq	r0, [sp, -r0, asr #20]
    1e5c:	06040000 	streq	r0, [r4], -r0
    1e60:	00871102 	addeq	r1, r7, r2, lsl #2
    1e64:	23020000 	movwcs	r0, #8192	; 0x2000
    1e68:	05c60a44 	strbeq	r0, [r6, #2628]	; 0xa44
    1e6c:	07040000 	streq	r0, [r4, -r0]
    1e70:	008c1102 	addeq	r1, ip, r2, lsl #2
    1e74:	23020000 	movwcs	r0, #8192	; 0x2000
    1e78:	01540a48 	cmpeq	r4, r8, asr #20
    1e7c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    1e80:	00871102 	addeq	r1, r7, r2, lsl #2
    1e84:	23020000 	movwcs	r0, #8192	; 0x2000
    1e88:	05680a50 	strbeq	r0, [r8, #-2640]!	; 0xfffff5b0
    1e8c:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    1e90:	00871102 	addeq	r1, r7, r2, lsl #2
    1e94:	23020000 	movwcs	r0, #8192	; 0x2000
    1e98:	06db0a54 			; <UNDEFINED> instruction: 0x06db0a54
    1e9c:	0a040000 	beq	101ea4 <_Min_Heap_Size+0x1016a4>
    1ea0:	00871102 	addeq	r1, r7, r2, lsl #2
    1ea4:	23020000 	movwcs	r0, #8192	; 0x2000
    1ea8:	05d00a58 	ldrbeq	r0, [r0, #2648]	; 0xa58
    1eac:	0b040000 	bleq	101eb4 <_Min_Heap_Size+0x1016b4>
    1eb0:	007b1102 	rsbseq	r1, fp, r2, lsl #2
    1eb4:	23020000 	movwcs	r0, #8192	; 0x2000
    1eb8:	001b0a5c 	andseq	r0, fp, ip, asr sl
    1ebc:	0c040000 	stceq	0, cr0, [r4], {-0}
    1ec0:	00871102 	addeq	r1, r7, r2, lsl #2
    1ec4:	23020000 	movwcs	r0, #8192	; 0x2000
    1ec8:	041b0a60 	ldreq	r0, [fp], #-2656	; 0xfffff5a0
    1ecc:	0d040000 	stceq	0, cr0, [r4, #-0]
    1ed0:	00871102 	addeq	r1, r7, r2, lsl #2
    1ed4:	23020000 	movwcs	r0, #8192	; 0x2000
    1ed8:	05da0a64 	ldrbeq	r0, [sl, #2660]	; 0xa64
    1edc:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    1ee0:	008c1102 	addeq	r1, ip, r2, lsl #2
    1ee4:	23020000 	movwcs	r0, #8192	; 0x2000
    1ee8:	08b10a68 	ldmeq	r1!, {r3, r5, r6, r9, fp}
    1eec:	0f040000 	svceq	0x00040000
    1ef0:	00871102 	addeq	r1, r7, r2, lsl #2
    1ef4:	23020000 	movwcs	r0, #8192	; 0x2000
    1ef8:	53430970 	movtpl	r0, #14704	; 0x3970
    1efc:	10040052 	andne	r0, r4, r2, asr r0
    1f00:	00871102 	addeq	r1, r7, r2, lsl #2
    1f04:	23020000 	movwcs	r0, #8192	; 0x2000
    1f08:	05e40a74 	strbeq	r0, [r4, #2676]!	; 0xa74
    1f0c:	11040000 	mrsne	r0, (UNDEF: 4)
    1f10:	008c1102 	addeq	r1, ip, r2, lsl #2
    1f14:	23020000 	movwcs	r0, #8192	; 0x2000
    1f18:	08800a78 	stmeq	r0, {r3, r4, r5, r6, r9, fp}
    1f1c:	12040000 	andne	r0, r4, #0
    1f20:	00871102 	addeq	r1, r7, r2, lsl #2
    1f24:	23030000 	movwcs	r0, #12288	; 0x3000
    1f28:	ae0a0180 	adfge<illegal precision>	f0, f2, f0
    1f2c:	04000003 	streq	r0, [r0], #-3
    1f30:	87110213 			; <UNDEFINED> instruction: 0x87110213
    1f34:	03000000 	movweq	r0, #0
    1f38:	00018423 	andeq	r8, r1, r3, lsr #8
    1f3c:	0002010b 	andeq	r0, r2, fp, lsl #2
    1f40:	02140400 	andseq	r0, r4, #0, 8
    1f44:	00009c03 	andeq	r9, r0, r3, lsl #24
    1f48:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    1f4c:	00000758 	andeq	r0, r0, r8, asr r7
    1f50:	0991010c 	ldmibeq	r1, {r2, r3, r8}
    1f54:	2a010000 	bcs	41f5c <_Min_Heap_Size+0x4175c>
    1f58:	07240106 	streq	r0, [r4, -r6, lsl #2]!
    1f5c:	07700800 	ldrbeq	r0, [r0, -r0, lsl #16]!
    1f60:	047b0800 	ldrbteq	r0, [fp], #-2048	; 0xfffff800
    1f64:	0d010000 	stceq	0, cr0, [r1, #-0]
    1f68:	08000726 	stmdaeq	r0, {r1, r2, r5, r8, r9, sl}
    1f6c:	0800073e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9, sl}
    1f70:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1f74:	0001ea0e 	andeq	lr, r1, lr, lsl #20
    1f78:	032e0100 			; <UNDEFINED> instruction: 0x032e0100
    1f7c:	00000087 	andeq	r0, r0, r7, lsl #1
    1f80:	00749102 	rsbseq	r9, r4, r2, lsl #2
    1f84:	00073e0d 	andeq	r3, r7, sp, lsl #28
    1f88:	00075208 	andeq	r5, r7, r8, lsl #4
    1f8c:	0002ed08 	andeq	lr, r2, r8, lsl #26
    1f90:	01ea0e00 	mvneq	r0, r0, lsl #28
    1f94:	2f010000 	svccs	0x00010000
    1f98:	00008703 	andeq	r8, r0, r3, lsl #14
    1f9c:	78910200 	ldmvc	r1, {r9}
    1fa0:	07520f00 	ldrbeq	r0, [r2, -r0, lsl #30]
    1fa4:	07660800 	strbeq	r0, [r6, -r0, lsl #16]!
    1fa8:	ea0e0800 	b	383fb0 <_Min_Heap_Size+0x3837b0>
    1fac:	01000001 	tsteq	r0, r1
    1fb0:	00870330 	addeq	r0, r7, r0, lsr r3
    1fb4:	91020000 	mrsls	r0, (UNDEF: 2)
    1fb8:	0000007c 	andeq	r0, r0, ip, ror r0
    1fbc:	00000d64 	andeq	r0, r0, r4, ror #26
    1fc0:	053a0002 	ldreq	r0, [sl, #-2]!
    1fc4:	01040000 	mrseq	r0, (UNDEF: 4)
    1fc8:	00000621 	andeq	r0, r0, r1, lsr #12
    1fcc:	00106c0c 	andseq	r6, r0, ip, lsl #24
    1fd0:	0004e900 	andeq	lr, r4, r0, lsl #18
    1fd4:	0000e800 	andeq	lr, r0, r0, lsl #16
	...
    1fe0:	000af700 	andeq	pc, sl, r0, lsl #14
    1fe4:	01050200 	mrseq	r0, SP_usr
    1fe8:	0000023c 	andeq	r0, r0, ip, lsr r2
    1fec:	3c014204 	sfmcc	f4, 4, [r1], {4}
    1ff0:	03000002 	movweq	r0, #2
    1ff4:	00000d90 	muleq	r0, r0, sp
    1ff8:	0dbf0372 	ldceq	3, cr0, [pc, #456]!	; 21c8 <_Min_Heap_Size+0x19c8>
    1ffc:	03740000 	cmneq	r4, #0
    2000:	00000e1f 	andeq	r0, r0, pc, lsl lr
    2004:	0cc60375 	stcleq	3, cr0, [r6], {117}	; 0x75
    2008:	03760000 	cmneq	r6, #0
    200c:	00000e71 	andeq	r0, r0, r1, ror lr
    2010:	0ff9037b 	svceq	0x00f9037b
    2014:	037c0000 	cmneq	ip, #0
    2018:	000010ca 	andeq	r1, r0, sl, asr #1
    201c:	0c38037e 	ldceq	3, cr0, [r8], #-504	; 0xfffffe08
    2020:	047f0000 	ldrbteq	r0, [pc], #-0	; 2028 <_Min_Heap_Size+0x1828>
    2024:	00000da4 	andeq	r0, r0, r4, lsr #27
    2028:	0f900400 	svceq	0x00900400
    202c:	04010000 	streq	r0, [r1], #-0
    2030:	00000dd5 	ldrdeq	r0, [r0], -r5
    2034:	0b330402 	bleq	cc3044 <_Min_Heap_Size+0xcc2844>
    2038:	04030000 	streq	r0, [r3], #-0
    203c:	00000b9d 	muleq	r0, sp, fp
    2040:	102c0404 	eorne	r0, ip, r4, lsl #8
    2044:	04050000 	streq	r0, [r5], #-0
    2048:	00000fbd 			; <UNDEFINED> instruction: 0x00000fbd
    204c:	0d300406 	cfldrseq	mvf0, [r0, #-24]!	; 0xffffffe8
    2050:	04070000 	streq	r0, [r7], #-0
    2054:	00000b41 	andeq	r0, r0, r1, asr #22
    2058:	10bf0408 	adcsne	r0, pc, r8, lsl #8
    205c:	04090000 	streq	r0, [r9], #-0
    2060:	00000eac 	andeq	r0, r0, ip, lsr #29
    2064:	0f08040a 	svceq	0x0008040a
    2068:	040b0000 	streq	r0, [fp], #-0
    206c:	00000ed2 	ldrdeq	r0, [r0], -r2
    2070:	0c62040c 	cfstrdeq	mvd0, [r2], #-48	; 0xffffffd0
    2074:	040d0000 	streq	r0, [sp], #-0
    2078:	00001035 	andeq	r1, r0, r5, lsr r0
    207c:	0fd5040e 	svceq	0x00d5040e
    2080:	040f0000 	streq	r0, [pc], #-0	; 2088 <_Min_Heap_Size+0x1888>
    2084:	00000d48 	andeq	r0, r0, r8, asr #26
    2088:	0b4c0410 	bleq	13030d0 <_Min_Heap_Size+0x13028d0>
    208c:	04110000 	ldreq	r0, [r1], #-0
    2090:	00000f87 	andeq	r0, r0, r7, lsl #31
    2094:	0d3b0412 	cfldrseq	mvf0, [fp, #-72]!	; 0xffffffb8
    2098:	04130000 	ldreq	r0, [r3], #-0
    209c:	00000ce4 	andeq	r0, r0, r4, ror #25
    20a0:	109a0414 	addsne	r0, sl, r4, lsl r4
    20a4:	04150000 	ldreq	r0, [r5], #-0
    20a8:	00000de5 	andeq	r0, r0, r5, ror #27
    20ac:	0fc80416 	svceq	0x00c80416
    20b0:	04170000 	ldreq	r0, [r7], #-0
    20b4:	00000e38 	andeq	r0, r0, r8, lsr lr
    20b8:	10590418 	subsne	r0, r9, r8, lsl r4
    20bc:	04190000 	ldreq	r0, [r9], #-0
    20c0:	00000c20 	andeq	r0, r0, r0, lsr #24
    20c4:	0d23041a 	cfstrseq	mvf0, [r3, #-104]!	; 0xffffff98
    20c8:	041b0000 	ldreq	r0, [fp], #-0
    20cc:	00000ba8 	andeq	r0, r0, r8, lsr #23
    20d0:	0f45041c 	svceq	0x0045041c
    20d4:	041d0000 	ldreq	r0, [sp], #-0
    20d8:	00000cf2 	strdeq	r0, [r0], -r2
    20dc:	0d16041e 	cfldrseq	mvf0, [r6, #-120]	; 0xffffff88
    20e0:	041f0000 	ldreq	r0, [pc], #-0	; 20e8 <_Min_Heap_Size+0x18e8>
    20e4:	00000c96 	muleq	r0, r6, ip
    20e8:	0ec50420 	cdpeq	4, 12, cr0, cr5, cr0, {1}
    20ec:	04210000 	strteq	r0, [r1], #-0
    20f0:	00000e0a 	andeq	r0, r0, sl, lsl #28
    20f4:	0e670422 	cdpeq	4, 6, cr0, cr7, cr2, {1}
    20f8:	04230000 	strteq	r0, [r3], #-0
    20fc:	00000bdd 	ldrdeq	r0, [r0], -sp
    2100:	0f4f0424 	svceq	0x004f0424
    2104:	04250000 	strteq	r0, [r5], #-0
    2108:	00000cfc 	strdeq	r0, [r0], -ip
    210c:	0c450426 	cfstrdeq	mvd0, [r5], {38}	; 0x26
    2110:	04270000 	strteq	r0, [r7], #-0
    2114:	00000f36 	andeq	r0, r0, r6, lsr pc
    2118:	0f1a0428 	svceq	0x001a0428
    211c:	04290000 	strteq	r0, [r9], #-0
    2120:	00000e9b 	muleq	r0, fp, lr
    2124:	0be7042a 	bleq	ff9c31d4 <_estack+0xdf9b9834>
    2128:	042b0000 	strteq	r0, [fp], #-0
    212c:	00000b5e 	andeq	r0, r0, lr, asr fp
    2130:	0d5a042c 	cfldrdeq	mvd0, [sl, #-176]	; 0xffffff50
    2134:	042d0000 	strteq	r0, [sp], #-0
    2138:	000010a8 	andeq	r1, r0, r8, lsr #1
    213c:	10e9042e 	rscne	r0, r9, lr, lsr #8
    2140:	042f0000 	strteq	r0, [pc], #-0	; 2148 <_Min_Heap_Size+0x1948>
    2144:	00000fa0 	andeq	r0, r0, r0, lsr #31
    2148:	10b50430 	adcsne	r0, r5, r0, lsr r4
    214c:	04310000 	ldrteq	r0, [r1], #-0
    2150:	00000cbc 			; <UNDEFINED> instruction: 0x00000cbc
    2154:	0b930432 	bleq	fe4c3224 <_estack+0xde4b9884>
    2158:	04330000 	ldrteq	r0, [r3], #-0
    215c:	00000e86 	andeq	r0, r0, r6, lsl #29
    2160:	0e2d0434 	mcreq	4, 1, r0, cr13, cr4, {1}
    2164:	04350000 	ldrteq	r0, [r5], #-0
    2168:	00000eb7 			; <UNDEFINED> instruction: 0x00000eb7
    216c:	0e4b0436 	mcreq	4, 2, r0, cr11, cr6, {1}
    2170:	04370000 	ldrteq	r0, [r7], #-0
    2174:	00000df3 	strdeq	r0, [r0], -r3
    2178:	0b810438 	bleq	fe043260 <_estack+0xde0398c0>
    217c:	04390000 	ldrteq	r0, [r9], #-0
    2180:	000010fb 	strdeq	r1, [r0], -fp
    2184:	0ee4043a 	mcreq	4, 7, r0, cr4, cr10, {1}
    2188:	043b0000 	ldrteq	r0, [fp], #-0
    218c:	00000c74 	andeq	r0, r0, r4, ror ip
    2190:	0ef6043c 	mrceq	4, 7, r0, cr6, cr12, {1}
    2194:	043f0000 	ldrteq	r0, [pc], #-0	; 219c <_Min_Heap_Size+0x199c>
    2198:	00000bb2 			; <UNDEFINED> instruction: 0x00000bb2
    219c:	0f790440 	svceq	0x00790440
    21a0:	04410000 	strbeq	r0, [r1], #-0
    21a4:	00000cae 	andeq	r0, r0, lr, lsr #25
    21a8:	0d840442 	cfstrseq	mvf0, [r4, #264]	; 0x108
    21ac:	04430000 	strbeq	r0, [r3], #-0
    21b0:	00000c0e 	andeq	r0, r0, lr, lsl #24
    21b4:	0fe70444 	svceq	0x00e70444
    21b8:	04450000 	strbeq	r0, [r5], #-0
    21bc:	00000d72 	andeq	r0, r0, r2, ror sp
    21c0:	0bc00446 	bleq	ff0032e0 <_estack+0xdeff9940>
    21c4:	04470000 	strbeq	r0, [r7], #-0
    21c8:	0000100b 	andeq	r1, r0, fp
    21cc:	0f290448 	svceq	0x00290448
    21d0:	04490000 	strbeq	r0, [r9], #-0
    21d4:	00001080 	andeq	r1, r0, r0, lsl #1
    21d8:	10d6044a 	sbcsne	r0, r6, sl, asr #8
    21dc:	044b0000 	strbeq	r0, [fp], #-0
    21e0:	00000dae 	andeq	r0, r0, lr, lsr #27
    21e4:	0e55044c 	cdpeq	4, 5, cr0, cr5, cr12, {2}
    21e8:	044d0000 	strbeq	r0, [sp], #-0
    21ec:	00000f70 	andeq	r0, r0, r0, ror pc
    21f0:	0e7d0450 	mrceq	4, 3, r0, cr13, cr0, {2}
    21f4:	00510000 	subseq	r0, r1, r0
    21f8:	0f060105 	svceq	0x00060105
    21fc:	06000006 	streq	r0, [r0], -r6
    2200:	00000076 	andeq	r0, r0, r6, ror r0
    2204:	4f182b02 	svcmi	0x00182b02
    2208:	05000002 	streq	r0, [r0, #-2]
    220c:	060d0801 	streq	r0, [sp], -r1, lsl #16
    2210:	02050000 	andeq	r0, r5, #0
    2214:	00042a05 	andeq	r2, r4, r5, lsl #20
    2218:	078e0600 	streq	r0, [lr, r0, lsl #12]
    221c:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
    2220:	00026919 	andeq	r6, r2, r9, lsl r9
    2224:	07020500 	streq	r0, [r2, -r0, lsl #10]
    2228:	00000828 	andeq	r0, r0, r8, lsr #16
    222c:	2d050405 	cfstrscs	mvf0, [r5, #-20]	; 0xffffffec
    2230:	06000003 	streq	r0, [r0], -r3
    2234:	000002ef 	andeq	r0, r0, pc, ror #5
    2238:	83194f02 	tsthi	r9, #2, 30
    223c:	05000002 	streq	r0, [r0, #-2]
    2240:	00c30704 	sbceq	r0, r3, r4, lsl #14
    2244:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    2248:	00032805 	andeq	r2, r3, r5, lsl #16
    224c:	07080500 	streq	r0, [r8, -r0, lsl #10]
    2250:	000000be 	strheq	r0, [r0], -lr
    2254:	69050407 	stmdbvs	r5, {r0, r1, r2, sl}
    2258:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
    225c:	00c80704 	sbceq	r0, r8, r4, lsl #14
    2260:	78060000 	stmdavc	r6, {}	; <UNPREDICTABLE>
    2264:	03000000 	movweq	r0, #0
    2268:	02431318 	subeq	r1, r3, #24, 6	; 0x60000000
    226c:	a6080000 	strge	r0, [r8], -r0
    2270:	06000002 	streq	r0, [r0], -r2
    2274:	00000790 	muleq	r0, r0, r7
    2278:	5d142403 	cfldrspl	mvf2, [r4, #-12]
    227c:	09000002 	stmdbeq	r0, {r1}
    2280:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    2284:	0002f106 	andeq	pc, r2, r6, lsl #2
    2288:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    228c:	00000277 	andeq	r0, r0, r7, ror r2
    2290:	0002c809 	andeq	ip, r2, r9, lsl #16
    2294:	02c80a00 	sbceq	r0, r8, #0, 20
    2298:	02e90000 	rsceq	r0, r9, #0
    229c:	9f0b0000 	svcls	0x000b0000
    22a0:	01000002 	tsteq	r0, r2
    22a4:	04180c00 	ldreq	r0, [r8], #-3072	; 0xfffff400
    22a8:	53090144 	movwpl	r0, #37188	; 0x9144
    22ac:	0d000003 	stceq	0, cr0, [r0, #-12]
    22b0:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    22b4:	d4110146 	ldrle	r0, [r1], #-326	; 0xfffffeba
    22b8:	02000002 	andeq	r0, r0, #2
    22bc:	ee0e0023 	cdp	0, 0, cr0, cr14, cr3, {1}
    22c0:	04000007 	streq	r0, [r0], #-7
    22c4:	d4110147 	ldrle	r0, [r1], #-327	; 0xfffffeb9
    22c8:	02000002 	andeq	r0, r0, #2
    22cc:	500d0423 	andpl	r0, sp, r3, lsr #8
    22d0:	04005241 	streq	r5, [r0], #-577	; 0xfffffdbf
    22d4:	d4110148 	ldrle	r0, [r1], #-328	; 0xfffffeb8
    22d8:	02000002 	andeq	r0, r0, #2
    22dc:	420e0823 	andmi	r0, lr, #2293760	; 0x230000
    22e0:	04000000 	streq	r0, [r0], #-0
    22e4:	d4110149 	ldrle	r0, [r1], #-329	; 0xfffffeb7
    22e8:	02000002 	andeq	r0, r0, #2
    22ec:	500e0c23 	andpl	r0, lr, r3, lsr #24
    22f0:	04000008 	streq	r0, [r0], #-8
    22f4:	d411014a 	ldrle	r0, [r1], #-330	; 0xfffffeb6
    22f8:	02000002 	andeq	r0, r0, #2
    22fc:	460d1023 	strmi	r1, [sp], -r3, lsr #32
    2300:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    2304:	d411014b 	ldrle	r0, [r1], #-331	; 0xfffffeb5
    2308:	02000002 	andeq	r0, r0, #2
    230c:	0f001423 	svceq	0x00001423
    2310:	0000080d 	andeq	r0, r0, sp, lsl #16
    2314:	03014c04 	movweq	r4, #7172	; 0x1c04
    2318:	000002e9 	andeq	r0, r0, r9, ror #5
    231c:	ae04280c 	cdpge	8, 0, cr2, cr4, cr12, {0}
    2320:	03fb0901 	mvnseq	r0, #16384	; 0x4000
    2324:	940e0000 	strls	r0, [lr], #-0
    2328:	04000010 	streq	r0, [r0], #-16
    232c:	d41101b0 	ldrle	r0, [r1], #-432	; 0xfffffe50
    2330:	02000002 	andeq	r0, r0, #2
    2334:	990e0023 	stmdbls	lr, {r0, r1, r5}
    2338:	0400000f 	streq	r0, [r0], #-15
    233c:	d41101b1 	ldrle	r0, [r1], #-433	; 0xfffffe4f
    2340:	02000002 	andeq	r0, r0, #2
    2344:	170e0423 	strne	r0, [lr, -r3, lsr #8]
    2348:	0400000e 	streq	r0, [r0], #-14
    234c:	d41101b2 	ldrle	r0, [r1], #-434	; 0xfffffe4e
    2350:	02000002 	andeq	r0, r0, #2
    2354:	610e0823 	tstvs	lr, r3, lsr #16
    2358:	0400000e 	streq	r0, [r0], #-14
    235c:	d41101b3 	ldrle	r0, [r1], #-435	; 0xfffffe4d
    2360:	02000002 	andeq	r0, r0, #2
    2364:	490d0c23 	stmdbmi	sp, {r0, r1, r5, sl, fp}
    2368:	04005244 	streq	r5, [r0], #-580	; 0xfffffdbc
    236c:	d41101b4 	ldrle	r0, [r1], #-436	; 0xfffffe4c
    2370:	02000002 	andeq	r0, r0, #2
    2374:	4f0d1023 	svcmi	0x000d1023
    2378:	04005244 	streq	r5, [r0], #-580	; 0xfffffdbc
    237c:	d41101b5 	ldrle	r0, [r1], #-437	; 0xfffffe4b
    2380:	02000002 	andeq	r0, r0, #2
    2384:	470e1423 	strmi	r1, [lr, -r3, lsr #8]
    2388:	04000010 	streq	r0, [r0], #-16
    238c:	d41101b6 	ldrle	r0, [r1], #-438	; 0xfffffe4a
    2390:	02000002 	andeq	r0, r0, #2
    2394:	050e1823 	streq	r1, [lr, #-2083]	; 0xfffff7dd
    2398:	0400000e 	streq	r0, [r0], #-14
    239c:	d41101b7 	ldrle	r0, [r1], #-439	; 0xfffffe49
    23a0:	02000002 	andeq	r0, r0, #2
    23a4:	410d1c23 	tstmi	sp, r3, lsr #24
    23a8:	04005246 	streq	r5, [r0], #-582	; 0xfffffdba
    23ac:	0b1101b8 	bleq	442a94 <_Min_Heap_Size+0x442294>
    23b0:	02000004 	andeq	r0, r0, #4
    23b4:	0a002023 	beq	a448 <_Min_Heap_Size+0x9c48>
    23b8:	000002d4 	ldrdeq	r0, [r0], -r4
    23bc:	0000040b 	andeq	r0, r0, fp, lsl #8
    23c0:	00029f0b 	andeq	r9, r2, fp, lsl #30
    23c4:	09000100 	stmdbeq	r0, {r8}
    23c8:	000003fb 	strdeq	r0, [r0], -fp
    23cc:	00104c0f 	andseq	r4, r0, pc, lsl #24
    23d0:	01b90400 			; <UNDEFINED> instruction: 0x01b90400
    23d4:	00036003 	andeq	r6, r3, r3
    23d8:	04880c00 	streq	r0, [r8], #3072	; 0xc00
    23dc:	090901f4 	stmdbeq	r9, {r2, r4, r5, r6, r7, r8}
    23e0:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    23e4:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    23e8:	d41101f6 	ldrle	r0, [r1], #-502	; 0xfffffe0a
    23ec:	02000002 	andeq	r0, r0, #2
    23f0:	b40e0023 	strlt	r0, [lr], #-35	; 0xffffffdd
    23f4:	04000002 	streq	r0, [r0], #-2
    23f8:	d41101f7 	ldrle	r0, [r1], #-503	; 0xfffffe09
    23fc:	02000002 	andeq	r0, r0, #2
    2400:	b70e0423 	strlt	r0, [lr, -r3, lsr #8]
    2404:	04000002 	streq	r0, [r0], #-2
    2408:	d41101f8 	ldrle	r0, [r1], #-504	; 0xfffffe08
    240c:	02000002 	andeq	r0, r0, #2
    2410:	430d0823 	movwmi	r0, #55331	; 0xd823
    2414:	04005249 	streq	r5, [r0], #-585	; 0xfffffdb7
    2418:	d41101f9 	ldrle	r0, [r1], #-505	; 0xfffffe07
    241c:	02000002 	andeq	r0, r0, #2
    2420:	8f0e0c23 	svchi	0x000e0c23
    2424:	04000001 	streq	r0, [r0], #-1
    2428:	d41101fa 	ldrle	r0, [r1], #-506	; 0xfffffe06
    242c:	02000002 	andeq	r0, r0, #2
    2430:	b00e1023 	andlt	r1, lr, r3, lsr #32
    2434:	04000007 	streq	r0, [r0], #-7
    2438:	d41101fb 	ldrle	r0, [r1], #-507	; 0xfffffe05
    243c:	02000002 	andeq	r0, r0, #2
    2440:	150e1423 	strne	r1, [lr, #-1059]	; 0xfffffbdd
    2444:	04000007 	streq	r0, [r0], #-7
    2448:	d41101fc 	ldrle	r0, [r1], #-508	; 0xfffffe04
    244c:	02000002 	andeq	r0, r0, #2
    2450:	a80e1823 	stmdage	lr, {r0, r1, r5, fp, ip}
    2454:	04000005 	streq	r0, [r0], #-5
    2458:	c81101fd 	ldmdagt	r1, {r0, r2, r3, r4, r5, r6, r7, r8}
    245c:	02000002 	andeq	r0, r0, #2
    2460:	930e1c23 	movwls	r1, #60451	; 0xec23
    2464:	04000005 	streq	r0, [r0], #-5
    2468:	d41101fe 	ldrle	r0, [r1], #-510	; 0xfffffe02
    246c:	02000002 	andeq	r0, r0, #2
    2470:	2d0e2023 	stccs	0, cr2, [lr, #-140]	; 0xffffff74
    2474:	04000002 	streq	r0, [r0], #-2
    2478:	d41101ff 	ldrle	r0, [r1], #-511	; 0xfffffe01
    247c:	02000002 	andeq	r0, r0, #2
    2480:	b20e2423 	andlt	r2, lr, #587202560	; 0x23000000
    2484:	04000005 	streq	r0, [r0], #-5
    2488:	d9110200 	ldmdble	r1, {r9}
    248c:	02000002 	andeq	r0, r0, #2
    2490:	150e2823 	strne	r2, [lr, #-2083]	; 0xfffff7dd
    2494:	04000009 	streq	r0, [r0], #-9
    2498:	d4110201 	ldrle	r0, [r1], #-513	; 0xfffffdff
    249c:	02000002 	andeq	r0, r0, #2
    24a0:	200e3023 	andcs	r3, lr, r3, lsr #32
    24a4:	04000008 	streq	r0, [r0], #-8
    24a8:	d4110202 	ldrle	r0, [r1], #-514	; 0xfffffdfe
    24ac:	02000002 	andeq	r0, r0, #2
    24b0:	2e0e3423 	cdpcs	4, 0, cr3, cr14, cr3, {1}
    24b4:	04000005 	streq	r0, [r0], #-5
    24b8:	d4110203 	ldrle	r0, [r1], #-515	; 0xfffffdfd
    24bc:	02000002 	andeq	r0, r0, #2
    24c0:	bc0e3823 	stclt	8, cr3, [lr], {35}	; 0x23
    24c4:	04000005 	streq	r0, [r0], #-5
    24c8:	c8110204 	ldmdagt	r1, {r2, r9}
    24cc:	02000002 	andeq	r0, r0, #2
    24d0:	500e3c23 	andpl	r3, lr, r3, lsr #24
    24d4:	04000007 	streq	r0, [r0], #-7
    24d8:	d4110205 	ldrle	r0, [r1], #-517	; 0xfffffdfb
    24dc:	02000002 	andeq	r0, r0, #2
    24e0:	0d0e4023 	stceq	0, cr4, [lr, #-140]	; 0xffffff74
    24e4:	04000007 	streq	r0, [r0], #-7
    24e8:	d4110206 	ldrle	r0, [r1], #-518	; 0xfffffdfa
    24ec:	02000002 	andeq	r0, r0, #2
    24f0:	c60e4423 	strgt	r4, [lr], -r3, lsr #8
    24f4:	04000005 	streq	r0, [r0], #-5
    24f8:	d9110207 	ldmdble	r1, {r0, r1, r2, r9}
    24fc:	02000002 	andeq	r0, r0, #2
    2500:	540e4823 	strpl	r4, [lr], #-2083	; 0xfffff7dd
    2504:	04000001 	streq	r0, [r0], #-1
    2508:	d4110208 	ldrle	r0, [r1], #-520	; 0xfffffdf8
    250c:	02000002 	andeq	r0, r0, #2
    2510:	680e5023 	stmdavs	lr, {r0, r1, r5, ip, lr}
    2514:	04000005 	streq	r0, [r0], #-5
    2518:	d4110209 	ldrle	r0, [r1], #-521	; 0xfffffdf7
    251c:	02000002 	andeq	r0, r0, #2
    2520:	db0e5423 	blle	3975b4 <_Min_Heap_Size+0x396db4>
    2524:	04000006 	streq	r0, [r0], #-6
    2528:	d411020a 	ldrle	r0, [r1], #-522	; 0xfffffdf6
    252c:	02000002 	andeq	r0, r0, #2
    2530:	d00e5823 	andle	r5, lr, r3, lsr #16
    2534:	04000005 	streq	r0, [r0], #-5
    2538:	c811020b 	ldmdagt	r1, {r0, r1, r3, r9}
    253c:	02000002 	andeq	r0, r0, #2
    2540:	1b0e5c23 	blne	3995d4 <_Min_Heap_Size+0x398dd4>
    2544:	04000000 	streq	r0, [r0], #-0
    2548:	d411020c 	ldrle	r0, [r1], #-524	; 0xfffffdf4
    254c:	02000002 	andeq	r0, r0, #2
    2550:	1b0e6023 	blne	39a5e4 <_Min_Heap_Size+0x399de4>
    2554:	04000004 	streq	r0, [r0], #-4
    2558:	d411020d 	ldrle	r0, [r1], #-525	; 0xfffffdf3
    255c:	02000002 	andeq	r0, r0, #2
    2560:	da0e6423 	ble	39b5f4 <_Min_Heap_Size+0x39adf4>
    2564:	04000005 	streq	r0, [r0], #-5
    2568:	d911020e 	ldmdble	r1, {r1, r2, r3, r9}
    256c:	02000002 	andeq	r0, r0, #2
    2570:	b10e6823 	tstlt	lr, r3, lsr #16
    2574:	04000008 	streq	r0, [r0], #-8
    2578:	d411020f 	ldrle	r0, [r1], #-527	; 0xfffffdf1
    257c:	02000002 	andeq	r0, r0, #2
    2580:	430d7023 	movwmi	r7, #53283	; 0xd023
    2584:	04005253 	streq	r5, [r0], #-595	; 0xfffffdad
    2588:	d4110210 	ldrle	r0, [r1], #-528	; 0xfffffdf0
    258c:	02000002 	andeq	r0, r0, #2
    2590:	e40e7423 	str	r7, [lr], #-1059	; 0xfffffbdd
    2594:	04000005 	streq	r0, [r0], #-5
    2598:	d9110211 	ldmdble	r1, {r0, r4, r9}
    259c:	02000002 	andeq	r0, r0, #2
    25a0:	800e7823 	andhi	r7, lr, r3, lsr #16
    25a4:	04000008 	streq	r0, [r0], #-8
    25a8:	d4110212 	ldrle	r0, [r1], #-530	; 0xfffffdee
    25ac:	03000002 	movweq	r0, #2
    25b0:	0e018023 	cdpeq	0, 0, cr8, cr1, cr3, {1}
    25b4:	000003ae 	andeq	r0, r0, lr, lsr #7
    25b8:	11021304 	tstne	r2, r4, lsl #6
    25bc:	000002d4 	ldrdeq	r0, [r0], -r4
    25c0:	01842303 	orreq	r2, r4, r3, lsl #6
    25c4:	02010f00 	andeq	r0, r1, #0, 30
    25c8:	14040000 	strne	r0, [r4], #-0
    25cc:	041d0302 	ldreq	r0, [sp], #-770	; 0xfffffcfe
    25d0:	1c0c0000 	stcne	0, cr0, [ip], {-0}
    25d4:	09029504 	stmdbeq	r2, {r2, r8, sl, ip, pc}
    25d8:	0000068f 	andeq	r0, r0, pc, lsl #13
    25dc:	0052530d 	subseq	r5, r2, sp, lsl #6
    25e0:	11029704 	tstne	r2, r4, lsl #14
    25e4:	000002d4 	ldrdeq	r0, [r0], -r4
    25e8:	0d002302 	stceq	3, cr2, [r0, #-8]
    25ec:	04005244 	streq	r5, [r0], #-580	; 0xfffffdbc
    25f0:	d4110298 	ldrle	r0, [r1], #-664	; 0xfffffd68
    25f4:	02000002 	andeq	r0, r0, #2
    25f8:	420d0423 	andmi	r0, sp, #587202560	; 0x23000000
    25fc:	04005252 	streq	r5, [r0], #-594	; 0xfffffdae
    2600:	d4110299 	ldrle	r0, [r1], #-665	; 0xfffffd67
    2604:	02000002 	andeq	r0, r0, #2
    2608:	430d0823 	movwmi	r0, #55331	; 0xd823
    260c:	04003152 	streq	r3, [r0], #-338	; 0xfffffeae
    2610:	d411029a 	ldrle	r0, [r1], #-666	; 0xfffffd66
    2614:	02000002 	andeq	r0, r0, #2
    2618:	430d0c23 	movwmi	r0, #56355	; 0xdc23
    261c:	04003252 	streq	r3, [r0], #-594	; 0xfffffdae
    2620:	d411029b 	ldrle	r0, [r1], #-667	; 0xfffffd65
    2624:	02000002 	andeq	r0, r0, #2
    2628:	430d1023 	movwmi	r1, #53283	; 0xd023
    262c:	04003352 	streq	r3, [r0], #-850	; 0xfffffcae
    2630:	d411029c 	ldrle	r0, [r1], #-668	; 0xfffffd64
    2634:	02000002 	andeq	r0, r0, #2
    2638:	b20e1423 	andlt	r1, lr, #587202560	; 0x23000000
    263c:	04000001 	streq	r0, [r0], #-1
    2640:	d411029d 	ldrle	r0, [r1], #-669	; 0xfffffd63
    2644:	02000002 	andeq	r0, r0, #2
    2648:	0f001823 	svceq	0x00001823
    264c:	0000040d 	andeq	r0, r0, sp, lsl #8
    2650:	03029e04 	movweq	r9, #11780	; 0x2e04
    2654:	00000616 	andeq	r0, r0, r6, lsl r6
    2658:	58040805 	stmdapl	r4, {r0, r2, fp}
    265c:	02000007 	andeq	r0, r0, #7
    2660:	024f0107 	subeq	r0, pc, #-1073741823	; 0xc0000001
    2664:	27050000 	strcs	r0, [r5, -r0]
    2668:	0006ca01 	andeq	ip, r6, r1, lsl #20
    266c:	03770400 	cmneq	r7, #0, 8
    2670:	04000000 	streq	r0, [r0], #-0
    2674:	00000746 	andeq	r0, r0, r6, asr #14
    2678:	094a0401 	stmdbeq	sl, {r0, sl}^
    267c:	04020000 	streq	r0, [r2], #-0
    2680:	00000358 	andeq	r0, r0, r8, asr r3
    2684:	07020003 	streq	r0, [r2, -r3]
    2688:	00024f01 	andeq	r4, r2, r1, lsl #30
    268c:	01320500 	teqeq	r2, r0, lsl #10
    2690:	000006e5 	andeq	r0, r0, r5, ror #13
    2694:	00093d04 	andeq	r3, r9, r4, lsl #26
    2698:	23040000 	movwcs	r0, #16384	; 0x4000
    269c:	01000005 	tsteq	r0, r5
    26a0:	01f10600 	mvnseq	r0, r0, lsl #12
    26a4:	35050000 	strcc	r0, [r5, #-0]
    26a8:	0006ca03 	andeq	ip, r6, r3, lsl #20
    26ac:	06141000 	ldreq	r1, [r4], -r0
    26b0:	0746092e 	strbeq	r0, [r6, -lr, lsr #18]
    26b4:	50110000 	andspl	r0, r1, r0
    26b8:	06006e69 	streq	r6, [r0], -r9, ror #28
    26bc:	02c80c30 	sbceq	r0, r8, #48, 24	; 0x3000
    26c0:	23020000 	movwcs	r0, #8192	; 0x2000
    26c4:	07361200 	ldreq	r1, [r6, -r0, lsl #4]!
    26c8:	33060000 	movwcc	r0, #24576	; 0x6000
    26cc:	0002c80c 	andeq	ip, r2, ip, lsl #16
    26d0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    26d4:	000f0312 	andeq	r0, pc, r2, lsl r3	; <UNPREDICTABLE>
    26d8:	0c360600 	ldceq	6, cr0, [r6], #-0
    26dc:	000002c8 	andeq	r0, r0, r8, asr #5
    26e0:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    26e4:	00000b2d 	andeq	r0, r0, sp, lsr #22
    26e8:	c80c3906 	stmdagt	ip, {r1, r2, r8, fp, ip, sp}
    26ec:	02000002 	andeq	r0, r0, #2
    26f0:	91120c23 	tstls	r2, r3, lsr #24
    26f4:	0600000e 	streq	r0, [r0], -lr
    26f8:	02c80c3c 	sbceq	r0, r8, #60, 24	; 0x3c00
    26fc:	23020000 	movwcs	r0, #8192	; 0x2000
    2700:	51060010 	tstpl	r6, r0, lsl r0
    2704:	0600000c 	streq	r0, [r0], -ip
    2708:	06f1023e 			; <UNDEFINED> instruction: 0x06f1023e
    270c:	30100000 	andscc	r0, r0, r0
    2710:	10093007 	andne	r3, r9, r7
    2714:	12000008 	andne	r0, r0, #8
    2718:	00000605 	andeq	r0, r0, r5, lsl #12
    271c:	c80c3207 	stmdagt	ip, {r0, r1, r2, r9, ip, sp}
    2720:	02000002 	andeq	r0, r0, #2
    2724:	0e120023 	cdpeq	0, 1, cr0, cr2, cr3, {1}
    2728:	07000003 	streq	r0, [r0, -r3]
    272c:	02c80c35 	sbceq	r0, r8, #13568	; 0x3500
    2730:	23020000 	movwcs	r0, #8192	; 0x2000
    2734:	02361204 	eorseq	r1, r6, #4, 4	; 0x40000000
    2738:	39070000 	stmdbcc	r7, {}	; <UNPREDICTABLE>
    273c:	0002c80c 	andeq	ip, r2, ip, lsl #16
    2740:	08230200 	stmdaeq	r3!, {r9}
    2744:	0007b912 	andeq	fp, r7, r2, lsl r9
    2748:	0c3c0700 	ldceq	7, cr0, [ip], #-0
    274c:	000002c8 	andeq	r0, r0, r8, asr #5
    2750:	120c2302 	andne	r2, ip, #134217728	; 0x8000000
    2754:	0000085b 	andeq	r0, r0, fp, asr r8
    2758:	c80c3f07 	stmdagt	ip, {r0, r1, r2, r8, r9, sl, fp, ip, sp}
    275c:	02000002 	andeq	r0, r0, #2
    2760:	fc121023 	ldc2	0, cr1, [r2], {35}	; 0x23
    2764:	07000003 	streq	r0, [r0, -r3]
    2768:	02c80c42 	sbceq	r0, r8, #16896	; 0x4200
    276c:	23020000 	movwcs	r0, #8192	; 0x2000
    2770:	07361214 			; <UNDEFINED> instruction: 0x07361214
    2774:	45070000 	strmi	r0, [r7, #-0]
    2778:	0002c80c 	andeq	ip, r2, ip, lsl #16
    277c:	18230200 	stmdane	r3!, {r9}
    2780:	00206512 	eoreq	r6, r0, r2, lsl r5
    2784:	0c4a0700 	mcrreq	7, 0, r0, sl, cr0
    2788:	000002c8 	andeq	r0, r0, r8, asr #5
    278c:	121c2302 	andsne	r2, ip, #134217728	; 0x8000000
    2790:	00000732 	andeq	r0, r0, r2, lsr r7
    2794:	c80c4d07 	stmdagt	ip, {r0, r1, r2, r8, sl, fp, lr}
    2798:	02000002 	andeq	r0, r0, #2
    279c:	64122023 	ldrvs	r2, [r2], #-35	; 0xffffffdd
    27a0:	07000007 	streq	r0, [r0, -r7]
    27a4:	02c80c52 	sbceq	r0, r8, #20992	; 0x5200
    27a8:	23020000 	movwcs	r0, #8192	; 0x2000
    27ac:	02491224 	subeq	r1, r9, #36, 4	; 0x40000002
    27b0:	55070000 	strpl	r0, [r7, #-0]
    27b4:	0002c80c 	andeq	ip, r2, ip, lsl #16
    27b8:	28230200 	stmdacs	r3!, {r9}
    27bc:	0007c012 	andeq	ip, r7, r2, lsl r0
    27c0:	0c5b0700 	mrrceq	7, 0, r0, fp, cr0
    27c4:	000002c8 	andeq	r0, r0, r8, asr #5
    27c8:	002c2302 	eoreq	r2, ip, r2, lsl #6
    27cc:	00004d06 	andeq	r4, r0, r6, lsl #26
    27d0:	02600700 	rsbeq	r0, r0, #0, 14
    27d4:	00000752 	andeq	r0, r0, r2, asr r7
    27d8:	4f010702 	svcmi	0x00010702
    27dc:	07000002 	streq	r0, [r0, -r2]
    27e0:	084f0167 	stmdaeq	pc, {r0, r1, r2, r5, r6, r8}^	; <UNPREDICTABLE>
    27e4:	22040000 	andcs	r0, r4, #0
    27e8:	00000001 	andeq	r0, r0, r1
    27ec:	00045f04 	andeq	r5, r4, r4, lsl #30
    27f0:	7c040100 	stfvcs	f0, [r4], {-0}
    27f4:	02000004 	andeq	r0, r0, #4
    27f8:	0008d704 	andeq	sp, r8, r4, lsl #14
    27fc:	5f040300 	svcpl	0x00040300
    2800:	04000002 	streq	r0, [r0], #-2
    2804:	0003be04 	andeq	fp, r3, r4, lsl #28
    2808:	06000500 	streq	r0, [r0], -r0, lsl #10
    280c:	000006c6 	andeq	r0, r0, r6, asr #13
    2810:	1c026e07 	stcne	14, cr6, [r2], {7}
    2814:	09000008 	stmdbeq	r0, {r3}
    2818:	0000084f 	andeq	r0, r0, pc, asr #16
    281c:	00071e13 	andeq	r1, r7, r3, lsl lr
    2820:	8a076000 	bhi	1da828 <_Min_Heap_Size+0x1da028>
    2824:	00094010 	andeq	r4, r9, r0, lsl r0
    2828:	05361200 	ldreq	r1, [r6, #-512]!	; 0xfffffe00
    282c:	8c070000 	stchi	0, cr0, [r7], {-0}
    2830:	0009401f 	andeq	r4, r9, pc, lsl r0
    2834:	00230200 	eoreq	r0, r3, r0, lsl #4
    2838:	001b4712 	andseq	r4, fp, r2, lsl r7
    283c:	1e8e0700 	cdpne	7, 8, cr0, cr14, cr0, {0}
    2840:	00000810 	andeq	r0, r0, r0, lsl r8
    2844:	12042302 	andne	r2, r4, #134217728	; 0x8000000
    2848:	000031e8 	andeq	r3, r0, r8, ror #3
    284c:	e51e9007 	ldr	r9, [lr, #-7]
    2850:	02000006 	andeq	r0, r0, #6
    2854:	4b123423 	blmi	48f8e8 <_Min_Heap_Size+0x48f0e8>
    2858:	07000003 	streq	r0, [r0, -r3]
    285c:	085b1e92 	ldmdaeq	fp, {r1, r4, r7, r9, sl, fp, ip}^
    2860:	23020000 	movwcs	r0, #8192	; 0x2000
    2864:	02d31235 	sbcseq	r1, r3, #1342177283	; 0x50000003
    2868:	94070000 	strls	r0, [r7], #-0
    286c:	0009461f 	andeq	r4, r9, pc, lsl r6
    2870:	38230200 	stmdacc	r3!, {r9}
    2874:	00098012 	andeq	r8, r9, r2, lsl r0
    2878:	21960700 	orrscs	r0, r6, r0, lsl #14
    287c:	0000095a 	andeq	r0, r0, sl, asr r9
    2880:	123c2302 	eorsne	r2, ip, #134217728	; 0x8000000
    2884:	0000020d 	andeq	r0, r0, sp, lsl #4
    2888:	5a219807 	bpl	8688ac <_Min_Heap_Size+0x8680ac>
    288c:	02000009 	andeq	r0, r0, #9
    2890:	cb124023 	blgt	492924 <_Min_Heap_Size+0x492124>
    2894:	07000001 	streq	r0, [r0, -r1]
    2898:	095a219a 	ldmdbeq	sl, {r1, r3, r4, r7, r8, sp}^
    289c:	23020000 	movwcs	r0, #8192	; 0x2000
    28a0:	05ee1244 	strbeq	r1, [lr, #580]!	; 0x244
    28a4:	9c070000 	stcls	0, cr0, [r7], {-0}
    28a8:	00095a21 	andeq	r5, r9, r1, lsr #20
    28ac:	48230200 	stmdami	r3!, {r9}
    28b0:	00053f12 	andeq	r3, r5, r2, lsl pc
    28b4:	219e0700 	orrscs	r0, lr, r0, lsl #14
    28b8:	0000095a 	andeq	r0, r0, sl, asr r9
    28bc:	124c2302 	subne	r2, ip, #134217728	; 0x8000000
    28c0:	0000096e 	andeq	r0, r0, lr, ror #18
    28c4:	5a21a007 	bpl	86a8e8 <_Min_Heap_Size+0x86a0e8>
    28c8:	02000009 	andeq	r0, r0, #9
    28cc:	dd125023 	ldcle	0, cr5, [r2, #-140]	; 0xffffff74
    28d0:	07000003 	streq	r0, [r0, -r3]
    28d4:	02d41ea2 	sbcseq	r1, r4, #2592	; 0xa20
    28d8:	23020000 	movwcs	r0, #8192	; 0x2000
    28dc:	02bc1254 	adcseq	r1, ip, #84, 4	; 0x40000005
    28e0:	a4070000 	strge	r0, [r7], #-0
    28e4:	0002c81e 	andeq	ip, r2, lr, lsl r8
    28e8:	58230200 	stmdapl	r3!, {r9}
    28ec:	00036b12 	andeq	r6, r3, r2, lsl fp
    28f0:	1ea60700 	cdpne	7, 10, cr0, cr6, cr0, {0}
    28f4:	000002c8 	andeq	r0, r0, r8, asr #5
    28f8:	005c2302 	subseq	r2, ip, r2, lsl #6
    28fc:	03530414 	cmpeq	r3, #20, 8	; 0x14000000
    2900:	04150000 	ldreq	r0, [r5], #-0
    2904:	09540116 	ldmdbeq	r4, {r1, r2, r4, r8}^
    2908:	54170000 	ldrpl	r0, [r7], #-0
    290c:	00000009 	andeq	r0, r0, r9
    2910:	08600414 	stmdaeq	r0!, {r2, r4, sl}^
    2914:	04140000 	ldreq	r0, [r4], #-0
    2918:	00000948 	andeq	r0, r0, r8, asr #18
    291c:	00072006 	andeq	r2, r7, r6
    2920:	02a80700 	adceq	r0, r8, #0, 14
    2924:	00000860 	andeq	r0, r0, r0, ror #16
    2928:	2e081c10 	mcrcs	12, 0, r1, cr8, cr0, {0}
    292c:	0009df09 	andeq	sp, r9, r9, lsl #30
    2930:	01b71200 			; <UNDEFINED> instruction: 0x01b71200
    2934:	30080000 	andcc	r0, r8, r0
    2938:	0002c80c 	andeq	ip, r2, ip, lsl #16
    293c:	00230200 	eoreq	r0, r3, r0, lsl #4
    2940:	00073b12 	andeq	r3, r7, r2, lsl fp
    2944:	0c360800 	ldceq	8, cr0, [r6], #-0
    2948:	000002c8 	andeq	r0, r0, r8, asr #5
    294c:	12042302 	andne	r2, r4, #134217728	; 0x8000000
    2950:	000002ab 	andeq	r0, r0, fp, lsr #5
    2954:	c80c3908 	stmdagt	ip, {r3, r8, fp, ip, sp}
    2958:	02000002 	andeq	r0, r0, #2
    295c:	51120823 	tstpl	r2, r3, lsr #16
    2960:	08000003 	stmdaeq	r0, {r0, r1}
    2964:	02c80c3c 	sbceq	r0, r8, #60, 24	; 0x3c00
    2968:	23020000 	movwcs	r0, #8192	; 0x2000
    296c:	0736120c 	ldreq	r1, [r6, -ip, lsl #4]!
    2970:	43080000 	movwmi	r0, #32768	; 0x8000
    2974:	0002c80c 	andeq	ip, r2, ip, lsl #16
    2978:	10230200 	eorne	r0, r3, r0, lsl #4
    297c:	0008cd12 	andeq	ip, r8, r2, lsl sp
    2980:	0c460800 	mcrreq	8, 0, r0, r6, cr0
    2984:	000002c8 	andeq	r0, r0, r8, asr #5
    2988:	12142302 	andsne	r2, r4, #134217728	; 0x8000000
    298c:	0000015e 	andeq	r0, r0, lr, asr r1
    2990:	c80c4908 	stmdagt	ip, {r3, r8, fp, lr}
    2994:	02000002 	andeq	r0, r0, #2
    2998:	06001823 	streq	r1, [r0], -r3, lsr #16
    299c:	0000086f 	andeq	r0, r0, pc, ror #16
    29a0:	6c034b08 			; <UNDEFINED> instruction: 0x6c034b08
    29a4:	02000009 	andeq	r0, r0, #9
    29a8:	024f0107 	subeq	r0, pc, #-1073741823	; 0xc0000001
    29ac:	75080000 	strvc	r0, [r8, #-0]
    29b0:	000a2a01 	andeq	r2, sl, r1, lsl #20
    29b4:	07f30400 	ldrbeq	r0, [r3, r0, lsl #8]!
    29b8:	04000000 	streq	r0, [r0], #-0
    29bc:	000002da 	ldrdeq	r0, [r0], -sl
    29c0:	09290420 	stmdbeq	r9!, {r5, sl}
    29c4:	04240000 	strteq	r0, [r4], #-0
    29c8:	00000551 	andeq	r0, r0, r1, asr r5
    29cc:	07990421 	ldreq	r0, [r9, r1, lsr #8]
    29d0:	04220000 	strteq	r0, [r2], #-0
    29d4:	00000198 	muleq	r0, r8, r1
    29d8:	08b60423 	ldmeq	r6!, {r0, r1, r5, sl}
    29dc:	04a00000 	strteq	r0, [r0], #0
    29e0:	000006f8 	strdeq	r0, [r0], -r8
    29e4:	250600e0 	strcs	r0, [r6, #-224]	; 0xffffff20
    29e8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    29ec:	09eb0387 	stmibeq	fp!, {r0, r1, r2, r7, r8, r9}^
    29f0:	2a090000 	bcs	2429f8 <_Min_Heap_Size+0x2421f8>
    29f4:	0600000a 	streq	r0, [r0], -sl
    29f8:	00000886 	andeq	r0, r0, r6, lsl #17
    29fc:	c8129008 	ldmdagt	r2, {r3, ip, pc}
    2a00:	09000002 	stmdbeq	r0, {r1}
    2a04:	00000a3b 	andeq	r0, r0, fp, lsr sl
    2a08:	0000da06 	andeq	sp, r0, r6, lsl #20
    2a0c:	129b0800 	addsne	r0, fp, #0, 16
    2a10:	000002c8 	andeq	r0, r0, r8, asr #5
    2a14:	000a4c09 	andeq	r4, sl, r9, lsl #24
    2a18:	04b31300 	ldrteq	r1, [r3], #768	; 0x300
    2a1c:	08480000 	stmdaeq	r8, {}^	; <UNPREDICTABLE>
    2a20:	0b5b10a0 	bleq	16c6ca8 <_Min_Heap_Size+0x16c64a8>
    2a24:	36120000 	ldrcc	r0, [r2], -r0
    2a28:	08000005 	stmdaeq	r0, {r0, r2}
    2a2c:	0b5b22a2 	bleq	16cb4bc <_Min_Heap_Size+0x16cacbc>
    2a30:	23020000 	movwcs	r0, #8192	; 0x2000
    2a34:	1b471200 	blne	11c723c <_Min_Heap_Size+0x11c6a3c>
    2a38:	a4080000 	strge	r0, [r8], #-0
    2a3c:	0009df21 	andeq	sp, r9, r1, lsr #30
    2a40:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    2a44:	00022212 	andeq	r2, r2, r2, lsl r2
    2a48:	22a60800 	adccs	r0, r6, #0, 16
    2a4c:	00000b61 	andeq	r0, r0, r1, ror #22
    2a50:	12202302 	eorne	r2, r0, #134217728	; 0x8000000
    2a54:	000003a3 	andeq	r0, r0, r3, lsr #7
    2a58:	b721a808 	strlt	sl, [r1, -r8, lsl #16]!
    2a5c:	02000002 	andeq	r0, r0, #2
    2a60:	6b122423 	blvs	48baf4 <_Min_Heap_Size+0x48b2f4>
    2a64:	08000001 	stmdaeq	r0, {r0}
    2a68:	02c321aa 	sbceq	r2, r3, #-2147483606	; 0x8000002a
    2a6c:	23020000 	movwcs	r0, #8192	; 0x2000
    2a70:	08ed1226 	stmiaeq	sp!, {r1, r2, r5, r9, ip}^
    2a74:	ac080000 	stcge	0, cr0, [r8], {-0}
    2a78:	000b6722 	andeq	r6, fp, r2, lsr #14
    2a7c:	28230200 	stmdacs	r3!, {r9}
    2a80:	00039812 	andeq	r9, r3, r2, lsl r8
    2a84:	21ae0800 			; <UNDEFINED> instruction: 0x21ae0800
    2a88:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    2a8c:	122c2302 	eorne	r2, ip, #134217728	; 0x8000000
    2a90:	0000091d 	andeq	r0, r0, sp, lsl r9
    2a94:	c321b008 			; <UNDEFINED> instruction: 0xc321b008
    2a98:	02000002 	andeq	r0, r0, #2
    2a9c:	60122e23 	andsvs	r2, r2, r3, lsr #28
    2aa0:	08000009 	stmdaeq	r0, {r0, r3}
    2aa4:	0a471fb2 	beq	11ca974 <_Min_Heap_Size+0x11ca174>
    2aa8:	23020000 	movwcs	r0, #8192	; 0x2000
    2aac:	115c1230 	cmpne	ip, r0, lsr r2
    2ab0:	b4080000 	strlt	r0, [r8], #-0
    2ab4:	000a5824 	andeq	r5, sl, r4, lsr #16
    2ab8:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    2abc:	00057912 	andeq	r7, r5, r2, lsl r9
    2ac0:	22b60800 	adcscs	r0, r6, #0, 16
    2ac4:	00000b6d 	andeq	r0, r0, sp, ror #22
    2ac8:	12382302 	eorsne	r2, r8, #134217728	; 0x8000000
    2acc:	00000321 	andeq	r0, r0, r1, lsr #6
    2ad0:	6d22b808 	stcvs	8, cr11, [r2, #-32]!	; 0xffffffe0
    2ad4:	0200000b 	andeq	r0, r0, #11
    2ad8:	e8123c23 	ldmda	r2, {r0, r1, r5, sl, fp, ip, sp}
    2adc:	08000031 	stmdaeq	r0, {r0, r4, r5}
    2ae0:	06e521ba 			; <UNDEFINED> instruction: 0x06e521ba
    2ae4:	23020000 	movwcs	r0, #8192	; 0x2000
    2ae8:	003b1240 	eorseq	r1, fp, r0, asr #4
    2aec:	bc080000 	stclt	0, cr0, [r8], {-0}
    2af0:	000a3621 	andeq	r3, sl, r1, lsr #12
    2af4:	41230200 			; <UNDEFINED> instruction: 0x41230200
    2af8:	00095312 	andeq	r5, r9, r2, lsl r3
    2afc:	21c00800 	biccs	r0, r0, r0, lsl #16
    2b00:	00000a36 	andeq	r0, r0, r6, lsr sl
    2b04:	12422302 	subne	r2, r2, #134217728	; 0x8000000
    2b08:	000003dd 	ldrdeq	r0, [r0], -sp
    2b0c:	d421c308 	strtle	ip, [r1], #-776	; 0xfffffcf8
    2b10:	02000002 	andeq	r0, r0, #2
    2b14:	14004423 	strne	r4, [r0], #-1059	; 0xfffffbdd
    2b18:	00068f04 	andeq	r8, r6, r4, lsl #30
    2b1c:	b2041400 	andlt	r1, r4, #0, 8
    2b20:	14000002 	strne	r0, [r0], #-2
    2b24:	0002a604 	andeq	sl, r2, r4, lsl #12
    2b28:	60041400 	andvs	r1, r4, r0, lsl #8
    2b2c:	06000009 	streq	r0, [r0], -r9
    2b30:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
    2b34:	5d03d508 	cfstr32pl	mvfx13, [r3, #-32]	; 0xffffffe0
    2b38:	1800000a 	stmdane	r0, {r1, r3}
    2b3c:	00000364 	andeq	r0, r0, r4, ror #6
    2b40:	731b240b 	tstvc	fp, #184549376	; 0xb000000
    2b44:	0100000b 	tsteq	r0, fp
    2b48:	0b7f1901 	bleq	1fc8f54 <_Min_Heap_Size+0x1fc8754>
    2b4c:	1b010000 	blne	42b54 <_Min_Heap_Size+0x42354>
    2b50:	98030514 	stmdals	r3, {r2, r4, r8, sl}
    2b54:	1a200080 	bne	802d5c <_Min_Heap_Size+0x80255c>
    2b58:	000bfb01 	andeq	pc, fp, r1, lsl #22
    2b5c:	065c0100 	ldrbeq	r0, [ip], -r0, lsl #2
    2b60:	00000001 	andeq	r0, r0, r1
    2b64:	00000000 	andeq	r0, r0, r0
    2b68:	0004a700 	andeq	sl, r4, r0, lsl #14
    2b6c:	0bf90100 	bleq	ffe42f74 <_estack+0xdfe395d4>
    2b70:	a31b0000 	tstge	fp, #0
    2b74:	0100000c 	tsteq	r0, ip
    2b78:	0bf92d5c 	bleq	ffe4e0f0 <_estack+0xdfe44750>
    2b7c:	04cf0000 	strbeq	r0, [pc], #0	; 2b84 <_Min_Heap_Size+0x2384>
    2b80:	04c70000 	strbeq	r0, [r7], #0
    2b84:	001c0000 	andseq	r0, ip, r0
    2b88:	01000000 	mrseq	r0, (UNDEF: 0)
    2b8c:	e800000d 	stmda	r0, {r0, r2, r3}
    2b90:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    2b94:	0c055001 	stceq	0, cr5, [r5], {1}
    2b98:	40020000 	andmi	r0, r2, r0
    2b9c:	0351011d 	cmpeq	r1, #1073741831	; 0x40000007
    2ba0:	0006000a 	andeq	r0, r6, sl
    2ba4:	0000001e 	andeq	r0, r0, lr, lsl r0
    2ba8:	000d0f00 	andeq	r0, sp, r0, lsl #30
    2bac:	50011d00 	andpl	r1, r1, r0, lsl #26
    2bb0:	00250802 	eoreq	r0, r5, r2, lsl #16
    2bb4:	73041400 	movwvc	r1, #17408	; 0x4400
    2bb8:	1a00000b 	bne	2bec <_Min_Heap_Size+0x23ec>
    2bbc:	000bcc01 	andeq	ip, fp, r1, lsl #24
    2bc0:	063b0100 	ldrteq	r0, [fp], -r0, lsl #2
    2bc4:	0007a401 	andeq	sl, r7, r1, lsl #8
    2bc8:	00082408 	andeq	r2, r8, r8, lsl #8
    2bcc:	00050908 	andeq	r0, r5, r8, lsl #18
    2bd0:	0cc50100 	stfeqe	f0, [r5], {0}
    2bd4:	a31b0000 	tstge	fp, #0
    2bd8:	0100000c 	tsteq	r0, ip
    2bdc:	0bf92b3b 	bleq	ffe4d8d0 <_estack+0xdfe43f30>
    2be0:	05550000 	ldrbeq	r0, [r5, #-0]
    2be4:	054d0000 	strbeq	r0, [sp, #-0]
    2be8:	711f0000 	tstvc	pc, r0
    2bec:	0100000b 	tsteq	r0, fp
    2bf0:	0746143e 	smlaldxeq	r1, r6, lr, r4
    2bf4:	91020000 	mrsls	r0, (UNDEF: 2)
    2bf8:	07c62064 	strbeq	r2, [r6, r4, rrx]
    2bfc:	07e00800 	strbeq	r0, [r0, r0, lsl #16]!
    2c00:	0c5a0800 	mrrceq	8, 0, r0, sl, cr0
    2c04:	ea1f0000 	b	7c2c0c <_Min_Heap_Size+0x7c240c>
    2c08:	01000001 	tsteq	r0, r1
    2c0c:	02d40545 	sbcseq	r0, r4, #289406976	; 0x11400000
    2c10:	91020000 	mrsls	r0, (UNDEF: 2)
    2c14:	e020005c 	eor	r0, r0, ip, asr r0
    2c18:	f4080007 	vst4.8	{d0-d3}, [r8], r7
    2c1c:	77080007 	strvc	r0, [r8, -r7]
    2c20:	1f00000c 	svcne	0x0000000c
    2c24:	000001ea 	andeq	r0, r0, sl, ror #3
    2c28:	d4054701 	strle	r4, [r5], #-1793	; 0xfffff8ff
    2c2c:	02000002 	andeq	r0, r0, #2
    2c30:	1c006091 	stcne	0, cr6, [r0], {145}	; 0x91
    2c34:	0800080e 	stmdaeq	r0, {r1, r2, r3, fp}
    2c38:	00000d1e 	andeq	r0, r0, lr, lsl sp
    2c3c:	00000c94 	muleq	r0, r4, ip
    2c40:	0550011d 	ldrbeq	r0, [r0, #-285]	; 0xfffffee3
    2c44:	0200000c 	andeq	r0, r0, #12
    2c48:	51011d40 	tstpl	r1, r0, asr #26
    2c4c:	00649102 	rsbeq	r9, r4, r2, lsl #2
    2c50:	0008181c 	andeq	r1, r8, ip, lsl r8
    2c54:	000d2c08 	andeq	r2, sp, r8, lsl #24
    2c58:	000cb400 	andeq	fp, ip, r0, lsl #8
    2c5c:	50011d00 	andpl	r1, r1, r0, lsl #26
    2c60:	1d250802 	stcne	8, cr0, [r5, #-8]!
    2c64:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    2c68:	52011d00 	andpl	r1, r1, #0, 26
    2c6c:	00007402 	andeq	r7, r0, r2, lsl #8
    2c70:	00081e1e 	andeq	r1, r8, lr, lsl lr
    2c74:	000d3b08 	andeq	r3, sp, r8, lsl #22
    2c78:	50011d00 	andpl	r1, r1, r0, lsl #26
    2c7c:	00250802 	eoreq	r0, r5, r2, lsl #16
    2c80:	07011a00 	streq	r1, [r1, -r0, lsl #20]
    2c84:	01000000 	mrseq	r0, (UNDEF: 0)
    2c88:	7001061f 	andvc	r0, r1, pc, lsl r6
    2c8c:	a4080007 	strge	r0, [r8], #-7
    2c90:	8f080007 	svchi	0x00080007
    2c94:	01000005 	tsteq	r0, r5
    2c98:	00000d01 	andeq	r0, r0, r1, lsl #26
    2c9c:	0007921c 	andeq	r9, r7, ip, lsl r2
    2ca0:	000d4a08 	andeq	r4, sp, r8, lsl #20
    2ca4:	000cf700 	andeq	pc, ip, r0, lsl #14
    2ca8:	50011d00 	andpl	r1, r1, r0, lsl #26
    2cac:	80980305 	addshi	r0, r8, r5, lsl #6
    2cb0:	21002000 	mrscs	r2, (UNDEF: 0)
    2cb4:	0800079a 	stmdaeq	r0, {r1, r3, r4, r7, r8, r9, sl}
    2cb8:	00000d59 	andeq	r0, r0, r9, asr sp
    2cbc:	01012200 	mrseq	r2, R9_usr
    2cc0:	00000c86 	andeq	r0, r0, r6, lsl #25
    2cc4:	00000c86 	andeq	r0, r0, r6, lsl #25
    2cc8:	2307e106 	movwcs	lr, #28934	; 0x7106
    2ccc:	10180101 	andsne	r0, r8, r1, lsl #2
    2cd0:	10180000 	andsne	r0, r8, r0
    2cd4:	07090000 	streq	r0, [r9, -r0]
    2cd8:	01220601 			; <UNDEFINED> instruction: 0x01220601
    2cdc:	000cd601 	andeq	sp, ip, r1, lsl #12
    2ce0:	000cd600 	andeq	sp, ip, r0, lsl #12
    2ce4:	07e00600 	strbeq	r0, [r0, r0, lsl #12]!
    2ce8:	5b010123 	blpl	4317c <_Min_Heap_Size+0x4297c>
    2cec:	5b00000f 	blpl	2d30 <_Min_Heap_Size+0x2530>
    2cf0:	0900000f 	stmdbeq	r0, {r0, r1, r2, r3}
    2cf4:	23060105 	movwcs	r0, #24837	; 0x6105
    2cf8:	0faa0101 	svceq	0x00aa0101
    2cfc:	0faa0000 	svceq	0x00aa0000
    2d00:	06090000 	streq	r0, [r9], -r0
    2d04:	01230601 			; <UNDEFINED> instruction: 0x01230601
    2d08:	000d0801 	andeq	r0, sp, r1, lsl #16
    2d0c:	000d0800 	andeq	r0, sp, r0, lsl #16
    2d10:	02ce0800 	sbceq	r0, lr, #0, 16
    2d14:	01012213 	tsteq	r1, r3, lsl r2
    2d18:	00000451 	andeq	r0, r0, r1, asr r4
    2d1c:	00000451 	andeq	r0, r0, r1, asr r4
    2d20:	00063c0a 	andeq	r3, r6, sl, lsl #24
    2d24:	000002e7 	andeq	r0, r0, r7, ror #5
    2d28:	07210002 	streq	r0, [r1, -r2]!
    2d2c:	01040000 	mrseq	r0, (UNDEF: 4)
    2d30:	00000621 	andeq	r0, r0, r1, lsr #12
    2d34:	0011190c 	andseq	r1, r1, ip, lsl #18
    2d38:	0004e900 	andeq	lr, r4, r0, lsl #18
    2d3c:	00010800 	andeq	r0, r1, r0, lsl #16
	...
    2d48:	000dd300 	andeq	sp, sp, r0, lsl #6
    2d4c:	06010200 	streq	r0, [r1], -r0, lsl #4
    2d50:	0000060f 	andeq	r0, r0, pc, lsl #12
    2d54:	0d080102 	stfeqs	f0, [r8, #-8]
    2d58:	02000006 	andeq	r0, r0, #6
    2d5c:	042a0502 	strteq	r0, [sl], #-1282	; 0xfffffafe
    2d60:	02020000 	andeq	r0, r2, #0
    2d64:	00082807 	andeq	r2, r8, r7, lsl #16
    2d68:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    2d6c:	0000032d 	andeq	r0, r0, sp, lsr #6
    2d70:	0002ef03 	andeq	lr, r2, r3, lsl #30
    2d74:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    2d78:	00000058 	andeq	r0, r0, r8, asr r0
    2d7c:	c3070402 	movwgt	r0, #29698	; 0x7402
    2d80:	02000000 	andeq	r0, r0, #0
    2d84:	03280508 			; <UNDEFINED> instruction: 0x03280508
    2d88:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2d8c:	0000be07 	andeq	fp, r0, r7, lsl #28
    2d90:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    2d94:	00746e69 	rsbseq	r6, r4, r9, ror #28
    2d98:	c8070402 	stmdagt	r7, {r1, sl}
    2d9c:	03000000 	movweq	r0, #0
    2da0:	000002f1 	strdeq	r0, [r0], -r1
    2da4:	4c143003 	ldcmi	0, cr3, [r4], {3}
    2da8:	05000000 	streq	r0, [r0, #-0]
    2dac:	0000007b 	andeq	r0, r0, fp, ror r0
    2db0:	00007b06 	andeq	r7, r0, r6, lsl #22
    2db4:	00009c00 	andeq	r9, r0, r0, lsl #24
    2db8:	00740700 	rsbseq	r0, r4, r0, lsl #14
    2dbc:	00010000 	andeq	r0, r1, r0
    2dc0:	f4048808 	vst2.8	{d8-d9}, [r4], r8
    2dc4:	02880901 	addeq	r0, r8, #16384	; 0x4000
    2dc8:	43090000 	movwmi	r0, #36864	; 0x9000
    2dcc:	f6040052 			; <UNDEFINED> instruction: 0xf6040052
    2dd0:	00871101 	addeq	r1, r7, r1, lsl #2
    2dd4:	23020000 	movwcs	r0, #8192	; 0x2000
    2dd8:	02b40a00 	adcseq	r0, r4, #0, 20
    2ddc:	f7040000 			; <UNDEFINED> instruction: 0xf7040000
    2de0:	00871101 	addeq	r1, r7, r1, lsl #2
    2de4:	23020000 	movwcs	r0, #8192	; 0x2000
    2de8:	02b70a04 	adcseq	r0, r7, #4, 20	; 0x4000
    2dec:	f8040000 			; <UNDEFINED> instruction: 0xf8040000
    2df0:	00871101 	addeq	r1, r7, r1, lsl #2
    2df4:	23020000 	movwcs	r0, #8192	; 0x2000
    2df8:	49430908 	stmdbmi	r3, {r3, r8, fp}^
    2dfc:	f9040052 			; <UNDEFINED> instruction: 0xf9040052
    2e00:	00871101 	addeq	r1, r7, r1, lsl #2
    2e04:	23020000 	movwcs	r0, #8192	; 0x2000
    2e08:	018f0a0c 	orreq	r0, pc, ip, lsl #20
    2e0c:	fa040000 	blx	102e14 <_Min_Heap_Size+0x102614>
    2e10:	00871101 	addeq	r1, r7, r1, lsl #2
    2e14:	23020000 	movwcs	r0, #8192	; 0x2000
    2e18:	07b00a10 			; <UNDEFINED> instruction: 0x07b00a10
    2e1c:	fb040000 	blx	102e26 <_Min_Heap_Size+0x102626>
    2e20:	00871101 	addeq	r1, r7, r1, lsl #2
    2e24:	23020000 	movwcs	r0, #8192	; 0x2000
    2e28:	07150a14 			; <UNDEFINED> instruction: 0x07150a14
    2e2c:	fc040000 	stc2	0, cr0, [r4], {-0}
    2e30:	00871101 	addeq	r1, r7, r1, lsl #2
    2e34:	23020000 	movwcs	r0, #8192	; 0x2000
    2e38:	05a80a18 	streq	r0, [r8, #2584]!	; 0xa18
    2e3c:	fd040000 	stc2	0, cr0, [r4, #-0]
    2e40:	007b1101 	rsbseq	r1, fp, r1, lsl #2
    2e44:	23020000 	movwcs	r0, #8192	; 0x2000
    2e48:	05930a1c 	ldreq	r0, [r3, #2588]	; 0xa1c
    2e4c:	fe040000 	cdp2	0, 0, cr0, cr4, cr0, {0}
    2e50:	00871101 	addeq	r1, r7, r1, lsl #2
    2e54:	23020000 	movwcs	r0, #8192	; 0x2000
    2e58:	022d0a20 	eoreq	r0, sp, #32, 20	; 0x20000
    2e5c:	ff040000 			; <UNDEFINED> instruction: 0xff040000
    2e60:	00871101 	addeq	r1, r7, r1, lsl #2
    2e64:	23020000 	movwcs	r0, #8192	; 0x2000
    2e68:	05b20a24 	ldreq	r0, [r2, #2596]!	; 0xa24
    2e6c:	00040000 	andeq	r0, r4, r0
    2e70:	008c1102 	addeq	r1, ip, r2, lsl #2
    2e74:	23020000 	movwcs	r0, #8192	; 0x2000
    2e78:	09150a28 	ldmdbeq	r5, {r3, r5, r9, fp}
    2e7c:	01040000 	mrseq	r0, (UNDEF: 4)
    2e80:	00871102 	addeq	r1, r7, r2, lsl #2
    2e84:	23020000 	movwcs	r0, #8192	; 0x2000
    2e88:	08200a30 	stmdaeq	r0!, {r4, r5, r9, fp}
    2e8c:	02040000 	andeq	r0, r4, #0
    2e90:	00871102 	addeq	r1, r7, r2, lsl #2
    2e94:	23020000 	movwcs	r0, #8192	; 0x2000
    2e98:	052e0a34 	streq	r0, [lr, #-2612]!	; 0xfffff5cc
    2e9c:	03040000 	movweq	r0, #16384	; 0x4000
    2ea0:	00871102 	addeq	r1, r7, r2, lsl #2
    2ea4:	23020000 	movwcs	r0, #8192	; 0x2000
    2ea8:	05bc0a38 	ldreq	r0, [ip, #2616]!	; 0xa38
    2eac:	04040000 	streq	r0, [r4], #-0
    2eb0:	007b1102 	rsbseq	r1, fp, r2, lsl #2
    2eb4:	23020000 	movwcs	r0, #8192	; 0x2000
    2eb8:	07500a3c 	smmlareq	r0, ip, sl, r0
    2ebc:	05040000 	streq	r0, [r4, #-0]
    2ec0:	00871102 	addeq	r1, r7, r2, lsl #2
    2ec4:	23020000 	movwcs	r0, #8192	; 0x2000
    2ec8:	070d0a40 	streq	r0, [sp, -r0, asr #20]
    2ecc:	06040000 	streq	r0, [r4], -r0
    2ed0:	00871102 	addeq	r1, r7, r2, lsl #2
    2ed4:	23020000 	movwcs	r0, #8192	; 0x2000
    2ed8:	05c60a44 	strbeq	r0, [r6, #2628]	; 0xa44
    2edc:	07040000 	streq	r0, [r4, -r0]
    2ee0:	008c1102 	addeq	r1, ip, r2, lsl #2
    2ee4:	23020000 	movwcs	r0, #8192	; 0x2000
    2ee8:	01540a48 	cmpeq	r4, r8, asr #20
    2eec:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    2ef0:	00871102 	addeq	r1, r7, r2, lsl #2
    2ef4:	23020000 	movwcs	r0, #8192	; 0x2000
    2ef8:	05680a50 	strbeq	r0, [r8, #-2640]!	; 0xfffff5b0
    2efc:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    2f00:	00871102 	addeq	r1, r7, r2, lsl #2
    2f04:	23020000 	movwcs	r0, #8192	; 0x2000
    2f08:	06db0a54 			; <UNDEFINED> instruction: 0x06db0a54
    2f0c:	0a040000 	beq	102f14 <_Min_Heap_Size+0x102714>
    2f10:	00871102 	addeq	r1, r7, r2, lsl #2
    2f14:	23020000 	movwcs	r0, #8192	; 0x2000
    2f18:	05d00a58 	ldrbeq	r0, [r0, #2648]	; 0xa58
    2f1c:	0b040000 	bleq	102f24 <_Min_Heap_Size+0x102724>
    2f20:	007b1102 	rsbseq	r1, fp, r2, lsl #2
    2f24:	23020000 	movwcs	r0, #8192	; 0x2000
    2f28:	001b0a5c 	andseq	r0, fp, ip, asr sl
    2f2c:	0c040000 	stceq	0, cr0, [r4], {-0}
    2f30:	00871102 	addeq	r1, r7, r2, lsl #2
    2f34:	23020000 	movwcs	r0, #8192	; 0x2000
    2f38:	041b0a60 	ldreq	r0, [fp], #-2656	; 0xfffff5a0
    2f3c:	0d040000 	stceq	0, cr0, [r4, #-0]
    2f40:	00871102 	addeq	r1, r7, r2, lsl #2
    2f44:	23020000 	movwcs	r0, #8192	; 0x2000
    2f48:	05da0a64 	ldrbeq	r0, [sl, #2660]	; 0xa64
    2f4c:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    2f50:	008c1102 	addeq	r1, ip, r2, lsl #2
    2f54:	23020000 	movwcs	r0, #8192	; 0x2000
    2f58:	08b10a68 	ldmeq	r1!, {r3, r5, r6, r9, fp}
    2f5c:	0f040000 	svceq	0x00040000
    2f60:	00871102 	addeq	r1, r7, r2, lsl #2
    2f64:	23020000 	movwcs	r0, #8192	; 0x2000
    2f68:	53430970 	movtpl	r0, #14704	; 0x3970
    2f6c:	10040052 	andne	r0, r4, r2, asr r0
    2f70:	00871102 	addeq	r1, r7, r2, lsl #2
    2f74:	23020000 	movwcs	r0, #8192	; 0x2000
    2f78:	05e40a74 	strbeq	r0, [r4, #2676]!	; 0xa74
    2f7c:	11040000 	mrsne	r0, (UNDEF: 4)
    2f80:	008c1102 	addeq	r1, ip, r2, lsl #2
    2f84:	23020000 	movwcs	r0, #8192	; 0x2000
    2f88:	08800a78 	stmeq	r0, {r3, r4, r5, r6, r9, fp}
    2f8c:	12040000 	andne	r0, r4, #0
    2f90:	00871102 	addeq	r1, r7, r2, lsl #2
    2f94:	23030000 	movwcs	r0, #12288	; 0x3000
    2f98:	ae0a0180 	adfge<illegal precision>	f0, f2, f0
    2f9c:	04000003 	streq	r0, [r0], #-3
    2fa0:	87110213 			; <UNDEFINED> instruction: 0x87110213
    2fa4:	03000000 	movweq	r0, #0
    2fa8:	00018423 	andeq	r8, r1, r3, lsr #8
    2fac:	0002010b 	andeq	r0, r2, fp, lsl #2
    2fb0:	02140400 	andseq	r0, r4, #0, 8
    2fb4:	00009c03 	andeq	r9, r0, r3, lsl #24
    2fb8:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    2fbc:	00000758 	andeq	r0, r0, r8, asr r7
    2fc0:	110d010c 	tstne	sp, ip, lsl #2
    2fc4:	3f010000 	svccc	0x00010000
    2fc8:	08240106 	stmdaeq	r4!, {r1, r2, r8}
    2fcc:	085c0800 	ldmdaeq	ip, {fp}^
    2fd0:	05af0800 	streq	r0, [pc, #2048]!	; 37d8 <_Min_Heap_Size+0x2fd8>
    2fd4:	0d010000 	stceq	0, cr0, [r1, #-0]
    2fd8:	08000826 	stmdaeq	r0, {r1, r2, r5, fp}
    2fdc:	0800083e 	stmdaeq	r0, {r1, r2, r3, r4, r5, fp}
    2fe0:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2fe4:	0001ea0e 	andeq	lr, r1, lr, lsl #20
    2fe8:	03460100 	movteq	r0, #24832	; 0x6100
    2fec:	00000087 	andeq	r0, r0, r7, lsl #1
    2ff0:	00789102 	rsbseq	r9, r8, r2, lsl #2
    2ff4:	00083e0f 	andeq	r3, r8, pc, lsl #28
    2ff8:	00085208 	andeq	r5, r8, r8, lsl #4
    2ffc:	01ea0e08 	mvneq	r0, r8, lsl #28
    3000:	47010000 	strmi	r0, [r1, -r0]
    3004:	00008703 	andeq	r8, r0, r3, lsl #14
    3008:	7c910200 	lfmvc	f0, 4, [r1], {0}
    300c:	2a000000 	bcs	3014 <_Min_Heap_Size+0x2814>
    3010:	02000046 	andeq	r0, r0, #70	; 0x46
    3014:	0007f400 	andeq	pc, r7, r0, lsl #8
    3018:	21010400 	tstcs	r1, r0, lsl #8
    301c:	0c000006 	stceq	0, cr0, [r0], {6}
    3020:	000013e1 	andeq	r1, r0, r1, ror #7
    3024:	000004e9 	andeq	r0, r0, r9, ror #9
    3028:	00000130 	andeq	r0, r0, r0, lsr r1
	...
    3034:	00000f15 	andeq	r0, r0, r5, lsl pc
    3038:	0f060102 	svceq	0x00060102
    303c:	03000006 	movweq	r0, #6
    3040:	00000076 	andeq	r0, r0, r6, ror r0
    3044:	3c182b03 			; <UNDEFINED> instruction: 0x3c182b03
    3048:	02000000 	andeq	r0, r0, #0
    304c:	060d0801 	streq	r0, [sp], -r1, lsl #16
    3050:	02020000 	andeq	r0, r2, #0
    3054:	00042a05 	andeq	r2, r4, r5, lsl #20
    3058:	078e0300 	streq	r0, [lr, r0, lsl #6]
    305c:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
    3060:	00005619 	andeq	r5, r0, r9, lsl r6
    3064:	07020200 	streq	r0, [r2, -r0, lsl #4]
    3068:	00000828 	andeq	r0, r0, r8, lsr #16
    306c:	2d050402 	cfstrscs	mvf0, [r5, #-8]
    3070:	03000003 	movweq	r0, #3
    3074:	000002ef 	andeq	r0, r0, pc, ror #5
    3078:	70194f03 	andsvc	r4, r9, r3, lsl #30
    307c:	02000000 	andeq	r0, r0, #0
    3080:	00c30704 	sbceq	r0, r3, r4, lsl #14
    3084:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    3088:	00032805 	andeq	r2, r3, r5, lsl #16
    308c:	15750300 	ldrbne	r0, [r5, #-768]!	; 0xfffffd00
    3090:	69030000 	stmdbvs	r3, {}	; <UNPREDICTABLE>
    3094:	00008a19 	andeq	r8, r0, r9, lsl sl
    3098:	07080200 	streq	r0, [r8, -r0, lsl #4]
    309c:	000000be 	strheq	r0, [r0], -lr
    30a0:	69050404 	stmdbvs	r5, {r2, sl}
    30a4:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    30a8:	00c80704 	sbceq	r0, r8, r4, lsl #14
    30ac:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    30b0:	04000000 	streq	r0, [r0], #-0
    30b4:	00301318 	eorseq	r1, r0, r8, lsl r3
    30b8:	9f050000 	svcls	0x00050000
    30bc:	03000000 	movweq	r0, #0
    30c0:	00000790 	muleq	r0, r0, r7
    30c4:	4a142404 	bmi	50c0dc <_Min_Heap_Size+0x50b8dc>
    30c8:	06000000 	streq	r0, [r0], -r0
    30cc:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    30d0:	0000b005 	andeq	fp, r0, r5
    30d4:	02f10300 	rscseq	r0, r1, #0, 6
    30d8:	30040000 	andcc	r0, r4, r0
    30dc:	00006414 	andeq	r6, r0, r4, lsl r4
    30e0:	00c60600 	sbceq	r0, r6, r0, lsl #12
    30e4:	c6050000 	strgt	r0, [r5], -r0
    30e8:	03000000 	movweq	r0, #0
    30ec:	00001577 	andeq	r1, r0, r7, ror r5
    30f0:	7e143c04 	cdpvc	12, 1, cr3, cr4, cr4, {0}
    30f4:	07000000 	streq	r0, [r0, -r0]
    30f8:	01440518 	cmpeq	r4, r8, lsl r5
    30fc:	00015209 	andeq	r5, r1, r9, lsl #4
    3100:	52430800 	subpl	r0, r3, #0, 16
    3104:	01460500 	cmpeq	r6, r0, lsl #10
    3108:	0000d211 	andeq	sp, r0, r1, lsl r2
    310c:	00230200 	eoreq	r0, r3, r0, lsl #4
    3110:	0007ee09 	andeq	lr, r7, r9, lsl #28
    3114:	01470500 	cmpeq	r7, r0, lsl #10
    3118:	0000d211 	andeq	sp, r0, r1, lsl r2
    311c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    3120:	52415008 	subpl	r5, r1, #8
    3124:	01480500 	cmpeq	r8, r0, lsl #10
    3128:	0000d211 	andeq	sp, r0, r1, lsl r2
    312c:	08230200 	stmdaeq	r3!, {r9}
    3130:	00004209 	andeq	r4, r0, r9, lsl #4
    3134:	01490500 	cmpeq	r9, r0, lsl #10
    3138:	0000d211 	andeq	sp, r0, r1, lsl r2
    313c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    3140:	00085009 	andeq	r5, r8, r9
    3144:	014a0500 	cmpeq	sl, r0, lsl #10
    3148:	0000d211 	andeq	sp, r0, r1, lsl r2
    314c:	10230200 	eorne	r0, r3, r0, lsl #4
    3150:	52434608 	subpl	r4, r3, #8, 12	; 0x800000
    3154:	014b0500 	cmpeq	fp, r0, lsl #10
    3158:	0000d211 	andeq	sp, r0, r1, lsl r2
    315c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    3160:	080d0a00 	stmdaeq	sp, {r9, fp}
    3164:	4c050000 	stcmi	0, cr0, [r5], {-0}
    3168:	00e80301 	rsceq	r0, r8, r1, lsl #6
    316c:	1c070000 	stcne	0, cr0, [r7], {-0}
    3170:	09029505 	stmdbeq	r2, {r0, r2, r8, sl, ip, pc}
    3174:	000001d8 	ldrdeq	r0, [r0], -r8
    3178:	00525308 	subseq	r5, r2, r8, lsl #6
    317c:	11029705 	tstne	r2, r5, lsl #14
    3180:	000000d2 	ldrdeq	r0, [r0], -r2
    3184:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    3188:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
    318c:	d2110298 	andsle	r0, r1, #152, 4	; 0x80000009
    3190:	02000000 	andeq	r0, r0, #0
    3194:	42080423 	andmi	r0, r8, #587202560	; 0x23000000
    3198:	05005252 	streq	r5, [r0, #-594]	; 0xfffffdae
    319c:	d2110299 	andsle	r0, r1, #-1879048183	; 0x90000009
    31a0:	02000000 	andeq	r0, r0, #0
    31a4:	43080823 	movwmi	r0, #34851	; 0x8823
    31a8:	05003152 	streq	r3, [r0, #-338]	; 0xfffffeae
    31ac:	d211029a 	andsle	r0, r1, #-1610612727	; 0xa0000009
    31b0:	02000000 	andeq	r0, r0, #0
    31b4:	43080c23 	movwmi	r0, #35875	; 0x8c23
    31b8:	05003252 	streq	r3, [r0, #-594]	; 0xfffffdae
    31bc:	d211029b 	andsle	r0, r1, #-1342177271	; 0xb0000009
    31c0:	02000000 	andeq	r0, r0, #0
    31c4:	43081023 	movwmi	r1, #32803	; 0x8023
    31c8:	05003352 	streq	r3, [r0, #-850]	; 0xfffffcae
    31cc:	d211029c 	andsle	r0, r1, #156, 4	; 0xc0000009
    31d0:	02000000 	andeq	r0, r0, #0
    31d4:	b2091423 	andlt	r1, r9, #587202560	; 0x23000000
    31d8:	05000001 	streq	r0, [r0, #-1]
    31dc:	d211029d 	andsle	r0, r1, #-805306359	; 0xd0000009
    31e0:	02000000 	andeq	r0, r0, #0
    31e4:	0a001823 	beq	9278 <_Min_Heap_Size+0x8a78>
    31e8:	0000040d 	andeq	r0, r0, sp, lsl #8
    31ec:	03029e05 	movweq	r9, #11781	; 0x2e05
    31f0:	0000015f 	andeq	r0, r0, pc, asr r1
    31f4:	3c01070b 	stccc	7, cr0, [r1], {11}
    31f8:	06000000 	streq	r0, [r0], -r0
    31fc:	020001b9 	andeq	r0, r0, #1073741870	; 0x4000002e
    3200:	300c0000 	andcc	r0, ip, r0
    3204:	00000001 	andeq	r0, r0, r1
    3208:	5445530d 	strbpl	r5, [r5], #-781	; 0xfffffcf3
    320c:	03000100 	movweq	r0, #256	; 0x100
    3210:	0000118c 	andeq	r1, r0, ip, lsl #3
    3214:	e503bc06 	str	fp, [r3, #-3078]	; 0xfffff3fa
    3218:	02000001 	andeq	r0, r0, #1
    321c:	07580408 	ldrbeq	r0, [r8, -r8, lsl #8]
    3220:	070b0000 	streq	r0, [fp, -r0]
    3224:	00003c01 	andeq	r3, r0, r1, lsl #24
    3228:	01270700 			; <UNDEFINED> instruction: 0x01270700
    322c:	0000023a 	andeq	r0, r0, sl, lsr r2
    3230:	0003770c 	andeq	r7, r3, ip, lsl #14
    3234:	460c0000 	strmi	r0, [ip], -r0
    3238:	01000007 	tsteq	r0, r7
    323c:	00094a0c 	andeq	r4, r9, ip, lsl #20
    3240:	580c0200 	stmdapl	ip, {r9}
    3244:	03000003 	movweq	r0, #3
    3248:	13c10300 	bicne	r0, r1, #0, 6
    324c:	2c070000 	stccs	0, cr0, [r7], {-0}
    3250:	00021303 	andeq	r1, r2, r3, lsl #6
    3254:	01070b00 	tsteq	r7, r0, lsl #22
    3258:	0000003c 	andeq	r0, r0, ip, lsr r0
    325c:	61013207 	tstvs	r1, r7, lsl #4
    3260:	0c000002 	stceq	0, cr0, [r0], {2}
    3264:	0000093d 	andeq	r0, r0, sp, lsr r9
    3268:	05230c00 	streq	r0, [r3, #-3072]!	; 0xfffff400
    326c:	00010000 	andeq	r0, r1, r0
    3270:	0001f103 	andeq	pc, r1, r3, lsl #2
    3274:	03350700 	teqeq	r5, #0, 14
    3278:	00000246 	andeq	r0, r0, r6, asr #4
    327c:	3008300e 	andcc	r3, r8, lr
    3280:	00032b09 	andeq	r2, r3, r9, lsl #22
    3284:	06050f00 	streq	r0, [r5], -r0, lsl #30
    3288:	32080000 	andcc	r0, r8, #0
    328c:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3290:	00230200 	eoreq	r0, r3, r0, lsl #4
    3294:	00030e0f 	andeq	r0, r3, pc, lsl #28
    3298:	0c350800 	ldceq	8, cr0, [r5], #-0
    329c:	000000c6 	andeq	r0, r0, r6, asr #1
    32a0:	0f042302 	svceq	0x00042302
    32a4:	00000236 	andeq	r0, r0, r6, lsr r2
    32a8:	c60c3908 	strgt	r3, [ip], -r8, lsl #18
    32ac:	02000000 	andeq	r0, r0, #0
    32b0:	b90f0823 	stmdblt	pc, {r0, r1, r5, fp}	; <UNPREDICTABLE>
    32b4:	08000007 	stmdaeq	r0, {r0, r1, r2}
    32b8:	00c60c3c 	sbceq	r0, r6, ip, lsr ip
    32bc:	23020000 	movwcs	r0, #8192	; 0x2000
    32c0:	085b0f0c 	ldmdaeq	fp, {r2, r3, r8, r9, sl, fp}^
    32c4:	3f080000 	svccc	0x00080000
    32c8:	0000c60c 	andeq	ip, r0, ip, lsl #12
    32cc:	10230200 	eorne	r0, r3, r0, lsl #4
    32d0:	0003fc0f 	andeq	pc, r3, pc, lsl #24
    32d4:	0c420800 	mcrreq	8, 0, r0, r2, cr0
    32d8:	000000c6 	andeq	r0, r0, r6, asr #1
    32dc:	0f142302 	svceq	0x00142302
    32e0:	00000736 	andeq	r0, r0, r6, lsr r7
    32e4:	c60c4508 	strgt	r4, [ip], -r8, lsl #10
    32e8:	02000000 	andeq	r0, r0, #0
    32ec:	650f1823 	strvs	r1, [pc, #-2083]	; 2ad1 <_Min_Heap_Size+0x22d1>
    32f0:	08000020 	stmdaeq	r0, {r5}
    32f4:	00c60c4a 	sbceq	r0, r6, sl, asr #24
    32f8:	23020000 	movwcs	r0, #8192	; 0x2000
    32fc:	07320f1c 			; <UNDEFINED> instruction: 0x07320f1c
    3300:	4d080000 	stcmi	0, cr0, [r8, #-0]
    3304:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3308:	20230200 	eorcs	r0, r3, r0, lsl #4
    330c:	0007640f 	andeq	r6, r7, pc, lsl #8
    3310:	0c520800 	mrrceq	8, 0, r0, r2, cr0
    3314:	000000c6 	andeq	r0, r0, r6, asr #1
    3318:	0f242302 	svceq	0x00242302
    331c:	00000249 	andeq	r0, r0, r9, asr #4
    3320:	c60c5508 	strgt	r5, [ip], -r8, lsl #10
    3324:	02000000 	andeq	r0, r0, #0
    3328:	c00f2823 	andgt	r2, pc, r3, lsr #16
    332c:	08000007 	stmdaeq	r0, {r0, r1, r2}
    3330:	00c60c5b 	sbceq	r0, r6, fp, asr ip
    3334:	23020000 	movwcs	r0, #8192	; 0x2000
    3338:	4d03002c 	stcmi	0, cr0, [r3, #-176]	; 0xffffff50
    333c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    3340:	026d0260 	rsbeq	r0, sp, #96, 4
    3344:	070b0000 	streq	r0, [fp, -r0]
    3348:	00003c01 	andeq	r3, r0, r1, lsl #24
    334c:	01670800 	cmneq	r7, r0, lsl #16
    3350:	0000036a 	andeq	r0, r0, sl, ror #6
    3354:	0001220c 	andeq	r2, r1, ip, lsl #4
    3358:	5f0c0000 	svcpl	0x000c0000
    335c:	01000004 	tsteq	r0, r4
    3360:	00047c0c 	andeq	r7, r4, ip, lsl #24
    3364:	d70c0200 	strle	r0, [ip, -r0, lsl #4]
    3368:	03000008 	movweq	r0, #8
    336c:	00025f0c 	andeq	r5, r2, ip, lsl #30
    3370:	be0c0400 	cfcpyslt	mvf0, mvf12
    3374:	05000003 	streq	r0, [r0, #-3]
    3378:	06c60300 	strbeq	r0, [r6], r0, lsl #6
    337c:	6e080000 	cdpvs	0, 0, cr0, cr8, cr0, {0}
    3380:	00033702 	andeq	r3, r3, r2, lsl #14
    3384:	036a0600 	cmneq	sl, #0, 12
    3388:	1e100000 	cdpne	0, 1, cr0, cr0, cr0, {0}
    338c:	60000007 	andvs	r0, r0, r7
    3390:	5b108a08 	blpl	425bb8 <_Min_Heap_Size+0x4253b8>
    3394:	0f000004 	svceq	0x00000004
    3398:	00000536 	andeq	r0, r0, r6, lsr r5
    339c:	5b1f8c08 	blpl	7e63c4 <_Min_Heap_Size+0x7e5bc4>
    33a0:	02000004 	andeq	r0, r0, #4
    33a4:	470f0023 	strmi	r0, [pc, -r3, lsr #32]
    33a8:	0800001b 	stmdaeq	r0, {r0, r1, r3, r4}
    33ac:	032b1e8e 			; <UNDEFINED> instruction: 0x032b1e8e
    33b0:	23020000 	movwcs	r0, #8192	; 0x2000
    33b4:	31e80f04 	mvncc	r0, r4, lsl #30
    33b8:	90080000 	andls	r0, r8, r0
    33bc:	0002611e 	andeq	r6, r2, lr, lsl r1
    33c0:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    33c4:	00034b0f 	andeq	r4, r3, pc, lsl #22
    33c8:	1e920800 	cdpne	8, 9, cr0, cr2, cr0, {0}
    33cc:	00000376 	andeq	r0, r0, r6, ror r3
    33d0:	0f352302 	svceq	0x00352302
    33d4:	000002d3 	ldrdeq	r0, [r0], -r3
    33d8:	611f9408 	tstvs	pc, r8, lsl #8
    33dc:	02000004 	andeq	r0, r0, #4
    33e0:	800f3823 	andhi	r3, pc, r3, lsr #16
    33e4:	08000009 	stmdaeq	r0, {r0, r3}
    33e8:	04752196 	ldrbteq	r2, [r5], #-406	; 0xfffffe6a
    33ec:	23020000 	movwcs	r0, #8192	; 0x2000
    33f0:	020d0f3c 	andeq	r0, sp, #60, 30	; 0xf0
    33f4:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
    33f8:	00047521 	andeq	r7, r4, r1, lsr #10
    33fc:	40230200 	eormi	r0, r3, r0, lsl #4
    3400:	0001cb0f 	andeq	ip, r1, pc, lsl #22
    3404:	219a0800 	orrscs	r0, sl, r0, lsl #16
    3408:	00000475 	andeq	r0, r0, r5, ror r4
    340c:	0f442302 	svceq	0x00442302
    3410:	000005ee 	andeq	r0, r0, lr, ror #11
    3414:	75219c08 	strvc	r9, [r1, #-3080]!	; 0xfffff3f8
    3418:	02000004 	andeq	r0, r0, #4
    341c:	3f0f4823 	svccc	0x000f4823
    3420:	08000005 	stmdaeq	r0, {r0, r2}
    3424:	0475219e 	ldrbteq	r2, [r5], #-414	; 0xfffffe62
    3428:	23020000 	movwcs	r0, #8192	; 0x2000
    342c:	096e0f4c 	stmdbeq	lr!, {r2, r3, r6, r8, r9, sl, fp}^
    3430:	a0080000 	andge	r0, r8, r0
    3434:	00047521 	andeq	r7, r4, r1, lsr #10
    3438:	50230200 	eorpl	r0, r3, r0, lsl #4
    343c:	0003dd0f 	andeq	sp, r3, pc, lsl #26
    3440:	1ea20800 	cdpne	8, 10, cr0, cr2, cr0, {0}
    3444:	000000d2 	ldrdeq	r0, [r0], -r2
    3448:	0f542302 	svceq	0x00542302
    344c:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
    3450:	c61ea408 	ldrgt	sl, [lr], -r8, lsl #8
    3454:	02000000 	andeq	r0, r0, #0
    3458:	6b0f5823 	blvs	3d94ec <_Min_Heap_Size+0x3d8cec>
    345c:	08000003 	stmdaeq	r0, {r0, r1}
    3460:	00c61ea6 	sbceq	r1, r6, r6, lsr #29
    3464:	23020000 	movwcs	r0, #8192	; 0x2000
    3468:	0411005c 	ldreq	r0, [r1], #-92	; 0xffffffa4
    346c:	00000152 	andeq	r0, r0, r2, asr r1
    3470:	01130412 	tsteq	r3, r2, lsl r4
    3474:	0000046f 	andeq	r0, r0, pc, ror #8
    3478:	00046f14 	andeq	r6, r4, r4, lsl pc
    347c:	04110000 	ldreq	r0, [r1], #-0
    3480:	0000037b 	andeq	r0, r0, fp, ror r3
    3484:	04630411 	strbteq	r0, [r3], #-1041	; 0xfffffbef
    3488:	20030000 	andcs	r0, r3, r0
    348c:	08000007 	stmdaeq	r0, {r0, r1, r2}
    3490:	037b02a8 	cmneq	fp, #168, 4	; 0x8000000a
    3494:	1c0e0000 	stcne	0, cr0, [lr], {-0}
    3498:	fa092e09 	blx	24ecc4 <_Min_Heap_Size+0x24e4c4>
    349c:	0f000004 	svceq	0x00000004
    34a0:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
    34a4:	c60c3009 	strgt	r3, [ip], -r9
    34a8:	02000000 	andeq	r0, r0, #0
    34ac:	3b0f0023 	blcc	3c3540 <_Min_Heap_Size+0x3c2d40>
    34b0:	09000007 	stmdbeq	r0, {r0, r1, r2}
    34b4:	00c60c36 	sbceq	r0, r6, r6, lsr ip
    34b8:	23020000 	movwcs	r0, #8192	; 0x2000
    34bc:	02ab0f04 	adceq	r0, fp, #4, 30
    34c0:	39090000 	stmdbcc	r9, {}	; <UNPREDICTABLE>
    34c4:	0000c60c 	andeq	ip, r0, ip, lsl #12
    34c8:	08230200 	stmdaeq	r3!, {r9}
    34cc:	0003510f 	andeq	r5, r3, pc, lsl #2
    34d0:	0c3c0900 			; <UNDEFINED> instruction: 0x0c3c0900
    34d4:	000000c6 	andeq	r0, r0, r6, asr #1
    34d8:	0f0c2302 	svceq	0x000c2302
    34dc:	00000736 	andeq	r0, r0, r6, lsr r7
    34e0:	c60c4309 	strgt	r4, [ip], -r9, lsl #6
    34e4:	02000000 	andeq	r0, r0, #0
    34e8:	cd0f1023 	stcgt	0, cr1, [pc, #-140]	; 3464 <_Min_Heap_Size+0x2c64>
    34ec:	09000008 	stmdbeq	r0, {r3}
    34f0:	00c60c46 	sbceq	r0, r6, r6, asr #24
    34f4:	23020000 	movwcs	r0, #8192	; 0x2000
    34f8:	015e0f14 	cmpeq	lr, r4, lsl pc
    34fc:	49090000 	stmdbmi	r9, {}	; <UNPREDICTABLE>
    3500:	0000c60c 	andeq	ip, r0, ip, lsl #12
    3504:	18230200 	stmdane	r3!, {r9}
    3508:	086f0300 	stmdaeq	pc!, {r8, r9}^	; <UNPREDICTABLE>
    350c:	4b090000 	blmi	243514 <_Min_Heap_Size+0x242d14>
    3510:	00048703 	andeq	r8, r4, r3, lsl #14
    3514:	01070b00 	tsteq	r7, r0, lsl #22
    3518:	0000003c 	andeq	r0, r0, ip, lsr r0
    351c:	45017509 	strmi	r7, [r1, #-1289]	; 0xfffffaf7
    3520:	0c000005 	stceq	0, cr0, [r0], {5}
    3524:	000007f3 	strdeq	r0, [r0], -r3
    3528:	02da0c00 	sbcseq	r0, sl, #0, 24
    352c:	0c200000 	stceq	0, cr0, [r0], #-0
    3530:	00000929 	andeq	r0, r0, r9, lsr #18
    3534:	05510c24 	ldrbeq	r0, [r1, #-3108]	; 0xfffff3dc
    3538:	0c210000 	stceq	0, cr0, [r1], #-0
    353c:	00000799 	muleq	r0, r9, r7
    3540:	01980c22 	orrseq	r0, r8, r2, lsr #24
    3544:	0c230000 	stceq	0, cr0, [r3], #-0
    3548:	000008b6 			; <UNDEFINED> instruction: 0x000008b6
    354c:	06f80ca0 	ldrbteq	r0, [r8], r0, lsr #25
    3550:	00e00000 	rsceq	r0, r0, r0
    3554:	00002503 	andeq	r2, r0, r3, lsl #10
    3558:	03870900 	orreq	r0, r7, #0, 18
    355c:	00000506 	andeq	r0, r0, r6, lsl #10
    3560:	00054506 	andeq	r4, r5, r6, lsl #10
    3564:	08860300 	stmeq	r6, {r8, r9}
    3568:	90090000 	andls	r0, r9, r0
    356c:	0000c612 	andeq	ip, r0, r2, lsl r6
    3570:	05560600 	ldrbeq	r0, [r6, #-1536]	; 0xfffffa00
    3574:	da030000 	ble	c357c <_Min_Heap_Size+0xc2d7c>
    3578:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    357c:	00c6129b 	smulleq	r1, r6, fp, r2
    3580:	67060000 	strvs	r0, [r6, -r0]
    3584:	10000005 	andne	r0, r0, r5
    3588:	000004b3 			; <UNDEFINED> instruction: 0x000004b3
    358c:	10a00948 	adcne	r0, r0, r8, asr #18
    3590:	00000676 	andeq	r0, r0, r6, ror r6
    3594:	0005360f 	andeq	r3, r5, pc, lsl #12
    3598:	22a20900 	adccs	r0, r2, #0, 18
    359c:	00000676 	andeq	r0, r0, r6, ror r6
    35a0:	0f002302 	svceq	0x00002302
    35a4:	00001b47 	andeq	r1, r0, r7, asr #22
    35a8:	fa21a409 	blx	86c5d4 <_Min_Heap_Size+0x86bdd4>
    35ac:	02000004 	andeq	r0, r0, #4
    35b0:	220f0423 	andcs	r0, pc, #587202560	; 0x23000000
    35b4:	09000002 	stmdbeq	r0, {r1}
    35b8:	067c22a6 	ldrbteq	r2, [ip], -r6, lsr #5
    35bc:	23020000 	movwcs	r0, #8192	; 0x2000
    35c0:	03a30f20 			; <UNDEFINED> instruction: 0x03a30f20
    35c4:	a8090000 	stmdage	r9, {}	; <UNPREDICTABLE>
    35c8:	0000b021 	andeq	fp, r0, r1, lsr #32
    35cc:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    35d0:	00016b0f 	andeq	r6, r1, pc, lsl #22
    35d4:	21aa0900 			; <UNDEFINED> instruction: 0x21aa0900
    35d8:	000000bc 	strheq	r0, [r0], -ip
    35dc:	0f262302 	svceq	0x00262302
    35e0:	000008ed 	andeq	r0, r0, sp, ror #17
    35e4:	8222ac09 	eorhi	sl, r2, #2304	; 0x900
    35e8:	02000006 	andeq	r0, r0, #6
    35ec:	980f2823 	stmdals	pc, {r0, r1, r5, fp, sp}	; <UNPREDICTABLE>
    35f0:	09000003 	stmdbeq	r0, {r0, r1}
    35f4:	00b021ae 	adcseq	r2, r0, lr, lsr #3
    35f8:	23020000 	movwcs	r0, #8192	; 0x2000
    35fc:	091d0f2c 	ldmdbeq	sp, {r2, r3, r5, r8, r9, sl, fp}
    3600:	b0090000 	andlt	r0, r9, r0
    3604:	0000bc21 	andeq	fp, r0, r1, lsr #24
    3608:	2e230200 	cdpcs	2, 2, cr0, cr3, cr0, {0}
    360c:	0009600f 	andeq	r6, r9, pc
    3610:	1fb20900 	svcne	0x00b20900
    3614:	00000562 	andeq	r0, r0, r2, ror #10
    3618:	0f302302 	svceq	0x00302302
    361c:	0000115c 	andeq	r1, r0, ip, asr r1
    3620:	7324b409 			; <UNDEFINED> instruction: 0x7324b409
    3624:	02000005 	andeq	r0, r0, #5
    3628:	790f3423 	stmdbvc	pc, {r0, r1, r5, sl, ip, sp}	; <UNPREDICTABLE>
    362c:	09000005 	stmdbeq	r0, {r0, r2}
    3630:	068822b6 			; <UNDEFINED> instruction: 0x068822b6
    3634:	23020000 	movwcs	r0, #8192	; 0x2000
    3638:	03210f38 			; <UNDEFINED> instruction: 0x03210f38
    363c:	b8090000 	stmdalt	r9, {}	; <UNPREDICTABLE>
    3640:	00068822 	andeq	r8, r6, r2, lsr #16
    3644:	3c230200 	sfmcc	f0, 4, [r3], #-0
    3648:	0031e80f 	eorseq	lr, r1, pc, lsl #16
    364c:	21ba0900 			; <UNDEFINED> instruction: 0x21ba0900
    3650:	00000261 	andeq	r0, r0, r1, ror #4
    3654:	0f402302 	svceq	0x00402302
    3658:	0000003b 	andeq	r0, r0, fp, lsr r0
    365c:	5121bc09 			; <UNDEFINED> instruction: 0x5121bc09
    3660:	02000005 	andeq	r0, r0, #5
    3664:	530f4123 	movwpl	r4, #61731	; 0xf123
    3668:	09000009 	stmdbeq	r0, {r0, r3}
    366c:	055121c0 	ldrbeq	r2, [r1, #-448]	; 0xfffffe40
    3670:	23020000 	movwcs	r0, #8192	; 0x2000
    3674:	03dd0f42 	bicseq	r0, sp, #264	; 0x108
    3678:	c3090000 	movwgt	r0, #36864	; 0x9000
    367c:	0000d221 	andeq	sp, r0, r1, lsr #4
    3680:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    3684:	d8041100 	stmdale	r4, {r8, ip}
    3688:	11000001 	tstne	r0, r1
    368c:	0000ab04 	andeq	sl, r0, r4, lsl #22
    3690:	9f041100 	svcls	0x00041100
    3694:	11000000 	mrsne	r0, (UNDEF: 0)
    3698:	00047b04 	andeq	r7, r4, r4, lsl #22
    369c:	04b50300 	ldrteq	r0, [r5], #768	; 0x300
    36a0:	d5090000 	strle	r0, [r9, #-0]
    36a4:	00057803 	andeq	r7, r5, r3, lsl #16
    36a8:	068e0500 	streq	r0, [lr], r0, lsl #10
    36ac:	34150000 	ldrcc	r0, [r5], #-0
    36b0:	01000013 	tsteq	r0, r3, lsl r0
    36b4:	010d0e6f 	tsteq	sp, pc, ror #28
    36b8:	08000918 	stmdaeq	r0, {r3, r4, r8, fp}
    36bc:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
    36c0:	000005db 	ldrdeq	r0, [r0], -fp
    36c4:	00079601 	andeq	r9, r7, r1, lsl #12
    36c8:	15c21600 	strbne	r1, [r2, #1536]	; 0x600
    36cc:	6f010000 	svcvs	0x00010000
    36d0:	0796300e 	ldreq	r3, [r6, lr]
    36d4:	06030000 	streq	r0, [r3], -r0
    36d8:	05fb0000 	ldrbeq	r0, [fp, #0]!
    36dc:	ea170000 	b	5c36e4 <_Min_Heap_Size+0x5c2ee4>
    36e0:	01000001 	tsteq	r0, r1
    36e4:	c60c0e71 			; <UNDEFINED> instruction: 0xc60c0e71
    36e8:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    36ec:	37000006 	strcc	r0, [r0, -r6]
    36f0:	17000006 	strne	r0, [r0, -r6]
    36f4:	000015fb 	strdeq	r1, [r0], -fp
    36f8:	0c0e7201 	sfmeq	f7, 4, [lr], {1}
    36fc:	000000c6 	andeq	r0, r0, r6, asr #1
    3700:	00000652 	andeq	r0, r0, r2, asr r6
    3704:	0000064c 	andeq	r0, r0, ip, asr #12
    3708:	00095418 	andeq	r5, r9, r8, lsl r4
    370c:	0045ab08 	subeq	sl, r5, r8, lsl #22
    3710:	00071700 	andeq	r1, r7, r0, lsl #14
    3714:	50011900 	andpl	r1, r1, r0, lsl #18
    3718:	45200305 	strmi	r0, [r0, #-773]!	; 0xfffffcfb
    371c:	01190800 	tsteq	r9, r0, lsl #16
    3720:	780a0351 	stmdavc	sl, {r0, r4, r6, r8, r9}
    3724:	a21a000e 	andsge	r0, sl, #14
    3728:	ba080009 	blt	203754 <_Min_Heap_Size+0x202f54>
    372c:	18000045 	stmdane	r0, {r0, r2, r6}
    3730:	080009ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, fp}
    3734:	000045ab 	andeq	r4, r0, fp, lsr #11
    3738:	0000073e 	andeq	r0, r0, lr, lsr r7
    373c:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    3740:	00452003 	subeq	r2, r5, r3
    3744:	51011908 	tstpl	r1, r8, lsl #18
    3748:	0e750a03 	vaddeq.f32	s1, s10, s6
    374c:	09ba1800 	ldmibeq	sl!, {fp, ip}
    3750:	45ab0800 	strmi	r0, [fp, #2048]!	; 0x800
    3754:	075c0000 	ldrbeq	r0, [ip, -r0]
    3758:	01190000 	tsteq	r9, r0
    375c:	20030550 	andcs	r0, r3, r0, asr r5
    3760:	19080045 	stmdbne	r8, {r0, r2, r6}
    3764:	0a035101 	beq	d7b70 <_Min_Heap_Size+0xd7370>
    3768:	18000e76 	stmdane	r0, {r1, r2, r4, r5, r6, r9, sl, fp}
    376c:	080009c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, fp}
    3770:	000045ab 	andeq	r4, r0, fp, lsr #11
    3774:	0000077a 	andeq	r0, r0, sl, ror r7
    3778:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    377c:	00452003 	subeq	r2, r5, r3
    3780:	51011908 	tstpl	r1, r8, lsl #18
    3784:	0e770a03 	vaddeq.f32	s1, s14, s6
    3788:	09cc1a00 	stmibeq	ip, {r9, fp, ip}^
    378c:	45c90800 	strbmi	r0, [r9, #2048]	; 0x800
    3790:	fc1a0000 	ldc2	0, cr0, [sl], {-0}
    3794:	d8080009 	stmdale	r8, {r0, r3}
    3798:	1a000045 	bne	38b4 <_Min_Heap_Size+0x30b4>
    379c:	08000a4e 	stmdaeq	r0, {r1, r2, r3, r6, r9, fp}
    37a0:	000045d8 	ldrdeq	r4, [r0], -r8
    37a4:	8e041100 	adfhis	f1, f4, f0
    37a8:	1b000006 	blne	37c8 <_Min_Heap_Size+0x2fc8>
    37ac:	000017d2 	ldrdeq	r1, [r0], -r2
    37b0:	1a0e0a01 	bne	385fbc <_Min_Heap_Size+0x3857bc>
    37b4:	00023a01 	andeq	r3, r2, r1, lsl #20
    37b8:	000d4200 	andeq	r4, sp, r0, lsl #4
    37bc:	000e2808 	andeq	r2, lr, r8, lsl #16
    37c0:	00067b08 	andeq	r7, r6, r8, lsl #22
    37c4:	08cf0100 	stmiaeq	pc, {r8}^	; <UNPREDICTABLE>
    37c8:	c2160000 	andsgt	r0, r6, #0
    37cc:	01000015 	tsteq	r0, r5, lsl r0
    37d0:	963e0e0a 	ldrtls	r0, [lr], -sl, lsl #28
    37d4:	e7000007 	str	r0, [r0, -r7]
    37d8:	d7000006 	strle	r0, [r0, -r6]
    37dc:	17000006 	strne	r0, [r0, -r6]
    37e0:	0000123f 	andeq	r1, r0, pc, lsr r2
    37e4:	0d0e0c01 	stceq	12, cr0, [lr, #-4]
    37e8:	00000682 	andeq	r0, r0, r2, lsl #13
    37ec:	00000759 	andeq	r0, r0, r9, asr r7
    37f0:	00000753 	andeq	r0, r0, r3, asr r7
    37f4:	0012a917 	andseq	sl, r2, r7, lsl r9
    37f8:	0e0d0100 	adfeqe	f0, f5, f0
    37fc:	0008cf0d 	andeq	ip, r8, sp, lsl #30
    3800:	00078900 	andeq	r8, r7, r0, lsl #18
    3804:	00078300 	andeq	r8, r7, r0, lsl #6
    3808:	0db61c00 	ldceq	12, cr1, [r6]
    380c:	0dce0800 	stcleq	8, cr0, [lr]
    3810:	08920800 	ldmeq	r2, {fp}
    3814:	761d0000 	ldrvc	r0, [sp], -r0
    3818:	01006c61 	tsteq	r0, r1, ror #24
    381c:	c6090e42 	strgt	r0, [r9], -r2, asr #28
    3820:	b6000000 	strlt	r0, [r0], -r0
    3824:	b4000007 	strlt	r0, [r0], #-7
    3828:	1e000007 	cdpne	0, 0, cr0, cr0, cr7, {0}
    382c:	0000457d 	andeq	r4, r0, sp, ror r5
    3830:	08000db8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sl, fp}
    3834:	0db80000 	ldceq	0, cr0, [r8]
    3838:	0dc00800 	stcleq	8, cr0, [r0]
    383c:	42010800 	andmi	r0, r1, #0, 16
    3840:	0852090e 	ldmdaeq	r2, {r1, r2, r3, r8, fp}^
    3844:	901f0000 	andsls	r0, pc, r0
    3848:	cf000045 	svcgt	0x00000045
    384c:	c9000007 	stmdbgt	r0, {r0, r1, r2}
    3850:	20000007 	andcs	r0, r0, r7
    3854:	0000459d 	muleq	r0, sp, r5
    3858:	000007fe 	strdeq	r0, [r0], -lr
    385c:	000007fc 	strdeq	r0, [r0], -ip
    3860:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    3864:	0dc40000 	stcleq	0, cr0, [r4]
    3868:	00010800 	andeq	r0, r1, r0, lsl #16
    386c:	08000dc4 	stmdaeq	r0, {r2, r6, r7, r8, sl, fp}
    3870:	08000dca 	stmdaeq	r0, {r1, r3, r6, r7, r8, sl, fp}
    3874:	090e4201 	stmdbeq	lr, {r0, r9, lr}
    3878:	00455c1f 	subeq	r5, r5, pc, lsl ip
    387c:	00081500 	andeq	r1, r8, r0, lsl #10
    3880:	00081100 	andeq	r1, r8, r0, lsl #2
    3884:	454f1f00 	strbmi	r1, [pc, #-3840]	; 298c <_Min_Heap_Size+0x218c>
    3888:	08370000 	ldmdaeq	r7!, {}	; <UNPREDICTABLE>
    388c:	08350000 	ldmdaeq	r5!, {}	; <UNPREDICTABLE>
    3890:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    3894:	4c000045 	stcmi	0, cr0, [r0], {69}	; 0x45
    3898:	4a000008 	bmi	38c0 <_Min_Heap_Size+0x30c0>
    389c:	00000008 	andeq	r0, r0, r8
    38a0:	0dd81c00 	ldcleq	12, cr1, [r8]
    38a4:	0de60800 	stcleq	8, cr0, [r6]
    38a8:	08b00800 	ldmeq	r0!, {fp}
    38ac:	ea220000 	b	8838b4 <_Min_Heap_Size+0x8830b4>
    38b0:	01000001 	tsteq	r0, r1
    38b4:	d20b0e48 	andle	r0, fp, #72, 28	; 0x480
    38b8:	02000000 	andeq	r0, r0, #0
    38bc:	18007491 	stmdane	r0, {r0, r4, r7, sl, ip, sp, lr}
    38c0:	08000dec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl, fp}
    38c4:	00001a8f 	andeq	r1, r0, pc, lsl #21
    38c8:	000008c5 	andeq	r0, r0, r5, asr #17
    38cc:	03500119 	cmpeq	r0, #1073741830	; 0x40000006
    38d0:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    38d4:	000e1e1a 	andeq	r1, lr, sl, lsl lr
    38d8:	001ba008 	andseq	sl, fp, r8
    38dc:	04110000 	ldreq	r0, [r1], #-0
    38e0:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    38e4:	0016e11b 	andseq	lr, r6, fp, lsl r1
    38e8:	0df10100 	ldfeqe	f0, [r1]
    38ec:	023a011a 	eorseq	r0, sl, #-2147483642	; 0x80000006
    38f0:	0d120000 	ldceq	0, cr0, [r2, #-0]
    38f4:	0d2c0800 	stceq	8, cr0, [ip, #-0]
    38f8:	085f0800 	ldmdaeq	pc, {fp}^	; <UNPREDICTABLE>
    38fc:	1b010000 	blne	43904 <_Min_Heap_Size+0x43104>
    3900:	16000009 	strne	r0, [r0], -r9
    3904:	000015c2 	andeq	r1, r0, r2, asr #11
    3908:	420df101 	andmi	pc, sp, #1073741824	; 0x40000000
    390c:	00000796 	muleq	r0, r6, r7
    3910:	00000883 	andeq	r0, r0, r3, lsl #17
    3914:	0000087f 	andeq	r0, r0, pc, ror r8
    3918:	000d2823 	andeq	r2, sp, r3, lsr #16
    391c:	001bf608 	andseq	pc, fp, r8, lsl #12
    3920:	50011900 	andpl	r1, r1, r0, lsl #18
    3924:	5001f303 	andpl	pc, r1, r3, lsl #6
    3928:	7e240000 	cdpvc	0, 2, cr0, cr4, cr0, {0}
    392c:	01000016 	tsteq	r0, r6, lsl r0
    3930:	011a0dc9 	tsteq	sl, r9, asr #27
    3934:	0000023a 	andeq	r0, r0, sl, lsr r2
    3938:	080008b8 	stmdaeq	r0, {r3, r4, r5, r7, fp}
    393c:	08000918 	stmdaeq	r0, {r3, r4, r8, fp}
    3940:	01007d02 	tsteq	r0, r2, lsl #26
    3944:	00000964 	andeq	r0, r0, r4, ror #18
    3948:	0015c216 	andseq	ip, r5, r6, lsl r2
    394c:	0dc90100 	stfeqe	f0, [r9]
    3950:	0007963f 	andeq	r9, r7, pc, lsr r6
    3954:	0008ae00 	andeq	sl, r8, r0, lsl #28
    3958:	0008a400 	andeq	sl, r8, r0, lsl #8
    395c:	6d741d00 	ldclvs	13, cr1, [r4, #-0]
    3960:	cb010070 	blgt	43b28 <_Min_Heap_Size+0x43328>
    3964:	0964130d 	stmdbeq	r4!, {r0, r2, r3, r8, r9, ip}^
    3968:	08f70000 	ldmeq	r7!, {}^	; <UNPREDICTABLE>
    396c:	08f30000 	ldmeq	r3!, {}^	; <UNPREDICTABLE>
    3970:	11000000 	mrsne	r0, (UNDEF: 0)
    3974:	0000c104 	andeq	ip, r0, r4, lsl #2
    3978:	139a1500 	orrsne	r1, sl, #0, 10
    397c:	af010000 	svcge	0x00010000
    3980:	00010d0d 	andeq	r0, r1, sp, lsl #26
    3984:	00000000 	andeq	r0, r0, r0
    3988:	16000000 	strne	r0, [r0], -r0
    398c:	01000009 	tsteq	r0, r9
    3990:	000009b9 			; <UNDEFINED> instruction: 0x000009b9
    3994:	00144a16 	andseq	r4, r4, r6, lsl sl
    3998:	0daf0100 	stfeqs	f0, [pc]	; 39a0 <_Min_Heap_Size+0x31a0>
    399c:	0006883c 	andeq	r8, r6, ip, lsr r8
    39a0:	00093a00 	andeq	r3, r9, r0, lsl #20
    39a4:	00093600 	andeq	r3, r9, r0, lsl #12
    39a8:	15c21700 	strbne	r1, [r2, #1792]	; 0x700
    39ac:	b1010000 	mrslt	r0, (UNDEF: 1)
    39b0:	0796170d 	ldreq	r1, [r6, sp, lsl #14]
    39b4:	095d0000 	ldmdbeq	sp, {}^	; <UNPREDICTABLE>
    39b8:	095b0000 	ldmdbeq	fp, {}^	; <UNPREDICTABLE>
    39bc:	001a0000 	andseq	r0, sl, r0
    39c0:	c9000000 	stmdbgt	r0, {}	; <UNPREDICTABLE>
    39c4:	0000001a 	andeq	r0, r0, sl, lsl r0
    39c8:	00178915 	andseq	r8, r7, r5, lsl r9
    39cc:	0d930100 	ldfeqs	f0, [r3]
    39d0:	0000010d 	andeq	r0, r0, sp, lsl #2
    39d4:	00000000 	andeq	r0, r0, r0
    39d8:	09700000 	ldmdbeq	r0!, {}^	; <UNPREDICTABLE>
    39dc:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    39e0:	1600000a 	strne	r0, [r0], -sl
    39e4:	0000144a 	andeq	r1, r0, sl, asr #8
    39e8:	3c0d9301 	stccc	3, cr9, [sp], {1}
    39ec:	00000688 	andeq	r0, r0, r8, lsl #13
    39f0:	00000994 	muleq	r0, r4, r9
    39f4:	00000990 	muleq	r0, r0, r9
    39f8:	0015c217 	andseq	ip, r5, r7, lsl r2
    39fc:	0d950100 	ldfeqs	f0, [r5]
    3a00:	00079617 	andeq	r9, r7, r7, lsl r6
    3a04:	0009b700 	andeq	fp, r9, r0, lsl #14
    3a08:	0009b500 	andeq	fp, r9, r0, lsl #10
    3a0c:	00001a00 	andeq	r1, r0, r0, lsl #20
    3a10:	1af40000 	bne	ffd03a18 <_estack+0xdfcfa078>
    3a14:	15000000 	strne	r0, [r0, #-0]
    3a18:	0000134d 	andeq	r1, r0, sp, asr #6
    3a1c:	0d0d6501 	cfstr32eq	mvfx6, [sp, #-4]
    3a20:	00000001 	andeq	r0, r0, r1
    3a24:	00000000 	andeq	r0, r0, r0
    3a28:	0009ca00 	andeq	ip, r9, r0, lsl #20
    3a2c:	0a570100 	beq	15c3e34 <_Min_Heap_Size+0x15c3634>
    3a30:	4a160000 	bmi	583a38 <_Min_Heap_Size+0x583238>
    3a34:	01000014 	tsteq	r0, r4, lsl r0
    3a38:	88380d65 	ldmdahi	r8!, {r0, r2, r5, r6, r8, sl, fp}
    3a3c:	ee000006 	cdp	0, 0, cr0, cr0, cr6, {0}
    3a40:	ea000009 	b	3a6c <_Min_Heap_Size+0x326c>
    3a44:	17000009 	strne	r0, [r0, -r9]
    3a48:	000015c2 	andeq	r1, r0, r2, asr #11
    3a4c:	170d6701 	strne	r6, [sp, -r1, lsl #14]
    3a50:	00000796 	muleq	r0, r6, r7
    3a54:	00000a11 	andeq	r0, r0, r1, lsl sl
    3a58:	00000a0f 	andeq	r0, r0, pc, lsl #20
    3a5c:	0000001a 	andeq	r0, r0, sl, lsl r0
    3a60:	001b1f00 	andseq	r1, fp, r0, lsl #30
    3a64:	32150000 	andscc	r0, r5, #0
    3a68:	01000014 	tsteq	r0, r4, lsl r0
    3a6c:	010d0d37 	tsteq	sp, r7, lsr sp
	...
    3a78:	00000a24 	andeq	r0, r0, r4, lsr #20
    3a7c:	000aa601 	andeq	sl, sl, r1, lsl #12
    3a80:	144a1600 	strbne	r1, [sl], #-1536	; 0xfffffa00
    3a84:	37010000 	strcc	r0, [r1, -r0]
    3a88:	0688380d 	streq	r3, [r8], sp, lsl #16
    3a8c:	0a480000 	beq	1203a94 <_Min_Heap_Size+0x1203294>
    3a90:	0a440000 	beq	1103a98 <_Min_Heap_Size+0x1103298>
    3a94:	c2170000 	andsgt	r0, r7, #0
    3a98:	01000015 	tsteq	r0, r5, lsl r0
    3a9c:	96170d39 			; <UNDEFINED> instruction: 0x96170d39
    3aa0:	6b000007 	blvs	3ac4 <_Min_Heap_Size+0x32c4>
    3aa4:	6900000a 	stmdbvs	r0, {r1, r3}
    3aa8:	1a00000a 	bne	3ad8 <_Min_Heap_Size+0x32d8>
    3aac:	00000000 	andeq	r0, r0, r0
    3ab0:	00001b1f 	andeq	r1, r0, pc, lsl fp
    3ab4:	168f1500 	strne	r1, [pc], r0, lsl #10
    3ab8:	1f010000 	svcne	0x00010000
    3abc:	30010d0d 	andcc	r0, r1, sp, lsl #26
    3ac0:	4008000d 	andmi	r0, r8, sp
    3ac4:	7e08000d 	cdpvc	0, 0, cr0, cr8, cr13, {0}
    3ac8:	0100000a 	tsteq	r0, sl
    3acc:	00000af5 	strdeq	r0, [r0], -r5
    3ad0:	00144a16 	andseq	r4, r4, r6, lsl sl
    3ad4:	0d1f0100 	ldfeqs	f0, [pc, #-0]	; 3adc <_Min_Heap_Size+0x32dc>
    3ad8:	00068835 	andeq	r8, r6, r5, lsr r8
    3adc:	000aa200 	andeq	sl, sl, r0, lsl #4
    3ae0:	000a9e00 	andeq	r9, sl, r0, lsl #28
    3ae4:	15c21700 	strbne	r1, [r2, #1792]	; 0x700
    3ae8:	21010000 	mrscs	r0, (UNDEF: 1)
    3aec:	0796170d 	ldreq	r1, [r6, sp, lsl #14]
    3af0:	0ac50000 	beq	ff143af8 <_estack+0xdf13a158>
    3af4:	0ac30000 	beq	ff0c3afc <_estack+0xdf0ba15c>
    3af8:	3e1a0000 	cdpcc	0, 1, cr0, cr10, cr0, {0}
    3afc:	4a08000d 	bmi	203b38 <_Min_Heap_Size+0x203338>
    3b00:	0000001b 	andeq	r0, r0, fp, lsl r0
    3b04:	00121925 	andseq	r1, r2, r5, lsr #18
    3b08:	0d070100 	stfeqs	f0, [r7, #-0]
    3b0c:	085c010d 	ldmdaeq	ip, {r0, r2, r3, r8}^
    3b10:	08b80800 	ldmeq	r8!, {fp}
    3b14:	7d020800 	stcvc	8, cr0, [r2, #-0]
    3b18:	0ce90100 	stfeqe	f0, [r9]
    3b1c:	c2160000 	andsgt	r0, r6, #0
    3b20:	01000015 	tsteq	r0, r5, lsl r0
    3b24:	96340d07 	ldrtls	r0, [r4], -r7, lsl #26
    3b28:	da000007 	ble	3b4c <_Min_Heap_Size+0x334c>
    3b2c:	d800000a 	stmdale	r0, {r1, r3}
    3b30:	1c00000a 	stcne	0, cr0, [r0], {10}
    3b34:	0800085c 	stmdaeq	r0, {r2, r3, r4, r6, fp}
    3b38:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
    3b3c:	00000bbc 			; <UNDEFINED> instruction: 0x00000bbc
    3b40:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    3b44:	0d0a0100 	stfeqs	f0, [sl, #-0]
    3b48:	0000c603 	andeq	ip, r0, r3, lsl #12
    3b4c:	000aef00 	andeq	lr, sl, r0, lsl #30
    3b50:	000aed00 	andeq	lr, sl, r0, lsl #26
    3b54:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
    3b58:	085e0000 	ldmdaeq	lr, {}^	; <UNPREDICTABLE>
    3b5c:	00000800 	andeq	r0, r0, r0, lsl #16
    3b60:	0800085e 	stmdaeq	r0, {r1, r2, r3, r4, r6, fp}
    3b64:	08000866 	stmdaeq	r0, {r1, r2, r5, r6, fp}
    3b68:	030d0a01 	movweq	r0, #55809	; 0xda01
    3b6c:	00000b7c 	andeq	r0, r0, ip, ror fp
    3b70:	0045901f 	subeq	r9, r5, pc, lsl r0
    3b74:	000b0800 	andeq	r0, fp, r0, lsl #16
    3b78:	000b0200 	andeq	r0, fp, r0, lsl #4
    3b7c:	459d2000 	ldrmi	r2, [sp]
    3b80:	0b370000 	bleq	dc3b88 <_Min_Heap_Size+0xdc3388>
    3b84:	0b350000 	bleq	d43b8c <_Min_Heap_Size+0xd4338c>
    3b88:	21000000 	mrscs	r0, (UNDEF: 0)
    3b8c:	0000453c 	andeq	r4, r0, ip, lsr r5
    3b90:	0800086a 	stmdaeq	r0, {r1, r3, r5, r6, fp}
    3b94:	086a0001 	stmdaeq	sl!, {r0}^
    3b98:	08700800 	ldmdaeq	r0!, {fp}^
    3b9c:	0a010800 	beq	45ba4 <_Min_Heap_Size+0x453a4>
    3ba0:	5c1f030d 	ldcpl	3, cr0, [pc], {13}
    3ba4:	4e000045 	cdpmi	0, 0, cr0, cr0, cr5, {2}
    3ba8:	4a00000b 	bmi	3bdc <_Min_Heap_Size+0x33dc>
    3bac:	1f00000b 	svcne	0x0000000b
    3bb0:	0000454f 	andeq	r4, r0, pc, asr #10
    3bb4:	00000b70 	andeq	r0, r0, r0, ror fp
    3bb8:	00000b6e 	andeq	r0, r0, lr, ror #22
    3bbc:	00456920 	subeq	r6, r5, r0, lsr #18
    3bc0:	000b8500 	andeq	r8, fp, r0, lsl #10
    3bc4:	000b8300 	andeq	r8, fp, r0, lsl #6
    3bc8:	1c000000 	stcne	0, cr0, [r0], {-0}
    3bcc:	08000874 	stmdaeq	r0, {r2, r4, r5, r6, fp}
    3bd0:	0800088c 	stmdaeq	r0, {r2, r3, r7, fp}
    3bd4:	00000c54 	andeq	r0, r0, r4, asr ip
    3bd8:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    3bdc:	0d0b0100 	stfeqs	f0, [fp, #-0]
    3be0:	0000c603 	andeq	ip, r0, r3, lsl #12
    3be4:	000b9a00 	andeq	r9, fp, r0, lsl #20
    3be8:	000b9800 	andeq	r9, fp, r0, lsl #16
    3bec:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
    3bf0:	08760000 	ldmdaeq	r6!, {}^	; <UNPREDICTABLE>
    3bf4:	00000800 	andeq	r0, r0, r0, lsl #16
    3bf8:	08000876 	stmdaeq	r0, {r1, r2, r4, r5, r6, fp}
    3bfc:	0800087e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, fp}
    3c00:	030d0b01 	movweq	r0, #56065	; 0xdb01
    3c04:	00000c14 	andeq	r0, r0, r4, lsl ip
    3c08:	0045901f 	subeq	r9, r5, pc, lsl r0
    3c0c:	000bb300 	andeq	fp, fp, r0, lsl #6
    3c10:	000bad00 	andeq	sl, fp, r0, lsl #26
    3c14:	459d2000 	ldrmi	r2, [sp]
    3c18:	0be20000 	bleq	ff883c20 <_estack+0xdf87a280>
    3c1c:	0be00000 	bleq	ff803c24 <_estack+0xdf7fa284>
    3c20:	21000000 	mrscs	r0, (UNDEF: 0)
    3c24:	0000453c 	andeq	r4, r0, ip, lsr r5
    3c28:	08000882 	stmdaeq	r0, {r1, r7, fp}
    3c2c:	08820001 	stmeq	r2, {r0}
    3c30:	08880800 	stmeq	r8, {fp}
    3c34:	0b010800 	bleq	45c3c <_Min_Heap_Size+0x4543c>
    3c38:	5c1f030d 	ldcpl	3, cr0, [pc], {13}
    3c3c:	f9000045 			; <UNDEFINED> instruction: 0xf9000045
    3c40:	f500000b 			; <UNDEFINED> instruction: 0xf500000b
    3c44:	1f00000b 	svcne	0x0000000b
    3c48:	0000454f 	andeq	r4, r0, pc, asr #10
    3c4c:	00000c1b 	andeq	r0, r0, fp, lsl ip
    3c50:	00000c19 	andeq	r0, r0, r9, lsl ip
    3c54:	00456920 	subeq	r6, r5, r0, lsr #18
    3c58:	000c3000 	andeq	r3, ip, r0
    3c5c:	000c2e00 	andeq	r2, ip, r0, lsl #28
    3c60:	26000000 	strcs	r0, [r0], -r0
    3c64:	0800089e 	stmdaeq	r0, {r1, r2, r3, r4, r7, fp}
    3c68:	080008b8 	stmdaeq	r0, {r3, r4, r5, r7, fp}
    3c6c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    3c70:	0d100100 	ldfeqs	f0, [r0, #-0]
    3c74:	0000c605 	andeq	ip, r0, r5, lsl #12
    3c78:	000c4500 	andeq	r4, ip, r0, lsl #10
    3c7c:	000c4300 	andeq	r4, ip, r0, lsl #6
    3c80:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
    3c84:	08a00000 	stmiaeq	r0!, {}	; <UNPREDICTABLE>
    3c88:	00000800 	andeq	r0, r0, r0, lsl #16
    3c8c:	080008a0 	stmdaeq	r0, {r5, r7, fp}
    3c90:	080008a8 	stmdaeq	r0, {r3, r5, r7, fp}
    3c94:	050d1001 	streq	r1, [sp, #-1]
    3c98:	00000ca8 	andeq	r0, r0, r8, lsr #25
    3c9c:	0045901f 	subeq	r9, r5, pc, lsl r0
    3ca0:	000c5e00 	andeq	r5, ip, r0, lsl #28
    3ca4:	000c5800 	andeq	r5, ip, r0, lsl #16
    3ca8:	459d2000 	ldrmi	r2, [sp]
    3cac:	0c8d0000 	stceq	0, cr0, [sp], {0}
    3cb0:	0c8b0000 	stceq	0, cr0, [fp], {0}
    3cb4:	21000000 	mrscs	r0, (UNDEF: 0)
    3cb8:	0000453c 	andeq	r4, r0, ip, lsr r5
    3cbc:	080008ac 	stmdaeq	r0, {r2, r3, r5, r7, fp}
    3cc0:	08ac0001 	stmiaeq	ip!, {r0}
    3cc4:	08b20800 	ldmeq	r2!, {fp}
    3cc8:	10010800 	andne	r0, r1, r0, lsl #16
    3ccc:	5c1f050d 	cfldr32pl	mvfx0, [pc], {13}
    3cd0:	a4000045 	strge	r0, [r0], #-69	; 0xffffffbb
    3cd4:	a000000c 	andge	r0, r0, ip
    3cd8:	1f00000c 	svcne	0x0000000c
    3cdc:	0000454f 	andeq	r4, r0, pc, asr #10
    3ce0:	00000cc6 	andeq	r0, r0, r6, asr #25
    3ce4:	00000cc4 	andeq	r0, r0, r4, asr #25
    3ce8:	00456920 	subeq	r6, r5, r0, lsr #18
    3cec:	000cdb00 	andeq	sp, ip, r0, lsl #22
    3cf0:	000cd900 	andeq	sp, ip, r0, lsl #18
    3cf4:	00000000 	andeq	r0, r0, r0
    3cf8:	00122c25 	andseq	r2, r2, r5, lsr #24
    3cfc:	0cf90100 	ldfeqe	f0, [r9]
    3d00:	0000010d 	andeq	r0, r0, sp, lsl #2
    3d04:	00000000 	andeq	r0, r0, r0
    3d08:	7d020000 	stcvc	0, cr0, [r2, #-0]
    3d0c:	0dad0100 	stfeqs	f0, [sp]
    3d10:	c2160000 	andsgt	r0, r6, #0
    3d14:	01000015 	tsteq	r0, r5, lsl r0
    3d18:	96340cf9 			; <UNDEFINED> instruction: 0x96340cf9
    3d1c:	f0000007 			; <UNDEFINED> instruction: 0xf0000007
    3d20:	ee00000c 	cdp	0, 0, cr0, cr0, cr12, {0}
    3d24:	2600000c 	strcs	r0, [r0], -ip
	...
    3d30:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    3d34:	0cfc0100 	ldfeqe	f0, [ip]
    3d38:	0000c603 	andeq	ip, r0, r3, lsl #12
    3d3c:	000d0500 	andeq	r0, sp, r0, lsl #10
    3d40:	000d0300 	andeq	r0, sp, r0, lsl #6
    3d44:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    3d58:	030cfc01 	movweq	pc, #52225	; 0xcc01	; <UNPREDICTABLE>
    3d5c:	00000d6c 	andeq	r0, r0, ip, ror #26
    3d60:	0045901f 	subeq	r9, r5, pc, lsl r0
    3d64:	000d1e00 	andeq	r1, sp, r0, lsl #28
    3d68:	000d1800 	andeq	r1, sp, r0, lsl #16
    3d6c:	459d2000 	ldrmi	r2, [sp]
    3d70:	0d4d0000 	stcleq	0, cr0, [sp, #-0]
    3d74:	0d4b0000 	stcleq	0, cr0, [fp, #-0]
    3d78:	21000000 	mrscs	r0, (UNDEF: 0)
    3d7c:	0000453c 	andeq	r4, r0, ip, lsr r5
    3d80:	00000000 	andeq	r0, r0, r0
    3d84:	00000001 	andeq	r0, r0, r1
    3d88:	00000000 	andeq	r0, r0, r0
    3d8c:	fc010000 	stc2	0, cr0, [r1], {-0}
    3d90:	5c1f030c 	ldcpl	3, cr0, [pc], {12}
    3d94:	64000045 	strvs	r0, [r0], #-69	; 0xffffffbb
    3d98:	6000000d 	andvs	r0, r0, sp
    3d9c:	1f00000d 	svcne	0x0000000d
    3da0:	0000454f 	andeq	r4, r0, pc, asr #10
    3da4:	00000d86 	andeq	r0, r0, r6, lsl #27
    3da8:	00000d84 	andeq	r0, r0, r4, lsl #27
    3dac:	00456920 	subeq	r6, r5, r0, lsr #18
    3db0:	000d9b00 	andeq	r9, sp, r0, lsl #22
    3db4:	000d9900 	andeq	r9, sp, r0, lsl #18
    3db8:	00000000 	andeq	r0, r0, r0
    3dbc:	15420127 	strbne	r0, [r2, #-295]	; 0xfffffed9
    3dc0:	c7010000 	strgt	r0, [r1, -r0]
    3dc4:	3a01130c 	bcc	489fc <_Min_Heap_Size+0x481fc>
    3dc8:	00000002 	andeq	r0, r0, r2
    3dcc:	00000000 	andeq	r0, r0, r0
    3dd0:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
    3dd4:	0100000d 	tsteq	r0, sp
    3dd8:	00001019 	andeq	r1, r0, r9, lsl r0
    3ddc:	0015c216 	andseq	ip, r5, r6, lsl r2
    3de0:	0cc70100 	stfeqe	f0, [r7], {0}
    3de4:	0007963e 	andeq	r9, r7, lr, lsr r6
    3de8:	000dec00 	andeq	lr, sp, r0, lsl #24
    3dec:	000de600 	andeq	lr, sp, r0, lsl #12
    3df0:	12131600 	andsne	r1, r3, #0, 12
    3df4:	c7010000 	strgt	r0, [r1, -r0]
    3df8:	06824e0c 	streq	r4, [r2], ip, lsl #28
    3dfc:	0e1e0000 	cdpeq	0, 1, cr0, cr14, cr0, {0}
    3e00:	0e180000 	cdpeq	0, 1, cr0, cr8, cr0, {0}
    3e04:	ac160000 	ldcge	0, cr0, [r6], {-0}
    3e08:	0100004c 	tsteq	r0, ip, asr #32
    3e0c:	b05e0cc7 	subslt	r0, lr, r7, asr #25
    3e10:	52000000 	andpl	r0, r0, #0
    3e14:	4a00000e 	bmi	3e54 <_Min_Heap_Size+0x3654>
    3e18:	1d00000e 	stcne	0, cr0, [r0, #-56]	; 0xffffffc8
    3e1c:	00706d74 	rsbseq	r6, r0, r4, ror sp
    3e20:	0d0cc901 	vstreq.16	s24, [ip, #-2]	; <UNPREDICTABLE>
    3e24:	00001019 	andeq	r1, r0, r9, lsl r0
    3e28:	00000e8d 	andeq	r0, r0, sp, lsl #29
    3e2c:	00000e8b 	andeq	r0, r0, fp, lsl #29
    3e30:	0000001c 	andeq	r0, r0, ip, lsl r0
    3e34:	00000000 	andeq	r0, r0, r0
    3e38:	000e3f00 	andeq	r3, lr, r0, lsl #30
    3e3c:	01ea2200 	mvneq	r2, r0, lsl #4
    3e40:	e2010000 	and	r0, r1, #0
    3e44:	00d2030c 	sbcseq	r0, r2, ip, lsl #6
    3e48:	91020000 	mrsls	r0, (UNDEF: 2)
    3e4c:	001c006c 	andseq	r0, ip, ip, rrx
    3e50:	00000000 	andeq	r0, r0, r0
    3e54:	d7000000 	strle	r0, [r0, -r0]
    3e58:	1d00000e 	stcne	0, cr0, [r0, #-56]	; 0xffffffc8
    3e5c:	006c6176 	rsbeq	r6, ip, r6, ror r1
    3e60:	050ce701 	streq	lr, [ip, #-1793]	; 0xfffff8ff
    3e64:	000000c6 	andeq	r0, r0, r6, asr #1
    3e68:	00000ea7 	andeq	r0, r0, r7, lsr #29
    3e6c:	00000ea5 	andeq	r0, r0, r5, lsr #29
    3e70:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    3e80:	01000000 	mrseq	r0, (UNDEF: 0)
    3e84:	97050ce7 	strls	r0, [r5, -r7, ror #25]
    3e88:	1f00000e 	svcne	0x0000000e
    3e8c:	00004590 	muleq	r0, r0, r5
    3e90:	00000ec0 	andeq	r0, r0, r0, asr #29
    3e94:	00000eba 			; <UNDEFINED> instruction: 0x00000eba
    3e98:	00459d20 	subeq	r9, r5, r0, lsr #26
    3e9c:	000eef00 	andeq	lr, lr, r0, lsl #30
    3ea0:	000eed00 	andeq	lr, lr, r0, lsl #26
    3ea4:	3c210000 	stccc	0, cr0, [r1], #-0
    3ea8:	00000045 	andeq	r0, r0, r5, asr #32
    3eac:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3eb8:	0ce70100 	stfeqe	f0, [r7]
    3ebc:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    3ec0:	0f060000 	svceq	0x00060000
    3ec4:	0f020000 	svceq	0x00020000
    3ec8:	4f1f0000 	svcmi	0x001f0000
    3ecc:	28000045 	stmdacs	r0, {r0, r2, r6}
    3ed0:	2600000f 	strcs	r0, [r0], -pc
    3ed4:	2000000f 	andcs	r0, r0, pc
    3ed8:	00004569 	andeq	r4, r0, r9, ror #10
    3edc:	00000f3d 	andeq	r0, r0, sp, lsr pc
    3ee0:	00000f3b 	andeq	r0, r0, fp, lsr pc
    3ee4:	001c0000 	andseq	r0, ip, r0
    3ee8:	00000000 	andeq	r0, r0, r0
    3eec:	6f000000 	svcvs	0x00000000
    3ef0:	1d00000f 	stcne	0, cr0, [r0, #-60]	; 0xffffffc4
    3ef4:	006c6176 	rsbeq	r6, ip, r6, ror r1
    3ef8:	030ceb01 	movweq	lr, #51969	; 0xcb01
    3efc:	000000c6 	andeq	r0, r0, r6, asr #1
    3f00:	00000f52 	andeq	r0, r0, r2, asr pc
    3f04:	00000f50 	andeq	r0, r0, r0, asr pc
    3f08:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    3f18:	01000000 	mrseq	r0, (UNDEF: 0)
    3f1c:	2f030ceb 	svccs	0x00030ceb
    3f20:	1f00000f 	svcne	0x0000000f
    3f24:	00004590 	muleq	r0, r0, r5
    3f28:	00000f6b 	andeq	r0, r0, fp, ror #30
    3f2c:	00000f65 	andeq	r0, r0, r5, ror #30
    3f30:	00459d20 	subeq	r9, r5, r0, lsr #26
    3f34:	000f9a00 	andeq	r9, pc, r0, lsl #20
    3f38:	000f9800 	andeq	r9, pc, r0, lsl #16
    3f3c:	3c210000 	stccc	0, cr0, [r1], #-0
    3f40:	00000045 	andeq	r0, r0, r5, asr #32
    3f44:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3f50:	0ceb0100 	stfeqe	f0, [fp]
    3f54:	455c1f03 	ldrbmi	r1, [ip, #-3843]	; 0xfffff0fd
    3f58:	0fb10000 	svceq	0x00b10000
    3f5c:	0fad0000 	svceq	0x00ad0000
    3f60:	4f1f0000 	svcmi	0x001f0000
    3f64:	d3000045 	movwle	r0, #69	; 0x45
    3f68:	d100000f 	tstle	r0, pc
    3f6c:	2000000f 	andcs	r0, r0, pc
    3f70:	00004569 	andeq	r4, r0, r9, ror #10
    3f74:	00000fe8 	andeq	r0, r0, r8, ror #31
    3f78:	00000fe6 	andeq	r0, r0, r6, ror #31
    3f7c:	001c0000 	andseq	r0, ip, r0
    3f80:	00000000 	andeq	r0, r0, r0
    3f84:	07000000 	streq	r0, [r0, -r0]
    3f88:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    3f8c:	006c6176 	rsbeq	r6, ip, r6, ror r1
    3f90:	030cef01 	movweq	lr, #52993	; 0xcf01
    3f94:	000000c6 	andeq	r0, r0, r6, asr #1
    3f98:	00000ffd 	strdeq	r0, [r0], -sp
    3f9c:	00000ffb 	strdeq	r0, [r0], -fp
    3fa0:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    3fb0:	01000000 	mrseq	r0, (UNDEF: 0)
    3fb4:	c7030cef 	strgt	r0, [r3, -pc, ror #25]
    3fb8:	1f00000f 	svcne	0x0000000f
    3fbc:	00004590 	muleq	r0, r0, r5
    3fc0:	00001016 	andeq	r1, r0, r6, lsl r0
    3fc4:	00001010 	andeq	r1, r0, r0, lsl r0
    3fc8:	00459d20 	subeq	r9, r5, r0, lsr #26
    3fcc:	00104500 	andseq	r4, r0, r0, lsl #10
    3fd0:	00104300 	andseq	r4, r0, r0, lsl #6
    3fd4:	3c210000 	stccc	0, cr0, [r1], #-0
    3fd8:	00000045 	andeq	r0, r0, r5, asr #32
    3fdc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3fe8:	0cef0100 	stfeqe	f0, [pc]	; 3ff0 <_Min_Heap_Size+0x37f0>
    3fec:	455c1f03 	ldrbmi	r1, [ip, #-3843]	; 0xfffff0fd
    3ff0:	105c0000 	subsne	r0, ip, r0
    3ff4:	10580000 	subsne	r0, r8, r0
    3ff8:	4f1f0000 	svcmi	0x001f0000
    3ffc:	7e000045 	cdpvc	0, 0, cr0, cr0, cr5, {2}
    4000:	7c000010 	stcvc	0, cr0, [r0], {16}
    4004:	20000010 	andcs	r0, r0, r0, lsl r0
    4008:	00004569 	andeq	r4, r0, r9, ror #10
    400c:	00001093 	muleq	r0, r3, r0
    4010:	00001091 	muleq	r0, r1, r0
    4014:	00230000 	eoreq	r0, r3, r0
    4018:	e3000000 	movw	r0, #0
    401c:	19000045 	stmdbne	r0, {r0, r2, r6}
    4020:	f3035201 	vhsub.u8	d5, d3, d1
    4024:	00005101 	andeq	r5, r0, r1, lsl #2
    4028:	00c60411 	sbceq	r0, r6, r1, lsl r4
    402c:	01280000 			; <UNDEFINED> instruction: 0x01280000
    4030:	0000131e 	andeq	r1, r0, lr, lsl r3
    4034:	130ca401 	movwne	sl, #50177	; 0xc401
    4038:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    4044:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4048:	00107801 	andseq	r7, r0, r1, lsl #16
    404c:	15c21600 	strbne	r1, [r2, #1536]	; 0x600
    4050:	a4010000 	strge	r0, [r1], #-0
    4054:	07963d0c 	ldreq	r3, [r6, ip, lsl #26]
    4058:	10aa0000 	adcne	r0, sl, r0
    405c:	10a60000 	adcne	r0, r6, r0
    4060:	13290000 			; <UNDEFINED> instruction: 0x13290000
    4064:	01000012 	tsteq	r0, r2, lsl r0
    4068:	824d0ca4 	subhi	r0, sp, #164, 24	; 0xa400
    406c:	01000006 	tsteq	r0, r6
    4070:	4cac1651 	stcmi	6, cr1, [ip], #324	; 0x144
    4074:	a4010000 	strge	r0, [r1], #-0
    4078:	00b05d0c 	adcseq	r5, r0, ip, lsl #26
    407c:	10d10000 	sbcsne	r0, r1, r0
    4080:	10cb0000 	sbcne	r0, fp, r0
    4084:	1b000000 	blne	408c <_Min_Heap_Size+0x388c>
    4088:	000014e3 	andeq	r1, r0, r3, ror #9
    408c:	1a0c7101 	bne	320498 <_Min_Heap_Size+0x31fc98>
    4090:	00023a01 	andeq	r3, r2, r1, lsl #20
    4094:	000a8c00 	andeq	r8, sl, r0, lsl #24
    4098:	000b1608 	andeq	r1, fp, r8, lsl #12
    409c:	0010fe08 	andseq	pc, r0, r8, lsl #28
    40a0:	11380100 	teqne	r8, r0, lsl #2
    40a4:	c2160000 	andsgt	r0, r6, #0
    40a8:	01000015 	tsteq	r0, r5, lsl r0
    40ac:	964a0c71 			; <UNDEFINED> instruction: 0x964a0c71
    40b0:	46000007 	strmi	r0, [r0], -r7
    40b4:	42000011 	andmi	r0, r0, #17
    40b8:	16000011 			; <UNDEFINED> instruction: 0x16000011
    40bc:	000012a4 	andeq	r1, r0, r4, lsr #5
    40c0:	5a0c7101 	bpl	3204cc <_Min_Heap_Size+0x31fccc>
    40c4:	000000c6 	andeq	r0, r0, r6, asr #1
    40c8:	00001168 	andeq	r1, r0, r8, ror #2
    40cc:	00001164 	andeq	r1, r0, r4, ror #2
    40d0:	00463f16 	subeq	r3, r6, r6, lsl pc
    40d4:	0c710100 	ldfeqe	f0, [r1], #-0
    40d8:	0002006b 	andeq	r0, r2, fp, rrx
    40dc:	00118a00 	andseq	r8, r1, r0, lsl #20
    40e0:	00118600 	andseq	r8, r1, r0, lsl #12
    40e4:	12d11600 	sbcsne	r1, r1, #0, 12
    40e8:	72010000 	andvc	r0, r1, #0
    40ec:	00c63f0c 	sbceq	r3, r6, ip, lsl #30
    40f0:	11af0000 			; <UNDEFINED> instruction: 0x11af0000
    40f4:	11ab0000 			; <UNDEFINED> instruction: 0x11ab0000
    40f8:	43160000 	tstmi	r6, #0
    40fc:	0100003e 	tsteq	r0, lr, lsr r0
    4100:	c6530c72 			; <UNDEFINED> instruction: 0xc6530c72
    4104:	d1000000 	mrsle	r0, (UNDEF: 0)
    4108:	cd000011 	stcgt	0, cr0, [r0, #-68]	; 0xffffffbc
    410c:	1c000011 	stcne	0, cr0, [r0], {17}
    4110:	08000ae6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, fp}
    4114:	08000af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp}
    4118:	0000111e 	andeq	r1, r0, lr, lsl r1
    411c:	0001ea22 	andeq	lr, r1, r2, lsr #20
    4120:	0c850100 	stfeqs	f0, [r5], {0}
    4124:	0000d20b 	andeq	sp, r0, fp, lsl #4
    4128:	5c910200 	lfmpl	f0, 4, [r1], {0}
    412c:	0abe1a00 	beq	fef8a934 <_estack+0xdef80f94>
    4130:	45f20800 	ldrbmi	r0, [r2, #2048]!	; 0x800
    4134:	fa230000 	blx	8c413c <_Min_Heap_Size+0x8c393c>
    4138:	f508000a 			; <UNDEFINED> instruction: 0xf508000a
    413c:	1900000a 	stmdbne	r0, {r1, r3}
    4140:	75025001 	strvc	r5, [r2, #-1]
    4144:	15000000 	strne	r0, [r0, #-0]
    4148:	00001458 	andeq	r1, r0, r8, asr r4
    414c:	0d0c4701 	stceq	7, cr4, [ip, #-4]
    4150:	00000001 	andeq	r0, r0, r1
    4154:	00000000 	andeq	r0, r0, r0
    4158:	0011f100 	andseq	pc, r1, r0, lsl #2
    415c:	11cb0100 	bicne	r0, fp, r0, lsl #2
    4160:	4a160000 	bmi	584168 <_Min_Heap_Size+0x583968>
    4164:	01000014 	tsteq	r0, r4, lsl r0
    4168:	882e0c47 	stmdahi	lr!, {r0, r1, r2, r6, sl, fp}
    416c:	19000006 	stmdbne	r0, {r1, r2}
    4170:	11000012 	tstne	r0, r2, lsl r0
    4174:	17000012 	smladne	r0, r2, r0, r0
    4178:	0000165e 	andeq	r1, r0, lr, asr r6
    417c:	0c0c4901 			; <UNDEFINED> instruction: 0x0c0c4901
    4180:	000000c6 	andeq	r0, r0, r6, asr #1
    4184:	0000125d 	andeq	r1, r0, sp, asr r2
    4188:	00001253 	andeq	r1, r0, r3, asr r2
    418c:	0015c217 	andseq	ip, r5, r7, lsl r2
    4190:	0c4a0100 	stfeqe	f0, [sl], {-0}
    4194:	00079617 	andeq	r9, r7, r7, lsl r6
    4198:	0012c100 	andseq	ip, r2, r0, lsl #2
    419c:	0012bf00 	andseq	fp, r2, r0, lsl #30
    41a0:	00001800 	andeq	r1, r0, r0, lsl #16
    41a4:	1b4a0000 	blne	12841ac <_Min_Heap_Size+0x12839ac>
    41a8:	11a60000 			; <UNDEFINED> instruction: 0x11a60000
    41ac:	01190000 	tsteq	r9, r0
    41b0:	00740250 	rsbseq	r0, r4, r0, asr r2
    41b4:	00001800 	andeq	r1, r0, r0, lsl #16
    41b8:	0ce90000 	stcleq	0, cr0, [r9]
    41bc:	11ba0000 			; <UNDEFINED> instruction: 0x11ba0000
    41c0:	01190000 	tsteq	r9, r0
    41c4:	00740250 	rsbseq	r0, r4, r0, asr r2
    41c8:	00002300 	andeq	r2, r0, r0, lsl #6
    41cc:	0af50000 	beq	ffd441d4 <_estack+0xdfd3a834>
    41d0:	01190000 	tsteq	r9, r0
    41d4:	00740250 	rsbseq	r0, r4, r0, asr r2
    41d8:	84150000 	ldrhi	r0, [r5], #-0
    41dc:	01000014 	tsteq	r0, r4, lsl r0
    41e0:	010d0c20 	tsteq	sp, r0, lsr #24
	...
    41ec:	000012d4 	ldrdeq	r1, [r0], -r4
    41f0:	00122301 	andseq	r2, r2, r1, lsl #6
    41f4:	144a1600 	strbne	r1, [sl], #-1536	; 0xfffffa00
    41f8:	20010000 	andcs	r0, r1, r0
    41fc:	0688330c 	streq	r3, [r8], ip, lsl #6
    4200:	12f80000 	rscsne	r0, r8, #0
    4204:	12f40000 	rscsne	r0, r4, #0
    4208:	c2170000 	andsgt	r0, r7, #0
    420c:	01000015 	tsteq	r0, r5, lsl r0
    4210:	96170c22 	ldrls	r0, [r7], -r2, lsr #24
    4214:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    4218:	19000013 	stmdbne	r0, {r0, r1, r4}
    421c:	1a000013 	bne	4270 <_Min_Heap_Size+0x3a70>
    4220:	00000000 	andeq	r0, r0, r0
    4224:	00001b75 	andeq	r1, r0, r5, ror fp
    4228:	0000001a 	andeq	r0, r0, sl, lsl r0
    422c:	001a8f00 	andseq	r8, sl, r0, lsl #30
    4230:	4a150000 	bmi	544238 <_Min_Heap_Size+0x543a38>
    4234:	01000012 	tsteq	r0, r2, lsl r0
    4238:	010d0be2 	smlatteq	sp, r2, fp, r0
	...
    4244:	0000133b 	andeq	r1, r0, fp, lsr r3
    4248:	0014db01 	andseq	sp, r4, r1, lsl #22
    424c:	144a1600 	strbne	r1, [sl], #-1536	; 0xfffffa00
    4250:	e2010000 	and	r0, r1, #0
    4254:	0688340b 	streq	r3, [r8], fp, lsl #8
    4258:	13610000 	cmnne	r1, #0
    425c:	135b0000 	cmpne	fp, #0
    4260:	c2170000 	andsgt	r0, r7, #0
    4264:	01000015 	tsteq	r0, r5, lsl r0
    4268:	96170be4 	ldrls	r0, [r7], -r4, ror #23
    426c:	91000007 	tstls	r0, r7
    4270:	8d000013 	stchi	0, cr0, [r0, #-76]	; 0xffffffb4
    4274:	1c000013 	stcne	0, cr0, [r0], {19}
	...
    4280:	00001300 	andeq	r1, r0, r0, lsl #6
    4284:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4288:	0bec0100 	bleq	ffb04690 <_estack+0xdfafacf0>
    428c:	0000c605 	andeq	ip, r0, r5, lsl #12
    4290:	0013b100 	andseq	fp, r3, r0, lsl #2
    4294:	0013af00 	andseq	sl, r3, r0, lsl #30
    4298:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    42ac:	050bec01 	streq	lr, [fp, #-3073]	; 0xfffff3ff
    42b0:	000012c0 	andeq	r1, r0, r0, asr #5
    42b4:	0045901f 	subeq	r9, r5, pc, lsl r0
    42b8:	0013ca00 	andseq	ip, r3, r0, lsl #20
    42bc:	0013c400 	andseq	ip, r3, r0, lsl #8
    42c0:	459d2000 	ldrmi	r2, [sp]
    42c4:	13f90000 	mvnsne	r0, #0
    42c8:	13f70000 	mvnsne	r0, #0
    42cc:	21000000 	mrscs	r0, (UNDEF: 0)
    42d0:	0000453c 	andeq	r4, r0, ip, lsr r5
    42d4:	00000000 	andeq	r0, r0, r0
    42d8:	00000001 	andeq	r0, r0, r1
    42dc:	00000000 	andeq	r0, r0, r0
    42e0:	ec010000 	stc	0, cr0, [r1], {-0}
    42e4:	5c1f050b 	cfldr32pl	mvfx0, [pc], {11}
    42e8:	10000045 	andne	r0, r0, r5, asr #32
    42ec:	0c000014 	stceq	0, cr0, [r0], {20}
    42f0:	1f000014 	svcne	0x00000014
    42f4:	0000454f 	andeq	r4, r0, pc, asr #10
    42f8:	00001432 	andeq	r1, r0, r2, lsr r4
    42fc:	00001430 	andeq	r1, r0, r0, lsr r4
    4300:	00456920 	subeq	r6, r5, r0, lsr #18
    4304:	00144700 	andseq	r4, r4, r0, lsl #14
    4308:	00144500 	andseq	r4, r4, r0, lsl #10
    430c:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    4318:	00001398 	muleq	r0, r8, r3
    431c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4320:	0bed0100 	bleq	ffb44728 <_estack+0xdfb3ad88>
    4324:	0000c605 	andeq	ip, r0, r5, lsl #12
    4328:	00145c00 	andseq	r5, r4, r0, lsl #24
    432c:	00145a00 	andseq	r5, r4, r0, lsl #20
    4330:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4344:	050bed01 	streq	lr, [fp, #-3329]	; 0xfffff2ff
    4348:	00001358 	andeq	r1, r0, r8, asr r3
    434c:	0045901f 	subeq	r9, r5, pc, lsl r0
    4350:	00147500 	andseq	r7, r4, r0, lsl #10
    4354:	00146f00 	andseq	r6, r4, r0, lsl #30
    4358:	459d2000 	ldrmi	r2, [sp]
    435c:	14a40000 	strtne	r0, [r4], #0
    4360:	14a20000 	strtne	r0, [r2], #0
    4364:	21000000 	mrscs	r0, (UNDEF: 0)
    4368:	0000453c 	andeq	r4, r0, ip, lsr r5
    436c:	00000000 	andeq	r0, r0, r0
    4370:	00000001 	andeq	r0, r0, r1
    4374:	00000000 	andeq	r0, r0, r0
    4378:	ed010000 	stc	0, cr0, [r1, #-0]
    437c:	5c1f050b 	cfldr32pl	mvfx0, [pc], {11}
    4380:	bb000045 	bllt	449c <_Min_Heap_Size+0x3c9c>
    4384:	b7000014 	smladlt	r0, r4, r0, r0
    4388:	1f000014 	svcne	0x00000014
    438c:	0000454f 	andeq	r4, r0, pc, asr #10
    4390:	000014dd 	ldrdeq	r1, [r0], -sp
    4394:	000014db 	ldrdeq	r1, [r0], -fp
    4398:	00456920 	subeq	r6, r5, r0, lsr #18
    439c:	0014f200 	andseq	pc, r4, r0, lsl #4
    43a0:	0014f000 	andseq	pc, r4, r0
    43a4:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    43b0:	00001430 	andeq	r1, r0, r0, lsr r4
    43b4:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    43b8:	0bf10100 	bleq	ffc447c0 <_estack+0xdfc3ae20>
    43bc:	0000c605 	andeq	ip, r0, r5, lsl #12
    43c0:	00150700 	andseq	r0, r5, r0, lsl #14
    43c4:	00150500 	andseq	r0, r5, r0, lsl #10
    43c8:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    43dc:	050bf101 	streq	pc, [fp, #-257]	; 0xfffffeff
    43e0:	000013f0 	strdeq	r1, [r0], -r0
    43e4:	0045901f 	subeq	r9, r5, pc, lsl r0
    43e8:	00152000 	andseq	r2, r5, r0
    43ec:	00151a00 	andseq	r1, r5, r0, lsl #20
    43f0:	459d2000 	ldrmi	r2, [sp]
    43f4:	154f0000 	strbne	r0, [pc, #-0]	; 43fc <_Min_Heap_Size+0x3bfc>
    43f8:	154d0000 	strbne	r0, [sp, #-0]
    43fc:	21000000 	mrscs	r0, (UNDEF: 0)
    4400:	0000453c 	andeq	r4, r0, ip, lsr r5
    4404:	00000000 	andeq	r0, r0, r0
    4408:	00000001 	andeq	r0, r0, r1
    440c:	00000000 	andeq	r0, r0, r0
    4410:	f1010000 	setend	le
    4414:	5c1f050b 	cfldr32pl	mvfx0, [pc], {11}
    4418:	66000045 	strvs	r0, [r0], -r5, asr #32
    441c:	62000015 	andvs	r0, r0, #21
    4420:	1f000015 	svcne	0x00000015
    4424:	0000454f 	andeq	r4, r0, pc, asr #10
    4428:	00001588 	andeq	r1, r0, r8, lsl #11
    442c:	00001586 	andeq	r1, r0, r6, lsl #11
    4430:	00456920 	subeq	r6, r5, r0, lsr #18
    4434:	00159d00 	andseq	r9, r5, r0, lsl #26
    4438:	00159b00 	andseq	r9, r5, r0, lsl #22
    443c:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
    4448:	000014c8 	andeq	r1, r0, r8, asr #9
    444c:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4450:	0bf90100 	bleq	ffe44858 <_estack+0xdfe3aeb8>
    4454:	0000c607 	andeq	ip, r0, r7, lsl #12
    4458:	0015b200 	andseq	fp, r5, r0, lsl #4
    445c:	0015b000 	andseq	fp, r5, r0
    4460:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4474:	070bf901 	streq	pc, [fp, -r1, lsl #18]
    4478:	00001488 	andeq	r1, r0, r8, lsl #9
    447c:	0045901f 	subeq	r9, r5, pc, lsl r0
    4480:	0015cb00 	andseq	ip, r5, r0, lsl #22
    4484:	0015c500 	andseq	ip, r5, r0, lsl #10
    4488:	459d2000 	ldrmi	r2, [sp]
    448c:	15fa0000 	ldrbne	r0, [sl, #0]!
    4490:	15f80000 	ldrbne	r0, [r8, #0]!
    4494:	21000000 	mrscs	r0, (UNDEF: 0)
    4498:	0000453c 	andeq	r4, r0, ip, lsr r5
    449c:	00000000 	andeq	r0, r0, r0
    44a0:	00000001 	andeq	r0, r0, r1
    44a4:	00000000 	andeq	r0, r0, r0
    44a8:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    44ac:	5c1f070b 	ldcpl	7, cr0, [pc], {11}
    44b0:	11000045 	tstne	r0, r5, asr #32
    44b4:	0d000016 	stceq	0, cr0, [r0, #-88]	; 0xffffffa8
    44b8:	1f000016 	svcne	0x00000016
    44bc:	0000454f 	andeq	r4, r0, pc, asr #10
    44c0:	00001633 	andeq	r1, r0, r3, lsr r6
    44c4:	00001631 	andeq	r1, r0, r1, lsr r6
    44c8:	00456920 	subeq	r6, r5, r0, lsr #18
    44cc:	00164800 	andseq	r4, r6, r0, lsl #16
    44d0:	00164600 	andseq	r4, r6, r0, lsl #12
    44d4:	1a000000 	bne	44dc <_Min_Heap_Size+0x3cdc>
    44d8:	00000000 	andeq	r0, r0, r0
    44dc:	00001ba0 	andeq	r1, r0, r0, lsr #23
    44e0:	0000001a 	andeq	r0, r0, sl, lsl r0
    44e4:	001a8f00 	andseq	r8, sl, r0, lsl #30
    44e8:	5e150000 	cdppl	0, 1, cr0, cr5, cr0, {0}
    44ec:	01000012 	tsteq	r0, r2, lsl r0
    44f0:	010d0bcf 	smlabteq	sp, pc, fp, r0	; <UNPREDICTABLE>
	...
    44fc:	0000165b 	andeq	r1, r0, fp, asr r6
    4500:	00152a01 	andseq	r2, r5, r1, lsl #20
    4504:	144a1600 	strbne	r1, [sl], #-1536	; 0xfffffa00
    4508:	cf010000 	svcgt	0x00010000
    450c:	0688330b 	streq	r3, [r8], fp, lsl #6
    4510:	167f0000 	ldrbtne	r0, [pc], -r0
    4514:	167b0000 	ldrbtne	r0, [fp], -r0
    4518:	c2170000 	andsgt	r0, r7, #0
    451c:	01000015 	tsteq	r0, r5, lsl r0
    4520:	96170bd1 			; <UNDEFINED> instruction: 0x96170bd1
    4524:	a4000007 	strge	r0, [r0], #-7
    4528:	a0000016 	andge	r0, r0, r6, lsl r0
    452c:	1a000016 	bne	458c <_Min_Heap_Size+0x3d8c>
    4530:	00000000 	andeq	r0, r0, r0
    4534:	00001bcb 	andeq	r1, r0, fp, asr #23
    4538:	16af1500 	strtne	r1, [pc], r0, lsl #10
    453c:	ac010000 	stcge	0, cr0, [r1], {-0}
    4540:	00010d0b 	andeq	r0, r1, fp, lsl #26
    4544:	00000000 	andeq	r0, r0, r0
    4548:	c3000000 	movwgt	r0, #0
    454c:	01000016 	tsteq	r0, r6, lsl r0
    4550:	000016a9 	andeq	r1, r0, r9, lsr #13
    4554:	00144a16 	andseq	r4, r4, r6, lsl sl
    4558:	0bac0100 	bleq	feb04960 <_estack+0xdeafafc0>
    455c:	00068835 	andeq	r8, r6, r5, lsr r8
    4560:	0016e900 	andseq	lr, r6, r0, lsl #18
    4564:	0016e300 	andseq	lr, r6, r0, lsl #6
    4568:	15c21700 	strbne	r1, [r2, #1792]	; 0x700
    456c:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    4570:	0796170b 	ldreq	r1, [r6, fp, lsl #14]
    4574:	17190000 	ldrne	r0, [r9, -r0]
    4578:	17150000 	ldrne	r0, [r5, -r0]
    457c:	001c0000 	andseq	r0, ip, r0
    4580:	00000000 	andeq	r0, r0, r0
    4584:	07000000 	streq	r0, [r0, -r0]
    4588:	1d000016 	stcne	0, cr0, [r0, #-88]	; 0xffffffa8
    458c:	006c6176 	rsbeq	r6, ip, r6, ror r1
    4590:	050bb601 	streq	fp, [fp, #-1537]	; 0xfffff9ff
    4594:	000000c6 	andeq	r0, r0, r6, asr #1
    4598:	00001739 	andeq	r1, r0, r9, lsr r7
    459c:	00001737 	andeq	r1, r0, r7, lsr r7
    45a0:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    45b0:	01000000 	mrseq	r0, (UNDEF: 0)
    45b4:	c7050bb6 			; <UNDEFINED> instruction: 0xc7050bb6
    45b8:	1f000015 	svcne	0x00000015
    45bc:	00004590 	muleq	r0, r0, r5
    45c0:	00001752 	andeq	r1, r0, r2, asr r7
    45c4:	0000174c 	andeq	r1, r0, ip, asr #14
    45c8:	00459d20 	subeq	r9, r5, r0, lsr #26
    45cc:	00178100 	andseq	r8, r7, r0, lsl #2
    45d0:	00177f00 	andseq	r7, r7, r0, lsl #30
    45d4:	3c210000 	stccc	0, cr0, [r1], #-0
    45d8:	00000045 	andeq	r0, r0, r5, asr #32
    45dc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    45e8:	0bb60100 	bleq	fed849f0 <_estack+0xded7b050>
    45ec:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    45f0:	17980000 	ldrne	r0, [r8, r0]
    45f4:	17940000 	ldrne	r0, [r4, r0]
    45f8:	4f1f0000 	svcmi	0x001f0000
    45fc:	ba000045 	blt	4718 <_Min_Heap_Size+0x3f18>
    4600:	b8000017 	stmdalt	r0, {r0, r1, r2, r4}
    4604:	20000017 	andcs	r0, r0, r7, lsl r0
    4608:	00004569 	andeq	r4, r0, r9, ror #10
    460c:	000017cf 	andeq	r1, r0, pc, asr #15
    4610:	000017cd 	andeq	r1, r0, sp, asr #15
    4614:	001c0000 	andseq	r0, ip, r0
    4618:	00000000 	andeq	r0, r0, r0
    461c:	9f000000 	svcls	0x00000000
    4620:	1d000016 	stcne	0, cr0, [r0, #-88]	; 0xffffffa8
    4624:	006c6176 	rsbeq	r6, ip, r6, ror r1
    4628:	050bb901 	streq	fp, [fp, #-2305]	; 0xfffff6ff
    462c:	000000c6 	andeq	r0, r0, r6, asr #1
    4630:	000017e4 	andeq	r1, r0, r4, ror #15
    4634:	000017e2 	andeq	r1, r0, r2, ror #15
    4638:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    4648:	01000000 	mrseq	r0, (UNDEF: 0)
    464c:	5f050bb9 	svcpl	0x00050bb9
    4650:	1f000016 	svcne	0x00000016
    4654:	00004590 	muleq	r0, r0, r5
    4658:	000017fd 	strdeq	r1, [r0], -sp
    465c:	000017f7 	strdeq	r1, [r0], -r7
    4660:	00459d20 	subeq	r9, r5, r0, lsr #26
    4664:	00182c00 	andseq	r2, r8, r0, lsl #24
    4668:	00182a00 	andseq	r2, r8, r0, lsl #20
    466c:	3c210000 	stccc	0, cr0, [r1], #-0
    4670:	00000045 	andeq	r0, r0, r5, asr #32
    4674:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4680:	0bb90100 	bleq	fee44a88 <_estack+0xdee3b0e8>
    4684:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    4688:	18430000 	stmdane	r3, {}^	; <UNPREDICTABLE>
    468c:	183f0000 	ldmdane	pc!, {}	; <UNPREDICTABLE>
    4690:	4f1f0000 	svcmi	0x001f0000
    4694:	65000045 	strvs	r0, [r0, #-69]	; 0xffffffbb
    4698:	63000018 	movwvs	r0, #24
    469c:	20000018 	andcs	r0, r0, r8, lsl r0
    46a0:	00004569 	andeq	r4, r0, r9, ror #10
    46a4:	0000187a 	andeq	r1, r0, sl, ror r8
    46a8:	00001878 	andeq	r1, r0, r8, ror r8
    46ac:	001a0000 	andseq	r0, sl, r0
    46b0:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    46b4:	0000001b 	andeq	r0, r0, fp, lsl r0
    46b8:	12010128 	andne	r0, r1, #40, 2
    46bc:	7f010000 	svcvc	0x00010000
    46c0:	c6010a0b 	strgt	r0, [r1], -fp, lsl #20
	...
    46cc:	02000000 	andeq	r0, r0, #0
    46d0:	de01007d 	mcrle	0, 0, r0, cr1, cr13, {3}
    46d4:	16000016 			; <UNDEFINED> instruction: 0x16000016
    46d8:	000015c2 	andeq	r1, r0, r2, asr #11
    46dc:	360b7f01 	strcc	r7, [fp], -r1, lsl #30
    46e0:	000016de 	ldrdeq	r1, [r0], -lr
    46e4:	00001891 	muleq	r0, r1, r8
    46e8:	0000188d 	andeq	r1, r0, sp, lsl #17
    46ec:	9a041100 	bls	108af4 <_Min_Heap_Size+0x1082f4>
    46f0:	28000006 	stmdacs	r0, {r1, r2}
    46f4:	00137f01 	andseq	r7, r3, r1, lsl #30
    46f8:	0b700100 	bleq	1c04b00 <_Min_Heap_Size+0x1c04300>
    46fc:	05450117 	strbeq	r0, [r5, #-279]	; 0xfffffee9
	...
    4708:	7d020000 	stcvc	0, cr0, [r2, #-0]
    470c:	17430100 	strbne	r0, [r3, -r0, lsl #2]
    4710:	c2160000 	andsgt	r0, r6, #0
    4714:	01000015 	tsteq	r0, r5, lsl r0
    4718:	de430b70 	vmovle.8	d3[3], r0
    471c:	b6000016 			; <UNDEFINED> instruction: 0xb6000016
    4720:	b2000018 	andlt	r0, r0, #24
    4724:	17000018 	smladne	r0, r8, r0, r0
    4728:	00001600 	andeq	r1, r0, r0, lsl #12
    472c:	0c0b7201 	sfmeq	f7, 4, [fp], {1}
    4730:	000000c6 	andeq	r0, r0, r6, asr #1
    4734:	000018db 	ldrdeq	r1, [r0], -fp
    4738:	000018d7 	ldrdeq	r1, [r0], -r7
    473c:	00160617 	andseq	r0, r6, r7, lsl r6
    4740:	0b720100 	bleq	1c84b48 <_Min_Heap_Size+0x1c84348>
    4744:	0000c61b 	andeq	ip, r0, fp, lsl r6
    4748:	0018fe00 	andseq	pc, r8, r0, lsl #28
    474c:	0018fa00 	andseq	pc, r8, r0, lsl #20
    4750:	01280000 			; <UNDEFINED> instruction: 0x01280000
    4754:	000015dd 	ldrdeq	r1, [r0], -sp
    4758:	130b3701 	movwne	r3, #46849	; 0xb701
    475c:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    4768:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    476c:	00178d01 	andseq	r8, r7, r1, lsl #26
    4770:	15c21600 	strbne	r1, [r2, #1536]	; 0x600
    4774:	37010000 	strcc	r0, [r1, -r0]
    4778:	0796450b 	ldreq	r4, [r6, fp, lsl #10]
    477c:	19250000 	stmdbne	r5!, {}	; <UNPREDICTABLE>
    4780:	191d0000 	ldmdbne	sp, {}	; <UNPREDICTABLE>
    4784:	ea170000 	b	5c478c <_Min_Heap_Size+0x5c3f8c>
    4788:	01000001 	tsteq	r0, r1
    478c:	c60c0b39 			; <UNDEFINED> instruction: 0xc60c0b39
    4790:	67000000 	strvs	r0, [r0, -r0]
    4794:	5f000019 	svcpl	0x00000019
    4798:	00000019 	andeq	r0, r0, r9, lsl r0
    479c:	11a80128 			; <UNDEFINED> instruction: 0x11a80128
    47a0:	14010000 	strne	r0, [r1], #-0
    47a4:	3a01130b 	bcc	493d8 <_Min_Heap_Size+0x48bd8>
    47a8:	00000002 	andeq	r0, r0, r2
    47ac:	00000000 	andeq	r0, r0, r0
    47b0:	02000000 	andeq	r0, r0, #0
    47b4:	d701007d 	smlsdxle	r1, sp, r0, r0
    47b8:	16000017 			; <UNDEFINED> instruction: 0x16000017
    47bc:	000015c2 	andeq	r1, r0, r2, asr #11
    47c0:	480b1401 	stmdami	fp, {r0, sl, ip}
    47c4:	00000796 	muleq	r0, r6, r7
    47c8:	000019a6 	andeq	r1, r0, r6, lsr #19
    47cc:	0000199e 	muleq	r0, lr, r9
    47d0:	0001ea17 	andeq	lr, r1, r7, lsl sl
    47d4:	0b160100 	bleq	584bdc <_Min_Heap_Size+0x5843dc>
    47d8:	0000c60c 	andeq	ip, r0, ip, lsl #12
    47dc:	0019e800 	andseq	lr, r9, r0, lsl #16
    47e0:	0019e000 	andseq	lr, r9, r0
    47e4:	01270000 			; <UNDEFINED> instruction: 0x01270000
    47e8:	000015a2 	andeq	r1, r0, r2, lsr #11
    47ec:	130af801 	movwne	pc, #43009	; 0xa801	; <UNPREDICTABLE>
    47f0:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    47fc:	001a1f00 	andseq	r1, sl, r0, lsl #30
    4800:	18bf0100 	ldmne	pc!, {r8}	; <UNPREDICTABLE>
    4804:	c2160000 	andsgt	r0, r6, #0
    4808:	01000015 	tsteq	r0, r5, lsl r0
    480c:	96470af8 			; <UNDEFINED> instruction: 0x96470af8
    4810:	43000007 	movwmi	r0, #7
    4814:	3f00001a 	svccc	0x0000001a
    4818:	1c00001a 	stcne	0, cr0, [r0], {26}
	...
    4824:	000018a4 	andeq	r1, r0, r4, lsr #17
    4828:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    482c:	0b030100 	bleq	c4c34 <_Min_Heap_Size+0xc4434>
    4830:	0000c603 	andeq	ip, r0, r3, lsl #12
    4834:	001a6300 	andseq	r6, sl, r0, lsl #6
    4838:	001a6100 	andseq	r6, sl, r0, lsl #2
    483c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4850:	030b0301 	movweq	r0, #45825	; 0xb301
    4854:	00001864 	andeq	r1, r0, r4, ror #16
    4858:	0045901f 	subeq	r9, r5, pc, lsl r0
    485c:	001a7c00 	andseq	r7, sl, r0, lsl #24
    4860:	001a7600 	andseq	r7, sl, r0, lsl #12
    4864:	459d2000 	ldrmi	r2, [sp]
    4868:	1aab0000 	bne	feac4870 <_estack+0xdeabaed0>
    486c:	1aa90000 	bne	fea44874 <_estack+0xdea3aed4>
    4870:	21000000 	mrscs	r0, (UNDEF: 0)
    4874:	0000453c 	andeq	r4, r0, ip, lsr r5
    4878:	00000000 	andeq	r0, r0, r0
    487c:	00000001 	andeq	r0, r0, r1
    4880:	00000000 	andeq	r0, r0, r0
    4884:	03010000 	movweq	r0, #4096	; 0x1000
    4888:	5c1f030b 	ldcpl	3, cr0, [pc], {11}
    488c:	c2000045 	andgt	r0, r0, #69	; 0x45
    4890:	be00001a 	mcrlt	0, 0, r0, cr0, cr10, {0}
    4894:	1f00001a 	svcne	0x0000001a
    4898:	0000454f 	andeq	r4, r0, pc, asr #10
    489c:	00001ae4 	andeq	r1, r0, r4, ror #21
    48a0:	00001ae2 	andeq	r1, r0, r2, ror #21
    48a4:	00456920 	subeq	r6, r5, r0, lsr #18
    48a8:	001af900 	andseq	pc, sl, r0, lsl #18
    48ac:	001af700 	andseq	pc, sl, r0, lsl #14
    48b0:	23000000 	movwcs	r0, #0
    48b4:	00000000 	andeq	r0, r0, r0
    48b8:	000045ab 	andeq	r4, r0, fp, lsr #11
    48bc:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    48c0:	00452003 	subeq	r2, r5, r3
    48c4:	51011908 	tstpl	r1, r8, lsl #18
    48c8:	0afb0a03 	beq	ffec70dc <_estack+0xdfebd73c>
    48cc:	01270000 			; <UNDEFINED> instruction: 0x01270000
    48d0:	00001768 	andeq	r1, r0, r8, ror #14
    48d4:	130adc01 	movwne	sp, #44033	; 0xac01
    48d8:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    48e4:	001b0c00 	andseq	r0, fp, r0, lsl #24
    48e8:	19a70100 	stmibne	r7!, {r8}
    48ec:	c2160000 	andsgt	r0, r6, #0
    48f0:	01000015 	tsteq	r0, r5, lsl r0
    48f4:	96480adc 			; <UNDEFINED> instruction: 0x96480adc
    48f8:	30000007 	andcc	r0, r0, r7
    48fc:	2c00001b 	stccs	0, cr0, [r0], {27}
    4900:	1c00001b 	stcne	0, cr0, [r0], {27}
	...
    490c:	0000198c 	andeq	r1, r0, ip, lsl #19
    4910:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    4914:	0ae70100 	beq	ff9c4d1c <_estack+0xdf9bb37c>
    4918:	0000c603 	andeq	ip, r0, r3, lsl #12
    491c:	001b5000 	andseq	r5, fp, r0
    4920:	001b4e00 	andseq	r4, fp, r0, lsl #28
    4924:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4938:	030ae701 	movweq	lr, #42753	; 0xa701
    493c:	0000194c 	andeq	r1, r0, ip, asr #18
    4940:	0045901f 	subeq	r9, r5, pc, lsl r0
    4944:	001b6900 	andseq	r6, fp, r0, lsl #18
    4948:	001b6300 	andseq	r6, fp, r0, lsl #6
    494c:	459d2000 	ldrmi	r2, [sp]
    4950:	1b980000 	blne	fe604958 <_estack+0xde5fafb8>
    4954:	1b960000 	blne	fe58495c <_estack+0xde57afbc>
    4958:	21000000 	mrscs	r0, (UNDEF: 0)
    495c:	0000453c 	andeq	r4, r0, ip, lsr r5
    4960:	00000000 	andeq	r0, r0, r0
    4964:	00000001 	andeq	r0, r0, r1
    4968:	00000000 	andeq	r0, r0, r0
    496c:	e7010000 	str	r0, [r1, -r0]
    4970:	5c1f030a 	ldcpl	3, cr0, [pc], {10}
    4974:	af000045 	svcge	0x00000045
    4978:	ab00001b 	blge	49ec <_Min_Heap_Size+0x41ec>
    497c:	1f00001b 	svcne	0x0000001b
    4980:	0000454f 	andeq	r4, r0, pc, asr #10
    4984:	00001bd1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    4988:	00001bcf 	andeq	r1, r0, pc, asr #23
    498c:	00456920 	subeq	r6, r5, r0, lsr #18
    4990:	001be600 	andseq	lr, fp, r0, lsl #12
    4994:	001be400 	andseq	lr, fp, r0, lsl #8
    4998:	23000000 	movwcs	r0, #0
    499c:	00000000 	andeq	r0, r0, r0
    49a0:	000045ab 	andeq	r4, r0, fp, lsr #11
    49a4:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    49a8:	00452003 	subeq	r2, r5, r3
    49ac:	51011908 	tstpl	r1, r8, lsl #18
    49b0:	0adf0a03 	beq	ff7c71c4 <_estack+0xdf7bd824>
    49b4:	01270000 			; <UNDEFINED> instruction: 0x01270000
    49b8:	0000117a 	andeq	r1, r0, sl, ror r1
    49bc:	130ac101 	movwne	ip, #41217	; 0xa101
    49c0:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    49cc:	001bf900 	andseq	pc, fp, r0, lsl #18
    49d0:	1a8f0100 	bne	fe3c4dd8 <_estack+0xde3bb438>
    49d4:	c2160000 	andsgt	r0, r6, #0
    49d8:	01000015 	tsteq	r0, r5, lsl r0
    49dc:	96390ac1 	ldrtls	r0, [r9], -r1, asr #21
    49e0:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    49e4:	1900001c 	stmdbne	r0, {r2, r3, r4}
    49e8:	1c00001c 	stcne	0, cr0, [r0], {28}
	...
    49f4:	00001a74 	andeq	r1, r0, r4, ror sl
    49f8:	6c61761d 	stclvs	6, cr7, [r1], #-116	; 0xffffff8c
    49fc:	0acc0100 	beq	ff304e04 <_estack+0xdf2fb464>
    4a00:	0000c603 	andeq	ip, r0, r3, lsl #12
    4a04:	001c3d00 	andseq	r3, ip, r0, lsl #26
    4a08:	001c3b00 	andseq	r3, ip, r0, lsl #22
    4a0c:	457d1e00 	ldrbmi	r1, [sp, #-3584]!	; 0xfffff200
	...
    4a20:	030acc01 	movweq	ip, #44033	; 0xac01
    4a24:	00001a34 	andeq	r1, r0, r4, lsr sl
    4a28:	0045901f 	subeq	r9, r5, pc, lsl r0
    4a2c:	001c5600 	andseq	r5, ip, r0, lsl #12
    4a30:	001c5000 	andseq	r5, ip, r0
    4a34:	459d2000 	ldrmi	r2, [sp]
    4a38:	1c850000 	stcne	0, cr0, [r5], {0}
    4a3c:	1c830000 	stcne	0, cr0, [r3], {0}
    4a40:	21000000 	mrscs	r0, (UNDEF: 0)
    4a44:	0000453c 	andeq	r4, r0, ip, lsr r5
    4a48:	00000000 	andeq	r0, r0, r0
    4a4c:	00000001 	andeq	r0, r0, r1
    4a50:	00000000 	andeq	r0, r0, r0
    4a54:	cc010000 	stcgt	0, cr0, [r1], {-0}
    4a58:	5c1f030a 	ldcpl	3, cr0, [pc], {10}
    4a5c:	9c000045 	stcls	0, cr0, [r0], {69}	; 0x45
    4a60:	9800001c 	stmdals	r0, {r2, r3, r4}
    4a64:	1f00001c 	svcne	0x0000001c
    4a68:	0000454f 	andeq	r4, r0, pc, asr #10
    4a6c:	00001cbe 			; <UNDEFINED> instruction: 0x00001cbe
    4a70:	00001cbc 			; <UNDEFINED> instruction: 0x00001cbc
    4a74:	00456920 	subeq	r6, r5, r0, lsr #18
    4a78:	001cd300 	andseq	sp, ip, r0, lsl #6
    4a7c:	001cd100 	andseq	sp, ip, r0, lsl #2
    4a80:	23000000 	movwcs	r0, #0
    4a84:	00000000 	andeq	r0, r0, r0
    4a88:	000045ab 	andeq	r4, r0, fp, lsr #11
    4a8c:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    4a90:	00452003 	subeq	r2, r5, r3
    4a94:	51011908 	tstpl	r1, r8, lsl #18
    4a98:	0ac40a03 	beq	ff1072ac <_estack+0xdf0fd90c>
    4a9c:	012a0000 			; <UNDEFINED> instruction: 0x012a0000
    4aa0:	000011d0 	ldrdeq	r1, [r0], -r0
    4aa4:	0d0a9901 	vstreq.16	s18, [sl, #-2]	; <UNPREDICTABLE>
    4aa8:	000d4001 	andeq	r4, sp, r1
    4aac:	000d4208 	andeq	r4, sp, r8, lsl #4
    4ab0:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    4ab4:	001ac901 	andseq	ip, sl, r1, lsl #18
    4ab8:	15c22900 	strbne	r2, [r2, #2304]	; 0x900
    4abc:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    4ac0:	07963c0a 	ldreq	r3, [r6, sl, lsl #24]
    4ac4:	50010000 	andpl	r0, r1, r0
    4ac8:	004cac29 	subeq	sl, ip, r9, lsr #24
    4acc:	0a990100 	beq	fe644ed4 <_estack+0xde63b534>
    4ad0:	0000b04c 	andeq	fp, r0, ip, asr #32
    4ad4:	00510100 	subseq	r0, r1, r0, lsl #2
    4ad8:	1282012a 	addne	r0, r2, #-2147483638	; 0x8000000a
    4adc:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    4ae0:	00010d0a 	andeq	r0, r1, sl, lsl #26
    4ae4:	00000000 	andeq	r0, r0, r0
    4ae8:	02000000 	andeq	r0, r0, #0
    4aec:	f401007d 	vst4.16	{d0-d3}, [r1 :256]!
    4af0:	2900001a 	stmdbcs	r0, {r1, r3, r4}
    4af4:	000015c2 	andeq	r1, r0, r2, asr #11
    4af8:	430a8801 	movwmi	r8, #43009	; 0xa801
    4afc:	00000796 	muleq	r0, r6, r7
    4b00:	2a005001 	bcs	18b0c <_Min_Heap_Size+0x1830c>
    4b04:	0014ff01 	andseq	pc, r4, r1, lsl #30
    4b08:	0a790100 	beq	1e44f10 <_Min_Heap_Size+0x1e44710>
    4b0c:	0000010d 	andeq	r0, r0, sp, lsl #2
    4b10:	00000000 	andeq	r0, r0, r0
    4b14:	7d020000 	stcvc	0, cr0, [r2, #-0]
    4b18:	1b1f0100 	blne	7c4f20 <_Min_Heap_Size+0x7c4720>
    4b1c:	c2290000 	eorgt	r0, r9, #0
    4b20:	01000015 	tsteq	r0, r5, lsl r0
    4b24:	96440a79 			; <UNDEFINED> instruction: 0x96440a79
    4b28:	01000007 	tsteq	r0, r7
    4b2c:	012a0050 	qsubeq	r0, r0, sl
    4b30:	00001643 	andeq	r1, r0, r3, asr #12
    4b34:	0d0a6a01 	vstreq	s12, [sl, #-4]
    4b38:	00000001 	andeq	r0, r0, r1
    4b3c:	00000000 	andeq	r0, r0, r0
    4b40:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4b44:	001b4a01 	andseq	r4, fp, r1, lsl #20
    4b48:	15c22900 	strbne	r2, [r2, #2304]	; 0x900
    4b4c:	6a010000 	bvs	44b54 <_Min_Heap_Size+0x44354>
    4b50:	07963c0a 	ldreq	r3, [r6, sl, lsl #24]
    4b54:	50010000 	andpl	r0, r1, r0
    4b58:	11012a00 	tstne	r1, r0, lsl #20
    4b5c:	01000017 	tsteq	r0, r7, lsl r0
    4b60:	010d0a5c 	tsteq	sp, ip, asr sl
    4b64:	08000d2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, fp}
    4b68:	08000d30 	stmdaeq	r0, {r4, r5, r8, sl, fp}
    4b6c:	01007d02 	tsteq	r0, r2, lsl #26
    4b70:	00001b75 	andeq	r1, r0, r5, ror fp
    4b74:	0015c229 	andseq	ip, r5, r9, lsr #4
    4b78:	0a5c0100 	beq	1704f80 <_Min_Heap_Size+0x1704780>
    4b7c:	00079638 	andeq	r9, r7, r8, lsr r6
    4b80:	00500100 	subseq	r0, r0, r0, lsl #2
    4b84:	12b5012a 	adcsne	r0, r5, #-2147483638	; 0x8000000a
    4b88:	4d010000 	stcmi	0, cr0, [r1, #-0]
    4b8c:	00010d0a 	andeq	r0, r1, sl, lsl #26
    4b90:	00000000 	andeq	r0, r0, r0
    4b94:	02000000 	andeq	r0, r0, #0
    4b98:	a001007d 	andge	r0, r1, sp, ror r0
    4b9c:	2900001b 	stmdbcs	r0, {r0, r1, r3, r4}
    4ba0:	000015c2 	andeq	r1, r0, r2, asr #11
    4ba4:	3d0a4d01 	stccc	13, cr4, [sl, #-4]
    4ba8:	00000796 	muleq	r0, r6, r7
    4bac:	2a005001 	bcs	18bb8 <_Min_Heap_Size+0x183b8>
    4bb0:	00161601 	andseq	r1, r6, r1, lsl #12
    4bb4:	0a3e0100 	beq	f84fbc <_Min_Heap_Size+0xf847bc>
    4bb8:	0d2c010d 	stfeqs	f0, [ip, #-52]!	; 0xffffffcc
    4bbc:	0d2e0800 	stceq	8, cr0, [lr, #-0]
    4bc0:	7d020800 	stcvc	8, cr0, [r2, #-0]
    4bc4:	1bcb0100 	blne	ff2c4fcc <_estack+0xdf2bb62c>
    4bc8:	c2290000 	eorgt	r0, r9, #0
    4bcc:	01000015 	tsteq	r0, r5, lsl r0
    4bd0:	96390a3e 			; <UNDEFINED> instruction: 0x96390a3e
    4bd4:	01000007 	tsteq	r0, r7
    4bd8:	012a0050 	qsubeq	r0, r0, sl
    4bdc:	000016f5 	strdeq	r1, [r0], -r5
    4be0:	0d0a2f01 	stceq	15, cr2, [sl, #-4]
    4be4:	00000001 	andeq	r0, r0, r1
    4be8:	00000000 	andeq	r0, r0, r0
    4bec:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    4bf0:	001bf601 	andseq	pc, fp, r1, lsl #12
    4bf4:	15c22900 	strbne	r2, [r2, #2304]	; 0x900
    4bf8:	2f010000 	svccs	0x00010000
    4bfc:	07963d0a 	ldreq	r3, [r6, sl, lsl #26]
    4c00:	50010000 	andpl	r0, r1, r0
    4c04:	1a012a00 	bne	4f40c <_Min_Heap_Size+0x4ec0c>
    4c08:	01000014 	tsteq	r0, r4, lsl r0
    4c0c:	010d0a20 	tsteq	sp, r0, lsr #20
    4c10:	08000d10 	stmdaeq	r0, {r4, r8, sl, fp}
    4c14:	08000d12 	stmdaeq	r0, {r1, r4, r8, sl, fp}
    4c18:	01007d02 	tsteq	r0, r2, lsl #26
    4c1c:	00001c21 	andeq	r1, r0, r1, lsr #24
    4c20:	0015c229 	andseq	ip, r5, r9, lsr #4
    4c24:	0a200100 	beq	80502c <_Min_Heap_Size+0x80482c>
    4c28:	00079639 	andeq	r9, r7, r9, lsr r6
    4c2c:	00500100 	subseq	r0, r0, r0, lsl #2
    4c30:	0a39012b 	beq	e450e4 <_Min_Heap_Size+0xe448e4>
    4c34:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    4c38:	28010609 	stmdacs	r1, {r0, r3, r9, sl}
    4c3c:	b008000e 	andlt	r0, r8, lr
    4c40:	e6080010 			; <UNDEFINED> instruction: 0xe6080010
    4c44:	0100001c 	tsteq	r0, ip, lsl r0
    4c48:	000022ae 	andeq	r2, r0, lr, lsr #5
    4c4c:	0015c216 	andseq	ip, r5, r6, lsl r2
    4c50:	092e0100 	stmdbeq	lr!, {r8}
    4c54:	0007962e 	andeq	r9, r7, lr, lsr #12
    4c58:	001d2e00 	andseq	r2, sp, r0, lsl #28
    4c5c:	001d2a00 	andseq	r2, sp, r0, lsl #20
    4c60:	144f1700 	strbne	r1, [pc], #-1792	; 4c68 <_Min_Heap_Size+0x4468>
    4c64:	30010000 	andcc	r0, r1, r0
    4c68:	00c60c09 	sbceq	r0, r6, r9, lsl #24
    4c6c:	1d5a0000 	ldclne	0, cr0, [sl, #-0]
    4c70:	1d4c0000 	stclne	0, cr0, [ip, #-0]
    4c74:	a5170000 	ldrge	r0, [r7, #-0]
    4c78:	01000017 	tsteq	r0, r7, lsl r0
    4c7c:	c60c0931 			; <UNDEFINED> instruction: 0xc60c0931
    4c80:	bf000000 	svclt	0x00000000
    4c84:	af00001d 	svcge	0x0000001d
    4c88:	1700001d 	smladne	r0, sp, r0, r0
    4c8c:	000011c9 	andeq	r1, r0, r9, asr #3
    4c90:	0c093201 	sfmeq	f3, 4, [r9], {1}
    4c94:	000000c6 	andeq	r0, r0, r6, asr #1
    4c98:	00001e23 	andeq	r1, r0, r3, lsr #28
    4c9c:	00001e1f 	andeq	r1, r0, pc, lsl lr
    4ca0:	0013b617 	andseq	fp, r3, r7, lsl r6
    4ca4:	09330100 	ldmdbeq	r3!, {r8}
    4ca8:	0000c60c 	andeq	ip, r0, ip, lsl #12
    4cac:	001e4700 	andseq	r4, lr, r0, lsl #14
    4cb0:	001e4100 	andseq	r4, lr, r0, lsl #2
    4cb4:	165e1700 	ldrbne	r1, [lr], -r0, lsl #14
    4cb8:	34010000 	strcc	r0, [r1], #-0
    4cbc:	00c60c09 	sbceq	r0, r6, r9, lsl #24
    4cc0:	1e810000 	cdpne	0, 8, cr0, cr1, cr0, {0}
    4cc4:	1e750000 	cdpne	0, 7, cr0, cr5, cr0, {0}
    4cc8:	021c0000 	andseq	r0, ip, #0
    4ccc:	1a08000f 	bne	204d10 <_Min_Heap_Size+0x204510>
    4cd0:	5308000f 	movwpl	r0, #32783	; 0x800f
    4cd4:	1d00001d 	stcne	0, cr0, [r0, #-116]	; 0xffffff8c
    4cd8:	006c6176 	rsbeq	r6, ip, r6, ror r1
    4cdc:	0b097501 	bleq	2620e8 <_Min_Heap_Size+0x2618e8>
    4ce0:	000000c6 	andeq	r0, r0, r6, asr #1
    4ce4:	00001edf 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    4ce8:	00001edd 	ldrdeq	r1, [r0], -sp
    4cec:	00457d1e 	subeq	r7, r5, lr, lsl sp
    4cf0:	000f0400 	andeq	r0, pc, r0, lsl #8
    4cf4:	04000008 	streq	r0, [r0], #-8
    4cf8:	0c08000f 	stceq	0, cr0, [r8], {15}
    4cfc:	0108000f 	tsteq	r8, pc
    4d00:	130b0975 	movwne	r0, #47477	; 0xb975
    4d04:	1f00001d 	svcne	0x0000001d
    4d08:	00004590 	muleq	r0, r0, r5
    4d0c:	00001ef8 	strdeq	r1, [r0], -r8
    4d10:	00001ef2 	strdeq	r1, [r0], -r2
    4d14:	00459d20 	subeq	r9, r5, r0, lsr #26
    4d18:	001f2700 	andseq	r2, pc, r0, lsl #14
    4d1c:	001f2500 	andseq	r2, pc, r0, lsl #10
    4d20:	3c210000 	stccc	0, cr0, [r1], #-0
    4d24:	10000045 	andne	r0, r0, r5, asr #32
    4d28:	0108000f 	tsteq	r8, pc
    4d2c:	000f1000 	andeq	r1, pc, r0
    4d30:	000f1608 	andeq	r1, pc, r8, lsl #12
    4d34:	09750108 	ldmdbeq	r5!, {r3, r8}^
    4d38:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    4d3c:	1f3e0000 	svcne	0x003e0000
    4d40:	1f3a0000 	svcne	0x003a0000
    4d44:	4f1f0000 	svcmi	0x001f0000
    4d48:	60000045 	andvs	r0, r0, r5, asr #32
    4d4c:	5e00001f 	mcrpl	0, 0, r0, cr0, cr15, {0}
    4d50:	2000001f 	andcs	r0, r0, pc, lsl r0
    4d54:	00004569 	andeq	r4, r0, r9, ror #10
    4d58:	00001f75 	andeq	r1, r0, r5, ror pc
    4d5c:	00001f73 	andeq	r1, r0, r3, ror pc
    4d60:	681c0000 	ldmdavs	ip, {}	; <UNPREDICTABLE>
    4d64:	7608000f 	strvc	r0, [r8], -pc
    4d68:	7108000f 	tstvc	r8, pc
    4d6c:	2200001d 	andcs	r0, r0, #29
    4d70:	000001ea 	andeq	r0, r0, sl, ror #3
    4d74:	0509b301 	streq	fp, [r9, #-769]	; 0xfffffcff
    4d78:	000000d2 	ldrdeq	r0, [r0], -r2
    4d7c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
    4d80:	000f7e1c 	andeq	r7, pc, ip, lsl lr	; <UNPREDICTABLE>
    4d84:	00102408 	andseq	r2, r0, r8, lsl #8
    4d88:	00200d08 	eoreq	r0, r0, r8, lsl #26
    4d8c:	162e1700 	strtne	r1, [lr], -r0, lsl #14
    4d90:	bc010000 	stclt	0, cr0, [r1], {-0}
    4d94:	00b01009 	adcseq	r1, r0, r9
    4d98:	1f8c0000 	svcne	0x008c0000
    4d9c:	1f880000 	svcne	0x00880000
    4da0:	9e1c0000 	cdpls	0, 1, cr0, cr12, cr0, {0}
    4da4:	b608000f 	strlt	r0, [r8], -pc
    4da8:	2b08000f 	blcs	204dec <_Min_Heap_Size+0x2045ec>
    4dac:	1d00001e 	stcne	0, cr0, [r0, #-120]	; 0xffffff88
    4db0:	006c6176 	rsbeq	r6, ip, r6, ror r1
    4db4:	0b09c701 	bleq	2769c0 <_Min_Heap_Size+0x2761c0>
    4db8:	000000c6 	andeq	r0, r0, r6, asr #1
    4dbc:	00001fad 	andeq	r1, r0, sp, lsr #31
    4dc0:	00001fab 	andeq	r1, r0, fp, lsr #31
    4dc4:	00457d1e 	subeq	r7, r5, lr, lsl sp
    4dc8:	000fa000 	andeq	sl, pc, r0
    4dcc:	a0000008 	andge	r0, r0, r8
    4dd0:	a808000f 	stmdage	r8, {r0, r1, r2, r3}
    4dd4:	0108000f 	tsteq	r8, pc
    4dd8:	eb0b09c7 	bl	2c74fc <_Min_Heap_Size+0x2c6cfc>
    4ddc:	1f00001d 	svcne	0x0000001d
    4de0:	00004590 	muleq	r0, r0, r5
    4de4:	00001fc6 	andeq	r1, r0, r6, asr #31
    4de8:	00001fc0 	andeq	r1, r0, r0, asr #31
    4dec:	00459d20 	subeq	r9, r5, r0, lsr #26
    4df0:	001ff500 	andseq	pc, pc, r0, lsl #10
    4df4:	001ff300 	andseq	pc, pc, r0, lsl #6
    4df8:	3c210000 	stccc	0, cr0, [r1], #-0
    4dfc:	ac000045 	stcge	0, cr0, [r0], {69}	; 0x45
    4e00:	0108000f 	tsteq	r8, pc
    4e04:	000fac00 	andeq	sl, pc, r0, lsl #24
    4e08:	000fb208 	andeq	fp, pc, r8, lsl #4
    4e0c:	09c70108 	stmibeq	r7, {r3, r8}^
    4e10:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    4e14:	200c0000 	andcs	r0, ip, r0
    4e18:	20080000 	andcs	r0, r8, r0
    4e1c:	4f1f0000 	svcmi	0x001f0000
    4e20:	2e000045 	cdpcs	0, 0, cr0, cr0, cr5, {2}
    4e24:	2c000020 	stccs	0, cr0, [r0], {32}
    4e28:	20000020 	andcs	r0, r0, r0, lsr #32
    4e2c:	00004569 	andeq	r4, r0, r9, ror #10
    4e30:	00002043 	andeq	r2, r0, r3, asr #32
    4e34:	00002041 	andeq	r2, r0, r1, asr #32
    4e38:	b61c0000 	ldrlt	r0, [ip], -r0
    4e3c:	ce08000f 	cdpgt	0, 0, cr0, cr8, cr15, {0}
    4e40:	c308000f 	movwgt	r0, #32783	; 0x800f
    4e44:	1d00001e 	stcne	0, cr0, [r0, #-120]	; 0xffffff88
    4e48:	006c6176 	rsbeq	r6, ip, r6, ror r1
    4e4c:	0b09c801 	bleq	276e58 <_Min_Heap_Size+0x276658>
    4e50:	000000c6 	andeq	r0, r0, r6, asr #1
    4e54:	00002058 	andeq	r2, r0, r8, asr r0
    4e58:	00002056 	andeq	r2, r0, r6, asr r0
    4e5c:	00457d1e 	subeq	r7, r5, lr, lsl sp
    4e60:	000fb800 	andeq	fp, pc, r0, lsl #16
    4e64:	b8000008 	stmdalt	r0, {r3}
    4e68:	c008000f 	andgt	r0, r8, pc
    4e6c:	0108000f 	tsteq	r8, pc
    4e70:	830b09c8 	movwhi	r0, #47560	; 0xb9c8
    4e74:	1f00001e 	svcne	0x0000001e
    4e78:	00004590 	muleq	r0, r0, r5
    4e7c:	00002071 	andeq	r2, r0, r1, ror r0
    4e80:	0000206b 	andeq	r2, r0, fp, rrx
    4e84:	00459d20 	subeq	r9, r5, r0, lsr #26
    4e88:	0020a000 	eoreq	sl, r0, r0
    4e8c:	00209e00 	eoreq	r9, r0, r0, lsl #28
    4e90:	3c210000 	stccc	0, cr0, [r1], #-0
    4e94:	c4000045 	strgt	r0, [r0], #-69	; 0xffffffbb
    4e98:	0108000f 	tsteq	r8, pc
    4e9c:	000fc400 	andeq	ip, pc, r0, lsl #8
    4ea0:	000fca08 	andeq	ip, pc, r8, lsl #20
    4ea4:	09c80108 	stmibeq	r8, {r3, r8}^
    4ea8:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    4eac:	20b70000 	adcscs	r0, r7, r0
    4eb0:	20b30000 	adcscs	r0, r3, r0
    4eb4:	4f1f0000 	svcmi	0x001f0000
    4eb8:	d9000045 	stmdble	r0, {r0, r2, r6}
    4ebc:	d7000020 	strle	r0, [r0, -r0, lsr #32]
    4ec0:	20000020 	andcs	r0, r0, r0, lsr #32
    4ec4:	00004569 	andeq	r4, r0, r9, ror #10
    4ec8:	000020ee 	andeq	r2, r0, lr, ror #1
    4ecc:	000020ec 	andeq	r2, r0, ip, ror #1
    4ed0:	ce1c0000 	cdpgt	0, 1, cr0, cr12, cr0, {0}
    4ed4:	e608000f 	str	r0, [r8], -pc
    4ed8:	5b08000f 	blpl	204f1c <_Min_Heap_Size+0x20471c>
    4edc:	1d00001f 	stcne	0, cr0, [r0, #-124]	; 0xffffff84
    4ee0:	006c6176 	rsbeq	r6, ip, r6, ror r1
    4ee4:	0b09cc01 	bleq	277ef0 <_Min_Heap_Size+0x2776f0>
    4ee8:	000000c6 	andeq	r0, r0, r6, asr #1
    4eec:	00002103 	andeq	r2, r0, r3, lsl #2
    4ef0:	00002101 	andeq	r2, r0, r1, lsl #2
    4ef4:	00457d1e 	subeq	r7, r5, lr, lsl sp
    4ef8:	000fd000 	andeq	sp, pc, r0
    4efc:	d0000008 	andle	r0, r0, r8
    4f00:	d808000f 	stmdale	r8, {r0, r1, r2, r3}
    4f04:	0108000f 	tsteq	r8, pc
    4f08:	1b0b09cc 	blne	2c7640 <_Min_Heap_Size+0x2c6e40>
    4f0c:	1f00001f 	svcne	0x0000001f
    4f10:	00004590 	muleq	r0, r0, r5
    4f14:	0000211c 	andeq	r2, r0, ip, lsl r1
    4f18:	00002116 	andeq	r2, r0, r6, lsl r1
    4f1c:	00459d20 	subeq	r9, r5, r0, lsr #26
    4f20:	00214b00 	eoreq	r4, r1, r0, lsl #22
    4f24:	00214900 	eoreq	r4, r1, r0, lsl #18
    4f28:	3c210000 	stccc	0, cr0, [r1], #-0
    4f2c:	dc000045 	stcle	0, cr0, [r0], {69}	; 0x45
    4f30:	0108000f 	tsteq	r8, pc
    4f34:	000fdc00 	andeq	sp, pc, r0, lsl #24
    4f38:	000fe208 	andeq	lr, pc, r8, lsl #4
    4f3c:	09cc0108 	stmibeq	ip, {r3, r8}^
    4f40:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    4f44:	21620000 	cmncs	r2, r0
    4f48:	215e0000 	cmpcs	lr, r0
    4f4c:	4f1f0000 	svcmi	0x001f0000
    4f50:	84000045 	strhi	r0, [r0], #-69	; 0xffffffbb
    4f54:	82000021 	andhi	r0, r0, #33	; 0x21
    4f58:	20000021 	andcs	r0, r0, r1, lsr #32
    4f5c:	00004569 	andeq	r4, r0, r9, ror #10
    4f60:	00002199 	muleq	r0, r9, r1
    4f64:	00002197 	muleq	r0, r7, r1
    4f68:	f01c0000 			; <UNDEFINED> instruction: 0xf01c0000
    4f6c:	0808000f 	stmdaeq	r8, {r0, r1, r2, r3}
    4f70:	f3080010 	vqadd.u8	d0, d8, d0
    4f74:	1d00001f 	stcne	0, cr0, [r0, #-124]	; 0xffffff84
    4f78:	006c6176 	rsbeq	r6, ip, r6, ror r1
    4f7c:	0b09d201 	bleq	279788 <_Min_Heap_Size+0x278f88>
    4f80:	000000c6 	andeq	r0, r0, r6, asr #1
    4f84:	000021ae 	andeq	r2, r0, lr, lsr #3
    4f88:	000021ac 	andeq	r2, r0, ip, lsr #3
    4f8c:	00457d1e 	subeq	r7, r5, lr, lsl sp
    4f90:	000ff200 	andeq	pc, pc, r0, lsl #4
    4f94:	f2000008 	vhadd.s8	d0, d0, d8
    4f98:	fa08000f 	blx	204fdc <_Min_Heap_Size+0x2047dc>
    4f9c:	0108000f 	tsteq	r8, pc
    4fa0:	b30b09d2 	movwlt	r0, #47570	; 0xb9d2
    4fa4:	1f00001f 	svcne	0x0000001f
    4fa8:	00004590 	muleq	r0, r0, r5
    4fac:	000021c7 	andeq	r2, r0, r7, asr #3
    4fb0:	000021c1 	andeq	r2, r0, r1, asr #3
    4fb4:	00459d20 	subeq	r9, r5, r0, lsr #26
    4fb8:	0021f600 	eoreq	pc, r1, r0, lsl #12
    4fbc:	0021f400 	eoreq	pc, r1, r0, lsl #8
    4fc0:	3c210000 	stccc	0, cr0, [r1], #-0
    4fc4:	fe000045 	cdp2	0, 0, cr0, cr0, cr5, {2}
    4fc8:	0108000f 	tsteq	r8, pc
    4fcc:	000ffe00 	andeq	pc, pc, r0, lsl #28
    4fd0:	00100408 	andseq	r0, r0, r8, lsl #8
    4fd4:	09d20108 	ldmibeq	r2, {r3, r8}^
    4fd8:	455c1f0b 	ldrbmi	r1, [ip, #-3851]	; 0xfffff0f5
    4fdc:	220d0000 	andcs	r0, sp, #0
    4fe0:	22090000 	andcs	r0, r9, #0
    4fe4:	4f1f0000 	svcmi	0x001f0000
    4fe8:	2f000045 	svccs	0x00000045
    4fec:	2d000022 	stccs	0, cr0, [r0, #-136]	; 0xffffff78
    4ff0:	20000022 	andcs	r0, r0, r2, lsr #32
    4ff4:	00004569 	andeq	r4, r0, r9, ror #10
    4ff8:	00002244 	andeq	r2, r0, r4, asr #4
    4ffc:	00002242 	andeq	r2, r0, r2, asr #4
    5000:	0e1a0000 	cdpeq	0, 1, cr0, cr10, cr0, {0}
    5004:	00080010 	andeq	r0, r8, r0, lsl r0
    5008:	23000046 	movwcs	r0, #70	; 0x46
    500c:	08001022 	stmdaeq	r0, {r1, r5, ip}
    5010:	00001a8f 	andeq	r1, r0, pc, lsl #21
    5014:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    5018:	00000074 	andeq	r0, r0, r4, ror r0
    501c:	0010241c 	andseq	r2, r0, ip, lsl r4
    5020:	00109c08 	andseq	r9, r0, r8, lsl #24
    5024:	00220808 	eoreq	r0, r2, r8, lsl #16
    5028:	16a41700 	strtne	r1, [r4], r0, lsl #14
    502c:	eb010000 	bl	45034 <_Min_Heap_Size+0x44834>
    5030:	00b01009 	adcseq	r1, r0, r9
    5034:	22590000 	subscs	r0, r9, #0
    5038:	22570000 	subscs	r0, r7, #0
    503c:	3e1c0000 	cdpcc	0, 1, cr0, cr12, cr0, {0}
    5040:	56080010 			; <UNDEFINED> instruction: 0x56080010
    5044:	c7080010 	smladgt	r8, r0, r0, r0
    5048:	1d000020 	stcne	0, cr0, [r0, #-128]	; 0xffffff80
    504c:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5050:	0909f001 	stmdbeq	r9, {r0, ip, sp, lr, pc}
    5054:	000000c6 	andeq	r0, r0, r6, asr #1
    5058:	0000226e 	andeq	r2, r0, lr, ror #4
    505c:	0000226c 	andeq	r2, r0, ip, ror #4
    5060:	00457d1e 	subeq	r7, r5, lr, lsl sp
    5064:	00104000 	andseq	r4, r0, r0
    5068:	40000008 	andmi	r0, r0, r8
    506c:	48080010 	stmdami	r8, {r4}
    5070:	01080010 	tsteq	r8, r0, lsl r0
    5074:	870909f0 			; <UNDEFINED> instruction: 0x870909f0
    5078:	1f000020 	svcne	0x00000020
    507c:	00004590 	muleq	r0, r0, r5
    5080:	00002287 	andeq	r2, r0, r7, lsl #5
    5084:	00002281 	andeq	r2, r0, r1, lsl #5
    5088:	00459d20 	subeq	r9, r5, r0, lsr #26
    508c:	0022b600 	eoreq	fp, r2, r0, lsl #12
    5090:	0022b400 	eoreq	fp, r2, r0, lsl #8
    5094:	3c210000 	stccc	0, cr0, [r1], #-0
    5098:	4c000045 	stcmi	0, cr0, [r0], {69}	; 0x45
    509c:	01080010 	tsteq	r8, r0, lsl r0
    50a0:	00104c00 	andseq	r4, r0, r0, lsl #24
    50a4:	00105208 	andseq	r5, r0, r8, lsl #4
    50a8:	09f00108 	ldmibeq	r0!, {r3, r8}^
    50ac:	455c1f09 	ldrbmi	r1, [ip, #-3849]	; 0xfffff0f7
    50b0:	22cd0000 	sbccs	r0, sp, #0
    50b4:	22c90000 	sbccs	r0, r9, #0
    50b8:	4f1f0000 	svcmi	0x001f0000
    50bc:	ef000045 	svc	0x00000045
    50c0:	ed000022 	stc	0, cr0, [r0, #-136]	; 0xffffff78
    50c4:	20000022 	andcs	r0, r0, r2, lsr #32
    50c8:	00004569 	andeq	r4, r0, r9, ror #10
    50cc:	00002304 	andeq	r2, r0, r4, lsl #6
    50d0:	00002302 	andeq	r2, r0, r2, lsl #6
    50d4:	561c0000 	ldrpl	r0, [ip], -r0
    50d8:	6e080010 	mcrvs	0, 0, r0, cr8, cr0, {0}
    50dc:	5f080010 	svcpl	0x00080010
    50e0:	1d000021 	stcne	0, cr0, [r0, #-132]	; 0xffffff7c
    50e4:	006c6176 	rsbeq	r6, ip, r6, ror r1
    50e8:	0909f301 	stmdbeq	r9, {r0, r8, r9, ip, sp, lr, pc}
    50ec:	000000c6 	andeq	r0, r0, r6, asr #1
    50f0:	00002319 	andeq	r2, r0, r9, lsl r3
    50f4:	00002317 	andeq	r2, r0, r7, lsl r3
    50f8:	00457d1e 	subeq	r7, r5, lr, lsl sp
    50fc:	00105800 	andseq	r5, r0, r0, lsl #16
    5100:	58000008 	stmdapl	r0, {r3}
    5104:	60080010 	andvs	r0, r8, r0, lsl r0
    5108:	01080010 	tsteq	r8, r0, lsl r0
    510c:	1f0909f3 	svcne	0x000909f3
    5110:	1f000021 	svcne	0x00000021
    5114:	00004590 	muleq	r0, r0, r5
    5118:	00002332 	andeq	r2, r0, r2, lsr r3
    511c:	0000232c 	andeq	r2, r0, ip, lsr #6
    5120:	00459d20 	subeq	r9, r5, r0, lsr #26
    5124:	00236100 	eoreq	r6, r3, r0, lsl #2
    5128:	00235f00 	eoreq	r5, r3, r0, lsl #30
    512c:	3c210000 	stccc	0, cr0, [r1], #-0
    5130:	64000045 	strvs	r0, [r0], #-69	; 0xffffffbb
    5134:	01080010 	tsteq	r8, r0, lsl r0
    5138:	00106400 	andseq	r6, r0, r0, lsl #8
    513c:	00106a08 	andseq	r6, r0, r8, lsl #20
    5140:	09f30108 	ldmibeq	r3!, {r3, r8}^
    5144:	455c1f09 	ldrbmi	r1, [ip, #-3849]	; 0xfffff0f7
    5148:	23780000 	cmncs	r8, #0
    514c:	23740000 	cmncs	r4, #0
    5150:	4f1f0000 	svcmi	0x001f0000
    5154:	9a000045 	bls	5270 <_Min_Heap_Size+0x4a70>
    5158:	98000023 	stmdals	r0, {r0, r1, r5}
    515c:	20000023 	andcs	r0, r0, r3, lsr #32
    5160:	00004569 	andeq	r4, r0, r9, ror #10
    5164:	000023af 	andeq	r2, r0, pc, lsr #7
    5168:	000023ad 	andeq	r2, r0, sp, lsr #7
    516c:	781c0000 	ldmdavc	ip, {}	; <UNPREDICTABLE>
    5170:	90080010 	andls	r0, r8, r0, lsl r0
    5174:	f7080010 			; <UNDEFINED> instruction: 0xf7080010
    5178:	1d000021 	stcne	0, cr0, [r0, #-132]	; 0xffffff7c
    517c:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5180:	0909f901 	stmdbeq	r9, {r0, r8, fp, ip, sp, lr, pc}
    5184:	000000c6 	andeq	r0, r0, r6, asr #1
    5188:	000023c4 	andeq	r2, r0, r4, asr #7
    518c:	000023c2 	andeq	r2, r0, r2, asr #7
    5190:	00457d1e 	subeq	r7, r5, lr, lsl sp
    5194:	00107a00 	andseq	r7, r0, r0, lsl #20
    5198:	7a000008 	bvc	51c0 <_Min_Heap_Size+0x49c0>
    519c:	82080010 	andhi	r0, r8, #16
    51a0:	01080010 	tsteq	r8, r0, lsl r0
    51a4:	b70909f9 			; <UNDEFINED> instruction: 0xb70909f9
    51a8:	1f000021 	svcne	0x00000021
    51ac:	00004590 	muleq	r0, r0, r5
    51b0:	000023dd 	ldrdeq	r2, [r0], -sp
    51b4:	000023d7 	ldrdeq	r2, [r0], -r7
    51b8:	00459d20 	subeq	r9, r5, r0, lsr #26
    51bc:	00240c00 	eoreq	r0, r4, r0, lsl #24
    51c0:	00240a00 	eoreq	r0, r4, r0, lsl #20
    51c4:	3c210000 	stccc	0, cr0, [r1], #-0
    51c8:	86000045 	strhi	r0, [r0], -r5, asr #32
    51cc:	01080010 	tsteq	r8, r0, lsl r0
    51d0:	00108600 	andseq	r8, r0, r0, lsl #12
    51d4:	00108c08 	andseq	r8, r0, r8, lsl #24
    51d8:	09f90108 	ldmibeq	r9!, {r3, r8}^
    51dc:	455c1f09 	ldrbmi	r1, [ip, #-3849]	; 0xfffff0f7
    51e0:	24230000 	strtcs	r0, [r3], #-0
    51e4:	241f0000 	ldrcs	r0, [pc], #-0	; 51ec <_Min_Heap_Size+0x49ec>
    51e8:	4f1f0000 	svcmi	0x001f0000
    51ec:	45000045 	strmi	r0, [r0, #-69]	; 0xffffffbb
    51f0:	43000024 	movwmi	r0, #36	; 0x24
    51f4:	20000024 	andcs	r0, r0, r4, lsr #32
    51f8:	00004569 	andeq	r4, r0, r9, ror #10
    51fc:	0000245a 	andeq	r2, r0, sl, asr r4
    5200:	00002458 	andeq	r2, r0, r8, asr r4
    5204:	9a230000 	bls	8c520c <_Min_Heap_Size+0x8c4a0c>
    5208:	8f080010 	svchi	0x00080010
    520c:	1900001a 	stmdbne	r0, {r1, r3, r4}
    5210:	74025001 	strvc	r5, [r2], #-1
    5214:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    5218:	08000e82 	stmdaeq	r0, {r1, r7, r9, sl, fp}
    521c:	0000079c 	muleq	r0, ip, r7
    5220:	0000221c 	andeq	r2, r0, ip, lsl r2
    5224:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    5228:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    522c:	08000ef8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, fp}
    5230:	00000af5 	strdeq	r0, [r0], -r5
    5234:	00002230 	andeq	r2, r0, r0, lsr r2
    5238:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    523c:	1a000074 	bne	5414 <_Min_Heap_Size+0x4c14>
    5240:	08000f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp}
    5244:	0000460f 	andeq	r4, r0, pc, lsl #12
    5248:	000f3a18 	andeq	r3, pc, r8, lsl sl	; <UNPREDICTABLE>
    524c:	00079c08 	andeq	r9, r7, r8, lsl #24
    5250:	00224d00 	eoreq	r4, r2, r0, lsl #26
    5254:	50011900 	andpl	r1, r1, r0, lsl #18
    5258:	00007402 	andeq	r7, r0, r2, lsl #8
    525c:	000f4218 	andeq	r4, pc, r8, lsl r2	; <UNPREDICTABLE>
    5260:	001b4a08 	andseq	r4, fp, r8, lsl #20
    5264:	00226100 	eoreq	r6, r2, r0, lsl #2
    5268:	50011900 	andpl	r1, r1, r0, lsl #18
    526c:	00007402 	andeq	r7, r0, r2, lsl #8
    5270:	000f4a18 	andeq	r4, pc, r8, lsl sl	; <UNPREDICTABLE>
    5274:	001b4a08 	andseq	r4, fp, r8, lsl #20
    5278:	00227500 	eoreq	r7, r2, r0, lsl #10
    527c:	50011900 	andpl	r1, r1, r0, lsl #18
    5280:	00007402 	andeq	r7, r0, r2, lsl #8
    5284:	000f5218 	andeq	r5, pc, r8, lsl r2	; <UNPREDICTABLE>
    5288:	001b4a08 	andseq	r4, fp, r8, lsl #20
    528c:	00228900 	eoreq	r8, r2, r0, lsl #18
    5290:	50011900 	andpl	r1, r1, r0, lsl #18
    5294:	00007402 	andeq	r7, r0, r2, lsl #8
    5298:	0010a218 	andseq	sl, r0, r8, lsl r2
    529c:	00091b08 	andeq	r1, r9, r8, lsl #22
    52a0:	00229d00 	eoreq	r9, r2, r0, lsl #26
    52a4:	50011900 	andpl	r1, r1, r0, lsl #18
    52a8:	00007402 	andeq	r7, r0, r2, lsl #8
    52ac:	0010aa23 	andseq	sl, r0, r3, lsr #20
    52b0:	0008d508 	andeq	sp, r8, r8, lsl #10
    52b4:	50011900 	andpl	r1, r1, r0, lsl #18
    52b8:	00007402 	andeq	r7, r0, r2, lsl #8
    52bc:	ac012c00 	stcge	12, cr2, [r1], {-0}
    52c0:	01000014 	tsteq	r0, r4, lsl r0
    52c4:	011308e0 	tsteq	r3, r0, ror #17
    52c8:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    52d4:	0000246d 	andeq	r2, r0, sp, ror #8
    52d8:	00257101 	eoreq	r7, r5, r1, lsl #2
    52dc:	15c21600 	strbne	r1, [r2, #1536]	; 0x600
    52e0:	e0010000 	and	r0, r1, r0
    52e4:	07964008 	ldreq	r4, [r6, r8]
    52e8:	249b0000 	ldrcs	r0, [fp], #0
    52ec:	248d0000 	strcs	r0, [sp], #0
    52f0:	001c0000 	andseq	r0, ip, r0
    52f4:	00000000 	andeq	r0, r0, r0
    52f8:	7b000000 	blvc	5300 <_Min_Heap_Size+0x4b00>
    52fc:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    5300:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5304:	0308e301 	movweq	lr, #33537	; 0x8301
    5308:	000000c6 	andeq	r0, r0, r6, asr #1
    530c:	000024f5 	strdeq	r2, [r0], -r5
    5310:	000024f3 	strdeq	r2, [r0], -r3
    5314:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    5324:	01000000 	mrseq	r0, (UNDEF: 0)
    5328:	3b0308e3 	blcc	c76bc <_Min_Heap_Size+0xc6ebc>
    532c:	1f000023 	svcne	0x00000023
    5330:	00004590 	muleq	r0, r0, r5
    5334:	0000250e 	andeq	r2, r0, lr, lsl #10
    5338:	00002508 	andeq	r2, r0, r8, lsl #10
    533c:	00459d20 	subeq	r9, r5, r0, lsr #26
    5340:	00253d00 	eoreq	r3, r5, r0, lsl #26
    5344:	00253b00 	eoreq	r3, r5, r0, lsl #22
    5348:	3c210000 	stccc	0, cr0, [r1], #-0
    534c:	00000045 	andeq	r0, r0, r5, asr #32
    5350:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    535c:	08e30100 	stmiaeq	r3!, {r8}^
    5360:	455c1f03 	ldrbmi	r1, [ip, #-3843]	; 0xfffff0fd
    5364:	25540000 	ldrbcs	r0, [r4, #-0]
    5368:	25500000 	ldrbcs	r0, [r0, #-0]
    536c:	4f1f0000 	svcmi	0x001f0000
    5370:	76000045 	strvc	r0, [r0], -r5, asr #32
    5374:	74000025 	strvc	r0, [r0], #-37	; 0xffffffdb
    5378:	20000025 	andcs	r0, r0, r5, lsr #32
    537c:	00004569 	andeq	r4, r0, r9, ror #10
    5380:	0000258b 	andeq	r2, r0, fp, lsl #11
    5384:	00002589 	andeq	r2, r0, r9, lsl #11
    5388:	001c0000 	andseq	r0, ip, r0
    538c:	00000000 	andeq	r0, r0, r0
    5390:	13000000 	movwne	r0, #0
    5394:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5398:	006c6176 	rsbeq	r6, ip, r6, ror r1
    539c:	0308e401 	movweq	lr, #33793	; 0x8401
    53a0:	000000c6 	andeq	r0, r0, r6, asr #1
    53a4:	000025a0 	andeq	r2, r0, r0, lsr #11
    53a8:	0000259e 	muleq	r0, lr, r5
    53ac:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    53bc:	01000000 	mrseq	r0, (UNDEF: 0)
    53c0:	d30308e4 	movwle	r0, #14564	; 0x38e4
    53c4:	1f000023 	svcne	0x00000023
    53c8:	00004590 	muleq	r0, r0, r5
    53cc:	000025b9 			; <UNDEFINED> instruction: 0x000025b9
    53d0:	000025b3 			; <UNDEFINED> instruction: 0x000025b3
    53d4:	00459d20 	subeq	r9, r5, r0, lsr #26
    53d8:	0025e800 	eoreq	lr, r5, r0, lsl #16
    53dc:	0025e600 	eoreq	lr, r5, r0, lsl #12
    53e0:	3c210000 	stccc	0, cr0, [r1], #-0
    53e4:	00000045 	andeq	r0, r0, r5, asr #32
    53e8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    53f4:	08e40100 	stmiaeq	r4!, {r8}^
    53f8:	455c1f03 	ldrbmi	r1, [ip, #-3843]	; 0xfffff0fd
    53fc:	25ff0000 	ldrbcs	r0, [pc, #0]!	; 5404 <_Min_Heap_Size+0x4c04>
    5400:	25fb0000 	ldrbcs	r0, [fp, #0]!
    5404:	4f1f0000 	svcmi	0x001f0000
    5408:	21000045 	tstcs	r0, r5, asr #32
    540c:	1f000026 	svcne	0x00000026
    5410:	20000026 	andcs	r0, r0, r6, lsr #32
    5414:	00004569 	andeq	r4, r0, r9, ror #10
    5418:	00002636 	andeq	r2, r0, r6, lsr r6
    541c:	00002634 	andeq	r2, r0, r4, lsr r6
    5420:	001c0000 	andseq	r0, ip, r0
    5424:	00000000 	andeq	r0, r0, r0
    5428:	ab000000 	blge	5430 <_Min_Heap_Size+0x4c30>
    542c:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    5430:	006c6176 	rsbeq	r6, ip, r6, ror r1
    5434:	0508e901 	streq	lr, [r8, #-2305]	; 0xfffff6ff
    5438:	000000c6 	andeq	r0, r0, r6, asr #1
    543c:	0000264b 	andeq	r2, r0, fp, asr #12
    5440:	00002649 	andeq	r2, r0, r9, asr #12
    5444:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    5454:	01000000 	mrseq	r0, (UNDEF: 0)
    5458:	6b0508e9 	blvs	147804 <_Min_Heap_Size+0x147004>
    545c:	1f000024 	svcne	0x00000024
    5460:	00004590 	muleq	r0, r0, r5
    5464:	00002664 	andeq	r2, r0, r4, ror #12
    5468:	0000265e 	andeq	r2, r0, lr, asr r6
    546c:	00459d20 	subeq	r9, r5, r0, lsr #26
    5470:	00269300 	eoreq	r9, r6, r0, lsl #6
    5474:	00269100 	eoreq	r9, r6, r0, lsl #2
    5478:	3c210000 	stccc	0, cr0, [r1], #-0
    547c:	00000045 	andeq	r0, r0, r5, asr #32
    5480:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    548c:	08e90100 	stmiaeq	r9!, {r8}^
    5490:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    5494:	26aa0000 	strtcs	r0, [sl], r0
    5498:	26a60000 	strtcs	r0, [r6], r0
    549c:	4f1f0000 	svcmi	0x001f0000
    54a0:	cc000045 	stcgt	0, cr0, [r0], {69}	; 0x45
    54a4:	ca000026 	bgt	5544 <_Min_Heap_Size+0x4d44>
    54a8:	20000026 	andcs	r0, r0, r6, lsr #32
    54ac:	00004569 	andeq	r4, r0, r9, ror #10
    54b0:	000026e1 	andeq	r2, r0, r1, ror #13
    54b4:	000026df 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    54b8:	001c0000 	andseq	r0, ip, r0
    54bc:	00000000 	andeq	r0, r0, r0
    54c0:	43000000 	movwmi	r0, #0
    54c4:	1d000025 	stcne	0, cr0, [r0, #-148]	; 0xffffff6c
    54c8:	006c6176 	rsbeq	r6, ip, r6, ror r1
    54cc:	0508ef01 	streq	lr, [r8, #-3841]	; 0xfffff0ff
    54d0:	000000c6 	andeq	r0, r0, r6, asr #1
    54d4:	000026f6 	strdeq	r2, [r0], -r6
    54d8:	000026f4 	strdeq	r2, [r0], -r4
    54dc:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    54ec:	01000000 	mrseq	r0, (UNDEF: 0)
    54f0:	030508ef 	movweq	r0, #22767	; 0x58ef
    54f4:	1f000025 	svcne	0x00000025
    54f8:	00004590 	muleq	r0, r0, r5
    54fc:	0000270f 	andeq	r2, r0, pc, lsl #14
    5500:	00002709 	andeq	r2, r0, r9, lsl #14
    5504:	00459d20 	subeq	r9, r5, r0, lsr #26
    5508:	00273e00 	eoreq	r3, r7, r0, lsl #28
    550c:	00273c00 	eoreq	r3, r7, r0, lsl #24
    5510:	3c210000 	stccc	0, cr0, [r1], #-0
    5514:	00000045 	andeq	r0, r0, r5, asr #32
    5518:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5524:	08ef0100 	stmiaeq	pc!, {r8}^	; <UNPREDICTABLE>
    5528:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    552c:	27550000 	ldrbcs	r0, [r5, -r0]
    5530:	27510000 	ldrbcs	r0, [r1, -r0]
    5534:	4f1f0000 	svcmi	0x001f0000
    5538:	77000045 	strvc	r0, [r0, -r5, asr #32]
    553c:	75000027 	strvc	r0, [r0, #-39]	; 0xffffffd9
    5540:	20000027 	andcs	r0, r0, r7, lsr #32
    5544:	00004569 	andeq	r4, r0, r9, ror #10
    5548:	0000278c 	andeq	r2, r0, ip, lsl #15
    554c:	0000278a 	andeq	r2, r0, sl, lsl #15
    5550:	001a0000 	andseq	r0, sl, r0
    5554:	0f000000 	svceq	0x00000000
    5558:	18000046 	stmdane	r0, {r1, r2, r6}
    555c:	00000000 	andeq	r0, r0, r0
    5560:	00001ac9 	andeq	r1, r0, r9, asr #21
    5564:	00002560 	andeq	r2, r0, r0, ror #10
    5568:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    556c:	23000074 	movwcs	r0, #116	; 0x74
    5570:	00000000 	andeq	r0, r0, r0
    5574:	00001ac9 	andeq	r1, r0, r9, asr #21
    5578:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    557c:	00000074 	andeq	r0, r0, r4, ror r0
    5580:	1365012c 	cmnne	r5, #44, 2
    5584:	93010000 	movwls	r0, #4096	; 0x1000
    5588:	3a011308 	bcc	4a1b0 <_Min_Heap_Size+0x499b0>
    558c:	00000002 	andeq	r0, r0, r2
    5590:	00000000 	andeq	r0, r0, r0
    5594:	9f000000 	svcls	0x00000000
    5598:	01000027 	tsteq	r0, r7, lsr #32
    559c:	00002704 	andeq	r2, r0, r4, lsl #14
    55a0:	0015c216 	andseq	ip, r5, r6, lsl r2
    55a4:	08930100 	ldmeq	r3, {r8}
    55a8:	00079641 	andeq	r9, r7, r1, asr #12
    55ac:	0027cd00 	eoreq	ip, r7, r0, lsl #26
    55b0:	0027bf00 	eoreq	fp, r7, r0, lsl #30
    55b4:	00001c00 	andeq	r1, r0, r0, lsl #24
    55b8:	00000000 	andeq	r0, r0, r0
    55bc:	263e0000 	ldrtcs	r0, [lr], -r0
    55c0:	761d0000 	ldrvc	r0, [sp], -r0
    55c4:	01006c61 	tsteq	r0, r1, ror #24
    55c8:	c6030896 			; <UNDEFINED> instruction: 0xc6030896
    55cc:	27000000 	strcs	r0, [r0, -r0]
    55d0:	25000028 	strcs	r0, [r0, #-40]	; 0xffffffd8
    55d4:	1e000028 	cdpne	0, 0, cr0, cr0, cr8, {1}
    55d8:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    55e8:	96010000 	strls	r0, [r1], -r0
    55ec:	25fe0308 	ldrbcs	r0, [lr, #776]!	; 0x308
    55f0:	901f0000 	andsls	r0, pc, r0
    55f4:	40000045 	andmi	r0, r0, r5, asr #32
    55f8:	3a000028 	bcc	56a0 <_Min_Heap_Size+0x4ea0>
    55fc:	20000028 	andcs	r0, r0, r8, lsr #32
    5600:	0000459d 	muleq	r0, sp, r5
    5604:	0000286f 	andeq	r2, r0, pc, ror #16
    5608:	0000286d 	andeq	r2, r0, sp, ror #16
    560c:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5610:	00000000 	andeq	r0, r0, r0
    5614:	00010000 	andeq	r0, r1, r0
	...
    5620:	03089601 	movweq	r9, #34305	; 0x8601
    5624:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5628:	00288600 	eoreq	r8, r8, r0, lsl #12
    562c:	00288200 	eoreq	r8, r8, r0, lsl #4
    5630:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4738 <_Min_Heap_Size+0x3f38>
    5634:	28a80000 	stmiacs	r8!, {}	; <UNPREDICTABLE>
    5638:	28a60000 	stmiacs	r6!, {}	; <UNPREDICTABLE>
    563c:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5640:	bd000045 	stclt	0, cr0, [r0, #-276]	; 0xfffffeec
    5644:	bb000028 	bllt	56ec <_Min_Heap_Size+0x4eec>
    5648:	00000028 	andeq	r0, r0, r8, lsr #32
    564c:	00001c00 	andeq	r1, r0, r0, lsl #24
    5650:	00000000 	andeq	r0, r0, r0
    5654:	26d60000 	ldrbcs	r0, [r6], r0
    5658:	761d0000 	ldrvc	r0, [sp], -r0
    565c:	01006c61 	tsteq	r0, r1, ror #24
    5660:	c605089b 			; <UNDEFINED> instruction: 0xc605089b
    5664:	d2000000 	andle	r0, r0, #0
    5668:	d0000028 	andle	r0, r0, r8, lsr #32
    566c:	1e000028 	cdpne	0, 0, cr0, cr0, cr8, {1}
    5670:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5680:	9b010000 	blls	45688 <_Min_Heap_Size+0x44e88>
    5684:	26960508 	ldrcs	r0, [r6], r8, lsl #10
    5688:	901f0000 	andsls	r0, pc, r0
    568c:	eb000045 	bl	57a8 <_Min_Heap_Size+0x4fa8>
    5690:	e5000028 	str	r0, [r0, #-40]	; 0xffffffd8
    5694:	20000028 	andcs	r0, r0, r8, lsr #32
    5698:	0000459d 	muleq	r0, sp, r5
    569c:	0000291a 	andeq	r2, r0, sl, lsl r9
    56a0:	00002918 	andeq	r2, r0, r8, lsl r9
    56a4:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    56a8:	00000000 	andeq	r0, r0, r0
    56ac:	00010000 	andeq	r0, r1, r0
	...
    56b8:	05089b01 	streq	r9, [r8, #-2817]	; 0xfffff4ff
    56bc:	00455c1f 	subeq	r5, r5, pc, lsl ip
    56c0:	00293100 	eoreq	r3, r9, r0, lsl #2
    56c4:	00292d00 	eoreq	r2, r9, r0, lsl #26
    56c8:	454f1f00 	strbmi	r1, [pc, #-3840]	; 47d0 <_Min_Heap_Size+0x3fd0>
    56cc:	29530000 	ldmdbcs	r3, {}^	; <UNPREDICTABLE>
    56d0:	29510000 	ldmdbcs	r1, {}^	; <UNPREDICTABLE>
    56d4:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    56d8:	68000045 	stmdavs	r0, {r0, r2, r6}
    56dc:	66000029 	strvs	r0, [r0], -r9, lsr #32
    56e0:	00000029 	andeq	r0, r0, r9, lsr #32
    56e4:	00001a00 	andeq	r1, r0, r0, lsl #20
    56e8:	460f0000 	strmi	r0, [pc], -r0
    56ec:	00180000 	andseq	r0, r8, r0
    56f0:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    56f4:	f300001a 	vqadd.u8	d0, d0, d10
    56f8:	19000026 	stmdbne	r0, {r1, r2, r5}
    56fc:	74025001 	strvc	r5, [r2], #-1
    5700:	00230000 	eoreq	r0, r3, r0
    5704:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    5708:	1900001a 	stmdbne	r0, {r1, r3, r4}
    570c:	74025001 	strvc	r5, [r2], #-1
    5710:	27000000 	strcs	r0, [r0, -r0]
    5714:	00147201 	andseq	r7, r4, r1, lsl #4
    5718:	080c0100 	stmdaeq	ip, {r8}
    571c:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    5728:	297b0000 	ldmdbcs	fp!, {}^	; <UNPREDICTABLE>
    572c:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    5730:	1600002a 	strne	r0, [r0], -sl, lsr #32
    5734:	000015c2 	andeq	r1, r0, r2, asr #11
    5738:	39080c01 	stmdbcc	r8, {r0, sl, fp}
    573c:	00000796 	muleq	r0, r6, r7
    5740:	000029a5 	andeq	r2, r0, r5, lsr #19
    5744:	0000299b 	muleq	r0, fp, r9
    5748:	00134317 	andseq	r4, r3, r7, lsl r3
    574c:	080e0100 	stmdaeq	lr, {r8}
    5750:	0000c60c 	andeq	ip, r0, ip, lsl #12
    5754:	0029f100 	eoreq	pc, r9, r0, lsl #2
    5758:	0029e700 	eoreq	lr, r9, r0, lsl #14
    575c:	00001c00 	andeq	r1, r0, r0, lsl #24
    5760:	00000000 	andeq	r0, r0, r0
    5764:	27e60000 	strbcs	r0, [r6, r0]!
    5768:	761d0000 	ldrvc	r0, [sp], -r0
    576c:	01006c61 	tsteq	r0, r1, ror #24
    5770:	c6030811 			; <UNDEFINED> instruction: 0xc6030811
    5774:	35000000 	strcc	r0, [r0, #-0]
    5778:	3300002a 	movwcc	r0, #42	; 0x2a
    577c:	1e00002a 	cdpne	0, 0, cr0, cr0, cr10, {1}
    5780:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5790:	11010000 	mrsne	r0, (UNDEF: 1)
    5794:	27a60308 	strcs	r0, [r6, r8, lsl #6]!
    5798:	901f0000 	andsls	r0, pc, r0
    579c:	4e000045 	cdpmi	0, 0, cr0, cr0, cr5, {2}
    57a0:	4800002a 	stmdami	r0, {r1, r3, r5}
    57a4:	2000002a 	andcs	r0, r0, sl, lsr #32
    57a8:	0000459d 	muleq	r0, sp, r5
    57ac:	00002a7d 	andeq	r2, r0, sp, ror sl
    57b0:	00002a7b 	andeq	r2, r0, fp, ror sl
    57b4:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    57b8:	00000000 	andeq	r0, r0, r0
    57bc:	00010000 	andeq	r0, r1, r0
	...
    57c8:	03081101 	movweq	r1, #33025	; 0x8101
    57cc:	00455c1f 	subeq	r5, r5, pc, lsl ip
    57d0:	002a9400 	eoreq	r9, sl, r0, lsl #8
    57d4:	002a9000 	eoreq	r9, sl, r0
    57d8:	454f1f00 	strbmi	r1, [pc, #-3840]	; 48e0 <_Min_Heap_Size+0x40e0>
    57dc:	2ab60000 	bcs	fed857e4 <_estack+0xded7be44>
    57e0:	2ab40000 	bcs	fed057e8 <_estack+0xdecfbe48>
    57e4:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    57e8:	cb000045 	blgt	5904 <_Min_Heap_Size+0x5104>
    57ec:	c900002a 	stmdbgt	r0, {r1, r3, r5}
    57f0:	0000002a 	andeq	r0, r0, sl, lsr #32
    57f4:	00001c00 	andeq	r1, r0, r0, lsl #24
    57f8:	00000000 	andeq	r0, r0, r0
    57fc:	287e0000 	ldmdacs	lr!, {}^	; <UNPREDICTABLE>
    5800:	761d0000 	ldrvc	r0, [sp], -r0
    5804:	01006c61 	tsteq	r0, r1, ror #24
    5808:	c6030812 			; <UNDEFINED> instruction: 0xc6030812
    580c:	e0000000 	and	r0, r0, r0
    5810:	de00002a 	cdple	0, 0, cr0, cr0, cr10, {1}
    5814:	1e00002a 	cdpne	0, 0, cr0, cr0, cr10, {1}
    5818:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5828:	12010000 	andne	r0, r1, #0
    582c:	283e0308 	ldmdacs	lr!, {r3, r8, r9}
    5830:	901f0000 	andsls	r0, pc, r0
    5834:	f9000045 			; <UNDEFINED> instruction: 0xf9000045
    5838:	f300002a 	vhadd.u8	d0, d0, d26
    583c:	2000002a 	andcs	r0, r0, sl, lsr #32
    5840:	0000459d 	muleq	r0, sp, r5
    5844:	00002b28 	andeq	r2, r0, r8, lsr #22
    5848:	00002b26 	andeq	r2, r0, r6, lsr #22
    584c:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5850:	00000000 	andeq	r0, r0, r0
    5854:	00010000 	andeq	r0, r1, r0
	...
    5860:	03081201 	movweq	r1, #33281	; 0x8201
    5864:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5868:	002b3f00 	eoreq	r3, fp, r0, lsl #30
    586c:	002b3b00 	eoreq	r3, fp, r0, lsl #22
    5870:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4978 <_Min_Heap_Size+0x4178>
    5874:	2b610000 	blcs	184587c <_Min_Heap_Size+0x184507c>
    5878:	2b5f0000 	blcs	17c5880 <_Min_Heap_Size+0x17c5080>
    587c:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5880:	76000045 	strvc	r0, [r0], -r5, asr #32
    5884:	7400002b 	strvc	r0, [r0], #-43	; 0xffffffd5
    5888:	0000002b 	andeq	r0, r0, fp, lsr #32
    588c:	00001c00 	andeq	r1, r0, r0, lsl #24
    5890:	00000000 	andeq	r0, r0, r0
    5894:	29160000 	ldmdbcs	r6, {}	; <UNPREDICTABLE>
    5898:	761d0000 	ldrvc	r0, [sp], -r0
    589c:	01006c61 	tsteq	r0, r1, ror #24
    58a0:	c6050817 			; <UNDEFINED> instruction: 0xc6050817
    58a4:	8b000000 	blhi	58ac <_Min_Heap_Size+0x50ac>
    58a8:	8900002b 	stmdbhi	r0, {r0, r1, r3, r5}
    58ac:	1e00002b 	cdpne	0, 0, cr0, cr0, cr11, {1}
    58b0:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    58c0:	17010000 	strne	r0, [r1, -r0]
    58c4:	28d60508 	ldmcs	r6, {r3, r8, sl}^
    58c8:	901f0000 	andsls	r0, pc, r0
    58cc:	a4000045 	strge	r0, [r0], #-69	; 0xffffffbb
    58d0:	9e00002b 	cdpls	0, 0, cr0, cr0, cr11, {1}
    58d4:	2000002b 	andcs	r0, r0, fp, lsr #32
    58d8:	0000459d 	muleq	r0, sp, r5
    58dc:	00002bd3 	ldrdeq	r2, [r0], -r3
    58e0:	00002bd1 	ldrdeq	r2, [r0], -r1
    58e4:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    58e8:	00000000 	andeq	r0, r0, r0
    58ec:	00010000 	andeq	r0, r1, r0
	...
    58f8:	05081701 	streq	r1, [r8, #-1793]	; 0xfffff8ff
    58fc:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5900:	002bea00 	eoreq	lr, fp, r0, lsl #20
    5904:	002be600 	eoreq	lr, fp, r0, lsl #12
    5908:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4a10 <_Min_Heap_Size+0x4210>
    590c:	2c0c0000 	stccs	0, cr0, [ip], {-0}
    5910:	2c0a0000 	stccs	0, cr0, [sl], {-0}
    5914:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5918:	21000045 	tstcs	r0, r5, asr #32
    591c:	1f00002c 	svcne	0x0000002c
    5920:	0000002c 	andeq	r0, r0, ip, lsr #32
    5924:	00001c00 	andeq	r1, r0, r0, lsl #24
    5928:	00000000 	andeq	r0, r0, r0
    592c:	29ae0000 	stmibcs	lr!, {}	; <UNPREDICTABLE>
    5930:	761d0000 	ldrvc	r0, [sp], -r0
    5934:	01006c61 	tsteq	r0, r1, ror #24
    5938:	c605083d 			; <UNDEFINED> instruction: 0xc605083d
    593c:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    5940:	3400002c 	strcc	r0, [r0], #-44	; 0xffffffd4
    5944:	1e00002c 	cdpne	0, 0, cr0, cr0, cr12, {1}
    5948:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5958:	3d010000 	stccc	0, cr0, [r1, #-0]
    595c:	296e0508 	stmdbcs	lr!, {r3, r8, sl}^
    5960:	901f0000 	andsls	r0, pc, r0
    5964:	5c000045 	stcpl	0, cr0, [r0], {69}	; 0x45
    5968:	5600002c 	strpl	r0, [r0], -ip, lsr #32
    596c:	2000002c 	andcs	r0, r0, ip, lsr #32
    5970:	0000459d 	muleq	r0, sp, r5
    5974:	00002c8b 	andeq	r2, r0, fp, lsl #25
    5978:	00002c89 	andeq	r2, r0, r9, lsl #25
    597c:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5980:	00000000 	andeq	r0, r0, r0
    5984:	00010000 	andeq	r0, r1, r0
	...
    5990:	05083d01 	streq	r3, [r8, #-3329]	; 0xfffff2ff
    5994:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5998:	002ca200 	eoreq	sl, ip, r0, lsl #4
    599c:	002c9e00 	eoreq	r9, ip, r0, lsl #28
    59a0:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4aa8 <_Min_Heap_Size+0x42a8>
    59a4:	2cc40000 	stclcs	0, cr0, [r4], {0}
    59a8:	2cc20000 	stclcs	0, cr0, [r2], {0}
    59ac:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    59b0:	d9000045 	stmdble	r0, {r0, r2, r6}
    59b4:	d700002c 	strle	r0, [r0, -ip, lsr #32]
    59b8:	0000002c 	andeq	r0, r0, ip, lsr #32
    59bc:	00001c00 	andeq	r1, r0, r0, lsl #24
    59c0:	00000000 	andeq	r0, r0, r0
    59c4:	2a460000 	bcs	11859cc <_Min_Heap_Size+0x11851cc>
    59c8:	761d0000 	ldrvc	r0, [sp], -r0
    59cc:	01006c61 	tsteq	r0, r1, ror #24
    59d0:	c6050854 			; <UNDEFINED> instruction: 0xc6050854
    59d4:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    59d8:	ec00002c 	stc	0, cr0, [r0], {44}	; 0x2c
    59dc:	1e00002c 	cdpne	0, 0, cr0, cr0, cr12, {1}
    59e0:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    59f0:	54010000 	strpl	r0, [r1], #-0
    59f4:	2a060508 	bcs	186e1c <_Min_Heap_Size+0x18661c>
    59f8:	901f0000 	andsls	r0, pc, r0
    59fc:	07000045 	streq	r0, [r0, -r5, asr #32]
    5a00:	0100002d 	tsteq	r0, sp, lsr #32
    5a04:	2000002d 	andcs	r0, r0, sp, lsr #32
    5a08:	0000459d 	muleq	r0, sp, r5
    5a0c:	00002d36 	andeq	r2, r0, r6, lsr sp
    5a10:	00002d34 	andeq	r2, r0, r4, lsr sp
    5a14:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5a18:	00000000 	andeq	r0, r0, r0
    5a1c:	00010000 	andeq	r0, r1, r0
	...
    5a28:	05085401 	streq	r5, [r8, #-1025]	; 0xfffffbff
    5a2c:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5a30:	002d4d00 	eoreq	r4, sp, r0, lsl #26
    5a34:	002d4900 	eoreq	r4, sp, r0, lsl #18
    5a38:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4b40 <_Min_Heap_Size+0x4340>
    5a3c:	2d6f0000 	stclcs	0, cr0, [pc, #-0]	; 5a44 <_Min_Heap_Size+0x5244>
    5a40:	2d6d0000 	stclcs	0, cr0, [sp, #-0]
    5a44:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5a48:	84000045 	strhi	r0, [r0], #-69	; 0xffffffbb
    5a4c:	8200002d 	andhi	r0, r0, #45	; 0x2d
    5a50:	0000002d 	andeq	r0, r0, sp, lsr #32
    5a54:	00001a00 	andeq	r1, r0, r0, lsl #20
    5a58:	460f0000 	strmi	r0, [pc], -r0
    5a5c:	001a0000 	andseq	r0, sl, r0
    5a60:	0f000000 	svceq	0x00000000
    5a64:	23000046 	movwcs	r0, #70	; 0x46
    5a68:	00000000 	andeq	r0, r0, r0
    5a6c:	00001b1f 	andeq	r1, r0, pc, lsl fp
    5a70:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    5a74:	00000074 	andeq	r0, r0, r4, ror r0
    5a78:	11eb0127 	mvnne	r0, r7, lsr #2
    5a7c:	cf010000 	svcgt	0x00010000
    5a80:	3a011307 	bcc	4a6a4 <_Min_Heap_Size+0x49ea4>
    5a84:	00000002 	andeq	r0, r0, r2
    5a88:	00000000 	andeq	r0, r0, r0
    5a8c:	97000000 	strls	r0, [r0, -r0]
    5a90:	0100002d 	tsteq	r0, sp, lsr #32
    5a94:	00002d11 	andeq	r2, r0, r1, lsl sp
    5a98:	0015c216 	andseq	ip, r5, r6, lsl r2
    5a9c:	07cf0100 	strbeq	r0, [pc, r0, lsl #2]
    5aa0:	0007963d 	andeq	r9, r7, sp, lsr r6
    5aa4:	002dbf00 	eoreq	fp, sp, r0, lsl #30
    5aa8:	002db700 	eoreq	fp, sp, r0, lsl #14
    5aac:	00001c00 	andeq	r1, r0, r0, lsl #24
    5ab0:	00000000 	andeq	r0, r0, r0
    5ab4:	2b360000 	blcs	d85abc <_Min_Heap_Size+0xd852bc>
    5ab8:	761d0000 	ldrvc	r0, [sp], -r0
    5abc:	01006c61 	tsteq	r0, r1, ror #24
    5ac0:	c60307d2 			; <UNDEFINED> instruction: 0xc60307d2
    5ac4:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    5ac8:	f300002d 	vhadd.u8	d0, d0, d29
    5acc:	1e00002d 	cdpne	0, 0, cr0, cr0, cr13, {1}
    5ad0:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5ae0:	d2010000 	andle	r0, r1, #0
    5ae4:	2af60307 	bcs	ffd86708 <_estack+0xdfd7cd68>
    5ae8:	901f0000 	andsls	r0, pc, r0
    5aec:	0e000045 	cdpeq	0, 0, cr0, cr0, cr5, {2}
    5af0:	0800002e 	stmdaeq	r0, {r1, r2, r3, r5}
    5af4:	2000002e 	andcs	r0, r0, lr, lsr #32
    5af8:	0000459d 	muleq	r0, sp, r5
    5afc:	00002e3d 	andeq	r2, r0, sp, lsr lr
    5b00:	00002e3b 	andeq	r2, r0, fp, lsr lr
    5b04:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5b08:	00000000 	andeq	r0, r0, r0
    5b0c:	00010000 	andeq	r0, r1, r0
	...
    5b18:	0307d201 	movweq	sp, #29185	; 0x7201
    5b1c:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5b20:	002e5400 	eoreq	r5, lr, r0, lsl #8
    5b24:	002e5000 	eoreq	r5, lr, r0
    5b28:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4c30 <_Min_Heap_Size+0x4430>
    5b2c:	2e760000 	cdpcs	0, 7, cr0, cr6, cr0, {0}
    5b30:	2e740000 	cdpcs	0, 7, cr0, cr4, cr0, {0}
    5b34:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5b38:	8b000045 	blhi	5c54 <_Min_Heap_Size+0x5454>
    5b3c:	8900002e 	stmdbhi	r0, {r1, r2, r3, r5}
    5b40:	0000002e 	andeq	r0, r0, lr, lsr #32
    5b44:	00001c00 	andeq	r1, r0, r0, lsl #24
    5b48:	00000000 	andeq	r0, r0, r0
    5b4c:	2bce0000 	blcs	ff385b54 <_estack+0xdf37c1b4>
    5b50:	761d0000 	ldrvc	r0, [sp], -r0
    5b54:	01006c61 	tsteq	r0, r1, ror #24
    5b58:	c60307d3 			; <UNDEFINED> instruction: 0xc60307d3
    5b5c:	a0000000 	andge	r0, r0, r0
    5b60:	9e00002e 	cdpls	0, 0, cr0, cr0, cr14, {1}
    5b64:	1e00002e 	cdpne	0, 0, cr0, cr0, cr14, {1}
    5b68:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5b78:	d3010000 	movwle	r0, #4096	; 0x1000
    5b7c:	2b8e0307 	blcs	fe3867a0 <_estack+0xde37ce00>
    5b80:	901f0000 	andsls	r0, pc, r0
    5b84:	b9000045 	stmdblt	r0, {r0, r2, r6}
    5b88:	b300002e 	movwlt	r0, #46	; 0x2e
    5b8c:	2000002e 	andcs	r0, r0, lr, lsr #32
    5b90:	0000459d 	muleq	r0, sp, r5
    5b94:	00002ee8 	andeq	r2, r0, r8, ror #29
    5b98:	00002ee6 	andeq	r2, r0, r6, ror #29
    5b9c:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5ba0:	00000000 	andeq	r0, r0, r0
    5ba4:	00010000 	andeq	r0, r1, r0
	...
    5bb0:	0307d301 	movweq	sp, #29441	; 0x7301
    5bb4:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5bb8:	002eff00 	eoreq	pc, lr, r0, lsl #30
    5bbc:	002efb00 	eoreq	pc, lr, r0, lsl #22
    5bc0:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4cc8 <_Min_Heap_Size+0x44c8>
    5bc4:	2f210000 	svccs	0x00210000
    5bc8:	2f1f0000 	svccs	0x001f0000
    5bcc:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5bd0:	36000045 	strcc	r0, [r0], -r5, asr #32
    5bd4:	3400002f 	strcc	r0, [r0], #-47	; 0xffffffd1
    5bd8:	0000002f 	andeq	r0, r0, pc, lsr #32
    5bdc:	00001c00 	andeq	r1, r0, r0, lsl #24
    5be0:	00000000 	andeq	r0, r0, r0
    5be4:	2c660000 	stclcs	0, cr0, [r6], #-0
    5be8:	761d0000 	ldrvc	r0, [sp], -r0
    5bec:	01006c61 	tsteq	r0, r1, ror #24
    5bf0:	c60507d8 			; <UNDEFINED> instruction: 0xc60507d8
    5bf4:	4b000000 	blmi	5bfc <_Min_Heap_Size+0x53fc>
    5bf8:	4900002f 	stmdbmi	r0, {r0, r1, r2, r3, r5}
    5bfc:	1e00002f 	cdpne	0, 0, cr0, cr0, cr15, {1}
    5c00:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5c10:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    5c14:	2c260507 	cfstr32cs	mvfx0, [r6], #-28	; 0xffffffe4
    5c18:	901f0000 	andsls	r0, pc, r0
    5c1c:	64000045 	strvs	r0, [r0], #-69	; 0xffffffbb
    5c20:	5e00002f 	cdppl	0, 0, cr0, cr0, cr15, {1}
    5c24:	2000002f 	andcs	r0, r0, pc, lsr #32
    5c28:	0000459d 	muleq	r0, sp, r5
    5c2c:	00002f93 	muleq	r0, r3, pc	; <UNPREDICTABLE>
    5c30:	00002f91 	muleq	r0, r1, pc	; <UNPREDICTABLE>
    5c34:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5c38:	00000000 	andeq	r0, r0, r0
    5c3c:	00010000 	andeq	r0, r1, r0
	...
    5c48:	0507d801 	streq	sp, [r7, #-2049]	; 0xfffff7ff
    5c4c:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5c50:	002faa00 	eoreq	sl, pc, r0, lsl #20
    5c54:	002fa600 	eoreq	sl, pc, r0, lsl #12
    5c58:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4d60 <_Min_Heap_Size+0x4560>
    5c5c:	2fcc0000 	svccs	0x00cc0000
    5c60:	2fca0000 	svccs	0x00ca0000
    5c64:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5c68:	e1000045 	crc32b	r0, r0, r5
    5c6c:	df00002f 	svcle	0x0000002f
    5c70:	0000002f 	andeq	r0, r0, pc, lsr #32
    5c74:	00001c00 	andeq	r1, r0, r0, lsl #24
    5c78:	00000000 	andeq	r0, r0, r0
    5c7c:	2cfe0000 	ldclcs	0, cr0, [lr]
    5c80:	761d0000 	ldrvc	r0, [sp], -r0
    5c84:	01006c61 	tsteq	r0, r1, ror #24
    5c88:	c60507de 			; <UNDEFINED> instruction: 0xc60507de
    5c8c:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    5c90:	f400002f 	vst4.8	{d0-d3}, [r0 :128]
    5c94:	1e00002f 	cdpne	0, 0, cr0, cr0, cr15, {1}
    5c98:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5ca8:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    5cac:	2cbe0507 	cfldr32cs	mvfx0, [lr], #28
    5cb0:	901f0000 	andsls	r0, pc, r0
    5cb4:	0f000045 	svceq	0x00000045
    5cb8:	09000030 	stmdbeq	r0, {r4, r5}
    5cbc:	20000030 	andcs	r0, r0, r0, lsr r0
    5cc0:	0000459d 	muleq	r0, sp, r5
    5cc4:	0000303e 	andeq	r3, r0, lr, lsr r0
    5cc8:	0000303c 	andeq	r3, r0, ip, lsr r0
    5ccc:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5cd0:	00000000 	andeq	r0, r0, r0
    5cd4:	00010000 	andeq	r0, r1, r0
	...
    5ce0:	0507de01 	streq	sp, [r7, #-3585]	; 0xfffff1ff
    5ce4:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5ce8:	00305500 	eorseq	r5, r0, r0, lsl #10
    5cec:	00305100 	eorseq	r5, r0, r0, lsl #2
    5cf0:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4df8 <_Min_Heap_Size+0x45f8>
    5cf4:	30770000 	rsbscc	r0, r7, r0
    5cf8:	30750000 	rsbscc	r0, r5, r0
    5cfc:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5d00:	8c000045 	stchi	0, cr0, [r0], {69}	; 0x45
    5d04:	8a000030 	bhi	5dcc <_Min_Heap_Size+0x55cc>
    5d08:	00000030 	andeq	r0, r0, r0, lsr r0
    5d0c:	00001a00 	andeq	r1, r0, r0, lsl #20
    5d10:	46000000 	strmi	r0, [r0], -r0
    5d14:	001a0000 	andseq	r0, sl, r0
    5d18:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    5d1c:	00000046 	andeq	r0, r0, r6, asr #32
    5d20:	152b0127 	strne	r0, [fp, #-295]!	; 0xfffffed9
    5d24:	9c010000 	stcls	0, cr0, [r1], {-0}
    5d28:	3a011307 	bcc	4a94c <_Min_Heap_Size+0x4a14c>
    5d2c:	00000002 	andeq	r0, r0, r2
    5d30:	00000000 	andeq	r0, r0, r0
    5d34:	9f000000 	svcls	0x00000000
    5d38:	01000030 	tsteq	r0, r0, lsr r0
    5d3c:	00002e89 	andeq	r2, r0, r9, lsl #29
    5d40:	0015c216 	andseq	ip, r5, r6, lsl r2
    5d44:	079c0100 	ldreq	r0, [ip, r0, lsl #2]
    5d48:	0007963e 	andeq	r9, r7, lr, lsr r6
    5d4c:	0030c300 	eorseq	ip, r0, r0, lsl #6
    5d50:	0030bf00 	eorseq	fp, r0, r0, lsl #30
    5d54:	00001c00 	andeq	r1, r0, r0, lsl #24
    5d58:	00000000 	andeq	r0, r0, r0
    5d5c:	2dde0000 	ldclcs	0, cr0, [lr]
    5d60:	761d0000 	ldrvc	r0, [sp], -r0
    5d64:	01006c61 	tsteq	r0, r1, ror #24
    5d68:	c603079f 			; <UNDEFINED> instruction: 0xc603079f
    5d6c:	e3000000 	movw	r0, #0
    5d70:	e1000030 	tst	r0, r0, lsr r0
    5d74:	1e000030 	mcrne	0, 0, r0, cr0, cr0, {1}
    5d78:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5d88:	9f010000 	svcls	0x00010000
    5d8c:	2d9e0307 	ldccs	3, cr0, [lr, #28]
    5d90:	901f0000 	andsls	r0, pc, r0
    5d94:	fc000045 	stc2	0, cr0, [r0], {69}	; 0x45
    5d98:	f6000030 			; <UNDEFINED> instruction: 0xf6000030
    5d9c:	20000030 	andcs	r0, r0, r0, lsr r0
    5da0:	0000459d 	muleq	r0, sp, r5
    5da4:	0000312b 	andeq	r3, r0, fp, lsr #2
    5da8:	00003129 	andeq	r3, r0, r9, lsr #2
    5dac:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5db0:	00000000 	andeq	r0, r0, r0
    5db4:	00010000 	andeq	r0, r1, r0
	...
    5dc0:	03079f01 	movweq	r9, #32513	; 0x7f01
    5dc4:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5dc8:	00314200 	eorseq	r4, r1, r0, lsl #4
    5dcc:	00313e00 	eorseq	r3, r1, r0, lsl #28
    5dd0:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4ed8 <_Min_Heap_Size+0x46d8>
    5dd4:	31640000 	cmncc	r4, r0
    5dd8:	31620000 	cmncc	r2, r0
    5ddc:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5de0:	79000045 	stmdbvc	r0, {r0, r2, r6}
    5de4:	77000031 	smladxvc	r0, r1, r0, r0
    5de8:	00000031 	andeq	r0, r0, r1, lsr r0
    5dec:	00001c00 	andeq	r1, r0, r0, lsl #24
    5df0:	00000000 	andeq	r0, r0, r0
    5df4:	2e760000 	cdpcs	0, 7, cr0, cr6, cr0, {0}
    5df8:	761d0000 	ldrvc	r0, [sp], -r0
    5dfc:	01006c61 	tsteq	r0, r1, ror #24
    5e00:	c60507a4 	strgt	r0, [r5], -r4, lsr #15
    5e04:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    5e08:	8c000031 	stchi	0, cr0, [r0], {49}	; 0x31
    5e0c:	1e000031 	mcrne	0, 0, r0, cr0, cr1, {1}
    5e10:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5e20:	a4010000 	strge	r0, [r1], #-0
    5e24:	2e360507 	cdpcs	5, 3, cr0, cr6, cr7, {0}
    5e28:	901f0000 	andsls	r0, pc, r0
    5e2c:	a7000045 	strge	r0, [r0, -r5, asr #32]
    5e30:	a1000031 	tstge	r0, r1, lsr r0
    5e34:	20000031 	andcs	r0, r0, r1, lsr r0
    5e38:	0000459d 	muleq	r0, sp, r5
    5e3c:	000031d6 	ldrdeq	r3, [r0], -r6
    5e40:	000031d4 	ldrdeq	r3, [r0], -r4
    5e44:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5e48:	00000000 	andeq	r0, r0, r0
    5e4c:	00010000 	andeq	r0, r1, r0
	...
    5e58:	0507a401 	streq	sl, [r7, #-1025]	; 0xfffffbff
    5e5c:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5e60:	0031ed00 	eorseq	lr, r1, r0, lsl #26
    5e64:	0031e900 	eorseq	lr, r1, r0, lsl #18
    5e68:	454f1f00 	strbmi	r1, [pc, #-3840]	; 4f70 <_Min_Heap_Size+0x4770>
    5e6c:	320f0000 	andcc	r0, pc, #0
    5e70:	320d0000 	andcc	r0, sp, #0
    5e74:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5e78:	24000045 	strcs	r0, [r0], #-69	; 0xffffffbb
    5e7c:	22000032 	andcs	r0, r0, #50	; 0x32
    5e80:	00000032 	andeq	r0, r0, r2, lsr r0
    5e84:	00001a00 	andeq	r1, r0, r0, lsl #20
    5e88:	46000000 	strmi	r0, [r0], -r0
    5e8c:	001a0000 	andseq	r0, sl, r0
    5e90:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    5e94:	00000046 	andeq	r0, r0, r6, asr #32
    5e98:	17bf0127 	ldrne	r0, [pc, r7, lsr #2]!
    5e9c:	43010000 	movwmi	r0, #4096	; 0x1000
    5ea0:	3a011307 	bcc	4aac4 <_Min_Heap_Size+0x4a2c4>
    5ea4:	00000002 	andeq	r0, r0, r2
    5ea8:	00000000 	andeq	r0, r0, r0
    5eac:	37000000 	strcc	r0, [r0, -r0]
    5eb0:	01000032 	tsteq	r0, r2, lsr r0
    5eb4:	000031db 	ldrdeq	r3, [r0], -fp
    5eb8:	0015c216 	andseq	ip, r5, r6, lsl r2
    5ebc:	07430100 	strbeq	r0, [r3, -r0, lsl #2]
    5ec0:	00079636 	andeq	r9, r7, r6, lsr r6
    5ec4:	00325f00 	eorseq	r5, r2, r0, lsl #30
    5ec8:	00325700 	eorseq	r5, r2, r0, lsl #14
    5ecc:	00001c00 	andeq	r1, r0, r0, lsl #24
    5ed0:	00000000 	andeq	r0, r0, r0
    5ed4:	2f560000 	svccs	0x00560000
    5ed8:	761d0000 	ldrvc	r0, [sp], -r0
    5edc:	01006c61 	tsteq	r0, r1, ror #24
    5ee0:	c6030746 	strgt	r0, [r3], -r6, asr #14
    5ee4:	95000000 	strls	r0, [r0, #-0]
    5ee8:	93000032 	movwls	r0, #50	; 0x32
    5eec:	1e000032 	mcrne	0, 0, r0, cr0, cr2, {1}
    5ef0:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5f00:	46010000 	strmi	r0, [r1], -r0
    5f04:	2f160307 	svccs	0x00160307
    5f08:	901f0000 	andsls	r0, pc, r0
    5f0c:	ae000045 	cdpge	0, 0, cr0, cr0, cr5, {2}
    5f10:	a8000032 	stmdage	r0, {r1, r4, r5}
    5f14:	20000032 	andcs	r0, r0, r2, lsr r0
    5f18:	0000459d 	muleq	r0, sp, r5
    5f1c:	000032dd 	ldrdeq	r3, [r0], -sp
    5f20:	000032db 	ldrdeq	r3, [r0], -fp
    5f24:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5f28:	00000000 	andeq	r0, r0, r0
    5f2c:	00010000 	andeq	r0, r1, r0
	...
    5f38:	03074601 	movweq	r4, #30209	; 0x7601
    5f3c:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5f40:	0032f400 	eorseq	pc, r2, r0, lsl #8
    5f44:	0032f000 	eorseq	pc, r2, r0
    5f48:	454f1f00 	strbmi	r1, [pc, #-3840]	; 5050 <_Min_Heap_Size+0x4850>
    5f4c:	33160000 	tstcc	r6, #0
    5f50:	33140000 	tstcc	r4, #0
    5f54:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5f58:	2b000045 	blcs	6074 <_Min_Heap_Size+0x5874>
    5f5c:	29000033 	stmdbcs	r0, {r0, r1, r4, r5}
    5f60:	00000033 	andeq	r0, r0, r3, lsr r0
    5f64:	00001c00 	andeq	r1, r0, r0, lsl #24
    5f68:	00000000 	andeq	r0, r0, r0
    5f6c:	2fee0000 	svccs	0x00ee0000
    5f70:	761d0000 	ldrvc	r0, [sp], -r0
    5f74:	01006c61 	tsteq	r0, r1, ror #24
    5f78:	c6030747 	strgt	r0, [r3], -r7, asr #14
    5f7c:	40000000 	andmi	r0, r0, r0
    5f80:	3e000033 	mcrcc	0, 0, r0, cr0, cr3, {1}
    5f84:	1e000033 	mcrne	0, 0, r0, cr0, cr3, {1}
    5f88:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    5f98:	47010000 	strmi	r0, [r1, -r0]
    5f9c:	2fae0307 	svccs	0x00ae0307
    5fa0:	901f0000 	andsls	r0, pc, r0
    5fa4:	59000045 	stmdbpl	r0, {r0, r2, r6}
    5fa8:	53000033 	movwpl	r0, #51	; 0x33
    5fac:	20000033 	andcs	r0, r0, r3, lsr r0
    5fb0:	0000459d 	muleq	r0, sp, r5
    5fb4:	00003388 	andeq	r3, r0, r8, lsl #7
    5fb8:	00003386 	andeq	r3, r0, r6, lsl #7
    5fbc:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    5fc0:	00000000 	andeq	r0, r0, r0
    5fc4:	00010000 	andeq	r0, r1, r0
	...
    5fd0:	03074701 	movweq	r4, #30465	; 0x7701
    5fd4:	00455c1f 	subeq	r5, r5, pc, lsl ip
    5fd8:	00339f00 	eorseq	r9, r3, r0, lsl #30
    5fdc:	00339b00 	eorseq	r9, r3, r0, lsl #22
    5fe0:	454f1f00 	strbmi	r1, [pc, #-3840]	; 50e8 <_Min_Heap_Size+0x48e8>
    5fe4:	33c10000 	biccc	r0, r1, #0
    5fe8:	33bf0000 			; <UNDEFINED> instruction: 0x33bf0000
    5fec:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    5ff0:	d6000045 	strle	r0, [r0], -r5, asr #32
    5ff4:	d4000033 	strle	r0, [r0], #-51	; 0xffffffcd
    5ff8:	00000033 	andeq	r0, r0, r3, lsr r0
    5ffc:	00001c00 	andeq	r1, r0, r0, lsl #24
    6000:	00000000 	andeq	r0, r0, r0
    6004:	30860000 	addcc	r0, r6, r0
    6008:	761d0000 	ldrvc	r0, [sp], -r0
    600c:	01006c61 	tsteq	r0, r1, ror #24
    6010:	c605074c 	strgt	r0, [r5], -ip, asr #14
    6014:	eb000000 	bl	601c <_Min_Heap_Size+0x581c>
    6018:	e9000033 	stmdb	r0, {r0, r1, r4, r5}
    601c:	1e000033 	mcrne	0, 0, r0, cr0, cr3, {1}
    6020:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6030:	4c010000 	stcmi	0, cr0, [r1], {-0}
    6034:	30460507 	subcc	r0, r6, r7, lsl #10
    6038:	901f0000 	andsls	r0, pc, r0
    603c:	04000045 	streq	r0, [r0], #-69	; 0xffffffbb
    6040:	fe000034 	mcr2	0, 0, r0, cr0, cr4, {1}
    6044:	20000033 	andcs	r0, r0, r3, lsr r0
    6048:	0000459d 	muleq	r0, sp, r5
    604c:	00003433 	andeq	r3, r0, r3, lsr r4
    6050:	00003431 	andeq	r3, r0, r1, lsr r4
    6054:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    6058:	00000000 	andeq	r0, r0, r0
    605c:	00010000 	andeq	r0, r1, r0
	...
    6068:	05074c01 	streq	r4, [r7, #-3073]	; 0xfffff3ff
    606c:	00455c1f 	subeq	r5, r5, pc, lsl ip
    6070:	00344a00 	eorseq	r4, r4, r0, lsl #20
    6074:	00344600 	eorseq	r4, r4, r0, lsl #12
    6078:	454f1f00 	strbmi	r1, [pc, #-3840]	; 5180 <_Min_Heap_Size+0x4980>
    607c:	346c0000 	strbtcc	r0, [ip], #-0
    6080:	346a0000 	strbtcc	r0, [sl], #-0
    6084:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6088:	81000045 	tsthi	r0, r5, asr #32
    608c:	7f000034 	svcvc	0x00000034
    6090:	00000034 	andeq	r0, r0, r4, lsr r0
    6094:	00001c00 	andeq	r1, r0, r0, lsl #24
    6098:	00000000 	andeq	r0, r0, r0
    609c:	311e0000 	tstcc	lr, r0
    60a0:	761d0000 	ldrvc	r0, [sp], -r0
    60a4:	01006c61 	tsteq	r0, r1, ror #24
    60a8:	c6050752 			; <UNDEFINED> instruction: 0xc6050752
    60ac:	96000000 	strls	r0, [r0], -r0
    60b0:	94000034 	strls	r0, [r0], #-52	; 0xffffffcc
    60b4:	1e000034 	mcrne	0, 0, r0, cr0, cr4, {1}
    60b8:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    60c8:	52010000 	andpl	r0, r1, #0
    60cc:	30de0507 	sbcscc	r0, lr, r7, lsl #10
    60d0:	901f0000 	andsls	r0, pc, r0
    60d4:	af000045 	svcge	0x00000045
    60d8:	a9000034 	stmdbge	r0, {r2, r4, r5}
    60dc:	20000034 	andcs	r0, r0, r4, lsr r0
    60e0:	0000459d 	muleq	r0, sp, r5
    60e4:	000034de 	ldrdeq	r3, [r0], -lr
    60e8:	000034dc 	ldrdeq	r3, [r0], -ip
    60ec:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    60f0:	00000000 	andeq	r0, r0, r0
    60f4:	00010000 	andeq	r0, r1, r0
	...
    6100:	05075201 	streq	r5, [r7, #-513]	; 0xfffffdff
    6104:	00455c1f 	subeq	r5, r5, pc, lsl ip
    6108:	0034f500 	eorseq	pc, r4, r0, lsl #10
    610c:	0034f100 	eorseq	pc, r4, r0, lsl #2
    6110:	454f1f00 	strbmi	r1, [pc, #-3840]	; 5218 <_Min_Heap_Size+0x4a18>
    6114:	35170000 	ldrcc	r0, [r7, #-0]
    6118:	35150000 	ldrcc	r0, [r5, #-0]
    611c:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    6120:	2c000045 	stccs	0, cr0, [r0], {69}	; 0x45
    6124:	2a000035 	bcs	6200 <_Min_Heap_Size+0x5a00>
    6128:	00000035 	andeq	r0, r0, r5, lsr r0
    612c:	00001c00 	andeq	r1, r0, r0, lsl #24
    6130:	00000000 	andeq	r0, r0, r0
    6134:	31b60000 			; <UNDEFINED> instruction: 0x31b60000
    6138:	761d0000 	ldrvc	r0, [sp], -r0
    613c:	01006c61 	tsteq	r0, r1, ror #24
    6140:	c605076b 	strgt	r0, [r5], -fp, ror #14
    6144:	41000000 	mrsmi	r0, (UNDEF: 0)
    6148:	3f000035 	svccc	0x00000035
    614c:	1e000035 	mcrne	0, 0, r0, cr0, cr5, {1}
    6150:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    6160:	6b010000 	blvs	46168 <_Min_Heap_Size+0x45968>
    6164:	31760507 	cmncc	r6, r7, lsl #10
    6168:	901f0000 	andsls	r0, pc, r0
    616c:	5a000045 	bpl	6288 <_Min_Heap_Size+0x5a88>
    6170:	54000035 	strpl	r0, [r0], #-53	; 0xffffffcb
    6174:	20000035 	andcs	r0, r0, r5, lsr r0
    6178:	0000459d 	muleq	r0, sp, r5
    617c:	00003589 	andeq	r3, r0, r9, lsl #11
    6180:	00003587 	andeq	r3, r0, r7, lsl #11
    6184:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    6188:	00000000 	andeq	r0, r0, r0
    618c:	00010000 	andeq	r0, r1, r0
	...
    6198:	05076b01 	streq	r6, [r7, #-2817]	; 0xfffff4ff
    619c:	00455c1f 	subeq	r5, r5, pc, lsl ip
    61a0:	0035a000 	eorseq	sl, r5, r0
    61a4:	00359c00 	eorseq	r9, r5, r0, lsl #24
    61a8:	454f1f00 	strbmi	r1, [pc, #-3840]	; 52b0 <_Min_Heap_Size+0x4ab0>
    61ac:	35c20000 	strbcc	r0, [r2]
    61b0:	35c00000 	strbcc	r0, [r0]
    61b4:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    61b8:	d7000045 	strle	r0, [r0, -r5, asr #32]
    61bc:	d5000035 	strle	r0, [r0, #-53]	; 0xffffffcb
    61c0:	00000035 	andeq	r0, r0, r5, lsr r0
    61c4:	00001a00 	andeq	r1, r0, r0, lsl #20
    61c8:	46000000 	strmi	r0, [r0], -r0
    61cc:	001a0000 	andseq	r0, sl, r0
    61d0:	00000000 	andeq	r0, r0, r0
    61d4:	1a000046 	bne	62f4 <_Min_Heap_Size+0x5af4>
    61d8:	00000000 	andeq	r0, r0, r0
    61dc:	0000461e 	andeq	r4, r0, lr, lsl r6
    61e0:	0000001a 	andeq	r0, r0, sl, lsl r0
    61e4:	00461e00 	subeq	r1, r6, r0, lsl #28
    61e8:	01280000 			; <UNDEFINED> instruction: 0x01280000
    61ec:	0000114e 	andeq	r1, r0, lr, asr #2
    61f0:	1d073101 	stfnes	f3, [r7, #-4]
    61f4:	00056701 	andeq	r6, r5, r1, lsl #14
	...
    6200:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    6204:	00321001 	eorseq	r1, r2, r1
    6208:	15c21600 	strbne	r1, [r2, #1536]	; 0x600
    620c:	31010000 	mrscc	r0, (UNDEF: 1)
    6210:	07964b07 	ldreq	r4, [r6, r7, lsl #22]
    6214:	35ee0000 	strbcc	r0, [lr, #0]!
    6218:	35ea0000 	strbcc	r0, [sl, #0]!
    621c:	27000000 	strcs	r0, [r0, -r0]
    6220:	0016c401 	andseq	ip, r6, r1, lsl #8
    6224:	06ed0100 	strbteq	r0, [sp], r0, lsl #2
    6228:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    6234:	360f0000 	strcc	r0, [pc], -r0
    6238:	4b010000 	blmi	46240 <_Min_Heap_Size+0x45a40>
    623c:	16000033 			; <UNDEFINED> instruction: 0x16000033
    6240:	000015c2 	andeq	r1, r0, r2, asr #11
    6244:	4406ed01 	strmi	lr, [r6], #-3329	; 0xfffff2ff
    6248:	00000796 	muleq	r0, r6, r7
    624c:	0000367b 	andeq	r3, r0, fp, ror r6
    6250:	0000366b 	andeq	r3, r0, fp, ror #12
    6254:	00121316 	andseq	r1, r2, r6, lsl r3
    6258:	06ed0100 	strbteq	r0, [sp], r0, lsl #2
    625c:	00068254 	andeq	r8, r6, r4, asr r2
    6260:	0036e800 	eorseq	lr, r6, r0, lsl #16
    6264:	0036de00 	eorseq	sp, r6, r0, lsl #28
    6268:	4cac1600 	stcmi	6, cr1, [ip]
    626c:	ed010000 	stc	0, cr0, [r1, #-0]
    6270:	00b06406 	adcseq	r6, r0, r6, lsl #8
    6274:	37370000 	ldrcc	r0, [r7, -r0]!
    6278:	372d0000 	strcc	r0, [sp, -r0]!
    627c:	61170000 	tstvs	r7, r0
    6280:	0100001a 	tsteq	r0, sl, lsl r0
    6284:	3a1506ef 	bcc	547e48 <_Min_Heap_Size+0x547648>
    6288:	82000002 	andhi	r0, r0, #2
    628c:	7c000037 	stcvc	0, cr0, [r0], {55}	; 0x37
    6290:	1c000037 	stcne	0, cr0, [r0], {55}	; 0x37
	...
    629c:	000032a2 	andeq	r3, r0, r2, lsr #5
    62a0:	0001ea22 	andeq	lr, r1, r2, lsr #20
    62a4:	07040100 	streq	r0, [r4, -r0, lsl #2]
    62a8:	0000d209 	andeq	sp, r0, r9, lsl #4
    62ac:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    62b0:	00001c00 	andeq	r1, r0, r0, lsl #24
    62b4:	00000000 	andeq	r0, r0, r0
    62b8:	333a0000 	teqcc	sl, #0
    62bc:	761d0000 	ldrvc	r0, [sp], -r0
    62c0:	01006c61 	tsteq	r0, r1, ror #24
    62c4:	c6090705 	strgt	r0, [r9], -r5, lsl #14
    62c8:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
    62cc:	ac000037 	stcge	0, cr0, [r0], {55}	; 0x37
    62d0:	1e000037 	mcrne	0, 0, r0, cr0, cr7, {1}
    62d4:	0000457d 	andeq	r4, r0, sp, ror r5
	...
    62e4:	05010000 	streq	r0, [r1, #-0]
    62e8:	32fa0907 	rscscc	r0, sl, #114688	; 0x1c000
    62ec:	901f0000 	andsls	r0, pc, r0
    62f0:	c7000045 	strgt	r0, [r0, -r5, asr #32]
    62f4:	c1000037 	tstgt	r0, r7, lsr r0
    62f8:	20000037 	andcs	r0, r0, r7, lsr r0
    62fc:	0000459d 	muleq	r0, sp, r5
    6300:	000037f6 	strdeq	r3, [r0], -r6
    6304:	000037f4 	strdeq	r3, [r0], -r4
    6308:	453c2100 	ldrmi	r2, [ip, #-256]!	; 0xffffff00
    630c:	00000000 	andeq	r0, r0, r0
    6310:	00010000 	andeq	r0, r1, r0
	...
    631c:	09070501 	stmdbeq	r7, {r0, r8, sl}
    6320:	00455c1f 	subeq	r5, r5, pc, lsl ip
    6324:	00380d00 	eorseq	r0, r8, r0, lsl #26
    6328:	00380900 	eorseq	r0, r8, r0, lsl #18
    632c:	454f1f00 	strbmi	r1, [pc, #-3840]	; 5434 <_Min_Heap_Size+0x4c34>
    6330:	382f0000 	stmdacc	pc!, {}	; <UNPREDICTABLE>
    6334:	382d0000 	stmdacc	sp!, {}	; <UNPREDICTABLE>
    6338:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    633c:	44000045 	strmi	r0, [r0], #-69	; 0xffffffbb
    6340:	42000038 	andmi	r0, r0, #56	; 0x38
    6344:	00000038 	andeq	r0, r0, r8, lsr r0
    6348:	00002300 	andeq	r2, r0, r0, lsl #6
    634c:	0dad0000 	stceq	0, cr0, [sp]
    6350:	01190000 	tsteq	r9, r0
    6354:	00740250 	rsbseq	r0, r4, r0, asr r2
    6358:	01270000 			; <UNDEFINED> instruction: 0x01270000
    635c:	00001559 	andeq	r1, r0, r9, asr r5
    6360:	1306b101 	movwne	fp, #24833	; 0x6101
    6364:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    6370:	00385700 	eorseq	r5, r8, r0, lsl #14
    6374:	34860100 	strcc	r0, [r6], #256	; 0x100
    6378:	c2160000 	andsgt	r0, r6, #0
    637c:	01000015 	tsteq	r0, r5, lsl r0
    6380:	964306b1 			; <UNDEFINED> instruction: 0x964306b1
    6384:	c3000007 	movwgt	r0, #7
    6388:	b3000038 	movwlt	r0, #56	; 0x38
    638c:	16000038 			; <UNDEFINED> instruction: 0x16000038
    6390:	00001213 	andeq	r1, r0, r3, lsl r2
    6394:	5306b101 	movwpl	fp, #24833	; 0x6101
    6398:	00000682 	andeq	r0, r0, r2, lsl #13
    639c:	00003930 	andeq	r3, r0, r0, lsr r9
    63a0:	00003926 	andeq	r3, r0, r6, lsr #18
    63a4:	004cac16 	subeq	sl, ip, r6, lsl ip
    63a8:	06b10100 	ldrteq	r0, [r1], r0, lsl #2
    63ac:	0000b063 	andeq	fp, r0, r3, rrx
    63b0:	00397f00 	eorseq	r7, r9, r0, lsl #30
    63b4:	00397500 	eorseq	r7, r9, r0, lsl #10
    63b8:	1a611700 	bne	184bfc0 <_Min_Heap_Size+0x184b7c0>
    63bc:	b3010000 	movwlt	r0, #4096	; 0x1000
    63c0:	023a1506 	eorseq	r1, sl, #25165824	; 0x1800000
    63c4:	39ca0000 	stmibcc	sl, {}^	; <UNPREDICTABLE>
    63c8:	39c40000 	stmibcc	r4, {}^	; <UNPREDICTABLE>
    63cc:	001c0000 	andseq	r0, ip, r0
    63d0:	00000000 	andeq	r0, r0, r0
    63d4:	dd000000 	stcle	0, cr0, [r0, #-0]
    63d8:	22000033 	andcs	r0, r0, #51	; 0x33
    63dc:	000001ea 	andeq	r0, r0, sl, ror #3
    63e0:	0906c801 	stmdbeq	r6, {r0, fp, lr, pc}
    63e4:	000000d2 	ldrdeq	r0, [r0], -r2
    63e8:	00749102 	rsbseq	r9, r4, r2, lsl #2
    63ec:	0000001c 	andeq	r0, r0, ip, lsl r0
    63f0:	00000000 	andeq	r0, r0, r0
    63f4:	00347500 	eorseq	r7, r4, r0, lsl #10
    63f8:	61761d00 	cmnvs	r6, r0, lsl #26
    63fc:	c901006c 	stmdbgt	r1, {r2, r3, r5, r6}
    6400:	00c60906 	sbceq	r0, r6, r6, lsl #18
    6404:	39f60000 	ldmibcc	r6!, {}^	; <UNPREDICTABLE>
    6408:	39f40000 	ldmibcc	r4!, {}^	; <UNPREDICTABLE>
    640c:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6410:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6420:	06c90100 	strbeq	r0, [r9], r0, lsl #2
    6424:	00343509 	eorseq	r3, r4, r9, lsl #10
    6428:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    642c:	3a0f0000 	bcc	3c6434 <_Min_Heap_Size+0x3c5c34>
    6430:	3a090000 	bcc	246438 <_Min_Heap_Size+0x245c38>
    6434:	9d200000 	stcls	0, cr0, [r0, #-0]
    6438:	3e000045 	cdpcc	0, 0, cr0, cr0, cr5, {2}
    643c:	3c00003a 	stccc	0, cr0, [r0], {58}	; 0x3a
    6440:	0000003a 	andeq	r0, r0, sl, lsr r0
    6444:	00453c21 	subeq	r3, r5, r1, lsr #24
    6448:	00000000 	andeq	r0, r0, r0
    644c:	00000100 	andeq	r0, r0, r0, lsl #2
    6450:	00000000 	andeq	r0, r0, r0
    6454:	01000000 	mrseq	r0, (UNDEF: 0)
    6458:	1f0906c9 	svcne	0x000906c9
    645c:	0000455c 	andeq	r4, r0, ip, asr r5
    6460:	00003a55 	andeq	r3, r0, r5, asr sl
    6464:	00003a51 	andeq	r3, r0, r1, asr sl
    6468:	00454f1f 	subeq	r4, r5, pc, lsl pc
    646c:	003a7700 	eorseq	r7, sl, r0, lsl #14
    6470:	003a7500 	eorseq	r7, sl, r0, lsl #10
    6474:	45692000 	strbmi	r2, [r9, #-0]!
    6478:	3a8c0000 	bcc	fe306480 <_estack+0xde2fcae0>
    647c:	3a8a0000 	bcc	fe286484 <_estack+0xde27cae4>
    6480:	00000000 	andeq	r0, r0, r0
    6484:	00000023 	andeq	r0, r0, r3, lsr #32
    6488:	00101f00 	andseq	r1, r0, r0, lsl #30
    648c:	50011900 	andpl	r1, r1, r0, lsl #18
    6490:	00007402 	andeq	r7, r0, r2, lsl #8
    6494:	4f012700 	svcmi	0x00012700
    6498:	01000017 	tsteq	r0, r7, lsl r0
    649c:	01130634 	tsteq	r3, r4, lsr r6
    64a0:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    64ac:	00003a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
    64b0:	00357f01 	eorseq	r7, r5, r1, lsl #30
    64b4:	15c21600 	strbne	r1, [r2, #1536]	; 0x600
    64b8:	34010000 	strcc	r0, [r1], #-0
    64bc:	07964006 	ldreq	r4, [r6, r6]
    64c0:	3af30000 	bcc	ffcc64c8 <_estack+0xdfcbcb28>
    64c4:	3ae30000 	bcc	ff8c64cc <_estack+0xdf8bcb2c>
    64c8:	13160000 	tstne	r6, #0
    64cc:	01000012 	tsteq	r0, r2, lsl r0
    64d0:	82500634 	subshi	r0, r0, #52, 12	; 0x3400000
    64d4:	68000006 	stmdavs	r0, {r1, r2}
    64d8:	5600003b 			; <UNDEFINED> instruction: 0x5600003b
    64dc:	1600003b 			; <UNDEFINED> instruction: 0x1600003b
    64e0:	00004cac 	andeq	r4, r0, ip, lsr #25
    64e4:	60063401 	andvs	r3, r6, r1, lsl #8
    64e8:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    64ec:	00003be6 	andeq	r3, r0, r6, ror #23
    64f0:	00003bdc 	ldrdeq	r3, [r0], -ip
    64f4:	0014c516 	andseq	ip, r4, r6, lsl r5
    64f8:	06340100 	ldrteq	r0, [r4], -r0, lsl #2
    64fc:	0008cf70 	andeq	ip, r8, r0, ror pc
    6500:	003c2f00 	eorseq	r2, ip, r0, lsl #30
    6504:	003c2b00 	eorseq	r2, ip, r0, lsl #22
    6508:	3e431600 	cdpcc	6, 4, cr1, cr3, cr0, {0}
    650c:	35010000 	strcc	r0, [r1, #-0]
    6510:	00c63506 	sbceq	r3, r6, r6, lsl #10
    6514:	3c510000 	mracc	r0, r1, acc0
    6518:	3c4d0000 	marcc	acc0, r0, sp
    651c:	3f170000 	svccc	0x00170000
    6520:	01000012 	tsteq	r0, r2, lsl r0
    6524:	820d0637 	andhi	r0, sp, #57671680	; 0x3700000
    6528:	75000006 	strvc	r0, [r0, #-6]
    652c:	7100003c 	tstvc	r0, ip, lsr r0
    6530:	1700003c 	smladxne	r0, ip, r0, r0
    6534:	000012a9 	andeq	r1, r0, r9, lsr #5
    6538:	0d063801 	stceq	8, cr3, [r6, #-4]
    653c:	000008cf 	andeq	r0, r0, pc, asr #17
    6540:	00003c9b 	muleq	r0, fp, ip
    6544:	00003c93 	muleq	r0, r3, ip
    6548:	00160c17 	andseq	r0, r6, r7, lsl ip
    654c:	06390100 	ldrteq	r0, [r9], -r0, lsl #2
    6550:	0000c60c 	andeq	ip, r0, ip, lsl #12
    6554:	003cd500 	eorseq	sp, ip, r0, lsl #10
    6558:	003cd100 	eorseq	sp, ip, r0, lsl #2
    655c:	00001c00 	andeq	r1, r0, r0, lsl #24
    6560:	00000000 	andeq	r0, r0, r0
    6564:	356c0000 	strbcc	r0, [ip, #-0]!
    6568:	ea220000 	b	886570 <_Min_Heap_Size+0x885d70>
    656c:	01000001 	tsteq	r0, r1
    6570:	d2090664 	andle	r0, r9, #100, 12	; 0x6400000
    6574:	02000000 	andeq	r0, r0, #0
    6578:	1a005c91 	bne	1d7c4 <_Min_Heap_Size+0x1cfc4>
    657c:	00000000 	andeq	r0, r0, r0
    6580:	000045f2 	strdeq	r4, [r0], -r2
    6584:	0000001a 	andeq	r0, r0, sl, lsl r0
    6588:	0045f200 	subeq	pc, r5, r0, lsl #4
    658c:	01270000 			; <UNDEFINED> instruction: 0x01270000
    6590:	00001591 	muleq	r0, r1, r5
    6594:	1305fd01 	movwne	pc, #23809	; 0x5d01	; <UNPREDICTABLE>
    6598:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    65a4:	003cf300 	eorseq	pc, ip, r0, lsl #6
    65a8:	37300100 	ldrcc	r0, [r0, -r0, lsl #2]!
    65ac:	c2160000 	andsgt	r0, r6, #0
    65b0:	01000015 	tsteq	r0, r5, lsl r0
    65b4:	963805fd 			; <UNDEFINED> instruction: 0x963805fd
    65b8:	1b000007 	blne	65dc <_Min_Heap_Size+0x5ddc>
    65bc:	1300003d 	movwne	r0, #61	; 0x3d
    65c0:	1700003d 	smladxne	r0, sp, r0, r0
    65c4:	0000165e 	andeq	r1, r0, lr, asr r6
    65c8:	0c05ff01 	stceq	15, cr15, [r5], {1}
    65cc:	000000c6 	andeq	r0, r0, r6, asr #1
    65d0:	00003d59 	andeq	r3, r0, r9, asr sp
    65d4:	00003d4f 	andeq	r3, r0, pc, asr #26
    65d8:	0000001c 	andeq	r0, r0, ip, lsl r0
    65dc:	00000000 	andeq	r0, r0, r0
    65e0:	00366100 	eorseq	r6, r6, r0, lsl #2
    65e4:	61761d00 	cmnvs	r6, r0, lsl #26
    65e8:	0a01006c 	beq	467a0 <_Min_Heap_Size+0x45fa0>
    65ec:	00c60506 	sbceq	r0, r6, r6, lsl #10
    65f0:	3dbd0000 	ldccc	0, cr0, [sp]
    65f4:	3dbb0000 	ldccc	0, cr0, [fp]
    65f8:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    65fc:	00000045 	andeq	r0, r0, r5, asr #32
	...
    660c:	060a0100 	streq	r0, [sl], -r0, lsl #2
    6610:	00362105 	eorseq	r2, r6, r5, lsl #2
    6614:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6618:	3dd60000 	ldclcc	0, cr0, [r6]
    661c:	3dd00000 	ldclcc	0, cr0, [r0]
    6620:	9d200000 	stcls	0, cr0, [r0, #-0]
    6624:	05000045 	streq	r0, [r0, #-69]	; 0xffffffbb
    6628:	0300003e 	movweq	r0, #62	; 0x3e
    662c:	0000003e 	andeq	r0, r0, lr, lsr r0
    6630:	00453c21 	subeq	r3, r5, r1, lsr #24
    6634:	00000000 	andeq	r0, r0, r0
    6638:	00000100 	andeq	r0, r0, r0, lsl #2
    663c:	00000000 	andeq	r0, r0, r0
    6640:	01000000 	mrseq	r0, (UNDEF: 0)
    6644:	1f05060a 	svcne	0x0005060a
    6648:	0000455c 	andeq	r4, r0, ip, asr r5
    664c:	00003e1c 	andeq	r3, r0, ip, lsl lr
    6650:	00003e18 	andeq	r3, r0, r8, lsl lr
    6654:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6658:	003e3e00 	eorseq	r3, lr, r0, lsl #28
    665c:	003e3c00 	eorseq	r3, lr, r0, lsl #24
    6660:	45692000 	strbmi	r2, [r9, #-0]!
    6664:	3e530000 	cdpcc	0, 5, cr0, cr3, cr0, {0}
    6668:	3e510000 	cdpcc	0, 5, cr0, cr1, cr0, {0}
    666c:	00000000 	andeq	r0, r0, r0
    6670:	0000001c 	andeq	r0, r0, ip, lsl r0
    6674:	00000000 	andeq	r0, r0, r0
    6678:	0036f900 	eorseq	pc, r6, r0, lsl #18
    667c:	61761d00 	cmnvs	r6, r0, lsl #26
    6680:	1801006c 	stmdane	r1, {r2, r3, r5, r6}
    6684:	00c60506 	sbceq	r0, r6, r6, lsl #10
    6688:	3e680000 	cdpcc	0, 6, cr0, cr8, cr0, {0}
    668c:	3e660000 	cdpcc	0, 6, cr0, cr6, cr0, {0}
    6690:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6694:	00000045 	andeq	r0, r0, r5, asr #32
	...
    66a4:	06180100 	ldreq	r0, [r8], -r0, lsl #2
    66a8:	0036b905 	eorseq	fp, r6, r5, lsl #18
    66ac:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    66b0:	3e810000 	cdpcc	0, 8, cr0, cr1, cr0, {0}
    66b4:	3e7b0000 	cdpcc	0, 7, cr0, cr11, cr0, {0}
    66b8:	9d200000 	stcls	0, cr0, [r0, #-0]
    66bc:	b0000045 	andlt	r0, r0, r5, asr #32
    66c0:	ae00003e 	mcrge	0, 0, r0, cr0, cr14, {1}
    66c4:	0000003e 	andeq	r0, r0, lr, lsr r0
    66c8:	00453c21 	subeq	r3, r5, r1, lsr #24
    66cc:	00000000 	andeq	r0, r0, r0
    66d0:	00000100 	andeq	r0, r0, r0, lsl #2
    66d4:	00000000 	andeq	r0, r0, r0
    66d8:	01000000 	mrseq	r0, (UNDEF: 0)
    66dc:	1f050618 	svcne	0x00050618
    66e0:	0000455c 	andeq	r4, r0, ip, asr r5
    66e4:	00003ec7 	andeq	r3, r0, r7, asr #29
    66e8:	00003ec3 	andeq	r3, r0, r3, asr #29
    66ec:	00454f1f 	subeq	r4, r5, pc, lsl pc
    66f0:	003ee900 	eorseq	lr, lr, r0, lsl #18
    66f4:	003ee700 	eorseq	lr, lr, r0, lsl #14
    66f8:	45692000 	strbmi	r2, [r9, #-0]!
    66fc:	3efe0000 	cdpcc	0, 15, cr0, cr14, cr0, {0}
    6700:	3efc0000 	cdpcc	0, 15, cr0, cr12, cr0, {0}
    6704:	00000000 	andeq	r0, r0, r0
    6708:	0000001a 	andeq	r0, r0, sl, lsl r0
    670c:	00460000 	subeq	r0, r6, r0
    6710:	00001800 	andeq	r1, r0, r0, lsl #16
    6714:	0ce90000 	stcleq	0, cr0, [r9]
    6718:	37160000 	ldrcc	r0, [r6, -r0]
    671c:	01190000 	tsteq	r9, r0
    6720:	00740250 	rsbseq	r0, r4, r0, asr r2
    6724:	00001a00 	andeq	r1, r0, r0, lsl #20
    6728:	46000000 	strmi	r0, [r0], -r0
    672c:	00230000 	eoreq	r0, r3, r0
    6730:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    6734:	1900000a 	stmdbne	r0, {r1, r3}
    6738:	74025001 	strvc	r5, [r2], #-1
    673c:	27000000 	strcs	r0, [r0, -r0]
    6740:	0017ac01 	andseq	sl, r7, r1, lsl #24
    6744:	05db0100 	ldrbeq	r0, [fp, #256]	; 0x100
    6748:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    6754:	3f110000 	svccc	0x00110000
    6758:	e0010000 	and	r0, r1, r0
    675c:	16000039 			; <UNDEFINED> instruction: 0x16000039
    6760:	000015c2 	andeq	r1, r0, r2, asr #11
    6764:	3a05db01 	bcc	17d370 <_Min_Heap_Size+0x17cb70>
    6768:	00000796 	muleq	r0, r6, r7
    676c:	00003f45 	andeq	r3, r0, r5, asr #30
    6770:	00003f3d 	andeq	r3, r0, sp, lsr pc
    6774:	0000001c 	andeq	r0, r0, ip, lsl r0
    6778:	00000000 	andeq	r0, r0, r0
    677c:	0037fd00 	eorseq	pc, r7, r0, lsl #26
    6780:	61761d00 	cmnvs	r6, r0, lsl #26
    6784:	e101006c 	tst	r1, ip, rrx
    6788:	00c60505 	sbceq	r0, r6, r5, lsl #10
    678c:	3f810000 	svccc	0x00810000
    6790:	3f7f0000 	svccc	0x007f0000
    6794:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6798:	00000045 	andeq	r0, r0, r5, asr #32
	...
    67a8:	05e10100 	strbeq	r0, [r1, #256]!	; 0x100
    67ac:	0037bd05 	eorseq	fp, r7, r5, lsl #26
    67b0:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    67b4:	3f9a0000 	svccc	0x009a0000
    67b8:	3f940000 	svccc	0x00940000
    67bc:	9d200000 	stcls	0, cr0, [r0, #-0]
    67c0:	c9000045 	stmdbgt	r0, {r0, r2, r6}
    67c4:	c700003f 	smladxgt	r0, pc, r0, r0	; <UNPREDICTABLE>
    67c8:	0000003f 	andeq	r0, r0, pc, lsr r0
    67cc:	00453c21 	subeq	r3, r5, r1, lsr #24
    67d0:	00000000 	andeq	r0, r0, r0
    67d4:	00000100 	andeq	r0, r0, r0, lsl #2
    67d8:	00000000 	andeq	r0, r0, r0
    67dc:	01000000 	mrseq	r0, (UNDEF: 0)
    67e0:	1f0505e1 	svcne	0x000505e1
    67e4:	0000455c 	andeq	r4, r0, ip, asr r5
    67e8:	00003fe0 	andeq	r3, r0, r0, ror #31
    67ec:	00003fdc 	ldrdeq	r3, [r0], -ip
    67f0:	00454f1f 	subeq	r4, r5, pc, lsl pc
    67f4:	00400200 	subeq	r0, r0, r0, lsl #4
    67f8:	00400000 	subeq	r0, r0, r0
    67fc:	45692000 	strbmi	r2, [r9, #-0]!
    6800:	40170000 	andsmi	r0, r7, r0
    6804:	40150000 	andsmi	r0, r5, r0
    6808:	00000000 	andeq	r0, r0, r0
    680c:	0000001c 	andeq	r0, r0, ip, lsl r0
    6810:	00000000 	andeq	r0, r0, r0
    6814:	00381b00 	eorseq	r1, r8, r0, lsl #22
    6818:	01ea2200 	mvneq	r2, r0, lsl #4
    681c:	e7010000 	str	r0, [r1, -r0]
    6820:	00d20505 	sbcseq	r0, r2, r5, lsl #10
    6824:	91020000 	mrsls	r0, (UNDEF: 2)
    6828:	001c007c 	andseq	r0, ip, ip, ror r0
    682c:	00000000 	andeq	r0, r0, r0
    6830:	b3000000 	movwlt	r0, #0
    6834:	1d000038 	stcne	0, cr0, [r0, #-224]	; 0xffffff20
    6838:	006c6176 	rsbeq	r6, ip, r6, ror r1
    683c:	0705ec01 	streq	lr, [r5, -r1, lsl #24]
    6840:	000000c6 	andeq	r0, r0, r6, asr #1
    6844:	0000402c 	andeq	r4, r0, ip, lsr #32
    6848:	0000402a 	andeq	r4, r0, sl, lsr #32
    684c:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    685c:	01000000 	mrseq	r0, (UNDEF: 0)
    6860:	730705ec 	movwvc	r0, #30188	; 0x75ec
    6864:	1f000038 	svcne	0x00000038
    6868:	00004590 	muleq	r0, r0, r5
    686c:	00004045 	andeq	r4, r0, r5, asr #32
    6870:	0000403f 	andeq	r4, r0, pc, lsr r0
    6874:	00459d20 	subeq	r9, r5, r0, lsr #26
    6878:	00407400 	subeq	r7, r0, r0, lsl #8
    687c:	00407200 	subeq	r7, r0, r0, lsl #4
    6880:	3c210000 	stccc	0, cr0, [r1], #-0
    6884:	00000045 	andeq	r0, r0, r5, asr #32
    6888:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6894:	05ec0100 	strbeq	r0, [ip, #256]!	; 0x100
    6898:	455c1f07 	ldrbmi	r1, [ip, #-3847]	; 0xfffff0f9
    689c:	408b0000 	addmi	r0, fp, r0
    68a0:	40870000 	addmi	r0, r7, r0
    68a4:	4f1f0000 	svcmi	0x001f0000
    68a8:	ad000045 	stcge	0, cr0, [r0, #-276]	; 0xfffffeec
    68ac:	ab000040 	blge	69b4 <_Min_Heap_Size+0x61b4>
    68b0:	20000040 	andcs	r0, r0, r0, asr #32
    68b4:	00004569 	andeq	r4, r0, r9, ror #10
    68b8:	000040c2 	andeq	r4, r0, r2, asr #1
    68bc:	000040c0 	andeq	r4, r0, r0, asr #1
    68c0:	001c0000 	andseq	r0, ip, r0
    68c4:	00000000 	andeq	r0, r0, r0
    68c8:	4b000000 	blmi	68d0 <_Min_Heap_Size+0x60d0>
    68cc:	1d000039 	stcne	0, cr0, [r0, #-228]	; 0xffffff1c
    68d0:	006c6176 	rsbeq	r6, ip, r6, ror r1
    68d4:	0505ee01 	streq	lr, [r5, #-3585]	; 0xfffff1ff
    68d8:	000000c6 	andeq	r0, r0, r6, asr #1
    68dc:	000040d7 	ldrdeq	r4, [r0], -r7
    68e0:	000040d5 	ldrdeq	r4, [r0], -r5
    68e4:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    68f4:	01000000 	mrseq	r0, (UNDEF: 0)
    68f8:	0b0505ee 	bleq	1480b8 <_Min_Heap_Size+0x1478b8>
    68fc:	1f000039 	svcne	0x00000039
    6900:	00004590 	muleq	r0, r0, r5
    6904:	000040f0 	strdeq	r4, [r0], -r0
    6908:	000040ea 	andeq	r4, r0, sl, ror #1
    690c:	00459d20 	subeq	r9, r5, r0, lsr #26
    6910:	00411f00 	subeq	r1, r1, r0, lsl #30
    6914:	00411d00 	subeq	r1, r1, r0, lsl #26
    6918:	3c210000 	stccc	0, cr0, [r1], #-0
    691c:	00000045 	andeq	r0, r0, r5, asr #32
    6920:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    692c:	05ee0100 	strbeq	r0, [lr, #256]!	; 0x100
    6930:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    6934:	41360000 	teqmi	r6, r0
    6938:	41320000 	teqmi	r2, r0
    693c:	4f1f0000 	svcmi	0x001f0000
    6940:	58000045 	stmdapl	r0, {r0, r2, r6}
    6944:	56000041 	strpl	r0, [r0], -r1, asr #32
    6948:	20000041 	andcs	r0, r0, r1, asr #32
    694c:	00004569 	andeq	r4, r0, r9, ror #10
    6950:	0000416d 	andeq	r4, r0, sp, ror #2
    6954:	0000416b 	andeq	r4, r0, fp, ror #2
    6958:	00260000 	eoreq	r0, r6, r0
    695c:	00000000 	andeq	r0, r0, r0
    6960:	1d000000 	stcne	0, cr0, [r0, #-0]
    6964:	006c6176 	rsbeq	r6, ip, r6, ror r1
    6968:	0505f101 	streq	pc, [r5, #-257]	; 0xfffffeff
    696c:	000000c6 	andeq	r0, r0, r6, asr #1
    6970:	00004182 	andeq	r4, r0, r2, lsl #3
    6974:	00004180 	andeq	r4, r0, r0, lsl #3
    6978:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    6988:	01000000 	mrseq	r0, (UNDEF: 0)
    698c:	9f0505f1 	svcls	0x000505f1
    6990:	1f000039 	svcne	0x00000039
    6994:	00004590 	muleq	r0, r0, r5
    6998:	0000419b 	muleq	r0, fp, r1
    699c:	00004195 	muleq	r0, r5, r1
    69a0:	00459d20 	subeq	r9, r5, r0, lsr #26
    69a4:	0041ca00 	subeq	ip, r1, r0, lsl #20
    69a8:	0041c800 	subeq	ip, r1, r0, lsl #16
    69ac:	3c210000 	stccc	0, cr0, [r1], #-0
    69b0:	00000045 	andeq	r0, r0, r5, asr #32
    69b4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    69c0:	05f10100 	ldrbeq	r0, [r1, #256]!	; 0x100
    69c4:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    69c8:	41e10000 	mvnmi	r0, r0
    69cc:	41dd0000 	bicsmi	r0, sp, r0
    69d0:	4f1f0000 	svcmi	0x001f0000
    69d4:	03000045 	movweq	r0, #69	; 0x45
    69d8:	01000042 	tsteq	r0, r2, asr #32
    69dc:	20000042 	andcs	r0, r0, r2, asr #32
    69e0:	00004569 	andeq	r4, r0, r9, ror #10
    69e4:	00004218 	andeq	r4, r0, r8, lsl r2
    69e8:	00004216 	andeq	r4, r0, r6, lsl r2
    69ec:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    69f0:	00116801 	andseq	r6, r1, r1, lsl #16
    69f4:	05bc0100 	ldreq	r0, [ip, #256]!	; 0x100
    69f8:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    6a04:	7d020000 	stcvc	0, cr0, [r2, #-0]
    6a08:	3c860100 	stfccs	f0, [r6], {0}
    6a0c:	c2160000 	andsgt	r0, r6, #0
    6a10:	01000015 	tsteq	r0, r5, lsl r0
    6a14:	963905bc 			; <UNDEFINED> instruction: 0x963905bc
    6a18:	31000007 	tstcc	r0, r7
    6a1c:	2b000042 	blcs	6b2c <_Min_Heap_Size+0x632c>
    6a20:	17000042 	strne	r0, [r0, -r2, asr #32]
    6a24:	0000165e 	andeq	r1, r0, lr, asr r6
    6a28:	0c05be01 	stceq	14, cr11, [r5], {1}
    6a2c:	000000c6 	andeq	r0, r0, r6, asr #1
    6a30:	00004267 	andeq	r4, r0, r7, ror #4
    6a34:	0000425d 	andeq	r4, r0, sp, asr r2
    6a38:	0000001c 	andeq	r0, r0, ip, lsl r0
    6a3c:	00000000 	andeq	r0, r0, r0
    6a40:	003ac100 	eorseq	ip, sl, r0, lsl #2
    6a44:	61761d00 	cmnvs	r6, r0, lsl #26
    6a48:	c401006c 	strgt	r0, [r1], #-108	; 0xffffff94
    6a4c:	00c60505 	sbceq	r0, r6, r5, lsl #10
    6a50:	42c50000 	sbcmi	r0, r5, #0
    6a54:	42c30000 	sbcmi	r0, r3, #0
    6a58:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6a5c:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6a6c:	05c40100 	strbeq	r0, [r4, #256]	; 0x100
    6a70:	003a8105 	eorseq	r8, sl, r5, lsl #2
    6a74:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6a78:	42de0000 	sbcsmi	r0, lr, #0
    6a7c:	42d80000 	sbcsmi	r0, r8, #0
    6a80:	9d200000 	stcls	0, cr0, [r0, #-0]
    6a84:	0d000045 	stceq	0, cr0, [r0, #-276]	; 0xfffffeec
    6a88:	0b000043 	bleq	6b9c <_Min_Heap_Size+0x639c>
    6a8c:	00000043 	andeq	r0, r0, r3, asr #32
    6a90:	00453c21 	subeq	r3, r5, r1, lsr #24
    6a94:	00000000 	andeq	r0, r0, r0
    6a98:	00000100 	andeq	r0, r0, r0, lsl #2
    6a9c:	00000000 	andeq	r0, r0, r0
    6aa0:	01000000 	mrseq	r0, (UNDEF: 0)
    6aa4:	1f0505c4 	svcne	0x000505c4
    6aa8:	0000455c 	andeq	r4, r0, ip, asr r5
    6aac:	00004324 	andeq	r4, r0, r4, lsr #6
    6ab0:	00004320 	andeq	r4, r0, r0, lsr #6
    6ab4:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6ab8:	00434600 	subeq	r4, r3, r0, lsl #12
    6abc:	00434400 	subeq	r4, r3, r0, lsl #8
    6ac0:	45692000 	strbmi	r2, [r9, #-0]!
    6ac4:	435b0000 	cmpmi	fp, #0
    6ac8:	43590000 	cmpmi	r9, #0
    6acc:	00000000 	andeq	r0, r0, r0
    6ad0:	0000001c 	andeq	r0, r0, ip, lsl r0
    6ad4:	00000000 	andeq	r0, r0, r0
    6ad8:	003b5900 	eorseq	r5, fp, r0, lsl #18
    6adc:	61761d00 	cmnvs	r6, r0, lsl #26
    6ae0:	cb01006c 	blgt	46c98 <_Min_Heap_Size+0x46498>
    6ae4:	00c60505 	sbceq	r0, r6, r5, lsl #10
    6ae8:	43700000 	cmnmi	r0, #0
    6aec:	436e0000 	cmnmi	lr, #0
    6af0:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6af4:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6b04:	05cb0100 	strbeq	r0, [fp, #256]	; 0x100
    6b08:	003b1905 	eorseq	r1, fp, r5, lsl #18
    6b0c:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6b10:	43890000 	orrmi	r0, r9, #0
    6b14:	43830000 	orrmi	r0, r3, #0
    6b18:	9d200000 	stcls	0, cr0, [r0, #-0]
    6b1c:	b8000045 	stmdalt	r0, {r0, r2, r6}
    6b20:	b6000043 	strlt	r0, [r0], -r3, asr #32
    6b24:	00000043 	andeq	r0, r0, r3, asr #32
    6b28:	00453c21 	subeq	r3, r5, r1, lsr #24
    6b2c:	00000000 	andeq	r0, r0, r0
    6b30:	00000100 	andeq	r0, r0, r0, lsl #2
    6b34:	00000000 	andeq	r0, r0, r0
    6b38:	01000000 	mrseq	r0, (UNDEF: 0)
    6b3c:	1f0505cb 	svcne	0x000505cb
    6b40:	0000455c 	andeq	r4, r0, ip, asr r5
    6b44:	000043cf 	andeq	r4, r0, pc, asr #7
    6b48:	000043cb 	andeq	r4, r0, fp, asr #7
    6b4c:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6b50:	0043f100 	subeq	pc, r3, r0, lsl #2
    6b54:	0043ef00 	subeq	lr, r3, r0, lsl #30
    6b58:	45692000 	strbmi	r2, [r9, #-0]!
    6b5c:	44060000 	strmi	r0, [r6], #-0
    6b60:	44040000 	strmi	r0, [r4], #-0
    6b64:	00000000 	andeq	r0, r0, r0
    6b68:	0000001c 	andeq	r0, r0, ip, lsl r0
    6b6c:	00000000 	andeq	r0, r0, r0
    6b70:	003bf100 	eorseq	pc, fp, r0, lsl #2
    6b74:	61761d00 	cmnvs	r6, r0, lsl #26
    6b78:	cc01006c 	stcgt	0, cr0, [r1], {108}	; 0x6c
    6b7c:	00c60505 	sbceq	r0, r6, r5, lsl #10
    6b80:	441b0000 	ldrmi	r0, [fp], #-0
    6b84:	44190000 	ldrmi	r0, [r9], #-0
    6b88:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6b8c:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6b9c:	05cc0100 	strbeq	r0, [ip, #256]	; 0x100
    6ba0:	003bb105 	eorseq	fp, fp, r5, lsl #2
    6ba4:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6ba8:	44340000 	ldrtmi	r0, [r4], #-0
    6bac:	442e0000 	strtmi	r0, [lr], #-0
    6bb0:	9d200000 	stcls	0, cr0, [r0, #-0]
    6bb4:	63000045 	movwvs	r0, #69	; 0x45
    6bb8:	61000044 	tstvs	r0, r4, asr #32
    6bbc:	00000044 	andeq	r0, r0, r4, asr #32
    6bc0:	00453c21 	subeq	r3, r5, r1, lsr #24
    6bc4:	00000000 	andeq	r0, r0, r0
    6bc8:	00000100 	andeq	r0, r0, r0, lsl #2
    6bcc:	00000000 	andeq	r0, r0, r0
    6bd0:	01000000 	mrseq	r0, (UNDEF: 0)
    6bd4:	1f0505cc 	svcne	0x000505cc
    6bd8:	0000455c 	andeq	r4, r0, ip, asr r5
    6bdc:	0000447a 	andeq	r4, r0, sl, ror r4
    6be0:	00004476 	andeq	r4, r0, r6, ror r4
    6be4:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6be8:	00449c00 	subeq	r9, r4, r0, lsl #24
    6bec:	00449a00 	subeq	r9, r4, r0, lsl #20
    6bf0:	45692000 	strbmi	r2, [r9, #-0]!
    6bf4:	44b10000 	ldrtmi	r0, [r1], #0
    6bf8:	44af0000 	strtmi	r0, [pc], #0	; 6c00 <_Min_Heap_Size+0x6400>
    6bfc:	00000000 	andeq	r0, r0, r0
    6c00:	00000026 	andeq	r0, r0, r6, lsr #32
    6c04:	00000000 	andeq	r0, r0, r0
    6c08:	61761d00 	cmnvs	r6, r0, lsl #26
    6c0c:	cf01006c 	svcgt	0x0001006c
    6c10:	00c60505 	sbceq	r0, r6, r5, lsl #10
    6c14:	44c60000 	strbmi	r0, [r6], #0
    6c18:	44c40000 	strbmi	r0, [r4], #0
    6c1c:	7d1e0000 	ldcvc	0, cr0, [lr, #-0]
    6c20:	00000045 	andeq	r0, r0, r5, asr #32
	...
    6c30:	05cf0100 	strbeq	r0, [pc, #256]	; 6d38 <_Min_Heap_Size+0x6538>
    6c34:	003c4505 	eorseq	r4, ip, r5, lsl #10
    6c38:	45901f00 	ldrmi	r1, [r0, #3840]	; 0xf00
    6c3c:	44df0000 	ldrbmi	r0, [pc], #0	; 6c44 <_Min_Heap_Size+0x6444>
    6c40:	44d90000 	ldrbmi	r0, [r9], #0
    6c44:	9d200000 	stcls	0, cr0, [r0, #-0]
    6c48:	0e000045 	cdpeq	0, 0, cr0, cr0, cr5, {2}
    6c4c:	0c000045 	stceq	0, cr0, [r0], {69}	; 0x45
    6c50:	00000045 	andeq	r0, r0, r5, asr #32
    6c54:	00453c21 	subeq	r3, r5, r1, lsr #24
    6c58:	00000000 	andeq	r0, r0, r0
    6c5c:	00000100 	andeq	r0, r0, r0, lsl #2
    6c60:	00000000 	andeq	r0, r0, r0
    6c64:	01000000 	mrseq	r0, (UNDEF: 0)
    6c68:	1f0505cf 	svcne	0x000505cf
    6c6c:	0000455c 	andeq	r4, r0, ip, asr r5
    6c70:	00004525 	andeq	r4, r0, r5, lsr #10
    6c74:	00004521 	andeq	r4, r0, r1, lsr #10
    6c78:	00454f1f 	subeq	r4, r5, pc, lsl pc
    6c7c:	00454700 	subeq	r4, r5, r0, lsl #14
    6c80:	00454500 	subeq	r4, r5, r0, lsl #10
    6c84:	45692000 	strbmi	r2, [r9, #-0]!
    6c88:	455c0000 	ldrbmi	r0, [ip, #-0]
    6c8c:	455a0000 	ldrbmi	r0, [sl, #-0]
    6c90:	00000000 	andeq	r0, r0, r0
    6c94:	97012700 	strls	r2, [r1, -r0, lsl #14]
    6c98:	01000014 	tsteq	r0, r4, lsl r0
    6c9c:	011305a1 	tsteq	r3, r1, lsr #11
    6ca0:	0000023a 	andeq	r0, r0, sl, lsr r2
	...
    6cac:	0000456f 	andeq	r4, r0, pc, ror #10
    6cb0:	003cf701 	eorseq	pc, ip, r1, lsl #14
    6cb4:	15c21600 	strbne	r1, [r2, #1536]	; 0x600
    6cb8:	a1010000 	mrsge	r0, (UNDEF: 1)
    6cbc:	07963c05 	ldreq	r3, [r6, r5, lsl #24]
    6cc0:	459f0000 	ldrmi	r0, [pc]	; 6cc8 <_Min_Heap_Size+0x64c8>
    6cc4:	458f0000 	strmi	r0, [pc]	; 6ccc <_Min_Heap_Size+0x64cc>
    6cc8:	13160000 	tstne	r6, #0
    6ccc:	01000012 	tsteq	r0, r2, lsl r0
    6cd0:	824c05a1 	subhi	r0, ip, #675282944	; 0x28400000
    6cd4:	15000006 	strne	r0, [r0, #-6]
    6cd8:	0b000046 	bleq	6df8 <_Min_Heap_Size+0x65f8>
    6cdc:	16000046 	strne	r0, [r0], -r6, asr #32
    6ce0:	00004cac 	andeq	r4, r0, ip, lsr #25
    6ce4:	5c05a101 	stfpld	f2, [r5], {1}
    6ce8:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    6cec:	00004664 	andeq	r4, r0, r4, ror #12
    6cf0:	0000465a 	andeq	r4, r0, sl, asr r6
    6cf4:	00000023 	andeq	r0, r0, r3, lsr #32
    6cf8:	000dad00 	andeq	sl, sp, r0, lsl #26
    6cfc:	50011900 	andpl	r1, r1, r0, lsl #18
    6d00:	5001f303 	andpl	pc, r1, r3, lsl #6
    6d04:	01270000 			; <UNDEFINED> instruction: 0x01270000
    6d08:	00001739 	andeq	r1, r0, r9, lsr r7
    6d0c:	13056301 	movwne	r6, #21249	; 0x5301
    6d10:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    6d1c:	0046a900 	subeq	sl, r6, r0, lsl #18
    6d20:	3e110100 	mufccs	f0, f1, f0
    6d24:	c2160000 	andsgt	r0, r6, #0
    6d28:	01000015 	tsteq	r0, r5, lsl r0
    6d2c:	963d0563 	ldrtls	r0, [sp], -r3, ror #10
    6d30:	d9000007 	stmdble	r0, {r0, r1, r2}
    6d34:	c9000046 	stmdbgt	r0, {r1, r2, r6}
    6d38:	16000046 	strne	r0, [r0], -r6, asr #32
    6d3c:	00001213 	andeq	r1, r0, r3, lsl r2
    6d40:	53056301 	movwpl	r6, #21249	; 0x5301
    6d44:	0000067c 	andeq	r0, r0, ip, ror r6
    6d48:	00004749 	andeq	r4, r0, r9, asr #14
    6d4c:	0000473f 	andeq	r4, r0, pc, lsr r7
    6d50:	004cac16 	subeq	sl, ip, r6, lsl ip
    6d54:	05630100 	strbeq	r0, [r3, #-256]!	; 0xffffff00
    6d58:	0000b063 	andeq	fp, r0, r3, rrx
    6d5c:	00479800 	subeq	r9, r7, r0, lsl #16
    6d60:	00478e00 	subeq	r8, r7, r0, lsl #28
    6d64:	6d741d00 	ldclvs	13, cr1, [r4, #-0]
    6d68:	65010070 	strvs	r0, [r1, #-112]	; 0xffffff90
    6d6c:	3e111305 	cdpcc	3, 1, cr1, cr1, cr5, {0}
    6d70:	47df0000 	ldrbmi	r0, [pc, r0]
    6d74:	47dd0000 	ldrbmi	r0, [sp, r0]
    6d78:	182d0000 	stmdane	sp!, {}	; <UNPREDICTABLE>
    6d7c:	ff000001 			; <UNDEFINED> instruction: 0xff000001
    6d80:	1d00003d 	stcne	0, cr0, [r0, #-244]	; 0xffffff0c
    6d84:	006c6176 	rsbeq	r6, ip, r6, ror r1
    6d88:	05058b01 	streq	r8, [r5, #-2817]	; 0xfffff4ff
    6d8c:	000000c6 	andeq	r0, r0, r6, asr #1
    6d90:	000047f9 	strdeq	r4, [r0], -r9
    6d94:	000047f7 	strdeq	r4, [r0], -r7
    6d98:	00457d1e 	subeq	r7, r5, lr, lsl sp
	...
    6da8:	01000000 	mrseq	r0, (UNDEF: 0)
    6dac:	bf05058b 	svclt	0x0005058b
    6db0:	1f00003d 	svcne	0x0000003d
    6db4:	00004590 	muleq	r0, r0, r5
    6db8:	00004812 	andeq	r4, r0, r2, lsl r8
    6dbc:	0000480c 	andeq	r4, r0, ip, lsl #16
    6dc0:	00459d20 	subeq	r9, r5, r0, lsr #26
    6dc4:	00484100 	subeq	r4, r8, r0, lsl #2
    6dc8:	00483f00 	subeq	r3, r8, r0, lsl #30
    6dcc:	3c210000 	stccc	0, cr0, [r1], #-0
    6dd0:	00000045 	andeq	r0, r0, r5, asr #32
    6dd4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    6de0:	058b0100 	streq	r0, [fp, #256]	; 0x100
    6de4:	455c1f05 	ldrbmi	r1, [ip, #-3845]	; 0xfffff0fb
    6de8:	48580000 	ldmdami	r8, {}^	; <UNPREDICTABLE>
    6dec:	48540000 	ldmdami	r4, {}^	; <UNPREDICTABLE>
    6df0:	4f1f0000 	svcmi	0x001f0000
    6df4:	7a000045 	bvc	6f10 <_Min_Heap_Size+0x6710>
    6df8:	78000048 	stmdavc	r0, {r3, r6}
    6dfc:	20000048 	andcs	r0, r0, r8, asr #32
    6e00:	00004569 	andeq	r4, r0, r9, ror #10
    6e04:	0000488f 	andeq	r4, r0, pc, lsl #17
    6e08:	0000488d 	andeq	r4, r0, sp, lsl #17
    6e0c:	00230000 	eoreq	r0, r3, r0
    6e10:	e3000000 	movw	r0, #0
    6e14:	19000045 	stmdbne	r0, {r0, r2, r6}
    6e18:	f3035101 	vrhadd.u8	d5, d3, d1
    6e1c:	00005101 	andeq	r5, r0, r1, lsl #2
    6e20:	00d70411 	sbcseq	r0, r7, r1, lsl r4
    6e24:	01270000 			; <UNDEFINED> instruction: 0x01270000
    6e28:	000017ce 	andeq	r1, r0, lr, asr #15
    6e2c:	13054301 	movwne	r4, #21249	; 0x5301
    6e30:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    6e3c:	0048a200 	subeq	sl, r8, r0, lsl #4
    6e40:	3e880100 	rmfcce	f0, f0, f0
    6e44:	c2160000 	andsgt	r0, r6, #0
    6e48:	01000015 	tsteq	r0, r5, lsl r0
    6e4c:	963b0543 	ldrtls	r0, [fp], -r3, asr #10
    6e50:	d2000007 	andle	r0, r0, #7
    6e54:	c2000048 	andgt	r0, r0, #72	; 0x48
    6e58:	16000048 	strne	r0, [r0], -r8, asr #32
    6e5c:	00001213 	andeq	r1, r0, r3, lsl r2
    6e60:	4b054301 	blmi	157a6c <_Min_Heap_Size+0x15726c>
    6e64:	00000682 	andeq	r0, r0, r2, lsl #13
    6e68:	00004948 	andeq	r4, r0, r8, asr #18
    6e6c:	0000493e 	andeq	r4, r0, lr, lsr r9
    6e70:	004cac16 	subeq	sl, ip, r6, lsl ip
    6e74:	05430100 	strbeq	r0, [r3, #-256]	; 0xffffff00
    6e78:	0000b05b 	andeq	fp, r0, fp, asr r0
    6e7c:	00499700 	subeq	r9, r9, r0, lsl #14
    6e80:	00498d00 	subeq	r8, r9, r0, lsl #26
    6e84:	00002300 	andeq	r2, r0, r0, lsl #6
    6e88:	101f0000 	andsne	r0, pc, r0
    6e8c:	01190000 	tsteq	r9, r0
    6e90:	01f30350 	mvnseq	r0, r0, asr r3
    6e94:	28000050 	stmdacs	r0, {r4, r6}
    6e98:	00167a01 	andseq	r7, r6, r1, lsl #20
    6e9c:	051c0100 	ldreq	r0, [ip, #-256]	; 0xffffff00
    6ea0:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    6eac:	7d020000 	stcvc	0, cr0, [r2, #-0]
    6eb0:	3ee70100 	cdpcc	1, 14, cr0, cr7, cr0, {0}
    6eb4:	c2160000 	andsgt	r0, r6, #0
    6eb8:	01000015 	tsteq	r0, r5, lsl r0
    6ebc:	963c051c 			; <UNDEFINED> instruction: 0x963c051c
    6ec0:	ec000007 	stc	0, cr0, [r0], {7}
    6ec4:	dc000049 	stcle	0, cr0, [r0], {73}	; 0x49
    6ec8:	16000049 	strne	r0, [r0], -r9, asr #32
    6ecc:	00001213 	andeq	r1, r0, r3, lsl r2
    6ed0:	52051c01 	andpl	r1, r5, #256	; 0x100
    6ed4:	0000067c 	andeq	r0, r0, ip, ror r6
    6ed8:	00004a60 	andeq	r4, r0, r0, ror #20
    6edc:	00004a58 	andeq	r4, r0, r8, asr sl
    6ee0:	004cac16 	subeq	sl, ip, r6, lsl ip
    6ee4:	051c0100 	ldreq	r0, [ip, #-256]	; 0xffffff00
    6ee8:	0000b062 	andeq	fp, r0, r2, rrx
    6eec:	004aa000 	subeq	sl, sl, r0
    6ef0:	004a9800 	subeq	r9, sl, r0, lsl #16
    6ef4:	01270000 			; <UNDEFINED> instruction: 0x01270000
    6ef8:	00001669 	andeq	r1, r0, r9, ror #12
    6efc:	1304c501 	movwne	ip, #17665	; 0x4501
    6f00:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    6f0c:	004ad800 	subeq	sp, sl, r0, lsl #16
    6f10:	3fcc0100 	svccc	0x00cc0100
    6f14:	c2160000 	andsgt	r0, r6, #0
    6f18:	01000015 	tsteq	r0, r5, lsl r0
    6f1c:	963804c5 	ldrtls	r0, [r8], -r5, asr #9
    6f20:	2c000007 	stccs	0, cr0, [r0], {7}
    6f24:	1c00004b 	stcne	0, cr0, [r0], {75}	; 0x4b
    6f28:	1600004b 	strne	r0, [r0], -fp, asr #32
    6f2c:	00001213 	andeq	r1, r0, r3, lsl r2
    6f30:	4804c501 	stmdami	r4, {r0, r8, sl, lr, pc}
    6f34:	00000682 	andeq	r0, r0, r2, lsl #13
    6f38:	00004b9d 	muleq	r0, sp, fp
    6f3c:	00004b8f 	andeq	r4, r0, pc, lsl #23
    6f40:	004cac16 	subeq	sl, ip, r6, lsl ip
    6f44:	04c50100 	strbeq	r0, [r5], #256	; 0x100
    6f48:	0000b058 	andeq	fp, r0, r8, asr r0
    6f4c:	004c0200 	subeq	r0, ip, r0, lsl #4
    6f50:	004bf800 	subeq	pc, fp, r0, lsl #16
    6f54:	3e431600 	cdpcc	6, 4, cr1, cr3, cr0, {0}
    6f58:	c5010000 	strgt	r0, [r1, #-0]
    6f5c:	00c66704 	sbceq	r6, r6, r4, lsl #14
    6f60:	4c4b0000 	marmi	acc0, r0, fp
    6f64:	4c470000 	marmi	acc0, r0, r7
    6f68:	3f170000 	svccc	0x00170000
    6f6c:	01000012 	tsteq	r0, r2, lsl r0
    6f70:	820d04c7 	andhi	r0, sp, #-956301312	; 0xc7000000
    6f74:	6b000006 	blvs	6f94 <_Min_Heap_Size+0x6794>
    6f78:	6900004c 	stmdbvs	r0, {r2, r3, r6}
    6f7c:	1700004c 	strne	r0, [r0, -ip, asr #32]
    6f80:	000012a9 	andeq	r1, r0, r9, lsr #5
    6f84:	0d04c801 	stceq	8, cr12, [r4, #-4]
    6f88:	000008cf 	andeq	r0, r0, pc, asr #17
    6f8c:	00004c84 	andeq	r4, r0, r4, lsl #25
    6f90:	00004c7e 	andeq	r4, r0, lr, ror ip
    6f94:	00160c17 	andseq	r0, r6, r7, lsl ip
    6f98:	04c90100 	strbeq	r0, [r9], #256	; 0x100
    6f9c:	0000c60c 	andeq	ip, r0, ip, lsl #12
    6fa0:	004cb900 	subeq	fp, ip, r0, lsl #18
    6fa4:	004caf00 	subeq	sl, ip, r0, lsl #30
    6fa8:	00001a00 	andeq	r1, r0, r0, lsl #20
    6fac:	45f20000 	ldrbmi	r0, [r2, #0]!
    6fb0:	00230000 	eoreq	r0, r3, r0
    6fb4:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    6fb8:	19000010 	stmdbne	r0, {r4}
    6fbc:	74025001 	strvc	r5, [r2], #-1
    6fc0:	51011900 	tstpl	r1, r0, lsl #18
    6fc4:	19200802 	stmdbne	r0!, {r1, fp}
    6fc8:	30015201 	andcc	r5, r1, r1, lsl #4
    6fcc:	02530119 	subseq	r0, r3, #1073741830	; 0x40000006
    6fd0:	02190077 	andseq	r0, r9, #119	; 0x77
    6fd4:	7602007d 			; <UNDEFINED> instruction: 0x7602007d
    6fd8:	27000000 	strcs	r0, [r0, -r0]
    6fdc:	00014201 	andeq	r4, r1, r1, lsl #4
    6fe0:	046f0100 	strbteq	r0, [pc], #-256	; 6fe8 <_Min_Heap_Size+0x67e8>
    6fe4:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
    6fe8:	0c440000 	mareq	acc0, r0, r4
    6fec:	0d100800 	ldceq	8, cr0, [r0, #-0]
    6ff0:	4cfb0800 	ldclmi	8, cr0, [fp]
    6ff4:	dd010000 	stcle	0, cr0, [r1, #-0]
    6ff8:	16000040 	strne	r0, [r0], -r0, asr #32
    6ffc:	000015c2 	andeq	r1, r0, r2, asr #11
    7000:	39046f01 	stmdbcc	r4, {r0, r8, r9, sl, fp, sp, lr}
    7004:	00000796 	muleq	r0, r6, r7
    7008:	00004d4f 	andeq	r4, r0, pc, asr #26
    700c:	00004d3f 	andeq	r4, r0, pc, lsr sp
    7010:	00121316 	andseq	r1, r2, r6, lsl r3
    7014:	046f0100 	strbteq	r0, [pc], #-256	; 701c <_Min_Heap_Size+0x681c>
    7018:	00067c4f 	andeq	r7, r6, pc, asr #24
    701c:	004dc400 	subeq	ip, sp, r0, lsl #8
    7020:	004db200 	subeq	fp, sp, r0, lsl #4
    7024:	4cac1600 	stcmi	6, cr1, [ip]
    7028:	6f010000 	svcvs	0x00010000
    702c:	00b05f04 	adcseq	r5, r0, r4, lsl #30
    7030:	4e420000 	cdpmi	0, 4, cr0, cr2, cr0, {0}
    7034:	4e380000 	cdpmi	0, 3, cr0, cr8, cr0, {0}
    7038:	43160000 	tstmi	r6, #0
    703c:	0100003e 	tsteq	r0, lr, lsr r0
    7040:	c66e046f 	strbtgt	r0, [lr], -pc, ror #8
    7044:	8b000000 	blhi	704c <_Min_Heap_Size+0x684c>
    7048:	8700004e 	strhi	r0, [r0, -lr, asr #32]
    704c:	1700004e 	strne	r0, [r0, -lr, asr #32]
    7050:	0000123f 	andeq	r1, r0, pc, lsr r2
    7054:	13047101 	movwne	r7, #16641	; 0x4101
    7058:	0000067c 	andeq	r0, r0, ip, ror r6
    705c:	00004eb1 			; <UNDEFINED> instruction: 0x00004eb1
    7060:	00004ea9 	andeq	r4, r0, r9, lsr #29
    7064:	0012a917 	andseq	sl, r2, r7, lsl r9
    7068:	04720100 	ldrbteq	r0, [r2], #-256	; 0xffffff00
    706c:	00096413 	andeq	r6, r9, r3, lsl r4
    7070:	004eef00 	subeq	lr, lr, r0, lsl #30
    7074:	004ee700 	subeq	lr, lr, r0, lsl #14
    7078:	160c1700 	strne	r1, [ip], -r0, lsl #14
    707c:	73010000 	movwvc	r0, #4096	; 0x1000
    7080:	00c60c04 	sbceq	r0, r6, r4, lsl #24
    7084:	4f330000 	svcmi	0x00330000
    7088:	4f250000 	svcmi	0x00250000
    708c:	741a0000 	ldrvc	r0, [sl], #-0
    7090:	f208000c 	vhadd.s8	d0, d8, d12
    7094:	18000045 	stmdane	r0, {r0, r2, r6}
    7098:	08000cca 	stmdaeq	r0, {r1, r3, r6, r7, sl, fp}
    709c:	00001078 	andeq	r1, r0, r8, ror r0
    70a0:	000040b4 	strheq	r4, [r0], -r4	; <UNPREDICTABLE>
    70a4:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    70a8:	01190074 	tsteq	r9, r4, ror r0
    70ac:	80080251 	andhi	r0, r8, r1, asr r2
    70b0:	01520119 	cmpeq	r2, r9, lsl r1
    70b4:	53011930 	movwpl	r1, #6448	; 0x1930
    70b8:	19007702 	stmdbne	r0, {r1, r8, r9, sl, ip, sp, lr}
    70bc:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    70c0:	23000076 	movwcs	r0, #118	; 0x76
    70c4:	08000cf0 	stmdaeq	r0, {r4, r5, r6, r7, sl, fp}
    70c8:	00001078 	andeq	r1, r0, r8, ror r0
    70cc:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    70d0:	01190074 	tsteq	r9, r4, ror r0
    70d4:	40080251 	andmi	r0, r8, r1, asr r2
    70d8:	01520119 	cmpeq	r2, r9, lsl r1
    70dc:	53011930 	movwpl	r1, #6448	; 0x1930
    70e0:	19007702 	stmdbne	r0, {r1, r8, r9, sl, ip, sp, lr}
    70e4:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    70e8:	00000076 	andeq	r0, r0, r6, ror r0
    70ec:	0bfb012a 	bleq	ffec759c <_estack+0xdfebdbfc>
    70f0:	da010000 	ble	470f8 <_Min_Heap_Size+0x468f8>
    70f4:	00010d02 	andeq	r0, r1, r2, lsl #26
    70f8:	00000000 	andeq	r0, r0, r0
    70fc:	02000000 	andeq	r0, r0, #0
    7100:	0801007d 	stmdaeq	r1, {r0, r2, r3, r4, r5, r6}
    7104:	29000041 	stmdbcs	r0, {r0, r6}
    7108:	000015c2 	andeq	r1, r0, r2, asr #11
    710c:	3402da01 	strcc	sp, [r2], #-2561	; 0xfffff5ff
    7110:	00000796 	muleq	r0, r6, r7
    7114:	2a005001 	bcs	1b120 <_Min_Heap_Size+0x1a920>
    7118:	000bcc01 	andeq	ip, fp, r1, lsl #24
    711c:	02cb0100 	sbceq	r0, fp, #0, 2
    7120:	0000010d 	andeq	r0, r0, sp, lsl #2
    7124:	00000000 	andeq	r0, r0, r0
    7128:	7d020000 	stcvc	0, cr0, [r2, #-0]
    712c:	41330100 	teqmi	r3, r0, lsl #2
    7130:	c2290000 	eorgt	r0, r9, #0
    7134:	01000015 	tsteq	r0, r5, lsl r0
    7138:	963202cb 	ldrtls	r0, [r2], -fp, asr #5
    713c:	01000007 	tsteq	r0, r7
    7140:	01270050 	qsubeq	r0, r0, r7
    7144:	000012ef 	andeq	r1, r0, pc, ror #5
    7148:	13029d01 	movwne	r9, #11521	; 0x2d01
    714c:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    7158:	004f8b00 	subeq	r8, pc, r0, lsl #22
    715c:	41970100 	orrsmi	r0, r7, r0, lsl #2
    7160:	c2160000 	andsgt	r0, r6, #0
    7164:	01000015 	tsteq	r0, r5, lsl r0
    7168:	9637029d 			; <UNDEFINED> instruction: 0x9637029d
    716c:	bf000007 	svclt	0x00000007
    7170:	b700004f 	strlt	r0, [r0, -pc, asr #32]
    7174:	1800004f 	stmdane	r0, {r0, r1, r2, r3, r6}
    7178:	00000000 	andeq	r0, r0, r0
    717c:	000045ab 	andeq	r4, r0, fp, lsr #11
    7180:	00004186 	andeq	r4, r0, r6, lsl #3
    7184:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    7188:	00452003 	subeq	r2, r5, r3
    718c:	51011908 	tstpl	r1, r8, lsl #18
    7190:	02a60a03 	adceq	r0, r6, #12288	; 0x3000
    7194:	00002300 	andeq	r2, r0, r0, lsl #6
    7198:	40dd0000 	sbcsmi	r0, sp, r0
    719c:	01190000 	tsteq	r9, r0
    71a0:	00740250 	rsbseq	r0, r4, r0, asr r2
    71a4:	01270000 			; <UNDEFINED> instruction: 0x01270000
    71a8:	000014cb 	andeq	r1, r0, fp, asr #9
    71ac:	13024f01 	movwne	r4, #12033	; 0x2f01
    71b0:	00023a01 	andeq	r3, r2, r1, lsl #20
	...
    71bc:	004ff600 	subeq	pc, pc, r0, lsl #12
    71c0:	42b10100 	adcsmi	r0, r1, #0, 2
    71c4:	c2160000 	andsgt	r0, r6, #0
    71c8:	01000015 	tsteq	r0, r5, lsl r0
    71cc:	963f024f 	ldrtls	r0, [pc], -pc, asr #4
    71d0:	2a000007 	bcs	71f4 <_Min_Heap_Size+0x69f4>
    71d4:	22000050 	andcs	r0, r0, #80	; 0x50
    71d8:	16000050 			; <UNDEFINED> instruction: 0x16000050
    71dc:	00001d97 	muleq	r0, r7, sp
    71e0:	4e024f01 	cdpmi	15, 0, cr4, cr2, cr1, {0}
    71e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    71e8:	00005067 	andeq	r5, r0, r7, rrx
    71ec:	00005061 	andeq	r5, r0, r1, rrx
    71f0:	0012ff16 	andseq	pc, r2, r6, lsl pc	; <UNPREDICTABLE>
    71f4:	024f0100 	subeq	r0, pc, #0, 2
    71f8:	0000c660 	andeq	ip, r0, r0, ror #12
    71fc:	00509d00 	subseq	r9, r0, r0, lsl #26
    7200:	00509300 	subseq	r9, r0, r0, lsl #6
    7204:	00001800 	andeq	r1, r0, r0, lsl #16
    7208:	45ab0000 	strmi	r0, [fp, #0]!
    720c:	42140000 	andsmi	r0, r4, #0
    7210:	01190000 	tsteq	r9, r0
    7214:	20030550 	andcs	r0, r3, r0, asr r5
    7218:	19080045 	stmdbne	r8, {r0, r2, r6}
    721c:	0a035101 	beq	db628 <_Min_Heap_Size+0xdae28>
    7220:	18000258 	stmdane	r0, {r3, r4, r6, r9}
    7224:	00000000 	andeq	r0, r0, r0
    7228:	0000069f 	muleq	r0, pc, r6	; <UNPREDICTABLE>
    722c:	00004228 	andeq	r4, r0, r8, lsr #4
    7230:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    7234:	18000074 	stmdane	r0, {r2, r4, r5, r6}
    7238:	00000000 	andeq	r0, r0, r0
    723c:	000045ab 	andeq	r4, r0, fp, lsr #11
    7240:	00004246 	andeq	r4, r0, r6, asr #4
    7244:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    7248:	00452003 	subeq	r2, r5, r3
    724c:	51011908 	tstpl	r1, r8, lsl #18
    7250:	025b0a03 	subseq	r0, fp, #12288	; 0x3000
    7254:	00001800 	andeq	r1, r0, r0, lsl #16
    7258:	45ab0000 	strmi	r0, [fp, #0]!
    725c:	42640000 	rsbmi	r0, r4, #0
    7260:	01190000 	tsteq	r9, r0
    7264:	20030550 	andcs	r0, r3, r0, asr r5
    7268:	19080045 	stmdbne	r8, {r0, r2, r6}
    726c:	0a035101 	beq	db678 <_Min_Heap_Size+0xdae78>
    7270:	1800025c 	stmdane	r0, {r2, r3, r4, r6, r9}
    7274:	00000000 	andeq	r0, r0, r0
    7278:	000045ab 	andeq	r4, r0, fp, lsr #11
    727c:	00004282 	andeq	r4, r0, r2, lsl #5
    7280:	05500119 	ldrbeq	r0, [r0, #-281]	; 0xfffffee7
    7284:	00452003 	subeq	r2, r5, r3
    7288:	51011908 	tstpl	r1, r8, lsl #18
    728c:	025d0a03 	subseq	r0, sp, #12288	; 0x3000
    7290:	00001800 	andeq	r1, r0, r0, lsl #16
    7294:	45ab0000 	strmi	r0, [fp, #0]!
    7298:	42a00000 	adcmi	r0, r0, #0
    729c:	01190000 	tsteq	r9, r0
    72a0:	20030550 	andcs	r0, r3, r0, asr r5
    72a4:	19080045 	stmdbne	r8, {r0, r2, r6}
    72a8:	0a035101 	beq	db6b4 <_Min_Heap_Size+0xdaeb4>
    72ac:	2300025e 	movwcs	r0, #606	; 0x25e
    72b0:	00000000 	andeq	r0, r0, r0
    72b4:	00004108 	andeq	r4, r0, r8, lsl #2
    72b8:	02500119 	subseq	r0, r0, #1073741830	; 0x40000006
    72bc:	00000074 	andeq	r0, r0, r4, ror r0
    72c0:	17e20127 	strbne	r0, [r2, r7, lsr #2]!
    72c4:	fd010000 	stc2	0, cr0, [r1, #-0]
    72c8:	3a011301 	bcc	4bed4 <_Min_Heap_Size+0x4b6d4>
    72cc:	00000002 	andeq	r0, r0, r2
    72d0:	00000000 	andeq	r0, r0, r0
    72d4:	df000000 	svcle	0x00000000
    72d8:	01000050 	qaddeq	r0, r0, r0
    72dc:	00004398 	muleq	r0, r8, r3
    72e0:	0015c216 	andseq	ip, r5, r6, lsl r2
    72e4:	01fd0100 	mvnseq	r0, r0, lsl #2
    72e8:	00079634 	andeq	r9, r7, r4, lsr r6
    72ec:	00511300 	subseq	r1, r1, r0, lsl #6
    72f0:	00510b00 	subseq	r0, r1, r0, lsl #22
    72f4:	130c1600 	movwne	r1, #50688	; 0xc600
    72f8:	fd010000 	stc2	0, cr0, [r1, #-0]
    72fc:	00c64401 	sbceq	r4, r6, r1, lsl #8
    7300:	51540000 	cmppl	r4, r0
    7304:	514a0000 	mrspl	r0, (UNDEF: 74)
    7308:	00180000 	andseq	r0, r8, r0
    730c:	ab000000 	blge	7314 <_Min_Heap_Size+0x6b14>
    7310:	19000045 	stmdbne	r0, {r0, r2, r6}
    7314:	19000043 	stmdbne	r0, {r0, r1, r6}
    7318:	03055001 	movweq	r5, #20481	; 0x5001
    731c:	08004520 	stmdaeq	r0, {r5, r8, sl, lr}
    7320:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7324:	0002060a 	andeq	r0, r2, sl, lsl #12
    7328:	00000018 	andeq	r0, r0, r8, lsl r0
    732c:	00069f00 	andeq	r9, r6, r0, lsl #30
    7330:	00432d00 	subeq	r2, r3, r0, lsl #26
    7334:	50011900 	andpl	r1, r1, r0, lsl #18
    7338:	00007402 	andeq	r7, r0, r2, lsl #8
    733c:	00000018 	andeq	r0, r0, r8, lsl r0
    7340:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7344:	00434b00 	subeq	r4, r3, r0, lsl #22
    7348:	50011900 	andpl	r1, r1, r0, lsl #18
    734c:	45200305 	strmi	r0, [r0, #-773]!	; 0xfffffcfb
    7350:	01190800 	tsteq	r9, r0, lsl #16
    7354:	090a0351 	stmdbeq	sl, {r0, r4, r6, r8, r9}
    7358:	00180002 	andseq	r0, r8, r2
    735c:	ab000000 	blge	7364 <_Min_Heap_Size+0x6b64>
    7360:	69000045 	stmdbvs	r0, {r0, r2, r6}
    7364:	19000043 	stmdbne	r0, {r0, r1, r6}
    7368:	03055001 	movweq	r5, #20481	; 0x5001
    736c:	08004520 	stmdaeq	r0, {r5, r8, sl, lr}
    7370:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7374:	00020a0a 	andeq	r0, r2, sl, lsl #20
    7378:	00000018 	andeq	r0, r0, r8, lsl r0
    737c:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7380:	00438700 	subeq	r8, r3, r0, lsl #14
    7384:	50011900 	andpl	r1, r1, r0, lsl #18
    7388:	45200305 	strmi	r0, [r0, #-773]!	; 0xfffffcfb
    738c:	01190800 	tsteq	r9, r0, lsl #16
    7390:	0b0a0351 	bleq	2880dc <_Min_Heap_Size+0x2878dc>
    7394:	00230002 	eoreq	r0, r3, r2
    7398:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    739c:	19000041 	stmdbne	r0, {r0, r6}
    73a0:	74025001 	strvc	r5, [r2], #-1
    73a4:	27000000 	strcs	r0, [r0, -r0]
    73a8:	0012db01 	andseq	sp, r2, r1, lsl #22
    73ac:	01b30100 			; <UNDEFINED> instruction: 0x01b30100
    73b0:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
	...
    73bc:	51960000 	orrspl	r0, r6, r0
    73c0:	4c010000 	stcmi	0, cr0, [r1], {-0}
    73c4:	16000044 	strne	r0, [r0], -r4, asr #32
    73c8:	000015c2 	andeq	r1, r0, r2, asr #11
    73cc:	3b01b301 	blcc	73fd8 <_Min_Heap_Size+0x737d8>
    73d0:	00000796 	muleq	r0, r6, r7
    73d4:	000051ca 	andeq	r5, r0, sl, asr #3
    73d8:	000051c2 	andeq	r5, r0, r2, asr #3
    73dc:	00000018 	andeq	r0, r0, r8, lsl r0
    73e0:	0045ab00 	subeq	sl, r5, r0, lsl #22
    73e4:	0043eb00 	subeq	lr, r3, r0, lsl #22
    73e8:	50011900 	andpl	r1, r1, r0, lsl #18
    73ec:	45200305 	strmi	r0, [r0, #-773]!	; 0xfffffcfb
    73f0:	01190800 	tsteq	r9, r0, lsl #16
    73f4:	bc0a0351 	stclt	3, cr0, [sl], {81}	; 0x51
    73f8:	00180001 	andseq	r0, r8, r1
    73fc:	9f000000 	svcls	0x00000000
    7400:	ff000006 			; <UNDEFINED> instruction: 0xff000006
    7404:	19000043 	stmdbne	r0, {r0, r1, r6}
    7408:	74025001 	strvc	r5, [r2], #-1
    740c:	00180000 	andseq	r0, r8, r0
    7410:	ab000000 	blge	7418 <_Min_Heap_Size+0x6c18>
    7414:	1d000045 	stcne	0, cr0, [r0, #-276]	; 0xfffffeec
    7418:	19000044 	stmdbne	r0, {r2, r6}
    741c:	03055001 	movweq	r5, #20481	; 0x5001
    7420:	08004520 	stmdaeq	r0, {r5, r8, sl, lr}
    7424:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7428:	0001bd0a 	andeq	fp, r1, sl, lsl #26
    742c:	00000018 	andeq	r0, r0, r8, lsl r0
    7430:	0045ab00 	subeq	sl, r5, r0, lsl #22
    7434:	00443b00 	subeq	r3, r4, r0, lsl #22
    7438:	50011900 	andpl	r1, r1, r0, lsl #18
    743c:	45200305 	strmi	r0, [r0, #-773]!	; 0xfffffcfb
    7440:	01190800 	tsteq	r9, r0, lsl #16
    7444:	be0a0351 	mcrlt	3, 0, r0, cr10, cr1, {2}
    7448:	00230001 	eoreq	r0, r3, r1
    744c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7450:	19000041 	stmdbne	r0, {r0, r6}
    7454:	74025001 	strvc	r5, [r2], #-1
    7458:	27000000 	strcs	r0, [r0, -r0]
    745c:	000d0801 	andeq	r0, sp, r1, lsl #16
    7460:	01650100 	cmneq	r5, r0, lsl #2
    7464:	023a0113 	eorseq	r0, sl, #-1073741820	; 0xc0000004
    7468:	0b180000 	bleq	607470 <_Min_Heap_Size+0x606c70>
    746c:	0c440800 	mcrreq	8, 0, r0, r4, cr0
    7470:	52010800 	andpl	r0, r1, #0, 16
    7474:	3c010000 	stccc	0, cr0, [r1], {-0}
    7478:	16000045 	strne	r0, [r0], -r5, asr #32
    747c:	000015c2 	andeq	r1, r0, r2, asr #11
    7480:	35016501 	strcc	r6, [r1, #-1281]	; 0xfffffaff
    7484:	00000796 	muleq	r0, r6, r7
    7488:	00005239 	andeq	r5, r0, r9, lsr r2
    748c:	0000522d 	andeq	r5, r0, sp, lsr #4
    7490:	000b5218 	andeq	r5, fp, r8, lsl r2
    7494:	0045ab08 	subeq	sl, r5, r8, lsl #22
    7498:	00449f00 	subeq	r9, r4, r0, lsl #30
    749c:	50011900 	andpl	r1, r1, r0, lsl #18
    74a0:	45200305 	strmi	r0, [r0, #-773]!	; 0xfffffcfb
    74a4:	01190800 	tsteq	r9, r0, lsl #16
    74a8:	730a0351 	movwvc	r0, #41809	; 0xa351
    74ac:	9a180001 	bls	6074b8 <_Min_Heap_Size+0x606cb8>
    74b0:	9f08000b 	svcls	0x0008000b
    74b4:	b3000006 	movwlt	r0, #6
    74b8:	19000044 	stmdbne	r0, {r2, r6}
    74bc:	74025001 	strvc	r5, [r2], #-1
    74c0:	d4180000 	ldrle	r0, [r8], #-0
    74c4:	ab08000b 	blge	2074f8 <_Min_Heap_Size+0x206cf8>
    74c8:	d1000045 	tstle	r0, r5, asr #32
    74cc:	19000044 	stmdbne	r0, {r2, r6}
    74d0:	03055001 	movweq	r5, #20481	; 0x5001
    74d4:	08004520 	stmdaeq	r0, {r5, r8, sl, lr}
    74d8:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    74dc:	0001740a 	andeq	r7, r1, sl, lsl #8
    74e0:	000c1018 	andeq	r1, ip, r8, lsl r0
    74e4:	0045ab08 	subeq	sl, r5, r8, lsl #22
    74e8:	0044ef00 	subeq	lr, r4, r0, lsl #30
    74ec:	50011900 	andpl	r1, r1, r0, lsl #18
    74f0:	45200305 	strmi	r0, [r0, #-773]!	; 0xfffffcfb
    74f4:	01190800 	tsteq	r9, r0, lsl #16
    74f8:	780a0351 	stmdavc	sl, {r0, r4, r6, r8, r9}
    74fc:	1c180001 	ldcne	0, cr0, [r8], {1}
    7500:	ab08000c 	blge	207538 <_Min_Heap_Size+0x206d38>
    7504:	0d000045 	stceq	0, cr0, [r0, #-276]	; 0xfffffeec
    7508:	19000045 	stmdbne	r0, {r0, r2, r6}
    750c:	03055001 	movweq	r5, #20481	; 0x5001
    7510:	08004520 	stmdaeq	r0, {r5, r8, sl, lr}
    7514:	03510119 	cmpeq	r1, #1073741830	; 0x40000006
    7518:	00017a0a 	andeq	r7, r1, sl, lsl #20
    751c:	000c2818 	andeq	r2, ip, r8, lsl r8
    7520:	0045ab08 	subeq	sl, r5, r8, lsl #22
    7524:	00452b00 	subeq	r2, r5, r0, lsl #22
    7528:	50011900 	andpl	r1, r1, r0, lsl #18
    752c:	45200305 	strmi	r0, [r0, #-773]!	; 0xfffffcfb
    7530:	01190800 	tsteq	r9, r0, lsl #16
    7534:	7b0a0351 	blvc	288280 <_Min_Heap_Size+0x287a80>
    7538:	34230001 	strtcc	r0, [r3], #-1
    753c:	0808000c 	stmdaeq	r8, {r2, r3}
    7540:	19000041 	stmdbne	r0, {r0, r6}
    7544:	74025001 	strvc	r5, [r2], #-1
    7548:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    754c:	00001391 	muleq	r0, r1, r3
    7550:	1f020f02 	svcne	0x00020f02
    7554:	0000c601 	andeq	ip, r0, r1, lsl #12
    7558:	45770300 	ldrbmi	r0, [r7, #-768]!	; 0xfffffd00
    755c:	d92f0000 	stmdble	pc!, {}	; <UNPREDICTABLE>
    7560:	0200001f 	andeq	r0, r0, #31
    7564:	c631020f 	ldrtgt	r0, [r1], -pc, lsl #4
    7568:	2f000000 	svccs	0x00000000
    756c:	000000d5 	ldrdeq	r0, [r0], -r5
    7570:	4b020f02 	blmi	8b180 <_Min_Heap_Size+0x8a980>
    7574:	00004577 	andeq	r4, r0, r7, ror r5
    7578:	0017ef30 	andseq	lr, r7, r0, lsr pc
    757c:	02110200 	andseq	r0, r1, #0, 4
    7580:	0000c60d 	andeq	ip, r0, sp, lsl #12
    7584:	04110000 	ldreq	r0, [r1], #-0
    7588:	000000d2 	ldrdeq	r0, [r0], -r2
    758c:	0015222e 	andseq	r2, r5, lr, lsr #4
    7590:	01dc0200 	bicseq	r0, ip, r0, lsl #4
    7594:	00c6011f 	sbceq	r0, r6, pc, lsl r1
    7598:	ab030000 	blge	c75a0 <_Min_Heap_Size+0xc6da0>
    759c:	2f000045 	svccs	0x00000045
    75a0:	000000d5 	ldrdeq	r0, [r0], -r5
    75a4:	3b01dc02 	blcc	7e5b4 <_Min_Heap_Size+0x7ddb4>
    75a8:	00004577 	andeq	r4, r0, r7, ror r5
    75ac:	0017ef30 	andseq	lr, r7, r0, lsr pc
    75b0:	01de0200 	bicseq	r0, lr, r0, lsl #4
    75b4:	0000c60e 	andeq	ip, r0, lr, lsl #12
    75b8:	01310000 	teqeq	r1, r0
    75bc:	000aaa01 	andeq	sl, sl, r1, lsl #20
    75c0:	000aaa00 	andeq	sl, sl, r0, lsl #20
    75c4:	01e60a00 	mvneq	r0, r0, lsl #20
    75c8:	01013108 	tsteq	r1, r8, lsl #2
    75cc:	00001139 	andeq	r1, r0, r9, lsr r1
    75d0:	00001139 	andeq	r1, r0, r9, lsr r1
    75d4:	0a04ea0b 	beq	141e08 <_Min_Heap_Size+0x141608>
    75d8:	c8010131 	stmdagt	r1, {r0, r4, r5, r8}
    75dc:	c8000015 	stmdagt	r0, {r0, r2, r4}
    75e0:	0b000015 	bleq	763c <_Min_Heap_Size+0x6e3c>
    75e4:	320a04eb 	andcc	r0, sl, #-352321536	; 0xeb000000
    75e8:	15800101 	strne	r0, [r0, #257]	; 0x101
    75ec:	15800000 	strne	r0, [r0]
    75f0:	01310000 	teqeq	r1, r0
    75f4:	00127101 	andseq	r7, r2, r1, lsl #2
    75f8:	00127100 	andseq	r7, r2, r0, lsl #2
    75fc:	02970800 	addseq	r0, r7, #0, 16
    7600:	01013313 	tsteq	r1, r3, lsl r3
    7604:	00001466 	andeq	r1, r0, r6, ror #8
    7608:	00001466 	andeq	r1, r0, r6, ror #8
    760c:	310aea0c 	tstcc	sl, ip, lsl #20
    7610:	13d30101 	bicsne	r0, r3, #1073741824	; 0x40000000
    7614:	13d30000 	bicsne	r0, r3, #0
    7618:	98080000 	stmdals	r8, {}	; <UNPREDICTABLE>
    761c:	01311302 	teqeq	r1, r2, lsl #6
    7620:	00119701 	andseq	r9, r1, r1, lsl #14
    7624:	00119700 	andseq	r9, r1, r0, lsl #14
    7628:	02990800 	addseq	r0, r9, #0, 16
    762c:	01013113 	tsteq	r1, r3, lsl r1
    7630:	00001728 	andeq	r1, r0, r8, lsr #14
    7634:	00001728 	andeq	r1, r0, r8, lsr #14
    7638:	1602a908 	strne	sl, [r2], -r8, lsl #18
    763c:	000e7f00 	andeq	r7, lr, r0, lsl #30
    7640:	4a000200 	bmi	7e48 <_Min_Heap_Size+0x7648>
    7644:	0400000b 	streq	r0, [r0], #-11
    7648:	00062101 	andeq	r2, r6, r1, lsl #2
    764c:	19590c00 	ldmdbne	r9, {sl, fp}^
    7650:	04e90000 	strbteq	r0, [r9], #0
    7654:	03400000 	movteq	r0, #0
	...
    7660:	53d90000 	bicspl	r0, r9, #0
    7664:	01020000 	mrseq	r0, (UNDEF: 2)
    7668:	00060f06 	andeq	r0, r6, r6, lsl #30
    766c:	00760300 	rsbseq	r0, r6, r0, lsl #6
    7670:	2b020000 	blcs	87678 <_Min_Heap_Size+0x86e78>
    7674:	00003c18 	andeq	r3, r0, r8, lsl ip
    7678:	08010200 	stmdaeq	r1, {r9}
    767c:	0000060d 	andeq	r0, r0, sp, lsl #12
    7680:	2a050202 	bcs	147e90 <_Min_Heap_Size+0x147690>
    7684:	03000004 	movweq	r0, #4
    7688:	0000078e 	andeq	r0, r0, lr, lsl #15
    768c:	56193902 	ldrpl	r3, [r9], -r2, lsl #18
    7690:	02000000 	andeq	r0, r0, #0
    7694:	08280702 	stmdaeq	r8!, {r1, r8, r9, sl}
    7698:	04020000 	streq	r0, [r2], #-0
    769c:	00032d05 	andeq	r2, r3, r5, lsl #26
    76a0:	02ef0300 	rsceq	r0, pc, #0, 6
    76a4:	4f020000 	svcmi	0x00020000
    76a8:	00007019 	andeq	r7, r0, r9, lsl r0
    76ac:	07040200 	streq	r0, [r4, -r0, lsl #4]
    76b0:	000000c3 	andeq	r0, r0, r3, asr #1
    76b4:	28050802 	stmdacs	r5, {r1, fp}
    76b8:	03000003 	movweq	r0, #3
    76bc:	00001575 	andeq	r1, r0, r5, ror r5
    76c0:	8a196902 	bhi	661ad0 <_Min_Heap_Size+0x6612d0>
    76c4:	02000000 	andeq	r0, r0, #0
    76c8:	00be0708 	adcseq	r0, lr, r8, lsl #14
    76cc:	04040000 	streq	r0, [r4], #-0
    76d0:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    76d4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    76d8:	000000c8 	andeq	r0, r0, r8, asr #1
    76dc:	00007803 	andeq	r7, r0, r3, lsl #16
    76e0:	13180300 	tstne	r8, #0, 6
    76e4:	00000030 	andeq	r0, r0, r0, lsr r0
    76e8:	00009f05 	andeq	r9, r0, r5, lsl #30
    76ec:	07900300 	ldreq	r0, [r0, r0, lsl #6]
    76f0:	24030000 	strcs	r0, [r3], #-0
    76f4:	00004a14 	andeq	r4, r0, r4, lsl sl
    76f8:	02f10300 	rscseq	r0, r1, #0, 6
    76fc:	30030000 	andcc	r0, r3, r0
    7700:	00006414 	andeq	r6, r0, r4, lsl r4
    7704:	00bc0600 	adcseq	r0, ip, r0, lsl #12
    7708:	77030000 	strvc	r0, [r3, -r0]
    770c:	03000015 	movweq	r0, #21
    7710:	007e143c 	rsbseq	r1, lr, ip, lsr r4
    7714:	bc070000 	stclt	0, cr0, [r7], {-0}
    7718:	e9000000 	stmdb	r0, {}	; <UNPREDICTABLE>
    771c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7720:	00000098 	muleq	r0, r8, r0
    7724:	c1090001 	tstgt	r9, r1
    7728:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
    772c:	00bc1139 	adcseq	r1, ip, r9, lsr r1
    7730:	01010000 	mrseq	r0, (UNDEF: 1)
    7734:	0000ab07 	andeq	sl, r0, r7, lsl #22
    7738:	00010700 	andeq	r0, r1, r0, lsl #14
    773c:	00980800 	addseq	r0, r8, r0, lsl #16
    7740:	000f0000 	andeq	r0, pc, r0
    7744:	0000f705 	andeq	pc, r0, r5, lsl #14
    7748:	18810900 	stmne	r1, {r8, fp}
    774c:	3b040000 	blcc	107754 <_Min_Heap_Size+0x106f54>
    7750:	00010717 	andeq	r0, r1, r7, lsl r7
    7754:	07010100 	streq	r0, [r1, -r0, lsl #2]
    7758:	000000ab 	andeq	r0, r0, fp, lsr #1
    775c:	0000012a 	andeq	r0, r0, sl, lsr #2
    7760:	00009808 	andeq	r9, r0, r8, lsl #16
    7764:	05000700 	streq	r0, [r0, #-1792]	; 0xfffff900
    7768:	0000011a 	andeq	r0, r0, sl, lsl r1
    776c:	00181d09 	andseq	r1, r8, r9, lsl #26
    7770:	173c0400 	ldrne	r0, [ip, -r0, lsl #8]!
    7774:	0000012a 	andeq	r0, r0, sl, lsr #2
    7778:	1c0a0101 	stfnes	f0, [sl], {1}
    777c:	09016805 	stmdbeq	r1, {r0, r2, fp, sp, lr}
    7780:	000001b6 			; <UNDEFINED> instruction: 0x000001b6
    7784:	5243410b 	subpl	r4, r3, #-1073741822	; 0xc0000002
    7788:	016a0500 	cmneq	sl, r0, lsl #10
    778c:	0000c811 	andeq	ip, r0, r1, lsl r8
    7790:	00230200 	eoreq	r0, r3, r0, lsl #4
    7794:	0018490c 	andseq	r4, r8, ip, lsl #18
    7798:	016b0500 	cmneq	fp, r0, lsl #10
    779c:	0000c811 	andeq	ip, r0, r1, lsl r8
    77a0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    77a4:	0018460c 	andseq	r4, r8, ip, lsl #12
    77a8:	016c0500 	cmneq	ip, r0, lsl #10
    77ac:	0000c811 	andeq	ip, r0, r1, lsl r8
    77b0:	08230200 	stmdaeq	r3!, {r9}
    77b4:	0052530b 	subseq	r5, r2, fp, lsl #6
    77b8:	11016d05 	tstne	r1, r5, lsl #26
    77bc:	000000c8 	andeq	r0, r0, r8, asr #1
    77c0:	0b0c2302 	bleq	3103d0 <_Min_Heap_Size+0x30fbd0>
    77c4:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    77c8:	c811016e 	ldmdagt	r1, {r1, r2, r3, r5, r6, r8}
    77cc:	02000000 	andeq	r0, r0, #0
    77d0:	2b0c1023 	blcs	30b864 <_Min_Heap_Size+0x30b064>
    77d4:	05000018 	streq	r0, [r0, #-24]	; 0xffffffe8
    77d8:	c811016f 	ldmdagt	r1, {r0, r1, r2, r3, r5, r6, r8}
    77dc:	02000000 	andeq	r0, r0, #0
    77e0:	5d0c1423 	cfstrspl	mvf1, [ip, #-140]	; 0xffffff74
    77e4:	05000018 	streq	r0, [r0, #-24]	; 0xffffffe8
    77e8:	c8110170 	ldmdagt	r1, {r4, r5, r6, r8}
    77ec:	02000000 	andeq	r0, r0, #0
    77f0:	0d001823 	stceq	8, cr1, [r0, #-140]	; 0xffffff74
    77f4:	00001831 	andeq	r1, r0, r1, lsr r8
    77f8:	03017105 	movweq	r7, #4357	; 0x1105
    77fc:	0000013d 	andeq	r0, r0, sp, lsr r1
    7800:	ae05280a 	cdpge	8, 0, cr2, cr5, cr10, {0}
    7804:	025e0901 	subseq	r0, lr, #16384	; 0x4000
    7808:	940c0000 	strls	r0, [ip], #-0
    780c:	05000010 	streq	r0, [r0, #-16]
    7810:	c81101b0 	ldmdagt	r1, {r4, r5, r7, r8}
    7814:	02000000 	andeq	r0, r0, #0
    7818:	990c0023 	stmdbls	ip, {r0, r1, r5}
    781c:	0500000f 	streq	r0, [r0, #-15]
    7820:	c81101b1 	ldmdagt	r1, {r0, r4, r5, r7, r8}
    7824:	02000000 	andeq	r0, r0, #0
    7828:	170c0423 	strne	r0, [ip, -r3, lsr #8]
    782c:	0500000e 	streq	r0, [r0, #-14]
    7830:	c81101b2 	ldmdagt	r1, {r1, r4, r5, r7, r8}
    7834:	02000000 	andeq	r0, r0, #0
    7838:	610c0823 	tstvs	ip, r3, lsr #16
    783c:	0500000e 	streq	r0, [r0, #-14]
    7840:	c81101b3 	ldmdagt	r1, {r0, r1, r4, r5, r7, r8}
    7844:	02000000 	andeq	r0, r0, #0
    7848:	490b0c23 	stmdbmi	fp, {r0, r1, r5, sl, fp}
    784c:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
    7850:	c81101b4 	ldmdagt	r1, {r2, r4, r5, r7, r8}
    7854:	02000000 	andeq	r0, r0, #0
    7858:	4f0b1023 	svcmi	0x000b1023
    785c:	05005244 	streq	r5, [r0, #-580]	; 0xfffffdbc
    7860:	c81101b5 	ldmdagt	r1, {r0, r2, r4, r5, r7, r8}
    7864:	02000000 	andeq	r0, r0, #0
    7868:	470c1423 	strmi	r1, [ip, -r3, lsr #8]
    786c:	05000010 	streq	r0, [r0, #-16]
    7870:	c81101b6 	ldmdagt	r1, {r1, r2, r4, r5, r7, r8}
    7874:	02000000 	andeq	r0, r0, #0
    7878:	050c1823 	streq	r1, [ip, #-2083]	; 0xfffff7dd
    787c:	0500000e 	streq	r0, [r0, #-14]
    7880:	c81101b7 	ldmdagt	r1, {r0, r1, r2, r4, r5, r7, r8}
    7884:	02000000 	andeq	r0, r0, #0
    7888:	410b1c23 	tstmi	fp, r3, lsr #24
    788c:	05005246 	streq	r5, [r0, #-582]	; 0xfffffdba
    7890:	6e1101b8 	mrcvs	1, 0, r0, cr1, cr8, {5}
    7894:	02000002 	andeq	r0, r0, #2
    7898:	07002023 	streq	r2, [r0, -r3, lsr #32]
    789c:	000000c8 	andeq	r0, r0, r8, asr #1
    78a0:	0000026e 	andeq	r0, r0, lr, ror #4
    78a4:	00009808 	andeq	r9, r0, r8, lsl #16
    78a8:	06000100 	streq	r0, [r0], -r0, lsl #2
    78ac:	0000025e 	andeq	r0, r0, lr, asr r2
    78b0:	00104c0d 	andseq	r4, r0, sp, lsl #24
    78b4:	01b90500 			; <UNDEFINED> instruction: 0x01b90500
    78b8:	0001c303 	andeq	ip, r1, r3, lsl #6
    78bc:	05080a00 	streq	r0, [r8, #-2560]	; 0xfffff600
    78c0:	aa0901ea 	bge	248070 <_Min_Heap_Size+0x247870>
    78c4:	0b000002 	bleq	78d4 <_Min_Heap_Size+0x70d4>
    78c8:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    78cc:	c81101ec 	ldmdagt	r1, {r2, r3, r5, r6, r7, r8}
    78d0:	02000000 	andeq	r0, r0, #0
    78d4:	430b0023 	movwmi	r0, #45091	; 0xb023
    78d8:	05005253 	streq	r5, [r0, #-595]	; 0xfffffdad
    78dc:	c81101ed 	ldmdagt	r1, {r0, r2, r3, r5, r6, r7, r8}
    78e0:	02000000 	andeq	r0, r0, #0
    78e4:	0d000423 	cfstrseq	mvf0, [r0, #-140]	; 0xffffff74
    78e8:	000001de 	ldrdeq	r0, [r0], -lr
    78ec:	0301ee05 	movweq	lr, #7685	; 0x1e05
    78f0:	00000280 	andeq	r0, r0, r0, lsl #5
    78f4:	f405880a 	vst2.8	{d8-d9}, [r5], sl
    78f8:	04a30901 	strteq	r0, [r3], #2305	; 0x901
    78fc:	430b0000 	movwmi	r0, #45056	; 0xb000
    7900:	f6050052 			; <UNDEFINED> instruction: 0xf6050052
    7904:	00c81101 	sbceq	r1, r8, r1, lsl #2
    7908:	23020000 	movwcs	r0, #8192	; 0x2000
    790c:	02b40c00 	adcseq	r0, r4, #0, 24
    7910:	f7050000 			; <UNDEFINED> instruction: 0xf7050000
    7914:	00c81101 	sbceq	r1, r8, r1, lsl #2
    7918:	23020000 	movwcs	r0, #8192	; 0x2000
    791c:	02b70c04 	adcseq	r0, r7, #4, 24	; 0x400
    7920:	f8050000 			; <UNDEFINED> instruction: 0xf8050000
    7924:	00c81101 	sbceq	r1, r8, r1, lsl #2
    7928:	23020000 	movwcs	r0, #8192	; 0x2000
    792c:	49430b08 	stmdbmi	r3, {r3, r8, r9, fp}^
    7930:	f9050052 			; <UNDEFINED> instruction: 0xf9050052
    7934:	00c81101 	sbceq	r1, r8, r1, lsl #2
    7938:	23020000 	movwcs	r0, #8192	; 0x2000
    793c:	018f0c0c 	orreq	r0, pc, ip, lsl #24
    7940:	fa050000 	blx	147948 <_Min_Heap_Size+0x147148>
    7944:	00c81101 	sbceq	r1, r8, r1, lsl #2
    7948:	23020000 	movwcs	r0, #8192	; 0x2000
    794c:	07b00c10 			; <UNDEFINED> instruction: 0x07b00c10
    7950:	fb050000 	blx	14795a <_Min_Heap_Size+0x14715a>
    7954:	00c81101 	sbceq	r1, r8, r1, lsl #2
    7958:	23020000 	movwcs	r0, #8192	; 0x2000
    795c:	07150c14 			; <UNDEFINED> instruction: 0x07150c14
    7960:	fc050000 	stc2	0, cr0, [r5], {-0}
    7964:	00c81101 	sbceq	r1, r8, r1, lsl #2
    7968:	23020000 	movwcs	r0, #8192	; 0x2000
    796c:	05a80c18 	streq	r0, [r8, #3096]!	; 0xc18
    7970:	fd050000 	stc2	0, cr0, [r5, #-0]
    7974:	00bc1101 	adcseq	r1, ip, r1, lsl #2
    7978:	23020000 	movwcs	r0, #8192	; 0x2000
    797c:	05930c1c 	ldreq	r0, [r3, #3100]	; 0xc1c
    7980:	fe050000 	cdp2	0, 0, cr0, cr5, cr0, {0}
    7984:	00c81101 	sbceq	r1, r8, r1, lsl #2
    7988:	23020000 	movwcs	r0, #8192	; 0x2000
    798c:	022d0c20 	eoreq	r0, sp, #32, 24	; 0x2000
    7990:	ff050000 			; <UNDEFINED> instruction: 0xff050000
    7994:	00c81101 	sbceq	r1, r8, r1, lsl #2
    7998:	23020000 	movwcs	r0, #8192	; 0x2000
    799c:	05b20c24 	ldreq	r0, [r2, #3108]!	; 0xc24
    79a0:	00050000 	andeq	r0, r5, r0
    79a4:	00d91102 	sbcseq	r1, r9, r2, lsl #2
    79a8:	23020000 	movwcs	r0, #8192	; 0x2000
    79ac:	09150c28 	ldmdbeq	r5, {r3, r5, sl, fp}
    79b0:	01050000 	mrseq	r0, (UNDEF: 5)
    79b4:	00c81102 	sbceq	r1, r8, r2, lsl #2
    79b8:	23020000 	movwcs	r0, #8192	; 0x2000
    79bc:	08200c30 	stmdaeq	r0!, {r4, r5, sl, fp}
    79c0:	02050000 	andeq	r0, r5, #0
    79c4:	00c81102 	sbceq	r1, r8, r2, lsl #2
    79c8:	23020000 	movwcs	r0, #8192	; 0x2000
    79cc:	052e0c34 	streq	r0, [lr, #-3124]!	; 0xfffff3cc
    79d0:	03050000 	movweq	r0, #20480	; 0x5000
    79d4:	00c81102 	sbceq	r1, r8, r2, lsl #2
    79d8:	23020000 	movwcs	r0, #8192	; 0x2000
    79dc:	05bc0c38 	ldreq	r0, [ip, #3128]!	; 0xc38
    79e0:	04050000 	streq	r0, [r5], #-0
    79e4:	00bc1102 	adcseq	r1, ip, r2, lsl #2
    79e8:	23020000 	movwcs	r0, #8192	; 0x2000
    79ec:	07500c3c 	smmlareq	r0, ip, ip, r0
    79f0:	05050000 	streq	r0, [r5, #-0]
    79f4:	00c81102 	sbceq	r1, r8, r2, lsl #2
    79f8:	23020000 	movwcs	r0, #8192	; 0x2000
    79fc:	070d0c40 	streq	r0, [sp, -r0, asr #24]
    7a00:	06050000 	streq	r0, [r5], -r0
    7a04:	00c81102 	sbceq	r1, r8, r2, lsl #2
    7a08:	23020000 	movwcs	r0, #8192	; 0x2000
    7a0c:	05c60c44 	strbeq	r0, [r6, #3140]	; 0xc44
    7a10:	07050000 	streq	r0, [r5, -r0]
    7a14:	00d91102 	sbcseq	r1, r9, r2, lsl #2
    7a18:	23020000 	movwcs	r0, #8192	; 0x2000
    7a1c:	01540c48 	cmpeq	r4, r8, asr #24
    7a20:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    7a24:	00c81102 	sbceq	r1, r8, r2, lsl #2
    7a28:	23020000 	movwcs	r0, #8192	; 0x2000
    7a2c:	05680c50 	strbeq	r0, [r8, #-3152]!	; 0xfffff3b0
    7a30:	09050000 	stmdbeq	r5, {}	; <UNPREDICTABLE>
    7a34:	00c81102 	sbceq	r1, r8, r2, lsl #2
    7a38:	23020000 	movwcs	r0, #8192	; 0x2000
    7a3c:	06db0c54 			; <UNDEFINED> instruction: 0x06db0c54
    7a40:	0a050000 	beq	147a48 <_Min_Heap_Size+0x147248>
    7a44:	00c81102 	sbceq	r1, r8, r2, lsl #2
    7a48:	23020000 	movwcs	r0, #8192	; 0x2000
    7a4c:	05d00c58 	ldrbeq	r0, [r0, #3160]	; 0xc58
    7a50:	0b050000 	bleq	147a58 <_Min_Heap_Size+0x147258>
    7a54:	00bc1102 	adcseq	r1, ip, r2, lsl #2
    7a58:	23020000 	movwcs	r0, #8192	; 0x2000
    7a5c:	001b0c5c 	andseq	r0, fp, ip, asr ip
    7a60:	0c050000 	stceq	0, cr0, [r5], {-0}
    7a64:	00c81102 	sbceq	r1, r8, r2, lsl #2
    7a68:	23020000 	movwcs	r0, #8192	; 0x2000
    7a6c:	041b0c60 	ldreq	r0, [fp], #-3168	; 0xfffff3a0
    7a70:	0d050000 	stceq	0, cr0, [r5, #-0]
    7a74:	00c81102 	sbceq	r1, r8, r2, lsl #2
    7a78:	23020000 	movwcs	r0, #8192	; 0x2000
    7a7c:	05da0c64 	ldrbeq	r0, [sl, #3172]	; 0xc64
    7a80:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    7a84:	00d91102 	sbcseq	r1, r9, r2, lsl #2
    7a88:	23020000 	movwcs	r0, #8192	; 0x2000
    7a8c:	08b10c68 	ldmeq	r1!, {r3, r5, r6, sl, fp}
    7a90:	0f050000 	svceq	0x00050000
    7a94:	00c81102 	sbceq	r1, r8, r2, lsl #2
    7a98:	23020000 	movwcs	r0, #8192	; 0x2000
    7a9c:	53430b70 	movtpl	r0, #15216	; 0x3b70
    7aa0:	10050052 	andne	r0, r5, r2, asr r0
    7aa4:	00c81102 	sbceq	r1, r8, r2, lsl #2
    7aa8:	23020000 	movwcs	r0, #8192	; 0x2000
    7aac:	05e40c74 	strbeq	r0, [r4, #3188]!	; 0xc74
    7ab0:	11050000 	mrsne	r0, (UNDEF: 5)
    7ab4:	00d91102 	sbcseq	r1, r9, r2, lsl #2
    7ab8:	23020000 	movwcs	r0, #8192	; 0x2000
    7abc:	08800c78 	stmeq	r0, {r3, r4, r5, r6, sl, fp}
    7ac0:	12050000 	andne	r0, r5, #0
    7ac4:	00c81102 	sbceq	r1, r8, r2, lsl #2
    7ac8:	23030000 	movwcs	r0, #12288	; 0x3000
    7acc:	ae0c0180 	adfge<illegal precision>	f0, f4, f0
    7ad0:	05000003 	streq	r0, [r0, #-3]
    7ad4:	c8110213 	ldmdagt	r1, {r0, r1, r4, r9}
    7ad8:	03000000 	movweq	r0, #0
    7adc:	00018423 	andeq	r8, r1, r3, lsr #8
    7ae0:	0002010d 	andeq	r0, r2, sp, lsl #2
    7ae4:	02140500 	andseq	r0, r4, #0, 10
    7ae8:	0002b703 	andeq	fp, r2, r3, lsl #14
    7aec:	01070e00 	tsteq	r7, r0, lsl #28
    7af0:	0000003c 	andeq	r0, r0, ip, lsr r0
    7af4:	cb01b906 	blgt	75f14 <_Min_Heap_Size+0x75714>
    7af8:	0f000004 	svceq	0x00000004
    7afc:	00000130 	andeq	r0, r0, r0, lsr r1
    7b00:	45531000 	ldrbmi	r1, [r3, #-0]
    7b04:	00010054 	andeq	r0, r1, r4, asr r0
    7b08:	00118c03 	andseq	r8, r1, r3, lsl #24
    7b0c:	03bc0600 			; <UNDEFINED> instruction: 0x03bc0600
    7b10:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
    7b14:	3c01070e 	stccc	7, cr0, [r1], {14}
    7b18:	06000000 	streq	r0, [r0], -r0
    7b1c:	04f201bf 	ldrbteq	r0, [r2], #447	; 0x1bf
    7b20:	550f0000 	strpl	r0, [pc, #-0]	; 7b28 <_Min_Heap_Size+0x7328>
    7b24:	00000018 	andeq	r0, r0, r8, lsl r0
    7b28:	00183f0f 	andseq	r3, r8, pc, lsl #30
    7b2c:	02000100 	andeq	r0, r0, #0, 2
    7b30:	07580408 	ldrbeq	r0, [r8, -r8, lsl #8]
    7b34:	070e0000 	streq	r0, [lr, -r0]
    7b38:	00003c01 	andeq	r3, r0, r1, lsl #24
    7b3c:	01270700 			; <UNDEFINED> instruction: 0x01270700
    7b40:	00000520 	andeq	r0, r0, r0, lsr #10
    7b44:	0003770f 	andeq	r7, r3, pc, lsl #14
    7b48:	460f0000 	strmi	r0, [pc], -r0
    7b4c:	01000007 	tsteq	r0, r7
    7b50:	00094a0f 	andeq	r4, r9, pc, lsl #20
    7b54:	580f0200 	stmdapl	pc, {r9}	; <UNPREDICTABLE>
    7b58:	03000003 	movweq	r0, #3
    7b5c:	13c10300 	bicne	r0, r1, #0, 6
    7b60:	2c070000 	stccs	0, cr0, [r7], {-0}
    7b64:	0004f903 	andeq	pc, r4, r3, lsl #18
    7b68:	08181100 	ldmdaeq	r8, {r8, ip}
    7b6c:	0590092d 	ldreq	r0, [r0, #2349]	; 0x92d
    7b70:	90120000 	andsls	r0, r2, r0
    7b74:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7b78:	00bc0c2f 	adcseq	r0, ip, pc, lsr #24
    7b7c:	23020000 	movwcs	r0, #8192	; 0x2000
    7b80:	06e51200 	strbteq	r1, [r5], r0, lsl #4
    7b84:	32080000 	andcc	r0, r8, #0
    7b88:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7b8c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    7b90:	00009912 	andeq	r9, r0, r2, lsl r9
    7b94:	0c350800 	ldceq	8, cr0, [r5], #-0
    7b98:	000000bc 	strheq	r0, [r0], -ip
    7b9c:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    7ba0:	0000009e 	muleq	r0, lr, r0
    7ba4:	bc0c3808 	stclt	8, cr3, [ip], {8}
    7ba8:	02000000 	andeq	r0, r0, #0
    7bac:	a3120c23 	tstge	r2, #8960	; 0x2300
    7bb0:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    7bb4:	00bc0c3c 	adcseq	r0, ip, ip, lsr ip
    7bb8:	23020000 	movwcs	r0, #8192	; 0x2000
    7bbc:	00a81210 	adceq	r1, r8, r0, lsl r2
    7bc0:	3f080000 	svccc	0x00080000
    7bc4:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7bc8:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    7bcc:	08f80300 	ldmeq	r8!, {r8, r9}^
    7bd0:	49080000 	stmdbmi	r8, {}	; <UNPREDICTABLE>
    7bd4:	00052c02 	andeq	r2, r5, r2, lsl #24
    7bd8:	09301100 	ldmdbeq	r0!, {r8, ip}
    7bdc:	060f0931 			; <UNDEFINED> instruction: 0x060f0931
    7be0:	e7120000 	ldr	r0, [r2, -r0]
    7be4:	09000003 	stmdbeq	r0, {r0, r1}
    7be8:	00bc0c33 	adcseq	r0, ip, r3, lsr ip
    7bec:	23020000 	movwcs	r0, #8192	; 0x2000
    7bf0:	03481200 	movteq	r1, #33280	; 0x8200
    7bf4:	36090000 	strcc	r0, [r9], -r0
    7bf8:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7bfc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    7c00:	00010112 	andeq	r0, r1, r2, lsl r1
    7c04:	0c390900 			; <UNDEFINED> instruction: 0x0c390900
    7c08:	000000bc 	strheq	r0, [r0], -ip
    7c0c:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    7c10:	00000273 	andeq	r0, r0, r3, ror r2
    7c14:	bc0c3c09 	stclt	12, cr3, [ip], {9}
    7c18:	02000000 	andeq	r0, r0, #0
    7c1c:	92120c23 	andsls	r0, r2, #8960	; 0x2300
    7c20:	09000002 	stmdbeq	r0, {r1}
    7c24:	00bc0c3f 	adcseq	r0, ip, pc, lsr ip
    7c28:	23020000 	movwcs	r0, #8192	; 0x2000
    7c2c:	02401210 	subeq	r1, r0, #16, 4
    7c30:	42090000 	andmi	r0, r9, #0
    7c34:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7c38:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    7c3c:	4c4c5013 	mcrrmi	0, 1, r5, ip, cr3
    7c40:	16450900 	strbne	r0, [r5], -r0, lsl #18
    7c44:	00000590 	muleq	r0, r0, r5
    7c48:	00182302 	andseq	r2, r8, r2, lsl #6
    7c4c:	00017c03 	andeq	r7, r1, r3, lsl #24
    7c50:	02460900 	subeq	r0, r6, #0, 18
    7c54:	0000059c 	muleq	r0, ip, r5
    7c58:	4b091411 	blmi	24cca4 <_Min_Heap_Size+0x24c4a4>
    7c5c:	00067009 	andeq	r7, r6, r9
    7c60:	090b1200 	stmdbeq	fp, {r9, ip}
    7c64:	4d090000 	stcmi	0, cr0, [r9, #-0]
    7c68:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7c6c:	00230200 	eoreq	r0, r3, r0, lsl #4
    7c70:	0009b212 	andeq	fp, r9, r2, lsl r2
    7c74:	0c500900 	mrrceq	9, 0, r0, r0, cr0	; <UNPREDICTABLE>
    7c78:	000000bc 	strheq	r0, [r0], -ip
    7c7c:	12042302 	andne	r2, r4, #134217728	; 0x8000000
    7c80:	00000443 	andeq	r0, r0, r3, asr #8
    7c84:	bc0c5309 	stclt	3, cr5, [ip], {9}
    7c88:	02000000 	andeq	r0, r0, #0
    7c8c:	5d120823 	ldcpl	8, cr0, [r2, #-140]	; 0xffffff74
    7c90:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    7c94:	00bc0c56 	adcseq	r0, ip, r6, asr ip
    7c98:	23020000 	movwcs	r0, #8192	; 0x2000
    7c9c:	07cc120c 	strbeq	r1, [ip, ip, lsl #4]
    7ca0:	59090000 	stmdbpl	r9, {}	; <UNPREDICTABLE>
    7ca4:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7ca8:	10230200 	eorne	r0, r3, r0, lsl #4
    7cac:	05800300 	streq	r0, [r0, #768]	; 0x300
    7cb0:	5c090000 	stcpl	0, cr0, [r9], {-0}
    7cb4:	00061b02 	andeq	r1, r6, r2, lsl #22
    7cb8:	0a141100 	beq	50c0c0 <_Min_Heap_Size+0x50b8c0>
    7cbc:	06d1092e 	ldrbeq	r0, [r1], lr, lsr #18
    7cc0:	50130000 	andspl	r0, r3, r0
    7cc4:	0a006e69 	beq	23670 <_Min_Heap_Size+0x22e70>
    7cc8:	00bc0c30 	adcseq	r0, ip, r0, lsr ip
    7ccc:	23020000 	movwcs	r0, #8192	; 0x2000
    7cd0:	07361200 	ldreq	r1, [r6, -r0, lsl #4]!
    7cd4:	330a0000 	movwcc	r0, #40960	; 0xa000
    7cd8:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    7cdc:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    7ce0:	000f0312 	andeq	r0, pc, r2, lsl r3	; <UNPREDICTABLE>
    7ce4:	0c360a00 			; <UNDEFINED> instruction: 0x0c360a00
    7ce8:	000000bc 	strheq	r0, [r0], -ip
    7cec:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    7cf0:	00000b2d 	andeq	r0, r0, sp, lsr #22
    7cf4:	bc0c390a 			; <UNDEFINED> instruction: 0xbc0c390a
    7cf8:	02000000 	andeq	r0, r0, #0
    7cfc:	91120c23 	tstls	r2, r3, lsr #24
    7d00:	0a00000e 	beq	7d40 <_Min_Heap_Size+0x7540>
    7d04:	00bc0c3c 	adcseq	r0, ip, ip, lsr ip
    7d08:	23020000 	movwcs	r0, #8192	; 0x2000
    7d0c:	51030010 	tstpl	r3, r0, lsl r0
    7d10:	0a00000c 	beq	7d48 <_Min_Heap_Size+0x7548>
    7d14:	067c023e 			; <UNDEFINED> instruction: 0x067c023e
    7d18:	e9090000 	stmdb	r9, {}	; <UNPREDICTABLE>
    7d1c:	0b000018 	bleq	7d84 <_Min_Heap_Size+0x7584>
    7d20:	00bc11cd 	adcseq	r1, ip, sp, asr #3
    7d24:	01010000 	mrseq	r0, (UNDEF: 1)
    7d28:	17f60114 			; <UNDEFINED> instruction: 0x17f60114
    7d2c:	4b010000 	blmi	47d34 <_Min_Heap_Size+0x47534>
    7d30:	00010d04 	andeq	r0, r1, r4, lsl #26
    7d34:	00000000 	andeq	r0, r0, r0
    7d38:	02000000 	andeq	r0, r0, #0
    7d3c:	1501007d 	strne	r0, [r1, #-125]	; 0xffffff83
    7d40:	0019b901 	andseq	fp, r9, r1, lsl #18
    7d44:	043a0100 	ldrteq	r0, [sl], #-256	; 0xffffff00
    7d48:	00000106 	andeq	r0, r0, r6, lsl #2
    7d4c:	00000000 	andeq	r0, r0, r0
    7d50:	52860000 	addpl	r0, r6, #0
    7d54:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    7d58:	16000007 	strne	r0, [r0], -r7
    7d5c:	00000000 	andeq	r0, r0, r0
    7d60:	000006eb 	andeq	r0, r0, fp, ror #13
    7d64:	2e011700 	cdpcs	7, 0, cr1, cr1, cr0, {0}
    7d68:	01000019 	tsteq	r0, r9, lsl r0
    7d6c:	01060420 	tsteq	r6, r0, lsr #8
	...
    7d78:	01007d02 	tsteq	r0, r2, lsl #26
    7d7c:	00000762 	andeq	r0, r0, r2, ror #14
    7d80:	00033618 	andeq	r3, r3, r8, lsl r6
    7d84:	04200100 	strteq	r0, [r0], #-256	; 0xffffff00
    7d88:	00076232 	andeq	r6, r7, r2, lsr r2
    7d8c:	18500100 	ldmdane	r0, {r8}^
    7d90:	0000199a 	muleq	r0, sl, r9
    7d94:	4f042001 	svcmi	0x00042001
    7d98:	00000768 	andeq	r0, r0, r8, ror #14
    7d9c:	19005101 	stmdbne	r0, {r0, r8, ip, lr}
    7da0:	00067004 	andeq	r7, r6, r4
    7da4:	bc041900 			; <UNDEFINED> instruction: 0xbc041900
    7da8:	17000000 	strne	r0, [r0, -r0]
    7dac:	0019a401 	andseq	sl, r9, r1, lsl #8
    7db0:	03d10100 	bicseq	r0, r1, #0, 2
    7db4:	0000010d 	andeq	r0, r0, sp, lsl #2
    7db8:	00000000 	andeq	r0, r0, r0
    7dbc:	7d020000 	stcvc	0, cr0, [r2, #-0]
    7dc0:	07990100 	ldreq	r0, [r9, r0, lsl #2]
    7dc4:	0a180000 	beq	607dcc <_Min_Heap_Size+0x6075cc>
    7dc8:	01000001 	tsteq	r0, r1
    7dcc:	993703d1 	ldmdbls	r7!, {r0, r4, r6, r7, r8, r9}
    7dd0:	01000007 	tsteq	r0, r7
    7dd4:	04190050 	ldreq	r0, [r9], #-80	; 0xffffffb0
    7dd8:	0000060f 	andeq	r0, r0, pc, lsl #12
    7ddc:	15c8011a 	strbne	r0, [r8, #282]	; 0x11a
    7de0:	c4010000 	strgt	r0, [r1], #-0
    7de4:	bc010a03 			; <UNDEFINED> instruction: 0xbc010a03
    7de8:	dc000000 	stcle	0, cr0, [r0], {-0}
    7dec:	fc080010 	stc2	0, cr0, [r8], {16}
    7df0:	a6080010 			; <UNDEFINED> instruction: 0xa6080010
    7df4:	01000052 	qaddeq	r0, r2, r0
    7df8:	000007c9 	andeq	r0, r0, r9, asr #15
    7dfc:	0010e216 	andseq	lr, r0, r6, lsl r2
    7e00:	0007f308 	andeq	pc, r7, r8, lsl #6
    7e04:	011a0000 	tsteq	sl, r0
    7e08:	00001139 	andeq	r1, r0, r9, lsr r1
    7e0c:	0a03b801 	beq	f5e18 <_Min_Heap_Size+0xf5618>
    7e10:	0000bc01 	andeq	fp, r0, r1, lsl #24
    7e14:	0010bc00 	andseq	fp, r0, r0, lsl #24
    7e18:	0010dc08 	andseq	sp, r0, r8, lsl #24
    7e1c:	0052c608 	subseq	ip, r2, r8, lsl #12
    7e20:	07f30100 	ldrbeq	r0, [r3, r0, lsl #2]!
    7e24:	c2160000 	andsgt	r0, r6, #0
    7e28:	f3080010 	vqadd.u8	d0, d8, d0
    7e2c:	00000007 	andeq	r0, r0, r7
    7e30:	1945011b 	stmdbne	r5, {r0, r1, r3, r4, r8}^
    7e34:	ad010000 	stcge	0, cr0, [r1, #-0]
    7e38:	bc010a03 			; <UNDEFINED> instruction: 0xbc010a03
    7e3c:	b0000000 	andlt	r0, r0, r0
    7e40:	bc080010 	stclt	0, cr0, [r8], {16}
    7e44:	02080010 	andeq	r0, r8, #16
    7e48:	1a01007d 	bne	48044 <_Min_Heap_Size+0x47844>
    7e4c:	0018f901 	andseq	pc, r8, r1, lsl #18
    7e50:	03750100 	cmneq	r5, #0, 2
    7e54:	00bc0111 	adcseq	r0, ip, r1, lsl r1
	...
    7e60:	52e60000 	rscpl	r0, r6, #0
    7e64:	95010000 	strls	r0, [r1, #-0]
    7e68:	1c000008 	stcne	0, cr0, [r0], {8}
    7e6c:	000018f4 	strdeq	r1, [r0], -r4
    7e70:	0c037701 	stceq	7, cr7, [r3], {1}
    7e74:	000000bc 	strheq	r0, [r0], -ip
    7e78:	0000530e 	andeq	r5, r0, lr, lsl #6
    7e7c:	00005306 	andeq	r5, r0, r6, lsl #6
    7e80:	00184e1c 	andseq	r4, r8, ip, lsl lr
    7e84:	03770100 	cmneq	r7, #0, 2
    7e88:	0000bc17 	andeq	fp, r0, r7, lsl ip
    7e8c:	00534c00 	subseq	r4, r3, r0, lsl #24
    7e90:	00534400 	subseq	r4, r3, r0, lsl #8
    7e94:	180a1c00 	stmdane	sl, {sl, fp, ip}
    7e98:	77010000 	strvc	r0, [r1, -r0]
    7e9c:	00bc2403 	adcseq	r2, ip, r3, lsl #8
    7ea0:	53890000 	orrpl	r0, r9, #0
    7ea4:	53830000 	orrpl	r0, r3, #0
    7ea8:	8f1c0000 	svchi	0x001c0000
    7eac:	01000018 	tsteq	r0, r8, lsl r0
    7eb0:	bc0c0378 	stclt	3, cr0, [ip], {120}	; 0x78
    7eb4:	bc000000 	stclt	0, cr0, [r0], {-0}
    7eb8:	b4000053 	strlt	r0, [r0], #-83	; 0xffffffad
    7ebc:	16000053 			; <UNDEFINED> instruction: 0x16000053
    7ec0:	00000000 	andeq	r0, r0, r0
    7ec4:	00000e3e 	andeq	r0, r0, lr, lsr lr
    7ec8:	00000016 	andeq	r0, r0, r6, lsl r0
    7ecc:	000e3e00 	andeq	r3, lr, r0, lsl #28
    7ed0:	01140000 	tsteq	r4, r0
    7ed4:	0000189c 	muleq	r0, ip, r8
    7ed8:	06035201 	streq	r5, [r3], -r1, lsl #4
    7edc:	00000001 	andeq	r0, r0, r1
    7ee0:	00000000 	andeq	r0, r0, r0
    7ee4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    7ee8:	6f011401 	svcvs	0x00011401
    7eec:	01000018 	tsteq	r0, r8, lsl r0
    7ef0:	01060349 	tsteq	r6, r9, asr #6
	...
    7efc:	01007d02 	tsteq	r0, r2, lsl #26
    7f00:	18af0115 	stmiane	pc!, {r0, r2, r4, r8}	; <UNPREDICTABLE>
    7f04:	07010000 	streq	r0, [r1, -r0]
    7f08:	00010603 	andeq	r0, r1, r3, lsl #12
    7f0c:	00000000 	andeq	r0, r0, r0
    7f10:	f7000000 			; <UNDEFINED> instruction: 0xf7000000
    7f14:	01000053 	qaddeq	r0, r3, r0
    7f18:	00000a19 	andeq	r0, r0, r9, lsl sl
    7f1c:	0019911d 	andseq	r9, r9, sp, lsl r1
    7f20:	03070100 	movweq	r0, #28928	; 0x7100
    7f24:	0000bc21 	andeq	fp, r0, r1, lsr #24
    7f28:	00544900 	subseq	r4, r4, r0, lsl #18
    7f2c:	00543b00 	subseq	r3, r4, r0, lsl #22
    7f30:	19201d00 	stmdbne	r0!, {r8, sl, fp, ip}
    7f34:	07010000 	streq	r0, [r1, -r0]
    7f38:	00bc3403 	adcseq	r3, ip, r3, lsl #8
    7f3c:	54ac0000 	strtpl	r0, [ip], #0
    7f40:	54a40000 	strtpl	r0, [r4], #0
    7f44:	641d0000 	ldrvs	r0, [sp], #-0
    7f48:	01000018 	tsteq	r0, r8, lsl r0
    7f4c:	bc4c0307 	mcrrlt	3, 0, r0, ip, cr7
    7f50:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    7f54:	e0000054 	and	r0, r0, r4, asr r0
    7f58:	1e000054 	mcrne	0, 0, r0, cr0, cr4, {2}
    7f5c:	00000b71 	andeq	r0, r0, r1, ror fp
    7f60:	14030901 	strne	r0, [r3], #-2305	; 0xfffff6ff
    7f64:	000006d1 	ldrdeq	r0, [r0], -r1
    7f68:	1f5c9102 	svcne	0x005c9102
	...
    7f74:	0000094c 	andeq	r0, r0, ip, asr #18
    7f78:	0001ea1e 	andeq	lr, r1, lr, lsl sl
    7f7c:	03130100 	tsteq	r3, #0, 2
    7f80:	0000c805 	andeq	ip, r0, r5, lsl #16
    7f84:	54910200 	ldrpl	r0, [r1], #512	; 0x200
    7f88:	00001f00 	andeq	r1, r0, r0, lsl #30
    7f8c:	00000000 	andeq	r0, r0, r0
    7f90:	096a0000 	stmdbeq	sl!, {}^	; <UNPREDICTABLE>
    7f94:	ea1e0000 	b	787f9c <_Min_Heap_Size+0x78779c>
    7f98:	01000001 	tsteq	r0, r1
    7f9c:	c805032b 	stmdagt	r5, {r0, r1, r3, r5, r8, r9}
    7fa0:	02000000 	andeq	r0, r0, #0
    7fa4:	20005891 	mulcs	r0, r1, r8
    7fa8:	00000000 	andeq	r0, r0, r0
    7fac:	00000e49 	andeq	r0, r0, r9, asr #28
    7fb0:	00000987 	andeq	r0, r0, r7, lsl #19
    7fb4:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    7fb8:	0200000c 	andeq	r0, r0, #12
    7fbc:	51012140 	tstpl	r1, r0, asr #2
    7fc0:	005c9102 	subseq	r9, ip, r2, lsl #2
    7fc4:	00000020 	andeq	r0, r0, r0, lsr #32
    7fc8:	000e5700 	andeq	r5, lr, r0, lsl #14
    7fcc:	0009a500 	andeq	sl, r9, r0, lsl #10
    7fd0:	50012100 	andpl	r2, r1, r0, lsl #2
    7fd4:	00000305 	andeq	r0, r0, r5, lsl #6
    7fd8:	01210000 			; <UNDEFINED> instruction: 0x01210000
    7fdc:	0b0a0351 	bleq	288d28 <_Min_Heap_Size+0x288528>
    7fe0:	00200003 	eoreq	r0, r0, r3
    7fe4:	57000000 	strpl	r0, [r0, -r0]
    7fe8:	c300000e 	movwgt	r0, #14
    7fec:	21000009 	tstcs	r0, r9
    7ff0:	03055001 	movweq	r5, #20481	; 0x5001
    7ff4:	00000000 	andeq	r0, r0, r0
    7ff8:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    7ffc:	00030c0a 	andeq	r0, r3, sl, lsl #24
    8000:	00000020 	andeq	r0, r0, r0, lsr #32
    8004:	000e5700 	andeq	r5, lr, r0, lsl #14
    8008:	0009e100 	andeq	lr, r9, r0, lsl #2
    800c:	50012100 	andpl	r2, r1, r0, lsl #2
    8010:	00000305 	andeq	r0, r0, r5, lsl #6
    8014:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8018:	100a0351 	andne	r0, sl, r1, asr r3
    801c:	00200003 	eoreq	r0, r0, r3
    8020:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    8024:	fe00000e 	cdp2	0, 0, cr0, cr0, cr14, {0}
    8028:	21000009 	tstcs	r0, r9
    802c:	0c055001 	stceq	0, cr5, [r5], {1}
    8030:	40020800 	andmi	r0, r2, r0, lsl #16
    8034:	02510121 	subseq	r0, r1, #1073741832	; 0x40000008
    8038:	22005c91 	andcs	r5, r0, #37120	; 0x9100
    803c:	00000000 	andeq	r0, r0, r0
    8040:	00000e57 	andeq	r0, r0, r7, asr lr
    8044:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    8048:	00000003 	andeq	r0, r0, r3
    804c:	51012100 	mrspl	r2, (UNDEF: 17)
    8050:	03280a03 			; <UNDEFINED> instruction: 0x03280a03
    8054:	011a0000 	tsteq	sl, r0
    8058:	0000089d 	muleq	r0, sp, r8
    805c:	13024f01 	movwne	r4, #12033	; 0x2f01
    8060:	00052001 	andeq	r2, r5, r1
	...
    806c:	00554900 	subseq	r4, r5, r0, lsl #18
    8070:	0b4d0100 	bleq	1348478 <_Min_Heap_Size+0x1347c78>
    8074:	361d0000 	ldrcc	r0, [sp], -r0
    8078:	01000003 	tsteq	r0, r3
    807c:	623c024f 	eorsvs	r0, ip, #-268435452	; 0xf0000004
    8080:	8f000007 	svchi	0x00000007
    8084:	81000055 	qaddhi	r0, r5, r0
    8088:	1d000055 	stcne	0, cr0, [r0, #-340]	; 0xfffffeac
    808c:	0000199b 	muleq	r0, fp, r9
    8090:	58024f01 	stmdapl	r2, {r0, r8, r9, sl, fp, lr}
    8094:	000000bc 	strheq	r0, [r0], -ip
    8098:	000055f3 	strdeq	r5, [r0], -r3
    809c:	000055e7 	andeq	r5, r0, r7, ror #11
    80a0:	00160c1c 	andseq	r0, r6, ip, lsl ip
    80a4:	02510100 	subseq	r0, r1, #0, 2
    80a8:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    80ac:	00564100 	subseq	r4, r6, r0, lsl #2
    80b0:	00563d00 	subseq	r3, r6, r0, lsl #26
    80b4:	00001600 	andeq	r1, r0, r0, lsl #12
    80b8:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    80bc:	00160000 	andseq	r0, r6, r0
    80c0:	66000000 	strvs	r0, [r0], -r0
    80c4:	2000000e 	andcs	r0, r0, lr
    80c8:	00000000 	andeq	r0, r0, r0
    80cc:	00000e57 	andeq	r0, r0, r7, asr lr
    80d0:	00000aa8 	andeq	r0, r0, r8, lsr #21
    80d4:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    80d8:	00000003 	andeq	r0, r0, r3
    80dc:	51012100 	mrspl	r2, (UNDEF: 17)
    80e0:	025a0a03 	subseq	r0, sl, #12288	; 0x3000
    80e4:	00002000 	andeq	r2, r0, r0
    80e8:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    80ec:	0ac60000 	beq	ff1880f4 <_estack+0xdf17e754>
    80f0:	01210000 			; <UNDEFINED> instruction: 0x01210000
    80f4:	00030550 	andeq	r0, r3, r0, asr r5
    80f8:	21000000 	mrscs	r0, (UNDEF: 0)
    80fc:	0a035101 	beq	dc508 <_Min_Heap_Size+0xdbd08>
    8100:	2000025b 	andcs	r0, r0, fp, asr r2
    8104:	00000000 	andeq	r0, r0, r0
    8108:	00000e57 	andeq	r0, r0, r7, asr lr
    810c:	00000ae4 	andeq	r0, r0, r4, ror #21
    8110:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    8114:	00000003 	andeq	r0, r0, r3
    8118:	51012100 	mrspl	r2, (UNDEF: 17)
    811c:	027e0a03 	rsbseq	r0, lr, #12288	; 0x3000
    8120:	00002000 	andeq	r2, r0, r0
    8124:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    8128:	0b020000 	bleq	88130 <_Min_Heap_Size+0x87930>
    812c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8130:	00030550 	andeq	r0, r3, r0, asr r5
    8134:	21000000 	mrscs	r0, (UNDEF: 0)
    8138:	0a035101 	beq	dc544 <_Min_Heap_Size+0xdbd44>
    813c:	16000285 	strne	r0, [r0], -r5, lsl #5
    8140:	00000000 	andeq	r0, r0, r0
    8144:	0000080e 	andeq	r0, r0, lr, lsl #16
    8148:	00000016 	andeq	r0, r0, r6, lsl r0
    814c:	000e7400 	andeq	r7, lr, r0, lsl #8
    8150:	00002000 	andeq	r2, r0, r0
    8154:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    8158:	0b320000 	bleq	c88160 <_Min_Heap_Size+0xc87960>
    815c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8160:	00030550 	andeq	r0, r3, r0, asr r5
    8164:	21000000 	mrscs	r0, (UNDEF: 0)
    8168:	0a035101 	beq	dc574 <_Min_Heap_Size+0xdbd74>
    816c:	220002c3 	andcs	r0, r0, #805306380	; 0x3000000c
    8170:	00000000 	andeq	r0, r0, r0
    8174:	00000e57 	andeq	r0, r0, r7, asr lr
    8178:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    817c:	00000003 	andeq	r0, r0, r3
    8180:	51012100 	mrspl	r2, (UNDEF: 17)
    8184:	02ca0a03 	sbceq	r0, sl, #12288	; 0x3000
    8188:	01230000 			; <UNDEFINED> instruction: 0x01230000
    818c:	00000772 	andeq	r0, r0, r2, ror r7
    8190:	011adb01 	tsteq	sl, r1, lsl #22
    8194:	00000520 	andeq	r0, r0, r0, lsr #10
	...
    81a0:	0000565f 	andeq	r5, r0, pc, asr r6
    81a4:	000e2401 	andeq	r2, lr, r1, lsl #8
    81a8:	010a2400 	tsteq	sl, r0, lsl #8
    81ac:	db010000 	blle	481b4 <_Min_Heap_Size+0x479b4>
    81b0:	00079941 	andeq	r9, r7, r1, asr #18
    81b4:	0056d500 	subseq	sp, r6, r0, lsl #10
    81b8:	0056bb00 	subseq	fp, r6, r0, lsl #22
    81bc:	160c2500 	strne	r2, [ip], -r0, lsl #10
    81c0:	dd010000 	stcle	0, cr0, [r1, #-0]
    81c4:	0000bc0c 	andeq	fp, r0, ip, lsl #24
    81c8:	0057ac00 	subseq	sl, r7, r0, lsl #24
    81cc:	00577800 	subseq	r7, r7, r0, lsl #16
    81d0:	18de2500 	ldmne	lr, {r8, sl, sp}^
    81d4:	dd010000 	stcle	0, cr0, [r1, #-0]
    81d8:	0000bc17 	andeq	fp, r0, r7, lsl ip
    81dc:	0058d600 	subseq	sp, r8, r0, lsl #12
    81e0:	0058d200 	subseq	sp, r8, r0, lsl #4
    81e4:	03282600 			; <UNDEFINED> instruction: 0x03282600
    81e8:	0c390000 	ldceq	0, cr0, [r9], #-0
    81ec:	0f1c0000 	svceq	0x001c0000
    81f0:	01000018 	tsteq	r0, r8, lsl r0
    81f4:	cb160187 	blgt	588818 <_Min_Heap_Size+0x588018>
    81f8:	00000004 	andeq	r0, r0, r4
    81fc:	f4000059 	vst4.16	{d0-d3}, [r0 :64], r9
    8200:	1f000058 	svcne	0x00000058
	...
    820c:	00000be4 	andeq	r0, r0, r4, ror #23
    8210:	0001ea1e 	andeq	lr, r1, lr, lsl sl
    8214:	01900100 	orrseq	r0, r0, r0, lsl #2
    8218:	0000c807 	andeq	ip, r0, r7, lsl #16
    821c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    8220:	00001600 	andeq	r1, r0, r0, lsl #12
    8224:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8228:	00160000 	andseq	r0, r6, r0
    822c:	66000000 	strvs	r0, [r0], -r0
    8230:	2000000e 	andcs	r0, r0, lr
    8234:	00000000 	andeq	r0, r0, r0
    8238:	00000e57 	andeq	r0, r0, r7, asr lr
    823c:	00000c14 	andeq	r0, r0, r4, lsl ip
    8240:	05500121 	ldrbeq	r0, [r0, #-289]	; 0xfffffedf
    8244:	00000003 	andeq	r0, r0, r3
    8248:	51012100 	mrspl	r2, (UNDEF: 17)
    824c:	018a0a03 	orreq	r0, sl, r3, lsl #20
    8250:	00001600 	andeq	r1, r0, r0, lsl #12
    8254:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8258:	00160000 	andseq	r0, r6, r0
    825c:	66000000 	strvs	r0, [r0], -r0
    8260:	1600000e 	strne	r0, [r0], -lr
    8264:	00000000 	andeq	r0, r0, r0
    8268:	00000e66 	andeq	r0, r0, r6, ror #28
    826c:	00000016 	andeq	r0, r0, r6, lsl r0
    8270:	000e6600 	andeq	r6, lr, r0, lsl #12
    8274:	00160000 	andseq	r0, r6, r0
    8278:	66000000 	strvs	r0, [r0], -r0
    827c:	1600000e 	strne	r0, [r0], -lr
    8280:	00000000 	andeq	r0, r0, r0
    8284:	00000e66 	andeq	r0, r0, r6, ror #28
    8288:	00000020 	andeq	r0, r0, r0, lsr #32
    828c:	000e5700 	andeq	r5, lr, r0, lsl #14
    8290:	000c6800 	andeq	r6, ip, r0, lsl #16
    8294:	50012100 	andpl	r2, r1, r0, lsl #2
    8298:	00000305 	andeq	r0, r0, r5, lsl #6
    829c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    82a0:	e6080251 			; <UNDEFINED> instruction: 0xe6080251
    82a4:	00002000 	andeq	r2, r0, r0
    82a8:	0e570000 	cdpeq	0, 5, cr0, cr7, cr0, {0}
    82ac:	0c850000 	stceq	0, cr0, [r5], {0}
    82b0:	01210000 			; <UNDEFINED> instruction: 0x01210000
    82b4:	00030550 	andeq	r0, r3, r0, asr r5
    82b8:	21000000 	mrscs	r0, (UNDEF: 0)
    82bc:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    82c0:	001600eb 	andseq	r0, r6, fp, ror #1
    82c4:	66000000 	strvs	r0, [r0], -r0
    82c8:	1600000e 	strne	r0, [r0], -lr
    82cc:	00000000 	andeq	r0, r0, r0
    82d0:	00000e66 	andeq	r0, r0, r6, ror #28
    82d4:	00000016 	andeq	r0, r0, r6, lsl r0
    82d8:	000e6600 	andeq	r6, lr, r0, lsl #12
    82dc:	00001600 	andeq	r1, r0, r0, lsl #12
    82e0:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    82e4:	00200000 	eoreq	r0, r0, r0
    82e8:	57000000 	strpl	r0, [r0, -r0]
    82ec:	c700000e 	strgt	r0, [r0, -lr]
    82f0:	2100000c 	tstcs	r0, ip
    82f4:	03055001 	movweq	r5, #20481	; 0x5001
    82f8:	00000000 	andeq	r0, r0, r0
    82fc:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8300:	00011d0a 	andeq	r1, r1, sl, lsl #26
    8304:	00000020 	andeq	r0, r0, r0, lsr #32
    8308:	000e5700 	andeq	r5, lr, r0, lsl #14
    830c:	000ce500 	andeq	lr, ip, r0, lsl #10
    8310:	50012100 	andpl	r2, r1, r0, lsl #2
    8314:	00000305 	andeq	r0, r0, r5, lsl #6
    8318:	01210000 			; <UNDEFINED> instruction: 0x01210000
    831c:	1e0a0351 	mcrne	3, 0, r0, cr10, cr1, {2}
    8320:	00160001 	andseq	r0, r6, r1
    8324:	66000000 	strvs	r0, [r0], -r0
    8328:	1600000e 	strne	r0, [r0], -lr
    832c:	00000000 	andeq	r0, r0, r0
    8330:	00000e66 	andeq	r0, r0, r6, ror #28
    8334:	00000016 	andeq	r0, r0, r6, lsl r0
    8338:	000e6600 	andeq	r6, lr, r0, lsl #12
    833c:	00001600 	andeq	r1, r0, r0, lsl #12
    8340:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8344:	00200000 	eoreq	r0, r0, r0
    8348:	57000000 	strpl	r0, [r0, -r0]
    834c:	2700000e 	strcs	r0, [r0, -lr]
    8350:	2100000d 	tstcs	r0, sp
    8354:	03055001 	movweq	r5, #20481	; 0x5001
    8358:	00000000 	andeq	r0, r0, r0
    835c:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8360:	00015e0a 	andeq	r5, r1, sl, lsl #28
    8364:	00000016 	andeq	r0, r0, r6, lsl r0
    8368:	000e6600 	andeq	r6, lr, r0, lsl #12
    836c:	00001600 	andeq	r1, r0, r0, lsl #12
    8370:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    8374:	00160000 	andseq	r0, r6, r0
    8378:	66000000 	strvs	r0, [r0], -r0
    837c:	1600000e 	strne	r0, [r0], -lr
    8380:	00000000 	andeq	r0, r0, r0
    8384:	00000e66 	andeq	r0, r0, r6, ror #28
    8388:	00000020 	andeq	r0, r0, r0, lsr #32
    838c:	000e5700 	andeq	r5, lr, r0, lsl #14
    8390:	000d6900 	andeq	r6, sp, r0, lsl #18
    8394:	50012100 	andpl	r2, r1, r0, lsl #2
    8398:	00000305 	andeq	r0, r0, r5, lsl #6
    839c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    83a0:	cd0a0351 	stcgt	3, cr0, [sl, #-324]	; 0xfffffebc
    83a4:	00200001 	eoreq	r0, r0, r1
    83a8:	57000000 	strpl	r0, [r0, -r0]
    83ac:	8700000e 	strhi	r0, [r0, -lr]
    83b0:	2100000d 	tstcs	r0, sp
    83b4:	03055001 	movweq	r5, #20481	; 0x5001
    83b8:	00000000 	andeq	r0, r0, r0
    83bc:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    83c0:	0001d60a 	andeq	sp, r1, sl, lsl #12
    83c4:	00000020 	andeq	r0, r0, r0, lsr #32
    83c8:	000e5700 	andeq	r5, lr, r0, lsl #14
    83cc:	000da500 	andeq	sl, sp, r0, lsl #10
    83d0:	50012100 	andpl	r2, r1, r0, lsl #2
    83d4:	00000305 	andeq	r0, r0, r5, lsl #6
    83d8:	01210000 			; <UNDEFINED> instruction: 0x01210000
    83dc:	d70a0351 	smlsdle	sl, r1, r3, r0
    83e0:	00200001 	eoreq	r0, r0, r1
    83e4:	57000000 	strpl	r0, [r0, -r0]
    83e8:	c300000e 	movwgt	r0, #14
    83ec:	2100000d 	tstcs	r0, sp
    83f0:	03055001 	movweq	r5, #20481	; 0x5001
    83f4:	00000000 	andeq	r0, r0, r0
    83f8:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    83fc:	0001d80a 	andeq	sp, r1, sl, lsl #16
    8400:	00000020 	andeq	r0, r0, r0, lsr #32
    8404:	000e5700 	andeq	r5, lr, r0, lsl #14
    8408:	000de100 	andeq	lr, sp, r0, lsl #2
    840c:	50012100 	andpl	r2, r1, r0, lsl #2
    8410:	00000305 	andeq	r0, r0, r5, lsl #6
    8414:	01210000 			; <UNDEFINED> instruction: 0x01210000
    8418:	d90a0351 	stmdble	sl, {r0, r4, r6, r8, r9}
    841c:	00200001 	eoreq	r0, r0, r1
    8420:	57000000 	strpl	r0, [r0, -r0]
    8424:	ff00000e 			; <UNDEFINED> instruction: 0xff00000e
    8428:	2100000d 	tstcs	r0, sp
    842c:	03055001 	movweq	r5, #20481	; 0x5001
    8430:	00000000 	andeq	r0, r0, r0
    8434:	03510121 	cmpeq	r1, #1073741832	; 0x40000008
    8438:	0001da0a 	andeq	sp, r1, sl, lsl #20
    843c:	00000016 	andeq	r0, r0, r6, lsl r0
    8440:	000e6600 	andeq	r6, lr, r0, lsl #12
    8444:	00001600 	andeq	r1, r0, r0, lsl #12
    8448:	0e660000 	cdpeq	0, 6, cr0, cr6, cr0, {0}
    844c:	00160000 	andseq	r0, r6, r0
    8450:	66000000 	strvs	r0, [r0], -r0
    8454:	1600000e 	strne	r0, [r0], -lr
    8458:	00000000 	andeq	r0, r0, r0
    845c:	00000e66 	andeq	r0, r0, r6, ror #28
    8460:	11012700 	tstne	r1, r0, lsl #14
    8464:	01000019 	tsteq	r0, r9, lsl r0
    8468:	20011ac8 	andcs	r1, r1, r8, asr #21
    846c:	00000005 	andeq	r0, r0, r5
    8470:	00000000 	andeq	r0, r0, r0
    8474:	02000000 	andeq	r0, r0, #0
    8478:	2801007d 	stmdacs	r1, {r0, r2, r3, r4, r5, r6}
    847c:	15800101 	strne	r0, [r0, #257]	; 0x101
    8480:	15800000 	strne	r0, [r0]
    8484:	01290000 			; <UNDEFINED> instruction: 0x01290000
    8488:	000cd601 	andeq	sp, ip, r1, lsl #12
    848c:	000cd600 	andeq	sp, ip, r0, lsl #12
    8490:	07e00a00 	strbeq	r0, [r0, r0, lsl #20]!
    8494:	aa01012a 	bge	48944 <_Min_Heap_Size+0x48144>
    8498:	aa00000a 	bge	84c8 <_Min_Heap_Size+0x7cc8>
    849c:	0c00000a 	stceq	0, cr0, [r0], {10}
    84a0:	290801e6 	stmdbcs	r8, {r1, r2, r5, r6, r7, r8}
    84a4:	14660101 	strbtne	r0, [r6], #-257	; 0xfffffeff
    84a8:	14660000 	strbtne	r0, [r6], #-0
    84ac:	ea0b0000 	b	2c84b4 <_Min_Heap_Size+0x2c7cb4>
    84b0:	0101290a 	tsteq	r1, sl, lsl #18
    84b4:	000018d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    84b8:	000018d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    84bc:	0013df0b 	andseq	sp, r3, fp, lsl #30
    84c0:	000009da 	ldrdeq	r0, [r0], -sl
    84c4:	0e080002 	cdpeq	0, 0, cr0, cr8, cr2, {0}
    84c8:	01040000 	mrseq	r0, (UNDEF: 4)
    84cc:	00000621 	andeq	r0, r0, r1, lsr #12
    84d0:	001ad00c 	andseq	sp, sl, ip
    84d4:	0004e900 	andeq	lr, r4, r0, lsl #18
    84d8:	0003b800 	andeq	fp, r3, r0, lsl #16
	...
    84e4:	00605000 	rsbeq	r5, r0, r0
    84e8:	06010200 	streq	r0, [r1], -r0, lsl #4
    84ec:	0000060f 	andeq	r0, r0, pc, lsl #12
    84f0:	00007603 	andeq	r7, r0, r3, lsl #12
    84f4:	182b0200 	stmdane	fp!, {r9}
    84f8:	0000003c 	andeq	r0, r0, ip, lsr r0
    84fc:	0d080102 	stfeqs	f0, [r8, #-8]
    8500:	02000006 	andeq	r0, r0, #6
    8504:	042a0502 	strteq	r0, [sl], #-1282	; 0xfffffafe
    8508:	8e030000 	cdphi	0, 0, cr0, cr3, cr0, {0}
    850c:	02000007 	andeq	r0, r0, #7
    8510:	00561939 	subseq	r1, r6, r9, lsr r9
    8514:	02020000 	andeq	r0, r2, #0
    8518:	00082807 	andeq	r2, r8, r7, lsl #16
    851c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    8520:	0000032d 	andeq	r0, r0, sp, lsr #6
    8524:	0002ef03 	andeq	lr, r2, r3, lsl #30
    8528:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    852c:	00000070 	andeq	r0, r0, r0, ror r0
    8530:	c3070402 	movwgt	r0, #29698	; 0x7402
    8534:	02000000 	andeq	r0, r0, #0
    8538:	03280508 			; <UNDEFINED> instruction: 0x03280508
    853c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    8540:	0000be07 	andeq	fp, r0, r7, lsl #28
    8544:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    8548:	00746e69 	rsbseq	r6, r4, r9, ror #28
    854c:	c8070402 	stmdagt	r7, {r1, sl}
    8550:	03000000 	movweq	r0, #0
    8554:	00000078 	andeq	r0, r0, r8, ror r0
    8558:	30131803 	andscc	r1, r3, r3, lsl #16
    855c:	03000000 	movweq	r0, #0
    8560:	00000790 	muleq	r0, r0, r7
    8564:	4a142403 	bmi	511578 <_Min_Heap_Size+0x510d78>
    8568:	03000000 	movweq	r0, #0
    856c:	000002f1 	strdeq	r0, [r0], -r1
    8570:	64143003 	ldrvs	r3, [r4], #-3
    8574:	05000000 	streq	r0, [r0, #-0]
    8578:	000000ab 	andeq	r0, r0, fp, lsr #1
    857c:	0000ab06 	andeq	sl, r0, r6, lsl #22
    8580:	0000cc00 	andeq	ip, r0, r0, lsl #24
    8584:	008c0700 	addeq	r0, ip, r0, lsl #14
    8588:	00010000 	andeq	r0, r1, r0
    858c:	5a041808 	bpl	10e5b4 <_Min_Heap_Size+0x10ddb4>
    8590:	01360901 	teqeq	r6, r1, lsl #18
    8594:	49090000 	stmdbmi	r9, {}	; <UNPREDICTABLE>
    8598:	0400524d 	streq	r5, [r0], #-589	; 0xfffffdb3
    859c:	b711015c 			; <UNDEFINED> instruction: 0xb711015c
    85a0:	02000000 	andeq	r0, r0, #0
    85a4:	45090023 	strmi	r0, [r9, #-35]	; 0xffffffdd
    85a8:	0400524d 	streq	r5, [r0], #-589	; 0xfffffdb3
    85ac:	b711015d 			; <UNDEFINED> instruction: 0xb711015d
    85b0:	02000000 	andeq	r0, r0, #0
    85b4:	c50a0423 	strgt	r0, [sl, #-1059]	; 0xfffffbdd
    85b8:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    85bc:	b711015e 			; <UNDEFINED> instruction: 0xb711015e
    85c0:	02000000 	andeq	r0, r0, #0
    85c4:	8e0a0823 	cdphi	8, 0, cr0, cr10, cr3, {1}
    85c8:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    85cc:	b711015f 			; <UNDEFINED> instruction: 0xb711015f
    85d0:	02000000 	andeq	r0, r0, #0
    85d4:	200a0c23 	andcs	r0, sl, r3, lsr #24
    85d8:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    85dc:	b7110160 	ldrlt	r0, [r1, -r0, ror #2]
    85e0:	02000000 	andeq	r0, r0, #0
    85e4:	50091023 	andpl	r1, r9, r3, lsr #32
    85e8:	61040052 	qaddvs	r0, r2, r4
    85ec:	00b71101 	adcseq	r1, r7, r1, lsl #2
    85f0:	23020000 	movwcs	r0, #8192	; 0x2000
    85f4:	280b0014 	stmdacs	fp, {r2, r4}
    85f8:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    85fc:	cc030162 	stfgts	f0, [r3], {98}	; 0x62
    8600:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    8604:	01ae0428 			; <UNDEFINED> instruction: 0x01ae0428
    8608:	0001de09 	andeq	sp, r1, r9, lsl #28
    860c:	10940a00 	addsne	r0, r4, r0, lsl #20
    8610:	b0040000 	andlt	r0, r4, r0
    8614:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8618:	23020000 	movwcs	r0, #8192	; 0x2000
    861c:	0f990a00 	svceq	0x00990a00
    8620:	b1040000 	mrslt	r0, (UNDEF: 4)
    8624:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8628:	23020000 	movwcs	r0, #8192	; 0x2000
    862c:	0e170a04 	vnmlseq.f32	s0, s14, s8
    8630:	b2040000 	andlt	r0, r4, #0
    8634:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8638:	23020000 	movwcs	r0, #8192	; 0x2000
    863c:	0e610a08 	vmuleq.f32	s1, s2, s16
    8640:	b3040000 	movwlt	r0, #16384	; 0x4000
    8644:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8648:	23020000 	movwcs	r0, #8192	; 0x2000
    864c:	4449090c 	strbmi	r0, [r9], #-2316	; 0xfffff6f4
    8650:	b4040052 	strlt	r0, [r4], #-82	; 0xffffffae
    8654:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8658:	23020000 	movwcs	r0, #8192	; 0x2000
    865c:	444f0910 	strbmi	r0, [pc], #-2320	; 8664 <_Min_Heap_Size+0x7e64>
    8660:	b5040052 	strlt	r0, [r4, #-82]	; 0xffffffae
    8664:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8668:	23020000 	movwcs	r0, #8192	; 0x2000
    866c:	10470a14 	subne	r0, r7, r4, lsl sl
    8670:	b6040000 	strlt	r0, [r4], -r0
    8674:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8678:	23020000 	movwcs	r0, #8192	; 0x2000
    867c:	0e050a18 			; <UNDEFINED> instruction: 0x0e050a18
    8680:	b7040000 	strlt	r0, [r4, -r0]
    8684:	00b71101 	adcseq	r1, r7, r1, lsl #2
    8688:	23020000 	movwcs	r0, #8192	; 0x2000
    868c:	4641091c 			; <UNDEFINED> instruction: 0x4641091c
    8690:	b8040052 	stmdalt	r4, {r1, r4, r6}
    8694:	01ee1101 	mvneq	r1, r1, lsl #2
    8698:	23020000 	movwcs	r0, #8192	; 0x2000
    869c:	b7060020 	strlt	r0, [r6, -r0, lsr #32]
    86a0:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    86a4:	07000001 	streq	r0, [r0, -r1]
    86a8:	0000008c 	andeq	r0, r0, ip, lsl #1
    86ac:	de050001 	cdple	0, 0, cr0, cr5, cr1, {0}
    86b0:	0b000001 	bleq	86bc <_Min_Heap_Size+0x7ebc>
    86b4:	0000104c 	andeq	r1, r0, ip, asr #32
    86b8:	0301b904 	movweq	fp, #6404	; 0x1904
    86bc:	00000143 	andeq	r0, r0, r3, asr #2
    86c0:	bf042408 	svclt	0x00042408
    86c4:	025b0901 	subseq	r0, fp, #16384	; 0x4000
    86c8:	f50a0000 			; <UNDEFINED> instruction: 0xf50a0000
    86cc:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    86d0:	b71101c1 	ldrlt	r0, [r1, -r1, asr #3]
    86d4:	02000000 	andeq	r0, r0, #0
    86d8:	50090023 	andpl	r0, r9, r3, lsr #32
    86dc:	0400434d 	streq	r4, [r0], #-845	; 0xfffffcb3
    86e0:	b71101c2 	ldrlt	r0, [r1, -r2, asr #3]
    86e4:	02000000 	andeq	r0, r0, #0
    86e8:	fc0a0423 	stc2	4, cr0, [sl], {35}	; 0x23
    86ec:	04000019 	streq	r0, [r0], #-25	; 0xffffffe7
    86f0:	6b1101c3 	blvs	448e04 <_Min_Heap_Size+0x448604>
    86f4:	02000002 	andeq	r0, r0, #2
    86f8:	090a0823 	stmdbeq	sl, {r0, r1, r5, fp}
    86fc:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    8700:	bc1101c4 	ldflts	f0, [r1], {196}	; 0xc4
    8704:	02000000 	andeq	r0, r0, #0
    8708:	580a1823 	stmdapl	sl, {r0, r1, r5, fp, ip}
    870c:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    8710:	b71101c5 	ldrlt	r0, [r1, -r5, asr #3]
    8714:	02000000 	andeq	r0, r0, #0
    8718:	06002023 	streq	r2, [r0], -r3, lsr #32
    871c:	000000b7 	strheq	r0, [r0], -r7
    8720:	0000026b 	andeq	r0, r0, fp, ror #4
    8724:	00008c07 	andeq	r8, r0, r7, lsl #24
    8728:	05000300 	streq	r0, [r0, #-768]	; 0xfffffd00
    872c:	0000025b 	andeq	r0, r0, fp, asr r2
    8730:	001ab60b 	andseq	fp, sl, fp, lsl #12
    8734:	01c60400 	biceq	r0, r6, r0, lsl #8
    8738:	00020003 	andeq	r0, r2, r3
    873c:	04880800 	streq	r0, [r8], #2048	; 0x800
    8740:	690901f4 	stmdbvs	r9, {r2, r4, r5, r6, r7, r8}
    8744:	09000004 	stmdbeq	r0, {r2}
    8748:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
    874c:	b71101f6 			; <UNDEFINED> instruction: 0xb71101f6
    8750:	02000000 	andeq	r0, r0, #0
    8754:	b40a0023 	strlt	r0, [sl], #-35	; 0xffffffdd
    8758:	04000002 	streq	r0, [r0], #-2
    875c:	b71101f7 			; <UNDEFINED> instruction: 0xb71101f7
    8760:	02000000 	andeq	r0, r0, #0
    8764:	b70a0423 	strlt	r0, [sl, -r3, lsr #8]
    8768:	04000002 	streq	r0, [r0], #-2
    876c:	b71101f8 			; <UNDEFINED> instruction: 0xb71101f8
    8770:	02000000 	andeq	r0, r0, #0
    8774:	43090823 	movwmi	r0, #38947	; 0x9823
    8778:	04005249 	streq	r5, [r0], #-585	; 0xfffffdb7
    877c:	b71101f9 			; <UNDEFINED> instruction: 0xb71101f9
    8780:	02000000 	andeq	r0, r0, #0
    8784:	8f0a0c23 	svchi	0x000a0c23
    8788:	04000001 	streq	r0, [r0], #-1
    878c:	b71101fa 			; <UNDEFINED> instruction: 0xb71101fa
    8790:	02000000 	andeq	r0, r0, #0
    8794:	b00a1023 	andlt	r1, sl, r3, lsr #32
    8798:	04000007 	streq	r0, [r0], #-7
    879c:	b71101fb 			; <UNDEFINED> instruction: 0xb71101fb
    87a0:	02000000 	andeq	r0, r0, #0
    87a4:	150a1423 	strne	r1, [sl, #-1059]	; 0xfffffbdd
    87a8:	04000007 	streq	r0, [r0], #-7
    87ac:	b71101fc 			; <UNDEFINED> instruction: 0xb71101fc
    87b0:	02000000 	andeq	r0, r0, #0
    87b4:	a80a1823 	stmdage	sl, {r0, r1, r5, fp, ip}
    87b8:	04000005 	streq	r0, [r0], #-5
    87bc:	ab1101fd 	blge	448fb8 <_Min_Heap_Size+0x4487b8>
    87c0:	02000000 	andeq	r0, r0, #0
    87c4:	930a1c23 	movwls	r1, #44067	; 0xac23
    87c8:	04000005 	streq	r0, [r0], #-5
    87cc:	b71101fe 			; <UNDEFINED> instruction: 0xb71101fe
    87d0:	02000000 	andeq	r0, r0, #0
    87d4:	2d0a2023 	stccs	0, cr2, [sl, #-140]	; 0xffffff74
    87d8:	04000002 	streq	r0, [r0], #-2
    87dc:	b71101ff 			; <UNDEFINED> instruction: 0xb71101ff
    87e0:	02000000 	andeq	r0, r0, #0
    87e4:	b20a2423 	andlt	r2, sl, #587202560	; 0x23000000
    87e8:	04000005 	streq	r0, [r0], #-5
    87ec:	bc110200 	lfmlt	f0, 4, [r1], {-0}
    87f0:	02000000 	andeq	r0, r0, #0
    87f4:	150a2823 	strne	r2, [sl, #-2083]	; 0xfffff7dd
    87f8:	04000009 	streq	r0, [r0], #-9
    87fc:	b7110201 	ldrlt	r0, [r1, -r1, lsl #4]
    8800:	02000000 	andeq	r0, r0, #0
    8804:	200a3023 	andcs	r3, sl, r3, lsr #32
    8808:	04000008 	streq	r0, [r0], #-8
    880c:	b7110202 	ldrlt	r0, [r1, -r2, lsl #4]
    8810:	02000000 	andeq	r0, r0, #0
    8814:	2e0a3423 	cdpcs	4, 0, cr3, cr10, cr3, {1}
    8818:	04000005 	streq	r0, [r0], #-5
    881c:	b7110203 	ldrlt	r0, [r1, -r3, lsl #4]
    8820:	02000000 	andeq	r0, r0, #0
    8824:	bc0a3823 	stclt	8, cr3, [sl], {35}	; 0x23
    8828:	04000005 	streq	r0, [r0], #-5
    882c:	ab110204 	blge	449044 <_Min_Heap_Size+0x448844>
    8830:	02000000 	andeq	r0, r0, #0
    8834:	500a3c23 	andpl	r3, sl, r3, lsr #24
    8838:	04000007 	streq	r0, [r0], #-7
    883c:	b7110205 	ldrlt	r0, [r1, -r5, lsl #4]
    8840:	02000000 	andeq	r0, r0, #0
    8844:	0d0a4023 	stceq	0, cr4, [sl, #-140]	; 0xffffff74
    8848:	04000007 	streq	r0, [r0], #-7
    884c:	b7110206 	ldrlt	r0, [r1, -r6, lsl #4]
    8850:	02000000 	andeq	r0, r0, #0
    8854:	c60a4423 	strgt	r4, [sl], -r3, lsr #8
    8858:	04000005 	streq	r0, [r0], #-5
    885c:	bc110207 	lfmlt	f0, 4, [r1], {7}
    8860:	02000000 	andeq	r0, r0, #0
    8864:	540a4823 	strpl	r4, [sl], #-2083	; 0xfffff7dd
    8868:	04000001 	streq	r0, [r0], #-1
    886c:	b7110208 	ldrlt	r0, [r1, -r8, lsl #4]
    8870:	02000000 	andeq	r0, r0, #0
    8874:	680a5023 	stmdavs	sl, {r0, r1, r5, ip, lr}
    8878:	04000005 	streq	r0, [r0], #-5
    887c:	b7110209 	ldrlt	r0, [r1, -r9, lsl #4]
    8880:	02000000 	andeq	r0, r0, #0
    8884:	db0a5423 	blle	29d918 <_Min_Heap_Size+0x29d118>
    8888:	04000006 	streq	r0, [r0], #-6
    888c:	b711020a 	ldrlt	r0, [r1, -sl, lsl #4]
    8890:	02000000 	andeq	r0, r0, #0
    8894:	d00a5823 	andle	r5, sl, r3, lsr #16
    8898:	04000005 	streq	r0, [r0], #-5
    889c:	ab11020b 	blge	4490d0 <_Min_Heap_Size+0x4488d0>
    88a0:	02000000 	andeq	r0, r0, #0
    88a4:	1b0a5c23 	blne	29f938 <_Min_Heap_Size+0x29f138>
    88a8:	04000000 	streq	r0, [r0], #-0
    88ac:	b711020c 	ldrlt	r0, [r1, -ip, lsl #4]
    88b0:	02000000 	andeq	r0, r0, #0
    88b4:	1b0a6023 	blne	2a0948 <_Min_Heap_Size+0x2a0148>
    88b8:	04000004 	streq	r0, [r0], #-4
    88bc:	b711020d 	ldrlt	r0, [r1, -sp, lsl #4]
    88c0:	02000000 	andeq	r0, r0, #0
    88c4:	da0a6423 	ble	2a1958 <_Min_Heap_Size+0x2a1158>
    88c8:	04000005 	streq	r0, [r0], #-5
    88cc:	bc11020e 	lfmlt	f0, 4, [r1], {14}
    88d0:	02000000 	andeq	r0, r0, #0
    88d4:	b10a6823 	tstlt	sl, r3, lsr #16
    88d8:	04000008 	streq	r0, [r0], #-8
    88dc:	b711020f 	ldrlt	r0, [r1, -pc, lsl #4]
    88e0:	02000000 	andeq	r0, r0, #0
    88e4:	43097023 	movwmi	r7, #36899	; 0x9023
    88e8:	04005253 	streq	r5, [r0], #-595	; 0xfffffdad
    88ec:	b7110210 			; <UNDEFINED> instruction: 0xb7110210
    88f0:	02000000 	andeq	r0, r0, #0
    88f4:	e40a7423 	str	r7, [sl], #-1059	; 0xfffffbdd
    88f8:	04000005 	streq	r0, [r0], #-5
    88fc:	bc110211 	lfmlt	f0, 4, [r1], {17}
    8900:	02000000 	andeq	r0, r0, #0
    8904:	800a7823 	andhi	r7, sl, r3, lsr #16
    8908:	04000008 	streq	r0, [r0], #-8
    890c:	b7110212 			; <UNDEFINED> instruction: 0xb7110212
    8910:	03000000 	movweq	r0, #0
    8914:	0a018023 	beq	689a8 <_Min_Heap_Size+0x681a8>
    8918:	000003ae 	andeq	r0, r0, lr, lsr #7
    891c:	11021304 	tstne	r2, r4, lsl #6
    8920:	000000b7 	strheq	r0, [r0], -r7
    8924:	01842303 	orreq	r2, r4, r3, lsl #6
    8928:	02010b00 	andeq	r0, r1, #0, 22
    892c:	14040000 	strne	r0, [r4], #-0
    8930:	027d0302 	rsbseq	r0, sp, #134217728	; 0x8000000
    8934:	070c0000 	streq	r0, [ip, -r0]
    8938:	00003c01 	andeq	r3, r0, r1, lsl #24
    893c:	01b90500 			; <UNDEFINED> instruction: 0x01b90500
    8940:	00000491 	muleq	r0, r1, r4
    8944:	0001300d 	andeq	r3, r1, sp
    8948:	530e0000 	movwpl	r0, #57344	; 0xe000
    894c:	01005445 	tsteq	r0, r5, asr #8
    8950:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    8954:	00000758 	andeq	r0, r0, r8, asr r7
    8958:	3c01070c 	stccc	7, cr0, [r1], {12}
    895c:	06000000 	streq	r0, [r0], -r0
    8960:	04bf0127 	ldrteq	r0, [pc], #295	; 8968 <_Min_Heap_Size+0x8168>
    8964:	770d0000 	strvc	r0, [sp, -r0]
    8968:	00000003 	andeq	r0, r0, r3
    896c:	0007460d 	andeq	r4, r7, sp, lsl #12
    8970:	4a0d0100 	bmi	348d78 <_Min_Heap_Size+0x348578>
    8974:	02000009 	andeq	r0, r0, #9
    8978:	0003580d 	andeq	r5, r3, sp, lsl #16
    897c:	03000300 	movweq	r0, #768	; 0x300
    8980:	000013c1 	andeq	r1, r0, r1, asr #7
    8984:	98032c06 	stmdals	r3, {r1, r2, sl, fp, sp}
    8988:	0f000004 	svceq	0x00000004
    898c:	092e0714 	stmdbeq	lr!, {r2, r4, r8, r9, sl}
    8990:	00000520 	andeq	r0, r0, r0, lsr #10
    8994:	6e695010 	mcrvs	0, 3, r5, cr9, cr0, {0}
    8998:	0c300700 	ldceq	7, cr0, [r0], #-0
    899c:	000000ab 	andeq	r0, r0, fp, lsr #1
    89a0:	11002302 	tstne	r0, r2, lsl #6
    89a4:	00000736 	andeq	r0, r0, r6, lsr r7
    89a8:	ab0c3307 	blge	3155cc <_Min_Heap_Size+0x314dcc>
    89ac:	02000000 	andeq	r0, r0, #0
    89b0:	03110423 	tsteq	r1, #587202560	; 0x23000000
    89b4:	0700000f 	streq	r0, [r0, -pc]
    89b8:	00ab0c36 	adceq	r0, fp, r6, lsr ip
    89bc:	23020000 	movwcs	r0, #8192	; 0x2000
    89c0:	0b2d1108 	bleq	b4cde8 <_Min_Heap_Size+0xb4c5e8>
    89c4:	39070000 	stmdbcc	r7, {}	; <UNPREDICTABLE>
    89c8:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    89cc:	0c230200 	sfmeq	f0, 4, [r3], #-0
    89d0:	000e9111 	andeq	r9, lr, r1, lsl r1
    89d4:	0c3c0700 	ldceq	7, cr0, [ip], #-0
    89d8:	000000ab 	andeq	r0, r0, fp, lsr #1
    89dc:	00102302 	andseq	r2, r0, r2, lsl #6
    89e0:	000c5103 	andeq	r5, ip, r3, lsl #2
    89e4:	023e0700 	eorseq	r0, lr, #0, 14
    89e8:	000004cb 	andeq	r0, r0, fp, asr #9
    89ec:	3c01070c 	stccc	7, cr0, [r1], {12}
    89f0:	07000000 	streq	r0, [r0, -r0]
    89f4:	05470144 	strbeq	r0, [r7, #-324]	; 0xfffffebc
    89f8:	680d0000 	stmdavs	sp, {}	; <UNPREDICTABLE>
    89fc:	0000001a 	andeq	r0, r0, sl, lsl r0
    8a00:	001a1b0d 	andseq	r1, sl, sp, lsl #22
    8a04:	03000100 	movweq	r0, #256	; 0x100
    8a08:	00001b12 	andeq	r1, r0, r2, lsl fp
    8a0c:	2c024707 	stccs	7, cr4, [r2], {7}
    8a10:	12000005 	andne	r0, r0, #5
    8a14:	001a7701 	andseq	r7, sl, r1, lsl #14
    8a18:	01fb0100 	mvnseq	r0, r0, lsl #2
    8a1c:	0000010d 	andeq	r0, r0, sp, lsl #2
    8a20:	00000000 	andeq	r0, r0, r0
    8a24:	7d020000 	stcvc	0, cr0, [r2, #-0]
    8a28:	057e0100 	ldrbeq	r0, [lr, #-256]!	; 0xffffff00
    8a2c:	d0130000 	andsle	r0, r3, r0
    8a30:	01000019 	tsteq	r0, r9, lsl r0
    8a34:	9f2d01fb 	svcls	0x002d01fb
    8a38:	01000000 	mrseq	r0, (UNDEF: 0)
    8a3c:	01140050 	tsteq	r4, r0, asr r0
    8a40:	00001a93 	muleq	r0, r3, sl
    8a44:	0601ec01 	streq	lr, [r1], -r1, lsl #24
    8a48:	00000001 	andeq	r0, r0, r1
    8a4c:	00000000 	andeq	r0, r0, r0
    8a50:	00594d00 	subseq	r4, r9, r0, lsl #26
    8a54:	05b90100 	ldreq	r0, [r9, #256]!	; 0x100
    8a58:	d0150000 	andsle	r0, r5, r0
    8a5c:	01000019 	tsteq	r0, r9, lsl r0
    8a60:	9f2801ec 	svcls	0x002801ec
    8a64:	75000000 	strvc	r0, [r0, #-0]
    8a68:	6d000059 	stcvs	0, cr0, [r0, #-356]	; 0xfffffe9c
    8a6c:	16000059 			; <UNDEFINED> instruction: 0x16000059
    8a70:	00000000 	andeq	r0, r0, r0
    8a74:	00000553 	andeq	r0, r0, r3, asr r5
    8a78:	d9011700 	stmdble	r1, {r8, r9, sl, ip}
    8a7c:	01000019 	tsteq	r0, r9, lsl r0
    8a80:	011301ca 	tsteq	r3, sl, asr #3
    8a84:	000004bf 			; <UNDEFINED> instruction: 0x000004bf
	...
    8a90:	000059af 	andeq	r5, r0, pc, lsr #19
    8a94:	00062e01 	andeq	r2, r6, r1, lsl #28
    8a98:	1aca1500 	bne	ff28dea0 <_estack+0xdf284500>
    8a9c:	ca010000 	bgt	48aa4 <_Min_Heap_Size+0x482a4>
    8aa0:	062e3201 	strteq	r3, [lr], -r1, lsl #4
    8aa4:	59fb0000 	ldmibpl	fp!, {}^	; <UNPREDICTABLE>
    8aa8:	59f30000 	ldmibpl	r3!, {}^	; <UNPREDICTABLE>
    8aac:	d0150000 	andsle	r0, r5, r0
    8ab0:	01000019 	tsteq	r0, r9, lsl r0
    8ab4:	9f4201ca 	svcls	0x004201ca
    8ab8:	37000000 	strcc	r0, [r0, -r0]
    8abc:	2f00005a 	svccs	0x0000005a
    8ac0:	1800005a 	stmdane	r0, {r1, r3, r4, r6}
    8ac4:	00706d74 	rsbseq	r6, r0, r4, ror sp
    8ac8:	1101cc01 	tstne	r1, r1, lsl #24
    8acc:	000000b7 	strheq	r0, [r0], -r7
    8ad0:	196c9102 	stmdbne	ip!, {r1, r8, ip, pc}^
    8ad4:	00000000 	andeq	r0, r0, r0
    8ad8:	000009ce 	andeq	r0, r0, lr, asr #19
    8adc:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    8ae0:	00455c03 	subeq	r5, r5, r3, lsl #24
    8ae4:	51011a08 	tstpl	r1, r8, lsl #20
    8ae8:	01cf0a03 	biceq	r0, pc, r3, lsl #20
    8aec:	041b0000 	ldreq	r0, [fp], #-0
    8af0:	000001f3 	strdeq	r0, [r0], -r3
    8af4:	1a030114 	bne	c8f4c <_Min_Heap_Size+0xc874c>
    8af8:	b1010000 	mrslt	r0, (UNDEF: 1)
    8afc:	00010601 	andeq	r0, r1, r1, lsl #12
    8b00:	00000000 	andeq	r0, r0, r0
    8b04:	71000000 	mrsvc	r0, (UNDEF: 0)
    8b08:	0100005a 	qaddeq	r0, sl, r0
    8b0c:	000006aa 	andeq	r0, r0, sl, lsr #13
    8b10:	001aca15 	andseq	ip, sl, r5, lsl sl
    8b14:	01b10100 			; <UNDEFINED> instruction: 0x01b10100
    8b18:	00062e27 	andeq	r2, r6, r7, lsr #28
    8b1c:	005a9900 	subseq	r9, sl, r0, lsl #18
    8b20:	005a9100 	subseq	r9, sl, r0, lsl #2
    8b24:	19d01500 	ldmibne	r0, {r8, sl, ip}^
    8b28:	b1010000 	mrslt	r0, (UNDEF: 1)
    8b2c:	009f3701 	addseq	r3, pc, r1, lsl #14
    8b30:	5ad50000 	bpl	ff548b38 <_estack+0xdf53f198>
    8b34:	5acd0000 	bpl	ff348b3c <_estack+0xdf33f19c>
    8b38:	6f1c0000 	svcvs	0x001c0000
    8b3c:	01007264 	tsteq	r0, r4, ror #4
    8b40:	ab0c01b3 	blge	309214 <_Min_Heap_Size+0x308a14>
    8b44:	11000000 	mrsne	r0, (UNDEF: 0)
    8b48:	0f00005b 	svceq	0x0000005b
    8b4c:	1900005b 	stmdbne	r0, {r0, r1, r3, r4, r6}
    8b50:	00000000 	andeq	r0, r0, r0
    8b54:	000009ce 	andeq	r0, r0, lr, asr #19
    8b58:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    8b5c:	00455c03 	subeq	r5, r5, r3, lsl #24
    8b60:	51011a08 	tstpl	r1, r8, lsl #20
    8b64:	01b60a03 			; <UNDEFINED> instruction: 0x01b60a03
    8b68:	01140000 	tsteq	r4, r0
    8b6c:	00001a46 	andeq	r1, r0, r6, asr #20
    8b70:	06019a01 	streq	r9, [r1], -r1, lsl #20
    8b74:	00000001 	andeq	r0, r0, r1
    8b78:	00000000 	andeq	r0, r0, r0
    8b7c:	005b2400 	subseq	r2, fp, r0, lsl #8
    8b80:	073e0100 	ldreq	r0, [lr, -r0, lsl #2]!
    8b84:	ca150000 	bgt	548b8c <_Min_Heap_Size+0x54838c>
    8b88:	0100001a 	tsteq	r0, sl, lsl r0
    8b8c:	2e26019a 	mcrcs	1, 1, r0, cr6, cr10, {4}
    8b90:	4c000006 	stcmi	0, cr0, [r0], {6}
    8b94:	4400005b 	strmi	r0, [r0], #-91	; 0xffffffa5
    8b98:	1500005b 	strne	r0, [r0, #-91]	; 0xffffffa5
    8b9c:	000019d0 	ldrdeq	r1, [r0], -r0
    8ba0:	36019a01 	strcc	r9, [r1], -r1, lsl #20
    8ba4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8ba8:	00005b88 	andeq	r5, r0, r8, lsl #23
    8bac:	00005b80 	andeq	r5, r0, r0, lsl #23
    8bb0:	001b1715 	andseq	r1, fp, r5, lsl r7
    8bb4:	019a0100 	orrseq	r0, sl, r0, lsl #2
    8bb8:	0005474e 	andeq	r4, r5, lr, asr #14
    8bbc:	005bca00 	subseq	ip, fp, r0, lsl #20
    8bc0:	005bc200 	subseq	ip, fp, r0, lsl #4
    8bc4:	00001d00 	andeq	r1, r0, r0, lsl #26
    8bc8:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    8bcc:	07230000 	streq	r0, [r3, -r0]!
    8bd0:	011a0000 	tsteq	sl, r0
    8bd4:	5c030550 	cfstr32pl	mvfx0, [r3], {80}	; 0x50
    8bd8:	1a080045 	bne	208cf4 <_Min_Heap_Size+0x2084f4>
    8bdc:	0a035101 	beq	dcfe8 <_Min_Heap_Size+0xdc7e8>
    8be0:	1900019d 	stmdbne	r0, {r0, r2, r3, r4, r7, r8}
    8be4:	00000000 	andeq	r0, r0, r0
    8be8:	000009ce 	andeq	r0, r0, lr, asr #19
    8bec:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    8bf0:	00455c03 	subeq	r5, r5, r3, lsl #24
    8bf4:	51011a08 	tstpl	r1, r8, lsl #20
    8bf8:	019e0a03 	orrseq	r0, lr, r3, lsl #20
    8bfc:	01170000 	tsteq	r7, r0
    8c00:	00001a35 	andeq	r1, r0, r5, lsr sl
    8c04:	0f017701 	svceq	0x00017701
    8c08:	00054701 	andeq	r4, r5, r1, lsl #14
	...
    8c14:	005c0400 	subseq	r0, ip, r0, lsl #8
    8c18:	07b80100 	ldreq	r0, [r8, r0, lsl #2]!
    8c1c:	ca150000 	bgt	548c24 <_Min_Heap_Size+0x548424>
    8c20:	0100001a 	tsteq	r0, sl, lsl r0
    8c24:	2e2e0177 	mcrcs	1, 1, r0, cr14, cr7, {3}
    8c28:	2c000006 	stccs	0, cr0, [r0], {6}
    8c2c:	2400005c 	strcs	r0, [r0], #-92	; 0xffffffa4
    8c30:	1500005c 	strne	r0, [r0, #-92]	; 0xffffffa4
    8c34:	000019d0 	ldrdeq	r1, [r0], -r0
    8c38:	3e017701 	cdpcc	7, 0, cr7, cr1, cr1, {0}
    8c3c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8c40:	00005c68 	andeq	r5, r0, r8, ror #24
    8c44:	00005c60 	andeq	r5, r0, r0, ror #24
    8c48:	001a5e1e 	andseq	r5, sl, lr, lsl lr
    8c4c:	01790100 	cmneq	r9, r0, lsl #2
    8c50:	00054711 	andeq	r4, r5, r1, lsl r7
    8c54:	005ca400 	subseq	sl, ip, r0, lsl #8
    8c58:	005ca200 	subseq	sl, ip, r0, lsl #4
    8c5c:	00001900 	andeq	r1, r0, r0, lsl #18
    8c60:	09ce0000 	stmibeq	lr, {}^	; <UNPREDICTABLE>
    8c64:	011a0000 	tsteq	sl, r0
    8c68:	5c030550 	cfstr32pl	mvfx0, [r3], {80}	; 0x50
    8c6c:	1a080045 	bne	208d88 <_Min_Heap_Size+0x208588>
    8c70:	0a035101 	beq	dd07c <_Min_Heap_Size+0xdc87c>
    8c74:	0000017c 	andeq	r0, r0, ip, ror r1
    8c78:	0c860114 	stfeqs	f0, [r6], {20}
    8c7c:	26010000 	strcs	r0, [r1], -r0
    8c80:	00010601 	andeq	r0, r1, r1, lsl #12
    8c84:	00000000 	andeq	r0, r0, r0
    8c88:	b7000000 	strlt	r0, [r0, -r0]
    8c8c:	0100005c 	qaddeq	r0, ip, r0
    8c90:	0000086d 	andeq	r0, r0, sp, ror #16
    8c94:	001aca15 	andseq	ip, sl, r5, lsl sl
    8c98:	01260100 			; <UNDEFINED> instruction: 0x01260100
    8c9c:	00062e25 	andeq	r2, r6, r5, lsr #28
    8ca0:	005cdd00 	subseq	sp, ip, r0, lsl #26
    8ca4:	005cd700 	subseq	sp, ip, r0, lsl #14
    8ca8:	19d01500 	ldmibne	r0, {r8, sl, ip}^
    8cac:	26010000 	strcs	r0, [r1], -r0
    8cb0:	00ab3501 	adceq	r3, fp, r1, lsl #10
    8cb4:	5d0f0000 	stcpl	0, cr0, [pc, #-0]	; 8cbc <_Min_Heap_Size+0x84bc>
    8cb8:	5d090000 	stcpl	0, cr0, [r9, #-0]
    8cbc:	ec1e0000 	ldc	0, cr0, [lr], {-0}
    8cc0:	01000019 	tsteq	r0, r9, lsl r0
    8cc4:	ab0c0128 	blge	30916c <_Min_Heap_Size+0x30896c>
    8cc8:	3d000000 	stccc	0, cr0, [r0, #-0]
    8ccc:	3b00005d 	blcc	8e48 <_Min_Heap_Size+0x8648>
    8cd0:	1e00005d 	mcrne	0, 0, r0, cr0, cr13, {2}
    8cd4:	000019ea 	andeq	r1, r0, sl, ror #19
    8cd8:	0c012901 			; <UNDEFINED> instruction: 0x0c012901
    8cdc:	000000ab 	andeq	r0, r0, fp, lsr #1
    8ce0:	00005d58 	andeq	r5, r0, r8, asr sp
    8ce4:	00005d50 	andeq	r5, r0, r0, asr sp
    8ce8:	001aac1e 	andseq	sl, sl, lr, lsl ip
    8cec:	012a0100 			; <UNDEFINED> instruction: 0x012a0100
    8cf0:	0000ab0c 	andeq	sl, r0, ip, lsl #22
    8cf4:	005d9b00 	subseq	r9, sp, r0, lsl #22
    8cf8:	005d9100 	subseq	r9, sp, r0, lsl #2
    8cfc:	6d741c00 	ldclvs	12, cr1, [r4, #-0]
    8d00:	2b010070 	blcs	48ec8 <_Min_Heap_Size+0x486c8>
    8d04:	00ab0c01 	adceq	r0, fp, r1, lsl #24
    8d08:	5def0000 	stclpl	0, cr0, [pc]	; 8d10 <_Min_Heap_Size+0x8510>
    8d0c:	5de70000 	stclpl	0, cr0, [r7]
    8d10:	00190000 	andseq	r0, r9, r0
    8d14:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    8d18:	1a000009 	bne	8d44 <_Min_Heap_Size+0x8544>
    8d1c:	03055001 	movweq	r5, #20481	; 0x5001
    8d20:	0800455c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl, lr}
    8d24:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    8d28:	00012e0a 	andeq	r2, r1, sl, lsl #28
    8d2c:	d6011f00 	strle	r1, [r1], -r0, lsl #30
    8d30:	0100000c 	tsteq	r0, ip
    8d34:	fc0106a4 	stc2	6, cr0, [r1], {164}	; 0xa4
    8d38:	e4080010 	str	r0, [r8], #-16
    8d3c:	24080013 	strcs	r0, [r8], #-19	; 0xffffffed
    8d40:	0100005e 	qaddeq	r0, lr, r0
    8d44:	000009c8 	andeq	r0, r0, r8, asr #19
    8d48:	001aca20 	andseq	ip, sl, r0, lsr #20
    8d4c:	23a40100 			; <UNDEFINED> instruction: 0x23a40100
    8d50:	0000062e 	andeq	r0, r0, lr, lsr #12
    8d54:	00005e62 	andeq	r5, r0, r2, ror #28
    8d58:	00005e5c 	andeq	r5, r0, ip, asr lr
    8d5c:	000cda20 	andeq	sp, ip, r0, lsr #20
    8d60:	3ca40100 	stfccs	f0, [r4]
    8d64:	000009c8 	andeq	r0, r0, r8, asr #19
    8d68:	00005e94 	muleq	r0, r4, lr
    8d6c:	00005e8e 	andeq	r5, r0, lr, lsl #29
    8d70:	0019ec21 	andseq	lr, r9, r1, lsr #24
    8d74:	0ca60100 	stfeqs	f0, [r6]
    8d78:	000000ab 	andeq	r0, r0, fp, lsr #1
    8d7c:	00005ec2 	andeq	r5, r0, r2, asr #29
    8d80:	00005ec0 	andeq	r5, r0, r0, asr #29
    8d84:	0019ea21 	andseq	lr, r9, r1, lsr #20
    8d88:	0ca70100 	stfeqs	f0, [r7]
    8d8c:	000000ab 	andeq	r0, r0, fp, lsr #1
    8d90:	00005ee7 	andeq	r5, r0, r7, ror #29
    8d94:	00005ed5 	ldrdeq	r5, [r0], -r5	; <UNPREDICTABLE>
    8d98:	001aac21 	andseq	sl, sl, r1, lsr #24
    8d9c:	0ca80100 	stfeqs	f0, [r8]
    8da0:	000000ab 	andeq	r0, r0, fp, lsr #1
    8da4:	00005f6e 	andeq	r5, r0, lr, ror #30
    8da8:	00005f68 	andeq	r5, r0, r8, ror #30
    8dac:	001a1621 	andseq	r1, sl, r1, lsr #12
    8db0:	0ca90100 	stfeqs	f0, [r9]
    8db4:	000000ab 	andeq	r0, r0, fp, lsr #1
    8db8:	00005fc8 	andeq	r5, r0, r8, asr #31
    8dbc:	00005f98 	muleq	r0, r8, pc	; <UNPREDICTABLE>
    8dc0:	00134022 	andseq	r4, r3, r2, lsr #32
    8dc4:	00135808 	andseq	r5, r3, r8, lsl #16
    8dc8:	00091d08 	andeq	r1, r9, r8, lsl #26
    8dcc:	01ea2300 	mvneq	r2, r0, lsl #6
    8dd0:	f1010000 	setend	le
    8dd4:	0000b709 	andeq	fp, r0, r9, lsl #14
    8dd8:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    8ddc:	11541d00 	cmpne	r4, r0, lsl #26
    8de0:	09ce0800 	stmibeq	lr, {fp}^
    8de4:	093a0000 	ldmdbeq	sl!, {}	; <UNPREDICTABLE>
    8de8:	011a0000 	tsteq	sl, r0
    8dec:	5c030550 	cfstr32pl	mvfx0, [r3], {80}	; 0x50
    8df0:	1a080045 	bne	208f0c <_Min_Heap_Size+0x20870c>
    8df4:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    8df8:	681d00ac 	ldmdavs	sp, {r2, r3, r5, r7}
    8dfc:	ce080011 	mcrgt	0, 0, r0, cr8, cr1, {0}
    8e00:	57000009 	strpl	r0, [r0, -r9]
    8e04:	1a000009 	bne	8e30 <_Min_Heap_Size+0x8630>
    8e08:	03055001 	movweq	r5, #20481	; 0x5001
    8e0c:	0800455c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl, lr}
    8e10:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    8e14:	1d00ad08 	stcne	13, cr10, [r0, #-32]	; 0xffffffe0
    8e18:	080011ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, ip}
    8e1c:	000009ce 	andeq	r0, r0, lr, asr #19
    8e20:	00000974 	andeq	r0, r0, r4, ror r9
    8e24:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    8e28:	00455c03 	subeq	r5, r5, r3, lsl #24
    8e2c:	51011a08 	tstpl	r1, r8, lsl #20
    8e30:	00ae0802 	adceq	r0, lr, r2, lsl #16
    8e34:	0011e61d 	andseq	lr, r1, sp, lsl r6
    8e38:	0009ce08 	andeq	ip, r9, r8, lsl #28
    8e3c:	00099100 	andeq	r9, r9, r0, lsl #2
    8e40:	50011a00 	andpl	r1, r1, r0, lsl #20
    8e44:	455c0305 	ldrbmi	r0, [ip, #-773]	; 0xfffffcfb
    8e48:	011a0800 	tsteq	sl, r0, lsl #16
    8e4c:	c0080251 	andgt	r0, r8, r1, asr r2
    8e50:	11f01d00 	mvnsne	r1, r0, lsl #26
    8e54:	09ce0800 	stmibeq	lr, {fp}^
    8e58:	09ae0000 	stmibeq	lr!, {}	; <UNPREDICTABLE>
    8e5c:	011a0000 	tsteq	sl, r0
    8e60:	5c030550 	cfstr32pl	mvfx0, [r3], {80}	; 0x50
    8e64:	1a080045 	bne	208f80 <_Min_Heap_Size+0x208780>
    8e68:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    8e6c:	501900d1 	ldrsbpl	r0, [r9], -r1
    8e70:	ce080012 	mcrgt	0, 0, r0, cr8, cr2, {0}
    8e74:	1a000009 	bne	8ea0 <_Min_Heap_Size+0x86a0>
    8e78:	03055001 	movweq	r5, #20481	; 0x5001
    8e7c:	0800455c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sl, lr}
    8e80:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    8e84:	0000de08 	andeq	sp, r0, r8, lsl #28
    8e88:	0520041b 	streq	r0, [r0, #-1051]!	; 0xfffffbe5
    8e8c:	01240000 			; <UNDEFINED> instruction: 0x01240000
    8e90:	000aaa01 	andeq	sl, sl, r1, lsl #20
    8e94:	000aaa00 	andeq	sl, sl, r0, lsl #20
    8e98:	01e60800 	mvneq	r0, r0, lsl #16
    8e9c:	0dd30008 	ldcleq	0, cr0, [r3, #32]
    8ea0:	00020000 	andeq	r0, r2, r0
    8ea4:	00001052 	andeq	r1, r0, r2, asr r0
    8ea8:	06210104 	strteq	r0, [r1], -r4, lsl #2
    8eac:	fb0c0000 	blx	308eb6 <_Min_Heap_Size+0x3086b6>
    8eb0:	e900001b 	stmdb	r0, {r0, r1, r3, r4}
    8eb4:	00000004 	andeq	r0, r0, r4
    8eb8:	00000004 	andeq	r0, r0, r4
    8ebc:	00000000 	andeq	r0, r0, r0
    8ec0:	a1000000 	mrsge	r0, (UNDEF: 0)
    8ec4:	02000068 	andeq	r0, r0, #104	; 0x68
    8ec8:	00be0708 	adcseq	r0, lr, r8, lsl #14
    8ecc:	04020000 	streq	r0, [r2], #-0
    8ed0:	0000c807 	andeq	ip, r0, r7, lsl #16
    8ed4:	06010200 	streq	r0, [r1], -r0, lsl #4
    8ed8:	0000060f 	andeq	r0, r0, pc, lsl #12
    8edc:	00007603 	andeq	r7, r0, r3, lsl #12
    8ee0:	182b0200 	stmdane	fp!, {r9}
    8ee4:	0000004a 	andeq	r0, r0, sl, asr #32
    8ee8:	0d080102 	stfeqs	f0, [r8, #-8]
    8eec:	02000006 	andeq	r0, r0, #6
    8ef0:	042a0502 	strteq	r0, [sl], #-1282	; 0xfffffafe
    8ef4:	02020000 	andeq	r0, r2, #0
    8ef8:	00082807 	andeq	r2, r8, r7, lsl #16
    8efc:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    8f00:	0000032d 	andeq	r0, r0, sp, lsr #6
    8f04:	0002ef03 	andeq	lr, r2, r3, lsl #30
    8f08:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    8f0c:	00000072 	andeq	r0, r0, r2, ror r0
    8f10:	c3070402 	movwgt	r0, #29698	; 0x7402
    8f14:	02000000 	andeq	r0, r0, #0
    8f18:	03280508 			; <UNDEFINED> instruction: 0x03280508
    8f1c:	04040000 	streq	r0, [r4], #-0
    8f20:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    8f24:	00780300 	rsbseq	r0, r8, r0, lsl #6
    8f28:	18030000 	stmdane	r3, {}	; <UNPREDICTABLE>
    8f2c:	00003e13 	andeq	r3, r0, r3, lsl lr
    8f30:	00870500 	addeq	r0, r7, r0, lsl #10
    8f34:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    8f38:	03000002 	movweq	r0, #2
    8f3c:	00661430 	rsbeq	r1, r6, r0, lsr r4
    8f40:	98060000 	stmdals	r6, {}	; <UNPREDICTABLE>
    8f44:	07000000 	streq	r0, [r0, -r0]
    8f48:	000018c1 	andeq	r1, r0, r1, asr #17
    8f4c:	98113908 	ldmdals	r1, {r3, r8, fp, ip, sp}
    8f50:	01000000 	mrseq	r0, (UNDEF: 0)
    8f54:	00930801 	addseq	r0, r3, r1, lsl #16
    8f58:	00c70000 	sbceq	r0, r7, r0
    8f5c:	30090000 	andcc	r0, r9, r0
    8f60:	07000000 	streq	r0, [r0, -r0]
    8f64:	00b70500 	adcseq	r0, r7, r0, lsl #10
    8f68:	180a0000 	stmdane	sl, {}	; <UNPREDICTABLE>
    8f6c:	09014404 	stmdbeq	r1, {r2, sl, lr}
    8f70:	00000136 	andeq	r0, r0, r6, lsr r1
    8f74:	0052430b 	subseq	r4, r2, fp, lsl #6
    8f78:	11014604 	tstne	r1, r4, lsl #12
    8f7c:	000000a4 	andeq	r0, r0, r4, lsr #1
    8f80:	0c002302 	stceq	3, cr2, [r0], {2}
    8f84:	000007ee 	andeq	r0, r0, lr, ror #15
    8f88:	11014704 	tstne	r1, r4, lsl #14
    8f8c:	000000a4 	andeq	r0, r0, r4, lsr #1
    8f90:	0b042302 	bleq	111ba0 <_Min_Heap_Size+0x1113a0>
    8f94:	00524150 	subseq	r4, r2, r0, asr r1
    8f98:	11014804 	tstne	r1, r4, lsl #16
    8f9c:	000000a4 	andeq	r0, r0, r4, lsr #1
    8fa0:	0c082302 	stceq	3, cr2, [r8], {2}
    8fa4:	00000042 	andeq	r0, r0, r2, asr #32
    8fa8:	11014904 	tstne	r1, r4, lsl #18
    8fac:	000000a4 	andeq	r0, r0, r4, lsr #1
    8fb0:	0c0c2302 	stceq	3, cr2, [ip], {2}
    8fb4:	00000850 	andeq	r0, r0, r0, asr r8
    8fb8:	11014a04 	tstne	r1, r4, lsl #20
    8fbc:	000000a4 	andeq	r0, r0, r4, lsr #1
    8fc0:	0b102302 	bleq	411bd0 <_Min_Heap_Size+0x4113d0>
    8fc4:	00524346 	subseq	r4, r2, r6, asr #6
    8fc8:	11014b04 	tstne	r1, r4, lsl #22
    8fcc:	000000a4 	andeq	r0, r0, r4, lsr #1
    8fd0:	00142302 	andseq	r2, r4, r2, lsl #6
    8fd4:	00080d0d 	andeq	r0, r8, sp, lsl #26
    8fd8:	014c0400 	cmpeq	ip, r0, lsl #8
    8fdc:	0000cc03 	andeq	ip, r0, r3, lsl #24
    8fe0:	01070e00 	tsteq	r7, r0, lsl #28
    8fe4:	0000004a 	andeq	r0, r0, sl, asr #32
    8fe8:	5e01b905 	vmlapl.f16	s22, s2, s10	; <UNPREDICTABLE>
    8fec:	0f000001 	svceq	0x00000001
    8ff0:	00000130 	andeq	r0, r0, r0, lsr r1
    8ff4:	45531000 	ldrbmi	r1, [r3, #-0]
    8ff8:	00010054 	andeq	r0, r1, r4, asr r0
    8ffc:	58040802 	stmdapl	r4, {r1, fp}
    9000:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    9004:	004a0107 	subeq	r0, sl, r7, lsl #2
    9008:	27060000 	strcs	r0, [r6, -r0]
    900c:	00018c01 	andeq	r8, r1, r1, lsl #24
    9010:	03770f00 	cmneq	r7, #0, 30
    9014:	0f000000 	svceq	0x00000000
    9018:	00000746 	andeq	r0, r0, r6, asr #14
    901c:	094a0f01 	stmdbeq	sl, {r0, r8, r9, sl, fp}^
    9020:	0f020000 	svceq	0x00020000
    9024:	00000358 	andeq	r0, r0, r8, asr r3
    9028:	c1030003 	tstgt	r3, r3
    902c:	06000013 			; <UNDEFINED> instruction: 0x06000013
    9030:	0165032c 	cmneq	r5, ip, lsr #6
    9034:	070e0000 	streq	r0, [lr, -r0]
    9038:	00004a01 	andeq	r4, r0, r1, lsl #20
    903c:	01320600 	teqeq	r2, r0, lsl #12
    9040:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
    9044:	00093d0f 	andeq	r3, r9, pc, lsl #26
    9048:	230f0000 	movwcs	r0, #61440	; 0xf000
    904c:	01000005 	tsteq	r0, r5
    9050:	01f10300 	mvnseq	r0, r0, lsl #6
    9054:	35060000 	strcc	r0, [r6, #-0]
    9058:	00019803 	andeq	r9, r1, r3, lsl #16
    905c:	07301100 	ldreq	r1, [r0, -r0, lsl #2]!
    9060:	027d0930 	rsbseq	r0, sp, #48, 18	; 0xc0000
    9064:	05120000 	ldreq	r0, [r2, #-0]
    9068:	07000006 	streq	r0, [r0, -r6]
    906c:	00980c32 	addseq	r0, r8, r2, lsr ip
    9070:	23020000 	movwcs	r0, #8192	; 0x2000
    9074:	030e1200 	movweq	r1, #57856	; 0xe200
    9078:	35070000 	strcc	r0, [r7, #-0]
    907c:	0000980c 	andeq	r9, r0, ip, lsl #16
    9080:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9084:	00023612 	andeq	r3, r2, r2, lsl r6
    9088:	0c390700 	ldceq	7, cr0, [r9], #-0
    908c:	00000098 	muleq	r0, r8, r0
    9090:	12082302 	andne	r2, r8, #134217728	; 0x8000000
    9094:	000007b9 			; <UNDEFINED> instruction: 0x000007b9
    9098:	980c3c07 	stmdals	ip, {r0, r1, r2, sl, fp, ip, sp}
    909c:	02000000 	andeq	r0, r0, #0
    90a0:	5b120c23 	blpl	48c134 <_Min_Heap_Size+0x48b934>
    90a4:	07000008 	streq	r0, [r0, -r8]
    90a8:	00980c3f 	addseq	r0, r8, pc, lsr ip
    90ac:	23020000 	movwcs	r0, #8192	; 0x2000
    90b0:	03fc1210 	mvnseq	r1, #16, 4
    90b4:	42070000 	andmi	r0, r7, #0
    90b8:	0000980c 	andeq	r9, r0, ip, lsl #16
    90bc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    90c0:	00073612 	andeq	r3, r7, r2, lsl r6
    90c4:	0c450700 	mcrreq	7, 0, r0, r5, cr0
    90c8:	00000098 	muleq	r0, r8, r0
    90cc:	12182302 	andsne	r2, r8, #134217728	; 0x8000000
    90d0:	00002065 	andeq	r2, r0, r5, rrx
    90d4:	980c4a07 	stmdals	ip, {r0, r1, r2, r9, fp, lr}
    90d8:	02000000 	andeq	r0, r0, #0
    90dc:	32121c23 	andscc	r1, r2, #8960	; 0x2300
    90e0:	07000007 	streq	r0, [r0, -r7]
    90e4:	00980c4d 	addseq	r0, r8, sp, asr #24
    90e8:	23020000 	movwcs	r0, #8192	; 0x2000
    90ec:	07641220 	strbeq	r1, [r4, -r0, lsr #4]!
    90f0:	52070000 	andpl	r0, r7, #0
    90f4:	0000980c 	andeq	r9, r0, ip, lsl #16
    90f8:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    90fc:	00024912 	andeq	r4, r2, r2, lsl r9
    9100:	0c550700 	mrrceq	7, 0, r0, r5, cr0
    9104:	00000098 	muleq	r0, r8, r0
    9108:	12282302 	eorne	r2, r8, #134217728	; 0x8000000
    910c:	000007c0 	andeq	r0, r0, r0, asr #15
    9110:	980c5b07 	stmdals	ip, {r0, r1, r2, r8, r9, fp, ip, lr}
    9114:	02000000 	andeq	r0, r0, #0
    9118:	03002c23 	movweq	r2, #3107	; 0xc23
    911c:	0000004d 	andeq	r0, r0, sp, asr #32
    9120:	bf026007 	svclt	0x00026007
    9124:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    9128:	004a0107 	subeq	r0, sl, r7, lsl #2
    912c:	67070000 	strvs	r0, [r7, -r0]
    9130:	0002bc01 	andeq	fp, r2, r1, lsl #24
    9134:	01220f00 			; <UNDEFINED> instruction: 0x01220f00
    9138:	0f000000 	svceq	0x00000000
    913c:	0000045f 	andeq	r0, r0, pc, asr r4
    9140:	047c0f01 	ldrbteq	r0, [ip], #-3841	; 0xfffff0ff
    9144:	0f020000 	svceq	0x00020000
    9148:	000008d7 	ldrdeq	r0, [r0], -r7
    914c:	025f0f03 	subseq	r0, pc, #3, 30
    9150:	0f040000 	svceq	0x00040000
    9154:	000003be 			; <UNDEFINED> instruction: 0x000003be
    9158:	c6030005 	strgt	r0, [r3], -r5
    915c:	07000006 	streq	r0, [r0, -r6]
    9160:	0289026e 	addeq	r0, r9, #-536870906	; 0xe0000006
    9164:	bc060000 	stclt	0, cr0, [r6], {-0}
    9168:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    916c:	004a0107 	subeq	r0, sl, r7, lsl #2
    9170:	74070000 	strvc	r0, [r7], #-0
    9174:	0002e801 	andeq	lr, r2, r1, lsl #16
    9178:	1c500f00 	mrrcne	15, 0, r0, r0, cr0	; <UNPREDICTABLE>
    917c:	0f000000 	svceq	0x00000000
    9180:	00001bd7 	ldrdeq	r1, [r0], -r7
    9184:	33030001 	movwcc	r0, #12289	; 0x3001
    9188:	0700001c 	smladeq	r0, ip, r0, r0
    918c:	02cd0277 	sbceq	r0, sp, #1879048199	; 0x70000007
    9190:	070e0000 	streq	r0, [lr, -r0]
    9194:	00004a01 	andeq	r4, r0, r1, lsl #20
    9198:	017d0700 	cmneq	sp, r0, lsl #14
    919c:	0000032d 	andeq	r0, r0, sp, lsr #6
    91a0:	001b890f 	andseq	r8, fp, pc, lsl #18
    91a4:	540f0000 	strpl	r0, [pc], #-0	; 91ac <_Min_Heap_Size+0x89ac>
    91a8:	0100001d 	tsteq	r0, sp, lsl r0
    91ac:	001c8e0f 	andseq	r8, ip, pc, lsl #28
    91b0:	700f0200 	andvc	r0, pc, r0, lsl #4
    91b4:	0300001d 	movweq	r0, #29
    91b8:	001bbe0f 	andseq	fp, fp, pc, lsl #28
    91bc:	260f0400 	strcs	r0, [pc], -r0, lsl #8
    91c0:	0500001b 	streq	r0, [r0, #-27]	; 0xffffffe5
    91c4:	001d120f 	andseq	r1, sp, pc, lsl #4
    91c8:	03000600 	movweq	r0, #1536	; 0x600
    91cc:	00001c74 	andeq	r1, r0, r4, ror ip
    91d0:	f4028507 	vst3.8	{d8,d10,d12}, [r2], r7
    91d4:	13000002 	movwne	r0, #2
    91d8:	0000071e 	andeq	r0, r0, lr, lsl r7
    91dc:	108a0760 	addne	r0, sl, r0, ror #14
    91e0:	00000419 	andeq	r0, r0, r9, lsl r4
    91e4:	00053612 	andeq	r3, r5, r2, lsl r6
    91e8:	1f8c0700 	svcne	0x008c0700
    91ec:	00000419 	andeq	r0, r0, r9, lsl r4
    91f0:	12002302 	andne	r2, r0, #134217728	; 0x8000000
    91f4:	00001b47 	andeq	r1, r0, r7, asr #22
    91f8:	7d1e8e07 	ldcvc	14, cr8, [lr, #-28]	; 0xffffffe4
    91fc:	02000002 	andeq	r0, r0, #2
    9200:	e8120423 	ldmda	r2, {r0, r1, r5, sl}
    9204:	07000031 	smladxeq	r0, r1, r0, r0
    9208:	01b31e90 			; <UNDEFINED> instruction: 0x01b31e90
    920c:	23020000 	movwcs	r0, #8192	; 0x2000
    9210:	034b1234 	movteq	r1, #45620	; 0xb234
    9214:	92070000 	andls	r0, r7, #0
    9218:	0002c81e 	andeq	ip, r2, lr, lsl r8
    921c:	35230200 	strcc	r0, [r3, #-512]!	; 0xfffffe00
    9220:	0002d312 	andeq	sp, r2, r2, lsl r3
    9224:	1f940700 	svcne	0x00940700
    9228:	0000041f 	andeq	r0, r0, pc, lsl r4
    922c:	12382302 	eorsne	r2, r8, #134217728	; 0x8000000
    9230:	00000980 	andeq	r0, r0, r0, lsl #19
    9234:	33219607 			; <UNDEFINED> instruction: 0x33219607
    9238:	02000004 	andeq	r0, r0, #4
    923c:	0d123c23 	ldceq	12, cr3, [r2, #-140]	; 0xffffff74
    9240:	07000002 	streq	r0, [r0, -r2]
    9244:	04332198 	ldrteq	r2, [r3], #-408	; 0xfffffe68
    9248:	23020000 	movwcs	r0, #8192	; 0x2000
    924c:	01cb1240 	biceq	r1, fp, r0, asr #4
    9250:	9a070000 	bls	1c9258 <_Min_Heap_Size+0x1c8a58>
    9254:	00043321 	andeq	r3, r4, r1, lsr #6
    9258:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    925c:	0005ee12 	andeq	lr, r5, r2, lsl lr
    9260:	219c0700 	orrscs	r0, ip, r0, lsl #14
    9264:	00000433 	andeq	r0, r0, r3, lsr r4
    9268:	12482302 	subne	r2, r8, #134217728	; 0x8000000
    926c:	0000053f 	andeq	r0, r0, pc, lsr r5
    9270:	33219e07 			; <UNDEFINED> instruction: 0x33219e07
    9274:	02000004 	andeq	r0, r0, #4
    9278:	6e124c23 	cdpvs	12, 1, cr4, cr2, cr3, {1}
    927c:	07000009 	streq	r0, [r0, -r9]
    9280:	043321a0 	ldrteq	r2, [r3], #-416	; 0xfffffe60
    9284:	23020000 	movwcs	r0, #8192	; 0x2000
    9288:	03dd1250 	bicseq	r1, sp, #80, 4
    928c:	a2070000 	andge	r0, r7, #0
    9290:	0000a41e 	andeq	sl, r0, lr, lsl r4
    9294:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    9298:	0002bc12 	andeq	fp, r2, r2, lsl ip
    929c:	1ea40700 	cdpne	7, 10, cr0, cr4, cr0, {0}
    92a0:	00000098 	muleq	r0, r8, r0
    92a4:	12582302 	subsne	r2, r8, #134217728	; 0x8000000
    92a8:	0000036b 	andeq	r0, r0, fp, ror #6
    92ac:	981ea607 	ldmdals	lr, {r0, r1, r2, r9, sl, sp, pc}
    92b0:	02000000 	andeq	r0, r0, #0
    92b4:	14005c23 	strne	r5, [r0], #-3107	; 0xfffff3dd
    92b8:	00013604 	andeq	r3, r1, r4, lsl #12
    92bc:	16041500 	strne	r1, [r4], -r0, lsl #10
    92c0:	00042d01 	andeq	r2, r4, r1, lsl #26
    92c4:	042d1700 	strteq	r1, [sp], #-1792	; 0xfffff900
    92c8:	14000000 	strne	r0, [r0], #-0
    92cc:	00033904 	andeq	r3, r3, r4, lsl #18
    92d0:	21041400 	tstcs	r4, r0, lsl #8
    92d4:	03000004 	movweq	r0, #4
    92d8:	00000720 	andeq	r0, r0, r0, lsr #14
    92dc:	3902a807 	stmdbcc	r2, {r0, r1, r2, fp, sp, pc}
    92e0:	14000003 	strne	r0, [r0], #-3
    92e4:	00043904 	andeq	r3, r4, r4, lsl #18
    92e8:	010c1100 	mrseq	r1, (UNDEF: 28)
    92ec:	0482096f 	streq	r0, [r2], #2415	; 0x96f
    92f0:	49180000 	ldmdbmi	r8, {}	; <UNPREDICTABLE>
    92f4:	01005253 	tsteq	r0, r3, asr r2
    92f8:	00a41171 	adceq	r1, r4, r1, ror r1
    92fc:	23020000 	movwcs	r0, #8192	; 0x2000
    9300:	1b651200 	blne	194db08 <_Min_Heap_Size+0x194d308>
    9304:	72010000 	andvc	r0, r1, #0
    9308:	0000a411 	andeq	sl, r0, r1, lsl r4
    930c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9310:	001cb612 	andseq	fp, ip, r2, lsl r6
    9314:	11730100 	cmnne	r3, r0, lsl #2
    9318:	000000a4 	andeq	r0, r0, r4, lsr #1
    931c:	00082302 	andeq	r2, r8, r2, lsl #6
    9320:	001d2903 	andseq	r2, sp, r3, lsl #18
    9324:	03740100 	cmneq	r4, #0, 2
    9328:	0000044b 	andeq	r0, r0, fp, asr #8
    932c:	001cd119 	andseq	sp, ip, r9, lsl r1
    9330:	04bd0100 	ldrteq	r0, [sp], #256	; 0x100
    9334:	018c011a 	orreq	r0, ip, sl, lsl r1
	...
    9340:	7d020000 	stcvc	0, cr0, [r2, #-0]
    9344:	04ec0100 	strbteq	r0, [ip], #256	; 0x100
    9348:	4a1a0000 	bmi	689350 <_Min_Heap_Size+0x688b50>
    934c:	01000014 	tsteq	r0, r4, lsl r0
    9350:	454004bd 	strbmi	r0, [r0, #-1213]	; 0xfffffb43
    9354:	1c000004 	stcne	0, cr0, [r0], {4}
    9358:	e0000061 	and	r0, r0, r1, rrx
    935c:	1b000060 	blne	94e4 <_Min_Heap_Size+0x8ce4>
    9360:	00001a61 	andeq	r1, r0, r1, ror #20
    9364:	1504bf01 	strne	fp, [r4, #-3841]	; 0xfffff0ff
    9368:	0000018c 	andeq	r0, r0, ip, lsl #3
    936c:	0000629f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
    9370:	0000629b 	muleq	r0, fp, r2
    9374:	706d741c 	rsbvc	r7, sp, ip, lsl r4
    9378:	04c00100 	strbeq	r0, [r0], #256	; 0x100
    937c:	0000980c 	andeq	r9, r0, ip, lsl #16
    9380:	0062f400 	rsbeq	pc, r2, r0, lsl #8
    9384:	0062be00 	rsbeq	fp, r2, r0, lsl #28
    9388:	3c1d0000 	ldccc	0, cr0, [sp], {-0}
    938c:	0100001d 	tsteq	r0, sp, lsl r0
    9390:	011104a1 	tsteq	r1, r1, lsr #9
    9394:	00000098 	muleq	r0, r8, r0
	...
    93a0:	00006457 	andeq	r6, r0, r7, asr r4
    93a4:	00054901 	andeq	r4, r5, r1, lsl #18
    93a8:	144a1a00 	strbne	r1, [sl], #-2560	; 0xfffff600
    93ac:	a1010000 	mrsge	r0, (UNDEF: 1)
    93b0:	04453c04 	strbeq	r3, [r5], #-3076	; 0xfffff3fc
    93b4:	64950000 	ldrvs	r0, [r5], #0
    93b8:	648f0000 	strvs	r0, [pc], #0	; 93c0 <_Min_Heap_Size+0x8bc0>
    93bc:	661b0000 	ldrvs	r0, [fp], -r0
    93c0:	0100001c 	tsteq	r0, ip, lsl r0
    93c4:	980c04a3 	stmdals	ip, {r0, r1, r5, r7, sl}
    93c8:	c5000000 	strgt	r0, [r0, #-0]
    93cc:	c1000064 	tstgt	r0, r4, rrx
    93d0:	1e000064 	cdpne	0, 0, cr0, cr0, cr4, {3}
    93d4:	00001b6f 	andeq	r1, r0, pc, ror #22
    93d8:	1804a601 	stmdane	r4, {r0, r9, sl, sp, pc}
    93dc:	000000c7 	andeq	r0, r0, r7, asr #1
    93e0:	00000305 	andeq	r0, r0, r5, lsl #6
    93e4:	1f000000 	svcne	0x00000000
    93e8:	00001bed 	andeq	r1, r0, sp, ror #23
    93ec:	0d047f01 	stceq	15, cr7, [r4, #-4]
    93f0:	00000001 	andeq	r0, r0, r1
    93f4:	00000000 	andeq	r0, r0, r0
    93f8:	00650000 	rsbeq	r0, r5, r0
    93fc:	05a70100 	streq	r0, [r7, #256]!	; 0x100
    9400:	4a200000 	bmi	809408 <_Min_Heap_Size+0x808c08>
    9404:	01000014 	tsteq	r0, r4, lsl r0
    9408:	452e047f 	strmi	r0, [lr, #-1151]!	; 0xfffffb81
    940c:	01000004 	tsteq	r0, r4
    9410:	1d942050 	ldcne	0, cr2, [r4, #320]	; 0x140
    9414:	7f010000 	svcvc	0x00010000
    9418:	00983d04 	addseq	r3, r8, r4, lsl #26
    941c:	51010000 	mrspl	r0, (UNDEF: 1)
    9420:	001cbb20 	andseq	fp, ip, r0, lsr #22
    9424:	047f0100 	ldrbteq	r0, [pc], #-256	; 942c <_Min_Heap_Size+0x8c2c>
    9428:	00009852 	andeq	r9, r0, r2, asr r8
    942c:	1a520100 	bne	1489834 <_Min_Heap_Size+0x1489034>
    9430:	00001d9f 	muleq	r0, pc, sp	; <UNPREDICTABLE>
    9434:	67047f01 	strvs	r7, [r4, -r1, lsl #30]
    9438:	00000098 	muleq	r0, r8, r0
    943c:	00006542 	andeq	r6, r0, r2, asr #10
    9440:	00006538 	andeq	r6, r0, r8, lsr r5
    9444:	28012100 	stmdacs	r1, {r8, sp}
    9448:	01000017 	tsteq	r0, r7, lsl r0
    944c:	010a0465 	tsteq	sl, r5, ror #8
    9450:	00000098 	muleq	r0, r8, r0
	...
    945c:	01007d02 	tsteq	r0, r2, lsl #26
    9460:	000005dc 	ldrdeq	r0, [r0], -ip
    9464:	00144a1a 	andseq	r4, r4, sl, lsl sl
    9468:	04650100 	strbteq	r0, [r5], #-256	; 0xffffff00
    946c:	0004452e 	andeq	r4, r4, lr, lsr #10
    9470:	00658d00 	rsbeq	r8, r5, r0, lsl #26
    9474:	00658900 	rsbeq	r8, r5, r0, lsl #18
    9478:	01210000 			; <UNDEFINED> instruction: 0x01210000
    947c:	00001daa 	andeq	r1, r0, sl, lsr #27
    9480:	16045a01 	strne	r5, [r4], -r1, lsl #20
    9484:	0002bc01 	andeq	fp, r2, r1, lsl #24
	...
    9490:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    9494:	00061101 	andeq	r1, r6, r1, lsl #2
    9498:	144a1a00 	strbne	r1, [sl], #-2560	; 0xfffff600
    949c:	5a010000 	bpl	494a4 <_Min_Heap_Size+0x48ca4>
    94a0:	04453a04 	strbeq	r3, [r5], #-2564	; 0xfffff5fc
    94a4:	65b20000 	ldrvs	r0, [r2, #0]!
    94a8:	65ae0000 	strvs	r0, [lr, #0]!
    94ac:	21000000 	mrscs	r0, (UNDEF: 0)
    94b0:	001ce401 	andseq	lr, ip, r1, lsl #8
    94b4:	04050100 	streq	r0, [r5], #-256	; 0xffffff00
    94b8:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    94c4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    94c8:	066a0100 	strbteq	r0, [sl], -r0, lsl #2
    94cc:	4a1a0000 	bmi	6894d4 <_Min_Heap_Size+0x688cd4>
    94d0:	01000014 	tsteq	r0, r4, lsl r0
    94d4:	45410405 	strbmi	r0, [r1, #-1029]	; 0xfffffbfb
    94d8:	db000004 	blle	94f0 <_Min_Heap_Size+0x8cf0>
    94dc:	d3000065 	movwle	r0, #101	; 0x65
    94e0:	20000065 	andcs	r0, r0, r5, rrx
    94e4:	00001cc6 	andeq	r1, r0, r6, asr #25
    94e8:	61040501 	tstvs	r4, r1, lsl #10
    94ec:	0000032d 	andeq	r0, r0, sp, lsr #6
    94f0:	611b5101 	tstvs	fp, r1, lsl #2
    94f4:	0100001a 	tsteq	r0, sl, lsl r0
    94f8:	8c150407 	cfldrshi	mvf0, [r5], {7}
    94fc:	15000001 	strne	r0, [r0, #-1]
    9500:	0f000066 	svceq	0x00000066
    9504:	00000066 	andeq	r0, r0, r6, rrx
    9508:	1b4c0121 	blne	1309994 <_Min_Heap_Size+0x1309194>
    950c:	c7010000 	strgt	r0, [r1, -r0]
    9510:	8c011303 	stchi	3, cr1, [r1], {3}
    9514:	00000001 	andeq	r0, r0, r1
    9518:	00000000 	andeq	r0, r0, r0
    951c:	02000000 	andeq	r0, r0, #0
    9520:	d801007d 	stmdale	r1, {r0, r2, r3, r4, r5, r6}
    9524:	1a000006 	bne	9544 <_Min_Heap_Size+0x8d44>
    9528:	0000144a 	andeq	r1, r0, sl, asr #8
    952c:	3f03c701 	svccc	0x0003c701
    9530:	00000445 	andeq	r0, r0, r5, asr #8
    9534:	00006644 	andeq	r6, r0, r4, asr #12
    9538:	00006640 	andeq	r6, r0, r0, asr #12
    953c:	001cc620 	andseq	ip, ip, r0, lsr #12
    9540:	03c70100 	biceq	r0, r7, #0, 2
    9544:	00032d5f 	andeq	r2, r3, pc, asr sp
    9548:	1a510100 	bne	1449950 <_Min_Heap_Size+0x1449150>
    954c:	00001dbb 			; <UNDEFINED> instruction: 0x00001dbb
    9550:	7303c701 	movwvc	ip, #14081	; 0x3701
    9554:	000006e4 	andeq	r0, r0, r4, ror #13
    9558:	00006668 	andeq	r6, r0, r8, ror #12
    955c:	00006662 	andeq	r6, r0, r2, ror #12
    9560:	001a611b 	andseq	r6, sl, fp, lsl r1
    9564:	03ca0100 	biceq	r0, sl, #0, 2
    9568:	00018c15 	andeq	r8, r1, r5, lsl ip
    956c:	00669a00 	rsbeq	r9, r6, r0, lsl #20
    9570:	00669400 	rsbeq	r9, r6, r0, lsl #8
    9574:	01160000 	tsteq	r6, r0
    9578:	000006e4 	andeq	r0, r0, r4, ror #13
    957c:	00044517 	andeq	r4, r4, r7, lsl r5
    9580:	04140000 	ldreq	r0, [r4], #-0
    9584:	000006d8 	ldrdeq	r0, [r0], -r8
    9588:	1cff0122 	ldfnee	f0, [pc], #136	; 9618 <_Min_Heap_Size+0x8e18>
    958c:	ea010000 	b	49594 <_Min_Heap_Size+0x48d94>
    9590:	00010602 	andeq	r0, r1, r2, lsl #12
    9594:	00000000 	andeq	r0, r0, r0
    9598:	c5000000 	strgt	r0, [r0, #-0]
    959c:	01000066 	tsteq	r0, r6, rrx
    95a0:	000007e7 	andeq	r0, r0, r7, ror #15
    95a4:	00144a1a 	andseq	r4, r4, sl, lsl sl
    95a8:	02ea0100 	rsceq	r0, sl, #0, 2
    95ac:	0004452c 	andeq	r4, r4, ip, lsr #10
    95b0:	00670b00 	rsbeq	r0, r7, r0, lsl #22
    95b4:	0066fd00 	rsbeq	pc, r6, r0, lsl #26
    95b8:	1b821b00 	blne	fe0901c0 <_estack+0xde086820>
    95bc:	ec010000 	stc	0, cr0, [r1], {-0}
    95c0:	00980c02 	addseq	r0, r8, r2, lsl #24
    95c4:	67650000 	strbvs	r0, [r5, -r0]!
    95c8:	67630000 	strbvs	r0, [r3, -r0]!
    95cc:	8e1e0000 	cdphi	0, 1, cr0, cr14, cr0, {0}
    95d0:	0100001d 	tsteq	r0, sp, lsl r0
    95d4:	a41102ed 	ldrge	r0, [r1], #-749	; 0xfffffd13
    95d8:	02000000 	andeq	r0, r0, #0
    95dc:	c51b6491 	ldrgt	r6, [fp, #-1169]	; 0xfffffb6f
    95e0:	0100001d 	tsteq	r0, sp, lsl r0
    95e4:	980c02ee 	stmdals	ip, {r1, r2, r3, r5, r6, r7, r9}
    95e8:	7a000000 	bvc	95f0 <_Min_Heap_Size+0x8df0>
    95ec:	78000067 	stmdavc	r0, {r0, r1, r2, r5, r6}
    95f0:	1b000067 	blne	9794 <_Min_Heap_Size+0x8f94>
    95f4:	00001dcd 	andeq	r1, r0, sp, asr #27
    95f8:	1702f101 	strne	pc, [r2, -r1, lsl #2]
    95fc:	000007e7 	andeq	r0, r0, r7, ror #15
    9600:	0000678f 	andeq	r6, r0, pc, lsl #15
    9604:	0000678d 	andeq	r6, r0, sp, lsl #15
    9608:	00000023 	andeq	r0, r0, r3, lsr #32
    960c:	00077a00 	andeq	r7, r7, r0, lsl #20
    9610:	50012400 	andpl	r2, r1, r0, lsl #8
    9614:	00007402 	andeq	r7, r0, r2, lsl #8
    9618:	00000023 	andeq	r0, r0, r3, lsr #32
    961c:	00078a00 	andeq	r8, r7, r0, lsl #20
    9620:	50012400 	andpl	r2, r1, r0, lsl #8
    9624:	00007402 	andeq	r7, r0, r2, lsl #8
    9628:	00000023 	andeq	r0, r0, r3, lsr #32
    962c:	00079a00 	andeq	r9, r7, r0, lsl #20
    9630:	50012400 	andpl	r2, r1, r0, lsl #8
    9634:	00007402 	andeq	r7, r0, r2, lsl #8
    9638:	00000023 	andeq	r0, r0, r3, lsr #32
    963c:	0007aa00 	andeq	sl, r7, r0, lsl #20
    9640:	50012400 	andpl	r2, r1, r0, lsl #8
    9644:	00007402 	andeq	r7, r0, r2, lsl #8
    9648:	00000023 	andeq	r0, r0, r3, lsr #32
    964c:	0007ba00 	andeq	fp, r7, r0, lsl #20
    9650:	50012400 	andpl	r2, r1, r0, lsl #8
    9654:	00007402 	andeq	r7, r0, r2, lsl #8
    9658:	00000023 	andeq	r0, r0, r3, lsr #32
    965c:	0007ca00 	andeq	ip, r7, r0, lsl #20
    9660:	50012400 	andpl	r2, r1, r0, lsl #8
    9664:	00007402 	andeq	r7, r0, r2, lsl #8
    9668:	00000023 	andeq	r0, r0, r3, lsr #32
    966c:	0007da00 	andeq	sp, r7, r0, lsl #20
    9670:	50012400 	andpl	r2, r1, r0, lsl #8
    9674:	00007402 	andeq	r7, r0, r2, lsl #8
    9678:	00000025 	andeq	r0, r0, r5, lsr #32
    967c:	50012400 	andpl	r2, r1, r0, lsl #8
    9680:	00007402 	andeq	r7, r0, r2, lsl #8
    9684:	82041400 	andhi	r1, r4, #0, 8
    9688:	26000004 	strcs	r0, [r0], -r4
    968c:	001de101 	andseq	lr, sp, r1, lsl #2
    9690:	02620100 	rsbeq	r0, r2, #0, 2
    9694:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    96a0:	67a20000 	strvs	r0, [r2, r0]!
    96a4:	d1010000 	mrsle	r0, (UNDEF: 1)
    96a8:	1a000008 	bne	96d0 <_Min_Heap_Size+0x8ed0>
    96ac:	0000144a 	andeq	r1, r0, sl, asr #8
    96b0:	3e026201 	cdpcc	2, 0, cr6, cr2, cr1, {0}
    96b4:	00000445 	andeq	r0, r0, r5, asr #8
    96b8:	000067c6 	andeq	r6, r0, r6, asr #15
    96bc:	000067c2 	andeq	r6, r0, r2, asr #15
    96c0:	001ca81a 	andseq	sl, ip, sl, lsl r8
    96c4:	02620100 	rsbeq	r0, r2, #0, 2
    96c8:	0002e861 	andeq	lr, r2, r1, ror #16
    96cc:	0067e800 	rsbeq	lr, r7, r0, lsl #16
    96d0:	0067e400 	rsbeq	lr, r7, r0, lsl #8
    96d4:	3e431a00 	vmlacc.f32	s3, s6, s0
    96d8:	62010000 	andvs	r0, r1, #0
    96dc:	00987902 	addseq	r7, r8, r2, lsl #18
    96e0:	680d0000 	stmdavs	sp, {}	; <UNPREDICTABLE>
    96e4:	68090000 	stmdavs	r9, {}	; <UNPREDICTABLE>
    96e8:	61270000 			; <UNDEFINED> instruction: 0x61270000
    96ec:	0100001a 	tsteq	r0, sl, lsl r0
    96f0:	8c150264 	lfmhi	f0, 4, [r5], {100}	; 0x64
    96f4:	00000001 	andeq	r0, r0, r1
    96f8:	001dd21b 	andseq	sp, sp, fp, lsl r2
    96fc:	02650100 	rsbeq	r0, r5, #0, 2
    9700:	0000980c 	andeq	r9, r0, ip, lsl #16
    9704:	00682f00 	rsbeq	r2, r8, r0, lsl #30
    9708:	00682b00 	rsbeq	r2, r8, r0, lsl #22
    970c:	160c1b00 	strne	r1, [ip], -r0, lsl #22
    9710:	66010000 	strvs	r0, [r1], -r0
    9714:	00980c02 	addseq	r0, r8, r2, lsl #24
    9718:	685b0000 	ldmdavs	fp, {}^	; <UNPREDICTABLE>
    971c:	684d0000 	stmdavs	sp, {}^	; <UNPREDICTABLE>
    9720:	821b0000 	andshi	r0, fp, #0
    9724:	0100001b 	tsteq	r0, fp, lsl r0
    9728:	980c0267 	stmdals	ip, {r0, r1, r2, r5, r6, r9}
    972c:	b4000000 	strlt	r0, [r0], #-0
    9730:	b0000068 	andlt	r0, r0, r8, rrx
    9734:	1b000068 	blne	98dc <_Min_Heap_Size+0x90dc>
    9738:	00001dcd 	andeq	r1, r0, sp, asr #27
    973c:	17026a01 	strne	r6, [r2, -r1, lsl #20]
    9740:	000007e7 	andeq	r0, r0, r7, ror #15
    9744:	000068d6 	ldrdeq	r6, [r0], -r6	; <UNPREDICTABLE>
    9748:	000068d2 	ldrdeq	r6, [r0], -r2
    974c:	00000028 	andeq	r0, r0, r8, lsr #32
    9750:	000db900 	andeq	fp, sp, r0, lsl #18
    9754:	00002800 	andeq	r2, r0, r0, lsl #16
    9758:	0db90000 	ldceq	0, cr0, [r9]
    975c:	00290000 	eoreq	r0, r9, r0
    9760:	06000000 	streq	r0, [r0], -r0
    9764:	24000009 	strcs	r0, [r0], #-9
    9768:	74025001 	strvc	r5, [r2], #-1
    976c:	21000000 	mrscs	r0, (UNDEF: 0)
    9770:	00119701 	andseq	r9, r1, r1, lsl #14
    9774:	02440100 	subeq	r0, r4, #0, 2
    9778:	018c0113 	orreq	r0, ip, r3, lsl r1
    977c:	14780000 	ldrbtne	r0, [r8], #-0
    9780:	149e0800 	ldrne	r0, [lr], #2048	; 0x800
    9784:	7d020800 	stcvc	8, cr0, [r2, #-0]
    9788:	09060100 	stmdbeq	r6, {r8}
    978c:	4a1a0000 	bmi	689794 <_Min_Heap_Size+0x688f94>
    9790:	01000014 	tsteq	r0, r4, lsl r0
    9794:	45370244 	ldrmi	r0, [r7, #-580]!	; 0xfffffdbc
    9798:	fc000004 	stc2	0, cr0, [r0], {4}
    979c:	f4000068 	vst4.16	{d0-d3}, [r0 :128], r8
    97a0:	00000068 	andeq	r0, r0, r8, rrx
    97a4:	13d30126 	bicsne	r0, r3, #-2147483639	; 0x80000009
    97a8:	01010000 	mrseq	r0, (UNDEF: 1)
    97ac:	8c011302 	stchi	3, cr1, [r1], {2}
    97b0:	e4000001 	str	r0, [r0], #-1
    97b4:	78080013 	stmdavc	r8, {r0, r1, r4}
    97b8:	36080014 			; <UNDEFINED> instruction: 0x36080014
    97bc:	01000069 	tsteq	r0, r9, rrx
    97c0:	00000978 	andeq	r0, r0, r8, ror r9
    97c4:	00144a1a 	andseq	r4, r4, sl, lsl sl
    97c8:	02010100 	andeq	r0, r1, #0, 2
    97cc:	00044534 	andeq	r4, r4, r4, lsr r5
    97d0:	00695a00 	rsbeq	r5, r9, r0, lsl #20
    97d4:	00695600 	rsbeq	r5, r9, r0, lsl #12
    97d8:	1dcd1b00 	vstrne	d17, [sp]
    97dc:	04010000 	streq	r0, [r1], #-0
    97e0:	07e71702 	strbeq	r1, [r7, r2, lsl #14]!
    97e4:	697a0000 	ldmdbvs	sl!, {}^	; <UNPREDICTABLE>
    97e8:	69780000 	ldmdbvs	r8!, {}^	; <UNPREDICTABLE>
    97ec:	0c1b0000 	ldceq	0, cr0, [fp], {-0}
    97f0:	01000016 	tsteq	r0, r6, lsl r0
    97f4:	980c0206 	stmdals	ip, {r1, r2, r9}
    97f8:	97000000 	strls	r0, [r0, -r0]
    97fc:	8d000069 	stchi	0, cr0, [r0, #-420]	; 0xfffffe5c
    9800:	28000069 	stmdacs	r0, {r0, r3, r5, r6}
    9804:	080013ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, r9, ip}
    9808:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    980c:	00144228 	andseq	r4, r4, r8, lsr #4
    9810:	000db908 	andeq	fp, sp, r8, lsl #18
    9814:	01260000 			; <UNDEFINED> instruction: 0x01260000
    9818:	00001271 	andeq	r1, r0, r1, ror r2
    981c:	1301c301 	movwne	ip, #4865	; 0x1301
    9820:	00018c01 	andeq	r8, r1, r1, lsl #24
	...
    982c:	0069d600 	rsbeq	sp, r9, r0, lsl #12
    9830:	0a570100 	beq	15c9c38 <_Min_Heap_Size+0x15c9438>
    9834:	4a1a0000 	bmi	68983c <_Min_Heap_Size+0x68903c>
    9838:	01000014 	tsteq	r0, r4, lsl r0
    983c:	453701c3 	ldrmi	r0, [r7, #-451]!	; 0xfffffe3d
    9840:	fe000004 	cdp2	0, 0, cr0, cr0, cr4, {0}
    9844:	f6000069 			; <UNDEFINED> instruction: 0xf6000069
    9848:	1a000069 	bne	99f4 <_Min_Heap_Size+0x91f4>
    984c:	00001d94 	muleq	r0, r4, sp
    9850:	4601c301 	strmi	ip, [r1], -r1, lsl #6
    9854:	00000098 	muleq	r0, r8, r0
    9858:	00006a3a 	andeq	r6, r0, sl, lsr sl
    985c:	00006a32 	andeq	r6, r0, r2, lsr sl
    9860:	001cbb1a 	andseq	fp, ip, sl, lsl fp
    9864:	01c30100 	biceq	r0, r3, r0, lsl #2
    9868:	0000985b 	andeq	r9, r0, fp, asr r8
    986c:	006a7200 	rsbeq	r7, sl, r0, lsl #4
    9870:	006a6e00 	rsbeq	r6, sl, r0, lsl #28
    9874:	1d9f1a00 	vldrne	s2, [pc]	; 987c <_Min_Heap_Size+0x907c>
    9878:	c3010000 	movwgt	r0, #4096	; 0x1000
    987c:	00987001 	addseq	r7, r8, r1
    9880:	6a940000 	bvs	fe509888 <_estack+0xde4ffee8>
    9884:	6a900000 	bvs	fe40988c <_estack+0xde3ffeec>
    9888:	611b0000 	tstvs	fp, r0
    988c:	0100001a 	tsteq	r0, sl, lsl r0
    9890:	8c1501c5 	ldfhis	f0, [r5], {197}	; 0xc5
    9894:	b8000001 	stmdalt	r0, {r0}
    9898:	b200006a 	andlt	r0, r0, #106	; 0x6a
    989c:	1b00006a 	blne	9a4c <_Min_Heap_Size+0x924c>
    98a0:	00001dcd 	andeq	r1, r0, sp, asr #27
    98a4:	1701c801 	strne	ip, [r1, -r1, lsl #16]
    98a8:	000007e7 	andeq	r0, r0, r7, ror #15
    98ac:	00006ae6 	andeq	r6, r0, r6, ror #21
    98b0:	00006ae4 	andeq	r6, r0, r4, ror #21
    98b4:	0000002a 	andeq	r0, r0, sl, lsr #32
    98b8:	000dc700 	andeq	ip, sp, r0, lsl #14
    98bc:	000a3400 	andeq	r3, sl, r0, lsl #8
    98c0:	50012400 	andpl	r2, r1, r0, lsl #8
    98c4:	00000305 	andeq	r0, r0, r5, lsl #6
    98c8:	01240000 			; <UNDEFINED> instruction: 0x01240000
    98cc:	cb0a0351 	blgt	28a618 <_Min_Heap_Size+0x289e18>
    98d0:	00290001 	eoreq	r0, r9, r1
    98d4:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    98d8:	24000005 	strcs	r0, [r0], #-5
    98dc:	74025001 	strvc	r5, [r2], #-1
    98e0:	51012400 	tstpl	r1, r0, lsl #8
    98e4:	24007602 	strcs	r7, [r0], #-1538	; 0xfffff9fe
    98e8:	77025201 	strvc	r5, [r2, -r1, lsl #4]
    98ec:	53012400 	movwpl	r2, #5120	; 0x1400
    98f0:	00007502 	andeq	r7, r0, r2, lsl #10
    98f4:	a1012600 	tstge	r1, r0, lsl #12
    98f8:	0100001b 	tsteq	r0, fp, lsl r0
    98fc:	01130197 			; <UNDEFINED> instruction: 0x01130197
    9900:	0000018c 	andeq	r0, r0, ip, lsl #3
	...
    990c:	00006af9 	strdeq	r6, [r0], -r9
    9910:	000b2101 	andeq	r2, fp, r1, lsl #2
    9914:	144a1a00 	strbne	r1, [sl], #-2560	; 0xfffff600
    9918:	97010000 	strls	r0, [r1, -r0]
    991c:	04453401 	strbeq	r3, [r5], #-1025	; 0xfffffbff
    9920:	6b210000 	blvs	849928 <_Min_Heap_Size+0x849128>
    9924:	6b190000 	blvs	64992c <_Min_Heap_Size+0x64912c>
    9928:	941a0000 	ldrls	r0, [sl], #-0
    992c:	0100001d 	tsteq	r0, sp, lsl r0
    9930:	98430197 	stmdals	r3, {r0, r1, r2, r4, r7, r8}^
    9934:	5d000000 	stcpl	0, cr0, [r0, #-0]
    9938:	5500006b 	strpl	r0, [r0, #-107]	; 0xffffff95
    993c:	1a00006b 	bne	9af0 <_Min_Heap_Size+0x92f0>
    9940:	00001cbb 			; <UNDEFINED> instruction: 0x00001cbb
    9944:	58019701 	stmdapl	r1, {r0, r8, r9, sl, ip, pc}
    9948:	00000098 	muleq	r0, r8, r0
    994c:	00006b95 	muleq	r0, r5, fp
    9950:	00006b91 	muleq	r0, r1, fp
    9954:	001d9f1a 	andseq	r9, sp, sl, lsl pc
    9958:	01970100 	orrseq	r0, r7, r0, lsl #2
    995c:	0000986d 	andeq	r9, r0, sp, ror #16
    9960:	006bb700 	rsbeq	fp, fp, r0, lsl #14
    9964:	006bb300 	rsbeq	fp, fp, r0, lsl #6
    9968:	1a611b00 	bne	1850570 <_Min_Heap_Size+0x184fd70>
    996c:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    9970:	018c1501 	orreq	r1, ip, r1, lsl #10
    9974:	6bdb0000 	blvs	ff6c997c <_estack+0xdf6bffdc>
    9978:	6bd50000 	blvs	ff549980 <_estack+0xdf53ffe0>
    997c:	002a0000 	eoreq	r0, sl, r0
    9980:	c7000000 	strgt	r0, [r0, -r0]
    9984:	fe00000d 	cdp2	0, 0, cr0, cr0, cr13, {0}
    9988:	2400000a 	strcs	r0, [r0], #-10
    998c:	03055001 	movweq	r5, #20481	; 0x5001
    9990:	00000000 	andeq	r0, r0, r0
    9994:	03510124 	cmpeq	r1, #36, 2
    9998:	00019c0a 	andeq	r9, r1, sl, lsl #24
    999c:	00000029 	andeq	r0, r0, r9, lsr #32
    99a0:	00054900 	andeq	r4, r5, r0, lsl #18
    99a4:	50012400 	andpl	r2, r1, r0, lsl #8
    99a8:	24007402 	strcs	r7, [r0], #-1026	; 0xfffffbfe
    99ac:	76025101 	strvc	r5, [r2], -r1, lsl #2
    99b0:	52012400 	andpl	r2, r1, #0, 8
    99b4:	24007702 	strcs	r7, [r0], #-1794	; 0xfffff8fe
    99b8:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    99bc:	26000000 	strcs	r0, [r0], -r0
    99c0:	001baf01 	andseq	sl, fp, r1, lsl #30
    99c4:	01350100 	teqeq	r5, r0, lsl #2
    99c8:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    99d4:	6c070000 	stcvs	0, cr0, [r7], {-0}
    99d8:	9a010000 	bls	499e0 <_Min_Heap_Size+0x491e0>
    99dc:	1a00000b 	bne	9a10 <_Min_Heap_Size+0x9210>
    99e0:	0000144a 	andeq	r1, r0, sl, asr #8
    99e4:	35013501 	strcc	r3, [r1, #-1281]	; 0xfffffaff
    99e8:	00000445 	andeq	r0, r0, r5, asr #8
    99ec:	00006c3b 	andeq	r6, r0, fp, lsr ip
    99f0:	00006c33 	andeq	r6, r0, r3, lsr ip
    99f4:	001dcd1b 	andseq	ip, sp, fp, lsl sp
    99f8:	01370100 	teqeq	r7, r0, lsl #2
    99fc:	0007e717 	andeq	lr, r7, r7, lsl r7
    9a00:	006c7400 	rsbeq	r7, ip, r0, lsl #8
    9a04:	006c7200 	rsbeq	r7, ip, r0, lsl #4
    9a08:	00002a00 	andeq	r2, r0, r0, lsl #20
    9a0c:	0dc70000 	stcleq	0, cr0, [r7]
    9a10:	0b890000 	bleq	fe249a18 <_estack+0xde240078>
    9a14:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9a18:	00030550 	andeq	r0, r3, r0, asr r5
    9a1c:	24000000 	strcs	r0, [r0], #-0
    9a20:	0a035101 	beq	dde2c <_Min_Heap_Size+0xdd62c>
    9a24:	29000147 	stmdbcs	r0, {r0, r1, r2, r6, r8}
    9a28:	00000000 	andeq	r0, r0, r0
    9a2c:	000004ec 	andeq	r0, r0, ip, ror #9
    9a30:	02500124 	subseq	r0, r0, #36, 2
    9a34:	00000075 	andeq	r0, r0, r5, ror r0
    9a38:	1b3f012b 	blne	fc9eec <_Min_Heap_Size+0xfc96ec>
    9a3c:	aa010000 	bge	49a44 <_Min_Heap_Size+0x49244>
    9a40:	018c0113 	orreq	r0, ip, r3, lsl r1
	...
    9a4c:	6c870000 	stcvs	0, cr0, [r7], {0}
    9a50:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    9a54:	2c00000d 	stccs	0, cr0, [r0], {13}
    9a58:	0000144a 	andeq	r1, r0, sl, asr #8
    9a5c:	4533aa01 	ldrmi	sl, [r3, #-2561]!	; 0xfffff5ff
    9a60:	ab000004 	blge	9a78 <_Min_Heap_Size+0x9278>
    9a64:	a700006c 	strge	r0, [r0, -ip, rrx]
    9a68:	2d00006c 	stccs	0, cr0, [r0, #-432]	; 0xfffffe50
    9a6c:	00706d74 	rsbseq	r6, r0, r4, ror sp
    9a70:	980cac01 	stmdals	ip, {r0, sl, fp, sp, pc}
    9a74:	db000000 	blle	9a7c <_Min_Heap_Size+0x927c>
    9a78:	c900006c 	stmdbgt	r0, {r2, r3, r5, r6}
    9a7c:	2e00006c 	cdpcs	0, 0, cr0, cr0, cr12, {3}
    9a80:	0000160c 	andeq	r1, r0, ip, lsl #12
    9a84:	980cad01 	stmdals	ip, {r0, r8, sl, fp, sp, pc}
    9a88:	53000000 	movwpl	r0, #0
    9a8c:	4900006d 	stmdbmi	r0, {r0, r2, r3, r5, r6}
    9a90:	2e00006d 	cdpcs	0, 0, cr0, cr0, cr13, {3}
    9a94:	00001dcd 	andeq	r1, r0, sp, asr #27
    9a98:	e717ae01 	ldr	sl, [r7, -r1, lsl #28]
    9a9c:	94000007 	strls	r0, [r0], #-7
    9aa0:	9200006d 	andls	r0, r0, #109	; 0x6d
    9aa4:	2800006d 	stmdacs	r0, {r0, r2, r3, r5, r6}
    9aa8:	00000000 	andeq	r0, r0, r0
    9aac:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    9ab0:	0000002a 	andeq	r0, r0, sl, lsr #32
    9ab4:	000dc700 	andeq	ip, sp, r0, lsl #14
    9ab8:	000c2f00 	andeq	r2, ip, r0, lsl #30
    9abc:	50012400 	andpl	r2, r1, r0, lsl #8
    9ac0:	00000305 	andeq	r0, r0, r5, lsl #6
    9ac4:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9ac8:	b7080251 	smlsdlt	r8, r1, r2, r0
    9acc:	00002800 	andeq	r2, r0, r0, lsl #16
    9ad0:	0db90000 	ldceq	0, cr0, [r9]
    9ad4:	002a0000 	eoreq	r0, sl, r0
    9ad8:	c7000000 	strgt	r0, [r0, -r0]
    9adc:	5500000d 	strpl	r0, [r0, #-13]
    9ae0:	2400000c 	strcs	r0, [r0], #-12
    9ae4:	03055001 	movweq	r5, #20481	; 0x5001
    9ae8:	00000000 	andeq	r0, r0, r0
    9aec:	02510124 	subseq	r0, r1, #36, 2
    9af0:	2a00b808 	bcs	37b18 <_Min_Heap_Size+0x37318>
    9af4:	00000000 	andeq	r0, r0, r0
    9af8:	00000dc7 	andeq	r0, r0, r7, asr #27
    9afc:	00000c72 	andeq	r0, r0, r2, ror ip
    9b00:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    9b04:	00000003 	andeq	r0, r0, r3
    9b08:	51012400 	tstpl	r1, r0, lsl #8
    9b0c:	00b90802 	adcseq	r0, r9, r2, lsl #16
    9b10:	0000002a 	andeq	r0, r0, sl, lsr #32
    9b14:	000dc700 	andeq	ip, sp, r0, lsl #14
    9b18:	000c8f00 	andeq	r8, ip, r0, lsl #30
    9b1c:	50012400 	andpl	r2, r1, r0, lsl #8
    9b20:	00000305 	andeq	r0, r0, r5, lsl #6
    9b24:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9b28:	ba080251 	blt	20a474 <_Min_Heap_Size+0x209c74>
    9b2c:	00002a00 	andeq	r2, r0, r0, lsl #20
    9b30:	0dc70000 	stcleq	0, cr0, [r7]
    9b34:	0cac0000 	stceq	0, cr0, [ip]
    9b38:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9b3c:	00030550 	andeq	r0, r3, r0, asr r5
    9b40:	24000000 	strcs	r0, [r0], #-0
    9b44:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    9b48:	002a00bb 	strhteq	r0, [sl], -fp
    9b4c:	c7000000 	strgt	r0, [r0, -r0]
    9b50:	c900000d 	stmdbgt	r0, {r0, r2, r3}
    9b54:	2400000c 	strcs	r0, [r0], #-12
    9b58:	03055001 	movweq	r5, #20481	; 0x5001
    9b5c:	00000000 	andeq	r0, r0, r0
    9b60:	02510124 	subseq	r0, r1, #36, 2
    9b64:	2a00bc08 	bcs	38b8c <_Min_Heap_Size+0x3838c>
    9b68:	00000000 	andeq	r0, r0, r0
    9b6c:	00000dc7 	andeq	r0, r0, r7, asr #27
    9b70:	00000ce6 	andeq	r0, r0, r6, ror #25
    9b74:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    9b78:	00000003 	andeq	r0, r0, r3
    9b7c:	51012400 	tstpl	r1, r0, lsl #8
    9b80:	00bd0802 	adcseq	r0, sp, r2, lsl #16
    9b84:	0000002a 	andeq	r0, r0, sl, lsr #32
    9b88:	000dc700 	andeq	ip, sp, r0, lsl #14
    9b8c:	000d0300 	andeq	r0, sp, r0, lsl #6
    9b90:	50012400 	andpl	r2, r1, r0, lsl #8
    9b94:	00000305 	andeq	r0, r0, r5, lsl #6
    9b98:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9b9c:	be080251 	mcrlt	2, 0, r0, cr8, cr1, {2}
    9ba0:	00002a00 	andeq	r2, r0, r0, lsl #20
    9ba4:	0dc70000 	stcleq	0, cr0, [r7]
    9ba8:	0d200000 	stceq	0, cr0, [r0, #-0]
    9bac:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9bb0:	00030550 	andeq	r0, r3, r0, asr r5
    9bb4:	24000000 	strcs	r0, [r0], #-0
    9bb8:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    9bbc:	002a00bf 	strhteq	r0, [sl], -pc
    9bc0:	c7000000 	strgt	r0, [r0, -r0]
    9bc4:	3d00000d 	stccc	0, cr0, [r0, #-52]	; 0xffffffcc
    9bc8:	2400000d 	strcs	r0, [r0], #-13
    9bcc:	03055001 	movweq	r5, #20481	; 0x5001
    9bd0:	00000000 	andeq	r0, r0, r0
    9bd4:	02510124 	subseq	r0, r1, #36, 2
    9bd8:	2a00c008 	bcs	39c00 <_Min_Heap_Size+0x39400>
    9bdc:	00000000 	andeq	r0, r0, r0
    9be0:	00000dc7 	andeq	r0, r0, r7, asr #27
    9be4:	00000d5a 	andeq	r0, r0, sl, asr sp
    9be8:	05500124 	ldrbeq	r0, [r0, #-292]	; 0xfffffedc
    9bec:	00000003 	andeq	r0, r0, r3
    9bf0:	51012400 	tstpl	r1, r0, lsl #8
    9bf4:	00c50802 	sbceq	r0, r5, r2, lsl #16
    9bf8:	0000002a 	andeq	r0, r0, sl, lsr #32
    9bfc:	000dc700 	andeq	ip, sp, r0, lsl #14
    9c00:	000d7700 	andeq	r7, sp, r0, lsl #14
    9c04:	50012400 	andpl	r2, r1, r0, lsl #8
    9c08:	00000305 	andeq	r0, r0, r5, lsl #6
    9c0c:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9c10:	c6080251 			; <UNDEFINED> instruction: 0xc6080251
    9c14:	00002a00 	andeq	r2, r0, r0, lsl #20
    9c18:	0dc70000 	stcleq	0, cr0, [r7]
    9c1c:	0d940000 	ldceq	0, cr0, [r4]
    9c20:	01240000 			; <UNDEFINED> instruction: 0x01240000
    9c24:	00030550 	andeq	r0, r3, r0, asr r5
    9c28:	24000000 	strcs	r0, [r0], #-0
    9c2c:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    9c30:	002a00c7 	eoreq	r0, sl, r7, asr #1
    9c34:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    9c38:	a8000004 	stmdage	r0, {r2}
    9c3c:	2400000d 	strcs	r0, [r0], #-13
    9c40:	74025001 	strvc	r5, [r2], #-1
    9c44:	00290000 	eoreq	r0, r9, r0
    9c48:	ec000000 	stc	0, cr0, [r0], {-0}
    9c4c:	24000004 	strcs	r0, [r0], #-4
    9c50:	74025001 	strvc	r5, [r2], #-1
    9c54:	2f000000 	svccs	0x00000000
    9c58:	14660101 	strbtne	r0, [r6], #-257	; 0xfffffeff
    9c5c:	14660000 	strbtne	r0, [r6], #-0
    9c60:	ea090000 	b	249c68 <_Min_Heap_Size+0x249468>
    9c64:	0101300a 	tsteq	r1, sl
    9c68:	00000aaa 	andeq	r0, r0, sl, lsr #21
    9c6c:	00000aaa 	andeq	r0, r0, sl, lsr #21
    9c70:	0801e60a 	stmdaeq	r1, {r1, r3, r9, sl, sp, lr, pc}
    9c74:	00142400 	andseq	r2, r4, r0, lsl #8
    9c78:	65000200 	strvs	r0, [r0, #-512]	; 0xfffffe00
    9c7c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    9c80:	00062101 	andeq	r2, r6, r1, lsl #2
    9c84:	1e0b0c00 	cdpne	12, 0, cr0, cr11, cr0, {0}
    9c88:	04e90000 	strbteq	r0, [r9], #0
    9c8c:	05100000 	ldreq	r0, [r0, #-0]
	...
    9c98:	78810000 	stmvc	r1, {}	; <UNPREDICTABLE>
    9c9c:	05020000 	streq	r0, [r2, #-0]
    9ca0:	00023c01 	andeq	r3, r2, r1, lsl #24
    9ca4:	01420400 	cmpeq	r2, r0, lsl #8
    9ca8:	0000023c 	andeq	r0, r0, ip, lsr r2
    9cac:	000d9003 	andeq	r9, sp, r3
    9cb0:	bf037200 	svclt	0x00037200
    9cb4:	7400000d 	strvc	r0, [r0], #-13
    9cb8:	000e1f03 	andeq	r1, lr, r3, lsl #30
    9cbc:	c6037500 	strgt	r7, [r3], -r0, lsl #10
    9cc0:	7600000c 	strvc	r0, [r0], -ip
    9cc4:	000e7103 	andeq	r7, lr, r3, lsl #2
    9cc8:	f9037b00 			; <UNDEFINED> instruction: 0xf9037b00
    9ccc:	7c00000f 	stcvc	0, cr0, [r0], {15}
    9cd0:	0010ca03 	andseq	ip, r0, r3, lsl #20
    9cd4:	38037e00 	stmdacc	r3, {r9, sl, fp, ip, sp, lr}
    9cd8:	7f00000c 	svcvc	0x0000000c
    9cdc:	000da404 	andeq	sl, sp, r4, lsl #8
    9ce0:	90040000 	andls	r0, r4, r0
    9ce4:	0100000f 	tsteq	r0, pc
    9ce8:	000dd504 	andeq	sp, sp, r4, lsl #10
    9cec:	33040200 	movwcc	r0, #16896	; 0x4200
    9cf0:	0300000b 	movweq	r0, #11
    9cf4:	000b9d04 	andeq	r9, fp, r4, lsl #26
    9cf8:	2c040400 	cfstrscs	mvf0, [r4], {-0}
    9cfc:	05000010 	streq	r0, [r0, #-16]
    9d00:	000fbd04 	andeq	fp, pc, r4, lsl #26
    9d04:	30040600 	andcc	r0, r4, r0, lsl #12
    9d08:	0700000d 	streq	r0, [r0, -sp]
    9d0c:	000b4104 	andeq	r4, fp, r4, lsl #2
    9d10:	bf040800 	svclt	0x00040800
    9d14:	09000010 	stmdbeq	r0, {r4}
    9d18:	000eac04 	andeq	sl, lr, r4, lsl #24
    9d1c:	08040a00 	stmdaeq	r4, {r9, fp}
    9d20:	0b00000f 	bleq	9d64 <_Min_Heap_Size+0x9564>
    9d24:	000ed204 	andeq	sp, lr, r4, lsl #4
    9d28:	62040c00 	andvs	r0, r4, #0, 24
    9d2c:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
    9d30:	00103504 	andseq	r3, r0, r4, lsl #10
    9d34:	d5040e00 	strle	r0, [r4, #-3584]	; 0xfffff200
    9d38:	0f00000f 	svceq	0x0000000f
    9d3c:	000d4804 	andeq	r4, sp, r4, lsl #16
    9d40:	4c041000 	stcmi	0, cr1, [r4], {-0}
    9d44:	1100000b 	tstne	r0, fp
    9d48:	000f8704 	andeq	r8, pc, r4, lsl #14
    9d4c:	3b041200 	blcc	10e554 <_Min_Heap_Size+0x10dd54>
    9d50:	1300000d 	movwne	r0, #13
    9d54:	000ce404 	andeq	lr, ip, r4, lsl #8
    9d58:	9a041400 	bls	10ed60 <_Min_Heap_Size+0x10e560>
    9d5c:	15000010 	strne	r0, [r0, #-16]
    9d60:	000de504 	andeq	lr, sp, r4, lsl #10
    9d64:	c8041600 	stmdagt	r4, {r9, sl, ip}
    9d68:	1700000f 	strne	r0, [r0, -pc]
    9d6c:	000e3804 	andeq	r3, lr, r4, lsl #16
    9d70:	59041800 	stmdbpl	r4, {fp, ip}
    9d74:	19000010 	stmdbne	r0, {r4}
    9d78:	000c2004 	andeq	r2, ip, r4
    9d7c:	23041a00 	movwcs	r1, #18944	; 0x4a00
    9d80:	1b00000d 	blne	9dbc <_Min_Heap_Size+0x95bc>
    9d84:	000ba804 	andeq	sl, fp, r4, lsl #16
    9d88:	45041c00 	strmi	r1, [r4, #-3072]	; 0xfffff400
    9d8c:	1d00000f 	stcne	0, cr0, [r0, #-60]	; 0xffffffc4
    9d90:	000cf204 	andeq	pc, ip, r4, lsl #4
    9d94:	16041e00 	strne	r1, [r4], -r0, lsl #28
    9d98:	1f00000d 	svcne	0x0000000d
    9d9c:	000c9604 	andeq	r9, ip, r4, lsl #12
    9da0:	c5042000 	strgt	r2, [r4, #-0]
    9da4:	2100000e 	tstcs	r0, lr
    9da8:	000e0a04 	andeq	r0, lr, r4, lsl #20
    9dac:	67042200 	strvs	r2, [r4, -r0, lsl #4]
    9db0:	2300000e 	movwcs	r0, #14
    9db4:	000bdd04 	andeq	sp, fp, r4, lsl #26
    9db8:	4f042400 	svcmi	0x00042400
    9dbc:	2500000f 	strcs	r0, [r0, #-15]
    9dc0:	000cfc04 	andeq	pc, ip, r4, lsl #24
    9dc4:	45042600 	strmi	r2, [r4, #-1536]	; 0xfffffa00
    9dc8:	2700000c 	strcs	r0, [r0, -ip]
    9dcc:	000f3604 	andeq	r3, pc, r4, lsl #12
    9dd0:	1a042800 	bne	113dd8 <_Min_Heap_Size+0x1135d8>
    9dd4:	2900000f 	stmdbcs	r0, {r0, r1, r2, r3}
    9dd8:	000e9b04 	andeq	r9, lr, r4, lsl #22
    9ddc:	e7042a00 	str	r2, [r4, -r0, lsl #20]
    9de0:	2b00000b 	blcs	9e14 <_Min_Heap_Size+0x9614>
    9de4:	000b5e04 	andeq	r5, fp, r4, lsl #28
    9de8:	5a042c00 	bpl	114df0 <_Min_Heap_Size+0x1145f0>
    9dec:	2d00000d 	stccs	0, cr0, [r0, #-52]	; 0xffffffcc
    9df0:	0010a804 	andseq	sl, r0, r4, lsl #16
    9df4:	e9042e00 	stmdb	r4, {r9, sl, fp, sp}
    9df8:	2f000010 	svccs	0x00000010
    9dfc:	000fa004 	andeq	sl, pc, r4
    9e00:	b5043000 	strlt	r3, [r4, #-0]
    9e04:	31000010 	tstcc	r0, r0, lsl r0
    9e08:	000cbc04 	andeq	fp, ip, r4, lsl #24
    9e0c:	93043200 	movwls	r3, #16896	; 0x4200
    9e10:	3300000b 	movwcc	r0, #11
    9e14:	000e8604 	andeq	r8, lr, r4, lsl #12
    9e18:	2d043400 	cfstrscs	mvf3, [r4, #-0]
    9e1c:	3500000e 	strcc	r0, [r0, #-14]
    9e20:	000eb704 	andeq	fp, lr, r4, lsl #14
    9e24:	4b043600 	blmi	11762c <_Min_Heap_Size+0x116e2c>
    9e28:	3700000e 	strcc	r0, [r0, -lr]
    9e2c:	000df304 	andeq	pc, sp, r4, lsl #6
    9e30:	81043800 	tsthi	r4, r0, lsl #16
    9e34:	3900000b 	stmdbcc	r0, {r0, r1, r3}
    9e38:	0010fb04 	andseq	pc, r0, r4, lsl #22
    9e3c:	e4043a00 	str	r3, [r4], #-2560	; 0xfffff600
    9e40:	3b00000e 	blcc	9e80 <_Min_Heap_Size+0x9680>
    9e44:	000c7404 	andeq	r7, ip, r4, lsl #8
    9e48:	f6043c00 			; <UNDEFINED> instruction: 0xf6043c00
    9e4c:	3f00000e 	svccc	0x0000000e
    9e50:	000bb204 	andeq	fp, fp, r4, lsl #4
    9e54:	79044000 	stmdbvc	r4, {lr}
    9e58:	4100000f 	tstmi	r0, pc
    9e5c:	000cae04 	andeq	sl, ip, r4, lsl #28
    9e60:	84044200 	strhi	r4, [r4], #-512	; 0xfffffe00
    9e64:	4300000d 	movwmi	r0, #13
    9e68:	000c0e04 	andeq	r0, ip, r4, lsl #28
    9e6c:	e7044400 	str	r4, [r4, -r0, lsl #8]
    9e70:	4500000f 	strmi	r0, [r0, #-15]
    9e74:	000d7204 	andeq	r7, sp, r4, lsl #4
    9e78:	c0044600 	andgt	r4, r4, r0, lsl #12
    9e7c:	4700000b 	strmi	r0, [r0, -fp]
    9e80:	00100b04 	andseq	r0, r0, r4, lsl #22
    9e84:	29044800 	stmdbcs	r4, {fp, lr}
    9e88:	4900000f 	stmdbmi	r0, {r0, r1, r2, r3}
    9e8c:	00108004 	andseq	r8, r0, r4
    9e90:	d6044a00 	strle	r4, [r4], -r0, lsl #20
    9e94:	4b000010 	blmi	9edc <_Min_Heap_Size+0x96dc>
    9e98:	000dae04 	andeq	sl, sp, r4, lsl #28
    9e9c:	55044c00 	strpl	r4, [r4, #-3072]	; 0xfffff400
    9ea0:	4d00000e 	stcmi	0, cr0, [r0, #-56]	; 0xffffffc8
    9ea4:	000f7004 	andeq	r7, pc, r4
    9ea8:	7d045000 	stcvc	0, cr5, [r4, #-0]
    9eac:	5100000e 	tstpl	r0, lr
    9eb0:	06010500 	streq	r0, [r1], -r0, lsl #10
    9eb4:	0000060f 	andeq	r0, r0, pc, lsl #12
    9eb8:	00218406 	eoreq	r8, r1, r6, lsl #8
    9ebc:	039b0400 	orrseq	r0, fp, #0, 8
    9ec0:	00000029 	andeq	r0, r0, r9, lsr #32
    9ec4:	00007606 	andeq	r7, r0, r6, lsl #12
    9ec8:	182b0500 	stmdane	fp!, {r8, sl}
    9ecc:	0000025b 	andeq	r0, r0, fp, asr r2
    9ed0:	0d080105 	stfeqs	f0, [r8, #-20]	; 0xffffffec
    9ed4:	05000006 	streq	r0, [r0, #-6]
    9ed8:	042a0502 	strteq	r0, [sl], #-1282	; 0xfffffafe
    9edc:	8e060000 	cdphi	0, 0, cr0, cr6, cr0, {0}
    9ee0:	05000007 	streq	r0, [r0, #-7]
    9ee4:	02751939 	rsbseq	r1, r5, #933888	; 0xe4000
    9ee8:	02050000 	andeq	r0, r5, #0
    9eec:	00082807 	andeq	r2, r8, r7, lsl #16
    9ef0:	20100600 	andscs	r0, r0, r0, lsl #12
    9ef4:	4d050000 	stcmi	0, cr0, [r5, #-0]
    9ef8:	00028818 	andeq	r8, r2, r8, lsl r8
    9efc:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    9f00:	0000032d 	andeq	r0, r0, sp, lsr #6
    9f04:	0002ef06 	andeq	lr, r2, r6, lsl #30
    9f08:	194f0500 	stmdbne	pc, {r8, sl}^	; <UNPREDICTABLE>
    9f0c:	0000029b 	muleq	r0, fp, r2
    9f10:	c3070405 	movwgt	r0, #29701	; 0x7405
    9f14:	05000000 	streq	r0, [r0, #-0]
    9f18:	03280508 			; <UNDEFINED> instruction: 0x03280508
    9f1c:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    9f20:	0000be07 	andeq	fp, r0, r7, lsl #28
    9f24:	05040700 	streq	r0, [r4, #-1792]	; 0xfffff900
    9f28:	00746e69 	rsbseq	r6, r4, r9, ror #28
    9f2c:	c8070405 	stmdagt	r7, {r0, r2, sl}
    9f30:	06000000 	streq	r0, [r0], -r0
    9f34:	00000078 	andeq	r0, r0, r8, ror r0
    9f38:	4f131806 	svcmi	0x00131806
    9f3c:	08000002 	stmdaeq	r0, {r1}
    9f40:	000002be 			; <UNDEFINED> instruction: 0x000002be
    9f44:	00079006 	andeq	r9, r7, r6
    9f48:	14240600 	strtne	r0, [r4], #-1536	; 0xfffffa00
    9f4c:	00000269 	andeq	r0, r0, r9, ror #4
    9f50:	00201206 	eoreq	r1, r0, r6, lsl #4
    9f54:	132c0600 			; <UNDEFINED> instruction: 0x132c0600
    9f58:	0000027c 	andeq	r0, r0, ip, ror r2
    9f5c:	0002f106 	andeq	pc, r2, r6, lsl #2
    9f60:	14300600 	ldrtne	r0, [r0], #-1536	; 0xfffffa00
    9f64:	0000028f 	andeq	r0, r0, pc, lsl #5
    9f68:	0002e708 	andeq	lr, r2, r8, lsl #14
    9f6c:	02f30900 	rscseq	r0, r3, #0, 18
    9f70:	040a0000 	streq	r0, [sl], #-0
    9f74:	019b020e 	orrseq	r0, fp, lr, lsl #4
    9f78:	0003e309 	andeq	lr, r3, r9, lsl #6
    9f7c:	211c0b00 	tstcs	ip, r0, lsl #22
    9f80:	9d020000 	stcls	0, cr0, [r2, #-0]
    9f84:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    9f88:	23020000 	movwcs	r0, #8192	; 0x2000
    9f8c:	05a80b00 	streq	r0, [r8, #2816]!	; 0xb00
    9f90:	9e020000 	cdpls	0, 0, cr0, cr2, cr0, {0}
    9f94:	03f81201 	mvnseq	r1, #268435456	; 0x10000000
    9f98:	23020000 	movwcs	r0, #8192	; 0x2000
    9f9c:	20bb0b20 	adcscs	r0, fp, r0, lsr #22
    9fa0:	9f020000 	svcls	0x00020000
    9fa4:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    9fa8:	23030000 	movwcs	r0, #12288	; 0x3000
    9fac:	b20b0180 	andlt	r0, fp, #128, 2
    9fb0:	02000005 	andeq	r0, r0, #5
    9fb4:	f81201a0 			; <UNDEFINED> instruction: 0xf81201a0
    9fb8:	03000003 	movweq	r0, #3
    9fbc:	0b01a023 	bleq	72050 <_Min_Heap_Size+0x71850>
    9fc0:	00001e77 	andeq	r1, r0, r7, ror lr
    9fc4:	1201a102 	andne	sl, r1, #-2147483648	; 0x80000000
    9fc8:	000003f3 	strdeq	r0, [r0], -r3
    9fcc:	02802303 	addeq	r2, r0, #201326592	; 0xc000000
    9fd0:	0005bc0b 	andeq	fp, r5, fp, lsl #24
    9fd4:	01a20200 			; <UNDEFINED> instruction: 0x01a20200
    9fd8:	0003f812 	andeq	pc, r3, r2, lsl r8	; <UNPREDICTABLE>
    9fdc:	a0230300 	eorge	r0, r3, r0, lsl #6
    9fe0:	1df90b02 			; <UNDEFINED> instruction: 0x1df90b02
    9fe4:	a3020000 	movwge	r0, #8192	; 0x2000
    9fe8:	03f31201 	mvnseq	r1, #268435456	; 0x10000000
    9fec:	23030000 	movwcs	r0, #12288	; 0x3000
    9ff0:	c60b0380 	strgt	r0, [fp], -r0, lsl #7
    9ff4:	02000005 	andeq	r0, r0, #5
    9ff8:	f81201a4 			; <UNDEFINED> instruction: 0xf81201a4
    9ffc:	03000003 	movweq	r0, #3
    a000:	0b03a023 	bleq	f2094 <_Min_Heap_Size+0xf1894>
    a004:	00002087 	andeq	r2, r0, r7, lsl #1
    a008:	1201a502 	andne	sl, r1, #8388608	; 0x800000
    a00c:	000003f3 	strdeq	r0, [r0], -r3
    a010:	04802303 	streq	r2, [r0], #771	; 0x303
    a014:	0005d00b 	andeq	sp, r5, fp
    a018:	01a60200 			; <UNDEFINED> instruction: 0x01a60200
    a01c:	00040812 	andeq	r0, r4, r2, lsl r8
    a020:	a0230300 	eorge	r0, r3, r0, lsl #6
    a024:	50490c04 	subpl	r0, r9, r4, lsl #24
    a028:	01a70200 			; <UNDEFINED> instruction: 0x01a70200
    a02c:	00042812 	andeq	r2, r4, r2, lsl r8
    a030:	80230300 	eorhi	r0, r3, r0, lsl #6
    a034:	05da0b06 	ldrbeq	r0, [sl, #2822]	; 0xb06
    a038:	a8020000 	stmdage	r2, {}	; <UNPREDICTABLE>
    a03c:	042d1201 	strteq	r1, [sp], #-513	; 0xfffffdff
    a040:	23030000 	movwcs	r0, #12288	; 0x3000
    a044:	3f0b07f0 	svccc	0x000b07f0
    a048:	02000022 	andeq	r0, r0, #34	; 0x22
    a04c:	f31201a9 	vrhadd.u16	d0, d18, d25
    a050:	03000002 	movweq	r0, #2
    a054:	001c8023 	andseq	r8, ip, r3, lsr #32
    a058:	0002f30d 	andeq	pc, r2, sp, lsl #6
    a05c:	0003f300 	andeq	pc, r3, r0, lsl #6
    a060:	02b70e00 	adcseq	r0, r7, #0, 28
    a064:	00070000 	andeq	r0, r7, r0
    a068:	0003e308 	andeq	lr, r3, r8, lsl #6
    a06c:	02e70d00 	rsceq	r0, r7, #0, 26
    a070:	04080000 	streq	r0, [r8], #-0
    a074:	b70e0000 	strlt	r0, [lr, -r0]
    a078:	17000002 	strne	r0, [r0, -r2]
    a07c:	02e70d00 	rsceq	r0, r7, #0, 26
    a080:	04180000 	ldreq	r0, [r8], #-0
    a084:	b70e0000 	strlt	r0, [lr, -r0]
    a088:	37000002 	strcc	r0, [r0, -r2]
    a08c:	02ca0d00 	sbceq	r0, sl, #0, 26
    a090:	04280000 	strteq	r0, [r8], #-0
    a094:	b70e0000 	strlt	r0, [lr, -r0]
    a098:	ef000002 	svc	0x00000002
    a09c:	04180800 	ldreq	r0, [r8], #-2048	; 0xfffff800
    a0a0:	e70d0000 	str	r0, [sp, -r0]
    a0a4:	3e000002 	cdpcc	0, 0, cr0, cr0, cr2, {0}
    a0a8:	0f000004 	svceq	0x00000004
    a0ac:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    a0b0:	10000283 	andne	r0, r0, r3, lsl #5
    a0b4:	00002121 	andeq	r2, r0, r1, lsr #2
    a0b8:	0401aa02 	streq	sl, [r1], #-2562	; 0xfffff5fe
    a0bc:	000002fd 	strdeq	r0, [r0], -sp
    a0c0:	bd028c11 	stclt	12, cr8, [r2, #-68]	; 0xffffffbc
    a0c4:	05a70901 	streq	r0, [r7, #2305]!	; 0x901
    a0c8:	1c0b0000 	stcne	0, cr0, [fp], {-0}
    a0cc:	02000001 	andeq	r0, r0, #1
    a0d0:	f81201bf 			; <UNDEFINED> instruction: 0xf81201bf
    a0d4:	02000002 	andeq	r0, r0, #2
    a0d8:	b90b0023 	stmdblt	fp, {r0, r1, r5}
    a0dc:	02000003 	andeq	r0, r0, #3
    a0e0:	f31201c0 	vrhadd.u16	q0, q9, q0
    a0e4:	02000002 	andeq	r0, r0, #2
    a0e8:	7e0b0423 	cdpvc	4, 0, cr0, cr11, cr3, {1}
    a0ec:	02000003 	andeq	r0, r0, #3
    a0f0:	f31201c1 	vrhadd.u16	q0, q9, <illegal reg q0.5>
    a0f4:	02000002 	andeq	r0, r0, #2
    a0f8:	d20b0823 	andle	r0, fp, #2293760	; 0x230000
    a0fc:	02000003 	andeq	r0, r0, #3
    a100:	f31201c2 	vrhadd.u16	q0, q9, q1
    a104:	02000002 	andeq	r0, r0, #2
    a108:	530c0c23 	movwpl	r0, #52259	; 0xcc23
    a10c:	02005243 	andeq	r5, r0, #805306372	; 0x30000004
    a110:	f31201c3 	vrhadd.u16	q0, q9, <illegal reg q1.5>
    a114:	02000002 	andeq	r0, r0, #2
    a118:	430c1023 	movwmi	r1, #49187	; 0xc023
    a11c:	02005243 	andeq	r5, r0, #805306372	; 0x30000004
    a120:	f31201c4 	vrhadd.u16	q0, q9, q2
    a124:	02000002 	andeq	r0, r0, #2
    a128:	530c1423 	movwpl	r1, #50211	; 0xc423
    a12c:	02005048 	andeq	r5, r0, #72	; 0x48
    a130:	b71201c5 	ldrlt	r0, [r2, -r5, asr #3]
    a134:	02000005 	andeq	r0, r0, #5
    a138:	1b0b1823 	blne	2d01cc <_Min_Heap_Size+0x2cf9cc>
    a13c:	02000006 	andeq	r0, r0, #6
    a140:	f31201c6 	vrhadd.u16	q0, q9, q3
    a144:	02000002 	andeq	r0, r0, #2
    a148:	d80b2423 	stmdale	fp, {r0, r1, r5, sl, sp}
    a14c:	02000004 	andeq	r0, r0, #4
    a150:	f31201c7 	vrhadd.u16	q0, q9, <illegal reg q3.5>
    a154:	02000002 	andeq	r0, r0, #2
    a158:	5b0b2823 	blpl	2d41ec <_Min_Heap_Size+0x2d39ec>
    a15c:	02000009 	andeq	r0, r0, #9
    a160:	f31201c8 	vrhadd.u16	q0, q9, q4
    a164:	02000002 	andeq	r0, r0, #2
    a168:	d80b2c23 	stmdale	fp, {r0, r1, r5, sl, fp, sp}
    a16c:	02000003 	andeq	r0, r0, #3
    a170:	f31201c9 	vrhadd.u16	q0, q9, <illegal reg q4.5>
    a174:	02000002 	andeq	r0, r0, #2
    a178:	f60b3023 			; <UNDEFINED> instruction: 0xf60b3023
    a17c:	02000003 	andeq	r0, r0, #3
    a180:	f31201ca 	vrhadd.u16	q0, q9, q5
    a184:	02000002 	andeq	r0, r0, #2
    a188:	ce0b3423 	cdpgt	4, 0, cr3, cr11, cr3, {1}
    a18c:	02000002 	andeq	r0, r0, #2
    a190:	f31201cb 	vrhadd.u16	q0, q9, <illegal reg q5.5>
    a194:	02000002 	andeq	r0, r0, #2
    a198:	080b3823 	stmdaeq	fp, {r0, r1, r5, fp, ip, sp}
    a19c:	02000008 	andeq	r0, r0, #8
    a1a0:	f31201cc 	vrhadd.u16	q0, q9, q6
    a1a4:	02000002 	andeq	r0, r0, #2
    a1a8:	500c3c23 	andpl	r3, ip, r3, lsr #24
    a1ac:	02005246 	andeq	r5, r0, #1610612740	; 0x60000004
    a1b0:	d11201cd 	tstle	r2, sp, asr #3
    a1b4:	02000005 	andeq	r0, r0, #5
    a1b8:	440c4023 	strmi	r4, [ip], #-35	; 0xffffffdd
    a1bc:	02005246 	andeq	r5, r0, #1610612740	; 0x60000004
    a1c0:	f81201ce 			; <UNDEFINED> instruction: 0xf81201ce
    a1c4:	02000002 	andeq	r0, r0, #2
    a1c8:	410c4823 	tstmi	ip, r3, lsr #16
    a1cc:	02005244 	andeq	r5, r0, #68, 4	; 0x40000004
    a1d0:	f81201cf 			; <UNDEFINED> instruction: 0xf81201cf
    a1d4:	02000002 	andeq	r0, r0, #2
    a1d8:	250b4c23 	strcs	r4, [fp, #-3107]	; 0xfffff3dd
    a1dc:	02000004 	andeq	r0, r0, #4
    a1e0:	eb1201d0 	bl	48a928 <_Min_Heap_Size+0x48a128>
    a1e4:	02000005 	andeq	r0, r0, #5
    a1e8:	770b5023 	strvc	r5, [fp, -r3, lsr #32]
    a1ec:	02000001 	andeq	r0, r0, #1
    a1f0:	051201d1 	ldreq	r0, [r2, #-465]	; 0xfffffe2f
    a1f4:	02000006 	andeq	r0, r0, #6
    a1f8:	a80b6023 	stmdage	fp, {r0, r1, r5, sp, lr}
    a1fc:	02000005 	andeq	r0, r0, #5
    a200:	0a1201d2 	beq	48a950 <_Min_Heap_Size+0x48a150>
    a204:	02000006 	andeq	r0, r0, #6
    a208:	a20b7423 	andge	r7, fp, #587202560	; 0x23000000
    a20c:	02000005 	andeq	r0, r0, #5
    a210:	f31201d3 	vbsl	q0, q9, <illegal reg q1.5>
    a214:	03000002 	movweq	r0, #2
    a218:	00018823 	andeq	r8, r1, r3, lsr #16
    a21c:	0002ca0d 	andeq	ip, r2, sp, lsl #20
    a220:	0005b700 	andeq	fp, r5, r0, lsl #14
    a224:	02b70e00 	adcseq	r0, r7, #0, 28
    a228:	000b0000 	andeq	r0, fp, r0
    a22c:	0005a708 	andeq	sl, r5, r8, lsl #14
    a230:	02f80d00 	rscseq	r0, r8, #0, 26
    a234:	05cc0000 	strbeq	r0, [ip]
    a238:	b70e0000 	strlt	r0, [lr, -r0]
    a23c:	01000002 	tsteq	r0, r2
    a240:	05bc0900 	ldreq	r0, [ip, #2304]!	; 0x900
    a244:	cc080000 	stcgt	0, cr0, [r8], {-0}
    a248:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    a24c:	000002f8 	strdeq	r0, [r0], -r8
    a250:	000005e6 	andeq	r0, r0, r6, ror #11
    a254:	0002b70e 	andeq	fp, r2, lr, lsl #14
    a258:	09000300 	stmdbeq	r0, {r8, r9}
    a25c:	000005d6 	ldrdeq	r0, [r0], -r6
    a260:	0005e608 	andeq	lr, r5, r8, lsl #12
    a264:	02f80d00 	rscseq	r0, r8, #0, 26
    a268:	06000000 	streq	r0, [r0], -r0
    a26c:	b70e0000 	strlt	r0, [lr, -r0]
    a270:	04000002 	streq	r0, [r0], #-2
    a274:	05f00900 	ldrbeq	r0, [r0, #2304]!	; 0x900
    a278:	00080000 	andeq	r0, r8, r0
    a27c:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    a280:	000002e7 	andeq	r0, r0, r7, ror #5
    a284:	0000061a 	andeq	r0, r0, sl, lsl r6
    a288:	0002b70e 	andeq	fp, r2, lr, lsl #14
    a28c:	10000400 	andne	r0, r0, r0, lsl #8
    a290:	00000318 	andeq	r0, r0, r8, lsl r3
    a294:	0301d402 	movweq	sp, #5122	; 0x1402
    a298:	0000044b 	andeq	r0, r0, fp, asr #8
    a29c:	fc021011 	stc2	0, cr1, [r2], {17}
    a2a0:	06720902 	ldrbteq	r0, [r2], -r2, lsl #18
    a2a4:	0e0b0000 	cdpeq	0, 0, cr0, cr11, cr0, {0}
    a2a8:	02000022 	andeq	r0, r0, #34	; 0x22
    a2ac:	f31202fe 	vqsub.u16	q0, q9, q15
    a2b0:	02000002 	andeq	r0, r0, #2
    a2b4:	7c0b0023 	stcvc	0, cr0, [fp], {35}	; 0x23
    a2b8:	02000020 	andeq	r0, r0, #32
    a2bc:	f31202ff 	vqsub.u16	q0, q9, <illegal reg q15.5>
    a2c0:	02000002 	andeq	r0, r0, #2
    a2c4:	560c0423 	strpl	r0, [ip], -r3, lsr #8
    a2c8:	02004c41 	andeq	r4, r0, #16640	; 0x4100
    a2cc:	f3120300 	vcgt.u16	d0, d2, d0
    a2d0:	02000002 	andeq	r0, r0, #2
    a2d4:	df0b0823 	svcle	0x000b0823
    a2d8:	0200001f 	andeq	r0, r0, #31
    a2dc:	f8120301 			; <UNDEFINED> instruction: 0xf8120301
    a2e0:	02000002 	andeq	r0, r0, #2
    a2e4:	10000c23 	andne	r0, r0, r3, lsr #24
    a2e8:	00001f8a 	andeq	r1, r0, sl, lsl #31
    a2ec:	03030202 	movweq	r0, #12802	; 0x3202
    a2f0:	00000627 	andeq	r0, r0, r7, lsr #12
    a2f4:	bd022c11 	stclt	12, cr2, [r2, #-68]	; 0xffffffbc
    a2f8:	073a0904 	ldreq	r0, [sl, -r4, lsl #18]!
    a2fc:	b90b0000 	stmdblt	fp, {}	; <UNPREDICTABLE>
    a300:	02000021 	andeq	r0, r0, #33	; 0x21
    a304:	f81204bf 			; <UNDEFINED> instruction: 0xf81204bf
    a308:	02000002 	andeq	r0, r0, #2
    a30c:	0e0b0023 	cdpeq	0, 0, cr0, cr11, cr3, {1}
    a310:	02000022 	andeq	r0, r0, #34	; 0x22
    a314:	f31204c0 	vshl.u16	q0, q0, q9
    a318:	02000002 	andeq	r0, r0, #2
    a31c:	520c0423 	andpl	r0, ip, #587202560	; 0x23000000
    a320:	0200524e 	andeq	r5, r0, #-536870908	; 0xe0000004
    a324:	f31204c1 	vshl.u16	q0, <illegal reg q0.5>, q9
    a328:	02000002 	andeq	r0, r0, #2
    a32c:	6e0b0823 	cdpvs	8, 0, cr0, cr11, cr3, {1}
    a330:	02000021 	andeq	r0, r0, #33	; 0x21
    a334:	f31204c2 	vshl.u16	q0, q1, q9
    a338:	02000002 	andeq	r0, r0, #2
    a33c:	980b0c23 	stmdals	fp, {r0, r1, r5, sl, fp}
    a340:	02000021 	andeq	r0, r0, #33	; 0x21
    a344:	f31204c3 	vshl.u16	q0, <illegal reg q1.5>, q9
    a348:	02000002 	andeq	r0, r0, #2
    a34c:	2a0b1023 	bcs	2ce3e0 <_Min_Heap_Size+0x2cdbe0>
    a350:	0200001f 	andeq	r0, r0, #31
    a354:	f31204c4 	vshl.u16	q0, q2, q9
    a358:	02000002 	andeq	r0, r0, #2
    a35c:	d70b1423 	strle	r1, [fp, -r3, lsr #8]
    a360:	0200001e 	andeq	r0, r0, #30
    a364:	f31204c5 	vshl.u16	q0, <illegal reg q2.5>, q9
    a368:	02000002 	andeq	r0, r0, #2
    a36c:	320b1823 	andcc	r1, fp, #2293760	; 0x230000
    a370:	0200001f 	andeq	r0, r0, #31
    a374:	f31204c6 	vshl.u16	q0, q3, q9
    a378:	02000002 	andeq	r0, r0, #2
    a37c:	5f0b1c23 	svcpl	0x000b1c23
    a380:	0200001f 	andeq	r0, r0, #31
    a384:	f31204c7 	vshl.u16	q0, <illegal reg q3.5>, q9
    a388:	02000002 	andeq	r0, r0, #2
    a38c:	3a0b2023 	bcc	2d2420 <_Min_Heap_Size+0x2d1c20>
    a390:	0200001f 	andeq	r0, r0, #31
    a394:	f31204c8 	vshl.u16	q0, q4, q9
    a398:	02000002 	andeq	r0, r0, #2
    a39c:	6f0b2423 	svcvs	0x000b2423
    a3a0:	0200001e 	andeq	r0, r0, #30
    a3a4:	f31204c9 	vshl.u16	q0, <illegal reg q4.5>, q9
    a3a8:	02000002 	andeq	r0, r0, #2
    a3ac:	10002823 	andne	r2, r0, r3, lsr #16
    a3b0:	0000227a 	andeq	r2, r0, sl, ror r2
    a3b4:	0304ca02 	movweq	ip, #18946	; 0x4a02
    a3b8:	0000067f 	andeq	r0, r0, pc, ror r6
    a3bc:	5b010702 	blpl	4bfcc <_Min_Heap_Size+0x4b7cc>
    a3c0:	07000002 	streq	r0, [r0, -r2]
    a3c4:	076201b9 			; <UNDEFINED> instruction: 0x076201b9
    a3c8:	30040000 	andcc	r0, r4, r0
    a3cc:	00000001 	andeq	r0, r0, r1
    a3d0:	54455312 	strbpl	r5, [r5], #-786	; 0xfffffcee
    a3d4:	05000100 	streq	r0, [r0, #-256]	; 0xffffff00
    a3d8:	07580408 	ldrbeq	r0, [r8, -r8, lsl #8]
    a3dc:	10130000 	andsne	r0, r3, r0
    a3e0:	18092e08 	stmdane	r9, {r3, r9, sl, fp, sp}
    a3e4:	14000008 	strne	r0, [r0], #-8
    a3e8:	00002207 	andeq	r2, r0, r7, lsl #4
    a3ec:	be1a3008 	cdplt	0, 1, cr3, cr10, cr8, {0}
    a3f0:	02000002 	andeq	r0, r0, #2
    a3f4:	db140023 	blle	50a488 <_Min_Heap_Size+0x509c88>
    a3f8:	0800003a 	stmdaeq	r0, {r1, r3, r4, r5}
    a3fc:	02be1a32 	adcseq	r1, lr, #204800	; 0x32000
    a400:	23020000 	movwcs	r0, #8192	; 0x2000
    a404:	02c21401 	sbceq	r1, r2, #16777216	; 0x1000000
    a408:	34080000 	strcc	r0, [r8], #-0
    a40c:	0002e71a 	andeq	lr, r2, sl, lsl r7
    a410:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a414:	004cac14 	subeq	sl, ip, r4, lsl ip
    a418:	1a350800 	bne	d4c420 <_Min_Heap_Size+0xd4bc20>
    a41c:	000002be 			; <UNDEFINED> instruction: 0x000002be
    a420:	14082302 	strne	r2, [r8], #-770	; 0xfffffcfe
    a424:	0000210b 	andeq	r2, r0, fp, lsl #2
    a428:	be1a3708 	cdplt	7, 1, cr3, cr10, cr8, {0}
    a42c:	02000002 	andeq	r0, r0, #2
    a430:	fe140923 	vselvs.f16	s0, s8, s7
    a434:	0800001d 	stmdaeq	r0, {r0, r2, r3, r4}
    a438:	02be1a39 	adcseq	r1, lr, #233472	; 0x39000
    a43c:	23020000 	movwcs	r0, #8192	; 0x2000
    a440:	1ff6140a 	svcne	0x00f6140a
    a444:	3b080000 	blcc	20a44c <_Min_Heap_Size+0x209c4c>
    a448:	0002be1a 	andeq	fp, r2, sl, lsl lr
    a44c:	0b230200 	bleq	8cac54 <_Min_Heap_Size+0x8ca454>
    a450:	0020f914 	eoreq	pc, r0, r4, lsl r9	; <UNPREDICTABLE>
    a454:	1a3d0800 	bne	f4c45c <_Min_Heap_Size+0xf4bc5c>
    a458:	000002be 			; <UNDEFINED> instruction: 0x000002be
    a45c:	140c2302 	strne	r2, [ip], #-770	; 0xfffffcfe
    a460:	00002244 	andeq	r2, r0, r4, asr #4
    a464:	be1a3f08 	cdplt	15, 1, cr3, cr10, cr8, {0}
    a468:	02000002 	andeq	r0, r0, #2
    a46c:	7e140d23 	cdpvc	13, 1, cr0, cr4, cr3, {1}
    a470:	0800001f 	stmdaeq	r0, {r0, r1, r2, r3, r4}
    a474:	02be1a41 	adcseq	r1, lr, #266240	; 0x41000
    a478:	23020000 	movwcs	r0, #8192	; 0x2000
    a47c:	1e7c140e 	cdpne	4, 7, cr1, cr12, cr14, {0}
    a480:	43080000 	movwmi	r0, #32768	; 0x8000
    a484:	0002be1a 	andeq	fp, r2, sl, lsl lr
    a488:	0f230200 	svceq	0x00230200
    a48c:	1f670600 	svcne	0x00670600
    a490:	45080000 	strmi	r0, [r8, #-0]
    a494:	00076902 	andeq	r6, r7, r2, lsl #18
    a498:	e4011500 	str	r1, [r1], #-1280	; 0xfffffb00
    a49c:	01000020 	tsteq	r0, r0, lsr #32
    a4a0:	010d01e9 	smlatteq	sp, r9, r1, r0
	...
    a4ac:	01007d02 	tsteq	r0, r2, lsl #26
    a4b0:	1e970116 	mrcne	1, 4, r0, cr7, cr6, {0}
    a4b4:	e0010000 	and	r0, r1, r0
    a4b8:	00010601 	andeq	r0, r1, r1, lsl #12
    a4bc:	00000000 	andeq	r0, r0, r0
    a4c0:	a7000000 	strge	r0, [r0, -r0]
    a4c4:	0100006d 	tsteq	r0, sp, rrx
    a4c8:	00000861 	andeq	r0, r0, r1, ror #16
    a4cc:	00000017 	andeq	r0, r0, r7, lsl r0
    a4d0:	00082400 	andeq	r2, r8, r0, lsl #8
    a4d4:	01160000 	tsteq	r6, r0
    a4d8:	0000219d 	muleq	r0, sp, r1
    a4dc:	0601ce01 	streq	ip, [r1], -r1, lsl #28
    a4e0:	00000001 	andeq	r0, r0, r1
    a4e4:	00000000 	andeq	r0, r0, r0
    a4e8:	006dc700 	rsbeq	ip, sp, r0, lsl #14
    a4ec:	08ad0100 	stmiaeq	sp!, {r8}
    a4f0:	b5180000 	ldrlt	r0, [r8, #-0]
    a4f4:	01000009 	tsteq	r0, r9
    a4f8:	e72b01ce 	str	r0, [fp, -lr, asr #3]!
    a4fc:	ef000002 	svc	0x00000002
    a500:	e700006d 	str	r0, [r0, -sp, rrx]
    a504:	1900006d 	stmdbne	r0, {r0, r2, r3, r5, r6}
    a508:	00000000 	andeq	r0, r0, r0
    a50c:	00001418 	andeq	r1, r0, r8, lsl r4
    a510:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    a514:	00459803 	subeq	r9, r5, r3, lsl #16
    a518:	51011a08 	tstpl	r1, r8, lsl #20
    a51c:	01d10a03 	bicseq	r0, r1, r3, lsl #20
    a520:	011b0000 	tsteq	fp, r0
    a524:	00002035 	andeq	r2, r0, r5, lsr r0
    a528:	0a01bd01 	beq	79934 <_Min_Heap_Size+0x79134>
    a52c:	0002e701 	andeq	lr, r2, r1, lsl #14
	...
    a538:	006e2300 	rsbeq	r2, lr, r0, lsl #6
    a53c:	09210100 	stmdbeq	r1!, {r8}
    a540:	67180000 	ldrvs	r0, [r8, -r0]
    a544:	01000010 	tsteq	r0, r0, lsl r0
    a548:	432701bd 			; <UNDEFINED> instruction: 0x432701bd
    a54c:	4b000002 	blmi	a55c <_Min_Heap_Size+0x9d5c>
    a550:	4300006e 	movwmi	r0, #110	; 0x6e
    a554:	1c00006e 	stcne	0, cr0, [r0], {110}	; 0x6e
    a558:	000012fb 	strdeq	r1, [r0], -fp
    a55c:	00000000 	andeq	r0, r0, r0
    a560:	0004f801 	andeq	pc, r4, r1, lsl #16
    a564:	01c30100 	biceq	r0, r3, r0, lsl #2
    a568:	0009060a 	andeq	r0, r9, sl, lsl #12
    a56c:	130e1d00 	movwne	r1, #60672	; 0xed00
    a570:	6e890000 	cdpvs	0, 8, cr0, cr9, cr0, {0}
    a574:	6e850000 	cdpvs	0, 8, cr0, cr5, cr0, {0}
    a578:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    a57c:	00000000 	andeq	r0, r0, r0
    a580:	00001418 	andeq	r1, r0, r8, lsl r4
    a584:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    a588:	00459803 	subeq	r9, r5, r3, lsl #16
    a58c:	51011a08 	tstpl	r1, r8, lsl #20
    a590:	01c00a03 	biceq	r0, r0, r3, lsl #20
    a594:	01160000 	tsteq	r6, r0
    a598:	00001eae 	andeq	r1, r0, lr, lsr #29
    a59c:	0601ac01 	streq	sl, [r1], -r1, lsl #24
    a5a0:	00000001 	andeq	r0, r0, r1
    a5a4:	00000000 	andeq	r0, r0, r0
    a5a8:	006ea700 	rsbeq	sl, lr, r0, lsl #14
    a5ac:	09950100 	ldmibeq	r5, {r8}
    a5b0:	67180000 	ldrvs	r0, [r8, -r0]
    a5b4:	01000010 	tsteq	r0, r0, lsl r0
    a5b8:	432901ac 			; <UNDEFINED> instruction: 0x432901ac
    a5bc:	cf000002 	svcgt	0x00000002
    a5c0:	c700006e 	strgt	r0, [r0, -lr, rrx]
    a5c4:	1e00006e 	cdpne	0, 0, cr0, cr0, cr14, {3}
    a5c8:	0000131c 	andeq	r1, r0, ip, lsl r3
    a5cc:	00000000 	andeq	r0, r0, r0
    a5d0:	00000001 	andeq	r0, r0, r1
    a5d4:	00000000 	andeq	r0, r0, r0
    a5d8:	01b20100 			; <UNDEFINED> instruction: 0x01b20100
    a5dc:	00097a03 	andeq	r7, r9, r3, lsl #20
    a5e0:	132b1d00 			; <UNDEFINED> instruction: 0x132b1d00
    a5e4:	6f0b0000 	svcvs	0x000b0000
    a5e8:	6f090000 	svcvs	0x00090000
    a5ec:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    a5f0:	00000000 	andeq	r0, r0, r0
    a5f4:	00001418 	andeq	r1, r0, r8, lsl r4
    a5f8:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    a5fc:	00459803 	subeq	r9, r5, r3, lsl #16
    a600:	51011a08 	tstpl	r1, r8, lsl #20
    a604:	01af0a03 			; <UNDEFINED> instruction: 0x01af0a03
    a608:	011b0000 	tsteq	fp, r0
    a60c:	00001fa9 	andeq	r1, r0, r9, lsr #31
    a610:	0a019c01 	beq	7161c <_Min_Heap_Size+0x70e1c>
    a614:	0002e701 	andeq	lr, r2, r1, lsl #14
	...
    a620:	006f1e00 	rsbeq	r1, pc, r0, lsl #28
    a624:	0a090100 	beq	24aa2c <_Min_Heap_Size+0x24a22c>
    a628:	67180000 	ldrvs	r0, [r8, -r0]
    a62c:	01000010 	tsteq	r0, r0, lsl r0
    a630:	432b019c 			; <UNDEFINED> instruction: 0x432b019c
    a634:	46000002 	strmi	r0, [r0], -r2
    a638:	3e00006f 	cdpcc	0, 0, cr0, cr0, cr15, {3}
    a63c:	1c00006f 	stcne	0, cr0, [r0], {111}	; 0x6f
    a640:	00001356 	andeq	r1, r0, r6, asr r3
    a644:	00000000 	andeq	r0, r0, r0
    a648:	0004e001 	andeq	lr, r4, r1
    a64c:	01a20100 			; <UNDEFINED> instruction: 0x01a20100
    a650:	0009ee0a 	andeq	lr, r9, sl, lsl #28
    a654:	13691d00 	cmnne	r9, #0, 26
    a658:	6f840000 	svcvs	0x00840000
    a65c:	6f800000 	svcvs	0x00800000
    a660:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    a664:	00000000 	andeq	r0, r0, r0
    a668:	00001418 	andeq	r1, r0, r8, lsl r4
    a66c:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    a670:	00459803 	subeq	r9, r5, r3, lsl #16
    a674:	51011a08 	tstpl	r1, r8, lsl #20
    a678:	019f0a03 	orrseq	r0, pc, r3, lsl #20
    a67c:	01160000 	tsteq	r6, r0
    a680:	00002263 	andeq	r2, r0, r3, ror #4
    a684:	06018a01 	streq	r8, [r1], -r1, lsl #20
    a688:	00000001 	andeq	r0, r0, r1
    a68c:	00000000 	andeq	r0, r0, r0
    a690:	006fa200 	rsbeq	sl, pc, r0, lsl #4
    a694:	0a7d0100 	beq	1f4aa9c <_Min_Heap_Size+0x1f4a29c>
    a698:	67180000 	ldrvs	r0, [r8, -r0]
    a69c:	01000010 	tsteq	r0, r0, lsl r0
    a6a0:	4327018a 			; <UNDEFINED> instruction: 0x4327018a
    a6a4:	ca000002 	bgt	a6b4 <_Min_Heap_Size+0x9eb4>
    a6a8:	c200006f 	andgt	r0, r0, #111	; 0x6f
    a6ac:	1e00006f 	cdpne	0, 0, cr0, cr0, cr15, {3}
    a6b0:	00001339 	andeq	r1, r0, r9, lsr r3
    a6b4:	00000000 	andeq	r0, r0, r0
    a6b8:	00000001 	andeq	r0, r0, r1
    a6bc:	00000000 	andeq	r0, r0, r0
    a6c0:	01900100 	orrseq	r0, r0, r0, lsl #2
    a6c4:	000a6203 	andeq	r6, sl, r3, lsl #4
    a6c8:	13481d00 	movtne	r1, #36096	; 0x8d00
    a6cc:	70060000 	andvc	r0, r6, r0
    a6d0:	70040000 	andvc	r0, r4, r0
    a6d4:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    a6d8:	00000000 	andeq	r0, r0, r0
    a6dc:	00001418 	andeq	r1, r0, r8, lsl r4
    a6e0:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    a6e4:	00459803 	subeq	r9, r5, r3, lsl #16
    a6e8:	51011a08 	tstpl	r1, r8, lsl #20
    a6ec:	018d0a03 	orreq	r0, sp, r3, lsl #20
    a6f0:	01160000 	tsteq	r6, r0
    a6f4:	00001eeb 	andeq	r1, r0, fp, ror #29
    a6f8:	06017b01 	streq	r7, [r1], -r1, lsl #22
    a6fc:	00000001 	andeq	r0, r0, r1
    a700:	00000000 	andeq	r0, r0, r0
    a704:	00701900 	rsbseq	r1, r0, r0, lsl #18
    a708:	0ba40100 	bleq	fe90ab10 <_estack+0xde901170>
    a70c:	67180000 	ldrvs	r0, [r8, -r0]
    a710:	01000010 	tsteq	r0, r0, lsl r0
    a714:	4325017b 			; <UNDEFINED> instruction: 0x4325017b
    a718:	41000002 	tstmi	r0, r2
    a71c:	39000070 	stmdbcc	r0, {r4, r5, r6}
    a720:	18000070 	stmdane	r0, {r4, r5, r6}
    a724:	00001e89 	andeq	r1, r0, r9, lsl #29
    a728:	34017b01 	strcc	r7, [r1], #-2817	; 0xfffff4ff
    a72c:	000002e7 	andeq	r0, r0, r7, ror #5
    a730:	00007085 	andeq	r7, r0, r5, lsl #1
    a734:	0000707b 	andeq	r7, r0, fp, ror r0
    a738:	001fe518 	andseq	lr, pc, r8, lsl r5	; <UNPREDICTABLE>
    a73c:	017b0100 	cmneq	fp, r0, lsl #2
    a740:	000ba44d 	andeq	sl, fp, sp, asr #8
    a744:	0070cf00 	rsbseq	ip, r0, r0, lsl #30
    a748:	0070c700 	rsbseq	ip, r0, r0, lsl #14
    a74c:	20611800 	rsbcs	r1, r1, r0, lsl #16
    a750:	7b010000 	blvc	4a758 <_Min_Heap_Size+0x49f58>
    a754:	0ba46901 	bleq	fe924b60 <_estack+0xde91b1c0>
    a758:	71070000 	mrsvc	r0, (UNDEF: 7)
    a75c:	71030000 	mrsvc	r0, (UNDEF: 3)
    a760:	b01c0000 	andslt	r0, ip, r0
    a764:	00000012 	andeq	r0, r0, r2, lsl r0
    a768:	01000000 	mrseq	r0, (UNDEF: 0)
    a76c:	000004b0 			; <UNDEFINED> instruction: 0x000004b0
    a770:	03018001 	movweq	r8, #4097	; 0x1001
    a774:	00000b11 	andeq	r0, r0, r1, lsl fp
    a778:	0012c31d 	andseq	ip, r2, sp, lsl r3
    a77c:	00712900 	rsbseq	r2, r1, r0, lsl #18
    a780:	00712500 	rsbseq	r2, r1, r0, lsl #10
    a784:	e31c0000 	tst	ip, #0
    a788:	00000011 	andeq	r0, r0, r1, lsl r0
    a78c:	01000000 	mrseq	r0, (UNDEF: 0)
    a790:	000004c8 	andeq	r0, r0, r8, asr #9
    a794:	03018001 	movweq	r8, #4097	; 0x1001
    a798:	00000b89 	andeq	r0, r0, r9, lsl #23
    a79c:	0012191d 	andseq	r1, r2, sp, lsl r9
    a7a0:	00714b00 	rsbseq	r4, r1, r0, lsl #22
    a7a4:	00714700 	rsbseq	r4, r1, r0, lsl #14
    a7a8:	120c1d00 	andne	r1, ip, #0, 26
    a7ac:	716d0000 	cmnvc	sp, r0
    a7b0:	71690000 	cmnvc	r9, r0
    a7b4:	ff1d0000 			; <UNDEFINED> instruction: 0xff1d0000
    a7b8:	91000011 	tstls	r0, r1, lsl r0
    a7bc:	8b000071 	blhi	a988 <_Min_Heap_Size+0xa188>
    a7c0:	1d000071 	stcne	0, cr0, [r0, #-452]	; 0xfffffe3c
    a7c4:	000011f2 	strdeq	r1, [r0], -r2
    a7c8:	000071c1 	andeq	r7, r0, r1, asr #3
    a7cc:	000071bd 			; <UNDEFINED> instruction: 0x000071bd
    a7d0:	0004c81f 	andeq	ip, r4, pc, lsl r8
    a7d4:	12262000 	eorne	r2, r6, #0
    a7d8:	71e90000 	mvnvc	r0, r0
    a7dc:	71df0000 	bicsvc	r0, pc, r0
    a7e0:	33200000 	nopcc	{0}	; <UNPREDICTABLE>
    a7e4:	37000012 	smladcc	r0, r2, r0, r0
    a7e8:	31000072 	tstcc	r0, r2, ror r0
    a7ec:	20000072 	andcs	r0, r0, r2, ror r0
    a7f0:	00001240 	andeq	r1, r0, r0, asr #4
    a7f4:	0000727e 	andeq	r7, r0, lr, ror r2
    a7f8:	0000727c 	andeq	r7, r0, ip, ror r2
    a7fc:	00190000 	andseq	r0, r9, r0
    a800:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a804:	1a000014 	bne	a85c <_Min_Heap_Size+0xa05c>
    a808:	03055001 	movweq	r5, #20481	; 0x5001
    a80c:	08004598 	stmdaeq	r0, {r3, r4, r7, r8, sl, lr}
    a810:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a814:	00017e0a 	andeq	r7, r1, sl, lsl #28
    a818:	e7042100 	str	r2, [r4, -r0, lsl #2]
    a81c:	09000002 	stmdbeq	r0, {r1}
    a820:	00000ba4 	andeq	r0, r0, r4, lsr #23
    a824:	21e20122 	mvncs	r0, r2, lsr #2
    a828:	60010000 	andvs	r0, r1, r0
    a82c:	e7010a01 	str	r0, [r1, -r1, lsl #20]
    a830:	00000002 	andeq	r0, r0, r2
    a834:	00000000 	andeq	r0, r0, r0
    a838:	02000000 	andeq	r0, r0, #0
    a83c:	e501007d 	str	r0, [r1, #-125]	; 0xffffff83
    a840:	2300000b 	movwcs	r0, #11
    a844:	000013b1 			; <UNDEFINED> instruction: 0x000013b1
    a848:	00000000 	andeq	r0, r0, r0
    a84c:	00000002 	andeq	r0, r0, r2
    a850:	00000000 	andeq	r0, r0, r0
    a854:	01630100 	cmneq	r3, r0, lsl #2
    a858:	0115000a 	tsteq	r5, sl
    a85c:	00001e59 	andeq	r1, r0, r9, asr lr
    a860:	06015601 	streq	r5, [r1], -r1, lsl #12
    a864:	00000001 	andeq	r0, r0, r1
    a868:	00000000 	andeq	r0, r0, r0
    a86c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    a870:	be011601 	cfmadd32lt	mvax0, mvfx1, mvfx1, mvfx1
    a874:	01000021 	tsteq	r0, r1, lsr #32
    a878:	0106012a 	tsteq	r6, sl, lsr #2
	...
    a884:	00007291 	muleq	r0, r1, r2
    a888:	000d5601 	andeq	r5, sp, r1, lsl #12
    a88c:	1f421800 	svcne	0x00421800
    a890:	2a010000 	bcs	4a898 <_Min_Heap_Size+0x4a098>
    a894:	0d563301 	ldcleq	3, cr3, [r6, #-4]
    a898:	72b90000 	adcsvc	r0, r9, #0
    a89c:	72b10000 	adcsvc	r0, r1, #0
    a8a0:	00240000 	eoreq	r0, r4, r0
    a8a4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a8a8:	4b000014 	blmi	a900 <_Min_Heap_Size+0xa100>
    a8ac:	1a00000c 	bne	a8e4 <_Min_Heap_Size+0xa0e4>
    a8b0:	03055001 	movweq	r5, #20481	; 0x5001
    a8b4:	08004598 	stmdaeq	r0, {r3, r4, r7, r8, sl, lr}
    a8b8:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a8bc:	00012d0a 	andeq	r2, r1, sl, lsl #26
    a8c0:	00000024 	andeq	r0, r0, r4, lsr #32
    a8c4:	00141800 	andseq	r1, r4, r0, lsl #16
    a8c8:	000c6900 	andeq	r6, ip, r0, lsl #18
    a8cc:	50011a00 	andpl	r1, r1, r0, lsl #20
    a8d0:	45980305 	ldrmi	r0, [r8, #773]	; 0x305
    a8d4:	011a0800 	tsteq	sl, r0, lsl #16
    a8d8:	2e0a0351 	mcrcs	3, 0, r0, cr10, cr1, {2}
    a8dc:	00240001 	eoreq	r0, r4, r1
    a8e0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a8e4:	87000014 	smladhi	r0, r4, r0, r0
    a8e8:	1a00000c 	bne	a920 <_Min_Heap_Size+0xa120>
    a8ec:	03055001 	movweq	r5, #20481	; 0x5001
    a8f0:	08004598 	stmdaeq	r0, {r3, r4, r7, r8, sl, lr}
    a8f4:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a8f8:	0001360a 	andeq	r3, r1, sl, lsl #12
    a8fc:	00000024 	andeq	r0, r0, r4, lsr #32
    a900:	00141800 	andseq	r1, r4, r0, lsl #16
    a904:	000ca500 	andeq	sl, ip, r0, lsl #10
    a908:	50011a00 	andpl	r1, r1, r0, lsl #20
    a90c:	45980305 	ldrmi	r0, [r8, #773]	; 0x305
    a910:	011a0800 	tsteq	sl, r0, lsl #16
    a914:	370a0351 	smlsdcc	sl, r1, r3, r0
    a918:	00240001 	eoreq	r0, r4, r1
    a91c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a920:	c3000014 	movwgt	r0, #20
    a924:	1a00000c 	bne	a95c <_Min_Heap_Size+0xa15c>
    a928:	03055001 	movweq	r5, #20481	; 0x5001
    a92c:	08004598 	stmdaeq	r0, {r3, r4, r7, r8, sl, lr}
    a930:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a934:	0001380a 	andeq	r3, r1, sl, lsl #16
    a938:	00000024 	andeq	r0, r0, r4, lsr #32
    a93c:	00141800 	andseq	r1, r4, r0, lsl #16
    a940:	000ce100 	andeq	lr, ip, r0, lsl #2
    a944:	50011a00 	andpl	r1, r1, r0, lsl #20
    a948:	45980305 	ldrmi	r0, [r8, #773]	; 0x305
    a94c:	011a0800 	tsteq	sl, r0, lsl #16
    a950:	390a0351 	stmdbcc	sl, {r0, r4, r6, r8, r9}
    a954:	00240001 	eoreq	r0, r4, r1
    a958:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a95c:	ff000014 			; <UNDEFINED> instruction: 0xff000014
    a960:	1a00000c 	bne	a998 <_Min_Heap_Size+0xa198>
    a964:	03055001 	movweq	r5, #20481	; 0x5001
    a968:	08004598 	stmdaeq	r0, {r3, r4, r7, r8, sl, lr}
    a96c:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a970:	00013a0a 	andeq	r3, r1, sl, lsl #20
    a974:	00000024 	andeq	r0, r0, r4, lsr #32
    a978:	00141800 	andseq	r1, r4, r0, lsl #16
    a97c:	000d1d00 	andeq	r1, sp, r0, lsl #26
    a980:	50011a00 	andpl	r1, r1, r0, lsl #20
    a984:	45980305 	ldrmi	r0, [r8, #773]	; 0x305
    a988:	011a0800 	tsteq	sl, r0, lsl #16
    a98c:	3b0a0351 	blcc	28b6d8 <_Min_Heap_Size+0x28aed8>
    a990:	00240001 	eoreq	r0, r4, r1
    a994:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    a998:	3b000014 	blcc	a9f0 <_Min_Heap_Size+0xa1f0>
    a99c:	1a00000d 	bne	a9d8 <_Min_Heap_Size+0xa1d8>
    a9a0:	03055001 	movweq	r5, #20481	; 0x5001
    a9a4:	08004598 	stmdaeq	r0, {r3, r4, r7, r8, sl, lr}
    a9a8:	0351011a 	cmpeq	r1, #-2147483642	; 0x80000006
    a9ac:	00013c0a 	andeq	r3, r1, sl, lsl #24
    a9b0:	00000019 	andeq	r0, r0, r9, lsl r0
    a9b4:	00141800 	andseq	r1, r4, r0, lsl #16
    a9b8:	50011a00 	andpl	r1, r1, r0, lsl #20
    a9bc:	45980305 	ldrmi	r0, [r8, #773]	; 0x305
    a9c0:	011a0800 	tsteq	sl, r0, lsl #16
    a9c4:	3d0a0351 	stccc	3, cr0, [sl, #-324]	; 0xfffffebc
    a9c8:	21000001 	tstcs	r0, r1
    a9cc:	00081804 	andeq	r1, r8, r4, lsl #16
    a9d0:	ff012500 			; <UNDEFINED> instruction: 0xff012500
    a9d4:	01000021 	tsteq	r0, r1, lsr #32
    a9d8:	01060117 	tsteq	r6, r7, lsl r1
	...
    a9e4:	01007d02 	tsteq	r0, r2, lsl #26
    a9e8:	00000db9 			; <UNDEFINED> instruction: 0x00000db9
    a9ec:	001edf18 	andseq	sp, lr, r8, lsl pc
    a9f0:	01170100 	tsteq	r7, r0, lsl #2
    a9f4:	0002e71e 	andeq	lr, r2, lr, lsl r7
    a9f8:	0072f100 	rsbseq	pc, r2, r0, lsl #2
    a9fc:	0072ed00 	rsbseq	lr, r2, r0, lsl #26
    aa00:	14022300 	strne	r2, [r2], #-768	; 0xfffffd00
    aa04:	00000000 	andeq	r0, r0, r0
    aa08:	00010000 	andeq	r0, r1, r0
    aa0c:	00000000 	andeq	r0, r0, r0
    aa10:	01000000 	mrseq	r0, (UNDEF: 0)
    aa14:	23030120 	movwcs	r0, #12576	; 0x3120
    aa18:	0000140d 	andeq	r1, r0, sp, lsl #8
    aa1c:	00000000 	andeq	r0, r0, r0
    aa20:	00000001 	andeq	r0, r0, r1
    aa24:	00000000 	andeq	r0, r0, r0
    aa28:	01210100 			; <UNDEFINED> instruction: 0x01210100
    aa2c:	01250003 			; <UNDEFINED> instruction: 0x01250003
    aa30:	00001ec7 	andeq	r1, r0, r7, asr #29
    aa34:	06010001 	streq	r0, [r1], -r1
    aa38:	00000001 	andeq	r0, r0, r1
    aa3c:	00000000 	andeq	r0, r0, r0
    aa40:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    aa44:	000deb01 	andeq	lr, sp, r1, lsl #22
    aa48:	13f72300 	mvnsne	r2, #0, 6
    aa4c:	00000000 	andeq	r0, r0, r0
    aa50:	00020000 	andeq	r0, r2, r0
    aa54:	00000000 	andeq	r0, r0, r0
    aa58:	01000000 	mrseq	r0, (UNDEF: 0)
    aa5c:	00030103 	andeq	r0, r3, r3, lsl #2
    aa60:	1e460126 	dvfnesp	f0, f6, f6
    aa64:	e3010000 	movw	r0, #4096	; 0x1000
    aa68:	02e7010a 	rsceq	r0, r7, #-2147483646	; 0x80000002
    aa6c:	15980000 	ldrne	r0, [r8]
    aa70:	15c00800 	strbne	r0, [r0, #2048]	; 0x800
    aa74:	7d020800 	stcvc	8, cr0, [r2, #-0]
    aa78:	0e720100 	rpweqs	f0, f2, f0
    aa7c:	8e270000 	cdphi	0, 2, cr0, cr7, cr0, {0}
    aa80:	01000021 	tsteq	r0, r1, lsr #32
    aa84:	02e726e3 	rsceq	r2, r7, #238026752	; 0xe300000
    aa88:	73180000 	tstvc	r8, #0
    aa8c:	73120000 	tstvc	r2, #0
    aa90:	b6280000 	strtlt	r0, [r8], -r0
    aa94:	98000011 	stmdals	r0, {r0, r4}
    aa98:	02080015 	andeq	r0, r8, #21
    aa9c:	08001598 	stmdaeq	r0, {r3, r4, r7, r8, sl, ip}
    aaa0:	080015ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, sl, ip}
    aaa4:	1d0be501 	cfstr32ne	mvfx14, [fp, #-4]
    aaa8:	000011c9 	andeq	r1, r0, r9, asr #3
    aaac:	0000734c 	andeq	r7, r0, ip, asr #6
    aab0:	00007346 	andeq	r7, r0, r6, asr #6
    aab4:	0012d129 	andseq	sp, r2, r9, lsr #2
    aab8:	0015a600 	andseq	sl, r5, r0, lsl #12
    aabc:	15a60108 	strne	r0, [r6, #264]!	; 0x108
    aac0:	15ae0800 	strne	r0, [lr, #2048]!	; 0x800
    aac4:	ee020800 	cdp	8, 0, cr0, cr2, cr0, {0}
    aac8:	ed1d0307 	ldc	3, cr0, [sp, #-28]	; 0xffffffe4
    aacc:	7c000012 	stcvc	0, cr0, [r0], {18}
    aad0:	7a000073 	bvc	aca4 <_Min_Heap_Size+0xa4a4>
    aad4:	1d000073 	stcne	0, cr0, [r0, #-460]	; 0xfffffe34
    aad8:	000012e0 	andeq	r1, r0, r0, ror #5
    aadc:	00007392 	muleq	r0, r2, r3
    aae0:	00007390 	muleq	r0, r0, r3
    aae4:	2a000000 	bcs	aaec <_Min_Heap_Size+0xa2ec>
    aae8:	001fc001 	andseq	ip, pc, r1
    aaec:	06d60100 	ldrbeq	r0, [r6], r0, lsl #2
    aaf0:	00000001 	andeq	r0, r0, r1
    aaf4:	00000000 	andeq	r0, r0, r0
    aaf8:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    aafc:	000ecf01 	andeq	ip, lr, r1, lsl #30
    ab00:	11d72800 	bicsne	r2, r7, r0, lsl #16
    ab04:	00000000 	andeq	r0, r0, r0
    ab08:	00020000 	andeq	r0, r2, r0
    ab0c:	00000000 	andeq	r0, r0, r0
    ab10:	01000000 	mrseq	r0, (UNDEF: 0)
    ab14:	022303d9 	eoreq	r0, r3, #1677721603	; 0x64000003
    ab18:	00000014 	andeq	r0, r0, r4, lsl r0
    ab1c:	04000000 	streq	r0, [r0], #-0
	...
    ab28:	03079402 	movweq	r9, #29698	; 0x7402
    ab2c:	00140223 	andseq	r0, r4, r3, lsr #4
    ab30:	00000000 	andeq	r0, r0, r0
    ab34:	00000100 	andeq	r0, r0, r0, lsl #2
    ab38:	00000000 	andeq	r0, r0, r0
    ab3c:	99020000 	stmdbls	r2, {}	; <UNPREDICTABLE>
    ab40:	00000307 	andeq	r0, r0, r7, lsl #6
    ab44:	1018012b 	andsne	r0, r8, fp, lsr #2
    ab48:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    ab4c:	00000106 	andeq	r0, r0, r6, lsl #2
    ab50:	00000000 	andeq	r0, r0, r0
    ab54:	73a70000 			; <UNDEFINED> instruction: 0x73a70000
    ab58:	6b010000 	blvs	4ab60 <_Min_Heap_Size+0x4a360>
    ab5c:	2700000f 	strcs	r0, [r0, -pc]
    ab60:	00001067 	andeq	r1, r0, r7, rrx
    ab64:	4324c901 			; <UNDEFINED> instruction: 0x4324c901
    ab68:	cf000002 	svcgt	0x00000002
    ab6c:	c7000073 	smlsdxgt	r0, r3, r0, r0
    ab70:	2c000073 	stccs	0, cr0, [r0], {115}	; 0x73
    ab74:	00001377 	andeq	r1, r0, r7, ror r3
    ab78:	00000000 	andeq	r0, r0, r0
    ab7c:	00000001 	andeq	r0, r0, r1
    ab80:	00000000 	andeq	r0, r0, r0
    ab84:	03cf0100 	biceq	r0, pc, #0, 2
    ab88:	00000f51 	andeq	r0, r0, r1, asr pc
    ab8c:	0013861d 	andseq	r8, r3, sp, lsl r6
    ab90:	00740b00 	rsbseq	r0, r4, r0, lsl #22
    ab94:	00740900 	rsbseq	r0, r4, r0, lsl #18
    ab98:	14022300 	strne	r2, [r2], #-768	; 0xfffffd00
    ab9c:	00000000 	andeq	r0, r0, r0
    aba0:	00010000 	andeq	r0, r1, r0
    aba4:	00000000 	andeq	r0, r0, r0
    aba8:	02000000 	andeq	r0, r0, #0
    abac:	230506bf 	movwcs	r0, #22207	; 0x56bf
    abb0:	0000140d 	andeq	r1, r0, sp, lsl #8
    abb4:	00000000 	andeq	r0, r0, r0
    abb8:	00000001 	andeq	r0, r0, r1
    abbc:	00000000 	andeq	r0, r0, r0
    abc0:	06c00200 	strbeq	r0, [r0], r0, lsl #4
    abc4:	00190005 	andseq	r0, r9, r5
    abc8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    abcc:	1a000014 	bne	ac24 <_Min_Heap_Size+0xa424>
    abd0:	03055001 	movweq	r5, #20481	; 0x5001
    abd4:	08004598 	stmdaeq	r0, {r3, r4, r7, r8, sl, lr}
    abd8:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    abdc:	0000cc08 	andeq	ip, r0, r8, lsl #24
    abe0:	0faa012b 	svceq	0x00aa012b
    abe4:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    abe8:	15680106 	strbne	r0, [r8, #-262]!	; 0xfffffefa
    abec:	15980800 	ldrne	r0, [r8, #2048]	; 0x800
    abf0:	741e0800 	ldrvc	r0, [lr], #-2048	; 0xfffff800
    abf4:	db010000 	blle	4abfc <_Min_Heap_Size+0x4a3fc>
    abf8:	2700000f 	strcs	r0, [r0, -pc]
    abfc:	00001067 	andeq	r1, r0, r7, rrx
    ac00:	4323b901 			; <UNDEFINED> instruction: 0x4323b901
    ac04:	46000002 	strmi	r0, [r0], -r2
    ac08:	3e000074 	mcrcc	0, 0, r0, cr0, cr4, {3}
    ac0c:	2c000074 	stccs	0, cr0, [r0], {116}	; 0x74
    ac10:	00001394 	muleq	r0, r4, r3
    ac14:	0800156e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, sl, ip}
    ac18:	00156e01 	andseq	r6, r5, r1, lsl #28
    ac1c:	00158208 	andseq	r8, r5, r8, lsl #4
    ac20:	03bf0108 			; <UNDEFINED> instruction: 0x03bf0108
    ac24:	00000fc1 	andeq	r0, r0, r1, asr #31
    ac28:	0013a31d 	andseq	sl, r3, sp, lsl r3
    ac2c:	00748200 	rsbseq	r8, r4, r0, lsl #4
    ac30:	00748000 	rsbseq	r8, r4, r0
    ac34:	8c190000 	ldchi	0, cr0, [r9], {-0}
    ac38:	18080015 	stmdane	r8, {r0, r2, r4}
    ac3c:	1a000014 	bne	ac94 <_Min_Heap_Size+0xa494>
    ac40:	03055001 	movweq	r5, #20481	; 0x5001
    ac44:	08004598 	stmdaeq	r0, {r3, r4, r7, r8, sl, lr}
    ac48:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    ac4c:	0000bc08 	andeq	fp, r0, r8, lsl #24
    ac50:	0f5b012b 	svceq	0x005b012b
    ac54:	a3010000 	movwge	r0, #4096	; 0x1000
    ac58:	14dc0106 	ldrbne	r0, [ip], #262	; 0x106
    ac5c:	15680800 	strbne	r0, [r8, #-2048]!	; 0xfffff800
    ac60:	74950800 	ldrvc	r0, [r5], #2048	; 0x800
    ac64:	2c010000 	stccs	0, cr0, [r1], {-0}
    ac68:	27000011 	smladcs	r0, r1, r0, r0
    ac6c:	00001067 	andeq	r1, r0, r7, rrx
    ac70:	4325a301 			; <UNDEFINED> instruction: 0x4325a301
    ac74:	bd000002 	stclt	0, cr0, [r0, #-8]
    ac78:	b5000074 	strlt	r0, [r0, #-116]	; 0xffffff8c
    ac7c:	27000074 	smlsdxcs	r0, r4, r0, r0
    ac80:	00001fe6 	andeq	r1, r0, r6, ror #31
    ac84:	e734a301 	ldr	sl, [r4, -r1, lsl #6]!
    ac88:	03000002 	movweq	r0, #2
    ac8c:	f7000075 			; <UNDEFINED> instruction: 0xf7000075
    ac90:	27000074 	smlsdxcs	r0, r4, r0, r0
    ac94:	00002062 	andeq	r2, r0, r2, rrx
    ac98:	e74ea301 	strb	sl, [lr, -r1, lsl #6]
    ac9c:	5f000002 	svcpl	0x00000002
    aca0:	53000075 	movwpl	r0, #117	; 0x75
    aca4:	2d000075 	stccs	0, cr0, [r0, #-468]	; 0xfffffe2c
    aca8:	0000206e 	andeq	r2, r0, lr, rrx
    acac:	e70ca501 	str	sl, [ip, -r1, lsl #10]
    acb0:	bb000002 	bllt	acc0 <_Min_Heap_Size+0xa4c0>
    acb4:	af000075 	svcge	0x00000075
    acb8:	2e000075 	mcrcs	0, 0, r0, cr0, cr5, {3}
    acbc:	000013b1 			; <UNDEFINED> instruction: 0x000013b1
    acc0:	080014ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, ip}
    acc4:	0014ec01 	andseq	lr, r4, r1, lsl #24
    acc8:	0014f408 	andseq	pc, r4, r8, lsl #8
    accc:	13ab0108 			; <UNDEFINED> instruction: 0x13ab0108
    acd0:	00124e2f 	andseq	r4, r2, pc, lsr #28
    acd4:	0014f400 	andseq	pc, r4, r0, lsl #8
    acd8:	04800208 	streq	r0, [r0], #520	; 0x208
    acdc:	ad010000 	stcge	0, cr0, [r1, #-0]
    ace0:	0010c503 	andseq	ip, r0, r3, lsl #10
    ace4:	127b1d00 	rsbsne	r1, fp, #0, 26
    ace8:	76110000 	ldrvc	r0, [r1], -r0
    acec:	760b0000 	strvc	r0, [fp], -r0
    acf0:	6e1d0000 	cdpvs	0, 1, cr0, cr13, cr0, {0}
    acf4:	43000012 	movwmi	r0, #18
    acf8:	3d000076 	stccc	0, cr0, [r0, #-472]	; 0xfffffe28
    acfc:	1d000076 	stcne	0, cr0, [r0, #-472]	; 0xfffffe28
    ad00:	00001261 	andeq	r1, r0, r1, ror #4
    ad04:	00007677 	andeq	r7, r0, r7, ror r6
    ad08:	0000766f 	andeq	r7, r0, pc, ror #12
    ad0c:	0004801f 	andeq	r8, r4, pc, lsl r0
    ad10:	12882000 	addne	r2, r8, #0
    ad14:	76b70000 	ldrtvc	r0, [r7], r0
    ad18:	76af0000 	strtvc	r0, [pc], r0
    ad1c:	95200000 	strls	r0, [r0, #-0]!
    ad20:	f3000012 	vqadd.u8	d0, d0, d2
    ad24:	ef000076 	svc	0x00000076
    ad28:	20000076 	andcs	r0, r0, r6, ror r0
    ad2c:	000012a2 	andeq	r1, r0, r2, lsr #5
    ad30:	00007713 	andeq	r7, r0, r3, lsl r7
    ad34:	00007711 	andeq	r7, r0, r1, lsl r7
    ad38:	d12f0000 			; <UNDEFINED> instruction: 0xd12f0000
    ad3c:	1e000012 	mcrne	0, 0, r0, cr0, cr2, {0}
    ad40:	01080015 	tsteq	r8, r5, lsl r0
    ad44:	00000498 	muleq	r0, r8, r4
    ad48:	f503ad01 			; <UNDEFINED> instruction: 0xf503ad01
    ad4c:	1d000010 	stcne	0, cr0, [r0, #-64]	; 0xffffffc0
    ad50:	000012ed 	andeq	r1, r0, sp, ror #5
    ad54:	0000772a 	andeq	r7, r0, sl, lsr #14
    ad58:	00007726 	andeq	r7, r0, r6, lsr #14
    ad5c:	0012e01d 	andseq	lr, r2, sp, lsl r0
    ad60:	00774c00 	rsbseq	r4, r7, r0, lsl #24
    ad64:	00774800 	rsbseq	r4, r7, r0, lsl #16
    ad68:	3c240000 	stccc	0, cr0, [r4], #-0
    ad6c:	18080015 	stmdane	r8, {r0, r2, r4}
    ad70:	12000014 	andne	r0, r0, #20
    ad74:	1a000011 	bne	adc0 <_Min_Heap_Size+0xa5c0>
    ad78:	03055001 	movweq	r5, #20481	; 0x5001
    ad7c:	08004598 	stmdaeq	r0, {r3, r4, r7, r8, sl, lr}
    ad80:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    ad84:	1900a808 	stmdbne	r0, {r3, fp, sp, pc}
    ad88:	08001546 	stmdaeq	r0, {r1, r2, r6, r8, sl, ip}
    ad8c:	00001418 	andeq	r1, r0, r8, lsl r4
    ad90:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    ad94:	00459803 	subeq	r9, r5, r3, lsl #16
    ad98:	51011a08 	tstpl	r1, r8, lsl #20
    ad9c:	00a90802 	adceq	r0, r9, r2, lsl #16
    ada0:	2b012b00 	blcs	559a8 <_Min_Heap_Size+0x551a8>
    ada4:	01000021 	tsteq	r0, r1, lsr #32
    ada8:	a001068d 	andge	r0, r1, sp, lsl #13
    adac:	dc080014 	stcle	0, cr0, [r8], {20}
    adb0:	6a080014 	bvs	20ae08 <_Min_Heap_Size+0x20a608>
    adb4:	01000077 	tsteq	r0, r7, ror r0
    adb8:	000011b6 			; <UNDEFINED> instruction: 0x000011b6
    adbc:	001e8927 	andseq	r8, lr, r7, lsr #18
    adc0:	2c8d0100 	stfcss	f0, [sp], {0}
    adc4:	000002e7 	andeq	r0, r0, r7, ror #5
    adc8:	00007794 	muleq	r0, r4, r7
    adcc:	0000778a 	andeq	r7, r0, sl, lsl #15
    add0:	0013c02c 	andseq	ip, r3, ip, lsr #32
    add4:	0014aa00 	andseq	sl, r4, r0, lsl #20
    add8:	14aa0108 	strtne	r0, [sl], #264	; 0x108
    addc:	14c80800 	strbne	r0, [r8], #2048	; 0x800
    ade0:	93010800 	movwls	r0, #6144	; 0x1800
    ade4:	00119c03 	andseq	r9, r1, r3, lsl #24
    ade8:	13cf1d00 	bicne	r1, pc, #0, 26
    adec:	77da0000 	ldrbvc	r0, [sl, r0]
    adf0:	77d60000 	ldrbvc	r0, [r6, r0]
    adf4:	dc200000 	stcle	0, cr0, [r0], #-0
    adf8:	01000013 	tsteq	r0, r3, lsl r0
    adfc:	fb000078 	blx	afe6 <_Min_Heap_Size+0xa7e6>
    ae00:	20000077 	andcs	r0, r0, r7, ror r0
    ae04:	000013e9 	andeq	r1, r0, r9, ror #7
    ae08:	0000782e 	andeq	r7, r0, lr, lsr #16
    ae0c:	0000782a 	andeq	r7, r0, sl, lsr #16
    ae10:	14d21900 	ldrbne	r1, [r2], #2304	; 0x900
    ae14:	14180800 	ldrne	r0, [r8], #-2048	; 0xfffff800
    ae18:	011a0000 	tsteq	sl, r0
    ae1c:	98030550 	stmdals	r3, {r4, r6, r8, sl}
    ae20:	1a080045 	bne	20af3c <_Min_Heap_Size+0x20a73c>
    ae24:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
    ae28:	30000090 	mulcc	r0, r0, r0
    ae2c:	000021d3 	ldrdeq	r2, [r0], -r3
    ae30:	1a07e602 	bne	204640 <_Min_Heap_Size+0x203e40>
    ae34:	0002e701 	andeq	lr, r2, r1, lsl #14
    ae38:	11d70300 	bicsne	r0, r7, r0, lsl #6
    ae3c:	81310000 	teqhi	r1, r0
    ae40:	02000020 	andeq	r0, r0, #32
    ae44:	e73207e6 	ldr	r0, [r2, -r6, ror #15]!
    ae48:	00000002 	andeq	r0, r0, r2
    ae4c:	001f1732 	andseq	r1, pc, r2, lsr r7	; <UNPREDICTABLE>
    ae50:	07920200 	ldreq	r0, [r2, r0, lsl #4]
    ae54:	03010122 	movweq	r0, #4386	; 0x1122
    ae58:	0020d033 	eoreq	sp, r0, r3, lsr r0
    ae5c:	07600200 	strbeq	r0, [r0, -r0, lsl #4]!
    ae60:	4e030116 	mcrmi	1, 0, r0, cr3, cr6, {0}
    ae64:	31000012 	tstcc	r0, r2, lsl r0
    ae68:	00002065 	andeq	r2, r0, r5, rrx
    ae6c:	34076002 	strcc	r6, [r7], #-2
    ae70:	000002e7 	andeq	r0, r0, r7, ror #5
    ae74:	001e8931 	andseq	r8, lr, r1, lsr r9
    ae78:	07600200 	strbeq	r0, [r0, -r0, lsl #4]!
    ae7c:	0002e747 	andeq	lr, r2, r7, asr #14
    ae80:	1fe53100 	svcne	0x00e53100
    ae84:	60020000 	andvs	r0, r2, r0
    ae88:	0baa6607 	bleq	feaa46ac <_estack+0xdea9ad0c>
    ae8c:	61310000 	teqvs	r1, r0
    ae90:	02000020 	andeq	r0, r0, #32
    ae94:	aa880760 	bge	fe20cc1c <_estack+0xde20327c>
    ae98:	3400000b 	strcc	r0, [r0], #-11
    ae9c:	00002173 	andeq	r2, r0, r3, ror r1
    aea0:	0c076202 	sfmeq	f6, 4, [r7], {2}
    aea4:	000002e7 	andeq	r0, r0, r7, ror #5
    aea8:	001f4b34 	andseq	r4, pc, r4, lsr fp	; <UNPREDICTABLE>
    aeac:	07630200 	strbeq	r0, [r3, -r0, lsl #4]!
    aeb0:	0002e70c 	andeq	lr, r2, ip, lsl #14
    aeb4:	20c03400 	sbccs	r3, r0, r0, lsl #8
    aeb8:	64020000 	strvs	r0, [r2], #-0
    aebc:	02e70c07 	rsceq	r0, r7, #1792	; 0x700
    aec0:	30000000 	andcc	r0, r0, r0
    aec4:	000020a7 	andeq	r2, r0, r7, lsr #1
    aec8:	1a074502 	bne	1dc2d8 <_Min_Heap_Size+0x1dbad8>
    aecc:	0002e701 	andeq	lr, r2, r1, lsl #14
    aed0:	12b00300 	adcsne	r0, r0, #0, 6
    aed4:	89310000 	ldmdbhi	r1!, {}	; <UNPREDICTABLE>
    aed8:	0200001e 	andeq	r0, r0, #30
    aedc:	e7380745 	ldr	r0, [r8, -r5, asr #14]!
    aee0:	31000002 	tstcc	r0, r2
    aee4:	00001fe6 	andeq	r1, r0, r6, ror #31
    aee8:	50074502 	andpl	r4, r7, r2, lsl #10
    aeec:	000002e7 	andeq	r0, r0, r7, ror #5
    aef0:	00206231 	eoreq	r6, r0, r1, lsr r2
    aef4:	07450200 	strbeq	r0, [r5, -r0, lsl #4]
    aef8:	0002e76a 	andeq	lr, r2, sl, ror #14
    aefc:	21733400 	cmncs	r3, r0, lsl #8
    af00:	47020000 	strmi	r0, [r2, -r0]
    af04:	02e70c07 	rsceq	r0, r7, #1792	; 0x700
    af08:	4b340000 	blmi	d0af10 <_Min_Heap_Size+0xd0a710>
    af0c:	0200001f 	andeq	r0, r0, #31
    af10:	e70c0748 	str	r0, [ip, -r8, asr #14]
    af14:	34000002 	strcc	r0, [r0], #-2
    af18:	000020c0 	andeq	r2, r0, r0, asr #1
    af1c:	0c074902 			; <UNDEFINED> instruction: 0x0c074902
    af20:	000002e7 	andeq	r0, r0, r7, ror #5
    af24:	204e3000 	subcs	r3, lr, r0
    af28:	2c020000 	stccs	0, cr0, [r2], {-0}
    af2c:	e7011a07 	str	r1, [r1, -r7, lsl #20]
    af30:	03000002 	movweq	r0, #2
    af34:	000012d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    af38:	00106731 	andseq	r6, r0, r1, lsr r7
    af3c:	072c0200 	streq	r0, [ip, -r0, lsl #4]!
    af40:	00024337 	andeq	r4, r2, r7, lsr r3
    af44:	50330000 	eorspl	r0, r3, r0
    af48:	02000022 	andeq	r0, r0, #34	; 0x22
    af4c:	01160716 	tsteq	r6, r6, lsl r7
    af50:	0012fb03 	andseq	pc, r2, r3, lsl #22
    af54:	10673100 	rsbne	r3, r7, r0, lsl #2
    af58:	16020000 	strne	r0, [r2], -r0
    af5c:	02433307 	subeq	r3, r3, #469762048	; 0x1c000000
    af60:	07310000 	ldreq	r0, [r1, -r0]!
    af64:	02000020 	andeq	r0, r0, #32
    af68:	e7420716 	smlald	r0, r2, r6, r7
    af6c:	00000002 	andeq	r0, r0, r2
    af70:	00221330 	eoreq	r1, r2, r0, lsr r3
    af74:	07000200 	streq	r0, [r0, -r0, lsl #4]
    af78:	02e7011a 	rsceq	r0, r7, #-2147483642	; 0x80000006
    af7c:	1c030000 	stcne	0, cr0, [r3], {-0}
    af80:	31000013 	tstcc	r0, r3, lsl r0
    af84:	00001067 	andeq	r1, r0, r7, rrx
    af88:	35070002 	strcc	r0, [r7, #-2]
    af8c:	00000243 	andeq	r0, r0, r3, asr #4
    af90:	1f003300 	svcne	0x00003300
    af94:	ef020000 	svc	0x00020000
    af98:	03011606 	movweq	r1, #5638	; 0x1606
    af9c:	00001339 	andeq	r1, r0, r9, lsr r3
    afa0:	00106731 	andseq	r6, r0, r1, lsr r7
    afa4:	06ef0200 	strbteq	r0, [pc], r0, lsl #4
    afa8:	00024337 	andeq	r4, r2, r7, lsr r3
    afac:	48330000 	ldmdami	r3!, {}	; <UNPREDICTABLE>
    afb0:	02000021 	andeq	r0, r0, #33	; 0x21
    afb4:	011606e0 	tsteq	r6, r0, ror #13
    afb8:	00135603 	andseq	r5, r3, r3, lsl #12
    afbc:	10673100 	rsbne	r3, r7, r0, lsl #2
    afc0:	e0020000 	and	r0, r2, r0
    afc4:	02433506 	subeq	r3, r3, #25165824	; 0x1800000
    afc8:	30000000 	andcc	r0, r0, r0
    afcc:	0000208c 	andeq	r2, r0, ip, lsl #1
    afd0:	1a06cd02 	bne	1be3e0 <_Min_Heap_Size+0x1bdbe0>
    afd4:	0002e701 	andeq	lr, r2, r1, lsl #14
    afd8:	13770300 	cmnne	r7, #0, 6
    afdc:	67310000 	ldrvs	r0, [r1, -r0]!
    afe0:	02000010 	andeq	r0, r0, #16
    afe4:	433906cd 	teqmi	r9, #214958080	; 0xcd00000
    afe8:	00000002 	andeq	r0, r0, r2
    afec:	001f9733 	andseq	r9, pc, r3, lsr r7	; <UNPREDICTABLE>
    aff0:	06ba0200 	ldrteq	r0, [sl], r0, lsl #4
    aff4:	94030116 	strls	r0, [r3], #-278	; 0xfffffeea
    aff8:	31000013 	tstcc	r0, r3, lsl r0
    affc:	00001067 	andeq	r1, r0, r7, rrx
    b000:	3206ba02 	andcc	fp, r6, #8192	; 0x2000
    b004:	00000243 	andeq	r0, r0, r3, asr #4
    b008:	215d3300 	cmpcs	sp, r0, lsl #6
    b00c:	94020000 	strls	r0, [r2], #-0
    b010:	03011606 	movweq	r1, #5638	; 0x1606
    b014:	000013b1 			; <UNDEFINED> instruction: 0x000013b1
    b018:	00106731 	andseq	r6, r0, r1, lsr r7
    b01c:	06940200 	ldreq	r0, [r4], r0, lsl #4
    b020:	00024331 	andeq	r4, r2, r1, lsr r3
    b024:	24350000 	ldrtcs	r0, [r5], #-0
    b028:	02000022 	andeq	r0, r0, #34	; 0x22
    b02c:	011a0688 	tsteq	sl, r8, lsl #13
    b030:	000002e7 	andeq	r0, r0, r7, ror #5
    b034:	201a3303 	andscs	r3, sl, r3, lsl #6
    b038:	75020000 	strvc	r0, [r2, #-0]
    b03c:	03011606 	movweq	r1, #5638	; 0x1606
    b040:	000013f7 	strdeq	r1, [r0], -r7
    b044:	001e8931 	andseq	r8, lr, r1, lsr r9
    b048:	06750200 	ldrbteq	r0, [r5], -r0, lsl #4
    b04c:	0002e73a 	andeq	lr, r2, sl, lsr r7
    b050:	1fd53400 	svcne	0x00d53400
    b054:	77020000 	strvc	r0, [r2, -r0]
    b058:	02e70c06 	rsceq	r0, r7, #1536	; 0x600
    b05c:	73340000 	teqvc	r4, #0
    b060:	02000021 	andeq	r0, r0, #33	; 0x21
    b064:	e70c0678 	smlsdx	ip, r8, r6, r0
    b068:	00000002 	andeq	r0, r0, r2
    b06c:	00210536 	eoreq	r0, r1, r6, lsr r5
    b070:	01180300 	tsteq	r8, r0, lsl #6
    b074:	3603011b 			; <UNDEFINED> instruction: 0x3603011b
    b078:	00002048 	andeq	r2, r0, r8, asr #32
    b07c:	1b010d03 	blne	4e490 <_Min_Heap_Size+0x4dc90>
    b080:	a1360301 	teqge	r6, r1, lsl #6
    b084:	03000020 	movweq	r0, #32
    b088:	011b0102 	tsteq	fp, r2, lsl #2
    b08c:	01013703 	tsteq	r1, r3, lsl #14
    b090:	00000aaa 	andeq	r0, r0, sl, lsr #21
    b094:	00000aaa 	andeq	r0, r0, sl, lsr #21
    b098:	0801e609 	stmdaeq	r1, {r0, r3, r9, sl, sp, lr, pc}
    b09c:	000afe00 	andeq	pc, sl, r0, lsl #28
    b0a0:	23000200 	movwcs	r0, #512	; 0x200
    b0a4:	04000017 	streq	r0, [r0], #-23	; 0xffffffe9
    b0a8:	00062101 	andeq	r2, r6, r1, lsl #2
    b0ac:	24b90c00 	ldrtcs	r0, [r9], #3072	; 0xc00
    b0b0:	04e90000 	strbteq	r0, [r9], #0
    b0b4:	05b00000 	ldreq	r0, [r0, #0]!
	...
    b0c0:	813f0000 	teqhi	pc, r0
    b0c4:	05020000 	streq	r0, [r2, #-0]
    b0c8:	00023c01 	andeq	r3, r2, r1, lsl #24
    b0cc:	01420500 	cmpeq	r2, r0, lsl #10
    b0d0:	0000023c 	andeq	r0, r0, ip, lsr r2
    b0d4:	000d9003 	andeq	r9, sp, r3
    b0d8:	bf037200 	svclt	0x00037200
    b0dc:	7400000d 	strvc	r0, [r0], #-13
    b0e0:	000e1f03 	andeq	r1, lr, r3, lsl #30
    b0e4:	c6037500 	strgt	r7, [r3], -r0, lsl #10
    b0e8:	7600000c 	strvc	r0, [r0], -ip
    b0ec:	000e7103 	andeq	r7, lr, r3, lsl #2
    b0f0:	f9037b00 			; <UNDEFINED> instruction: 0xf9037b00
    b0f4:	7c00000f 	stcvc	0, cr0, [r0], {15}
    b0f8:	0010ca03 	andseq	ip, r0, r3, lsl #20
    b0fc:	38037e00 	stmdacc	r3, {r9, sl, fp, ip, sp, lr}
    b100:	7f00000c 	svcvc	0x0000000c
    b104:	000da404 	andeq	sl, sp, r4, lsl #8
    b108:	90040000 	andls	r0, r4, r0
    b10c:	0100000f 	tsteq	r0, pc
    b110:	000dd504 	andeq	sp, sp, r4, lsl #10
    b114:	33040200 	movwcc	r0, #16896	; 0x4200
    b118:	0300000b 	movweq	r0, #11
    b11c:	000b9d04 	andeq	r9, fp, r4, lsl #26
    b120:	2c040400 	cfstrscs	mvf0, [r4], {-0}
    b124:	05000010 	streq	r0, [r0, #-16]
    b128:	000fbd04 	andeq	fp, pc, r4, lsl #26
    b12c:	30040600 	andcc	r0, r4, r0, lsl #12
    b130:	0700000d 	streq	r0, [r0, -sp]
    b134:	000b4104 	andeq	r4, fp, r4, lsl #2
    b138:	bf040800 	svclt	0x00040800
    b13c:	09000010 	stmdbeq	r0, {r4}
    b140:	000eac04 	andeq	sl, lr, r4, lsl #24
    b144:	08040a00 	stmdaeq	r4, {r9, fp}
    b148:	0b00000f 	bleq	b18c <_Min_Heap_Size+0xa98c>
    b14c:	000ed204 	andeq	sp, lr, r4, lsl #4
    b150:	62040c00 	andvs	r0, r4, #0, 24
    b154:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
    b158:	00103504 	andseq	r3, r0, r4, lsl #10
    b15c:	d5040e00 	strle	r0, [r4, #-3584]	; 0xfffff200
    b160:	0f00000f 	svceq	0x0000000f
    b164:	000d4804 	andeq	r4, sp, r4, lsl #16
    b168:	4c041000 	stcmi	0, cr1, [r4], {-0}
    b16c:	1100000b 	tstne	r0, fp
    b170:	000f8704 	andeq	r8, pc, r4, lsl #14
    b174:	3b041200 	blcc	10f97c <_Min_Heap_Size+0x10f17c>
    b178:	1300000d 	movwne	r0, #13
    b17c:	000ce404 	andeq	lr, ip, r4, lsl #8
    b180:	9a041400 	bls	110188 <_Min_Heap_Size+0x10f988>
    b184:	15000010 	strne	r0, [r0, #-16]
    b188:	000de504 	andeq	lr, sp, r4, lsl #10
    b18c:	c8041600 	stmdagt	r4, {r9, sl, ip}
    b190:	1700000f 	strne	r0, [r0, -pc]
    b194:	000e3804 	andeq	r3, lr, r4, lsl #16
    b198:	59041800 	stmdbpl	r4, {fp, ip}
    b19c:	19000010 	stmdbne	r0, {r4}
    b1a0:	000c2004 	andeq	r2, ip, r4
    b1a4:	23041a00 	movwcs	r1, #18944	; 0x4a00
    b1a8:	1b00000d 	blne	b1e4 <_Min_Heap_Size+0xa9e4>
    b1ac:	000ba804 	andeq	sl, fp, r4, lsl #16
    b1b0:	45041c00 	strmi	r1, [r4, #-3072]	; 0xfffff400
    b1b4:	1d00000f 	stcne	0, cr0, [r0, #-60]	; 0xffffffc4
    b1b8:	000cf204 	andeq	pc, ip, r4, lsl #4
    b1bc:	16041e00 	strne	r1, [r4], -r0, lsl #28
    b1c0:	1f00000d 	svcne	0x0000000d
    b1c4:	000c9604 	andeq	r9, ip, r4, lsl #12
    b1c8:	c5042000 	strgt	r2, [r4, #-0]
    b1cc:	2100000e 	tstcs	r0, lr
    b1d0:	000e0a04 	andeq	r0, lr, r4, lsl #20
    b1d4:	67042200 	strvs	r2, [r4, -r0, lsl #4]
    b1d8:	2300000e 	movwcs	r0, #14
    b1dc:	000bdd04 	andeq	sp, fp, r4, lsl #26
    b1e0:	4f042400 	svcmi	0x00042400
    b1e4:	2500000f 	strcs	r0, [r0, #-15]
    b1e8:	000cfc04 	andeq	pc, ip, r4, lsl #24
    b1ec:	45042600 	strmi	r2, [r4, #-1536]	; 0xfffffa00
    b1f0:	2700000c 	strcs	r0, [r0, -ip]
    b1f4:	000f3604 	andeq	r3, pc, r4, lsl #12
    b1f8:	1a042800 	bne	115200 <_Min_Heap_Size+0x114a00>
    b1fc:	2900000f 	stmdbcs	r0, {r0, r1, r2, r3}
    b200:	000e9b04 	andeq	r9, lr, r4, lsl #22
    b204:	e7042a00 	str	r2, [r4, -r0, lsl #20]
    b208:	2b00000b 	blcs	b23c <_Min_Heap_Size+0xaa3c>
    b20c:	000b5e04 	andeq	r5, fp, r4, lsl #28
    b210:	5a042c00 	bpl	116218 <_Min_Heap_Size+0x115a18>
    b214:	2d00000d 	stccs	0, cr0, [r0, #-52]	; 0xffffffcc
    b218:	0010a804 	andseq	sl, r0, r4, lsl #16
    b21c:	e9042e00 	stmdb	r4, {r9, sl, fp, sp}
    b220:	2f000010 	svccs	0x00000010
    b224:	000fa004 	andeq	sl, pc, r4
    b228:	b5043000 	strlt	r3, [r4, #-0]
    b22c:	31000010 	tstcc	r0, r0, lsl r0
    b230:	000cbc04 	andeq	fp, ip, r4, lsl #24
    b234:	93043200 	movwls	r3, #16896	; 0x4200
    b238:	3300000b 	movwcc	r0, #11
    b23c:	000e8604 	andeq	r8, lr, r4, lsl #12
    b240:	2d043400 	cfstrscs	mvf3, [r4, #-0]
    b244:	3500000e 	strcc	r0, [r0, #-14]
    b248:	000eb704 	andeq	fp, lr, r4, lsl #14
    b24c:	4b043600 	blmi	118a54 <_Min_Heap_Size+0x118254>
    b250:	3700000e 	strcc	r0, [r0, -lr]
    b254:	000df304 	andeq	pc, sp, r4, lsl #6
    b258:	81043800 	tsthi	r4, r0, lsl #16
    b25c:	3900000b 	stmdbcc	r0, {r0, r1, r3}
    b260:	0010fb04 	andseq	pc, r0, r4, lsl #22
    b264:	e4043a00 	str	r3, [r4], #-2560	; 0xfffff600
    b268:	3b00000e 	blcc	b2a8 <_Min_Heap_Size+0xaaa8>
    b26c:	000c7404 	andeq	r7, ip, r4, lsl #8
    b270:	f6043c00 			; <UNDEFINED> instruction: 0xf6043c00
    b274:	3f00000e 	svccc	0x0000000e
    b278:	000bb204 	andeq	fp, fp, r4, lsl #4
    b27c:	79044000 	stmdbvc	r4, {lr}
    b280:	4100000f 	tstmi	r0, pc
    b284:	000cae04 	andeq	sl, ip, r4, lsl #28
    b288:	84044200 	strhi	r4, [r4], #-512	; 0xfffffe00
    b28c:	4300000d 	movwmi	r0, #13
    b290:	000c0e04 	andeq	r0, ip, r4, lsl #28
    b294:	e7044400 	str	r4, [r4, -r0, lsl #8]
    b298:	4500000f 	strmi	r0, [r0, #-15]
    b29c:	000d7204 	andeq	r7, sp, r4, lsl #4
    b2a0:	c0044600 	andgt	r4, r4, r0, lsl #12
    b2a4:	4700000b 	strmi	r0, [r0, -fp]
    b2a8:	00100b04 	andseq	r0, r0, r4, lsl #22
    b2ac:	29044800 	stmdbcs	r4, {fp, lr}
    b2b0:	4900000f 	stmdbmi	r0, {r0, r1, r2, r3}
    b2b4:	00108004 	andseq	r8, r0, r4
    b2b8:	d6044a00 	strle	r4, [r4], -r0, lsl #20
    b2bc:	4b000010 	blmi	b304 <_Min_Heap_Size+0xab04>
    b2c0:	000dae04 	andeq	sl, sp, r4, lsl #28
    b2c4:	55044c00 	strpl	r4, [r4, #-3072]	; 0xfffff400
    b2c8:	4d00000e 	stcmi	0, cr0, [r0, #-56]	; 0xffffffc8
    b2cc:	000f7004 	andeq	r7, pc, r4
    b2d0:	7d045000 	stcvc	0, cr5, [r4, #-0]
    b2d4:	5100000e 	tstpl	r0, lr
    b2d8:	06010500 	streq	r0, [r1], -r0, lsl #10
    b2dc:	0000060f 	andeq	r0, r0, pc, lsl #12
    b2e0:	00007606 	andeq	r7, r0, r6, lsl #12
    b2e4:	182b0200 	stmdane	fp!, {r9}
    b2e8:	0000024f 	andeq	r0, r0, pc, asr #4
    b2ec:	0d080105 	stfeqs	f0, [r8, #-20]	; 0xffffffec
    b2f0:	05000006 	streq	r0, [r0, #-6]
    b2f4:	042a0502 	strteq	r0, [sl], #-1282	; 0xfffffafe
    b2f8:	02050000 	andeq	r0, r5, #0
    b2fc:	00082807 	andeq	r2, r8, r7, lsl #16
    b300:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    b304:	0000032d 	andeq	r0, r0, sp, lsr #6
    b308:	0002ef06 	andeq	lr, r2, r6, lsl #30
    b30c:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
    b310:	00000277 	andeq	r0, r0, r7, ror r2
    b314:	c3070405 	movwgt	r0, #29701	; 0x7405
    b318:	05000000 	streq	r0, [r0, #-0]
    b31c:	03280508 			; <UNDEFINED> instruction: 0x03280508
    b320:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    b324:	0000be07 	andeq	fp, r0, r7, lsl #28
    b328:	05040700 	streq	r0, [r4, #-1792]	; 0xfffff900
    b32c:	00746e69 	rsbseq	r6, r4, r9, ror #28
    b330:	c8070405 	stmdagt	r7, {r0, r2, sl}
    b334:	06000000 	streq	r0, [r0], -r0
    b338:	00000078 	andeq	r0, r0, r8, ror r0
    b33c:	43131803 	tstmi	r3, #196608	; 0x30000
    b340:	06000002 	streq	r0, [r0], -r2
    b344:	000002f1 	strdeq	r0, [r0], -r1
    b348:	6b143003 	blvs	51735c <_Min_Heap_Size+0x516b5c>
    b34c:	08000002 	stmdaeq	r0, {r1}
    b350:	000002a6 	andeq	r0, r0, r6, lsr #5
    b354:	0002b209 	andeq	fp, r2, r9, lsl #4
    b358:	04100a00 	ldreq	r0, [r0], #-2560	; 0xfffff600
    b35c:	070902fc 			; <UNDEFINED> instruction: 0x070902fc
    b360:	0b000003 	bleq	b374 <_Min_Heap_Size+0xab74>
    b364:	0000220e 	andeq	r2, r0, lr, lsl #4
    b368:	1202fe04 	andne	pc, r2, #4, 28	; 0x40
    b36c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b370:	0b002302 	bleq	13f80 <_Min_Heap_Size+0x13780>
    b374:	0000207c 	andeq	r2, r0, ip, ror r0
    b378:	1202ff04 	andne	pc, r2, #4, 30
    b37c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b380:	0c042302 	stceq	3, cr2, [r4], {2}
    b384:	004c4156 	subeq	r4, ip, r6, asr r1
    b388:	12030004 	andne	r0, r3, #4
    b38c:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b390:	0b082302 	bleq	213fa0 <_Min_Heap_Size+0x2137a0>
    b394:	00001fdf 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    b398:	12030104 	andne	r0, r3, #4, 2
    b39c:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    b3a0:	000c2302 	andeq	r2, ip, r2, lsl #6
    b3a4:	001f8a0d 	andseq	r8, pc, sp, lsl #20
    b3a8:	03020400 	movweq	r0, #9216	; 0x2400
    b3ac:	0002bc03 	andeq	fp, r2, r3, lsl #24
    b3b0:	02a60e00 	adceq	r0, r6, #0, 28
    b3b4:	03240000 			; <UNDEFINED> instruction: 0x03240000
    b3b8:	930f0000 	movwls	r0, #61440	; 0xf000
    b3bc:	01000002 	tsteq	r0, r2
    b3c0:	18c11000 	stmiane	r1, {ip}^
    b3c4:	39090000 	stmdbcc	r9, {}	; <UNPREDICTABLE>
    b3c8:	0002a611 	andeq	sl, r2, r1, lsl r6
    b3cc:	0a010100 	beq	4b7d4 <_Min_Heap_Size+0x4afd4>
    b3d0:	01370510 	teqeq	r7, r0, lsl r5
    b3d4:	00037c09 	andeq	r7, r3, r9, lsl #24
    b3d8:	22c60b00 	sbccs	r0, r6, #0, 22
    b3dc:	39050000 	stmdbcc	r5, {}	; <UNPREDICTABLE>
    b3e0:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    b3e4:	23020000 	movwcs	r0, #8192	; 0x2000
    b3e8:	52430c00 	subpl	r0, r3, #0, 24
    b3ec:	013a0500 	teqeq	sl, r0, lsl #10
    b3f0:	0002b211 	andeq	fp, r2, r1, lsl r2
    b3f4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    b3f8:	00240f0b 	eoreq	r0, r4, fp, lsl #30
    b3fc:	013b0500 	teqeq	fp, r0, lsl #10
    b400:	0002b211 	andeq	fp, r2, r1, lsl r2
    b404:	08230200 	stmdaeq	r3!, {r9}
    b408:	0023c90b 	eoreq	ip, r3, fp, lsl #18
    b40c:	013c0500 	teqeq	ip, r0, lsl #10
    b410:	0002b211 	andeq	fp, r2, r1, lsl r2
    b414:	0c230200 	sfmeq	f0, 4, [r3], #-0
    b418:	24650d00 	strbtcs	r0, [r5], #-3328	; 0xfffff300
    b41c:	3d050000 	stccc	0, cr0, [r5, #-0]
    b420:	03320301 	teqeq	r2, #67108864	; 0x4000000
    b424:	1c0a0000 	stcne	0, cr0, [sl], {-0}
    b428:	09016805 	stmdbeq	r1, {r0, r2, fp, sp, lr}
    b42c:	00000402 	andeq	r0, r0, r2, lsl #8
    b430:	5243410c 	subpl	r4, r3, #12, 2
    b434:	016a0500 	cmneq	sl, r0, lsl #10
    b438:	0002b211 	andeq	fp, r2, r1, lsl r2
    b43c:	00230200 	eoreq	r0, r3, r0, lsl #4
    b440:	0018490b 	andseq	r4, r8, fp, lsl #18
    b444:	016b0500 	cmneq	fp, r0, lsl #10
    b448:	0002b211 	andeq	fp, r2, r1, lsl r2
    b44c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    b450:	0018460b 	andseq	r4, r8, fp, lsl #12
    b454:	016c0500 	cmneq	ip, r0, lsl #10
    b458:	0002b211 	andeq	fp, r2, r1, lsl r2
    b45c:	08230200 	stmdaeq	r3!, {r9}
    b460:	0052530c 	subseq	r5, r2, ip, lsl #6
    b464:	11016d05 	tstne	r1, r5, lsl #26
    b468:	000002b2 			; <UNDEFINED> instruction: 0x000002b2
    b46c:	0c0c2302 	stceq	3, cr2, [ip], {2}
    b470:	05005243 	streq	r5, [r0, #-579]	; 0xfffffdbd
    b474:	b211016e 	andslt	r0, r1, #-2147483621	; 0x8000001b
    b478:	02000002 	andeq	r0, r0, #2
    b47c:	2b0b1023 	blcs	2cf510 <_Min_Heap_Size+0x2ced10>
    b480:	05000018 	streq	r0, [r0, #-24]	; 0xffffffe8
    b484:	b211016f 	andslt	r0, r1, #-1073741797	; 0xc000001b
    b488:	02000002 	andeq	r0, r0, #2
    b48c:	5d0b1423 	cfstrspl	mvf1, [fp, #-140]	; 0xffffff74
    b490:	05000018 	streq	r0, [r0, #-24]	; 0xffffffe8
    b494:	b2110170 	andslt	r0, r1, #112, 2
    b498:	02000002 	andeq	r0, r0, #2
    b49c:	0d001823 	stceq	8, cr1, [r0, #-140]	; 0xffffff74
    b4a0:	00001831 	andeq	r1, r0, r1, lsr r8
    b4a4:	03017105 	movweq	r7, #4357	; 0x1105
    b4a8:	00000389 	andeq	r0, r0, r9, lsl #7
    b4ac:	f405880a 	vst2.8	{d8-d9}, [r5], sl
    b4b0:	05fb0901 	ldrbeq	r0, [fp, #2305]!	; 0x901
    b4b4:	430c0000 	movwmi	r0, #49152	; 0xc000
    b4b8:	f6050052 			; <UNDEFINED> instruction: 0xf6050052
    b4bc:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    b4c0:	23020000 	movwcs	r0, #8192	; 0x2000
    b4c4:	02b40b00 	adcseq	r0, r4, #0, 22
    b4c8:	f7050000 			; <UNDEFINED> instruction: 0xf7050000
    b4cc:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    b4d0:	23020000 	movwcs	r0, #8192	; 0x2000
    b4d4:	02b70b04 	adcseq	r0, r7, #4, 22	; 0x1000
    b4d8:	f8050000 			; <UNDEFINED> instruction: 0xf8050000
    b4dc:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    b4e0:	23020000 	movwcs	r0, #8192	; 0x2000
    b4e4:	49430c08 	stmdbmi	r3, {r3, sl, fp}^
    b4e8:	f9050052 			; <UNDEFINED> instruction: 0xf9050052
    b4ec:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    b4f0:	23020000 	movwcs	r0, #8192	; 0x2000
    b4f4:	018f0b0c 	orreq	r0, pc, ip, lsl #22
    b4f8:	fa050000 	blx	14b500 <_Min_Heap_Size+0x14ad00>
    b4fc:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    b500:	23020000 	movwcs	r0, #8192	; 0x2000
    b504:	07b00b10 			; <UNDEFINED> instruction: 0x07b00b10
    b508:	fb050000 	blx	14b512 <_Min_Heap_Size+0x14ad12>
    b50c:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    b510:	23020000 	movwcs	r0, #8192	; 0x2000
    b514:	07150b14 			; <UNDEFINED> instruction: 0x07150b14
    b518:	fc050000 	stc2	0, cr0, [r5], {-0}
    b51c:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    b520:	23020000 	movwcs	r0, #8192	; 0x2000
    b524:	05a80b18 	streq	r0, [r8, #2840]!	; 0xb18
    b528:	fd050000 	stc2	0, cr0, [r5, #-0]
    b52c:	02a61101 	adceq	r1, r6, #1073741824	; 0x40000000
    b530:	23020000 	movwcs	r0, #8192	; 0x2000
    b534:	05930b1c 	ldreq	r0, [r3, #2844]	; 0xb1c
    b538:	fe050000 	cdp2	0, 0, cr0, cr5, cr0, {0}
    b53c:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    b540:	23020000 	movwcs	r0, #8192	; 0x2000
    b544:	022d0b20 	eoreq	r0, sp, #32, 22	; 0x8000
    b548:	ff050000 			; <UNDEFINED> instruction: 0xff050000
    b54c:	02b21101 	adcseq	r1, r2, #1073741824	; 0x40000000
    b550:	23020000 	movwcs	r0, #8192	; 0x2000
    b554:	05b20b24 	ldreq	r0, [r2, #2852]!	; 0xb24
    b558:	00050000 	andeq	r0, r5, r0
    b55c:	03141102 	tsteq	r4, #-2147483648	; 0x80000000
    b560:	23020000 	movwcs	r0, #8192	; 0x2000
    b564:	09150b28 	ldmdbeq	r5, {r3, r5, r8, r9, fp}
    b568:	01050000 	mrseq	r0, (UNDEF: 5)
    b56c:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    b570:	23020000 	movwcs	r0, #8192	; 0x2000
    b574:	08200b30 	stmdaeq	r0!, {r4, r5, r8, r9, fp}
    b578:	02050000 	andeq	r0, r5, #0
    b57c:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    b580:	23020000 	movwcs	r0, #8192	; 0x2000
    b584:	052e0b34 	streq	r0, [lr, #-2868]!	; 0xfffff4cc
    b588:	03050000 	movweq	r0, #20480	; 0x5000
    b58c:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    b590:	23020000 	movwcs	r0, #8192	; 0x2000
    b594:	05bc0b38 	ldreq	r0, [ip, #2872]!	; 0xb38
    b598:	04050000 	streq	r0, [r5], #-0
    b59c:	02a61102 	adceq	r1, r6, #-2147483648	; 0x80000000
    b5a0:	23020000 	movwcs	r0, #8192	; 0x2000
    b5a4:	07500b3c 	smmlareq	r0, ip, fp, r0
    b5a8:	05050000 	streq	r0, [r5, #-0]
    b5ac:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    b5b0:	23020000 	movwcs	r0, #8192	; 0x2000
    b5b4:	070d0b40 	streq	r0, [sp, -r0, asr #22]
    b5b8:	06050000 	streq	r0, [r5], -r0
    b5bc:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    b5c0:	23020000 	movwcs	r0, #8192	; 0x2000
    b5c4:	05c60b44 	strbeq	r0, [r6, #2884]	; 0xb44
    b5c8:	07050000 	streq	r0, [r5, -r0]
    b5cc:	03141102 	tsteq	r4, #-2147483648	; 0x80000000
    b5d0:	23020000 	movwcs	r0, #8192	; 0x2000
    b5d4:	01540b48 	cmpeq	r4, r8, asr #22
    b5d8:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    b5dc:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    b5e0:	23020000 	movwcs	r0, #8192	; 0x2000
    b5e4:	05680b50 	strbeq	r0, [r8, #-2896]!	; 0xfffff4b0
    b5e8:	09050000 	stmdbeq	r5, {}	; <UNPREDICTABLE>
    b5ec:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    b5f0:	23020000 	movwcs	r0, #8192	; 0x2000
    b5f4:	06db0b54 			; <UNDEFINED> instruction: 0x06db0b54
    b5f8:	0a050000 	beq	14b600 <_Min_Heap_Size+0x14ae00>
    b5fc:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    b600:	23020000 	movwcs	r0, #8192	; 0x2000
    b604:	05d00b58 	ldrbeq	r0, [r0, #2904]	; 0xb58
    b608:	0b050000 	bleq	14b610 <_Min_Heap_Size+0x14ae10>
    b60c:	02a61102 	adceq	r1, r6, #-2147483648	; 0x80000000
    b610:	23020000 	movwcs	r0, #8192	; 0x2000
    b614:	001b0b5c 	andseq	r0, fp, ip, asr fp
    b618:	0c050000 	stceq	0, cr0, [r5], {-0}
    b61c:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    b620:	23020000 	movwcs	r0, #8192	; 0x2000
    b624:	041b0b60 	ldreq	r0, [fp], #-2912	; 0xfffff4a0
    b628:	0d050000 	stceq	0, cr0, [r5, #-0]
    b62c:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    b630:	23020000 	movwcs	r0, #8192	; 0x2000
    b634:	05da0b64 	ldrbeq	r0, [sl, #2916]	; 0xb64
    b638:	0e050000 	cdpeq	0, 0, cr0, cr5, cr0, {0}
    b63c:	03141102 	tsteq	r4, #-2147483648	; 0x80000000
    b640:	23020000 	movwcs	r0, #8192	; 0x2000
    b644:	08b10b68 	ldmeq	r1!, {r3, r5, r6, r8, r9, fp}
    b648:	0f050000 	svceq	0x00050000
    b64c:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    b650:	23020000 	movwcs	r0, #8192	; 0x2000
    b654:	53430c70 	movtpl	r0, #15472	; 0x3c70
    b658:	10050052 	andne	r0, r5, r2, asr r0
    b65c:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    b660:	23020000 	movwcs	r0, #8192	; 0x2000
    b664:	05e40b74 	strbeq	r0, [r4, #2932]!	; 0xb74
    b668:	11050000 	mrsne	r0, (UNDEF: 5)
    b66c:	03141102 	tsteq	r4, #-2147483648	; 0x80000000
    b670:	23020000 	movwcs	r0, #8192	; 0x2000
    b674:	08800b78 	stmeq	r0, {r3, r4, r5, r6, r8, r9, fp}
    b678:	12050000 	andne	r0, r5, #0
    b67c:	02b21102 	adcseq	r1, r2, #-2147483648	; 0x80000000
    b680:	23030000 	movwcs	r0, #12288	; 0x3000
    b684:	ae0b0180 	adfge<illegal precision>	f0, f3, f0
    b688:	05000003 	streq	r0, [r0, #-3]
    b68c:	b2110213 	andslt	r0, r1, #805306369	; 0x30000001
    b690:	03000002 	movweq	r0, #2
    b694:	00018423 	andeq	r8, r1, r3, lsr #8
    b698:	0002010d 	andeq	r0, r2, sp, lsl #2
    b69c:	02140500 	andseq	r0, r4, #0, 10
    b6a0:	00040f03 	andeq	r0, r4, r3, lsl #30
    b6a4:	01070200 	mrseq	r0, (UNDEF: 39)
    b6a8:	0000024f 	andeq	r0, r0, pc, asr #4
    b6ac:	2301bf06 	movwcs	fp, #7942	; 0x1f06
    b6b0:	04000006 	streq	r0, [r0], #-6
    b6b4:	00001855 	andeq	r1, r0, r5, asr r8
    b6b8:	183f0400 	ldmdane	pc!, {sl}	; <UNPREDICTABLE>
    b6bc:	00010000 	andeq	r0, r1, r0
    b6c0:	58040805 	stmdapl	r4, {r0, r2, fp}
    b6c4:	02000007 	andeq	r0, r0, #7
    b6c8:	024f0107 	subeq	r0, pc, #-1073741823	; 0xc0000001
    b6cc:	27070000 	strcs	r0, [r7, -r0]
    b6d0:	00065101 	andeq	r5, r6, r1, lsl #2
    b6d4:	03770400 	cmneq	r7, #0, 8
    b6d8:	04000000 	streq	r0, [r0], #-0
    b6dc:	00000746 	andeq	r0, r0, r6, asr #14
    b6e0:	094a0401 	stmdbeq	sl, {r0, sl}^
    b6e4:	04020000 	streq	r0, [r2], #-0
    b6e8:	00000358 	andeq	r0, r0, r8, asr r3
    b6ec:	c1060003 	tstgt	r6, r3
    b6f0:	07000013 	smladeq	r0, r3, r0, r0
    b6f4:	062a032c 	strteq	r0, [sl], -ip, lsr #6
    b6f8:	07020000 	streq	r0, [r2, -r0]
    b6fc:	00024f01 	andeq	r4, r2, r1, lsl #30
    b700:	01320800 	teqeq	r2, r0, lsl #16
    b704:	00000684 	andeq	r0, r0, r4, lsl #13
    b708:	00230a04 	eoreq	r0, r3, r4, lsl #20
    b70c:	4a046400 	bmi	124714 <_Min_Heap_Size+0x123f14>
    b710:	0a000023 	beq	b7a4 <_Min_Heap_Size+0xafa4>
    b714:	00239904 	eoreq	r9, r3, r4, lsl #18
    b718:	ea040100 	b	10bb20 <_Min_Heap_Size+0x10b320>
    b71c:	01000023 	tsteq	r0, r3, lsr #32
    b720:	22950600 	addscs	r0, r5, #0, 12
    b724:	37080000 	strcc	r0, [r8, -r0]
    b728:	00065d03 	andeq	r5, r6, r3, lsl #26
    b72c:	23921000 	orrscs	r1, r2, #0
    b730:	cc080000 	stcgt	0, cr0, [r8], {-0}
    b734:	0002b216 	andeq	fp, r2, r6, lsl r2
    b738:	10010100 	andne	r0, r1, r0, lsl #2
    b73c:	000018e9 	andeq	r1, r0, r9, ror #17
    b740:	a611cd08 	ldrge	ip, [r1], -r8, lsl #26
    b744:	01000002 	tsteq	r0, r2
    b748:	23871001 	orrcs	r1, r7, #1
    b74c:	ce080000 	cdpgt	0, 0, cr0, cr8, cr0, {0}
    b750:	0006841c 	andeq	r8, r6, ip, lsl r4
    b754:	11010100 	mrsne	r0, (UNDEF: 17)
    b758:	00000690 	muleq	r0, r0, r6
    b75c:	050f5e01 	streq	r5, [pc, #-3585]	; a963 <_Min_Heap_Size+0xa163>
    b760:	0080e003 	addeq	lr, r0, r3
    b764:	069e1120 	ldreq	r1, [lr], r0, lsr #2
    b768:	5f010000 	svcpl	0x00010000
    b76c:	0403050a 	streq	r0, [r3], #-1290	; 0xfffffaf6
    b770:	11200000 			; <UNDEFINED> instruction: 0x11200000
    b774:	000006ac 	andeq	r0, r0, ip, lsr #13
    b778:	05156001 	ldreq	r6, [r5, #-1]
    b77c:	00000003 	andeq	r0, r0, r3
    b780:	cd011220 	sfmgt	f1, 4, [r1, #-128]	; 0xffffff80
    b784:	01000022 	tsteq	r0, r2, lsr #32
    b788:	010a0233 	tsteq	sl, r3, lsr r2
    b78c:	000002a6 	andeq	r0, r0, r6, lsr #5
	...
    b798:	01007d02 	tsteq	r0, r2, lsl #26
    b79c:	23dd0112 	bicscs	r0, sp, #-2147483644	; 0x80000004
    b7a0:	2a010000 	bcs	4b7a8 <_Min_Heap_Size+0x4afa8>
    b7a4:	a6010a02 	strge	r0, [r1], -r2, lsl #20
    b7a8:	00000002 	andeq	r0, r0, r2
    b7ac:	00000000 	andeq	r0, r0, r0
    b7b0:	02000000 	andeq	r0, r0, #0
    b7b4:	1201007d 	andne	r0, r1, #125	; 0x7d
    b7b8:	0023d001 	eoreq	sp, r3, r1
    b7bc:	02210100 	eoreq	r0, r1, #0, 2
    b7c0:	02a6010a 	adceq	r0, r6, #-2147483646	; 0x80000002
	...
    b7cc:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b7d0:	01130100 	tsteq	r3, r0, lsl #2
    b7d4:	000024ed 	andeq	r2, r0, sp, ror #9
    b7d8:	06021801 	streq	r1, [r2], -r1, lsl #16
    b7dc:	00000001 	andeq	r0, r0, r1
    b7e0:	00000000 	andeq	r0, r0, r0
    b7e4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b7e8:	9e011301 	cdpls	3, 0, cr1, cr1, cr1, {0}
    b7ec:	01000024 	tsteq	r0, r4, lsr #32
    b7f0:	0106020d 	tsteq	r6, sp, lsl #4
	...
    b7fc:	01007d02 	tsteq	r0, r2, lsl #26
    b800:	24160113 	ldrcs	r0, [r6], #-275	; 0xfffffeed
    b804:	02010000 	andeq	r0, r1, #0
    b808:	00010602 	andeq	r0, r1, r2, lsl #12
    b80c:	00000000 	andeq	r0, r0, r0
    b810:	02000000 	andeq	r0, r0, #0
    b814:	1301007d 	movwne	r0, #4221	; 0x107d
    b818:	0022da01 	eoreq	sp, r2, r1, lsl #20
    b81c:	01f90100 	mvnseq	r0, r0, lsl #2
    b820:	00000106 	andeq	r0, r0, r6, lsl #2
    b824:	00000000 	andeq	r0, r0, r0
    b828:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b82c:	01130100 	tsteq	r3, r0, lsl #2
    b830:	0000235e 	andeq	r2, r0, lr, asr r3
    b834:	0601f001 	streq	pc, [r1], -r1
    b838:	00000001 	andeq	r0, r0, r1
    b83c:	00000000 	andeq	r0, r0, r0
    b840:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b844:	ac011301 	stcge	3, cr1, [r1], {1}
    b848:	01000023 	tsteq	r0, r3, lsr #32
    b84c:	010601e7 	smlatteq	r6, r7, r1, r0
	...
    b858:	01007d02 	tsteq	r0, r2, lsl #26
    b85c:	232b0113 			; <UNDEFINED> instruction: 0x232b0113
    b860:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    b864:	00010601 	andeq	r0, r1, r1, lsl #12
    b868:	00000000 	andeq	r0, r0, r0
    b86c:	02000000 	andeq	r0, r0, #0
    b870:	1301007d 	movwne	r0, #4221	; 0x107d
    b874:	00244701 	eoreq	r4, r4, r1, lsl #14
    b878:	01d50100 	bicseq	r0, r5, r0, lsl #2
    b87c:	00000106 	andeq	r0, r0, r6, lsl #2
    b880:	00000000 	andeq	r0, r0, r0
    b884:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b888:	01120100 	tsteq	r2, r0, lsl #2
    b88c:	00002509 	andeq	r2, r0, r9, lsl #10
    b890:	0a01cc01 	beq	7e89c <_Min_Heap_Size+0x7e09c>
    b894:	0002a601 	andeq	sl, r2, r1, lsl #12
	...
    b8a0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b8a4:	74011201 	strvc	r1, [r1], #-513	; 0xfffffdff
    b8a8:	01000024 	tsteq	r0, r4, lsr #32
    b8ac:	010a01c3 	smlabteq	sl, r3, r1, r0
    b8b0:	000002a6 	andeq	r0, r0, r6, lsr #5
	...
    b8bc:	01007d02 	tsteq	r0, r2, lsl #26
    b8c0:	22830112 	addcs	r0, r3, #-2147483644	; 0x80000004
    b8c4:	ba010000 	blt	4b8cc <_Min_Heap_Size+0x4b0cc>
    b8c8:	a6010a01 	strge	r0, [r1], -r1, lsl #20
    b8cc:	00000002 	andeq	r0, r0, r2
    b8d0:	00000000 	andeq	r0, r0, r0
    b8d4:	02000000 	andeq	r0, r0, #0
    b8d8:	1301007d 	movwne	r0, #4221	; 0x107d
    b8dc:	00240001 	eoreq	r0, r4, r1
    b8e0:	01b00100 	lslseq	r0, r0, #2
    b8e4:	0000010d 	andeq	r0, r0, sp, lsl #2
    b8e8:	00000000 	andeq	r0, r0, r0
    b8ec:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b8f0:	01130100 	tsteq	r3, r0, lsl #2
    b8f4:	00002437 	andeq	r2, r0, r7, lsr r4
    b8f8:	0d01a001 	stceq	0, cr10, [r1, #-4]
    b8fc:	00000001 	andeq	r0, r0, r1
    b900:	00000000 	andeq	r0, r0, r0
    b904:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    b908:	84011401 	strhi	r1, [r1], #-1025	; 0xfffffbff
    b90c:	01000007 	tsteq	r0, r7
    b910:	010d0186 	smlabbeq	sp, r6, r1, r0
    b914:	08001664 	stmdaeq	r0, {r2, r5, r6, r9, sl, ip}
    b918:	0800168c 	stmdaeq	r0, {r2, r3, r7, r9, sl, ip}
    b91c:	00007855 	andeq	r7, r0, r5, asr r8
    b920:	0008da01 	andeq	sp, r8, r1, lsl #20
    b924:	07881500 	streq	r1, [r8, r0, lsl #10]
    b928:	86010000 	strhi	r0, [r1], -r0
    b92c:	02a62001 	adceq	r2, r6, #1
    b930:	787b0000 	ldmdavc	fp!, {}^	; <UNPREDICTABLE>
    b934:	78750000 	ldmdavc	r5!, {}^	; <UNPREDICTABLE>
    b938:	0c160000 	ldceq	0, cr0, [r6], {-0}
    b93c:	01000016 	tsteq	r0, r6, lsl r0
    b940:	a60c0188 	strge	r0, [ip], -r8, lsl #3
    b944:	ab000002 	blge	b954 <_Min_Heap_Size+0xb154>
    b948:	a7000078 	smlsdxge	r0, r8, r0, r0
    b94c:	16000078 			; <UNDEFINED> instruction: 0x16000078
    b950:	00004dd6 	ldrdeq	r4, [r0], -r6
    b954:	0c018901 			; <UNDEFINED> instruction: 0x0c018901
    b958:	000002a6 	andeq	r0, r0, r6, lsr #5
    b95c:	000078cb 	andeq	r7, r0, fp, asr #17
    b960:	000078c9 	andeq	r7, r0, r9, asr #17
    b964:	00166c17 	andseq	r6, r6, r7, lsl ip
    b968:	00099708 	andeq	r9, r9, r8, lsl #14
    b96c:	167e1700 	ldrbtne	r1, [lr], -r0, lsl #14
    b970:	09970800 	ldmibeq	r7, {fp}
    b974:	12000000 	andne	r0, r0, #0
    b978:	00248101 	eoreq	r8, r4, r1, lsl #2
    b97c:	01760100 	cmneq	r6, r0, lsl #2
    b980:	06840115 	pkhbteq	r0, r4, r5, lsl #2
	...
    b98c:	7d020000 	stcvc	0, cr0, [r2, #-0]
    b990:	01180100 	tsteq	r8, r0, lsl #2
    b994:	000022b6 			; <UNDEFINED> instruction: 0x000022b6
    b998:	13015501 	movwne	r5, #5377	; 0x1501
    b99c:	00065101 	andeq	r5, r6, r1, lsl #2
	...
    b9a8:	0078de00 	rsbseq	sp, r8, r0, lsl #28
    b9ac:	097c0100 	ldmdbeq	ip!, {r8}^
    b9b0:	49150000 	ldmdbmi	r5, {}	; <UNPREDICTABLE>
    b9b4:	01000011 	tsteq	r0, r1, lsl r0
    b9b8:	84370155 	ldrthi	r0, [r7], #-341	; 0xfffffeab
    b9bc:	06000006 	streq	r0, [r0], -r6
    b9c0:	fe000079 	mcr2	0, 0, r0, cr0, cr9, {3}
    b9c4:	16000078 			; <UNDEFINED> instruction: 0x16000078
    b9c8:	00001a61 	andeq	r1, r0, r1, ror #20
    b9cc:	15015701 	strne	r5, [r1, #-1793]	; 0xfffff8ff
    b9d0:	00000651 	andeq	r0, r0, r1, asr r6
    b9d4:	00007948 	andeq	r7, r0, r8, asr #18
    b9d8:	00007940 	andeq	r7, r0, r0, asr #18
    b9dc:	00249116 	eoreq	r9, r4, r6, lsl r1
    b9e0:	01580100 	cmpeq	r8, r0, lsl #2
    b9e4:	00068417 	andeq	r8, r6, r7, lsl r4
    b9e8:	00798000 	rsbseq	r8, r9, r0
    b9ec:	00797e00 	rsbseq	r7, r9, r0, lsl #28
    b9f0:	00001900 	andeq	r1, r0, r0, lsl #18
    b9f4:	0ac50000 	beq	ff14b9fc <_estack+0xdf14205c>
    b9f8:	09720000 	ldmdbeq	r2!, {}^	; <UNPREDICTABLE>
    b9fc:	011a0000 	tsteq	sl, r0
    ba00:	00030550 	andeq	r0, r3, r0, asr r5
    ba04:	1a000000 	bne	ba0c <_Min_Heap_Size+0xb20c>
    ba08:	0a035101 	beq	dfe14 <_Min_Heap_Size+0xdf614>
    ba0c:	1700015a 	smlsdne	r0, sl, r1, r0
    ba10:	00000000 	andeq	r0, r0, r0
    ba14:	000009c9 	andeq	r0, r0, r9, asr #19
    ba18:	fa011200 	blx	50220 <_Min_Heap_Size+0x4fa20>
    ba1c:	01000022 	tsteq	r0, r2, lsr #32
    ba20:	010a014c 	tsteq	sl, ip, asr #2
    ba24:	000002a6 	andeq	r0, r0, r6, lsr #5
	...
    ba30:	01007d02 	tsteq	r0, r2, lsl #26
    ba34:	14660112 	strbtne	r0, [r6], #-274	; 0xfffffeee
    ba38:	43010000 	movwmi	r0, #4096	; 0x1000
    ba3c:	a6011101 	strge	r1, [r1], -r1, lsl #2
    ba40:	58000002 	stmdapl	r0, {r1}
    ba44:	64080016 	strvs	r0, [r8], #-22	; 0xffffffea
    ba48:	02080016 	andeq	r0, r8, #22
    ba4c:	1301007d 	movwne	r0, #4221	; 0x107d
    ba50:	000a9001 	andeq	r9, sl, r1
    ba54:	01380100 	teqeq	r8, r0, lsl #2
    ba58:	1640010d 	strbne	r0, [r0], -sp, lsl #2
    ba5c:	16580800 	ldrbne	r0, [r8], -r0, lsl #16
    ba60:	7d020800 	stcvc	8, cr0, [r2, #-0]
    ba64:	011b0100 	tsteq	fp, r0, lsl #2
    ba68:	000018d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    ba6c:	011afd01 	tsteq	sl, r1, lsl #26	; <UNPREDICTABLE>
    ba70:	00000651 	andeq	r0, r0, r1, asr r6
    ba74:	080015c0 	stmdaeq	r0, {r6, r7, r8, sl, ip}
    ba78:	0800160c 	stmdaeq	r0, {r2, r3, r9, sl, ip}
    ba7c:	00007993 	muleq	r0, r3, r9
    ba80:	000a2101 	andeq	r2, sl, r1, lsl #2
    ba84:	22a91c00 	adccs	r1, r9, #0, 24
    ba88:	fd010000 	stc2	0, cr0, [r1, #-0]
    ba8c:	0002a630 	andeq	sl, r2, r0, lsr r6
    ba90:	0079b900 	rsbseq	fp, r9, r0, lsl #18
    ba94:	0079b300 	rsbseq	fp, r9, r0, lsl #6
    ba98:	15dc1700 	ldrbne	r1, [ip, #1792]	; 0x700
    ba9c:	0ad40800 	beq	ff50daa4 <_estack+0xdf504104>
    baa0:	f21d0000 	vhadd.s16	d0, d13, d0
    baa4:	e3080015 	movw	r0, #32789	; 0x8015
    baa8:	1a00000a 	bne	bad8 <_Min_Heap_Size+0xb2d8>
    baac:	09025001 	stmdbeq	r2, {r0, ip, lr}
    bab0:	51011aff 	strdpl	r1, [r1, -pc]
    bab4:	1a007402 	bne	28ac4 <_Min_Heap_Size+0x282c4>
    bab8:	30015201 	andcc	r5, r1, r1, lsl #4
    babc:	011e0000 	tsteq	lr, r0
    bac0:	0000231d 	andeq	r2, r0, sp, lsl r3
    bac4:	010de601 	tsteq	sp, r1, lsl #12
	...
    bad0:	01007d02 	tsteq	r0, r2, lsl #26
    bad4:	110d011e 	tstne	sp, lr, lsl r1
    bad8:	db010000 	blle	4bae0 <_Min_Heap_Size+0x4b2e0>
    badc:	0000010d 	andeq	r0, r0, sp, lsl #2
    bae0:	00000000 	andeq	r0, r0, r0
    bae4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    bae8:	011b0100 	tsteq	fp, r0, lsl #2
    baec:	0000237c 	andeq	r2, r0, ip, ror r3
    baf0:	0113be01 	tsteq	r3, r1, lsl #28
    baf4:	00000651 	andeq	r0, r0, r1, asr r6
	...
    bb00:	000079e5 	andeq	r7, r0, r5, ror #19
    bb04:	000a7601 	andeq	r7, sl, r1, lsl #12
    bb08:	00001700 	andeq	r1, r0, r0, lsl #14
    bb0c:	0a210000 	beq	84bb14 <_Min_Heap_Size+0x84b314>
    bb10:	1b000000 	blne	bb18 <_Min_Heap_Size+0xb318>
    bb14:	00047301 	andeq	r7, r4, r1, lsl #6
    bb18:	139d0100 	orrsne	r0, sp, #0, 2
    bb1c:	00065101 	andeq	r5, r6, r1, lsl #2
    bb20:	00160c00 	andseq	r0, r6, r0, lsl #24
    bb24:	00164008 	andseq	r4, r6, r8
    bb28:	007a0508 	rsbseq	r0, sl, r8, lsl #10
    bb2c:	0ac50100 	beq	ff14bf34 <_estack+0xdf142594>
    bb30:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
    bb34:	f2080016 	vqadd.s8	d0, d8, d6
    bb38:	a800000a 	stmdage	r0, {r1, r3}
    bb3c:	1a00000a 	bne	bb6c <_Min_Heap_Size+0xb36c>
    bb40:	33015001 	movwcc	r5, #4097	; 0x1001
    bb44:	16341900 	ldrtne	r1, [r4], -r0, lsl #18
    bb48:	09c90800 	stmibeq	r9, {fp}^
    bb4c:	0abb0000 	beq	feecbb54 <_estack+0xdeec21b4>
    bb50:	011a0000 	tsteq	sl, r0
    bb54:	003f0150 	eorseq	r0, pc, r0, asr r1	; <UNPREDICTABLE>
    bb58:	00163817 	andseq	r3, r6, r7, lsl r8
    bb5c:	000a3708 	andeq	r3, sl, r8, lsl #14
    bb60:	011f0000 	tsteq	pc, r0
    bb64:	000aaa01 	andeq	sl, sl, r1, lsl #20
    bb68:	000aaa00 	andeq	sl, sl, r0, lsl #20
    bb6c:	01e60a00 	mvneq	r0, r0, lsl #20
    bb70:	01011f08 	tsteq	r1, r8, lsl #30
    bb74:	00001e46 	andeq	r1, r0, r6, asr #28
    bb78:	00001e46 	andeq	r1, r0, r6, asr #28
    bb7c:	0a01090b 	beq	4dfb0 <_Min_Heap_Size+0x4d7b0>
    bb80:	5b01011f 	blpl	4c004 <_Min_Heap_Size+0x4b804>
    bb84:	5b00000f 	blpl	bbc8 <_Min_Heap_Size+0xb3c8>
    bb88:	0b00000f 	bleq	bbcc <_Min_Heap_Size+0xb3cc>
    bb8c:	1f060105 	svcne	0x00060105
    bb90:	212b0101 			; <UNDEFINED> instruction: 0x212b0101
    bb94:	212b0000 			; <UNDEFINED> instruction: 0x212b0000
    bb98:	040b0000 	streq	r0, [fp], #-0
    bb9c:	af000601 	svcge	0x00000601
    bba0:	02000005 	andeq	r0, r0, #5
    bba4:	00192c00 	andseq	r2, r9, r0, lsl #24
    bba8:	21010400 	tstcs	r1, r0, lsl #8
    bbac:	0c000006 	stceq	0, cr0, [r0], {6}
    bbb0:	00002516 	andeq	r2, r0, r6, lsl r5
    bbb4:	000004e9 	andeq	r0, r0, r9, ror #9
    bbb8:	00000690 	muleq	r0, r0, r6
	...
    bbc4:	000086cd 	andeq	r8, r0, sp, asr #13
    bbc8:	0f060102 	svceq	0x00060102
    bbcc:	03000006 	movweq	r0, #6
    bbd0:	00000076 	andeq	r0, r0, r6, ror r0
    bbd4:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
    bbd8:	02000000 	andeq	r0, r0, #0
    bbdc:	060d0801 	streq	r0, [sp], -r1, lsl #16
    bbe0:	02020000 	andeq	r0, r2, #0
    bbe4:	00042a05 	andeq	r2, r4, r5, lsl #20
    bbe8:	07020200 	streq	r0, [r2, -r0, lsl #4]
    bbec:	00000828 	andeq	r0, r0, r8, lsr #16
    bbf0:	2d050402 	cfstrscs	mvf0, [r5, #-8]
    bbf4:	03000003 	movweq	r0, #3
    bbf8:	000002ef 	andeq	r0, r0, pc, ror #5
    bbfc:	64194f02 	ldrvs	r4, [r9], #-3842	; 0xfffff0fe
    bc00:	02000000 	andeq	r0, r0, #0
    bc04:	00c30704 	sbceq	r0, r3, r4, lsl #14
    bc08:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    bc0c:	00032805 	andeq	r2, r3, r5, lsl #16
    bc10:	07080200 	streq	r0, [r8, -r0, lsl #4]
    bc14:	000000be 	strheq	r0, [r0], -lr
    bc18:	69050404 	stmdbvs	r5, {r2, sl}
    bc1c:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    bc20:	00c80704 	sbceq	r0, r8, r4, lsl #14
    bc24:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    bc28:	03000000 	movweq	r0, #0
    bc2c:	00301318 	eorseq	r1, r0, r8, lsl r3
    bc30:	87050000 	strhi	r0, [r5, -r0]
    bc34:	06000000 	streq	r0, [r0], -r0
    bc38:	00000087 	andeq	r0, r0, r7, lsl #1
    bc3c:	0002f103 	andeq	pc, r2, r3, lsl #2
    bc40:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    bc44:	00000058 	andeq	r0, r0, r8, asr r0
    bc48:	00009d05 	andeq	r9, r0, r5, lsl #26
    bc4c:	00a90600 	adceq	r0, r9, r0, lsl #12
    bc50:	8c070000 	stchi	0, cr0, [r7], {-0}
    bc54:	0901bd04 	stmdbeq	r1, {r2, r8, sl, fp, ip, sp, pc}
    bc58:	0000020f 	andeq	r0, r0, pc, lsl #4
    bc5c:	00011c08 	andeq	r1, r1, r8, lsl #24
    bc60:	01bf0400 			; <UNDEFINED> instruction: 0x01bf0400
    bc64:	0000ae12 	andeq	sl, r0, r2, lsl lr
    bc68:	00230200 	eoreq	r0, r3, r0, lsl #4
    bc6c:	0003b908 	andeq	fp, r3, r8, lsl #18
    bc70:	01c00400 	biceq	r0, r0, r0, lsl #8
    bc74:	0000a912 	andeq	sl, r0, r2, lsl r9
    bc78:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    bc7c:	00037e08 	andeq	r7, r3, r8, lsl #28
    bc80:	01c10400 	biceq	r0, r1, r0, lsl #8
    bc84:	0000a912 	andeq	sl, r0, r2, lsl r9
    bc88:	08230200 	stmdaeq	r3!, {r9}
    bc8c:	0003d208 	andeq	sp, r3, r8, lsl #4
    bc90:	01c20400 	biceq	r0, r2, r0, lsl #8
    bc94:	0000a912 	andeq	sl, r0, r2, lsl r9
    bc98:	0c230200 	sfmeq	f0, 4, [r3], #-0
    bc9c:	52435309 	subpl	r5, r3, #603979776	; 0x24000000
    bca0:	01c30400 	biceq	r0, r3, r0, lsl #8
    bca4:	0000a912 	andeq	sl, r0, r2, lsl r9
    bca8:	10230200 	eorne	r0, r3, r0, lsl #4
    bcac:	52434309 	subpl	r4, r3, #603979776	; 0x24000000
    bcb0:	01c40400 	biceq	r0, r4, r0, lsl #8
    bcb4:	0000a912 	andeq	sl, r0, r2, lsl r9
    bcb8:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    bcbc:	50485309 	subpl	r5, r8, r9, lsl #6
    bcc0:	01c50400 	biceq	r0, r5, r0, lsl #8
    bcc4:	00021f12 	andeq	r1, r2, r2, lsl pc
    bcc8:	18230200 	stmdane	r3!, {r9}
    bccc:	00061b08 	andeq	r1, r6, r8, lsl #22
    bcd0:	01c60400 	biceq	r0, r6, r0, lsl #8
    bcd4:	0000a912 	andeq	sl, r0, r2, lsl r9
    bcd8:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    bcdc:	0004d808 	andeq	sp, r4, r8, lsl #16
    bce0:	01c70400 	biceq	r0, r7, r0, lsl #8
    bce4:	0000a912 	andeq	sl, r0, r2, lsl r9
    bce8:	28230200 	stmdacs	r3!, {r9}
    bcec:	00095b08 	andeq	r5, r9, r8, lsl #22
    bcf0:	01c80400 	biceq	r0, r8, r0, lsl #8
    bcf4:	0000a912 	andeq	sl, r0, r2, lsl r9
    bcf8:	2c230200 	sfmcs	f0, 4, [r3], #-0
    bcfc:	0003d808 	andeq	sp, r3, r8, lsl #16
    bd00:	01c90400 	biceq	r0, r9, r0, lsl #8
    bd04:	0000a912 	andeq	sl, r0, r2, lsl r9
    bd08:	30230200 	eorcc	r0, r3, r0, lsl #4
    bd0c:	0003f608 	andeq	pc, r3, r8, lsl #12
    bd10:	01ca0400 	biceq	r0, sl, r0, lsl #8
    bd14:	0000a912 	andeq	sl, r0, r2, lsl r9
    bd18:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    bd1c:	0002ce08 	andeq	ip, r2, r8, lsl #28
    bd20:	01cb0400 	biceq	r0, fp, r0, lsl #8
    bd24:	0000a912 	andeq	sl, r0, r2, lsl r9
    bd28:	38230200 	stmdacc	r3!, {r9}
    bd2c:	00080808 	andeq	r0, r8, r8, lsl #16
    bd30:	01cc0400 	biceq	r0, ip, r0, lsl #8
    bd34:	0000a912 	andeq	sl, r0, r2, lsl r9
    bd38:	3c230200 	sfmcc	f0, 4, [r3], #-0
    bd3c:	52465009 	subpl	r5, r6, #9
    bd40:	01cd0400 	biceq	r0, sp, r0, lsl #8
    bd44:	00023912 	andeq	r3, r2, r2, lsl r9
    bd48:	40230200 	eormi	r0, r3, r0, lsl #4
    bd4c:	52464409 	subpl	r4, r6, #150994944	; 0x9000000
    bd50:	01ce0400 	biceq	r0, lr, r0, lsl #8
    bd54:	0000ae12 	andeq	sl, r0, r2, lsl lr
    bd58:	48230200 	stmdami	r3!, {r9}
    bd5c:	52444109 	subpl	r4, r4, #1073741826	; 0x40000002
    bd60:	01cf0400 	biceq	r0, pc, r0, lsl #8
    bd64:	0000ae12 	andeq	sl, r0, r2, lsl lr
    bd68:	4c230200 	sfmmi	f0, 4, [r3], #-0
    bd6c:	00042508 	andeq	r2, r4, r8, lsl #10
    bd70:	01d00400 	bicseq	r0, r0, r0, lsl #8
    bd74:	00025312 	andeq	r5, r2, r2, lsl r3
    bd78:	50230200 	eorpl	r0, r3, r0, lsl #4
    bd7c:	00017708 	andeq	r7, r1, r8, lsl #14
    bd80:	01d10400 	bicseq	r0, r1, r0, lsl #8
    bd84:	00026d12 	andeq	r6, r2, r2, lsl sp
    bd88:	60230200 	eorvs	r0, r3, r0, lsl #4
    bd8c:	0005a808 	andeq	sl, r5, r8, lsl #16
    bd90:	01d20400 	bicseq	r0, r2, r0, lsl #8
    bd94:	00027212 	andeq	r7, r2, r2, lsl r2
    bd98:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    bd9c:	0005a208 	andeq	sl, r5, r8, lsl #4
    bda0:	01d30400 	bicseq	r0, r3, r0, lsl #8
    bda4:	0000a912 	andeq	sl, r0, r2, lsl r9
    bda8:	88230300 	stmdahi	r3!, {r8, r9}
    bdac:	930a0001 	movwls	r0, #40961	; 0xa001
    bdb0:	1f000000 	svcne	0x00000000
    bdb4:	0b000002 	bleq	bdc4 <_Min_Heap_Size+0xb5c4>
    bdb8:	00000080 	andeq	r0, r0, r0, lsl #1
    bdbc:	0f05000b 	svceq	0x0005000b
    bdc0:	0a000002 	beq	bdd0 <_Min_Heap_Size+0xb5d0>
    bdc4:	000000ae 	andeq	r0, r0, lr, lsr #1
    bdc8:	00000234 	andeq	r0, r0, r4, lsr r2
    bdcc:	0000800b 	andeq	r8, r0, fp
    bdd0:	06000100 	streq	r0, [r0], -r0, lsl #2
    bdd4:	00000224 	andeq	r0, r0, r4, lsr #4
    bdd8:	00023405 	andeq	r3, r2, r5, lsl #8
    bddc:	00ae0a00 	adceq	r0, lr, r0, lsl #20
    bde0:	024e0000 	subeq	r0, lr, #0
    bde4:	800b0000 	andhi	r0, fp, r0
    bde8:	03000000 	movweq	r0, #0
    bdec:	023e0600 	eorseq	r0, lr, #0, 12
    bdf0:	4e050000 	cdpmi	0, 0, cr0, cr5, cr0, {0}
    bdf4:	0a000002 	beq	be04 <_Min_Heap_Size+0xb604>
    bdf8:	000000ae 	andeq	r0, r0, lr, lsr #1
    bdfc:	00000268 	andeq	r0, r0, r8, ror #4
    be00:	0000800b 	andeq	r8, r0, fp
    be04:	06000400 	streq	r0, [r0], -r0, lsl #8
    be08:	00000258 	andeq	r0, r0, r8, asr r2
    be0c:	00026805 	andeq	r6, r2, r5, lsl #16
    be10:	009d0a00 	addseq	r0, sp, r0, lsl #20
    be14:	02820000 	addeq	r0, r2, #0
    be18:	800b0000 	andhi	r0, fp, r0
    be1c:	04000000 	streq	r0, [r0], #-0
    be20:	03180c00 	tsteq	r8, #0, 24
    be24:	d4040000 	strle	r0, [r4], #-0
    be28:	00b30301 	adcseq	r0, r3, r1, lsl #6
    be2c:	9d0a0000 	stcls	0, cr0, [sl, #-0]
    be30:	9f000000 	svcls	0x00000000
    be34:	0b000002 	bleq	be44 <_Min_Heap_Size+0xb644>
    be38:	00000080 	andeq	r0, r0, r0, lsl #1
    be3c:	c10d0001 	tstgt	sp, r1
    be40:	05000018 	streq	r0, [r0, #-24]	; 0xffffffe8
    be44:	009d1139 	addseq	r1, sp, r9, lsr r1
    be48:	01010000 	mrseq	r0, (UNDEF: 1)
    be4c:	0000980a 	andeq	r9, r0, sl, lsl #16
    be50:	0002bd00 	andeq	fp, r2, r0, lsl #26
    be54:	00800b00 	addeq	r0, r0, r0, lsl #22
    be58:	000f0000 	andeq	r0, pc, r0
    be5c:	0002ad06 	andeq	sl, r2, r6, lsl #26
    be60:	18810d00 	stmne	r1, {r8, sl, fp}
    be64:	3b050000 	blcc	14be6c <_Min_Heap_Size+0x14b66c>
    be68:	0002bd17 	andeq	fp, r2, r7, lsl sp
    be6c:	0a010100 	beq	4c274 <_Min_Heap_Size+0x4ba74>
    be70:	00000098 	muleq	r0, r8, r0
    be74:	000002e0 	andeq	r0, r0, r0, ror #5
    be78:	0000800b 	andeq	r8, r0, fp
    be7c:	06000700 	streq	r0, [r0], -r0, lsl #14
    be80:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    be84:	00181d0d 	andseq	r1, r8, sp, lsl #26
    be88:	173c0500 	ldrne	r0, [ip, -r0, lsl #10]!
    be8c:	000002e0 	andeq	r0, r0, r0, ror #5
    be90:	88070101 	stmdahi	r7, {r0, r8}
    be94:	0901f406 	stmdbeq	r1, {r1, r2, sl, ip, sp, lr, pc}
    be98:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    be9c:	00524309 	subseq	r4, r2, r9, lsl #6
    bea0:	1101f606 	tstne	r1, r6, lsl #12	; <UNPREDICTABLE>
    bea4:	000000a9 	andeq	r0, r0, r9, lsr #1
    bea8:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    beac:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
    beb0:	1101f706 	tstne	r1, r6, lsl #14	; <UNPREDICTABLE>
    beb4:	000000a9 	andeq	r0, r0, r9, lsr #1
    beb8:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    bebc:	000002b7 			; <UNDEFINED> instruction: 0x000002b7
    bec0:	1101f806 	tstne	r1, r6, lsl #16	; <UNPREDICTABLE>
    bec4:	000000a9 	andeq	r0, r0, r9, lsr #1
    bec8:	09082302 	stmdbeq	r8, {r1, r8, r9, sp}
    becc:	00524943 	subseq	r4, r2, r3, asr #18
    bed0:	1101f906 	tstne	r1, r6, lsl #18	; <UNPREDICTABLE>
    bed4:	000000a9 	andeq	r0, r0, r9, lsr #1
    bed8:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    bedc:	0000018f 	andeq	r0, r0, pc, lsl #3
    bee0:	1101fa06 	tstne	r1, r6, lsl #20	; <UNPREDICTABLE>
    bee4:	000000a9 	andeq	r0, r0, r9, lsr #1
    bee8:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    beec:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
    bef0:	1101fb06 	tstne	r1, r6, lsl #22	; <UNPREDICTABLE>
    bef4:	000000a9 	andeq	r0, r0, r9, lsr #1
    bef8:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    befc:	00000715 	andeq	r0, r0, r5, lsl r7
    bf00:	1101fc06 	tstne	r1, r6, lsl #24	; <UNPREDICTABLE>
    bf04:	000000a9 	andeq	r0, r0, r9, lsr #1
    bf08:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
    bf0c:	000005a8 	andeq	r0, r0, r8, lsr #11
    bf10:	1101fd06 	tstne	r1, r6, lsl #26	; <UNPREDICTABLE>
    bf14:	0000009d 	muleq	r0, sp, r0
    bf18:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    bf1c:	00000593 	muleq	r0, r3, r5
    bf20:	1101fe06 	tstne	r1, r6, lsl #28	; <UNPREDICTABLE>
    bf24:	000000a9 	andeq	r0, r0, r9, lsr #1
    bf28:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    bf2c:	0000022d 	andeq	r0, r0, sp, lsr #4
    bf30:	1101ff06 	tstne	r1, r6, lsl #30	; <UNPREDICTABLE>
    bf34:	000000a9 	andeq	r0, r0, r9, lsr #1
    bf38:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    bf3c:	000005b2 			; <UNDEFINED> instruction: 0x000005b2
    bf40:	11020006 	tstne	r2, r6
    bf44:	0000028f 	andeq	r0, r0, pc, lsl #5
    bf48:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
    bf4c:	00000915 	andeq	r0, r0, r5, lsl r9
    bf50:	11020106 	tstne	r2, r6, lsl #2
    bf54:	000000a9 	andeq	r0, r0, r9, lsr #1
    bf58:	08302302 	ldmdaeq	r0!, {r1, r8, r9, sp}
    bf5c:	00000820 	andeq	r0, r0, r0, lsr #16
    bf60:	11020206 	tstne	r2, r6, lsl #4
    bf64:	000000a9 	andeq	r0, r0, r9, lsr #1
    bf68:	08342302 	ldmdaeq	r4!, {r1, r8, r9, sp}
    bf6c:	0000052e 	andeq	r0, r0, lr, lsr #10
    bf70:	11020306 	tstne	r2, r6, lsl #6
    bf74:	000000a9 	andeq	r0, r0, r9, lsr #1
    bf78:	08382302 	ldmdaeq	r8!, {r1, r8, r9, sp}
    bf7c:	000005bc 			; <UNDEFINED> instruction: 0x000005bc
    bf80:	11020406 	tstne	r2, r6, lsl #8
    bf84:	0000009d 	muleq	r0, sp, r0
    bf88:	083c2302 	ldmdaeq	ip!, {r1, r8, r9, sp}
    bf8c:	00000750 	andeq	r0, r0, r0, asr r7
    bf90:	11020506 	tstne	r2, r6, lsl #10
    bf94:	000000a9 	andeq	r0, r0, r9, lsr #1
    bf98:	08402302 	stmdaeq	r0, {r1, r8, r9, sp}^
    bf9c:	0000070d 	andeq	r0, r0, sp, lsl #14
    bfa0:	11020606 	tstne	r2, r6, lsl #12
    bfa4:	000000a9 	andeq	r0, r0, r9, lsr #1
    bfa8:	08442302 	stmdaeq	r4, {r1, r8, r9, sp}^
    bfac:	000005c6 	andeq	r0, r0, r6, asr #11
    bfb0:	11020706 	tstne	r2, r6, lsl #14
    bfb4:	0000028f 	andeq	r0, r0, pc, lsl #5
    bfb8:	08482302 	stmdaeq	r8, {r1, r8, r9, sp}^
    bfbc:	00000154 	andeq	r0, r0, r4, asr r1
    bfc0:	11020806 	tstne	r2, r6, lsl #16
    bfc4:	000000a9 	andeq	r0, r0, r9, lsr #1
    bfc8:	08502302 	ldmdaeq	r0, {r1, r8, r9, sp}^
    bfcc:	00000568 	andeq	r0, r0, r8, ror #10
    bfd0:	11020906 	tstne	r2, r6, lsl #18
    bfd4:	000000a9 	andeq	r0, r0, r9, lsr #1
    bfd8:	08542302 	ldmdaeq	r4, {r1, r8, r9, sp}^
    bfdc:	000006db 	ldrdeq	r0, [r0], -fp
    bfe0:	11020a06 	tstne	r2, r6, lsl #20
    bfe4:	000000a9 	andeq	r0, r0, r9, lsr #1
    bfe8:	08582302 	ldmdaeq	r8, {r1, r8, r9, sp}^
    bfec:	000005d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    bff0:	11020b06 	tstne	r2, r6, lsl #22
    bff4:	0000009d 	muleq	r0, sp, r0
    bff8:	085c2302 	ldmdaeq	ip, {r1, r8, r9, sp}^
    bffc:	0000001b 	andeq	r0, r0, fp, lsl r0
    c000:	11020c06 	tstne	r2, r6, lsl #24
    c004:	000000a9 	andeq	r0, r0, r9, lsr #1
    c008:	08602302 	stmdaeq	r0!, {r1, r8, r9, sp}^
    c00c:	0000041b 	andeq	r0, r0, fp, lsl r4
    c010:	11020d06 	tstne	r2, r6, lsl #26
    c014:	000000a9 	andeq	r0, r0, r9, lsr #1
    c018:	08642302 	stmdaeq	r4!, {r1, r8, r9, sp}^
    c01c:	000005da 	ldrdeq	r0, [r0], -sl
    c020:	11020e06 	tstne	r2, r6, lsl #28
    c024:	0000028f 	andeq	r0, r0, pc, lsl #5
    c028:	08682302 	stmdaeq	r8!, {r1, r8, r9, sp}^
    c02c:	000008b1 			; <UNDEFINED> instruction: 0x000008b1
    c030:	11020f06 	tstne	r2, r6, lsl #30
    c034:	000000a9 	andeq	r0, r0, r9, lsr #1
    c038:	09702302 	ldmdbeq	r0!, {r1, r8, r9, sp}^
    c03c:	00525343 	subseq	r5, r2, r3, asr #6
    c040:	11021006 	tstne	r2, r6
    c044:	000000a9 	andeq	r0, r0, r9, lsr #1
    c048:	08742302 	ldmdaeq	r4!, {r1, r8, r9, sp}^
    c04c:	000005e4 	andeq	r0, r0, r4, ror #11
    c050:	11021106 	tstne	r2, r6, lsl #2
    c054:	0000028f 	andeq	r0, r0, pc, lsl #5
    c058:	08782302 	ldmdaeq	r8!, {r1, r8, r9, sp}^
    c05c:	00000880 	andeq	r0, r0, r0, lsl #17
    c060:	11021206 	tstne	r2, r6, lsl #4
    c064:	000000a9 	andeq	r0, r0, r9, lsr #1
    c068:	01802303 	orreq	r2, r0, r3, lsl #6
    c06c:	0003ae08 	andeq	sl, r3, r8, lsl #28
    c070:	02130600 	andseq	r0, r3, #0, 12
    c074:	0000a911 	andeq	sl, r0, r1, lsl r9
    c078:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    c07c:	010c0001 	tsteq	ip, r1
    c080:	06000002 	streq	r0, [r0], -r2
    c084:	f3030214 	vqsub.u8	d0, d3, d4
    c088:	02000002 	andeq	r0, r0, #2
    c08c:	07580408 	ldrbeq	r0, [r8, -r8, lsl #8]
    c090:	9f0e0000 	svcls	0x000e0000
    c094:	01000002 	tsteq	r0, r2
    c098:	03050a89 	movweq	r0, #23177	; 0x5a89
    c09c:	20000008 	andcs	r0, r0, r8
    c0a0:	0002c20e 	andeq	ip, r2, lr, lsl #4
    c0a4:	0f8a0100 	svceq	0x008a0100
    c0a8:	00000305 	andeq	r0, r0, r5, lsl #6
    c0ac:	e50e0000 	str	r0, [lr, #-0]
    c0b0:	01000002 	tsteq	r0, r2
    c0b4:	03050f8b 	movweq	r0, #24459	; 0x5f8b
    c0b8:	080045d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, lr}
    c0bc:	254a010f 	strbcs	r0, [sl, #-271]	; 0xfffffef1
    c0c0:	dc010000 	stcle	0, cr0, [r1], {-0}
    c0c4:	00000106 	andeq	r0, r0, r6, lsl #2
    c0c8:	00000000 	andeq	r0, r0, r0
    c0cc:	7d020000 	stcvc	0, cr0, [r2, #-0]
    c0d0:	059c0100 	ldreq	r0, [ip, #256]	; 0x100
    c0d4:	74100000 	ldrvc	r0, [r0], #-0
    c0d8:	0100706d 	tsteq	r0, sp, rrx
    c0dc:	009d0cde 			; <UNDEFINED> instruction: 0x009d0cde
    c0e0:	7a310000 	bvc	c4c0e8 <_Min_Heap_Size+0xc4b8e8>
    c0e4:	7a250000 	bvc	94c0ec <_Min_Heap_Size+0x94b8ec>
    c0e8:	4e110000 	cdpmi	0, 1, cr0, cr1, cr0, {0}
    c0ec:	01000018 	tsteq	r0, r8, lsl r0
    c0f0:	009d15de 			; <UNDEFINED> instruction: 0x009d15de
    c0f4:	7a860000 	bvc	fe18c0fc <_estack+0xde18275c>
    c0f8:	7a7c0000 	bvc	1f0c100 <_Min_Heap_Size+0x1f0b900>
    c0fc:	0a110000 	beq	44c104 <_Min_Heap_Size+0x44b904>
    c100:	01000018 	tsteq	r0, r8, lsl r0
    c104:	009d21de 			; <UNDEFINED> instruction: 0x009d21de
    c108:	7ad00000 	bvc	ff40c110 <_estack+0xdf402770>
    c10c:	7ac80000 	bvc	ff20c114 <_estack+0xdf202774>
    c110:	35110000 	ldrcc	r0, [r1, #-0]
    c114:	01000025 	tsteq	r0, r5, lsr #32
    c118:	009d2bde 			; <UNDEFINED> instruction: 0x009d2bde
    c11c:	7b0d0000 	blvc	34c124 <_Min_Heap_Size+0x34b924>
    c120:	7b070000 	blvc	1cc128 <_Min_Heap_Size+0x1cb928>
    c124:	f4110000 			; <UNDEFINED> instruction: 0xf4110000
    c128:	01000018 	tsteq	r0, r8, lsl r0
    c12c:	009d3ade 			; <UNDEFINED> instruction: 0x009d3ade
    c130:	7b470000 	blvc	11cc138 <_Min_Heap_Size+0x11cb938>
    c134:	7b3f0000 	blvc	fcc13c <_Min_Heap_Size+0xfcb93c>
    c138:	12000000 	andne	r0, r0, #0
    c13c:	00253f01 	eoreq	r3, r5, r1, lsl #30
    c140:	06a70100 	strteq	r0, [r7], r0, lsl #2
    c144:	00168c01 	andseq	r8, r6, r1, lsl #24
    c148:	0016a008 	andseq	sl, r6, r8
    c14c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    c150:	08ae0001 	stmiaeq	lr!, {r0}
    c154:	00020000 	andeq	r0, r2, r0
    c158:	00001a47 	andeq	r1, r0, r7, asr #20
    c15c:	06210104 	strteq	r0, [r1], -r4, lsl #2
    c160:	860c0000 	strhi	r0, [ip], -r0
    c164:	e9000026 	stmdb	r0, {r1, r2, r5}
    c168:	a8000004 	stmdage	r0, {r2}
    c16c:	00000006 	andeq	r0, r0, r6
    c170:	00000000 	andeq	r0, r0, r0
    c174:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    c178:	02000089 	andeq	r0, r0, #137	; 0x89
    c17c:	060f0601 	streq	r0, [pc], -r1, lsl #12
    c180:	01020000 	mrseq	r0, (UNDEF: 2)
    c184:	00060d08 	andeq	r0, r6, r8, lsl #26
    c188:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    c18c:	0000042a 	andeq	r0, r0, sl, lsr #8
    c190:	00078e03 	andeq	r8, r7, r3, lsl #28
    c194:	19390300 	ldmdbne	r9!, {r8, r9}
    c198:	0000004a 	andeq	r0, r0, sl, asr #32
    c19c:	28070202 	stmdacs	r7, {r1, r9}
    c1a0:	02000008 	andeq	r0, r0, #8
    c1a4:	032d0504 			; <UNDEFINED> instruction: 0x032d0504
    c1a8:	ef030000 	svc	0x00030000
    c1ac:	03000002 	movweq	r0, #2
    c1b0:	0064194f 	rsbeq	r1, r4, pc, asr #18
    c1b4:	04020000 	streq	r0, [r2], #-0
    c1b8:	0000c307 	andeq	ip, r0, r7, lsl #6
    c1bc:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    c1c0:	00000328 	andeq	r0, r0, r8, lsr #6
    c1c4:	be070802 	cdplt	8, 0, cr0, cr7, cr2, {0}
    c1c8:	04000000 	streq	r0, [r0], #-0
    c1cc:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    c1d0:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    c1d4:	0000c807 	andeq	ip, r0, r7, lsl #16
    c1d8:	00800500 	addeq	r0, r0, r0, lsl #10
    c1dc:	16030000 	strne	r0, [r3], -r0
    c1e0:	0400004e 	streq	r0, [r0], #-78	; 0xffffffb2
    c1e4:	008017d1 	ldrdeq	r1, [r0], r1	; <UNPREDICTABLE>
    c1e8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    c1ec:	00075804 	andeq	r5, r7, r4, lsl #16
    c1f0:	08010200 	stmdaeq	r1, {r9}
    c1f4:	00000616 	andeq	r0, r0, r6, lsl r6
    c1f8:	00079003 	andeq	r9, r7, r3
    c1fc:	14240500 	strtne	r0, [r4], #-1280	; 0xfffffb00
    c200:	0000003e 	andeq	r0, r0, lr, lsr r0
    c204:	0002f103 	andeq	pc, r2, r3, lsl #2
    c208:	14300500 	ldrtne	r0, [r0], #-1280	; 0xfffffb00
    c20c:	00000058 	andeq	r0, r0, r8, asr r0
    c210:	00265803 	eoreq	r5, r6, r3, lsl #16
    c214:	23280600 			; <UNDEFINED> instruction: 0x23280600
    c218:	000000ca 	andeq	r0, r0, sl, asr #1
    c21c:	0026ee06 	eoreq	lr, r6, r6, lsl #28
    c220:	29062000 	stmdbcs	r6, {sp}
    c224:	00014a08 	andeq	r4, r1, r8, lsl #20
    c228:	30720700 	rsbscc	r0, r2, r0, lsl #14
    c22c:	122a0600 	eorne	r0, sl, #0, 12
    c230:	00000080 	andeq	r0, r0, r0, lsl #1
    c234:	07002302 	streq	r2, [r0, -r2, lsl #6]
    c238:	06003172 			; <UNDEFINED> instruction: 0x06003172
    c23c:	0080122b 	addeq	r1, r0, fp, lsr #4
    c240:	23020000 	movwcs	r0, #8192	; 0x2000
    c244:	32720704 	rsbscc	r0, r2, #4, 14	; 0x100000
    c248:	122c0600 	eorne	r0, ip, #0, 12
    c24c:	00000080 	andeq	r0, r0, r0, lsl #1
    c250:	07082302 	streq	r2, [r8, -r2, lsl #6]
    c254:	06003372 			; <UNDEFINED> instruction: 0x06003372
    c258:	0080122d 	addeq	r1, r0, sp, lsr #4
    c25c:	23020000 	movwcs	r0, #8192	; 0x2000
    c260:	3172070c 	cmncc	r2, ip, lsl #14
    c264:	2e060032 	mcrcs	0, 0, r0, cr6, cr2, {1}
    c268:	00008012 	andeq	r8, r0, r2, lsl r0
    c26c:	10230200 	eorne	r0, r3, r0, lsl #4
    c270:	00726c07 	rsbseq	r6, r2, r7, lsl #24
    c274:	80122f06 	andshi	r2, r2, r6, lsl #30
    c278:	02000000 	andeq	r0, r0, #0
    c27c:	70071423 	andvc	r1, r7, r3, lsr #8
    c280:	30060063 	andcc	r0, r6, r3, rrx
    c284:	00008012 	andeq	r8, r0, r2, lsl r0
    c288:	18230200 	stmdane	r3!, {r9}
    c28c:	72737007 	rsbsvc	r7, r3, #7
    c290:	12310600 	eorsne	r0, r1, #0, 12
    c294:	00000080 	andeq	r0, r0, r0, lsl #1
    c298:	001c2302 	andseq	r2, ip, r2, lsl #6
    c29c:	00261403 	eoreq	r1, r6, r3, lsl #8
    c2a0:	23340600 	teqcs	r4, #0, 12
    c2a4:	00000156 	andeq	r0, r0, r6, asr r1
    c2a8:	00263906 	eoreq	r3, r6, r6, lsl #18
    c2ac:	35062000 	strcc	r2, [r6, #-0]
    c2b0:	0001d608 	andeq	sp, r1, r8, lsl #12
    c2b4:	34720700 	ldrbtcc	r0, [r2], #-1792	; 0xfffff900
    c2b8:	12360600 	eorsne	r0, r6, #0, 12
    c2bc:	00000080 	andeq	r0, r0, r0, lsl #1
    c2c0:	07002302 	streq	r2, [r0, -r2, lsl #6]
    c2c4:	06003572 			; <UNDEFINED> instruction: 0x06003572
    c2c8:	00801237 	addeq	r1, r0, r7, lsr r2
    c2cc:	23020000 	movwcs	r0, #8192	; 0x2000
    c2d0:	36720704 	ldrbtcc	r0, [r2], -r4, lsl #14
    c2d4:	12380600 	eorsne	r0, r8, #0, 12
    c2d8:	00000080 	andeq	r0, r0, r0, lsl #1
    c2dc:	07082302 	streq	r2, [r8, -r2, lsl #6]
    c2e0:	06003772 			; <UNDEFINED> instruction: 0x06003772
    c2e4:	00801239 	addeq	r1, r0, r9, lsr r2
    c2e8:	23020000 	movwcs	r0, #8192	; 0x2000
    c2ec:	3872070c 	ldmdacc	r2!, {r2, r3, r8, r9, sl}^
    c2f0:	123a0600 	eorsne	r0, sl, #0, 12
    c2f4:	00000080 	andeq	r0, r0, r0, lsl #1
    c2f8:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    c2fc:	06003972 			; <UNDEFINED> instruction: 0x06003972
    c300:	0080123b 	addeq	r1, r0, fp, lsr r2
    c304:	23020000 	movwcs	r0, #8192	; 0x2000
    c308:	31720714 	cmncc	r2, r4, lsl r7
    c30c:	3c060030 	stccc	0, cr0, [r6], {48}	; 0x30
    c310:	00008012 	andeq	r8, r0, r2, lsl r0
    c314:	18230200 	stmdane	r3!, {r9}
    c318:	31317207 	teqcc	r1, r7, lsl #4
    c31c:	123d0600 	eorsne	r0, sp, #0, 12
    c320:	00000080 	andeq	r0, r0, r0, lsl #1
    c324:	001c2302 	andseq	r2, ip, r2, lsl #6
    c328:	00257b03 	eoreq	r7, r5, r3, lsl #22
    c32c:	1c400600 	mcrrne	6, 0, r0, r0, cr0
    c330:	000001e2 	andeq	r0, r0, r2, ror #3
    c334:	00264c06 	eoreq	r4, r6, r6, lsl #24
    c338:	41064000 	mrsmi	r4, (UNDEF: 6)
    c33c:	00020e08 	andeq	r0, r2, r8, lsl #28
    c340:	26450800 	strbcs	r0, [r5], -r0, lsl #16
    c344:	42060000 	andmi	r0, r6, #0
    c348:	00014a1a 	andeq	r4, r1, sl, lsl sl
    c34c:	00230200 	eoreq	r0, r3, r0, lsl #4
    c350:	0026fa08 	eoreq	pc, r6, r8, lsl #20
    c354:	1a430600 	bne	10cdb5c <_Min_Heap_Size+0x10cd35c>
    c358:	000000be 	strheq	r0, [r0], -lr
    c35c:	00202302 	eoreq	r2, r0, r2, lsl #6
    c360:	00256009 	eoreq	r6, r5, r9
    c364:	151d0100 	ldrne	r0, [sp, #-256]	; 0xffffff00
    c368:	00000080 	andeq	r0, r0, r0, lsl #1
    c36c:	01090101 	tsteq	r9, r1, lsl #2
    c370:	01000027 	tsteq	r0, r7, lsr #32
    c374:	0080151e 	addeq	r1, r0, lr, lsl r5
    c378:	01010000 	mrseq	r0, (UNDEF: 1)
    c37c:	0025c409 	eoreq	ip, r5, r9, lsl #8
    c380:	151f0100 	ldrne	r0, [pc, #-256]	; c288 <_Min_Heap_Size+0xba88>
    c384:	00000080 	andeq	r0, r0, r0, lsl #1
    c388:	bc090101 	stflts	f0, [r9], {1}
    c38c:	01000025 	tsteq	r0, r5, lsr #32
    c390:	00801520 	addeq	r1, r0, r0, lsr #10
    c394:	01010000 	mrseq	r0, (UNDEF: 1)
    c398:	00266d0a 	eoreq	r6, r6, sl, lsl #26
    c39c:	17710100 	ldrbne	r0, [r1, -r0, lsl #2]!
    c3a0:	00000087 	andeq	r0, r0, r7, lsl #1
    c3a4:	e4030501 	str	r0, [r3], #-1281	; 0xfffffaff
    c3a8:	0a200081 	beq	80c5b4 <_Min_Heap_Size+0x80bdb4>
    c3ac:	00002589 	andeq	r2, r0, r9, lsl #11
    c3b0:	87177201 	ldrhi	r7, [r7, -r1, lsl #4]
    c3b4:	01000000 	mrseq	r0, (UNDEF: 0)
    c3b8:	81e80305 	mvnhi	r0, r5, lsl #6
    c3bc:	010b2000 	mrseq	r2, (UNDEF: 11)
    c3c0:	000025a2 	andeq	r2, r0, r2, lsr #11
    c3c4:	0e010c01 	cdpeq	12, 0, cr0, cr1, cr1, {0}
    c3c8:	00008001 	andeq	r8, r0, r1
	...
    c3d4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    c3d8:	cc010c01 	stcgt	12, cr0, [r1], {1}
    c3dc:	01000025 	tsteq	r0, r5, lsr #32
    c3e0:	010e0108 	tsteq	lr, r8, lsl #2
    c3e4:	00000080 	andeq	r0, r0, r0, lsl #1
	...
    c3f0:	01007d02 	tsteq	r0, r2, lsl #26
    c3f4:	000002cb 	andeq	r0, r0, fp, asr #5
    c3f8:	0008670d 	andeq	r6, r8, sp, lsl #14
    c3fc:	00000000 	andeq	r0, r0, r0
    c400:	00000200 	andeq	r0, r0, r0, lsl #4
    c404:	00000000 	andeq	r0, r0, r0
    c408:	09010000 	stmdbeq	r1, {}	; <UNPREDICTABLE>
    c40c:	7a0e0c01 	bvc	38f418 <_Min_Heap_Size+0x38ec18>
    c410:	7f000008 	svcvc	0x00000008
    c414:	7d00007b 	stcvc	0, cr0, [r0, #-492]	; 0xfffffe14
    c418:	0000007b 	andeq	r0, r0, fp, ror r0
    c41c:	f8010f00 			; <UNDEFINED> instruction: 0xf8010f00
    c420:	01000025 	tsteq	r0, r5, lsr #32
    c424:	790105dc 	stmdbvc	r1, {r2, r3, r4, r6, r7, r8, sl}
    c428:	6c000000 	stcvs	0, cr0, [r0], {-0}
    c42c:	e8080017 	stmda	r8, {r0, r1, r2, r4}
    c430:	92080017 	andls	r0, r8, #23
    c434:	0100007b 	tsteq	r0, fp, ror r0
    c438:	000003a5 	andeq	r0, r0, r5, lsr #7
    c43c:	0026b410 	eoreq	fp, r6, r0, lsl r4
    c440:	28dc0100 	ldmcs	ip, {r8}^
    c444:	000003a5 	andeq	r0, r0, r5, lsr #7
    c448:	00007bba 			; <UNDEFINED> instruction: 0x00007bba
    c44c:	00007bb2 			; <UNDEFINED> instruction: 0x00007bb2
    c450:	004e6810 	subeq	r6, lr, r0, lsl r8
    c454:	37dc0100 	ldrbcc	r0, [ip, r0, lsl #2]
    c458:	0000008c 	andeq	r0, r0, ip, lsl #1
    c45c:	00007bf9 	strdeq	r7, [r0], -r9
    c460:	00007bf1 	strdeq	r7, [r0], -r1
    c464:	0025da10 	eoreq	sp, r5, r0, lsl sl
    c468:	4bdc0100 	blmi	ff70c870 <_estack+0xdf702ed0>
    c46c:	000003a5 	andeq	r0, r0, r5, lsr #7
    c470:	00007c36 	andeq	r7, r0, r6, lsr ip
    c474:	00007c30 	andeq	r7, r0, r0, lsr ip
    c478:	0025b010 	eoreq	fp, r5, r0, lsl r0
    c47c:	66dc0100 	ldrbvs	r0, [ip], r0, lsl #2
    c480:	000003a5 	andeq	r0, r0, r5, lsr #7
    c484:	00007c6a 	andeq	r7, r0, sl, ror #24
    c488:	00007c62 	andeq	r7, r0, r2, ror #24
    c48c:	001d8e11 	andseq	r8, sp, r1, lsl lr
    c490:	09dd0100 	ldmibeq	sp, {r8}^
    c494:	00000079 	andeq	r0, r0, r9, ror r0
    c498:	00007ca7 	andeq	r7, r0, r7, lsr #25
    c49c:	00007ca1 	andeq	r7, r0, r1, lsr #25
    c4a0:	00637012 	rsbeq	r7, r3, r2, lsl r0
    c4a4:	8012de01 	andshi	sp, r2, r1, lsl #28
    c4a8:	dc000000 	stcle	0, cr0, [r0], {-0}
    c4ac:	d200007c 	andle	r0, r0, #124	; 0x7c
    c4b0:	1200007c 	andne	r0, r0, #124	; 0x7c
    c4b4:	0100706f 	tsteq	r0, pc, rrx
    c4b8:	00801ade 	ldrdeq	r1, [r0], lr
    c4bc:	7d250000 	stcvc	0, cr0, [r5, #-0]
    c4c0:	7d1f0000 	ldcvc	0, cr0, [pc, #-0]	; c4c8 <_Min_Heap_Size+0xbcc8>
    c4c4:	73120000 	tstvc	r2, #0
    c4c8:	de010070 	mcrle	0, 0, r0, cr1, cr0, {3}
    c4cc:	0003a523 	andeq	sl, r3, r3, lsr #10
    c4d0:	007d5600 	rsbseq	r5, sp, r0, lsl #12
    c4d4:	007d5000 	rsbseq	r5, sp, r0
    c4d8:	17ae1300 	strne	r1, [lr, r0, lsl #6]!
    c4dc:	07840800 	streq	r0, [r4, r0, lsl #16]
    c4e0:	039b0000 	orrseq	r0, fp, #0
    c4e4:	01140000 	tsteq	r4, r0
    c4e8:	00790250 	rsbseq	r0, r9, r0, asr r2
    c4ec:	17b21500 	ldrne	r1, [r2, r0, lsl #10]!
    c4f0:	07230800 	streq	r0, [r3, -r0, lsl #16]!
    c4f4:	16000000 	strne	r0, [r0], -r0
    c4f8:	00008004 	andeq	r8, r0, r4
    c4fc:	bb011700 	bllt	52104 <_Min_Heap_Size+0x51904>
    c500:	01000026 	tsteq	r0, r6, lsr #32
    c504:	e80106a1 	stmda	r1, {r0, r5, r7, r9, sl}
    c508:	6c080017 	stcvs	0, cr0, [r8], {23}
    c50c:	81080019 	tsthi	r8, r9, lsl r0
    c510:	0100007d 	tsteq	r0, sp, ror r0
    c514:	000006a2 	andeq	r0, r0, r2, lsr #13
    c518:	0025be10 	eoreq	fp, r5, r0, lsl lr
    c51c:	27a10100 	strcs	r0, [r1, r0, lsl #2]!
    c520:	000003a5 	andeq	r0, r0, r5, lsr #7
    c524:	00007da7 	andeq	r7, r0, r7, lsr #27
    c528:	00007da1 	andeq	r7, r0, r1, lsr #27
    c52c:	00260d10 	eoreq	r0, r6, r0, lsl sp
    c530:	3ba10100 	blcc	fe84c938 <_estack+0xde842f98>
    c534:	00000080 	andeq	r0, r0, r0, lsl #1
    c538:	00007dd7 	ldrdeq	r7, [r0], -r7	; <UNPREDICTABLE>
    c53c:	00007dd3 	ldrdeq	r7, [r0], -r3
    c540:	001d8e11 	andseq	r8, sp, r1, lsl lr
    c544:	09a20100 	stmibeq	r2!, {r8}
    c548:	00000079 	andeq	r0, r0, r9, ror r0
    c54c:	00007dfb 	strdeq	r7, [r0], -fp
    c550:	00007df5 	strdeq	r7, [r0], -r5
    c554:	00259c11 	eoreq	r9, r5, r1, lsl ip
    c558:	14a20100 	strtne	r0, [r2], #256	; 0x100
    c55c:	00000079 	andeq	r0, r0, r9, ror r0
    c560:	00007e2d 	andeq	r7, r0, sp, lsr #28
    c564:	00007e25 	andeq	r7, r0, r5, lsr #28
    c568:	0025e011 	eoreq	lr, r5, r1, lsl r0
    c56c:	13a30100 			; <UNDEFINED> instruction: 0x13a30100
    c570:	000003a5 	andeq	r0, r0, r5, lsr #7
    c574:	00007e8a 	andeq	r7, r0, sl, lsl #29
    c578:	00007e64 	andeq	r7, r0, r4, ror #28
    c57c:	00265218 	eoreq	r5, r6, r8, lsl r2
    c580:	1aa40100 	bne	fe90c988 <_estack+0xde902fe8>
    c584:	000001d6 	ldrdeq	r0, [r0], -r6
    c588:	81ec0305 	mvnhi	r0, r5, lsl #6
    c58c:	b4182000 	ldrlt	r2, [r8], #-0
    c590:	01000026 	tsteq	r0, r6, lsr #32
    c594:	06a219a5 	strteq	r1, [r2], r5, lsr #19
    c598:	03050000 	movweq	r0, #20480	; 0x5000
    c59c:	200080e4 	andcs	r8, r0, r4, ror #1
    c5a0:	00183813 	andseq	r3, r8, r3, lsl r8
    c5a4:	00088808 	andeq	r8, r8, r8, lsl #16
    c5a8:	00046200 	andeq	r6, r4, r0, lsl #4
    c5ac:	50011400 	andpl	r1, r1, r0, lsl #8
    c5b0:	00007702 	andeq	r7, r0, r2, lsl #14
    c5b4:	00183e13 	andseq	r3, r8, r3, lsl lr
    c5b8:	00088808 	andeq	r8, r8, r8, lsl #16
    c5bc:	00047900 	andeq	r7, r4, r0, lsl #18
    c5c0:	50011400 	andpl	r1, r1, r0, lsl #8
    c5c4:	465c0305 	ldrbmi	r0, [ip], -r5, lsl #6
    c5c8:	13000800 	movwne	r0, #2048	; 0x800
    c5cc:	08001844 	stmdaeq	r0, {r2, r6, fp, ip}
    c5d0:	00000888 	andeq	r0, r0, r8, lsl #17
    c5d4:	00000490 	muleq	r0, r0, r4
    c5d8:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    c5dc:	00467c03 	subeq	r7, r6, r3, lsl #24
    c5e0:	4c130008 	ldcmi	0, cr0, [r3], {8}
    c5e4:	95080018 	strls	r0, [r8, #-24]	; 0xffffffe8
    c5e8:	a7000008 	strge	r0, [r0, -r8]
    c5ec:	14000004 	strne	r0, [r0], #-4
    c5f0:	03055001 	movweq	r5, #20481	; 0x5001
    c5f4:	08004690 	stmdaeq	r0, {r4, r7, r9, sl, lr}
    c5f8:	18541300 	ldmdane	r4, {r8, r9, ip}^
    c5fc:	08950800 	ldmeq	r5, {fp}
    c600:	04be0000 	ldrteq	r0, [lr], #0
    c604:	01140000 	tsteq	r4, r0
    c608:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    c60c:	00080046 	andeq	r0, r8, r6, asr #32
    c610:	00185c13 	andseq	r5, r8, r3, lsl ip
    c614:	00089508 	andeq	r9, r8, r8, lsl #10
    c618:	0004d500 	andeq	sp, r4, r0, lsl #10
    c61c:	50011400 	andpl	r1, r1, r0, lsl #8
    c620:	46b80305 	ldrtmi	r0, [r8], r5, lsl #6
    c624:	13000800 	movwne	r0, #2048	; 0x800
    c628:	08001864 	stmdaeq	r0, {r2, r5, r6, fp, ip}
    c62c:	00000895 	muleq	r0, r5, r8
    c630:	000004ec 	andeq	r0, r0, ip, ror #9
    c634:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    c638:	0046cc03 	subeq	ip, r6, r3, lsl #24
    c63c:	6c130008 	ldcvs	0, cr0, [r3], {8}
    c640:	95080018 	strls	r0, [r8, #-24]	; 0xffffffe8
    c644:	03000008 	movweq	r0, #8
    c648:	14000005 	strne	r0, [r0], #-5
    c64c:	03055001 	movweq	r5, #20481	; 0x5001
    c650:	080046e0 	stmdaeq	r0, {r5, r6, r7, r9, sl, lr}
    c654:	18741300 	ldmdane	r4!, {r8, r9, ip}^
    c658:	08950800 	ldmeq	r5, {fp}
    c65c:	051a0000 	ldreq	r0, [sl, #-0]
    c660:	01140000 	tsteq	r4, r0
    c664:	f4030550 	vst3.16	{d0,d2,d4}, [r3 :64], r0
    c668:	00080046 	andeq	r0, r8, r6, asr #32
    c66c:	00187c13 	andseq	r7, r8, r3, lsl ip
    c670:	00089508 	andeq	r9, r8, r8, lsl #10
    c674:	00053100 	andeq	r3, r5, r0, lsl #2
    c678:	50011400 	andpl	r1, r1, r0, lsl #8
    c67c:	47080305 	strmi	r0, [r8, -r5, lsl #6]
    c680:	13000800 	movwne	r0, #2048	; 0x800
    c684:	08001884 	stmdaeq	r0, {r2, r7, fp, ip}
    c688:	00000895 	muleq	r0, r5, r8
    c68c:	00000548 	andeq	r0, r0, r8, asr #10
    c690:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    c694:	00471c03 	subeq	r1, r7, r3, lsl #24
    c698:	8c130008 	ldchi	0, cr0, [r3], {8}
    c69c:	95080018 	strls	r0, [r8, #-24]	; 0xffffffe8
    c6a0:	5f000008 	svcpl	0x00000008
    c6a4:	14000005 	strne	r0, [r0], #-5
    c6a8:	03055001 	movweq	r5, #20481	; 0x5001
    c6ac:	08004730 	stmdaeq	r0, {r4, r5, r8, r9, sl, lr}
    c6b0:	18941300 	ldmne	r4, {r8, r9, ip}
    c6b4:	08950800 	ldmeq	r5, {fp}
    c6b8:	05760000 	ldrbeq	r0, [r6, #-0]!
    c6bc:	01140000 	tsteq	r4, r0
    c6c0:	44030550 	strmi	r0, [r3], #-1360	; 0xfffffab0
    c6c4:	00080047 	andeq	r0, r8, r7, asr #32
    c6c8:	00189c13 	andseq	r9, r8, r3, lsl ip
    c6cc:	00089508 	andeq	r9, r8, r8, lsl #10
    c6d0:	00058d00 	andeq	r8, r5, r0, lsl #26
    c6d4:	50011400 	andpl	r1, r1, r0, lsl #8
    c6d8:	47580305 	ldrbmi	r0, [r8, -r5, lsl #6]
    c6dc:	13000800 	movwne	r0, #2048	; 0x800
    c6e0:	080018a4 	stmdaeq	r0, {r2, r5, r7, fp, ip}
    c6e4:	00000895 	muleq	r0, r5, r8
    c6e8:	000005a4 	andeq	r0, r0, r4, lsr #11
    c6ec:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    c6f0:	00476c03 	subeq	r6, r7, r3, lsl #24
    c6f4:	ac130008 	ldcge	0, cr0, [r3], {8}
    c6f8:	95080018 	strls	r0, [r8, #-24]	; 0xffffffe8
    c6fc:	bb000008 	bllt	c724 <_Min_Heap_Size+0xbf24>
    c700:	14000005 	strne	r0, [r0], #-5
    c704:	03055001 	movweq	r5, #20481	; 0x5001
    c708:	08004780 	stmdaeq	r0, {r7, r8, r9, sl, lr}
    c70c:	18b41300 	ldmne	r4!, {r8, r9, ip}
    c710:	08950800 	ldmeq	r5, {fp}
    c714:	05d20000 	ldrbeq	r0, [r2]
    c718:	01140000 	tsteq	r4, r0
    c71c:	94030550 	strls	r0, [r3], #-1360	; 0xfffffab0
    c720:	00080047 	andeq	r0, r8, r7, asr #32
    c724:	0018bc13 	andseq	fp, r8, r3, lsl ip
    c728:	00089508 	andeq	r9, r8, r8, lsl #10
    c72c:	0005e900 	andeq	lr, r5, r0, lsl #18
    c730:	50011400 	andpl	r1, r1, r0, lsl #8
    c734:	47a80305 	strmi	r0, [r8, r5, lsl #6]!
    c738:	13000800 	movwne	r0, #2048	; 0x800
    c73c:	080018c4 	stmdaeq	r0, {r2, r6, r7, fp, ip}
    c740:	00000895 	muleq	r0, r5, r8
    c744:	00000600 	andeq	r0, r0, r0, lsl #12
    c748:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    c74c:	0047bc03 	subeq	fp, r7, r3, lsl #24
    c750:	ca130008 	bgt	4cc778 <_Min_Heap_Size+0x4cbf78>
    c754:	88080018 	stmdahi	r8, {r3, r4}
    c758:	14000008 	strne	r0, [r0], #-8
    c75c:	14000006 	strne	r0, [r0], #-6
    c760:	77025001 	strvc	r5, [r2, -r1]
    c764:	d0130000 	andsle	r0, r3, r0
    c768:	b2080018 	andlt	r0, r8, #24
    c76c:	28000006 	stmdacs	r0, {r1, r2}
    c770:	14000006 	strne	r0, [r0], #-6
    c774:	76025001 	strvc	r5, [r2], -r1
    c778:	de130000 	cdple	0, 1, cr0, cr3, cr0, {0}
    c77c:	cb080018 	blgt	20c7e4 <_Min_Heap_Size+0x20bfe4>
    c780:	4c000002 	stcmi	0, cr0, [r0], {2}
    c784:	14000006 	strne	r0, [r0], #-6
    c788:	03055001 	movweq	r5, #20481	; 0x5001
    c78c:	200080e4 	andcs	r8, r0, r4, ror #1
    c790:	02510114 	subseq	r0, r1, #20, 2
    c794:	01144008 	tsteq	r4, r8
    c798:	c0750352 	rsbsgt	r0, r5, r2, asr r3
    c79c:	e6130000 	ldr	r0, [r3], -r0
    c7a0:	95080018 	strls	r0, [r8, #-24]	; 0xffffffe8
    c7a4:	63000008 	movwvs	r0, #8
    c7a8:	14000006 	strne	r0, [r0], #-6
    c7ac:	03055001 	movweq	r5, #20481	; 0x5001
    c7b0:	080047d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, lr}
    c7b4:	18ee1300 	stmiane	lr!, {r8, r9, ip}^
    c7b8:	08950800 	ldmeq	r5, {fp}
    c7bc:	067a0000 	ldrbteq	r0, [sl], -r0
    c7c0:	01140000 	tsteq	r4, r0
    c7c4:	e0030550 	and	r0, r3, r0, asr r5
    c7c8:	00080047 	andeq	r0, r8, r7, asr #32
    c7cc:	0018fe13 	andseq	pc, r8, r3, lsl lr	; <UNPREDICTABLE>
    c7d0:	00089508 	andeq	r9, r8, r8, lsl #10
    c7d4:	00069100 	andeq	r9, r6, r0, lsl #2
    c7d8:	50011400 	andpl	r1, r1, r0, lsl #8
    c7dc:	47e00305 	strbmi	r0, [r0, r5, lsl #6]!
    c7e0:	19000800 	stmdbne	r0, {fp}
    c7e4:	0800190a 	stmdaeq	r0, {r1, r3, r8, fp, ip}
    c7e8:	00000888 	andeq	r0, r0, r8, lsl #17
    c7ec:	02500114 	subseq	r0, r0, #20, 2
    c7f0:	00000077 	andeq	r0, r0, r7, ror r0
    c7f4:	0000801a 	andeq	r8, r0, sl, lsl r0
    c7f8:	0006b200 	andeq	fp, r6, r0, lsl #4
    c7fc:	00801b00 	addeq	r1, r0, r0, lsl #22
    c800:	003f0000 	eorseq	r0, pc, r0
    c804:	0026d41c 	eoreq	sp, r6, ip, lsl r4
    c808:	0d990100 	ldfeqs	f0, [r9]
    c80c:	00170401 	andseq	r0, r7, r1, lsl #8
    c810:	00171c08 	andseq	r1, r7, r8, lsl #24
    c814:	007f8c08 	rsbseq	r8, pc, r8, lsl #24
    c818:	07230100 	streq	r0, [r3, -r0, lsl #2]!
    c81c:	d9100000 	ldmdble	r0, {}	; <UNPREDICTABLE>
    c820:	01000026 	tsteq	r0, r6, lsr #32
    c824:	00802a99 	umulleq	r2, r0, r9, sl
    c828:	7fb40000 	svcvc	0x00b40000
    c82c:	7fac0000 	svcvc	0x00ac0000
    c830:	011d0000 	tsteq	sp, r0
    c834:	000026ce 	andeq	r2, r0, lr, asr #13
    c838:	01119c01 	tsteq	r1, r1, lsl #24
    c83c:	0006f501 	andeq	pc, r6, r1, lsl #10
    c840:	00801e00 	addeq	r1, r0, r0, lsl #28
    c844:	13000000 	movwne	r0, #0
    c848:	08001710 	stmdaeq	r0, {r4, r8, r9, sl, ip}
    c84c:	00000895 	muleq	r0, r5, r8
    c850:	00000712 	andeq	r0, r0, r2, lsl r7
    c854:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    c858:	0045dc03 	subeq	sp, r5, r3, lsl #24
    c85c:	51011408 	tstpl	r1, r8, lsl #8
    c860:	00007402 	andeq	r7, r0, r2, lsl #8
    c864:	00171619 	andseq	r1, r7, r9, lsl r6
    c868:	0008a308 	andeq	sl, r8, r8, lsl #6
    c86c:	50011400 	andpl	r1, r1, r0, lsl #8
    c870:	00007402 	andeq	r7, r0, r2, lsl #8
    c874:	25671f00 	strbcs	r1, [r7, #-3840]!	; 0xfffff100
    c878:	8a010000 	bhi	4c880 <_Min_Heap_Size+0x4c080>
    c87c:	077d010d 	ldrbeq	r0, [sp, -sp, lsl #2]!
    c880:	16cc0000 	strbne	r0, [ip], r0
    c884:	17020800 	strne	r0, [r2, -r0, lsl #16]
    c888:	7d020800 	stcvc	8, cr0, [r2, #-0]
    c88c:	077d0100 	ldrbeq	r0, [sp, -r0, lsl #2]!
    c890:	69200000 	stmdbvs	r0!, {}	; <UNPREDICTABLE>
    c894:	0100736e 	tsteq	r0, lr, ror #6
    c898:	00802e8a 	addeq	r2, r0, sl, lsl #29
    c89c:	7fef0000 	svcvc	0x00ef0000
    c8a0:	7feb0000 	svcvc	0x00eb0000
    c8a4:	29110000 	ldmdbcs	r1, {}	; <UNPREDICTABLE>
    c8a8:	01000026 	tsteq	r0, r6, lsr #32
    c8ac:	00a60e8e 	adceq	r0, r6, lr, lsl #29
    c8b0:	80120000 	andshi	r0, r2, r0
    c8b4:	80100000 	andshi	r0, r0, r0
    c8b8:	31110000 	tstcc	r1, r0
    c8bc:	01000026 	tsteq	r0, r6, lsr #32
    c8c0:	00a60e8f 	adceq	r0, r6, pc, lsl #29
    c8c4:	80390000 	eorshi	r0, r9, r0
    c8c8:	80250000 	eorhi	r0, r5, r0
    c8cc:	02000000 	andeq	r0, r0, #0
    c8d0:	26800201 	strcs	r0, [r0], r1, lsl #4
    c8d4:	e6210000 	strt	r0, [r1], -r0
    c8d8:	01000025 	tsteq	r0, r5, lsr #32
    c8dc:	8001157f 	andhi	r1, r1, pc, ror r5
    c8e0:	a0000000 	andge	r0, r0, r0
    c8e4:	cc080016 	stcgt	0, cr0, [r8], {22}
    c8e8:	dc080016 	stcle	0, cr0, [r8], {22}
    c8ec:	01000080 	smlabbeq	r0, r0, r0, r0
    c8f0:	000007f5 	strdeq	r0, [r0], -r5
    c8f4:	00637020 	rsbeq	r7, r3, r0, lsr #32
    c8f8:	80347f01 	eorshi	r7, r4, r1, lsl #30
    c8fc:	0c000000 	stceq	0, cr0, [r0], {-0}
    c900:	08000081 	stmdaeq	r0, {r0, r7}
    c904:	18000081 	stmdane	r0, {r0, r7}
    c908:	00001fd9 	ldrdeq	r1, [r0], -r9
    c90c:	f50e8001 			; <UNDEFINED> instruction: 0xf50e8001
    c910:	02000007 	andeq	r0, r0, #7
    c914:	f1117c91 			; <UNDEFINED> instruction: 0xf1117c91
    c918:	01000025 	tsteq	r0, r5, lsr #32
    c91c:	00801281 	addeq	r1, r0, r1, lsl #5
    c920:	81330000 	teqhi	r3, r0
    c924:	812d0000 			; <UNDEFINED> instruction: 0x812d0000
    c928:	a6220000 	strtge	r0, [r2], -r0
    c92c:	bc080016 	stclt	0, cr0, [r8], {22}
    c930:	12080016 	andne	r0, r8, #22
    c934:	82010069 	andhi	r0, r1, #105	; 0x69
    c938:	0000790e 	andeq	r7, r0, lr, lsl #18
    c93c:	00816800 	addeq	r6, r1, r0, lsl #16
    c940:	00816400 	addeq	r6, r1, r0, lsl #8
    c944:	1a000000 	bne	c94c <_Min_Heap_Size+0xc14c>
    c948:	000000a6 	andeq	r0, r0, r6, lsr #1
    c94c:	00000805 	andeq	r0, r0, r5, lsl #16
    c950:	0000801b 	andeq	r8, r0, fp, lsl r0
    c954:	17000100 	strne	r0, [r0, -r0, lsl #2]
    c958:	00008001 	andeq	r8, r0, r1
    c95c:	06740100 	ldrbteq	r0, [r4], -r0, lsl #2
    c960:	00171c01 	andseq	r1, r7, r1, lsl #24
    c964:	00176c08 	andseq	r6, r7, r8, lsl #24
    c968:	00818708 	addeq	r8, r1, r8, lsl #14
    c96c:	08670100 	stmdaeq	r7!, {r8}^
    c970:	32130000 	andscc	r0, r3, #0
    c974:	95080017 	strls	r0, [r8, #-23]	; 0xffffffe9
    c978:	37000008 	strcc	r0, [r0, -r8]
    c97c:	14000008 	strne	r0, [r0], #-8
    c980:	03055001 	movweq	r5, #20481	; 0x5001
    c984:	080045f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, lr}
    c988:	173e1300 	ldrne	r1, [lr, -r0, lsl #6]!
    c98c:	08950800 	ldmeq	r5, {fp}
    c990:	084e0000 	stmdaeq	lr, {}^	; <UNPREDICTABLE>
    c994:	01140000 	tsteq	r4, r0
    c998:	18030550 	stmdane	r3, {r4, r6, r8, sl}
    c99c:	00080046 	andeq	r0, r8, r6, asr #32
    c9a0:	00174619 	andseq	r4, r7, r9, lsl r6
    c9a4:	00089508 	andeq	r9, r8, r8, lsl #10
    c9a8:	50011400 	andpl	r1, r1, r0, lsl #8
    c9ac:	463c0305 	ldrtmi	r0, [ip], -r5, lsl #6
    c9b0:	01140800 	tsteq	r4, r0, lsl #16
    c9b4:	00310151 	eorseq	r0, r1, r1, asr r1
    c9b8:	26e42300 	strbtcs	r2, [r4], r0, lsl #6
    c9bc:	63020000 	movwvs	r0, #8192	; 0x2000
    c9c0:	b2011f04 	andlt	r1, r1, #4, 30
    c9c4:	03000000 	movweq	r0, #0
    c9c8:	00000888 	andeq	r0, r0, r8, lsl #17
    c9cc:	0017ef24 	andseq	lr, r7, r4, lsr #30
    c9d0:	04650200 	strbteq	r0, [r5], #-512	; 0xfffffe00
    c9d4:	0000b20c 	andeq	fp, r0, ip, lsl #4
    c9d8:	01250000 			; <UNDEFINED> instruction: 0x01250000
    c9dc:	00043e01 	andeq	r3, r4, r1, lsl #28
    c9e0:	00043400 	andeq	r3, r4, r0, lsl #8
    c9e4:	26000800 	strcs	r0, [r0], -r0, lsl #16
    c9e8:	00000101 	andeq	r0, r0, r1, lsl #2
    c9ec:	00000000 	andeq	r0, r0, r0
    c9f0:	c8070000 	stmdagt	r7, {}	; <UNPREDICTABLE>
    c9f4:	01012605 	tsteq	r1, r5, lsl #12
    c9f8:	000026ce 	andeq	r2, r0, lr, asr #13
    c9fc:	000026ce 	andeq	r2, r0, lr, asr #13
    ca00:	00119c01 	andseq	r9, r1, r1, lsl #24
    ca04:	000001be 			; <UNDEFINED> instruction: 0x000001be
    ca08:	1ce40002 	stclne	0, cr0, [r4], #8
    ca0c:	01040000 	mrseq	r0, (UNDEF: 4)
    ca10:	00000621 	andeq	r0, r0, r1, lsr #12
    ca14:	0027080c 	eoreq	r0, r7, ip, lsl #16
    ca18:	0004e900 	andeq	lr, r4, r0, lsl #18
    ca1c:	0006f000 	andeq	pc, r6, r0
	...
    ca28:	008e3b00 	addeq	r3, lr, r0, lsl #22
    ca2c:	06010200 	streq	r0, [r1], -r0, lsl #4
    ca30:	0000060f 	andeq	r0, r0, pc, lsl #12
    ca34:	0d080102 	stfeqs	f0, [r8, #-8]
    ca38:	02000006 	andeq	r0, r0, #6
    ca3c:	042a0502 	strteq	r0, [sl], #-1282	; 0xfffffafe
    ca40:	02020000 	andeq	r0, r2, #0
    ca44:	00082807 	andeq	r2, r8, r7, lsl #16
    ca48:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    ca4c:	0000032d 	andeq	r0, r0, sp, lsr #6
    ca50:	c3070402 	movwgt	r0, #29698	; 0x7402
    ca54:	02000000 	andeq	r0, r0, #0
    ca58:	03280508 			; <UNDEFINED> instruction: 0x03280508
    ca5c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    ca60:	0000be07 	andeq	fp, r0, r7, lsl #28
    ca64:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    ca68:	00746e69 	rsbseq	r6, r4, r9, ror #28
    ca6c:	c8070402 	stmdagt	r7, {r1, sl}
    ca70:	02000000 	andeq	r0, r0, #0
    ca74:	07580408 	ldrbeq	r0, [r8, -r8, lsl #8]
    ca78:	01020000 	mrseq	r0, (UNDEF: 2)
    ca7c:	00061608 	andeq	r1, r6, r8, lsl #12
    ca80:	ce010400 	cfcpysgt	mvf0, mvf1
    ca84:	01000026 	tsteq	r0, r6, lsr #32
    ca88:	6c01060f 	stcvs	6, cr0, [r1], {15}
    ca8c:	f4080019 	vst4.8	{d0-d3}, [r8 :64], r9
    ca90:	a7080019 	smladge	r8, r9, r0, r0
    ca94:	01000081 	smlabbeq	r0, r1, r0, r0
    ca98:	000001a6 	andeq	r0, r0, r6, lsr #3
    ca9c:	0026d905 	eoreq	sp, r6, r5, lsl #18
    caa0:	290f0100 	stmdbcs	pc, {r8}	; <UNPREDICTABLE>
    caa4:	00000068 	andeq	r0, r0, r8, rrx
    caa8:	000081cb 	andeq	r8, r0, fp, asr #3
    caac:	000081c7 	andeq	r8, r0, r7, asr #3
    cab0:	00197606 	andseq	r7, r9, r6, lsl #12
    cab4:	0001a608 	andeq	sl, r1, r8, lsl #12
    cab8:	0000c300 	andeq	ip, r0, r0, lsl #6
    cabc:	50010700 	andpl	r0, r1, r0, lsl #14
    cac0:	47e80305 	strbmi	r0, [r8, r5, lsl #6]!
    cac4:	06000800 	streq	r0, [r0], -r0, lsl #16
    cac8:	0800197c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, fp, ip}
    cacc:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
    cad0:	000000da 	ldrdeq	r0, [r0], -sl
    cad4:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    cad8:	0047ec03 	subeq	lr, r7, r3, lsl #24
    cadc:	88060008 	stmdahi	r6, {r3}
    cae0:	a6080019 			; <UNDEFINED> instruction: 0xa6080019
    cae4:	f1000001 	cps	#1
    cae8:	07000000 	streq	r0, [r0, -r0]
    caec:	03055001 	movweq	r5, #20481	; 0x5001
    caf0:	08004808 	stmdaeq	r0, {r3, fp, lr}
    caf4:	198e0600 	stmibne	lr, {r9, sl}
    caf8:	01b30800 			; <UNDEFINED> instruction: 0x01b30800
    cafc:	01080000 	mrseq	r0, (UNDEF: 8)
    cb00:	01070000 	mrseq	r0, (UNDEF: 7)
    cb04:	40030550 	andmi	r0, r3, r0, asr r5
    cb08:	00080048 	andeq	r0, r8, r8, asr #32
    cb0c:	00199a06 	andseq	r9, r9, r6, lsl #20
    cb10:	0001a608 	andeq	sl, r1, r8, lsl #12
    cb14:	00011f00 	andeq	r1, r1, r0, lsl #30
    cb18:	50010700 	andpl	r0, r1, r0, lsl #14
    cb1c:	485c0305 	ldmdami	ip, {r0, r2, r8, r9}^
    cb20:	06000800 	streq	r0, [r0], -r0, lsl #16
    cb24:	080019a0 	stmdaeq	r0, {r5, r7, r8, fp, ip}
    cb28:	000001b3 			; <UNDEFINED> instruction: 0x000001b3
    cb2c:	00000136 	andeq	r0, r0, r6, lsr r1
    cb30:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    cb34:	00489403 	subeq	r9, r8, r3, lsl #8
    cb38:	ac060008 	stcge	0, cr0, [r6], {8}
    cb3c:	a6080019 			; <UNDEFINED> instruction: 0xa6080019
    cb40:	4d000001 	stcmi	0, cr0, [r0, #-4]
    cb44:	07000001 	streq	r0, [r0, -r1]
    cb48:	03055001 	movweq	r5, #20481	; 0x5001
    cb4c:	080048b0 	stmdaeq	r0, {r4, r5, r7, fp, lr}
    cb50:	19b20600 	ldmibne	r2!, {r9, sl}
    cb54:	01a60800 			; <UNDEFINED> instruction: 0x01a60800
    cb58:	01640000 	cmneq	r4, r0
    cb5c:	01070000 	mrseq	r0, (UNDEF: 7)
    cb60:	e8030550 	stmda	r3, {r4, r6, r8, sl}
    cb64:	00080047 	andeq	r0, r8, r7, asr #32
    cb68:	0019ba06 	andseq	fp, r9, r6, lsl #20
    cb6c:	0001a608 	andeq	sl, r1, r8, lsl #12
    cb70:	00017b00 	andeq	r7, r1, r0, lsl #22
    cb74:	50010700 	andpl	r0, r1, r0, lsl #14
    cb78:	48240305 	stmdami	r4!, {r0, r2, r8, r9}
    cb7c:	06000800 	streq	r0, [r0], -r0, lsl #16
    cb80:	080019c2 	stmdaeq	r0, {r1, r6, r7, r8, fp, ip}
    cb84:	000001a6 	andeq	r0, r0, r6, lsr #3
    cb88:	00000192 	muleq	r0, r2, r1
    cb8c:	05500107 	ldrbeq	r0, [r0, #-263]	; 0xfffffef9
    cb90:	00487803 	subeq	r7, r8, r3, lsl #16
    cb94:	ca080008 	bgt	20cbbc <_Min_Heap_Size+0x20c3bc>
    cb98:	a6080019 			; <UNDEFINED> instruction: 0xa6080019
    cb9c:	07000001 	streq	r0, [r0, -r1]
    cba0:	03055001 	movweq	r5, #20481	; 0x5001
    cba4:	080048cc 	stmdaeq	r0, {r2, r3, r6, r7, fp, lr}
    cba8:	01090000 	mrseq	r0, (UNDEF: 9)
    cbac:	00043e01 	andeq	r3, r4, r1, lsl #28
    cbb0:	00043400 	andeq	r3, r4, r0, lsl #8
    cbb4:	0a000200 	beq	d3bc <_Min_Heap_Size+0xcbbc>
    cbb8:	00000101 	andeq	r0, r0, r1, lsl #2
    cbbc:	00000000 	andeq	r0, r0, r0
    cbc0:	c8030000 	stmdagt	r3, {}	; <UNPREDICTABLE>
    cbc4:	02cb0005 	sbceq	r0, fp, #5
    cbc8:	00020000 	andeq	r0, r2, r0
    cbcc:	00001d8a 	andeq	r1, r0, sl, lsl #27
    cbd0:	06210104 	strteq	r0, [r1], -r4, lsl #2
    cbd4:	260c0000 	strcs	r0, [ip], -r0
    cbd8:	e9000028 	stmdb	r0, {r3, r5}
    cbdc:	00000004 	andeq	r0, r0, r4
    cbe0:	00000007 	andeq	r0, r0, r7
    cbe4:	00000000 	andeq	r0, r0, r0
    cbe8:	30000000 	andcc	r0, r0, r0
    cbec:	0200008f 	andeq	r0, r0, #143	; 0x8f
    cbf0:	00c80704 	sbceq	r0, r8, r4, lsl #14
    cbf4:	04030000 	streq	r0, [r3], #-0
    cbf8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    cbfc:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    cc00:	00000328 	andeq	r0, r0, r8, lsr #6
    cc04:	58040802 	stmdapl	r4, {r1, fp}
    cc08:	02000007 	andeq	r0, r0, #7
    cc0c:	060f0601 	streq	r0, [pc], -r1, lsl #12
    cc10:	01020000 	mrseq	r0, (UNDEF: 2)
    cc14:	00060d08 	andeq	r0, r6, r8, lsl #26
    cc18:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    cc1c:	0000042a 	andeq	r0, r0, sl, lsr #8
    cc20:	28070202 	stmdacs	r7, {r1, r9}
    cc24:	02000008 	andeq	r0, r0, #8
    cc28:	032d0504 			; <UNDEFINED> instruction: 0x032d0504
    cc2c:	ef040000 	svc	0x00040000
    cc30:	02000002 	andeq	r0, r0, #2
    cc34:	0074194f 	rsbseq	r1, r4, pc, asr #18
    cc38:	04020000 	streq	r0, [r2], #-0
    cc3c:	0000c307 	andeq	ip, r0, r7, lsl #6
    cc40:	07080200 	streq	r0, [r8, -r0, lsl #4]
    cc44:	000000be 	strheq	r0, [r0], -lr
    cc48:	01020405 	tsteq	r2, r5, lsl #8
    cc4c:	00061608 	andeq	r1, r6, r8, lsl #12
    cc50:	02f10400 	rscseq	r0, r1, #0, 8
    cc54:	30030000 	andcc	r0, r3, r0
    cc58:	00006814 	andeq	r6, r0, r4, lsl r8
    cc5c:	27fc0400 	ldrbcs	r0, [ip, r0, lsl #8]!
    cc60:	3c040000 	stccc	0, cr0, [r4], {-0}
    cc64:	0000741a 	andeq	r7, r0, sl, lsl r4
    cc68:	27580400 	ldrbcs	r0, [r8, -r0, lsl #8]
    cc6c:	42040000 	andmi	r0, r4, #0
    cc70:	00008b1a 	andeq	r8, r0, sl, lsl fp
    cc74:	00a30600 	adceq	r0, r3, r0, lsl #12
    cc78:	7f070000 	svcvc	0x00070000
    cc7c:	14000027 	strne	r0, [r0], #-39	; 0xffffffd9
    cc80:	0d089005 	stceq	0, cr9, [r8, #-20]	; 0xffffffec
    cc84:	08000001 	stmdaeq	r0, {r0}
    cc88:	00002763 	andeq	r2, r0, r3, ror #14
    cc8c:	a3249305 			; <UNDEFINED> instruction: 0xa3249305
    cc90:	02000000 	andeq	r0, r0, #0
    cc94:	cc080023 	stcgt	0, cr0, [r8], {35}	; 0x23
    cc98:	05000027 	streq	r0, [r0, #-39]	; 0xffffffd9
    cc9c:	010d2d94 			; <UNDEFINED> instruction: 0x010d2d94
    cca0:	23020000 	movwcs	r0, #8192	; 0x2000
    cca4:	281b0804 	ldmdacs	fp, {r2, fp}
    cca8:	95050000 	strls	r0, [r5, #-0]
    ccac:	00010d2d 	andeq	r0, r1, sp, lsr #26
    ccb0:	08230200 	stmdaeq	r3!, {r9}
    ccb4:	00277708 	eoreq	r7, r7, r8, lsl #14
    ccb8:	0c960500 	cfldr32eq	mvfx0, [r6], {0}
    ccbc:	00000082 	andeq	r0, r0, r2, lsl #1
    ccc0:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    ccc4:	0000274c 	andeq	r2, r0, ip, asr #14
    ccc8:	4e289705 	cdpmi	7, 2, cr9, cr8, cr5, {0}
    cccc:	02000001 	andeq	r0, r0, #1
    ccd0:	09001023 	stmdbeq	r0, {r0, r1, r5, ip}
    ccd4:	0000b404 	andeq	fp, r0, r4, lsl #8
    ccd8:	284e0700 	stmdacs	lr, {r8, r9, sl}^
    ccdc:	051c0000 	ldreq	r0, [ip, #-0]
    cce0:	014e10ac 	smlaltbeq	r1, lr, ip, r0
    cce4:	ad080000 	stcge	0, cr0, [r8, #-0]
    cce8:	05000027 	streq	r0, [r0, #-39]	; 0xffffffd9
    ccec:	009725af 	addseq	r2, r7, pc, lsr #11
    ccf0:	23020000 	movwcs	r0, #8192	; 0x2000
    ccf4:	28130800 	ldmdacs	r3, {fp}
    ccf8:	b0050000 	andlt	r0, r5, r0
    ccfc:	00016c26 	andeq	r6, r1, r6, lsr #24
    cd00:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    cd04:	00276e08 	eoreq	r6, r7, r8, lsl #28
    cd08:	14b10500 	ldrtne	r0, [r1], #1280	; 0x500
    cd0c:	00000160 	andeq	r0, r0, r0, ror #2
    cd10:	00082302 	andeq	r2, r8, r2, lsl #6
    cd14:	01130409 	tsteq	r3, r9, lsl #8
    cd18:	6c040000 	stcvs	0, cr0, [r4], {-0}
    cd1c:	05000037 	streq	r0, [r0, #-55]	; 0xffffffc9
    cd20:	00b41b9a 	umlalseq	r1, r4, sl, fp
    cd24:	90040000 	andls	r0, r4, r0
    cd28:	05000029 	streq	r0, [r0, #-41]	; 0xffffffd7
    cd2c:	00b424a6 	adcseq	r2, r4, r6, lsr #9
    cd30:	04090000 	streq	r0, [r9], #-0
    cd34:	00000154 	andeq	r0, r0, r4, asr r1
    cd38:	00016c06 	andeq	r6, r1, r6, lsl #24
    cd3c:	322d0400 	eorcc	r0, sp, #0, 8
    cd40:	b3050000 	movwlt	r0, #20480	; 0x5000
    cd44:	00011303 	andeq	r1, r1, r3, lsl #6
    cd48:	3f010a00 	svccc	0x00010a00
    cd4c:	01000027 	tsteq	r0, r7, lsr #32
    cd50:	97010dd7 			; <UNDEFINED> instruction: 0x97010dd7
    cd54:	46000000 	strmi	r0, [r0], -r0
    cd58:	6a08001a 	bvs	20cdc8 <_Min_Heap_Size+0x20c5c8>
    cd5c:	0208001a 	andeq	r0, r8, #26
    cd60:	ca01007d 	bgt	4cf5c <_Min_Heap_Size+0x4c75c>
    cd64:	0b000001 	bleq	cd70 <_Min_Heap_Size+0xc570>
    cd68:	0000278a 	andeq	r2, r0, sl, lsl #15
    cd6c:	722ed701 	eorvc	sp, lr, #262144	; 0x40000
    cd70:	ef000001 	svc	0x00000001
    cd74:	e9000081 	stmdb	r0, {r0, r7}
    cd78:	0c000081 	stceq	0, cr0, [r0], {129}	; 0x81
    cd7c:	00002847 	andeq	r2, r0, r7, asr #16
    cd80:	d014db01 	andsle	sp, r4, r1, lsl #22
    cd84:	1d000001 	stcne	0, cr0, [r0, #-4]
    cd88:	1b000082 	blne	cf98 <_Min_Heap_Size+0xc798>
    cd8c:	00000082 	andeq	r0, r0, r2, lsl #1
    cd90:	01770409 	cmneq	r7, r9, lsl #8
    cd94:	ca060000 	bgt	18cd9c <_Min_Heap_Size+0x18c59c>
    cd98:	0d000001 	stceq	0, cr0, [r0, #-4]
    cd9c:	00286201 	eoreq	r6, r8, r1, lsl #4
    cda0:	068b0100 	streq	r0, [fp], r0, lsl #2
    cda4:	001a1401 	andseq	r1, sl, r1, lsl #8
    cda8:	001a4608 	andseq	r4, sl, r8, lsl #12
    cdac:	00823008 	addeq	r3, r2, r8
    cdb0:	02350100 	eorseq	r0, r5, #0, 2
    cdb4:	470e0000 	strmi	r0, [lr, -r0]
    cdb8:	01000028 	tsteq	r0, r8, lsr #32
    cdbc:	01d0228b 	bicseq	r2, r0, fp, lsl #5
    cdc0:	50010000 	andpl	r0, r1, r0
    cdc4:	0028540e 	eoreq	r5, r8, lr, lsl #8
    cdc8:	268c0100 	strcs	r0, [ip], r0, lsl #2
    cdcc:	00000172 	andeq	r0, r0, r2, ror r1
    cdd0:	080c5101 	stmdaeq	ip, {r0, r8, ip, lr}
    cdd4:	01000028 	tsteq	r0, r8, lsr #32
    cdd8:	016c128e 	cmneq	ip, lr, lsl #5
    cddc:	826e0000 	rsbhi	r0, lr, #0
    cde0:	82680000 	rsbhi	r0, r8, #0
    cde4:	e30c0000 	movw	r0, #49152	; 0xc000
    cde8:	01000027 	tsteq	r0, r7, lsr #32
    cdec:	00af168f 	adceq	r1, pc, pc, lsl #13
    cdf0:	829b0000 	addshi	r0, fp, #0
    cdf4:	82970000 	addshi	r0, r7, #0
    cdf8:	0f000000 	svceq	0x00000000
    cdfc:	0027bd01 	eoreq	fp, r7, r1, lsl #26
    ce00:	06690100 	strbteq	r0, [r9], -r0, lsl #2
    ce04:	00000001 	andeq	r0, r0, r1
    ce08:	00000000 	andeq	r0, r0, r0
    ce0c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    ce10:	00028001 	andeq	r8, r2, r1
    ce14:	28470e00 	stmdacs	r7, {r9, sl, fp}^
    ce18:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    ce1c:	0001d025 	andeq	sp, r1, r5, lsr #32
    ce20:	0e500100 	rdfeqs	f0, f0, f0
    ce24:	00002854 	andeq	r2, r0, r4, asr r8
    ce28:	72296a01 	eorvc	r6, r9, #4096	; 0x1000
    ce2c:	01000001 	tsteq	r0, r1
    ce30:	28130c51 	ldmdacs	r3, {r0, r4, r6, sl, fp}
    ce34:	6c010000 	stcvs	0, cr0, [r1], {-0}
    ce38:	00017218 	andeq	r7, r1, r8, lsl r2
    ce3c:	0082bb00 	addeq	fp, r2, r0, lsl #22
    ce40:	0082b900 	addeq	fp, r2, r0, lsl #18
    ce44:	010f0000 	mrseq	r0, CPSR
    ce48:	00002799 	muleq	r0, r9, r7
    ce4c:	01065901 	tsteq	r6, r1, lsl #18
    ce50:	08001a0e 	stmdaeq	r0, {r1, r2, r3, r9, fp, ip}
    ce54:	08001a14 	stmdaeq	r0, {r2, r4, r9, fp, ip}
    ce58:	01007d02 	tsteq	r0, r2, lsl #26
    ce5c:	000002a9 	andeq	r0, r0, r9, lsr #5
    ce60:	0027f50e 	eoreq	pc, r7, lr, lsl #10
    ce64:	2e590100 	rdfcse	f0, f1, f0
    ce68:	00000172 	andeq	r0, r0, r2, ror r1
    ce6c:	10005001 	andne	r5, r0, r1
    ce70:	0027d301 	eoreq	sp, r7, r1, lsl #6
    ce74:	06310100 	ldrteq	r0, [r1], -r0, lsl #2
    ce78:	0019f401 	andseq	pc, r9, r1, lsl #8
    ce7c:	001a0e08 	andseq	r0, sl, r8, lsl #28
    ce80:	007d0208 	rsbseq	r0, sp, r8, lsl #4
    ce84:	28470e01 	stmdacs	r7, {r0, r9, sl, fp}^
    ce88:	31010000 	mrscc	r0, (UNDEF: 1)
    ce8c:	0001d026 	andeq	sp, r1, r6, lsr #32
    ce90:	00500100 	subseq	r0, r0, r0, lsl #2
    ce94:	00254000 	eoreq	r4, r5, r0
    ce98:	a7000200 	strge	r0, [r0, -r0, lsl #4]
    ce9c:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    cea0:	00062101 	andeq	r2, r6, r1, lsl #2
    cea4:	2c840c00 	stccs	12, cr0, [r4], {0}
    cea8:	04e90000 	strbteq	r0, [r9], #0
    ceac:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
	...
    ceb8:	92840000 	addls	r0, r4, #0
    cebc:	16020000 	strne	r0, [r2], -r0
    cec0:	0300004e 	movweq	r0, #78	; 0x4e
    cec4:	003517d1 	ldrsbteq	r1, [r5], -r1
    cec8:	04030000 	streq	r0, [r3], #-0
    cecc:	0000c807 	andeq	ip, r0, r7, lsl #16
    ced0:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
    ced4:	00746e69 	rsbseq	r6, r4, r9, ror #28
    ced8:	28050803 	stmdacs	r5, {r0, r1, fp}
    cedc:	03000003 	movweq	r0, #3
    cee0:	07580408 	ldrbeq	r0, [r8, -r8, lsl #8]
    cee4:	1e020000 	cdpne	0, 0, cr0, cr2, cr0, {0}
    cee8:	0400002f 	streq	r0, [r0], #-47	; 0xffffffd1
    ceec:	005d1729 	subseq	r1, sp, r9, lsr #14
    cef0:	01030000 	mrseq	r0, (UNDEF: 3)
    cef4:	00060f06 	andeq	r0, r6, r6, lsl #30
    cef8:	00760200 	rsbseq	r0, r6, r0, lsl #4
    cefc:	2b040000 	blcs	10cf04 <_Min_Heap_Size+0x10c704>
    cf00:	00007018 	andeq	r7, r0, r8, lsl r0
    cf04:	08010300 	stmdaeq	r1, {r8, r9}
    cf08:	0000060d 	andeq	r0, r0, sp, lsl #12
    cf0c:	2a050203 	bcs	14d720 <_Min_Heap_Size+0x14cf20>
    cf10:	03000004 	movweq	r0, #4
    cf14:	08280702 	stmdaeq	r8!, {r1, r8, r9, sl}
    cf18:	04030000 	streq	r0, [r3], #-0
    cf1c:	00032d05 	andeq	r2, r3, r5, lsl #26
    cf20:	02ef0200 	rsceq	r0, pc, #0, 4
    cf24:	4f040000 	svcmi	0x00040000
    cf28:	00009819 	andeq	r9, r0, r9, lsl r8
    cf2c:	07040300 	streq	r0, [r4, -r0, lsl #6]
    cf30:	000000c3 	andeq	r0, r0, r3, asr #1
    cf34:	be070803 	cdplt	8, 0, cr0, cr7, cr3, {0}
    cf38:	05000000 	streq	r0, [r0, #-0]
    cf3c:	00a60604 	adceq	r0, r6, r4, lsl #12
    cf40:	01030000 	mrseq	r0, (UNDEF: 3)
    cf44:	00061608 	andeq	r1, r6, r8, lsl #12
    cf48:	bf040700 	svclt	0x00040700
    cf4c:	06000000 	streq	r0, [r0], -r0
    cf50:	000000b4 	strheq	r0, [r0], -r4
    cf54:	2f200208 	svccs	0x00200208
    cf58:	14050000 	strne	r0, [r5], #-0
    cf5c:	00005112 	andeq	r5, r0, r2, lsl r1
    cf60:	00c00900 	sbceq	r0, r0, r0, lsl #18
    cf64:	c0060000 	andgt	r0, r6, r0
    cf68:	02000000 	andeq	r0, r0, #0
    cf6c:	00000078 	andeq	r0, r0, r8, ror r0
    cf70:	64131805 	ldrvs	r1, [r3], #-2053	; 0xfffff7fb
    cf74:	06000000 	streq	r0, [r0], -r0
    cf78:	000000d6 	ldrdeq	r0, [r0], -r6
    cf7c:	0002f102 	andeq	pc, r2, r2, lsl #2
    cf80:	14300500 	ldrtne	r0, [r0], #-1280	; 0xfffffb00
    cf84:	0000008c 	andeq	r0, r0, ip, lsl #1
    cf88:	0027fd02 	eoreq	pc, r7, r2, lsl #26
    cf8c:	1a3b0200 	bne	ecd794 <_Min_Heap_Size+0xeccf94>
    cf90:	00000085 	andeq	r0, r0, r5, lsl #1
    cf94:	0000f306 	andeq	pc, r0, r6, lsl #6
    cf98:	27fc0200 	ldrbcs	r0, [ip, r0, lsl #4]!
    cf9c:	3c020000 	stccc	0, cr0, [r2], {-0}
    cfa0:	0000981a 	andeq	r9, r0, sl, lsl r8
    cfa4:	01040900 	tsteq	r4, r0, lsl #18
    cfa8:	04060000 	streq	r0, [r6], #-0
    cfac:	02000001 	andeq	r0, r0, #1
    cfb0:	00002758 	andeq	r2, r0, r8, asr r7
    cfb4:	e71a4202 	ldr	r4, [sl, -r2, lsl #4]
    cfb8:	06000000 	streq	r0, [r0], -r0
    cfbc:	0000011a 	andeq	r0, r0, sl, lsl r1
    cfc0:	00d60407 	sbcseq	r0, r6, r7, lsl #8
    cfc4:	760a0000 	strvc	r0, [sl], -r0
    cfc8:	14000030 	strne	r0, [r0], #-48	; 0xffffffd0
    cfcc:	080c0c06 	stmdaeq	ip, {r1, r2, sl, fp}
    cfd0:	00000160 	andeq	r0, r0, r0, ror #2
    cfd4:	002bfb0b 	eoreq	pc, fp, fp, lsl #22
    cfd8:	0c110600 	ldceq	6, cr0, [r1], {-0}
    cfdc:	00011a10 	andeq	r1, r1, r0, lsl sl
    cfe0:	00230200 	eoreq	r0, r3, r0, lsl #4
    cfe4:	002bf10b 	eoreq	pc, fp, fp, lsl #2
    cfe8:	0c120600 	ldceq	6, cr0, [r2], {-0}
    cfec:	0001600c 	andeq	r6, r1, ip
    cff0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    cff4:	00a60c00 	adceq	r0, r6, r0, lsl #24
    cff8:	01700000 	cmneq	r0, r0
    cffc:	350d0000 	strcc	r0, [sp, #-0]
    d000:	03000000 	movweq	r0, #0
    d004:	298a0e00 	stmibcs	sl, {r9, sl, fp}
    d008:	25060000 	strcs	r0, [r6, #-0]
    d00c:	01312b0c 	teqeq	r1, ip, lsl #22
    d010:	f90a0000 			; <UNDEFINED> instruction: 0xf90a0000
    d014:	1c00002d 	stcne	0, cr0, [r0], {45}	; 0x2d
    d018:	100c2906 	andne	r2, ip, r6, lsl #18
    d01c:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    d020:	002bfa0b 	eoreq	pc, fp, fp, lsl #20
    d024:	0c2e0600 	stceq	6, cr0, [lr], #-0
    d028:	00010411 	andeq	r0, r1, r1, lsl r4
    d02c:	00230200 	eoreq	r0, r3, r0, lsl #4
    d030:	002bf10b 	eoreq	pc, fp, fp, lsl #2
    d034:	0c2f0600 	stceq	6, cr0, [pc], #-0	; d03c <_Min_Heap_Size+0xc83c>
    d038:	0000a60c 	andeq	sl, r0, ip, lsl #12
    d03c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    d040:	002c0d0b 	eoreq	r0, ip, fp, lsl #26
    d044:	0c300600 	ldceq	6, cr0, [r0], #-0
    d048:	0001701a 	andeq	r7, r1, sl, lsl r0
    d04c:	08230200 	stmdaeq	r3!, {r9}
    d050:	32270e00 	eorcc	r0, r7, #0, 28
    d054:	34060000 	strcc	r0, [r6], #-0
    d058:	017d030c 	cmneq	sp, ip, lsl #6
    d05c:	040f0000 	streq	r0, [pc], #-0	; d064 <_Min_Heap_Size+0xc864>
    d060:	050c9106 	streq	r9, [ip, #-262]	; 0xfffffefa
    d064:	000001ee 	andeq	r0, r0, lr, ror #3
    d068:	002be810 	eoreq	lr, fp, r0, lsl r8
    d06c:	0c930600 	ldceq	6, cr0, [r3], {0}
    d070:	0000a610 	andeq	sl, r0, r0, lsl r6
    d074:	2bfa1000 	blcs	ffe9107c <_estack+0xdfe876dc>
    d078:	94060000 	strls	r0, [r6], #-0
    d07c:	0104150c 	tsteq	r4, ip, lsl #10
    d080:	0a000000 	beq	d088 <_Min_Heap_Size+0xc888>
    d084:	000031ed 	andeq	r3, r0, sp, ror #3
    d088:	0c8d065c 	stceq	6, cr0, [sp], {92}	; 0x5c
    d08c:	00026b10 	andeq	r6, r2, r0, lsl fp
    d090:	2bdf0b00 	blcs	ff7cfc98 <_estack+0xdf7c62f8>
    d094:	8f060000 	svchi	0x00060000
    d098:	026b0c0c 	rsbeq	r0, fp, #12, 24	; 0xc00
    d09c:	23020000 	movwcs	r0, #8192	; 0x2000
    d0a0:	00751100 	rsbseq	r1, r5, r0, lsl #2
    d0a4:	070c9506 	streq	r9, [ip, -r6, lsl #10]
    d0a8:	000001c9 	andeq	r0, r0, r9, asr #3
    d0ac:	0b0c2302 	bleq	315cbc <_Min_Heap_Size+0x3154bc>
    d0b0:	00002a8a 	andeq	r2, r0, sl, lsl #21
    d0b4:	120c9706 	andne	r9, ip, #1572864	; 0x180000
    d0b8:	0000027b 	andeq	r0, r0, fp, ror r2
    d0bc:	0b102302 	bleq	415ccc <_Min_Heap_Size+0x4154cc>
    d0c0:	00002c0c 	andeq	r2, r0, ip, lsl #24
    d0c4:	110c9806 	tstne	ip, r6, lsl #16
    d0c8:	0000028b 	andeq	r0, r0, fp, lsl #5
    d0cc:	0b482302 	bleq	1215cdc <_Min_Heap_Size+0x12154dc>
    d0d0:	00002f4a 	andeq	r2, r0, sl, asr #30
    d0d4:	0d0c9906 	vstreq.16	s18, [ip, #-12]	; <UNPREDICTABLE>
    d0d8:	0000029b 	muleq	r0, fp, r2
    d0dc:	0b542302 	bleq	1515cec <_Min_Heap_Size+0x15154ec>
    d0e0:	00002f53 	andeq	r2, r0, r3, asr pc
    d0e4:	110c9c06 	tstne	ip, r6, lsl #24
    d0e8:	000000d6 	ldrdeq	r0, [r0], -r6
    d0ec:	0b562302 	bleq	1595cfc <_Min_Heap_Size+0x15954fc>
    d0f0:	00002c03 	andeq	r2, r0, r3, lsl #24
    d0f4:	100ca006 	andne	sl, ip, r6
    d0f8:	000000a6 	andeq	r0, r0, r6, lsr #1
    d0fc:	00582302 	subseq	r2, r8, r2, lsl #6
    d100:	0000a60c 	andeq	sl, r0, ip, lsl #12
    d104:	00027b00 	andeq	r7, r2, r0, lsl #22
    d108:	00350d00 	eorseq	r0, r5, r0, lsl #26
    d10c:	00020000 	andeq	r0, r2, r0
    d110:	0001bc0c 	andeq	fp, r1, ip, lsl #24
    d114:	00028b00 	andeq	r8, r2, r0, lsl #22
    d118:	00350d00 	eorseq	r0, r5, r0, lsl #26
    d11c:	00010000 	andeq	r0, r1, r0
    d120:	0001040c 	andeq	r0, r1, ip, lsl #8
    d124:	00029b00 	andeq	r9, r2, r0, lsl #22
    d128:	00350d00 	eorseq	r0, r5, r0, lsl #26
    d12c:	00020000 	andeq	r0, r2, r0
    d130:	0000d60c 	andeq	sp, r0, ip, lsl #12
    d134:	0002ab00 	andeq	sl, r2, r0, lsl #22
    d138:	00350d00 	eorseq	r0, r5, r0, lsl #26
    d13c:	00010000 	andeq	r0, r1, r0
    d140:	002e290e 	eoreq	r2, lr, lr, lsl #18
    d144:	0ca70600 	stceq	6, cr0, [r7]
    d148:	0001ee03 	andeq	lr, r1, r3, lsl #28
    d14c:	277f1200 	ldrbcs	r1, [pc, -r0, lsl #4]!
    d150:	07140000 	ldreq	r0, [r4, -r0]
    d154:	03110890 	tsteq	r1, #144, 16	; 0x900000
    d158:	63130000 	tstvs	r3, #0
    d15c:	07000027 	streq	r0, [r0, -r7, lsr #32]
    d160:	011a2493 			; <UNDEFINED> instruction: 0x011a2493
    d164:	23020000 	movwcs	r0, #8192	; 0x2000
    d168:	27cc1300 	strbcs	r1, [ip, r0, lsl #6]
    d16c:	94070000 	strls	r0, [r7], #-0
    d170:	0003112d 	andeq	r1, r3, sp, lsr #2
    d174:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    d178:	00281b13 	eoreq	r1, r8, r3, lsl fp
    d17c:	2d950700 	ldccs	7, cr0, [r5]
    d180:	00000311 	andeq	r0, r0, r1, lsl r3
    d184:	13082302 	movwne	r2, #33538	; 0x8302
    d188:	00002777 	andeq	r2, r0, r7, ror r7
    d18c:	a60c9607 	strge	r9, [ip], -r7, lsl #12
    d190:	02000000 	andeq	r0, r0, #0
    d194:	4c130c23 	ldcmi	12, cr0, [r3], {35}	; 0x23
    d198:	07000027 	streq	r0, [r0, -r7, lsr #32]
    d19c:	03522897 	cmpeq	r2, #9895936	; 0x970000
    d1a0:	23020000 	movwcs	r0, #8192	; 0x2000
    d1a4:	04070010 	streq	r0, [r7], #-16
    d1a8:	000002b8 			; <UNDEFINED> instruction: 0x000002b8
    d1ac:	00284e12 	eoreq	r4, r8, r2, lsl lr
    d1b0:	ac071c00 	stcge	12, cr1, [r7], {-0}
    d1b4:	00035210 	andeq	r5, r3, r0, lsl r2
    d1b8:	27ad1300 	strcs	r1, [sp, r0, lsl #6]!
    d1bc:	af070000 	svcge	0x00070000
    d1c0:	00010425 	andeq	r0, r1, r5, lsr #8
    d1c4:	00230200 	eoreq	r0, r3, r0, lsl #4
    d1c8:	00281313 	eoreq	r1, r8, r3, lsl r3
    d1cc:	26b00700 	ldrtcs	r0, [r0], r0, lsl #14
    d1d0:	00000370 	andeq	r0, r0, r0, ror r3
    d1d4:	13042302 	movwne	r2, #17154	; 0x4302
    d1d8:	0000276e 	andeq	r2, r0, lr, ror #14
    d1dc:	6414b107 	ldrvs	fp, [r4], #-263	; 0xfffffef9
    d1e0:	02000003 	andeq	r0, r0, #3
    d1e4:	07000823 	streq	r0, [r0, -r3, lsr #16]
    d1e8:	00031704 	andeq	r1, r3, r4, lsl #14
    d1ec:	376c0200 	strbcc	r0, [ip, -r0, lsl #4]!
    d1f0:	9a070000 	bls	1cd1f8 <_Min_Heap_Size+0x1cc9f8>
    d1f4:	0002b81b 	andeq	fp, r2, fp, lsl r8
    d1f8:	29900200 	ldmibcs	r0, {r9}
    d1fc:	a6070000 	strge	r0, [r7], -r0
    d200:	0002b824 	andeq	fp, r2, r4, lsr #16
    d204:	58040700 	stmdapl	r4, {r8, r9, sl}
    d208:	02000003 	andeq	r0, r0, #3
    d20c:	0000322d 	andeq	r3, r0, sp, lsr #4
    d210:	1703b307 	strne	fp, [r3, -r7, lsl #6]
    d214:	02000003 	andeq	r0, r0, #3
    d218:	00000252 	andeq	r0, r0, r2, asr r2
    d21c:	8e2e5c08 	cdphi	12, 2, cr5, cr14, cr8, {0}
    d220:	07000003 	streq	r0, [r0, -r3]
    d224:	00039404 	andeq	r9, r3, r4, lsl #8
    d228:	099e1400 	ldmibeq	lr, {sl, ip}
    d22c:	12010000 	andne	r0, r1, #0
    d230:	00002933 	andeq	r2, r0, r3, lsr r9
    d234:	107d0808 	rsbsne	r0, sp, r8, lsl #16
    d238:	000003c6 	andeq	r0, r0, r6, asr #7
    d23c:	0029e413 	eoreq	lr, r9, r3, lsl r4
    d240:	107f0800 	rsbsne	r0, pc, r0, lsl #16
    d244:	000000f3 	strdeq	r0, [r0], -r3
    d248:	13002302 	movwne	r2, #770	; 0x302
    d24c:	00002e19 	andeq	r2, r0, r9, lsl lr
    d250:	1a108008 	bne	42d278 <_Min_Heap_Size+0x42ca78>
    d254:	02000001 	andeq	r0, r0, #1
    d258:	02000423 	andeq	r0, r0, #587202560	; 0x23000000
    d25c:	00002e66 	andeq	r2, r0, r6, ror #28
    d260:	9a038108 	bls	ed688 <_Min_Heap_Size+0xece88>
    d264:	02000003 	andeq	r0, r0, #3
    d268:	00002d4b 	andeq	r2, r0, fp, asr #26
    d26c:	e3243309 			; <UNDEFINED> instruction: 0xe3243309
    d270:	06000003 	streq	r0, [r0], -r3
    d274:	000003d2 	ldrdeq	r0, [r0], -r2
    d278:	03e90407 	mvneq	r0, #117440512	; 0x7000000
    d27c:	ca120000 	bgt	48d284 <_Min_Heap_Size+0x48ca84>
    d280:	5c00002a 	stcpl	0, cr0, [r0], {42}	; 0x2a
    d284:	a9106701 	ldmdbge	r0, {r0, r8, r9, sl, sp, lr}
    d288:	13000004 	movwne	r0, #4
    d28c:	00003155 	andeq	r3, r0, r5, asr r1
    d290:	ed0e6901 	vstr.16	s12, [lr, #-2]
    d294:	02000004 	andeq	r0, r0, #4
    d298:	14130023 	ldrne	r0, [r3], #-35	; 0xffffffdd
    d29c:	0100002f 	tsteq	r0, pc, lsr #32
    d2a0:	04ed0e6a 	strbteq	r0, [sp], #3690	; 0xe6a
    d2a4:	23020000 	movwcs	r0, #8192	; 0x2000
    d2a8:	00751504 	rsbseq	r1, r5, r4, lsl #10
    d2ac:	37077001 	strcc	r7, [r7, -r1]
    d2b0:	02000005 	andeq	r0, r0, #5
    d2b4:	b1130823 	tstlt	r3, r3, lsr #16
    d2b8:	01000029 	tsteq	r0, r9, lsr #32
    d2bc:	03760c72 	cmneq	r6, #29184	; 0x7200
    d2c0:	23020000 	movwcs	r0, #8192	; 0x2000
    d2c4:	28fa1310 	ldmcs	sl!, {r4, r8, r9, ip}^
    d2c8:	73010000 	movwvc	r0, #4096	; 0x1000
    d2cc:	0003760c 	andeq	r7, r3, ip, lsl #12
    d2d0:	2c230200 	sfmcs	f0, 4, [r3], #-0
    d2d4:	002b1813 	eoreq	r1, fp, r3, lsl r8
    d2d8:	1a750100 	bne	1d4d6e0 <_Min_Heap_Size+0x1d4cee0>
    d2dc:	00000110 	andeq	r0, r0, r0, lsl r1
    d2e0:	13482302 	movtne	r2, #33538	; 0x8302
    d2e4:	00002f7c 	andeq	r2, r0, ip, ror pc
    d2e8:	04117601 	ldreq	r7, [r1], #-1537	; 0xfffff9ff
    d2ec:	02000001 	andeq	r0, r0, #1
    d2f0:	a6134c23 	ldrge	r4, [r3], -r3, lsr #24
    d2f4:	0100002c 	tsteq	r0, ip, lsr #32
    d2f8:	01041177 	tsteq	r4, r7, ror r1
    d2fc:	23020000 	movwcs	r0, #8192	; 0x2000
    d300:	31e51350 	mvncc	r1, r0, asr r3
    d304:	79010000 	stmdbvc	r1, {}	; <UNPREDICTABLE>
    d308:	0000cc15 	andeq	ip, r0, r5, lsl ip
    d30c:	54230200 	strtpl	r0, [r3], #-512	; 0xfffffe00
    d310:	0029dc13 	eoreq	sp, r9, r3, lsl ip
    d314:	157a0100 	ldrbne	r0, [sl, #-256]!	; 0xffffff00
    d318:	000000cc 	andeq	r0, r0, ip, asr #1
    d31c:	13552302 	cmpne	r5, #134217728	; 0x8000000
    d320:	00002c3a 	andeq	r2, r0, sl, lsr ip
    d324:	d6117d01 	ldrle	r7, [r1], -r1, lsl #26
    d328:	02000000 	andeq	r0, r0, #0
    d32c:	b8135623 	ldmdalt	r3, {r0, r1, r5, r9, sl, ip, lr}
    d330:	01000031 	tsteq	r0, r1, lsr r0
    d334:	03e32281 	mvneq	r2, #268435464	; 0x10000008
    d338:	23020000 	movwcs	r0, #8192	; 0x2000
    d33c:	aa020058 	bge	8d4a4 <_Min_Heap_Size+0x8cca4>
    d340:	0900002b 	stmdbeq	r0, {r0, r1, r3, r5}
    d344:	03e3243a 	mvneq	r2, #973078528	; 0x3a000000
    d348:	73020000 	movwvc	r0, #8192	; 0x2000
    d34c:	0900002b 	stmdbeq	r0, {r0, r1, r3, r5}
    d350:	03e32441 	mvneq	r2, #1090519040	; 0x41000000
    d354:	1e120000 	cdpne	0, 1, cr0, cr2, cr0, {0}
    d358:	0800002d 	stmdaeq	r0, {r0, r2, r3, r5}
    d35c:	ed104401 	cfldrs	mvf4, [r0, #-4]
    d360:	13000004 	movwne	r0, #4
    d364:	0000304d 	andeq	r3, r0, sp, asr #32
    d368:	ed0e4601 	stc	6, cr4, [lr, #-4]
    d36c:	02000004 	andeq	r0, r0, #4
    d370:	52130023 	andspl	r0, r3, #35	; 0x23
    d374:	0100002a 	tsteq	r0, sl, lsr #32
    d378:	04ed0e47 	strbteq	r0, [sp], #3655	; 0xe47
    d37c:	23020000 	movwcs	r0, #8192	; 0x2000
    d380:	04070004 	streq	r0, [r7], #-4
    d384:	000000c0 	andeq	r0, r0, r0, asr #1
    d388:	002f6c02 	eoreq	r6, pc, r2, lsl #24
    d38c:	03480100 	movteq	r0, #33024	; 0x8100
    d390:	000004c1 	andeq	r0, r0, r1, asr #9
    d394:	00289b12 	eoreq	r9, r8, r2, lsl fp
    d398:	4a010800 	bmi	4f3a0 <_Min_Heap_Size+0x4eba0>
    d39c:	00052b10 	andeq	r2, r5, r0, lsl fp
    d3a0:	3d121300 	ldccc	3, cr1, [r2, #-0]
    d3a4:	4c010000 	stcmi	0, cr0, [r1], {-0}
    d3a8:	00038212 	andeq	r8, r3, r2, lsl r2
    d3ac:	00230200 	eoreq	r0, r3, r0, lsl #4
    d3b0:	0030ae13 	eorseq	sl, r0, r3, lsl lr
    d3b4:	114d0100 	mrsne	r0, (UNDEF: 93)
    d3b8:	00000104 	andeq	r0, r0, r4, lsl #2
    d3bc:	00042302 	andeq	r2, r4, r2, lsl #6
    d3c0:	0028a902 	eoreq	sl, r8, r2, lsl #18
    d3c4:	034e0100 	movteq	r0, #57600	; 0xe100
    d3c8:	000004ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    d3cc:	6c010816 	stcvs	8, cr0, [r1], {22}
    d3d0:	00055905 	andeq	r5, r5, r5, lsl #18
    d3d4:	306f1700 	rsbcc	r1, pc, r0, lsl #14
    d3d8:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    d3dc:	0004f319 	andeq	pc, r4, r9, lsl r3	; <UNPREDICTABLE>
    d3e0:	2b2a1700 	blcs	a92fe8 <_Min_Heap_Size+0xa927e8>
    d3e4:	6f010000 	svcvs	0x00010000
    d3e8:	00052b19 	andeq	r2, r5, r9, lsl fp
    d3ec:	b1020000 	mrslt	r0, (UNDEF: 2)
    d3f0:	01000031 	tsteq	r0, r1, lsr r0
    d3f4:	03e90388 	mvneq	r0, #136, 6	; 0x20000002
    d3f8:	2f020000 	svccs	0x00020000
    d3fc:	0100002e 	tsteq	r0, lr, lsr #32
    d400:	0559108c 	ldrbeq	r1, [r9, #-140]	; 0xffffff74
    d404:	65060000 	strvs	r0, [r6, #-0]
    d408:	18000005 	stmdane	r0, {r0, r2}
    d40c:	00002880 	andeq	r2, r0, r0, lsl #17
    d410:	170cee01 	strne	lr, [ip, -r1, lsl #28]
    d414:	0000f301 	andeq	pc, r0, r1, lsl #6
    d418:	001b1e00 	andseq	r1, fp, r0, lsl #28
    d41c:	001b7608 	andseq	r7, fp, r8, lsl #12
    d420:	0082ce08 	addeq	ip, r2, r8, lsl #28
    d424:	064b0100 	strbeq	r0, [fp], -r0, lsl #2
    d428:	6e190000 	cdpvs	0, 1, cr0, cr9, cr0, {0}
    d42c:	01000030 	tsteq	r0, r0, lsr r0
    d430:	51490cee 	smlalttpl	r0, r9, lr, ip
    d434:	18000006 	stmdane	r0, {r1, r2}
    d438:	12000083 	andne	r0, r0, #131	; 0x83
    d43c:	1a000083 	bne	d650 <_Min_Heap_Size+0xce50>
    d440:	000031b8 			; <UNDEFINED> instruction: 0x000031b8
    d444:	130cf001 	movwne	pc, #49153	; 0xc001	; <UNPREDICTABLE>
    d448:	00000656 	andeq	r0, r0, r6, asr r6
    d44c:	00008344 	andeq	r8, r0, r4, asr #6
    d450:	00008342 	andeq	r8, r0, r2, asr #6
    d454:	0038481a 	eorseq	r4, r8, sl, lsl r8
    d458:	0cf10100 	ldfeqe	f0, [r1]
    d45c:	0000f314 	andeq	pc, r0, r4, lsl r3	; <UNPREDICTABLE>
    d460:	00836500 	addeq	r6, r3, r0, lsl #10
    d464:	00835700 	addeq	r5, r3, r0, lsl #14
    d468:	07301b00 	ldreq	r1, [r0, -r0, lsl #22]!
    d46c:	dc1a0000 	ldcle	0, cr0, [sl], {-0}
    d470:	01000029 	tsteq	r0, r9, lsr #32
    d474:	d11a0cfd 			; <UNDEFINED> instruction: 0xd11a0cfd
    d478:	c1000000 	mrsgt	r0, (UNDEF: 0)
    d47c:	bd000083 	stclt	0, cr0, [r0, #-524]	; 0xfffffdf4
    d480:	1c000083 	stcne	0, cr0, [r0], {131}	; 0x83
    d484:	08001b64 	stmdaeq	r0, {r2, r5, r6, r8, r9, fp, ip}
    d488:	08001b76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, fp, ip}
    d48c:	0000061a 	andeq	r0, r0, sl, lsl r6
    d490:	002f5c1a 	eoreq	r5, pc, sl, lsl ip	; <UNPREDICTABLE>
    d494:	0d190100 	ldfeqs	f0, [r9, #-0]
    d498:	00011511 	andeq	r1, r1, r1, lsl r5
    d49c:	0083e300 	addeq	lr, r3, r0, lsl #6
    d4a0:	0083e100 	addeq	lr, r3, r0, lsl #2
    d4a4:	1b681d00 	blne	1a148ac <_Min_Heap_Size+0x1a140ac>
    d4a8:	241d0800 	ldrcs	r0, [sp], #-2048	; 0xfffff800
    d4ac:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    d4b0:	08001b46 	stmdaeq	r0, {r1, r2, r6, r8, r9, fp, ip}
    d4b4:	00000bfe 	strdeq	r0, [r0], -lr
    d4b8:	00000639 	andeq	r0, r0, r9, lsr r6
    d4bc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    d4c0:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    d4c4:	6c910251 	lfmvs	f0, 4, [r1], {81}	; 0x51
    d4c8:	0152011f 	cmpeq	r2, pc, lsl r1
    d4cc:	5c200030 	stcpl	0, cr0, [r0], #-192	; 0xffffff40
    d4d0:	2c08001b 	stccs	0, cr0, [r8], {27}
    d4d4:	1f000024 	svcne	0x00000024
    d4d8:	74025001 	strvc	r5, [r2], #-1
    d4dc:	0000002c 	andeq	r0, r0, ip, lsr #32
    d4e0:	05710407 	ldrbeq	r0, [r1, #-1031]!	; 0xfffffbf9
    d4e4:	4b060000 	blmi	18d4ec <_Min_Heap_Size+0x18ccec>
    d4e8:	07000006 	streq	r0, [r0, -r6]
    d4ec:	00056504 	andeq	r6, r5, r4, lsl #10
    d4f0:	06560600 	ldrbeq	r0, [r6], -r0, lsl #12
    d4f4:	01210000 			; <UNDEFINED> instruction: 0x01210000
    d4f8:	00002956 	andeq	r2, r0, r6, asr r9
    d4fc:	1c0cdc01 	stcne	12, cr13, [ip], {1}
    d500:	0004b501 	andeq	fp, r4, r1, lsl #10
	...
    d50c:	0083f600 	addeq	pc, r3, r0, lsl #12
    d510:	06c30100 	strbeq	r0, [r3], r0, lsl #2
    d514:	59190000 	ldmdbpl	r9, {}	; <UNPREDICTABLE>
    d518:	0100002d 	tsteq	r0, sp, lsr #32
    d51c:	a9490cdc 	stmdbge	r9, {r2, r3, r4, r6, r7, sl, fp}^
    d520:	32000004 	andcc	r0, r0, #4
    d524:	2e000084 	cdpcs	0, 0, cr0, cr0, cr4, {4}
    d528:	22000084 	andcs	r0, r0, #132	; 0x84
    d52c:	00003848 	andeq	r3, r0, r8, asr #16
    d530:	200cde01 	andcs	sp, ip, r1, lsl #28
    d534:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
    d538:	20749102 	rsbscs	r9, r4, r2, lsl #2
    d53c:	00000000 	andeq	r0, r0, r0
    d540:	00000fd7 	ldrdeq	r0, [r0], -r7
    d544:	0350011f 	cmpeq	r0, #-1073741817	; 0xc0000007
    d548:	1f5001f3 	svcne	0x005001f3
    d54c:	91025101 	tstls	r2, r1, lsl #2
    d550:	52011f74 	andpl	r1, r1, #116, 30	; 0x1d0
    d554:	00003001 	andeq	r3, r0, r1
    d558:	30c30121 	sbccc	r0, r3, r1, lsr #2
    d55c:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    d560:	b5011c0c 	strlt	r1, [r1, #-3084]	; 0xfffff3f4
    d564:	00000004 	andeq	r0, r0, r4
    d568:	00000000 	andeq	r0, r0, r0
    d56c:	53000000 	movwpl	r0, #0
    d570:	01000084 	smlabbeq	r0, r4, r0, r0
    d574:	0000073c 	andeq	r0, r0, ip, lsr r7
    d578:	002d5919 	eoreq	r5, sp, r9, lsl r9
    d57c:	0cc90100 	stfeqe	f0, [r9], {0}
    d580:	0004a942 	andeq	sl, r4, r2, asr #18
    d584:	00848f00 	addeq	r8, r4, r0, lsl #30
    d588:	00848b00 	addeq	r8, r4, r0, lsl #22
    d58c:	3f3a1900 	svccc	0x003a1900
    d590:	ca010000 	bgt	4d598 <_Min_Heap_Size+0x4cd98>
    d594:	0126420c 			; <UNDEFINED> instruction: 0x0126420c
    d598:	84b60000 	ldrthi	r0, [r6], #0
    d59c:	84b00000 	ldrthi	r0, [r0], #0
    d5a0:	48220000 	stmdami	r2!, {}	; <UNPREDICTABLE>
    d5a4:	01000038 	tsteq	r0, r8, lsr r0
    d5a8:	b5200ccc 	strlt	r0, [r0, #-3276]!	; 0xfffff334
    d5ac:	02000004 	andeq	r0, r0, #4
    d5b0:	00207491 	mlaeq	r0, r1, r4, r7
    d5b4:	97000000 	strls	r0, [r0, -r0]
    d5b8:	1f000015 	svcne	0x00000015
    d5bc:	f3035001 	vhadd.u8	d5, d3, d1
    d5c0:	011f5001 	tsteq	pc, r1
    d5c4:	74910251 	ldrvc	r0, [r1], #593	; 0x251
    d5c8:	0352011f 	cmpeq	r2, #-1073741817	; 0xc0000007
    d5cc:	005101f3 	ldrsheq	r0, [r1], #-19	; 0xffffffed
    d5d0:	37012100 	strcc	r2, [r1, -r0, lsl #2]
    d5d4:	0100002e 	tsteq	r0, lr, lsr #32
    d5d8:	01100ca0 	tsteq	r0, r0, lsr #25
    d5dc:	000000f3 	strdeq	r0, [r0], -r3
	...
    d5e8:	000084e2 	andeq	r8, r0, r2, ror #9
    d5ec:	0007c301 	andeq	ip, r7, r1, lsl #6
    d5f0:	2fa51900 	svccs	0x00a51900
    d5f4:	a0010000 	andge	r0, r1, r0
    d5f8:	04b53c0c 	ldrteq	r3, [r5], #3084	; 0xc0c
    d5fc:	850e0000 	strhi	r0, [lr, #-0]
    d600:	85020000 	strhi	r0, [r2, #-0]
    d604:	59190000 	ldmdbpl	r9, {}	; <UNPREDICTABLE>
    d608:	0100002d 	tsteq	r0, sp, lsr #32
    d60c:	a9360ca1 	ldmdbge	r6!, {r0, r5, r7, sl, fp}
    d610:	63000004 	movwvs	r0, #4
    d614:	5b000085 	blpl	d830 <_Min_Heap_Size+0xd030>
    d618:	1a000085 	bne	d834 <_Min_Heap_Size+0xd034>
    d61c:	00003848 	andeq	r3, r0, r8, asr #16
    d620:	140ca301 	strne	sl, [ip], #-769	; 0xfffffcff
    d624:	000000f3 	strdeq	r0, [r0], -r3
    d628:	000085a1 	andeq	r8, r0, r1, lsr #11
    d62c:	0000859d 	muleq	r0, sp, r5
    d630:	002fa41a 	eoreq	sl, pc, sl, lsl r4	; <UNPREDICTABLE>
    d634:	0ca40100 	stfeqs	f0, [r4]
    d638:	00065c19 	andeq	r5, r6, r9, lsl ip
    d63c:	0085cd00 	addeq	ip, r5, r0, lsl #26
    d640:	0085c100 	addeq	ip, r5, r0, lsl #2
    d644:	00001d00 	andeq	r1, r0, r0, lsl #26
    d648:	243b0000 	ldrtcs	r0, [fp], #-0
    d64c:	001d0000 	andseq	r0, sp, r0
    d650:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    d654:	00000024 	andeq	r0, r0, r4, lsr #32
    d658:	31d60121 	bicscc	r0, r6, r1, lsr #2
    d65c:	7a010000 	bvc	4d664 <_Min_Heap_Size+0x4ce64>
    d660:	f301100c 	vhadd.u8	d1, d1, d12
	...
    d66c:	1a000000 	bne	d674 <_Min_Heap_Size+0xce74>
    d670:	01000086 	smlabbeq	r0, r6, r0, r0
    d674:	00000835 	andeq	r0, r0, r5, lsr r8
    d678:	002fa519 	eoreq	sl, pc, r9, lsl r5	; <UNPREDICTABLE>
    d67c:	0c7a0100 	ldfeqe	f0, [sl], #-0
    d680:	0004b537 	andeq	fp, r4, r7, lsr r5
    d684:	00864800 	addeq	r4, r6, r0, lsl #16
    d688:	00863a00 	addeq	r3, r6, r0, lsl #20
    d68c:	2d591900 	vldrcs.16	s3, [r9, #-0]	; <UNPREDICTABLE>
    d690:	7b010000 	blvc	4d698 <_Min_Heap_Size+0x4ce98>
    d694:	04a9310c 	strteq	r3, [r9], #268	; 0x10c
    d698:	86aa0000 	strthi	r0, [sl], r0
    d69c:	86a60000 	strthi	r0, [r6], r0
    d6a0:	481a0000 	ldmdami	sl, {}	; <UNPREDICTABLE>
    d6a4:	01000038 	tsteq	r0, r8, lsr r0
    d6a8:	f3140c7d 	vqrdmlsh.s16	q0, q2, <illegal reg q14.5>
    d6ac:	cc000000 	stcgt	0, cr0, [r0], {-0}
    d6b0:	c8000086 	stmdagt	r0, {r1, r2, r7}
    d6b4:	1d000086 	stcne	0, cr0, [r0, #-536]	; 0xfffffde8
    d6b8:	00000000 	andeq	r0, r0, r0
    d6bc:	0000243b 	andeq	r2, r0, fp, lsr r4
    d6c0:	0000001d 	andeq	r0, r0, sp, lsl r0
    d6c4:	00244900 	eoreq	r4, r4, r0, lsl #18
    d6c8:	01210000 			; <UNDEFINED> instruction: 0x01210000
    d6cc:	00002e56 	andeq	r2, r0, r6, asr lr
    d6d0:	160c6801 	strne	r6, [ip], -r1, lsl #16
    d6d4:	0004a901 	andeq	sl, r4, r1, lsl #18
	...
    d6e0:	0086eb00 	addeq	lr, r6, r0, lsl #22
    d6e4:	089b0100 	ldmeq	fp, {r8}
    d6e8:	fb190000 	blx	64d6f2 <_Min_Heap_Size+0x64cef2>
    d6ec:	01000031 	tsteq	r0, r1, lsr r0
    d6f0:	15390c68 	ldrne	r0, [r9, #-3176]!	; 0xfffff398
    d6f4:	0f000001 	svceq	0x00000001
    d6f8:	0b000087 	bleq	d91c <_Min_Heap_Size+0xd11c>
    d6fc:	1a000087 	bne	d920 <_Min_Heap_Size+0xd120>
    d700:	0000306e 	andeq	r3, r0, lr, rrx
    d704:	1a0c6a01 	bne	327f10 <_Min_Heap_Size+0x327710>
    d708:	000004a9 	andeq	r0, r0, r9, lsr #9
    d70c:	00008732 	andeq	r8, r0, r2, lsr r7
    d710:	00008730 	andeq	r8, r0, r0, lsr r7
    d714:	00000020 	andeq	r0, r0, r0, lsr #32
    d718:	0020ee00 	eoreq	lr, r0, r0, lsl #28
    d71c:	50011f00 	andpl	r1, r1, r0, lsl #30
    d720:	5001f303 	andpl	pc, r1, r3, lsl #6
    d724:	0151011f 	cmpeq	r1, pc, lsl r1
    d728:	52011f34 	andpl	r1, r1, #52, 30	; 0xd0
    d72c:	00003001 	andeq	r3, r0, r1
    d730:	2f850123 	svccs	0x00850123
    d734:	3c010000 	stccc	0, cr0, [r1], {-0}
    d738:	fc010a0c 	stc2	10, cr0, [r1], {12}	; <UNPREDICTABLE>
    d73c:	4e08001d 	mcrmi	0, 0, r0, cr8, cr13, {0}
    d740:	4508001e 	strmi	r0, [r8, #-30]	; 0xffffffe2
    d744:	01000087 	smlabbeq	r0, r7, r0, r0
    d748:	0000094e 	andeq	r0, r0, lr, asr #18
    d74c:	00306f19 	eorseq	r6, r0, r9, lsl pc
    d750:	0c3c0100 	ldfeqs	f0, [ip], #-0
    d754:	0003d238 	andeq	sp, r3, r8, lsr r2
    d758:	00876900 	addeq	r6, r7, r0, lsl #18
    d75c:	00876500 	addeq	r6, r7, r0, lsl #10
    d760:	3f3a1900 	svccc	0x003a1900
    d764:	3d010000 	stccc	0, cr0, [r1, #-0]
    d768:	011a350c 	tsteq	sl, ip, lsl #10
    d76c:	878b0000 	strhi	r0, [fp, r0]
    d770:	87870000 	strhi	r0, [r7, r0]
    d774:	9f190000 	svcls	0x00190000
    d778:	01000029 	tsteq	r0, r9, lsr #32
    d77c:	ff3b0c3e 			; <UNDEFINED> instruction: 0xff3b0c3e
    d780:	ad000000 	stcge	0, cr0, [r0, #-0]
    d784:	a9000087 	stmdbge	r0, {r0, r1, r2, r7}
    d788:	1a000087 	bne	d9ac <_Min_Heap_Size+0xd1ac>
    d78c:	0000306e 	andeq	r3, r0, lr, rrx
    d790:	190c4001 	stmdbne	ip, {r0, lr}
    d794:	0000065c 	andeq	r0, r0, ip, asr r6
    d798:	000087cf 	andeq	r8, r0, pc, asr #15
    d79c:	000087cb 	andeq	r8, r0, fp, asr #15
    d7a0:	001e081d 	andseq	r0, lr, sp, lsl r8
    d7a4:	00243b08 	eoreq	r3, r4, r8, lsl #22
    d7a8:	1e241d00 	cdpne	13, 2, cr1, cr4, cr0, {0}
    d7ac:	24490800 	strbcs	r0, [r9], #-2048	; 0xfffff800
    d7b0:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
    d7b4:	bd08001e 	stclt	0, cr0, [r8, #-120]	; 0xffffff88
    d7b8:	3100000a 	tstcc	r0, sl
    d7bc:	1f000009 	svcne	0x00000009
    d7c0:	74025001 	strvc	r5, [r2], #-1
    d7c4:	4c200000 	stcmi	0, cr0, [r0], #-0
    d7c8:	5708001e 	smladpl	r8, lr, r0, r0
    d7cc:	1f000024 	svcne	0x00000024
    d7d0:	74025001 	strvc	r5, [r2], #-1
    d7d4:	51011f2c 	tstpl	r1, ip, lsr #30
    d7d8:	1f007502 	svcne	0x00007502
    d7dc:	76025201 	strvc	r5, [r2], -r1, lsl #4
    d7e0:	24000000 	strcs	r0, [r0], #-0
    d7e4:	00301d01 	eorseq	r1, r0, r1, lsl #26
    d7e8:	0a780100 	beq	1e0dbf0 <_Min_Heap_Size+0x1e0d3f0>
    d7ec:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    d7f8:	7d020000 	stcvc	0, cr0, [r2, #-0]
    d7fc:	09ad0100 	stmibeq	sp!, {r8}
    d800:	6f190000 	svcvs	0x00190000
    d804:	01000030 	tsteq	r0, r0, lsr r0
    d808:	de3a0a78 			; <UNDEFINED> instruction: 0xde3a0a78
    d80c:	f5000003 			; <UNDEFINED> instruction: 0xf5000003
    d810:	ed000087 	stc	0, cr0, [r0, #-540]	; 0xfffffde4
    d814:	1a000087 	bne	da38 <_Min_Heap_Size+0xd238>
    d818:	00003848 	andeq	r3, r0, r8, asr #16
    d81c:	100a7a01 	andne	r7, sl, r1, lsl #20
    d820:	000000f3 	strdeq	r0, [r0], -r3
    d824:	00008831 	andeq	r8, r0, r1, lsr r8
    d828:	0000882f 	andeq	r8, r0, pc, lsr #16
    d82c:	00306e1a 	eorseq	r6, r0, sl, lsl lr
    d830:	0a7b0100 	beq	1ecdc38 <_Min_Heap_Size+0x1ecd438>
    d834:	00065c15 	andeq	r5, r6, r5, lsl ip
    d838:	00884d00 	addeq	r4, r8, r0, lsl #26
    d83c:	00884500 	addeq	r4, r8, r0, lsl #10
    d840:	0f180000 	svceq	0x00180000
    d844:	0100002d 	tsteq	r0, sp, lsr #32
    d848:	01130a63 	tsteq	r3, r3, ror #20
    d84c:	000000f3 	strdeq	r0, [r0], -r3
	...
    d858:	00008887 	andeq	r8, r0, r7, lsl #17
    d85c:	000a0901 	andeq	r0, sl, r1, lsl #18
    d860:	306e1900 	rsbcc	r1, lr, r0, lsl #18
    d864:	63010000 	movwvs	r0, #4096	; 0x1000
    d868:	064b330a 	strbeq	r3, [fp], -sl, lsl #6
    d86c:	88b10000 	ldmhi	r1!, {}	; <UNPREDICTABLE>
    d870:	88a70000 	stmiahi	r7!, {}	; <UNPREDICTABLE>
    d874:	481a0000 	ldmdami	sl, {}	; <UNPREDICTABLE>
    d878:	01000038 	tsteq	r0, r8, lsr r0
    d87c:	f3100a65 	vpmax.u16	q0, q0, <illegal reg q10.5>
    d880:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    d884:	f6000088 			; <UNDEFINED> instruction: 0xf6000088
    d888:	1d000088 	stcne	0, cr0, [r0, #-544]	; 0xfffffde0
    d88c:	00000000 	andeq	r0, r0, r0
    d890:	0000243b 	andeq	r2, r0, fp, lsr r4
    d894:	0000001d 	andeq	r0, r0, sp, lsl r0
    d898:	00244900 	eoreq	r4, r4, r0, lsl #18
    d89c:	01240000 			; <UNDEFINED> instruction: 0x01240000
    d8a0:	00003197 	muleq	r0, r7, r1
    d8a4:	0c0a4b01 			; <UNDEFINED> instruction: 0x0c0a4b01
    d8a8:	0000f301 	andeq	pc, r0, r1, lsl #6
	...
    d8b4:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    d8b8:	000a6101 	andeq	r6, sl, r1, lsl #2
    d8bc:	306f1900 	rsbcc	r1, pc, r0, lsl #18
    d8c0:	4b010000 	blmi	4d8c8 <_Min_Heap_Size+0x4d0c8>
    d8c4:	03de3b0a 	bicseq	r3, lr, #10240	; 0x2800
    d8c8:	89130000 	ldmdbhi	r3, {}	; <UNPREDICTABLE>
    d8cc:	890b0000 	stmdbhi	fp, {}	; <UNPREDICTABLE>
    d8d0:	48250000 	stmdami	r5!, {}	; <UNPREDICTABLE>
    d8d4:	01000038 	tsteq	r0, r8, lsr r0
    d8d8:	f3100a4d 	vpmax.u16	q0, q0, <illegal reg q6.5>
    d8dc:	00000000 	andeq	r0, r0, r0
    d8e0:	00306e1a 	eorseq	r6, r0, sl, lsl lr
    d8e4:	0a4e0100 	beq	138dcec <_Min_Heap_Size+0x138d4ec>
    d8e8:	00065c15 	andeq	r5, r6, r5, lsl ip
    d8ec:	00895500 	addeq	r5, r9, r0, lsl #10
    d8f0:	00894d00 	addeq	r4, r9, r0, lsl #26
    d8f4:	da180000 	ble	60d8fc <_Min_Heap_Size+0x60d0fc>
    d8f8:	0100002a 	tsteq	r0, sl, lsr #32
    d8fc:	01130a36 	tsteq	r3, r6, lsr sl
    d900:	000000f3 	strdeq	r0, [r0], -r3
    d904:	08001a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp, ip}
    d908:	08001a84 	stmdaeq	r0, {r2, r7, r9, fp, ip}
    d90c:	0000898f 	andeq	r8, r0, pc, lsl #19
    d910:	000abd01 	andeq	fp, sl, r1, lsl #26
    d914:	306e1900 	rsbcc	r1, lr, r0, lsl #18
    d918:	36010000 	strcc	r0, [r1], -r0
    d91c:	064b340a 	strbeq	r3, [fp], -sl, lsl #8
    d920:	89b90000 	ldmibhi	r9!, {}	; <UNPREDICTABLE>
    d924:	89af0000 	stmibhi	pc!, {}	; <UNPREDICTABLE>
    d928:	481a0000 	ldmdami	sl, {}	; <UNPREDICTABLE>
    d92c:	01000038 	tsteq	r0, r8, lsr r0
    d930:	f3100a38 	vpmin.u16	d0, d0, d24
    d934:	00000000 	andeq	r0, r0, r0
    d938:	fe00008a 	cdp2	0, 0, cr0, cr0, cr10, {4}
    d93c:	1d000089 	stcne	0, cr0, [r0, #-548]	; 0xfffffddc
    d940:	08001a72 	stmdaeq	r0, {r1, r4, r5, r6, r9, fp, ip}
    d944:	0000243b 	andeq	r2, r0, fp, lsr r4
    d948:	001a7c1d 	andseq	r7, sl, sp, lsl ip
    d94c:	00244908 	eoreq	r4, r4, r8, lsl #18
    d950:	75260000 	strvc	r0, [r6, #-0]!
    d954:	01000031 	tsteq	r0, r1, lsr r0
    d958:	010d09be 			; <UNDEFINED> instruction: 0x010d09be
    d95c:	08001b76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, fp, ip}
    d960:	08001bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, ip}
    d964:	00008a13 	andeq	r8, r0, r3, lsl sl
    d968:	000baf01 	andeq	sl, fp, r1, lsl #30
    d96c:	306e1900 	rsbcc	r1, lr, r0, lsl #18
    d970:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    d974:	065c2d09 	ldrbeq	r2, [ip], -r9, lsl #26
    d978:	8a370000 	bhi	dcd980 <_Min_Heap_Size+0xdcd180>
    d97c:	8a330000 	bhi	ccd984 <_Min_Heap_Size+0xccd184>
    d980:	7e1c0000 	cdpvc	0, 1, cr0, cr12, cr0, {0}
    d984:	be08001b 	mcrlt	0, 0, r0, cr8, cr11, {0}
    d988:	4a08001b 	bmi	20d9fc <_Min_Heap_Size+0x20d1fc>
    d98c:	1a00000b 	bne	d9c0 <_Min_Heap_Size+0xd1c0>
    d990:	000029dc 	ldrdeq	r2, [r0], -ip
    d994:	1009c801 	andne	ip, r9, r1, lsl #16
    d998:	000000c0 	andeq	r0, r0, r0, asr #1
    d99c:	00008a59 	andeq	r8, r0, r9, asr sl
    d9a0:	00008a55 	andeq	r8, r0, r5, asr sl
    d9a4:	001b921e 	andseq	r9, fp, lr, lsl r2
    d9a8:	00242c08 	eoreq	r2, r4, r8, lsl #24
    d9ac:	000b2300 	andeq	r2, fp, r0, lsl #6
    d9b0:	50011f00 	andpl	r1, r1, r0, lsl #30
    d9b4:	002c7502 	eoreq	r7, ip, r2, lsl #10
    d9b8:	001ba81e 	andseq	sl, fp, lr, lsl r8
    d9bc:	00057608 	andeq	r7, r5, r8, lsl #12
    d9c0:	000b3700 	andeq	r3, fp, r0, lsl #14
    d9c4:	50011f00 	andpl	r1, r1, r0, lsl #30
    d9c8:	00007502 	andeq	r7, r0, r2, lsl #10
    d9cc:	001bb01d 	andseq	fp, fp, sp, lsl r0
    d9d0:	00246608 	eoreq	r6, r4, r8, lsl #12
    d9d4:	1bb61d00 	blne	fed94ddc <_estack+0xded8b43c>
    d9d8:	24660800 	strbtcs	r0, [r6], #-2048	; 0xfffff800
    d9dc:	1c000000 	stcne	0, cr0, [r0], {-0}
    d9e0:	08001bc6 	stmdaeq	r0, {r1, r2, r6, r7, r8, r9, fp, ip}
    d9e4:	08001bf2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r8, r9, fp, ip}
    d9e8:	00000b8a 	andeq	r0, r0, sl, lsl #23
    d9ec:	0031e51a 	eorseq	lr, r1, sl, lsl r5
    d9f0:	0a190100 	beq	64ddf8 <_Min_Heap_Size+0x64d5f8>
    d9f4:	0000c010 	andeq	ip, r0, r0, lsl r0
    d9f8:	008a7b00 	addeq	r7, sl, r0, lsl #22
    d9fc:	008a7700 	addeq	r7, sl, r0, lsl #14
    da00:	1be21e00 	blne	ff895208 <_estack+0xdf88b868>
    da04:	242c0800 	strtcs	r0, [ip], #-2048	; 0xfffff800
    da08:	0b800000 	bleq	fe00da10 <_estack+0xde004070>
    da0c:	011f0000 	tsteq	pc, r0
    da10:	10750250 	rsbsne	r0, r5, r0, asr r2
    da14:	1bea1d00 	blne	ffa94e1c <_estack+0xdfa8b47c>
    da18:	24660800 	strbtcs	r0, [r6], #-2048	; 0xfffff800
    da1c:	1d000000 	stcne	0, cr0, [r0, #-0]
    da20:	08001b7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, fp, ip}
    da24:	0000243b 	andeq	r2, r0, fp, lsr r4
    da28:	001bc21d 	andseq	ip, fp, sp, lsl r2
    da2c:	00244908 	eoreq	r4, r4, r8, lsl #18
    da30:	1bc61d00 	blne	ff194e38 <_estack+0xdf18b498>
    da34:	243b0800 	ldrtcs	r0, [fp], #-2048	; 0xfffff800
    da38:	f61d0000 			; <UNDEFINED> instruction: 0xf61d0000
    da3c:	4908001b 	stmdbmi	r8, {r0, r1, r3, r4}
    da40:	00000024 	andeq	r0, r0, r4, lsr #32
    da44:	00310226 	eorseq	r0, r1, r6, lsr #4
    da48:	09a90100 	stmibeq	r9!, {r8}
    da4c:	1afa010d 	bne	ffe8de88 <_estack+0xdfe844e8>
    da50:	1b1e0800 	blne	78fa58 <_Min_Heap_Size+0x78f258>
    da54:	8a990800 	bhi	fe64fa5c <_estack+0xde6460bc>
    da58:	fe010000 	cdp2	0, 0, cr0, cr1, cr0, {0}
    da5c:	1900000b 	stmdbne	r0, {r0, r1, r3}
    da60:	0000306e 	andeq	r3, r0, lr, rrx
    da64:	3309a901 	movwcc	sl, #39169	; 0x9901
    da68:	0000065c 	andeq	r0, r0, ip, asr r6
    da6c:	00008acd 	andeq	r8, r0, sp, asr #21
    da70:	00008ac5 	andeq	r8, r0, r5, asr #21
    da74:	002aea19 	eoreq	lr, sl, r9, lsl sl
    da78:	09aa0100 	stmibeq	sl!, {r8}
    da7c:	0000a830 	andeq	sl, r0, r0, lsr r8
    da80:	008b0c00 	addeq	r0, fp, r0, lsl #24
    da84:	008b0400 	addeq	r0, fp, r0, lsl #8
    da88:	1b1a1d00 	blne	694e90 <_Min_Heap_Size+0x694690>
    da8c:	24750800 	ldrbtcs	r0, [r5], #-2048	; 0xfffff800
    da90:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    da94:	00002c15 	andeq	r2, r0, r5, lsl ip
    da98:	13095601 	movwne	r5, #38401	; 0x9601
    da9c:	0000f301 	andeq	pc, r0, r1, lsl #6
    daa0:	001a8400 	andseq	r8, sl, r0, lsl #8
    daa4:	001afa08 	andseq	pc, sl, r8, lsl #20
    daa8:	008b4308 	addeq	r4, fp, r8, lsl #6
    daac:	0ca20100 	stfeqs	f0, [r2]
    dab0:	6e190000 	cdpvs	0, 1, cr0, cr9, cr0, {0}
    dab4:	01000030 	tsteq	r0, r0, lsr r0
    dab8:	5c370956 			; <UNDEFINED> instruction: 0x5c370956
    dabc:	73000006 	movwvc	r0, #6
    dac0:	6300008b 	movwvs	r0, #139	; 0x8b
    dac4:	1900008b 	stmdbne	r0, {r0, r1, r3, r7}
    dac8:	00002ff0 	strdeq	r2, [r0], -r0
    dacc:	34095701 	strcc	r5, [r9], #-1793	; 0xfffff8ff
    dad0:	000000b4 	strheq	r0, [r0], -r4
    dad4:	00008be3 	andeq	r8, r0, r3, ror #23
    dad8:	00008bd3 	ldrdeq	r8, [r0], -r3
    dadc:	0031cc19 	eorseq	ip, r1, r9, lsl ip
    dae0:	09580100 	ldmdbeq	r8, {r8}^
    dae4:	0000ff38 	andeq	pc, r0, r8, lsr pc	; <UNPREDICTABLE>
    dae8:	008c5300 	addeq	r5, ip, r0, lsl #6
    daec:	008c4f00 	addeq	r4, ip, r0, lsl #30
    daf0:	38481a00 	stmdacc	r8, {r9, fp, ip}^
    daf4:	5a010000 	bpl	4dafc <_Min_Heap_Size+0x4d2fc>
    daf8:	00f31009 	rscseq	r1, r3, r9
    dafc:	8c7b0000 	ldclhi	0, cr0, [fp], #-0
    db00:	8c710000 	ldclhi	0, cr0, [r1], #-0
    db04:	181a0000 	ldmdane	sl, {}	; <UNPREDICTABLE>
    db08:	0100002b 	tsteq	r0, fp, lsr #32
    db0c:	0411095b 	ldreq	r0, [r1], #-2395	; 0xfffff6a5
    db10:	c3000001 	movwgt	r0, #1
    db14:	bd00008c 	stclt	0, cr0, [r0, #-560]	; 0xfffffdd0
    db18:	1d00008c 	stcne	0, cr0, [r0, #-560]	; 0xfffffdd0
    db1c:	08001aa2 	stmdaeq	r0, {r1, r5, r7, r9, fp, ip}
    db20:	00002482 	andeq	r2, r0, r2, lsl #9
    db24:	001ab01d 	andseq	fp, sl, sp, lsl r0
    db28:	00247508 	eoreq	r7, r4, r8, lsl #10
    db2c:	1acc1d00 	bne	ff314f34 <_estack+0xdf30b594>
    db30:	24750800 	ldrbtcs	r0, [r5], #-2048	; 0xfffff800
    db34:	27000000 	strcs	r0, [r0, -r0]
    db38:	00002af3 	strdeq	r2, [r0], -r3
    db3c:	18093d01 	stmdane	r9, {r0, r8, sl, fp, ip, sp}
    db40:	00010401 	andeq	r0, r1, r1, lsl #8
	...
    db4c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    db50:	000ceb01 	andeq	lr, ip, r1, lsl #22
    db54:	306e1900 	rsbcc	r1, lr, r0, lsl #18
    db58:	3d010000 	stccc	0, cr0, [r1, #-0]
    db5c:	06515409 	ldrbeq	r5, [r1], -r9, lsl #8
    db60:	8cf40000 	ldclhi	0, cr0, [r4]
    db64:	8cee0000 	stclhi	0, cr0, [lr]
    db68:	d71a0000 	ldrle	r0, [sl, -r0]
    db6c:	0100002e 	tsteq	r0, lr, lsr #32
    db70:	0415093f 	ldreq	r0, [r5], #-2367	; 0xfffff6c1
    db74:	22000001 	andcs	r0, r0, #1
    db78:	2000008d 	andcs	r0, r0, sp, lsl #1
    db7c:	0000008d 	andeq	r0, r0, sp, lsl #1
    db80:	2d830124 	stfcss	f0, [r3, #144]	; 0x90
    db84:	31010000 	mrscc	r0, (UNDEF: 1)
    db88:	04010d09 	streq	r0, [r1], #-3337	; 0xfffff2f7
    db8c:	00000001 	andeq	r0, r0, r1
    db90:	00000000 	andeq	r0, r0, r0
    db94:	02000000 	andeq	r0, r0, #0
    db98:	2001007d 	andcs	r0, r1, sp, ror r0
    db9c:	1900000d 	stmdbne	r0, {r0, r2, r3}
    dba0:	0000306f 	andeq	r3, r0, pc, rrx
    dba4:	32093101 	andcc	r3, r9, #1073741824	; 0x40000000
    dba8:	000003d2 	ldrdeq	r0, [r0], -r2
    dbac:	00008d39 	andeq	r8, r0, r9, lsr sp
    dbb0:	00008d35 	andeq	r8, r0, r5, lsr sp
    dbb4:	d8012400 	stmdale	r1, {sl, sp}
    dbb8:	0100002f 	tsteq	r0, pc, lsr #32
    dbbc:	010d0927 	tsteq	sp, r7, lsr #18
    dbc0:	00000104 	andeq	r0, r0, r4, lsl #2
	...
    dbcc:	01007d02 	tsteq	r0, r2, lsl #26
    dbd0:	00000d55 	andeq	r0, r0, r5, asr sp
    dbd4:	00306f19 	eorseq	r6, r0, r9, lsl pc
    dbd8:	09270100 	stmdbeq	r7!, {r8}
    dbdc:	0003d234 	andeq	sp, r3, r4, lsr r2
    dbe0:	008d5e00 	addeq	r5, sp, r0, lsl #28
    dbe4:	008d5a00 	addeq	r5, sp, r0, lsl #20
    dbe8:	01230000 			; <UNDEFINED> instruction: 0x01230000
    dbec:	00002a45 	andeq	r2, r0, r5, asr #20
    dbf0:	0608ce01 	streq	ip, [r8], -r1, lsl #28
    dbf4:	00000001 	andeq	r0, r0, r1
    dbf8:	00000000 	andeq	r0, r0, r0
    dbfc:	008d7f00 	addeq	r7, sp, r0, lsl #30
    dc00:	0da50100 	stfeqs	f0, [r5]
    dc04:	6f190000 	svcvs	0x00190000
    dc08:	01000030 	tsteq	r0, r0, lsr r0
    dc0c:	d22208ce 	eorle	r0, r2, #13500416	; 0xce0000
    dc10:	a7000003 	strge	r0, [r0, -r3]
    dc14:	9f00008d 	svcls	0x0000008d
    dc18:	1a00008d 	bne	de54 <_Min_Heap_Size+0xd654>
    dc1c:	0000306e 	andeq	r3, r0, lr, rrx
    dc20:	1508d001 	strne	sp, [r8, #-1]
    dc24:	0000065c 	andeq	r0, r0, ip, asr r6
    dc28:	00008de9 	andeq	r8, r0, r9, ror #27
    dc2c:	00008de1 	andeq	r8, r0, r1, ror #27
    dc30:	0000001d 	andeq	r0, r0, sp, lsl r0
    dc34:	00249100 	eoreq	r9, r4, r0, lsl #2
    dc38:	01240000 			; <UNDEFINED> instruction: 0x01240000
    dc3c:	00002cb1 			; <UNDEFINED> instruction: 0x00002cb1
    dc40:	0d08be01 	stceq	14, cr11, [r8, #-4]
    dc44:	00010401 	andeq	r0, r1, r1, lsl #8
	...
    dc50:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    dc54:	000e0401 	andeq	r0, lr, r1, lsl #8
    dc58:	306f1900 	rsbcc	r1, pc, r0, lsl #18
    dc5c:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
    dc60:	03de4008 	bicseq	r4, lr, #8
    dc64:	8e270000 	cdphi	0, 2, cr0, cr7, cr0, {0}
    dc68:	8e230000 	cdphi	0, 2, cr0, cr3, cr0, {0}
    dc6c:	251a0000 	ldrcs	r0, [sl, #-0]
    dc70:	0100002a 	tsteq	r0, sl, lsr #32
    dc74:	041108c0 	ldreq	r0, [r1], #-2240	; 0xfffff740
    dc78:	4a000001 	bmi	dc84 <_Min_Heap_Size+0xd484>
    dc7c:	4800008e 	stmdami	r0, {r1, r2, r3, r7}
    dc80:	1a00008e 	bne	dec0 <_Min_Heap_Size+0xd6c0>
    dc84:	0000306e 	andeq	r3, r0, lr, rrx
    dc88:	1508c101 	strne	ip, [r8, #-257]	; 0xfffffeff
    dc8c:	0000065c 	andeq	r0, r0, ip, asr r6
    dc90:	00008e61 	andeq	r8, r0, r1, ror #28
    dc94:	00008e5d 	andeq	r8, r0, sp, asr lr
    dc98:	c5012100 	strgt	r2, [r1, #-256]	; 0xffffff00
    dc9c:	01000029 	tsteq	r0, r9, lsr #32
    dca0:	010d08a9 	smlatbeq	sp, r9, r8, r0
    dca4:	00000104 	andeq	r0, r0, r4, lsl #2
	...
    dcb0:	00008e82 	andeq	r8, r0, r2, lsl #29
    dcb4:	000e7601 	andeq	r7, lr, r1, lsl #12
    dcb8:	306f1900 	rsbcc	r1, pc, r0, lsl #18
    dcbc:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
    dcc0:	03de3908 	bicseq	r3, lr, #8, 18	; 0x20000
    dcc4:	8ea80000 	cdphi	0, 10, cr0, cr8, cr0, {0}
    dcc8:	8ea20000 	cdphi	0, 10, cr0, cr2, cr0, {0}
    dccc:	251a0000 	ldrcs	r0, [sl, #-0]
    dcd0:	0100002a 	tsteq	r0, sl, lsr #32
    dcd4:	041108ab 	ldreq	r0, [r1], #-2219	; 0xfffff755
    dcd8:	d6000001 	strle	r0, [r0], -r1
    dcdc:	d400008e 	strle	r0, [r0], #-142	; 0xffffff72
    dce0:	1a00008e 	bne	df20 <_Min_Heap_Size+0xd720>
    dce4:	0000306e 	andeq	r3, r0, lr, rrx
    dce8:	1508ac01 	strne	sl, [r8, #-3073]	; 0xfffff3ff
    dcec:	0000065c 	andeq	r0, r0, ip, asr r6
    dcf0:	00008eef 	andeq	r8, r0, pc, ror #29
    dcf4:	00008ee9 	andeq	r8, r0, r9, ror #29
    dcf8:	0000001d 	andeq	r0, r0, sp, lsl r0
    dcfc:	00243b00 	eoreq	r3, r4, r0, lsl #22
    dd00:	00001d00 	andeq	r1, r0, r0, lsl #26
    dd04:	24490000 	strbcs	r0, [r9], #-0
    dd08:	21000000 	mrscs	r0, (UNDEF: 0)
    dd0c:	00303601 	eorseq	r3, r0, r1, lsl #12
    dd10:	08950100 	ldmeq	r5, {r8}
    dd14:	0104010d 	tsteq	r4, sp, lsl #2
	...
    dd20:	8f1b0000 	svchi	0x001b0000
    dd24:	d3010000 	movwle	r0, #4096	; 0x1000
    dd28:	1900000e 	stmdbne	r0, {r1, r2, r3}
    dd2c:	0000306f 	andeq	r3, r0, pc, rrx
    dd30:	39089501 	stmdbcc	r8, {r0, r8, sl, ip, pc}
    dd34:	000003de 	ldrdeq	r0, [r0], -lr
    dd38:	00008f41 	andeq	r8, r0, r1, asr #30
    dd3c:	00008f3b 	andeq	r8, r0, fp, lsr pc
    dd40:	002a251a 	eoreq	r2, sl, sl, lsl r5
    dd44:	08970100 	ldmeq	r7, {r8}
    dd48:	00010411 	andeq	r0, r1, r1, lsl r4
    dd4c:	008f6f00 	addeq	r6, pc, r0, lsl #30
    dd50:	008f6d00 	addeq	r6, pc, r0, lsl #26
    dd54:	00001d00 	andeq	r1, r0, r0, lsl #26
    dd58:	243b0000 	ldrtcs	r0, [fp], #-0
    dd5c:	001d0000 	andseq	r0, sp, r0
    dd60:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    dd64:	00000024 	andeq	r0, r0, r4, lsr #32
    dd68:	30d70121 	sbcscc	r0, r7, r1, lsr #2
    dd6c:	57010000 	strpl	r0, [r1, -r0]
    dd70:	f3010c08 			; <UNDEFINED> instruction: 0xf3010c08
	...
    dd7c:	82000000 	andhi	r0, r0, #0
    dd80:	0100008f 	smlabbeq	r0, pc, r0, r0	; <UNPREDICTABLE>
    dd84:	00000fd7 	ldrdeq	r0, [r0], -r7
    dd88:	00306f19 	eorseq	r6, r0, r9, lsl pc
    dd8c:	08570100 	ldmdaeq	r7, {r8}^
    dd90:	0003d22d 	andeq	sp, r3, sp, lsr #4
    dd94:	008faa00 	addeq	sl, pc, r0, lsl #20
    dd98:	008fa200 	addeq	sl, pc, r0, lsl #4
    dd9c:	2aea1900 	bcs	ffa941a4 <_estack+0xdfa8a804>
    dda0:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    dda4:	00a82c08 	adceq	r2, r8, r8, lsl #24
    dda8:	8fe90000 	svchi	0x00e90000
    ddac:	8fe10000 	svchi	0x00e10000
    ddb0:	481a0000 	ldmdami	sl, {}	; <UNPREDICTABLE>
    ddb4:	01000038 	tsteq	r0, r8, lsr r0
    ddb8:	f310085a 	vceq.i16	q0, q0, q5
    ddbc:	27000000 	strcs	r0, [r0, -r0]
    ddc0:	23000090 	movwcs	r0, #144	; 0x90
    ddc4:	1a000090 	bne	e00c <_Min_Heap_Size+0xd80c>
    ddc8:	00002a5d 	andeq	r2, r0, sp, asr sl
    ddcc:	11085b01 	tstne	r8, r1, lsl #22
    ddd0:	00000104 	andeq	r0, r0, r4, lsl #2
    ddd4:	00009048 	andeq	r9, r0, r8, asr #32
    ddd8:	00009046 	andeq	r9, r0, r6, asr #32
    dddc:	002e8d1a 	eoreq	r8, lr, sl, lsl sp
    dde0:	085c0100 	ldmdaeq	ip, {r8}^
    dde4:	0004ed0e 	andeq	lr, r4, lr, lsl #26
    dde8:	00905d00 	addseq	r5, r0, r0, lsl #26
    ddec:	00905b00 	addseq	r5, r0, r0, lsl #22
    ddf0:	306e1a00 	rsbcc	r1, lr, r0, lsl #20
    ddf4:	5d010000 	stcpl	0, cr0, [r1, #-0]
    ddf8:	065c1508 	ldrbeq	r1, [ip], -r8, lsl #10
    ddfc:	90780000 	rsbsls	r0, r8, r0
    de00:	90700000 	rsbsls	r0, r0, r0
    de04:	f2280000 	vhadd.s32	d0, d8, d0
    de08:	00000023 	andeq	r0, r0, r3, lsr #32
    de0c:	0a000000 	beq	de14 <_Min_Heap_Size+0xd614>
	...
    de18:	2e087801 	cdpcs	8, 0, cr7, cr8, cr1, {0}
    de1c:	00000f9e 	muleq	r0, lr, pc	; <UNPREDICTABLE>
    de20:	00240429 	eoreq	r0, r4, r9, lsr #8
    de24:	0090b100 	addseq	fp, r0, r0, lsl #2
    de28:	0090af00 	addseq	sl, r0, r0, lsl #30
    de2c:	24102a00 	ldrcs	r2, [r0], #-2560	; 0xfffff600
    de30:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    de34:	000023d7 	ldrdeq	r2, [r0], -r7
    de38:	00000000 	andeq	r0, r0, r0
    de3c:	00000002 	andeq	r0, r0, r2
    de40:	00000000 	andeq	r0, r0, r0
    de44:	088d0100 	stmeq	sp, {r8}
    de48:	000fc605 	andeq	ip, pc, r5, lsl #12
    de4c:	23e52b00 	mvncs	r2, #0, 22
    de50:	90c60000 	sbcls	r0, r6, r0
    de54:	90c40000 	sbcls	r0, r4, r0
    de58:	20000000 	andcs	r0, r0, r0
    de5c:	00000000 	andeq	r0, r0, r0
    de60:	00000baf 	andeq	r0, r0, pc, lsr #23
    de64:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    de68:	00000074 	andeq	r0, r0, r4, ror r0
    de6c:	28e50121 	stmiacs	r5!, {r0, r5, r8}^
    de70:	f3010000 	vhadd.u8	d0, d1, d0
    de74:	f3010c07 			; <UNDEFINED> instruction: 0xf3010c07
	...
    de80:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
    de84:	01000090 	swpeq	r0, r0, [r0]	; <UNPREDICTABLE>
    de88:	00001155 	andeq	r1, r0, r5, asr r1
    de8c:	00306f19 	eorseq	r6, r0, r9, lsl pc
    de90:	07f30100 	ldrbeq	r0, [r3, r0, lsl #2]!
    de94:	0003d230 	andeq	sp, r3, r0, lsr r2
    de98:	00910100 	addseq	r0, r1, r0, lsl #2
    de9c:	0090f900 	addseq	pc, r0, r0, lsl #18
    dea0:	2aea1900 	bcs	ffa942a8 <_estack+0xdfa8a908>
    dea4:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    dea8:	00a82f07 	adceq	r2, r8, r7, lsl #30
    deac:	91400000 	mrsls	r0, (UNDEF: 64)
    deb0:	91380000 	teqls	r8, r0
    deb4:	11190000 	tstne	r9, r0
    deb8:	01000029 	tsteq	r0, r9, lsr #32
    debc:	5b3507f5 	blpl	d4fe98 <_Min_Heap_Size+0xd4f698>
    dec0:	82000011 	andhi	r0, r0, #17
    dec4:	7a000091 	bvc	e110 <_Min_Heap_Size+0xd910>
    dec8:	1a000091 	bne	e114 <_Min_Heap_Size+0xd914>
    decc:	00003848 	andeq	r3, r0, r8, asr #16
    ded0:	1007f701 	andne	pc, r7, r1, lsl #14
    ded4:	000000f3 	strdeq	r0, [r0], -r3
    ded8:	000091bb 			; <UNDEFINED> instruction: 0x000091bb
    dedc:	000091b9 			; <UNDEFINED> instruction: 0x000091b9
    dee0:	002a5d1a 	eoreq	r5, sl, sl, lsl sp
    dee4:	07f80100 	ldrbeq	r0, [r8, r0, lsl #2]!
    dee8:	00010411 	andeq	r0, r1, r1, lsl r4
    deec:	0091d000 	addseq	sp, r1, r0
    def0:	0091ce00 	addseq	ip, r1, r0, lsl #28
    def4:	306e1a00 	rsbcc	r1, lr, r0, lsl #20
    def8:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    defc:	065c1507 	ldrbeq	r1, [ip], -r7, lsl #10
    df00:	91eb0000 	mvnls	r0, r0
    df04:	91e30000 	mvnls	r0, r0
    df08:	f02c0000 			; <UNDEFINED> instruction: 0xf02c0000
    df0c:	03000007 	movweq	r0, #7
    df10:	1a000011 	bne	df5c <_Min_Heap_Size+0xd75c>
    df14:	00002b18 	andeq	r2, r0, r8, lsl fp
    df18:	1b081501 	blne	213324 <_Min_Heap_Size+0x212b24>
    df1c:	00000115 	andeq	r0, r0, r5, lsl r1
    df20:	00009228 	andeq	r9, r0, r8, lsr #4
    df24:	00009222 	andeq	r9, r0, r2, lsr #4
    df28:	0000002d 	andeq	r0, r0, sp, lsr #32
    df2c:	00000000 	andeq	r0, r0, r0
    df30:	31e51a00 	mvncc	r1, r0, lsl #20
    df34:	1a010000 	bne	4df3c <_Min_Heap_Size+0x4d73c>
    df38:	00d11a08 	sbcseq	r1, r1, r8, lsl #20
    df3c:	92590000 	subsls	r0, r9, #0
    df40:	92530000 	subsls	r0, r3, #0
    df44:	001c0000 	andseq	r0, ip, r0
    df48:	00000000 	andeq	r0, r0, r0
    df4c:	dd000000 	stcle	0, cr0, [r0, #-0]
    df50:	1a000010 	bne	df98 <_Min_Heap_Size+0xd798>
    df54:	00002f5c 	andeq	r2, r0, ip, asr pc
    df58:	11084401 	tstne	r8, r1, lsl #8
    df5c:	00000115 	andeq	r0, r0, r5, lsl r1
    df60:	00009288 	andeq	r9, r0, r8, lsl #5
    df64:	00009284 	andeq	r9, r0, r4, lsl #5
    df68:	0000001d 	andeq	r0, r0, sp, lsl r0
    df6c:	00241d00 	eoreq	r1, r4, r0, lsl #26
    df70:	001e0000 	andseq	r0, lr, r0
    df74:	af000000 	svcge	0x00000000
    df78:	f100000b 	cps	#11
    df7c:	1f000010 	svcne	0x00000010
    df80:	74025001 	strvc	r5, [r2], #-1
    df84:	00200000 	eoreq	r0, r0, r0
    df88:	2c000000 	stccs	0, cr0, [r0], {-0}
    df8c:	1f000024 	svcne	0x00000024
    df90:	74025001 	strvc	r5, [r2], #-1
    df94:	00000010 	andeq	r0, r0, r0, lsl r0
    df98:	0023f228 	eoreq	pc, r3, r8, lsr #4
    df9c:	00000000 	andeq	r0, r0, r0
    dfa0:	00000800 	andeq	r0, r0, r0, lsl #16
    dfa4:	00000000 	andeq	r0, r0, r0
    dfa8:	13010000 	movwne	r0, #4096	; 0x1000
    dfac:	11302e08 	teqne	r0, r8, lsl #28
    dfb0:	04290000 	strteq	r0, [r9], #-0
    dfb4:	a8000024 	stmdage	r0, {r2, r5}
    dfb8:	a6000092 			; <UNDEFINED> instruction: 0xa6000092
    dfbc:	2a000092 	bcs	e20c <_Min_Heap_Size+0xda0c>
    dfc0:	00002410 	andeq	r2, r0, r0, lsl r4
    dfc4:	23d72e00 	bicscs	r2, r7, #0, 28
    dfc8:	00000000 	andeq	r0, r0, r0
    dfcc:	00020000 	andeq	r0, r2, r0
    dfd0:	00000000 	andeq	r0, r0, r0
    dfd4:	01000000 	mrseq	r0, (UNDEF: 0)
    dfd8:	2b05084f 	blcs	15011c <_Min_Heap_Size+0x14f91c>
    dfdc:	000023e5 	andeq	r2, r0, r5, ror #7
    dfe0:	000092bd 			; <UNDEFINED> instruction: 0x000092bd
    dfe4:	000092bb 			; <UNDEFINED> instruction: 0x000092bb
    dfe8:	04070000 	streq	r0, [r7], #-0
    dfec:	000000f3 	strdeq	r0, [r0], -r3
    dff0:	00115506 	andseq	r5, r1, r6, lsl #10
    dff4:	52012100 	andpl	r2, r1, #0, 2
    dff8:	0100002b 	tsteq	r0, fp, lsr #32
    dffc:	010c0755 	tsteq	ip, r5, asr r7
    e000:	000000f3 	strdeq	r0, [r0], -r3
	...
    e00c:	000092d0 	ldrdeq	r9, [r0], -r0
    e010:	00135801 	andseq	r5, r3, r1, lsl #16
    e014:	306f1900 	rsbcc	r1, pc, r0, lsl #18
    e018:	55010000 	strpl	r0, [r1, #-0]
    e01c:	03d22607 	bicseq	r2, r2, #7340032	; 0x700000
    e020:	93180000 	tstls	r8, #0
    e024:	93140000 	tstls	r4, #0
    e028:	ea190000 	b	64e030 <_Min_Heap_Size+0x64d830>
    e02c:	0100002a 	tsteq	r0, sl, lsr #32
    e030:	a8250756 	stmdage	r5!, {r1, r2, r4, r6, r8, r9, sl}
    e034:	3a000000 	bcc	e03c <_Min_Heap_Size+0xd83c>
    e038:	36000093 			; <UNDEFINED> instruction: 0x36000093
    e03c:	19000093 	stmdbne	r0, {r0, r1, r4, r7}
    e040:	00003f3a 	andeq	r3, r0, sl, lsr pc
    e044:	23075701 	movwcs	r5, #30465	; 0x7701
    e048:	0000011a 	andeq	r0, r0, sl, lsl r1
    e04c:	0000935a 	andeq	r9, r0, sl, asr r3
    e050:	00009358 	andeq	r9, r0, r8, asr r3
    e054:	002b5d1a 	eoreq	r5, fp, sl, lsl sp
    e058:	07590100 	ldrbeq	r0, [r9, -r0, lsl #2]
    e05c:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    e060:	00937700 	addseq	r7, r3, r0, lsl #14
    e064:	00936d00 	addseq	r6, r3, r0, lsl #26
    e068:	3a8a2200 	bcc	fe296870 <_estack+0xde28ced0>
    e06c:	5a010000 	bpl	4e074 <_Min_Heap_Size+0x4d874>
    e070:	03c60f07 	biceq	r0, r6, #7, 30
    e074:	91020000 	mrsls	r0, (UNDEF: 2)
    e078:	2e8d1a68 			; <UNDEFINED> instruction: 0x2e8d1a68
    e07c:	5b010000 	blpl	4e084 <_Min_Heap_Size+0x4d884>
    e080:	04ed0e07 	strbteq	r0, [sp], #3591	; 0xe07
    e084:	93bc0000 			; <UNDEFINED> instruction: 0x93bc0000
    e088:	93b80000 			; <UNDEFINED> instruction: 0x93b80000
    e08c:	6e1a0000 	cdpvs	0, 1, cr0, cr10, cr0, {0}
    e090:	01000030 	tsteq	r0, r0, lsr r0
    e094:	5c15075c 	ldcpl	7, cr0, [r5], {92}	; 0x5c
    e098:	de000006 	cdple	0, 0, cr0, cr0, cr6, {0}
    e09c:	da000093 	ble	e2f0 <_Min_Heap_Size+0xdaf0>
    e0a0:	2c000093 	stccs	0, cr0, [r0], {147}	; 0x93
    e0a4:	000007d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e0a8:	0000127d 	andeq	r1, r0, sp, ror r2
    e0ac:	002b181a 	eoreq	r1, fp, sl, lsl r8
    e0b0:	07720100 	ldrbeq	r0, [r2, -r0, lsl #2]!
    e0b4:	0001151f 	andeq	r1, r1, pc, lsl r5
    e0b8:	00940000 	addseq	r0, r4, r0
    e0bc:	0093fc00 	addseq	pc, r3, r0, lsl #24
    e0c0:	00001e00 	andeq	r1, r0, r0, lsl #28
    e0c4:	0baf0000 	bleq	febce0cc <_estack+0xdebc472c>
    e0c8:	12460000 	subne	r0, r6, #0
    e0cc:	011f0000 	tsteq	pc, r0
    e0d0:	00740250 	rsbseq	r0, r4, r0, asr r2
    e0d4:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    e0d8:	1d000076 	stcne	0, cr0, [r0, #-472]	; 0xfffffe28
    e0dc:	00000000 	andeq	r0, r0, r0
    e0e0:	00002449 	andeq	r2, r0, r9, asr #8
    e0e4:	0000001e 	andeq	r0, r0, lr, lsl r0
    e0e8:	00242c00 	eoreq	r2, r4, r0, lsl #24
    e0ec:	00126300 	andseq	r6, r2, r0, lsl #6
    e0f0:	50011f00 	andpl	r1, r1, r0, lsl #30
    e0f4:	002c7402 	eoreq	r7, ip, r2, lsl #8
    e0f8:	0000001d 	andeq	r0, r0, sp, lsl r0
    e0fc:	00244900 	eoreq	r4, r4, r0, lsl #18
    e100:	00002000 	andeq	r2, r0, r0
    e104:	249f0000 	ldrcs	r0, [pc], #0	; e10c <_Min_Heap_Size+0xd90c>
    e108:	011f0000 	tsteq	pc, r0
    e10c:	68910250 	ldmvs	r1, {r4, r6, r9}
    e110:	001e0000 	andseq	r0, lr, r0
    e114:	bd000000 	stclt	0, cr0, [r0, #-0]
    e118:	9100000a 	tstls	r0, sl
    e11c:	1f000012 	svcne	0x00000012
    e120:	74025001 	strvc	r5, [r2], #-1
    e124:	001d0000 	andseq	r0, sp, r0
    e128:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
    e12c:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    e130:	00000000 	andeq	r0, r0, r0
    e134:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    e138:	000012ae 	andeq	r1, r0, lr, lsr #5
    e13c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    e140:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    e144:	00000000 	andeq	r0, r0, r0
    e148:	000024ae 	andeq	r2, r0, lr, lsr #9
    e14c:	0000001e 	andeq	r0, r0, lr, lsl r0
    e150:	000a6100 	andeq	r6, sl, r0, lsl #2
    e154:	0012cb00 	andseq	ip, r2, r0, lsl #22
    e158:	50011f00 	andpl	r1, r1, r0, lsl #30
    e15c:	00007402 	andeq	r7, r0, r2, lsl #8
    e160:	0000001d 	andeq	r0, r0, sp, lsl r0
    e164:	00243b00 	eoreq	r3, r4, r0, lsl #22
    e168:	00001d00 	andeq	r1, r0, r0, lsl #26
    e16c:	24490000 	strbcs	r0, [r9], #-0
    e170:	001d0000 	andseq	r0, sp, r0
    e174:	bd000000 	stclt	0, cr0, [r0, #-0]
    e178:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    e17c:	00000000 	andeq	r0, r0, r0
    e180:	0000243b 	andeq	r2, r0, fp, lsr r4
    e184:	0000001d 	andeq	r0, r0, sp, lsl r0
    e188:	00244900 	eoreq	r4, r4, r0, lsl #18
    e18c:	00001e00 	andeq	r1, r0, r0, lsl #28
    e190:	24cc0000 	strbcs	r0, [ip], #0
    e194:	13120000 	tstne	r2, #0
    e198:	011f0000 	tsteq	pc, r0
    e19c:	68910250 	ldmvs	r1, {r4, r6, r9}
    e1a0:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    e1a4:	1e006491 	mcrne	4, 0, r6, cr0, cr1, {4}
    e1a8:	00000000 	andeq	r0, r0, r0
    e1ac:	00000a61 	andeq	r0, r0, r1, ror #20
    e1b0:	00001326 	andeq	r1, r0, r6, lsr #6
    e1b4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    e1b8:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    e1bc:	00000000 	andeq	r0, r0, r0
    e1c0:	000024db 	ldrdeq	r2, [r0], -fp
    e1c4:	0000133a 	andeq	r1, r0, sl, lsr r3
    e1c8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    e1cc:	1e002c74 	mcrne	12, 0, r2, cr0, cr4, {3}
    e1d0:	00000000 	andeq	r0, r0, r0
    e1d4:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    e1d8:	0000134e 	andeq	r1, r0, lr, asr #6
    e1dc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    e1e0:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    e1e4:	00000000 	andeq	r0, r0, r0
    e1e8:	000024ae 	andeq	r2, r0, lr, lsr #9
    e1ec:	bb012100 	bllt	565f4 <_Min_Heap_Size+0x55df4>
    e1f0:	0100002b 	tsteq	r0, fp, lsr #32
    e1f4:	010c0674 	tsteq	ip, r4, ror r6
    e1f8:	000000f3 	strdeq	r0, [r0], -r3
	...
    e204:	0000941e 	andeq	r9, r0, lr, lsl r4
    e208:	00159701 	andseq	r9, r5, r1, lsl #14
    e20c:	306f1900 	rsbcc	r1, pc, r0, lsl #18
    e210:	74010000 	strvc	r0, [r1], #-0
    e214:	03d22f06 	bicseq	r2, r2, #6, 30
    e218:	94660000 	strbtls	r0, [r6], #-0
    e21c:	94620000 	strbtls	r0, [r2], #-0
    e220:	3a190000 	bcc	64e228 <_Min_Heap_Size+0x64da28>
    e224:	0100003f 	tsteq	r0, pc, lsr r0
    e228:	1a2c0675 	bne	b0fc04 <_Min_Heap_Size+0xb0f404>
    e22c:	86000001 	strhi	r0, [r0], -r1
    e230:	84000094 	strhi	r0, [r0], #-148	; 0xffffff6c
    e234:	1a000094 	bne	e48c <_Min_Heap_Size+0xdc8c>
    e238:	00002b5d 	andeq	r2, r0, sp, asr fp
    e23c:	10067701 	andne	r7, r6, r1, lsl #14
    e240:	000000f3 	strdeq	r0, [r0], -r3
    e244:	000094a1 	andeq	r9, r0, r1, lsr #9
    e248:	00009499 	muleq	r0, r9, r4
    e24c:	003a8a22 	eorseq	r8, sl, r2, lsr #20
    e250:	06780100 	ldrbteq	r0, [r8], -r0, lsl #2
    e254:	0003c60f 	andeq	ip, r3, pc, lsl #12
    e258:	68910200 	ldmvs	r1, {r9}
    e25c:	00306e1a 	eorseq	r6, r0, sl, lsl lr
    e260:	06790100 	ldrbteq	r0, [r9], -r0, lsl #2
    e264:	00065c15 	andeq	r5, r6, r5, lsl ip
    e268:	0094db00 	addseq	sp, r4, r0, lsl #22
    e26c:	0094d700 	addseq	sp, r4, r0, lsl #14
    e270:	2f351a00 	svccs	0x00351a00
    e274:	7c010000 	stcvc	0, cr0, [r1], {-0}
    e278:	00f31406 	rscseq	r1, r3, r6, lsl #8
    e27c:	95010000 	strls	r0, [r1, #-0]
    e280:	94f90000 	ldrbtls	r0, [r9], #0
    e284:	b02c0000 	eorlt	r0, ip, r0
    e288:	4f000007 	svcmi	0x00000007
    e28c:	1a000014 	bne	e2e4 <_Min_Heap_Size+0xdae4>
    e290:	00002f03 	andeq	r2, r0, r3, lsl #30
    e294:	1f069501 	svcne	0x00069501
    e298:	00000115 	andeq	r0, r0, r5, lsl r1
    e29c:	00009540 	andeq	r9, r0, r0, asr #10
    e2a0:	00009536 	andeq	r9, r0, r6, lsr r5
    e2a4:	0000001d 	andeq	r0, r0, sp, lsl r0
    e2a8:	00244900 	eoreq	r4, r4, r0, lsl #18
    e2ac:	00001d00 	andeq	r1, r0, r0, lsl #26
    e2b0:	24ea0000 	strbtcs	r0, [sl], #0
    e2b4:	001e0000 	andseq	r0, lr, r0
    e2b8:	2c000000 	stccs	0, cr0, [r0], {-0}
    e2bc:	35000024 	strcc	r0, [r0, #-36]	; 0xffffffdc
    e2c0:	1f000014 	svcne	0x00000014
    e2c4:	74025001 	strvc	r5, [r2], #-1
    e2c8:	001d0010 	andseq	r0, sp, r0, lsl r0
    e2cc:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    e2d0:	20000024 	andcs	r0, r0, r4, lsr #32
    e2d4:	00000000 	andeq	r0, r0, r0
    e2d8:	0000249f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
    e2dc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    e2e0:	00006891 	muleq	r0, r1, r8
    e2e4:	0000001c 	andeq	r0, r0, ip, lsl r0
    e2e8:	00000000 	andeq	r0, r0, r0
    e2ec:	00148f00 	andseq	r8, r4, r0, lsl #30
    e2f0:	30e91a00 	rsccc	r1, r9, r0, lsl #20
    e2f4:	30010000 	andcc	r0, r1, r0
    e2f8:	01042907 	tsteq	r4, r7, lsl #18
    e2fc:	95910000 	ldrls	r0, [r1]
    e300:	958d0000 	strls	r0, [sp]
    e304:	001e0000 	andseq	r0, lr, r0
    e308:	a2000000 	andge	r0, r0, #0
    e30c:	8500000c 	strhi	r0, [r0, #-12]
    e310:	1f000014 	svcne	0x00000014
    e314:	74025001 	strvc	r5, [r2], #-1
    e318:	001d0000 	andseq	r0, sp, r0
    e31c:	f9000000 			; <UNDEFINED> instruction: 0xf9000000
    e320:	00000024 	andeq	r0, r0, r4, lsr #32
    e324:	0000001d 	andeq	r0, r0, sp, lsl r0
    e328:	00243b00 	eoreq	r3, r4, r0, lsl #22
    e32c:	00001d00 	andeq	r1, r0, r0, lsl #26
    e330:	25080000 	strcs	r0, [r8, #-0]
    e334:	001d0000 	andseq	r0, sp, r0
    e338:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    e33c:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    e340:	00000000 	andeq	r0, r0, r0
    e344:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    e348:	000014be 			; <UNDEFINED> instruction: 0x000014be
    e34c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    e350:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    e354:	00000000 	andeq	r0, r0, r0
    e358:	000024ae 	andeq	r2, r0, lr, lsr #9
    e35c:	0000001e 	andeq	r0, r0, lr, lsl r0
    e360:	000abd00 	andeq	fp, sl, r0, lsl #26
    e364:	0014db00 	andseq	sp, r4, r0, lsl #22
    e368:	50011f00 	andpl	r1, r1, r0, lsl #30
    e36c:	00007402 	andeq	r7, r0, r2, lsl #8
    e370:	0000001d 	andeq	r0, r0, sp, lsl r0
    e374:	0024ae00 	eoreq	sl, r4, r0, lsl #28
    e378:	00001e00 	andeq	r1, r0, r0, lsl #28
    e37c:	0a610000 	beq	184e384 <_Min_Heap_Size+0x184db84>
    e380:	14f80000 	ldrbtne	r0, [r8], #0
    e384:	011f0000 	tsteq	pc, r0
    e388:	00740250 	rsbseq	r0, r4, r0, asr r2
    e38c:	00001d00 	andeq	r1, r0, r0, lsl #26
    e390:	243b0000 	ldrtcs	r0, [fp], #-0
    e394:	001d0000 	andseq	r0, sp, r0
    e398:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    e39c:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    e3a0:	00000000 	andeq	r0, r0, r0
    e3a4:	000024bd 			; <UNDEFINED> instruction: 0x000024bd
    e3a8:	0000001d 	andeq	r0, r0, sp, lsl r0
    e3ac:	00243b00 	eoreq	r3, r4, r0, lsl #22
    e3b0:	00001d00 	andeq	r1, r0, r0, lsl #26
    e3b4:	24490000 	strbcs	r0, [r9], #-0
    e3b8:	001e0000 	andseq	r0, lr, r0
    e3bc:	cc000000 	stcgt	0, cr0, [r0], {-0}
    e3c0:	3f000024 	svccc	0x00000024
    e3c4:	1f000015 	svcne	0x00000015
    e3c8:	91025001 	tstls	r2, r1
    e3cc:	51011f68 	tstpl	r1, r8, ror #30
    e3d0:	00649102 	rsbeq	r9, r4, r2, lsl #2
    e3d4:	0000001e 	andeq	r0, r0, lr, lsl r0
    e3d8:	000a6100 	andeq	r6, sl, r0, lsl #2
    e3dc:	00155300 	andseq	r5, r5, r0, lsl #6
    e3e0:	50011f00 	andpl	r1, r1, r0, lsl #30
    e3e4:	00007402 	andeq	r7, r0, r2, lsl #8
    e3e8:	0000001e 	andeq	r0, r0, lr, lsl r0
    e3ec:	0024db00 	eoreq	sp, r4, r0, lsl #22
    e3f0:	00156700 	andseq	r6, r5, r0, lsl #14
    e3f4:	50011f00 	andpl	r1, r1, r0, lsl #30
    e3f8:	002c7402 	eoreq	r7, ip, r2, lsl #8
    e3fc:	0000001e 	andeq	r0, r0, lr, lsl r0
    e400:	000abd00 	andeq	fp, sl, r0, lsl #26
    e404:	00157b00 	andseq	r7, r5, r0, lsl #22
    e408:	50011f00 	andpl	r1, r1, r0, lsl #30
    e40c:	00007402 	andeq	r7, r0, r2, lsl #8
    e410:	0000001d 	andeq	r0, r0, sp, lsl r0
    e414:	0024ae00 	eoreq	sl, r4, r0, lsl #28
    e418:	00001d00 	andeq	r1, r0, r0, lsl #26
    e41c:	243b0000 	ldrtcs	r0, [fp], #-0
    e420:	001d0000 	andseq	r0, sp, r0
    e424:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    e428:	00000024 	andeq	r0, r0, r4, lsr #32
    e42c:	28d70121 	ldmcs	r7, {r0, r5, r8}^
    e430:	de010000 	cdple	0, 0, cr0, cr1, cr0, {0}
    e434:	f3010c05 			; <UNDEFINED> instruction: 0xf3010c05
    e438:	ec000000 	stc	0, cr0, [r0], {-0}
    e43c:	fc08001c 	stc2	0, cr0, [r8], {28}
    e440:	af08001d 	svcge	0x0008001d
    e444:	01000095 	swpeq	r0, r5, [r0]	; <UNPREDICTABLE>
    e448:	0000177a 	andeq	r1, r0, sl, ror r7
    e44c:	00306f19 	eorseq	r6, r0, r9, lsl pc
    e450:	05de0100 	ldrbeq	r0, [lr, #256]	; 0x100
    e454:	0003d229 	andeq	sp, r3, r9, lsr #4
    e458:	0095f700 	addseq	pc, r5, r0, lsl #14
    e45c:	0095f300 	addseq	pc, r5, r0, lsl #6
    e460:	2aea1900 	bcs	ffa94868 <_estack+0xdfa8aec8>
    e464:	df010000 	svcle	0x00010000
    e468:	00a82805 	adceq	r2, r8, r5, lsl #16
    e46c:	96190000 	ldrls	r0, [r9], -r0
    e470:	96150000 	ldrls	r0, [r5], -r0
    e474:	3a190000 	bcc	64e47c <_Min_Heap_Size+0x64dc7c>
    e478:	0100003f 	tsteq	r0, pc, lsr r0
    e47c:	1a2605e0 	bne	98fc04 <_Min_Heap_Size+0x98f404>
    e480:	39000001 	stmdbcc	r0, {r0}
    e484:	37000096 			; <UNDEFINED> instruction: 0x37000096
    e488:	1a000096 	bne	e6e8 <_Min_Heap_Size+0xdee8>
    e48c:	00002b5d 	andeq	r2, r0, sp, asr fp
    e490:	1005e201 	andne	lr, r5, r1, lsl #4
    e494:	000000f3 	strdeq	r0, [r0], -r3
    e498:	00009654 	andeq	r9, r0, r4, asr r6
    e49c:	0000964c 	andeq	r9, r0, ip, asr #12
    e4a0:	003a8a22 	eorseq	r8, sl, r2, lsr #20
    e4a4:	05e30100 	strbeq	r0, [r3, #256]!	; 0x100
    e4a8:	0003c60f 	andeq	ip, r3, pc, lsl #12
    e4ac:	60910200 	addsvs	r0, r1, r0, lsl #4
    e4b0:	00306e1a 	eorseq	r6, r0, sl, lsl lr
    e4b4:	05e40100 	strbeq	r0, [r4, #256]!	; 0x100
    e4b8:	00065c15 	andeq	r5, r6, r5, lsl ip
    e4bc:	00968e00 	addseq	r8, r6, r0, lsl #28
    e4c0:	00968a00 	addseq	r8, r6, r0, lsl #20
    e4c4:	07902c00 	ldreq	r2, [r0, r0, lsl #24]
    e4c8:	169f0000 	ldrne	r0, [pc], r0
    e4cc:	181a0000 	ldmdane	sl, {}	; <UNPREDICTABLE>
    e4d0:	0100002b 	tsteq	r0, fp, lsr #32
    e4d4:	151f05fa 	ldrne	r0, [pc, #-1530]	; dee2 <_Min_Heap_Size+0xd6e2>
    e4d8:	b6000001 	strlt	r0, [r0], -r1
    e4dc:	ac000096 	stcge	0, cr0, [r0], {150}	; 0x96
    e4e0:	1e000096 	mcrne	0, 0, r0, cr0, cr6, {4}
    e4e4:	08001d02 	stmdaeq	r0, {r1, r8, sl, fp, ip}
    e4e8:	00000baf 	andeq	r0, r0, pc, lsr #23
    e4ec:	00001668 	andeq	r1, r0, r8, ror #12
    e4f0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    e4f4:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
    e4f8:	00770251 	rsbseq	r0, r7, r1, asr r2
    e4fc:	1d0e1d00 	stcne	13, cr1, [lr, #-0]
    e500:	24490800 	strbcs	r0, [r9], #-2048	; 0xfffff800
    e504:	1c1e0000 	ldcne	0, cr0, [lr], {-0}
    e508:	2c08001d 	stccs	0, cr0, [r8], {29}
    e50c:	85000024 	strhi	r0, [r0, #-36]	; 0xffffffdc
    e510:	1f000016 	svcne	0x00000016
    e514:	74025001 	strvc	r5, [r2], #-1
    e518:	3a1d0010 	bcc	74e560 <_Min_Heap_Size+0x74dd60>
    e51c:	4908001d 	stmdbmi	r8, {r0, r2, r3, r4}
    e520:	20000024 	andcs	r0, r0, r4, lsr #32
    e524:	08001d44 	stmdaeq	r0, {r2, r6, r8, sl, fp, ip}
    e528:	0000249f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
    e52c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    e530:	00006091 	muleq	r0, r1, r0
    e534:	001d5e1e 	andseq	r5, sp, lr, lsl lr
    e538:	000abd08 	andeq	fp, sl, r8, lsl #26
    e53c:	0016b300 	andseq	fp, r6, r0, lsl #6
    e540:	50011f00 	andpl	r1, r1, r0, lsl #30
    e544:	00007402 	andeq	r7, r0, r2, lsl #8
    e548:	001d621d 	andseq	r6, sp, sp, lsl r2
    e54c:	0024ae08 	eoreq	sl, r4, r8, lsl #28
    e550:	1d6a1e00 	stclne	14, cr1, [sl, #-0]
    e554:	0abd0800 	beq	fef5055c <_estack+0xdef46bbc>
    e558:	16d00000 	ldrbne	r0, [r0], r0
    e55c:	011f0000 	tsteq	pc, r0
    e560:	00740250 	rsbseq	r0, r4, r0, asr r2
    e564:	1d6e1d00 	stclne	13, cr1, [lr, #-0]
    e568:	24ae0800 	strtcs	r0, [lr], #2048	; 0x800
    e56c:	741e0000 	ldrvc	r0, [lr], #-0
    e570:	6108001d 	tstvs	r8, sp, lsl r0
    e574:	ed00000a 	stc	0, cr0, [r0, #-40]	; 0xffffffd8
    e578:	1f000016 	svcne	0x00000016
    e57c:	74025001 	strvc	r5, [r2], #-1
    e580:	7c1d0000 	ldcvc	0, cr0, [sp], {-0}
    e584:	3b08001d 	blcc	20e600 <_Min_Heap_Size+0x20de00>
    e588:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    e58c:	08001d90 	stmdaeq	r0, {r4, r7, r8, sl, fp, ip}
    e590:	00002449 	andeq	r2, r0, r9, asr #8
    e594:	001d941d 	andseq	r9, sp, sp, lsl r4
    e598:	0024bd08 	eoreq	fp, r4, r8, lsl #26
    e59c:	1d981d00 	ldcne	13, cr1, [r8]
    e5a0:	243b0800 	ldrtcs	r0, [fp], #-2048	; 0xfffff800
    e5a4:	b41d0000 	ldrlt	r0, [sp], #-0
    e5a8:	4908001d 	stmdbmi	r8, {r0, r2, r3, r4}
    e5ac:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    e5b0:	08001dbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sl, fp, ip}
    e5b4:	000024cc 	andeq	r2, r0, ip, asr #9
    e5b8:	00001734 	andeq	r1, r0, r4, lsr r7
    e5bc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    e5c0:	011f6091 			; <UNDEFINED> instruction: 0x011f6091
    e5c4:	5c910251 	lfmpl	f0, 4, [r1], {81}	; 0x51
    e5c8:	1dc61e00 	stclne	14, cr1, [r6]
    e5cc:	0a610800 	beq	18505d4 <_Min_Heap_Size+0x184fdd4>
    e5d0:	17480000 	strbne	r0, [r8, -r0]
    e5d4:	011f0000 	tsteq	pc, r0
    e5d8:	00740250 	rsbseq	r0, r4, r0, asr r2
    e5dc:	1dd41e00 	ldclne	14, cr1, [r4]
    e5e0:	24db0800 	ldrbcs	r0, [fp], #2048	; 0x800
    e5e4:	175c0000 	ldrbne	r0, [ip, -r0]
    e5e8:	011f0000 	tsteq	pc, r0
    e5ec:	2c740250 	lfmcs	f0, 2, [r4], #-320	; 0xfffffec0
    e5f0:	1dda1e00 	ldclne	14, cr1, [sl]
    e5f4:	0abd0800 	beq	fef505fc <_estack+0xdef46c5c>
    e5f8:	17700000 	ldrbne	r0, [r0, -r0]!
    e5fc:	011f0000 	tsteq	pc, r0
    e600:	00740250 	rsbseq	r0, r4, r0, asr r2
    e604:	1dde1d00 	ldclne	13, cr1, [lr]
    e608:	24ae0800 	strtcs	r0, [lr], #2048	; 0x800
    e60c:	21000000 	mrscs	r0, (UNDEF: 0)
    e610:	002d3901 	eoreq	r3, sp, r1, lsl #18
    e614:	05310100 	ldreq	r0, [r1, #-256]!	; 0xffffff00
    e618:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    e624:	96f90000 	ldrbtls	r0, [r9], r0
    e628:	df010000 	svcle	0x00010000
    e62c:	19000018 	stmdbne	r0, {r3, r4}
    e630:	0000306f 	andeq	r3, r0, pc, rrx
    e634:	2d053101 	stfcss	f3, [r5, #-4]
    e638:	000003d2 	ldrdeq	r0, [r0], -r2
    e63c:	0000972f 	andeq	r9, r0, pc, lsr #14
    e640:	00009719 	andeq	r9, r0, r9, lsl r7
    e644:	00291119 	eoreq	r1, r9, r9, lsl r1
    e648:	05320100 	ldreq	r0, [r2, #-256]!	; 0xffffff00
    e64c:	00115b32 	andseq	r5, r1, r2, lsr fp
    e650:	0097c500 	addseq	ip, r7, r0, lsl #10
    e654:	0097b300 	addseq	fp, r7, r0, lsl #6
    e658:	38481a00 	stmdacc	r8, {r9, fp, ip}^
    e65c:	34010000 	strcc	r0, [r1], #-0
    e660:	00f31005 	rscseq	r1, r3, r5
    e664:	98350000 	ldmdals	r5!, {}	; <UNPREDICTABLE>
    e668:	98330000 	ldmdals	r3!, {}	; <UNPREDICTABLE>
    e66c:	5d1a0000 	ldcpl	0, cr0, [sl, #-0]
    e670:	0100002a 	tsteq	r0, sl, lsr #32
    e674:	04110535 	ldreq	r0, [r1], #-1333	; 0xfffffacb
    e678:	4a000001 	bmi	e684 <_Min_Heap_Size+0xde84>
    e67c:	48000098 	stmdami	r0, {r3, r4, r7}
    e680:	1a000098 	bne	e8e8 <_Min_Heap_Size+0xe0e8>
    e684:	0000306e 	andeq	r3, r0, lr, rrx
    e688:	15053601 	strne	r3, [r5, #-1537]	; 0xfffff9ff
    e68c:	0000065c 	andeq	r0, r0, ip, asr r6
    e690:	00009873 	andeq	r9, r0, r3, ror r8
    e694:	0000985d 	andeq	r9, r0, sp, asr r8
    e698:	0007602c 	andeq	r6, r7, ip, lsr #32
    e69c:	00188d00 	andseq	r8, r8, r0, lsl #26
    e6a0:	2b181a00 	blcs	614ea8 <_Min_Heap_Size+0x6146a8>
    e6a4:	60010000 	andvs	r0, r1, r0
    e6a8:	01151b05 	tsteq	r5, r5, lsl #22
    e6ac:	99090000 	stmdbls	r9, {}	; <UNPREDICTABLE>
    e6b0:	98f70000 	ldmls	r7!, {}^	; <UNPREDICTABLE>
    e6b4:	781b0000 	ldmdavc	fp, {}	; <UNPREDICTABLE>
    e6b8:	1a000007 	bne	e6dc <_Min_Heap_Size+0xdedc>
    e6bc:	000029dc 	ldrdeq	r2, [r0], -ip
    e6c0:	1a056701 	bne	1682cc <_Min_Heap_Size+0x167acc>
    e6c4:	000000d1 	ldrdeq	r0, [r0], -r1
    e6c8:	0000999c 	muleq	r0, ip, r9
    e6cc:	00009996 	muleq	r0, r6, r9
    e6d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    e6d4:	00000000 	andeq	r0, r0, r0
    e6d8:	00186700 	andseq	r6, r8, r0, lsl #14
    e6dc:	2f5c1a00 	svccs	0x005c1a00
    e6e0:	cb010000 	blgt	4e6e8 <_Min_Heap_Size+0x4dee8>
    e6e4:	01151105 	tsteq	r5, r5, lsl #2
    e6e8:	99cb0000 	stmibls	fp, {}^	; <UNPREDICTABLE>
    e6ec:	99c70000 	stmibls	r7, {}^	; <UNPREDICTABLE>
    e6f0:	001d0000 	andseq	r0, sp, r0
    e6f4:	1d000000 	stcne	0, cr0, [r0, #-0]
    e6f8:	00000024 	andeq	r0, r0, r4, lsr #32
    e6fc:	0000001e 	andeq	r0, r0, lr, lsl r0
    e700:	00057600 	andeq	r7, r5, r0, lsl #12
    e704:	00187b00 	andseq	r7, r8, r0, lsl #22
    e708:	50011f00 	andpl	r1, r1, r0, lsl #30
    e70c:	00007402 	andeq	r7, r0, r2, lsl #8
    e710:	00000020 	andeq	r0, r0, r0, lsr #32
    e714:	00242c00 	eoreq	r2, r4, r0, lsl #24
    e718:	50011f00 	andpl	r1, r1, r0, lsl #30
    e71c:	002c7402 	eoreq	r7, ip, r2, lsl #8
    e720:	f2280000 	vhadd.s32	d0, d8, d0
    e724:	00000023 	andeq	r0, r0, r3, lsr #32
    e728:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
	...
    e734:	2e055e01 	cdpcs	14, 0, cr5, cr5, cr1, {0}
    e738:	000018ba 			; <UNDEFINED> instruction: 0x000018ba
    e73c:	00240429 	eoreq	r0, r4, r9, lsr #8
    e740:	0099eb00 	addseq	lr, r9, r0, lsl #22
    e744:	0099e900 	addseq	lr, r9, r0, lsl #18
    e748:	24102a00 	ldrcs	r2, [r0], #-2560	; 0xfffff600
    e74c:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    e750:	000023d7 	ldrdeq	r2, [r0], -r7
    e754:	00000000 	andeq	r0, r0, r0
    e758:	00000002 	andeq	r0, r0, r2
    e75c:	00000000 	andeq	r0, r0, r0
    e760:	05d60100 	ldrbeq	r0, [r6, #256]	; 0x100
    e764:	23e52b05 	mvncs	r2, #5120	; 0x1400
    e768:	9a000000 	bls	e770 <_Min_Heap_Size+0xdf70>
    e76c:	99fe0000 	ldmibls	lr!, {}^	; <UNPREDICTABLE>
    e770:	00000000 	andeq	r0, r0, r0
    e774:	29710121 	ldmdbcs	r1!, {r0, r5, r8}^
    e778:	85010000 	strhi	r0, [r1, #-0]
    e77c:	f3010c04 			; <UNDEFINED> instruction: 0xf3010c04
	...
    e788:	13000000 	movwne	r0, #0
    e78c:	0100009a 	swpeq	r0, sl, [r0]	; <UNPREDICTABLE>
    e790:	00001a86 	andeq	r1, r0, r6, lsl #21
    e794:	00306f19 	eorseq	r6, r0, r9, lsl pc
    e798:	04850100 	streq	r0, [r5], #256	; 0x100
    e79c:	0003d234 	andeq	sp, r3, r4, lsr r2
    e7a0:	009a3b00 	addseq	r3, sl, r0, lsl #22
    e7a4:	009a3300 	addseq	r3, sl, r0, lsl #6
    e7a8:	2ff01900 	svccs	0x00f01900
    e7ac:	86010000 	strhi	r0, [r1], -r0
    e7b0:	00ba3904 	adcseq	r3, sl, r4, lsl #18
    e7b4:	9a770000 	bls	1dce7bc <_Min_Heap_Size+0x1dcdfbc>
    e7b8:	9a6f0000 	bls	1bce7c0 <_Min_Heap_Size+0x1bcdfc0>
    e7bc:	11190000 	tstne	r9, r0
    e7c0:	01000029 	tsteq	r0, r9, lsr #32
    e7c4:	5b390487 	blpl	e4f9e8 <_Min_Heap_Size+0xe4f1e8>
    e7c8:	b5000011 	strlt	r0, [r0, #-17]	; 0xffffffef
    e7cc:	b100009a 	swplt	r0, sl, [r0]	; <UNPREDICTABLE>
    e7d0:	1900009a 	stmdbne	r0, {r1, r3, r4, r7}
    e7d4:	00002a17 	andeq	r2, r0, r7, lsl sl
    e7d8:	37048801 	strcc	r8, [r4, -r1, lsl #16]
    e7dc:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    e7e0:	00009ad7 	ldrdeq	r9, [r0], -r7
    e7e4:	00009ad3 	ldrdeq	r9, [r0], -r3
    e7e8:	0038481a 	eorseq	r4, r8, sl, lsl r8
    e7ec:	048a0100 	streq	r0, [sl], #256	; 0x100
    e7f0:	0000f310 	andeq	pc, r0, r0, lsl r3	; <UNPREDICTABLE>
    e7f4:	009af700 	addseq	pc, sl, r0, lsl #14
    e7f8:	009af500 	addseq	pc, sl, r0, lsl #10
    e7fc:	2a5d1a00 	bcs	1755004 <_Min_Heap_Size+0x1754804>
    e800:	8b010000 	blhi	4e808 <_Min_Heap_Size+0x4e008>
    e804:	01041104 	tsteq	r4, r4, lsl #2
    e808:	9b0c0000 	blls	30e810 <_Min_Heap_Size+0x30e010>
    e80c:	9b0a0000 	blls	28e814 <_Min_Heap_Size+0x28e014>
    e810:	6e1a0000 	cdpvs	0, 1, cr0, cr10, cr0, {0}
    e814:	01000030 	tsteq	r0, r0, lsr r0
    e818:	5c15048c 	cfldrspl	mvf0, [r5], {140}	; 0x8c
    e81c:	27000006 	strcs	r0, [r0, -r6]
    e820:	1f00009b 	svcne	0x0000009b
    e824:	1c00009b 	stcne	0, cr0, [r0], {155}	; 0x9b
	...
    e830:	00001a34 	andeq	r1, r0, r4, lsr sl
    e834:	0029dc1a 	eoreq	sp, r9, sl, lsl ip
    e838:	04b00100 	ldrteq	r0, [r0], #256	; 0x100
    e83c:	0000d11a 	andeq	sp, r0, sl, lsl r1
    e840:	009b6100 	addseq	r6, fp, r0, lsl #2
    e844:	009b5b00 	addseq	r5, fp, r0, lsl #22
    e848:	2ccf1a00 	vstmiacs	pc, {s3-s2}
    e84c:	b1010000 	mrslt	r0, (UNDEF: 1)
    e850:	01151f04 	tsteq	r5, r4, lsl #30
    e854:	9b8e0000 	blls	fe38e85c <_estack+0xde384ebc>
    e858:	9b8c0000 	blls	fe30e860 <_estack+0xde304ec0>
    e85c:	001c0000 	andseq	r0, ip, r0
    e860:	00000000 	andeq	r0, r0, r0
    e864:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
    e868:	1a000019 	bne	e8d4 <_Min_Heap_Size+0xe0d4>
    e86c:	00002f5c 	andeq	r2, r0, ip, asr pc
    e870:	11051e01 	tstne	r5, r1, lsl #28
    e874:	00000115 	andeq	r0, r0, r5, lsl r1
    e878:	00009ba5 	andeq	r9, r0, r5, lsr #23
    e87c:	00009ba1 	andeq	r9, r0, r1, lsr #23
    e880:	0000001d 	andeq	r0, r0, sp, lsl r0
    e884:	00241d00 	eoreq	r1, r4, r0, lsl #26
    e888:	001e0000 	andseq	r0, lr, r0
    e88c:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    e890:	0f00000b 	svceq	0x0000000b
    e894:	1f00001a 	svcne	0x0000001a
    e898:	74025001 	strvc	r5, [r2], #-1
    e89c:	52011f00 	andpl	r1, r1, #0, 30
    e8a0:	00007502 	andeq	r7, r0, r2, lsl #10
    e8a4:	0000001e 	andeq	r0, r0, lr, lsl r0
    e8a8:	00057600 	andeq	r7, r5, r0, lsl #12
    e8ac:	001a2300 	andseq	r2, sl, r0, lsl #6
    e8b0:	50011f00 	andpl	r1, r1, r0, lsl #30
    e8b4:	00007402 	andeq	r7, r0, r2, lsl #8
    e8b8:	00000020 	andeq	r0, r0, r0, lsr #32
    e8bc:	00242c00 	eoreq	r2, r4, r0, lsl #24
    e8c0:	50011f00 	andpl	r1, r1, r0, lsl #30
    e8c4:	002c7402 	eoreq	r7, ip, r2, lsl #8
    e8c8:	23f22800 	mvnscs	r2, #0, 16
    e8cc:	00000000 	andeq	r0, r0, r0
    e8d0:	00090000 	andeq	r0, r9, r0
    e8d4:	00000000 	andeq	r0, r0, r0
    e8d8:	01000000 	mrseq	r0, (UNDEF: 0)
    e8dc:	612e04ac 	smulwbvs	lr, ip, r4
    e8e0:	2900001a 	stmdbcs	r0, {r1, r3, r4}
    e8e4:	00002404 	andeq	r2, r0, r4, lsl #8
    e8e8:	00009bc5 	andeq	r9, r0, r5, asr #23
    e8ec:	00009bc3 	andeq	r9, r0, r3, asr #23
    e8f0:	0024102a 	eoreq	r1, r4, sl, lsr #32
    e8f4:	d72e0000 	strle	r0, [lr, -r0]!
    e8f8:	00000023 	andeq	r0, r0, r3, lsr #32
    e8fc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    e908:	05052901 	streq	r2, [r5, #-2305]	; 0xfffff6ff
    e90c:	0023e52b 	eoreq	lr, r3, fp, lsr #10
    e910:	009bda00 	addseq	sp, fp, r0, lsl #20
    e914:	009bd800 	addseq	sp, fp, r0, lsl #16
    e918:	21000000 	mrscs	r0, (UNDEF: 0)
    e91c:	002c2801 	eoreq	r2, ip, r1, lsl #16
    e920:	03ab0100 			; <UNDEFINED> instruction: 0x03ab0100
    e924:	00f3010c 	rscseq	r0, r3, ip, lsl #2
	...
    e930:	9bed0000 	blls	ffb4e938 <_estack+0xdfb44f98>
    e934:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
    e938:	1900001c 	stmdbne	r0, {r2, r3, r4}
    e93c:	0000306f 	andeq	r3, r0, pc, rrx
    e940:	2d03ab01 	vstrcs	d10, [r3, #-4]
    e944:	000003d2 	ldrdeq	r0, [r0], -r2
    e948:	00009c35 	andeq	r9, r0, r5, lsr ip
    e94c:	00009c31 	andeq	r9, r0, r1, lsr ip
    e950:	002ff019 	eoreq	pc, pc, r9, lsl r0	; <UNPREDICTABLE>
    e954:	03ac0100 			; <UNDEFINED> instruction: 0x03ac0100
    e958:	0000ba32 	andeq	fp, r0, r2, lsr sl
    e95c:	009c5700 	addseq	r5, ip, r0, lsl #14
    e960:	009c5300 	addseq	r5, ip, r0, lsl #6
    e964:	3f3a1900 	svccc	0x003a1900
    e968:	ad010000 	stcge	0, cr0, [r1, #-0]
    e96c:	011a2a03 	tsteq	sl, r3, lsl #20
    e970:	9c770000 	ldclls	0, cr0, [r7], #-0
    e974:	9c750000 	ldclls	0, cr0, [r5], #-0
    e978:	17190000 	ldrne	r0, [r9, -r0]
    e97c:	0100002a 	tsteq	r0, sl, lsr #32
    e980:	ff3003ae 			; <UNDEFINED> instruction: 0xff3003ae
    e984:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    e988:	8a00009c 	bhi	ec00 <_Min_Heap_Size+0xe400>
    e98c:	1a00009c 	bne	ec04 <_Min_Heap_Size+0xe404>
    e990:	00002b5d 	andeq	r2, r0, sp, asr fp
    e994:	1003b001 	andne	fp, r3, r1
    e998:	000000f3 	strdeq	r0, [r0], -r3
    e99c:	00009cb6 			; <UNDEFINED> instruction: 0x00009cb6
    e9a0:	00009cac 	andeq	r9, r0, ip, lsr #25
    e9a4:	002a9e1a 	eoreq	r9, sl, sl, lsl lr
    e9a8:	03b00100 	movseq	r0, #0, 2
    e9ac:	0000f329 	andeq	pc, r0, r9, lsr #6
    e9b0:	009cfb00 	addseq	pc, ip, r0, lsl #22
    e9b4:	009cf700 	addseq	pc, ip, r0, lsl #14
    e9b8:	3a8a2200 	bcc	fe2971c0 <_estack+0xde28d820>
    e9bc:	b1010000 	mrslt	r0, (UNDEF: 1)
    e9c0:	03c60f03 	biceq	r0, r6, #3, 30
    e9c4:	91020000 	mrsls	r0, (UNDEF: 2)
    e9c8:	306e1a60 	rsbcc	r1, lr, r0, ror #20
    e9cc:	b2010000 	andlt	r0, r1, #0
    e9d0:	065c1503 	ldrbeq	r1, [ip], -r3, lsl #10
    e9d4:	9d1d0000 	ldcls	0, cr0, [sp, #-0]
    e9d8:	9d190000 	ldcls	0, cr0, [r9, #-0]
    e9dc:	482c0000 	stmdami	ip!, {}	; <UNPREDICTABLE>
    e9e0:	ac000007 	stcge	0, cr0, [r0], {7}
    e9e4:	1a00001b 	bne	ea58 <_Min_Heap_Size+0xe258>
    e9e8:	00002ccf 	andeq	r2, r0, pc, asr #25
    e9ec:	2703cd01 	strcs	ip, [r3, -r1, lsl #26]
    e9f0:	00000115 	andeq	r0, r0, r5, lsl r1
    e9f4:	00009d3f 	andeq	r9, r0, pc, lsr sp
    e9f8:	00009d3b 	andeq	r9, r0, fp, lsr sp
    e9fc:	0000001e 	andeq	r0, r0, lr, lsl r0
    ea00:	000bfe00 	andeq	pc, fp, r0, lsl #28
    ea04:	001b8700 	andseq	r8, fp, r0, lsl #14
    ea08:	50011f00 	andpl	r1, r1, r0, lsl #30
    ea0c:	1f007402 	svcne	0x00007402
    ea10:	77025101 	strvc	r5, [r2, -r1, lsl #2]
    ea14:	52011f00 	andpl	r1, r1, #0, 30
    ea18:	00007502 	andeq	r7, r0, r2, lsl #10
    ea1c:	0000001e 	andeq	r0, r0, lr, lsl r0
    ea20:	00057600 	andeq	r7, r5, r0, lsl #12
    ea24:	001b9b00 	andseq	r9, fp, r0, lsl #22
    ea28:	50011f00 	andpl	r1, r1, r0, lsl #30
    ea2c:	00007402 	andeq	r7, r0, r2, lsl #8
    ea30:	00000020 	andeq	r0, r0, r0, lsr #32
    ea34:	00242c00 	eoreq	r2, r4, r0, lsl #24
    ea38:	50011f00 	andpl	r1, r1, r0, lsl #30
    ea3c:	002c7402 	eoreq	r7, ip, r2, lsl #8
    ea40:	00001d00 	andeq	r1, r0, r0, lsl #26
    ea44:	24490000 	strbcs	r0, [r9], #-0
    ea48:	001d0000 	andseq	r0, sp, r0
    ea4c:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    ea50:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    ea54:	00000000 	andeq	r0, r0, r0
    ea58:	0000249f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
    ea5c:	00001bd2 	ldrdeq	r1, [r0], -r2
    ea60:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    ea64:	1e006091 	mcrne	0, 0, r6, cr0, cr1, {4}
    ea68:	00000000 	andeq	r0, r0, r0
    ea6c:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    ea70:	00001be6 	andeq	r1, r0, r6, ror #23
    ea74:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    ea78:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    ea7c:	00000000 	andeq	r0, r0, r0
    ea80:	000024ae 	andeq	r2, r0, lr, lsr #9
    ea84:	0000001d 	andeq	r0, r0, sp, lsl r0
    ea88:	00243b00 	eoreq	r3, r4, r0, lsl #22
    ea8c:	00001d00 	andeq	r1, r0, r0, lsl #26
    ea90:	24490000 	strbcs	r0, [r9], #-0
    ea94:	001d0000 	andseq	r0, sp, r0
    ea98:	bd000000 	stclt	0, cr0, [r0, #-0]
    ea9c:	1d000024 	stcne	0, cr0, [r0, #-144]	; 0xffffff70
    eaa0:	00000000 	andeq	r0, r0, r0
    eaa4:	0000243b 	andeq	r2, r0, fp, lsr r4
    eaa8:	0000001d 	andeq	r0, r0, sp, lsl r0
    eaac:	00244900 	eoreq	r4, r4, r0, lsl #18
    eab0:	00001e00 	andeq	r1, r0, r0, lsl #28
    eab4:	24cc0000 	strbcs	r0, [ip], #0
    eab8:	1c360000 	ldcne	0, cr0, [r6], #-0
    eabc:	011f0000 	tsteq	pc, r0
    eac0:	60910250 	addsvs	r0, r1, r0, asr r2
    eac4:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    eac8:	1e005c91 	mcrne	12, 0, r5, cr0, cr1, {4}
    eacc:	00000000 	andeq	r0, r0, r0
    ead0:	000009ad 	andeq	r0, r0, sp, lsr #19
    ead4:	00001c4a 	andeq	r1, r0, sl, asr #24
    ead8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    eadc:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
    eae0:	00000000 	andeq	r0, r0, r0
    eae4:	000024db 	ldrdeq	r2, [r0], -fp
    eae8:	00001c5e 	andeq	r1, r0, lr, asr ip
    eaec:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    eaf0:	1e001074 	mcrne	0, 0, r1, cr0, cr4, {3}
    eaf4:	00000000 	andeq	r0, r0, r0
    eaf8:	00000abd 			; <UNDEFINED> instruction: 0x00000abd
    eafc:	00001c72 	andeq	r1, r0, r2, ror ip
    eb00:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    eb04:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
    eb08:	00000000 	andeq	r0, r0, r0
    eb0c:	000024ae 	andeq	r2, r0, lr, lsr #9
    eb10:	0000001e 	andeq	r0, r0, lr, lsl r0
    eb14:	000abd00 	andeq	fp, sl, r0, lsl #26
    eb18:	001c8f00 	andseq	r8, ip, r0, lsl #30
    eb1c:	50011f00 	andpl	r1, r1, r0, lsl #30
    eb20:	00007402 	andeq	r7, r0, r2, lsl #8
    eb24:	0000001d 	andeq	r0, r0, sp, lsl r0
    eb28:	0024ae00 	eoreq	sl, r4, r0, lsl #28
    eb2c:	01210000 			; <UNDEFINED> instruction: 0x01210000
    eb30:	00003234 	andeq	r3, r0, r4, lsr r2
    eb34:	13038601 	movwne	r8, #13825	; 0x3601
    eb38:	0003d201 	andeq	sp, r3, r1, lsl #4
	...
    eb44:	009d5d00 	addseq	r5, sp, r0, lsl #26
    eb48:	1d140100 	ldfnes	f0, [r4, #-0]
    eb4c:	4b190000 	blmi	64eb54 <_Min_Heap_Size+0x64e354>
    eb50:	0100002e 	tsteq	r0, lr, lsr #32
    eb54:	15440386 	strbne	r0, [r4, #-902]	; 0xfffffc7a
    eb58:	a1000001 	tstge	r0, r1
    eb5c:	9500009d 	strls	r0, [r0, #-157]	; 0xffffff63
    eb60:	1900009d 	stmdbne	r0, {r0, r2, r3, r4, r7}
    eb64:	00002b8a 	andeq	r2, r0, sl, lsl #23
    eb68:	44038701 	strmi	r8, [r3], #-1793	; 0xfffff8ff
    eb6c:	00000115 	andeq	r0, r0, r5, lsl r1
    eb70:	00009dfc 	strdeq	r9, [r0], -ip
    eb74:	00009df4 	strdeq	r9, [r0], -r4
    eb78:	002b6b1a 	eoreq	r6, fp, sl, lsl fp
    eb7c:	03890100 	orreq	r0, r9, #0, 2
    eb80:	0003d217 	andeq	sp, r3, r7, lsl r2
    eb84:	009e3600 	addseq	r3, lr, r0, lsl #12
    eb88:	009e3000 	addseq	r3, lr, r0
    eb8c:	00002000 	andeq	r2, r0, r0
    eb90:	20ee0000 	rsccs	r0, lr, r0
    eb94:	011f0000 	tsteq	pc, r0
    eb98:	01f30350 	mvnseq	r0, r0, asr r3
    eb9c:	51011f50 	tstpl	r1, r0, asr pc
    eba0:	011f3001 	tsteq	pc, r1
    eba4:	00320152 	eorseq	r0, r2, r2, asr r1
    eba8:	a4012100 	strge	r2, [r1], #-256	; 0xffffff00
    ebac:	0100002e 	tsteq	r0, lr, lsr #32
    ebb0:	0113035e 	tsteq	r3, lr, asr r3
    ebb4:	000003d2 	ldrdeq	r0, [r0], -r2
	...
    ebc0:	00009e61 	andeq	r9, r0, r1, ror #28
    ebc4:	001db101 	andseq	fp, sp, r1, lsl #2
    ebc8:	2e4b1900 	vmlacs.f16	s3, s22, s0	; <UNPREDICTABLE>
    ebcc:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    ebd0:	01154a03 	tsteq	r5, r3, lsl #20
    ebd4:	9ebd0000 	cdpls	0, 11, cr0, cr13, cr0, {0}
    ebd8:	9eb10000 	cdpls	0, 11, cr0, cr1, cr0, {0}
    ebdc:	8a190000 	bhi	64ebe4 <_Min_Heap_Size+0x64e3e4>
    ebe0:	0100002b 	tsteq	r0, fp, lsr #32
    ebe4:	154a035f 	strbne	r0, [sl, #-863]	; 0xfffffca1
    ebe8:	18000001 	stmdane	r0, {r0}
    ebec:	1000009f 	mulne	r0, pc, r0	; <UNPREDICTABLE>
    ebf0:	1900009f 	stmdbne	r0, {r0, r1, r2, r3, r4, r7}
    ebf4:	00002d9a 	muleq	r0, sl, sp
    ebf8:	48036001 	stmdami	r3, {r0, sp, lr}
    ebfc:	00001db1 			; <UNDEFINED> instruction: 0x00001db1
    ec00:	00009f56 	andeq	r9, r0, r6, asr pc
    ec04:	00009f4c 	andeq	r9, r0, ip, asr #30
    ec08:	002b6b1a 	eoreq	r6, fp, sl, lsl fp
    ec0c:	03620100 	cmneq	r2, #0, 2
    ec10:	0003d217 	andeq	sp, r3, r7, lsl r2
    ec14:	009fa100 	addseq	sl, pc, r0, lsl #2
    ec18:	009f9b00 	addseq	r9, pc, r0, lsl #22
    ec1c:	00002000 	andeq	r2, r0, r0
    ec20:	22590000 	subscs	r0, r9, #0
    ec24:	011f0000 	tsteq	pc, r0
    ec28:	01f30350 	mvnseq	r0, r0, asr r3
    ec2c:	51011f50 	tstpl	r1, r0, asr pc
    ec30:	011f3001 	tsteq	pc, r1
    ec34:	1f300152 	svcne	0x00300152
    ec38:	f3035301 	vcgt.u8	d5, d3, d1
    ec3c:	021f5201 	andseq	r5, pc, #268435456	; 0x10000000
    ec40:	3201007d 	andcc	r0, r1, #125	; 0x7d
    ec44:	04070000 	streq	r0, [r7], #-0
    ec48:	000002ab 	andeq	r0, r0, fp, lsr #5
    ec4c:	293d0121 	ldmdbcs	sp!, {r0, r5, r8}
    ec50:	2f010000 	svccs	0x00010000
    ec54:	f3011003 	vhadd.u8	d1, d1, d3
	...
    ec60:	cc000000 	stcgt	0, cr0, [r0], {-0}
    ec64:	0100009f 	swpeq	r0, pc, [r0]	; <UNPREDICTABLE>
    ec68:	00001e4b 	andeq	r1, r0, fp, asr #28
    ec6c:	00292c19 	eoreq	r2, r9, r9, lsl ip
    ec70:	032f0100 			; <UNDEFINED> instruction: 0x032f0100
    ec74:	0003d238 	andeq	sp, r3, r8, lsr r2
    ec78:	009ff000 	addseq	pc, pc, r0
    ec7c:	009fec00 	addseq	lr, pc, r0, lsl #24
    ec80:	3f3a1900 	svccc	0x003a1900
    ec84:	30010000 	andcc	r0, r1, r0
    ec88:	011a3503 	tsteq	sl, r3, lsl #10
    ec8c:	a0120000 	andsge	r0, r2, r0
    ec90:	a00e0000 	andge	r0, lr, r0
    ec94:	481a0000 	ldmdami	sl, {}	; <UNPREDICTABLE>
    ec98:	01000038 	tsteq	r0, r8, lsr r0
    ec9c:	f3140332 	vcge.u16	d0, d4, d18
    eca0:	34000000 	strcc	r0, [r0], #-0
    eca4:	300000a0 	andcc	r0, r0, r0, lsr #1
    eca8:	1a0000a0 	bne	ef30 <_Min_Heap_Size+0xe730>
    ecac:	0000292b 	andeq	r2, r0, fp, lsr #18
    ecb0:	19033301 	stmdbne	r3, {r0, r8, r9, ip, sp}
    ecb4:	0000065c 	andeq	r0, r0, ip, asr r6
    ecb8:	0000a057 	andeq	sl, r0, r7, asr r0
    ecbc:	0000a053 	andeq	sl, r0, r3, asr r0
    ecc0:	0000001d 	andeq	r0, r0, sp, lsl r0
    ecc4:	00251700 	eoreq	r1, r5, r0, lsl #14
    ecc8:	00002000 	andeq	r2, r0, r0
    eccc:	13580000 	cmpne	r8, #0
    ecd0:	011f0000 	tsteq	pc, r0
    ecd4:	00740250 	rsbseq	r0, r4, r0, asr r2
    ecd8:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
    ecdc:	00000075 	andeq	r0, r0, r5, ror r0
    ece0:	315c0121 	cmpcc	ip, r1, lsr #2
    ece4:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    ece8:	f3011002 	vhadd.u8	d1, d1, d2
	...
    ecf4:	75000000 	strvc	r0, [r0, #-0]
    ecf8:	010000a0 	smlatbeq	r0, r0, r0, r0
    ecfc:	00001ec4 	andeq	r1, r0, r4, asr #29
    ed00:	00292c19 	eoreq	r2, r9, r9, lsl ip
    ed04:	02f40100 	rscseq	r0, r4, #0, 2
    ed08:	0003d238 	andeq	sp, r3, r8, lsr r2
    ed0c:	00a09900 	adceq	r9, r0, r0, lsl #18
    ed10:	00a09500 	adceq	r9, r0, r0, lsl #10
    ed14:	38481a00 	stmdacc	r8, {r9, fp, ip}^
    ed18:	f6010000 			; <UNDEFINED> instruction: 0xf6010000
    ed1c:	00f31402 	rscseq	r1, r3, r2, lsl #8
    ed20:	a0b90000 	adcsge	r0, r9, r0
    ed24:	a0b70000 	adcsge	r0, r7, r0
    ed28:	2b1a0000 	blcs	68ed30 <_Min_Heap_Size+0x68e530>
    ed2c:	01000029 	tsteq	r0, r9, lsr #32
    ed30:	5c1902f7 	lfmpl	f0, 4, [r9], {247}	; 0xf7
    ed34:	d1000006 	tstle	r0, r6
    ed38:	cd0000a0 	stcgt	0, cr0, [r0, #-640]	; 0xfffffd80
    ed3c:	1d0000a0 	stcne	0, cr0, [r0, #-640]	; 0xfffffd80
    ed40:	00000000 	andeq	r0, r0, r0
    ed44:	00002517 	andeq	r2, r0, r7, lsl r5
    ed48:	00000020 	andeq	r0, r0, r0, lsr #32
    ed4c:	001a8600 	andseq	r8, sl, r0, lsl #12
    ed50:	50011f00 	andpl	r1, r1, r0, lsl #30
    ed54:	00007402 	andeq	r7, r0, r2, lsl #8
    ed58:	a8012100 	stmdage	r1, {r8, sp}
    ed5c:	0100002d 	tsteq	r0, sp, lsr #32
    ed60:	01130298 			; <UNDEFINED> instruction: 0x01130298
    ed64:	000003d2 	ldrdeq	r0, [r0], -r2
	...
    ed70:	0000a0ef 	andeq	sl, r0, pc, ror #1
    ed74:	001f7401 	andseq	r7, pc, r1, lsl #8
    ed78:	2ef71900 	vmovcs.f16	s3, #112	; 0x3f800000  1.0	; <UNPREDICTABLE>
    ed7c:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
    ed80:	00e23a02 	rsceq	r3, r2, r2, lsl #20
    ed84:	a12b0000 			; <UNDEFINED> instruction: 0xa12b0000
    ed88:	a1270000 			; <UNDEFINED> instruction: 0xa1270000
    ed8c:	9a190000 	bls	64ed94 <_Min_Heap_Size+0x64e594>
    ed90:	0100002d 	tsteq	r0, sp, lsr #32
    ed94:	b13c0299 	teqlt	ip, r9	; <illegal shifter operand>
    ed98:	5200001d 	andpl	r0, r0, #29
    ed9c:	4c0000a1 	stcmi	0, cr0, [r0], {161}	; 0xa1
    eda0:	1a0000a1 	bne	f02c <_Min_Heap_Size+0xe82c>
    eda4:	00002ac0 	andeq	r2, r0, r0, asr #21
    eda8:	17029b01 	strne	r9, [r2, -r1, lsl #22]
    edac:	000003d2 	ldrdeq	r0, [r0], -r2
    edb0:	0000a182 	andeq	sl, r0, r2, lsl #3
    edb4:	0000a17e 	andeq	sl, r0, lr, ror r1
    edb8:	002d0125 	eoreq	r0, sp, r5, lsr #2
    edbc:	029c0100 	addseq	r0, ip, #0, 2
    edc0:	0001151b 	andeq	r1, r1, fp, lsl r5
    edc4:	92250100 	eorls	r0, r5, #0, 2
    edc8:	0100002a 	tsteq	r0, sl, lsr #32
    edcc:	153e029c 	ldrne	r0, [lr, #-668]!	; 0xfffffd64
    edd0:	00000001 	andeq	r0, r0, r1
    edd4:	0000001e 	andeq	r0, r0, lr, lsl r0
    edd8:	00225900 	eoreq	r5, r2, r0, lsl #18
    eddc:	001f6300 	andseq	r6, pc, r0, lsl #6
    ede0:	50011f00 	andpl	r1, r1, r0, lsl #30
    ede4:	011f3101 	tsteq	pc, r1, lsl #2
    ede8:	1f300151 	svcne	0x00300151
    edec:	30015201 	andcc	r5, r1, r1, lsl #4
    edf0:	0353011f 	cmpeq	r3, #-1073741817	; 0xc0000007
    edf4:	005101f3 	ldrsheq	r0, [r1], #-19	; 0xffffffed
    edf8:	00000020 	andeq	r0, r0, r0, lsr #32
    edfc:	00200300 	eoreq	r0, r0, r0, lsl #6
    ee00:	50011f00 	andpl	r1, r1, r0, lsl #30
    ee04:	00007402 	andeq	r7, r0, r2, lsl #8
    ee08:	d4012100 	strle	r2, [r1], #-256	; 0xffffff00
    ee0c:	0100002d 	tsteq	r0, sp, lsr #32
    ee10:	01130284 	tsteq	r3, r4, lsl #5
    ee14:	000003d2 	ldrdeq	r0, [r0], -r2
	...
    ee20:	0000a1a0 	andeq	sl, r0, r0, lsr #3
    ee24:	00200301 	eoreq	r0, r0, r1, lsl #6
    ee28:	2ef71900 	vmovcs.f16	s3, #112	; 0x3f800000  1.0	; <UNPREDICTABLE>
    ee2c:	84010000 	strhi	r0, [r1], #-0
    ee30:	00e23402 	rsceq	r3, r2, r2, lsl #8
    ee34:	a1c40000 	bicge	r0, r4, r0
    ee38:	a1c00000 	bicge	r0, r0, r0
    ee3c:	c01a0000 	andsgt	r0, sl, r0
    ee40:	0100002a 	tsteq	r0, sl, lsr #32
    ee44:	d2170286 	andsle	r0, r7, #1610612744	; 0x60000008
    ee48:	e9000003 	stmdb	r0, {r0, r1}
    ee4c:	e50000a1 	str	r0, [r0, #-161]	; 0xffffff5f
    ee50:	250000a1 	strcs	r0, [r0, #-161]	; 0xffffff5f
    ee54:	00002d01 	andeq	r2, r0, r1, lsl #26
    ee58:	1b028701 	blne	b0a64 <_Min_Heap_Size+0xb0264>
    ee5c:	00000115 	andeq	r0, r0, r5, lsl r1
    ee60:	2a922501 	bcs	fe49826c <_estack+0xde48e8cc>
    ee64:	87010000 	strhi	r0, [r1, -r0]
    ee68:	01153e02 	tsteq	r5, r2, lsl #28
    ee6c:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    ee70:	00000000 	andeq	r0, r0, r0
    ee74:	000020ee 	andeq	r2, r0, lr, ror #1
    ee78:	00001ff2 	strdeq	r1, [r0], -r2
    ee7c:	0150011f 	cmpeq	r0, pc, lsl r1
    ee80:	51011f31 	tstpl	r1, r1, lsr pc
    ee84:	20003001 	andcs	r3, r0, r1
    ee88:	00000000 	andeq	r0, r0, r0
    ee8c:	00002003 	andeq	r2, r0, r3
    ee90:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    ee94:	00000074 	andeq	r0, r0, r4, ror r0
    ee98:	002e0626 	eoreq	r0, lr, r6, lsr #12
    ee9c:	02660100 	rsbeq	r0, r6, #0, 2
    eea0:	00000111 	andeq	r0, r0, r1, lsl r1
    eea4:	00000000 	andeq	r0, r0, r0
    eea8:	a2070000 	andge	r0, r7, #0
    eeac:	54010000 	strpl	r0, [r1], #-0
    eeb0:	19000020 	stmdbne	r0, {r5}
    eeb4:	00002abf 			; <UNDEFINED> instruction: 0x00002abf
    eeb8:	2f026601 	svccs	0x00026601
    eebc:	00000656 	andeq	r0, r0, r6, asr r6
    eec0:	0000a239 	andeq	sl, r0, r9, lsr r2
    eec4:	0000a233 	andeq	sl, r0, r3, lsr r2
    eec8:	00000020 	andeq	r0, r0, r0, lsr #32
    eecc:	001a8600 	andseq	r8, sl, r0, lsl #12
    eed0:	50011f00 	andpl	r1, r1, r0, lsl #30
    eed4:	5001f303 	andpl	pc, r1, r3, lsl #6
    eed8:	0151011f 	cmpeq	r1, pc, lsl r1
    eedc:	52011f30 	andpl	r1, r1, #48, 30	; 0xc0
    eee0:	011f3001 	tsteq	pc, r1
    eee4:	00300153 	eorseq	r0, r0, r3, asr r1
    eee8:	2a742600 	bcs	1d186f0 <_Min_Heap_Size+0x1d17ef0>
    eeec:	36010000 	strcc	r0, [r1], -r0
    eef0:	8e010d02 	cdphi	13, 0, cr0, cr1, cr2, {0}
    eef4:	ae08001c 	mcrge	0, 0, r0, cr8, cr12, {0}
    eef8:	6508001c 	strvs	r0, [r8, #-28]	; 0xffffffe4
    eefc:	010000a2 	smlatbeq	r0, r2, r0, r0
    ef00:	000020ee 	andeq	r2, r0, lr, ror #1
    ef04:	002f2719 	eoreq	r2, pc, r9, lsl r7	; <UNPREDICTABLE>
    ef08:	02360100 	eorseq	r0, r6, #0, 2
    ef0c:	00011536 	andeq	r1, r1, r6, lsr r5
    ef10:	00a28d00 	adceq	r8, r2, r0, lsl #26
    ef14:	00a28500 	adceq	r8, r2, r0, lsl #10
    ef18:	2ca61900 			; <UNDEFINED> instruction: 0x2ca61900
    ef1c:	37010000 	strcc	r0, [r1, -r0]
    ef20:	01153602 	tsteq	r5, r2, lsl #12
    ef24:	a2ce0000 	sbcge	r0, lr, #0
    ef28:	a2c60000 	sbcge	r0, r6, #0
    ef2c:	9a190000 	bls	64ef34 <_Min_Heap_Size+0x64e734>
    ef30:	0100002b 	tsteq	r0, fp, lsr #32
    ef34:	2b2e0238 	blcs	b8f81c <_Min_Heap_Size+0xb8f01c>
    ef38:	0b000001 	bleq	ef44 <_Min_Heap_Size+0xe744>
    ef3c:	050000a3 	streq	r0, [r0, #-163]	; 0xffffff5d
    ef40:	190000a3 	stmdbne	r0, {r0, r1, r5, r7}
    ef44:	00002ef7 	strdeq	r2, [r0], -r7
    ef48:	32023901 	andcc	r3, r2, #16384	; 0x4000
    ef4c:	000000e2 	andeq	r0, r0, r2, ror #1
    ef50:	0000a33b 	andeq	sl, r0, fp, lsr r3
    ef54:	0000a337 	andeq	sl, r0, r7, lsr r3
    ef58:	002abf19 	eoreq	fp, sl, r9, lsl pc
    ef5c:	023a0100 	eorseq	r0, sl, #0, 2
    ef60:	0006562e 	andeq	r5, r6, lr, lsr #12
    ef64:	00a36000 	adceq	r6, r3, r0
    ef68:	00a35c00 	adceq	r5, r3, r0, lsl #24
    ef6c:	1ca42000 	stcne	0, cr2, [r4]
    ef70:	23180800 	tstcs	r8, #0, 16
    ef74:	011f0000 	tsteq	pc, r0
    ef78:	00740250 	rsbseq	r0, r4, r0, asr r2
    ef7c:	0151011f 	cmpeq	r1, pc, lsl r1
    ef80:	21000031 	tstcs	r0, r1, lsr r0
    ef84:	002dc001 	eoreq	ip, sp, r1
    ef88:	01f60100 	mvnseq	r0, r0, lsl #2
    ef8c:	03d20113 	bicseq	r0, r2, #-1073741820	; 0xc0000004
	...
    ef98:	a3800000 	orrge	r0, r0, #0
    ef9c:	d0010000 	andle	r0, r1, r0
    efa0:	19000021 	stmdbne	r0, {r0, r5}
    efa4:	00002f27 	andeq	r2, r0, r7, lsr #30
    efa8:	3a01f601 	bcc	8c7b4 <_Min_Heap_Size+0x8bfb4>
    efac:	00000115 	andeq	r0, r0, r5, lsl r1
    efb0:	0000a3d0 	ldrdeq	sl, [r0], -r0
    efb4:	0000a3c4 	andeq	sl, r0, r4, asr #7
    efb8:	002ca619 	eoreq	sl, ip, r9, lsl r6
    efbc:	01f70100 	mvnseq	r0, r0, lsl #2
    efc0:	0001153a 	andeq	r1, r1, sl, lsr r5
    efc4:	00a42700 	adceq	r2, r4, r0, lsl #14
    efc8:	00a41d00 	adceq	r1, r4, r0, lsl #26
    efcc:	2ef71900 	vmovcs.f16	s3, #112	; 0x3f800000  1.0	; <UNPREDICTABLE>
    efd0:	f8010000 			; <UNDEFINED> instruction: 0xf8010000
    efd4:	00e23601 	rsceq	r3, r2, r1, lsl #12
    efd8:	a4710000 	ldrbtge	r0, [r1], #-0
    efdc:	a4690000 	strbtge	r0, [r9], #-0
    efe0:	bf1a0000 	svclt	0x001a0000
    efe4:	0100002a 	tsteq	r0, sl, lsr #32
    efe8:	561301fa 			; <UNDEFINED> instruction: 0x561301fa
    efec:	b5000006 	strlt	r0, [r0, #-6]
    eff0:	ab0000a4 	blge	f288 <_Min_Heap_Size+0xea88>
    eff4:	1a0000a4 	bne	f28c <_Min_Heap_Size+0xea8c>
    eff8:	00002fb7 			; <UNDEFINED> instruction: 0x00002fb7
    effc:	1001fb01 	andne	pc, r1, r1, lsl #22
    f000:	00000029 	andeq	r0, r0, r9, lsr #32
    f004:	0000a4fd 	strdeq	sl, [r0], -sp
    f008:	0000a4f7 	strdeq	sl, [r0], -r7
    f00c:	002b9a1a 	eoreq	r9, fp, sl, lsl sl
    f010:	01fc0100 	mvnseq	r0, r0, lsl #2
    f014:	00012b13 	andeq	r2, r1, r3, lsl fp
    f018:	00a53600 	adceq	r3, r5, r0, lsl #12
    f01c:	00a52e00 	adceq	r2, r5, r0, lsl #28
    f020:	00001e00 	andeq	r1, r0, r0, lsl #28
    f024:	25260000 	strcs	r0, [r6, #-0]!
    f028:	21a50000 			; <UNDEFINED> instruction: 0x21a50000
    f02c:	011f0000 	tsteq	pc, r0
    f030:	00740750 	rsbseq	r0, r4, r0, asr r7
    f034:	231e0076 	tstcs	lr, #118	; 0x76
    f038:	0020005c 	eoreq	r0, r0, ip, asr r0
    f03c:	54000000 	strpl	r0, [r0], #-0
    f040:	1f000020 	svcne	0x00000020
    f044:	76025001 	strvc	r5, [r2], -r1
    f048:	51011f00 	tstpl	r1, r0, lsl #30
    f04c:	1f007402 	svcne	0x00007402
    f050:	75035201 	strvc	r5, [r3, #-513]	; 0xfffffdff
    f054:	011f00dc 	ldrsbeq	r0, [pc, -ip]
    f058:	00770253 	rsbseq	r0, r7, r3, asr r2
    f05c:	007d021f 	rsbseq	r0, sp, pc, lsl r2
    f060:	00007502 	andeq	r7, r0, r2, lsl #10
    f064:	b9012400 	stmdblt	r1, {sl, sp}
    f068:	01000028 	tsteq	r0, r8, lsr #32
    f06c:	011001be 			; <UNDEFINED> instruction: 0x011001be
    f070:	000000f3 	strdeq	r0, [r0], -r3
	...
    f07c:	01007d02 	tsteq	r0, r2, lsl #26
    f080:	0000224d 	andeq	r2, r0, sp, asr #4
    f084:	00306f19 	eorseq	r6, r0, r9, lsl pc
    f088:	01be0100 			; <UNDEFINED> instruction: 0x01be0100
    f08c:	0003d23d 	andeq	sp, r3, sp, lsr r2
    f090:	00a57800 	adceq	r7, r5, r0, lsl #16
    f094:	00a57000 	adceq	r7, r5, r0
    f098:	2b992f00 	blcs	fe65aca0 <_estack+0xde651300>
    f09c:	bf010000 	svclt	0x00010000
    f0a0:	224d3a01 	subcs	r3, sp, #4096	; 0x1000
    f0a4:	51010000 	mrspl	r0, (UNDEF: 1)
    f0a8:	002d992f 	eoreq	r9, sp, pc, lsr #18
    f0ac:	01c00100 	biceq	r0, r0, r0, lsl #2
    f0b0:	00225340 	eoreq	r5, r2, r0, asr #6
    f0b4:	1a520100 	bne	148f4bc <_Min_Heap_Size+0x148ecbc>
    f0b8:	00003848 	andeq	r3, r0, r8, asr #16
    f0bc:	1401c201 	strne	ip, [r1], #-513	; 0xfffffdff
    f0c0:	000000f3 	strdeq	r0, [r0], -r3
    f0c4:	0000a5b4 			; <UNDEFINED> instruction: 0x0000a5b4
    f0c8:	0000a5b0 			; <UNDEFINED> instruction: 0x0000a5b0
    f0cc:	00306e1a 	eorseq	r6, r0, sl, lsl lr
    f0d0:	01c30100 	biceq	r0, r3, r0, lsl #2
    f0d4:	00065c19 	andeq	r5, r6, r9, lsl ip
    f0d8:	00a5dc00 	adceq	sp, r5, r0, lsl #24
    f0dc:	00a5d400 	adceq	sp, r5, r0, lsl #8
    f0e0:	04070000 	streq	r0, [r7], #-0
    f0e4:	0000012b 	andeq	r0, r0, fp, lsr #2
    f0e8:	1db10407 	cfldrsne	mvf0, [r1, #28]!
    f0ec:	01210000 			; <UNDEFINED> instruction: 0x01210000
    f0f0:	00003054 	andeq	r3, r0, r4, asr r0
    f0f4:	13017801 	movwne	r7, #6145	; 0x1801
    f0f8:	0003d201 	andeq	sp, r3, r1, lsl #4
    f0fc:	001cae00 	andseq	sl, ip, r0, lsl #28
    f100:	001cec08 	andseq	lr, ip, r8, lsl #24
    f104:	00a61408 	adceq	r1, r6, r8, lsl #8
    f108:	23180100 	tstcs	r8, #0, 2
    f10c:	27190000 	ldrcs	r0, [r9, -r0]
    f110:	0100002f 	tsteq	r0, pc, lsr #32
    f114:	15400178 	strbne	r0, [r0, #-376]	; 0xfffffe88
    f118:	86000001 	strhi	r0, [r0], -r1
    f11c:	700000a6 	andvc	r0, r0, r6, lsr #1
    f120:	190000a6 	stmdbne	r0, {r1, r2, r5, r7}
    f124:	00002ca6 	andeq	r2, r0, r6, lsr #25
    f128:	40017901 	andmi	r7, r1, r1, lsl #18
    f12c:	00000115 	andeq	r0, r0, r5, lsl r1
    f130:	0000a713 	andeq	sl, r0, r3, lsl r7
    f134:	0000a70d 	andeq	sl, r0, sp, lsl #14
    f138:	002b9a19 	eoreq	r9, fp, r9, lsl sl
    f13c:	017a0100 	cmneq	sl, r0, lsl #2
    f140:	00012b38 	andeq	r2, r1, r8, lsr fp
    f144:	00a74500 	adceq	r4, r7, r0, lsl #10
    f148:	00a73f00 	adceq	r3, r7, r0, lsl #30
    f14c:	2d9a1900 	vldrcs.16	s2, [sl]	; <UNPREDICTABLE>
    f150:	7b010000 	blvc	4f158 <_Min_Heap_Size+0x4e958>
    f154:	1db13e01 	ldcne	14, cr3, [r1, #4]!
    f158:	a7770000 	ldrbge	r0, [r7, -r0]!
    f15c:	a7710000 	ldrbge	r0, [r1, -r0]!
    f160:	f7190000 			; <UNDEFINED> instruction: 0xf7190000
    f164:	0100002e 	tsteq	r0, lr, lsr #32
    f168:	e23c017c 	eors	r0, ip, #124, 2
    f16c:	a4000000 	strge	r0, [r0], #-0
    f170:	a00000a7 	andge	r0, r0, r7, lsr #1
    f174:	1a0000a7 	bne	f418 <_Min_Heap_Size+0xec18>
    f178:	00002abf 			; <UNDEFINED> instruction: 0x00002abf
    f17c:	13017e01 	movwne	r7, #7681	; 0x1e01
    f180:	00000656 	andeq	r0, r0, r6, asr r6
    f184:	0000a7d0 	ldrdeq	sl, [r0], -r0
    f188:	0000a7c4 	andeq	sl, r0, r4, asr #15
    f18c:	001cd220 	andseq	sp, ip, r0, lsr #4
    f190:	00205408 	eoreq	r5, r0, r8, lsl #8
    f194:	50011f00 	andpl	r1, r1, r0, lsl #30
    f198:	5001f303 	andpl	pc, r1, r3, lsl #6
    f19c:	0453011f 	ldrbeq	r0, [r3], #-287	; 0xfffffee1
    f1a0:	01940091 			; <UNDEFINED> instruction: 0x01940091
    f1a4:	007d021f 	rsbseq	r0, sp, pc, lsl r2
    f1a8:	00007402 	andeq	r7, r0, r2, lsl #8
    f1ac:	84012100 	strhi	r2, [r1], #-256	; 0xffffff00
    f1b0:	01000031 	tsteq	r0, r1, lsr r0
    f1b4:	010c012f 	tsteq	ip, pc, lsr #2
    f1b8:	000000f3 	strdeq	r0, [r0], -r3
    f1bc:	08001bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, ip}
    f1c0:	08001c8e 	stmdaeq	r0, {r1, r2, r3, r7, sl, fp, ip}
    f1c4:	0000a81d 	andeq	sl, r0, sp, lsl r8
    f1c8:	0023d701 	eoreq	sp, r3, r1, lsl #14
    f1cc:	306f1900 	rsbcc	r1, pc, r0, lsl #18
    f1d0:	2f010000 	svccs	0x00010000
    f1d4:	03d22e01 	bicseq	r2, r2, #1, 28
    f1d8:	a8650000 	stmdage	r5!, {}^	; <UNPREDICTABLE>
    f1dc:	a8550000 	ldmdage	r5, {}^	; <UNPREDICTABLE>
    f1e0:	c0190000 	andsgt	r0, r9, r0
    f1e4:	0100002a 	tsteq	r0, sl, lsr #32
    f1e8:	f32b0130 	vbit	d0, d11, d16
    f1ec:	d0000000 	andle	r0, r0, r0
    f1f0:	c80000a8 	stmdagt	r0, {r3, r5, r7}
    f1f4:	1a0000a8 	bne	f49c <_Min_Heap_Size+0xec9c>
    f1f8:	00003848 	andeq	r3, r0, r8, asr #16
    f1fc:	10013201 	andne	r3, r1, r1, lsl #4
    f200:	000000f3 	strdeq	r0, [r0], -r3
    f204:	0000a90a 	andeq	sl, r0, sl, lsl #18
    f208:	0000a904 	andeq	sl, r0, r4, lsl #18
    f20c:	00306e1a 	eorseq	r6, r0, sl, lsl lr
    f210:	01330100 	teqeq	r3, r0, lsl #2
    f214:	00065c15 	andeq	r5, r6, r5, lsl ip
    f218:	00a94600 	adceq	r4, r9, r0, lsl #12
    f21c:	00a93600 	adceq	r3, r9, r0, lsl #12
    f220:	1c201d00 	stcne	13, cr1, [r0], #-0
    f224:	243b0800 	ldrtcs	r0, [fp], #-2048	; 0xfffff800
    f228:	4e1d0000 	cdpmi	0, 1, cr0, cr13, cr0, {0}
    f22c:	4908001c 	stmdbmi	r8, {r2, r3, r4}
    f230:	1e000024 	cdpne	0, 0, cr0, cr0, cr4, {1}
    f234:	08001c5a 	stmdaeq	r0, {r1, r3, r4, r6, sl, fp, ip}
    f238:	0000242c 	andeq	r2, r0, ip, lsr #8
    f23c:	000023b2 			; <UNDEFINED> instruction: 0x000023b2
    f240:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    f244:	1e001074 	mcrne	0, 0, r1, cr0, cr4, {3}
    f248:	08001c7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, sl, fp, ip}
    f24c:	00002534 	andeq	r2, r0, r4, lsr r5
    f250:	000023c6 	andeq	r2, r0, r6, asr #7
    f254:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    f258:	20001074 	andcs	r1, r0, r4, ror r0
    f25c:	08001c84 	stmdaeq	r0, {r2, r7, sl, fp, ip}
    f260:	00002534 	andeq	r2, r0, r4, lsr r5
    f264:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
    f268:	00002c74 	andeq	r2, r0, r4, ror ip
    f26c:	002bcf30 	eoreq	ip, fp, r0, lsr pc
    f270:	1ef90200 	cdpne	2, 15, cr0, cr9, cr0, {0}
    f274:	23f20301 	mvnscs	r0, #67108864	; 0x4000000
    f278:	c8310000 	ldmdagt	r1!, {}	; <UNPREDICTABLE>
    f27c:	0200002e 	andeq	r0, r0, #46	; 0x2e
    f280:	00e738f9 	strdeq	r3, [r7], #137	; 0x89	; <UNPREDICTABLE>
    f284:	32000000 	andcc	r0, r0, #0
    f288:	00002de6 	andeq	r2, r0, r6, ror #27
    f28c:	0122e502 			; <UNDEFINED> instruction: 0x0122e502
    f290:	000000e7 	andeq	r0, r0, r7, ror #1
    f294:	00241d03 	eoreq	r1, r4, r3, lsl #26
    f298:	2aad3300 	bcs	feb5bea0 <_estack+0xdeb52500>
    f29c:	e7020000 	str	r0, [r2, -r0]
    f2a0:	0000e70e 	andeq	lr, r0, lr, lsl #14
    f2a4:	2d2c3300 	stccs	3, cr3, [ip, #-0]
    f2a8:	e7020000 	str	r0, [r2, -r0]
    f2ac:	0000e721 	andeq	lr, r0, r1, lsr #14
    f2b0:	01340000 	teqeq	r4, r0
    f2b4:	002a2e01 	eoreq	r2, sl, r1, lsl #28
    f2b8:	002a2e00 	eoreq	r2, sl, r0, lsl #28
    f2bc:	06c60800 	strbeq	r0, [r6], r0, lsl #16
    f2c0:	0101340d 	tsteq	r1, sp, lsl #8
    f2c4:	0000320e 	andeq	r3, r0, lr, lsl #4
    f2c8:	0000320e 	andeq	r3, r0, lr, lsl #4
    f2cc:	0c0de808 	stceq	8, cr14, [sp], {8}
    f2d0:	f3010135 	veor	d0, d1, d21
    f2d4:	f3000029 	vhadd.u8	d0, d0, d25
    f2d8:	02000029 	andeq	r0, r0, #41	; 0x29
    f2dc:	01350d76 	teqeq	r5, r6, ror sp
    f2e0:	00286e01 	eoreq	r6, r8, r1, lsl #28
    f2e4:	00286e00 	eoreq	r6, r8, r0, lsl #28
    f2e8:	0d770200 	lfmeq	f0, 2, [r7, #-0]
    f2ec:	63010134 	movwvs	r0, #4404	; 0x1134
    f2f0:	6300002d 	movwvs	r0, #45	; 0x2d
    f2f4:	0800002d 	stmdaeq	r0, {r0, r2, r3, r5}
    f2f8:	34060dcc 	strcc	r0, [r6], #-3532	; 0xfffff234
    f2fc:	30880101 	addcc	r0, r8, r1, lsl #2
    f300:	30880000 	addcc	r0, r8, r0
    f304:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
    f308:	0136060e 	teqeq	r6, lr, lsl #12
    f30c:	002a1001 	eoreq	r1, sl, r1
    f310:	002a0600 	eoreq	r0, sl, r0, lsl #12
    f314:	34000b00 	strcc	r0, [r0], #-2816	; 0xfffff500
    f318:	2ce90101 	stfcse	f0, [r9], #4
    f31c:	2ce90000 	stclcs	0, cr0, [r9]
    f320:	20080000 	andcs	r0, r8, r0
    f324:	01350c0e 	teqeq	r5, lr, lsl #24
    f328:	00301301 	eorseq	r1, r0, r1, lsl #6
    f32c:	00301300 	eorseq	r1, r0, r0, lsl #6
    f330:	06b80a00 	ldrteq	r0, [r8], r0, lsl #20
    f334:	70010134 	andvc	r0, r1, r4, lsr r1
    f338:	7000002e 	andvc	r0, r0, lr, lsr #32
    f33c:	0800002e 	stmdaeq	r0, {r1, r2, r3, r5}
    f340:	34060e65 	strcc	r0, [r6], #-3685	; 0xfffff19b
    f344:	2fc90101 	svccs	0x00c90101
    f348:	2fc90000 	svccs	0x00c90000
    f34c:	93080000 	movwls	r0, #32768	; 0x8000
    f350:	01340c06 	teqeq	r4, r6, lsl #24
    f354:	002b4201 	eoreq	r4, fp, r1, lsl #4
    f358:	002b4200 	eoreq	r4, fp, r0, lsl #4
    f35c:	065b0800 	ldrbeq	r0, [fp], -r0, lsl #16
    f360:	01013406 	tsteq	r1, r6, lsl #8
    f364:	00002ffe 	strdeq	r2, [r0], -lr
    f368:	00002ffe 	strdeq	r2, [r0], -lr
    f36c:	0c0d5308 	stceq	3, cr5, [sp], {8}
    f370:	50010134 	andpl	r0, r1, r4, lsr r1
    f374:	5000002c 	andpl	r0, r0, ip, lsr #32
    f378:	0800002c 	stmdaeq	r0, {r2, r3, r5}
    f37c:	34060dbb 	strcc	r0, [r6], #-3515	; 0xfffff245
    f380:	2c660101 	stfcse	f0, [r6], #-4
    f384:	2c660000 	stclcs	0, cr0, [r6], #-0
    f388:	5f080000 	svcpl	0x00080000
    f38c:	01340e0e 	teqeq	r4, lr, lsl #28
    f390:	00311701 	eorseq	r1, r1, r1, lsl #14
    f394:	00311700 	eorseq	r1, r1, r0, lsl #14
    f398:	0e2a0800 	cdpeq	8, 2, cr0, cr10, cr0, {0}
    f39c:	01013406 	tsteq	r1, r6, lsl #8
    f3a0:	00003099 	muleq	r0, r9, r0
    f3a4:	00003099 	muleq	r0, r9, r0
    f3a8:	0c0e1a08 			; <UNDEFINED> instruction: 0x0c0e1a08
    f3ac:	3b010134 	blcc	4f884 <_Min_Heap_Size+0x4f084>
    f3b0:	3b000031 	blcc	f47c <_Min_Heap_Size+0xec7c>
    f3b4:	08000031 	stmdaeq	r0, {r0, r4, r5}
    f3b8:	350e0e03 	strcc	r0, [lr, #-3587]	; 0xfffff1fd
    f3bc:	2b350101 	blcs	d4f7c8 <_Min_Heap_Size+0xd4efc8>
    f3c0:	2b350000 	blcs	d4f3c8 <_Min_Heap_Size+0xd4ebc8>
    f3c4:	b50a0000 	strlt	r0, [sl, #-0]
    f3c8:	01013408 	tsteq	r1, r8, lsl #8
    f3cc:	000027d3 	ldrdeq	r2, [r0], -r3
    f3d0:	000027d3 	ldrdeq	r2, [r0], -r3
    f3d4:	0601b907 	streq	fp, [r1], -r7, lsl #18
    f3d8:	003a4200 	eorseq	r4, sl, r0, lsl #4
    f3dc:	f6000200 			; <UNDEFINED> instruction: 0xf6000200
    f3e0:	04000021 	streq	r0, [r0], #-33	; 0xffffffdf
    f3e4:	00062101 	andeq	r2, r6, r1, lsl #2
    f3e8:	3f170c00 	svccc	0x00170c00
    f3ec:	04e90000 	strbteq	r0, [r9], #0
    f3f0:	0c080000 	stceq	0, cr0, [r8], {-0}
	...
    f3fc:	a9ee0000 	stmibge	lr!, {}^	; <UNPREDICTABLE>
    f400:	16020000 	strne	r0, [r2], -r0
    f404:	0300004e 	movweq	r0, #78	; 0x4e
    f408:	003a17d1 	ldrsbteq	r1, [sl], -r1
    f40c:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    f410:	04000000 	streq	r0, [r0], #-0
    f414:	00c80704 	sbceq	r0, r8, r4, lsl #14
    f418:	04050000 	streq	r0, [r5], #-0
    f41c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    f420:	05080400 	streq	r0, [r8, #-1024]	; 0xfffffc00
    f424:	00000328 	andeq	r0, r0, r8, lsr #6
    f428:	58040804 	stmdapl	r4, {r2, fp}
    f42c:	04000007 	streq	r0, [r0], #-7
    f430:	060f0601 	streq	r0, [pc], -r1, lsl #12
    f434:	76020000 	strvc	r0, [r2], -r0
    f438:	04000000 	streq	r0, [r0], #-0
    f43c:	0069182b 	rsbeq	r1, r9, fp, lsr #16
    f440:	01040000 	mrseq	r0, (UNDEF: 4)
    f444:	00060d08 	andeq	r0, r6, r8, lsl #26
    f448:	05020400 	streq	r0, [r2, #-1024]	; 0xfffffc00
    f44c:	0000042a 	andeq	r0, r0, sl, lsr #8
    f450:	28070204 	stmdacs	r7, {r2, r9}
    f454:	04000008 	streq	r0, [r0], #-8
    f458:	032d0504 			; <UNDEFINED> instruction: 0x032d0504
    f45c:	ef020000 	svc	0x00020000
    f460:	04000002 	streq	r0, [r0], #-2
    f464:	0091194f 	addseq	r1, r1, pc, asr #18
    f468:	04040000 	streq	r0, [r4], #-0
    f46c:	0000c307 	andeq	ip, r0, r7, lsl #6
    f470:	07080400 	streq	r0, [r8, -r0, lsl #8]
    f474:	000000be 	strheq	r0, [r0], -lr
    f478:	9f030406 	svcls	0x00030406
    f47c:	07000000 	streq	r0, [r0, -r0]
    f480:	0000ac04 	andeq	sl, r0, r4, lsl #24
    f484:	08010400 	stmdaeq	r1, {sl}
    f488:	00000616 	andeq	r0, r0, r6, lsl r6
    f48c:	0000ac03 	andeq	sl, r0, r3, lsl #24
    f490:	b3040700 	movwlt	r0, #18176	; 0x4700
    f494:	03000000 	movweq	r0, #0
    f498:	000000b8 	strheq	r0, [r0], -r8
    f49c:	00007802 	andeq	r7, r0, r2, lsl #16
    f4a0:	13180500 	tstne	r8, #0, 10
    f4a4:	0000005d 	andeq	r0, r0, sp, asr r0
    f4a8:	0000c308 	andeq	ip, r0, r8, lsl #6
    f4ac:	00c30300 	sbceq	r0, r3, r0, lsl #6
    f4b0:	f1020000 	cps	#0
    f4b4:	05000002 	streq	r0, [r0, #-2]
    f4b8:	00851430 	addeq	r1, r5, r0, lsr r4
    f4bc:	d9080000 	stmdble	r8, {}	; <UNPREDICTABLE>
    f4c0:	02000000 	andeq	r0, r0, #0
    f4c4:	00003a5d 	andeq	r3, r0, sp, asr sl
    f4c8:	f6112406 			; <UNDEFINED> instruction: 0xf6112406
    f4cc:	07000000 	streq	r0, [r0, -r0]
    f4d0:	0000fc04 	andeq	pc, r0, r4, lsl #24
    f4d4:	08010900 	stmdaeq	r1, {r8, fp}
    f4d8:	0a000001 	beq	f4e4 <_Min_Heap_Size+0xece4>
    f4dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    f4e0:	33920200 	orrscc	r0, r2, #0, 4
    f4e4:	3a020000 	bcc	8f4ec <_Min_Heap_Size+0x8ecec>
    f4e8:	0000d91a 	andeq	sp, r0, sl, lsl r9
    f4ec:	01080800 	tsteq	r8, r0, lsl #16
    f4f0:	fd020000 	stc2	0, cr0, [r2, #-0]
    f4f4:	02000027 	andeq	r0, r0, #39	; 0x27
    f4f8:	007e1a3b 	rsbseq	r1, lr, fp, lsr sl
    f4fc:	19080000 	stmdbne	r8, {}	; <UNPREDICTABLE>
    f500:	03000001 	movweq	r0, #1
    f504:	00000119 	andeq	r0, r0, r9, lsl r1
    f508:	0027fc02 	eoreq	pc, r7, r2, lsl #24
    f50c:	1a3c0200 	bne	f0fd14 <_Min_Heap_Size+0xf0f514>
    f510:	00000091 	muleq	r0, r1, r0
    f514:	00012f08 	andeq	r2, r1, r8, lsl #30
    f518:	013b0300 	teqeq	fp, r0, lsl #6
    f51c:	2f030000 	svccs	0x00030000
    f520:	02000001 	andeq	r0, r0, #1
    f524:	00002758 	andeq	r2, r0, r8, asr r7
    f528:	d91a4202 	ldmdble	sl, {r1, r9, lr}
    f52c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    f530:	0000014a 	andeq	r0, r0, sl, asr #2
    f534:	00014a03 	andeq	r4, r1, r3, lsl #20
    f538:	c3040700 	movwgt	r0, #18176	; 0x4700
    f53c:	0b000000 	bleq	f544 <_Min_Heap_Size+0xed44>
    f540:	00003076 	andeq	r3, r0, r6, ror r0
    f544:	0c0c0714 	stceq	7, cr0, [ip], {20}
    f548:	00019508 	andeq	r9, r1, r8, lsl #10
    f54c:	2bfb0c00 	blcs	ffed2554 <_estack+0xdfec8bb4>
    f550:	11070000 	mrsne	r0, (UNDEF: 7)
    f554:	014a100c 	cmpeq	sl, ip
    f558:	23020000 	movwcs	r0, #8192	; 0x2000
    f55c:	2bf10c00 	blcs	ffc52564 <_estack+0xdfc48bc4>
    f560:	12070000 	andne	r0, r7, #0
    f564:	01950c0c 	orrseq	r0, r5, ip, lsl #24
    f568:	23020000 	movwcs	r0, #8192	; 0x2000
    f56c:	9f0d0004 	svcls	0x000d0004
    f570:	a5000000 	strge	r0, [r0, #-0]
    f574:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    f578:	0000003a 	andeq	r0, r0, sl, lsr r0
    f57c:	660f0003 	strvs	r0, [pc], -r3
    f580:	07000037 	smladxeq	r0, r7, r0, r0
    f584:	66220c17 			; <UNDEFINED> instruction: 0x66220c17
    f588:	0b000001 	bleq	f594 <_Min_Heap_Size+0xed94>
    f58c:	00003d9a 	muleq	r0, sl, sp
    f590:	0c43074c 	mcrreq	7, 4, r0, r3, cr12
    f594:	00027110 	andeq	r7, r2, r0, lsl r1
    f598:	39d50c00 	ldmibcc	r5, {sl, fp}^
    f59c:	45070000 	strmi	r0, [r7, #-0]
    f5a0:	009f0c0c 	addseq	r0, pc, ip, lsl #24
    f5a4:	23020000 	movwcs	r0, #8192	; 0x2000
    f5a8:	2a8a0c00 	bcs	fe2925b0 <_estack+0xde288c10>
    f5ac:	4c070000 	stcmi	0, cr0, [r7], {-0}
    f5b0:	0271160c 	rsbseq	r1, r1, #12, 12	; 0xc00000
    f5b4:	23020000 	movwcs	r0, #8192	; 0x2000
    f5b8:	37ea0c04 	strbcc	r0, [sl, r4, lsl #24]!
    f5bc:	4d070000 	stcmi	0, cr0, [r7, #-0]
    f5c0:	012f110c 			; <UNDEFINED> instruction: 0x012f110c
    f5c4:	23020000 	movwcs	r0, #8192	; 0x2000
    f5c8:	39de0c2c 	ldmibcc	lr, {r2, r3, r5, sl, fp}^
    f5cc:	4e070000 	cdpmi	0, 0, cr0, cr7, cr0, {0}
    f5d0:	009f0c0c 	addseq	r0, pc, ip, lsl #24
    f5d4:	23020000 	movwcs	r0, #8192	; 0x2000
    f5d8:	3bcf0c30 	blcc	ff3d26a0 <_estack+0xdf3c8d00>
    f5dc:	53070000 	movwpl	r0, #28672	; 0x7000
    f5e0:	02810d0c 	addeq	r0, r1, #12, 26	; 0x300
    f5e4:	23020000 	movwcs	r0, #8192	; 0x2000
    f5e8:	33080c34 	movwcc	r0, #35892	; 0x8c34
    f5ec:	61070000 	mrsvs	r0, (UNDEF: 7)
    f5f0:	0291150c 	addseq	r1, r1, #12, 10	; 0x3000000
    f5f4:	23020000 	movwcs	r0, #8192	; 0x2000
    f5f8:	3b800c38 	blcc	fe0126e0 <_estack+0xde008d40>
    f5fc:	64070000 	strvs	r0, [r7], #-0
    f600:	009f100c 	addseq	r1, pc, ip
    f604:	23020000 	movwcs	r0, #8192	; 0x2000
    f608:	3dc90c40 	stclcc	12, cr0, [r9, #256]	; 0x100
    f60c:	70070000 	andvc	r0, r7, r0
    f610:	02a1120c 	adceq	r1, r1, #12, 4	; 0xc0000000
    f614:	23020000 	movwcs	r0, #8192	; 0x2000
    f618:	351b0c44 	ldrcc	r0, [fp, #-3140]	; 0xfffff3bc
    f61c:	71070000 	mrsvc	r0, (UNDEF: 7)
    f620:	02b1110c 	adcseq	r1, r1, #12, 2
    f624:	23020000 	movwcs	r0, #8192	; 0x2000
    f628:	34100c48 	ldrcc	r0, [r0], #-3144	; 0xfffff3b8
    f62c:	74070000 	strvc	r0, [r7], #-0
    f630:	00c3110c 	sbceq	r1, r3, ip, lsl #2
    f634:	23020000 	movwcs	r0, #8192	; 0x2000
    f638:	3aac0c49 	bcc	feb12764 <_estack+0xdeb08dc4>
    f63c:	78070000 	stmdavc	r7, {}	; <UNPREDICTABLE>
    f640:	00c3110c 	sbceq	r1, r3, ip, lsl #2
    f644:	23020000 	movwcs	r0, #8192	; 0x2000
    f648:	a50d004a 	strge	r0, [sp, #-74]	; 0xffffffb6
    f64c:	81000001 	tsthi	r0, r1
    f650:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    f654:	0000003a 	andeq	r0, r0, sl, lsr r0
    f658:	c30d0001 	movwgt	r0, #53249	; 0xd001
    f65c:	91000000 	mrsls	r0, (UNDEF: 0)
    f660:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    f664:	0000003a 	andeq	r0, r0, sl, lsr r0
    f668:	2f0d0003 	svccs	0x000d0003
    f66c:	a1000001 	tstge	r0, r1
    f670:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    f674:	0000003a 	andeq	r0, r0, sl, lsr r0
    f678:	d90d0001 	stmdble	sp, {r0}
    f67c:	b1000000 	mrslt	r0, (UNDEF: 0)
    f680:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    f684:	0000003a 	andeq	r0, r0, sl, lsr r0
    f688:	c30d0000 	movwgt	r0, #53248	; 0xd000
    f68c:	c1000000 	mrsgt	r0, (UNDEF: 0)
    f690:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    f694:	0000003a 	andeq	r0, r0, sl, lsr r0
    f698:	520f0000 	andpl	r0, pc, #0
    f69c:	07000032 	smladxeq	r0, r2, r0, r0
    f6a0:	b2030c7d 	andlt	r0, r3, #32000	; 0x7d00
    f6a4:	10000001 	andne	r0, r0, r1
    f6a8:	0000277f 	andeq	r2, r0, pc, ror r7
    f6ac:	08900814 	ldmeq	r0, {r2, r4, fp}
    f6b0:	00000327 	andeq	r0, r0, r7, lsr #6
    f6b4:	00276311 	eoreq	r6, r7, r1, lsl r3
    f6b8:	24930800 	ldrcs	r0, [r3], #2048	; 0x800
    f6bc:	0000014a 	andeq	r0, r0, sl, asr #2
    f6c0:	11002302 	tstne	r0, r2, lsl #6
    f6c4:	000027cc 	andeq	r2, r0, ip, asr #15
    f6c8:	272d9408 	strcs	r9, [sp, -r8, lsl #8]!
    f6cc:	02000003 	andeq	r0, r0, #3
    f6d0:	1b110423 	blne	450764 <_Min_Heap_Size+0x44ff64>
    f6d4:	08000028 	stmdaeq	r0, {r3, r5}
    f6d8:	03272d95 			; <UNDEFINED> instruction: 0x03272d95
    f6dc:	23020000 	movwcs	r0, #8192	; 0x2000
    f6e0:	27771108 	ldrbcs	r1, [r7, -r8, lsl #2]!
    f6e4:	96080000 	strls	r0, [r8], -r0
    f6e8:	00009f0c 	andeq	r9, r0, ip, lsl #30
    f6ec:	0c230200 	sfmeq	f0, 4, [r3], #-0
    f6f0:	00274c11 	eoreq	r4, r7, r1, lsl ip
    f6f4:	28970800 	ldmcs	r7, {fp}
    f6f8:	00000368 	andeq	r0, r0, r8, ror #6
    f6fc:	00102302 	andseq	r2, r0, r2, lsl #6
    f700:	02ce0407 	sbceq	r0, lr, #117440512	; 0x7000000
    f704:	4e100000 	cdpmi	0, 1, cr0, cr0, cr0, {0}
    f708:	1c000028 	stcne	0, cr0, [r0], {40}	; 0x28
    f70c:	6810ac08 	ldmdavs	r0, {r3, sl, fp, sp, pc}
    f710:	11000003 	tstne	r0, r3
    f714:	000027ad 	andeq	r2, r0, sp, lsr #15
    f718:	2f25af08 	svccs	0x0025af08
    f71c:	02000001 	andeq	r0, r0, #1
    f720:	13110023 	tstne	r1, #35	; 0x23
    f724:	08000028 	stmdaeq	r0, {r3, r5}
    f728:	038b26b0 	orreq	r2, fp, #176, 12	; 0xb000000
    f72c:	23020000 	movwcs	r0, #8192	; 0x2000
    f730:	276e1104 	strbcs	r1, [lr, -r4, lsl #2]!
    f734:	b1080000 	mrslt	r0, (UNDEF: 8)
    f738:	00037f14 	andeq	r7, r3, r4, lsl pc
    f73c:	08230200 	stmdaeq	r3!, {r9}
    f740:	2d040700 	stccs	7, cr0, [r4, #-0]
    f744:	02000003 	andeq	r0, r0, #3
    f748:	0000376c 	andeq	r3, r0, ip, ror #14
    f74c:	ce1b9a08 	vnmlsgt.f32	s18, s22, s16
    f750:	03000002 	movweq	r0, #2
    f754:	0000036e 	andeq	r0, r0, lr, ror #6
    f758:	00299002 	eoreq	r9, r9, r2
    f75c:	24a60800 	strtcs	r0, [r6], #2048	; 0x800
    f760:	000002ce 	andeq	r0, r0, lr, asr #5
    f764:	036e0407 	cmneq	lr, #117440512	; 0x7000000
    f768:	8b030000 	blhi	cf770 <_Min_Heap_Size+0xcef70>
    f76c:	02000003 	andeq	r0, r0, #3
    f770:	0000322d 	andeq	r3, r0, sp, lsr #4
    f774:	2d03b308 	stccs	3, cr11, [r3, #-32]	; 0xffffffe0
    f778:	03000003 	movweq	r0, #3
    f77c:	00000396 	muleq	r0, r6, r3
    f780:	00025202 	andeq	r5, r2, r2, lsl #4
    f784:	2e5c0900 	vnmlscs.f16	s1, s24, s0	; <UNPREDICTABLE>
    f788:	000003b8 			; <UNDEFINED> instruction: 0x000003b8
    f78c:	0003a703 	andeq	sl, r3, r3, lsl #14
    f790:	be040700 	cdplt	7, 0, cr0, cr4, cr0, {0}
    f794:	0b000003 	bleq	f7a8 <_Min_Heap_Size+0xefa8>
    f798:	0000099e 	muleq	r0, lr, r9
    f79c:	0166014c 	cmneq	r6, ip, asr #2
    f7a0:	00049d10 	andeq	r9, r4, r0, lsl sp
    f7a4:	41590c00 	cmpmi	r9, r0, lsl #24
    f7a8:	68010000 	stmdavs	r1, {}	; <UNPREDICTABLE>
    f7ac:	05f31c01 	ldrbeq	r1, [r3, #3073]!	; 0xc01
    f7b0:	23020000 	movwcs	r0, #8192	; 0x2000
    f7b4:	40d80c00 	sbcsmi	r0, r8, r0, lsl #24
    f7b8:	72010000 	andvc	r0, r1, #0
    f7bc:	036e1001 	cmneq	lr, #1
    f7c0:	23020000 	movwcs	r0, #8192	; 0x2000
    f7c4:	3fbd0c04 	svccc	0x00bd0c04
    f7c8:	73010000 	movwvc	r0, #4096	; 0x1000
    f7cc:	036e1001 	cmneq	lr, #1
    f7d0:	23020000 	movwcs	r0, #8192	; 0x2000
    f7d4:	32bc0c18 	adcscc	r0, ip, #24, 24	; 0x1800
    f7d8:	74010000 	strvc	r0, [r1], #-0
    f7dc:	012f1101 			; <UNDEFINED> instruction: 0x012f1101
    f7e0:	23020000 	movwcs	r0, #8192	; 0x2000
    f7e4:	3d1f0c2c 	ldccc	12, cr0, [pc, #-176]	; f73c <_Min_Heap_Size+0xef3c>
    f7e8:	75010000 	strvc	r0, [r1, #-0]
    f7ec:	05bb1301 	ldreq	r1, [fp, #769]!	; 0x301
    f7f0:	23020000 	movwcs	r0, #8192	; 0x2000
    f7f4:	32670c30 	rsbcc	r0, r7, #48, 24	; 0x3000
    f7f8:	7a010000 	bvc	4f800 <_Min_Heap_Size+0x4f000>
    f7fc:	05f90a01 	ldrbeq	r0, [r9, #2561]!	; 0xa01
    f800:	23020000 	movwcs	r0, #8192	; 0x2000
    f804:	3f5e0c34 	svccc	0x005e0c34
    f808:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    f80c:	012f1501 			; <UNDEFINED> instruction: 0x012f1501
    f810:	23020000 	movwcs	r0, #8192	; 0x2000
    f814:	38720c38 	ldmdacc	r2!, {r3, r4, r5, sl, fp}^
    f818:	8f010000 	svchi	0x00010000
    f81c:	012f1501 			; <UNDEFINED> instruction: 0x012f1501
    f820:	23020000 	movwcs	r0, #8192	; 0x2000
    f824:	3c8a0c3c 	stccc	12, cr0, [sl], {60}	; 0x3c
    f828:	93010000 	movwls	r0, #4096	; 0x1000
    f82c:	049d1c01 	ldreq	r1, [sp], #3073	; 0xc01
    f830:	23020000 	movwcs	r0, #8192	; 0x2000
    f834:	38370c40 	ldmdacc	r7!, {r6, sl, fp}
    f838:	a3010000 	movwge	r0, #4096	; 0x1000
    f83c:	06191b01 	ldreq	r1, [r9], -r1, lsl #22
    f840:	23020000 	movwcs	r0, #8192	; 0x2000
    f844:	41c50c44 	bicmi	r0, r5, r4, asr #24
    f848:	a4010000 	strge	r0, [r1], #-0
    f84c:	062e1a01 	strteq	r1, [lr], -r1, lsl #20
    f850:	23020000 	movwcs	r0, #8192	; 0x2000
    f854:	2c3a0c48 	ldccs	12, cr0, [sl], #-288	; 0xfffffee0
    f858:	aa010000 	bge	4f860 <_Min_Heap_Size+0x4f060>
    f85c:	00c31101 	sbceq	r1, r3, r1, lsl #2
    f860:	23020000 	movwcs	r0, #8192	; 0x2000
    f864:	37570c49 	ldrbcc	r0, [r7, -r9, asr #24]
    f868:	ae010000 	cdpge	0, 0, cr0, cr1, cr0, {0}
    f86c:	00c31101 	sbceq	r1, r3, r1, lsl #2
    f870:	23020000 	movwcs	r0, #8192	; 0x2000
    f874:	f802004a 			; <UNDEFINED> instruction: 0xf802004a
    f878:	0900003d 	stmdbeq	r0, {r0, r2, r3, r4, r5}
    f87c:	04a91763 	strteq	r1, [r9], #1891	; 0x763
    f880:	04070000 	streq	r0, [r7], #-0
    f884:	000004af 	andeq	r0, r0, pc, lsr #9
    f888:	01190112 	tsteq	r9, r2, lsl r1
    f88c:	04bf0000 	ldrteq	r0, [pc], #0	; f894 <_Min_Heap_Size+0xf094>
    f890:	9f0a0000 	svcls	0x000a0000
    f894:	00000000 	andeq	r0, r0, r0
    f898:	69010713 	stmdbvs	r1, {r0, r1, r4, r8, r9, sl}
    f89c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    f8a0:	04f20167 	ldrbteq	r0, [r2], #359	; 0x167
    f8a4:	95140000 	ldrls	r0, [r4, #-0]
    f8a8:	0000003e 	andeq	r0, r0, lr, lsr r0
    f8ac:	00392b14 	eorseq	r2, r9, r4, lsl fp
    f8b0:	96140100 	ldrls	r0, [r4], -r0, lsl #2
    f8b4:	0200003f 	andeq	r0, r0, #63	; 0x3f
    f8b8:	0032fd14 	eorseq	pc, r2, r4, lsl sp	; <UNPREDICTABLE>
    f8bc:	e7140300 	ldr	r0, [r4, -r0, lsl #6]
    f8c0:	04000039 	streq	r0, [r0], #-57	; 0xffffffc7
    f8c4:	003f4714 	eorseq	r4, pc, r4, lsl r7	; <UNPREDICTABLE>
    f8c8:	02000500 	andeq	r0, r0, #0, 10
    f8cc:	00003b32 	andeq	r3, r0, r2, lsr fp
    f8d0:	bf036e09 	svclt	0x00036e09
    f8d4:	13000004 	movwne	r0, #4
    f8d8:	00690107 	rsbeq	r0, r9, r7, lsl #2
    f8dc:	72090000 	andvc	r0, r9, #0
    f8e0:	00052b01 	andeq	r2, r5, r1, lsl #22
    f8e4:	33491400 	movtcc	r1, #37888	; 0x9400
    f8e8:	14000000 	strne	r0, [r0], #-0
    f8ec:	00003b97 	muleq	r0, r7, fp
    f8f0:	40aa1401 	adcmi	r1, sl, r1, lsl #8
    f8f4:	14020000 	strne	r0, [r2], #-0
    f8f8:	00003615 	andeq	r3, r0, r5, lsl r6
    f8fc:	38801403 	stmcc	r0, {r0, r1, sl, ip}
    f900:	00040000 	andeq	r0, r4, r0
    f904:	00373a02 	eorseq	r3, r7, r2, lsl #20
    f908:	03780900 	cmneq	r8, #0, 18
    f90c:	000004fe 	strdeq	r0, [r0], -lr
    f910:	00293310 	eoreq	r3, r9, r0, lsl r3
    f914:	7d090800 	stcvc	8, cr0, [r9, #-0]
    f918:	00056310 	andeq	r6, r5, r0, lsl r3
    f91c:	29e41100 	stmibcs	r4!, {r8, ip}^
    f920:	7f090000 	svcvc	0x00090000
    f924:	00011910 	andeq	r1, r1, r0, lsl r9
    f928:	00230200 	eoreq	r0, r3, r0, lsl #4
    f92c:	002e1911 	eoreq	r1, lr, r1, lsl r9
    f930:	10800900 	addne	r0, r0, r0, lsl #18
    f934:	0000014a 	andeq	r0, r0, sl, asr #2
    f938:	00042302 	andeq	r2, r4, r2, lsl #6
    f93c:	002e6602 	eoreq	r6, lr, r2, lsl #12
    f940:	03810900 	orreq	r0, r1, #0, 18
    f944:	00000537 	andeq	r0, r0, r7, lsr r5
    f948:	003ba010 	eorseq	sl, fp, r0, lsl r0
    f94c:	86090c00 	strhi	r0, [r9], -r0, lsl #24
    f950:	0005aa10 	andeq	sl, r5, r0, lsl sl
    f954:	3eac1100 	fdvcce	f1, f4, f0
    f958:	88090000 	stmdahi	r9, {}	; <UNPREDICTABLE>
    f95c:	00009f0c 	andeq	r9, r0, ip, lsl #30
    f960:	00230200 	eoreq	r0, r3, r0, lsl #4
    f964:	003a0e11 	eorseq	r0, sl, r1, lsl lr
    f968:	0e890900 	vdiveq.f16	s0, s18, s0	; <UNPREDICTABLE>
    f96c:	000000d9 	ldrdeq	r0, [r0], -r9
    f970:	11042302 	tstne	r4, r2, lsl #6
    f974:	000034e9 	andeq	r3, r0, r9, ror #9
    f978:	d90e8a09 	stmdble	lr, {r0, r3, r9, fp, pc}
    f97c:	02000000 	andeq	r0, r0, #0
    f980:	02000823 	andeq	r0, r0, #2293760	; 0x230000
    f984:	0000399b 	muleq	r0, fp, r9
    f988:	6f038b09 	svcvs	0x00038b09
    f98c:	03000005 	movweq	r0, #5
    f990:	000005aa 	andeq	r0, r0, sl, lsr #11
    f994:	01080407 	tsteq	r8, r7, lsl #8
    f998:	bb030000 	bllt	cf9a0 <_Min_Heap_Size+0xcf1a0>
    f99c:	13000005 	movwne	r0, #5
    f9a0:	00690107 	rsbeq	r0, r9, r7, lsl #2
    f9a4:	b6090000 	strlt	r0, [r9], -r0
    f9a8:	0005e701 	andeq	lr, r5, r1, lsl #14
    f9ac:	36091400 	strcc	r1, [r9], -r0, lsl #8
    f9b0:	14000000 	strne	r0, [r0], #-0
    f9b4:	00003e0b 	andeq	r3, r0, fp, lsl #28
    f9b8:	3e341401 	cdpcc	4, 3, cr1, cr4, cr1, {0}
    f9bc:	00020000 	andeq	r0, r2, r0
    f9c0:	00355602 	eorseq	r5, r5, r2, lsl #12
    f9c4:	03bd0900 			; <UNDEFINED> instruction: 0x03bd0900
    f9c8:	000005c6 	andeq	r0, r0, r6, asr #11
    f9cc:	01140407 	tsteq	r4, r7, lsl #8
    f9d0:	ac0d0000 	stcge	0, cr0, [sp], {-0}
    f9d4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    f9d8:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    f9dc:	0000003a 	andeq	r0, r0, sl, lsr r0
    f9e0:	e50d0003 	str	r0, [sp, #-3]
    f9e4:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    f9e8:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    f9ec:	0000003a 	andeq	r0, r0, sl, lsr r0
    f9f0:	09080000 	stmdbeq	r8, {}	; <UNPREDICTABLE>
    f9f4:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    f9f8:	000000cf 	andeq	r0, r0, pc, asr #1
    f9fc:	0000062e 	andeq	r0, r0, lr, lsr #12
    fa00:	00003a0e 	andeq	r3, r0, lr, lsl #20
    fa04:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    fa08:	0000061e 	andeq	r0, r0, lr, lsl r6
    fa0c:	0035940f 	eorseq	r9, r5, pc, lsl #8
    fa10:	01b40100 			; <UNDEFINED> instruction: 0x01b40100
    fa14:	0003be03 	andeq	fp, r3, r3, lsl #28
    fa18:	3f830f00 	svccc	0x00830f00
    fa1c:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    fa20:	06331001 	ldrteq	r1, [r3], -r1
    fa24:	40030000 	andmi	r0, r3, r0
    fa28:	15000006 	strne	r0, [r0, #-6]
    fa2c:	00003c49 	andeq	r3, r0, r9, asr #24
    fa30:	3701be01 	strcc	fp, [r1, -r1, lsl #28]
    fa34:	0000066c 	andeq	r0, r0, ip, ror #12
    fa38:	2c030501 	cfstr32cs	mvfx0, [r3], {1}
    fa3c:	07200082 	streq	r0, [r0, -r2, lsl #1]!
    fa40:	00064004 	andeq	r4, r6, r4
    fa44:	06660800 	strbteq	r0, [r6], -r0, lsl #16
    fa48:	66030000 	strvs	r0, [r3], -r0
    fa4c:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    fa50:	00000396 	muleq	r0, r6, r3
    fa54:	00000686 	andeq	r0, r0, r6, lsl #13
    fa58:	00003a0e 	andeq	r3, r0, lr, lsl #20
    fa5c:	16000400 	strne	r0, [r0], -r0, lsl #8
    fa60:	000033ec 	andeq	r3, r0, ip, ror #7
    fa64:	1f01cb01 	svcne	0x0001cb01
    fa68:	00000676 	andeq	r0, r0, r6, ror r6
    fa6c:	82380305 	eorshi	r0, r8, #335544320	; 0x14000000
    fa70:	89162000 	ldmdbhi	r6, {sp}
    fa74:	01000034 	tsteq	r0, r4, lsr r0
    fa78:	961f01cc 	ldrls	r0, [pc], -ip, asr #3
    fa7c:	05000003 	streq	r0, [r0, #-3]
    fa80:	0086d803 	addeq	sp, r6, r3, lsl #16
    fa84:	349b1620 	ldrcc	r1, [fp], #1568	; 0x620
    fa88:	cd010000 	stcgt	0, cr0, [r1, #-0]
    fa8c:	03961f01 	orrseq	r1, r6, #1, 30
    fa90:	03050000 	movweq	r0, #20480	; 0x5000
    fa94:	200086f4 	strdcs	r8, [r0], -r4
    fa98:	003cb616 	eorseq	fp, ip, r6, lsl r6
    fa9c:	01ce0100 	biceq	r0, lr, r0, lsl #2
    faa0:	0006d82a 	andeq	sp, r6, sl, lsr #16
    faa4:	30030500 	andcc	r0, r3, r0, lsl #10
    faa8:	07200082 	streq	r0, [r0, -r2, lsl #1]!
    faac:	00039604 	andeq	r9, r3, r4, lsl #12
    fab0:	06d20800 	ldrbeq	r0, [r2], r0, lsl #16
    fab4:	d2030000 	andle	r0, r3, #0
    fab8:	16000006 	strne	r0, [r0], -r6
    fabc:	000037d0 	ldrdeq	r3, [r0], -r0
    fac0:	2a01cf01 	bcs	836cc <_Min_Heap_Size+0x82ecc>
    fac4:	000006d8 	ldrdeq	r0, [r0], -r8
    fac8:	82340305 	eorshi	r0, r4, #335544320	; 0x14000000
    facc:	6d162000 	ldcvs	0, cr2, [r6, #-0]
    fad0:	01000036 	tsteq	r0, r6, lsr r0
    fad4:	961f01d0 			; <UNDEFINED> instruction: 0x961f01d0
    fad8:	05000003 	streq	r0, [r0, #-3]
    fadc:	00876c03 	addeq	r6, r7, r3, lsl #24
    fae0:	36ae1620 	strtcc	r1, [lr], r0, lsr #12
    fae4:	d4010000 	strle	r0, [r1], #-0
    fae8:	03962301 	orrseq	r2, r6, #67108864	; 0x4000000
    faec:	03050000 	movweq	r0, #20480	; 0x5000
    faf0:	200087a8 	andcs	r8, r0, r8, lsr #15
    faf4:	0033ac16 	eorseq	sl, r3, r6, lsl ip
    faf8:	01d50100 	bicseq	r0, r5, r0, lsl #2
    fafc:	00013b31 	andeq	r3, r1, r1, lsr fp
    fb00:	c8030500 	stmdagt	r3, {r8, sl}
    fb04:	16200082 	strtne	r0, [r0], -r2, lsl #1
    fb08:	000037b6 			; <UNDEFINED> instruction: 0x000037b6
    fb0c:	2301db01 	movwcs	sp, #6913	; 0x1b01
    fb10:	00000396 	muleq	r0, r6, r3
    fb14:	878c0305 	strhi	r0, [ip, r5, lsl #6]
    fb18:	8f162000 	svchi	0x00162000
    fb1c:	01000040 	tsteq	r0, r0, asr #32
    fb20:	3b2d01e6 	blcc	b502c0 <_Min_Heap_Size+0xb4fac0>
    fb24:	05000001 	streq	r0, [r0, #-1]
    fb28:	0082c403 	addeq	ip, r2, r3, lsl #8
    fb2c:	37771620 	ldrbcc	r1, [r7, -r0, lsr #12]!
    fb30:	e7010000 	str	r0, [r1, -r0]
    fb34:	01562c01 	cmpeq	r6, r1, lsl #24
    fb38:	03050000 	movweq	r0, #20480	; 0x5000
    fb3c:	200087c4 	andcs	r8, r0, r4, asr #15
    fb40:	00335316 	eorseq	r5, r3, r6, lsl r3
    fb44:	01e80100 	mvneq	r0, r0, lsl #2
    fb48:	00013b2d 	andeq	r3, r1, sp, lsr #22
    fb4c:	d4030500 	strle	r0, [r3], #-1280	; 0xfffffb00
    fb50:	16200086 	strtne	r0, [r0], -r6, lsl #1
    fb54:	00003380 	andeq	r3, r0, r0, lsl #7
    fb58:	2c01e901 			; <UNDEFINED> instruction: 0x2c01e901
    fb5c:	00000125 	andeq	r0, r0, r5, lsr #2
    fb60:	87880305 	strhi	r0, [r8, r5, lsl #6]
    fb64:	d8162000 	ldmdale	r6, {sp}
    fb68:	0100003f 	tsteq	r0, pc, lsr r0
    fb6c:	562c01ea 	strtpl	r0, [ip], -sl, ror #3
    fb70:	05000001 	streq	r0, [r0, #-1]
    fb74:	00876803 	addeq	r6, r7, r3, lsl #16
    fb78:	01250d20 			; <UNDEFINED> instruction: 0x01250d20
    fb7c:	07b00000 	ldreq	r0, [r0, r0]!
    fb80:	3a0e0000 	bcc	38fb88 <_Min_Heap_Size+0x38f388>
    fb84:	00000000 	andeq	r0, r0, r0
    fb88:	07a00800 	streq	r0, [r0, r0, lsl #16]!
    fb8c:	6d160000 	ldcvs	0, cr0, [r6, #-0]
    fb90:	01000034 	tsteq	r0, r4, lsr r0
    fb94:	b02c01eb 	eorlt	r0, ip, fp, ror #3
    fb98:	05000007 	streq	r0, [r0, #-7]
    fb9c:	00881403 	addeq	r1, r8, r3, lsl #8
    fba0:	3c181620 	ldccc	6, cr1, [r8], {32}
    fba4:	ec010000 	stc	0, cr0, [r1], {-0}
    fba8:	01252c01 			; <UNDEFINED> instruction: 0x01252c01
    fbac:	03050000 	movweq	r0, #20480	; 0x5000
    fbb0:	20008764 	andcs	r8, r0, r4, ror #14
    fbb4:	003ad516 	eorseq	sp, sl, r6, lsl r5
    fbb8:	01ed0100 	mvneq	r0, r0, lsl #2
    fbbc:	00012f24 	andeq	r2, r1, r4, lsr #30
    fbc0:	d0030500 	andle	r0, r3, r0, lsl #10
    fbc4:	16200084 	strtne	r0, [r0], -r4, lsl #1
    fbc8:	000039aa 	andeq	r3, r0, sl, lsr #19
    fbcc:	2c01ee01 	stccs	14, cr14, [r1], {1}
    fbd0:	00000156 	andeq	r0, r0, r6, asr r1
    fbd4:	87600305 	strbhi	r0, [r0, -r5, lsl #6]!
    fbd8:	a70d2000 	strge	r2, [sp, -r0]
    fbdc:	11000003 	tstne	r0, r3
    fbe0:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    fbe4:	0000003a 	andeq	r0, r0, sl, lsr r0
    fbe8:	0a160000 	beq	58fbf0 <_Min_Heap_Size+0x58f3f0>
    fbec:	01000038 	tsteq	r0, r8, lsr r0
    fbf0:	012501ef 	smulwteq	r5, pc, r1	; <UNPREDICTABLE>
    fbf4:	05000008 	streq	r0, [r0, #-8]
    fbf8:	00871003 	addeq	r1, r7, r3
    fbfc:	36de1620 	ldrbcc	r1, [lr], r0, lsr #12
    fc00:	f4010000 	vst4.8	{d0-d3}, [r1], r0
    fc04:	01402301 	cmpeq	r0, r1, lsl #6
    fc08:	03050000 	movweq	r0, #20480	; 0x5000
    fc0c:	2000000c 	andcs	r0, r0, ip
    fc10:	00414416 	subeq	r4, r1, r6, lsl r4
    fc14:	02020100 	andeq	r0, r2, #0, 2
    fc18:	00013b2d 	andeq	r3, r1, sp, lsr #22
    fc1c:	cc030500 	cfstr32gt	mvfx0, [r3], {-0}
    fc20:	17200084 	strne	r0, [r0, -r4, lsl #1]!
    fc24:	0036c701 	eorseq	ip, r6, r1, lsl #14
    fc28:	21c50100 	biccs	r0, r5, r0, lsl #2
    fc2c:	00000106 	andeq	r0, r0, r6, lsl #2
    fc30:	00000000 	andeq	r0, r0, r0
    fc34:	7d020000 	stcvc	0, cr0, [r2, #-0]
    fc38:	087b0100 	ldmdaeq	fp!, {r8}^
    fc3c:	5f180000 	svcpl	0x00180000
    fc40:	01000032 	tsteq	r0, r2, lsr r0
    fc44:	191021c7 	ldmdbne	r0, {r0, r1, r2, r6, r7, r8, sp}
    fc48:	ad000001 	stcge	0, cr0, [r0, #-4]
    fc4c:	a90000a9 	stmdbge	r0, {r0, r3, r5, r7}
    fc50:	000000a9 	andeq	r0, r0, r9, lsr #1
    fc54:	359b0117 	ldrcc	r0, [fp, #279]	; 0x117
    fc58:	b1010000 	mrslt	r0, (UNDEF: 1)
    fc5c:	3c010a21 			; <UNDEFINED> instruction: 0x3c010a21
    fc60:	5408002a 	strpl	r0, [r8], #-42	; 0xffffffd6
    fc64:	0208002a 	andeq	r0, r8, #42	; 0x2a
    fc68:	ea01007d 	b	4fe64 <_Min_Heap_Size+0x4f664>
    fc6c:	19000008 	stmdbne	r0, {r3}
    fc70:	00003d27 	andeq	r3, r0, r7, lsr #26
    fc74:	3a21b101 	bcc	87c080 <_Min_Heap_Size+0x87b880>
    fc78:	000008ea 	andeq	r0, r0, sl, ror #17
    fc7c:	74195001 	ldrvc	r5, [r9], #-1
    fc80:	01000039 	tsteq	r0, r9, lsr r0
    fc84:	fb3921b2 	blx	e58356 <_Min_Heap_Size+0xe57b56>
    fc88:	01000008 	tsteq	r0, r8
    fc8c:	3f011951 	svccc	0x00011951
    fc90:	b3010000 	movwlt	r0, #4096	; 0x1000
    fc94:	09014321 	stmdbeq	r1, {r0, r5, r8, r9, lr}
    fc98:	52010000 	andpl	r0, r1, #0
    fc9c:	00341a16 	eorseq	r1, r4, r6, lsl sl
    fca0:	21b50100 			; <UNDEFINED> instruction: 0x21b50100
    fca4:	0002c11d 	andeq	ip, r2, sp, lsl r1
    fca8:	c8030500 	stmdagt	r3, {r8, sl}
    fcac:	16200087 	strtne	r0, [r0], -r7, lsl #1
    fcb0:	00004128 	andeq	r4, r0, r8, lsr #2
    fcb4:	1c21b601 	stcne	6, cr11, [r1], #-4
    fcb8:	00000907 	andeq	r0, r0, r7, lsl #18
    fcbc:	84d40305 	ldrbhi	r0, [r4], #773	; 0x305
    fcc0:	07002000 	streq	r2, [r0, -r0]
    fcc4:	0008f004 	andeq	pc, r8, r4
    fcc8:	c1040700 	tstgt	r4, r0, lsl #14
    fccc:	03000002 	movweq	r0, #2
    fcd0:	000008f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    fcd4:	05bb0407 	ldreq	r0, [fp, #1031]!	; 0x407
    fcd8:	04070000 	streq	r0, [r7], #-0
    fcdc:	00000029 	andeq	r0, r0, r9, lsr #32
    fce0:	0001080d 	andeq	r0, r1, sp, lsl #16
    fce4:	00091700 	andeq	r1, r9, r0, lsl #14
    fce8:	003a0e00 	eorseq	r0, sl, r0, lsl #28
    fcec:	007f0000 	rsbseq	r0, pc, r0
    fcf0:	40e70117 	rscmi	r0, r7, r7, lsl r1
    fcf4:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    fcf8:	64010a21 	strvs	r0, [r1], #-2593	; 0xfffff5df
    fcfc:	7c080029 	stcvc	0, cr0, [r8], {41}	; 0x29
    fd00:	02080029 	andeq	r0, r8, #41	; 0x29
    fd04:	8601007d 			; <UNDEFINED> instruction: 0x8601007d
    fd08:	19000009 	stmdbne	r0, {r0, r3}
    fd0c:	00003a1e 	andeq	r3, r0, lr, lsl sl
    fd10:	39218801 	stmdbcc	r1!, {r0, fp, pc}
    fd14:	000008ea 	andeq	r0, r0, sl, ror #17
    fd18:	91195001 	tstls	r9, r1
    fd1c:	01000032 	tsteq	r0, r2, lsr r0
    fd20:	fb382189 	blx	e1834e <_Min_Heap_Size+0xe17b4e>
    fd24:	01000008 	tsteq	r0, r8
    fd28:	3b571951 	blcc	15d6274 <_Min_Heap_Size+0x15d5a74>
    fd2c:	8a010000 	bhi	4fd34 <_Min_Heap_Size+0x4f534>
    fd30:	09014221 	stmdbeq	r1, {r0, r5, r9, lr}
    fd34:	52010000 	andpl	r0, r1, #0
    fd38:	0041a816 	subeq	sl, r1, r6, lsl r8
    fd3c:	218c0100 	orrcs	r0, ip, r0, lsl #2
    fd40:	0002c11d 	andeq	ip, r2, sp, lsl r1
    fd44:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    fd48:	16200087 	strtne	r0, [r0], -r7, lsl #1
    fd4c:	00003de8 	andeq	r3, r0, r8, ror #27
    fd50:	1c218d01 	stcne	13, cr8, [r1], #-4
    fd54:	00000907 	andeq	r0, r0, r7, lsl #18
    fd58:	82cc0305 	sbchi	r0, ip, #335544320	; 0x14000000
    fd5c:	1a002000 	bne	17d64 <_Min_Heap_Size+0x17564>
    fd60:	00004019 	andeq	r4, r0, r9, lsl r0
    fd64:	0d20df01 	stceq	15, cr13, [r0, #-4]!
    fd68:	0021a801 	eoreq	sl, r1, r1, lsl #16
    fd6c:	00225008 	eoreq	r5, r2, r8
    fd70:	00a9cb08 	adceq	ip, r9, r8, lsl #22
    fd74:	0a700100 	beq	1c1017c <_Min_Heap_Size+0x1c0f97c>
    fd78:	3a1b0000 	bcc	6cfd80 <_Min_Heap_Size+0x6cf580>
    fd7c:	0100003f 	tsteq	r0, pc, lsr r0
    fd80:	4a3820df 	bmi	e18104 <_Min_Heap_Size+0xe17904>
    fd84:	f5000001 			; <UNDEFINED> instruction: 0xf5000001
    fd88:	eb0000a9 	bl	10034 <_Min_Heap_Size+0xf834>
    fd8c:	1b0000a9 	blne	10038 <_Min_Heap_Size+0xf838>
    fd90:	00003e7f 	andeq	r3, r0, pc, ror lr
    fd94:	3e20e001 	cdpcc	0, 2, cr14, cr0, cr1, {0}
    fd98:	0000012a 	andeq	r0, r0, sl, lsr #2
    fd9c:	0000aa3e 	andeq	sl, r0, lr, lsr sl
    fda0:	0000aa3a 	andeq	sl, r0, sl, lsr sl
    fda4:	0040cc18 	subeq	ip, r0, r8, lsl ip
    fda8:	20e20100 	rsccs	r0, r2, r0, lsl #2
    fdac:	00014a10 	andeq	r4, r1, r0, lsl sl
    fdb0:	00aa6000 	adceq	r6, sl, r0
    fdb4:	00aa5c00 	adceq	r5, sl, r0, lsl #24
    fdb8:	37a61800 	strcc	r1, [r6, r0, lsl #16]!
    fdbc:	e3010000 	movw	r0, #4096	; 0x1000
    fdc0:	015b1620 	cmpeq	fp, r0, lsr #12
    fdc4:	aa800000 	bge	fe00fdcc <_estack+0xde00642c>
    fdc8:	aa7e0000 	bge	1f8fdd0 <_Min_Heap_Size+0x1f8f5d0>
    fdcc:	66180000 	ldrvs	r0, [r8], -r0
    fdd0:	01000033 	tsteq	r0, r3, lsr r0
    fdd4:	dd1420e4 	ldcle	0, cr2, [r4, #-912]	; 0xfffffc70
    fdd8:	95000006 	strls	r0, [r0, #-6]
    fddc:	930000aa 	movwls	r0, #170	; 0xaa
    fde0:	180000aa 	stmdane	r0, {r1, r3, r5, r7}
    fde4:	00004201 	andeq	r4, r0, r1, lsl #4
    fde8:	1420e501 	strtne	lr, [r0], #-1281	; 0xfffffaff
    fdec:	000006dd 	ldrdeq	r0, [r0], -sp
    fdf0:	0000aaaa 	andeq	sl, r0, sl, lsr #21
    fdf4:	0000aaa8 	andeq	sl, r0, r8, lsr #21
    fdf8:	0021f61c 	eoreq	pc, r1, ip, lsl r6	; <UNPREDICTABLE>
    fdfc:	00221c08 	eoreq	r1, r2, r8, lsl #24
    fe00:	000a4208 	andeq	r4, sl, r8, lsl #4
    fe04:	28131800 	ldmdacs	r3, {fp, ip}
    fe08:	04010000 	streq	r0, [r1], #-0
    fe0c:	03910d21 	orrseq	r0, r1, #2112	; 0x840
    fe10:	aabf0000 	bge	fefcfe18 <_estack+0xdefc6478>
    fe14:	aabd0000 	bge	fef4fe1c <_estack+0xdef4647c>
    fe18:	1d000000 	stcne	0, cr0, [r0, #-0]
    fe1c:	080021d0 	stmdaeq	r0, {r4, r6, r7, r8, sp}
    fe20:	00003951 	andeq	r3, r0, r1, asr r9
    fe24:	0021ee1e 	eoreq	lr, r1, lr, lsl lr
    fe28:	00396008 	eorseq	r6, r9, r8
    fe2c:	000a5f00 	andeq	r5, sl, r0, lsl #30
    fe30:	50011f00 	andpl	r1, r1, r0, lsl #30
    fe34:	00007802 	andeq	r7, r0, r2, lsl #16
    fe38:	00222a20 	eoreq	r2, r2, r0, lsr #20
    fe3c:	00396008 	eorseq	r6, r9, r8
    fe40:	50011f00 	andpl	r1, r1, r0, lsl #30
    fe44:	00007702 	andeq	r7, r0, r2, lsl #14
    fe48:	f0012100 			; <UNDEFINED> instruction: 0xf0012100
    fe4c:	01000039 	tsteq	r0, r9, lsr r0
    fe50:	010e2050 	qaddeq	r2, r0, lr
    fe54:	000000d9 	ldrdeq	r0, [r0], -r9
	...
    fe60:	0000aad2 	ldrdeq	sl, [r0], -r2
    fe64:	000b0c01 	andeq	r0, fp, r1, lsl #24
    fe68:	3b7a1b00 	blcc	1e96a70 <_Min_Heap_Size+0x1e96270>
    fe6c:	50010000 	andpl	r0, r1, r0
    fe70:	03a73a20 			; <UNDEFINED> instruction: 0x03a73a20
    fe74:	aaf60000 	bge	ffd8fe7c <_estack+0xdfd864dc>
    fe78:	aaf20000 	bge	ffc8fe80 <_estack+0xdfc864e0>
    fe7c:	0c1b0000 	ldceq	0, cr0, [fp], {-0}
    fe80:	01000035 	tsteq	r0, r5, lsr r0
    fe84:	2f392051 	svccs	0x00392051
    fe88:	1a000001 	bne	fe94 <_Min_Heap_Size+0xf694>
    fe8c:	140000ab 	strne	r0, [r0], #-171	; 0xffffff55
    fe90:	1b0000ab 	blne	10144 <_Min_Heap_Size+0xf944>
    fe94:	0000339e 	muleq	r0, lr, r3
    fe98:	36205201 	strtcc	r5, [r0], -r1, lsl #4
    fe9c:	000000d9 	ldrdeq	r0, [r0], -r9
    fea0:	0000ab49 	andeq	sl, r0, r9, asr #22
    fea4:	0000ab43 	andeq	sl, r0, r3, asr #22
    fea8:	00410518 	subeq	r0, r1, r8, lsl r5
    feac:	20540100 	subscs	r0, r4, r0, lsl #2
    feb0:	00066611 	andeq	r6, r6, r1, lsl r6
    feb4:	00ab7400 	adceq	r7, fp, r0, lsl #8
    feb8:	00ab7200 	adceq	r7, fp, r0, lsl #4
    febc:	42171800 	andsmi	r1, r7, #0, 16
    fec0:	55010000 	strpl	r0, [r1, #-0]
    fec4:	00d91220 	sbcseq	r1, r9, r0, lsr #4
    fec8:	ab890000 	blge	fe24fed0 <_estack+0xde246530>
    fecc:	ab870000 	blge	fe1cfed4 <_estack+0xde1c6534>
    fed0:	001d0000 	andseq	r0, sp, r0
    fed4:	6f000000 	svcvs	0x00000000
    fed8:	1d000039 	stcne	0, cr0, [r0, #-228]	; 0xffffff1c
    fedc:	00000000 	andeq	r0, r0, r0
    fee0:	0000397d 	andeq	r3, r0, sp, ror r9
    fee4:	0b012100 	bleq	582ec <_Min_Heap_Size+0x57aec>
    fee8:	01000041 	tsteq	r0, r1, asr #32
    feec:	0110202a 	tsteq	r0, sl, lsr #32
    fef0:	00000119 	andeq	r0, r0, r9, lsl r1
	...
    fefc:	0000ab9c 	muleq	r0, ip, fp
    ff00:	000b9301 	andeq	r9, fp, r1, lsl #6
    ff04:	3b7a1b00 	blcc	1e96b0c <_Min_Heap_Size+0x1e9630c>
    ff08:	2a010000 	bcs	4ff10 <_Min_Heap_Size+0x4f710>
    ff0c:	03a73b20 			; <UNDEFINED> instruction: 0x03a73b20
    ff10:	abc00000 	blge	ff00ff18 <_estack+0xdf006578>
    ff14:	abbc0000 	blge	fef0ff1c <_estack+0xdef0657c>
    ff18:	0c1b0000 	ldceq	0, cr0, [fp], {-0}
    ff1c:	01000035 	tsteq	r0, r5, lsr r0
    ff20:	2f3a202b 	svccs	0x003a202b
    ff24:	ea000001 	b	ff30 <_Min_Heap_Size+0xf730>
    ff28:	de0000ab 	cdple	0, 0, cr0, cr0, cr11, {5}
    ff2c:	180000ab 	stmdane	r0, {r0, r1, r3, r5, r7}
    ff30:	00004105 	andeq	r4, r0, r5, lsl #2
    ff34:	11202d01 			; <UNDEFINED> instruction: 0x11202d01
    ff38:	00000666 	andeq	r0, r0, r6, ror #12
    ff3c:	0000ac3e 	andeq	sl, r0, lr, lsr ip
    ff40:	0000ac3a 	andeq	sl, r0, sl, lsr ip
    ff44:	00384818 	eorseq	r4, r8, r8, lsl r8
    ff48:	202e0100 	eorcs	r0, lr, r0, lsl #2
    ff4c:	00011914 	andeq	r1, r1, r4, lsl r9
    ff50:	00ac6000 	adceq	r6, ip, r0
    ff54:	00ac5c00 	adceq	r5, ip, r0, lsl #24
    ff58:	00001d00 	andeq	r1, r0, r0, lsl #26
    ff5c:	396f0000 	stmdbcc	pc!, {}^	; <UNPREDICTABLE>
    ff60:	001d0000 	andseq	r0, sp, r0
    ff64:	7d000000 	stcvc	0, cr0, [r0, #-0]
    ff68:	00000039 	andeq	r0, r0, r9, lsr r0
    ff6c:	3ec80122 	polccep	f0, f0, f2
    ff70:	b6010000 	strlt	r0, [r1], -r0
    ff74:	00010a1f 	andeq	r0, r1, pc, lsl sl
    ff78:	00000000 	andeq	r0, r0, r0
    ff7c:	7f000000 	svcvc	0x00000000
    ff80:	010000ac 	smlatbeq	r0, ip, r0, r0
    ff84:	00000cde 	ldrdeq	r0, [r0], -lr
    ff88:	003b6c19 	eorseq	r6, fp, r9, lsl ip
    ff8c:	1fb60100 	svcne	0x00b60100
    ff90:	0003a736 	andeq	sl, r3, r6, lsr r7
    ff94:	1b500100 	blne	141039c <_Min_Heap_Size+0x140fb9c>
    ff98:	000041b5 			; <UNDEFINED> instruction: 0x000041b5
    ff9c:	351fb701 	ldrcc	fp, [pc, #-1793]	; f8a3 <_Min_Heap_Size+0xf0a3>
    ffa0:	0000012f 	andeq	r0, r0, pc, lsr #2
    ffa4:	0000aca5 	andeq	sl, r0, r5, lsr #25
    ffa8:	0000ac9f 	muleq	r0, pc, ip	; <UNPREDICTABLE>
    ffac:	0029111b 	eoreq	r1, r9, fp, lsl r1
    ffb0:	1fb80100 	svcne	0x00b80100
    ffb4:	000cde36 	andeq	sp, ip, r6, lsr lr
    ffb8:	00acdd00 	adceq	sp, ip, r0, lsl #26
    ffbc:	00acd300 	adceq	sp, ip, r0, lsl #6
    ffc0:	41051800 	tstmi	r5, r0, lsl #16
    ffc4:	ba010000 	blt	4ffcc <_Min_Heap_Size+0x4f7cc>
    ffc8:	0666111f 			; <UNDEFINED> instruction: 0x0666111f
    ffcc:	ad240000 	stcge	0, cr0, [r4, #-0]
    ffd0:	ad220000 	stcge	0, cr0, [r2, #-0]
    ffd4:	28180000 	ldmdacs	r8, {}	; <UNPREDICTABLE>
    ffd8:	01000034 	tsteq	r0, r4, lsr r0
    ffdc:	c3111fbb 	tstgt	r1, #748	; 0x2ec
    ffe0:	3b000000 	blcc	ffe8 <_Min_Heap_Size+0xf7e8>
    ffe4:	370000ad 	strcc	r0, [r0, -sp, lsr #1]
    ffe8:	180000ad 	stmdane	r0, {r0, r2, r3, r5, r7}
    ffec:	00002a5d 	andeq	r2, r0, sp, asr sl
    fff0:	151fbc01 	ldrne	fp, [pc, #-3073]	; f3f7 <_Min_Heap_Size+0xebf7>
    fff4:	0000012f 	andeq	r0, r0, pc, lsr #2
    fff8:	0000ad5b 	andeq	sl, r0, fp, asr sp
    fffc:	0000ad59 	andeq	sl, r0, r9, asr sp
   10000:	000bd023 	andeq	sp, fp, r3, lsr #32
   10004:	000c4600 	andeq	r4, ip, r0, lsl #12
   10008:	28471800 	stmdacs	r7, {fp, ip}^
   1000c:	ee010000 	cdp	0, 0, cr0, cr1, cr0, {0}
   10010:	06dd151f 			; <UNDEFINED> instruction: 0x06dd151f
   10014:	ad720000 	ldclge	0, cr0, [r2, #-0]
   10018:	ad6e0000 	stclge	0, cr0, [lr, #-0]
   1001c:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
   10028:	00000c69 	andeq	r0, r0, r9, ror #24
   1002c:	00281318 	eoreq	r1, r8, r8, lsl r3
   10030:	1fef0100 	svcne	0x00ef0100
   10034:	00039115 	andeq	r9, r3, r5, lsl r1
   10038:	00ad9200 	adceq	r9, sp, r0, lsl #4
   1003c:	00ad9000 	adceq	r9, sp, r0
   10040:	001c0000 	andseq	r0, ip, r0
   10044:	00000000 	andeq	r0, r0, r0
   10048:	8c000000 	stchi	0, cr0, [r0], {-0}
   1004c:	1800000c 	stmdane	r0, {r2, r3}
   10050:	00002813 	andeq	r2, r0, r3, lsl r8
   10054:	151ff501 	ldrne	pc, [pc, #-1281]	; fb5b <_Min_Heap_Size+0xf35b>
   10058:	00000391 	muleq	r0, r1, r3
   1005c:	0000ada7 	andeq	sl, r0, r7, lsr #27
   10060:	0000ada5 	andeq	sl, r0, r5, lsr #27
   10064:	390b2400 	stmdbcc	fp, {sl, sp}
   10068:	00000000 	andeq	r0, r0, r0
   1006c:	00090000 	andeq	r0, r9, r0
   10070:	00000000 	andeq	r0, r0, r0
   10074:	01000000 	mrseq	r0, (UNDEF: 0)
   10078:	b9321fda 	ldmdblt	r2!, {r1, r3, r4, r6, r7, r8, r9, sl, fp, ip}
   1007c:	2500000c 	strcs	r0, [r0, #-12]
   10080:	0000391d 	andeq	r3, r0, sp, lsl r9
   10084:	0000adbc 			; <UNDEFINED> instruction: 0x0000adbc
   10088:	0000adba 			; <UNDEFINED> instruction: 0x0000adba
   1008c:	00392926 	eorseq	r2, r9, r6, lsr #18
   10090:	f0270000 			; <UNDEFINED> instruction: 0xf0270000
   10094:	00000038 	andeq	r0, r0, r8, lsr r0
   10098:	02000000 	andeq	r0, r0, #0
	...
   100a4:	09202001 	stmdbeq	r0!, {r0, sp}
   100a8:	0038fe28 	eorseq	pc, r8, r8, lsr #28
   100ac:	00add100 	adceq	sp, sp, r0, lsl #2
   100b0:	00adcf00 	adceq	ip, sp, r0, lsl #30
   100b4:	07000000 	streq	r0, [r0, -r0]
   100b8:	00011904 	andeq	r1, r1, r4, lsl #18
   100bc:	53012100 	movwpl	r2, #4352	; 0x1100
   100c0:	01000034 	tsteq	r0, r4, lsr r0
   100c4:	01101f10 	tsteq	r0, r0, lsl pc
   100c8:	00000119 	andeq	r0, r0, r9, lsl r1
	...
   100d4:	0000ade4 	andeq	sl, r0, r4, ror #27
   100d8:	000e8d01 	andeq	r8, lr, r1, lsl #26
   100dc:	3b6c1b00 	blcc	1b16ce4 <_Min_Heap_Size+0x1b164e4>
   100e0:	10010000 	andne	r0, r1, r0
   100e4:	03a7381f 			; <UNDEFINED> instruction: 0x03a7381f
   100e8:	ae080000 	cdpge	0, 0, cr0, cr8, cr0, {0}
   100ec:	ae040000 	cdpge	0, 0, cr0, cr4, cr0, {0}
   100f0:	b51b0000 	ldrlt	r0, [fp, #-0]
   100f4:	01000041 	tsteq	r0, r1, asr #32
   100f8:	2f371f11 	svccs	0x00371f11
   100fc:	42000001 	andmi	r0, r0, #1
   10100:	260000ae 	strcs	r0, [r0], -lr, lsr #1
   10104:	1b0000ae 	blne	103c4 <_Min_Heap_Size+0xfbc4>
   10108:	00003d4b 	andeq	r3, r0, fp, asr #26
   1010c:	341f1201 	ldrcc	r1, [pc], #-513	; 10114 <_Min_Heap_Size+0xf914>
   10110:	000000d9 	ldrdeq	r0, [r0], -r9
   10114:	0000af03 	andeq	sl, r0, r3, lsl #30
   10118:	0000aefb 	strdeq	sl, [r0], -fp
   1011c:	003ae21b 	eorseq	lr, sl, fp, lsl r2
   10120:	1f130100 	svcne	0x00130100
   10124:	00052b39 	andeq	r2, r5, r9, lsr fp
   10128:	00af4100 	adceq	r4, pc, r0, lsl #2
   1012c:	00af3d00 	adceq	r3, pc, r0, lsl #26
   10130:	3a6c1b00 	bcc	1b16d38 <_Min_Heap_Size+0x1b16538>
   10134:	14010000 	strne	r0, [r1], #-0
   10138:	0e8d361f 	mcreq	6, 4, r3, cr13, cr15, {0}
   1013c:	af660000 	svcge	0x00660000
   10140:	af620000 	svcge	0x00620000
   10144:	111b0000 	tstne	fp, r0
   10148:	01000029 	tsteq	r0, r9, lsr #32
   1014c:	de381f15 	mrcle	15, 1, r1, cr8, cr5, {0}
   10150:	8a00000c 	bhi	10188 <_Min_Heap_Size+0xf988>
   10154:	860000af 	strhi	r0, [r0], -pc, lsr #1
   10158:	180000af 	stmdane	r0, {r0, r1, r2, r3, r5, r7}
   1015c:	00004105 	andeq	r4, r0, r5, lsl #2
   10160:	111f1701 	tstne	pc, r1, lsl #14
   10164:	00000666 	andeq	r0, r0, r6, ror #12
   10168:	0000afae 	andeq	sl, r0, lr, lsr #31
   1016c:	0000afaa 	andeq	sl, r0, sl, lsr #31
   10170:	00342818 	eorseq	r2, r4, r8, lsl r8
   10174:	1f180100 	svcne	0x00180100
   10178:	0000c311 	andeq	ip, r0, r1, lsl r3
   1017c:	00afce00 	adceq	ip, pc, r0, lsl #28
   10180:	00afcc00 	adceq	ip, pc, r0, lsl #24
   10184:	38481800 	stmdacc	r8, {fp, ip}^
   10188:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
   1018c:	0119141f 	tsteq	r9, pc, lsl r4
   10190:	afe90000 	svcge	0x00e90000
   10194:	afe10000 	svcge	0x00e10000
   10198:	5d180000 	ldcpl	0, cr0, [r8, #-0]
   1019c:	0100002a 	tsteq	r0, sl, lsr #32
   101a0:	2f151f1a 	svccs	0x00151f1a
   101a4:	21000001 	tstcs	r0, r1
   101a8:	1f0000b0 	svcne	0x000000b0
   101ac:	230000b0 	movwcs	r0, #176	; 0xb0
   101b0:	00000bb8 			; <UNDEFINED> instruction: 0x00000bb8
   101b4:	00000df5 	strdeq	r0, [r0], -r5
   101b8:	00284718 	eoreq	r4, r8, r8, lsl r7
   101bc:	1f780100 	svcne	0x00780100
   101c0:	0006dd15 	andeq	sp, r6, r5, lsl sp
   101c4:	00b03800 	adcseq	r3, r0, r0, lsl #16
   101c8:	00b03400 	adcseq	r3, r0, r0, lsl #8
   101cc:	001c0000 	andseq	r0, ip, r0
   101d0:	00000000 	andeq	r0, r0, r0
   101d4:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
   101d8:	1800000e 	stmdane	r0, {r1, r2, r3}
   101dc:	00002813 	andeq	r2, r0, r3, lsl r8
   101e0:	151f7901 	ldrne	r7, [pc, #-2305]	; f8e7 <_Min_Heap_Size+0xf0e7>
   101e4:	00000391 	muleq	r0, r1, r3
   101e8:	0000b058 	andeq	fp, r0, r8, asr r0
   101ec:	0000b056 	andeq	fp, r0, r6, asr r0
   101f0:	00001c00 	andeq	r1, r0, r0, lsl #24
   101f4:	00000000 	andeq	r0, r0, r0
   101f8:	0e3b0000 	cdpeq	0, 3, cr0, cr11, cr0, {0}
   101fc:	13180000 	tstne	r8, #0
   10200:	01000028 	tsteq	r0, r8, lsr #32
   10204:	91151f7f 	tstls	r5, pc, ror pc
   10208:	6d000003 	stcvs	0, cr0, [r0, #-12]
   1020c:	6b0000b0 	blvs	104d4 <_Min_Heap_Size+0xfcd4>
   10210:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   10214:	00390b24 	eorseq	r0, r9, r4, lsr #22
   10218:	00000000 	andeq	r0, r0, r0
   1021c:	00000a00 	andeq	r0, r0, r0, lsl #20
   10220:	00000000 	andeq	r0, r0, r0
   10224:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
   10228:	0e68321f 	mcreq	2, 3, r3, cr8, cr15, {0}
   1022c:	1d250000 	stcne	0, cr0, [r5, #-0]
   10230:	82000039 	andhi	r0, r0, #57	; 0x39
   10234:	800000b0 	strhhi	r0, [r0], -r0	; <UNPREDICTABLE>
   10238:	260000b0 			; <UNDEFINED> instruction: 0x260000b0
   1023c:	00003929 	andeq	r3, r0, r9, lsr #18
   10240:	38f02700 	ldmcc	r0!, {r8, r9, sl, sp}^
   10244:	00000000 	andeq	r0, r0, r0
   10248:	00020000 	andeq	r0, r2, r0
   1024c:	00000000 	andeq	r0, r0, r0
   10250:	01000000 	mrseq	r0, (UNDEF: 0)
   10254:	28091faa 	stmdacs	r9, {r1, r3, r5, r7, r8, r9, sl, fp, ip}
   10258:	000038fe 	strdeq	r3, [r0], -lr
   1025c:	0000b097 	muleq	r0, r7, r0
   10260:	0000b095 	muleq	r0, r5, r0
   10264:	04070000 	streq	r0, [r7], #-0
   10268:	000000d9 	ldrdeq	r0, [r0], -r9
   1026c:	35ba0121 	ldrcc	r0, [sl, #289]!	; 0x121
   10270:	98010000 	stmdals	r1, {}	; <UNPREDICTABLE>
   10274:	1901101e 	stmdbne	r1, {r1, r2, r3, r4, ip}
   10278:	00000001 	andeq	r0, r0, r1
   1027c:	00000000 	andeq	r0, r0, r0
   10280:	aa000000 	bge	10288 <_Min_Heap_Size+0xfa88>
   10284:	010000b0 	strheq	r0, [r0, -r0]
   10288:	00000fb9 			; <UNDEFINED> instruction: 0x00000fb9
   1028c:	003b6c1b 	eorseq	r6, fp, fp, lsl ip
   10290:	1e980100 	fmlnee	f0, f0, f0
   10294:	0003a731 	andeq	sl, r3, r1, lsr r7
   10298:	00b0ce00 	adcseq	ip, r0, r0, lsl #28
   1029c:	00b0ca00 	adcseq	ip, r0, r0, lsl #20
   102a0:	41b51b00 			; <UNDEFINED> instruction: 0x41b51b00
   102a4:	99010000 	stmdbls	r1, {}	; <UNPREDICTABLE>
   102a8:	012f301e 			; <UNDEFINED> instruction: 0x012f301e
   102ac:	b10e0000 	mrslt	r0, (UNDEF: 14)
   102b0:	b0ec0000 	rsclt	r0, ip, r0
   102b4:	4b1b0000 	blmi	6d02bc <_Min_Heap_Size+0x6cfabc>
   102b8:	0100003d 	tsteq	r0, sp, lsr r0
   102bc:	d92d1e9a 	pushle	{r1, r3, r4, r7, r9, sl, fp, ip}
   102c0:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
   102c4:	eb0000b1 	bl	10590 <_Min_Heap_Size+0xfd90>
   102c8:	1b0000b1 	blne	10594 <_Min_Heap_Size+0xfd94>
   102cc:	00003ae2 	andeq	r3, r0, r2, ror #21
   102d0:	321e9b01 	andscc	r9, lr, #1024	; 0x400
   102d4:	0000052b 	andeq	r0, r0, fp, lsr #10
   102d8:	0000b23e 	andeq	fp, r0, lr, lsr r2
   102dc:	0000b23a 	andeq	fp, r0, sl, lsr r2
   102e0:	003a6c1b 	eorseq	r6, sl, fp, lsl ip
   102e4:	1e9c0100 	fmlnee	f0, f4, f0
   102e8:	000e8d2f 	andeq	r8, lr, pc, lsr #26
   102ec:	00b26500 	adcseq	r6, r2, r0, lsl #10
   102f0:	00b25f00 	adcseq	r5, r2, r0, lsl #30
   102f4:	41051800 	tstmi	r5, r0, lsl #16
   102f8:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
   102fc:	0666111e 			; <UNDEFINED> instruction: 0x0666111e
   10300:	b2950000 	addslt	r0, r5, #0
   10304:	b2910000 	addslt	r0, r1, #0
   10308:	48180000 	ldmdami	r8, {}	; <UNPREDICTABLE>
   1030c:	01000038 	tsteq	r0, r8, lsr r0
   10310:	19141e9f 	ldmdbne	r4, {r0, r1, r2, r3, r4, r7, r9, sl, fp, ip}
   10314:	bb000001 	bllt	10320 <_Min_Heap_Size+0xfb20>
   10318:	b30000b2 	movwlt	r0, #178	; 0xb2
   1031c:	180000b2 	stmdane	r0, {r1, r4, r5, r7}
   10320:	00003428 	andeq	r3, r0, r8, lsr #8
   10324:	111ea001 	tstne	lr, r1
   10328:	000000c3 	andeq	r0, r0, r3, asr #1
   1032c:	0000b2f7 	strdeq	fp, [r0], -r7
   10330:	0000b2f1 	strdeq	fp, [r0], -r1
   10334:	000ba023 	andeq	sl, fp, r3, lsr #32
   10338:	000f7a00 	andeq	r7, pc, r0, lsl #20
   1033c:	28471800 	stmdacs	r7, {fp, ip}^
   10340:	e5010000 	str	r0, [r1, #-0]
   10344:	06dd111e 			; <UNDEFINED> instruction: 0x06dd111e
   10348:	b3240000 			; <UNDEFINED> instruction: 0xb3240000
   1034c:	b3200000 	noplt	{0}	; <UNPREDICTABLE>
   10350:	1c000000 	stcne	0, cr0, [r0], {-0}
	...
   1035c:	00000f9d 	muleq	r0, sp, pc	; <UNPREDICTABLE>
   10360:	00281318 	eoreq	r1, r8, r8, lsl r3
   10364:	1ee60100 	cdpne	1, 14, cr0, cr6, cr0, {0}
   10368:	00039111 	andeq	r9, r3, r1, lsl r1
   1036c:	00b34400 	adcseq	r4, r3, r0, lsl #8
   10370:	00b34200 	adcseq	r4, r3, r0, lsl #4
   10374:	001d0000 	andseq	r0, sp, r0
   10378:	6f000000 	svcvs	0x00000000
   1037c:	1d000039 	stcne	0, cr0, [r0, #-228]	; 0xffffff1c
   10380:	00000000 	andeq	r0, r0, r0
   10384:	0000397d 	andeq	r3, r0, sp, ror r9
   10388:	0000001d 	andeq	r0, r0, sp, lsl r0
   1038c:	0014e600 	andseq	lr, r4, r0, lsl #12
   10390:	01210000 			; <UNDEFINED> instruction: 0x01210000
   10394:	0000389a 	muleq	r0, sl, r8
   10398:	101e2501 	andsne	r2, lr, r1, lsl #10
   1039c:	00011901 	andeq	r1, r1, r1, lsl #18
	...
   103a8:	00b35700 	adcseq	r5, r3, r0, lsl #14
   103ac:	10df0100 	sbcsne	r0, pc, r0, lsl #2
   103b0:	4f1b0000 	svcmi	0x001b0000
   103b4:	01000042 	tsteq	r0, r2, asr #32
   103b8:	2f341e25 	svccs	0x00341e25
   103bc:	7f000001 	svcvc	0x00000001
   103c0:	770000b3 			; <UNDEFINED> instruction: 0x770000b3
   103c4:	1b0000b3 	blne	10698 <_Min_Heap_Size+0xfe98>
   103c8:	00003645 	andeq	r3, r0, r5, asr #12
   103cc:	311e2601 	tstcc	lr, r1, lsl #12
   103d0:	000000d9 	ldrdeq	r0, [r0], -r9
   103d4:	0000b3ba 			; <UNDEFINED> instruction: 0x0000b3ba
   103d8:	0000b3b6 			; <UNDEFINED> instruction: 0x0000b3b6
   103dc:	0033351b 	eorseq	r3, r3, fp, lsl r5
   103e0:	1e270100 	sufnes	f0, f7, f0
   103e4:	0000d931 	andeq	sp, r0, r1, lsr r9
   103e8:	00b3e200 	adcseq	lr, r3, r0, lsl #4
   103ec:	00b3d800 	adcseq	sp, r3, r0, lsl #16
   103f0:	3dd31b00 	vldrcc	d17, [r3]
   103f4:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
   103f8:	0e8d331e 	mcreq	3, 4, r3, cr13, cr14, {0}
   103fc:	b4310000 	ldrtlt	r0, [r1], #-0
   10400:	b4270000 	strtlt	r0, [r7], #-0
   10404:	3a1b0000 	bcc	6d040c <_Min_Heap_Size+0x6cfc0c>
   10408:	0100003f 	tsteq	r0, pc, lsr r0
   1040c:	4a331e29 	bmi	cd7cb8 <_Min_Heap_Size+0xcd74b8>
   10410:	7a000001 	bvc	1041c <_Min_Heap_Size+0xfc1c>
   10414:	760000b4 			; <UNDEFINED> instruction: 0x760000b4
   10418:	180000b4 	stmdane	r0, {r2, r4, r5, r7}
   1041c:	00003848 	andeq	r3, r0, r8, asr #16
   10420:	141e2b01 	ldrne	r2, [lr], #-2817	; 0xfffff4ff
   10424:	00000119 	andeq	r0, r0, r9, lsl r1
   10428:	0000b49e 	muleq	r0, lr, r4
   1042c:	0000b49a 	muleq	r0, sl, r4
   10430:	003fac18 	eorseq	sl, pc, r8, lsl ip	; <UNPREDICTABLE>
   10434:	1e2b0100 	sufnee	f0, f3, f0
   10438:	0001191d 	andeq	r1, r1, sp, lsl r9
   1043c:	00b4c100 	adcseq	ip, r4, r0, lsl #2
   10440:	00b4bd00 	adcseq	fp, r4, r0, lsl #26
   10444:	3c731800 	ldclcc	8, cr1, [r3], #-0
   10448:	2b010000 	blcs	50450 <_Min_Heap_Size+0x4fc50>
   1044c:	01192e1e 	tsteq	r9, lr, lsl lr
   10450:	b4e50000 	strbtlt	r0, [r5], #0
   10454:	b4df0000 	ldrblt	r0, [pc], #0	; 1045c <_Min_Heap_Size+0xfc5c>
   10458:	001d0000 	andseq	r0, sp, r0
   1045c:	a9000000 	stmdbge	r0, {}	; <UNPREDICTABLE>
   10460:	1d000026 	stcne	0, cr0, [r0, #-152]	; 0xffffff68
   10464:	00000000 	andeq	r0, r0, r0
   10468:	0000396f 	andeq	r3, r0, pc, ror #18
   1046c:	0000001d 	andeq	r0, r0, sp, lsl r0
   10470:	00397d00 	eorseq	r7, r9, r0, lsl #26
   10474:	00001d00 	andeq	r1, r0, r0, lsl #26
   10478:	25590000 	ldrbcs	r0, [r9, #-0]
   1047c:	001d0000 	andseq	r0, sp, r0
   10480:	6f000000 	svcvs	0x00000000
   10484:	1d000039 	stcne	0, cr0, [r0, #-228]	; 0xffffff1c
   10488:	00000000 	andeq	r0, r0, r0
   1048c:	0000397d 	andeq	r3, r0, sp, ror r9
   10490:	0000001d 	andeq	r0, r0, sp, lsl r0
   10494:	00397d00 	eorseq	r7, r9, r0, lsl #26
   10498:	00001d00 	andeq	r1, r0, r0, lsl #26
   1049c:	397d0000 	ldmdbcc	sp!, {}^	; <UNPREDICTABLE>
   104a0:	00200000 	eoreq	r0, r0, r0
   104a4:	86000000 	strhi	r0, [r0], -r0
   104a8:	1f000009 	svcne	0x00000009
   104ac:	77025001 	strvc	r5, [r2, -r1]
   104b0:	51011f00 	tstpl	r1, r0, lsl #30
   104b4:	00003101 	andeq	r3, r0, r1, lsl #2
   104b8:	38eb0121 	stmiacc	fp!, {r0, r5, r8}^
   104bc:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
   104c0:	d9010e1d 	stmdble	r1, {r0, r2, r3, r4, r9, sl, fp}
	...
   104cc:	11000000 	mrsne	r0, (UNDEF: 0)
   104d0:	010000b5 	strheq	r0, [r0, -r5]
   104d4:	000011db 	ldrdeq	r1, [r0], -fp
   104d8:	00424f1b 	subeq	r4, r2, fp, lsl pc
   104dc:	1dbe0100 	ldfnes	f0, [lr]
   104e0:	00012f33 	andeq	r2, r1, r3, lsr pc
   104e4:	00b53900 	adcseq	r3, r5, r0, lsl #18
   104e8:	00b53100 	adcseq	r3, r5, r0, lsl #2
   104ec:	35dc1b00 	ldrbcc	r1, [ip, #2816]	; 0xb00
   104f0:	bf010000 	svclt	0x00010000
   104f4:	0119321d 	tsteq	r9, sp, lsl r2
   104f8:	b5740000 	ldrblt	r0, [r4, #-0]!
   104fc:	b5700000 	ldrblt	r0, [r0, #-0]!
   10500:	3a1b0000 	bcc	6d0508 <_Min_Heap_Size+0x6cfd08>
   10504:	0100003f 	tsteq	r0, pc, lsr r0
   10508:	4a321dc0 	bmi	c97c10 <_Min_Heap_Size+0xc97410>
   1050c:	a0000001 	andge	r0, r0, r1
   10510:	920000b5 	andls	r0, r0, #181	; 0xb5
   10514:	180000b5 	stmdane	r0, {r0, r2, r4, r5, r7}
   10518:	00004217 	andeq	r4, r0, r7, lsl r2
   1051c:	121dc201 	andsne	ip, sp, #268435456	; 0x10000000
   10520:	000000d9 	ldrdeq	r0, [r0], -r9
   10524:	0000b602 	andeq	fp, r0, r2, lsl #12
   10528:	0000b5fe 	strdeq	fp, [r0], -lr
   1052c:	003fac18 	eorseq	sl, pc, r8, lsl ip	; <UNPREDICTABLE>
   10530:	1dc30100 	stfnee	f0, [r3]
   10534:	00011914 	andeq	r1, r1, r4, lsl r9
   10538:	00b62400 	adcseq	r2, r6, r0, lsl #8
   1053c:	00b62000 	adcseq	r2, r6, r0
   10540:	3c731800 	ldclcc	8, cr1, [r3], #-0
   10544:	c3010000 	movwgt	r0, #4096	; 0x1000
   10548:	0119251d 	tsteq	r9, sp, lsl r5
   1054c:	b6480000 	strblt	r0, [r8], -r0
   10550:	b6420000 	strblt	r0, [r2], -r0
   10554:	001d0000 	andseq	r0, sp, r0
   10558:	a9000000 	stmdbge	r0, {}	; <UNPREDICTABLE>
   1055c:	1d000026 	stcne	0, cr0, [r0, #-152]	; 0xffffff68
   10560:	00000000 	andeq	r0, r0, r0
   10564:	0000396f 	andeq	r3, r0, pc, ror #18
   10568:	0000001d 	andeq	r0, r0, sp, lsl r0
   1056c:	00397d00 	eorseq	r7, r9, r0, lsl #26
   10570:	00001d00 	andeq	r1, r0, r0, lsl #26
   10574:	25590000 	ldrbcs	r0, [r9, #-0]
   10578:	001d0000 	andseq	r0, sp, r0
   1057c:	6f000000 	svcvs	0x00000000
   10580:	1d000039 	stcne	0, cr0, [r0, #-228]	; 0xffffff1c
   10584:	00000000 	andeq	r0, r0, r0
   10588:	0000397d 	andeq	r3, r0, sp, ror r9
   1058c:	0000001d 	andeq	r0, r0, sp, lsl r0
   10590:	00397d00 	eorseq	r7, r9, r0, lsl #26
   10594:	00001d00 	andeq	r1, r0, r0, lsl #26
   10598:	397d0000 	ldmdbcc	sp!, {}^	; <UNPREDICTABLE>
   1059c:	00200000 	eoreq	r0, r0, r0
   105a0:	86000000 	strhi	r0, [r0], -r0
   105a4:	1f000009 	svcne	0x00000009
   105a8:	75025001 	strvc	r5, [r2, #-1]
   105ac:	51011f00 	tstpl	r1, r0, lsl #30
   105b0:	00003101 	andeq	r3, r0, r1, lsl #2
   105b4:	2c660129 	stfcse	f0, [r6], #-164	; 0xffffff5c
   105b8:	a5010000 	strge	r0, [r1, #-0]
   105bc:	a701121d 	smladge	r1, sp, r2, r1
   105c0:	00000003 	andeq	r0, r0, r3
   105c4:	00000000 	andeq	r0, r0, r0
   105c8:	02000000 	andeq	r0, r0, #0
   105cc:	1001007d 	andne	r0, r1, sp, ror r0
   105d0:	18000012 	stmdane	r0, {r1, r4}
   105d4:	00004105 	andeq	r4, r0, r5, lsl #2
   105d8:	111da701 	tstne	sp, r1, lsl #14
   105dc:	00000666 	andeq	r0, r0, r6, ror #12
   105e0:	0000b676 	andeq	fp, r0, r6, ror r6
   105e4:	0000b674 	andeq	fp, r0, r4, ror r6
   105e8:	ea012900 	b	5a9f0 <_Min_Heap_Size+0x5a1f0>
   105ec:	0100003a 	tsteq	r0, sl, lsr r0
   105f0:	010c1d91 			; <UNDEFINED> instruction: 0x010c1d91
   105f4:	0000014a 	andeq	r0, r0, sl, asr #2
	...
   10600:	01007d02 	tsteq	r0, r2, lsl #26
   10604:	00001245 	andeq	r1, r0, r5, asr #4
   10608:	002a2518 	eoreq	r2, sl, r8, lsl r5
   1060c:	1d930100 	ldfnes	f0, [r3]
   10610:	00014a10 	andeq	r4, r1, r0, lsl sl
   10614:	00b68b00 	adcseq	r8, r6, r0, lsl #22
   10618:	00b68900 	adcseq	r8, r6, r0, lsl #18
   1061c:	01220000 			; <UNDEFINED> instruction: 0x01220000
   10620:	00003117 	andeq	r3, r0, r7, lsl r1
   10624:	0a1a7901 	beq	6aea30 <_Min_Heap_Size+0x6ae230>
   10628:	00000001 	andeq	r0, r0, r1
   1062c:	00000000 	andeq	r0, r0, r0
   10630:	00b69e00 	adcseq	r9, r6, r0, lsl #28
   10634:	130c0100 	movwne	r0, #49408	; 0xc100
   10638:	111b0000 	tstne	fp, r0
   1063c:	0100003d 	tsteq	r0, sp, lsr r0
   10640:	b3421a79 	movtlt	r1, #10873	; 0x2a79
   10644:	d4000003 	strle	r0, [r0], #-3
   10648:	ca0000b6 	bgt	10928 <_Min_Heap_Size+0x10128>
   1064c:	1b0000b6 	blne	1092c <_Min_Heap_Size+0x1012c>
   10650:	00003c56 	andeq	r3, r0, r6, asr ip
   10654:	3b1a7a01 	blcc	6aee60 <_Min_Heap_Size+0x6ae660>
   10658:	0000012f 	andeq	r0, r0, pc, lsr #2
   1065c:	0000b719 	andeq	fp, r0, r9, lsl r7
   10660:	0000b713 	andeq	fp, r0, r3, lsl r7
   10664:	00410518 	subeq	r0, r1, r8, lsl r5
   10668:	1a7c0100 	bne	1f10a70 <_Min_Heap_Size+0x1f10270>
   1066c:	00067117 	andeq	r7, r6, r7, lsl r1
   10670:	00b74f00 	adcseq	r4, r7, r0, lsl #30
   10674:	00b74500 	adcseq	r4, r7, r0, lsl #10
   10678:	3f6d1800 	svccc	0x006d1800
   1067c:	7d010000 	stcvc	0, cr0, [r1, #-0]
   10680:	012f151a 			; <UNDEFINED> instruction: 0x012f151a
   10684:	b7900000 	ldrlt	r0, [r0, r0]
   10688:	b78e0000 	strlt	r0, [lr, r0]
   1068c:	f5180000 			; <UNDEFINED> instruction: 0xf5180000
   10690:	0100003b 	tsteq	r0, fp, lsr r0
   10694:	2f2c1a7d 	svccs	0x002c1a7d
   10698:	ab000001 	blge	106a4 <_Min_Heap_Size+0xfea4>
   1069c:	a30000b7 	movwge	r0, #183	; 0xb7
   106a0:	2a0000b7 	bcs	10984 <_Min_Heap_Size+0x10184>
   106a4:	00003322 	andeq	r3, r0, r2, lsr #6
   106a8:	1b1a7e01 	blne	6afeb4 <_Min_Heap_Size+0x6af6b4>
   106ac:	00000145 	andeq	r0, r0, r5, asr #2
   106b0:	00001c01 	andeq	r1, r0, r1, lsl #24
   106b4:	00000000 	andeq	r0, r0, r0
   106b8:	12fb0000 	rscsne	r0, fp, #0
   106bc:	13180000 	tstne	r8, #0
   106c0:	01000028 	tsteq	r0, r8, lsr #32
   106c4:	91191ac9 	tstls	r9, r9, asr #21
   106c8:	e3000003 	movw	r0, #3
   106cc:	e10000b7 	strh	r0, [r0, -r7]
   106d0:	000000b7 	strheq	r0, [r0], -r7
   106d4:	00000020 	andeq	r0, r0, r0, lsr #32
   106d8:	00395100 	eorseq	r5, r9, r0, lsl #2
   106dc:	50011f00 	andpl	r1, r1, r0, lsl #30
   106e0:	00007502 	andeq	r7, r0, r2, lsl #10
   106e4:	e9012100 	stmdb	r1, {r8, sp}
   106e8:	0100002c 	tsteq	r0, ip, lsr #32
   106ec:	01101a1b 	tsteq	r0, fp, lsl sl
   106f0:	00000119 	andeq	r0, r0, r9, lsl r1
   106f4:	080028e4 	stmdaeq	r0, {r2, r5, r6, r7, fp, sp}
   106f8:	08002964 	stmdaeq	r0, {r2, r5, r6, r8, fp, sp}
   106fc:	0000b7f6 	strdeq	fp, [r0], -r6
   10700:	00139f01 	andseq	r9, r3, r1, lsl #30
   10704:	3d111b00 	vldrcc	d1, [r1, #-0]
   10708:	1b010000 	blne	50710 <_Min_Heap_Size+0x4ff10>
   1070c:	03b33c1a 			; <UNDEFINED> instruction: 0x03b33c1a
   10710:	b83e0000 	ldmdalt	lr!, {}	; <UNPREDICTABLE>
   10714:	b82e0000 	stmdalt	lr!, {}	; <UNPREDICTABLE>
   10718:	05180000 	ldreq	r0, [r8, #-0]
   1071c:	01000041 	tsteq	r0, r1, asr #32
   10720:	71171a1d 	tstvc	r7, sp, lsl sl
   10724:	b1000006 	tstlt	r0, r6
   10728:	a10000b8 	strhge	r0, [r0, -r8]
   1072c:	180000b8 	stmdane	r0, {r3, r4, r5, r7}
   10730:	00003848 	andeq	r3, r0, r8, asr #16
   10734:	141a1e01 	ldrne	r1, [sl], #-3585	; 0xfffff1ff
   10738:	00000119 	andeq	r0, r0, r9, lsl r1
   1073c:	0000b91c 	andeq	fp, r0, ip, lsl r9
   10740:	0000b914 	andeq	fp, r0, r4, lsl r9
   10744:	00291e1c 	eoreq	r1, r9, ip, lsl lr
   10748:	00294e08 	eoreq	r4, r9, r8, lsl #28
   1074c:	00138e08 	andseq	r8, r3, r8, lsl #28
   10750:	28131800 	ldmdacs	r3, {fp, ip}
   10754:	4a010000 	bmi	5075c <_Min_Heap_Size+0x4ff5c>
   10758:	0391151a 	orrseq	r1, r1, #109051904	; 0x6800000
   1075c:	b9560000 	ldmdblt	r6, {}^	; <UNPREDICTABLE>
   10760:	b9540000 	ldmdblt	r4, {}^	; <UNPREDICTABLE>
   10764:	20000000 	andcs	r0, r0, r0
   10768:	08002908 	stmdaeq	r0, {r3, r8, fp, sp}
   1076c:	00003951 	andeq	r3, r0, r1, asr r9
   10770:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   10774:	00000075 	andeq	r0, r0, r5, ror r0
   10778:	30990121 	addscc	r0, r9, r1, lsr #2
   1077c:	b4010000 	strlt	r0, [r1], #-0
   10780:	19011019 	stmdbne	r1, {r0, r3, r4, ip}
   10784:	00000001 	andeq	r0, r0, r1
   10788:	00000000 	andeq	r0, r0, r0
   1078c:	69000000 	stmdbvs	r0, {}	; <UNPREDICTABLE>
   10790:	010000b9 	strheq	r0, [r0, -r9]
   10794:	00001432 	andeq	r1, r0, r2, lsr r4
   10798:	003d111b 	eorseq	r1, sp, fp, lsl r1
   1079c:	19b40100 	ldmibne	r4!, {r8}
   107a0:	0003b339 	andeq	fp, r3, r9, lsr r3
   107a4:	00b9b500 	adcseq	fp, r9, r0, lsl #10
   107a8:	00b9a100 	adcseq	sl, r9, r0, lsl #2
   107ac:	3e591800 	cdpcc	8, 5, cr1, cr9, cr0, {0}
   107b0:	b6010000 	strlt	r0, [r1], -r0
   107b4:	06711719 			; <UNDEFINED> instruction: 0x06711719
   107b8:	ba420000 	blt	10907c0 <_Min_Heap_Size+0x108ffc0>
   107bc:	ba2e0000 	blt	b907c4 <_Min_Heap_Size+0xb8ffc4>
   107c0:	48180000 	ldmdami	r8, {}	; <UNPREDICTABLE>
   107c4:	01000038 	tsteq	r0, r8, lsr r0
   107c8:	191419b7 	ldmdbne	r4, {r0, r1, r2, r4, r5, r7, r8, fp, ip}
   107cc:	c1000001 	tstgt	r0, r1
   107d0:	bb0000ba 	bllt	10ac0 <_Min_Heap_Size+0x102c0>
   107d4:	1c0000ba 	stcne	0, cr0, [r0], {186}	; 0xba
	...
   107e0:	00001421 	andeq	r1, r0, r1, lsr #8
   107e4:	00281318 	eoreq	r1, r8, r8, lsl r3
   107e8:	19e20100 	stmibne	r2!, {r8}^
   107ec:	00039115 	andeq	r9, r3, r5, lsl r1
   107f0:	00baef00 	adcseq	lr, sl, r0, lsl #30
   107f4:	00baed00 	adcseq	lr, sl, r0, lsl #26
   107f8:	00200000 	eoreq	r0, r0, r0
   107fc:	51000000 	mrspl	r0, (UNDEF: 0)
   10800:	1f000039 	svcne	0x00000039
   10804:	75025001 	strvc	r5, [r2, #-1]
   10808:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
   1080c:	000ac901 	andeq	ip, sl, r1, lsl #18
   10810:	198c0100 	stmibne	ip, {r8}
   10814:	01190110 	tsteq	r9, r0, lsl r1
   10818:	28c40000 	stmiacs	r4, {}^	; <UNPREDICTABLE>
   1081c:	28e40800 	stmiacs	r4!, {fp}^
   10820:	7d020800 	stcvc	8, cr0, [r2, #-0]
   10824:	14670100 	strbtne	r0, [r7], #-256	; 0xffffff00
   10828:	48180000 	ldmdami	r8, {}	; <UNPREDICTABLE>
   1082c:	01000038 	tsteq	r0, r8, lsr r0
   10830:	1914198e 	ldmdbne	r4, {r1, r2, r3, r7, r8, fp, ip}
   10834:	04000001 	streq	r0, [r0], #-1
   10838:	020000bb 	andeq	r0, r0, #187	; 0xbb
   1083c:	000000bb 	strheq	r0, [r0], -fp
   10840:	40580129 	subsmi	r0, r8, r9, lsr #2
   10844:	73010000 	movwvc	r0, #4096	; 0x1000
   10848:	a7011219 	smladge	r1, r9, r2, r1
   1084c:	00000003 	andeq	r0, r0, r3
   10850:	00000000 	andeq	r0, r0, r0
   10854:	02000000 	andeq	r0, r0, #0
   10858:	b101007d 	tstlt	r1, sp, ror r0
   1085c:	1b000014 	blne	108b4 <_Min_Heap_Size+0x100b4>
   10860:	0000325f 	andeq	r3, r0, pc, asr r2
   10864:	3f197301 	svccc	0x00197301
   10868:	00000119 	andeq	r0, r0, r9, lsl r1
   1086c:	0000bb20 	andeq	fp, r0, r0, lsr #22
   10870:	0000bb18 	andeq	fp, r0, r8, lsl fp
   10874:	00384818 	eorseq	r4, r8, r8, lsl r8
   10878:	19750100 	ldmdbne	r5!, {r8}^
   1087c:	0003a716 	andeq	sl, r3, r6, lsl r7
   10880:	00bb6000 	adcseq	r6, fp, r0
   10884:	00bb5a00 	adcseq	r5, fp, r0, lsl #20
   10888:	01290000 			; <UNDEFINED> instruction: 0x01290000
   1088c:	0000313b 	andeq	r3, r0, fp, lsr r1
   10890:	16195001 	ldrne	r5, [r9], -r1
   10894:	0003a701 	andeq	sl, r3, r1, lsl #14
	...
   108a0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
   108a4:	0014e601 	andseq	lr, r4, r1, lsl #12
   108a8:	38481800 	stmdacc	r8, {fp, ip}^
   108ac:	52010000 	andpl	r0, r1, #0
   108b0:	03a71a19 			; <UNDEFINED> instruction: 0x03a71a19
   108b4:	bb8d0000 	bllt	fe3508bc <_estack+0xde346f1c>
   108b8:	bb8b0000 	bllt	fe2d08c0 <_estack+0xde2c6f20>
   108bc:	2b000000 	blcs	108c4 <_Min_Heap_Size+0x100c4>
   108c0:	00003a33 	andeq	r3, r0, r3, lsr sl
   108c4:	0d193801 	ldceq	8, cr3, [r9, #-4]
   108c8:	001e9001 	andseq	r9, lr, r1
   108cc:	001eb808 	andseq	fp, lr, r8, lsl #16
   108d0:	007d0208 	rsbseq	r0, sp, r8, lsl #4
   108d4:	3f891a01 	svccc	0x00891a01
   108d8:	03010000 	movweq	r0, #4096	; 0x1000
   108dc:	36011119 			; <UNDEFINED> instruction: 0x36011119
   108e0:	5a080021 	bpl	21096c <_Min_Heap_Size+0x21016c>
   108e4:	a0080021 	andge	r0, r8, r1, lsr #32
   108e8:	010000bb 	strheq	r0, [r0, -fp]
   108ec:	00001553 	andeq	r1, r0, r3, asr r5
   108f0:	0041051b 	subeq	r0, r1, fp, lsl r5
   108f4:	19030100 	stmdbne	r3, {r8}
   108f8:	00066627 	andeq	r6, r6, r7, lsr #12
   108fc:	00bbcc00 	adcseq	ip, fp, r0, lsl #24
   10900:	00bbc000 	adcseq	ip, fp, r0
   10904:	214c1d00 	cmpcs	ip, r0, lsl #26
   10908:	398b0800 	stmibcc	fp, {fp}
   1090c:	521e0000 	andspl	r0, lr, #0
   10910:	8b080021 	blhi	21099c <_Min_Heap_Size+0x21019c>
   10914:	49000039 	stmdbmi	r0, {r0, r3, r4, r5}
   10918:	1f000015 	svcne	0x00000015
   1091c:	74025001 	strvc	r5, [r2], #-1
   10920:	581d0000 	ldmdapl	sp, {}	; <UNPREDICTABLE>
   10924:	8b080021 	blhi	2109b0 <_Min_Heap_Size+0x2101b0>
   10928:	00000039 	andeq	r0, r0, r9, lsr r0
   1092c:	36f00121 	ldrbtcc	r0, [r0], r1, lsr #2
   10930:	e3010000 	movw	r0, #4096	; 0x1000
   10934:	2f011118 	svccs	0x00011118
   10938:	00000001 	andeq	r0, r0, r1
   1093c:	00000000 	andeq	r0, r0, r0
   10940:	16000000 	strne	r0, [r0], -r0
   10944:	010000bc 	strheq	r0, [r0, -ip]
   10948:	000015d1 	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
   1094c:	003b7a1b 	eorseq	r7, fp, fp, lsl sl
   10950:	18e30100 	stmiane	r3!, {r8}^
   10954:	0003a73b 	andeq	sl, r3, fp, lsr r7
   10958:	00bc3a00 	adcseq	r3, ip, r0, lsl #20
   1095c:	00bc3600 	adcseq	r3, ip, r0, lsl #12
   10960:	41051800 	tstmi	r5, r0, lsl #16
   10964:	e5010000 	str	r0, [r1, #-0]
   10968:	06661118 			; <UNDEFINED> instruction: 0x06661118
   1096c:	bc5a0000 	mralt	r0, sl, acc0
   10970:	bc580000 	mralt	r0, r8, acc0
   10974:	4b180000 	blmi	61097c <_Min_Heap_Size+0x61017c>
   10978:	0100003e 	tsteq	r0, lr, lsr r0
   1097c:	601318e6 	andsvs	r1, r3, r6, ror #17
   10980:	6f000001 	svcvs	0x00000001
   10984:	6d0000bc 	stcvs	0, cr0, [r0, #-752]	; 0xfffffd10
   10988:	180000bc 	stmdane	r0, {r2, r3, r4, r5, r7}
   1098c:	00002a25 	andeq	r2, r0, r5, lsr #20
   10990:	1518e701 	ldrne	lr, [r8, #-1793]	; 0xfffff8ff
   10994:	0000012f 	andeq	r0, r0, pc, lsr #2
   10998:	0000bc85 	andeq	fp, r0, r5, lsl #25
   1099c:	0000bc83 	andeq	fp, r0, r3, lsl #25
   109a0:	0000001d 	andeq	r0, r0, sp, lsl r0
   109a4:	0015d100 	andseq	sp, r5, r0, lsl #2
   109a8:	e52c0000 	str	r0, [ip, #-0]!
   109ac:	0100003f 	tsteq	r0, pc, lsr r0
   109b0:	012318a3 			; <UNDEFINED> instruction: 0x012318a3
   109b4:	00000029 	andeq	r0, r0, r9, lsr #32
	...
   109c0:	01007d02 	tsteq	r0, r2, lsl #26
   109c4:	0000161a 	andeq	r1, r0, sl, lsl r6
   109c8:	00347c1b 	eorseq	r7, r4, fp, lsl ip
   109cc:	18a30100 	stmiane	r3!, {r8}
   109d0:	00161a4f 	andseq	r1, r6, pc, asr #20
   109d4:	00bc9c00 	adcseq	r9, ip, r0, lsl #24
   109d8:	00bc9800 	adcseq	r9, ip, r0, lsl #16
   109dc:	3e2c1800 	cdpcc	8, 2, cr1, cr12, cr0, {0}
   109e0:	a5010000 	strge	r0, [r1, #-0]
   109e4:	00292018 	eoreq	r2, r9, r8, lsl r0
   109e8:	bcc20000 	stcllt	0, cr0, [r2], {0}
   109ec:	bcba0000 	ldclt	0, cr0, [sl]
   109f0:	07000000 	streq	r0, [r0, -r0]
   109f4:	0000d404 	andeq	sp, r0, r4, lsl #8
   109f8:	41e11a00 	mvnmi	r1, r0, lsl #20
   109fc:	9b010000 	blls	50a04 <_Min_Heap_Size+0x50204>
   10a00:	5c010d17 	stcpl	13, cr0, [r1], {23}
   10a04:	a8080021 	stmdage	r8, {r0, r5}
   10a08:	fb080021 	blx	210a96 <_Min_Heap_Size+0x210296>
   10a0c:	010000bc 	strheq	r0, [r0, -ip]
   10a10:	0000168d 	andeq	r1, r0, sp, lsl #13
   10a14:	0009702d 	andeq	r7, r9, sp, lsr #32
   10a18:	41051800 	tstmi	r5, r0, lsl #16
   10a1c:	a1010000 	mrsge	r0, (UNDEF: 1)
   10a20:	06661117 			; <UNDEFINED> instruction: 0x06661117
   10a24:	bd290000 	stclt	0, cr0, [r9, #-0]
   10a28:	bd270000 	stclt	0, cr0, [r7, #-0]
   10a2c:	681d0000 	ldmdavs	sp, {}	; <UNPREDICTABLE>
   10a30:	6f080021 	svcvs	0x00080021
   10a34:	1e000039 	mcrne	0, 0, r0, cr0, cr9, {1}
   10a38:	08002174 	stmdaeq	r0, {r2, r4, r5, r6, r8, sp}
   10a3c:	00003951 	andeq	r3, r0, r1, asr r9
   10a40:	00001672 	andeq	r1, r0, r2, ror r6
   10a44:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   10a48:	1d000474 	cfstrsne	mvf0, [r0, #-464]	; 0xfffffe30
   10a4c:	08002188 	stmdaeq	r0, {r3, r7, r8, sp}
   10a50:	0000397d 	andeq	r3, r0, sp, ror r9
   10a54:	00218e20 	eoreq	r8, r1, r0, lsr #28
   10a58:	0014fc08 	andseq	pc, r4, r8, lsl #24
   10a5c:	50011f00 	andpl	r1, r1, r0, lsl #30
   10a60:	00007402 	andeq	r7, r0, r2, lsl #8
   10a64:	911a0000 	tstls	sl, r0
   10a68:	01000041 	tsteq	r0, r1, asr #32
   10a6c:	010d177b 	tsteq	sp, fp, ror r7
   10a70:	08001fa0 	stmdaeq	r0, {r5, r7, r8, r9, sl, fp, ip}
   10a74:	08002008 	stmdaeq	r0, {r3, sp}
   10a78:	0000bd3c 	andeq	fp, r0, ip, lsr sp
   10a7c:	00174801 	andseq	r4, r7, r1, lsl #16
   10a80:	32bc1800 	adcscc	r1, ip, #0, 16
   10a84:	7d010000 	stcvc	0, cr0, [r1, #-0]
   10a88:	012f1117 			; <UNDEFINED> instruction: 0x012f1117
   10a8c:	bd600000 	stcllt	0, cr0, [r0, #-0]
   10a90:	bd5c0000 	ldcllt	0, cr0, [ip, #-0]
   10a94:	b41e0000 	ldrlt	r0, [lr], #-0
   10a98:	9908001f 	stmdbls	r8, {r0, r1, r2, r3, r4}
   10a9c:	de000039 	mcrle	0, 0, r0, cr0, cr9, {1}
   10aa0:	1f000016 	svcne	0x00000016
   10aa4:	740f5001 	strvc	r5, [pc], #-1	; 10aac <_Min_Heap_Size+0x102ac>
   10aa8:	74243300 	strtvc	r3, [r4], #-768	; 0xfffffd00
   10aac:	24321c00 	ldrtcs	r1, [r2], #-3072	; 0xfffff400
   10ab0:	00823803 	addeq	r3, r2, r3, lsl #16
   10ab4:	1e002220 	cdpne	2, 0, cr2, cr0, cr0, {1}
   10ab8:	08001fc2 	stmdaeq	r0, {r1, r6, r7, r8, r9, sl, fp, ip}
   10abc:	00003999 	muleq	r0, r9, r9
   10ac0:	000016f2 	strdeq	r1, [r0], -r2
   10ac4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   10ac8:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
   10acc:	08001fca 	stmdaeq	r0, {r1, r3, r6, r7, r8, r9, sl, fp, ip}
   10ad0:	00003999 	muleq	r0, r9, r9
   10ad4:	00001706 	andeq	r1, r0, r6, lsl #14
   10ad8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   10adc:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
   10ae0:	08001fd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, fp, ip}
   10ae4:	00003999 	muleq	r0, r9, r9
   10ae8:	0000171d 	andeq	r1, r0, sp, lsl r7
   10aec:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
   10af0:	00876c03 	addeq	r6, r7, r3, lsl #24
   10af4:	d61e0020 	ldrle	r0, [lr], -r0, lsr #32
   10af8:	9908001f 	stmdbls	r8, {r0, r1, r2, r3, r4}
   10afc:	34000039 	strcc	r0, [r0], #-57	; 0xffffffc7
   10b00:	1f000017 	svcne	0x00000017
   10b04:	03055001 	movweq	r5, #20481	; 0x5001
   10b08:	200087a8 	andcs	r8, r0, r8, lsr #15
   10b0c:	1fdc2000 	svcne	0x00dc2000
   10b10:	39990800 	ldmibcc	r9, {fp}
   10b14:	011f0000 	tsteq	pc, r0
   10b18:	8c030550 	cfstr32hi	mvfx0, [r3], {80}	; 0x50
   10b1c:	00200087 	eoreq	r0, r0, r7, lsl #1
   10b20:	1b012900 	blne	5af28 <_Min_Heap_Size+0x5a728>
   10b24:	01000038 	tsteq	r0, r8, lsr r0
   10b28:	011616fc 			; <UNDEFINED> instruction: 0x011616fc
   10b2c:	000005e7 	andeq	r0, r0, r7, ror #11
   10b30:	0800287c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, sp}
   10b34:	080028c4 	stmdaeq	r0, {r2, r6, r7, fp, sp}
   10b38:	01007d02 	tsteq	r0, r2, lsl #26
   10b3c:	0000178b 	andeq	r1, r0, fp, lsl #15
   10b40:	0040382a 	subeq	r3, r0, sl, lsr #16
   10b44:	17000100 	strne	r0, [r0, -r0, lsl #2]
   10b48:	0001451f 	andeq	r4, r1, pc, lsl r5
   10b4c:	f6180100 			; <UNDEFINED> instruction: 0xf6180100
   10b50:	01000034 	tsteq	r0, r4, lsr r0
   10b54:	e71a1703 	ldr	r1, [sl, -r3, lsl #14]
   10b58:	83000005 	movwhi	r0, #5
   10b5c:	7f0000bd 	svcvc	0x000000bd
   10b60:	000000bd 	strheq	r0, [r0], -sp
   10b64:	0038be1a 	eorseq	fp, r8, sl, lsl lr
   10b68:	16740100 	ldrbtne	r0, [r4], -r0, lsl #2
   10b6c:	25d40108 	ldrbcs	r0, [r4, #264]	; 0x108
   10b70:	261c0800 	ldrcs	r0, [ip], -r0, lsl #16
   10b74:	bda20800 	stclt	8, cr0, [r2]
   10b78:	11010000 	mrsne	r0, (UNDEF: 1)
   10b7c:	1b000018 	blne	10be4 <_Min_Heap_Size+0x103e4>
   10b80:	00003ca9 	andeq	r3, r0, r9, lsr #25
   10b84:	08167401 	ldmdaeq	r6, {r0, sl, ip, sp, lr}
   10b88:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
   10b8c:	0000bdc6 	andeq	fp, r0, r6, asr #27
   10b90:	0000bdc2 	andeq	fp, r0, r2, asr #27
   10b94:	000ab023 	andeq	fp, sl, r3, lsr #32
   10b98:	00180700 	andseq	r0, r8, r0, lsl #14
   10b9c:	33fe1800 	mvnscc	r1, #0, 16
   10ba0:	bd010000 	stclt	0, cr0, [r1, #-0]
   10ba4:	014a1816 	cmpeq	sl, r6, lsl r8
   10ba8:	bded0000 	stcllt	0, cr0, [sp]
   10bac:	bde70000 	stcllt	0, cr0, [r7]
   10bb0:	f01d0000 			; <UNDEFINED> instruction: 0xf01d0000
   10bb4:	60080025 	andvs	r0, r8, r5, lsr #32
   10bb8:	1d000026 	stcne	0, cr0, [r0, #-152]	; 0xffffff68
   10bbc:	08002606 	stmdaeq	r0, {r1, r2, r9, sl, sp}
   10bc0:	000026a9 	andeq	r2, r0, r9, lsr #13
   10bc4:	00260a1d 	eoreq	r0, r6, sp, lsl sl
   10bc8:	00266008 	eoreq	r6, r6, r8
   10bcc:	26121d00 	ldrcs	r1, [r2], -r0, lsl #26
   10bd0:	39a80800 	stmibcc	r8!, {fp}
   10bd4:	161d0000 	ldrne	r0, [sp], -r0
   10bd8:	59080026 	stmdbpl	r8, {r1, r2, r5}
   10bdc:	00000025 	andeq	r0, r0, r5, lsr #32
   10be0:	0025f81d 	eoreq	pc, r5, sp, lsl r8	; <UNPREDICTABLE>
   10be4:	00162008 	andseq	r2, r6, r8
   10be8:	012e0000 			; <UNDEFINED> instruction: 0x012e0000
   10bec:	00003088 	andeq	r3, r0, r8, lsl #1
   10bf0:	0615e301 	ldreq	lr, [r5], -r1, lsl #6
   10bf4:	00287001 	eoreq	r7, r8, r1
   10bf8:	00287c08 	eoreq	r7, r8, r8, lsl #24
   10bfc:	007d0208 	rsbseq	r0, sp, r8, lsl #4
   10c00:	fe012101 	cdp2	1, 0, cr2, cr1, cr1, {0}
   10c04:	0100002f 	tsteq	r0, pc, lsr #32
   10c08:	010c159e 			; <UNDEFINED> instruction: 0x010c159e
   10c0c:	00000119 	andeq	r0, r0, r9, lsl r1
   10c10:	080027f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, sp}
   10c14:	08002870 	stmdaeq	r0, {r4, r5, r6, fp, sp}
   10c18:	0000be16 	andeq	fp, r0, r6, lsl lr
   10c1c:	0018de01 	andseq	sp, r8, r1, lsl #28
   10c20:	3a891b00 	bcc	fe257828 <_estack+0xde24de88>
   10c24:	9e010000 	cdpls	0, 0, cr0, cr1, cr0, {0}
   10c28:	18e43415 	stmiane	r4!, {r0, r2, r4, sl, ip, sp}^
   10c2c:	be4c0000 	cdplt	0, 4, cr0, cr12, cr0, {0}
   10c30:	be360000 	cdplt	0, 3, cr0, cr6, cr0, {0}
   10c34:	391b0000 	ldmdbcc	fp, {}	; <UNPREDICTABLE>
   10c38:	0100003f 	tsteq	r0, pc, lsr r0
   10c3c:	ef35159f 	svc	0x0035159f
   10c40:	e0000018 	and	r0, r0, r8, lsl r0
   10c44:	dc0000be 	stcle	0, cr0, [r0], {190}	; 0xbe
   10c48:	180000be 	stmdane	r0, {r1, r2, r3, r4, r5, r7}
   10c4c:	00003848 	andeq	r3, r0, r8, asr #16
   10c50:	1015a101 	andsne	sl, r5, r1, lsl #2
   10c54:	00000119 	andeq	r0, r0, r9, lsl r1
   10c58:	0000bf08 	andeq	fp, r0, r8, lsl #30
   10c5c:	0000befe 	strdeq	fp, [r0], -lr
   10c60:	000b8823 	andeq	r8, fp, r3, lsr #16
   10c64:	0018cb00 	andseq	ip, r8, r0, lsl #22
   10c68:	37a61800 	strcc	r1, [r6, r0, lsl #16]!
   10c6c:	ab010000 	blge	50c74 <_Min_Heap_Size+0x50474>
   10c70:	015b1a15 	cmpeq	fp, r5, lsl sl
   10c74:	bf510000 	svclt	0x00510000
   10c78:	bf4b0000 	svclt	0x004b0000
   10c7c:	fc180000 	ldc2	0, cr0, [r8], {-0}
   10c80:	01000035 	tsteq	r0, r5, lsr r0
   10c84:	5b1a15ac 	blpl	69633c <_Min_Heap_Size+0x695b3c>
   10c88:	80000001 	andhi	r0, r0, r1
   10c8c:	7a0000bf 	bvc	10f90 <_Min_Heap_Size+0x10790>
   10c90:	200000bf 	strhcs	r0, [r0], -pc	; <UNPREDICTABLE>
   10c94:	0800285a 	stmdaeq	r0, {r1, r3, r4, r6, fp, sp}
   10c98:	000018f4 	strdeq	r1, [r0], -r4
   10c9c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   10ca0:	00000074 	andeq	r0, r0, r4, ror r0
   10ca4:	0027fe1d 	eoreq	pc, r7, sp, lsl lr	; <UNPREDICTABLE>
   10ca8:	00396f08 	eorseq	r6, r9, r8, lsl #30
   10cac:	28201d00 	stmdacs	r0!, {r8, sl, fp, ip}
   10cb0:	397d0800 	ldmdbcc	sp!, {fp}^
   10cb4:	07000000 	streq	r0, [r0, -r0]
   10cb8:	00056304 	andeq	r6, r5, r4, lsl #6
   10cbc:	18de0300 	ldmne	lr, {r8, r9}^
   10cc0:	04070000 	streq	r0, [r7], #-0
   10cc4:	0000014a 	andeq	r0, r0, sl, asr #2
   10cc8:	0018e903 	andseq	lr, r8, r3, lsl #18
   10ccc:	70011700 	andvc	r1, r1, r0, lsl #14
   10cd0:	0100002e 	tsteq	r0, lr, lsr #32
   10cd4:	01061592 			; <UNDEFINED> instruction: 0x01061592
   10cd8:	080027dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, sp}
   10cdc:	080027f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, sp}
   10ce0:	01007d02 	tsteq	r0, r2, lsl #26
   10ce4:	0000191f 	andeq	r1, r0, pc, lsl r9
   10ce8:	003a8919 	eorseq	r8, sl, r9, lsl r9
   10cec:	15920100 	ldrne	r0, [r2, #256]	; 0x100
   10cf0:	0018e436 	andseq	lr, r8, r6, lsr r4
   10cf4:	00500100 	subseq	r0, r0, r0, lsl #2
   10cf8:	343e0122 	ldrtcc	r0, [lr], #-290	; 0xfffffede
   10cfc:	82010000 	andhi	r0, r1, #0
   10d00:	00010615 	andeq	r0, r1, r5, lsl r6
   10d04:	00000000 	andeq	r0, r0, r0
   10d08:	a9000000 	stmdbge	r0, {}	; <UNPREDICTABLE>
   10d0c:	010000bf 	strheq	r0, [r0, -pc]
   10d10:	00001963 	andeq	r1, r0, r3, ror #18
   10d14:	003a891b 	eorseq	r8, sl, fp, lsl r9
   10d18:	15820100 	strne	r0, [r2, #256]	; 0x100
   10d1c:	0018e42e 	andseq	lr, r8, lr, lsr #8
   10d20:	00bfcf00 	adcseq	ip, pc, r0, lsl #30
   10d24:	00bfc900 	adcseq	ip, pc, r0, lsl #18
   10d28:	00001d00 	andeq	r1, r0, r0, lsl #26
   10d2c:	396f0000 	stmdbcc	pc!, {}^	; <UNPREDICTABLE>
   10d30:	001d0000 	andseq	r0, sp, r0
   10d34:	7d000000 	stcvc	0, cr0, [r0, #-0]
   10d38:	00000039 	andeq	r0, r0, r9, lsr r0
   10d3c:	38500122 	ldmdacc	r0, {r1, r5, r8}^
   10d40:	3a010000 	bcc	50d48 <_Min_Heap_Size+0x50548>
   10d44:	00010615 	andeq	r0, r1, r5, lsl r6
   10d48:	00000000 	andeq	r0, r0, r0
   10d4c:	fb000000 	blx	10d56 <_Min_Heap_Size+0x10556>
   10d50:	010000bf 	strheq	r0, [r0, -pc]
   10d54:	00001a29 	andeq	r1, r0, r9, lsr #20
   10d58:	003fbc1b 	eorseq	fp, pc, fp, lsl ip	; <UNPREDICTABLE>
   10d5c:	153a0100 	ldrne	r0, [sl, #-256]!	; 0xffffff00
   10d60:	00038b36 	andeq	r8, r3, r6, lsr fp
   10d64:	00c02300 	sbceq	r2, r0, r0, lsl #6
   10d68:	00c01b00 	sbceq	r1, r0, r0, lsl #22
   10d6c:	27631b00 	strbcs	r1, [r3, -r0, lsl #22]!
   10d70:	3b010000 	blcc	50d78 <_Min_Heap_Size+0x50578>
   10d74:	015b3a15 	cmpeq	fp, r5, lsl sl
   10d78:	c0610000 	rsbgt	r0, r1, r0
   10d7c:	c05d0000 	subsgt	r0, sp, r0
   10d80:	cd180000 	ldcgt	0, cr0, [r8, #-0]
   10d84:	01000035 	tsteq	r0, r5, lsr r0
   10d88:	660d153d 			; <UNDEFINED> instruction: 0x660d153d
   10d8c:	84000006 	strhi	r0, [r0], #-6
   10d90:	820000c0 	andhi	r0, r0, #192	; 0xc0
   10d94:	230000c0 	movwcs	r0, #192	; 0xc0
   10d98:	00000b58 	andeq	r0, r0, r8, asr fp
   10d9c:	000019dd 	ldrdeq	r1, [r0], -sp
   10da0:	00284718 	eoreq	r4, r8, r8, lsl r7
   10da4:	154f0100 	strbne	r0, [pc, #-256]	; 10cac <_Min_Heap_Size+0x104ac>
   10da8:	0006dd05 	andeq	sp, r6, r5, lsl #26
   10dac:	00c09b00 	sbceq	r9, r0, r0, lsl #22
   10db0:	00c09700 	sbceq	r9, r0, r0, lsl #14
   10db4:	70230000 	eorvc	r0, r3, r0
   10db8:	fc00000b 	stc2	0, cr0, [r0], {11}
   10dbc:	18000019 	stmdane	r0, {r0, r3, r4}
   10dc0:	00002847 	andeq	r2, r0, r7, asr #16
   10dc4:	05156201 	ldreq	r6, [r5, #-513]	; 0xfffffdff
   10dc8:	000006dd 	ldrdeq	r0, [r0], -sp
   10dcc:	0000c0bd 	strheq	ip, [r0], -sp
   10dd0:	0000c0b9 	strheq	ip, [r0], -r9
   10dd4:	00001c00 	andeq	r1, r0, r0, lsl #24
   10dd8:	00000000 	andeq	r0, r0, r0
   10ddc:	1a1f0000 	bne	7d0de4 <_Min_Heap_Size+0x7d05e4>
   10de0:	13180000 	tstne	r8, #0
   10de4:	01000028 	tsteq	r0, r8, lsr #32
   10de8:	91051563 	tstls	r5, r3, ror #10
   10dec:	dd000003 	stcle	0, cr0, [r0, #-12]
   10df0:	db0000c0 	blle	110f8 <_Min_Heap_Size+0x108f8>
   10df4:	000000c0 	andeq	r0, r0, r0, asr #1
   10df8:	0000001d 	andeq	r0, r0, sp, lsl r0
   10dfc:	0014e600 	andseq	lr, r4, r0, lsl #12
   10e00:	01210000 			; <UNDEFINED> instruction: 0x01210000
   10e04:	0000320e 	andeq	r3, r0, lr, lsl #4
   10e08:	0c14dd01 	ldceq	13, cr13, [r4], {1}
   10e0c:	00011901 	andeq	r1, r1, r1, lsl #18
   10e10:	0026f800 	eoreq	pc, r6, r0, lsl #16
   10e14:	0027dc08 	eoreq	sp, r7, r8, lsl #24
   10e18:	00c0f008 	sbceq	pc, r0, r8
   10e1c:	1b160100 	blne	591224 <_Min_Heap_Size+0x590a24>
   10e20:	741b0000 	ldrvc	r0, [fp], #-0
   10e24:	01000033 	tsteq	r0, r3, lsr r0
   10e28:	1c3b14dd 	cfldrsne	mvf1, [fp], #-884	; 0xfffffc8c
   10e2c:	1800001b 	stmdane	r0, {r0, r1, r3, r4}
   10e30:	100000c1 	andne	r0, r0, r1, asr #1
   10e34:	180000c1 	stmdane	r0, {r0, r6, r7}
   10e38:	000035cd 	andeq	r3, r0, sp, asr #11
   10e3c:	0d14df01 	ldceq	15, cr13, [r4, #-4]
   10e40:	00000666 	andeq	r0, r0, r6, ror #12
   10e44:	0000c154 	andeq	ip, r0, r4, asr r1
   10e48:	0000c152 	andeq	ip, r0, r2, asr r1
   10e4c:	00384818 	eorseq	r4, r8, r8, lsl r8
   10e50:	14e00100 	strbtne	r0, [r0], #256	; 0x100
   10e54:	00011910 	andeq	r1, r1, r0, lsl r9
   10e58:	00c16b00 	sbceq	r6, r1, r0, lsl #22
   10e5c:	00c16700 	sbceq	r6, r1, r0, lsl #14
   10e60:	0b282300 	bleq	a19a68 <_Min_Heap_Size+0xa19268>
   10e64:	1aa70000 	bne	fe9d0e6c <_estack+0xde9c74cc>
   10e68:	47180000 	ldrmi	r0, [r8, -r0]
   10e6c:	01000028 	tsteq	r0, r8, lsr #32
   10e70:	dd0514f6 	cfstrsle	mvf1, [r5, #-984]	; 0xfffffc28
   10e74:	8f000006 	svchi	0x00000006
   10e78:	8b0000c1 	blhi	11184 <_Min_Heap_Size+0x10984>
   10e7c:	000000c1 	andeq	r0, r0, r1, asr #1
   10e80:	000b4023 	andeq	r4, fp, r3, lsr #32
   10e84:	001ac600 	andseq	ip, sl, r0, lsl #12
   10e88:	28471800 	stmdacs	r7, {fp, ip}^
   10e8c:	fa010000 	blx	50e94 <_Min_Heap_Size+0x50694>
   10e90:	06dd0914 			; <UNDEFINED> instruction: 0x06dd0914
   10e94:	c1b10000 			; <UNDEFINED> instruction: 0xc1b10000
   10e98:	c1ad0000 			; <UNDEFINED> instruction: 0xc1ad0000
   10e9c:	1c000000 	stcne	0, cr0, [r0], {-0}
   10ea0:	08002752 	stmdaeq	r0, {r1, r4, r6, r8, r9, sl, sp}
   10ea4:	08002782 	stmdaeq	r0, {r1, r7, r8, r9, sl, sp}
   10ea8:	00001ae9 	andeq	r1, r0, r9, ror #21
   10eac:	00281318 	eoreq	r1, r8, r8, lsl r3
   10eb0:	14fb0100 	ldrbtne	r0, [fp], #256	; 0x100
   10eb4:	00039109 	andeq	r9, r3, r9, lsl #2
   10eb8:	00c1d100 	sbceq	sp, r1, r0, lsl #2
   10ebc:	00c1cf00 	sbceq	ip, r1, r0, lsl #30
   10ec0:	a61c0000 	ldrge	r0, [ip], -r0
   10ec4:	be080027 	cdplt	0, 0, cr0, cr8, cr7, {1}
   10ec8:	0c080027 	stceq	0, cr0, [r8], {39}	; 0x27
   10ecc:	1800001b 	stmdane	r0, {r0, r1, r3, r4}
   10ed0:	00002813 	andeq	r2, r0, r3, lsl r8
   10ed4:	09150f01 	ldmdbeq	r5, {r0, r8, r9, sl, fp}
   10ed8:	00000391 	muleq	r0, r1, r3
   10edc:	0000c1e6 	andeq	ip, r0, r6, ror #3
   10ee0:	0000c1e4 	andeq	ip, r0, r4, ror #3
   10ee4:	27861d00 	strcs	r1, [r6, r0, lsl #26]
   10ee8:	14e60800 	strbtne	r0, [r6], #2048	; 0x800
   10eec:	07000000 	streq	r0, [r0, -r0]
   10ef0:	0003a204 	andeq	sl, r3, r4, lsl #4
   10ef4:	1b160300 	blne	591afc <_Min_Heap_Size+0x5912fc>
   10ef8:	01220000 			; <UNDEFINED> instruction: 0x01220000
   10efc:	00002d63 	andeq	r2, r0, r3, ror #26
   10f00:	0a14b801 	beq	53ef0c <_Min_Heap_Size+0x53e70c>
   10f04:	0026bc01 	eoreq	fp, r6, r1, lsl #24
   10f08:	0026f808 	eoreq	pc, r6, r8, lsl #16
   10f0c:	00c1f908 	sbceq	pc, r1, r8, lsl #18
   10f10:	1ba90100 	blne	fea51318 <_estack+0xdea47978>
   10f14:	741b0000 	ldrvc	r0, [fp], #-0
   10f18:	01000033 	tsteq	r0, r3, lsr r0
   10f1c:	dd3a14b8 	cfldrsle	mvf1, [sl, #-736]!	; 0xfffffd20
   10f20:	1f000006 	svcne	0x00000006
   10f24:	190000c2 	stmdbne	r0, {r1, r6, r7}
   10f28:	1b0000c2 	blne	11238 <_Min_Heap_Size+0x10a38>
   10f2c:	00003f3a 	andeq	r3, r0, sl, lsr pc
   10f30:	3614b901 	ldrcc	fp, [r4], -r1, lsl #18
   10f34:	0000014a 	andeq	r0, r0, sl, asr #2
   10f38:	0000c24f 	andeq	ip, r0, pc, asr #4
   10f3c:	0000c24b 	andeq	ip, r0, fp, asr #4
   10f40:	00299f1b 	eoreq	r9, r9, fp, lsl pc
   10f44:	14ba0100 	ldrtne	r0, [sl], #256	; 0x100
   10f48:	00012a3c 	andeq	r2, r1, ip, lsr sl
   10f4c:	00c27100 	sbceq	r7, r2, r0, lsl #2
   10f50:	00c26d00 	sbceq	r6, r2, r0, lsl #26
   10f54:	26c21c00 	strbcs	r1, [r2], r0, lsl #24
   10f58:	26e60800 	strbtcs	r0, [r6], r0, lsl #16
   10f5c:	1b9f0800 	blne	fe7d2f64 <_estack+0xde7c95c4>
   10f60:	13180000 	tstne	r8, #0
   10f64:	01000028 	tsteq	r0, r8, lsr #32
   10f68:	910914ca 	smlabtls	r9, sl, r4, r1
   10f6c:	94000003 	strls	r0, [r0], #-3
   10f70:	920000c2 	andls	r0, r0, #194	; 0xc2
   10f74:	000000c2 	andeq	r0, r0, r2, asr #1
   10f78:	0026f21d 	eoreq	pc, r6, sp, lsl r2	; <UNPREDICTABLE>
   10f7c:	00098608 	andeq	r8, r9, r8, lsl #12
   10f80:	01220000 			; <UNDEFINED> instruction: 0x01220000
   10f84:	00003272 	andeq	r3, r0, r2, ror r2
   10f88:	06149801 	ldreq	r9, [r4], -r1, lsl #16
   10f8c:	00000001 	andeq	r0, r0, r1
   10f90:	00000000 	andeq	r0, r0, r0
   10f94:	00c2a700 	sbceq	sl, r2, r0, lsl #14
   10f98:	1c3e0100 	ldfnes	f0, [lr], #-0
   10f9c:	741b0000 	ldrvc	r0, [fp], #-0
   10fa0:	01000033 	tsteq	r0, r3, lsr r0
   10fa4:	d22f1498 	eorle	r1, pc, #152, 8	; 0x98000000
   10fa8:	cd000006 	stcgt	0, cr0, [r0, #-24]	; 0xffffffe8
   10fac:	c70000c2 	strgt	r0, [r0, -r2, asr #1]
   10fb0:	1b0000c2 	blne	112c0 <_Min_Heap_Size+0x10ac0>
   10fb4:	00002763 	andeq	r2, r0, r3, ror #14
   10fb8:	37149901 	ldrcc	r9, [r4, -r1, lsl #18]
   10fbc:	0000015b 	andeq	r0, r0, fp, asr r1
   10fc0:	0000c2fd 	strdeq	ip, [r0], -sp
   10fc4:	0000c2f9 	strdeq	ip, [r0], -r9
   10fc8:	003f3a1b 	eorseq	r3, pc, fp, lsl sl	; <UNPREDICTABLE>
   10fcc:	149a0100 	ldrne	r0, [sl], #256	; 0x100
   10fd0:	00015b37 	andeq	r5, r1, r7, lsr fp
   10fd4:	00c32200 	sbceq	r2, r3, r0, lsl #4
   10fd8:	00c31e00 	sbceq	r1, r3, r0, lsl #28
   10fdc:	00001c00 	andeq	r1, r0, r0, lsl #24
   10fe0:	00000000 	andeq	r0, r0, r0
   10fe4:	1c270000 	stcne	0, cr0, [r7], #-0
   10fe8:	13180000 	tstne	r8, #0
   10fec:	01000028 	tsteq	r0, r8, lsr #32
   10ff0:	910514ae 	smlatbls	r5, lr, r4, r1
   10ff4:	45000003 	strmi	r0, [r0, #-3]
   10ff8:	430000c3 	movwmi	r0, #195	; 0xc3
   10ffc:	000000c3 	andeq	r0, r0, r3, asr #1
   11000:	00000020 	andeq	r0, r0, r0, lsr #32
   11004:	00098600 	andeq	r8, r9, r0, lsl #12
   11008:	50011f00 	andpl	r1, r1, r0, lsl #30
   1100c:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
   11010:	0151011f 	cmpeq	r1, pc, lsl r1
   11014:	22000031 	andcs	r0, r0, #49	; 0x31
   11018:	002c5001 	eoreq	r5, ip, r1
   1101c:	147b0100 	ldrbtne	r0, [fp], #-256	; 0xffffff00
   11020:	26a00106 	strtcs	r0, [r0], r6, lsl #2
   11024:	26bc0800 	ldrtcs	r0, [ip], r0, lsl #16
   11028:	c3580800 	cmpgt	r8, #0, 16
   1102c:	af010000 	svcge	0x00010000
   11030:	1b00001c 	blne	110a8 <_Min_Heap_Size+0x108a8>
   11034:	00003374 	andeq	r3, r0, r4, ror r3
   11038:	2c147b01 			; <UNDEFINED> instruction: 0x2c147b01
   1103c:	000006dd 	ldrdeq	r0, [r0], -sp
   11040:	0000c37c 	andeq	ip, r0, ip, ror r3
   11044:	0000c378 	andeq	ip, r0, r8, ror r3
   11048:	003f3a1b 	eorseq	r3, pc, fp, lsl sl	; <UNPREDICTABLE>
   1104c:	147c0100 	ldrbtne	r0, [ip], #-256	; 0xffffff00
   11050:	00015b2e 	andeq	r5, r1, lr, lsr #22
   11054:	00c3a300 	sbceq	sl, r3, r0, lsl #6
   11058:	00c39d00 	sbceq	r9, r3, r0, lsl #26
   1105c:	26ae1e00 	strtcs	r1, [lr], r0, lsl #28
   11060:	39600800 	stmdbcc	r0!, {fp}^
   11064:	1c990000 	ldcne	0, cr0, [r9], {0}
   11068:	011f0000 	tsteq	pc, r0
   1106c:	01f30350 	mvnseq	r0, r0, asr r3
   11070:	b6200050 			; <UNDEFINED> instruction: 0xb6200050
   11074:	86080026 	strhi	r0, [r8], -r6, lsr #32
   11078:	1f000009 	svcne	0x00000009
   1107c:	74025001 	strvc	r5, [r2], #-1
   11080:	51011f00 	tstpl	r1, r0, lsl #30
   11084:	00003101 	andeq	r3, r0, r1, lsl #2
   11088:	3c050117 	stfccs	f0, [r5], {23}
   1108c:	c0010000 	andgt	r0, r1, r0
   11090:	1c010a13 			; <UNDEFINED> instruction: 0x1c010a13
   11094:	a0080026 	andge	r0, r8, r6, lsr #32
   11098:	02080026 	andeq	r0, r8, #38	; 0x26
   1109c:	0101007d 	tsteq	r1, sp, ror r0
   110a0:	2d00001d 	stccs	0, cr0, [r0, #-116]	; 0xffffff8c
   110a4:	00000ac8 	andeq	r0, r0, r8, asr #21
   110a8:	003f5018 	eorseq	r5, pc, r8, lsl r0	; <UNPREDICTABLE>
   110ac:	13fa0100 	mvnsne	r0, #0, 2
   110b0:	00012f0d 	andeq	r2, r1, sp, lsl #30
   110b4:	00c3d500 	sbceq	sp, r3, r0, lsl #10
   110b8:	00c3cf00 	sbceq	ip, r3, r0, lsl #30
   110bc:	0ae02d00 	beq	ff81c4c4 <_estack+0xdf812b24>
   110c0:	c7180000 	ldrgt	r0, [r8, -r0]
   110c4:	01000032 	tsteq	r0, r2, lsr r0
   110c8:	dd0d13fa 	stcle	3, cr1, [sp, #-1000]	; 0xfffffc18
   110cc:	08000006 	stmdaeq	r0, {r1, r2}
   110d0:	020000c4 	andeq	r0, r0, #196	; 0xc4
   110d4:	000000c4 	andeq	r0, r0, r4, asr #1
   110d8:	01210000 			; <UNDEFINED> instruction: 0x01210000
   110dc:	00003bd8 	ldrdeq	r3, [r0], -r8
   110e0:	10139c01 	andsne	r9, r3, r1, lsl #24
   110e4:	00011901 	andeq	r1, r1, r1, lsl #18
	...
   110f0:	00c45300 	sbceq	r5, r4, r0, lsl #6
   110f4:	1d830100 	stfnes	f0, [r3]
   110f8:	7a1b0000 	bvc	6d1100 <_Min_Heap_Size+0x6d0900>
   110fc:	0100003b 	tsteq	r0, fp, lsr r0
   11100:	a73b139c 			; <UNDEFINED> instruction: 0xa73b139c
   11104:	77000003 	strvc	r0, [r0, -r3]
   11108:	730000c4 	movwvc	r0, #196	; 0xc4
   1110c:	1b0000c4 	blne	11424 <_Min_Heap_Size+0x10c24>
   11110:	00003fcc 	andeq	r3, r0, ip, asr #31
   11114:	35139d01 	ldrcc	r9, [r3, #-3329]	; 0xfffff2ff
   11118:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
   1111c:	0000c49b 	muleq	r0, fp, r4
   11120:	0000c495 	muleq	r0, r5, r4
   11124:	00410618 	subeq	r0, r1, r8, lsl r6
   11128:	139f0100 	orrsne	r0, pc, #0, 2
   1112c:	00066611 	andeq	r6, r6, r1, lsl r6
   11130:	00c4cb00 	sbceq	ip, r4, r0, lsl #22
   11134:	00c4c700 	sbceq	ip, r4, r0, lsl #14
   11138:	38481800 	stmdacc	r8, {fp, ip}^
   1113c:	a0010000 	andge	r0, r1, r0
   11140:	01191413 	tsteq	r9, r3, lsl r4
   11144:	c4eb0000 	strbtgt	r0, [fp], #0
   11148:	c4e90000 	strbtgt	r0, [r9], #0
   1114c:	002f0000 	eoreq	r0, pc, r0
   11150:	1f000000 	svcne	0x00000000
   11154:	f3035001 	vhadd.u8	d5, d3, d1
   11158:	00005101 	andeq	r5, r0, r1, lsl #2
   1115c:	3cdf0129 	ldfcce	f0, [pc], {41}	; 0x29
   11160:	7c010000 	stcvc	0, cr0, [r1], {-0}
   11164:	9d011813 	stcls	8, cr1, [r1, #-76]	; 0xffffffb4
   11168:	00000004 	andeq	r0, r0, r4
   1116c:	00000000 	andeq	r0, r0, r0
   11170:	02000000 	andeq	r0, r0, #0
   11174:	4801007d 	stmdami	r1, {r0, r2, r3, r4, r5, r6}
   11178:	1b00001e 	blne	111f8 <_Min_Heap_Size+0x109f8>
   1117c:	00003b7a 	andeq	r3, r0, sl, ror fp
   11180:	48137c01 	ldmdami	r3, {r0, sl, fp, ip, sp, lr}
   11184:	000003a7 	andeq	r0, r0, r7, lsr #7
   11188:	0000c503 	andeq	ip, r0, r3, lsl #10
   1118c:	0000c4ff 	strdeq	ip, [r0], -pc	; <UNPREDICTABLE>
   11190:	00410518 	subeq	r0, r1, r8, lsl r5
   11194:	137e0100 	cmnne	lr, #0, 2
   11198:	00066611 	andeq	r6, r6, r1, lsl r6
   1119c:	00c52300 	sbceq	r2, r5, r0, lsl #6
   111a0:	00c52100 	sbceq	r2, r5, r0, lsl #2
   111a4:	38481800 	stmdacc	r8, {fp, ip}^
   111a8:	7f010000 	svcvc	0x00010000
   111ac:	049d1c13 	ldreq	r1, [sp], #3091	; 0xc13
   111b0:	c5380000 	ldrgt	r0, [r8, #-0]!
   111b4:	c5360000 	ldrgt	r0, [r6, #-0]!
   111b8:	5d180000 	ldcpl	0, cr0, [r8, #-0]
   111bc:	0100002a 	tsteq	r0, sl, lsr #32
   111c0:	2f151380 	svccs	0x00151380
   111c4:	4d000001 	stcmi	0, cr0, [r0, #-4]
   111c8:	4b0000c5 	blmi	114e4 <_Min_Heap_Size+0x10ce4>
   111cc:	240000c5 	strcs	r0, [r0], #-197	; 0xffffff3b
   111d0:	0000390b 	andeq	r3, r0, fp, lsl #18
   111d4:	00000000 	andeq	r0, r0, r0
   111d8:	00000001 	andeq	r0, r0, r1
   111dc:	00000000 	andeq	r0, r0, r0
   111e0:	138c0100 	orrne	r0, ip, #0, 2
   111e4:	001e2322 	andseq	r2, lr, r2, lsr #6
   111e8:	391d2500 	ldmdbcc	sp, {r8, sl, sp}
   111ec:	c5620000 	strbgt	r0, [r2, #-0]!
   111f0:	c5600000 	strbgt	r0, [r0, #-0]!
   111f4:	29260000 	stmdbcs	r6!, {}	; <UNPREDICTABLE>
   111f8:	00000039 	andeq	r0, r0, r9, lsr r0
   111fc:	0038f027 	eorseq	pc, r8, r7, lsr #32
   11200:	00000000 	andeq	r0, r0, r0
   11204:	00000100 	andeq	r0, r0, r0, lsl #2
   11208:	00000000 	andeq	r0, r0, r0
   1120c:	90010000 	andls	r0, r1, r0
   11210:	fe280913 	mcr2	9, 1, r0, cr8, cr3, {0}	; <UNPREDICTABLE>
   11214:	77000038 	smladxvc	r0, r8, r0, r0
   11218:	750000c5 	strvc	r0, [r0, #-197]	; 0xffffff3b
   1121c:	000000c5 	andeq	r0, r0, r5, asr #1
   11220:	93012100 	movwls	r2, #4352	; 0x1100
   11224:	01000036 	tsteq	r0, r6, lsr r0
   11228:	01181360 	tsteq	r8, r0, ror #6
   1122c:	0000049d 	muleq	r0, sp, r4
	...
   11238:	0000c58a 	andeq	ip, r0, sl, lsl #11
   1123c:	001eba01 	andseq	fp, lr, r1, lsl #20
   11240:	3b7a1b00 	blcc	1e97e48 <_Min_Heap_Size+0x1e97648>
   11244:	60010000 	andvs	r0, r1, r0
   11248:	03a74113 			; <UNDEFINED> instruction: 0x03a74113
   1124c:	c5ae0000 	strgt	r0, [lr, #0]!
   11250:	c5aa0000 	strgt	r0, [sl, #0]!
   11254:	05180000 	ldreq	r0, [r8, #-0]
   11258:	01000041 	tsteq	r0, r1, asr #32
   1125c:	66111362 	ldrvs	r1, [r1], -r2, ror #6
   11260:	ce000006 	cdpgt	0, 0, cr0, cr0, cr6, {0}
   11264:	cc0000c5 	stcgt	0, cr0, [r0], {197}	; 0xc5
   11268:	180000c5 	stmdane	r0, {r0, r2, r6, r7}
   1126c:	00003848 	andeq	r3, r0, r8, asr #16
   11270:	1c136301 	ldcne	3, cr6, [r3], {1}
   11274:	0000049d 	muleq	r0, sp, r4
   11278:	0000c5e3 	andeq	ip, r0, r3, ror #11
   1127c:	0000c5e1 	andeq	ip, r0, r1, ror #11
   11280:	0000001d 	andeq	r0, r0, sp, lsl r0
   11284:	00396f00 	eorseq	r6, r9, r0, lsl #30
   11288:	00001d00 	andeq	r1, r0, r0, lsl #26
   1128c:	397d0000 	ldmdbcc	sp!, {}^	; <UNPREDICTABLE>
   11290:	22000000 	andcs	r0, r0, #0
   11294:	00352501 	eorseq	r2, r5, r1, lsl #10
   11298:	133e0100 	teqne	lr, #0, 2
   1129c:	0000010a 	andeq	r0, r0, sl, lsl #2
   112a0:	00000000 	andeq	r0, r0, r0
   112a4:	c5f60000 	ldrbgt	r0, [r6, #0]!
   112a8:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
   112ac:	1b00001f 	blne	11330 <_Min_Heap_Size+0x10b30>
   112b0:	00003b7a 	andeq	r3, r0, sl, ror fp
   112b4:	33133e01 	tstcc	r3, #1, 28
   112b8:	000003a7 	andeq	r0, r0, r7, lsr #7
   112bc:	0000c61a 	andeq	ip, r0, sl, lsl r6
   112c0:	0000c616 	andeq	ip, r0, r6, lsl r6
   112c4:	00391c1b 	eorseq	r1, r9, fp, lsl ip
   112c8:	133f0100 	teqne	pc, #0, 2
   112cc:	00049d39 	andeq	r9, r4, r9, lsr sp
   112d0:	00c63e00 	sbceq	r3, r6, r0, lsl #28
   112d4:	00c63800 	sbceq	r3, r6, r0, lsl #16
   112d8:	41061800 	tstmi	r6, r0, lsl #16
   112dc:	41010000 	mrsmi	r0, (UNDEF: 1)
   112e0:	06661113 			; <UNDEFINED> instruction: 0x06661113
   112e4:	c66b0000 	strbtgt	r0, [fp], -r0
   112e8:	c6670000 	strbtgt	r0, [r7], -r0
   112ec:	001d0000 	andseq	r0, sp, r0
   112f0:	6f000000 	svcvs	0x00000000
   112f4:	1d000039 	stcne	0, cr0, [r0, #-228]	; 0xffffff1c
   112f8:	00000000 	andeq	r0, r0, r0
   112fc:	0000397d 	andeq	r3, r0, sp, ror r9
   11300:	0c012100 	stfeqs	f2, [r1], {-0}
   11304:	01000037 	tsteq	r0, r7, lsr r0
   11308:	010c123e 	tsteq	ip, lr, lsr r2
   1130c:	00000119 	andeq	r0, r0, r9, lsl r1
   11310:	08002300 	stmdaeq	r0, {r8, r9, sp}
   11314:	08002460 	stmdaeq	r0, {r5, r6, sl, sp}
   11318:	0000c689 	andeq	ip, r0, r9, lsl #13
   1131c:	00202c01 	eoreq	r2, r0, r1, lsl #24
   11320:	41051800 	tstmi	r5, r0, lsl #16
   11324:	40010000 	andmi	r0, r1, r0
   11328:	06660d12 			; <UNDEFINED> instruction: 0x06660d12
   1132c:	c6c70000 	strbgt	r0, [r7], r0
   11330:	c6c10000 	strbgt	r0, [r1], r0
   11334:	63180000 	tstvs	r8, #0
   11338:	01000027 	tsteq	r0, r7, lsr #32
   1133c:	4a101241 	bmi	415c48 <_Min_Heap_Size+0x415448>
   11340:	f6000001 			; <UNDEFINED> instruction: 0xf6000001
   11344:	f00000c6 			; <UNDEFINED> instruction: 0xf00000c6
   11348:	180000c6 	stmdane	r0, {r1, r2, r6, r7}
   1134c:	00003d01 	andeq	r3, r0, r1, lsl #26
   11350:	10124201 	andsne	r4, r2, r1, lsl #4
   11354:	00000119 	andeq	r0, r0, r9, lsl r1
   11358:	0000c72e 	andeq	ip, r0, lr, lsr #14
   1135c:	0000c720 	andeq	ip, r0, r0, lsr #14
   11360:	0009b82d 	andeq	fp, r9, sp, lsr #16
   11364:	37a61800 	strcc	r1, [r6, r0, lsl #16]!
   11368:	57010000 	strpl	r0, [r1, -r0]
   1136c:	015b1a12 	cmpeq	fp, r2, lsl sl
   11370:	c78b0000 	strgt	r0, [fp, r0]
   11374:	c7870000 	strgt	r0, [r7, r0]
   11378:	401c0000 	andsmi	r0, ip, r0
   1137c:	58080023 	stmdapl	r8, {r0, r1, r5}
   11380:	cd080023 	stcgt	0, cr0, [r8, #-140]	; 0xffffff74
   11384:	1800001f 	stmdane	r0, {r0, r1, r2, r3, r4}
   11388:	000036d7 	ldrdeq	r3, [r0], -r7
   1138c:	0d125f01 	ldceq	15, cr5, [r2, #-4]
   11390:	000006d2 	ldrdeq	r0, [r0], -r2
   11394:	0000c7ab 	andeq	ip, r0, fp, lsr #15
   11398:	0000c7a9 	andeq	ip, r0, r9, lsr #15
   1139c:	0023581d 	eoreq	r5, r3, sp, lsl r8
   113a0:	0014e608 	andseq	lr, r4, r8, lsl #12
   113a4:	e8230000 	stmda	r3!, {}	; <UNPREDICTABLE>
   113a8:	ec000009 	stc	0, cr0, [r0], {9}
   113ac:	1800001f 	stmdane	r0, {r0, r1, r2, r3, r4}
   113b0:	00002847 	andeq	r2, r0, r7, asr #16
   113b4:	15129401 	ldrne	r9, [r2, #-1025]	; 0xfffffbff
   113b8:	000006dd 	ldrdeq	r0, [r0], -sp
   113bc:	0000c7c2 	andeq	ip, r0, r2, asr #15
   113c0:	0000c7be 			; <UNDEFINED> instruction: 0x0000c7be
   113c4:	0a002300 	beq	19fcc <_Min_Heap_Size+0x197cc>
   113c8:	200b0000 	andcs	r0, fp, r0
   113cc:	47180000 	ldrmi	r0, [r8, -r0]
   113d0:	01000028 	tsteq	r0, r8, lsr #32
   113d4:	dd19129a 	lfmle	f1, 4, [r9, #-616]	; 0xfffffd98
   113d8:	e4000006 	str	r0, [r0], #-6
   113dc:	e00000c7 	and	r0, r0, r7, asr #1
   113e0:	000000c7 	andeq	r0, r0, r7, asr #1
   113e4:	00238c30 	eoreq	r8, r3, r0, lsr ip
   113e8:	0023c008 	eoreq	ip, r3, r8
   113ec:	28131808 	ldmdacs	r3, {r3, fp, ip}
   113f0:	a3010000 	movwge	r0, #4096	; 0x1000
   113f4:	03911512 	orrseq	r1, r1, #75497472	; 0x4800000
   113f8:	c8040000 	stmdagt	r4, {}	; <UNPREDICTABLE>
   113fc:	c8020000 	stmdagt	r2, {}	; <UNPREDICTABLE>
   11400:	00000000 	andeq	r0, r0, r0
   11404:	a6012100 	strge	r2, [r1], -r0, lsl #2
   11408:	0100003d 	tsteq	r0, sp, lsr r0
   1140c:	011011e0 	tsteq	r0, r0, ror #3
   11410:	00000119 	andeq	r0, r0, r9, lsl r1
	...
   1141c:	0000c817 	andeq	ip, r0, r7, lsl r8
   11420:	00210f01 	eoreq	r0, r1, r1, lsl #30
   11424:	3b7a1b00 	blcc	1e9802c <_Min_Heap_Size+0x1e9782c>
   11428:	e0010000 	and	r0, r1, r0
   1142c:	03a72e11 			; <UNDEFINED> instruction: 0x03a72e11
   11430:	c8450000 	stmdagt	r5, {}^	; <UNPREDICTABLE>
   11434:	c8370000 	ldmdagt	r7!, {}	; <UNPREDICTABLE>
   11438:	05180000 	ldreq	r0, [r8, #-0]
   1143c:	01000041 	tsteq	r0, r1, asr #32
   11440:	661111e2 	ldrvs	r1, [r1], -r2, ror #3
   11444:	af000006 	svcge	0x00000006
   11448:	a10000c8 	smlabtge	r0, r8, r0, r0
   1144c:	180000c8 	stmdane	r0, {r3, r6, r7}
   11450:	00003848 	andeq	r3, r0, r8, asr #16
   11454:	1411e301 	ldrne	lr, [r1], #-769	; 0xfffffcff
   11458:	00000119 	andeq	r0, r0, r9, lsl r1
   1145c:	0000c90f 	andeq	ip, r0, pc, lsl #18
   11460:	0000c90b 	andeq	ip, r0, fp, lsl #18
   11464:	0000001c 	andeq	r0, r0, ip, lsl r0
   11468:	00000000 	andeq	r0, r0, r0
   1146c:	0020ae00 	eoreq	sl, r0, r0, lsl #28
   11470:	28131800 	ldmdacs	r3, {fp, ip}
   11474:	0d010000 	stceq	0, cr0, [r1, #-0]
   11478:	03911112 	orrseq	r1, r1, #-2147483644	; 0x80000004
   1147c:	c9300000 	ldmdbgt	r0!, {}	; <UNPREDICTABLE>
   11480:	c92e0000 	stmdbgt	lr!, {}	; <UNPREDICTABLE>
   11484:	1d000000 	stcne	0, cr0, [r0, #-0]
   11488:	00000000 	andeq	r0, r0, r0
   1148c:	000026a9 	andeq	r2, r0, r9, lsr #13
   11490:	0000001e 	andeq	r0, r0, lr, lsl r0
   11494:	002f5600 	eoreq	r5, pc, r0, lsl #12
   11498:	0020cb00 	eoreq	ip, r0, r0, lsl #22
   1149c:	50011f00 	andpl	r1, r1, r0, lsl #30
   114a0:	00007402 	andeq	r7, r0, r2, lsl #8
   114a4:	0000001d 	andeq	r0, r0, sp, lsl r0
   114a8:	00255900 	eoreq	r5, r5, r0, lsl #18
   114ac:	00001e00 	andeq	r1, r0, r0, lsl #28
   114b0:	39510000 	ldmdbcc	r1, {}^	; <UNPREDICTABLE>
   114b4:	20e80000 	rsccs	r0, r8, r0
   114b8:	011f0000 	tsteq	pc, r0
   114bc:	00750250 	rsbseq	r0, r5, r0, asr r2
   114c0:	00001d00 	andeq	r1, r0, r0, lsl #26
   114c4:	396f0000 	stmdbcc	pc!, {}^	; <UNPREDICTABLE>
   114c8:	001e0000 	andseq	r0, lr, r0
   114cc:	51000000 	mrspl	r0, (UNDEF: 0)
   114d0:	05000039 	streq	r0, [r0, #-57]	; 0xffffffc7
   114d4:	1f000021 	svcne	0x00000021
   114d8:	74025001 	strvc	r5, [r2], #-1
   114dc:	001d0018 	andseq	r0, sp, r8, lsl r0
   114e0:	7d000000 	stcvc	0, cr0, [r0, #-0]
   114e4:	00000039 	andeq	r0, r0, r9, lsr r0
   114e8:	34d70121 	ldrbcc	r0, [r7], #289	; 0x121
   114ec:	c2010000 	andgt	r0, r1, #0
   114f0:	19010c11 	stmdbne	r1, {r0, r4, sl, fp}
   114f4:	00000001 	andeq	r0, r0, r1
   114f8:	00000000 	andeq	r0, r0, r0
   114fc:	43000000 	movwmi	r0, #0
   11500:	010000c9 	smlabteq	r0, r9, r0, r0
   11504:	0000217e 	andeq	r2, r0, lr, ror r1
   11508:	0040001b 	subeq	r0, r0, fp, lsl r0
   1150c:	11c20100 	bicne	r0, r2, r0, lsl #2
   11510:	00014a2a 	andeq	r4, r1, sl, lsr #20
   11514:	00c96900 	sbceq	r6, r9, r0, lsl #18
   11518:	00c96300 	sbceq	r6, r9, r0, lsl #6
   1151c:	398c1800 	stmibcc	ip, {fp, ip}
   11520:	c4010000 	strgt	r0, [r1], #-0
   11524:	01191011 	tsteq	r9, r1, lsl r0
   11528:	c9970000 	ldmibgt	r7, {}	; <UNPREDICTABLE>
   1152c:	c9950000 	ldmibgt	r5, {}	; <UNPREDICTABLE>
   11530:	001d0000 	andseq	r0, sp, r0
   11534:	a9000000 	stmdbge	r0, {}	; <UNPREDICTABLE>
   11538:	1d000026 	stcne	0, cr0, [r0, #-152]	; 0xffffff68
   1153c:	00000000 	andeq	r0, r0, r0
   11540:	0000396f 	andeq	r3, r0, pc, ror #18
   11544:	0000001d 	andeq	r0, r0, sp, lsl r0
   11548:	00397d00 	eorseq	r7, r9, r0, lsl #26
   1154c:	00001d00 	andeq	r1, r0, r0, lsl #26
   11550:	25590000 	ldrbcs	r0, [r9, #-0]
   11554:	22000000 	andcs	r0, r0, #0
   11558:	00371f01 	eorseq	r1, r7, r1, lsl #30
   1155c:	11980100 	orrsne	r0, r8, r0, lsl #2
   11560:	22c4010a 	sbccs	r0, r4, #-2147483646	; 0x80000002
   11564:	23000800 	movwcs	r0, #2048	; 0x800
   11568:	c9aa0800 	stmibgt	sl!, {fp}
   1156c:	d7010000 	strle	r0, [r1, -r0]
   11570:	1b000021 	blne	115fc <_Min_Heap_Size+0x10dfc>
   11574:	00003ac8 	andeq	r3, r0, r8, asr #21
   11578:	24119801 	ldrcs	r9, [r1], #-2049	; 0xfffff7ff
   1157c:	0000014a 	andeq	r0, r0, sl, asr #2
   11580:	0000c9d2 	ldrdeq	ip, [r0], -r2
   11584:	0000c9ca 	andeq	ip, r0, sl, asr #19
   11588:	0034c518 	eorseq	ip, r4, r8, lsl r5
   1158c:	119a0100 	orrsne	r0, sl, r0, lsl #2
   11590:	00014a14 	andeq	r4, r1, r4, lsl sl
   11594:	00ca0a00 	sbceq	r0, sl, r0, lsl #20
   11598:	00ca0600 	sbceq	r0, sl, r0, lsl #12
   1159c:	22e41d00 	rsccs	r1, r4, #0, 26
   115a0:	396f0800 	stmdbcc	pc!, {fp}^	; <UNPREDICTABLE>
   115a4:	f01d0000 			; <UNDEFINED> instruction: 0xf01d0000
   115a8:	7d080022 	stcvc	0, cr0, [r8, #-136]	; 0xffffff78
   115ac:	00000039 	andeq	r0, r0, r9, lsr r0
   115b0:	32d30129 	sbcscc	r0, r3, #1073741834	; 0x4000000a
   115b4:	7f010000 	svcvc	0x00010000
   115b8:	a7011211 	smladge	r1, r1, r2, r1
   115bc:	00000003 	andeq	r0, r0, r3
   115c0:	00000000 	andeq	r0, r0, r0
   115c4:	02000000 	andeq	r0, r0, #0
   115c8:	0c01007d 	stceq	0, cr0, [r1], {125}	; 0x7d
   115cc:	1b000022 	blne	1165c <_Min_Heap_Size+0x10e5c>
   115d0:	0000325f 	andeq	r3, r0, pc, asr r2
   115d4:	3c117f01 	ldccc	15, cr7, [r1], {1}
   115d8:	00000119 	andeq	r0, r0, r9, lsl r1
   115dc:	0000ca2c 	andeq	ip, r0, ip, lsr #20
   115e0:	0000ca28 	andeq	ip, r0, r8, lsr #20
   115e4:	b5013100 	strlt	r3, [r1, #-256]	; 0xffffff00
   115e8:	01000040 	tsteq	r0, r0, asr #32
   115ec:	01161171 	tsteq	r6, r1, ror r1
   115f0:	000003a7 	andeq	r0, r0, r7, lsr #7
	...
   115fc:	01007d02 	tsteq	r0, r2, lsl #26
   11600:	3c330129 	ldfccs	f0, [r3], #-164	; 0xffffff5c
   11604:	eb010000 	bl	5160c <_Min_Heap_Size+0x50e0c>
   11608:	19011010 	stmdbne	r1, {r4, ip}
   1160c:	00000001 	andeq	r0, r0, r1
   11610:	00000000 	andeq	r0, r0, r0
   11614:	02000000 	andeq	r0, r0, #0
   11618:	a401007d 	strge	r0, [r1], #-125	; 0xffffff83
   1161c:	1b000022 	blne	116ac <_Min_Heap_Size+0x10eac>
   11620:	00003b7a 	andeq	r3, r0, sl, ror fp
   11624:	3410eb01 	ldrcc	lr, [r0], #-2817	; 0xfffff4ff
   11628:	000003a7 	andeq	r0, r0, r7, lsr #7
   1162c:	0000ca51 	andeq	ip, r0, r1, asr sl
   11630:	0000ca4d 	andeq	ip, r0, sp, asr #20
   11634:	00395319 	eorseq	r5, r9, r9, lsl r3
   11638:	10ec0100 	rscne	r0, ip, r0, lsl #2
   1163c:	0008fb36 	andeq	pc, r8, r6, lsr fp	; <UNPREDICTABLE>
   11640:	19510100 	ldmdbne	r1, {r8}^
   11644:	00003b3d 	andeq	r3, r0, sp, lsr fp
   11648:	3710ed01 	ldrcc	lr, [r0, -r1, lsl #26]
   1164c:	000008ea 	andeq	r0, r0, sl, ror #17
   11650:	48185201 	ldmdami	r8, {r0, r9, ip, lr}
   11654:	01000038 	tsteq	r0, r8, lsr r0
   11658:	191410ef 	ldmdbne	r4, {r0, r1, r2, r3, r5, r6, r7, ip}
   1165c:	75000001 	strvc	r0, [r0, #-1]
   11660:	6f0000ca 	svcvs	0x000000ca
   11664:	180000ca 	stmdane	r0, {r1, r3, r6, r7}
   11668:	00004105 	andeq	r4, r0, r5, lsl #2
   1166c:	1110f001 	tstne	r0, r1	; <UNPREDICTABLE>
   11670:	00000666 	andeq	r0, r0, r6, ror #12
   11674:	0000caa5 	andeq	ip, r0, r5, lsr #21
   11678:	0000caa1 	andeq	ip, r0, r1, lsr #21
   1167c:	48012100 	stmdami	r1, {r8, sp}
   11680:	01000037 	tsteq	r0, r7, lsr r0
   11684:	011210a7 	tsteq	r2, r7, lsr #1
   11688:	000003a7 	andeq	r0, r0, r7, lsr #7
	...
   11694:	0000cac3 	andeq	ip, r0, r3, asr #21
   11698:	00239b01 	eoreq	r9, r3, r1, lsl #22
   1169c:	3e9e1b00 	vfnmscc.f64	d1, d14, d0
   116a0:	a7010000 	strge	r0, [r1, -r0]
   116a4:	00b82f10 	adcseq	r2, r8, r0, lsl pc
   116a8:	cae70000 	bgt	ff9d16b0 <_estack+0xdf9c7d10>
   116ac:	cae30000 	bgt	ff8d16b4 <_estack+0xdf8c7d14>
   116b0:	6c180000 	ldcvs	0, cr0, [r8], {-0}
   116b4:	01000039 	tsteq	r0, r9, lsr r0
   116b8:	2f1510a9 	svccs	0x001510a9
   116bc:	09000001 	stmdbeq	r0, {r0}
   116c0:	050000cb 	streq	r0, [r0, #-203]	; 0xffffff35
   116c4:	180000cb 	stmdane	r0, {r0, r1, r3, r6, r7}
   116c8:	00004105 	andeq	r4, r0, r5, lsl #2
   116cc:	1110aa01 	tstne	r0, r1, lsl #20
   116d0:	00000666 	andeq	r0, r0, r6, ror #12
   116d4:	0000cb3e 	andeq	ip, r0, lr, lsr fp
   116d8:	0000cb28 	andeq	ip, r0, r8, lsr #22
   116dc:	0000001d 	andeq	r0, r0, sp, lsl r0
   116e0:	0026a900 	eoreq	sl, r6, r0, lsl #18
   116e4:	00001e00 	andeq	r1, r0, r0, lsl #28
   116e8:	239b0000 	orrscs	r0, fp, #0
   116ec:	23330000 	teqcs	r3, #0
   116f0:	011f0000 	tsteq	pc, r0
   116f4:	00740f50 	rsbseq	r0, r4, r0, asr pc
   116f8:	00742433 	rsbseq	r2, r4, r3, lsr r4
   116fc:	0324321c 			; <UNDEFINED> instruction: 0x0324321c
   11700:	20008238 	andcs	r8, r0, r8, lsr r2
   11704:	51011f22 	tstpl	r1, r2, lsr #30
   11708:	00007602 	andeq	r7, r0, r2, lsl #12
   1170c:	0000001d 	andeq	r0, r0, sp, lsl r0
   11710:	00255900 	eoreq	r5, r5, r0, lsl #18
   11714:	00001e00 	andeq	r1, r0, r0, lsl #28
   11718:	239b0000 	orrscs	r0, fp, #0
   1171c:	23500000 	cmpcs	r0, #0
   11720:	011f0000 	tsteq	pc, r0
   11724:	00760251 	rsbseq	r0, r6, r1, asr r2
   11728:	00001e00 	andeq	r1, r0, r0, lsl #28
   1172c:	239b0000 	orrscs	r0, fp, #0
   11730:	23640000 	cmncs	r4, #0
   11734:	011f0000 	tsteq	pc, r0
   11738:	00760251 	rsbseq	r0, r6, r1, asr r2
   1173c:	00001e00 	andeq	r1, r0, r0, lsl #28
   11740:	239b0000 	orrscs	r0, fp, #0
   11744:	23810000 	orrcs	r0, r1, #0
   11748:	011f0000 	tsteq	pc, r0
   1174c:	8c030550 	cfstr32hi	mvfx0, [r3], {80}	; 0x50
   11750:	1f200087 	svcne	0x00200087
   11754:	76025101 	strvc	r5, [r2], -r1, lsl #2
   11758:	00200000 	eoreq	r0, r0, r0
   1175c:	9b000000 	blls	11764 <_Min_Heap_Size+0x10f64>
   11760:	1f000023 	svcne	0x00000023
   11764:	03055001 	movweq	r5, #20481	; 0x5001
   11768:	200087a8 	andcs	r8, r0, r8, lsr #15
   1176c:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
   11770:	00000076 	andeq	r0, r0, r6, ror r0
   11774:	0038ca32 	eorseq	ip, r8, r2, lsr sl
   11778:	105e0100 	subsne	r0, lr, r0, lsl #2
   1177c:	06660114 			; <UNDEFINED> instruction: 0x06660114
	...
   11788:	cbbf0000 	blgt	fefd1790 <_estack+0xdefc7df0>
   1178c:	76010000 	strvc	r0, [r1], -r0
   11790:	1b000024 	blne	11828 <_Min_Heap_Size+0x11028>
   11794:	00002847 	andeq	r2, r0, r7, asr #16
   11798:	3f105e01 	svccc	0x00105e01
   1179c:	000006d2 	ldrdeq	r0, [r0], -r2
   117a0:	0000cbe7 	andeq	ip, r0, r7, ror #23
   117a4:	0000cbdf 	ldrdeq	ip, [r0], -pc	; <UNPREDICTABLE>
   117a8:	003e9e1b 	eorseq	r9, lr, fp, lsl lr
   117ac:	105f0100 	subsne	r0, pc, r0, lsl #2
   117b0:	0000b841 	andeq	fp, r0, r1, asr #16
   117b4:	00cc2700 	sbceq	r2, ip, r0, lsl #14
   117b8:	00cc1f00 	sbceq	r1, ip, r0, lsl #30
   117bc:	38471800 	stmdacc	r7, {fp, ip}^
   117c0:	61010000 	mrsvs	r0, (UNDEF: 1)
   117c4:	06661110 			; <UNDEFINED> instruction: 0x06661110
   117c8:	cc640000 	stclgt	0, cr0, [r4], #-0
   117cc:	cc5e0000 	mragt	r0, lr, acc0
   117d0:	05180000 	ldreq	r0, [r8, #-0]
   117d4:	01000041 	tsteq	r0, r1, asr #32
   117d8:	66111062 	ldrvs	r1, [r1], -r2, rrx
   117dc:	97000006 	strls	r0, [r0, -r6]
   117e0:	8f0000cc 	svchi	0x000000cc
   117e4:	330000cc 	movwcc	r0, #204	; 0xcc
   117e8:	63010078 	movwvs	r0, #4216	; 0x1078
   117ec:	012f1510 			; <UNDEFINED> instruction: 0x012f1510
   117f0:	ccd30000 	ldclgt	0, cr0, [r3], {0}
   117f4:	cccd0000 	stclgt	0, cr0, [sp], {0}
   117f8:	80180000 	andshi	r0, r8, r0
   117fc:	0100003c 	tsteq	r0, ip, lsr r0
   11800:	ac0e1064 	stcge	0, cr1, [lr], {100}	; 0x64
   11804:	01000000 	mrseq	r0, (UNDEF: 0)
   11808:	fd0000cd 	stc2	0, cr0, [r0, #-820]	; 0xfffffccc
   1180c:	180000cc 	stmdane	r0, {r2, r3, r6, r7}
   11810:	00003c28 	andeq	r3, r0, r8, lsr #24
   11814:	14106501 	ldrne	r6, [r0], #-1281	; 0xfffffaff
   11818:	00000119 	andeq	r0, r0, r9, lsl r1
   1181c:	0000cd23 	andeq	ip, r0, r3, lsr #26
   11820:	0000cd1f 	andeq	ip, r0, pc, lsl sp
   11824:	003b4b18 	eorseq	r4, fp, r8, lsl fp
   11828:	10660100 	rsbne	r0, r6, r0, lsl #2
   1182c:	0024761c 	eoreq	r7, r4, ip, lsl r6
   11830:	00cd4700 	sbceq	r4, sp, r0, lsl #14
   11834:	00cd4300 	sbceq	r4, sp, r0, lsl #6
   11838:	28081800 	stmdacs	r8, {fp, ip}
   1183c:	67010000 	strvs	r0, [r1, -r0]
   11840:	038b1610 	orreq	r1, fp, #16, 12	; 0x1000000
   11844:	cd690000 	stclgt	0, cr0, [r9, #-0]
   11848:	cd670000 	stclgt	0, cr0, [r7, #-0]
   1184c:	07000000 	streq	r0, [r0, -r0]
   11850:	00037a04 	andeq	r7, r3, r4, lsl #20
   11854:	6a012900 	bvs	5bc5c <_Min_Heap_Size+0x5b45c>
   11858:	0100003e 	tsteq	r0, lr, lsr r0
   1185c:	0108104c 	tsteq	r8, ip, asr #32
   11860:	000000a6 	andeq	r0, r0, r6, lsr #1
	...
   1186c:	01007d02 	tsteq	r0, r2, lsl #26
   11870:	000024c6 	andeq	r2, r0, r6, asr #9
   11874:	003b8a1b 	eorseq	r8, fp, fp, lsl sl
   11878:	104c0100 	subne	r0, ip, r0, lsl #2
   1187c:	0003a724 	andeq	sl, r3, r4, lsr #14
   11880:	00cd8000 	sbceq	r8, sp, r0
   11884:	00cd7c00 	sbceq	r7, sp, r0, lsl #24
   11888:	41051800 	tstmi	r5, r0, lsl #16
   1188c:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
   11890:	06660d10 			; <UNDEFINED> instruction: 0x06660d10
   11894:	cda00000 	stcgt	0, cr0, [r0]
   11898:	cd9e0000 	ldcgt	0, cr0, [lr]
   1189c:	31000000 	mrscc	r0, (UNDEF: 0)
   118a0:	002a2e01 	eoreq	r2, sl, r1, lsl #28
   118a4:	10400100 	subne	r0, r0, r0, lsl #2
   118a8:	012f010d 			; <UNDEFINED> instruction: 0x012f010d
   118ac:	22b80000 	adcscs	r0, r8, #0
   118b0:	22c40800 	sbccs	r0, r4, #0, 16
   118b4:	7d020800 	stcvc	8, cr0, [r2, #-0]
   118b8:	01290100 			; <UNDEFINED> instruction: 0x01290100
   118bc:	0000362c 	andeq	r3, r0, ip, lsr #12
   118c0:	0c101d01 	ldceq	13, cr1, [r0], {1}
   118c4:	00014a01 	andeq	r4, r1, r1, lsl #20
	...
   118d0:	007d0200 	rsbseq	r0, sp, r0, lsl #4
   118d4:	00252401 	eoreq	r2, r5, r1, lsl #8
   118d8:	38481800 	stmdacc	r8, {fp, ip}^
   118dc:	1f010000 	svcne	0x00010000
   118e0:	014a1010 	cmpeq	sl, r0, lsl r0
   118e4:	cdb50000 	ldcgt	0, cr0, [r5]
   118e8:	cdb30000 	ldcgt	0, cr0, [r3]
   118ec:	5d2a0000 	stcpl	0, cr0, [sl, #-0]
   118f0:	0100002a 	tsteq	r0, sl, lsr #32
   118f4:	2f111020 	svccs	0x00111020
   118f8:	00000001 	andeq	r0, r0, r1
   118fc:	b6012900 	strlt	r2, [r1], -r0, lsl #18
   11900:	0100003a 	tsteq	r0, sl, lsr r0
   11904:	010c100a 	tsteq	ip, sl
   11908:	0000014a 	andeq	r0, r0, sl, asr #2
   1190c:	080022ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sp}
   11910:	080022b8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sp}
   11914:	01007d02 	tsteq	r0, r2, lsl #26
   11918:	00002559 	andeq	r2, r0, r9, asr r5
   1191c:	003e7818 	eorseq	r7, lr, r8, lsl r8
   11920:	100c0100 	andne	r0, ip, r0, lsl #2
   11924:	00014a10 	andeq	r4, r1, r0, lsl sl
   11928:	00cdca00 	sbceq	ip, sp, r0, lsl #20
   1192c:	00cdc800 	sbceq	ip, sp, r0, lsl #16
   11930:	01210000 			; <UNDEFINED> instruction: 0x01210000
   11934:	00002fc9 	andeq	r2, r0, r9, asr #31
   11938:	0c0f7401 	cfstrseq	mvf7, [pc], {1}
   1193c:	00011901 	andeq	r1, r1, r1, lsl #18
   11940:	00246000 	eoreq	r6, r4, r0
   11944:	0025a008 	eoreq	sl, r5, r8
   11948:	00cddd08 	sbceq	sp, sp, r8, lsl #26
   1194c:	26600100 	strbtcs	r0, [r0], -r0, lsl #2
   11950:	05180000 	ldreq	r0, [r8, #-0]
   11954:	01000041 	tsteq	r0, r1, asr #32
   11958:	660d0f76 			; <UNDEFINED> instruction: 0x660d0f76
   1195c:	09000006 	stmdbeq	r0, {r1, r2}
   11960:	fd0000ce 	stc2	0, cr0, [r0, #-824]	; 0xfffffcc8
   11964:	180000cd 	stmdane	r0, {r0, r2, r3, r6, r7}
   11968:	00003fac 	andeq	r3, r0, ip, lsr #31
   1196c:	100f7701 	andne	r7, pc, r1, lsl #14
   11970:	00000119 	andeq	r0, r0, r9, lsl r1
   11974:	0000ce60 	andeq	ip, r0, r0, ror #28
   11978:	0000ce56 	andeq	ip, r0, r6, asr lr
   1197c:	000a1823 	andeq	r1, sl, r3, lsr #16
   11980:	00264d00 	eoreq	r4, r6, r0, lsl #26
   11984:	325f2a00 	subscc	r2, pc, #0, 20
   11988:	86010000 	strhi	r0, [r1], -r0
   1198c:	0119180f 	tsteq	r9, pc, lsl #16
   11990:	23000000 	movwcs	r0, #0
   11994:	00000a40 	andeq	r0, r0, r0, asr #20
   11998:	000025d9 	ldrdeq	r2, [r0], -r9
   1199c:	00284718 	eoreq	r4, r8, r8, lsl r7
   119a0:	0f9c0100 	svceq	0x009c0100
   119a4:	0006dd19 	andeq	sp, r6, r9, lsl sp
   119a8:	00cea600 	sbceq	sl, lr, r0, lsl #12
   119ac:	00cea200 	sbceq	sl, lr, r0, lsl #4
   119b0:	58230000 	stmdapl	r3!, {}	; <UNPREDICTABLE>
   119b4:	f800000a 			; <UNDEFINED> instruction: 0xf800000a
   119b8:	18000025 	stmdane	r0, {r0, r2, r5}
   119bc:	00002847 	andeq	r2, r0, r7, asr #16
   119c0:	190f9e01 	stmdbne	pc, {r0, r9, sl, fp, ip, pc}	; <UNPREDICTABLE>
   119c4:	000006dd 	ldrdeq	r0, [r0], -sp
   119c8:	0000cec8 	andeq	ip, r0, r8, asr #29
   119cc:	0000cec4 	andeq	ip, r0, r4, asr #29
   119d0:	24e61c00 	strbtcs	r1, [r6], #3072	; 0xc00
   119d4:	25160800 	ldrcs	r0, [r6, #-2048]	; 0xfffff800
   119d8:	261b0800 	ldrcs	r0, [fp], -r0, lsl #16
   119dc:	13180000 	tstne	r8, #0
   119e0:	01000028 	tsteq	r0, r8, lsr #32
   119e4:	91190f9f 			; <UNDEFINED> instruction: 0x91190f9f
   119e8:	e8000003 	stmda	r0, {r0, r1}
   119ec:	e60000ce 	str	r0, [r0], -lr, asr #1
   119f0:	000000ce 	andeq	r0, r0, lr, asr #1
   119f4:	000a7023 	andeq	r7, sl, r3, lsr #32
   119f8:	00264300 	eoreq	r4, r6, r0, lsl #6
   119fc:	33de1800 	bicscc	r1, lr, #0, 16
   11a00:	cc010000 	stcgt	0, cr0, [r1], {-0}
   11a04:	014a240f 	cmpeq	sl, pc, lsl #8
   11a08:	cf030000 	svcgt	0x00030000
   11a0c:	cefb0000 	cdpgt	0, 15, cr0, cr11, cr0, {0}
   11a10:	601d0000 	andsvs	r0, sp, r0
   11a14:	28080025 	stmdacs	r8, {r0, r2, r5}
   11a18:	0000001f 	andeq	r0, r0, pc, lsl r0
   11a1c:	0025301d 	eoreq	r3, r5, sp, lsl r0
   11a20:	0014e608 	andseq	lr, r4, r8, lsl #12
   11a24:	661d0000 	ldrvs	r0, [sp], -r0
   11a28:	6f080024 	svcvs	0x00080024
   11a2c:	1d000039 	stcne	0, cr0, [r0, #-228]	; 0xffffff1c
   11a30:	0800257a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r8, sl, sp}
   11a34:	0000397d 	andeq	r3, r0, sp, ror r9
   11a38:	37f32c00 	ldrbcc	r2, [r3, r0, lsl #24]!
   11a3c:	36010000 	strcc	r0, [r1], -r0
   11a40:	4a01170f 	bmi	57684 <_Min_Heap_Size+0x56e84>
   11a44:	50000001 	andpl	r0, r0, r1
   11a48:	9008001e 	andls	r0, r8, lr, lsl r0
   11a4c:	0208001e 	andeq	r0, r8, #30
   11a50:	a901007d 	stmdbge	r1, {r0, r2, r3, r4, r5, r6}
   11a54:	18000026 	stmdane	r0, {r1, r2, r5}
   11a58:	00003848 	andeq	r3, r0, r8, asr #16
   11a5c:	140f3801 	strne	r3, [pc], #-2049	; 11a64 <_Min_Heap_Size+0x11264>
   11a60:	0000014a 	andeq	r0, r0, sl, asr #2
   11a64:	0000cf3d 	andeq	ip, r0, sp, lsr pc
   11a68:	0000cf39 	andeq	ip, r0, r9, lsr pc
   11a6c:	00356718 	eorseq	r6, r5, r8, lsl r7
   11a70:	0f390100 	svceq	0x00390100
   11a74:	00012f15 	andeq	r2, r1, r5, lsl pc
   11a78:	00cf6200 	sbceq	r6, pc, r0, lsl #4
   11a7c:	00cf5c00 	sbceq	r5, pc, r0, lsl #24
   11a80:	012e0000 			; <UNDEFINED> instruction: 0x012e0000
   11a84:	00002b42 	andeq	r2, r0, r2, asr #22
   11a88:	060ee301 	streq	lr, [lr], -r1, lsl #6
   11a8c:	00229c01 	eoreq	r9, r2, r1, lsl #24
   11a90:	0022ac08 	eoreq	sl, r2, r8, lsl #24
   11a94:	007d0208 	rsbseq	r0, sp, r8, lsl #4
   11a98:	82012201 	andhi	r2, r1, #268435456	; 0x10000000
   11a9c:	01000037 	tsteq	r0, r7, lsr r0
   11aa0:	01060eb8 			; <UNDEFINED> instruction: 0x01060eb8
	...
   11aac:	0000cf8c 	andeq	ip, r0, ip, lsl #31
   11ab0:	00274901 	eoreq	r4, r7, r1, lsl #18
   11ab4:	09a02300 	stmibeq	r0!, {r8, r9, sp}
   11ab8:	271f0000 	ldrcs	r0, [pc, -r0]
   11abc:	5f180000 	svcpl	0x00180000
   11ac0:	01000032 	tsteq	r0, r2, lsr r0
   11ac4:	19140ebe 	ldmdbne	r4, {r1, r2, r3, r4, r5, r7, r9, sl, fp}
   11ac8:	b0000001 	andlt	r0, r0, r1
   11acc:	ac0000cf 	stcge	0, cr0, [r0], {207}	; 0xcf
   11ad0:	1d0000cf 	stcne	0, cr0, [r0, #-828]	; 0xfffffcc4
   11ad4:	00000000 	andeq	r0, r0, r0
   11ad8:	000039b6 			; <UNDEFINED> instruction: 0x000039b6
   11adc:	0000001d 	andeq	r0, r0, sp, lsl r0
   11ae0:	00317500 	eorseq	r7, r1, r0, lsl #10
   11ae4:	00001d00 	andeq	r1, r0, r0, lsl #26
   11ae8:	16200000 	strtne	r0, [r0], -r0
   11aec:	001d0000 	andseq	r0, sp, r0
   11af0:	75000000 	strvc	r0, [r0, #-0]
   11af4:	00000031 	andeq	r0, r0, r1, lsr r0
   11af8:	00393624 	eorseq	r3, r9, r4, lsr #12
   11afc:	00000000 	andeq	r0, r0, r0
   11b00:	00000100 	andeq	r0, r0, r0, lsl #2
   11b04:	00000000 	andeq	r0, r0, r0
   11b08:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
   11b0c:	273f050e 	ldrcs	r0, [pc, -lr, lsl #10]!
   11b10:	44260000 	strtmi	r0, [r6], #-0
   11b14:	00000039 	andeq	r0, r0, r9, lsr r0
   11b18:	0000001d 	andeq	r0, r0, sp, lsl r0
   11b1c:	0039c500 	eorseq	ip, r9, r0, lsl #10
   11b20:	01220000 			; <UNDEFINED> instruction: 0x01220000
   11b24:	000002fa 	strdeq	r0, [r0], -sl
   11b28:	060e5101 	streq	r5, [lr], -r1, lsl #2
   11b2c:	0029e801 	eoreq	lr, r9, r1, lsl #16
   11b30:	002a3c08 	eoreq	r3, sl, r8, lsl #24
   11b34:	00cfcf08 	sbceq	ip, pc, r8, lsl #30
   11b38:	27b60100 	ldrcs	r0, [r6, r0, lsl #2]!
   11b3c:	48180000 	ldmdami	r8, {}	; <UNPREDICTABLE>
   11b40:	01000038 	tsteq	r0, r8, lsr r0
   11b44:	19100e53 	ldmdbne	r0, {r0, r1, r4, r6, r9, sl, fp}
   11b48:	f5000001 			; <UNDEFINED> instruction: 0xf5000001
   11b4c:	ef0000cf 	svc	0x000000cf
   11b50:	240000cf 	strcs	r0, [r0], #-207	; 0xffffff31
   11b54:	00003936 	andeq	r3, r0, r6, lsr r9
   11b58:	08002a02 	stmdaeq	r0, {r1, r9, fp, sp}
   11b5c:	002a0201 	eoreq	r0, sl, r1, lsl #4
   11b60:	002a1208 	eoreq	r1, sl, r8, lsl #4
   11b64:	0e7e0108 	rpweqe	f0, f6, #0.0
   11b68:	00279a09 	eoreq	r9, r7, r9, lsl #20
   11b6c:	39442600 	stmdbcc	r4, {r9, sl, sp}^
   11b70:	1d000000 	stcne	0, cr0, [r0, #-0]
   11b74:	080029ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, fp, sp}
   11b78:	000027b6 			; <UNDEFINED> instruction: 0x000027b6
   11b7c:	002a001d 	eoreq	r0, sl, sp, lsl r0
   11b80:	0039d308 	eorseq	sp, r9, r8, lsl #6
   11b84:	2a2a1d00 	bcs	a98f8c <_Min_Heap_Size+0xa9878c>
   11b88:	39e20800 	stmibcc	r2!, {fp}^
   11b8c:	32000000 	andcc	r0, r0, #0
   11b90:	00003932 	andeq	r3, r0, r2, lsr r9
   11b94:	130db701 	movwne	fp, #55041	; 0xd701
   11b98:	00011901 	andeq	r1, r1, r1, lsl #18
   11b9c:	00297c00 	eoreq	r7, r9, r0, lsl #24
   11ba0:	0029e808 	eoreq	lr, r9, r8, lsl #16
   11ba4:	00d01e08 	sbcseq	r1, r0, r8, lsl #28
   11ba8:	28b60100 	ldmcs	r6!, {r8}
   11bac:	48180000 	ldmdami	r8, {}	; <UNPREDICTABLE>
   11bb0:	01000038 	tsteq	r0, r8, lsr r0
   11bb4:	19100db9 	ldmdbne	r0, {r0, r3, r4, r5, r7, r8, sl, fp}
   11bb8:	68000001 	stmdavs	r0, {r0}
   11bbc:	620000d0 	andvs	r0, r0, #208	; 0xd0
   11bc0:	180000d0 	stmdane	r0, {r4, r6, r7}
   11bc4:	0000325f 	andeq	r3, r0, pc, asr r2
   11bc8:	100dba01 	andne	fp, sp, r1, lsl #20
   11bcc:	00000119 	andeq	r0, r0, r9, lsl r1
   11bd0:	0000d096 	muleq	r0, r6, r0
   11bd4:	0000d094 	muleq	r0, r4, r0
   11bd8:	00404e16 	subeq	r4, r0, r6, lsl lr
   11bdc:	0dbb0100 	ldfeqs	f0, [fp]
   11be0:	0005f90a 	andeq	pc, r5, sl, lsl #18
   11be4:	6c910200 	lfmvs	f0, 4, [r1], {0}
   11be8:	003d7418 	eorseq	r7, sp, r8, lsl r4
   11bec:	0dbc0100 	ldfeqs	f0, [ip]
   11bf0:	0000ea14 	andeq	lr, r0, r4, lsl sl
   11bf4:	00d0ab00 	sbcseq	sl, r0, r0, lsl #22
   11bf8:	00d0a900 	sbcseq	sl, r0, r0, lsl #18
   11bfc:	365a1800 	ldrbcc	r1, [sl], -r0, lsl #16
   11c00:	bd010000 	stclt	0, cr0, [r1, #-0]
   11c04:	0119100d 	tsteq	r9, sp
   11c08:	d0c30000 	sbcle	r0, r3, r0
   11c0c:	d0bf0000 	adcsle	r0, pc, r0
   11c10:	e82d0000 	stmda	sp!, {}	; <UNPREDICTABLE>
   11c14:	1600000b 	strne	r0, [r0], -fp
   11c18:	00003a1f 	andeq	r3, r0, pc, lsl sl
   11c1c:	1c0e0401 	cfstrsne	mvf0, [lr], {1}
   11c20:	000008f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11c24:	16609102 	strbtne	r9, [r0], -r2, lsl #2
   11c28:	00003292 	muleq	r0, r2, r2
   11c2c:	1b0e0501 	blne	393038 <_Min_Heap_Size+0x392838>
   11c30:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
   11c34:	16649102 	strbtne	r9, [r4], -r2, lsl #2
   11c38:	00003b58 	andeq	r3, r0, r8, asr fp
   11c3c:	240e0601 	strcs	r0, [lr], #-1537	; 0xfffff9ff
   11c40:	00000029 	andeq	r0, r0, r9, lsr #32
   11c44:	1e689102 	lgnnee	f1, f2
   11c48:	080029b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, fp, sp}
   11c4c:	00000917 	andeq	r0, r0, r7, lsl r9
   11c50:	0000288e 	andeq	r2, r0, lr, lsl #17
   11c54:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   11c58:	011f6091 			; <UNDEFINED> instruction: 0x011f6091
   11c5c:	64910251 	ldrvs	r0, [r1], #593	; 0x251
   11c60:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
   11c64:	20006891 	mulcs	r0, r1, r8
   11c68:	080029cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, fp, sp}
   11c6c:	0000369a 	muleq	r0, sl, r6
   11c70:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
   11c74:	0025d503 	eoreq	sp, r5, r3, lsl #10
   11c78:	51011f08 	tstpl	r1, r8, lsl #30
   11c7c:	1f6c9102 	svcne	0x006c9102
   11c80:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
   11c84:	7d021f00 	stcvc	15, cr1, [r2, #-0]
   11c88:	00750200 	rsbseq	r0, r5, r0, lsl #4
   11c8c:	21000000 	mrscs	r0, (UNDEF: 0)
   11c90:	003db601 	eorseq	fp, sp, r1, lsl #12
   11c94:	0d560100 	ldfeqe	f0, [r6, #-0]
   11c98:	01190110 	tsteq	r9, r0, lsl r1
	...
   11ca4:	d0e20000 	rscle	r0, r2, r0
   11ca8:	e4010000 	str	r0, [r1], #-0
   11cac:	1b000029 	blne	11d58 <_Min_Heap_Size+0x11558>
   11cb0:	000034fe 	strdeq	r3, [r0], -lr
   11cb4:	310d5601 	tstcc	sp, r1, lsl #12
   11cb8:	000003a7 	andeq	r0, r0, r7, lsr #7
   11cbc:	0000d106 	andeq	sp, r0, r6, lsl #2
   11cc0:	0000d102 	andeq	sp, r0, r2, lsl #2
   11cc4:	002a9e18 	eoreq	r9, sl, r8, lsl lr
   11cc8:	0d580100 	ldfeqe	f0, [r8, #-0]
   11ccc:	00011914 	andeq	r1, r1, r4, lsl r9
   11cd0:	00d12c00 	sbcseq	r2, r1, r0, lsl #24
   11cd4:	00d12400 	sbcseq	r2, r1, r0, lsl #8
   11cd8:	41051800 	tstmi	r5, r0, lsl #16
   11cdc:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
   11ce0:	0671170d 	ldrbteq	r1, [r1], -sp, lsl #14
   11ce4:	d1670000 	cmnle	r7, r0
   11ce8:	d1630000 	cmnle	r3, r0
   11cec:	5d180000 	ldcpl	0, cr0, [r8, #-0]
   11cf0:	0100002a 	tsteq	r0, sl, lsr #32
   11cf4:	2f150d5a 	svccs	0x00150d5a
   11cf8:	87000001 	strhi	r0, [r0, -r1]
   11cfc:	850000d1 	strhi	r0, [r0, #-209]	; 0xffffff2f
   11d00:	1c0000d1 	stcne	0, cr0, [r0], {209}	; 0xd1
	...
   11d0c:	0000294d 	andeq	r2, r0, sp, asr #18
   11d10:	00281318 	eoreq	r1, r8, r8, lsl r3
   11d14:	0d930100 	ldfeqs	f0, [r3]
   11d18:	00039115 	andeq	r9, r3, r5, lsl r1
   11d1c:	00d19c00 	sbcseq	r9, r1, r0, lsl #24
   11d20:	00d19a00 	sbcseq	r9, r1, r0, lsl #20
   11d24:	0b240000 	bleq	911d2c <_Min_Heap_Size+0x91152c>
   11d28:	00000039 	andeq	r0, r0, r9, lsr r0
   11d2c:	07000000 	streq	r0, [r0, -r0]
	...
   11d38:	220d7501 	andcs	r7, sp, #4194304	; 0x400000
   11d3c:	0000297a 	andeq	r2, r0, sl, ror r9
   11d40:	00391d25 	eorseq	r1, r9, r5, lsr #26
   11d44:	00d1b100 	sbcseq	fp, r1, r0, lsl #2
   11d48:	00d1af00 	sbcseq	sl, r1, r0, lsl #30
   11d4c:	39292600 	stmdbcc	r9!, {r9, sl, sp}
   11d50:	24000000 	strcs	r0, [r0], #-0
   11d54:	000038f0 	strdeq	r3, [r0], -r0
   11d58:	00000000 	andeq	r0, r0, r0
   11d5c:	00000005 	andeq	r0, r0, r5
   11d60:	00000000 	andeq	r0, r0, r0
   11d64:	0dad0100 	stfeqs	f0, [sp]
   11d68:	0029a209 	eoreq	sl, r9, r9, lsl #4
   11d6c:	38fe2800 	ldmcc	lr!, {fp, sp}^
   11d70:	d1c60000 	bicle	r0, r6, r0
   11d74:	d1c40000 	bicle	r0, r4, r0
   11d78:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
   11d7c:	00000000 	andeq	r0, r0, r0
   11d80:	00002a84 	andeq	r2, r0, r4, lsl #21
   11d84:	000029b6 			; <UNDEFINED> instruction: 0x000029b6
   11d88:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   11d8c:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
   11d90:	00000000 	andeq	r0, r0, r0
   11d94:	00003951 	andeq	r3, r0, r1, asr r9
   11d98:	000029ca 	andeq	r2, r0, sl, asr #19
   11d9c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   11da0:	20000077 	andcs	r0, r0, r7, ror r0
   11da4:	00000000 	andeq	r0, r0, r0
   11da8:	000039f0 	strdeq	r3, [r0], -r0
   11dac:	0550011f 	ldrbeq	r0, [r0, #-287]	; 0xfffffee1
   11db0:	00876c03 	addeq	r6, r7, r3, lsl #24
   11db4:	51011f20 	tstpl	r1, r0, lsr #30
   11db8:	00187402 	andseq	r7, r8, r2, lsl #8
   11dbc:	66012200 	strvs	r2, [r1], -r0, lsl #4
   11dc0:	01000041 	tsteq	r0, r1, asr #32
   11dc4:	010a0d19 	tsteq	sl, r9, lsl sp
	...
   11dd0:	0000d1d9 	ldrdeq	sp, [r0], -r9
   11dd4:	002a8401 	eoreq	r8, sl, r1, lsl #8
   11dd8:	34fe1b00 	ldrbtcc	r1, [lr], #2816	; 0xb00
   11ddc:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
   11de0:	03a7240d 			; <UNDEFINED> instruction: 0x03a7240d
   11de4:	d2010000 	andle	r0, r1, #0
   11de8:	d1f90000 	mvnsle	r0, r0
   11dec:	05180000 	ldreq	r0, [r8, #-0]
   11df0:	01000041 	tsteq	r0, r1, asr #32
   11df4:	71170d1b 	tstvc	r7, fp, lsl sp
   11df8:	40000006 	andmi	r0, r0, r6
   11dfc:	380000d2 	stmdacc	r0, {r1, r4, r6, r7}
   11e00:	1c0000d2 	stcne	0, cr0, [r0], {210}	; 0xd2
	...
   11e0c:	00002a4d 	andeq	r2, r0, sp, asr #20
   11e10:	00281318 	eoreq	r1, r8, r8, lsl r3
   11e14:	0d3a0100 	ldfeqs	f0, [sl, #-0]
   11e18:	00039115 	andeq	r9, r3, r5, lsl r1
   11e1c:	00d27900 	sbcseq	r7, r2, r0, lsl #18
   11e20:	00d27700 	sbcseq	r7, r2, r0, lsl #14
   11e24:	001d0000 	andseq	r0, sp, r0
   11e28:	6f000000 	svcvs	0x00000000
   11e2c:	1e000039 	mcrne	0, 0, r0, cr0, cr9, {1}
   11e30:	00000000 	andeq	r0, r0, r0
   11e34:	00002a84 	andeq	r2, r0, r4, lsl #21
   11e38:	00002a6a 	andeq	r2, r0, sl, ror #20
   11e3c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   11e40:	1d000074 	stcne	0, cr0, [r0, #-464]	; 0xfffffe30
   11e44:	00000000 	andeq	r0, r0, r0
   11e48:	0000397d 	andeq	r3, r0, sp, ror r9
   11e4c:	00000020 	andeq	r0, r0, r0, lsr #32
   11e50:	00395100 	eorseq	r5, r9, r0, lsl #2
   11e54:	50011f00 	andpl	r1, r1, r0, lsl #30
   11e58:	00007502 	andeq	r7, r0, r2, lsl #10
   11e5c:	3cc82c00 	stclcc	12, cr2, [r8], {0}
   11e60:	d3010000 	movwle	r0, #4096	; 0x1000
   11e64:	1901170c 	stmdbne	r1, {r2, r3, r8, r9, sl, ip}
   11e68:	00000001 	andeq	r0, r0, r1
   11e6c:	00000000 	andeq	r0, r0, r0
   11e70:	02000000 	andeq	r0, r0, #0
   11e74:	ff01007d 			; <UNDEFINED> instruction: 0xff01007d
   11e78:	1b00002a 	blne	11f28 <_Min_Heap_Size+0x11728>
   11e7c:	00003b7a 	andeq	r3, r0, sl, ror fp
   11e80:	420cd301 	andmi	sp, ip, #67108864	; 0x4000000
   11e84:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
   11e88:	0000d2a0 	andeq	sp, r0, r0, lsr #5
   11e8c:	0000d28c 	andeq	sp, r0, ip, lsl #5
   11e90:	00384818 	eorseq	r4, r8, r8, lsl r8
   11e94:	0cd50100 	ldfeqe	f0, [r5], {0}
   11e98:	00011914 	andeq	r1, r1, r4, lsl r9
   11e9c:	00d32b00 	sbcseq	r2, r3, r0, lsl #22
   11ea0:	00d32500 	sbcseq	r2, r3, r0, lsl #10
   11ea4:	41051800 	tstmi	r5, r0, lsl #16
   11ea8:	d6010000 	strle	r0, [r1], -r0
   11eac:	2b051d0c 	blcs	1592e4 <_Min_Heap_Size+0x158ae4>
   11eb0:	d36b0000 	cmnle	fp, #0
   11eb4:	d3570000 	cmple	r7, #0
   11eb8:	00300000 	eorseq	r0, r0, r0
   11ebc:	00000000 	andeq	r0, r0, r0
   11ec0:	33000000 	movwcc	r0, #0
   11ec4:	ea010078 	b	520ac <_Min_Heap_Size+0x518ac>
   11ec8:	0119240c 	tsteq	r9, ip, lsl #8
   11ecc:	d3f40000 	mvnsle	r0, #0
   11ed0:	d3f00000 	mvnsle	r0, #0
   11ed4:	00000000 	andeq	r0, r0, r0
   11ed8:	064d0407 	strbeq	r0, [sp], -r7, lsl #8
   11edc:	ff030000 			; <UNDEFINED> instruction: 0xff030000
   11ee0:	2200002a 	andcs	r0, r0, #42	; 0x2a
   11ee4:	003f9f01 	eorseq	r9, pc, r1, lsl #30
   11ee8:	0c310100 	ldfeqs	f0, [r1], #-0
   11eec:	0000010a 	andeq	r0, r0, sl, lsl #2
   11ef0:	00000000 	andeq	r0, r0, r0
   11ef4:	d4120000 	ldrle	r0, [r2], #-0
   11ef8:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
   11efc:	1b00002c 	blne	11fb4 <_Min_Heap_Size+0x117b4>
   11f00:	00003d53 	andeq	r3, r0, r3, asr sp
   11f04:	250c3101 	strcs	r3, [ip, #-257]	; 0xfffffeff
   11f08:	000003a7 	andeq	r0, r0, r7, lsr #7
   11f0c:	0000d438 	andeq	sp, r0, r8, lsr r4
   11f10:	0000d432 	andeq	sp, r0, r2, lsr r4
   11f14:	00410518 	subeq	r0, r1, r8, lsl r5
   11f18:	0c330100 	ldfeqs	f0, [r3], #-0
   11f1c:	00066611 	andeq	r6, r6, r1, lsl r6
   11f20:	00d46500 	sbcseq	r6, r4, r0, lsl #10
   11f24:	00d46100 	sbcseq	r6, r4, r0, lsl #2
   11f28:	0af82300 	beq	ffe1ab30 <_estack+0xdfe11190>
   11f2c:	2b6d0000 	blcs	1b51f34 <_Min_Heap_Size+0x1b51734>
   11f30:	78330000 	ldmdavc	r3!, {}	; <UNPREDICTABLE>
   11f34:	0c580100 	ldfeqe	f0, [r8], {-0}
   11f38:	0001191c 	andeq	r1, r1, ip, lsl r9
   11f3c:	00d48900 	sbcseq	r8, r4, r0, lsl #18
   11f40:	00d48300 	sbcseq	r8, r4, r0, lsl #6
   11f44:	10230000 	eorne	r0, r3, r0
   11f48:	b000000b 	andlt	r0, r0, fp
   11f4c:	1800002b 	stmdane	r0, {r0, r1, r3, r5}
   11f50:	00003baf 	andeq	r3, r0, pc, lsr #23
   11f54:	190c9201 	stmdbne	ip, {r0, r9, ip, pc}
   11f58:	0000012f 	andeq	r0, r0, pc, lsr #2
   11f5c:	0000d4b9 			; <UNDEFINED> instruction: 0x0000d4b9
   11f60:	0000d4b3 			; <UNDEFINED> instruction: 0x0000d4b3
   11f64:	0000001d 	andeq	r0, r0, sp, lsl r0
   11f68:	00396f00 	eorseq	r6, r9, r0, lsl #30
   11f6c:	00001d00 	andeq	r1, r0, r0, lsl #26
   11f70:	14e60000 	strbtne	r0, [r6], #0
   11f74:	001d0000 	andseq	r0, sp, r0
   11f78:	7d000000 	stcvc	0, cr0, [r0, #-0]
   11f7c:	1d000039 	stcne	0, cr0, [r0, #-228]	; 0xffffff1c
   11f80:	00000000 	andeq	r0, r0, r0
   11f84:	00001caf 	andeq	r1, r0, pc, lsr #25
   11f88:	00001d00 	andeq	r1, r0, r0, lsl #26
   11f8c:	396f0000 	stmdbcc	pc!, {}^	; <UNPREDICTABLE>
   11f90:	001e0000 	andseq	r0, lr, r0
   11f94:	51000000 	mrspl	r0, (UNDEF: 0)
   11f98:	cd000039 	stcgt	0, cr0, [r0, #-228]	; 0xffffff1c
   11f9c:	1f00002b 	svcne	0x0000002b
   11fa0:	75025001 	strvc	r5, [r2, #-1]
   11fa4:	001e0000 	andseq	r0, lr, r0
   11fa8:	51000000 	mrspl	r0, (UNDEF: 0)
   11fac:	e1000039 	tst	r0, r9, lsr r0
   11fb0:	1f00002b 	svcne	0x0000002b
   11fb4:	74025001 	strvc	r5, [r2], #-1
   11fb8:	001e0018 	andseq	r0, lr, r8, lsl r0
   11fbc:	f0000000 			; <UNDEFINED> instruction: 0xf0000000
   11fc0:	fe000039 	mcr2	0, 0, r0, cr0, cr9, {1}
   11fc4:	1f00002b 	svcne	0x0000002b
   11fc8:	03055001 	movweq	r5, #20481	; 0x5001
   11fcc:	2000878c 	andcs	r8, r0, ip, lsl #15
   11fd0:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
   11fd4:	1d000075 	stcne	0, cr0, [r0, #-468]	; 0xfffffe2c
   11fd8:	00000000 	andeq	r0, r0, r0
   11fdc:	0000397d 	andeq	r3, r0, sp, ror r9
   11fe0:	04012200 	streq	r2, [r1], #-512	; 0xfffffe00
   11fe4:	0100003b 	tsteq	r0, fp, lsr r0
   11fe8:	010a0acd 	smlabteq	sl, sp, sl, r0
	...
   11ff4:	0000d4e6 	andeq	sp, r0, r6, ror #9
   11ff8:	002ce801 	eoreq	lr, ip, r1, lsl #16
   11ffc:	3b7a1b00 	blcc	1e98c04 <_Min_Heap_Size+0x1e98404>
   12000:	cd010000 	stcgt	0, cr0, [r1, #-0]
   12004:	03a7290a 			; <UNDEFINED> instruction: 0x03a7290a
   12008:	d50c0000 	strle	r0, [ip, #-0]
   1200c:	d5060000 	strle	r0, [r6, #-0]
   12010:	4f1b0000 	svcmi	0x001b0000
   12014:	0100003a 	tsteq	r0, sl, lsr r0
   12018:	2f280ace 	svccs	0x00280ace
   1201c:	3f000001 	svccc	0x00000001
   12020:	350000d5 	strcc	r0, [r0, #-213]	; 0xffffff2b
   12024:	180000d5 	stmdane	r0, {r0, r2, r4, r6, r7}
   12028:	00004105 	andeq	r4, r0, r5, lsl #2
   1202c:	110ad001 	tstne	sl, r1
   12030:	00000666 	andeq	r0, r0, r6, ror #12
   12034:	0000d584 	andeq	sp, r0, r4, lsl #11
   12038:	0000d580 	andeq	sp, r0, r0, lsl #11
   1203c:	00423918 	subeq	r3, r2, r8, lsl r9
   12040:	0ad10100 	beq	ff452448 <_estack+0xdf448aa8>
   12044:	00012f15 	andeq	r2, r1, r5, lsl pc
   12048:	00d5a800 	sbcseq	sl, r5, r0, lsl #16
   1204c:	00d5a200 	sbcseq	sl, r5, r0, lsl #4
   12050:	3f6d1800 	svccc	0x006d1800
   12054:	d1010000 	mrsle	r0, (UNDEF: 1)
   12058:	012f2c0a 			; <UNDEFINED> instruction: 0x012f2c0a
   1205c:	d5d30000 	ldrble	r0, [r3]
   12060:	d5d10000 	ldrble	r0, [r1]
   12064:	9e180000 	cdpls	0, 1, cr0, cr8, cr0, {0}
   12068:	0100002a 	tsteq	r0, sl, lsr #32
   1206c:	19140ad2 	ldmdbne	r4, {r1, r4, r6, r7, r9, fp}
   12070:	ee000001 	cdp	0, 0, cr0, cr0, cr1, {0}
   12074:	e60000d5 			; <UNDEFINED> instruction: 0xe60000d5
   12078:	1c0000d5 	stcne	0, cr0, [r0], {213}	; 0xd5
	...
   12084:	00002cc5 	andeq	r2, r0, r5, asr #25
   12088:	00281318 	eoreq	r1, r8, r8, lsl r3
   1208c:	0b6c0100 	bleq	1b12494 <_Min_Heap_Size+0x1b11c94>
   12090:	00039115 	andeq	r9, r3, r5, lsl r1
   12094:	00d62600 	sbcseq	r2, r6, r0, lsl #12
   12098:	00d62400 	sbcseq	r2, r6, r0, lsl #8
   1209c:	001d0000 	andseq	r0, sp, r0
   120a0:	6f000000 	svcvs	0x00000000
   120a4:	1d000039 	stcne	0, cr0, [r0, #-228]	; 0xffffff1c
   120a8:	00000000 	andeq	r0, r0, r0
   120ac:	0000397d 	andeq	r3, r0, sp, ror r9
   120b0:	00000020 	andeq	r0, r0, r0, lsr #32
   120b4:	00395100 	eorseq	r5, r9, r0, lsl #2
   120b8:	50011f00 	andpl	r1, r1, r0, lsl #30
   120bc:	00007502 	andeq	r7, r0, r2, lsl #10
   120c0:	15012900 	strne	r2, [r1, #-2304]	; 0xfffff700
   120c4:	0100003b 	tsteq	r0, fp, lsr r0
   120c8:	01110a9d 			; <UNDEFINED> instruction: 0x01110a9d
   120cc:	0000012f 	andeq	r0, r0, pc, lsr #2
	...
   120d8:	01007d02 	tsteq	r0, r2, lsl #26
   120dc:	00002dad 	andeq	r2, r0, sp, lsr #27
   120e0:	003b7a1b 	eorseq	r7, fp, fp, lsl sl
   120e4:	0a9d0100 	beq	fe7524ec <_estack+0xde748b4c>
   120e8:	0003b342 	andeq	fp, r3, r2, asr #6
   120ec:	00d63d00 	sbcseq	r3, r6, r0, lsl #26
   120f0:	00d63900 	sbcseq	r3, r6, r0, lsl #18
   120f4:	41051800 	tstmi	r5, r0, lsl #16
   120f8:	9f010000 	svcls	0x00010000
   120fc:	2aff170a 	bcs	fffd7d2c <_estack+0xdffce38c>
   12100:	d65d0000 	ldrble	r0, [sp], -r0
   12104:	d65b0000 	ldrble	r0, [fp], -r0
   12108:	25180000 	ldrcs	r0, [r8, #-0]
   1210c:	0100002a 	tsteq	r0, sl, lsr #32
   12110:	2f150aa0 	svccs	0x00150aa0
   12114:	72000001 	andvc	r0, r0, #1
   12118:	700000d6 	ldrdvc	r0, [r0], -r6
   1211c:	180000d6 	stmdane	r0, {r1, r2, r4, r6, r7}
   12120:	00002a5d 	andeq	r2, r0, sp, asr sl
   12124:	150aa101 	strne	sl, [sl, #-257]	; 0xfffffeff
   12128:	0000012f 	andeq	r0, r0, pc, lsr #2
   1212c:	0000d687 	andeq	sp, r0, r7, lsl #13
   12130:	0000d685 	andeq	sp, r0, r5, lsl #13
   12134:	00390b24 	eorseq	r0, r9, r4, lsr #22
   12138:	00000000 	andeq	r0, r0, r0
   1213c:	00000700 	andeq	r0, r0, r0, lsl #14
   12140:	00000000 	andeq	r0, r0, r0
   12144:	ba010000 	blt	5214c <_Min_Heap_Size+0x5194c>
   12148:	2d88320a 	sfmcs	f3, 4, [r8, #40]	; 0x28
   1214c:	1d250000 	stcne	0, cr0, [r5, #-0]
   12150:	9c000039 	stcls	0, cr0, [r0], {57}	; 0x39
   12154:	9a0000d6 	bls	124b4 <_Min_Heap_Size+0x11cb4>
   12158:	260000d6 			; <UNDEFINED> instruction: 0x260000d6
   1215c:	00003929 	andeq	r3, r0, r9, lsr #18
   12160:	38f02700 	ldmcc	r0!, {r8, r9, sl, sp}^
   12164:	00000000 	andeq	r0, r0, r0
   12168:	00010000 	andeq	r0, r1, r0
   1216c:	00000000 	andeq	r0, r0, r0
   12170:	01000000 	mrseq	r0, (UNDEF: 0)
   12174:	28090ac1 	stmdacs	r9, {r0, r6, r7, r9, fp}
   12178:	000038fe 	strdeq	r3, [r0], -lr
   1217c:	0000d6b1 			; <UNDEFINED> instruction: 0x0000d6b1
   12180:	0000d6af 	andeq	sp, r0, pc, lsr #13
   12184:	01210000 			; <UNDEFINED> instruction: 0x01210000
   12188:	00004079 	andeq	r4, r0, r9, ror r0
   1218c:	110a8301 	tstne	sl, r1, lsl #6
   12190:	00012f01 	andeq	r2, r1, r1, lsl #30
	...
   1219c:	00d6c400 	sbcseq	ip, r6, r0, lsl #8
   121a0:	2e1f0100 	mufcse	f0, f7, f0
   121a4:	7a1b0000 	bvc	6d21ac <_Min_Heap_Size+0x6d19ac>
   121a8:	0100003b 	tsteq	r0, fp, lsr r0
   121ac:	b33b0a83 	teqlt	fp, #536576	; 0x83000
   121b0:	ea000003 	b	121c4 <_Min_Heap_Size+0x119c4>
   121b4:	e40000d6 	str	r0, [r0], #-214	; 0xffffff2a
   121b8:	180000d6 	stmdane	r0, {r1, r2, r4, r6, r7}
   121bc:	00004105 	andeq	r4, r0, r5, lsl #2
   121c0:	170a8501 	strne	r8, [sl, -r1, lsl #10]
   121c4:	00002aff 	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
   121c8:	0000d715 	andeq	sp, r0, r5, lsl r7
   121cc:	0000d713 	andeq	sp, r0, r3, lsl r7
   121d0:	002a2518 	eoreq	r2, sl, r8, lsl r5
   121d4:	0a860100 	beq	fe1925dc <_estack+0xde188c3c>
   121d8:	00012f15 	andeq	r2, r1, r5, lsl pc
   121dc:	00d72a00 	sbcseq	r2, r7, r0, lsl #20
   121e0:	00d72800 	sbcseq	r2, r7, r0, lsl #16
   121e4:	00001d00 	andeq	r1, r0, r0, lsl #26
   121e8:	396f0000 	stmdbcc	pc!, {}^	; <UNPREDICTABLE>
   121ec:	001d0000 	andseq	r0, sp, r0
   121f0:	7d000000 	stcvc	0, cr0, [r0, #-0]
   121f4:	00000039 	andeq	r0, r0, r9, lsr r0
   121f8:	3a930129 	bcc	fe4d26a4 <_estack+0xde4c8d04>
   121fc:	53010000 	movwpl	r0, #4096	; 0x1000
   12200:	2f01110a 	svccs	0x0001110a
   12204:	00000001 	andeq	r0, r0, r1
   12208:	00000000 	andeq	r0, r0, r0
   1220c:	02000000 	andeq	r0, r0, #0
   12210:	e401007d 	str	r0, [r1], #-125	; 0xffffff83
   12214:	1b00002e 	blne	122d4 <_Min_Heap_Size+0x11ad4>
   12218:	00003b7a 	andeq	r3, r0, sl, ror fp
   1221c:	3e0a5301 	cdpcc	3, 0, cr5, cr10, cr1, {0}
   12220:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
   12224:	0000d741 	andeq	sp, r0, r1, asr #14
   12228:	0000d73d 	andeq	sp, r0, sp, lsr r7
   1222c:	00410518 	subeq	r0, r1, r8, lsl r5
   12230:	0a550100 	beq	1552638 <_Min_Heap_Size+0x1551e38>
   12234:	002aff17 	eoreq	pc, sl, r7, lsl pc	; <UNPREDICTABLE>
   12238:	00d76100 	sbcseq	r6, r7, r0, lsl #2
   1223c:	00d75f00 	sbcseq	r5, r7, r0, lsl #30
   12240:	2a251800 	bcs	958248 <_Min_Heap_Size+0x957a48>
   12244:	56010000 	strpl	r0, [r1], -r0
   12248:	012f150a 			; <UNDEFINED> instruction: 0x012f150a
   1224c:	d7760000 	ldrble	r0, [r6, -r0]!
   12250:	d7740000 	ldrble	r0, [r4, -r0]!
   12254:	5d180000 	ldcpl	0, cr0, [r8, #-0]
   12258:	0100002a 	tsteq	r0, sl, lsr #32
   1225c:	2f150a57 	svccs	0x00150a57
   12260:	8b000001 	blhi	1226c <_Min_Heap_Size+0x11a6c>
   12264:	890000d7 	stmdbhi	r0, {r0, r1, r2, r4, r6, r7}
   12268:	240000d7 	strcs	r0, [r0], #-215	; 0xffffff29
   1226c:	0000390b 	andeq	r3, r0, fp, lsl #18
   12270:	00000000 	andeq	r0, r0, r0
   12274:	00000007 	andeq	r0, r0, r7
   12278:	00000000 	andeq	r0, r0, r0
   1227c:	0a700100 	beq	1c12684 <_Min_Heap_Size+0x1c11e84>
   12280:	002ebf32 	eoreq	fp, lr, r2, lsr pc
   12284:	391d2500 	ldmdbcc	sp, {r8, sl, sp}
   12288:	d7a00000 	strle	r0, [r0, r0]!
   1228c:	d79e0000 	ldrle	r0, [lr, r0]
   12290:	29260000 	stmdbcs	r6!, {}	; <UNPREDICTABLE>
   12294:	00000039 	andeq	r0, r0, r9, lsr r0
   12298:	0038f027 	eorseq	pc, r8, r7, lsr #32
   1229c:	00000000 	andeq	r0, r0, r0
   122a0:	00000100 	andeq	r0, r0, r0, lsl #2
   122a4:	00000000 	andeq	r0, r0, r0
   122a8:	77010000 	strvc	r0, [r1, -r0]
   122ac:	fe28090a 	vselge.f16	s0, s16, s20
   122b0:	b5000038 	strlt	r0, [r0, #-56]	; 0xffffffc8
   122b4:	b30000d7 	movwlt	r0, #215	; 0xd7
   122b8:	000000d7 	ldrdeq	r0, [r0], -r7
   122bc:	94012100 	strls	r2, [r1], #-256	; 0xffffff00
   122c0:	01000037 	tsteq	r0, r7, lsr r0
   122c4:	01110a39 	tsteq	r1, r9, lsr sl
   122c8:	0000012f 	andeq	r0, r0, pc, lsr #2
	...
   122d4:	0000d7c8 	andeq	sp, r0, r8, asr #15
   122d8:	002f5601 	eoreq	r5, pc, r1, lsl #12
   122dc:	3b7a1b00 	blcc	1e98ee4 <_Min_Heap_Size+0x1e986e4>
   122e0:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
   122e4:	03b3370a 			; <UNDEFINED> instruction: 0x03b3370a
   122e8:	d7ee0000 	strble	r0, [lr, r0]!
   122ec:	d7e80000 	strble	r0, [r8, r0]!
   122f0:	05180000 	ldreq	r0, [r8, #-0]
   122f4:	01000041 	tsteq	r0, r1, asr #32
   122f8:	ff170a3b 			; <UNDEFINED> instruction: 0xff170a3b
   122fc:	1900002a 	stmdbne	r0, {r1, r3, r5}
   12300:	170000d8 			; <UNDEFINED> instruction: 0x170000d8
   12304:	180000d8 	stmdane	r0, {r3, r4, r6, r7}
   12308:	00002a25 	andeq	r2, r0, r5, lsr #20
   1230c:	150a3c01 	strne	r3, [sl, #-3073]	; 0xfffff3ff
   12310:	0000012f 	andeq	r0, r0, pc, lsr #2
   12314:	0000d82e 	andeq	sp, r0, lr, lsr #16
   12318:	0000d82c 	andeq	sp, r0, ip, lsr #16
   1231c:	0000001d 	andeq	r0, r0, sp, lsl r0
   12320:	00396f00 	eorseq	r6, r9, r0, lsl #30
   12324:	00001d00 	andeq	r1, r0, r0, lsl #26
   12328:	397d0000 	ldmdbcc	sp!, {}^	; <UNPREDICTABLE>
   1232c:	21000000 	mrscs	r0, (UNDEF: 0)
   12330:	00394501 	eorseq	r4, r9, r1, lsl #10
   12334:	09b50100 	ldmibeq	r5!, {r8}
   12338:	04f20110 	ldrbteq	r0, [r2], #272	; 0x110
	...
   12344:	d8410000 	stmdale	r1, {}^	; <UNPREDICTABLE>
   12348:	39010000 	stmdbcc	r1, {}	; <UNPREDICTABLE>
   1234c:	1b000030 	blne	12414 <_Min_Heap_Size+0x11c14>
   12350:	00003b7a 	andeq	r3, r0, sl, ror fp
   12354:	2c09b501 	cfstr32cs	mvfx11, [r9], {1}
   12358:	000003a7 	andeq	r0, r0, r7, lsr #7
   1235c:	0000d883 	andeq	sp, r0, r3, lsl #17
   12360:	0000d879 	andeq	sp, r0, r9, ror r8
   12364:	0034f618 	eorseq	pc, r4, r8, lsl r6	; <UNPREDICTABLE>
   12368:	09b70100 	ldmibeq	r7!, {r8}
   1236c:	0004f214 	andeq	pc, r4, r4, lsl r2	; <UNPREDICTABLE>
   12370:	00d8c900 	sbcseq	ip, r8, r0, lsl #18
   12374:	00d8c500 	sbcseq	ip, r8, r0, lsl #10
   12378:	32f11800 	rscscc	r1, r1, #0, 16
   1237c:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
   12380:	1b161809 	blne	5983ac <_Min_Heap_Size+0x597bac>
   12384:	d8eb0000 	stmiale	fp!, {}^	; <UNPREDICTABLE>
   12388:	d8e70000 	stmiale	r7!, {}^	; <UNPREDICTABLE>
   1238c:	74180000 	ldrvc	r0, [r8], #-0
   12390:	01000033 	tsteq	r0, r3, lsr r0
   12394:	161809b9 			; <UNDEFINED> instruction: 0x161809b9
   12398:	0d00001b 	stceq	0, cr0, [r0, #-108]	; 0xffffff94
   1239c:	090000d9 	stmdbeq	r0, {r0, r3, r4, r6, r7}
   123a0:	180000d9 	stmdane	r0, {r0, r3, r4, r6, r7}
   123a4:	00003366 	andeq	r3, r0, r6, ror #6
   123a8:	1809ba01 	stmdane	r9, {r0, r9, fp, ip, sp, pc}
   123ac:	00001b16 	andeq	r1, r0, r6, lsl fp
   123b0:	0000d92f 	andeq	sp, r0, pc, lsr #18
   123b4:	0000d92b 	andeq	sp, r0, fp, lsr #18
   123b8:	0034ad18 	eorseq	sl, r4, r8, lsl sp
   123bc:	09bb0100 	ldmibeq	fp!, {r8}
   123c0:	001b1618 	andseq	r1, fp, r8, lsl r6
   123c4:	00d95100 	sbcseq	r5, r9, r0, lsl #2
   123c8:	00d94d00 	sbcseq	r4, r9, r0, lsl #26
   123cc:	41051800 	tstmi	r5, r0, lsl #16
   123d0:	bc010000 	stclt	0, cr0, [r1], {-0}
   123d4:	2b051d09 	blcs	159800 <_Min_Heap_Size+0x159000>
   123d8:	d9790000 	ldmdble	r9!, {}^	; <UNPREDICTABLE>
   123dc:	d96f0000 	stmdble	pc!, {}^	; <UNPREDICTABLE>
   123e0:	88230000 	stmdahi	r3!, {}	; <UNPREDICTABLE>
   123e4:	26000009 	strcs	r0, [r0], -r9
   123e8:	33000030 	movwcc	r0, #48	; 0x30
   123ec:	ec010078 	stc	0, cr0, [r1], {120}	; 0x78
   123f0:	01192809 	tsteq	r9, r9, lsl #16
   123f4:	d9c10000 	stmible	r1, {}^	; <UNPREDICTABLE>
   123f8:	d9bb0000 	ldmible	fp!, {}	; <UNPREDICTABLE>
   123fc:	1d000000 	stcne	0, cr0, [r0, #-0]
   12400:	00000000 	andeq	r0, r0, r0
   12404:	0000396f 	andeq	r3, r0, pc, ror #18
   12408:	0000001d 	andeq	r0, r0, sp, lsl r0
   1240c:	00397d00 	eorseq	r7, r9, r0, lsl #26
   12410:	01220000 			; <UNDEFINED> instruction: 0x01220000
   12414:	000001c0 	andeq	r0, r0, r0, asr #3
   12418:	0a098301 	beq	273024 <_Min_Heap_Size+0x272824>
   1241c:	0025a001 	eoreq	sl, r5, r1
   12420:	0025d208 	eoreq	sp, r5, r8, lsl #4
   12424:	00d9ea08 	sbcseq	lr, r9, r8, lsl #20
   12428:	30ab0100 	adccc	r0, fp, r0, lsl #2
   1242c:	ba1b0000 	blt	6d2434 <_Min_Heap_Size+0x6d1c34>
   12430:	0100003e 	tsteq	r0, lr, lsr r0
   12434:	5b270983 	blpl	9d4a48 <_Min_Heap_Size+0x9d4248>
   12438:	12000001 	andne	r0, r0, #1
   1243c:	0a0000da 	beq	127ac <_Min_Heap_Size+0x11fac>
   12440:	180000da 	stmdane	r0, {r1, r3, r4, r6, r7}
   12444:	00003fac 	andeq	r3, r0, ip, lsr #31
   12448:	14098501 	strne	r8, [r9], #-1281	; 0xfffffaff
   1244c:	00000119 	andeq	r0, r0, r9, lsl r1
   12450:	0000da4f 	andeq	sp, r0, pc, asr #20
   12454:	0000da49 	andeq	sp, r0, r9, asr #20
   12458:	0025c01d 	eoreq	ip, r5, sp, lsl r0
   1245c:	0026a908 	eoreq	sl, r6, r8, lsl #18
   12460:	25c81e00 	strbcs	r1, [r8, #3584]	; 0xe00
   12464:	09860800 	stmibeq	r6, {fp}
   12468:	30a10000 	adccc	r0, r1, r0
   1246c:	011f0000 	tsteq	pc, r0
   12470:	00740250 	rsbseq	r0, r4, r0, asr r2
   12474:	0151011f 	cmpeq	r1, pc, lsl r1
   12478:	cc1d0030 	ldcgt	0, cr0, [sp], {48}	; 0x30
   1247c:	59080025 	stmdbpl	r8, {r0, r2, r5}
   12480:	00000025 	andeq	r0, r0, r5, lsr #32
   12484:	33120121 	tstcc	r2, #1073741832	; 0x40000008
   12488:	27010000 	strcs	r0, [r1, -r0]
   1248c:	19011009 	stmdbne	r1, {r0, r3, ip}
   12490:	00000001 	andeq	r0, r0, r1
   12494:	00000000 	andeq	r0, r0, r0
   12498:	7a000000 	bvc	124a0 <_Min_Heap_Size+0x11ca0>
   1249c:	010000da 	ldrdeq	r0, [r0, -sl]
   124a0:	00003175 	andeq	r3, r0, r5, ror r1
   124a4:	003d871b 	eorseq	r8, sp, fp, lsl r7
   124a8:	09270100 	stmdbeq	r7!, {r8}
   124ac:	0018ef34 	andseq	lr, r8, r4, lsr pc
   124b0:	00da9e00 	sbcseq	r9, sl, r0, lsl #28
   124b4:	00da9a00 	sbcseq	r9, sl, r0, lsl #20
   124b8:	40a61b00 	adcmi	r1, r6, r0, lsl #22
   124bc:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
   124c0:	015b3209 	cmpeq	fp, r9, lsl #4
   124c4:	dac20000 	ble	ff0924cc <_estack+0xdf088b2c>
   124c8:	dabc0000 	ble	fef124d0 <_estack+0xdef08b30>
   124cc:	cc180000 	ldcgt	0, cr0, [r8], {-0}
   124d0:	01000040 	tsteq	r0, r0, asr #32
   124d4:	4a14092a 	bmi	514984 <_Min_Heap_Size+0x514184>
   124d8:	fc000001 	stc2	0, cr0, [r0], {1}
   124dc:	ee0000da 	mcr	0, 0, r0, cr0, cr10, {6}
   124e0:	180000da 	stmdane	r0, {r1, r3, r4, r6, r7}
   124e4:	00003fac 	andeq	r3, r0, ip, lsr #31
   124e8:	14092b01 	strne	r2, [r9], #-2817	; 0xfffff4ff
   124ec:	00000119 	andeq	r0, r0, r9, lsl r1
   124f0:	0000db56 	andeq	sp, r0, r6, asr fp
   124f4:	0000db54 	andeq	sp, r0, r4, asr fp
   124f8:	0038b118 	eorseq	fp, r8, r8, lsl r1
   124fc:	092b0100 	stmdbeq	fp!, {r8}
   12500:	00011925 	andeq	r1, r1, r5, lsr #18
   12504:	00db7300 	sbcseq	r7, fp, r0, lsl #6
   12508:	00db6900 	sbcseq	r6, fp, r0, lsl #18
   1250c:	0a882300 	beq	fe21b114 <_estack+0xde211774>
   12510:	31620000 	cmncc	r2, r0
   12514:	a6180000 	ldrge	r0, [r8], -r0
   12518:	01000037 	tsteq	r0, r7, lsr r0
   1251c:	5b1e0936 	blpl	7949fc <_Min_Heap_Size+0x7941fc>
   12520:	bb000001 	bllt	1252c <_Min_Heap_Size+0x11d2c>
   12524:	b70000db 			; <UNDEFINED> instruction: 0xb70000db
   12528:	200000db 	ldrdcs	r0, [r0], -fp
   1252c:	00000000 	andeq	r0, r0, r0
   12530:	00000986 	andeq	r0, r0, r6, lsl #19
   12534:	0151011f 	cmpeq	r1, pc, lsl r1
   12538:	1d000030 	stcne	0, cr0, [r0, #-192]	; 0xffffff40
   1253c:	00000000 	andeq	r0, r0, r0
   12540:	000026a9 	andeq	r2, r0, r9, lsr #13
   12544:	0000001d 	andeq	r0, r0, sp, lsl r0
   12548:	00255900 	eoreq	r5, r5, r0, lsl #18
   1254c:	01220000 			; <UNDEFINED> instruction: 0x01220000
   12550:	00003bc3 	andeq	r3, r0, r3, asr #23
   12554:	0a088f01 	beq	236160 <_Min_Heap_Size+0x235960>
   12558:	00000001 	andeq	r0, r0, r1
   1255c:	00000000 	andeq	r0, r0, r0
   12560:	00dbd900 	sbcseq	sp, fp, r0, lsl #18
   12564:	32630100 	rsbcc	r0, r3, #0, 2
   12568:	3d1b0000 	ldccc	0, cr0, [fp, #-0]
   1256c:	0100003d 	tsteq	r0, sp, lsr r0
   12570:	a724088f 	strge	r0, [r4, -pc, lsl #17]!
   12574:	ff000003 			; <UNDEFINED> instruction: 0xff000003
   12578:	f90000db 			; <UNDEFINED> instruction: 0xf90000db
   1257c:	180000db 	stmdane	r0, {r0, r1, r3, r4, r6, r7}
   12580:	00004105 	andeq	r4, r0, r5, lsl #2
   12584:	11089101 	tstne	r8, r1, lsl #2
   12588:	00000666 	andeq	r0, r0, r6, ror #12
   1258c:	0000dc2c 	andeq	sp, r0, ip, lsr #24
   12590:	0000dc28 	andeq	sp, r0, r8, lsr #24
   12594:	0033c918 	eorseq	ip, r3, r8, lsl r9
   12598:	08920100 	ldmeq	r2, {r8}
   1259c:	00011914 	andeq	r1, r1, r4, lsl r9
   125a0:	00dc5000 	sbcseq	r5, ip, r0
   125a4:	00dc4a00 	sbcseq	r4, ip, r0, lsl #20
   125a8:	42201800 	eormi	r1, r0, #0, 16
   125ac:	93010000 	movwls	r0, #4096	; 0x1000
   125b0:	01191408 	tsteq	r9, r8, lsl #8
   125b4:	dc800000 	stcle	0, cr0, [r0], {0}
   125b8:	dc7c0000 	ldclle	0, cr0, [ip], #-0
   125bc:	001d0000 	andseq	r0, sp, r0
   125c0:	6f000000 	svcvs	0x00000000
   125c4:	1e000039 	mcrne	0, 0, r0, cr0, cr9, {1}
   125c8:	00000000 	andeq	r0, r0, r0
   125cc:	00003951 	andeq	r3, r0, r1, asr r9
   125d0:	00003202 	andeq	r3, r0, r2, lsl #4
   125d4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   125d8:	1e000075 	mcrne	0, 0, r0, cr0, cr5, {3}
   125dc:	00000000 	andeq	r0, r0, r0
   125e0:	00003951 	andeq	r3, r0, r1, asr r9
   125e4:	00003216 	andeq	r3, r0, r6, lsl r2
   125e8:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   125ec:	1d001874 	stcne	8, cr1, [r0, #-464]	; 0xfffffe30
   125f0:	00000000 	andeq	r0, r0, r0
   125f4:	000014e6 	andeq	r1, r0, r6, ror #9
   125f8:	0000001d 	andeq	r0, r0, sp, lsl r0
   125fc:	00397d00 	eorseq	r7, r9, r0, lsl #26
   12600:	00001e00 	andeq	r1, r0, r0, lsl #28
   12604:	14fc0000 	ldrbtne	r0, [ip], #0
   12608:	323c0000 	eorscc	r0, ip, #0
   1260c:	011f0000 	tsteq	pc, r0
   12610:	00740250 	rsbseq	r0, r4, r0, asr r2
   12614:	00001e00 	andeq	r1, r0, r0, lsl #28
   12618:	39f00000 	ldmibcc	r0!, {}^	; <UNPREDICTABLE>
   1261c:	32590000 	subscc	r0, r9, #0
   12620:	011f0000 	tsteq	pc, r0
   12624:	a8030550 	stmdage	r3, {r4, r6, r8, sl}
   12628:	1f200087 	svcne	0x00200087
   1262c:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
   12630:	001d0000 	andseq	r0, sp, r0
   12634:	7d000000 	stcvc	0, cr0, [r0, #-0]
   12638:	00000039 	andeq	r0, r0, r9, lsr r0
   1263c:	0039031a 	eorseq	r0, r9, sl, lsl r3
   12640:	07e30100 	strbeq	r0, [r3, r0, lsl #2]!
   12644:	20080111 	andcs	r0, r8, r1, lsl r1
   12648:	20d40800 	sbcscs	r0, r4, r0, lsl #16
   1264c:	dc9e0800 	ldcle	8, cr0, [lr], {0}
   12650:	d2010000 	andle	r0, r1, #0
   12654:	1b000032 	blne	12724 <_Min_Heap_Size+0x11f24>
   12658:	00003963 	andeq	r3, r0, r3, ror #18
   1265c:	3307e301 	movwcc	lr, #29441	; 0x7301
   12660:	00000666 	andeq	r0, r0, r6, ror #12
   12664:	0000dcc2 	andeq	sp, r0, r2, asr #25
   12668:	0000dcbe 			; <UNDEFINED> instruction: 0x0000dcbe
   1266c:	0020561c 	eoreq	r5, r0, ip, lsl r6
   12670:	00208808 	eoreq	r8, r0, r8, lsl #16
   12674:	0032b608 	eorseq	fp, r2, r8, lsl #12
   12678:	28131800 	ldmdacs	r3, {fp, ip}
   1267c:	1d010000 	stcne	0, cr0, [r1, #-0]
   12680:	03910d08 	orrseq	r0, r1, #8, 26	; 0x200
   12684:	dce20000 	stclle	0, cr0, [r2]
   12688:	dce00000 	stclle	0, cr0, [r0]
   1268c:	1d000000 	stcne	0, cr0, [r0, #-0]
   12690:	08002010 	stmdaeq	r0, {r4, sp}
   12694:	0000396f 	andeq	r3, r0, pc, ror #18
   12698:	00208c1d 	eoreq	r8, r0, sp, lsl ip
   1269c:	00397d08 	eorseq	r7, r9, r8, lsl #26
   126a0:	20b81d00 	adcscs	r1, r8, r0, lsl #26
   126a4:	168d0800 	strne	r0, [sp], r0, lsl #16
   126a8:	1a000000 	bne	126b0 <_Min_Heap_Size+0x11eb0>
   126ac:	00003c94 	muleq	r0, r4, ip
   126b0:	0d070101 	stfeqs	f0, [r7, #-4]
   126b4:	001eb801 	andseq	fp, lr, r1, lsl #16
   126b8:	001f4c08 	andseq	r4, pc, r8, lsl #24
   126bc:	00dcf508 	sbcseq	pc, ip, r8, lsl #10
   126c0:	340f0100 	strcc	r0, [pc], #-256	; 126c8 <_Min_Heap_Size+0x11ec8>
   126c4:	391b0000 	ldmdbcc	fp, {}	; <UNPREDICTABLE>
   126c8:	01000041 	tsteq	r0, r1, asr #32
   126cc:	ea320701 	b	c942d8 <_Min_Heap_Size+0xc93ad8>
   126d0:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
   126d4:	150000dd 	strne	r0, [r0, #-221]	; 0xffffff23
   126d8:	1b0000dd 	blne	12a54 <_Min_Heap_Size+0x12254>
   126dc:	000037c9 	andeq	r3, r0, r9, asr #15
   126e0:	36070201 	strcc	r0, [r7], -r1, lsl #4
   126e4:	000000be 	strheq	r0, [r0], -lr
   126e8:	0000dd3b 	andeq	sp, r0, fp, lsr sp
   126ec:	0000dd37 	andeq	sp, r0, r7, lsr sp
   126f0:	00372d1b 	eorseq	r2, r7, fp, lsl sp
   126f4:	07030100 	streq	r0, [r3, -r0, lsl #2]
   126f8:	00003540 	andeq	r3, r0, r0, asr #10
   126fc:	00dd6100 	sbcseq	r6, sp, r0, lsl #2
   12700:	00dd5900 	sbcseq	r5, sp, r0, lsl #18
   12704:	3ca91b00 	vstmiacc	r9!, {d1-d0}
   12708:	04010000 	streq	r0, [r1], #-0
   1270c:	00a13007 	adceq	r3, r1, r7
   12710:	dda20000 	stcle	0, cr0, [r2]
   12714:	dd9e0000 	ldcle	0, cr0, [lr]
   12718:	bc1b0000 	ldclt	0, cr0, [fp], {-0}
   1271c:	01000032 	tsteq	r0, r2, lsr r0
   12720:	2f2f0705 	svccs	0x002f0705
   12724:	c4000001 	strgt	r0, [r0], #-1
   12728:	c00000dd 	ldrdgt	r0, [r0], -sp
   1272c:	190000dd 	stmdbne	r0, {r0, r2, r3, r4, r6, r7}
   12730:	000041d3 	ldrdeq	r4, [r0], -r3
   12734:	38070601 	stmdacc	r7, {r0, r9, sl}
   12738:	00003415 	andeq	r3, r0, r5, lsl r4
   1273c:	19049102 	stmdbne	r4, {r1, r8, ip, pc}
   12740:	00003963 	andeq	r3, r0, r3, ror #18
   12744:	2b070701 	blcs	1d4350 <_Min_Heap_Size+0x1d3b50>
   12748:	00000666 	andeq	r0, r0, r6, ror #12
   1274c:	19089102 	stmdbne	r8, {r1, r8, ip, pc}
   12750:	00004010 	andeq	r4, r0, r0, lsl r0
   12754:	40070801 	andmi	r0, r7, r1, lsl #16
   12758:	00003420 	andeq	r3, r0, r0, lsr #8
   1275c:	180c9102 	stmdane	ip, {r1, r8, ip, pc}
   12760:	00004159 	andeq	r4, r0, r9, asr r1
   12764:	13070a01 	movwne	r0, #31233	; 0x7a01
   12768:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
   1276c:	0000dde5 	andeq	sp, r0, r5, ror #27
   12770:	0000dde3 	andeq	sp, r0, r3, ror #27
   12774:	01007833 	tsteq	r0, r3, lsr r8
   12778:	2f11070b 	svccs	0x0011070b
   1277c:	fa000001 	blx	12788 <_Min_Heap_Size+0x11f88>
   12780:	f80000dd 			; <UNDEFINED> instruction: 0xf80000dd
   12784:	1e0000dd 	mcrne	0, 0, r0, cr0, cr13, {6}
   12788:	08001ed6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r9, sl, fp, ip}
   1278c:	000039ff 	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   12790:	000033ca 	andeq	r3, r0, sl, asr #7
   12794:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
   12798:	011fa508 	tsteq	pc, r8, lsl #10
   1279c:	00770452 	rsbseq	r0, r7, r2, asr r4
   127a0:	1e002432 	cfmvdhrne	mvd0, r2
   127a4:	08001f20 	stmdaeq	r0, {r5, r8, r9, sl, fp, ip}
   127a8:	00003a0d 	andeq	r3, r0, sp, lsl #20
   127ac:	000033de 	ldrdeq	r3, [r0], -lr
   127b0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   127b4:	1e000474 	mcrne	4, 0, r0, cr0, cr4, {3}
   127b8:	08001f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp, ip}
   127bc:	00003a0d 	andeq	r3, r0, sp, lsl #20
   127c0:	000033f2 	strdeq	r3, [r0], -r2
   127c4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   127c8:	20001874 	andcs	r1, r0, r4, ror r8
   127cc:	08001f3c 	stmdaeq	r0, {r2, r3, r4, r5, r8, r9, sl, fp, ip}
   127d0:	00003a1c 	andeq	r3, r0, ip, lsl sl
   127d4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   127d8:	011f0077 	tsteq	pc, r7, ror r0	; <UNPREDICTABLE>
   127dc:	00780251 	rsbseq	r0, r8, r1, asr r2
   127e0:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
   127e4:	00000079 	andeq	r0, r0, r9, ror r0
   127e8:	03a70407 			; <UNDEFINED> instruction: 0x03a70407
   127ec:	0f030000 	svceq	0x00030000
   127f0:	07000034 	smladxeq	r0, r4, r0, r0
   127f4:	0005b604 	andeq	fp, r5, r4, lsl #12
   127f8:	341a0300 	ldrcc	r0, [sl], #-768	; 0xfffffd00
   127fc:	01210000 			; <UNDEFINED> instruction: 0x01210000
   12800:	000004dd 	ldrdeq	r0, [r0], -sp
   12804:	1006b601 	andne	fp, r6, r1, lsl #12
   12808:	00011901 	andeq	r1, r1, r1, lsl #18
   1280c:	00227800 	eoreq	r7, r2, r0, lsl #16
   12810:	00229a08 	eoreq	r9, r2, r8, lsl #20
   12814:	00de0d08 	sbcseq	r0, lr, r8, lsl #26
   12818:	35300100 	ldrcc	r0, [r0, #-256]!	; 0xffffff00
   1281c:	391b0000 	ldmdbcc	fp, {}	; <UNPREDICTABLE>
   12820:	01000041 	tsteq	r0, r1, asr #32
   12824:	ea2c06b6 	b	b14304 <_Min_Heap_Size+0xb13b04>
   12828:	55000000 	strpl	r0, [r0, #-0]
   1282c:	510000de 	ldrdpl	r0, [r0, -lr]
   12830:	1b0000de 	blne	12bb0 <_Min_Heap_Size+0x123b0>
   12834:	000037c9 	andeq	r3, r0, r9, asr #15
   12838:	3006b701 	andcc	fp, r6, r1, lsl #14
   1283c:	000000be 	strheq	r0, [r0], -lr
   12840:	0000de7a 	andeq	sp, r0, sl, ror lr
   12844:	0000de76 	andeq	sp, r0, r6, ror lr
   12848:	00372d1b 	eorseq	r2, r7, fp, lsl sp
   1284c:	06b80100 	ldrteq	r0, [r8], r0, lsl #2
   12850:	0000353a 	andeq	r3, r0, sl, lsr r5
   12854:	00de9f00 	sbcseq	r9, lr, r0, lsl #30
   12858:	00de9b00 	sbcseq	r9, lr, r0, lsl #22
   1285c:	3ca91b00 	vstmiacc	r9!, {d1-d0}
   12860:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
   12864:	00a12a06 	adceq	r2, r1, r6, lsl #20
   12868:	dec40000 	cdple	0, 12, cr0, cr4, cr0, {0}
   1286c:	dec00000 	cdple	0, 12, cr0, cr0, cr0, {0}
   12870:	bc1b0000 	ldclt	0, cr0, [fp], {-0}
   12874:	01000032 	tsteq	r0, r2, lsr r0
   12878:	2f2906ba 	svccs	0x002906ba
   1287c:	e9000001 	stmdb	r0, {r0}
   12880:	e50000de 	str	r0, [r0, #-222]	; 0xffffff22
   12884:	1b0000de 	blne	12c04 <_Min_Heap_Size+0x12404>
   12888:	000041d3 	ldrdeq	r4, [r0], -r3
   1288c:	3206bb01 	andcc	fp, r6, #1024	; 0x400
   12890:	00003415 	andeq	r3, r0, r5, lsl r4
   12894:	0000df0d 	andeq	sp, r0, sp, lsl #30
   12898:	0000df09 	andeq	sp, r0, r9, lsl #30
   1289c:	00396318 	eorseq	r6, r9, r8, lsl r3
   128a0:	06bd0100 	ldrteq	r0, [sp], r0, lsl #2
   128a4:	00066611 	andeq	r6, r6, r1, lsl r6
   128a8:	00df3100 	sbcseq	r3, pc, r0, lsl #2
   128ac:	00df2d00 	sbcseq	r2, pc, r0, lsl #26
   128b0:	38481800 	stmdacc	r8, {fp, ip}^
   128b4:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
   128b8:	01191406 	tsteq	r9, r6, lsl #8
   128bc:	df530000 	svcle	0x00530000
   128c0:	df4f0000 	svcle	0x004f0000
   128c4:	881e0000 	ldmdahi	lr, {}	; <UNPREDICTABLE>
   128c8:	30080022 	andcc	r0, r8, r2, lsr #32
   128cc:	26000035 			; <UNDEFINED> instruction: 0x26000035
   128d0:	1f000035 	svcne	0x00000035
   128d4:	f3035001 	vhadd.u8	d5, d3, d1
   128d8:	011f5001 	tsteq	pc, r1
   128dc:	01f30351 	mvnseq	r0, r1, asr r3
   128e0:	52011f51 	andpl	r1, r1, #324	; 0x144
   128e4:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
   128e8:	0353011f 	cmpeq	r3, #-1073741817	; 0xc0000007
   128ec:	1f5301f3 	svcne	0x005301f3
   128f0:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
   128f4:	021f0074 	andseq	r0, pc, #116	; 0x74
   128f8:	9103047d 	tstls	r3, sp, ror r4
   128fc:	1d000604 	stcne	6, cr0, [r0, #-16]
   12900:	0800228e 	stmdaeq	r0, {r1, r2, r3, r7, r9, sp}
   12904:	00003263 	andeq	r3, r0, r3, ror #4
   12908:	35ee3200 	strbcc	r3, [lr, #512]!	; 0x200
   1290c:	54010000 	strpl	r0, [r1], #-0
   12910:	66011406 	strvs	r1, [r1], -r6, lsl #8
   12914:	d4000006 	strle	r0, [r0], #-6
   12918:	36080020 	strcc	r0, [r8], -r0, lsr #32
   1291c:	74080021 	strvc	r0, [r8], #-33	; 0xffffffdf
   12920:	010000df 	ldrdeq	r0, [r0, -pc]
   12924:	0000369a 	muleq	r0, sl, r6
   12928:	0041391b 	subeq	r3, r1, fp, lsl r9
   1292c:	06540100 	ldrbeq	r0, [r4], -r0, lsl #2
   12930:	0000ea32 	andeq	lr, r0, r2, lsr sl
   12934:	00dfbc00 	sbcseq	fp, pc, r0, lsl #24
   12938:	00dfb800 	sbcseq	fp, pc, r0, lsl #16
   1293c:	37c91b00 	strbcc	r1, [r9, r0, lsl #22]
   12940:	55010000 	strpl	r0, [r1, #-0]
   12944:	00be3606 	adcseq	r3, lr, r6, lsl #12
   12948:	dfde0000 	svcle	0x00de0000
   1294c:	dfda0000 	svcle	0x00da0000
   12950:	2d1b0000 	ldccs	0, cr0, [fp, #-0]
   12954:	01000037 	tsteq	r0, r7, lsr r0
   12958:	35400656 	strbcc	r0, [r0, #-1622]	; 0xfffff9aa
   1295c:	00000000 	andeq	r0, r0, r0
   12960:	fc0000e0 	stc2	0, cr0, [r0], {224}	; 0xe0
   12964:	1b0000df 	blne	12ce8 <_Min_Heap_Size+0x124e8>
   12968:	00003ca9 	andeq	r3, r0, r9, lsr #25
   1296c:	30065701 	andcc	r5, r6, r1, lsl #14
   12970:	000000a1 	andeq	r0, r0, r1, lsr #1
   12974:	0000e022 	andeq	lr, r0, r2, lsr #32
   12978:	0000e01e 	andeq	lr, r0, lr, lsl r0
   1297c:	0032bc1b 	eorseq	fp, r2, fp, lsl ip
   12980:	06580100 	ldrbeq	r0, [r8], -r0, lsl #2
   12984:	00012f2f 	andeq	r2, r1, pc, lsr #30
   12988:	00e04400 	rsceq	r4, r0, r0, lsl #8
   1298c:	00e04000 	rsceq	r4, r0, r0
   12990:	41d31b00 	bicsmi	r1, r3, r0, lsl #22
   12994:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
   12998:	34153806 	ldrcc	r3, [r5], #-2054	; 0xfffff7fa
   1299c:	e0680000 	rsb	r0, r8, r0
   129a0:	e0640000 	rsb	r0, r4, r0
   129a4:	63180000 	tstvs	r8, #0
   129a8:	01000039 	tsteq	r0, r9, lsr r0
   129ac:	6611065b 			; <UNDEFINED> instruction: 0x6611065b
   129b0:	90000006 	andls	r0, r0, r6
   129b4:	880000e0 	stmdahi	r0, {r5, r6, r7}
   129b8:	230000e0 	movwcs	r0, #224	; 0xe0
   129bc:	00000958 	andeq	r0, r0, r8, asr r9
   129c0:	0000365a 	andeq	r3, r0, sl, asr r6
   129c4:	003d1f18 	eorseq	r1, sp, r8, lsl pc
   129c8:	06800100 	streq	r0, [r0], r0, lsl #2
   129cc:	0005bb1b 	andeq	fp, r5, fp, lsl fp
   129d0:	00e0ca00 	rsceq	ip, r0, r0, lsl #20
   129d4:	00e0c400 	rsceq	ip, r0, r0, lsl #8
   129d8:	20e81e00 	rsccs	r1, r8, r0, lsl #28
   129dc:	3a2a0800 	bcc	a949e4 <_Min_Heap_Size+0xa941e4>
   129e0:	36160000 	ldrcc	r0, [r6], -r0
   129e4:	011f0000 	tsteq	pc, r0
   129e8:	00750450 	rsbseq	r0, r5, r0, asr r4
   129ec:	1e002432 	cfmvdhrne	mvd0, r2
   129f0:	080020f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, sp}
   129f4:	00003a2a 	andeq	r3, r0, sl, lsr #20
   129f8:	0000362a 	andeq	r3, r0, sl, lsr #12
   129fc:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   12a00:	1e004c08 	cdpne	12, 0, cr4, cr0, cr8, {0}
   12a04:	080020fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, sp}
   12a08:	00003a38 	andeq	r3, r0, r8, lsr sl
   12a0c:	00003649 	andeq	r3, r0, r9, asr #12
   12a10:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   12a14:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
   12a18:	1f300151 	svcne	0x00300151
   12a1c:	08025201 	stmdaeq	r2, {r0, r9, ip, lr}
   12a20:	3020004c 	eorcc	r0, r0, ip, asr #32
   12a24:	8b080021 	blhi	212ab0 <_Min_Heap_Size+0x2122b0>
   12a28:	1f000039 	svcne	0x00000039
   12a2c:	79025001 	stmdbvc	r2, {r0, ip, lr}
   12a30:	20000000 	andcs	r0, r0, r0
   12a34:	08002122 	stmdaeq	r0, {r1, r5, r8, sp}
   12a38:	000032d2 	ldrdeq	r3, [r0], -r2
   12a3c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   12a40:	011f0076 	tsteq	pc, r6, ror r0	; <UNPREDICTABLE>
   12a44:	00770251 	rsbseq	r0, r7, r1, asr r2
   12a48:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
   12a4c:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
   12a50:	00780253 	rsbseq	r0, r8, r3, asr r2
   12a54:	007d021f 	rsbseq	r0, sp, pc, lsl r2
   12a58:	06009103 	streq	r9, [r0], -r3, lsl #2
   12a5c:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
   12a60:	06049103 	streq	r9, [r4], -r3, lsl #2
   12a64:	087d021f 	ldmdaeq	sp!, {r0, r1, r2, r3, r4, r9}^
   12a68:	1f007402 	svcne	0x00007402
   12a6c:	010c7d02 	tsteq	ip, r2, lsl #26
   12a70:	21000030 	tstcs	r0, r0, lsr r0
   12a74:	00358201 	eorseq	r8, r5, r1, lsl #4
   12a78:	051d0100 	ldreq	r0, [sp, #-256]	; 0xffffff00
   12a7c:	03a70112 			; <UNDEFINED> instruction: 0x03a70112
   12a80:	22500000 	subscs	r0, r0, #0
   12a84:	22780800 	rsbscs	r0, r8, #0, 16
   12a88:	e0f30800 	rscs	r0, r3, r0, lsl #16
   12a8c:	b5010000 	strlt	r0, [r1, #-0]
   12a90:	1b000037 	blne	12b74 <_Min_Heap_Size+0x12374>
   12a94:	00004139 	andeq	r4, r0, r9, lsr r1
   12a98:	34051d01 	strcc	r1, [r5], #-3329	; 0xfffff2ff
   12a9c:	000000ea 	andeq	r0, r0, sl, ror #1
   12aa0:	0000e12f 	andeq	lr, r0, pc, lsr #2
   12aa4:	0000e12b 	andeq	lr, r0, fp, lsr #2
   12aa8:	0037c91b 	eorseq	ip, r7, fp, lsl r9
   12aac:	051e0100 	ldreq	r0, [lr, #-256]	; 0xffffff00
   12ab0:	0000be38 	andeq	fp, r0, r8, lsr lr
   12ab4:	00e15400 	rsceq	r5, r1, r0, lsl #8
   12ab8:	00e15000 	rsceq	r5, r1, r0
   12abc:	372d1b00 	strcc	r1, [sp, -r0, lsl #22]!
   12ac0:	1f010000 	svcne	0x00010000
   12ac4:	00354205 	eorseq	r4, r5, r5, lsl #4
   12ac8:	e1790000 	cmn	r9, r0
   12acc:	e1750000 	cmn	r5, r0
   12ad0:	a91b0000 	ldmdbge	fp, {}	; <UNPREDICTABLE>
   12ad4:	0100003c 	tsteq	r0, ip, lsr r0
   12ad8:	a1320520 	teqge	r2, r0, lsr #10
   12adc:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
   12ae0:	9a0000e1 	bls	12e6c <_Min_Heap_Size+0x1266c>
   12ae4:	190000e1 	stmdbne	r0, {r0, r5, r6, r7}
   12ae8:	000032bc 			; <UNDEFINED> instruction: 0x000032bc
   12aec:	31052101 	tstcc	r5, r1, lsl #2
   12af0:	0000012f 	andeq	r0, r0, pc, lsr #2
   12af4:	19009102 	stmdbne	r0, {r1, r8, ip, pc}
   12af8:	00003954 	andeq	r3, r0, r4, asr r9
   12afc:	39052201 	stmdbcc	r5, {r0, r9, sp}
   12b00:	000005c1 	andeq	r0, r0, r1, asr #11
   12b04:	19049102 	stmdbne	r4, {r1, r8, ip, pc}
   12b08:	00003b3e 	andeq	r3, r0, lr, lsr fp
   12b0c:	3a052301 	bcc	15b718 <_Min_Heap_Size+0x15af18>
   12b10:	000008f6 	strdeq	r0, [r0], -r6
   12b14:	16089102 	strne	r9, [r8], -r2, lsl #2
   12b18:	00003848 	andeq	r3, r0, r8, asr #16
   12b1c:	16052501 	strne	r2, [r5], -r1, lsl #10
   12b20:	000003a7 	andeq	r0, r0, r7, lsr #7
   12b24:	18749102 	ldmdane	r4!, {r1, r8, ip, pc}^
   12b28:	00003963 	andeq	r3, r0, r3, ror #18
   12b2c:	11052601 	tstne	r5, r1, lsl #12
   12b30:	00000666 	andeq	r0, r0, r6, ror #12
   12b34:	0000e1c1 	andeq	lr, r0, r1, asr #3
   12b38:	0000e1bf 			; <UNDEFINED> instruction: 0x0000e1bf
   12b3c:	00226c1e 	eoreq	r6, r2, lr, lsl ip
   12b40:	0037b508 	eorseq	fp, r7, r8, lsl #10
   12b44:	0037ab00 	eorseq	sl, r7, r0, lsl #22
   12b48:	50011f00 	andpl	r1, r1, r0, lsl #30
   12b4c:	5001f303 	andpl	pc, r1, r3, lsl #6
   12b50:	0351011f 	cmpeq	r1, #-1073741817	; 0xc0000007
   12b54:	1f5101f3 	svcne	0x005101f3
   12b58:	f3035201 	vhsub.u8	d5, d3, d1
   12b5c:	011f5201 	tsteq	pc, r1, lsl #4
   12b60:	01f30353 	mvnseq	r0, r3, asr r3
   12b64:	7d021f53 	stcvc	15, cr1, [r2, #-332]	; 0xfffffeb4
   12b68:	00740200 	rsbseq	r0, r4, r0, lsl #4
   12b6c:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
   12b70:	06049103 	streq	r9, [r4], -r3, lsl #2
   12b74:	087d021f 	ldmdaeq	sp!, {r0, r1, r2, r3, r4, r9}^
   12b78:	06089103 	streq	r9, [r8], -r3, lsl #2
   12b7c:	0c7d021f 	lfmeq	f0, 2, [sp], #-124	; 0xffffff84
   12b80:	00749102 	rsbseq	r9, r4, r2, lsl #2
   12b84:	0022721d 	eoreq	r7, r2, sp, lsl r2
   12b88:	00326308 	eorseq	r6, r2, r8, lsl #6
   12b8c:	7f320000 	svcvc	0x00320000
   12b90:	01000036 	tsteq	r0, r6, lsr r0
   12b94:	011404e6 	tsteq	r4, r6, ror #9
   12b98:	00000666 	andeq	r0, r0, r6, ror #12
   12b9c:	08001f4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, fp, ip}
   12ba0:	08001f9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, r9, sl, fp, ip}
   12ba4:	0000e1d4 	ldrdeq	lr, [r0], -r4
   12ba8:	0038f001 	eorseq	pc, r8, r1
   12bac:	41391b00 	teqmi	r9, r0, lsl #22
   12bb0:	e6010000 	str	r0, [r1], -r0
   12bb4:	00ea3804 	rsceq	r3, sl, r4, lsl #16
   12bb8:	e2260000 	eor	r0, r6, #0
   12bbc:	e2180000 	ands	r0, r8, #0
   12bc0:	c91b0000 	ldmdbgt	fp, {}	; <UNPREDICTABLE>
   12bc4:	01000037 	tsteq	r0, r7, lsr r0
   12bc8:	be3c04e7 	cfsubdlt	mvd0, mvd12, mvd7
   12bcc:	89000000 	stmdbhi	r0, {}	; <UNPREDICTABLE>
   12bd0:	810000e2 	smlatthi	r0, r2, r0, r0
   12bd4:	1b0000e2 	blne	12f64 <_Min_Heap_Size+0x12764>
   12bd8:	0000372d 	andeq	r3, r0, sp, lsr #14
   12bdc:	4604e801 	strmi	lr, [r4], -r1, lsl #16
   12be0:	00000035 	andeq	r0, r0, r5, lsr r0
   12be4:	0000e2c8 	andeq	lr, r0, r8, asr #5
   12be8:	0000e2c0 	andeq	lr, r0, r0, asr #5
   12bec:	003ca91b 	eorseq	sl, ip, fp, lsl r9
   12bf0:	04e90100 	strbteq	r0, [r9], #256	; 0x100
   12bf4:	0000a136 	andeq	sl, r0, r6, lsr r1
   12bf8:	00e30700 	rsceq	r0, r3, r0, lsl #14
   12bfc:	00e2ff00 	rsceq	pc, r2, r0, lsl #30
   12c00:	32bc1b00 	adcscc	r1, ip, #0, 22
   12c04:	ea010000 	b	52c0c <_Min_Heap_Size+0x5240c>
   12c08:	012f3504 			; <UNDEFINED> instruction: 0x012f3504
   12c0c:	e3420000 	movt	r0, #8192	; 0x2000
   12c10:	e33e0000 	teq	lr, #0
   12c14:	541b0000 	ldrpl	r0, [fp], #-0
   12c18:	01000039 	tsteq	r0, r9, lsr r0
   12c1c:	c13d04eb 	teqgt	sp, fp, ror #9
   12c20:	66000005 	strvs	r0, [r0], -r5
   12c24:	620000e3 	andvs	r0, r0, #227	; 0xe3
   12c28:	1b0000e3 	blne	12fbc <_Min_Heap_Size+0x127bc>
   12c2c:	00003b3e 	andeq	r3, r0, lr, lsr fp
   12c30:	3e04ec01 	cdpcc	12, 0, cr14, cr4, cr1, {0}
   12c34:	000008f6 	strdeq	r0, [r0], -r6
   12c38:	0000e38a 	andeq	lr, r0, sl, lsl #7
   12c3c:	0000e386 	andeq	lr, r0, r6, lsl #7
   12c40:	0041d31b 	subeq	sp, r1, fp, lsl r3
   12c44:	04ed0100 	strbteq	r0, [sp], #256	; 0x100
   12c48:	0034153e 	eorseq	r1, r4, lr, lsr r5
   12c4c:	00e3ae00 	rsceq	sl, r3, r0, lsl #28
   12c50:	00e3aa00 	rsceq	sl, r3, r0, lsl #20
   12c54:	39631800 	stmdbcc	r3!, {fp, ip}^
   12c58:	ef010000 	svc	0x00010000
   12c5c:	06661104 	strbteq	r1, [r6], -r4, lsl #2
   12c60:	e3d20000 	bics	r0, r2, #0
   12c64:	e3ce0000 	bic	r0, lr, #0
   12c68:	6c1e0000 	ldcvs	0, cr0, [lr], {-0}
   12c6c:	3808001f 	stmdacc	r8, {r0, r1, r2, r3, r4}
   12c70:	b000003a 	andlt	r0, r0, sl, lsr r0
   12c74:	1f000038 	svcne	0x00000038
   12c78:	74025001 	strvc	r5, [r2], #-1
   12c7c:	51011f00 	tstpl	r1, r0, lsl #30
   12c80:	011f3001 	tsteq	pc, r1
   12c84:	4c080252 	sfmmi	f0, 4, [r8], {82}	; 0x52
   12c88:	1f8e2000 	svcne	0x008e2000
   12c8c:	32d20800 	sbcscc	r0, r2, #0, 16
   12c90:	011f0000 	tsteq	pc, r0
   12c94:	00750250 	rsbseq	r0, r5, r0, asr r2
   12c98:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
   12c9c:	011f0079 	tsteq	pc, r9, ror r0	; <UNPREDICTABLE>
   12ca0:	00780252 	rsbseq	r0, r8, r2, asr r2
   12ca4:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
   12ca8:	021f0077 	andseq	r0, pc, #119	; 0x77
   12cac:	9103007d 	tstls	r3, sp, ror r0
   12cb0:	021f0600 	andseq	r0, pc, #0, 12
   12cb4:	9103047d 	tstls	r3, sp, ror r4
   12cb8:	021f060c 	andseq	r0, pc, #12, 12	; 0xc00000
   12cbc:	7402087d 	strvc	r0, [r2], #-2173	; 0xfffff783
   12cc0:	7d021f00 	stcvc	15, cr1, [r2, #-0]
   12cc4:	0030010c 	eorseq	r0, r0, ip, lsl #2
   12cc8:	2bcf3400 	blcs	ff3dfcd0 <_estack+0xdf3d6330>
   12ccc:	f9020000 			; <UNDEFINED> instruction: 0xf9020000
   12cd0:	0b03011e 	bleq	d3150 <_Min_Heap_Size+0xd2950>
   12cd4:	35000039 	strcc	r0, [r0, #-57]	; 0xffffffc7
   12cd8:	00002ec8 	andeq	r2, r0, r8, asr #29
   12cdc:	d938f902 	ldmdble	r8!, {r1, r8, fp, ip, sp, lr, pc}
   12ce0:	00000000 	andeq	r0, r0, r0
   12ce4:	002de636 	eoreq	lr, sp, r6, lsr r6
   12ce8:	22e50200 	rsccs	r0, r5, #0, 4
   12cec:	0000d901 	andeq	sp, r0, r1, lsl #18
   12cf0:	39360300 	ldmdbcc	r6!, {r8, r9}
   12cf4:	ad370000 	ldcge	0, cr0, [r7, #-0]
   12cf8:	0200002a 	andeq	r0, r0, #42	; 0x2a
   12cfc:	00d90ee7 	sbcseq	r0, r9, r7, ror #29
   12d00:	2c370000 	ldccs	0, cr0, [r7], #-0
   12d04:	0200002d 	andeq	r0, r0, #45	; 0x2d
   12d08:	00d921e7 	sbcseq	r2, r9, r7, ror #3
   12d0c:	34000000 	strcc	r0, [r0], #-0
   12d10:	00003e1a 	andeq	r3, r0, sl, lsl lr
   12d14:	011ed502 	tsteq	lr, r2, lsl #10
   12d18:	00395103 	eorseq	r5, r9, r3, lsl #2
   12d1c:	2d2c3700 	stccs	7, cr3, [ip, #-0]
   12d20:	d7020000 	strle	r0, [r2, -r0]
   12d24:	0000d90e 	andeq	sp, r0, lr, lsl #18
   12d28:	01380000 	teqeq	r8, r0
   12d2c:	00273f01 	eoreq	r3, r7, r1, lsl #30
   12d30:	00273f00 	eoreq	r3, r7, r0, lsl #30
   12d34:	01f70800 	mvnseq	r0, r0, lsl #16
   12d38:	0101380d 	tsteq	r1, sp, lsl #16
   12d3c:	00002862 	andeq	r2, r0, r2, ror #16
   12d40:	00002862 	andeq	r2, r0, r2, ror #16
   12d44:	0601d108 	streq	sp, [r1], -r8, lsl #2
   12d48:	f3010139 	veor	d0, d1, d25
   12d4c:	f3000029 	vhadd.u8	d0, d0, d25
   12d50:	02000029 	andeq	r0, r0, #41	; 0x29
   12d54:	01390d76 	teqeq	r9, r6, ror sp
   12d58:	00286e01 	eoreq	r6, r8, r1, lsl #28
   12d5c:	00286e00 	eoreq	r6, r8, r0, lsl #28
   12d60:	0d770200 	lfmeq	f0, 2, [r7, #-0]
   12d64:	13010139 	movwne	r0, #4409	; 0x1139
   12d68:	13000030 	movwne	r0, #48	; 0x30
   12d6c:	0a000030 	beq	12e34 <_Min_Heap_Size+0x12634>
   12d70:	013806b8 	teqeq	r8, r8	; <illegal shifter operand>
   12d74:	0027d301 	eoreq	sp, r7, r1, lsl #6
   12d78:	0027d300 	eoreq	sp, r7, r0, lsl #6
   12d7c:	01b90800 			; <UNDEFINED> instruction: 0x01b90800
   12d80:	01013906 	tsteq	r1, r6, lsl #18
   12d84:	00003ee6 	andeq	r3, r0, r6, ror #29
   12d88:	00003ee6 	andeq	r3, r0, r6, ror #29
   12d8c:	38118a02 	ldmdacc	r1, {r1, r9, fp, pc}
   12d90:	41720101 	cmnmi	r2, r1, lsl #2
   12d94:	41720000 	cmnmi	r2, r0
   12d98:	c70b0000 	strgt	r0, [fp, -r0]
   12d9c:	01390e01 	teqeq	r9, r1, lsl #28
   12da0:	003d6201 	eorseq	r6, sp, r1, lsl #4
   12da4:	003d6200 	eorseq	r6, sp, r0, lsl #4
   12da8:	06e30a00 	strbteq	r0, [r3], r0, lsl #20
   12dac:	40010138 	andmi	r0, r1, r8, lsr r1
   12db0:	40000035 	andmi	r0, r0, r5, lsr r0
   12db4:	0b000035 	bleq	12e90 <_Min_Heap_Size+0x12690>
   12db8:	390c0548 	stmdbcc	ip, {r3, r6, r8, sl}
   12dbc:	32a80101 	adccc	r0, r8, #1073741824	; 0x40000000
   12dc0:	32a80000 	adccc	r0, r8, #0
   12dc4:	dc0a0000 	stcle	0, cr0, [sl], {-0}
   12dc8:	0101380c 	tsteq	r1, ip, lsl #16
   12dcc:	000027bd 			; <UNDEFINED> instruction: 0x000027bd
   12dd0:	000027bd 			; <UNDEFINED> instruction: 0x000027bd
   12dd4:	0601e708 	streq	lr, [r1], -r8, lsl #14
   12dd8:	b7010139 	smladxlt	r1, r9, r1, r0
   12ddc:	b7000000 	strlt	r0, [r0, -r0]
   12de0:	0c000000 	stceq	0, cr0, [r0], {-0}
   12de4:	01380921 	teqeq	r8, r1, lsr #18
   12de8:	00279901 	eoreq	r9, r7, r1, lsl #18
   12dec:	00279900 	eoreq	r9, r7, r0, lsl #18
   12df0:	01c40800 	biceq	r0, r4, r0, lsl #16
   12df4:	01013906 	tsteq	r1, r6, lsl #18
   12df8:	000039bf 			; <UNDEFINED> instruction: 0x000039bf
   12dfc:	000039bf 			; <UNDEFINED> instruction: 0x000039bf
   12e00:	3917850a 	ldmdbcc	r7, {r1, r3, r8, sl, pc}
   12e04:	2b350101 	blcs	d53210 <_Min_Heap_Size+0xd52a10>
   12e08:	2b350000 	blcs	d52e10 <_Min_Heap_Size+0xd52610>
   12e0c:	b50a0000 	strlt	r0, [sl, #-0]
   12e10:	01013a08 	tsteq	r1, r8, lsl #20
   12e14:	000000b7 	strheq	r0, [r0], -r7
   12e18:	000000ad 	andeq	r0, r0, sp, lsr #1
   12e1c:	7500000d 	strvc	r0, [r0, #-13]
   12e20:	02000019 	andeq	r0, r0, #25
   12e24:	0025aa00 	eoreq	sl, r5, r0, lsl #20
   12e28:	21010400 	tstcs	r1, r0, lsl #8
   12e2c:	0c000006 	stceq	0, cr0, [r0], {6}
   12e30:	000043ad 	andeq	r4, r0, sp, lsr #7
   12e34:	000004e9 	andeq	r0, r0, r9, ror #9
   12e38:	00000e88 	andeq	r0, r0, r8, lsl #29
	...
   12e44:	0000dd06 	andeq	sp, r0, r6, lsl #26
   12e48:	004e1602 	subeq	r1, lr, r2, lsl #12
   12e4c:	17d10200 	ldrbne	r0, [r1, r0, lsl #4]
   12e50:	00000035 	andeq	r0, r0, r5, lsr r0
   12e54:	c8070403 	stmdagt	r7, {r0, r1, sl}
   12e58:	04000000 	streq	r0, [r0], #-0
   12e5c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
   12e60:	08030074 	stmdaeq	r3, {r2, r4, r5, r6}
   12e64:	00032805 	andeq	r2, r3, r5, lsl #16
   12e68:	04080300 	streq	r0, [r8], #-768	; 0xfffffd00
   12e6c:	00000758 	andeq	r0, r0, r8, asr r7
   12e70:	0f060103 	svceq	0x00060103
   12e74:	02000006 	andeq	r0, r0, #6
   12e78:	00000076 	andeq	r0, r0, r6, ror r0
   12e7c:	64182b03 	ldrvs	r2, [r8], #-2819	; 0xfffff4fd
   12e80:	03000000 	movweq	r0, #0
   12e84:	060d0801 	streq	r0, [sp], -r1, lsl #16
   12e88:	02030000 	andeq	r0, r3, #0
   12e8c:	00042a05 	andeq	r2, r4, r5, lsl #20
   12e90:	07020300 	streq	r0, [r2, -r0, lsl #6]
   12e94:	00000828 	andeq	r0, r0, r8, lsr #16
   12e98:	2d050403 	cfstrscs	mvf0, [r5, #-12]
   12e9c:	02000003 	andeq	r0, r0, #3
   12ea0:	000002ef 	andeq	r0, r0, pc, ror #5
   12ea4:	8c194f03 	ldchi	15, cr4, [r9], {3}
   12ea8:	03000000 	movweq	r0, #0
   12eac:	00c30704 	sbceq	r0, r3, r4, lsl #14
   12eb0:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
   12eb4:	0000be07 	andeq	fp, r0, r7, lsl #28
   12eb8:	06040500 	streq	r0, [r4], -r0, lsl #10
   12ebc:	0000009a 	muleq	r0, sl, r0
   12ec0:	16080103 	strne	r0, [r8], -r3, lsl #2
   12ec4:	06000006 	streq	r0, [r0], -r6
   12ec8:	000000a1 	andeq	r0, r0, r1, lsr #1
   12ecc:	00a80407 	adceq	r0, r8, r7, lsl #8
   12ed0:	ad060000 	stcge	0, cr0, [r6, #-0]
   12ed4:	02000000 	andeq	r0, r0, #0
   12ed8:	00000078 	andeq	r0, r0, r8, ror r0
   12edc:	58131804 	ldmdapl	r3, {r2, fp, ip}
   12ee0:	02000000 	andeq	r0, r0, #0
   12ee4:	000002f1 	strdeq	r0, [r0], -r1
   12ee8:	80143004 	andshi	r3, r4, r4
   12eec:	02000000 	andeq	r0, r0, #0
   12ef0:	00003a5d 	andeq	r3, r0, sp, asr sl
   12ef4:	dc112405 	cfldrsle	mvf2, [r1], {5}
   12ef8:	07000000 	streq	r0, [r0, -r0]
   12efc:	0000e204 	andeq	lr, r0, r4, lsl #4
   12f00:	ee010800 	cdp	8, 0, cr0, cr1, cr0, {0}
   12f04:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
   12f08:	0000009a 	muleq	r0, sl, r0
   12f0c:	33920200 	orrscc	r0, r2, #0, 4
   12f10:	3a060000 	bcc	192f18 <_Min_Heap_Size+0x192718>
   12f14:	0000c41a 	andeq	ip, r0, sl, lsl r4
   12f18:	27fd0200 	ldrbcs	r0, [sp, r0, lsl #4]!
   12f1c:	3b060000 	blcc	192f24 <_Min_Heap_Size+0x192724>
   12f20:	0000791a 	andeq	r7, r0, sl, lsl r9
   12f24:	00fa0600 	rscseq	r0, sl, r0, lsl #12
   12f28:	fc020000 	stc2	0, cr0, [r2], {-0}
   12f2c:	06000027 	streq	r0, [r0], -r7, lsr #32
   12f30:	008c1a3c 	addeq	r1, ip, ip, lsr sl
   12f34:	58020000 	stmdapl	r2, {}	; <UNPREDICTABLE>
   12f38:	06000027 	streq	r0, [r0], -r7, lsr #32
   12f3c:	00c41a42 	sbceq	r1, r4, r2, asr #20
   12f40:	17060000 	strne	r0, [r6, -r0]
   12f44:	0a000001 	beq	12f50 <_Min_Heap_Size+0x12750>
   12f48:	00003076 	andeq	r3, r0, r6, ror r0
   12f4c:	0c0c0714 	stceq	7, cr0, [ip], {20}
   12f50:	00015708 	andeq	r5, r1, r8, lsl #14
   12f54:	2bfb0b00 	blcs	ffed5b5c <_estack+0xdfecc1bc>
   12f58:	11070000 	mrsne	r0, (UNDEF: 7)
   12f5c:	0117100c 	tsteq	r7, ip
   12f60:	23020000 	movwcs	r0, #8192	; 0x2000
   12f64:	2bf10b00 	blcs	ffc55b6c <_estack+0xdfc4c1cc>
   12f68:	12070000 	andne	r0, r7, #0
   12f6c:	01570c0c 	cmpeq	r7, ip, lsl #24
   12f70:	23020000 	movwcs	r0, #8192	; 0x2000
   12f74:	9a0c0004 	bls	312f8c <_Min_Heap_Size+0x31278c>
   12f78:	67000000 	strvs	r0, [r0, -r0]
   12f7c:	0d000001 	stceq	0, cr0, [r0, #-4]
   12f80:	00000035 	andeq	r0, r0, r5, lsr r0
   12f84:	660e0003 	strvs	r0, [lr], -r3
   12f88:	07000037 	smladxeq	r0, r7, r0, r0
   12f8c:	28220c17 	stmdacs	r2!, {r0, r1, r2, r4, sl, fp}
   12f90:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
   12f94:	0000298a 	andeq	r2, r0, sl, lsl #19
   12f98:	2b0c2507 	blcs	31c3bc <_Min_Heap_Size+0x31bbbc>
   12f9c:	00000128 	andeq	r0, r0, r8, lsr #2
   12fa0:	002df90a 	eoreq	pc, sp, sl, lsl #18
   12fa4:	29071c00 	stmdbcs	r7, {sl, fp, ip}
   12fa8:	01c0100c 	biceq	r1, r0, ip
   12fac:	fa0b0000 	blx	2d2fb4 <_Min_Heap_Size+0x2d27b4>
   12fb0:	0700002b 	streq	r0, [r0, -fp, lsr #32]
   12fb4:	0b110c2e 	bleq	456074 <_Min_Heap_Size+0x455874>
   12fb8:	02000001 	andeq	r0, r0, #1
   12fbc:	f10b0023 			; <UNDEFINED> instruction: 0xf10b0023
   12fc0:	0700002b 	streq	r0, [r0, -fp, lsr #32]
   12fc4:	9a0c0c2f 	bls	316088 <_Min_Heap_Size+0x315888>
   12fc8:	02000000 	andeq	r0, r0, #0
   12fcc:	0d0b0423 	cfstrseq	mvf0, [fp, #-140]	; 0xffffff74
   12fd0:	0700002c 	streq	r0, [r0, -ip, lsr #32]
   12fd4:	741a0c30 	ldrvc	r0, [sl], #-3120	; 0xfffff3d0
   12fd8:	02000001 	andeq	r0, r0, #1
   12fdc:	0e000823 	cdpeq	8, 0, cr0, cr0, cr3, {1}
   12fe0:	00003227 	andeq	r3, r0, r7, lsr #4
   12fe4:	030c3407 	movweq	r3, #50183	; 0xc407
   12fe8:	00000181 	andeq	r0, r0, r1, lsl #3
   12fec:	003d9a0a 	eorseq	r9, sp, sl, lsl #20
   12ff0:	43074c00 	movwmi	r4, #31744	; 0x7c00
   12ff4:	028c100c 	addeq	r1, ip, #12
   12ff8:	d50b0000 	strle	r0, [fp, #-0]
   12ffc:	07000039 	smladxeq	r0, r9, r0, r0
   13000:	9a0c0c45 	bls	31611c <_Min_Heap_Size+0x31591c>
   13004:	02000000 	andeq	r0, r0, #0
   13008:	8a0b0023 	bhi	2d309c <_Min_Heap_Size+0x2d289c>
   1300c:	0700002a 	streq	r0, [r0, -sl, lsr #32]
   13010:	8c160c4c 	ldchi	12, cr0, [r6], {76}	; 0x4c
   13014:	02000002 	andeq	r0, r0, #2
   13018:	ea0b0423 	b	2d40ac <_Min_Heap_Size+0x2d38ac>
   1301c:	07000037 	smladxeq	r0, r7, r0, r0
   13020:	0b110c4d 	bleq	45615c <_Min_Heap_Size+0x45595c>
   13024:	02000001 	andeq	r0, r0, #1
   13028:	de0b2c23 	cdple	12, 0, cr2, cr11, cr3, {1}
   1302c:	07000039 	smladxeq	r0, r9, r0, r0
   13030:	9a0c0c4e 	bls	316170 <_Min_Heap_Size+0x315970>
   13034:	02000000 	andeq	r0, r0, #0
   13038:	cf0b3023 	svcgt	0x000b3023
   1303c:	0700003b 	smladxeq	r0, fp, r0, r0
   13040:	9c0d0c53 	stcls	12, cr0, [sp], {83}	; 0x53
   13044:	02000002 	andeq	r0, r0, #2
   13048:	080b3423 	stmdaeq	fp, {r0, r1, r5, sl, ip, sp}
   1304c:	07000033 	smladxeq	r0, r3, r0, r0
   13050:	ac150c61 	ldcge	12, cr0, [r5], {97}	; 0x61
   13054:	02000002 	andeq	r0, r0, #2
   13058:	800b3823 	andhi	r3, fp, r3, lsr #16
   1305c:	0700003b 	smladxeq	r0, fp, r0, r0
   13060:	9a100c64 	bls	4161f8 <_Min_Heap_Size+0x4159f8>
   13064:	02000000 	andeq	r0, r0, #0
   13068:	c90b4023 	stmdbgt	fp, {r0, r1, r5, lr}
   1306c:	0700003d 	smladxeq	r0, sp, r0, r0
   13070:	bc120c70 	ldclt	12, cr0, [r2], {112}	; 0x70
   13074:	02000002 	andeq	r0, r0, #2
   13078:	1b0b4423 	blne	2e410c <_Min_Heap_Size+0x2e390c>
   1307c:	07000035 	smladxeq	r0, r5, r0, r0
   13080:	cc110c71 	ldcgt	12, cr0, [r1], {113}	; 0x71
   13084:	02000002 	andeq	r0, r0, #2
   13088:	100b4823 	andne	r4, fp, r3, lsr #16
   1308c:	07000034 	smladxeq	r0, r4, r0, r0
   13090:	b8110c74 	ldmdalt	r1, {r2, r4, r5, r6, sl, fp}
   13094:	02000000 	andeq	r0, r0, #0
   13098:	ac0b4923 			; <UNDEFINED> instruction: 0xac0b4923
   1309c:	0700003a 	smladxeq	r0, sl, r0, r0
   130a0:	b8110c78 	ldmdalt	r1, {r3, r4, r5, r6, sl, fp}
   130a4:	02000000 	andeq	r0, r0, #0
   130a8:	0c004a23 			; <UNDEFINED> instruction: 0x0c004a23
   130ac:	00000167 	andeq	r0, r0, r7, ror #2
   130b0:	0000029c 	muleq	r0, ip, r2
   130b4:	0000350d 	andeq	r3, r0, sp, lsl #10
   130b8:	0c000100 	stfeqs	f0, [r0], {-0}
   130bc:	000000b8 	strheq	r0, [r0], -r8
   130c0:	000002ac 	andeq	r0, r0, ip, lsr #5
   130c4:	0000350d 	andeq	r3, r0, sp, lsl #10
   130c8:	0c000300 	stceq	3, cr0, [r0], {-0}
   130cc:	0000010b 	andeq	r0, r0, fp, lsl #2
   130d0:	000002bc 			; <UNDEFINED> instruction: 0x000002bc
   130d4:	0000350d 	andeq	r3, r0, sp, lsl #10
   130d8:	0c000100 	stfeqs	f0, [r0], {-0}
   130dc:	000000c4 	andeq	r0, r0, r4, asr #1
   130e0:	000002cc 	andeq	r0, r0, ip, asr #5
   130e4:	0000350d 	andeq	r3, r0, sp, lsl #10
   130e8:	0c000000 	stceq	0, cr0, [r0], {-0}
   130ec:	000000b8 	strheq	r0, [r0], -r8
   130f0:	000002dc 	ldrdeq	r0, [r0], -ip
   130f4:	0000350d 	andeq	r3, r0, sp, lsl #10
   130f8:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
   130fc:	00003252 	andeq	r3, r0, r2, asr r2
   13100:	030c7d07 	movweq	r7, #52487	; 0xcd07
   13104:	000001cd 	andeq	r0, r0, sp, asr #3
   13108:	9107040f 	tstls	r7, pc, lsl #8
   1310c:	030e050c 	movweq	r0, #58636	; 0xe50c
   13110:	e8100000 	ldmda	r0, {}	; <UNPREDICTABLE>
   13114:	0700002b 	streq	r0, [r0, -fp, lsr #32]
   13118:	9a100c93 	bls	41636c <_Min_Heap_Size+0x415b6c>
   1311c:	10000000 	andne	r0, r0, r0
   13120:	00002bfa 	strdeq	r2, [r0], -sl
   13124:	150c9407 	strne	r9, [ip, #-1031]	; 0xfffffbf9
   13128:	0000010b 	andeq	r0, r0, fp, lsl #2
   1312c:	31ed0a00 	mvncc	r0, r0, lsl #20
   13130:	075c0000 	ldrbeq	r0, [ip, -r0]
   13134:	8b100c8d 	blhi	416370 <_Min_Heap_Size+0x415b70>
   13138:	0b000003 	bleq	1314c <_Min_Heap_Size+0x1294c>
   1313c:	00002bdf 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
   13140:	0c0c8f07 	stceq	15, cr8, [ip], {7}
   13144:	0000038b 	andeq	r0, r0, fp, lsl #7
   13148:	11002302 	tstne	r0, r2, lsl #6
   1314c:	95070075 	strls	r0, [r7, #-117]	; 0xffffff8b
   13150:	02e9070c 	rsceq	r0, r9, #12, 14	; 0x300000
   13154:	23020000 	movwcs	r0, #8192	; 0x2000
   13158:	2a8a0b0c 	bcs	fe295d90 <_estack+0xde28c3f0>
   1315c:	97070000 	strls	r0, [r7, -r0]
   13160:	039b120c 	orrseq	r1, fp, #12, 4	; 0xc0000000
   13164:	23020000 	movwcs	r0, #8192	; 0x2000
   13168:	2c0c0b10 			; <UNDEFINED> instruction: 0x2c0c0b10
   1316c:	98070000 	stmdals	r7, {}	; <UNPREDICTABLE>
   13170:	03ab110c 			; <UNDEFINED> instruction: 0x03ab110c
   13174:	23020000 	movwcs	r0, #8192	; 0x2000
   13178:	2f4a0b48 	svccs	0x004a0b48
   1317c:	99070000 	stmdbls	r7, {}	; <UNPREDICTABLE>
   13180:	03bb0d0c 			; <UNDEFINED> instruction: 0x03bb0d0c
   13184:	23020000 	movwcs	r0, #8192	; 0x2000
   13188:	2f530b54 	svccs	0x00530b54
   1318c:	9c070000 	stcls	0, cr0, [r7], {-0}
   13190:	00b8110c 	adcseq	r1, r8, ip, lsl #2
   13194:	23020000 	movwcs	r0, #8192	; 0x2000
   13198:	2c030b56 			; <UNDEFINED> instruction: 0x2c030b56
   1319c:	a0070000 	andge	r0, r7, r0
   131a0:	009a100c 	addseq	r1, sl, ip
   131a4:	23020000 	movwcs	r0, #8192	; 0x2000
   131a8:	9a0c0058 	bls	313310 <_Min_Heap_Size+0x312b10>
   131ac:	9b000000 	blls	131b4 <_Min_Heap_Size+0x129b4>
   131b0:	0d000003 	stceq	0, cr0, [r0, #-12]
   131b4:	00000035 	andeq	r0, r0, r5, lsr r0
   131b8:	c00c0002 	andgt	r0, ip, r2
   131bc:	ab000001 	blge	131c8 <_Min_Heap_Size+0x129c8>
   131c0:	0d000003 	stceq	0, cr0, [r0, #-12]
   131c4:	00000035 	andeq	r0, r0, r5, lsr r0
   131c8:	0b0c0001 	bleq	3131d4 <_Min_Heap_Size+0x3129d4>
   131cc:	bb000001 	bllt	131d8 <_Min_Heap_Size+0x129d8>
   131d0:	0d000003 	stceq	0, cr0, [r0, #-12]
   131d4:	00000035 	andeq	r0, r0, r5, lsr r0
   131d8:	b80c0002 	stmdalt	ip, {r1}
   131dc:	cb000000 	blgt	131e4 <_Min_Heap_Size+0x129e4>
   131e0:	0d000003 	stceq	0, cr0, [r0, #-12]
   131e4:	00000035 	andeq	r0, r0, r5, lsr r0
   131e8:	290e0001 	stmdbcs	lr, {r0}
   131ec:	0700002e 	streq	r0, [r0, -lr, lsr #32]
   131f0:	0e030ca7 	cdpeq	12, 0, cr0, cr3, cr7, {5}
   131f4:	0a000003 	beq	13208 <_Min_Heap_Size+0x12a08>
   131f8:	00004338 	andeq	r4, r0, r8, lsr r3
   131fc:	0cd40728 	ldcleq	7, cr0, [r4], {40}	; 0x28
   13200:	00044710 	andeq	r4, r4, r0, lsl r7
   13204:	2bdf0b00 	blcs	ff7d5e0c <_estack+0xdf7cc46c>
   13208:	d6070000 	strle	r0, [r7], -r0
   1320c:	009a0c0c 	addseq	r0, sl, ip, lsl #24
   13210:	23020000 	movwcs	r0, #8192	; 0x2000
   13214:	2bfb0b00 	blcs	ffed5e1c <_estack+0xdfecc47c>
   13218:	d7070000 	strle	r0, [r7, -r0]
   1321c:	0167160c 	cmneq	r7, ip, lsl #12
   13220:	23020000 	movwcs	r0, #8192	; 0x2000
   13224:	2a8a0b04 	bcs	fe295e3c <_estack+0xde28c49c>
   13228:	d8070000 	stmdale	r7, {}	; <UNPREDICTABLE>
   1322c:	0117100c 	tsteq	r7, ip
   13230:	23020000 	movwcs	r0, #8192	; 0x2000
   13234:	44e90b18 	strbtmi	r0, [r9], #2840	; 0xb18
   13238:	d9070000 	stmdble	r7, {}	; <UNPREDICTABLE>
   1323c:	009a0c0c 	addseq	r0, sl, ip, lsl #24
   13240:	23020000 	movwcs	r0, #8192	; 0x2000
   13244:	44320b1c 	ldrtmi	r0, [r2], #-2844	; 0xfffff4e4
   13248:	da070000 	ble	1d3250 <_Min_Heap_Size+0x1d2a50>
   1324c:	00d0140c 	sbcseq	r1, r0, ip, lsl #8
   13250:	23020000 	movwcs	r0, #8192	; 0x2000
   13254:	46060b20 	strmi	r0, [r6], -r0, lsr #22
   13258:	de070000 	cdple	0, 0, cr0, cr7, cr0, {0}
   1325c:	00b80d0c 	adcseq	r0, r8, ip, lsl #26
   13260:	23020000 	movwcs	r0, #8192	; 0x2000
   13264:	2a0e0024 	bcs	3932fc <_Min_Heap_Size+0x392afc>
   13268:	07000043 	streq	r0, [r0, -r3, asr #32]
   1326c:	d8030cdf 	stmdale	r3, {r0, r1, r2, r3, r4, r6, r7, sl, fp}
   13270:	12000003 	andne	r0, r0, #3
   13274:	0000277f 	andeq	r2, r0, pc, ror r7
   13278:	08900814 	ldmeq	r0, {r2, r4, fp}
   1327c:	000004ad 	andeq	r0, r0, sp, lsr #9
   13280:	00276313 	eoreq	r6, r7, r3, lsl r3
   13284:	24930800 	ldrcs	r0, [r3], #2048	; 0x800
   13288:	00000117 	andeq	r0, r0, r7, lsl r1
   1328c:	13002302 	movwne	r2, #770	; 0x302
   13290:	000027cc 	andeq	r2, r0, ip, asr #15
   13294:	ad2d9408 	cfstrsge	mvf9, [sp, #-32]!	; 0xffffffe0
   13298:	02000004 	andeq	r0, r0, #4
   1329c:	1b130423 	blne	4d4330 <_Min_Heap_Size+0x4d3b30>
   132a0:	08000028 	stmdaeq	r0, {r3, r5}
   132a4:	04ad2d95 	strteq	r2, [sp], #3477	; 0xd95
   132a8:	23020000 	movwcs	r0, #8192	; 0x2000
   132ac:	27771308 	ldrbcs	r1, [r7, -r8, lsl #6]!
   132b0:	96080000 	strls	r0, [r8], -r0
   132b4:	00009a0c 	andeq	r9, r0, ip, lsl #20
   132b8:	0c230200 	sfmeq	f0, 4, [r3], #-0
   132bc:	00274c13 	eoreq	r4, r7, r3, lsl ip
   132c0:	28970800 	ldmcs	r7, {fp}
   132c4:	000004ee 	andeq	r0, r0, lr, ror #9
   132c8:	00102302 	andseq	r2, r0, r2, lsl #6
   132cc:	04540407 	ldrbeq	r0, [r4], #-1031	; 0xfffffbf9
   132d0:	4e120000 	cdpmi	0, 1, cr0, cr2, cr0, {0}
   132d4:	1c000028 	stcne	0, cr0, [r0], {40}	; 0x28
   132d8:	ee10ac08 	cdp	12, 1, cr10, cr0, cr8, {0}
   132dc:	13000004 	movwne	r0, #4
   132e0:	000027ad 	andeq	r2, r0, sp, lsr #15
   132e4:	0b25af08 	bleq	97ef0c <_Min_Heap_Size+0x97e70c>
   132e8:	02000001 	andeq	r0, r0, #1
   132ec:	13130023 	tstne	r3, #35	; 0x23
   132f0:	08000028 	stmdaeq	r0, {r3, r5}
   132f4:	050c26b0 	streq	r2, [ip, #-1712]	; 0xfffff950
   132f8:	23020000 	movwcs	r0, #8192	; 0x2000
   132fc:	276e1304 	strbcs	r1, [lr, -r4, lsl #6]!
   13300:	b1080000 	mrslt	r0, (UNDEF: 8)
   13304:	00050014 	andeq	r0, r5, r4, lsl r0
   13308:	08230200 	stmdaeq	r3!, {r9}
   1330c:	b3040700 	movwlt	r0, #18176	; 0x4700
   13310:	02000004 	andeq	r0, r0, #4
   13314:	0000376c 	andeq	r3, r0, ip, ror #14
   13318:	541b9a08 	ldrpl	r9, [fp], #-2568	; 0xfffff5f8
   1331c:	02000004 	andeq	r0, r0, #4
   13320:	00002990 	muleq	r0, r0, r9
   13324:	5424a608 	strtpl	sl, [r4], #-1544	; 0xfffff9f8
   13328:	07000004 	streq	r0, [r0, -r4]
   1332c:	0004f404 	andeq	pc, r4, r4, lsl #8
   13330:	322d0200 	eorcc	r0, sp, #0, 4
   13334:	b3080000 	movwlt	r0, #32768	; 0x8000
   13338:	0004b303 	andeq	fp, r4, r3, lsl #6
   1333c:	02520200 	subseq	r0, r2, #0, 4
   13340:	5c090000 	stcpl	0, cr0, [r9], {-0}
   13344:	00052a2e 	andeq	r2, r5, lr, lsr #20
   13348:	30040700 	andcc	r0, r4, r0, lsl #14
   1334c:	14000005 	strne	r0, [r0], #-5
   13350:	0000099e 	muleq	r0, lr, r9
   13354:	ee040701 	cdp	7, 0, cr0, cr4, cr1, {0}
   13358:	02000000 	andeq	r0, r0, #0
   1335c:	00002d4b 	andeq	r2, r0, fp, asr #26
   13360:	4824330a 	stmdami	r4!, {r1, r3, r8, r9, ip, sp}
   13364:	07000005 	streq	r0, [r0, -r5]
   13368:	00054e04 	andeq	r4, r5, r4, lsl #28
   1336c:	2aca1400 	bcs	ff298374 <_estack+0xdf28e9d4>
   13370:	02010000 	andeq	r0, r1, #0
   13374:	000043e5 	andeq	r4, r0, r5, ror #7
   13378:	65224e0b 	strvs	r4, [r2, #-3595]!	; 0xfffff1f5
   1337c:	06000005 	streq	r0, [r0], -r5
   13380:	00000554 	andeq	r0, r0, r4, asr r5
   13384:	056b0407 	strbeq	r0, [fp, #-1031]!	; 0xfffffbf9
   13388:	08120000 	ldmdaeq	r2, {}	; <UNPREDICTABLE>
   1338c:	28000047 	stmdacs	r0, {r0, r1, r2, r6}
   13390:	d3145301 	tstle	r4, #67108864	; 0x4000000
   13394:	13000005 	movwne	r0, #5
   13398:	000042dd 	ldrdeq	r4, [r0], -sp
   1339c:	ad165501 	cfldr32ge	mvfx5, [r6, #-4]
   133a0:	02000000 	andeq	r0, r0, #0
   133a4:	a5130023 	ldrge	r0, [r3, #-35]	; 0xffffffdd
   133a8:	01000045 	tsteq	r0, r5, asr #32
   133ac:	04f41456 	ldrbteq	r1, [r4], #1110	; 0x456
   133b0:	23020000 	movwcs	r0, #8192	; 0x2000
   133b4:	426c1304 	rsbmi	r1, ip, #4, 6	; 0x10000000
   133b8:	57010000 	strpl	r0, [r1, -r0]
   133bc:	00011714 	andeq	r1, r1, r4, lsl r7
   133c0:	18230200 	stmdane	r3!, {r9}
   133c4:	00469813 	subeq	r9, r6, r3, lsl r8
   133c8:	10580100 	subsne	r0, r8, r0, lsl #2
   133cc:	0000009a 	muleq	r0, sl, r0
   133d0:	131c2302 	tstne	ip, #134217728	; 0x8000000
   133d4:	00004280 	andeq	r4, r0, r0, lsl #5
   133d8:	d33e5901 	teqle	lr, #16384	; 0x4000
   133dc:	02000005 	andeq	r0, r0, #5
   133e0:	3d132023 	ldccc	0, cr2, [r3, #-140]	; 0xffffff74
   133e4:	01000046 	tsteq	r0, r6, asr #32
   133e8:	00b8115d 	adcseq	r1, r8, sp, asr r1
   133ec:	23020000 	movwcs	r0, #8192	; 0x2000
   133f0:	5c020024 	stcpl	0, cr0, [r2], {36}	; 0x24
   133f4:	0b000043 	bleq	13508 <_Min_Heap_Size+0x12d08>
   133f8:	05df1153 	ldrbeq	r1, [pc, #339]	; 13553 <_Min_Heap_Size+0x12d53>
   133fc:	04070000 	streq	r0, [r7], #-0
   13400:	000005e5 	andeq	r0, r0, r5, ror #11
   13404:	05f10108 	ldrbeq	r0, [r1, #264]!	; 0x108
   13408:	54090000 	strpl	r0, [r9], #-0
   1340c:	00000005 	andeq	r0, r0, r5
   13410:	00466b02 	subeq	r6, r6, r2, lsl #22
   13414:	11590b00 	cmpne	r9, r0, lsl #22
   13418:	000005fd 	strdeq	r0, [r0], -sp
   1341c:	06030407 	streq	r0, [r3], -r7, lsl #8
   13420:	01080000 	mrseq	r0, (UNDEF: 8)
   13424:	00000614 	andeq	r0, r0, r4, lsl r6
   13428:	00009a09 	andeq	r9, r0, r9, lsl #20
   1342c:	00c40900 	sbceq	r0, r4, r0, lsl #18
   13430:	02000000 	andeq	r0, r0, #0
   13434:	000044f2 	strdeq	r4, [r0], -r2
   13438:	6b075e01 	blvs	1eac44 <_Min_Heap_Size+0x1ea444>
   1343c:	02000005 	andeq	r0, r0, #5
   13440:	00004330 	andeq	r4, r0, r0, lsr r3
   13444:	14146201 	ldrne	r6, [r4], #-513	; 0xfffffdff
   13448:	12000006 	andne	r0, r0, #6
   1344c:	000047a1 	andeq	r4, r0, r1, lsr #15
   13450:	14690108 	strbtne	r0, [r9], #-264	; 0xfffffef8
   13454:	00000658 	andeq	r0, r0, r8, asr r6
   13458:	0046ea13 	subeq	lr, r6, r3, lsl sl
   1345c:	146b0100 	strbtne	r0, [fp], #-256	; 0xffffff00
   13460:	00000117 	andeq	r0, r0, r7, lsl r1
   13464:	13002302 	movwne	r2, #770	; 0x302
   13468:	000046e2 	andeq	r4, r0, r2, ror #13
   1346c:	58136c01 	ldmdapl	r3, {r0, sl, fp, sp, lr}
   13470:	02000006 	andeq	r0, r0, #6
   13474:	07000423 	streq	r0, [r0, -r3, lsr #8]
   13478:	00062004 	andeq	r2, r6, r4
   1347c:	06580600 	ldrbeq	r0, [r8], -r0, lsl #12
   13480:	0d020000 	stceq	0, cr0, [r2, #-0]
   13484:	01000043 	tsteq	r0, r3, asr #32
   13488:	062c076d 	strteq	r0, [ip], -sp, ror #14
   1348c:	4c120000 	ldcmi	0, cr0, [r2], {-0}
   13490:	0c000045 	stceq	0, cr0, [r0], {69}	; 0x45
   13494:	aa147001 	bge	52f4a0 <_Min_Heap_Size+0x52eca0>
   13498:	13000006 	movwne	r0, #6
   1349c:	00004280 	andeq	r4, r0, r0, lsl #5
   134a0:	f11a7301 			; <UNDEFINED> instruction: 0xf11a7301
   134a4:	02000005 	andeq	r0, r0, #5
   134a8:	f9130023 			; <UNDEFINED> instruction: 0xf9130023
   134ac:	01000045 	tsteq	r0, r5, asr #32
   134b0:	009a1074 	addseq	r1, sl, r4, ror r0
   134b4:	23020000 	movwcs	r0, #8192	; 0x2000
   134b8:	42e91304 	rscmi	r1, r9, #4, 6	; 0x10000000
   134bc:	75010000 	strvc	r0, [r1, #-0]
   134c0:	0000c412 	andeq	ip, r0, r2, lsl r4
   134c4:	08230200 	stmdaeq	r3!, {r9}
   134c8:	441d0200 	ldrmi	r0, [sp], #-512	; 0xfffffe00
   134cc:	76010000 	strvc	r0, [r1], -r0
   134d0:	00066f07 	andeq	r6, r6, r7, lsl #30
   134d4:	06aa0600 	strteq	r0, [sl], r0, lsl #12
   134d8:	0c150000 	ldceq	0, cr0, [r5], {-0}
   134dc:	dd097d01 	stcle	13, cr7, [r9, #-4]
   134e0:	16000006 	strne	r0, [r0], -r6
   134e4:	000042bd 			; <UNDEFINED> instruction: 0x000042bd
   134e8:	631e7f01 	tstvs	lr, #1, 30
   134ec:	16000006 	strne	r0, [r0], -r6
   134f0:	00004580 	andeq	r4, r0, r0, lsl #11
   134f4:	aa268401 	bge	9b4500 <_Min_Heap_Size+0x9b3d00>
   134f8:	00000006 	andeq	r0, r0, r6
   134fc:	00447012 	subeq	r7, r4, r2, lsl r0
   13500:	7a011000 	bvc	57508 <_Min_Heap_Size+0x56d08>
   13504:	00070714 	andeq	r0, r7, r4, lsl r7
   13508:	46a21300 	strtmi	r1, [r2], r0, lsl #6
   1350c:	7c010000 	stcvc	0, cr0, [r1], {-0}
   13510:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
   13514:	00230200 	eoreq	r0, r3, r0, lsl #4
   13518:	01007517 	tsteq	r0, r7, lsl r5
   1351c:	06bb0b86 	ldrteq	r0, [fp], r6, lsl #23
   13520:	23020000 	movwcs	r0, #8192	; 0x2000
   13524:	ad020004 	stcge	0, cr0, [r2, #-16]
   13528:	01000046 	tsteq	r0, r6, asr #32
   1352c:	06dd0787 	ldrbeq	r0, [sp], r7, lsl #15
   13530:	f9180000 			; <UNDEFINED> instruction: 0xf9180000
   13534:	01000044 	tsteq	r0, r4, asr #32
   13538:	0512238f 	ldreq	r2, [r2, #-911]	; 0xfffffc71
   1353c:	03050000 	movweq	r0, #20480	; 0x5000
   13540:	200088c0 	andcs	r8, r0, r0, asr #17
   13544:	00450b18 	subeq	r0, r5, r8, lsl fp
   13548:	23900100 	orrscs	r0, r0, #0, 2
   1354c:	00000512 	andeq	r0, r0, r2, lsl r5
   13550:	88dc0305 	ldmhi	ip, {r0, r2, r8, r9}^
   13554:	7c182000 	ldcvc	0, cr2, [r8], {-0}
   13558:	01000046 	tsteq	r0, r6, asr #32
   1355c:	07492591 			; <UNDEFINED> instruction: 0x07492591
   13560:	03050000 	movweq	r0, #20480	; 0x5000
   13564:	20008818 	andcs	r8, r0, r8, lsl r8
   13568:	05120407 	ldreq	r0, [r2, #-1031]	; 0xfffffbf9
   1356c:	bf180000 	svclt	0x00180000
   13570:	01000044 	tsteq	r0, r4, asr #32
   13574:	07492592 			; <UNDEFINED> instruction: 0x07492592
   13578:	03050000 	movweq	r0, #20480	; 0x5000
   1357c:	2000881c 	andcs	r8, r0, ip, lsl r8
   13580:	00431e18 	subeq	r1, r3, r8, lsl lr
   13584:	2a950100 	bcs	fe55398c <_estack+0xde549fec>
   13588:	0000053c 	andeq	r0, r0, ip, lsr r5
   1358c:	89580305 	ldmdbhi	r8, {r0, r2, r8, r9}^
   13590:	0f182000 	svceq	0x00182000
   13594:	01000046 	tsteq	r0, r6, asr #32
   13598:	051e2996 	ldreq	r2, [lr, #-2454]	; 0xfffff66a
   1359c:	03050000 	movweq	r0, #20480	; 0x5000
   135a0:	2000895c 	andcs	r8, r0, ip, asr r9
   135a4:	46c10119 			; <UNDEFINED> instruction: 0x46c10119
   135a8:	32010000 	andcc	r0, r1, #0
   135ac:	00010a05 	andeq	r0, r1, r5, lsl #20
   135b0:	00000000 	andeq	r0, r0, r0
   135b4:	02000000 	andeq	r0, r0, #0
   135b8:	1a01007d 	bne	537b4 <_Min_Heap_Size+0x52fb4>
   135bc:	0042f601 	subeq	pc, r2, r1, lsl #12
   135c0:	04ef0100 	strbteq	r0, [pc], #256	; 135c8 <_Min_Heap_Size+0x12dc8>
   135c4:	00fa0114 	rscseq	r0, sl, r4, lsl r1
	...
   135d0:	e3f00000 	mvns	r0, #0
   135d4:	52010000 	andpl	r0, r1, #0
   135d8:	1b000008 	blne	13600 <_Min_Heap_Size+0x12e00>
   135dc:	000046f8 	strdeq	r4, [r0], -r8
   135e0:	3d04ef01 	stccc	15, cr14, [r4, #-4]
   135e4:	000005f1 	strdeq	r0, [r0], -r1
   135e8:	0000e42e 	andeq	lr, r0, lr, lsr #8
   135ec:	0000e428 	andeq	lr, r0, r8, lsr #8
   135f0:	0045f91b 	subeq	pc, r5, fp, lsl r9	; <UNPREDICTABLE>
   135f4:	04f00100 	ldrbteq	r0, [r0], #256	; 0x100
   135f8:	00009a33 	andeq	r9, r0, r3, lsr sl
   135fc:	00e46100 	rsceq	r6, r4, r0, lsl #2
   13600:	00e45b00 	rsceq	r5, r4, r0, lsl #22
   13604:	42e91b00 	rscmi	r1, r9, #0, 22
   13608:	f1010000 	setend	le
   1360c:	00c43504 	sbceq	r3, r4, r4, lsl #10
   13610:	e4940000 	ldr	r0, [r4], #0
   13614:	e48e0000 	str	r0, [lr], #0
   13618:	3a1b0000 	bcc	6d3620 <_Min_Heap_Size+0x6d2e20>
   1361c:	0100003f 	tsteq	r0, pc, lsr r0
   13620:	173704f2 			; <UNDEFINED> instruction: 0x173704f2
   13624:	c6000001 	strgt	r0, [r0], -r1
   13628:	c00000e4 	andgt	r0, r0, r4, ror #1
   1362c:	1c0000e4 	stcne	0, cr0, [r0], {228}	; 0xe4
   13630:	0000468f 	andeq	r4, r0, pc, lsl #13
   13634:	2104f401 	tstcs	r4, r1, lsl #8	; <UNPREDICTABLE>
   13638:	00000707 	andeq	r0, r0, r7, lsl #14
   1363c:	1d689102 	stfnep	f1, [r8, #-8]!
   13640:	00003848 	andeq	r3, r0, r8, asr #16
   13644:	1804f501 	stmdane	r4, {r0, r8, sl, ip, sp, lr, pc}
   13648:	000000fa 	strdeq	r0, [r0], -sl
   1364c:	0000e4f4 	strdeq	lr, [r0], -r4
   13650:	0000e4f2 	strdeq	lr, [r0], -r2
   13654:	0000001e 	andeq	r0, r0, lr, lsl r0
   13658:	00185f00 	andseq	r5, r8, r0, lsl #30
   1365c:	51011f00 	tstpl	r1, r0, lsl #30
   13660:	1f007d02 	svcne	0x00007d02
   13664:	f3035201 	vhsub.u8	d5, d3, d1
   13668:	011f5301 	tsteq	pc, r1, lsl #6
   1366c:	00300153 	eorseq	r0, r0, r3, asr r1
   13670:	27011a00 	strcs	r1, [r1, -r0, lsl #20]
   13674:	01000047 	tsteq	r0, r7, asr #32
   13678:	011404d1 			; <UNDEFINED> instruction: 0x011404d1
   1367c:	000000fa 	strdeq	r0, [r0], -sl
	...
   13688:	0000e507 	andeq	lr, r0, r7, lsl #10
   1368c:	00090801 	andeq	r0, r9, r1, lsl #16
   13690:	46f81b00 	ldrbtmi	r1, [r8], r0, lsl #22
   13694:	d1010000 	mrsle	r0, (UNDEF: 1)
   13698:	05f14404 	ldrbeq	r4, [r1, #1028]!	; 0x404
   1369c:	e5450000 	strb	r0, [r5, #-0]
   136a0:	e53f0000 	ldr	r0, [pc, #-0]!	; 136a8 <_Min_Heap_Size+0x12ea8>
   136a4:	f91b0000 			; <UNDEFINED> instruction: 0xf91b0000
   136a8:	01000045 	tsteq	r0, r5, asr #32
   136ac:	9a3a04d2 	bls	e949fc <_Min_Heap_Size+0xe941fc>
   136b0:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
   136b4:	720000e5 	andvc	r0, r0, #229	; 0xe5
   136b8:	1b0000e5 	blne	13a54 <_Min_Heap_Size+0x13254>
   136bc:	000042e9 	andeq	r4, r0, r9, ror #5
   136c0:	3c04d301 	stccc	3, cr13, [r4], {1}
   136c4:	000000c4 	andeq	r0, r0, r4, asr #1
   136c8:	0000e5ab 	andeq	lr, r0, fp, lsr #11
   136cc:	0000e5a5 	andeq	lr, r0, r5, lsr #11
   136d0:	0029111b 	eoreq	r1, r9, fp, lsl r1
   136d4:	04d40100 	ldrbeq	r0, [r4], #256	; 0x100
   136d8:	00090840 	andeq	r0, r9, r0, asr #16
   136dc:	00e5dd00 	rsceq	sp, r5, r0, lsl #26
   136e0:	00e5d700 	rsceq	sp, r5, r0, lsl #14
   136e4:	468f1c00 	strmi	r1, [pc], r0, lsl #24
   136e8:	d6010000 	strle	r0, [r1], -r0
   136ec:	07072104 	streq	r2, [r7, -r4, lsl #2]
   136f0:	91020000 	mrsls	r0, (UNDEF: 2)
   136f4:	38481d68 	stmdacc	r8, {r3, r5, r6, r8, sl, fp, ip}^
   136f8:	d7010000 	strle	r0, [r1, -r0]
   136fc:	00fa1804 	rscseq	r1, sl, r4, lsl #16
   13700:	e60b0000 	str	r0, [fp], -r0
   13704:	e6090000 	str	r0, [r9], -r0
   13708:	001e0000 	andseq	r0, lr, r0
   1370c:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
   13710:	1f000018 	svcne	0x00000018
   13714:	7d025101 	stfvcs	f5, [r2, #-4]
   13718:	52011f00 	andpl	r1, r1, #0, 30
   1371c:	5301f303 	movwpl	pc, #4867	; 0x1303	; <UNPREDICTABLE>
   13720:	0153011f 	cmpeq	r3, pc, lsl r1
   13724:	07000030 	smladxeq	r0, r0, r0, r0
   13728:	0000fa04 	andeq	pc, r0, r4, lsl #20
   1372c:	09080600 	stmdbeq	r8, {r9, sl}
   13730:	01200000 			; <UNDEFINED> instruction: 0x01200000
   13734:	00004594 	muleq	r0, r4, r5
   13738:	0a04bc01 	beq	142744 <_Min_Heap_Size+0x141f44>
   1373c:	00000001 	andeq	r0, r0, r1
   13740:	00000000 	andeq	r0, r0, r0
   13744:	00e61e00 	rsceq	r1, r6, r0, lsl #28
   13748:	09810100 	stmibeq	r1, {r8}
   1374c:	e31b0000 	tst	fp, #0
   13750:	01000046 	tsteq	r0, r6, asr #32
   13754:	542a04bc 	strtpl	r0, [sl], #-1212	; 0xfffffb44
   13758:	42000005 	andmi	r0, r0, #5
   1375c:	3e0000e6 	cdpcc	0, 0, cr0, cr0, cr6, {7}
   13760:	1b0000e6 	blne	13b00 <_Min_Heap_Size+0x13300>
   13764:	000045b4 			; <UNDEFINED> instruction: 0x000045b4
   13768:	2304bd01 	movwcs	fp, #19713	; 0x4d01
   1376c:	0000009a 	muleq	r0, sl, r0
   13770:	0000e664 	andeq	lr, r0, r4, ror #12
   13774:	0000e660 	andeq	lr, r0, r0, ror #12
   13778:	0046e21d 	subeq	lr, r6, sp, lsl r2
   1377c:	04bf0100 	ldrteq	r0, [pc], #256	; 13784 <_Min_Heap_Size+0x12f84>
   13780:	00065e19 	andeq	r5, r6, r9, lsl lr
   13784:	00e68600 	rsceq	r8, r6, r0, lsl #12
   13788:	00e68200 	rsceq	r8, r6, r0, lsl #4
   1378c:	00002100 	andeq	r2, r0, r0, lsl #2
   13790:	187d0000 	ldmdane	sp!, {}^	; <UNPREDICTABLE>
   13794:	00210000 	eoreq	r0, r1, r0
   13798:	8b000000 	blhi	137a0 <_Min_Heap_Size+0x12fa0>
   1379c:	00000018 	andeq	r0, r0, r8, lsl r0
   137a0:	4485011a 	strmi	r0, [r5], #282	; 0x11a
   137a4:	a7010000 	strge	r0, [r1, -r0]
   137a8:	9a010c04 	bls	567c0 <_Min_Heap_Size+0x55fc0>
	...
   137b4:	a4000000 	strge	r0, [r0], #-0
   137b8:	010000e6 	smlatteq	r0, r6, r0, r0
   137bc:	000009f3 	strdeq	r0, [r0], -r3
   137c0:	0046e31b 	subeq	lr, r6, fp, lsl r3
   137c4:	04a70100 	strteq	r0, [r7], #256	; 0x100
   137c8:	00056033 	andeq	r6, r5, r3, lsr r0
   137cc:	00e6ca00 	rsceq	ip, r6, r0, lsl #20
   137d0:	00e6c400 	rsceq	ip, r6, r0, lsl #8
   137d4:	46e21d00 	strbtmi	r1, [r2], r0, lsl #26
   137d8:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
   137dc:	065e1904 	ldrbeq	r1, [lr], -r4, lsl #18
   137e0:	e6fc0000 	ldrbt	r0, [ip], r0
   137e4:	e6f60000 	ldrbt	r0, [r6], r0
   137e8:	461d0000 	ldrmi	r0, [sp], -r0
   137ec:	01000044 	tsteq	r0, r4, asr #32
   137f0:	9a1004aa 	bls	414aa0 <_Min_Heap_Size+0x4142a0>
   137f4:	2a000000 	bcs	137fc <_Min_Heap_Size+0x12ffc>
   137f8:	280000e7 	stmdacs	r0, {r0, r1, r2, r5, r6, r7}
   137fc:	210000e7 	smlattcs	r0, r7, r0, r0
   13800:	00000000 	andeq	r0, r0, r0
   13804:	0000187d 	andeq	r1, r0, sp, ror r8
   13808:	00000021 	andeq	r0, r0, r1, lsr #32
   1380c:	00188b00 	andseq	r8, r8, r0, lsl #22
   13810:	011a0000 	tsteq	sl, r0
   13814:	0000444f 	andeq	r4, r0, pc, asr #8
   13818:	10048a01 	andne	r8, r4, r1, lsl #20
   1381c:	0000fa01 	andeq	pc, r0, r1, lsl #20
	...
   13828:	00e73d00 	rsceq	r3, r7, r0, lsl #26
   1382c:	0a650100 	beq	1953c34 <_Min_Heap_Size+0x1953434>
   13830:	e31b0000 	tst	fp, #0
   13834:	01000046 	tsteq	r0, r6, asr #32
   13838:	5433048a 	ldrtpl	r0, [r3], #-1162	; 0xfffffb76
   1383c:	67000005 	strvs	r0, [r0, -r5]
   13840:	5d0000e7 	stcpl	0, cr0, [r0, #-924]	; 0xfffffc64
   13844:	1d0000e7 	stcne	0, cr0, [r0, #-924]	; 0xfffffc64
   13848:	00003848 	andeq	r3, r0, r8, asr #16
   1384c:	14048c01 	strne	r8, [r4], #-3073	; 0xfffff3ff
   13850:	000000fa 	strdeq	r0, [r0], -sl
   13854:	0000e7ae 	andeq	lr, r0, lr, lsr #15
   13858:	0000e7ac 	andeq	lr, r0, ip, lsr #15
   1385c:	0046e21d 	subeq	lr, r6, sp, lsl r2
   13860:	048d0100 	streq	r0, [sp], #256	; 0x100
   13864:	00065813 	andeq	r5, r6, r3, lsl r8
   13868:	00e7cb00 	rsceq	ip, r7, r0, lsl #22
   1386c:	00e7c100 	rsceq	ip, r7, r0, lsl #2
   13870:	00002100 	andeq	r2, r0, r0, lsl #2
   13874:	187d0000 	ldmdane	sp!, {}^	; <UNPREDICTABLE>
   13878:	00210000 	eoreq	r0, r1, r0
   1387c:	8b000000 	blhi	13884 <_Min_Heap_Size+0x13084>
   13880:	00000018 	andeq	r0, r0, r8, lsl r0
   13884:	00439022 	subeq	r9, r3, r2, lsr #32
   13888:	04570100 	ldrbeq	r0, [r7], #-256	; 0xffffff00
   1388c:	2d040111 	stfcss	f0, [r4, #-68]	; 0xffffffbc
   13890:	2d640800 	stclcs	8, cr0, [r4, #-0]
   13894:	e8100800 	ldmda	r0, {fp}
   13898:	17010000 	strne	r0, [r1, -r0]
   1389c:	2300000b 	movwcs	r0, #11
   138a0:	08002d32 	stmdaeq	r0, {r1, r4, r5, r8, sl, fp, sp}
   138a4:	08002d46 	stmdaeq	r0, {r1, r2, r6, r8, sl, fp, sp}
   138a8:	00000ae0 	andeq	r0, r0, r0, ror #21
   138ac:	0042ab1c 	subeq	sl, r2, ip, lsl fp
   138b0:	04690100 	strbteq	r0, [r9], #-256	; 0xffffff00
   138b4:	0003cb3a 	andeq	ip, r3, sl, lsr fp
   138b8:	fc030500 	stc2	5, cr0, [r3], {-0}
   138bc:	1c200088 	stcne	0, cr0, [r0], #-544	; 0xfffffde0
   138c0:	000045df 	ldrdeq	r4, [r0], -pc	; <UNPREDICTABLE>
   138c4:	34046a01 	strcc	r6, [r4], #-2561	; 0xfffff5ff
   138c8:	00000b17 	andeq	r0, r0, r7, lsl fp
   138cc:	88200305 	stmdahi	r0!, {r0, r2, r8, r9}
   138d0:	421e2000 	andsmi	r2, lr, #0
   138d4:	9908002d 	stmdbls	r8, {r0, r2, r3, r5}
   138d8:	1f000018 	svcne	0x00000018
   138dc:	3a015001 	bcc	678e8 <_Min_Heap_Size+0x670e8>
   138e0:	0151011f 	cmpeq	r1, pc, lsl r1
   138e4:	52011f40 	andpl	r1, r1, #64, 30	; 0x100
   138e8:	88200305 	stmdahi	r0!, {r0, r2, r8, r9}
   138ec:	011f2000 	tsteq	pc, r0
   138f0:	fc030553 	stc2	5, cr0, [r3], {83}	; 0x53
   138f4:	1f200088 	svcne	0x00200088
   138f8:	01007d02 	tsteq	r0, r2, lsl #26
   138fc:	21000030 	tstcs	r0, r0, lsr r0
   13900:	08002d0c 	stmdaeq	r0, {r2, r3, r8, sl, fp, sp}
   13904:	0000187d 	andeq	r1, r0, sp, ror r8
   13908:	002d1621 	eoreq	r1, sp, r1, lsr #12
   1390c:	00188b08 	andseq	r8, r8, r8, lsl #22
   13910:	2d222400 	cfstrscs	mvf2, [r2, #-0]
   13914:	18a80800 	stmiane	r8!, {fp}
   13918:	0b060000 	bleq	193920 <_Min_Heap_Size+0x193120>
   1391c:	011f0000 	tsteq	pc, r0
   13920:	00750250 	rsbseq	r0, r5, r0, asr r2
   13924:	2d2a1e00 	stccs	14, cr1, [sl, #-0]
   13928:	18a80800 	stmiane	r8!, {fp}
   1392c:	011f0000 	tsteq	pc, r0
   13930:	00740250 	rsbseq	r0, r4, r0, asr r2
   13934:	b80c0000 	stmdalt	ip, {}	; <UNPREDICTABLE>
   13938:	27000000 	strcs	r0, [r0, -r0]
   1393c:	0d00000b 	stceq	0, cr0, [r0, #-44]	; 0xffffffd4
   13940:	00000035 	andeq	r0, r0, r5, lsr r0
   13944:	bc22009f 	stclt	0, cr0, [r2], #-636	; 0xfffffd84
   13948:	01000045 	tsteq	r0, r5, asr #32
   1394c:	0111043e 	tsteq	r1, lr, lsr r4
   13950:	08002b24 	stmdaeq	r0, {r2, r5, r8, r9, fp, sp}
   13954:	08002b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp, sp}
   13958:	0000e854 	andeq	lr, r0, r4, asr r8
   1395c:	000b7d01 	andeq	r7, fp, r1, lsl #26
   13960:	462d1d00 	strtmi	r1, [sp], -r0, lsl #26
   13964:	40010000 	andmi	r0, r1, r0
   13968:	01171404 	tsteq	r7, r4, lsl #8
   1396c:	e8760000 	ldmda	r6!, {}^	; <UNPREDICTABLE>
   13970:	e8740000 	ldmda	r4!, {}^	; <UNPREDICTABLE>
   13974:	d71d0000 	ldrle	r0, [sp, -r0]
   13978:	01000036 	tsteq	r0, r6, lsr r0
   1397c:	49120441 	ldmdbmi	r2, {r0, r6, sl}
   13980:	8e000007 	cdphi	0, 0, cr0, cr0, cr7, {0}
   13984:	8a0000e8 	bhi	13d2c <_Min_Heap_Size+0x1352c>
   13988:	1e0000e8 	cdpne	0, 0, cr0, cr0, cr8, {7}
   1398c:	08002b34 	stmdaeq	r0, {r2, r4, r5, r8, r9, fp, sp}
   13990:	00000f87 	andeq	r0, r0, r7, lsl #31
   13994:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
   13998:	0000ff09 	andeq	pc, r0, r9, lsl #30
   1399c:	00464625 	subeq	r4, r6, r5, lsr #12
   139a0:	03aa0100 			; <UNDEFINED> instruction: 0x03aa0100
   139a4:	2bf40111 	blcs	ffd13df0 <_estack+0xdfd0a450>
   139a8:	2cec0800 	stclcs	8, cr0, [ip]
   139ac:	e8b00800 	ldm	r0!, {fp}
   139b0:	bb010000 	bllt	539b8 <_Min_Heap_Size+0x531b8>
   139b4:	1c00000c 	stcne	0, cr0, [r0], {12}
   139b8:	0000468f 	andeq	r4, r0, pc, lsl #13
   139bc:	1d03ac01 	stcne	12, cr10, [r3, #-4]
   139c0:	00000707 	andeq	r0, r0, r7, lsl #14
   139c4:	1d609102 	stfnep	f1, [r0, #-8]!
   139c8:	000046e2 	andeq	r4, r0, r2, ror #13
   139cc:	1303ad01 	movwne	sl, #15617	; 0x3d01
   139d0:	00000658 	andeq	r0, r0, r8, asr r6
   139d4:	0000e8ea 	andeq	lr, r0, sl, ror #17
   139d8:	0000e8e8 	andeq	lr, r0, r8, ror #17
   139dc:	0047e41c 	subeq	lr, r7, ip, lsl r4
   139e0:	03ae0100 			; <UNDEFINED> instruction: 0x03ae0100
   139e4:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
   139e8:	5c910200 	lfmpl	f0, 4, [r1], {0}
   139ec:	0042a21d 	subeq	sl, r2, sp, lsl r2
   139f0:	03af0100 			; <UNDEFINED> instruction: 0x03af0100
   139f4:	00011714 	andeq	r1, r1, r4, lsl r7
   139f8:	00e90900 	rsceq	r0, r9, r0, lsl #18
   139fc:	00e8fd00 	rsceq	pc, r8, r0, lsl #26
   13a00:	2c202300 	stccs	3, cr2, [r0], #-0
   13a04:	2c280800 	stccs	8, cr0, [r8], #-0
   13a08:	0c050800 	stceq	8, cr0, [r5], {-0}
   13a0c:	c31d0000 	tstgt	sp, #0
   13a10:	01000047 	tsteq	r0, r7, asr #32
   13a14:	c13803b9 	teqgt	r8, r9	; <illegal shifter operand>
   13a18:	5500000c 	strpl	r0, [r0, #-12]
   13a1c:	530000e9 	movwpl	r0, #233	; 0xe9
   13a20:	000000e9 	andeq	r0, r0, r9, ror #1
   13a24:	002c1624 	eoreq	r1, ip, r4, lsr #12
   13a28:	0018b708 	andseq	fp, r8, r8, lsl #14
   13a2c:	000c1e00 	andeq	r1, ip, r0, lsl #28
   13a30:	51011f00 	tstpl	r1, r0, lsl #30
   13a34:	1f609102 	svcne	0x00609102
   13a38:	30015201 	andcc	r5, r1, r1, lsl #4
   13a3c:	2c362400 	cfldrscs	mvf2, [r6], #-0
   13a40:	18c60800 	stmiane	r6, {fp}^
   13a44:	0c320000 	ldceq	0, cr0, [r2], #-0
   13a48:	011f0000 	tsteq	pc, r0
   13a4c:	04740250 	ldrbteq	r0, [r4], #-592	; 0xfffffdb0
   13a50:	2c3c2400 	cfldrscs	mvf2, [ip], #-0
   13a54:	0d790800 	ldcleq	8, cr0, [r9, #-0]
   13a58:	0c460000 	mareq	acc0, r0, r6
   13a5c:	011f0000 	tsteq	pc, r0
   13a60:	5c910250 	lfmpl	f0, 4, [r1], {80}	; 0x50
   13a64:	2c6e2400 	cfstrdcs	mvd2, [lr], #-0
   13a68:	0cc60800 	stcleq	8, cr0, [r6], {0}
   13a6c:	0c600000 	stcleq	0, cr0, [r0], #-0
   13a70:	011f0000 	tsteq	pc, r0
   13a74:	00740250 	rsbseq	r0, r4, r0, asr r2
   13a78:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
   13a7c:	26000075 			; <UNDEFINED> instruction: 0x26000075
   13a80:	08002c8a 	stmdaeq	r0, {r1, r3, r7, sl, fp, sp}
   13a84:	00000c70 	andeq	r0, r0, r0, ror ip
   13a88:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   13a8c:	24000074 	strcs	r0, [r0], #-116	; 0xffffff8c
   13a90:	08002c9a 	stmdaeq	r0, {r1, r3, r4, r7, sl, fp, sp}
   13a94:	00001022 	andeq	r1, r0, r2, lsr #32
   13a98:	00000c8a 	andeq	r0, r0, sl, lsl #25
   13a9c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   13aa0:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
   13aa4:	00750252 	rsbseq	r0, r5, r2, asr r2
   13aa8:	2cc62400 	cfstrdcs	mvd2, [r6], {0}
   13aac:	0cc60800 	stcleq	8, cr0, [r6], {0}
   13ab0:	0caa0000 	stceq	0, cr0, [sl]
   13ab4:	011f0000 	tsteq	pc, r0
   13ab8:	00740250 	rsbseq	r0, r4, r0, asr r2
   13abc:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
   13ac0:	011f0075 	tsteq	pc, r5, ror r0	; <UNPREDICTABLE>
   13ac4:	00750253 	rsbseq	r0, r5, r3, asr r2
   13ac8:	2ce21e00 	stclcs	14, cr1, [r2]
   13acc:	18d50800 	ldmne	r5, {fp}^
   13ad0:	011f0000 	tsteq	pc, r0
   13ad4:	00740250 	rsbseq	r0, r4, r0, asr r2
   13ad8:	04070000 	streq	r0, [r7], #-0
   13adc:	000006b6 			; <UNDEFINED> instruction: 0x000006b6
   13ae0:	000cbb06 	andeq	fp, ip, r6, lsl #22
   13ae4:	451d2700 	ldrmi	r2, [sp, #-1792]	; 0xfffff900
   13ae8:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
   13aec:	fa011703 	blx	59700 <_Min_Heap_Size+0x58f00>
   13af0:	74000000 	strvc	r0, [r0], #-0
   13af4:	bc08002a 	stclt	0, cr0, [r8], {42}	; 0x2a
   13af8:	6a08002a 	bvs	213ba8 <_Min_Heap_Size+0x2133a8>
   13afc:	010000e9 	smlatteq	r0, r9, r0, r0
   13b00:	00000d79 	andeq	r0, r0, r9, ror sp
   13b04:	0046e21b 	subeq	lr, r6, fp, lsl r2
   13b08:	037e0100 	cmneq	lr, #0, 2
   13b0c:	00065e43 	andeq	r5, r6, r3, asr #28
   13b10:	00e99e00 	rsceq	r9, r9, r0, lsl #28
   13b14:	00e98a00 	rsceq	r8, r9, r0, lsl #20
   13b18:	47741b00 	ldrbmi	r1, [r4, -r0, lsl #22]!
   13b1c:	7f010000 	svcvc	0x00010000
   13b20:	01234403 			; <UNDEFINED> instruction: 0x01234403
   13b24:	ea3a0000 	b	e93b2c <_Min_Heap_Size+0xe9332c>
   13b28:	ea240000 	b	913b30 <_Min_Heap_Size+0x913330>
   13b2c:	a21b0000 	andsge	r0, fp, #0
   13b30:	01000042 	tsteq	r0, r2, asr #32
   13b34:	23440380 	movtcs	r0, #17280	; 0x4380
   13b38:	d2000001 	andle	r0, r0, #1
   13b3c:	c80000ea 	stmdagt	r0, {r1, r3, r5, r6, r7}
   13b40:	1b0000ea 	blne	13ef0 <_Min_Heap_Size+0x136f0>
   13b44:	0000425f 	andeq	r4, r0, pc, asr r2
   13b48:	44038101 	strmi	r8, [r3], #-257	; 0xfffffeff
   13b4c:	00000123 	andeq	r0, r0, r3, lsr #2
   13b50:	0000eb21 	andeq	lr, r0, r1, lsr #22
   13b54:	0000eb17 	andeq	lr, r0, r7, lsl fp
   13b58:	00437f1d 	subeq	r7, r3, sp, lsl pc
   13b5c:	03830100 	orreq	r0, r3, #0, 2
   13b60:	0000fa14 	andeq	pc, r0, r4, lsl sl	; <UNPREDICTABLE>
   13b64:	00eb6c00 	rsceq	r6, fp, r0, lsl #24
   13b68:	00eb6600 	rsceq	r6, fp, r0, lsl #12
   13b6c:	2a942400 	bcs	fe51cb74 <_estack+0xde5131d4>
   13b70:	18e30800 	stmiane	r3!, {fp}^
   13b74:	0d650000 	stcleq	0, cr0, [r5, #-0]
   13b78:	011f0000 	tsteq	pc, r0
   13b7c:	01f30551 	mvnseq	r0, r1, asr r5
   13b80:	00042350 	andeq	r2, r4, r0, asr r3
   13b84:	002aaa1e 	eoreq	sl, sl, lr, lsl sl
   13b88:	0018e308 	andseq	lr, r8, r8, lsl #6
   13b8c:	51011f00 	tstpl	r1, r0, lsl #30
   13b90:	5001f305 	andpl	pc, r1, r5, lsl #6
   13b94:	00000423 	andeq	r0, r0, r3, lsr #8
   13b98:	00456f27 	subeq	r6, r5, r7, lsr #30
   13b9c:	03670100 	cmneq	r7, #0, 2
   13ba0:	01170117 	tsteq	r7, r7, lsl r1
   13ba4:	2b540000 	blcs	1513bac <_Min_Heap_Size+0x15133ac>
   13ba8:	2b800800 	blcs	fe015bb0 <_estack+0xde00c210>
   13bac:	eb980800 	bl	fe615bb4 <_estack+0xde60c214>
   13bb0:	e8010000 	stmda	r1, {}	; <UNPREDICTABLE>
   13bb4:	1b00000d 	blne	13bf0 <_Min_Heap_Size+0x133f0>
   13bb8:	000047e3 	andeq	r4, r0, r3, ror #15
   13bbc:	3c036701 	stccc	7, cr6, [r3], {1}
   13bc0:	0000090e 	andeq	r0, r0, lr, lsl #18
   13bc4:	0000ebbc 			; <UNDEFINED> instruction: 0x0000ebbc
   13bc8:	0000ebb8 			; <UNDEFINED> instruction: 0x0000ebb8
   13bcc:	0042a21d 	subeq	sl, r2, sp, lsl r2
   13bd0:	03690100 	cmneq	r9, #0, 2
   13bd4:	00011714 	andeq	r1, r1, r4, lsl r7
   13bd8:	00ebe200 	rsceq	lr, fp, r0, lsl #4
   13bdc:	00ebda00 	rsceq	sp, fp, r0, lsl #20
   13be0:	46611c00 	strbtmi	r1, [r1], -r0, lsl #24
   13be4:	6a010000 	bvs	53bec <_Min_Heap_Size+0x533ec>
   13be8:	01172b03 	tsteq	r7, r3, lsl #22
   13bec:	03050000 	movweq	r0, #20480	; 0x5000
   13bf0:	200088f8 	strdcs	r8, [r0], -r8	; <UNPREDICTABLE>
   13bf4:	002b5c21 	eoreq	r5, fp, r1, lsr #24
   13bf8:	0018f208 	andseq	pc, r8, r8, lsl #4
   13bfc:	2b762100 	blcs	1d9c004 <_Min_Heap_Size+0x1d9b804>
   13c00:	0b270800 	bleq	9d5c08 <_Min_Heap_Size+0x9d5408>
   13c04:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
   13c08:	000047ce 	andeq	r4, r0, lr, asr #15
   13c0c:	17034c01 	strne	r4, [r3, -r1, lsl #24]
   13c10:	00011701 	andeq	r1, r1, r1, lsl #14
   13c14:	002a5400 	eoreq	r5, sl, r0, lsl #8
   13c18:	002a7408 	eoreq	r7, sl, r8, lsl #8
   13c1c:	007d0208 	rsbseq	r0, sp, r8, lsl #4
   13c20:	000e3101 	andeq	r3, lr, r1, lsl #2
   13c24:	42931b00 	addsmi	r1, r3, #0, 22
   13c28:	4c010000 	stcmi	0, cr0, [r1], {-0}
   13c2c:	090e4003 	stmdbeq	lr, {r0, r1, lr}
   13c30:	ec1e0000 	ldc	0, cr0, [lr], {-0}
   13c34:	ec160000 	ldc	0, cr0, [r6], {-0}
   13c38:	2d1d0000 	ldccs	0, cr0, [sp, #-0]
   13c3c:	01000046 	tsteq	r0, r6, asr #32
   13c40:	1714034e 	ldrne	r0, [r4, -lr, asr #6]
   13c44:	5c000001 	stcpl	0, cr0, [r0], {1}
   13c48:	580000ec 	stmdapl	r0, {r2, r3, r5, r6, r7}
   13c4c:	000000ec 	andeq	r0, r0, ip, ror #1
   13c50:	00474522 	subeq	r4, r7, r2, lsr #10
   13c54:	030e0100 	movweq	r0, #57600	; 0xe100
   13c58:	2b800111 	blcs	fe0140a4 <_estack+0xde00a704>
   13c5c:	2bf40800 	blcs	ffd15c64 <_estack+0xdfd0c2c4>
   13c60:	ec7b0800 	ldcl	8, cr0, [fp], #-0
   13c64:	0b010000 	bleq	53c6c <_Min_Heap_Size+0x5346c>
   13c68:	1b00000f 	blne	13cac <_Min_Heap_Size+0x134ac>
   13c6c:	0000462d 	andeq	r4, r0, sp, lsr #12
   13c70:	3e030e01 	cdpcc	14, 0, cr0, cr3, cr1, {0}
   13c74:	00000123 	andeq	r0, r0, r3, lsr #2
   13c78:	0000ecb9 			; <UNDEFINED> instruction: 0x0000ecb9
   13c7c:	0000ecb3 			; <UNDEFINED> instruction: 0x0000ecb3
   13c80:	0042941b 	subeq	r9, r2, fp, lsl r4
   13c84:	030f0100 	movweq	r0, #61696	; 0xf100
   13c88:	0000fa38 	andeq	pc, r0, r8, lsr sl	; <UNPREDICTABLE>
   13c8c:	00eced00 	rsceq	lr, ip, r0, lsl #26
   13c90:	00ece500 	rsceq	lr, ip, r0, lsl #10
   13c94:	42a21d00 	adcmi	r1, r2, #0, 26
   13c98:	11010000 	mrsne	r0, (UNDEF: 1)
   13c9c:	01171403 	tsteq	r7, r3, lsl #8
   13ca0:	ed2e0000 	stc	0, cr0, [lr, #-0]
   13ca4:	ed240000 	stc	0, cr0, [r4, #-0]
   13ca8:	e41c0000 	ldr	r0, [ip], #-0
   13cac:	01000047 	tsteq	r0, r7, asr #32
   13cb0:	fa140312 	blx	514900 <_Min_Heap_Size+0x514100>
   13cb4:	02000000 	andeq	r0, r0, #0
   13cb8:	8c216c91 	stchi	12, cr6, [r1], #-580	; 0xfffffdbc
   13cbc:	0108002b 	tsteq	r8, fp, lsr #32
   13cc0:	24000019 	strcs	r0, [r0], #-25	; 0xffffffe7
   13cc4:	08002b92 	stmdaeq	r0, {r1, r4, r7, r8, r9, fp, sp}
   13cc8:	00000d79 	andeq	r0, r0, r9, ror sp
   13ccc:	00000eb8 			; <UNDEFINED> instruction: 0x00000eb8
   13cd0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   13cd4:	24006c91 	strcs	r6, [r0], #-3217	; 0xfffff36f
   13cd8:	08002bb6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, r9, fp, sp}
   13cdc:	00001910 	andeq	r1, r0, r0, lsl r9
   13ce0:	00000ed5 	ldrdeq	r0, [r0], -r5
   13ce4:	0551011f 	ldrbeq	r0, [r1, #-287]	; 0xfffffee1
   13ce8:	00750076 	rsbseq	r0, r5, r6, ror r0
   13cec:	52011f1c 	andpl	r1, r1, #28, 30	; 0x70
   13cf0:	00007402 	andeq	r7, r0, r2, lsl #8
   13cf4:	002bba21 	eoreq	fp, fp, r1, lsr #20
   13cf8:	00191f08 	andseq	r1, r9, r8, lsl #30
   13cfc:	2bd62100 	blcs	ff59c104 <_estack+0xdf592764>
   13d00:	191f0800 	ldmdbne	pc, {fp}	; <UNPREDICTABLE>
   13d04:	de240000 	cdple	0, 2, cr0, cr4, cr0, {0}
   13d08:	8708002b 	strhi	r0, [r8, -fp, lsr #32]
   13d0c:	0100000f 	tsteq	r0, pc
   13d10:	1f00000f 	svcne	0x0000000f
   13d14:	76025001 	strvc	r5, [r2], -r1
   13d18:	51011f00 	tstpl	r1, r0, lsl #30
   13d1c:	00007502 	andeq	r7, r0, r2, lsl #10
   13d20:	002be821 	eoreq	lr, fp, r1, lsr #16
   13d24:	00191f08 	andseq	r1, r9, r8, lsl #30
   13d28:	20220000 	eorcs	r0, r2, r0
   13d2c:	01000046 	tsteq	r0, r6, asr #32
   13d30:	010c02ec 	smlatteq	ip, ip, r2, r0
   13d34:	08002cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, sp}
   13d38:	08002d02 	stmdaeq	r0, {r1, r8, sl, fp, sp}
   13d3c:	0000ed6d 	andeq	lr, r0, sp, ror #26
   13d40:	000f8701 	andeq	r8, pc, r1, lsl #14
   13d44:	3ca91b00 	vstmiacc	r9!, {d1-d0}
   13d48:	ec010000 	stc	0, cr0, [r1], {-0}
   13d4c:	009a0c02 	addseq	r0, sl, r2, lsl #24
   13d50:	ed9d0000 	ldc	0, cr0, [sp]
   13d54:	ed990000 	ldc	0, cr0, [r9]
   13d58:	2d1d0000 	ldccs	0, cr0, [sp, #-0]
   13d5c:	01000046 	tsteq	r0, r6, asr #32
   13d60:	171402ee 	ldrne	r0, [r4, -lr, ror #5]
   13d64:	c0000001 	andgt	r0, r0, r1
   13d68:	be0000ed 	cdplt	0, 0, cr0, cr0, cr13, {7}
   13d6c:	1c0000ed 	stcne	0, cr0, [r0], {237}	; 0xed
   13d70:	00004294 	muleq	r0, r4, r2
   13d74:	1402ef01 	strne	lr, [r2], #-3841	; 0xfffff0ff
   13d78:	000000fa 	strdeq	r0, [r0], -sl
   13d7c:	24749102 	ldrbtcs	r9, [r4], #-258	; 0xfffffefe
   13d80:	08002cf6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, sl, fp, sp}
   13d84:	00000de8 	andeq	r0, r0, r8, ror #27
   13d88:	00000f74 	andeq	r0, r0, r4, ror pc
   13d8c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   13d90:	21007491 			; <UNDEFINED> instruction: 0x21007491
   13d94:	08002cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp, sp}
   13d98:	00000e31 	andeq	r0, r0, r1, lsr lr
   13d9c:	002d0021 	eoreq	r0, sp, r1, lsr #32
   13da0:	000b7d08 	andeq	r7, fp, r8, lsl #26
   13da4:	06220000 	strteq	r0, [r2], -r0
   13da8:	01000044 	tsteq	r0, r4, asr #32
   13dac:	011102ce 	tsteq	r1, lr, asr #5
   13db0:	08002ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp, sp}
   13db4:	08002b24 	stmdaeq	r0, {r2, r5, r8, r9, fp, sp}
   13db8:	0000edd3 	ldrdeq	lr, [r0], -r3
   13dbc:	00102201 	andseq	r2, r0, r1, lsl #4
   13dc0:	462d1b00 	strtmi	r1, [sp], -r0, lsl #22
   13dc4:	ce010000 	cdpgt	0, 0, cr0, cr1, cr0, {0}
   13dc8:	01233a02 			; <UNDEFINED> instruction: 0x01233a02
   13dcc:	edf70000 	ldcl	0, cr0, [r7]
   13dd0:	edf30000 	ldcl	0, cr0, [r3]
   13dd4:	a21b0000 	andsge	r0, fp, #0
   13dd8:	01000042 	tsteq	r0, r2, asr #32
   13ddc:	233a02cf 	teqcs	sl, #-268435444	; 0xf000000c
   13de0:	19000001 	stmdbne	r0, {r0}
   13de4:	150000ee 	strne	r0, [r0, #-238]	; 0xffffff12
   13de8:	1d0000ee 	stcne	0, cr0, [r0, #-952]	; 0xfffffc48
   13dec:	000046e2 	andeq	r4, r0, r2, ror #13
   13df0:	1902d401 	stmdbne	r2, {r0, sl, ip, lr, pc}
   13df4:	0000065e 	andeq	r0, r0, lr, asr r6
   13df8:	0000ee39 	andeq	lr, r0, r9, lsr lr
   13dfc:	0000ee37 	andeq	lr, r0, r7, lsr lr
   13e00:	002af824 	eoreq	pc, sl, r4, lsr #16
   13e04:	0018c608 	andseq	ip, r8, r8, lsl #12
   13e08:	000ff500 	andeq	pc, pc, r0, lsl #10
   13e0c:	50011f00 	andpl	r1, r1, r0, lsl #30
   13e10:	00047402 	andeq	r7, r4, r2, lsl #8
   13e14:	002b1026 	eoreq	r1, fp, r6, lsr #32
   13e18:	00100508 	andseq	r0, r0, r8, lsl #10
   13e1c:	50011f00 	andpl	r1, r1, r0, lsl #30
   13e20:	00007402 	andeq	r7, r0, r2, lsl #8
   13e24:	002b1c1e 	eoreq	r1, fp, lr, lsl ip
   13e28:	00102208 	andseq	r2, r0, r8, lsl #4
   13e2c:	50011f00 	andpl	r1, r1, r0, lsl #30
   13e30:	1f007402 	svcne	0x00007402
   13e34:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
   13e38:	52011f00 	andpl	r1, r1, #0, 30
   13e3c:	00007602 	andeq	r7, r0, r2, lsl #12
   13e40:	45d02200 	ldrbmi	r2, [r0, #512]	; 0x200
   13e44:	bb010000 	bllt	53e4c <_Min_Heap_Size+0x5364c>
   13e48:	bc011102 	stflts	f1, [r1], {2}
   13e4c:	e408002a 	str	r0, [r8], #-42	; 0xffffffd6
   13e50:	4c08002a 	stcmi	0, cr0, [r8], {42}	; 0x2a
   13e54:	010000ee 	smlatteq	r0, lr, r0, r0
   13e58:	000010a9 	andeq	r1, r0, r9, lsr #1
   13e5c:	0046e21b 	subeq	lr, r6, fp, lsl r2
   13e60:	02bb0100 	adcseq	r0, fp, #0, 2
   13e64:	00065e31 	andeq	r5, r6, r1, lsr lr
   13e68:	00ee7000 	rsceq	r7, lr, r0
   13e6c:	00ee6c00 	rsceq	r6, lr, r0, lsl #24
   13e70:	44631b00 	strbtmi	r1, [r3], #-2816	; 0xfffff500
   13e74:	bc010000 	stclt	0, cr0, [r1], {-0}
   13e78:	01172c02 	tsteq	r7, r2, lsl #24
   13e7c:	ee920000 	cdp	0, 9, cr0, cr2, cr0, {0}
   13e80:	ee8e0000 	cdp	0, 8, cr0, cr14, cr0, {0}
   13e84:	a21b0000 	andsge	r0, fp, #0
   13e88:	01000042 	tsteq	r0, r2, asr #32
   13e8c:	233202bd 	teqcs	r2, #-805306357	; 0xd000000b
   13e90:	b4000001 	strlt	r0, [r0], #-1
   13e94:	b00000ee 	andlt	r0, r0, lr, ror #1
   13e98:	260000ee 	strcs	r0, [r0], -lr, ror #1
   13e9c:	08002ad0 	stmdaeq	r0, {r4, r6, r7, r9, fp, sp}
   13ea0:	0000108c 	andeq	r1, r0, ip, lsl #1
   13ea4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   13ea8:	1e000074 	mcrne	0, 0, r0, cr0, cr4, {3}
   13eac:	08002ade 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, fp, sp}
   13eb0:	00000cc6 	andeq	r0, r0, r6, asr #25
   13eb4:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   13eb8:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
   13ebc:	00760252 	rsbseq	r0, r6, r2, asr r2
   13ec0:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
   13ec4:	00000075 	andeq	r0, r0, r5, ror r0
   13ec8:	47180129 	ldrmi	r0, [r8, -r9, lsr #2]
   13ecc:	ad010000 	stcge	0, cr0, [r1, #-0]
   13ed0:	ad011202 	sfmge	f1, 4, [r1, #-8]
	...
   13edc:	02000000 	andeq	r0, r0, #0
   13ee0:	f301007d 	vqadd.u8	q0, <illegal reg q0.5>, <illegal reg q14.5>
   13ee4:	1b000010 	blne	13f2c <_Min_Heap_Size+0x1372c>
   13ee8:	000046e3 	andeq	r4, r0, r3, ror #13
   13eec:	3002ad01 	andcc	sl, r2, r1, lsl #26
   13ef0:	00000554 	andeq	r0, r0, r4, asr r5
   13ef4:	0000eed6 	ldrdeq	lr, [r0], -r6
   13ef8:	0000eed2 	ldrdeq	lr, [r0], -r2
   13efc:	0046e21d 	subeq	lr, r6, sp, lsl r2
   13f00:	02af0100 	adceq	r0, pc, #0, 2
   13f04:	00065813 	andeq	r5, r6, r3, lsl r8
   13f08:	00eefb00 	rsceq	pc, lr, r0, lsl #22
   13f0c:	00eef700 	rsceq	pc, lr, r0, lsl #14
   13f10:	01290000 			; <UNDEFINED> instruction: 0x01290000
   13f14:	00004346 	andeq	r4, r0, r6, asr #6
   13f18:	14028f01 	strne	r8, [r2], #-3841	; 0xfffff0ff
   13f1c:	0000fa01 	andeq	pc, r0, r1, lsl #20
	...
   13f28:	007d0200 	rsbseq	r0, sp, r0, lsl #4
   13f2c:	00116101 	andseq	r6, r1, r1, lsl #2
   13f30:	46e31b00 	strbtmi	r1, [r3], r0, lsl #22
   13f34:	8f010000 	svchi	0x00010000
   13f38:	05543902 	ldrbeq	r3, [r4, #-2306]	; 0xfffff6fe
   13f3c:	ef240000 	svc	0x00240000
   13f40:	ef1c0000 	svc	0x001c0000
   13f44:	b42a0000 	strtlt	r0, [sl], #-0
   13f48:	01000047 	tsteq	r0, r7, asr #32
   13f4c:	613c0290 	teqvs	ip, r0	; <illegal shifter operand>
   13f50:	01000011 	tsteq	r0, r1, lsl r0
   13f54:	38481d51 	stmdacc	r8, {r0, r4, r6, r8, sl, fp, ip}^
   13f58:	92010000 	andls	r0, r1, #0
   13f5c:	00fa1802 	rscseq	r1, sl, r2, lsl #16
   13f60:	ef600000 	svc	0x00600000
   13f64:	ef5c0000 	svc	0x005c0000
   13f68:	e21d0000 	ands	r0, sp, #0
   13f6c:	01000046 	tsteq	r0, r6, asr #32
   13f70:	58170293 	ldmdapl	r7, {r0, r1, r4, r7, r9}
   13f74:	88000006 	stmdahi	r0, {r1, r2}
   13f78:	800000ef 	andhi	r0, r0, pc, ror #1
   13f7c:	000000ef 	andeq	r0, r0, pc, ror #1
   13f80:	11670407 	cmnne	r7, r7, lsl #8
   13f84:	04070000 	streq	r0, [r7], #-0
   13f88:	00000447 	andeq	r0, r0, r7, asr #8
   13f8c:	45380129 	ldrmi	r0, [r8, #-297]!	; 0xfffffed7
   13f90:	7e010000 	cdpvc	0, 0, cr0, cr1, cr0, {0}
   13f94:	17011002 	strne	r1, [r1, -r2]
   13f98:	00000001 	andeq	r0, r0, r1
   13f9c:	00000000 	andeq	r0, r0, r0
   13fa0:	02000000 	andeq	r0, r0, #0
   13fa4:	cc01007d 	stcgt	0, cr0, [r1], {125}	; 0x7d
   13fa8:	1b000011 	blne	13ff4 <_Min_Heap_Size+0x137f4>
   13fac:	000046e3 	andeq	r4, r0, r3, ror #13
   13fb0:	33027e01 	movwcc	r7, #11777	; 0x2e01
   13fb4:	00000554 	andeq	r0, r0, r4, asr r5
   13fb8:	0000efc4 	andeq	lr, r0, r4, asr #31
   13fbc:	0000efc0 	andeq	lr, r0, r0, asr #31
   13fc0:	0046e21d 	subeq	lr, r6, sp, lsl r2
   13fc4:	02800100 	addeq	r0, r0, #0, 2
   13fc8:	00065813 	andeq	r5, r6, r3, lsl r8
   13fcc:	00efe900 	rsceq	lr, pc, r0, lsl #18
   13fd0:	00efe500 	rsceq	lr, pc, r0, lsl #10
   13fd4:	38481d00 	stmdacc	r8, {r8, sl, fp, ip}^
   13fd8:	81010000 	mrshi	r0, (UNDEF: 1)
   13fdc:	01171402 	tsteq	r7, r2, lsl #8
   13fe0:	f00e0000 			; <UNDEFINED> instruction: 0xf00e0000
   13fe4:	f00a0000 			; <UNDEFINED> instruction: 0xf00a0000
   13fe8:	1a000000 	bne	13ff0 <_Min_Heap_Size+0x137f0>
   13fec:	0043d001 	subeq	sp, r3, r1
   13ff0:	02700100 	rsbseq	r0, r0, #0, 2
   13ff4:	010b0111 	tsteq	fp, r1, lsl r1
	...
   14000:	f02d0000 			; <UNDEFINED> instruction: 0xf02d0000
   14004:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
   14008:	1b000012 	blne	14058 <_Min_Heap_Size+0x13858>
   1400c:	000046e3 	andeq	r4, r0, r3, ror #13
   14010:	35027001 	strcc	r7, [r2, #-1]
   14014:	00000554 	andeq	r0, r0, r4, asr r5
   14018:	0000f051 	andeq	pc, r0, r1, asr r0	; <UNPREDICTABLE>
   1401c:	0000f04d 	andeq	pc, r0, sp, asr #32
   14020:	002a251d 	eoreq	r2, sl, sp, lsl r5
   14024:	02720100 	rsbseq	r0, r2, #0, 2
   14028:	00010b15 	andeq	r0, r1, r5, lsl fp
   1402c:	00f07400 	rscseq	r7, r0, r0, lsl #8
   14030:	00f07200 	rscseq	r7, r0, r0, lsl #4
   14034:	00001e00 	andeq	r1, r0, r0, lsl #28
   14038:	12280000 	eorne	r0, r8, #0
   1403c:	011f0000 	tsteq	pc, r0
   14040:	01f30350 	mvnseq	r0, r0, asr r3
   14044:	1a000050 	bne	1418c <_Min_Heap_Size+0x1398c>
   14048:	0043d101 	subeq	sp, r3, r1, lsl #2
   1404c:	02540100 	subseq	r0, r4, #0, 2
   14050:	00fa0110 	rscseq	r0, sl, r0, lsl r1
	...
   1405c:	f0870000 			; <UNDEFINED> instruction: 0xf0870000
   14060:	9a010000 	bls	54068 <_Min_Heap_Size+0x53868>
   14064:	1b000012 	blne	140b4 <_Min_Heap_Size+0x138b4>
   14068:	000046e3 	andeq	r4, r0, r3, ror #13
   1406c:	33025401 	movwcc	r5, #9217	; 0x2401
   14070:	00000554 	andeq	r0, r0, r4, asr r5
   14074:	0000f0b1 	strheq	pc, [r0], -r1	; <UNPREDICTABLE>
   14078:	0000f0a7 	andeq	pc, r0, r7, lsr #1
   1407c:	0046e21d 	subeq	lr, r6, sp, lsl r2
   14080:	02560100 	subseq	r0, r6, #0, 2
   14084:	00065813 	andeq	r5, r6, r3, lsl r8
   14088:	00f10000 	rscseq	r0, r1, r0
   1408c:	00f0f600 	rscseq	pc, r0, r0, lsl #12
   14090:	38481d00 	stmdacc	r8, {r8, sl, fp, ip}^
   14094:	57010000 	strpl	r0, [r1, -r0]
   14098:	00fa1402 	rscseq	r1, sl, r2, lsl #8
   1409c:	f1470000 			; <UNDEFINED> instruction: 0xf1470000
   140a0:	f1450000 			; <UNDEFINED> instruction: 0xf1450000
   140a4:	00210000 	eoreq	r0, r1, r0
   140a8:	7d000000 	stcvc	0, cr0, [r0, #-0]
   140ac:	21000018 	tstcs	r0, r8, lsl r0
   140b0:	00000000 	andeq	r0, r0, r0
   140b4:	0000188b 	andeq	r1, r0, fp, lsl #17
   140b8:	60012000 	andvs	r2, r1, r0
   140bc:	01000047 	tsteq	r0, r7, asr #32
   140c0:	010a023b 	tsteq	sl, fp, lsr r2
	...
   140cc:	0000f15a 	andeq	pc, r0, sl, asr r1	; <UNPREDICTABLE>
   140d0:	00130801 	andseq	r0, r3, r1, lsl #16
   140d4:	46e31b00 	strbtmi	r1, [r3], r0, lsl #22
   140d8:	3b010000 	blcc	540e0 <_Min_Heap_Size+0x538e0>
   140dc:	05542d02 	ldrbeq	r2, [r4, #-3330]	; 0xfffff2fe
   140e0:	f17e0000 			; <UNDEFINED> instruction: 0xf17e0000
   140e4:	f17a0000 			; <UNDEFINED> instruction: 0xf17a0000
   140e8:	971b0000 	ldrls	r0, [fp, -r0]
   140ec:	01000044 	tsteq	r0, r4, asr #32
   140f0:	0630023c 			; <UNDEFINED> instruction: 0x0630023c
   140f4:	a0000001 	andge	r0, r0, r1
   140f8:	9c0000f1 	stcls	0, cr0, [r0], {241}	; 0xf1
   140fc:	1d0000f1 	stcne	0, cr0, [r0, #-964]	; 0xfffffc3c
   14100:	000046e2 	andeq	r4, r0, r2, ror #13
   14104:	13023e01 	movwne	r3, #11777	; 0x2e01
   14108:	00000658 	andeq	r0, r0, r8, asr r6
   1410c:	0000f1c2 	andeq	pc, r0, r2, asr #3
   14110:	0000f1be 			; <UNDEFINED> instruction: 0x0000f1be
   14114:	00000021 	andeq	r0, r0, r1, lsr #32
   14118:	00187d00 	andseq	r7, r8, r0, lsl #26
   1411c:	00002100 	andeq	r2, r0, r0, lsl #2
   14120:	188b0000 	stmne	fp, {}	; <UNPREDICTABLE>
   14124:	29000000 	stmdbcs	r0, {}	; <UNPREDICTABLE>
   14128:	0046d201 	subeq	sp, r6, r1, lsl #4
   1412c:	022d0100 	eoreq	r0, sp, #0, 2
   14130:	01170110 	tsteq	r7, r0, lsl r1
	...
   1413c:	7d020000 	stcvc	0, cr0, [r2, #-0]
   14140:	13520100 	cmpne	r2, #0, 2
   14144:	e31b0000 	tst	fp, #0
   14148:	01000046 	tsteq	r0, r6, asr #32
   1414c:	542f022d 	strtpl	r0, [pc], #-557	; 14154 <_Min_Heap_Size+0x13954>
   14150:	e4000005 	str	r0, [r0], #-5
   14154:	e00000f1 	strd	r0, [r0], -r1
   14158:	1d0000f1 	stcne	0, cr0, [r0, #-964]	; 0xfffffc3c
   1415c:	000046e2 	andeq	r4, r0, r2, ror #13
   14160:	13022f01 	movwne	r2, #12033	; 0x2f01
   14164:	00000658 	andeq	r0, r0, r8, asr r6
   14168:	0000f209 	andeq	pc, r0, r9, lsl #4
   1416c:	0000f205 	andeq	pc, r0, r5, lsl #4
   14170:	72012b00 	andvc	r2, r1, #0, 22
   14174:	01000041 	tsteq	r0, r1, asr #32
   14178:	0112021f 	tsteq	r2, pc, lsl r2
   1417c:	0000051e 	andeq	r0, r0, lr, lsl r5
	...
   14188:	01007d02 	tsteq	r0, r2, lsl #26
   1418c:	44a3011a 	strtmi	r0, [r3], #282	; 0x11a
   14190:	f3010000 	vhadd.u8	d0, d1, d0
   14194:	fa011001 	blx	581a0 <_Min_Heap_Size+0x579a0>
	...
   141a0:	2a000000 	bcs	141a8 <_Min_Heap_Size+0x139a8>
   141a4:	010000f2 	strdeq	r0, [r0, -r2]
   141a8:	0000143e 	andeq	r1, r0, lr, lsr r4
   141ac:	0046e31b 	subeq	lr, r6, fp, lsl r3
   141b0:	01f30100 	mvnseq	r0, r0, lsl #2
   141b4:	0005543b 	andeq	r5, r5, fp, lsr r4
   141b8:	00f27e00 	rscseq	r7, r2, r0, lsl #28
   141bc:	00f26e00 	rscseq	r6, r2, r0, lsl #28
   141c0:	43741b00 	cmnmi	r4, #0, 22
   141c4:	f4010000 	vst4.8	{d0-d3}, [r1], r0
   141c8:	01063e01 	tsteq	r6, r1, lsl #28
   141cc:	f2f50000 	vext.8	d16, d5, d0, #0
   141d0:	f2e90000 	vaddl.s32	q8, d9, d0
   141d4:	ce1b0000 	cdpgt	0, 1, cr0, cr11, cr0, {0}
   141d8:	01000042 	tsteq	r0, r2, asr #32
   141dc:	233e01f5 	teqcs	lr, #1073741885	; 0x4000003d
   141e0:	52000001 	andpl	r0, r0, #1
   141e4:	460000f3 			; <UNDEFINED> instruction: 0x460000f3
   141e8:	1b0000f3 	blne	145bc <_Min_Heap_Size+0x13dbc>
   141ec:	00002911 	andeq	r2, r0, r1, lsl r9
   141f0:	4001f601 	andmi	pc, r1, r1, lsl #12
   141f4:	0000090e 	andeq	r0, r0, lr, lsl #18
   141f8:	0000f3af 	andeq	pc, r0, pc, lsr #7
   141fc:	0000f3a3 	andeq	pc, r0, r3, lsr #7
   14200:	003f3a1b 	eorseq	r3, pc, fp, lsl sl	; <UNPREDICTABLE>
   14204:	01f70100 	mvnseq	r0, r0, lsl #2
   14208:	0001233e 	andeq	r2, r1, lr, lsr r3
   1420c:	00f40300 	rscseq	r0, r4, r0, lsl #6
   14210:	00f3ff00 	rscseq	pc, r3, r0, lsl #30
   14214:	38481d00 	stmdacc	r8, {r8, sl, fp, ip}^
   14218:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
   1421c:	00fa1401 	rscseq	r1, sl, r1, lsl #8
   14220:	f42b0000 	vld4.8	{d0-d3}, [fp], r0
   14224:	f4230000 	vld4.8	{d0-d3}, [r3], r0
   14228:	8f1c0000 	svchi	0x001c0000
   1422c:	01000046 	tsteq	r0, r6, asr #32
   14230:	071d01fa 			; <UNDEFINED> instruction: 0x071d01fa
   14234:	02000007 	andeq	r0, r0, #7
   14238:	001e6891 	mulseq	lr, r1, r8
   1423c:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
   14240:	1f000018 	svcne	0x00000018
   14244:	74025001 	strvc	r5, [r2], #-1
   14248:	51011f00 	tstpl	r1, r0, lsl #30
   1424c:	1f007d02 	svcne	0x00007d02
   14250:	f3035201 	vhsub.u8	d5, d3, d1
   14254:	011f5301 	tsteq	pc, r1, lsl #6
   14258:	00300153 	eorseq	r0, r0, r3, asr r1
   1425c:	84011a00 	strhi	r1, [r1], #-2560	; 0xfffff600
   14260:	01000047 	tsteq	r0, r7, asr #32
   14264:	011001c0 	tsteq	r0, r0, asr #3
   14268:	000000fa 	strdeq	r0, [r0], -sl
	...
   14274:	0000f462 	andeq	pc, r0, r2, ror #8
   14278:	00153001 	andseq	r3, r5, r1
   1427c:	46e31b00 	strbtmi	r1, [r3], r0, lsl #22
   14280:	c0010000 	andgt	r0, r1, r0
   14284:	05543c01 	ldrbeq	r3, [r4, #-3073]	; 0xfffff3ff
   14288:	f4c00000 	vst1.8	{d16[0]}, [r0], r0
   1428c:	f4b20000 			; <UNDEFINED> instruction: 0xf4b20000
   14290:	741b0000 	ldrvc	r0, [fp], #-0
   14294:	01000043 	tsteq	r0, r3, asr #32
   14298:	063f01c1 	ldrteq	r0, [pc], -r1, asr #3
   1429c:	29000001 	stmdbcs	r0, {r0}
   142a0:	1f0000f5 	svcne	0x000000f5
   142a4:	1b0000f5 	blne	14680 <_Min_Heap_Size+0x13e80>
   142a8:	000042ce 	andeq	r4, r0, lr, asr #5
   142ac:	3f01c201 	svccc	0x0001c201
   142b0:	00000123 	andeq	r0, r0, r3, lsr #2
   142b4:	0000f578 	andeq	pc, r0, r8, ror r5	; <UNPREDICTABLE>
   142b8:	0000f56e 	andeq	pc, r0, lr, ror #10
   142bc:	0029111b 	eoreq	r1, r9, fp, lsl r1
   142c0:	01c30100 	biceq	r0, r3, r0, lsl #2
   142c4:	00090e41 	andeq	r0, r9, r1, asr #28
   142c8:	00f5c100 	rscseq	ip, r5, r0, lsl #2
   142cc:	00f5bd00 	rscseq	fp, r5, r0, lsl #26
   142d0:	3f3a1b00 	svccc	0x003a1b00
   142d4:	c4010000 	strgt	r0, [r1], #-0
   142d8:	01233f01 			; <UNDEFINED> instruction: 0x01233f01
   142dc:	f5e60000 			; <UNDEFINED> instruction: 0xf5e60000
   142e0:	f5e20000 			; <UNDEFINED> instruction: 0xf5e20000
   142e4:	481d0000 	ldmdami	sp, {}	; <UNPREDICTABLE>
   142e8:	01000038 	tsteq	r0, r8, lsr r0
   142ec:	fa1401c6 	blx	514a0c <_Min_Heap_Size+0x51420c>
   142f0:	12000000 	andne	r0, r0, #0
   142f4:	060000f6 			; <UNDEFINED> instruction: 0x060000f6
   142f8:	1c0000f6 	stcne	0, cr0, [r0], {246}	; 0xf6
   142fc:	0000468f 	andeq	r4, r0, pc, lsl #13
   14300:	1d01c701 	stcne	7, cr12, [r1, #-4]
   14304:	00000707 	andeq	r0, r0, r7, lsl #14
   14308:	21689102 	cmncs	r8, r2, lsl #2
   1430c:	00000000 	andeq	r0, r0, r0
   14310:	0000192e 	andeq	r1, r0, lr, lsr #18
   14314:	00000024 	andeq	r0, r0, r4, lsr #32
   14318:	00185f00 	andseq	r5, r8, r0, lsl #30
   1431c:	00151300 	andseq	r1, r5, r0, lsl #6
   14320:	51011f00 	tstpl	r1, r0, lsl #30
   14324:	1f007d02 	svcne	0x00007d02
   14328:	30015201 	andcc	r5, r1, r1, lsl #4
   1432c:	0153011f 	cmpeq	r3, pc, lsl r1
   14330:	001e0030 	andseq	r0, lr, r0, lsr r0
   14334:	5f000000 	svcpl	0x00000000
   14338:	1f000018 	svcne	0x00000018
   1433c:	7d025101 	stfvcs	f5, [r2, #-4]
   14340:	52011f00 	andpl	r1, r1, #0, 30
   14344:	06009103 	streq	r9, [r0], -r3, lsl #2
   14348:	0153011f 	cmpeq	r3, pc, lsl r1
   1434c:	22000030 	andcs	r0, r0, #48	; 0x30
   14350:	000044d3 	ldrdeq	r4, [r0], -r3
   14354:	1101a101 	tstne	r1, r1, lsl #2
   14358:	00000001 	andeq	r0, r0, r1
   1435c:	00000000 	andeq	r0, r0, r0
   14360:	00f66000 	rscseq	r6, r6, r0
   14364:	15d90100 	ldrbne	r0, [r9, #256]	; 0x100
   14368:	dd1b0000 	ldcle	0, cr0, [fp, #-0]
   1436c:	01000042 	tsteq	r0, r2, asr #32
   14370:	b33b01a1 	teqlt	fp, #1073741864	; 0x40000028
   14374:	84000000 	strhi	r0, [r0], #-0
   14378:	800000f6 	strdhi	r0, [r0], -r6
   1437c:	1b0000f6 	blne	1475c <_Min_Heap_Size+0x13f5c>
   14380:	0000426c 	andeq	r4, r0, ip, ror #4
   14384:	3901a201 	stmdbcc	r1, {r0, r9, sp, pc}
   14388:	00000123 	andeq	r0, r0, r3, lsr #2
   1438c:	0000f6a6 	andeq	pc, r0, r6, lsr #13
   14390:	0000f6a2 	andeq	pc, r0, r2, lsr #13
   14394:	0044971b 	subeq	r9, r4, fp, lsl r7
   14398:	01a30100 			; <UNDEFINED> instruction: 0x01a30100
   1439c:	00010639 	andeq	r0, r1, r9, lsr r6
   143a0:	00f6c800 	rscseq	ip, r6, r0, lsl #16
   143a4:	00f6c400 	rscseq	ip, r6, r0, lsl #8
   143a8:	46981b00 	ldrmi	r1, [r8], r0, lsl #22
   143ac:	a4010000 	strge	r0, [r1], #-0
   143b0:	009c3501 	addseq	r3, ip, r1, lsl #10
   143b4:	f6ea0000 			; <UNDEFINED> instruction: 0xf6ea0000
   143b8:	f6e60000 			; <UNDEFINED> instruction: 0xf6e60000
   143bc:	802a0000 	eorhi	r0, sl, r0
   143c0:	01000042 	tsteq	r0, r2, asr #32
   143c4:	d34001a5 	movtle	r0, #421	; 0x1a5
   143c8:	02000005 	andeq	r0, r0, #5
   143cc:	3b2a0091 	blcc	a94618 <_Min_Heap_Size+0xa93e18>
   143d0:	01000044 	tsteq	r0, r4, asr #32
   143d4:	583201a6 	ldmdapl	r2!, {r1, r2, r5, r7, r8}
   143d8:	02000006 	andeq	r0, r0, #6
   143dc:	00210491 	mlaeq	r1, r1, r4, r0
   143e0:	65000000 	strvs	r0, [r0, #-0]
   143e4:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
   143e8:	00000000 	andeq	r0, r0, r0
   143ec:	0000193d 	andeq	r1, r0, sp, lsr r9
   143f0:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   143f4:	00000474 	andeq	r0, r0, r4, ror r4
   143f8:	43f3011a 	mvnsmi	r0, #-2147483642	; 0x80000006
   143fc:	72010000 	andvc	r0, r1, #0
   14400:	54011701 	strpl	r1, [r1], #-1793	; 0xfffff8ff
   14404:	00000005 	andeq	r0, r0, r5
   14408:	00000000 	andeq	r0, r0, r0
   1440c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
   14410:	010000f7 	strdeq	r0, [r0, -r7]
   14414:	000016b7 			; <UNDEFINED> instruction: 0x000016b7
   14418:	0042dd1b 	subeq	sp, r2, fp, lsl sp
   1441c:	01720100 	cmneq	r2, r0, lsl #2
   14420:	0000b33e 	andeq	fp, r0, lr, lsr r3
   14424:	00f74400 	rscseq	r4, r7, r0, lsl #8
   14428:	00f74000 	rscseq	r4, r7, r0
   1442c:	426c1b00 	rsbmi	r1, ip, #0, 22
   14430:	73010000 	movwvc	r0, #4096	; 0x1000
   14434:	01233c01 			; <UNDEFINED> instruction: 0x01233c01
   14438:	f7690000 			; <UNDEFINED> instruction: 0xf7690000
   1443c:	f7650000 			; <UNDEFINED> instruction: 0xf7650000
   14440:	971b0000 	ldrls	r0, [fp, -r0]
   14444:	01000044 	tsteq	r0, r4, asr #32
   14448:	063c0174 			; <UNDEFINED> instruction: 0x063c0174
   1444c:	8e000001 	cdphi	0, 0, cr0, cr0, cr1, {0}
   14450:	8a0000f7 	bhi	14834 <_Min_Heap_Size+0x14034>
   14454:	1b0000f7 	blne	14838 <_Min_Heap_Size+0x14038>
   14458:	00004698 	muleq	r0, r8, r6
   1445c:	38017501 	stmdacc	r1, {r0, r8, sl, ip, sp, lr}
   14460:	0000009c 	muleq	r0, ip, r0
   14464:	0000f7b3 			; <UNDEFINED> instruction: 0x0000f7b3
   14468:	0000f7af 	andeq	pc, r0, pc, lsr #15
   1446c:	0042802a 	subeq	r8, r2, sl, lsr #32
   14470:	01760100 	cmneq	r6, r0, lsl #2
   14474:	0005d343 	andeq	sp, r5, r3, asr #6
   14478:	00910200 	addseq	r0, r1, r0, lsl #4
   1447c:	0047b52a 	subeq	fp, r7, sl, lsr #10
   14480:	01770100 	cmneq	r7, r0, lsl #2
   14484:	0011673b 	andseq	r6, r1, fp, lsr r7
   14488:	04910200 	ldreq	r0, [r1], #512	; 0x200
   1448c:	00443b1d 	subeq	r3, r4, sp, lsl fp
   14490:	01790100 	cmneq	r9, r0, lsl #2
   14494:	00065817 	andeq	r5, r6, r7, lsl r8
   14498:	00f7d600 	rscseq	sp, r7, r0, lsl #12
   1449c:	00f7d400 	rscseq	sp, r7, r0, lsl #8
   144a0:	00001e00 	andeq	r1, r0, r0, lsl #28
   144a4:	15300000 	ldrne	r0, [r0, #-0]!
   144a8:	011f0000 	tsteq	pc, r0
   144ac:	01f30350 	mvnseq	r0, r0, asr r3
   144b0:	51011f50 	tstpl	r1, r0, asr pc
   144b4:	5101f303 	tstpl	r1, r3, lsl #6	; <UNPREDICTABLE>
   144b8:	0352011f 	cmpeq	r2, #-1073741817	; 0xc0000007
   144bc:	1f5201f3 	svcne	0x005201f3
   144c0:	f3035301 	vcgt.u8	d5, d3, d1
   144c4:	021f5301 	andseq	r5, pc, #67108864	; 0x4000000
   144c8:	7502007d 	strvc	r0, [r2, #-125]	; 0xffffff83
   144cc:	7d021f00 	stcvc	15, cr1, [r2, #-0]
   144d0:	00740204 	rsbseq	r0, r4, r4, lsl #4
   144d4:	011a0000 	tsteq	sl, r0
   144d8:	00004562 	andeq	r4, r0, r2, ror #10
   144dc:	17015001 	strne	r5, [r1, -r1]
   144e0:	00055401 	andeq	r5, r5, r1, lsl #8
	...
   144ec:	00f7e900 	rscseq	lr, r7, r0, lsl #18
   144f0:	17960100 	ldrne	r0, [r6, r0, lsl #2]
   144f4:	dd1b0000 	ldcle	0, cr0, [fp, #-0]
   144f8:	01000042 	tsteq	r0, r2, asr #32
   144fc:	b3380150 	teqlt	r8, #80, 2
   14500:	25000000 	strcs	r0, [r0, #-0]
   14504:	210000f8 	strdcs	r0, [r0, -r8]
   14508:	1b0000f8 	blne	148f0 <_Min_Heap_Size+0x140f0>
   1450c:	0000426c 	andeq	r4, r0, ip, ror #4
   14510:	36015101 	strcc	r5, [r1], -r1, lsl #2
   14514:	00000123 	andeq	r0, r0, r3, lsr #2
   14518:	0000f847 	andeq	pc, r0, r7, asr #16
   1451c:	0000f843 	andeq	pc, r0, r3, asr #16
   14520:	0044971b 	subeq	r9, r4, fp, lsl r7
   14524:	01520100 	cmpeq	r2, r0, lsl #2
   14528:	00010636 	andeq	r0, r1, r6, lsr r6
   1452c:	00f86900 	rscseq	r6, r8, r0, lsl #18
   14530:	00f86500 	rscseq	r6, r8, r0, lsl #10
   14534:	46981b00 	ldrmi	r1, [r8], r0, lsl #22
   14538:	53010000 	movwpl	r0, #4096	; 0x1000
   1453c:	009c3201 	addseq	r3, ip, r1, lsl #4
   14540:	f88b0000 			; <UNDEFINED> instruction: 0xf88b0000
   14544:	f8870000 			; <UNDEFINED> instruction: 0xf8870000
   14548:	802a0000 	eorhi	r0, sl, r0
   1454c:	01000042 	tsteq	r0, r2, asr #32
   14550:	d33d0154 	teqle	sp, #84, 2
   14554:	02000005 	andeq	r0, r0, #5
   14558:	3b1d0091 	blcc	7547a4 <_Min_Heap_Size+0x753fa4>
   1455c:	01000044 	tsteq	r0, r4, asr #32
   14560:	58170156 	ldmdapl	r7, {r1, r2, r4, r6, r8}
   14564:	ad000006 	stcge	0, cr0, [r0, #-24]	; 0xffffffe8
   14568:	a90000f8 	stmdbge	r0, {r3, r4, r5, r6, r7}
   1456c:	240000f8 	strcs	r0, [r0], #-248	; 0xffffff08
   14570:	00000000 	andeq	r0, r0, r0
   14574:	0000194c 	andeq	r1, r0, ip, asr #18
   14578:	00001764 	andeq	r1, r0, r4, ror #14
   1457c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   14580:	1e002808 	cdpne	8, 0, cr2, cr0, cr8, {0}
   14584:	00000000 	andeq	r0, r0, r0
   14588:	00001530 	andeq	r1, r0, r0, lsr r5
   1458c:	0250011f 	subseq	r0, r0, #-1073741817	; 0xc0000007
   14590:	011f0074 	tsteq	pc, r4, ror r0	; <UNPREDICTABLE>
   14594:	00780251 	rsbseq	r0, r8, r1, asr r2
   14598:	0252011f 	subseq	r0, r2, #-1073741817	; 0xc0000007
   1459c:	011f0077 	tsteq	pc, r7, ror r0	; <UNPREDICTABLE>
   145a0:	00750253 	rsbseq	r0, r5, r3, asr r2
   145a4:	007d021f 	rsbseq	r0, sp, pc, lsl r2
   145a8:	06009103 	streq	r9, [r0], -r3, lsl #2
   145ac:	047d021f 	ldrbteq	r0, [sp], #-543	; 0xfffffde1
   145b0:	00007602 	andeq	r7, r0, r2, lsl #12
   145b4:	40012c00 	andmi	r2, r1, r0, lsl #24
   145b8:	01000035 	tsteq	r0, r5, lsr r0
   145bc:	fa0110ed 	blx	58978 <_Min_Heap_Size+0x58178>
   145c0:	64000000 	strvs	r0, [r0], #-0
   145c4:	c008002d 	andgt	r0, r8, sp, lsr #32
   145c8:	cb08002d 	blgt	214684 <_Min_Heap_Size+0x213e84>
   145cc:	010000f8 	strdeq	r0, [r0, -r8]
   145d0:	00001859 	andeq	r1, r0, r9, asr r8
   145d4:	0038482d 	eorseq	r4, r8, sp, lsr #16
   145d8:	14ef0100 	strbtne	r0, [pc], #256	; 145e0 <_Min_Heap_Size+0x13de0>
   145dc:	000000fa 	strdeq	r0, [r0], -sl
   145e0:	0000f909 	andeq	pc, r0, r9, lsl #18
   145e4:	0000f903 	andeq	pc, r0, r3, lsl #18
   145e8:	002d7223 	eoreq	r7, sp, r3, lsr #4
   145ec:	002da408 	eoreq	sl, sp, r8, lsl #8
   145f0:	00184f08 	andseq	r4, r8, r8, lsl #30
   145f4:	3d281c00 	stccc	12, cr1, [r8, #-0]
   145f8:	22010000 	andcs	r0, r1, #0
   145fc:	18592401 	ldmdane	r9, {r0, sl, sp}^
   14600:	91020000 	mrsls	r0, (UNDEF: 2)
   14604:	39751c6c 	ldmdbcc	r5!, {r2, r3, r5, r6, sl, fp, ip}^
   14608:	23010000 	movwcs	r0, #4096	; 0x1000
   1460c:	05362301 	ldreq	r2, [r6, #-769]!	; 0xfffffcff
   14610:	91020000 	mrsls	r0, (UNDEF: 2)
   14614:	3f021c70 	svccc	0x00021c70
   14618:	24010000 	strcs	r0, [r1], #-0
   1461c:	00292c01 	eoreq	r2, r9, r1, lsl #24
   14620:	91020000 	mrsls	r0, (UNDEF: 2)
   14624:	2d822474 	cfstrscs	mvf2, [r2, #464]	; 0x1d0
   14628:	195a0800 	ldmdbne	sl, {fp}^
   1462c:	18260000 	stmdane	r6!, {}	; <UNPREDICTABLE>
   14630:	011f0000 	tsteq	pc, r0
   14634:	6c910250 	lfmvs	f0, 4, [r1], {80}	; 0x50
   14638:	0251011f 	subseq	r0, r1, #-1073741817	; 0xc0000007
   1463c:	011f7091 			; <UNDEFINED> instruction: 0x011f7091
   14640:	74910252 	ldrvc	r0, [r1], #594	; 0x252
   14644:	2d9a1e00 	ldccs	14, cr1, [sl]
   14648:	19690800 	stmdbne	r9!, {fp}^
   1464c:	011f0000 	tsteq	pc, r0
   14650:	ed030550 	cfstr32	mvfx0, [r3, #-320]	; 0xfffffec0
   14654:	1f08002c 	svcne	0x0008002c
   14658:	03055101 	movweq	r5, #20737	; 0x5101
   1465c:	080048f0 	stmdaeq	r0, {r4, r5, r6, r7, fp, lr}
   14660:	0253011f 	subseq	r0, r3, #-1073741817	; 0xc0000007
   14664:	021f0074 	andseq	r0, pc, #116	; 0x74
   14668:	3401007d 	strcc	r0, [r1], #-125	; 0xffffff83
   1466c:	6c210000 	stcvs	0, cr0, [r1], #-0
   14670:	6508002d 	strvs	r0, [r8, #-45]	; 0xffffffd3
   14674:	0000000a 	andeq	r0, r0, sl
   14678:	02dc0407 	sbcseq	r0, ip, #117440512	; 0x7000000
   1467c:	012e0000 			; <UNDEFINED> instruction: 0x012e0000
   14680:	002c2801 	eoreq	r2, ip, r1, lsl #16
   14684:	002c2800 	eoreq	r2, ip, r0, lsl #16
   14688:	02ae0a00 	adceq	r0, lr, #0, 20
   1468c:	01012e0c 	tsteq	r1, ip, lsl #28
   14690:	00002971 	andeq	r2, r0, r1, ror r9
   14694:	00002971 	andeq	r2, r0, r1, ror r9
   14698:	0c05510a 	stfeqs	f5, [r5], {10}
   1469c:	f301012f 	vrhadd.u8	d0, d1, d31
   146a0:	f3000029 	vhadd.u8	d0, d0, d25
   146a4:	06000029 	streq	r0, [r0], -r9, lsr #32
   146a8:	012f0d76 			; <UNDEFINED> instruction: 0x012f0d76
   146ac:	00286e01 	eoreq	r6, r8, r1, lsl #28
   146b0:	00286e00 	eoreq	r6, r8, r0, lsl #28
   146b4:	0d770600 	ldcleq	6, cr0, [r7, #-0]
   146b8:	5401012e 	strpl	r0, [r1], #-302	; 0xfffffed2
   146bc:	54000030 	strpl	r0, [r0], #-48	; 0xffffffd0
   146c0:	0a000030 	beq	14788 <_Min_Heap_Size+0x13f88>
   146c4:	2e13064f 	cfmsub32cs	mvax2, mvfx0, mvfx3, mvfx15
   146c8:	27d30101 	ldrbcs	r0, [r3, r1, lsl #2]
   146cc:	27d30000 	ldrbcs	r0, [r3, r0]
   146d0:	b9080000 	stmdblt	r8, {}	; <UNPREDICTABLE>
   146d4:	012e0601 			; <UNDEFINED> instruction: 0x012e0601
   146d8:	0028d701 	eoreq	sp, r8, r1, lsl #14
   146dc:	0028d700 	eoreq	sp, r8, r0, lsl #14
   146e0:	03910a00 	orrseq	r0, r1, #0, 20
   146e4:	01012e0c 	tsteq	r1, ip, lsl #28
   146e8:	0000273f 	andeq	r2, r0, pc, lsr r7
   146ec:	0000273f 	andeq	r2, r0, pc, lsr r7
   146f0:	0d01f708 	stceq	7, cr15, [r1, #-32]	; 0xffffffe0
   146f4:	1301012f 	movwne	r0, #4399	; 0x112f
   146f8:	13000030 	movwne	r0, #48	; 0x30
   146fc:	0c000030 	stceq	0, cr0, [r0], {48}	; 0x30
   14700:	012e06b8 			; <UNDEFINED> instruction: 0x012e06b8
   14704:	00286201 	eoreq	r6, r8, r1, lsl #4
   14708:	00286200 	eoreq	r6, r8, r0, lsl #4
   1470c:	01d10800 	bicseq	r0, r1, r0, lsl #16
   14710:	01012e06 	tsteq	r1, r6, lsl #28
   14714:	00003ab6 			; <UNDEFINED> instruction: 0x00003ab6
   14718:	00003ab6 			; <UNDEFINED> instruction: 0x00003ab6
   1471c:	0c06a409 	cfstrseq	mvf10, [r6], {9}
   14720:	4201012e 	andmi	r0, r1, #-2147483637	; 0x8000000b
   14724:	4200002b 	andmi	r0, r0, #43	; 0x2b
   14728:	0900002b 	stmdbeq	r0, {r0, r1, r3, r5}
   1472c:	2e06065b 	mcrcs	6, 0, r0, cr6, cr11, {2}
   14730:	2f850101 	svccs	0x00850101
   14734:	2f850000 	svccs	0x00850000
   14738:	f60a0000 			; <UNDEFINED> instruction: 0xf60a0000
   1473c:	012e0606 			; <UNDEFINED> instruction: 0x012e0606
   14740:	002fc901 	eoreq	ip, pc, r1, lsl #18
   14744:	002fc900 	eoreq	ip, pc, r0, lsl #18
   14748:	06930900 	ldreq	r0, [r3], r0, lsl #18
   1474c:	01012e0c 	tsteq	r1, ip, lsl #28
   14750:	00000ac9 	andeq	r0, r0, r9, asr #21
   14754:	00000ac9 	andeq	r0, r0, r9, asr #21
   14758:	0c0e1409 	cfstrseq	mvf1, [lr], {9}
   1475c:	9901012e 	stmdbls	r1, {r1, r2, r3, r5, r8}
   14760:	99000027 	stmdbls	r0, {r0, r1, r2, r5}
   14764:	08000027 	stmdaeq	r0, {r0, r1, r2, r5}
   14768:	2f0601c4 	svccs	0x000601c4
   1476c:	2b350101 	blcs	d54b78 <_Min_Heap_Size+0xd54378>
   14770:	2b350000 	blcs	d54778 <_Min_Heap_Size+0xd53f78>
   14774:	b50c0000 	strlt	r0, [ip, #-0]
   14778:	01012e08 	tsteq	r1, r8, lsl #28
   1477c:	0000359b 	muleq	r0, fp, r5
   14780:	0000359b 	muleq	r0, fp, r5
   14784:	0a05750b 	beq	171bb8 <_Min_Heap_Size+0x1713b8>
   14788:	8201012e 	andhi	r0, r1, #-2147483637	; 0x8000000b
   1478c:	82000035 	andhi	r0, r0, #53	; 0x35
   14790:	09000035 	stmdbeq	r0, {r0, r2, r4, r5}
   14794:	001201fd 			; <UNDEFINED> instruction: 0x001201fd
   14798:	00000615 	andeq	r0, r0, r5, lsl r6
   1479c:	28cc0002 	stmiacs	ip, {r1}^
   147a0:	01040000 	mrseq	r0, (UNDEF: 4)
   147a4:	00000621 	andeq	r0, r0, r1, lsr #12
   147a8:	0048d50c 	subeq	sp, r8, ip, lsl #10
   147ac:	0004e900 	andeq	lr, r4, r0, lsl #18
   147b0:	000f8000 	andeq	r8, pc, r0
	...
   147bc:	00e87a00 	rsceq	r7, r8, r0, lsl #20
   147c0:	4e160200 	cdpmi	2, 1, cr0, cr6, cr0, {0}
   147c4:	d1020000 	mrsle	r0, (UNDEF: 2)
   147c8:	00003a17 	andeq	r3, r0, r7, lsl sl
   147cc:	00290300 	eoreq	r0, r9, r0, lsl #6
   147d0:	04040000 	streq	r0, [r4], #-0
   147d4:	0000c807 	andeq	ip, r0, r7, lsl #16
   147d8:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
   147dc:	00746e69 	rsbseq	r6, r4, r9, ror #28
   147e0:	28050804 	stmdacs	r5, {r2, fp}
   147e4:	04000003 	streq	r0, [r0], #-3
   147e8:	07580408 	ldrbeq	r0, [r8, -r8, lsl #8]
   147ec:	01040000 	mrseq	r0, (UNDEF: 4)
   147f0:	00060f06 	andeq	r0, r6, r6, lsl #30
   147f4:	00760200 	rsbseq	r0, r6, r0, lsl #4
   147f8:	2b030000 	blcs	d4800 <_Min_Heap_Size+0xd4000>
   147fc:	00006918 	andeq	r6, r0, r8, lsl r9
   14800:	08010400 	stmdaeq	r1, {sl}
   14804:	0000060d 	andeq	r0, r0, sp, lsl #12
   14808:	2a050204 	bcs	155020 <_Min_Heap_Size+0x154820>
   1480c:	04000004 	streq	r0, [r0], #-4
   14810:	08280702 	stmdaeq	r8!, {r1, r8, r9, sl}
   14814:	04040000 	streq	r0, [r4], #-0
   14818:	00032d05 	andeq	r2, r3, r5, lsl #26
   1481c:	02ef0200 	rsceq	r0, pc, #0, 4
   14820:	4f030000 	svcmi	0x00030000
   14824:	00009119 	andeq	r9, r0, r9, lsl r1
   14828:	07040400 	streq	r0, [r4, -r0, lsl #8]
   1482c:	000000c3 	andeq	r0, r0, r3, asr #1
   14830:	be070804 	cdplt	8, 0, cr0, cr7, cr4, {0}
   14834:	06000000 	streq	r0, [r0], -r0
   14838:	08010404 	stmdaeq	r1, {r2, sl}
   1483c:	00000616 	andeq	r0, r0, r6, lsl r6
   14840:	00007802 	andeq	r7, r0, r2, lsl #16
   14844:	13180400 	tstne	r8, #0, 8
   14848:	0000005d 	andeq	r0, r0, sp, asr r0
   1484c:	0002f102 	andeq	pc, r2, r2, lsl #2
   14850:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
   14854:	00000085 	andeq	r0, r0, r5, lsl #1
   14858:	00275802 	eoreq	r5, r7, r2, lsl #16
   1485c:	1a420500 	bne	1095c64 <_Min_Heap_Size+0x1095464>
   14860:	000000b4 	strheq	r0, [r0], -r4
   14864:	00a80407 	adceq	r0, r8, r7, lsl #8
   14868:	0d080000 	stceq	0, cr0, [r8, #-0]
   1486c:	1c000048 	stcne	0, cr0, [r0], {72}	; 0x48
   14870:	49109406 	ldmdbmi	r0, {r1, r2, sl, ip, pc}
   14874:	09000001 	stmdbeq	r0, {r0}
   14878:	000049ba 			; <UNDEFINED> instruction: 0x000049ba
   1487c:	290c9606 	stmdbcs	ip, {r1, r2, r9, sl, ip, pc}
   14880:	02000000 	andeq	r0, r0, #0
   14884:	06090023 	streq	r0, [r9], -r3, lsr #32
   14888:	0600004a 	streq	r0, [r0], -sl, asr #32
   1488c:	00290c97 	mlaeq	r9, r7, ip, r0
   14890:	23020000 	movwcs	r0, #8192	; 0x2000
   14894:	48b50904 	ldmmi	r5!, {r2, r8, fp}
   14898:	98060000 	stmdals	r6, {}	; <UNPREDICTABLE>
   1489c:	0000290c 	andeq	r2, r0, ip, lsl #18
   148a0:	08230200 	stmdaeq	r3!, {r9}
   148a4:	00486409 	subeq	r6, r8, r9, lsl #8
   148a8:	0c990600 	ldceq	6, cr0, [r9], {0}
   148ac:	00000029 	andeq	r0, r0, r9, lsr #32
   148b0:	090c2302 	stmdbeq	ip, {r1, r8, r9, sp}
   148b4:	00004818 	andeq	r4, r0, r8, lsl r8
   148b8:	290c9a06 	stmdbcs	ip, {r1, r2, r9, fp, ip, pc}
   148bc:	02000000 	andeq	r0, r0, #0
   148c0:	9b091023 	blls	258954 <_Min_Heap_Size+0x258154>
   148c4:	06000049 	streq	r0, [r0], -r9, asr #32
   148c8:	00290c9b 	mlaeq	r9, fp, ip, r0
   148cc:	23020000 	movwcs	r0, #8192	; 0x2000
   148d0:	4a500914 	bmi	1416d28 <_Min_Heap_Size+0x1416528>
   148d4:	9c060000 	stcls	0, cr0, [r6], {-0}
   148d8:	0000290c 	andeq	r2, r0, ip, lsl #18
   148dc:	18230200 	stmdane	r3!, {r9}
   148e0:	48370200 	ldmdami	r7!, {r9}
   148e4:	9d060000 	stcls	0, cr0, [r6, #-0]
   148e8:	0000d203 	andeq	sp, r0, r3, lsl #4
   148ec:	00a80a00 	adceq	r0, r8, r0, lsl #20
   148f0:	01660000 	cmneq	r6, r0
   148f4:	3a0b0000 	bcc	2d48fc <_Min_Heap_Size+0x2d40fc>
   148f8:	ff000000 			; <UNDEFINED> instruction: 0xff000000
   148fc:	720c007f 	andvc	r0, ip, #127	; 0x7f
   14900:	01000005 	tsteq	r0, r5
   14904:	0155145d 	cmpeq	r5, sp, asr r4
   14908:	01010000 	mrseq	r0, (UNDEF: 1)
   1490c:	00489908 	subeq	r9, r8, r8, lsl #18
   14910:	64010800 	strvs	r0, [r1], #-2048	; 0xfffff800
   14914:	0001a010 	andeq	sl, r1, r0, lsl r0
   14918:	48430900 	stmdami	r3, {r8, fp}^
   1491c:	66010000 	strvs	r0, [r1], -r0
   14920:	0001a01b 	andeq	sl, r1, fp, lsl r0
   14924:	00230200 	eoreq	r0, r3, r0, lsl #4
   14928:	004a6909 	subeq	r6, sl, r9, lsl #18
   1492c:	0c670100 	stfeqe	f0, [r7], #-0
   14930:	00000029 	andeq	r0, r0, r9, lsr #32
   14934:	00042302 	andeq	r2, r4, r2, lsl #6
   14938:	01740407 	cmneq	r4, r7, lsl #8
   1493c:	8f020000 	svchi	0x00020000
   14940:	01000049 	tsteq	r0, r9, asr #32
   14944:	01740368 	cmneq	r4, r8, ror #6
   14948:	d50d0000 	strle	r0, [sp, #-0]
   1494c:	01000049 	tsteq	r0, r9, asr #32
   14950:	0035159e 	mlaseq	r5, lr, r5, r1
   14954:	0e080000 	cdpeq	0, 0, cr0, cr8, cr0, {0}
   14958:	00004a74 	andeq	r4, r0, r4, ror sl
   1495c:	a624a101 	strtge	sl, [r4], -r1, lsl #2
   14960:	05000001 	streq	r0, [r0, #-1]
   14964:	00897403 	addeq	r7, r9, r3, lsl #8
   14968:	48780e20 	ldmdami	r8!, {r5, r9, sl, fp}^
   1496c:	a2010000 	andge	r0, r1, #0
   14970:	0001e326 	andeq	lr, r1, r6, lsr #6
   14974:	60030500 	andvs	r0, r3, r0, lsl #10
   14978:	07200089 	streq	r0, [r0, -r9, lsl #1]!
   1497c:	0001a604 	andeq	sl, r1, r4, lsl #12
   14980:	49f20e00 	ldmibmi	r2!, {r9, sl, fp}^
   14984:	a6010000 	strge	r0, [r1], -r0
   14988:	0000291f 	andeq	r2, r0, pc, lsl r9
   1498c:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
   14990:	0e200089 	cdpeq	0, 2, cr0, cr0, cr9, {4}
   14994:	00004818 	andeq	r4, r0, r8, lsl r8
   14998:	291fa701 	ldmdbcs	pc, {r0, r8, r9, sl, sp, pc}	; <UNPREDICTABLE>
   1499c:	05000000 	streq	r0, [r0, #-0]
   149a0:	00896803 	addeq	r6, r9, r3, lsl #16
   149a4:	499b0e20 	ldmibmi	fp, {r5, r9, sl, fp}
   149a8:	a8010000 	stmdage	r1, {}	; <UNPREDICTABLE>
   149ac:	0000291f 	andeq	r2, r0, pc, lsl r9
   149b0:	6c030500 	cfstr32vs	mvfx0, [r3], {-0}
   149b4:	0e200089 	cdpeq	0, 2, cr0, cr0, cr9, {4}
   149b8:	00004a50 	andeq	r4, r0, r0, asr sl
   149bc:	291fa901 	ldmdbcs	pc, {r0, r8, fp, sp, pc}	; <UNPREDICTABLE>
   149c0:	05000000 	streq	r0, [r0, #-0]
   149c4:	00897003 	addeq	r7, r9, r3
   149c8:	52010f20 	andpl	r0, r1, #32, 30	; 0x80
   149cc:	01000049 	tsteq	r0, r9, asr #32
   149d0:	01060269 	tsteq	r6, r9, ror #4
	...
   149dc:	01007d02 	tsteq	r0, r2, lsl #26
   149e0:	4abb0110 	bmi	feed4e28 <_estack+0xdeecb488>
   149e4:	30010000 	andcc	r0, r1, r0
   149e8:	00010602 	andeq	r0, r1, r2, lsl #12
   149ec:	00000000 	andeq	r0, r0, r0
   149f0:	35000000 	strcc	r0, [r0, #-0]
   149f4:	010000f9 	strdeq	r0, [r0, -r9]
   149f8:	000002f2 	strdeq	r0, [r0], -r2
   149fc:	00480c11 	subeq	r0, r8, r1, lsl ip
   14a00:	02300100 	eorseq	r0, r0, #0, 2
   14a04:	0002f227 	andeq	pc, r2, r7, lsr #4
   14a08:	00f95900 	rscseq	r5, r9, r0, lsl #18
   14a0c:	00f95500 	rscseq	r5, r9, r0, lsl #10
   14a10:	48531200 	ldmdami	r3, {r9, ip}^
   14a14:	32010000 	andcc	r0, r1, #0
   14a18:	01e31302 	mvneq	r1, r2, lsl #6
   14a1c:	f97b0000 			; <UNDEFINED> instruction: 0xf97b0000
   14a20:	f9770000 			; <UNDEFINED> instruction: 0xf9770000
   14a24:	7b120000 	blvc	494a2c <_Min_Heap_Size+0x49422c>
   14a28:	0100004a 	tsteq	r0, sl, asr #32
   14a2c:	290c0233 	stmdbcs	ip, {r0, r1, r4, r5, r9}
   14a30:	9d000000 	stcls	0, cr0, [r0, #-0]
   14a34:	990000f9 	stmdbls	r0, {r0, r3, r4, r5, r6, r7}
   14a38:	120000f9 	andne	r0, r0, #249	; 0xf9
   14a3c:	00004966 	andeq	r4, r0, r6, ror #18
   14a40:	19023301 	stmdbne	r2, {r0, r8, r9, ip, sp}
   14a44:	00000029 	andeq	r0, r0, r9, lsr #32
   14a48:	0000f9c0 	andeq	pc, r0, r0, asr #19
   14a4c:	0000f9bc 			; <UNDEFINED> instruction: 0x0000f9bc
   14a50:	00485b12 	subeq	r5, r8, r2, lsl fp
   14a54:	02330100 	eorseq	r0, r3, #0, 2
   14a58:	00002927 	andeq	r2, r0, r7, lsr #18
   14a5c:	00f9e300 	rscseq	lr, r9, r0, lsl #6
   14a60:	00f9df00 	rscseq	sp, r9, r0, lsl #30
   14a64:	00001300 	andeq	r1, r0, r0, lsl #6
   14a68:	05d10000 	ldrbeq	r0, [r1]
   14a6c:	00130000 	andseq	r0, r3, r0
   14a70:	e0000000 	and	r0, r0, r0
   14a74:	13000005 	movwne	r0, #5
   14a78:	00000000 	andeq	r0, r0, r0
   14a7c:	000005ef 	andeq	r0, r0, pc, ror #11
   14a80:	00000013 	andeq	r0, r0, r3, lsl r0
   14a84:	0005fd00 	andeq	pc, r5, r0, lsl #26
   14a88:	04070000 	streq	r0, [r7], #-0
   14a8c:	00000149 	andeq	r0, r0, r9, asr #2
   14a90:	00487e14 	subeq	r7, r8, r4, lsl lr
   14a94:	01ec0100 	mvneq	r0, r0, lsl #2
   14a98:	2e18010d 	mufcse	f0, f0, #5.0
   14a9c:	2e7c0800 	cdpcs	8, 7, cr0, cr12, cr0, {0}
   14aa0:	fa030800 	blx	d6aa8 <_Min_Heap_Size+0xd62a8>
   14aa4:	53010000 	movwpl	r0, #4096	; 0x1000
   14aa8:	11000003 	tstne	r0, r3
   14aac:	00004a31 	andeq	r4, r0, r1, lsr sl
   14ab0:	3701ec01 	strcc	lr, [r1, -r1, lsl #24]
   14ab4:	000001e3 	andeq	r0, r0, r3, ror #3
   14ab8:	0000fa4f 	andeq	pc, r0, pc, asr #20
   14abc:	0000fa47 	andeq	pc, r0, r7, asr #20
   14ac0:	00280812 	eoreq	r0, r8, r2, lsl r8
   14ac4:	01ee0100 	mvneq	r0, r0, lsl #2
   14ac8:	0001e313 	andeq	lr, r1, r3, lsl r3
   14acc:	00fa8c00 	rscseq	r8, sl, r0, lsl #24
   14ad0:	00fa8600 	rscseq	r8, sl, r0, lsl #12
   14ad4:	75701500 	ldrbvc	r1, [r0, #-1280]!	; 0xfffffb00
   14ad8:	ef010063 	svc	0x00010063
   14adc:	00cc0f01 	sbceq	r0, ip, r1, lsl #30
   14ae0:	fac20000 	blx	ff094ae8 <_estack+0xdf08b148>
   14ae4:	faba0000 	blx	fee94aec <_estack+0xdee8b14c>
   14ae8:	16000000 	strne	r0, [r0], -r0
   14aec:	00004a25 	andeq	r4, r0, r5, lsr #20
   14af0:	0d01bc01 	stceq	12, cr11, [r1, #-4]
   14af4:	002dc001 	eoreq	ip, sp, r1
   14af8:	002e1808 	eoreq	r1, lr, r8, lsl #16
   14afc:	007d0208 	rsbseq	r0, sp, r8, lsl #4
   14b00:	0003c201 	andeq	ip, r3, r1, lsl #4
   14b04:	4a881200 	bmi	fe21930c <_estack+0xde20f96c>
   14b08:	be010000 	cdplt	0, 0, cr0, cr1, cr0, {0}
   14b0c:	01e31301 	mvneq	r1, r1, lsl #6
   14b10:	faf80000 	blx	ffe14b18 <_estack+0xdfe0b178>
   14b14:	faf60000 	blx	ffd94b1c <_estack+0xdfd8b17c>
   14b18:	a6120000 	ldrge	r0, [r2], -r0
   14b1c:	01000048 	tsteq	r0, r8, asr #32
   14b20:	b41b01bf 	ldrlt	r0, [fp], #-447	; 0xfffffe41
   14b24:	0f000000 	svceq	0x00000000
   14b28:	0b0000fb 	bleq	14f1c <_Min_Heap_Size+0x1471c>
   14b2c:	120000fb 	andne	r0, r0, #251	; 0xfb
   14b30:	00004909 	andeq	r4, r0, r9, lsl #18
   14b34:	2b01bf01 	blcs	84740 <_Min_Heap_Size+0x83f40>
   14b38:	000000b4 	strheq	r0, [r0], -r4
   14b3c:	0000fb31 	andeq	pc, r0, r1, lsr fp	; <UNPREDICTABLE>
   14b40:	0000fb2d 	andeq	pc, r0, sp, lsr #22
   14b44:	004a4112 	subeq	r4, sl, r2, lsl r1
   14b48:	01c00100 	biceq	r0, r0, r0, lsl #2
   14b4c:	0000290c 	andeq	r2, r0, ip, lsl #18
   14b50:	00fb5600 	rscseq	r5, fp, r0, lsl #12
   14b54:	00fb5000 	rscseq	r5, fp, r0
   14b58:	01170000 	tsteq	r7, r0
   14b5c:	000049e5 	andeq	r4, r0, r5, ror #19
   14b60:	0801a901 	stmdaeq	r1, {r0, r8, fp, sp, pc}
   14b64:	00009f01 	andeq	r9, r0, r1, lsl #30
	...
   14b70:	00fb8500 	rscseq	r8, fp, r0, lsl #10
   14b74:	04500100 	ldrbeq	r0, [r0], #-256	; 0xffffff00
   14b78:	83110000 	tsthi	r1, #0
   14b7c:	0100004a 	tsteq	r0, sl, asr #32
   14b80:	291d01a9 	ldmdbcs	sp, {r0, r3, r5, r7, r8}
   14b84:	ad000000 	stcge	0, cr0, [r0, #-0]
   14b88:	a50000fb 	strge	r0, [r0, #-251]	; 0xffffff05
   14b8c:	110000fb 	strdne	r0, [r0, -fp]
   14b90:	00004969 	andeq	r4, r0, r9, ror #18
   14b94:	1d01aa01 	vstrne	s20, [r1, #-4]
   14b98:	00000029 	andeq	r0, r0, r9, lsr #32
   14b9c:	0000fbea 	andeq	pc, r0, sl, ror #23
   14ba0:	0000fbe4 	andeq	pc, r0, r4, ror #23
   14ba4:	00767015 	rsbseq	r7, r6, r5, lsl r0
   14ba8:	0c01ac01 	stceq	12, cr10, [r1], {1}
   14bac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
   14bb0:	0000fc1e 	andeq	pc, r0, lr, lsl ip	; <UNPREDICTABLE>
   14bb4:	0000fc16 	andeq	pc, r0, r6, lsl ip	; <UNPREDICTABLE>
   14bb8:	00000018 	andeq	r0, r0, r8, lsl r0
   14bbc:	00051e00 	andeq	r1, r5, r0, lsl #28
   14bc0:	00043400 	andeq	r3, r4, r0, lsl #8
   14bc4:	50011900 	andpl	r1, r1, r0, lsl #18
   14bc8:	00007402 	andeq	r7, r0, r2, lsl #8
   14bcc:	0000001a 	andeq	r0, r0, sl, lsl r0
   14bd0:	00060b00 	andeq	r0, r6, r0, lsl #22
   14bd4:	50011900 	andpl	r1, r1, r0, lsl #18
   14bd8:	19007502 	stmdbne	r0, {r1, r8, sl, ip, sp, lr}
   14bdc:	30015101 	andcc	r5, r1, r1, lsl #2
   14be0:	02520119 	subseq	r0, r2, #1073741830	; 0x40000006
   14be4:	00000074 	andeq	r0, r0, r4, ror r0
   14be8:	4aa5010f 	bmi	fe95502c <_estack+0xde94b68c>
   14bec:	a3010000 	movwge	r0, #4096	; 0x1000
   14bf0:	00010601 	andeq	r0, r1, r1, lsl #12
   14bf4:	00000000 	andeq	r0, r0, r0
   14bf8:	02000000 	andeq	r0, r0, #0
   14bfc:	1b01007d 	blne	54df8 <_Min_Heap_Size+0x545f8>
   14c00:	00496f01 	subeq	r6, r9, r1, lsl #30
   14c04:	019d0100 	orrseq	r0, sp, r0, lsl #2
   14c08:	00290108 	eoreq	r0, r9, r8, lsl #2
	...
   14c14:	7d020000 	stcvc	0, cr0, [r2, #-0]
   14c18:	011b0100 	tsteq	fp, r0, lsl #2
   14c1c:	00004925 	andeq	r4, r0, r5, lsr #18
   14c20:	08019701 	stmdaeq	r1, {r0, r8, r9, sl, ip, pc}
   14c24:	00002901 	andeq	r2, r0, r1, lsl #18
	...
   14c30:	007d0200 	rsbseq	r0, sp, r0, lsl #4
   14c34:	13011001 	movwne	r1, #4097	; 0x1001
   14c38:	01000030 	tsteq	r0, r0, lsr r0
   14c3c:	0106015c 	tsteq	r6, ip, asr r1
   14c40:	08002f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp, sp}
   14c44:	08002fa0 	stmdaeq	r0, {r5, r7, r8, r9, sl, fp, sp}
   14c48:	0000fc54 	andeq	pc, r0, r4, asr ip	; <UNPREDICTABLE>
   14c4c:	00051e01 	andeq	r1, r5, r1, lsl #28
   14c50:	76701c00 	ldrbtvc	r1, [r0], -r0, lsl #24
   14c54:	015c0100 	cmpeq	ip, r0, lsl #2
   14c58:	00009f18 	andeq	r9, r0, r8, lsl pc
   14c5c:	00fc8a00 	rscseq	r8, ip, r0, lsl #20
   14c60:	00fc8000 	rscseq	r8, ip, r0
   14c64:	75701500 	ldrbvc	r1, [r0, #-1280]!	; 0xfffffb00
   14c68:	5e010063 	cdppl	0, 0, cr0, cr1, cr3, {3}
   14c6c:	00cc0f01 	sbceq	r0, ip, r1, lsl #30
   14c70:	fccf0000 	stc2l	0, cr0, [pc], {0}
   14c74:	fcc90000 	stc2l	0, cr0, [r9], {0}
   14c78:	cd120000 	ldcgt	0, cr0, [r2, #-0]
   14c7c:	0100004a 	tsteq	r0, sl, asr #32
   14c80:	e313015f 	tst	r3, #-1073741801	; 0xc0000017
   14c84:	fa000001 	blx	14c90 <_Min_Heap_Size+0x14490>
   14c88:	f80000fc 			; <UNDEFINED> instruction: 0xf80000fc
   14c8c:	130000fc 	movwne	r0, #252	; 0xfc
   14c90:	08002f76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, sl, fp, sp}
   14c94:	000005d1 	ldrdeq	r0, [r0], -r1
   14c98:	002f8818 	eoreq	r8, pc, r8, lsl r8	; <UNPREDICTABLE>
   14c9c:	0002f808 	andeq	pc, r2, r8, lsl #16
   14ca0:	00051400 	andeq	r1, r5, r0, lsl #8
   14ca4:	50011900 	andpl	r1, r1, r0, lsl #18
   14ca8:	00007502 	andeq	r7, r0, r2, lsl #10
   14cac:	002f9413 	eoreq	r9, pc, r3, lsl r4	; <UNPREDICTABLE>
   14cb0:	0005e008 	andeq	lr, r5, r8
   14cb4:	011d0000 	tsteq	sp, r0
   14cb8:	00002b35 	andeq	r2, r0, r5, lsr fp
   14cbc:	0108ad01 	tsteq	r8, r1, lsl #26
   14cc0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
   14cc4:	08002e7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, sl, fp, sp}
   14cc8:	08002f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp, sp}
   14ccc:	0000fd0d 	andeq	pc, r0, sp, lsl #26
   14cd0:	0005d101 	andeq	sp, r5, r1, lsl #2
   14cd4:	4a991e00 	bmi	fe65c4dc <_estack+0xde652b3c>
   14cd8:	ad010000 	stcge	0, cr0, [r1, #-0]
   14cdc:	0000291d 	andeq	r2, r0, sp, lsl r9
   14ce0:	00fd3900 	rscseq	r3, sp, r0, lsl #18
   14ce4:	00fd2d00 	rscseq	r2, sp, r0, lsl #26
   14ce8:	48531f00 	ldmdami	r3, {r8, r9, sl, fp, ip}^
   14cec:	af010000 	svcge	0x00010000
   14cf0:	0001e313 	andeq	lr, r1, r3, lsl r3
   14cf4:	00fd8b00 	rscseq	r8, sp, r0, lsl #22
   14cf8:	00fd8500 	rscseq	r8, sp, r0, lsl #10
   14cfc:	47fc1f00 	ldrbmi	r1, [ip, r0, lsl #30]!
   14d00:	b0010000 	andlt	r0, r1, r0
   14d04:	0001e313 	andeq	lr, r1, r3, lsl r3
   14d08:	00fdbc00 	rscseq	fp, sp, r0, lsl #24
   14d0c:	00fdb400 	rscseq	fp, sp, r0, lsl #8
   14d10:	49161f00 	ldmdbmi	r6, {r8, r9, sl, fp, ip}
   14d14:	b1010000 	mrslt	r0, (UNDEF: 1)
   14d18:	0001e313 	andeq	lr, r1, r3, lsl r3
   14d1c:	00fdf700 	rscseq	pc, sp, r0, lsl #14
   14d20:	00fdf500 	rscseq	pc, sp, r0, lsl #10
   14d24:	44461f00 	strbmi	r1, [r6], #-3840	; 0xfffff100
   14d28:	b2010000 	andlt	r0, r1, #0
   14d2c:	00009f0c 	andeq	r9, r0, ip, lsl #30
   14d30:	00fe1000 	rscseq	r1, lr, r0
   14d34:	00fe0a00 	rscseq	r0, lr, r0, lsl #20
   14d38:	493a1f00 	ldmdbmi	sl!, {r8, r9, sl, fp, ip}
   14d3c:	b3010000 	movwlt	r0, #4096	; 0x1000
   14d40:	0000290c 	andeq	r2, r0, ip, lsl #18
   14d44:	00fe3f00 	rscseq	r3, lr, r0, lsl #30
   14d48:	00fe3b00 	rscseq	r3, lr, r0, lsl #22
   14d4c:	2ea41300 	cdpcs	3, 10, cr1, cr4, cr0, {0}
   14d50:	05d10800 	ldrbeq	r0, [r1, #2048]	; 0x800
   14d54:	c8130000 	ldmdagt	r3, {}	; <UNPREDICTABLE>
   14d58:	5308002e 	movwpl	r0, #32814	; 0x802e
   14d5c:	13000003 	movwne	r0, #3
   14d60:	08002f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp, sp}
   14d64:	000005e0 	andeq	r0, r0, r0, ror #11
   14d68:	01012000 	mrseq	r2, (UNDEF: 1)
   14d6c:	00002b42 	andeq	r2, r0, r2, asr #22
   14d70:	00002b42 	andeq	r2, r0, r2, asr #22
   14d74:	06065b07 	streq	r5, [r6], -r7, lsl #22
   14d78:	c9010120 	stmdbgt	r1, {r5, r8}
   14d7c:	c900002f 	stmdbgt	r0, {r0, r1, r2, r3, r5}
   14d80:	0700002f 	streq	r0, [r0, -pc, lsr #32]
   14d84:	210c0693 			; <UNDEFINED> instruction: 0x210c0693
   14d88:	29f30101 	ldmibcs	r3!, {r0, r8}^
   14d8c:	29f30000 	ldmibcs	r3!, {}^	; <UNPREDICTABLE>
   14d90:	76050000 	strvc	r0, [r5], -r0
   14d94:	0101210d 	tsteq	r1, sp, lsl #2
   14d98:	0000286e 	andeq	r2, r0, lr, ror #16
   14d9c:	0000286e 	andeq	r2, r0, lr, ror #16
   14da0:	220d7705 	andcs	r7, sp, #1310720	; 0x140000
   14da4:	00b70101 	adcseq	r0, r7, r1, lsl #2
   14da8:	00ad0000 	adceq	r0, sp, r0
   14dac:	00080000 	andeq	r0, r8, r0
   14db0:	00052500 	andeq	r2, r5, r0, lsl #10
   14db4:	2a000200 	bcs	155bc <_Min_Heap_Size+0x14dbc>
   14db8:	0400002b 	streq	r0, [r0], #-43	; 0xffffffd5
   14dbc:	00062101 	andeq	r2, r6, r1, lsl #2
   14dc0:	4c320c00 	ldcmi	12, cr0, [r2], #-0
   14dc4:	04e90000 	strbteq	r0, [r9], #0
   14dc8:	0fd80000 	svceq	0x00d80000
	...
   14dd4:	ef680000 	svc	0x00680000
   14dd8:	04020000 	streq	r0, [r2], #-0
   14ddc:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
   14de0:	07040300 	streq	r0, [r4, -r0, lsl #6]
   14de4:	000000c8 	andeq	r0, r0, r8, asr #1
   14de8:	28050803 	stmdacs	r5, {r0, r1, fp}
   14dec:	03000003 	movweq	r0, #3
   14df0:	07580408 	ldrbeq	r0, [r8, -r8, lsl #8]
   14df4:	01030000 	mrseq	r0, (UNDEF: 3)
   14df8:	00060f06 	andeq	r0, r6, r6, lsl #30
   14dfc:	08010300 	stmdaeq	r1, {r8, r9}
   14e00:	0000060d 	andeq	r0, r0, sp, lsl #12
   14e04:	2a050203 	bcs	155618 <_Min_Heap_Size+0x154e18>
   14e08:	03000004 	movweq	r0, #4
   14e0c:	08280702 	stmdaeq	r8!, {r1, r8, r9, sl}
   14e10:	04030000 	streq	r0, [r3], #-0
   14e14:	00032d05 	andeq	r2, r3, r5, lsl #26
   14e18:	02ef0400 	rsceq	r0, pc, #0, 8
   14e1c:	4f030000 	svcmi	0x00030000
   14e20:	00007419 	andeq	r7, r0, r9, lsl r4
   14e24:	07040300 	streq	r0, [r4, -r0, lsl #6]
   14e28:	000000c3 	andeq	r0, r0, r3, asr #1
   14e2c:	be070803 	cdplt	8, 0, cr0, cr7, cr3, {0}
   14e30:	04000000 	streq	r0, [r0], #-0
   14e34:	000002f1 	strdeq	r0, [r0], -r1
   14e38:	68143004 	ldmdavs	r4, {r2, ip, sp}
   14e3c:	05000000 	streq	r0, [r0, #-0]
   14e40:	00000082 	andeq	r0, r0, r2, lsl #1
   14e44:	003a5d04 	eorseq	r5, sl, r4, lsl #26
   14e48:	11240500 			; <UNDEFINED> instruction: 0x11240500
   14e4c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
   14e50:	00a50406 	adceq	r0, r5, r6, lsl #8
   14e54:	01070000 	mrseq	r0, (UNDEF: 7)
   14e58:	000000b1 	strheq	r0, [r0], -r1
   14e5c:	0000b108 	andeq	fp, r0, r8, lsl #2
   14e60:	04090000 	streq	r0, [r9], #-0
   14e64:	00339204 	eorseq	r9, r3, r4, lsl #4
   14e68:	1a3a0200 	bne	e95670 <_Min_Heap_Size+0xe94e70>
   14e6c:	00000082 	andeq	r0, r0, r2, lsl #1
   14e70:	0027fd04 	eoreq	pc, r7, r4, lsl #26
   14e74:	1a3b0200 	bne	ed567c <_Min_Heap_Size+0xed4e7c>
   14e78:	00000061 	andeq	r0, r0, r1, rrx
   14e7c:	0027fc04 	eoreq	pc, r7, r4, lsl #24
   14e80:	1a3c0200 	bne	f15688 <_Min_Heap_Size+0xf14e88>
   14e84:	00000074 	andeq	r0, r0, r4, ror r0
   14e88:	00275804 	eoreq	r5, r7, r4, lsl #16
   14e8c:	1a420200 	bne	1095694 <_Min_Heap_Size+0x1094e94>
   14e90:	00000082 	andeq	r0, r0, r2, lsl #1
   14e94:	16080103 	strne	r0, [r8], -r3, lsl #2
   14e98:	06000006 	streq	r0, [r0], -r6
   14e9c:	0000b304 	andeq	fp, r0, r4, lsl #6
   14ea0:	01070a00 	tsteq	r7, r0, lsl #20
   14ea4:	0000004c 	andeq	r0, r0, ip, asr #32
   14ea8:	1101b606 	tstne	r1, r6, lsl #12
   14eac:	0b000001 	bleq	14eb8 <_Min_Heap_Size+0x146b8>
   14eb0:	00003609 	andeq	r3, r0, r9, lsl #12
   14eb4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
   14eb8:	0b010000 	bleq	54ec0 <_Min_Heap_Size+0x546c0>
   14ebc:	00003e34 	andeq	r3, r0, r4, lsr lr
   14ec0:	fa040002 	blx	114ed0 <_Min_Heap_Size+0x1146d0>
   14ec4:	0100004b 	tsteq	r0, fp, asr #32
   14ec8:	0122122a 			; <UNDEFINED> instruction: 0x0122122a
   14ecc:	110c0000 	mrsne	r0, (UNDEF: 12)
   14ed0:	06000001 	streq	r0, [r0], -r1
   14ed4:	00012804 	andeq	r2, r1, r4, lsl #16
   14ed8:	0e010d00 	cdpeq	13, 0, cr0, cr1, cr0, {0}
   14edc:	00004b9e 	muleq	r0, lr, fp
   14ee0:	cb14a101 	blgt	53d2ec <_Min_Heap_Size+0x53caec>
   14ee4:	05000000 	streq	r0, [r0, #-0]
   14ee8:	00001003 	andeq	r1, r0, r3
   14eec:	4bd40e20 	blmi	ff518774 <_estack+0xdf50edd4>
   14ef0:	a7010000 	strge	r0, [r1, -r0]
   14ef4:	00008215 	andeq	r8, r0, r5, lsl r2
   14ef8:	80030500 	andhi	r0, r3, r0, lsl #10
   14efc:	0e200089 	cdpeq	0, 2, cr0, cr0, cr9, {4}
   14f00:	00004b0a 	andeq	r4, r0, sl, lsl #22
   14f04:	8215af01 	andshi	sl, r5, #1, 30
   14f08:	05000000 	streq	r0, [r0, #-0]
   14f0c:	00898403 	addeq	r8, r9, r3, lsl #8
   14f10:	4b570e20 	blmi	15d8798 <_Min_Heap_Size+0x15d7f98>
   14f14:	b7010000 	strlt	r0, [r1, -r0]
   14f18:	00008215 	andeq	r8, r0, r5, lsl r2
   14f1c:	7c030500 	cfstr32vc	mvfx0, [r3], {-0}
   14f20:	0f200089 	svceq	0x00200089
   14f24:	00004ae2 	andeq	r4, r0, r2, ror #21
   14f28:	0d034401 	cfstrseq	mvf4, [r3, #-4]
   14f2c:	002fe801 	eoreq	lr, pc, r1, lsl #16
   14f30:	002ffc08 	eoreq	pc, pc, r8, lsl #24
   14f34:	007d0208 	rsbseq	r0, sp, r8, lsl #4
   14f38:	3e011001 	cdpcc	0, 0, cr1, cr1, cr1, {0}
   14f3c:	0100004b 	tsteq	r0, fp, asr #32
   14f40:	0120032e 			; <UNDEFINED> instruction: 0x0120032e
   14f44:	08003234 	stmdaeq	r0, {r2, r4, r5, r9, ip, sp}
   14f48:	08003270 	stmdaeq	r0, {r4, r5, r6, r9, ip, sp}
   14f4c:	01007d02 	tsteq	r0, r2, lsl #26
   14f50:	3ee60111 	mcrcc	1, 7, r0, cr6, cr1, {0}
   14f54:	4f010000 	svcmi	0x00010000
   14f58:	20012402 	andcs	r2, r1, r2, lsl #8
   14f5c:	34080031 	strcc	r0, [r8], #-49	; 0xffffffcf
   14f60:	5d080032 	stcpl	0, cr0, [r8, #-200]	; 0xffffff38
   14f64:	010000fe 	strdeq	r0, [r0, -lr]
   14f68:	0000026f 	andeq	r0, r0, pc, ror #4
   14f6c:	0033fe12 	eorseq	pc, r3, r2, lsl lr	; <UNPREDICTABLE>
   14f70:	024f0100 	subeq	r0, pc, #0, 2
   14f74:	0000d74b 	andeq	sp, r0, fp, asr #14
   14f78:	00fe8700 	rscseq	r8, lr, r0, lsl #14
   14f7c:	00fe7d00 	rscseq	r7, lr, r0, lsl #26
   14f80:	4ad41300 	bmi	ff519b88 <_estack+0xdf5101e8>
   14f84:	51010000 	mrspl	r0, (UNDEF: 1)
   14f88:	00821202 	addeq	r1, r2, r2, lsl #4
   14f8c:	fecc0000 	cdp2	0, 12, cr0, cr12, cr0, {0}
   14f90:	fec80000 	cdp2	0, 12, cr0, cr8, cr0, {0}
   14f94:	72130000 	andsvc	r0, r3, #0
   14f98:	0100004b 	tsteq	r0, fp, asr #32
   14f9c:	82210251 	eorhi	r0, r1, #268435461	; 0x10000005
   14fa0:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
   14fa4:	ea0000fe 	b	153a4 <_Min_Heap_Size+0x14ba4>
   14fa8:	130000fe 	movwne	r0, #254	; 0xfe
   14fac:	00004bb7 			; <UNDEFINED> instruction: 0x00004bb7
   14fb0:	38025101 	stmdacc	r2, {r0, r8, ip, lr}
   14fb4:	00000082 	andeq	r0, r0, r2, lsl #1
   14fb8:	0000ff10 	andeq	pc, r0, r0, lsl pc	; <UNPREDICTABLE>
   14fbc:	0000ff0c 	andeq	pc, r0, ip, lsl #30
   14fc0:	004c1a13 	subeq	r1, ip, r3, lsl sl
   14fc4:	02510100 	subseq	r0, r1, #0, 2
   14fc8:	00008256 	andeq	r8, r0, r6, asr r2
   14fcc:	00ff3900 	rscseq	r3, pc, r0, lsl #18
   14fd0:	00ff3300 	rscseq	r3, pc, r0, lsl #6
   14fd4:	4b2a1300 	blmi	a99bdc <_Min_Heap_Size+0xa993dc>
   14fd8:	52010000 	andpl	r0, r1, #0
   14fdc:	00d71402 	sbcseq	r1, r7, r2, lsl #8
   14fe0:	ff680000 			; <UNDEFINED> instruction: 0xff680000
   14fe4:	ff620000 			; <UNDEFINED> instruction: 0xff620000
   14fe8:	c6140000 	ldrgt	r0, [r4], -r0
   14fec:	ea080031 	b	2150b8 <_Min_Heap_Size+0x2148b8>
   14ff0:	5c080031 	stcpl	0, cr0, [r8], {49}	; 0x31
   14ff4:	13000002 	movwne	r0, #2
   14ff8:	00004b88 	andeq	r4, r0, r8, lsl #23
   14ffc:	1a02c501 	bne	c6408 <_Min_Heap_Size+0xc5c08>
   15000:	00000082 	andeq	r0, r0, r2, lsl #1
   15004:	0000ff95 	muleq	r0, r5, pc	; <UNPREDICTABLE>
   15008:	0000ff93 	muleq	r0, r3, pc	; <UNPREDICTABLE>
   1500c:	313a1500 	teqcc	sl, r0, lsl #10
   15010:	04ec0800 	strbteq	r0, [ip], #2048	; 0x800
   15014:	02150000 	andseq	r0, r5, #0
   15018:	fb080032 	blx	2150ea <_Min_Heap_Size+0x2148ea>
   1501c:	00000004 	andeq	r0, r0, r4
   15020:	09dc0111 	ldmibeq	ip, {r0, r4, r8}^
   15024:	32010000 	andcc	r0, r1, #0
   15028:	f4010602 	vst1.8	{d0-d2}, [r1], r2
   1502c:	20080030 	andcs	r0, r8, r0, lsr r0
   15030:	a8080031 	stmdage	r8, {r0, r4, r5}
   15034:	010000ff 	strdeq	r0, [r0, -pc]
   15038:	000002dd 	ldrdeq	r0, [r0], -sp
   1503c:	0004d116 	andeq	sp, r4, r6, lsl r1
   15040:	0030f600 	eorseq	pc, r0, r0, lsl #12
   15044:	30f60108 	rscscc	r0, r6, r8, lsl #2
   15048:	31060800 	tstcc	r6, r0, lsl #16
   1504c:	38010800 	stmdacc	r1, {fp}
   15050:	02ab0502 	adceq	r0, fp, #8388608	; 0x800000
   15054:	df170000 	svcle	0x00170000
   15058:	00000004 	andeq	r0, r0, r4
   1505c:	0004b616 	andeq	fp, r4, r6, lsl r6
   15060:	00311800 	eorseq	r1, r1, r0, lsl #16
   15064:	31180208 	tstcc	r8, r8, lsl #4
   15068:	311e0800 	tstcc	lr, r0, lsl #16
   1506c:	49010800 	stmdbmi	r1, {fp}
   15070:	02d30502 	sbcseq	r0, r3, #8388608	; 0x800000
   15074:	c4180000 	ldrgt	r0, [r8], #-0
   15078:	ca000004 	bgt	15090 <_Min_Heap_Size+0x14890>
   1507c:	c80000ff 	stmdagt	r0, {r0, r1, r2, r3, r4, r5, r6, r7}
   15080:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   15084:	00310a15 	eorseq	r0, r1, r5, lsl sl
   15088:	00050a08 	andeq	r0, r5, r8, lsl #20
   1508c:	01100000 	tsteq	r0, r0
   15090:	00000a26 	andeq	r0, r0, r6, lsr #20
   15094:	0601f901 	streq	pc, [r1], -r1, lsl #18
   15098:	00309001 	eorseq	r9, r0, r1
   1509c:	0030f408 	eorseq	pc, r0, r8, lsl #8
   150a0:	007d0208 	rsbseq	r0, sp, r8, lsl #4
   150a4:	6e011901 	vmlavs.f16	s2, s2, s2	; <UNPREDICTABLE>
   150a8:	01000028 	tsteq	r0, r8, lsr #32
   150ac:	010601ed 	smlatteq	r6, sp, r1, r0
   150b0:	08003074 	stmdaeq	r0, {r2, r4, r5, r6, ip, sp}
   150b4:	08003088 	stmdaeq	r0, {r3, r7, ip, sp}
   150b8:	01007d02 	tsteq	r0, r2, lsl #26
   150bc:	00000334 	andeq	r0, r0, r4, lsr r3
   150c0:	0004b61a 	andeq	fp, r4, sl, lsl r6
   150c4:	00307e00 	eorseq	r7, r0, r0, lsl #28
   150c8:	307e0108 	rsbscc	r0, lr, r8, lsl #2
   150cc:	30820800 	addcc	r0, r2, r0, lsl #16
   150d0:	f4010800 	vst2.8	{d0-d1}, [r1], r0
   150d4:	c4180901 	ldrgt	r0, [r8], #-2305	; 0xfffff6ff
   150d8:	e0000004 	and	r0, r0, r4
   150dc:	de0000ff 	mcrle	0, 0, r0, cr0, cr15, {7}
   150e0:	000000ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   150e4:	f3011900 	vmls.i8	d1, d1, d0
   150e8:	01000029 	tsteq	r0, r9, lsr #32
   150ec:	010601dc 	ldrdeq	r0, [r6, -ip]
   150f0:	08003054 	stmdaeq	r0, {r2, r4, r6, ip, sp}
   150f4:	08003074 	stmdaeq	r0, {r2, r4, r5, r6, ip, sp}
   150f8:	01007d02 	tsteq	r0, r2, lsl #26
   150fc:	0000036c 	andeq	r0, r0, ip, ror #6
   15100:	0004d11a 	andeq	sp, r4, sl, lsl r1
   15104:	00305400 	eorseq	r5, r0, r0, lsl #8
   15108:	30540208 	subscc	r0, r4, r8, lsl #4
   1510c:	30640800 	rsbcc	r0, r4, r0, lsl #16
   15110:	de010800 	cdple	8, 0, cr0, cr1, cr0, {0}
   15114:	df170501 	svcle	0x00170501
   15118:	00000004 	andeq	r0, r0, r4
   1511c:	62011000 	andvs	r1, r1, #0
   15120:	0100003d 	tsteq	r0, sp, lsr r0
   15124:	010601d4 	ldrdeq	r0, [r6, -r4]
	...
   15130:	01007d02 	tsteq	r0, r2, lsl #26
   15134:	32a8011b 	adccc	r0, r8, #-1073741818	; 0xc0000006
   15138:	32010000 	andcc	r0, r1, #0
   1513c:	bf010c01 	svclt	0x00010c01
   15140:	70000000 	andvc	r0, r0, r0
   15144:	c0080032 	andgt	r0, r8, r2, lsr r0
   15148:	f4080032 	vst4.8	{d0-d3}, [r8 :256], r2
   1514c:	010000ff 	strdeq	r0, [r0, -pc]
   15150:	000003e4 	andeq	r0, r0, r4, ror #7
   15154:	0003b61c 	andeq	fp, r3, ip, lsl r6
   15158:	4bec1d00 	blmi	ffb1c560 <_estack+0xdfb12bc0>
   1515c:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
   15160:	03ea2101 	mvneq	r2, #1073741824	; 0x40000000
   15164:	15000000 	strne	r0, [r0, #-0]
   15168:	08003298 	stmdaeq	r0, {r3, r4, r7, r9, ip, sp}
   1516c:	00000188 	andeq	r0, r0, r8, lsl #3
   15170:	0032a015 	eorseq	sl, r2, r5, lsl r0
   15174:	00017208 	andeq	r7, r1, r8, lsl #4
   15178:	32b01500 	adcscc	r1, r0, #0, 10
   1517c:	03ef0800 	mvneq	r0, #0, 16
   15180:	b4150000 	ldrlt	r0, [r5], #-0
   15184:	19080032 	stmdbne	r8, {r1, r4, r5}
   15188:	15000005 	strne	r0, [r0, #-5]
   1518c:	080032b8 	stmdaeq	r0, {r3, r4, r5, r7, r9, ip, sp}
   15190:	0000041c 	andeq	r0, r0, ip, lsl r4
   15194:	1d040600 	stcne	6, cr0, [r4, #-0]
   15198:	0c000001 	stceq	0, cr0, [r0], {1}
   1519c:	000003e4 	andeq	r0, r0, r4, ror #7
   151a0:	004c040f 	subeq	r0, ip, pc, lsl #8
   151a4:	01170100 	tsteq	r7, r0, lsl #2
   151a8:	2fc0010d 	svccs	0x00c0010d
   151ac:	2fe80800 	svccs	0x00e80800
   151b0:	7d020800 	stcvc	8, cr0, [r2, #-0]
   151b4:	01100100 	tsteq	r0, r0, lsl #2
   151b8:	00000ae0 	andeq	r0, r0, r0, ror #21
   151bc:	06010401 	streq	r0, [r1], -r1, lsl #8
   151c0:	00303001 	eorseq	r3, r0, r1
   151c4:	00305408 	eorseq	r5, r0, r8, lsl #8
   151c8:	007d0208 	rsbseq	r0, sp, r8, lsl #4
   151cc:	4af11e01 	bmi	ffc5c9d8 <_estack+0xdfc53038>
   151d0:	ea010000 	b	551d8 <_Min_Heap_Size+0x549d8>
   151d4:	2fa0010d 	svccs	0x00a0010d
   151d8:	2fc00800 	svccs	0x00c00800
   151dc:	00140800 	andseq	r0, r4, r0, lsl #16
   151e0:	61010001 	tstvs	r1, r1
   151e4:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
   151e8:	00004b02 	andeq	r4, r0, r2, lsl #22
   151ec:	8e17ec01 	cdphi	12, 1, cr14, cr7, cr1, {0}
   151f0:	02000000 	andeq	r0, r0, #0
   151f4:	d11f7c91 			; <UNDEFINED> instruction: 0xd11f7c91
   151f8:	a6000004 	strge	r0, [r0], -r4
   151fc:	0208002f 	andeq	r0, r8, #47	; 0x2f
   15200:	08002fa6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl, fp, sp}
   15204:	08002fb6 	stmdaeq	r0, {r1, r2, r4, r5, r7, r8, r9, sl, fp, sp}
   15208:	1705f501 	strne	pc, [r5, -r1, lsl #10]
   1520c:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   15210:	01200000 			; <UNDEFINED> instruction: 0x01200000
   15214:	000039bf 			; <UNDEFINED> instruction: 0x000039bf
   15218:	010fca01 	tsteq	pc, r1, lsl #20
   1521c:	000000ea 	andeq	r0, r0, sl, ror #1
   15220:	08002ffc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
   15224:	08003028 	stmdaeq	r0, {r3, r5, ip, sp}
   15228:	01007d02 	tsteq	r0, r2, lsl #26
   1522c:	000004b6 			; <UNDEFINED> instruction: 0x000004b6
   15230:	00415921 	subeq	r5, r1, r1, lsr #18
   15234:	34ca0100 	strbcc	r0, [sl], #256	; 0x100
   15238:	000000ea 	andeq	r0, r0, sl, ror #1
   1523c:	00010050 	andeq	r0, r1, r0, asr r0
   15240:	00010040 	andeq	r0, r1, r0, asr #32
   15244:	004bb021 	subeq	fp, fp, r1, lsr #32
   15248:	35cb0100 	strbcc	r0, [fp, #256]	; 0x100
   1524c:	00000093 	muleq	r0, r3, r0
   15250:	000100c1 	andeq	r0, r1, r1, asr #1
   15254:	000100bd 	strheq	r0, [r1], -sp
   15258:	003ca922 	eorseq	sl, ip, r2, lsr #18
   1525c:	2dcc0100 	stfcse	f0, [ip]
   15260:	000000b1 	strheq	r0, [r0], -r1
   15264:	23005201 	movwcs	r5, #513	; 0x201
   15268:	00002bcf 	andeq	r2, r0, pc, asr #23
   1526c:	011ef902 	tsteq	lr, r2, lsl #18	; <UNPREDICTABLE>
   15270:	0004d103 	andeq	sp, r4, r3, lsl #2
   15274:	2ec82400 	cdpcs	4, 12, cr2, cr8, cr0, {0}
   15278:	f9020000 			; <UNDEFINED> instruction: 0xf9020000
   1527c:	00008238 	andeq	r8, r0, r8, lsr r2
   15280:	1a230000 	bne	8d5288 <_Min_Heap_Size+0x8d4a88>
   15284:	0200003e 	andeq	r0, r0, #62	; 0x3e
   15288:	03011ed5 	movweq	r1, #7893	; 0x1ed5
   1528c:	000004ec 	andeq	r0, r0, ip, ror #9
   15290:	002d2c25 	eoreq	r2, sp, r5, lsr #24
   15294:	0ed70200 	cdpeq	2, 13, cr0, cr7, cr0, {0}
   15298:	00000082 	andeq	r0, r0, r2, lsl #1
   1529c:	01012600 	tsteq	r1, r0, lsl #12
   152a0:	0000381b 	andeq	r3, r0, fp, lsl r8
   152a4:	0000381b 	andeq	r3, r0, fp, lsl r8
   152a8:	160e5806 	strne	r5, [lr], -r6, lsl #16
   152ac:	1f010126 	svcne	0x00010126
   152b0:	1f000037 	svcne	0x00000037
   152b4:	06000037 			; <UNDEFINED> instruction: 0x06000037
   152b8:	260a0e46 	strcs	r0, [sl], -r6, asr #28
   152bc:	370c0101 	strcc	r0, [ip, -r1, lsl #2]
   152c0:	370c0000 	strcc	r0, [ip, -r0]
   152c4:	9a060000 	bls	1952cc <_Min_Heap_Size+0x194acc>
   152c8:	01260c0d 			; <UNDEFINED> instruction: 0x01260c0d
   152cc:	003c0501 	eorseq	r0, ip, r1, lsl #10
   152d0:	003c0500 	eorseq	r0, ip, r0, lsl #10
   152d4:	0df50600 	ldcleq	6, cr0, [r5]
   152d8:	0181001b 	orreq	r0, r1, fp, lsl r0
   152dc:	00020000 	andeq	r0, r2, r0
   152e0:	00002d9c 	muleq	r0, ip, sp
   152e4:	06210104 	strteq	r0, [r1], -r4, lsl #2
   152e8:	8a0c0000 	bhi	3152f0 <_Min_Heap_Size+0x314af0>
   152ec:	e900004c 	stmdb	r0, {r2, r3, r6}
   152f0:	48000004 	stmdami	r0, {r2}
   152f4:	00000010 	andeq	r0, r0, r0, lsl r0
   152f8:	00000000 	andeq	r0, r0, r0
   152fc:	b9000000 	stmdblt	r0, {}	; <UNPREDICTABLE>
   15300:	020000f4 	andeq	r0, r0, #244	; 0xf4
   15304:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
   15308:	80030074 	andhi	r0, r3, r4, ror r0
   1530c:	0200004c 	andeq	r0, r0, #76	; 0x4c
   15310:	00291a8f 	eoreq	r1, r9, pc, lsl #21
   15314:	04040000 	streq	r0, [r4], #-0
   15318:	0000c807 	andeq	ip, r0, r7, lsl #16
   1531c:	05080400 	streq	r0, [r8, #-1024]	; 0xfffffc00
   15320:	00000328 	andeq	r0, r0, r8, lsr #6
   15324:	58040804 	stmdapl	r4, {r2, fp}
   15328:	04000007 	streq	r0, [r0], #-7
   1532c:	060f0601 	streq	r0, [pc], -r1, lsl #12
   15330:	76030000 	strvc	r0, [r3], -r0
   15334:	03000000 	movweq	r0, #0
   15338:	0064182b 	rsbeq	r1, r4, fp, lsr #16
   1533c:	01040000 	mrseq	r0, (UNDEF: 4)
   15340:	00060d08 	andeq	r0, r6, r8, lsl #26
   15344:	05020400 	streq	r0, [r2, #-1024]	; 0xfffffc00
   15348:	0000042a 	andeq	r0, r0, sl, lsr #8
   1534c:	28070204 	stmdacs	r7, {r2, r9}
   15350:	04000008 	streq	r0, [r0], #-8
   15354:	032d0504 			; <UNDEFINED> instruction: 0x032d0504
   15358:	ef030000 	svc	0x00030000
   1535c:	03000002 	movweq	r0, #2
   15360:	008c194f 	addeq	r1, ip, pc, asr #18
   15364:	04040000 	streq	r0, [r4], #-0
   15368:	0000c307 	andeq	ip, r0, r7, lsl #6
   1536c:	07080400 	streq	r0, [r8, -r0, lsl #8]
   15370:	000000be 	strheq	r0, [r0], -lr
   15374:	01040405 	tsteq	r4, r5, lsl #8
   15378:	00061608 	andeq	r1, r6, r8, lsl #12
   1537c:	00780300 	rsbseq	r0, r8, r0, lsl #6
   15380:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
   15384:	00005813 	andeq	r5, r0, r3, lsl r8
   15388:	00a30600 	adceq	r0, r3, r0, lsl #12
   1538c:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
   15390:	04000002 	streq	r0, [r0], #-2
   15394:	00801430 	addeq	r1, r0, r0, lsr r4
   15398:	b4060000 	strlt	r0, [r6], #-0
   1539c:	07000000 	streq	r0, [r0, -r0]
   153a0:	00004cb6 			; <UNDEFINED> instruction: 0x00004cb6
   153a4:	d7111e01 	ldrle	r1, [r1, -r1, lsl #28]
   153a8:	05000000 	streq	r0, [r0, #-0]
   153ac:	00898803 	addeq	r8, r9, r3, lsl #16
   153b0:	a3040820 	movwge	r0, #18464	; 0x4820
   153b4:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
   153b8:	004cce01 	subeq	ip, ip, r1, lsl #28
   153bc:	07350100 	ldreq	r0, [r5, -r0, lsl #2]!
   153c0:	00009a01 	andeq	r9, r0, r1, lsl #20
   153c4:	0032c000 	eorseq	ip, r2, r0
   153c8:	00330808 	eorseq	r0, r3, r8, lsl #16
   153cc:	0100e208 	tsteq	r0, r8, lsl #4
   153d0:	01700100 	cmneq	r0, r0, lsl #2
   153d4:	b10a0000 	mrslt	r0, (UNDEF: 10)
   153d8:	0100004c 	tsteq	r0, ip, asr #32
   153dc:	00301735 	eorseq	r1, r0, r5, lsr r7
   153e0:	010c0000 	mrseq	r0, (UNDEF: 12)
   153e4:	01020001 	tsteq	r2, r1
   153e8:	c10b0001 	tstgt	fp, r1
   153ec:	0100004c 	tsteq	r0, ip, asr #32
   153f0:	00a31237 	adceq	r1, r3, r7, lsr r2
   153f4:	01010000 	mrseq	r0, (UNDEF: 1)
   153f8:	0025bc0b 	eoreq	fp, r5, fp, lsl #24
   153fc:	12380100 	eorsne	r0, r8, #0, 2
   15400:	000000a3 	andeq	r0, r0, r3, lsr #1
   15404:	a10b0101 	tstge	fp, r1, lsl #2
   15408:	0100004c 	tsteq	r0, ip, asr #32
   1540c:	00b41339 	adcseq	r1, r4, r9, lsr r3
   15410:	01010000 	mrseq	r0, (UNDEF: 1)
   15414:	004cd40c 	subeq	sp, ip, ip, lsl #8
   15418:	123a0100 	eorsne	r0, sl, #0, 2
   1541c:	000000c0 	andeq	r0, r0, r0, asr #1
   15420:	004c770c 	subeq	r7, ip, ip, lsl #14
   15424:	123b0100 	eorsne	r0, fp, #0, 2
   15428:	00000170 	andeq	r0, r0, r0, ror r1
   1542c:	004c690d 	subeq	r6, ip, sp, lsl #18
   15430:	0c3c0100 	ldfeqs	f0, [ip], #-0
   15434:	000000d7 	ldrdeq	r0, [r0], -r7
   15438:	00010153 	andeq	r0, r1, r3, asr r1
   1543c:	00010151 	andeq	r0, r1, r1, asr r1
   15440:	0032ec0e 	eorseq	lr, r2, lr, lsl #24
   15444:	00017608 	andeq	r7, r1, r8, lsl #12
   15448:	04080000 	streq	r0, [r8], #-0
   1544c:	000000af 	andeq	r0, r0, pc, lsr #1
   15450:	c601010f 	strgt	r0, [r1], -pc, lsl #2
   15454:	c600004c 	strgt	r0, [r0], -ip, asr #32
   15458:	0500004c 	streq	r0, [r0, #-76]	; 0xffffffb4
   1545c:	31000d0f 	tstcc	r0, pc, lsl #26
   15460:	02000008 	andeq	r0, r0, #8
   15464:	002e8600 	eoreq	r8, lr, r0, lsl #12
   15468:	21010400 	tstcs	r1, r0, lsl #8
   1546c:	0c000006 	stceq	0, cr0, [r0], {6}
   15470:	00004d9b 	muleq	r0, fp, sp
   15474:	000004e9 	andeq	r0, r0, r9, ror #9
   15478:	00001058 	andeq	r1, r0, r8, asr r0
	...
   15484:	0000f653 	andeq	pc, r0, r3, asr r6	; <UNPREDICTABLE>
   15488:	0f060102 	svceq	0x00060102
   1548c:	02000006 	andeq	r0, r0, #6
   15490:	060d0801 	streq	r0, [sp], -r1, lsl #16
   15494:	02020000 	andeq	r0, r2, #0
   15498:	00042a05 	andeq	r2, r4, r5, lsl #20
   1549c:	07020200 	streq	r0, [r2, -r0, lsl #4]
   154a0:	00000828 	andeq	r0, r0, r8, lsr #16
   154a4:	2d050402 	cfstrscs	mvf0, [r5, #-8]
   154a8:	03000003 	movweq	r0, #3
   154ac:	000002ef 	andeq	r0, r0, pc, ror #5
   154b0:	58194f02 	ldmdapl	r9, {r1, r8, r9, sl, fp, lr}
   154b4:	02000000 	andeq	r0, r0, #0
   154b8:	00c30704 	sbceq	r0, r3, r4, lsl #14
   154bc:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
   154c0:	00032805 	andeq	r2, r3, r5, lsl #16
   154c4:	07080200 	streq	r0, [r8, -r0, lsl #4]
   154c8:	000000be 	strheq	r0, [r0], -lr
   154cc:	004d5503 	subeq	r5, sp, r3, lsl #10
   154d0:	1ec80200 	cdpne	2, 12, cr0, cr8, cr0, {0}
   154d4:	0000005f 	andeq	r0, r0, pc, asr r0
   154d8:	69050404 	stmdbvs	r5, {r2, sl}
   154dc:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
   154e0:	00c80704 	sbceq	r0, r8, r4, lsl #14
   154e4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
   154e8:	00075804 	andeq	r5, r7, r4, lsl #16
   154ec:	4ecd0300 	cdpmi	3, 12, cr0, cr13, cr0, {0}
   154f0:	1e030000 	cdpne	0, 0, cr0, cr3, cr0, {0}
   154f4:	0000450e 	andeq	r4, r0, lr, lsl #10
   154f8:	4e110300 	cdpmi	3, 1, cr0, cr1, cr0, {0}
   154fc:	22030000 	andcs	r0, r3, #0
   15500:	0000450e 	andeq	r4, r0, lr, lsl #10
   15504:	4e960300 	cdpmi	3, 9, cr0, cr6, cr0, {0}
   15508:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
   1550c:	0000450e 	andeq	r4, r0, lr, lsl #10
   15510:	4e8d0300 	cdpmi	3, 8, cr0, cr13, cr0, {0}
   15514:	38030000 	stmdacc	r3, {}	; <UNPREDICTABLE>
   15518:	0000370f 	andeq	r3, r0, pc, lsl #14
   1551c:	4eab0300 	cdpmi	3, 10, cr0, cr11, cr0, {0}
   15520:	3c030000 	stccc	0, cr0, [r3], {-0}
   15524:	00003e18 	andeq	r3, r0, r8, lsl lr
   15528:	4ed80300 	cdpmi	3, 13, cr0, cr8, cr0, {0}
   1552c:	3f030000 	svccc	0x00030000
   15530:	00003e18 	andeq	r3, r0, r8, lsl lr
   15534:	4e4c0300 	cdpmi	3, 4, cr0, cr12, cr0, {0}
   15538:	4b030000 	blmi	d5540 <_Min_Heap_Size+0xd4d40>
   1553c:	00003e18 	andeq	r3, r0, r8, lsl lr
   15540:	4d920300 	ldcmi	3, cr0, [r2]
   15544:	5a030000 	bpl	d554c <_Min_Heap_Size+0xd4d4c>
   15548:	00004c14 	andeq	r4, r0, r4, lsl ip
   1554c:	4e950300 	cdpmi	3, 9, cr0, cr5, cr0, {0}
   15550:	66030000 	strvs	r0, [r3], -r0
   15554:	0000a610 	andeq	sl, r0, r0, lsl r6
   15558:	4dc60300 	stclmi	3, cr0, [r6]
   1555c:	d1030000 	mrsle	r0, (UNDEF: 3)
   15560:	00003e18 	andeq	r3, r0, r8, lsl lr
   15564:	0c040500 	cfstr32eq	mvfx0, [r4], {-0}
   15568:	02000001 	andeq	r0, r0, #1
   1556c:	06160801 	ldreq	r0, [r6], -r1, lsl #16
   15570:	4e030000 	cdpmi	0, 0, cr0, cr3, cr0, {0}
   15574:	0400004d 	streq	r0, [r0], #-77	; 0xffffffb3
   15578:	006d122a 	rsbeq	r1, sp, sl, lsr #4
   1557c:	a2060000 	andge	r0, r6, #0
   15580:	1000004e 	andne	r0, r0, lr, asr #32
   15584:	4b082f05 	blmi	2211a0 <_Min_Heap_Size+0x2209a0>
   15588:	07000001 	streq	r0, [r0, -r1]
   1558c:	00004d12 	andeq	r4, r0, r2, lsl sp
   15590:	13093005 	movwne	r3, #36869	; 0x9005
   15594:	02000001 	andeq	r0, r0, #1
   15598:	f5070023 			; <UNDEFINED> instruction: 0xf5070023
   1559c:	0500004d 	streq	r0, [r0, #-77]	; 0xffffffb3
   155a0:	00450731 	subeq	r0, r5, r1, lsr r7
   155a4:	23020000 	movwcs	r0, #8192	; 0x2000
   155a8:	cf030008 	svcgt	0x00030008
   155ac:	0600004e 	streq	r0, [r0], -lr, asr #32
   155b0:	008e1461 	addeq	r1, lr, r1, ror #8
   155b4:	13030000 	movwne	r0, #12288	; 0x3000
   155b8:	0600004e 	streq	r0, [r0], -lr, asr #32
   155bc:	009a1566 	addseq	r1, sl, r6, ror #10
   155c0:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
   155c4:	0600004c 	streq	r0, [r0], -ip, asr #32
   155c8:	0058136b 	subseq	r1, r8, fp, ror #6
   155cc:	4e030000 	cdpmi	0, 0, cr0, cr3, cr0, {0}
   155d0:	0600004e 	streq	r0, [r0], -lr, asr #32
   155d4:	00d6128b 	sbcseq	r1, r6, fp, lsl #5
   155d8:	97030000 	strls	r0, [r3, -r0]
   155dc:	0600004e 	streq	r0, [r0], -lr, asr #32
   155e0:	00ee129d 	smlaleq	r1, lr, sp, r2
   155e4:	8f030000 	svchi	0x00030000
   155e8:	0600004e 	streq	r0, [r0], -lr, asr #32
   155ec:	00b212a1 	adcseq	r1, r2, r1, lsr #5
   155f0:	ad030000 	stcge	0, cr0, [r3, #-0]
   155f4:	0600004e 	streq	r0, [r0], -lr, asr #32
   155f8:	00be12a5 	adcseq	r1, lr, r5, lsr #5
   155fc:	da030000 	ble	d5604 <_Min_Heap_Size+0xd4e04>
   15600:	0600004e 	streq	r0, [r0], -lr, asr #32
   15604:	00ca12a9 	sbceq	r1, sl, r9, lsr #5
   15608:	94030000 	strls	r0, [r3], #-0
   1560c:	0600004d 	streq	r0, [r0], -sp, asr #32
   15610:	00e212bd 	strhteq	r1, [r2], #45	; 0x2d
   15614:	c8030000 	stmdagt	r3, {}	; <UNPREDICTABLE>
   15618:	0600004d 	streq	r0, [r0], -sp, asr #32
   1561c:	00fa13c2 	rscseq	r1, sl, r2, asr #7
   15620:	1a060000 	bne	195628 <_Min_Heap_Size+0x194e28>
   15624:	5800004d 	stmdapl	r0, {r0, r2, r3, r6}
   15628:	a3081b07 	movwge	r1, #35591	; 0x8b07
   1562c:	07000002 	streq	r0, [r0, -r2]
   15630:	00004d3a 	andeq	r4, r0, sl, lsr sp
   15634:	870a1d07 	strhi	r1, [sl, -r7, lsl #26]
   15638:	02000001 	andeq	r0, r0, #1
   1563c:	db070023 	blle	1d56d0 <_Min_Heap_Size+0x1d4ed0>
   15640:	0700004d 	streq	r0, [r0, -sp, asr #32]
   15644:	016f0a1e 	cmneq	pc, lr, lsl sl	; <UNPREDICTABLE>
   15648:	23020000 	movwcs	r0, #8192	; 0x2000
   1564c:	4eb30702 	cdpmi	7, 11, cr0, cr3, cr2, {0}
   15650:	1f070000 	svcne	0x00070000
   15654:	0001ab0a 	andeq	sl, r1, sl, lsl #22
   15658:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
   1565c:	004dfd07 	subeq	pc, sp, r7, lsl #26
   15660:	0b200700 	bleq	817268 <_Min_Heap_Size+0x816a68>
   15664:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
   15668:	07082302 	streq	r2, [r8, -r2, lsl #6]
   1566c:	00004e5e 	andeq	r4, r0, lr, asr lr
   15670:	930a2107 	movwls	r2, #41223	; 0xa107
   15674:	02000001 	andeq	r0, r0, #1
   15678:	8b070a23 	blhi	1d7f0c <_Min_Heap_Size+0x1d770c>
   1567c:	0700004d 	streq	r0, [r0, -sp, asr #32]
   15680:	019f0a22 	orrseq	r0, pc, r2, lsr #20
   15684:	23020000 	movwcs	r0, #8192	; 0x2000
   15688:	4ce0070c 	stclmi	7, cr0, [r0], #48	; 0x30
   1568c:	23070000 	movwcs	r0, #28672	; 0x7000
   15690:	0001870a 	andeq	r8, r1, sl, lsl #14
   15694:	0e230200 	cdpeq	2, 2, cr0, cr3, cr0, {0}
   15698:	004e6507 	subeq	r6, lr, r7, lsl #10
   1569c:	0a240700 	beq	9172a4 <_Min_Heap_Size+0x916aa4>
   156a0:	0000017b 	andeq	r0, r0, fp, ror r1
   156a4:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
   156a8:	00004e1d 	andeq	r4, r0, sp, lsl lr
   156ac:	1f132a07 	svcne	0x00132a07
   156b0:	02000001 	andeq	r0, r0, #1
   156b4:	44071823 	strmi	r1, [r7], #-2083	; 0xfffff7dd
   156b8:	0700004e 	streq	r0, [r0, -lr, asr #32]
   156bc:	011f132b 	tsteq	pc, fp, lsr #6
   156c0:	23020000 	movwcs	r0, #8192	; 0x2000
   156c4:	4d1f0728 	ldcmi	7, cr0, [pc, #-160]	; 1562c <_Min_Heap_Size+0x14e2c>
   156c8:	2c070000 	stccs	0, cr0, [r7], {-0}
   156cc:	00011f13 	andeq	r1, r1, r3, lsl pc
   156d0:	38230200 	stmdacc	r3!, {r9}
   156d4:	004d6507 	subeq	r6, sp, r7, lsl #10
   156d8:	112d0700 			; <UNDEFINED> instruction: 0x112d0700
   156dc:	00000157 	andeq	r0, r0, r7, asr r1
   156e0:	07482302 	strbeq	r2, [r8, -r2, lsl #6]
   156e4:	00004e32 	andeq	r4, r0, r2, lsr lr
   156e8:	4b0c2e07 	blmi	320f0c <_Min_Heap_Size+0x32070c>
   156ec:	02000001 	andeq	r0, r0, #1
   156f0:	6d074c23 	stcvs	12, cr4, [r7, #-140]	; 0xffffff74
   156f4:	0700004e 	streq	r0, [r0, -lr, asr #32]
   156f8:	02a30930 	adceq	r0, r3, #48, 18	; 0xc0000
   156fc:	23020000 	movwcs	r0, #8192	; 0x2000
   15700:	45080050 	strmi	r0, [r8, #-80]	; 0xffffffb0
   15704:	b3000000 	movwlt	r0, #0
   15708:	09000002 	stmdbeq	r0, {r1}
   1570c:	00000080 	andeq	r0, r0, r0, lsl #1
   15710:	740a0001 	strvc	r0, [sl], #-1
   15714:	1000736d 	andne	r7, r0, sp, ror #6
   15718:	fd081108 	stc2	1, cr1, [r8, #-32]	; 0xffffffe0
   1571c:	07000002 	streq	r0, [r0, -r2]
   15720:	00004ebb 			; <UNDEFINED> instruction: 0x00004ebb
   15724:	630a1208 	movwvs	r1, #41480	; 0xa208
   15728:	02000001 	andeq	r0, r0, #1
   1572c:	54070023 	strpl	r0, [r7], #-35	; 0xffffffdd
   15730:	0800004e 	stmdaeq	r0, {r1, r2, r3, r6}
   15734:	01630a13 	cmneq	r3, r3, lsl sl
   15738:	23020000 	movwcs	r0, #8192	; 0x2000
   1573c:	4cff0704 	ldclmi	7, cr0, [pc], #16	; 15754 <_Min_Heap_Size+0x14f54>
   15740:	14080000 	strne	r0, [r8], #-0
   15744:	0001630a 	andeq	r6, r1, sl, lsl #6
   15748:	08230200 	stmdaeq	r3!, {r9}
   1574c:	004db407 	subeq	fp, sp, r7, lsl #8
   15750:	0a150800 	beq	557758 <_Min_Heap_Size+0x556f58>
   15754:	00000163 	andeq	r0, r0, r3, ror #2
   15758:	000c2302 	andeq	r2, ip, r2, lsl #6
   1575c:	00010608 	andeq	r0, r1, r8, lsl #12
   15760:	00030d00 	andeq	r0, r3, r0, lsl #26
   15764:	00800900 	addeq	r0, r0, r0, lsl #18
   15768:	00000000 	andeq	r0, r0, r0
   1576c:	004d270b 	subeq	r2, sp, fp, lsl #14
   15770:	07270100 	streq	r0, [r7, -r0, lsl #2]!
   15774:	000002fd 	strdeq	r0, [r0], -sp
   15778:	00030501 	andeq	r0, r3, r1, lsl #10
   1577c:	0b000000 	bleq	15784 <_Min_Heap_Size+0x14f84>
   15780:	00004cf0 	strdeq	r4, [r0], -r0
   15784:	33082801 	movwcc	r2, #34817	; 0x8801
   15788:	01000003 	tsteq	r0, r3
   1578c:	00000305 	andeq	r0, r0, r5, lsl #6
   15790:	04050000 	streq	r0, [r5], #-0
   15794:	00000106 	andeq	r0, r0, r6, lsl #2
   15798:	4d0a010c 	stfmis	f0, [sl, #-48]	; 0xffffffd0
   1579c:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
   157a0:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
   157ac:	01660000 	cmneq	r6, r0
   157b0:	9e010001 	cdpls	0, 0, cr0, cr1, cr1, {0}
   157b4:	0d000003 	stceq	0, cr0, [r0, #-12]
   157b8:	00004dd0 	ldrdeq	r4, [r0], -r0
   157bc:	0613a901 	ldreq	sl, [r3], -r1, lsl #18
   157c0:	8a000001 	bhi	157cc <_Min_Heap_Size+0x14fcc>
   157c4:	86000101 	strhi	r0, [r0], -r1, lsl #2
   157c8:	0d000101 	stfeqs	f0, [r0, #-4]
   157cc:	00004e0c 	andeq	r4, r0, ip, lsl #28
   157d0:	3320a901 			; <UNDEFINED> instruction: 0x3320a901
   157d4:	af000003 	svcge	0x00000003
   157d8:	ab000101 	blge	15be4 <_Min_Heap_Size+0x153e4>
   157dc:	0e000101 	adfeqs	f0, f0, f1
   157e0:	00766e65 	rsbseq	r6, r6, r5, ror #28
   157e4:	332da901 			; <UNDEFINED> instruction: 0x332da901
   157e8:	d4000003 	strle	r0, [r0], #-3
   157ec:	d0000101 	andle	r0, r0, r1, lsl #2
   157f0:	0f000101 	svceq	0x00000101
   157f4:	00000000 	andeq	r0, r0, r0
   157f8:	0000080a 	andeq	r0, r0, sl, lsl #16
   157fc:	7f010c00 	svcvc	0x00010c00
   15800:	0100004e 	tsteq	r0, lr, asr #32
   15804:	790105a3 	stmdbvc	r1, {r0, r1, r5, r7, r8, sl}
	...
   15810:	f5000000 			; <UNDEFINED> instruction: 0xf5000000
   15814:	01000101 	tsteq	r0, r1, lsl #2
   15818:	000003c7 	andeq	r0, r0, r7, asr #7
   1581c:	0000000f 	andeq	r0, r0, pc
   15820:	00080a00 	andeq	r0, r8, r0, lsl #20
   15824:	010c0000 	mrseq	r0, (UNDEF: 12)
   15828:	00004e25 	andeq	r4, r0, r5, lsr #28
   1582c:	01059b01 	tsteq	r5, r1, lsl #22
   15830:	00000079 	andeq	r0, r0, r9, ror r0
	...
   1583c:	00010215 	andeq	r0, r1, r5, lsl r2
   15840:	00041801 	andeq	r1, r4, r1, lsl #16
   15844:	6c6f0e00 	stclvs	14, cr0, [pc], #-0	; 1584c <_Min_Heap_Size+0x1504c>
   15848:	9b010064 	blls	559e0 <_Min_Heap_Size+0x551e0>
   1584c:	00010611 	andeq	r0, r1, r1, lsl r6
   15850:	01023900 	tsteq	r2, r0, lsl #18
   15854:	01023500 	tsteq	r2, r0, lsl #10
   15858:	656e0e00 	strbvs	r0, [lr, #-3584]!	; 0xfffff200
   1585c:	9b010077 	blls	55a40 <_Min_Heap_Size+0x55240>
   15860:	0001061c 	andeq	r0, r1, ip, lsl r6
   15864:	01025e00 	tsteq	r2, r0, lsl #28
   15868:	01025a00 	tsteq	r2, r0, lsl #20
   1586c:	00000f00 	andeq	r0, r0, r0, lsl #30
   15870:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
   15874:	10000000 	andne	r0, r0, r0
   15878:	004d1901 	subeq	r1, sp, r1, lsl #18
   1587c:	05940100 	ldreq	r0, [r4, #256]	; 0x100
   15880:	00007901 	andeq	r7, r0, r1, lsl #18
	...
   1588c:	007d0200 	rsbseq	r0, sp, r0, lsl #4
   15890:	00045801 	andeq	r5, r4, r1, lsl #16
   15894:	0ab80d00 	beq	fee18c9c <_estack+0xdee0f2fc>
   15898:	94010000 	strls	r0, [r1], #-0
   1589c:	00010611 	andeq	r0, r1, r1, lsl r6
   158a0:	01028300 	mrseq	r8, LR_svc
   158a4:	01027f00 	tsteq	r2, r0, lsl #30
   158a8:	74731100 	ldrbtvc	r1, [r3], #-256	; 0xffffff00
   158ac:	24940100 	ldrcs	r0, [r4], #256	; 0x100
   158b0:	00000458 	andeq	r0, r0, r8, asr r4
   158b4:	05005101 	streq	r5, [r0, #-257]	; 0xfffffeff
   158b8:	0001c304 	andeq	ip, r1, r4, lsl #6
   158bc:	bf011000 	svclt	0x00011000
   158c0:	0100004d 	tsteq	r0, sp, asr #32
   158c4:	7901058e 	stmdbvc	r1, {r1, r2, r3, r7, r8, sl}
	...
   158d0:	02000000 	andeq	r0, r0, #0
   158d4:	9101007d 	tstls	r1, sp, ror r0
   158d8:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
   158dc:	00667562 	rsbeq	r7, r6, r2, ror #10
   158e0:	91188e01 	tstls	r8, r1, lsl #28
   158e4:	a8000004 	stmdage	r0, {r2}
   158e8:	a4000102 	strge	r0, [r0], #-258	; 0xfffffefe
   158ec:	00000102 	andeq	r0, r0, r2, lsl #2
   158f0:	02b30405 	adcseq	r0, r3, #83886080	; 0x5000000
   158f4:	010c0000 	mrseq	r0, (UNDEF: 12)
   158f8:	00004ec5 	andeq	r4, r0, r5, asr #29
   158fc:	01058701 	tsteq	r5, r1, lsl #14
   15900:	00000079 	andeq	r0, r0, r9, ror r0
	...
   1590c:	000102c9 	andeq	r0, r1, r9, asr #5
   15910:	0004d401 	andeq	sp, r4, r1, lsl #8
   15914:	4dd00d00 	ldclmi	13, cr0, [r0]
   15918:	87010000 	strhi	r0, [r1, -r0]
   1591c:	00010613 	andeq	r0, r1, r3, lsl r6
   15920:	0102ed00 	tsteq	r2, r0, lsl #26
   15924:	0102e900 	tsteq	r2, r0, lsl #18
   15928:	00000f00 	andeq	r0, r0, r0, lsl #30
   1592c:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
   15930:	0c000000 	stceq	0, cr0, [r0], {-0}
   15934:	004dd501 	subeq	sp, sp, r1, lsl #10
   15938:	05800100 	streq	r0, [r0, #256]	; 0x100
   1593c:	00007901 	andeq	r7, r0, r1, lsl #18
	...
   15948:	01030e00 	tsteq	r3, r0, lsl #28
   1594c:	05110100 	ldreq	r0, [r1, #-256]	; 0xffffff00
   15950:	610d0000 	mrsvs	r0, (UNDEF: 13)
   15954:	0100001a 	tsteq	r0, sl, lsl r0
   15958:	05111080 	ldreq	r1, [r1, #-128]	; 0xffffff80
   1595c:	03320000 	teqeq	r2, #0
   15960:	032e0001 			; <UNDEFINED> instruction: 0x032e0001
   15964:	000f0001 	andeq	r0, pc, r1
   15968:	0a000000 	beq	15970 <_Min_Heap_Size+0x15170>
   1596c:	00000008 	andeq	r0, r0, r8
   15970:	00790405 	rsbseq	r0, r9, r5, lsl #8
   15974:	010c0000 	mrseq	r0, (UNDEF: 12)
   15978:	00004e06 	andeq	r4, r0, r6, lsl #28
   1597c:	01057801 	tsteq	r5, r1, lsl #16
   15980:	00000079 	andeq	r0, r0, r9, ror r0
	...
   1598c:	00010353 	andeq	r0, r1, r3, asr r3
   15990:	00055b01 	andeq	r5, r5, r1, lsl #22
   15994:	4e9d0d00 	cdpmi	13, 9, cr0, cr13, cr0, {0}
   15998:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
   1599c:	00010611 	andeq	r0, r1, r1, lsl r6
   159a0:	01038300 	mrseq	r8, SP_svc
   159a4:	01037f00 	tsteq	r3, r0, lsl #30
   159a8:	13bb1200 			; <UNDEFINED> instruction: 0x13bb1200
   159ac:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
   159b0:	0000791b 	andeq	r7, r0, fp, lsl r9
   159b4:	74910200 	ldrvc	r0, [r1], #512	; 0x200
   159b8:	01100013 	tsteq	r0, r3, lsl r0
   159bc:	00004cf8 	strdeq	r4, [r0], -r8
   159c0:	01057001 	tsteq	r5, r1
   159c4:	00000079 	andeq	r0, r0, r9, ror r0
   159c8:	08003358 	stmdaeq	r0, {r3, r4, r6, r8, r9, ip, sp}
   159cc:	0800335c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, ip, sp}
   159d0:	01007d02 	tsteq	r0, r2, lsl #26
   159d4:	000005aa 	andeq	r0, r0, sl, lsr #11
   159d8:	000ab80d 	andeq	fp, sl, sp, lsl #16
   159dc:	10700100 	rsbsne	r0, r0, r0, lsl #2
   159e0:	00000079 	andeq	r0, r0, r9, ror r0
   159e4:	000103a8 	andeq	r0, r1, r8, lsr #7
   159e8:	000103a4 	andeq	r0, r1, r4, lsr #7
   159ec:	72747011 	rsbsvc	r7, r4, #17
   159f0:	1a700100 	bne	1c15df8 <_Min_Heap_Size+0x1c155f8>
   159f4:	00000079 	andeq	r0, r0, r9, ror r0
   159f8:	64115101 	ldrvs	r5, [r1], #-257	; 0xfffffeff
   159fc:	01007269 	tsteq	r0, r9, ror #4
   15a00:	00792370 	rsbseq	r2, r9, r0, ror r3
   15a04:	52010000 	andpl	r0, r1, #0
   15a08:	3c011000 	stccc	0, cr1, [r1], {-0}
   15a0c:	0100004e 	tsteq	r0, lr, asr #32
   15a10:	7901056a 	stmdbvc	r1, {r1, r3, r5, r6, r8, sl}
   15a14:	54000000 	strpl	r0, [r0], #-0
   15a18:	58080033 	stmdapl	r8, {r0, r1, r4, r5}
   15a1c:	02080033 	andeq	r0, r8, #51	; 0x33
   15a20:	dd01007d 	stcle	0, cr0, [r1, #-500]	; 0xfffffe0c
   15a24:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
   15a28:	00000ab8 			; <UNDEFINED> instruction: 0x00000ab8
   15a2c:	79116a01 	ldmdbvc	r1, {r0, r9, fp, sp, lr}
   15a30:	cd000000 	stcgt	0, cr0, [r0, #-0]
   15a34:	c9000103 	stmdbgt	r0, {r0, r1, r8}
   15a38:	00000103 	andeq	r0, r0, r3, lsl #2
   15a3c:	4d410110 	stfmie	f0, [r1, #-64]	; 0xffffffc0
   15a40:	63010000 	movwvs	r0, #4096	; 0x1000
   15a44:	00790105 	rsbseq	r0, r9, r5, lsl #2
   15a48:	334a0000 	movtcc	r0, #40960	; 0xa000
   15a4c:	33540800 	cmpcc	r4, #0, 16
   15a50:	7d020800 	stcvc	8, cr0, [r2, #-0]
   15a54:	061d0100 	ldreq	r0, [sp], -r0, lsl #2
   15a58:	b80d0000 	stmdalt	sp, {}	; <UNPREDICTABLE>
   15a5c:	0100000a 	tsteq	r0, sl
   15a60:	00791063 	rsbseq	r1, r9, r3, rrx
   15a64:	03f20000 	mvnseq	r0, #0
   15a68:	03ee0001 	mvneq	r0, #1
   15a6c:	73110001 	tstvc	r1, #1
   15a70:	63010074 	movwvs	r0, #4212	; 0x1074
   15a74:	00045823 	andeq	r5, r4, r3, lsr #16
   15a78:	00510100 	subseq	r0, r1, r0, lsl #2
   15a7c:	4e2b0110 	mcrmi	1, 1, r0, cr11, cr0, {0}
   15a80:	5c010000 	stcpl	0, cr0, [r1], {-0}
   15a84:	00790105 	rsbseq	r0, r9, r5, lsl #2
   15a88:	33440000 	movtcc	r0, #16384	; 0x4000
   15a8c:	334a0800 	movtcc	r0, #43008	; 0xa800
   15a90:	7d020800 	stcvc	8, cr0, [r2, #-0]
   15a94:	06500100 	ldrbeq	r0, [r0], -r0, lsl #2
   15a98:	b80d0000 	stmdalt	sp, {}	; <UNPREDICTABLE>
   15a9c:	0100000a 	tsteq	r0, sl
   15aa0:	0079105c 	rsbseq	r1, r9, ip, asr r0
   15aa4:	04170000 	ldreq	r0, [r7], #-0
   15aa8:	04130001 	ldreq	r0, [r3], #-1
   15aac:	0c000001 	stceq	0, cr0, [r0], {1}
   15ab0:	004d3301 	subeq	r3, sp, r1, lsl #6
   15ab4:	1b500100 	blne	1415ebc <_Min_Heap_Size+0x14156bc>
   15ab8:	00007901 	andeq	r7, r0, r1, lsl #18
   15abc:	00332800 	eorseq	r2, r3, r0, lsl #16
   15ac0:	00334408 	eorseq	r4, r3, r8, lsl #8
   15ac4:	01043808 	tsteq	r4, r8, lsl #16
   15ac8:	06c90100 	strbeq	r0, [r9], r0, lsl #2
   15acc:	b80d0000 	stmdalt	sp, {}	; <UNPREDICTABLE>
   15ad0:	0100000a 	tsteq	r0, sl
   15ad4:	00792650 	rsbseq	r2, r9, r0, asr r6
   15ad8:	045c0000 	ldrbeq	r0, [ip], #-0
   15adc:	04580001 	ldrbeq	r0, [r8], #-1
   15ae0:	700e0001 	andvc	r0, lr, r1
   15ae4:	01007274 	tsteq	r0, r4, ror r2
   15ae8:	01063250 	tsteq	r6, r0, asr r2
   15aec:	04850000 	streq	r0, [r5], #0
   15af0:	047d0001 	ldrbteq	r0, [sp], #-1
   15af4:	6c0e0001 	stcvs	0, cr0, [lr], {1}
   15af8:	01006e65 	tsteq	r0, r5, ror #28
   15afc:	00793b50 	rsbseq	r3, r9, r0, asr fp
   15b00:	04bf0000 	ldrteq	r0, [pc], #0	; 15b08 <_Min_Heap_Size+0x15308>
   15b04:	04bb0001 	ldrteq	r0, [fp], #1
   15b08:	77140001 	ldrvc	r0, [r4, -r1]
   15b0c:	0100004e 	tsteq	r0, lr, asr #32
   15b10:	00790753 	rsbseq	r0, r9, r3, asr r7
   15b14:	04e10000 	strbteq	r0, [r1], #0
   15b18:	04dd0001 	ldrbeq	r0, [sp], #1
   15b1c:	3a0f0001 	bcc	3d5b28 <_Min_Heap_Size+0x3d5328>
   15b20:	18080033 	stmdane	r8, {r0, r1, r4, r5}
   15b24:	00000008 	andeq	r0, r0, r8
   15b28:	4de2010c 	stfmie	f0, [r2, #48]!	; 0x30
   15b2c:	43010000 	movwmi	r0, #4096	; 0x1000
   15b30:	0079011b 	rsbseq	r0, r9, fp, lsl r1
   15b34:	33080000 	movwcc	r0, #32768	; 0x8000
   15b38:	33280800 			; <UNDEFINED> instruction: 0x33280800
   15b3c:	05000800 	streq	r0, [r0, #-2048]	; 0xfffff800
   15b40:	42010001 	andmi	r0, r1, #1
   15b44:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
   15b48:	00000ab8 			; <UNDEFINED> instruction: 0x00000ab8
   15b4c:	79254301 	stmdbvc	r5!, {r0, r8, r9, lr}
   15b50:	24000000 	strcs	r0, [r0], #-0
   15b54:	20000105 	andcs	r0, r0, r5, lsl #2
   15b58:	0e000105 	adfeqs	f0, f0, f5
   15b5c:	00727470 	rsbseq	r7, r2, r0, ror r4
   15b60:	06314301 	ldrteq	r4, [r1], -r1, lsl #6
   15b64:	4d000001 	stcmi	0, cr0, [r0, #-4]
   15b68:	45000105 	strmi	r0, [r0, #-261]	; 0xfffffefb
   15b6c:	0e000105 	adfeqs	f0, f0, f5
   15b70:	006e656c 	rsbeq	r6, lr, ip, ror #10
   15b74:	793a4301 	ldmdbvc	sl!, {r0, r8, r9, lr}
   15b78:	87000000 	strhi	r0, [r0, -r0]
   15b7c:	83000105 	movwhi	r0, #261	; 0x105
   15b80:	14000105 	strne	r0, [r0], #-261	; 0xfffffefb
   15b84:	00004e77 	andeq	r4, r0, r7, ror lr
   15b88:	79074601 	stmdbvc	r7, {r0, r9, sl, lr}
   15b8c:	a9000000 	stmdbge	r0, {}	; <UNPREDICTABLE>
   15b90:	a5000105 	strge	r0, [r0, #-261]	; 0xfffffefb
   15b94:	0f000105 	svceq	0x00000105
   15b98:	08003316 	stmdaeq	r0, {r1, r2, r4, r8, r9, ip, sp}
   15b9c:	00000826 	andeq	r0, r0, r6, lsr #16
   15ba0:	2d011500 	cfstr32cs	mvfx1, [r1, #-0]
   15ba4:	0100004d 	tsteq	r0, sp, asr #32
   15ba8:	0101063d 	tsteq	r1, sp, lsr r6
	...
   15bb4:	000105c8 	andeq	r0, r1, r8, asr #11
   15bb8:	00078a01 	andeq	r8, r7, r1, lsl #20
   15bbc:	1a610d00 	bne	1858fc4 <_Min_Heap_Size+0x18587c4>
   15bc0:	3d010000 	stccc	0, cr0, [r1, #-0]
   15bc4:	00007911 	andeq	r7, r0, r1, lsl r9
   15bc8:	0105ec00 	tsteq	r5, r0, lsl #24
   15bcc:	0105e800 	tsteq	r5, r0, lsl #16
   15bd0:	00001600 	andeq	r1, r0, r0, lsl #12
   15bd4:	078a0000 	streq	r0, [sl, r0]
   15bd8:	01170000 	tsteq	r7, r0
   15bdc:	01f30350 	mvnseq	r0, r0, asr r3
   15be0:	51011750 	tstpl	r1, r0, asr r7
   15be4:	00ff0902 	rscseq	r0, pc, r2, lsl #18
   15be8:	48010c00 	stmdami	r1, {sl, fp}
   15bec:	0100004d 	tsteq	r0, sp, asr #32
   15bf0:	79010535 	stmdbvc	r1, {r0, r2, r4, r5, r8, sl}
	...
   15bfc:	0d000000 	stceq	0, cr0, [r0, #-0]
   15c00:	01000106 	tsteq	r0, r6, lsl #2
   15c04:	000007db 	ldrdeq	r0, [r0], -fp
   15c08:	6469700e 	strbtvs	r7, [r9], #-14
   15c0c:	0f350100 	svceq	0x00350100
   15c10:	00000079 	andeq	r0, r0, r9, ror r0
   15c14:	00010631 	andeq	r0, r1, r1, lsr r6
   15c18:	0001062d 	andeq	r0, r1, sp, lsr #12
   15c1c:	6769730e 	strbvs	r7, [r9, -lr, lsl #6]!
   15c20:	18350100 	ldmdane	r5!, {r8}
   15c24:	00000079 	andeq	r0, r0, r9, ror r0
   15c28:	00010656 	andeq	r0, r1, r6, asr r6
   15c2c:	00010652 	andeq	r0, r1, r2, asr r6
   15c30:	0000000f 	andeq	r0, r0, pc
   15c34:	00080a00 	andeq	r0, r8, r0, lsl #20
   15c38:	01180000 	tsteq	r8, r0
   15c3c:	00004e85 	andeq	r4, r0, r5, lsl #29
   15c40:	01053001 	tsteq	r5, r1
   15c44:	00000079 	andeq	r0, r0, r9, ror r0
	...
   15c50:	01007d02 	tsteq	r0, r2, lsl #26
   15c54:	4d700119 	ldfmie	f0, [r0, #-100]!	; 0xffffff9c
   15c58:	2c010000 	stccs	0, cr0, [r1], {-0}
   15c5c:	00000006 	andeq	r0, r0, r6
   15c60:	00000000 	andeq	r0, r0, r0
   15c64:	007d0200 	rsbseq	r0, sp, r0, lsl #4
   15c68:	01011a01 	tsteq	r1, r1, lsl #20
   15c6c:	00004cc6 	andeq	r4, r0, r6, asr #25
   15c70:	00004cc6 	andeq	r4, r0, r6, asr #25
   15c74:	1a0d0f09 	bne	3598a0 <_Min_Heap_Size+0x3590a0>
   15c78:	048f0101 	streq	r0, [pc], #257	; 15c80 <_Min_Heap_Size+0x15480>
   15c7c:	048f0000 	streq	r0, [pc], #0	; 15c84 <_Min_Heap_Size+0x15484>
   15c80:	23010000 	movwcs	r0, #4096	; 0x1000
   15c84:	01011a0c 	tsteq	r1, ip, lsl #20
   15c88:	00004de8 	andeq	r4, r0, r8, ror #27
   15c8c:	00004de8 	andeq	r4, r0, r8, ror #27
   15c90:	000c2401 	andeq	r2, ip, r1, lsl #8
   15c94:	0000001e 	andeq	r0, r0, lr, lsl r0
   15c98:	304a0002 	subcc	r0, sl, r2
   15c9c:	01040000 	mrseq	r0, (UNDEF: 4)
   15ca0:	0000fa3c 	andeq	pc, r0, ip, lsr sl	; <UNPREDICTABLE>
   15ca4:	000010f0 	strdeq	r1, [r0], -r0
   15ca8:	00004ee0 	andeq	r4, r0, r0, ror #29
   15cac:	000004e9 	andeq	r0, r0, r9, ror #9
   15cb0:	00004f04 	andeq	r4, r0, r4, lsl #30
   15cb4:	00228001 	eoreq	r8, r2, r1
   15cb8:	00020000 	andeq	r0, r2, r0
   15cbc:	0000305c 	andeq	r3, r0, ip, asr r0
   15cc0:	fac00104 	blx	ff0160d8 <_estack+0xdf00c738>
   15cc4:	01d00000 	bicseq	r0, r0, r0
   15cc8:	02180800 	andseq	r0, r8, #0, 16
   15ccc:	4f120800 	svcmi	0x00120800
   15cd0:	04e90000 	strbteq	r0, [r9], #0
   15cd4:	4f040000 	svcmi	0x00040000
   15cd8:	80010000 	andhi	r0, r1, r0

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
  errno = ENOMEM;
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
}
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
      10:	00061001 	andeq	r1, r6, r1
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	0b3e0b0b 	bleq	f82c4c <_Min_Heap_Size+0xf8244c>
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	03001603 	movweq	r1, #1539	; 0x603
      24:	3b0b3a0e 	blcc	2ce864 <_Min_Heap_Size+0x2ce064>
}
      28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
      30:	0b0b0024 	bleq	2c00c8 <_Min_Heap_Size+0x2bf8c8>
    if (status != HAL_OK)
      34:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      uwTickFreq = prevTickFreq;
      38:	35050000 	strcc	r0, [r5, #-0]
      3c:	00134900 	andseq	r4, r3, r0, lsl #18
      40:	00260600 	eoreq	r0, r6, r0, lsl #12
      44:	00001349 	andeq	r1, r0, r9, asr #6
      48:	0b011307 	bleq	44c6c <_Min_Heap_Size+0x4446c>
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	3b0b3a0b 	blcc	2ce880 <_Min_Heap_Size+0x2ce080>
            while( pxBlock != pxEnd )
      50:	010b3905 	tsteq	fp, r5, lsl #18
      54:	08000013 	stmdaeq	r0, {r0, r1, r4}
                if( pxBlock->xBlockSize > xMaxSize )
      58:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
      5c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
                if( pxBlock->xBlockSize < xMinSize )
      60:	13490b39 	movtne	r0, #39737	; 0x9b39
                    xMinSize = pxBlock->xBlockSize;
      64:	00000a38 	andeq	r0, r0, r8, lsr sl
      68:	03000d09 	movweq	r0, #3337	; 0xd09
      6c:	3b0b3a08 	blcc	2ce894 <_Min_Heap_Size+0x2ce094>
      70:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
      74:	000a3813 	andeq	r3, sl, r3, lsl r8
      78:	01010a00 	tsteq	r1, r0, lsl #20
      7c:	13011349 	movwne	r1, #4937	; 0x1349
      80:	210b0000 	mrscs	r0, (UNDEF: 11)
      84:	2f134900 	svccs	0x00134900
      88:	0c00000b 	stceq	0, cr0, [r0], {11}
      8c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
      90:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      94:	13490b39 	movtne	r0, #39737	; 0x9b39
      98:	040d0000 	streq	r0, [sp], #-0
      9c:	0b0b3e01 	bleq	2cf8a8 <_Min_Heap_Size+0x2cf0a8>
      a0:	3a13490b 	bcc	4d24d4 <_Min_Heap_Size+0x4d1cd4>
      a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      a8:	0013010b 	andseq	r0, r3, fp, lsl #2
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	00280e00 	eoreq	r0, r8, r0, lsl #28
      b0:	0b1c0e03 	bleq	7038c4 <_Min_Heap_Size+0x7030c4>
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	130f0000 	movwne	r0, #61440	; 0xf000
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	3a0b0b01 	bcc	2c2cc4 <_Min_Heap_Size+0x2c24c4>
      bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	0013010b 	andseq	r0, r3, fp, lsl #2
      c4:	000d1000 	andeq	r1, sp, r0
      c8:	0b3a0e03 	bleq	e838dc <_Min_Heap_Size+0xe830dc>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	0b390b3b 	bleq	e42dc0 <_Min_Heap_Size+0xe425c0>
      d0:	0a381349 	beq	e04dfc <_Min_Heap_Size+0xe045fc>
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	0d110000 	ldceq	0, cr0, [r1, #-0]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	3a080300 	bcc	200ce0 <_Min_Heap_Size+0x2004e0>
      dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      e0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    if (huart->hdmarx != NULL)
      e4:	1200000a 	andne	r0, r0, #10
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	0b3a0b0b 	bleq	e82d20 <_Min_Heap_Size+0xe82520>
      f0:	0b390b3b 	bleq	e42de4 <_Min_Heap_Size+0xe425e4>
    huart->TxXferCount = 0x00U;
      f4:	00001301 	andeq	r1, r0, r1, lsl #6
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	0b000f13 	bleq	3d4c <_Min_Heap_Size+0x354c>
    huart->gState  = HAL_UART_STATE_READY;
      fc:	0013490b 	andseq	r4, r3, fp, lsl #18
    huart->RxState = HAL_UART_STATE_READY;
     100:	000f1400 	andeq	r1, pc, r0, lsl #8
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	00000b0b 	andeq	r0, r0, fp, lsl #22
    HAL_UART_AbortCpltCallback(huart);
     108:	27011515 	smladcs	r1, r5, r5, r1
     10c:	0013010c 	andseq	r0, r3, ip, lsl #2
  uint32_t AbortCplt = 0x01U;
     110:	00051600 	andeq	r1, r5, r0, lsl #12
  if (AbortCplt == 0x01U)
     114:	00001349 	andeq	r1, r0, r9, asr #6
}
     118:	03003417 	movweq	r3, #1047	; 0x417
     11c:	3b0b3a0e 	blcc	2ce95c <_Min_Heap_Size+0x2ce15c>
     120:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     124:	3c0c3f13 	stccc	15, cr3, [ip], {19}
                    taskYIELD_WITHIN_API();
     128:	1800000c 	stmdane	r0, {r2, r3}
     12c:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
     130:	00000c3c 	andeq	r0, r0, ip, lsr ip
     134:	49002119 	stmdbmi	r0, {r0, r3, r4, r8, sp}
     138:	00052f13 	andeq	r2, r5, r3, lsl pc
            prvUnlockQueue( pxQueue );
     13c:	00341a00 	eorseq	r1, r4, r0, lsl #20
     140:	0b3a0e03 	bleq	e83954 <_Min_Heap_Size+0xe83154>
            ( void ) xTaskResumeAll();
     144:	0b390b3b 	bleq	e42e38 <_Min_Heap_Size+0xe42638>
            return errQUEUE_FULL;
     148:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 2c <_Min_Heap_Size-0x7d4>
     14c:	00000a02 	andeq	r0, r0, r2, lsl #20
     150:	3f012e1b 	svccc	0x00012e1b
     154:	3a0e030c 	bcc	380d8c <_Min_Heap_Size+0x38058c>
     158:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     15c:	110c270b 	tstne	ip, fp, lsl #14
     160:	40011201 	andmi	r1, r1, r1, lsl #4
     164:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     168:	00001301 	andeq	r1, r0, r1, lsl #6
     16c:	0300341c 	movweq	r3, #1052	; 0x41c
     170:	3b0b3a0e 	blcc	2ce9b0 <_Min_Heap_Size+0x2ce1b0>
     174:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     178:	000a0213 	andeq	r0, sl, r3, lsl r2
     17c:	010b1d00 	tsteq	fp, r0, lsl #26
     180:	01120111 	tsteq	r2, r1, lsl r1
}
     184:	00001301 	andeq	r1, r0, r1, lsl #6
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	0182891e 	orreq	r8, r2, lr, lsl r9
     18c:	31011101 	tstcc	r1, r1, lsl #2
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	00130113 	andseq	r0, r3, r3, lsl r1
     194:	828a1f00 	addhi	r1, sl, #0, 30
     198:	0a020001 	beq	801a4 <_Min_Heap_Size+0x7f9a4>
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	000a4291 	muleq	sl, r1, r2
     1a0:	82892000 	addhi	r2, r9, #0
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	01110001 	tsteq	r1, r1
     1a8:	00001331 	andeq	r1, r0, r1, lsr r3
     1ac:	3f012e21 	svccc	0x00012e21
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	3a0e030c 	bcc	380de8 <_Min_Heap_Size+0x3805e8>
     1b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     1bc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     1c0:	97064001 	strls	r4, [r6, -r1]
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	13010c42 	movwne	r0, #7234	; 0x1c42
     1c8:	89220000 	stmdbhi	r2!, {}	; <UNPREDICTABLE>
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	11010182 	smlabbne	r1, r2, r1, r0
     1d0:	00133101 	andseq	r3, r3, r1, lsl #2
     1d4:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	0b3a0e03 	bleq	e839ec <_Min_Heap_Size+0xe831ec>
     1dc:	0b390b3b 	bleq	e42ed0 <_Min_Heap_Size+0xe426d0>
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	01110c27 	tsteq	r1, r7, lsr #24
     1e4:	06400112 			; <UNDEFINED> instruction: 0x06400112
     1e8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
     1f0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	0b3b0b3a 	bleq	ec2ee4 <_Min_Heap_Size+0xec26e4>
     1f8:	13490b39 	movtne	r0, #39737	; 0x9b39
     1fc:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	25000006 	strcs	r0, [r0, #-6]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     208:	0b3b0b3a 	bleq	ec2ef8 <_Min_Heap_Size+0xec26f8>
     20c:	13490b39 	movtne	r0, #39737	; 0x9b39
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     214:	26000006 	strcs	r0, [r0], -r6
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     21c:	0c341349 	ldceq	3, cr1, [r4], #-292	; 0xfffffedc
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	00000a02 	andeq	r0, r0, r2, lsl #20
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	03003427 	movweq	r3, #1063	; 0x427
     228:	3b0b3a08 	blcc	2cea50 <_Min_Heap_Size+0x2ce250>
  tmp = hdma->Instance->FCR;
     22c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	000b1c13 	andeq	r1, fp, r3, lsl ip
  tmp |= hdma->Init.FIFOMode;
     234:	00052800 	andeq	r2, r5, r0, lsl #16
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	0b3a0803 	bleq	e8224c <_Min_Heap_Size+0xe81a4c>
    tmp |= hdma->Init.FIFOThreshold;
     23c:	0b390b3b 	bleq	e42f30 <_Min_Heap_Size+0xe42730>
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	06021349 	streq	r1, [r2], -r9, asr #6
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     248:	002e2900 	eoreq	r2, lr, r0, lsl #18
  hdma->Instance->FCR = tmp;
     24c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	030e4087 	movweq	r4, #57479	; 0xe087
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	3b0b3a0e 	blcc	2cea94 <_Min_Heap_Size+0x2ce294>
     258:	2a00000b 	bcs	28c <_Min_Heap_Size-0x574>
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1ac <_Min_Heap_Size-0x654>
  hdma->State = HAL_DMA_STATE_READY;
     260:	40870c3c 	addmi	r0, r7, ip, lsr ip
     264:	3a0e030e 	bcc	380ea4 <_Min_Heap_Size+0x3806a4>
  return HAL_OK;
     268:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     26c:	2b00000b 	blcs	2a0 <_Min_Heap_Size-0x560>
     270:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1c0 <_Min_Heap_Size-0x640>
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	40870c3c 	addmi	r0, r7, ip, lsr ip
     278:	3a0e030e 	bcc	380eb8 <_Min_Heap_Size+0x3806b8>
     27c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	0000000b 	andeq	r0, r0, fp
        hdma->State = HAL_DMA_STATE_READY;
     284:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
        return HAL_ERROR; 
     288:	030b130e 	movweq	r1, #45838	; 0xb30e
    return HAL_ERROR;
     28c:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	00061001 	andeq	r1, r6, r1
     298:	00240200 	eoreq	r0, r4, r0, lsl #4
      tickstart = HAL_GetTick();
     29c:	0b3e0b0b 	bleq	f82ed0 <_Min_Heap_Size+0xf826d0>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00000e03 	andeq	r0, r0, r3, lsl #28
     2a4:	03001603 	movweq	r1, #1539	; 0x603
     2a8:	3b0b3a0e 	blcc	2ceae8 <_Min_Heap_Size+0x2ce2e8>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     2b0:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     2b4:	0b0b0024 	bleq	2c034c <_Min_Heap_Size+0x2bfb4c>
          return HAL_TIMEOUT;
     2b8:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	26050000 	strcs	r0, [r5], -r0
     2c0:	00134900 	andseq	r4, r3, r0, lsl #18
     2c4:	00350600 	eorseq	r0, r5, r0, lsl #12
    FlagStatus       pwrclkchanged = RESET;
     2c8:	00001349 	andeq	r1, r0, r9, asr #6
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	0b011307 	bleq	44ef0 <_Min_Heap_Size+0x446f0>
     2d0:	3b0b3a0b 	blcc	2ceb04 <_Min_Heap_Size+0x2ce304>
     2d4:	010b3905 	tsteq	fp, r5, lsl #18
      tickstart = HAL_GetTick();
     2d8:	08000013 	stmdaeq	r0, {r0, r1, r4}
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     2e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     2e4:	13490b39 	movtne	r0, #39737	; 0x9b39
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	00000a38 	andeq	r0, r0, r8, lsr sl
     2ec:	03000d09 	movweq	r0, #3337	; 0xd09
          return HAL_TIMEOUT;
     2f0:	3b0b3a0e 	blcc	2ceb30 <_Min_Heap_Size+0x2ce330>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     2f8:	000a3813 	andeq	r3, sl, r3, lsl r8
     2fc:	00160a00 	andseq	r0, r6, r0, lsl #20
     300:	0b3a0e03 	bleq	e83b14 <_Min_Heap_Size+0xe83314>
     304:	0b39053b 	bleq	e417f8 <_Min_Heap_Size+0xe40ff8>
     308:	00001349 	andeq	r1, r0, r9, asr #6
     30c:	3e01040b 	cdpcc	4, 0, cr0, cr1, cr11, {0}
     310:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
      tickstart = HAL_GetTick();
     314:	3b0b3a13 	blcc	2ceb68 <_Min_Heap_Size+0x2ce368>
     318:	010b390b 	tsteq	fp, fp, lsl #18
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	0c000013 	stceq	0, cr0, [r0], {19}
     320:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	00000b1c 	andeq	r0, r0, ip, lsl fp
     328:	0b01130d 	bleq	44f64 <_Min_Heap_Size+0x44764>
     32c:	3b0b3a0b 	blcc	2ceb60 <_Min_Heap_Size+0x2ce360>
     330:	010b390b 	tsteq	fp, fp, lsl #18
          return HAL_TIMEOUT;
     334:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    if(pwrclkchanged == SET)
     338:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	0b3b0b3a 	bleq	ec302c <_Min_Heap_Size+0xec282c>
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	13490b39 	movtne	r0, #39737	; 0x9b39
     344:	00000a38 	andeq	r0, r0, r8, lsr sl
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	0301130f 	movweq	r1, #4879	; 0x130f
     34c:	3a0b0b0e 	bcc	2c2f8c <_Min_Heap_Size+0x2c278c>
     350:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     354:	0013010b 	andseq	r0, r3, fp, lsl #2
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	000f1000 	andeq	r1, pc, r0
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     360:	0f110000 	svceq	0x00110000
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	000b0b00 	andeq	r0, fp, r0, lsl #22
     368:	01151200 	tsteq	r5, r0, lsl #4
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	13010c27 	movwne	r0, #7207	; 0x1c27
     370:	05130000 	ldreq	r0, [r3, #-0]
     374:	00134900 	andseq	r4, r3, r0, lsl #18
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	00341400 	eorseq	r1, r4, r0, lsl #8
     37c:	0b3a0e03 	bleq	e83b90 <_Min_Heap_Size+0xe83390>
     380:	0b390b3b 	bleq	e43074 <_Min_Heap_Size+0xe42874>
     384:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 268 <_Min_Heap_Size-0x598>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	00000c3c 	andeq	r0, r0, ip, lsr ip
     38c:	3f012e15 	svccc	0x00012e15
        __HAL_RCC_PLL_DISABLE();
     390:	3a0e030c 	bcc	380fc8 <_Min_Heap_Size+0x3807c8>
     394:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
        tickstart = HAL_GetTick();
     398:	110c270b 	tstne	ip, fp, lsl #14
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	40011201 	andmi	r1, r1, r1, lsl #4
     3a0:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     3a4:	00001301 	andeq	r1, r0, r1, lsl #6
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	03000516 	movweq	r0, #1302	; 0x516
     3ac:	3b0b3a0e 	blcc	2cebec <_Min_Heap_Size+0x2ce3ec>
            return HAL_TIMEOUT;
     3b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	b7060213 	smladlt	r6, r3, r2, r0
     3b8:	00000642 	andeq	r0, r0, r2, asr #12
     3bc:	03003417 	movweq	r3, #1047	; 0x417
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
     3c4:	000a020c 	andeq	r0, sl, ip, lsl #4
     3c8:	001d1800 	andseq	r1, sp, r0, lsl #16
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	01521331 	cmpeq	r2, r1, lsr r3
     3d0:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     3d4:	58011201 	stmdapl	r1, {r0, r9, ip}
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     3dc:	1900000b 	stmdbne	r0, {r0, r1, r3}
     3e0:	01018289 	smlabbeq	r1, r9, r2, r8
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	13310111 	teqne	r1, #1073741828	; 0x40000004
     3e8:	8a1a0000 	bhi	6803f0 <_Min_Heap_Size+0x67fbf0>
     3ec:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	0a42910a 	beq	10a4820 <_Min_Heap_Size+0x10a4020>
     3f4:	011b0000 	tsteq	fp, r0
     3f8:	01134901 	tsteq	r3, r1, lsl #18
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	1c000013 	stcne	0, cr0, [r0], {19}
     400:	13490021 	movtne	r0, #36897	; 0x9021
     404:	00000b2f 	andeq	r0, r0, pc, lsr #22
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	0182891d 	orreq	r8, r2, sp, lsl r9
     40c:	31011100 	mrscc	r1, (UNDEF: 17)
     410:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     414:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 364 <_Min_Heap_Size-0x49c>
     418:	0b3a0e03 	bleq	e83c2c <_Min_Heap_Size+0xe8342c>
     41c:	0b390b3b 	bleq	e43110 <_Min_Heap_Size+0xe42910>
     420:	01110c27 	tsteq	r1, r7, lsr #24
     424:	0a400112 	beq	1000874 <_Min_Heap_Size+0x1000074>
        __HAL_RCC_PLL_ENABLE();
     428:	000c4297 	muleq	ip, r7, r2
     42c:	002e1f00 	eoreq	r1, lr, r0, lsl #30
        tickstart = HAL_GetTick();
     430:	0b3a0e03 	bleq	e83c44 <_Min_Heap_Size+0xe83444>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	0b39053b 	bleq	e41928 <_Min_Heap_Size+0xe41128>
     438:	0b200c27 	bleq	8034dc <_Min_Heap_Size+0x802cdc>
     43c:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     444:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
            return HAL_TIMEOUT;
     448:	0b3a0e03 	bleq	e83c5c <_Min_Heap_Size+0xe8345c>
  return HAL_OK;
     44c:	0b390b3b 	bleq	e43140 <_Min_Heap_Size+0xe42940>
        __HAL_RCC_PLL_DISABLE();
     450:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
     454:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
        tickstart = HAL_GetTick();
     458:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	0b3a0e03 	bleq	e83c70 <_Min_Heap_Size+0xe83470>
     460:	0b39053b 	bleq	e41954 <_Min_Heap_Size+0xe41154>
     464:	01000000 	mrseq	r0, (UNDEF: 0)
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     46c:	0e030b13 	vmoveq.32	d3[0], r0
            return HAL_TIMEOUT;
     470:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
  return HAL_OK;
     474:	01520111 	cmpeq	r2, r1, lsl r1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	00000610 	andeq	r0, r0, r0, lsl r6
        pll_config = RCC->PLLCFGR;
     47c:	0b002402 	bleq	948c <_Min_Heap_Size+0x8c8c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     484:	0300000e 	movweq	r0, #14
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	0b3b0b3a 	bleq	ec317c <_Min_Heap_Size+0xec297c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	13490b39 	movtne	r0, #39737	; 0x9b39
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	24040000 	strcs	r0, [r4], #-0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     49c:	0008030b 	andeq	r0, r8, fp, lsl #6
     4a0:	00350500 	eorseq	r0, r5, r0, lsl #10
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	00001349 	andeq	r1, r0, r9, asr #6
     4a8:	49010106 	stmdbmi	r1, {r1, r2, r8}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	00130113 	andseq	r0, r3, r3, lsl r1
     4b0:	00210700 	eoreq	r0, r1, r0, lsl #14
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	0b2f1349 	bleq	bc51e0 <_Min_Heap_Size+0xbc49e0>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	13080000 	movwne	r0, #32768	; 0x8000
     4bc:	3a0b0b01 	bcc	2c30c8 <_Min_Heap_Size+0x2c28c8>
  return HAL_OK;
     4c0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
}
     4c4:	0013010b 	andseq	r0, r3, fp, lsl #2
        return HAL_ERROR;
     4c8:	000d0900 	andeq	r0, sp, r0, lsl #18
        return HAL_ERROR;
     4cc:	0b3a0803 	bleq	e824e0 <_Min_Heap_Size+0xe81ce0>
}
     4d0:	0b39053b 	bleq	e419c4 <_Min_Heap_Size+0xe411c4>
        return HAL_ERROR;
     4d4:	0a381349 	beq	e05200 <_Min_Heap_Size+0xe04a00>
          return HAL_ERROR;
     4d8:	0d0a0000 	stceq	0, cr0, [sl, #-0]
     4dc:	3a0e0300 	bcc	3810e4 <_Min_Heap_Size+0x3808e4>
     4e0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     4e4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     4e8:	0b00000a 	bleq	518 <_Min_Heap_Size-0x2e8>
     4ec:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     4f0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     4f4:	13490b39 	movtne	r0, #39737	; 0x9b39
     4f8:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
     4fc:	030c3f01 	movweq	r3, #52993	; 0xcf01
     500:	3b0b3a0e 	blcc	2ced40 <_Min_Heap_Size+0x2ce540>
     504:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     508:	1201110c 	andne	r1, r1, #12, 2
     50c:	97064001 	strls	r4, [r6, -r1]
     510:	00000c42 	andeq	r0, r0, r2, asr #24
     514:	11010b0d 	tstne	r1, sp, lsl #22
     518:	01011201 	tsteq	r1, r1, lsl #4
     51c:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     520:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     524:	0b3b0b3a 	bleq	ec3214 <_Min_Heap_Size+0xec2a14>
     528:	13490b39 	movtne	r0, #39737	; 0x9b39
     52c:	00000a02 	andeq	r0, r0, r2, lsl #20
     530:	11010b0f 	tstne	r1, pc, lsl #22
     534:	00011201 	andeq	r1, r1, r1, lsl #4
     538:	11010000 	mrsne	r0, (UNDEF: 1)
     53c:	130e2501 	movwne	r2, #58625	; 0xe501
     540:	1b0e030b 	blne	381174 <_Min_Heap_Size+0x380974>
     544:	1106550e 	tstne	r6, lr, lsl #10
     548:	10015201 	andne	r5, r1, r1, lsl #4
     54c:	02000006 	andeq	r0, r0, #6
     550:	0b3e0104 	bleq	f80968 <_Min_Heap_Size+0xf80168>
     554:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     558:	0b3b0b3a 	bleq	ec3248 <_Min_Heap_Size+0xec2a48>
     55c:	13010b39 	movwne	r0, #6969	; 0x1b39
     560:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
     564:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     568:	0400000d 	streq	r0, [r0], #-13
     56c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     570:	00000b1c 	andeq	r0, r0, ip, lsl fp
     574:	0b002405 	bleq	9590 <_Min_Heap_Size+0x8d90>
     578:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     57c:	0600000e 	streq	r0, [r0], -lr
     580:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     584:	0b3b0b3a 	bleq	ec3274 <_Min_Heap_Size+0xec2a74>
     588:	13490b39 	movtne	r0, #39737	; 0x9b39
     58c:	24070000 	strcs	r0, [r7], #-0
     590:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     594:	0008030b 	andeq	r0, r8, fp, lsl #6
     598:	00260800 	eoreq	r0, r6, r0, lsl #16
     59c:	00001349 	andeq	r1, r0, r9, asr #6
     5a0:	49003509 	stmdbmi	r0, {r0, r3, r8, sl, ip, sp}
     5a4:	0a000013 	beq	5f8 <_Min_Heap_Size-0x208>
     5a8:	13490101 	movtne	r0, #37121	; 0x9101
     5ac:	00001301 	andeq	r1, r0, r1, lsl #6
     5b0:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
     5b4:	000b2f13 	andeq	r2, fp, r3, lsl pc
     5b8:	01130c00 	tsteq	r3, r0, lsl #24
     5bc:	0b3a0b0b 	bleq	e831f0 <_Min_Heap_Size+0xe829f0>
     5c0:	0b39053b 	bleq	e41ab4 <_Min_Heap_Size+0xe412b4>
     5c4:	00001301 	andeq	r1, r0, r1, lsl #6
     5c8:	03000d0d 	movweq	r0, #3341	; 0xd0d
     5cc:	3b0b3a08 	blcc	2cedf4 <_Min_Heap_Size+0x2ce5f4>
     5d0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     5d4:	000a3813 	andeq	r3, sl, r3, lsl r8
     5d8:	000d0e00 	andeq	r0, sp, r0, lsl #28
     5dc:	0b3a0e03 	bleq	e83df0 <_Min_Heap_Size+0xe835f0>
     5e0:	0b39053b 	bleq	e41ad4 <_Min_Heap_Size+0xe412d4>
     5e4:	0a381349 	beq	e05310 <_Min_Heap_Size+0xe04b10>
     5e8:	160f0000 	strne	r0, [pc], -r0
     5ec:	3a0e0300 	bcc	3811f4 <_Min_Heap_Size+0x3809f4>
     5f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     5f4:	0013490b 	andseq	r4, r3, fp, lsl #18
     5f8:	01131000 	tsteq	r3, r0
     5fc:	0b3a0b0b 	bleq	e83230 <_Min_Heap_Size+0xe82a30>
     600:	0b390b3b 	bleq	e432f4 <_Min_Heap_Size+0xe42af4>
     604:	00001301 	andeq	r1, r0, r1, lsl #6
     608:	03000d11 	movweq	r0, #3345	; 0xd11
     60c:	3b0b3a08 	blcc	2cee34 <_Min_Heap_Size+0x2ce634>
     610:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     614:	000a3813 	andeq	r3, sl, r3, lsl r8
     618:	000d1200 	andeq	r1, sp, r0, lsl #4
     61c:	0b3a0e03 	bleq	e83e30 <_Min_Heap_Size+0xe83630>
     620:	0b390b3b 	bleq	e43314 <_Min_Heap_Size+0xe42b14>
     624:	0a381349 	beq	e05350 <_Min_Heap_Size+0xe04b50>
     628:	13130000 	tstne	r3, #0
     62c:	0b0e0301 	bleq	381238 <_Min_Heap_Size+0x380a38>
     630:	3b0b3a0b 	blcc	2cee64 <_Min_Heap_Size+0x2ce664>
     634:	010b390b 	tsteq	fp, fp, lsl #18
     638:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     63c:	0b0b000f 	bleq	2c0680 <_Min_Heap_Size+0x2bfe80>
     640:	00001349 	andeq	r1, r0, r9, asr #6
     644:	0b000f15 	bleq	42a0 <_Min_Heap_Size+0x3aa0>
     648:	1600000b 	strne	r0, [r0], -fp
     64c:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
     650:	00001301 	andeq	r1, r0, r1, lsl #6
     654:	49000517 	stmdbmi	r0, {r0, r1, r2, r4, r8, sl}
     658:	18000013 	stmdane	r0, {r0, r1, r4}
     65c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     660:	0b3b0b3a 	bleq	ec3350 <_Min_Heap_Size+0xec2b50>
     664:	13490b39 	movtne	r0, #39737	; 0x9b39
     668:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     66c:	34190000 	ldrcc	r0, [r9], #-0
     670:	3a134700 	bcc	4d2278 <_Min_Heap_Size+0x4d1a78>
     674:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     678:	000a020b 	andeq	r0, sl, fp, lsl #4
     67c:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     680:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     684:	0b3b0b3a 	bleq	ec3374 <_Min_Heap_Size+0xec2b74>
     688:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     68c:	01120111 	tsteq	r2, r1, lsl r1
     690:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     694:	0013010c 	andseq	r0, r3, ip, lsl #2
     698:	00051b00 	andeq	r1, r5, r0, lsl #22
     69c:	0b3a0e03 	bleq	e83eb0 <_Min_Heap_Size+0xe836b0>
     6a0:	0b390b3b 	bleq	e43394 <_Min_Heap_Size+0xe42b94>
     6a4:	06021349 	streq	r1, [r2], -r9, asr #6
     6a8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     6ac:	82891c00 	addhi	r1, r9, #0, 24
     6b0:	01110101 	tsteq	r1, r1, lsl #2
     6b4:	13011331 	movwne	r1, #4913	; 0x1331
     6b8:	8a1d0000 	bhi	7406c0 <_Min_Heap_Size+0x73fec0>
     6bc:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     6c0:	0a42910a 	beq	10a4af0 <_Min_Heap_Size+0x10a42f0>
     6c4:	891e0000 	ldmdbhi	lr, {}	; <UNPREDICTABLE>
     6c8:	11010182 	smlabbne	r1, r2, r1, r0
     6cc:	00133101 	andseq	r3, r3, r1, lsl #2
     6d0:	00341f00 	eorseq	r1, r4, r0, lsl #30
     6d4:	0b3a0e03 	bleq	e83ee8 <_Min_Heap_Size+0xe836e8>
     6d8:	0b390b3b 	bleq	e433cc <_Min_Heap_Size+0xe42bcc>
     6dc:	0a021349 	beq	85408 <_Min_Heap_Size+0x84c08>
     6e0:	0b200000 	bleq	8006e8 <_Min_Heap_Size+0x7ffee8>
     6e4:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     6e8:	00130101 	andseq	r0, r3, r1, lsl #2
     6ec:	82892100 	addhi	r2, r9, #0, 2
     6f0:	01110001 	tsteq	r1, r1
     6f4:	00001331 	andeq	r1, r0, r1, lsr r3
     6f8:	3f002e22 	svccc	0x00002e22
     6fc:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     700:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     704:	0b3b0b3a 	bleq	ec33f4 <_Min_Heap_Size+0xec2bf4>
     708:	00000b39 	andeq	r0, r0, r9, lsr fp
     70c:	3f002e23 	svccc	0x00002e23
     710:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     714:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     718:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     71c:	00000b39 	andeq	r0, r0, r9, lsr fp
     720:	01110100 	tsteq	r1, r0, lsl #2
     724:	0b130e25 	bleq	4c3fc0 <_Min_Heap_Size+0x4c37c0>
     728:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     72c:	01110655 	tsteq	r1, r5, asr r6
     730:	06100152 			; <UNDEFINED> instruction: 0x06100152
     734:	24020000 	strcs	r0, [r2], #-0
     738:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     73c:	000e030b 	andeq	r0, lr, fp, lsl #6
     740:	00160300 	andseq	r0, r6, r0, lsl #6
     744:	0b3a0e03 	bleq	e83f58 <_Min_Heap_Size+0xe83758>
     748:	0b390b3b 	bleq	e4343c <_Min_Heap_Size+0xe42c3c>
     74c:	00001349 	andeq	r1, r0, r9, asr #6
     750:	0b002404 	bleq	9768 <_Min_Heap_Size+0x8f68>
     754:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     758:	05000008 	streq	r0, [r0, #-8]
     75c:	13490035 	movtne	r0, #36917	; 0x9035
     760:	01060000 	mrseq	r0, (UNDEF: 6)
     764:	01134901 	tsteq	r3, r1, lsl #18
     768:	07000013 	smladeq	r0, r3, r0, r0
     76c:	13490021 	movtne	r0, #36897	; 0x9021
     770:	00000b2f 	andeq	r0, r0, pc, lsr #22
     774:	0b011308 	bleq	4539c <_Min_Heap_Size+0x44b9c>
     778:	3b0b3a0b 	blcc	2cefac <_Min_Heap_Size+0x2ce7ac>
     77c:	010b3905 	tsteq	fp, r5, lsl #18
     780:	09000013 	stmdbeq	r0, {r0, r1, r4}
     784:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     788:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     78c:	13490b39 	movtne	r0, #39737	; 0x9b39
     790:	00000a38 	andeq	r0, r0, r8, lsr sl
     794:	03000d0a 	movweq	r0, #3338	; 0xd0a
     798:	3b0b3a0e 	blcc	2cefd8 <_Min_Heap_Size+0x2ce7d8>
     79c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     7a0:	000a3813 	andeq	r3, sl, r3, lsl r8
     7a4:	00160b00 	andseq	r0, r6, r0, lsl #22
     7a8:	0b3a0e03 	bleq	e83fbc <_Min_Heap_Size+0xe837bc>
     7ac:	0b39053b 	bleq	e41ca0 <_Min_Heap_Size+0xe414a0>
     7b0:	00001349 	andeq	r1, r0, r9, asr #6
     7b4:	3f012e0c 	svccc	0x00012e0c
     7b8:	3a0e030c 	bcc	3813f0 <_Min_Heap_Size+0x380bf0>
     7bc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7c0:	110c270b 	tstne	ip, fp, lsl #14
     7c4:	40011201 	andmi	r1, r1, r1, lsl #4
     7c8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     7cc:	0b0d0000 	bleq	3407d4 <_Min_Heap_Size+0x33ffd4>
     7d0:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     7d4:	00130101 	andseq	r0, r3, r1, lsl #2
     7d8:	00340e00 	eorseq	r0, r4, r0, lsl #28
     7dc:	0b3a0e03 	bleq	e83ff0 <_Min_Heap_Size+0xe837f0>
     7e0:	0b390b3b 	bleq	e434d4 <_Min_Heap_Size+0xe42cd4>
     7e4:	0a021349 	beq	85510 <_Min_Heap_Size+0x84d10>
     7e8:	0b0f0000 	bleq	3c07f0 <_Min_Heap_Size+0x3bfff0>
     7ec:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     7f0:	00000001 	andeq	r0, r0, r1
     7f4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     7f8:	030b130e 	movweq	r1, #45838	; 0xb30e
     7fc:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     800:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     804:	00061001 	andeq	r1, r6, r1
     808:	00240200 	eoreq	r0, r4, r0, lsl #4
     80c:	0b3e0b0b 	bleq	f83440 <_Min_Heap_Size+0xf82c40>
     810:	00000e03 	andeq	r0, r0, r3, lsl #28
     814:	03001603 	movweq	r1, #1539	; 0x603
     818:	3b0b3a0e 	blcc	2cf058 <_Min_Heap_Size+0x2ce858>
     81c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     820:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     824:	0b0b0024 	bleq	2c08bc <_Min_Heap_Size+0x2c00bc>
     828:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     82c:	26050000 	strcs	r0, [r5], -r0
     830:	00134900 	andseq	r4, r3, r0, lsl #18
     834:	00350600 	eorseq	r0, r5, r0, lsl #12
     838:	00001349 	andeq	r1, r0, r9, asr #6
     83c:	0b011307 	bleq	45460 <_Min_Heap_Size+0x44c60>
     840:	3b0b3a0b 	blcc	2cf074 <_Min_Heap_Size+0x2ce874>
     844:	010b3905 	tsteq	fp, r5, lsl #18
     848:	08000013 	stmdaeq	r0, {r0, r1, r4}
     84c:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     850:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     854:	13490b39 	movtne	r0, #39737	; 0x9b39
     858:	00000a38 	andeq	r0, r0, r8, lsr sl
     85c:	03000d09 	movweq	r0, #3337	; 0xd09
     860:	3b0b3a0e 	blcc	2cf0a0 <_Min_Heap_Size+0x2ce8a0>
     864:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     868:	000a3813 	andeq	r3, sl, r3, lsl r8
     86c:	00160a00 	andseq	r0, r6, r0, lsl #20
     870:	0b3a0e03 	bleq	e84084 <_Min_Heap_Size+0xe83884>
     874:	0b39053b 	bleq	e41d68 <_Min_Heap_Size+0xe41568>
     878:	00001349 	andeq	r1, r0, r9, asr #6
     87c:	3e01040b 	cdpcc	4, 0, cr0, cr1, cr11, {0}
     880:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
     884:	3b0b3a13 	blcc	2cf0d8 <_Min_Heap_Size+0x2ce8d8>
     888:	010b390b 	tsteq	fp, fp, lsl #18
     88c:	0c000013 	stceq	0, cr0, [r0], {19}
     890:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     894:	00000b1c 	andeq	r0, r0, ip, lsl fp
     898:	0300280d 	movweq	r2, #2061	; 0x80d
     89c:	000b1c08 	andeq	r1, fp, r8, lsl #24
     8a0:	01130e00 	tsteq	r3, r0, lsl #28
     8a4:	0b3a0b0b 	bleq	e834d8 <_Min_Heap_Size+0xe82cd8>
     8a8:	0b390b3b 	bleq	e4359c <_Min_Heap_Size+0xe42d9c>
     8ac:	00001301 	andeq	r1, r0, r1, lsl #6
     8b0:	03000d0f 	movweq	r0, #3343	; 0xd0f
     8b4:	3b0b3a0e 	blcc	2cf0f4 <_Min_Heap_Size+0x2ce8f4>
     8b8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     8bc:	000a3813 	andeq	r3, sl, r3, lsl r8
     8c0:	01131000 	tsteq	r3, r0
     8c4:	0b0b0e03 	bleq	2c40d8 <_Min_Heap_Size+0x2c38d8>
     8c8:	0b3b0b3a 	bleq	ec35b8 <_Min_Heap_Size+0xec2db8>
     8cc:	13010b39 	movwne	r0, #6969	; 0x1b39
     8d0:	0f110000 	svceq	0x00110000
     8d4:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     8d8:	12000013 	andne	r0, r0, #19
     8dc:	0b0b000f 	bleq	2c0920 <_Min_Heap_Size+0x2c0120>
     8e0:	15130000 	ldrne	r0, [r3, #-0]
     8e4:	010c2701 	tsteq	ip, r1, lsl #14
     8e8:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     8ec:	13490005 	movtne	r0, #36869	; 0x9005
     8f0:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
     8f4:	3a0e0301 	bcc	381500 <_Min_Heap_Size+0x380d00>
     8f8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     8fc:	110c270b 	tstne	ip, fp, lsl #14
     900:	40011201 	andmi	r1, r1, r1, lsl #4
     904:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     908:	00001301 	andeq	r1, r0, r1, lsl #6
     90c:	03000516 	movweq	r0, #1302	; 0x516
     910:	3b0b3a0e 	blcc	2cf150 <_Min_Heap_Size+0x2ce950>
     914:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     918:	b7060213 	smladlt	r6, r3, r2, r0
     91c:	00000642 	andeq	r0, r0, r2, asr #12
     920:	03003417 	movweq	r3, #1047	; 0x417
     924:	3b0b3a0e 	blcc	2cf164 <_Min_Heap_Size+0x2ce964>
     928:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     92c:	b7060213 	smladlt	r6, r3, r2, r0
     930:	00000642 	andeq	r0, r0, r2, asr #12
     934:	01828918 	orreq	r8, r2, r8, lsl r9
     938:	31011101 	tstcc	r1, r1, lsl #2
     93c:	00130113 	andseq	r0, r3, r3, lsl r1
     940:	828a1900 	addhi	r1, sl, #0, 18
     944:	0a020001 	beq	80950 <_Min_Heap_Size+0x80150>
     948:	000a4291 	muleq	sl, r1, r2
     94c:	82891a00 	addhi	r1, r9, #0, 20
     950:	01110001 	tsteq	r1, r1
     954:	00001331 	andeq	r1, r0, r1, lsr r3
     958:	03012e1b 	movweq	r2, #7707	; 0x1e1b
     95c:	3b0b3a0e 	blcc	2cf19c <_Min_Heap_Size+0x2ce99c>
     960:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     964:	1113490c 	tstne	r3, ip, lsl #18
     968:	40011201 	andmi	r1, r1, r1, lsl #4
     96c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     970:	00001301 	andeq	r1, r0, r1, lsl #6
     974:	11010b1c 	tstne	r1, ip, lsl fp
     978:	01011201 	tsteq	r1, r1, lsl #4
     97c:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
     980:	08030034 	stmdaeq	r3, {r2, r4, r5}
     984:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     988:	13490b39 	movtne	r0, #39737	; 0x9b39
     98c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     990:	1e000006 	cdpne	0, 0, cr0, cr0, cr6, {0}
     994:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     998:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     99c:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
     9a0:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     9a4:	010b5705 	tsteq	fp, r5, lsl #14
     9a8:	1f000013 	svcne	0x00000013
     9ac:	13310005 	teqne	r1, #5
     9b0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     9b4:	20000006 	andcs	r0, r0, r6
     9b8:	13310034 	teqne	r1, #52	; 0x34
     9bc:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     9c0:	21000006 	tstcs	r0, r6
     9c4:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     9c8:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     9cc:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
     9d0:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     9d4:	000b5705 	andeq	r5, fp, r5, lsl #14
     9d8:	00342200 	eorseq	r2, r4, r0, lsl #4
     9dc:	0b3a0e03 	bleq	e841f0 <_Min_Heap_Size+0xe839f0>
     9e0:	0b39053b 	bleq	e41ed4 <_Min_Heap_Size+0xe416d4>
     9e4:	0a021349 	beq	85710 <_Min_Heap_Size+0x84f10>
     9e8:	89230000 	stmdbhi	r3!, {}	; <UNPREDICTABLE>
     9ec:	11010182 	smlabbne	r1, r2, r1, r0
     9f0:	00133101 	andseq	r3, r3, r1, lsl #2
     9f4:	012e2400 			; <UNDEFINED> instruction: 0x012e2400
     9f8:	0b3a0e03 	bleq	e8420c <_Min_Heap_Size+0xe83a0c>
     9fc:	0b39053b 	bleq	e41ef0 <_Min_Heap_Size+0xe416f0>
     a00:	13490c27 	movtne	r0, #39975	; 0x9c27
     a04:	01120111 	tsteq	r2, r1, lsl r1
     a08:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     a0c:	0013010c 	andseq	r0, r3, ip, lsl #2
     a10:	012e2500 			; <UNDEFINED> instruction: 0x012e2500
     a14:	0b3a0e03 	bleq	e84228 <_Min_Heap_Size+0xe83a28>
     a18:	0b39053b 	bleq	e41f0c <_Min_Heap_Size+0xe4170c>
     a1c:	01110c27 	tsteq	r1, r7, lsr #24
     a20:	0a400112 	beq	1000e70 <_Min_Heap_Size+0x1000670>
     a24:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     a28:	26000013 			; <UNDEFINED> instruction: 0x26000013
     a2c:	0111010b 	tsteq	r1, fp, lsl #2
     a30:	00000112 	andeq	r0, r0, r2, lsl r1
     a34:	3f012e27 	svccc	0x00012e27
     a38:	3a0e030c 	bcc	381670 <_Min_Heap_Size+0x380e70>
     a3c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     a40:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     a44:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     a48:	97064001 	strls	r4, [r6, -r1]
     a4c:	13010c42 	movwne	r0, #7234	; 0x1c42
     a50:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
     a54:	030c3f01 	movweq	r3, #52993	; 0xcf01
     a58:	3b0b3a0e 	blcc	2cf298 <_Min_Heap_Size+0x2cea98>
     a5c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     a60:	1113490c 	tstne	r3, ip, lsl #18
     a64:	40011201 	andmi	r1, r1, r1, lsl #4
     a68:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     a6c:	00001301 	andeq	r1, r0, r1, lsl #6
     a70:	03000529 	movweq	r0, #1321	; 0x529
     a74:	3b0b3a0e 	blcc	2cf2b4 <_Min_Heap_Size+0x2ceab4>
     a78:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     a7c:	000a0213 	andeq	r0, sl, r3, lsl r2
     a80:	012e2a00 			; <UNDEFINED> instruction: 0x012e2a00
     a84:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     a88:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     a8c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     a90:	01120111 	tsteq	r2, r1, lsl r1
     a94:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     a98:	0013010c 	andseq	r0, r3, ip, lsl #2
     a9c:	012e2b00 			; <UNDEFINED> instruction: 0x012e2b00
     aa0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     aa4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     aa8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     aac:	01120111 	tsteq	r2, r1, lsl r1
     ab0:	42960640 	addsmi	r0, r6, #64, 12	; 0x4000000
     ab4:	0013010c 	andseq	r0, r3, ip, lsl #2
     ab8:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
     abc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     ac0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     ac4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     ac8:	01111349 	tsteq	r1, r9, asr #6
     acc:	06400112 			; <UNDEFINED> instruction: 0x06400112
     ad0:	010c4296 			; <UNDEFINED> instruction: 0x010c4296
     ad4:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
     ad8:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
     adc:	00001301 	andeq	r1, r0, r1, lsl #6
     ae0:	03012e2e 	movweq	r2, #7726	; 0x1e2e
     ae4:	3b0b3a0e 	blcc	2cf324 <_Min_Heap_Size+0x2ceb24>
     ae8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     aec:	2013490c 	andscs	r4, r3, ip, lsl #18
     af0:	0013010b 	andseq	r0, r3, fp, lsl #2
     af4:	00052f00 	andeq	r2, r5, r0, lsl #30
     af8:	0b3a0e03 	bleq	e8430c <_Min_Heap_Size+0xe83b0c>
     afc:	0b39053b 	bleq	e41ff0 <_Min_Heap_Size+0xe417f0>
     b00:	00001349 	andeq	r1, r0, r9, asr #6
     b04:	03003430 	movweq	r3, #1072	; 0x430
     b08:	3b0b3a0e 	blcc	2cf348 <_Min_Heap_Size+0x2ceb48>
     b0c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     b10:	31000013 	tstcc	r0, r3, lsl r0
     b14:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; a64 <_Min_Heap_Size+0x264>
     b18:	40870c3c 	addmi	r0, r7, ip, lsr ip
     b1c:	3a0e030e 	bcc	38175c <_Min_Heap_Size+0x380f5c>
     b20:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b24:	3200000b 	andcc	r0, r0, #11
     b28:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; a78 <_Min_Heap_Size+0x278>
     b2c:	40870c3c 	addmi	r0, r7, ip, lsr ip
     b30:	000e030e 	andeq	r0, lr, lr, lsl #6
     b34:	002e3300 	eoreq	r3, lr, r0, lsl #6
     b38:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     b3c:	030e4087 	movweq	r4, #57479	; 0xe087
     b40:	3b0b3a0e 	blcc	2cf380 <_Min_Heap_Size+0x2ceb80>
     b44:	000b390b 	andeq	r3, fp, fp, lsl #18
     b48:	11010000 	mrsne	r0, (UNDEF: 1)
     b4c:	130e2501 	movwne	r2, #58625	; 0xe501
     b50:	1b0e030b 	blne	381784 <_Min_Heap_Size+0x380f84>
     b54:	1106550e 	tstne	r6, lr, lsl #10
     b58:	10015201 	andne	r5, r1, r1, lsl #4
     b5c:	02000006 	andeq	r0, r0, #6
     b60:	0b0b0024 	bleq	2c0bf8 <_Min_Heap_Size+0x2c03f8>
     b64:	0e030b3e 	vmoveq.16	d3[0], r0
     b68:	16030000 	strne	r0, [r3], -r0
     b6c:	3a0e0300 	bcc	381774 <_Min_Heap_Size+0x380f74>
     b70:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b74:	0013490b 	andseq	r4, r3, fp, lsl #18
     b78:	00240400 	eoreq	r0, r4, r0, lsl #8
     b7c:	0b3e0b0b 	bleq	f837b0 <_Min_Heap_Size+0xf82fb0>
     b80:	00000803 	andeq	r0, r0, r3, lsl #16
     b84:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     b88:	06000013 			; <UNDEFINED> instruction: 0x06000013
     b8c:	13490035 	movtne	r0, #36917	; 0x9035
     b90:	01070000 	mrseq	r0, (UNDEF: 7)
     b94:	01134901 	tsteq	r3, r1, lsl #18
     b98:	08000013 	stmdaeq	r0, {r0, r1, r4}
     b9c:	13490021 	movtne	r0, #36897	; 0x9021
     ba0:	00000b2f 	andeq	r0, r0, pc, lsr #22
     ba4:	03003409 	movweq	r3, #1033	; 0x409
     ba8:	3b0b3a0e 	blcc	2cf3e8 <_Min_Heap_Size+0x2cebe8>
     bac:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     bb0:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     bb4:	0a00000c 	beq	bec <_Min_Heap_Size+0x3ec>
     bb8:	0b0b0113 	bleq	2c100c <_Min_Heap_Size+0x2c080c>
     bbc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     bc0:	13010b39 	movwne	r0, #6969	; 0x1b39
     bc4:	0d0b0000 	stceq	0, cr0, [fp, #-0]
     bc8:	3a080300 	bcc	2017d0 <_Min_Heap_Size+0x200fd0>
     bcc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     bd0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     bd4:	0c00000a 	stceq	0, cr0, [r0], {10}
     bd8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     bdc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     be0:	13490b39 	movtne	r0, #39737	; 0x9b39
     be4:	00000a38 	andeq	r0, r0, r8, lsr sl
     be8:	0300160d 	movweq	r1, #1549	; 0x60d
     bec:	3b0b3a0e 	blcc	2cf42c <_Min_Heap_Size+0x2cec2c>
     bf0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     bf4:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     bf8:	0b3e0104 	bleq	f81010 <_Min_Heap_Size+0xf80810>
     bfc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     c00:	0b3b0b3a 	bleq	ec38f0 <_Min_Heap_Size+0xec30f0>
     c04:	13010b39 	movwne	r0, #6969	; 0x1b39
     c08:	280f0000 	stmdacs	pc, {}	; <UNPREDICTABLE>
     c0c:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     c10:	1000000b 	andne	r0, r0, fp
     c14:	08030028 	stmdaeq	r3, {r3, r5}
     c18:	00000b1c 	andeq	r0, r0, ip, lsl fp
     c1c:	0b011311 	bleq	45868 <_Min_Heap_Size+0x45068>
     c20:	3b0b3a0b 	blcc	2cf454 <_Min_Heap_Size+0x2cec54>
     c24:	010b390b 	tsteq	fp, fp, lsl #18
     c28:	12000013 	andne	r0, r0, #19
     c2c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     c30:	0b3b0b3a 	bleq	ec3920 <_Min_Heap_Size+0xec3120>
     c34:	13490b39 	movtne	r0, #39737	; 0x9b39
     c38:	00000a38 	andeq	r0, r0, r8, lsr sl
     c3c:	03000d13 	movweq	r0, #3347	; 0xd13
     c40:	3b0b3a08 	blcc	2cf468 <_Min_Heap_Size+0x2cec68>
     c44:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     c48:	000a3813 	andeq	r3, sl, r3, lsl r8
     c4c:	002e1400 	eoreq	r1, lr, r0, lsl #8
     c50:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     c54:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     c58:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     c5c:	01120111 	tsteq	r2, r1, lsl r1
     c60:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     c64:	1500000c 	strne	r0, [r0, #-12]
     c68:	0c3f012e 	ldfeqs	f0, [pc], #-184	; bb8 <_Min_Heap_Size+0x3b8>
     c6c:	0b3a0e03 	bleq	e84480 <_Min_Heap_Size+0xe83c80>
     c70:	0b39053b 	bleq	e42164 <_Min_Heap_Size+0xe41964>
     c74:	01110c27 	tsteq	r1, r7, lsr #24
     c78:	06400112 			; <UNDEFINED> instruction: 0x06400112
     c7c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     c80:	16000013 			; <UNDEFINED> instruction: 0x16000013
     c84:	00018289 	andeq	r8, r1, r9, lsl #5
     c88:	13310111 	teqne	r1, #1073741828	; 0x40000004
     c8c:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
     c90:	030c3f01 	movweq	r3, #52993	; 0xcf01
     c94:	3b0b3a0e 	blcc	2cf4d4 <_Min_Heap_Size+0x2cecd4>
     c98:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     c9c:	1201110c 	andne	r1, r1, #12, 2
     ca0:	970a4001 	strls	r4, [sl, -r1]
     ca4:	13010c42 	movwne	r0, #7234	; 0x1c42
     ca8:	05180000 	ldreq	r0, [r8, #-0]
     cac:	3a0e0300 	bcc	3818b4 <_Min_Heap_Size+0x3810b4>
     cb0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     cb4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     cb8:	1900000a 	stmdbne	r0, {r1, r3}
     cbc:	0b0b000f 	bleq	2c0d00 <_Min_Heap_Size+0x2c0500>
     cc0:	00001349 	andeq	r1, r0, r9, asr #6
     cc4:	3f012e1a 	svccc	0x00012e1a
     cc8:	3a0e030c 	bcc	381900 <_Min_Heap_Size+0x381100>
     ccc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     cd0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     cd4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     cd8:	97064001 	strls	r4, [r6, -r1]
     cdc:	13010c42 	movwne	r0, #7234	; 0x1c42
     ce0:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
     ce4:	030c3f00 	movweq	r3, #52992	; 0xcf00
     ce8:	3b0b3a0e 	blcc	2cf528 <_Min_Heap_Size+0x2ced28>
     cec:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     cf0:	1113490c 	tstne	r3, ip, lsl #18
     cf4:	40011201 	andmi	r1, r1, r1, lsl #4
     cf8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     cfc:	341c0000 	ldrcc	r0, [ip], #-0
     d00:	3a0e0300 	bcc	381908 <_Min_Heap_Size+0x381108>
     d04:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d08:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     d0c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     d10:	051d0000 	ldreq	r0, [sp, #-0]
     d14:	3a0e0300 	bcc	38191c <_Min_Heap_Size+0x38111c>
     d18:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d1c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     d20:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     d24:	341e0000 	ldrcc	r0, [lr], #-0
     d28:	3a0e0300 	bcc	381930 <_Min_Heap_Size+0x381130>
     d2c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     d30:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     d34:	1f00000a 	svcne	0x0000000a
     d38:	0111010b 	tsteq	r1, fp, lsl #2
     d3c:	13010112 	movwne	r0, #4370	; 0x1112
     d40:	89200000 	stmdbhi	r0!, {}	; <UNPREDICTABLE>
     d44:	11010182 	smlabbne	r1, r2, r1, r0
     d48:	01133101 	tsteq	r3, r1, lsl #2
     d4c:	21000013 	tstcs	r0, r3, lsl r0
     d50:	0001828a 	andeq	r8, r1, sl, lsl #5
     d54:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     d58:	2200000a 	andcs	r0, r0, #10
     d5c:	01018289 	smlabbeq	r1, r9, r2, r8
     d60:	13310111 	teqne	r1, #1073741828	; 0x40000004
     d64:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
     d68:	030c3f01 	movweq	r3, #52993	; 0xcf01
     d6c:	3b0b3a0e 	blcc	2cf5ac <_Min_Heap_Size+0x2cedac>
     d70:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     d74:	1113490c 	tstne	r3, ip, lsl #18
     d78:	40011201 	andmi	r1, r1, r1, lsl #4
     d7c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     d80:	00001301 	andeq	r1, r0, r1, lsl #6
     d84:	03000524 	movweq	r0, #1316	; 0x524
     d88:	3b0b3a0e 	blcc	2cf5c8 <_Min_Heap_Size+0x2cedc8>
     d8c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     d90:	b7060213 	smladlt	r6, r3, r2, r0
     d94:	00000642 	andeq	r0, r0, r2, asr #12
     d98:	03003425 	movweq	r3, #1061	; 0x425
     d9c:	3b0b3a0e 	blcc	2cf5dc <_Min_Heap_Size+0x2ceddc>
     da0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     da4:	b7060213 	smladlt	r6, r3, r2, r0
     da8:	00000642 	andeq	r0, r0, r2, asr #12
     dac:	55010b26 	strpl	r0, [r1, #-2854]	; 0xfffff4da
     db0:	00130106 	andseq	r0, r3, r6, lsl #2
     db4:	002e2700 	eoreq	r2, lr, r0, lsl #14
     db8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     dbc:	0b3b0b3a 	bleq	ec3aac <_Min_Heap_Size+0xec32ac>
     dc0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     dc4:	01111349 	tsteq	r1, r9, asr #6
     dc8:	0a400112 	beq	1001218 <_Min_Heap_Size+0x1000a18>
     dcc:	000c4297 	muleq	ip, r7, r2
     dd0:	002e2800 	eoreq	r2, lr, r0, lsl #16
     dd4:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     dd8:	030e4087 	movweq	r4, #57479	; 0xe087
     ddc:	2900000e 	stmdbcs	r0, {r1, r2, r3}
     de0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; d30 <_Min_Heap_Size+0x530>
     de4:	40870c3c 	addmi	r0, r7, ip, lsr ip
     de8:	3a0e030e 	bcc	381a28 <_Min_Heap_Size+0x381228>
     dec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     df0:	2a00000b 	bcs	e24 <_Min_Heap_Size+0x624>
     df4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; d44 <_Min_Heap_Size+0x544>
     df8:	40870c3c 	addmi	r0, r7, ip, lsr ip
     dfc:	3a0e030e 	bcc	381a3c <_Min_Heap_Size+0x38123c>
     e00:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e04:	0000000b 	andeq	r0, r0, fp
     e08:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     e0c:	030b130e 	movweq	r1, #45838	; 0xb30e
     e10:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     e14:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     e18:	00061001 	andeq	r1, r6, r1
     e1c:	00240200 	eoreq	r0, r4, r0, lsl #4
     e20:	0b3e0b0b 	bleq	f83a54 <_Min_Heap_Size+0xf83254>
     e24:	00000e03 	andeq	r0, r0, r3, lsl #28
     e28:	03001603 	movweq	r1, #1539	; 0x603
     e2c:	3b0b3a0e 	blcc	2cf66c <_Min_Heap_Size+0x2cee6c>
     e30:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     e34:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     e38:	0b0b0024 	bleq	2c0ed0 <_Min_Heap_Size+0x2c06d0>
     e3c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     e40:	35050000 	strcc	r0, [r5, #-0]
     e44:	00134900 	andseq	r4, r3, r0, lsl #18
     e48:	01010600 	tsteq	r1, r0, lsl #12
     e4c:	13011349 	movwne	r1, #4937	; 0x1349
     e50:	21070000 	mrscs	r0, (UNDEF: 7)
     e54:	2f134900 	svccs	0x00134900
     e58:	0800000b 	stmdaeq	r0, {r0, r1, r3}
     e5c:	0b0b0113 	bleq	2c12b0 <_Min_Heap_Size+0x2c0ab0>
     e60:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e64:	13010b39 	movwne	r0, #6969	; 0x1b39
     e68:	0d090000 	stceq	0, cr0, [r9, #-0]
     e6c:	3a080300 	bcc	201a74 <_Min_Heap_Size+0x201274>
     e70:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     e74:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     e78:	0a00000a 	beq	ea8 <_Min_Heap_Size+0x6a8>
     e7c:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     e80:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e84:	13490b39 	movtne	r0, #39737	; 0x9b39
     e88:	00000a38 	andeq	r0, r0, r8, lsr sl
     e8c:	0300160b 	movweq	r1, #1547	; 0x60b
     e90:	3b0b3a0e 	blcc	2cf6d0 <_Min_Heap_Size+0x2ceed0>
     e94:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     e98:	0c000013 	stceq	0, cr0, [r0], {19}
     e9c:	0b3e0104 	bleq	f812b4 <_Min_Heap_Size+0xf80ab4>
     ea0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     ea4:	0b3b0b3a 	bleq	ec3b94 <_Min_Heap_Size+0xec3394>
     ea8:	13010b39 	movwne	r0, #6969	; 0x1b39
     eac:	280d0000 	stmdacs	sp, {}	; <UNPREDICTABLE>
     eb0:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     eb4:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
     eb8:	08030028 	stmdaeq	r3, {r3, r5}
     ebc:	00000b1c 	andeq	r0, r0, ip, lsl fp
     ec0:	0b01130f 	bleq	45b04 <_Min_Heap_Size+0x45304>
     ec4:	3b0b3a0b 	blcc	2cf6f8 <_Min_Heap_Size+0x2ceef8>
     ec8:	010b390b 	tsteq	fp, fp, lsl #18
     ecc:	10000013 	andne	r0, r0, r3, lsl r0
     ed0:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     ed4:	0b3b0b3a 	bleq	ec3bc4 <_Min_Heap_Size+0xec33c4>
     ed8:	13490b39 	movtne	r0, #39737	; 0x9b39
     edc:	00000a38 	andeq	r0, r0, r8, lsr sl
     ee0:	03000d11 	movweq	r0, #3345	; 0xd11
     ee4:	3b0b3a0e 	blcc	2cf724 <_Min_Heap_Size+0x2cef24>
     ee8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     eec:	000a3813 	andeq	r3, sl, r3, lsl r8
     ef0:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
     ef4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     ef8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     efc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     f00:	01120111 	tsteq	r2, r1, lsl r1
     f04:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     f08:	0013010c 	andseq	r0, r3, ip, lsl #2
     f0c:	00051300 	andeq	r1, r5, r0, lsl #6
     f10:	0b3a0e03 	bleq	e84724 <_Min_Heap_Size+0xe83f24>
     f14:	0b39053b 	bleq	e42408 <_Min_Heap_Size+0xe41c08>
     f18:	0a021349 	beq	85c44 <_Min_Heap_Size+0x85444>
     f1c:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
     f20:	030c3f01 	movweq	r3, #52993	; 0xcf01
     f24:	3b0b3a0e 	blcc	2cf764 <_Min_Heap_Size+0x2cef64>
     f28:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     f2c:	1201110c 	andne	r1, r1, #12, 2
     f30:	97064001 	strls	r4, [r6, -r1]
     f34:	13010c42 	movwne	r0, #7234	; 0x1c42
     f38:	05150000 	ldreq	r0, [r5, #-0]
     f3c:	3a0e0300 	bcc	381b44 <_Min_Heap_Size+0x381344>
     f40:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     f44:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     f48:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     f4c:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
     f50:	11000182 	smlabbne	r0, r2, r1, r0
     f54:	00133101 	andseq	r3, r3, r1, lsl #2
     f58:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
     f5c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     f60:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     f64:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     f68:	01111349 	tsteq	r1, r9, asr #6
     f6c:	06400112 			; <UNDEFINED> instruction: 0x06400112
     f70:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     f74:	18000013 	stmdane	r0, {r0, r1, r4}
     f78:	08030034 	stmdaeq	r3, {r2, r4, r5}
     f7c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     f80:	13490b39 	movtne	r0, #39737	; 0x9b39
     f84:	00000a02 	andeq	r0, r0, r2, lsl #20
     f88:	01828919 	orreq	r8, r2, r9, lsl r9
     f8c:	31011101 	tstcc	r1, r1, lsl #2
     f90:	1a000013 	bne	fe4 <_Min_Heap_Size+0x7e4>
     f94:	0001828a 	andeq	r8, r1, sl, lsl #5
     f98:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     f9c:	1b00000a 	blne	fcc <_Min_Heap_Size+0x7cc>
     fa0:	0b0b000f 	bleq	2c0fe4 <_Min_Heap_Size+0x2c07e4>
     fa4:	00001349 	andeq	r1, r0, r9, asr #6
     fa8:	0300341c 	movweq	r3, #1052	; 0x41c
     fac:	3b0b3a08 	blcc	2cf7d4 <_Min_Heap_Size+0x2cefd4>
     fb0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     fb4:	b7060213 	smladlt	r6, r3, r2, r0
     fb8:	00000642 	andeq	r0, r0, r2, asr #12
     fbc:	0182891d 	orreq	r8, r2, sp, lsl r9
     fc0:	31011101 	tstcc	r1, r1, lsl #2
     fc4:	00130113 	andseq	r0, r3, r3, lsl r1
     fc8:	00341e00 	eorseq	r1, r4, r0, lsl #28
     fcc:	0b3a0e03 	bleq	e847e0 <_Min_Heap_Size+0xe83fe0>
     fd0:	0b39053b 	bleq	e424c4 <_Min_Heap_Size+0xe41cc4>
     fd4:	06021349 	streq	r1, [r2], -r9, asr #6
     fd8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     fdc:	012e1f00 			; <UNDEFINED> instruction: 0x012e1f00
     fe0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     fe4:	0b3b0b3a 	bleq	ec3cd4 <_Min_Heap_Size+0xec34d4>
     fe8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     fec:	01120111 	tsteq	r2, r1, lsl r1
     ff0:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     ff4:	0013010c 	andseq	r0, r3, ip, lsl #2
     ff8:	00052000 	andeq	r2, r5, r0
     ffc:	0b3a0e03 	bleq	e84810 <_Min_Heap_Size+0xe84010>
    1000:	0b390b3b 	bleq	e43cf4 <_Min_Heap_Size+0xe434f4>
    1004:	06021349 	streq	r1, [r2], -r9, asr #6
    1008:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    100c:	00342100 	eorseq	r2, r4, r0, lsl #2
    1010:	0b3a0e03 	bleq	e84824 <_Min_Heap_Size+0xe84024>
    1014:	0b390b3b 	bleq	e43d08 <_Min_Heap_Size+0xe43508>
    1018:	06021349 	streq	r1, [r2], -r9, asr #6
    101c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1020:	010b2200 	mrseq	r2, R11_fiq
    1024:	01120111 	tsteq	r2, r1, lsl r1
    1028:	00001301 	andeq	r1, r0, r1, lsl #6
    102c:	03003423 	movweq	r3, #1059	; 0x423
    1030:	3b0b3a0e 	blcc	2cf870 <_Min_Heap_Size+0x2cf070>
    1034:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1038:	000a0213 	andeq	r0, sl, r3, lsl r2
    103c:	002e2400 	eoreq	r2, lr, r0, lsl #8
    1040:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1044:	030e4087 	movweq	r4, #57479	; 0xe087
    1048:	3b0b3a0e 	blcc	2cf888 <_Min_Heap_Size+0x2cf088>
    104c:	000b3905 	andeq	r3, fp, r5, lsl #18
    1050:	11010000 	mrsne	r0, (UNDEF: 1)
    1054:	130e2501 	movwne	r2, #58625	; 0xe501
    1058:	1b0e030b 	blne	381c8c <_Min_Heap_Size+0x38148c>
    105c:	1106550e 	tstne	r6, lr, lsl #10
    1060:	10015201 	andne	r5, r1, r1, lsl #4
    1064:	02000006 	andeq	r0, r0, #6
    1068:	0b0b0024 	bleq	2c1100 <_Min_Heap_Size+0x2c0900>
    106c:	0e030b3e 	vmoveq.16	d3[0], r0
    1070:	16030000 	strne	r0, [r3], -r0
    1074:	3a0e0300 	bcc	381c7c <_Min_Heap_Size+0x38147c>
    1078:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    107c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1080:	00240400 	eoreq	r0, r4, r0, lsl #8
    1084:	0b3e0b0b 	bleq	f83cb8 <_Min_Heap_Size+0xf834b8>
    1088:	00000803 	andeq	r0, r0, r3, lsl #16
    108c:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
    1090:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1094:	13490035 	movtne	r0, #36917	; 0x9035
    1098:	34070000 	strcc	r0, [r7], #-0
    109c:	3a0e0300 	bcc	381ca4 <_Min_Heap_Size+0x3814a4>
    10a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10a4:	3f13490b 	svccc	0x0013490b
    10a8:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    10ac:	01010800 	tsteq	r1, r0, lsl #16
    10b0:	13011349 	movwne	r1, #4937	; 0x1349
    10b4:	21090000 	mrscs	r0, (UNDEF: 9)
    10b8:	2f134900 	svccs	0x00134900
    10bc:	0a00000b 	beq	10f0 <_Min_Heap_Size+0x8f0>
    10c0:	0b0b0113 	bleq	2c1514 <_Min_Heap_Size+0x2c0d14>
    10c4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    10c8:	13010b39 	movwne	r0, #6969	; 0x1b39
    10cc:	0d0b0000 	stceq	0, cr0, [fp, #-0]
    10d0:	3a080300 	bcc	201cd8 <_Min_Heap_Size+0x2014d8>
    10d4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    10d8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    10dc:	0c00000a 	stceq	0, cr0, [r0], {10}
    10e0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    10e4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    10e8:	13490b39 	movtne	r0, #39737	; 0x9b39
    10ec:	00000a38 	andeq	r0, r0, r8, lsr sl
    10f0:	0300160d 	movweq	r1, #1549	; 0x60d
    10f4:	3b0b3a0e 	blcc	2cf934 <_Min_Heap_Size+0x2cf134>
    10f8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    10fc:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    1100:	0b3e0104 	bleq	f81518 <_Min_Heap_Size+0xf80d18>
    1104:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1108:	0b3b0b3a 	bleq	ec3df8 <_Min_Heap_Size+0xec35f8>
    110c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1110:	280f0000 	stmdacs	pc, {}	; <UNPREDICTABLE>
    1114:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    1118:	1000000b 	andne	r0, r0, fp
    111c:	08030028 	stmdaeq	r3, {r3, r5}
    1120:	00000b1c 	andeq	r0, r0, ip, lsl fp
    1124:	0b011311 	bleq	45d70 <_Min_Heap_Size+0x45570>
    1128:	3b0b3a0b 	blcc	2cf95c <_Min_Heap_Size+0x2cf15c>
    112c:	010b390b 	tsteq	fp, fp, lsl #18
    1130:	12000013 	andne	r0, r0, #19
    1134:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1138:	0b3b0b3a 	bleq	ec3e28 <_Min_Heap_Size+0xec3628>
    113c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1140:	00000a38 	andeq	r0, r0, r8, lsr sl
    1144:	03011313 	movweq	r1, #4883	; 0x1313
    1148:	3a0b0b0e 	bcc	2c3d88 <_Min_Heap_Size+0x2c3588>
    114c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1150:	0013010b 	andseq	r0, r3, fp, lsl #2
    1154:	000f1400 	andeq	r1, pc, r0, lsl #8
    1158:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    115c:	0f150000 	svceq	0x00150000
    1160:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1164:	01151600 	tsteq	r5, r0, lsl #12
    1168:	13010c27 	movwne	r0, #7207	; 0x1c27
    116c:	05170000 	ldreq	r0, [r7, #-0]
    1170:	00134900 	andseq	r4, r3, r0, lsl #18
    1174:	000d1800 	andeq	r1, sp, r0, lsl #16
    1178:	0b3a0803 	bleq	e8318c <_Min_Heap_Size+0xe8298c>
    117c:	0b390b3b 	bleq	e43e70 <_Min_Heap_Size+0xe43670>
    1180:	0a381349 	beq	e05eac <_Min_Heap_Size+0xe056ac>
    1184:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
    1188:	3a0e0301 	bcc	381d94 <_Min_Heap_Size+0x381594>
    118c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1190:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1194:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1198:	970a4001 	strls	r4, [sl, -r1]
    119c:	13010c42 	movwne	r0, #7234	; 0x1c42
    11a0:	051a0000 	ldreq	r0, [sl, #-0]
    11a4:	3a0e0300 	bcc	381dac <_Min_Heap_Size+0x3815ac>
    11a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11ac:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    11b0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    11b4:	341b0000 	ldrcc	r0, [fp], #-0
    11b8:	3a0e0300 	bcc	381dc0 <_Min_Heap_Size+0x3815c0>
    11bc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11c0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    11c4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    11c8:	341c0000 	ldrcc	r0, [ip], #-0
    11cc:	3a080300 	bcc	201dd4 <_Min_Heap_Size+0x2015d4>
    11d0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11d4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    11d8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    11dc:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
    11e0:	3a0e0301 	bcc	381dec <_Min_Heap_Size+0x3815ec>
    11e4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11e8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    11ec:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    11f0:	97064001 	strls	r4, [r6, -r1]
    11f4:	13010c42 	movwne	r0, #7234	; 0x1c42
    11f8:	341e0000 	ldrcc	r0, [lr], #-0
    11fc:	3a0e0300 	bcc	381e04 <_Min_Heap_Size+0x381604>
    1200:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1204:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1208:	1f00000a 	svcne	0x0000000a
    120c:	0e03012e 	adfeqsp	f0, f3, #0.5
    1210:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1214:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1218:	01120111 	tsteq	r2, r1, lsl r1
    121c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1220:	0013010c 	andseq	r0, r3, ip, lsl #2
    1224:	00052000 	andeq	r2, r5, r0
    1228:	0b3a0e03 	bleq	e84a3c <_Min_Heap_Size+0xe8423c>
    122c:	0b39053b 	bleq	e42720 <_Min_Heap_Size+0xe41f20>
    1230:	0a021349 	beq	85f5c <_Min_Heap_Size+0x8575c>
    1234:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    1238:	030c3f01 	movweq	r3, #52993	; 0xcf01
    123c:	3b0b3a0e 	blcc	2cfa7c <_Min_Heap_Size+0x2cf27c>
    1240:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1244:	1113490c 	tstne	r3, ip, lsl #18
    1248:	40011201 	andmi	r1, r1, r1, lsl #4
    124c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1250:	00001301 	andeq	r1, r0, r1, lsl #6
    1254:	3f012e22 	svccc	0x00012e22
    1258:	3a0e030c 	bcc	381e90 <_Min_Heap_Size+0x381690>
    125c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1260:	110c270b 	tstne	ip, fp, lsl #14
    1264:	40011201 	andmi	r1, r1, r1, lsl #4
    1268:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    126c:	00001301 	andeq	r1, r0, r1, lsl #6
    1270:	01828923 	orreq	r8, r2, r3, lsr #18
    1274:	01011101 	tsteq	r1, r1, lsl #2
    1278:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
    127c:	0001828a 	andeq	r8, r1, sl, lsl #5
    1280:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1284:	2500000a 	strcs	r0, [r0, #-10]
    1288:	01018289 	smlabbeq	r1, r9, r2, r8
    128c:	00000111 	andeq	r0, r0, r1, lsl r1
    1290:	3f012e26 	svccc	0x00012e26
    1294:	3a0e030c 	bcc	381ecc <_Min_Heap_Size+0x3816cc>
    1298:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    129c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    12a0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    12a4:	97064001 	strls	r4, [r6, -r1]
    12a8:	13010c42 	movwne	r0, #7234	; 0x1c42
    12ac:	34270000 	strtcc	r0, [r7], #-0
    12b0:	3a0e0300 	bcc	381eb8 <_Min_Heap_Size+0x3816b8>
    12b4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    12b8:	1c13490b 			; <UNDEFINED> instruction: 0x1c13490b
    12bc:	2800000b 	stmdacs	r0, {r0, r1, r3}
    12c0:	00018289 	andeq	r8, r1, r9, lsl #5
    12c4:	13310111 	teqne	r1, #1073741828	; 0x40000004
    12c8:	89290000 	stmdbhi	r9!, {}	; <UNPREDICTABLE>
    12cc:	11010182 	smlabbne	r1, r2, r1, r0
    12d0:	00133101 	andseq	r3, r3, r1, lsl #2
    12d4:	82892a00 	addhi	r2, r9, #0, 20
    12d8:	01110101 	tsteq	r1, r1, lsl #2
    12dc:	13011331 	movwne	r1, #4913	; 0x1331
    12e0:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
    12e4:	030c3f01 	movweq	r3, #52993	; 0xcf01
    12e8:	3b0b3a0e 	blcc	2cfb28 <_Min_Heap_Size+0x2cf328>
    12ec:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    12f0:	1113490c 	tstne	r3, ip, lsl #18
    12f4:	40011201 	andmi	r1, r1, r1, lsl #4
    12f8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    12fc:	00001301 	andeq	r1, r0, r1, lsl #6
    1300:	0300052c 	movweq	r0, #1324	; 0x52c
    1304:	3b0b3a0e 	blcc	2cfb44 <_Min_Heap_Size+0x2cf344>
    1308:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    130c:	b7060213 	smladlt	r6, r3, r2, r0
    1310:	00000642 	andeq	r0, r0, r2, asr #12
    1314:	0300342d 	movweq	r3, #1069	; 0x42d
    1318:	3b0b3a08 	blcc	2cfb40 <_Min_Heap_Size+0x2cf340>
    131c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1320:	b7060213 	smladlt	r6, r3, r2, r0
    1324:	00000642 	andeq	r0, r0, r2, asr #12
    1328:	0300342e 	movweq	r3, #1070	; 0x42e
    132c:	3b0b3a0e 	blcc	2cfb6c <_Min_Heap_Size+0x2cf36c>
    1330:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1334:	b7060213 	smladlt	r6, r3, r2, r0
    1338:	00000642 	andeq	r0, r0, r2, asr #12
    133c:	3f002e2f 	svccc	0x00002e2f
    1340:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1344:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1348:	0b3b0b3a 	bleq	ec4038 <_Min_Heap_Size+0xec3838>
    134c:	00000b39 	andeq	r0, r0, r9, lsr fp
    1350:	3f002e30 	svccc	0x00002e30
    1354:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1358:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    135c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1360:	00000b39 	andeq	r0, r0, r9, lsr fp
    1364:	01110100 	tsteq	r1, r0, lsl #2
    1368:	0b130e25 	bleq	4c4c04 <_Min_Heap_Size+0x4c4404>
    136c:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1370:	01110655 	tsteq	r1, r5, asr r6
    1374:	06100152 			; <UNDEFINED> instruction: 0x06100152
    1378:	04020000 	streq	r0, [r2], #-0
    137c:	0b0b3e01 	bleq	2d0b88 <_Min_Heap_Size+0x2d0388>
    1380:	3a13490b 	bcc	4d37b4 <_Min_Heap_Size+0x4d2fb4>
    1384:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1388:	0013010b 	andseq	r0, r3, fp, lsl #2
    138c:	00280300 	eoreq	r0, r8, r0, lsl #6
    1390:	0d1c0e03 	ldceq	14, cr0, [ip, #-12]
    1394:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
    1398:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    139c:	0500000b 	streq	r0, [r0, #-11]
    13a0:	0b0b0024 	bleq	2c1438 <_Min_Heap_Size+0x2c0c38>
    13a4:	0e030b3e 	vmoveq.16	d3[0], r0
    13a8:	16060000 	strne	r0, [r6], -r0
    13ac:	3a0e0300 	bcc	381fb4 <_Min_Heap_Size+0x3817b4>
    13b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    13b4:	0013490b 	andseq	r4, r3, fp, lsl #18
    13b8:	00240700 	eoreq	r0, r4, r0, lsl #14
    13bc:	0b3e0b0b 	bleq	f83ff0 <_Min_Heap_Size+0xf837f0>
    13c0:	00000803 	andeq	r0, r0, r3, lsl #16
    13c4:	49003508 	stmdbmi	r0, {r3, r8, sl, ip, sp}
    13c8:	09000013 	stmdbeq	r0, {r0, r1, r4}
    13cc:	13490026 	movtne	r0, #36902	; 0x9026
    13d0:	130a0000 	movwne	r0, #40960	; 0xa000
    13d4:	3a050b01 	bcc	143fe0 <_Min_Heap_Size+0x1437e0>
    13d8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    13dc:	0013010b 	andseq	r0, r3, fp, lsl #2
    13e0:	000d0b00 	andeq	r0, sp, r0, lsl #22
    13e4:	0b3a0e03 	bleq	e84bf8 <_Min_Heap_Size+0xe843f8>
    13e8:	0b39053b 	bleq	e428dc <_Min_Heap_Size+0xe420dc>
    13ec:	0a381349 	beq	e06118 <_Min_Heap_Size+0xe05918>
    13f0:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    13f4:	3a080300 	bcc	201ffc <_Min_Heap_Size+0x2017fc>
    13f8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    13fc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1400:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    1404:	13490101 	movtne	r0, #37121	; 0x9101
    1408:	00001301 	andeq	r1, r0, r1, lsl #6
    140c:	4900210e 	stmdbmi	r0, {r1, r2, r3, r8, sp}
    1410:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1414:	00210f00 	eoreq	r0, r1, r0, lsl #30
    1418:	052f1349 	streq	r1, [pc, #-841]!	; 10d7 <_Min_Heap_Size+0x8d7>
    141c:	16100000 	ldrne	r0, [r0], -r0
    1420:	3a0e0300 	bcc	382028 <_Min_Heap_Size+0x381828>
    1424:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1428:	0013490b 	andseq	r4, r3, fp, lsl #18
    142c:	01131100 	tsteq	r3, r0, lsl #2
    1430:	0b3a0b0b 	bleq	e84064 <_Min_Heap_Size+0xe83864>
    1434:	0b39053b 	bleq	e42928 <_Min_Heap_Size+0xe42128>
    1438:	00001301 	andeq	r1, r0, r1, lsl #6
    143c:	03002812 	movweq	r2, #2066	; 0x812
    1440:	000b1c08 	andeq	r1, fp, r8, lsl #24
    1444:	01131300 	tsteq	r3, r0, lsl #6
    1448:	0b3a0b0b 	bleq	e8407c <_Min_Heap_Size+0xe8387c>
    144c:	0b390b3b 	bleq	e44140 <_Min_Heap_Size+0xe43940>
    1450:	00001301 	andeq	r1, r0, r1, lsl #6
    1454:	03000d14 	movweq	r0, #3348	; 0xd14
    1458:	3b0b3a0e 	blcc	2cfc98 <_Min_Heap_Size+0x2cf498>
    145c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1460:	000a3813 	andeq	r3, sl, r3, lsl r8
    1464:	002e1500 	eoreq	r1, lr, r0, lsl #10
    1468:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    146c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1470:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1474:	01120111 	tsteq	r2, r1, lsl r1
    1478:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    147c:	1600000c 	strne	r0, [r0], -ip
    1480:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 13d0 <_Min_Heap_Size+0xbd0>
    1484:	0b3a0e03 	bleq	e84c98 <_Min_Heap_Size+0xe84498>
    1488:	0b39053b 	bleq	e4297c <_Min_Heap_Size+0xe4217c>
    148c:	01110c27 	tsteq	r1, r7, lsr #24
    1490:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1494:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1498:	17000013 	smladne	r0, r3, r0, r0
    149c:	00018289 	andeq	r8, r1, r9, lsl #5
    14a0:	13310111 	teqne	r1, #1073741828	; 0x40000004
    14a4:	05180000 	ldreq	r0, [r8, #-0]
    14a8:	3a0e0300 	bcc	3820b0 <_Min_Heap_Size+0x3818b0>
    14ac:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    14b0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    14b4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    14b8:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
    14bc:	11010182 	smlabbne	r1, r2, r1, r0
    14c0:	00133101 	andseq	r3, r3, r1, lsl #2
    14c4:	828a1a00 	addhi	r1, sl, #0, 20
    14c8:	0a020001 	beq	814d4 <_Min_Heap_Size+0x80cd4>
    14cc:	000a4291 	muleq	sl, r1, r2
    14d0:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
    14d4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    14d8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    14dc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    14e0:	01111349 	tsteq	r1, r9, asr #6
    14e4:	06400112 			; <UNDEFINED> instruction: 0x06400112
    14e8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    14ec:	1c000013 	stcne	0, cr0, [r0], {19}
    14f0:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    14f4:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    14f8:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
    14fc:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    1500:	0013010b 	andseq	r0, r3, fp, lsl #2
    1504:	00051d00 	andeq	r1, r5, r0, lsl #26
    1508:	06021331 			; <UNDEFINED> instruction: 0x06021331
    150c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1510:	011d1e00 	tsteq	sp, r0, lsl #28
    1514:	01521331 	cmpeq	r2, r1, lsr r3
    1518:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    151c:	58011201 	stmdapl	r1, {r0, r9, ip}
    1520:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    1524:	0013010b 	andseq	r0, r3, fp, lsl #2
    1528:	010b1f00 	tsteq	fp, r0, lsl #30
    152c:	00000655 	andeq	r0, r0, r5, asr r6
    1530:	31003420 	tstcc	r0, r0, lsr #8
    1534:	b7060213 	smladlt	r6, r3, r2, r0
    1538:	00000642 	andeq	r0, r0, r2, asr #12
    153c:	0b000f21 	bleq	51c8 <_Min_Heap_Size+0x49c8>
    1540:	0013490b 	andseq	r4, r3, fp, lsl #18
    1544:	012e2200 			; <UNDEFINED> instruction: 0x012e2200
    1548:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    154c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1550:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1554:	01111349 	tsteq	r1, r9, asr #6
    1558:	0a400112 	beq	10019a8 <_Min_Heap_Size+0x10011a8>
    155c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1560:	23000013 	movwcs	r0, #19
    1564:	1331001d 	teqne	r1, #29
    1568:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    156c:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    1570:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1574:	000b5705 	andeq	r5, fp, r5, lsl #14
    1578:	82892400 	addhi	r2, r9, #0, 8
    157c:	01110101 	tsteq	r1, r1, lsl #2
    1580:	13011331 	movwne	r1, #4913	; 0x1331
    1584:	2e250000 	cdpcs	0, 2, cr0, cr5, cr0, {0}
    1588:	030c3f01 	movweq	r3, #52993	; 0xcf01
    158c:	3b0b3a0e 	blcc	2cfdcc <_Min_Heap_Size+0x2cf5cc>
    1590:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1594:	1201110c 	andne	r1, r1, #12, 2
    1598:	970a4001 	strls	r4, [sl, -r1]
    159c:	13010c42 	movwne	r0, #7234	; 0x1c42
    15a0:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
    15a4:	030c3f01 	movweq	r3, #52993	; 0xcf01
    15a8:	3b0b3a0e 	blcc	2cfde8 <_Min_Heap_Size+0x2cf5e8>
    15ac:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    15b0:	1113490c 	tstne	r3, ip, lsl #18
    15b4:	40011201 	andmi	r1, r1, r1, lsl #4
    15b8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    15bc:	00001301 	andeq	r1, r0, r1, lsl #6
    15c0:	03000527 	movweq	r0, #1319	; 0x527
    15c4:	3b0b3a0e 	blcc	2cfe04 <_Min_Heap_Size+0x2cf604>
    15c8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    15cc:	b7060213 	smladlt	r6, r3, r2, r0
    15d0:	00000642 	andeq	r0, r0, r2, asr #12
    15d4:	31011d28 	tstcc	r1, r8, lsr #26
    15d8:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    15dc:	01110b42 	tsteq	r1, r2, asr #22
    15e0:	0b580112 	bleq	1601a30 <_Min_Heap_Size+0x1601230>
    15e4:	0b570b59 	bleq	15c4350 <_Min_Heap_Size+0x15c3b50>
    15e8:	1d290000 	stcne	0, cr0, [r9, #-0]
    15ec:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    15f0:	0b42b801 	bleq	10af5fc <_Min_Heap_Size+0x10aedfc>
    15f4:	01120111 	tsteq	r2, r1, lsl r1
    15f8:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    15fc:	00000b57 	andeq	r0, r0, r7, asr fp
    1600:	3f012e2a 	svccc	0x00012e2a
    1604:	3a0e030c 	bcc	38223c <_Min_Heap_Size+0x381a3c>
    1608:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    160c:	110c270b 	tstne	ip, fp, lsl #14
    1610:	40011201 	andmi	r1, r1, r1, lsl #4
    1614:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1618:	00001301 	andeq	r1, r0, r1, lsl #6
    161c:	3f012e2b 	svccc	0x00012e2b
    1620:	3a0e030c 	bcc	382258 <_Min_Heap_Size+0x381a58>
    1624:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1628:	110c270b 	tstne	ip, fp, lsl #14
    162c:	40011201 	andmi	r1, r1, r1, lsl #4
    1630:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1634:	00001301 	andeq	r1, r0, r1, lsl #6
    1638:	31011d2c 	tstcc	r1, ip, lsr #26
    163c:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1640:	01110b42 	tsteq	r1, r2, asr #22
    1644:	0b580112 	bleq	1601a94 <_Min_Heap_Size+0x1601294>
    1648:	0b570b59 	bleq	15c43b4 <_Min_Heap_Size+0x15c3bb4>
    164c:	00001301 	andeq	r1, r0, r1, lsl #6
    1650:	0300342d 	movweq	r3, #1069	; 0x42d
    1654:	3b0b3a0e 	blcc	2cfe94 <_Min_Heap_Size+0x2cf694>
    1658:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    165c:	b7060213 	smladlt	r6, r3, r2, r0
    1660:	00000642 	andeq	r0, r0, r2, asr #12
    1664:	31001d2e 	tstcc	r0, lr, lsr #26
    1668:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    166c:	01110b42 	tsteq	r1, r2, asr #22
    1670:	0b580112 	bleq	1601ac0 <_Min_Heap_Size+0x16012c0>
    1674:	0b570b59 	bleq	15c43e0 <_Min_Heap_Size+0x15c3be0>
    1678:	1d2f0000 	stcne	0, cr0, [pc, #-0]	; 1680 <_Min_Heap_Size+0xe80>
    167c:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1680:	0b42b801 	bleq	10af68c <_Min_Heap_Size+0x10aee8c>
    1684:	0b580655 	bleq	1602fe0 <_Min_Heap_Size+0x16027e0>
    1688:	0b570b59 	bleq	15c43f4 <_Min_Heap_Size+0x15c3bf4>
    168c:	00001301 	andeq	r1, r0, r1, lsl #6
    1690:	03012e30 	movweq	r2, #7728	; 0x1e30
    1694:	3b0b3a0e 	blcc	2cfed4 <_Min_Heap_Size+0x2cf6d4>
    1698:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    169c:	2013490c 	andscs	r4, r3, ip, lsl #18
    16a0:	0013010b 	andseq	r0, r3, fp, lsl #2
    16a4:	00053100 	andeq	r3, r5, r0, lsl #2
    16a8:	0b3a0e03 	bleq	e84ebc <_Min_Heap_Size+0xe846bc>
    16ac:	0b39053b 	bleq	e42ba0 <_Min_Heap_Size+0xe423a0>
    16b0:	00001349 	andeq	r1, r0, r9, asr #6
    16b4:	03002e32 	movweq	r2, #3634	; 0xe32
    16b8:	3b0b3a0e 	blcc	2cfef8 <_Min_Heap_Size+0x2cf6f8>
    16bc:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    16c0:	0c01870c 	stceq	7, cr8, [r1], {12}
    16c4:	00000b20 	andeq	r0, r0, r0, lsr #22
    16c8:	03012e33 	movweq	r2, #7731	; 0x1e33
    16cc:	3b0b3a0e 	blcc	2cff0c <_Min_Heap_Size+0x2cf70c>
    16d0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    16d4:	010b200c 	tsteq	fp, ip
    16d8:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
    16dc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    16e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    16e4:	13490b39 	movtne	r0, #39737	; 0x9b39
    16e8:	2e350000 	cdpcs	0, 3, cr0, cr5, cr0, {0}
    16ec:	3a0e0300 	bcc	3822f4 <_Min_Heap_Size+0x381af4>
    16f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    16f4:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    16f8:	000b2013 	andeq	r2, fp, r3, lsl r0
    16fc:	002e3600 	eoreq	r3, lr, r0, lsl #12
    1700:	0b3a0e03 	bleq	e84f14 <_Min_Heap_Size+0xe84714>
    1704:	0b39053b 	bleq	e42bf8 <_Min_Heap_Size+0xe423f8>
    1708:	0b200c27 	bleq	8047ac <_Min_Heap_Size+0x803fac>
    170c:	2e370000 	cdpcs	0, 3, cr0, cr7, cr0, {0}
    1710:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1714:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1718:	0b3a0e03 	bleq	e84f2c <_Min_Heap_Size+0xe8472c>
    171c:	0b39053b 	bleq	e42c10 <_Min_Heap_Size+0xe42410>
    1720:	01000000 	mrseq	r0, (UNDEF: 0)
    1724:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1728:	0e030b13 	vmoveq.32	d3[0], r0
    172c:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    1730:	01520111 	cmpeq	r2, r1, lsl r1
    1734:	00000610 	andeq	r0, r0, r0, lsl r6
    1738:	3e010402 	cdpcc	4, 0, cr0, cr1, cr2, {0}
    173c:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
    1740:	3b0b3a13 	blcc	2cff94 <_Min_Heap_Size+0x2cf794>
    1744:	010b390b 	tsteq	fp, fp, lsl #18
    1748:	03000013 	movweq	r0, #19
    174c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
    1750:	00000d1c 	andeq	r0, r0, ip, lsl sp
    1754:	03002804 	movweq	r2, #2052	; 0x804
    1758:	000b1c0e 	andeq	r1, fp, lr, lsl #24
    175c:	00240500 	eoreq	r0, r4, r0, lsl #10
    1760:	0b3e0b0b 	bleq	f84394 <_Min_Heap_Size+0xf83b94>
    1764:	00000e03 	andeq	r0, r0, r3, lsl #28
    1768:	03001606 	movweq	r1, #1542	; 0x606
    176c:	3b0b3a0e 	blcc	2cffac <_Min_Heap_Size+0x2cf7ac>
    1770:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1774:	07000013 	smladeq	r0, r3, r0, r0
    1778:	0b0b0024 	bleq	2c1810 <_Min_Heap_Size+0x2c1010>
    177c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1780:	35080000 	strcc	r0, [r8, #-0]
    1784:	00134900 	andseq	r4, r3, r0, lsl #18
    1788:	00260900 	eoreq	r0, r6, r0, lsl #18
    178c:	00001349 	andeq	r1, r0, r9, asr #6
    1790:	0b01130a 	bleq	463c0 <_Min_Heap_Size+0x45bc0>
    1794:	3b0b3a0b 	blcc	2cffc8 <_Min_Heap_Size+0x2cf7c8>
    1798:	010b3905 	tsteq	fp, r5, lsl #18
    179c:	0b000013 	bleq	17f0 <_Min_Heap_Size+0xff0>
    17a0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    17a4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    17a8:	13490b39 	movtne	r0, #39737	; 0x9b39
    17ac:	00000a38 	andeq	r0, r0, r8, lsr sl
    17b0:	03000d0c 	movweq	r0, #3340	; 0xd0c
    17b4:	3b0b3a08 	blcc	2cffdc <_Min_Heap_Size+0x2cf7dc>
    17b8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    17bc:	000a3813 	andeq	r3, sl, r3, lsl r8
    17c0:	00160d00 	andseq	r0, r6, r0, lsl #26
    17c4:	0b3a0e03 	bleq	e84fd8 <_Min_Heap_Size+0xe847d8>
    17c8:	0b39053b 	bleq	e42cbc <_Min_Heap_Size+0xe424bc>
    17cc:	00001349 	andeq	r1, r0, r9, asr #6
    17d0:	4901010e 	stmdbmi	r1, {r1, r2, r3, r8}
    17d4:	00130113 	andseq	r0, r3, r3, lsl r1
    17d8:	00210f00 	eoreq	r0, r1, r0, lsl #30
    17dc:	0b2f1349 	bleq	bc6508 <_Min_Heap_Size+0xbc5d08>
    17e0:	34100000 	ldrcc	r0, [r0], #-0
    17e4:	3a0e0300 	bcc	3823ec <_Min_Heap_Size+0x381bec>
    17e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    17ec:	3f13490b 	svccc	0x0013490b
    17f0:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    17f4:	00341100 	eorseq	r1, r4, r0, lsl #2
    17f8:	0b3a1347 	bleq	e8651c <_Min_Heap_Size+0xe85d1c>
    17fc:	0b390b3b 	bleq	e444f0 <_Min_Heap_Size+0xe43cf0>
    1800:	00000a02 	andeq	r0, r0, r2, lsl #20
    1804:	3f002e12 	svccc	0x00002e12
    1808:	3a0e030c 	bcc	382440 <_Min_Heap_Size+0x381c40>
    180c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1810:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1814:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    1818:	970a4001 	strls	r4, [sl, -r1]
    181c:	00000c42 	andeq	r0, r0, r2, asr #24
    1820:	3f002e13 	svccc	0x00002e13
    1824:	3a0e030c 	bcc	38245c <_Min_Heap_Size+0x381c5c>
    1828:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    182c:	110c270b 	tstne	ip, fp, lsl #14
    1830:	40011201 	andmi	r1, r1, r1, lsl #4
    1834:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1838:	2e140000 	cdpcs	0, 1, cr0, cr4, cr0, {0}
    183c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1840:	3b0b3a0e 	blcc	2d0080 <_Min_Heap_Size+0x2cf880>
    1844:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1848:	1201110c 	andne	r1, r1, #12, 2
    184c:	97064001 	strls	r4, [r6, -r1]
    1850:	13010c42 	movwne	r0, #7234	; 0x1c42
    1854:	05150000 	ldreq	r0, [r5, #-0]
    1858:	3a0e0300 	bcc	382460 <_Min_Heap_Size+0x381c60>
    185c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1860:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1864:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1868:	34160000 	ldrcc	r0, [r6], #-0
    186c:	3a0e0300 	bcc	382474 <_Min_Heap_Size+0x381c74>
    1870:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1874:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1878:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    187c:	89170000 	ldmdbhi	r7, {}	; <UNPREDICTABLE>
    1880:	11000182 	smlabbne	r0, r2, r1, r0
    1884:	00133101 	andseq	r3, r3, r1, lsl #2
    1888:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
    188c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1890:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1894:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1898:	01111349 	tsteq	r1, r9, asr #6
    189c:	06400112 			; <UNDEFINED> instruction: 0x06400112
    18a0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    18a4:	19000013 	stmdbne	r0, {r0, r1, r4}
    18a8:	01018289 	smlabbeq	r1, r9, r2, r8
    18ac:	13310111 	teqne	r1, #1073741828	; 0x40000004
    18b0:	00001301 	andeq	r1, r0, r1, lsl #6
    18b4:	01828a1a 	orreq	r8, r2, sl, lsl sl
    18b8:	910a0200 	mrsls	r0, R10_fiq
    18bc:	00000a42 	andeq	r0, r0, r2, asr #20
    18c0:	3f012e1b 	svccc	0x00012e1b
    18c4:	3a0e030c 	bcc	3824fc <_Min_Heap_Size+0x381cfc>
    18c8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    18cc:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    18d0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    18d4:	97064001 	strls	r4, [r6, -r1]
    18d8:	13010c42 	movwne	r0, #7234	; 0x1c42
    18dc:	051c0000 	ldreq	r0, [ip, #-0]
    18e0:	3a0e0300 	bcc	3824e8 <_Min_Heap_Size+0x381ce8>
    18e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    18e8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    18ec:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    18f0:	891d0000 	ldmdbhi	sp, {}	; <UNPREDICTABLE>
    18f4:	11010182 	smlabbne	r1, r2, r1, r0
    18f8:	00133101 	andseq	r3, r3, r1, lsl #2
    18fc:	002e1e00 	eoreq	r1, lr, r0, lsl #28
    1900:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1904:	0b3b0b3a 	bleq	ec45f4 <_Min_Heap_Size+0xec3df4>
    1908:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    190c:	01120111 	tsteq	r2, r1, lsl r1
    1910:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    1914:	1f00000c 	svcne	0x0000000c
    1918:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1868 <_Min_Heap_Size+0x1068>
    191c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1920:	3a0e030e 	bcc	382560 <_Min_Heap_Size+0x381d60>
    1924:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1928:	0000000b 	andeq	r0, r0, fp
    192c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1930:	030b130e 	movweq	r1, #45838	; 0xb30e
    1934:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1938:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    193c:	00061001 	andeq	r1, r6, r1
    1940:	00240200 	eoreq	r0, r4, r0, lsl #4
    1944:	0b3e0b0b 	bleq	f84578 <_Min_Heap_Size+0xf83d78>
    1948:	00000e03 	andeq	r0, r0, r3, lsl #28
    194c:	03001603 	movweq	r1, #1539	; 0x603
    1950:	3b0b3a0e 	blcc	2d0190 <_Min_Heap_Size+0x2cf990>
    1954:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1958:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    195c:	0b0b0024 	bleq	2c19f4 <_Min_Heap_Size+0x2c11f4>
    1960:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1964:	35050000 	strcc	r0, [r5, #-0]
    1968:	00134900 	andseq	r4, r3, r0, lsl #18
    196c:	00260600 	eoreq	r0, r6, r0, lsl #12
    1970:	00001349 	andeq	r1, r0, r9, asr #6
    1974:	0b011307 	bleq	46598 <_Min_Heap_Size+0x45d98>
    1978:	3b0b3a0b 	blcc	2d01ac <_Min_Heap_Size+0x2cf9ac>
    197c:	010b3905 	tsteq	fp, r5, lsl #18
    1980:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1984:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1988:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    198c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1990:	00000a38 	andeq	r0, r0, r8, lsr sl
    1994:	03000d09 	movweq	r0, #3337	; 0xd09
    1998:	3b0b3a08 	blcc	2d01c0 <_Min_Heap_Size+0x2cf9c0>
    199c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    19a0:	000a3813 	andeq	r3, sl, r3, lsl r8
    19a4:	01010a00 	tsteq	r1, r0, lsl #20
    19a8:	13011349 	movwne	r1, #4937	; 0x1349
    19ac:	210b0000 	mrscs	r0, (UNDEF: 11)
    19b0:	2f134900 	svccs	0x00134900
    19b4:	0c00000b 	stceq	0, cr0, [r0], {11}
    19b8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    19bc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    19c0:	13490b39 	movtne	r0, #39737	; 0x9b39
    19c4:	340d0000 	strcc	r0, [sp], #-0
    19c8:	3a0e0300 	bcc	3825d0 <_Min_Heap_Size+0x381dd0>
    19cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    19d0:	3f13490b 	svccc	0x0013490b
    19d4:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    19d8:	00340e00 	eorseq	r0, r4, r0, lsl #28
    19dc:	0b3a1347 	bleq	e86700 <_Min_Heap_Size+0xe85f00>
    19e0:	0b390b3b 	bleq	e446d4 <_Min_Heap_Size+0xe43ed4>
    19e4:	00000a02 	andeq	r0, r0, r2, lsl #20
    19e8:	3f012e0f 	svccc	0x00012e0f
    19ec:	3a0e030c 	bcc	382624 <_Min_Heap_Size+0x381e24>
    19f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    19f4:	110c270b 	tstne	ip, fp, lsl #14
    19f8:	40011201 	andmi	r1, r1, r1, lsl #4
    19fc:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1a00:	00001301 	andeq	r1, r0, r1, lsl #6
    1a04:	03003410 	movweq	r3, #1040	; 0x410
    1a08:	3b0b3a08 	blcc	2d0230 <_Min_Heap_Size+0x2cfa30>
    1a0c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a10:	b7060213 	smladlt	r6, r3, r2, r0
    1a14:	00000642 	andeq	r0, r0, r2, asr #12
    1a18:	03003411 	movweq	r3, #1041	; 0x411
    1a1c:	3b0b3a0e 	blcc	2d025c <_Min_Heap_Size+0x2cfa5c>
    1a20:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a24:	b7060213 	smladlt	r6, r3, r2, r0
    1a28:	00000642 	andeq	r0, r0, r2, asr #12
    1a2c:	3f002e12 	svccc	0x00002e12
    1a30:	3a0e030c 	bcc	382668 <_Min_Heap_Size+0x381e68>
    1a34:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a38:	110c270b 	tstne	ip, fp, lsl #14
    1a3c:	40011201 	andmi	r1, r1, r1, lsl #4
    1a40:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1a44:	01000000 	mrseq	r0, (UNDEF: 0)
    1a48:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1a4c:	0e030b13 	vmoveq.32	d3[0], r0
    1a50:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    1a54:	01520111 	cmpeq	r2, r1, lsl r1
    1a58:	00000610 	andeq	r0, r0, r0, lsl r6
    1a5c:	0b002402 	bleq	aa6c <_Min_Heap_Size+0xa26c>
    1a60:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1a64:	0300000e 	movweq	r0, #14
    1a68:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1a6c:	0b3b0b3a 	bleq	ec475c <_Min_Heap_Size+0xec3f5c>
    1a70:	13490b39 	movtne	r0, #39737	; 0x9b39
    1a74:	24040000 	strcs	r0, [r4], #-0
    1a78:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1a7c:	0008030b 	andeq	r0, r8, fp, lsl #6
    1a80:	00350500 	eorseq	r0, r5, r0, lsl #10
    1a84:	00001349 	andeq	r1, r0, r9, asr #6
    1a88:	03011306 	movweq	r1, #4870	; 0x1306
    1a8c:	3a0b0b0e 	bcc	2c46cc <_Min_Heap_Size+0x2c3ecc>
    1a90:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1a94:	0013010b 	andseq	r0, r3, fp, lsl #2
    1a98:	000d0700 	andeq	r0, sp, r0, lsl #14
    1a9c:	0b3a0803 	bleq	e83ab0 <_Min_Heap_Size+0xe832b0>
    1aa0:	0b390b3b 	bleq	e44794 <_Min_Heap_Size+0xe43f94>
    1aa4:	0a381349 	beq	e067d0 <_Min_Heap_Size+0xe05fd0>
    1aa8:	0d080000 	stceq	0, cr0, [r8, #-0]
    1aac:	3a0e0300 	bcc	3826b4 <_Min_Heap_Size+0x381eb4>
    1ab0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ab4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1ab8:	0900000a 	stmdbeq	r0, {r1, r3}
    1abc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1ac0:	0b3b0b3a 	bleq	ec47b0 <_Min_Heap_Size+0xec3fb0>
    1ac4:	13490b39 	movtne	r0, #39737	; 0x9b39
    1ac8:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1acc:	340a0000 	strcc	r0, [sl], #-0
    1ad0:	3a0e0300 	bcc	3826d8 <_Min_Heap_Size+0x381ed8>
    1ad4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ad8:	3f13490b 	svccc	0x0013490b
    1adc:	000a020c 	andeq	r0, sl, ip, lsl #4
    1ae0:	002e0b00 	eoreq	r0, lr, r0, lsl #22
    1ae4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1ae8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1aec:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1af0:	01111349 	tsteq	r1, r9, asr #6
    1af4:	0a400112 	beq	1001f44 <_Min_Heap_Size+0x1001744>
    1af8:	000c4297 	muleq	ip, r7, r2
    1afc:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
    1b00:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1b04:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1b08:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1b0c:	01111349 	tsteq	r1, r9, asr #6
    1b10:	0a400112 	beq	1001f60 <_Min_Heap_Size+0x1001760>
    1b14:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1b18:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    1b1c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1b20:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1b24:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    1b28:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1b2c:	000b5705 	andeq	r5, fp, r5, lsl #14
    1b30:	00340e00 	eorseq	r0, r4, r0, lsl #28
    1b34:	06021331 			; <UNDEFINED> instruction: 0x06021331
    1b38:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1b3c:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
    1b40:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1b44:	0b3b0b3a 	bleq	ec4834 <_Min_Heap_Size+0xec4034>
    1b48:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1b4c:	01111349 	tsteq	r1, r9, asr #6
    1b50:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1b54:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1b58:	10000013 	andne	r0, r0, r3, lsl r0
    1b5c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1b60:	0b3b0b3a 	bleq	ec4850 <_Min_Heap_Size+0xec4050>
    1b64:	13490b39 	movtne	r0, #39737	; 0x9b39
    1b68:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1b6c:	11000006 	tstne	r0, r6
    1b70:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1b74:	0b3b0b3a 	bleq	ec4864 <_Min_Heap_Size+0xec4064>
    1b78:	13490b39 	movtne	r0, #39737	; 0x9b39
    1b7c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1b80:	12000006 	andne	r0, r0, #6
    1b84:	08030034 	stmdaeq	r3, {r2, r4, r5}
    1b88:	0b3b0b3a 	bleq	ec4878 <_Min_Heap_Size+0xec4078>
    1b8c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1b90:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1b94:	13000006 	movwne	r0, #6
    1b98:	01018289 	smlabbeq	r1, r9, r2, r8
    1b9c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1ba0:	00001301 	andeq	r1, r0, r1, lsl #6
    1ba4:	01828a14 	orreq	r8, r2, r4, lsl sl
    1ba8:	910a0200 	mrsls	r0, R10_fiq
    1bac:	00000a42 	andeq	r0, r0, r2, asr #20
    1bb0:	01828915 	orreq	r8, r2, r5, lsl r9
    1bb4:	31011100 	mrscc	r1, (UNDEF: 17)
    1bb8:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1bbc:	0b0b000f 	bleq	2c1c00 <_Min_Heap_Size+0x2c1400>
    1bc0:	00001349 	andeq	r1, r0, r9, asr #6
    1bc4:	3f012e17 	svccc	0x00012e17
    1bc8:	3a0e030c 	bcc	382800 <_Min_Heap_Size+0x382000>
    1bcc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1bd0:	110c270b 	tstne	ip, fp, lsl #14
    1bd4:	40011201 	andmi	r1, r1, r1, lsl #4
    1bd8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1bdc:	00001301 	andeq	r1, r0, r1, lsl #6
    1be0:	03003418 	movweq	r3, #1048	; 0x418
    1be4:	3b0b3a0e 	blcc	2d0424 <_Min_Heap_Size+0x2cfc24>
    1be8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1bec:	000a0213 	andeq	r0, sl, r3, lsl r2
    1bf0:	82891900 	addhi	r1, r9, #0, 18
    1bf4:	01110101 	tsteq	r1, r1, lsl #2
    1bf8:	00001331 	andeq	r1, r0, r1, lsr r3
    1bfc:	4901011a 	stmdbmi	r1, {r1, r3, r4, r8}
    1c00:	00130113 	andseq	r0, r3, r3, lsl r1
    1c04:	00211b00 	eoreq	r1, r1, r0, lsl #22
    1c08:	0b2f1349 	bleq	bc6934 <_Min_Heap_Size+0xbc6134>
    1c0c:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
    1c10:	3a0e0301 	bcc	38281c <_Min_Heap_Size+0x38201c>
    1c14:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c18:	110c270b 	tstne	ip, fp, lsl #14
    1c1c:	40011201 	andmi	r1, r1, r1, lsl #4
    1c20:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1c24:	00001301 	andeq	r1, r0, r1, lsl #6
    1c28:	3f012e1d 	svccc	0x00012e1d
    1c2c:	3a0e030c 	bcc	382864 <_Min_Heap_Size+0x382064>
    1c30:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1c34:	3c0c270b 	stccc	7, cr2, [ip], {11}
    1c38:	0013010c 	andseq	r0, r3, ip, lsl #2
    1c3c:	00051e00 	andeq	r1, r5, r0, lsl #28
    1c40:	00001349 	andeq	r1, r0, r9, asr #6
    1c44:	03012e1f 	movweq	r2, #7711	; 0x1e1f
    1c48:	3b0b3a0e 	blcc	2d0488 <_Min_Heap_Size+0x2cfc88>
    1c4c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1c50:	1113490c 	tstne	r3, ip, lsl #18
    1c54:	40011201 	andmi	r1, r1, r1, lsl #4
    1c58:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1c5c:	00001301 	andeq	r1, r0, r1, lsl #6
    1c60:	03000520 	movweq	r0, #1312	; 0x520
    1c64:	3b0b3a08 	blcc	2d048c <_Min_Heap_Size+0x2cfc8c>
    1c68:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1c6c:	b7060213 	smladlt	r6, r3, r2, r0
    1c70:	00000642 	andeq	r0, r0, r2, asr #12
    1c74:	03012e21 	movweq	r2, #7713	; 0x1e21
    1c78:	3b0b3a0e 	blcc	2d04b8 <_Min_Heap_Size+0x2cfcb8>
    1c7c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1c80:	1113490c 	tstne	r3, ip, lsl #18
    1c84:	40011201 	andmi	r1, r1, r1, lsl #4
    1c88:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1c8c:	00001301 	andeq	r1, r0, r1, lsl #6
    1c90:	11010b22 	tstne	r1, r2, lsr #22
    1c94:	00011201 	andeq	r1, r1, r1, lsl #4
    1c98:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
    1c9c:	0b3a0e03 	bleq	e854b0 <_Min_Heap_Size+0xe84cb0>
    1ca0:	0b39053b 	bleq	e43194 <_Min_Heap_Size+0xe42994>
    1ca4:	13490c27 	movtne	r0, #39975	; 0x9c27
    1ca8:	13010b20 	movwne	r0, #6944	; 0x1b20
    1cac:	34240000 	strtcc	r0, [r4], #-0
    1cb0:	3a0e0300 	bcc	3828b8 <_Min_Heap_Size+0x3820b8>
    1cb4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1cb8:	0013490b 	andseq	r4, r3, fp, lsl #18
    1cbc:	002e2500 	eoreq	r2, lr, r0, lsl #10
    1cc0:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1cc4:	030e4087 	movweq	r4, #57479	; 0xe087
    1cc8:	3b0b3a0e 	blcc	2d0508 <_Min_Heap_Size+0x2cfd08>
    1ccc:	2600000b 	strcs	r0, [r0], -fp
    1cd0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1c20 <_Min_Heap_Size+0x1420>
    1cd4:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1cd8:	3a0e030e 	bcc	382918 <_Min_Heap_Size+0x382118>
    1cdc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ce0:	0000000b 	andeq	r0, r0, fp
    1ce4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1ce8:	030b130e 	movweq	r1, #45838	; 0xb30e
    1cec:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1cf0:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    1cf4:	00061001 	andeq	r1, r6, r1
    1cf8:	00240200 	eoreq	r0, r4, r0, lsl #4
    1cfc:	0b3e0b0b 	bleq	f84930 <_Min_Heap_Size+0xf84130>
    1d00:	00000e03 	andeq	r0, r0, r3, lsl #28
    1d04:	0b002403 	bleq	ad18 <_Min_Heap_Size+0xa518>
    1d08:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1d0c:	04000008 	streq	r0, [r0], #-8
    1d10:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1c60 <_Min_Heap_Size+0x1460>
    1d14:	0b3a0e03 	bleq	e85528 <_Min_Heap_Size+0xe84d28>
    1d18:	0b390b3b 	bleq	e44a0c <_Min_Heap_Size+0xe4420c>
    1d1c:	01110c27 	tsteq	r1, r7, lsr #24
    1d20:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1d24:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1d28:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    1d2c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1d30:	0b3b0b3a 	bleq	ec4a20 <_Min_Heap_Size+0xec4220>
    1d34:	13490b39 	movtne	r0, #39737	; 0x9b39
    1d38:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1d3c:	06000006 	streq	r0, [r0], -r6
    1d40:	01018289 	smlabbeq	r1, r9, r2, r8
    1d44:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1d48:	00001301 	andeq	r1, r0, r1, lsl #6
    1d4c:	01828a07 	orreq	r8, r2, r7, lsl #20
    1d50:	910a0200 	mrsls	r0, R10_fiq
    1d54:	00000a42 	andeq	r0, r0, r2, asr #20
    1d58:	01828908 	orreq	r8, r2, r8, lsl #18
    1d5c:	31011101 	tstcc	r1, r1, lsl #2
    1d60:	09000013 	stmdbeq	r0, {r0, r1, r4}
    1d64:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1cb4 <_Min_Heap_Size+0x14b4>
    1d68:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1d6c:	3a0e030e 	bcc	3829ac <_Min_Heap_Size+0x3821ac>
    1d70:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    1d74:	002e0a00 	eoreq	r0, lr, r0, lsl #20
    1d78:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1d7c:	030e4087 	movweq	r4, #57479	; 0xe087
    1d80:	3b0b3a0e 	blcc	2d05c0 <_Min_Heap_Size+0x2cfdc0>
    1d84:	000b390b 	andeq	r3, fp, fp, lsl #18
    1d88:	11010000 	mrsne	r0, (UNDEF: 1)
    1d8c:	130e2501 	movwne	r2, #58625	; 0xe501
    1d90:	1b0e030b 	blne	3829c4 <_Min_Heap_Size+0x3821c4>
    1d94:	1106550e 	tstne	r6, lr, lsl #10
    1d98:	10015201 	andne	r5, r1, r1, lsl #4
    1d9c:	02000006 	andeq	r0, r0, #6
    1da0:	0b0b0024 	bleq	2c1e38 <_Min_Heap_Size+0x2c1638>
    1da4:	0e030b3e 	vmoveq.16	d3[0], r0
    1da8:	24030000 	strcs	r0, [r3], #-0
    1dac:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1db0:	0008030b 	andeq	r0, r8, fp, lsl #6
    1db4:	00160400 	andseq	r0, r6, r0, lsl #8
    1db8:	0b3a0e03 	bleq	e855cc <_Min_Heap_Size+0xe84dcc>
    1dbc:	0b390b3b 	bleq	e44ab0 <_Min_Heap_Size+0xe442b0>
    1dc0:	00001349 	andeq	r1, r0, r9, asr #6
    1dc4:	0b000f05 	bleq	59e0 <_Min_Heap_Size+0x51e0>
    1dc8:	0600000b 	streq	r0, [r0], -fp
    1dcc:	13490026 	movtne	r0, #36902	; 0x9026
    1dd0:	13070000 	movwne	r0, #28672	; 0x7000
    1dd4:	0b0e0301 	bleq	3829e0 <_Min_Heap_Size+0x3821e0>
    1dd8:	3b0b3a0b 	blcc	2d060c <_Min_Heap_Size+0x2cfe0c>
    1ddc:	010b390b 	tsteq	fp, fp, lsl #18
    1de0:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1de4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1de8:	0b3b0b3a 	bleq	ec4ad8 <_Min_Heap_Size+0xec42d8>
    1dec:	13490b39 	movtne	r0, #39737	; 0x9b39
    1df0:	00000a38 	andeq	r0, r0, r8, lsr sl
    1df4:	0b000f09 	bleq	5a20 <_Min_Heap_Size+0x5220>
    1df8:	0013490b 	andseq	r4, r3, fp, lsl #18
    1dfc:	012e0a00 			; <UNDEFINED> instruction: 0x012e0a00
    1e00:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1e04:	0b3b0b3a 	bleq	ec4af4 <_Min_Heap_Size+0xec42f4>
    1e08:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1e0c:	01111349 	tsteq	r1, r9, asr #6
    1e10:	0a400112 	beq	1002260 <_Min_Heap_Size+0x1001a60>
    1e14:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1e18:	0b000013 	bleq	1e6c <_Min_Heap_Size+0x166c>
    1e1c:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1e20:	0b3b0b3a 	bleq	ec4b10 <_Min_Heap_Size+0xec4310>
    1e24:	13490b39 	movtne	r0, #39737	; 0x9b39
    1e28:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1e2c:	0c000006 	stceq	0, cr0, [r0], {6}
    1e30:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1e34:	0b3b0b3a 	bleq	ec4b24 <_Min_Heap_Size+0xec4324>
    1e38:	13490b39 	movtne	r0, #39737	; 0x9b39
    1e3c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1e40:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    1e44:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1d94 <_Min_Heap_Size+0x1594>
    1e48:	0b3a0e03 	bleq	e8565c <_Min_Heap_Size+0xe84e5c>
    1e4c:	0b390b3b 	bleq	e44b40 <_Min_Heap_Size+0xe44340>
    1e50:	01110c27 	tsteq	r1, r7, lsr #24
    1e54:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1e58:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1e5c:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    1e60:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1e64:	0b3b0b3a 	bleq	ec4b54 <_Min_Heap_Size+0xec4354>
    1e68:	13490b39 	movtne	r0, #39737	; 0x9b39
    1e6c:	00000a02 	andeq	r0, r0, r2, lsl #20
    1e70:	3f012e0f 	svccc	0x00012e0f
    1e74:	3a0e030c 	bcc	382aac <_Min_Heap_Size+0x3822ac>
    1e78:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e7c:	110c270b 	tstne	ip, fp, lsl #14
    1e80:	40011201 	andmi	r1, r1, r1, lsl #4
    1e84:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1e88:	00001301 	andeq	r1, r0, r1, lsl #6
    1e8c:	3f012e10 	svccc	0x00012e10
    1e90:	3a0e030c 	bcc	382ac8 <_Min_Heap_Size+0x3822c8>
    1e94:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1e98:	110c270b 	tstne	ip, fp, lsl #14
    1e9c:	40011201 	andmi	r1, r1, r1, lsl #4
    1ea0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    1ea4:	01000000 	mrseq	r0, (UNDEF: 0)
    1ea8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1eac:	0e030b13 	vmoveq.32	d3[0], r0
    1eb0:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    1eb4:	01520111 	cmpeq	r2, r1, lsl r1
    1eb8:	00000610 	andeq	r0, r0, r0, lsl r6
    1ebc:	03001602 	movweq	r1, #1538	; 0x602
    1ec0:	3b0b3a0e 	blcc	2d0700 <_Min_Heap_Size+0x2cff00>
    1ec4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1ec8:	03000013 	movweq	r0, #19
    1ecc:	0b0b0024 	bleq	2c1f64 <_Min_Heap_Size+0x2c1764>
    1ed0:	0e030b3e 	vmoveq.16	d3[0], r0
    1ed4:	24040000 	strcs	r0, [r4], #-0
    1ed8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1edc:	0008030b 	andeq	r0, r8, fp, lsl #6
    1ee0:	000f0500 	andeq	r0, pc, r0, lsl #10
    1ee4:	00000b0b 	andeq	r0, r0, fp, lsl #22
    1ee8:	49002606 	stmdbmi	r0, {r1, r2, r9, sl, sp}
    1eec:	07000013 	smladeq	r0, r3, r0, r0
    1ef0:	0b0b000f 	bleq	2c1f34 <_Min_Heap_Size+0x2c1734>
    1ef4:	00001349 	andeq	r1, r0, r9, asr #6
    1ef8:	00002608 	andeq	r2, r0, r8, lsl #12
    1efc:	00350900 	eorseq	r0, r5, r0, lsl #18
    1f00:	00001349 	andeq	r1, r0, r9, asr #6
    1f04:	0301130a 	movweq	r1, #4874	; 0x130a
    1f08:	3a0b0b0e 	bcc	2c4b48 <_Min_Heap_Size+0x2c4348>
    1f0c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f10:	0013010b 	andseq	r0, r3, fp, lsl #2
    1f14:	000d0b00 	andeq	r0, sp, r0, lsl #22
    1f18:	0b3a0e03 	bleq	e8572c <_Min_Heap_Size+0xe84f2c>
    1f1c:	0b39053b 	bleq	e43410 <_Min_Heap_Size+0xe42c10>
    1f20:	0a381349 	beq	e06c4c <_Min_Heap_Size+0xe0644c>
    1f24:	010c0000 	mrseq	r0, (UNDEF: 12)
    1f28:	01134901 	tsteq	r3, r1, lsl #18
    1f2c:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    1f30:	13490021 	movtne	r0, #36897	; 0x9021
    1f34:	00000b2f 	andeq	r0, r0, pc, lsr #22
    1f38:	0300160e 	movweq	r1, #1550	; 0x60e
    1f3c:	3b0b3a0e 	blcc	2d077c <_Min_Heap_Size+0x2cff7c>
    1f40:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1f44:	0f000013 	svceq	0x00000013
    1f48:	0b0b0117 	bleq	2c23ac <_Min_Heap_Size+0x2c1bac>
    1f4c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1f50:	13010b39 	movwne	r0, #6969	; 0x1b39
    1f54:	0d100000 	ldceq	0, cr0, [r0, #-0]
    1f58:	3a0e0300 	bcc	382b60 <_Min_Heap_Size+0x382360>
    1f5c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f60:	0013490b 	andseq	r4, r3, fp, lsl #18
    1f64:	000d1100 	andeq	r1, sp, r0, lsl #2
    1f68:	0b3a0803 	bleq	e83f7c <_Min_Heap_Size+0xe8377c>
    1f6c:	0b39053b 	bleq	e43460 <_Min_Heap_Size+0xe42c60>
    1f70:	0a381349 	beq	e06c9c <_Min_Heap_Size+0xe0649c>
    1f74:	13120000 	tstne	r2, #0
    1f78:	0b0e0301 	bleq	382b84 <_Min_Heap_Size+0x382384>
    1f7c:	3b0b3a0b 	blcc	2d07b0 <_Min_Heap_Size+0x2cffb0>
    1f80:	010b390b 	tsteq	fp, fp, lsl #18
    1f84:	13000013 	movwne	r0, #19
    1f88:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    1f8c:	0b3b0b3a 	bleq	ec4c7c <_Min_Heap_Size+0xec447c>
    1f90:	13490b39 	movtne	r0, #39737	; 0x9b39
    1f94:	00000a38 	andeq	r0, r0, r8, lsr sl
    1f98:	03001314 	movweq	r1, #788	; 0x314
    1f9c:	000c3c0e 	andeq	r3, ip, lr, lsl #24
    1fa0:	000d1500 	andeq	r1, sp, r0, lsl #10
    1fa4:	0b3a0803 	bleq	e83fb8 <_Min_Heap_Size+0xe837b8>
    1fa8:	0b390b3b 	bleq	e44c9c <_Min_Heap_Size+0xe4449c>
    1fac:	0a381349 	beq	e06cd8 <_Min_Heap_Size+0xe064d8>
    1fb0:	17160000 	ldrne	r0, [r6, -r0]
    1fb4:	3a0b0b01 	bcc	2c4bc0 <_Min_Heap_Size+0x2c43c0>
    1fb8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1fbc:	0013010b 	andseq	r0, r3, fp, lsl #2
    1fc0:	000d1700 	andeq	r1, sp, r0, lsl #14
    1fc4:	0b3a0e03 	bleq	e857d8 <_Min_Heap_Size+0xe84fd8>
    1fc8:	0b390b3b 	bleq	e44cbc <_Min_Heap_Size+0xe444bc>
    1fcc:	00001349 	andeq	r1, r0, r9, asr #6
    1fd0:	03012e18 	movweq	r2, #7704	; 0x1e18
    1fd4:	3b0b3a0e 	blcc	2d0814 <_Min_Heap_Size+0x2d0014>
    1fd8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1fdc:	1113490c 	tstne	r3, ip, lsl #18
    1fe0:	40011201 	andmi	r1, r1, r1, lsl #4
    1fe4:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1fe8:	00001301 	andeq	r1, r0, r1, lsl #6
    1fec:	03000519 	movweq	r0, #1305	; 0x519
    1ff0:	3b0b3a0e 	blcc	2d0830 <_Min_Heap_Size+0x2d0030>
    1ff4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1ff8:	b7060213 	smladlt	r6, r3, r2, r0
    1ffc:	00000642 	andeq	r0, r0, r2, asr #12
    2000:	0300341a 	movweq	r3, #1050	; 0x41a
    2004:	3b0b3a0e 	blcc	2d0844 <_Min_Heap_Size+0x2d0044>
    2008:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    200c:	b7060213 	smladlt	r6, r3, r2, r0
    2010:	00000642 	andeq	r0, r0, r2, asr #12
    2014:	55010b1b 	strpl	r0, [r1, #-2843]	; 0xfffff4e5
    2018:	1c000006 	stcne	0, cr0, [r0], {6}
    201c:	0111010b 	tsteq	r1, fp, lsl #2
    2020:	13010112 	movwne	r0, #4370	; 0x1112
    2024:	891d0000 	ldmdbhi	sp, {}	; <UNPREDICTABLE>
    2028:	11000182 	smlabbne	r0, r2, r1, r0
    202c:	00133101 	andseq	r3, r3, r1, lsl #2
    2030:	82891e00 	addhi	r1, r9, #0, 28
    2034:	01110101 	tsteq	r1, r1, lsl #2
    2038:	13011331 	movwne	r1, #4913	; 0x1331
    203c:	8a1f0000 	bhi	7c2044 <_Min_Heap_Size+0x7c1844>
    2040:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    2044:	0a42910a 	beq	10a6474 <_Min_Heap_Size+0x10a5c74>
    2048:	89200000 	stmdbhi	r0!, {}	; <UNPREDICTABLE>
    204c:	11010182 	smlabbne	r1, r2, r1, r0
    2050:	00133101 	andseq	r3, r3, r1, lsl #2
    2054:	012e2100 			; <UNDEFINED> instruction: 0x012e2100
    2058:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    205c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2060:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2064:	01111349 	tsteq	r1, r9, asr #6
    2068:	06400112 			; <UNDEFINED> instruction: 0x06400112
    206c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    2070:	22000013 	andcs	r0, r0, #19
    2074:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2078:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    207c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2080:	00000a02 	andeq	r0, r0, r2, lsl #20
    2084:	3f012e23 	svccc	0x00012e23
    2088:	3a0e030c 	bcc	382cc0 <_Min_Heap_Size+0x3824c0>
    208c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2090:	110c270b 	tstne	ip, fp, lsl #14
    2094:	40011201 	andmi	r1, r1, r1, lsl #4
    2098:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    209c:	00001301 	andeq	r1, r0, r1, lsl #6
    20a0:	3f012e24 	svccc	0x00012e24
    20a4:	3a0e030c 	bcc	382cdc <_Min_Heap_Size+0x3824dc>
    20a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    20ac:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    20b0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    20b4:	970a4001 	strls	r4, [sl, -r1]
    20b8:	13010c42 	movwne	r0, #7234	; 0x1c42
    20bc:	34250000 	strtcc	r0, [r5], #-0
    20c0:	3a0e0300 	bcc	382cc8 <_Min_Heap_Size+0x3824c8>
    20c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    20c8:	1c13490b 			; <UNDEFINED> instruction: 0x1c13490b
    20cc:	2600000b 	strcs	r0, [r0], -fp
    20d0:	0e03012e 	adfeqsp	f0, f3, #0.5
    20d4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    20d8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    20dc:	01120111 	tsteq	r2, r1, lsl r1
    20e0:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    20e4:	0013010c 	andseq	r0, r3, ip, lsl #2
    20e8:	012e2700 			; <UNDEFINED> instruction: 0x012e2700
    20ec:	0b3a0e03 	bleq	e85900 <_Min_Heap_Size+0xe85100>
    20f0:	0b39053b 	bleq	e435e4 <_Min_Heap_Size+0xe42de4>
    20f4:	13490c27 	movtne	r0, #39975	; 0x9c27
    20f8:	01120111 	tsteq	r2, r1, lsl r1
    20fc:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    2100:	0013010c 	andseq	r0, r3, ip, lsl #2
    2104:	011d2800 	tsteq	sp, r0, lsl #16
    2108:	01521331 	cmpeq	r2, r1, lsr r3
    210c:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    2110:	58011201 	stmdapl	r1, {r0, r9, ip}
    2114:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    2118:	0013010b 	andseq	r0, r3, fp, lsl #2
    211c:	00342900 	eorseq	r2, r4, r0, lsl #18
    2120:	06021331 			; <UNDEFINED> instruction: 0x06021331
    2124:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2128:	00342a00 	eorseq	r2, r4, r0, lsl #20
    212c:	00001331 	andeq	r1, r0, r1, lsr r3
    2130:	3100052b 	tstcc	r0, fp, lsr #10
    2134:	b7060213 	smladlt	r6, r3, r2, r0
    2138:	00000642 	andeq	r0, r0, r2, asr #12
    213c:	55010b2c 	strpl	r0, [r1, #-2860]	; 0xfffff4d4
    2140:	00130106 	andseq	r0, r3, r6, lsl #2
    2144:	010b2d00 	tsteq	fp, r0, lsl #26
    2148:	01120111 	tsteq	r2, r1, lsl r1
    214c:	1d2e0000 	stcne	0, cr0, [lr, #-0]
    2150:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    2154:	0b42b801 	bleq	10b0160 <_Min_Heap_Size+0x10af960>
    2158:	01120111 	tsteq	r2, r1, lsl r1
    215c:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    2160:	00000b57 	andeq	r0, r0, r7, asr fp
    2164:	0300052f 	movweq	r0, #1327	; 0x52f
    2168:	3b0b3a0e 	blcc	2d09a8 <_Min_Heap_Size+0x2d01a8>
    216c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2170:	000a0213 	andeq	r0, sl, r3, lsl r2
    2174:	012e3000 			; <UNDEFINED> instruction: 0x012e3000
    2178:	0b3a0e03 	bleq	e8598c <_Min_Heap_Size+0xe8518c>
    217c:	0b390b3b 	bleq	e44e70 <_Min_Heap_Size+0xe44670>
    2180:	0b200c27 	bleq	805224 <_Min_Heap_Size+0x804a24>
    2184:	00001301 	andeq	r1, r0, r1, lsl #6
    2188:	03000531 	movweq	r0, #1329	; 0x531
    218c:	3b0b3a0e 	blcc	2d09cc <_Min_Heap_Size+0x2d01cc>
    2190:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2194:	32000013 	andcc	r0, r0, #19
    2198:	0e03012e 	adfeqsp	f0, f3, #0.5
    219c:	0b3b0b3a 	bleq	ec4e8c <_Min_Heap_Size+0xec468c>
    21a0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    21a4:	0b201349 	bleq	806ed0 <_Min_Heap_Size+0x8066d0>
    21a8:	00001301 	andeq	r1, r0, r1, lsl #6
    21ac:	03003433 	movweq	r3, #1075	; 0x433
    21b0:	3b0b3a0e 	blcc	2d09f0 <_Min_Heap_Size+0x2d01f0>
    21b4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    21b8:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
    21bc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 210c <_Min_Heap_Size+0x190c>
    21c0:	40870c3c 	addmi	r0, r7, ip, lsr ip
    21c4:	3a0e030e 	bcc	382e04 <_Min_Heap_Size+0x382604>
    21c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    21cc:	3500000b 	strcc	r0, [r0, #-11]
    21d0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 2120 <_Min_Heap_Size+0x1920>
    21d4:	40870c3c 	addmi	r0, r7, ip, lsr ip
    21d8:	3a0e030e 	bcc	382e18 <_Min_Heap_Size+0x382618>
    21dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    21e0:	3600000b 	strcc	r0, [r0], -fp
    21e4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 2134 <_Min_Heap_Size+0x1934>
    21e8:	40870c3c 	addmi	r0, r7, ip, lsr ip
    21ec:	3a0e030e 	bcc	382e2c <_Min_Heap_Size+0x38262c>
    21f0:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    21f4:	11010000 	mrsne	r0, (UNDEF: 1)
    21f8:	130e2501 	movwne	r2, #58625	; 0xe501
    21fc:	1b0e030b 	blne	382e30 <_Min_Heap_Size+0x382630>
    2200:	1106550e 	tstne	r6, lr, lsl #10
    2204:	10015201 	andne	r5, r1, r1, lsl #4
    2208:	02000006 	andeq	r0, r0, #6
    220c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2210:	0b3b0b3a 	bleq	ec4f00 <_Min_Heap_Size+0xec4700>
    2214:	13490b39 	movtne	r0, #39737	; 0x9b39
    2218:	26030000 	strcs	r0, [r3], -r0
    221c:	00134900 	andseq	r4, r3, r0, lsl #18
    2220:	00240400 	eoreq	r0, r4, r0, lsl #8
    2224:	0b3e0b0b 	bleq	f84e58 <_Min_Heap_Size+0xf84658>
    2228:	00000e03 	andeq	r0, r0, r3, lsl #28
    222c:	0b002405 	bleq	b248 <_Min_Heap_Size+0xaa48>
    2230:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2234:	06000008 	streq	r0, [r0], -r8
    2238:	0b0b000f 	bleq	2c227c <_Min_Heap_Size+0x2c1a7c>
    223c:	0f070000 	svceq	0x00070000
    2240:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    2244:	08000013 	stmdaeq	r0, {r0, r1, r4}
    2248:	13490035 	movtne	r0, #36917	; 0x9035
    224c:	15090000 	strne	r0, [r9, #-0]
    2250:	010c2701 	tsteq	ip, r1, lsl #14
    2254:	0a000013 	beq	22a8 <_Min_Heap_Size+0x1aa8>
    2258:	13490005 	movtne	r0, #36869	; 0x9005
    225c:	130b0000 	movwne	r0, #45056	; 0xb000
    2260:	0b0e0301 	bleq	382e6c <_Min_Heap_Size+0x38266c>
    2264:	3b0b3a0b 	blcc	2d0a98 <_Min_Heap_Size+0x2d0298>
    2268:	010b3905 	tsteq	fp, r5, lsl #18
    226c:	0c000013 	stceq	0, cr0, [r0], {19}
    2270:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2274:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2278:	13490b39 	movtne	r0, #39737	; 0x9b39
    227c:	00000a38 	andeq	r0, r0, r8, lsr sl
    2280:	4901010d 	stmdbmi	r1, {r0, r2, r3, r8}
    2284:	00130113 	andseq	r0, r3, r3, lsl r1
    2288:	00210e00 	eoreq	r0, r1, r0, lsl #28
    228c:	0b2f1349 	bleq	bc6fb8 <_Min_Heap_Size+0xbc67b8>
    2290:	160f0000 	strne	r0, [pc], -r0
    2294:	3a0e0300 	bcc	382e9c <_Min_Heap_Size+0x38269c>
    2298:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    229c:	0013490b 	andseq	r4, r3, fp, lsl #18
    22a0:	01131000 	tsteq	r3, r0
    22a4:	0b0b0e03 	bleq	2c5ab8 <_Min_Heap_Size+0x2c52b8>
    22a8:	0b3b0b3a 	bleq	ec4f98 <_Min_Heap_Size+0xec4798>
    22ac:	13010b39 	movwne	r0, #6969	; 0x1b39
    22b0:	0d110000 	ldceq	0, cr0, [r1, #-0]
    22b4:	3a0e0300 	bcc	382ebc <_Min_Heap_Size+0x3826bc>
    22b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    22bc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    22c0:	1200000a 	andne	r0, r0, #10
    22c4:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    22c8:	13011349 	movwne	r1, #4937	; 0x1349
    22cc:	04130000 	ldreq	r0, [r3], #-0
    22d0:	0b0b3e01 	bleq	2d1adc <_Min_Heap_Size+0x2d12dc>
    22d4:	3a13490b 	bcc	4d4708 <_Min_Heap_Size+0x4d3f08>
    22d8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    22dc:	0013010b 	andseq	r0, r3, fp, lsl #2
    22e0:	00281400 	eoreq	r1, r8, r0, lsl #8
    22e4:	0b1c0e03 	bleq	705af8 <_Min_Heap_Size+0x7052f8>
    22e8:	34150000 	ldrcc	r0, [r5], #-0
    22ec:	3a0e0300 	bcc	382ef4 <_Min_Heap_Size+0x3826f4>
    22f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    22f4:	3f13490b 	svccc	0x0013490b
    22f8:	000a020c 	andeq	r0, sl, ip, lsl #4
    22fc:	00341600 	eorseq	r1, r4, r0, lsl #12
    2300:	0b3a0e03 	bleq	e85b14 <_Min_Heap_Size+0xe85314>
    2304:	0b39053b 	bleq	e437f8 <_Min_Heap_Size+0xe42ff8>
    2308:	0a021349 	beq	87034 <_Min_Heap_Size+0x86834>
    230c:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
    2310:	030c3f01 	movweq	r3, #52993	; 0xcf01
    2314:	3b0b3a0e 	blcc	2d0b54 <_Min_Heap_Size+0x2d0354>
    2318:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    231c:	1201110c 	andne	r1, r1, #12, 2
    2320:	970a4001 	strls	r4, [sl, -r1]
    2324:	13010c42 	movwne	r0, #7234	; 0x1c42
    2328:	34180000 	ldrcc	r0, [r8], #-0
    232c:	3a0e0300 	bcc	382f34 <_Min_Heap_Size+0x382734>
    2330:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2334:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2338:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    233c:	05190000 	ldreq	r0, [r9, #-0]
    2340:	3a0e0300 	bcc	382f48 <_Min_Heap_Size+0x382748>
    2344:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2348:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    234c:	1a00000a 	bne	237c <_Min_Heap_Size+0x1b7c>
    2350:	0e03012e 	adfeqsp	f0, f3, #0.5
    2354:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2358:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    235c:	01120111 	tsteq	r2, r1, lsl r1
    2360:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    2364:	0013010c 	andseq	r0, r3, ip, lsl #2
    2368:	00051b00 	andeq	r1, r5, r0, lsl #22
    236c:	0b3a0e03 	bleq	e85b80 <_Min_Heap_Size+0xe85380>
    2370:	0b39053b 	bleq	e43864 <_Min_Heap_Size+0xe43064>
    2374:	06021349 	streq	r1, [r2], -r9, asr #6
    2378:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    237c:	010b1c00 	tsteq	fp, r0, lsl #24
    2380:	01120111 	tsteq	r2, r1, lsl r1
    2384:	00001301 	andeq	r1, r0, r1, lsl #6
    2388:	0182891d 	orreq	r8, r2, sp, lsl r9
    238c:	31011100 	mrscc	r1, (UNDEF: 17)
    2390:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    2394:	01018289 	smlabbeq	r1, r9, r2, r8
    2398:	13310111 	teqne	r1, #1073741828	; 0x40000004
    239c:	00001301 	andeq	r1, r0, r1, lsl #6
    23a0:	01828a1f 	orreq	r8, r2, pc, lsl sl
    23a4:	910a0200 	mrsls	r0, R10_fiq
    23a8:	00000a42 	andeq	r0, r0, r2, asr #20
    23ac:	01828920 	orreq	r8, r2, r0, lsr #18
    23b0:	31011101 	tstcc	r1, r1, lsl #2
    23b4:	21000013 	tstcs	r0, r3, lsl r0
    23b8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 2308 <_Min_Heap_Size+0x1b08>
    23bc:	0b3a0e03 	bleq	e85bd0 <_Min_Heap_Size+0xe853d0>
    23c0:	0b39053b 	bleq	e438b4 <_Min_Heap_Size+0xe430b4>
    23c4:	13490c27 	movtne	r0, #39975	; 0x9c27
    23c8:	01120111 	tsteq	r2, r1, lsl r1
    23cc:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    23d0:	0013010c 	andseq	r0, r3, ip, lsl #2
    23d4:	012e2200 			; <UNDEFINED> instruction: 0x012e2200
    23d8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    23dc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    23e0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    23e4:	01120111 	tsteq	r2, r1, lsl r1
    23e8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    23ec:	0013010c 	andseq	r0, r3, ip, lsl #2
    23f0:	010b2300 	mrseq	r2, (UNDEF: 59)
    23f4:	13010655 	movwne	r0, #5717	; 0x1655
    23f8:	1d240000 	stcne	0, cr0, [r4, #-0]
    23fc:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    2400:	0b42b801 	bleq	10b040c <_Min_Heap_Size+0x10afc0c>
    2404:	01120111 	tsteq	r2, r1, lsl r1
    2408:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    240c:	13010b57 	movwne	r0, #6999	; 0x1b57
    2410:	34250000 	strtcc	r0, [r5], #-0
    2414:	02133100 	andseq	r3, r3, #0, 2
    2418:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    241c:	34260000 	strtcc	r0, [r6], #-0
    2420:	00133100 	andseq	r3, r3, r0, lsl #2
    2424:	011d2700 	tsteq	sp, r0, lsl #14
    2428:	01521331 	cmpeq	r2, r1, lsr r3
    242c:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    2430:	58011201 	stmdapl	r1, {r0, r9, ip}
    2434:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    2438:	2800000b 	stmdacs	r0, {r0, r1, r3}
    243c:	13310005 	teqne	r1, #5
    2440:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2444:	29000006 	stmdbcs	r0, {r1, r2}
    2448:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 2398 <_Min_Heap_Size+0x1b98>
    244c:	0b3a0e03 	bleq	e85c60 <_Min_Heap_Size+0xe85460>
    2450:	0b39053b 	bleq	e43944 <_Min_Heap_Size+0xe43144>
    2454:	13490c27 	movtne	r0, #39975	; 0x9c27
    2458:	01120111 	tsteq	r2, r1, lsl r1
    245c:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    2460:	0013010c 	andseq	r0, r3, ip, lsl #2
    2464:	00342a00 	eorseq	r2, r4, r0, lsl #20
    2468:	0b3a0e03 	bleq	e85c7c <_Min_Heap_Size+0xe8547c>
    246c:	0b39053b 	bleq	e43960 <_Min_Heap_Size+0xe43160>
    2470:	0b1c1349 	bleq	70719c <_Min_Heap_Size+0x70699c>
    2474:	2e2b0000 	cdpcs	0, 2, cr0, cr11, cr0, {0}
    2478:	3a0e0300 	bcc	383080 <_Min_Heap_Size+0x382880>
    247c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2480:	110c270b 	tstne	ip, fp, lsl #14
    2484:	40011201 	andmi	r1, r1, r1, lsl #4
    2488:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    248c:	2e2c0000 	cdpcs	0, 2, cr0, cr12, cr0, {0}
    2490:	3a0e0301 	bcc	38309c <_Min_Heap_Size+0x38289c>
    2494:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2498:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    249c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    24a0:	970a4001 	strls	r4, [sl, -r1]
    24a4:	13010c42 	movwne	r0, #7234	; 0x1c42
    24a8:	0b2d0000 	bleq	b424b0 <_Min_Heap_Size+0xb41cb0>
    24ac:	00065501 	andeq	r5, r6, r1, lsl #10
    24b0:	002e2e00 	eoreq	r2, lr, r0, lsl #28
    24b4:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    24b8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    24bc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    24c0:	01120111 	tsteq	r2, r1, lsl r1
    24c4:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    24c8:	2f00000c 	svccs	0x0000000c
    24cc:	01018289 	smlabbeq	r1, r9, r2, r8
    24d0:	00000111 	andeq	r0, r0, r1, lsl r1
    24d4:	11010b30 	tstne	r1, r0, lsr fp
    24d8:	00011201 	andeq	r1, r1, r1, lsl #4
    24dc:	002e3100 	eoreq	r3, lr, r0, lsl #2
    24e0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    24e4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    24e8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    24ec:	01111349 	tsteq	r1, r9, asr #6
    24f0:	0a400112 	beq	1002940 <_Min_Heap_Size+0x1002140>
    24f4:	000c4297 	muleq	ip, r7, r2
    24f8:	012e3200 			; <UNDEFINED> instruction: 0x012e3200
    24fc:	0b3a0e03 	bleq	e85d10 <_Min_Heap_Size+0xe85510>
    2500:	0b39053b 	bleq	e439f4 <_Min_Heap_Size+0xe431f4>
    2504:	13490c27 	movtne	r0, #39975	; 0x9c27
    2508:	01120111 	tsteq	r2, r1, lsl r1
    250c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    2510:	0013010c 	andseq	r0, r3, ip, lsl #2
    2514:	00343300 	eorseq	r3, r4, r0, lsl #6
    2518:	0b3a0803 	bleq	e8452c <_Min_Heap_Size+0xe83d2c>
    251c:	0b39053b 	bleq	e43a10 <_Min_Heap_Size+0xe43210>
    2520:	06021349 	streq	r1, [r2], -r9, asr #6
    2524:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2528:	012e3400 			; <UNDEFINED> instruction: 0x012e3400
    252c:	0b3a0e03 	bleq	e85d40 <_Min_Heap_Size+0xe85540>
    2530:	0b390b3b 	bleq	e45224 <_Min_Heap_Size+0xe44a24>
    2534:	0b200c27 	bleq	8055d8 <_Min_Heap_Size+0x804dd8>
    2538:	00001301 	andeq	r1, r0, r1, lsl #6
    253c:	03000535 	movweq	r0, #1333	; 0x535
    2540:	3b0b3a0e 	blcc	2d0d80 <_Min_Heap_Size+0x2d0580>
    2544:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2548:	36000013 			; <UNDEFINED> instruction: 0x36000013
    254c:	0e03012e 	adfeqsp	f0, f3, #0.5
    2550:	0b3b0b3a 	bleq	ec5240 <_Min_Heap_Size+0xec4a40>
    2554:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2558:	0b201349 	bleq	807284 <_Min_Heap_Size+0x806a84>
    255c:	00001301 	andeq	r1, r0, r1, lsl #6
    2560:	03003437 	movweq	r3, #1079	; 0x437
    2564:	3b0b3a0e 	blcc	2d0da4 <_Min_Heap_Size+0x2d05a4>
    2568:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    256c:	38000013 	stmdacc	r0, {r0, r1, r4}
    2570:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 24c0 <_Min_Heap_Size+0x1cc0>
    2574:	40870c3c 	addmi	r0, r7, ip, lsr ip
    2578:	3a0e030e 	bcc	3831b8 <_Min_Heap_Size+0x3829b8>
    257c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2580:	3900000b 	stmdbcc	r0, {r0, r1, r3}
    2584:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 24d4 <_Min_Heap_Size+0x1cd4>
    2588:	40870c3c 	addmi	r0, r7, ip, lsr ip
    258c:	3a0e030e 	bcc	3831cc <_Min_Heap_Size+0x3829cc>
    2590:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2594:	3a00000b 	bcc	25c8 <_Min_Heap_Size+0x1dc8>
    2598:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 24e8 <_Min_Heap_Size+0x1ce8>
    259c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    25a0:	3a0e030e 	bcc	3831e0 <_Min_Heap_Size+0x3829e0>
    25a4:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    25a8:	11010000 	mrsne	r0, (UNDEF: 1)
    25ac:	130e2501 	movwne	r2, #58625	; 0xe501
    25b0:	1b0e030b 	blne	3831e4 <_Min_Heap_Size+0x3829e4>
    25b4:	1106550e 	tstne	r6, lr, lsl #10
    25b8:	10015201 	andne	r5, r1, r1, lsl #4
    25bc:	02000006 	andeq	r0, r0, #6
    25c0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    25c4:	0b3b0b3a 	bleq	ec52b4 <_Min_Heap_Size+0xec4ab4>
    25c8:	13490b39 	movtne	r0, #39737	; 0x9b39
    25cc:	24030000 	strcs	r0, [r3], #-0
    25d0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    25d4:	000e030b 	andeq	r0, lr, fp, lsl #6
    25d8:	00240400 	eoreq	r0, r4, r0, lsl #8
    25dc:	0b3e0b0b 	bleq	f85210 <_Min_Heap_Size+0xf84a10>
    25e0:	00000803 	andeq	r0, r0, r3, lsl #16
    25e4:	0b000f05 	bleq	6200 <_Min_Heap_Size+0x5a00>
    25e8:	0600000b 	streq	r0, [r0], -fp
    25ec:	13490026 	movtne	r0, #36902	; 0x9026
    25f0:	0f070000 	svceq	0x00070000
    25f4:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    25f8:	08000013 	stmdaeq	r0, {r0, r1, r4}
    25fc:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    2600:	00001301 	andeq	r1, r0, r1, lsl #6
    2604:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
    2608:	0a000013 	beq	265c <_Min_Heap_Size+0x1e5c>
    260c:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    2610:	0b3a0b0b 	bleq	e85244 <_Min_Heap_Size+0xe84a44>
    2614:	0b39053b 	bleq	e43b08 <_Min_Heap_Size+0xe43308>
    2618:	00001301 	andeq	r1, r0, r1, lsl #6
    261c:	03000d0b 	movweq	r0, #3339	; 0xd0b
    2620:	3b0b3a0e 	blcc	2d0e60 <_Min_Heap_Size+0x2d0660>
    2624:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2628:	000a3813 	andeq	r3, sl, r3, lsl r8
    262c:	01010c00 	tsteq	r1, r0, lsl #24
    2630:	13011349 	movwne	r1, #4937	; 0x1349
    2634:	210d0000 	mrscs	r0, (UNDEF: 13)
    2638:	2f134900 	svccs	0x00134900
    263c:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
    2640:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2644:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2648:	13490b39 	movtne	r0, #39737	; 0x9b39
    264c:	170f0000 	strne	r0, [pc, -r0]
    2650:	3a0b0b01 	bcc	2c525c <_Min_Heap_Size+0x2c4a5c>
    2654:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2658:	0013010b 	andseq	r0, r3, fp, lsl #2
    265c:	000d1000 	andeq	r1, sp, r0
    2660:	0b3a0e03 	bleq	e85e74 <_Min_Heap_Size+0xe85674>
    2664:	0b39053b 	bleq	e43b58 <_Min_Heap_Size+0xe43358>
    2668:	00001349 	andeq	r1, r0, r9, asr #6
    266c:	03000d11 	movweq	r0, #3345	; 0xd11
    2670:	3b0b3a08 	blcc	2d0e98 <_Min_Heap_Size+0x2d0698>
    2674:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2678:	000a3813 	andeq	r3, sl, r3, lsl r8
    267c:	01131200 	tsteq	r3, r0, lsl #4
    2680:	0b0b0e03 	bleq	2c5e94 <_Min_Heap_Size+0x2c5694>
    2684:	0b3b0b3a 	bleq	ec5374 <_Min_Heap_Size+0xec4b74>
    2688:	13010b39 	movwne	r0, #6969	; 0x1b39
    268c:	0d130000 	ldceq	0, cr0, [r3, #-0]
    2690:	3a0e0300 	bcc	383298 <_Min_Heap_Size+0x382a98>
    2694:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2698:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    269c:	1400000a 	strne	r0, [r0], #-10
    26a0:	0e030013 	mcreq	0, 0, r0, cr3, cr3, {0}
    26a4:	00000c3c 	andeq	r0, r0, ip, lsr ip
    26a8:	0b011715 	bleq	48304 <_Min_Heap_Size+0x47b04>
    26ac:	3b0b3a0b 	blcc	2d0ee0 <_Min_Heap_Size+0x2d06e0>
    26b0:	010b390b 	tsteq	fp, fp, lsl #18
    26b4:	16000013 			; <UNDEFINED> instruction: 0x16000013
    26b8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    26bc:	0b3b0b3a 	bleq	ec53ac <_Min_Heap_Size+0xec4bac>
    26c0:	13490b39 	movtne	r0, #39737	; 0x9b39
    26c4:	0d170000 	ldceq	0, cr0, [r7, #-0]
    26c8:	3a080300 	bcc	2032d0 <_Min_Heap_Size+0x202ad0>
    26cc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    26d0:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    26d4:	1800000a 	stmdane	r0, {r1, r3}
    26d8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    26dc:	0b3b0b3a 	bleq	ec53cc <_Min_Heap_Size+0xec4bcc>
    26e0:	13490b39 	movtne	r0, #39737	; 0x9b39
    26e4:	00000a02 	andeq	r0, r0, r2, lsl #20
    26e8:	3f002e19 	svccc	0x00002e19
    26ec:	3a0e030c 	bcc	383324 <_Min_Heap_Size+0x382b24>
    26f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    26f4:	110c270b 	tstne	ip, fp, lsl #14
    26f8:	40011201 	andmi	r1, r1, r1, lsl #4
    26fc:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    2700:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    2704:	030c3f01 	movweq	r3, #52993	; 0xcf01
    2708:	3b0b3a0e 	blcc	2d0f48 <_Min_Heap_Size+0x2d0748>
    270c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2710:	1113490c 	tstne	r3, ip, lsl #18
    2714:	40011201 	andmi	r1, r1, r1, lsl #4
    2718:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    271c:	00001301 	andeq	r1, r0, r1, lsl #6
    2720:	0300051b 	movweq	r0, #1307	; 0x51b
    2724:	3b0b3a0e 	blcc	2d0f64 <_Min_Heap_Size+0x2d0764>
    2728:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    272c:	b7060213 	smladlt	r6, r3, r2, r0
    2730:	00000642 	andeq	r0, r0, r2, asr #12
    2734:	0300341c 	movweq	r3, #1052	; 0x41c
    2738:	3b0b3a0e 	blcc	2d0f78 <_Min_Heap_Size+0x2d0778>
    273c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2740:	000a0213 	andeq	r0, sl, r3, lsl r2
    2744:	00341d00 	eorseq	r1, r4, r0, lsl #26
    2748:	0b3a0e03 	bleq	e85f5c <_Min_Heap_Size+0xe8575c>
    274c:	0b39053b 	bleq	e43c40 <_Min_Heap_Size+0xe43440>
    2750:	06021349 	streq	r1, [r2], -r9, asr #6
    2754:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2758:	82891e00 	addhi	r1, r9, #0, 28
    275c:	01110101 	tsteq	r1, r1, lsl #2
    2760:	00001331 	andeq	r1, r0, r1, lsr r3
    2764:	01828a1f 	orreq	r8, r2, pc, lsl sl
    2768:	910a0200 	mrsls	r0, R10_fiq
    276c:	00000a42 	andeq	r0, r0, r2, asr #20
    2770:	3f012e20 	svccc	0x00012e20
    2774:	3a0e030c 	bcc	3833ac <_Min_Heap_Size+0x382bac>
    2778:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    277c:	110c270b 	tstne	ip, fp, lsl #14
    2780:	40011201 	andmi	r1, r1, r1, lsl #4
    2784:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    2788:	00001301 	andeq	r1, r0, r1, lsl #6
    278c:	01828921 	orreq	r8, r2, r1, lsr #18
    2790:	31011100 	mrscc	r1, (UNDEF: 17)
    2794:	22000013 	andcs	r0, r0, #19
    2798:	0e03012e 	adfeqsp	f0, f3, #0.5
    279c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    27a0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    27a4:	01120111 	tsteq	r2, r1, lsl r1
    27a8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    27ac:	0013010c 	andseq	r0, r3, ip, lsl #2
    27b0:	010b2300 	mrseq	r2, (UNDEF: 59)
    27b4:	01120111 	tsteq	r2, r1, lsl r1
    27b8:	00001301 	andeq	r1, r0, r1, lsl #6
    27bc:	01828924 	orreq	r8, r2, r4, lsr #18
    27c0:	31011101 	tstcc	r1, r1, lsl #2
    27c4:	00130113 	andseq	r0, r3, r3, lsl r1
    27c8:	012e2500 			; <UNDEFINED> instruction: 0x012e2500
    27cc:	0b3a0e03 	bleq	e85fe0 <_Min_Heap_Size+0xe857e0>
    27d0:	0b39053b 	bleq	e43cc4 <_Min_Heap_Size+0xe434c4>
    27d4:	01110c27 	tsteq	r1, r7, lsr #24
    27d8:	06400112 			; <UNDEFINED> instruction: 0x06400112
    27dc:	010c4296 			; <UNDEFINED> instruction: 0x010c4296
    27e0:	26000013 			; <UNDEFINED> instruction: 0x26000013
    27e4:	01018289 	smlabbeq	r1, r9, r2, r8
    27e8:	13010111 	movwne	r0, #4369	; 0x1111
    27ec:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
    27f0:	3a0e0301 	bcc	3833fc <_Min_Heap_Size+0x382bfc>
    27f4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    27f8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    27fc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2800:	97064001 	strls	r4, [r6, -r1]
    2804:	13010c42 	movwne	r0, #7234	; 0x1c42
    2808:	2e280000 	cdpcs	0, 2, cr0, cr8, cr0, {0}
    280c:	3a0e0301 	bcc	383418 <_Min_Heap_Size+0x382c18>
    2810:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2814:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    2818:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    281c:	970a4001 	strls	r4, [sl, -r1]
    2820:	13010c42 	movwne	r0, #7234	; 0x1c42
    2824:	2e290000 	cdpcs	0, 2, cr0, cr9, cr0, {0}
    2828:	030c3f01 	movweq	r3, #52993	; 0xcf01
    282c:	3b0b3a0e 	blcc	2d106c <_Min_Heap_Size+0x2d086c>
    2830:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2834:	1113490c 	tstne	r3, ip, lsl #18
    2838:	40011201 	andmi	r1, r1, r1, lsl #4
    283c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    2840:	00001301 	andeq	r1, r0, r1, lsl #6
    2844:	0300052a 	movweq	r0, #1322	; 0x52a
    2848:	3b0b3a0e 	blcc	2d1088 <_Min_Heap_Size+0x2d0888>
    284c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2850:	000a0213 	andeq	r0, sl, r3, lsl r2
    2854:	002e2b00 	eoreq	r2, lr, r0, lsl #22
    2858:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    285c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2860:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2864:	01111349 	tsteq	r1, r9, asr #6
    2868:	0a400112 	beq	1002cb8 <_Min_Heap_Size+0x10024b8>
    286c:	000c4297 	muleq	ip, r7, r2
    2870:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
    2874:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    2878:	0b3b0b3a 	bleq	ec5568 <_Min_Heap_Size+0xec4d68>
    287c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2880:	01111349 	tsteq	r1, r9, asr #6
    2884:	06400112 			; <UNDEFINED> instruction: 0x06400112
    2888:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    288c:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
    2890:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2894:	0b3b0b3a 	bleq	ec5584 <_Min_Heap_Size+0xec4d84>
    2898:	13490b39 	movtne	r0, #39737	; 0x9b39
    289c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    28a0:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
    28a4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 27f4 <_Min_Heap_Size+0x1ff4>
    28a8:	40870c3c 	addmi	r0, r7, ip, lsr ip
    28ac:	3a0e030e 	bcc	3834ec <_Min_Heap_Size+0x382cec>
    28b0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    28b4:	2f00000b 	svccs	0x0000000b
    28b8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 2808 <_Min_Heap_Size+0x2008>
    28bc:	40870c3c 	addmi	r0, r7, ip, lsr ip
    28c0:	3a0e030e 	bcc	383500 <_Min_Heap_Size+0x382d00>
    28c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    28c8:	0000000b 	andeq	r0, r0, fp
    28cc:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    28d0:	030b130e 	movweq	r1, #45838	; 0xb30e
    28d4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    28d8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    28dc:	00061001 	andeq	r1, r6, r1
    28e0:	00160200 	andseq	r0, r6, r0, lsl #4
    28e4:	0b3a0e03 	bleq	e860f8 <_Min_Heap_Size+0xe858f8>
    28e8:	0b390b3b 	bleq	e455dc <_Min_Heap_Size+0xe44ddc>
    28ec:	00001349 	andeq	r1, r0, r9, asr #6
    28f0:	49002603 	stmdbmi	r0, {r0, r1, r9, sl, sp}
    28f4:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    28f8:	0b0b0024 	bleq	2c2990 <_Min_Heap_Size+0x2c2190>
    28fc:	0e030b3e 	vmoveq.16	d3[0], r0
    2900:	24050000 	strcs	r0, [r5], #-0
    2904:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2908:	0008030b 	andeq	r0, r8, fp, lsl #6
    290c:	000f0600 	andeq	r0, pc, r0, lsl #12
    2910:	00000b0b 	andeq	r0, r0, fp, lsl #22
    2914:	0b000f07 	bleq	6538 <_Min_Heap_Size+0x5d38>
    2918:	0013490b 	andseq	r4, r3, fp, lsl #18
    291c:	01130800 	tsteq	r3, r0, lsl #16
    2920:	0b0b0e03 	bleq	2c6134 <_Min_Heap_Size+0x2c5934>
    2924:	0b3b0b3a 	bleq	ec5614 <_Min_Heap_Size+0xec4e14>
    2928:	13010b39 	movwne	r0, #6969	; 0x1b39
    292c:	0d090000 	stceq	0, cr0, [r9, #-0]
    2930:	3a0e0300 	bcc	383538 <_Min_Heap_Size+0x382d38>
    2934:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2938:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    293c:	0a00000a 	beq	296c <_Min_Heap_Size+0x216c>
    2940:	13490101 	movtne	r0, #37121	; 0x9101
    2944:	00001301 	andeq	r1, r0, r1, lsl #6
    2948:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
    294c:	00052f13 	andeq	r2, r5, r3, lsl pc
    2950:	00340c00 	eorseq	r0, r4, r0, lsl #24
    2954:	0b3a0e03 	bleq	e86168 <_Min_Heap_Size+0xe85968>
    2958:	0b390b3b 	bleq	e4564c <_Min_Heap_Size+0xe44e4c>
    295c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 2840 <_Min_Heap_Size+0x2040>
    2960:	00000c3c 	andeq	r0, r0, ip, lsr ip
    2964:	0300340d 	movweq	r3, #1037	; 0x40d
    2968:	3b0b3a0e 	blcc	2d11a8 <_Min_Heap_Size+0x2d09a8>
    296c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2970:	000b1c13 	andeq	r1, fp, r3, lsl ip
    2974:	00340e00 	eorseq	r0, r4, r0, lsl #28
    2978:	0b3a0e03 	bleq	e8618c <_Min_Heap_Size+0xe8598c>
    297c:	0b390b3b 	bleq	e45670 <_Min_Heap_Size+0xe44e70>
    2980:	0a021349 	beq	876ac <_Min_Heap_Size+0x86eac>
    2984:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    2988:	030c3f00 	movweq	r3, #52992	; 0xcf00
    298c:	3b0b3a0e 	blcc	2d11cc <_Min_Heap_Size+0x2d09cc>
    2990:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2994:	1201110c 	andne	r1, r1, #12, 2
    2998:	970a4001 	strls	r4, [sl, -r1]
    299c:	00000c42 	andeq	r0, r0, r2, asr #24
    29a0:	3f012e10 	svccc	0x00012e10
    29a4:	3a0e030c 	bcc	3835dc <_Min_Heap_Size+0x382ddc>
    29a8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    29ac:	110c270b 	tstne	ip, fp, lsl #14
    29b0:	40011201 	andmi	r1, r1, r1, lsl #4
    29b4:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    29b8:	00001301 	andeq	r1, r0, r1, lsl #6
    29bc:	03000511 	movweq	r0, #1297	; 0x511
    29c0:	3b0b3a0e 	blcc	2d1200 <_Min_Heap_Size+0x2d0a00>
    29c4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    29c8:	b7060213 	smladlt	r6, r3, r2, r0
    29cc:	00000642 	andeq	r0, r0, r2, asr #12
    29d0:	03003412 	movweq	r3, #1042	; 0x412
    29d4:	3b0b3a0e 	blcc	2d1214 <_Min_Heap_Size+0x2d0a14>
    29d8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    29dc:	b7060213 	smladlt	r6, r3, r2, r0
    29e0:	00000642 	andeq	r0, r0, r2, asr #12
    29e4:	01828913 	orreq	r8, r2, r3, lsl r9
    29e8:	31011100 	mrscc	r1, (UNDEF: 17)
    29ec:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    29f0:	0e03012e 	adfeqsp	f0, f3, #0.5
    29f4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    29f8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    29fc:	01120111 	tsteq	r2, r1, lsl r1
    2a00:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    2a04:	0013010c 	andseq	r0, r3, ip, lsl #2
    2a08:	00341500 	eorseq	r1, r4, r0, lsl #10
    2a0c:	0b3a0803 	bleq	e84a20 <_Min_Heap_Size+0xe84220>
    2a10:	0b39053b 	bleq	e43f04 <_Min_Heap_Size+0xe43704>
    2a14:	06021349 	streq	r1, [r2], -r9, asr #6
    2a18:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2a1c:	012e1600 			; <UNDEFINED> instruction: 0x012e1600
    2a20:	0b3a0e03 	bleq	e86234 <_Min_Heap_Size+0xe85a34>
    2a24:	0b39053b 	bleq	e43f18 <_Min_Heap_Size+0xe43718>
    2a28:	01110c27 	tsteq	r1, r7, lsr #24
    2a2c:	0a400112 	beq	1002e7c <_Min_Heap_Size+0x100267c>
    2a30:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    2a34:	17000013 	smladne	r0, r3, r0, r0
    2a38:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 2988 <_Min_Heap_Size+0x2188>
    2a3c:	0b3a0e03 	bleq	e86250 <_Min_Heap_Size+0xe85a50>
    2a40:	0b39053b 	bleq	e43f34 <_Min_Heap_Size+0xe43734>
    2a44:	13490c27 	movtne	r0, #39975	; 0x9c27
    2a48:	01120111 	tsteq	r2, r1, lsl r1
    2a4c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    2a50:	0013010c 	andseq	r0, r3, ip, lsl #2
    2a54:	82891800 	addhi	r1, r9, #0, 16
    2a58:	01110101 	tsteq	r1, r1, lsl #2
    2a5c:	13011331 	movwne	r1, #4913	; 0x1331
    2a60:	8a190000 	bhi	642a68 <_Min_Heap_Size+0x642268>
    2a64:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    2a68:	0a42910a 	beq	10a6e98 <_Min_Heap_Size+0x10a6698>
    2a6c:	891a0000 	ldmdbhi	sl, {}	; <UNPREDICTABLE>
    2a70:	11010182 	smlabbne	r1, r2, r1, r0
    2a74:	00133101 	andseq	r3, r3, r1, lsl #2
    2a78:	002e1b00 	eoreq	r1, lr, r0, lsl #22
    2a7c:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    2a80:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2a84:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2a88:	01111349 	tsteq	r1, r9, asr #6
    2a8c:	0a400112 	beq	1002edc <_Min_Heap_Size+0x10026dc>
    2a90:	000c4297 	muleq	ip, r7, r2
    2a94:	00051c00 	andeq	r1, r5, r0, lsl #24
    2a98:	0b3a0803 	bleq	e84aac <_Min_Heap_Size+0xe842ac>
    2a9c:	0b39053b 	bleq	e43f90 <_Min_Heap_Size+0xe43790>
    2aa0:	06021349 	streq	r1, [r2], -r9, asr #6
    2aa4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2aa8:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    2aac:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    2ab0:	0b3b0b3a 	bleq	ec57a0 <_Min_Heap_Size+0xec4fa0>
    2ab4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2ab8:	01111349 	tsteq	r1, r9, asr #6
    2abc:	06400112 			; <UNDEFINED> instruction: 0x06400112
    2ac0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    2ac4:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    2ac8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    2acc:	0b3b0b3a 	bleq	ec57bc <_Min_Heap_Size+0xec4fbc>
    2ad0:	13490b39 	movtne	r0, #39737	; 0x9b39
    2ad4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2ad8:	1f000006 	svcne	0x00000006
    2adc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2ae0:	0b3b0b3a 	bleq	ec57d0 <_Min_Heap_Size+0xec4fd0>
    2ae4:	13490b39 	movtne	r0, #39737	; 0x9b39
    2ae8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2aec:	20000006 	andcs	r0, r0, r6
    2af0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 2a40 <_Min_Heap_Size+0x2240>
    2af4:	40870c3c 	addmi	r0, r7, ip, lsr ip
    2af8:	3a0e030e 	bcc	383738 <_Min_Heap_Size+0x382f38>
    2afc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2b00:	2100000b 	tstcs	r0, fp
    2b04:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 2a54 <_Min_Heap_Size+0x2254>
    2b08:	40870c3c 	addmi	r0, r7, ip, lsr ip
    2b0c:	3a0e030e 	bcc	38374c <_Min_Heap_Size+0x382f4c>
    2b10:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2b14:	2200000b 	andcs	r0, r0, #11
    2b18:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 2a68 <_Min_Heap_Size+0x2268>
    2b1c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    2b20:	3a0e030e 	bcc	383760 <_Min_Heap_Size+0x382f60>
    2b24:	000b3b0b 	andeq	r3, fp, fp, lsl #22
    2b28:	11010000 	mrsne	r0, (UNDEF: 1)
    2b2c:	130e2501 	movwne	r2, #58625	; 0xe501
    2b30:	1b0e030b 	blne	383764 <_Min_Heap_Size+0x382f64>
    2b34:	1106550e 	tstne	r6, lr, lsl #10
    2b38:	10015201 	andne	r5, r1, r1, lsl #4
    2b3c:	02000006 	andeq	r0, r0, #6
    2b40:	0b0b0024 	bleq	2c2bd8 <_Min_Heap_Size+0x2c23d8>
    2b44:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    2b48:	24030000 	strcs	r0, [r3], #-0
    2b4c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2b50:	000e030b 	andeq	r0, lr, fp, lsl #6
    2b54:	00160400 	andseq	r0, r6, r0, lsl #8
    2b58:	0b3a0e03 	bleq	e8636c <_Min_Heap_Size+0xe85b6c>
    2b5c:	0b390b3b 	bleq	e45850 <_Min_Heap_Size+0xe45050>
    2b60:	00001349 	andeq	r1, r0, r9, asr #6
    2b64:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
    2b68:	06000013 			; <UNDEFINED> instruction: 0x06000013
    2b6c:	0b0b000f 	bleq	2c2bb0 <_Min_Heap_Size+0x2c23b0>
    2b70:	00001349 	andeq	r1, r0, r9, asr #6
    2b74:	27011507 	strcs	r1, [r1, -r7, lsl #10]
    2b78:	0013010c 	andseq	r0, r3, ip, lsl #2
    2b7c:	00050800 	andeq	r0, r5, r0, lsl #16
    2b80:	00001349 	andeq	r1, r0, r9, asr #6
    2b84:	0b000f09 	bleq	67b0 <_Min_Heap_Size+0x5fb0>
    2b88:	0a00000b 	beq	2bbc <_Min_Heap_Size+0x23bc>
    2b8c:	0b3e0104 	bleq	f82fa4 <_Min_Heap_Size+0xf827a4>
    2b90:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    2b94:	0b3b0b3a 	bleq	ec5884 <_Min_Heap_Size+0xec5084>
    2b98:	13010b39 	movwne	r0, #6969	; 0x1b39
    2b9c:	280b0000 	stmdacs	fp, {}	; <UNPREDICTABLE>
    2ba0:	1c0e0300 	stcne	3, cr0, [lr], {-0}
    2ba4:	0c00000b 	stceq	0, cr0, [r0], {11}
    2ba8:	13490026 	movtne	r0, #36902	; 0x9026
    2bac:	150d0000 	strne	r0, [sp, #-0]
    2bb0:	000c2700 	andeq	r2, ip, r0, lsl #14
    2bb4:	00340e00 	eorseq	r0, r4, r0, lsl #28
    2bb8:	0b3a0e03 	bleq	e863cc <_Min_Heap_Size+0xe85bcc>
    2bbc:	0b390b3b 	bleq	e458b0 <_Min_Heap_Size+0xe450b0>
    2bc0:	0a021349 	beq	878ec <_Min_Heap_Size+0x870ec>
    2bc4:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    2bc8:	3a0e0300 	bcc	3837d0 <_Min_Heap_Size+0x382fd0>
    2bcc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2bd0:	110c270b 	tstne	ip, fp, lsl #14
    2bd4:	40011201 	andmi	r1, r1, r1, lsl #4
    2bd8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    2bdc:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    2be0:	030c3f00 	movweq	r3, #52992	; 0xcf00
    2be4:	3b0b3a0e 	blcc	2d1424 <_Min_Heap_Size+0x2d0c24>
    2be8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2bec:	1201110c 	andne	r1, r1, #12, 2
    2bf0:	970a4001 	strls	r4, [sl, -r1]
    2bf4:	00000c42 	andeq	r0, r0, r2, asr #24
    2bf8:	3f012e11 	svccc	0x00012e11
    2bfc:	3a0e030c 	bcc	383834 <_Min_Heap_Size+0x383034>
    2c00:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2c04:	110c270b 	tstne	ip, fp, lsl #14
    2c08:	40011201 	andmi	r1, r1, r1, lsl #4
    2c0c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    2c10:	00001301 	andeq	r1, r0, r1, lsl #6
    2c14:	03000512 	movweq	r0, #1298	; 0x512
    2c18:	3b0b3a0e 	blcc	2d1458 <_Min_Heap_Size+0x2d0c58>
    2c1c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2c20:	b7060213 	smladlt	r6, r3, r2, r0
    2c24:	00000642 	andeq	r0, r0, r2, asr #12
    2c28:	03003413 	movweq	r3, #1043	; 0x413
    2c2c:	3b0b3a0e 	blcc	2d146c <_Min_Heap_Size+0x2d0c6c>
    2c30:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2c34:	b7060213 	smladlt	r6, r3, r2, r0
    2c38:	00000642 	andeq	r0, r0, r2, asr #12
    2c3c:	11010b14 	tstne	r1, r4, lsl fp
    2c40:	01011201 	tsteq	r1, r1, lsl #4
    2c44:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    2c48:	00018289 	andeq	r8, r1, r9, lsl #5
    2c4c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    2c50:	1d160000 	ldcne	0, cr0, [r6, #-0]
    2c54:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    2c58:	0b42b801 	bleq	10b0c64 <_Min_Heap_Size+0x10b0464>
    2c5c:	01120111 	tsteq	r2, r1, lsl r1
    2c60:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    2c64:	13010b57 	movwne	r0, #6999	; 0x1b57
    2c68:	34170000 	ldrcc	r0, [r7], #-0
    2c6c:	00133100 	andseq	r3, r3, r0, lsl #2
    2c70:	00051800 	andeq	r1, r5, r0, lsl #16
    2c74:	06021331 			; <UNDEFINED> instruction: 0x06021331
    2c78:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2c7c:	012e1900 			; <UNDEFINED> instruction: 0x012e1900
    2c80:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    2c84:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2c88:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2c8c:	01120111 	tsteq	r2, r1, lsl r1
    2c90:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    2c94:	0013010c 	andseq	r0, r3, ip, lsl #2
    2c98:	011d1a00 	tsteq	sp, r0, lsl #20
    2c9c:	01521331 	cmpeq	r2, r1, lsr r3
    2ca0:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    2ca4:	58011201 	stmdapl	r1, {r0, r9, ip}
    2ca8:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    2cac:	1b00000b 	blne	2ce0 <_Min_Heap_Size+0x24e0>
    2cb0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 2c00 <_Min_Heap_Size+0x2400>
    2cb4:	0b3a0e03 	bleq	e864c8 <_Min_Heap_Size+0xe85cc8>
    2cb8:	0b39053b 	bleq	e441ac <_Min_Heap_Size+0xe439ac>
    2cbc:	13490c27 	movtne	r0, #39975	; 0x9c27
    2cc0:	01120111 	tsteq	r2, r1, lsl r1
    2cc4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    2cc8:	0013010c 	andseq	r0, r3, ip, lsl #2
    2ccc:	010b1c00 	tsteq	fp, r0, lsl #24
    2cd0:	00001301 	andeq	r1, r0, r1, lsl #6
    2cd4:	0300341d 	movweq	r3, #1053	; 0x41d
    2cd8:	3b0b3a0e 	blcc	2d1518 <_Min_Heap_Size+0x2d0d18>
    2cdc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2ce0:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    2ce4:	0e03012e 	adfeqsp	f0, f3, #0.5
    2ce8:	0b3b0b3a 	bleq	ec59d8 <_Min_Heap_Size+0xec51d8>
    2cec:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2cf0:	01120111 	tsteq	r2, r1, lsl r1
    2cf4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    2cf8:	0013010c 	andseq	r0, r3, ip, lsl #2
    2cfc:	011d1f00 	tsteq	sp, r0, lsl #30
    2d00:	01521331 	cmpeq	r2, r1, lsr r3
    2d04:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    2d08:	58011201 	stmdapl	r1, {r0, r9, ip}
    2d0c:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    2d10:	2000000b 	andcs	r0, r0, fp
    2d14:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 2c64 <_Min_Heap_Size+0x2464>
    2d18:	0b3a0e03 	bleq	e8652c <_Min_Heap_Size+0xe85d2c>
    2d1c:	0b390b3b 	bleq	e45a10 <_Min_Heap_Size+0xe45210>
    2d20:	13490c27 	movtne	r0, #39975	; 0x9c27
    2d24:	01120111 	tsteq	r2, r1, lsl r1
    2d28:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
    2d2c:	0013010c 	andseq	r0, r3, ip, lsl #2
    2d30:	00052100 	andeq	r2, r5, r0, lsl #2
    2d34:	0b3a0e03 	bleq	e86548 <_Min_Heap_Size+0xe85d48>
    2d38:	0b390b3b 	bleq	e45a2c <_Min_Heap_Size+0xe4522c>
    2d3c:	06021349 	streq	r1, [r2], -r9, asr #6
    2d40:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2d44:	00052200 	andeq	r2, r5, r0, lsl #4
    2d48:	0b3a0e03 	bleq	e8655c <_Min_Heap_Size+0xe85d5c>
    2d4c:	0b390b3b 	bleq	e45a40 <_Min_Heap_Size+0xe45240>
    2d50:	0a021349 	beq	87a7c <_Min_Heap_Size+0x8727c>
    2d54:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
    2d58:	3a0e0301 	bcc	383964 <_Min_Heap_Size+0x383164>
    2d5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2d60:	200c270b 	andcs	r2, ip, fp, lsl #14
    2d64:	0013010b 	andseq	r0, r3, fp, lsl #2
    2d68:	00052400 	andeq	r2, r5, r0, lsl #8
    2d6c:	0b3a0e03 	bleq	e86580 <_Min_Heap_Size+0xe85d80>
    2d70:	0b390b3b 	bleq	e45a64 <_Min_Heap_Size+0xe45264>
    2d74:	00001349 	andeq	r1, r0, r9, asr #6
    2d78:	03003425 	movweq	r3, #1061	; 0x425
    2d7c:	3b0b3a0e 	blcc	2d15bc <_Min_Heap_Size+0x2d0dbc>
    2d80:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2d84:	26000013 			; <UNDEFINED> instruction: 0x26000013
    2d88:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 2cd8 <_Min_Heap_Size+0x24d8>
    2d8c:	40870c3c 	addmi	r0, r7, ip, lsr ip
    2d90:	3a0e030e 	bcc	3839d0 <_Min_Heap_Size+0x3831d0>
    2d94:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2d98:	0000000b 	andeq	r0, r0, fp
    2d9c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    2da0:	030b130e 	movweq	r1, #45838	; 0xb30e
    2da4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    2da8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    2dac:	00061001 	andeq	r1, r6, r1
    2db0:	00240200 	eoreq	r0, r4, r0, lsl #4
    2db4:	0b3e0b0b 	bleq	f859e8 <_Min_Heap_Size+0xf851e8>
    2db8:	00000803 	andeq	r0, r0, r3, lsl #16
    2dbc:	03001603 	movweq	r1, #1539	; 0x603
    2dc0:	3b0b3a0e 	blcc	2d1600 <_Min_Heap_Size+0x2d0e00>
    2dc4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2dc8:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    2dcc:	0b0b0024 	bleq	2c2e64 <_Min_Heap_Size+0x2c2664>
    2dd0:	0e030b3e 	vmoveq.16	d3[0], r0
    2dd4:	0f050000 	svceq	0x00050000
    2dd8:	000b0b00 	andeq	r0, fp, r0, lsl #22
    2ddc:	00260600 	eoreq	r0, r6, r0, lsl #12
    2de0:	00001349 	andeq	r1, r0, r9, asr #6
    2de4:	03003407 	movweq	r3, #1031	; 0x407
    2de8:	3b0b3a0e 	blcc	2d1628 <_Min_Heap_Size+0x2d0e28>
    2dec:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2df0:	000a0213 	andeq	r0, sl, r3, lsl r2
    2df4:	000f0800 	andeq	r0, pc, r0, lsl #16
    2df8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    2dfc:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
    2e00:	030c3f01 	movweq	r3, #52993	; 0xcf01
    2e04:	3b0b3a0e 	blcc	2d1644 <_Min_Heap_Size+0x2d0e44>
    2e08:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2e0c:	1113490c 	tstne	r3, ip, lsl #18
    2e10:	40011201 	andmi	r1, r1, r1, lsl #4
    2e14:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    2e18:	00001301 	andeq	r1, r0, r1, lsl #6
    2e1c:	0300050a 	movweq	r0, #1290	; 0x50a
    2e20:	3b0b3a0e 	blcc	2d1660 <_Min_Heap_Size+0x2d0e60>
    2e24:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2e28:	b7060213 	smladlt	r6, r3, r2, r0
    2e2c:	00000642 	andeq	r0, r0, r2, asr #12
    2e30:	0300340b 	movweq	r3, #1035	; 0x40b
    2e34:	3b0b3a0e 	blcc	2d1674 <_Min_Heap_Size+0x2d0e74>
    2e38:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2e3c:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    2e40:	0c00000c 	stceq	0, cr0, [r0], {12}
    2e44:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2e48:	0b3b0b3a 	bleq	ec5b38 <_Min_Heap_Size+0xec5338>
    2e4c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2e50:	340d0000 	strcc	r0, [sp], #-0
    2e54:	3a0e0300 	bcc	383a5c <_Min_Heap_Size+0x38325c>
    2e58:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2e5c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2e60:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    2e64:	890e0000 	stmdbhi	lr, {}	; <UNPREDICTABLE>
    2e68:	11000182 	smlabbne	r0, r2, r1, r0
    2e6c:	00133101 	andseq	r3, r3, r1, lsl #2
    2e70:	002e0f00 	eoreq	r0, lr, r0, lsl #30
    2e74:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    2e78:	030e4087 	movweq	r4, #57479	; 0xe087
    2e7c:	3b0b3a0e 	blcc	2d16bc <_Min_Heap_Size+0x2d0ebc>
    2e80:	000b390b 	andeq	r3, fp, fp, lsl #18
    2e84:	11010000 	mrsne	r0, (UNDEF: 1)
    2e88:	130e2501 	movwne	r2, #58625	; 0xe501
    2e8c:	1b0e030b 	blne	383ac0 <_Min_Heap_Size+0x3832c0>
    2e90:	1106550e 	tstne	r6, lr, lsl #10
    2e94:	10015201 	andne	r5, r1, r1, lsl #4
    2e98:	02000006 	andeq	r0, r0, #6
    2e9c:	0b0b0024 	bleq	2c2f34 <_Min_Heap_Size+0x2c2734>
    2ea0:	0e030b3e 	vmoveq.16	d3[0], r0
    2ea4:	16030000 	strne	r0, [r3], -r0
    2ea8:	3a0e0300 	bcc	383ab0 <_Min_Heap_Size+0x3832b0>
    2eac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2eb0:	0013490b 	andseq	r4, r3, fp, lsl #18
    2eb4:	00240400 	eoreq	r0, r4, r0, lsl #8
    2eb8:	0b3e0b0b 	bleq	f85aec <_Min_Heap_Size+0xf852ec>
    2ebc:	00000803 	andeq	r0, r0, r3, lsl #16
    2ec0:	0b000f05 	bleq	6adc <_Min_Heap_Size+0x62dc>
    2ec4:	0013490b 	andseq	r4, r3, fp, lsl #18
    2ec8:	01130600 	tsteq	r3, r0, lsl #12
    2ecc:	0b0b0e03 	bleq	2c66e0 <_Min_Heap_Size+0x2c5ee0>
    2ed0:	0b3b0b3a 	bleq	ec5bc0 <_Min_Heap_Size+0xec53c0>
    2ed4:	13010b39 	movwne	r0, #6969	; 0x1b39
    2ed8:	0d070000 	stceq	0, cr0, [r7, #-0]
    2edc:	3a0e0300 	bcc	383ae4 <_Min_Heap_Size+0x3832e4>
    2ee0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2ee4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    2ee8:	0800000a 	stmdaeq	r0, {r1, r3}
    2eec:	13490101 	movtne	r0, #37121	; 0x9101
    2ef0:	00001301 	andeq	r1, r0, r1, lsl #6
    2ef4:	49002109 	stmdbmi	r0, {r0, r3, r8, sp}
    2ef8:	000b2f13 	andeq	r2, fp, r3, lsl pc
    2efc:	01130a00 	tsteq	r3, r0, lsl #20
    2f00:	0b0b0803 	bleq	2c4f14 <_Min_Heap_Size+0x2c4714>
    2f04:	0b3b0b3a 	bleq	ec5bf4 <_Min_Heap_Size+0xec53f4>
    2f08:	13010b39 	movwne	r0, #6969	; 0x1b39
    2f0c:	340b0000 	strcc	r0, [fp], #-0
    2f10:	3a0e0300 	bcc	383b18 <_Min_Heap_Size+0x383318>
    2f14:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2f18:	3f13490b 	svccc	0x0013490b
    2f1c:	000a020c 	andeq	r0, sl, ip, lsl #4
    2f20:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
    2f24:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    2f28:	0b3b0b3a 	bleq	ec5c18 <_Min_Heap_Size+0xec5418>
    2f2c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2f30:	01111349 	tsteq	r1, r9, asr #6
    2f34:	06400112 			; <UNDEFINED> instruction: 0x06400112
    2f38:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    2f3c:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    2f40:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    2f44:	0b3b0b3a 	bleq	ec5c34 <_Min_Heap_Size+0xec5434>
    2f48:	13490b39 	movtne	r0, #39737	; 0x9b39
    2f4c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2f50:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    2f54:	08030005 	stmdaeq	r3, {r0, r2}
    2f58:	0b3b0b3a 	bleq	ec5c48 <_Min_Heap_Size+0xec5448>
    2f5c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2f60:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2f64:	0f000006 	svceq	0x00000006
    2f68:	00018289 	andeq	r8, r1, r9, lsl #5
    2f6c:	13310111 	teqne	r1, #1073741828	; 0x40000004
    2f70:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    2f74:	030c3f01 	movweq	r3, #52993	; 0xcf01
    2f78:	3b0b3a0e 	blcc	2d17b8 <_Min_Heap_Size+0x2d0fb8>
    2f7c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2f80:	1113490c 	tstne	r3, ip, lsl #18
    2f84:	40011201 	andmi	r1, r1, r1, lsl #4
    2f88:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    2f8c:	00001301 	andeq	r1, r0, r1, lsl #6
    2f90:	03000511 	movweq	r0, #1297	; 0x511
    2f94:	3b0b3a08 	blcc	2d17bc <_Min_Heap_Size+0x2d0fbc>
    2f98:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2f9c:	000a0213 	andeq	r0, sl, r3, lsl r2
    2fa0:	00051200 	andeq	r1, r5, r0, lsl #4
    2fa4:	0b3a0e03 	bleq	e867b8 <_Min_Heap_Size+0xe85fb8>
    2fa8:	0b390b3b 	bleq	e45c9c <_Min_Heap_Size+0xe4549c>
    2fac:	0a021349 	beq	87cd8 <_Min_Heap_Size+0x874d8>
    2fb0:	18130000 	ldmdane	r3, {}	; <UNPREDICTABLE>
    2fb4:	14000000 	strne	r0, [r0], #-0
    2fb8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2fbc:	0b3b0b3a 	bleq	ec5cac <_Min_Heap_Size+0xec54ac>
    2fc0:	13490b39 	movtne	r0, #39737	; 0x9b39
    2fc4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2fc8:	15000006 	strne	r0, [r0, #-6]
    2fcc:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 2f1c <_Min_Heap_Size+0x271c>
    2fd0:	0b3a0e03 	bleq	e867e4 <_Min_Heap_Size+0xe85fe4>
    2fd4:	0b390b3b 	bleq	e45cc8 <_Min_Heap_Size+0xe454c8>
    2fd8:	01870c27 	orreq	r0, r7, r7, lsr #24
    2fdc:	1201110c 	andne	r1, r1, #12, 2
    2fe0:	97064001 	strls	r4, [r6, -r1]
    2fe4:	13010c42 	movwne	r0, #7234	; 0x1c42
    2fe8:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
    2fec:	11010182 	smlabbne	r1, r2, r1, r0
    2ff0:	00133101 	andseq	r3, r3, r1, lsl #2
    2ff4:	828a1700 	addhi	r1, sl, #0, 14
    2ff8:	0a020001 	beq	83004 <_Min_Heap_Size+0x82804>
    2ffc:	000a4291 	muleq	sl, r1, r2
    3000:	002e1800 	eoreq	r1, lr, r0, lsl #16
    3004:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    3008:	0b3b0b3a 	bleq	ec5cf8 <_Min_Heap_Size+0xec54f8>
    300c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    3010:	01111349 	tsteq	r1, r9, asr #6
    3014:	0a400112 	beq	1003464 <_Min_Heap_Size+0x1002c64>
    3018:	000c4297 	muleq	ip, r7, r2
    301c:	002e1900 	eoreq	r1, lr, r0, lsl #18
    3020:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    3024:	0b3b0b3a 	bleq	ec5d14 <_Min_Heap_Size+0xec5514>
    3028:	01110b39 	tsteq	r1, r9, lsr fp
    302c:	0a400112 	beq	100347c <_Min_Heap_Size+0x1002c7c>
    3030:	000c4297 	muleq	ip, r7, r2
    3034:	002e1a00 	eoreq	r1, lr, r0, lsl #20
    3038:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    303c:	030e4087 	movweq	r4, #57479	; 0xe087
    3040:	3b0b3a0e 	blcc	2d1880 <_Min_Heap_Size+0x2d1080>
    3044:	000b390b 	andeq	r3, fp, fp, lsl #18
    3048:	11010000 	mrsne	r0, (UNDEF: 1)
    304c:	55061000 	strpl	r1, [r6, #-0]
    3050:	1b0e0306 	blne	383c70 <_Min_Heap_Size+0x383470>
    3054:	130e250e 	movwne	r2, #58638	; 0xe50e
    3058:	00000005 	andeq	r0, r0, r5
    305c:	10001101 	andne	r1, r0, r1, lsl #2
    3060:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
    3064:	1b0e0301 	blne	383c70 <_Min_Heap_Size+0x383470>
    3068:	130e250e 	movwne	r2, #58638	; 0xe50e
    306c:	00000005 	andeq	r0, r0, r5

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
	...
  errno = ENOMEM;
       8:	007d0002 	rsbseq	r0, sp, r2
	...
      14:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	d87d0003 	ldmdale	sp!, {r0, r1}^
	...
}
      2c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
      30:	00000004 	andeq	r0, r0, r4
    if (status != HAL_OK)
      34:	00000000 	andeq	r0, r0, r0
      uwTickFreq = prevTickFreq;
      38:	7d000300 	stcvc	3, cr0, [r0, #-0]
      3c:	000000d8 	ldrdeq	r0, [r0], -r8
      40:	00000000 	andeq	r0, r0, r0
      44:	06400000 	strbeq	r0, [r0], -r0
      48:	06420800 	strbeq	r0, [r2], -r0, lsl #16
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	00020800 	andeq	r0, r2, r0, lsl #16
            while( pxBlock != pxEnd )
      50:	0642007d 			; <UNDEFINED> instruction: 0x0642007d
      54:	066c0800 	strbteq	r0, [ip], -r0, lsl #16
                if( pxBlock->xBlockSize > xMaxSize )
      58:	00020800 	andeq	r0, r2, r0, lsl #16
      5c:	0000087d 	andeq	r0, r0, sp, ror r8
                if( pxBlock->xBlockSize < xMinSize )
      60:	00000000 	andeq	r0, r0, r0
                    xMinSize = pxBlock->xBlockSize;
      64:	05c40000 	strbeq	r0, [r4]
      68:	05c60800 	strbeq	r0, [r6, #2048]	; 0x800
      6c:	00020800 	andeq	r0, r2, r0, lsl #16
      70:	05c6007d 	strbeq	r0, [r6, #125]	; 0x7d
      74:	05c80800 	strbeq	r0, [r8, #2048]	; 0x800
      78:	00020800 	andeq	r0, r2, r0, lsl #16
      7c:	05c8047d 	strbeq	r0, [r8, #1149]	; 0x47d
      80:	05ec0800 	strbeq	r0, [ip, #2048]!	; 0x800
      84:	00020800 	andeq	r0, r2, r0, lsl #16
      88:	05ec107d 	strbeq	r1, [ip, #125]!	; 0x7d
      8c:	05f00800 	ldrbeq	r0, [r0, #2048]!	; 0x800
      90:	00020800 	andeq	r0, r2, r0, lsl #16
      94:	05f0047d 	ldrbeq	r0, [r0, #1149]!	; 0x47d
      98:	06080800 	streq	r0, [r8], -r0, lsl #16
      9c:	00020800 	andeq	r0, r2, r0, lsl #16
      a0:	0000107d 	andeq	r1, r0, sp, ror r0
      a4:	00000000 	andeq	r0, r0, r0
      a8:	00020000 	andeq	r0, r2, r0
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	00000000 	andeq	r0, r0, r0
      b0:	05c80000 	strbeq	r0, [r8]
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	05de0800 	ldrbeq	r0, [lr, #2048]	; 0x800
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	00020800 	andeq	r0, r2, r0, lsl #16
      bc:	05de9f31 	ldrbeq	r9, [lr, #3889]	; 0xf31
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	05e60800 	strbeq	r0, [r6, #2048]!	; 0x800
      c4:	00010800 	andeq	r0, r1, r0, lsl #16
      c8:	0005e650 	andeq	lr, r5, r0, asr r6
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	0005e908 	andeq	lr, r5, r8, lsl #18
      d0:	51000108 	tstpl	r0, r8, lsl #2
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	080005f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, sl}
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	080005f3 	stmdaeq	r0, {r0, r1, r4, r5, r6, r7, r8, sl}
      dc:	00500001 	subseq	r0, r0, r1
      e0:	00000000 	andeq	r0, r0, r0
    if (huart->hdmarx != NULL)
      e4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	0a080006 	beq	200108 <_Min_Heap_Size+0x1ff908>
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	02080006 	andeq	r0, r8, #6
      f0:	0a007d00 	beq	1f4f8 <_Min_Heap_Size+0x1ecf8>
    huart->TxXferCount = 0x00U;
      f4:	20080006 	andcs	r0, r8, r6
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	02080006 	andeq	r0, r8, #6
    huart->gState  = HAL_UART_STATE_READY;
      fc:	00087d00 	andeq	r7, r8, r0, lsl #26
    huart->RxState = HAL_UART_STATE_READY;
     100:	00000000 	andeq	r0, r0, r0
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	01000000 	mrseq	r0, (UNDEF: 0)
    HAL_UART_AbortCpltCallback(huart);
     108:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     10c:	0a080006 	beq	20012c <_Min_Heap_Size+0x1ff92c>
  uint32_t AbortCplt = 0x01U;
     110:	01080006 	tsteq	r8, r6
  if (AbortCplt == 0x01U)
     114:	060a5000 	streq	r5, [sl], -r0
}
     118:	06200800 	strteq	r0, [r0], -r0, lsl #16
     11c:	00040800 	andeq	r0, r4, r0, lsl #16
     120:	9f5001f3 	svcls	0x005001f3
	...
                    taskYIELD_WITHIN_API();
     134:	007d0002 	rsbseq	r0, sp, r2
	...
            prvUnlockQueue( pxQueue );
     140:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     154:	007d0002 	rsbseq	r0, sp, r2
	...
     160:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     174:	007d0002 	rsbseq	r0, sp, r2
	...
     180:	087d0002 	ldmdaeq	sp!, {r1}^
	...
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     194:	007d0002 	rsbseq	r0, sp, r2
	...
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     1a0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b4:	007d0002 	rsbseq	r0, sp, r2
	...
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1c0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1d4:	007d0002 	rsbseq	r0, sp, r2
	...
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	007d0002 	rsbseq	r0, sp, r2
	...
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     20c:	187d0002 	ldmdane	sp!, {r1}^
	...
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	01010101 	tsteq	r1, r1, lsl #2
     228:	00000001 	andeq	r0, r0, r1
  tmp = hdma->Instance->FCR;
     22c:	00000000 	andeq	r0, r0, r0
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	00020000 	andeq	r0, r2, r0
  tmp |= hdma->Init.FIFOMode;
     234:	00009f30 	andeq	r9, r0, r0, lsr pc
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	00000000 	andeq	r0, r0, r0
    tmp |= hdma->Init.FIFOThreshold;
     23c:	00020000 	andeq	r0, r2, r0
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	00009f34 	andeq	r9, r0, r4, lsr pc
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	00000000 	andeq	r0, r0, r0
     248:	00020000 	andeq	r0, r2, r0
  hdma->Instance->FCR = tmp;
     24c:	00009f33 	andeq	r9, r0, r3, lsr pc
	...
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00020000 	andeq	r0, r2, r0
  hdma->State = HAL_DMA_STATE_READY;
     260:	0000007d 	andeq	r0, r0, sp, ror r0
     264:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
     268:	00020000 	andeq	r0, r2, r0
     26c:	0000087d 	andeq	r0, r0, sp, ror r8
     270:	00000000 	andeq	r0, r0, r0
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	06200000 	strteq	r0, [r0], -r0
     278:	06220800 	strteq	r0, [r2], -r0, lsl #16
     27c:	00020800 	andeq	r0, r2, r0, lsl #16
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	0622007d 			; <UNDEFINED> instruction: 0x0622007d
        hdma->State = HAL_DMA_STATE_READY;
     284:	06240800 	strteq	r0, [r4], -r0, lsl #16
        return HAL_ERROR; 
     288:	00020800 	andeq	r0, r2, r0, lsl #16
    return HAL_ERROR;
     28c:	0624047d 			; <UNDEFINED> instruction: 0x0624047d
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	06380800 	ldrteq	r0, [r8], -r0, lsl #16
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	00020800 	andeq	r0, r2, r0, lsl #16
     298:	0638107d 			; <UNDEFINED> instruction: 0x0638107d
      tickstart = HAL_GetTick();
     29c:	06400800 	strbeq	r0, [r0], -r0, lsl #16
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00020800 	andeq	r0, r2, r0, lsl #16
     2a4:	0000047d 	andeq	r0, r0, sp, ror r4
	...
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2b0:	06200000 	strteq	r0, [r0], -r0
     2b4:	06300800 	ldrteq	r0, [r0], -r0, lsl #16
          return HAL_TIMEOUT;
     2b8:	00010800 	andeq	r0, r1, r0, lsl #16
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	00063050 	andeq	r3, r6, r0, asr r0
     2c0:	00063308 	andeq	r3, r6, r8, lsl #6
     2c4:	71000208 	tstvc	r0, r8, lsl #4
	...
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2d0:	00070c00 	andeq	r0, r7, r0, lsl #24
     2d4:	00070e08 	andeq	r0, r7, r8, lsl #28
      tickstart = HAL_GetTick();
     2d8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	00070e00 	andeq	r0, r7, r0, lsl #28
     2e0:	00072408 	andeq	r2, r7, r8, lsl #8
     2e4:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	00000008 	andeq	r0, r0, r8
	...
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	00070c00 	andeq	r0, r7, r0, lsl #24
     2f8:	00071208 	andeq	r1, r7, r8, lsl #4
     2fc:	50000108 	andpl	r0, r0, r8, lsl #2
     300:	08000712 	stmdaeq	r0, {r1, r4, r8, r9, sl}
     304:	08000724 	stmdaeq	r0, {r2, r5, r8, r9, sl}
     308:	01f30004 	mvnseq	r0, r4
     30c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
      tickstart = HAL_GetTick();
     318:	070c0000 	streq	r0, [ip, -r0]
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	07100800 	ldreq	r0, [r0, -r0, lsl #16]
     320:	00010800 	andeq	r0, r1, r0, lsl #16
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	00071051 	andeq	r1, r7, r1, asr r0
     328:	00072408 	andeq	r2, r7, r8, lsl #8
     32c:	f3000408 	vshl.u8	d0, d8, d0
     330:	009f5101 	addseq	r5, pc, r1, lsl #2
          return HAL_TIMEOUT;
     334:	00000000 	andeq	r0, r0, r0
    if(pwrclkchanged == SET)
     338:	f4000000 	vst4.8	{d0-d3}, [r0], r0
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	f6080006 			; <UNDEFINED> instruction: 0xf6080006
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	02080006 	andeq	r0, r8, #6
     344:	f6007d00 			; <UNDEFINED> instruction: 0xf6007d00
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	0c080006 	stceq	0, cr0, [r8], {6}
     34c:	02080007 	andeq	r0, r8, #7
     350:	00087d00 	andeq	r7, r8, r0, lsl #26
     354:	00000000 	andeq	r0, r0, r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	e4000000 	str	r0, [r0], #-0
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	e6080006 	str	r0, [r8], -r6
     360:	02080006 	andeq	r0, r8, #6
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	e6007d00 	str	r7, [r0], -r0, lsl #26
     368:	f4080006 	vst4.8	{d0-d3}, [r8], r6
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	02080006 	andeq	r0, r8, #6
     370:	00087d00 	andeq	r7, r8, r0, lsl #26
     374:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
     37c:	d0080006 	andle	r0, r8, r6
     380:	02080006 	andeq	r0, r8, #6
     384:	d0007d00 	andle	r7, r0, r0, lsl #26
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	e4080006 	str	r0, [r8], #-6
     38c:	02080006 	andeq	r0, r8, #6
        __HAL_RCC_PLL_DISABLE();
     390:	00087d00 	andeq	r7, r8, r0, lsl #26
     394:	00000000 	andeq	r0, r0, r0
        tickstart = HAL_GetTick();
     398:	c6000000 	strgt	r0, [r0], -r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	c8080006 	stmdagt	r8, {r1, r2}
     3a0:	02080006 	andeq	r0, r8, #6
     3a4:	c8007d00 	stmdagt	r0, {r8, sl, fp, ip, sp, lr}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	ce080006 	cdpgt	0, 0, cr0, cr8, cr6, {0}
     3ac:	02080006 	andeq	r0, r8, #6
            return HAL_TIMEOUT;
     3b0:	00087d00 	andeq	r7, r8, r0, lsl #26
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	00000000 	andeq	r0, r0, r0
     3b8:	bc000000 	stclt	0, cr0, [r0], {-0}
     3bc:	be080006 	cdplt	0, 0, cr0, cr8, cr6, {0}
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	02080006 	andeq	r0, r8, #6
     3c4:	be007d00 	cdplt	13, 0, cr7, cr0, cr0, {0}
     3c8:	c4080006 	strgt	r0, [r8], #-6
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	02080006 	andeq	r0, r8, #6
     3d0:	00087d00 	andeq	r7, r8, r0, lsl #26
     3d4:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
     3dc:	aa080006 	bge	2003fc <_Min_Heap_Size+0x1ffbfc>
     3e0:	02080006 	andeq	r0, r8, #6
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	aa007d00 	bge	1f7ec <_Min_Heap_Size+0x1efec>
     3e8:	bc080006 	stclt	0, cr0, [r8], {6}
     3ec:	02080006 	andeq	r0, r8, #6
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	00087d00 	andeq	r7, r8, r0, lsl #26
     3f4:	00000000 	andeq	r0, r0, r0
     3f8:	94000000 	strls	r0, [r0], #-0
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	96080006 	strls	r0, [r8], -r6
     400:	02080006 	andeq	r0, r8, #6
     404:	96007d00 	strls	r7, [r0], -r0, lsl #26
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	a8080006 	stmdage	r8, {r1, r2}
     40c:	02080006 	andeq	r0, r8, #6
     410:	00087d00 	andeq	r7, r8, r0, lsl #26
     414:	00000000 	andeq	r0, r0, r0
     418:	80000000 	andhi	r0, r0, r0
     41c:	82080006 	andhi	r0, r8, #6
     420:	02080006 	andeq	r0, r8, #6
     424:	82007d00 	andhi	r7, r0, #0, 26
        __HAL_RCC_PLL_ENABLE();
     428:	94080006 	strls	r0, [r8], #-6
     42c:	02080006 	andeq	r0, r8, #6
        tickstart = HAL_GetTick();
     430:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	02000000 	andeq	r0, r0, #0
     444:	00007d00 	andeq	r7, r0, r0, lsl #26
            return HAL_TIMEOUT;
     448:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
     44c:	02000000 	andeq	r0, r0, #0
        __HAL_RCC_PLL_DISABLE();
     450:	00087d00 	andeq	r7, r8, r0, lsl #26
     454:	00000000 	andeq	r0, r0, r0
        tickstart = HAL_GetTick();
     458:	6c000000 	stcvs	0, cr0, [r0], {-0}
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	6e080006 	cdpvs	0, 0, cr0, cr8, cr6, {0}
     460:	02080006 	andeq	r0, r8, #6
     464:	6e007d00 	cdpvs	13, 0, cr7, cr0, cr0, {0}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	80080006 	andhi	r0, r8, r6
     46c:	02080006 	andeq	r0, r8, #6
            return HAL_TIMEOUT;
     470:	00087d00 	andeq	r7, r8, r0, lsl #26
  return HAL_OK;
     474:	00000000 	andeq	r0, r0, r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	24000000 	strcs	r0, [r0], #-0
        pll_config = RCC->PLLCFGR;
     47c:	26080007 	strcs	r0, [r8], -r7
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	02080007 	andeq	r0, r8, #7
     484:	26007d00 	strcs	r7, [r0], -r0, lsl #26
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	68080007 	stmdavs	r8, {r0, r1, r2}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	02080007 	andeq	r0, r8, #7
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	68107d00 	ldmdavs	r0, {r8, sl, fp, ip, sp, lr}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	70080007 	andvc	r0, r8, r7
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	02080007 	andeq	r0, r8, #7
     49c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	02000000 	andeq	r0, r0, #0
     4b0:	00007d00 	andeq	r7, r0, r0, lsl #26
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	02000000 	andeq	r0, r0, #0
     4bc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
        return HAL_ERROR;
     4d4:	01000000 	mrseq	r0, (UNDEF: 0)
          return HAL_ERROR;
     4d8:	00005000 	andeq	r5, r0, r0
     4dc:	00000000 	andeq	r0, r0, r0
     4e0:	00040000 	andeq	r0, r4, r0
     4e4:	9f5001f3 	svcls	0x005001f3
	...
     4f0:	00500001 	subseq	r0, r0, r1
     4f4:	00000000 	andeq	r0, r0, r0
     4f8:	04000000 	streq	r0, [r0], #-0
     4fc:	5001f300 	andpl	pc, r1, r0, lsl #6
     500:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     504:	00000000 	andeq	r0, r0, r0
     508:	0007a400 	andeq	sl, r7, r0, lsl #8
     50c:	0007a608 	andeq	sl, r7, r8, lsl #12
     510:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     514:	0007a600 	andeq	sl, r7, r0, lsl #12
     518:	0007a808 	andeq	sl, r7, r8, lsl #16
     51c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     520:	0007a808 	andeq	sl, r7, r8, lsl #16
     524:	0007c408 	andeq	ip, r7, r8, lsl #8
     528:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     52c:	0007c428 	andeq	ip, r7, r8, lsr #8
     530:	0007c608 	andeq	ip, r7, r8, lsl #12
     534:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     538:	0007c608 	andeq	ip, r7, r8, lsl #12
     53c:	00082408 	andeq	r2, r8, r8, lsl #8
     540:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
     544:	00000028 	andeq	r0, r0, r8, lsr #32
	...
     554:	0007a400 	andeq	sl, r7, r0, lsl #8
     558:	0007c208 	andeq	ip, r7, r8, lsl #4
     55c:	50000108 	andpl	r0, r0, r8, lsl #2
     560:	080007c2 	stmdaeq	r0, {r1, r6, r7, r8, r9, sl}
     564:	080007c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, r9, sl}
     568:	01f30004 	mvnseq	r0, r4
     56c:	07c69f50 			; <UNDEFINED> instruction: 0x07c69f50
     570:	080a0800 	stmdaeq	sl, {fp}
     574:	00010800 	andeq	r0, r1, r0, lsl #16
     578:	00080a50 	andeq	r0, r8, r0, asr sl
     57c:	00082408 	andeq	r2, r8, r8, lsl #8
     580:	f3000408 	vshl.u8	d0, d8, d0
     584:	009f5001 	addseq	r5, pc, r1
     588:	00000000 	andeq	r0, r0, r0
     58c:	70000000 	andvc	r0, r0, r0
     590:	72080007 	andvc	r0, r8, #7
     594:	02080007 	andeq	r0, r8, #7
     598:	72007d00 	andvc	r7, r0, #0, 26
     59c:	a4080007 	strge	r0, [r8], #-7
     5a0:	02080007 	andeq	r0, r8, #7
     5a4:	00087d00 	andeq	r7, r8, r0, lsl #26
     5a8:	00000000 	andeq	r0, r0, r0
     5ac:	24000000 	strcs	r0, [r0], #-0
     5b0:	26080008 	strcs	r0, [r8], -r8
     5b4:	02080008 	andeq	r0, r8, #8
     5b8:	26007d00 	strcs	r7, [r0], -r0, lsl #26
     5bc:	54080008 	strpl	r0, [r8], #-8
     5c0:	02080008 	andeq	r0, r8, #8
     5c4:	54087d00 	strpl	r7, [r8], #-3328	; 0xfffff300
     5c8:	5c080008 	stcpl	0, cr0, [r8], {8}
     5cc:	02080008 	andeq	r0, r8, #8
     5d0:	00007d00 	andeq	r7, r0, r0, lsl #26
     5d4:	00000000 	andeq	r0, r0, r0
     5d8:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     5dc:	1a080009 	bne	200608 <_Min_Heap_Size+0x1ffe08>
     5e0:	02080009 	andeq	r0, r8, #9
     5e4:	1a007d00 	bne	1f9ec <_Min_Heap_Size+0x1f1ec>
     5e8:	8c080009 	stchi	0, cr0, [r8], {9}
     5ec:	0208000a 	andeq	r0, r8, #10
     5f0:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
     600:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     604:	24080009 	strcs	r0, [r8], #-9
     608:	01080009 	tsteq	r8, r9
     60c:	09245000 	stmdbeq	r4!, {ip, lr}
     610:	09a40800 	stmibeq	r4!, {fp}
     614:	00010800 	andeq	r0, r1, r0, lsl #16
     618:	0009a454 	andeq	sl, r9, r4, asr r4
     61c:	0009aa08 	andeq	sl, r9, r8, lsl #20
     620:	50000108 	andpl	r0, r0, r8, lsl #2
     624:	080009aa 	stmdaeq	r0, {r1, r3, r5, r7, r8, fp}
     628:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
     62c:	00540001 	subseq	r0, r4, r1
	...
     638:	00097000 	andeq	r7, r9, r0
     63c:	00098208 	andeq	r8, r9, r8, lsl #4
     640:	52000108 	andpl	r0, r0, #8, 2
	...
     650:	09a20000 	stmibeq	r2!, {}	; <UNPREDICTABLE>
     654:	09a40800 	stmibeq	r4!, {fp}
     658:	00010800 	andeq	r0, r1, r0, lsl #16
     65c:	0009cc50 	andeq	ip, r9, r0, asr ip
     660:	0009ea08 	andeq	lr, r9, r8, lsl #20
     664:	50000108 	andpl	r0, r0, r8, lsl #2
     668:	08000a28 	stmdaeq	r0, {r3, r5, r9, fp}
     66c:	08000a40 	stmdaeq	r0, {r6, r9, fp}
     670:	00500001 	subseq	r0, r0, r1
     674:	00000000 	andeq	r0, r0, r0
     678:	42000000 	andmi	r0, r0, #0
     67c:	8208000d 	andhi	r0, r8, #13
     680:	0208000d 	andeq	r0, r8, #13
     684:	82007d00 	andhi	r7, r0, #0, 26
     688:	8408000d 	strhi	r0, [r8], #-13
     68c:	0208000d 	andeq	r0, r8, #13
     690:	84047d00 	strhi	r7, [r4], #-3328	; 0xfffff300
     694:	f008000d 			; <UNDEFINED> instruction: 0xf008000d
     698:	0208000d 	andeq	r0, r8, #13
     69c:	f0107d00 			; <UNDEFINED> instruction: 0xf0107d00
     6a0:	f408000d 	vst4.8	{d0-d3}, [r8]!
     6a4:	0208000d 	andeq	r0, r8, #13
     6a8:	f4047d00 			; <UNDEFINED> instruction: 0xf4047d00
     6ac:	1a08000d 	bne	2006e8 <_Min_Heap_Size+0x1ffee8>
     6b0:	0208000e 	andeq	r0, r8, #14
     6b4:	1a007d00 	bne	1fabc <_Min_Heap_Size+0x1f2bc>
     6b8:	2008000e 	andcs	r0, r8, lr
     6bc:	0208000e 	andeq	r0, r8, #14
     6c0:	20107d00 	andscs	r7, r0, r0, lsl #26
     6c4:	2808000e 	stmdacs	r8, {r1, r2, r3}
     6c8:	0208000e 	andeq	r0, r8, #14
     6cc:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
     6e4:	42000000 	andmi	r0, r0, #0
     6e8:	eb08000d 	bl	200724 <_Min_Heap_Size+0x1fff24>
     6ec:	0108000d 	tsteq	r8, sp
     6f0:	0deb5000 	stcleq	0, cr5, [fp]
     6f4:	0df40800 	ldcleq	8, cr0, [r4]
     6f8:	00040800 	andeq	r0, r4, r0, lsl #16
     6fc:	9f5001f3 	svcls	0x005001f3
     700:	08000df4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, fp}
     704:	08000e1d 	stmdaeq	r0, {r0, r2, r3, r4, r9, sl, fp}
     708:	1d500001 	ldclne	0, cr0, [r0, #-4]
     70c:	2008000e 	andcs	r0, r8, lr
     710:	0408000e 	streq	r0, [r8], #-14
     714:	5001f300 	andpl	pc, r1, r0, lsl #6
     718:	000e209f 	muleq	lr, pc, r0	; <UNPREDICTABLE>
     71c:	000e2208 	andeq	r2, lr, r8, lsl #4
     720:	50000108 	andpl	r0, r0, r8, lsl #2
     724:	08000e22 	stmdaeq	r0, {r1, r5, r9, sl, fp}
     728:	08000e24 	stmdaeq	r0, {r2, r5, r9, sl, fp}
     72c:	01f30004 	mvnseq	r0, r4
     730:	0e249f50 	mcreq	15, 1, r9, cr4, cr0, {2}
     734:	0e260800 	cdpeq	8, 2, cr0, cr6, cr0, {0}
     738:	00010800 	andeq	r0, r1, r0, lsl #16
     73c:	000e2650 	andeq	r2, lr, r0, asr r6
     740:	000e2808 	andeq	r2, lr, r8, lsl #16
     744:	f3000408 	vshl.u8	d0, d8, d0
     748:	009f5001 	addseq	r5, pc, r1
	...
     754:	00000100 	andeq	r0, r0, r0, lsl #2
     758:	000d5600 	andeq	r5, sp, r0, lsl #12
     75c:	000d7208 	andeq	r7, sp, r8, lsl #4
     760:	52000108 	andpl	r0, r0, #8, 2
     764:	08000dfa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8, sl, fp}
     768:	08000e0e 	stmdaeq	r0, {r1, r2, r3, r9, sl, fp}
     76c:	9f300002 	svcls	0x00300002
     770:	08000e0e 	stmdaeq	r0, {r1, r2, r3, r9, sl, fp}
     774:	08000e1a 	stmdaeq	r0, {r1, r3, r4, r9, sl, fp}
     778:	00520001 	subseq	r0, r2, r1
     77c:	00000000 	andeq	r0, r0, r0
     780:	01000000 	mrseq	r0, (UNDEF: 0)
     784:	00000000 	andeq	r0, r0, r0
     788:	000d5600 	andeq	r5, sp, r0, lsl #12
     78c:	000d7208 	andeq	r7, sp, r8, lsl #4
     790:	30000208 	andcc	r0, r0, r8, lsl #4
     794:	000dfc9f 	muleq	sp, pc, ip	; <UNPREDICTABLE>
     798:	000e0e08 	andeq	r0, lr, r8, lsl #28
     79c:	52000108 	andpl	r0, r0, #8, 2
     7a0:	08000e0e 	stmdaeq	r0, {r1, r2, r3, r9, sl, fp}
     7a4:	08000e1a 	stmdaeq	r0, {r1, r3, r4, r9, sl, fp}
     7a8:	9f300002 	svcls	0x00300002
	...
     7b4:	0dc40000 	stcleq	0, cr0, [r4]
     7b8:	0dd00800 	ldcleq	8, cr0, [r0]
     7bc:	00010800 	andeq	r0, r1, r0, lsl #16
     7c0:	00000053 	andeq	r0, r0, r3, asr r0
	...
     7cc:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
     7d0:	bc08000d 	stclt	0, cr0, [r8], {13}
     7d4:	0308000d 	movweq	r0, #32781	; 0x800d
     7d8:	9f0c7200 	svcls	0x000c7200
     7dc:	08000dbc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, sl, fp}
     7e0:	08000dc0 	stmdaeq	r0, {r6, r7, r8, sl, fp}
     7e4:	c0530001 	subsgt	r0, r3, r1
     7e8:	c008000d 	andgt	r0, r8, sp
     7ec:	0308000d 	movweq	r0, #32781	; 0x800d
     7f0:	9f0c7200 	svcls	0x000c7200
	...
     7fc:	0dc00100 	stfeqe	f0, [r0]
     800:	0dc00800 	stcleq	8, cr0, [r0]
     804:	00010800 	andeq	r0, r1, r0, lsl #16
     808:	00000053 	andeq	r0, r0, r3, asr r0
     80c:	00000000 	andeq	r0, r0, r0
     810:	00000100 	andeq	r0, r0, r0, lsl #2
     814:	000dc401 	andeq	ip, sp, r1, lsl #8
     818:	000dc608 	andeq	ip, sp, r8, lsl #12
     81c:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     820:	0dc69f0c 	stcleq	15, cr9, [r6, #48]	; 0x30
     824:	0dca0800 	stcleq	8, cr0, [sl]
     828:	00010800 	andeq	r0, r1, r0, lsl #16
     82c:	00000052 	andeq	r0, r0, r2, asr r0
     830:	00000000 	andeq	r0, r0, r0
     834:	c4010100 	strgt	r0, [r1], #-256	; 0xffffff00
     838:	ca08000d 	bgt	200874 <_Min_Heap_Size+0x200074>
     83c:	0108000d 	tsteq	r8, sp
     840:	00005300 	andeq	r5, r0, r0, lsl #6
     844:	00000000 	andeq	r0, r0, r0
     848:	01000000 	mrseq	r0, (UNDEF: 0)
     84c:	08000dca 	stmdaeq	r0, {r1, r3, r6, r7, r8, sl, fp}
     850:	08000dca 	stmdaeq	r0, {r1, r3, r6, r7, r8, sl, fp}
     854:	00510001 	subseq	r0, r1, r1
     858:	00000000 	andeq	r0, r0, r0
     85c:	12000000 	andne	r0, r0, #0
     860:	1408000d 	strne	r0, [r8], #-13
     864:	0208000d 	andeq	r0, r8, #13
     868:	14007d00 	strne	r7, [r0], #-3328	; 0xfffff300
     86c:	2c08000d 	stccs	0, cr0, [r8], {13}
     870:	0208000d 	andeq	r0, r8, #13
     874:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
     880:	12000000 	andne	r0, r0, #0
     884:	2708000d 	strcs	r0, [r8, -sp]
     888:	0108000d 	tsteq	r8, sp
     88c:	0d275000 	stceq	0, cr5, [r7, #-0]
     890:	0d2c0800 	stceq	8, cr0, [ip, #-0]
     894:	00040800 	andeq	r0, r4, r0, lsl #16
     898:	9f5001f3 	svcls	0x005001f3
	...
     8ac:	08b80000 	ldmeq	r8!, {}	; <UNPREDICTABLE>
     8b0:	08c40800 	stmiaeq	r4, {fp}^
     8b4:	00010800 	andeq	r0, r1, r0, lsl #16
     8b8:	0008c450 	andeq	ip, r8, r0, asr r4
     8bc:	0008c608 	andeq	ip, r8, r8, lsl #12
     8c0:	f3000408 	vshl.u8	d0, d8, d0
     8c4:	c69f5001 	ldrgt	r5, [pc], r1
     8c8:	fc080008 	stc2	0, cr0, [r8], {8}
     8cc:	01080008 	tsteq	r8, r8
     8d0:	08fc5000 	ldmeq	ip!, {ip, lr}^
     8d4:	08fe0800 	ldmeq	lr!, {fp}^
     8d8:	00040800 	andeq	r0, r4, r0, lsl #16
     8dc:	9f5001f3 	svcls	0x005001f3
     8e0:	080008fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, fp}
     8e4:	08000918 	stmdaeq	r0, {r3, r4, r8, fp}
     8e8:	00500001 	subseq	r0, r0, r1
	...
     8f4:	06000000 	streq	r0, [r0], -r0
     8f8:	08080009 	stmdaeq	r8, {r0, r3}
     8fc:	01080009 	tsteq	r8, r9
     900:	09085300 	stmdbeq	r8, {r8, r9, ip, lr}
     904:	09100800 	ldmdbeq	r0, {fp}
     908:	00020800 	andeq	r0, r2, r0, lsl #16
     90c:	00002070 	andeq	r2, r0, r0, ror r0
	...
     91c:	00020000 	andeq	r0, r2, r0
     920:	0000007d 	andeq	r0, r0, sp, ror r0
     924:	00000000 	andeq	r0, r0, r0
     928:	00020000 	andeq	r0, r2, r0
     92c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     940:	00010000 	andeq	r0, r1, r0
     944:	00000050 	andeq	r0, r0, r0, asr r0
     948:	00000000 	andeq	r0, r0, r0
     94c:	f3000400 	vshl.u8	d0, d0, d0
     950:	009f5001 	addseq	r5, pc, r1
	...
     964:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     978:	007d0002 	rsbseq	r0, sp, r2
	...
     984:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     99c:	00500001 	subseq	r0, r0, r1
     9a0:	00000000 	andeq	r0, r0, r0
     9a4:	04000000 	streq	r0, [r0], #-0
     9a8:	5001f300 	andpl	pc, r1, r0, lsl #6
     9ac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     9bc:	01000000 	mrseq	r0, (UNDEF: 0)
     9c0:	00005000 	andeq	r5, r0, r0
	...
     9d0:	00020000 	andeq	r0, r2, r0
     9d4:	0000007d 	andeq	r0, r0, sp, ror r0
     9d8:	00000000 	andeq	r0, r0, r0
     9dc:	00020000 	andeq	r0, r2, r0
     9e0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     9f4:	00010000 	andeq	r0, r1, r0
     9f8:	00000050 	andeq	r0, r0, r0, asr r0
     9fc:	00000000 	andeq	r0, r0, r0
     a00:	f3000400 	vshl.u8	d0, d0, d0
     a04:	009f5001 	addseq	r5, pc, r1
	...
     a18:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     a2c:	007d0002 	rsbseq	r0, sp, r2
	...
     a38:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     a50:	00500001 	subseq	r0, r0, r1
     a54:	00000000 	andeq	r0, r0, r0
     a58:	04000000 	streq	r0, [r0], #-0
     a5c:	5001f300 	andpl	pc, r1, r0, lsl #6
     a60:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     a70:	01000000 	mrseq	r0, (UNDEF: 0)
     a74:	00005000 	andeq	r5, r0, r0
     a78:	00000000 	andeq	r0, r0, r0
     a7c:	0d300000 	ldceq	0, cr0, [r0, #-0]
     a80:	0d320800 	ldceq	8, cr0, [r2, #-0]
     a84:	00020800 	andeq	r0, r2, r0, lsl #16
     a88:	0d32007d 	ldceq	0, cr0, [r2, #-500]!	; 0xfffffe0c
     a8c:	0d400800 	stcleq	8, cr0, [r0, #-0]
     a90:	00020800 	andeq	r0, r2, r0, lsl #16
     a94:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     aa0:	0d300000 	ldceq	0, cr0, [r0, #-0]
     aa4:	0d340800 	ldceq	8, cr0, [r4, #-0]
     aa8:	00010800 	andeq	r0, r1, r0, lsl #16
     aac:	000d3450 	andeq	r3, sp, r0, asr r4
     ab0:	000d4008 	andeq	r4, sp, r8
     ab4:	f3000408 	vshl.u8	d0, d8, d0
     ab8:	009f5001 	addseq	r5, pc, r1
	...
     ac4:	000d3400 	andeq	r3, sp, r0, lsl #8
     ac8:	000d3d08 	andeq	r3, sp, r8, lsl #26
     acc:	50000108 	andpl	r0, r0, r8, lsl #2
	...
     ad8:	085c0001 	ldmdaeq	ip, {r0}^
     adc:	08b80800 	ldmeq	r8!, {fp}
     ae0:	00010800 	andeq	r0, r1, r0, lsl #16
     ae4:	00000050 	andeq	r0, r0, r0, asr r0
     ae8:	00000000 	andeq	r0, r0, r0
     aec:	6a000000 	bvs	af4 <_Min_Heap_Size+0x2f4>
     af0:	74080008 	strvc	r0, [r8], #-8
     af4:	01080008 	tsteq	r8, r8
     af8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     b04:	01000000 	mrseq	r0, (UNDEF: 0)
     b08:	0800085e 	stmdaeq	r0, {r1, r2, r3, r4, r6, fp}
     b0c:	08000862 	stmdaeq	r0, {r1, r5, r6, fp}
     b10:	0c720003 	ldcleq	0, cr0, [r2], #-12
     b14:	0008629f 	muleq	r8, pc, r2	; <UNPREDICTABLE>
     b18:	00086608 	andeq	r6, r8, r8, lsl #12
     b1c:	53000108 	movwpl	r0, #264	; 0x108
     b20:	08000866 	stmdaeq	r0, {r1, r2, r5, r6, fp}
     b24:	08000866 	stmdaeq	r0, {r1, r2, r5, r6, fp}
     b28:	0c720003 	ldcleq	0, cr0, [r2], #-12
     b2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     b30:	00000000 	andeq	r0, r0, r0
     b34:	66010000 	strvs	r0, [r1], -r0
     b38:	66080008 	strvs	r0, [r8], -r8
     b3c:	01080008 	tsteq	r8, r8
     b40:	00005300 	andeq	r5, r0, r0, lsl #6
     b44:	00000000 	andeq	r0, r0, r0
     b48:	00010000 	andeq	r0, r1, r0
     b4c:	086a0100 	stmdaeq	sl!, {r8}^
     b50:	086c0800 	stmdaeq	ip!, {fp}^
     b54:	00030800 	andeq	r0, r3, r0, lsl #16
     b58:	6c9f0c72 	ldcvs	12, cr0, [pc], {114}	; 0x72
     b5c:	70080008 	andvc	r0, r8, r8
     b60:	01080008 	tsteq	r8, r8
     b64:	00005200 	andeq	r5, r0, r0, lsl #4
     b68:	00000000 	andeq	r0, r0, r0
     b6c:	01010000 	mrseq	r0, (UNDEF: 1)
     b70:	0800086a 	stmdaeq	r0, {r1, r3, r5, r6, fp}
     b74:	08000870 	stmdaeq	r0, {r4, r5, r6, fp}
     b78:	00530001 	subseq	r0, r3, r1
	...
     b84:	00087001 	andeq	r7, r8, r1
     b88:	00087008 	andeq	r7, r8, r8
     b8c:	51000108 	tstpl	r0, r8, lsl #2
	...
     b98:	08820000 	stmeq	r2, {}	; <UNPREDICTABLE>
     b9c:	088e0800 	stmeq	lr, {fp}
     ba0:	00010800 	andeq	r0, r1, r0, lsl #16
     ba4:	00000053 	andeq	r0, r0, r3, asr r0
	...
     bb0:	76010000 	strvc	r0, [r1], -r0
     bb4:	7a080008 	bvc	200bdc <_Min_Heap_Size+0x2003dc>
     bb8:	03080008 	movweq	r0, #32776	; 0x8008
     bbc:	9f147200 	svcls	0x00147200
     bc0:	0800087a 	stmdaeq	r0, {r1, r3, r4, r5, r6, fp}
     bc4:	0800087e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, fp}
     bc8:	7e530001 	cdpvc	0, 5, cr0, cr3, cr1, {0}
     bcc:	7e080008 	cdpvc	0, 0, cr0, cr8, cr8, {0}
     bd0:	03080008 	movweq	r0, #32776	; 0x8008
     bd4:	9f147200 	svcls	0x00147200
	...
     be0:	087e0100 	ldmdaeq	lr!, {r8}^
     be4:	087e0800 	ldmdaeq	lr!, {fp}^
     be8:	00010800 	andeq	r0, r1, r0, lsl #16
     bec:	00000053 	andeq	r0, r0, r3, asr r0
     bf0:	00000000 	andeq	r0, r0, r0
     bf4:	00000100 	andeq	r0, r0, r0, lsl #2
     bf8:	00088201 	andeq	r8, r8, r1, lsl #4
     bfc:	00088408 	andeq	r8, r8, r8, lsl #8
     c00:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
     c04:	08849f14 	stmeq	r4, {r2, r4, r8, r9, sl, fp, ip, pc}
     c08:	08880800 	stmeq	r8, {fp}
     c0c:	00010800 	andeq	r0, r1, r0, lsl #16
     c10:	00000052 	andeq	r0, r0, r2, asr r0
     c14:	00000000 	andeq	r0, r0, r0
     c18:	82010100 	andhi	r0, r1, #0, 2
     c1c:	88080008 	stmdahi	r8, {r3}
     c20:	01080008 	tsteq	r8, r8
     c24:	00005300 	andeq	r5, r0, r0, lsl #6
     c28:	00000000 	andeq	r0, r0, r0
     c2c:	01000000 	mrseq	r0, (UNDEF: 0)
     c30:	08000888 	stmdaeq	r0, {r3, r7, fp}
     c34:	08000888 	stmdaeq	r0, {r3, r7, fp}
     c38:	00510001 	subseq	r0, r1, r1
	...
     c44:	0008ac00 	andeq	sl, r8, r0, lsl #24
     c48:	0008b808 	andeq	fp, r8, r8, lsl #16
     c4c:	53000108 	movwpl	r0, #264	; 0x108
	...
     c5c:	08a00100 	stmiaeq	r0!, {r8}
     c60:	08a40800 	stmiaeq	r4!, {fp}
     c64:	00030800 	andeq	r0, r3, r0, lsl #16
     c68:	a49f0c72 	ldrge	r0, [pc], #3186	; c70 <_Min_Heap_Size+0x470>
     c6c:	a8080008 	stmdage	r8, {r3}
     c70:	01080008 	tsteq	r8, r8
     c74:	08a85300 	stmiaeq	r8!, {r8, r9, ip, lr}
     c78:	08a80800 	stmiaeq	r8!, {fp}
     c7c:	00030800 	andeq	r0, r3, r0, lsl #16
     c80:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
     c8c:	0008a801 	andeq	sl, r8, r1, lsl #16
     c90:	0008a808 	andeq	sl, r8, r8, lsl #16
     c94:	53000108 	movwpl	r0, #264	; 0x108
	...
     ca0:	01000001 	tsteq	r0, r1
     ca4:	080008ac 	stmdaeq	r0, {r2, r3, r5, r7, fp}
     ca8:	080008ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, fp}
     cac:	0c720003 	ldcleq	0, cr0, [r2], #-12
     cb0:	0008ae9f 	muleq	r8, pc, lr	; <UNPREDICTABLE>
     cb4:	0008b208 	andeq	fp, r8, r8, lsl #4
     cb8:	52000108 	andpl	r0, r0, #8, 2
	...
     cc4:	08ac0101 	stmiaeq	ip!, {r0, r8}
     cc8:	08b20800 	ldmeq	r2!, {fp}
     ccc:	00010800 	andeq	r0, r1, r0, lsl #16
     cd0:	00000053 	andeq	r0, r0, r3, asr r0
     cd4:	00000000 	andeq	r0, r0, r0
     cd8:	b2010000 	andlt	r0, r1, #0
     cdc:	b2080008 	andlt	r0, r8, #8
     ce0:	01080008 	tsteq	r8, r8
     ce4:	00005100 	andeq	r5, r0, r0, lsl #2
     ce8:	00000000 	andeq	r0, r0, r0
     cec:	00010000 	andeq	r0, r1, r0
	...
     cf8:	00500001 	subseq	r0, r0, r1
	...
     d0c:	53000100 	movwpl	r0, #256	; 0x100
	...
     d1c:	00000100 	andeq	r0, r0, r0, lsl #2
     d20:	00000000 	andeq	r0, r0, r0
     d24:	00030000 	andeq	r0, r3, r0
     d28:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
     d2c:	00000000 	andeq	r0, r0, r0
     d30:	01000000 	mrseq	r0, (UNDEF: 0)
     d34:	00005300 	andeq	r5, r0, r0, lsl #6
     d38:	00000000 	andeq	r0, r0, r0
     d3c:	00030000 	andeq	r0, r3, r0
     d40:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
     d4c:	00000001 	andeq	r0, r0, r1
     d50:	00000000 	andeq	r0, r0, r0
     d54:	53000100 	movwpl	r0, #256	; 0x100
	...
     d60:	01000001 	tsteq	r0, r1
	...
     d6c:	0c720003 	ldcleq	0, cr0, [r2], #-12
     d70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     d74:	00000000 	andeq	r0, r0, r0
     d78:	52000100 	andpl	r0, r0, #0, 2
	...
     d84:	00000101 	andeq	r0, r0, r1, lsl #2
     d88:	00000000 	andeq	r0, r0, r0
     d8c:	00010000 	andeq	r0, r1, r0
     d90:	00000053 	andeq	r0, r0, r3, asr r0
     d94:	00000000 	andeq	r0, r0, r0
     d98:	00010000 	andeq	r0, r1, r0
     d9c:	00000000 	andeq	r0, r0, r0
     da0:	01000000 	mrseq	r0, (UNDEF: 0)
     da4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
     db4:	00020000 	andeq	r0, r2, r0
     db8:	0000007d 	andeq	r0, r0, sp, ror r0
     dbc:	00000000 	andeq	r0, r0, r0
     dc0:	00020000 	andeq	r0, r2, r0
     dc4:	00000c7d 	andeq	r0, r0, sp, ror ip
     dc8:	00000000 	andeq	r0, r0, r0
     dcc:	00020000 	andeq	r0, r2, r0
     dd0:	0000187d 	andeq	r1, r0, sp, ror r8
     dd4:	00000000 	andeq	r0, r0, r0
     dd8:	00020000 	andeq	r0, r2, r0
     ddc:	00000c7d 	andeq	r0, r0, sp, ror ip
	...
     df4:	00500001 	subseq	r0, r0, r1
     df8:	00000000 	andeq	r0, r0, r0
     dfc:	01000000 	mrseq	r0, (UNDEF: 0)
     e00:	00005400 	andeq	r5, r0, r0, lsl #8
     e04:	00000000 	andeq	r0, r0, r0
     e08:	00040000 	andeq	r0, r4, r0
     e0c:	9f5001f3 	svcls	0x005001f3
	...
     e24:	00010000 	andeq	r0, r1, r0
     e28:	00000051 	andeq	r0, r0, r1, asr r0
     e2c:	00000000 	andeq	r0, r0, r0
     e30:	52000100 	andpl	r0, r0, #0, 2
	...
     e3c:	01f30004 	mvnseq	r0, r4
     e40:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     e58:	00010000 	andeq	r0, r1, r0
     e5c:	00000052 	andeq	r0, r0, r2, asr r0
     e60:	00000000 	andeq	r0, r0, r0
     e64:	70000200 	andvc	r0, r0, r0, lsl #4
     e68:	0000002c 	andeq	r0, r0, ip, lsr #32
     e6c:	00000000 	andeq	r0, r0, r0
     e70:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
     e74:	0000002c 	andeq	r0, r0, ip, lsr #32
     e78:	00000000 	andeq	r0, r0, r0
     e7c:	f3000400 	vshl.u8	d0, d0, d0
     e80:	009f5201 	addseq	r5, pc, r1, lsl #4
     e84:	00000000 	andeq	r0, r0, r0
     e88:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     e94:	f2000600 	vmax.s8	d0, d0, d0
     e98:	00003df1 	strdeq	r3, [r0], -r1
	...
     eac:	01000000 	mrseq	r0, (UNDEF: 0)
     eb0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     ebc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     ec8:	0c720003 	ldcleq	0, cr0, [r2], #-12
     ecc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     ed0:	00000000 	andeq	r0, r0, r0
     ed4:	53000100 	movwpl	r0, #256	; 0x100
	...
     ee0:	0c720003 	ldcleq	0, cr0, [r2], #-12
     ee4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     ee8:	00000000 	andeq	r0, r0, r0
     eec:	00010000 	andeq	r0, r1, r0
     ef0:	00000000 	andeq	r0, r0, r0
     ef4:	01000000 	mrseq	r0, (UNDEF: 0)
     ef8:	00005300 	andeq	r5, r0, r0, lsl #6
     efc:	00000000 	andeq	r0, r0, r0
     f00:	00010000 	andeq	r0, r1, r0
     f04:	00000100 	andeq	r0, r0, r0, lsl #2
     f08:	00000000 	andeq	r0, r0, r0
     f0c:	00030000 	andeq	r0, r3, r0
     f10:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
     f14:	00000000 	andeq	r0, r0, r0
     f18:	01000000 	mrseq	r0, (UNDEF: 0)
     f1c:	00005200 	andeq	r5, r0, r0, lsl #4
     f20:	00000000 	andeq	r0, r0, r0
     f24:	01010000 	mrseq	r0, (UNDEF: 1)
	...
     f30:	00530001 	subseq	r0, r3, r1
	...
     f3c:	00000001 	andeq	r0, r0, r1
     f40:	00000000 	andeq	r0, r0, r0
     f44:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     f58:	00010000 	andeq	r0, r1, r0
     f5c:	00000053 	andeq	r0, r0, r3, asr r0
	...
     f68:	00010000 	andeq	r0, r1, r0
     f6c:	00000000 	andeq	r0, r0, r0
     f70:	03000000 	movweq	r0, #0
     f74:	9f147200 	svcls	0x00147200
	...
     f80:	00530001 	subseq	r0, r3, r1
     f84:	00000000 	andeq	r0, r0, r0
     f88:	03000000 	movweq	r0, #0
     f8c:	9f147200 	svcls	0x00147200
	...
     f98:	00000100 	andeq	r0, r0, r0, lsl #2
     f9c:	00000000 	andeq	r0, r0, r0
     fa0:	00010000 	andeq	r0, r1, r0
     fa4:	00000053 	andeq	r0, r0, r3, asr r0
     fa8:	00000000 	andeq	r0, r0, r0
     fac:	00000100 	andeq	r0, r0, r0, lsl #2
     fb0:	00000001 	andeq	r0, r0, r1
     fb4:	00000000 	andeq	r0, r0, r0
     fb8:	72000300 	andvc	r0, r0, #0, 6
     fbc:	00009f14 	andeq	r9, r0, r4, lsl pc
     fc0:	00000000 	andeq	r0, r0, r0
     fc4:	00010000 	andeq	r0, r1, r0
     fc8:	00000052 	andeq	r0, r0, r2, asr r0
     fcc:	00000000 	andeq	r0, r0, r0
     fd0:	00010100 	andeq	r0, r1, r0, lsl #2
     fd4:	00000000 	andeq	r0, r0, r0
     fd8:	01000000 	mrseq	r0, (UNDEF: 0)
     fdc:	00005300 	andeq	r5, r0, r0, lsl #6
     fe0:	00000000 	andeq	r0, r0, r0
     fe4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     ff0:	00510001 	subseq	r0, r1, r1
	...
    1004:	53000100 	movwpl	r0, #256	; 0x100
	...
    1014:	00000100 	andeq	r0, r0, r0, lsl #2
    1018:	00000000 	andeq	r0, r0, r0
    101c:	00030000 	andeq	r0, r3, r0
    1020:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    1024:	00000000 	andeq	r0, r0, r0
    1028:	01000000 	mrseq	r0, (UNDEF: 0)
    102c:	00005300 	andeq	r5, r0, r0, lsl #6
    1030:	00000000 	andeq	r0, r0, r0
    1034:	00030000 	andeq	r0, r3, r0
    1038:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    1044:	00000001 	andeq	r0, r0, r1
    1048:	00000000 	andeq	r0, r0, r0
    104c:	53000100 	movwpl	r0, #256	; 0x100
	...
    1058:	01000001 	tsteq	r0, r1
	...
    1064:	14720003 	ldrbtne	r0, [r2], #-3
    1068:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    106c:	00000000 	andeq	r0, r0, r0
    1070:	52000100 	andpl	r0, r0, #0, 2
	...
    107c:	00000101 	andeq	r0, r0, r1, lsl #2
    1080:	00000000 	andeq	r0, r0, r0
    1084:	00010000 	andeq	r0, r1, r0
    1088:	00000053 	andeq	r0, r0, r3, asr r0
    108c:	00000000 	andeq	r0, r0, r0
    1090:	00010000 	andeq	r0, r1, r0
    1094:	00000000 	andeq	r0, r0, r0
    1098:	01000000 	mrseq	r0, (UNDEF: 0)
    109c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    10b0:	00010000 	andeq	r0, r1, r0
    10b4:	00000050 	andeq	r0, r0, r0, asr r0
    10b8:	00000000 	andeq	r0, r0, r0
    10bc:	f3000400 	vshl.u8	d0, d0, d0
    10c0:	009f5001 	addseq	r5, pc, r1
	...
    10d8:	52000100 	andpl	r0, r0, #0, 2
	...
    10e4:	2c700002 	ldclcs	0, cr0, [r0], #-8
	...
    10f0:	01f30004 	mvnseq	r0, r4
    10f4:	00009f52 	andeq	r9, r0, r2, asr pc
    10f8:	00000000 	andeq	r0, r0, r0
    10fc:	0a8c0000 	beq	fe301104 <_estack+0xde2f7764>
    1100:	0a900800 	beq	fe403108 <_estack+0xde3f9768>
    1104:	00020800 	andeq	r0, r2, r0, lsl #16
    1108:	0a90007d 	beq	fe401304 <_estack+0xde3f7964>
    110c:	0a920800 	beq	fe483114 <_estack+0xde479774>
    1110:	00020800 	andeq	r0, r2, r0, lsl #16
    1114:	0a921c7d 	beq	fe488310 <_estack+0xde47e970>
    1118:	0b0a0800 	bleq	283120 <_Min_Heap_Size+0x282920>
    111c:	00020800 	andeq	r0, r2, r0, lsl #16
    1120:	0b0a287d 	bleq	28b31c <_Min_Heap_Size+0x28ab1c>
    1124:	0b0e0800 	bleq	38312c <_Min_Heap_Size+0x38292c>
    1128:	00020800 	andeq	r0, r2, r0, lsl #16
    112c:	0b0e1c7d 	bleq	388328 <_Min_Heap_Size+0x387b28>
    1130:	0b160800 	bleq	583138 <_Min_Heap_Size+0x582938>
    1134:	00020800 	andeq	r0, r2, r0, lsl #16
    1138:	0000287d 	andeq	r2, r0, sp, ror r8
    113c:	00000000 	andeq	r0, r0, r0
    1140:	01000000 	mrseq	r0, (UNDEF: 0)
    1144:	0a8c0001 	beq	fe301150 <_estack+0xde2f77b0>
    1148:	0a9e0800 	beq	fe783150 <_estack+0xde7797b0>
    114c:	00010800 	andeq	r0, r1, r0, lsl #16
    1150:	000a9e50 	andeq	r9, sl, r0, asr lr
    1154:	000b1608 	andeq	r1, fp, r8, lsl #12
    1158:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    1164:	00010100 	andeq	r0, r1, r0, lsl #2
    1168:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
    116c:	08000a9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r9, fp}
    1170:	9e510001 	cdpls	0, 5, cr0, cr1, cr1, {0}
    1174:	1608000a 	strne	r0, [r8], -sl
    1178:	0108000b 	tsteq	r8, fp
    117c:	00005600 	andeq	r5, r0, r0, lsl #12
    1180:	00000000 	andeq	r0, r0, r0
    1184:	01000000 	mrseq	r0, (UNDEF: 0)
    1188:	0a8c0001 	beq	fe301194 <_estack+0xde2f77f4>
    118c:	0a9e0800 	beq	fe783194 <_estack+0xde7797f4>
    1190:	00010800 	andeq	r0, r1, r0, lsl #16
    1194:	000a9e52 	andeq	r9, sl, r2, asr lr
    1198:	000b1608 	andeq	r1, fp, r8, lsl #12
    119c:	f3000408 	vshl.u8	d0, d8, d0
    11a0:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    11ac:	8c000101 	stfhis	f0, [r0], {1}
    11b0:	9e08000a 	cdpls	0, 0, cr0, cr8, cr10, {0}
    11b4:	0108000a 	tsteq	r8, sl
    11b8:	0a9e5300 	beq	fe795dc0 <_estack+0xde78c420>
    11bc:	0b160800 	bleq	5831c4 <_Min_Heap_Size+0x5829c4>
    11c0:	00010800 	andeq	r0, r1, r0, lsl #16
    11c4:	00000059 	andeq	r0, r0, r9, asr r0
	...
    11d0:	000a8c00 	andeq	r8, sl, r0, lsl #24
    11d4:	000b0e08 	andeq	r0, fp, r8, lsl #28
    11d8:	91000208 	tstls	r0, r8, lsl #4
    11dc:	000b0e00 	andeq	r0, fp, r0, lsl #28
    11e0:	000b1608 	andeq	r1, fp, r8, lsl #12
    11e4:	91000208 	tstls	r0, r8, lsl #4
	...
    11f8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    1204:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1208:	00000008 	andeq	r0, r0, r8
	...
    1220:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    122c:	01f30004 	mvnseq	r0, r4
    1230:	00009f50 	andeq	r9, r0, r0, asr pc
    1234:	00000000 	andeq	r0, r0, r0
    1238:	00010000 	andeq	r0, r1, r0
    123c:	00000050 	andeq	r0, r0, r0, asr r0
    1240:	00000000 	andeq	r0, r0, r0
    1244:	f3000400 	vshl.u8	d0, d0, d0
    1248:	009f5001 	addseq	r5, pc, r1
    124c:	00000000 	andeq	r0, r0, r0
    1250:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1264:	30000200 	andcc	r0, r0, r0, lsl #4
    1268:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    126c:	00000000 	andeq	r0, r0, r0
    1270:	72000b00 	andvc	r0, r0, #0, 22
    1274:	1a800800 	bne	fe00327c <_estack+0xddff98dc>
    1278:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    127c:	00009f1a 	andeq	r9, r0, sl, lsl pc
    1280:	00000000 	andeq	r0, r0, r0
    1284:	00080000 	andeq	r0, r8, r0
    1288:	2e300072 	mrccs	0, 1, r0, cr0, cr2, {3}
    128c:	9f1aff08 	svcls	0x001aff08
	...
    1298:	0072000b 	rsbseq	r0, r2, fp
    129c:	301a8008 	andscc	r8, sl, r8
    12a0:	1aff082e 	bne	fffc3360 <_estack+0xdffb99c0>
    12a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    12a8:	00000000 	andeq	r0, r0, r0
    12ac:	72000800 	andvc	r0, r0, #0, 16
    12b0:	082e3000 	stmdaeq	lr!, {ip, sp}
    12b4:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
	...
    12c8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    12dc:	007d0002 	rsbseq	r0, sp, r2
	...
    12e8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    1300:	00500001 	subseq	r0, r0, r1
    1304:	00000000 	andeq	r0, r0, r0
    1308:	04000000 	streq	r0, [r0], #-0
    130c:	5001f300 	andpl	pc, r1, r0, lsl #6
    1310:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1324:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1330:	00500001 	subseq	r0, r0, r1
	...
    1340:	02000000 	andeq	r0, r0, #0
    1344:	00007d00 	andeq	r7, r0, r0, lsl #26
    1348:	00000000 	andeq	r0, r0, r0
    134c:	02000000 	andeq	r0, r0, #0
    1350:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1368:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1374:	00530001 	subseq	r0, r3, r1
    1378:	00000000 	andeq	r0, r0, r0
    137c:	04000000 	streq	r0, [r0], #-0
    1380:	5001f300 	andpl	pc, r1, r0, lsl #6
    1384:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1398:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    13a4:	00500001 	subseq	r0, r0, r1
	...
    13b8:	53000100 	movwpl	r0, #256	; 0x100
	...
    13c8:	00000100 	andeq	r0, r0, r0, lsl #2
    13cc:	00000000 	andeq	r0, r0, r0
    13d0:	00030000 	andeq	r0, r3, r0
    13d4:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    13d8:	00000000 	andeq	r0, r0, r0
    13dc:	01000000 	mrseq	r0, (UNDEF: 0)
    13e0:	00005300 	andeq	r5, r0, r0, lsl #6
    13e4:	00000000 	andeq	r0, r0, r0
    13e8:	00030000 	andeq	r0, r3, r0
    13ec:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    13f8:	00000001 	andeq	r0, r0, r1
    13fc:	00000000 	andeq	r0, r0, r0
    1400:	53000100 	movwpl	r0, #256	; 0x100
	...
    140c:	01000001 	tsteq	r0, r1
	...
    1418:	0c720003 	ldcleq	0, cr0, [r2], #-12
    141c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1420:	00000000 	andeq	r0, r0, r0
    1424:	52000100 	andpl	r0, r0, #0, 2
	...
    1430:	00000101 	andeq	r0, r0, r1, lsl #2
    1434:	00000000 	andeq	r0, r0, r0
    1438:	00010000 	andeq	r0, r1, r0
    143c:	00000053 	andeq	r0, r0, r3, asr r0
    1440:	00000000 	andeq	r0, r0, r0
    1444:	00010000 	andeq	r0, r1, r0
    1448:	00000000 	andeq	r0, r0, r0
    144c:	01000000 	mrseq	r0, (UNDEF: 0)
    1450:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1464:	00530001 	subseq	r0, r3, r1
	...
    1474:	00000001 	andeq	r0, r0, r1
    1478:	00000000 	andeq	r0, r0, r0
    147c:	72000300 	andvc	r0, r0, #0, 6
    1480:	00009f14 	andeq	r9, r0, r4, lsl pc
    1484:	00000000 	andeq	r0, r0, r0
    1488:	00010000 	andeq	r0, r1, r0
    148c:	00000053 	andeq	r0, r0, r3, asr r0
    1490:	00000000 	andeq	r0, r0, r0
    1494:	72000300 	andvc	r0, r0, #0, 6
    1498:	00009f14 	andeq	r9, r0, r4, lsl pc
    149c:	00000000 	andeq	r0, r0, r0
    14a0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    14ac:	00530001 	subseq	r0, r3, r1
    14b0:	00000000 	andeq	r0, r0, r0
    14b4:	01000000 	mrseq	r0, (UNDEF: 0)
    14b8:	00010000 	andeq	r0, r1, r0
    14bc:	00000000 	andeq	r0, r0, r0
    14c0:	03000000 	movweq	r0, #0
    14c4:	9f147200 	svcls	0x00147200
	...
    14d0:	00520001 	subseq	r0, r2, r1
    14d4:	00000000 	andeq	r0, r0, r0
    14d8:	01000000 	mrseq	r0, (UNDEF: 0)
    14dc:	00000001 	andeq	r0, r0, r1
    14e0:	00000000 	andeq	r0, r0, r0
    14e4:	53000100 	movwpl	r0, #256	; 0x100
	...
    14f0:	00000100 	andeq	r0, r0, r0, lsl #2
    14f4:	00000000 	andeq	r0, r0, r0
    14f8:	00010000 	andeq	r0, r1, r0
    14fc:	00000051 	andeq	r0, r0, r1, asr r0
	...
    150c:	01000000 	mrseq	r0, (UNDEF: 0)
    1510:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    151c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1528:	14720003 	ldrbtne	r0, [r2], #-3
    152c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1530:	00000000 	andeq	r0, r0, r0
    1534:	53000100 	movwpl	r0, #256	; 0x100
	...
    1540:	14720003 	ldrbtne	r0, [r2], #-3
    1544:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1548:	00000000 	andeq	r0, r0, r0
    154c:	00010000 	andeq	r0, r1, r0
    1550:	00000000 	andeq	r0, r0, r0
    1554:	01000000 	mrseq	r0, (UNDEF: 0)
    1558:	00005300 	andeq	r5, r0, r0, lsl #6
    155c:	00000000 	andeq	r0, r0, r0
    1560:	00010000 	andeq	r0, r1, r0
    1564:	00000100 	andeq	r0, r0, r0, lsl #2
    1568:	00000000 	andeq	r0, r0, r0
    156c:	00030000 	andeq	r0, r3, r0
    1570:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    1574:	00000000 	andeq	r0, r0, r0
    1578:	01000000 	mrseq	r0, (UNDEF: 0)
    157c:	00005200 	andeq	r5, r0, r0, lsl #4
    1580:	00000000 	andeq	r0, r0, r0
    1584:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1590:	00530001 	subseq	r0, r3, r1
	...
    159c:	00000001 	andeq	r0, r0, r1
    15a0:	00000000 	andeq	r0, r0, r0
    15a4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    15b8:	00010000 	andeq	r0, r1, r0
    15bc:	00000053 	andeq	r0, r0, r3, asr r0
	...
    15c8:	00010000 	andeq	r0, r1, r0
    15cc:	00000000 	andeq	r0, r0, r0
    15d0:	03000000 	movweq	r0, #0
    15d4:	9f0c7200 	svcls	0x000c7200
	...
    15e0:	00530001 	subseq	r0, r3, r1
    15e4:	00000000 	andeq	r0, r0, r0
    15e8:	03000000 	movweq	r0, #0
    15ec:	9f0c7200 	svcls	0x000c7200
	...
    15f8:	00000100 	andeq	r0, r0, r0, lsl #2
    15fc:	00000000 	andeq	r0, r0, r0
    1600:	00010000 	andeq	r0, r1, r0
    1604:	00000053 	andeq	r0, r0, r3, asr r0
    1608:	00000000 	andeq	r0, r0, r0
    160c:	00000100 	andeq	r0, r0, r0, lsl #2
    1610:	00000001 	andeq	r0, r0, r1
    1614:	00000000 	andeq	r0, r0, r0
    1618:	72000300 	andvc	r0, r0, #0, 6
    161c:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1620:	00000000 	andeq	r0, r0, r0
    1624:	00010000 	andeq	r0, r1, r0
    1628:	00000052 	andeq	r0, r0, r2, asr r0
    162c:	00000000 	andeq	r0, r0, r0
    1630:	00010100 	andeq	r0, r1, r0, lsl #2
    1634:	00000000 	andeq	r0, r0, r0
    1638:	01000000 	mrseq	r0, (UNDEF: 0)
    163c:	00005300 	andeq	r5, r0, r0, lsl #6
    1640:	00000000 	andeq	r0, r0, r0
    1644:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1650:	00510001 	subseq	r0, r1, r1
	...
    1660:	02000000 	andeq	r0, r0, #0
    1664:	00007d00 	andeq	r7, r0, r0, lsl #26
    1668:	00000000 	andeq	r0, r0, r0
    166c:	02000000 	andeq	r0, r0, #0
    1670:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1684:	01000000 	mrseq	r0, (UNDEF: 0)
    1688:	00005000 	andeq	r5, r0, r0
    168c:	00000000 	andeq	r0, r0, r0
    1690:	00040000 	andeq	r0, r4, r0
    1694:	9f5001f3 	svcls	0x005001f3
	...
    16a0:	00000001 	andeq	r0, r0, r1
	...
    16ac:	38700002 	ldmdacc	r0!, {r1}^
	...
    16b8:	00500001 	subseq	r0, r0, r1
	...
    16c8:	02000000 	andeq	r0, r0, #0
    16cc:	00007d00 	andeq	r7, r0, r0, lsl #26
    16d0:	00000000 	andeq	r0, r0, r0
    16d4:	02000000 	andeq	r0, r0, #0
    16d8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    16f0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    16fc:	00530001 	subseq	r0, r3, r1
    1700:	00000000 	andeq	r0, r0, r0
    1704:	04000000 	streq	r0, [r0], #-0
    1708:	5001f300 	andpl	pc, r1, r0, lsl #6
    170c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1720:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    172c:	00500001 	subseq	r0, r0, r1
	...
    1740:	53000100 	movwpl	r0, #256	; 0x100
	...
    1750:	00000100 	andeq	r0, r0, r0, lsl #2
    1754:	00000000 	andeq	r0, r0, r0
    1758:	00030000 	andeq	r0, r3, r0
    175c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    1760:	00000000 	andeq	r0, r0, r0
    1764:	01000000 	mrseq	r0, (UNDEF: 0)
    1768:	00005300 	andeq	r5, r0, r0, lsl #6
    176c:	00000000 	andeq	r0, r0, r0
    1770:	00030000 	andeq	r0, r3, r0
    1774:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    1780:	00000001 	andeq	r0, r0, r1
    1784:	00000000 	andeq	r0, r0, r0
    1788:	53000100 	movwpl	r0, #256	; 0x100
	...
    1794:	01000001 	tsteq	r0, r1
	...
    17a0:	14720003 	ldrbtne	r0, [r2], #-3
    17a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    17a8:	00000000 	andeq	r0, r0, r0
    17ac:	52000100 	andpl	r0, r0, #0, 2
	...
    17b8:	00000101 	andeq	r0, r0, r1, lsl #2
    17bc:	00000000 	andeq	r0, r0, r0
    17c0:	00010000 	andeq	r0, r1, r0
    17c4:	00000053 	andeq	r0, r0, r3, asr r0
    17c8:	00000000 	andeq	r0, r0, r0
    17cc:	00010000 	andeq	r0, r1, r0
    17d0:	00000000 	andeq	r0, r0, r0
    17d4:	01000000 	mrseq	r0, (UNDEF: 0)
    17d8:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    17ec:	00530001 	subseq	r0, r3, r1
	...
    17fc:	00000001 	andeq	r0, r0, r1
    1800:	00000000 	andeq	r0, r0, r0
    1804:	72000300 	andvc	r0, r0, #0, 6
    1808:	00009f0c 	andeq	r9, r0, ip, lsl #30
    180c:	00000000 	andeq	r0, r0, r0
    1810:	00010000 	andeq	r0, r1, r0
    1814:	00000053 	andeq	r0, r0, r3, asr r0
    1818:	00000000 	andeq	r0, r0, r0
    181c:	72000300 	andvc	r0, r0, #0, 6
    1820:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1824:	00000000 	andeq	r0, r0, r0
    1828:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1834:	00530001 	subseq	r0, r3, r1
    1838:	00000000 	andeq	r0, r0, r0
    183c:	01000000 	mrseq	r0, (UNDEF: 0)
    1840:	00010000 	andeq	r0, r1, r0
    1844:	00000000 	andeq	r0, r0, r0
    1848:	03000000 	movweq	r0, #0
    184c:	9f0c7200 	svcls	0x000c7200
	...
    1858:	00520001 	subseq	r0, r2, r1
    185c:	00000000 	andeq	r0, r0, r0
    1860:	01000000 	mrseq	r0, (UNDEF: 0)
    1864:	00000001 	andeq	r0, r0, r1
    1868:	00000000 	andeq	r0, r0, r0
    186c:	53000100 	movwpl	r0, #256	; 0x100
	...
    1878:	00000100 	andeq	r0, r0, r0, lsl #2
    187c:	00000000 	andeq	r0, r0, r0
    1880:	00010000 	andeq	r0, r1, r0
    1884:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1898:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    18a4:	01f30004 	mvnseq	r0, r4
    18a8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    18bc:	00010000 	andeq	r0, r1, r0
    18c0:	00000050 	andeq	r0, r0, r0, asr r0
    18c4:	00000000 	andeq	r0, r0, r0
    18c8:	f3000400 	vshl.u8	d0, d0, d0
    18cc:	009f5001 	addseq	r5, pc, r1
    18d0:	00000000 	andeq	r0, r0, r0
    18d4:	02000000 	andeq	r0, r0, #0
	...
    18e0:	02000000 	andeq	r0, r0, #0
    18e4:	009f3000 	addseq	r3, pc, r0
    18e8:	00000000 	andeq	r0, r0, r0
    18ec:	01000000 	mrseq	r0, (UNDEF: 0)
    18f0:	00005300 	andeq	r5, r0, r0, lsl #6
    18f4:	00000000 	andeq	r0, r0, r0
    18f8:	00020000 	andeq	r0, r2, r0
	...
    1904:	00020000 	andeq	r0, r2, r0
    1908:	00009f30 	andeq	r9, r0, r0, lsr pc
    190c:	00000000 	andeq	r0, r0, r0
    1910:	00010000 	andeq	r0, r1, r0
    1914:	00000050 	andeq	r0, r0, r0, asr r0
	...
    192c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1938:	01f30004 	mvnseq	r0, r4
    193c:	00009f50 	andeq	r9, r0, r0, asr pc
    1940:	00000000 	andeq	r0, r0, r0
    1944:	00010000 	andeq	r0, r1, r0
    1948:	00000050 	andeq	r0, r0, r0, asr r0
    194c:	00000000 	andeq	r0, r0, r0
    1950:	f3000400 	vshl.u8	d0, d0, d0
    1954:	009f5001 	addseq	r5, pc, r1
    1958:	00000000 	andeq	r0, r0, r0
    195c:	02000000 	andeq	r0, r0, #0
	...
    196c:	02000000 	andeq	r0, r0, #0
    1970:	009f3000 	addseq	r3, pc, r0
    1974:	00000000 	andeq	r0, r0, r0
    1978:	01000000 	mrseq	r0, (UNDEF: 0)
    197c:	00005300 	andeq	r5, r0, r0, lsl #6
    1980:	00000000 	andeq	r0, r0, r0
    1984:	00020000 	andeq	r0, r2, r0
    1988:	00000c72 	andeq	r0, r0, r2, ror ip
    198c:	00000000 	andeq	r0, r0, r0
    1990:	00020000 	andeq	r0, r2, r0
    1994:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    19ac:	00010000 	andeq	r0, r1, r0
    19b0:	00000050 	andeq	r0, r0, r0, asr r0
    19b4:	00000000 	andeq	r0, r0, r0
    19b8:	f3000400 	vshl.u8	d0, d0, d0
    19bc:	009f5001 	addseq	r5, pc, r1
    19c0:	00000000 	andeq	r0, r0, r0
    19c4:	01000000 	mrseq	r0, (UNDEF: 0)
    19c8:	00005000 	andeq	r5, r0, r0
    19cc:	00000000 	andeq	r0, r0, r0
    19d0:	00040000 	andeq	r0, r4, r0
    19d4:	9f5001f3 	svcls	0x005001f3
	...
    19e0:	00000002 	andeq	r0, r0, r2
	...
    19f0:	9f300002 	svcls	0x00300002
	...
    19fc:	00530001 	subseq	r0, r3, r1
    1a00:	00000000 	andeq	r0, r0, r0
    1a04:	02000000 	andeq	r0, r0, #0
    1a08:	000c7200 	andeq	r7, ip, r0, lsl #4
    1a0c:	00000000 	andeq	r0, r0, r0
    1a10:	02000000 	andeq	r0, r0, #0
    1a14:	009f3000 	addseq	r3, pc, r0
	...
    1a24:	02000000 	andeq	r0, r0, #0
    1a28:	00007d00 	andeq	r7, r0, r0, lsl #26
    1a2c:	00000000 	andeq	r0, r0, r0
    1a30:	02000000 	andeq	r0, r0, #0
    1a34:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    1a48:	01000000 	mrseq	r0, (UNDEF: 0)
    1a4c:	00005000 	andeq	r5, r0, r0
    1a50:	00000000 	andeq	r0, r0, r0
    1a54:	00010000 	andeq	r0, r1, r0
    1a58:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1a68:	01000000 	mrseq	r0, (UNDEF: 0)
    1a6c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1a78:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1a84:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1a88:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1a8c:	00000000 	andeq	r0, r0, r0
    1a90:	53000100 	movwpl	r0, #256	; 0x100
	...
    1a9c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1aa0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1aa4:	00000000 	andeq	r0, r0, r0
    1aa8:	00010000 	andeq	r0, r1, r0
    1aac:	00000000 	andeq	r0, r0, r0
    1ab0:	01000000 	mrseq	r0, (UNDEF: 0)
    1ab4:	00005300 	andeq	r5, r0, r0, lsl #6
    1ab8:	00000000 	andeq	r0, r0, r0
    1abc:	00010000 	andeq	r0, r1, r0
    1ac0:	00000100 	andeq	r0, r0, r0, lsl #2
    1ac4:	00000000 	andeq	r0, r0, r0
    1ac8:	00030000 	andeq	r0, r3, r0
    1acc:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1ad0:	00000000 	andeq	r0, r0, r0
    1ad4:	01000000 	mrseq	r0, (UNDEF: 0)
    1ad8:	00005200 	andeq	r5, r0, r0, lsl #4
    1adc:	00000000 	andeq	r0, r0, r0
    1ae0:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1aec:	00530001 	subseq	r0, r3, r1
	...
    1af8:	00000001 	andeq	r0, r0, r1
    1afc:	00000000 	andeq	r0, r0, r0
    1b00:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    1b14:	007d0002 	rsbseq	r0, sp, r2
	...
    1b20:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    1b38:	00500001 	subseq	r0, r0, r1
    1b3c:	00000000 	andeq	r0, r0, r0
    1b40:	01000000 	mrseq	r0, (UNDEF: 0)
    1b44:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    1b58:	00530001 	subseq	r0, r3, r1
	...
    1b68:	00000001 	andeq	r0, r0, r1
    1b6c:	00000000 	andeq	r0, r0, r0
    1b70:	72000300 	andvc	r0, r0, #0, 6
    1b74:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1b78:	00000000 	andeq	r0, r0, r0
    1b7c:	00010000 	andeq	r0, r1, r0
    1b80:	00000053 	andeq	r0, r0, r3, asr r0
    1b84:	00000000 	andeq	r0, r0, r0
    1b88:	72000300 	andvc	r0, r0, #0, 6
    1b8c:	00009f0c 	andeq	r9, r0, ip, lsl #30
    1b90:	00000000 	andeq	r0, r0, r0
    1b94:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1ba0:	00530001 	subseq	r0, r3, r1
    1ba4:	00000000 	andeq	r0, r0, r0
    1ba8:	01000000 	mrseq	r0, (UNDEF: 0)
    1bac:	00010000 	andeq	r0, r1, r0
    1bb0:	00000000 	andeq	r0, r0, r0
    1bb4:	03000000 	movweq	r0, #0
    1bb8:	9f0c7200 	svcls	0x000c7200
	...
    1bc4:	00520001 	subseq	r0, r2, r1
    1bc8:	00000000 	andeq	r0, r0, r0
    1bcc:	01000000 	mrseq	r0, (UNDEF: 0)
    1bd0:	00000001 	andeq	r0, r0, r1
    1bd4:	00000000 	andeq	r0, r0, r0
    1bd8:	53000100 	movwpl	r0, #256	; 0x100
	...
    1be4:	00000100 	andeq	r0, r0, r0, lsl #2
    1be8:	00000000 	andeq	r0, r0, r0
    1bec:	00010000 	andeq	r0, r1, r0
    1bf0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    1c00:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    1c0c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    1c10:	00000008 	andeq	r0, r0, r8
	...
    1c24:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    1c30:	00540001 	subseq	r0, r4, r1
	...
    1c44:	53000100 	movwpl	r0, #256	; 0x100
	...
    1c54:	00000100 	andeq	r0, r0, r0, lsl #2
    1c58:	00000000 	andeq	r0, r0, r0
    1c5c:	00030000 	andeq	r0, r3, r0
    1c60:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    1c64:	00000000 	andeq	r0, r0, r0
    1c68:	01000000 	mrseq	r0, (UNDEF: 0)
    1c6c:	00005300 	andeq	r5, r0, r0, lsl #6
    1c70:	00000000 	andeq	r0, r0, r0
    1c74:	00030000 	andeq	r0, r3, r0
    1c78:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    1c84:	00000001 	andeq	r0, r0, r1
    1c88:	00000000 	andeq	r0, r0, r0
    1c8c:	53000100 	movwpl	r0, #256	; 0x100
	...
    1c98:	01000001 	tsteq	r0, r1
	...
    1ca4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    1ca8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1cac:	00000000 	andeq	r0, r0, r0
    1cb0:	52000100 	andpl	r0, r0, #0, 2
	...
    1cbc:	00000101 	andeq	r0, r0, r1, lsl #2
    1cc0:	00000000 	andeq	r0, r0, r0
    1cc4:	00010000 	andeq	r0, r1, r0
    1cc8:	00000053 	andeq	r0, r0, r3, asr r0
    1ccc:	00000000 	andeq	r0, r0, r0
    1cd0:	00010000 	andeq	r0, r1, r0
    1cd4:	00000000 	andeq	r0, r0, r0
    1cd8:	01000000 	mrseq	r0, (UNDEF: 0)
    1cdc:	00005100 	andeq	r5, r0, r0, lsl #2
    1ce0:	00000000 	andeq	r0, r0, r0
    1ce4:	0e280000 	cdpeq	0, 2, cr0, cr8, cr0, {0}
    1ce8:	0e2a0800 	cdpeq	8, 2, cr0, cr10, cr0, {0}
    1cec:	00020800 	andeq	r0, r2, r0, lsl #16
    1cf0:	0e2a007d 	mcreq	0, 1, r0, cr10, cr13, {3}
    1cf4:	0e2c0800 	cdpeq	8, 2, cr0, cr12, cr0, {0}
    1cf8:	00020800 	andeq	r0, r2, r0, lsl #16
    1cfc:	0e2c0c7d 	mcreq	12, 1, r0, cr12, cr13, {3}
    1d00:	0e7a0800 	cdpeq	8, 7, cr0, cr10, cr0, {0}
    1d04:	00020800 	andeq	r0, r2, r0, lsl #16
    1d08:	0e7a187d 	mrceq	8, 3, r1, cr10, cr13, {3}
    1d0c:	0e7c0800 	cdpeq	8, 7, cr0, cr12, cr0, {0}
    1d10:	00020800 	andeq	r0, r2, r0, lsl #16
    1d14:	0e7c0c7d 	mrceq	12, 3, r0, cr12, cr13, {3}
    1d18:	10b00800 	adcsne	r0, r0, r0, lsl #16
    1d1c:	00020800 	andeq	r0, r2, r0, lsl #16
    1d20:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    1d2c:	0e280000 	cdpeq	0, 2, cr0, cr8, cr0, {0}
    1d30:	0e340800 	cdpeq	8, 3, cr0, cr4, cr0, {0}
    1d34:	00010800 	andeq	r0, r1, r0, lsl #16
    1d38:	000e3450 	andeq	r3, lr, r0, asr r4
    1d3c:	0010b008 	andseq	fp, r0, r8
    1d40:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    1d58:	0e320000 	cdpeq	0, 3, cr0, cr2, cr0, {0}
    1d5c:	0e780800 	cdpeq	8, 7, cr0, cr8, cr0, {0}
    1d60:	00010800 	andeq	r0, r1, r0, lsl #16
    1d64:	000e7c53 	andeq	r7, lr, r3, asr ip
    1d68:	000e8108 	andeq	r8, lr, r8, lsl #2
    1d6c:	53000108 	movwpl	r0, #264	; 0x108
    1d70:	08000e84 	stmdaeq	r0, {r2, r7, r9, sl, fp}
    1d74:	08000ee0 	stmdaeq	r0, {r5, r6, r7, r9, sl, fp}
    1d78:	34530001 	ldrbcc	r0, [r3], #-1
    1d7c:	3908000f 	stmdbcc	r8, {r0, r1, r2, r3}
    1d80:	0108000f 	tsteq	r8, pc
    1d84:	0f585300 	svceq	0x00585300
    1d88:	0f6a0800 	svceq	0x006a0800
    1d8c:	00010800 	andeq	r0, r1, r0, lsl #16
    1d90:	00109c53 	andseq	r9, r0, r3, asr ip
    1d94:	0010a108 	andseq	sl, r0, r8, lsl #2
    1d98:	53000108 	movwpl	r0, #264	; 0x108
    1d9c:	080010a4 	stmdaeq	r0, {r2, r5, r7, ip}
    1da0:	080010a9 	stmdaeq	r0, {r0, r3, r5, r7, ip}
    1da4:	00530001 	subseq	r0, r3, r1
	...
    1dbc:	34000000 	strcc	r0, [r0], #-0
    1dc0:	7808000e 	stmdavc	r8, {r1, r2, r3}
    1dc4:	0108000e 	tsteq	r8, lr
    1dc8:	0e7c5000 	cdpeq	0, 7, cr5, cr12, cr0, {0}
    1dcc:	0e7e0800 	cdpeq	8, 7, cr0, cr14, cr0, {0}
    1dd0:	00010800 	andeq	r0, r1, r0, lsl #16
    1dd4:	000e8450 	andeq	r8, lr, r0, asr r4
    1dd8:	000ee008 	andeq	lr, lr, r8
    1ddc:	50000108 	andpl	r0, r0, r8, lsl #2
    1de0:	08000f34 	stmdaeq	r0, {r2, r4, r5, r8, r9, sl, fp}
    1de4:	08000f36 	stmdaeq	r0, {r1, r2, r4, r5, r8, r9, sl, fp}
    1de8:	58500001 	ldmdapl	r0, {r0}^
    1dec:	0a08000f 	beq	201e30 <_Min_Heap_Size+0x201630>
    1df0:	01080010 	tsteq	r8, r0, lsl r0
    1df4:	10245000 	eorne	r5, r4, r0
    1df8:	103e0800 	eorsne	r0, lr, r0, lsl #16
    1dfc:	00010800 	andeq	r0, r1, r0, lsl #16
    1e00:	00109c50 	andseq	r9, r0, r0, asr ip
    1e04:	00109e08 	andseq	r9, r0, r8, lsl #28
    1e08:	50000108 	andpl	r0, r0, r8, lsl #2
    1e0c:	080010a4 	stmdaeq	r0, {r2, r5, r7, ip}
    1e10:	080010a6 	stmdaeq	r0, {r1, r2, r5, r7, ip}
    1e14:	00500001 	subseq	r0, r0, r1
	...
    1e20:	36000000 	strcc	r0, [r0], -r0
    1e24:	4e08000e 	cdpmi	0, 0, cr0, cr8, cr14, {0}
    1e28:	0108000e 	tsteq	r8, lr
    1e2c:	0e7c5100 	rpweqe	f5, f4, f0
    1e30:	0e810800 	cdpeq	8, 8, cr0, cr1, cr0, {0}
    1e34:	00010800 	andeq	r0, r1, r0, lsl #16
    1e38:	00000051 	andeq	r0, r0, r1, asr r0
    1e3c:	00000000 	andeq	r0, r0, r0
    1e40:	03030100 	movweq	r0, #12544	; 0x3100
    1e44:	36000000 	strcc	r0, [r0], -r0
    1e48:	3608000e 	strcc	r0, [r8], -lr
    1e4c:	0208000e 	andeq	r0, r8, #14
    1e50:	369f3000 	ldrcc	r3, [pc], r0
    1e54:	3a08000e 	bcc	201e94 <_Min_Heap_Size+0x201694>
    1e58:	0508000e 	streq	r0, [r8, #-14]
    1e5c:	3f007300 	svccc	0x00007300
    1e60:	0e3a9f1a 	mrceq	15, 1, r9, cr10, cr10, {0}
    1e64:	10b00800 	adcsne	r0, r0, r0, lsl #16
    1e68:	00010800 	andeq	r0, r1, r0, lsl #16
    1e6c:	00000055 	andeq	r0, r0, r5, asr r0
    1e70:	00000000 	andeq	r0, r0, r0
    1e74:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    1e80:	000e3600 	andeq	r3, lr, r0, lsl #12
    1e84:	000e7808 	andeq	r7, lr, r8, lsl #16
    1e88:	30000208 	andcc	r0, r0, r8, lsl #4
    1e8c:	000e7c9f 	muleq	lr, pc, ip	; <UNPREDICTABLE>
    1e90:	000ee808 	andeq	lr, lr, r8, lsl #16
    1e94:	30000208 	andcc	r0, r0, r8, lsl #4
    1e98:	000ee89f 	muleq	lr, pc, r8	; <UNPREDICTABLE>
    1e9c:	000ef708 	andeq	pc, lr, r8, lsl #14
    1ea0:	73000808 	movwvc	r0, #2056	; 0x808
    1ea4:	082e3000 	stmdaeq	lr!, {ip, sp}
    1ea8:	349f1aff 	ldrcc	r1, [pc], #2815	; 1eb0 <_Min_Heap_Size+0x16b0>
    1eac:	3c08000f 	stccc	0, cr0, [r8], {15}
    1eb0:	0208000f 	andeq	r0, r8, #15
    1eb4:	4c9f3000 	ldcmi	0, cr3, [pc], {0}
    1eb8:	5108000f 	tstpl	r8, pc
    1ebc:	0808000f 	stmdaeq	r8, {r0, r1, r2, r3}
    1ec0:	30007300 	andcc	r7, r0, r0, lsl #6
    1ec4:	1aff082e 	bne	fffc3f84 <_estack+0xdffba5e4>
    1ec8:	000f589f 	muleq	pc, pc, r8	; <UNPREDICTABLE>
    1ecc:	0010b008 	andseq	fp, r0, r8
    1ed0:	30000208 	andcc	r0, r0, r8, lsl #4
    1ed4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1ed8:	00000000 	andeq	r0, r0, r0
    1edc:	10000000 	andne	r0, r0, r0
    1ee0:	1c08000f 	stcne	0, cr0, [r8], {15}
    1ee4:	0108000f 	tsteq	r8, pc
    1ee8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1ef4:	01000000 	mrseq	r0, (UNDEF: 0)
    1ef8:	08000f04 	stmdaeq	r0, {r2, r8, r9, sl, fp}
    1efc:	08000f08 	stmdaeq	r0, {r3, r8, r9, sl, fp}
    1f00:	14720003 	ldrbtne	r0, [r2], #-3
    1f04:	000f089f 	muleq	pc, pc, r8	; <UNPREDICTABLE>
    1f08:	000f0c08 	andeq	r0, pc, r8, lsl #24
    1f0c:	53000108 	movwpl	r0, #264	; 0x108
    1f10:	08000f0c 	stmdaeq	r0, {r2, r3, r8, r9, sl, fp}
    1f14:	08000f0c 	stmdaeq	r0, {r2, r3, r8, r9, sl, fp}
    1f18:	14720003 	ldrbtne	r0, [r2], #-3
    1f1c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    1f20:	00000000 	andeq	r0, r0, r0
    1f24:	0c010000 	stceq	0, cr0, [r1], {-0}
    1f28:	0c08000f 	stceq	0, cr0, [r8], {15}
    1f2c:	0108000f 	tsteq	r8, pc
    1f30:	00005300 	andeq	r5, r0, r0, lsl #6
    1f34:	00000000 	andeq	r0, r0, r0
    1f38:	00010000 	andeq	r0, r1, r0
    1f3c:	0f100100 	svceq	0x00100100
    1f40:	0f120800 	svceq	0x00120800
    1f44:	00030800 	andeq	r0, r3, r0, lsl #16
    1f48:	129f1472 	addsne	r1, pc, #1912602624	; 0x72000000
    1f4c:	1608000f 	strne	r0, [r8], -pc
    1f50:	0108000f 	tsteq	r8, pc
    1f54:	00005200 	andeq	r5, r0, r0, lsl #4
    1f58:	00000000 	andeq	r0, r0, r0
    1f5c:	01010000 	mrseq	r0, (UNDEF: 1)
    1f60:	08000f10 	stmdaeq	r0, {r4, r8, r9, sl, fp}
    1f64:	08000f16 	stmdaeq	r0, {r1, r2, r4, r8, r9, sl, fp}
    1f68:	00530001 	subseq	r0, r3, r1
	...
    1f74:	000f1601 	andeq	r1, pc, r1, lsl #12
    1f78:	000f1608 	andeq	r1, pc, r8, lsl #12
    1f7c:	51000108 	tstpl	r0, r8, lsl #2
	...
    1f8c:	08000f86 	stmdaeq	r0, {r1, r2, r7, r8, r9, sl, fp}
    1f90:	08000f98 	stmdaeq	r0, {r3, r4, r7, r8, r9, sl, fp}
    1f94:	98530001 	ldmdals	r3, {r0}^
    1f98:	ec08000f 	stc	0, cr0, [r8], {15}
    1f9c:	0208000f 	andeq	r0, r8, #15
    1fa0:	002e7400 	eoreq	r7, lr, r0, lsl #8
	...
    1fac:	000fac00 	andeq	sl, pc, r0, lsl #24
    1fb0:	000fb608 	andeq	fp, pc, r8, lsl #12
    1fb4:	53000108 	movwpl	r0, #264	; 0x108
	...
    1fc4:	0fa00100 	svceq	0x00a00100
    1fc8:	0fa40800 	svceq	0x00a40800
    1fcc:	00030800 	andeq	r0, r3, r0, lsl #16
    1fd0:	a49f0c72 	ldrge	r0, [pc], #3186	; 1fd8 <_Min_Heap_Size+0x17d8>
    1fd4:	a808000f 	stmdage	r8, {r0, r1, r2, r3}
    1fd8:	0108000f 	tsteq	r8, pc
    1fdc:	0fa85300 	svceq	0x00a85300
    1fe0:	0fa80800 	svceq	0x00a80800
    1fe4:	00030800 	andeq	r0, r3, r0, lsl #16
    1fe8:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    1ff4:	000fa801 	andeq	sl, pc, r1, lsl #16
    1ff8:	000fa808 	andeq	sl, pc, r8, lsl #16
    1ffc:	53000108 	movwpl	r0, #264	; 0x108
	...
    2008:	01000001 	tsteq	r0, r1
    200c:	08000fac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, fp}
    2010:	08000fae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, r9, sl, fp}
    2014:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2018:	000fae9f 	muleq	pc, pc, lr	; <UNPREDICTABLE>
    201c:	000fb208 	andeq	fp, pc, r8, lsl #4
    2020:	52000108 	andpl	r0, r0, #8, 2
	...
    202c:	0fac0101 	svceq	0x00ac0101
    2030:	0fb20800 	svceq	0x00b20800
    2034:	00010800 	andeq	r0, r1, r0, lsl #16
    2038:	00000053 	andeq	r0, r0, r3, asr r0
    203c:	00000000 	andeq	r0, r0, r0
    2040:	b2010000 	andlt	r0, r1, #0
    2044:	b208000f 	andlt	r0, r8, #15
    2048:	0108000f 	tsteq	r8, pc
    204c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2058:	08000fc4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl, fp}
    205c:	08000fce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r8, r9, sl, fp}
    2060:	00530001 	subseq	r0, r3, r1
	...
    2070:	000fb801 	andeq	fp, pc, r1, lsl #16
    2074:	000fbc08 	andeq	fp, pc, r8, lsl #24
    2078:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    207c:	0fbc9f14 	svceq	0x00bc9f14
    2080:	0fc00800 	svceq	0x00c00800
    2084:	00010800 	andeq	r0, r1, r0, lsl #16
    2088:	000fc053 	andeq	ip, pc, r3, asr r0	; <UNPREDICTABLE>
    208c:	000fc008 	andeq	ip, pc, r8
    2090:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    2094:	00009f14 	andeq	r9, r0, r4, lsl pc
    2098:	00000000 	andeq	r0, r0, r0
    209c:	01000000 	mrseq	r0, (UNDEF: 0)
    20a0:	08000fc0 	stmdaeq	r0, {r6, r7, r8, r9, sl, fp}
    20a4:	08000fc0 	stmdaeq	r0, {r6, r7, r8, r9, sl, fp}
    20a8:	00530001 	subseq	r0, r3, r1
    20ac:	00000000 	andeq	r0, r0, r0
    20b0:	01000000 	mrseq	r0, (UNDEF: 0)
    20b4:	c4010000 	strgt	r0, [r1], #-0
    20b8:	c608000f 	strgt	r0, [r8], -pc
    20bc:	0308000f 	movweq	r0, #32783	; 0x800f
    20c0:	9f147200 	svcls	0x00147200
    20c4:	08000fc6 	stmdaeq	r0, {r1, r2, r6, r7, r8, r9, sl, fp}
    20c8:	08000fca 	stmdaeq	r0, {r1, r3, r6, r7, r8, r9, sl, fp}
    20cc:	00520001 	subseq	r0, r2, r1
    20d0:	00000000 	andeq	r0, r0, r0
    20d4:	01000000 	mrseq	r0, (UNDEF: 0)
    20d8:	000fc401 	andeq	ip, pc, r1, lsl #8
    20dc:	000fca08 	andeq	ip, pc, r8, lsl #20
    20e0:	53000108 	movwpl	r0, #264	; 0x108
	...
    20ec:	0fca0100 	svceq	0x00ca0100
    20f0:	0fca0800 	svceq	0x00ca0800
    20f4:	00010800 	andeq	r0, r1, r0, lsl #16
    20f8:	00000051 	andeq	r0, r0, r1, asr r0
    20fc:	00000000 	andeq	r0, r0, r0
    2100:	dc000000 	stcle	0, cr0, [r0], {-0}
    2104:	e808000f 	stmda	r8, {r0, r1, r2, r3}
    2108:	0108000f 	tsteq	r8, pc
    210c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2118:	01000000 	mrseq	r0, (UNDEF: 0)
    211c:	08000fd0 	stmdaeq	r0, {r4, r6, r7, r8, r9, sl, fp}
    2120:	08000fd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, sl, fp}
    2124:	14720003 	ldrbtne	r0, [r2], #-3
    2128:	000fd49f 	muleq	pc, pc, r4	; <UNPREDICTABLE>
    212c:	000fd808 	andeq	sp, pc, r8, lsl #16
    2130:	53000108 	movwpl	r0, #264	; 0x108
    2134:	08000fd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, fp}
    2138:	08000fd8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, fp}
    213c:	14720003 	ldrbtne	r0, [r2], #-3
    2140:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2144:	00000000 	andeq	r0, r0, r0
    2148:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    214c:	d808000f 	stmdale	r8, {r0, r1, r2, r3}
    2150:	0108000f 	tsteq	r8, pc
    2154:	00005300 	andeq	r5, r0, r0, lsl #6
    2158:	00000000 	andeq	r0, r0, r0
    215c:	00010000 	andeq	r0, r1, r0
    2160:	0fdc0100 	svceq	0x00dc0100
    2164:	0fde0800 	svceq	0x00de0800
    2168:	00030800 	andeq	r0, r3, r0, lsl #16
    216c:	de9f1472 	mrcle	4, 4, r1, cr15, cr2, {3}
    2170:	e208000f 	and	r0, r8, #15
    2174:	0108000f 	tsteq	r8, pc
    2178:	00005200 	andeq	r5, r0, r0, lsl #4
    217c:	00000000 	andeq	r0, r0, r0
    2180:	01010000 	mrseq	r0, (UNDEF: 1)
    2184:	08000fdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, fp}
    2188:	08000fe2 	stmdaeq	r0, {r1, r5, r6, r7, r8, r9, sl, fp}
    218c:	00530001 	subseq	r0, r3, r1
	...
    2198:	000fe201 	andeq	lr, pc, r1, lsl #4
    219c:	000fe208 	andeq	lr, pc, r8, lsl #4
    21a0:	51000108 	tstpl	r0, r8, lsl #2
	...
    21ac:	0ffe0000 	svceq	0x00fe0000
    21b0:	100d0800 	andne	r0, sp, r0, lsl #16
    21b4:	00010800 	andeq	r0, r1, r0, lsl #16
    21b8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    21c4:	f2010000 	vhadd.s8	d0, d1, d0
    21c8:	f608000f 			; <UNDEFINED> instruction: 0xf608000f
    21cc:	0308000f 	movweq	r0, #32783	; 0x800f
    21d0:	9f0c7200 	svcls	0x000c7200
    21d4:	08000ff6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, r9, sl, fp}
    21d8:	08000ffa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r8, r9, sl, fp}
    21dc:	fa530001 	blx	14c21e8 <_Min_Heap_Size+0x14c19e8>
    21e0:	fa08000f 	blx	202224 <_Min_Heap_Size+0x201a24>
    21e4:	0308000f 	movweq	r0, #32783	; 0x800f
    21e8:	9f0c7200 	svcls	0x000c7200
	...
    21f4:	0ffa0100 	svceq	0x00fa0100
    21f8:	0ffa0800 	svceq	0x00fa0800
    21fc:	00010800 	andeq	r0, r1, r0, lsl #16
    2200:	00000053 	andeq	r0, r0, r3, asr r0
    2204:	00000000 	andeq	r0, r0, r0
    2208:	00000100 	andeq	r0, r0, r0, lsl #2
    220c:	000ffe01 	andeq	pc, pc, r1, lsl #28
    2210:	00100008 	andseq	r0, r0, r8
    2214:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    2218:	10009f0c 	andne	r9, r0, ip, lsl #30
    221c:	10040800 	andne	r0, r4, r0, lsl #16
    2220:	00010800 	andeq	r0, r1, r0, lsl #16
    2224:	00000052 	andeq	r0, r0, r2, asr r0
    2228:	00000000 	andeq	r0, r0, r0
    222c:	fe010100 	cdp2	1, 0, cr0, cr1, cr0, {0}
    2230:	0408000f 	streq	r0, [r8], #-15
    2234:	01080010 	tsteq	r8, r0, lsl r0
    2238:	00005300 	andeq	r5, r0, r0, lsl #6
    223c:	00000000 	andeq	r0, r0, r0
    2240:	01000000 	mrseq	r0, (UNDEF: 0)
    2244:	08001004 	stmdaeq	r0, {r2, ip}
    2248:	08001004 	stmdaeq	r0, {r2, ip}
    224c:	00510001 	subseq	r0, r1, r1
	...
    2258:	00102e00 	andseq	r2, r0, r0, lsl #28
    225c:	00109908 	andseq	r9, r0, r8, lsl #18
    2260:	51000108 	tstpl	r0, r8, lsl #2
	...
    226c:	104c0000 	subne	r0, ip, r0
    2270:	10560800 	subsne	r0, r6, r0, lsl #16
    2274:	00010800 	andeq	r0, r1, r0, lsl #16
    2278:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2284:	40010000 	andmi	r0, r1, r0
    2288:	44080010 	strmi	r0, [r8], #-16
    228c:	03080010 	movweq	r0, #32784	; 0x8010
    2290:	9f0c7200 	svcls	0x000c7200
    2294:	08001044 	stmdaeq	r0, {r2, r6, ip}
    2298:	08001048 	stmdaeq	r0, {r3, r6, ip}
    229c:	48530001 	ldmdami	r3, {r0}^
    22a0:	48080010 	stmdami	r8, {r4}
    22a4:	03080010 	movweq	r0, #32784	; 0x8010
    22a8:	9f0c7200 	svcls	0x000c7200
	...
    22b4:	10480100 	subne	r0, r8, r0, lsl #2
    22b8:	10480800 	subne	r0, r8, r0, lsl #16
    22bc:	00010800 	andeq	r0, r1, r0, lsl #16
    22c0:	00000053 	andeq	r0, r0, r3, asr r0
    22c4:	00000000 	andeq	r0, r0, r0
    22c8:	00000100 	andeq	r0, r0, r0, lsl #2
    22cc:	00104c01 	andseq	r4, r0, r1, lsl #24
    22d0:	00104e08 	andseq	r4, r0, r8, lsl #28
    22d4:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    22d8:	104e9f0c 	subne	r9, lr, ip, lsl #30
    22dc:	10520800 	subsne	r0, r2, r0, lsl #16
    22e0:	00010800 	andeq	r0, r1, r0, lsl #16
    22e4:	00000052 	andeq	r0, r0, r2, asr r0
    22e8:	00000000 	andeq	r0, r0, r0
    22ec:	4c010100 	stfmis	f0, [r1], {-0}
    22f0:	52080010 	andpl	r0, r8, #16
    22f4:	01080010 	tsteq	r8, r0, lsl r0
    22f8:	00005300 	andeq	r5, r0, r0, lsl #6
    22fc:	00000000 	andeq	r0, r0, r0
    2300:	01000000 	mrseq	r0, (UNDEF: 0)
    2304:	08001052 	stmdaeq	r0, {r1, r4, r6, ip}
    2308:	08001052 	stmdaeq	r0, {r1, r4, r6, ip}
    230c:	00500001 	subseq	r0, r0, r1
	...
    2318:	00106400 	andseq	r6, r0, r0, lsl #8
    231c:	00107008 	andseq	r7, r0, r8
    2320:	53000108 	movwpl	r0, #264	; 0x108
	...
    2330:	10580100 	subsne	r0, r8, r0, lsl #2
    2334:	105c0800 	subsne	r0, ip, r0, lsl #16
    2338:	00030800 	andeq	r0, r3, r0, lsl #16
    233c:	5c9f1472 	cfldrspl	mvf1, [pc], {114}	; 0x72
    2340:	60080010 	andvs	r0, r8, r0, lsl r0
    2344:	01080010 	tsteq	r8, r0, lsl r0
    2348:	10605300 	rsbne	r5, r0, r0, lsl #6
    234c:	10600800 	rsbne	r0, r0, r0, lsl #16
    2350:	00030800 	andeq	r0, r3, r0, lsl #16
    2354:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    2360:	00106001 	andseq	r6, r0, r1
    2364:	00106008 	andseq	r6, r0, r8
    2368:	53000108 	movwpl	r0, #264	; 0x108
	...
    2374:	01000001 	tsteq	r0, r1
    2378:	08001064 	stmdaeq	r0, {r2, r5, r6, ip}
    237c:	08001066 	stmdaeq	r0, {r1, r2, r5, r6, ip}
    2380:	14720003 	ldrbtne	r0, [r2], #-3
    2384:	0010669f 	mulseq	r0, pc, r6	; <UNPREDICTABLE>
    2388:	00106a08 	andseq	r6, r0, r8, lsl #20
    238c:	52000108 	andpl	r0, r0, #8, 2
	...
    2398:	10640101 	rsbne	r0, r4, r1, lsl #2
    239c:	106a0800 	rsbne	r0, sl, r0, lsl #16
    23a0:	00010800 	andeq	r0, r1, r0, lsl #16
    23a4:	00000053 	andeq	r0, r0, r3, asr r0
    23a8:	00000000 	andeq	r0, r0, r0
    23ac:	6a010000 	bvs	423b4 <_Min_Heap_Size+0x41bb4>
    23b0:	6a080010 	bvs	2023f8 <_Min_Heap_Size+0x201bf8>
    23b4:	01080010 	tsteq	r8, r0, lsl r0
    23b8:	00005000 	andeq	r5, r0, r0
	...
    23c4:	08001086 	stmdaeq	r0, {r1, r2, r7, ip}
    23c8:	08001092 	stmdaeq	r0, {r1, r4, r7, ip}
    23cc:	00530001 	subseq	r0, r3, r1
	...
    23dc:	00107a01 	andseq	r7, r0, r1, lsl #20
    23e0:	00107e08 	andseq	r7, r0, r8, lsl #28
    23e4:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    23e8:	107e9f0c 	rsbsne	r9, lr, ip, lsl #30
    23ec:	10820800 	addne	r0, r2, r0, lsl #16
    23f0:	00010800 	andeq	r0, r1, r0, lsl #16
    23f4:	00108253 	andseq	r8, r0, r3, asr r2
    23f8:	00108208 	andseq	r8, r0, r8, lsl #4
    23fc:	72000308 	andvc	r0, r0, #8, 6	; 0x20000000
    2400:	00009f0c 	andeq	r9, r0, ip, lsl #30
    2404:	00000000 	andeq	r0, r0, r0
    2408:	01000000 	mrseq	r0, (UNDEF: 0)
    240c:	08001082 	stmdaeq	r0, {r1, r7, ip}
    2410:	08001082 	stmdaeq	r0, {r1, r7, ip}
    2414:	00530001 	subseq	r0, r3, r1
    2418:	00000000 	andeq	r0, r0, r0
    241c:	01000000 	mrseq	r0, (UNDEF: 0)
    2420:	86010000 	strhi	r0, [r1], -r0
    2424:	88080010 	stmdahi	r8, {r4}
    2428:	03080010 	movweq	r0, #32784	; 0x8010
    242c:	9f0c7200 	svcls	0x000c7200
    2430:	08001088 	stmdaeq	r0, {r3, r7, ip}
    2434:	0800108c 	stmdaeq	r0, {r2, r3, r7, ip}
    2438:	00520001 	subseq	r0, r2, r1
    243c:	00000000 	andeq	r0, r0, r0
    2440:	01000000 	mrseq	r0, (UNDEF: 0)
    2444:	00108601 	andseq	r8, r0, r1, lsl #12
    2448:	00108c08 	andseq	r8, r0, r8, lsl #24
    244c:	53000108 	movwpl	r0, #264	; 0x108
	...
    2458:	108c0100 	addne	r0, ip, r0, lsl #2
    245c:	108c0800 	addne	r0, ip, r0, lsl #16
    2460:	00010800 	andeq	r0, r1, r0, lsl #16
    2464:	00000050 	andeq	r0, r0, r0, asr r0
	...
    2474:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2480:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    2484:	00000008 	andeq	r0, r0, r8
	...
    24a0:	01000000 	mrseq	r0, (UNDEF: 0)
    24a4:	00005000 	andeq	r5, r0, r0
    24a8:	00000000 	andeq	r0, r0, r0
    24ac:	00010000 	andeq	r0, r1, r0
    24b0:	00000054 	andeq	r0, r0, r4, asr r0
    24b4:	00000000 	andeq	r0, r0, r0
    24b8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    24c4:	00540001 	subseq	r0, r4, r1
    24c8:	00000000 	andeq	r0, r0, r0
    24cc:	01000000 	mrseq	r0, (UNDEF: 0)
    24d0:	00005000 	andeq	r5, r0, r0
    24d4:	00000000 	andeq	r0, r0, r0
    24d8:	00010000 	andeq	r0, r1, r0
    24dc:	00000054 	andeq	r0, r0, r4, asr r0
    24e0:	00000000 	andeq	r0, r0, r0
    24e4:	f3000400 	vshl.u8	d0, d0, d0
    24e8:	009f5001 	addseq	r5, pc, r1
	...
    24fc:	53000100 	movwpl	r0, #256	; 0x100
	...
    250c:	00000100 	andeq	r0, r0, r0, lsl #2
    2510:	00000000 	andeq	r0, r0, r0
    2514:	00030000 	andeq	r0, r3, r0
    2518:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    251c:	00000000 	andeq	r0, r0, r0
    2520:	01000000 	mrseq	r0, (UNDEF: 0)
    2524:	00005300 	andeq	r5, r0, r0, lsl #6
    2528:	00000000 	andeq	r0, r0, r0
    252c:	00030000 	andeq	r0, r3, r0
    2530:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    253c:	00000001 	andeq	r0, r0, r1
    2540:	00000000 	andeq	r0, r0, r0
    2544:	53000100 	movwpl	r0, #256	; 0x100
	...
    2550:	01000001 	tsteq	r0, r1
	...
    255c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2560:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2564:	00000000 	andeq	r0, r0, r0
    2568:	52000100 	andpl	r0, r0, #0, 2
	...
    2574:	00000101 	andeq	r0, r0, r1, lsl #2
    2578:	00000000 	andeq	r0, r0, r0
    257c:	00010000 	andeq	r0, r1, r0
    2580:	00000053 	andeq	r0, r0, r3, asr r0
    2584:	00000000 	andeq	r0, r0, r0
    2588:	00010000 	andeq	r0, r1, r0
    258c:	00000000 	andeq	r0, r0, r0
    2590:	01000000 	mrseq	r0, (UNDEF: 0)
    2594:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    25a8:	00530001 	subseq	r0, r3, r1
	...
    25b8:	00000001 	andeq	r0, r0, r1
    25bc:	00000000 	andeq	r0, r0, r0
    25c0:	72000300 	andvc	r0, r0, #0, 6
    25c4:	00009f14 	andeq	r9, r0, r4, lsl pc
    25c8:	00000000 	andeq	r0, r0, r0
    25cc:	00010000 	andeq	r0, r1, r0
    25d0:	00000053 	andeq	r0, r0, r3, asr r0
    25d4:	00000000 	andeq	r0, r0, r0
    25d8:	72000300 	andvc	r0, r0, #0, 6
    25dc:	00009f14 	andeq	r9, r0, r4, lsl pc
    25e0:	00000000 	andeq	r0, r0, r0
    25e4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    25f0:	00530001 	subseq	r0, r3, r1
    25f4:	00000000 	andeq	r0, r0, r0
    25f8:	01000000 	mrseq	r0, (UNDEF: 0)
    25fc:	00010000 	andeq	r0, r1, r0
    2600:	00000000 	andeq	r0, r0, r0
    2604:	03000000 	movweq	r0, #0
    2608:	9f147200 	svcls	0x00147200
	...
    2614:	00520001 	subseq	r0, r2, r1
    2618:	00000000 	andeq	r0, r0, r0
    261c:	01000000 	mrseq	r0, (UNDEF: 0)
    2620:	00000001 	andeq	r0, r0, r1
    2624:	00000000 	andeq	r0, r0, r0
    2628:	53000100 	movwpl	r0, #256	; 0x100
	...
    2634:	00000100 	andeq	r0, r0, r0, lsl #2
    2638:	00000000 	andeq	r0, r0, r0
    263c:	00010000 	andeq	r0, r1, r0
    2640:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2650:	01000000 	mrseq	r0, (UNDEF: 0)
    2654:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2660:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    266c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2670:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2674:	00000000 	andeq	r0, r0, r0
    2678:	53000100 	movwpl	r0, #256	; 0x100
	...
    2684:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2688:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    268c:	00000000 	andeq	r0, r0, r0
    2690:	00010000 	andeq	r0, r1, r0
    2694:	00000000 	andeq	r0, r0, r0
    2698:	01000000 	mrseq	r0, (UNDEF: 0)
    269c:	00005300 	andeq	r5, r0, r0, lsl #6
    26a0:	00000000 	andeq	r0, r0, r0
    26a4:	00010000 	andeq	r0, r1, r0
    26a8:	00000100 	andeq	r0, r0, r0, lsl #2
    26ac:	00000000 	andeq	r0, r0, r0
    26b0:	00030000 	andeq	r0, r3, r0
    26b4:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    26b8:	00000000 	andeq	r0, r0, r0
    26bc:	01000000 	mrseq	r0, (UNDEF: 0)
    26c0:	00005200 	andeq	r5, r0, r0, lsl #4
    26c4:	00000000 	andeq	r0, r0, r0
    26c8:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    26d4:	00530001 	subseq	r0, r3, r1
	...
    26e0:	00000001 	andeq	r0, r0, r1
    26e4:	00000000 	andeq	r0, r0, r0
    26e8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    26fc:	00010000 	andeq	r0, r1, r0
    2700:	00000053 	andeq	r0, r0, r3, asr r0
	...
    270c:	00010000 	andeq	r0, r1, r0
    2710:	00000000 	andeq	r0, r0, r0
    2714:	03000000 	movweq	r0, #0
    2718:	9f147200 	svcls	0x00147200
	...
    2724:	00530001 	subseq	r0, r3, r1
    2728:	00000000 	andeq	r0, r0, r0
    272c:	03000000 	movweq	r0, #0
    2730:	9f147200 	svcls	0x00147200
	...
    273c:	00000100 	andeq	r0, r0, r0, lsl #2
    2740:	00000000 	andeq	r0, r0, r0
    2744:	00010000 	andeq	r0, r1, r0
    2748:	00000053 	andeq	r0, r0, r3, asr r0
    274c:	00000000 	andeq	r0, r0, r0
    2750:	00000100 	andeq	r0, r0, r0, lsl #2
    2754:	00000001 	andeq	r0, r0, r1
    2758:	00000000 	andeq	r0, r0, r0
    275c:	72000300 	andvc	r0, r0, #0, 6
    2760:	00009f14 	andeq	r9, r0, r4, lsl pc
    2764:	00000000 	andeq	r0, r0, r0
    2768:	00010000 	andeq	r0, r1, r0
    276c:	00000052 	andeq	r0, r0, r2, asr r0
    2770:	00000000 	andeq	r0, r0, r0
    2774:	00010100 	andeq	r0, r1, r0, lsl #2
    2778:	00000000 	andeq	r0, r0, r0
    277c:	01000000 	mrseq	r0, (UNDEF: 0)
    2780:	00005300 	andeq	r5, r0, r0, lsl #6
    2784:	00000000 	andeq	r0, r0, r0
    2788:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2794:	00510001 	subseq	r0, r1, r1
	...
    27a4:	02000000 	andeq	r0, r0, #0
    27a8:	00007d00 	andeq	r7, r0, r0, lsl #26
    27ac:	00000000 	andeq	r0, r0, r0
    27b0:	02000000 	andeq	r0, r0, #0
    27b4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    27d4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    27e0:	00540001 	subseq	r0, r4, r1
    27e4:	00000000 	andeq	r0, r0, r0
    27e8:	01000000 	mrseq	r0, (UNDEF: 0)
    27ec:	00005000 	andeq	r5, r0, r0
    27f0:	00000000 	andeq	r0, r0, r0
    27f4:	00010000 	andeq	r0, r1, r0
    27f8:	00000054 	andeq	r0, r0, r4, asr r0
    27fc:	00000000 	andeq	r0, r0, r0
    2800:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    280c:	00540001 	subseq	r0, r4, r1
    2810:	00000000 	andeq	r0, r0, r0
    2814:	04000000 	streq	r0, [r0], #-0
    2818:	5001f300 	andpl	pc, r1, r0, lsl #6
    281c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    282c:	01000000 	mrseq	r0, (UNDEF: 0)
    2830:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    283c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2848:	0c720003 	ldcleq	0, cr0, [r2], #-12
    284c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2850:	00000000 	andeq	r0, r0, r0
    2854:	53000100 	movwpl	r0, #256	; 0x100
	...
    2860:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2864:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2868:	00000000 	andeq	r0, r0, r0
    286c:	00010000 	andeq	r0, r1, r0
    2870:	00000000 	andeq	r0, r0, r0
    2874:	01000000 	mrseq	r0, (UNDEF: 0)
    2878:	00005300 	andeq	r5, r0, r0, lsl #6
    287c:	00000000 	andeq	r0, r0, r0
    2880:	00010000 	andeq	r0, r1, r0
    2884:	00000100 	andeq	r0, r0, r0, lsl #2
    2888:	00000000 	andeq	r0, r0, r0
    288c:	00030000 	andeq	r0, r3, r0
    2890:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2894:	00000000 	andeq	r0, r0, r0
    2898:	01000000 	mrseq	r0, (UNDEF: 0)
    289c:	00005200 	andeq	r5, r0, r0, lsl #4
    28a0:	00000000 	andeq	r0, r0, r0
    28a4:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    28b0:	00530001 	subseq	r0, r3, r1
	...
    28bc:	00000001 	andeq	r0, r0, r1
    28c0:	00000000 	andeq	r0, r0, r0
    28c4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    28d8:	00010000 	andeq	r0, r1, r0
    28dc:	00000053 	andeq	r0, r0, r3, asr r0
	...
    28e8:	00010000 	andeq	r0, r1, r0
    28ec:	00000000 	andeq	r0, r0, r0
    28f0:	03000000 	movweq	r0, #0
    28f4:	9f147200 	svcls	0x00147200
	...
    2900:	00530001 	subseq	r0, r3, r1
    2904:	00000000 	andeq	r0, r0, r0
    2908:	03000000 	movweq	r0, #0
    290c:	9f147200 	svcls	0x00147200
	...
    2918:	00000100 	andeq	r0, r0, r0, lsl #2
    291c:	00000000 	andeq	r0, r0, r0
    2920:	00010000 	andeq	r0, r1, r0
    2924:	00000053 	andeq	r0, r0, r3, asr r0
    2928:	00000000 	andeq	r0, r0, r0
    292c:	00000100 	andeq	r0, r0, r0, lsl #2
    2930:	00000001 	andeq	r0, r0, r1
    2934:	00000000 	andeq	r0, r0, r0
    2938:	72000300 	andvc	r0, r0, #0, 6
    293c:	00009f14 	andeq	r9, r0, r4, lsl pc
    2940:	00000000 	andeq	r0, r0, r0
    2944:	00010000 	andeq	r0, r1, r0
    2948:	00000052 	andeq	r0, r0, r2, asr r0
    294c:	00000000 	andeq	r0, r0, r0
    2950:	00010100 	andeq	r0, r1, r0, lsl #2
    2954:	00000000 	andeq	r0, r0, r0
    2958:	01000000 	mrseq	r0, (UNDEF: 0)
    295c:	00005300 	andeq	r5, r0, r0, lsl #6
    2960:	00000000 	andeq	r0, r0, r0
    2964:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2970:	00510001 	subseq	r0, r1, r1
	...
    2980:	02000000 	andeq	r0, r0, #0
    2984:	00007d00 	andeq	r7, r0, r0, lsl #26
    2988:	00000000 	andeq	r0, r0, r0
    298c:	02000000 	andeq	r0, r0, #0
    2990:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    29ac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    29b8:	00540001 	subseq	r0, r4, r1
    29bc:	00000000 	andeq	r0, r0, r0
    29c0:	01000000 	mrseq	r0, (UNDEF: 0)
    29c4:	00005000 	andeq	r5, r0, r0
    29c8:	00000000 	andeq	r0, r0, r0
    29cc:	00010000 	andeq	r0, r1, r0
    29d0:	00000054 	andeq	r0, r0, r4, asr r0
    29d4:	00000000 	andeq	r0, r0, r0
    29d8:	f3000400 	vshl.u8	d0, d0, d0
    29dc:	009f5001 	addseq	r5, pc, r1
    29e0:	00000000 	andeq	r0, r0, r0
    29e4:	01000000 	mrseq	r0, (UNDEF: 0)
    29e8:	01010000 	mrseq	r0, (UNDEF: 1)
    29ec:	00000002 	andeq	r0, r0, r2
	...
    29f8:	31000200 	mrscc	r0, R8_usr
    29fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2a00:	00000000 	andeq	r0, r0, r0
    2a04:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    2a10:	9f310002 	svcls	0x00310002
	...
    2a1c:	9f310002 	svcls	0x00310002
	...
    2a28:	00550001 	subseq	r0, r5, r1
	...
    2a3c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2a4c:	00000100 	andeq	r0, r0, r0, lsl #2
    2a50:	00000000 	andeq	r0, r0, r0
    2a54:	00030000 	andeq	r0, r3, r0
    2a58:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2a5c:	00000000 	andeq	r0, r0, r0
    2a60:	01000000 	mrseq	r0, (UNDEF: 0)
    2a64:	00005300 	andeq	r5, r0, r0, lsl #6
    2a68:	00000000 	andeq	r0, r0, r0
    2a6c:	00030000 	andeq	r0, r3, r0
    2a70:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    2a7c:	00000001 	andeq	r0, r0, r1
    2a80:	00000000 	andeq	r0, r0, r0
    2a84:	53000100 	movwpl	r0, #256	; 0x100
	...
    2a90:	01000001 	tsteq	r0, r1
	...
    2a9c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2aa0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2aa4:	00000000 	andeq	r0, r0, r0
    2aa8:	52000100 	andpl	r0, r0, #0, 2
	...
    2ab4:	00000101 	andeq	r0, r0, r1, lsl #2
    2ab8:	00000000 	andeq	r0, r0, r0
    2abc:	00010000 	andeq	r0, r1, r0
    2ac0:	00000053 	andeq	r0, r0, r3, asr r0
    2ac4:	00000000 	andeq	r0, r0, r0
    2ac8:	00010000 	andeq	r0, r1, r0
    2acc:	00000000 	andeq	r0, r0, r0
    2ad0:	01000000 	mrseq	r0, (UNDEF: 0)
    2ad4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2ae8:	00530001 	subseq	r0, r3, r1
	...
    2af8:	00000001 	andeq	r0, r0, r1
    2afc:	00000000 	andeq	r0, r0, r0
    2b00:	72000300 	andvc	r0, r0, #0, 6
    2b04:	00009f14 	andeq	r9, r0, r4, lsl pc
    2b08:	00000000 	andeq	r0, r0, r0
    2b0c:	00010000 	andeq	r0, r1, r0
    2b10:	00000053 	andeq	r0, r0, r3, asr r0
    2b14:	00000000 	andeq	r0, r0, r0
    2b18:	72000300 	andvc	r0, r0, #0, 6
    2b1c:	00009f14 	andeq	r9, r0, r4, lsl pc
    2b20:	00000000 	andeq	r0, r0, r0
    2b24:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2b30:	00530001 	subseq	r0, r3, r1
    2b34:	00000000 	andeq	r0, r0, r0
    2b38:	01000000 	mrseq	r0, (UNDEF: 0)
    2b3c:	00010000 	andeq	r0, r1, r0
    2b40:	00000000 	andeq	r0, r0, r0
    2b44:	03000000 	movweq	r0, #0
    2b48:	9f147200 	svcls	0x00147200
	...
    2b54:	00520001 	subseq	r0, r2, r1
    2b58:	00000000 	andeq	r0, r0, r0
    2b5c:	01000000 	mrseq	r0, (UNDEF: 0)
    2b60:	00000001 	andeq	r0, r0, r1
    2b64:	00000000 	andeq	r0, r0, r0
    2b68:	53000100 	movwpl	r0, #256	; 0x100
	...
    2b74:	00000100 	andeq	r0, r0, r0, lsl #2
    2b78:	00000000 	andeq	r0, r0, r0
    2b7c:	00010000 	andeq	r0, r1, r0
    2b80:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2b90:	01000000 	mrseq	r0, (UNDEF: 0)
    2b94:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2ba0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2bac:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2bb0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2bb4:	00000000 	andeq	r0, r0, r0
    2bb8:	53000100 	movwpl	r0, #256	; 0x100
	...
    2bc4:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2bc8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2bcc:	00000000 	andeq	r0, r0, r0
    2bd0:	00010000 	andeq	r0, r1, r0
    2bd4:	00000000 	andeq	r0, r0, r0
    2bd8:	01000000 	mrseq	r0, (UNDEF: 0)
    2bdc:	00005300 	andeq	r5, r0, r0, lsl #6
    2be0:	00000000 	andeq	r0, r0, r0
    2be4:	00010000 	andeq	r0, r1, r0
    2be8:	00000100 	andeq	r0, r0, r0, lsl #2
    2bec:	00000000 	andeq	r0, r0, r0
    2bf0:	00030000 	andeq	r0, r3, r0
    2bf4:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2bf8:	00000000 	andeq	r0, r0, r0
    2bfc:	01000000 	mrseq	r0, (UNDEF: 0)
    2c00:	00005200 	andeq	r5, r0, r0, lsl #4
    2c04:	00000000 	andeq	r0, r0, r0
    2c08:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2c14:	00530001 	subseq	r0, r3, r1
	...
    2c20:	00000001 	andeq	r0, r0, r1
    2c24:	00000000 	andeq	r0, r0, r0
    2c28:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2c40:	00530001 	subseq	r0, r3, r1
    2c44:	00000000 	andeq	r0, r0, r0
    2c48:	01000000 	mrseq	r0, (UNDEF: 0)
    2c4c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2c58:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2c64:	14710003 	ldrbtne	r0, [r1], #-3
    2c68:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2c6c:	00000000 	andeq	r0, r0, r0
    2c70:	53000100 	movwpl	r0, #256	; 0x100
	...
    2c7c:	14710003 	ldrbtne	r0, [r1], #-3
    2c80:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2c84:	00000000 	andeq	r0, r0, r0
    2c88:	00010000 	andeq	r0, r1, r0
    2c8c:	00000000 	andeq	r0, r0, r0
    2c90:	01000000 	mrseq	r0, (UNDEF: 0)
    2c94:	00005300 	andeq	r5, r0, r0, lsl #6
    2c98:	00000000 	andeq	r0, r0, r0
    2c9c:	00010000 	andeq	r0, r1, r0
    2ca0:	00000100 	andeq	r0, r0, r0, lsl #2
    2ca4:	00000000 	andeq	r0, r0, r0
    2ca8:	00030000 	andeq	r0, r3, r0
    2cac:	009f1471 	addseq	r1, pc, r1, ror r4	; <UNPREDICTABLE>
    2cb0:	00000000 	andeq	r0, r0, r0
    2cb4:	01000000 	mrseq	r0, (UNDEF: 0)
    2cb8:	00005100 	andeq	r5, r0, r0, lsl #2
    2cbc:	00000000 	andeq	r0, r0, r0
    2cc0:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2ccc:	00530001 	subseq	r0, r3, r1
	...
    2cd8:	00000001 	andeq	r0, r0, r1
    2cdc:	00000000 	andeq	r0, r0, r0
    2ce0:	52000100 	andpl	r0, r0, #0, 2
	...
    2cf4:	00010000 	andeq	r0, r1, r0
    2cf8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2d04:	00010000 	andeq	r0, r1, r0
    2d08:	00000000 	andeq	r0, r0, r0
    2d0c:	03000000 	movweq	r0, #0
    2d10:	9f147200 	svcls	0x00147200
	...
    2d1c:	00530001 	subseq	r0, r3, r1
    2d20:	00000000 	andeq	r0, r0, r0
    2d24:	03000000 	movweq	r0, #0
    2d28:	9f147200 	svcls	0x00147200
	...
    2d34:	00000100 	andeq	r0, r0, r0, lsl #2
    2d38:	00000000 	andeq	r0, r0, r0
    2d3c:	00010000 	andeq	r0, r1, r0
    2d40:	00000053 	andeq	r0, r0, r3, asr r0
    2d44:	00000000 	andeq	r0, r0, r0
    2d48:	00000100 	andeq	r0, r0, r0, lsl #2
    2d4c:	00000001 	andeq	r0, r0, r1
    2d50:	00000000 	andeq	r0, r0, r0
    2d54:	72000300 	andvc	r0, r0, #0, 6
    2d58:	00009f14 	andeq	r9, r0, r4, lsl pc
    2d5c:	00000000 	andeq	r0, r0, r0
    2d60:	00010000 	andeq	r0, r1, r0
    2d64:	00000052 	andeq	r0, r0, r2, asr r0
    2d68:	00000000 	andeq	r0, r0, r0
    2d6c:	00010100 	andeq	r0, r1, r0, lsl #2
    2d70:	00000000 	andeq	r0, r0, r0
    2d74:	01000000 	mrseq	r0, (UNDEF: 0)
    2d78:	00005300 	andeq	r5, r0, r0, lsl #6
    2d7c:	00000000 	andeq	r0, r0, r0
    2d80:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2d8c:	00510001 	subseq	r0, r1, r1
	...
    2d9c:	02000000 	andeq	r0, r0, #0
    2da0:	00007d00 	andeq	r7, r0, r0, lsl #26
    2da4:	00000000 	andeq	r0, r0, r0
    2da8:	02000000 	andeq	r0, r0, #0
    2dac:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2dc4:	01000000 	mrseq	r0, (UNDEF: 0)
    2dc8:	00005000 	andeq	r5, r0, r0
    2dcc:	00000000 	andeq	r0, r0, r0
    2dd0:	00010000 	andeq	r0, r1, r0
    2dd4:	00000054 	andeq	r0, r0, r4, asr r0
    2dd8:	00000000 	andeq	r0, r0, r0
    2ddc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2de8:	00540001 	subseq	r0, r4, r1
	...
    2dfc:	53000100 	movwpl	r0, #256	; 0x100
	...
    2e0c:	00000100 	andeq	r0, r0, r0, lsl #2
    2e10:	00000000 	andeq	r0, r0, r0
    2e14:	00030000 	andeq	r0, r3, r0
    2e18:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2e1c:	00000000 	andeq	r0, r0, r0
    2e20:	01000000 	mrseq	r0, (UNDEF: 0)
    2e24:	00005300 	andeq	r5, r0, r0, lsl #6
    2e28:	00000000 	andeq	r0, r0, r0
    2e2c:	00030000 	andeq	r0, r3, r0
    2e30:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    2e3c:	00000001 	andeq	r0, r0, r1
    2e40:	00000000 	andeq	r0, r0, r0
    2e44:	53000100 	movwpl	r0, #256	; 0x100
	...
    2e50:	01000001 	tsteq	r0, r1
	...
    2e5c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2e60:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2e64:	00000000 	andeq	r0, r0, r0
    2e68:	52000100 	andpl	r0, r0, #0, 2
	...
    2e74:	00000101 	andeq	r0, r0, r1, lsl #2
    2e78:	00000000 	andeq	r0, r0, r0
    2e7c:	00010000 	andeq	r0, r1, r0
    2e80:	00000053 	andeq	r0, r0, r3, asr r0
    2e84:	00000000 	andeq	r0, r0, r0
    2e88:	00010000 	andeq	r0, r1, r0
    2e8c:	00000000 	andeq	r0, r0, r0
    2e90:	01000000 	mrseq	r0, (UNDEF: 0)
    2e94:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    2ea8:	00530001 	subseq	r0, r3, r1
	...
    2eb8:	00000001 	andeq	r0, r0, r1
    2ebc:	00000000 	andeq	r0, r0, r0
    2ec0:	72000300 	andvc	r0, r0, #0, 6
    2ec4:	00009f14 	andeq	r9, r0, r4, lsl pc
    2ec8:	00000000 	andeq	r0, r0, r0
    2ecc:	00010000 	andeq	r0, r1, r0
    2ed0:	00000053 	andeq	r0, r0, r3, asr r0
    2ed4:	00000000 	andeq	r0, r0, r0
    2ed8:	72000300 	andvc	r0, r0, #0, 6
    2edc:	00009f14 	andeq	r9, r0, r4, lsl pc
    2ee0:	00000000 	andeq	r0, r0, r0
    2ee4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2ef0:	00530001 	subseq	r0, r3, r1
    2ef4:	00000000 	andeq	r0, r0, r0
    2ef8:	01000000 	mrseq	r0, (UNDEF: 0)
    2efc:	00010000 	andeq	r0, r1, r0
    2f00:	00000000 	andeq	r0, r0, r0
    2f04:	03000000 	movweq	r0, #0
    2f08:	9f147200 	svcls	0x00147200
	...
    2f14:	00520001 	subseq	r0, r2, r1
    2f18:	00000000 	andeq	r0, r0, r0
    2f1c:	01000000 	mrseq	r0, (UNDEF: 0)
    2f20:	00000001 	andeq	r0, r0, r1
    2f24:	00000000 	andeq	r0, r0, r0
    2f28:	53000100 	movwpl	r0, #256	; 0x100
	...
    2f34:	00000100 	andeq	r0, r0, r0, lsl #2
    2f38:	00000000 	andeq	r0, r0, r0
    2f3c:	00010000 	andeq	r0, r1, r0
    2f40:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2f50:	01000000 	mrseq	r0, (UNDEF: 0)
    2f54:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2f60:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    2f6c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2f70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2f74:	00000000 	andeq	r0, r0, r0
    2f78:	53000100 	movwpl	r0, #256	; 0x100
	...
    2f84:	0c720003 	ldcleq	0, cr0, [r2], #-12
    2f88:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2f8c:	00000000 	andeq	r0, r0, r0
    2f90:	00010000 	andeq	r0, r1, r0
    2f94:	00000000 	andeq	r0, r0, r0
    2f98:	01000000 	mrseq	r0, (UNDEF: 0)
    2f9c:	00005300 	andeq	r5, r0, r0, lsl #6
    2fa0:	00000000 	andeq	r0, r0, r0
    2fa4:	00010000 	andeq	r0, r1, r0
    2fa8:	00000100 	andeq	r0, r0, r0, lsl #2
    2fac:	00000000 	andeq	r0, r0, r0
    2fb0:	00030000 	andeq	r0, r3, r0
    2fb4:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    2fb8:	00000000 	andeq	r0, r0, r0
    2fbc:	01000000 	mrseq	r0, (UNDEF: 0)
    2fc0:	00005200 	andeq	r5, r0, r0, lsl #4
    2fc4:	00000000 	andeq	r0, r0, r0
    2fc8:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    2fd4:	00530001 	subseq	r0, r3, r1
	...
    2fe0:	00000001 	andeq	r0, r0, r1
    2fe4:	00000000 	andeq	r0, r0, r0
    2fe8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2ffc:	00010000 	andeq	r0, r1, r0
    3000:	00000053 	andeq	r0, r0, r3, asr r0
	...
    300c:	00010000 	andeq	r0, r1, r0
    3010:	00000000 	andeq	r0, r0, r0
    3014:	03000000 	movweq	r0, #0
    3018:	9f147200 	svcls	0x00147200
	...
    3024:	00530001 	subseq	r0, r3, r1
    3028:	00000000 	andeq	r0, r0, r0
    302c:	03000000 	movweq	r0, #0
    3030:	9f147200 	svcls	0x00147200
	...
    303c:	00000100 	andeq	r0, r0, r0, lsl #2
    3040:	00000000 	andeq	r0, r0, r0
    3044:	00010000 	andeq	r0, r1, r0
    3048:	00000053 	andeq	r0, r0, r3, asr r0
    304c:	00000000 	andeq	r0, r0, r0
    3050:	00000100 	andeq	r0, r0, r0, lsl #2
    3054:	00000001 	andeq	r0, r0, r1
    3058:	00000000 	andeq	r0, r0, r0
    305c:	72000300 	andvc	r0, r0, #0, 6
    3060:	00009f14 	andeq	r9, r0, r4, lsl pc
    3064:	00000000 	andeq	r0, r0, r0
    3068:	00010000 	andeq	r0, r1, r0
    306c:	00000052 	andeq	r0, r0, r2, asr r0
    3070:	00000000 	andeq	r0, r0, r0
    3074:	00010100 	andeq	r0, r1, r0, lsl #2
    3078:	00000000 	andeq	r0, r0, r0
    307c:	01000000 	mrseq	r0, (UNDEF: 0)
    3080:	00005300 	andeq	r5, r0, r0, lsl #6
    3084:	00000000 	andeq	r0, r0, r0
    3088:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3094:	00510001 	subseq	r0, r1, r1
	...
    30a4:	02000000 	andeq	r0, r0, #0
    30a8:	00007d00 	andeq	r7, r0, r0, lsl #26
    30ac:	00000000 	andeq	r0, r0, r0
    30b0:	02000000 	andeq	r0, r0, #0
    30b4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    30c8:	01000000 	mrseq	r0, (UNDEF: 0)
    30cc:	00005000 	andeq	r5, r0, r0
    30d0:	00000000 	andeq	r0, r0, r0
    30d4:	00010000 	andeq	r0, r1, r0
    30d8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    30e8:	01000000 	mrseq	r0, (UNDEF: 0)
    30ec:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    30f8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3104:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3108:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    310c:	00000000 	andeq	r0, r0, r0
    3110:	53000100 	movwpl	r0, #256	; 0x100
	...
    311c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3120:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3124:	00000000 	andeq	r0, r0, r0
    3128:	00010000 	andeq	r0, r1, r0
    312c:	00000000 	andeq	r0, r0, r0
    3130:	01000000 	mrseq	r0, (UNDEF: 0)
    3134:	00005300 	andeq	r5, r0, r0, lsl #6
    3138:	00000000 	andeq	r0, r0, r0
    313c:	00010000 	andeq	r0, r1, r0
    3140:	00000100 	andeq	r0, r0, r0, lsl #2
    3144:	00000000 	andeq	r0, r0, r0
    3148:	00030000 	andeq	r0, r3, r0
    314c:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    3150:	00000000 	andeq	r0, r0, r0
    3154:	01000000 	mrseq	r0, (UNDEF: 0)
    3158:	00005200 	andeq	r5, r0, r0, lsl #4
    315c:	00000000 	andeq	r0, r0, r0
    3160:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    316c:	00530001 	subseq	r0, r3, r1
	...
    3178:	00000001 	andeq	r0, r0, r1
    317c:	00000000 	andeq	r0, r0, r0
    3180:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3194:	00010000 	andeq	r0, r1, r0
    3198:	00000053 	andeq	r0, r0, r3, asr r0
	...
    31a4:	00010000 	andeq	r0, r1, r0
    31a8:	00000000 	andeq	r0, r0, r0
    31ac:	03000000 	movweq	r0, #0
    31b0:	9f147200 	svcls	0x00147200
	...
    31bc:	00530001 	subseq	r0, r3, r1
    31c0:	00000000 	andeq	r0, r0, r0
    31c4:	03000000 	movweq	r0, #0
    31c8:	9f147200 	svcls	0x00147200
	...
    31d4:	00000100 	andeq	r0, r0, r0, lsl #2
    31d8:	00000000 	andeq	r0, r0, r0
    31dc:	00010000 	andeq	r0, r1, r0
    31e0:	00000053 	andeq	r0, r0, r3, asr r0
    31e4:	00000000 	andeq	r0, r0, r0
    31e8:	00000100 	andeq	r0, r0, r0, lsl #2
    31ec:	00000001 	andeq	r0, r0, r1
    31f0:	00000000 	andeq	r0, r0, r0
    31f4:	72000300 	andvc	r0, r0, #0, 6
    31f8:	00009f14 	andeq	r9, r0, r4, lsl pc
    31fc:	00000000 	andeq	r0, r0, r0
    3200:	00010000 	andeq	r0, r1, r0
    3204:	00000052 	andeq	r0, r0, r2, asr r0
    3208:	00000000 	andeq	r0, r0, r0
    320c:	00010100 	andeq	r0, r1, r0, lsl #2
    3210:	00000000 	andeq	r0, r0, r0
    3214:	01000000 	mrseq	r0, (UNDEF: 0)
    3218:	00005300 	andeq	r5, r0, r0, lsl #6
    321c:	00000000 	andeq	r0, r0, r0
    3220:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    322c:	00510001 	subseq	r0, r1, r1
	...
    323c:	02000000 	andeq	r0, r0, #0
    3240:	00007d00 	andeq	r7, r0, r0, lsl #26
    3244:	00000000 	andeq	r0, r0, r0
    3248:	02000000 	andeq	r0, r0, #0
    324c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3264:	01000000 	mrseq	r0, (UNDEF: 0)
    3268:	00005000 	andeq	r5, r0, r0
    326c:	00000000 	andeq	r0, r0, r0
    3270:	00010000 	andeq	r0, r1, r0
    3274:	00000054 	andeq	r0, r0, r4, asr r0
    3278:	00000000 	andeq	r0, r0, r0
    327c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3288:	00540001 	subseq	r0, r4, r1
	...
    329c:	53000100 	movwpl	r0, #256	; 0x100
	...
    32ac:	00000100 	andeq	r0, r0, r0, lsl #2
    32b0:	00000000 	andeq	r0, r0, r0
    32b4:	00030000 	andeq	r0, r3, r0
    32b8:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    32bc:	00000000 	andeq	r0, r0, r0
    32c0:	01000000 	mrseq	r0, (UNDEF: 0)
    32c4:	00005300 	andeq	r5, r0, r0, lsl #6
    32c8:	00000000 	andeq	r0, r0, r0
    32cc:	00030000 	andeq	r0, r3, r0
    32d0:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    32dc:	00000001 	andeq	r0, r0, r1
    32e0:	00000000 	andeq	r0, r0, r0
    32e4:	53000100 	movwpl	r0, #256	; 0x100
	...
    32f0:	01000001 	tsteq	r0, r1
	...
    32fc:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3300:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3304:	00000000 	andeq	r0, r0, r0
    3308:	52000100 	andpl	r0, r0, #0, 2
	...
    3314:	00000101 	andeq	r0, r0, r1, lsl #2
    3318:	00000000 	andeq	r0, r0, r0
    331c:	00010000 	andeq	r0, r1, r0
    3320:	00000053 	andeq	r0, r0, r3, asr r0
    3324:	00000000 	andeq	r0, r0, r0
    3328:	00010000 	andeq	r0, r1, r0
    332c:	00000000 	andeq	r0, r0, r0
    3330:	01000000 	mrseq	r0, (UNDEF: 0)
    3334:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3348:	00530001 	subseq	r0, r3, r1
	...
    3358:	00000001 	andeq	r0, r0, r1
    335c:	00000000 	andeq	r0, r0, r0
    3360:	72000300 	andvc	r0, r0, #0, 6
    3364:	00009f14 	andeq	r9, r0, r4, lsl pc
    3368:	00000000 	andeq	r0, r0, r0
    336c:	00010000 	andeq	r0, r1, r0
    3370:	00000053 	andeq	r0, r0, r3, asr r0
    3374:	00000000 	andeq	r0, r0, r0
    3378:	72000300 	andvc	r0, r0, #0, 6
    337c:	00009f14 	andeq	r9, r0, r4, lsl pc
    3380:	00000000 	andeq	r0, r0, r0
    3384:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3390:	00530001 	subseq	r0, r3, r1
    3394:	00000000 	andeq	r0, r0, r0
    3398:	01000000 	mrseq	r0, (UNDEF: 0)
    339c:	00010000 	andeq	r0, r1, r0
    33a0:	00000000 	andeq	r0, r0, r0
    33a4:	03000000 	movweq	r0, #0
    33a8:	9f147200 	svcls	0x00147200
	...
    33b4:	00520001 	subseq	r0, r2, r1
    33b8:	00000000 	andeq	r0, r0, r0
    33bc:	01000000 	mrseq	r0, (UNDEF: 0)
    33c0:	00000001 	andeq	r0, r0, r1
    33c4:	00000000 	andeq	r0, r0, r0
    33c8:	53000100 	movwpl	r0, #256	; 0x100
	...
    33d4:	00000100 	andeq	r0, r0, r0, lsl #2
    33d8:	00000000 	andeq	r0, r0, r0
    33dc:	00010000 	andeq	r0, r1, r0
    33e0:	00000051 	andeq	r0, r0, r1, asr r0
	...
    33f0:	01000000 	mrseq	r0, (UNDEF: 0)
    33f4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3400:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    340c:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3410:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3414:	00000000 	andeq	r0, r0, r0
    3418:	53000100 	movwpl	r0, #256	; 0x100
	...
    3424:	0c720003 	ldcleq	0, cr0, [r2], #-12
    3428:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    342c:	00000000 	andeq	r0, r0, r0
    3430:	00010000 	andeq	r0, r1, r0
    3434:	00000000 	andeq	r0, r0, r0
    3438:	01000000 	mrseq	r0, (UNDEF: 0)
    343c:	00005300 	andeq	r5, r0, r0, lsl #6
    3440:	00000000 	andeq	r0, r0, r0
    3444:	00010000 	andeq	r0, r1, r0
    3448:	00000100 	andeq	r0, r0, r0, lsl #2
    344c:	00000000 	andeq	r0, r0, r0
    3450:	00030000 	andeq	r0, r3, r0
    3454:	009f0c72 	addseq	r0, pc, r2, ror ip	; <UNPREDICTABLE>
    3458:	00000000 	andeq	r0, r0, r0
    345c:	01000000 	mrseq	r0, (UNDEF: 0)
    3460:	00005200 	andeq	r5, r0, r0, lsl #4
    3464:	00000000 	andeq	r0, r0, r0
    3468:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    3474:	00530001 	subseq	r0, r3, r1
	...
    3480:	00000001 	andeq	r0, r0, r1
    3484:	00000000 	andeq	r0, r0, r0
    3488:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    349c:	00010000 	andeq	r0, r1, r0
    34a0:	00000053 	andeq	r0, r0, r3, asr r0
	...
    34ac:	00010000 	andeq	r0, r1, r0
    34b0:	00000000 	andeq	r0, r0, r0
    34b4:	03000000 	movweq	r0, #0
    34b8:	9f147200 	svcls	0x00147200
	...
    34c4:	00530001 	subseq	r0, r3, r1
    34c8:	00000000 	andeq	r0, r0, r0
    34cc:	03000000 	movweq	r0, #0
    34d0:	9f147200 	svcls	0x00147200
	...
    34dc:	00000100 	andeq	r0, r0, r0, lsl #2
    34e0:	00000000 	andeq	r0, r0, r0
    34e4:	00010000 	andeq	r0, r1, r0
    34e8:	00000053 	andeq	r0, r0, r3, asr r0
    34ec:	00000000 	andeq	r0, r0, r0
    34f0:	00000100 	andeq	r0, r0, r0, lsl #2
    34f4:	00000001 	andeq	r0, r0, r1
    34f8:	00000000 	andeq	r0, r0, r0
    34fc:	72000300 	andvc	r0, r0, #0, 6
    3500:	00009f14 	andeq	r9, r0, r4, lsl pc
    3504:	00000000 	andeq	r0, r0, r0
    3508:	00010000 	andeq	r0, r1, r0
    350c:	00000052 	andeq	r0, r0, r2, asr r0
    3510:	00000000 	andeq	r0, r0, r0
    3514:	00010100 	andeq	r0, r1, r0, lsl #2
    3518:	00000000 	andeq	r0, r0, r0
    351c:	01000000 	mrseq	r0, (UNDEF: 0)
    3520:	00005300 	andeq	r5, r0, r0, lsl #6
    3524:	00000000 	andeq	r0, r0, r0
    3528:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3534:	00510001 	subseq	r0, r1, r1
	...
    3548:	53000100 	movwpl	r0, #256	; 0x100
	...
    3558:	00000100 	andeq	r0, r0, r0, lsl #2
    355c:	00000000 	andeq	r0, r0, r0
    3560:	00030000 	andeq	r0, r3, r0
    3564:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    3568:	00000000 	andeq	r0, r0, r0
    356c:	01000000 	mrseq	r0, (UNDEF: 0)
    3570:	00005300 	andeq	r5, r0, r0, lsl #6
    3574:	00000000 	andeq	r0, r0, r0
    3578:	00030000 	andeq	r0, r3, r0
    357c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    3588:	00000001 	andeq	r0, r0, r1
    358c:	00000000 	andeq	r0, r0, r0
    3590:	53000100 	movwpl	r0, #256	; 0x100
	...
    359c:	01000001 	tsteq	r0, r1
	...
    35a8:	14720003 	ldrbtne	r0, [r2], #-3
    35ac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    35b0:	00000000 	andeq	r0, r0, r0
    35b4:	52000100 	andpl	r0, r0, #0, 2
	...
    35c0:	00000101 	andeq	r0, r0, r1, lsl #2
    35c4:	00000000 	andeq	r0, r0, r0
    35c8:	00010000 	andeq	r0, r1, r0
    35cc:	00000053 	andeq	r0, r0, r3, asr r0
    35d0:	00000000 	andeq	r0, r0, r0
    35d4:	00010000 	andeq	r0, r1, r0
    35d8:	00000000 	andeq	r0, r0, r0
    35dc:	01000000 	mrseq	r0, (UNDEF: 0)
    35e0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    35f4:	00010000 	andeq	r0, r1, r0
    35f8:	00000050 	andeq	r0, r0, r0, asr r0
    35fc:	00000000 	andeq	r0, r0, r0
    3600:	f3000400 	vshl.u8	d0, d0, d0
    3604:	009f5001 	addseq	r5, pc, r1
	...
    3614:	02000000 	andeq	r0, r0, #0
    3618:	00007d00 	andeq	r7, r0, r0, lsl #26
    361c:	00000000 	andeq	r0, r0, r0
    3620:	02000000 	andeq	r0, r0, #0
    3624:	00087d00 	andeq	r7, r8, r0, lsl #26
    3628:	00000000 	andeq	r0, r0, r0
    362c:	02000000 	andeq	r0, r0, #0
    3630:	00107d00 	andseq	r7, r0, r0, lsl #26
    3634:	00000000 	andeq	r0, r0, r0
    3638:	02000000 	andeq	r0, r0, #0
    363c:	00087d00 	andeq	r7, r8, r0, lsl #26
    3640:	00000000 	andeq	r0, r0, r0
    3644:	02000000 	andeq	r0, r0, #0
    3648:	00107d00 	andseq	r7, r0, r0, lsl #26
    364c:	00000000 	andeq	r0, r0, r0
    3650:	02000000 	andeq	r0, r0, #0
    3654:	00007d00 	andeq	r7, r0, r0, lsl #26
    3658:	00000000 	andeq	r0, r0, r0
    365c:	02000000 	andeq	r0, r0, #0
    3660:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    3680:	01000000 	mrseq	r0, (UNDEF: 0)
    3684:	00005000 	andeq	r5, r0, r0
    3688:	00000000 	andeq	r0, r0, r0
    368c:	00010000 	andeq	r0, r1, r0
    3690:	00000054 	andeq	r0, r0, r4, asr r0
    3694:	00000000 	andeq	r0, r0, r0
    3698:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    36a4:	00540001 	subseq	r0, r4, r1
    36a8:	00000000 	andeq	r0, r0, r0
    36ac:	01000000 	mrseq	r0, (UNDEF: 0)
    36b0:	00005000 	andeq	r5, r0, r0
    36b4:	00000000 	andeq	r0, r0, r0
    36b8:	00040000 	andeq	r0, r4, r0
    36bc:	9f5001f3 	svcls	0x005001f3
	...
    36c8:	00500001 	subseq	r0, r0, r1
    36cc:	00000000 	andeq	r0, r0, r0
    36d0:	01000000 	mrseq	r0, (UNDEF: 0)
    36d4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    36f0:	00510001 	subseq	r0, r1, r1
    36f4:	00000000 	andeq	r0, r0, r0
    36f8:	04000000 	streq	r0, [r0], #-0
    36fc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3700:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3704:	00000000 	andeq	r0, r0, r0
    3708:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3714:	01f30004 	mvnseq	r0, r4
    3718:	00009f51 	andeq	r9, r0, r1, asr pc
    371c:	00000000 	andeq	r0, r0, r0
    3720:	00010000 	andeq	r0, r1, r0
    3724:	00000051 	andeq	r0, r0, r1, asr r0
	...
    373c:	01000000 	mrseq	r0, (UNDEF: 0)
    3740:	00005200 	andeq	r5, r0, r0, lsl #4
    3744:	00000000 	andeq	r0, r0, r0
    3748:	00040000 	andeq	r0, r4, r0
    374c:	9f5201f3 	svcls	0x005201f3
	...
    3758:	00520001 	subseq	r0, r2, r1
    375c:	00000000 	andeq	r0, r0, r0
    3760:	04000000 	streq	r0, [r0], #-0
    3764:	5201f300 	andpl	pc, r1, #0, 6
    3768:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    376c:	00000000 	andeq	r0, r0, r0
    3770:	52000100 	andpl	r0, r0, #0, 2
	...
    3788:	00010000 	andeq	r0, r1, r0
    378c:	00000050 	andeq	r0, r0, r0, asr r0
    3790:	00000000 	andeq	r0, r0, r0
    3794:	31000200 	mrscc	r0, R8_usr
    3798:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    379c:	00000000 	andeq	r0, r0, r0
    37a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    37b4:	00010000 	andeq	r0, r1, r0
    37b8:	00000053 	andeq	r0, r0, r3, asr r0
	...
    37c4:	00010000 	andeq	r0, r1, r0
    37c8:	00000000 	andeq	r0, r0, r0
    37cc:	03000000 	movweq	r0, #0
    37d0:	9f0c7200 	svcls	0x000c7200
	...
    37dc:	00530001 	subseq	r0, r3, r1
    37e0:	00000000 	andeq	r0, r0, r0
    37e4:	03000000 	movweq	r0, #0
    37e8:	9f0c7200 	svcls	0x000c7200
	...
    37f4:	00000100 	andeq	r0, r0, r0, lsl #2
    37f8:	00000000 	andeq	r0, r0, r0
    37fc:	00010000 	andeq	r0, r1, r0
    3800:	00000053 	andeq	r0, r0, r3, asr r0
    3804:	00000000 	andeq	r0, r0, r0
    3808:	00000100 	andeq	r0, r0, r0, lsl #2
    380c:	00000001 	andeq	r0, r0, r1
    3810:	00000000 	andeq	r0, r0, r0
    3814:	72000300 	andvc	r0, r0, #0, 6
    3818:	00009f0c 	andeq	r9, r0, ip, lsl #30
    381c:	00000000 	andeq	r0, r0, r0
    3820:	00010000 	andeq	r0, r1, r0
    3824:	00000052 	andeq	r0, r0, r2, asr r0
    3828:	00000000 	andeq	r0, r0, r0
    382c:	00010100 	andeq	r0, r1, r0, lsl #2
    3830:	00000000 	andeq	r0, r0, r0
    3834:	01000000 	mrseq	r0, (UNDEF: 0)
    3838:	00005300 	andeq	r5, r0, r0, lsl #6
    383c:	00000000 	andeq	r0, r0, r0
    3840:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    384c:	00510001 	subseq	r0, r1, r1
	...
    385c:	02000000 	andeq	r0, r0, #0
    3860:	00007d00 	andeq	r7, r0, r0, lsl #26
    3864:	00000000 	andeq	r0, r0, r0
    3868:	02000000 	andeq	r0, r0, #0
    386c:	00087d00 	andeq	r7, r8, r0, lsl #26
    3870:	00000000 	andeq	r0, r0, r0
    3874:	02000000 	andeq	r0, r0, #0
    3878:	00107d00 	andseq	r7, r0, r0, lsl #26
    387c:	00000000 	andeq	r0, r0, r0
    3880:	02000000 	andeq	r0, r0, #0
    3884:	00087d00 	andeq	r7, r8, r0, lsl #26
    3888:	00000000 	andeq	r0, r0, r0
    388c:	02000000 	andeq	r0, r0, #0
    3890:	00107d00 	andseq	r7, r0, r0, lsl #26
    3894:	00000000 	andeq	r0, r0, r0
    3898:	02000000 	andeq	r0, r0, #0
    389c:	00007d00 	andeq	r7, r0, r0, lsl #26
    38a0:	00000000 	andeq	r0, r0, r0
    38a4:	02000000 	andeq	r0, r0, #0
    38a8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    38c8:	01000000 	mrseq	r0, (UNDEF: 0)
    38cc:	00005000 	andeq	r5, r0, r0
    38d0:	00000000 	andeq	r0, r0, r0
    38d4:	00010000 	andeq	r0, r1, r0
    38d8:	00000054 	andeq	r0, r0, r4, asr r0
    38dc:	00000000 	andeq	r0, r0, r0
    38e0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    38ec:	00540001 	subseq	r0, r4, r1
    38f0:	00000000 	andeq	r0, r0, r0
    38f4:	01000000 	mrseq	r0, (UNDEF: 0)
    38f8:	00005000 	andeq	r5, r0, r0
    38fc:	00000000 	andeq	r0, r0, r0
    3900:	00040000 	andeq	r0, r4, r0
    3904:	9f5001f3 	svcls	0x005001f3
	...
    3910:	00500001 	subseq	r0, r0, r1
    3914:	00000000 	andeq	r0, r0, r0
    3918:	01000000 	mrseq	r0, (UNDEF: 0)
    391c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    3938:	00510001 	subseq	r0, r1, r1
    393c:	00000000 	andeq	r0, r0, r0
    3940:	04000000 	streq	r0, [r0], #-0
    3944:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3948:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    394c:	00000000 	andeq	r0, r0, r0
    3950:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    395c:	01f30004 	mvnseq	r0, r4
    3960:	00009f51 	andeq	r9, r0, r1, asr pc
    3964:	00000000 	andeq	r0, r0, r0
    3968:	00010000 	andeq	r0, r1, r0
    396c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3984:	01000000 	mrseq	r0, (UNDEF: 0)
    3988:	00005200 	andeq	r5, r0, r0, lsl #4
    398c:	00000000 	andeq	r0, r0, r0
    3990:	00040000 	andeq	r0, r4, r0
    3994:	9f5201f3 	svcls	0x005201f3
	...
    39a0:	00520001 	subseq	r0, r2, r1
    39a4:	00000000 	andeq	r0, r0, r0
    39a8:	04000000 	streq	r0, [r0], #-0
    39ac:	5201f300 	andpl	pc, r1, #0, 6
    39b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    39b4:	00000000 	andeq	r0, r0, r0
    39b8:	52000100 	andpl	r0, r0, #0, 2
	...
    39d0:	00010000 	andeq	r0, r1, r0
    39d4:	00000050 	andeq	r0, r0, r0, asr r0
    39d8:	00000000 	andeq	r0, r0, r0
    39dc:	31000200 	mrscc	r0, R8_usr
    39e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    39e4:	00000000 	andeq	r0, r0, r0
    39e8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    39fc:	00010000 	andeq	r0, r1, r0
    3a00:	00000053 	andeq	r0, r0, r3, asr r0
	...
    3a0c:	00010000 	andeq	r0, r1, r0
    3a10:	00000000 	andeq	r0, r0, r0
    3a14:	03000000 	movweq	r0, #0
    3a18:	9f0c7200 	svcls	0x000c7200
	...
    3a24:	00530001 	subseq	r0, r3, r1
    3a28:	00000000 	andeq	r0, r0, r0
    3a2c:	03000000 	movweq	r0, #0
    3a30:	9f0c7200 	svcls	0x000c7200
	...
    3a3c:	00000100 	andeq	r0, r0, r0, lsl #2
    3a40:	00000000 	andeq	r0, r0, r0
    3a44:	00010000 	andeq	r0, r1, r0
    3a48:	00000053 	andeq	r0, r0, r3, asr r0
    3a4c:	00000000 	andeq	r0, r0, r0
    3a50:	00000100 	andeq	r0, r0, r0, lsl #2
    3a54:	00000001 	andeq	r0, r0, r1
    3a58:	00000000 	andeq	r0, r0, r0
    3a5c:	72000300 	andvc	r0, r0, #0, 6
    3a60:	00009f0c 	andeq	r9, r0, ip, lsl #30
    3a64:	00000000 	andeq	r0, r0, r0
    3a68:	00010000 	andeq	r0, r1, r0
    3a6c:	00000052 	andeq	r0, r0, r2, asr r0
    3a70:	00000000 	andeq	r0, r0, r0
    3a74:	00010100 	andeq	r0, r1, r0, lsl #2
    3a78:	00000000 	andeq	r0, r0, r0
    3a7c:	01000000 	mrseq	r0, (UNDEF: 0)
    3a80:	00005300 	andeq	r5, r0, r0, lsl #6
    3a84:	00000000 	andeq	r0, r0, r0
    3a88:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3a94:	00510001 	subseq	r0, r1, r1
	...
    3aa4:	02000000 	andeq	r0, r0, #0
    3aa8:	00007d00 	andeq	r7, r0, r0, lsl #26
    3aac:	00000000 	andeq	r0, r0, r0
    3ab0:	02000000 	andeq	r0, r0, #0
    3ab4:	001c7d00 	andseq	r7, ip, r0, lsl #26
    3ab8:	00000000 	andeq	r0, r0, r0
    3abc:	02000000 	andeq	r0, r0, #0
    3ac0:	00287d00 	eoreq	r7, r8, r0, lsl #26
    3ac4:	00000000 	andeq	r0, r0, r0
    3ac8:	02000000 	andeq	r0, r0, #0
    3acc:	001c7d00 	andseq	r7, ip, r0, lsl #26
    3ad0:	00000000 	andeq	r0, r0, r0
    3ad4:	02000000 	andeq	r0, r0, #0
    3ad8:	00287d00 	eoreq	r7, r8, r0, lsl #26
	...
    3af8:	01000000 	mrseq	r0, (UNDEF: 0)
    3afc:	00005000 	andeq	r5, r0, r0
    3b00:	00000000 	andeq	r0, r0, r0
    3b04:	00010000 	andeq	r0, r1, r0
    3b08:	00000054 	andeq	r0, r0, r4, asr r0
    3b0c:	00000000 	andeq	r0, r0, r0
    3b10:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3b1c:	00540001 	subseq	r0, r4, r1
    3b20:	00000000 	andeq	r0, r0, r0
    3b24:	01000000 	mrseq	r0, (UNDEF: 0)
    3b28:	00005000 	andeq	r5, r0, r0
    3b2c:	00000000 	andeq	r0, r0, r0
    3b30:	00040000 	andeq	r0, r4, r0
    3b34:	9f5001f3 	svcls	0x005001f3
	...
    3b40:	00500001 	subseq	r0, r0, r1
    3b44:	00000000 	andeq	r0, r0, r0
    3b48:	01000000 	mrseq	r0, (UNDEF: 0)
    3b4c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    3b70:	00510001 	subseq	r0, r1, r1
    3b74:	00000000 	andeq	r0, r0, r0
    3b78:	01000000 	mrseq	r0, (UNDEF: 0)
    3b7c:	00005500 	andeq	r5, r0, r0, lsl #10
    3b80:	00000000 	andeq	r0, r0, r0
    3b84:	00040000 	andeq	r0, r4, r0
    3b88:	9f5101f3 	svcls	0x005101f3
	...
    3b94:	00550001 	subseq	r0, r5, r1
    3b98:	00000000 	andeq	r0, r0, r0
    3b9c:	01000000 	mrseq	r0, (UNDEF: 0)
    3ba0:	00005900 	andeq	r5, r0, r0, lsl #18
    3ba4:	00000000 	andeq	r0, r0, r0
    3ba8:	00040000 	andeq	r0, r4, r0
    3bac:	9f5101f3 	svcls	0x005101f3
	...
    3bb8:	00510001 	subseq	r0, r1, r1
    3bbc:	00000000 	andeq	r0, r0, r0
    3bc0:	04000000 	streq	r0, [r0], #-0
    3bc4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    3bc8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3bcc:	00000000 	andeq	r0, r0, r0
    3bd0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    3bec:	00010000 	andeq	r0, r1, r0
    3bf0:	00000052 	andeq	r0, r0, r2, asr r0
    3bf4:	00000000 	andeq	r0, r0, r0
    3bf8:	f3000400 	vshl.u8	d0, d0, d0
    3bfc:	009f5201 	addseq	r5, pc, r1, lsl #4
    3c00:	00000000 	andeq	r0, r0, r0
    3c04:	01000000 	mrseq	r0, (UNDEF: 0)
    3c08:	00005200 	andeq	r5, r0, r0, lsl #4
    3c0c:	00000000 	andeq	r0, r0, r0
    3c10:	00040000 	andeq	r0, r4, r0
    3c14:	9f5201f3 	svcls	0x005201f3
	...
    3c20:	00520001 	subseq	r0, r2, r1
	...
    3c34:	01000000 	mrseq	r0, (UNDEF: 0)
    3c38:	00005300 	andeq	r5, r0, r0, lsl #6
    3c3c:	00000000 	andeq	r0, r0, r0
    3c40:	00010000 	andeq	r0, r1, r0
    3c44:	00000056 	andeq	r0, r0, r6, asr r0
	...
    3c58:	91000200 	mrsls	r0, R8_usr
	...
    3c64:	91000200 	mrsls	r0, R8_usr
	...
    3c7c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    3c88:	00550001 	subseq	r0, r5, r1
	...
    3c98:	00000101 	andeq	r0, r0, r1, lsl #2
    3c9c:	00000000 	andeq	r0, r0, r0
    3ca0:	01000000 	mrseq	r0, (UNDEF: 0)
    3ca4:	00005900 	andeq	r5, r0, r0, lsl #18
    3ca8:	00000000 	andeq	r0, r0, r0
    3cac:	00010000 	andeq	r0, r1, r0
    3cb0:	00000059 	andeq	r0, r0, r9, asr r0
    3cb4:	00000000 	andeq	r0, r0, r0
    3cb8:	79000300 	stmdbvc	r0, {r8, r9}
    3cbc:	00009f7e 	andeq	r9, r0, lr, ror pc
    3cc0:	00000000 	andeq	r0, r0, r0
    3cc4:	00010000 	andeq	r0, r1, r0
    3cc8:	00000059 	andeq	r0, r0, r9, asr r0
	...
    3cdc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3ce8:	00580001 	subseq	r0, r8, r1
	...
    3cf8:	02000000 	andeq	r0, r0, #0
    3cfc:	00007d00 	andeq	r7, r0, r0, lsl #26
    3d00:	00000000 	andeq	r0, r0, r0
    3d04:	02000000 	andeq	r0, r0, #0
    3d08:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    3d20:	01000000 	mrseq	r0, (UNDEF: 0)
    3d24:	00005000 	andeq	r5, r0, r0
    3d28:	00000000 	andeq	r0, r0, r0
    3d2c:	00010000 	andeq	r0, r1, r0
    3d30:	00000054 	andeq	r0, r0, r4, asr r0
    3d34:	00000000 	andeq	r0, r0, r0
    3d38:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3d44:	00540001 	subseq	r0, r4, r1
    3d48:	00000000 	andeq	r0, r0, r0
    3d4c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3d60:	30000200 	andcc	r0, r0, r0, lsl #4
    3d64:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3d68:	00000000 	andeq	r0, r0, r0
    3d6c:	72000b00 	andvc	r0, r0, #0, 22
    3d70:	1a800800 	bne	fe005d78 <_estack+0xddffc3d8>
    3d74:	ff082e30 			; <UNDEFINED> instruction: 0xff082e30
    3d78:	00009f1a 	andeq	r9, r0, sl, lsl pc
    3d7c:	00000000 	andeq	r0, r0, r0
    3d80:	00080000 	andeq	r0, r8, r0
    3d84:	2e300072 	mrccs	0, 1, r0, cr0, cr2, {3}
    3d88:	9f1aff08 	svcls	0x001aff08
	...
    3d94:	0072000b 	rsbseq	r0, r2, fp
    3d98:	301a8008 	andscc	r8, sl, r8
    3d9c:	1aff082e 	bne	fffc5e5c <_estack+0xdffbc4bc>
    3da0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3da4:	00000000 	andeq	r0, r0, r0
    3da8:	72000800 	andvc	r0, r0, #0, 16
    3dac:	082e3000 	stmdaeq	lr!, {ip, sp}
    3db0:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
	...
    3dc4:	53000100 	movwpl	r0, #256	; 0x100
	...
    3dd4:	00000100 	andeq	r0, r0, r0, lsl #2
    3dd8:	00000000 	andeq	r0, r0, r0
    3ddc:	00030000 	andeq	r0, r3, r0
    3de0:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    3de4:	00000000 	andeq	r0, r0, r0
    3de8:	01000000 	mrseq	r0, (UNDEF: 0)
    3dec:	00005300 	andeq	r5, r0, r0, lsl #6
    3df0:	00000000 	andeq	r0, r0, r0
    3df4:	00030000 	andeq	r0, r3, r0
    3df8:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    3e04:	00000001 	andeq	r0, r0, r1
    3e08:	00000000 	andeq	r0, r0, r0
    3e0c:	53000100 	movwpl	r0, #256	; 0x100
	...
    3e18:	01000001 	tsteq	r0, r1
	...
    3e24:	14720003 	ldrbtne	r0, [r2], #-3
    3e28:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3e2c:	00000000 	andeq	r0, r0, r0
    3e30:	52000100 	andpl	r0, r0, #0, 2
	...
    3e3c:	00000101 	andeq	r0, r0, r1, lsl #2
    3e40:	00000000 	andeq	r0, r0, r0
    3e44:	00010000 	andeq	r0, r1, r0
    3e48:	00000053 	andeq	r0, r0, r3, asr r0
    3e4c:	00000000 	andeq	r0, r0, r0
    3e50:	00010000 	andeq	r0, r1, r0
    3e54:	00000000 	andeq	r0, r0, r0
    3e58:	01000000 	mrseq	r0, (UNDEF: 0)
    3e5c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3e70:	00530001 	subseq	r0, r3, r1
	...
    3e80:	00000001 	andeq	r0, r0, r1
    3e84:	00000000 	andeq	r0, r0, r0
    3e88:	72000300 	andvc	r0, r0, #0, 6
    3e8c:	00009f14 	andeq	r9, r0, r4, lsl pc
    3e90:	00000000 	andeq	r0, r0, r0
    3e94:	00010000 	andeq	r0, r1, r0
    3e98:	00000053 	andeq	r0, r0, r3, asr r0
    3e9c:	00000000 	andeq	r0, r0, r0
    3ea0:	72000300 	andvc	r0, r0, #0, 6
    3ea4:	00009f14 	andeq	r9, r0, r4, lsl pc
    3ea8:	00000000 	andeq	r0, r0, r0
    3eac:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    3eb8:	00530001 	subseq	r0, r3, r1
    3ebc:	00000000 	andeq	r0, r0, r0
    3ec0:	01000000 	mrseq	r0, (UNDEF: 0)
    3ec4:	00010000 	andeq	r0, r1, r0
    3ec8:	00000000 	andeq	r0, r0, r0
    3ecc:	03000000 	movweq	r0, #0
    3ed0:	9f147200 	svcls	0x00147200
	...
    3edc:	00520001 	subseq	r0, r2, r1
    3ee0:	00000000 	andeq	r0, r0, r0
    3ee4:	01000000 	mrseq	r0, (UNDEF: 0)
    3ee8:	00000001 	andeq	r0, r0, r1
    3eec:	00000000 	andeq	r0, r0, r0
    3ef0:	53000100 	movwpl	r0, #256	; 0x100
	...
    3efc:	00000100 	andeq	r0, r0, r0, lsl #2
    3f00:	00000000 	andeq	r0, r0, r0
    3f04:	00010000 	andeq	r0, r1, r0
    3f08:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3f18:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    3f24:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    3f28:	00000008 	andeq	r0, r0, r8
    3f2c:	00000000 	andeq	r0, r0, r0
    3f30:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    3f4c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    3f58:	01f30004 	mvnseq	r0, r4
    3f5c:	00009f50 	andeq	r9, r0, r0, asr pc
    3f60:	00000000 	andeq	r0, r0, r0
    3f64:	00010000 	andeq	r0, r1, r0
    3f68:	00000050 	andeq	r0, r0, r0, asr r0
    3f6c:	00000000 	andeq	r0, r0, r0
    3f70:	f3000400 	vshl.u8	d0, d0, d0
    3f74:	009f5001 	addseq	r5, pc, r1
	...
    3f88:	53000100 	movwpl	r0, #256	; 0x100
	...
    3f98:	00000100 	andeq	r0, r0, r0, lsl #2
    3f9c:	00000000 	andeq	r0, r0, r0
    3fa0:	00030000 	andeq	r0, r3, r0
    3fa4:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    3fa8:	00000000 	andeq	r0, r0, r0
    3fac:	01000000 	mrseq	r0, (UNDEF: 0)
    3fb0:	00005300 	andeq	r5, r0, r0, lsl #6
    3fb4:	00000000 	andeq	r0, r0, r0
    3fb8:	00030000 	andeq	r0, r3, r0
    3fbc:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    3fc8:	00000001 	andeq	r0, r0, r1
    3fcc:	00000000 	andeq	r0, r0, r0
    3fd0:	53000100 	movwpl	r0, #256	; 0x100
	...
    3fdc:	01000001 	tsteq	r0, r1
	...
    3fe8:	14720003 	ldrbtne	r0, [r2], #-3
    3fec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    3ff0:	00000000 	andeq	r0, r0, r0
    3ff4:	52000100 	andpl	r0, r0, #0, 2
	...
    4000:	00000101 	andeq	r0, r0, r1, lsl #2
    4004:	00000000 	andeq	r0, r0, r0
    4008:	00010000 	andeq	r0, r1, r0
    400c:	00000053 	andeq	r0, r0, r3, asr r0
    4010:	00000000 	andeq	r0, r0, r0
    4014:	00010000 	andeq	r0, r1, r0
    4018:	00000000 	andeq	r0, r0, r0
    401c:	01000000 	mrseq	r0, (UNDEF: 0)
    4020:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    4034:	00530001 	subseq	r0, r3, r1
	...
    4044:	00000001 	andeq	r0, r0, r1
    4048:	00000000 	andeq	r0, r0, r0
    404c:	72000300 	andvc	r0, r0, #0, 6
    4050:	00009f0c 	andeq	r9, r0, ip, lsl #30
    4054:	00000000 	andeq	r0, r0, r0
    4058:	00010000 	andeq	r0, r1, r0
    405c:	00000053 	andeq	r0, r0, r3, asr r0
    4060:	00000000 	andeq	r0, r0, r0
    4064:	72000300 	andvc	r0, r0, #0, 6
    4068:	00009f0c 	andeq	r9, r0, ip, lsl #30
    406c:	00000000 	andeq	r0, r0, r0
    4070:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    407c:	00530001 	subseq	r0, r3, r1
    4080:	00000000 	andeq	r0, r0, r0
    4084:	01000000 	mrseq	r0, (UNDEF: 0)
    4088:	00010000 	andeq	r0, r1, r0
    408c:	00000000 	andeq	r0, r0, r0
    4090:	03000000 	movweq	r0, #0
    4094:	9f0c7200 	svcls	0x000c7200
	...
    40a0:	00520001 	subseq	r0, r2, r1
    40a4:	00000000 	andeq	r0, r0, r0
    40a8:	01000000 	mrseq	r0, (UNDEF: 0)
    40ac:	00000001 	andeq	r0, r0, r1
    40b0:	00000000 	andeq	r0, r0, r0
    40b4:	53000100 	movwpl	r0, #256	; 0x100
	...
    40c0:	00000100 	andeq	r0, r0, r0, lsl #2
    40c4:	00000000 	andeq	r0, r0, r0
    40c8:	00010000 	andeq	r0, r1, r0
    40cc:	00000051 	andeq	r0, r0, r1, asr r0
	...
    40dc:	01000000 	mrseq	r0, (UNDEF: 0)
    40e0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    40ec:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    40f8:	14720003 	ldrbtne	r0, [r2], #-3
    40fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4100:	00000000 	andeq	r0, r0, r0
    4104:	53000100 	movwpl	r0, #256	; 0x100
	...
    4110:	14720003 	ldrbtne	r0, [r2], #-3
    4114:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4118:	00000000 	andeq	r0, r0, r0
    411c:	00010000 	andeq	r0, r1, r0
    4120:	00000000 	andeq	r0, r0, r0
    4124:	01000000 	mrseq	r0, (UNDEF: 0)
    4128:	00005300 	andeq	r5, r0, r0, lsl #6
    412c:	00000000 	andeq	r0, r0, r0
    4130:	00010000 	andeq	r0, r1, r0
    4134:	00000100 	andeq	r0, r0, r0, lsl #2
    4138:	00000000 	andeq	r0, r0, r0
    413c:	00030000 	andeq	r0, r3, r0
    4140:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    4144:	00000000 	andeq	r0, r0, r0
    4148:	01000000 	mrseq	r0, (UNDEF: 0)
    414c:	00005200 	andeq	r5, r0, r0, lsl #4
    4150:	00000000 	andeq	r0, r0, r0
    4154:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    4160:	00530001 	subseq	r0, r3, r1
	...
    416c:	00000001 	andeq	r0, r0, r1
    4170:	00000000 	andeq	r0, r0, r0
    4174:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4188:	00010000 	andeq	r0, r1, r0
    418c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    4198:	00010000 	andeq	r0, r1, r0
    419c:	00000000 	andeq	r0, r0, r0
    41a0:	03000000 	movweq	r0, #0
    41a4:	9f147200 	svcls	0x00147200
	...
    41b0:	00530001 	subseq	r0, r3, r1
    41b4:	00000000 	andeq	r0, r0, r0
    41b8:	03000000 	movweq	r0, #0
    41bc:	9f147200 	svcls	0x00147200
	...
    41c8:	00000100 	andeq	r0, r0, r0, lsl #2
    41cc:	00000000 	andeq	r0, r0, r0
    41d0:	00010000 	andeq	r0, r1, r0
    41d4:	00000053 	andeq	r0, r0, r3, asr r0
    41d8:	00000000 	andeq	r0, r0, r0
    41dc:	00000100 	andeq	r0, r0, r0, lsl #2
    41e0:	00000001 	andeq	r0, r0, r1
    41e4:	00000000 	andeq	r0, r0, r0
    41e8:	72000300 	andvc	r0, r0, #0, 6
    41ec:	00009f14 	andeq	r9, r0, r4, lsl pc
    41f0:	00000000 	andeq	r0, r0, r0
    41f4:	00010000 	andeq	r0, r1, r0
    41f8:	00000052 	andeq	r0, r0, r2, asr r0
    41fc:	00000000 	andeq	r0, r0, r0
    4200:	00010100 	andeq	r0, r1, r0, lsl #2
    4204:	00000000 	andeq	r0, r0, r0
    4208:	01000000 	mrseq	r0, (UNDEF: 0)
    420c:	00005300 	andeq	r5, r0, r0, lsl #6
    4210:	00000000 	andeq	r0, r0, r0
    4214:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4220:	00510001 	subseq	r0, r1, r1
	...
    4238:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4244:	01f30004 	mvnseq	r0, r4
    4248:	00009f50 	andeq	r9, r0, r0, asr pc
    424c:	00000000 	andeq	r0, r0, r0
    4250:	00010000 	andeq	r0, r1, r0
    4254:	00000050 	andeq	r0, r0, r0, asr r0
    4258:	00000000 	andeq	r0, r0, r0
    425c:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    426c:	02000000 	andeq	r0, r0, #0
    4270:	009f3000 	addseq	r3, pc, r0
    4274:	00000000 	andeq	r0, r0, r0
    4278:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    427c:	30007200 	andcc	r7, r0, r0, lsl #4
    4280:	1aff082e 	bne	fffc6340 <_estack+0xdffbc9a0>
    4284:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4288:	00000000 	andeq	r0, r0, r0
    428c:	72000800 	andvc	r0, r0, #0, 16
    4290:	082e3000 	stmdaeq	lr!, {ip, sp}
    4294:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
    4298:	00000000 	andeq	r0, r0, r0
    429c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    42a0:	30007200 	andcc	r7, r0, r0, lsl #4
    42a4:	1aff082e 	bne	fffc6364 <_estack+0xdffbc9c4>
    42a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    42ac:	00000000 	andeq	r0, r0, r0
    42b0:	72000800 	andvc	r0, r0, #0, 16
    42b4:	082e3000 	stmdaeq	lr!, {ip, sp}
    42b8:	009f1aff 			; <UNDEFINED> instruction: 0x009f1aff
	...
    42cc:	53000100 	movwpl	r0, #256	; 0x100
	...
    42dc:	00000100 	andeq	r0, r0, r0, lsl #2
    42e0:	00000000 	andeq	r0, r0, r0
    42e4:	00030000 	andeq	r0, r3, r0
    42e8:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    42ec:	00000000 	andeq	r0, r0, r0
    42f0:	01000000 	mrseq	r0, (UNDEF: 0)
    42f4:	00005300 	andeq	r5, r0, r0, lsl #6
    42f8:	00000000 	andeq	r0, r0, r0
    42fc:	00030000 	andeq	r0, r3, r0
    4300:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    430c:	00000001 	andeq	r0, r0, r1
    4310:	00000000 	andeq	r0, r0, r0
    4314:	53000100 	movwpl	r0, #256	; 0x100
	...
    4320:	01000001 	tsteq	r0, r1
	...
    432c:	14720003 	ldrbtne	r0, [r2], #-3
    4330:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4334:	00000000 	andeq	r0, r0, r0
    4338:	52000100 	andpl	r0, r0, #0, 2
	...
    4344:	00000101 	andeq	r0, r0, r1, lsl #2
    4348:	00000000 	andeq	r0, r0, r0
    434c:	00010000 	andeq	r0, r1, r0
    4350:	00000053 	andeq	r0, r0, r3, asr r0
    4354:	00000000 	andeq	r0, r0, r0
    4358:	00010000 	andeq	r0, r1, r0
    435c:	00000000 	andeq	r0, r0, r0
    4360:	01000000 	mrseq	r0, (UNDEF: 0)
    4364:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    4378:	00530001 	subseq	r0, r3, r1
	...
    4388:	00000001 	andeq	r0, r0, r1
    438c:	00000000 	andeq	r0, r0, r0
    4390:	72000300 	andvc	r0, r0, #0, 6
    4394:	00009f0c 	andeq	r9, r0, ip, lsl #30
    4398:	00000000 	andeq	r0, r0, r0
    439c:	00010000 	andeq	r0, r1, r0
    43a0:	00000053 	andeq	r0, r0, r3, asr r0
    43a4:	00000000 	andeq	r0, r0, r0
    43a8:	72000300 	andvc	r0, r0, #0, 6
    43ac:	00009f0c 	andeq	r9, r0, ip, lsl #30
    43b0:	00000000 	andeq	r0, r0, r0
    43b4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    43c0:	00530001 	subseq	r0, r3, r1
    43c4:	00000000 	andeq	r0, r0, r0
    43c8:	01000000 	mrseq	r0, (UNDEF: 0)
    43cc:	00010000 	andeq	r0, r1, r0
    43d0:	00000000 	andeq	r0, r0, r0
    43d4:	03000000 	movweq	r0, #0
    43d8:	9f0c7200 	svcls	0x000c7200
	...
    43e4:	00520001 	subseq	r0, r2, r1
    43e8:	00000000 	andeq	r0, r0, r0
    43ec:	01000000 	mrseq	r0, (UNDEF: 0)
    43f0:	00000001 	andeq	r0, r0, r1
    43f4:	00000000 	andeq	r0, r0, r0
    43f8:	53000100 	movwpl	r0, #256	; 0x100
	...
    4404:	00000100 	andeq	r0, r0, r0, lsl #2
    4408:	00000000 	andeq	r0, r0, r0
    440c:	00010000 	andeq	r0, r1, r0
    4410:	00000051 	andeq	r0, r0, r1, asr r0
	...
    4420:	01000000 	mrseq	r0, (UNDEF: 0)
    4424:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    4430:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    443c:	14720003 	ldrbtne	r0, [r2], #-3
    4440:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4444:	00000000 	andeq	r0, r0, r0
    4448:	53000100 	movwpl	r0, #256	; 0x100
	...
    4454:	14720003 	ldrbtne	r0, [r2], #-3
    4458:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    445c:	00000000 	andeq	r0, r0, r0
    4460:	00010000 	andeq	r0, r1, r0
    4464:	00000000 	andeq	r0, r0, r0
    4468:	01000000 	mrseq	r0, (UNDEF: 0)
    446c:	00005300 	andeq	r5, r0, r0, lsl #6
    4470:	00000000 	andeq	r0, r0, r0
    4474:	00010000 	andeq	r0, r1, r0
    4478:	00000100 	andeq	r0, r0, r0, lsl #2
    447c:	00000000 	andeq	r0, r0, r0
    4480:	00030000 	andeq	r0, r3, r0
    4484:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    4488:	00000000 	andeq	r0, r0, r0
    448c:	01000000 	mrseq	r0, (UNDEF: 0)
    4490:	00005200 	andeq	r5, r0, r0, lsl #4
    4494:	00000000 	andeq	r0, r0, r0
    4498:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    44a4:	00530001 	subseq	r0, r3, r1
	...
    44b0:	00000001 	andeq	r0, r0, r1
    44b4:	00000000 	andeq	r0, r0, r0
    44b8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    44cc:	00010000 	andeq	r0, r1, r0
    44d0:	00000053 	andeq	r0, r0, r3, asr r0
	...
    44dc:	00010000 	andeq	r0, r1, r0
    44e0:	00000000 	andeq	r0, r0, r0
    44e4:	03000000 	movweq	r0, #0
    44e8:	9f147200 	svcls	0x00147200
	...
    44f4:	00530001 	subseq	r0, r3, r1
    44f8:	00000000 	andeq	r0, r0, r0
    44fc:	03000000 	movweq	r0, #0
    4500:	9f147200 	svcls	0x00147200
	...
    450c:	00000100 	andeq	r0, r0, r0, lsl #2
    4510:	00000000 	andeq	r0, r0, r0
    4514:	00010000 	andeq	r0, r1, r0
    4518:	00000053 	andeq	r0, r0, r3, asr r0
    451c:	00000000 	andeq	r0, r0, r0
    4520:	00000100 	andeq	r0, r0, r0, lsl #2
    4524:	00000001 	andeq	r0, r0, r1
    4528:	00000000 	andeq	r0, r0, r0
    452c:	72000300 	andvc	r0, r0, #0, 6
    4530:	00009f14 	andeq	r9, r0, r4, lsl pc
    4534:	00000000 	andeq	r0, r0, r0
    4538:	00010000 	andeq	r0, r1, r0
    453c:	00000052 	andeq	r0, r0, r2, asr r0
    4540:	00000000 	andeq	r0, r0, r0
    4544:	00010100 	andeq	r0, r1, r0, lsl #2
    4548:	00000000 	andeq	r0, r0, r0
    454c:	01000000 	mrseq	r0, (UNDEF: 0)
    4550:	00005300 	andeq	r5, r0, r0, lsl #6
    4554:	00000000 	andeq	r0, r0, r0
    4558:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    4564:	00510001 	subseq	r0, r1, r1
	...
    4574:	02000000 	andeq	r0, r0, #0
    4578:	00007d00 	andeq	r7, r0, r0, lsl #26
    457c:	00000000 	andeq	r0, r0, r0
    4580:	02000000 	andeq	r0, r0, #0
    4584:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    45a4:	01000000 	mrseq	r0, (UNDEF: 0)
    45a8:	00005000 	andeq	r5, r0, r0
    45ac:	00000000 	andeq	r0, r0, r0
    45b0:	00040000 	andeq	r0, r4, r0
    45b4:	9f5001f3 	svcls	0x005001f3
	...
    45c0:	00500001 	subseq	r0, r0, r1
    45c4:	00000000 	andeq	r0, r0, r0
    45c8:	04000000 	streq	r0, [r0], #-0
    45cc:	5001f300 	andpl	pc, r1, r0, lsl #6
    45d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    45d4:	00000000 	andeq	r0, r0, r0
    45d8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    45e4:	01f30004 	mvnseq	r0, r4
    45e8:	00009f50 	andeq	r9, r0, r0, asr pc
    45ec:	00000000 	andeq	r0, r0, r0
    45f0:	00010000 	andeq	r0, r1, r0
    45f4:	00000050 	andeq	r0, r0, r0, asr r0
    45f8:	00000000 	andeq	r0, r0, r0
    45fc:	f3000400 	vshl.u8	d0, d0, d0
    4600:	009f5001 	addseq	r5, pc, r1
	...
    461c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4628:	01f30004 	mvnseq	r0, r4
    462c:	00009f51 	andeq	r9, r0, r1, asr pc
    4630:	00000000 	andeq	r0, r0, r0
    4634:	00010000 	andeq	r0, r1, r0
    4638:	00000051 	andeq	r0, r0, r1, asr r0
    463c:	00000000 	andeq	r0, r0, r0
    4640:	f3000400 	vshl.u8	d0, d0, d0
    4644:	009f5101 	addseq	r5, pc, r1, lsl #2
    4648:	00000000 	andeq	r0, r0, r0
    464c:	01000000 	mrseq	r0, (UNDEF: 0)
    4650:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    466c:	00520001 	subseq	r0, r2, r1
    4670:	00000000 	andeq	r0, r0, r0
    4674:	04000000 	streq	r0, [r0], #-0
    4678:	5201f300 	andpl	pc, r1, #0, 6
    467c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4680:	00000000 	andeq	r0, r0, r0
    4684:	52000100 	andpl	r0, r0, #0, 2
	...
    4690:	01f30004 	mvnseq	r0, r4
    4694:	00009f52 	andeq	r9, r0, r2, asr pc
    4698:	00000000 	andeq	r0, r0, r0
    469c:	00010000 	andeq	r0, r1, r0
    46a0:	00000052 	andeq	r0, r0, r2, asr r0
	...
    46b0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    46bc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    46c0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    46e0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    46ec:	01f30004 	mvnseq	r0, r4
    46f0:	00009f50 	andeq	r9, r0, r0, asr pc
    46f4:	00000000 	andeq	r0, r0, r0
    46f8:	00010000 	andeq	r0, r1, r0
    46fc:	00000050 	andeq	r0, r0, r0, asr r0
    4700:	00000000 	andeq	r0, r0, r0
    4704:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4710:	00500001 	subseq	r0, r0, r1
    4714:	00000000 	andeq	r0, r0, r0
    4718:	04000000 	streq	r0, [r0], #-0
    471c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4720:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4724:	00000000 	andeq	r0, r0, r0
    4728:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4734:	00540001 	subseq	r0, r4, r1
	...
    4750:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    475c:	01f30004 	mvnseq	r0, r4
    4760:	00009f51 	andeq	r9, r0, r1, asr pc
    4764:	00000000 	andeq	r0, r0, r0
    4768:	00010000 	andeq	r0, r1, r0
    476c:	00000051 	andeq	r0, r0, r1, asr r0
    4770:	00000000 	andeq	r0, r0, r0
    4774:	f3000400 	vshl.u8	d0, d0, d0
    4778:	009f5101 	addseq	r5, pc, r1, lsl #2
    477c:	00000000 	andeq	r0, r0, r0
    4780:	01000000 	mrseq	r0, (UNDEF: 0)
    4784:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    47a0:	00520001 	subseq	r0, r2, r1
    47a4:	00000000 	andeq	r0, r0, r0
    47a8:	04000000 	streq	r0, [r0], #-0
    47ac:	5201f300 	andpl	pc, r1, #0, 6
    47b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    47b4:	00000000 	andeq	r0, r0, r0
    47b8:	52000100 	andpl	r0, r0, #0, 2
	...
    47c4:	01f30004 	mvnseq	r0, r4
    47c8:	00009f52 	andeq	r9, r0, r2, asr pc
    47cc:	00000000 	andeq	r0, r0, r0
    47d0:	00010000 	andeq	r0, r1, r0
    47d4:	00000052 	andeq	r0, r0, r2, asr r0
    47d8:	00000000 	andeq	r0, r0, r0
    47dc:	00000100 	andeq	r0, r0, r0, lsl #2
    47e0:	00000000 	andeq	r0, r0, r0
    47e4:	06000000 	streq	r0, [r0], -r0
    47e8:	6d3bf200 	lfmvs	f7, 1, [fp, #-0]
	...
    4800:	53000100 	movwpl	r0, #256	; 0x100
	...
    4810:	00000100 	andeq	r0, r0, r0, lsl #2
    4814:	00000000 	andeq	r0, r0, r0
    4818:	00030000 	andeq	r0, r3, r0
    481c:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
    4820:	00000000 	andeq	r0, r0, r0
    4824:	01000000 	mrseq	r0, (UNDEF: 0)
    4828:	00005300 	andeq	r5, r0, r0, lsl #6
    482c:	00000000 	andeq	r0, r0, r0
    4830:	00030000 	andeq	r0, r3, r0
    4834:	009f1472 	addseq	r1, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    4840:	00000001 	andeq	r0, r0, r1
    4844:	00000000 	andeq	r0, r0, r0
    4848:	53000100 	movwpl	r0, #256	; 0x100
	...
    4854:	01000001 	tsteq	r0, r1
	...
    4860:	14720003 	ldrbtne	r0, [r2], #-3
    4864:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4868:	00000000 	andeq	r0, r0, r0
    486c:	52000100 	andpl	r0, r0, #0, 2
	...
    4878:	00000101 	andeq	r0, r0, r1, lsl #2
    487c:	00000000 	andeq	r0, r0, r0
    4880:	00010000 	andeq	r0, r1, r0
    4884:	00000053 	andeq	r0, r0, r3, asr r0
    4888:	00000000 	andeq	r0, r0, r0
    488c:	00010000 	andeq	r0, r1, r0
    4890:	00000000 	andeq	r0, r0, r0
    4894:	01000000 	mrseq	r0, (UNDEF: 0)
    4898:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    48a8:	00020000 	andeq	r0, r2, r0
    48ac:	0000007d 	andeq	r0, r0, sp, ror r0
    48b0:	00000000 	andeq	r0, r0, r0
    48b4:	00020000 	andeq	r0, r2, r0
    48b8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    48d8:	00010000 	andeq	r0, r1, r0
    48dc:	00000050 	andeq	r0, r0, r0, asr r0
    48e0:	00000000 	andeq	r0, r0, r0
    48e4:	f3000400 	vshl.u8	d0, d0, d0
    48e8:	009f5001 	addseq	r5, pc, r1
    48ec:	00000000 	andeq	r0, r0, r0
    48f0:	01000000 	mrseq	r0, (UNDEF: 0)
    48f4:	00005000 	andeq	r5, r0, r0
    48f8:	00000000 	andeq	r0, r0, r0
    48fc:	00040000 	andeq	r0, r4, r0
    4900:	9f5001f3 	svcls	0x005001f3
	...
    490c:	00500001 	subseq	r0, r0, r1
    4910:	00000000 	andeq	r0, r0, r0
    4914:	04000000 	streq	r0, [r0], #-0
    4918:	5001f300 	andpl	pc, r1, r0, lsl #6
    491c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4920:	00000000 	andeq	r0, r0, r0
    4924:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4930:	01f30004 	mvnseq	r0, r4
    4934:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4950:	00510001 	subseq	r0, r1, r1
    4954:	00000000 	andeq	r0, r0, r0
    4958:	04000000 	streq	r0, [r0], #-0
    495c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4960:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4964:	00000000 	andeq	r0, r0, r0
    4968:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4974:	01f30004 	mvnseq	r0, r4
    4978:	00009f51 	andeq	r9, r0, r1, asr pc
    497c:	00000000 	andeq	r0, r0, r0
    4980:	00010000 	andeq	r0, r1, r0
    4984:	00000051 	andeq	r0, r0, r1, asr r0
	...
    499c:	01000000 	mrseq	r0, (UNDEF: 0)
    49a0:	00005200 	andeq	r5, r0, r0, lsl #4
    49a4:	00000000 	andeq	r0, r0, r0
    49a8:	00040000 	andeq	r0, r4, r0
    49ac:	9f5201f3 	svcls	0x005201f3
	...
    49b8:	00520001 	subseq	r0, r2, r1
    49bc:	00000000 	andeq	r0, r0, r0
    49c0:	04000000 	streq	r0, [r0], #-0
    49c4:	5201f300 	andpl	pc, r1, #0, 6
    49c8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    49cc:	00000000 	andeq	r0, r0, r0
    49d0:	52000100 	andpl	r0, r0, #0, 2
	...
    49f4:	00500001 	subseq	r0, r0, r1
    49f8:	00000000 	andeq	r0, r0, r0
    49fc:	04000000 	streq	r0, [r0], #-0
    4a00:	5001f300 	andpl	pc, r1, r0, lsl #6
    4a04:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4a08:	00000000 	andeq	r0, r0, r0
    4a0c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4a18:	01f30004 	mvnseq	r0, r4
    4a1c:	00009f50 	andeq	r9, r0, r0, asr pc
    4a20:	00000000 	andeq	r0, r0, r0
    4a24:	00010000 	andeq	r0, r1, r0
    4a28:	00000050 	andeq	r0, r0, r0, asr r0
    4a2c:	00000000 	andeq	r0, r0, r0
    4a30:	f3000400 	vshl.u8	d0, d0, d0
    4a34:	009f5001 	addseq	r5, pc, r1
    4a38:	00000000 	andeq	r0, r0, r0
    4a3c:	01000000 	mrseq	r0, (UNDEF: 0)
    4a40:	00005000 	andeq	r5, r0, r0
    4a44:	00000000 	andeq	r0, r0, r0
    4a48:	00040000 	andeq	r0, r4, r0
    4a4c:	9f5001f3 	svcls	0x005001f3
	...
    4a68:	00510001 	subseq	r0, r1, r1
    4a6c:	00000000 	andeq	r0, r0, r0
    4a70:	02000000 	andeq	r0, r0, #0
    4a74:	00207000 	eoreq	r7, r0, r0
    4a78:	00000000 	andeq	r0, r0, r0
    4a7c:	04000000 	streq	r0, [r0], #-0
    4a80:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4a84:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4a88:	00000000 	andeq	r0, r0, r0
    4a8c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4aa8:	00520001 	subseq	r0, r2, r1
    4aac:	00000000 	andeq	r0, r0, r0
    4ab0:	02000000 	andeq	r0, r0, #0
    4ab4:	00247000 	eoreq	r7, r4, r0
    4ab8:	00000000 	andeq	r0, r0, r0
    4abc:	04000000 	streq	r0, [r0], #-0
    4ac0:	5201f300 	andpl	pc, r1, #0, 6
    4ac4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4ac8:	00000000 	andeq	r0, r0, r0
    4acc:	52000100 	andpl	r0, r0, #0, 2
	...
    4ae0:	007d0002 	rsbseq	r0, sp, r2
	...
    4aec:	187d0002 	ldmdane	sp!, {r1}^
	...
    4af8:	207d0002 	rsbscs	r0, sp, r2
	...
    4b04:	187d0002 	ldmdane	sp!, {r1}^
	...
    4b10:	207d0002 	rsbscs	r0, sp, r2
	...
    4b34:	00500001 	subseq	r0, r0, r1
    4b38:	00000000 	andeq	r0, r0, r0
    4b3c:	01000000 	mrseq	r0, (UNDEF: 0)
    4b40:	00005400 	andeq	r5, r0, r0, lsl #8
    4b44:	00000000 	andeq	r0, r0, r0
    4b48:	00010000 	andeq	r0, r1, r0
    4b4c:	00000050 	andeq	r0, r0, r0, asr r0
    4b50:	00000000 	andeq	r0, r0, r0
    4b54:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4b60:	00500001 	subseq	r0, r0, r1
    4b64:	00000000 	andeq	r0, r0, r0
    4b68:	04000000 	streq	r0, [r0], #-0
    4b6c:	5001f300 	andpl	pc, r1, r0, lsl #6
    4b70:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4b74:	00000000 	andeq	r0, r0, r0
    4b78:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4b84:	00540001 	subseq	r0, r4, r1
	...
    4ba4:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4bb0:	00550001 	subseq	r0, r5, r1
    4bb4:	00000000 	andeq	r0, r0, r0
    4bb8:	01000000 	mrseq	r0, (UNDEF: 0)
    4bbc:	00005800 	andeq	r5, r0, r0, lsl #16
    4bc0:	00000000 	andeq	r0, r0, r0
    4bc4:	00040000 	andeq	r0, r4, r0
    4bc8:	9f5101f3 	svcls	0x005101f3
	...
    4bd4:	00510001 	subseq	r0, r1, r1
    4bd8:	00000000 	andeq	r0, r0, r0
    4bdc:	04000000 	streq	r0, [r0], #-0
    4be0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4be4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4be8:	00000000 	andeq	r0, r0, r0
    4bec:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    4c08:	00010000 	andeq	r0, r1, r0
    4c0c:	00000052 	andeq	r0, r0, r2, asr r0
    4c10:	00000000 	andeq	r0, r0, r0
    4c14:	f3000400 	vshl.u8	d0, d0, d0
    4c18:	009f5201 	addseq	r5, pc, r1, lsl #4
    4c1c:	00000000 	andeq	r0, r0, r0
    4c20:	01000000 	mrseq	r0, (UNDEF: 0)
    4c24:	00005200 	andeq	r5, r0, r0, lsl #4
    4c28:	00000000 	andeq	r0, r0, r0
    4c2c:	00040000 	andeq	r0, r4, r0
    4c30:	9f5201f3 	svcls	0x005201f3
	...
    4c3c:	00520001 	subseq	r0, r2, r1
	...
    4c50:	01000000 	mrseq	r0, (UNDEF: 0)
    4c54:	00005300 	andeq	r5, r0, r0, lsl #6
    4c58:	00000000 	andeq	r0, r0, r0
    4c5c:	00010000 	andeq	r0, r1, r0
    4c60:	00000056 	andeq	r0, r0, r6, asr r0
	...
    4c70:	01000000 	mrseq	r0, (UNDEF: 0)
    4c74:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    4c80:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    4c8c:	00580001 	subseq	r0, r8, r1
    4c90:	00000000 	andeq	r0, r0, r0
    4c94:	03000000 	movweq	r0, #0
    4c98:	9f7e7800 	svcls	0x007e7800
	...
    4ca4:	00580001 	subseq	r0, r8, r1
    4ca8:	00000000 	andeq	r0, r0, r0
    4cac:	03000000 	movweq	r0, #0
	...
    4cc0:	30000200 	andcc	r0, r0, r0, lsl #4
    4cc4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4cc8:	00000000 	andeq	r0, r0, r0
    4ccc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4cd8:	00570001 	subseq	r0, r7, r1
    4cdc:	00000000 	andeq	r0, r0, r0
    4ce0:	02000000 	andeq	r0, r0, #0
    4ce4:	009f3000 	addseq	r3, pc, r0
    4ce8:	00000000 	andeq	r0, r0, r0
    4cec:	02000000 	andeq	r0, r0, #0
    4cf0:	009f3000 	addseq	r3, pc, r0
    4cf4:	00000000 	andeq	r0, r0, r0
    4cf8:	44000000 	strmi	r0, [r0], #-0
    4cfc:	4808000c 	stmdami	r8, {r2, r3}
    4d00:	0208000c 	andeq	r0, r8, #12
    4d04:	48007d00 	stmdami	r0, {r8, sl, fp, ip, sp, lr}
    4d08:	4a08000c 	bmi	204d40 <_Min_Heap_Size+0x204540>
    4d0c:	0208000c 	andeq	r0, r8, #12
    4d10:	4a187d00 	bmi	624118 <_Min_Heap_Size+0x623918>
    4d14:	0808000c 	stmdaeq	r8, {r2, r3}
    4d18:	0208000d 	andeq	r0, r8, #13
    4d1c:	08207d00 	stmdaeq	r0!, {r8, sl, fp, ip, sp, lr}
    4d20:	0c08000d 	stceq	0, cr0, [r8], {13}
    4d24:	0208000d 	andeq	r0, r8, #13
    4d28:	0c187d00 	ldceq	13, cr7, [r8], {-0}
    4d2c:	1008000d 	andne	r0, r8, sp
    4d30:	0208000d 	andeq	r0, r8, #13
    4d34:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    4d4c:	44000000 	strmi	r0, [r0], #-0
    4d50:	6408000c 	strvs	r0, [r8], #-12
    4d54:	0108000c 	tsteq	r8, ip
    4d58:	0c645000 	stcleq	0, cr5, [r4], #-0
    4d5c:	0c660800 	stcleq	8, cr0, [r6], #-0
    4d60:	00010800 	andeq	r0, r1, r0, lsl #16
    4d64:	000c6654 	andeq	r6, ip, r4, asr r6
    4d68:	000c7308 	andeq	r7, ip, r8, lsl #6
    4d6c:	50000108 	andpl	r0, r0, r8, lsl #2
    4d70:	08000c73 	stmdaeq	r0, {r0, r1, r4, r5, r6, sl, fp}
    4d74:	08000d04 	stmdaeq	r0, {r2, r8, sl, fp}
    4d78:	04540001 	ldrbeq	r0, [r4], #-1
    4d7c:	0608000d 	streq	r0, [r8], -sp
    4d80:	0108000d 	tsteq	r8, sp
    4d84:	0d065000 	stceq	0, cr5, [r6, #-0]
    4d88:	0d0c0800 	stceq	8, cr0, [ip, #-0]
    4d8c:	00040800 	andeq	r0, r4, r0, lsl #16
    4d90:	9f5001f3 	svcls	0x005001f3
    4d94:	08000d0c 	stmdaeq	r0, {r2, r3, r8, sl, fp}
    4d98:	08000d0e 	stmdaeq	r0, {r1, r2, r3, r8, sl, fp}
    4d9c:	0e500001 	cdpeq	0, 5, cr0, cr0, cr1, {0}
    4da0:	1008000d 	andne	r0, r8, sp
    4da4:	0108000d 	tsteq	r8, sp
    4da8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    4dc4:	08000c44 	stmdaeq	r0, {r2, r6, sl, fp}
    4dc8:	08000c73 	stmdaeq	r0, {r0, r1, r4, r5, r6, sl, fp}
    4dcc:	73510001 	cmpvc	r1, #1
    4dd0:	9608000c 	strls	r0, [r8], -ip
    4dd4:	0108000c 	tsteq	r8, ip
    4dd8:	0c965500 	cfldr32eq	mvfx5, [r6], {0}
    4ddc:	0cdc0800 	ldcleq	8, cr0, [ip], {0}
    4de0:	00040800 	andeq	r0, r4, r0, lsl #16
    4de4:	9f5101f3 	svcls	0x005101f3
    4de8:	08000cdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, fp}
    4dec:	08000ce0 	stmdaeq	r0, {r5, r6, r7, sl, fp}
    4df0:	e0550001 	subs	r0, r5, r1
    4df4:	e208000c 	and	r0, r8, #12
    4df8:	0108000c 	tsteq	r8, ip
    4dfc:	0ce25800 	stcleq	8, cr5, [r2]
    4e00:	0d040800 	stceq	8, cr0, [r4, #-0]
    4e04:	00040800 	andeq	r0, r4, r0, lsl #16
    4e08:	9f5101f3 	svcls	0x005101f3
    4e0c:	08000d04 	stmdaeq	r0, {r2, r8, sl, fp}
    4e10:	08000d06 	stmdaeq	r0, {r1, r2, r8, sl, fp}
    4e14:	06510001 	ldrbeq	r0, [r1], -r1
    4e18:	0c08000d 	stceq	0, cr0, [r8], {13}
    4e1c:	0408000d 	streq	r0, [r8], #-13
    4e20:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    4e24:	000d0c9f 	muleq	sp, pc, ip	; <UNPREDICTABLE>
    4e28:	000d1008 	andeq	r1, sp, r8
    4e2c:	51000108 	tstpl	r0, r8, lsl #2
	...
    4e40:	0c440000 	mareq	acc0, r0, r4
    4e44:	0c730800 	ldcleq	8, cr0, [r3], #-0
    4e48:	00010800 	andeq	r0, r1, r0, lsl #16
    4e4c:	000c7352 	andeq	r7, ip, r2, asr r3
    4e50:	000d0408 	andeq	r0, sp, r8, lsl #8
    4e54:	f3000408 	vshl.u8	d0, d8, d0
    4e58:	049f5201 	ldreq	r5, [pc], #513	; 4e60 <_Min_Heap_Size+0x4660>
    4e5c:	0608000d 	streq	r0, [r8], -sp
    4e60:	0108000d 	tsteq	r8, sp
    4e64:	0d065200 	sfmeq	f5, 4, [r6, #-0]
    4e68:	0d0c0800 	stceq	8, cr0, [ip, #-0]
    4e6c:	00040800 	andeq	r0, r4, r0, lsl #16
    4e70:	9f5201f3 	svcls	0x005201f3
    4e74:	08000d0c 	stmdaeq	r0, {r2, r3, r8, sl, fp}
    4e78:	08000d10 	stmdaeq	r0, {r4, r8, sl, fp}
    4e7c:	00520001 	subseq	r0, r2, r1
	...
    4e88:	44000000 	strmi	r0, [r0], #-0
    4e8c:	5008000c 	andpl	r0, r8, ip
    4e90:	0108000c 	tsteq	r8, ip
    4e94:	0c505300 	mrrceq	3, 0, r5, r0, cr0
    4e98:	0d100800 	ldceq	8, cr0, [r0, #-0]
    4e9c:	00010800 	andeq	r0, r1, r0, lsl #16
    4ea0:	00000056 	andeq	r0, r0, r6, asr r0
	...
    4eac:	00000101 	andeq	r0, r0, r1, lsl #2
    4eb0:	000c9600 	andeq	r9, ip, r0, lsl #12
    4eb4:	000cd608 	andeq	sp, ip, r8, lsl #12
    4eb8:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    4ebc:	08000cd6 	stmdaeq	r0, {r1, r2, r4, r6, r7, sl, fp}
    4ec0:	08000cda 	stmdaeq	r0, {r1, r3, r4, r6, r7, sl, fp}
    4ec4:	7f750003 	svcvc	0x00750003
    4ec8:	000cda9f 	muleq	ip, pc, sl	; <UNPREDICTABLE>
    4ecc:	000cdc08 	andeq	sp, ip, r8, lsl #24
    4ed0:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    4ed4:	08000ce2 	stmdaeq	r0, {r1, r5, r6, r7, sl, fp}
    4ed8:	08000d04 	stmdaeq	r0, {r2, r8, sl, fp}
    4edc:	00550001 	subseq	r0, r5, r1
	...
    4ee8:	01010000 	mrseq	r0, (UNDEF: 1)
    4eec:	96000000 	strls	r0, [r0], -r0
    4ef0:	a408000c 	strge	r0, [r8], #-12
    4ef4:	0108000c 	tsteq	r8, ip
    4ef8:	0ca45800 	stceq	8, cr5, [r4]
    4efc:	0cac0800 	stceq	8, cr0, [ip]
    4f00:	00030800 	andeq	r0, r3, r0, lsl #16
    4f04:	ac9f7e78 	ldcge	14, cr7, [pc], {120}	; 0x78
    4f08:	dc08000c 	stcle	0, cr0, [r8], {12}
    4f0c:	0108000c 	tsteq	r8, ip
    4f10:	0ce25800 	stcleq	8, cr5, [r2]
    4f14:	0d040800 	stceq	8, cr0, [r4, #-0]
    4f18:	00010800 	andeq	r0, r1, r0, lsl #16
    4f1c:	00000058 	andeq	r0, r0, r8, asr r0
    4f20:	00000000 	andeq	r0, r0, r0
    4f24:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    4f30:	4c000000 	stcmi	0, cr0, [r0], {-0}
    4f34:	7608000c 	strvc	r0, [r8], -ip
    4f38:	0208000c 	andeq	r0, r8, #12
    4f3c:	769f3000 	ldrvc	r3, [pc], r0
    4f40:	9608000c 	strls	r0, [r8], -ip
    4f44:	0108000c 	tsteq	r8, ip
    4f48:	0c965000 	ldceq	0, cr5, [r6], {0}
    4f4c:	0cdc0800 	ldcleq	8, cr0, [ip], {0}
    4f50:	00010800 	andeq	r0, r1, r0, lsl #16
    4f54:	000cdc57 	andeq	sp, ip, r7, asr ip
    4f58:	000ce208 	andeq	lr, ip, r8, lsl #4
    4f5c:	50000108 	andpl	r0, r0, r8, lsl #2
    4f60:	08000ce2 	stmdaeq	r0, {r1, r5, r6, r7, sl, fp}
    4f64:	08000d04 	stmdaeq	r0, {r2, r8, sl, fp}
    4f68:	04570001 	ldrbeq	r0, [r7], #-1
    4f6c:	0608000d 	streq	r0, [r8], -sp
    4f70:	0208000d 	andeq	r0, r8, #13
    4f74:	0c9f3000 	ldceq	0, cr3, [pc], {0}
    4f78:	1008000d 	andne	r0, r8, sp
    4f7c:	0208000d 	andeq	r0, r8, #13
    4f80:	009f3000 	addseq	r3, pc, r0
	...
    4f90:	02000000 	andeq	r0, r0, #0
    4f94:	00007d00 	andeq	r7, r0, r0, lsl #26
    4f98:	00000000 	andeq	r0, r0, r0
    4f9c:	02000000 	andeq	r0, r0, #0
    4fa0:	00087d00 	andeq	r7, r8, r0, lsl #26
    4fa4:	00000000 	andeq	r0, r0, r0
    4fa8:	02000000 	andeq	r0, r0, #0
    4fac:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    4fc4:	01000000 	mrseq	r0, (UNDEF: 0)
    4fc8:	00005000 	andeq	r5, r0, r0
    4fcc:	00000000 	andeq	r0, r0, r0
    4fd0:	00010000 	andeq	r0, r1, r0
    4fd4:	00000054 	andeq	r0, r0, r4, asr r0
    4fd8:	00000000 	andeq	r0, r0, r0
    4fdc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    4fe8:	01f30004 	mvnseq	r0, r4
    4fec:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    4ffc:	00020000 	andeq	r0, r2, r0
    5000:	0000007d 	andeq	r0, r0, sp, ror r0
    5004:	00000000 	andeq	r0, r0, r0
    5008:	00020000 	andeq	r0, r2, r0
    500c:	0000107d 	andeq	r1, r0, sp, ror r0
    5010:	00000000 	andeq	r0, r0, r0
    5014:	00020000 	andeq	r0, r2, r0
    5018:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    5030:	00010000 	andeq	r0, r1, r0
    5034:	00000050 	andeq	r0, r0, r0, asr r0
    5038:	00000000 	andeq	r0, r0, r0
    503c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5048:	00500001 	subseq	r0, r0, r1
    504c:	00000000 	andeq	r0, r0, r0
    5050:	04000000 	streq	r0, [r0], #-0
    5054:	5001f300 	andpl	pc, r1, r0, lsl #6
    5058:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    506c:	01000000 	mrseq	r0, (UNDEF: 0)
    5070:	00005100 	andeq	r5, r0, r0, lsl #2
    5074:	00000000 	andeq	r0, r0, r0
    5078:	00040000 	andeq	r0, r4, r0
    507c:	9f5101f3 	svcls	0x005101f3
	...
    5088:	00510001 	subseq	r0, r1, r1
	...
    50a4:	52000100 	andpl	r0, r0, #0, 2
	...
    50b0:	00560001 	subseq	r0, r6, r1
    50b4:	00000000 	andeq	r0, r0, r0
    50b8:	04000000 	streq	r0, [r0], #-0
    50bc:	5201f300 	andpl	pc, r1, #0, 6
    50c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    50c4:	00000000 	andeq	r0, r0, r0
    50c8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    50d4:	00520001 	subseq	r0, r2, r1
	...
    50e4:	02000000 	andeq	r0, r0, #0
    50e8:	00007d00 	andeq	r7, r0, r0, lsl #26
    50ec:	00000000 	andeq	r0, r0, r0
    50f0:	02000000 	andeq	r0, r0, #0
    50f4:	00107d00 	andseq	r7, r0, r0, lsl #26
    50f8:	00000000 	andeq	r0, r0, r0
    50fc:	02000000 	andeq	r0, r0, #0
    5100:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    5118:	01000000 	mrseq	r0, (UNDEF: 0)
    511c:	00005000 	andeq	r5, r0, r0
    5120:	00000000 	andeq	r0, r0, r0
    5124:	00010000 	andeq	r0, r1, r0
    5128:	00000054 	andeq	r0, r0, r4, asr r0
    512c:	00000000 	andeq	r0, r0, r0
    5130:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    513c:	01f30004 	mvnseq	r0, r4
    5140:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    515c:	00510001 	subseq	r0, r1, r1
    5160:	00000000 	andeq	r0, r0, r0
    5164:	01000000 	mrseq	r0, (UNDEF: 0)
    5168:	00005500 	andeq	r5, r0, r0, lsl #10
    516c:	00000000 	andeq	r0, r0, r0
    5170:	00040000 	andeq	r0, r4, r0
    5174:	9f5101f3 	svcls	0x005101f3
	...
    5180:	00550001 	subseq	r0, r5, r1
    5184:	00000000 	andeq	r0, r0, r0
    5188:	01000000 	mrseq	r0, (UNDEF: 0)
    518c:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    519c:	00020000 	andeq	r0, r2, r0
    51a0:	0000007d 	andeq	r0, r0, sp, ror r0
    51a4:	00000000 	andeq	r0, r0, r0
    51a8:	00020000 	andeq	r0, r2, r0
    51ac:	0000087d 	andeq	r0, r0, sp, ror r8
    51b0:	00000000 	andeq	r0, r0, r0
    51b4:	00020000 	andeq	r0, r2, r0
    51b8:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    51d0:	00010000 	andeq	r0, r1, r0
    51d4:	00000050 	andeq	r0, r0, r0, asr r0
    51d8:	00000000 	andeq	r0, r0, r0
    51dc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    51e8:	00500001 	subseq	r0, r0, r1
    51ec:	00000000 	andeq	r0, r0, r0
    51f0:	04000000 	streq	r0, [r0], #-0
    51f4:	5001f300 	andpl	pc, r1, r0, lsl #6
    51f8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    51fc:	00000000 	andeq	r0, r0, r0
    5200:	000b1800 	andeq	r1, fp, r0, lsl #16
    5204:	000b2008 	andeq	r2, fp, r8
    5208:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    520c:	000b2000 	andeq	r2, fp, r0
    5210:	000c3608 	andeq	r3, ip, r8, lsl #12
    5214:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    5218:	000c3608 	andeq	r3, ip, r8, lsl #12
    521c:	000c4408 	andeq	r4, ip, r8, lsl #8
    5220:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
	...
    5238:	000b1800 	andeq	r1, fp, r0, lsl #16
    523c:	000b4e08 	andeq	r4, fp, r8, lsl #28
    5240:	50000108 	andpl	r0, r0, r8, lsl #2
    5244:	08000b4e 	stmdaeq	r0, {r1, r2, r3, r6, r8, r9, fp}
    5248:	08000bd6 	stmdaeq	r0, {r1, r2, r4, r6, r7, r8, r9, fp}
    524c:	d6540001 	ldrble	r0, [r4], -r1
    5250:	0c08000b 	stceq	0, cr0, [r8], {11}
    5254:	0108000c 	tsteq	r8, ip
    5258:	0c0c5000 	stceq	0, cr5, [ip], {-0}
    525c:	0c360800 	ldceq	8, cr0, [r6], #-0
    5260:	00010800 	andeq	r0, r1, r0, lsl #16
    5264:	000c3654 	andeq	r3, ip, r4, asr r6
    5268:	000c3808 	andeq	r3, ip, r8, lsl #16
    526c:	50000108 	andpl	r0, r0, r8, lsl #2
    5270:	08000c38 	stmdaeq	r0, {r3, r4, r5, sl, fp}
    5274:	08000c44 	stmdaeq	r0, {r2, r6, sl, fp}
    5278:	01f30004 	mvnseq	r0, r4
    527c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    528c:	00020000 	andeq	r0, r2, r0
    5290:	0000007d 	andeq	r0, r0, sp, ror r0
    5294:	00000000 	andeq	r0, r0, r0
    5298:	00020000 	andeq	r0, r2, r0
    529c:	0000087d 	andeq	r0, r0, sp, ror r8
    52a0:	00000000 	andeq	r0, r0, r0
    52a4:	10dc0000 	sbcsne	r0, ip, r0
    52a8:	10de0800 	sbcsne	r0, lr, r0, lsl #16
    52ac:	00020800 	andeq	r0, r2, r0, lsl #16
    52b0:	10de007d 	sbcsne	r0, lr, sp, ror r0
    52b4:	10fc0800 	rscsne	r0, ip, r0, lsl #16
    52b8:	00020800 	andeq	r0, r2, r0, lsl #16
    52bc:	0000087d 	andeq	r0, r0, sp, ror r8
    52c0:	00000000 	andeq	r0, r0, r0
    52c4:	10bc0000 	adcsne	r0, ip, r0
    52c8:	10be0800 	adcsne	r0, lr, r0, lsl #16
    52cc:	00020800 	andeq	r0, r2, r0, lsl #16
    52d0:	10be007d 	adcsne	r0, lr, sp, ror r0
    52d4:	10dc0800 	sbcsne	r0, ip, r0, lsl #16
    52d8:	00020800 	andeq	r0, r2, r0, lsl #16
    52dc:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    52ec:	00020000 	andeq	r0, r2, r0
    52f0:	0000007d 	andeq	r0, r0, sp, ror r0
    52f4:	00000000 	andeq	r0, r0, r0
    52f8:	00020000 	andeq	r0, r2, r0
    52fc:	0000087d 	andeq	r0, r0, sp, ror r8
    5300:	00000000 	andeq	r0, r0, r0
    5304:	00010000 	andeq	r0, r1, r0
    5308:	00000000 	andeq	r0, r0, r0
    530c:	00000100 	andeq	r0, r0, r0, lsl #2
    5310:	00000000 	andeq	r0, r0, r0
    5314:	00020000 	andeq	r0, r2, r0
    5318:	00009f30 	andeq	r9, r0, r0, lsr pc
    531c:	00000000 	andeq	r0, r0, r0
    5320:	00010000 	andeq	r0, r1, r0
    5324:	00000052 	andeq	r0, r0, r2, asr r0
    5328:	00000000 	andeq	r0, r0, r0
    532c:	52000100 	andpl	r0, r0, #0, 2
	...
    5338:	9f300002 	svcls	0x00300002
	...
    5344:	00000001 	andeq	r0, r0, r1
    5348:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    5354:	9f300002 	svcls	0x00300002
	...
    5360:	00500001 	subseq	r0, r0, r1
    5364:	00000000 	andeq	r0, r0, r0
    5368:	02000000 	andeq	r0, r0, #0
    536c:	009f3000 	addseq	r3, pc, r0
    5370:	00000000 	andeq	r0, r0, r0
    5374:	02000000 	andeq	r0, r0, #0
    5378:	009f3000 	addseq	r3, pc, r0
    537c:	00000000 	andeq	r0, r0, r0
    5380:	01000000 	mrseq	r0, (UNDEF: 0)
    5384:	00000000 	andeq	r0, r0, r0
    5388:	00000001 	andeq	r0, r0, r1
    538c:	00000000 	andeq	r0, r0, r0
    5390:	30000200 	andcc	r0, r0, r0, lsl #4
    5394:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5398:	00000000 	andeq	r0, r0, r0
    539c:	53000100 	movwpl	r0, #256	; 0x100
	...
    53a8:	9f300002 	svcls	0x00300002
	...
    53b4:	00000002 	andeq	r0, r0, r2
    53b8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    53c4:	9f300002 	svcls	0x00300002
	...
    53d0:	00500001 	subseq	r0, r0, r1
    53d4:	00000000 	andeq	r0, r0, r0
    53d8:	02000000 	andeq	r0, r0, #0
    53dc:	009f3000 	addseq	r3, pc, r0
    53e0:	00000000 	andeq	r0, r0, r0
    53e4:	06000000 	streq	r0, [r0], -r0
    53e8:	24000c00 	strcs	r0, [r0], #-3072	; 0xfffff400
    53ec:	009f00f4 	ldrsheq	r0, [pc], r4
	...
    53fc:	02000000 	andeq	r0, r0, #0
    5400:	00007d00 	andeq	r7, r0, r0, lsl #26
    5404:	00000000 	andeq	r0, r0, r0
    5408:	02000000 	andeq	r0, r0, #0
    540c:	00107d00 	andseq	r7, r0, r0, lsl #26
    5410:	00000000 	andeq	r0, r0, r0
    5414:	02000000 	andeq	r0, r0, #0
    5418:	00307d00 	eorseq	r7, r0, r0, lsl #26
    541c:	00000000 	andeq	r0, r0, r0
    5420:	02000000 	andeq	r0, r0, #0
    5424:	00107d00 	andseq	r7, r0, r0, lsl #26
    5428:	00000000 	andeq	r0, r0, r0
    542c:	02000000 	andeq	r0, r0, #0
    5430:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    5450:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    545c:	00560001 	subseq	r0, r6, r1
    5460:	00000000 	andeq	r0, r0, r0
    5464:	04000000 	streq	r0, [r0], #-0
    5468:	5001f300 	andpl	pc, r1, r0, lsl #6
    546c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5470:	00000000 	andeq	r0, r0, r0
    5474:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5480:	00560001 	subseq	r0, r6, r1
    5484:	00000000 	andeq	r0, r0, r0
    5488:	04000000 	streq	r0, [r0], #-0
    548c:	5001f300 	andpl	pc, r1, r0, lsl #6
    5490:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5494:	00000000 	andeq	r0, r0, r0
    5498:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    54b4:	00510001 	subseq	r0, r1, r1
    54b8:	00000000 	andeq	r0, r0, r0
    54bc:	01000000 	mrseq	r0, (UNDEF: 0)
    54c0:	00005500 	andeq	r5, r0, r0, lsl #10
    54c4:	00000000 	andeq	r0, r0, r0
    54c8:	00010000 	andeq	r0, r1, r0
    54cc:	00000051 	andeq	r0, r0, r1, asr r0
    54d0:	00000000 	andeq	r0, r0, r0
    54d4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    54f4:	00010000 	andeq	r0, r1, r0
    54f8:	00000052 	andeq	r0, r0, r2, asr r0
    54fc:	00000000 	andeq	r0, r0, r0
    5500:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    550c:	01f30004 	mvnseq	r0, r4
    5510:	00009f52 	andeq	r9, r0, r2, asr pc
    5514:	00000000 	andeq	r0, r0, r0
    5518:	00010000 	andeq	r0, r1, r0
    551c:	00000052 	andeq	r0, r0, r2, asr r0
    5520:	00000000 	andeq	r0, r0, r0
    5524:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5530:	01f30004 	mvnseq	r0, r4
    5534:	00009f52 	andeq	r9, r0, r2, asr pc
    5538:	00000000 	andeq	r0, r0, r0
    553c:	00010000 	andeq	r0, r1, r0
    5540:	00000054 	andeq	r0, r0, r4, asr r0
	...
    5550:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    555c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5560:	00000010 	andeq	r0, r0, r0, lsl r0
    5564:	00000000 	andeq	r0, r0, r0
    5568:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5574:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5578:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    5594:	01000000 	mrseq	r0, (UNDEF: 0)
    5598:	00005000 	andeq	r5, r0, r0
    559c:	00000000 	andeq	r0, r0, r0
    55a0:	00010000 	andeq	r0, r1, r0
    55a4:	00000054 	andeq	r0, r0, r4, asr r0
    55a8:	00000000 	andeq	r0, r0, r0
    55ac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    55b8:	00540001 	subseq	r0, r4, r1
    55bc:	00000000 	andeq	r0, r0, r0
    55c0:	01000000 	mrseq	r0, (UNDEF: 0)
    55c4:	00005000 	andeq	r5, r0, r0
    55c8:	00000000 	andeq	r0, r0, r0
    55cc:	00040000 	andeq	r0, r4, r0
    55d0:	9f5001f3 	svcls	0x005001f3
	...
    55dc:	00540001 	subseq	r0, r4, r1
	...
    55f8:	01000000 	mrseq	r0, (UNDEF: 0)
    55fc:	00005100 	andeq	r5, r0, r0, lsl #2
    5600:	00000000 	andeq	r0, r0, r0
    5604:	00010000 	andeq	r0, r1, r0
    5608:	00000055 	andeq	r0, r0, r5, asr r0
    560c:	00000000 	andeq	r0, r0, r0
    5610:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    561c:	00550001 	subseq	r0, r5, r1
    5620:	00000000 	andeq	r0, r0, r0
    5624:	01000000 	mrseq	r0, (UNDEF: 0)
    5628:	00005100 	andeq	r5, r0, r0, lsl #2
    562c:	00000000 	andeq	r0, r0, r0
    5630:	00010000 	andeq	r0, r1, r0
    5634:	00000055 	andeq	r0, r0, r5, asr r0
    5638:	00000000 	andeq	r0, r0, r0
    563c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    5648:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5654:	00560001 	subseq	r0, r6, r1
	...
    5664:	02000000 	andeq	r0, r0, #0
    5668:	00007d00 	andeq	r7, r0, r0, lsl #26
    566c:	00000000 	andeq	r0, r0, r0
    5670:	02000000 	andeq	r0, r0, #0
    5674:	00107d00 	andseq	r7, r0, r0, lsl #26
    5678:	00000000 	andeq	r0, r0, r0
    567c:	02000000 	andeq	r0, r0, #0
    5680:	00187d00 	andseq	r7, r8, r0, lsl #26
    5684:	00000000 	andeq	r0, r0, r0
    5688:	02000000 	andeq	r0, r0, #0
    568c:	00007d00 	andeq	r7, r0, r0, lsl #26
    5690:	00000000 	andeq	r0, r0, r0
    5694:	02000000 	andeq	r0, r0, #0
    5698:	00187d00 	andseq	r7, r8, r0, lsl #26
    569c:	00000000 	andeq	r0, r0, r0
    56a0:	02000000 	andeq	r0, r0, #0
    56a4:	00107d00 	andseq	r7, r0, r0, lsl #26
    56a8:	00000000 	andeq	r0, r0, r0
    56ac:	02000000 	andeq	r0, r0, #0
    56b0:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    56dc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    56e8:	00540001 	subseq	r0, r4, r1
    56ec:	00000000 	andeq	r0, r0, r0
    56f0:	01000000 	mrseq	r0, (UNDEF: 0)
    56f4:	00005000 	andeq	r5, r0, r0
    56f8:	00000000 	andeq	r0, r0, r0
    56fc:	00010000 	andeq	r0, r1, r0
    5700:	00000054 	andeq	r0, r0, r4, asr r0
    5704:	00000000 	andeq	r0, r0, r0
    5708:	f3000400 	vshl.u8	d0, d0, d0
    570c:	009f5001 	addseq	r5, pc, r1
    5710:	00000000 	andeq	r0, r0, r0
    5714:	01000000 	mrseq	r0, (UNDEF: 0)
    5718:	00005400 	andeq	r5, r0, r0, lsl #8
    571c:	00000000 	andeq	r0, r0, r0
    5720:	00040000 	andeq	r0, r4, r0
    5724:	9f5001f3 	svcls	0x005001f3
	...
    5730:	00540001 	subseq	r0, r4, r1
    5734:	00000000 	andeq	r0, r0, r0
    5738:	01000000 	mrseq	r0, (UNDEF: 0)
    573c:	00005000 	andeq	r5, r0, r0
    5740:	00000000 	andeq	r0, r0, r0
    5744:	00040000 	andeq	r0, r4, r0
    5748:	9f5001f3 	svcls	0x005001f3
	...
    5754:	00540001 	subseq	r0, r4, r1
    5758:	00000000 	andeq	r0, r0, r0
    575c:	04000000 	streq	r0, [r0], #-0
    5760:	5001f300 	andpl	pc, r1, r0, lsl #6
    5764:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5768:	00000000 	andeq	r0, r0, r0
    576c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5778:	00010100 	andeq	r0, r1, r0, lsl #2
    577c:	00010100 	andeq	r0, r1, r0, lsl #2
    5780:	00010100 	andeq	r0, r1, r0, lsl #2
    5784:	00010100 	andeq	r0, r1, r0, lsl #2
    5788:	00010100 	andeq	r0, r1, r0, lsl #2
    578c:	00010100 	andeq	r0, r1, r0, lsl #2
    5790:	00010100 	andeq	r0, r1, r0, lsl #2
    5794:	00010100 	andeq	r0, r1, r0, lsl #2
    5798:	00010100 	andeq	r0, r1, r0, lsl #2
    579c:	00010100 	andeq	r0, r1, r0, lsl #2
    57a0:	00000000 	andeq	r0, r0, r0
    57a4:	00010100 	andeq	r0, r1, r0, lsl #2
    57a8:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    57b4:	00500001 	subseq	r0, r0, r1
    57b8:	00000000 	andeq	r0, r0, r0
    57bc:	01000000 	mrseq	r0, (UNDEF: 0)
    57c0:	00005500 	andeq	r5, r0, r0, lsl #10
    57c4:	00000000 	andeq	r0, r0, r0
    57c8:	00010000 	andeq	r0, r1, r0
    57cc:	00000050 	andeq	r0, r0, r0, asr r0
    57d0:	00000000 	andeq	r0, r0, r0
    57d4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    57e0:	00500001 	subseq	r0, r0, r1
    57e4:	00000000 	andeq	r0, r0, r0
    57e8:	01000000 	mrseq	r0, (UNDEF: 0)
    57ec:	00005500 	andeq	r5, r0, r0, lsl #10
    57f0:	00000000 	andeq	r0, r0, r0
    57f4:	00010000 	andeq	r0, r1, r0
    57f8:	00000050 	andeq	r0, r0, r0, asr r0
    57fc:	00000000 	andeq	r0, r0, r0
    5800:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    580c:	00500001 	subseq	r0, r0, r1
    5810:	00000000 	andeq	r0, r0, r0
    5814:	01000000 	mrseq	r0, (UNDEF: 0)
    5818:	00005500 	andeq	r5, r0, r0, lsl #10
    581c:	00000000 	andeq	r0, r0, r0
    5820:	00010000 	andeq	r0, r1, r0
    5824:	00000050 	andeq	r0, r0, r0, asr r0
    5828:	00000000 	andeq	r0, r0, r0
    582c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5838:	00500001 	subseq	r0, r0, r1
    583c:	00000000 	andeq	r0, r0, r0
    5840:	01000000 	mrseq	r0, (UNDEF: 0)
    5844:	00005600 	andeq	r5, r0, r0, lsl #12
    5848:	00000000 	andeq	r0, r0, r0
    584c:	00010000 	andeq	r0, r1, r0
    5850:	00000050 	andeq	r0, r0, r0, asr r0
    5854:	00000000 	andeq	r0, r0, r0
    5858:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    5864:	00500001 	subseq	r0, r0, r1
    5868:	00000000 	andeq	r0, r0, r0
    586c:	01000000 	mrseq	r0, (UNDEF: 0)
    5870:	00005600 	andeq	r5, r0, r0, lsl #12
    5874:	00000000 	andeq	r0, r0, r0
    5878:	00010000 	andeq	r0, r1, r0
    587c:	00000050 	andeq	r0, r0, r0, asr r0
    5880:	00000000 	andeq	r0, r0, r0
    5884:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5890:	00560001 	subseq	r0, r6, r1
    5894:	00000000 	andeq	r0, r0, r0
    5898:	01000000 	mrseq	r0, (UNDEF: 0)
    589c:	00005500 	andeq	r5, r0, r0, lsl #10
    58a0:	00000000 	andeq	r0, r0, r0
    58a4:	00010000 	andeq	r0, r1, r0
    58a8:	00000050 	andeq	r0, r0, r0, asr r0
    58ac:	00000000 	andeq	r0, r0, r0
    58b0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    58bc:	00500001 	subseq	r0, r0, r1
    58c0:	00000000 	andeq	r0, r0, r0
    58c4:	01000000 	mrseq	r0, (UNDEF: 0)
    58c8:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    58dc:	00010000 	andeq	r0, r1, r0
    58e0:	00000053 	andeq	r0, r0, r3, asr r0
    58e4:	00000000 	andeq	r0, r0, r0
    58e8:	53000100 	movwpl	r0, #256	; 0x100
	...
    58f4:	00020201 	andeq	r0, r2, r1, lsl #4
	...
    5908:	9f300002 	svcls	0x00300002
	...
    5914:	9f310002 	svcls	0x00310002
	...
    5920:	00550001 	subseq	r0, r5, r1
    5924:	00000000 	andeq	r0, r0, r0
    5928:	02000000 	andeq	r0, r0, #0
    592c:	009f3000 	addseq	r3, pc, r0
    5930:	00000000 	andeq	r0, r0, r0
    5934:	01000000 	mrseq	r0, (UNDEF: 0)
    5938:	00005500 	andeq	r5, r0, r0, lsl #10
    593c:	00000000 	andeq	r0, r0, r0
    5940:	00010000 	andeq	r0, r1, r0
    5944:	00000055 	andeq	r0, r0, r5, asr r0
	...
    5954:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5960:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5964:	00000008 	andeq	r0, r0, r8
	...
    597c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5988:	01f30004 	mvnseq	r0, r4
    598c:	00009f50 	andeq	r9, r0, r0, asr pc
    5990:	00000000 	andeq	r0, r0, r0
    5994:	00010000 	andeq	r0, r1, r0
    5998:	00000050 	andeq	r0, r0, r0, asr r0
    599c:	00000000 	andeq	r0, r0, r0
    59a0:	f3000400 	vshl.u8	d0, d0, d0
    59a4:	009f5001 	addseq	r5, pc, r1
	...
    59b4:	02000000 	andeq	r0, r0, #0
    59b8:	00007d00 	andeq	r7, r0, r0, lsl #26
    59bc:	00000000 	andeq	r0, r0, r0
    59c0:	02000000 	andeq	r0, r0, #0
    59c4:	000c7d00 	andeq	r7, ip, r0, lsl #26
    59c8:	00000000 	andeq	r0, r0, r0
    59cc:	02000000 	andeq	r0, r0, #0
    59d0:	00187d00 	andseq	r7, r8, r0, lsl #26
    59d4:	00000000 	andeq	r0, r0, r0
    59d8:	02000000 	andeq	r0, r0, #0
    59dc:	000c7d00 	andeq	r7, ip, r0, lsl #26
    59e0:	00000000 	andeq	r0, r0, r0
    59e4:	02000000 	andeq	r0, r0, #0
    59e8:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    5a00:	01000000 	mrseq	r0, (UNDEF: 0)
    5a04:	00005000 	andeq	r5, r0, r0
    5a08:	00000000 	andeq	r0, r0, r0
    5a0c:	00010000 	andeq	r0, r1, r0
    5a10:	00000054 	andeq	r0, r0, r4, asr r0
    5a14:	00000000 	andeq	r0, r0, r0
    5a18:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5a24:	00540001 	subseq	r0, r4, r1
	...
    5a3c:	01000000 	mrseq	r0, (UNDEF: 0)
    5a40:	00005100 	andeq	r5, r0, r0, lsl #2
    5a44:	00000000 	andeq	r0, r0, r0
    5a48:	00040000 	andeq	r0, r4, r0
    5a4c:	9f5101f3 	svcls	0x005101f3
	...
    5a58:	00510001 	subseq	r0, r1, r1
    5a5c:	00000000 	andeq	r0, r0, r0
    5a60:	04000000 	streq	r0, [r0], #-0
    5a64:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5a68:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5a78:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    5a84:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    5a88:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    5aa0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5aac:	00550001 	subseq	r0, r5, r1
    5ab0:	00000000 	andeq	r0, r0, r0
    5ab4:	01000000 	mrseq	r0, (UNDEF: 0)
    5ab8:	00005000 	andeq	r5, r0, r0
    5abc:	00000000 	andeq	r0, r0, r0
    5ac0:	00010000 	andeq	r0, r1, r0
    5ac4:	00000055 	andeq	r0, r0, r5, asr r0
	...
    5adc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5ae8:	01f30004 	mvnseq	r0, r4
    5aec:	00009f51 	andeq	r9, r0, r1, asr pc
    5af0:	00000000 	andeq	r0, r0, r0
    5af4:	00010000 	andeq	r0, r1, r0
    5af8:	00000051 	andeq	r0, r0, r1, asr r0
    5afc:	00000000 	andeq	r0, r0, r0
    5b00:	f3000400 	vshl.u8	d0, d0, d0
    5b04:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    5b18:	53000100 	movwpl	r0, #256	; 0x100
	...
    5b2c:	007d0002 	rsbseq	r0, sp, r2
	...
    5b38:	107d0002 	rsbsne	r0, sp, r2
	...
    5b54:	00500001 	subseq	r0, r0, r1
    5b58:	00000000 	andeq	r0, r0, r0
    5b5c:	01000000 	mrseq	r0, (UNDEF: 0)
    5b60:	00005500 	andeq	r5, r0, r0, lsl #10
    5b64:	00000000 	andeq	r0, r0, r0
    5b68:	00010000 	andeq	r0, r1, r0
    5b6c:	00000050 	andeq	r0, r0, r0, asr r0
    5b70:	00000000 	andeq	r0, r0, r0
    5b74:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    5b90:	00510001 	subseq	r0, r1, r1
    5b94:	00000000 	andeq	r0, r0, r0
    5b98:	04000000 	streq	r0, [r0], #-0
    5b9c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5ba0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5ba4:	00000000 	andeq	r0, r0, r0
    5ba8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5bb4:	01f30004 	mvnseq	r0, r4
    5bb8:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    5bd0:	00010000 	andeq	r0, r1, r0
    5bd4:	00000052 	andeq	r0, r0, r2, asr r0
    5bd8:	00000000 	andeq	r0, r0, r0
    5bdc:	f3000400 	vshl.u8	d0, d0, d0
    5be0:	009f5201 	addseq	r5, pc, r1, lsl #4
    5be4:	00000000 	andeq	r0, r0, r0
    5be8:	01000000 	mrseq	r0, (UNDEF: 0)
    5bec:	00005200 	andeq	r5, r0, r0, lsl #4
    5bf0:	00000000 	andeq	r0, r0, r0
    5bf4:	00040000 	andeq	r0, r4, r0
    5bf8:	9f5201f3 	svcls	0x005201f3
	...
    5c0c:	007d0002 	rsbseq	r0, sp, r2
	...
    5c18:	107d0002 	rsbsne	r0, sp, r2
	...
    5c34:	00500001 	subseq	r0, r0, r1
    5c38:	00000000 	andeq	r0, r0, r0
    5c3c:	01000000 	mrseq	r0, (UNDEF: 0)
    5c40:	00005400 	andeq	r5, r0, r0, lsl #8
    5c44:	00000000 	andeq	r0, r0, r0
    5c48:	00010000 	andeq	r0, r1, r0
    5c4c:	00000050 	andeq	r0, r0, r0, asr r0
    5c50:	00000000 	andeq	r0, r0, r0
    5c54:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    5c70:	00510001 	subseq	r0, r1, r1
    5c74:	00000000 	andeq	r0, r0, r0
    5c78:	04000000 	streq	r0, [r0], #-0
    5c7c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    5c80:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    5c84:	00000000 	andeq	r0, r0, r0
    5c88:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    5c94:	01f30004 	mvnseq	r0, r4
    5c98:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    5cac:	00500001 	subseq	r0, r0, r1
	...
    5cbc:	02000000 	andeq	r0, r0, #0
    5cc0:	00007d00 	andeq	r7, r0, r0, lsl #26
    5cc4:	00000000 	andeq	r0, r0, r0
    5cc8:	02000000 	andeq	r0, r0, #0
    5ccc:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    5ce4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    5cf0:	00540001 	subseq	r0, r4, r1
    5cf4:	00000000 	andeq	r0, r0, r0
    5cf8:	04000000 	streq	r0, [r0], #-0
    5cfc:	5001f300 	andpl	pc, r1, r0, lsl #6
    5d00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    5d14:	01000000 	mrseq	r0, (UNDEF: 0)
    5d18:	00005100 	andeq	r5, r0, r0, lsl #2
    5d1c:	00000000 	andeq	r0, r0, r0
    5d20:	00010000 	andeq	r0, r1, r0
    5d24:	00000055 	andeq	r0, r0, r5, asr r0
    5d28:	00000000 	andeq	r0, r0, r0
    5d2c:	f3000400 	vshl.u8	d0, d0, d0
    5d30:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    5d44:	53000100 	movwpl	r0, #256	; 0x100
	...
    5d50:	00000002 	andeq	r0, r0, r2
	...
    5d60:	9f300002 	svcls	0x00300002
	...
    5d6c:	00520001 	subseq	r0, r2, r1
    5d70:	00000000 	andeq	r0, r0, r0
    5d74:	05000000 	streq	r0, [r0, #-0]
    5d78:	00733100 	rsbseq	r3, r3, r0, lsl #2
    5d7c:	00009f24 	andeq	r9, r0, r4, lsr #30
    5d80:	00000000 	andeq	r0, r0, r0
    5d84:	00010000 	andeq	r0, r1, r0
    5d88:	00000052 	andeq	r0, r0, r2, asr r0
    5d8c:	00000000 	andeq	r0, r0, r0
    5d90:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    5da0:	02000000 	andeq	r0, r0, #0
    5da4:	009f3000 	addseq	r3, pc, r0
    5da8:	00000000 	andeq	r0, r0, r0
    5dac:	01000000 	mrseq	r0, (UNDEF: 0)
    5db0:	00005c00 	andeq	r5, r0, r0, lsl #24
    5db4:	00000000 	andeq	r0, r0, r0
    5db8:	00060000 	andeq	r0, r6, r0
    5dbc:	00750072 	rsbseq	r0, r5, r2, ror r0
    5dc0:	00009f1a 	andeq	r9, r0, sl, lsl pc
    5dc4:	00000000 	andeq	r0, r0, r0
    5dc8:	00080000 	andeq	r0, r8, r0
    5dcc:	24007331 	strcs	r7, [r0], #-817	; 0xfffffccf
    5dd0:	9f1a0075 	svcls	0x001a0075
	...
    5ddc:	005c0001 	subseq	r0, ip, r1
    5de0:	00000000 	andeq	r0, r0, r0
    5de4:	04000000 	streq	r0, [r0], #-0
    5de8:	00000000 	andeq	r0, r0, r0
    5dec:	00000100 	andeq	r0, r0, r0, lsl #2
    5df0:	00000000 	andeq	r0, r0, r0
    5df4:	02000000 	andeq	r0, r0, #0
    5df8:	009f3000 	addseq	r3, pc, r0
    5dfc:	00000000 	andeq	r0, r0, r0
    5e00:	01000000 	mrseq	r0, (UNDEF: 0)
    5e04:	00005000 	andeq	r5, r0, r0
    5e08:	00000000 	andeq	r0, r0, r0
    5e0c:	00010000 	andeq	r0, r1, r0
    5e10:	00000050 	andeq	r0, r0, r0, asr r0
    5e14:	00000000 	andeq	r0, r0, r0
    5e18:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    5e24:	080010fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, ip}
    5e28:	08001100 	stmdaeq	r0, {r8, ip}
    5e2c:	007d0002 	rsbseq	r0, sp, r2
    5e30:	08001100 	stmdaeq	r0, {r8, ip}
    5e34:	08001102 	stmdaeq	r0, {r1, r8, ip}
    5e38:	187d0002 	ldmdane	sp!, {r1}^
    5e3c:	08001102 	stmdaeq	r0, {r1, r8, ip}
    5e40:	080013d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, ip}
    5e44:	207d0002 	rsbscs	r0, sp, r2
    5e48:	080013d0 	stmdaeq	r0, {r4, r6, r7, r8, r9, ip}
    5e4c:	080013e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, ip}
    5e50:	187d0002 	ldmdane	sp!, {r1}^
	...
    5e60:	10fc0000 	rscsne	r0, ip, r0
    5e64:	11500800 	cmpne	r0, r0, lsl #16
    5e68:	00010800 	andeq	r0, r1, r0, lsl #16
    5e6c:	00115050 	andseq	r5, r1, r0, asr r0
    5e70:	0013d408 	andseq	sp, r3, r8, lsl #8
    5e74:	57000108 	strpl	r0, [r0, -r8, lsl #2]
    5e78:	080013d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, r9, ip}
    5e7c:	080013e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, ip}
    5e80:	01f30004 	mvnseq	r0, r4
    5e84:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    5e94:	080010fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, ip}
    5e98:	0800114e 	stmdaeq	r0, {r1, r2, r3, r6, r8, ip}
    5e9c:	4e510001 	cdpmi	0, 5, cr0, cr1, cr1, {0}
    5ea0:	d4080011 	strle	r0, [r8], #-17	; 0xffffffef
    5ea4:	01080013 	tsteq	r8, r3, lsl r0
    5ea8:	13d45600 	bicsne	r5, r4, #0, 12
    5eac:	13e40800 	mvnne	r0, #0, 16
    5eb0:	00040800 	andeq	r0, r4, r0, lsl #16
    5eb4:	9f5101f3 	svcls	0x005101f3
	...
    5ec0:	11b00000 	movsne	r0, r0
    5ec4:	13d40800 	bicsne	r0, r4, #0, 16
    5ec8:	00010800 	andeq	r0, r1, r0, lsl #16
    5ecc:	00000054 	andeq	r0, r0, r4, asr r0
    5ed0:	00000000 	andeq	r0, r0, r0
    5ed4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    5ee4:	06000000 	streq	r0, [r0], -r0
    5ee8:	b0080011 	andlt	r0, r8, r1, lsl r0
    5eec:	02080011 	andeq	r0, r8, #17
    5ef0:	b09f3000 	addslt	r3, pc, r0
    5ef4:	d6080011 			; <UNDEFINED> instruction: 0xd6080011
    5ef8:	01080011 	tsteq	r8, r1, lsl r0
    5efc:	11d65500 	bicsne	r5, r6, r0, lsl #10
    5f00:	11de0800 	bicsne	r0, lr, r0, lsl #16
    5f04:	00050800 	andeq	r0, r5, r0, lsl #16
    5f08:	24007431 	strcs	r7, [r0], #-1073	; 0xfffffbcf
    5f0c:	0011de9f 	mulseq	r1, pc, lr	; <UNPREDICTABLE>
    5f10:	0011e808 	andseq	lr, r1, r8, lsl #16
    5f14:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    5f18:	080011e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, ip}
    5f1c:	080012cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, ip}
    5f20:	74310005 	ldrtvc	r0, [r1], #-5
    5f24:	d49f2400 	ldrle	r2, [pc], #1024	; 5f2c <_Min_Heap_Size+0x572c>
    5f28:	ee080012 	mcr	0, 0, r0, cr8, cr2, {0}
    5f2c:	01080012 	tsteq	r8, r2, lsl r0
    5f30:	12ee5500 	rscne	r5, lr, #0, 10
    5f34:	13b80800 			; <UNDEFINED> instruction: 0x13b80800
    5f38:	00050800 	andeq	r0, r5, r0, lsl #16
    5f3c:	24007431 	strcs	r7, [r0], #-1073	; 0xfffffbcf
    5f40:	0013b89f 	mulseq	r3, pc, r8	; <UNPREDICTABLE>
    5f44:	0013ba08 	andseq	fp, r3, r8, lsl #20
    5f48:	73000608 	movwvc	r0, #1544	; 0x608
    5f4c:	24007400 	strcs	r7, [r0], #-1024	; 0xfffffc00
    5f50:	0013ba9f 	mulseq	r3, pc, sl	; <UNPREDICTABLE>
    5f54:	0013ce08 	andseq	ip, r3, r8, lsl #28
    5f58:	31000508 	tstcc	r0, r8, lsl #10
    5f5c:	9f240074 	svcls	0x00240074
	...
    5f68:	00000003 	andeq	r0, r0, r3
    5f6c:	11060000 	mrsne	r0, (UNDEF: 6)
    5f70:	11b00800 	lslsne	r0, r0, #16
    5f74:	00020800 	andeq	r0, r2, r0, lsl #16
    5f78:	11b09f30 	lsrsne	r9, r0, pc
    5f7c:	12cc0800 	sbcne	r0, ip, #0, 16
    5f80:	00010800 	andeq	r0, r1, r0, lsl #16
    5f84:	0012da58 	andseq	sp, r2, r8, asr sl
    5f88:	0013ce08 	andseq	ip, r3, r8, lsl #28
    5f8c:	58000108 	stmdapl	r0, {r3, r8}
	...
    5f98:	00000004 	andeq	r0, r0, r4
	...
    5fc8:	08001106 	stmdaeq	r0, {r1, r2, r8, ip}
    5fcc:	080011b0 	stmdaeq	r0, {r4, r5, r7, r8, ip}
    5fd0:	9f300002 	svcls	0x00300002
    5fd4:	080011b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, ip}
    5fd8:	080011c8 	stmdaeq	r0, {r3, r6, r7, r8, ip}
    5fdc:	c8520001 	ldmdagt	r2, {r0}^
    5fe0:	cc080011 	stcgt	0, cr0, [r8], {17}
    5fe4:	01080011 	tsteq	r8, r1, lsl r0
    5fe8:	11cc5300 	bicne	r5, ip, r0, lsl #6
    5fec:	11da0800 	bicsne	r0, sl, r0, lsl #16
    5ff0:	00010800 	andeq	r0, r1, r0, lsl #16
    5ff4:	0011da52 	andseq	sp, r1, r2, asr sl
    5ff8:	0011de08 	andseq	sp, r1, r8, lsl #28
    5ffc:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    6000:	0800122e 	stmdaeq	r0, {r1, r2, r3, r5, r9, ip}
    6004:	08001242 	stmdaeq	r0, {r1, r6, r9, ip}
    6008:	42500001 	subsmi	r0, r0, #1
    600c:	48080012 	stmdami	r8, {r1, r4}
    6010:	01080012 	tsteq	r8, r2, lsl r0
    6014:	12525300 	subsne	r5, r2, #0, 6
    6018:	12660800 	rsbne	r0, r6, #0, 16
    601c:	00010800 	andeq	r0, r1, r0, lsl #16
    6020:	00126650 	andseq	r6, r2, r0, asr r6
    6024:	00127008 	andseq	r7, r2, r8
    6028:	53000108 	movwpl	r0, #264	; 0x108
    602c:	08001270 	stmdaeq	r0, {r4, r5, r6, r9, ip}
    6030:	08001272 	stmdaeq	r0, {r1, r4, r5, r6, r9, ip}
    6034:	00720007 	rsbseq	r0, r2, r7
    6038:	00712432 	rsbseq	r2, r1, r2, lsr r4
    603c:	00127222 	andseq	r7, r2, r2, lsr #4
    6040:	00127a08 	andseq	r7, r2, r8, lsl #20
    6044:	52000108 	andpl	r0, r0, #8, 2
    6048:	0800127a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9, ip}
    604c:	0800128c 	stmdaeq	r0, {r2, r3, r7, r9, ip}
    6050:	8c510001 	mrrchi	0, 0, r0, r1, cr1
    6054:	90080012 	andls	r0, r8, r2, lsl r0
    6058:	01080012 	tsteq	r8, r2, lsl r0
    605c:	12905200 	addsne	r5, r0, #0, 4
    6060:	12a20800 	adcne	r0, r2, #0, 16
    6064:	00010800 	andeq	r0, r1, r0, lsl #16
    6068:	0012a251 	andseq	sl, r2, r1, asr r2
    606c:	0012a608 	andseq	sl, r2, r8, lsl #12
    6070:	52000108 	andpl	r0, r0, #8, 2
    6074:	080012a6 	stmdaeq	r0, {r1, r2, r5, r7, r9, ip}
    6078:	080012b8 	stmdaeq	r0, {r3, r4, r5, r7, r9, ip}
    607c:	b8510001 	ldmdalt	r1, {r0}^
    6080:	ba080012 	blt	2060d0 <_Min_Heap_Size+0x2058d0>
    6084:	01080012 	tsteq	r8, r2, lsl r0
    6088:	12ba5200 	adcsne	r5, sl, #0, 4
    608c:	12ca0800 	sbcne	r0, sl, #0, 16
    6090:	00010800 	andeq	r0, r1, r0, lsl #16
    6094:	00130253 	andseq	r0, r3, r3, asr r2
    6098:	00131208 	andseq	r1, r3, r8, lsl #4
    609c:	52000108 	andpl	r0, r0, #8, 2
    60a0:	08001312 	stmdaeq	r0, {r1, r4, r8, r9, ip}
    60a4:	08001314 	stmdaeq	r0, {r2, r4, r8, r9, ip}
    60a8:	22530001 	subscs	r0, r3, #1
    60ac:	36080013 			; <UNDEFINED> instruction: 0x36080013
    60b0:	01080013 	tsteq	r8, r3, lsl r0
    60b4:	13365200 	teqne	r6, #0, 4
    60b8:	133a0800 	teqne	sl, #0, 16
    60bc:	00010800 	andeq	r0, r1, r0, lsl #16
    60c0:	00133a53 	andseq	r3, r3, r3, asr sl
    60c4:	00134408 	andseq	r4, r3, r8, lsl #8
    60c8:	77000208 	strvc	r0, [r0, -r8, lsl #4]
    60cc:	00136200 	andseq	r6, r3, r0, lsl #4
    60d0:	0013ce08 	andseq	ip, r3, r8, lsl #28
    60d4:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    6124:	00500001 	subseq	r0, r0, r1
    6128:	00000000 	andeq	r0, r0, r0
    612c:	04000000 	streq	r0, [r0], #-0
    6130:	5001f300 	andpl	pc, r1, r0, lsl #6
    6134:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6138:	00000000 	andeq	r0, r0, r0
    613c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6148:	01f30004 	mvnseq	r0, r4
    614c:	00009f50 	andeq	r9, r0, r0, asr pc
    6150:	00000000 	andeq	r0, r0, r0
    6154:	00010000 	andeq	r0, r1, r0
    6158:	00000050 	andeq	r0, r0, r0, asr r0
    615c:	00000000 	andeq	r0, r0, r0
    6160:	f3000400 	vshl.u8	d0, d0, d0
    6164:	009f5001 	addseq	r5, pc, r1
    6168:	00000000 	andeq	r0, r0, r0
    616c:	01000000 	mrseq	r0, (UNDEF: 0)
    6170:	00005000 	andeq	r5, r0, r0
    6174:	00000000 	andeq	r0, r0, r0
    6178:	00040000 	andeq	r0, r4, r0
    617c:	9f5001f3 	svcls	0x005001f3
	...
    6188:	00500001 	subseq	r0, r0, r1
    618c:	00000000 	andeq	r0, r0, r0
    6190:	04000000 	streq	r0, [r0], #-0
    6194:	5001f300 	andpl	pc, r1, r0, lsl #6
    6198:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    619c:	00000000 	andeq	r0, r0, r0
    61a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    61ac:	01f30004 	mvnseq	r0, r4
    61b0:	00009f50 	andeq	r9, r0, r0, asr pc
    61b4:	00000000 	andeq	r0, r0, r0
    61b8:	00010000 	andeq	r0, r1, r0
    61bc:	00000050 	andeq	r0, r0, r0, asr r0
    61c0:	00000000 	andeq	r0, r0, r0
    61c4:	f3000400 	vshl.u8	d0, d0, d0
    61c8:	009f5001 	addseq	r5, pc, r1
    61cc:	00000000 	andeq	r0, r0, r0
    61d0:	01000000 	mrseq	r0, (UNDEF: 0)
    61d4:	00005000 	andeq	r5, r0, r0
    61d8:	00000000 	andeq	r0, r0, r0
    61dc:	00040000 	andeq	r0, r4, r0
    61e0:	9f5001f3 	svcls	0x005001f3
	...
    61ec:	00500001 	subseq	r0, r0, r1
    61f0:	00000000 	andeq	r0, r0, r0
    61f4:	04000000 	streq	r0, [r0], #-0
    61f8:	5001f300 	andpl	pc, r1, r0, lsl #6
    61fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6200:	00000000 	andeq	r0, r0, r0
    6204:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6210:	01f30004 	mvnseq	r0, r4
    6214:	00009f50 	andeq	r9, r0, r0, asr pc
    6218:	00000000 	andeq	r0, r0, r0
    621c:	00010000 	andeq	r0, r1, r0
    6220:	00000050 	andeq	r0, r0, r0, asr r0
    6224:	00000000 	andeq	r0, r0, r0
    6228:	f3000400 	vshl.u8	d0, d0, d0
    622c:	009f5001 	addseq	r5, pc, r1
    6230:	00000000 	andeq	r0, r0, r0
    6234:	01000000 	mrseq	r0, (UNDEF: 0)
    6238:	00005000 	andeq	r5, r0, r0
    623c:	00000000 	andeq	r0, r0, r0
    6240:	00040000 	andeq	r0, r4, r0
    6244:	9f5001f3 	svcls	0x005001f3
	...
    6250:	00500001 	subseq	r0, r0, r1
    6254:	00000000 	andeq	r0, r0, r0
    6258:	04000000 	streq	r0, [r0], #-0
    625c:	5001f300 	andpl	pc, r1, r0, lsl #6
    6260:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6264:	00000000 	andeq	r0, r0, r0
    6268:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6274:	01f30004 	mvnseq	r0, r4
    6278:	00009f50 	andeq	r9, r0, r0, asr pc
    627c:	00000000 	andeq	r0, r0, r0
    6280:	00010000 	andeq	r0, r1, r0
    6284:	00000050 	andeq	r0, r0, r0, asr r0
    6288:	00000000 	andeq	r0, r0, r0
    628c:	f3000400 	vshl.u8	d0, d0, d0
    6290:	009f5001 	addseq	r5, pc, r1
    6294:	00000000 	andeq	r0, r0, r0
    6298:	02000000 	andeq	r0, r0, #0
	...
    62a4:	02000000 	andeq	r0, r0, #0
    62a8:	009f3000 	addseq	r3, pc, r0
    62ac:	00000000 	andeq	r0, r0, r0
    62b0:	01000000 	mrseq	r0, (UNDEF: 0)
    62b4:	00005000 	andeq	r5, r0, r0
	...
    62fc:	00530001 	subseq	r0, r3, r1
    6300:	00000000 	andeq	r0, r0, r0
    6304:	02000000 	andeq	r0, r0, #0
    6308:	00287000 	eoreq	r7, r8, r0
    630c:	00000000 	andeq	r0, r0, r0
    6310:	05000000 	streq	r0, [r0, #-0]
    6314:	5001f300 	andpl	pc, r1, r0, lsl #6
    6318:	00002823 	andeq	r2, r0, r3, lsr #16
    631c:	00000000 	andeq	r0, r0, r0
    6320:	00010000 	andeq	r0, r1, r0
    6324:	00000053 	andeq	r0, r0, r3, asr r0
    6328:	00000000 	andeq	r0, r0, r0
    632c:	70000200 	andvc	r0, r0, r0, lsl #4
    6330:	00000028 	andeq	r0, r0, r8, lsr #32
    6334:	00000000 	andeq	r0, r0, r0
    6338:	f3000500 	vrshl.u8	d0, d0, d0
    633c:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    6348:	00530001 	subseq	r0, r3, r1
    634c:	00000000 	andeq	r0, r0, r0
    6350:	02000000 	andeq	r0, r0, #0
    6354:	00287000 	eoreq	r7, r8, r0
    6358:	00000000 	andeq	r0, r0, r0
    635c:	05000000 	streq	r0, [r0, #-0]
    6360:	5001f300 	andpl	pc, r1, r0, lsl #6
    6364:	00002823 	andeq	r2, r0, r3, lsr #16
    6368:	00000000 	andeq	r0, r0, r0
    636c:	00010000 	andeq	r0, r1, r0
    6370:	00000053 	andeq	r0, r0, r3, asr r0
    6374:	00000000 	andeq	r0, r0, r0
    6378:	70000200 	andvc	r0, r0, r0, lsl #4
    637c:	00000028 	andeq	r0, r0, r8, lsr #32
    6380:	00000000 	andeq	r0, r0, r0
    6384:	f3000500 	vrshl.u8	d0, d0, d0
    6388:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    6394:	00530001 	subseq	r0, r3, r1
    6398:	00000000 	andeq	r0, r0, r0
    639c:	02000000 	andeq	r0, r0, #0
    63a0:	00287000 	eoreq	r7, r8, r0
    63a4:	00000000 	andeq	r0, r0, r0
    63a8:	05000000 	streq	r0, [r0, #-0]
    63ac:	5001f300 	andpl	pc, r1, r0, lsl #6
    63b0:	00002823 	andeq	r2, r0, r3, lsr #16
    63b4:	00000000 	andeq	r0, r0, r0
    63b8:	00020000 	andeq	r0, r2, r0
    63bc:	00002870 	andeq	r2, r0, r0, ror r8
    63c0:	00000000 	andeq	r0, r0, r0
    63c4:	00050000 	andeq	r0, r5, r0
    63c8:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    63cc:	00000028 	andeq	r0, r0, r8, lsr #32
    63d0:	00000000 	andeq	r0, r0, r0
    63d4:	70000200 	andvc	r0, r0, r0, lsl #4
    63d8:	00000028 	andeq	r0, r0, r8, lsr #32
    63dc:	00000000 	andeq	r0, r0, r0
    63e0:	f3000500 	vrshl.u8	d0, d0, d0
    63e4:	28235001 	stmdacs	r3!, {r0, ip, lr}
	...
    63f0:	00530001 	subseq	r0, r3, r1
    63f4:	00000000 	andeq	r0, r0, r0
    63f8:	02000000 	andeq	r0, r0, #0
    63fc:	00287000 	eoreq	r7, r8, r0
    6400:	00000000 	andeq	r0, r0, r0
    6404:	05000000 	streq	r0, [r0, #-0]
    6408:	5001f300 	andpl	pc, r1, r0, lsl #6
    640c:	00002823 	andeq	r2, r0, r3, lsr #16
    6410:	00000000 	andeq	r0, r0, r0
    6414:	00020000 	andeq	r0, r2, r0
    6418:	00002870 	andeq	r2, r0, r0, ror r8
    641c:	00000000 	andeq	r0, r0, r0
    6420:	00050000 	andeq	r0, r5, r0
    6424:	235001f3 	cmpcs	r0, #-1073741764	; 0xc000003c
    6428:	00000028 	andeq	r0, r0, r8, lsr #32
    642c:	00000000 	andeq	r0, r0, r0
    6430:	53000100 	movwpl	r0, #256	; 0x100
	...
    643c:	28700002 	ldmdacs	r0!, {r1}^
	...
    6448:	01f30005 	mvnseq	r0, r5
    644c:	00282350 	eoreq	r2, r8, r0, asr r3
	...
    645c:	02000000 	andeq	r0, r0, #0
    6460:	00007d00 	andeq	r7, r0, r0, lsl #26
    6464:	00000000 	andeq	r0, r0, r0
    6468:	02000000 	andeq	r0, r0, #0
    646c:	00047d00 	andeq	r7, r4, r0, lsl #26
    6470:	00000000 	andeq	r0, r0, r0
    6474:	02000000 	andeq	r0, r0, #0
    6478:	00007d00 	andeq	r7, r0, r0, lsl #26
    647c:	00000000 	andeq	r0, r0, r0
    6480:	02000000 	andeq	r0, r0, #0
    6484:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
    649c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    64a8:	01f30004 	mvnseq	r0, r4
    64ac:	00009f50 	andeq	r9, r0, r0, asr pc
    64b0:	00000000 	andeq	r0, r0, r0
    64b4:	00010000 	andeq	r0, r1, r0
    64b8:	00000050 	andeq	r0, r0, r0, asr r0
	...
    64cc:	52000100 	andpl	r0, r0, #0, 2
	...
    64d8:	0071001e 	rsbseq	r0, r1, lr, lsl r0
    64dc:	29f730f7 	ldmibcs	r7!, {r0, r1, r2, r4, r5, r6, r7, ip, sp}^
    64e0:	ab0829f4 	blge	210cb8 <_Min_Heap_Size+0x2104b8>
    64e4:	00aaaaaa 	adceq	sl, sl, sl, lsr #21
    64e8:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    64ec:	29f72008 	ldmibcs	r7!, {r3, sp}^
    64f0:	f730f725 			; <UNDEFINED> instruction: 0xf730f725
    64f4:	9f253400 	svcls	0x00253400
	...
    6508:	007d0002 	rsbseq	r0, sp, r2
	...
    6514:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    6520:	007d0002 	rsbseq	r0, sp, r2
	...
    652c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    6548:	00010000 	andeq	r0, r1, r0
    654c:	00000053 	andeq	r0, r0, r3, asr r0
    6550:	00000000 	andeq	r0, r0, r0
    6554:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
    6558:	00000004 	andeq	r0, r0, r4
    655c:	00000000 	andeq	r0, r0, r0
    6560:	f3000400 	vshl.u8	d0, d0, d0
    6564:	009f5301 	addseq	r5, pc, r1, lsl #6
    6568:	00000000 	andeq	r0, r0, r0
    656c:	02000000 	andeq	r0, r0, #0
    6570:	00047400 	andeq	r7, r4, r0, lsl #8
    6574:	00000000 	andeq	r0, r0, r0
    6578:	04000000 	streq	r0, [r0], #-0
    657c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    6580:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6594:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    65a0:	01f30004 	mvnseq	r0, r4
    65a4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    65b8:	00010000 	andeq	r0, r1, r0
    65bc:	00000050 	andeq	r0, r0, r0, asr r0
    65c0:	00000000 	andeq	r0, r0, r0
    65c4:	f3000400 	vshl.u8	d0, d0, d0
    65c8:	009f5001 	addseq	r5, pc, r1
	...
    65e0:	01000000 	mrseq	r0, (UNDEF: 0)
    65e4:	00005000 	andeq	r5, r0, r0
    65e8:	00000000 	andeq	r0, r0, r0
    65ec:	00010000 	andeq	r0, r1, r0
    65f0:	00000053 	andeq	r0, r0, r3, asr r0
    65f4:	00000000 	andeq	r0, r0, r0
    65f8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6604:	00530001 	subseq	r0, r3, r1
    6608:	00000000 	andeq	r0, r0, r0
    660c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    661c:	30000200 	andcc	r0, r0, r0, lsl #4
    6620:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6624:	00000000 	andeq	r0, r0, r0
    6628:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6634:	9f300002 	svcls	0x00300002
	...
    664c:	00500001 	subseq	r0, r0, r1
    6650:	00000000 	andeq	r0, r0, r0
    6654:	01000000 	mrseq	r0, (UNDEF: 0)
    6658:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    6670:	00520001 	subseq	r0, r2, r1
    6674:	00000000 	andeq	r0, r0, r0
    6678:	04000000 	streq	r0, [r0], #-0
    667c:	5201f300 	andpl	pc, r1, #0, 6
    6680:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6684:	00000000 	andeq	r0, r0, r0
    6688:	52000100 	andpl	r0, r0, #0, 2
	...
    6694:	00000001 	andeq	r0, r0, r1
	...
    66a0:	00020000 	andeq	r0, r2, r0
    66a4:	00009f30 	andeq	r9, r0, r0, lsr pc
    66a8:	00000000 	andeq	r0, r0, r0
    66ac:	00010000 	andeq	r0, r1, r0
    66b0:	00000050 	andeq	r0, r0, r0, asr r0
    66b4:	00000000 	andeq	r0, r0, r0
    66b8:	30000200 	andcc	r0, r0, r0, lsl #4
    66bc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    66cc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    66d8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    66dc:	00000014 	andeq	r0, r0, r4, lsl r0
    66e0:	00000000 	andeq	r0, r0, r0
    66e4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    66e8:	00000020 	andeq	r0, r0, r0, lsr #32
    66ec:	00000000 	andeq	r0, r0, r0
    66f0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    66f4:	00000014 	andeq	r0, r0, r4, lsl r0
	...
    6710:	01000000 	mrseq	r0, (UNDEF: 0)
    6714:	00005000 	andeq	r5, r0, r0
    6718:	00000000 	andeq	r0, r0, r0
    671c:	00010000 	andeq	r0, r1, r0
    6720:	00000054 	andeq	r0, r0, r4, asr r0
    6724:	00000000 	andeq	r0, r0, r0
    6728:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6734:	00540001 	subseq	r0, r4, r1
    6738:	00000000 	andeq	r0, r0, r0
    673c:	01000000 	mrseq	r0, (UNDEF: 0)
    6740:	00005000 	andeq	r5, r0, r0
    6744:	00000000 	andeq	r0, r0, r0
    6748:	00010000 	andeq	r0, r1, r0
    674c:	00000054 	andeq	r0, r0, r4, asr r0
    6750:	00000000 	andeq	r0, r0, r0
    6754:	f3000400 	vshl.u8	d0, d0, d0
    6758:	009f5001 	addseq	r5, pc, r1
	...
    676c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    6780:	00010000 	andeq	r0, r1, r0
    6784:	00000055 	andeq	r0, r0, r5, asr r0
	...
    6794:	01000000 	mrseq	r0, (UNDEF: 0)
    6798:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    67a8:	00020000 	andeq	r0, r2, r0
    67ac:	0000007d 	andeq	r0, r0, sp, ror r0
    67b0:	00000000 	andeq	r0, r0, r0
    67b4:	00020000 	andeq	r0, r2, r0
    67b8:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    67cc:	00010000 	andeq	r0, r1, r0
    67d0:	00000050 	andeq	r0, r0, r0, asr r0
    67d4:	00000000 	andeq	r0, r0, r0
    67d8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    67f0:	00510001 	subseq	r0, r1, r1
    67f4:	00000000 	andeq	r0, r0, r0
    67f8:	04000000 	streq	r0, [r0], #-0
    67fc:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    6800:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6814:	52000100 	andpl	r0, r0, #0, 2
	...
    6820:	00560001 	subseq	r0, r6, r1
	...
    6834:	01000000 	mrseq	r0, (UNDEF: 0)
    6838:	00005a00 	andeq	r5, r0, r0, lsl #20
    683c:	00000000 	andeq	r0, r0, r0
    6840:	00010000 	andeq	r0, r1, r0
    6844:	0000005a 	andeq	r0, r0, sl, asr r0
	...
    6850:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    6860:	01000000 	mrseq	r0, (UNDEF: 0)
    6864:	00005000 	andeq	r5, r0, r0
    6868:	00000000 	andeq	r0, r0, r0
    686c:	00010000 	andeq	r0, r1, r0
    6870:	00000050 	andeq	r0, r0, r0, asr r0
    6874:	00000000 	andeq	r0, r0, r0
    6878:	59000100 	stmdbpl	r0, {r8}
	...
    6884:	00500001 	subseq	r0, r0, r1
    6888:	00000000 	andeq	r0, r0, r0
    688c:	01000000 	mrseq	r0, (UNDEF: 0)
    6890:	00005900 	andeq	r5, r0, r0, lsl #18
    6894:	00000000 	andeq	r0, r0, r0
    6898:	00010000 	andeq	r0, r1, r0
    689c:	00000050 	andeq	r0, r0, r0, asr r0
    68a0:	00000000 	andeq	r0, r0, r0
    68a4:	59000100 	stmdbpl	r0, {r8}
	...
    68bc:	00530001 	subseq	r0, r3, r1
    68c0:	00000000 	andeq	r0, r0, r0
    68c4:	01000000 	mrseq	r0, (UNDEF: 0)
    68c8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    68dc:	00010000 	andeq	r0, r1, r0
    68e0:	00000057 	andeq	r0, r0, r7, asr r0
    68e4:	00000000 	andeq	r0, r0, r0
    68e8:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    68fc:	08001478 	stmdaeq	r0, {r3, r4, r5, r6, sl, ip}
    6900:	08001488 	stmdaeq	r0, {r3, r7, sl, ip}
    6904:	88500001 	ldmdahi	r0, {r0}^
    6908:	8a080014 	bhi	206960 <_Min_Heap_Size+0x206160>
    690c:	04080014 	streq	r0, [r8], #-20	; 0xffffffec
    6910:	5001f300 	andpl	pc, r1, r0, lsl #6
    6914:	00148a9f 	mulseq	r4, pc, sl	; <UNPREDICTABLE>
    6918:	00149c08 	andseq	r9, r4, r8, lsl #24
    691c:	50000108 	andpl	r0, r0, r8, lsl #2
    6920:	0800149c 	stmdaeq	r0, {r2, r3, r4, r7, sl, ip}
    6924:	0800149e 	stmdaeq	r0, {r1, r2, r3, r4, r7, sl, ip}
    6928:	01f30004 	mvnseq	r0, r4
    692c:	00009f50 	andeq	r9, r0, r0, asr pc
    6930:	00000000 	andeq	r0, r0, r0
    6934:	13e40000 	mvnne	r0, #0
    6938:	13e60800 	mvnne	r0, #0, 16
    693c:	00020800 	andeq	r0, r2, r0, lsl #16
    6940:	13e6007d 	mvnne	r0, #125	; 0x7d
    6944:	14780800 	ldrbtne	r0, [r8], #-2048	; 0xfffff800
    6948:	00020800 	andeq	r0, r2, r0, lsl #16
    694c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    6958:	13e40000 	mvnne	r0, #0
    695c:	13ed0800 	mvnne	r0, #0, 16
    6960:	00010800 	andeq	r0, r1, r0, lsl #16
    6964:	0013ed50 	andseq	lr, r3, r0, asr sp
    6968:	00147808 	andseq	r7, r4, r8, lsl #16
    696c:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    6978:	13ea0000 	mvnne	r0, #0
    697c:	14780800 	ldrbtne	r0, [r8], #-2048	; 0xfffff800
    6980:	00010800 	andeq	r0, r1, r0, lsl #16
    6984:	00000056 	andeq	r0, r0, r6, asr r0
	...
    6990:	00000101 	andeq	r0, r0, r1, lsl #2
    6994:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    6998:	04080013 	streq	r0, [r8], #-19	; 0xffffffed
    699c:	01080014 	tsteq	r8, r4, lsl r0
    69a0:	14065000 	strne	r5, [r6], #-0
    69a4:	14340800 	ldrtne	r0, [r4], #-2048	; 0xfffff800
    69a8:	00010800 	andeq	r0, r1, r0, lsl #16
    69ac:	00143450 	andseq	r3, r4, r0, asr r4
    69b0:	00145a08 	andseq	r5, r4, r8, lsl #20
    69b4:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    69b8:	0800145a 	stmdaeq	r0, {r1, r3, r4, r6, sl, ip}
    69bc:	08001462 	stmdaeq	r0, {r1, r5, r6, sl, ip}
    69c0:	62500001 	subsvs	r0, r0, #1
    69c4:	78080014 	stmdavc	r8, {r2, r4}
    69c8:	01080014 	tsteq	r8, r4, lsl r0
    69cc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    69dc:	00020000 	andeq	r0, r2, r0
    69e0:	0000007d 	andeq	r0, r0, sp, ror r0
    69e4:	00000000 	andeq	r0, r0, r0
    69e8:	00020000 	andeq	r0, r2, r0
    69ec:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    6a04:	00010000 	andeq	r0, r1, r0
    6a08:	00000050 	andeq	r0, r0, r0, asr r0
    6a0c:	00000000 	andeq	r0, r0, r0
    6a10:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6a1c:	00500001 	subseq	r0, r0, r1
    6a20:	00000000 	andeq	r0, r0, r0
    6a24:	01000000 	mrseq	r0, (UNDEF: 0)
    6a28:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    6a40:	00010000 	andeq	r0, r1, r0
    6a44:	00000051 	andeq	r0, r0, r1, asr r0
    6a48:	00000000 	andeq	r0, r0, r0
    6a4c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    6a58:	00510001 	subseq	r0, r1, r1
    6a5c:	00000000 	andeq	r0, r0, r0
    6a60:	01000000 	mrseq	r0, (UNDEF: 0)
    6a64:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    6a78:	00010000 	andeq	r0, r1, r0
    6a7c:	00000052 	andeq	r0, r0, r2, asr r0
    6a80:	00000000 	andeq	r0, r0, r0
    6a84:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    6a9c:	00530001 	subseq	r0, r3, r1
    6aa0:	00000000 	andeq	r0, r0, r0
    6aa4:	01000000 	mrseq	r0, (UNDEF: 0)
    6aa8:	00005500 	andeq	r5, r0, r0, lsl #10
    6aac:	00000000 	andeq	r0, r0, r0
    6ab0:	02010000 	andeq	r0, r1, #0
    6ab4:	00000002 	andeq	r0, r0, r2
	...
    6ac0:	9f300002 	svcls	0x00300002
	...
    6acc:	9f320002 	svcls	0x00320002
	...
    6ad8:	9f300002 	svcls	0x00300002
	...
    6aec:	00010000 	andeq	r0, r1, r0
    6af0:	00000058 	andeq	r0, r0, r8, asr r0
	...
    6b00:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6b0c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6b10:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    6b28:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6b34:	00540001 	subseq	r0, r4, r1
    6b38:	00000000 	andeq	r0, r0, r0
    6b3c:	01000000 	mrseq	r0, (UNDEF: 0)
    6b40:	00005000 	andeq	r5, r0, r0
    6b44:	00000000 	andeq	r0, r0, r0
    6b48:	00010000 	andeq	r0, r1, r0
    6b4c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    6b64:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    6b70:	00560001 	subseq	r0, r6, r1
    6b74:	00000000 	andeq	r0, r0, r0
    6b78:	01000000 	mrseq	r0, (UNDEF: 0)
    6b7c:	00005100 	andeq	r5, r0, r0, lsl #2
    6b80:	00000000 	andeq	r0, r0, r0
    6b84:	00010000 	andeq	r0, r1, r0
    6b88:	00000056 	andeq	r0, r0, r6, asr r0
	...
    6b9c:	52000100 	andpl	r0, r0, #0, 2
	...
    6ba8:	00570001 	subseq	r0, r7, r1
	...
    6bbc:	01000000 	mrseq	r0, (UNDEF: 0)
    6bc0:	00005300 	andeq	r5, r0, r0, lsl #6
    6bc4:	00000000 	andeq	r0, r0, r0
    6bc8:	00010000 	andeq	r0, r1, r0
    6bcc:	00000055 	andeq	r0, r0, r5, asr r0
    6bd0:	00000000 	andeq	r0, r0, r0
    6bd4:	02020100 	andeq	r0, r2, #0, 2
	...
    6be0:	02000000 	andeq	r0, r0, #0
    6be4:	009f3000 	addseq	r3, pc, r0
    6be8:	00000000 	andeq	r0, r0, r0
    6bec:	02000000 	andeq	r0, r0, #0
    6bf0:	009f3200 	addseq	r3, pc, r0, lsl #4
    6bf4:	00000000 	andeq	r0, r0, r0
    6bf8:	02000000 	andeq	r0, r0, #0
    6bfc:	009f3000 	addseq	r3, pc, r0
	...
    6c0c:	02000000 	andeq	r0, r0, #0
    6c10:	00007d00 	andeq	r7, r0, r0, lsl #26
    6c14:	00000000 	andeq	r0, r0, r0
    6c18:	02000000 	andeq	r0, r0, #0
    6c1c:	00107d00 	andseq	r7, r0, r0, lsl #26
    6c20:	00000000 	andeq	r0, r0, r0
    6c24:	02000000 	andeq	r0, r0, #0
    6c28:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    6c40:	01000000 	mrseq	r0, (UNDEF: 0)
    6c44:	00005000 	andeq	r5, r0, r0
    6c48:	00000000 	andeq	r0, r0, r0
    6c4c:	00010000 	andeq	r0, r1, r0
    6c50:	00000055 	andeq	r0, r0, r5, asr r0
    6c54:	00000000 	andeq	r0, r0, r0
    6c58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6c64:	01f30004 	mvnseq	r0, r4
    6c68:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    6c7c:	00500001 	subseq	r0, r0, r1
	...
    6c8c:	02000000 	andeq	r0, r0, #0
    6c90:	00007d00 	andeq	r7, r0, r0, lsl #26
    6c94:	00000000 	andeq	r0, r0, r0
    6c98:	02000000 	andeq	r0, r0, #0
    6c9c:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    6cb0:	01000000 	mrseq	r0, (UNDEF: 0)
    6cb4:	00005000 	andeq	r5, r0, r0
    6cb8:	00000000 	andeq	r0, r0, r0
    6cbc:	00010000 	andeq	r0, r1, r0
    6cc0:	00000054 	andeq	r0, r0, r4, asr r0
    6cc4:	00000000 	andeq	r0, r0, r0
    6cc8:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    6ce0:	02000000 	andeq	r0, r0, #0
    6ce4:	009f3000 	addseq	r3, pc, r0
    6ce8:	00000000 	andeq	r0, r0, r0
    6cec:	02000000 	andeq	r0, r0, #0
    6cf0:	009f3000 	addseq	r3, pc, r0
    6cf4:	00000000 	andeq	r0, r0, r0
    6cf8:	01000000 	mrseq	r0, (UNDEF: 0)
    6cfc:	00005200 	andeq	r5, r0, r0, lsl #4
    6d00:	00000000 	andeq	r0, r0, r0
    6d04:	00010000 	andeq	r0, r1, r0
    6d08:	00000050 	andeq	r0, r0, r0, asr r0
    6d0c:	00000000 	andeq	r0, r0, r0
    6d10:	52000100 	andpl	r0, r0, #0, 2
	...
    6d1c:	00550001 	subseq	r0, r5, r1
    6d20:	00000000 	andeq	r0, r0, r0
    6d24:	01000000 	mrseq	r0, (UNDEF: 0)
    6d28:	00005200 	andeq	r5, r0, r0, lsl #4
    6d2c:	00000000 	andeq	r0, r0, r0
    6d30:	00010000 	andeq	r0, r1, r0
    6d34:	00000055 	andeq	r0, r0, r5, asr r0
    6d38:	00000000 	andeq	r0, r0, r0
    6d3c:	30000200 	andcc	r0, r0, r0, lsl #4
    6d40:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6d4c:	00000001 	andeq	r0, r0, r1
	...
    6d58:	01000000 	mrseq	r0, (UNDEF: 0)
    6d5c:	00005000 	andeq	r5, r0, r0
    6d60:	00000000 	andeq	r0, r0, r0
    6d64:	00010000 	andeq	r0, r1, r0
    6d68:	00000055 	andeq	r0, r0, r5, asr r0
    6d6c:	00000000 	andeq	r0, r0, r0
    6d70:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    6d7c:	00550001 	subseq	r0, r5, r1
    6d80:	00000000 	andeq	r0, r0, r0
    6d84:	01000000 	mrseq	r0, (UNDEF: 0)
    6d88:	00005000 	andeq	r5, r0, r0
	...
    6d9c:	00500001 	subseq	r0, r0, r1
	...
    6dac:	02000000 	andeq	r0, r0, #0
    6db0:	00007d00 	andeq	r7, r0, r0, lsl #26
    6db4:	00000000 	andeq	r0, r0, r0
    6db8:	02000000 	andeq	r0, r0, #0
    6dbc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    6dcc:	02000000 	andeq	r0, r0, #0
    6dd0:	00007d00 	andeq	r7, r0, r0, lsl #26
    6dd4:	00000000 	andeq	r0, r0, r0
    6dd8:	02000000 	andeq	r0, r0, #0
    6ddc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    6df4:	01000000 	mrseq	r0, (UNDEF: 0)
    6df8:	00005000 	andeq	r5, r0, r0
    6dfc:	00000000 	andeq	r0, r0, r0
    6e00:	00010000 	andeq	r0, r1, r0
    6e04:	00000054 	andeq	r0, r0, r4, asr r0
    6e08:	00000000 	andeq	r0, r0, r0
    6e0c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6e18:	00540001 	subseq	r0, r4, r1
	...
    6e28:	02000000 	andeq	r0, r0, #0
    6e2c:	00007d00 	andeq	r7, r0, r0, lsl #26
    6e30:	00000000 	andeq	r0, r0, r0
    6e34:	02000000 	andeq	r0, r0, #0
    6e38:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    6e50:	01000000 	mrseq	r0, (UNDEF: 0)
    6e54:	00005000 	andeq	r5, r0, r0
    6e58:	00000000 	andeq	r0, r0, r0
    6e5c:	00040000 	andeq	r0, r4, r0
    6e60:	9f5001f3 	svcls	0x005001f3
	...
    6e6c:	00500001 	subseq	r0, r0, r1
    6e70:	00000000 	andeq	r0, r0, r0
    6e74:	04000000 	streq	r0, [r0], #-0
    6e78:	5001f300 	andpl	pc, r1, r0, lsl #6
    6e7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6e80:	00000000 	andeq	r0, r0, r0
    6e84:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    6e90:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    6e9c:	00540001 	subseq	r0, r4, r1
	...
    6eac:	02000000 	andeq	r0, r0, #0
    6eb0:	00007d00 	andeq	r7, r0, r0, lsl #26
    6eb4:	00000000 	andeq	r0, r0, r0
    6eb8:	02000000 	andeq	r0, r0, #0
    6ebc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    6ed4:	01000000 	mrseq	r0, (UNDEF: 0)
    6ed8:	00005000 	andeq	r5, r0, r0
    6edc:	00000000 	andeq	r0, r0, r0
    6ee0:	00040000 	andeq	r0, r4, r0
    6ee4:	9f5001f3 	svcls	0x005001f3
	...
    6ef0:	00500001 	subseq	r0, r0, r1
    6ef4:	00000000 	andeq	r0, r0, r0
    6ef8:	04000000 	streq	r0, [r0], #-0
    6efc:	5001f300 	andpl	pc, r1, r0, lsl #6
    6f00:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6f04:	00000000 	andeq	r0, r0, r0
    6f08:	00000100 	andeq	r0, r0, r0, lsl #2
    6f0c:	00000000 	andeq	r0, r0, r0
    6f10:	01000000 	mrseq	r0, (UNDEF: 0)
    6f14:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    6f24:	00020000 	andeq	r0, r2, r0
    6f28:	0000007d 	andeq	r0, r0, sp, ror r0
    6f2c:	00000000 	andeq	r0, r0, r0
    6f30:	00020000 	andeq	r0, r2, r0
    6f34:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    6f4c:	00010000 	andeq	r0, r1, r0
    6f50:	00000050 	andeq	r0, r0, r0, asr r0
    6f54:	00000000 	andeq	r0, r0, r0
    6f58:	f3000400 	vshl.u8	d0, d0, d0
    6f5c:	009f5001 	addseq	r5, pc, r1
    6f60:	00000000 	andeq	r0, r0, r0
    6f64:	01000000 	mrseq	r0, (UNDEF: 0)
    6f68:	00005000 	andeq	r5, r0, r0
    6f6c:	00000000 	andeq	r0, r0, r0
    6f70:	00040000 	andeq	r0, r4, r0
    6f74:	9f5001f3 	svcls	0x005001f3
	...
    6f80:	00000001 	andeq	r0, r0, r1
	...
    6f8c:	00540001 	subseq	r0, r4, r1
    6f90:	00000000 	andeq	r0, r0, r0
    6f94:	01000000 	mrseq	r0, (UNDEF: 0)
    6f98:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    6fa8:	00020000 	andeq	r0, r2, r0
    6fac:	0000007d 	andeq	r0, r0, sp, ror r0
    6fb0:	00000000 	andeq	r0, r0, r0
    6fb4:	00020000 	andeq	r0, r2, r0
    6fb8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    6fd0:	00010000 	andeq	r0, r1, r0
    6fd4:	00000050 	andeq	r0, r0, r0, asr r0
    6fd8:	00000000 	andeq	r0, r0, r0
    6fdc:	f3000400 	vshl.u8	d0, d0, d0
    6fe0:	009f5001 	addseq	r5, pc, r1
    6fe4:	00000000 	andeq	r0, r0, r0
    6fe8:	01000000 	mrseq	r0, (UNDEF: 0)
    6fec:	00005000 	andeq	r5, r0, r0
    6ff0:	00000000 	andeq	r0, r0, r0
    6ff4:	00040000 	andeq	r0, r4, r0
    6ff8:	9f5001f3 	svcls	0x005001f3
	...
    7004:	00000001 	andeq	r0, r0, r1
    7008:	00000000 	andeq	r0, r0, r0
    700c:	00010000 	andeq	r0, r1, r0
    7010:	00000054 	andeq	r0, r0, r4, asr r0
	...
    7020:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    702c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    7030:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    7048:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7054:	01f30004 	mvnseq	r0, r4
    7058:	00009f50 	andeq	r9, r0, r0, asr pc
    705c:	00000000 	andeq	r0, r0, r0
    7060:	00010000 	andeq	r0, r1, r0
    7064:	00000050 	andeq	r0, r0, r0, asr r0
    7068:	00000000 	andeq	r0, r0, r0
    706c:	f3000400 	vshl.u8	d0, d0, d0
    7070:	009f5001 	addseq	r5, pc, r1
	...
    708c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7098:	00540001 	subseq	r0, r4, r1
    709c:	00000000 	andeq	r0, r0, r0
    70a0:	04000000 	streq	r0, [r0], #-0
    70a4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    70a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    70ac:	00000000 	andeq	r0, r0, r0
    70b0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    70bc:	00540001 	subseq	r0, r4, r1
	...
    70d4:	01000000 	mrseq	r0, (UNDEF: 0)
    70d8:	00005200 	andeq	r5, r0, r0, lsl #4
    70dc:	00000000 	andeq	r0, r0, r0
    70e0:	00010000 	andeq	r0, r1, r0
    70e4:	00000057 	andeq	r0, r0, r7, asr r0
    70e8:	00000000 	andeq	r0, r0, r0
    70ec:	52000100 	andpl	r0, r0, #0, 2
	...
    70f8:	00570001 	subseq	r0, r7, r1
	...
    710c:	01000000 	mrseq	r0, (UNDEF: 0)
    7110:	00005300 	andeq	r5, r0, r0, lsl #6
    7114:	00000000 	andeq	r0, r0, r0
    7118:	00010000 	andeq	r0, r1, r0
    711c:	00000056 	andeq	r0, r0, r6, asr r0
    7120:	00000000 	andeq	r0, r0, r0
    7124:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    7130:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    713c:	00550001 	subseq	r0, r5, r1
	...
    7150:	01000000 	mrseq	r0, (UNDEF: 0)
    7154:	00005600 	andeq	r5, r0, r0, lsl #12
    7158:	00000000 	andeq	r0, r0, r0
    715c:	00010000 	andeq	r0, r1, r0
    7160:	00000056 	andeq	r0, r0, r6, asr r0
	...
    7174:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    7180:	00570001 	subseq	r0, r7, r1
	...
    7198:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    71a4:	01f30004 	mvnseq	r0, r4
    71a8:	00009f51 	andeq	r9, r0, r1, asr pc
    71ac:	00000000 	andeq	r0, r0, r0
    71b0:	00010000 	andeq	r0, r1, r0
    71b4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    71c8:	53000100 	movwpl	r0, #256	; 0x100
	...
    71d4:	00530001 	subseq	r0, r3, r1
	...
    71f0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    71fc:	7c700003 	ldclvc	0, cr0, [r0], #-12
    7200:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7204:	00000000 	andeq	r0, r0, r0
    7208:	f3000600 	vmax.u8	d0, d0, d0
    720c:	1a375101 	bne	ddb618 <_Min_Heap_Size+0xddae18>
    7210:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7214:	00000000 	andeq	r0, r0, r0
    7218:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    7224:	7c700003 	ldclvc	0, cr0, [r0], #-12
    7228:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    723c:	01000000 	mrseq	r0, (UNDEF: 0)
    7240:	00005200 	andeq	r5, r0, r0, lsl #4
    7244:	00000000 	andeq	r0, r0, r0
    7248:	001d0000 	andseq	r0, sp, r0
    724c:	5101f334 	tstpl	r1, r4, lsr r3	; <UNPREDICTABLE>
    7250:	f31a3720 	vabd.u16	d3, d10, d16
    7254:	37205101 	strcc	r5, [r0, -r1, lsl #2]!
    7258:	244b401a 	strbcs	r4, [fp], #-26	; 0xffffffe6
    725c:	00040c22 	andeq	r0, r4, r2, lsr #24
    7260:	282a8000 	stmdacs	sl!, {pc}
    7264:	13160001 	tstne	r6, #1
    7268:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    726c:	00000000 	andeq	r0, r0, r0
    7270:	52000100 	andpl	r0, r0, #0, 2
	...
    7284:	00010000 	andeq	r0, r1, r0
    7288:	00000051 	andeq	r0, r0, r1, asr r0
	...
    7298:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    72a4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    72a8:	00000008 	andeq	r0, r0, r8
	...
    72c0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    72cc:	00540001 	subseq	r0, r4, r1
    72d0:	00000000 	andeq	r0, r0, r0
    72d4:	01000000 	mrseq	r0, (UNDEF: 0)
    72d8:	00005000 	andeq	r5, r0, r0
    72dc:	00000000 	andeq	r0, r0, r0
    72e0:	00010000 	andeq	r0, r1, r0
    72e4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    72f8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    7304:	01f30004 	mvnseq	r0, r4
    7308:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    7318:	08001598 	stmdaeq	r0, {r3, r4, r7, r8, sl, ip}
    731c:	0800159a 	stmdaeq	r0, {r1, r3, r4, r7, r8, sl, ip}
    7320:	9a500001 	bls	140732c <_Min_Heap_Size+0x1406b2c>
    7324:	b0080015 	andlt	r0, r8, r5, lsl r0
    7328:	03080015 	movweq	r0, #32789	; 0x8015
    732c:	9f017000 	svcls	0x00017000
    7330:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
    7334:	080015c0 	stmdaeq	r0, {r6, r7, r8, sl, ip}
    7338:	01f30004 	mvnseq	r0, r4
    733c:	00009f50 	andeq	r9, r0, r0, asr pc
    7340:	00000000 	andeq	r0, r0, r0
    7344:	00020000 	andeq	r0, r2, r0
    7348:	00000000 	andeq	r0, r0, r0
    734c:	08001598 	stmdaeq	r0, {r3, r4, r7, r8, sl, ip}
    7350:	0800159a 	stmdaeq	r0, {r1, r3, r4, r7, r8, sl, ip}
    7354:	9a500001 	bls	1407360 <_Min_Heap_Size+0x1406b60>
    7358:	b0080015 	andlt	r0, r8, r5, lsl r0
    735c:	03080015 	movweq	r0, #32789	; 0x8015
    7360:	9f017000 	svcls	0x00017000
    7364:	080015b0 	stmdaeq	r0, {r4, r5, r7, r8, sl, ip}
    7368:	080015ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, sl, ip}
    736c:	01f30004 	mvnseq	r0, r4
    7370:	00009f50 	andeq	r9, r0, r0, asr pc
    7374:	00000000 	andeq	r0, r0, r0
    7378:	00010000 	andeq	r0, r1, r0
    737c:	080015a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, sl, ip}
    7380:	080015ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, sl, ip}
    7384:	9f3f0002 	svcls	0x003f0002
	...
    7390:	15a60001 	strne	r0, [r6, #1]!
    7394:	15ae0800 	strne	r0, [lr, #2048]!	; 0x800
    7398:	00030800 	andeq	r0, r3, r0, lsl #16
    739c:	009fff09 	addseq	pc, pc, r9, lsl #30
	...
    73ac:	02000000 	andeq	r0, r0, #0
    73b0:	00007d00 	andeq	r7, r0, r0, lsl #26
    73b4:	00000000 	andeq	r0, r0, r0
    73b8:	02000000 	andeq	r0, r0, #0
    73bc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    73d4:	01000000 	mrseq	r0, (UNDEF: 0)
    73d8:	00005000 	andeq	r5, r0, r0
    73dc:	00000000 	andeq	r0, r0, r0
    73e0:	00040000 	andeq	r0, r4, r0
    73e4:	9f5001f3 	svcls	0x005001f3
	...
    73f0:	00500001 	subseq	r0, r0, r1
    73f4:	00000000 	andeq	r0, r0, r0
    73f8:	04000000 	streq	r0, [r0], #-0
    73fc:	5001f300 	andpl	pc, r1, r0, lsl #6
    7400:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7404:	00000000 	andeq	r0, r0, r0
    7408:	00000100 	andeq	r0, r0, r0, lsl #2
    740c:	00000000 	andeq	r0, r0, r0
    7410:	01000000 	mrseq	r0, (UNDEF: 0)
    7414:	00005400 	andeq	r5, r0, r0, lsl #8
    7418:	00000000 	andeq	r0, r0, r0
    741c:	15680000 	strbne	r0, [r8, #-0]!
    7420:	156a0800 	strbne	r0, [sl, #-2048]!	; 0xfffff800
    7424:	00020800 	andeq	r0, r2, r0, lsl #16
    7428:	156a007d 	strbne	r0, [sl, #-125]!	; 0xffffff83
    742c:	15980800 	ldrne	r0, [r8, #2048]	; 0x800
    7430:	00020800 	andeq	r0, r2, r0, lsl #16
    7434:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7444:	15680000 	strbne	r0, [r8, #-0]!
    7448:	156e0800 	strbne	r0, [lr, #-2048]!	; 0xfffff800
    744c:	00010800 	andeq	r0, r1, r0, lsl #16
    7450:	00156e50 	andseq	r6, r5, r0, asr lr
    7454:	00158408 	andseq	r8, r5, r8, lsl #8
    7458:	f3000408 	vshl.u8	d0, d8, d0
    745c:	849f5001 	ldrhi	r5, [pc], #1	; 7464 <_Min_Heap_Size+0x6c64>
    7460:	88080015 	stmdahi	r8, {r0, r2, r4}
    7464:	01080015 	tsteq	r8, r5, lsl r0
    7468:	15885000 	strne	r5, [r8]
    746c:	15980800 	ldrne	r0, [r8, #2048]	; 0x800
    7470:	00040800 	andeq	r0, r4, r0, lsl #16
    7474:	9f5001f3 	svcls	0x005001f3
	...
    7480:	156e0001 	strbne	r0, [lr, #-1]!
    7484:	15780800 	ldrbne	r0, [r8, #-2048]!	; 0xfffff800
    7488:	00010800 	andeq	r0, r1, r0, lsl #16
    748c:	00000054 	andeq	r0, r0, r4, asr r0
    7490:	00000000 	andeq	r0, r0, r0
    7494:	0014dc00 	andseq	sp, r4, r0, lsl #24
    7498:	0014de08 	andseq	sp, r4, r8, lsl #28
    749c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    74a0:	0014de00 	andseq	sp, r4, r0, lsl #28
    74a4:	00156808 	andseq	r6, r5, r8, lsl #16
    74a8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    74ac:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    74bc:	0014dc00 	andseq	sp, r4, r0, lsl #24
    74c0:	0014e808 	andseq	lr, r4, r8, lsl #16
    74c4:	50000108 	andpl	r0, r0, r8, lsl #2
    74c8:	080014e8 	stmdaeq	r0, {r3, r5, r6, r7, sl, ip}
    74cc:	08001534 	stmdaeq	r0, {r2, r4, r5, r8, sl, ip}
    74d0:	01f30004 	mvnseq	r0, r4
    74d4:	15349f50 	ldrne	r9, [r4, #-3920]!	; 0xfffff0b0
    74d8:	15380800 	ldrne	r0, [r8, #-2048]!	; 0xfffff800
    74dc:	00010800 	andeq	r0, r1, r0, lsl #16
    74e0:	00153850 	andseq	r3, r5, r0, asr r8
    74e4:	00156808 	andseq	r6, r5, r8, lsl #16
    74e8:	f3000408 	vshl.u8	d0, d8, d0
    74ec:	009f5001 	addseq	r5, pc, r1
	...
    7500:	dc000000 	stcle	0, cr0, [r0], {-0}
    7504:	e8080014 	stmda	r8, {r2, r4}
    7508:	01080014 	tsteq	r8, r4, lsl r0
    750c:	14e85100 	strbtne	r5, [r8], #256	; 0x100
    7510:	15120800 	ldrne	r0, [r2, #-2048]	; 0xfffff800
    7514:	00010800 	andeq	r0, r1, r0, lsl #16
    7518:	00151254 	andseq	r1, r5, r4, asr r2
    751c:	00153408 	andseq	r3, r5, r8, lsl #8
    7520:	f3000408 	vshl.u8	d0, d8, d0
    7524:	349f5101 	ldrcc	r5, [pc], #257	; 752c <_Min_Heap_Size+0x6d2c>
    7528:	36080015 			; <UNDEFINED> instruction: 0x36080015
    752c:	01080015 	tsteq	r8, r5, lsl r0
    7530:	15365100 	ldrne	r5, [r6, #-256]!	; 0xffffff00
    7534:	154c0800 	strbne	r0, [ip, #-2048]	; 0xfffff800
    7538:	00010800 	andeq	r0, r1, r0, lsl #16
    753c:	00154c54 	andseq	r4, r5, r4, asr ip
    7540:	00156808 	andseq	r6, r5, r8, lsl #16
    7544:	f3000408 	vshl.u8	d0, d8, d0
    7548:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    755c:	dc000000 	stcle	0, cr0, [r0], {-0}
    7560:	e8080014 	stmda	r8, {r2, r4}
    7564:	01080014 	tsteq	r8, r4, lsl r0
    7568:	14e85200 	strbtne	r5, [r8], #512	; 0x200
    756c:	151c0800 	ldrne	r0, [ip, #-2048]	; 0xfffff800
    7570:	00010800 	andeq	r0, r1, r0, lsl #16
    7574:	00151c56 	andseq	r1, r5, r6, asr ip
    7578:	00153408 	andseq	r3, r5, r8, lsl #8
    757c:	f3000408 	vshl.u8	d0, d8, d0
    7580:	349f5201 	ldrcc	r5, [pc], #513	; 7588 <_Min_Heap_Size+0x6d88>
    7584:	3b080015 	blcc	2075e0 <_Min_Heap_Size+0x206de0>
    7588:	01080015 	tsteq	r8, r5, lsl r0
    758c:	153b5200 	ldrne	r5, [fp, #-512]!	; 0xfffffe00
    7590:	154c0800 	strbne	r0, [ip, #-2048]	; 0xfffff800
    7594:	00010800 	andeq	r0, r1, r0, lsl #16
    7598:	00154c56 	andseq	r4, r5, r6, asr ip
    759c:	00156808 	andseq	r6, r5, r8, lsl #16
    75a0:	f3000408 	vshl.u8	d0, d8, d0
    75a4:	009f5201 	addseq	r5, pc, r1, lsl #4
    75a8:	00000000 	andeq	r0, r0, r0
    75ac:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    75b8:	e4000000 	str	r0, [r0], #-0
    75bc:	f4080014 	vst4.8	{d0-d3}, [r8 :64], r4
    75c0:	02080014 	andeq	r0, r8, #20
    75c4:	f49f3000 			; <UNDEFINED> instruction: 0xf49f3000
    75c8:	06080014 			; <UNDEFINED> instruction: 0x06080014
    75cc:	01080015 	tsteq	r8, r5, lsl r0
    75d0:	15065300 	strne	r5, [r6, #-768]	; 0xfffffd00
    75d4:	150a0800 	strne	r0, [sl, #-2048]	; 0xfffff800
    75d8:	00030800 	andeq	r0, r3, r0, lsl #16
    75dc:	349f7c72 	ldrcc	r7, [pc], #3186	; 75e4 <_Min_Heap_Size+0x6de4>
    75e0:	48080015 	stmdami	r8, {r0, r2, r4}
    75e4:	02080015 	andeq	r0, r8, #21
    75e8:	489f3000 	ldmmi	pc, {ip, sp}	; <UNPREDICTABLE>
    75ec:	4a080015 	bmi	207648 <_Min_Heap_Size+0x206e48>
    75f0:	01080015 	tsteq	r8, r5, lsl r0
    75f4:	154a5300 	strbne	r5, [sl, #-768]	; 0xfffffd00
    75f8:	154c0800 	strbne	r0, [ip, #-2048]	; 0xfffff800
    75fc:	00030800 	andeq	r0, r3, r0, lsl #16
    7600:	009f7c72 	addseq	r7, pc, r2, ror ip	; <UNPREDICTABLE>
    7604:	00000000 	andeq	r0, r0, r0
    7608:	02000000 	andeq	r0, r0, #0
    760c:	00000000 	andeq	r0, r0, r0
    7610:	0014f400 	andseq	pc, r4, r0, lsl #8
    7614:	00151c08 	andseq	r1, r5, r8, lsl #24
    7618:	56000108 	strpl	r0, [r0], -r8, lsl #2
    761c:	0800151c 	stmdaeq	r0, {r2, r3, r4, r8, sl, ip}
    7620:	0800151e 	stmdaeq	r0, {r1, r2, r3, r4, r8, sl, ip}
    7624:	01f30004 	mvnseq	r0, r4
    7628:	15489f52 	strbne	r9, [r8, #-3922]	; 0xfffff0ae
    762c:	154c0800 	strbne	r0, [ip, #-2048]	; 0xfffff800
    7630:	00010800 	andeq	r0, r1, r0, lsl #16
    7634:	00000056 	andeq	r0, r0, r6, asr r0
    7638:	00000000 	andeq	r0, r0, r0
    763c:	00000200 	andeq	r0, r0, r0, lsl #4
    7640:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    7644:	12080014 	andne	r0, r8, #20
    7648:	01080015 	tsteq	r8, r5, lsl r0
    764c:	15125400 	ldrne	r5, [r2, #-1024]	; 0xfffffc00
    7650:	151e0800 	ldrne	r0, [lr, #-2048]	; 0xfffff800
    7654:	00040800 	andeq	r0, r4, r0, lsl #16
    7658:	9f5101f3 	svcls	0x005101f3
    765c:	08001548 	stmdaeq	r0, {r3, r6, r8, sl, ip}
    7660:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
    7664:	00540001 	subseq	r0, r4, r1
    7668:	00000000 	andeq	r0, r0, r0
    766c:	02000000 	andeq	r0, r0, #0
    7670:	00000000 	andeq	r0, r0, r0
    7674:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    7678:	06080014 			; <UNDEFINED> instruction: 0x06080014
    767c:	01080015 	tsteq	r8, r5, lsl r0
    7680:	15065300 	strne	r5, [r6, #-768]	; 0xfffffd00
    7684:	150a0800 	strne	r0, [sl, #-2048]	; 0xfffff800
    7688:	00030800 	andeq	r0, r3, r0, lsl #16
    768c:	489f7c72 	ldmmi	pc, {r1, r4, r5, r6, sl, fp, ip, sp, lr}	; <UNPREDICTABLE>
    7690:	4a080015 	bmi	2076ec <_Min_Heap_Size+0x206eec>
    7694:	01080015 	tsteq	r8, r5, lsl r0
    7698:	154a5300 	strbne	r5, [sl, #-768]	; 0xfffffd00
    769c:	154c0800 	strbne	r0, [ip, #-2048]	; 0xfffff800
    76a0:	00030800 	andeq	r0, r3, r0, lsl #16
    76a4:	009f7c72 	addseq	r7, pc, r2, ror ip	; <UNPREDICTABLE>
    76a8:	00000000 	andeq	r0, r0, r0
    76ac:	04000000 	streq	r0, [r0], #-0
    76b0:	00000000 	andeq	r0, r0, r0
    76b4:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    76b8:	06080014 			; <UNDEFINED> instruction: 0x06080014
    76bc:	01080015 	tsteq	r8, r5, lsl r0
    76c0:	15065300 	strne	r5, [r6, #-768]	; 0xfffffd00
    76c4:	150a0800 	strne	r0, [sl, #-2048]	; 0xfffff800
    76c8:	00030800 	andeq	r0, r3, r0, lsl #16
    76cc:	489f7c72 	ldmmi	pc, {r1, r4, r5, r6, sl, fp, ip, sp, lr}	; <UNPREDICTABLE>
    76d0:	4a080015 	bmi	20772c <_Min_Heap_Size+0x206f2c>
    76d4:	01080015 	tsteq	r8, r5, lsl r0
    76d8:	154a5300 	strbne	r5, [sl, #-768]	; 0xfffffd00
    76dc:	154c0800 	strbne	r0, [ip, #-2048]	; 0xfffff800
    76e0:	00030800 	andeq	r0, r3, r0, lsl #16
    76e4:	009f7c72 	addseq	r7, pc, r2, ror ip	; <UNPREDICTABLE>
	...
    76f0:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    76f4:	0e080014 	mcreq	0, 0, r0, cr8, cr4, {0}
    76f8:	01080015 	tsteq	r8, r5, lsl r0
    76fc:	15485100 	strbne	r5, [r8, #-256]	; 0xffffff00
    7700:	154c0800 	strbne	r0, [ip, #-2048]	; 0xfffff800
    7704:	00010800 	andeq	r0, r1, r0, lsl #16
    7708:	00000051 	andeq	r0, r0, r1, asr r0
    770c:	00000000 	andeq	r0, r0, r0
    7710:	06000000 	streq	r0, [r0], -r0
    7714:	18080015 	stmdane	r8, {r0, r2, r4}
    7718:	01080015 	tsteq	r8, r5, lsl r0
    771c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    7728:	151e0000 	ldrne	r0, [lr, #-0]
    772c:	15240800 	strne	r0, [r4, #-2048]!	; 0xfffff800
    7730:	00010800 	andeq	r0, r1, r0, lsl #16
    7734:	00154c54 	andseq	r4, r5, r4, asr ip
    7738:	00155208 	andseq	r5, r5, r8, lsl #4
    773c:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    774c:	0800151e 	stmdaeq	r0, {r1, r2, r3, r4, r8, sl, ip}
    7750:	0800152a 	stmdaeq	r0, {r1, r3, r5, r8, sl, ip}
    7754:	4c550001 	mrrcmi	0, 0, r0, r5, cr1
    7758:	50080015 	andpl	r0, r8, r5, lsl r0
    775c:	01080015 	tsteq	r8, r5, lsl r0
    7760:	00005500 	andeq	r5, r0, r0, lsl #10
    7764:	00000000 	andeq	r0, r0, r0
    7768:	14a00000 	strtne	r0, [r0], #0
    776c:	14a20800 	strtne	r0, [r2], #2048	; 0x800
    7770:	00020800 	andeq	r0, r2, r0, lsl #16
    7774:	14a2007d 	strtne	r0, [r2], #125	; 0x7d
    7778:	14dc0800 	ldrbne	r0, [ip], #2048	; 0x800
    777c:	00020800 	andeq	r0, r2, r0, lsl #16
    7780:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    7794:	080014a0 	stmdaeq	r0, {r5, r7, sl, ip}
    7798:	080014aa 	stmdaeq	r0, {r1, r3, r5, r7, sl, ip}
    779c:	aa500001 	bge	14077a8 <_Min_Heap_Size+0x1406fa8>
    77a0:	b8080014 	stmdalt	r8, {r2, r4}
    77a4:	01080014 	tsteq	r8, r4, lsl r0
    77a8:	14b85400 	ldrtne	r5, [r8], #1024	; 0x400
    77ac:	14ca0800 	strbne	r0, [sl], #2048	; 0x800
    77b0:	00040800 	andeq	r0, r4, r0, lsl #16
    77b4:	9f5001f3 	svcls	0x005001f3
    77b8:	080014ca 	stmdaeq	r0, {r1, r3, r6, r7, sl, ip}
    77bc:	080014ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, sl, ip}
    77c0:	ce500001 	cdpgt	0, 5, cr0, cr0, cr1, {0}
    77c4:	dc080014 	stcle	0, cr0, [r8], {20}
    77c8:	01080014 	tsteq	r8, r4, lsl r0
    77cc:	00005400 	andeq	r5, r0, r0, lsl #8
    77d0:	00000000 	andeq	r0, r0, r0
    77d4:	00010000 	andeq	r0, r1, r0
    77d8:	14aa0000 	strtne	r0, [sl], #0
    77dc:	14b80800 	ldrtne	r0, [r8], #2048	; 0x800
    77e0:	00010800 	andeq	r0, r1, r0, lsl #16
    77e4:	0014b854 	andseq	fp, r4, r4, asr r8
    77e8:	0014c808 	andseq	ip, r4, r8, lsl #16
    77ec:	f3000408 	vshl.u8	d0, d8, d0
    77f0:	009f5001 	addseq	r5, pc, r1
	...
    7800:	0014ae00 	andseq	sl, r4, r0, lsl #28
    7804:	0014b208 	andseq	fp, r4, r8, lsl #4
    7808:	53000108 	movwpl	r0, #264	; 0x108
    780c:	080014b6 	stmdaeq	r0, {r1, r2, r4, r5, r7, sl, ip}
    7810:	080014be 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, sl, ip}
    7814:	c6530001 	ldrbgt	r0, [r3], -r1
    7818:	c8080014 	stmdagt	r8, {r2, r4}
    781c:	01080014 	tsteq	r8, r4, lsl r0
    7820:	00005300 	andeq	r5, r0, r0, lsl #6
    7824:	00000000 	andeq	r0, r0, r0
    7828:	00040000 	andeq	r0, r4, r0
    782c:	14aa0000 	strtne	r0, [sl], #0
    7830:	14b80800 	ldrtne	r0, [r8], #2048	; 0x800
    7834:	00050800 	andeq	r0, r5, r0, lsl #16
    7838:	1a370074 	bne	dc7a10 <_Min_Heap_Size+0xdc7210>
    783c:	0014b89f 	mulseq	r4, pc, r8	; <UNPREDICTABLE>
    7840:	0014ca08 	andseq	ip, r4, r8, lsl #20
    7844:	f3000608 	vmax.u8	d0, d0, d8
    7848:	1a375001 	bne	ddb854 <_Min_Heap_Size+0xddb054>
    784c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7850:	00000000 	andeq	r0, r0, r0
    7854:	00166400 	andseq	r6, r6, r0, lsl #8
    7858:	00166608 	andseq	r6, r6, r8, lsl #12
    785c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7860:	00166600 	andseq	r6, r6, r0, lsl #12
    7864:	00168c08 	andseq	r8, r6, r8, lsl #24
    7868:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    786c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    7878:	64000000 	strvs	r0, [r0], #-0
    787c:	6b080016 	blvs	2078dc <_Min_Heap_Size+0x2070dc>
    7880:	01080016 	tsteq	r8, r6, lsl r0
    7884:	166b5000 	strbtne	r5, [fp], -r0
    7888:	167a0800 	ldrbtne	r0, [sl], -r0, lsl #16
    788c:	00010800 	andeq	r0, r1, r0, lsl #16
    7890:	00167a54 	andseq	r7, r6, r4, asr sl
    7894:	00168c08 	andseq	r8, r6, r8, lsl #24
    7898:	f3000408 	vshl.u8	d0, d8, d0
    789c:	009f5001 	addseq	r5, pc, r1
	...
    78a8:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
    78ac:	7a080016 	bvc	20790c <_Min_Heap_Size+0x20710c>
    78b0:	01080016 	tsteq	r8, r6, lsl r0
    78b4:	167a5000 	ldrbtne	r5, [sl], -r0
    78b8:	16860800 	strne	r0, [r6], r0, lsl #16
    78bc:	00010800 	andeq	r0, r1, r0, lsl #16
    78c0:	00000055 	andeq	r0, r0, r5, asr r0
    78c4:	00000000 	andeq	r0, r0, r0
    78c8:	6e000100 	adfvss	f0, f0, f0
    78cc:	86080016 			; <UNDEFINED> instruction: 0x86080016
    78d0:	01080016 	tsteq	r8, r6, lsl r0
    78d4:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    78e4:	00020000 	andeq	r0, r2, r0
    78e8:	0000007d 	andeq	r0, r0, sp, ror r0
    78ec:	00000000 	andeq	r0, r0, r0
    78f0:	00020000 	andeq	r0, r2, r0
    78f4:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    790c:	00010000 	andeq	r0, r1, r0
    7910:	00000050 	andeq	r0, r0, r0, asr r0
    7914:	00000000 	andeq	r0, r0, r0
    7918:	f3000400 	vshl.u8	d0, d0, d0
    791c:	009f5001 	addseq	r5, pc, r1
    7920:	00000000 	andeq	r0, r0, r0
    7924:	01000000 	mrseq	r0, (UNDEF: 0)
    7928:	00005000 	andeq	r5, r0, r0
    792c:	00000000 	andeq	r0, r0, r0
    7930:	00040000 	andeq	r0, r4, r0
    7934:	9f5001f3 	svcls	0x005001f3
	...
    7940:	00000001 	andeq	r0, r0, r1
	...
    7950:	9f300002 	svcls	0x00300002
	...
    795c:	00500001 	subseq	r0, r0, r1
    7960:	00000000 	andeq	r0, r0, r0
    7964:	02000000 	andeq	r0, r0, #0
    7968:	009f3000 	addseq	r3, pc, r0
    796c:	00000000 	andeq	r0, r0, r0
    7970:	01000000 	mrseq	r0, (UNDEF: 0)
    7974:	00005000 	andeq	r5, r0, r0
    7978:	00000000 	andeq	r0, r0, r0
    797c:	00010000 	andeq	r0, r1, r0
	...
    7988:	00550001 	subseq	r0, r5, r1
    798c:	00000000 	andeq	r0, r0, r0
    7990:	c0000000 	andgt	r0, r0, r0
    7994:	c2080015 	andgt	r0, r8, #21
    7998:	02080015 	andeq	r0, r8, #21
    799c:	c2007d00 	andgt	r7, r0, #0, 26
    79a0:	0c080015 	stceq	0, cr0, [r8], {21}
    79a4:	02080016 	andeq	r0, r8, #22
    79a8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    79b8:	0015c000 	andseq	ip, r5, r0
    79bc:	0015c808 	andseq	ip, r5, r8, lsl #16
    79c0:	50000108 	andpl	r0, r0, r8, lsl #2
    79c4:	080015c8 	stmdaeq	r0, {r3, r6, r7, r8, sl, ip}
    79c8:	080015fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, sl, ip}
    79cc:	fe540001 	cdp2	0, 5, cr0, cr4, cr1, {0}
    79d0:	0c080015 	stceq	0, cr0, [r8], {21}
    79d4:	04080016 	streq	r0, [r8], #-22	; 0xffffffea
    79d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    79dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    79ec:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    79f8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    79fc:	00000008 	andeq	r0, r0, r8
    7a00:	00000000 	andeq	r0, r0, r0
    7a04:	00160c00 	andseq	r0, r6, r0, lsl #24
    7a08:	00160e08 	andseq	r0, r6, r8, lsl #28
    7a0c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7a10:	00160e00 	andseq	r0, r6, r0, lsl #28
    7a14:	00164008 	andseq	r4, r6, r8
    7a18:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7a1c:	00000008 	andeq	r0, r0, r8
    7a20:	00000000 	andeq	r0, r0, r0
    7a24:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    7a38:	30000200 	andcc	r0, r0, r0, lsl #4
    7a3c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7a40:	00000000 	andeq	r0, r0, r0
    7a44:	53000100 	movwpl	r0, #256	; 0x100
	...
    7a50:	00530001 	subseq	r0, r3, r1
    7a54:	00000000 	andeq	r0, r0, r0
    7a58:	01000000 	mrseq	r0, (UNDEF: 0)
    7a5c:	00005100 	andeq	r5, r0, r0, lsl #2
    7a60:	00000000 	andeq	r0, r0, r0
    7a64:	00010000 	andeq	r0, r1, r0
    7a68:	00000053 	andeq	r0, r0, r3, asr r0
    7a6c:	00000000 	andeq	r0, r0, r0
    7a70:	53000100 	movwpl	r0, #256	; 0x100
	...
    7a7c:	00000102 	andeq	r0, r0, r2, lsl #2
	...
    7a8c:	00020000 	andeq	r0, r2, r0
    7a90:	00009f30 	andeq	r9, r0, r0, lsr pc
    7a94:	00000000 	andeq	r0, r0, r0
    7a98:	00020000 	andeq	r0, r2, r0
    7a9c:	00009f30 	andeq	r9, r0, r0, lsr pc
    7aa0:	00000000 	andeq	r0, r0, r0
    7aa4:	00010000 	andeq	r0, r1, r0
    7aa8:	00000053 	andeq	r0, r0, r3, asr r0
    7aac:	00000000 	andeq	r0, r0, r0
    7ab0:	30000200 	andcc	r0, r0, r0, lsl #4
    7ab4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7ab8:	00000000 	andeq	r0, r0, r0
    7abc:	53000100 	movwpl	r0, #256	; 0x100
	...
    7ac8:	00000102 	andeq	r0, r0, r2, lsl #2
	...
    7ad8:	9f320002 	svcls	0x00320002
	...
    7ae4:	9f320002 	svcls	0x00320002
	...
    7af0:	00520001 	subseq	r0, r2, r1
    7af4:	00000000 	andeq	r0, r0, r0
    7af8:	02000000 	andeq	r0, r0, #0
    7afc:	009f3200 	addseq	r3, pc, r0, lsl #4
    7b00:	00000000 	andeq	r0, r0, r0
    7b04:	02000000 	andeq	r0, r0, #0
    7b08:	00000001 	andeq	r0, r0, r1
	...
    7b14:	30000200 	andcc	r0, r0, r0, lsl #4
    7b18:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7b1c:	00000000 	andeq	r0, r0, r0
    7b20:	30000200 	andcc	r0, r0, r0, lsl #4
    7b24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7b28:	00000000 	andeq	r0, r0, r0
    7b2c:	71000800 	tstvc	r0, r0, lsl #16
    7b30:	24ed0900 	strbtcs	r0, [sp], #2304	; 0x900
    7b34:	009f2533 	addseq	r2, pc, r3, lsr r5	; <UNPREDICTABLE>
    7b38:	00000000 	andeq	r0, r0, r0
    7b3c:	02000000 	andeq	r0, r0, #0
    7b40:	00000001 	andeq	r0, r0, r1
	...
    7b4c:	02000000 	andeq	r0, r0, #0
    7b50:	009f3200 	addseq	r3, pc, r0, lsl #4
    7b54:	00000000 	andeq	r0, r0, r0
    7b58:	02000000 	andeq	r0, r0, #0
    7b5c:	009f3200 	addseq	r3, pc, r0, lsl #4
    7b60:	00000000 	andeq	r0, r0, r0
    7b64:	01000000 	mrseq	r0, (UNDEF: 0)
    7b68:	00005200 	andeq	r5, r0, r0, lsl #4
    7b6c:	00000000 	andeq	r0, r0, r0
    7b70:	00010000 	andeq	r0, r1, r0
    7b74:	00000052 	andeq	r0, r0, r2, asr r0
    7b78:	00000000 	andeq	r0, r0, r0
    7b7c:	00010000 	andeq	r0, r1, r0
    7b80:	00000000 	andeq	r0, r0, r0
    7b84:	01000000 	mrseq	r0, (UNDEF: 0)
    7b88:	00005000 	andeq	r5, r0, r0
    7b8c:	00000000 	andeq	r0, r0, r0
    7b90:	176c0000 	strbne	r0, [ip, -r0]!
    7b94:	17700800 	ldrbne	r0, [r0, -r0, lsl #16]!
    7b98:	00020800 	andeq	r0, r2, r0, lsl #16
    7b9c:	1770007d 			; <UNDEFINED> instruction: 0x1770007d
    7ba0:	17e80800 	strbne	r0, [r8, r0, lsl #16]!
    7ba4:	00020800 	andeq	r0, r2, r0, lsl #16
    7ba8:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    7bb8:	176c0000 	strbne	r0, [ip, -r0]!
    7bbc:	17860800 	strne	r0, [r6, r0, lsl #16]
    7bc0:	00010800 	andeq	r0, r1, r0, lsl #16
    7bc4:	00178650 	andseq	r8, r7, r0, asr r6
    7bc8:	0017c008 	andseq	ip, r7, r8
    7bcc:	58000108 	stmdapl	r0, {r3, r8}
    7bd0:	080017c0 	stmdaeq	r0, {r6, r7, r8, r9, sl, ip}
    7bd4:	080017c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, r9, sl, ip}
    7bd8:	01f30004 	mvnseq	r0, r4
    7bdc:	17c69f50 			; <UNDEFINED> instruction: 0x17c69f50
    7be0:	17e80800 	strbne	r0, [r8, r0, lsl #16]!
    7be4:	00010800 	andeq	r0, r1, r0, lsl #16
    7be8:	00000050 	andeq	r0, r0, r0, asr r0
	...
    7bf8:	00176c00 	andseq	r6, r7, r0, lsl #24
    7bfc:	00178608 	andseq	r8, r7, r8, lsl #12
    7c00:	51000108 	tstpl	r0, r8, lsl #2
    7c04:	08001786 	stmdaeq	r0, {r1, r2, r7, r8, r9, sl, ip}
    7c08:	080017c0 	stmdaeq	r0, {r6, r7, r8, r9, sl, ip}
    7c0c:	c0570001 	subsgt	r0, r7, r1
    7c10:	c6080017 			; <UNDEFINED> instruction: 0xc6080017
    7c14:	04080017 	streq	r0, [r8], #-23	; 0xffffffe9
    7c18:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    7c1c:	0017c69f 	mulseq	r7, pc, r6	; <UNPREDICTABLE>
    7c20:	0017e808 	andseq	lr, r7, r8, lsl #16
    7c24:	51000108 	tstpl	r0, r8, lsl #2
	...
    7c34:	176c0000 	strbne	r0, [ip, -r0]!
    7c38:	17860800 	strne	r0, [r6, r0, lsl #16]
    7c3c:	00010800 	andeq	r0, r1, r0, lsl #16
    7c40:	00178652 	andseq	r8, r7, r2, asr r6
    7c44:	0017c608 	andseq	ip, r7, r8, lsl #12
    7c48:	f3000408 	vshl.u8	d0, d8, d0
    7c4c:	c69f5201 	ldrgt	r5, [pc], r1, lsl #4
    7c50:	e8080017 	stmda	r8, {r0, r1, r2, r4}
    7c54:	01080017 	tsteq	r8, r7, lsl r0
    7c58:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    7c68:	176c0000 	strbne	r0, [ip, -r0]!
    7c6c:	17860800 	strne	r0, [r6, r0, lsl #16]
    7c70:	00010800 	andeq	r0, r1, r0, lsl #16
    7c74:	00178653 	andseq	r8, r7, r3, asr r6
    7c78:	0017c008 	andseq	ip, r7, r8
    7c7c:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    7c80:	080017c0 	stmdaeq	r0, {r6, r7, r8, r9, sl, ip}
    7c84:	080017c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, r9, sl, ip}
    7c88:	01f30004 	mvnseq	r0, r4
    7c8c:	17c69f53 			; <UNDEFINED> instruction: 0x17c69f53
    7c90:	17e80800 	strbne	r0, [r8, r0, lsl #16]!
    7c94:	00010800 	andeq	r0, r1, r0, lsl #16
    7c98:	00000053 	andeq	r0, r0, r3, asr r0
    7c9c:	00000000 	andeq	r0, r0, r0
    7ca0:	00000100 	andeq	r0, r0, r0, lsl #2
    7ca4:	70000000 	andvc	r0, r0, r0
    7ca8:	86080017 			; <UNDEFINED> instruction: 0x86080017
    7cac:	02080017 	andeq	r0, r8, #23
    7cb0:	869f3000 	ldrhi	r3, [pc], r0
    7cb4:	c0080017 	andgt	r0, r8, r7, lsl r0
    7cb8:	01080017 	tsteq	r8, r7, lsl r0
    7cbc:	17c65600 	strbne	r5, [r6, r0, lsl #12]
    7cc0:	17dc0800 	ldrbne	r0, [ip, r0, lsl #16]
    7cc4:	00020800 	andeq	r0, r2, r0, lsl #16
    7cc8:	00009f30 	andeq	r9, r0, r0, lsr pc
    7ccc:	00000000 	andeq	r0, r0, r0
    7cd0:	00020000 	andeq	r0, r2, r0
    7cd4:	00010100 	andeq	r0, r1, r0, lsl #2
    7cd8:	00000000 	andeq	r0, r0, r0
    7cdc:	08001770 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl, ip}
    7ce0:	08001786 	stmdaeq	r0, {r1, r2, r7, r8, r9, sl, ip}
    7ce4:	9f300002 	svcls	0x00300002
    7ce8:	08001790 	stmdaeq	r0, {r4, r7, r8, r9, sl, ip}
    7cec:	080017a2 	stmdaeq	r0, {r1, r5, r7, r8, r9, sl, ip}
    7cf0:	a2520001 	subsge	r0, r2, #1
    7cf4:	a6080017 			; <UNDEFINED> instruction: 0xa6080017
    7cf8:	03080017 	movweq	r0, #32791	; 0x8017
    7cfc:	9f7f7200 	svcls	0x007f7200
    7d00:	080017a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl, ip}
    7d04:	080017c0 	stmdaeq	r0, {r6, r7, r8, r9, sl, ip}
    7d08:	c6590001 	ldrbgt	r0, [r9], -r1
    7d0c:	e8080017 	stmda	r8, {r0, r1, r2, r4}
    7d10:	02080017 	andeq	r0, r8, #23
    7d14:	009f3000 	addseq	r3, pc, r0
    7d18:	00000000 	andeq	r0, r0, r0
    7d1c:	02000000 	andeq	r0, r0, #0
    7d20:	00000000 	andeq	r0, r0, r0
    7d24:	00177000 	andseq	r7, r7, r0
    7d28:	00178608 	andseq	r8, r7, r8, lsl #12
    7d2c:	30000208 	andcc	r0, r0, r8, lsl #4
    7d30:	0017ae9f 	mulseq	r7, pc, lr	; <UNPREDICTABLE>
    7d34:	0017b108 	andseq	fp, r7, r8, lsl #2
    7d38:	50000108 	andpl	r0, r0, r8, lsl #2
    7d3c:	080017c6 	stmdaeq	r0, {r1, r2, r6, r7, r8, r9, sl, ip}
    7d40:	080017e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl, ip}
    7d44:	9f300002 	svcls	0x00300002
	...
    7d50:	00000002 	andeq	r0, r0, r2
    7d54:	17700000 	ldrbne	r0, [r0, -r0]!
    7d58:	17860800 	strne	r0, [r6, r0, lsl #16]
    7d5c:	00020800 	andeq	r0, r2, r0, lsl #16
    7d60:	17869f30 			; <UNDEFINED> instruction: 0x17869f30
    7d64:	17c00800 	strbne	r0, [r0, r0, lsl #16]
    7d68:	00010800 	andeq	r0, r1, r0, lsl #16
    7d6c:	0017c654 	andseq	ip, r7, r4, asr r6
    7d70:	0017e808 	andseq	lr, r7, r8, lsl #16
    7d74:	30000208 	andcc	r0, r0, r8, lsl #4
    7d78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    7d7c:	00000000 	andeq	r0, r0, r0
    7d80:	0017e800 	andseq	lr, r7, r0, lsl #16
    7d84:	0017ea08 	andseq	lr, r7, r8, lsl #20
    7d88:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7d8c:	0017ea00 	andseq	lr, r7, r0, lsl #20
    7d90:	00196c08 	andseq	r6, r9, r8, lsl #24
    7d94:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    7d98:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    7da4:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    7da8:	34080017 	strcc	r0, [r8], #-23	; 0xffffffe9
    7dac:	01080018 	tsteq	r8, r8, lsl r0
    7db0:	18345000 	ldmdane	r4!, {ip, lr}
    7db4:	18e00800 	stmiane	r0!, {fp}^
    7db8:	00010800 	andeq	r0, r1, r0, lsl #16
    7dbc:	0018e055 	andseq	lr, r8, r5, asr r0
    7dc0:	00196c08 	andseq	r6, r9, r8, lsl #24
    7dc4:	f3000408 	vshl.u8	d0, d8, d0
    7dc8:	009f5001 	addseq	r5, pc, r1
	...
    7dd4:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    7dd8:	37080017 	smladcc	r8, r7, r0, r0
    7ddc:	01080018 	tsteq	r8, r8, lsl r0
    7de0:	18375100 	ldmdane	r7!, {r8, ip, lr}
    7de4:	196c0800 	stmdbne	ip!, {fp}^
    7de8:	00010800 	andeq	r0, r1, r0, lsl #16
    7dec:	00000056 	andeq	r0, r0, r6, asr r0
    7df0:	00000000 	andeq	r0, r0, r0
    7df4:	00000100 	andeq	r0, r0, r0, lsl #2
    7df8:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    7dfc:	e0080017 	and	r0, r8, r7, lsl r0
    7e00:	02080018 	andeq	r0, r8, #24
    7e04:	e09f3000 	adds	r3, pc, r0
    7e08:	e2080018 	and	r0, r8, #24
    7e0c:	01080018 	tsteq	r8, r8, lsl r0
    7e10:	18e25000 	stmiane	r2!, {ip, lr}^
    7e14:	196c0800 	stmdbne	ip!, {fp}^
    7e18:	00010800 	andeq	r0, r1, r0, lsl #16
    7e1c:	00000055 	andeq	r0, r0, r5, asr r0
    7e20:	00000000 	andeq	r0, r0, r0
    7e24:	01010100 	mrseq	r0, (UNDEF: 17)
    7e28:	00000101 	andeq	r0, r0, r1, lsl #2
    7e2c:	0017ee00 	andseq	lr, r7, r0, lsl #28
    7e30:	0018d008 	andseq	sp, r8, r8
    7e34:	30000208 	andcc	r0, r0, r8, lsl #4
    7e38:	0018d09f 	mulseq	r8, pc, r0	; <UNPREDICTABLE>
    7e3c:	0018ee08 	andseq	lr, r8, r8, lsl #28
    7e40:	40000208 	andmi	r0, r0, r8, lsl #4
    7e44:	0018ee9f 	mulseq	r8, pc, lr	; <UNPREDICTABLE>
    7e48:	0018f208 	andseq	pc, r8, r8, lsl #4
    7e4c:	30000208 	andcc	r0, r0, r8, lsl #4
    7e50:	0018f29f 	mulseq	r8, pc, r2	; <UNPREDICTABLE>
    7e54:	00196c08 	andseq	r6, r9, r8, lsl #24
    7e58:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    7e64:	01050502 	tsteq	r5, r2, lsl #10
    7e68:	01010101 	tsteq	r1, r1, lsl #2
    7e6c:	01010101 	tsteq	r1, r1, lsl #2
    7e70:	01010101 	tsteq	r1, r1, lsl #2
    7e74:	01010101 	tsteq	r1, r1, lsl #2
    7e78:	01010101 	tsteq	r1, r1, lsl #2
    7e7c:	01010101 	tsteq	r1, r1, lsl #2
    7e80:	01010101 	tsteq	r1, r1, lsl #2
    7e84:	00000001 	andeq	r0, r0, r1
    7e88:	17ee0000 	strbne	r0, [lr, r0]!
    7e8c:	17ee0800 	strbne	r0, [lr, r0, lsl #16]!
    7e90:	00010800 	andeq	r0, r1, r0, lsl #16
    7e94:	0017ee50 	andseq	lr, r7, r0, asr lr
    7e98:	0017f408 	andseq	pc, r7, r8, lsl #8
    7e9c:	70000308 	andvc	r0, r0, r8, lsl #6
    7ea0:	17f49f04 	ldrbne	r9, [r4, r4, lsl #30]!
    7ea4:	17f80800 	ldrbne	r0, [r8, r0, lsl #16]!
    7ea8:	00030800 	andeq	r0, r3, r0, lsl #16
    7eac:	f89f0870 			; <UNDEFINED> instruction: 0xf89f0870
    7eb0:	fc080017 	stc2	0, cr0, [r8], {23}
    7eb4:	03080017 	movweq	r0, #32791	; 0x8017
    7eb8:	9f0c7000 	svcls	0x000c7000
    7ebc:	080017fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, ip}
    7ec0:	08001800 	stmdaeq	r0, {fp, ip}
    7ec4:	10700003 	rsbsne	r0, r0, r3
    7ec8:	0018009f 	mulseq	r8, pc, r0	; <UNPREDICTABLE>
    7ecc:	00180408 	andseq	r0, r8, r8, lsl #8
    7ed0:	70000308 	andvc	r0, r0, r8, lsl #6
    7ed4:	18049f14 	stmdane	r4, {r2, r4, r8, r9, sl, fp, ip, pc}
    7ed8:	18080800 	stmdane	r8, {fp}
    7edc:	00030800 	andeq	r0, r3, r0, lsl #16
    7ee0:	089f1870 	ldmeq	pc, {r4, r5, r6, fp, ip}	; <UNPREDICTABLE>
    7ee4:	0c080018 	stceq	0, cr0, [r8], {24}
    7ee8:	03080018 	movweq	r0, #32792	; 0x8018
    7eec:	9f1c7000 	svcls	0x001c7000
    7ef0:	0800180c 	stmdaeq	r0, {r2, r3, fp, ip}
    7ef4:	08001810 	stmdaeq	r0, {r4, fp, ip}
    7ef8:	20700003 	rsbscs	r0, r0, r3
    7efc:	0018109f 	mulseq	r8, pc, r0	; <UNPREDICTABLE>
    7f00:	00181408 	andseq	r1, r8, r8, lsl #8
    7f04:	70000308 	andvc	r0, r0, r8, lsl #6
    7f08:	18149f24 	ldmdane	r4, {r2, r5, r8, r9, sl, fp, ip, pc}
    7f0c:	18180800 	ldmdane	r8, {fp}
    7f10:	00030800 	andeq	r0, r3, r0, lsl #16
    7f14:	189f2870 	ldmne	pc, {r4, r5, r6, fp, sp}	; <UNPREDICTABLE>
    7f18:	1c080018 	stcne	0, cr0, [r8], {24}
    7f1c:	03080018 	movweq	r0, #32792	; 0x8018
    7f20:	9f2c7000 	svcls	0x002c7000
    7f24:	0800181c 	stmdaeq	r0, {r2, r3, r4, fp, ip}
    7f28:	08001820 	stmdaeq	r0, {r5, fp, ip}
    7f2c:	30700003 	rsbscc	r0, r0, r3
    7f30:	0018209f 	mulseq	r8, pc, r0	; <UNPREDICTABLE>
    7f34:	00182408 	andseq	r2, r8, r8, lsl #8
    7f38:	70000308 	andvc	r0, r0, r8, lsl #6
    7f3c:	18249f34 	stmdane	r4!, {r2, r4, r5, r8, r9, sl, fp, ip, pc}
    7f40:	18280800 	stmdane	r8!, {fp}
    7f44:	00030800 	andeq	r0, r3, r0, lsl #16
    7f48:	289f3870 	ldmcs	pc, {r4, r5, r6, fp, ip, sp}	; <UNPREDICTABLE>
    7f4c:	2c080018 	stccs	0, cr0, [r8], {24}
    7f50:	03080018 	movweq	r0, #32792	; 0x8018
    7f54:	9f3c7000 	svcls	0x003c7000
    7f58:	0800182c 	stmdaeq	r0, {r2, r3, r5, fp, ip}
    7f5c:	08001834 	stmdaeq	r0, {r2, r4, r5, fp, ip}
    7f60:	c0700004 	rsbsgt	r0, r0, r4
    7f64:	18349f00 	ldmdane	r4!, {r8, r9, sl, fp, ip, pc}
    7f68:	18e00800 	stmiane	r0!, {fp}^
    7f6c:	00040800 	andeq	r0, r4, r0, lsl #16
    7f70:	9f00c075 	svcls	0x0000c075
    7f74:	080018e0 	stmdaeq	r0, {r5, r6, r7, fp, ip}
    7f78:	0800196c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp, ip}
    7f7c:	01f30006 	mvnseq	r0, r6
    7f80:	9f402350 	svcls	0x00402350
	...
    7f8c:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
    7f90:	08001706 	stmdaeq	r0, {r1, r2, r8, r9, sl, ip}
    7f94:	007d0002 	rsbseq	r0, sp, r2
    7f98:	08001706 	stmdaeq	r0, {r1, r2, r8, r9, sl, ip}
    7f9c:	0800171c 	stmdaeq	r0, {r2, r3, r4, r8, r9, sl, ip}
    7fa0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    7fb4:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
    7fb8:	0800170c 	stmdaeq	r0, {r2, r3, r8, r9, sl, ip}
    7fbc:	0c500001 	mrrceq	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    7fc0:	0f080017 	svceq	0x00080017
    7fc4:	01080017 	tsteq	r8, r7, lsl r0
    7fc8:	170f5100 	strne	r5, [pc, -r0, lsl #2]
    7fcc:	17180800 	ldrne	r0, [r8, -r0, lsl #16]
    7fd0:	00010800 	andeq	r0, r1, r0, lsl #16
    7fd4:	00171854 	andseq	r1, r7, r4, asr r8
    7fd8:	00171c08 	andseq	r1, r7, r8, lsl #24
    7fdc:	f3000408 	vshl.u8	d0, d8, d0
    7fe0:	009f5001 	addseq	r5, pc, r1
	...
    7fec:	cc000000 	stcgt	0, cr0, [r0], {-0}
    7ff0:	d2080016 	andle	r0, r8, #22
    7ff4:	01080016 	tsteq	r8, r6, lsl r0
    7ff8:	16d25000 	ldrbne	r5, [r2], r0
    7ffc:	17020800 	strne	r0, [r2, -r0, lsl #16]
    8000:	00040800 	andeq	r0, r4, r0, lsl #16
    8004:	9f5001f3 	svcls	0x005001f3
	...
    8010:	16d00000 	ldrbne	r0, [r0], r0
    8014:	17020800 	strne	r0, [r2, -r0, lsl #16]
    8018:	00010800 	andeq	r0, r1, r0, lsl #16
    801c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    8038:	0016d600 	andseq	sp, r6, r0, lsl #12
    803c:	0016f008 	andseq	pc, r6, r8
    8040:	50000108 	andpl	r0, r0, r8, lsl #2
    8044:	080016f0 	stmdaeq	r0, {r4, r5, r6, r7, r9, sl, ip}
    8048:	080016f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r9, sl, ip}
    804c:	01f3000a 	mvnseq	r0, sl
    8050:	0a254050 	beq	958198 <_Min_Heap_Size+0x957998>
    8054:	9f1af800 	svcls	0x001af800
    8058:	080016f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, r9, sl, ip}
    805c:	080016f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl, ip}
    8060:	f4500001 			; <UNDEFINED> instruction: 0xf4500001
    8064:	f6080016 			; <UNDEFINED> instruction: 0xf6080016
    8068:	0a080016 	beq	2080c8 <_Min_Heap_Size+0x2078c8>
    806c:	5001f300 	andpl	pc, r1, r0, lsl #6
    8070:	000a2540 	andeq	r2, sl, r0, asr #10
    8074:	f69f1af8 			; <UNDEFINED> instruction: 0xf69f1af8
    8078:	f8080016 			; <UNDEFINED> instruction: 0xf8080016
    807c:	01080016 	tsteq	r8, r6, lsl r0
    8080:	16f85000 	ldrbtne	r5, [r8], r0
    8084:	16fa0800 	ldrbtne	r0, [sl], r0, lsl #16
    8088:	000a0800 	andeq	r0, sl, r0, lsl #16
    808c:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    8090:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    8094:	16fa9f1a 	usatne	r9, #26, sl, lsl #30
    8098:	16fc0800 	ldrbtne	r0, [ip], r0, lsl #16
    809c:	00010800 	andeq	r0, r1, r0, lsl #16
    80a0:	0016fc50 	andseq	pc, r6, r0, asr ip	; <UNPREDICTABLE>
    80a4:	0016fe08 	andseq	pc, r6, r8, lsl #28
    80a8:	f3000a08 	vpmax.u8	d0, d0, d8
    80ac:	25405001 	strbcs	r5, [r0, #-1]
    80b0:	1af8000a 	bne	ffe080e0 <_estack+0xdfdfe740>
    80b4:	0016fe9f 	mulseq	r6, pc, lr	; <UNPREDICTABLE>
    80b8:	00170008 	andseq	r0, r7, r8
    80bc:	50000108 	andpl	r0, r0, r8, lsl #2
    80c0:	08001700 	stmdaeq	r0, {r8, r9, sl, ip}
    80c4:	08001702 	stmdaeq	r0, {r1, r8, r9, sl, ip}
    80c8:	01f3000a 	mvnseq	r0, sl
    80cc:	0a254050 	beq	958214 <_Min_Heap_Size+0x957a14>
    80d0:	9f1af800 	svcls	0x001af800
	...
    80dc:	080016a0 	stmdaeq	r0, {r5, r7, r9, sl, ip}
    80e0:	080016a2 	stmdaeq	r0, {r1, r5, r7, r9, sl, ip}
    80e4:	007d0002 	rsbseq	r0, sp, r2
    80e8:	080016a2 	stmdaeq	r0, {r1, r5, r7, r9, sl, ip}
    80ec:	080016ca 	stmdaeq	r0, {r1, r3, r6, r7, r9, sl, ip}
    80f0:	087d0002 	ldmdaeq	sp!, {r1}^
    80f4:	080016ca 	stmdaeq	r0, {r1, r3, r6, r7, r9, sl, ip}
    80f8:	080016cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip}
    80fc:	007d0002 	rsbseq	r0, sp, r2
	...
    810c:	080016a0 	stmdaeq	r0, {r5, r7, r9, sl, ip}
    8110:	080016c0 	stmdaeq	r0, {r6, r7, r9, sl, ip}
    8114:	c0500001 	subsgt	r0, r0, r1
    8118:	cc080016 	stcgt	0, cr0, [r8], {22}
    811c:	04080016 	streq	r0, [r8], #-22	; 0xffffffea
    8120:	5001f300 	andpl	pc, r1, r0, lsl #6
    8124:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8128:	00000000 	andeq	r0, r0, r0
    812c:	00000100 	andeq	r0, r0, r0, lsl #2
    8130:	a6000000 	strge	r0, [r0], -r0
    8134:	c4080016 	strgt	r0, [r8], #-22	; 0xffffffea
    8138:	02080016 	andeq	r0, r8, #22
    813c:	c49f3000 	ldrgt	r3, [pc], #0	; 8144 <_Min_Heap_Size+0x7944>
    8140:	c8080016 	stmdagt	r8, {r1, r2, r4}
    8144:	08080016 	stmdaeq	r8, {r1, r2, r4}
    8148:	40007000 	andmi	r7, r0, r0
    814c:	21007324 	tstcs	r0, r4, lsr #6
    8150:	0016c89f 	mulseq	r6, pc, r8	; <UNPREDICTABLE>
    8154:	0016cc08 	andseq	ip, r6, r8, lsl #24
    8158:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    8164:	00000003 	andeq	r0, r0, r3
    8168:	080016a6 	stmdaeq	r0, {r1, r2, r5, r7, r9, sl, ip}
    816c:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
    8170:	9f300002 	svcls	0x00300002
    8174:	080016a8 	stmdaeq	r0, {r3, r5, r7, r9, sl, ip}
    8178:	080016c4 	stmdaeq	r0, {r2, r6, r7, r9, sl, ip}
    817c:	00530001 	subseq	r0, r3, r1
    8180:	00000000 	andeq	r0, r0, r0
    8184:	1c000000 	stcne	0, cr0, [r0], {-0}
    8188:	1e080017 	mcrne	0, 0, r0, cr8, cr7, {0}
    818c:	02080017 	andeq	r0, r8, #23
    8190:	1e007d00 	cdpne	13, 0, cr7, cr0, cr0, {0}
    8194:	6c080017 	stcvs	0, cr0, [r8], {23}
    8198:	02080017 	andeq	r0, r8, #23
    819c:	00087d00 	andeq	r7, r8, r0, lsl #26
    81a0:	00000000 	andeq	r0, r0, r0
    81a4:	6c000000 	stcvs	0, cr0, [r0], {-0}
    81a8:	6e080019 	mcrvs	0, 0, r0, cr8, cr9, {0}
    81ac:	02080019 	andeq	r0, r8, #25
    81b0:	6e007d00 	cdpvs	13, 0, cr7, cr0, cr0, {0}
    81b4:	f4080019 	vst4.8	{d0-d3}, [r8 :64], r9
    81b8:	02080019 	andeq	r0, r8, #25
    81bc:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    81c8:	6c000000 	stcvs	0, cr0, [r0], {-0}
    81cc:	72080019 	andvc	r0, r8, #25
    81d0:	01080019 	tsteq	r8, r9, lsl r0
    81d4:	19725000 	ldmdbne	r2!, {ip, lr}^
    81d8:	19f40800 	ldmibne	r4!, {fp}^
    81dc:	00010800 	andeq	r0, r1, r0, lsl #16
    81e0:	00000054 	andeq	r0, r0, r4, asr r0
	...
    81ec:	46000000 	strmi	r0, [r0], -r0
    81f0:	5e08001a 	mcrpl	0, 0, r0, cr8, cr10, {0}
    81f4:	0108001a 	tsteq	r8, sl, lsl r0
    81f8:	1a5e5000 	bne	179c200 <_Min_Heap_Size+0x179ba00>
    81fc:	1a640800 	bne	190a204 <_Min_Heap_Size+0x1909a04>
    8200:	00040800 	andeq	r0, r4, r0, lsl #16
    8204:	9f5001f3 	svcls	0x005001f3
    8208:	08001a64 	stmdaeq	r0, {r2, r5, r6, r9, fp, ip}
    820c:	08001a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp, ip}
    8210:	00500001 	subseq	r0, r0, r1
	...
    821c:	001a4800 	andseq	r4, sl, r0, lsl #16
    8220:	001a6a08 	andseq	r6, sl, r8, lsl #20
    8224:	53000108 	movwpl	r0, #264	; 0x108
	...
    8230:	08001a14 	stmdaeq	r0, {r2, r4, r9, fp, ip}
    8234:	08001a16 	stmdaeq	r0, {r1, r2, r4, r9, fp, ip}
    8238:	007d0002 	rsbseq	r0, sp, r2
    823c:	08001a16 	stmdaeq	r0, {r1, r2, r4, r9, fp, ip}
    8240:	08001a40 	stmdaeq	r0, {r6, r9, fp, ip}
    8244:	087d0002 	ldmdaeq	sp!, {r1}^
    8248:	08001a40 	stmdaeq	r0, {r6, r9, fp, ip}
    824c:	08001a42 	stmdaeq	r0, {r1, r6, r9, fp, ip}
    8250:	007d0002 	rsbseq	r0, sp, r2
    8254:	08001a42 	stmdaeq	r0, {r1, r6, r9, fp, ip}
    8258:	08001a46 	stmdaeq	r0, {r1, r2, r6, r9, fp, ip}
    825c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    826c:	1a220000 	bne	888274 <_Min_Heap_Size+0x887a74>
    8270:	1a260800 	bne	98a278 <_Min_Heap_Size+0x989a78>
    8274:	00010800 	andeq	r0, r1, r0, lsl #16
    8278:	001a2653 	andseq	r2, sl, r3, asr r6
    827c:	001a4008 	andseq	r4, sl, r8
    8280:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    8284:	08001a44 	stmdaeq	r0, {r2, r6, r9, fp, ip}
    8288:	08001a46 	stmdaeq	r0, {r1, r2, r6, r9, fp, ip}
    828c:	00540001 	subseq	r0, r4, r1
	...
    8298:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    829c:	4008001a 	andmi	r0, r8, sl, lsl r0
    82a0:	0108001a 	tsteq	r8, sl, lsl r0
    82a4:	1a425500 	bne	109d6ac <_Min_Heap_Size+0x109ceac>
    82a8:	1a460800 	bne	118a2b0 <_Min_Heap_Size+0x1189ab0>
    82ac:	00010800 	andeq	r0, r1, r0, lsl #16
    82b0:	00000055 	andeq	r0, r0, r5, asr r0
	...
    82c0:	01000000 	mrseq	r0, (UNDEF: 0)
    82c4:	00005300 	andeq	r5, r0, r0, lsl #6
    82c8:	00000000 	andeq	r0, r0, r0
    82cc:	1b1e0000 	blne	7882d4 <_Min_Heap_Size+0x787ad4>
    82d0:	1b200800 	blne	80a2d8 <_Min_Heap_Size+0x809ad8>
    82d4:	00020800 	andeq	r0, r2, r0, lsl #16
    82d8:	1b20007d 	blne	8084d4 <_Min_Heap_Size+0x807cd4>
    82dc:	1b220800 	blne	88a2e4 <_Min_Heap_Size+0x889ae4>
    82e0:	00020800 	andeq	r0, r2, r0, lsl #16
    82e4:	1b22107d 	blne	88c4e0 <_Min_Heap_Size+0x88bce0>
    82e8:	1b340800 	blne	d0a2f0 <_Min_Heap_Size+0xd09af0>
    82ec:	00020800 	andeq	r0, r2, r0, lsl #16
    82f0:	1b34187d 	blne	d0e4ec <_Min_Heap_Size+0xd0dcec>
    82f4:	1b360800 	blne	d8a2fc <_Min_Heap_Size+0xd89afc>
    82f8:	00020800 	andeq	r0, r2, r0, lsl #16
    82fc:	1b36107d 	blne	d8c4f8 <_Min_Heap_Size+0xd8bcf8>
    8300:	1b760800 	blne	1d8a308 <_Min_Heap_Size+0x1d89b08>
    8304:	00020800 	andeq	r0, r2, r0, lsl #16
    8308:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    8318:	08001b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp, ip}
    831c:	08001b30 	stmdaeq	r0, {r4, r5, r8, r9, fp, ip}
    8320:	36500001 	ldrbcc	r0, [r0], -r1
    8324:	4208001b 	andmi	r0, r8, #27
    8328:	0108001b 	tsteq	r8, fp, lsl r0
    832c:	1b425000 	blne	109c334 <_Min_Heap_Size+0x109bb34>
    8330:	1b450800 	blne	114a338 <_Min_Heap_Size+0x1149b38>
    8334:	00020800 	andeq	r0, r2, r0, lsl #16
    8338:	00000071 	andeq	r0, r0, r1, ror r0
	...
    8344:	08001b26 	stmdaeq	r0, {r1, r2, r5, r8, r9, fp, ip}
    8348:	08001b76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, fp, ip}
    834c:	00540001 	subseq	r0, r4, r1
    8350:	00000000 	andeq	r0, r0, r0
    8354:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    8364:	001b2600 	andseq	r2, fp, r0, lsl #12
    8368:	001b3008 	andseq	r3, fp, r8
    836c:	30000208 	andcc	r0, r0, r8, lsl #4
    8370:	001b369f 	mulseq	fp, pc, r6	; <UNPREDICTABLE>
    8374:	001b4808 	andseq	r4, fp, r8, lsl #16
    8378:	30000208 	andcc	r0, r0, r8, lsl #4
    837c:	001b489f 	mulseq	fp, pc, r8	; <UNPREDICTABLE>
    8380:	001b5808 	andseq	r5, fp, r8, lsl #16
    8384:	50000108 	andpl	r0, r0, r8, lsl #2
    8388:	08001b58 	stmdaeq	r0, {r3, r4, r6, r8, r9, fp, ip}
    838c:	08001b62 	stmdaeq	r0, {r1, r5, r6, r8, r9, fp, ip}
    8390:	62550001 	subsvs	r0, r5, #1
    8394:	6408001b 	strvs	r0, [r8], #-27	; 0xffffffe5
    8398:	0208001b 	andeq	r0, r8, #27
    839c:	649f3100 	ldrvs	r3, [pc], #256	; 83a4 <_Min_Heap_Size+0x7ba4>
    83a0:	6708001b 	smladvs	r8, fp, r0, r0
    83a4:	0108001b 	tsteq	r8, fp, lsl r0
    83a8:	1b675000 	blne	19dc3b0 <_Min_Heap_Size+0x19dbbb0>
    83ac:	1b760800 	blne	1d8a3b4 <_Min_Heap_Size+0x1d89bb4>
    83b0:	00010800 	andeq	r0, r1, r0, lsl #16
    83b4:	00000055 	andeq	r0, r0, r5, asr r0
	...
    83c0:	001b3c00 	andseq	r3, fp, r0, lsl #24
    83c4:	001b6e08 	andseq	r6, fp, r8, lsl #28
    83c8:	56000108 	strpl	r0, [r0], -r8, lsl #2
    83cc:	08001b6e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9, fp, ip}
    83d0:	08001b70 	stmdaeq	r0, {r4, r5, r6, r8, r9, fp, ip}
    83d4:	7f760003 	svcvc	0x00760003
    83d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    83dc:	00000000 	andeq	r0, r0, r0
    83e0:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    83e4:	7608001b 			; <UNDEFINED> instruction: 0x7608001b
    83e8:	0108001b 	tsteq	r8, fp, lsl r0
    83ec:	00005000 	andeq	r5, r0, r0
	...
    83fc:	00020000 	andeq	r0, r2, r0
    8400:	0000007d 	andeq	r0, r0, sp, ror r0
    8404:	00000000 	andeq	r0, r0, r0
    8408:	00020000 	andeq	r0, r2, r0
    840c:	0000047d 	andeq	r0, r0, sp, ror r4
    8410:	00000000 	andeq	r0, r0, r0
    8414:	00020000 	andeq	r0, r2, r0
    8418:	0000107d 	andeq	r1, r0, sp, ror r0
    841c:	00000000 	andeq	r0, r0, r0
    8420:	00020000 	andeq	r0, r2, r0
    8424:	0000047d 	andeq	r0, r0, sp, ror r4
	...
    8438:	00010000 	andeq	r0, r1, r0
    843c:	00000050 	andeq	r0, r0, r0, asr r0
    8440:	00000000 	andeq	r0, r0, r0
    8444:	f3000400 	vshl.u8	d0, d0, d0
    8448:	009f5001 	addseq	r5, pc, r1
	...
    8458:	02000000 	andeq	r0, r0, #0
    845c:	00007d00 	andeq	r7, r0, r0, lsl #26
    8460:	00000000 	andeq	r0, r0, r0
    8464:	02000000 	andeq	r0, r0, #0
    8468:	00047d00 	andeq	r7, r4, r0, lsl #26
    846c:	00000000 	andeq	r0, r0, r0
    8470:	02000000 	andeq	r0, r0, #0
    8474:	00107d00 	andseq	r7, r0, r0, lsl #26
    8478:	00000000 	andeq	r0, r0, r0
    847c:	02000000 	andeq	r0, r0, #0
    8480:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
    8494:	01000000 	mrseq	r0, (UNDEF: 0)
    8498:	00005000 	andeq	r5, r0, r0
    849c:	00000000 	andeq	r0, r0, r0
    84a0:	00040000 	andeq	r0, r4, r0
    84a4:	9f5001f3 	svcls	0x005001f3
	...
    84bc:	00010000 	andeq	r0, r1, r0
    84c0:	00000051 	andeq	r0, r0, r1, asr r0
    84c4:	00000000 	andeq	r0, r0, r0
    84c8:	52000100 	andpl	r0, r0, #0, 2
	...
    84d4:	01f30004 	mvnseq	r0, r4
    84d8:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    84e8:	00020000 	andeq	r0, r2, r0
    84ec:	0000007d 	andeq	r0, r0, sp, ror r0
    84f0:	00000000 	andeq	r0, r0, r0
    84f4:	00020000 	andeq	r0, r2, r0
    84f8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    8514:	00010000 	andeq	r0, r1, r0
    8518:	00000050 	andeq	r0, r0, r0, asr r0
    851c:	00000000 	andeq	r0, r0, r0
    8520:	f3000400 	vshl.u8	d0, d0, d0
    8524:	009f5001 	addseq	r5, pc, r1
    8528:	00000000 	andeq	r0, r0, r0
    852c:	01000000 	mrseq	r0, (UNDEF: 0)
    8530:	00005000 	andeq	r5, r0, r0
    8534:	00000000 	andeq	r0, r0, r0
    8538:	00010000 	andeq	r0, r1, r0
    853c:	00000054 	andeq	r0, r0, r4, asr r0
    8540:	00000000 	andeq	r0, r0, r0
    8544:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8550:	00540001 	subseq	r0, r4, r1
	...
    855c:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    8568:	01000000 	mrseq	r0, (UNDEF: 0)
    856c:	00005100 	andeq	r5, r0, r0, lsl #2
    8570:	00000000 	andeq	r0, r0, r0
    8574:	00040000 	andeq	r0, r4, r0
    8578:	9f5101f3 	svcls	0x005101f3
	...
    8584:	00510001 	subseq	r0, r1, r1
    8588:	00000000 	andeq	r0, r0, r0
    858c:	04000000 	streq	r0, [r0], #-0
    8590:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    8594:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8598:	00000000 	andeq	r0, r0, r0
    859c:	01020000 	mrseq	r0, (UNDEF: 2)
	...
    85a8:	30000200 	andcc	r0, r0, r0, lsl #4
    85ac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    85b0:	00000000 	andeq	r0, r0, r0
    85b4:	31000200 	mrscc	r0, R8_usr
    85b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    85bc:	00000000 	andeq	r0, r0, r0
    85c0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    85d4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    85e0:	01f30004 	mvnseq	r0, r4
    85e4:	00009f50 	andeq	r9, r0, r0, asr pc
    85e8:	00000000 	andeq	r0, r0, r0
    85ec:	00010000 	andeq	r0, r1, r0
    85f0:	00000050 	andeq	r0, r0, r0, asr r0
    85f4:	00000000 	andeq	r0, r0, r0
    85f8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8604:	00500001 	subseq	r0, r0, r1
    8608:	00000000 	andeq	r0, r0, r0
    860c:	01000000 	mrseq	r0, (UNDEF: 0)
    8610:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8620:	00020000 	andeq	r0, r2, r0
    8624:	0000007d 	andeq	r0, r0, sp, ror r0
    8628:	00000000 	andeq	r0, r0, r0
    862c:	00020000 	andeq	r0, r2, r0
    8630:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    8650:	00500001 	subseq	r0, r0, r1
    8654:	00000000 	andeq	r0, r0, r0
    8658:	01000000 	mrseq	r0, (UNDEF: 0)
    865c:	00005400 	andeq	r5, r0, r0, lsl #8
    8660:	00000000 	andeq	r0, r0, r0
    8664:	00040000 	andeq	r0, r4, r0
    8668:	9f5001f3 	svcls	0x005001f3
	...
    8674:	00540001 	subseq	r0, r4, r1
    8678:	00000000 	andeq	r0, r0, r0
    867c:	04000000 	streq	r0, [r0], #-0
    8680:	5001f300 	andpl	pc, r1, r0, lsl #6
    8684:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8688:	00000000 	andeq	r0, r0, r0
    868c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    8698:	01f30004 	mvnseq	r0, r4
    869c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    86b0:	00010000 	andeq	r0, r1, r0
    86b4:	00000051 	andeq	r0, r0, r1, asr r0
    86b8:	00000000 	andeq	r0, r0, r0
    86bc:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    86c8:	00010000 	andeq	r0, r1, r0
	...
    86d4:	00540001 	subseq	r0, r4, r1
    86d8:	00000000 	andeq	r0, r0, r0
    86dc:	02000000 	andeq	r0, r0, #0
    86e0:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    86f0:	02000000 	andeq	r0, r0, #0
    86f4:	00007d00 	andeq	r7, r0, r0, lsl #26
    86f8:	00000000 	andeq	r0, r0, r0
    86fc:	02000000 	andeq	r0, r0, #0
    8700:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    8714:	01000000 	mrseq	r0, (UNDEF: 0)
    8718:	00005000 	andeq	r5, r0, r0
    871c:	00000000 	andeq	r0, r0, r0
    8720:	00040000 	andeq	r0, r4, r0
    8724:	9f5001f3 	svcls	0x005001f3
	...
    8738:	00010000 	andeq	r0, r1, r0
    873c:	00000050 	andeq	r0, r0, r0, asr r0
    8740:	00000000 	andeq	r0, r0, r0
    8744:	001dfc00 	andseq	pc, sp, r0, lsl #24
    8748:	001dfe08 	andseq	pc, sp, r8, lsl #28
    874c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8750:	001dfe00 	andseq	pc, sp, r0, lsl #28
    8754:	001e4e08 	andseq	r4, lr, r8, lsl #28
    8758:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    875c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    8768:	001dfc00 	andseq	pc, sp, r0, lsl #24
    876c:	001e0708 	andseq	r0, lr, r8, lsl #14
    8770:	50000108 	andpl	r0, r0, r8, lsl #2
    8774:	08001e07 	stmdaeq	r0, {r0, r1, r2, r9, sl, fp, ip}
    8778:	08001e4e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl, fp, ip}
    877c:	00540001 	subseq	r0, r4, r1
	...
    8788:	fc000000 	stc2	0, cr0, [r0], {-0}
    878c:	0708001d 	smladeq	r8, sp, r0, r0
    8790:	0108001e 	tsteq	r8, lr, lsl r0
    8794:	1e075100 	adfnes	f5, f7, f0
    8798:	1e4e0800 	cdpne	8, 4, cr0, cr14, cr0, {0}
    879c:	00010800 	andeq	r0, r1, r0, lsl #16
    87a0:	00000055 	andeq	r0, r0, r5, asr r0
	...
    87ac:	001dfc00 	andseq	pc, sp, r0, lsl #24
    87b0:	001e0708 	andseq	r0, lr, r8, lsl #14
    87b4:	52000108 	andpl	r0, r0, #8, 2
    87b8:	08001e07 	stmdaeq	r0, {r0, r1, r2, r9, sl, fp, ip}
    87bc:	08001e4e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl, fp, ip}
    87c0:	00560001 	subseq	r0, r6, r1
    87c4:	00000000 	andeq	r0, r0, r0
    87c8:	01000000 	mrseq	r0, (UNDEF: 0)
    87cc:	04000000 	streq	r0, [r0], #-0
    87d0:	0708001e 	smladeq	r8, lr, r0, r0
    87d4:	0108001e 	tsteq	r8, lr, lsl r0
    87d8:	1e075000 	cdpne	0, 0, cr5, cr7, cr0, {0}
    87dc:	1e4e0800 	cdpne	8, 4, cr0, cr14, cr0, {0}
    87e0:	00010800 	andeq	r0, r1, r0, lsl #16
    87e4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    87fc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8808:	01f30004 	mvnseq	r0, r4
    880c:	00009f50 	andeq	r9, r0, r0, asr pc
    8810:	00000000 	andeq	r0, r0, r0
    8814:	00010000 	andeq	r0, r1, r0
    8818:	00000050 	andeq	r0, r0, r0, asr r0
    881c:	00000000 	andeq	r0, r0, r0
    8820:	f3000400 	vshl.u8	d0, d0, d0
    8824:	009f5001 	addseq	r5, pc, r1
	...
    8838:	30000200 	andcc	r0, r0, r0, lsl #4
    883c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8840:	00000000 	andeq	r0, r0, r0
    8844:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    8854:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8860:	01f30004 	mvnseq	r0, r4
    8864:	00009f50 	andeq	r9, r0, r0, asr pc
    8868:	00000000 	andeq	r0, r0, r0
    886c:	00010000 	andeq	r0, r1, r0
    8870:	00000050 	andeq	r0, r0, r0, asr r0
    8874:	00000000 	andeq	r0, r0, r0
    8878:	f3000400 	vshl.u8	d0, d0, d0
    887c:	009f5001 	addseq	r5, pc, r1
	...
    888c:	02000000 	andeq	r0, r0, #0
    8890:	00007d00 	andeq	r7, r0, r0, lsl #26
    8894:	00000000 	andeq	r0, r0, r0
    8898:	02000000 	andeq	r0, r0, #0
    889c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    88b8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    88c4:	00540001 	subseq	r0, r4, r1
    88c8:	00000000 	andeq	r0, r0, r0
    88cc:	04000000 	streq	r0, [r0], #-0
    88d0:	5001f300 	andpl	pc, r1, r0, lsl #6
    88d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    88d8:	00000000 	andeq	r0, r0, r0
    88dc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    88e8:	01f30004 	mvnseq	r0, r4
    88ec:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8900:	00540001 	subseq	r0, r4, r1
	...
    8918:	01000000 	mrseq	r0, (UNDEF: 0)
    891c:	00005000 	andeq	r5, r0, r0
    8920:	00000000 	andeq	r0, r0, r0
    8924:	00040000 	andeq	r0, r4, r0
    8928:	9f5001f3 	svcls	0x005001f3
	...
    8934:	00500001 	subseq	r0, r0, r1
    8938:	00000000 	andeq	r0, r0, r0
    893c:	04000000 	streq	r0, [r0], #-0
    8940:	5001f300 	andpl	pc, r1, r0, lsl #6
    8944:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8948:	00000000 	andeq	r0, r0, r0
    894c:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    895c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8968:	01f30004 	mvnseq	r0, r4
    896c:	00009f50 	andeq	r9, r0, r0, asr pc
    8970:	00000000 	andeq	r0, r0, r0
    8974:	00010000 	andeq	r0, r1, r0
    8978:	00000050 	andeq	r0, r0, r0, asr r0
    897c:	00000000 	andeq	r0, r0, r0
    8980:	f3000400 	vshl.u8	d0, d0, d0
    8984:	009f5001 	addseq	r5, pc, r1
    8988:	00000000 	andeq	r0, r0, r0
    898c:	6a000000 	bvs	8994 <_Min_Heap_Size+0x8194>
    8990:	6c08001a 	stcvs	0, cr0, [r8], {26}
    8994:	0208001a 	andeq	r0, r8, #26
    8998:	6c007d00 	stcvs	13, cr7, [r0], {-0}
    899c:	8408001a 	strhi	r0, [r8], #-26	; 0xffffffe6
    89a0:	0208001a 	andeq	r0, r8, #26
    89a4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    89b8:	001a6a00 	andseq	r6, sl, r0, lsl #20
    89bc:	001a7108 	andseq	r7, sl, r8, lsl #2
    89c0:	50000108 	andpl	r0, r0, r8, lsl #2
    89c4:	08001a71 	stmdaeq	r0, {r0, r4, r5, r6, r9, fp, ip}
    89c8:	08001a78 	stmdaeq	r0, {r3, r4, r5, r6, r9, fp, ip}
    89cc:	78540001 	ldmdavc	r4, {r0}^
    89d0:	8008001a 	andhi	r0, r8, sl, lsl r0
    89d4:	0408001a 	streq	r0, [r8], #-26	; 0xffffffe6
    89d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    89dc:	001a809f 	mulseq	sl, pc, r0	; <UNPREDICTABLE>
    89e0:	001a8208 	andseq	r8, sl, r8, lsl #4
    89e4:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    89e8:	08001a82 	stmdaeq	r0, {r1, r7, r9, fp, ip}
    89ec:	08001a84 	stmdaeq	r0, {r2, r7, r9, fp, ip}
    89f0:	01f30004 	mvnseq	r0, r4
    89f4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8a00:	08001a78 	stmdaeq	r0, {r3, r4, r5, r6, r9, fp, ip}
    8a04:	08001a80 	stmdaeq	r0, {r7, r9, fp, ip}
    8a08:	00540001 	subseq	r0, r4, r1
    8a0c:	00000000 	andeq	r0, r0, r0
    8a10:	76000000 	strvc	r0, [r0], -r0
    8a14:	7808001b 	stmdavc	r8, {r0, r1, r3, r4}
    8a18:	0208001b 	andeq	r0, r8, #27
    8a1c:	78007d00 	stmdavc	r0, {r8, sl, fp, ip, sp, lr}
    8a20:	f808001b 			; <UNDEFINED> instruction: 0xf808001b
    8a24:	0208001b 	andeq	r0, r8, #27
    8a28:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    8a34:	76000000 	strvc	r0, [r0], -r0
    8a38:	7d08001b 	stcvc	0, cr0, [r8, #-108]	; 0xffffff94
    8a3c:	0108001b 	tsteq	r8, fp, lsl r0
    8a40:	1b7d5000 	blne	1f5ca48 <_Min_Heap_Size+0x1f5c248>
    8a44:	1bf80800 	blne	ffe0aa4c <_estack+0xdfe010ac>
    8a48:	00010800 	andeq	r0, r1, r0, lsl #16
    8a4c:	00000055 	andeq	r0, r0, r5, asr r0
	...
    8a58:	001b8400 	andseq	r8, fp, r0, lsl #8
    8a5c:	001b9608 	andseq	r9, fp, r8, lsl #12
    8a60:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    8a64:	08001b98 	stmdaeq	r0, {r3, r4, r7, r8, r9, fp, ip}
    8a68:	08001bca 	stmdaeq	r0, {r1, r3, r6, r7, r8, r9, fp, ip}
    8a6c:	00540001 	subseq	r0, r4, r1
	...
    8a78:	cc000000 	stcgt	0, cr0, [r0], {-0}
    8a7c:	d008001b 	andle	r0, r8, fp, lsl r0
    8a80:	0108001b 	tsteq	r8, fp, lsl r0
    8a84:	1bd25400 	blne	ff49da8c <_estack+0xdf4940ec>
    8a88:	1bf80800 	blne	ffe0aa90 <_estack+0xdfe010f0>
    8a8c:	00010800 	andeq	r0, r1, r0, lsl #16
    8a90:	00000054 	andeq	r0, r0, r4, asr r0
    8a94:	00000000 	andeq	r0, r0, r0
    8a98:	001afa00 	andseq	pc, sl, r0, lsl #20
    8a9c:	001b0208 	andseq	r0, fp, r8, lsl #4
    8aa0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8aa4:	001b0200 	andseq	r0, fp, r0, lsl #4
    8aa8:	001b1c08 	andseq	r1, fp, r8, lsl #24
    8aac:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    8ab0:	001b1c08 	andseq	r1, fp, r8, lsl #24
    8ab4:	001b1e08 	andseq	r1, fp, r8, lsl #28
    8ab8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
	...
    8acc:	001afa00 	andseq	pc, sl, r0, lsl #20
    8ad0:	001b0408 	andseq	r0, fp, r8, lsl #8
    8ad4:	50000108 	andpl	r0, r0, r8, lsl #2
    8ad8:	08001b04 	stmdaeq	r0, {r2, r8, r9, fp, ip}
    8adc:	08001b19 	stmdaeq	r0, {r0, r3, r4, r8, r9, fp, ip}
    8ae0:	19530001 	ldmdbne	r3, {r0}^
    8ae4:	1c08001b 	stcne	0, cr0, [r8], {27}
    8ae8:	0408001b 	streq	r0, [r8], #-27	; 0xffffffe5
    8aec:	5001f300 	andpl	pc, r1, r0, lsl #6
    8af0:	001b1c9f 	mulseq	fp, pc, ip	; <UNPREDICTABLE>
    8af4:	001b1e08 	andseq	r1, fp, r8, lsl #28
    8af8:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    8b0c:	08001afa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, fp, ip}
    8b10:	08001b06 	stmdaeq	r0, {r1, r2, r8, r9, fp, ip}
    8b14:	06510001 	ldrbeq	r0, [r1], -r1
    8b18:	1908001b 	stmdbne	r8, {r0, r1, r3, r4}
    8b1c:	0108001b 	tsteq	r8, fp, lsl r0
    8b20:	1b195000 	blne	65cb28 <_Min_Heap_Size+0x65c328>
    8b24:	1b1c0800 	blne	70ab2c <_Min_Heap_Size+0x70a32c>
    8b28:	00040800 	andeq	r0, r4, r0, lsl #16
    8b2c:	9f5101f3 	svcls	0x005101f3
    8b30:	08001b1c 	stmdaeq	r0, {r2, r3, r4, r8, r9, fp, ip}
    8b34:	08001b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp, ip}
    8b38:	00510001 	subseq	r0, r1, r1
    8b3c:	00000000 	andeq	r0, r0, r0
    8b40:	84000000 	strhi	r0, [r0], #-0
    8b44:	8608001a 			; <UNDEFINED> instruction: 0x8608001a
    8b48:	0208001a 	andeq	r0, r8, #26
    8b4c:	86007d00 	strhi	r7, [r0], -r0, lsl #26
    8b50:	fa08001a 	blx	208bc0 <_Min_Heap_Size+0x2083c0>
    8b54:	0208001a 	andeq	r0, r8, #26
    8b58:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    8b70:	84000000 	strhi	r0, [r0], #-0
    8b74:	9608001a 			; <UNDEFINED> instruction: 0x9608001a
    8b78:	0108001a 	tsteq	r8, sl, lsl r0
    8b7c:	1a965000 	bne	fe59cb84 <_estack+0xde5931e4>
    8b80:	1a9c0800 	bne	fe70ab88 <_estack+0xde7011e8>
    8b84:	00010800 	andeq	r0, r1, r0, lsl #16
    8b88:	001a9c54 	andseq	r9, sl, r4, asr ip
    8b8c:	001a9e08 	andseq	r9, sl, r8, lsl #28
    8b90:	50000108 	andpl	r0, r0, r8, lsl #2
    8b94:	08001a9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r9, fp, ip}
    8b98:	08001aa8 	stmdaeq	r0, {r3, r5, r7, r9, fp, ip}
    8b9c:	a8540001 	ldmdage	r4, {r0}^
    8ba0:	ac08001a 	stcge	0, cr0, [r8], {26}
    8ba4:	0108001a 	tsteq	r8, sl, lsl r0
    8ba8:	1aac5000 	bne	feb1cbb0 <_estack+0xdeb13210>
    8bac:	1ac60800 	bne	ff18abb4 <_estack+0xdf181214>
    8bb0:	00010800 	andeq	r0, r1, r0, lsl #16
    8bb4:	001ac654 	andseq	ip, sl, r4, asr r6
    8bb8:	001ac808 	andseq	ip, sl, r8, lsl #16
    8bbc:	50000108 	andpl	r0, r0, r8, lsl #2
    8bc0:	08001ac8 	stmdaeq	r0, {r3, r6, r7, r9, fp, ip}
    8bc4:	08001afa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, fp, ip}
    8bc8:	00540001 	subseq	r0, r4, r1
	...
    8be0:	84000000 	strhi	r0, [r0], #-0
    8be4:	9608001a 			; <UNDEFINED> instruction: 0x9608001a
    8be8:	0108001a 	tsteq	r8, sl, lsl r0
    8bec:	1a965100 	bne	fe59cff4 <_estack+0xde593654>
    8bf0:	1a9c0800 	bne	fe70abf8 <_estack+0xde701258>
    8bf4:	00040800 	andeq	r0, r4, r0, lsl #16
    8bf8:	9f5101f3 	svcls	0x005101f3
    8bfc:	08001a9c 	stmdaeq	r0, {r2, r3, r4, r7, r9, fp, ip}
    8c00:	08001aa1 	stmdaeq	r0, {r0, r5, r7, r9, fp, ip}
    8c04:	a1510001 	cmpge	r1, r1
    8c08:	a808001a 	stmdage	r8, {r1, r3, r4}
    8c0c:	0408001a 	streq	r0, [r8], #-26	; 0xffffffe6
    8c10:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    8c14:	001aa89f 	mulseq	sl, pc, r8	; <UNPREDICTABLE>
    8c18:	001aaf08 	andseq	sl, sl, r8, lsl #30
    8c1c:	51000108 	tstpl	r0, r8, lsl #2
    8c20:	08001aaf 	stmdaeq	r0, {r0, r1, r2, r3, r5, r7, r9, fp, ip}
    8c24:	08001ac6 	stmdaeq	r0, {r1, r2, r6, r7, r9, fp, ip}
    8c28:	01f30004 	mvnseq	r0, r4
    8c2c:	1ac69f51 	bne	ff1b0978 <_estack+0xdf1a6fd8>
    8c30:	1acb0800 	bne	ff2cac38 <_estack+0xdf2c1298>
    8c34:	00010800 	andeq	r0, r1, r0, lsl #16
    8c38:	001acb51 	andseq	ip, sl, r1, asr fp
    8c3c:	001afa08 	andseq	pc, sl, r8, lsl #20
    8c40:	f3000408 	vshl.u8	d0, d8, d0
    8c44:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    8c50:	84000000 	strhi	r0, [r0], #-0
    8c54:	8e08001a 	mcrhi	0, 0, r0, cr8, cr10, {0}
    8c58:	0108001a 	tsteq	r8, sl, lsl r0
    8c5c:	1a8e5200 	bne	fe39d464 <_estack+0xde393ac4>
    8c60:	1afa0800 	bne	ffe8ac68 <_estack+0xdfe812c8>
    8c64:	00010800 	andeq	r0, r1, r0, lsl #16
    8c68:	00000055 	andeq	r0, r0, r5, asr r0
    8c6c:	00000000 	andeq	r0, r0, r0
    8c70:	00000100 	andeq	r0, r0, r0, lsl #2
    8c74:	00000000 	andeq	r0, r0, r0
    8c78:	8a000000 	bhi	8c80 <_Min_Heap_Size+0x8480>
    8c7c:	9608001a 			; <UNDEFINED> instruction: 0x9608001a
    8c80:	0208001a 	andeq	r0, r8, #26
    8c84:	969f3000 	ldrls	r3, [pc], r0
    8c88:	9c08001a 	stcls	0, cr0, [r8], {26}
    8c8c:	0108001a 	tsteq	r8, sl, lsl r0
    8c90:	1a9c5000 	bne	fe71cc98 <_estack+0xde7132f8>
    8c94:	1aa20800 	bne	fe88ac9c <_estack+0xde8812fc>
    8c98:	00020800 	andeq	r0, r2, r0, lsl #16
    8c9c:	1aa29f30 	bne	fe8b0964 <_estack+0xde8a6fc4>
    8ca0:	1aa80800 	bne	fea0aca8 <_estack+0xdea01308>
    8ca4:	00010800 	andeq	r0, r1, r0, lsl #16
    8ca8:	001aa850 	andseq	sl, sl, r0, asr r8
    8cac:	001afa08 	andseq	pc, sl, r8, lsl #20
    8cb0:	30000208 	andcc	r0, r0, r8, lsl #4
    8cb4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8cc0:	8c000000 	stchi	0, cr0, [r0], {-0}
    8cc4:	9808001a 	stmdals	r8, {r1, r3, r4}
    8cc8:	0108001a 	tsteq	r8, sl, lsl r0
    8ccc:	1a985600 	bne	fe61e4d4 <_estack+0xde614b34>
    8cd0:	1a9c0800 	bne	fe70acd8 <_estack+0xde701338>
    8cd4:	00030800 	andeq	r0, r3, r0, lsl #16
    8cd8:	9c9f7f76 	ldcls	15, cr7, [pc], {118}	; 0x76
    8cdc:	fa08001a 	blx	208d4c <_Min_Heap_Size+0x20854c>
    8ce0:	0108001a 	tsteq	r8, sl, lsl r0
    8ce4:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    8cfc:	00500001 	subseq	r0, r0, r1
    8d00:	00000000 	andeq	r0, r0, r0
    8d04:	01000000 	mrseq	r0, (UNDEF: 0)
    8d08:	00005300 	andeq	r5, r0, r0, lsl #6
    8d0c:	00000000 	andeq	r0, r0, r0
    8d10:	00040000 	andeq	r0, r4, r0
    8d14:	9f5001f3 	svcls	0x005001f3
	...
    8d20:	00000100 	andeq	r0, r0, r0, lsl #2
    8d24:	00000000 	andeq	r0, r0, r0
    8d28:	00010000 	andeq	r0, r1, r0
    8d2c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    8d40:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8d4c:	01f30004 	mvnseq	r0, r4
    8d50:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8d64:	00010000 	andeq	r0, r1, r0
    8d68:	00000050 	andeq	r0, r0, r0, asr r0
    8d6c:	00000000 	andeq	r0, r0, r0
    8d70:	f3000400 	vshl.u8	d0, d0, d0
    8d74:	009f5001 	addseq	r5, pc, r1
	...
    8d84:	02000000 	andeq	r0, r0, #0
    8d88:	00007d00 	andeq	r7, r0, r0, lsl #26
    8d8c:	00000000 	andeq	r0, r0, r0
    8d90:	02000000 	andeq	r0, r0, #0
    8d94:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    8dac:	01000000 	mrseq	r0, (UNDEF: 0)
    8db0:	00005000 	andeq	r5, r0, r0
    8db4:	00000000 	andeq	r0, r0, r0
    8db8:	00040000 	andeq	r0, r4, r0
    8dbc:	9f5001f3 	svcls	0x005001f3
	...
    8dc8:	00500001 	subseq	r0, r0, r1
    8dcc:	00000000 	andeq	r0, r0, r0
    8dd0:	04000000 	streq	r0, [r0], #-0
    8dd4:	5001f300 	andpl	pc, r1, r0, lsl #6
    8dd8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    8ddc:	00000000 	andeq	r0, r0, r0
    8de0:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    8df0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8dfc:	01f30004 	mvnseq	r0, r4
    8e00:	00009f50 	andeq	r9, r0, r0, asr pc
    8e04:	00000000 	andeq	r0, r0, r0
    8e08:	00010000 	andeq	r0, r1, r0
    8e0c:	00000050 	andeq	r0, r0, r0, asr r0
    8e10:	00000000 	andeq	r0, r0, r0
    8e14:	f3000400 	vshl.u8	d0, d0, d0
    8e18:	009f5001 	addseq	r5, pc, r1
	...
    8e2c:	01000000 	mrseq	r0, (UNDEF: 0)
    8e30:	00005000 	andeq	r5, r0, r0
    8e34:	00000000 	andeq	r0, r0, r0
    8e38:	00040000 	andeq	r0, r4, r0
    8e3c:	9f5001f3 	svcls	0x005001f3
	...
    8e50:	00010000 	andeq	r0, r1, r0
    8e54:	00000050 	andeq	r0, r0, r0, asr r0
    8e58:	00000000 	andeq	r0, r0, r0
    8e5c:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    8e68:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8e74:	01f30004 	mvnseq	r0, r4
    8e78:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    8e88:	00020000 	andeq	r0, r2, r0
    8e8c:	0000007d 	andeq	r0, r0, sp, ror r0
    8e90:	00000000 	andeq	r0, r0, r0
    8e94:	00020000 	andeq	r0, r2, r0
    8e98:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    8eb0:	00500001 	subseq	r0, r0, r1
    8eb4:	00000000 	andeq	r0, r0, r0
    8eb8:	01000000 	mrseq	r0, (UNDEF: 0)
    8ebc:	00005400 	andeq	r5, r0, r0, lsl #8
    8ec0:	00000000 	andeq	r0, r0, r0
    8ec4:	00040000 	andeq	r0, r4, r0
    8ec8:	9f5001f3 	svcls	0x005001f3
	...
    8edc:	00010000 	andeq	r0, r1, r0
    8ee0:	00000054 	andeq	r0, r0, r4, asr r0
    8ee4:	00000000 	andeq	r0, r0, r0
    8ee8:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    8ef4:	01000000 	mrseq	r0, (UNDEF: 0)
    8ef8:	00005000 	andeq	r5, r0, r0
    8efc:	00000000 	andeq	r0, r0, r0
    8f00:	00010000 	andeq	r0, r1, r0
    8f04:	00000054 	andeq	r0, r0, r4, asr r0
    8f08:	00000000 	andeq	r0, r0, r0
    8f0c:	f3000400 	vshl.u8	d0, d0, d0
    8f10:	009f5001 	addseq	r5, pc, r1
	...
    8f20:	02000000 	andeq	r0, r0, #0
    8f24:	00007d00 	andeq	r7, r0, r0, lsl #26
    8f28:	00000000 	andeq	r0, r0, r0
    8f2c:	02000000 	andeq	r0, r0, #0
    8f30:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    8f48:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    8f54:	00540001 	subseq	r0, r4, r1
    8f58:	00000000 	andeq	r0, r0, r0
    8f5c:	04000000 	streq	r0, [r0], #-0
    8f60:	5001f300 	andpl	pc, r1, r0, lsl #6
    8f64:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    8f74:	01000000 	mrseq	r0, (UNDEF: 0)
    8f78:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    8f88:	00020000 	andeq	r0, r2, r0
    8f8c:	0000007d 	andeq	r0, r0, sp, ror r0
    8f90:	00000000 	andeq	r0, r0, r0
    8f94:	00020000 	andeq	r0, r2, r0
    8f98:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    8fb0:	00010000 	andeq	r0, r1, r0
    8fb4:	00000050 	andeq	r0, r0, r0, asr r0
    8fb8:	00000000 	andeq	r0, r0, r0
    8fbc:	f3000400 	vshl.u8	d0, d0, d0
    8fc0:	009f5001 	addseq	r5, pc, r1
    8fc4:	00000000 	andeq	r0, r0, r0
    8fc8:	01000000 	mrseq	r0, (UNDEF: 0)
    8fcc:	00005000 	andeq	r5, r0, r0
    8fd0:	00000000 	andeq	r0, r0, r0
    8fd4:	00010000 	andeq	r0, r1, r0
    8fd8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    8ff0:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    8ffc:	01f30004 	mvnseq	r0, r4
    9000:	00009f51 	andeq	r9, r0, r1, asr pc
    9004:	00000000 	andeq	r0, r0, r0
    9008:	00010000 	andeq	r0, r1, r0
    900c:	00000051 	andeq	r0, r0, r1, asr r0
    9010:	00000000 	andeq	r0, r0, r0
    9014:	f3000400 	vshl.u8	d0, d0, d0
    9018:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    9024:	00000100 	andeq	r0, r0, r0, lsl #2
    9028:	00000000 	andeq	r0, r0, r0
    902c:	01000000 	mrseq	r0, (UNDEF: 0)
    9030:	00005000 	andeq	r5, r0, r0
    9034:	00000000 	andeq	r0, r0, r0
    9038:	00020000 	andeq	r0, r2, r0
    903c:	00009f31 	andeq	r9, r0, r1, lsr pc
    9040:	00000000 	andeq	r0, r0, r0
    9044:	00010000 	andeq	r0, r1, r0
	...
    9050:	00550001 	subseq	r0, r5, r1
	...
    9064:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    9070:	00000004 	andeq	r0, r0, r4
	...
    9080:	00500001 	subseq	r0, r0, r1
    9084:	00000000 	andeq	r0, r0, r0
    9088:	04000000 	streq	r0, [r0], #-0
    908c:	5001f300 	andpl	pc, r1, r0, lsl #6
    9090:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9094:	00000000 	andeq	r0, r0, r0
    9098:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    90a4:	00540001 	subseq	r0, r4, r1
	...
    90b0:	00000001 	andeq	r0, r0, r1
    90b4:	00000000 	andeq	r0, r0, r0
    90b8:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    90c4:	00000002 	andeq	r0, r0, r2
    90c8:	00000000 	andeq	r0, r0, r0
    90cc:	00010000 	andeq	r0, r1, r0
    90d0:	00000055 	andeq	r0, r0, r5, asr r0
	...
    90e0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    90ec:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    90f0:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    9108:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9114:	01f30004 	mvnseq	r0, r4
    9118:	00009f50 	andeq	r9, r0, r0, asr pc
    911c:	00000000 	andeq	r0, r0, r0
    9120:	00010000 	andeq	r0, r1, r0
    9124:	00000050 	andeq	r0, r0, r0, asr r0
    9128:	00000000 	andeq	r0, r0, r0
    912c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9148:	00510001 	subseq	r0, r1, r1
    914c:	00000000 	andeq	r0, r0, r0
    9150:	04000000 	streq	r0, [r0], #-0
    9154:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    9158:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    915c:	00000000 	andeq	r0, r0, r0
    9160:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    916c:	01f30004 	mvnseq	r0, r4
    9170:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    9188:	00010000 	andeq	r0, r1, r0
    918c:	00000052 	andeq	r0, r0, r2, asr r0
    9190:	00000000 	andeq	r0, r0, r0
    9194:	f3000400 	vshl.u8	d0, d0, d0
    9198:	009f5201 	addseq	r5, pc, r1, lsl #4
    919c:	00000000 	andeq	r0, r0, r0
    91a0:	01000000 	mrseq	r0, (UNDEF: 0)
    91a4:	00005200 	andeq	r5, r0, r0, lsl #4
    91a8:	00000000 	andeq	r0, r0, r0
    91ac:	00010000 	andeq	r0, r1, r0
    91b0:	00000056 	andeq	r0, r0, r6, asr r0
	...
    91c0:	01000000 	mrseq	r0, (UNDEF: 0)
    91c4:	00005000 	andeq	r5, r0, r0
    91c8:	00000000 	andeq	r0, r0, r0
    91cc:	00010000 	andeq	r0, r1, r0
	...
    91d8:	00570001 	subseq	r0, r7, r1
    91dc:	00000000 	andeq	r0, r0, r0
    91e0:	03000000 	movweq	r0, #0
	...
    91f0:	01000000 	mrseq	r0, (UNDEF: 0)
    91f4:	00005000 	andeq	r5, r0, r0
    91f8:	00000000 	andeq	r0, r0, r0
    91fc:	00040000 	andeq	r0, r4, r0
    9200:	9f5001f3 	svcls	0x005001f3
	...
    920c:	00500001 	subseq	r0, r0, r1
    9210:	00000000 	andeq	r0, r0, r0
    9214:	01000000 	mrseq	r0, (UNDEF: 0)
    9218:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    9230:	00550001 	subseq	r0, r5, r1
    9234:	00000000 	andeq	r0, r0, r0
    9238:	01000000 	mrseq	r0, (UNDEF: 0)
    923c:	00005500 	andeq	r5, r0, r0, lsl #10
    9240:	00000000 	andeq	r0, r0, r0
    9244:	00030000 	andeq	r0, r3, r0
    9248:	009f0175 	addseq	r0, pc, r5, ror r1	; <UNPREDICTABLE>
	...
    9260:	58000100 	stmdapl	r0, {r8}
	...
    926c:	7f780003 	svcvc	0x00780003
    9270:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9274:	00000000 	andeq	r0, r0, r0
    9278:	58000100 	stmdapl	r0, {r8}
	...
    9290:	00500001 	subseq	r0, r0, r1
    9294:	00000000 	andeq	r0, r0, r0
    9298:	01000000 	mrseq	r0, (UNDEF: 0)
    929c:	00005000 	andeq	r5, r0, r0
    92a0:	00000000 	andeq	r0, r0, r0
    92a4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    92b0:	00570001 	subseq	r0, r7, r1
    92b4:	00000000 	andeq	r0, r0, r0
    92b8:	02000000 	andeq	r0, r0, #0
	...
    92c4:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    92d8:	007d0002 	rsbseq	r0, sp, r2
	...
    92e4:	107d0002 	rsbsne	r0, sp, r2
	...
    92f0:	207d0002 	rsbscs	r0, sp, r2
	...
    92fc:	107d0002 	rsbsne	r0, sp, r2
	...
    9308:	207d0002 	rsbscs	r0, sp, r2
	...
    9320:	00500001 	subseq	r0, r0, r1
    9324:	00000000 	andeq	r0, r0, r0
    9328:	01000000 	mrseq	r0, (UNDEF: 0)
    932c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    9340:	00010000 	andeq	r0, r1, r0
    9344:	00000051 	andeq	r0, r0, r1, asr r0
    9348:	00000000 	andeq	r0, r0, r0
    934c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    9360:	00010000 	andeq	r0, r1, r0
    9364:	00000052 	andeq	r0, r0, r2, asr r0
    9368:	00000000 	andeq	r0, r0, r0
    936c:	00000100 	andeq	r0, r0, r0, lsl #2
    9370:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    937c:	02000000 	andeq	r0, r0, #0
    9380:	009f3000 	addseq	r3, pc, r0
    9384:	00000000 	andeq	r0, r0, r0
    9388:	01000000 	mrseq	r0, (UNDEF: 0)
    938c:	00005500 	andeq	r5, r0, r0, lsl #10
    9390:	00000000 	andeq	r0, r0, r0
    9394:	00010000 	andeq	r0, r1, r0
    9398:	00000055 	andeq	r0, r0, r5, asr r0
    939c:	00000000 	andeq	r0, r0, r0
    93a0:	31000200 	mrscc	r0, R8_usr
    93a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    93a8:	00000000 	andeq	r0, r0, r0
    93ac:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    93c4:	00550001 	subseq	r0, r5, r1
    93c8:	00000000 	andeq	r0, r0, r0
    93cc:	01000000 	mrseq	r0, (UNDEF: 0)
    93d0:	00005500 	andeq	r5, r0, r0, lsl #10
    93d4:	00000000 	andeq	r0, r0, r0
    93d8:	00040000 	andeq	r0, r4, r0
	...
    93e4:	00010000 	andeq	r0, r1, r0
    93e8:	00000050 	andeq	r0, r0, r0, asr r0
    93ec:	00000000 	andeq	r0, r0, r0
    93f0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9408:	00530001 	subseq	r0, r3, r1
    940c:	00000000 	andeq	r0, r0, r0
    9410:	01000000 	mrseq	r0, (UNDEF: 0)
    9414:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    9424:	00020000 	andeq	r0, r2, r0
    9428:	0000007d 	andeq	r0, r0, sp, ror r0
    942c:	00000000 	andeq	r0, r0, r0
    9430:	00020000 	andeq	r0, r2, r0
    9434:	0000107d 	andeq	r1, r0, sp, ror r0
    9438:	00000000 	andeq	r0, r0, r0
    943c:	00020000 	andeq	r0, r2, r0
    9440:	0000207d 	andeq	r2, r0, sp, ror r0
    9444:	00000000 	andeq	r0, r0, r0
    9448:	00020000 	andeq	r0, r2, r0
    944c:	0000107d 	andeq	r1, r0, sp, ror r0
    9450:	00000000 	andeq	r0, r0, r0
    9454:	00020000 	andeq	r0, r2, r0
    9458:	0000207d 	andeq	r2, r0, sp, ror r0
	...
    946c:	00010000 	andeq	r0, r1, r0
    9470:	00000050 	andeq	r0, r0, r0, asr r0
    9474:	00000000 	andeq	r0, r0, r0
    9478:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    948c:	00010000 	andeq	r0, r1, r0
    9490:	00000051 	andeq	r0, r0, r1, asr r0
    9494:	00000000 	andeq	r0, r0, r0
    9498:	00000100 	andeq	r0, r0, r0, lsl #2
    949c:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    94a8:	30000200 	andcc	r0, r0, r0, lsl #4
    94ac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    94b0:	00000000 	andeq	r0, r0, r0
    94b4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    94c0:	9f310002 	svcls	0x00310002
	...
    94cc:	00550001 	subseq	r0, r5, r1
    94d0:	00000000 	andeq	r0, r0, r0
    94d4:	03000000 	movweq	r0, #0
	...
    94e0:	01000000 	mrseq	r0, (UNDEF: 0)
    94e4:	00005000 	andeq	r5, r0, r0
    94e8:	00000000 	andeq	r0, r0, r0
    94ec:	00010000 	andeq	r0, r1, r0
    94f0:	00000054 	andeq	r0, r0, r4, asr r0
    94f4:	00000000 	andeq	r0, r0, r0
    94f8:	00000400 	andeq	r0, r0, r0, lsl #8
	...
    9508:	30000200 	andcc	r0, r0, r0, lsl #4
    950c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9510:	00000000 	andeq	r0, r0, r0
    9514:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    9520:	00500001 	subseq	r0, r0, r1
    9524:	00000000 	andeq	r0, r0, r0
    9528:	01000000 	mrseq	r0, (UNDEF: 0)
    952c:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    9548:	00530001 	subseq	r0, r3, r1
    954c:	00000000 	andeq	r0, r0, r0
    9550:	03000000 	movweq	r0, #0
    9554:	9f017300 	svcls	0x00017300
	...
    9560:	c8740007 	ldmdagt	r4!, {r0, r1, r2}^
    9564:	01230600 			; <UNDEFINED> instruction: 0x01230600
    9568:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    956c:	00000000 	andeq	r0, r0, r0
    9570:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
    9574:	230600c8 	movwcs	r0, #24776	; 0x60c8
    9578:	00009f01 	andeq	r9, r0, r1, lsl #30
    957c:	00000000 	andeq	r0, r0, r0
    9580:	00010000 	andeq	r0, r1, r0
    9584:	00000053 	andeq	r0, r0, r3, asr r0
	...
    9598:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    95a4:	00510001 	subseq	r0, r1, r1
    95a8:	00000000 	andeq	r0, r0, r0
    95ac:	ec000000 	stc	0, cr0, [r0], {-0}
    95b0:	ee08001c 	mcr	0, 0, r0, cr8, cr12, {0}
    95b4:	0208001c 	andeq	r0, r8, #28
    95b8:	ee007d00 	cdp	13, 0, cr7, cr0, cr0, {0}
    95bc:	f008001c 			; <UNDEFINED> instruction: 0xf008001c
    95c0:	0208001c 	andeq	r0, r8, #28
    95c4:	f0147d00 			; <UNDEFINED> instruction: 0xf0147d00
    95c8:	1208001c 	andne	r0, r8, #28
    95cc:	0208001d 	andeq	r0, r8, #29
    95d0:	12287d00 	eorne	r7, r8, #0, 26
    95d4:	1408001d 	strne	r0, [r8], #-29	; 0xffffffe3
    95d8:	0208001d 	andeq	r0, r8, #29
    95dc:	14147d00 	ldrne	r7, [r4], #-3328	; 0xfffff300
    95e0:	fc08001d 	stc2	0, cr0, [r8], {29}
    95e4:	0208001d 	andeq	r0, r8, #29
    95e8:	00287d00 	eoreq	r7, r8, r0, lsl #26
	...
    95f4:	ec000000 	stc	0, cr0, [r0], {-0}
    95f8:	fa08001c 	blx	209670 <_Min_Heap_Size+0x208e70>
    95fc:	0108001c 	tsteq	r8, ip, lsl r0
    9600:	1cfa5000 	ldclne	0, cr5, [sl]
    9604:	1dfc0800 	ldclne	8, cr0, [ip]
    9608:	00010800 	andeq	r0, r1, r0, lsl #16
    960c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    9618:	001cec00 	andseq	lr, ip, r0, lsl #24
    961c:	001cfa08 	andseq	pc, ip, r8, lsl #20
    9620:	51000108 	tstpl	r0, r8, lsl #2
    9624:	08001cfa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, sl, fp, ip}
    9628:	08001dfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, fp, ip}
    962c:	00570001 	subseq	r0, r7, r1
	...
    9638:	001cec00 	andseq	lr, ip, r0, lsl #24
    963c:	001cfa08 	andseq	pc, ip, r8, lsl #20
    9640:	52000108 	andpl	r0, r0, #8, 2
	...
    964c:	01000001 	tsteq	r0, r1
    9650:	00000001 	andeq	r0, r0, r1
    9654:	08001cf6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, sl, fp, ip}
    9658:	08001cfa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, sl, fp, ip}
    965c:	9f300002 	svcls	0x00300002
    9660:	08001cfa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, sl, fp, ip}
    9664:	08001d44 	stmdaeq	r0, {r2, r6, r8, sl, fp, ip}
    9668:	44560001 	ldrbmi	r0, [r6], #-1
    966c:	4808001d 	stmdami	r8, {r0, r2, r3, r4}
    9670:	0208001d 	andeq	r0, r8, #29
    9674:	489f3100 	ldmmi	pc, {r8, ip, sp}	; <UNPREDICTABLE>
    9678:	fc08001d 	stc2	0, cr0, [r8], {29}
    967c:	0108001d 	tsteq	r8, sp, lsl r0
    9680:	00005600 	andeq	r5, r0, r0, lsl #12
    9684:	00000000 	andeq	r0, r0, r0
    9688:	00030000 	andeq	r0, r3, r0
    968c:	1cf60000 	ldclne	0, cr0, [r6]
    9690:	1cfa0800 	ldclne	8, cr0, [sl]
    9694:	00010800 	andeq	r0, r1, r0, lsl #16
    9698:	001cfa50 	andseq	pc, ip, r0, asr sl	; <UNPREDICTABLE>
    969c:	001dfc08 	andseq	pc, sp, r8, lsl #24
    96a0:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    96b4:	1cfa0000 	ldclne	0, cr0, [sl]
    96b8:	1d040800 	stcne	8, cr0, [r4, #-0]
    96bc:	00010800 	andeq	r0, r1, r0, lsl #16
    96c0:	001d0455 	andseq	r0, sp, r5, asr r4
    96c4:	001d1008 	andseq	r1, sp, r8
    96c8:	75000308 	strvc	r0, [r0, #-776]	; 0xfffffcf8
    96cc:	1d149f01 	ldcne	15, cr9, [r4, #-4]
    96d0:	1d360800 	ldcne	8, cr0, [r6, #-0]
    96d4:	00030800 	andeq	r0, r3, r0, lsl #16
    96d8:	369f0175 			; <UNDEFINED> instruction: 0x369f0175
    96dc:	7808001d 	stmdavc	r8, {r0, r2, r3, r4}
    96e0:	0108001d 	tsteq	r8, sp, lsl r0
    96e4:	1d7e5500 	cfldr64ne	mvdx5, [lr, #-0]
    96e8:	1dfc0800 	ldclne	8, cr0, [ip]
    96ec:	00010800 	andeq	r0, r1, r0, lsl #16
    96f0:	00000055 	andeq	r0, r0, r5, asr r0
	...
    9700:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    970c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9710:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    9734:	01000000 	mrseq	r0, (UNDEF: 0)
    9738:	00005000 	andeq	r5, r0, r0
    973c:	00000000 	andeq	r0, r0, r0
    9740:	00010000 	andeq	r0, r1, r0
    9744:	00000054 	andeq	r0, r0, r4, asr r0
    9748:	00000000 	andeq	r0, r0, r0
    974c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9758:	00540001 	subseq	r0, r4, r1
    975c:	00000000 	andeq	r0, r0, r0
    9760:	01000000 	mrseq	r0, (UNDEF: 0)
    9764:	00005000 	andeq	r5, r0, r0
    9768:	00000000 	andeq	r0, r0, r0
    976c:	00010000 	andeq	r0, r1, r0
    9770:	00000054 	andeq	r0, r0, r4, asr r0
    9774:	00000000 	andeq	r0, r0, r0
    9778:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9784:	00540001 	subseq	r0, r4, r1
    9788:	00000000 	andeq	r0, r0, r0
    978c:	01000000 	mrseq	r0, (UNDEF: 0)
    9790:	00005000 	andeq	r5, r0, r0
    9794:	00000000 	andeq	r0, r0, r0
    9798:	00040000 	andeq	r0, r4, r0
    979c:	9f5001f3 	svcls	0x005001f3
	...
    97a8:	00540001 	subseq	r0, r4, r1
	...
    97cc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    97d8:	00550001 	subseq	r0, r5, r1
    97dc:	00000000 	andeq	r0, r0, r0
    97e0:	01000000 	mrseq	r0, (UNDEF: 0)
    97e4:	00005100 	andeq	r5, r0, r0, lsl #2
    97e8:	00000000 	andeq	r0, r0, r0
    97ec:	00010000 	andeq	r0, r1, r0
    97f0:	00000055 	andeq	r0, r0, r5, asr r0
    97f4:	00000000 	andeq	r0, r0, r0
    97f8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    9804:	00550001 	subseq	r0, r5, r1
    9808:	00000000 	andeq	r0, r0, r0
    980c:	01000000 	mrseq	r0, (UNDEF: 0)
    9810:	00005100 	andeq	r5, r0, r0, lsl #2
    9814:	00000000 	andeq	r0, r0, r0
    9818:	00040000 	andeq	r0, r4, r0
    981c:	9f5101f3 	svcls	0x005101f3
	...
    9828:	00550001 	subseq	r0, r5, r1
	...
    983c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9848:	00000001 	andeq	r0, r0, r1
    984c:	00000000 	andeq	r0, r0, r0
    9850:	00010000 	andeq	r0, r1, r0
    9854:	00000057 	andeq	r0, r0, r7, asr r0
    9858:	00000000 	andeq	r0, r0, r0
    985c:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    9878:	01000000 	mrseq	r0, (UNDEF: 0)
    987c:	00005000 	andeq	r5, r0, r0
    9880:	00000000 	andeq	r0, r0, r0
    9884:	00010000 	andeq	r0, r1, r0
    9888:	00000054 	andeq	r0, r0, r4, asr r0
    988c:	00000000 	andeq	r0, r0, r0
    9890:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    989c:	00540001 	subseq	r0, r4, r1
    98a0:	00000000 	andeq	r0, r0, r0
    98a4:	01000000 	mrseq	r0, (UNDEF: 0)
    98a8:	00005000 	andeq	r5, r0, r0
    98ac:	00000000 	andeq	r0, r0, r0
    98b0:	00010000 	andeq	r0, r1, r0
    98b4:	00000054 	andeq	r0, r0, r4, asr r0
    98b8:	00000000 	andeq	r0, r0, r0
    98bc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    98c8:	00540001 	subseq	r0, r4, r1
    98cc:	00000000 	andeq	r0, r0, r0
    98d0:	01000000 	mrseq	r0, (UNDEF: 0)
    98d4:	00005000 	andeq	r5, r0, r0
    98d8:	00000000 	andeq	r0, r0, r0
    98dc:	00040000 	andeq	r0, r4, r0
    98e0:	9f5001f3 	svcls	0x005001f3
	...
    98ec:	00540001 	subseq	r0, r4, r1
	...
    9910:	53000100 	movwpl	r0, #256	; 0x100
	...
    991c:	7f730003 	svcvc	0x00730003
    9920:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9924:	00000000 	andeq	r0, r0, r0
    9928:	70000700 	andvc	r0, r0, r0, lsl #14
    992c:	310600c8 	smlabtcc	r6, r8, r0, r0
    9930:	00009f1c 	andeq	r9, r0, ip, lsl pc
    9934:	00000000 	andeq	r0, r0, r0
    9938:	00070000 	andeq	r0, r7, r0
    993c:	0600c870 			; <UNDEFINED> instruction: 0x0600c870
    9940:	009f1c31 	addseq	r1, pc, r1, lsr ip	; <UNPREDICTABLE>
    9944:	00000000 	andeq	r0, r0, r0
    9948:	07000000 	streq	r0, [r0, -r0]
    994c:	00c87400 	sbceq	r7, r8, r0, lsl #8
    9950:	9f1c3106 	svcls	0x001c3106
	...
    995c:	c8700007 	ldmdagt	r0!, {r0, r1, r2}^
    9960:	1c310600 	ldcne	6, cr0, [r1], #-0
    9964:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9968:	00000000 	andeq	r0, r0, r0
    996c:	74000700 	strvc	r0, [r0], #-1792	; 0xfffff900
    9970:	310600c8 	smlabtcc	r6, r8, r0, r0
    9974:	00009f1c 	andeq	r9, r0, ip, lsl pc
    9978:	00000000 	andeq	r0, r0, r0
    997c:	00030000 	andeq	r0, r3, r0
    9980:	009f7f73 	addseq	r7, pc, r3, ror pc	; <UNPREDICTABLE>
    9984:	00000000 	andeq	r0, r0, r0
    9988:	01000000 	mrseq	r0, (UNDEF: 0)
    998c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    99a4:	00560001 	subseq	r0, r6, r1
    99a8:	00000000 	andeq	r0, r0, r0
    99ac:	03000000 	movweq	r0, #0
    99b0:	9f7f7600 	svcls	0x007f7600
	...
    99bc:	00560001 	subseq	r0, r6, r1
	...
    99d0:	01000000 	mrseq	r0, (UNDEF: 0)
    99d4:	00005000 	andeq	r5, r0, r0
    99d8:	00000000 	andeq	r0, r0, r0
    99dc:	00010000 	andeq	r0, r1, r0
    99e0:	00000050 	andeq	r0, r0, r0, asr r0
    99e4:	00000000 	andeq	r0, r0, r0
    99e8:	00010000 	andeq	r0, r1, r0
    99ec:	00000000 	andeq	r0, r0, r0
    99f0:	01000000 	mrseq	r0, (UNDEF: 0)
    99f4:	00005700 	andeq	r5, r0, r0, lsl #14
    99f8:	00000000 	andeq	r0, r0, r0
    99fc:	00020000 	andeq	r0, r2, r0
	...
    9a08:	00570001 	subseq	r0, r7, r1
	...
    9a18:	02000000 	andeq	r0, r0, #0
    9a1c:	00007d00 	andeq	r7, r0, r0, lsl #26
    9a20:	00000000 	andeq	r0, r0, r0
    9a24:	02000000 	andeq	r0, r0, #0
    9a28:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    9a40:	01000000 	mrseq	r0, (UNDEF: 0)
    9a44:	00005000 	andeq	r5, r0, r0
    9a48:	00000000 	andeq	r0, r0, r0
    9a4c:	00010000 	andeq	r0, r1, r0
    9a50:	00000054 	andeq	r0, r0, r4, asr r0
    9a54:	00000000 	andeq	r0, r0, r0
    9a58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9a64:	00540001 	subseq	r0, r4, r1
	...
    9a7c:	01000000 	mrseq	r0, (UNDEF: 0)
    9a80:	00005100 	andeq	r5, r0, r0, lsl #2
    9a84:	00000000 	andeq	r0, r0, r0
    9a88:	00040000 	andeq	r0, r4, r0
    9a8c:	9f5101f3 	svcls	0x005101f3
	...
    9a98:	00510001 	subseq	r0, r1, r1
    9a9c:	00000000 	andeq	r0, r0, r0
    9aa0:	04000000 	streq	r0, [r0], #-0
    9aa4:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    9aa8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9abc:	52000100 	andpl	r0, r0, #0, 2
	...
    9ac8:	00570001 	subseq	r0, r7, r1
	...
    9adc:	01000000 	mrseq	r0, (UNDEF: 0)
    9ae0:	00005300 	andeq	r5, r0, r0, lsl #6
    9ae4:	00000000 	andeq	r0, r0, r0
    9ae8:	00010000 	andeq	r0, r1, r0
    9aec:	00000055 	andeq	r0, r0, r5, asr r0
	...
    9afc:	01000000 	mrseq	r0, (UNDEF: 0)
    9b00:	00005000 	andeq	r5, r0, r0
    9b04:	00000000 	andeq	r0, r0, r0
    9b08:	00010000 	andeq	r0, r1, r0
	...
    9b14:	00580001 	subseq	r0, r8, r1
    9b18:	00000000 	andeq	r0, r0, r0
    9b1c:	03000000 	movweq	r0, #0
	...
    9b2c:	01000000 	mrseq	r0, (UNDEF: 0)
    9b30:	00005000 	andeq	r5, r0, r0
    9b34:	00000000 	andeq	r0, r0, r0
    9b38:	00010000 	andeq	r0, r1, r0
    9b3c:	00000054 	andeq	r0, r0, r4, asr r0
    9b40:	00000000 	andeq	r0, r0, r0
    9b44:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9b50:	00540001 	subseq	r0, r4, r1
	...
    9b68:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    9b74:	7f760003 	svcvc	0x00760003
    9b78:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9b7c:	00000000 	andeq	r0, r0, r0
    9b80:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    9b94:	00010000 	andeq	r0, r1, r0
    9b98:	00000059 	andeq	r0, r0, r9, asr r0
	...
    9bac:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9bb8:	00500001 	subseq	r0, r0, r1
	...
    9bc4:	00000001 	andeq	r0, r0, r1
    9bc8:	00000000 	andeq	r0, r0, r0
    9bcc:	58000100 	stmdapl	r0, {r8}
	...
    9bd8:	00000001 	andeq	r0, r0, r1
    9bdc:	00000000 	andeq	r0, r0, r0
    9be0:	00010000 	andeq	r0, r1, r0
    9be4:	00000058 	andeq	r0, r0, r8, asr r0
	...
    9bf4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    9c00:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9c04:	00000014 	andeq	r0, r0, r4, lsl r0
    9c08:	00000000 	andeq	r0, r0, r0
    9c0c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9c10:	00000028 	andeq	r0, r0, r8, lsr #32
    9c14:	00000000 	andeq	r0, r0, r0
    9c18:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9c1c:	00000014 	andeq	r0, r0, r4, lsl r0
    9c20:	00000000 	andeq	r0, r0, r0
    9c24:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9c28:	00000028 	andeq	r0, r0, r8, lsr #32
	...
    9c3c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9c48:	00540001 	subseq	r0, r4, r1
	...
    9c5c:	01000000 	mrseq	r0, (UNDEF: 0)
    9c60:	00005100 	andeq	r5, r0, r0, lsl #2
    9c64:	00000000 	andeq	r0, r0, r0
    9c68:	00010000 	andeq	r0, r1, r0
    9c6c:	00000057 	andeq	r0, r0, r7, asr r0
	...
    9c7c:	01000000 	mrseq	r0, (UNDEF: 0)
    9c80:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    9c94:	00010000 	andeq	r0, r1, r0
    9c98:	00000053 	andeq	r0, r0, r3, asr r0
    9c9c:	00000000 	andeq	r0, r0, r0
    9ca0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    9cac:	00000001 	andeq	r0, r0, r1
    9cb0:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    9cbc:	00020000 	andeq	r0, r2, r0
    9cc0:	00009f30 	andeq	r9, r0, r0, lsr pc
    9cc4:	00000000 	andeq	r0, r0, r0
    9cc8:	00010000 	andeq	r0, r1, r0
    9ccc:	00000056 	andeq	r0, r0, r6, asr r0
    9cd0:	00000000 	andeq	r0, r0, r0
    9cd4:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    9ce0:	9f310002 	svcls	0x00310002
	...
    9cec:	00560001 	subseq	r0, r6, r1
	...
    9d00:	01000000 	mrseq	r0, (UNDEF: 0)
    9d04:	00005000 	andeq	r5, r0, r0
    9d08:	00000000 	andeq	r0, r0, r0
    9d0c:	00010000 	andeq	r0, r1, r0
    9d10:	00000050 	andeq	r0, r0, r0, asr r0
    9d14:	00000000 	andeq	r0, r0, r0
    9d18:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    9d24:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9d30:	00540001 	subseq	r0, r4, r1
	...
    9d44:	01000000 	mrseq	r0, (UNDEF: 0)
    9d48:	00005600 	andeq	r5, r0, r0, lsl #12
    9d4c:	00000000 	andeq	r0, r0, r0
    9d50:	00010000 	andeq	r0, r1, r0
    9d54:	00000056 	andeq	r0, r0, r6, asr r0
	...
    9d64:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    9d70:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9d74:	00000008 	andeq	r0, r0, r8
    9d78:	00000000 	andeq	r0, r0, r0
    9d7c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    9d88:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9d8c:	00000008 	andeq	r0, r0, r8
	...
    9da8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9db4:	01f30004 	mvnseq	r0, r4
    9db8:	00009f50 	andeq	r9, r0, r0, asr pc
    9dbc:	00000000 	andeq	r0, r0, r0
    9dc0:	00010000 	andeq	r0, r1, r0
    9dc4:	00000050 	andeq	r0, r0, r0, asr r0
    9dc8:	00000000 	andeq	r0, r0, r0
    9dcc:	f3000400 	vshl.u8	d0, d0, d0
    9dd0:	009f5001 	addseq	r5, pc, r1
    9dd4:	00000000 	andeq	r0, r0, r0
    9dd8:	01000000 	mrseq	r0, (UNDEF: 0)
    9ddc:	00005000 	andeq	r5, r0, r0
    9de0:	00000000 	andeq	r0, r0, r0
    9de4:	00040000 	andeq	r0, r4, r0
    9de8:	9f5001f3 	svcls	0x005001f3
	...
    9df8:	00040400 	andeq	r0, r4, r0, lsl #8
	...
    9e04:	00510001 	subseq	r0, r1, r1
    9e08:	00000000 	andeq	r0, r0, r0
    9e0c:	01000000 	mrseq	r0, (UNDEF: 0)
    9e10:	00005400 	andeq	r5, r0, r0, lsl #8
    9e14:	00000000 	andeq	r0, r0, r0
    9e18:	00010000 	andeq	r0, r1, r0
    9e1c:	00000051 	andeq	r0, r0, r1, asr r0
    9e20:	00000000 	andeq	r0, r0, r0
    9e24:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9e30:	00000002 	andeq	r0, r0, r2
    9e34:	00000400 	andeq	r0, r0, r0, lsl #8
    9e38:	00000000 	andeq	r0, r0, r0
    9e3c:	00020000 	andeq	r0, r2, r0
    9e40:	00009f30 	andeq	r9, r0, r0, lsr pc
    9e44:	00000000 	andeq	r0, r0, r0
    9e48:	00010000 	andeq	r0, r1, r0
    9e4c:	00000050 	andeq	r0, r0, r0, asr r0
    9e50:	00000000 	andeq	r0, r0, r0
    9e54:	30000200 	andcc	r0, r0, r0, lsl #4
    9e58:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    9e68:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    9e74:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9e78:	00000008 	andeq	r0, r0, r8
    9e7c:	00000000 	andeq	r0, r0, r0
    9e80:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9e84:	00000010 	andeq	r0, r0, r0, lsl r0
    9e88:	00000000 	andeq	r0, r0, r0
    9e8c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    9e98:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9e9c:	00000010 	andeq	r0, r0, r0, lsl r0
    9ea0:	00000000 	andeq	r0, r0, r0
    9ea4:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    9ea8:	00000008 	andeq	r0, r0, r8
	...
    9ec4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9ed0:	01f30004 	mvnseq	r0, r4
    9ed4:	00009f50 	andeq	r9, r0, r0, asr pc
    9ed8:	00000000 	andeq	r0, r0, r0
    9edc:	00010000 	andeq	r0, r1, r0
    9ee0:	00000050 	andeq	r0, r0, r0, asr r0
    9ee4:	00000000 	andeq	r0, r0, r0
    9ee8:	f3000400 	vshl.u8	d0, d0, d0
    9eec:	009f5001 	addseq	r5, pc, r1
    9ef0:	00000000 	andeq	r0, r0, r0
    9ef4:	01000000 	mrseq	r0, (UNDEF: 0)
    9ef8:	00005000 	andeq	r5, r0, r0
    9efc:	00000000 	andeq	r0, r0, r0
    9f00:	00040000 	andeq	r0, r4, r0
    9f04:	9f5001f3 	svcls	0x005001f3
	...
    9f14:	00040400 	andeq	r0, r4, r0, lsl #8
	...
    9f20:	00510001 	subseq	r0, r1, r1
    9f24:	00000000 	andeq	r0, r0, r0
    9f28:	01000000 	mrseq	r0, (UNDEF: 0)
    9f2c:	00005400 	andeq	r5, r0, r0, lsl #8
    9f30:	00000000 	andeq	r0, r0, r0
    9f34:	00010000 	andeq	r0, r1, r0
    9f38:	00000051 	andeq	r0, r0, r1, asr r0
    9f3c:	00000000 	andeq	r0, r0, r0
    9f40:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    9f50:	04000000 	streq	r0, [r0], #-0
    9f54:	00000004 	andeq	r0, r0, r4
    9f58:	00000000 	andeq	r0, r0, r0
    9f5c:	00010000 	andeq	r0, r1, r0
    9f60:	00000052 	andeq	r0, r0, r2, asr r0
    9f64:	00000000 	andeq	r0, r0, r0
    9f68:	53000100 	movwpl	r0, #256	; 0x100
	...
    9f74:	01f30004 	mvnseq	r0, r4
    9f78:	00009f52 	andeq	r9, r0, r2, asr pc
    9f7c:	00000000 	andeq	r0, r0, r0
    9f80:	00010000 	andeq	r0, r1, r0
    9f84:	00000052 	andeq	r0, r0, r2, asr r0
    9f88:	00000000 	andeq	r0, r0, r0
    9f8c:	f3000400 	vshl.u8	d0, d0, d0
    9f90:	009f5201 	addseq	r5, pc, r1, lsl #4
    9f94:	00000000 	andeq	r0, r0, r0
    9f98:	02000000 	andeq	r0, r0, #0
    9f9c:	00000000 	andeq	r0, r0, r0
    9fa0:	00000004 	andeq	r0, r0, r4
    9fa4:	00000000 	andeq	r0, r0, r0
    9fa8:	30000200 	andcc	r0, r0, r0, lsl #4
    9fac:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    9fb0:	00000000 	andeq	r0, r0, r0
    9fb4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    9fc0:	9f300002 	svcls	0x00300002
	...
    9fd4:	007d0002 	rsbseq	r0, sp, r2
	...
    9fe0:	107d0002 	rsbsne	r0, sp, r2
	...
    9ff8:	00500001 	subseq	r0, r0, r1
    9ffc:	00000000 	andeq	r0, r0, r0
    a000:	01000000 	mrseq	r0, (UNDEF: 0)
    a004:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    a018:	00010000 	andeq	r0, r1, r0
    a01c:	00000051 	andeq	r0, r0, r1, asr r0
    a020:	00000000 	andeq	r0, r0, r0
    a024:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    a030:	00010000 	andeq	r0, r1, r0
	...
    a03c:	00500001 	subseq	r0, r0, r1
    a040:	00000000 	andeq	r0, r0, r0
    a044:	02000000 	andeq	r0, r0, #0
    a048:	009f3100 	addseq	r3, pc, r0, lsl #2
    a04c:	00000000 	andeq	r0, r0, r0
    a050:	02000000 	andeq	r0, r0, #0
	...
    a05c:	01000000 	mrseq	r0, (UNDEF: 0)
    a060:	00005000 	andeq	r5, r0, r0
    a064:	00000000 	andeq	r0, r0, r0
    a068:	00010000 	andeq	r0, r1, r0
    a06c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    a07c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    a088:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    a08c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    a0a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a0ac:	00540001 	subseq	r0, r4, r1
	...
    a0c0:	31000200 	mrscc	r0, R8_usr
    a0c4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a0c8:	00000000 	andeq	r0, r0, r0
    a0cc:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    a0d8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a0e4:	00540001 	subseq	r0, r4, r1
	...
    a0f4:	02000000 	andeq	r0, r0, #0
    a0f8:	00007d00 	andeq	r7, r0, r0, lsl #26
    a0fc:	00000000 	andeq	r0, r0, r0
    a100:	02000000 	andeq	r0, r0, #0
    a104:	00087d00 	andeq	r7, r8, r0, lsl #26
    a108:	00000000 	andeq	r0, r0, r0
    a10c:	02000000 	andeq	r0, r0, #0
    a110:	00107d00 	andseq	r7, r0, r0, lsl #26
    a114:	00000000 	andeq	r0, r0, r0
    a118:	02000000 	andeq	r0, r0, #0
    a11c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    a130:	01000000 	mrseq	r0, (UNDEF: 0)
    a134:	00005000 	andeq	r5, r0, r0
    a138:	00000000 	andeq	r0, r0, r0
    a13c:	00040000 	andeq	r0, r4, r0
    a140:	9f5001f3 	svcls	0x005001f3
	...
    a158:	00010000 	andeq	r0, r1, r0
    a15c:	00000051 	andeq	r0, r0, r1, asr r0
    a160:	00000000 	andeq	r0, r0, r0
    a164:	53000100 	movwpl	r0, #256	; 0x100
	...
    a170:	01f30004 	mvnseq	r0, r4
    a174:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    a188:	00010000 	andeq	r0, r1, r0
    a18c:	00000050 	andeq	r0, r0, r0, asr r0
    a190:	00000000 	andeq	r0, r0, r0
    a194:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    a1a8:	007d0002 	rsbseq	r0, sp, r2
	...
    a1b4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    a1cc:	00500001 	subseq	r0, r0, r1
    a1d0:	00000000 	andeq	r0, r0, r0
    a1d4:	04000000 	streq	r0, [r0], #-0
    a1d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    a1dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    a1f0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a1fc:	00540001 	subseq	r0, r4, r1
	...
    a20c:	02000000 	andeq	r0, r0, #0
    a210:	00007d00 	andeq	r7, r0, r0, lsl #26
    a214:	00000000 	andeq	r0, r0, r0
    a218:	02000000 	andeq	r0, r0, #0
    a21c:	00087d00 	andeq	r7, r8, r0, lsl #26
    a220:	00000000 	andeq	r0, r0, r0
    a224:	02000000 	andeq	r0, r0, #0
    a228:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    a240:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a24c:	01f30004 	mvnseq	r0, r4
    a250:	00009f50 	andeq	r9, r0, r0, asr pc
    a254:	00000000 	andeq	r0, r0, r0
    a258:	00010000 	andeq	r0, r1, r0
    a25c:	00000050 	andeq	r0, r0, r0, asr r0
    a260:	00000000 	andeq	r0, r0, r0
    a264:	001c8e00 	andseq	r8, ip, r0, lsl #28
    a268:	001c9008 	andseq	r9, ip, r8
    a26c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    a270:	001c9000 	andseq	r9, ip, r0
    a274:	001cae08 	andseq	sl, ip, r8, lsl #28
    a278:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    a27c:	00000008 	andeq	r0, r0, r8
	...
    a28c:	001c8e00 	andseq	r8, ip, r0, lsl #28
    a290:	001ca008 	andseq	sl, ip, r8
    a294:	50000108 	andpl	r0, r0, r8, lsl #2
    a298:	08001ca0 	stmdaeq	r0, {r5, r7, sl, fp, ip}
    a29c:	08001ca3 	stmdaeq	r0, {r0, r1, r5, r7, sl, fp, ip}
    a2a0:	cc700003 	ldclgt	0, cr0, [r0], #-12
    a2a4:	001ca300 	andseq	sl, ip, r0, lsl #6
    a2a8:	001caa08 	andseq	sl, ip, r8, lsl #20
    a2ac:	f3000408 	vshl.u8	d0, d8, d0
    a2b0:	aa9f5001 	bge	fe7de2bc <_estack+0xde7d491c>
    a2b4:	ae08001c 	mcrge	0, 0, r0, cr8, cr12, {0}
    a2b8:	0108001c 	tsteq	r8, ip, lsl r0
    a2bc:	00005000 	andeq	r5, r0, r0
	...
    a2cc:	1c8e0000 	stcne	0, cr0, [lr], {0}
    a2d0:	1c9e0800 	ldcne	8, cr0, [lr], {0}
    a2d4:	00010800 	andeq	r0, r1, r0, lsl #16
    a2d8:	001c9e51 	andseq	r9, ip, r1, asr lr
    a2dc:	001ca308 	andseq	sl, ip, r8, lsl #6
    a2e0:	53000108 	movwpl	r0, #264	; 0x108
    a2e4:	08001ca3 	stmdaeq	r0, {r0, r1, r5, r7, sl, fp, ip}
    a2e8:	08001caa 	stmdaeq	r0, {r1, r3, r5, r7, sl, fp, ip}
    a2ec:	01f30004 	mvnseq	r0, r4
    a2f0:	1caa9f51 	stcne	15, cr9, [sl], #324	; 0x144
    a2f4:	1cae0800 	stcne	8, cr0, [lr]
    a2f8:	00010800 	andeq	r0, r1, r0, lsl #16
    a2fc:	00000051 	andeq	r0, r0, r1, asr r0
	...
    a308:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    a30c:	a308001c 	movwge	r0, #32796	; 0x801c
    a310:	0108001c 	tsteq	r8, ip, lsl r0
    a314:	1ca35200 	sfmne	f5, 4, [r3]
    a318:	1caa0800 	stcne	8, cr0, [sl]
    a31c:	00040800 	andeq	r0, r4, r0, lsl #16
    a320:	9f5201f3 	svcls	0x005201f3
    a324:	08001caa 	stmdaeq	r0, {r1, r3, r5, r7, sl, fp, ip}
    a328:	08001cae 	stmdaeq	r0, {r1, r2, r3, r5, r7, sl, fp, ip}
    a32c:	00520001 	subseq	r0, r2, r1
	...
    a338:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    a33c:	9408001c 	strls	r0, [r8], #-28	; 0xffffffe4
    a340:	0108001c 	tsteq	r8, ip, lsl r0
    a344:	1c945300 	ldcne	3, cr5, [r4], {0}
    a348:	1cae0800 	stcne	8, cr0, [lr]
    a34c:	00040800 	andeq	r0, r4, r0, lsl #16
    a350:	9f5301f3 	svcls	0x005301f3
	...
    a360:	08001c8e 	stmdaeq	r0, {r1, r2, r3, r7, sl, fp, ip}
    a364:	08001caa 	stmdaeq	r0, {r1, r3, r5, r7, sl, fp, ip}
    a368:	00910002 	addseq	r0, r1, r2
    a36c:	08001caa 	stmdaeq	r0, {r1, r3, r5, r7, sl, fp, ip}
    a370:	08001cae 	stmdaeq	r0, {r1, r2, r3, r5, r7, sl, fp, ip}
    a374:	00910002 	addseq	r0, r1, r2
	...
    a388:	007d0002 	rsbseq	r0, sp, r2
	...
    a394:	147d0002 	ldrbtne	r0, [sp], #-2
	...
    a3a0:	207d0002 	rsbscs	r0, sp, r2
	...
    a3ac:	147d0002 	ldrbtne	r0, [sp], #-2
	...
    a3b8:	207d0002 	rsbscs	r0, sp, r2
	...
    a3d8:	00500001 	subseq	r0, r0, r1
    a3dc:	00000000 	andeq	r0, r0, r0
    a3e0:	01000000 	mrseq	r0, (UNDEF: 0)
    a3e4:	00005600 	andeq	r5, r0, r0, lsl #12
    a3e8:	00000000 	andeq	r0, r0, r0
    a3ec:	00010000 	andeq	r0, r1, r0
    a3f0:	00000050 	andeq	r0, r0, r0, asr r0
    a3f4:	00000000 	andeq	r0, r0, r0
    a3f8:	f3000400 	vshl.u8	d0, d0, d0
    a3fc:	009f5001 	addseq	r5, pc, r1
    a400:	00000000 	andeq	r0, r0, r0
    a404:	01000000 	mrseq	r0, (UNDEF: 0)
    a408:	00005000 	andeq	r5, r0, r0
    a40c:	00000000 	andeq	r0, r0, r0
    a410:	00010000 	andeq	r0, r1, r0
    a414:	00000056 	andeq	r0, r0, r6, asr r0
	...
    a42c:	01000000 	mrseq	r0, (UNDEF: 0)
    a430:	00005100 	andeq	r5, r0, r0, lsl #2
    a434:	00000000 	andeq	r0, r0, r0
    a438:	00010000 	andeq	r0, r1, r0
    a43c:	00000054 	andeq	r0, r0, r4, asr r0
    a440:	00000000 	andeq	r0, r0, r0
    a444:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    a450:	01f30004 	mvnseq	r0, r4
    a454:	00009f51 	andeq	r9, r0, r1, asr pc
    a458:	00000000 	andeq	r0, r0, r0
    a45c:	00010000 	andeq	r0, r1, r0
    a460:	00000054 	andeq	r0, r0, r4, asr r0
	...
    a478:	52000100 	andpl	r0, r0, #0, 2
	...
    a484:	01f30004 	mvnseq	r0, r4
    a488:	00009f52 	andeq	r9, r0, r2, asr pc
    a48c:	00000000 	andeq	r0, r0, r0
    a490:	00010000 	andeq	r0, r1, r0
    a494:	00000052 	andeq	r0, r0, r2, asr r0
    a498:	00000000 	andeq	r0, r0, r0
    a49c:	f3000400 	vshl.u8	d0, d0, d0
    a4a0:	009f5201 	addseq	r5, pc, r1, lsl #4
    a4a4:	00000000 	andeq	r0, r0, r0
    a4a8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    a4bc:	30000200 	andcc	r0, r0, r0, lsl #4
    a4c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a4c4:	00000000 	andeq	r0, r0, r0
    a4c8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a4d4:	00550001 	subseq	r0, r5, r1
    a4d8:	00000000 	andeq	r0, r0, r0
    a4dc:	02000000 	andeq	r0, r0, #0
    a4e0:	009f3000 	addseq	r3, pc, r0
    a4e4:	00000000 	andeq	r0, r0, r0
    a4e8:	02000000 	andeq	r0, r0, #0
    a4ec:	009f3000 	addseq	r3, pc, r0
    a4f0:	00000000 	andeq	r0, r0, r0
    a4f4:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    a504:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a510:	a4700004 	ldrbtge	r0, [r0], #-4
    a514:	00009f7f 	andeq	r9, r0, pc, ror pc
    a518:	00000000 	andeq	r0, r0, r0
    a51c:	00060000 	andeq	r0, r6, r0
    a520:	00760074 	rsbseq	r0, r6, r4, ror r0
    a524:	00009f1e 	andeq	r9, r0, lr, lsl pc
    a528:	00000000 	andeq	r0, r0, r0
    a52c:	02010000 	andeq	r0, r1, #0
    a530:	00000002 	andeq	r0, r0, r2
	...
    a53c:	00010000 	andeq	r0, r1, r0
    a540:	00000050 	andeq	r0, r0, r0, asr r0
    a544:	00000000 	andeq	r0, r0, r0
    a548:	70000400 	andvc	r0, r0, r0, lsl #8
    a54c:	009f00dc 	ldrsbeq	r0, [pc], ip
    a550:	00000000 	andeq	r0, r0, r0
    a554:	01000000 	mrseq	r0, (UNDEF: 0)
    a558:	00005200 	andeq	r5, r0, r0, lsl #4
    a55c:	00000000 	andeq	r0, r0, r0
    a560:	00040000 	andeq	r0, r4, r0
    a564:	9f00dc75 	svcls	0x0000dc75
	...
    a580:	00500001 	subseq	r0, r0, r1
    a584:	00000000 	andeq	r0, r0, r0
    a588:	04000000 	streq	r0, [r0], #-0
    a58c:	5001f300 	andpl	pc, r1, r0, lsl #6
    a590:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a594:	00000000 	andeq	r0, r0, r0
    a598:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a5a4:	00720002 	rsbseq	r0, r2, r2
	...
    a5b0:	00010000 	andeq	r0, r1, r0
	...
    a5bc:	9f300002 	svcls	0x00300002
	...
    a5c8:	9f310002 	svcls	0x00310002
	...
    a5d4:	00000003 	andeq	r0, r0, r3
	...
    a5e4:	00500001 	subseq	r0, r0, r1
    a5e8:	00000000 	andeq	r0, r0, r0
    a5ec:	04000000 	streq	r0, [r0], #-0
    a5f0:	5001f300 	andpl	pc, r1, r0, lsl #6
    a5f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a5f8:	00000000 	andeq	r0, r0, r0
    a5fc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    a608:	00720002 	rsbseq	r0, r2, r2
	...
    a614:	08001cae 	stmdaeq	r0, {r1, r2, r3, r5, r7, sl, fp, ip}
    a618:	08001cb2 	stmdaeq	r0, {r1, r4, r5, r7, sl, fp, ip}
    a61c:	007d0002 	rsbseq	r0, sp, r2
    a620:	08001cb2 	stmdaeq	r0, {r1, r4, r5, r7, sl, fp, ip}
    a624:	08001cb4 	stmdaeq	r0, {r2, r4, r5, r7, sl, fp, ip}
    a628:	087d0002 	ldmdaeq	sp!, {r1}^
    a62c:	08001cb4 	stmdaeq	r0, {r2, r4, r5, r7, sl, fp, ip}
    a630:	08001cd6 	stmdaeq	r0, {r1, r2, r4, r6, r7, sl, fp, ip}
    a634:	107d0002 	rsbsne	r0, sp, r2
    a638:	08001cd6 	stmdaeq	r0, {r1, r2, r4, r6, r7, sl, fp, ip}
    a63c:	08001cd8 	stmdaeq	r0, {r3, r4, r6, r7, sl, fp, ip}
    a640:	087d0002 	ldmdaeq	sp!, {r1}^
    a644:	08001cd8 	stmdaeq	r0, {r3, r4, r6, r7, sl, fp, ip}
    a648:	08001ce0 	stmdaeq	r0, {r5, r6, r7, sl, fp, ip}
    a64c:	107d0002 	rsbsne	r0, sp, r2
    a650:	08001ce0 	stmdaeq	r0, {r5, r6, r7, sl, fp, ip}
    a654:	08001ce4 	stmdaeq	r0, {r2, r5, r6, r7, sl, fp, ip}
    a658:	007d0002 	rsbseq	r0, sp, r2
    a65c:	08001ce4 	stmdaeq	r0, {r2, r5, r6, r7, sl, fp, ip}
    a660:	08001cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, ip}
    a664:	107d0002 	rsbsne	r0, sp, r2
	...
    a684:	1cae0000 	stcne	0, cr0, [lr]
    a688:	1cce0800 	stclne	8, cr0, [lr], {0}
    a68c:	00010800 	andeq	r0, r1, r0, lsl #16
    a690:	001cce50 	andseq	ip, ip, r0, asr lr
    a694:	001cd108 	andseq	sp, ip, r8, lsl #2
    a698:	5c000108 	stfpls	f0, [r0], {8}
    a69c:	08001cd1 	stmdaeq	r0, {r0, r4, r6, r7, sl, fp, ip}
    a6a0:	08001cd8 	stmdaeq	r0, {r3, r4, r6, r7, sl, fp, ip}
    a6a4:	01f30004 	mvnseq	r0, r4
    a6a8:	1cd89f50 	ldclne	15, cr9, [r8], {80}	; 0x50
    a6ac:	1cde0800 	ldclne	8, cr0, [lr], {0}
    a6b0:	00010800 	andeq	r0, r1, r0, lsl #16
    a6b4:	001cde50 	andseq	sp, ip, r0, asr lr
    a6b8:	001ce008 	andseq	lr, ip, r8
    a6bc:	5c000108 	stfpls	f0, [r0], {8}
    a6c0:	08001ce0 	stmdaeq	r0, {r5, r6, r7, sl, fp, ip}
    a6c4:	08001ce2 	stmdaeq	r0, {r1, r5, r6, r7, sl, fp, ip}
    a6c8:	e2500001 	subs	r0, r0, #1
    a6cc:	e408001c 	str	r0, [r8], #-28	; 0xffffffe4
    a6d0:	0408001c 	streq	r0, [r8], #-28	; 0xffffffe4
    a6d4:	5001f300 	andpl	pc, r1, r0, lsl #6
    a6d8:	001ce49f 	mulseq	ip, pc, r4	; <UNPREDICTABLE>
    a6dc:	001ce608 	andseq	lr, ip, r8, lsl #12
    a6e0:	50000108 	andpl	r0, r0, r8, lsl #2
    a6e4:	08001ce6 	stmdaeq	r0, {r1, r2, r5, r6, r7, sl, fp, ip}
    a6e8:	08001ce8 	stmdaeq	r0, {r3, r5, r6, r7, sl, fp, ip}
    a6ec:	e85c0001 	ldmda	ip, {r0}^
    a6f0:	ea08001c 	b	20a768 <_Min_Heap_Size+0x209f68>
    a6f4:	0108001c 	tsteq	r8, ip, lsl r0
    a6f8:	1cea5000 	stclne	0, cr5, [sl]
    a6fc:	1cec0800 	stclne	8, cr0, [ip]
    a700:	00010800 	andeq	r0, r1, r0, lsl #16
    a704:	0000005c 	andeq	r0, r0, ip, asr r0
	...
    a710:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
    a714:	d108001c 	tstle	r8, ip, lsl r0
    a718:	0108001c 	tsteq	r8, ip, lsl r0
    a71c:	1cd15100 	ldfnee	f5, [r1], {0}
    a720:	1cd80800 	ldclne	8, cr0, [r8], {0}
    a724:	00040800 	andeq	r0, r4, r0, lsl #16
    a728:	9f5101f3 	svcls	0x005101f3
    a72c:	08001cd8 	stmdaeq	r0, {r3, r4, r6, r7, sl, fp, ip}
    a730:	08001cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, ip}
    a734:	00510001 	subseq	r0, r1, r1
	...
    a744:	001cae00 	andseq	sl, ip, r0, lsl #28
    a748:	001cd108 	andseq	sp, ip, r8, lsl #2
    a74c:	52000108 	andpl	r0, r0, #8, 2
    a750:	08001cd1 	stmdaeq	r0, {r0, r4, r6, r7, sl, fp, ip}
    a754:	08001cd8 	stmdaeq	r0, {r3, r4, r6, r7, sl, fp, ip}
    a758:	01f30004 	mvnseq	r0, r4
    a75c:	1cd89f52 	ldclne	15, cr9, [r8], {82}	; 0x52
    a760:	1cec0800 	stclne	8, cr0, [ip]
    a764:	00010800 	andeq	r0, r1, r0, lsl #16
    a768:	00000052 	andeq	r0, r0, r2, asr r0
	...
    a774:	ae000000 	cdpge	0, 0, cr0, cr0, cr0, {0}
    a778:	c208001c 	andgt	r0, r8, #28
    a77c:	0108001c 	tsteq	r8, ip, lsl r0
    a780:	1cc25300 	stclne	3, cr5, [r2], {0}
    a784:	1cd80800 	ldclne	8, cr0, [r8], {0}
    a788:	00010800 	andeq	r0, r1, r0, lsl #16
    a78c:	001cd854 	andseq	sp, ip, r4, asr r8
    a790:	001cec08 	andseq	lr, ip, r8, lsl #24
    a794:	53000108 	movwpl	r0, #264	; 0x108
	...
    a7a4:	08001cae 	stmdaeq	r0, {r1, r2, r3, r5, r7, sl, fp, ip}
    a7a8:	08001cd8 	stmdaeq	r0, {r3, r4, r6, r7, sl, fp, ip}
    a7ac:	00910002 	addseq	r0, r1, r2
    a7b0:	08001cd8 	stmdaeq	r0, {r3, r4, r6, r7, sl, fp, ip}
    a7b4:	08001cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, ip}
    a7b8:	00910002 	addseq	r0, r1, r2
	...
    a7c4:	00010102 	andeq	r0, r1, r2, lsl #2
	...
    a7d0:	08001cae 	stmdaeq	r0, {r1, r2, r3, r5, r7, sl, fp, ip}
    a7d4:	08001cc0 	stmdaeq	r0, {r6, r7, sl, fp, ip}
    a7d8:	9f300002 	svcls	0x00300002
    a7dc:	08001cc0 	stmdaeq	r0, {r6, r7, sl, fp, ip}
    a7e0:	08001cc2 	stmdaeq	r0, {r1, r6, r7, sl, fp, ip}
    a7e4:	c2530001 	subsgt	r0, r3, #1
    a7e8:	d408001c 	strle	r0, [r8], #-28	; 0xffffffe4
    a7ec:	0108001c 	tsteq	r8, ip, lsl r0
    a7f0:	1cd85400 	cfldrdne	mvd5, [r8], {0}
    a7f4:	1cde0800 	ldclne	8, cr0, [lr], {0}
    a7f8:	00020800 	andeq	r0, r2, r0, lsl #16
    a7fc:	1cde9f30 	ldclne	15, cr9, [lr], {48}	; 0x30
    a800:	1ce00800 	stclne	8, cr0, [r0]
    a804:	00010800 	andeq	r0, r1, r0, lsl #16
    a808:	001ce050 	andseq	lr, ip, r0, asr r0
    a80c:	001cec08 	andseq	lr, ip, r8, lsl #24
    a810:	30000208 	andcc	r0, r0, r8, lsl #4
    a814:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    a818:	00000000 	andeq	r0, r0, r0
    a81c:	001bf800 	andseq	pc, fp, r0, lsl #16
    a820:	001bfe08 	andseq	pc, fp, r8, lsl #28
    a824:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    a828:	001bfe00 	andseq	pc, fp, r0, lsl #28
    a82c:	001c8608 	andseq	r8, ip, r8, lsl #12
    a830:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    a834:	001c8610 	andseq	r8, ip, r0, lsl r6
    a838:	001c8a08 	andseq	r8, ip, r8, lsl #20
    a83c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    a840:	001c8a00 	andseq	r8, ip, r0, lsl #20
    a844:	001c8e08 	andseq	r8, ip, r8, lsl #28
    a848:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    a84c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    a864:	001bf800 	andseq	pc, fp, r0, lsl #16
    a868:	001c1608 	andseq	r1, ip, r8, lsl #12
    a86c:	50000108 	andpl	r0, r0, r8, lsl #2
    a870:	08001c16 	stmdaeq	r0, {r1, r2, r4, sl, fp, ip}
    a874:	08001c18 	stmdaeq	r0, {r3, r4, sl, fp, ip}
    a878:	18540001 	ldmdane	r4, {r0}^
    a87c:	1f08001c 	svcne	0x0008001c
    a880:	0108001c 	tsteq	r8, ip, lsl r0
    a884:	1c1f5000 	ldcne	0, cr5, [pc], {-0}
    a888:	1c860800 	stcne	8, cr0, [r6], {0}
    a88c:	00010800 	andeq	r0, r1, r0, lsl #16
    a890:	001c8654 	andseq	r8, ip, r4, asr r6
    a894:	001c8808 	andseq	r8, ip, r8, lsl #16
    a898:	50000108 	andpl	r0, r0, r8, lsl #2
    a89c:	08001c88 	stmdaeq	r0, {r3, r7, sl, fp, ip}
    a8a0:	08001c8a 	stmdaeq	r0, {r1, r3, r7, sl, fp, ip}
    a8a4:	01f30004 	mvnseq	r0, r4
    a8a8:	1c8a9f50 	stcne	15, cr9, [sl], {80}	; 0x50
    a8ac:	1c8c0800 	stcne	8, cr0, [ip], {0}
    a8b0:	00010800 	andeq	r0, r1, r0, lsl #16
    a8b4:	001c8c50 	andseq	r8, ip, r0, asr ip
    a8b8:	001c8e08 	andseq	r8, ip, r8, lsl #28
    a8bc:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    a8d0:	08001bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, ip}
    a8d4:	08001c0c 	stmdaeq	r0, {r2, r3, sl, fp, ip}
    a8d8:	0c510001 	mrrceq	0, 0, r0, r1, cr1
    a8dc:	8608001c 			; <UNDEFINED> instruction: 0x8608001c
    a8e0:	0108001c 	tsteq	r8, ip, lsl r0
    a8e4:	1c865500 	cfstr32ne	mvfx5, [r6], {0}
    a8e8:	1c8c0800 	stcne	8, cr0, [ip], {0}
    a8ec:	00010800 	andeq	r0, r1, r0, lsl #16
    a8f0:	001c8c51 	andseq	r8, ip, r1, asr ip
    a8f4:	001c8e08 	andseq	r8, ip, r8, lsl #28
    a8f8:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    a904:	00000002 	andeq	r0, r0, r2
    a908:	1bf80000 	blne	ffe0a910 <_estack+0xdfe00f70>
    a90c:	1c160800 	ldcne	8, cr0, [r6], {-0}
    a910:	00020800 	andeq	r0, r2, r0, lsl #16
    a914:	1c169f31 	ldcne	15, cr9, [r6], {49}	; 0x31
    a918:	1c180800 	ldcne	8, cr0, [r8], {-0}
    a91c:	00020800 	andeq	r0, r2, r0, lsl #16
    a920:	1c189f30 	ldcne	15, cr9, [r8], {48}	; 0x30
    a924:	1c8c0800 	stcne	8, cr0, [ip], {0}
    a928:	00020800 	andeq	r0, r2, r0, lsl #16
    a92c:	00009f31 	andeq	r9, r0, r1, lsr pc
    a930:	00000000 	andeq	r0, r0, r0
    a934:	00030000 	andeq	r0, r3, r0
	...
    a944:	1bf80000 	blne	ffe0a94c <_estack+0xdfe00fac>
    a948:	1c160800 	ldcne	8, cr0, [r6], {-0}
    a94c:	00010800 	andeq	r0, r1, r0, lsl #16
    a950:	001c1650 	andseq	r1, ip, r0, asr r6
    a954:	001c1808 	andseq	r1, ip, r8, lsl #16
    a958:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    a95c:	08001c18 	stmdaeq	r0, {r3, r4, sl, fp, ip}
    a960:	08001c1f 	stmdaeq	r0, {r0, r1, r2, r3, r4, sl, fp, ip}
    a964:	1f500001 	svcne	0x00500001
    a968:	8608001c 			; <UNDEFINED> instruction: 0x8608001c
    a96c:	0108001c 	tsteq	r8, ip, lsl r0
    a970:	1c865400 	cfstrsne	mvf5, [r6], {0}
    a974:	1c880800 	stcne	8, cr0, [r8], {0}
    a978:	00010800 	andeq	r0, r1, r0, lsl #16
    a97c:	001c8850 	andseq	r8, ip, r0, asr r8
    a980:	001c8a08 	andseq	r8, ip, r8, lsl #20
    a984:	f3000408 	vshl.u8	d0, d8, d0
    a988:	8a9f5001 	bhi	fe7de994 <_estack+0xde7d4ff4>
    a98c:	8c08001c 	stchi	0, cr0, [r8], {28}
    a990:	0108001c 	tsteq	r8, ip, lsl r0
    a994:	1c8c5000 	stcne	0, cr5, [ip], {0}
    a998:	1c8e0800 	stcne	8, cr0, [lr], {0}
    a99c:	00010800 	andeq	r0, r1, r0, lsl #16
    a9a0:	00000054 	andeq	r0, r0, r4, asr r0
    a9a4:	00000000 	andeq	r0, r0, r0
    a9a8:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    a9b4:	53000100 	movwpl	r0, #256	; 0x100
	...
    a9c0:	00530001 	subseq	r0, r3, r1
    a9c4:	00000000 	andeq	r0, r0, r0
    a9c8:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    a9cc:	ac080021 	stcge	0, cr0, [r8], {33}	; 0x21
    a9d0:	02080021 	andeq	r0, r8, #33	; 0x21
    a9d4:	ac007d00 	stcge	13, cr7, [r0], {-0}
    a9d8:	50080021 	andpl	r0, r8, r1, lsr #32
    a9dc:	02080022 	andeq	r0, r8, #34	; 0x22
    a9e0:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    a9f4:	0021a800 	eoreq	sl, r1, r0, lsl #16
    a9f8:	0021ca08 	eoreq	ip, r1, r8, lsl #20
    a9fc:	50000108 	andpl	r0, r0, r8, lsl #2
    aa00:	080021ca 	stmdaeq	r0, {r1, r3, r6, r7, r8, sp}
    aa04:	080021d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, sp}
    aa08:	d8540001 	ldmdale	r4, {r0}^
    aa0c:	f2080021 	vhadd.s8	d0, d8, d17
    aa10:	04080021 	streq	r0, [r8], #-33	; 0xffffffdf
    aa14:	5001f300 	andpl	pc, r1, r0, lsl #6
    aa18:	0021f29f 	mlaeq	r1, pc, r2, pc	; <UNPREDICTABLE>
    aa1c:	00220408 	eoreq	r0, r2, r8, lsl #8
    aa20:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    aa24:	08002204 	stmdaeq	r0, {r2, r9, sp}
    aa28:	08002250 	stmdaeq	r0, {r4, r6, r9, sp}
    aa2c:	01f30004 	mvnseq	r0, r4
    aa30:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    aa3c:	21a80000 			; <UNDEFINED> instruction: 0x21a80000
    aa40:	21c40800 	biccs	r0, r4, r0, lsl #16
    aa44:	00010800 	andeq	r0, r1, r0, lsl #16
    aa48:	0021c451 	eoreq	ip, r1, r1, asr r4
    aa4c:	00225008 	eoreq	r5, r2, r8
    aa50:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    aa60:	080021d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, sp}
    aa64:	080021ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, sp}
    aa68:	1e540001 	cdpne	0, 5, cr0, cr4, cr1, {0}
    aa6c:	50080022 	andpl	r0, r8, r2, lsr #32
    aa70:	01080022 	tsteq	r8, r2, lsr #32
    aa74:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    aa80:	080021b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, sp}
    aa84:	08002250 	stmdaeq	r0, {r4, r6, r9, sp}
    aa88:	00560001 	subseq	r0, r6, r1
	...
    aa94:	0021b800 	eoreq	fp, r1, r0, lsl #16
    aa98:	00225008 	eoreq	r5, r2, r8
    aa9c:	57000108 	strpl	r0, [r0, -r8, lsl #2]
	...
    aaa8:	21be0000 			; <UNDEFINED> instruction: 0x21be0000
    aaac:	22500800 	subscs	r0, r0, #0, 16
    aab0:	00010800 	andeq	r0, r1, r0, lsl #16
    aab4:	00000058 	andeq	r0, r0, r8, asr r0
    aab8:	00000000 	andeq	r0, r0, r0
    aabc:	fa000000 	blx	aac4 <_Min_Heap_Size+0xa2c4>
    aac0:	1e080021 	cdpne	0, 0, cr0, cr8, cr1, {1}
    aac4:	01080022 	tsteq	r8, r2, lsr #32
    aac8:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    aad8:	00020000 	andeq	r0, r2, r0
    aadc:	0000007d 	andeq	r0, r0, sp, ror r0
    aae0:	00000000 	andeq	r0, r0, r0
    aae4:	00020000 	andeq	r0, r2, r0
    aae8:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    aafc:	00010000 	andeq	r0, r1, r0
    ab00:	00000050 	andeq	r0, r0, r0, asr r0
    ab04:	00000000 	andeq	r0, r0, r0
    ab08:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    ab20:	00010000 	andeq	r0, r1, r0
    ab24:	00000051 	andeq	r0, r0, r1, asr r0
    ab28:	00000000 	andeq	r0, r0, r0
    ab2c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    ab38:	00510001 	subseq	r0, r1, r1
	...
    ab50:	52000100 	andpl	r0, r0, #0, 2
	...
    ab5c:	00560001 	subseq	r0, r6, r1
    ab60:	00000000 	andeq	r0, r0, r0
    ab64:	01000000 	mrseq	r0, (UNDEF: 0)
    ab68:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    ab7c:	00540001 	subseq	r0, r4, r1
	...
    ab90:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    aba4:	007d0002 	rsbseq	r0, sp, r2
	...
    abb0:	107d0002 	rsbsne	r0, sp, r2
	...
    abc8:	00500001 	subseq	r0, r0, r1
    abcc:	00000000 	andeq	r0, r0, r0
    abd0:	01000000 	mrseq	r0, (UNDEF: 0)
    abd4:	00005000 	andeq	r5, r0, r0
	...
    abf0:	00010000 	andeq	r0, r1, r0
    abf4:	00000051 	andeq	r0, r0, r1, asr r0
    abf8:	00000000 	andeq	r0, r0, r0
    abfc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    ac08:	01f30004 	mvnseq	r0, r4
    ac0c:	00009f51 	andeq	r9, r0, r1, asr pc
    ac10:	00000000 	andeq	r0, r0, r0
    ac14:	00010000 	andeq	r0, r1, r0
    ac18:	00000051 	andeq	r0, r0, r1, asr r0
    ac1c:	00000000 	andeq	r0, r0, r0
    ac20:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    ac2c:	01f30004 	mvnseq	r0, r4
    ac30:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    ac44:	00010000 	andeq	r0, r1, r0
    ac48:	00000055 	andeq	r0, r0, r5, asr r0
    ac4c:	00000000 	andeq	r0, r0, r0
    ac50:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    ac5c:	00010000 	andeq	r0, r1, r0
	...
    ac68:	00540001 	subseq	r0, r4, r1
    ac6c:	00000000 	andeq	r0, r0, r0
    ac70:	02000000 	andeq	r0, r0, #0
    ac74:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    ac84:	02000000 	andeq	r0, r0, #0
    ac88:	00007d00 	andeq	r7, r0, r0, lsl #26
    ac8c:	00000000 	andeq	r0, r0, r0
    ac90:	02000000 	andeq	r0, r0, #0
    ac94:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
    acac:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    acb8:	70710003 	rsbsvc	r0, r1, r3
    acbc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    acc0:	00000000 	andeq	r0, r0, r0
    acc4:	f3000400 	vshl.u8	d0, d0, d0
    acc8:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    ace4:	52000100 	andpl	r0, r0, #0, 2
	...
    acf0:	01f30004 	mvnseq	r0, r4
    acf4:	00009f52 	andeq	r9, r0, r2, asr pc
    acf8:	00000000 	andeq	r0, r0, r0
    acfc:	00010000 	andeq	r0, r1, r0
    ad00:	00000052 	andeq	r0, r0, r2, asr r0
    ad04:	00000000 	andeq	r0, r0, r0
    ad08:	f3000400 	vshl.u8	d0, d0, d0
    ad0c:	009f5201 	addseq	r5, pc, r1, lsl #4
    ad10:	00000000 	andeq	r0, r0, r0
    ad14:	01000000 	mrseq	r0, (UNDEF: 0)
    ad18:	00005200 	andeq	r5, r0, r0, lsl #4
    ad1c:	00000000 	andeq	r0, r0, r0
    ad20:	00080000 	andeq	r0, r8, r0
	...
    ad2c:	00500001 	subseq	r0, r0, r1
	...
    ad40:	01000000 	mrseq	r0, (UNDEF: 0)
    ad44:	00005300 	andeq	r5, r0, r0, lsl #6
    ad48:	00000000 	andeq	r0, r0, r0
    ad4c:	00010000 	andeq	r0, r1, r0
    ad50:	00000053 	andeq	r0, r0, r3, asr r0
    ad54:	00000000 	andeq	r0, r0, r0
    ad58:	00000100 	andeq	r0, r0, r0, lsl #2
    ad5c:	00000000 	andeq	r0, r0, r0
    ad60:	01000000 	mrseq	r0, (UNDEF: 0)
    ad64:	00005c00 	andeq	r5, r0, r0, lsl #24
	...
    ad78:	00010000 	andeq	r0, r1, r0
    ad7c:	00000053 	andeq	r0, r0, r3, asr r0
    ad80:	00000000 	andeq	r0, r0, r0
    ad84:	53000100 	movwpl	r0, #256	; 0x100
	...
    ad98:	00010000 	andeq	r0, r1, r0
    ad9c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    adac:	01000000 	mrseq	r0, (UNDEF: 0)
    adb0:	00005100 	andeq	r5, r0, r0, lsl #2
    adb4:	00000000 	andeq	r0, r0, r0
    adb8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    adc4:	005c0001 	subseq	r0, ip, r1
    adc8:	00000000 	andeq	r0, r0, r0
    adcc:	02000000 	andeq	r0, r0, #0
	...
    add8:	5c000100 	stfpls	f0, [r0], {-0}
	...
    adec:	007d0002 	rsbseq	r0, sp, r2
	...
    adf8:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
    ae10:	00500001 	subseq	r0, r0, r1
    ae14:	00000000 	andeq	r0, r0, r0
    ae18:	01000000 	mrseq	r0, (UNDEF: 0)
    ae1c:	00005e00 	andeq	r5, r0, r0, lsl #28
	...
    ae48:	00010000 	andeq	r0, r1, r0
    ae4c:	00000051 	andeq	r0, r0, r1, asr r0
    ae50:	00000000 	andeq	r0, r0, r0
    ae54:	71000300 	mrsvc	r0, LR_irq
    ae58:	00009f70 	andeq	r9, r0, r0, ror pc
    ae5c:	00000000 	andeq	r0, r0, r0
    ae60:	00040000 	andeq	r0, r4, r0
    ae64:	9f5101f3 	svcls	0x005101f3
	...
    ae70:	00510001 	subseq	r0, r1, r1
    ae74:	00000000 	andeq	r0, r0, r0
    ae78:	03000000 	movweq	r0, #0
    ae7c:	9f707100 	svcls	0x00707100
	...
    ae88:	01f30004 	mvnseq	r0, r4
    ae8c:	00009f51 	andeq	r9, r0, r1, asr pc
    ae90:	00000000 	andeq	r0, r0, r0
    ae94:	00010000 	andeq	r0, r1, r0
    ae98:	00000051 	andeq	r0, r0, r1, asr r0
    ae9c:	00000000 	andeq	r0, r0, r0
    aea0:	71000300 	mrsvc	r0, LR_irq
    aea4:	00009f70 	andeq	r9, r0, r0, ror pc
    aea8:	00000000 	andeq	r0, r0, r0
    aeac:	00040000 	andeq	r0, r4, r0
    aeb0:	9f5101f3 	svcls	0x005101f3
	...
    aebc:	00510001 	subseq	r0, r1, r1
    aec0:	00000000 	andeq	r0, r0, r0
    aec4:	03000000 	movweq	r0, #0
    aec8:	9f707100 	svcls	0x00707100
	...
    aed4:	01f30004 	mvnseq	r0, r4
    aed8:	00009f51 	andeq	r9, r0, r1, asr pc
    aedc:	00000000 	andeq	r0, r0, r0
    aee0:	00010000 	andeq	r0, r1, r0
    aee4:	00000051 	andeq	r0, r0, r1, asr r0
    aee8:	00000000 	andeq	r0, r0, r0
    aeec:	f3000400 	vshl.u8	d0, d0, d0
    aef0:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    af08:	01000000 	mrseq	r0, (UNDEF: 0)
    af0c:	00005200 	andeq	r5, r0, r0, lsl #4
    af10:	00000000 	andeq	r0, r0, r0
    af14:	00040000 	andeq	r0, r4, r0
    af18:	9f5201f3 	svcls	0x005201f3
	...
    af24:	00520001 	subseq	r0, r2, r1
    af28:	00000000 	andeq	r0, r0, r0
    af2c:	04000000 	streq	r0, [r0], #-0
    af30:	5201f300 	andpl	pc, r1, #0, 6
    af34:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    af48:	53000100 	movwpl	r0, #256	; 0x100
	...
    af54:	01f30004 	mvnseq	r0, r4
    af58:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    af6c:	00020000 	andeq	r0, r2, r0
    af70:	00000091 	muleq	r0, r1, r0
    af74:	00000000 	andeq	r0, r0, r0
    af78:	00020000 	andeq	r0, r2, r0
    af7c:	00000091 	muleq	r0, r1, r0
	...
    af90:	00020000 	andeq	r0, r2, r0
    af94:	00000491 	muleq	r0, r1, r4
    af98:	00000000 	andeq	r0, r0, r0
    af9c:	00020000 	andeq	r0, r2, r0
    afa0:	00000491 	muleq	r0, r1, r4
    afa4:	00000000 	andeq	r0, r0, r0
    afa8:	00090000 	andeq	r0, r9, r0
	...
    afb4:	00010000 	andeq	r0, r1, r0
    afb8:	00000050 	andeq	r0, r0, r0, asr r0
    afbc:	00000000 	andeq	r0, r0, r0
    afc0:	5e000100 	adfpls	f0, f0, f0
	...
    afd4:	00010000 	andeq	r0, r1, r0
    afd8:	0000005c 	andeq	r0, r0, ip, asr r0
    afdc:	00000000 	andeq	r0, r0, r0
    afe0:	00000300 	andeq	r0, r0, r0, lsl #6
	...
    aff0:	31000200 	mrscc	r0, R8_usr
    aff4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    aff8:	00000000 	andeq	r0, r0, r0
    affc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    b008:	9f310002 	svcls	0x00310002
	...
    b014:	00500001 	subseq	r0, r0, r1
    b018:	00000000 	andeq	r0, r0, r0
    b01c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    b028:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    b040:	00530001 	subseq	r0, r3, r1
    b044:	00000000 	andeq	r0, r0, r0
    b048:	01000000 	mrseq	r0, (UNDEF: 0)
    b04c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    b060:	00530001 	subseq	r0, r3, r1
	...
    b074:	52000100 	andpl	r0, r0, #0, 2
	...
    b080:	00000100 	andeq	r0, r0, r0, lsl #2
    b084:	00000000 	andeq	r0, r0, r0
    b088:	00010000 	andeq	r0, r1, r0
    b08c:	00000055 	andeq	r0, r0, r5, asr r0
    b090:	00000000 	andeq	r0, r0, r0
    b094:	00000200 	andeq	r0, r0, r0, lsl #4
    b098:	00000000 	andeq	r0, r0, r0
    b09c:	01000000 	mrseq	r0, (UNDEF: 0)
    b0a0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    b0b0:	00020000 	andeq	r0, r2, r0
    b0b4:	0000007d 	andeq	r0, r0, sp, ror r0
    b0b8:	00000000 	andeq	r0, r0, r0
    b0bc:	00020000 	andeq	r0, r2, r0
    b0c0:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    b0d4:	00010000 	andeq	r0, r1, r0
    b0d8:	00000050 	andeq	r0, r0, r0, asr r0
    b0dc:	00000000 	andeq	r0, r0, r0
    b0e0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    b114:	00010000 	andeq	r0, r1, r0
    b118:	00000051 	andeq	r0, r0, r1, asr r0
    b11c:	00000000 	andeq	r0, r0, r0
    b120:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    b12c:	70750003 	rsbsvc	r0, r5, r3
    b130:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b134:	00000000 	andeq	r0, r0, r0
    b138:	f3000400 	vshl.u8	d0, d0, d0
    b13c:	009f5101 	addseq	r5, pc, r1, lsl #2
    b140:	00000000 	andeq	r0, r0, r0
    b144:	01000000 	mrseq	r0, (UNDEF: 0)
    b148:	00005500 	andeq	r5, r0, r0, lsl #10
    b14c:	00000000 	andeq	r0, r0, r0
    b150:	00030000 	andeq	r0, r3, r0
    b154:	009f7075 	addseq	r7, pc, r5, ror r0	; <UNPREDICTABLE>
    b158:	00000000 	andeq	r0, r0, r0
    b15c:	04000000 	streq	r0, [r0], #-0
    b160:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    b164:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b168:	00000000 	andeq	r0, r0, r0
    b16c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    b178:	70750003 	rsbsvc	r0, r5, r3
    b17c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b180:	00000000 	andeq	r0, r0, r0
    b184:	f3000400 	vshl.u8	d0, d0, d0
    b188:	009f5101 	addseq	r5, pc, r1, lsl #2
    b18c:	00000000 	andeq	r0, r0, r0
    b190:	01000000 	mrseq	r0, (UNDEF: 0)
    b194:	00005500 	andeq	r5, r0, r0, lsl #10
    b198:	00000000 	andeq	r0, r0, r0
    b19c:	00030000 	andeq	r0, r3, r0
    b1a0:	009f7075 	addseq	r7, pc, r5, ror r0	; <UNPREDICTABLE>
    b1a4:	00000000 	andeq	r0, r0, r0
    b1a8:	04000000 	streq	r0, [r0], #-0
    b1ac:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    b1b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b1b4:	00000000 	andeq	r0, r0, r0
    b1b8:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    b1c4:	01f30004 	mvnseq	r0, r4
    b1c8:	00009f51 	andeq	r9, r0, r1, asr pc
    b1cc:	00000000 	andeq	r0, r0, r0
    b1d0:	00010000 	andeq	r0, r1, r0
    b1d4:	00000055 	andeq	r0, r0, r5, asr r0
    b1d8:	00000000 	andeq	r0, r0, r0
    b1dc:	f3000400 	vshl.u8	d0, d0, d0
    b1e0:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    b1fc:	52000100 	andpl	r0, r0, #0, 2
	...
    b208:	00570001 	subseq	r0, r7, r1
    b20c:	00000000 	andeq	r0, r0, r0
    b210:	04000000 	streq	r0, [r0], #-0
    b214:	5201f300 	andpl	pc, r1, #0, 6
    b218:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b21c:	00000000 	andeq	r0, r0, r0
    b220:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    b22c:	01f30004 	mvnseq	r0, r4
    b230:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    b244:	00010000 	andeq	r0, r1, r0
    b248:	00000053 	andeq	r0, r0, r3, asr r0
    b24c:	00000000 	andeq	r0, r0, r0
    b250:	f3000400 	vshl.u8	d0, d0, d0
    b254:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    b26c:	91000200 	mrsls	r0, R8_usr
	...
    b278:	91000200 	mrsls	r0, R8_usr
	...
    b284:	91000200 	mrsls	r0, R8_usr
	...
    b290:	00000700 	andeq	r0, r0, r0, lsl #14
	...
    b29c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    b2a8:	00540001 	subseq	r0, r4, r1
    b2ac:	00000000 	andeq	r0, r0, r0
    b2b0:	02000000 	andeq	r0, r0, #0
	...
    b2c0:	02000000 	andeq	r0, r0, #0
    b2c4:	009f3100 	addseq	r3, pc, r0, lsl #2
    b2c8:	00000000 	andeq	r0, r0, r0
    b2cc:	01000000 	mrseq	r0, (UNDEF: 0)
    b2d0:	00005500 	andeq	r5, r0, r0, lsl #10
    b2d4:	00000000 	andeq	r0, r0, r0
    b2d8:	00020000 	andeq	r0, r2, r0
    b2dc:	00009f31 	andeq	r9, r0, r1, lsr pc
    b2e0:	00000000 	andeq	r0, r0, r0
    b2e4:	00010000 	andeq	r0, r1, r0
    b2e8:	00000055 	andeq	r0, r0, r5, asr r0
	...
    b2fc:	01000000 	mrseq	r0, (UNDEF: 0)
    b300:	00005000 	andeq	r5, r0, r0
    b304:	00000000 	andeq	r0, r0, r0
    b308:	00010000 	andeq	r0, r1, r0
    b30c:	00000050 	andeq	r0, r0, r0, asr r0
    b310:	00000000 	andeq	r0, r0, r0
    b314:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    b32c:	00530001 	subseq	r0, r3, r1
    b330:	00000000 	andeq	r0, r0, r0
    b334:	01000000 	mrseq	r0, (UNDEF: 0)
    b338:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    b34c:	00530001 	subseq	r0, r3, r1
	...
    b35c:	02000000 	andeq	r0, r0, #0
    b360:	00007d00 	andeq	r7, r0, r0, lsl #26
    b364:	00000000 	andeq	r0, r0, r0
    b368:	02000000 	andeq	r0, r0, #0
    b36c:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    b384:	01000000 	mrseq	r0, (UNDEF: 0)
    b388:	00005000 	andeq	r5, r0, r0
    b38c:	00000000 	andeq	r0, r0, r0
    b390:	00010000 	andeq	r0, r1, r0
    b394:	00000054 	andeq	r0, r0, r4, asr r0
    b398:	00000000 	andeq	r0, r0, r0
    b39c:	f3000400 	vshl.u8	d0, d0, d0
    b3a0:	009f5001 	addseq	r5, pc, r1
    b3a4:	00000000 	andeq	r0, r0, r0
    b3a8:	01000000 	mrseq	r0, (UNDEF: 0)
    b3ac:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    b3c0:	00010000 	andeq	r0, r1, r0
    b3c4:	00000051 	andeq	r0, r0, r1, asr r0
    b3c8:	00000000 	andeq	r0, r0, r0
    b3cc:	58000100 	stmdapl	r0, {r8}
	...
    b3e8:	00010000 	andeq	r0, r1, r0
    b3ec:	00000052 	andeq	r0, r0, r2, asr r0
    b3f0:	00000000 	andeq	r0, r0, r0
    b3f4:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    b400:	01f30004 	mvnseq	r0, r4
    b404:	00009f52 	andeq	r9, r0, r2, asr pc
    b408:	00000000 	andeq	r0, r0, r0
    b40c:	00010000 	andeq	r0, r1, r0
    b410:	00000056 	andeq	r0, r0, r6, asr r0
    b414:	00000000 	andeq	r0, r0, r0
    b418:	f3000400 	vshl.u8	d0, d0, d0
    b41c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    b438:	53000100 	movwpl	r0, #256	; 0x100
	...
    b444:	00550001 	subseq	r0, r5, r1
    b448:	00000000 	andeq	r0, r0, r0
    b44c:	04000000 	streq	r0, [r0], #-0
    b450:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    b454:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b458:	00000000 	andeq	r0, r0, r0
    b45c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    b468:	01f30004 	mvnseq	r0, r4
    b46c:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    b480:	00020000 	andeq	r0, r2, r0
    b484:	00000091 	muleq	r0, r1, r0
    b488:	00000000 	andeq	r0, r0, r0
    b48c:	00020000 	andeq	r0, r2, r0
    b490:	00000091 	muleq	r0, r1, r0
	...
    b49c:	00000001 	andeq	r0, r0, r1
    b4a0:	00000000 	andeq	r0, r0, r0
    b4a4:	00010000 	andeq	r0, r1, r0
    b4a8:	00000055 	andeq	r0, r0, r5, asr r0
    b4ac:	00000000 	andeq	r0, r0, r0
    b4b0:	31000200 	mrscc	r0, R8_usr
    b4b4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    b4c8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    b4d4:	00500001 	subseq	r0, r0, r1
    b4d8:	00000000 	andeq	r0, r0, r0
    b4dc:	01000000 	mrseq	r0, (UNDEF: 0)
    b4e0:	01010001 	tsteq	r1, r1
	...
    b4ec:	30000200 	andcc	r0, r0, r0, lsl #4
    b4f0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b4f4:	00000000 	andeq	r0, r0, r0
    b4f8:	30000200 	andcc	r0, r0, r0, lsl #4
    b4fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b500:	00000000 	andeq	r0, r0, r0
    b504:	31000200 	mrscc	r0, R8_usr
    b508:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    b518:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    b524:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    b528:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    b540:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    b54c:	00540001 	subseq	r0, r4, r1
    b550:	00000000 	andeq	r0, r0, r0
    b554:	04000000 	streq	r0, [r0], #-0
    b558:	5001f300 	andpl	pc, r1, r0, lsl #6
    b55c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b560:	00000000 	andeq	r0, r0, r0
    b564:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    b57c:	00510001 	subseq	r0, r1, r1
    b580:	00000000 	andeq	r0, r0, r0
    b584:	01000000 	mrseq	r0, (UNDEF: 0)
    b588:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    b594:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    b5a8:	00520001 	subseq	r0, r2, r1
    b5ac:	00000000 	andeq	r0, r0, r0
    b5b0:	01000000 	mrseq	r0, (UNDEF: 0)
    b5b4:	00005500 	andeq	r5, r0, r0, lsl #10
    b5b8:	00000000 	andeq	r0, r0, r0
    b5bc:	00040000 	andeq	r0, r4, r0
    b5c0:	9f5201f3 	svcls	0x005201f3
	...
    b5cc:	00550001 	subseq	r0, r5, r1
    b5d0:	00000000 	andeq	r0, r0, r0
    b5d4:	04000000 	streq	r0, [r0], #-0
    b5d8:	5201f300 	andpl	pc, r1, #0, 6
    b5dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    b5e0:	00000000 	andeq	r0, r0, r0
    b5e4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    b5f0:	01f30004 	mvnseq	r0, r4
    b5f4:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    b608:	00010000 	andeq	r0, r1, r0
    b60c:	00000055 	andeq	r0, r0, r5, asr r0
    b610:	00000000 	andeq	r0, r0, r0
    b614:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    b62c:	00500001 	subseq	r0, r0, r1
    b630:	00000000 	andeq	r0, r0, r0
    b634:	01000000 	mrseq	r0, (UNDEF: 0)
    b638:	00005000 	andeq	r5, r0, r0
    b63c:	00000000 	andeq	r0, r0, r0
    b640:	01020000 	mrseq	r0, (UNDEF: 2)
    b644:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    b650:	9f300002 	svcls	0x00300002
	...
    b65c:	9f300002 	svcls	0x00300002
	...
    b668:	9f310002 	svcls	0x00310002
	...
    b67c:	00010000 	andeq	r0, r1, r0
    b680:	00000050 	andeq	r0, r0, r0, asr r0
	...
    b690:	01000000 	mrseq	r0, (UNDEF: 0)
    b694:	00005000 	andeq	r5, r0, r0
	...
    b6a4:	00020000 	andeq	r0, r2, r0
    b6a8:	0000007d 	andeq	r0, r0, sp, ror r0
    b6ac:	00000000 	andeq	r0, r0, r0
    b6b0:	00020000 	andeq	r0, r2, r0
    b6b4:	0000107d 	andeq	r1, r0, sp, ror r0
    b6b8:	00000000 	andeq	r0, r0, r0
    b6bc:	00020000 	andeq	r0, r2, r0
    b6c0:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    b6dc:	00500001 	subseq	r0, r0, r1
    b6e0:	00000000 	andeq	r0, r0, r0
    b6e4:	01000000 	mrseq	r0, (UNDEF: 0)
    b6e8:	00005400 	andeq	r5, r0, r0, lsl #8
    b6ec:	00000000 	andeq	r0, r0, r0
    b6f0:	00010000 	andeq	r0, r1, r0
    b6f4:	00000050 	andeq	r0, r0, r0, asr r0
    b6f8:	00000000 	andeq	r0, r0, r0
    b6fc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    b708:	00500001 	subseq	r0, r0, r1
	...
    b720:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    b72c:	01f30004 	mvnseq	r0, r4
    b730:	00009f51 	andeq	r9, r0, r1, asr pc
    b734:	00000000 	andeq	r0, r0, r0
    b738:	00010000 	andeq	r0, r1, r0
    b73c:	00000051 	andeq	r0, r0, r1, asr r0
    b740:	00000000 	andeq	r0, r0, r0
    b744:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    b754:	01000000 	mrseq	r0, (UNDEF: 0)
    b758:	00005000 	andeq	r5, r0, r0
    b75c:	00000000 	andeq	r0, r0, r0
    b760:	00010000 	andeq	r0, r1, r0
    b764:	00000054 	andeq	r0, r0, r4, asr r0
    b768:	00000000 	andeq	r0, r0, r0
    b76c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    b778:	00540001 	subseq	r0, r4, r1
    b77c:	00000000 	andeq	r0, r0, r0
    b780:	01000000 	mrseq	r0, (UNDEF: 0)
    b784:	00005000 	andeq	r5, r0, r0
    b788:	00000000 	andeq	r0, r0, r0
    b78c:	00030000 	andeq	r0, r3, r0
	...
    b798:	00520001 	subseq	r0, r2, r1
	...
    b7b0:	01000000 	mrseq	r0, (UNDEF: 0)
    b7b4:	00005300 	andeq	r5, r0, r0, lsl #6
    b7b8:	00000000 	andeq	r0, r0, r0
    b7bc:	00010000 	andeq	r0, r1, r0
    b7c0:	00000053 	andeq	r0, r0, r3, asr r0
    b7c4:	00000000 	andeq	r0, r0, r0
    b7c8:	70000200 	andvc	r0, r0, r0, lsl #4
    b7cc:	0000002c 	andeq	r0, r0, ip, lsr #32
    b7d0:	00000000 	andeq	r0, r0, r0
    b7d4:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
    b7d8:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
    b7e8:	01000000 	mrseq	r0, (UNDEF: 0)
    b7ec:	00005300 	andeq	r5, r0, r0, lsl #6
    b7f0:	00000000 	andeq	r0, r0, r0
    b7f4:	28e40000 	stmiacs	r4!, {}^	; <UNPREDICTABLE>
    b7f8:	28ea0800 	stmiacs	sl!, {fp}^
    b7fc:	00020800 	andeq	r0, r2, r0, lsl #16
    b800:	28ea007d 	stmiacs	sl!, {r0, r2, r3, r4, r5, r6}^
    b804:	29520800 	ldmdbcs	r2, {fp}^
    b808:	00020800 	andeq	r0, r2, r0, lsl #16
    b80c:	2952107d 	ldmdbcs	r2, {r0, r2, r3, r4, r5, r6, ip}^
    b810:	29560800 	ldmdbcs	r6, {fp}^
    b814:	00020800 	andeq	r0, r2, r0, lsl #16
    b818:	2956007d 	ldmdbcs	r6, {r0, r2, r3, r4, r5, r6}^
    b81c:	29640800 	stmdbcs	r4!, {fp}^
    b820:	00020800 	andeq	r0, r2, r0, lsl #16
    b824:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    b83c:	28e40000 	stmiacs	r4!, {}^	; <UNPREDICTABLE>
    b840:	28fe0800 	ldmcs	lr!, {fp}^
    b844:	00010800 	andeq	r0, r1, r0, lsl #16
    b848:	0028fe50 	eoreq	pc, r8, r0, asr lr	; <UNPREDICTABLE>
    b84c:	00290008 	eoreq	r0, r9, r8
    b850:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    b854:	08002900 	stmdaeq	r0, {r8, fp, sp}
    b858:	08002904 	stmdaeq	r0, {r2, r8, fp, sp}
    b85c:	04500001 	ldrbeq	r0, [r0], #-1
    b860:	52080029 	andpl	r0, r8, #41	; 0x29
    b864:	01080029 	tsteq	r8, r9, lsr #32
    b868:	29525400 	ldmdbcs	r2, {sl, ip, lr}^
    b86c:	29540800 	ldmdbcs	r4, {fp}^
    b870:	00010800 	andeq	r0, r1, r0, lsl #16
    b874:	00295450 	eoreq	r5, r9, r0, asr r4
    b878:	00295608 	eoreq	r5, r9, r8, lsl #12
    b87c:	f3000408 	vshl.u8	d0, d8, d0
    b880:	569f5001 	ldrpl	r5, [pc], r1
    b884:	58080029 	stmdapl	r8, {r0, r3, r5}
    b888:	01080029 	tsteq	r8, r9, lsr #32
    b88c:	29585000 	ldmdbcs	r8, {ip, lr}^
    b890:	29640800 	stmdbcs	r4!, {fp}^
    b894:	00010800 	andeq	r0, r1, r0, lsl #16
    b898:	00000054 	andeq	r0, r0, r4, asr r0
    b89c:	00000000 	andeq	r0, r0, r0
    b8a0:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    b8b0:	0028e400 	eoreq	lr, r8, r0, lsl #8
    b8b4:	0028fe08 	eoreq	pc, r8, r8, lsl #28
    b8b8:	50000108 	andpl	r0, r0, r8, lsl #2
    b8bc:	080028fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, fp, sp}
    b8c0:	08002900 	stmdaeq	r0, {r8, fp, sp}
    b8c4:	00540001 	subseq	r0, r4, r1
    b8c8:	04080029 	streq	r0, [r8], #-41	; 0xffffffd7
    b8cc:	01080029 	tsteq	r8, r9, lsr #32
    b8d0:	29045000 	stmdbcs	r4, {ip, lr}
    b8d4:	29520800 	ldmdbcs	r2, {fp}^
    b8d8:	00010800 	andeq	r0, r1, r0, lsl #16
    b8dc:	00295254 	eoreq	r5, r9, r4, asr r2
    b8e0:	00295408 	eoreq	r5, r9, r8, lsl #8
    b8e4:	50000108 	andpl	r0, r0, r8, lsl #2
    b8e8:	08002954 	stmdaeq	r0, {r2, r4, r6, r8, fp, sp}
    b8ec:	08002956 	stmdaeq	r0, {r1, r2, r4, r6, r8, fp, sp}
    b8f0:	01f30004 	mvnseq	r0, r4
    b8f4:	29569f50 	ldmdbcs	r6, {r4, r6, r8, r9, sl, fp, ip, pc}^
    b8f8:	29580800 	ldmdbcs	r8, {fp}^
    b8fc:	00010800 	andeq	r0, r1, r0, lsl #16
    b900:	00295850 	eoreq	r5, r9, r0, asr r8
    b904:	00296408 	eoreq	r6, r9, r8, lsl #8
    b908:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    b914:	04000303 	streq	r0, [r0], #-771	; 0xfffffcfd
    b918:	00000004 	andeq	r0, r0, r4
    b91c:	080028e4 	stmdaeq	r0, {r2, r5, r6, r7, fp, sp}
    b920:	080028fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, fp, sp}
    b924:	9f300002 	svcls	0x00300002
    b928:	08002900 	stmdaeq	r0, {r8, fp, sp}
    b92c:	0800294e 	stmdaeq	r0, {r1, r2, r3, r6, r8, fp, sp}
    b930:	9f300002 	svcls	0x00300002
    b934:	0800294e 	stmdaeq	r0, {r1, r2, r3, r6, r8, fp, sp}
    b938:	08002952 	stmdaeq	r0, {r1, r4, r6, r8, fp, sp}
    b93c:	9f310002 	svcls	0x00310002
    b940:	08002952 	stmdaeq	r0, {r1, r4, r6, r8, fp, sp}
    b944:	08002964 	stmdaeq	r0, {r2, r5, r6, r8, fp, sp}
    b948:	9f300002 	svcls	0x00300002
	...
    b954:	292a0000 	stmdbcs	sl!, {}	; <UNPREDICTABLE>
    b958:	29360800 	ldmdbcs	r6!, {fp}
    b95c:	00010800 	andeq	r0, r1, r0, lsl #16
    b960:	00000053 	andeq	r0, r0, r3, asr r0
	...
    b970:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    b97c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    b980:	00000010 	andeq	r0, r0, r0, lsl r0
    b984:	00000000 	andeq	r0, r0, r0
    b988:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    b994:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    b998:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    b9bc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    b9c8:	00540001 	subseq	r0, r4, r1
    b9cc:	00000000 	andeq	r0, r0, r0
    b9d0:	01000000 	mrseq	r0, (UNDEF: 0)
    b9d4:	00005000 	andeq	r5, r0, r0
    b9d8:	00000000 	andeq	r0, r0, r0
    b9dc:	00010000 	andeq	r0, r1, r0
    b9e0:	00000054 	andeq	r0, r0, r4, asr r0
    b9e4:	00000000 	andeq	r0, r0, r0
    b9e8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    b9f4:	00540001 	subseq	r0, r4, r1
    b9f8:	00000000 	andeq	r0, r0, r0
    b9fc:	01000000 	mrseq	r0, (UNDEF: 0)
    ba00:	00005000 	andeq	r5, r0, r0
    ba04:	00000000 	andeq	r0, r0, r0
    ba08:	00040000 	andeq	r0, r4, r0
    ba0c:	9f5001f3 	svcls	0x005001f3
	...
    ba18:	00500001 	subseq	r0, r0, r1
    ba1c:	00000000 	andeq	r0, r0, r0
    ba20:	01000000 	mrseq	r0, (UNDEF: 0)
    ba24:	00005400 	andeq	r5, r0, r0, lsl #8
    ba28:	00000000 	andeq	r0, r0, r0
    ba2c:	00020000 	andeq	r0, r2, r0
	...
    ba48:	00010000 	andeq	r0, r1, r0
    ba4c:	00000050 	andeq	r0, r0, r0, asr r0
    ba50:	00000000 	andeq	r0, r0, r0
    ba54:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    ba60:	00500001 	subseq	r0, r0, r1
    ba64:	00000000 	andeq	r0, r0, r0
    ba68:	01000000 	mrseq	r0, (UNDEF: 0)
    ba6c:	00005400 	andeq	r5, r0, r0, lsl #8
    ba70:	00000000 	andeq	r0, r0, r0
    ba74:	00010000 	andeq	r0, r1, r0
    ba78:	00000050 	andeq	r0, r0, r0, asr r0
    ba7c:	00000000 	andeq	r0, r0, r0
    ba80:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    ba8c:	00500001 	subseq	r0, r0, r1
    ba90:	00000000 	andeq	r0, r0, r0
    ba94:	04000000 	streq	r0, [r0], #-0
    ba98:	5001f300 	andpl	pc, r1, r0, lsl #6
    ba9c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    baa0:	00000000 	andeq	r0, r0, r0
    baa4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    bab0:	00540001 	subseq	r0, r4, r1
    bab4:	00000000 	andeq	r0, r0, r0
    bab8:	03000000 	movweq	r0, #0
	...
    bac8:	30000200 	andcc	r0, r0, r0, lsl #4
    bacc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    bad0:	00000000 	andeq	r0, r0, r0
    bad4:	30000200 	andcc	r0, r0, r0, lsl #4
    bad8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    badc:	00000000 	andeq	r0, r0, r0
    bae0:	31000200 	mrscc	r0, R8_usr
    bae4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    baf4:	01000000 	mrseq	r0, (UNDEF: 0)
    baf8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    bb04:	080028d2 	stmdaeq	r0, {r1, r4, r6, r7, fp, sp}
    bb08:	080028d4 	stmdaeq	r0, {r2, r4, r6, r7, fp, sp}
    bb0c:	9f300002 	svcls	0x00300002
	...
    bb28:	00500001 	subseq	r0, r0, r1
    bb2c:	00000000 	andeq	r0, r0, r0
    bb30:	04000000 	streq	r0, [r0], #-0
    bb34:	5001f300 	andpl	pc, r1, r0, lsl #6
    bb38:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    bb3c:	00000000 	andeq	r0, r0, r0
    bb40:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    bb4c:	01f30004 	mvnseq	r0, r4
    bb50:	00009f50 	andeq	r9, r0, r0, asr pc
    bb54:	00000000 	andeq	r0, r0, r0
    bb58:	00020000 	andeq	r0, r2, r0
	...
    bb68:	9f300002 	svcls	0x00300002
	...
    bb74:	00500001 	subseq	r0, r0, r1
    bb78:	00000000 	andeq	r0, r0, r0
    bb7c:	02000000 	andeq	r0, r0, #0
    bb80:	009f3000 	addseq	r3, pc, r0
	...
    bb94:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    bba0:	08002136 	stmdaeq	r0, {r1, r2, r4, r5, r8, sp}
    bba4:	08002138 	stmdaeq	r0, {r3, r4, r5, r8, sp}
    bba8:	007d0002 	rsbseq	r0, sp, r2
    bbac:	08002138 	stmdaeq	r0, {r3, r4, r5, r8, sp}
    bbb0:	0800215a 	stmdaeq	r0, {r1, r3, r4, r6, r8, sp}
    bbb4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    bbcc:	08002136 	stmdaeq	r0, {r1, r2, r4, r5, r8, sp}
    bbd0:	08002144 	stmdaeq	r0, {r2, r6, r8, sp}
    bbd4:	44500001 	ldrbmi	r0, [r0], #-1
    bbd8:	46080021 	strmi	r0, [r8], -r1, lsr #32
    bbdc:	01080021 	tsteq	r8, r1, lsr #32
    bbe0:	21465400 	cmpcs	r6, r0, lsl #8
    bbe4:	21480800 	cmpcs	r8, r0, lsl #16
    bbe8:	00010800 	andeq	r0, r1, r0, lsl #16
    bbec:	00214850 	eoreq	r4, r1, r0, asr r8
    bbf0:	00215408 	eoreq	r5, r1, r8, lsl #8
    bbf4:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    bbf8:	08002154 	stmdaeq	r0, {r2, r4, r6, r8, sp}
    bbfc:	08002157 	stmdaeq	r0, {r0, r1, r2, r4, r6, r8, sp}
    bc00:	57500001 	ldrbpl	r0, [r0, -r1]
    bc04:	5a080021 	bpl	20bc90 <_Min_Heap_Size+0x20b490>
    bc08:	01080021 	tsteq	r8, r1, lsr #32
    bc0c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    bc1c:	00020000 	andeq	r0, r2, r0
    bc20:	0000007d 	andeq	r0, r0, sp, ror r0
    bc24:	00000000 	andeq	r0, r0, r0
    bc28:	00020000 	andeq	r0, r2, r0
    bc2c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    bc40:	00010000 	andeq	r0, r1, r0
    bc44:	00000050 	andeq	r0, r0, r0, asr r0
    bc48:	00000000 	andeq	r0, r0, r0
    bc4c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    bc60:	00010000 	andeq	r0, r1, r0
    bc64:	00000053 	andeq	r0, r0, r3, asr r0
    bc68:	00000000 	andeq	r0, r0, r0
    bc6c:	00000100 	andeq	r0, r0, r0, lsl #2
    bc70:	00000000 	andeq	r0, r0, r0
    bc74:	02000000 	andeq	r0, r0, #0
    bc78:	00307300 	eorseq	r7, r0, r0, lsl #6
	...
    bc8c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    bca4:	00500001 	subseq	r0, r0, r1
    bca8:	00000000 	andeq	r0, r0, r0
    bcac:	01000000 	mrseq	r0, (UNDEF: 0)
    bcb0:	00005000 	andeq	r5, r0, r0
    bcb4:	00000000 	andeq	r0, r0, r0
    bcb8:	00020000 	andeq	r0, r2, r0
    bcbc:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    bcc8:	00020000 	andeq	r0, r2, r0
    bccc:	00009f30 	andeq	r9, r0, r0, lsr pc
    bcd0:	00000000 	andeq	r0, r0, r0
    bcd4:	00010000 	andeq	r0, r1, r0
    bcd8:	00000053 	andeq	r0, r0, r3, asr r0
    bcdc:	00000000 	andeq	r0, r0, r0
    bce0:	73000500 	movwvc	r0, #1280	; 0x500
    bce4:	9f253200 	svcls	0x00253200
	...
    bcf0:	00500001 	subseq	r0, r0, r1
    bcf4:	00000000 	andeq	r0, r0, r0
    bcf8:	5c000000 	stcpl	0, cr0, [r0], {-0}
    bcfc:	64080021 	strvs	r0, [r8], #-33	; 0xffffffdf
    bd00:	02080021 	andeq	r0, r8, #33	; 0x21
    bd04:	64007d00 	strvs	r7, [r0], #-3328	; 0xfffff300
    bd08:	98080021 	stmdals	r8, {r0, r5}
    bd0c:	02080021 	andeq	r0, r8, #33	; 0x21
    bd10:	98087d00 	stmdals	r8, {r8, sl, fp, ip, sp, lr}
    bd14:	a8080021 	stmdage	r8, {r0, r5}
    bd18:	02080021 	andeq	r0, r8, #33	; 0x21
    bd1c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    bd28:	00216e00 	eoreq	r6, r1, r0, lsl #28
    bd2c:	00219808 	eoreq	r9, r1, r8, lsl #16
    bd30:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    bd3c:	08001fa0 	stmdaeq	r0, {r5, r7, r8, r9, sl, fp, ip}
    bd40:	08001fa2 	stmdaeq	r0, {r1, r5, r7, r8, r9, sl, fp, ip}
    bd44:	007d0002 	rsbseq	r0, sp, r2
    bd48:	08001fa2 	stmdaeq	r0, {r1, r5, r7, r8, r9, sl, fp, ip}
    bd4c:	08002008 	stmdaeq	r0, {r3, sp}
    bd50:	107d0002 	rsbsne	r0, sp, r2
	...
    bd5c:	00000002 	andeq	r0, r0, r2
    bd60:	08001fa2 	stmdaeq	r0, {r1, r5, r7, r8, r9, sl, fp, ip}
    bd64:	08001fa6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl, fp, ip}
    bd68:	9f300002 	svcls	0x00300002
    bd6c:	08001fa6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl, fp, ip}
    bd70:	08001fc4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl, fp, ip}
    bd74:	00540001 	subseq	r0, r4, r1
    bd78:	00000000 	andeq	r0, r0, r0
    bd7c:	03000000 	movweq	r0, #0
    bd80:	7c000000 	stcvc	0, cr0, [r0], {-0}
    bd84:	ae080028 	cdpge	0, 0, cr0, cr8, cr8, {1}
    bd88:	02080028 	andeq	r0, r8, #40	; 0x28
    bd8c:	ae9f3100 	fmlgee	f3, f7, f0
    bd90:	c4080028 	strgt	r0, [r8], #-40	; 0xffffffd8
    bd94:	01080028 	tsteq	r8, r8, lsr #32
    bd98:	00005000 	andeq	r5, r0, r0
    bd9c:	00000000 	andeq	r0, r0, r0
    bda0:	25d40000 	ldrbcs	r0, [r4]
    bda4:	25d60800 	ldrbcs	r0, [r6, #2048]	; 0x800
    bda8:	00020800 	andeq	r0, r2, r0, lsl #16
    bdac:	25d6007d 	ldrbcs	r0, [r6, #125]	; 0x7d
    bdb0:	261c0800 	ldrcs	r0, [ip], -r0, lsl #16
    bdb4:	00020800 	andeq	r0, r2, r0, lsl #16
    bdb8:	0000087d 	andeq	r0, r0, sp, ror r8
    bdbc:	00000000 	andeq	r0, r0, r0
    bdc0:	00010000 	andeq	r0, r1, r0
    bdc4:	25d40000 	ldrbcs	r0, [r4]
    bdc8:	25d80800 	ldrbcs	r0, [r8, #2048]	; 0x800
    bdcc:	00010800 	andeq	r0, r1, r0, lsl #16
    bdd0:	0025d850 	eoreq	sp, r5, r0, asr r8
    bdd4:	00261c08 	eoreq	r1, r6, r8, lsl #24
    bdd8:	f3000408 	vshl.u8	d0, d8, d0
    bddc:	009f5001 	addseq	r5, pc, r1
	...
    bdec:	0025f000 	eoreq	pc, r5, r0
    bdf0:	0025f408 	eoreq	pc, r5, r8, lsl #8
    bdf4:	50000108 	andpl	r0, r0, r8, lsl #2
    bdf8:	08002602 	stmdaeq	r0, {r1, r9, sl, sp}
    bdfc:	08002605 	stmdaeq	r0, {r0, r2, r9, sl, sp}
    be00:	0a500001 	beq	140be0c <_Min_Heap_Size+0x140b60c>
    be04:	11080026 	tstne	r8, r6, lsr #32
    be08:	01080026 	tsteq	r8, r6, lsr #32
    be0c:	00005000 	andeq	r5, r0, r0
    be10:	00000000 	andeq	r0, r0, r0
    be14:	27f40000 	ldrbcs	r0, [r4, r0]!
    be18:	27f60800 	ldrbcs	r0, [r6, r0, lsl #16]!
    be1c:	00020800 	andeq	r0, r2, r0, lsl #16
    be20:	27f6007d 			; <UNDEFINED> instruction: 0x27f6007d
    be24:	28700800 	ldmdacs	r0!, {fp}^
    be28:	00020800 	andeq	r0, r2, r0, lsl #16
    be2c:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    be4c:	080027f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, sp}
    be50:	080027fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, sp}
    be54:	fd500001 	ldc2l	0, cr0, [r0, #-4]
    be58:	1c080027 	stcne	0, cr0, [r8], {39}	; 0x27
    be5c:	01080028 	tsteq	r8, r8, lsr #32
    be60:	281c5400 	ldmdacs	ip, {sl, ip, lr}
    be64:	28240800 	stmdacs	r4!, {fp}
    be68:	00040800 	andeq	r0, r4, r0, lsl #16
    be6c:	9f5001f3 	svcls	0x005001f3
    be70:	08002824 	stmdaeq	r0, {r2, r5, fp, sp}
    be74:	08002840 	stmdaeq	r0, {r6, fp, sp}
    be78:	40540001 	subsmi	r0, r4, r1
    be7c:	42080028 	andmi	r0, r8, #40	; 0x28
    be80:	04080028 	streq	r0, [r8], #-40	; 0xffffffd8
    be84:	5001f300 	andpl	pc, r1, r0, lsl #6
    be88:	0028429f 	mlaeq	r8, pc, r2, r4	; <UNPREDICTABLE>
    be8c:	00284c08 	eoreq	r4, r8, r8, lsl #24
    be90:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    be94:	0800284c 	stmdaeq	r0, {r2, r3, r6, fp, sp}
    be98:	0800284e 	stmdaeq	r0, {r1, r2, r3, r6, fp, sp}
    be9c:	01f30004 	mvnseq	r0, r4
    bea0:	284e9f50 	stmdacs	lr, {r4, r6, r8, r9, sl, fp, ip, pc}^
    bea4:	285c0800 	ldmdacs	ip, {fp}^
    bea8:	00010800 	andeq	r0, r1, r0, lsl #16
    beac:	00285c54 	eoreq	r5, r8, r4, asr ip
    beb0:	00285e08 	eoreq	r5, r8, r8, lsl #28
    beb4:	f3000408 	vshl.u8	d0, d8, d0
    beb8:	5e9f5001 	cdppl	0, 9, cr5, cr15, cr1, {0}
    bebc:	60080028 	andvs	r0, r8, r8, lsr #32
    bec0:	01080028 	tsteq	r8, r8, lsr #32
    bec4:	28605400 	stmdacs	r0!, {sl, ip, lr}^
    bec8:	28700800 	ldmdacs	r0!, {fp}^
    becc:	00040800 	andeq	r0, r4, r0, lsl #16
    bed0:	9f5001f3 	svcls	0x005001f3
	...
    bee0:	080027f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, sp}
    bee4:	080027fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, r8, r9, sl, sp}
    bee8:	fd510001 	ldc2l	0, cr0, [r1, #-4]
    beec:	70080027 	andvc	r0, r8, r7, lsr #32
    bef0:	01080028 	tsteq	r8, r8, lsr #32
    bef4:	00005500 	andeq	r5, r0, r0, lsl #10
    bef8:	00000000 	andeq	r0, r0, r0
    befc:	00010000 	andeq	r0, r1, r0
    bf00:	00010000 	andeq	r0, r1, r0
    bf04:	00010001 	andeq	r0, r1, r1
    bf08:	0800281a 	stmdaeq	r0, {r1, r3, r4, fp, sp}
    bf0c:	0800281c 	stmdaeq	r0, {r2, r3, r4, fp, sp}
    bf10:	9f310002 	svcls	0x00310002
    bf14:	0800281c 	stmdaeq	r0, {r2, r3, r4, fp, sp}
    bf18:	08002824 	stmdaeq	r0, {r2, r5, fp, sp}
    bf1c:	3a540001 	bcc	150bf28 <_Min_Heap_Size+0x150b728>
    bf20:	42080028 	andmi	r0, r8, #40	; 0x28
    bf24:	02080028 	andeq	r0, r8, #40	; 0x28
    bf28:	4a9f3100 	bmi	fe7d8330 <_estack+0xde7ce990>
    bf2c:	4e080028 	cdpmi	0, 0, cr0, cr8, cr8, {1}
    bf30:	02080028 	andeq	r0, r8, #40	; 0x28
    bf34:	5a9f3100 	bpl	fe7d833c <_estack+0xde7ce99c>
    bf38:	5e080028 	cdppl	0, 0, cr0, cr8, cr8, {1}
    bf3c:	02080028 	andeq	r0, r8, #40	; 0x28
    bf40:	009f3000 	addseq	r3, pc, r0
	...
    bf50:	00280200 	eoreq	r0, r8, r0, lsl #4
    bf54:	00281608 	eoreq	r1, r8, r8, lsl #12
    bf58:	52000108 	andpl	r0, r0, #8, 2
    bf5c:	08002824 	stmdaeq	r0, {r2, r5, fp, sp}
    bf60:	08002859 	stmdaeq	r0, {r0, r3, r4, r6, fp, sp}
    bf64:	5e520001 	cdppl	0, 5, cr0, cr2, cr1, {0}
    bf68:	70080028 	andvc	r0, r8, r8, lsr #32
    bf6c:	01080028 	tsteq	r8, r8, lsr #32
    bf70:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    bf80:	08002806 	stmdaeq	r0, {r1, r2, fp, sp}
    bf84:	0800281c 	stmdaeq	r0, {r2, r3, r4, fp, sp}
    bf88:	24500001 	ldrbcs	r0, [r0], #-1
    bf8c:	56080028 	strpl	r0, [r8], -r8, lsr #32
    bf90:	01080028 	tsteq	r8, r8, lsr #32
    bf94:	285e5000 	ldmdacs	lr, {ip, lr}^
    bf98:	28700800 	ldmdacs	r0!, {fp}^
    bf9c:	00010800 	andeq	r0, r1, r0, lsl #16
    bfa0:	00000050 	andeq	r0, r0, r0, asr r0
	...
    bfb0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    bfbc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    bfc0:	00000008 	andeq	r0, r0, r8
	...
    bfd4:	01000000 	mrseq	r0, (UNDEF: 0)
    bfd8:	00005000 	andeq	r5, r0, r0
    bfdc:	00000000 	andeq	r0, r0, r0
    bfe0:	00010000 	andeq	r0, r1, r0
    bfe4:	00000054 	andeq	r0, r0, r4, asr r0
    bfe8:	00000000 	andeq	r0, r0, r0
    bfec:	f3000400 	vshl.u8	d0, d0, d0
    bff0:	009f5001 	addseq	r5, pc, r1
	...
    c000:	02000000 	andeq	r0, r0, #0
    c004:	00007d00 	andeq	r7, r0, r0, lsl #26
    c008:	00000000 	andeq	r0, r0, r0
    c00c:	02000000 	andeq	r0, r0, #0
    c010:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    c028:	01000000 	mrseq	r0, (UNDEF: 0)
    c02c:	00005000 	andeq	r5, r0, r0
    c030:	00000000 	andeq	r0, r0, r0
    c034:	00040000 	andeq	r0, r4, r0
    c038:	9f5001f3 	svcls	0x005001f3
	...
    c044:	00500001 	subseq	r0, r0, r1
    c048:	00000000 	andeq	r0, r0, r0
    c04c:	04000000 	streq	r0, [r0], #-0
    c050:	5001f300 	andpl	pc, r1, r0, lsl #6
    c054:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    c068:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    c074:	01f30004 	mvnseq	r0, r4
    c078:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    c08c:	00540001 	subseq	r0, r4, r1
	...
    c0a0:	01000000 	mrseq	r0, (UNDEF: 0)
    c0a4:	00005300 	andeq	r5, r0, r0, lsl #6
    c0a8:	00000000 	andeq	r0, r0, r0
    c0ac:	00010000 	andeq	r0, r1, r0
    c0b0:	00000053 	andeq	r0, r0, r3, asr r0
	...
    c0c4:	53000100 	movwpl	r0, #256	; 0x100
	...
    c0d0:	00530001 	subseq	r0, r3, r1
	...
    c0e4:	53000100 	movwpl	r0, #256	; 0x100
	...
    c0f0:	080026f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, sp}
    c0f4:	080026fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, sl, sp}
    c0f8:	007d0002 	rsbseq	r0, sp, r2
    c0fc:	080026fa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, sl, sp}
    c100:	080027dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, sp}
    c104:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    c118:	080026f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, sp}
    c11c:	08002762 	stmdaeq	r0, {r1, r5, r6, r8, r9, sl, sp}
    c120:	62500001 	subsvs	r0, r0, #1
    c124:	9a080027 	bls	20c1c8 <_Min_Heap_Size+0x20b9c8>
    c128:	04080027 	streq	r0, [r8], #-39	; 0xffffffd9
    c12c:	5001f300 	andpl	pc, r1, r0, lsl #6
    c130:	00279a9f 	mlaeq	r7, pc, sl, r9	; <UNPREDICTABLE>
    c134:	0027ae08 	eoreq	sl, r7, r8, lsl #28
    c138:	50000108 	andpl	r0, r0, r8, lsl #2
    c13c:	080027ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, r9, sl, sp}
    c140:	080027dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, sp}
    c144:	01f30004 	mvnseq	r0, r4
    c148:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    c154:	080026fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9, sl, sp}
    c158:	080027dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, sp}
    c15c:	00540001 	subseq	r0, r4, r1
    c160:	00000000 	andeq	r0, r0, r0
    c164:	01000000 	mrseq	r0, (UNDEF: 0)
    c168:	92000000 	andls	r0, r0, #0
    c16c:	98080027 	stmdals	r8, {r0, r1, r2, r5}
    c170:	02080027 	andeq	r0, r8, #39	; 0x27
    c174:	c09f3100 	addsgt	r3, pc, r0, lsl #2
    c178:	dc080027 	stcle	0, cr0, [r8], {39}	; 0x27
    c17c:	02080027 	andeq	r0, r8, #39	; 0x27
    c180:	009f3000 	addseq	r3, pc, r0
	...
    c190:	20080027 	andcs	r0, r8, r7, lsr #32
    c194:	01080027 	tsteq	r8, r7, lsr #32
    c198:	279a5300 	ldrcs	r5, [sl, r0, lsl #6]
    c19c:	27a00800 	strcs	r0, [r0, r0, lsl #16]!
    c1a0:	00010800 	andeq	r0, r1, r0, lsl #16
    c1a4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    c1b0:	00272800 	eoreq	r2, r7, r0, lsl #16
    c1b4:	00274608 	eoreq	r4, r7, r8, lsl #12
    c1b8:	53000108 	movwpl	r0, #264	; 0x108
    c1bc:	080027a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, sp}
    c1c0:	080027a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl, sp}
    c1c4:	00530001 	subseq	r0, r3, r1
	...
    c1d0:	00275e00 	eoreq	r5, r7, r0, lsl #28
    c1d4:	00276a08 	eoreq	r6, r7, r8, lsl #20
    c1d8:	53000108 	movwpl	r0, #264	; 0x108
	...
    c1e4:	27aa0000 	strcs	r0, [sl, r0]!
    c1e8:	27b80800 	ldrcs	r0, [r8, r0, lsl #16]!
    c1ec:	00010800 	andeq	r0, r1, r0, lsl #16
    c1f0:	00000052 	andeq	r0, r0, r2, asr r0
    c1f4:	00000000 	andeq	r0, r0, r0
    c1f8:	0026bc00 	eoreq	fp, r6, r0, lsl #24
    c1fc:	0026be08 	eoreq	fp, r6, r8, lsl #28
    c200:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    c204:	0026be00 	eoreq	fp, r6, r0, lsl #28
    c208:	0026f808 	eoreq	pc, r6, r8, lsl #16
    c20c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    c210:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    c21c:	bc000000 	stclt	0, cr0, [r0], {-0}
    c220:	c2080026 	andgt	r0, r8, #38	; 0x26
    c224:	01080026 	tsteq	r8, r6, lsr #32
    c228:	26c25000 	strbcs	r5, [r2], r0
    c22c:	26f10800 	ldrbtcs	r0, [r1], r0, lsl #16
    c230:	00010800 	andeq	r0, r1, r0, lsl #16
    c234:	0026f153 	eoreq	pc, r6, r3, asr r1	; <UNPREDICTABLE>
    c238:	0026f808 	eoreq	pc, r6, r8, lsl #16
    c23c:	f3000408 	vshl.u8	d0, d8, d0
    c240:	009f5001 	addseq	r5, pc, r1
	...
    c24c:	bc000000 	stclt	0, cr0, [r0], {-0}
    c250:	c4080026 	strgt	r0, [r8], #-38	; 0xffffffda
    c254:	01080026 	tsteq	r8, r6, lsr #32
    c258:	26c45100 	strbcs	r5, [r4], r0, lsl #2
    c25c:	26f10800 	ldrbtcs	r0, [r1], r0, lsl #16
    c260:	00010800 	andeq	r0, r1, r0, lsl #16
    c264:	00000050 	andeq	r0, r0, r0, asr r0
	...
    c270:	0026bc00 	eoreq	fp, r6, r0, lsl #24
    c274:	0026f108 	eoreq	pc, r6, r8, lsl #2
    c278:	52000108 	andpl	r0, r0, #8, 2
    c27c:	080026f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, sl, sp}
    c280:	080026f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, sp}
    c284:	01f30004 	mvnseq	r0, r4
    c288:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    c294:	080026c4 	stmdaeq	r0, {r2, r6, r7, r9, sl, sp}
    c298:	080026de 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, r9, sl, sp}
    c29c:	00510001 	subseq	r0, r1, r1
	...
    c2ac:	02000000 	andeq	r0, r0, #0
    c2b0:	00007d00 	andeq	r7, r0, r0, lsl #26
    c2b4:	00000000 	andeq	r0, r0, r0
    c2b8:	02000000 	andeq	r0, r0, #0
    c2bc:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    c2d4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    c2e0:	00530001 	subseq	r0, r3, r1
    c2e4:	00000000 	andeq	r0, r0, r0
    c2e8:	04000000 	streq	r0, [r0], #-0
    c2ec:	5001f300 	andpl	pc, r1, r0, lsl #6
    c2f0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    c304:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    c310:	01f30004 	mvnseq	r0, r4
    c314:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    c328:	00010000 	andeq	r0, r1, r0
    c32c:	00000052 	andeq	r0, r0, r2, asr r0
    c330:	00000000 	andeq	r0, r0, r0
    c334:	f3000400 	vshl.u8	d0, d0, d0
    c338:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    c34c:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    c358:	080026a0 	stmdaeq	r0, {r5, r7, r9, sl, sp}
    c35c:	080026a2 	stmdaeq	r0, {r1, r5, r7, r9, sl, sp}
    c360:	007d0002 	rsbseq	r0, sp, r2
    c364:	080026a2 	stmdaeq	r0, {r1, r5, r7, r9, sl, sp}
    c368:	080026bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, sp}
    c36c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    c37c:	080026a0 	stmdaeq	r0, {r5, r7, r9, sl, sp}
    c380:	080026ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r9, sl, sp}
    c384:	ad500001 	ldclge	0, cr0, [r0, #-4]
    c388:	bc080026 	stclt	0, cr0, [r8], {38}	; 0x26
    c38c:	04080026 	streq	r0, [r8], #-38	; 0xffffffda
    c390:	5001f300 	andpl	pc, r1, r0, lsl #6
    c394:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    c3a0:	a0000000 	andge	r0, r0, r0
    c3a4:	a8080026 	stmdage	r8, {r1, r2, r5}
    c3a8:	01080026 	tsteq	r8, r6, lsr #32
    c3ac:	26a85100 	strtcs	r5, [r8], r0, lsl #2
    c3b0:	26b80800 	ldrtcs	r0, [r8], r0, lsl #16
    c3b4:	00010800 	andeq	r0, r1, r0, lsl #16
    c3b8:	0026b854 	eoreq	fp, r6, r4, asr r8
    c3bc:	0026bc08 	eoreq	fp, r6, r8, lsl #24
    c3c0:	f3000408 	vshl.u8	d0, d8, d0
    c3c4:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    c3d4:	00263400 	eoreq	r3, r6, r0, lsl #8
    c3d8:	00267c08 	eoreq	r7, r6, r8, lsl #24
    c3dc:	53000108 	movwpl	r0, #264	; 0x108
    c3e0:	0800267c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, sl, sp}
    c3e4:	0800267e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r9, sl, sp}
    c3e8:	d4030005 	strle	r0, [r3], #-5
    c3ec:	7e200086 	cdpvc	0, 2, cr0, cr0, cr6, {4}
    c3f0:	a0080026 	andge	r0, r8, r6, lsr #32
    c3f4:	01080026 	tsteq	r8, r6, lsr #32
    c3f8:	00005300 	andeq	r5, r0, r0, lsl #6
    c3fc:	00000000 	andeq	r0, r0, r0
    c400:	00020000 	andeq	r0, r2, r0
    c404:	00000000 	andeq	r0, r0, r0
    c408:	08002646 	stmdaeq	r0, {r1, r2, r6, r9, sl, sp}
    c40c:	0800267c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, sl, sp}
    c410:	0073000b 	rsbseq	r0, r3, fp
    c414:	38031e4c 	stmdacc	r3, {r2, r3, r6, r9, sl, fp, ip}
    c418:	22200082 	eorcs	r0, r0, #130	; 0x82
    c41c:	00267c9f 	mlaeq	r6, pc, ip, r7	; <UNPREDICTABLE>
    c420:	00267e08 	eoreq	r7, r6, r8, lsl #28
    c424:	03000f08 	movweq	r0, #3848	; 0xf08
    c428:	200086d4 	ldrdcs	r8, [r0], -r4
    c42c:	031e4c06 	tsteq	lr, #1536	; 0x600
    c430:	20008238 	andcs	r8, r0, r8, lsr r2
    c434:	267e9f22 	ldrbtcs	r9, [lr], -r2, lsr #30
    c438:	26a00800 	strtcs	r0, [r0], r0, lsl #16
    c43c:	000b0800 	andeq	r0, fp, r0, lsl #16
    c440:	1e4c0073 	mcrne	0, 2, r0, cr12, cr3, {3}
    c444:	00823803 	addeq	r3, r2, r3, lsl #16
    c448:	009f2220 	addseq	r2, pc, r0, lsr #4
	...
    c458:	02000000 	andeq	r0, r0, #0
    c45c:	00007d00 	andeq	r7, r0, r0, lsl #26
    c460:	00000000 	andeq	r0, r0, r0
    c464:	02000000 	andeq	r0, r0, #0
    c468:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    c47c:	01000000 	mrseq	r0, (UNDEF: 0)
    c480:	00005000 	andeq	r5, r0, r0
    c484:	00000000 	andeq	r0, r0, r0
    c488:	00010000 	andeq	r0, r1, r0
    c48c:	00000050 	andeq	r0, r0, r0, asr r0
	...
    c4a0:	01000000 	mrseq	r0, (UNDEF: 0)
    c4a4:	00005100 	andeq	r5, r0, r0, lsl #2
    c4a8:	00000000 	andeq	r0, r0, r0
    c4ac:	00040000 	andeq	r0, r4, r0
    c4b0:	9f5101f3 	svcls	0x005101f3
	...
    c4bc:	00510001 	subseq	r0, r1, r1
	...
    c4d0:	01000000 	mrseq	r0, (UNDEF: 0)
    c4d4:	00005300 	andeq	r5, r0, r0, lsl #6
    c4d8:	00000000 	andeq	r0, r0, r0
    c4dc:	00010000 	andeq	r0, r1, r0
    c4e0:	00000053 	andeq	r0, r0, r3, asr r0
	...
    c4f0:	02000000 	andeq	r0, r0, #0
    c4f4:	009f3000 	addseq	r3, pc, r0
	...
    c508:	01000000 	mrseq	r0, (UNDEF: 0)
    c50c:	00005000 	andeq	r5, r0, r0
    c510:	00000000 	andeq	r0, r0, r0
    c514:	00010000 	andeq	r0, r1, r0
    c518:	00000050 	andeq	r0, r0, r0, asr r0
	...
    c528:	01000000 	mrseq	r0, (UNDEF: 0)
    c52c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    c540:	00500001 	subseq	r0, r0, r1
    c544:	00000000 	andeq	r0, r0, r0
    c548:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    c554:	52000100 	andpl	r0, r0, #0, 2
	...
    c560:	00000100 	andeq	r0, r0, r0, lsl #2
    c564:	00000000 	andeq	r0, r0, r0
    c568:	00010000 	andeq	r0, r1, r0
    c56c:	00000052 	andeq	r0, r0, r2, asr r0
    c570:	00000000 	andeq	r0, r0, r0
    c574:	00000100 	andeq	r0, r0, r0, lsl #2
    c578:	00000000 	andeq	r0, r0, r0
    c57c:	01000000 	mrseq	r0, (UNDEF: 0)
    c580:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    c590:	00020000 	andeq	r0, r2, r0
    c594:	0000007d 	andeq	r0, r0, sp, ror r0
    c598:	00000000 	andeq	r0, r0, r0
    c59c:	00020000 	andeq	r0, r2, r0
    c5a0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    c5b4:	00010000 	andeq	r0, r1, r0
    c5b8:	00000050 	andeq	r0, r0, r0, asr r0
    c5bc:	00000000 	andeq	r0, r0, r0
    c5c0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    c5d4:	00010000 	andeq	r0, r1, r0
    c5d8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    c5e8:	01000000 	mrseq	r0, (UNDEF: 0)
    c5ec:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    c5fc:	00020000 	andeq	r0, r2, r0
    c600:	0000007d 	andeq	r0, r0, sp, ror r0
    c604:	00000000 	andeq	r0, r0, r0
    c608:	00020000 	andeq	r0, r2, r0
    c60c:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    c620:	00010000 	andeq	r0, r1, r0
    c624:	00000050 	andeq	r0, r0, r0, asr r0
    c628:	00000000 	andeq	r0, r0, r0
    c62c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    c644:	00010000 	andeq	r0, r1, r0
    c648:	00000051 	andeq	r0, r0, r1, asr r0
    c64c:	00000000 	andeq	r0, r0, r0
    c650:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    c65c:	00510001 	subseq	r0, r1, r1
	...
    c670:	01000000 	mrseq	r0, (UNDEF: 0)
    c674:	00005500 	andeq	r5, r0, r0, lsl #10
    c678:	00000000 	andeq	r0, r0, r0
    c67c:	00010000 	andeq	r0, r1, r0
    c680:	00000055 	andeq	r0, r0, r5, asr r0
    c684:	00000000 	andeq	r0, r0, r0
    c688:	00230000 	eoreq	r0, r3, r0
    c68c:	00230c08 	eoreq	r0, r3, r8, lsl #24
    c690:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    c694:	00230c00 	eoreq	r0, r3, r0, lsl #24
    c698:	00242408 	eoreq	r2, r4, r8, lsl #8
    c69c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    c6a0:	00242410 	eoreq	r2, r4, r0, lsl r4
    c6a4:	00243008 	eoreq	r3, r4, r8
    c6a8:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    c6ac:	00243000 	eoreq	r3, r4, r0
    c6b0:	00246008 	eoreq	r6, r4, r8
    c6b4:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    c6b8:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    c6c4:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    c6c8:	6a080023 	bvs	20c75c <_Min_Heap_Size+0x20bf5c>
    c6cc:	01080023 	tsteq	r8, r3, lsr #32
    c6d0:	236e5300 	cmncs	lr, #0, 6
    c6d4:	23c40800 	biccs	r0, r4, #0, 16
    c6d8:	00010800 	andeq	r0, r1, r0, lsl #16
    c6dc:	0023e053 	eoreq	lr, r3, r3, asr r0
    c6e0:	00242408 	eoreq	r2, r4, r8, lsl #8
    c6e4:	53000108 	movwpl	r0, #264	; 0x108
	...
    c6f4:	23680000 	cmncs	r8, #0
    c6f8:	236e0800 	cmncs	lr, #0, 16
    c6fc:	00010800 	andeq	r0, r1, r0, lsl #16
    c700:	0023e252 	eoreq	lr, r3, r2, asr r2
    c704:	0023e808 	eoreq	lr, r3, r8, lsl #16
    c708:	52000108 	andpl	r0, r0, #8, 2
    c70c:	080023e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sp}
    c710:	080023ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, r9, sp}
    c714:	04730002 	ldrbteq	r0, [r3], #-2
	...
    c720:	00000004 	andeq	r0, r0, r4
	...
    c72c:	23000000 	movwcs	r0, #0
    c730:	23200800 	nopcs	{0}	; <UNPREDICTABLE>
    c734:	00020800 	andeq	r0, r2, r0, lsl #16
    c738:	23209f30 			; <UNDEFINED> instruction: 0x23209f30
    c73c:	233e0800 	teqcs	lr, #0, 16
    c740:	00010800 	andeq	r0, r1, r0, lsl #16
    c744:	00234050 	eoreq	r4, r3, r0, asr r0
    c748:	00235e08 	eoreq	r5, r3, r8, lsl #28
    c74c:	30000208 	andcc	r0, r0, r8, lsl #4
    c750:	00235e9f 	mlaeq	r3, pc, lr, r5	; <UNPREDICTABLE>
    c754:	00242408 	eoreq	r2, r4, r8, lsl #8
    c758:	50000108 	andpl	r0, r0, r8, lsl #2
    c75c:	08002424 	stmdaeq	r0, {r2, r5, sl, sp}
    c760:	08002430 	stmdaeq	r0, {r4, r5, sl, sp}
    c764:	9f300002 	svcls	0x00300002
    c768:	08002430 	stmdaeq	r0, {r4, r5, sl, sp}
    c76c:	08002432 	stmdaeq	r0, {r1, r4, r5, sl, sp}
    c770:	32500001 	subscc	r0, r0, #1
    c774:	60080024 	andvs	r0, r8, r4, lsr #32
    c778:	02080024 	andeq	r0, r8, #36	; 0x24
    c77c:	009f3100 	addseq	r3, pc, r0, lsl #2
	...
    c788:	12000000 	andne	r0, r0, #0
    c78c:	24080023 	strcs	r0, [r8], #-35	; 0xffffffdd
    c790:	01080024 	tsteq	r8, r4, lsr #32
    c794:	24305400 	ldrtcs	r5, [r0], #-1024	; 0xfffffc00
    c798:	24600800 	strbtcs	r0, [r0], #-2048	; 0xfffff800
    c79c:	00010800 	andeq	r0, r1, r0, lsl #16
    c7a0:	00000054 	andeq	r0, r0, r4, asr r0
    c7a4:	00000000 	andeq	r0, r0, r0
    c7a8:	44000000 	strmi	r0, [r0], #-0
    c7ac:	57080023 	strpl	r0, [r8, -r3, lsr #32]
    c7b0:	01080023 	tsteq	r8, r3, lsr #32
    c7b4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    c7c0:	236e0000 	cmncs	lr, #0
    c7c4:	23740800 	cmncs	r4, #0, 16
    c7c8:	00010800 	andeq	r0, r1, r0, lsl #16
    c7cc:	0023e852 	eoreq	lr, r3, r2, asr r8
    c7d0:	00240608 	eoreq	r0, r4, r8, lsl #12
    c7d4:	52000108 	andpl	r0, r0, #8, 2
	...
    c7e0:	00020100 	andeq	r0, r2, r0, lsl #2
    c7e4:	08002374 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sp}
    c7e8:	0800237e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, sp}
    c7ec:	0a520001 	beq	148c7f8 <_Min_Heap_Size+0x148bff8>
    c7f0:	24080024 	strcs	r0, [r8], #-36	; 0xffffffdc
    c7f4:	01080024 	tsteq	r8, r4, lsr #32
    c7f8:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    c804:	0800239c 	stmdaeq	r0, {r2, r3, r4, r7, r8, r9, sp}
    c808:	080023a8 	stmdaeq	r0, {r3, r5, r7, r8, r9, sp}
    c80c:	00520001 	subseq	r0, r2, r1
	...
    c81c:	02000000 	andeq	r0, r0, #0
    c820:	00007d00 	andeq	r7, r0, r0, lsl #26
    c824:	00000000 	andeq	r0, r0, r0
    c828:	02000000 	andeq	r0, r0, #0
    c82c:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    c84c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    c858:	00540001 	subseq	r0, r4, r1
    c85c:	00000000 	andeq	r0, r0, r0
    c860:	04000000 	streq	r0, [r0], #-0
    c864:	5001f300 	andpl	pc, r1, r0, lsl #6
    c868:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    c86c:	00000000 	andeq	r0, r0, r0
    c870:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    c87c:	7c750003 	ldclvc	0, cr0, [r5], #-12
    c880:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    c884:	00000000 	andeq	r0, r0, r0
    c888:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    c894:	7c750003 	ldclvc	0, cr0, [r5], #-12
    c898:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    c89c:	00000000 	andeq	r0, r0, r0
    c8a0:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    c8b4:	01000000 	mrseq	r0, (UNDEF: 0)
    c8b8:	00005000 	andeq	r5, r0, r0
    c8bc:	00000000 	andeq	r0, r0, r0
    c8c0:	00010000 	andeq	r0, r1, r0
    c8c4:	00000054 	andeq	r0, r0, r4, asr r0
    c8c8:	00000000 	andeq	r0, r0, r0
    c8cc:	f3000400 	vshl.u8	d0, d0, d0
    c8d0:	009f5001 	addseq	r5, pc, r1
    c8d4:	00000000 	andeq	r0, r0, r0
    c8d8:	01000000 	mrseq	r0, (UNDEF: 0)
    c8dc:	00005400 	andeq	r5, r0, r0, lsl #8
    c8e0:	00000000 	andeq	r0, r0, r0
    c8e4:	00030000 	andeq	r0, r3, r0
    c8e8:	009f7c75 	addseq	r7, pc, r5, ror ip	; <UNPREDICTABLE>
    c8ec:	00000000 	andeq	r0, r0, r0
    c8f0:	01000000 	mrseq	r0, (UNDEF: 0)
    c8f4:	00005400 	andeq	r5, r0, r0, lsl #8
    c8f8:	00000000 	andeq	r0, r0, r0
    c8fc:	00030000 	andeq	r0, r3, r0
    c900:	009f7c75 	addseq	r7, pc, r5, ror ip	; <UNPREDICTABLE>
	...
    c90c:	00000100 	andeq	r0, r0, r0, lsl #2
    c910:	00000000 	andeq	r0, r0, r0
    c914:	01000000 	mrseq	r0, (UNDEF: 0)
    c918:	00005400 	andeq	r5, r0, r0, lsl #8
    c91c:	00000000 	andeq	r0, r0, r0
    c920:	00020000 	andeq	r0, r2, r0
    c924:	00009f31 	andeq	r9, r0, r1, lsr pc
	...
    c938:	00530001 	subseq	r0, r3, r1
	...
    c948:	02000000 	andeq	r0, r0, #0
    c94c:	00007d00 	andeq	r7, r0, r0, lsl #26
    c950:	00000000 	andeq	r0, r0, r0
    c954:	02000000 	andeq	r0, r0, #0
    c958:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    c970:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    c97c:	00540001 	subseq	r0, r4, r1
    c980:	00000000 	andeq	r0, r0, r0
    c984:	04000000 	streq	r0, [r0], #-0
    c988:	5001f300 	andpl	pc, r1, r0, lsl #6
    c98c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    c99c:	01000000 	mrseq	r0, (UNDEF: 0)
    c9a0:	00005000 	andeq	r5, r0, r0
    c9a4:	00000000 	andeq	r0, r0, r0
    c9a8:	22c40000 	sbccs	r0, r4, #0
    c9ac:	22c60800 	sbccs	r0, r6, #0, 16
    c9b0:	00020800 	andeq	r0, r2, r0, lsl #16
    c9b4:	22c6007d 	sbccs	r0, r6, #125	; 0x7d
    c9b8:	23000800 	movwcs	r0, #2048	; 0x800
    c9bc:	00020800 	andeq	r0, r2, r0, lsl #16
    c9c0:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    c9d0:	22c40000 	sbccs	r0, r4, #0
    c9d4:	22d60800 	sbcscs	r0, r6, #0, 16
    c9d8:	00010800 	andeq	r0, r1, r0, lsl #16
    c9dc:	0022d650 	eoreq	sp, r2, r0, asr r6
    c9e0:	0022dc08 	eoreq	sp, r2, r8, lsl #24
    c9e4:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    c9e8:	080022e0 	stmdaeq	r0, {r5, r6, r7, r9, sp}
    c9ec:	080022e3 	stmdaeq	r0, {r0, r1, r5, r6, r7, r9, sp}
    c9f0:	e3500001 	cmp	r0, #1
    c9f4:	00080022 	andeq	r0, r8, r2, lsr #32
    c9f8:	01080023 	tsteq	r8, r3, lsr #32
    c9fc:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    ca08:	22ce0000 	sbccs	r0, lr, #0
    ca0c:	22d60800 	sbcscs	r0, r6, #0, 16
    ca10:	00010800 	andeq	r0, r1, r0, lsl #16
    ca14:	0022e053 	eoreq	lr, r2, r3, asr r0
    ca18:	0022e308 	eoreq	lr, r2, r8, lsl #6
    ca1c:	53000108 	movwpl	r0, #264	; 0x108
	...
    ca34:	00500001 	subseq	r0, r0, r1
    ca38:	00000000 	andeq	r0, r0, r0
    ca3c:	04000000 	streq	r0, [r0], #-0
    ca40:	5001f300 	andpl	pc, r1, r0, lsl #6
    ca44:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    ca58:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    ca64:	00500001 	subseq	r0, r0, r1
	...
    ca70:	01000100 	mrseq	r0, (UNDEF: 16)
	...
    ca7c:	30000200 	andcc	r0, r0, r0, lsl #4
    ca80:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    ca84:	00000000 	andeq	r0, r0, r0
    ca88:	31000200 	mrscc	r0, R8_usr
    ca8c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    ca90:	00000000 	andeq	r0, r0, r0
    ca94:	31000200 	mrscc	r0, R8_usr
    ca98:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    caac:	53000100 	movwpl	r0, #256	; 0x100
	...
    cab8:	00530001 	subseq	r0, r3, r1
	...
    cac8:	02000000 	andeq	r0, r0, #0
    cacc:	00007d00 	andeq	r7, r0, r0, lsl #26
    cad0:	00000000 	andeq	r0, r0, r0
    cad4:	02000000 	andeq	r0, r0, #0
    cad8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    caec:	01000000 	mrseq	r0, (UNDEF: 0)
    caf0:	00005000 	andeq	r5, r0, r0
    caf4:	00000000 	andeq	r0, r0, r0
    caf8:	00010000 	andeq	r0, r1, r0
    cafc:	00000056 	andeq	r0, r0, r6, asr r0
    cb00:	00000000 	andeq	r0, r0, r0
    cb04:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    cb10:	35000200 	strcc	r0, [r0, #-512]	; 0xfffffe00
    cb14:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    cb18:	00000000 	andeq	r0, r0, r0
    cb1c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    cb44:	00010000 	andeq	r0, r1, r0
    cb48:	00000050 	andeq	r0, r0, r0, asr r0
    cb4c:	00000000 	andeq	r0, r0, r0
    cb50:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    cb5c:	00500001 	subseq	r0, r0, r1
    cb60:	00000000 	andeq	r0, r0, r0
    cb64:	01000000 	mrseq	r0, (UNDEF: 0)
    cb68:	00005500 	andeq	r5, r0, r0, lsl #10
    cb6c:	00000000 	andeq	r0, r0, r0
    cb70:	00010000 	andeq	r0, r1, r0
    cb74:	00000050 	andeq	r0, r0, r0, asr r0
    cb78:	00000000 	andeq	r0, r0, r0
    cb7c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    cb88:	00500001 	subseq	r0, r0, r1
    cb8c:	00000000 	andeq	r0, r0, r0
    cb90:	01000000 	mrseq	r0, (UNDEF: 0)
    cb94:	00005500 	andeq	r5, r0, r0, lsl #10
    cb98:	00000000 	andeq	r0, r0, r0
    cb9c:	00010000 	andeq	r0, r1, r0
    cba0:	00000050 	andeq	r0, r0, r0, asr r0
    cba4:	00000000 	andeq	r0, r0, r0
    cba8:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    cbb4:	00500001 	subseq	r0, r0, r1
	...
    cbc4:	02000000 	andeq	r0, r0, #0
    cbc8:	00007d00 	andeq	r7, r0, r0, lsl #26
    cbcc:	00000000 	andeq	r0, r0, r0
    cbd0:	02000000 	andeq	r0, r0, #0
    cbd4:	000c7d00 	andeq	r7, ip, r0, lsl #26
	...
    cbec:	01000000 	mrseq	r0, (UNDEF: 0)
    cbf0:	00005000 	andeq	r5, r0, r0
    cbf4:	00000000 	andeq	r0, r0, r0
    cbf8:	00030000 	andeq	r0, r3, r0
    cbfc:	009f7875 	addseq	r7, pc, r5, ror r8	; <UNPREDICTABLE>
    cc00:	00000000 	andeq	r0, r0, r0
    cc04:	01000000 	mrseq	r0, (UNDEF: 0)
    cc08:	00005000 	andeq	r5, r0, r0
    cc0c:	00000000 	andeq	r0, r0, r0
    cc10:	00030000 	andeq	r0, r3, r0
    cc14:	009f7875 	addseq	r7, pc, r5, ror r8	; <UNPREDICTABLE>
	...
    cc24:	00000202 	andeq	r0, r0, r2, lsl #4
    cc28:	00000000 	andeq	r0, r0, r0
    cc2c:	01000000 	mrseq	r0, (UNDEF: 0)
    cc30:	00005100 	andeq	r5, r0, r0, lsl #2
    cc34:	00000000 	andeq	r0, r0, r0
    cc38:	00010000 	andeq	r0, r1, r0
    cc3c:	0000005e 	andeq	r0, r0, lr, asr r0
    cc40:	00000000 	andeq	r0, r0, r0
    cc44:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    cc50:	01f30004 	mvnseq	r0, r4
    cc54:	00009f51 	andeq	r9, r0, r1, asr pc
    cc58:	00000000 	andeq	r0, r0, r0
    cc5c:	00010000 	andeq	r0, r1, r0
    cc60:	02000000 	andeq	r0, r0, #0
	...
    cc6c:	9f300002 	svcls	0x00300002
	...
    cc78:	00500001 	subseq	r0, r0, r1
    cc7c:	00000000 	andeq	r0, r0, r0
    cc80:	02000000 	andeq	r0, r0, #0
    cc84:	009f3000 	addseq	r3, pc, r0
    cc88:	00000000 	andeq	r0, r0, r0
    cc8c:	02000000 	andeq	r0, r0, #0
    cc90:	00000000 	andeq	r0, r0, r0
    cc94:	00020000 	andeq	r0, r2, r0
    cc98:	00000000 	andeq	r0, r0, r0
    cc9c:	02000000 	andeq	r0, r0, #0
    cca0:	009f3000 	addseq	r3, pc, r0
    cca4:	00000000 	andeq	r0, r0, r0
    cca8:	01000000 	mrseq	r0, (UNDEF: 0)
    ccac:	00005100 	andeq	r5, r0, r0, lsl #2
    ccb0:	00000000 	andeq	r0, r0, r0
    ccb4:	00010000 	andeq	r0, r1, r0
    ccb8:	00000051 	andeq	r0, r0, r1, asr r0
    ccbc:	00000000 	andeq	r0, r0, r0
    ccc0:	30000200 	andcc	r0, r0, r0, lsl #4
    ccc4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    ccc8:	00000000 	andeq	r0, r0, r0
    cccc:	02000000 	andeq	r0, r0, #0
	...
    ccd8:	01000000 	mrseq	r0, (UNDEF: 0)
    ccdc:	00005300 	andeq	r5, r0, r0, lsl #6
    cce0:	00000000 	andeq	r0, r0, r0
    cce4:	00020000 	andeq	r0, r2, r0
    cce8:	00009f30 	andeq	r9, r0, r0, lsr pc
    ccec:	00000000 	andeq	r0, r0, r0
    ccf0:	00010000 	andeq	r0, r1, r0
    ccf4:	00000053 	andeq	r0, r0, r3, asr r0
	...
    cd08:	52000100 	andpl	r0, r0, #0, 2
	...
    cd14:	00520001 	subseq	r0, r2, r1
	...
    cd20:	00000100 	andeq	r0, r0, r0, lsl #2
    cd24:	00000000 	andeq	r0, r0, r0
    cd28:	02000000 	andeq	r0, r0, #0
    cd2c:	009f3000 	addseq	r3, pc, r0
    cd30:	00000000 	andeq	r0, r0, r0
    cd34:	02000000 	andeq	r0, r0, #0
    cd38:	009f3000 	addseq	r3, pc, r0
	...
    cd4c:	03000000 	movweq	r0, #0
    cd50:	9f087000 	svcls	0x00087000
	...
    cd5c:	00550001 	subseq	r0, r5, r1
	...
    cd70:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    cd88:	00500001 	subseq	r0, r0, r1
    cd8c:	00000000 	andeq	r0, r0, r0
    cd90:	01000000 	mrseq	r0, (UNDEF: 0)
    cd94:	00005000 	andeq	r5, r0, r0
	...
    cda8:	00530001 	subseq	r0, r3, r1
	...
    cdbc:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    cdc8:	22b00000 	adcscs	r0, r0, #0
    cdcc:	22b80800 	adcscs	r0, r8, #0, 16
    cdd0:	00010800 	andeq	r0, r1, r0, lsl #16
    cdd4:	00000050 	andeq	r0, r0, r0, asr r0
    cdd8:	00000000 	andeq	r0, r0, r0
    cddc:	00246000 	eoreq	r6, r4, r0
    cde0:	00246208 	eoreq	r6, r4, r8, lsl #4
    cde4:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    cde8:	00246200 	eoreq	r6, r4, r0, lsl #4
    cdec:	0025a008 	eoreq	sl, r5, r8
    cdf0:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    cdf4:	00000008 	andeq	r0, r0, r8
    cdf8:	00000000 	andeq	r0, r0, r0
    cdfc:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    ce08:	00246200 	eoreq	r6, r4, r0, lsl #4
    ce0c:	00247e08 	eoreq	r7, r4, r8, lsl #28
    ce10:	30000208 	andcc	r0, r0, r8, lsl #4
    ce14:	00247e9f 	mlaeq	r4, pc, lr, r7	; <UNPREDICTABLE>
    ce18:	00248a08 	eoreq	r8, r4, r8, lsl #20
    ce1c:	53000108 	movwpl	r0, #264	; 0x108
    ce20:	0800248a 	stmdaeq	r0, {r1, r3, r7, sl, sp}
    ce24:	0800248c 	stmdaeq	r0, {r2, r3, r7, sl, sp}
    ce28:	9f300002 	svcls	0x00300002
    ce2c:	0800248c 	stmdaeq	r0, {r2, r3, r7, sl, sp}
    ce30:	08002496 	stmdaeq	r0, {r1, r2, r4, r7, sl, sp}
    ce34:	9a530001 	bls	14cce40 <_Min_Heap_Size+0x14cc640>
    ce38:	2f080024 	svccs	0x00080024
    ce3c:	01080025 	tsteq	r8, r5, lsr #32
    ce40:	25745300 	ldrbcs	r5, [r4, #-768]!	; 0xfffffd00
    ce44:	25760800 	ldrbcs	r0, [r6, #-2048]!	; 0xfffff800
    ce48:	00020800 	andeq	r0, r2, r0, lsl #16
    ce4c:	00009f30 	andeq	r9, r0, r0, lsr pc
    ce50:	00000000 	andeq	r0, r0, r0
    ce54:	01020000 	mrseq	r0, (UNDEF: 2)
    ce58:	00000001 	andeq	r0, r0, r1
    ce5c:	00000000 	andeq	r0, r0, r0
    ce60:	08002462 	stmdaeq	r0, {r1, r5, r6, sl, sp}
    ce64:	0800253c 	stmdaeq	r0, {r2, r3, r4, r5, r8, sl, sp}
    ce68:	9f300002 	svcls	0x00300002
    ce6c:	0800253c 	stmdaeq	r0, {r2, r3, r4, r5, r8, sl, sp}
    ce70:	08002558 	stmdaeq	r0, {r3, r4, r6, r8, sl, sp}
    ce74:	9f310002 	svcls	0x00310002
    ce78:	08002558 	stmdaeq	r0, {r3, r4, r6, r8, sl, sp}
    ce7c:	08002576 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, sp}
    ce80:	9f300002 	svcls	0x00300002
    ce84:	08002576 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, sp}
    ce88:	0800257e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, sl, sp}
    ce8c:	7e540001 	cdpvc	0, 5, cr0, cr4, cr1, {0}
    ce90:	a0080025 	andge	r0, r8, r5, lsr #32
    ce94:	01080025 	tsteq	r8, r5, lsr #32
    ce98:	00005000 	andeq	r5, r0, r0
	...
    cea4:	247e0000 	ldrbtcs	r0, [lr], #-0
    cea8:	24840800 	strcs	r0, [r4], #2048	; 0x800
    ceac:	00010800 	andeq	r0, r1, r0, lsl #16
    ceb0:	00249c52 	eoreq	r9, r4, r2, asr ip
    ceb4:	0024bc08 	eoreq	fp, r4, r8, lsl #24
    ceb8:	52000108 	andpl	r0, r0, #8, 2
	...
    cec8:	08002484 	stmdaeq	r0, {r2, r7, sl, sp}
    cecc:	0800248a 	stmdaeq	r0, {r1, r3, r7, sl, sp}
    ced0:	bc520001 	mrrclt	0, 0, r0, r2, cr1
    ced4:	da080024 	ble	20cf6c <_Min_Heap_Size+0x20c76c>
    ced8:	01080024 	tsteq	r8, r4, lsr #32
    cedc:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    cee8:	080024f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, sl, sp}
    ceec:	080024fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, sl, sp}
    cef0:	00520001 	subseq	r0, r2, r1
	...
    cefc:	02020000 	andeq	r0, r2, #0
    cf00:	34000000 	strcc	r0, [r0], #-0
    cf04:	3a080025 	bcc	20cfa0 <_Min_Heap_Size+0x20c7a0>
    cf08:	01080025 	tsteq	r8, r5, lsr #32
    cf0c:	25585400 	ldrbcs	r5, [r8, #-1024]	; 0xfffffc00
    cf10:	25580800 	ldrbcs	r0, [r8, #-2048]	; 0xfffff800
    cf14:	00010800 	andeq	r0, r1, r0, lsl #16
    cf18:	00255854 	eoreq	r5, r5, r4, asr r8
    cf1c:	00255a08 	eoreq	r5, r5, r8, lsl #20
    cf20:	74000308 	strvc	r0, [r0], #-776	; 0xfffffcf8
    cf24:	255a9f7f 	ldrbcs	r9, [sl, #-3967]	; 0xfffff081
    cf28:	25740800 	ldrbcs	r0, [r4, #-2048]!	; 0xfffff800
    cf2c:	00010800 	andeq	r0, r1, r0, lsl #16
    cf30:	00000054 	andeq	r0, r0, r4, asr r0
	...
    cf3c:	001e6e01 	andseq	r6, lr, r1, lsl #28
    cf40:	001e7608 	andseq	r7, lr, r8, lsl #12
    cf44:	50000108 	andpl	r0, r0, r8, lsl #2
    cf48:	08001e78 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, fp, ip}
    cf4c:	08001e78 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, fp, ip}
    cf50:	9f300002 	svcls	0x00300002
	...
    cf5c:	00000003 	andeq	r0, r0, r3
    cf60:	1e500000 	cdpne	0, 5, cr0, cr0, cr0, {0}
    cf64:	1e540800 	cdpne	8, 5, cr0, cr4, cr0, {0}
    cf68:	00020800 	andeq	r0, r2, r0, lsl #16
    cf6c:	1e589f30 	mrcne	15, 2, r9, cr8, cr0, {1}
    cf70:	1e6c0800 	cdpne	8, 6, cr0, cr12, cr0, {0}
    cf74:	00010800 	andeq	r0, r1, r0, lsl #16
    cf78:	001e7653 	andseq	r7, lr, r3, asr r6
    cf7c:	001e9008 	andseq	r9, lr, r8
    cf80:	53000108 	movwpl	r0, #264	; 0x108
	...
    cf94:	007d0002 	rsbseq	r0, sp, r2
	...
    cfa0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    cfac:	00000001 	andeq	r0, r0, r1
	...
    cfb8:	9f300002 	svcls	0x00300002
	...
    cfc4:	00540001 	subseq	r0, r4, r1
    cfc8:	00000000 	andeq	r0, r0, r0
    cfcc:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    cfd0:	ea080029 	b	20d07c <_Min_Heap_Size+0x20c87c>
    cfd4:	02080029 	andeq	r0, r8, #41	; 0x29
    cfd8:	ea007d00 	b	2c3e0 <_Min_Heap_Size+0x2bbe0>
    cfdc:	3c080029 	stccc	0, cr0, [r8], {41}	; 0x29
    cfe0:	0208002a 	andeq	r0, r8, #42	; 0x2a
    cfe4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    cff4:	0029ee00 	eoreq	lr, r9, r0, lsl #28
    cff8:	0029f608 	eoreq	pc, r9, r8, lsl #12
    cffc:	50000108 	andpl	r0, r0, r8, lsl #2
    d000:	080029fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, fp, sp}
    d004:	080029ff 	stmdaeq	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, fp, sp}
    d008:	00500001 	subseq	r0, r0, r1
    d00c:	2908002a 	stmdbcs	r8, {r1, r3, r5}
    d010:	0108002a 	tsteq	r8, sl, lsr #32
    d014:	00005000 	andeq	r5, r0, r0
    d018:	00000000 	andeq	r0, r0, r0
    d01c:	297c0000 	ldmdbcs	ip!, {}^	; <UNPREDICTABLE>
    d020:	297e0800 	ldmdbcs	lr!, {fp}^
    d024:	00020800 	andeq	r0, r2, r0, lsl #16
    d028:	297e007d 	ldmdbcs	lr!, {r0, r2, r3, r4, r5, r6}^
    d02c:	29800800 	stmibcs	r0, {fp}
    d030:	00020800 	andeq	r0, r2, r0, lsl #16
    d034:	29800c7d 	stmibcs	r0, {r0, r2, r3, r4, r5, r6, sl, fp}
    d038:	29a40800 	stmibcs	r4!, {fp}
    d03c:	00020800 	andeq	r0, r2, r0, lsl #16
    d040:	29a4307d 	stmibcs	r4!, {r0, r2, r3, r4, r5, r6, ip, sp}
    d044:	29a60800 	stmibcs	r6!, {fp}
    d048:	00020800 	andeq	r0, r2, r0, lsl #16
    d04c:	29a60c7d 	stmibcs	r6!, {r0, r2, r3, r4, r5, r6, sl, fp}
    d050:	29e80800 	stmibcs	r8!, {fp}^
    d054:	00020800 	andeq	r0, r2, r0, lsl #16
    d058:	0000307d 	andeq	r3, r0, sp, ror r0
    d05c:	00000000 	andeq	r0, r0, r0
    d060:	01010000 	mrseq	r0, (UNDEF: 1)
    d064:	00010100 	andeq	r0, r1, r0, lsl #2
    d068:	08002980 	stmdaeq	r0, {r7, r8, fp, sp}
    d06c:	080029a2 	stmdaeq	r0, {r1, r5, r7, r8, fp, sp}
    d070:	9f310002 	svcls	0x00310002
    d074:	080029a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, fp, sp}
    d078:	080029d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, fp, sp}
    d07c:	9f310002 	svcls	0x00310002
    d080:	080029d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, fp, sp}
    d084:	080029e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp, sp}
    d088:	9f300002 	svcls	0x00300002
	...
    d094:	299c0000 	ldmibcs	ip, {}	; <UNPREDICTABLE>
    d098:	29e80800 	stmibcs	r8!, {fp}^
    d09c:	00010800 	andeq	r0, r1, r0, lsl #16
    d0a0:	00000054 	andeq	r0, r0, r4, asr r0
    d0a4:	00000000 	andeq	r0, r0, r0
    d0a8:	80000400 	andhi	r0, r0, r0, lsl #8
    d0ac:	9c080029 	stcls	0, cr0, [r8], {41}	; 0x29
    d0b0:	02080029 	andeq	r0, r8, #41	; 0x29
    d0b4:	009f3000 	addseq	r3, pc, r0
    d0b8:	00000000 	andeq	r0, r0, r0
    d0bc:	06000000 	streq	r0, [r0], -r0
    d0c0:	80000000 	andhi	r0, r0, r0
    d0c4:	82080029 	andhi	r0, r8, #41	; 0x29
    d0c8:	02080029 	andeq	r0, r8, #41	; 0x29
    d0cc:	829f3000 	addshi	r3, pc, #0
    d0d0:	9c080029 	stcls	0, cr0, [r8], {41}	; 0x29
    d0d4:	01080029 	tsteq	r8, r9, lsr #32
    d0d8:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    d0e8:	00020000 	andeq	r0, r2, r0
    d0ec:	0000007d 	andeq	r0, r0, sp, ror r0
    d0f0:	00000000 	andeq	r0, r0, r0
    d0f4:	00020000 	andeq	r0, r2, r0
    d0f8:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    d10c:	00010000 	andeq	r0, r1, r0
    d110:	00000050 	andeq	r0, r0, r0, asr r0
    d114:	00000000 	andeq	r0, r0, r0
    d118:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    d124:	00010101 	andeq	r0, r1, r1, lsl #2
	...
    d134:	9f300002 	svcls	0x00300002
	...
    d140:	9f310002 	svcls	0x00310002
	...
    d14c:	00550001 	subseq	r0, r5, r1
    d150:	00000000 	andeq	r0, r0, r0
    d154:	02000000 	andeq	r0, r0, #0
    d158:	009f3000 	addseq	r3, pc, r0
    d15c:	00000000 	andeq	r0, r0, r0
    d160:	02000000 	andeq	r0, r0, #0
	...
    d16c:	01000000 	mrseq	r0, (UNDEF: 0)
    d170:	00005000 	andeq	r5, r0, r0
    d174:	00000000 	andeq	r0, r0, r0
    d178:	00010000 	andeq	r0, r1, r0
    d17c:	00000054 	andeq	r0, r0, r4, asr r0
    d180:	00000000 	andeq	r0, r0, r0
    d184:	00000100 	andeq	r0, r0, r0, lsl #2
    d188:	00000000 	andeq	r0, r0, r0
    d18c:	01000000 	mrseq	r0, (UNDEF: 0)
    d190:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    d1a4:	00530001 	subseq	r0, r3, r1
	...
    d1b0:	00000001 	andeq	r0, r0, r1
    d1b4:	00000000 	andeq	r0, r0, r0
    d1b8:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    d1c4:	00000005 	andeq	r0, r0, r5
    d1c8:	00000000 	andeq	r0, r0, r0
    d1cc:	00010000 	andeq	r0, r1, r0
    d1d0:	00000056 	andeq	r0, r0, r6, asr r0
	...
    d1e0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    d1ec:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    d1f0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    d1fc:	00000202 	andeq	r0, r0, r2, lsl #4
	...
    d208:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    d214:	00540001 	subseq	r0, r4, r1
    d218:	00000000 	andeq	r0, r0, r0
    d21c:	04000000 	streq	r0, [r0], #-0
    d220:	5001f300 	andpl	pc, r1, r0, lsl #6
    d224:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    d228:	00000000 	andeq	r0, r0, r0
    d22c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    d238:	02000001 	andeq	r0, r0, #1
    d23c:	00000002 	andeq	r0, r0, r2
	...
    d248:	00500001 	subseq	r0, r0, r1
    d24c:	00000000 	andeq	r0, r0, r0
    d250:	01000000 	mrseq	r0, (UNDEF: 0)
    d254:	00005400 	andeq	r5, r0, r0, lsl #8
    d258:	00000000 	andeq	r0, r0, r0
    d25c:	00040000 	andeq	r0, r4, r0
    d260:	9f5001f3 	svcls	0x005001f3
	...
    d26c:	00540001 	subseq	r0, r4, r1
	...
    d280:	53000100 	movwpl	r0, #256	; 0x100
	...
    d2a8:	00500001 	subseq	r0, r0, r1
    d2ac:	00000000 	andeq	r0, r0, r0
    d2b0:	04000000 	streq	r0, [r0], #-0
    d2b4:	5001f300 	andpl	pc, r1, r0, lsl #6
    d2b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    d2bc:	00000000 	andeq	r0, r0, r0
    d2c0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    d2cc:	01f30004 	mvnseq	r0, r4
    d2d0:	00009f50 	andeq	r9, r0, r0, asr pc
    d2d4:	00000000 	andeq	r0, r0, r0
    d2d8:	00010000 	andeq	r0, r1, r0
    d2dc:	00000050 	andeq	r0, r0, r0, asr r0
    d2e0:	00000000 	andeq	r0, r0, r0
    d2e4:	f3000400 	vshl.u8	d0, d0, d0
    d2e8:	009f5001 	addseq	r5, pc, r1
    d2ec:	00000000 	andeq	r0, r0, r0
    d2f0:	01000000 	mrseq	r0, (UNDEF: 0)
    d2f4:	00005000 	andeq	r5, r0, r0
    d2f8:	00000000 	andeq	r0, r0, r0
    d2fc:	00040000 	andeq	r0, r4, r0
    d300:	9f5001f3 	svcls	0x005001f3
	...
    d30c:	00500001 	subseq	r0, r0, r1
    d310:	00000000 	andeq	r0, r0, r0
    d314:	04000000 	streq	r0, [r0], #-0
    d318:	5001f300 	andpl	pc, r1, r0, lsl #6
    d31c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    d320:	00000000 	andeq	r0, r0, r0
    d324:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    d330:	02000000 	andeq	r0, r0, #0
    d334:	009f3000 	addseq	r3, pc, r0
    d338:	00000000 	andeq	r0, r0, r0
    d33c:	02000000 	andeq	r0, r0, #0
    d340:	009f3000 	addseq	r3, pc, r0
    d344:	00000000 	andeq	r0, r0, r0
    d348:	02000000 	andeq	r0, r0, #0
    d34c:	009f3000 	addseq	r3, pc, r0
    d350:	00000000 	andeq	r0, r0, r0
    d354:	03000000 	movweq	r0, #0
	...
    d370:	01000000 	mrseq	r0, (UNDEF: 0)
    d374:	00005000 	andeq	r5, r0, r0
    d378:	00000000 	andeq	r0, r0, r0
    d37c:	00040000 	andeq	r0, r4, r0
    d380:	9f5001f3 	svcls	0x005001f3
	...
    d38c:	00500001 	subseq	r0, r0, r1
    d390:	00000000 	andeq	r0, r0, r0
    d394:	04000000 	streq	r0, [r0], #-0
    d398:	5001f300 	andpl	pc, r1, r0, lsl #6
    d39c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    d3a0:	00000000 	andeq	r0, r0, r0
    d3a4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    d3b0:	01f30004 	mvnseq	r0, r4
    d3b4:	00009f50 	andeq	r9, r0, r0, asr pc
    d3b8:	00000000 	andeq	r0, r0, r0
    d3bc:	00010000 	andeq	r0, r1, r0
    d3c0:	00000050 	andeq	r0, r0, r0, asr r0
    d3c4:	00000000 	andeq	r0, r0, r0
    d3c8:	f3000400 	vshl.u8	d0, d0, d0
    d3cc:	009f5001 	addseq	r5, pc, r1
    d3d0:	00000000 	andeq	r0, r0, r0
    d3d4:	01000000 	mrseq	r0, (UNDEF: 0)
    d3d8:	00005000 	andeq	r5, r0, r0
    d3dc:	00000000 	andeq	r0, r0, r0
    d3e0:	00040000 	andeq	r0, r4, r0
    d3e4:	9f5001f3 	svcls	0x005001f3
	...
    d3fc:	00530001 	subseq	r0, r3, r1
    d400:	00000000 	andeq	r0, r0, r0
    d404:	01000000 	mrseq	r0, (UNDEF: 0)
    d408:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    d418:	00020000 	andeq	r0, r2, r0
    d41c:	0000007d 	andeq	r0, r0, sp, ror r0
    d420:	00000000 	andeq	r0, r0, r0
    d424:	00020000 	andeq	r0, r2, r0
    d428:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    d440:	00500001 	subseq	r0, r0, r1
    d444:	00000000 	andeq	r0, r0, r0
    d448:	01000000 	mrseq	r0, (UNDEF: 0)
    d44c:	00005400 	andeq	r5, r0, r0, lsl #8
    d450:	00000000 	andeq	r0, r0, r0
    d454:	00010000 	andeq	r0, r1, r0
    d458:	00000054 	andeq	r0, r0, r4, asr r0
	...
    d46c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    d478:	00540001 	subseq	r0, r4, r1
    d47c:	00000000 	andeq	r0, r0, r0
    d480:	02000000 	andeq	r0, r0, #0
	...
    d490:	30000200 	andcc	r0, r0, r0, lsl #4
    d494:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    d498:	00000000 	andeq	r0, r0, r0
    d49c:	53000100 	movwpl	r0, #256	; 0x100
	...
    d4a8:	00530001 	subseq	r0, r3, r1
	...
    d4c0:	53000100 	movwpl	r0, #256	; 0x100
	...
    d4cc:	8c030005 	stchi	0, cr0, [r3], {5}
    d4d0:	00200087 	eoreq	r0, r0, r7, lsl #1
    d4d4:	00000000 	andeq	r0, r0, r0
    d4d8:	01000000 	mrseq	r0, (UNDEF: 0)
    d4dc:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    d4ec:	00020000 	andeq	r0, r2, r0
    d4f0:	0000007d 	andeq	r0, r0, sp, ror r0
    d4f4:	00000000 	andeq	r0, r0, r0
    d4f8:	00020000 	andeq	r0, r2, r0
    d4fc:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    d514:	00500001 	subseq	r0, r0, r1
    d518:	00000000 	andeq	r0, r0, r0
    d51c:	01000000 	mrseq	r0, (UNDEF: 0)
    d520:	00005400 	andeq	r5, r0, r0, lsl #8
    d524:	00000000 	andeq	r0, r0, r0
    d528:	00010000 	andeq	r0, r1, r0
    d52c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    d544:	01000000 	mrseq	r0, (UNDEF: 0)
    d548:	00005100 	andeq	r5, r0, r0, lsl #2
    d54c:	00000000 	andeq	r0, r0, r0
    d550:	00010000 	andeq	r0, r1, r0
    d554:	00000055 	andeq	r0, r0, r5, asr r0
    d558:	00000000 	andeq	r0, r0, r0
    d55c:	74000200 	strvc	r0, [r0], #-512	; 0xfffffe00
    d560:	00000038 	andeq	r0, r0, r8, lsr r0
    d564:	00000000 	andeq	r0, r0, r0
    d568:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    d574:	38740002 	ldmdacc	r4!, {r1}^
	...
    d58c:	00540001 	subseq	r0, r4, r1
    d590:	00000000 	andeq	r0, r0, r0
    d594:	01000000 	mrseq	r0, (UNDEF: 0)
    d598:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    d5b0:	00520001 	subseq	r0, r2, r1
    d5b4:	00000000 	andeq	r0, r0, r0
    d5b8:	01000000 	mrseq	r0, (UNDEF: 0)
    d5bc:	00005200 	andeq	r5, r0, r0, lsl #4
    d5c0:	00000000 	andeq	r0, r0, r0
    d5c4:	00010000 	andeq	r0, r1, r0
    d5c8:	00000052 	andeq	r0, r0, r2, asr r0
	...
    d5d8:	01000000 	mrseq	r0, (UNDEF: 0)
    d5dc:	00005300 	andeq	r5, r0, r0, lsl #6
    d5e0:	00000000 	andeq	r0, r0, r0
    d5e4:	00030000 	andeq	r0, r3, r0
    d5e8:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    d5f4:	00020000 	andeq	r0, r2, r0
    d5f8:	00009f30 	andeq	r9, r0, r0, lsr pc
    d5fc:	00000000 	andeq	r0, r0, r0
    d600:	00010000 	andeq	r0, r1, r0
    d604:	00000056 	andeq	r0, r0, r6, asr r0
    d608:	00000000 	andeq	r0, r0, r0
    d60c:	30000200 	andcc	r0, r0, r0, lsl #4
    d610:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    d614:	00000000 	andeq	r0, r0, r0
    d618:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    d62c:	00010000 	andeq	r0, r1, r0
    d630:	00000053 	andeq	r0, r0, r3, asr r0
	...
    d644:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    d650:	00500001 	subseq	r0, r0, r1
	...
    d664:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    d678:	00010000 	andeq	r0, r1, r0
    d67c:	00000050 	andeq	r0, r0, r0, asr r0
    d680:	00000000 	andeq	r0, r0, r0
    d684:	00000100 	andeq	r0, r0, r0, lsl #2
    d688:	00000000 	andeq	r0, r0, r0
    d68c:	01000000 	mrseq	r0, (UNDEF: 0)
    d690:	00005300 	andeq	r5, r0, r0, lsl #6
    d694:	00000000 	andeq	r0, r0, r0
    d698:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    d6a4:	00530001 	subseq	r0, r3, r1
    d6a8:	00000000 	andeq	r0, r0, r0
    d6ac:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    d6b8:	53000100 	movwpl	r0, #256	; 0x100
	...
    d6cc:	007d0002 	rsbseq	r0, sp, r2
	...
    d6d8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    d6f0:	00010000 	andeq	r0, r1, r0
    d6f4:	00000050 	andeq	r0, r0, r0, asr r0
    d6f8:	00000000 	andeq	r0, r0, r0
    d6fc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    d708:	00540001 	subseq	r0, r4, r1
	...
    d71c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    d730:	00010000 	andeq	r0, r1, r0
    d734:	00000054 	andeq	r0, r0, r4, asr r0
	...
    d748:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    d754:	00500001 	subseq	r0, r0, r1
	...
    d768:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    d77c:	00010000 	andeq	r0, r1, r0
    d780:	00000050 	andeq	r0, r0, r0, asr r0
    d784:	00000000 	andeq	r0, r0, r0
    d788:	00000100 	andeq	r0, r0, r0, lsl #2
    d78c:	00000000 	andeq	r0, r0, r0
    d790:	01000000 	mrseq	r0, (UNDEF: 0)
    d794:	00005300 	andeq	r5, r0, r0, lsl #6
    d798:	00000000 	andeq	r0, r0, r0
    d79c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    d7a8:	00530001 	subseq	r0, r3, r1
    d7ac:	00000000 	andeq	r0, r0, r0
    d7b0:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    d7bc:	53000100 	movwpl	r0, #256	; 0x100
	...
    d7d0:	007d0002 	rsbseq	r0, sp, r2
	...
    d7dc:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    d7f4:	00010000 	andeq	r0, r1, r0
    d7f8:	00000050 	andeq	r0, r0, r0, asr r0
    d7fc:	00000000 	andeq	r0, r0, r0
    d800:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    d80c:	00540001 	subseq	r0, r4, r1
	...
    d820:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    d834:	00010000 	andeq	r0, r1, r0
    d838:	00000054 	andeq	r0, r0, r4, asr r0
	...
    d848:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    d854:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    d858:	00000018 	andeq	r0, r0, r8, lsl r0
    d85c:	00000000 	andeq	r0, r0, r0
    d860:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    d86c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    d870:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    d888:	01000000 	mrseq	r0, (UNDEF: 0)
    d88c:	00005000 	andeq	r5, r0, r0
    d890:	00000000 	andeq	r0, r0, r0
    d894:	00010000 	andeq	r0, r1, r0
    d898:	00000054 	andeq	r0, r0, r4, asr r0
    d89c:	00000000 	andeq	r0, r0, r0
    d8a0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    d8ac:	01f30004 	mvnseq	r0, r4
    d8b0:	00009f50 	andeq	r9, r0, r0, asr pc
    d8b4:	00000000 	andeq	r0, r0, r0
    d8b8:	00010000 	andeq	r0, r1, r0
    d8bc:	00000054 	andeq	r0, r0, r4, asr r0
	...
    d8d0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    d8dc:	00500001 	subseq	r0, r0, r1
	...
    d8f0:	01000000 	mrseq	r0, (UNDEF: 0)
    d8f4:	00005500 	andeq	r5, r0, r0, lsl #10
    d8f8:	00000000 	andeq	r0, r0, r0
    d8fc:	00010000 	andeq	r0, r1, r0
    d900:	00000055 	andeq	r0, r0, r5, asr r0
	...
    d914:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    d920:	00560001 	subseq	r0, r6, r1
	...
    d934:	01000000 	mrseq	r0, (UNDEF: 0)
    d938:	00005700 	andeq	r5, r0, r0, lsl #14
    d93c:	00000000 	andeq	r0, r0, r0
    d940:	00010000 	andeq	r0, r1, r0
    d944:	00000057 	andeq	r0, r0, r7, asr r0
	...
    d958:	58000100 	stmdapl	r0, {r8}
	...
    d964:	00580001 	subseq	r0, r8, r1
    d968:	00000000 	andeq	r0, r0, r0
    d96c:	07000000 	streq	r0, [r0, -r0]
	...
    d980:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    d98c:	00540001 	subseq	r0, r4, r1
    d990:	00000000 	andeq	r0, r0, r0
    d994:	01000000 	mrseq	r0, (UNDEF: 0)
    d998:	00005000 	andeq	r5, r0, r0
    d99c:	00000000 	andeq	r0, r0, r0
    d9a0:	00040000 	andeq	r0, r4, r0
    d9a4:	9f5001f3 	svcls	0x005001f3
	...
    d9b0:	00540001 	subseq	r0, r4, r1
	...
    d9c8:	53000100 	movwpl	r0, #256	; 0x100
	...
    d9d4:	00530001 	subseq	r0, r3, r1
    d9d8:	00000000 	andeq	r0, r0, r0
    d9dc:	01000000 	mrseq	r0, (UNDEF: 0)
    d9e0:	00005300 	andeq	r5, r0, r0, lsl #6
    d9e4:	00000000 	andeq	r0, r0, r0
    d9e8:	25a00000 	strcs	r0, [r0, #0]!
    d9ec:	25a20800 	strcs	r0, [r2, #2048]!	; 0x800
    d9f0:	00020800 	andeq	r0, r2, r0, lsl #16
    d9f4:	25a2007d 	strcs	r0, [r2, #125]!	; 0x7d
    d9f8:	25d20800 	ldrbcs	r0, [r2, #2048]	; 0x800
    d9fc:	00020800 	andeq	r0, r2, r0, lsl #16
    da00:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    da10:	25a00000 	strcs	r0, [r0, #0]!
    da14:	25a40800 	strcs	r0, [r4, #2048]!	; 0x800
    da18:	00010800 	andeq	r0, r1, r0, lsl #16
    da1c:	0025a450 	eoreq	sl, r5, r0, asr r4
    da20:	0025ba08 	eoreq	fp, r5, r8, lsl #20
    da24:	f3000408 	vshl.u8	d0, d8, d0
    da28:	ba9f5001 	blt	fe7e1a34 <_estack+0xde7d8094>
    da2c:	bf080025 	svclt	0x00080025
    da30:	01080025 	tsteq	r8, r5, lsr #32
    da34:	25bf5000 	ldrcs	r5, [pc, #0]!	; da3c <_Min_Heap_Size+0xd23c>
    da38:	25d20800 	ldrbcs	r0, [r2, #2048]	; 0x800
    da3c:	00010800 	andeq	r0, r1, r0, lsl #16
    da40:	00000054 	andeq	r0, r0, r4, asr r0
    da44:	00000000 	andeq	r0, r0, r0
    da48:	00000100 	andeq	r0, r0, r0, lsl #2
    da4c:	a2000000 	andge	r0, r0, #0
    da50:	a4080025 	strge	r0, [r8], #-37	; 0xffffffdb
    da54:	02080025 	andeq	r0, r8, #37	; 0x25
    da58:	ba9f3000 	blt	fe7d9a60 <_estack+0xde7d00c0>
    da5c:	cc080025 	stcgt	0, cr0, [r8], {37}	; 0x25
    da60:	02080025 	andeq	r0, r8, #37	; 0x25
    da64:	cc9f3000 	ldcgt	0, cr3, [pc], {0}
    da68:	d2080025 	andle	r0, r8, #37	; 0x25
    da6c:	01080025 	tsteq	r8, r5, lsr #32
    da70:	00005000 	andeq	r5, r0, r0
	...
    da80:	00020000 	andeq	r0, r2, r0
    da84:	0000007d 	andeq	r0, r0, sp, ror r0
    da88:	00000000 	andeq	r0, r0, r0
    da8c:	00020000 	andeq	r0, r2, r0
    da90:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    daa4:	00010000 	andeq	r0, r1, r0
    daa8:	00000050 	andeq	r0, r0, r0, asr r0
    daac:	00000000 	andeq	r0, r0, r0
    dab0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    dac8:	00010000 	andeq	r0, r1, r0
    dacc:	00000051 	andeq	r0, r0, r1, asr r0
    dad0:	00000000 	andeq	r0, r0, r0
    dad4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    dae0:	01f30004 	mvnseq	r0, r4
    dae4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    db04:	00540001 	subseq	r0, r4, r1
    db08:	00000000 	andeq	r0, r0, r0
    db0c:	02000000 	andeq	r0, r0, #0
    db10:	00007500 	andeq	r7, r0, r0, lsl #10
    db14:	00000000 	andeq	r0, r0, r0
    db18:	01000000 	mrseq	r0, (UNDEF: 0)
    db1c:	00005400 	andeq	r5, r0, r0, lsl #8
    db20:	00000000 	andeq	r0, r0, r0
    db24:	00020000 	andeq	r0, r2, r0
    db28:	00000075 	andeq	r0, r0, r5, ror r0
    db2c:	00000000 	andeq	r0, r0, r0
    db30:	00010000 	andeq	r0, r1, r0
    db34:	00000054 	andeq	r0, r0, r4, asr r0
    db38:	00000000 	andeq	r0, r0, r0
    db3c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    db48:	00750002 	rsbseq	r0, r5, r2
	...
    db5c:	00010000 	andeq	r0, r1, r0
    db60:	00000050 	andeq	r0, r0, r0, asr r0
    db64:	00000000 	andeq	r0, r0, r0
    db68:	01010200 	mrseq	r0, R9_usr
    db6c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    db78:	02000000 	andeq	r0, r0, #0
    db7c:	009f3000 	addseq	r3, pc, r0
    db80:	00000000 	andeq	r0, r0, r0
    db84:	02000000 	andeq	r0, r0, #0
    db88:	009f3100 	addseq	r3, pc, r0, lsl #2
    db8c:	00000000 	andeq	r0, r0, r0
    db90:	02000000 	andeq	r0, r0, #0
    db94:	009f3000 	addseq	r3, pc, r0
    db98:	00000000 	andeq	r0, r0, r0
    db9c:	02000000 	andeq	r0, r0, #0
    dba0:	009f3100 	addseq	r3, pc, r0, lsl #2
    dba4:	00000000 	andeq	r0, r0, r0
    dba8:	02000000 	andeq	r0, r0, #0
    dbac:	009f3000 	addseq	r3, pc, r0
	...
    dbc0:	01000000 	mrseq	r0, (UNDEF: 0)
    dbc4:	00005000 	andeq	r5, r0, r0
    dbc8:	00000000 	andeq	r0, r0, r0
    dbcc:	00010000 	andeq	r0, r1, r0
    dbd0:	00000050 	andeq	r0, r0, r0, asr r0
	...
    dbe0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    dbec:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    dbf0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    dc04:	01000000 	mrseq	r0, (UNDEF: 0)
    dc08:	00005000 	andeq	r5, r0, r0
    dc0c:	00000000 	andeq	r0, r0, r0
    dc10:	00010000 	andeq	r0, r1, r0
    dc14:	00000054 	andeq	r0, r0, r4, asr r0
    dc18:	00000000 	andeq	r0, r0, r0
    dc1c:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    dc34:	00540001 	subseq	r0, r4, r1
    dc38:	00000000 	andeq	r0, r0, r0
    dc3c:	01000000 	mrseq	r0, (UNDEF: 0)
    dc40:	00005400 	andeq	r5, r0, r0, lsl #8
    dc44:	00000000 	andeq	r0, r0, r0
    dc48:	00020000 	andeq	r0, r2, r0
    dc4c:	00020200 	andeq	r0, r2, r0, lsl #4
	...
    dc58:	9f300002 	svcls	0x00300002
	...
    dc64:	9f300002 	svcls	0x00300002
	...
    dc70:	9f310002 	svcls	0x00310002
	...
    dc88:	00520001 	subseq	r0, r2, r1
    dc8c:	00000000 	andeq	r0, r0, r0
    dc90:	01000000 	mrseq	r0, (UNDEF: 0)
    dc94:	00005200 	andeq	r5, r0, r0, lsl #4
    dc98:	00000000 	andeq	r0, r0, r0
    dc9c:	20080000 	andcs	r0, r8, r0
    dca0:	200a0800 	andcs	r0, sl, r0, lsl #16
    dca4:	00020800 	andeq	r0, r2, r0, lsl #16
    dca8:	200a007d 	andcs	r0, sl, sp, ror r0
    dcac:	20d40800 	sbcscs	r0, r4, r0, lsl #16
    dcb0:	00020800 	andeq	r0, r2, r0, lsl #16
    dcb4:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    dcc0:	20080000 	andcs	r0, r8, r0
    dcc4:	200f0800 	andcs	r0, pc, r0, lsl #16
    dcc8:	00010800 	andeq	r0, r1, r0, lsl #16
    dccc:	00200f50 	eoreq	r0, r0, r0, asr pc
    dcd0:	0020d408 	eoreq	sp, r0, r8, lsl #8
    dcd4:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    dce0:	20620000 	rsbcs	r0, r2, r0
    dce4:	20700800 	rsbscs	r0, r0, r0, lsl #16
    dce8:	00010800 	andeq	r0, r1, r0, lsl #16
    dcec:	00000053 	andeq	r0, r0, r3, asr r0
    dcf0:	00000000 	andeq	r0, r0, r0
    dcf4:	001eb800 	andseq	fp, lr, r0, lsl #16
    dcf8:	001ebc08 	andseq	fp, lr, r8, lsl #24
    dcfc:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    dd00:	001ebc00 	andseq	fp, lr, r0, lsl #24
    dd04:	001f4c08 	andseq	r4, pc, r8, lsl #24
    dd08:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    dd0c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    dd18:	001eb800 	andseq	fp, lr, r0, lsl #16
    dd1c:	001ed208 	andseq	sp, lr, r8, lsl #4
    dd20:	50000108 	andpl	r0, r0, r8, lsl #2
    dd24:	08001ed2 	stmdaeq	r0, {r1, r4, r6, r7, r9, sl, fp, ip}
    dd28:	08001f4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, fp, ip}
    dd2c:	00580001 	subseq	r0, r8, r1
	...
    dd38:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    dd3c:	d008001e 	andle	r0, r8, lr, lsl r0
    dd40:	0108001e 	tsteq	r8, lr, lsl r0
    dd44:	1ed05100 	cdpne	1, 13, cr5, cr0, cr0, {0}
    dd48:	1f4c0800 	svcne	0x004c0800
    dd4c:	00010800 	andeq	r0, r1, r0, lsl #16
    dd50:	00000055 	andeq	r0, r0, r5, asr r0
	...
    dd60:	001eb800 	andseq	fp, lr, r0, lsl #16
    dd64:	001ece08 	andseq	ip, lr, r8, lsl #28
    dd68:	52000108 	andpl	r0, r0, #8, 2
    dd6c:	08001ece 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, sl, fp, ip}
    dd70:	08001ee2 	stmdaeq	r0, {r1, r5, r6, r7, r9, sl, fp, ip}
    dd74:	e2570001 	subs	r0, r7, #1
    dd78:	ec08001e 	stc	0, cr0, [r8], {30}
    dd7c:	0708001e 	smladeq	r8, lr, r0, r0
    dd80:	80817200 	addhi	r7, r1, r0, lsl #4
    dd84:	9f7c8080 	svcls	0x007c8080
    dd88:	08001eec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r9, sl, fp, ip}
    dd8c:	08001f4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, fp, ip}
    dd90:	01f30004 	mvnseq	r0, r4
    dd94:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    dda0:	1eb80000 	cdpne	0, 11, cr0, cr8, cr0, {0}
    dda4:	1ed50800 	cdpne	8, 13, cr0, cr5, cr0, {0}
    dda8:	00010800 	andeq	r0, r1, r0, lsl #16
    ddac:	001ed553 	andseq	sp, lr, r3, asr r5
    ddb0:	001f4c08 	andseq	r4, pc, r8, lsl #24
    ddb4:	59000108 	stmdbpl	r0, {r3, r8}
	...
    ddc4:	08001eb8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sl, fp, ip}
    ddc8:	08001f16 	stmdaeq	r0, {r1, r2, r4, r8, r9, sl, fp, ip}
    ddcc:	00910002 	addseq	r0, r1, r2
    ddd0:	08001f16 	stmdaeq	r0, {r1, r2, r4, r8, r9, sl, fp, ip}
    ddd4:	08001f2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, r9, sl, fp, ip}
    ddd8:	00560001 	subseq	r0, r6, r1
	...
    dde4:	001ee200 	andseq	lr, lr, r0, lsl #4
    dde8:	001f4c08 	andseq	r4, pc, r8, lsl #24
    ddec:	57000108 	strpl	r0, [r0, -r8, lsl #2]
	...
    ddf8:	1eec0000 	cdpne	0, 14, cr0, cr12, cr0, {0}
    ddfc:	1f100800 	svcne	0x00100800
    de00:	00010800 	andeq	r0, r1, r0, lsl #16
    de04:	0000005c 	andeq	r0, r0, ip, asr r0
    de08:	00000000 	andeq	r0, r0, r0
    de0c:	00227800 	eoreq	r7, r2, r0, lsl #16
    de10:	00227a08 	eoreq	r7, r2, r8, lsl #20
    de14:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    de18:	00227a00 	eoreq	r7, r2, r0, lsl #20
    de1c:	00227c08 	eoreq	r7, r2, r8, lsl #24
    de20:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    de24:	00227c08 	eoreq	r7, r2, r8, lsl #24
    de28:	00229208 	eoreq	r9, r2, r8, lsl #4
    de2c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    de30:	00229210 	eoreq	r9, r2, r0, lsl r2
    de34:	00229408 	eoreq	r9, r2, r8, lsl #8
    de38:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    de3c:	00229408 	eoreq	r9, r2, r8, lsl #8
    de40:	00229a08 	eoreq	r9, r2, r8, lsl #20
    de44:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    de48:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    de54:	00227800 	eoreq	r7, r2, r0, lsl #16
    de58:	00228708 	eoreq	r8, r2, r8, lsl #14
    de5c:	50000108 	andpl	r0, r0, r8, lsl #2
    de60:	08002287 	stmdaeq	r0, {r0, r1, r2, r7, r9, sp}
    de64:	0800229a 	stmdaeq	r0, {r1, r3, r4, r7, r9, sp}
    de68:	01f30004 	mvnseq	r0, r4
    de6c:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    de78:	22780000 	rsbscs	r0, r8, #0
    de7c:	22870800 	addcs	r0, r7, #0, 16
    de80:	00010800 	andeq	r0, r1, r0, lsl #16
    de84:	00228751 	eoreq	r8, r2, r1, asr r7
    de88:	00229a08 	eoreq	r9, r2, r8, lsl #20
    de8c:	f3000408 	vshl.u8	d0, d8, d0
    de90:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    de9c:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    dea0:	87080022 	strhi	r0, [r8, -r2, lsr #32]
    dea4:	01080022 	tsteq	r8, r2, lsr #32
    dea8:	22875200 	addcs	r5, r7, #0, 4
    deac:	229a0800 	addscs	r0, sl, #0, 16
    deb0:	00040800 	andeq	r0, r4, r0, lsl #16
    deb4:	9f5201f3 	svcls	0x005201f3
	...
    dec4:	08002278 	stmdaeq	r0, {r3, r4, r5, r6, r9, sp}
    dec8:	08002287 	stmdaeq	r0, {r0, r1, r2, r7, r9, sp}
    decc:	87530001 	ldrbhi	r0, [r3, -r1]
    ded0:	9a080022 	bls	20df60 <_Min_Heap_Size+0x20d760>
    ded4:	04080022 	streq	r0, [r8], #-34	; 0xffffffde
    ded8:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    dedc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    dee8:	00227800 	eoreq	r7, r2, r0, lsl #16
    deec:	00229408 	eoreq	r9, r2, r8, lsl #8
    def0:	91000208 	tstls	r0, r8, lsl #4
    def4:	00229400 	eoreq	r9, r2, r0, lsl #8
    def8:	00229a08 	eoreq	r9, r2, r8, lsl #20
    defc:	91000208 	tstls	r0, r8, lsl #4
	...
    df0c:	00227800 	eoreq	r7, r2, r0, lsl #16
    df10:	00229408 	eoreq	r9, r2, r8, lsl #8
    df14:	91000208 	tstls	r0, r8, lsl #4
    df18:	00229404 	eoreq	r9, r2, r4, lsl #8
    df1c:	00229a08 	eoreq	r9, r2, r8, lsl #20
    df20:	91000208 	tstls	r0, r8, lsl #4
    df24:	00000004 	andeq	r0, r0, r4
	...
    df30:	00228800 	eoreq	r8, r2, r0, lsl #16
    df34:	00228d08 	eoreq	r8, r2, r8, lsl #26
    df38:	50000108 	andpl	r0, r0, r8, lsl #2
    df3c:	08002294 	stmdaeq	r0, {r2, r4, r7, r9, sp}
    df40:	08002298 	stmdaeq	r0, {r3, r4, r7, r9, sp}
    df44:	00500001 	subseq	r0, r0, r1
    df48:	00000000 	andeq	r0, r0, r0
    df4c:	01000000 	mrseq	r0, (UNDEF: 0)
    df50:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
    df54:	90080022 	andls	r0, r8, r2, lsr #32
    df58:	02080022 	andeq	r0, r8, #34	; 0x22
    df5c:	989f3100 	ldmls	pc, {r8, ip, sp}	; <UNPREDICTABLE>
    df60:	9a080022 	bls	20dff0 <_Min_Heap_Size+0x20d7f0>
    df64:	03080022 	movweq	r0, #32802	; 0x8022
    df68:	9fff0900 	svcls	0x00ff0900
	...
    df74:	080020d4 	stmdaeq	r0, {r2, r4, r6, r7, sp}
    df78:	080020d8 	stmdaeq	r0, {r3, r4, r6, r7, sp}
    df7c:	007d0002 	rsbseq	r0, sp, r2
    df80:	080020d8 	stmdaeq	r0, {r3, r4, r6, r7, sp}
    df84:	080020da 	stmdaeq	r0, {r1, r3, r4, r6, r7, sp}
    df88:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    df8c:	080020da 	stmdaeq	r0, {r1, r3, r4, r6, r7, sp}
    df90:	08002126 	stmdaeq	r0, {r1, r2, r5, r8, sp}
    df94:	307d0002 	rsbscc	r0, sp, r2
    df98:	08002126 	stmdaeq	r0, {r1, r2, r5, r8, sp}
    df9c:	0800212a 	stmdaeq	r0, {r1, r3, r5, r8, sp}
    dfa0:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    dfa4:	0800212a 	stmdaeq	r0, {r1, r3, r5, r8, sp}
    dfa8:	08002136 	stmdaeq	r0, {r1, r2, r4, r5, r8, sp}
    dfac:	307d0002 	rsbscc	r0, sp, r2
	...
    dfbc:	080020d4 	stmdaeq	r0, {r2, r4, r6, r7, sp}
    dfc0:	080020e4 	stmdaeq	r0, {r2, r5, r6, r7, sp}
    dfc4:	e4500001 	ldrb	r0, [r0], #-1
    dfc8:	36080020 	strcc	r0, [r8], -r0, lsr #32
    dfcc:	01080021 	tsteq	r8, r1, lsr #32
    dfd0:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    dfdc:	20d40000 	sbcscs	r0, r4, r0
    dfe0:	20e70800 	rsccs	r0, r7, r0, lsl #16
    dfe4:	00010800 	andeq	r0, r1, r0, lsl #16
    dfe8:	0020e751 	eoreq	lr, r0, r1, asr r7
    dfec:	00213608 	eoreq	r3, r1, r8, lsl #12
    dff0:	57000108 	strpl	r0, [r0, -r8, lsl #2]
	...
    e000:	080020d4 	stmdaeq	r0, {r2, r4, r6, r7, sp}
    e004:	080020e7 	stmdaeq	r0, {r0, r1, r2, r5, r6, r7, sp}
    e008:	e7520001 	ldrb	r0, [r2, -r1]
    e00c:	36080020 	strcc	r0, [r8], -r0, lsr #32
    e010:	01080021 	tsteq	r8, r1, lsr #32
    e014:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    e020:	20d40000 	sbcscs	r0, r4, r0
    e024:	20e70800 	rsccs	r0, r7, r0, lsl #16
    e028:	00010800 	andeq	r0, r1, r0, lsl #16
    e02c:	0020e753 	eoreq	lr, r0, r3, asr r7
    e030:	00213608 	eoreq	r3, r1, r8, lsl #12
    e034:	58000108 	stmdapl	r0, {r3, r8}
	...
    e044:	080020d4 	stmdaeq	r0, {r2, r4, r6, r7, sp}
    e048:	0800212a 	stmdaeq	r0, {r1, r3, r5, r8, sp}
    e04c:	00910002 	addseq	r0, r1, r2
    e050:	0800212a 	stmdaeq	r0, {r1, r3, r5, r8, sp}
    e054:	08002136 	stmdaeq	r0, {r1, r2, r4, r5, r8, sp}
    e058:	00910002 	addseq	r0, r1, r2
	...
    e068:	080020d4 	stmdaeq	r0, {r2, r4, r6, r7, sp}
    e06c:	0800212a 	stmdaeq	r0, {r1, r3, r5, r8, sp}
    e070:	04910002 	ldreq	r0, [r1], #2
    e074:	0800212a 	stmdaeq	r0, {r1, r3, r5, r8, sp}
    e078:	08002136 	stmdaeq	r0, {r1, r2, r4, r5, r8, sp}
    e07c:	04910002 	ldreq	r0, [r1], #2
	...
    e090:	080020f2 	stmdaeq	r0, {r1, r4, r5, r6, r7, sp}
    e094:	080020fd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sp}
    e098:	fd500001 	ldc2l	0, cr0, [r0, #-4]
    e09c:	22080020 	andcs	r0, r8, #32
    e0a0:	01080021 	tsteq	r8, r1, lsr #32
    e0a4:	212a5400 			; <UNDEFINED> instruction: 0x212a5400
    e0a8:	212c0800 			; <UNDEFINED> instruction: 0x212c0800
    e0ac:	00010800 	andeq	r0, r1, r0, lsl #16
    e0b0:	00212c50 	eoreq	r2, r1, r0, asr ip
    e0b4:	00213208 	eoreq	r3, r1, r8, lsl #4
    e0b8:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    e0c8:	20e80000 	rsccs	r0, r8, r0
    e0cc:	20ee0800 	rsccs	r0, lr, r0, lsl #16
    e0d0:	00010800 	andeq	r0, r1, r0, lsl #16
    e0d4:	0020ee50 	eoreq	lr, r0, r0, asr lr
    e0d8:	00213208 	eoreq	r3, r1, r8, lsl #4
    e0dc:	59000108 	stmdbpl	r0, {r3, r8}
    e0e0:	08002132 	stmdaeq	r0, {r1, r4, r5, r8, sp}
    e0e4:	08002136 	stmdaeq	r0, {r1, r2, r4, r5, r8, sp}
    e0e8:	00500001 	subseq	r0, r0, r1
    e0ec:	00000000 	andeq	r0, r0, r0
    e0f0:	50000000 	andpl	r0, r0, r0
    e0f4:	52080022 	andpl	r0, r8, #34	; 0x22
    e0f8:	02080022 	andeq	r0, r8, #34	; 0x22
    e0fc:	52007d00 	andpl	r7, r0, #0, 26
    e100:	54080022 	strpl	r0, [r8], #-34	; 0xffffffde
    e104:	02080022 	andeq	r0, r8, #34	; 0x22
    e108:	54087d00 	strpl	r7, [r8], #-3328	; 0xfffff300
    e10c:	76080022 	strvc	r0, [r8], -r2, lsr #32
    e110:	02080022 	andeq	r0, r8, #34	; 0x22
    e114:	76207d00 	strtvc	r7, [r0], -r0, lsl #26
    e118:	78080022 	stmdavc	r8, {r1, r5}
    e11c:	02080022 	andeq	r0, r8, #34	; 0x22
    e120:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    e12c:	50000000 	andpl	r0, r0, r0
    e130:	6b080022 	blvs	20e1c0 <_Min_Heap_Size+0x20d9c0>
    e134:	01080022 	tsteq	r8, r2, lsr #32
    e138:	226b5000 	rsbcs	r5, fp, #0
    e13c:	22780800 	rsbscs	r0, r8, #0, 16
    e140:	00040800 	andeq	r0, r4, r0, lsl #16
    e144:	9f5001f3 	svcls	0x005001f3
	...
    e154:	08002250 	stmdaeq	r0, {r4, r6, r9, sp}
    e158:	0800226b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r9, sp}
    e15c:	6b510001 	blvs	144e168 <_Min_Heap_Size+0x144d968>
    e160:	78080022 	stmdavc	r8, {r1, r5}
    e164:	04080022 	streq	r0, [r8], #-34	; 0xffffffde
    e168:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    e16c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    e178:	00225000 	eoreq	r5, r2, r0
    e17c:	00226b08 	eoreq	r6, r2, r8, lsl #22
    e180:	52000108 	andpl	r0, r0, #8, 2
    e184:	0800226b 	stmdaeq	r0, {r0, r1, r3, r5, r6, r9, sp}
    e188:	08002278 	stmdaeq	r0, {r3, r4, r5, r6, r9, sp}
    e18c:	01f30004 	mvnseq	r0, r4
    e190:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    e19c:	22500000 	subscs	r0, r0, #0
    e1a0:	226b0800 	rsbcs	r0, fp, #0, 16
    e1a4:	00010800 	andeq	r0, r1, r0, lsl #16
    e1a8:	00226b53 	eoreq	r6, r2, r3, asr fp
    e1ac:	00227808 	eoreq	r7, r2, r8, lsl #16
    e1b0:	f3000408 	vshl.u8	d0, d8, d0
    e1b4:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    e1c0:	00226c00 	eoreq	r6, r2, r0, lsl #24
    e1c4:	00227108 	eoreq	r7, r2, r8, lsl #2
    e1c8:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    e1d4:	08001f4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, fp, ip}
    e1d8:	08001f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp, ip}
    e1dc:	007d0002 	rsbseq	r0, sp, r2
    e1e0:	08001f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp, ip}
    e1e4:	08001f52 	stmdaeq	r0, {r1, r4, r6, r8, r9, sl, fp, ip}
    e1e8:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    e1ec:	08001f52 	stmdaeq	r0, {r1, r4, r6, r8, r9, sl, fp, ip}
    e1f0:	08001f92 	stmdaeq	r0, {r1, r4, r7, r8, r9, sl, fp, ip}
    e1f4:	307d0002 	rsbscc	r0, sp, r2
    e1f8:	08001f92 	stmdaeq	r0, {r1, r4, r7, r8, r9, sl, fp, ip}
    e1fc:	08001f96 	stmdaeq	r0, {r1, r2, r4, r7, r8, r9, sl, fp, ip}
    e200:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    e204:	08001f96 	stmdaeq	r0, {r1, r2, r4, r7, r8, r9, sl, fp, ip}
    e208:	08001f9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, r9, sl, fp, ip}
    e20c:	307d0002 	rsbscc	r0, sp, r2
	...
    e224:	1f4c0000 	svcne	0x004c0000
    e228:	1f680800 	svcne	0x00680800
    e22c:	00010800 	andeq	r0, r1, r0, lsl #16
    e230:	001f6850 	andseq	r6, pc, r0, asr r8	; <UNPREDICTABLE>
    e234:	001f9008 	andseq	r9, pc, r8
    e238:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    e23c:	08001f90 	stmdaeq	r0, {r4, r7, r8, r9, sl, fp, ip}
    e240:	08001f96 	stmdaeq	r0, {r1, r2, r4, r7, r8, r9, sl, fp, ip}
    e244:	01f30004 	mvnseq	r0, r4
    e248:	1f969f50 	svcne	0x00969f50
    e24c:	1f980800 	svcne	0x00980800
    e250:	00010800 	andeq	r0, r1, r0, lsl #16
    e254:	001f9850 	andseq	r9, pc, r0, asr r8	; <UNPREDICTABLE>
    e258:	001f9a08 	andseq	r9, pc, r8, lsl #20
    e25c:	f3000408 	vshl.u8	d0, d8, d0
    e260:	9a9f5001 	bls	fe7e226c <_estack+0xde7d88cc>
    e264:	9c08001f 	stcls	0, cr0, [r8], {31}
    e268:	0108001f 	tsteq	r8, pc, lsl r0
    e26c:	1f9c5000 	svcne	0x009c5000
    e270:	1f9e0800 	svcne	0x009e0800
    e274:	00010800 	andeq	r0, r1, r0, lsl #16
    e278:	00000055 	andeq	r0, r0, r5, asr r0
	...
    e288:	001f4c00 	andseq	r4, pc, r0, lsl #24
    e28c:	001f6608 	andseq	r6, pc, r8, lsl #12
    e290:	51000108 	tstpl	r0, r8, lsl #2
    e294:	08001f66 	stmdaeq	r0, {r1, r2, r5, r6, r8, r9, sl, fp, ip}
    e298:	08001f90 	stmdaeq	r0, {r4, r7, r8, r9, sl, fp, ip}
    e29c:	90590001 	subsls	r0, r9, r1
    e2a0:	9608001f 			; <UNDEFINED> instruction: 0x9608001f
    e2a4:	0408001f 	streq	r0, [r8], #-31	; 0xffffffe1
    e2a8:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    e2ac:	001f969f 	mulseq	pc, pc, r6	; <UNPREDICTABLE>
    e2b0:	001f9e08 	andseq	r9, pc, r8, lsl #28
    e2b4:	51000108 	tstpl	r0, r8, lsl #2
	...
    e2c8:	08001f4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, fp, ip}
    e2cc:	08001f64 	stmdaeq	r0, {r2, r5, r6, r8, r9, sl, fp, ip}
    e2d0:	64520001 	ldrbvs	r0, [r2], #-1
    e2d4:	9008001f 	andls	r0, r8, pc, lsl r0
    e2d8:	0108001f 	tsteq	r8, pc, lsl r0
    e2dc:	1f905800 	svcne	0x00905800
    e2e0:	1f960800 	svcne	0x00960800
    e2e4:	00040800 	andeq	r0, r4, r0, lsl #16
    e2e8:	9f5201f3 	svcls	0x005201f3
    e2ec:	08001f96 	stmdaeq	r0, {r1, r2, r4, r7, r8, r9, sl, fp, ip}
    e2f0:	08001f9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, r9, sl, fp, ip}
    e2f4:	00520001 	subseq	r0, r2, r1
	...
    e304:	4c000000 	stcmi	0, cr0, [r0], {-0}
    e308:	6b08001f 	blvs	20e38c <_Min_Heap_Size+0x20db8c>
    e30c:	0108001f 	tsteq	r8, pc, lsl r0
    e310:	1f6b5300 	svcne	0x006b5300
    e314:	1f900800 	svcne	0x00900800
    e318:	00010800 	andeq	r0, r1, r0, lsl #16
    e31c:	001f9057 	andseq	r9, pc, r7, asr r0	; <UNPREDICTABLE>
    e320:	001f9608 	andseq	r9, pc, r8, lsl #12
    e324:	f3000408 	vshl.u8	d0, d8, d0
    e328:	969f5301 	ldrls	r5, [pc], r1, lsl #6
    e32c:	9e08001f 	mcrls	0, 0, r0, cr8, cr15, {0}
    e330:	0108001f 	tsteq	r8, pc, lsl r0
    e334:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    e340:	1f4c0000 	svcne	0x004c0000
    e344:	1f960800 	svcne	0x00960800
    e348:	00020800 	andeq	r0, r2, r0, lsl #16
    e34c:	1f960091 	svcne	0x00960091
    e350:	1f9e0800 	svcne	0x009e0800
    e354:	00020800 	andeq	r0, r2, r0, lsl #16
    e358:	00000091 	muleq	r0, r1, r0
	...
    e364:	1f4c0000 	svcne	0x004c0000
    e368:	1f960800 	svcne	0x00960800
    e36c:	00020800 	andeq	r0, r2, r0, lsl #16
    e370:	1f960491 	svcne	0x00960491
    e374:	1f9e0800 	svcne	0x009e0800
    e378:	00020800 	andeq	r0, r2, r0, lsl #16
    e37c:	00000491 	muleq	r0, r1, r4
	...
    e388:	1f4c0000 	svcne	0x004c0000
    e38c:	1f960800 	svcne	0x00960800
    e390:	00020800 	andeq	r0, r2, r0, lsl #16
    e394:	1f960891 	svcne	0x00960891
    e398:	1f9e0800 	svcne	0x009e0800
    e39c:	00020800 	andeq	r0, r2, r0, lsl #16
    e3a0:	00000891 	muleq	r0, r1, r8
	...
    e3ac:	1f4c0000 	svcne	0x004c0000
    e3b0:	1f960800 	svcne	0x00960800
    e3b4:	00020800 	andeq	r0, r2, r0, lsl #16
    e3b8:	1f960c91 	svcne	0x00960c91
    e3bc:	1f9e0800 	svcne	0x009e0800
    e3c0:	00020800 	andeq	r0, r2, r0, lsl #16
    e3c4:	00000c91 	muleq	r0, r1, ip
    e3c8:	00000000 	andeq	r0, r0, r0
    e3cc:	00010000 	andeq	r0, r1, r0
    e3d0:	1f620000 	svcne	0x00620000
    e3d4:	1f900800 	svcne	0x00900800
    e3d8:	00010800 	andeq	r0, r1, r0, lsl #16
    e3dc:	001f9c54 	andseq	r9, pc, r4, asr ip	; <UNPREDICTABLE>
    e3e0:	001f9e08 	andseq	r9, pc, r8, lsl #28
    e3e4:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    e3f8:	007d0002 	rsbseq	r0, sp, r2
	...
    e404:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    e410:	187d0002 	ldmdane	sp!, {r1}^
	...
    e41c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    e434:	00010000 	andeq	r0, r1, r0
    e438:	00000050 	andeq	r0, r0, r0, asr r0
    e43c:	00000000 	andeq	r0, r0, r0
    e440:	91000200 	mrsls	r0, R8_usr
    e444:	0000006c 	andeq	r0, r0, ip, rrx
    e448:	00000000 	andeq	r0, r0, r0
    e44c:	f3000400 	vshl.u8	d0, d0, d0
    e450:	009f5001 	addseq	r5, pc, r1
	...
    e468:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    e474:	70910002 	addsvc	r0, r1, r2
	...
    e480:	01f30004 	mvnseq	r0, r4
    e484:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    e49c:	00520001 	subseq	r0, r2, r1
    e4a0:	00000000 	andeq	r0, r0, r0
    e4a4:	01000000 	mrseq	r0, (UNDEF: 0)
    e4a8:	00005400 	andeq	r5, r0, r0, lsl #8
    e4ac:	00000000 	andeq	r0, r0, r0
    e4b0:	00040000 	andeq	r0, r4, r0
    e4b4:	9f5201f3 	svcls	0x005201f3
	...
    e4cc:	00010000 	andeq	r0, r1, r0
    e4d0:	00000053 	andeq	r0, r0, r3, asr r0
    e4d4:	00000000 	andeq	r0, r0, r0
    e4d8:	52000100 	andpl	r0, r0, #0, 2
	...
    e4e4:	01f30004 	mvnseq	r0, r4
    e4e8:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    e4fc:	00500001 	subseq	r0, r0, r1
	...
    e50c:	02000000 	andeq	r0, r0, #0
    e510:	00007d00 	andeq	r7, r0, r0, lsl #26
    e514:	00000000 	andeq	r0, r0, r0
    e518:	02000000 	andeq	r0, r0, #0
    e51c:	00087d00 	andeq	r7, r8, r0, lsl #26
    e520:	00000000 	andeq	r0, r0, r0
    e524:	02000000 	andeq	r0, r0, #0
    e528:	00187d00 	andseq	r7, r8, r0, lsl #26
    e52c:	00000000 	andeq	r0, r0, r0
    e530:	02000000 	andeq	r0, r0, #0
    e534:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    e54c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    e558:	6c910002 	ldcvs	0, cr0, [r1], {2}
	...
    e564:	01f30004 	mvnseq	r0, r4
    e568:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    e580:	00510001 	subseq	r0, r1, r1
    e584:	00000000 	andeq	r0, r0, r0
    e588:	02000000 	andeq	r0, r0, #0
    e58c:	00709100 	rsbseq	r9, r0, r0, lsl #2
    e590:	00000000 	andeq	r0, r0, r0
    e594:	04000000 	streq	r0, [r0], #-0
    e598:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    e59c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    e5b0:	01000000 	mrseq	r0, (UNDEF: 0)
    e5b4:	00005200 	andeq	r5, r0, r0, lsl #4
    e5b8:	00000000 	andeq	r0, r0, r0
    e5bc:	00010000 	andeq	r0, r1, r0
    e5c0:	00000054 	andeq	r0, r0, r4, asr r0
    e5c4:	00000000 	andeq	r0, r0, r0
    e5c8:	f3000400 	vshl.u8	d0, d0, d0
    e5cc:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    e5e4:	53000100 	movwpl	r0, #256	; 0x100
	...
    e5f0:	00520001 	subseq	r0, r2, r1
    e5f4:	00000000 	andeq	r0, r0, r0
    e5f8:	04000000 	streq	r0, [r0], #-0
    e5fc:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    e600:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    e610:	01000000 	mrseq	r0, (UNDEF: 0)
    e614:	00005000 	andeq	r5, r0, r0
	...
    e624:	00020000 	andeq	r0, r2, r0
    e628:	0000007d 	andeq	r0, r0, sp, ror r0
    e62c:	00000000 	andeq	r0, r0, r0
    e630:	00020000 	andeq	r0, r2, r0
    e634:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    e648:	00010000 	andeq	r0, r1, r0
    e64c:	00000050 	andeq	r0, r0, r0, asr r0
    e650:	00000000 	andeq	r0, r0, r0
    e654:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    e66c:	00510001 	subseq	r0, r1, r1
    e670:	00000000 	andeq	r0, r0, r0
    e674:	01000000 	mrseq	r0, (UNDEF: 0)
    e678:	00005500 	andeq	r5, r0, r0, lsl #10
    e67c:	00000000 	andeq	r0, r0, r0
    e680:	00010000 	andeq	r0, r1, r0
	...
    e68c:	00010000 	andeq	r0, r1, r0
    e690:	00000050 	andeq	r0, r0, r0, asr r0
    e694:	00000000 	andeq	r0, r0, r0
    e698:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    e6ac:	007d0002 	rsbseq	r0, sp, r2
	...
    e6b8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    e6d0:	00010000 	andeq	r0, r1, r0
    e6d4:	00000050 	andeq	r0, r0, r0, asr r0
    e6d8:	00000000 	andeq	r0, r0, r0
    e6dc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    e6e8:	01f30004 	mvnseq	r0, r4
    e6ec:	00009f50 	andeq	r9, r0, r0, asr pc
    e6f0:	00000000 	andeq	r0, r0, r0
    e6f4:	00010000 	andeq	r0, r1, r0
	...
    e704:	00500001 	subseq	r0, r0, r1
    e708:	00000000 	andeq	r0, r0, r0
    e70c:	01000000 	mrseq	r0, (UNDEF: 0)
    e710:	00005400 	andeq	r5, r0, r0, lsl #8
    e714:	00000000 	andeq	r0, r0, r0
    e718:	00040000 	andeq	r0, r4, r0
    e71c:	9f5001f3 	svcls	0x005001f3
	...
    e730:	00010000 	andeq	r0, r1, r0
    e734:	00000054 	andeq	r0, r0, r4, asr r0
	...
    e744:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    e750:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    e754:	00000008 	andeq	r0, r0, r8
	...
    e76c:	01000000 	mrseq	r0, (UNDEF: 0)
    e770:	00005000 	andeq	r5, r0, r0
    e774:	00000000 	andeq	r0, r0, r0
    e778:	00010000 	andeq	r0, r1, r0
    e77c:	00000054 	andeq	r0, r0, r4, asr r0
    e780:	00000000 	andeq	r0, r0, r0
    e784:	f3000400 	vshl.u8	d0, d0, d0
    e788:	009f5001 	addseq	r5, pc, r1
    e78c:	00000000 	andeq	r0, r0, r0
    e790:	01000000 	mrseq	r0, (UNDEF: 0)
    e794:	00005400 	andeq	r5, r0, r0, lsl #8
    e798:	00000000 	andeq	r0, r0, r0
    e79c:	00040000 	andeq	r0, r4, r0
    e7a0:	9f5001f3 	svcls	0x005001f3
	...
    e7b4:	00010000 	andeq	r0, r1, r0
    e7b8:	00000054 	andeq	r0, r0, r4, asr r0
    e7bc:	00000000 	andeq	r0, r0, r0
    e7c0:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    e7d0:	01000000 	mrseq	r0, (UNDEF: 0)
    e7d4:	00005000 	andeq	r5, r0, r0
    e7d8:	00000000 	andeq	r0, r0, r0
    e7dc:	00010000 	andeq	r0, r1, r0
    e7e0:	00000054 	andeq	r0, r0, r4, asr r0
    e7e4:	00000000 	andeq	r0, r0, r0
    e7e8:	f3000400 	vshl.u8	d0, d0, d0
    e7ec:	009f5001 	addseq	r5, pc, r1
    e7f0:	00000000 	andeq	r0, r0, r0
    e7f4:	01000000 	mrseq	r0, (UNDEF: 0)
    e7f8:	00005400 	andeq	r5, r0, r0, lsl #8
    e7fc:	00000000 	andeq	r0, r0, r0
    e800:	00040000 	andeq	r0, r4, r0
    e804:	9f5001f3 	svcls	0x005001f3
	...
    e810:	08002d04 	stmdaeq	r0, {r2, r8, sl, fp, sp}
    e814:	08002d06 	stmdaeq	r0, {r1, r2, r8, sl, fp, sp}
    e818:	007d0002 	rsbseq	r0, sp, r2
    e81c:	08002d06 	stmdaeq	r0, {r1, r2, r8, sl, fp, sp}
    e820:	08002d08 	stmdaeq	r0, {r3, r8, sl, fp, sp}
    e824:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    e828:	08002d08 	stmdaeq	r0, {r3, r8, sl, fp, sp}
    e82c:	08002d18 	stmdaeq	r0, {r3, r4, r8, sl, fp, sp}
    e830:	187d0002 	ldmdane	sp!, {r1}^
    e834:	08002d18 	stmdaeq	r0, {r3, r4, r8, sl, fp, sp}
    e838:	08002d1a 	stmdaeq	r0, {r1, r3, r4, r8, sl, fp, sp}
    e83c:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    e840:	08002d1a 	stmdaeq	r0, {r1, r3, r4, r8, sl, fp, sp}
    e844:	08002d64 	stmdaeq	r0, {r2, r5, r6, r8, sl, fp, sp}
    e848:	187d0002 	ldmdane	sp!, {r1}^
	...
    e854:	08002b24 	stmdaeq	r0, {r2, r5, r8, r9, fp, sp}
    e858:	08002b26 	stmdaeq	r0, {r1, r2, r5, r8, r9, fp, sp}
    e85c:	007d0002 	rsbseq	r0, sp, r2
    e860:	08002b26 	stmdaeq	r0, {r1, r2, r5, r8, r9, fp, sp}
    e864:	08002b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp, sp}
    e868:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    e874:	2b2a0000 	blcs	a8e87c <_Min_Heap_Size+0xa8e07c>
    e878:	2b330800 	blcs	cd0880 <_Min_Heap_Size+0xcd0080>
    e87c:	00020800 	andeq	r0, r2, r0, lsl #16
    e880:	00000073 	andeq	r0, r0, r3, ror r0
    e884:	00000000 	andeq	r0, r0, r0
    e888:	00010000 	andeq	r0, r1, r0
    e88c:	2b3e0000 	blcs	f8e894 <_Min_Heap_Size+0xf8e094>
    e890:	2b4a0800 	blcs	1290898 <_Min_Heap_Size+0x1290098>
    e894:	00010800 	andeq	r0, r1, r0, lsl #16
    e898:	002b4a53 	eoreq	r4, fp, r3, asr sl
    e89c:	002b5408 	eoreq	r5, fp, r8, lsl #8
    e8a0:	03000508 	movweq	r0, #1288	; 0x508
    e8a4:	2000881c 	andcs	r8, r0, ip, lsl r8
	...
    e8b0:	08002bf4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, fp, sp}
    e8b4:	08002bf6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, r9, fp, sp}
    e8b8:	007d0002 	rsbseq	r0, sp, r2
    e8bc:	08002bf6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, r9, fp, sp}
    e8c0:	08002bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, sp}
    e8c4:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
    e8c8:	08002bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, sp}
    e8cc:	08002ce6 	stmdaeq	r0, {r1, r2, r5, r6, r7, sl, fp, sp}
    e8d0:	287d0002 	ldmdacs	sp!, {r1}^
    e8d4:	08002ce6 	stmdaeq	r0, {r1, r2, r5, r6, r7, sl, fp, sp}
    e8d8:	08002cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, sp}
    e8dc:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
    e8e8:	2c2c0000 	stccs	0, cr0, [ip], #-0
    e8ec:	2ce40800 	stclcs	8, cr0, [r4]
    e8f0:	00010800 	andeq	r0, r1, r0, lsl #16
    e8f4:	00000054 	andeq	r0, r0, r4, asr r0
	...
    e908:	002c3e00 	eoreq	r3, ip, r0, lsl #28
    e90c:	002c6a08 	eoreq	r6, ip, r8, lsl #20
    e910:	50000108 	andpl	r0, r0, r8, lsl #2
    e914:	08002c6a 	stmdaeq	r0, {r1, r3, r5, r6, sl, fp, sp}
    e918:	08002c9c 	stmdaeq	r0, {r2, r3, r4, r7, sl, fp, sp}
    e91c:	9c550001 	mrrcls	0, 0, r0, r5, cr1
    e920:	c208002c 	andgt	r0, r8, #44	; 0x2c
    e924:	0108002c 	tsteq	r8, ip, lsr #32
    e928:	2cc25000 	stclcs	0, cr5, [r2], {0}
    e92c:	2cc80800 	stclcs	8, cr0, [r8], {0}
    e930:	00010800 	andeq	r0, r1, r0, lsl #16
    e934:	002cc855 	eoreq	ip, ip, r5, asr r8
    e938:	002cde08 	eoreq	sp, ip, r8, lsl #28
    e93c:	50000108 	andpl	r0, r0, r8, lsl #2
    e940:	08002cde 	stmdaeq	r0, {r1, r2, r3, r4, r6, r7, sl, fp, sp}
    e944:	08002ce4 	stmdaeq	r0, {r2, r5, r6, r7, sl, fp, sp}
    e948:	00550001 	subseq	r0, r5, r1
    e94c:	00000000 	andeq	r0, r0, r0
    e950:	01000000 	mrseq	r0, (UNDEF: 0)
    e954:	002c2000 	eoreq	r2, ip, r0
    e958:	002c2a08 	eoreq	r2, ip, r8, lsl #20
    e95c:	91000308 	tstls	r0, r8, lsl #6
    e960:	00009f64 	andeq	r9, r0, r4, ror #30
    e964:	00000000 	andeq	r0, r0, r0
    e968:	2a740000 	bcs	1d0e970 <_Min_Heap_Size+0x1d0e170>
    e96c:	2a760800 	bcs	1d90974 <_Min_Heap_Size+0x1d90174>
    e970:	00020800 	andeq	r0, r2, r0, lsl #16
    e974:	2a76007d 	bcs	1d8eb70 <_Min_Heap_Size+0x1d8e370>
    e978:	2abc0800 	bcs	fef10980 <_estack+0xdef06fe0>
    e97c:	00020800 	andeq	r0, r2, r0, lsl #16
    e980:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    e99c:	2a740000 	bcs	1d0e9a4 <_Min_Heap_Size+0x1d0e1a4>
    e9a0:	2a880800 	bcs	fe2109a8 <_estack+0xde207008>
    e9a4:	00010800 	andeq	r0, r1, r0, lsl #16
    e9a8:	002a8850 	eoreq	r8, sl, r0, asr r8
    e9ac:	002a8a08 	eoreq	r8, sl, r8, lsl #20
    e9b0:	f3000408 	vshl.u8	d0, d8, d0
    e9b4:	8a9f5001 	bhi	fe7e29c0 <_estack+0xde7d9020>
    e9b8:	9008002a 	andls	r0, r8, sl, lsr #32
    e9bc:	0108002a 	tsteq	r8, sl, lsr #32
    e9c0:	2a905000 	bcs	fe4229c8 <_estack+0xde419028>
    e9c4:	2a930800 	bcs	fe4d09cc <_estack+0xde4c702c>
    e9c8:	00030800 	andeq	r0, r3, r0, lsl #16
    e9cc:	939f7c71 	orrsls	r7, pc, #28928	; 0x7100
    e9d0:	9808002a 	stmdals	r8, {r1, r3, r5}
    e9d4:	0408002a 	streq	r0, [r8], #-42	; 0xffffffd6
    e9d8:	5001f300 	andpl	pc, r1, r0, lsl #6
    e9dc:	002a989f 	mlaeq	sl, pc, r8, r9	; <UNPREDICTABLE>
    e9e0:	002aa608 	eoreq	sl, sl, r8, lsl #12
    e9e4:	50000108 	andpl	r0, r0, r8, lsl #2
    e9e8:	08002aa6 	stmdaeq	r0, {r1, r2, r5, r7, r9, fp, sp}
    e9ec:	08002aa9 	stmdaeq	r0, {r0, r3, r5, r7, r9, fp, sp}
    e9f0:	7c710003 	ldclvc	0, cr0, [r1], #-12
    e9f4:	002aa99f 	mlaeq	sl, pc, r9, sl	; <UNPREDICTABLE>
    e9f8:	002aae08 	eoreq	sl, sl, r8, lsl #28
    e9fc:	f3000408 	vshl.u8	d0, d8, d0
    ea00:	ae9f5001 	cdpge	0, 9, cr5, cr15, cr1, {0}
    ea04:	b008002a 	andlt	r0, r8, sl, lsr #32
    ea08:	0108002a 	tsteq	r8, sl, lsr #32
    ea0c:	2ab05000 	bcs	fec22a14 <_estack+0xdec19074>
    ea10:	2abc0800 	bcs	fef10a18 <_estack+0xdef07078>
    ea14:	00040800 	andeq	r0, r4, r0, lsl #16
    ea18:	9f5001f3 	svcls	0x005001f3
	...
    ea38:	2a740000 	bcs	1d0ea40 <_Min_Heap_Size+0x1d0e240>
    ea3c:	2a880800 	bcs	fe210a44 <_estack+0xde2070a4>
    ea40:	00010800 	andeq	r0, r1, r0, lsl #16
    ea44:	002a8851 	eoreq	r8, sl, r1, asr r8
    ea48:	002a8a08 	eoreq	r8, sl, r8, lsl #20
    ea4c:	f3000408 	vshl.u8	d0, d8, d0
    ea50:	8a9f5101 	bhi	fe7e2e5c <_estack+0xde7d94bc>
    ea54:	8c08002a 	stchi	0, cr0, [r8], {42}	; 0x2a
    ea58:	0108002a 	tsteq	r8, sl, lsr #32
    ea5c:	2a8c5100 	bcs	fe322e64 <_estack+0xde3194c4>
    ea60:	2a900800 	bcs	fe410a68 <_estack+0xde4070c8>
    ea64:	00020800 	andeq	r0, r2, r0, lsl #16
    ea68:	2a900470 	bcs	fe40fc30 <_estack+0xde406290>
    ea6c:	2a930800 	bcs	fe4d0a74 <_estack+0xde4c70d4>
    ea70:	00020800 	andeq	r0, r2, r0, lsl #16
    ea74:	2a930071 	bcs	fe4cec40 <_estack+0xde4c52a0>
    ea78:	2a980800 	bcs	fe610a80 <_estack+0xde6070e0>
    ea7c:	00040800 	andeq	r0, r4, r0, lsl #16
    ea80:	9f5101f3 	svcls	0x005101f3
    ea84:	08002a98 	stmdaeq	r0, {r3, r4, r7, r9, fp, sp}
    ea88:	08002aa2 	stmdaeq	r0, {r1, r5, r7, r9, fp, sp}
    ea8c:	a2510001 	subsge	r0, r1, #1
    ea90:	a608002a 	strge	r0, [r8], -sl, lsr #32
    ea94:	0208002a 	andeq	r0, r8, #42	; 0x2a
    ea98:	a6047000 	strge	r7, [r4], -r0
    ea9c:	a908002a 	stmdbge	r8, {r1, r3, r5}
    eaa0:	0208002a 	andeq	r0, r8, #42	; 0x2a
    eaa4:	a9007100 	stmdbge	r0, {r8, ip, sp, lr}
    eaa8:	ae08002a 	cdpge	0, 0, cr0, cr8, cr10, {1}
    eaac:	0408002a 	streq	r0, [r8], #-42	; 0xffffffd6
    eab0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    eab4:	002aae9f 	mlaeq	sl, pc, lr, sl	; <UNPREDICTABLE>
    eab8:	002abc08 	eoreq	fp, sl, r8, lsl #24
    eabc:	51000108 	tstpl	r0, r8, lsl #2
	...
    ead0:	2a740000 	bcs	1d0ead8 <_Min_Heap_Size+0x1d0e2d8>
    ead4:	2a800800 	bcs	fe010adc <_estack+0xde00713c>
    ead8:	00010800 	andeq	r0, r1, r0, lsl #16
    eadc:	002a8052 	eoreq	r8, sl, r2, asr r0
    eae0:	002a9808 	eoreq	r9, sl, r8, lsl #16
    eae4:	f3000408 	vshl.u8	d0, d8, d0
    eae8:	989f5201 	ldmls	pc, {r0, r9, ip, lr}	; <UNPREDICTABLE>
    eaec:	a908002a 	stmdbge	r8, {r1, r3, r5}
    eaf0:	0108002a 	tsteq	r8, sl, lsr #32
    eaf4:	2aa95200 	bcs	fea632fc <_estack+0xdea5995c>
    eaf8:	2aae0800 	bcs	feb90b00 <_estack+0xdeb87160>
    eafc:	00040800 	andeq	r0, r4, r0, lsl #16
    eb00:	9f5201f3 	svcls	0x005201f3
    eb04:	08002aae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r9, fp, sp}
    eb08:	08002abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp, sp}
    eb0c:	00520001 	subseq	r0, r2, r1
	...
    eb20:	002a7400 	eoreq	r7, sl, r0, lsl #8
    eb24:	002a8208 	eoreq	r8, sl, r8, lsl #4
    eb28:	53000108 	movwpl	r0, #264	; 0x108
    eb2c:	08002a82 	stmdaeq	r0, {r1, r7, r9, fp, sp}
    eb30:	08002a98 	stmdaeq	r0, {r3, r4, r7, r9, fp, sp}
    eb34:	01f30004 	mvnseq	r0, r4
    eb38:	2a989f53 	bcs	fe63688c <_estack+0xde62ceec>
    eb3c:	2aa40800 	bcs	fe910b44 <_estack+0xde9071a4>
    eb40:	00010800 	andeq	r0, r1, r0, lsl #16
    eb44:	002aa453 	eoreq	sl, sl, r3, asr r4
    eb48:	002aae08 	eoreq	sl, sl, r8, lsl #28
    eb4c:	f3000408 	vshl.u8	d0, d8, d0
    eb50:	ae9f5301 	cdpge	3, 9, cr5, cr15, cr1, {0}
    eb54:	bc08002a 	stclt	0, cr0, [r8], {42}	; 0x2a
    eb58:	0108002a 	tsteq	r8, sl, lsr #32
    eb5c:	00005300 	andeq	r5, r0, r0, lsl #6
    eb60:	00000000 	andeq	r0, r0, r0
    eb64:	00010000 	andeq	r0, r1, r0
    eb68:	00000000 	andeq	r0, r0, r0
    eb6c:	08002a76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9, fp, sp}
    eb70:	08002a88 	stmdaeq	r0, {r3, r7, r9, fp, sp}
    eb74:	9f300002 	svcls	0x00300002
    eb78:	08002a8a 	stmdaeq	r0, {r1, r3, r7, r9, fp, sp}
    eb7c:	08002ab0 	stmdaeq	r0, {r4, r5, r7, r9, fp, sp}
    eb80:	9f300002 	svcls	0x00300002
    eb84:	08002ab0 	stmdaeq	r0, {r4, r5, r7, r9, fp, sp}
    eb88:	08002abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp, sp}
    eb8c:	9f310002 	svcls	0x00310002
	...
    eb98:	08002b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp, sp}
    eb9c:	08002b56 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9, fp, sp}
    eba0:	007d0002 	rsbseq	r0, sp, r2
    eba4:	08002b56 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9, fp, sp}
    eba8:	08002b80 	stmdaeq	r0, {r7, r8, r9, fp, sp}
    ebac:	107d0002 	rsbsne	r0, sp, r2
	...
    ebbc:	08002b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp, sp}
    ebc0:	08002b5b 	stmdaeq	r0, {r0, r1, r3, r4, r6, r8, r9, fp, sp}
    ebc4:	5b500001 	blpl	140ebd0 <_Min_Heap_Size+0x140e3d0>
    ebc8:	8008002b 	andhi	r0, r8, fp, lsr #32
    ebcc:	0108002b 	tsteq	r8, fp, lsr #32
    ebd0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    ebe0:	2b5e0000 	blcs	178ebe8 <_Min_Heap_Size+0x178e3e8>
    ebe4:	2b6a0800 	blcs	1a90bec <_Min_Heap_Size+0x1a903ec>
    ebe8:	00010800 	andeq	r0, r1, r0, lsl #16
    ebec:	002b6a50 	eoreq	r6, fp, r0, asr sl
    ebf0:	002b7208 	eoreq	r7, fp, r8, lsl #4
    ebf4:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    ebf8:	08002b72 	stmdaeq	r0, {r1, r4, r5, r6, r8, r9, fp, sp}
    ebfc:	08002b75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, fp, sp}
    ec00:	75500001 	ldrbvc	r0, [r0, #-1]
    ec04:	8008002b 	andhi	r0, r8, fp, lsr #32
    ec08:	0108002b 	tsteq	r8, fp, lsr #32
    ec0c:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    ec1c:	2a540000 	bcs	150ec24 <_Min_Heap_Size+0x150e424>
    ec20:	2a660800 	bcs	1990c28 <_Min_Heap_Size+0x1990428>
    ec24:	00010800 	andeq	r0, r1, r0, lsl #16
    ec28:	002a6650 	eoreq	r6, sl, r0, asr r6
    ec2c:	002a6808 	eoreq	r6, sl, r8, lsl #16
    ec30:	f3000408 	vshl.u8	d0, d8, d0
    ec34:	689f5001 	ldmvs	pc, {r0, ip, lr}	; <UNPREDICTABLE>
    ec38:	6e08002a 	cdpvs	0, 0, cr0, cr8, cr10, {1}
    ec3c:	0108002a 	tsteq	r8, sl, lsr #32
    ec40:	2a6e5000 	bcs	1ba2c48 <_Min_Heap_Size+0x1ba2448>
    ec44:	2a740800 	bcs	1d10c4c <_Min_Heap_Size+0x1d1044c>
    ec48:	00040800 	andeq	r0, r4, r0, lsl #16
    ec4c:	9f5001f3 	svcls	0x005001f3
	...
    ec5c:	08002a66 	stmdaeq	r0, {r1, r2, r5, r6, r9, fp, sp}
    ec60:	08002a68 	stmdaeq	r0, {r3, r5, r6, r9, fp, sp}
    ec64:	6e500001 	cdpvs	0, 5, cr0, cr0, cr1, {0}
    ec68:	7408002a 	strvc	r0, [r8], #-42	; 0xffffffd6
    ec6c:	0208002a 	andeq	r0, r8, #42	; 0x2a
    ec70:	009f3000 	addseq	r3, pc, r0
    ec74:	00000000 	andeq	r0, r0, r0
    ec78:	80000000 	andhi	r0, r0, r0
    ec7c:	8208002b 	andhi	r0, r8, #43	; 0x2b
    ec80:	0208002b 	andeq	r0, r8, #43	; 0x2b
    ec84:	82007d00 	andhi	r7, r0, #0, 26
    ec88:	8408002b 	strhi	r0, [r8], #-43	; 0xffffffd5
    ec8c:	0208002b 	andeq	r0, r8, #43	; 0x2b
    ec90:	84107d00 	ldrhi	r7, [r0], #-3328	; 0xfffff300
    ec94:	ea08002b 	b	20ed48 <_Min_Heap_Size+0x20e548>
    ec98:	0208002b 	andeq	r0, r8, #43	; 0x2b
    ec9c:	ea187d00 	b	62e0a4 <_Min_Heap_Size+0x62d8a4>
    eca0:	f408002b 	vst4.8	{d0-d3}, [r8 :128], fp
    eca4:	0208002b 	andeq	r0, r8, #43	; 0x2b
    eca8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    ecb8:	002b8000 	eoreq	r8, fp, r0
    ecbc:	002b8b08 	eoreq	r8, fp, r8, lsl #22
    ecc0:	50000108 	andpl	r0, r0, r8, lsl #2
    ecc4:	08002b8b 	stmdaeq	r0, {r0, r1, r3, r7, r8, r9, fp, sp}
    ecc8:	08002bec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, r9, fp, sp}
    eccc:	ec560001 	mrrc	0, 0, r0, r6, cr1
    ecd0:	f408002b 	vst4.8	{d0-d3}, [r8 :128], fp
    ecd4:	0408002b 	streq	r0, [r8], #-43	; 0xffffffd5
    ecd8:	5001f300 	andpl	pc, r1, r0, lsl #6
    ecdc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    ecec:	002b8000 	eoreq	r8, fp, r0
    ecf0:	002b8b08 	eoreq	r8, fp, r8, lsl #22
    ecf4:	51000108 	tstpl	r0, r8, lsl #2
    ecf8:	08002b8b 	stmdaeq	r0, {r0, r1, r3, r7, r8, r9, fp, sp}
    ecfc:	08002be2 	stmdaeq	r0, {r1, r5, r6, r7, r8, r9, fp, sp}
    ed00:	e2540001 	subs	r0, r4, #1
    ed04:	e408002b 	str	r0, [r8], #-43	; 0xffffffd5
    ed08:	0408002b 	streq	r0, [r8], #-43	; 0xffffffd5
    ed0c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    ed10:	002be49f 	mlaeq	fp, pc, r4, lr	; <UNPREDICTABLE>
    ed14:	002bec08 	eoreq	lr, fp, r8, lsl #24
    ed18:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    ed2c:	2b920000 	blcs	fe48ed34 <_estack+0xde485394>
    ed30:	2bb20800 	blcs	fec90d38 <_estack+0xdec87398>
    ed34:	00010800 	andeq	r0, r1, r0, lsl #16
    ed38:	002bb250 	eoreq	fp, fp, r0, asr r2
    ed3c:	002bd208 	eoreq	sp, fp, r8, lsl #4
    ed40:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
    ed44:	08002bd2 	stmdaeq	r0, {r1, r4, r6, r7, r8, r9, fp, sp}
    ed48:	08002bd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, r9, fp, sp}
    ed4c:	d5500001 	ldrble	r0, [r0, #-1]
    ed50:	e008002b 	and	r0, r8, fp, lsr #32
    ed54:	0108002b 	tsteq	r8, fp, lsr #32
    ed58:	2be05500 	blcs	ff824160 <_estack+0xdf81a7c0>
    ed5c:	2be70800 	blcs	ff9d0d64 <_estack+0xdf9c73c4>
    ed60:	00010800 	andeq	r0, r1, r0, lsl #16
    ed64:	00000050 	andeq	r0, r0, r0, asr r0
    ed68:	00000000 	andeq	r0, r0, r0
    ed6c:	002cec00 	eoreq	lr, ip, r0, lsl #24
    ed70:	002cee08 	eoreq	lr, ip, r8, lsl #28
    ed74:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    ed78:	002cee00 	eoreq	lr, ip, r0, lsl #28
    ed7c:	002cf008 	eoreq	pc, ip, r8
    ed80:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    ed84:	002cf004 	eoreq	pc, ip, r4
    ed88:	002d0208 	eoreq	r0, sp, r8, lsl #4
    ed8c:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    ed90:	00000010 	andeq	r0, r0, r0, lsl r0
    ed94:	00000000 	andeq	r0, r0, r0
    ed98:	00000100 	andeq	r0, r0, r0, lsl #2
    ed9c:	002cec00 	eoreq	lr, ip, r0, lsl #24
    eda0:	002cf008 	eoreq	pc, ip, r8
    eda4:	50000108 	andpl	r0, r0, r8, lsl #2
    eda8:	08002cf0 	stmdaeq	r0, {r4, r5, r6, r7, sl, fp, sp}
    edac:	08002d02 	stmdaeq	r0, {r1, r8, sl, fp, sp}
    edb0:	01f30004 	mvnseq	r0, r4
    edb4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    edc0:	08002cf6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, sl, fp, sp}
    edc4:	08002cfb 	stmdaeq	r0, {r0, r1, r3, r4, r5, r6, r7, sl, fp, sp}
    edc8:	00500001 	subseq	r0, r0, r1
    edcc:	00000000 	andeq	r0, r0, r0
    edd0:	e4000000 	str	r0, [r0], #-0
    edd4:	e608002a 	str	r0, [r8], -sl, lsr #32
    edd8:	0208002a 	andeq	r0, r8, #42	; 0x2a
    eddc:	e6007d00 	str	r7, [r0], -r0, lsl #26
    ede0:	2408002a 	strcs	r0, [r8], #-42	; 0xffffffd6
    ede4:	0208002b 	andeq	r0, r8, #43	; 0x2b
    ede8:	00107d00 	andseq	r7, r0, r0, lsl #26
	...
    edf4:	e4000000 	str	r0, [r0], #-0
    edf8:	f408002a 	vst4.8	{d0-d3}, [r8 :128], sl
    edfc:	0108002a 	tsteq	r8, sl, lsr #32
    ee00:	2af45000 	bcs	ffd22e08 <_estack+0xdfd19468>
    ee04:	2b240800 	blcs	910e0c <_Min_Heap_Size+0x91060c>
    ee08:	00010800 	andeq	r0, r1, r0, lsl #16
    ee0c:	00000055 	andeq	r0, r0, r5, asr r0
	...
    ee18:	002ae400 	eoreq	lr, sl, r0, lsl #8
    ee1c:	002af708 	eoreq	pc, sl, r8, lsl #14
    ee20:	51000108 	tstpl	r0, r8, lsl #2
    ee24:	08002af7 	stmdaeq	r0, {r0, r1, r2, r4, r5, r6, r7, r9, fp, sp}
    ee28:	08002b24 	stmdaeq	r0, {r2, r5, r8, r9, fp, sp}
    ee2c:	00560001 	subseq	r0, r6, r1
	...
    ee38:	002af200 	eoreq	pc, sl, r0, lsl #4
    ee3c:	002b2408 	eoreq	r2, fp, r8, lsl #8
    ee40:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
	...
    ee4c:	08002abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp, sp}
    ee50:	08002abe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, fp, sp}
    ee54:	007d0002 	rsbseq	r0, sp, r2
    ee58:	08002abe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r9, fp, sp}
    ee5c:	08002ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp, sp}
    ee60:	107d0002 	rsbsne	r0, sp, r2
	...
    ee70:	08002abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp, sp}
    ee74:	08002ac6 	stmdaeq	r0, {r1, r2, r6, r7, r9, fp, sp}
    ee78:	c6500001 	ldrbgt	r0, [r0], -r1
    ee7c:	e408002a 	str	r0, [r8], #-42	; 0xffffffd6
    ee80:	0108002a 	tsteq	r8, sl, lsr #32
    ee84:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    ee90:	2abc0000 	bcs	fef0ee98 <_estack+0xdef054f8>
    ee94:	2ac60800 	bcs	ff190e9c <_estack+0xdf1874fc>
    ee98:	00010800 	andeq	r0, r1, r0, lsl #16
    ee9c:	002ac651 	eoreq	ip, sl, r1, asr r6
    eea0:	002ae408 	eoreq	lr, sl, r8, lsl #8
    eea4:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
    eeb4:	08002abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp, sp}
    eeb8:	08002ac6 	stmdaeq	r0, {r1, r2, r6, r7, r9, fp, sp}
    eebc:	c6520001 	ldrbgt	r0, [r2], -r1
    eec0:	e408002a 	str	r0, [r8], #-42	; 0xffffffd6
    eec4:	0108002a 	tsteq	r8, sl, lsr #32
    eec8:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    eedc:	00010000 	andeq	r0, r1, r0
    eee0:	00000050 	andeq	r0, r0, r0, asr r0
    eee4:	00000000 	andeq	r0, r0, r0
    eee8:	f3000400 	vshl.u8	d0, d0, d0
    eeec:	009f5001 	addseq	r5, pc, r1
    eef0:	00000000 	andeq	r0, r0, r0
    eef4:	02000000 	andeq	r0, r0, #0
	...
    ef00:	01000000 	mrseq	r0, (UNDEF: 0)
    ef04:	00005000 	andeq	r5, r0, r0
    ef08:	00000000 	andeq	r0, r0, r0
    ef0c:	00040000 	andeq	r0, r4, r0
    ef10:	9f5001f3 	svcls	0x005001f3
	...
    ef2c:	00500001 	subseq	r0, r0, r1
    ef30:	00000000 	andeq	r0, r0, r0
    ef34:	02000000 	andeq	r0, r0, #0
    ef38:	00007100 	andeq	r7, r0, r0, lsl #2
    ef3c:	00000000 	andeq	r0, r0, r0
    ef40:	01000000 	mrseq	r0, (UNDEF: 0)
    ef44:	00005000 	andeq	r5, r0, r0
    ef48:	00000000 	andeq	r0, r0, r0
    ef4c:	00040000 	andeq	r0, r4, r0
    ef50:	9f5001f3 	svcls	0x005001f3
	...
    ef5c:	00000001 	andeq	r0, r0, r1
	...
    ef68:	9f310002 	svcls	0x00310002
	...
    ef74:	9f300002 	svcls	0x00300002
	...
    ef80:	00000003 	andeq	r0, r0, r3
	...
    ef90:	00500001 	subseq	r0, r0, r1
    ef94:	00000000 	andeq	r0, r0, r0
    ef98:	02000000 	andeq	r0, r0, #0
    ef9c:	00007100 	andeq	r7, r0, r0, lsl #2
    efa0:	00000000 	andeq	r0, r0, r0
    efa4:	01000000 	mrseq	r0, (UNDEF: 0)
    efa8:	00005000 	andeq	r5, r0, r0
    efac:	00000000 	andeq	r0, r0, r0
    efb0:	00040000 	andeq	r0, r4, r0
    efb4:	9f5001f3 	svcls	0x005001f3
	...
    efcc:	00500001 	subseq	r0, r0, r1
    efd0:	00000000 	andeq	r0, r0, r0
    efd4:	04000000 	streq	r0, [r0], #-0
    efd8:	5001f300 	andpl	pc, r1, r0, lsl #6
    efdc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    efe0:	00000000 	andeq	r0, r0, r0
    efe4:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    eff0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    effc:	01f30004 	mvnseq	r0, r4
    f000:	00009f50 	andeq	r9, r0, r0, asr pc
    f004:	00000000 	andeq	r0, r0, r0
    f008:	00060000 	andeq	r0, r6, r0
	...
    f014:	00020000 	andeq	r0, r2, r0
    f018:	00000470 	andeq	r0, r0, r0, ror r4
    f01c:	00000000 	andeq	r0, r0, r0
    f020:	00010000 	andeq	r0, r1, r0
    f024:	00000050 	andeq	r0, r0, r0, asr r0
	...
    f034:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    f040:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    f044:	00000008 	andeq	r0, r0, r8
	...
    f058:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    f064:	01f30004 	mvnseq	r0, r4
    f068:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    f07c:	00500001 	subseq	r0, r0, r1
	...
    f08c:	02000000 	andeq	r0, r0, #0
    f090:	00007d00 	andeq	r7, r0, r0, lsl #26
    f094:	00000000 	andeq	r0, r0, r0
    f098:	02000000 	andeq	r0, r0, #0
    f09c:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    f0b8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    f0c4:	00540001 	subseq	r0, r4, r1
    f0c8:	00000000 	andeq	r0, r0, r0
    f0cc:	04000000 	streq	r0, [r0], #-0
    f0d0:	5001f300 	andpl	pc, r1, r0, lsl #6
    f0d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    f0d8:	00000000 	andeq	r0, r0, r0
    f0dc:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    f0e8:	01f30004 	mvnseq	r0, r4
    f0ec:	00009f50 	andeq	r9, r0, r0, asr pc
    f0f0:	00000000 	andeq	r0, r0, r0
    f0f4:	00010000 	andeq	r0, r1, r0
	...
    f108:	00500001 	subseq	r0, r0, r1
    f10c:	00000000 	andeq	r0, r0, r0
    f110:	01000000 	mrseq	r0, (UNDEF: 0)
    f114:	00005400 	andeq	r5, r0, r0, lsl #8
    f118:	00000000 	andeq	r0, r0, r0
    f11c:	00040000 	andeq	r0, r4, r0
    f120:	9f5001f3 	svcls	0x005001f3
	...
    f12c:	00540001 	subseq	r0, r4, r1
    f130:	00000000 	andeq	r0, r0, r0
    f134:	04000000 	streq	r0, [r0], #-0
    f138:	5001f300 	andpl	pc, r1, r0, lsl #6
    f13c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    f14c:	01000000 	mrseq	r0, (UNDEF: 0)
    f150:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    f160:	00020000 	andeq	r0, r2, r0
    f164:	0000007d 	andeq	r0, r0, sp, ror r0
    f168:	00000000 	andeq	r0, r0, r0
    f16c:	00020000 	andeq	r0, r2, r0
    f170:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    f184:	00010000 	andeq	r0, r1, r0
    f188:	00000050 	andeq	r0, r0, r0, asr r0
    f18c:	00000000 	andeq	r0, r0, r0
    f190:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    f1a8:	00510001 	subseq	r0, r1, r1
    f1ac:	00000000 	andeq	r0, r0, r0
    f1b0:	01000000 	mrseq	r0, (UNDEF: 0)
    f1b4:	00005500 	andeq	r5, r0, r0, lsl #10
    f1b8:	00000000 	andeq	r0, r0, r0
    f1bc:	00010000 	andeq	r0, r1, r0
	...
    f1c8:	00010000 	andeq	r0, r1, r0
    f1cc:	00000050 	andeq	r0, r0, r0, asr r0
    f1d0:	00000000 	andeq	r0, r0, r0
    f1d4:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    f1ec:	00500001 	subseq	r0, r0, r1
    f1f0:	00000000 	andeq	r0, r0, r0
    f1f4:	04000000 	streq	r0, [r0], #-0
    f1f8:	5001f300 	andpl	pc, r1, r0, lsl #6
    f1fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    f200:	00000000 	andeq	r0, r0, r0
    f204:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    f210:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    f21c:	01f30004 	mvnseq	r0, r4
    f220:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    f230:	00020000 	andeq	r0, r2, r0
    f234:	0000007d 	andeq	r0, r0, sp, ror r0
    f238:	00000000 	andeq	r0, r0, r0
    f23c:	00020000 	andeq	r0, r2, r0
    f240:	0000087d 	andeq	r0, r0, sp, ror r8
    f244:	00000000 	andeq	r0, r0, r0
    f248:	00020000 	andeq	r0, r2, r0
    f24c:	0000187d 	andeq	r1, r0, sp, ror r8
    f250:	00000000 	andeq	r0, r0, r0
    f254:	00020000 	andeq	r0, r2, r0
    f258:	0000087d 	andeq	r0, r0, sp, ror r8
    f25c:	00000000 	andeq	r0, r0, r0
    f260:	00020000 	andeq	r0, r2, r0
    f264:	0000187d 	andeq	r1, r0, sp, ror r8
	...
    f270:	00030300 	andeq	r0, r3, r0, lsl #6
	...
    f284:	00010000 	andeq	r0, r1, r0
    f288:	00000050 	andeq	r0, r0, r0, asr r0
    f28c:	00000000 	andeq	r0, r0, r0
    f290:	91000200 	mrsls	r0, R8_usr
    f294:	00000070 	andeq	r0, r0, r0, ror r0
    f298:	00000000 	andeq	r0, r0, r0
    f29c:	f3000400 	vshl.u8	d0, d0, d0
    f2a0:	009f5001 	addseq	r5, pc, r1
    f2a4:	00000000 	andeq	r0, r0, r0
    f2a8:	01000000 	mrseq	r0, (UNDEF: 0)
    f2ac:	00005000 	andeq	r5, r0, r0
    f2b0:	00000000 	andeq	r0, r0, r0
    f2b4:	00020000 	andeq	r0, r2, r0
    f2b8:	00007091 	muleq	r0, r1, r0
    f2bc:	00000000 	andeq	r0, r0, r0
    f2c0:	00040000 	andeq	r0, r4, r0
    f2c4:	9f5001f3 	svcls	0x005001f3
	...
    f2d0:	00500001 	subseq	r0, r0, r1
    f2d4:	00000000 	andeq	r0, r0, r0
    f2d8:	04000000 	streq	r0, [r0], #-0
    f2dc:	5001f300 	andpl	pc, r1, r0, lsl #6
    f2e0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    f2e4:	00000000 	andeq	r0, r0, r0
    f2e8:	03030000 	movweq	r0, #12288	; 0x3000
	...
    f2fc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    f308:	01f30004 	mvnseq	r0, r4
    f30c:	00009f51 	andeq	r9, r0, r1, asr pc
    f310:	00000000 	andeq	r0, r0, r0
    f314:	00010000 	andeq	r0, r1, r0
    f318:	00000051 	andeq	r0, r0, r1, asr r0
    f31c:	00000000 	andeq	r0, r0, r0
    f320:	71000200 	mrsvc	r0, R8_usr
	...
    f32c:	f3000400 	vshl.u8	d0, d0, d0
    f330:	009f5101 	addseq	r5, pc, r1, lsl #2
    f334:	00000000 	andeq	r0, r0, r0
    f338:	01000000 	mrseq	r0, (UNDEF: 0)
    f33c:	00005100 	andeq	r5, r0, r0, lsl #2
    f340:	00000000 	andeq	r0, r0, r0
    f344:	03000000 	movweq	r0, #0
    f348:	00000003 	andeq	r0, r0, r3
	...
    f358:	00010000 	andeq	r0, r1, r0
    f35c:	00000052 	andeq	r0, r0, r2, asr r0
    f360:	00000000 	andeq	r0, r0, r0
    f364:	f3000400 	vshl.u8	d0, d0, d0
    f368:	009f5201 	addseq	r5, pc, r1, lsl #4
    f36c:	00000000 	andeq	r0, r0, r0
    f370:	01000000 	mrseq	r0, (UNDEF: 0)
    f374:	00005200 	andeq	r5, r0, r0, lsl #4
    f378:	00000000 	andeq	r0, r0, r0
    f37c:	00020000 	andeq	r0, r2, r0
    f380:	00006c91 	muleq	r0, r1, ip
    f384:	00000000 	andeq	r0, r0, r0
    f388:	00040000 	andeq	r0, r4, r0
    f38c:	9f5201f3 	svcls	0x005201f3
	...
    f398:	00520001 	subseq	r0, r2, r1
	...
    f3a4:	03030000 	movweq	r0, #12288	; 0x3000
	...
    f3b4:	01000000 	mrseq	r0, (UNDEF: 0)
    f3b8:	00005300 	andeq	r5, r0, r0, lsl #6
    f3bc:	00000000 	andeq	r0, r0, r0
    f3c0:	00010000 	andeq	r0, r1, r0
    f3c4:	0000005c 	andeq	r0, r0, ip, asr r0
    f3c8:	00000000 	andeq	r0, r0, r0
    f3cc:	f3000400 	vshl.u8	d0, d0, d0
    f3d0:	009f5301 	addseq	r5, pc, r1, lsl #6
    f3d4:	00000000 	andeq	r0, r0, r0
    f3d8:	01000000 	mrseq	r0, (UNDEF: 0)
    f3dc:	00005c00 	andeq	r5, r0, r0, lsl #24
    f3e0:	00000000 	andeq	r0, r0, r0
    f3e4:	00040000 	andeq	r0, r4, r0
    f3e8:	9f5301f3 	svcls	0x005301f3
	...
    f3f4:	005c0001 	subseq	r0, ip, r1
	...
    f408:	02000000 	andeq	r0, r0, #0
    f40c:	00009100 	andeq	r9, r0, r0, lsl #2
    f410:	00000000 	andeq	r0, r0, r0
    f414:	02000000 	andeq	r0, r0, #0
    f418:	00009100 	andeq	r9, r0, r0, lsl #2
    f41c:	00000000 	andeq	r0, r0, r0
    f420:	01000000 	mrseq	r0, (UNDEF: 0)
    f424:	00000003 	andeq	r0, r0, r3
	...
    f430:	02000000 	andeq	r0, r0, #0
    f434:	009f3000 	addseq	r3, pc, r0
    f438:	00000000 	andeq	r0, r0, r0
    f43c:	02000000 	andeq	r0, r0, #0
    f440:	009f3000 	addseq	r3, pc, r0
    f444:	00000000 	andeq	r0, r0, r0
    f448:	01000000 	mrseq	r0, (UNDEF: 0)
    f44c:	00005000 	andeq	r5, r0, r0
    f450:	00000000 	andeq	r0, r0, r0
    f454:	00020000 	andeq	r0, r2, r0
    f458:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    f468:	00020000 	andeq	r0, r2, r0
    f46c:	0000007d 	andeq	r0, r0, sp, ror r0
    f470:	00000000 	andeq	r0, r0, r0
    f474:	00020000 	andeq	r0, r2, r0
    f478:	0000047d 	andeq	r0, r0, sp, ror r4
    f47c:	00000000 	andeq	r0, r0, r0
    f480:	00020000 	andeq	r0, r2, r0
    f484:	0000187d 	andeq	r1, r0, sp, ror r8
    f488:	00000000 	andeq	r0, r0, r0
    f48c:	00020000 	andeq	r0, r2, r0
    f490:	0000047d 	andeq	r0, r0, sp, ror r4
    f494:	00000000 	andeq	r0, r0, r0
    f498:	00020000 	andeq	r0, r2, r0
    f49c:	0000187d 	andeq	r1, r0, sp, ror r8
    f4a0:	00000000 	andeq	r0, r0, r0
    f4a4:	00020000 	andeq	r0, r2, r0
    f4a8:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    f4b4:	00030300 	andeq	r0, r3, r0, lsl #6
	...
    f4c8:	00500001 	subseq	r0, r0, r1
    f4cc:	00000000 	andeq	r0, r0, r0
    f4d0:	02000000 	andeq	r0, r0, #0
    f4d4:	00709100 	rsbseq	r9, r0, r0, lsl #2
    f4d8:	00000000 	andeq	r0, r0, r0
    f4dc:	04000000 	streq	r0, [r0], #-0
    f4e0:	5001f300 	andpl	pc, r1, r0, lsl #6
    f4e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    f4e8:	00000000 	andeq	r0, r0, r0
    f4ec:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    f4f8:	01f30004 	mvnseq	r0, r4
    f4fc:	00009f50 	andeq	r9, r0, r0, asr pc
    f500:	00000000 	andeq	r0, r0, r0
    f504:	00010000 	andeq	r0, r1, r0
    f508:	00000050 	andeq	r0, r0, r0, asr r0
    f50c:	00000000 	andeq	r0, r0, r0
    f510:	f3000400 	vshl.u8	d0, d0, d0
    f514:	009f5001 	addseq	r5, pc, r1
	...
    f520:	00000303 	andeq	r0, r0, r3, lsl #6
	...
    f530:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    f53c:	01f30004 	mvnseq	r0, r4
    f540:	00009f51 	andeq	r9, r0, r1, asr pc
    f544:	00000000 	andeq	r0, r0, r0
    f548:	00010000 	andeq	r0, r1, r0
    f54c:	00000051 	andeq	r0, r0, r1, asr r0
    f550:	00000000 	andeq	r0, r0, r0
    f554:	f3000400 	vshl.u8	d0, d0, d0
    f558:	009f5101 	addseq	r5, pc, r1, lsl #2
    f55c:	00000000 	andeq	r0, r0, r0
    f560:	01000000 	mrseq	r0, (UNDEF: 0)
    f564:	00005100 	andeq	r5, r0, r0, lsl #2
    f568:	00000000 	andeq	r0, r0, r0
    f56c:	03000000 	movweq	r0, #0
    f570:	00000003 	andeq	r0, r0, r3
	...
    f580:	00520001 	subseq	r0, r2, r1
    f584:	00000000 	andeq	r0, r0, r0
    f588:	04000000 	streq	r0, [r0], #-0
    f58c:	5201f300 	andpl	pc, r1, #0, 6
    f590:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    f594:	00000000 	andeq	r0, r0, r0
    f598:	52000100 	andpl	r0, r0, #0, 2
	...
    f5a4:	01f30004 	mvnseq	r0, r4
    f5a8:	00009f52 	andeq	r9, r0, r2, asr pc
    f5ac:	00000000 	andeq	r0, r0, r0
    f5b0:	00010000 	andeq	r0, r1, r0
    f5b4:	00000052 	andeq	r0, r0, r2, asr r0
	...
    f5c8:	53000100 	movwpl	r0, #256	; 0x100
	...
    f5d4:	01f30004 	mvnseq	r0, r4
    f5d8:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    f5ec:	00020000 	andeq	r0, r2, r0
    f5f0:	00000091 	muleq	r0, r1, r0
    f5f4:	00000000 	andeq	r0, r0, r0
    f5f8:	00020000 	andeq	r0, r2, r0
    f5fc:	00000091 	muleq	r0, r1, r0
    f600:	00000000 	andeq	r0, r0, r0
    f604:	03020000 	movweq	r0, #8192	; 0x2000
	...
    f618:	00020000 	andeq	r0, r2, r0
    f61c:	00009f30 	andeq	r9, r0, r0, lsr pc
    f620:	00000000 	andeq	r0, r0, r0
    f624:	00020000 	andeq	r0, r2, r0
    f628:	00009f30 	andeq	r9, r0, r0, lsr pc
    f62c:	00000000 	andeq	r0, r0, r0
    f630:	00010000 	andeq	r0, r1, r0
    f634:	00000050 	andeq	r0, r0, r0, asr r0
    f638:	00000000 	andeq	r0, r0, r0
    f63c:	30000200 	andcc	r0, r0, r0, lsl #4
    f640:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    f644:	00000000 	andeq	r0, r0, r0
    f648:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    f654:	9f300002 	svcls	0x00300002
	...
    f668:	007d0002 	rsbseq	r0, sp, r2
	...
    f674:	187d0002 	ldmdane	sp!, {r1}^
	...
    f68c:	00500001 	subseq	r0, r0, r1
    f690:	00000000 	andeq	r0, r0, r0
    f694:	01000000 	mrseq	r0, (UNDEF: 0)
    f698:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    f6ac:	00010000 	andeq	r0, r1, r0
    f6b0:	00000051 	andeq	r0, r0, r1, asr r0
    f6b4:	00000000 	andeq	r0, r0, r0
    f6b8:	57000100 	strpl	r0, [r0, -r0, lsl #2]
	...
    f6d0:	00520001 	subseq	r0, r2, r1
    f6d4:	00000000 	andeq	r0, r0, r0
    f6d8:	01000000 	mrseq	r0, (UNDEF: 0)
    f6dc:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    f6f0:	00010000 	andeq	r0, r1, r0
    f6f4:	00000053 	andeq	r0, r0, r3, asr r0
    f6f8:	00000000 	andeq	r0, r0, r0
    f6fc:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    f710:	007d0002 	rsbseq	r0, sp, r2
	...
    f71c:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
    f728:	187d0002 	ldmdane	sp!, {r1}^
	...
    f734:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
    f74c:	00500001 	subseq	r0, r0, r1
    f750:	00000000 	andeq	r0, r0, r0
    f754:	04000000 	streq	r0, [r0], #-0
    f758:	5001f300 	andpl	pc, r1, r0, lsl #6
    f75c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    f770:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    f77c:	01f30004 	mvnseq	r0, r4
    f780:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    f794:	00010000 	andeq	r0, r1, r0
    f798:	00000052 	andeq	r0, r0, r2, asr r0
    f79c:	00000000 	andeq	r0, r0, r0
    f7a0:	f3000400 	vshl.u8	d0, d0, d0
    f7a4:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    f7b8:	01000000 	mrseq	r0, (UNDEF: 0)
    f7bc:	00005300 	andeq	r5, r0, r0, lsl #6
    f7c0:	00000000 	andeq	r0, r0, r0
    f7c4:	00040000 	andeq	r0, r4, r0
    f7c8:	9f5301f3 	svcls	0x005301f3
	...
    f7d4:	00000004 	andeq	r0, r0, r4
    f7d8:	00000000 	andeq	r0, r0, r0
    f7dc:	00010000 	andeq	r0, r1, r0
    f7e0:	00000054 	andeq	r0, r0, r4, asr r0
	...
    f7f0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    f7fc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    f800:	00000018 	andeq	r0, r0, r8, lsl r0
    f804:	00000000 	andeq	r0, r0, r0
    f808:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    f80c:	00000020 	andeq	r0, r0, r0, lsr #32
    f810:	00000000 	andeq	r0, r0, r0
    f814:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    f818:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    f82c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    f838:	00540001 	subseq	r0, r4, r1
	...
    f84c:	01000000 	mrseq	r0, (UNDEF: 0)
    f850:	00005100 	andeq	r5, r0, r0, lsl #2
    f854:	00000000 	andeq	r0, r0, r0
    f858:	00010000 	andeq	r0, r1, r0
    f85c:	00000058 	andeq	r0, r0, r8, asr r0
	...
    f870:	52000100 	andpl	r0, r0, #0, 2
	...
    f87c:	00570001 	subseq	r0, r7, r1
	...
    f890:	01000000 	mrseq	r0, (UNDEF: 0)
    f894:	00005300 	andeq	r5, r0, r0, lsl #6
    f898:	00000000 	andeq	r0, r0, r0
    f89c:	00010000 	andeq	r0, r1, r0
    f8a0:	00000055 	andeq	r0, r0, r5, asr r0
	...
    f8b4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    f8c0:	00560001 	subseq	r0, r6, r1
    f8c4:	00000000 	andeq	r0, r0, r0
    f8c8:	64000000 	strvs	r0, [r0], #-0
    f8cc:	6608002d 	strvs	r0, [r8], -sp, lsr #32
    f8d0:	0208002d 	andeq	r0, r8, #45	; 0x2d
    f8d4:	66007d00 	strvs	r7, [r0], -r0, lsl #26
    f8d8:	6808002d 	stmdavs	r8, {r0, r2, r3, r5}
    f8dc:	0208002d 	andeq	r0, r8, #45	; 0x2d
    f8e0:	68087d00 	stmdavs	r8, {r8, sl, fp, ip, sp, lr}
    f8e4:	ac08002d 	stcge	0, cr0, [r8], {45}	; 0x2d
    f8e8:	0208002d 	andeq	r0, r8, #45	; 0x2d
    f8ec:	ac287d00 	stcge	13, cr7, [r8], #-0
    f8f0:	c008002d 	andgt	r0, r8, sp, lsr #32
    f8f4:	0208002d 	andeq	r0, r8, #45	; 0x2d
    f8f8:	00087d00 	andeq	r7, r8, r0, lsl #26
    f8fc:	00000000 	andeq	r0, r0, r0
    f900:	01000000 	mrseq	r0, (UNDEF: 0)
    f904:	00000000 	andeq	r0, r0, r0
    f908:	002d6804 	eoreq	r6, sp, r4, lsl #16
    f90c:	002da208 	eoreq	sl, sp, r8, lsl #4
    f910:	30000208 	andcc	r0, r0, r8, lsl #4
    f914:	002da29f 	mlaeq	sp, pc, r2, sl	; <UNPREDICTABLE>
    f918:	002da408 	eoreq	sl, sp, r8, lsl #8
    f91c:	31000208 	tstcc	r0, r8, lsl #4
    f920:	002da49f 	mlaeq	sp, pc, r4, sl	; <UNPREDICTABLE>
    f924:	002daa08 	eoreq	sl, sp, r8, lsl #20
    f928:	30000208 	andcc	r0, r0, r8, lsl #4
    f92c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    f93c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    f948:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    f94c:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    f960:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    f96c:	00570001 	subseq	r0, r7, r1
	...
    f980:	01000000 	mrseq	r0, (UNDEF: 0)
    f984:	00005300 	andeq	r5, r0, r0, lsl #6
    f988:	00000000 	andeq	r0, r0, r0
    f98c:	00010000 	andeq	r0, r1, r0
    f990:	00000053 	andeq	r0, r0, r3, asr r0
    f994:	00000000 	andeq	r0, r0, r0
    f998:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    f9a4:	30000200 	andcc	r0, r0, r0, lsl #4
    f9a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    f9ac:	00000000 	andeq	r0, r0, r0
    f9b0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    f9bc:	00000002 	andeq	r0, r0, r2
	...
    f9c8:	9f300002 	svcls	0x00300002
	...
    f9d4:	00550001 	subseq	r0, r5, r1
    f9d8:	00000000 	andeq	r0, r0, r0
    f9dc:	02000000 	andeq	r0, r0, #0
	...
    f9e8:	03000000 	movweq	r0, #0
    f9ec:	9fff0900 	svcls	0x00ff0900
	...
    f9f8:	00560001 	subseq	r0, r6, r1
    f9fc:	00000000 	andeq	r0, r0, r0
    fa00:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    fa04:	4c08002e 	stcmi	0, cr0, [r8], {46}	; 0x2e
    fa08:	0208002e 	andeq	r0, r8, #46	; 0x2e
    fa0c:	4c007d00 	stcmi	13, cr7, [r0], {-0}
    fa10:	6a08002e 	bvs	20fad0 <_Min_Heap_Size+0x20f2d0>
    fa14:	0208002e 	andeq	r0, r8, #46	; 0x2e
    fa18:	6a047d00 	bvs	12ee20 <_Min_Heap_Size+0x12e620>
    fa1c:	6c08002e 	stcvs	0, cr0, [r8], {46}	; 0x2e
    fa20:	0208002e 	andeq	r0, r8, #46	; 0x2e
    fa24:	6c007d00 	stcvs	13, cr7, [r0], {-0}
    fa28:	7008002e 	andvc	r0, r8, lr, lsr #32
    fa2c:	0208002e 	andeq	r0, r8, #46	; 0x2e
    fa30:	70047d00 	andvc	r7, r4, r0, lsl #26
    fa34:	7c08002e 	stcvc	0, cr0, [r8], {46}	; 0x2e
    fa38:	0208002e 	andeq	r0, r8, #46	; 0x2e
    fa3c:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    fa48:	01010000 	mrseq	r0, (UNDEF: 1)
    fa4c:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    fa50:	4208002e 	andmi	r0, r8, #46	; 0x2e
    fa54:	0108002e 	tsteq	r8, lr, lsr #32
    fa58:	2e425000 	cdpcs	0, 4, cr5, cr2, cr0, {0}
    fa5c:	2e460800 	cdpcs	8, 4, cr0, cr6, cr0, {0}
    fa60:	00040800 	andeq	r0, r4, r0, lsl #16
    fa64:	9f5001f3 	svcls	0x005001f3
    fa68:	08002e46 	stmdaeq	r0, {r1, r2, r6, r9, sl, fp, sp}
    fa6c:	08002e4a 	stmdaeq	r0, {r1, r3, r6, r9, sl, fp, sp}
    fa70:	4a520001 	bmi	148fa7c <_Min_Heap_Size+0x148f27c>
    fa74:	7c08002e 	stcvc	0, cr0, [r8], {46}	; 0x2e
    fa78:	0108002e 	tsteq	r8, lr, lsr #32
    fa7c:	00005000 	andeq	r5, r0, r0
    fa80:	00000000 	andeq	r0, r0, r0
    fa84:	00040000 	andeq	r0, r4, r0
    fa88:	00000000 	andeq	r0, r0, r0
    fa8c:	08002e18 	stmdaeq	r0, {r3, r4, r9, sl, fp, sp}
    fa90:	08002e1a 	stmdaeq	r0, {r1, r3, r4, r9, sl, fp, sp}
    fa94:	74030006 	strvc	r0, [r3], #-6
    fa98:	9f200089 	svcls	0x00200089
    fa9c:	08002e1a 	stmdaeq	r0, {r1, r3, r4, r9, sl, fp, sp}
    faa0:	08002e1e 	stmdaeq	r0, {r1, r2, r3, r4, r9, sl, fp, sp}
    faa4:	1e530001 	cdpne	0, 5, cr0, cr3, cr1, {0}
    faa8:	7c08002e 	stcvc	0, cr0, [r8], {46}	; 0x2e
    faac:	0108002e 	tsteq	r8, lr, lsr #32
    fab0:	00005200 	andeq	r5, r0, r0, lsl #4
    fab4:	00000000 	andeq	r0, r0, r0
    fab8:	02030000 	andeq	r0, r3, #0
    fabc:	00000002 	andeq	r0, r0, r2
    fac0:	2e220000 	cdpcs	0, 2, cr0, cr2, cr0, {0}
    fac4:	2e2c0800 	cdpcs	8, 2, cr0, cr12, cr0, {0}
    fac8:	00010800 	andeq	r0, r1, r0, lsl #16
    facc:	002e2c52 	eoreq	r2, lr, r2, asr ip
    fad0:	002e4008 	eoreq	r4, lr, r8
    fad4:	50000108 	andpl	r0, r0, r8, lsl #2
    fad8:	08002e40 	stmdaeq	r0, {r6, r9, sl, fp, sp}
    fadc:	08002e4a 	stmdaeq	r0, {r1, r3, r6, r9, sl, fp, sp}
    fae0:	4a520001 	bmi	148faec <_Min_Heap_Size+0x148f2ec>
    fae4:	7c08002e 	stcvc	0, cr0, [r8], {46}	; 0x2e
    fae8:	0108002e 	tsteq	r8, lr, lsr #32
    faec:	00005000 	andeq	r5, r0, r0
    faf0:	00000000 	andeq	r0, r0, r0
    faf4:	00010000 	andeq	r0, r1, r0
    faf8:	08002dee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r8, sl, fp, sp}
    fafc:	08002dfe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, sl, fp, sp}
    fb00:	00520001 	subseq	r0, r2, r1
	...
    fb0c:	ca000000 	bgt	fb14 <_Min_Heap_Size+0xf314>
    fb10:	d608002d 	strle	r0, [r8], -sp, lsr #32
    fb14:	0108002d 	tsteq	r8, sp, lsr #32
    fb18:	2dd65100 	ldfcse	f5, [r6]
    fb1c:	2dfe0800 	ldclcs	8, cr0, [lr]
    fb20:	00010800 	andeq	r0, r1, r0, lsl #16
    fb24:	00000052 	andeq	r0, r0, r2, asr r0
	...
    fb30:	002de000 	eoreq	lr, sp, r0
    fb34:	002df608 	eoreq	pc, sp, r8, lsl #12
    fb38:	53000108 	movwpl	r0, #264	; 0x108
    fb3c:	08002df6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r8, sl, fp, sp}
    fb40:	08002dfe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, sl, fp, sp}
    fb44:	00720002 	rsbseq	r0, r2, r2
	...
    fb50:	00000004 	andeq	r0, r0, r4
    fb54:	2dc00000 	stclcs	0, cr0, [r0]
    fb58:	2dd40800 	ldclcs	8, cr0, [r4]
    fb5c:	00040800 	andeq	r0, r4, r0, lsl #16
    fb60:	9f80000a 	svcls	0x0080000a
    fb64:	08002dd4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, fp, sp}
    fb68:	08002de0 	stmdaeq	r0, {r5, r6, r7, r8, sl, fp, sp}
    fb6c:	fe530001 	cdp2	0, 5, cr0, cr3, cr1, {0}
    fb70:	1808002d 	stmdane	r8, {r0, r2, r3, r5}
    fb74:	0408002e 	streq	r0, [r8], #-46	; 0xffffffd2
    fb78:	80000a00 	andhi	r0, r0, r0, lsl #20
    fb7c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    fb8c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    fb98:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    fb9c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    fbb4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    fbc0:	00530001 	subseq	r0, r3, r1
    fbc4:	00000000 	andeq	r0, r0, r0
    fbc8:	04000000 	streq	r0, [r0], #-0
    fbcc:	5001f300 	andpl	pc, r1, r0, lsl #6
    fbd0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    fbd4:	00000000 	andeq	r0, r0, r0
    fbd8:	53000100 	movwpl	r0, #256	; 0x100
	...
    fbf0:	00010000 	andeq	r0, r1, r0
    fbf4:	00000051 	andeq	r0, r0, r1, asr r0
    fbf8:	00000000 	andeq	r0, r0, r0
    fbfc:	f3000400 	vshl.u8	d0, d0, d0
    fc00:	009f5101 	addseq	r5, pc, r1, lsl #2
    fc04:	00000000 	andeq	r0, r0, r0
    fc08:	01000000 	mrseq	r0, (UNDEF: 0)
    fc0c:	00005100 	andeq	r5, r0, r0, lsl #2
    fc10:	00000000 	andeq	r0, r0, r0
    fc14:	00010000 	andeq	r0, r1, r0
	...
    fc24:	00020000 	andeq	r0, r2, r0
    fc28:	00009f30 	andeq	r9, r0, r0, lsr pc
    fc2c:	00000000 	andeq	r0, r0, r0
    fc30:	00010000 	andeq	r0, r1, r0
    fc34:	00000050 	andeq	r0, r0, r0, asr r0
    fc38:	00000000 	andeq	r0, r0, r0
    fc3c:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    fc48:	9f300002 	svcls	0x00300002
	...
    fc54:	08002f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp, sp}
    fc58:	08002f54 	stmdaeq	r0, {r2, r4, r6, r8, r9, sl, fp, sp}
    fc5c:	007d0002 	rsbseq	r0, sp, r2
    fc60:	08002f54 	stmdaeq	r0, {r2, r4, r6, r8, r9, sl, fp, sp}
    fc64:	08002f96 	stmdaeq	r0, {r1, r2, r4, r7, r8, r9, sl, fp, sp}
    fc68:	107d0002 	rsbsne	r0, sp, r2
    fc6c:	08002f96 	stmdaeq	r0, {r1, r2, r4, r7, r8, r9, sl, fp, sp}
    fc70:	08002fa0 	stmdaeq	r0, {r5, r7, r8, r9, sl, fp, sp}
    fc74:	007d0002 	rsbseq	r0, sp, r2
	...
    fc88:	2f500000 	svccs	0x00500000
    fc8c:	2f680800 	svccs	0x00680800
    fc90:	00010800 	andeq	r0, r1, r0, lsl #16
    fc94:	002f6850 	eoreq	r6, pc, r0, asr r8	; <UNPREDICTABLE>
    fc98:	002f6a08 	eoreq	r6, pc, r8, lsl #20
    fc9c:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    fca0:	08002f6a 	stmdaeq	r0, {r1, r3, r5, r6, r8, r9, sl, fp, sp}
    fca4:	08002f75 	stmdaeq	r0, {r0, r2, r4, r5, r6, r8, r9, sl, fp, sp}
    fca8:	75500001 	ldrbvc	r0, [r0, #-1]
    fcac:	9608002f 	strls	r0, [r8], -pc, lsr #32
    fcb0:	0108002f 	tsteq	r8, pc, lsr #32
    fcb4:	2f965400 	svccs	0x00965400
    fcb8:	2fa00800 	svccs	0x00a00800
    fcbc:	00010800 	andeq	r0, r1, r0, lsl #16
    fcc0:	00000050 	andeq	r0, r0, r0, asr r0
    fcc4:	00000000 	andeq	r0, r0, r0
    fcc8:	00000200 	andeq	r0, r0, r0, lsl #4
    fccc:	50000000 	andpl	r0, r0, r0
    fcd0:	5a08002f 	bpl	20fd94 <_Min_Heap_Size+0x20f594>
    fcd4:	0108002f 	tsteq	r8, pc, lsr #32
    fcd8:	2f5a5000 	svccs	0x005a5000
    fcdc:	2f960800 	svccs	0x00960800
    fce0:	00010800 	andeq	r0, r1, r0, lsl #16
    fce4:	002f9655 	eoreq	r9, pc, r5, asr r6	; <UNPREDICTABLE>
    fce8:	002fa008 	eoreq	sl, pc, r8
    fcec:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    fcf8:	2f5a0001 	svccs	0x005a0001
    fcfc:	2f960800 	svccs	0x00960800
    fd00:	00010800 	andeq	r0, r1, r0, lsl #16
    fd04:	00000055 	andeq	r0, r0, r5, asr r0
    fd08:	00000000 	andeq	r0, r0, r0
    fd0c:	002e7c00 	eoreq	r7, lr, r0, lsl #24
    fd10:	002e7e08 	eoreq	r7, lr, r8, lsl #28
    fd14:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    fd18:	002e7e00 	eoreq	r7, lr, r0, lsl #28
    fd1c:	002f5008 	eoreq	r5, pc, r8
    fd20:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    fd24:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    fd38:	002e7c00 	eoreq	r7, lr, r0, lsl #24
    fd3c:	002e8a08 	eoreq	r8, lr, r8, lsl #20
    fd40:	50000108 	andpl	r0, r0, r8, lsl #2
    fd44:	08002e8a 	stmdaeq	r0, {r1, r3, r7, r9, sl, fp, sp}
    fd48:	08002e9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r9, sl, fp, sp}
    fd4c:	9e540001 	cdpls	0, 5, cr0, cr4, cr1, {0}
    fd50:	a008002e 	andge	r0, r8, lr, lsr #32
    fd54:	0108002e 	tsteq	r8, lr, lsr #32
    fd58:	2ea05000 	cdpcs	0, 10, cr5, cr0, cr0, {0}
    fd5c:	2ec20800 	cdpcs	8, 12, cr0, cr2, cr0, {0}
    fd60:	00010800 	andeq	r0, r1, r0, lsl #16
    fd64:	002ec254 	eoreq	ip, lr, r4, asr r2
    fd68:	002ec408 	eoreq	ip, lr, r8, lsl #8
    fd6c:	70000308 	andvc	r0, r0, r8, lsl #6
    fd70:	2ec49f08 	cdpcs	15, 12, cr9, cr4, cr8, {0}
    fd74:	2f500800 	svccs	0x00500800
    fd78:	00010800 	andeq	r0, r1, r0, lsl #16
    fd7c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    fd88:	be000000 	cdplt	0, 0, cr0, cr0, cr0, {0}
    fd8c:	c008002e 	andgt	r0, r8, lr, lsr #32
    fd90:	0108002e 	tsteq	r8, lr, lsr #32
    fd94:	2eca5300 	cdpcs	3, 12, cr5, cr10, cr0, {0}
    fd98:	2f200800 	svccs	0x00200800
    fd9c:	00010800 	andeq	r0, r1, r0, lsl #16
    fda0:	002f3853 	eoreq	r3, pc, r3, asr r8	; <UNPREDICTABLE>
    fda4:	002f5008 	eoreq	r5, pc, r8
    fda8:	53000108 	movwpl	r0, #264	; 0x108
	...
    fdb4:	00000001 	andeq	r0, r0, r1
    fdb8:	00000000 	andeq	r0, r0, r0
    fdbc:	08002eba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r9, sl, fp, sp}
    fdc0:	08002ec0 	stmdaeq	r0, {r6, r7, r9, sl, fp, sp}
    fdc4:	74030006 	strvc	r0, [r3], #-6
    fdc8:	9f200089 	svcls	0x00200089
    fdcc:	08002eca 	stmdaeq	r0, {r1, r3, r6, r7, r9, sl, fp, sp}
    fdd0:	08002ecc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, fp, sp}
    fdd4:	ce510001 	cdpgt	0, 5, cr0, cr1, cr1, {0}
    fdd8:	0008002e 	andeq	r0, r8, lr, lsr #32
    fddc:	0108002f 	tsteq	r8, pc, lsr #32
    fde0:	2f385100 	svccs	0x00385100
    fde4:	2f500800 	svccs	0x00500800
    fde8:	00010800 	andeq	r0, r1, r0, lsl #16
    fdec:	00000051 	andeq	r0, r0, r1, asr r0
    fdf0:	00000000 	andeq	r0, r0, r0
    fdf4:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    fdf8:	fe08002e 	cdp2	0, 0, cr0, cr8, cr14, {1}
    fdfc:	0108002e 	tsteq	r8, lr, lsr #32
    fe00:	00005200 	andeq	r5, r0, r0, lsl #4
    fe04:	00000000 	andeq	r0, r0, r0
    fe08:	00040000 	andeq	r0, r4, r0
    fe0c:	00000000 	andeq	r0, r0, r0
    fe10:	08002e7e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r9, sl, fp, sp}
    fe14:	08002ee6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, sl, fp, sp}
    fe18:	9f300002 	svcls	0x00300002
    fe1c:	08002ee6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, sl, fp, sp}
    fe20:	08002f2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, fp, sp}
    fe24:	2c550001 	mrrccs	0, 0, r0, r5, cr1
    fe28:	5008002f 	andpl	r0, r8, pc, lsr #32
    fe2c:	0208002f 	andeq	r0, r8, #47	; 0x2f
    fe30:	009f3000 	addseq	r3, pc, r0
	...
    fe3c:	94000000 	strls	r0, [r0], #-0
    fe40:	9e08002e 	cdpls	0, 0, cr0, cr8, cr14, {1}
    fe44:	0108002e 	tsteq	r8, lr, lsr #32
    fe48:	2ec05300 	cdpcs	3, 12, cr5, cr0, cr0, {0}
    fe4c:	2ec40800 	cdpcs	8, 12, cr0, cr4, cr0, {0}
    fe50:	00010800 	andeq	r0, r1, r0, lsl #16
    fe54:	00000053 	andeq	r0, r0, r3, asr r0
    fe58:	00000000 	andeq	r0, r0, r0
    fe5c:	00312000 	eorseq	r2, r1, r0
    fe60:	00312208 	eorseq	r2, r1, r8, lsl #4
    fe64:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    fe68:	00312200 	eorseq	r2, r1, r0, lsl #4
    fe6c:	00323408 	eorseq	r3, r2, r8, lsl #8
    fe70:	7d000208 	sfmvc	f0, 4, [r0, #-32]	; 0xffffffe0
    fe74:	00000008 	andeq	r0, r0, r8
	...
    fe80:	00010000 	andeq	r0, r1, r0
    fe84:	20000000 	andcs	r0, r0, r0
    fe88:	2c080031 	stccs	0, cr0, [r8], {49}	; 0x31
    fe8c:	01080031 	tsteq	r8, r1, lsr r0
    fe90:	312c5000 			; <UNDEFINED> instruction: 0x312c5000
    fe94:	313e0800 	teqcc	lr, r0, lsl #16
    fe98:	00010800 	andeq	r0, r1, r0, lsl #16
    fe9c:	00314054 	eorseq	r4, r1, r4, asr r0
    fea0:	0031ea08 	eorseq	lr, r1, r8, lsl #20
    fea4:	54000108 	strpl	r0, [r0], #-264	; 0xfffffef8
    fea8:	08003206 	stmdaeq	r0, {r1, r2, r9, ip, sp}
    feac:	08003214 	stmdaeq	r0, {r2, r4, r9, ip, sp}
    feb0:	14540001 	ldrbne	r0, [r4], #-1
    feb4:	16080032 			; <UNDEFINED> instruction: 0x16080032
    feb8:	03080032 	movweq	r0, #32818	; 0x8032
    febc:	9f017000 	svcls	0x00017000
	...
    fecc:	0800315a 	stmdaeq	r0, {r1, r3, r4, r6, r8, ip, sp}
    fed0:	080031d2 	stmdaeq	r0, {r1, r4, r6, r7, r8, ip, sp}
    fed4:	06530001 	ldrbeq	r0, [r3], -r1
    fed8:	0c080032 	stceq	0, cr0, [r8], {50}	; 0x32
    fedc:	01080032 	tsteq	r8, r2, lsr r0
    fee0:	00005300 	andeq	r5, r0, r0, lsl #6
    fee4:	00000000 	andeq	r0, r0, r0
    fee8:	00010000 	andeq	r0, r1, r0
    feec:	31ea0000 	mvncc	r0, r0
    fef0:	32010800 	andcc	r0, r1, #0, 16
    fef4:	00010800 	andeq	r0, r1, r0, lsl #16
    fef8:	00321a50 	eorseq	r1, r2, r0, asr sl
    fefc:	00323408 	eorseq	r3, r2, r8, lsl #8
    ff00:	50000108 	andpl	r0, r0, r8, lsl #2
	...
    ff10:	08003216 	stmdaeq	r0, {r1, r2, r4, r9, ip, sp}
    ff14:	0800321a 	stmdaeq	r0, {r1, r3, r4, r9, ip, sp}
    ff18:	1a500001 	bne	140ff24 <_Min_Heap_Size+0x140f724>
    ff1c:	20080032 	andcs	r0, r8, r2, lsr r0
    ff20:	06080032 			; <UNDEFINED> instruction: 0x06080032
    ff24:	73007400 	movwvc	r7, #1024	; 0x400
    ff28:	009f1c00 	addseq	r1, pc, r0, lsl #24
	...
    ff38:	00314a00 	eorseq	r4, r1, r0, lsl #20
    ff3c:	00314e08 	eorseq	r4, r1, r8, lsl #28
    ff40:	53000108 	movwpl	r0, #264	; 0x108
    ff44:	08003150 	stmdaeq	r0, {r4, r6, r8, ip, sp}
    ff48:	0800315a 	stmdaeq	r0, {r1, r3, r4, r6, r8, ip, sp}
    ff4c:	0c530001 	mrrceq	0, 0, r0, r3, cr1
    ff50:	34080032 	strcc	r0, [r8], #-50	; 0xffffffce
    ff54:	01080032 	tsteq	r8, r2, lsr r0
    ff58:	00005300 	andeq	r5, r0, r0, lsl #6
    ff5c:	00000000 	andeq	r0, r0, r0
    ff60:	01010000 	mrseq	r0, (UNDEF: 1)
    ff64:	00000000 	andeq	r0, r0, r0
    ff68:	08003196 	stmdaeq	r0, {r1, r2, r4, r7, r8, ip, sp}
    ff6c:	080031ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r8, ip, sp}
    ff70:	06540001 	ldrbeq	r0, [r4], -r1
    ff74:	14080032 	strne	r0, [r8], #-50	; 0xffffffce
    ff78:	01080032 	tsteq	r8, r2, lsr r0
    ff7c:	32145400 	andscc	r5, r4, #0, 8
    ff80:	32160800 	andscc	r0, r6, #0, 16
    ff84:	00030800 	andeq	r0, r3, r0, lsl #16
    ff88:	009f0170 	addseq	r0, pc, r0, ror r1	; <UNPREDICTABLE>
	...
    ff94:	0031d601 	eorseq	sp, r1, r1, lsl #12
    ff98:	0031ea08 	eorseq	lr, r1, r8, lsl #20
    ff9c:	53000108 	movwpl	r0, #264	; 0x108
	...
    ffa8:	080030f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, ip, sp}
    ffac:	080030f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, ip, sp}
    ffb0:	007d0002 	rsbseq	r0, sp, r2
    ffb4:	080030f6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, ip, sp}
    ffb8:	08003120 	stmdaeq	r0, {r5, r8, ip, sp}
    ffbc:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    ffc8:	31180002 	tstcc	r8, r2
    ffcc:	311e0800 	tstcc	lr, r0, lsl #16
    ffd0:	00020800 	andeq	r0, r2, r0, lsl #16
    ffd4:	00009f30 	andeq	r9, r0, r0, lsr pc
    ffd8:	00000000 	andeq	r0, r0, r0
    ffdc:	00010000 	andeq	r0, r1, r0
    ffe0:	0800307e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, ip, sp}
    ffe4:	08003082 	stmdaeq	r0, {r1, r7, ip, sp}
    ffe8:	9f300002 	svcls	0x00300002
	...
    fff4:	08003270 	stmdaeq	r0, {r4, r5, r6, r9, ip, sp}
    fff8:	08003272 	stmdaeq	r0, {r1, r4, r5, r6, r9, ip, sp}
    fffc:	007d0002 	rsbseq	r0, sp, r2
   10000:	08003272 	stmdaeq	r0, {r1, r4, r5, r6, r9, ip, sp}
   10004:	080032c0 	stmdaeq	r0, {r6, r7, r9, ip, sp}
   10008:	107d0002 	rsbsne	r0, sp, r2
	...
   10014:	08002fa0 	stmdaeq	r0, {r5, r7, r8, r9, sl, fp, sp}
   10018:	08002fa2 	stmdaeq	r0, {r1, r5, r7, r8, r9, sl, fp, sp}
   1001c:	007d0002 	rsbseq	r0, sp, r2
   10020:	08002fa2 	stmdaeq	r0, {r1, r5, r7, r8, r9, sl, fp, sp}
   10024:	08002fbe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, sp}
   10028:	087d0002 	ldmdaeq	sp!, {r1}^
   1002c:	08002fbe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r7, r8, r9, sl, fp, sp}
   10030:	08002fc0 	stmdaeq	r0, {r6, r7, r8, r9, sl, fp, sp}
   10034:	007d0002 	rsbseq	r0, sp, r2
	...
   10040:	01020200 	mrseq	r0, R10_usr
   10044:	01010101 	tsteq	r1, r1, lsl #2
   10048:	01010101 	tsteq	r1, r1, lsl #2
   1004c:	00000001 	andeq	r0, r0, r1
   10050:	08002ffc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
   10054:	08002ffc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
   10058:	fc500001 	mrrc2	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
   1005c:	0408002f 	streq	r0, [r8], #-47	; 0xffffffd1
   10060:	03080030 	movweq	r0, #32816	; 0x8030
   10064:	9f7c7000 	svcls	0x007c7000
   10068:	08003004 	stmdaeq	r0, {r2, ip, sp}
   1006c:	0800300c 	stmdaeq	r0, {r2, r3, ip, sp}
   10070:	78700003 	ldmdavc	r0!, {r0, r1}^
   10074:	00300c9f 	mlaseq	r0, pc, ip, r0	; <UNPREDICTABLE>
   10078:	00301208 	eorseq	r1, r0, r8, lsl #4
   1007c:	70000308 	andvc	r0, r0, r8, lsl #6
   10080:	30129f74 	andscc	r9, r2, r4, ror pc
   10084:	30160800 	andscc	r0, r6, r0, lsl #16
   10088:	00030800 	andeq	r0, r3, r0, lsl #16
   1008c:	169f6070 			; <UNDEFINED> instruction: 0x169f6070
   10090:	1e080030 	mcrne	0, 0, r0, cr8, cr0, {1}
   10094:	03080030 	movweq	r0, #32816	; 0x8030
   10098:	9f5c7000 	svcls	0x005c7000
   1009c:	0800301e 	stmdaeq	r0, {r1, r2, r3, r4, ip, sp}
   100a0:	08003020 	stmdaeq	r0, {r5, ip, sp}
   100a4:	bc700004 	ldcllt	0, cr0, [r0], #-16
   100a8:	30209f7f 	eorcc	r9, r0, pc, ror pc
   100ac:	30280800 	eorcc	r0, r8, r0, lsl #16
   100b0:	00010800 	andeq	r0, r1, r0, lsl #16
   100b4:	00000050 	andeq	r0, r0, r0, asr r0
	...
   100c0:	002ffc00 	eoreq	pc, pc, r0, lsl #24
   100c4:	00300808 	eorseq	r0, r0, r8, lsl #16
   100c8:	51000108 	tstpl	r0, r8, lsl #2
   100cc:	08003008 	stmdaeq	r0, {r3, ip, sp}
   100d0:	08003028 	stmdaeq	r0, {r3, r5, ip, sp}
   100d4:	01f30004 	mvnseq	r0, r4
   100d8:	00009f51 	andeq	r9, r0, r1, asr pc
   100dc:	00000000 	andeq	r0, r0, r0
   100e0:	32c00000 	sbccc	r0, r0, #0
   100e4:	32c20800 	sbccc	r0, r2, #0, 16
   100e8:	00020800 	andeq	r0, r2, r0, lsl #16
   100ec:	32c2007d 	sbccc	r0, r2, #125	; 0x7d
   100f0:	33080800 	movwcc	r0, #34816	; 0x8800
   100f4:	00020800 	andeq	r0, r2, r0, lsl #16
   100f8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
   1010c:	080032c0 	stmdaeq	r0, {r6, r7, r9, ip, sp}
   10110:	080032ca 	stmdaeq	r0, {r1, r3, r6, r7, r9, ip, sp}
   10114:	ca500001 	bgt	1410120 <_Min_Heap_Size+0x140f920>
   10118:	d4080032 	strle	r0, [r8], #-50	; 0xffffffce
   1011c:	01080032 	tsteq	r8, r2, lsr r0
   10120:	32d45300 	sbcscc	r5, r4, #0, 6
   10124:	32e00800 	rsccc	r0, r0, #0, 16
   10128:	00040800 	andeq	r0, r4, r0, lsl #16
   1012c:	9f5001f3 	svcls	0x005001f3
   10130:	080032e0 	stmdaeq	r0, {r5, r6, r7, r9, ip, sp}
   10134:	080032e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, ip, sp}
   10138:	e8530001 	ldmda	r3, {r0}^
   1013c:	08080032 	stmdaeq	r8, {r1, r4, r5}
   10140:	04080033 	streq	r0, [r8], #-51	; 0xffffffcd
   10144:	5001f300 	andpl	pc, r1, r0, lsl #6
   10148:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
   1014c:	00000000 	andeq	r0, r0, r0
   10150:	da010100 	ble	50558 <_Min_Heap_Size+0x4fd58>
   10154:	de080032 	mcrle	0, 0, r0, cr8, cr2, {1}
   10158:	01080032 	tsteq	r8, r2, lsr r0
   1015c:	00005000 	andeq	r5, r0, r0
	...
   1016c:	00020000 	andeq	r0, r2, r0
   10170:	0000007d 	andeq	r0, r0, sp, ror r0
   10174:	00000000 	andeq	r0, r0, r0
   10178:	00020000 	andeq	r0, r2, r0
   1017c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
   10190:	00010000 	andeq	r0, r1, r0
   10194:	00000050 	andeq	r0, r0, r0, asr r0
   10198:	00000000 	andeq	r0, r0, r0
   1019c:	f3000400 	vshl.u8	d0, d0, d0
   101a0:	009f5001 	addseq	r5, pc, r1
	...
   101b4:	01000000 	mrseq	r0, (UNDEF: 0)
   101b8:	00005100 	andeq	r5, r0, r0, lsl #2
   101bc:	00000000 	andeq	r0, r0, r0
   101c0:	00040000 	andeq	r0, r4, r0
   101c4:	9f5101f3 	svcls	0x005101f3
	...
   101dc:	00520001 	subseq	r0, r2, r1
   101e0:	00000000 	andeq	r0, r0, r0
   101e4:	04000000 	streq	r0, [r0], #-0
   101e8:	5201f300 	andpl	pc, r1, #0, 6
   101ec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
   101fc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
   10208:	7d000200 	sfmvc	f0, 4, [r0, #-0]
   1020c:	00000008 	andeq	r0, r0, r8
	...
   1021c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
   10228:	7d000200 	sfmvc	f0, 4, [r0, #-0]
   1022c:	00000008 	andeq	r0, r0, r8
	...
   10240:	50000100 	andpl	r0, r0, r0, lsl #2
	...
   1024c:	01f30004 	mvnseq	r0, r4
   10250:	00009f50 	andeq	r9, r0, r0, asr pc
	...
   10264:	00010000 	andeq	r0, r1, r0
   10268:	00000051 	andeq	r0, r0, r1, asr r0
   1026c:	00000000 	andeq	r0, r0, r0
   10270:	f3000400 	vshl.u8	d0, d0, d0
   10274:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
   10288:	01000000 	mrseq	r0, (UNDEF: 0)
   1028c:	00005000 	andeq	r5, r0, r0
   10290:	00000000 	andeq	r0, r0, r0
   10294:	00040000 	andeq	r0, r4, r0
   10298:	9f5001f3 	svcls	0x005001f3
	...
   102b0:	00500001 	subseq	r0, r0, r1
   102b4:	00000000 	andeq	r0, r0, r0
   102b8:	04000000 	streq	r0, [r0], #-0
   102bc:	5001f300 	andpl	pc, r1, r0, lsl #6
   102c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
   102d0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
   102dc:	7d000200 	sfmvc	f0, 4, [r0, #-0]
   102e0:	00000008 	andeq	r0, r0, r8
	...
   102f4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
   10300:	01f30004 	mvnseq	r0, r4
   10304:	00009f50 	andeq	r9, r0, r0, asr pc
	...
   10314:	00020000 	andeq	r0, r2, r0
   10318:	0000007d 	andeq	r0, r0, sp, ror r0
   1031c:	00000000 	andeq	r0, r0, r0
   10320:	00020000 	andeq	r0, r2, r0
   10324:	0000087d 	andeq	r0, r0, sp, ror r8
	...
   10338:	00010000 	andeq	r0, r1, r0
   1033c:	00000050 	andeq	r0, r0, r0, asr r0
   10340:	00000000 	andeq	r0, r0, r0
   10344:	f3000400 	vshl.u8	d0, d0, d0
   10348:	009f5001 	addseq	r5, pc, r1
	...
   10358:	02000000 	andeq	r0, r0, #0
   1035c:	00007d00 	andeq	r7, r0, r0, lsl #26
   10360:	00000000 	andeq	r0, r0, r0
   10364:	02000000 	andeq	r0, r0, #0
   10368:	000c7d00 	andeq	r7, ip, r0, lsl #26
   1036c:	00000000 	andeq	r0, r0, r0
   10370:	02000000 	andeq	r0, r0, #0
   10374:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
   10388:	01000000 	mrseq	r0, (UNDEF: 0)
   1038c:	00005000 	andeq	r5, r0, r0
   10390:	00000000 	andeq	r0, r0, r0
   10394:	00040000 	andeq	r0, r4, r0
   10398:	9f5001f3 	svcls	0x005001f3
	...
   103a8:	08003358 	stmdaeq	r0, {r3, r4, r6, r8, r9, ip, sp}
   103ac:	0800335a 	stmdaeq	r0, {r1, r3, r4, r6, r8, r9, ip, sp}
   103b0:	5a500001 	bpl	14103bc <_Min_Heap_Size+0x140fbbc>
   103b4:	5c080033 	stcpl	0, cr0, [r8], {51}	; 0x33
   103b8:	04080033 	streq	r0, [r8], #-51	; 0xffffffcd
   103bc:	5001f300 	andpl	pc, r1, r0, lsl #6
   103c0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
   103cc:	00335400 	eorseq	r5, r3, r0, lsl #8
   103d0:	00335608 	eorseq	r5, r3, r8, lsl #12
   103d4:	50000108 	andpl	r0, r0, r8, lsl #2
   103d8:	08003356 	stmdaeq	r0, {r1, r2, r4, r6, r8, r9, ip, sp}
   103dc:	08003358 	stmdaeq	r0, {r3, r4, r6, r8, r9, ip, sp}
   103e0:	01f30004 	mvnseq	r0, r4
   103e4:	00009f50 	andeq	r9, r0, r0, asr pc
	...
   103f0:	334a0000 	movtcc	r0, #40960	; 0xa000
   103f4:	33520800 	cmpcc	r2, #0, 16
   103f8:	00010800 	andeq	r0, r1, r0, lsl #16
   103fc:	00335250 	eorseq	r5, r3, r0, asr r2
   10400:	00335408 	eorseq	r5, r3, r8, lsl #8
   10404:	f3000408 	vshl.u8	d0, d8, d0
   10408:	009f5001 	addseq	r5, pc, r1
	...
   10414:	44000000 	strmi	r0, [r0], #-0
   10418:	48080033 	stmdami	r8, {r0, r1, r4, r5}
   1041c:	01080033 	tsteq	r8, r3, lsr r0
   10420:	33485000 	movtcc	r5, #32768	; 0x8000
   10424:	334a0800 	movtcc	r0, #43008	; 0xa800
   10428:	00040800 	andeq	r0, r4, r0, lsl #16
   1042c:	9f5001f3 	svcls	0x005001f3
	...
   10438:	08003328 	stmdaeq	r0, {r3, r5, r8, r9, ip, sp}
   1043c:	0800332a 	stmdaeq	r0, {r1, r3, r5, r8, r9, ip, sp}
   10440:	007d0002 	rsbseq	r0, sp, r2
   10444:	0800332a 	stmdaeq	r0, {r1, r3, r5, r8, r9, ip, sp}
   10448:	08003344 	stmdaeq	r0, {r2, r6, r8, r9, ip, sp}
   1044c:	107d0002 	rsbsne	r0, sp, r2
	...
   1045c:	08003328 	stmdaeq	r0, {r3, r5, r8, r9, ip, sp}
   10460:	08003332 	stmdaeq	r0, {r1, r4, r5, r8, r9, ip, sp}
   10464:	32500001 	subscc	r0, r0, #1
   10468:	44080033 	strmi	r0, [r8], #-51	; 0xffffffcd
   1046c:	04080033 	streq	r0, [r8], #-51	; 0xffffffcd
   10470:	5001f300 	andpl	pc, r1, r0, lsl #6
   10474:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
   10480:	00000101 	andeq	r0, r0, r1, lsl #2
   10484:	00332800 	eorseq	r2, r3, r0, lsl #16
   10488:	00333208 	eorseq	r3, r3, r8, lsl #4
   1048c:	51000108 	tstpl	r0, r8, lsl #2
   10490:	08003332 	stmdaeq	r0, {r1, r4, r5, r8, r9, ip, sp}
   10494:	08003332 	stmdaeq	r0, {r1, r4, r5, r8, r9, ip, sp}
   10498:	32540001 	subscc	r0, r4, #1
   1049c:	36080033 			; <UNDEFINED> instruction: 0x36080033
   104a0:	03080033 	movweq	r0, #32819	; 0x8033
   104a4:	9f017400 	svcls	0x00017400
   104a8:	08003336 	stmdaeq	r0, {r1, r2, r4, r5, r8, r9, ip, sp}
   104ac:	08003344 	stmdaeq	r0, {r2, r6, r8, r9, ip, sp}
   104b0:	00540001 	subseq	r0, r4, r1
	...
   104bc:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
   104c0:	32080033 	andcc	r0, r8, #51	; 0x33
   104c4:	01080033 	tsteq	r8, r3, lsr r0
   104c8:	33325200 	teqcc	r2, #0, 4
   104cc:	33440800 	movtcc	r0, #18432	; 0x4800
   104d0:	00010800 	andeq	r0, r1, r0, lsl #16
   104d4:	00000056 	andeq	r0, r0, r6, asr r0
   104d8:	00000000 	andeq	r0, r0, r0
   104dc:	00000300 	andeq	r0, r0, r0, lsl #6
   104e0:	00332e00 	eorseq	r2, r3, r0, lsl #28
   104e4:	00333208 	eorseq	r3, r3, r8, lsl #4
   104e8:	30000208 	andcc	r0, r0, r8, lsl #4
   104ec:	0033329f 	mlaseq	r3, pc, r2, r3	; <UNPREDICTABLE>
   104f0:	00334408 	eorseq	r4, r3, r8, lsl #8
   104f4:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
   10500:	08003308 	stmdaeq	r0, {r3, r8, r9, ip, sp}
   10504:	0800330a 	stmdaeq	r0, {r1, r3, r8, r9, ip, sp}
   10508:	007d0002 	rsbseq	r0, sp, r2
   1050c:	0800330a 	stmdaeq	r0, {r1, r3, r8, r9, ip, sp}
   10510:	08003328 	stmdaeq	r0, {r3, r5, r8, r9, ip, sp}
   10514:	107d0002 	rsbsne	r0, sp, r2
	...
   10524:	08003308 	stmdaeq	r0, {r3, r8, r9, ip, sp}
   10528:	08003312 	stmdaeq	r0, {r1, r4, r8, r9, ip, sp}
   1052c:	12500001 	subsne	r0, r0, #1
   10530:	28080033 	stmdacs	r8, {r0, r1, r4, r5}
   10534:	04080033 	streq	r0, [r8], #-51	; 0xffffffcd
   10538:	5001f300 	andpl	pc, r1, r0, lsl #6
   1053c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
   1054c:	00330800 	eorseq	r0, r3, r0, lsl #16
   10550:	00331508 	eorseq	r1, r3, r8, lsl #10
   10554:	51000108 	tstpl	r0, r8, lsl #2
   10558:	08003315 	stmdaeq	r0, {r0, r2, r4, r8, r9, ip, sp}
   1055c:	08003318 	stmdaeq	r0, {r3, r4, r8, r9, ip, sp}
   10560:	18540001 	ldmdane	r4, {r0}^
   10564:	1c080033 	stcne	0, cr0, [r8], {51}	; 0x33
   10568:	03080033 	movweq	r0, #32819	; 0x8033
   1056c:	9f017100 	svcls	0x00017100
   10570:	0800331c 	stmdaeq	r0, {r2, r3, r4, r8, r9, ip, sp}
   10574:	08003328 	stmdaeq	r0, {r3, r5, r8, r9, ip, sp}
   10578:	00510001 	subseq	r0, r1, r1
	...
   10584:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
   10588:	12080033 	andne	r0, r8, #51	; 0x33
   1058c:	01080033 	tsteq	r8, r3, lsr r0
   10590:	33125200 	tstcc	r2, #0, 4
   10594:	33280800 			; <UNDEFINED> instruction: 0x33280800
   10598:	00010800 	andeq	r0, r1, r0, lsl #16
   1059c:	00000056 	andeq	r0, r0, r6, asr r0
   105a0:	00000000 	andeq	r0, r0, r0
   105a4:	00000300 	andeq	r0, r0, r0, lsl #6
   105a8:	00330e00 	eorseq	r0, r3, r0, lsl #28
   105ac:	00331208 	eorseq	r1, r3, r8, lsl #4
   105b0:	30000208 	andcc	r0, r0, r8, lsl #4
   105b4:	0033129f 	mlaseq	r3, pc, r2, r1	; <UNPREDICTABLE>
   105b8:	00332808 	eorseq	r2, r3, r8, lsl #16
   105bc:	55000108 	strpl	r0, [r0, #-264]	; 0xfffffef8
	...
   105d0:	007d0002 	rsbseq	r0, sp, r2
	...
   105dc:	087d0002 	ldmdaeq	sp!, {r1}^
	...
   105f4:	00500001 	subseq	r0, r0, r1
   105f8:	00000000 	andeq	r0, r0, r0
   105fc:	04000000 	streq	r0, [r0], #-0
   10600:	5001f300 	andpl	pc, r1, r0, lsl #6
   10604:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
   10614:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
   10620:	7d000200 	sfmvc	f0, 4, [r0, #-0]
   10624:	00000008 	andeq	r0, r0, r8
	...
   10638:	50000100 	andpl	r0, r0, r0, lsl #2
	...
   10644:	01f30004 	mvnseq	r0, r4
   10648:	00009f50 	andeq	r9, r0, r0, asr pc
	...
   1065c:	00010000 	andeq	r0, r1, r0
   10660:	00000051 	andeq	r0, r0, r1, asr r0
   10664:	00000000 	andeq	r0, r0, r0
   10668:	f3000400 	vshl.u8	d0, d0, d0
   1066c:	009f5101 	addseq	r5, pc, r1, lsl #2
   10670:	00000000 	andeq	r0, r0, r0
   10674:	Address 0x0000000000010674 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000007c 	andeq	r0, r0, ip, ror r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
}
   c:	00000000 	andeq	r0, r0, r0
  10:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
  14:	00000044 	andeq	r0, r0, r4, asr #32
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	08000608 	stmdaeq	r0, {r3, r9, sl}
  1c:	00000018 	andeq	r0, r0, r8, lsl r0
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	08000620 	stmdaeq	r0, {r5, r9, sl}
  24:	00000020 	andeq	r0, r0, r0, lsr #32
}
  28:	00000000 	andeq	r0, r0, r0
  2c:	00000020 	andeq	r0, r0, r0, lsr #32
  30:	00000000 	andeq	r0, r0, r0
    if (status != HAL_OK)
  34:	0000004c 	andeq	r0, r0, ip, asr #32
      uwTickFreq = prevTickFreq;
  38:	00000000 	andeq	r0, r0, r0
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	00000000 	andeq	r0, r0, r0
  44:	00000018 	andeq	r0, r0, r8, lsl r0
  48:	00000000 	andeq	r0, r0, r0
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
  4c:	00000018 	andeq	r0, r0, r8, lsl r0
            while( pxBlock != pxEnd )
  50:	00000000 	andeq	r0, r0, r0
  54:	00000018 	andeq	r0, r0, r8, lsl r0
                if( pxBlock->xBlockSize > xMaxSize )
  58:	00000000 	andeq	r0, r0, r0
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
                if( pxBlock->xBlockSize < xMinSize )
  60:	00000000 	andeq	r0, r0, r0
                    xMinSize = pxBlock->xBlockSize;
  64:	00000018 	andeq	r0, r0, r8, lsl r0
  68:	08000640 	stmdaeq	r0, {r6, r9, sl}
  6c:	0000002c 	andeq	r0, r0, ip, lsr #32
  70:	00000000 	andeq	r0, r0, r0
  74:	000000a8 	andeq	r0, r0, r8, lsr #1
	...
  80:	00000074 	andeq	r0, r0, r4, ror r0
  84:	127c0002 	rsbsne	r0, ip, #2
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	0800066c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl}
  94:	00000014 	andeq	r0, r0, r4, lsl r0
  98:	00000000 	andeq	r0, r0, r0
  9c:	00000014 	andeq	r0, r0, r4, lsl r0
  a0:	08000680 	stmdaeq	r0, {r7, r9, sl}
  a4:	00000014 	andeq	r0, r0, r4, lsl r0
  a8:	08000694 	stmdaeq	r0, {r2, r4, r7, r9, sl}
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
  ac:	00000014 	andeq	r0, r0, r4, lsl r0
  b0:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
      huart->hdmatx->XferAbortCallback = NULL;
  b4:	00000014 	andeq	r0, r0, r4, lsl r0
      huart->hdmarx->XferAbortCallback = NULL;
  b8:	080006bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl}
  bc:	00000008 	andeq	r0, r0, r8
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
  c0:	080006c4 	stmdaeq	r0, {r2, r6, r7, r9, sl}
  c4:	00000002 	andeq	r0, r0, r2
  c8:	080006c6 	stmdaeq	r0, {r1, r2, r6, r7, r9, sl}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
  cc:	00000008 	andeq	r0, r0, r8
  d0:	080006ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, sl}
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
  d4:	00000016 	andeq	r0, r0, r6, lsl r0
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
  d8:	080006e4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl}
  dc:	00000010 	andeq	r0, r0, r0, lsl r0
  e0:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
    if (huart->hdmarx != NULL)
  e4:	00000018 	andeq	r0, r0, r8, lsl r0
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
  e8:	0800070c 	stmdaeq	r0, {r2, r3, r8, r9, sl}
        huart->hdmarx->XferAbortCallback = NULL;
  ec:	00000018 	andeq	r0, r0, r8, lsl r0
	...
    huart->ErrorCode = HAL_UART_ERROR_NONE;
  f8:	0000001c 	andeq	r0, r0, ip, lsl r0
    huart->gState  = HAL_UART_STATE_READY;
  fc:	1cb40002 	ldcne	0, cr0, [r4], #8
    huart->RxState = HAL_UART_STATE_READY;
 100:	00040000 	andeq	r0, r4, r0
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 104:	00000000 	andeq	r0, r0, r0
    HAL_UART_AbortCpltCallback(huart);
 108:	08000724 	stmdaeq	r0, {r2, r5, r8, r9, sl}
 10c:	0000004c 	andeq	r0, r0, ip, asr #32
	...
}
 118:	0000002c 	andeq	r0, r0, ip, lsr #32
 11c:	1fbc0002 	svcne	0x00bc0002
 120:	00040000 	andeq	r0, r4, r0
 124:	00000000 	andeq	r0, r0, r0
                    taskYIELD_WITHIN_API();
 128:	08000770 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl}
 12c:	00000034 	andeq	r0, r0, r4, lsr r0
 130:	080007a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl}
 134:	00000080 	andeq	r0, r0, r0, lsl #1
 138:	00000000 	andeq	r0, r0, r0
            prvUnlockQueue( pxQueue );
 13c:	00000034 	andeq	r0, r0, r4, lsr r0
	...
            return errQUEUE_FULL;
 148:	0000001c 	andeq	r0, r0, ip, lsl r0
 14c:	2d240002 	stccs	0, cr0, [r4, #-8]!
 150:	00040000 	andeq	r0, r4, r0
 154:	00000000 	andeq	r0, r0, r0
 158:	08000824 	stmdaeq	r0, {r2, r5, fp}
 15c:	00000038 	andeq	r0, r0, r8, lsr r0
	...
 168:	00000204 	andeq	r0, r0, r4, lsl #4
 16c:	300f0002 	andcc	r0, pc, r2
 170:	00040000 	andeq	r0, r4, r0
	...
 17c:	00000020 	andeq	r0, r0, r0, lsr #32
 180:	0800085c 	stmdaeq	r0, {r2, r3, r4, r6, fp}
}
 184:	0000005c 	andeq	r0, r0, ip, asr r0
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
 188:	080008b8 	stmdaeq	r0, {r3, r4, r5, r7, fp}
 18c:	00000060 	andeq	r0, r0, r0, rrx
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
 190:	08000918 	stmdaeq	r0, {r3, r4, r8, fp}
 194:	00000174 	andeq	r0, r0, r4, ror r1
 198:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
 19c:	0000008a 	andeq	r0, r0, sl, lsl #1
 1a0:	00000000 	andeq	r0, r0, r0
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
 1a4:	00000002 	andeq	r0, r0, r2
 1a8:	08000b18 	stmdaeq	r0, {r3, r4, r8, r9, fp}
 1ac:	0000012c 	andeq	r0, r0, ip, lsr #2
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
 1b0:	00000000 	andeq	r0, r0, r0
 1b4:	000000e0 	andeq	r0, r0, r0, ror #1
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
 1b8:	00000000 	andeq	r0, r0, r0
 1bc:	000000fc 	strdeq	r0, [r0], -ip
 1c0:	00000000 	andeq	r0, r0, r0
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
 1c4:	00000124 	andeq	r0, r0, r4, lsr #2
 1c8:	00000000 	andeq	r0, r0, r0
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
 1cc:	00000002 	andeq	r0, r0, r2
 1d0:	00000000 	andeq	r0, r0, r0
 1d4:	00000078 	andeq	r0, r0, r8, ror r0
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
 1d8:	08000c44 	stmdaeq	r0, {r2, r6, sl, fp}
 1dc:	000000cc 	andeq	r0, r0, ip, asr #1
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
 1e0:	00000000 	andeq	r0, r0, r0
 1e4:	000000d2 	ldrdeq	r0, [r0], -r2
 1e8:	00000000 	andeq	r0, r0, r0
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
 1ec:	00000038 	andeq	r0, r0, r8, lsr r0
 1f0:	00000000 	andeq	r0, r0, r0
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
 1f4:	00000084 	andeq	r0, r0, r4, lsl #1
 1f8:	00000000 	andeq	r0, r0, r0
 1fc:	00000094 	muleq	r0, r4, r0
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 200:	00000000 	andeq	r0, r0, r0
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 204:	00000096 	muleq	r0, r6, r0
 208:	00000000 	andeq	r0, r0, r0
 20c:	00000084 	andeq	r0, r0, r4, lsl #1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 210:	00000000 	andeq	r0, r0, r0
 214:	00000120 	andeq	r0, r0, r0, lsr #2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 218:	00000000 	andeq	r0, r0, r0
 21c:	00000004 	andeq	r0, r0, r4
          hdma->Init.Mode                | hdma->Init.Priority;
 220:	00000000 	andeq	r0, r0, r0
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 224:	000000f2 	strdeq	r0, [r0], -r2
 228:	00000000 	andeq	r0, r0, r0
  tmp = hdma->Instance->FCR;
 22c:	0000006c 	andeq	r0, r0, ip, rrx
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 230:	00000000 	andeq	r0, r0, r0
  tmp |= hdma->Init.FIFOMode;
 234:	000000a6 	andeq	r0, r0, r6, lsr #1
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 238:	08000d10 	stmdaeq	r0, {r4, r8, sl, fp}
    tmp |= hdma->Init.FIFOThreshold;
 23c:	00000002 	andeq	r0, r0, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 240:	00000000 	andeq	r0, r0, r0
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 244:	0000004c 	andeq	r0, r0, ip, asr #32
 248:	08000d12 	stmdaeq	r0, {r1, r4, r8, sl, fp}
  hdma->Instance->FCR = tmp;
 24c:	0000001a 	andeq	r0, r0, sl, lsl r0
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 250:	00000000 	andeq	r0, r0, r0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 254:	00000002 	andeq	r0, r0, r2
 258:	00000000 	andeq	r0, r0, r0
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 25c:	0000000a 	andeq	r0, r0, sl
  hdma->State = HAL_DMA_STATE_READY;
 260:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
 264:	00000002 	andeq	r0, r0, r2
  return HAL_OK;
 268:	00000000 	andeq	r0, r0, r0
 26c:	00000002 	andeq	r0, r0, r2
 270:	08000d2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, fp}
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 274:	00000002 	andeq	r0, r0, r2
 278:	00000000 	andeq	r0, r0, r0
 27c:	00000058 	andeq	r0, r0, r8, asr r0
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 280:	08000d30 	stmdaeq	r0, {r4, r5, r8, sl, fp}
        hdma->State = HAL_DMA_STATE_READY;
 284:	00000010 	andeq	r0, r0, r0, lsl r0
        return HAL_ERROR; 
 288:	00000000 	andeq	r0, r0, r0
    return HAL_ERROR;
 28c:	00000002 	andeq	r0, r0, r2
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 290:	00000000 	andeq	r0, r0, r0
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 294:	00000124 	andeq	r0, r0, r4, lsr #2
 298:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
 29c:	0000002c 	andeq	r0, r0, ip, lsr #32
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 2a0:	00000000 	andeq	r0, r0, r0
 2a4:	0000002c 	andeq	r0, r0, ip, lsr #32
 2a8:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 2ac:	00000002 	andeq	r0, r0, r2
 2b0:	00000000 	andeq	r0, r0, r0
 2b4:	00000080 	andeq	r0, r0, r0, lsl #1
          return HAL_TIMEOUT;
 2b8:	00000000 	andeq	r0, r0, r0
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 2bc:	00000014 	andeq	r0, r0, r4, lsl r0
 2c0:	00000000 	andeq	r0, r0, r0
 2c4:	00000002 	andeq	r0, r0, r2
    FlagStatus       pwrclkchanged = RESET;
 2c8:	00000000 	andeq	r0, r0, r0
      SET_BIT(PWR->CR, PWR_CR_DBP);
 2cc:	000000bc 	strheq	r0, [r0], -ip
 2d0:	00000000 	andeq	r0, r0, r0
 2d4:	00000016 	andeq	r0, r0, r6, lsl r0
      tickstart = HAL_GetTick();
 2d8:	08000d40 	stmdaeq	r0, {r6, r8, sl, fp}
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 2dc:	00000002 	andeq	r0, r0, r2
 2e0:	08000d42 	stmdaeq	r0, {r1, r6, r8, sl, fp}
 2e4:	000000e6 	andeq	r0, r0, r6, ror #1
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 2e8:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
 2ec:	00000288 	andeq	r0, r0, r8, lsl #5
          return HAL_TIMEOUT;
 2f0:	00000000 	andeq	r0, r0, r0
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 2f4:	0000001e 	andeq	r0, r0, lr, lsl r0
 2f8:	00000000 	andeq	r0, r0, r0
 2fc:	0000009a 	muleq	r0, sl, r0
 300:	00000000 	andeq	r0, r0, r0
 304:	00000084 	andeq	r0, r0, r4, lsl #1
 308:	00000000 	andeq	r0, r0, r0
 30c:	00000088 	andeq	r0, r0, r8, lsl #1
 310:	00000000 	andeq	r0, r0, r0
      tickstart = HAL_GetTick();
 314:	00000088 	andeq	r0, r0, r8, lsl #1
 318:	00000000 	andeq	r0, r0, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 31c:	00000036 	andeq	r0, r0, r6, lsr r0
 320:	00000000 	andeq	r0, r0, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 324:	00000036 	andeq	r0, r0, r6, lsr r0
 328:	00000000 	andeq	r0, r0, r0
 32c:	0000000c 	andeq	r0, r0, ip
 330:	00000000 	andeq	r0, r0, r0
          return HAL_TIMEOUT;
 334:	00000004 	andeq	r0, r0, r4
    if(pwrclkchanged == SET)
 338:	00000000 	andeq	r0, r0, r0
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 33c:	00000036 	andeq	r0, r0, r6, lsr r0
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 340:	00000000 	andeq	r0, r0, r0
 344:	00000026 	andeq	r0, r0, r6, lsr #32
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 348:	00000000 	andeq	r0, r0, r0
 34c:	00000066 	andeq	r0, r0, r6, rrx
 350:	00000000 	andeq	r0, r0, r0
 354:	000000a4 	andeq	r0, r0, r4, lsr #1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 358:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 35c:	00000026 	andeq	r0, r0, r6, lsr #32
 360:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 364:	00000066 	andeq	r0, r0, r6, rrx
	...
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 370:	00000084 	andeq	r0, r0, r4, lsl #1
 374:	763d0002 	ldrtvc	r0, [sp], -r2
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 378:	00040000 	andeq	r0, r4, r0
	...
 384:	00000004 	andeq	r0, r0, r4
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 388:	00000000 	andeq	r0, r0, r0
 38c:	000004fc 	strdeq	r0, [r0], -ip
        __HAL_RCC_PLL_DISABLE();
 390:	00000000 	andeq	r0, r0, r0
 394:	00000118 	andeq	r0, r0, r8, lsl r1
        tickstart = HAL_GetTick();
 398:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 39c:	0000000c 	andeq	r0, r0, ip
 3a0:	00000000 	andeq	r0, r0, r0
 3a4:	0000000c 	andeq	r0, r0, ip
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 3a8:	00000000 	andeq	r0, r0, r0
 3ac:	000000d4 	ldrdeq	r0, [r0], -r4
            return HAL_TIMEOUT;
 3b0:	00000000 	andeq	r0, r0, r0
      __HAL_RCC_PWR_CLK_DISABLE();
 3b4:	0000021c 	andeq	r0, r0, ip, lsl r2
 3b8:	080010b0 	stmdaeq	r0, {r4, r5, r7, ip}
 3bc:	0000000c 	andeq	r0, r0, ip
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 3c0:	080010bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip}
 3c4:	00000020 	andeq	r0, r0, r0, lsr #32
 3c8:	080010dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip}
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 3cc:	00000020 	andeq	r0, r0, r0, lsr #32
 3d0:	00000000 	andeq	r0, r0, r0
 3d4:	000000cc 	andeq	r0, r0, ip, asr #1
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 3d8:	00000000 	andeq	r0, r0, r0
 3dc:	0000003c 	andeq	r0, r0, ip, lsr r0
 3e0:	00000000 	andeq	r0, r0, r0
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 3e4:	00000002 	andeq	r0, r0, r2
 3e8:	00000000 	andeq	r0, r0, r0
 3ec:	00000020 	andeq	r0, r0, r0, lsr #32
	...
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 3f8:	00000054 	andeq	r0, r0, r4, asr r0
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 3fc:	84c00002 	strbhi	r0, [r0], #2
 400:	00040000 	andeq	r0, r4, r0
 404:	00000000 	andeq	r0, r0, r0
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 408:	080010fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, ip}
 40c:	000002e8 	andeq	r0, r0, r8, ror #5
 410:	00000000 	andeq	r0, r0, r0
 414:	00000184 	andeq	r0, r0, r4, lsl #3
 418:	00000000 	andeq	r0, r0, r0
 41c:	00000028 	andeq	r0, r0, r8, lsr #32
 420:	00000000 	andeq	r0, r0, r0
 424:	00000038 	andeq	r0, r0, r8, lsr r0
        __HAL_RCC_PLL_ENABLE();
 428:	00000000 	andeq	r0, r0, r0
 42c:	0000002c 	andeq	r0, r0, ip, lsr #32
        tickstart = HAL_GetTick();
 430:	00000000 	andeq	r0, r0, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 434:	00000048 	andeq	r0, r0, r8, asr #32
 438:	00000000 	andeq	r0, r0, r0
 43c:	00000002 	andeq	r0, r0, r2
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 440:	00000000 	andeq	r0, r0, r0
 444:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
        __HAL_RCC_PLL_DISABLE();
 450:	0000008c 	andeq	r0, r0, ip, lsl #1
 454:	8e9e0002 	cdphi	0, 9, cr0, cr14, cr2, {0}
        tickstart = HAL_GetTick();
 458:	00040000 	andeq	r0, r4, r0
	...
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 464:	0000002c 	andeq	r0, r0, ip, lsr #32
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 468:	00000000 	andeq	r0, r0, r0
 46c:	00000044 	andeq	r0, r0, r4, asr #32
            return HAL_TIMEOUT;
 470:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
 474:	0000008e 	andeq	r0, r0, lr, lsl #1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 478:	00000000 	andeq	r0, r0, r0
        pll_config = RCC->PLLCFGR;
 47c:	0000028e 	andeq	r0, r0, lr, lsl #5
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 480:	00000000 	andeq	r0, r0, r0
 484:	000000dc 	ldrdeq	r0, [r0], -ip
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 488:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 48c:	00000078 	andeq	r0, r0, r8, ror r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 490:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 494:	00000098 	muleq	r0, r8, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 498:	080013e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, ip}
 49c:	00000094 	muleq	r0, r4, r0
 4a0:	08001478 	stmdaeq	r0, {r3, r4, r5, r6, sl, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4a4:	00000026 	andeq	r0, r0, r6, lsr #32
 4a8:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 4ac:	00000128 	andeq	r0, r0, r8, lsr #2
 4b0:	00000000 	andeq	r0, r0, r0
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 4b4:	000001dc 	ldrdeq	r0, [r0], -ip
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	0000005a 	andeq	r0, r0, sl, asr r0
  return HAL_OK;
 4c0:	00000000 	andeq	r0, r0, r0
}
 4c4:	0000006e 	andeq	r0, r0, lr, rrx
        return HAL_ERROR;
 4c8:	00000000 	andeq	r0, r0, r0
        return HAL_ERROR;
 4cc:	00000006 	andeq	r0, r0, r6
}
 4d0:	00000000 	andeq	r0, r0, r0
        return HAL_ERROR;
 4d4:	00000004 	andeq	r0, r0, r4
	...
          return HAL_ERROR;
 4e0:	000000ac 	andeq	r0, r0, ip, lsr #1
 4e4:	9c750002 	ldclls	0, cr0, [r5], #-8
 4e8:	00040000 	andeq	r0, r4, r0
 4ec:	00000000 	andeq	r0, r0, r0
 4f0:	080014a0 	stmdaeq	r0, {r5, r7, sl, ip}
 4f4:	0000003c 	andeq	r0, r0, ip, lsr r0
 4f8:	080014dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, ip}
 4fc:	0000008c 	andeq	r0, r0, ip, lsl #1
 500:	08001568 	stmdaeq	r0, {r3, r5, r6, r8, sl, ip}
 504:	00000030 	andeq	r0, r0, r0, lsr r0
 508:	00000000 	andeq	r0, r0, r0
 50c:	00000038 	andeq	r0, r0, r8, lsr r0
 510:	00000000 	andeq	r0, r0, r0
 514:	00000024 	andeq	r0, r0, r4, lsr #32
 518:	08001598 	stmdaeq	r0, {r3, r4, r7, r8, sl, ip}
 51c:	00000028 	andeq	r0, r0, r8, lsr #32
 520:	00000000 	andeq	r0, r0, r0
 524:	0000001c 	andeq	r0, r0, ip, lsl r0
 528:	00000000 	andeq	r0, r0, r0
 52c:	00000020 	andeq	r0, r0, r0, lsr #32
 530:	00000000 	andeq	r0, r0, r0
 534:	00000128 	andeq	r0, r0, r8, lsr #2
 538:	00000000 	andeq	r0, r0, r0
 53c:	00000006 	andeq	r0, r0, r6
 540:	00000000 	andeq	r0, r0, r0
 544:	00000010 	andeq	r0, r0, r0, lsl r0
 548:	00000000 	andeq	r0, r0, r0
 54c:	0000007c 	andeq	r0, r0, ip, ror r0
 550:	00000000 	andeq	r0, r0, r0
 554:	00000034 	andeq	r0, r0, r4, lsr r0
 558:	00000000 	andeq	r0, r0, r0
 55c:	0000003c 	andeq	r0, r0, ip, lsr r0
 560:	00000000 	andeq	r0, r0, r0
 564:	00000034 	andeq	r0, r0, r4, lsr r0
 568:	00000000 	andeq	r0, r0, r0
 56c:	0000003c 	andeq	r0, r0, ip, lsr r0
 570:	00000000 	andeq	r0, r0, r0
 574:	0000003c 	andeq	r0, r0, ip, lsr r0
 578:	00000000 	andeq	r0, r0, r0
 57c:	00000002 	andeq	r0, r0, r2
 580:	00000000 	andeq	r0, r0, r0
 584:	00000008 	andeq	r0, r0, r8
	...
 590:	000000ec 	andeq	r0, r0, ip, ror #1
 594:	b09d0002 	addslt	r0, sp, r2
 598:	00040000 	andeq	r0, r4, r0
	...
 5a4:	00000002 	andeq	r0, r0, r2
 5a8:	00000000 	andeq	r0, r0, r0
 5ac:	00000002 	andeq	r0, r0, r2
 5b0:	00000000 	andeq	r0, r0, r0
 5b4:	0000003c 	andeq	r0, r0, ip, lsr r0
 5b8:	080015c0 	stmdaeq	r0, {r6, r7, r8, sl, ip}
 5bc:	0000004c 	andeq	r0, r0, ip, asr #32
 5c0:	0800160c 	stmdaeq	r0, {r2, r3, r9, sl, ip}
 5c4:	00000034 	andeq	r0, r0, r4, lsr r0
 5c8:	08001640 	stmdaeq	r0, {r6, r9, sl, ip}
 5cc:	00000018 	andeq	r0, r0, r8, lsl r0
 5d0:	08001658 	stmdaeq	r0, {r3, r4, r6, r9, sl, ip}
 5d4:	0000000c 	andeq	r0, r0, ip
 5d8:	00000000 	andeq	r0, r0, r0
 5dc:	0000000c 	andeq	r0, r0, ip
 5e0:	00000000 	andeq	r0, r0, r0
 5e4:	00000048 	andeq	r0, r0, r8, asr #32
 5e8:	00000000 	andeq	r0, r0, r0
 5ec:	0000000c 	andeq	r0, r0, ip
 5f0:	08001664 	stmdaeq	r0, {r2, r5, r6, r9, sl, ip}
 5f4:	00000028 	andeq	r0, r0, r8, lsr #32
 5f8:	00000000 	andeq	r0, r0, r0
 5fc:	0000000e 	andeq	r0, r0, lr
 600:	00000000 	andeq	r0, r0, r0
 604:	0000000e 	andeq	r0, r0, lr
 608:	00000000 	andeq	r0, r0, r0
 60c:	00000008 	andeq	r0, r0, r8
 610:	00000000 	andeq	r0, r0, r0
 614:	0000000c 	andeq	r0, r0, ip
 618:	00000000 	andeq	r0, r0, r0
 61c:	00000010 	andeq	r0, r0, r0, lsl r0
 620:	00000000 	andeq	r0, r0, r0
 624:	00000010 	andeq	r0, r0, r0, lsl r0
 628:	00000000 	andeq	r0, r0, r0
 62c:	00000010 	andeq	r0, r0, r0, lsl r0
 630:	00000000 	andeq	r0, r0, r0
 634:	00000010 	andeq	r0, r0, r0, lsl r0
 638:	00000000 	andeq	r0, r0, r0
 63c:	00000010 	andeq	r0, r0, r0, lsl r0
 640:	00000000 	andeq	r0, r0, r0
 644:	00000010 	andeq	r0, r0, r0, lsl r0
 648:	00000000 	andeq	r0, r0, r0
 64c:	00000010 	andeq	r0, r0, r0, lsl r0
 650:	00000000 	andeq	r0, r0, r0
 654:	00000010 	andeq	r0, r0, r0, lsl r0
 658:	00000000 	andeq	r0, r0, r0
 65c:	00000010 	andeq	r0, r0, r0, lsl r0
 660:	00000000 	andeq	r0, r0, r0
 664:	0000000c 	andeq	r0, r0, ip
 668:	00000000 	andeq	r0, r0, r0
 66c:	0000000c 	andeq	r0, r0, ip
 670:	00000000 	andeq	r0, r0, r0
 674:	0000000c 	andeq	r0, r0, ip
	...
 680:	00000024 	andeq	r0, r0, r4, lsr #32
 684:	bb9f0002 	bllt	fe7c0694 <_estack+0xde7b6cf4>
 688:	00040000 	andeq	r0, r4, r0
 68c:	00000000 	andeq	r0, r0, r0
 690:	0800168c 	stmdaeq	r0, {r2, r3, r7, r9, sl, ip}
 694:	00000014 	andeq	r0, r0, r4, lsl r0
 698:	00000000 	andeq	r0, r0, r0
 69c:	000000a0 	andeq	r0, r0, r0, lsr #1
	...
 6a8:	00000054 	andeq	r0, r0, r4, asr r0
 6ac:	c1520002 	cmpgt	r2, r2
 6b0:	00040000 	andeq	r0, r4, r0
 6b4:	00000000 	andeq	r0, r0, r0
 6b8:	080016a0 	stmdaeq	r0, {r5, r7, r9, sl, ip}
 6bc:	0000002c 	andeq	r0, r0, ip, lsr #32
 6c0:	080016cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip}
 6c4:	00000036 	andeq	r0, r0, r6, lsr r0
 6c8:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
 6cc:	00000018 	andeq	r0, r0, r8, lsl r0
 6d0:	0800171c 	stmdaeq	r0, {r2, r3, r4, r8, r9, sl, ip}
 6d4:	00000050 	andeq	r0, r0, r0, asr r0
 6d8:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
 6dc:	0000007c 	andeq	r0, r0, ip, ror r0
 6e0:	080017e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl, ip}
 6e4:	00000184 	andeq	r0, r0, r4, lsl #3
 6e8:	00000000 	andeq	r0, r0, r0
 6ec:	00000006 	andeq	r0, r0, r6
 6f0:	00000000 	andeq	r0, r0, r0
 6f4:	00000008 	andeq	r0, r0, r8
	...
 700:	0000001c 	andeq	r0, r0, ip, lsl r0
 704:	ca040002 	bgt	100714 <_Min_Heap_Size+0xfff14>
 708:	00040000 	andeq	r0, r4, r0
 70c:	00000000 	andeq	r0, r0, r0
 710:	0800196c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp, ip}
 714:	00000088 	andeq	r0, r0, r8, lsl #1
	...
 720:	0000003c 	andeq	r0, r0, ip, lsr r0
 724:	cbc60002 	blgt	ff180734 <_estack+0xdf176d94>
 728:	00040000 	andeq	r0, r4, r0
 72c:	00000000 	andeq	r0, r0, r0
 730:	080019f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, fp, ip}
 734:	0000001a 	andeq	r0, r0, sl, lsl r0
 738:	08001a0e 	stmdaeq	r0, {r1, r2, r3, r9, fp, ip}
 73c:	00000006 	andeq	r0, r0, r6
 740:	00000000 	andeq	r0, r0, r0
 744:	00000016 	andeq	r0, r0, r6, lsl r0
 748:	08001a14 	stmdaeq	r0, {r2, r4, r9, fp, ip}
 74c:	00000032 	andeq	r0, r0, r2, lsr r0
 750:	08001a46 	stmdaeq	r0, {r1, r2, r6, r9, fp, ip}
 754:	00000024 	andeq	r0, r0, r4, lsr #32
	...
 760:	0000015c 	andeq	r0, r0, ip, asr r1
 764:	ce950002 	cdpgt	0, 9, cr0, cr5, cr2, {0}
 768:	00040000 	andeq	r0, r4, r0
	...
 774:	00000010 	andeq	r0, r0, r0, lsl r0
 778:	00000000 	andeq	r0, r0, r0
 77c:	0000001e 	andeq	r0, r0, lr, lsl r0
 780:	08001a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp, ip}
 784:	0000001a 	andeq	r0, r0, sl, lsl r0
 788:	08001a84 	stmdaeq	r0, {r2, r7, r9, fp, ip}
 78c:	00000076 	andeq	r0, r0, r6, ror r0
 790:	08001afa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, fp, ip}
 794:	00000024 	andeq	r0, r0, r4, lsr #32
 798:	08001b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp, ip}
 79c:	00000058 	andeq	r0, r0, r8, asr r0
 7a0:	08001b76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, fp, ip}
 7a4:	00000082 	andeq	r0, r0, r2, lsl #1
 7a8:	08001bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, ip}
 7ac:	00000096 	muleq	r0, r6, r0
 7b0:	08001c8e 	stmdaeq	r0, {r1, r2, r3, r7, sl, fp, ip}
 7b4:	00000020 	andeq	r0, r0, r0, lsr #32
 7b8:	08001cae 	stmdaeq	r0, {r1, r2, r3, r5, r7, sl, fp, ip}
 7bc:	0000003e 	andeq	r0, r0, lr, lsr r0
 7c0:	00000000 	andeq	r0, r0, r0
 7c4:	00000018 	andeq	r0, r0, r8, lsl r0
 7c8:	00000000 	andeq	r0, r0, r0
 7cc:	00000056 	andeq	r0, r0, r6, asr r0
 7d0:	00000000 	andeq	r0, r0, r0
 7d4:	0000002a 	andeq	r0, r0, sl, lsr #32
 7d8:	00000000 	andeq	r0, r0, r0
 7dc:	00000020 	andeq	r0, r0, r0, lsr #32
 7e0:	00000000 	andeq	r0, r0, r0
 7e4:	0000014a 	andeq	r0, r0, sl, asr #2
 7e8:	00000000 	andeq	r0, r0, r0
 7ec:	00000018 	andeq	r0, r0, r8, lsl r0
 7f0:	00000000 	andeq	r0, r0, r0
 7f4:	00000016 	andeq	r0, r0, r6, lsl r0
 7f8:	00000000 	andeq	r0, r0, r0
 7fc:	0000001e 	andeq	r0, r0, lr, lsl r0
 800:	00000000 	andeq	r0, r0, r0
 804:	0000002c 	andeq	r0, r0, ip, lsr #32
 808:	00000000 	andeq	r0, r0, r0
 80c:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
 810:	00000000 	andeq	r0, r0, r0
 814:	0000008c 	andeq	r0, r0, ip, lsl #1
 818:	08001cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, ip}
 81c:	00000110 	andeq	r0, r0, r0, lsl r1
 820:	00000000 	andeq	r0, r0, r0
 824:	00000146 	andeq	r0, r0, r6, asr #2
 828:	00000000 	andeq	r0, r0, r0
 82c:	0000002c 	andeq	r0, r0, ip, lsr #32
 830:	00000000 	andeq	r0, r0, r0
 834:	00000110 	andeq	r0, r0, r0, lsl r1
 838:	00000000 	andeq	r0, r0, r0
 83c:	0000007e 	andeq	r0, r0, lr, ror r0
 840:	00000000 	andeq	r0, r0, r0
 844:	00000030 	andeq	r0, r0, r0, lsr r0
 848:	00000000 	andeq	r0, r0, r0
 84c:	00000012 	andeq	r0, r0, r2, lsl r0
 850:	00000000 	andeq	r0, r0, r0
 854:	00000016 	andeq	r0, r0, r6, lsl r0
 858:	00000000 	andeq	r0, r0, r0
 85c:	00000004 	andeq	r0, r0, r4
 860:	00000000 	andeq	r0, r0, r0
 864:	00000010 	andeq	r0, r0, r0, lsl r0
 868:	00000000 	andeq	r0, r0, r0
 86c:	00000004 	andeq	r0, r0, r4
 870:	00000000 	andeq	r0, r0, r0
 874:	00000004 	andeq	r0, r0, r4
 878:	00000000 	andeq	r0, r0, r0
 87c:	0000000c 	andeq	r0, r0, ip
 880:	00000000 	andeq	r0, r0, r0
 884:	00000010 	andeq	r0, r0, r0, lsl r0
 888:	08001dfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, fp, ip}
 88c:	00000052 	andeq	r0, r0, r2, asr r0
 890:	00000000 	andeq	r0, r0, r0
 894:	0000000c 	andeq	r0, r0, ip
 898:	00000000 	andeq	r0, r0, r0
 89c:	00000026 	andeq	r0, r0, r6, lsr #32
 8a0:	00000000 	andeq	r0, r0, r0
 8a4:	00000026 	andeq	r0, r0, r6, lsr #32
 8a8:	00000000 	andeq	r0, r0, r0
 8ac:	00000018 	andeq	r0, r0, r8, lsl r0
 8b0:	00000000 	andeq	r0, r0, r0
 8b4:	00000016 	andeq	r0, r0, r6, lsl r0
	...
 8c0:	0000028c 	andeq	r0, r0, ip, lsl #5
 8c4:	f3d90002 	vaddl.u16	q8, d9, d2
 8c8:	00040000 	andeq	r0, r4, r0
	...
 8d4:	00000044 	andeq	r0, r0, r4, asr #32
 8d8:	08001e50 	stmdaeq	r0, {r4, r6, r9, sl, fp, ip}
 8dc:	00000040 	andeq	r0, r0, r0, asr #32
 8e0:	00000000 	andeq	r0, r0, r0
 8e4:	0000003e 	andeq	r0, r0, lr, lsr r0
 8e8:	00000000 	andeq	r0, r0, r0
 8ec:	00000012 	andeq	r0, r0, r2, lsl r0
 8f0:	08001e90 	stmdaeq	r0, {r4, r7, r9, sl, fp, ip}
 8f4:	00000028 	andeq	r0, r0, r8, lsr #32
 8f8:	08001eb8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sl, fp, ip}
 8fc:	00000094 	muleq	r0, r4, r0
 900:	08001f4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, fp, ip}
 904:	00000052 	andeq	r0, r0, r2, asr r0
 908:	08001fa0 	stmdaeq	r0, {r5, r7, r8, r9, sl, fp, ip}
 90c:	00000068 	andeq	r0, r0, r8, rrx
 910:	08002008 	stmdaeq	r0, {r3, sp}
 914:	000000cc 	andeq	r0, r0, ip, asr #1
 918:	080020d4 	stmdaeq	r0, {r2, r4, r6, r7, sp}
 91c:	00000062 	andeq	r0, r0, r2, rrx
 920:	08002136 	stmdaeq	r0, {r1, r2, r4, r5, r8, sp}
 924:	00000024 	andeq	r0, r0, r4, lsr #32
 928:	0800215c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sp}
 92c:	0000004c 	andeq	r0, r0, ip, asr #32
 930:	080021a8 	stmdaeq	r0, {r3, r5, r7, r8, sp}
 934:	000000a8 	andeq	r0, r0, r8, lsr #1
 938:	08002250 	stmdaeq	r0, {r4, r6, r9, sp}
 93c:	00000028 	andeq	r0, r0, r8, lsr #32
 940:	08002278 	stmdaeq	r0, {r3, r4, r5, r6, r9, sp}
 944:	00000022 	andeq	r0, r0, r2, lsr #32
 948:	00000000 	andeq	r0, r0, r0
 94c:	000000ac 	andeq	r0, r0, ip, lsr #1
 950:	00000000 	andeq	r0, r0, r0
 954:	0000009c 	muleq	r0, ip, r0
 958:	00000000 	andeq	r0, r0, r0
 95c:	00000020 	andeq	r0, r0, r0, lsr #32
 960:	00000000 	andeq	r0, r0, r0
 964:	00000028 	andeq	r0, r0, r8, lsr #32
 968:	00000000 	andeq	r0, r0, r0
 96c:	00000020 	andeq	r0, r0, r0, lsr #32
 970:	00000000 	andeq	r0, r0, r0
 974:	00000028 	andeq	r0, r0, r8, lsr #32
 978:	00000000 	andeq	r0, r0, r0
 97c:	000000e8 	andeq	r0, r0, r8, ror #1
 980:	00000000 	andeq	r0, r0, r0
 984:	00000094 	muleq	r0, r4, r0
 988:	00000000 	andeq	r0, r0, r0
 98c:	000000b4 	strheq	r0, [r0], -r4
 990:	00000000 	andeq	r0, r0, r0
 994:	00000048 	andeq	r0, r0, r8, asr #32
 998:	0800229c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sp}
 99c:	00000010 	andeq	r0, r0, r0, lsl r0
 9a0:	080022ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sp}
 9a4:	0000000c 	andeq	r0, r0, ip
 9a8:	00000000 	andeq	r0, r0, r0
 9ac:	0000000c 	andeq	r0, r0, ip
 9b0:	080022b8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sp}
 9b4:	0000000c 	andeq	r0, r0, ip
 9b8:	00000000 	andeq	r0, r0, r0
 9bc:	00000014 	andeq	r0, r0, r4, lsl r0
 9c0:	00000000 	andeq	r0, r0, r0
 9c4:	00000034 	andeq	r0, r0, r4, lsr r0
 9c8:	00000000 	andeq	r0, r0, r0
 9cc:	0000000c 	andeq	r0, r0, ip
 9d0:	00000000 	andeq	r0, r0, r0
 9d4:	0000000c 	andeq	r0, r0, ip
 9d8:	080022c4 	stmdaeq	r0, {r2, r6, r7, r9, sp}
 9dc:	0000003c 	andeq	r0, r0, ip, lsr r0
 9e0:	08002300 	stmdaeq	r0, {r8, r9, sp}
 9e4:	00000160 	andeq	r0, r0, r0, ror #2
 9e8:	08002460 	stmdaeq	r0, {r5, r6, sl, sp}
 9ec:	00000140 	andeq	r0, r0, r0, asr #2
 9f0:	00000000 	andeq	r0, r0, r0
 9f4:	0000006c 	andeq	r0, r0, ip, rrx
 9f8:	080025a0 	stmdaeq	r0, {r5, r7, r8, sl, sp}
 9fc:	00000032 	andeq	r0, r0, r2, lsr r0
 a00:	080025d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, sp}
 a04:	00000048 	andeq	r0, r0, r8, asr #32
 a08:	00000000 	andeq	r0, r0, r0
 a0c:	0000007c 	andeq	r0, r0, ip, ror r0
 a10:	00000000 	andeq	r0, r0, r0
 a14:	00000024 	andeq	r0, r0, r4, lsr #32
 a18:	00000000 	andeq	r0, r0, r0
 a1c:	000000a4 	andeq	r0, r0, r4, lsr #1
 a20:	00000000 	andeq	r0, r0, r0
 a24:	00000020 	andeq	r0, r0, r0, lsr #32
 a28:	00000000 	andeq	r0, r0, r0
 a2c:	00000020 	andeq	r0, r0, r0, lsr #32
 a30:	00000000 	andeq	r0, r0, r0
 a34:	0000002c 	andeq	r0, r0, ip, lsr #32
 a38:	00000000 	andeq	r0, r0, r0
 a3c:	00000020 	andeq	r0, r0, r0, lsr #32
 a40:	0800261c 	stmdaeq	r0, {r2, r3, r4, r9, sl, sp}
 a44:	00000084 	andeq	r0, r0, r4, lsl #1
 a48:	00000000 	andeq	r0, r0, r0
 a4c:	000000b4 	strheq	r0, [r0], -r4
 a50:	080026a0 	stmdaeq	r0, {r5, r7, r9, sl, sp}
 a54:	0000001c 	andeq	r0, r0, ip, lsl r0
 a58:	00000000 	andeq	r0, r0, r0
 a5c:	00000040 	andeq	r0, r0, r0, asr #32
 a60:	080026bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, sp}
 a64:	0000003c 	andeq	r0, r0, ip, lsr r0
 a68:	080026f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, sp}
 a6c:	000000e4 	andeq	r0, r0, r4, ror #1
 a70:	00000000 	andeq	r0, r0, r0
 a74:	000000b8 	strheq	r0, [r0], -r8
 a78:	00000000 	andeq	r0, r0, r0
 a7c:	00000024 	andeq	r0, r0, r4, lsr #32
 a80:	080027dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, sp}
 a84:	00000018 	andeq	r0, r0, r8, lsl r0
 a88:	080027f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, sp}
 a8c:	0000007c 	andeq	r0, r0, ip, ror r0
 a90:	08002870 	stmdaeq	r0, {r4, r5, r6, fp, sp}
 a94:	0000000c 	andeq	r0, r0, ip
 a98:	0800287c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, sp}
 a9c:	00000048 	andeq	r0, r0, r8, asr #32
 aa0:	00000000 	andeq	r0, r0, r0
 aa4:	00000018 	andeq	r0, r0, r8, lsl r0
 aa8:	00000000 	andeq	r0, r0, r0
 aac:	0000000c 	andeq	r0, r0, ip
 ab0:	00000000 	andeq	r0, r0, r0
 ab4:	00000010 	andeq	r0, r0, r0, lsl r0
 ab8:	080028c4 	stmdaeq	r0, {r2, r6, r7, fp, sp}
 abc:	00000020 	andeq	r0, r0, r0, lsr #32
 ac0:	00000000 	andeq	r0, r0, r0
 ac4:	000000b8 	strheq	r0, [r0], -r8
 ac8:	080028e4 	stmdaeq	r0, {r2, r5, r6, r7, fp, sp}
 acc:	00000080 	andeq	r0, r0, r0, lsl #1
 ad0:	00000000 	andeq	r0, r0, r0
 ad4:	00000090 	muleq	r0, r0, r0
 ad8:	00000000 	andeq	r0, r0, r0
 adc:	00000018 	andeq	r0, r0, r8, lsl r0
 ae0:	00000000 	andeq	r0, r0, r0
 ae4:	00000014 	andeq	r0, r0, r4, lsl r0
 ae8:	00000000 	andeq	r0, r0, r0
 aec:	000000b8 	strheq	r0, [r0], -r8
 af0:	00000000 	andeq	r0, r0, r0
 af4:	000000dc 	ldrdeq	r0, [r0], -ip
 af8:	00000000 	andeq	r0, r0, r0
 afc:	0000012c 	andeq	r0, r0, ip, lsr #2
 b00:	00000000 	andeq	r0, r0, r0
 b04:	00000178 	andeq	r0, r0, r8, ror r1
 b08:	00000000 	andeq	r0, r0, r0
 b0c:	000000f8 	strdeq	r0, [r0], -r8
 b10:	00000000 	andeq	r0, r0, r0
 b14:	00000038 	andeq	r0, r0, r8, lsr r0
 b18:	00000000 	andeq	r0, r0, r0
 b1c:	00000034 	andeq	r0, r0, r4, lsr r0
 b20:	08002964 	stmdaeq	r0, {r2, r5, r6, r8, fp, sp}
 b24:	00000018 	andeq	r0, r0, r8, lsl r0
 b28:	0800297c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, fp, sp}
 b2c:	0000006c 	andeq	r0, r0, ip, rrx
 b30:	080029e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp, sp}
 b34:	00000054 	andeq	r0, r0, r4, asr r0
 b38:	08002a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp, sp}
 b3c:	00000018 	andeq	r0, r0, r8, lsl r0
 b40:	00000000 	andeq	r0, r0, r0
 b44:	00000074 	andeq	r0, r0, r4, ror r0
	...
 b50:	00000104 	andeq	r0, r0, r4, lsl #2
 b54:	2e1f0002 	cdpcs	0, 1, cr0, cr15, cr2, {0}
 b58:	00040001 	andeq	r0, r4, r1
 b5c:	00000000 	andeq	r0, r0, r0
 b60:	08002a54 	stmdaeq	r0, {r2, r4, r6, r9, fp, sp}
 b64:	00000020 	andeq	r0, r0, r0, lsr #32
 b68:	08002a74 	stmdaeq	r0, {r2, r4, r5, r6, r9, fp, sp}
 b6c:	00000048 	andeq	r0, r0, r8, asr #32
 b70:	08002abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp, sp}
 b74:	00000028 	andeq	r0, r0, r8, lsr #32
 b78:	08002ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp, sp}
 b7c:	00000040 	andeq	r0, r0, r0, asr #32
 b80:	08002b24 	stmdaeq	r0, {r2, r5, r8, r9, fp, sp}
 b84:	00000030 	andeq	r0, r0, r0, lsr r0
 b88:	08002b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp, sp}
 b8c:	0000002c 	andeq	r0, r0, ip, lsr #32
 b90:	08002b80 	stmdaeq	r0, {r7, r8, r9, fp, sp}
 b94:	00000074 	andeq	r0, r0, r4, ror r0
 b98:	08002bf4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, fp, sp}
 b9c:	000000f8 	strdeq	r0, [r0], -r8
 ba0:	08002cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, sp}
 ba4:	00000016 	andeq	r0, r0, r6, lsl r0
 ba8:	08002d04 	stmdaeq	r0, {r2, r8, sl, fp, sp}
 bac:	00000060 	andeq	r0, r0, r0, rrx
 bb0:	00000000 	andeq	r0, r0, r0
 bb4:	00000036 	andeq	r0, r0, r6, lsr r0
 bb8:	08002d64 	stmdaeq	r0, {r2, r5, r6, r8, sl, fp, sp}
 bbc:	0000005c 	andeq	r0, r0, ip, asr r0
 bc0:	00000000 	andeq	r0, r0, r0
 bc4:	00000038 	andeq	r0, r0, r8, lsr r0
 bc8:	00000000 	andeq	r0, r0, r0
 bcc:	00000020 	andeq	r0, r0, r0, lsr #32
 bd0:	00000000 	andeq	r0, r0, r0
 bd4:	0000004c 	andeq	r0, r0, ip, asr #32
 bd8:	00000000 	andeq	r0, r0, r0
 bdc:	00000034 	andeq	r0, r0, r4, lsr r0
 be0:	00000000 	andeq	r0, r0, r0
 be4:	0000000c 	andeq	r0, r0, ip
 be8:	00000000 	andeq	r0, r0, r0
 bec:	00000004 	andeq	r0, r0, r4
 bf0:	00000000 	andeq	r0, r0, r0
 bf4:	0000002c 	andeq	r0, r0, ip, lsr #32
 bf8:	00000000 	andeq	r0, r0, r0
 bfc:	00000020 	andeq	r0, r0, r0, lsr #32
 c00:	00000000 	andeq	r0, r0, r0
 c04:	00000008 	andeq	r0, r0, r8
 c08:	00000000 	andeq	r0, r0, r0
 c0c:	00000004 	andeq	r0, r0, r4
 c10:	00000000 	andeq	r0, r0, r0
 c14:	00000014 	andeq	r0, r0, r4, lsl r0
 c18:	00000000 	andeq	r0, r0, r0
 c1c:	00000004 	andeq	r0, r0, r4
 c20:	00000000 	andeq	r0, r0, r0
 c24:	00000020 	andeq	r0, r0, r0, lsr #32
 c28:	00000000 	andeq	r0, r0, r0
 c2c:	00000012 	andeq	r0, r0, r2, lsl r0
 c30:	00000000 	andeq	r0, r0, r0
 c34:	00000012 	andeq	r0, r0, r2, lsl r0
 c38:	00000000 	andeq	r0, r0, r0
 c3c:	00000028 	andeq	r0, r0, r8, lsr #32
 c40:	00000000 	andeq	r0, r0, r0
 c44:	00000028 	andeq	r0, r0, r8, lsr #32
 c48:	00000000 	andeq	r0, r0, r0
 c4c:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 c58:	00000064 	andeq	r0, r0, r4, rrx
 c5c:	47980002 	ldrmi	r0, [r8, r2]
 c60:	00040001 	andeq	r0, r4, r1
 c64:	00000000 	andeq	r0, r0, r0
 c68:	08002dc0 	stmdaeq	r0, {r6, r7, r8, sl, fp, sp}
 c6c:	00000058 	andeq	r0, r0, r8, asr r0
 c70:	08002e18 	stmdaeq	r0, {r3, r4, r9, sl, fp, sp}
 c74:	00000064 	andeq	r0, r0, r4, rrx
 c78:	08002e7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, sl, fp, sp}
 c7c:	000000d4 	ldrdeq	r0, [r0], -r4
 c80:	08002f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp, sp}
 c84:	00000050 	andeq	r0, r0, r0, asr r0
 c88:	00000000 	andeq	r0, r0, r0
 c8c:	0000000c 	andeq	r0, r0, ip
 c90:	00000000 	andeq	r0, r0, r0
 c94:	0000000c 	andeq	r0, r0, ip
 c98:	00000000 	andeq	r0, r0, r0
 c9c:	00000002 	andeq	r0, r0, r2
 ca0:	00000000 	andeq	r0, r0, r0
 ca4:	00000032 	andeq	r0, r0, r2, lsr r0
 ca8:	00000000 	andeq	r0, r0, r0
 cac:	00000080 	andeq	r0, r0, r0, lsl #1
 cb0:	00000000 	andeq	r0, r0, r0
 cb4:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
 cc0:	0000007c 	andeq	r0, r0, ip, ror r0
 cc4:	4db10002 	ldcmi	0, cr0, [r1, #8]!
 cc8:	00040001 	andeq	r0, r4, r1
 ccc:	00000000 	andeq	r0, r0, r0
 cd0:	08002fa0 	stmdaeq	r0, {r5, r7, r8, r9, sl, fp, sp}
 cd4:	00000020 	andeq	r0, r0, r0, lsr #32
 cd8:	08002fc0 	stmdaeq	r0, {r6, r7, r8, r9, sl, fp, sp}
 cdc:	00000028 	andeq	r0, r0, r8, lsr #32
 ce0:	08002fe8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl, fp, sp}
 ce4:	00000014 	andeq	r0, r0, r4, lsl r0
 ce8:	08002ffc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
 cec:	0000002c 	andeq	r0, r0, ip, lsr #32
 cf0:	08003030 	stmdaeq	r0, {r4, r5, ip, sp}
 cf4:	00000024 	andeq	r0, r0, r4, lsr #32
 cf8:	00000000 	andeq	r0, r0, r0
 cfc:	00000002 	andeq	r0, r0, r2
 d00:	08003054 	stmdaeq	r0, {r2, r4, r6, ip, sp}
 d04:	00000020 	andeq	r0, r0, r0, lsr #32
 d08:	08003074 	stmdaeq	r0, {r2, r4, r5, r6, ip, sp}
 d0c:	00000014 	andeq	r0, r0, r4, lsl r0
 d10:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
 d14:	00000064 	andeq	r0, r0, r4, rrx
 d18:	080030f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, ip, sp}
 d1c:	0000002c 	andeq	r0, r0, ip, lsr #32
 d20:	08003120 	stmdaeq	r0, {r5, r8, ip, sp}
 d24:	00000114 	andeq	r0, r0, r4, lsl r1
 d28:	08003234 	stmdaeq	r0, {r2, r4, r5, r9, ip, sp}
 d2c:	0000003c 	andeq	r0, r0, ip, lsr r0
 d30:	08003270 	stmdaeq	r0, {r4, r5, r6, r9, ip, sp}
 d34:	00000050 	andeq	r0, r0, r0, asr r0
	...
 d40:	0000001c 	andeq	r0, r0, ip, lsl r0
 d44:	52da0002 	sbcspl	r0, sl, #2
 d48:	00040001 	andeq	r0, r4, r1
 d4c:	00000000 	andeq	r0, r0, r0
 d50:	080032c0 	stmdaeq	r0, {r6, r7, r9, ip, sp}
 d54:	00000048 	andeq	r0, r0, r8, asr #32
	...
 d60:	000000a4 	andeq	r0, r0, r4, lsr #1
 d64:	545f0002 	ldrbpl	r0, [pc], #-2	; d6c <_Min_Heap_Size+0x56c>
 d68:	00040001 	andeq	r0, r4, r1
	...
 d74:	00000002 	andeq	r0, r0, r2
 d78:	00000000 	andeq	r0, r0, r0
 d7c:	00000004 	andeq	r0, r0, r4
 d80:	00000000 	andeq	r0, r0, r0
 d84:	00000010 	andeq	r0, r0, r0, lsl r0
 d88:	00000000 	andeq	r0, r0, r0
 d8c:	0000000c 	andeq	r0, r0, ip
 d90:	08003308 	stmdaeq	r0, {r3, r8, r9, ip, sp}
 d94:	00000020 	andeq	r0, r0, r0, lsr #32
 d98:	08003328 	stmdaeq	r0, {r3, r5, r8, r9, ip, sp}
 d9c:	0000001c 	andeq	r0, r0, ip, lsl r0
 da0:	08003344 	stmdaeq	r0, {r2, r6, r8, r9, ip, sp}
 da4:	00000006 	andeq	r0, r0, r6
 da8:	0800334a 	stmdaeq	r0, {r1, r3, r6, r8, r9, ip, sp}
 dac:	0000000a 	andeq	r0, r0, sl
 db0:	08003354 	stmdaeq	r0, {r2, r4, r6, r8, r9, ip, sp}
 db4:	00000004 	andeq	r0, r0, r4
 db8:	08003358 	stmdaeq	r0, {r3, r4, r6, r8, r9, ip, sp}
 dbc:	00000004 	andeq	r0, r0, r4
 dc0:	00000000 	andeq	r0, r0, r0
 dc4:	0000000a 	andeq	r0, r0, sl
 dc8:	00000000 	andeq	r0, r0, r0
 dcc:	00000010 	andeq	r0, r0, r0, lsl r0
 dd0:	00000000 	andeq	r0, r0, r0
 dd4:	00000010 	andeq	r0, r0, r0, lsl r0
 dd8:	00000000 	andeq	r0, r0, r0
 ddc:	00000006 	andeq	r0, r0, r6
 de0:	00000000 	andeq	r0, r0, r0
 de4:	0000000a 	andeq	r0, r0, sl
 de8:	00000000 	andeq	r0, r0, r0
 dec:	00000010 	andeq	r0, r0, r0, lsl r0
 df0:	00000000 	andeq	r0, r0, r0
 df4:	00000010 	andeq	r0, r0, r0, lsl r0
 df8:	00000000 	andeq	r0, r0, r0
 dfc:	00000010 	andeq	r0, r0, r0, lsl r0
	...
 e08:	00000024 	andeq	r0, r0, r4, lsr #32
 e0c:	5c940002 	ldcpl	0, cr0, [r4], {2}
 e10:	00040001 	andeq	r0, r4, r1
 e14:	00000000 	andeq	r0, r0, r0
 e18:	0800335c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, ip, sp}
 e1c:	00000050 	andeq	r0, r0, r0, asr r0
 e20:	080033ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, ip, sp}
 e24:	00000002 	andeq	r0, r0, r2
	...
 e30:	0000001c 	andeq	r0, r0, ip, lsl r0
 e34:	5cb60002 	ldcpl	0, cr0, [r6], #8
 e38:	00040001 	andeq	r0, r4, r1
 e3c:	00000000 	andeq	r0, r0, r0
 e40:	080001d0 	stmdaeq	r0, {r4, r6, r7, r8}
 e44:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
       0:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
       4:	08000608 	stmdaeq	r0, {r3, r9, sl}
  errno = ENOMEM;
       8:	08000608 	stmdaeq	r0, {r3, r9, sl}
}
       c:	08000620 	stmdaeq	r0, {r5, r9, sl}
      10:	08000620 	stmdaeq	r0, {r5, r9, sl}
      14:	08000640 	stmdaeq	r0, {r6, r9, sl}
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	00000001 	andeq	r0, r0, r1
      1c:	00000001 	andeq	r0, r0, r1
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	00000001 	andeq	r0, r0, r1
      24:	00000001 	andeq	r0, r0, r1
}
      28:	00000001 	andeq	r0, r0, r1
      2c:	00000001 	andeq	r0, r0, r1
      30:	00000001 	andeq	r0, r0, r1
    if (status != HAL_OK)
      34:	00000001 	andeq	r0, r0, r1
      uwTickFreq = prevTickFreq;
      38:	00000001 	andeq	r0, r0, r1
      3c:	00000001 	andeq	r0, r0, r1
      40:	00000001 	andeq	r0, r0, r1
      44:	00000001 	andeq	r0, r0, r1
      48:	00000001 	andeq	r0, r0, r1
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	00000001 	andeq	r0, r0, r1
            while( pxBlock != pxEnd )
      50:	00000001 	andeq	r0, r0, r1
      54:	00000001 	andeq	r0, r0, r1
                if( pxBlock->xBlockSize > xMaxSize )
      58:	08000640 	stmdaeq	r0, {r6, r9, sl}
      5c:	0800066c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl}
                if( pxBlock->xBlockSize < xMinSize )
      60:	00000001 	andeq	r0, r0, r1
                    xMinSize = pxBlock->xBlockSize;
      64:	00000001 	andeq	r0, r0, r1
	...
      70:	0800066c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl}
      74:	08000680 	stmdaeq	r0, {r7, r9, sl}
      78:	00000001 	andeq	r0, r0, r1
      7c:	00000001 	andeq	r0, r0, r1
      80:	08000680 	stmdaeq	r0, {r7, r9, sl}
      84:	08000694 	stmdaeq	r0, {r2, r4, r7, r9, sl}
      88:	08000694 	stmdaeq	r0, {r2, r4, r7, r9, sl}
      8c:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
      90:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
      94:	080006bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl}
      98:	080006bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl}
      9c:	080006c4 	stmdaeq	r0, {r2, r6, r7, r9, sl}
      a0:	080006c4 	stmdaeq	r0, {r2, r6, r7, r9, sl}
      a4:	080006c6 	stmdaeq	r0, {r1, r2, r6, r7, r9, sl}
      a8:	080006c6 	stmdaeq	r0, {r1, r2, r6, r7, r9, sl}
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	080006ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, sl}
      b0:	080006ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, sl}
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	080006e4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl}
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	080006e4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl}
      bc:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
      c4:	0800070c 	stmdaeq	r0, {r2, r3, r8, r9, sl}
      c8:	0800070c 	stmdaeq	r0, {r2, r3, r8, r9, sl}
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	08000724 	stmdaeq	r0, {r2, r5, r8, r9, sl}
	...
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	08000724 	stmdaeq	r0, {r2, r5, r8, r9, sl}
      dc:	08000770 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl}
	...
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	08000770 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl}
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	080007a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl}
      f0:	080007a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl}
    huart->TxXferCount = 0x00U;
      f4:	08000824 	stmdaeq	r0, {r2, r5, fp}
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	00000001 	andeq	r0, r0, r1
    huart->gState  = HAL_UART_STATE_READY;
      fc:	00000001 	andeq	r0, r0, r1
	...
    HAL_UART_AbortCpltCallback(huart);
     108:	08000824 	stmdaeq	r0, {r2, r5, fp}
     10c:	0800085c 	stmdaeq	r0, {r2, r3, r4, r6, fp}
	...
}
     118:	00000001 	andeq	r0, r0, r1
     11c:	00000001 	andeq	r0, r0, r1
     120:	00000001 	andeq	r0, r0, r1
     124:	00000001 	andeq	r0, r0, r1
	...
                    taskYIELD_WITHIN_API();
     130:	00000001 	andeq	r0, r0, r1
     134:	00000001 	andeq	r0, r0, r1
     138:	0800085c 	stmdaeq	r0, {r2, r3, r4, r6, fp}
            prvUnlockQueue( pxQueue );
     13c:	080008b8 	stmdaeq	r0, {r3, r4, r5, r7, fp}
     140:	080008b8 	stmdaeq	r0, {r3, r4, r5, r7, fp}
            ( void ) xTaskResumeAll();
     144:	08000918 	stmdaeq	r0, {r3, r4, r8, fp}
            return errQUEUE_FULL;
     148:	08000918 	stmdaeq	r0, {r3, r4, r8, fp}
     14c:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
     150:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
     154:	08000b16 	stmdaeq	r0, {r1, r2, r4, r8, r9, fp}
     158:	00000001 	andeq	r0, r0, r1
     15c:	00000001 	andeq	r0, r0, r1
     160:	08000b18 	stmdaeq	r0, {r3, r4, r8, r9, fp}
     164:	08000c44 	stmdaeq	r0, {r2, r6, sl, fp}
     168:	00000001 	andeq	r0, r0, r1
     16c:	00000001 	andeq	r0, r0, r1
     170:	00000001 	andeq	r0, r0, r1
     174:	00000001 	andeq	r0, r0, r1
     178:	00000001 	andeq	r0, r0, r1
     17c:	00000001 	andeq	r0, r0, r1
     180:	00000001 	andeq	r0, r0, r1
}
     184:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	00000001 	andeq	r0, r0, r1
     18c:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	08000c44 	stmdaeq	r0, {r2, r6, sl, fp}
     194:	08000d10 	stmdaeq	r0, {r4, r8, sl, fp}
     198:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	00000001 	andeq	r0, r0, r1
     1a0:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	00000001 	andeq	r0, r0, r1
     1a8:	00000001 	andeq	r0, r0, r1
     1ac:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	00000001 	andeq	r0, r0, r1
     1b4:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	00000001 	andeq	r0, r0, r1
     1bc:	00000001 	andeq	r0, r0, r1
     1c0:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	00000001 	andeq	r0, r0, r1
     1c8:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	00000001 	andeq	r0, r0, r1
     1d0:	00000001 	andeq	r0, r0, r1
     1d4:	00000001 	andeq	r0, r0, r1
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	00000001 	andeq	r0, r0, r1
     1dc:	00000001 	andeq	r0, r0, r1
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	00000001 	andeq	r0, r0, r1
     1e4:	00000001 	andeq	r0, r0, r1
     1e8:	00000001 	andeq	r0, r0, r1
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	00000001 	andeq	r0, r0, r1
     1f0:	08000d10 	stmdaeq	r0, {r4, r8, sl, fp}
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	08000d12 	stmdaeq	r0, {r1, r4, r8, sl, fp}
     1f8:	00000001 	andeq	r0, r0, r1
     1fc:	00000001 	andeq	r0, r0, r1
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	08000d12 	stmdaeq	r0, {r1, r4, r8, sl, fp}
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
     208:	00000001 	andeq	r0, r0, r1
     20c:	00000001 	andeq	r0, r0, r1
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	00000001 	andeq	r0, r0, r1
     214:	00000001 	andeq	r0, r0, r1
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
     21c:	08000d2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, fp}
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	00000001 	andeq	r0, r0, r1
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	00000001 	andeq	r0, r0, r1
     228:	08000d2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, fp}
  tmp = hdma->Instance->FCR;
     22c:	08000d30 	stmdaeq	r0, {r4, r5, r8, sl, fp}
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	00000001 	andeq	r0, r0, r1
  tmp |= hdma->Init.FIFOMode;
     234:	00000001 	andeq	r0, r0, r1
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	08000d30 	stmdaeq	r0, {r4, r5, r8, sl, fp}
    tmp |= hdma->Init.FIFOThreshold;
     23c:	08000d40 	stmdaeq	r0, {r6, r8, sl, fp}
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	00000001 	andeq	r0, r0, r1
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	00000001 	andeq	r0, r0, r1
     248:	00000001 	andeq	r0, r0, r1
  hdma->Instance->FCR = tmp;
     24c:	00000001 	andeq	r0, r0, r1
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	00000001 	andeq	r0, r0, r1
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	00000001 	andeq	r0, r0, r1
     258:	00000001 	andeq	r0, r0, r1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00000001 	andeq	r0, r0, r1
  hdma->State = HAL_DMA_STATE_READY;
     260:	00000001 	andeq	r0, r0, r1
     264:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
     268:	00000001 	andeq	r0, r0, r1
     26c:	00000001 	andeq	r0, r0, r1
     270:	00000001 	andeq	r0, r0, r1
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	00000001 	andeq	r0, r0, r1
     278:	00000001 	andeq	r0, r0, r1
     27c:	00000001 	andeq	r0, r0, r1
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	00000001 	andeq	r0, r0, r1
        hdma->State = HAL_DMA_STATE_READY;
     284:	00000001 	andeq	r0, r0, r1
        return HAL_ERROR; 
     288:	00000001 	andeq	r0, r0, r1
    return HAL_ERROR;
     28c:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	08000d40 	stmdaeq	r0, {r6, r8, sl, fp}
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	08000d42 	stmdaeq	r0, {r1, r6, r8, sl, fp}
     298:	08000d42 	stmdaeq	r0, {r1, r6, r8, sl, fp}
      tickstart = HAL_GetTick();
     29c:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
     2a4:	080010b0 	stmdaeq	r0, {r4, r5, r7, ip}
     2a8:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	00000001 	andeq	r0, r0, r1
     2b0:	00000001 	andeq	r0, r0, r1
     2b4:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
     2b8:	00000001 	andeq	r0, r0, r1
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	00000001 	andeq	r0, r0, r1
     2c0:	00000001 	andeq	r0, r0, r1
     2c4:	00000001 	andeq	r0, r0, r1
    FlagStatus       pwrclkchanged = RESET;
     2c8:	00000001 	andeq	r0, r0, r1
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	00000001 	andeq	r0, r0, r1
     2d0:	00000001 	andeq	r0, r0, r1
     2d4:	00000001 	andeq	r0, r0, r1
      tickstart = HAL_GetTick();
     2d8:	00000001 	andeq	r0, r0, r1
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	00000001 	andeq	r0, r0, r1
     2e0:	00000001 	andeq	r0, r0, r1
     2e4:	00000001 	andeq	r0, r0, r1
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	00000001 	andeq	r0, r0, r1
     2ec:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
     2f0:	00000001 	andeq	r0, r0, r1
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	00000001 	andeq	r0, r0, r1
     2f8:	00000001 	andeq	r0, r0, r1
     2fc:	00000001 	andeq	r0, r0, r1
     300:	00000001 	andeq	r0, r0, r1
     304:	00000001 	andeq	r0, r0, r1
     308:	00000001 	andeq	r0, r0, r1
     30c:	00000001 	andeq	r0, r0, r1
     310:	00000001 	andeq	r0, r0, r1
      tickstart = HAL_GetTick();
     314:	00000001 	andeq	r0, r0, r1
     318:	00000001 	andeq	r0, r0, r1
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	00000001 	andeq	r0, r0, r1
	...
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     328:	00000001 	andeq	r0, r0, r1
     32c:	00000001 	andeq	r0, r0, r1
     330:	00000001 	andeq	r0, r0, r1
          return HAL_TIMEOUT;
     334:	00000001 	andeq	r0, r0, r1
	...
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	00000001 	andeq	r0, r0, r1
     344:	00000001 	andeq	r0, r0, r1
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	00000001 	andeq	r0, r0, r1
     34c:	00000001 	andeq	r0, r0, r1
     350:	00000001 	andeq	r0, r0, r1
     354:	00000001 	andeq	r0, r0, r1
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	00000001 	andeq	r0, r0, r1
     360:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	00000001 	andeq	r0, r0, r1
     368:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	00000001 	andeq	r0, r0, r1
     370:	00000001 	andeq	r0, r0, r1
     374:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	080010b0 	stmdaeq	r0, {r4, r5, r7, ip}
     37c:	080010bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip}
     380:	080010bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip}
     384:	080010dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip}
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	080010dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip}
     38c:	080010fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, ip}
        __HAL_RCC_PLL_DISABLE();
     390:	00000001 	andeq	r0, r0, r1
     394:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
     398:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	00000001 	andeq	r0, r0, r1
     3a0:	00000001 	andeq	r0, r0, r1
     3a4:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	00000001 	andeq	r0, r0, r1
     3ac:	00000001 	andeq	r0, r0, r1
	...
      __HAL_RCC_PWR_CLK_DISABLE();
     3b8:	080010fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, ip}
     3bc:	080013e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, ip}
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	00000001 	andeq	r0, r0, r1
     3c4:	00000001 	andeq	r0, r0, r1
     3c8:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	00000001 	andeq	r0, r0, r1
     3d0:	00000001 	andeq	r0, r0, r1
     3d4:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	00000001 	andeq	r0, r0, r1
     3dc:	00000001 	andeq	r0, r0, r1
     3e0:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	00000001 	andeq	r0, r0, r1
     3e8:	00000001 	andeq	r0, r0, r1
     3ec:	00000001 	andeq	r0, r0, r1
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	00000001 	andeq	r0, r0, r1
     3f4:	00000001 	andeq	r0, r0, r1
	...
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     400:	00000001 	andeq	r0, r0, r1
     404:	00000001 	andeq	r0, r0, r1
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	00000001 	andeq	r0, r0, r1
     40c:	00000001 	andeq	r0, r0, r1
     410:	00000001 	andeq	r0, r0, r1
     414:	00000001 	andeq	r0, r0, r1
     418:	00000001 	andeq	r0, r0, r1
     41c:	00000001 	andeq	r0, r0, r1
     420:	00000001 	andeq	r0, r0, r1
     424:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_ENABLE();
     428:	00000001 	andeq	r0, r0, r1
     42c:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
     430:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	00000001 	andeq	r0, r0, r1
     438:	080013e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, ip}
     43c:	08001478 	stmdaeq	r0, {r3, r4, r5, r6, sl, ip}
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	08001478 	stmdaeq	r0, {r3, r4, r5, r6, sl, ip}
     444:	0800149e 	stmdaeq	r0, {r1, r2, r3, r4, r7, sl, ip}
            return HAL_TIMEOUT;
     448:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
     44c:	00000001 	andeq	r0, r0, r1
        __HAL_RCC_PLL_DISABLE();
     450:	00000001 	andeq	r0, r0, r1
     454:	00000001 	andeq	r0, r0, r1
        tickstart = HAL_GetTick();
     458:	00000001 	andeq	r0, r0, r1
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	00000001 	andeq	r0, r0, r1
     460:	00000001 	andeq	r0, r0, r1
     464:	00000001 	andeq	r0, r0, r1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	00000001 	andeq	r0, r0, r1
     46c:	00000001 	andeq	r0, r0, r1
            return HAL_TIMEOUT;
     470:	00000001 	andeq	r0, r0, r1
  return HAL_OK;
     474:	00000001 	andeq	r0, r0, r1
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	080014f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, sl, ip}
     484:	0800151e 	stmdaeq	r0, {r1, r2, r3, r4, r8, sl, ip}
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	08001548 	stmdaeq	r0, {r3, r6, r8, sl, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
	...
     498:	0800151e 	stmdaeq	r0, {r1, r2, r3, r4, r8, sl, ip}
     49c:	08001532 	stmdaeq	r0, {r1, r4, r5, r8, sl, ip}
     4a0:	0800154c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	08001558 	stmdaeq	r0, {r3, r4, r6, r8, sl, ip}
	...
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4b0:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	00000001 	andeq	r0, r0, r1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	00000001 	andeq	r0, r0, r1
     4bc:	00000001 	andeq	r0, r0, r1
	...
        return HAL_ERROR;
     4c8:	00000001 	andeq	r0, r0, r1
        return HAL_ERROR;
     4cc:	00000001 	andeq	r0, r0, r1
}
     4d0:	00000001 	andeq	r0, r0, r1
        return HAL_ERROR;
     4d4:	00000001 	andeq	r0, r0, r1
	...
          return HAL_ERROR;
     4e0:	00000001 	andeq	r0, r0, r1
     4e4:	00000001 	andeq	r0, r0, r1
     4e8:	00000001 	andeq	r0, r0, r1
     4ec:	00000001 	andeq	r0, r0, r1
	...
     4f8:	00000001 	andeq	r0, r0, r1
     4fc:	00000001 	andeq	r0, r0, r1
     500:	00000001 	andeq	r0, r0, r1
     504:	00000001 	andeq	r0, r0, r1
	...
     510:	080014a0 	stmdaeq	r0, {r5, r7, sl, ip}
     514:	080014dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, ip}
     518:	080014dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, ip}
     51c:	08001568 	stmdaeq	r0, {r3, r5, r6, r8, sl, ip}
     520:	08001568 	stmdaeq	r0, {r3, r5, r6, r8, sl, ip}
     524:	08001598 	stmdaeq	r0, {r3, r4, r7, r8, sl, ip}
     528:	00000001 	andeq	r0, r0, r1
     52c:	00000001 	andeq	r0, r0, r1
     530:	00000001 	andeq	r0, r0, r1
     534:	00000001 	andeq	r0, r0, r1
     538:	08001598 	stmdaeq	r0, {r3, r4, r7, r8, sl, ip}
     53c:	080015c0 	stmdaeq	r0, {r6, r7, r8, sl, ip}
     540:	00000001 	andeq	r0, r0, r1
     544:	00000001 	andeq	r0, r0, r1
     548:	00000001 	andeq	r0, r0, r1
     54c:	00000001 	andeq	r0, r0, r1
     550:	00000001 	andeq	r0, r0, r1
     554:	00000001 	andeq	r0, r0, r1
     558:	00000001 	andeq	r0, r0, r1
     55c:	00000001 	andeq	r0, r0, r1
     560:	00000001 	andeq	r0, r0, r1
     564:	00000001 	andeq	r0, r0, r1
     568:	00000001 	andeq	r0, r0, r1
     56c:	00000001 	andeq	r0, r0, r1
     570:	00000001 	andeq	r0, r0, r1
     574:	00000001 	andeq	r0, r0, r1
     578:	00000001 	andeq	r0, r0, r1
     57c:	00000001 	andeq	r0, r0, r1
     580:	00000001 	andeq	r0, r0, r1
     584:	00000001 	andeq	r0, r0, r1
     588:	00000001 	andeq	r0, r0, r1
     58c:	00000001 	andeq	r0, r0, r1
     590:	00000001 	andeq	r0, r0, r1
     594:	00000001 	andeq	r0, r0, r1
     598:	00000001 	andeq	r0, r0, r1
     59c:	00000001 	andeq	r0, r0, r1
     5a0:	00000001 	andeq	r0, r0, r1
     5a4:	00000001 	andeq	r0, r0, r1
	...
     5b0:	00000001 	andeq	r0, r0, r1
     5b4:	00000001 	andeq	r0, r0, r1
     5b8:	00000001 	andeq	r0, r0, r1
     5bc:	00000001 	andeq	r0, r0, r1
     5c0:	00000001 	andeq	r0, r0, r1
     5c4:	00000001 	andeq	r0, r0, r1
     5c8:	080015c0 	stmdaeq	r0, {r6, r7, r8, sl, ip}
     5cc:	0800160c 	stmdaeq	r0, {r2, r3, r9, sl, ip}
     5d0:	0800160c 	stmdaeq	r0, {r2, r3, r9, sl, ip}
     5d4:	08001640 	stmdaeq	r0, {r6, r9, sl, ip}
     5d8:	08001640 	stmdaeq	r0, {r6, r9, sl, ip}
     5dc:	08001658 	stmdaeq	r0, {r3, r4, r6, r9, sl, ip}
     5e0:	08001658 	stmdaeq	r0, {r3, r4, r6, r9, sl, ip}
     5e4:	08001664 	stmdaeq	r0, {r2, r5, r6, r9, sl, ip}
     5e8:	00000001 	andeq	r0, r0, r1
     5ec:	00000001 	andeq	r0, r0, r1
     5f0:	00000001 	andeq	r0, r0, r1
     5f4:	00000001 	andeq	r0, r0, r1
     5f8:	00000001 	andeq	r0, r0, r1
     5fc:	00000001 	andeq	r0, r0, r1
     600:	08001664 	stmdaeq	r0, {r2, r5, r6, r9, sl, ip}
     604:	0800168c 	stmdaeq	r0, {r2, r3, r7, r9, sl, ip}
     608:	00000001 	andeq	r0, r0, r1
     60c:	00000001 	andeq	r0, r0, r1
     610:	00000001 	andeq	r0, r0, r1
     614:	00000001 	andeq	r0, r0, r1
     618:	00000001 	andeq	r0, r0, r1
     61c:	00000001 	andeq	r0, r0, r1
     620:	00000001 	andeq	r0, r0, r1
     624:	00000001 	andeq	r0, r0, r1
     628:	00000001 	andeq	r0, r0, r1
     62c:	00000001 	andeq	r0, r0, r1
     630:	00000001 	andeq	r0, r0, r1
     634:	00000001 	andeq	r0, r0, r1
     638:	00000001 	andeq	r0, r0, r1
     63c:	00000001 	andeq	r0, r0, r1
     640:	00000001 	andeq	r0, r0, r1
     644:	00000001 	andeq	r0, r0, r1
     648:	00000001 	andeq	r0, r0, r1
     64c:	00000001 	andeq	r0, r0, r1
     650:	00000001 	andeq	r0, r0, r1
     654:	00000001 	andeq	r0, r0, r1
     658:	00000001 	andeq	r0, r0, r1
     65c:	00000001 	andeq	r0, r0, r1
     660:	00000001 	andeq	r0, r0, r1
     664:	00000001 	andeq	r0, r0, r1
     668:	00000001 	andeq	r0, r0, r1
     66c:	00000001 	andeq	r0, r0, r1
     670:	00000001 	andeq	r0, r0, r1
     674:	00000001 	andeq	r0, r0, r1
     678:	00000001 	andeq	r0, r0, r1
     67c:	00000001 	andeq	r0, r0, r1
     680:	00000001 	andeq	r0, r0, r1
     684:	00000001 	andeq	r0, r0, r1
	...
     690:	0800168c 	stmdaeq	r0, {r2, r3, r7, r9, sl, ip}
     694:	080016a0 	stmdaeq	r0, {r5, r7, r9, sl, ip}
     698:	00000001 	andeq	r0, r0, r1
     69c:	00000001 	andeq	r0, r0, r1
	...
     6a8:	080016a0 	stmdaeq	r0, {r5, r7, r9, sl, ip}
     6ac:	080016cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip}
     6b0:	080016cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip}
     6b4:	08001702 	stmdaeq	r0, {r1, r8, r9, sl, ip}
     6b8:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
     6bc:	0800171c 	stmdaeq	r0, {r2, r3, r4, r8, r9, sl, ip}
     6c0:	0800171c 	stmdaeq	r0, {r2, r3, r4, r8, r9, sl, ip}
     6c4:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
     6c8:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
     6cc:	080017e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl, ip}
     6d0:	080017e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl, ip}
     6d4:	0800196c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp, ip}
     6d8:	00000001 	andeq	r0, r0, r1
     6dc:	00000001 	andeq	r0, r0, r1
     6e0:	00000001 	andeq	r0, r0, r1
     6e4:	00000001 	andeq	r0, r0, r1
	...
     6f0:	0800196c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp, ip}
     6f4:	080019f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, fp, ip}
	...
     700:	080019f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, fp, ip}
     704:	08001a0e 	stmdaeq	r0, {r1, r2, r3, r9, fp, ip}
     708:	08001a0e 	stmdaeq	r0, {r1, r2, r3, r9, fp, ip}
     70c:	08001a14 	stmdaeq	r0, {r2, r4, r9, fp, ip}
     710:	00000001 	andeq	r0, r0, r1
     714:	00000001 	andeq	r0, r0, r1
     718:	08001a14 	stmdaeq	r0, {r2, r4, r9, fp, ip}
     71c:	08001a46 	stmdaeq	r0, {r1, r2, r6, r9, fp, ip}
     720:	08001a46 	stmdaeq	r0, {r1, r2, r6, r9, fp, ip}
     724:	08001a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp, ip}
	...
     730:	08001b36 	stmdaeq	r0, {r1, r2, r4, r5, r8, r9, fp, ip}
     734:	08001b62 	stmdaeq	r0, {r1, r5, r6, r8, r9, fp, ip}
     738:	08001b64 	stmdaeq	r0, {r2, r5, r6, r8, r9, fp, ip}
     73c:	08001b76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, fp, ip}
	...
     748:	00000001 	andeq	r0, r0, r1
     74c:	00000001 	andeq	r0, r0, r1
     750:	00000001 	andeq	r0, r0, r1
     754:	00000001 	andeq	r0, r0, r1
	...
     760:	00000001 	andeq	r0, r0, r1
     764:	00000001 	andeq	r0, r0, r1
     768:	00000001 	andeq	r0, r0, r1
     76c:	00000001 	andeq	r0, r0, r1
	...
     778:	00000001 	andeq	r0, r0, r1
     77c:	00000001 	andeq	r0, r0, r1
     780:	00000001 	andeq	r0, r0, r1
     784:	00000001 	andeq	r0, r0, r1
	...
     790:	08001cfa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, sl, fp, ip}
     794:	08001d10 	stmdaeq	r0, {r4, r8, sl, fp, ip}
     798:	08001d14 	stmdaeq	r0, {r2, r4, r8, sl, fp, ip}
     79c:	08001d48 	stmdaeq	r0, {r3, r6, r8, sl, fp, ip}
     7a0:	08001d7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, sl, fp, ip}
     7a4:	08001d8c 	stmdaeq	r0, {r2, r3, r7, r8, sl, fp, ip}
	...
     7b0:	00000001 	andeq	r0, r0, r1
     7b4:	00000001 	andeq	r0, r0, r1
     7b8:	00000001 	andeq	r0, r0, r1
     7bc:	00000001 	andeq	r0, r0, r1
     7c0:	00000001 	andeq	r0, r0, r1
     7c4:	00000001 	andeq	r0, r0, r1
	...
     7d0:	00000001 	andeq	r0, r0, r1
     7d4:	00000001 	andeq	r0, r0, r1
     7d8:	00000001 	andeq	r0, r0, r1
     7dc:	00000001 	andeq	r0, r0, r1
     7e0:	00000001 	andeq	r0, r0, r1
     7e4:	00000001 	andeq	r0, r0, r1
	...
     7f0:	00000001 	andeq	r0, r0, r1
     7f4:	00000001 	andeq	r0, r0, r1
     7f8:	00000001 	andeq	r0, r0, r1
     7fc:	00000001 	andeq	r0, r0, r1
	...
     808:	00000001 	andeq	r0, r0, r1
     80c:	00000001 	andeq	r0, r0, r1
     810:	00000001 	andeq	r0, r0, r1
     814:	00000001 	andeq	r0, r0, r1
     818:	08001a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp, ip}
     81c:	08001a84 	stmdaeq	r0, {r2, r7, r9, fp, ip}
     820:	08001a84 	stmdaeq	r0, {r2, r7, r9, fp, ip}
     824:	08001afa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, fp, ip}
     828:	08001afa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, fp, ip}
     82c:	08001b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp, ip}
     830:	08001b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp, ip}
     834:	08001b76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, fp, ip}
     838:	08001b76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, fp, ip}
     83c:	08001bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, ip}
     840:	08001bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, ip}
     844:	08001c8e 	stmdaeq	r0, {r1, r2, r3, r7, sl, fp, ip}
     848:	08001c8e 	stmdaeq	r0, {r1, r2, r3, r7, sl, fp, ip}
     84c:	08001cae 	stmdaeq	r0, {r1, r2, r3, r5, r7, sl, fp, ip}
     850:	08001cae 	stmdaeq	r0, {r1, r2, r3, r5, r7, sl, fp, ip}
     854:	08001cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, ip}
     858:	00000001 	andeq	r0, r0, r1
     85c:	00000001 	andeq	r0, r0, r1
     860:	00000001 	andeq	r0, r0, r1
     864:	00000001 	andeq	r0, r0, r1
     868:	00000001 	andeq	r0, r0, r1
     86c:	00000001 	andeq	r0, r0, r1
     870:	00000001 	andeq	r0, r0, r1
     874:	00000001 	andeq	r0, r0, r1
     878:	00000001 	andeq	r0, r0, r1
     87c:	00000001 	andeq	r0, r0, r1
     880:	00000001 	andeq	r0, r0, r1
     884:	00000001 	andeq	r0, r0, r1
     888:	00000001 	andeq	r0, r0, r1
     88c:	00000001 	andeq	r0, r0, r1
     890:	00000001 	andeq	r0, r0, r1
     894:	00000001 	andeq	r0, r0, r1
     898:	00000001 	andeq	r0, r0, r1
     89c:	00000001 	andeq	r0, r0, r1
     8a0:	00000001 	andeq	r0, r0, r1
     8a4:	00000001 	andeq	r0, r0, r1
     8a8:	00000001 	andeq	r0, r0, r1
     8ac:	00000001 	andeq	r0, r0, r1
     8b0:	08001cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, ip}
     8b4:	08001dfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, fp, ip}
     8b8:	00000001 	andeq	r0, r0, r1
     8bc:	00000001 	andeq	r0, r0, r1
     8c0:	00000001 	andeq	r0, r0, r1
     8c4:	00000001 	andeq	r0, r0, r1
     8c8:	00000001 	andeq	r0, r0, r1
     8cc:	00000001 	andeq	r0, r0, r1
     8d0:	00000001 	andeq	r0, r0, r1
     8d4:	00000001 	andeq	r0, r0, r1
     8d8:	00000001 	andeq	r0, r0, r1
     8dc:	00000001 	andeq	r0, r0, r1
     8e0:	00000001 	andeq	r0, r0, r1
     8e4:	00000001 	andeq	r0, r0, r1
     8e8:	00000001 	andeq	r0, r0, r1
     8ec:	00000001 	andeq	r0, r0, r1
     8f0:	00000001 	andeq	r0, r0, r1
     8f4:	00000001 	andeq	r0, r0, r1
     8f8:	00000001 	andeq	r0, r0, r1
     8fc:	00000001 	andeq	r0, r0, r1
     900:	00000001 	andeq	r0, r0, r1
     904:	00000001 	andeq	r0, r0, r1
     908:	00000001 	andeq	r0, r0, r1
     90c:	00000001 	andeq	r0, r0, r1
     910:	00000001 	andeq	r0, r0, r1
     914:	00000001 	andeq	r0, r0, r1
     918:	00000001 	andeq	r0, r0, r1
     91c:	00000001 	andeq	r0, r0, r1
     920:	08001dfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, fp, ip}
     924:	08001e4e 	stmdaeq	r0, {r1, r2, r3, r6, r9, sl, fp, ip}
     928:	00000001 	andeq	r0, r0, r1
     92c:	00000001 	andeq	r0, r0, r1
     930:	00000001 	andeq	r0, r0, r1
     934:	00000001 	andeq	r0, r0, r1
     938:	00000001 	andeq	r0, r0, r1
     93c:	00000001 	andeq	r0, r0, r1
     940:	00000001 	andeq	r0, r0, r1
     944:	00000001 	andeq	r0, r0, r1
     948:	00000001 	andeq	r0, r0, r1
     94c:	00000001 	andeq	r0, r0, r1
	...
     958:	080020e2 	stmdaeq	r0, {r1, r5, r6, r7, sp}
     95c:	08002102 	stmdaeq	r0, {r1, r8, sp}
     960:	0800212a 	stmdaeq	r0, {r1, r3, r5, r8, sp}
     964:	08002134 	stmdaeq	r0, {r2, r4, r5, r8, sp}
	...
     970:	0800215c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sp}
     974:	08002162 	stmdaeq	r0, {r1, r5, r6, r8, sp}
     978:	08002164 	stmdaeq	r0, {r2, r5, r6, r8, sp}
     97c:	08002196 	stmdaeq	r0, {r1, r2, r4, r7, r8, sp}
	...
     988:	00000001 	andeq	r0, r0, r1
     98c:	00000001 	andeq	r0, r0, r1
     990:	00000001 	andeq	r0, r0, r1
     994:	00000001 	andeq	r0, r0, r1
	...
     9a0:	00000001 	andeq	r0, r0, r1
     9a4:	00000001 	andeq	r0, r0, r1
     9a8:	00000001 	andeq	r0, r0, r1
     9ac:	00000001 	andeq	r0, r0, r1
	...
     9b8:	0800230c 	stmdaeq	r0, {r2, r3, r8, r9, sp}
     9bc:	0800231e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, sp}
     9c0:	08002320 	stmdaeq	r0, {r5, r8, r9, sp}
     9c4:	0800233e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, r9, sp}
     9c8:	08002340 	stmdaeq	r0, {r6, r8, r9, sp}
     9cc:	0800235a 	stmdaeq	r0, {r1, r3, r4, r6, r8, r9, sp}
     9d0:	0800235e 	stmdaeq	r0, {r1, r2, r3, r4, r6, r8, r9, sp}
     9d4:	08002424 	stmdaeq	r0, {r2, r5, sl, sp}
     9d8:	08002430 	stmdaeq	r0, {r4, r5, sl, sp}
     9dc:	08002432 	stmdaeq	r0, {r1, r4, r5, sl, sp}
	...
     9e8:	0800236e 	stmdaeq	r0, {r1, r2, r3, r5, r6, r8, r9, sp}
     9ec:	08002374 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sp}
     9f0:	080023e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r8, r9, sp}
     9f4:	08002404 	stmdaeq	r0, {r2, sl, sp}
	...
     a00:	08002374 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sp}
     a04:	0800237e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r8, r9, sp}
     a08:	0800240a 	stmdaeq	r0, {r1, r3, sl, sp}
     a0c:	08002424 	stmdaeq	r0, {r2, r5, sl, sp}
	...
     a18:	08002466 	stmdaeq	r0, {r1, r2, r5, r6, sl, sp}
     a1c:	0800247a 	stmdaeq	r0, {r1, r3, r4, r5, r6, sl, sp}
     a20:	0800247e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, sl, sp}
     a24:	0800248a 	stmdaeq	r0, {r1, r3, r7, sl, sp}
     a28:	0800248c 	stmdaeq	r0, {r2, r3, r7, sl, sp}
     a2c:	08002574 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, sp}
     a30:	08002576 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, sp}
     a34:	08002576 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, sl, sp}
	...
     a40:	0800247e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, sl, sp}
     a44:	08002484 	stmdaeq	r0, {r2, r7, sl, sp}
     a48:	0800249a 	stmdaeq	r0, {r1, r3, r4, r7, sl, sp}
     a4c:	080024ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, sl, sp}
	...
     a58:	08002484 	stmdaeq	r0, {r2, r7, sl, sp}
     a5c:	0800248a 	stmdaeq	r0, {r1, r3, r7, sl, sp}
     a60:	080024ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, sl, sp}
     a64:	080024d8 	stmdaeq	r0, {r3, r4, r6, r7, sl, sp}
	...
     a70:	08002530 	stmdaeq	r0, {r4, r5, r8, sl, sp}
     a74:	08002536 	stmdaeq	r0, {r1, r2, r4, r5, r8, sl, sp}
     a78:	08002558 	stmdaeq	r0, {r3, r4, r6, r8, sl, sp}
     a7c:	08002574 	stmdaeq	r0, {r2, r4, r5, r6, r8, sl, sp}
	...
     a88:	00000001 	andeq	r0, r0, r1
     a8c:	00000001 	andeq	r0, r0, r1
     a90:	00000001 	andeq	r0, r0, r1
     a94:	00000001 	andeq	r0, r0, r1
     a98:	00000001 	andeq	r0, r0, r1
     a9c:	00000001 	andeq	r0, r0, r1
     aa0:	00000001 	andeq	r0, r0, r1
     aa4:	00000001 	andeq	r0, r0, r1
	...
     ab0:	080025ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, sl, sp}
     ab4:	080025f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, sp}
     ab8:	08002602 	stmdaeq	r0, {r1, r9, sl, sp}
     abc:	0800261c 	stmdaeq	r0, {r2, r3, r4, r9, sl, sp}
	...
     ac8:	08002630 	stmdaeq	r0, {r4, r5, r9, sl, sp}
     acc:	0800267a 	stmdaeq	r0, {r1, r3, r4, r5, r6, r9, sl, sp}
     ad0:	0800267e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r9, sl, sp}
     ad4:	080026a0 	stmdaeq	r0, {r5, r7, r9, sl, sp}
	...
     ae0:	08002646 	stmdaeq	r0, {r1, r2, r6, r9, sl, sp}
     ae4:	08002676 	stmdaeq	r0, {r1, r2, r4, r5, r6, r9, sl, sp}
     ae8:	0800267e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r9, sl, sp}
     aec:	080026a0 	stmdaeq	r0, {r5, r7, r9, sl, sp}
	...
     af8:	00000001 	andeq	r0, r0, r1
     afc:	00000001 	andeq	r0, r0, r1
     b00:	00000001 	andeq	r0, r0, r1
     b04:	00000001 	andeq	r0, r0, r1
	...
     b10:	00000001 	andeq	r0, r0, r1
     b14:	00000001 	andeq	r0, r0, r1
     b18:	00000001 	andeq	r0, r0, r1
     b1c:	00000001 	andeq	r0, r0, r1
	...
     b28:	080026fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r9, sl, sp}
     b2c:	0800271e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, sl, sp}
     b30:	0800279a 	stmdaeq	r0, {r1, r3, r4, r7, r8, r9, sl, sp}
     b34:	080027a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, sp}
	...
     b40:	08002726 	stmdaeq	r0, {r1, r2, r5, r8, r9, sl, sp}
     b44:	08002744 	stmdaeq	r0, {r2, r6, r8, r9, sl, sp}
     b48:	080027a0 	stmdaeq	r0, {r5, r7, r8, r9, sl, sp}
     b4c:	080027a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, r9, sl, sp}
	...
     b58:	00000001 	andeq	r0, r0, r1
     b5c:	00000001 	andeq	r0, r0, r1
     b60:	00000001 	andeq	r0, r0, r1
     b64:	00000001 	andeq	r0, r0, r1
	...
     b70:	00000001 	andeq	r0, r0, r1
     b74:	00000001 	andeq	r0, r0, r1
     b78:	00000001 	andeq	r0, r0, r1
     b7c:	00000001 	andeq	r0, r0, r1
	...
     b88:	080027fe 	stmdaeq	r0, {r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, sp}
     b8c:	0800281c 	stmdaeq	r0, {r2, r3, r4, fp, sp}
     b90:	08002824 	stmdaeq	r0, {r2, r5, fp, sp}
     b94:	08002870 	stmdaeq	r0, {r4, r5, r6, fp, sp}
	...
     ba0:	00000001 	andeq	r0, r0, r1
     ba4:	00000001 	andeq	r0, r0, r1
     ba8:	00000001 	andeq	r0, r0, r1
     bac:	00000001 	andeq	r0, r0, r1
	...
     bb8:	00000001 	andeq	r0, r0, r1
     bbc:	00000001 	andeq	r0, r0, r1
     bc0:	00000001 	andeq	r0, r0, r1
     bc4:	00000001 	andeq	r0, r0, r1
	...
     bd0:	00000001 	andeq	r0, r0, r1
     bd4:	00000001 	andeq	r0, r0, r1
     bd8:	00000001 	andeq	r0, r0, r1
     bdc:	00000001 	andeq	r0, r0, r1
	...
     be8:	080029a6 	stmdaeq	r0, {r1, r2, r5, r7, r8, fp, sp}
     bec:	080029d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, fp, sp}
     bf0:	080029d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, fp, sp}
     bf4:	080029d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, fp, sp}
     bf8:	080029d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, fp, sp}
     bfc:	080029e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp, sp}
	...
     c08:	00000001 	andeq	r0, r0, r1
     c0c:	00000001 	andeq	r0, r0, r1
     c10:	08001e50 	stmdaeq	r0, {r4, r6, r9, sl, fp, ip}
     c14:	08001e90 	stmdaeq	r0, {r4, r7, r9, sl, fp, ip}
     c18:	00000001 	andeq	r0, r0, r1
     c1c:	00000001 	andeq	r0, r0, r1
     c20:	00000001 	andeq	r0, r0, r1
     c24:	00000001 	andeq	r0, r0, r1
     c28:	08001e90 	stmdaeq	r0, {r4, r7, r9, sl, fp, ip}
     c2c:	08001eb8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sl, fp, ip}
     c30:	08001eb8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sl, fp, ip}
     c34:	08001f4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, fp, ip}
     c38:	08001f4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, fp, ip}
     c3c:	08001f9e 	stmdaeq	r0, {r1, r2, r3, r4, r7, r8, r9, sl, fp, ip}
     c40:	08001fa0 	stmdaeq	r0, {r5, r7, r8, r9, sl, fp, ip}
     c44:	08002008 	stmdaeq	r0, {r3, sp}
     c48:	08002008 	stmdaeq	r0, {r3, sp}
     c4c:	080020d4 	stmdaeq	r0, {r2, r4, r6, r7, sp}
     c50:	080020d4 	stmdaeq	r0, {r2, r4, r6, r7, sp}
     c54:	08002136 	stmdaeq	r0, {r1, r2, r4, r5, r8, sp}
     c58:	08002136 	stmdaeq	r0, {r1, r2, r4, r5, r8, sp}
     c5c:	0800215a 	stmdaeq	r0, {r1, r3, r4, r6, r8, sp}
     c60:	0800215c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sp}
     c64:	080021a8 	stmdaeq	r0, {r3, r5, r7, r8, sp}
     c68:	080021a8 	stmdaeq	r0, {r3, r5, r7, r8, sp}
     c6c:	08002250 	stmdaeq	r0, {r4, r6, r9, sp}
     c70:	08002250 	stmdaeq	r0, {r4, r6, r9, sp}
     c74:	08002278 	stmdaeq	r0, {r3, r4, r5, r6, r9, sp}
     c78:	08002278 	stmdaeq	r0, {r3, r4, r5, r6, r9, sp}
     c7c:	0800229a 	stmdaeq	r0, {r1, r3, r4, r7, r9, sp}
     c80:	00000001 	andeq	r0, r0, r1
     c84:	00000001 	andeq	r0, r0, r1
     c88:	00000001 	andeq	r0, r0, r1
     c8c:	00000001 	andeq	r0, r0, r1
     c90:	00000001 	andeq	r0, r0, r1
     c94:	00000001 	andeq	r0, r0, r1
     c98:	00000001 	andeq	r0, r0, r1
     c9c:	00000001 	andeq	r0, r0, r1
     ca0:	00000001 	andeq	r0, r0, r1
     ca4:	00000001 	andeq	r0, r0, r1
     ca8:	00000001 	andeq	r0, r0, r1
     cac:	00000001 	andeq	r0, r0, r1
     cb0:	00000001 	andeq	r0, r0, r1
     cb4:	00000001 	andeq	r0, r0, r1
     cb8:	00000001 	andeq	r0, r0, r1
     cbc:	00000001 	andeq	r0, r0, r1
     cc0:	00000001 	andeq	r0, r0, r1
     cc4:	00000001 	andeq	r0, r0, r1
     cc8:	00000001 	andeq	r0, r0, r1
     ccc:	00000001 	andeq	r0, r0, r1
     cd0:	0800229c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sp}
     cd4:	080022ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sp}
     cd8:	080022ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sp}
     cdc:	080022b8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sp}
     ce0:	00000001 	andeq	r0, r0, r1
     ce4:	00000001 	andeq	r0, r0, r1
     ce8:	080022b8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sp}
     cec:	080022c4 	stmdaeq	r0, {r2, r6, r7, r9, sp}
     cf0:	00000001 	andeq	r0, r0, r1
     cf4:	00000001 	andeq	r0, r0, r1
     cf8:	00000001 	andeq	r0, r0, r1
     cfc:	00000001 	andeq	r0, r0, r1
     d00:	00000001 	andeq	r0, r0, r1
     d04:	00000001 	andeq	r0, r0, r1
     d08:	00000001 	andeq	r0, r0, r1
     d0c:	00000001 	andeq	r0, r0, r1
     d10:	080022c4 	stmdaeq	r0, {r2, r6, r7, r9, sp}
     d14:	08002300 	stmdaeq	r0, {r8, r9, sp}
     d18:	08002300 	stmdaeq	r0, {r8, r9, sp}
     d1c:	08002460 	stmdaeq	r0, {r5, r6, sl, sp}
     d20:	08002460 	stmdaeq	r0, {r5, r6, sl, sp}
     d24:	080025a0 	stmdaeq	r0, {r5, r7, r8, sl, sp}
     d28:	00000001 	andeq	r0, r0, r1
     d2c:	00000001 	andeq	r0, r0, r1
     d30:	080025a0 	stmdaeq	r0, {r5, r7, r8, sl, sp}
     d34:	080025d2 	stmdaeq	r0, {r1, r4, r6, r7, r8, sl, sp}
     d38:	080025d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, sp}
     d3c:	0800261c 	stmdaeq	r0, {r2, r3, r4, r9, sl, sp}
     d40:	00000001 	andeq	r0, r0, r1
     d44:	00000001 	andeq	r0, r0, r1
     d48:	00000001 	andeq	r0, r0, r1
     d4c:	00000001 	andeq	r0, r0, r1
     d50:	00000001 	andeq	r0, r0, r1
     d54:	00000001 	andeq	r0, r0, r1
     d58:	00000001 	andeq	r0, r0, r1
     d5c:	00000001 	andeq	r0, r0, r1
     d60:	00000001 	andeq	r0, r0, r1
     d64:	00000001 	andeq	r0, r0, r1
     d68:	00000001 	andeq	r0, r0, r1
     d6c:	00000001 	andeq	r0, r0, r1
     d70:	00000001 	andeq	r0, r0, r1
     d74:	00000001 	andeq	r0, r0, r1
     d78:	0800261c 	stmdaeq	r0, {r2, r3, r4, r9, sl, sp}
     d7c:	080026a0 	stmdaeq	r0, {r5, r7, r9, sl, sp}
     d80:	00000001 	andeq	r0, r0, r1
     d84:	00000001 	andeq	r0, r0, r1
     d88:	080026a0 	stmdaeq	r0, {r5, r7, r9, sl, sp}
     d8c:	080026bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, sp}
     d90:	00000001 	andeq	r0, r0, r1
     d94:	00000001 	andeq	r0, r0, r1
     d98:	080026bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, sp}
     d9c:	080026f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, sp}
     da0:	080026f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, sp}
     da4:	080027dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, sp}
     da8:	00000001 	andeq	r0, r0, r1
     dac:	00000001 	andeq	r0, r0, r1
     db0:	00000001 	andeq	r0, r0, r1
     db4:	00000001 	andeq	r0, r0, r1
     db8:	080027dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, sp}
     dbc:	080027f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, sp}
     dc0:	080027f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, sp}
     dc4:	08002870 	stmdaeq	r0, {r4, r5, r6, fp, sp}
     dc8:	08002870 	stmdaeq	r0, {r4, r5, r6, fp, sp}
     dcc:	0800287c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, sp}
     dd0:	0800287c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, sp}
     dd4:	080028c4 	stmdaeq	r0, {r2, r6, r7, fp, sp}
     dd8:	00000001 	andeq	r0, r0, r1
     ddc:	00000001 	andeq	r0, r0, r1
     de0:	00000001 	andeq	r0, r0, r1
     de4:	00000001 	andeq	r0, r0, r1
     de8:	00000001 	andeq	r0, r0, r1
     dec:	00000001 	andeq	r0, r0, r1
     df0:	080028c4 	stmdaeq	r0, {r2, r6, r7, fp, sp}
     df4:	080028e4 	stmdaeq	r0, {r2, r5, r6, r7, fp, sp}
     df8:	00000001 	andeq	r0, r0, r1
     dfc:	00000001 	andeq	r0, r0, r1
     e00:	080028e4 	stmdaeq	r0, {r2, r5, r6, r7, fp, sp}
     e04:	08002964 	stmdaeq	r0, {r2, r5, r6, r8, fp, sp}
     e08:	00000001 	andeq	r0, r0, r1
     e0c:	00000001 	andeq	r0, r0, r1
     e10:	00000001 	andeq	r0, r0, r1
     e14:	00000001 	andeq	r0, r0, r1
     e18:	00000001 	andeq	r0, r0, r1
     e1c:	00000001 	andeq	r0, r0, r1
     e20:	00000001 	andeq	r0, r0, r1
     e24:	00000001 	andeq	r0, r0, r1
     e28:	00000001 	andeq	r0, r0, r1
     e2c:	00000001 	andeq	r0, r0, r1
     e30:	00000001 	andeq	r0, r0, r1
     e34:	00000001 	andeq	r0, r0, r1
     e38:	00000001 	andeq	r0, r0, r1
     e3c:	00000001 	andeq	r0, r0, r1
     e40:	00000001 	andeq	r0, r0, r1
     e44:	00000001 	andeq	r0, r0, r1
     e48:	00000001 	andeq	r0, r0, r1
     e4c:	00000001 	andeq	r0, r0, r1
     e50:	00000001 	andeq	r0, r0, r1
     e54:	00000001 	andeq	r0, r0, r1
     e58:	08002964 	stmdaeq	r0, {r2, r5, r6, r8, fp, sp}
     e5c:	0800297c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, fp, sp}
     e60:	0800297c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, fp, sp}
     e64:	080029e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp, sp}
     e68:	080029e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp, sp}
     e6c:	08002a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp, sp}
     e70:	08002a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp, sp}
     e74:	08002a54 	stmdaeq	r0, {r2, r4, r6, r9, fp, sp}
     e78:	00000001 	andeq	r0, r0, r1
     e7c:	00000001 	andeq	r0, r0, r1
	...
     e88:	08002a54 	stmdaeq	r0, {r2, r4, r6, r9, fp, sp}
     e8c:	08002a74 	stmdaeq	r0, {r2, r4, r5, r6, r9, fp, sp}
     e90:	08002a74 	stmdaeq	r0, {r2, r4, r5, r6, r9, fp, sp}
     e94:	08002abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp, sp}
     e98:	08002abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp, sp}
     e9c:	08002ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp, sp}
     ea0:	08002ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp, sp}
     ea4:	08002b24 	stmdaeq	r0, {r2, r5, r8, r9, fp, sp}
     ea8:	08002b24 	stmdaeq	r0, {r2, r5, r8, r9, fp, sp}
     eac:	08002b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp, sp}
     eb0:	08002b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp, sp}
     eb4:	08002b80 	stmdaeq	r0, {r7, r8, r9, fp, sp}
     eb8:	08002b80 	stmdaeq	r0, {r7, r8, r9, fp, sp}
     ebc:	08002bf4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, fp, sp}
     ec0:	08002bf4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, fp, sp}
     ec4:	08002cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, sp}
     ec8:	08002cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, sp}
     ecc:	08002d02 	stmdaeq	r0, {r1, r8, sl, fp, sp}
     ed0:	08002d04 	stmdaeq	r0, {r2, r8, sl, fp, sp}
     ed4:	08002d64 	stmdaeq	r0, {r2, r5, r6, r8, sl, fp, sp}
     ed8:	00000001 	andeq	r0, r0, r1
     edc:	00000001 	andeq	r0, r0, r1
     ee0:	08002d64 	stmdaeq	r0, {r2, r5, r6, r8, sl, fp, sp}
     ee4:	08002dc0 	stmdaeq	r0, {r6, r7, r8, sl, fp, sp}
     ee8:	00000001 	andeq	r0, r0, r1
     eec:	00000001 	andeq	r0, r0, r1
     ef0:	00000001 	andeq	r0, r0, r1
     ef4:	00000001 	andeq	r0, r0, r1
     ef8:	00000001 	andeq	r0, r0, r1
     efc:	00000001 	andeq	r0, r0, r1
     f00:	00000001 	andeq	r0, r0, r1
     f04:	00000001 	andeq	r0, r0, r1
     f08:	00000001 	andeq	r0, r0, r1
     f0c:	00000001 	andeq	r0, r0, r1
     f10:	00000001 	andeq	r0, r0, r1
     f14:	00000001 	andeq	r0, r0, r1
     f18:	00000001 	andeq	r0, r0, r1
     f1c:	00000001 	andeq	r0, r0, r1
     f20:	00000001 	andeq	r0, r0, r1
     f24:	00000001 	andeq	r0, r0, r1
     f28:	00000001 	andeq	r0, r0, r1
     f2c:	00000001 	andeq	r0, r0, r1
     f30:	00000001 	andeq	r0, r0, r1
     f34:	00000001 	andeq	r0, r0, r1
     f38:	00000001 	andeq	r0, r0, r1
     f3c:	00000001 	andeq	r0, r0, r1
     f40:	00000001 	andeq	r0, r0, r1
     f44:	00000001 	andeq	r0, r0, r1
     f48:	00000001 	andeq	r0, r0, r1
     f4c:	00000001 	andeq	r0, r0, r1
     f50:	00000001 	andeq	r0, r0, r1
     f54:	00000001 	andeq	r0, r0, r1
     f58:	00000001 	andeq	r0, r0, r1
     f5c:	00000001 	andeq	r0, r0, r1
     f60:	00000001 	andeq	r0, r0, r1
     f64:	00000001 	andeq	r0, r0, r1
     f68:	00000001 	andeq	r0, r0, r1
     f6c:	00000001 	andeq	r0, r0, r1
     f70:	00000001 	andeq	r0, r0, r1
     f74:	00000001 	andeq	r0, r0, r1
	...
     f80:	08002dc0 	stmdaeq	r0, {r6, r7, r8, sl, fp, sp}
     f84:	08002e18 	stmdaeq	r0, {r3, r4, r9, sl, fp, sp}
     f88:	08002e18 	stmdaeq	r0, {r3, r4, r9, sl, fp, sp}
     f8c:	08002e7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, sl, fp, sp}
     f90:	08002e7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, sl, fp, sp}
     f94:	08002f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp, sp}
     f98:	08002f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp, sp}
     f9c:	08002fa0 	stmdaeq	r0, {r5, r7, r8, r9, sl, fp, sp}
     fa0:	00000001 	andeq	r0, r0, r1
     fa4:	00000001 	andeq	r0, r0, r1
     fa8:	00000001 	andeq	r0, r0, r1
     fac:	00000001 	andeq	r0, r0, r1
     fb0:	00000001 	andeq	r0, r0, r1
     fb4:	00000001 	andeq	r0, r0, r1
     fb8:	00000001 	andeq	r0, r0, r1
     fbc:	00000001 	andeq	r0, r0, r1
     fc0:	00000001 	andeq	r0, r0, r1
     fc4:	00000001 	andeq	r0, r0, r1
     fc8:	00000001 	andeq	r0, r0, r1
     fcc:	00000001 	andeq	r0, r0, r1
	...
     fd8:	08002fa0 	stmdaeq	r0, {r5, r7, r8, r9, sl, fp, sp}
     fdc:	08002fc0 	stmdaeq	r0, {r6, r7, r8, r9, sl, fp, sp}
     fe0:	08002fc0 	stmdaeq	r0, {r6, r7, r8, r9, sl, fp, sp}
     fe4:	08002fe8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl, fp, sp}
     fe8:	08002fe8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl, fp, sp}
     fec:	08002ffc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
     ff0:	08002ffc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
     ff4:	08003028 	stmdaeq	r0, {r3, r5, ip, sp}
     ff8:	08003030 	stmdaeq	r0, {r4, r5, ip, sp}
     ffc:	08003054 	stmdaeq	r0, {r2, r4, r6, ip, sp}
    1000:	00000001 	andeq	r0, r0, r1
    1004:	00000001 	andeq	r0, r0, r1
    1008:	08003054 	stmdaeq	r0, {r2, r4, r6, ip, sp}
    100c:	08003074 	stmdaeq	r0, {r2, r4, r5, r6, ip, sp}
    1010:	08003074 	stmdaeq	r0, {r2, r4, r5, r6, ip, sp}
    1014:	08003088 	stmdaeq	r0, {r3, r7, ip, sp}
    1018:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
    101c:	080030f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, ip, sp}
    1020:	080030f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, ip, sp}
    1024:	08003120 	stmdaeq	r0, {r5, r8, ip, sp}
    1028:	08003120 	stmdaeq	r0, {r5, r8, ip, sp}
    102c:	08003234 	stmdaeq	r0, {r2, r4, r5, r9, ip, sp}
    1030:	08003234 	stmdaeq	r0, {r2, r4, r5, r9, ip, sp}
    1034:	08003270 	stmdaeq	r0, {r4, r5, r6, r9, ip, sp}
    1038:	08003270 	stmdaeq	r0, {r4, r5, r6, r9, ip, sp}
    103c:	080032c0 	stmdaeq	r0, {r6, r7, r9, ip, sp}
	...
    1048:	080032c0 	stmdaeq	r0, {r6, r7, r9, ip, sp}
    104c:	08003308 	stmdaeq	r0, {r3, r8, r9, ip, sp}
	...
    1058:	00000001 	andeq	r0, r0, r1
    105c:	00000001 	andeq	r0, r0, r1
    1060:	00000001 	andeq	r0, r0, r1
    1064:	00000001 	andeq	r0, r0, r1
    1068:	00000001 	andeq	r0, r0, r1
    106c:	00000001 	andeq	r0, r0, r1
    1070:	00000001 	andeq	r0, r0, r1
    1074:	00000001 	andeq	r0, r0, r1
    1078:	08003308 	stmdaeq	r0, {r3, r8, r9, ip, sp}
    107c:	08003328 	stmdaeq	r0, {r3, r5, r8, r9, ip, sp}
    1080:	08003328 	stmdaeq	r0, {r3, r5, r8, r9, ip, sp}
    1084:	08003344 	stmdaeq	r0, {r2, r6, r8, r9, ip, sp}
    1088:	08003344 	stmdaeq	r0, {r2, r6, r8, r9, ip, sp}
    108c:	0800334a 	stmdaeq	r0, {r1, r3, r6, r8, r9, ip, sp}
    1090:	0800334a 	stmdaeq	r0, {r1, r3, r6, r8, r9, ip, sp}
    1094:	08003354 	stmdaeq	r0, {r2, r4, r6, r8, r9, ip, sp}
    1098:	08003354 	stmdaeq	r0, {r2, r4, r6, r8, r9, ip, sp}
    109c:	08003358 	stmdaeq	r0, {r3, r4, r6, r8, r9, ip, sp}
    10a0:	08003358 	stmdaeq	r0, {r3, r4, r6, r8, r9, ip, sp}
    10a4:	0800335c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, ip, sp}
    10a8:	00000001 	andeq	r0, r0, r1
    10ac:	00000001 	andeq	r0, r0, r1
    10b0:	00000001 	andeq	r0, r0, r1
    10b4:	00000001 	andeq	r0, r0, r1
    10b8:	00000001 	andeq	r0, r0, r1
    10bc:	00000001 	andeq	r0, r0, r1
    10c0:	00000001 	andeq	r0, r0, r1
    10c4:	00000001 	andeq	r0, r0, r1
    10c8:	00000001 	andeq	r0, r0, r1
    10cc:	00000001 	andeq	r0, r0, r1
    10d0:	00000001 	andeq	r0, r0, r1
    10d4:	00000001 	andeq	r0, r0, r1
    10d8:	00000001 	andeq	r0, r0, r1
    10dc:	00000001 	andeq	r0, r0, r1
    10e0:	00000001 	andeq	r0, r0, r1
    10e4:	00000001 	andeq	r0, r0, r1
	...
    10f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    10f4:	00000000 	andeq	r0, r0, r0
    10f8:	0800335c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, ip, sp}
    10fc:	080033ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, ip, sp}
    1100:	080033ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, ip, sp}
    1104:	080033ae 	stmdaeq	r0, {r1, r2, r3, r5, r7, r8, r9, ip, sp}
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	00000588 	andeq	r0, r0, r8, lsl #11
       4:	03010003 	movweq	r0, #4099	; 0x1003
  errno = ENOMEM;
       8:	01020000 	mrseq	r0, (UNDEF: 2)
}
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
}
      28:	706f2f00 	rsbvc	r2, pc, r0, lsl #30
      2c:	63672f74 	cmnvs	r7, #116, 30	; 0x1d0
      30:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    if (status != HAL_OK)
      34:	6f6e2d6d 	svcvs	0x006e2d6d
      uwTickFreq = prevTickFreq;
      38:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
      3c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
      40:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
      44:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
      48:	30312e31 	eorscc	r2, r1, r1, lsr lr
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
            while( pxBlock != pxEnd )
      50:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
      54:	61652d65 	cmnvs	r5, r5, ror #26
                if( pxBlock->xBlockSize > xMaxSize )
      58:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
      5c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
                if( pxBlock->xBlockSize < xMinSize )
      60:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; fffffed8 <_estack+0xdfff6538>
                    xMinSize = pxBlock->xBlockSize;
      64:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
      68:	2f00656e 	svccs	0x0000656e
      6c:	2f74706f 	svccs	0x0074706f
      70:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
      74:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
      78:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      7c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      80:	30312d69 	eorscc	r2, r1, r9, ror #26
      84:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
      88:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
      8c:	612f3031 			; <UNDEFINED> instruction: 0x612f3031
      90:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
      94:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
      98:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
      9c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
      a0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      a4:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
      a8:	2f2e2e00 	svccs	0x002e2e00
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	76697244 	strbtvc	r7, [r9], -r4, asr #4
      b0:	2f737265 	svccs	0x00737265
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
      bc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
      c4:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
      c8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	534d432f 	movtpl	r4, #54063	; 0xd32f
      d0:	442f5349 	strtmi	r5, [pc], #-841	; d8 <_Min_Heap_Size-0x728>
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	63697665 	cmnvs	r9, #105906176	; 0x6500000
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
      dc:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
      e0:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    if (huart->hdmarx != NULL)
      e4:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
      f0:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    huart->TxXferCount = 0x00U;
      f4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    huart->gState  = HAL_UART_STATE_READY;
      fc:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    huart->RxState = HAL_UART_STATE_READY;
     100:	5f787834 	svcpl	0x00787834
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	5f4c4148 	svcpl	0x004c4148
    HAL_UART_AbortCpltCallback(huart);
     108:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     10c:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
  uint32_t AbortCplt = 0x01U;
     110:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
  if (AbortCplt == 0x01U)
     114:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
}
     118:	2f2e2e2f 	svccs	0x002e2e2f
     11c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
     120:	2f736f74 	svccs	0x00736f74
     124:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
                    taskYIELD_WITHIN_API();
     128:	534f5452 	movtpl	r5, #62546	; 0xf452
     12c:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
     130:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
     134:	43472f65 	movtmi	r2, #32613	; 0x7f65
     138:	52412f43 	subpl	r2, r1, #268	; 0x10c
            prvUnlockQueue( pxQueue );
     13c:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
     140:	2e004634 	mcrcs	6, 0, r4, cr0, cr4, {1}
            ( void ) xTaskResumeAll();
     144:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
            return errQUEUE_FULL;
     148:	2f2e2e2f 	svccs	0x002e2e2f
     14c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
     150:	2f736f74 	svccs	0x00736f74
     154:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     158:	534f5452 	movtpl	r5, #62546	; 0xf452
     15c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     160:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     164:	2f2e2e00 	svccs	0x002e2e00
     168:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     16c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     170:	2f2e2e00 	svccs	0x002e2e00
     174:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     178:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
     17c:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
     180:	662f736c 	strtvs	r7, [pc], -ip, ror #6
}
     184:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
     18c:	6e692f70 	mcrvs	15, 3, r2, cr9, cr0, {3}
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	6f2f0063 	svcvs	0x002f0063
     194:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
     198:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     1a0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     1a8:	2e30312d 	rsfcssp	f3, f0, #5.0
     1ac:	30322d33 	eorscc	r2, r2, r3, lsr sp
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     1b4:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	6f6e2d6d 	svcvs	0x006e2d6d
     1bc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     1c0:	2f696261 	svccs	0x00696261
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     1c8:	00656475 	rsbeq	r6, r5, r5, ror r4
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
     1d0:	00632e6e 	rsbeq	r2, r3, lr, ror #28
     1d4:	5f000001 	svcpl	0x00000001
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	61666564 	cmnvs	r6, r4, ror #10
     1dc:	5f746c75 	svcpl	0x00746c75
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     1e4:	00682e73 	rsbeq	r2, r8, r3, ror lr
     1e8:	5f000002 	svcpl	0x00000002
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     1f0:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	00000300 	andeq	r0, r0, r0, lsl #6
     1f8:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
     1fc:	346d635f 	strbtcc	r6, [sp], #-863	; 0xfffffca1
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	74730000 	ldrbtvc	r0, [r3], #-0
     208:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     20c:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	00682e78 	rsbeq	r2, r8, r8, ror lr
     214:	73000005 	movwvc	r0, #5
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     21c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     228:	0600682e 	streq	r6, [r0], -lr, lsr #16
  tmp = hdma->Instance->FCR;
     22c:	74730000 	ldrbtvc	r0, [r3], #-0
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
  tmp |= hdma->Init.FIFOMode;
     234:	5f787834 	svcpl	0x00787834
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	5f6c6168 	svcpl	0x006c6168
    tmp |= hdma->Init.FIFOThreshold;
     23c:	5f636372 	svcpl	0x00636372
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	682e7865 	stmdavs	lr!, {r0, r2, r5, r6, fp, ip, sp, lr}
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	00000600 	andeq	r0, r0, r0, lsl #12
     248:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
  hdma->Instance->FCR = tmp;
     24c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	61685f78 	smcvs	34296	; 0x85f8
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	63725f6c 	cmnvs	r2, #108, 30	; 0x1b0
     258:	00682e63 	rsbeq	r2, r8, r3, ror #28
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	73000006 	movwvc	r0, #6
  hdma->State = HAL_DMA_STATE_READY;
     260:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     264:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
  return HAL_OK;
     268:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     26c:	616d645f 	cmnvs	sp, pc, asr r4
     270:	0600682e 	streq	r6, [r0], -lr, lsr #16
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	74730000 	ldrbtvc	r0, [r3], #-0
     278:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     27c:	5f787834 	svcpl	0x00787834
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	5f6c6168 	svcpl	0x006c6168
        hdma->State = HAL_DMA_STATE_READY;
     284:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
        return HAL_ERROR; 
     288:	0600682e 	streq	r6, [r0], -lr, lsr #16
    return HAL_ERROR;
     28c:	6f700000 	svcvs	0x00700000
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	616d7472 	smcvs	55106	; 0xd742
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	2e6f7263 	cdpcs	2, 6, cr7, cr15, cr3, {3}
     298:	00070068 	andeq	r0, r7, r8, rrx
      tickstart = HAL_GetTick();
     29c:	73617400 	cmnvc	r1, #0, 8
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	00682e6b 	rsbeq	r2, r8, fp, ror #28
     2a4:	75000008 	strvc	r0, [r0, #-8]
     2a8:	74726173 	ldrbtvc	r6, [r2], #-371	; 0xfffffe8d
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	0900682e 	stmdbeq	r0, {r1, r2, r3, r5, fp, sp, lr}
     2b0:	74730000 	ldrbtvc	r0, [r3], #-0
     2b4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
          return HAL_TIMEOUT;
     2b8:	5f787834 	svcpl	0x00787834
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	682e7469 	stmdavs	lr!, {r0, r3, r5, r6, sl, ip, sp, lr}
     2c0:	00000900 	andeq	r0, r0, r0, lsl #18
     2c4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    FlagStatus       pwrclkchanged = RESET;
     2c8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	61685f78 	smcvs	34296	; 0x85f8
     2d0:	00682e6c 	rsbeq	r2, r8, ip, ror #28
     2d4:	67000006 	strvs	r0, [r0, -r6]
      tickstart = HAL_GetTick();
     2d8:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	00090068 	andeq	r0, r9, r8, rrx
     2e0:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     2e4:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
     2ec:	000a0068 	andeq	r0, sl, r8, rrx
          return HAL_TIMEOUT;
     2f0:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
     2f8:	003e6e69 	eorseq	r6, lr, r9, ror #28
     2fc:	73000000 	movwvc	r0, #0
     300:	6f696474 	svcvs	0x00696474
     304:	0b00682e 	bleq	1a3c4 <_Min_Heap_Size+0x19bc4>
     308:	05000000 	streq	r0, [r0, #-0]
     30c:	02050022 	andeq	r0, r5, #34	; 0x22
     310:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
      tickstart = HAL_GetTick();
     314:	0100f403 	tsteq	r0, r3, lsl #8	; <UNPREDICTABLE>
     318:	132f0505 			; <UNDEFINED> instruction: 0x132f0505
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
     320:	06050501 	streq	r0, [r5], -r1, lsl #10
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	060805ad 	streq	r0, [r8], -sp, lsr #11
     328:	06090501 	streq	r0, [r9], -r1, lsl #10
     32c:	0520063f 	streq	r0, [r0, #-1599]!	; 0xfffff9c1
     330:	09053001 	stmdbeq	r5, {r0, ip, sp}
          return HAL_TIMEOUT;
     334:	2e063806 	cdpcs	8, 0, cr3, cr6, cr6, {0}
    if(pwrclkchanged == SET)
     338:	01000a02 	tsteq	r0, r2, lsl #20
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	002f0501 	eoreq	r0, pc, r1, lsl #10
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	06080205 	streq	r0, [r8], -r5, lsl #4
     344:	ed030800 	stc	8, cr0, [r3, #-0]
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	01060100 	mrseq	r0, (UNDEF: 22)
     34c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     350:	21060104 	tstcs	r6, r4, lsl #2
     354:	02000905 	andeq	r0, r0, #81920	; 0x14000
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	00130104 	andseq	r0, r3, r4, lsl #2
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	4b010402 	blmi	4136c <_Min_Heap_Size+0x40b6c>
     360:	02000a05 	andeq	r0, r0, #20480	; 0x5000
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	023a0104 	eorseq	r0, sl, #4, 2
     368:	01010004 	tsteq	r1, r4
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	05001a05 	streq	r1, [r0, #-2565]	; 0xfffff5fb
     370:	00062002 	andeq	r2, r6, r2
     374:	011e0308 	tsteq	lr, r8, lsl #6
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     37c:	58063d06 	stmdapl	r6, {r1, r2, r8, sl, fp, ip, sp}
     380:	01052f06 	tsteq	r5, r6, lsl #30
     384:	06021306 	streq	r1, [r2], -r6, lsl #6
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     38c:	02050023 	andeq	r0, r5, #35	; 0x23
        __HAL_RCC_PLL_DISABLE();
     390:	00000000 	andeq	r0, r0, r0
     394:	05013403 	streq	r3, [r1, #-1027]	; 0xfffffbfd
        tickstart = HAL_GetTick();
     398:	05142105 	ldreq	r2, [r4, #-261]	; 0xfffffefb
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     3a0:	13590605 	cmpne	r9, #5242880	; 0x500000
     3a4:	4b060105 	blmi	1807c0 <_Min_Heap_Size+0x17ffc0>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	01000602 	tsteq	r0, r2, lsl #12
     3ac:	00220501 	eoreq	r0, r2, r1, lsl #10
            return HAL_TIMEOUT;
     3b0:	00000205 	andeq	r0, r0, r5, lsl #4
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	3c030000 	stccc	0, cr0, [r3], {-0}
     3b8:	2f050501 	svccs	0x00050501
     3bc:	06120513 			; <UNDEFINED> instruction: 0x06120513
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	06050501 	streq	r0, [r5], -r1, lsl #10
     3c4:	060e052f 	streq	r0, [lr], -pc, lsr #10
     3c8:	06050501 	streq	r0, [r5], -r1, lsl #10
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	0d05135a 	stceq	3, cr1, [r5, #-360]	; 0xfffffe98
     3d0:	0b050106 	bleq	1407f0 <_Min_Heap_Size+0x13fff0>
     3d4:	06050520 	streq	r0, [r5], -r0, lsr #10
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	05136721 	ldreq	r6, [r3, #-1825]	; 0xfffff8df
     3dc:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     3e0:	0505200b 	streq	r2, [r5, #-11]
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	13592106 	cmpne	r9, #-2147483647	; 0x80000001
     3e8:	01060d05 	tsteq	r6, r5, lsl #26
     3ec:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     3f4:	02590601 	subseq	r0, r9, #1048576	; 0x100000
     3f8:	01010006 	tsteq	r1, r6
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     400:	00000002 	andeq	r0, r0, r2
     404:	00cc0300 	sbceq	r0, ip, r0, lsl #6
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	21050501 	tstcs	r5, r1, lsl #10
     40c:	0601054e 	streq	r0, [r1], -lr, asr #10
     410:	0005022f 	andeq	r0, r5, pc, lsr #4
     414:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     418:	00020500 	andeq	r0, r2, r0, lsl #10
     41c:	03000000 	movweq	r0, #0
     420:	050100d4 	streq	r0, [r1, #-212]	; 0xffffff2c
     424:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
        __HAL_RCC_PLL_ENABLE();
     428:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     42c:	01010005 	tsteq	r1, r5
        tickstart = HAL_GetTick();
     430:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	00000002 	andeq	r0, r0, r2
     438:	00d90300 	sbcseq	r0, r9, r0, lsl #6
     43c:	21050501 	tstcs	r5, r1, lsl #10
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	0601054b 	streq	r0, [r1], -fp, asr #10
     444:	0005022f 	andeq	r0, r5, pc, lsr #4
            return HAL_TIMEOUT;
     448:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
  return HAL_OK;
     44c:	00020500 	andeq	r0, r2, r0, lsl #10
        __HAL_RCC_PLL_DISABLE();
     450:	03000000 	movweq	r0, #0
     454:	050100de 	streq	r0, [r1, #-222]	; 0xffffff22
        tickstart = HAL_GetTick();
     458:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     460:	01010005 	tsteq	r1, r5
     464:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	00000002 	andeq	r0, r0, r2
     46c:	00e30300 	rsceq	r0, r3, r0, lsl #6
            return HAL_TIMEOUT;
     470:	21050501 	tstcs	r5, r1, lsl #10
  return HAL_OK;
     474:	0601054b 	streq	r0, [r1], -fp, asr #10
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	0005022f 	andeq	r0, r5, pc, lsr #4
        pll_config = RCC->PLLCFGR;
     47c:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	00020500 	andeq	r0, r2, r0, lsl #10
     484:	03000000 	movweq	r0, #0
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	050100e8 	streq	r0, [r1, #-232]	; 0xffffff18
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	01010005 	tsteq	r1, r5
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	05001005 	streq	r1, [r0, #-5]
     49c:	00064002 	andeq	r4, r6, r2
     4a0:	00ff0308 	rscseq	r0, pc, r8, lsl #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	21050501 	tstcs	r5, r1, lsl #10
     4a8:	2f302f30 	svccs	0x00302f30
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	01040200 	mrseq	r0, R12_usr
     4b0:	00090531 	andeq	r0, r9, r1, lsr r5
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	13010402 	movwne	r0, #5122	; 0x1402
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	01040200 	mrseq	r0, R12_usr
     4bc:	000b053d 	andeq	r0, fp, sp, lsr r5
  return HAL_OK;
     4c0:	48010402 	stmdami	r1, {r1, sl}
}
     4c4:	01000402 	tsteq	r0, r2, lsl #8
        return HAL_ERROR;
     4c8:	001f0501 	andseq	r0, pc, r1, lsl #10
        return HAL_ERROR;
     4cc:	00000205 	andeq	r0, r0, r5, lsl #4
}
     4d0:	90030000 	andls	r0, r3, r0
        return HAL_ERROR;
     4d4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
          return HAL_ERROR;
     4d8:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
     4dc:	06050501 	streq	r0, [r5], -r1, lsl #10
     4e0:	06180559 			; <UNDEFINED> instruction: 0x06180559
     4e4:	06050501 	streq	r0, [r5], -r1, lsl #10
     4e8:	5820016a 	stmdapl	r0!, {r1, r3, r5, r6, r8}
     4ec:	0113204a 	tsteq	r3, sl, asr #32
     4f0:	204a5820 	subcs	r5, sl, r0, lsr #16
     4f4:	06260517 			; <UNDEFINED> instruction: 0x06260517
     4f8:	06050501 	streq	r0, [r5], -r1, lsl #10
     4fc:	0620052f 	strteq	r0, [r0], -pc, lsr #10
     500:	06050501 	streq	r0, [r5], -r1, lsl #10
     504:	062b052f 	strteq	r0, [fp], -pc, lsr #10
     508:	06050501 	streq	r0, [r5], -r1, lsl #10
     50c:	0624052f 	strteq	r0, [r4], -pc, lsr #10
     510:	06050501 	streq	r0, [r5], -r1, lsl #10
     514:	06250521 	strteq	r0, [r5], -r1, lsr #10
     518:	06050501 	streq	r0, [r5], -r1, lsl #10
     51c:	06200521 	strteq	r0, [r0], -r1, lsr #10
     520:	06050501 	streq	r0, [r5], -r1, lsl #10
     524:	0620052f 	strteq	r0, [r0], -pc, lsr #10
     528:	06050501 	streq	r0, [r5], -r1, lsl #10
     52c:	0620052f 	strteq	r0, [r0], -pc, lsr #10
     530:	06050501 	streq	r0, [r5], -r1, lsl #10
     534:	06200521 	strteq	r0, [r0], -r1, lsr #10
     538:	06050501 	streq	r0, [r5], -r1, lsl #10
     53c:	0609052f 	streq	r0, [r9], -pc, lsr #10
     540:	3c080501 	cfstr32cc	mvfx0, [r8], {1}
     544:	26060505 	strcs	r0, [r6], -r5, lsl #10
     548:	01062105 	tsteq	r6, r5, lsl #2
     54c:	30060505 	andcc	r0, r6, r5, lsl #10
     550:	01062405 	tsteq	r6, r5, lsl #8
     554:	2f060505 	svccs	0x00060505
     558:	01062505 	tsteq	r6, r5, lsl #10
     55c:	2f060505 	svccs	0x00060505
     560:	01062605 	tsteq	r6, r5, lsl #12
     564:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     568:	01062605 	tsteq	r6, r5, lsl #12
     56c:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
     570:	01060905 	tsteq	r6, r5, lsl #18
     574:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
     578:	09052301 	stmdbeq	r5, {r0, r8, r9, sp}
     57c:	3c710306 	ldclcc	3, cr0, [r1], #-24	; 0xffffffe8
     580:	053c0d03 	ldreq	r0, [ip, #-3331]!	; 0xfffff2fd
     584:	02300601 	eorseq	r0, r0, #1048576	; 0x100000
     588:	01010005 	tsteq	r1, r5
     58c:	0000042c 	andeq	r0, r0, ip, lsr #8
     590:	02670003 	rsbeq	r0, r7, #3
     594:	01020000 	mrseq	r0, (UNDEF: 2)
     598:	000d0efb 	strdeq	r0, [sp], -fp
     59c:	01010101 	tsteq	r1, r1, lsl #2
     5a0:	01000000 	mrseq	r0, (UNDEF: 0)
     5a4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     5a8:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
     5ac:	6163696c 	cmnvs	r3, ip, ror #18
     5b0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     5b4:	2f2e2e00 	svccs	0x002e2e00
     5b8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     5bc:	2f737265 	svccs	0x00737265
     5c0:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     5c4:	6e492f53 	mcrvs	15, 2, r2, cr9, cr3, {2}
     5c8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     5cc:	6f2f0065 	svcvs	0x002f0065
     5d0:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
     5d4:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     5d8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     5dc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     5e0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     5e4:	2e30312d 	rsfcssp	f3, f0, #5.0
     5e8:	30322d33 	eorscc	r2, r2, r3, lsr sp
     5ec:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     5f0:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
     5f4:	6f6e2d6d 	svcvs	0x006e2d6d
     5f8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     5fc:	2f696261 	svccs	0x00696261
     600:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     604:	2f656475 	svccs	0x00656475
     608:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     60c:	00656e69 	rsbeq	r6, r5, r9, ror #28
     610:	74706f2f 	ldrbtvc	r6, [r0], #-3887	; 0xfffff0d1
     614:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
     618:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     61c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     620:	61652d65 	cmnvs	r5, r5, ror #26
     624:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     628:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     62c:	31323032 	teqcc	r2, r2, lsr r0
     630:	2f30312e 	svccs	0x0030312e
     634:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     638:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     63c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     640:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
     644:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     648:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     64c:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     650:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     654:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     658:	534d432f 	movtpl	r4, #54063	; 0xd32f
     65c:	442f5349 	strtmi	r5, [pc], #-841	; 664 <_Min_Heap_Size-0x19c>
     660:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     664:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
     668:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     66c:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     670:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
     674:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     678:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     67c:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     680:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     684:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
     688:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     68c:	5f787834 	svcpl	0x00787834
     690:	5f4c4148 	svcpl	0x004c4148
     694:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     698:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
     69c:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
     6a0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
     6a4:	2f2e2e2f 	svccs	0x002e2e2f
     6a8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
     6ac:	2f736f74 	svccs	0x00736f74
     6b0:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
     6b4:	534f5452 	movtpl	r5, #62546	; 0xf452
     6b8:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
     6bc:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
     6c0:	43472f65 	movtmi	r2, #32613	; 0x7f65
     6c4:	52412f43 	subpl	r2, r1, #268	; 0x10c
     6c8:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
     6cc:	2f004634 	svccs	0x00004634
     6d0:	2f74706f 	svccs	0x0074706f
     6d4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     6d8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     6dc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     6e0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     6e4:	30312d69 	eorscc	r2, r1, r9, ror #26
     6e8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     6ec:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     6f0:	612f3031 			; <UNDEFINED> instruction: 0x612f3031
     6f4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     6f8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     6fc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     700:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     704:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     708:	2f2e2e00 	svccs	0x002e2e00
     70c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     710:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
     714:	6f747262 	svcvs	0x00747262
     718:	72462f73 	subvc	r2, r6, #460	; 0x1cc
     71c:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
     720:	692f534f 	stmdbvs	pc!, {r0, r1, r2, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
     724:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     728:	00006564 	andeq	r6, r0, r4, ror #10
     72c:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     730:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     734:	74695f78 	strbtvc	r5, [r9], #-3960	; 0xfffff088
     738:	0100632e 	tsteq	r0, lr, lsr #6
     73c:	6d630000 	stclvs	0, cr0, [r3, #-0]
     740:	5f736973 	svcpl	0x00736973
     744:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
     748:	00020068 	andeq	r0, r2, r8, rrx
     74c:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
     750:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     754:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     758:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     75c:	00030068 	andeq	r0, r3, r8, rrx
     760:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     764:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     768:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     76c:	74730000 	ldrbtvc	r0, [r3], #-0
     770:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     774:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
     778:	00682e78 	rsbeq	r2, r8, r8, ror lr
     77c:	73000005 	movwvc	r0, #5
     780:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     784:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     788:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     78c:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     790:	0600682e 	streq	r6, [r0], -lr, lsr #16
     794:	74730000 	ldrbtvc	r0, [r3], #-0
     798:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     79c:	5f787834 	svcpl	0x00787834
     7a0:	5f6c6168 	svcpl	0x006c6168
     7a4:	2e616d64 	cdpcs	13, 6, cr6, cr1, cr4, {3}
     7a8:	00060068 	andeq	r0, r6, r8, rrx
     7ac:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     7b0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     7b4:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     7b8:	755f6c61 	ldrbvc	r6, [pc, #-3169]	; fffffb5f <_estack+0xdfff61bf>
     7bc:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
     7c0:	00060068 	andeq	r0, r6, r8, rrx
     7c4:	726f7000 	rsbvc	r7, pc, #0
     7c8:	63616d74 	cmnvs	r1, #116, 26	; 0x1d00
     7cc:	682e6f72 	stmdavs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}
     7d0:	00000700 	andeq	r0, r0, r0, lsl #14
     7d4:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     7d8:	00682e6f 	rsbeq	r2, r8, pc, ror #28
     7dc:	74000008 	strvc	r0, [r0], #-8
     7e0:	2e6b7361 	cdpcs	3, 6, cr7, cr11, cr1, {3}
     7e4:	00090068 	andeq	r0, r9, r8, rrx
     7e8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     7ec:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     7f0:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     7f4:	682e6c61 	stmdavs	lr!, {r0, r5, r6, sl, fp, sp, lr}
     7f8:	00000600 	andeq	r0, r0, r0, lsl #12
     7fc:	00010500 	andeq	r0, r1, r0, lsl #10
     800:	066c0205 	strbteq	r0, [ip], -r5, lsl #4
     804:	c9030800 	stmdbgt	r3, {fp}
     808:	03050100 	movweq	r0, #20736	; 0x5100
     80c:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     810:	02004d01 	andeq	r4, r0, #1, 26	; 0x40
     814:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
     818:	04020009 	streq	r0, [r2], #-9
     81c:	05021001 	streq	r1, [r2, #-1]
     820:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     824:	02050001 	andeq	r0, r5, #1
     828:	00000000 	andeq	r0, r0, r0
     82c:	0100d803 	tsteq	r0, r3, lsl #16
     830:	00220305 	eoreq	r0, r2, r5, lsl #6
     834:	4c010402 	cfstrsmi	mvf0, [r1], {2}
     838:	01040200 	mrseq	r0, R12_usr
     83c:	00090516 	andeq	r0, r9, r6, lsl r5
     840:	0e010402 	cdpeq	4, 0, cr0, cr1, cr2, {0}
     844:	01000502 	tsteq	r0, r2, lsl #10
     848:	00010501 	andeq	r0, r1, r1, lsl #10
     84c:	06800205 	streq	r0, [r0], r5, lsl #4
     850:	e7030800 	str	r0, [r3, -r0, lsl #16]
     854:	03050100 	movweq	r0, #20736	; 0x5100
     858:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     85c:	02004c01 	andeq	r4, r0, #256	; 0x100
     860:	05160104 	ldreq	r0, [r6, #-260]	; 0xfffffefc
     864:	04020009 	streq	r0, [r2], #-9
     868:	05020e01 	streq	r0, [r2, #-3585]	; 0xfffff1ff
     86c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     870:	02050001 	andeq	r0, r5, #1
     874:	08000694 	stmdaeq	r0, {r2, r4, r7, r9, sl}
     878:	0100f603 	tsteq	r0, r3, lsl #12	; <UNPREDICTABLE>
     87c:	00220305 	eoreq	r0, r2, r5, lsl #6
     880:	4c010402 	cfstrsmi	mvf0, [r1], {2}
     884:	01040200 	mrseq	r0, R12_usr
     888:	00090516 	andeq	r0, r9, r6, lsl r5
     88c:	0e010402 	cdpeq	4, 0, cr0, cr1, cr2, {0}
     890:	01000502 	tsteq	r0, r2, lsl #10
     894:	00010501 	andeq	r0, r1, r1, lsl #10
     898:	06a80205 	strteq	r0, [r8], r5, lsl #4
     89c:	85030800 	strhi	r0, [r3, #-2048]	; 0xfffff800
     8a0:	03050101 	movweq	r0, #20737	; 0x5101
     8a4:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     8a8:	02004c01 	andeq	r4, r0, #256	; 0x100
     8ac:	05160104 	ldreq	r0, [r6, #-260]	; 0xfffffefc
     8b0:	04020009 	streq	r0, [r2], #-9
     8b4:	05020e01 	streq	r0, [r2, #-3585]	; 0xfffff1ff
     8b8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     8bc:	02050001 	andeq	r0, r5, #1
     8c0:	080006bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl}
     8c4:	01019403 	tsteq	r1, r3, lsl #8
     8c8:	05220305 	streq	r0, [r2, #-773]!	; 0xfffffcfb
     8cc:	02330601 	eorseq	r0, r3, #1048576	; 0x100000
     8d0:	01010001 	tsteq	r1, r1
     8d4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     8d8:	0006c402 	andeq	ip, r6, r2, lsl #8
     8dc:	01a10308 			; <UNDEFINED> instruction: 0x01a10308
     8e0:	01021901 	tsteq	r2, r1, lsl #18
     8e4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     8e8:	02050001 	andeq	r0, r5, #1
     8ec:	080006c6 	stmdaeq	r0, {r1, r2, r6, r7, r9, sl}
     8f0:	0101ae03 	tsteq	r1, r3, lsl #28
     8f4:	05220305 	streq	r0, [r2, #-773]!	; 0xfffffcfb
     8f8:	02330601 	eorseq	r0, r3, #1048576	; 0x100000
     8fc:	01010001 	tsteq	r1, r1
     900:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     904:	0006ce02 	andeq	ip, r6, r2, lsl #28
     908:	01bb0308 			; <UNDEFINED> instruction: 0x01bb0308
     90c:	22030501 	andcs	r0, r3, #4194304	; 0x400000
     910:	01060705 	tsteq	r6, r5, lsl #14
     914:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
     918:	05330603 	ldreq	r0, [r3, #-1539]!	; 0xfffff9fd
     91c:	05320601 	ldreq	r0, [r2, #-1537]!	; 0xfffff9ff
     920:	79030605 	stmdbvc	r3, {r0, r2, r9, sl}
     924:	00030220 	andeq	r0, r3, r0, lsr #4
     928:	01050101 	tsteq	r5, r1, lsl #2
     92c:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
     930:	03080006 	movweq	r0, #32774	; 0x8006
     934:	050101d3 	streq	r0, [r1, #-467]	; 0xfffffe2d
     938:	01052403 	tsteq	r5, r3, lsl #8
     93c:	04024006 	streq	r4, [r2], #-6
     940:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     944:	02050001 	andeq	r0, r5, #1
     948:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
     94c:	0101e303 	tsteq	r1, r3, lsl #6
     950:	4b210305 	blmi	84156c <_Min_Heap_Size+0x840d6c>
     954:	1b050204 	blne	14116c <_Min_Heap_Size+0x14096c>
     958:	0105da03 	tsteq	r5, r3, lsl #20
     95c:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
     960:	04020001 	streq	r0, [r2], #-1
     964:	7aa50301 	bvc	fe941570 <_estack+0xde937bd0>
     968:	000e0520 	andeq	r0, lr, r0, lsr #10
     96c:	01010402 	tsteq	r1, r2, lsl #8
     970:	02000905 	andeq	r0, r0, #81920	; 0x14000
     974:	02010104 	andeq	r0, r1, #4, 2
     978:	01010006 	tsteq	r1, r6
     97c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     980:	00070c02 	andeq	r0, r7, r2, lsl #24
     984:	01f20308 	mvnseq	r0, r8, lsl #6
     988:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     98c:	06210603 	strteq	r0, [r1], -r3, lsl #12
     990:	2f062020 	svccs	0x00062020
     994:	1b050204 	blne	1411ac <_Min_Heap_Size+0x1409ac>
     998:	0105cb03 	tsteq	r5, r3, lsl #22
     99c:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
     9a0:	04020001 	streq	r0, [r2], #-1
     9a4:	7ab40301 	bvc	fed015b0 <_estack+0xdecf7c10>
     9a8:	000e0520 	andeq	r0, lr, r0, lsr #10
     9ac:	01010402 	tsteq	r1, r2, lsl #8
     9b0:	02000905 	andeq	r0, r0, #81920	; 0x14000
     9b4:	02010104 	andeq	r0, r1, #4, 2
     9b8:	01010006 	tsteq	r1, r6
     9bc:	00000137 	andeq	r0, r0, r7, lsr r1
     9c0:	01080003 	tsteq	r8, r3
     9c4:	01020000 	mrseq	r0, (UNDEF: 2)
     9c8:	000d0efb 	strdeq	r0, [sp], -fp
     9cc:	01010101 	tsteq	r1, r1, lsl #2
     9d0:	01000000 	mrseq	r0, (UNDEF: 0)
     9d4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     9d8:	6f432f2e 	svcvs	0x00432f2e
     9dc:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     9e0:	2f006372 	svccs	0x00006372
     9e4:	2f74706f 	svccs	0x0074706f
     9e8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     9ec:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     9f0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     9f4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     9f8:	30312d69 	eorscc	r2, r1, r9, ror #26
     9fc:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     a00:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     a04:	612f3031 			; <UNDEFINED> instruction: 0x612f3031
     a08:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     a0c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     a10:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     a14:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     a18:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     a1c:	63616d2f 	cmnvs	r1, #3008	; 0xbc0
     a20:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
     a24:	706f2f00 	rsbvc	r2, pc, r0, lsl #30
     a28:	63672f74 	cmnvs	r7, #116, 30	; 0x1d0
     a2c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     a30:	6f6e2d6d 	svcvs	0x006e2d6d
     a34:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     a38:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     a3c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     a40:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     a44:	30312e31 	eorscc	r2, r1, r1, lsr lr
     a48:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
     a4c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     a50:	61652d65 	cmnvs	r5, r5, ror #26
     a54:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
     a58:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     a5c:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
     a60:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
     a64:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     a68:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     a6c:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
     a70:	2f534953 	svccs	0x00534953
     a74:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     a78:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
     a7c:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
     a80:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     a84:	2f787834 	svccs	0x00787834
     a88:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
     a8c:	00656475 	rsbeq	r6, r5, r5, ror r4
     a90:	69706700 	ldmdbvs	r0!, {r8, r9, sl, sp, lr}^
     a94:	00632e6f 	rsbeq	r2, r3, pc, ror #28
     a98:	5f000001 	svcpl	0x00000001
     a9c:	61666564 	cmnvs	r6, r4, ror #10
     aa0:	5f746c75 	svcpl	0x00746c75
     aa4:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     aa8:	00682e73 	rsbeq	r2, r8, r3, ror lr
     aac:	5f000002 	svcpl	0x00000002
     ab0:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     ab4:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     ab8:	00000300 	andeq	r0, r0, r0, lsl #6
     abc:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     ac0:	30346632 	eorscc	r6, r4, r2, lsr r6
     ac4:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
     ac8:	00040068 	andeq	r0, r4, r8, rrx
     acc:	01050000 	mrseq	r0, (UNDEF: 5)
     ad0:	24020500 	strcs	r0, [r2], #-1280	; 0xfffffb00
     ad4:	03080007 	movweq	r0, #32775	; 0x8007
     ad8:	0305012a 	movweq	r0, #20778	; 0x512a
     adc:	582e0123 	stmdapl	lr!, {r0, r1, r5, r8}
     ae0:	0113204a 	tsteq	r3, sl, asr #32
     ae4:	204a4a20 	subcs	r4, sl, r0, lsr #20
     ae8:	4a200113 	bmi	800f3c <_Min_Heap_Size+0x80073c>
     aec:	0105204a 	tsteq	r5, sl, asr #32
     af0:	05021406 	streq	r1, [r2, #-1030]	; 0xfffffbfa
     af4:	d8010100 	stmdale	r1, {r8}
     af8:	03000002 	movweq	r0, #2
     afc:	0001ce00 	andeq	ip, r1, r0, lsl #28
     b00:	fb010200 	blx	4130a <_Min_Heap_Size+0x40b0a>
     b04:	01000d0e 	tsteq	r0, lr, lsl #26
     b08:	00010101 	andeq	r0, r1, r1, lsl #2
     b0c:	00010000 	andeq	r0, r1, r0
     b10:	2e2e0100 	sufcse	f0, f6, f0
     b14:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     b18:	72532f65 	subsvc	r2, r3, #404	; 0x194
     b1c:	6f2f0063 	svcvs	0x002f0063
     b20:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
     b24:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     b28:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     b2c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     b30:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     b34:	2e30312d 	rsfcssp	f3, f0, #5.0
     b38:	30322d33 	eorscc	r2, r2, r3, lsr sp
     b3c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     b40:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
     b44:	6f6e2d6d 	svcvs	0x006e2d6d
     b48:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     b4c:	2f696261 	svccs	0x00696261
     b50:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     b54:	2f656475 	svccs	0x00656475
     b58:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     b5c:	00656e69 	rsbeq	r6, r5, r9, ror #28
     b60:	74706f2f 	ldrbtvc	r6, [r0], #-3887	; 0xfffff0d1
     b64:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
     b68:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     b6c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     b70:	61652d65 	cmnvs	r5, r5, ror #26
     b74:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     b78:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     b7c:	31323032 	teqcc	r2, r2, lsr r0
     b80:	2f30312e 	svccs	0x0030312e
     b84:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     b88:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     b8c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     b90:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
     b94:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     b98:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     b9c:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     ba0:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     ba4:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     ba8:	534d432f 	movtpl	r4, #54063	; 0xd32f
     bac:	442f5349 	strtmi	r5, [pc], #-841	; bb4 <_Min_Heap_Size+0x3b4>
     bb0:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     bb4:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
     bb8:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     bbc:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     bc0:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
     bc4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     bc8:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     bcc:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     bd0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     bd4:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
     bd8:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
     bdc:	5f787834 	svcpl	0x00787834
     be0:	5f4c4148 	svcpl	0x004c4148
     be4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     be8:	492f7265 	stmdbmi	pc!, {r0, r2, r5, r6, r9, ip, sp, lr}	; <UNPREDICTABLE>
     bec:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
     bf0:	6f432f2e 	svcvs	0x00432f2e
     bf4:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     bf8:	0000636e 	andeq	r6, r0, lr, ror #6
     bfc:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
     c00:	00632e74 	rsbeq	r2, r3, r4, ror lr
     c04:	5f000001 	svcpl	0x00000001
     c08:	61666564 	cmnvs	r6, r4, ror #10
     c0c:	5f746c75 	svcpl	0x00746c75
     c10:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     c14:	00682e73 	rsbeq	r2, r8, r3, ror lr
     c18:	5f000002 	svcpl	0x00000002
     c1c:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     c20:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     c24:	00000300 	andeq	r0, r0, r0, lsl #6
     c28:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     c2c:	30346632 	eorscc	r6, r4, r2, lsr r6
     c30:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
     c34:	00040068 	andeq	r0, r4, r8, rrx
     c38:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     c3c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     c40:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     c44:	645f6c61 	ldrbvs	r6, [pc], #-3169	; c4c <_Min_Heap_Size+0x44c>
     c48:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
     c4c:	00000500 	andeq	r0, r0, r0, lsl #10
     c50:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     c54:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     c58:	61685f78 	smcvs	34296	; 0x85f8
     c5c:	70675f6c 	rsbvc	r5, r7, ip, ror #30
     c60:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     c64:	00000500 	andeq	r0, r0, r0, lsl #10
     c68:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     c6c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     c70:	61685f78 	smcvs	34296	; 0x85f8
     c74:	6d645f6c 	stclvs	15, cr5, [r4, #-432]!	; 0xfffffe50
     c78:	00682e61 	rsbeq	r2, r8, r1, ror #28
     c7c:	73000005 	movwvc	r0, #5
     c80:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     c84:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     c88:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     c8c:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
     c90:	00682e74 	rsbeq	r2, r8, r4, ror lr
     c94:	73000005 	movwvc	r0, #5
     c98:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
     c9c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
     ca0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
     ca4:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
     ca8:	2e786574 	mrccs	5, 3, r6, cr8, cr4, {3}
     cac:	00050068 	andeq	r0, r5, r8, rrx
     cb0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
     cb4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
     cb8:	695f7878 	ldmdbvs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     cbc:	00682e74 	rsbeq	r2, r8, r4, ror lr
     cc0:	75000006 	strvc	r0, [r0, #-6]
     cc4:	74726173 	ldrbtvc	r6, [r2], #-371	; 0xfffffe8d
     cc8:	0600682e 	streq	r6, [r0], -lr, lsr #16
     ccc:	05000000 	streq	r0, [r0, #-0]
     cd0:	02050001 	andeq	r0, r5, #1
     cd4:	08000770 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl}
     cd8:	05011f03 	streq	r1, [r1, #-3843]	; 0xfffff0fd
     cdc:	20090303 	andcs	r0, r9, r3, lsl #6
     ce0:	01061305 	tsteq	r6, r5, lsl #6
     ce4:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     ce8:	01061805 	tsteq	r6, r5, lsl #16
     cec:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
     cf0:	01061a05 	tsteq	r6, r5, lsl #20
     cf4:	2f060305 	svccs	0x00060305
     cf8:	01061805 	tsteq	r6, r5, lsl #16
     cfc:	21060305 	tstcs	r6, r5, lsl #6
     d00:	01061605 	tsteq	r6, r5, lsl #12
     d04:	21060305 	tstcs	r6, r5, lsl #6
     d08:	01061405 	tsteq	r6, r5, lsl #8
     d0c:	2f060305 	svccs	0x00060305
     d10:	01061905 	tsteq	r6, r5, lsl #18
     d14:	21060305 	tstcs	r6, r5, lsl #6
     d18:	01061c05 	tsteq	r6, r5, lsl #24
     d1c:	21060305 	tstcs	r6, r5, lsl #6
     d20:	01060705 	tsteq	r6, r5, lsl #14
     d24:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
     d28:	05052801 	streq	r2, [r5, #-2049]	; 0xfffff7ff
     d2c:	207a0306 	rsbscs	r0, sl, r6, lsl #6
     d30:	34060105 	strcc	r0, [r6], #-261	; 0xfffffefb
     d34:	01000502 	tsteq	r0, r2, lsl #10
     d38:	00010501 	andeq	r0, r1, r1, lsl #10
     d3c:	07a40205 	streq	r0, [r4, r5, lsl #4]!
     d40:	3b030800 	blcc	c2d48 <_Min_Heap_Size+0xc2548>
     d44:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     d48:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     d4c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     d50:	05670603 	strbeq	r0, [r7, #-1539]!	; 0xfffff9fd
     d54:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     d58:	01052005 	tsteq	r5, r5
     d5c:	05661b03 	strbeq	r1, [r6, #-2819]!	; 0xfffff4fd
     d60:	6b030605 	blvs	c257c <_Min_Heap_Size+0xc1d7c>
     d64:	662e012e 	strtvs	r0, [lr], -lr, lsr #2
     d68:	0114204a 	tsteq	r4, sl, asr #32
     d6c:	204a4a20 	subcs	r4, sl, r0, lsr #20
     d70:	06190517 			; <UNDEFINED> instruction: 0x06190517
     d74:	06050501 	streq	r0, [r5], -r1, lsl #10
     d78:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
     d7c:	06050501 	streq	r0, [r5], -r1, lsl #10
     d80:	1b05132f 	blne	145a44 <_Min_Heap_Size+0x145244>
     d84:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     d88:	1f052f06 	svcne	0x00052f06
     d8c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     d90:	2e062f06 	cdpcs	15, 0, cr2, cr6, cr6, {0}
     d94:	05593106 	ldrbeq	r3, [r9, #-262]	; 0xfffffefa
     d98:	02410601 	subeq	r0, r1, #1048576	; 0x100000
     d9c:	01010003 	tsteq	r1, r3
     da0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     da4:	00000002 	andeq	r0, r0, r2
     da8:	00dc0300 	sbcseq	r0, ip, r0, lsl #6
     dac:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     db0:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
     db4:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     db8:	01052005 	tsteq	r5, r5
     dbc:	053c1403 	ldreq	r1, [ip, #-1027]!	; 0xfffffbfd
     dc0:	72030605 	andvc	r0, r3, #5242880	; 0x500000
     dc4:	3c065e20 	stccc	14, cr5, [r6], {32}
     dc8:	01053106 	tsteq	r5, r6, lsl #2
     dcc:	07024106 	streq	r4, [r2, -r6, lsl #2]
     dd0:	3e010100 	adfccs	f0, f1, f0
     dd4:	03000001 	movweq	r0, #1
     dd8:	00011500 	andeq	r1, r1, r0, lsl #10
     ddc:	fb010200 	blx	415e6 <_Min_Heap_Size+0x40de6>
     de0:	01000d0e 	tsteq	r0, lr, lsl #26
     de4:	00010101 	andeq	r0, r1, r1, lsl #2
     de8:	00010000 	andeq	r0, r1, r0
     dec:	2e2e0100 	sufcse	f0, f6, f0
     df0:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     df4:	72532f65 	subsvc	r2, r3, #404	; 0x194
     df8:	6f2f0063 	svcvs	0x002f0063
     dfc:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
     e00:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     e04:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     e08:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     e0c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     e10:	2e30312d 	rsfcssp	f3, f0, #5.0
     e14:	30322d33 	eorscc	r2, r2, r3, lsr sp
     e18:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     e1c:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
     e20:	6f6e2d6d 	svcvs	0x006e2d6d
     e24:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     e28:	2f696261 	svccs	0x00696261
     e2c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     e30:	2f656475 	svccs	0x00656475
     e34:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     e38:	00656e69 	rsbeq	r6, r5, r9, ror #28
     e3c:	74706f2f 	ldrbtvc	r6, [r0], #-3887	; 0xfffff0d1
     e40:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
     e44:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     e48:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     e4c:	61652d65 	cmnvs	r5, r5, ror #26
     e50:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     e54:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     e58:	31323032 	teqcc	r2, r2, lsr r0
     e5c:	2f30312e 	svccs	0x0030312e
     e60:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     e64:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     e68:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     e6c:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
     e70:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     e74:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
     e78:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
     e7c:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     e80:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     e84:	534d432f 	movtpl	r4, #54063	; 0xd32f
     e88:	442f5349 	strtmi	r5, [pc], #-841	; e90 <_Min_Heap_Size+0x690>
     e8c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
     e90:	54532f65 	ldrbpl	r2, [r3], #-3941	; 0xfffff09b
     e94:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
     e98:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
     e9c:	492f7878 	stmdbmi	pc!, {r3, r4, r5, r6, fp, ip, sp, lr}	; <UNPREDICTABLE>
     ea0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     ea4:	00006564 	andeq	r6, r0, r4, ror #10
     ea8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     eac:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
     eb0:	61685f78 	smcvs	34296	; 0x85f8
     eb4:	736d5f6c 	cmnvc	sp, #108, 30	; 0x1b0
     eb8:	00632e70 	rsbeq	r2, r3, r0, ror lr
     ebc:	5f000001 	svcpl	0x00000001
     ec0:	61666564 	cmnvs	r6, r4, ror #10
     ec4:	5f746c75 	svcpl	0x00746c75
     ec8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     ecc:	00682e73 	rsbeq	r2, r8, r3, ror lr
     ed0:	5f000002 	svcpl	0x00000002
     ed4:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     ed8:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     edc:	00000300 	andeq	r0, r0, r0, lsl #6
     ee0:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
     ee4:	30346632 	eorscc	r6, r4, r2, lsr r6
     ee8:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
     eec:	00040068 	andeq	r0, r4, r8, rrx
     ef0:	01050000 	mrseq	r0, (UNDEF: 5)
     ef4:	24020500 	strcs	r0, [r2], #-1280	; 0xfffffb00
     ef8:	03080008 	movweq	r0, #32776	; 0x8008
     efc:	0305013f 	movweq	r0, #20799	; 0x513f
     f00:	582e0126 	stmdapl	lr!, {r1, r2, r5, r8}
     f04:	0113204a 	tsteq	r3, sl, asr #32
     f08:	204a4a20 	subcs	r4, sl, r0, lsr #20
     f0c:	19060105 	stmdbne	r6, {r0, r2, r8}
     f10:	01000502 	tsteq	r0, r2, lsl #10
     f14:	0044c001 	subeq	ip, r4, r1
     f18:	1d000300 	stcne	3, cr0, [r0, #-0]
     f1c:	02000002 	andeq	r0, r0, #2
     f20:	0d0efb01 	vstreq	d15, [lr, #-4]
     f24:	01010100 	mrseq	r0, (UNDEF: 17)
     f28:	00000001 	andeq	r0, r0, r1
     f2c:	01000001 	tsteq	r0, r1
     f30:	442f2e2e 	strtmi	r2, [pc], #-3630	; f38 <_Min_Heap_Size+0x738>
     f34:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     f38:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
     f3c:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
     f40:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
     f44:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
     f48:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
     f4c:	2f726576 	svccs	0x00726576
     f50:	00637253 	rsbeq	r7, r3, r3, asr r2
     f54:	442f2e2e 	strtmi	r2, [pc], #-3630	; f5c <_Min_Heap_Size+0x75c>
     f58:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     f5c:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     f60:	5349534d 	movtpl	r5, #37709	; 0x934d
     f64:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     f68:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     f6c:	706f2f00 	rsbvc	r2, pc, r0, lsl #30
     f70:	63672f74 	cmnvs	r7, #116, 30	; 0x1d0
     f74:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     f78:	6f6e2d6d 	svcvs	0x006e2d6d
     f7c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     f80:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     f84:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     f88:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     f8c:	30312e31 	eorscc	r2, r1, r1, lsr lr
     f90:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
     f94:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     f98:	61652d65 	cmnvs	r5, r5, ror #26
     f9c:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
     fa0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     fa4:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; e1c <_Min_Heap_Size+0x61c>
     fa8:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
     fac:	2f00656e 	svccs	0x0000656e
     fb0:	2f74706f 	svccs	0x0074706f
     fb4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     fb8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     fbc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     fc0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     fc4:	30312d69 	eorscc	r2, r1, r9, ror #26
     fc8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     fcc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     fd0:	612f3031 			; <UNDEFINED> instruction: 0x612f3031
     fd4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     fd8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     fdc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     fe0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
     fe4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     fe8:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
     fec:	2f2e2e00 	svccs	0x002e2e00
     ff0:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     ff4:	2f737265 	svccs	0x00737265
     ff8:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     ffc:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    1000:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    1004:	2f54532f 	svccs	0x0054532f
    1008:	334d5453 	movtcc	r5, #54355	; 0xd453
    100c:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    1010:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    1014:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1018:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    101c:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    1020:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1024:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    1028:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    102c:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1030:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1038 <_Min_Heap_Size+0x838>
    1034:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1038:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
    103c:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    1040:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    1044:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
    1048:	73000063 	movwvc	r0, #99	; 0x63
    104c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1050:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1054:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    1058:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
    105c:	00632e74 	rsbeq	r2, r3, r4, ror lr
    1060:	63000001 	movwvs	r0, #1
    1064:	7369736d 	cmnvc	r9, #-1275068415	; 0xb4000001
    1068:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    106c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1070:	645f0000 	ldrbvs	r0, [pc], #-0	; 1078 <_Min_Heap_Size+0x878>
    1074:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    1078:	745f746c 	ldrbvc	r7, [pc], #-1132	; 1080 <_Min_Heap_Size+0x880>
    107c:	73657079 	cmnvc	r5, #121	; 0x79
    1080:	0300682e 	movweq	r6, #2094	; 0x82e
    1084:	735f0000 	cmpvc	pc, #0
    1088:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    108c:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1090:	73000004 	movwvc	r0, #4
    1094:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1098:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    109c:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    10a0:	00000500 	andeq	r0, r0, r0, lsl #10
    10a4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    10a8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    10ac:	00682e78 	rsbeq	r2, r8, r8, ror lr
    10b0:	73000005 	movwvc	r0, #5
    10b4:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    10b8:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    10bc:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    10c0:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    10c4:	0600682e 	streq	r6, [r0], -lr, lsr #16
    10c8:	74730000 	ldrbtvc	r0, [r3], #-0
    10cc:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    10d0:	5f787834 	svcpl	0x00787834
    10d4:	5f6c6168 	svcpl	0x006c6168
    10d8:	2e616d64 	cdpcs	13, 6, cr6, cr1, cr4, {3}
    10dc:	00060068 	andeq	r0, r6, r8, rrx
    10e0:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    10e4:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    10e8:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    10ec:	755f6c61 	ldrbvc	r6, [pc, #-3169]	; 493 <_Min_Heap_Size-0x36d>
    10f0:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    10f4:	00060068 	andeq	r0, r6, r8, rrx
    10f8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    10fc:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1100:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1104:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    1108:	2e666e6f 	cdpcs	14, 6, cr6, cr6, cr15, {3}
    110c:	00070068 	andeq	r0, r7, r8, rrx
    1110:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    1114:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1118:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    111c:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
    1120:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    1124:	00000600 	andeq	r0, r0, r0, lsl #12
    1128:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    112c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1130:	61685f78 	smcvs	34296	; 0x85f8
    1134:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    1138:	00000006 	andeq	r0, r0, r6
    113c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1140:	00000002 	andeq	r0, r0, r2
    1144:	19f90300 	ldmibne	r9!, {r8, r9}^
    1148:	00030501 	andeq	r0, r3, r1, lsl #10
    114c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1150:	01040200 	mrseq	r0, R12_usr
    1154:	04020001 	streq	r0, [r2], #-1
    1158:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    115c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    1160:	001f0502 	andseq	r0, pc, r2, lsl #10
    1164:	03010402 	movweq	r0, #5122	; 0x1402
    1168:	052069e0 	streq	r6, [r0, #-2528]!	; 0xfffff620
    116c:	04020005 	streq	r0, [r2], #-5
    1170:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    1174:	01040200 	mrseq	r0, R12_usr
    1178:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    117c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1180:	06010402 	streq	r0, [r1], -r2, lsl #8
    1184:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1188:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    118c:	00030501 	andeq	r0, r3, r1, lsl #10
    1190:	03010402 	movweq	r0, #5122	; 0x1402
    1194:	0001169b 	muleq	r1, fp, r6
    1198:	06010402 	streq	r0, [r1], -r2, lsl #8
    119c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    11a0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    11a4:	6a930301 	bvs	fe4c1db0 <_estack+0xde4b8410>
    11a8:	00040501 	andeq	r0, r4, r1, lsl #10
    11ac:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    11b0:	01040200 	mrseq	r0, R12_usr
    11b4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    11b8:	00200601 	eoreq	r0, r0, r1, lsl #12
    11bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    11c0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    11c4:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    11c8:	00030501 	andeq	r0, r3, r1, lsl #10
    11cc:	03010402 	movweq	r0, #5122	; 0x1402
    11d0:	000115e8 	andeq	r1, r1, r8, ror #11
    11d4:	06020402 	streq	r0, [r2], -r2, lsl #8
    11d8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    11dc:	11051502 	tstne	r5, r2, lsl #10
    11e0:	02040200 	andeq	r0, r4, #0, 4
    11e4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    11e8:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    11ec:	04020001 	streq	r0, [r2], #-1
    11f0:	01022f02 	tsteq	r2, r2, lsl #30
    11f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    11f8:	02050001 	andeq	r0, r5, #1
    11fc:	0800085c 	stmdaeq	r0, {r2, r3, r4, r6, fp}
    1200:	011a8703 	tsteq	sl, r3, lsl #14
    1204:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1208:	00140104 	andseq	r0, r4, r4, lsl #2
    120c:	01010402 	tsteq	r1, r2, lsl #8
    1210:	01040200 	mrseq	r0, R12_usr
    1214:	04020001 	streq	r0, [r2], #-1
    1218:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    121c:	02001f05 	andeq	r1, r0, #5, 30
    1220:	d2030104 	andle	r0, r3, #4, 2
    1224:	05052069 	streq	r2, [r5, #-105]	; 0xffffff97
    1228:	01040200 	mrseq	r0, R12_usr
    122c:	00040514 	andeq	r0, r4, r4, lsl r5
    1230:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1234:	01040200 	mrseq	r0, R12_usr
    1238:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    123c:	2f060104 	svccs	0x00060104
    1240:	01040200 	mrseq	r0, R12_usr
    1244:	01040106 	tsteq	r4, r6, lsl #2
    1248:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    124c:	a9030104 	stmdbge	r3, {r2, r8}
    1250:	02000116 	andeq	r0, r0, #-2147483643	; 0x80000005
    1254:	2e060104 	adfcss	f0, f6, f4
    1258:	1f050204 	svcne	0x00050204
    125c:	01040200 	mrseq	r0, R12_usr
    1260:	016a8503 	cmneq	sl, r3, lsl #10
    1264:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    1268:	00140104 	andseq	r0, r4, r4, lsl #2
    126c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1270:	01040200 	mrseq	r0, R12_usr
    1274:	02002006 	andeq	r2, r0, #6
    1278:	2f060104 	svccs	0x00060104
    127c:	01040200 	mrseq	r0, R12_usr
    1280:	01040106 	tsteq	r4, r6, lsl #2
    1284:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1288:	f6030104 			; <UNDEFINED> instruction: 0xf6030104
    128c:	02000115 	andeq	r0, r0, #1073741829	; 0x40000005
    1290:	002e0104 	eoreq	r0, lr, r4, lsl #2
    1294:	06010402 	streq	r0, [r1], -r2, lsl #8
    1298:	04020001 	streq	r0, [r2], #-1
    129c:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    12a0:	00010104 	andeq	r0, r1, r4, lsl #2
    12a4:	01010402 	tsteq	r1, r2, lsl #8
    12a8:	01040200 	mrseq	r0, R12_usr
    12ac:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    12b0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    12b4:	69d10301 	ldmibvs	r1, {r0, r8, r9}^
    12b8:	00050520 	andeq	r0, r5, r0, lsr #10
    12bc:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    12c0:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    12c4:	00140104 	andseq	r0, r4, r4, lsl #2
    12c8:	06010402 	streq	r0, [r1], -r2, lsl #8
    12cc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    12d0:	002f0601 	eoreq	r0, pc, r1, lsl #12
    12d4:	06010402 	streq	r0, [r1], -r2, lsl #8
    12d8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    12dc:	04020003 	streq	r0, [r2], #-3
    12e0:	16aa0301 	strtne	r0, [sl], r1, lsl #6
    12e4:	04020001 	streq	r0, [r2], #-1
    12e8:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    12ec:	001f0502 	andseq	r0, pc, r2, lsl #10
    12f0:	03010402 	movweq	r0, #5122	; 0x1402
    12f4:	05016a84 	streq	r6, [r1, #-2692]	; 0xfffff57c
    12f8:	04020004 	streq	r0, [r2], #-4
    12fc:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1300:	00140104 	andseq	r0, r4, r4, lsl #2
    1304:	06010402 	streq	r0, [r1], -r2, lsl #8
    1308:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    130c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1310:	06010402 	streq	r0, [r1], -r2, lsl #8
    1314:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1318:	04020003 	streq	r0, [r2], #-3
    131c:	15f70301 	ldrbne	r0, [r7, #769]!	; 0x301
    1320:	04020001 	streq	r0, [r2], #-1
    1324:	002e0602 	eoreq	r0, lr, r2, lsl #12
    1328:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    132c:	02000c05 	andeq	r0, r0, #1280	; 0x500
    1330:	01060204 	tsteq	r6, r4, lsl #4
    1334:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    1338:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    133c:	04020005 	streq	r0, [r2], #-5
    1340:	05300602 	ldreq	r0, [r0, #-1538]!	; 0xfffff9fe
    1344:	04020003 	streq	r0, [r2], #-3
    1348:	12051602 	andne	r1, r5, #2097152	; 0x200000
    134c:	02040200 	andeq	r0, r4, #0, 4
    1350:	03050106 	movweq	r0, #20742	; 0x5106
    1354:	02040200 	andeq	r0, r4, #0, 4
    1358:	18053d06 	stmdane	r5, {r1, r2, r8, sl, fp, ip, sp}
    135c:	02040200 	andeq	r0, r4, #0, 4
    1360:	01050106 	tsteq	r5, r6, lsl #2
    1364:	02040200 	andeq	r0, r4, #0, 4
    1368:	0005052f 	andeq	r0, r5, pc, lsr #10
    136c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1370:	00207a03 	eoreq	r7, r0, r3, lsl #20
    1374:	01010402 	tsteq	r1, r2, lsl #8
    1378:	01040200 	mrseq	r0, R12_usr
    137c:	04020001 	streq	r0, [r2], #-1
    1380:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    1384:	02001f05 	andeq	r1, r0, #5, 30
    1388:	cc030104 	stfgts	f0, [r3], {4}
    138c:	05052069 	streq	r2, [r5, #-105]	; 0xffffff97
    1390:	01040200 	mrseq	r0, R12_usr
    1394:	00040514 	andeq	r0, r4, r4, lsl r5
    1398:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    139c:	01040200 	mrseq	r0, R12_usr
    13a0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    13a4:	2f060104 	svccs	0x00060104
    13a8:	01040200 	mrseq	r0, R12_usr
    13ac:	01040106 	tsteq	r4, r6, lsl #2
    13b0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    13b4:	af030104 	svcge	0x00030104
    13b8:	02000116 	andeq	r0, r0, #-2147483643	; 0x80000005
    13bc:	2e060104 	adfcss	f0, f6, f4
    13c0:	1f050204 	svcne	0x00050204
    13c4:	01040200 	mrseq	r0, R12_usr
    13c8:	0169ff03 	msreq	(UNDEF: 121), r3
    13cc:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    13d0:	00140104 	andseq	r0, r4, r4, lsl #2
    13d4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    13d8:	01040200 	mrseq	r0, R12_usr
    13dc:	02002006 	andeq	r2, r0, #6
    13e0:	2f060104 	svccs	0x00060104
    13e4:	01040200 	mrseq	r0, R12_usr
    13e8:	01040106 	tsteq	r4, r6, lsl #2
    13ec:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    13f0:	fc030104 	stc2	1, cr0, [r3], {4}
    13f4:	03020115 	movweq	r0, #8469	; 0x2115
    13f8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    13fc:	02050001 	andeq	r0, r5, #1
    1400:	080008b8 	stmdaeq	r0, {r3, r4, r5, r7, fp}
    1404:	011bc903 	tsteq	fp, r3, lsl #18
    1408:	15130305 	ldrne	r0, [r3, #-773]	; 0xfffffcfb
    140c:	01060c05 	tsteq	r6, r5, lsl #24
    1410:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    1414:	2e19030c 	cdpcs	3, 1, cr0, cr9, cr12, {0}
    1418:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    141c:	67030605 	strvs	r0, [r3, -r5, lsl #12]
    1420:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    1424:	20080501 	andcs	r0, r8, r1, lsl #10
    1428:	44060705 	strmi	r0, [r6], #-1797	; 0xfffff8fb
    142c:	01062d05 	tsteq	r6, r5, lsl #26
    1430:	05203905 	streq	r3, [r0, #-2309]!	; 0xfffff6fb
    1434:	0c052e27 	stceq	14, cr2, [r5], {39}	; 0x27
    1438:	201b0520 	andscs	r0, fp, r0, lsr #10
    143c:	23060505 	movwcs	r0, #25861	; 0x6505
    1440:	01061005 	tsteq	r6, r5
    1444:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    1448:	07052e08 	streq	r2, [r5, -r8, lsl #28]
    144c:	055b3106 	ldrbeq	r3, [fp, #-262]	; 0xfffffefa
    1450:	0c055a05 			; <UNDEFINED> instruction: 0x0c055a05
    1454:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    1458:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
    145c:	206d0301 	rsbcs	r0, sp, r1, lsl #6
    1460:	02003805 	andeq	r3, r0, #327680	; 0x50000
    1464:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1468:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    146c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    1470:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    1474:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    1478:	1d05200c 	stcne	0, cr2, [r5, #-48]	; 0xffffffd0
    147c:	2e1b0520 	cfmul64cs	mvdx0, mvdx11, mvdx0
    1480:	21060705 	tstcs	r6, r5, lsl #14
    1484:	01061905 	tsteq	r6, r5, lsl #18
    1488:	01000402 	tsteq	r0, r2, lsl #8
    148c:	00010501 	andeq	r0, r1, r1, lsl #10
    1490:	09180205 	ldmdbeq	r8, {r0, r2, r9}
    1494:	ef030800 	svc	0x00030800
    1498:	0106011c 	tsteq	r6, ip, lsl r1
    149c:	2f060305 	svccs	0x00060305
    14a0:	004b1513 	subeq	r1, fp, r3, lsl r5
    14a4:	06010402 	streq	r0, [r1], -r2, lsl #8
    14a8:	003d062e 	eorseq	r0, sp, lr, lsr #12
    14ac:	06010402 	streq	r0, [r1], -r2, lsl #8
    14b0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    14b4:	3d063c02 	stccc	12, cr3, [r6, #-8]
    14b8:	02040200 	andeq	r0, r4, #0, 4
    14bc:	02005806 	andeq	r5, r0, #393216	; 0x60000
    14c0:	06200304 	strteq	r0, [r0], -r4, lsl #6
    14c4:	7409035d 	strvc	r0, [r9], #-861	; 0xfffffca3
    14c8:	01062105 	tsteq	r6, r5, lsl #2
    14cc:	05203a05 	streq	r3, [r0, #-2565]!	; 0xfffff5fb
    14d0:	4f05202d 	svcmi	0x0005202d
    14d4:	20420520 	subcs	r0, r2, r0, lsr #10
    14d8:	05206205 	streq	r6, [r0, #-517]!	; 0xfffffdfb
    14dc:	0305200a 	movweq	r2, #20490	; 0x500a
    14e0:	06882106 	streq	r2, [r8], r6, lsl #2
    14e4:	06050520 	streq	r0, [r5], -r0, lsr #10
    14e8:	05660903 	strbeq	r0, [r6, #-2307]!	; 0xfffff6fd
    14ec:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    14f0:	25052008 	strcs	r2, [r5, #-8]
    14f4:	01040200 	mrseq	r0, R12_usr
    14f8:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    14fc:	054a0c03 	strbeq	r0, [sl, #-3075]	; 0xfffff3fd
    1500:	2e01060e 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx14
    1504:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1508:	53030104 	movwpl	r0, #12548	; 0x3104
    150c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1510:	02003c01 	andeq	r3, r0, #256	; 0x100
    1514:	003d0204 	eorseq	r0, sp, r4, lsl #4
    1518:	67030402 	strvs	r0, [r3, -r2, lsl #8]
    151c:	03060705 	movweq	r0, #26373	; 0x6705
    1520:	0e056621 	cfmadd32eq	mvax1, mvfx6, mvfx5, mvfx1
    1524:	03050106 	movweq	r0, #20742	; 0x5106
    1528:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    152c:	01061205 	tsteq	r6, r5, lsl #4
    1530:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    1534:	05420605 	strbeq	r0, [r2, #-1541]	; 0xfffff9fb
    1538:	ac01061c 	stcge	6, cr0, [r1], {28}
    153c:	9e080a05 	vmlals.f32	s0, s16, s10
    1540:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    1544:	0105201a 	tsteq	r5, sl, lsl r0
    1548:	06050522 	streq	r0, [r5], -r2, lsr #10
    154c:	05207a03 	streq	r7, [r0, #-2563]!	; 0xfffff5fd
    1550:	ba01061c 	blt	42dc8 <_Min_Heap_Size+0x425c8>
    1554:	90080a05 	andls	r0, r8, r5, lsl #20
    1558:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    155c:	0a02201a 	beq	895cc <_Min_Heap_Size+0x88dcc>
    1560:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1564:	02050001 	andeq	r0, r5, #1
    1568:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
    156c:	0118f203 	tsteq	r8, r3, lsl #4	; <UNPREDICTABLE>
    1570:	03050106 	movweq	r0, #20742	; 0x5106
    1574:	09059206 	stmdbeq	r5, {r1, r2, r9, ip, pc}
    1578:	060b0501 	streq	r0, [fp], -r1, lsl #10
    157c:	2e320501 	cdpcs	5, 3, cr0, cr2, cr1, {0}
    1580:	05740905 	ldrbeq	r0, [r4, #-2309]!	; 0xfffff6fb
    1584:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    1588:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    158c:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    1590:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1594:	0a052e1b 	beq	14ce08 <_Min_Heap_Size+0x14c608>
    1598:	0033052e 	eorseq	r0, r3, lr, lsr #10
    159c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    15a0:	42060705 	andmi	r0, r6, #1310720	; 0x140000
    15a4:	01060c05 	tsteq	r6, r5, lsl #24
    15a8:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    15ac:	04020040 	streq	r0, [r2], #-64	; 0xffffffc0
    15b0:	5b053c01 	blpl	1505bc <_Min_Heap_Size+0x14fdbc>
    15b4:	02040200 	andeq	r0, r4, #0, 4
    15b8:	0609052e 	streq	r0, [r9], -lr, lsr #10
    15bc:	060d0530 			; <UNDEFINED> instruction: 0x060d0530
    15c0:	200c0501 	andcs	r0, ip, r1, lsl #10
    15c4:	3f060b05 	svccc	0x00060b05
    15c8:	2e2e2e01 	cdpcs	14, 2, cr2, cr14, cr1, {0}
    15cc:	053e1720 	ldreq	r1, [lr, #-1824]!	; 0xfffff8e0
    15d0:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    15d4:	0131060b 	teqeq	r1, fp, lsl #12
    15d8:	1205142e 	andne	r1, r5, #771751936	; 0x2e000000
    15dc:	0a050106 	beq	1419fc <_Min_Heap_Size+0x1411fc>
    15e0:	21010533 	tstcs	r1, r3, lsr r5
    15e4:	66031005 	strvs	r1, [r3], -r5
    15e8:	0004023c 	andeq	r0, r4, ip, lsr r2
    15ec:	01050101 	tsteq	r5, r1, lsl #2
    15f0:	00020500 	andeq	r0, r2, r0, lsl #10
    15f4:	03000000 	movweq	r0, #0
    15f8:	050105cb 	streq	r0, [r1, #-1483]	; 0xfffffa35
    15fc:	01051403 	tsteq	r5, r3, lsl #8
    1600:	01021606 	tsteq	r2, r6, lsl #12
    1604:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1608:	02050001 	andeq	r0, r5, #1
    160c:	08000b18 	stmdaeq	r0, {r3, r4, r8, r9, fp}
    1610:	0102e503 	tsteq	r2, r3, lsl #10
    1614:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    1618:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    161c:	03053a01 	movweq	r3, #23041	; 0x5a01
    1620:	12053606 	andne	r3, r5, #6291456	; 0x600000
    1624:	06050106 	streq	r0, [r5], -r6, lsl #2
    1628:	06050520 	streq	r0, [r5], -r0, lsr #10
    162c:	04020033 	streq	r0, [r2], #-51	; 0xffffffcd
    1630:	004a0601 	subeq	r0, sl, r1, lsl #12
    1634:	4a020402 	bmi	82644 <_Min_Heap_Size+0x81e44>
    1638:	03040200 	movweq	r0, #16896	; 0x4200
    163c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1640:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    1644:	063c0404 	ldrteq	r0, [ip], -r4, lsl #8
    1648:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    164c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1650:	3c020402 	cfstrscc	mvf0, [r2], {2}
    1654:	03040200 	movweq	r0, #16896	; 0x4200
    1658:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    165c:	04020042 	streq	r0, [r2], #-66	; 0xffffffbe
    1660:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    1664:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    1668:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    166c:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    1670:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
    1674:	03060305 	movweq	r0, #25349	; 0x6305
    1678:	11052e15 	tstne	r5, r5, lsl lr
    167c:	03050106 	movweq	r0, #20742	; 0x5106
    1680:	415b3f06 	cmpmi	fp, r6, lsl #30
    1684:	055b5b59 	ldrbeq	r5, [fp, #-2905]	; 0xfffff4a7
    1688:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    168c:	052f0603 	streq	r0, [pc, #-1539]!	; 1091 <_Min_Heap_Size+0x891>
    1690:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1694:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    1698:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    169c:	052f0603 	streq	r0, [pc, #-1539]!	; 10a1 <_Min_Heap_Size+0x8a1>
    16a0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    16a4:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    16a8:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    16ac:	04020005 	streq	r0, [r2], #-5
    16b0:	204a0304 	subcs	r0, sl, r4, lsl #6
    16b4:	02006a06 	andeq	r6, r0, #24576	; 0x6000
    16b8:	4a060104 	bmi	181ad0 <_Min_Heap_Size+0x1812d0>
    16bc:	02040200 	andeq	r0, r4, #0, 4
    16c0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    16c4:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    16c8:	004a0404 	subeq	r0, sl, r4, lsl #8
    16cc:	4a050402 	bmi	1426dc <_Min_Heap_Size+0x141edc>
    16d0:	06040200 	streq	r0, [r4], -r0, lsl #4
    16d4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    16d8:	03053c06 	movweq	r3, #23558	; 0x5c06
    16dc:	02040200 	andeq	r0, r4, #0, 4
    16e0:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    16e4:	05056702 	streq	r6, [r5, #-1794]	; 0xfffff8fe
    16e8:	11056b06 	tstne	r5, r6, lsl #22
    16ec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    16f0:	2e0e0306 	cdpcs	3, 0, cr0, cr14, cr6, {0}
    16f4:	03060c05 	movweq	r0, #27653	; 0x6c05
    16f8:	01054a5c 	tsteq	r5, ip, asr sl
    16fc:	2000c003 	andcs	ip, r0, r3
    1700:	01000602 	tsteq	r0, r2, lsl #12
    1704:	00010501 	andeq	r0, r1, r1, lsl #10
    1708:	00000205 	andeq	r0, r0, r5, lsl #4
    170c:	b3030000 	movwlt	r0, #12288	; 0x3000
    1710:	03050103 	movweq	r0, #20739	; 0x5103
    1714:	06060514 			; <UNDEFINED> instruction: 0x06060514
    1718:	2c010501 	cfstr32cs	mvfx0, [r1], {1}
    171c:	36060305 	strcc	r0, [r6], -r5, lsl #6
    1720:	01040200 	mrseq	r0, R12_usr
    1724:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    1728:	004a0204 	subeq	r0, sl, r4, lsl #4
    172c:	4a030402 	bmi	c273c <_Min_Heap_Size+0xc1f3c>
    1730:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1734:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1738:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    173c:	004a0604 	subeq	r0, sl, r4, lsl #12
    1740:	3c060402 	cfstrscc	mvf0, [r6], {2}
    1744:	02002f06 	andeq	r2, r0, #6, 30
    1748:	2e060104 	adfcss	f0, f6, f4
    174c:	02003d06 	andeq	r3, r0, #384	; 0x180
    1750:	2e060104 	adfcss	f0, f6, f4
    1754:	0c053e06 	stceq	14, cr3, [r5], {6}
    1758:	06050106 	streq	r0, [r5], -r6, lsl #2
    175c:	0603052e 	streq	r0, [r3], -lr, lsr #10
    1760:	052e1503 	streq	r1, [lr, #-1283]!	; 0xfffffafd
    1764:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1768:	5b3f0603 	blpl	fc2f7c <_Min_Heap_Size+0xfc277c>
    176c:	5b5b5941 	blpl	16d7c78 <_Min_Heap_Size+0x16d7478>
    1770:	0614055b 			; <UNDEFINED> instruction: 0x0614055b
    1774:	06030501 	streq	r0, [r3], -r1, lsl #10
    1778:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    177c:	06030501 	streq	r0, [r3], -r1, lsl #10
    1780:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
    1784:	06030501 	streq	r0, [r3], -r1, lsl #10
    1788:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    178c:	06030501 	streq	r0, [r3], -r1, lsl #10
    1790:	06010522 	streq	r0, [r1], -r2, lsr #10
    1794:	00030513 	andeq	r0, r3, r3, lsl r5
    1798:	03020402 	movweq	r0, #9218	; 0x2402
    179c:	0200204d 	andeq	r2, r0, #77	; 0x4d
    17a0:	05670204 	strbeq	r0, [r7, #-516]!	; 0xfffffdfc
    17a4:	056b0605 	strbeq	r0, [fp, #-1541]!	; 0xfffff9fb
    17a8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    17ac:	0e030605 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx5
    17b0:	060c052e 	streq	r0, [ip], -lr, lsr #10
    17b4:	054a6703 	strbeq	r6, [sl, #-1795]	; 0xfffff8fd
    17b8:	20380301 	eorscs	r0, r8, r1, lsl #6
    17bc:	01000602 	tsteq	r0, r2, lsl #12
    17c0:	00010501 	andeq	r0, r1, r1, lsl #10
    17c4:	00000205 	andeq	r0, r0, r5, lsl #4
    17c8:	fd030000 	stc2	0, cr0, [r3, #-0]
    17cc:	03050103 	movweq	r0, #20739	; 0x5103
    17d0:	06060514 			; <UNDEFINED> instruction: 0x06060514
    17d4:	2c010501 	cfstr32cs	mvfx0, [r1], {1}
    17d8:	44060305 	strmi	r0, [r6], #-773	; 0xfffffcfb
    17dc:	01040200 	mrseq	r0, R12_usr
    17e0:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    17e4:	004a0204 	subeq	r0, sl, r4, lsl #4
    17e8:	4a030402 	bmi	c27f8 <_Min_Heap_Size+0xc1ff8>
    17ec:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    17f0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    17f4:	02004a05 	andeq	r4, r0, #20480	; 0x5000
    17f8:	004a0604 	subeq	r0, sl, r4, lsl #12
    17fc:	2e060402 	cdpcs	4, 0, cr0, cr6, cr2, {0}
    1800:	06040200 	streq	r0, [r4], -r0, lsl #4
    1804:	00310620 	eorseq	r0, r1, r0, lsr #12
    1808:	06010402 	streq	r0, [r1], -r2, lsl #8
    180c:	3d2f0620 	stccc	6, cr0, [pc, #-128]!	; 1794 <_Min_Heap_Size+0xf94>
    1810:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    1814:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
    1818:	03060305 	movweq	r0, #25349	; 0x6305
    181c:	11052e15 	tstne	r5, r5, lsl lr
    1820:	03050106 	movweq	r0, #20742	; 0x5106
    1824:	415b3f06 	cmpmi	fp, r6, lsl #30
    1828:	595b5b59 	ldmdbpl	fp, {r0, r3, r4, r6, r8, r9, fp, ip, lr}^
    182c:	23063c06 	movwcs	r3, #27654	; 0x6c06
    1830:	0614055b 			; <UNDEFINED> instruction: 0x0614055b
    1834:	06030501 	streq	r0, [r3], -r1, lsl #10
    1838:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    183c:	06030501 	streq	r0, [r3], -r1, lsl #10
    1840:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
    1844:	06030501 	streq	r0, [r3], -r1, lsl #10
    1848:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    184c:	06030501 	streq	r0, [r3], -r1, lsl #10
    1850:	06010522 	streq	r0, [r1], -r2, lsr #10
    1854:	00030513 	andeq	r0, r3, r3, lsl r5
    1858:	03020402 	movweq	r0, #9218	; 0x2402
    185c:	02002048 	andeq	r2, r0, #72	; 0x48
    1860:	00670104 	rsbeq	r0, r7, r4, lsl #2
    1864:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    1868:	6b060505 	blvs	182c84 <_Min_Heap_Size+0x182484>
    186c:	01061105 	tsteq	r6, r5, lsl #2
    1870:	03060505 	movweq	r0, #25861	; 0x6505
    1874:	0c052e0e 	stceq	14, cr2, [r5], {14}
    1878:	4a640306 	bmi	1902498 <_Min_Heap_Size+0x1901c98>
    187c:	3f030105 	svccc	0x00030105
    1880:	00050220 	andeq	r0, r5, r0, lsr #4
    1884:	01050101 	tsteq	r5, r1, lsl #2
    1888:	00020500 	andeq	r0, r2, r0, lsl #10
    188c:	03000000 	movweq	r0, #0
    1890:	050104cf 	streq	r0, [r1, #-1231]	; 0xfffffb31
    1894:	06051403 	streq	r1, [r5], -r3, lsl #8
    1898:	01050106 	tsteq	r5, r6, lsl #2
    189c:	0603053a 			; <UNDEFINED> instruction: 0x0603053a
    18a0:	002e0652 	eoreq	r0, lr, r2, asr r6
    18a4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    18a8:	02040200 	andeq	r0, r4, #0, 4
    18ac:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    18b0:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    18b4:	004a0404 	subeq	r0, sl, r4, lsl #8
    18b8:	4a050402 	bmi	1428c8 <_Min_Heap_Size+0x1420c8>
    18bc:	06040200 	streq	r0, [r4], -r0, lsl #4
    18c0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    18c4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    18c8:	06200604 	strteq	r0, [r0], -r4, lsl #12
    18cc:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    18d0:	06200601 	strteq	r0, [r0], -r1, lsl #12
    18d4:	02002f3d 	andeq	r2, r0, #61, 30	; 0xf4
    18d8:	2e060104 	adfcss	f0, f6, f4
    18dc:	02003d06 	andeq	r3, r0, #384	; 0x180
    18e0:	2e060104 	adfcss	f0, f6, f4
    18e4:	0c053e06 	stceq	14, cr3, [r5], {6}
    18e8:	06050106 	streq	r0, [r5], -r6, lsl #2
    18ec:	0603052e 	streq	r0, [r3], -lr, lsr #10
    18f0:	052e1503 	streq	r1, [lr, #-1283]!	; 0xfffffafd
    18f4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    18f8:	5b3f0603 	blpl	fc310c <_Min_Heap_Size+0xfc290c>
    18fc:	595b5941 	ldmdbpl	fp, {r0, r6, r8, fp, ip, lr}^
    1900:	3c06594d 			; <UNDEFINED> instruction: 0x3c06594d
    1904:	055b2306 	ldrbeq	r2, [fp, #-774]	; 0xfffffcfa
    1908:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    190c:	052f0603 	streq	r0, [pc, #-1539]!	; 1311 <_Min_Heap_Size+0xb11>
    1910:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1914:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    1918:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    191c:	052f0603 	streq	r0, [pc, #-1539]!	; 1321 <_Min_Heap_Size+0xb21>
    1920:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1924:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    1928:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    192c:	04020003 	streq	r0, [r2], #-3
    1930:	20460302 	subcs	r0, r6, r2, lsl #6
    1934:	01040200 	mrseq	r0, R12_usr
    1938:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    193c:	02006702 	andeq	r6, r0, #524288	; 0x80000
    1940:	05670204 	strbeq	r0, [r7, #-516]!	; 0xfffffdfc
    1944:	056b0605 	strbeq	r0, [fp, #-1541]!	; 0xfffff9fb
    1948:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    194c:	0e030605 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx5
    1950:	060c052e 	streq	r0, [ip], -lr, lsr #10
    1954:	054a6303 	strbeq	r6, [sl, #-771]	; 0xfffffcfd
    1958:	00c10301 	sbceq	r0, r1, r1, lsl #6
    195c:	00060220 	andeq	r0, r6, r0, lsr #4
    1960:	01050101 	tsteq	r5, r1, lsl #2
    1964:	00020500 	andeq	r0, r2, r0, lsl #10
    1968:	03000000 	movweq	r0, #0
    196c:	050105da 	streq	r0, [r1, #-1498]	; 0xfffffa26
    1970:	01051403 	tsteq	r5, r3, lsl #8
    1974:	01021606 	tsteq	r2, r6, lsl #12
    1978:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    197c:	02050001 	andeq	r0, r5, #1
    1980:	00000000 	andeq	r0, r0, r0
    1984:	01059d03 	tsteq	r5, r3, lsl #26
    1988:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    198c:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    1990:	03051e01 	movweq	r1, #24065	; 0x5e01
    1994:	02003606 	andeq	r3, r0, #6291456	; 0x600000
    1998:	4a060104 	bmi	181db0 <_Min_Heap_Size+0x1815b0>
    199c:	02040200 	andeq	r0, r4, #0, 4
    19a0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    19a4:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    19a8:	004a0404 	subeq	r0, sl, r4, lsl #8
    19ac:	4a050402 	bmi	1429bc <_Min_Heap_Size+0x1421bc>
    19b0:	06040200 	streq	r0, [r4], -r0, lsl #4
    19b4:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    19b8:	30063c06 	andcc	r3, r6, r6, lsl #24
    19bc:	01061105 	tsteq	r6, r5, lsl #2
    19c0:	3f060305 	svccc	0x00060305
    19c4:	3f580b03 	svccc	0x00580b03
    19c8:	01061405 	tsteq	r6, r5, lsl #8
    19cc:	2f060305 	svccs	0x00060305
    19d0:	01061105 	tsteq	r6, r5, lsl #2
    19d4:	2f060305 	svccs	0x00060305
    19d8:	01061205 	tsteq	r6, r5, lsl #4
    19dc:	2f060305 	svccs	0x00060305
    19e0:	01061805 	tsteq	r6, r5, lsl #16
    19e4:	21060305 	tstcs	r6, r5, lsl #6
    19e8:	01061605 	tsteq	r6, r5, lsl #12
    19ec:	23060305 	movwcs	r0, #25349	; 0x6305
    19f0:	05142e01 	ldreq	r2, [r4, #-3585]	; 0xfffff1ff
    19f4:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    19f8:	205f030c 	subscs	r0, pc, ip, lsl #6
    19fc:	21030105 	tstcs	r3, r5, lsl #2
    1a00:	00050220 	andeq	r0, r5, r0, lsr #4
    1a04:	01050101 	tsteq	r5, r1, lsl #2
    1a08:	44020500 	strmi	r0, [r2], #-1280	; 0xfffffb00
    1a0c:	0308000c 	movweq	r0, #32780	; 0x800c
    1a10:	060108ef 	streq	r0, [r1], -pc, ror #17
    1a14:	06030501 	streq	r0, [r3], -r1, lsl #10
    1a18:	1513134b 	ldrne	r1, [r3, #-843]	; 0xfffffcb5
    1a1c:	01060c05 	tsteq	r6, r5, lsl #24
    1a20:	2006052e 	andcs	r0, r6, lr, lsr #10
    1a24:	5a060505 	bpl	182e40 <_Min_Heap_Size+0x182640>
    1a28:	01060805 	tsteq	r6, r5, lsl #16
    1a2c:	02001905 	andeq	r1, r0, #81920	; 0x14000
    1a30:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1a34:	0520220f 	streq	r2, [r0, #-527]!	; 0xfffffdf1
    1a38:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    1a3c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1a40:	052f0605 	streq	r0, [pc, #-1541]!	; 1443 <_Min_Heap_Size+0xc43>
    1a44:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1a48:	053f0605 	ldreq	r0, [pc, #-1541]!	; 144b <_Min_Heap_Size+0xc4b>
    1a4c:	2e010611 	mcrcs	6, 0, r0, cr1, cr1, {0}
    1a50:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    1a54:	01061705 	tsteq	r6, r5, lsl #14
    1a58:	2f060505 	svccs	0x00060505
    1a5c:	01061805 	tsteq	r6, r5, lsl #16
    1a60:	31060505 	tstcc	r6, r5, lsl #10
    1a64:	01061505 	tsteq	r6, r5, lsl #10
    1a68:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    1a6c:	47054413 	smladmi	r5, r3, r4, r4
    1a70:	01040200 	mrseq	r0, R12_usr
    1a74:	053c7803 	ldreq	r7, [ip, #-2051]!	; 0xfffff7fd
    1a78:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    1a7c:	13052001 	movwne	r2, #20481	; 0x5001
    1a80:	06090528 	streq	r0, [r9], -r8, lsr #10
    1a84:	06170543 	ldreq	r0, [r7], -r3, asr #10
    1a88:	06090501 	streq	r0, [r9], -r1, lsl #10
    1a8c:	0610053e 			; <UNDEFINED> instruction: 0x0610053e
    1a90:	06090501 	streq	r0, [r9], -r1, lsl #10
    1a94:	062a0532 			; <UNDEFINED> instruction: 0x062a0532
    1a98:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    1a9c:	05201f05 	streq	r1, [r0, #-3845]!	; 0xfffff0fb
    1aa0:	09052e1d 	stmdbeq	r5, {r0, r2, r3, r4, r9, sl, fp, sp}
    1aa4:	07052106 	streq	r2, [r5, -r6, lsl #2]
    1aa8:	060c0519 			; <UNDEFINED> instruction: 0x060c0519
    1aac:	2e190501 	cfmul32cs	mvfx0, mvfx9, mvfx1
    1ab0:	03060b05 	movweq	r0, #27397	; 0x6b05
    1ab4:	11053c6e 	tstne	r5, lr, ror #24
    1ab8:	0b050106 	bleq	141ed8 <_Min_Heap_Size+0x1416d8>
    1abc:	0607052e 	streq	r0, [r7], -lr, lsr #10
    1ac0:	060b0522 	streq	r0, [fp], -r2, lsr #10
    1ac4:	740a0501 	strvc	r0, [sl], #-1281	; 0xfffffaff
    1ac8:	34060705 	strcc	r0, [r6], #-1797	; 0xfffff8fb
    1acc:	01060a05 	tsteq	r6, r5, lsl #20
    1ad0:	35060905 	strcc	r0, [r6, #-2309]	; 0xfffff6fb
    1ad4:	01062905 	tsteq	r6, r5, lsl #18
    1ad8:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    1adc:	0905201d 	stmdbeq	r5, {r0, r2, r3, r4, sp}
    1ae0:	01062106 	tsteq	r6, r6, lsl #2
    1ae4:	68031305 	stmdavs	r3, {r0, r2, r8, r9, ip}
    1ae8:	05201f20 	streq	r1, [r0, #-3872]!	; 0xfffff0e0
    1aec:	1e030605 	cfmadd32ne	mvax0, mvfx0, mvfx3, mvfx5
    1af0:	06090520 	streq	r0, [r9], -r0, lsr #10
    1af4:	74080501 	strvc	r0, [r8], #-1281	; 0xfffffaff
    1af8:	28060505 	stmdacs	r6, {r0, r2, r8, sl}
    1afc:	01061305 	tsteq	r6, r5, lsl #6
    1b00:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    1b04:	01060c05 	tsteq	r6, r5, lsl #24
    1b08:	03060705 	movweq	r0, #26373	; 0x6705
    1b0c:	15052078 	strne	r2, [r5, #-120]	; 0xffffff88
    1b10:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1b14:	0e053e06 	cdpeq	14, 0, cr3, cr5, cr6, {0}
    1b18:	0c050106 	stfeqs	f0, [r5], {6}
    1b1c:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    1b20:	0f052201 	svceq	0x00052201
    1b24:	203c4303 	eorscs	r4, ip, r3, lsl #6
    1b28:	01000102 	tsteq	r0, r2, lsl #2
    1b2c:	00010501 	andeq	r0, r1, r1, lsl #10
    1b30:	00000205 	andeq	r0, r0, r5, lsl #4
    1b34:	c5030000 	strgt	r0, [r3, #-0]
    1b38:	01060109 	tsteq	r6, r9, lsl #2
    1b3c:	4b060305 	blmi	182758 <_Min_Heap_Size+0x181f58>
    1b40:	05151313 	ldreq	r1, [r5, #-787]	; 0xfffffced
    1b44:	2e01060c 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx12
    1b48:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    1b4c:	055a0605 	ldrbeq	r0, [sl, #-1541]	; 0xfffff9fb
    1b50:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1b54:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
    1b58:	0f052e01 	svceq	0x00052e01
    1b5c:	05052022 	streq	r2, [r5, #-34]	; 0xffffffde
    1b60:	16052306 	strne	r2, [r5], -r6, lsl #6
    1b64:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1b68:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    1b6c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    1b70:	052f0605 	streq	r0, [pc, #-1541]!	; 1573 <_Min_Heap_Size+0xd73>
    1b74:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    1b78:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    1b7c:	2e010611 	mcrcs	6, 0, r0, cr1, cr1, {0}
    1b80:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    1b84:	01061705 	tsteq	r6, r5, lsl #14
    1b88:	2f060505 	svccs	0x00060505
    1b8c:	01061805 	tsteq	r6, r5, lsl #16
    1b90:	31060505 	tstcc	r6, r5, lsl #10
    1b94:	01061505 	tsteq	r6, r5, lsl #10
    1b98:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    1b9c:	47054413 	smladmi	r5, r3, r4, r4
    1ba0:	01040200 	mrseq	r0, R12_usr
    1ba4:	053c7803 	ldreq	r7, [ip, #-2051]!	; 0xfffff7fd
    1ba8:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    1bac:	13052001 	movwne	r2, #20481	; 0x5001
    1bb0:	201f3728 	andscs	r3, pc, r8, lsr #14
    1bb4:	03060905 	movweq	r0, #26885	; 0x6905
    1bb8:	1805200e 	stmdane	r5, {r1, r2, r3, sp}
    1bbc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1bc0:	10053e06 	andne	r3, r5, r6, lsl #28
    1bc4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1bc8:	28053206 	stmdacs	r5, {r1, r2, r9, ip, sp}
    1bcc:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    1bd0:	20180520 	andscs	r0, r8, r0, lsr #10
    1bd4:	052e1605 	streq	r1, [lr, #-1541]!	; 0xfffff9fb
    1bd8:	062f0609 	strteq	r0, [pc], -r9, lsl #12
    1bdc:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1be0:	06280526 	strteq	r0, [r8], -r6, lsr #10
    1be4:	20320501 	eorscs	r0, r2, r1, lsl #10
    1be8:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    1bec:	05260609 	streq	r0, [r6, #-1545]!	; 0xfffff9f7
    1bf0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1bf4:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    1bf8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1bfc:	0b052e19 	bleq	14d468 <_Min_Heap_Size+0x14cc68>
    1c00:	3c670306 	stclcc	3, cr0, [r7], #-24	; 0xffffffe8
    1c04:	01061105 	tsteq	r6, r5, lsl #2
    1c08:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    1c0c:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    1c10:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    1c14:	0705740a 	streq	r7, [r5, -sl, lsl #8]
    1c18:	0a053406 	beq	14ec38 <_Min_Heap_Size+0x14e438>
    1c1c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1c20:	19053506 	stmdbne	r5, {r1, r2, r8, sl, ip, sp}
    1c24:	0c050106 	stfeqs	f0, [r5], {6}
    1c28:	003c0520 	eorseq	r0, ip, r0, lsr #10
    1c2c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1c30:	02007e05 	andeq	r7, r0, #5, 28	; 0x50
    1c34:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    1c38:	0402006f 	streq	r0, [r2], #-111	; 0xffffff91
    1c3c:	0b052002 	bleq	149c4c <_Min_Heap_Size+0x14944c>
    1c40:	28053406 	stmdacs	r5, {r1, r2, sl, ip, sp}
    1c44:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    1c48:	20190520 	andscs	r0, r9, r0, lsr #10
    1c4c:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    1c50:	05360605 	ldreq	r0, [r6, #-1541]!	; 0xfffff9fb
    1c54:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    1c58:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    1c5c:	3201060c 	andcc	r0, r1, #12, 12	; 0xc00000
    1c60:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    1c64:	3c41030f 	mcrrcc	3, 0, r0, r1, cr15
    1c68:	00010220 	andeq	r0, r1, r0, lsr #4
    1c6c:	01050101 	tsteq	r5, r1, lsl #2
    1c70:	00020500 	andeq	r0, r2, r0, lsl #10
    1c74:	03000000 	movweq	r0, #0
    1c78:	05010a9c 	streq	r0, [r1, #-2716]	; 0xfffff564
    1c7c:	0c051403 	cfstrseq	mvf1, [r5], {3}
    1c80:	06050106 	streq	r0, [r5], -r6, lsl #2
    1c84:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    1c88:	06080530 			; <UNDEFINED> instruction: 0x06080530
    1c8c:	00190501 	andseq	r0, r9, r1, lsl #10
    1c90:	20010402 	andcs	r0, r1, r2, lsl #8
    1c94:	25060505 	strcs	r0, [r6, #-1285]	; 0xfffffafb
    1c98:	01061705 	tsteq	r6, r5, lsl #14
    1c9c:	21060505 	tstcs	r6, r5, lsl #10
    1ca0:	01061705 	tsteq	r6, r5, lsl #14
    1ca4:	21060505 	tstcs	r6, r5, lsl #10
    1ca8:	01061805 	tsteq	r6, r5, lsl #16
    1cac:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    1cb0:	01061605 	tsteq	r6, r5, lsl #12
    1cb4:	2f060505 	svccs	0x00060505
    1cb8:	01061305 	tsteq	r6, r5, lsl #6
    1cbc:	06050520 	streq	r0, [r5], -r0, lsr #10
    1cc0:	06200631 			; <UNDEFINED> instruction: 0x06200631
    1cc4:	060c054c 	streq	r0, [ip], -ip, asr #10
    1cc8:	20242001 	eorcs	r2, r4, r1
    1ccc:	6f030e05 	svcvs	0x00030e05
    1cd0:	05202020 	streq	r2, [r0, #-32]!	; 0xffffffe0
    1cd4:	20130301 	andscs	r0, r3, r1, lsl #6
    1cd8:	01000102 	tsteq	r0, r2, lsl #2
    1cdc:	00010501 	andeq	r0, r1, r1, lsl #10
    1ce0:	00000205 	andeq	r0, r0, r5, lsl #4
    1ce4:	e3030000 	movw	r0, #12288	; 0x3000
    1ce8:	0106010a 	tsteq	r6, sl, lsl #2
    1cec:	21060305 	tstcs	r6, r5, lsl #6
    1cf0:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    1cf4:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    1cf8:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    1cfc:	01060805 	tsteq	r6, r5, lsl #16
    1d00:	02001905 	andeq	r1, r0, #81920	; 0x14000
    1d04:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1d08:	0105220e 	tsteq	r5, lr, lsl #4
    1d0c:	05202703 	streq	r2, [r0, #-1795]!	; 0xfffff8fd
    1d10:	5c030605 	stcpl	6, cr0, [r3], {5}
    1d14:	06170520 	ldreq	r0, [r7], -r0, lsr #10
    1d18:	06050501 	streq	r0, [r5], -r1, lsl #10
    1d1c:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    1d20:	06050501 	streq	r0, [r5], -r1, lsl #10
    1d24:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    1d28:	06050501 	streq	r0, [r5], -r1, lsl #10
    1d2c:	06160522 	ldreq	r0, [r6], -r2, lsr #10
    1d30:	06050501 	streq	r0, [r5], -r1, lsl #10
    1d34:	0613052f 	ldreq	r0, [r3], -pc, lsr #10
    1d38:	05052001 	streq	r2, [r5, #-1]
    1d3c:	0a053106 	beq	14e15c <_Min_Heap_Size+0x14d95c>
    1d40:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    1d44:	06050520 	streq	r0, [r5], -r0, lsr #10
    1d48:	060a0531 			; <UNDEFINED> instruction: 0x060a0531
    1d4c:	20290501 	eorcs	r0, r9, r1, lsl #10
    1d50:	31060505 	tstcc	r6, r5, lsl #10
    1d54:	01060a05 	tsteq	r6, r5, lsl #20
    1d58:	05202605 	streq	r2, [r0, #-1541]!	; 0xfffff9fb
    1d5c:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    1d60:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    1d64:	05052026 	streq	r2, [r5, #-38]	; 0xffffffda
    1d68:	05132306 	ldreq	r2, [r3, #-774]	; 0xfffffcfa
    1d6c:	0501064d 	streq	r0, [r1, #-1613]	; 0xfffff9b3
    1d70:	062e2005 	strteq	r2, [lr], -r5
    1d74:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    1d78:	02004e01 	andeq	r4, r0, #1, 28
    1d7c:	00010104 	andeq	r0, r1, r4, lsl #2
    1d80:	01010402 	tsteq	r1, r2, lsl #8
    1d84:	01040200 	mrseq	r0, R12_usr
    1d88:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    1d8c:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    1d90:	78d10301 	ldmvc	r1, {r0, r8, r9}^
    1d94:	00050520 	andeq	r0, r5, r0, lsr #10
    1d98:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1d9c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    1da0:	00140104 	andseq	r0, r4, r4, lsl #2
    1da4:	06010402 	streq	r0, [r1], -r2, lsl #8
    1da8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1dac:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1db0:	06010402 	streq	r0, [r1], -r2, lsl #8
    1db4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1db8:	04020005 	streq	r0, [r2], #-5
    1dbc:	07aa0301 	streq	r0, [sl, r1, lsl #6]!
    1dc0:	04020001 	streq	r0, [r2], #-1
    1dc4:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    1dc8:	001f0502 	andseq	r0, pc, r2, lsl #10
    1dcc:	03010402 	movweq	r0, #5122	; 0x1402
    1dd0:	05017984 	streq	r7, [r1, #-2436]	; 0xfffff67c
    1dd4:	04020004 	streq	r0, [r2], #-4
    1dd8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1ddc:	00140104 	andseq	r0, r4, r4, lsl #2
    1de0:	06010402 	streq	r0, [r1], -r2, lsl #8
    1de4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1de8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    1dec:	06010402 	streq	r0, [r1], -r2, lsl #8
    1df0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1df4:	04020005 	streq	r0, [r2], #-5
    1df8:	06f70301 	ldrbteq	r0, [r7], r1, lsl #6
    1dfc:	300c0501 	andcc	r0, ip, r1, lsl #10
    1e00:	0520162e 	streq	r1, [r0, #-1582]!	; 0xfffff9d2
    1e04:	205b030e 	subscs	r0, fp, lr, lsl #6
    1e08:	00080220 	andeq	r0, r8, r0, lsr #4
    1e0c:	01050101 	tsteq	r5, r1, lsl #2
    1e10:	00020500 	andeq	r0, r2, r0, lsl #10
    1e14:	03000000 	movweq	r0, #0
    1e18:	05010bbc 	streq	r0, [r1, #-3004]	; 0xfffff444
    1e1c:	05141303 	ldreq	r1, [r4, #-771]	; 0xfffffcfd
    1e20:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    1e24:	054b0603 	strbeq	r0, [fp, #-1539]	; 0xfffff9fd
    1e28:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1e2c:	05053c06 	streq	r3, [r5, #-3078]	; 0xfffff3fa
    1e30:	02040200 	andeq	r0, r4, #0, 4
    1e34:	03053106 	movweq	r3, #20742	; 0x5106
    1e38:	02040200 	andeq	r0, r4, #0, 4
    1e3c:	00100515 	andseq	r0, r0, r5, lsl r5
    1e40:	06020402 	streq	r0, [r2], -r2, lsl #8
    1e44:	00030501 	andeq	r0, r3, r1, lsl #10
    1e48:	06020402 	streq	r0, [r2], -r2, lsl #8
    1e4c:	000d054b 	andeq	r0, sp, fp, asr #10
    1e50:	06020402 	streq	r0, [r2], -r2, lsl #8
    1e54:	00060501 	andeq	r0, r6, r1, lsl #10
    1e58:	3c020402 	cfstrscc	mvf0, [r2], {2}
    1e5c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1e60:	35060204 	strcc	r0, [r6, #-516]	; 0xfffffdfc
    1e64:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    1e68:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    1e6c:	04020001 	streq	r0, [r2], #-1
    1e70:	00130602 	andseq	r0, r3, r2, lsl #12
    1e74:	20020402 	andcs	r0, r2, r2, lsl #8
    1e78:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    1e7c:	6e030104 	adfvss	f0, f3, f4
    1e80:	00050520 	andeq	r0, r5, r0, lsr #10
    1e84:	06010402 	streq	r0, [r1], -r2, lsl #8
    1e88:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    1e8c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    1e90:	00010104 	andeq	r0, r1, r4, lsl #2
    1e94:	01010402 	tsteq	r1, r2, lsl #8
    1e98:	1f050204 	svcne	0x00050204
    1e9c:	01040200 	mrseq	r0, R12_usr
    1ea0:	20789803 	rsbscs	r9, r8, r3, lsl #16
    1ea4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1ea8:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    1eac:	04020004 	streq	r0, [r2], #-4
    1eb0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1eb4:	2e060104 	adfcss	f0, f6, f4
    1eb8:	01040200 	mrseq	r0, R12_usr
    1ebc:	02002f06 	andeq	r2, r0, #6, 30
    1ec0:	01060104 	tsteq	r6, r4, lsl #2
    1ec4:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    1ec8:	01040200 	mrseq	r0, R12_usr
    1ecc:	0107e303 	tsteq	r7, r3, lsl #6
    1ed0:	01040200 	mrseq	r0, R12_usr
    1ed4:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    1ed8:	02001f05 	andeq	r1, r0, #5, 30
    1edc:	cb030104 	blgt	c22f4 <_Min_Heap_Size+0xc1af4>
    1ee0:	04050178 	streq	r0, [r5], #-376	; 0xfffffe88
    1ee4:	01040200 	mrseq	r0, R12_usr
    1ee8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1eec:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    1ef0:	20060104 	andcs	r0, r6, r4, lsl #2
    1ef4:	01040200 	mrseq	r0, R12_usr
    1ef8:	02002f06 	andeq	r2, r0, #6, 30
    1efc:	01060104 	tsteq	r6, r4, lsl #2
    1f00:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    1f04:	01040200 	mrseq	r0, R12_usr
    1f08:	0107b003 	tsteq	r7, r3
    1f0c:	01040200 	mrseq	r0, R12_usr
    1f10:	0032053c 	eorseq	r0, r2, ip, lsr r5
    1f14:	16010402 	strne	r0, [r1], -r2, lsl #8
    1f18:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1f1c:	31060104 	tstcc	r6, r4, lsl #2
    1f20:	01040200 	mrseq	r0, R12_usr
    1f24:	04020001 	streq	r0, [r2], #-1
    1f28:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    1f2c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    1f30:	001f0502 	andseq	r0, pc, r2, lsl #10
    1f34:	03010402 	movweq	r0, #5122	; 0x1402
    1f38:	05207891 	streq	r7, [r0, #-2193]!	; 0xfffff76f
    1f3c:	04020005 	streq	r0, [r2], #-5
    1f40:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    1f44:	01040200 	mrseq	r0, R12_usr
    1f48:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1f4c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1f50:	06010402 	streq	r0, [r1], -r2, lsl #8
    1f54:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1f58:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    1f5c:	00050501 	andeq	r0, r5, r1, lsl #10
    1f60:	03010402 	movweq	r0, #5122	; 0x1402
    1f64:	000107ea 	andeq	r0, r1, sl, ror #15
    1f68:	06010402 	streq	r0, [r1], -r2, lsl #8
    1f6c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    1f70:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    1f74:	78c40301 	stmiavc	r4, {r0, r8, r9}^
    1f78:	00040501 	andeq	r0, r4, r1, lsl #10
    1f7c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1f80:	01040200 	mrseq	r0, R12_usr
    1f84:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1f88:	00200601 	eoreq	r0, r0, r1, lsl #12
    1f8c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1f90:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1f94:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    1f98:	00050501 	andeq	r0, r5, r1, lsl #10
    1f9c:	03010402 	movweq	r0, #5122	; 0x1402
    1fa0:	000107b7 			; <UNDEFINED> instruction: 0x000107b7
    1fa4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1fa8:	01040200 	mrseq	r0, R12_usr
    1fac:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    1fb0:	00130104 	andseq	r0, r3, r4, lsl #2
    1fb4:	01010402 	tsteq	r1, r2, lsl #8
    1fb8:	01040200 	mrseq	r0, R12_usr
    1fbc:	04020001 	streq	r0, [r2], #-1
    1fc0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    1fc4:	02001f05 	andeq	r1, r0, #5, 30
    1fc8:	90030104 	andls	r0, r3, r4, lsl #2
    1fcc:	05052078 	streq	r2, [r5, #-120]	; 0xffffff88
    1fd0:	01040200 	mrseq	r0, R12_usr
    1fd4:	00040514 	andeq	r0, r4, r4, lsl r5
    1fd8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    1fdc:	01040200 	mrseq	r0, R12_usr
    1fe0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    1fe4:	2f060104 	svccs	0x00060104
    1fe8:	01040200 	mrseq	r0, R12_usr
    1fec:	01040106 	tsteq	r4, r6, lsl #2
    1ff0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    1ff4:	eb030104 	bl	c240c <_Min_Heap_Size+0xc1c0c>
    1ff8:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    1ffc:	2e060104 	adfcss	f0, f6, f4
    2000:	1f050204 	svcne	0x00050204
    2004:	01040200 	mrseq	r0, R12_usr
    2008:	0178c303 	cmneq	r8, r3, lsl #6
    200c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2010:	00140104 	andseq	r0, r4, r4, lsl #2
    2014:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2018:	01040200 	mrseq	r0, R12_usr
    201c:	02002006 	andeq	r2, r0, #6
    2020:	2f060104 	svccs	0x00060104
    2024:	01040200 	mrseq	r0, R12_usr
    2028:	01040106 	tsteq	r4, r6, lsl #2
    202c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2030:	b8030104 	stmdalt	r3, {r2, r8}
    2034:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    2038:	002e0104 	eoreq	r0, lr, r4, lsl #2
    203c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2040:	04020001 	streq	r0, [r2], #-1
    2044:	02001501 	andeq	r1, r0, #4194304	; 0x400000
    2048:	00010104 	andeq	r0, r1, r4, lsl #2
    204c:	01010402 	tsteq	r1, r2, lsl #8
    2050:	01040200 	mrseq	r0, R12_usr
    2054:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2058:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    205c:	788d0301 	stmvc	sp, {r0, r8, r9}
    2060:	00050520 	andeq	r0, r5, r0, lsr #10
    2064:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2068:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    206c:	00140104 	andseq	r0, r4, r4, lsl #2
    2070:	06010402 	streq	r0, [r1], -r2, lsl #8
    2074:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2078:	002f0601 	eoreq	r0, pc, r1, lsl #12
    207c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2080:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2084:	04020005 	streq	r0, [r2], #-5
    2088:	07ee0301 	strbeq	r0, [lr, r1, lsl #6]!
    208c:	04020001 	streq	r0, [r2], #-1
    2090:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2094:	001f0502 	andseq	r0, pc, r2, lsl #10
    2098:	03010402 	movweq	r0, #5122	; 0x1402
    209c:	050178c0 	streq	r7, [r1, #-2240]	; 0xfffff740
    20a0:	04020004 	streq	r0, [r2], #-4
    20a4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    20a8:	00140104 	andseq	r0, r4, r4, lsl #2
    20ac:	06010402 	streq	r0, [r1], -r2, lsl #8
    20b0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    20b4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    20b8:	06010402 	streq	r0, [r1], -r2, lsl #8
    20bc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    20c0:	04020005 	streq	r0, [r2], #-5
    20c4:	07bb0301 	ldreq	r0, [fp, r1, lsl #6]!
    20c8:	00030201 	andeq	r0, r3, r1, lsl #4
    20cc:	01050101 	tsteq	r5, r1, lsl #2
    20d0:	00020500 	andeq	r0, r2, r0, lsl #10
    20d4:	03000000 	movweq	r0, #0
    20d8:	05010bdb 	streq	r0, [r1, #-3035]	; 0xfffff425
    20dc:	0c051403 	cfstrseq	mvf1, [r5], {3}
    20e0:	06050106 	streq	r0, [r5], -r6, lsl #2
    20e4:	0005053c 	andeq	r0, r5, ip, lsr r5
    20e8:	06020402 	streq	r0, [r2], -r2, lsl #8
    20ec:	00030531 	andeq	r0, r3, r1, lsr r5
    20f0:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    20f4:	02000c05 	andeq	r0, r0, #1280	; 0x500
    20f8:	01060204 	tsteq	r6, r4, lsl #4
    20fc:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    2100:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
    2104:	0d030605 	stceq	6, cr0, [r3, #-20]	; 0xffffffec
    2108:	1503052e 	strne	r0, [r3, #-1326]	; 0xfffffad2
    210c:	13060105 	movwne	r0, #24837	; 0x6105
    2110:	00050520 	andeq	r0, r5, r0, lsr #10
    2114:	06010402 	streq	r0, [r1], -r2, lsl #8
    2118:	00206c03 	eoreq	r6, r0, r3, lsl #24
    211c:	01010402 	tsteq	r1, r2, lsl #8
    2120:	01040200 	mrseq	r0, R12_usr
    2124:	04020001 	streq	r0, [r2], #-1
    2128:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    212c:	02001f05 	andeq	r1, r0, #5, 30
    2130:	fb030104 	blx	c254a <_Min_Heap_Size+0xc1d4a>
    2134:	05052077 	streq	r2, [r5, #-119]	; 0xffffff89
    2138:	01040200 	mrseq	r0, R12_usr
    213c:	00040514 	andeq	r0, r4, r4, lsl r5
    2140:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2144:	01040200 	mrseq	r0, R12_usr
    2148:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    214c:	2f060104 	svccs	0x00060104
    2150:	01040200 	mrseq	r0, R12_usr
    2154:	01040106 	tsteq	r4, r6, lsl #2
    2158:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    215c:	80030104 	andhi	r0, r3, r4, lsl #2
    2160:	02000108 	andeq	r0, r0, #8, 2
    2164:	2e060104 	adfcss	f0, f6, f4
    2168:	1f050204 	svcne	0x00050204
    216c:	01040200 	mrseq	r0, R12_usr
    2170:	0178ae03 	cmneq	r8, r3, lsl #28
    2174:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2178:	00140104 	andseq	r0, r4, r4, lsl #2
    217c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2180:	01040200 	mrseq	r0, R12_usr
    2184:	02002006 	andeq	r2, r0, #6
    2188:	2f060104 	svccs	0x00060104
    218c:	01040200 	mrseq	r0, R12_usr
    2190:	01040106 	tsteq	r4, r6, lsl #2
    2194:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2198:	cd030104 	stfgts	f0, [r3, #-16]
    219c:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    21a0:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    21a4:	05050d01 	streq	r0, [r5, #-3329]	; 0xfffff2ff
    21a8:	200b0306 	andcs	r0, fp, r6, lsl #6
    21ac:	2e3c2e01 	cdpcs	14, 3, cr2, cr12, cr1, {0}
    21b0:	14051520 	strne	r1, [r5], #-1312	; 0xfffffae0
    21b4:	08050106 	stmdaeq	r5, {r1, r2, r8}
    21b8:	00070520 	andeq	r0, r7, r0, lsr #10
    21bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    21c0:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
    21c4:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    21c8:	00010104 	andeq	r0, r1, r4, lsl #2
    21cc:	01010402 	tsteq	r1, r2, lsl #8
    21d0:	1f050204 	svcne	0x00050204
    21d4:	01040200 	mrseq	r0, R12_usr
    21d8:	2077f003 	rsbscs	pc, r7, r3
    21dc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    21e0:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    21e4:	04020004 	streq	r0, [r2], #-4
    21e8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    21ec:	2e060104 	adfcss	f0, f6, f4
    21f0:	01040200 	mrseq	r0, R12_usr
    21f4:	02002f06 	andeq	r2, r0, #6, 30
    21f8:	01060104 	tsteq	r6, r4, lsl #2
    21fc:	07050104 	streq	r0, [r5, -r4, lsl #2]
    2200:	01040200 	mrseq	r0, R12_usr
    2204:	01088b03 	tsteq	r8, r3, lsl #22
    2208:	01040200 	mrseq	r0, R12_usr
    220c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2210:	02001f05 	andeq	r1, r0, #5, 30
    2214:	a3030104 	movwge	r0, #12548	; 0x3104
    2218:	04050178 	streq	r0, [r5], #-376	; 0xfffffe88
    221c:	01040200 	mrseq	r0, R12_usr
    2220:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2224:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2228:	20060104 	andcs	r0, r6, r4, lsl #2
    222c:	01040200 	mrseq	r0, R12_usr
    2230:	02002f06 	andeq	r2, r0, #6, 30
    2234:	01060104 	tsteq	r6, r4, lsl #2
    2238:	07050104 	streq	r0, [r5, -r4, lsl #2]
    223c:	01040200 	mrseq	r0, R12_usr
    2240:	0107d803 	tsteq	r7, r3, lsl #16
    2244:	01040200 	mrseq	r0, R12_usr
    2248:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    224c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2250:	04020005 	streq	r0, [r2], #-5
    2254:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2258:	00010104 	andeq	r0, r1, r4, lsl #2
    225c:	01010402 	tsteq	r1, r2, lsl #8
    2260:	01040200 	mrseq	r0, R12_usr
    2264:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2268:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    226c:	77ee0301 	strbvc	r0, [lr, r1, lsl #6]!
    2270:	00050520 	andeq	r0, r5, r0, lsr #10
    2274:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2278:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    227c:	00140104 	andseq	r0, r4, r4, lsl #2
    2280:	06010402 	streq	r0, [r1], -r2, lsl #8
    2284:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2288:	002f0601 	eoreq	r0, pc, r1, lsl #12
    228c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2290:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2294:	04020005 	streq	r0, [r2], #-5
    2298:	088d0301 	stmeq	sp, {r0, r8, r9}
    229c:	04020001 	streq	r0, [r2], #-1
    22a0:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    22a4:	001f0502 	andseq	r0, pc, r2, lsl #10
    22a8:	03010402 	movweq	r0, #5122	; 0x1402
    22ac:	050178a1 	streq	r7, [r1, #-2209]	; 0xfffff75f
    22b0:	04020004 	streq	r0, [r2], #-4
    22b4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    22b8:	00140104 	andseq	r0, r4, r4, lsl #2
    22bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    22c0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    22c4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    22c8:	06010402 	streq	r0, [r1], -r2, lsl #8
    22cc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    22d0:	04020005 	streq	r0, [r2], #-5
    22d4:	07da0301 	ldrbeq	r0, [sl, r1, lsl #6]
    22d8:	04020001 	streq	r0, [r2], #-1
    22dc:	02002e01 	andeq	r2, r0, #1, 28
    22e0:	01060104 	tsteq	r6, r4, lsl #2
    22e4:	01040200 	mrseq	r0, R12_usr
    22e8:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    22ec:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    22f0:	00010104 	andeq	r0, r1, r4, lsl #2
    22f4:	01010402 	tsteq	r1, r2, lsl #8
    22f8:	1f050204 	svcne	0x00050204
    22fc:	01040200 	mrseq	r0, R12_usr
    2300:	2077eb03 	rsbscs	lr, r7, r3, lsl #22
    2304:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2308:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    230c:	04020004 	streq	r0, [r2], #-4
    2310:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2314:	2e060104 	adfcss	f0, f6, f4
    2318:	01040200 	mrseq	r0, R12_usr
    231c:	02002f06 	andeq	r2, r0, #6, 30
    2320:	01060104 	tsteq	r6, r4, lsl #2
    2324:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2328:	01040200 	mrseq	r0, R12_usr
    232c:	01089003 	tsteq	r8, r3
    2330:	01040200 	mrseq	r0, R12_usr
    2334:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2338:	02001f05 	andeq	r1, r0, #5, 30
    233c:	9e030104 	adflss	f0, f3, f4
    2340:	04050178 	streq	r0, [r5], #-376	; 0xfffffe88
    2344:	01040200 	mrseq	r0, R12_usr
    2348:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    234c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2350:	20060104 	andcs	r0, r6, r4, lsl #2
    2354:	01040200 	mrseq	r0, R12_usr
    2358:	02002f06 	andeq	r2, r0, #6, 30
    235c:	01060104 	tsteq	r6, r4, lsl #2
    2360:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2364:	01040200 	mrseq	r0, R12_usr
    2368:	0107dd03 	tsteq	r7, r3, lsl #26
    236c:	02040200 	andeq	r0, r4, #0, 4
    2370:	03052e06 	movweq	r2, #24070	; 0x5e06
    2374:	02040200 	andeq	r0, r4, #0, 4
    2378:	00010515 	andeq	r0, r1, r5, lsl r5
    237c:	06020402 	streq	r0, [r2], -r2, lsl #8
    2380:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    2384:	02022002 	andeq	r2, r2, #2
    2388:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    238c:	02050001 	andeq	r0, r5, #1
    2390:	00000000 	andeq	r0, r0, r0
    2394:	010bfd03 	tsteq	fp, r3, lsl #26	; <UNPREDICTABLE>
    2398:	03050106 	movweq	r0, #20742	; 0x5106
    239c:	051a2f06 	ldreq	r2, [sl, #-3846]	; 0xfffff0fa
    23a0:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    23a4:	052f0603 	streq	r0, [pc, #-1539]!	; 1da9 <_Min_Heap_Size+0x15a9>
    23a8:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    23ac:	03053c06 	movweq	r3, #23558	; 0x5c06
    23b0:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    23b4:	01061005 	tsteq	r6, r5
    23b8:	4b060305 	blmi	182fd4 <_Min_Heap_Size+0x1827d4>
    23bc:	01060d05 	tsteq	r6, r5, lsl #26
    23c0:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    23c4:	0c030603 	stceq	6, cr0, [r3], {3}
    23c8:	0601052e 	streq	r0, [r1], -lr, lsr #10
    23cc:	31052e13 	tstcc	r5, r3, lsl lr
    23d0:	01040200 	mrseq	r0, R12_usr
    23d4:	052e6503 	streq	r6, [lr, #-1283]!	; 0xfffffafd
    23d8:	04020005 	streq	r0, [r2], #-5
    23dc:	00300601 	eorseq	r0, r0, r1, lsl #12
    23e0:	01010402 	tsteq	r1, r2, lsl #8
    23e4:	01040200 	mrseq	r0, R12_usr
    23e8:	04020001 	streq	r0, [r2], #-1
    23ec:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    23f0:	02001f05 	andeq	r1, r0, #5, 30
    23f4:	d2030104 	andle	r0, r3, #4, 2
    23f8:	05052077 	streq	r2, [r5, #-119]	; 0xffffff89
    23fc:	01040200 	mrseq	r0, R12_usr
    2400:	00040514 	andeq	r0, r4, r4, lsl r5
    2404:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2408:	01040200 	mrseq	r0, R12_usr
    240c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2410:	2f060104 	svccs	0x00060104
    2414:	01040200 	mrseq	r0, R12_usr
    2418:	01040106 	tsteq	r4, r6, lsl #2
    241c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2420:	a9030104 	stmdbge	r3, {r2, r8}
    2424:	02000108 	andeq	r0, r0, #8, 2
    2428:	2e060104 	adfcss	f0, f6, f4
    242c:	1f050204 	svcne	0x00050204
    2430:	01040200 	mrseq	r0, R12_usr
    2434:	01788503 	cmneq	r8, r3, lsl #10
    2438:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    243c:	00140104 	andseq	r0, r4, r4, lsl #2
    2440:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2444:	01040200 	mrseq	r0, R12_usr
    2448:	02002006 	andeq	r2, r0, #6
    244c:	2f060104 	svccs	0x00060104
    2450:	01040200 	mrseq	r0, R12_usr
    2454:	01040106 	tsteq	r4, r6, lsl #2
    2458:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    245c:	f6030104 			; <UNDEFINED> instruction: 0xf6030104
    2460:	02000107 	andeq	r0, r0, #-1073741823	; 0xc0000001
    2464:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    2468:	02040200 	andeq	r0, r4, #0, 4
    246c:	000e0515 	andeq	r0, lr, r5, lsl r5
    2470:	06020402 	streq	r0, [r2], -r2, lsl #8
    2474:	00080501 	andeq	r0, r8, r1, lsl #10
    2478:	20020402 	andcs	r0, r2, r2, lsl #8
    247c:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    2480:	05300505 	ldreq	r0, [r0, #-1285]!	; 0xfffffafb
    2484:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
    2488:	054f0601 	strbeq	r0, [pc, #-1537]	; 1e8f <_Min_Heap_Size+0x168f>
    248c:	04020005 	streq	r0, [r2], #-5
    2490:	00300601 	eorseq	r0, r0, r1, lsl #12
    2494:	01010402 	tsteq	r1, r2, lsl #8
    2498:	01040200 	mrseq	r0, R12_usr
    249c:	04020001 	streq	r0, [r2], #-1
    24a0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    24a4:	02001f05 	andeq	r1, r0, #5, 30
    24a8:	c4030104 	strgt	r0, [r3], #-260	; 0xfffffefc
    24ac:	05052077 	streq	r2, [r5, #-119]	; 0xffffff89
    24b0:	01040200 	mrseq	r0, R12_usr
    24b4:	00040514 	andeq	r0, r4, r4, lsl r5
    24b8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    24bc:	01040200 	mrseq	r0, R12_usr
    24c0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    24c4:	2f060104 	svccs	0x00060104
    24c8:	01040200 	mrseq	r0, R12_usr
    24cc:	01040106 	tsteq	r4, r6, lsl #2
    24d0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    24d4:	b7030104 	strlt	r0, [r3, -r4, lsl #2]
    24d8:	02000108 	andeq	r0, r0, #8, 2
    24dc:	2e060104 	adfcss	f0, f6, f4
    24e0:	1f050204 	svcne	0x00050204
    24e4:	01040200 	mrseq	r0, R12_usr
    24e8:	0177f703 	cmneq	r7, r3, lsl #14	; <UNPREDICTABLE>
    24ec:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    24f0:	00140104 	andseq	r0, r4, r4, lsl #2
    24f4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    24f8:	01040200 	mrseq	r0, R12_usr
    24fc:	02002006 	andeq	r2, r0, #6
    2500:	2f060104 	svccs	0x00060104
    2504:	01040200 	mrseq	r0, R12_usr
    2508:	01040106 	tsteq	r4, r6, lsl #2
    250c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2510:	84030104 	strhi	r0, [r3], #-260	; 0xfffffefc
    2514:	02000108 	andeq	r0, r0, #8, 2
    2518:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    251c:	02040200 	andeq	r0, r4, #0, 4
    2520:	000e0515 	andeq	r0, lr, r5, lsl r5
    2524:	06020402 	streq	r0, [r2], -r2, lsl #8
    2528:	00080501 	andeq	r0, r8, r1, lsl #10
    252c:	20020402 	andcs	r0, r2, r2, lsl #8
    2530:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    2534:	02300505 	eorseq	r0, r0, #20971520	; 0x1400000
    2538:	01010004 	tsteq	r1, r4
    253c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2540:	00000002 	andeq	r0, r0, r2
    2544:	0cb50300 	ldceq	3, cr0, [r5]
    2548:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    254c:	13590603 	cmpne	r9, #3145728	; 0x300000
    2550:	0c051513 	cfstr32eq	mvfx1, [r5], {19}
    2554:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    2558:	05052006 	streq	r2, [r5, #-6]
    255c:	08055a06 	stmdaeq	r5, {r1, r2, r9, fp, ip, lr}
    2560:	19050106 	stmdbne	r5, {r1, r2, r8}
    2564:	01040200 	mrseq	r0, R12_usr
    2568:	220f052e 	andcs	r0, pc, #192937984	; 0xb800000
    256c:	06050520 	streq	r0, [r5], -r0, lsr #10
    2570:	06160523 	ldreq	r0, [r6], -r3, lsr #10
    2574:	06050501 	streq	r0, [r5], -r1, lsl #10
    2578:	0614052f 	ldreq	r0, [r4], -pc, lsr #10
    257c:	05052001 	streq	r2, [r5, #-1]
    2580:	1a052f06 	bne	14e1a0 <_Min_Heap_Size+0x14d9a0>
    2584:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2588:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    258c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2590:	11052306 	tstne	r5, r6, lsl #6
    2594:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    2598:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    259c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    25a0:	052f0605 	streq	r0, [pc, #-1541]!	; 1fa3 <_Min_Heap_Size+0x17a3>
    25a4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    25a8:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    25ac:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    25b0:	13052008 	movwne	r2, #20488	; 0x5008
    25b4:	06050544 	streq	r0, [r5], -r4, asr #10
    25b8:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    25bc:	06050501 	streq	r0, [r5], -r1, lsl #10
    25c0:	060b0531 			; <UNDEFINED> instruction: 0x060b0531
    25c4:	00470501 	subeq	r0, r7, r1, lsl #10
    25c8:	03010402 	movweq	r0, #5122	; 0x1402
    25cc:	38052071 	stmdacc	r5, {r0, r4, r5, r6, sp}
    25d0:	01040200 	mrseq	r0, R12_usr
    25d4:	28130520 	ldmdacs	r3, {r5, r8, sl}
    25d8:	05201f37 	streq	r1, [r0, #-3895]!	; 0xfffff0c9
    25dc:	1903060b 	stmdbne	r3, {r0, r1, r3, r9, sl}
    25e0:	061e0520 	ldreq	r0, [lr], -r0, lsr #10
    25e4:	060b0501 	streq	r0, [fp], -r1, lsl #10
    25e8:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    25ec:	060b0501 	streq	r0, [fp], -r1, lsl #10
    25f0:	0612053e 			; <UNDEFINED> instruction: 0x0612053e
    25f4:	060b0501 	streq	r0, [fp], -r1, lsl #10
    25f8:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    25fc:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    2600:	1805201a 	stmdane	r5, {r1, r3, r4, sp}
    2604:	060b052e 	streq	r0, [fp], -lr, lsr #10
    2608:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    260c:	0526060d 	streq	r0, [r6, #-1549]!	; 0xfffff9f3
    2610:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    2614:	0b052019 	bleq	14a680 <_Min_Heap_Size+0x149e80>
    2618:	15052706 	strne	r2, [r5, #-1798]	; 0xfffff8fa
    261c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2620:	10052306 	andne	r2, r5, r6, lsl #6
    2624:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2628:	0e053d06 	cdpeq	13, 0, cr3, cr5, cr6, {0}
    262c:	1b050106 	blne	142a4c <_Min_Heap_Size+0x14224c>
    2630:	0607052e 	streq	r0, [r7], -lr, lsr #10
    2634:	060a0540 	streq	r0, [sl], -r0, asr #10
    2638:	060b0501 	streq	r0, [fp], -r1, lsl #10
    263c:	053c5203 	ldreq	r5, [ip, #-515]!	; 0xfffffdfd
    2640:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    2644:	07052e0b 	streq	r2, [r5, -fp, lsl #28]
    2648:	0b053106 	bleq	14ea68 <_Min_Heap_Size+0x14e268>
    264c:	0a050106 	beq	142a6c <_Min_Heap_Size+0x14226c>
    2650:	0609052e 	streq	r0, [r9], -lr, lsr #10
    2654:	2e2e013f 	mcrcs	1, 1, r0, cr14, cr15, {1}
    2658:	0516202e 	ldreq	r2, [r6, #-46]	; 0xffffffd2
    265c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    2660:	0705200c 	streq	r2, [r5, -ip]
    2664:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    2668:	01060b05 	tsteq	r6, r5, lsl #22
    266c:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    2670:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    2674:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    2678:	0535060b 	ldreq	r0, [r5, #-1547]!	; 0xfffff9f5
    267c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    2680:	3e05200e 	cdpcc	0, 0, cr2, cr5, cr14, {0}
    2684:	01040200 	mrseq	r0, R12_usr
    2688:	0180053c 	orreq	r0, r0, ip, lsr r5
    268c:	02040200 	andeq	r0, r4, #0, 4
    2690:	00710520 	rsbseq	r0, r1, r0, lsr #10
    2694:	20020402 	andcs	r0, r2, r2, lsl #8
    2698:	34060d05 	strcc	r0, [r6], #-3333	; 0xfffff2fb
    269c:	01063405 	tsteq	r6, r5, lsl #8
    26a0:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    26a4:	09052e19 	stmdbeq	r5, {r0, r3, r4, r9, sl, fp, sp}
    26a8:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    26ac:	01060f05 	tsteq	r6, r5, lsl #30
    26b0:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    26b4:	35052e0c 	strcc	r2, [r5, #-3596]	; 0xfffff1f4
    26b8:	01040200 	mrseq	r0, R12_usr
    26bc:	060b052e 	streq	r0, [fp], -lr, lsr #10
    26c0:	061a0530 			; <UNDEFINED> instruction: 0x061a0530
    26c4:	060b0501 	streq	r0, [fp], -r1, lsl #10
    26c8:	0612053e 			; <UNDEFINED> instruction: 0x0612053e
    26cc:	06050501 	streq	r0, [r5], -r1, lsl #10
    26d0:	06130534 			; <UNDEFINED> instruction: 0x06130534
    26d4:	20270501 	eorcs	r0, r7, r1, lsl #10
    26d8:	052e2005 	streq	r2, [lr, #-5]!
    26dc:	0505200c 	streq	r2, [r5, #-12]
    26e0:	14052206 	strne	r2, [r5], #-518	; 0xfffffdfa
    26e4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    26e8:	0c053e06 	stceq	14, cr3, [r5], {6}
    26ec:	05320106 	ldreq	r0, [r2, #-262]!	; 0xfffffefa
    26f0:	0f052201 	svceq	0x00052201
    26f4:	3c7f9e03 	ldclcc	14, cr9, [pc], #-12	; 26f0 <_Min_Heap_Size+0x1ef0>
    26f8:	00010220 	andeq	r0, r1, r0, lsr #4
    26fc:	01050101 	tsteq	r5, r1, lsl #2
    2700:	00020500 	andeq	r0, r2, r0, lsl #10
    2704:	03000000 	movweq	r0, #0
    2708:	05010eb1 	streq	r0, [r1, #-3761]	; 0xfffff14f
    270c:	0f051403 	svceq	0x00051403
    2710:	01050106 	tsteq	r5, r6, lsl #2
    2714:	00010221 	andeq	r0, r1, r1, lsr #4
    2718:	01050101 	tsteq	r5, r1, lsl #2
    271c:	00020500 	andeq	r0, r2, r0, lsl #10
    2720:	03000000 	movweq	r0, #0
    2724:	06010ec3 	streq	r0, [r1], -r3, asr #29
    2728:	00030501 	andeq	r0, r3, r1, lsl #10
    272c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2730:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    2734:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2738:	00010104 	andeq	r0, r1, r4, lsl #2
    273c:	01010402 	tsteq	r1, r2, lsl #8
    2740:	1f050204 	svcne	0x00050204
    2744:	01040200 	mrseq	r0, R12_usr
    2748:	20759603 	rsbscs	r9, r5, r3, lsl #12
    274c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2750:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2754:	04020004 	streq	r0, [r2], #-4
    2758:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    275c:	2e060104 	adfcss	f0, f6, f4
    2760:	01040200 	mrseq	r0, R12_usr
    2764:	02002f06 	andeq	r2, r0, #6, 30
    2768:	01060104 	tsteq	r6, r4, lsl #2
    276c:	03050104 	movweq	r0, #20740	; 0x5104
    2770:	01040200 	mrseq	r0, R12_usr
    2774:	010ae503 	tsteq	sl, r3, lsl #10
    2778:	01040200 	mrseq	r0, R12_usr
    277c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2780:	02001f05 	andeq	r1, r0, #5, 30
    2784:	c9030104 	stmdbgt	r3, {r2, r8}
    2788:	04050175 	streq	r0, [r5], #-373	; 0xfffffe8b
    278c:	01040200 	mrseq	r0, R12_usr
    2790:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2794:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2798:	20060104 	andcs	r0, r6, r4, lsl #2
    279c:	01040200 	mrseq	r0, R12_usr
    27a0:	02002f06 	andeq	r2, r0, #6, 30
    27a4:	01060104 	tsteq	r6, r4, lsl #2
    27a8:	03050104 	movweq	r0, #20740	; 0x5104
    27ac:	01040200 	mrseq	r0, R12_usr
    27b0:	010ab203 	tsteq	sl, r3, lsl #4
    27b4:	01040200 	mrseq	r0, R12_usr
    27b8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    27bc:	00010601 	andeq	r0, r1, r1, lsl #12
    27c0:	13010402 	movwne	r0, #5122	; 0x1402
    27c4:	01040200 	mrseq	r0, R12_usr
    27c8:	04020001 	streq	r0, [r2], #-1
    27cc:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    27d0:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    27d4:	001f0502 	andseq	r0, pc, r2, lsl #10
    27d8:	03010402 	movweq	r0, #5122	; 0x1402
    27dc:	05207595 	streq	r7, [r0, #-1429]!	; 0xfffffa6b
    27e0:	04020005 	streq	r0, [r2], #-5
    27e4:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    27e8:	01040200 	mrseq	r0, R12_usr
    27ec:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    27f0:	002e0601 	eoreq	r0, lr, r1, lsl #12
    27f4:	06010402 	streq	r0, [r1], -r2, lsl #8
    27f8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    27fc:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2800:	00030501 	andeq	r0, r3, r1, lsl #10
    2804:	03010402 	movweq	r0, #5122	; 0x1402
    2808:	00010ae6 	andeq	r0, r1, r6, ror #21
    280c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2810:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2814:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2818:	75c80301 	strbvc	r0, [r8, #769]	; 0x301
    281c:	00040501 	andeq	r0, r4, r1, lsl #10
    2820:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2824:	01040200 	mrseq	r0, R12_usr
    2828:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    282c:	00200601 	eoreq	r0, r0, r1, lsl #12
    2830:	06010402 	streq	r0, [r1], -r2, lsl #8
    2834:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2838:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    283c:	00030501 	andeq	r0, r3, r1, lsl #10
    2840:	03010402 	movweq	r0, #5122	; 0x1402
    2844:	00010ab3 			; <UNDEFINED> instruction: 0x00010ab3
    2848:	06020402 	streq	r0, [r2], -r2, lsl #8
    284c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2850:	0c051502 	cfstr32eq	mvfx1, [r5], {2}
    2854:	02040200 	andeq	r0, r4, #0, 4
    2858:	06050106 	streq	r0, [r5], -r6, lsl #2
    285c:	02040200 	andeq	r0, r4, #0, 4
    2860:	00050520 	andeq	r0, r5, r0, lsr #10
    2864:	06020402 	streq	r0, [r2], -r2, lsl #8
    2868:	00030530 	andeq	r0, r3, r0, lsr r5
    286c:	16020402 	strne	r0, [r2], -r2, lsl #8
    2870:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    2874:	01060204 	tsteq	r6, r4, lsl #4
    2878:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    287c:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    2880:	04020005 	streq	r0, [r2], #-5
    2884:	003e0601 	eorseq	r0, lr, r1, lsl #12
    2888:	01010402 	tsteq	r1, r2, lsl #8
    288c:	01040200 	mrseq	r0, R12_usr
    2890:	04020001 	streq	r0, [r2], #-1
    2894:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    2898:	02001f05 	andeq	r1, r0, #5, 30
    289c:	8a030104 	bhi	c2cb4 <_Min_Heap_Size+0xc24b4>
    28a0:	05052075 	streq	r2, [r5, #-117]	; 0xffffff8b
    28a4:	01040200 	mrseq	r0, R12_usr
    28a8:	00040514 	andeq	r0, r4, r4, lsl r5
    28ac:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    28b0:	01040200 	mrseq	r0, R12_usr
    28b4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    28b8:	2f060104 	svccs	0x00060104
    28bc:	01040200 	mrseq	r0, R12_usr
    28c0:	01040106 	tsteq	r4, r6, lsl #2
    28c4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    28c8:	f1030104 			; <UNDEFINED> instruction: 0xf1030104
    28cc:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    28d0:	2e060104 	adfcss	f0, f6, f4
    28d4:	1f050204 	svcne	0x00050204
    28d8:	01040200 	mrseq	r0, R12_usr
    28dc:	0175bd03 	cmneq	r5, r3, lsl #26
    28e0:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    28e4:	00140104 	andseq	r0, r4, r4, lsl #2
    28e8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    28ec:	01040200 	mrseq	r0, R12_usr
    28f0:	02002006 	andeq	r2, r0, #6
    28f4:	2f060104 	svccs	0x00060104
    28f8:	01040200 	mrseq	r0, R12_usr
    28fc:	01040106 	tsteq	r4, r6, lsl #2
    2900:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2904:	be030104 	adflts	f0, f3, f4
    2908:	0200010a 	andeq	r0, r0, #-2147483646	; 0x80000002
    290c:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    2910:	02040200 	andeq	r0, r4, #0, 4
    2914:	000e0515 	andeq	r0, lr, r5, lsl r5
    2918:	06020402 	streq	r0, [r2], -r2, lsl #8
    291c:	00080501 	andeq	r0, r8, r1, lsl #10
    2920:	20020402 	andcs	r0, r2, r2, lsl #8
    2924:	24060705 	strcs	r0, [r6], #-1797	; 0xfffff8fb
    2928:	01062805 	tsteq	r6, r5, lsl #16
    292c:	30060705 	andcc	r0, r6, r5, lsl #14
    2930:	01060b05 	tsteq	r6, r5, lsl #22
    2934:	2e0a0520 	cfsh32cs	mvfx0, mvfx10, #16
    2938:	03060305 	movweq	r0, #25349	; 0x6305
    293c:	0705200e 	streq	r2, [r5, -lr]
    2940:	06050106 	streq	r0, [r5], -r6, lsl #2
    2944:	0005052e 	andeq	r0, r5, lr, lsr #10
    2948:	06010402 	streq	r0, [r1], -r2, lsl #8
    294c:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    2950:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2954:	00010104 	andeq	r0, r1, r4, lsl #2
    2958:	01010402 	tsteq	r1, r2, lsl #8
    295c:	1f050204 	svcne	0x00050204
    2960:	01040200 	mrseq	r0, R12_usr
    2964:	2074f103 	rsbscs	pc, r4, r3, lsl #2
    2968:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    296c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2970:	04020004 	streq	r0, [r2], #-4
    2974:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2978:	2e060104 	adfcss	f0, f6, f4
    297c:	01040200 	mrseq	r0, R12_usr
    2980:	02002f06 	andeq	r2, r0, #6, 30
    2984:	01060104 	tsteq	r6, r4, lsl #2
    2988:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    298c:	01040200 	mrseq	r0, R12_usr
    2990:	010b8a03 	tsteq	fp, r3, lsl #20
    2994:	01040200 	mrseq	r0, R12_usr
    2998:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    299c:	02001f05 	andeq	r1, r0, #5, 30
    29a0:	a4030104 	strge	r0, [r3], #-260	; 0xfffffefc
    29a4:	04050175 	streq	r0, [r5], #-373	; 0xfffffe8b
    29a8:	01040200 	mrseq	r0, R12_usr
    29ac:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    29b0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    29b4:	20060104 	andcs	r0, r6, r4, lsl #2
    29b8:	01040200 	mrseq	r0, R12_usr
    29bc:	02002f06 	andeq	r2, r0, #6, 30
    29c0:	01060104 	tsteq	r6, r4, lsl #2
    29c4:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    29c8:	01040200 	mrseq	r0, R12_usr
    29cc:	010ad703 	tsteq	sl, r3, lsl #14
    29d0:	02040200 	andeq	r0, r4, #0, 4
    29d4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    29d8:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    29dc:	0402000e 	streq	r0, [r2], #-14
    29e0:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    29e4:	04020008 	streq	r0, [r2], #-8
    29e8:	07052002 	streq	r2, [r5, -r2]
    29ec:	28052406 	stmdacs	r5, {r1, r2, sl, sp}
    29f0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    29f4:	0b053006 	bleq	14ea14 <_Min_Heap_Size+0x14e214>
    29f8:	0a050106 	beq	142e18 <_Min_Heap_Size+0x142618>
    29fc:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    2a00:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    2a04:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    2a08:	052f0603 	streq	r0, [pc, #-1539]!	; 240d <_Min_Heap_Size+0x1c0d>
    2a0c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    2a10:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    2a14:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    2a18:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    2a1c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    2a20:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    2a24:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    2a28:	052f0603 	streq	r0, [pc, #-1539]!	; 242d <_Min_Heap_Size+0x1c2d>
    2a2c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2a30:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    2a34:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    2a38:	04020005 	streq	r0, [r2], #-5
    2a3c:	be030601 	cfmadd32lt	mvax0, mvfx0, mvfx3, mvfx1
    2a40:	0200207f 	andeq	r2, r0, #127	; 0x7f
    2a44:	00010104 	andeq	r0, r1, r4, lsl #2
    2a48:	01010402 	tsteq	r1, r2, lsl #8
    2a4c:	01040200 	mrseq	r0, R12_usr
    2a50:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2a54:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2a58:	75900301 	ldrvc	r0, [r0, #769]	; 0x301
    2a5c:	00050520 	andeq	r0, r5, r0, lsr #10
    2a60:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2a64:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2a68:	00140104 	andseq	r0, r4, r4, lsl #2
    2a6c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a70:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2a74:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2a78:	06010402 	streq	r0, [r1], -r2, lsl #8
    2a7c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2a80:	04020005 	streq	r0, [r2], #-5
    2a84:	0aeb0301 	beq	ffac3690 <_estack+0xdfab9cf0>
    2a88:	04020001 	streq	r0, [r2], #-1
    2a8c:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2a90:	001f0502 	andseq	r0, pc, r2, lsl #10
    2a94:	03010402 	movweq	r0, #5122	; 0x1402
    2a98:	050175c3 	streq	r7, [r1, #-1475]	; 0xfffffa3d
    2a9c:	04020004 	streq	r0, [r2], #-4
    2aa0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2aa4:	00140104 	andseq	r0, r4, r4, lsl #2
    2aa8:	06010402 	streq	r0, [r1], -r2, lsl #8
    2aac:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2ab0:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2ab4:	06010402 	streq	r0, [r1], -r2, lsl #8
    2ab8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2abc:	04020005 	streq	r0, [r2], #-5
    2ac0:	0ab80301 	beq	fee036cc <_estack+0xdedf9d2c>
    2ac4:	04020001 	streq	r0, [r2], #-1
    2ac8:	09053c01 	stmdbeq	r5, {r0, sl, fp, ip, sp}
    2acc:	01110306 	tsteq	r1, r6, lsl #6
    2ad0:	01060d05 	tsteq	r6, r5, lsl #26
    2ad4:	053c0c05 	ldreq	r0, [ip, #-3077]!	; 0xfffff3fb
    2ad8:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    2adc:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    2ae0:	0530060b 	ldreq	r0, [r0, #-1547]!	; 0xfffff9f5
    2ae4:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    2ae8:	14030609 	strne	r0, [r3], #-1545	; 0xfffff9f7
    2aec:	060d052e 	streq	r0, [sp], -lr, lsr #10
    2af0:	3c0c0501 	cfstr32cc	mvfx0, [ip], {1}
    2af4:	31060b05 	tstcc	r6, r5, lsl #22
    2af8:	01061c05 	tsteq	r6, r5, lsl #24
    2afc:	30060b05 	andcc	r0, r6, r5, lsl #22
    2b00:	01061205 	tsteq	r6, r5, lsl #4
    2b04:	01000202 	tsteq	r0, r2, lsl #4
    2b08:	00010501 	andeq	r0, r1, r1, lsl #10
    2b0c:	00000205 	andeq	r0, r0, r5, lsl #4
    2b10:	9c030000 	stcls	0, cr0, [r3], {-0}
    2b14:	0106010f 	tsteq	r6, pc, lsl #2
    2b18:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    2b1c:	30060104 	andcc	r0, r6, r4, lsl #2
    2b20:	01040200 	mrseq	r0, R12_usr
    2b24:	04020001 	streq	r0, [r2], #-1
    2b28:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2b2c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2b30:	001f0502 	andseq	r0, pc, r2, lsl #10
    2b34:	03010402 	movweq	r0, #5122	; 0x1402
    2b38:	052074bd 	streq	r7, [r0, #-1213]!	; 0xfffffb43
    2b3c:	04020005 	streq	r0, [r2], #-5
    2b40:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2b44:	01040200 	mrseq	r0, R12_usr
    2b48:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2b4c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2b50:	06010402 	streq	r0, [r1], -r2, lsl #8
    2b54:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2b58:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2b5c:	00030501 	andeq	r0, r3, r1, lsl #10
    2b60:	03010402 	movweq	r0, #5122	; 0x1402
    2b64:	00010bbe 			; <UNDEFINED> instruction: 0x00010bbe
    2b68:	06010402 	streq	r0, [r1], -r2, lsl #8
    2b6c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2b70:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2b74:	74f00301 	ldrbtvc	r0, [r0], #769	; 0x301
    2b78:	00040501 	andeq	r0, r4, r1, lsl #10
    2b7c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2b80:	01040200 	mrseq	r0, R12_usr
    2b84:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2b88:	00200601 	eoreq	r0, r0, r1, lsl #12
    2b8c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2b90:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2b94:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2b98:	00030501 	andeq	r0, r3, r1, lsl #10
    2b9c:	03010402 	movweq	r0, #5122	; 0x1402
    2ba0:	00010b8b 	andeq	r0, r1, fp, lsl #23
    2ba4:	06020402 	streq	r0, [r2], -r2, lsl #8
    2ba8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2bac:	07051502 	streq	r1, [r5, -r2, lsl #10]
    2bb0:	02040200 	andeq	r0, r4, #0, 4
    2bb4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    2bb8:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2bbc:	04020006 	streq	r0, [r2], #-6
    2bc0:	05052002 	streq	r2, [r5, #-2]
    2bc4:	01040200 	mrseq	r0, R12_usr
    2bc8:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    2bcc:	00010104 	andeq	r0, r1, r4, lsl #2
    2bd0:	01010402 	tsteq	r1, r2, lsl #8
    2bd4:	01040200 	mrseq	r0, R12_usr
    2bd8:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2bdc:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2be0:	74b80301 	ldrtvc	r0, [r8], #769	; 0x301
    2be4:	00050520 	andeq	r0, r5, r0, lsr #10
    2be8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2bec:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2bf0:	00140104 	andseq	r0, r4, r4, lsl #2
    2bf4:	06010402 	streq	r0, [r1], -r2, lsl #8
    2bf8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2bfc:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2c00:	06010402 	streq	r0, [r1], -r2, lsl #8
    2c04:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2c08:	04020005 	streq	r0, [r2], #-5
    2c0c:	0bc30301 	bleq	ff0c3818 <_estack+0xdf0b9e78>
    2c10:	04020001 	streq	r0, [r2], #-1
    2c14:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2c18:	001f0502 	andseq	r0, pc, r2, lsl #10
    2c1c:	03010402 	movweq	r0, #5122	; 0x1402
    2c20:	050174eb 	streq	r7, [r1, #-1259]	; 0xfffffb15
    2c24:	04020004 	streq	r0, [r2], #-4
    2c28:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2c2c:	00140104 	andseq	r0, r4, r4, lsl #2
    2c30:	06010402 	streq	r0, [r1], -r2, lsl #8
    2c34:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2c38:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2c3c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2c40:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2c44:	04020005 	streq	r0, [r2], #-5
    2c48:	0b900301 	bleq	fe403854 <_estack+0xde3f9eb4>
    2c4c:	04020001 	streq	r0, [r2], #-1
    2c50:	002e0602 	eoreq	r0, lr, r2, lsl #12
    2c54:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    2c58:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    2c5c:	01060204 	tsteq	r6, r4, lsl #4
    2c60:	02000805 	andeq	r0, r0, #327680	; 0x50000
    2c64:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    2c68:	05240607 	streq	r0, [r4, #-1543]!	; 0xfffff9f9
    2c6c:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    2c70:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
    2c74:	2001060b 	andcs	r0, r1, fp, lsl #12
    2c78:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    2c7c:	0e030603 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx3
    2c80:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    2c84:	06030501 	streq	r0, [r3], -r1, lsl #10
    2c88:	06110531 			; <UNDEFINED> instruction: 0x06110531
    2c8c:	06030501 	streq	r0, [r3], -r1, lsl #10
    2c90:	0601053e 			; <UNDEFINED> instruction: 0x0601053e
    2c94:	06090513 			; <UNDEFINED> instruction: 0x06090513
    2c98:	05206e03 	streq	r6, [r0, #-3587]!	; 0xfffff1fd
    2c9c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    2ca0:	0b053c0c 	bleq	151cd8 <_Min_Heap_Size+0x1514d8>
    2ca4:	1c053106 	stfnes	f3, [r5], {6}
    2ca8:	0b050106 	bleq	1430c8 <_Min_Heap_Size+0x1428c8>
    2cac:	12053006 	andne	r3, r5, #6
    2cb0:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2cb4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2cb8:	02050001 	andeq	r0, r5, #1
    2cbc:	00000000 	andeq	r0, r0, r0
    2cc0:	010fcf03 	tsteq	pc, r3, lsl #30
    2cc4:	03050106 	movweq	r0, #20742	; 0x5106
    2cc8:	01040200 	mrseq	r0, R12_usr
    2ccc:	02003006 	andeq	r3, r0, #6
    2cd0:	00010104 	andeq	r0, r1, r4, lsl #2
    2cd4:	01010402 	tsteq	r1, r2, lsl #8
    2cd8:	01040200 	mrseq	r0, R12_usr
    2cdc:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    2ce0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2ce4:	748a0301 	strvc	r0, [sl], #769	; 0x301
    2ce8:	00050520 	andeq	r0, r5, r0, lsr #10
    2cec:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2cf0:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    2cf4:	00140104 	andseq	r0, r4, r4, lsl #2
    2cf8:	06010402 	streq	r0, [r1], -r2, lsl #8
    2cfc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2d00:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2d04:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d08:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2d0c:	04020003 	streq	r0, [r2], #-3
    2d10:	0bf10301 	bleq	ffc4391c <_estack+0xdfc39f7c>
    2d14:	04020001 	streq	r0, [r2], #-1
    2d18:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    2d1c:	001f0502 	andseq	r0, pc, r2, lsl #10
    2d20:	03010402 	movweq	r0, #5122	; 0x1402
    2d24:	050174bd 	streq	r7, [r1, #-1213]	; 0xfffffb43
    2d28:	04020004 	streq	r0, [r2], #-4
    2d2c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2d30:	00140104 	andseq	r0, r4, r4, lsl #2
    2d34:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d38:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2d3c:	002f0601 	eoreq	r0, pc, r1, lsl #12
    2d40:	06010402 	streq	r0, [r1], -r2, lsl #8
    2d44:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    2d48:	04020003 	streq	r0, [r2], #-3
    2d4c:	0bbe0301 	bleq	fef83958 <_estack+0xdef79fb8>
    2d50:	04020001 	streq	r0, [r2], #-1
    2d54:	02002e01 	andeq	r2, r0, #1, 28
    2d58:	01060104 	tsteq	r6, r4, lsl #2
    2d5c:	01040200 	mrseq	r0, R12_usr
    2d60:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    2d64:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2d68:	00010104 	andeq	r0, r1, r4, lsl #2
    2d6c:	01010402 	tsteq	r1, r2, lsl #8
    2d70:	1f050204 	svcne	0x00050204
    2d74:	01040200 	mrseq	r0, R12_usr
    2d78:	20748903 	rsbscs	r8, r4, r3, lsl #18
    2d7c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2d80:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2d84:	04020004 	streq	r0, [r2], #-4
    2d88:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2d8c:	2e060104 	adfcss	f0, f6, f4
    2d90:	01040200 	mrseq	r0, R12_usr
    2d94:	02002f06 	andeq	r2, r0, #6, 30
    2d98:	01060104 	tsteq	r6, r4, lsl #2
    2d9c:	03050104 	movweq	r0, #20740	; 0x5104
    2da0:	01040200 	mrseq	r0, R12_usr
    2da4:	010bf203 	tsteq	fp, r3, lsl #4	; <UNPREDICTABLE>
    2da8:	01040200 	mrseq	r0, R12_usr
    2dac:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2db0:	02001f05 	andeq	r1, r0, #5, 30
    2db4:	bc030104 	stflts	f0, [r3], {4}
    2db8:	04050174 	streq	r0, [r5], #-372	; 0xfffffe8c
    2dbc:	01040200 	mrseq	r0, R12_usr
    2dc0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2dc4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2dc8:	20060104 	andcs	r0, r6, r4, lsl #2
    2dcc:	01040200 	mrseq	r0, R12_usr
    2dd0:	02002f06 	andeq	r2, r0, #6, 30
    2dd4:	01060104 	tsteq	r6, r4, lsl #2
    2dd8:	03050104 	movweq	r0, #20740	; 0x5104
    2ddc:	01040200 	mrseq	r0, R12_usr
    2de0:	010bbf03 	tsteq	fp, r3, lsl #30
    2de4:	02040200 	andeq	r0, r4, #0, 4
    2de8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    2dec:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    2df0:	0402000c 	streq	r0, [r2], #-12
    2df4:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    2df8:	04020006 	streq	r0, [r2], #-6
    2dfc:	05052002 	streq	r2, [r5, #-2]
    2e00:	02040200 	andeq	r0, r4, #0, 4
    2e04:	03053006 	movweq	r3, #20486	; 0x5006
    2e08:	02040200 	andeq	r0, r4, #0, 4
    2e0c:	00070516 	andeq	r0, r7, r6, lsl r5
    2e10:	06020402 	streq	r0, [r2], -r2, lsl #8
    2e14:	00060501 	andeq	r0, r6, r1, lsl #10
    2e18:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    2e1c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2e20:	3e060104 	adfccs	f0, f6, f4
    2e24:	01040200 	mrseq	r0, R12_usr
    2e28:	04020001 	streq	r0, [r2], #-1
    2e2c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2e30:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    2e34:	001f0502 	andseq	r0, pc, r2, lsl #10
    2e38:	03010402 	movweq	r0, #5122	; 0x1402
    2e3c:	052073fe 	streq	r7, [r0, #-1022]!	; 0xfffffc02
    2e40:	04020005 	streq	r0, [r2], #-5
    2e44:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    2e48:	01040200 	mrseq	r0, R12_usr
    2e4c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2e50:	002e0601 	eoreq	r0, lr, r1, lsl #12
    2e54:	06010402 	streq	r0, [r1], -r2, lsl #8
    2e58:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2e5c:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2e60:	00050501 	andeq	r0, r5, r1, lsl #10
    2e64:	03010402 	movweq	r0, #5122	; 0x1402
    2e68:	00010bfd 	strdeq	r0, [r1], -sp
    2e6c:	06010402 	streq	r0, [r1], -r2, lsl #8
    2e70:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    2e74:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    2e78:	74b10301 	ldrtvc	r0, [r1], #769	; 0x301
    2e7c:	00040501 	andeq	r0, r4, r1, lsl #10
    2e80:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    2e84:	01040200 	mrseq	r0, R12_usr
    2e88:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2e8c:	00200601 	eoreq	r0, r0, r1, lsl #12
    2e90:	06010402 	streq	r0, [r1], -r2, lsl #8
    2e94:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    2e98:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    2e9c:	00050501 	andeq	r0, r5, r1, lsl #10
    2ea0:	03010402 	movweq	r0, #5122	; 0x1402
    2ea4:	00010bca 	andeq	r0, r1, sl, asr #23
    2ea8:	06020402 	streq	r0, [r2], -r2, lsl #8
    2eac:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    2eb0:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    2eb4:	02040200 	andeq	r0, r4, #0, 4
    2eb8:	08050106 	stmdaeq	r5, {r1, r2, r8}
    2ebc:	02040200 	andeq	r0, r4, #0, 4
    2ec0:	06070520 	streq	r0, [r7], -r0, lsr #10
    2ec4:	06280524 	strteq	r0, [r8], -r4, lsr #10
    2ec8:	06070501 	streq	r0, [r7], -r1, lsl #10
    2ecc:	060b0530 			; <UNDEFINED> instruction: 0x060b0530
    2ed0:	0a052001 	beq	14aedc <_Min_Heap_Size+0x14a6dc>
    2ed4:	0603052e 	streq	r0, [r3], -lr, lsr #10
    2ed8:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    2edc:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    2ee0:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    2ee4:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    2ee8:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    2eec:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    2ef0:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    2ef4:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    2ef8:	04020005 	streq	r0, [r2], #-5
    2efc:	5c030601 	stcpl	6, cr0, [r3], {1}
    2f00:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    2f04:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    2f08:	00010104 	andeq	r0, r1, r4, lsl #2
    2f0c:	01010402 	tsteq	r1, r2, lsl #8
    2f10:	1f050204 	svcne	0x00050204
    2f14:	01040200 	mrseq	r0, R12_usr
    2f18:	20748403 	rsbscs	r8, r4, r3, lsl #8
    2f1c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    2f20:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    2f24:	04020004 	streq	r0, [r2], #-4
    2f28:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2f2c:	2e060104 	adfcss	f0, f6, f4
    2f30:	01040200 	mrseq	r0, R12_usr
    2f34:	02002f06 	andeq	r2, r0, #6, 30
    2f38:	01060104 	tsteq	r6, r4, lsl #2
    2f3c:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2f40:	01040200 	mrseq	r0, R12_usr
    2f44:	010bf703 	tsteq	fp, r3, lsl #14	; <UNPREDICTABLE>
    2f48:	01040200 	mrseq	r0, R12_usr
    2f4c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    2f50:	02001f05 	andeq	r1, r0, #5, 30
    2f54:	b7030104 	strlt	r0, [r3, -r4, lsl #2]
    2f58:	04050174 	streq	r0, [r5], #-372	; 0xfffffe8c
    2f5c:	01040200 	mrseq	r0, R12_usr
    2f60:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    2f64:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    2f68:	20060104 	andcs	r0, r6, r4, lsl #2
    2f6c:	01040200 	mrseq	r0, R12_usr
    2f70:	02002f06 	andeq	r2, r0, #6, 30
    2f74:	01060104 	tsteq	r6, r4, lsl #2
    2f78:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    2f7c:	01040200 	mrseq	r0, R12_usr
    2f80:	010bc403 	tsteq	fp, r3, lsl #8
    2f84:	01040200 	mrseq	r0, R12_usr
    2f88:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    2f8c:	05011103 	streq	r1, [r1, #-259]	; 0xfffffefd
    2f90:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    2f94:	0b053c0c 	bleq	151fcc <_Min_Heap_Size+0x1517cc>
    2f98:	1c053106 	stfnes	f3, [r5], {6}
    2f9c:	0b050106 	bleq	1433bc <_Min_Heap_Size+0x142bbc>
    2fa0:	12053006 	andne	r3, r5, #6
    2fa4:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    2fa8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2fac:	02050001 	andeq	r0, r5, #1
    2fb0:	08000d10 	stmdaeq	r0, {r4, r8, sl, fp}
    2fb4:	0114a003 	tsteq	r4, r3
    2fb8:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    2fbc:	02160601 	andseq	r0, r6, #1048576	; 0x100000
    2fc0:	01010001 	tsteq	r1, r1
    2fc4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    2fc8:	00000002 	andeq	r0, r0, r2
    2fcc:	17ac0300 	strne	r0, [ip, r0, lsl #6]!
    2fd0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    2fd4:	052f0603 	streq	r0, [pc, #-1539]!	; 29d9 <_Min_Heap_Size+0x21d9>
    2fd8:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    2fdc:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    2fe0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    2fe4:	06052016 			; <UNDEFINED> instruction: 0x06052016
    2fe8:	06050520 	streq	r0, [r5], -r0, lsr #10
    2fec:	0618053e 			; <UNDEFINED> instruction: 0x0618053e
    2ff0:	00050501 	andeq	r0, r5, r1, lsl #10
    2ff4:	06010402 	streq	r0, [r1], -r2, lsl #8
    2ff8:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
    2ffc:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3000:	00010104 	andeq	r0, r1, r4, lsl #2
    3004:	01010402 	tsteq	r1, r2, lsl #8
    3008:	1f050204 	svcne	0x00050204
    300c:	01040200 	mrseq	r0, R12_usr
    3010:	206ca603 	rsbcs	sl, ip, r3, lsl #12
    3014:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3018:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    301c:	04020004 	streq	r0, [r2], #-4
    3020:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3024:	2e060104 	adfcss	f0, f6, f4
    3028:	01040200 	mrseq	r0, R12_usr
    302c:	02002f06 	andeq	r2, r0, #6, 30
    3030:	01060104 	tsteq	r6, r4, lsl #2
    3034:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3038:	01040200 	mrseq	r0, R12_usr
    303c:	0113d503 	tsteq	r3, r3, lsl #10
    3040:	01040200 	mrseq	r0, R12_usr
    3044:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3048:	02001f05 	andeq	r1, r0, #5, 30
    304c:	d9030104 	stmdble	r3, {r2, r8}
    3050:	0405016c 	streq	r0, [r5], #-364	; 0xfffffe94
    3054:	01040200 	mrseq	r0, R12_usr
    3058:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    305c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3060:	20060104 	andcs	r0, r6, r4, lsl #2
    3064:	01040200 	mrseq	r0, R12_usr
    3068:	02002f06 	andeq	r2, r0, #6, 30
    306c:	01060104 	tsteq	r6, r4, lsl #2
    3070:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3074:	01040200 	mrseq	r0, R12_usr
    3078:	0113a203 	tsteq	r3, r3, lsl #4
    307c:	01040200 	mrseq	r0, R12_usr
    3080:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3084:	00010601 	andeq	r0, r1, r1, lsl #12
    3088:	15010402 	strne	r0, [r1, #-1026]	; 0xfffffbfe
    308c:	01040200 	mrseq	r0, R12_usr
    3090:	04020001 	streq	r0, [r2], #-1
    3094:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3098:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    309c:	001f0502 	andseq	r0, pc, r2, lsl #10
    30a0:	03010402 	movweq	r0, #5122	; 0x1402
    30a4:	05206ca3 	streq	r6, [r0, #-3235]!	; 0xfffff35d
    30a8:	04020005 	streq	r0, [r2], #-5
    30ac:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    30b0:	01040200 	mrseq	r0, R12_usr
    30b4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    30b8:	002e0601 	eoreq	r0, lr, r1, lsl #12
    30bc:	06010402 	streq	r0, [r1], -r2, lsl #8
    30c0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    30c4:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    30c8:	00050501 	andeq	r0, r5, r1, lsl #10
    30cc:	03010402 	movweq	r0, #5122	; 0x1402
    30d0:	000113d8 	ldrdeq	r1, [r1], -r8
    30d4:	06010402 	streq	r0, [r1], -r2, lsl #8
    30d8:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    30dc:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    30e0:	6cd60301 	ldclvs	3, cr0, [r6], {1}
    30e4:	00040501 	andeq	r0, r4, r1, lsl #10
    30e8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    30ec:	01040200 	mrseq	r0, R12_usr
    30f0:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    30f4:	00200601 	eoreq	r0, r0, r1, lsl #12
    30f8:	06010402 	streq	r0, [r1], -r2, lsl #8
    30fc:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3100:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3104:	00050501 	andeq	r0, r5, r1, lsl #10
    3108:	03010402 	movweq	r0, #5122	; 0x1402
    310c:	000113a5 	andeq	r1, r1, r5, lsr #7
    3110:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3114:	0e030105 	adfeqs	f0, f3, f5
    3118:	06050501 	streq	r0, [r5], -r1, lsl #10
    311c:	0601051d 			; <UNDEFINED> instruction: 0x0601051d
    3120:	00010231 	andeq	r0, r1, r1, lsr r2
    3124:	01050101 	tsteq	r5, r1, lsl #2
    3128:	12020500 	andne	r0, r2, #0, 10
    312c:	0308000d 	movweq	r0, #32781	; 0x800d
    3130:	06011bf1 			; <UNDEFINED> instruction: 0x06011bf1
    3134:	06030501 	streq	r0, [r3], -r1, lsl #10
    3138:	11055b22 	tstne	r5, r2, lsr #22
    313c:	03050106 	movweq	r0, #20742	; 0x5106
    3140:	05314306 	ldreq	r4, [r1, #-774]!	; 0xfffffcfa
    3144:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    3148:	01010002 	tsteq	r1, r2
    314c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3150:	00000002 	andeq	r0, r0, r2
    3154:	14af0300 	strtne	r0, [pc], #768	; 315c <_Min_Heap_Size+0x295c>
    3158:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    315c:	16060105 	strne	r0, [r6], -r5, lsl #2
    3160:	01000102 	tsteq	r0, r2, lsl #2
    3164:	00010501 	andeq	r0, r1, r1, lsl #10
    3168:	00000205 	andeq	r0, r0, r5, lsl #4
    316c:	cf030000 	svcgt	0x00030000
    3170:	01060117 	tsteq	r6, r7, lsl r1
    3174:	21060305 	tstcs	r6, r5, lsl #6
    3178:	05200619 	streq	r0, [r0, #-1561]!	; 0xfffff9e7
    317c:	01023001 	tsteq	r2, r1
    3180:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3184:	02050001 	andeq	r0, r5, #1
    3188:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
    318c:	0114be03 	tsteq	r4, r3, lsl #28
    3190:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    3194:	02160601 	andseq	r0, r6, #1048576	; 0x100000
    3198:	01010001 	tsteq	r1, r1
    319c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    31a0:	00000002 	andeq	r0, r0, r2
    31a4:	14cd0300 	strbne	r0, [sp], #768	; 0x300
    31a8:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    31ac:	16060105 	strne	r0, [r6], -r5, lsl #2
    31b0:	01000102 	tsteq	r0, r2, lsl #2
    31b4:	00010501 	andeq	r0, r1, r1, lsl #10
    31b8:	0d2e0205 	sfmeq	f0, 4, [lr, #-20]!	; 0xffffffec
    31bc:	dc030800 	stcle	8, cr0, [r3], {-0}
    31c0:	03050114 	movweq	r0, #20756	; 0x5114
    31c4:	06010514 			; <UNDEFINED> instruction: 0x06010514
    31c8:	00010216 	andeq	r0, r1, r6, lsl r2
    31cc:	01050101 	tsteq	r5, r1, lsl #2
    31d0:	00020500 	andeq	r0, r2, r0, lsl #10
    31d4:	03000000 	movweq	r0, #0
    31d8:	060118c7 	streq	r1, [r1], -r7, asr #17
    31dc:	06030501 	streq	r0, [r3], -r1, lsl #10
    31e0:	17051321 	strne	r1, [r5, -r1, lsr #6]
    31e4:	03050106 	movweq	r0, #20742	; 0x5106
    31e8:	10052306 	andne	r2, r5, r6, lsl #6
    31ec:	03050106 	movweq	r0, #20742	; 0x5106
    31f0:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    31f4:	06050106 	streq	r0, [r5], -r6, lsl #2
    31f8:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    31fc:	06100535 			; <UNDEFINED> instruction: 0x06100535
    3200:	06030501 	streq	r0, [r3], -r1, lsl #10
    3204:	060d054b 	streq	r0, [sp], -fp, asr #10
    3208:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    320c:	34060305 	strcc	r0, [r6], #-773	; 0xfffffcfb
    3210:	01061405 	tsteq	r6, r5, lsl #8
    3214:	50060305 	andpl	r0, r6, r5, lsl #6
    3218:	3e060105 	adfccs	f0, f6, f5
    321c:	00310520 	eorseq	r0, r1, r0, lsr #10
    3220:	03010402 	movweq	r0, #5122	; 0x1402
    3224:	05052e6a 	streq	r2, [r5, #-3690]	; 0xfffff196
    3228:	18053006 	stmdane	r5, {r1, r2, ip, sp}
    322c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3230:	20062f06 	andcs	r2, r6, r6, lsl #30
    3234:	02003205 	andeq	r3, r0, #1342177280	; 0x50000000
    3238:	05410104 	strbeq	r0, [r1, #-260]	; 0xfffffefc
    323c:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    3240:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    3244:	062f0605 	strteq	r0, [pc], -r5, lsl #12
    3248:	0001023c 	andeq	r0, r1, ip, lsr r2
    324c:	01050101 	tsteq	r5, r1, lsl #2
    3250:	30020500 	andcc	r0, r2, r0, lsl #10
    3254:	0308000d 	movweq	r0, #32781	; 0x800d
    3258:	06011a9f 			; <UNDEFINED> instruction: 0x06011a9f
    325c:	06030501 	streq	r0, [r3], -r1, lsl #10
    3260:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    3264:	06030501 	streq	r0, [r3], -r1, lsl #10
    3268:	06160521 	ldreq	r0, [r6], -r1, lsr #10
    326c:	06030501 	streq	r0, [r3], -r1, lsl #10
    3270:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    3274:	06030501 	streq	r0, [r3], -r1, lsl #10
    3278:	06010527 	streq	r0, [r1], -r7, lsr #10
    327c:	00010230 	andeq	r0, r1, r0, lsr r2
    3280:	01050101 	tsteq	r5, r1, lsl #2
    3284:	00020500 	andeq	r0, r2, r0, lsl #10
    3288:	03000000 	movweq	r0, #0
    328c:	050114ea 	streq	r1, [r1, #-1258]	; 0xfffffb16
    3290:	01051403 	tsteq	r5, r3, lsl #8
    3294:	01021706 	tsteq	r2, r6, lsl #14
    3298:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    329c:	02050001 	andeq	r0, r5, #1
    32a0:	00000000 	andeq	r0, r0, r0
    32a4:	01108c03 	tsteq	r0, r3, lsl #24
    32a8:	03050106 	movweq	r0, #20742	; 0x5106
    32ac:	02002f06 	andeq	r2, r0, #6, 30
    32b0:	00150104 	andseq	r0, r5, r4, lsl #2
    32b4:	01010402 	tsteq	r1, r2, lsl #8
    32b8:	01040200 	mrseq	r0, R12_usr
    32bc:	04020001 	streq	r0, [r2], #-1
    32c0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    32c4:	02001f05 	andeq	r1, r0, #5, 30
    32c8:	cb030104 	blgt	c36e0 <_Min_Heap_Size+0xc2ee0>
    32cc:	05052073 	streq	r2, [r5, #-115]	; 0xffffff8d
    32d0:	01040200 	mrseq	r0, R12_usr
    32d4:	00040514 	andeq	r0, r4, r4, lsl r5
    32d8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    32dc:	01040200 	mrseq	r0, R12_usr
    32e0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    32e4:	2f060104 	svccs	0x00060104
    32e8:	01040200 	mrseq	r0, R12_usr
    32ec:	01040106 	tsteq	r4, r6, lsl #2
    32f0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    32f4:	b0030104 	andlt	r0, r3, r4, lsl #2
    32f8:	0200010c 	andeq	r0, r0, #12, 2
    32fc:	2e060104 	adfcss	f0, f6, f4
    3300:	1f050204 	svcne	0x00050204
    3304:	01040200 	mrseq	r0, R12_usr
    3308:	0173fe03 	cmneq	r3, r3, lsl #28	; <UNPREDICTABLE>
    330c:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3310:	00140104 	andseq	r0, r4, r4, lsl #2
    3314:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3318:	01040200 	mrseq	r0, R12_usr
    331c:	02002006 	andeq	r2, r0, #6
    3320:	2f060104 	svccs	0x00060104
    3324:	01040200 	mrseq	r0, R12_usr
    3328:	01040106 	tsteq	r4, r6, lsl #2
    332c:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3330:	fd030104 	stc2	1, cr0, [r3, #-16]
    3334:	0200010b 	andeq	r0, r0, #-1073741822	; 0xc0000002
    3338:	002e0104 	eoreq	r0, lr, r4, lsl #2
    333c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3340:	04020001 	streq	r0, [r2], #-1
    3344:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    3348:	00010104 	andeq	r0, r1, r4, lsl #2
    334c:	01010402 	tsteq	r1, r2, lsl #8
    3350:	01040200 	mrseq	r0, R12_usr
    3354:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3358:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    335c:	73ca0301 	bicvc	r0, sl, #67108864	; 0x4000000
    3360:	00050520 	andeq	r0, r5, r0, lsr #10
    3364:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3368:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    336c:	00140104 	andseq	r0, r4, r4, lsl #2
    3370:	06010402 	streq	r0, [r1], -r2, lsl #8
    3374:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3378:	002f0601 	eoreq	r0, pc, r1, lsl #12
    337c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3380:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3384:	04020003 	streq	r0, [r2], #-3
    3388:	0cb10301 	ldceq	3, cr0, [r1], #4
    338c:	04020001 	streq	r0, [r2], #-1
    3390:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    3394:	001f0502 	andseq	r0, pc, r2, lsl #10
    3398:	03010402 	movweq	r0, #5122	; 0x1402
    339c:	050173fd 	streq	r7, [r1, #-1021]	; 0xfffffc03
    33a0:	04020004 	streq	r0, [r2], #-4
    33a4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    33a8:	00140104 	andseq	r0, r4, r4, lsl #2
    33ac:	06010402 	streq	r0, [r1], -r2, lsl #8
    33b0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    33b4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    33b8:	06010402 	streq	r0, [r1], -r2, lsl #8
    33bc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    33c0:	04020003 	streq	r0, [r2], #-3
    33c4:	0bfe0301 	bleq	fff83fd0 <_estack+0xdff7a630>
    33c8:	04020001 	streq	r0, [r2], #-1
    33cc:	002e0602 	eoreq	r0, lr, r2, lsl #12
    33d0:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    33d4:	02000c05 	andeq	r0, r0, #1280	; 0x500
    33d8:	01060204 	tsteq	r6, r4, lsl #4
    33dc:	02000605 	andeq	r0, r0, #5242880	; 0x500000
    33e0:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    33e4:	04020005 	streq	r0, [r2], #-5
    33e8:	05300602 	ldreq	r0, [r0, #-1538]!	; 0xfffff9fe
    33ec:	04020003 	streq	r0, [r2], #-3
    33f0:	0c051802 	stceq	8, cr1, [r5], {2}
    33f4:	02040200 	andeq	r0, r4, #0, 4
    33f8:	06050106 	streq	r0, [r5], -r6, lsl #2
    33fc:	02040200 	andeq	r0, r4, #0, 4
    3400:	06050520 	streq	r0, [r5], -r0, lsr #10
    3404:	06090524 	streq	r0, [r9], -r4, lsr #10
    3408:	2e080501 	cfsh32cs	mvfx0, mvfx8, #1
    340c:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    3410:	01062805 	tsteq	r6, r5, lsl #16
    3414:	36060305 	strcc	r0, [r6], -r5, lsl #6
    3418:	01060c05 	tsteq	r6, r5, lsl #24
    341c:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    3420:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
    3424:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    3428:	07052e08 	streq	r2, [r5, -r8, lsl #28]
    342c:	28053e06 	stmdacs	r5, {r1, r2, r9, sl, fp, ip, sp}
    3430:	03050106 	movweq	r0, #20742	; 0x5106
    3434:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    3438:	01060705 	tsteq	r6, r5, lsl #14
    343c:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    3440:	04020005 	streq	r0, [r2], #-5
    3444:	003f0601 	eorseq	r0, pc, r1, lsl #12
    3448:	01010402 	tsteq	r1, r2, lsl #8
    344c:	01040200 	mrseq	r0, R12_usr
    3450:	04020001 	streq	r0, [r2], #-1
    3454:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    3458:	02001f05 	andeq	r1, r0, #5, 30
    345c:	9f030104 	svcls	0x00030104
    3460:	05052073 	streq	r2, [r5, #-115]	; 0xffffff8d
    3464:	01040200 	mrseq	r0, R12_usr
    3468:	00040514 	andeq	r0, r4, r4, lsl r5
    346c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3470:	01040200 	mrseq	r0, R12_usr
    3474:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3478:	2f060104 	svccs	0x00060104
    347c:	01040200 	mrseq	r0, R12_usr
    3480:	01040106 	tsteq	r4, r6, lsl #2
    3484:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3488:	dc030104 	stfles	f0, [r3], {4}
    348c:	0200010c 	andeq	r0, r0, #12, 2
    3490:	2e060104 	adfcss	f0, f6, f4
    3494:	1f050204 	svcne	0x00050204
    3498:	01040200 	mrseq	r0, R12_usr
    349c:	0173d203 	cmneq	r3, r3, lsl #4
    34a0:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    34a4:	00140104 	andseq	r0, r4, r4, lsl #2
    34a8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    34ac:	01040200 	mrseq	r0, R12_usr
    34b0:	02002006 	andeq	r2, r0, #6
    34b4:	3d060104 	stfccs	f0, [r6, #-16]
    34b8:	01040200 	mrseq	r0, R12_usr
    34bc:	01040106 	tsteq	r4, r6, lsl #2
    34c0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    34c4:	a9030104 	stmdbge	r3, {r2, r8}
    34c8:	0200010c 	andeq	r0, r0, #12, 2
    34cc:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    34d0:	02040200 	andeq	r0, r4, #0, 4
    34d4:	000e0515 	andeq	r0, lr, r5, lsl r5
    34d8:	06020402 	streq	r0, [r2], -r2, lsl #8
    34dc:	00080501 	andeq	r0, r8, r1, lsl #10
    34e0:	20020402 	andcs	r0, r2, r2, lsl #8
    34e4:	34060705 	strcc	r0, [r6], #-1797	; 0xfffff8fb
    34e8:	01060b05 	tsteq	r6, r5, lsl #22
    34ec:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    34f0:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    34f4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    34f8:	0c05202a 	stceq	0, cr2, [r5], {42}	; 0x2a
    34fc:	052e4603 	streq	r4, [lr, #-1539]!	; 0xfffff9fd
    3500:	04020005 	streq	r0, [r2], #-5
    3504:	09030601 	stmdbeq	r3, {r0, r9, sl}
    3508:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    350c:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3510:	00010104 	andeq	r0, r1, r4, lsl #2
    3514:	01010402 	tsteq	r1, r2, lsl #8
    3518:	1f050204 	svcne	0x00050204
    351c:	01040200 	mrseq	r0, R12_usr
    3520:	2073c503 	rsbscs	ip, r3, r3, lsl #10
    3524:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3528:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    352c:	04020004 	streq	r0, [r2], #-4
    3530:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3534:	2e060104 	adfcss	f0, f6, f4
    3538:	01040200 	mrseq	r0, R12_usr
    353c:	02002f06 	andeq	r2, r0, #6, 30
    3540:	01060104 	tsteq	r6, r4, lsl #2
    3544:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3548:	01040200 	mrseq	r0, R12_usr
    354c:	010cb603 	tsteq	ip, r3, lsl #12
    3550:	01040200 	mrseq	r0, R12_usr
    3554:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3558:	02001f05 	andeq	r1, r0, #5, 30
    355c:	f8030104 			; <UNDEFINED> instruction: 0xf8030104
    3560:	04050173 	streq	r0, [r5], #-371	; 0xfffffe8d
    3564:	01040200 	mrseq	r0, R12_usr
    3568:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    356c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3570:	20060104 	andcs	r0, r6, r4, lsl #2
    3574:	01040200 	mrseq	r0, R12_usr
    3578:	02002f06 	andeq	r2, r0, #6, 30
    357c:	01060104 	tsteq	r6, r4, lsl #2
    3580:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3584:	01040200 	mrseq	r0, R12_usr
    3588:	010c8303 	tsteq	ip, r3, lsl #6
    358c:	01040200 	mrseq	r0, R12_usr
    3590:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    3594:	05011003 	streq	r1, [r1, #-3]
    3598:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    359c:	0e030607 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx7
    35a0:	0628053c 			; <UNDEFINED> instruction: 0x0628053c
    35a4:	030c0501 	movweq	r0, #50433	; 0xc501
    35a8:	03053c59 	movweq	r3, #23641	; 0x5c59
    35ac:	00c40306 	sbceq	r0, r4, r6, lsl #6
    35b0:	06070520 	streq	r0, [r7], -r0, lsr #10
    35b4:	2e060501 	cfsh32cs	mvfx0, mvfx6, #1
    35b8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    35bc:	3e060104 	adfccs	f0, f6, f4
    35c0:	01040200 	mrseq	r0, R12_usr
    35c4:	04020001 	streq	r0, [r2], #-1
    35c8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    35cc:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    35d0:	001f0502 	andseq	r0, pc, r2, lsl #10
    35d4:	03010402 	movweq	r0, #5122	; 0x1402
    35d8:	05207388 	streq	r7, [r0, #-904]!	; 0xfffffc78
    35dc:	04020005 	streq	r0, [r2], #-5
    35e0:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    35e4:	01040200 	mrseq	r0, R12_usr
    35e8:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    35ec:	002e0601 	eoreq	r0, lr, r1, lsl #12
    35f0:	06010402 	streq	r0, [r1], -r2, lsl #8
    35f4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    35f8:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    35fc:	00050501 	andeq	r0, r5, r1, lsl #10
    3600:	03010402 	movweq	r0, #5122	; 0x1402
    3604:	00010cf3 	strdeq	r0, [r1], -r3
    3608:	06010402 	streq	r0, [r1], -r2, lsl #8
    360c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3610:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3614:	73bb0301 			; <UNDEFINED> instruction: 0x73bb0301
    3618:	00040501 	andeq	r0, r4, r1, lsl #10
    361c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3620:	01040200 	mrseq	r0, R12_usr
    3624:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3628:	00200601 	eoreq	r0, r0, r1, lsl #12
    362c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3630:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3634:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3638:	00050501 	andeq	r0, r5, r1, lsl #10
    363c:	03010402 	movweq	r0, #5122	; 0x1402
    3640:	00010cc0 	andeq	r0, r1, r0, asr #25
    3644:	06020402 	streq	r0, [r2], -r2, lsl #8
    3648:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    364c:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    3650:	02040200 	andeq	r0, r4, #0, 4
    3654:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3658:	02040200 	andeq	r0, r4, #0, 4
    365c:	06070520 	streq	r0, [r7], -r0, lsr #10
    3660:	060b0526 	streq	r0, [fp], -r6, lsr #10
    3664:	2e0a0501 	cfsh32cs	mvfx0, mvfx10, #1
    3668:	22060905 	andcs	r0, r6, #81920	; 0x14000
    366c:	01060e05 	tsteq	r6, r5, lsl #28
    3670:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    3674:	052f0609 	streq	r0, [pc, #-1545]!	; 3073 <_Min_Heap_Size+0x2873>
    3678:	010a0303 	tsteq	sl, r3, lsl #6
    367c:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    3680:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    3684:	052f0605 	streq	r0, [pc, #-1541]!	; 3087 <_Min_Heap_Size+0x2887>
    3688:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    368c:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    3690:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3694:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    3698:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    369c:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    36a0:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    36a4:	052f0605 	streq	r0, [pc, #-1541]!	; 30a7 <_Min_Heap_Size+0x28a7>
    36a8:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    36ac:	05280605 	streq	r0, [r8, #-1541]!	; 0xfffff9fb
    36b0:	9003060c 	andls	r0, r3, ip, lsl #12
    36b4:	03054a7f 	movweq	r4, #23167	; 0x5a7f
    36b8:	00dc0306 	sbcseq	r0, ip, r6, lsl #6
    36bc:	0606052e 	streq	r0, [r6], -lr, lsr #10
    36c0:	06030501 	streq	r0, [r3], -r1, lsl #10
    36c4:	052e1803 	streq	r1, [lr, #-2051]!	; 0xfffff7fd
    36c8:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    36cc:	01000502 	tsteq	r0, r2, lsl #10
    36d0:	00010501 	andeq	r0, r1, r1, lsl #10
    36d4:	00000205 	andeq	r0, r0, r5, lsl #4
    36d8:	e5030000 	str	r0, [r3, #-0]
    36dc:	0106011a 	tsteq	r6, sl, lsl r1
    36e0:	21060305 	tstcs	r6, r5, lsl #6
    36e4:	01061705 	tsteq	r6, r5, lsl #14
    36e8:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    36ec:	01060805 	tsteq	r6, r5, lsl #16
    36f0:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    36f4:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    36f8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    36fc:	05052006 	streq	r2, [r5, #-6]
    3700:	16052206 	strne	r2, [r5], -r6, lsl #4
    3704:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3708:	06030520 	streq	r0, [r3], -r0, lsr #10
    370c:	06160527 	ldreq	r0, [r6], -r7, lsr #10
    3710:	06030501 	streq	r0, [r3], -r1, lsl #10
    3714:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    3718:	06030501 	streq	r0, [r3], -r1, lsl #10
    371c:	06140523 	ldreq	r0, [r4], -r3, lsr #10
    3720:	06030501 	streq	r0, [r3], -r1, lsl #10
    3724:	06120523 	ldreq	r0, [r2], -r3, lsr #10
    3728:	06030501 	streq	r0, [r3], -r1, lsl #10
    372c:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
    3730:	06030501 	streq	r0, [r3], -r1, lsl #10
    3734:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    3738:	06030501 	streq	r0, [r3], -r1, lsl #10
    373c:	06010528 	streq	r0, [r1], -r8, lsr #10
    3740:	00010230 	andeq	r0, r1, r0, lsr r2
    3744:	01050101 	tsteq	r5, r1, lsl #2
    3748:	00020500 	andeq	r0, r2, r0, lsl #10
    374c:	03000000 	movweq	r0, #0
    3750:	06011ab7 			; <UNDEFINED> instruction: 0x06011ab7
    3754:	06030501 	streq	r0, [r3], -r1, lsl #10
    3758:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    375c:	06030501 	streq	r0, [r3], -r1, lsl #10
    3760:	06080522 	streq	r0, [r8], -r2, lsr #10
    3764:	20240501 	eorcs	r0, r4, r1, lsl #10
    3768:	31060305 	tstcc	r6, r5, lsl #6
    376c:	01060c05 	tsteq	r6, r5, lsl #24
    3770:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    3774:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    3778:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    377c:	03052008 	movweq	r2, #20488	; 0x5008
    3780:	16052706 	strne	r2, [r5], -r6, lsl #14
    3784:	03050106 	movweq	r0, #20742	; 0x5106
    3788:	16052f06 	strne	r2, [r5], -r6, lsl #30
    378c:	03050106 	movweq	r0, #20742	; 0x5106
    3790:	14052306 	strne	r2, [r5], #-774	; 0xfffffcfa
    3794:	03050106 	movweq	r0, #20742	; 0x5106
    3798:	12052306 	andne	r2, r5, #402653184	; 0x18000000
    379c:	03050106 	movweq	r0, #20742	; 0x5106
    37a0:	12053d06 	andne	r3, r5, #384	; 0x180
    37a4:	03050106 	movweq	r0, #20742	; 0x5106
    37a8:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    37ac:	03050106 	movweq	r0, #20742	; 0x5106
    37b0:	01052806 	tsteq	r5, r6, lsl #16
    37b4:	01023006 	tsteq	r2, r6
    37b8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    37bc:	02050001 	andeq	r0, r5, #1
    37c0:	00000000 	andeq	r0, r0, r0
    37c4:	0114f903 	tsteq	r4, r3, lsl #18	; <UNPREDICTABLE>
    37c8:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    37cc:	02170601 	andseq	r0, r7, #1048576	; 0x100000
    37d0:	01010001 	tsteq	r1, r1
    37d4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    37d8:	00000002 	andeq	r0, r0, r2
    37dc:	11930300 	orrsne	r0, r3, r0, lsl #6
    37e0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    37e4:	04020003 	streq	r0, [r2], #-3
    37e8:	00300601 	eorseq	r0, r0, r1, lsl #12
    37ec:	01010402 	tsteq	r1, r2, lsl #8
    37f0:	01040200 	mrseq	r0, R12_usr
    37f4:	04020001 	streq	r0, [r2], #-1
    37f8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    37fc:	02001f05 	andeq	r1, r0, #5, 30
    3800:	c6030104 	strgt	r0, [r3], -r4, lsl #2
    3804:	05052072 	streq	r2, [r5, #-114]	; 0xffffff8e
    3808:	01040200 	mrseq	r0, R12_usr
    380c:	00040514 	andeq	r0, r4, r4, lsl r5
    3810:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3814:	01040200 	mrseq	r0, R12_usr
    3818:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    381c:	2f060104 	svccs	0x00060104
    3820:	01040200 	mrseq	r0, R12_usr
    3824:	01040106 	tsteq	r4, r6, lsl #2
    3828:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    382c:	b5030104 	strlt	r0, [r3, #-260]	; 0xfffffefc
    3830:	0200010d 	andeq	r0, r0, #1073741827	; 0x40000003
    3834:	2e060104 	adfcss	f0, f6, f4
    3838:	1f050204 	svcne	0x00050204
    383c:	01040200 	mrseq	r0, R12_usr
    3840:	0172f903 	cmneq	r2, r3, lsl #18	; <UNPREDICTABLE>
    3844:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3848:	00140104 	andseq	r0, r4, r4, lsl #2
    384c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3850:	01040200 	mrseq	r0, R12_usr
    3854:	02002006 	andeq	r2, r0, #6
    3858:	2f060104 	svccs	0x00060104
    385c:	01040200 	mrseq	r0, R12_usr
    3860:	01040106 	tsteq	r4, r6, lsl #2
    3864:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    3868:	82030104 	andhi	r0, r3, #4, 2
    386c:	0200010d 	andeq	r0, r0, #1073741827	; 0x40000003
    3870:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    3874:	02040200 	andeq	r0, r4, #0, 4
    3878:	00070515 	andeq	r0, r7, r5, lsl r5
    387c:	06020402 	streq	r0, [r2], -r2, lsl #8
    3880:	04020001 	streq	r0, [r2], #-1
    3884:	06052002 	streq	r2, [r5], -r2
    3888:	02040200 	andeq	r0, r4, #0, 4
    388c:	00050520 	andeq	r0, r5, r0, lsr #10
    3890:	06010402 	streq	r0, [r1], -r2, lsl #8
    3894:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    3898:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    389c:	00010104 	andeq	r0, r1, r4, lsl #2
    38a0:	01010402 	tsteq	r1, r2, lsl #8
    38a4:	1f050204 	svcne	0x00050204
    38a8:	01040200 	mrseq	r0, R12_usr
    38ac:	2072c103 	rsbscs	ip, r2, r3, lsl #2
    38b0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    38b4:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    38b8:	04020004 	streq	r0, [r2], #-4
    38bc:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    38c0:	2e060104 	adfcss	f0, f6, f4
    38c4:	01040200 	mrseq	r0, R12_usr
    38c8:	02002f06 	andeq	r2, r0, #6, 30
    38cc:	01060104 	tsteq	r6, r4, lsl #2
    38d0:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    38d4:	01040200 	mrseq	r0, R12_usr
    38d8:	010dba03 	tsteq	sp, r3, lsl #20
    38dc:	01040200 	mrseq	r0, R12_usr
    38e0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    38e4:	02001f05 	andeq	r1, r0, #5, 30
    38e8:	f4030104 	vst4.8	{d0,d2,d4,d6}, [r3], r4
    38ec:	04050172 	streq	r0, [r5], #-370	; 0xfffffe8e
    38f0:	01040200 	mrseq	r0, R12_usr
    38f4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    38f8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    38fc:	20060104 	andcs	r0, r6, r4, lsl #2
    3900:	01040200 	mrseq	r0, R12_usr
    3904:	02002f06 	andeq	r2, r0, #6, 30
    3908:	01060104 	tsteq	r6, r4, lsl #2
    390c:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3910:	01040200 	mrseq	r0, R12_usr
    3914:	010d8703 	tsteq	sp, r3, lsl #14
    3918:	02040200 	andeq	r0, r4, #0, 4
    391c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3920:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    3924:	0402000e 	streq	r0, [r2], #-14
    3928:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    392c:	04020008 	streq	r0, [r2], #-8
    3930:	07052002 	streq	r2, [r5, -r2]
    3934:	28052406 	stmdacs	r5, {r1, r2, sl, sp}
    3938:	07050106 	streq	r0, [r5, -r6, lsl #2]
    393c:	0b053106 	bleq	14fd5c <_Min_Heap_Size+0x14f55c>
    3940:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    3944:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    3948:	0e052306 	cdpeq	3, 0, cr2, cr5, cr6, {0}
    394c:	16050106 	strne	r0, [r5], -r6, lsl #2
    3950:	20090520 	andcs	r0, r9, r0, lsr #10
    3954:	34060705 	strcc	r0, [r6], #-1797	; 0xfffff8fb
    3958:	01061a05 	tsteq	r6, r5, lsl #20
    395c:	31060705 	tstcc	r6, r5, lsl #14
    3960:	01061505 	tsteq	r6, r5, lsl #10
    3964:	44060705 	strmi	r0, [r6], #-1797	; 0xfffff8fb
    3968:	05052006 	streq	r2, [r5, #-6]
    396c:	18054306 	stmdane	r5, {r1, r2, r8, r9, lr}
    3970:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3974:	13053106 	movwne	r3, #20742	; 0x5106
    3978:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    397c:	20064406 	andcs	r4, r6, r6, lsl #8
    3980:	32060305 	andcc	r0, r6, #335544320	; 0x14000000
    3984:	13060105 	movwne	r0, #24837	; 0x6105
    3988:	0002022e 	andeq	r0, r2, lr, lsr #4
    398c:	01050101 	tsteq	r5, r1, lsl #2
    3990:	00020500 	andeq	r0, r2, r0, lsl #10
    3994:	03000000 	movweq	r0, #0
    3998:	06011b93 			; <UNDEFINED> instruction: 0x06011b93
    399c:	06030501 	streq	r0, [r3], -r1, lsl #10
    39a0:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    39a4:	06030501 	streq	r0, [r3], -r1, lsl #10
    39a8:	06160522 	ldreq	r0, [r6], -r2, lsr #10
    39ac:	06030501 	streq	r0, [r3], -r1, lsl #10
    39b0:	06110531 			; <UNDEFINED> instruction: 0x06110531
    39b4:	06030501 	streq	r0, [r3], -r1, lsl #10
    39b8:	06010544 	streq	r0, [r1], -r4, asr #10
    39bc:	00010230 	andeq	r0, r1, r0, lsr r2
    39c0:	01050101 	tsteq	r5, r1, lsl #2
    39c4:	00020500 	andeq	r0, r2, r0, lsl #10
    39c8:	03000000 	movweq	r0, #0
    39cc:	05011588 	streq	r1, [r1, #-1416]	; 0xfffffa78
    39d0:	01051403 	tsteq	r5, r3, lsl #8
    39d4:	01021706 	tsteq	r2, r6, lsl #14
    39d8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    39dc:	02050001 	andeq	r0, r5, #1
    39e0:	00000000 	andeq	r0, r0, r0
    39e4:	0111e003 	tsteq	r1, r3
    39e8:	03050106 	movweq	r0, #20742	; 0x5106
    39ec:	01040200 	mrseq	r0, R12_usr
    39f0:	02003006 	andeq	r3, r0, #6
    39f4:	00010104 	andeq	r0, r1, r4, lsl #2
    39f8:	01010402 	tsteq	r1, r2, lsl #8
    39fc:	01040200 	mrseq	r0, R12_usr
    3a00:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3a04:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3a08:	71f90301 	mvnsvc	r0, r1, lsl #6
    3a0c:	00050520 	andeq	r0, r5, r0, lsr #10
    3a10:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3a14:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    3a18:	00140104 	andseq	r0, r4, r4, lsl #2
    3a1c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a20:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3a24:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3a28:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a2c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3a30:	04020003 	streq	r0, [r2], #-3
    3a34:	0e820301 	cdpeq	3, 8, cr0, cr2, cr1, {0}
    3a38:	04020001 	streq	r0, [r2], #-1
    3a3c:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    3a40:	001f0502 	andseq	r0, pc, r2, lsl #10
    3a44:	03010402 	movweq	r0, #5122	; 0x1402
    3a48:	050172ac 	streq	r7, [r1, #-684]	; 0xfffffd54
    3a4c:	04020004 	streq	r0, [r2], #-4
    3a50:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3a54:	00140104 	andseq	r0, r4, r4, lsl #2
    3a58:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a5c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3a60:	002f0601 	eoreq	r0, pc, r1, lsl #12
    3a64:	06010402 	streq	r0, [r1], -r2, lsl #8
    3a68:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3a6c:	04020003 	streq	r0, [r2], #-3
    3a70:	0dcf0301 	stcleq	3, cr0, [pc, #4]	; 3a7c <_Min_Heap_Size+0x327c>
    3a74:	04020001 	streq	r0, [r2], #-1
    3a78:	02002e01 	andeq	r2, r0, #1, 28
    3a7c:	01060104 	tsteq	r6, r4, lsl #2
    3a80:	01040200 	mrseq	r0, R12_usr
    3a84:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    3a88:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3a8c:	00010104 	andeq	r0, r1, r4, lsl #2
    3a90:	01010402 	tsteq	r1, r2, lsl #8
    3a94:	1f050204 	svcne	0x00050204
    3a98:	01040200 	mrseq	r0, R12_usr
    3a9c:	2071f803 	rsbscs	pc, r1, r3, lsl #16
    3aa0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3aa4:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3aa8:	04020004 	streq	r0, [r2], #-4
    3aac:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3ab0:	2e060104 	adfcss	f0, f6, f4
    3ab4:	01040200 	mrseq	r0, R12_usr
    3ab8:	02002f06 	andeq	r2, r0, #6, 30
    3abc:	01060104 	tsteq	r6, r4, lsl #2
    3ac0:	03050104 	movweq	r0, #20740	; 0x5104
    3ac4:	01040200 	mrseq	r0, R12_usr
    3ac8:	010e8303 	tsteq	lr, r3, lsl #6
    3acc:	01040200 	mrseq	r0, R12_usr
    3ad0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3ad4:	02001f05 	andeq	r1, r0, #5, 30
    3ad8:	ab030104 	blge	c3ef0 <_Min_Heap_Size+0xc36f0>
    3adc:	04050172 	streq	r0, [r5], #-370	; 0xfffffe8e
    3ae0:	01040200 	mrseq	r0, R12_usr
    3ae4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3ae8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3aec:	20060104 	andcs	r0, r6, r4, lsl #2
    3af0:	01040200 	mrseq	r0, R12_usr
    3af4:	02002f06 	andeq	r2, r0, #6, 30
    3af8:	01060104 	tsteq	r6, r4, lsl #2
    3afc:	03050104 	movweq	r0, #20740	; 0x5104
    3b00:	01040200 	mrseq	r0, R12_usr
    3b04:	010dd003 	tsteq	sp, r3
    3b08:	02040200 	andeq	r0, r4, #0, 4
    3b0c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    3b10:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    3b14:	0402000c 	streq	r0, [r2], #-12
    3b18:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    3b1c:	04020006 	streq	r0, [r2], #-6
    3b20:	05052002 	streq	r2, [r5, #-2]
    3b24:	02040200 	andeq	r0, r4, #0, 4
    3b28:	03053006 	movweq	r3, #20486	; 0x5006
    3b2c:	02040200 	andeq	r0, r4, #0, 4
    3b30:	00070516 	andeq	r0, r7, r6, lsl r5
    3b34:	06020402 	streq	r0, [r2], -r2, lsl #8
    3b38:	00060501 	andeq	r0, r6, r1, lsl #10
    3b3c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    3b40:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3b44:	3e060104 	adfccs	f0, f6, f4
    3b48:	01040200 	mrseq	r0, R12_usr
    3b4c:	04020001 	streq	r0, [r2], #-1
    3b50:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3b54:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    3b58:	001f0502 	andseq	r0, pc, r2, lsl #10
    3b5c:	03010402 	movweq	r0, #5122	; 0x1402
    3b60:	052071ed 	streq	r7, [r0, #-493]!	; 0xfffffe13
    3b64:	04020005 	streq	r0, [r2], #-5
    3b68:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    3b6c:	01040200 	mrseq	r0, R12_usr
    3b70:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3b74:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3b78:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b7c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3b80:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3b84:	00050501 	andeq	r0, r5, r1, lsl #10
    3b88:	03010402 	movweq	r0, #5122	; 0x1402
    3b8c:	00010e8e 	andeq	r0, r1, lr, lsl #29
    3b90:	06010402 	streq	r0, [r1], -r2, lsl #8
    3b94:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3b98:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3b9c:	72a00301 	adcvc	r0, r0, #67108864	; 0x4000000
    3ba0:	00040501 	andeq	r0, r4, r1, lsl #10
    3ba4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3ba8:	01040200 	mrseq	r0, R12_usr
    3bac:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3bb0:	00200601 	eoreq	r0, r0, r1, lsl #12
    3bb4:	06010402 	streq	r0, [r1], -r2, lsl #8
    3bb8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3bbc:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3bc0:	00050501 	andeq	r0, r5, r1, lsl #10
    3bc4:	03010402 	movweq	r0, #5122	; 0x1402
    3bc8:	00010ddb 	ldrdeq	r0, [r1], -fp
    3bcc:	06020402 	streq	r0, [r2], -r2, lsl #8
    3bd0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3bd4:	0e051502 	cfsh32eq	mvfx1, mvfx5, #2
    3bd8:	02040200 	andeq	r0, r4, #0, 4
    3bdc:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3be0:	02040200 	andeq	r0, r4, #0, 4
    3be4:	06070520 	streq	r0, [r7], -r0, lsr #10
    3be8:	06280524 	strteq	r0, [r8], -r4, lsr #10
    3bec:	06070501 	streq	r0, [r7], -r1, lsl #10
    3bf0:	060b0531 			; <UNDEFINED> instruction: 0x060b0531
    3bf4:	0a052001 	beq	14bc00 <_Min_Heap_Size+0x14b400>
    3bf8:	0609052e 	streq	r0, [r9], -lr, lsr #10
    3bfc:	060e0523 	streq	r0, [lr], -r3, lsr #10
    3c00:	20160501 	andscs	r0, r6, r1, lsl #10
    3c04:	05200905 	streq	r0, [r0, #-2309]!	; 0xfffff6fb
    3c08:	04020005 	streq	r0, [r2], #-5
    3c0c:	6d030601 	stcvs	6, cr0, [r3, #-4]
    3c10:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3c14:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3c18:	00010104 	andeq	r0, r1, r4, lsl #2
    3c1c:	01010402 	tsteq	r1, r2, lsl #8
    3c20:	1f050204 	svcne	0x00050204
    3c24:	01040200 	mrseq	r0, R12_usr
    3c28:	2071f303 	rsbscs	pc, r1, r3, lsl #6
    3c2c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3c30:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    3c34:	04020004 	streq	r0, [r2], #-4
    3c38:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3c3c:	2e060104 	adfcss	f0, f6, f4
    3c40:	01040200 	mrseq	r0, R12_usr
    3c44:	02002f06 	andeq	r2, r0, #6, 30
    3c48:	01060104 	tsteq	r6, r4, lsl #2
    3c4c:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3c50:	01040200 	mrseq	r0, R12_usr
    3c54:	010e8803 	tsteq	lr, r3, lsl #16
    3c58:	01040200 	mrseq	r0, R12_usr
    3c5c:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    3c60:	02001f05 	andeq	r1, r0, #5, 30
    3c64:	a6030104 	strge	r0, [r3], -r4, lsl #2
    3c68:	04050172 	streq	r0, [r5], #-370	; 0xfffffe8e
    3c6c:	01040200 	mrseq	r0, R12_usr
    3c70:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3c74:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    3c78:	20060104 	andcs	r0, r6, r4, lsl #2
    3c7c:	01040200 	mrseq	r0, R12_usr
    3c80:	02002f06 	andeq	r2, r0, #6, 30
    3c84:	01060104 	tsteq	r6, r4, lsl #2
    3c88:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    3c8c:	01040200 	mrseq	r0, R12_usr
    3c90:	010dd503 	tsteq	sp, r3, lsl #10
    3c94:	01040200 	mrseq	r0, R12_usr
    3c98:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    3c9c:	05011903 	streq	r1, [r1, #-2307]	; 0xfffff6fd
    3ca0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    3ca4:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
    3ca8:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    3cac:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
    3cb0:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    3cb4:	06280607 	strteq	r0, [r8], -r7, lsl #12
    3cb8:	06050520 	streq	r0, [r5], -r0, lsr #10
    3cbc:	06180543 	ldreq	r0, [r8], -r3, asr #10
    3cc0:	06050501 	streq	r0, [r5], -r1, lsl #10
    3cc4:	06140531 			; <UNDEFINED> instruction: 0x06140531
    3cc8:	06050501 	streq	r0, [r5], -r1, lsl #10
    3ccc:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    3cd0:	06050501 	streq	r0, [r5], -r1, lsl #10
    3cd4:	05200628 	streq	r0, [r0, #-1576]!	; 0xfffff9d8
    3cd8:	05320603 	ldreq	r0, [r2, #-1539]!	; 0xfffff9fd
    3cdc:	2e130601 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx1
    3ce0:	01000202 	tsteq	r0, r2, lsl #4
    3ce4:	00010501 	andeq	r0, r1, r1, lsl #10
    3ce8:	00000205 	andeq	r0, r0, r5, lsl #4
    3cec:	af030000 	svcge	0x00030000
    3cf0:	0106011b 	tsteq	r6, fp, lsl r1
    3cf4:	21060305 	tstcs	r6, r5, lsl #6
    3cf8:	01061705 	tsteq	r6, r5, lsl #14
    3cfc:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    3d00:	01061605 	tsteq	r6, r5, lsl #12
    3d04:	31060305 	tstcc	r6, r5, lsl #6
    3d08:	01061205 	tsteq	r6, r5, lsl #4
    3d0c:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    3d10:	01061805 	tsteq	r6, r5, lsl #16
    3d14:	28060305 	stmdacs	r6, {r0, r2, r8, r9}
    3d18:	30060105 	andcc	r0, r6, r5, lsl #2
    3d1c:	01000102 	tsteq	r0, r2, lsl #2
    3d20:	00010501 	andeq	r0, r1, r1, lsl #10
    3d24:	0d400205 	sfmeq	f0, 2, [r0, #-20]	; 0xffffffec
    3d28:	99030800 	stmdbls	r3, {fp}
    3d2c:	03050115 	movweq	r0, #20757	; 0x5115
    3d30:	01051314 	tsteq	r5, r4, lsl r3
    3d34:	01021706 	tsteq	r2, r6, lsl #14
    3d38:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3d3c:	02050001 	andeq	r0, r5, #1
    3d40:	08000d42 	stmdaeq	r0, {r1, r6, r8, sl, fp}
    3d44:	011c8a03 	tsteq	ip, r3, lsl #20
    3d48:	13130305 	tstne	r3, #335544320	; 0x14000000
    3d4c:	060c0515 			; <UNDEFINED> instruction: 0x060c0515
    3d50:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
    3d54:	30060505 	andcc	r0, r6, r5, lsl #10
    3d58:	01061505 	tsteq	r6, r5, lsl #10
    3d5c:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    3d60:	09030607 	stmdbeq	r3, {r0, r1, r2, r9, sl}
    3d64:	0612053c 			; <UNDEFINED> instruction: 0x0612053c
    3d68:	06070501 	streq	r0, [r7], -r1, lsl #10
    3d6c:	0a051421 	beq	148df8 <_Min_Heap_Size+0x1485f8>
    3d70:	3a050106 	bcc	144190 <_Min_Heap_Size+0x143990>
    3d74:	01040200 	mrseq	r0, R12_usr
    3d78:	007c053c 	rsbseq	r0, ip, ip, lsr r5
    3d7c:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    3d80:	02006d05 	andeq	r6, r0, #320	; 0x140
    3d84:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    3d88:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    3d8c:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    3d90:	15052030 	strne	r2, [r5, #-48]	; 0xffffffd0
    3d94:	06070520 	streq	r0, [r7], -r0, lsr #10
    3d98:	06190526 	ldreq	r0, [r9], -r6, lsr #10
    3d9c:	06050501 	streq	r0, [r5], -r1, lsl #10
    3da0:	0610053f 			; <UNDEFINED> instruction: 0x0610053f
    3da4:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
    3da8:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    3dac:	3c620301 	stclcc	3, cr0, [r2], #-4
    3db0:	03060705 	movweq	r0, #26373	; 0x6705
    3db4:	5b5b2e21 	blpl	16cf640 <_Min_Heap_Size+0x16cee40>
    3db8:	0616055b 			; <UNDEFINED> instruction: 0x0616055b
    3dbc:	06070501 	streq	r0, [r7], -r1, lsl #10
    3dc0:	061a053f 			; <UNDEFINED> instruction: 0x061a053f
    3dc4:	06070501 	streq	r0, [r7], -r1, lsl #10
    3dc8:	06100532 			; <UNDEFINED> instruction: 0x06100532
    3dcc:	200a0501 	andcs	r0, sl, r1, lsl #10
    3dd0:	31060905 	tstcc	r6, r5, lsl #18
    3dd4:	01061e05 	tsteq	r6, r5, lsl #28
    3dd8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    3ddc:	31060104 	tstcc	r6, r4, lsl #2
    3de0:	01040200 	mrseq	r0, R12_usr
    3de4:	04020001 	streq	r0, [r2], #-1
    3de8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    3dec:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    3df0:	001f0502 	andseq	r0, pc, r2, lsl #10
    3df4:	03010402 	movweq	r0, #5122	; 0x1402
    3df8:	0520679a 	streq	r6, [r0, #-1946]!	; 0xfffff866
    3dfc:	04020005 	streq	r0, [r2], #-5
    3e00:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    3e04:	01040200 	mrseq	r0, R12_usr
    3e08:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3e0c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    3e10:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e14:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3e18:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3e1c:	00090501 	andeq	r0, r9, r1, lsl #10
    3e20:	03010402 	movweq	r0, #5122	; 0x1402
    3e24:	000118e1 	andeq	r1, r1, r1, ror #17
    3e28:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e2c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    3e30:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    3e34:	67cd0301 	strbvs	r0, [sp, r1, lsl #6]
    3e38:	00040501 	andeq	r0, r4, r1, lsl #10
    3e3c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    3e40:	01040200 	mrseq	r0, R12_usr
    3e44:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    3e48:	00200601 	eoreq	r0, r0, r1, lsl #12
    3e4c:	06010402 	streq	r0, [r1], -r2, lsl #8
    3e50:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    3e54:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    3e58:	00090501 	andeq	r0, r9, r1, lsl #10
    3e5c:	03010402 	movweq	r0, #5122	; 0x1402
    3e60:	000118ae 	andeq	r1, r1, lr, lsr #17
    3e64:	06020402 	streq	r0, [r2], -r2, lsl #8
    3e68:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3e6c:	0d051502 	cfstr32eq	mvfx1, [r5, #-8]
    3e70:	02040200 	andeq	r0, r4, #0, 4
    3e74:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    3e78:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    3e7c:	0402000c 	streq	r0, [r2], #-12
    3e80:	0b052002 	bleq	14be90 <_Min_Heap_Size+0x14b690>
    3e84:	2e013f06 	cdpcs	15, 0, cr3, cr1, cr6, {0}
    3e88:	02002e2e 	andeq	r2, r0, #736	; 0x2e0
    3e8c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    3e90:	04020009 	streq	r0, [r2], #-9
    3e94:	07051a01 	streq	r1, [r5, -r1, lsl #20]
    3e98:	053c0f03 	ldreq	r0, [ip, #-3843]!	; 0xfffff0fd
    3e9c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    3ea0:	47052801 	strmi	r2, [r5, -r1, lsl #16]
    3ea4:	01040200 	mrseq	r0, R12_usr
    3ea8:	3c7fab03 			; <UNDEFINED> instruction: 0x3c7fab03
    3eac:	02003805 	andeq	r3, r0, #327680	; 0x50000
    3eb0:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    3eb4:	13300607 	teqne	r0, #7340032	; 0x700000
    3eb8:	01061305 	tsteq	r6, r5, lsl #6
    3ebc:	21060705 	tstcs	r6, r5, lsl #14
    3ec0:	01062605 	tsteq	r6, r5, lsl #12
    3ec4:	05203005 	streq	r3, [r0, #-5]!
    3ec8:	14052016 	strne	r2, [r5], #-22	; 0xffffffea
    3ecc:	0607052e 	streq	r0, [r7], -lr, lsr #10
    3ed0:	06190521 	ldreq	r0, [r9], -r1, lsr #10
    3ed4:	06090501 	streq	r0, [r9], -r1, lsl #10
    3ed8:	054a0d03 	strbeq	r0, [sl, #-3331]	; 0xfffff2fd
    3edc:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    3ee0:	17052030 	smladxne	r5, r0, r0, r2
    3ee4:	2e150520 	cfmul64cs	mvdx0, mvdx5, mvdx0
    3ee8:	03060905 	movweq	r0, #26885	; 0x6905
    3eec:	2e062e37 	mcrcs	14, 0, r2, cr6, cr7, {1}
    3ef0:	0a030c05 	beq	c6f0c <_Min_Heap_Size+0xc670c>
    3ef4:	051c2020 	ldreq	r2, [ip, #-32]	; 0xffffffe0
    3ef8:	01022601 	tsteq	r2, r1, lsl #12
    3efc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    3f00:	02050001 	andeq	r0, r5, #1
    3f04:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
    3f08:	0112ae03 	tsteq	r2, r3, lsl #28
    3f0c:	03050106 	movweq	r0, #20742	; 0x5106
    3f10:	19053d06 	stmdbne	r5, {r1, r2, r8, sl, fp, ip, sp}
    3f14:	0c050106 	stfeqs	f0, [r5], {6}
    3f18:	06030520 	streq	r0, [r3], -r0, lsr #10
    3f1c:	060c0521 	streq	r0, [ip], -r1, lsr #10
    3f20:	06030501 	streq	r0, [r3], -r1, lsl #10
    3f24:	060c0521 	streq	r0, [ip], -r1, lsr #10
    3f28:	06030501 	streq	r0, [r3], -r1, lsl #10
    3f2c:	13151321 	tstne	r5, #-2080374784	; 0x84000000
    3f30:	01060605 	tsteq	r6, r5, lsl #12
    3f34:	0605052e 	streq	r0, [r5], -lr, lsr #10
    3f38:	06080523 	streq	r0, [r8], -r3, lsr #10
    3f3c:	002f0501 	eoreq	r0, pc, r1, lsl #10
    3f40:	3c010402 	cfstrscc	mvf0, [r1], {2}
    3f44:	44060305 	strmi	r0, [r6], #-773	; 0xfffffcfb
    3f48:	01060605 	tsteq	r6, r5, lsl #12
    3f4c:	02001d05 	andeq	r1, r0, #320	; 0x140
    3f50:	00200104 	eoreq	r0, r0, r4, lsl #2
    3f54:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    3f58:	05212105 	streq	r2, [r1, #-261]!	; 0xfffffefb
    3f5c:	eb030603 	bl	c5770 <_Min_Heap_Size+0xc4f70>
    3f60:	0d053c00 	stceq	12, cr3, [r5, #-0]
    3f64:	06050106 	streq	r0, [r5], -r6, lsl #2
    3f68:	06030520 	streq	r0, [r3], -r0, lsr #10
    3f6c:	2e00dd03 	cdpcs	13, 0, cr13, cr0, cr3, {0}
    3f70:	01060605 	tsteq	r6, r5, lsl #12
    3f74:	02002c05 	andeq	r2, r0, #1280	; 0x500
    3f78:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    3f7c:	05510603 	ldrbeq	r0, [r1, #-1539]	; 0xfffff9fd
    3f80:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    3f84:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    3f88:	01053c01 	tsteq	r5, r1, lsl #24
    3f8c:	0607054f 	streq	r0, [r7], -pc, asr #10
    3f90:	2e7ea503 	cdpcs	5, 7, cr10, cr14, cr3, {0}
    3f94:	2f062006 	svccs	0x00062006
    3f98:	09030505 	stmdbeq	r3, {r0, r2, r8, sl}
    3f9c:	06080520 	streq	r0, [r8], -r0, lsr #10
    3fa0:	002d0501 	eoreq	r0, sp, r1, lsl #10
    3fa4:	3c010402 	cfstrscc	mvf0, [r1], {2}
    3fa8:	3e060705 	cdpcc	7, 0, cr0, cr6, cr5, {0}
    3fac:	01061805 	tsteq	r6, r5, lsl #16
    3fb0:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    3fb4:	01060805 	tsteq	r6, r5, lsl #16
    3fb8:	02002d05 	andeq	r2, r0, #320	; 0x140
    3fbc:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    3fc0:	05220607 	streq	r0, [r2, #-1543]!	; 0xfffff9f9
    3fc4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    3fc8:	054e0605 	strbeq	r0, [lr, #-1541]	; 0xfffff9fb
    3fcc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    3fd0:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
    3fd4:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    3fd8:	18052206 	stmdane	r5, {r1, r2, r9, sp}
    3fdc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3fe0:	08054e06 	stmdaeq	r5, {r1, r2, r9, sl, fp, lr}
    3fe4:	2e050106 	adfcss	f0, f5, f6
    3fe8:	01040200 	mrseq	r0, R12_usr
    3fec:	3d32053c 	cfldr32cc	mvfx0, [r2, #-240]!	; 0xffffff10
    3ff0:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    3ff4:	01061805 	tsteq	r6, r5, lsl #16
    3ff8:	4e060505 	cfsh32mi	mvfx0, mvfx6, #5
    3ffc:	01060e05 	tsteq	r6, r5, lsl #28
    4000:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    4004:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
    4008:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    400c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    4010:	07053c01 	streq	r3, [r5, -r1, lsl #24]
    4014:	14054306 	strne	r4, [r5], #-774	; 0xfffffcfa
    4018:	07050106 	streq	r0, [r5, -r6, lsl #2]
    401c:	12054b06 	andne	r4, r5, #6144	; 0x1800
    4020:	0a050106 	beq	144440 <_Min_Heap_Size+0x143c40>
    4024:	003e0520 	eorseq	r0, lr, r0, lsr #10
    4028:	3c010402 	cfstrscc	mvf0, [r1], {2}
    402c:	25060905 	strcs	r0, [r6, #-2309]	; 0xfffff6fb
    4030:	060d053f 			; <UNDEFINED> instruction: 0x060d053f
    4034:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    4038:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    403c:	3e060104 	adfccs	f0, f6, f4
    4040:	01040200 	mrseq	r0, R12_usr
    4044:	04020001 	streq	r0, [r2], #-1
    4048:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    404c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4050:	001f0502 	andseq	r0, pc, r2, lsl #10
    4054:	03010402 	movweq	r0, #5122	; 0x1402
    4058:	052070e7 	streq	r7, [r0, #-231]!	; 0xffffff19
    405c:	04020005 	streq	r0, [r2], #-5
    4060:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4064:	01040200 	mrseq	r0, R12_usr
    4068:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    406c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4070:	06010402 	streq	r0, [r1], -r2, lsl #8
    4074:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4078:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    407c:	000b0501 	andeq	r0, fp, r1, lsl #10
    4080:	03010402 	movweq	r0, #5122	; 0x1402
    4084:	00010f94 	muleq	r1, r4, pc	; <UNPREDICTABLE>
    4088:	06010402 	streq	r0, [r1], -r2, lsl #8
    408c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4090:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4094:	719a0301 	orrsvc	r0, sl, r1, lsl #6
    4098:	00040501 	andeq	r0, r4, r1, lsl #10
    409c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    40a0:	01040200 	mrseq	r0, R12_usr
    40a4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    40a8:	00200601 	eoreq	r0, r0, r1, lsl #12
    40ac:	06010402 	streq	r0, [r1], -r2, lsl #8
    40b0:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    40b4:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    40b8:	000b0501 	andeq	r0, fp, r1, lsl #10
    40bc:	03010402 	movweq	r0, #5122	; 0x1402
    40c0:	00010ee1 	andeq	r0, r1, r1, ror #29
    40c4:	06020402 	streq	r0, [r2], -r2, lsl #8
    40c8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    40cc:	14051502 	strne	r1, [r5], #-1282	; 0xfffffafe
    40d0:	02040200 	andeq	r0, r4, #0, 4
    40d4:	0e050106 	adfeqs	f0, f5, f6
    40d8:	02040200 	andeq	r0, r4, #0, 4
    40dc:	060d0520 	streq	r0, [sp], -r0, lsr #10
    40e0:	062e0524 	strteq	r0, [lr], -r4, lsr #10
    40e4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    40e8:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    40ec:	3c100501 	cfldr32cc	mvfx0, [r0], {1}
    40f0:	31060f05 	tstcc	r6, r5, lsl #30
    40f4:	01061405 	tsteq	r6, r5, lsl #8
    40f8:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    40fc:	0905200f 	stmdbeq	r5, {r0, r1, r2, r3, sp}
    4100:	2e650306 	cdpcs	3, 6, cr0, cr5, cr6, {0}
    4104:	052e2006 	streq	r2, [lr, #-6]!
    4108:	2603060d 	strcs	r0, [r3], -sp, lsl #12
    410c:	030b0520 	movweq	r0, #46368	; 0xb520
    4110:	09054a0c 	stmdbeq	r5, {r2, r3, r9, fp, lr}
    4114:	3f4a0d03 	svccc	0x004a0d03
    4118:	01061a05 	tsteq	r6, r5, lsl #20
    411c:	31060505 	tstcc	r6, r5, lsl #10
    4120:	26060705 	strcs	r0, [r6], -r5, lsl #14
    4124:	0605054b 	streq	r0, [r5], -fp, asr #10
    4128:	2006014c 	andcs	r0, r6, ip, asr #2
    412c:	2e2e2006 	cdpcs	0, 2, cr2, cr14, cr6, {0}
    4130:	09051520 	stmdbeq	r5, {r5, r8, sl, ip}
    4134:	08050106 	stmdaeq	r5, {r1, r2, r8}
    4138:	06070520 	streq	r0, [r7], -r0, lsr #10
    413c:	06320542 	ldrteq	r0, [r2], -r2, asr #10
    4140:	3c100501 	cfldr32cc	mvfx0, [r0], {1}
    4144:	21060705 	tstcs	r6, r5, lsl #14
    4148:	01060a05 	tsteq	r6, r5, lsl #20
    414c:	053d2b05 	ldreq	r2, [sp, #-2821]!	; 0xfffff4fb
    4150:	0905200b 	stmdbeq	r5, {r0, r1, r3, sp}
    4154:	1c053f06 	stcne	15, cr3, [r5], {6}
    4158:	09050106 	stmdbeq	r5, {r1, r2, r8}
    415c:	20052306 	andcs	r2, r5, r6, lsl #6
    4160:	0c050106 	stfeqs	f0, [r5], {6}
    4164:	000b0520 	andeq	r0, fp, r0, lsr #10
    4168:	06010402 	streq	r0, [r1], -r2, lsl #8
    416c:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    4170:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4174:	00010104 	andeq	r0, r1, r4, lsl #2
    4178:	01010402 	tsteq	r1, r2, lsl #8
    417c:	1f050204 	svcne	0x00050204
    4180:	01040200 	mrseq	r0, R12_usr
    4184:	20709503 	rsbscs	r9, r0, r3, lsl #10
    4188:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    418c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4190:	04020004 	streq	r0, [r2], #-4
    4194:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4198:	2e060104 	adfcss	f0, f6, f4
    419c:	01040200 	mrseq	r0, R12_usr
    41a0:	02002f06 	andeq	r2, r0, #6, 30
    41a4:	01060104 	tsteq	r6, r4, lsl #2
    41a8:	0b050104 	bleq	1445c0 <_Min_Heap_Size+0x143dc0>
    41ac:	01040200 	mrseq	r0, R12_usr
    41b0:	010fe603 	tsteq	pc, r3, lsl #12
    41b4:	01040200 	mrseq	r0, R12_usr
    41b8:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    41bc:	02001f05 	andeq	r1, r0, #5, 30
    41c0:	c8030104 	stmdagt	r3, {r2, r8}
    41c4:	04050170 	streq	r0, [r5], #-368	; 0xfffffe90
    41c8:	01040200 	mrseq	r0, R12_usr
    41cc:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    41d0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    41d4:	20060104 	andcs	r0, r6, r4, lsl #2
    41d8:	01040200 	mrseq	r0, R12_usr
    41dc:	02002f06 	andeq	r2, r0, #6, 30
    41e0:	01060104 	tsteq	r6, r4, lsl #2
    41e4:	0b050104 	bleq	1445fc <_Min_Heap_Size+0x143dfc>
    41e8:	01040200 	mrseq	r0, R12_usr
    41ec:	010fb303 	tsteq	pc, r3, lsl #6
    41f0:	01040200 	mrseq	r0, R12_usr
    41f4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    41f8:	00010601 	andeq	r0, r1, r1, lsl #12
    41fc:	13010402 	movwne	r0, #5122	; 0x1402
    4200:	01040200 	mrseq	r0, R12_usr
    4204:	04020001 	streq	r0, [r2], #-1
    4208:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    420c:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4210:	001f0502 	andseq	r0, pc, r2, lsl #10
    4214:	03010402 	movweq	r0, #5122	; 0x1402
    4218:	05207094 	streq	r7, [r0, #-148]!	; 0xffffff6c
    421c:	04020005 	streq	r0, [r2], #-5
    4220:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4224:	01040200 	mrseq	r0, R12_usr
    4228:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    422c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4230:	06010402 	streq	r0, [r1], -r2, lsl #8
    4234:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4238:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    423c:	000b0501 	andeq	r0, fp, r1, lsl #10
    4240:	03010402 	movweq	r0, #5122	; 0x1402
    4244:	00010fe7 	andeq	r0, r1, r7, ror #31
    4248:	06010402 	streq	r0, [r1], -r2, lsl #8
    424c:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4250:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4254:	70c70301 	sbcvc	r0, r7, r1, lsl #6
    4258:	00040501 	andeq	r0, r4, r1, lsl #10
    425c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4260:	01040200 	mrseq	r0, R12_usr
    4264:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4268:	00200601 	eoreq	r0, r0, r1, lsl #12
    426c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4270:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4274:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4278:	000b0501 	andeq	r0, fp, r1, lsl #10
    427c:	03010402 	movweq	r0, #5122	; 0x1402
    4280:	00010fb4 			; <UNDEFINED> instruction: 0x00010fb4
    4284:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    4288:	01040200 	mrseq	r0, R12_usr
    428c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4290:	00160104 	andseq	r0, r6, r4, lsl #2
    4294:	01010402 	tsteq	r1, r2, lsl #8
    4298:	01040200 	mrseq	r0, R12_usr
    429c:	04020001 	streq	r0, [r2], #-1
    42a0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    42a4:	02001f05 	andeq	r1, r0, #5, 30
    42a8:	90030104 	andls	r0, r3, r4, lsl #2
    42ac:	05052070 	streq	r2, [r5, #-112]	; 0xffffff90
    42b0:	01040200 	mrseq	r0, R12_usr
    42b4:	00040514 	andeq	r0, r4, r4, lsl r5
    42b8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    42bc:	01040200 	mrseq	r0, R12_usr
    42c0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    42c4:	2f060104 	svccs	0x00060104
    42c8:	01040200 	mrseq	r0, R12_usr
    42cc:	01040106 	tsteq	r4, r6, lsl #2
    42d0:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    42d4:	eb030104 	bl	c46ec <_Min_Heap_Size+0xc3eec>
    42d8:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    42dc:	2e060104 	adfcss	f0, f6, f4
    42e0:	1f050204 	svcne	0x00050204
    42e4:	01040200 	mrseq	r0, R12_usr
    42e8:	0170c303 	cmneq	r0, r3, lsl #6
    42ec:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    42f0:	00140104 	andseq	r0, r4, r4, lsl #2
    42f4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    42f8:	01040200 	mrseq	r0, R12_usr
    42fc:	02002006 	andeq	r2, r0, #6
    4300:	2f060104 	svccs	0x00060104
    4304:	01040200 	mrseq	r0, R12_usr
    4308:	01040106 	tsteq	r4, r6, lsl #2
    430c:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    4310:	b8030104 	stmdalt	r3, {r2, r8}
    4314:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    4318:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    431c:	02040200 	andeq	r0, r4, #0, 4
    4320:	001a0515 	andseq	r0, sl, r5, lsl r5
    4324:	06020402 	streq	r0, [r2], -r2, lsl #8
    4328:	04020001 	streq	r0, [r2], #-1
    432c:	0b052002 	bleq	14c33c <_Min_Heap_Size+0x14bb3c>
    4330:	02040200 	andeq	r0, r4, #0, 4
    4334:	20052f06 	andcs	r2, r5, r6, lsl #30
    4338:	02040200 	andeq	r0, r4, #0, 4
    433c:	0b050106 	bleq	14475c <_Min_Heap_Size+0x143f5c>
    4340:	01040200 	mrseq	r0, R12_usr
    4344:	02003006 	andeq	r3, r0, #6
    4348:	00010104 	andeq	r0, r1, r4, lsl #2
    434c:	01010402 	tsteq	r1, r2, lsl #8
    4350:	01040200 	mrseq	r0, R12_usr
    4354:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4358:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    435c:	708a0301 	addvc	r0, sl, r1, lsl #6
    4360:	00050520 	andeq	r0, r5, r0, lsr #10
    4364:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4368:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    436c:	00140104 	andseq	r0, r4, r4, lsl #2
    4370:	06010402 	streq	r0, [r1], -r2, lsl #8
    4374:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4378:	002f0601 	eoreq	r0, pc, r1, lsl #12
    437c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4380:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4384:	0402000b 	streq	r0, [r2], #-11
    4388:	0ff10301 	svceq	0x00f10301
    438c:	04020001 	streq	r0, [r2], #-1
    4390:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4394:	001f0502 	andseq	r0, pc, r2, lsl #10
    4398:	03010402 	movweq	r0, #5122	; 0x1402
    439c:	050170bd 	streq	r7, [r1, #-189]	; 0xffffff43
    43a0:	04020004 	streq	r0, [r2], #-4
    43a4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    43a8:	00140104 	andseq	r0, r4, r4, lsl #2
    43ac:	06010402 	streq	r0, [r1], -r2, lsl #8
    43b0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    43b4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    43b8:	06010402 	streq	r0, [r1], -r2, lsl #8
    43bc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    43c0:	0402000b 	streq	r0, [r2], #-11
    43c4:	0fbe0301 	svceq	0x00be0301
    43c8:	04020001 	streq	r0, [r2], #-1
    43cc:	002e0602 	eoreq	r0, lr, r2, lsl #12
    43d0:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    43d4:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    43d8:	01060204 	tsteq	r6, r4, lsl #4
    43dc:	02040200 	andeq	r0, r4, #0, 4
    43e0:	06090520 	streq	r0, [r9], -r0, lsr #10
    43e4:	061c0533 			; <UNDEFINED> instruction: 0x061c0533
    43e8:	06090501 	streq	r0, [r9], -r1, lsl #10
    43ec:	06310535 			; <UNDEFINED> instruction: 0x06310535
    43f0:	20450501 	subcs	r0, r5, r1, lsl #10
    43f4:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    43f8:	065b0607 	ldrbeq	r0, [fp], -r7, lsl #12
    43fc:	05190620 	ldreq	r0, [r9, #-1568]	; 0xfffff9e0
    4400:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    4404:	10052036 	andne	r2, r5, r6, lsr r0
    4408:	0607052e 	streq	r0, [r7], -lr, lsr #10
    440c:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    4410:	2e0a0501 	cfsh32cs	mvfx0, mvfx10, #1
    4414:	053d0b05 	ldreq	r0, [sp, #-2821]!	; 0xfffff4fb
    4418:	04020009 	streq	r0, [r2], #-9
    441c:	003f0601 	eorseq	r0, pc, r1, lsl #12
    4420:	01010402 	tsteq	r1, r2, lsl #8
    4424:	01040200 	mrseq	r0, R12_usr
    4428:	04020001 	streq	r0, [r2], #-1
    442c:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    4430:	02001f05 	andeq	r1, r0, #5, 30
    4434:	ec030104 	stfs	f0, [r3], {4}
    4438:	0505206f 	streq	r2, [r5, #-111]	; 0xffffff91
    443c:	01040200 	mrseq	r0, R12_usr
    4440:	00040514 	andeq	r0, r4, r4, lsl r5
    4444:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4448:	01040200 	mrseq	r0, R12_usr
    444c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4450:	2f060104 	svccs	0x00060104
    4454:	01040200 	mrseq	r0, R12_usr
    4458:	01040106 	tsteq	r4, r6, lsl #2
    445c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4460:	8f030104 	svchi	0x00030104
    4464:	02000110 	andeq	r0, r0, #16, 2
    4468:	2e060104 	adfcss	f0, f6, f4
    446c:	1f050204 	svcne	0x00050204
    4470:	01040200 	mrseq	r0, R12_usr
    4474:	01709f03 	cmneq	r0, r3, lsl #30
    4478:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    447c:	00140104 	andseq	r0, r4, r4, lsl #2
    4480:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4484:	01040200 	mrseq	r0, R12_usr
    4488:	02002006 	andeq	r2, r0, #6
    448c:	2f060104 	svccs	0x00060104
    4490:	01040200 	mrseq	r0, R12_usr
    4494:	01040106 	tsteq	r4, r6, lsl #2
    4498:	02000905 	andeq	r0, r0, #81920	; 0x14000
    449c:	dc030104 	stfles	f0, [r3], {4}
    44a0:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    44a4:	002e0104 	eoreq	r0, lr, r4, lsl #2
    44a8:	06010402 	streq	r0, [r1], -r2, lsl #8
    44ac:	04020001 	streq	r0, [r2], #-1
    44b0:	02001501 	andeq	r1, r0, #4194304	; 0x400000
    44b4:	00010104 	andeq	r0, r1, r4, lsl #2
    44b8:	01010402 	tsteq	r1, r2, lsl #8
    44bc:	01040200 	mrseq	r0, R12_usr
    44c0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    44c4:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    44c8:	6fe90301 	svcvs	0x00e90301
    44cc:	00050520 	andeq	r0, r5, r0, lsr #10
    44d0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    44d4:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    44d8:	00140104 	andseq	r0, r4, r4, lsl #2
    44dc:	06010402 	streq	r0, [r1], -r2, lsl #8
    44e0:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    44e4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    44e8:	06010402 	streq	r0, [r1], -r2, lsl #8
    44ec:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    44f0:	04020009 	streq	r0, [r2], #-9
    44f4:	10920301 	addsne	r0, r2, r1, lsl #6
    44f8:	04020001 	streq	r0, [r2], #-1
    44fc:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4500:	001f0502 	andseq	r0, pc, r2, lsl #10
    4504:	03010402 	movweq	r0, #5122	; 0x1402
    4508:	0501709c 	streq	r7, [r1, #-156]	; 0xffffff64
    450c:	04020004 	streq	r0, [r2], #-4
    4510:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4514:	00140104 	andseq	r0, r4, r4, lsl #2
    4518:	06010402 	streq	r0, [r1], -r2, lsl #8
    451c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4520:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4524:	06010402 	streq	r0, [r1], -r2, lsl #8
    4528:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    452c:	04020009 	streq	r0, [r2], #-9
    4530:	0fdf0301 	svceq	0x00df0301
    4534:	04020001 	streq	r0, [r2], #-1
    4538:	002e0602 	eoreq	r0, lr, r2, lsl #12
    453c:	15020402 	strne	r0, [r2, #-1026]	; 0xfffffbfe
    4540:	02001805 	andeq	r1, r0, #327680	; 0x50000
    4544:	01060204 	tsteq	r6, r4, lsl #4
    4548:	02040200 	andeq	r0, r4, #0, 4
    454c:	00090520 	andeq	r0, r9, r0, lsr #10
    4550:	06020402 	streq	r0, [r2], -r2, lsl #8
    4554:	001e052f 	andseq	r0, lr, pc, lsr #10
    4558:	06020402 	streq	r0, [r2], -r2, lsl #8
    455c:	00090501 	andeq	r0, r9, r1, lsl #10
    4560:	06010402 	streq	r0, [r1], -r2, lsl #8
    4564:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    4568:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    456c:	00010104 	andeq	r0, r1, r4, lsl #2
    4570:	01010402 	tsteq	r1, r2, lsl #8
    4574:	1f050204 	svcne	0x00050204
    4578:	01040200 	mrseq	r0, R12_usr
    457c:	206fe303 	rsbcs	lr, pc, r3, lsl #6
    4580:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4584:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4588:	04020004 	streq	r0, [r2], #-4
    458c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4590:	2e060104 	adfcss	f0, f6, f4
    4594:	01040200 	mrseq	r0, R12_usr
    4598:	02002f06 	andeq	r2, r0, #6, 30
    459c:	01060104 	tsteq	r6, r4, lsl #2
    45a0:	09050104 	stmdbeq	r5, {r2, r8}
    45a4:	01040200 	mrseq	r0, R12_usr
    45a8:	01109803 	tsteq	r0, r3, lsl #16
    45ac:	01040200 	mrseq	r0, R12_usr
    45b0:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    45b4:	02001f05 	andeq	r1, r0, #5, 30
    45b8:	96030104 	strls	r0, [r3], -r4, lsl #2
    45bc:	04050170 	streq	r0, [r5], #-368	; 0xfffffe90
    45c0:	01040200 	mrseq	r0, R12_usr
    45c4:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    45c8:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    45cc:	20060104 	andcs	r0, r6, r4, lsl #2
    45d0:	01040200 	mrseq	r0, R12_usr
    45d4:	02002f06 	andeq	r2, r0, #6, 30
    45d8:	01060104 	tsteq	r6, r4, lsl #2
    45dc:	09050104 	stmdbeq	r5, {r2, r8}
    45e0:	01040200 	mrseq	r0, R12_usr
    45e4:	010fe503 	tsteq	pc, r3, lsl #10
    45e8:	02040200 	andeq	r0, r4, #0, 4
    45ec:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    45f0:	05160204 	ldreq	r0, [r6, #-516]	; 0xfffffdfc
    45f4:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    45f8:	00010602 	andeq	r0, r1, r2, lsl #12
    45fc:	20020402 	andcs	r0, r2, r2, lsl #8
    4600:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4604:	27060204 	strcs	r0, [r6, -r4, lsl #4]
    4608:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    460c:	003f0204 	eorseq	r0, pc, r4, lsl #4
    4610:	06020402 	streq	r0, [r2], -r2, lsl #8
    4614:	06050520 	streq	r0, [r5], -r0, lsr #10
    4618:	06200619 			; <UNDEFINED> instruction: 0x06200619
    461c:	2006262f 	andcs	r2, r6, pc, lsr #12
    4620:	03022f06 	movweq	r2, #12038	; 0x2f06
    4624:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4628:	02050001 	andeq	r0, r5, #1
    462c:	00000000 	andeq	r0, r0, r0
    4630:	0118a003 	tsteq	r8, r3
    4634:	03050106 	movweq	r0, #20742	; 0x5106
    4638:	17052106 	strne	r2, [r5, -r6, lsl #2]
    463c:	03050106 	movweq	r0, #20742	; 0x5106
    4640:	16052406 	strne	r2, [r5], -r6, lsl #8
    4644:	03050106 	movweq	r0, #20742	; 0x5106
    4648:	0c053206 	sfmeq	f3, 4, [r5], {6}
    464c:	06050106 	streq	r0, [r5], -r6, lsl #2
    4650:	06050520 	streq	r0, [r5], -r0, lsr #10
    4654:	052e1203 	streq	r1, [lr, #-515]!	; 0xfffffdfd
    4658:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
    465c:	72030605 	andvc	r0, r3, #5242880	; 0x500000
    4660:	062c0520 	strteq	r0, [ip], -r0, lsr #10
    4664:	20050501 	andcs	r0, r5, r1, lsl #10
    4668:	0001023c 	andeq	r0, r1, ip, lsr r2
    466c:	01050101 	tsteq	r5, r1, lsl #2
    4670:	00020500 	andeq	r0, r2, r0, lsl #10
    4674:	03000000 	movweq	r0, #0
    4678:	060117e2 	streq	r1, [r1], -r2, ror #15
    467c:	06030501 	streq	r0, [r3], -r1, lsl #10
    4680:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
    4684:	06030501 	streq	r0, [r3], -r1, lsl #10
    4688:	060c0523 	streq	r0, [ip], -r3, lsr #10
    468c:	20160501 	andscs	r0, r6, r1, lsl #10
    4690:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    4694:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    4698:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    469c:	04020005 	streq	r0, [r2], #-5
    46a0:	00310601 	eorseq	r0, r1, r1, lsl #12
    46a4:	01010402 	tsteq	r1, r2, lsl #8
    46a8:	01040200 	mrseq	r0, R12_usr
    46ac:	04020001 	streq	r0, [r2], #-1
    46b0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    46b4:	02001f05 	andeq	r1, r0, #5, 30
    46b8:	f0030104 			; <UNDEFINED> instruction: 0xf0030104
    46bc:	0505206b 	streq	r2, [r5, #-107]	; 0xffffff95
    46c0:	01040200 	mrseq	r0, R12_usr
    46c4:	00040514 	andeq	r0, r4, r4, lsl r5
    46c8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    46cc:	01040200 	mrseq	r0, R12_usr
    46d0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    46d4:	2f060104 	svccs	0x00060104
    46d8:	01040200 	mrseq	r0, R12_usr
    46dc:	01040106 	tsteq	r4, r6, lsl #2
    46e0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    46e4:	8b030104 	blhi	c4afc <_Min_Heap_Size+0xc42fc>
    46e8:	02000114 	andeq	r0, r0, #20, 2
    46ec:	2e060104 	adfcss	f0, f6, f4
    46f0:	1f050204 	svcne	0x00050204
    46f4:	01040200 	mrseq	r0, R12_usr
    46f8:	016ca303 	cmneq	ip, r3, lsl #6
    46fc:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4700:	00140104 	andseq	r0, r4, r4, lsl #2
    4704:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4708:	01040200 	mrseq	r0, R12_usr
    470c:	02002006 	andeq	r2, r0, #6
    4710:	2f060104 	svccs	0x00060104
    4714:	01040200 	mrseq	r0, R12_usr
    4718:	01040106 	tsteq	r4, r6, lsl #2
    471c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4720:	d8030104 	stmdale	r3, {r2, r8}
    4724:	02000113 	andeq	r0, r0, #-1073741820	; 0xc0000004
    4728:	002e0104 	eoreq	r0, lr, r4, lsl #2
    472c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4730:	04020001 	streq	r0, [r2], #-1
    4734:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    4738:	00010104 	andeq	r0, r1, r4, lsl #2
    473c:	01010402 	tsteq	r1, r2, lsl #8
    4740:	01040200 	mrseq	r0, R12_usr
    4744:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4748:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    474c:	6bef0301 	blvs	ffbc5358 <_estack+0xdfbbb9b8>
    4750:	00050520 	andeq	r0, r5, r0, lsr #10
    4754:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4758:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    475c:	00140104 	andseq	r0, r4, r4, lsl #2
    4760:	06010402 	streq	r0, [r1], -r2, lsl #8
    4764:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4768:	002f0601 	eoreq	r0, pc, r1, lsl #12
    476c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4770:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4774:	04020005 	streq	r0, [r2], #-5
    4778:	148c0301 	strne	r0, [ip], #769	; 0x301
    477c:	04020001 	streq	r0, [r2], #-1
    4780:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4784:	001f0502 	andseq	r0, pc, r2, lsl #10
    4788:	03010402 	movweq	r0, #5122	; 0x1402
    478c:	05016ca2 	streq	r6, [r1, #-3234]	; 0xfffff35e
    4790:	04020004 	streq	r0, [r2], #-4
    4794:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4798:	00140104 	andseq	r0, r4, r4, lsl #2
    479c:	06010402 	streq	r0, [r1], -r2, lsl #8
    47a0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    47a4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    47a8:	06010402 	streq	r0, [r1], -r2, lsl #8
    47ac:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    47b0:	04020005 	streq	r0, [r2], #-5
    47b4:	13d90301 	bicsne	r0, r9, #67108864	; 0x4000000
    47b8:	04020001 	streq	r0, [r2], #-1
    47bc:	02002e01 	andeq	r2, r0, #1, 28
    47c0:	01060104 	tsteq	r6, r4, lsl #2
    47c4:	01040200 	mrseq	r0, R12_usr
    47c8:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    47cc:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    47d0:	00010104 	andeq	r0, r1, r4, lsl #2
    47d4:	01010402 	tsteq	r1, r2, lsl #8
    47d8:	1f050204 	svcne	0x00050204
    47dc:	01040200 	mrseq	r0, R12_usr
    47e0:	206beb03 	rsbcs	lr, fp, r3, lsl #22
    47e4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    47e8:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    47ec:	04020004 	streq	r0, [r2], #-4
    47f0:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    47f4:	2e060104 	adfcss	f0, f6, f4
    47f8:	01040200 	mrseq	r0, R12_usr
    47fc:	02002f06 	andeq	r2, r0, #6, 30
    4800:	01060104 	tsteq	r6, r4, lsl #2
    4804:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    4808:	01040200 	mrseq	r0, R12_usr
    480c:	01149003 	tsteq	r4, r3
    4810:	01040200 	mrseq	r0, R12_usr
    4814:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    4818:	02001f05 	andeq	r1, r0, #5, 30
    481c:	9e030104 	adflss	f0, f3, f4
    4820:	0405016c 	streq	r0, [r5], #-364	; 0xfffffe94
    4824:	01040200 	mrseq	r0, R12_usr
    4828:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    482c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4830:	20060104 	andcs	r0, r6, r4, lsl #2
    4834:	01040200 	mrseq	r0, R12_usr
    4838:	02002f06 	andeq	r2, r0, #6, 30
    483c:	01060104 	tsteq	r6, r4, lsl #2
    4840:	05050104 	streq	r0, [r5, #-260]	; 0xfffffefc
    4844:	01040200 	mrseq	r0, R12_usr
    4848:	0113dd03 	tsteq	r3, r3, lsl #26
    484c:	02040200 	andeq	r0, r4, #0, 4
    4850:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4854:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    4858:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    485c:	00010602 	andeq	r0, r1, r2, lsl #12
    4860:	20020402 	andcs	r0, r2, r2, lsl #8
    4864:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4868:	31060204 	tstcc	r6, r4, lsl #4
    486c:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    4870:	01060204 	tsteq	r6, r4, lsl #4
    4874:	02000805 	andeq	r0, r0, #327680	; 0x50000
    4878:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    487c:	04020007 	streq	r0, [r2], #-7
    4880:	05300602 	ldreq	r0, [r0, #-1538]!	; 0xfffff9fe
    4884:	04020003 	streq	r0, [r2], #-3
    4888:	16051802 	strne	r1, [r5], -r2, lsl #16
    488c:	02040200 	andeq	r0, r4, #0, 4
    4890:	03050106 	movweq	r0, #20742	; 0x5106
    4894:	02040200 	andeq	r0, r4, #0, 4
    4898:	0c053206 	sfmeq	f3, 4, [r5], {6}
    489c:	02040200 	andeq	r0, r4, #0, 4
    48a0:	06050106 	streq	r0, [r5], -r6, lsl #2
    48a4:	02040200 	andeq	r0, r4, #0, 4
    48a8:	06050520 	streq	r0, [r5], -r0, lsr #10
    48ac:	052e1203 	streq	r1, [lr, #-515]!	; 0xfffffdfd
    48b0:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
    48b4:	04020007 	streq	r0, [r2], #-7
    48b8:	61030601 	tstvs	r3, r1, lsl #12
    48bc:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    48c0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    48c4:	00010104 	andeq	r0, r1, r4, lsl #2
    48c8:	01010402 	tsteq	r1, r2, lsl #8
    48cc:	1f050204 	svcne	0x00050204
    48d0:	01040200 	mrseq	r0, R12_usr
    48d4:	206be303 	rsbcs	lr, fp, r3, lsl #6
    48d8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    48dc:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    48e0:	04020004 	streq	r0, [r2], #-4
    48e4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    48e8:	2e060104 	adfcss	f0, f6, f4
    48ec:	01040200 	mrseq	r0, R12_usr
    48f0:	02002f06 	andeq	r2, r0, #6, 30
    48f4:	01060104 	tsteq	r6, r4, lsl #2
    48f8:	07050104 	streq	r0, [r5, -r4, lsl #2]
    48fc:	01040200 	mrseq	r0, R12_usr
    4900:	01149803 	tsteq	r4, r3, lsl #16
    4904:	01040200 	mrseq	r0, R12_usr
    4908:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    490c:	02001f05 	andeq	r1, r0, #5, 30
    4910:	96030104 	strls	r0, [r3], -r4, lsl #2
    4914:	0405016c 	streq	r0, [r5], #-364	; 0xfffffe94
    4918:	01040200 	mrseq	r0, R12_usr
    491c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4920:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4924:	20060104 	andcs	r0, r6, r4, lsl #2
    4928:	01040200 	mrseq	r0, R12_usr
    492c:	02002f06 	andeq	r2, r0, #6, 30
    4930:	01060104 	tsteq	r6, r4, lsl #2
    4934:	07050104 	streq	r0, [r5, -r4, lsl #2]
    4938:	01040200 	mrseq	r0, R12_usr
    493c:	0113e503 	tsteq	r3, r3, lsl #10
    4940:	01040200 	mrseq	r0, R12_usr
    4944:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    4948:	06011103 	streq	r1, [r1], -r3, lsl #2
    494c:	0001023c 	andeq	r0, r1, ip, lsr r2
    4950:	01050101 	tsteq	r5, r1, lsl #2
    4954:	00020500 	andeq	r0, r2, r0, lsl #10
    4958:	03000000 	movweq	r0, #0
    495c:	060115c1 	streq	r1, [r1], -r1, asr #11
    4960:	06030501 	streq	r0, [r3], -r1, lsl #10
    4964:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    4968:	004a0601 	subeq	r0, sl, r1, lsl #12
    496c:	4a020402 	bmi	8597c <_Min_Heap_Size+0x8517c>
    4970:	03040200 	movweq	r0, #16896	; 0x4200
    4974:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4978:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    497c:	004a0504 	subeq	r0, sl, r4, lsl #10
    4980:	4a060402 	bmi	185990 <_Min_Heap_Size+0x185190>
    4984:	06040200 	streq	r0, [r4], -r0, lsl #4
    4988:	0131063c 	teqeq	r1, ip, lsr r6
    498c:	02040200 	andeq	r0, r4, #0, 4
    4990:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4994:	02003c02 	andeq	r3, r0, #512	; 0x200
    4998:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    499c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    49a0:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    49a4:	04020003 	streq	r0, [r2], #-3
    49a8:	003f0601 	eorseq	r0, pc, r1, lsl #12
    49ac:	01010402 	tsteq	r1, r2, lsl #8
    49b0:	01040200 	mrseq	r0, R12_usr
    49b4:	04020001 	streq	r0, [r2], #-1
    49b8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    49bc:	02001f05 	andeq	r1, r0, #5, 30
    49c0:	90030104 	andls	r0, r3, r4, lsl #2
    49c4:	0505206e 	streq	r2, [r5, #-110]	; 0xffffff92
    49c8:	01040200 	mrseq	r0, R12_usr
    49cc:	00040514 	andeq	r0, r4, r4, lsl r5
    49d0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    49d4:	01040200 	mrseq	r0, R12_usr
    49d8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    49dc:	2f060104 	svccs	0x00060104
    49e0:	01040200 	mrseq	r0, R12_usr
    49e4:	01040106 	tsteq	r4, r6, lsl #2
    49e8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    49ec:	eb030104 	bl	c4e04 <_Min_Heap_Size+0xc4604>
    49f0:	02000111 	andeq	r0, r0, #1073741828	; 0x40000004
    49f4:	2e060104 	adfcss	f0, f6, f4
    49f8:	1f050204 	svcne	0x00050204
    49fc:	01040200 	mrseq	r0, R12_usr
    4a00:	016ec303 	cmneq	lr, r3, lsl #6
    4a04:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4a08:	00140104 	andseq	r0, r4, r4, lsl #2
    4a0c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4a10:	01040200 	mrseq	r0, R12_usr
    4a14:	02002006 	andeq	r2, r0, #6
    4a18:	2f060104 	svccs	0x00060104
    4a1c:	01040200 	mrseq	r0, R12_usr
    4a20:	01040106 	tsteq	r4, r6, lsl #2
    4a24:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4a28:	b8030104 	stmdalt	r3, {r2, r8}
    4a2c:	02000111 	andeq	r0, r0, #1073741828	; 0x40000004
    4a30:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    4a34:	02040200 	andeq	r0, r4, #0, 4
    4a38:	00110514 	andseq	r0, r1, r4, lsl r5
    4a3c:	06020402 	streq	r0, [r2], -r2, lsl #8
    4a40:	04020001 	streq	r0, [r2], #-1
    4a44:	03052002 	movweq	r2, #20482	; 0x5002
    4a48:	02040200 	andeq	r0, r4, #0, 4
    4a4c:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    4a50:	00010204 	andeq	r0, r1, r4, lsl #4
    4a54:	3c020402 	cfstrscc	mvf0, [r2], {2}
    4a58:	02040200 	andeq	r0, r4, #0, 4
    4a5c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    4a60:	03030513 	movweq	r0, #13587	; 0x3513
    4a64:	06022073 			; <UNDEFINED> instruction: 0x06022073
    4a68:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4a6c:	02050001 	andeq	r0, r5, #1
    4a70:	00000000 	andeq	r0, r0, r0
    4a74:	0115dc03 	tsteq	r5, r3, lsl #24
    4a78:	03050106 	movweq	r0, #20742	; 0x5106
    4a7c:	02003006 	andeq	r3, r0, #6
    4a80:	4a060104 	bmi	184e98 <_Min_Heap_Size+0x184698>
    4a84:	02040200 	andeq	r0, r4, #0, 4
    4a88:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4a8c:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    4a90:	004a0404 	subeq	r0, sl, r4, lsl #8
    4a94:	4a050402 	bmi	145aa4 <_Min_Heap_Size+0x1452a4>
    4a98:	06040200 	streq	r0, [r4], -r0, lsl #4
    4a9c:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4aa0:	31063c06 	tstcc	r6, r6, lsl #24
    4aa4:	04020001 	streq	r0, [r2], #-1
    4aa8:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    4aac:	003c0204 	eorseq	r0, ip, r4, lsl #4
    4ab0:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    4ab4:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    4ab8:	01060204 	tsteq	r6, r4, lsl #4
    4abc:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4ac0:	3f060104 	svccc	0x00060104
    4ac4:	01040200 	mrseq	r0, R12_usr
    4ac8:	04020001 	streq	r0, [r2], #-1
    4acc:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4ad0:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    4ad4:	001f0502 	andseq	r0, pc, r2, lsl #10
    4ad8:	03010402 	movweq	r0, #5122	; 0x1402
    4adc:	05206df5 	streq	r6, [r0, #-3573]!	; 0xfffff20b
    4ae0:	04020005 	streq	r0, [r2], #-5
    4ae4:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    4ae8:	01040200 	mrseq	r0, R12_usr
    4aec:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4af0:	002e0601 	eoreq	r0, lr, r1, lsl #12
    4af4:	06010402 	streq	r0, [r1], -r2, lsl #8
    4af8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4afc:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4b00:	00030501 	andeq	r0, r3, r1, lsl #10
    4b04:	03010402 	movweq	r0, #5122	; 0x1402
    4b08:	00011286 	andeq	r1, r1, r6, lsl #5
    4b0c:	06010402 	streq	r0, [r1], -r2, lsl #8
    4b10:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    4b14:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4b18:	6ea80301 	cdpvs	3, 10, cr0, cr8, cr1, {0}
    4b1c:	00040501 	andeq	r0, r4, r1, lsl #10
    4b20:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4b24:	01040200 	mrseq	r0, R12_usr
    4b28:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4b2c:	00200601 	eoreq	r0, r0, r1, lsl #12
    4b30:	06010402 	streq	r0, [r1], -r2, lsl #8
    4b34:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    4b38:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    4b3c:	00030501 	andeq	r0, r3, r1, lsl #10
    4b40:	03010402 	movweq	r0, #5122	; 0x1402
    4b44:	000111d3 	ldrdeq	r1, [r1], -r3
    4b48:	06020402 	streq	r0, [r2], -r2, lsl #8
    4b4c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4b50:	11051402 	tstne	r5, r2, lsl #8
    4b54:	02040200 	andeq	r0, r4, #0, 4
    4b58:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4b5c:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4b60:	04020003 	streq	r0, [r2], #-3
    4b64:	052f0602 	streq	r0, [pc, #-1538]!	; 456a <_Min_Heap_Size+0x3d6a>
    4b68:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    4b6c:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4b70:	04020003 	streq	r0, [r2], #-3
    4b74:	00310602 	eorseq	r0, r1, r2, lsl #12
    4b78:	01020402 	tsteq	r2, r2, lsl #8
    4b7c:	02040200 	andeq	r0, r4, #0, 4
    4b80:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4b84:	01051402 	tsteq	r5, r2, lsl #8
    4b88:	03051306 	movweq	r1, #21254	; 0x5306
    4b8c:	02207203 	eoreq	r7, r0, #805306368	; 0x30000000
    4b90:	01010007 	tsteq	r1, r7
    4b94:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    4b98:	00000002 	andeq	r0, r0, r2
    4b9c:	15f80300 	ldrbne	r0, [r8, #768]!	; 0x300
    4ba0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4ba4:	00300603 	eorseq	r0, r0, r3, lsl #12
    4ba8:	06010402 	streq	r0, [r1], -r2, lsl #8
    4bac:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4bb0:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    4bb4:	004a0304 	subeq	r0, sl, r4, lsl #6
    4bb8:	4a040402 	bmi	105bc8 <_Min_Heap_Size+0x1053c8>
    4bbc:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    4bc0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4bc4:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    4bc8:	063c0604 	ldrteq	r0, [ip], -r4, lsl #12
    4bcc:	02000131 	andeq	r0, r0, #1073741836	; 0x4000000c
    4bd0:	004a0204 	subeq	r0, sl, r4, lsl #4
    4bd4:	3c020402 	cfstrscc	mvf0, [r2], {2}
    4bd8:	02040200 	andeq	r0, r4, #0, 4
    4bdc:	00110514 	andseq	r0, r1, r4, lsl r5
    4be0:	06020402 	streq	r0, [r2], -r2, lsl #8
    4be4:	00030501 	andeq	r0, r3, r1, lsl #10
    4be8:	06010402 	streq	r0, [r1], -r2, lsl #8
    4bec:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    4bf0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4bf4:	00010104 	andeq	r0, r1, r4, lsl #2
    4bf8:	01010402 	tsteq	r1, r2, lsl #8
    4bfc:	1f050204 	svcne	0x00050204
    4c00:	01040200 	mrseq	r0, R12_usr
    4c04:	206dd903 	rsbcs	sp, sp, r3, lsl #18
    4c08:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    4c0c:	05140104 	ldreq	r0, [r4, #-260]	; 0xfffffefc
    4c10:	04020004 	streq	r0, [r2], #-4
    4c14:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4c18:	2e060104 	adfcss	f0, f6, f4
    4c1c:	01040200 	mrseq	r0, R12_usr
    4c20:	02002f06 	andeq	r2, r0, #6, 30
    4c24:	01060104 	tsteq	r6, r4, lsl #2
    4c28:	03050104 	movweq	r0, #20740	; 0x5104
    4c2c:	01040200 	mrseq	r0, R12_usr
    4c30:	0112a203 	tsteq	r2, r3, lsl #4
    4c34:	01040200 	mrseq	r0, R12_usr
    4c38:	02042e06 	andeq	r2, r4, #6, 28	; 0x60
    4c3c:	02001f05 	andeq	r1, r0, #5, 30
    4c40:	8c030104 	stfhis	f0, [r3], {4}
    4c44:	0405016e 	streq	r0, [r5], #-366	; 0xfffffe92
    4c48:	01040200 	mrseq	r0, R12_usr
    4c4c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    4c50:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4c54:	20060104 	andcs	r0, r6, r4, lsl #2
    4c58:	01040200 	mrseq	r0, R12_usr
    4c5c:	02002f06 	andeq	r2, r0, #6, 30
    4c60:	01060104 	tsteq	r6, r4, lsl #2
    4c64:	03050104 	movweq	r0, #20740	; 0x5104
    4c68:	01040200 	mrseq	r0, R12_usr
    4c6c:	0111ef03 	tsteq	r1, r3, lsl #30
    4c70:	02040200 	andeq	r0, r4, #0, 4
    4c74:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    4c78:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    4c7c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4c80:	00010602 	andeq	r0, r1, r2, lsl #12
    4c84:	20020402 	andcs	r0, r2, r2, lsl #8
    4c88:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4c8c:	2f060204 	svccs	0x00060204
    4c90:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    4c94:	01060204 	tsteq	r6, r4, lsl #4
    4c98:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4c9c:	31060204 	tstcc	r6, r4, lsl #4
    4ca0:	02040200 	andeq	r0, r4, #0, 4
    4ca4:	04020001 	streq	r0, [r2], #-1
    4ca8:	02002e02 	andeq	r2, r0, #2, 28
    4cac:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    4cb0:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    4cb4:	20720303 	rsbscs	r0, r2, r3, lsl #6
    4cb8:	01000702 	tsteq	r0, r2, lsl #14
    4cbc:	00010501 	andeq	r0, r1, r1, lsl #10
    4cc0:	00000205 	andeq	r0, r0, r5, lsl #4
    4cc4:	94030000 	strls	r0, [r3], #-0
    4cc8:	03050116 	movweq	r0, #20758	; 0x5116
    4ccc:	00011513 	andeq	r1, r1, r3, lsl r5
    4cd0:	4a020402 	bmi	85ce0 <_Min_Heap_Size+0x854e0>
    4cd4:	02040200 	andeq	r0, r4, #0, 4
    4cd8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    4cdc:	11051402 	tstne	r5, r2, lsl #8
    4ce0:	02040200 	andeq	r0, r4, #0, 4
    4ce4:	03050106 	movweq	r0, #20742	; 0x5106
    4ce8:	02040200 	andeq	r0, r4, #0, 4
    4cec:	11053f06 	tstne	r5, r6, lsl #30
    4cf0:	02040200 	andeq	r0, r4, #0, 4
    4cf4:	0a050106 	beq	145114 <_Min_Heap_Size+0x144914>
    4cf8:	02040200 	andeq	r0, r4, #0, 4
    4cfc:	00030520 	andeq	r0, r3, r0, lsr #10
    4d00:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d04:	000a0523 	andeq	r0, sl, r3, lsr #10
    4d08:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d0c:	00030501 	andeq	r0, r3, r1, lsl #10
    4d10:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d14:	000a0531 	andeq	r0, sl, r1, lsr r5
    4d18:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d1c:	00030501 	andeq	r0, r3, r1, lsl #10
    4d20:	06020402 	streq	r0, [r2], -r2, lsl #8
    4d24:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    4d28:	11052202 	tstne	r5, r2, lsl #4
    4d2c:	02040200 	andeq	r0, r4, #0, 4
    4d30:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4d34:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4d38:	04020003 	streq	r0, [r2], #-3
    4d3c:	00310602 	eorseq	r0, r1, r2, lsl #12
    4d40:	01020402 	tsteq	r2, r2, lsl #8
    4d44:	02040200 	andeq	r0, r4, #0, 4
    4d48:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    4d4c:	0a051402 	beq	149d5c <_Min_Heap_Size+0x14955c>
    4d50:	02040200 	andeq	r0, r4, #0, 4
    4d54:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    4d58:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    4d5c:	206b0303 	rsbcs	r0, fp, r3, lsl #6
    4d60:	16030105 	strne	r0, [r3], -r5, lsl #2
    4d64:	00010220 	andeq	r0, r1, r0, lsr #4
    4d68:	01050101 	tsteq	r5, r1, lsl #2
    4d6c:	00020500 	andeq	r0, r2, r0, lsl #10
    4d70:	03000000 	movweq	r0, #0
    4d74:	050116b7 	streq	r1, [r1, #-1719]	; 0xfffff949
    4d78:	01151303 	tsteq	r5, r3, lsl #6
    4d7c:	02040200 	andeq	r0, r4, #0, 4
    4d80:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    4d84:	02003c02 	andeq	r3, r0, #512	; 0x200
    4d88:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    4d8c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4d90:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4d94:	04020003 	streq	r0, [r2], #-3
    4d98:	053f0602 	ldreq	r0, [pc, #-1538]!	; 479e <_Min_Heap_Size+0x3f9e>
    4d9c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4da0:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    4da4:	0402000a 	streq	r0, [r2], #-10
    4da8:	03052002 	movweq	r2, #20482	; 0x5002
    4dac:	02040200 	andeq	r0, r4, #0, 4
    4db0:	0a052306 	beq	14d9d0 <_Min_Heap_Size+0x14d1d0>
    4db4:	02040200 	andeq	r0, r4, #0, 4
    4db8:	03050106 	movweq	r0, #20742	; 0x5106
    4dbc:	02040200 	andeq	r0, r4, #0, 4
    4dc0:	0a053106 	beq	1511e0 <_Min_Heap_Size+0x1509e0>
    4dc4:	02040200 	andeq	r0, r4, #0, 4
    4dc8:	03050106 	movweq	r0, #20742	; 0x5106
    4dcc:	02040200 	andeq	r0, r4, #0, 4
    4dd0:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    4dd4:	05220204 	streq	r0, [r2, #-516]!	; 0xfffffdfc
    4dd8:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    4ddc:	00010602 	andeq	r0, r1, r2, lsl #12
    4de0:	20020402 	andcs	r0, r2, r2, lsl #8
    4de4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    4de8:	31060204 	tstcc	r6, r4, lsl #4
    4dec:	02040200 	andeq	r0, r4, #0, 4
    4df0:	04020001 	streq	r0, [r2], #-1
    4df4:	02003c02 	andeq	r3, r0, #512	; 0x200
    4df8:	05140204 	ldreq	r0, [r4, #-516]	; 0xfffffdfc
    4dfc:	0402000a 	streq	r0, [r2], #-10
    4e00:	00010602 	andeq	r0, r1, r2, lsl #12
    4e04:	20020402 	andcs	r0, r2, r2, lsl #8
    4e08:	6b030305 	blvs	c5a24 <_Min_Heap_Size+0xc5224>
    4e0c:	03010520 	movweq	r0, #5408	; 0x1520
    4e10:	01022016 	tsteq	r2, r6, lsl r0
    4e14:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4e18:	02050001 	andeq	r0, r5, #1
    4e1c:	00000000 	andeq	r0, r0, r0
    4e20:	0116f003 	tsteq	r6, r3	; <UNPREDICTABLE>
    4e24:	13130305 	tstne	r3, #335544320	; 0x14000000
    4e28:	01061005 	tsteq	r6, r5
    4e2c:	2f060305 	svccs	0x00060305
    4e30:	01061005 	tsteq	r6, r5
    4e34:	30060305 	andcc	r0, r6, r5, lsl #6
    4e38:	13060105 	movwne	r0, #24837	; 0x6105
    4e3c:	00010220 	andeq	r0, r1, r0, lsr #4
    4e40:	01050101 	tsteq	r5, r1, lsl #2
    4e44:	00020500 	andeq	r0, r2, r0, lsl #10
    4e48:	03000000 	movweq	r0, #0
    4e4c:	050116ff 	streq	r1, [r1, #-1791]	; 0xfffff901
    4e50:	0f051303 	svceq	0x00051303
    4e54:	01050106 	tsteq	r5, r6, lsl #2
    4e58:	00010221 	andeq	r0, r1, r1, lsr #4
    4e5c:	01050101 	tsteq	r5, r1, lsl #2
    4e60:	00020500 	andeq	r0, r2, r0, lsl #10
    4e64:	03000000 	movweq	r0, #0
    4e68:	050119a4 	streq	r1, [r1, #-2468]	; 0xfffff65c
    4e6c:	15051303 	strne	r1, [r5, #-771]	; 0xfffffcfd
    4e70:	03050106 	movweq	r0, #20742	; 0x5106
    4e74:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    4e78:	03050106 	movweq	r0, #20742	; 0x5106
    4e7c:	16052106 	strne	r2, [r5], -r6, lsl #2
    4e80:	03050106 	movweq	r0, #20742	; 0x5106
    4e84:	14052206 	strne	r2, [r5], #-518	; 0xfffffdfa
    4e88:	03050106 	movweq	r0, #20742	; 0x5106
    4e8c:	12052f06 	andne	r2, r5, #6, 30
    4e90:	03050106 	movweq	r0, #20742	; 0x5106
    4e94:	12053e06 	andne	r3, r5, #6, 28	; 0x60
    4e98:	06050106 	streq	r0, [r5], -r6, lsl #2
    4e9c:	06050520 	streq	r0, [r5], -r0, lsr #10
    4ea0:	05200623 	streq	r0, [r0, #-1571]!	; 0xfffff9dd
    4ea4:	5b4e0603 	blpl	13866b8 <_Min_Heap_Size+0x1385eb8>
    4ea8:	0601055a 			; <UNDEFINED> instruction: 0x0601055a
    4eac:	01022013 	tsteq	r2, r3, lsl r0
    4eb0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    4eb4:	02050001 	andeq	r0, r5, #1
    4eb8:	00000000 	andeq	r0, r0, r0
    4ebc:	010ac303 	tsteq	sl, r3, lsl #6
    4ec0:	03050106 	movweq	r0, #20742	; 0x5106
    4ec4:	0c052206 	sfmeq	f2, 4, [r5], {6}
    4ec8:	06050106 	streq	r0, [r5], -r6, lsl #2
    4ecc:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    4ed0:	06080530 			; <UNDEFINED> instruction: 0x06080530
    4ed4:	00190501 	andseq	r0, r9, r1, lsl #10
    4ed8:	20010402 	andcs	r0, r1, r2, lsl #8
    4edc:	05220e05 	streq	r0, [r2, #-3589]!	; 0xfffff1fb
    4ee0:	200c0301 	andcs	r0, ip, r1, lsl #6
    4ee4:	03060505 	movweq	r0, #25861	; 0x6505
    4ee8:	1a052078 	bne	14d0d0 <_Min_Heap_Size+0x14c8d0>
    4eec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4ef0:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    4ef4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    4ef8:	0520240c 	streq	r2, [r0, #-1036]!	; 0xfffffbf4
    4efc:	2076030e 	rsbscs	r0, r6, lr, lsl #6
    4f00:	00010220 	andeq	r0, r1, r0, lsr #4
    4f04:	01050101 	tsteq	r5, r1, lsl #2
    4f08:	00020500 	andeq	r0, r2, r0, lsl #10
    4f0c:	03000000 	movweq	r0, #0
    4f10:	05010db1 	streq	r0, [r1, #-3505]	; 0xfffff24f
    4f14:	05151303 	ldreq	r1, [r5, #-771]	; 0xfffffcfd
    4f18:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    4f1c:	01053c06 	tsteq	r5, r6, lsl #24
    4f20:	0605052a 	streq	r0, [r5], -sl, lsr #10
    4f24:	06080542 	streq	r0, [r8], -r2, asr #10
    4f28:	00190501 	andseq	r0, r9, r1, lsl #10
    4f2c:	20010402 	andcs	r0, r1, r2, lsl #8
    4f30:	05220e05 	streq	r0, [r2, #-3589]!	; 0xfffff1fb
    4f34:	20210301 	eorcs	r0, r1, r1, lsl #6
    4f38:	03060505 	movweq	r0, #25861	; 0x6505
    4f3c:	1a052e63 	bne	1508d0 <_Min_Heap_Size+0x1500d0>
    4f40:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4f44:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    4f48:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4f4c:	0f053006 	svceq	0x00053006
    4f50:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    4f54:	08053106 	stmdaeq	r5, {r1, r2, r8, ip, sp}
    4f58:	07050106 	streq	r0, [r5, -r6, lsl #2]
    4f5c:	10053006 	andne	r3, r5, r6
    4f60:	0a050106 	beq	145380 <_Min_Heap_Size+0x144b80>
    4f64:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    4f68:	05052e0b 	streq	r2, [r5, #-3595]	; 0xfffff1f5
    4f6c:	0c052406 	cfstrseq	mvf2, [r5], {6}
    4f70:	09050106 	stmdbeq	r5, {r1, r2, r8}
    4f74:	20730306 	rsbscs	r0, r3, r6, lsl #6
    4f78:	2e3c2e01 	cdpcs	14, 3, cr2, cr12, cr1, {0}
    4f7c:	01040200 	mrseq	r0, R12_usr
    4f80:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4f84:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    4f88:	00010104 	andeq	r0, r1, r4, lsl #2
    4f8c:	01010402 	tsteq	r1, r2, lsl #8
    4f90:	01040200 	mrseq	r0, R12_usr
    4f94:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4f98:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    4f9c:	76930301 	ldrvc	r0, [r3], r1, lsl #6
    4fa0:	00050520 	andeq	r0, r5, r0, lsr #10
    4fa4:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    4fa8:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    4fac:	00140104 	andseq	r0, r4, r4, lsl #2
    4fb0:	06010402 	streq	r0, [r1], -r2, lsl #8
    4fb4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    4fb8:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4fbc:	06010402 	streq	r0, [r1], -r2, lsl #8
    4fc0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4fc4:	04020009 	streq	r0, [r2], #-9
    4fc8:	09e80301 	stmibeq	r8!, {r0, r8, r9}^
    4fcc:	04020001 	streq	r0, [r2], #-1
    4fd0:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    4fd4:	001f0502 	andseq	r0, pc, r2, lsl #10
    4fd8:	03010402 	movweq	r0, #5122	; 0x1402
    4fdc:	050176c6 	streq	r7, [r1, #-1734]	; 0xfffff93a
    4fe0:	04020004 	streq	r0, [r2], #-4
    4fe4:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    4fe8:	00140104 	andseq	r0, r4, r4, lsl #2
    4fec:	06010402 	streq	r0, [r1], -r2, lsl #8
    4ff0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    4ff4:	002f0601 	eoreq	r0, pc, r1, lsl #12
    4ff8:	06010402 	streq	r0, [r1], -r2, lsl #8
    4ffc:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    5000:	04020009 	streq	r0, [r2], #-9
    5004:	09b50301 	ldmibeq	r5!, {r0, r8, r9}
    5008:	04020001 	streq	r0, [r2], #-1
    500c:	0c053c01 	stceq	12, cr3, [r5], {1}
    5010:	05011003 	streq	r1, [r1, #-3]
    5014:	0e052201 	cdpeq	2, 0, cr2, cr5, cr1, {0}
    5018:	20205f03 	eorcs	r5, r0, r3, lsl #30
    501c:	01000102 	tsteq	r0, r2, lsl #2
    5020:	00010501 	andeq	r0, r1, r1, lsl #10
    5024:	00000205 	andeq	r0, r0, r5, lsl #4
    5028:	c7030000 	strgt	r0, [r3, -r0]
    502c:	01060119 	tsteq	r6, r9, lsl r1
    5030:	4b060305 	blmi	185c4c <_Min_Heap_Size+0x18544c>
    5034:	06150514 			; <UNDEFINED> instruction: 0x06150514
    5038:	06030501 	streq	r0, [r3], -r1, lsl #10
    503c:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    5040:	06030501 	streq	r0, [r3], -r1, lsl #10
    5044:	06140522 	ldreq	r0, [r4], -r2, lsr #10
    5048:	06030501 	streq	r0, [r3], -r1, lsl #10
    504c:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
    5050:	03052001 	movweq	r2, #20481	; 0x5001
    5054:	08053106 	stmdaeq	r5, {r1, r2, r8, ip, sp}
    5058:	23050106 	movwcs	r0, #20742	; 0x5106
    505c:	03052020 	movweq	r2, #20512	; 0x5020
    5060:	08052306 	stmdaeq	r5, {r1, r2, r8, r9, sp}
    5064:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    5068:	06030520 	streq	r0, [r3], -r0, lsr #10
    506c:	06080531 			; <UNDEFINED> instruction: 0x06080531
    5070:	20240501 	eorcs	r0, r4, r1, lsl #10
    5074:	31060305 	tstcc	r6, r5, lsl #6
    5078:	01060805 	tsteq	r6, r5, lsl #16
    507c:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    5080:	13230603 			; <UNDEFINED> instruction: 0x13230603
    5084:	01063305 	tsteq	r6, r5, lsl #6
    5088:	2e200305 	cdpcs	3, 2, cr0, cr0, cr5, {0}
    508c:	20013f06 	andcs	r3, r1, r6, lsl #30
    5090:	14202e3c 	strtne	r2, [r0], #-3644	; 0xfffff1c4
    5094:	01061205 	tsteq	r6, r5, lsl #4
    5098:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    509c:	04020005 	streq	r0, [r2], #-5
    50a0:	00230601 	eoreq	r0, r3, r1, lsl #12
    50a4:	01010402 	tsteq	r1, r2, lsl #8
    50a8:	01040200 	mrseq	r0, R12_usr
    50ac:	04020001 	streq	r0, [r2], #-1
    50b0:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    50b4:	02001f05 	andeq	r1, r0, #5, 30
    50b8:	f5030104 			; <UNDEFINED> instruction: 0xf5030104
    50bc:	05052069 	streq	r2, [r5, #-105]	; 0xffffff97
    50c0:	01040200 	mrseq	r0, R12_usr
    50c4:	00040514 	andeq	r0, r4, r4, lsl r5
    50c8:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    50cc:	01040200 	mrseq	r0, R12_usr
    50d0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    50d4:	2f060104 	svccs	0x00060104
    50d8:	01040200 	mrseq	r0, R12_usr
    50dc:	01040106 	tsteq	r4, r6, lsl #2
    50e0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    50e4:	86030104 	strhi	r0, [r3], -r4, lsl #2
    50e8:	02000116 	andeq	r0, r0, #-2147483643	; 0x80000005
    50ec:	2e060104 	adfcss	f0, f6, f4
    50f0:	1f050204 	svcne	0x00050204
    50f4:	01040200 	mrseq	r0, R12_usr
    50f8:	016aa803 	cmneq	sl, r3, lsl #16
    50fc:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    5100:	00140104 	andseq	r0, r4, r4, lsl #2
    5104:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5108:	01040200 	mrseq	r0, R12_usr
    510c:	02002006 	andeq	r2, r0, #6
    5110:	2f060104 	svccs	0x00060104
    5114:	01040200 	mrseq	r0, R12_usr
    5118:	01040106 	tsteq	r4, r6, lsl #2
    511c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5120:	d3030104 	movwle	r0, #12548	; 0x3104
    5124:	02000115 	andeq	r0, r0, #1073741829	; 0x40000005
    5128:	002e0104 	eoreq	r0, lr, r4, lsl #2
    512c:	06010402 	streq	r0, [r1], -r2, lsl #8
    5130:	00030501 	andeq	r0, r3, r1, lsl #10
    5134:	16010402 	strne	r0, [r1], -r2, lsl #8
    5138:	01040200 	mrseq	r0, R12_usr
    513c:	04020001 	streq	r0, [r2], #-1
    5140:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    5144:	04010104 	streq	r0, [r1], #-260	; 0xfffffefc
    5148:	001f0502 	andseq	r0, pc, r2, lsl #10
    514c:	03010402 	movweq	r0, #5122	; 0x1402
    5150:	052069f1 	streq	r6, [r0, #-2545]!	; 0xfffff60f
    5154:	04020005 	streq	r0, [r2], #-5
    5158:	04051401 	streq	r1, [r5], #-1025	; 0xfffffbff
    515c:	01040200 	mrseq	r0, R12_usr
    5160:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    5164:	002e0601 	eoreq	r0, lr, r1, lsl #12
    5168:	06010402 	streq	r0, [r1], -r2, lsl #8
    516c:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    5170:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    5174:	00030501 	andeq	r0, r3, r1, lsl #10
    5178:	03010402 	movweq	r0, #5122	; 0x1402
    517c:	0001168a 	andeq	r1, r1, sl, lsl #13
    5180:	06010402 	streq	r0, [r1], -r2, lsl #8
    5184:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    5188:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    518c:	6aa40301 	bvs	fe905d98 <_estack+0xde8fc3f8>
    5190:	00040501 	andeq	r0, r4, r1, lsl #10
    5194:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5198:	01040200 	mrseq	r0, R12_usr
    519c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    51a0:	00200601 	eoreq	r0, r0, r1, lsl #12
    51a4:	06010402 	streq	r0, [r1], -r2, lsl #8
    51a8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    51ac:	04010601 	streq	r0, [r1], #-1537	; 0xfffff9ff
    51b0:	00030501 	andeq	r0, r3, r1, lsl #10
    51b4:	03010402 	movweq	r0, #5122	; 0x1402
    51b8:	000115d7 	ldrdeq	r1, [r1], -r7
    51bc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    51c0:	01040200 	mrseq	r0, R12_usr
    51c4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    51c8:	00160104 	andseq	r0, r6, r4, lsl #2
    51cc:	01010402 	tsteq	r1, r2, lsl #8
    51d0:	01040200 	mrseq	r0, R12_usr
    51d4:	04020001 	streq	r0, [r2], #-1
    51d8:	02040101 	andeq	r0, r4, #1073741824	; 0x40000000
    51dc:	02001f05 	andeq	r1, r0, #5, 30
    51e0:	ed030104 	stfs	f0, [r3, #-16]
    51e4:	05052069 	streq	r2, [r5, #-105]	; 0xffffff97
    51e8:	01040200 	mrseq	r0, R12_usr
    51ec:	00040514 	andeq	r0, r4, r4, lsl r5
    51f0:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    51f4:	01040200 	mrseq	r0, R12_usr
    51f8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    51fc:	2f060104 	svccs	0x00060104
    5200:	01040200 	mrseq	r0, R12_usr
    5204:	01040106 	tsteq	r4, r6, lsl #2
    5208:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    520c:	8e030104 	adfhis	f0, f3, f4
    5210:	02000116 	andeq	r0, r0, #-2147483643	; 0x80000005
    5214:	2e060104 	adfcss	f0, f6, f4
    5218:	1f050204 	svcne	0x00050204
    521c:	01040200 	mrseq	r0, R12_usr
    5220:	016aa003 	cmneq	sl, r3
    5224:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    5228:	00140104 	andseq	r0, r4, r4, lsl #2
    522c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5230:	01040200 	mrseq	r0, R12_usr
    5234:	02002006 	andeq	r2, r0, #6
    5238:	2f060104 	svccs	0x00060104
    523c:	01040200 	mrseq	r0, R12_usr
    5240:	01040106 	tsteq	r4, r6, lsl #2
    5244:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    5248:	db030104 	blle	c5660 <_Min_Heap_Size+0xc4e60>
    524c:	02000115 	andeq	r0, r0, #1073741829	; 0x40000005
    5250:	2e060204 	cdpcs	2, 0, cr0, cr6, cr4, {0}
    5254:	02040200 	andeq	r0, r4, #0, 4
    5258:	00010514 	andeq	r0, r1, r4, lsl r5
    525c:	06020402 	streq	r0, [r2], -r2, lsl #8
    5260:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    5264:	06023c02 	streq	r3, [r2], -r2, lsl #24
    5268:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    526c:	02050001 	andeq	r0, r5, #1
    5270:	00000000 	andeq	r0, r0, r0
    5274:	010ba103 	tsteq	fp, r3, lsl #2
    5278:	03050106 	movweq	r0, #20742	; 0x5106
    527c:	0c052206 	sfmeq	f2, 4, [r5], {6}
    5280:	06050106 	streq	r0, [r5], -r6, lsl #2
    5284:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    5288:	06080530 			; <UNDEFINED> instruction: 0x06080530
    528c:	00190501 	andseq	r0, r9, r1, lsl #10
    5290:	20010402 	andcs	r0, r1, r2, lsl #8
    5294:	05220e05 	streq	r0, [r2, #-3589]!	; 0xfffff1fb
    5298:	200c0301 	andcs	r0, ip, r1, lsl #6
    529c:	03060505 	movweq	r0, #25861	; 0x6505
    52a0:	1a052078 	bne	14d488 <_Min_Heap_Size+0x14cc88>
    52a4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    52a8:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
    52ac:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    52b0:	0520240c 	streq	r2, [r0, #-1036]!	; 0xfffffbf4
    52b4:	2076030e 	rsbscs	r0, r6, lr, lsl #6
    52b8:	00010220 	andeq	r0, r1, r0, lsr #4
    52bc:	01050101 	tsteq	r5, r1, lsl #2
    52c0:	00020500 	andeq	r0, r2, r0, lsl #10
    52c4:	03000000 	movweq	r0, #0
    52c8:	05010ded 	streq	r0, [r1, #-3565]	; 0xfffff213
    52cc:	05151303 	ldreq	r1, [r5, #-771]	; 0xfffffcfd
    52d0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    52d4:	01053c06 	tsteq	r5, r6, lsl #24
    52d8:	0605052a 	streq	r0, [r5], -sl, lsr #10
    52dc:	06080542 	streq	r0, [r8], -r2, asr #10
    52e0:	00190501 	andseq	r0, r9, r1, lsl #10
    52e4:	20010402 	andcs	r0, r1, r2, lsl #8
    52e8:	05220e05 	streq	r0, [r2, #-3589]!	; 0xfffff1fb
    52ec:	20210301 	eorcs	r0, r1, r1, lsl #6
    52f0:	03060505 	movweq	r0, #25861	; 0x6505
    52f4:	1a052e63 	bne	150c88 <_Min_Heap_Size+0x150488>
    52f8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    52fc:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    5300:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5304:	0f053006 	svceq	0x00053006
    5308:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    530c:	08053106 	stmdaeq	r5, {r1, r2, r8, ip, sp}
    5310:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5314:	10053006 	andne	r3, r5, r6
    5318:	0a050106 	beq	145738 <_Min_Heap_Size+0x144f38>
    531c:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    5320:	05052e0b 	streq	r2, [r5, #-3595]	; 0xfffff1f5
    5324:	0c052406 	cfstrseq	mvf2, [r5], {6}
    5328:	09050106 	stmdbeq	r5, {r1, r2, r8}
    532c:	20730306 	rsbscs	r0, r3, r6, lsl #6
    5330:	2e3c2e01 	cdpcs	14, 3, cr2, cr12, cr1, {0}
    5334:	01040200 	mrseq	r0, R12_usr
    5338:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    533c:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
    5340:	00010104 	andeq	r0, r1, r4, lsl #2
    5344:	01010402 	tsteq	r1, r2, lsl #8
    5348:	01040200 	mrseq	r0, R12_usr
    534c:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    5350:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    5354:	75d70301 	ldrbvc	r0, [r7, #769]	; 0x301
    5358:	00050520 	andeq	r0, r5, r0, lsr #10
    535c:	14010402 	strne	r0, [r1], #-1026	; 0xfffffbfe
    5360:	02000405 	andeq	r0, r0, #83886080	; 0x5000000
    5364:	00140104 	andseq	r0, r4, r4, lsl #2
    5368:	06010402 	streq	r0, [r1], -r2, lsl #8
    536c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5370:	002f0601 	eoreq	r0, pc, r1, lsl #12
    5374:	06010402 	streq	r0, [r1], -r2, lsl #8
    5378:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    537c:	04020009 	streq	r0, [r2], #-9
    5380:	0aa40301 	beq	fe905f8c <_estack+0xde8fc5ec>
    5384:	04020001 	streq	r0, [r2], #-1
    5388:	042e0601 	strteq	r0, [lr], #-1537	; 0xfffff9ff
    538c:	001f0502 	andseq	r0, pc, r2, lsl #10
    5390:	03010402 	movweq	r0, #5122	; 0x1402
    5394:	0501768a 	streq	r7, [r1, #-1674]	; 0xfffff976
    5398:	04020004 	streq	r0, [r2], #-4
    539c:	02001401 	andeq	r1, r0, #16777216	; 0x1000000
    53a0:	00140104 	andseq	r0, r4, r4, lsl #2
    53a4:	06010402 	streq	r0, [r1], -r2, lsl #8
    53a8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    53ac:	002f0601 	eoreq	r0, pc, r1, lsl #12
    53b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    53b4:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    53b8:	04020009 	streq	r0, [r2], #-9
    53bc:	09f10301 	ldmibeq	r1!, {r0, r8, r9}^
    53c0:	04020001 	streq	r0, [r2], #-1
    53c4:	0c053c01 	stceq	12, cr3, [r5], {1}
    53c8:	05011003 	streq	r1, [r1, #-3]
    53cc:	0e052201 	cdpeq	2, 0, cr2, cr5, cr1, {0}
    53d0:	20205f03 	eorcs	r5, r0, r3, lsl #30
    53d4:	01000102 	tsteq	r0, r2, lsl #2
    53d8:	000c7301 	andeq	r7, ip, r1, lsl #6
    53dc:	0d000300 	stceq	3, cr0, [r0, #-0]
    53e0:	02000002 	andeq	r0, r0, #2
    53e4:	0d0efb01 	vstreq	d15, [lr, #-4]
    53e8:	01010100 	mrseq	r0, (UNDEF: 17)
    53ec:	00000001 	andeq	r0, r0, r1
    53f0:	01000001 	tsteq	r0, r1
    53f4:	442f2e2e 	strtmi	r2, [pc], #-3630	; 53fc <_Min_Heap_Size+0x4bfc>
    53f8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    53fc:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    5400:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    5404:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    5408:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    540c:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    5410:	2f726576 	svccs	0x00726576
    5414:	00637253 	rsbeq	r7, r3, r3, asr r2
    5418:	74706f2f 	ldrbtvc	r6, [r0], #-3887	; 0xfffff0d1
    541c:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    5420:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    5424:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    5428:	61652d65 	cmnvs	r5, r5, ror #26
    542c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    5430:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    5434:	31323032 	teqcc	r2, r2, lsr r0
    5438:	2f30312e 	svccs	0x0030312e
    543c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    5440:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    5444:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    5448:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
    544c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    5450:	616d2f65 	cmnvs	sp, r5, ror #30
    5454:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    5458:	6f2f0065 	svcvs	0x002f0065
    545c:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
    5460:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    5464:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    5468:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    546c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    5470:	2e30312d 	rsfcssp	f3, f0, #5.0
    5474:	30322d33 	eorscc	r2, r2, r3, lsr sp
    5478:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    547c:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
    5480:	6f6e2d6d 	svcvs	0x006e2d6d
    5484:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    5488:	2f696261 	svccs	0x00696261
    548c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    5490:	2f656475 	svccs	0x00656475
    5494:	00737973 	rsbseq	r7, r3, r3, ror r9
    5498:	442f2e2e 	strtmi	r2, [pc], #-3630	; 54a0 <_Min_Heap_Size+0x4ca0>
    549c:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    54a0:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    54a4:	5349534d 	movtpl	r5, #37709	; 0x934d
    54a8:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    54ac:	2f656369 	svccs	0x00656369
    54b0:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    54b4:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    54b8:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    54bc:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    54c0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    54c4:	2f2e2e00 	svccs	0x002e2e00
    54c8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    54cc:	2f737265 	svccs	0x00737265
    54d0:	334d5453 	movtcc	r5, #54355	; 0xd453
    54d4:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    54d8:	41485f78 	hvcmi	34296	; 0x85f8
    54dc:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    54e0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    54e4:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    54e8:	2f2e2e00 	svccs	0x002e2e00
    54ec:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    54f0:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    54f4:	74730000 	ldrbtvc	r0, [r3], #-0
    54f8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    54fc:	5f787834 	svcpl	0x00787834
    5500:	5f6c6168 	svcpl	0x006c6168
    5504:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
    5508:	00010063 	andeq	r0, r1, r3, rrx
    550c:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    5510:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    5514:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    5518:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    551c:	00020068 	andeq	r0, r2, r8, rrx
    5520:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    5524:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    5528:	0300682e 	movweq	r6, #2094	; 0x82e
    552c:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
    5530:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    5534:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    5538:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    553c:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    5540:	00000400 	andeq	r0, r0, r0, lsl #8
    5544:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    5548:	30346632 	eorscc	r6, r4, r2, lsr r6
    554c:	2e787835 	mrccs	8, 3, r7, cr8, cr5, {1}
    5550:	00040068 	andeq	r0, r4, r8, rrx
    5554:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    5558:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    555c:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    5560:	00000400 	andeq	r0, r0, r0, lsl #8
    5564:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    5568:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    556c:	61685f78 	smcvs	34296	; 0x85f8
    5570:	65645f6c 	strbvs	r5, [r4, #-3948]!	; 0xfffff094
    5574:	00682e66 	rsbeq	r2, r8, r6, ror #28
    5578:	73000005 	movwvc	r0, #5
    557c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    5580:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    5584:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    5588:	6363725f 	cmnvs	r3, #-268435451	; 0xf0000005
    558c:	2e78655f 	mrccs	5, 3, r6, cr8, cr15, {2}
    5590:	00050068 	andeq	r0, r5, r8, rrx
    5594:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    5598:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    559c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    55a0:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
    55a4:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    55a8:	00000500 	andeq	r0, r0, r0, lsl #10
    55ac:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    55b0:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    55b4:	61685f78 	smcvs	34296	; 0x85f8
    55b8:	70675f6c 	rsbvc	r5, r7, ip, ror #30
    55bc:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    55c0:	00000500 	andeq	r0, r0, r0, lsl #10
    55c4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    55c8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    55cc:	61685f78 	smcvs	34296	; 0x85f8
    55d0:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    55d4:	73000005 	movwvc	r0, #5
    55d8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    55dc:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    55e0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    55e4:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    55e8:	00682e66 	rsbeq	r2, r8, r6, ror #28
    55ec:	00000006 	andeq	r0, r0, r6
    55f0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    55f4:	00000002 	andeq	r0, r0, r2
    55f8:	01c80300 	biceq	r0, r8, r0, lsl #6
    55fc:	13030501 	movwne	r0, #13569	; 0x3501
    5600:	13060105 	movwne	r0, #24837	; 0x6105
    5604:	01000202 	tsteq	r0, r2, lsl #4
    5608:	00010501 	andeq	r0, r1, r1, lsl #10
    560c:	00000205 	andeq	r0, r0, r5, lsl #4
    5610:	db030000 	blle	c5618 <_Min_Heap_Size+0xc4e18>
    5614:	03050101 	movweq	r0, #20737	; 0x5101
    5618:	05051513 	streq	r1, [r5, #-1299]	; 0xfffffaed
    561c:	01050106 	tsteq	r5, r6, lsl #2
    5620:	06030538 			; <UNDEFINED> instruction: 0x06030538
    5624:	3e3c0a03 	vaddcc.f32	s0, s24, s6
    5628:	01061905 	tsteq	r6, r5, lsl #18
    562c:	06200505 	strteq	r0, [r0], -r5, lsl #10
    5630:	0402003f 	streq	r0, [r2], #-63	; 0xffffffc1
    5634:	002e0601 	eoreq	r0, lr, r1, lsl #12
    5638:	3c020402 	cfstrscc	mvf0, [r2], {2}
    563c:	09053e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, ip, sp}
    5640:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5644:	0009054a 	andeq	r0, r9, sl, asr #10
    5648:	2f010402 	svccs	0x00010402
    564c:	02003c05 	andeq	r3, r0, #1280	; 0x500
    5650:	05490104 	strbeq	r0, [r9, #-260]	; 0xfffffefc
    5654:	0b030607 	bleq	c6e78 <_Min_Heap_Size+0xc6678>
    5658:	0200012e 	andeq	r0, r0, #-2147483637	; 0x8000000b
    565c:	004a0204 	subeq	r0, sl, r4, lsl #4
    5660:	3c050402 	cfstrscc	mvf0, [r5], {2}
    5664:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    5668:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    566c:	02004a07 	andeq	r4, r0, #28672	; 0x7000
    5670:	05150704 	ldreq	r0, [r5, #-1796]	; 0xfffff8fc
    5674:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    5678:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    567c:	04020009 	streq	r0, [r2], #-9
    5680:	31062007 	tstcc	r6, r7
    5684:	01061505 	tsteq	r6, r5, lsl #10
    5688:	3f060905 	svccc	0x00060905
    568c:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
    5690:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5694:	0b052e0e 	bleq	150ed4 <_Min_Heap_Size+0x1506d4>
    5698:	0f053e06 	svceq	0x00053e06
    569c:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    56a0:	200d052e 	andcs	r0, sp, lr, lsr #10
    56a4:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    56a8:	04020003 	streq	r0, [r2], #-3
    56ac:	2e610301 	cdpcs	3, 6, cr0, cr1, cr1, {0}
    56b0:	01040200 	mrseq	r0, R12_usr
    56b4:	0005052e 	andeq	r0, r5, lr, lsr #10
    56b8:	41030402 	tstmi	r3, r2, lsl #8
    56bc:	055b4405 	ldrbeq	r4, [fp, #-1029]	; 0xfffffbfb
    56c0:	07052e3c 	smladxeq	r5, ip, lr, r2
    56c4:	0b053e06 	bleq	154ee4 <_Min_Heap_Size+0x1546e4>
    56c8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    56cc:	004e052e 	subeq	r0, lr, lr, lsr #10
    56d0:	3c010402 	cfstrscc	mvf0, [r1], {2}
    56d4:	02003905 	andeq	r3, r0, #81920	; 0x14000
    56d8:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    56dc:	2a030603 	bcs	c6ef0 <_Min_Heap_Size+0xc66f0>
    56e0:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    56e4:	20050501 	andcs	r0, r5, r1, lsl #10
    56e8:	3f3d3f06 	svccc	0x003d3f06
    56ec:	01060905 	tsteq	r6, r5, lsl #18
    56f0:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
    56f4:	04020009 	streq	r0, [r2], #-9
    56f8:	3c053d01 	stccc	13, cr3, [r5], {1}
    56fc:	01040200 	mrseq	r0, R12_usr
    5700:	06070549 	streq	r0, [r7], -r9, asr #10
    5704:	052e1203 	streq	r1, [lr, #-515]!	; 0xfffffdfd
    5708:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    570c:	31062009 	tstcc	r6, r9
    5710:	0615053f 			; <UNDEFINED> instruction: 0x0615053f
    5714:	06090501 	streq	r0, [r9], -r1, lsl #10
    5718:	010e053f 	tsteq	lr, pc, lsr r5
    571c:	01060f05 	tsteq	r6, r5, lsl #30
    5720:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    5724:	053e060b 	ldreq	r0, [lr, #-1547]!	; 0xfffff9f5
    5728:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    572c:	0d052e1d 	stceq	14, cr2, [r5, #-116]	; 0xffffff8c
    5730:	30140520 	andscc	r0, r4, r0, lsr #10
    5734:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    5738:	03060104 	movweq	r0, #24836	; 0x6104
    573c:	002e7fb8 	strhteq	r7, [lr], -r8
    5740:	66040402 	strvs	r0, [r4], -r2, lsl #8
    5744:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5748:	03090558 	movweq	r0, #38232	; 0x9558
    574c:	15055814 	strne	r5, [r5, #-2068]	; 0xfffff7ec
    5750:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5754:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    5758:	060f0501 	streq	r0, [pc], -r1, lsl #10
    575c:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    5760:	3e060b05 	vmlacc.f64	d0, d6, d5
    5764:	01060f05 	tsteq	r6, r5, lsl #30
    5768:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    576c:	1405200d 	strne	r2, [r5], #-13
    5770:	00050530 	andeq	r0, r5, r0, lsr r5
    5774:	03010402 	movweq	r0, #5122	; 0x1402
    5778:	02002e0a 	andeq	r2, r0, #10, 28	; 0xa0
    577c:	05670104 	strbeq	r0, [r7, #-260]!	; 0xfffffefc
    5780:	3c056a44 			; <UNDEFINED> instruction: 0x3c056a44
    5784:	0607052e 	streq	r0, [r7], -lr, lsr #10
    5788:	060b053f 			; <UNDEFINED> instruction: 0x060b053f
    578c:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
    5790:	02004e05 	andeq	r4, r0, #5, 28	; 0x50
    5794:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    5798:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
    579c:	09052001 	stmdbeq	r5, {r0, sp}
    57a0:	03054406 	movweq	r4, #21510	; 0x5406
    57a4:	05822e03 	streq	r2, [r2, #3587]	; 0xe03
    57a8:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    57ac:	3f062005 	svccc	0x00062005
    57b0:	061a053f 			; <UNDEFINED> instruction: 0x061a053f
    57b4:	20070501 	andcs	r0, r7, r1, lsl #10
    57b8:	054d2306 	strbeq	r2, [sp, #-774]	; 0xfffffcfa
    57bc:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    57c0:	053f0607 	ldreq	r0, [pc, #-1543]!	; 51c1 <_Min_Heap_Size+0x49c1>
    57c4:	0d05010c 	stfeqs	f0, [r5, #-48]	; 0xffffffd0
    57c8:	0c050106 	stfeqs	f0, [r5], {6}
    57cc:	0609052e 	streq	r0, [r9], -lr, lsr #10
    57d0:	060d053e 			; <UNDEFINED> instruction: 0x060d053e
    57d4:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
    57d8:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    57dc:	09053012 	stmdbeq	r5, {r1, r4, ip, sp}
    57e0:	2e570306 	cdpcs	3, 5, cr0, cr7, cr6, {0}
    57e4:	15053f95 	strne	r3, [r5, #-3989]	; 0xfffff06b
    57e8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    57ec:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    57f0:	060f0501 	streq	r0, [pc], -r1, lsl #10
    57f4:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    57f8:	3e060b05 	vmlacc.f64	d0, d6, d5
    57fc:	01060f05 	tsteq	r6, r5, lsl #30
    5800:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    5804:	1405200d 	strne	r2, [r5], #-13
    5808:	00050530 	andeq	r0, r5, r0, lsr r5
    580c:	03010402 	movweq	r0, #5122	; 0x1402
    5810:	07052e0a 	streq	r2, [r5, -sl, lsl #28]
    5814:	66170306 	ldrvs	r0, [r7], -r6, lsl #6
    5818:	0613054d 	ldreq	r0, [r3], -sp, asr #10
    581c:	06070501 	streq	r0, [r7], -r1, lsl #10
    5820:	010c053f 	tsteq	ip, pc, lsr r5
    5824:	01060d05 	tsteq	r6, r5, lsl #26
    5828:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    582c:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    5830:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    5834:	0b052e1b 	bleq	1510a8 <_Min_Heap_Size+0x1508a8>
    5838:	30120520 	andscc	r0, r2, r0, lsr #10
    583c:	88060305 	stmdahi	r6, {r0, r2, r8, r9}
    5840:	01061905 	tsteq	r6, r5, lsl #18
    5844:	06200505 	strteq	r0, [r0], -r5, lsl #10
    5848:	0200153e 	andeq	r1, r0, #260046848	; 0xf800000
    584c:	3c060104 	stfccs	f0, [r6], {4}
    5850:	08053206 	stmdaeq	r5, {r1, r2, r9, ip, sp}
    5854:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5858:	013e062e 	teqeq	lr, lr, lsr #12
    585c:	204a582e 	subcs	r5, sl, lr, lsr #16
    5860:	06150513 			; <UNDEFINED> instruction: 0x06150513
    5864:	06050501 	streq	r0, [r5], -r1, lsl #10
    5868:	06080523 	streq	r0, [r8], -r3, lsr #10
    586c:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    5870:	03060505 	movweq	r0, #25861	; 0x6505
    5874:	00013c12 	andeq	r3, r1, r2, lsl ip
    5878:	3c020402 	cfstrscc	mvf0, [r2], {2}
    587c:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    5880:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5884:	02005805 	andeq	r5, r0, #327680	; 0x50000
    5888:	004a0704 	subeq	r0, sl, r4, lsl #14
    588c:	14070402 	strne	r0, [r7], #-1026	; 0xfffffbfe
    5890:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    5894:	01060704 	tsteq	r6, r4, lsl #14
    5898:	02000705 	andeq	r0, r0, #1310720	; 0x140000
    589c:	06200704 	strteq	r0, [r0], -r4, lsl #14
    58a0:	06130531 			; <UNDEFINED> instruction: 0x06130531
    58a4:	06070501 	streq	r0, [r7], -r1, lsl #10
    58a8:	010c053f 	tsteq	ip, pc, lsr r5
    58ac:	01060d05 	tsteq	r6, r5, lsl #26
    58b0:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    58b4:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    58b8:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    58bc:	0b052e1b 	bleq	151130 <_Min_Heap_Size+0x150930>
    58c0:	4c120520 	cfldr32mi	mvfx0, [r2], {32}
    58c4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    58c8:	58030204 	stmdapl	r3, {r2, r9}
    58cc:	6316052e 	tstvs	r6, #192937984	; 0xb800000
    58d0:	03060705 	movweq	r0, #26373	; 0x6705
    58d4:	055b2e10 	ldrbeq	r2, [fp, #-3600]	; 0xfffff1f0
    58d8:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    58dc:	053e0607 	ldreq	r0, [lr, #-1543]!	; 0xfffff9f9
    58e0:	0d05010c 	stfeqs	f0, [r5, #-48]	; 0xffffffd0
    58e4:	0c050106 	stfeqs	f0, [r5], {6}
    58e8:	0609052e 	streq	r0, [r9], -lr, lsr #10
    58ec:	060d053e 			; <UNDEFINED> instruction: 0x060d053e
    58f0:	2e1b0501 	cfmul32cs	mvfx0, mvfx11, mvfx1
    58f4:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    58f8:	05053012 	streq	r3, [r5, #-18]	; 0xffffffee
    58fc:	01040200 	mrseq	r0, R12_usr
    5900:	02003406 	andeq	r3, r0, #100663296	; 0x6000000
    5904:	00660404 	rsbeq	r0, r6, r4, lsl #8
    5908:	58040402 	stmdapl	r4, {r1, sl}
    590c:	13030705 	movwne	r0, #14085	; 0x3705
    5910:	06130558 			; <UNDEFINED> instruction: 0x06130558
    5914:	06070501 	streq	r0, [r7], -r1, lsl #10
    5918:	010c053f 	tsteq	ip, pc, lsr r5
    591c:	01060d05 	tsteq	r6, r5, lsl #26
    5920:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    5924:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    5928:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    592c:	0b052e1b 	bleq	1511a0 <_Min_Heap_Size+0x1509a0>
    5930:	4c120520 	cfldr32mi	mvfx0, [r2], {32}
    5934:	34060505 	strcc	r0, [r6], #-1285	; 0xfffffafb
    5938:	01060705 	tsteq	r6, r5, lsl #14
    593c:	0603052e 	streq	r0, [r3], -lr, lsr #10
    5940:	1e053d19 	mcrne	13, 0, r3, cr5, cr9, {0}
    5944:	06050106 	streq	r0, [r5], -r6, lsl #2
    5948:	06050520 	streq	r0, [r5], -r0, lsr #10
    594c:	0608053f 			; <UNDEFINED> instruction: 0x0608053f
    5950:	4a070501 	bmi	1c6d5c <_Min_Heap_Size+0x1c655c>
    5954:	09053e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, ip, sp}
    5958:	31060106 	tstcc	r6, r6, lsl #2
    595c:	01040200 	mrseq	r0, R12_usr
    5960:	3d062e06 	stccc	14, cr2, [r6, #-24]	; 0xffffffe8
    5964:	0200594b 	andeq	r5, r0, #1228800	; 0x12c000
    5968:	3c060104 	stfccs	f0, [r6], {4}
    596c:	02040200 	andeq	r0, r4, #0, 4
    5970:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5974:	2f062e03 	svccs	0x00062e03
    5978:	15053f4d 	strne	r3, [r5, #-3917]	; 0xfffff0b3
    597c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5980:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    5984:	060f0501 	streq	r0, [pc], -r1, lsl #10
    5988:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    598c:	3e060b05 	vmlacc.f64	d0, d6, d5
    5990:	01060f05 	tsteq	r6, r5, lsl #30
    5994:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    5998:	1405200d 	strne	r2, [r5], #-13
    599c:	06070530 			; <UNDEFINED> instruction: 0x06070530
    59a0:	062e6103 	strteq	r6, [lr], -r3, lsl #2
    59a4:	00030566 	andeq	r0, r3, r6, ror #10
    59a8:	17010402 	strne	r0, [r1, -r2, lsl #8]
    59ac:	02000905 	andeq	r0, r0, #81920	; 0x14000
    59b0:	09030204 	stmdbeq	r3, {r2, r9}
    59b4:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    59b8:	02006701 	andeq	r6, r0, #262144	; 0x40000
    59bc:	00670104 	rsbeq	r0, r7, r4, lsl #2
    59c0:	67040402 	strvs	r0, [r4, -r2, lsl #8]
    59c4:	01040200 	mrseq	r0, R12_usr
    59c8:	12030667 	andne	r0, r3, #108003328	; 0x6700000
    59cc:	053ff866 	ldreq	pc, [pc, #-2150]!	; 516e <_Min_Heap_Size+0x496e>
    59d0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    59d4:	053f0609 	ldreq	r0, [pc, #-1545]!	; 53d3 <_Min_Heap_Size+0x4bd3>
    59d8:	0f05010e 	svceq	0x0005010e
    59dc:	0e050106 	adfeqs	f0, f5, f6
    59e0:	060b052e 	streq	r0, [fp], -lr, lsr #10
    59e4:	060f053e 			; <UNDEFINED> instruction: 0x060f053e
    59e8:	2e1d0501 	cfmul32cs	mvfx0, mvfx13, mvfx1
    59ec:	05200d05 	streq	r0, [r0, #-3333]!	; 0xfffff2fb
    59f0:	0a053014 	beq	151a48 <_Min_Heap_Size+0x151248>
    59f4:	052e3703 	streq	r3, [lr, #-1795]!	; 0xfffff8fd
    59f8:	50030609 	andpl	r0, r3, r9, lsl #12
    59fc:	15053f2e 	strne	r3, [r5, #-3886]	; 0xfffff0d2
    5a00:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5a04:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    5a08:	060f0501 	streq	r0, [pc], -r1, lsl #10
    5a0c:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    5a10:	3e060b05 	vmlacc.f64	d0, d6, d5
    5a14:	01060f05 	tsteq	r6, r5, lsl #30
    5a18:	052e1d05 	streq	r1, [lr, #-3333]!	; 0xfffff2fb
    5a1c:	1405200d 	strne	r2, [r5], #-13
    5a20:	030a0530 	movweq	r0, #42288	; 0xa530
    5a24:	07052e26 	streq	r2, [r5, -r6, lsr #28]
    5a28:	2e620306 	cdpcs	3, 6, cr0, cr2, cr6, {0}
    5a2c:	01060905 	tsteq	r6, r5, lsl #18
    5a30:	14053506 	strne	r3, [r5], #-1286	; 0xfffffafa
    5a34:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5a38:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    5a3c:	13060e05 	movwne	r0, #28165	; 0x6e05
    5a40:	052e5005 	streq	r5, [lr, #-5]!
    5a44:	0e051f40 	cdpeq	15, 0, cr1, cr5, cr0, {2}
    5a48:	2e560530 	mrccs	5, 2, r0, cr6, cr0, {1}
    5a4c:	051f5c05 	ldreq	r5, [pc, #-3077]	; 4e4f <_Min_Heap_Size+0x464f>
    5a50:	6f05304f 	svcvs	0x0005304f
    5a54:	680e051f 	stmdavs	lr, {r0, r1, r2, r3, r4, r8, sl}
    5a58:	052e5105 	streq	r5, [lr, #-261]!	; 0xfffffefb
    5a5c:	5e052057 	mcrpl	0, 0, r2, cr5, cr7, {2}
    5a60:	1f6f0520 	svcne	0x006f0520
    5a64:	053e0e05 	ldreq	r0, [lr, #-3589]!	; 0xfffff1fb
    5a68:	7e052e4f 	cdpvc	14, 0, cr2, cr5, cr15, {2}
    5a6c:	030a051f 	movweq	r0, #42271	; 0xa51f
    5a70:	0c053c09 	stceq	12, cr3, [r5], {9}
    5a74:	2e7daf03 	cdpcs	15, 7, cr10, cr13, cr3, {0}
    5a78:	d2030105 	andle	r0, r3, #1073741825	; 0x40000001
    5a7c:	10052002 	andne	r2, r5, r2
    5a80:	207dbe03 	rsbscs	fp, sp, r3, lsl #28
    5a84:	052e3503 	streq	r3, [lr, #-1283]!	; 0xfffffafd
    5a88:	028c030a 	addeq	r0, ip, #671088640	; 0x28000000
    5a8c:	2101052e 	tstcs	r1, lr, lsr #10
    5a90:	63031005 	movwvs	r1, #12293	; 0x3005
    5a94:	0312052e 	tsteq	r2, #192937984	; 0xb800000
    5a98:	02f22e17 	rscseq	r2, r2, #368	; 0x170
    5a9c:	01010002 	tsteq	r1, r2
    5aa0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5aa4:	00000002 	andeq	r0, r0, r2
    5aa8:	06870300 	streq	r0, [r7], r0, lsl #6
    5aac:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5ab0:	14590603 	ldrbne	r0, [r9], #-1539	; 0xfffff9fd
    5ab4:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    5ab8:	00200601 	eoreq	r0, r0, r1, lsl #12
    5abc:	3c020402 	cfstrscc	mvf0, [r2], {2}
    5ac0:	03040200 	movweq	r0, #16896	; 0x4200
    5ac4:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5ac8:	3e063c04 	cdpcc	12, 0, cr3, cr6, cr4, {0}
    5acc:	01060505 	tsteq	r6, r5, lsl #10
    5ad0:	02003006 	andeq	r3, r0, #6
    5ad4:	20060104 	andcs	r0, r6, r4, lsl #2
    5ad8:	02040200 	andeq	r0, r4, #0, 4
    5adc:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5ae0:	3f063c03 	svccc	0x00063c03
    5ae4:	20062e01 	andcs	r2, r6, r1, lsl #28
    5ae8:	204a4a06 	subcs	r4, sl, r6, lsl #20
    5aec:	06190515 			; <UNDEFINED> instruction: 0x06190515
    5af0:	06050501 	streq	r0, [r5], -r1, lsl #10
    5af4:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    5af8:	06050501 	streq	r0, [r5], -r1, lsl #10
    5afc:	061b052f 	ldreq	r0, [fp], -pc, lsr #10
    5b00:	06050501 	streq	r0, [r5], -r1, lsl #10
    5b04:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    5b08:	06050501 	streq	r0, [r5], -r1, lsl #10
    5b0c:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    5b10:	06050501 	streq	r0, [r5], -r1, lsl #10
    5b14:	4a064d21 	bmi	198fa0 <_Min_Heap_Size+0x1987a0>
    5b18:	20030105 	andcs	r0, r3, r5, lsl #2
    5b1c:	0003052e 	andeq	r0, r3, lr, lsr #10
    5b20:	03010402 	movweq	r0, #5122	; 0x1402
    5b24:	02002e4d 	andeq	r2, r0, #1232	; 0x4d0
    5b28:	002e0104 	eoreq	r0, lr, r4, lsl #2
    5b2c:	20010402 	andcs	r0, r1, r2, lsl #8
    5b30:	01040200 	mrseq	r0, R12_usr
    5b34:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5b38:	05052105 	streq	r2, [r5, #-261]	; 0xfffffefb
    5b3c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5b40:	1803066a 	stmdane	r3, {r1, r3, r5, r6, r9, sl}
    5b44:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5b48:	00200601 	eoreq	r0, r0, r1, lsl #12
    5b4c:	3c020402 	cfstrscc	mvf0, [r2], {2}
    5b50:	03040200 	movweq	r0, #16896	; 0x4200
    5b54:	013f063c 	teqeq	pc, ip, lsr r6	; <UNPREDICTABLE>
    5b58:	0620062e 	strteq	r0, [r0], -lr, lsr #12
    5b5c:	15204a4a 	strne	r4, [r0, #-2634]!	; 0xfffff5b6
    5b60:	01061905 	tsteq	r6, r5, lsl #18
    5b64:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    5b68:	01061a05 	tsteq	r6, r5, lsl #20
    5b6c:	2f060505 	svccs	0x00060505
    5b70:	01061b05 	tsteq	r6, r5, lsl #22
    5b74:	2f060505 	svccs	0x00060505
    5b78:	01061a05 	tsteq	r6, r5, lsl #20
    5b7c:	21060505 	tstcs	r6, r5, lsl #10
    5b80:	01061f05 	tsteq	r6, r5, lsl #30
    5b84:	21060505 	tstcs	r6, r5, lsl #10
    5b88:	0558064d 	ldrbeq	r0, [r8, #-1613]	; 0xfffff9b3
    5b8c:	05053601 	streq	r3, [r5, #-1537]	; 0xfffff9ff
    5b90:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    5b94:	02206a03 	eoreq	r6, r0, #12288	; 0x3000
    5b98:	0101000e 	tsteq	r1, lr
    5b9c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5ba0:	00000002 	andeq	r0, r0, r2
    5ba4:	06c90300 	strbeq	r0, [r9], r0, lsl #6
    5ba8:	13030501 	movwne	r0, #13569	; 0x3501
    5bac:	01062605 	tsteq	r6, r5, lsl #12
    5bb0:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
    5bb4:	01010003 	tsteq	r1, r3
    5bb8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5bbc:	00000002 	andeq	r0, r0, r2
    5bc0:	06d20300 	ldrbeq	r0, [r2], r0, lsl #6
    5bc4:	13030501 	movwne	r0, #13569	; 0x3501
    5bc8:	01062605 	tsteq	r6, r5, lsl #12
    5bcc:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
    5bd0:	01010003 	tsteq	r1, r3
    5bd4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5bd8:	00000002 	andeq	r0, r0, r2
    5bdc:	06f50300 	ldrbteq	r0, [r5], r0, lsl #6
    5be0:	21030501 	tstcs	r3, r1, lsl #10
    5be4:	0e051513 	mcreq	5, 0, r1, cr5, cr3, {0}
    5be8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    5bec:	2e03052e 	cfsh32cs	mvfx0, mvfx3, #30
    5bf0:	03060705 	movweq	r0, #26373	; 0x6705
    5bf4:	11054a10 	tstne	r5, r0, lsl sl
    5bf8:	0c050106 	stfeqs	f0, [r5], {6}
    5bfc:	0607052e 	streq	r0, [r7], -lr, lsr #10
    5c00:	060a052f 	streq	r0, [sl], -pc, lsr #10
    5c04:	20090501 	andcs	r0, r9, r1, lsl #10
    5c08:	48053f06 	stmdami	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
    5c0c:	38050106 	stmdacc	r5, {r1, r2, r8}
    5c10:	2e35052e 	cdpcs	5, 3, cr0, cr5, cr14, {1}
    5c14:	08018205 	stmdaeq	r1, {r0, r2, r9, pc}
    5c18:	06070566 	streq	r0, [r7], -r6, ror #10
    5c1c:	0615057b 			; <UNDEFINED> instruction: 0x0615057b
    5c20:	2e330501 	cdpcs	5, 3, cr0, cr3, cr1, {0}
    5c24:	052e4c05 	streq	r4, [lr, #-3077]!	; 0xfffff3fb
    5c28:	0705200c 	streq	r2, [r5, -ip]
    5c2c:	14052206 	strne	r2, [r5], #-518	; 0xfffffdfa
    5c30:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5c34:	09052f06 	stmdbeq	r5, {r1, r2, r8, r9, sl, fp, sp}
    5c38:	0648051b 			; <UNDEFINED> instruction: 0x0648051b
    5c3c:	2e380501 	cdpcs	5, 3, cr0, cr8, cr1, {0}
    5c40:	052e3505 	streq	r3, [lr, #-1285]!	; 0xfffffafb
    5c44:	66080182 	strvs	r0, [r8], -r2, lsl #3
    5c48:	03140574 	tsteq	r4, #116, 10	; 0x1d000000
    5c4c:	03052070 	movweq	r2, #20592	; 0x5070
    5c50:	062e7703 	strteq	r7, [lr], -r3, lsl #14
    5c54:	05202603 	streq	r2, [r0, #-1539]!	; 0xfffff9fd
    5c58:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    5c5c:	01010008 	tsteq	r1, r8
    5c60:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5c64:	00000002 	andeq	r0, r0, r2
    5c68:	04cf0300 	strbeq	r0, [pc], #768	; 5c70 <_Min_Heap_Size+0x5470>
    5c6c:	13030501 	movwne	r0, #13569	; 0x3501
    5c70:	06050515 			; <UNDEFINED> instruction: 0x06050515
    5c74:	38010501 	stmdacc	r1, {r0, r8, sl}
    5c78:	03060305 	movweq	r0, #25349	; 0x6305
    5c7c:	354b3c0a 	strbcc	r3, [fp, #-3082]	; 0xfffff3f6
    5c80:	01061105 	tsteq	r6, r5, lsl #2
    5c84:	064a0505 	strbeq	r0, [sl], -r5, lsl #10
    5c88:	08054031 	stmdaeq	r5, {r0, r4, r5, lr}
    5c8c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5c90:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    5c94:	06190543 	ldreq	r0, [r9], -r3, asr #10
    5c98:	20050501 	andcs	r0, r5, r1, lsl #10
    5c9c:	07054006 	streq	r4, [r5, -r6]
    5ca0:	3e060106 	adfccs	f0, f6, f6
    5ca4:	055b0505 	ldrbeq	r0, [fp, #-1285]	; 0xfffffafb
    5ca8:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    5cac:	3e062007 	cdpcc	0, 0, cr2, cr6, cr7, {0}
    5cb0:	005b0505 	subseq	r0, fp, r5, lsl #10
    5cb4:	06010402 	streq	r0, [r1], -r2, lsl #8
    5cb8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5cbc:	02002e02 	andeq	r2, r0, #2, 28
    5cc0:	002e0304 	eoreq	r0, lr, r4, lsl #6
    5cc4:	2e040402 	cdpcs	4, 0, cr0, cr4, cr2, {0}
    5cc8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    5ccc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5cd0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    5cd4:	002e0704 	eoreq	r0, lr, r4, lsl #14
    5cd8:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
    5cdc:	03052f06 	movweq	r2, #24326	; 0x5f06
    5ce0:	06190578 			; <UNDEFINED> instruction: 0x06190578
    5ce4:	20050501 	andcs	r0, r5, r1, lsl #10
    5ce8:	053f3e06 	ldreq	r3, [pc, #-3590]!	; 4eea <_Min_Heap_Size+0x46ea>
    5cec:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    5cf0:	0a052007 	beq	14dd14 <_Min_Heap_Size+0x14d514>
    5cf4:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    5cf8:	01064c05 	tsteq	r6, r5, lsl #24
    5cfc:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    5d00:	0d030607 	stceq	6, cr0, [r3, #-28]	; 0xffffffe4
    5d04:	060a052e 	streq	r0, [sl], -lr, lsr #10
    5d08:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
    5d0c:	50060505 	andpl	r0, r6, r5, lsl #10
    5d10:	06110569 	ldreq	r0, [r1], -r9, ror #10
    5d14:	06050501 	streq	r0, [r5], -r1, lsl #10
    5d18:	010b053e 	tsteq	fp, lr, lsr r5
    5d1c:	01060c05 	tsteq	r6, r5, lsl #24
    5d20:	054a3f05 	strbeq	r3, [sl, #-3845]	; 0xfffff0fb
    5d24:	0705200b 	streq	r2, [r5, -fp]
    5d28:	0c053e06 	stceq	14, cr3, [r5], {6}
    5d2c:	1a050106 	bne	14614c <_Min_Heap_Size+0x14594c>
    5d30:	200a052e 	andcs	r0, sl, lr, lsr #10
    5d34:	054c1005 	strbeq	r1, [ip, #-5]
    5d38:	04020003 	streq	r0, [r2], #-3
    5d3c:	7fad0301 	svcvc	0x00ad0301
    5d40:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    5d44:	02002e01 	andeq	r2, r0, #1, 28
    5d48:	00200104 	eoreq	r0, r0, r4, lsl #2
    5d4c:	3d010402 	cfstrscc	mvf0, [r1, #-8]
    5d50:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    5d54:	23030904 	movwcs	r0, #14596	; 0x3904
    5d58:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    5d5c:	07056d01 	streq	r6, [r5, -r1, lsl #26]
    5d60:	0a056c06 	beq	160d80 <_Min_Heap_Size+0x160580>
    5d64:	09050106 	stmdbeq	r5, {r1, r2, r8}
    5d68:	3e10052e 	cfmul64cc	mvdx0, mvdx0, mvdx14
    5d6c:	36060705 	strcc	r0, [r6], -r5, lsl #14
    5d70:	01060a05 	tsteq	r6, r5, lsl #20
    5d74:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    5d78:	03053e10 	movweq	r3, #24080	; 0x5e10
    5d7c:	2e1c0306 	cdpcs	3, 1, cr0, cr12, cr6, {0}
    5d80:	01061105 	tsteq	r6, r5, lsl #2
    5d84:	064a0505 	strbeq	r0, [sl], -r5, lsl #10
    5d88:	08054031 	stmdaeq	r5, {r0, r4, r5, lr}
    5d8c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    5d90:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    5d94:	06190535 			; <UNDEFINED> instruction: 0x06190535
    5d98:	20050501 	andcs	r0, r5, r1, lsl #10
    5d9c:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
    5da0:	2e060104 	adfcss	f0, f6, f4
    5da4:	02040200 	andeq	r0, r4, #0, 4
    5da8:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5dac:	02003c03 	andeq	r3, r0, #768	; 0x300
    5db0:	063c0404 	ldrteq	r0, [ip], -r4, lsl #8
    5db4:	7803053d 	stmdavc	r3, {r0, r2, r3, r4, r5, r8, sl}
    5db8:	01061905 	tsteq	r6, r5, lsl #18
    5dbc:	06200505 	strteq	r0, [r0], -r5, lsl #10
    5dc0:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    5dc4:	002e0601 	eoreq	r0, lr, r1, lsl #12
    5dc8:	3c020402 	cfstrscc	mvf0, [r2], {2}
    5dcc:	03040200 	movweq	r0, #16896	; 0x4200
    5dd0:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    5dd4:	3d063c04 	stccc	12, cr3, [r6, #-16]
    5dd8:	05860305 	streq	r0, [r6, #773]	; 0x305
    5ddc:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    5de0:	5b052e44 	blpl	1516f8 <_Min_Heap_Size+0x150ef8>
    5de4:	2e3f052e 	cdpcs	5, 3, cr0, cr15, cr14, {1}
    5de8:	052e2f05 	streq	r2, [lr, #-3845]!	; 0xfffff0fb
    5dec:	03052013 	movweq	r2, #20499	; 0x5013
    5df0:	054c3106 	strbeq	r3, [ip, #-262]	; 0xfffffefa
    5df4:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    5df8:	05052101 	streq	r2, [r5, #-257]	; 0xfffffeff
    5dfc:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    5e00:	00206e03 	eoreq	r6, r0, r3, lsl #28
    5e04:	6d050402 	cfstrsvs	mvf0, [r5, #-8]
    5e08:	8c030c05 	stchi	12, cr0, [r3], {5}
    5e0c:	0105667f 	tsteq	r5, pc, ror r6
    5e10:	2000ff03 	andcs	pc, r0, r3, lsl #30
    5e14:	96030e05 	strls	r0, [r3], -r5, lsl #28
    5e18:	1005207f 	andne	r2, r5, pc, ror r0
    5e1c:	052e3503 	streq	r3, [lr, #-1283]!	; 0xfffffafd
    5e20:	2e1c030e 	cdpcs	3, 1, cr0, cr12, cr14, {0}
    5e24:	01000e02 	tsteq	r0, r2, lsl #28
    5e28:	00010501 	andeq	r0, r1, r1, lsl #10
    5e2c:	10b00205 	adcsne	r0, r0, r5, lsl #4
    5e30:	ad030800 	stcge	8, cr0, [r3, #-0]
    5e34:	03050107 	movweq	r0, #20743	; 0x5107
    5e38:	06010513 			; <UNDEFINED> instruction: 0x06010513
    5e3c:	00060213 	andeq	r0, r6, r3, lsl r2
    5e40:	01050101 	tsteq	r5, r1, lsl #2
    5e44:	bc020500 	cfstr32lt	mvfx0, [r2], {-0}
    5e48:	03080010 	movweq	r0, #32784	; 0x8010
    5e4c:	050107b8 	streq	r0, [r1, #-1976]	; 0xfffff848
    5e50:	0b052203 	bleq	14e664 <_Min_Heap_Size+0x14de64>
    5e54:	36050106 	strcc	r0, [r5], -r6, lsl #2
    5e58:	2e4e052e 	cdpcs	5, 4, cr0, cr14, cr14, {1}
    5e5c:	052e3105 	streq	r3, [lr, #-261]!	; 0xfffffefb
    5e60:	07022f01 	streq	r2, [r2, -r1, lsl #30]
    5e64:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5e68:	02050001 	andeq	r0, r5, #1
    5e6c:	080010dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip}
    5e70:	0107c403 	tsteq	r7, r3, lsl #8
    5e74:	05220305 	streq	r0, [r2, #-773]!	; 0xfffffcfb
    5e78:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    5e7c:	4d052e35 	stcmi	14, cr2, [r5, #-212]	; 0xffffff2c
    5e80:	2e30052e 	cdpcs	5, 3, cr0, cr0, cr14, {1}
    5e84:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    5e88:	01010007 	tsteq	r1, r7
    5e8c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5e90:	00000002 	andeq	r0, r0, r2
    5e94:	07d10300 	ldrbeq	r0, [r1, r0, lsl #6]
    5e98:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    5e9c:	01062505 	tsteq	r6, r5, lsl #10
    5ea0:	31060305 	tstcc	r6, r5, lsl #6
    5ea4:	01060a05 	tsteq	r6, r5, lsl #20
    5ea8:	062e0505 	strteq	r0, [lr], -r5, lsl #10
    5eac:	0621053e 			; <UNDEFINED> instruction: 0x0621053e
    5eb0:	06030501 	streq	r0, [r3], -r1, lsl #10
    5eb4:	053c0c03 	ldreq	r0, [ip, #-3075]!	; 0xfffff3fd
    5eb8:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    5ebc:	3e062e05 	cdpcc	14, 0, cr2, cr6, cr5, {0}
    5ec0:	01062105 	tsteq	r6, r5, lsl #2
    5ec4:	35060305 	strcc	r0, [r6, #-773]	; 0xfffffcfb
    5ec8:	01063b05 	tsteq	r6, r5, lsl #22
    5ecc:	052e2c05 	streq	r2, [lr, #-3077]!	; 0xfffff3fb
    5ed0:	03052e2a 	movweq	r2, #24106	; 0x5e2a
    5ed4:	0a052306 	beq	14eaf4 <_Min_Heap_Size+0x14e2f4>
    5ed8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5edc:	053e0620 	ldreq	r0, [lr, #-1568]!	; 0xfffff9e0
    5ee0:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5ee4:	0c030603 	stceq	6, cr0, [r3], {3}
    5ee8:	060a052e 	streq	r0, [sl], -lr, lsr #10
    5eec:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    5ef0:	21053e06 	tstcs	r5, r6, lsl #28
    5ef4:	03050106 	movweq	r0, #20742	; 0x5106
    5ef8:	0a053606 	beq	153718 <_Min_Heap_Size+0x152f18>
    5efc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5f00:	053e062e 	ldreq	r0, [lr, #-1582]!	; 0xfffff9d2
    5f04:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    5f08:	05340603 	ldreq	r0, [r4, #-1539]!	; 0xfffff9fd
    5f0c:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    5f10:	24052e26 	strcs	r2, [r5], #-3622	; 0xfffff1da
    5f14:	0603052e 	streq	r0, [r3], -lr, lsr #10
    5f18:	062f0521 	strteq	r0, [pc], -r1, lsr #10
    5f1c:	20210501 	eorcs	r0, r1, r1, lsl #10
    5f20:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    5f24:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    5f28:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    5f2c:	1f052021 	svcne	0x00052021
    5f30:	0603052e 	streq	r0, [r3], -lr, lsr #10
    5f34:	06320521 	ldrteq	r0, [r2], -r1, lsr #10
    5f38:	203c0501 	eorscs	r0, ip, r1, lsl #10
    5f3c:	052e5005 	streq	r5, [lr, #-5]!
    5f40:	1f052e21 	svcne	0x00052e21
    5f44:	06030520 	streq	r0, [r3], -r0, lsr #10
    5f48:	06300521 	ldrteq	r0, [r0], -r1, lsr #10
    5f4c:	20210501 	eorcs	r0, r1, r1, lsl #10
    5f50:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    5f54:	08052101 	stmdaeq	r5, {r0, r8, sp}
    5f58:	20450306 	subcs	r0, r5, r6, lsl #6
    5f5c:	01060f05 	tsteq	r6, r5, lsl #30
    5f60:	052e0a05 	streq	r0, [lr, #-2565]!	; 0xfffff5fb
    5f64:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    5f68:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5f6c:	054e0605 	strbeq	r0, [lr, #-1541]	; 0xfffff9fb
    5f70:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    5f74:	0a030605 	beq	c7790 <_Min_Heap_Size+0xc6f90>
    5f78:	0621053c 			; <UNDEFINED> instruction: 0x0621053c
    5f7c:	06080501 	streq	r0, [r8], -r1, lsl #10
    5f80:	053c0a03 	ldreq	r0, [ip, #-2563]!	; 0xfffff5fd
    5f84:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    5f88:	05052e0a 	streq	r2, [r5, #-3594]	; 0xfffff1f6
    5f8c:	21053e06 	tstcs	r5, r6, lsl #28
    5f90:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5f94:	21054006 	tstcs	r5, r6
    5f98:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    5f9c:	3c0a0306 	stccc	3, cr0, [sl], {6}
    5fa0:	01062105 	tsteq	r6, r5, lsl #2
    5fa4:	03060505 	movweq	r0, #25861	; 0x6505
    5fa8:	25053c0a 	strcs	r3, [r5, #-3082]	; 0xfffff3f6
    5fac:	06020106 	streq	r0, [r2], -r6, lsl #2
    5fb0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    5fb4:	02050001 	andeq	r0, r5, #1
    5fb8:	00000000 	andeq	r0, r0, r0
    5fbc:	0108a003 	tsteq	r8, r3
    5fc0:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    5fc4:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    5fc8:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
    5fcc:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    5fd0:	23052e25 	movwcs	r2, #24101	; 0x5e25
    5fd4:	0603052e 	streq	r0, [r3], -lr, lsr #10
    5fd8:	06340523 	ldrteq	r0, [r4], -r3, lsr #10
    5fdc:	20260501 	eorcs	r0, r6, r1, lsl #10
    5fe0:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
    5fe4:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    5fe8:	05010635 	streq	r0, [r1, #-1589]	; 0xfffff9cb
    5fec:	25052027 	strcs	r2, [r5, #-39]	; 0xffffffd9
    5ff0:	0603052e 	streq	r0, [r3], -lr, lsr #10
    5ff4:	06360523 	ldrteq	r0, [r6], -r3, lsr #10
    5ff8:	20270501 	eorcs	r0, r7, r1, lsl #10
    5ffc:	053c2505 	ldreq	r2, [ip, #-1285]!	; 0xfffffafb
    6000:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6004:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    6008:	0e052e10 	mcreq	14, 0, r2, cr5, cr0, {0}
    600c:	2101052e 	tstcs	r1, lr, lsr #10
    6010:	01000502 	tsteq	r0, r2, lsl #10
    6014:	00010501 	andeq	r0, r1, r1, lsl #10
    6018:	00000205 	andeq	r0, r0, r5, lsl #4
    601c:	cb030000 	blgt	c6024 <_Min_Heap_Size+0xc5824>
    6020:	02160108 	andseq	r0, r6, #8, 2
    6024:	01010001 	tsteq	r1, r1
    6028:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    602c:	00000002 	andeq	r0, r0, r2
    6030:	08ba0300 	ldmeq	sl!, {r8, r9}
    6034:	22030501 	andcs	r0, r3, #4194304	; 0x400000
    6038:	01060605 	tsteq	r6, r5, lsl #12
    603c:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    6040:	05054401 	streq	r4, [r5, #-1025]	; 0xfffffbff
    6044:	05311b06 	ldreq	r1, [r1, #-2822]!	; 0xfffff4fa
    6048:	023e0601 	eorseq	r0, lr, #1048576	; 0x100000
    604c:	01010004 	tsteq	r1, r4
    6050:	0000084d 	andeq	r0, r0, sp, asr #16
    6054:	01b40003 			; <UNDEFINED> instruction: 0x01b40003
    6058:	01020000 	mrseq	r0, (UNDEF: 2)
    605c:	000d0efb 	strdeq	r0, [sp], -fp
    6060:	01010101 	tsteq	r1, r1, lsl #2
    6064:	01000000 	mrseq	r0, (UNDEF: 0)
    6068:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    606c:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    6070:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    6074:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    6078:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    607c:	5f787834 	svcpl	0x00787834
    6080:	5f4c4148 	svcpl	0x004c4148
    6084:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    6088:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    608c:	2f006372 	svccs	0x00006372
    6090:	2f74706f 	svccs	0x0074706f
    6094:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    6098:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    609c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    60a0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    60a4:	30312d69 	eorscc	r2, r1, r9, ror #26
    60a8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    60ac:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    60b0:	612f3031 			; <UNDEFINED> instruction: 0x612f3031
    60b4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    60b8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    60bc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    60c0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    60c4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    60c8:	63616d2f 	cmnvs	r1, #3008	; 0xbc0
    60cc:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    60d0:	706f2f00 	rsbvc	r2, pc, r0, lsl #30
    60d4:	63672f74 	cmnvs	r7, #116, 30	; 0x1d0
    60d8:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    60dc:	6f6e2d6d 	svcvs	0x006e2d6d
    60e0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    60e4:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    60e8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    60ec:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    60f0:	30312e31 	eorscc	r2, r1, r1, lsr lr
    60f4:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    60f8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    60fc:	61652d65 	cmnvs	r5, r5, ror #26
    6100:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    6104:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    6108:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
    610c:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    6110:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    6114:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    6118:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    611c:	2f534953 	svccs	0x00534953
    6120:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    6124:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
    6128:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
    612c:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    6130:	2f787834 	svccs	0x00787834
    6134:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    6138:	00656475 	rsbeq	r6, r5, r5, ror r4
    613c:	442f2e2e 	strtmi	r2, [pc], #-3630	; 6144 <_Min_Heap_Size+0x5944>
    6140:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    6144:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    6148:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    614c:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    6150:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    6154:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    6158:	2f726576 	svccs	0x00726576
    615c:	00636e49 	rsbeq	r6, r3, r9, asr #28
    6160:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    6164:	2f65726f 	svccs	0x0065726f
    6168:	00636e49 	rsbeq	r6, r3, r9, asr #28
    616c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    6170:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    6174:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    6178:	675f6c61 	ldrbvs	r6, [pc, -r1, ror #24]
    617c:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    6180:	00010063 	andeq	r0, r1, r3, rrx
    6184:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    6188:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    618c:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    6190:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    6194:	00020068 	andeq	r0, r2, r8, rrx
    6198:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    619c:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    61a0:	0300682e 	movweq	r6, #2094	; 0x82e
    61a4:	74730000 	ldrbtvc	r0, [r3], #-0
    61a8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    61ac:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    61b0:	00682e78 	rsbeq	r2, r8, r8, ror lr
    61b4:	73000004 	movwvc	r0, #4
    61b8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    61bc:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    61c0:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    61c4:	74730000 	ldrbtvc	r0, [r3], #-0
    61c8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    61cc:	5f787834 	svcpl	0x00787834
    61d0:	5f6c6168 	svcpl	0x006c6168
    61d4:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    61d8:	00050068 	andeq	r0, r5, r8, rrx
    61dc:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    61e0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    61e4:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    61e8:	675f6c61 	ldrbvs	r6, [pc, -r1, ror #24]
    61ec:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
    61f0:	00050068 	andeq	r0, r5, r8, rrx
    61f4:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    61f8:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    61fc:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    6200:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    6204:	2e666e6f 	cdpcs	14, 6, cr6, cr6, cr15, {3}
    6208:	00060068 	andeq	r0, r6, r8, rrx
    620c:	01050000 	mrseq	r0, (UNDEF: 5)
    6210:	fc020500 	stc2	5, cr0, [r2], {-0}
    6214:	03080010 	movweq	r0, #32784	; 0x8010
    6218:	060101a4 	streq	r0, [r1], -r4, lsr #3
    621c:	06030501 	streq	r0, [r3], -r1, lsl #10
    6220:	13131359 	tstne	r3, #1677721601	; 0x64000001
    6224:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    6228:	003c0601 	eorseq	r0, ip, r1, lsl #12
    622c:	4a020402 	bmi	8723c <_Min_Heap_Size+0x86a3c>
    6230:	03040200 	movweq	r0, #16896	; 0x4200
    6234:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6238:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    623c:	004a0504 	subeq	r0, sl, r4, lsl #10
    6240:	4a060402 	bmi	187250 <_Min_Heap_Size+0x186a50>
    6244:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6248:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    624c:	02004a08 	andeq	r4, r0, #8, 20	; 0x8000
    6250:	004a0904 	subeq	r0, sl, r4, lsl #18
    6254:	20090402 	andcs	r0, r9, r2, lsl #8
    6258:	09040200 	stmdbeq	r4, {r9}
    625c:	002f0620 	eoreq	r0, pc, r0, lsr #12
    6260:	06020402 	streq	r0, [r2], -r2, lsl #8
    6264:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6268:	4b063c03 	blmi	19527c <_Min_Heap_Size+0x194a7c>
    626c:	01040200 	mrseq	r0, R12_usr
    6270:	02003c06 	andeq	r3, r0, #1536	; 0x600
    6274:	002e0204 	eoreq	r0, lr, r4, lsl #4
    6278:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    627c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    6280:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6284:	02003c05 	andeq	r3, r0, #1280	; 0x500
    6288:	003c0604 	eorseq	r0, ip, r4, lsl #12
    628c:	3c070402 	cfstrscc	mvf0, [r7], {2}
    6290:	08040200 	stmdaeq	r4, {r9}
    6294:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6298:	02003c09 	andeq	r3, r0, #2304	; 0x900
    629c:	053c0a04 	ldreq	r0, [ip, #-2564]!	; 0xfffff5fc
    62a0:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    62a4:	00c70301 	sbceq	r0, r7, r1, lsl #6
    62a8:	0003052e 	andeq	r0, r3, lr, lsr #10
    62ac:	030b0402 	movweq	r0, #46082	; 0xb402
    62b0:	052e7fb9 	streq	r7, [lr, #-4025]!	; 0xfffff047
    62b4:	12030609 	andne	r0, r3, #9437184	; 0x900000
    62b8:	0e053e58 	mcreq	14, 0, r3, cr5, cr8, {2}
    62bc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    62c0:	37052106 	strcc	r2, [r5, -r6, lsl #2]
    62c4:	2a050106 	bcs	1466e4 <_Min_Heap_Size+0x145ee4>
    62c8:	2e0e0520 	cfsh32cs	mvfx0, mvfx14, #16
    62cc:	2f060905 	svccs	0x00060905
    62d0:	01061b05 	tsteq	r6, r5, lsl #22
    62d4:	05202305 	streq	r2, [r0, #-773]!	; 0xfffffcfb
    62d8:	0905200e 	stmdbeq	r5, {r1, r2, r3, sp}
    62dc:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    62e0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    62e4:	0e052306 	cdpeq	3, 0, cr2, cr5, cr6, {0}
    62e8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    62ec:	0e052106 	adfeqs	f2, f5, f6
    62f0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    62f4:	1d052f06 	stcne	15, cr2, [r5, #-24]	; 0xffffffe8
    62f8:	33050106 	movwcc	r0, #20742	; 0x5106
    62fc:	2e470520 	cdpcs	5, 4, cr0, cr7, cr0, {1}
    6300:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
    6304:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    6308:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    630c:	04020009 	streq	r0, [r2], #-9
    6310:	2e750301 	cdpcs	3, 7, cr0, cr5, cr1, {0}
    6314:	01040200 	mrseq	r0, R12_usr
    6318:	06581103 	ldrbeq	r1, [r8], -r3, lsl #2
    631c:	00580d03 	subseq	r0, r8, r3, lsl #26
    6320:	06010402 	streq	r0, [r1], -r2, lsl #8
    6324:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6328:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    632c:	002e0804 	eoreq	r0, lr, r4, lsl #16
    6330:	2e0b0402 	cdpcs	4, 0, cr0, cr11, cr2, {0}
    6334:	0c040200 	sfmeq	f0, 4, [r4], {-0}
    6338:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    633c:	02002e0f 	andeq	r2, r0, #15, 28	; 0xf0
    6340:	002e1204 	eoreq	r1, lr, r4, lsl #4
    6344:	2e140402 	cfmulscs	mvf0, mvf4, mvf2
    6348:	17040200 	strne	r0, [r4, -r0, lsl #4]
    634c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6350:	02002e1c 	andeq	r2, r0, #28, 28	; 0x1c0
    6354:	002e1e04 	eoreq	r1, lr, r4, lsl #28
    6358:	2e210402 	cdpcs	4, 2, cr0, cr1, cr2, {0}
    635c:	24053006 	strcs	r3, [r5], #-6
    6360:	0e050106 	adfeqs	f0, f5, f6
    6364:	06090520 	streq	r0, [r9], -r0, lsr #10
    6368:	061c053d 			; <UNDEFINED> instruction: 0x061c053d
    636c:	2e390501 	cdpcs	5, 3, cr0, cr9, cr1, {0}
    6370:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    6374:	09052e0e 	stmdbeq	r5, {r1, r2, r3, r9, sl, fp, sp}
    6378:	26052f06 	strcs	r2, [r5], -r6, lsl #30
    637c:	33050106 	movwcc	r0, #20742	; 0x5106
    6380:	200e0520 	andcs	r0, lr, r0, lsr #10
    6384:	21060905 	tstcs	r6, r5, lsl #18
    6388:	01062405 	tsteq	r6, r5, lsl #8
    638c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    6390:	05372204 	ldreq	r2, [r7, #-516]!	; 0xfffffdfc
    6394:	5817031d 	ldmdapl	r7, {r0, r2, r3, r4, r8, r9}
    6398:	05741205 	ldrbeq	r1, [r4, #-517]!	; 0xfffffdfb
    639c:	04020034 	streq	r0, [r2], #-52	; 0xffffffcc
    63a0:	0e052020 	cdpeq	0, 0, cr2, cr5, cr0, {1}
    63a4:	20040200 	andcs	r0, r4, r0, lsl #4
    63a8:	00090520 	andeq	r0, r9, r0, lsr #10
    63ac:	06200402 	strteq	r0, [r0], -r2, lsl #8
    63b0:	00280521 	eoreq	r0, r8, r1, lsr #10
    63b4:	06200402 	strteq	r0, [r0], -r2, lsl #8
    63b8:	00090501 	andeq	r0, r9, r1, lsl #10
    63bc:	06200402 	strteq	r0, [r0], -r2, lsl #8
    63c0:	000e054d 	andeq	r0, lr, sp, asr #10
    63c4:	06200402 	strteq	r0, [r0], -r2, lsl #8
    63c8:	04020001 	streq	r0, [r2], #-1
    63cc:	09052020 	stmdbeq	r5, {r5, sp}
    63d0:	20040200 	andcs	r0, r4, r0, lsl #4
    63d4:	11052106 	tstne	r5, r6, lsl #2
    63d8:	20040200 	andcs	r0, r4, r0, lsl #4
    63dc:	0e050106 	adfeqs	f0, f5, f6
    63e0:	20040200 	andcs	r0, r4, r0, lsl #4
    63e4:	0009052e 	andeq	r0, r9, lr, lsr #10
    63e8:	06200402 	strteq	r0, [r0], -r2, lsl #8
    63ec:	0016052f 	andseq	r0, r6, pc, lsr #10
    63f0:	06200402 	strteq	r0, [r0], -r2, lsl #8
    63f4:	000b0501 	andeq	r0, fp, r1, lsl #10
    63f8:	20200402 	eorcs	r0, r0, r2, lsl #8
    63fc:	10053e06 	andne	r3, r5, r6, lsl #28
    6400:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6404:	14053006 	strne	r3, [r5], #-6
    6408:	09050106 	stmdbeq	r5, {r1, r2, r8}
    640c:	0e053006 	cdpeq	0, 0, cr3, cr5, cr6, {0}
    6410:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6414:	0e052106 	adfeqs	f2, f5, f6
    6418:	09050106 	stmdbeq	r5, {r1, r2, r8}
    641c:	16052f06 	strne	r2, [r5], -r6, lsl #30
    6420:	0b050106 	bleq	146840 <_Min_Heap_Size+0x146040>
    6424:	053e0620 	ldreq	r0, [lr, #-1568]!	; 0xfffff9e0
    6428:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    642c:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    6430:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6434:	05300609 	ldreq	r0, [r0, #-1545]!	; 0xfffff9f7
    6438:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    643c:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    6440:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    6444:	052f0609 	streq	r0, [pc, #-1545]!	; 5e43 <_Min_Heap_Size+0x5643>
    6448:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    644c:	3e06200b 	cdpcc	0, 0, cr2, cr6, cr11, {0}
    6450:	01061005 	tsteq	r6, r5
    6454:	30060905 	andcc	r0, r6, r5, lsl #18
    6458:	01061305 	tsteq	r6, r5, lsl #6
    645c:	31060905 	tstcc	r6, r5, lsl #18
    6460:	01060e05 	tsteq	r6, r5, lsl #28
    6464:	21060905 	tstcs	r6, r5, lsl #18
    6468:	01060e05 	tsteq	r6, r5, lsl #28
    646c:	21060905 	tstcs	r6, r5, lsl #18
    6470:	01061605 	tsteq	r6, r5, lsl #12
    6474:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    6478:	0610053e 			; <UNDEFINED> instruction: 0x0610053e
    647c:	06090501 	streq	r0, [r9], -r1, lsl #10
    6480:	06130530 			; <UNDEFINED> instruction: 0x06130530
    6484:	002e0501 	eoreq	r0, lr, r1, lsl #10
    6488:	06020402 	streq	r0, [r2], -r2, lsl #8
    648c:	2e7f9903 	vaddcs.f16	s19, s30, s6	; <UNPREDICTABLE>
    6490:	02003605 	andeq	r3, r0, #5242880	; 0x500000
    6494:	01060204 	tsteq	r6, r4, lsl #4
    6498:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    649c:	20060104 	andcs	r0, r6, r4, lsl #2
    64a0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    64a4:	01060104 	tsteq	r6, r4, lsl #2
    64a8:	31060505 	tstcc	r6, r5, lsl #10
    64ac:	01061005 	tsteq	r6, r5
    64b0:	30060505 	andcc	r0, r6, r5, lsl #10
    64b4:	01062505 	tsteq	r6, r5, lsl #10
    64b8:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    64bc:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    64c0:	06010607 	streq	r0, [r1], -r7, lsl #12
    64c4:	06150540 	ldreq	r0, [r5], -r0, asr #10
    64c8:	201c0501 	andscs	r0, ip, r1, lsl #10
    64cc:	052e3905 	streq	r3, [lr, #-2309]!	; 0xfffff6fb
    64d0:	07052009 	streq	r2, [r5, -r9]
    64d4:	3c120306 	ldccc	3, cr0, [r2], {6}
    64d8:	01061405 	tsteq	r6, r5, lsl #8
    64dc:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    64e0:	31062e09 	tstcc	r6, r9, lsl #28
    64e4:	060e054d 	streq	r0, [lr], -sp, asr #10
    64e8:	06090501 	streq	r0, [r9], -r1, lsl #10
    64ec:	06320521 	ldrteq	r0, [r2], -r1, lsr #10
    64f0:	20250501 	eorcs	r0, r5, r1, lsl #10
    64f4:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    64f8:	052f0609 	streq	r0, [pc, #-1545]!	; 5ef7 <_Min_Heap_Size+0x56f7>
    64fc:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    6500:	0e052024 	cdpeq	0, 0, cr2, cr5, cr4, {1}
    6504:	06090520 	streq	r0, [r9], -r0, lsr #10
    6508:	06160521 	ldreq	r0, [r6], -r1, lsr #10
    650c:	06070501 	streq	r0, [r7], -r1, lsl #10
    6510:	06140524 	ldreq	r0, [r4], -r4, lsr #10
    6514:	201b0501 	andscs	r0, fp, r1, lsl #10
    6518:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    651c:	0c030607 	stceq	6, cr0, [r3], {7}
    6520:	060c053c 			; <UNDEFINED> instruction: 0x060c053c
    6524:	06070501 	streq	r0, [r7], -r1, lsl #10
    6528:	06300521 	ldrteq	r0, [r0], -r1, lsr #10
    652c:	20230501 	eorcs	r0, r3, r1, lsl #10
    6530:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    6534:	052f0607 	streq	r0, [pc, #-1543]!	; 5f35 <_Min_Heap_Size+0x5735>
    6538:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    653c:	2e052021 	cdpcs	0, 0, cr2, cr5, cr1, {1}
    6540:	200c052e 	andcs	r0, ip, lr, lsr #10
    6544:	21060705 	tstcs	r6, r5, lsl #14
    6548:	01061405 	tsteq	r6, r5, lsl #8
    654c:	24060705 	strcs	r0, [r6], #-1797	; 0xfffff8fb
    6550:	01061405 	tsteq	r6, r5, lsl #8
    6554:	06200905 	strteq	r0, [r0], -r5, lsl #18
    6558:	582e013f 	stmdapl	lr!, {r0, r1, r2, r3, r4, r5, r8}
    655c:	0514204a 	ldreq	r2, [r4, #-74]	; 0xffffffb6
    6560:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    6564:	0905200e 	stmdbeq	r5, {r1, r2, r3, sp}
    6568:	2c054b06 			; <UNDEFINED> instruction: 0x2c054b06
    656c:	20050106 	andcs	r0, r5, r6, lsl #2
    6570:	2019052e 	andscs	r0, r9, lr, lsr #10
    6574:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    6578:	052f0609 	streq	r0, [pc, #-1545]!	; 5f77 <_Min_Heap_Size+0x5777>
    657c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    6580:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    6584:	02004a01 	andeq	r4, r0, #4096	; 0x1000
    6588:	004a0304 	subeq	r0, sl, r4, lsl #6
    658c:	4a050402 	bmi	14759c <_Min_Heap_Size+0x146d9c>
    6590:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6594:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    6598:	02004a09 	andeq	r4, r0, #36864	; 0x9000
    659c:	004a0b04 	subeq	r0, sl, r4, lsl #22
    65a0:	4a0d0402 	bmi	3475b0 <_Min_Heap_Size+0x346db0>
    65a4:	05203c58 	streq	r3, [r0, #-3160]!	; 0xfffff3a8
    65a8:	9e270301 	cdpls	3, 2, cr0, cr7, cr1, {0}
    65ac:	0008023c 	andeq	r0, r8, ip, lsr r2
    65b0:	01050101 	tsteq	r5, r1, lsl #2
    65b4:	00020500 	andeq	r0, r2, r0, lsl #10
    65b8:	03000000 	movweq	r0, #0
    65bc:	060102a6 	streq	r0, [r1], -r6, lsr #5
    65c0:	06030501 	streq	r0, [r3], -r1, lsl #10
    65c4:	1313133d 	tstne	r3, #-201326592	; 0xf4000000
    65c8:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    65cc:	003c0601 	eorseq	r0, ip, r1, lsl #12
    65d0:	4a020402 	bmi	875e0 <_Min_Heap_Size+0x86de0>
    65d4:	03040200 	movweq	r0, #16896	; 0x4200
    65d8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    65dc:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
    65e0:	004a0504 	subeq	r0, sl, r4, lsl #10
    65e4:	4a060402 	bmi	1875f4 <_Min_Heap_Size+0x186df4>
    65e8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    65ec:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    65f0:	02004a08 	andeq	r4, r0, #8, 20	; 0x8000
    65f4:	004a0904 	subeq	r0, sl, r4, lsl #18
    65f8:	2e090402 	cdpcs	4, 0, cr0, cr9, cr2, {0}
    65fc:	09040200 	stmdbeq	r4, {r9}
    6600:	001d0520 	andseq	r0, sp, r0, lsr #10
    6604:	03010402 	movweq	r0, #5122	; 0x1402
    6608:	052e2e0f 	streq	r2, [lr, #-3599]!	; 0xfffff1f1
    660c:	34052e12 	strcc	r2, [r5], #-3602	; 0xfffff1ee
    6610:	20040200 	andcs	r0, r4, r0, lsl #4
    6614:	00090520 	andeq	r0, r9, r0, lsr #10
    6618:	2e200402 	cdpcs	4, 2, cr0, cr0, cr2, {0}
    661c:	03060705 	movweq	r0, #26373	; 0x6705
    6620:	14052e11 	strne	r2, [r5], #-3601	; 0xfffff1ef
    6624:	38050106 	stmdacc	r5, {r1, r2, r8}
    6628:	202b0520 	eorcs	r0, fp, r0, lsr #10
    662c:	053c1405 	ldreq	r1, [ip, #-1029]!	; 0xfffffbfb
    6630:	053f0607 	ldreq	r0, [pc, #-1543]!	; 6031 <_Min_Heap_Size+0x5831>
    6634:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    6638:	4d055830 	stcmi	8, cr5, [r5, #-192]	; 0xffffff40
    663c:	2e2c052e 	cfsh64cs	mvdx0, mvdx12, #30
    6640:	054a2205 	strbeq	r2, [sl, #-517]	; 0xfffffdfb
    6644:	054d0607 	strbeq	r0, [sp, #-1543]	; 0xfffff9f9
    6648:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    664c:	054d0607 	strbeq	r0, [sp, #-1543]	; 0xfffff9f9
    6650:	3c010616 	stccc	6, cr0, [r1], {22}
    6654:	23060705 	movwcs	r0, #26373	; 0x6705
    6658:	01061605 	tsteq	r6, r5, lsl #12
    665c:	02002e05 	andeq	r2, r0, #5, 28	; 0x50
    6660:	03060204 	movweq	r0, #25092	; 0x6204
    6664:	36054a57 			; <UNDEFINED> instruction: 0x36054a57
    6668:	02040200 	andeq	r0, r4, #0, 4
    666c:	16050106 	strne	r0, [r5], -r6, lsl #2
    6670:	01040200 	mrseq	r0, R12_usr
    6674:	03052006 	movweq	r2, #20486	; 0x5006
    6678:	01040200 	mrseq	r0, R12_usr
    667c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6680:	10053106 	andne	r3, r5, r6, lsl #2
    6684:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6688:	0f053006 	svceq	0x00053006
    668c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6690:	07053006 	streq	r3, [r5, -r6]
    6694:	3f060106 	svccc	0x00060106
    6698:	01062505 	tsteq	r6, r5, lsl #10
    669c:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    66a0:	05590607 	ldrbeq	r0, [r9, #-1543]	; 0xfffff9f9
    66a4:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    66a8:	15052e1c 	strne	r2, [r5, #-3612]	; 0xfffff1e4
    66ac:	3c0b0520 	cfstr32cc	mvfx0, [fp], {32}
    66b0:	21060705 	tstcs	r6, r5, lsl #14
    66b4:	01061205 	tsteq	r6, r5, lsl #4
    66b8:	02001d05 	andeq	r1, r0, #320	; 0x140
    66bc:	003c0104 	eorseq	r0, ip, r4, lsl #2
    66c0:	4a030402 	bmi	c76d0 <_Min_Heap_Size+0xc6ed0>
    66c4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    66c8:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    66cc:	02004a07 	andeq	r4, r0, #28672	; 0x7000
    66d0:	004a0904 	subeq	r0, sl, r4, lsl #18
    66d4:	4a0b0402 	bmi	2c76e4 <_Min_Heap_Size+0x2c6ee4>
    66d8:	0d040200 	sfmeq	f0, 4, [r4, #-0]
    66dc:	09054a4a 	stmdbeq	r5, {r1, r3, r6, r9, fp, lr}
    66e0:	1305d906 	movwne	sp, #22790	; 0x5906
    66e4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    66e8:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    66ec:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    66f0:	054d0609 	strbeq	r0, [sp, #-1545]	; 0xfffff9f7
    66f4:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    66f8:	054b0609 	strbeq	r0, [fp, #-1545]	; 0xfffff9f7
    66fc:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    6700:	134d0609 	movtne	r0, #54793	; 0xd609
    6704:	01062805 	tsteq	r6, r5, lsl #16
    6708:	14030105 	strne	r0, [r3], #-261	; 0xfffffefb
    670c:	0802209e 	stmdaeq	r2, {r1, r2, r3, r4, r7, sp}
    6710:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6714:	02050001 	andeq	r0, r5, #1
    6718:	00000000 	andeq	r0, r0, r0
    671c:	0102f703 	tsteq	r2, r3, lsl #14	; <UNPREDICTABLE>
    6720:	03050106 	movweq	r0, #20742	; 0x5106
    6724:	30152f06 	andscc	r2, r5, r6, lsl #30
    6728:	01060c05 	tsteq	r6, r5, lsl #24
    672c:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    6730:	0305300f 	movweq	r3, #20495	; 0x500f
    6734:	01052606 	tsteq	r5, r6, lsl #12
    6738:	03051306 	movweq	r1, #21254	; 0x5306
    673c:	03040200 	movweq	r0, #16896	; 0x4200
    6740:	00207503 	eoreq	r7, r0, r3, lsl #10
    6744:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6748:	03040200 	movweq	r0, #16896	; 0x4200
    674c:	440f0520 	strmi	r0, [pc], #-1312	; 6754 <_Min_Heap_Size+0x5f54>
    6750:	01000502 	tsteq	r0, r2, lsl #10
    6754:	00010501 	andeq	r0, r1, r1, lsl #10
    6758:	00000205 	andeq	r0, r0, r5, lsl #4
    675c:	9a030000 	bls	c6764 <_Min_Heap_Size+0xc5f64>
    6760:	01060103 	tsteq	r6, r3, lsl #2
    6764:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    6768:	0505302f 	streq	r3, [r5, #-47]	; 0xffffffd1
    676c:	22060106 	andcs	r0, r6, #-2147483647	; 0x80000001
    6770:	01061105 	tsteq	r6, r5, lsl #2
    6774:	05260105 	streq	r0, [r6, #-261]!	; 0xfffffefb
    6778:	04020003 	streq	r0, [r2], #-3
    677c:	20750303 	rsbscs	r0, r5, r3, lsl #6
    6780:	03040200 	movweq	r0, #16896	; 0x4200
    6784:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6788:	02002003 	andeq	r2, r0, #3
    678c:	002e0304 	eoreq	r0, lr, r4, lsl #6
    6790:	21010402 	tstcs	r1, r2, lsl #8
    6794:	6e060505 	cfsh32vs	mvfx0, mvfx6, #5
    6798:	01062605 	tsteq	r6, r5, lsl #12
    679c:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
    67a0:	04022201 	streq	r2, [r2], #-513	; 0xfffffdff
    67a4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    67a8:	02050001 	andeq	r0, r5, #1
    67ac:	00000000 	andeq	r0, r0, r0
    67b0:	0103b103 	tsteq	r3, r3, lsl #2
    67b4:	03050106 	movweq	r0, #20742	; 0x5106
    67b8:	31152f06 	tstcc	r5, r6, lsl #30
    67bc:	01060705 	tsteq	r6, r5, lsl #14
    67c0:	23060305 	movwcs	r0, #25349	; 0x6305
    67c4:	01061705 	tsteq	r6, r5, lsl #14
    67c8:	052e3b05 	streq	r3, [lr, #-2821]!	; 0xfffff4fb
    67cc:	0f052e33 	svceq	0x00052e33
    67d0:	2101052e 	tstcs	r1, lr, lsr #10
    67d4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    67d8:	79030304 	stmdbvc	r3, {r2, r8, r9}
    67dc:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    67e0:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    67e4:	02200304 	eoreq	r0, r0, #4, 6	; 0x10000000
    67e8:	01010006 	tsteq	r1, r6
    67ec:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    67f0:	00000002 	andeq	r0, r0, r2
    67f4:	03ca0300 	biceq	r0, sl, #0, 6
    67f8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    67fc:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
    6800:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    6804:	313f0603 	teqcc	pc, r3, lsl #12
    6808:	01060705 	tsteq	r6, r5, lsl #14
    680c:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    6810:	01060f05 	tsteq	r6, r5, lsl #30
    6814:	30060305 	andcc	r0, r6, r5, lsl #6
    6818:	01060f05 	tsteq	r6, r5, lsl #30
    681c:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    6820:	01060f05 	tsteq	r6, r5, lsl #30
    6824:	30060305 	andcc	r0, r6, r5, lsl #6
    6828:	01060e05 	tsteq	r6, r5, lsl #28
    682c:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    6830:	05230602 	streq	r0, [r3, #-1538]!	; 0xfffff9fe
    6834:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    6838:	0c052004 	stceq	0, cr2, [r5], {4}
    683c:	2601053e 			; <UNDEFINED> instruction: 0x2601053e
    6840:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    6844:	6a030304 	bvs	c745c <_Min_Heap_Size+0xc6c5c>
    6848:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    684c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    6850:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    6854:	3c14030c 	ldccc	3, cr0, [r4], {12}
    6858:	01000502 	tsteq	r0, r2, lsl #10
    685c:	00010501 	andeq	r0, r1, r1, lsl #10
    6860:	00000205 	andeq	r0, r0, r5, lsl #4
    6864:	fb030000 	blx	c686e <_Min_Heap_Size+0xc606e>
    6868:	03050103 	movweq	r0, #20739	; 0x5103
    686c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    6870:	00010216 	andeq	r0, r1, r6, lsl r2
    6874:	01050101 	tsteq	r5, r1, lsl #2
    6878:	00020500 	andeq	r0, r2, r0, lsl #10
    687c:	03000000 	movweq	r0, #0
    6880:	060103ec 	streq	r0, [r1], -ip, ror #7
    6884:	06030501 	streq	r0, [r3], -r1, lsl #10
    6888:	06060522 	streq	r0, [r6], -r2, lsr #10
    688c:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    6890:	05330105 	ldreq	r0, [r3, #-261]!	; 0xfffffefb
    6894:	2f1d0605 	svccs	0x001d0605
    6898:	30060105 	andcc	r0, r6, r5, lsl #2
    689c:	01000402 	tsteq	r0, r2, lsl #8
    68a0:	000fdc01 	andeq	sp, pc, r1, lsl #24
    68a4:	db000300 	blle	74ac <_Min_Heap_Size+0x6cac>
    68a8:	02000001 	andeq	r0, r0, #1
    68ac:	0d0efb01 	vstreq	d15, [lr, #-4]
    68b0:	01010100 	mrseq	r0, (UNDEF: 17)
    68b4:	00000001 	andeq	r0, r0, r1
    68b8:	01000001 	tsteq	r0, r1
    68bc:	442f2e2e 	strtmi	r2, [pc], #-3630	; 68c4 <_Min_Heap_Size+0x60c4>
    68c0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    68c4:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    68c8:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    68cc:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    68d0:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    68d4:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    68d8:	2f726576 	svccs	0x00726576
    68dc:	00637253 	rsbeq	r7, r3, r3, asr r2
    68e0:	74706f2f 	ldrbtvc	r6, [r0], #-3887	; 0xfffff0d1
    68e4:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    68e8:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    68ec:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    68f0:	61652d65 	cmnvs	r5, r5, ror #26
    68f4:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    68f8:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    68fc:	31323032 	teqcc	r2, r2, lsr r0
    6900:	2f30312e 	svccs	0x0030312e
    6904:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    6908:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    690c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    6910:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
    6914:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    6918:	616d2f65 	cmnvs	sp, r5, ror #30
    691c:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    6920:	6f2f0065 	svcvs	0x002f0065
    6924:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
    6928:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    692c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    6930:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    6934:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    6938:	2e30312d 	rsfcssp	f3, f0, #5.0
    693c:	30322d33 	eorscc	r2, r2, r3, lsr sp
    6940:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    6944:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
    6948:	6f6e2d6d 	svcvs	0x006e2d6d
    694c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    6950:	2f696261 	svccs	0x00696261
    6954:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    6958:	2f656475 	svccs	0x00656475
    695c:	00737973 	rsbseq	r7, r3, r3, ror r9
    6960:	442f2e2e 	strtmi	r2, [pc], #-3630	; 6968 <_Min_Heap_Size+0x6168>
    6964:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    6968:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    696c:	5349534d 	movtpl	r5, #37709	; 0x934d
    6970:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
    6974:	2f656369 	svccs	0x00656369
    6978:	532f5453 			; <UNDEFINED> instruction: 0x532f5453
    697c:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    6980:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    6984:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    6988:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    698c:	2f2e2e00 	svccs	0x002e2e00
    6990:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    6994:	2f737265 	svccs	0x00737265
    6998:	334d5453 	movtcc	r5, #54355	; 0xd453
    699c:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    69a0:	41485f78 	hvcmi	34296	; 0x85f8
    69a4:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    69a8:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    69ac:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    69b0:	2f2e2e00 	svccs	0x002e2e00
    69b4:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    69b8:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    69bc:	74730000 	ldrbtvc	r0, [r3], #-0
    69c0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    69c4:	5f787834 	svcpl	0x00787834
    69c8:	5f6c6168 	svcpl	0x006c6168
    69cc:	2e616d64 	cdpcs	13, 6, cr6, cr1, cr4, {3}
    69d0:	00010063 	andeq	r0, r1, r3, rrx
    69d4:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    69d8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    69dc:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    69e0:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    69e4:	00020068 	andeq	r0, r2, r8, rrx
    69e8:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    69ec:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    69f0:	0300682e 	movweq	r6, #2094	; 0x82e
    69f4:	74730000 	ldrbtvc	r0, [r3], #-0
    69f8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    69fc:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    6a00:	00682e78 	rsbeq	r2, r8, r8, ror lr
    6a04:	73000004 	movwvc	r0, #4
    6a08:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    6a0c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    6a10:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    6a14:	74730000 	ldrbtvc	r0, [r3], #-0
    6a18:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    6a1c:	5f787834 	svcpl	0x00787834
    6a20:	5f6c6168 	svcpl	0x006c6168
    6a24:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    6a28:	00050068 	andeq	r0, r5, r8, rrx
    6a2c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    6a30:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    6a34:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    6a38:	645f6c61 	ldrbvs	r6, [pc], #-3169	; 6a40 <_Min_Heap_Size+0x6240>
    6a3c:	682e616d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, sp, lr}
    6a40:	00000500 	andeq	r0, r0, r0, lsl #10
    6a44:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    6a48:	735f6d65 	cmpvc	pc, #6464	; 0x1940
    6a4c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    6a50:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    6a54:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    6a58:	74730000 	ldrbtvc	r0, [r3], #-0
    6a5c:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    6a60:	5f787834 	svcpl	0x00787834
    6a64:	2e6c6168 	powcsez	f6, f4, #0.0
    6a68:	00050068 	andeq	r0, r5, r8, rrx
    6a6c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    6a70:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    6a74:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    6a78:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    6a7c:	2e666e6f 	cdpcs	14, 6, cr6, cr6, cr15, {3}
    6a80:	00060068 	andeq	r0, r6, r8, rrx
    6a84:	01050000 	mrseq	r0, (UNDEF: 5)
    6a88:	00020500 	andeq	r0, r2, r0, lsl #10
    6a8c:	03000000 	movweq	r0, #0
    6a90:	060108ff 			; <UNDEFINED> instruction: 0x060108ff
    6a94:	06030501 	streq	r0, [r3], -r1, lsl #10
    6a98:	06070522 	streq	r0, [r7], -r2, lsr #10
    6a9c:	20160501 	andscs	r0, r6, r1, lsl #10
    6aa0:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
    6aa4:	01060705 	tsteq	r6, r5, lsl #14
    6aa8:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    6aac:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6ab0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    6ab4:	03062005 	movweq	r2, #24581	; 0x6005
    6ab8:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    6abc:	19050106 	stmdbne	r5, {r1, r2, r8}
    6ac0:	06050520 	streq	r0, [r5], -r0, lsr #10
    6ac4:	06090523 	streq	r0, [r9], -r3, lsr #10
    6ac8:	201a0501 	andscs	r0, sl, r1, lsl #10
    6acc:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
    6ad0:	72030605 	andvc	r0, r3, #5242880	; 0x500000
    6ad4:	0609052e 	streq	r0, [r9], -lr, lsr #10
    6ad8:	20190501 	andscs	r0, r9, r1, lsl #10
    6adc:	23060505 	movwcs	r0, #25861	; 0x6505
    6ae0:	01060905 	tsteq	r6, r5, lsl #18
    6ae4:	02201a05 	eoreq	r1, r0, #20480	; 0x5000
    6ae8:	01010002 	tsteq	r1, r2
    6aec:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6af0:	00000002 	andeq	r0, r0, r2
    6af4:	09a10300 	stmibeq	r1!, {r8, r9}
    6af8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6afc:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    6b00:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    6b04:	40052037 	andmi	r2, r5, r7, lsr r0
    6b08:	200c0520 	andcs	r0, ip, r0, lsr #10
    6b0c:	4d060305 	stcmi	3, cr0, [r6, #-20]	; 0xffffffec
    6b10:	06290513 			; <UNDEFINED> instruction: 0x06290513
    6b14:	2e150501 	cfmul32cs	mvfx0, mvfx5, mvfx1
    6b18:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    6b1c:	01060605 	tsteq	r6, r5, lsl #12
    6b20:	31060505 	tstcc	r6, r5, lsl #10
    6b24:	01063a05 	tsteq	r6, r5, lsl #20
    6b28:	054a5105 	strbeq	r5, [sl, #-261]	; 0xfffffefb
    6b2c:	0305201d 	movweq	r2, #20509	; 0x501d
    6b30:	01052806 	tsteq	r5, r6, lsl #16
    6b34:	05201306 	streq	r1, [r0, #-774]!	; 0xfffffcfa
    6b38:	05380605 	ldreq	r0, [r8, #-1541]!	; 0xfffff9fb
    6b3c:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    6b40:	07024a1d 	smladeq	r2, sp, sl, r4
    6b44:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6b48:	02050001 	andeq	r0, r5, #1
    6b4c:	00000000 	andeq	r0, r0, r0
    6b50:	0109bd03 	tsteq	r9, r3, lsl #26
    6b54:	13130305 	tstne	r3, #335544320	; 0x14000000
    6b58:	01060c05 	tsteq	r6, r5, lsl #24
    6b5c:	23060305 	movwcs	r0, #25349	; 0x6305
    6b60:	01061005 	tsteq	r6, r5
    6b64:	06200505 	strteq	r0, [r0], -r5, lsl #10
    6b68:	05660622 	strbeq	r0, [r6, #-1570]!	; 0xfffff9de
    6b6c:	05240607 	streq	r0, [r4, #-1543]!	; 0xfffff9f9
    6b70:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    6b74:	1505200a 	strne	r2, [r5, #-10]
    6b78:	203c7603 	eorscs	r7, ip, r3, lsl #12
    6b7c:	03060705 	movweq	r0, #26373	; 0x6705
    6b80:	15052010 	strne	r2, [r5, #-16]
    6b84:	0a050106 	beq	146fa4 <_Min_Heap_Size+0x1467a4>
    6b88:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    6b8c:	05203c70 	streq	r3, [r0, #-3184]!	; 0xfffff390
    6b90:	1d030608 	stcne	6, cr0, [r3, #-32]	; 0xffffffe0
    6b94:	060b0520 	streq	r0, [fp], -r0, lsr #10
    6b98:	06050501 	streq	r0, [r5], -r1, lsl #10
    6b9c:	053c1c03 	ldreq	r1, [ip, #-3075]!	; 0xfffff3fd
    6ba0:	16055207 	strne	r5, [r5], -r7, lsl #4
    6ba4:	0a050106 	beq	146fc4 <_Min_Heap_Size+0x1467c4>
    6ba8:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    6bac:	203c7fbf 	ldrhtcs	r7, [ip], -pc
    6bb0:	03060505 	movweq	r0, #25861	; 0x6505
    6bb4:	7406201f 	strvc	r2, [r6], #-31	; 0xffffffe1
    6bb8:	27060705 	strcs	r0, [r6, -r5, lsl #14]
    6bbc:	01061605 	tsteq	r6, r5, lsl #12
    6bc0:	05200a05 	streq	r0, [r0, #-2565]!	; 0xfffff5fb
    6bc4:	3c5a0315 	mrrccc	3, 1, r0, sl, cr5
    6bc8:	06070520 	streq	r0, [r7], -r0, lsr #10
    6bcc:	05202c03 	streq	r2, [r0, #-3075]!	; 0xfffff3fd
    6bd0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    6bd4:	1505200a 	strne	r2, [r5, #-10]
    6bd8:	203c5403 	eorscs	r5, ip, r3, lsl #8
    6bdc:	0c031005 	stceq	0, cr1, [r3], {5}
    6be0:	20262020 	eorcs	r2, r6, r0, lsr #32
    6be4:	11030e05 	tstne	r3, r5, lsl #28
    6be8:	10052020 	andne	r2, r5, r0, lsr #32
    6bec:	20262025 	eorcs	r2, r6, r5, lsr #32
    6bf0:	10030e05 	andne	r0, r3, r5, lsl #28
    6bf4:	05052020 	streq	r2, [r5, #-32]	; 0xffffffe0
    6bf8:	1005201b 	andne	r2, r5, fp, lsl r0
    6bfc:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    6c00:	05280603 	streq	r0, [r8, #-1539]!	; 0xfffff9fd
    6c04:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    6c08:	01010001 	tsteq	r1, r1
    6c0c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6c10:	00000002 	andeq	r0, r0, r2
    6c14:	01aa0300 			; <UNDEFINED> instruction: 0x01aa0300
    6c18:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6c1c:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    6c20:	01061805 	tsteq	r6, r5, lsl #16
    6c24:	2f060305 	svccs	0x00060305
    6c28:	06050515 			; <UNDEFINED> instruction: 0x06050515
    6c2c:	06030501 	streq	r0, [r3], -r1, lsl #10
    6c30:	04020050 	streq	r0, [r2], #-80	; 0xffffffb0
    6c34:	004a0601 	subeq	r0, sl, r1, lsl #12
    6c38:	3c020402 	cfstrscc	mvf0, [r2], {2}
    6c3c:	03040200 	movweq	r0, #16896	; 0x4200
    6c40:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6c44:	02003c04 	andeq	r3, r0, #4, 24	; 0x400
    6c48:	003c0504 	eorseq	r0, ip, r4, lsl #10
    6c4c:	3c060402 	cfstrscc	mvf0, [r6], {2}
    6c50:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6c54:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6c58:	02003c08 	andeq	r3, r0, #8, 24	; 0x800
    6c5c:	004a0904 	subeq	r0, sl, r4, lsl #18
    6c60:	3c0a0402 	cfstrscc	mvf0, [sl], {2}
    6c64:	0b040200 	bleq	10746c <_Min_Heap_Size+0x106c6c>
    6c68:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6c6c:	02003c0c 	andeq	r3, r0, #12, 24	; 0xc00
    6c70:	003c0d04 	eorseq	r0, ip, r4, lsl #26
    6c74:	3c0e0402 	cfstrscc	mvf0, [lr], {2}
    6c78:	0f040200 	svceq	0x00040200
    6c7c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6c80:	02003c10 	andeq	r3, r0, #16, 24	; 0x1000
    6c84:	062e1004 	strteq	r1, [lr], -r4
    6c88:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    6c8c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    6c90:	3c020402 	cfstrscc	mvf0, [r2], {2}
    6c94:	03040200 	movweq	r0, #16896	; 0x4200
    6c98:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6c9c:	02003c04 	andeq	r3, r0, #4, 24	; 0x400
    6ca0:	003c0504 	eorseq	r0, ip, r4, lsl #10
    6ca4:	3c060402 	cfstrscc	mvf0, [r6], {2}
    6ca8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6cac:	003d063c 	eorseq	r0, sp, ip, lsr r6
    6cb0:	06010402 	streq	r0, [r1], -r2, lsl #8
    6cb4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6cb8:	2f062e02 	svccs	0x00062e02
    6cbc:	01040200 	mrseq	r0, R12_usr
    6cc0:	2f064a06 	svccs	0x00064a06
    6cc4:	01040200 	mrseq	r0, R12_usr
    6cc8:	2f064a06 	svccs	0x00064a06
    6ccc:	01040200 	mrseq	r0, R12_usr
    6cd0:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    6cd4:	063c0204 	ldrteq	r0, [ip], -r4, lsl #4
    6cd8:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    6cdc:	002e0601 	eoreq	r0, lr, r1, lsl #12
    6ce0:	3c020402 	cfstrscc	mvf0, [r2], {2}
    6ce4:	02003d06 	andeq	r3, r0, #384	; 0x180
    6ce8:	2e060104 	adfcss	f0, f6, f4
    6cec:	02040200 	andeq	r0, r4, #0, 4
    6cf0:	002f063c 	eoreq	r0, pc, ip, lsr r6	; <UNPREDICTABLE>
    6cf4:	06010402 	streq	r0, [r1], -r2, lsl #8
    6cf8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6cfc:	02003c02 	andeq	r3, r0, #512	; 0x200
    6d00:	063c0304 	ldrteq	r0, [ip], -r4, lsl #6
    6d04:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    6d08:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    6d0c:	06100531 			; <UNDEFINED> instruction: 0x06100531
    6d10:	20050501 	andcs	r0, r5, r1, lsl #10
    6d14:	003d2206 	eorseq	r2, sp, r6, lsl #4
    6d18:	06010402 	streq	r0, [r1], -r2, lsl #8
    6d1c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    6d20:	02003c02 	andeq	r3, r0, #512	; 0x200
    6d24:	063c0304 	ldrteq	r0, [ip], -r4, lsl #6
    6d28:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    6d2c:	002e0601 	eoreq	r0, lr, r1, lsl #12
    6d30:	3c020402 	cfstrscc	mvf0, [r2], {2}
    6d34:	03040200 	movweq	r0, #16896	; 0x4200
    6d38:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
    6d3c:	060f0540 	streq	r0, [pc], -r0, asr #10
    6d40:	06030501 	streq	r0, [r3], -r1, lsl #10
    6d44:	153c013f 	ldrne	r0, [ip, #-319]!	; 0xfffffec1
    6d48:	0108055b 	tsteq	r8, fp, asr r5
    6d4c:	01060e05 	tsteq	r6, r5, lsl #28
    6d50:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    6d54:	05052008 	streq	r2, [r5, #-8]
    6d58:	09053f06 	stmdbeq	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
    6d5c:	17050106 	strne	r0, [r5, -r6, lsl #2]
    6d60:	2007052e 	andcs	r0, r7, lr, lsr #10
    6d64:	17053106 	strne	r3, [r5, -r6, lsl #2]
    6d68:	07050106 	streq	r0, [r5, -r6, lsl #2]
    6d6c:	13053106 	movwne	r3, #20742	; 0x5106
    6d70:	07050106 	streq	r0, [r5, -r6, lsl #2]
    6d74:	01053e06 	tsteq	r5, r6, lsl #28
    6d78:	00ce0306 	sbceq	r0, lr, r6, lsl #6
    6d7c:	00030501 	andeq	r0, r3, r1, lsl #10
    6d80:	03080402 	movweq	r0, #33794	; 0x8402
    6d84:	00207f8b 	eoreq	r7, r0, fp, lsl #31
    6d88:	59030402 	stmdbpl	r3, {r1, sl}
    6d8c:	02040200 	andeq	r0, r4, #0, 4
    6d90:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
    6d94:	02005902 	andeq	r5, r0, #32768	; 0x8000
    6d98:	00590304 	subseq	r0, r9, r4, lsl #6
    6d9c:	59030402 	stmdbpl	r3, {r1, sl}
    6da0:	03040200 	movweq	r0, #16896	; 0x4200
    6da4:	04020059 	streq	r0, [r2], #-89	; 0xffffffa7
    6da8:	02005904 	andeq	r5, r0, #4, 18	; 0x10000
    6dac:	05590204 	ldrbeq	r0, [r9, #-516]	; 0xfffffdfc
    6db0:	04020005 	streq	r0, [r2], #-5
    6db4:	02005d01 	andeq	r5, r0, #1, 26	; 0x40
    6db8:	00590404 	subseq	r0, r9, r4, lsl #8
    6dbc:	59040402 	stmdbpl	r4, {r1, sl}
    6dc0:	03060305 	movweq	r0, #25349	; 0x6305
    6dc4:	0705581d 	smladeq	r5, sp, r8, r5
    6dc8:	03050106 	movweq	r0, #20742	; 0x5106
    6dcc:	07052306 	streq	r2, [r5, -r6, lsl #6]
    6dd0:	03050106 	movweq	r0, #20742	; 0x5106
    6dd4:	15053406 	strne	r3, [r5, #-1030]	; 0xfffffbfa
    6dd8:	36050106 	strcc	r0, [r5], -r6, lsl #2
    6ddc:	202a0520 	eorcs	r0, sl, r0, lsr #10
    6de0:	05211505 	streq	r1, [r1, #-1285]!	; 0xfffffafb
    6de4:	36051f48 	strcc	r1, [r5], -r8, asr #30
    6de8:	202a0521 	eorcs	r0, sl, r1, lsr #10
    6dec:	05211505 	streq	r1, [r1, #-1285]!	; 0xfffffafb
    6df0:	36051f48 	strcc	r1, [r5], -r8, asr #30
    6df4:	202a0521 	eorcs	r0, sl, r1, lsr #10
    6df8:	05211505 	streq	r1, [r1, #-1285]!	; 0xfffffafb
    6dfc:	36051f48 	strcc	r1, [r5], -r8, asr #30
    6e00:	202a0521 	eorcs	r0, sl, r1, lsr #10
    6e04:	051d0705 	ldreq	r0, [sp, #-1797]	; 0xfffff8fb
    6e08:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
    6e0c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    6e10:	03052005 	movweq	r2, #20485	; 0x5005
    6e14:	16053506 	strne	r3, [r5], -r6, lsl #10
    6e18:	03050106 	movweq	r0, #20742	; 0x5106
    6e1c:	0d052306 	stceq	3, cr2, [r5, #-24]	; 0xffffffe8
    6e20:	07050106 	streq	r0, [r5, -r6, lsl #2]
    6e24:	06030520 	streq	r0, [r3], -r0, lsr #10
    6e28:	06070523 	streq	r0, [r7], -r3, lsr #10
    6e2c:	06030501 	streq	r0, [r3], -r1, lsl #10
    6e30:	06140531 			; <UNDEFINED> instruction: 0x06140531
    6e34:	20070501 	andcs	r0, r7, r1, lsl #10
    6e38:	23060305 	movwcs	r0, #25349	; 0x6305
    6e3c:	01060505 	tsteq	r6, r5, lsl #10
    6e40:	16053106 	strne	r3, [r5], -r6, lsl #2
    6e44:	09050106 	stmdbeq	r5, {r1, r2, r8}
    6e48:	06050520 	streq	r0, [r5], -r0, lsr #10
    6e4c:	06130524 	ldreq	r0, [r3], -r4, lsr #10
    6e50:	20080501 	andcs	r0, r8, r1, lsl #10
    6e54:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    6e58:	01060b05 	tsteq	r6, r5, lsl #22
    6e5c:	053c0a05 	ldreq	r0, [ip, #-2565]!	; 0xfffff5fb
    6e60:	0e030603 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx3
    6e64:	06170520 	ldreq	r0, [r7], -r0, lsr #10
    6e68:	06030501 	streq	r0, [r3], -r1, lsl #10
    6e6c:	06200524 	strteq	r0, [r0], -r4, lsr #10
    6e70:	06030501 	streq	r0, [r3], -r1, lsl #10
    6e74:	061d053f 			; <UNDEFINED> instruction: 0x061d053f
    6e78:	20160501 	andscs	r0, r6, r1, lsl #10
    6e7c:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    6e80:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6e84:	20010613 	andcs	r0, r1, r3, lsl r6
    6e88:	23060305 	movwcs	r0, #25349	; 0x6305
    6e8c:	01060f05 	tsteq	r6, r5, lsl #30
    6e90:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    6e94:	01060a05 	tsteq	r6, r5, lsl #20
    6e98:	03060505 	movweq	r0, #25861	; 0x6505
    6e9c:	1705744a 	strne	r7, [r5, -sl, asr #8]
    6ea0:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    6ea4:	20210520 	eorcs	r0, r1, r0, lsr #10
    6ea8:	20200905 	eorcs	r0, r0, r5, lsl #18
    6eac:	201c0306 	andscs	r0, ip, r6, lsl #6
    6eb0:	01061905 	tsteq	r6, r5, lsl #18
    6eb4:	31060905 	tstcc	r6, r5, lsl #18
    6eb8:	01061505 	tsteq	r6, r5, lsl #10
    6ebc:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    6ec0:	01061005 	tsteq	r6, r5
    6ec4:	9c030c05 	stcls	12, cr0, [r3], {5}
    6ec8:	0220207f 	eoreq	r2, r0, #127	; 0x7f
    6ecc:	01010001 	tsteq	r1, r1
    6ed0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6ed4:	00000002 	andeq	r0, r0, r2
    6ed8:	02b50300 	adcseq	r0, r5, #0, 6
    6edc:	13030501 	movwne	r0, #13569	; 0x3501
    6ee0:	06050515 			; <UNDEFINED> instruction: 0x06050515
    6ee4:	2a010501 	bcs	482f0 <_Min_Heap_Size+0x47af0>
    6ee8:	03060305 	movweq	r0, #25349	; 0x6305
    6eec:	0a052e0a 	beq	15271c <_Min_Heap_Size+0x151f1c>
    6ef0:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    6ef4:	03052005 	movweq	r2, #20485	; 0x5005
    6ef8:	02003506 	andeq	r3, r0, #25165824	; 0x1800000
    6efc:	4a060104 	bmi	187314 <_Min_Heap_Size+0x186b14>
    6f00:	02040200 	andeq	r0, r4, #0, 4
    6f04:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6f08:	02003c03 	andeq	r3, r0, #768	; 0x300
    6f0c:	003c0404 	eorseq	r0, ip, r4, lsl #8
    6f10:	3c050402 	cfstrscc	mvf0, [r5], {2}
    6f14:	06040200 	streq	r0, [r4], -r0, lsl #4
    6f18:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6f1c:	02003c07 	andeq	r3, r0, #1792	; 0x700
    6f20:	003c0804 	eorseq	r0, ip, r4, lsl #16
    6f24:	4a090402 	bmi	247f34 <_Min_Heap_Size+0x247734>
    6f28:	0a040200 	beq	107730 <_Min_Heap_Size+0x106f30>
    6f2c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6f30:	02003c0b 	andeq	r3, r0, #2816	; 0xb00
    6f34:	003c0c04 	eorseq	r0, ip, r4, lsl #24
    6f38:	3c0d0402 	cfstrscc	mvf0, [sp], {2}
    6f3c:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    6f40:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    6f44:	02003c0f 	andeq	r3, r0, #3840	; 0xf00
    6f48:	063c1004 	ldrteq	r1, [ip], -r4
    6f4c:	07055b5b 	smlsdeq	r5, fp, fp, r5
    6f50:	18050106 	stmdane	r5, {r1, r2, r8}
    6f54:	06030520 	streq	r0, [r3], -r0, lsr #10
    6f58:	06070531 			; <UNDEFINED> instruction: 0x06070531
    6f5c:	20180501 	andscs	r0, r8, r1, lsl #10
    6f60:	23060305 	movwcs	r0, #25349	; 0x6305
    6f64:	01060705 	tsteq	r6, r5, lsl #14
    6f68:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    6f6c:	05230603 	streq	r0, [r3, #-1539]!	; 0xfffff9fd
    6f70:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    6f74:	03052018 	movweq	r2, #20504	; 0x5018
    6f78:	07052306 	streq	r2, [r5, -r6, lsl #6]
    6f7c:	18050106 	stmdane	r5, {r1, r2, r8}
    6f80:	06030520 	streq	r0, [r3], -r0, lsr #10
    6f84:	06070523 	streq	r0, [r7], -r3, lsr #10
    6f88:	20180501 	andscs	r0, r8, r1, lsl #10
    6f8c:	31060305 	tstcc	r6, r5, lsl #6
    6f90:	01062005 	tsteq	r6, r5
    6f94:	3f060305 	svccc	0x00060305
    6f98:	01061a05 	tsteq	r6, r5, lsl #20
    6f9c:	21060305 	tstcs	r6, r5, lsl #6
    6fa0:	01061e05 	tsteq	r6, r5, lsl #28
    6fa4:	21060305 	tstcs	r6, r5, lsl #6
    6fa8:	01061c05 	tsteq	r6, r5, lsl #24
    6fac:	21060305 	tstcs	r6, r5, lsl #6
    6fb0:	01062005 	tsteq	r6, r5
    6fb4:	21060305 	tstcs	r6, r5, lsl #6
    6fb8:	01061b05 	tsteq	r6, r5, lsl #22
    6fbc:	21060305 	tstcs	r6, r5, lsl #6
    6fc0:	01061b05 	tsteq	r6, r5, lsl #22
    6fc4:	23060305 	movwcs	r0, #25349	; 0x6305
    6fc8:	01061d05 	tsteq	r6, r5, lsl #26
    6fcc:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    6fd0:	03052e0e 	movweq	r2, #24078	; 0x5e0e
    6fd4:	13052306 	movwne	r2, #21254	; 0x5306
    6fd8:	03050106 	movweq	r0, #20742	; 0x5106
    6fdc:	0f052306 	svceq	0x00052306
    6fe0:	03050106 	movweq	r0, #20742	; 0x5106
    6fe4:	2e013106 	adfcss	f3, f1, f6
    6fe8:	060a0514 			; <UNDEFINED> instruction: 0x060a0514
    6fec:	21010501 	tstcs	r1, r1, lsl #10
    6ff0:	46030c05 	strmi	r0, [r3], -r5, lsl #24
    6ff4:	03010520 	movweq	r0, #5408	; 0x1520
    6ff8:	0602203a 			; <UNDEFINED> instruction: 0x0602203a
    6ffc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7000:	02050001 	andeq	r0, r5, #1
    7004:	00000000 	andeq	r0, r0, r0
    7008:	01039703 	tsteq	r3, r3, lsl #14
    700c:	03050106 	movweq	r0, #20742	; 0x5106
    7010:	06156706 	ldreq	r6, [r5], -r6, lsl #14
    7014:	31062e20 	tstcc	r6, r0, lsr #28
    7018:	04020001 	streq	r0, [r2], #-1
    701c:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    7020:	003c0204 	eorseq	r0, ip, r4, lsl #4
    7024:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    7028:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    702c:	01060204 	tsteq	r6, r4, lsl #4
    7030:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    7034:	063c0204 	ldrteq	r0, [ip], -r4, lsl #4
    7038:	012e1103 			; <UNDEFINED> instruction: 0x012e1103
    703c:	0c05153c 	cfstr32eq	mvfx1, [r5], {60}	; 0x3c
    7040:	01050106 	tsteq	r5, r6, lsl #2
    7044:	00030523 	andeq	r0, r3, r3, lsr #10
    7048:	03010402 	movweq	r0, #5122	; 0x1402
    704c:	02002e64 	andeq	r2, r0, #100, 28	; 0x640
    7050:	002e0104 	eoreq	r0, lr, r4, lsl #2
    7054:	20010402 	andcs	r0, r1, r2, lsl #8
    7058:	44060505 	strmi	r0, [r6], #-1285	; 0xfffffafb
    705c:	01061105 	tsteq	r6, r5, lsl #2
    7060:	3f060505 	svccc	0x00060505
    7064:	01061505 	tsteq	r6, r5, lsl #10
    7068:	4d060505 	cfstr32mi	mvfx0, [r6, #-20]	; 0xffffffec
    706c:	06150569 	ldreq	r0, [r5], -r9, ror #10
    7070:	05586c03 	ldrbeq	r6, [r8, #-3075]	; 0xfffff3fd
    7074:	05023403 	streq	r3, [r2, #-1027]	; 0xfffffbfd
    7078:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    707c:	02050001 	andeq	r0, r5, #1
    7080:	00000000 	andeq	r0, r0, r0
    7084:	0103c303 	tsteq	r3, r3, lsl #6
    7088:	03050106 	movweq	r0, #20742	; 0x5106
    708c:	05156706 	ldreq	r6, [r5, #-1798]	; 0xfffff8fa
    7090:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    7094:	06310603 	ldrteq	r0, [r1], -r3, lsl #12
    7098:	31062e20 	tstcc	r6, r0, lsr #28
    709c:	04020001 	streq	r0, [r2], #-1
    70a0:	02004a02 	andeq	r4, r0, #8192	; 0x2000
    70a4:	003c0204 	eorseq	r0, ip, r4, lsl #4
    70a8:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    70ac:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    70b0:	01060204 	tsteq	r6, r4, lsl #4
    70b4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    70b8:	063c0204 	ldrteq	r0, [ip], -r4, lsl #4
    70bc:	012e1c03 			; <UNDEFINED> instruction: 0x012e1c03
    70c0:	0c05153c 	cfstr32eq	mvfx1, [r5], {60}	; 0x3c
    70c4:	01050106 	tsteq	r5, r6, lsl #2
    70c8:	00030524 	andeq	r0, r3, r4, lsr #10
    70cc:	03010402 	movweq	r0, #5122	; 0x1402
    70d0:	02002e58 	andeq	r2, r0, #88, 28	; 0x580
    70d4:	002e0104 	eoreq	r0, lr, r4, lsl #2
    70d8:	20010402 	andcs	r0, r1, r2, lsl #8
    70dc:	44060505 	strmi	r0, [r6], #-1285	; 0xfffffafb
    70e0:	01061105 	tsteq	r6, r5, lsl #2
    70e4:	3f060505 	svccc	0x00060505
    70e8:	01061505 	tsteq	r6, r5, lsl #10
    70ec:	31060505 	tstcc	r6, r5, lsl #10
    70f0:	061f0569 	ldreq	r0, [pc], -r9, ror #10
    70f4:	20180501 	andscs	r0, r8, r1, lsl #10
    70f8:	052e1005 	streq	r1, [lr, #-5]!
    70fc:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    7100:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    7104:	05052019 	streq	r2, [r5, #-25]	; 0xffffffe7
    7108:	0c054c06 	stceq	12, cr4, [r5], {6}
    710c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7110:	05220620 	streq	r0, [r2, #-1568]!	; 0xfffff9e0
    7114:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    7118:	0505201b 	streq	r2, [r5, #-27]	; 0xffffffe5
    711c:	15054e06 	strne	r4, [r5, #-3590]	; 0xfffff1fa
    7120:	585e0306 	ldmdapl	lr, {r1, r2, r8, r9}^
    7124:	09030305 	stmdbeq	r3, {r0, r2, r8, r9}
    7128:	0004022e 	andeq	r0, r4, lr, lsr #4
    712c:	01050101 	tsteq	r5, r1, lsl #2
    7130:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
    7134:	03080013 	movweq	r0, #32787	; 0x8013
    7138:	06010481 	streq	r0, [r1], -r1, lsl #9
    713c:	06030501 	streq	r0, [r3], -r1, lsl #10
    7140:	06380530 			; <UNDEFINED> instruction: 0x06380530
    7144:	06030501 	streq	r0, [r3], -r1, lsl #10
    7148:	06180522 	ldreq	r0, [r8], -r2, lsr #10
    714c:	06030501 	streq	r0, [r3], -r1, lsl #10
    7150:	060a0530 			; <UNDEFINED> instruction: 0x060a0530
    7154:	3c050501 	cfstr32cc	mvfx0, [r5], {1}
    7158:	15053006 	strne	r3, [r5, #-6]
    715c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7160:	3c013106 	stfccs	f3, [r1], {6}
    7164:	060c0514 			; <UNDEFINED> instruction: 0x060c0514
    7168:	03010501 	movweq	r0, #5377	; 0x1501
    716c:	0520202d 	streq	r2, [r0, #-45]!	; 0xffffffd3
    7170:	58030605 	stmdapl	r3, {r0, r2, r9, sl}
    7174:	06090520 	streq	r0, [r9], -r0, lsr #10
    7178:	20190501 	andscs	r0, r9, r1, lsl #10
    717c:	4b060505 	blmi	188598 <_Min_Heap_Size+0x187d98>
    7180:	01060905 	tsteq	r6, r5, lsl #18
    7184:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    7188:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
    718c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    7190:	22062007 	andcs	r2, r6, #7
    7194:	01060b05 	tsteq	r6, r5, lsl #22
    7198:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    719c:	5b4e0605 	blpl	13889b8 <_Min_Heap_Size+0x13881b8>
    71a0:	05010a05 	streq	r0, [r1, #-2565]	; 0xfffff5fb
    71a4:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    71a8:	0a05201a 	beq	14f218 <_Min_Heap_Size+0x14ea18>
    71ac:	06070520 	streq	r0, [r7], -r0, lsr #10
    71b0:	060b053f 			; <UNDEFINED> instruction: 0x060b053f
    71b4:	2e190501 	cfmul32cs	mvfx0, mvfx9, mvfx1
    71b8:	06200905 	strteq	r0, [r0], -r5, lsl #18
    71bc:	06190531 			; <UNDEFINED> instruction: 0x06190531
    71c0:	06090501 	streq	r0, [r9], -r1, lsl #10
    71c4:	06150531 			; <UNDEFINED> instruction: 0x06150531
    71c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    71cc:	143c013f 	ldrtne	r0, [ip], #-319	; 0xfffffec1
    71d0:	01061005 	tsteq	r6, r5
    71d4:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
    71d8:	69030104 	stmdbvs	r3, {r2, r8}
    71dc:	002d0520 	eoreq	r0, sp, r0, lsr #10
    71e0:	20010402 	andcs	r0, r1, r2, lsl #8
    71e4:	03060505 	movweq	r0, #25861	; 0x6505
    71e8:	1f053c1c 	svcne	0x00053c1c
    71ec:	18050106 	stmdane	r5, {r1, r2, r8}
    71f0:	2e100520 	cfmul64cs	mvdx0, mvdx0, mvdx0
    71f4:	23060505 	movwcs	r0, #25861	; 0x6505
    71f8:	01061105 	tsteq	r6, r5, lsl #2
    71fc:	3f060505 	svccc	0x00060505
    7200:	03053c01 	movweq	r3, #23553	; 0x5c01
    7204:	060a0514 			; <UNDEFINED> instruction: 0x060a0514
    7208:	00010201 	andeq	r0, r1, r1, lsl #4
    720c:	01050101 	tsteq	r5, r1, lsl #2
    7210:	78020500 	stmdavc	r2, {r8, sl}
    7214:	03080014 	movweq	r0, #32788	; 0x8014
    7218:	050104c4 	streq	r0, [r1, #-1220]	; 0xfffffb3c
    721c:	0a051303 	beq	14be30 <_Min_Heap_Size+0x14b630>
    7220:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7224:	0530063c 	ldreq	r0, [r0, #-1596]!	; 0xfffff9c4
    7228:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    722c:	052f0605 	streq	r0, [pc, #-1541]!	; 6c2f <_Min_Heap_Size+0x642f>
    7230:	2001060c 	andcs	r0, r1, ip, lsl #12
    7234:	25060505 	strcs	r0, [r6, #-1285]	; 0xfffffafb
    7238:	01061105 	tsteq	r6, r5, lsl #2
    723c:	3f060505 	svccc	0x00060505
    7240:	055b0305 	ldrbeq	r0, [fp, #-773]	; 0xfffffcfb
    7244:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    7248:	01022101 	tsteq	r2, r1, lsl #2
    724c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7250:	02050001 	andeq	r0, r5, #1
    7254:	00000000 	andeq	r0, r0, r0
    7258:	0104e203 	tsteq	r4, r3, lsl #4
    725c:	03050106 	movweq	r0, #20742	; 0x5106
    7260:	13135906 	tstne	r3, #98304	; 0x18000
    7264:	01061805 	tsteq	r6, r5, lsl #16
    7268:	2f060305 	svccs	0x00060305
    726c:	20051415 	andcs	r1, r5, r5, lsl r4
    7270:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7274:	0531063c 	ldreq	r0, [r1, #-1596]!	; 0xfffff9c4
    7278:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    727c:	012f0605 			; <UNDEFINED> instruction: 0x012f0605
    7280:	0c05133c 	stceq	3, cr1, [r5], {60}	; 0x3c
    7284:	01050106 	tsteq	r5, r6, lsl #2
    7288:	2000f103 	andcs	pc, r0, r3, lsl #2
    728c:	0603052e 	streq	r0, [r3], -lr, lsr #10
    7290:	207f9303 	rsbscs	r9, pc, r3, lsl #6
    7294:	01060c05 	tsteq	r6, r5, lsl #24
    7298:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    729c:	03052006 	movweq	r2, #20486	; 0x5006
    72a0:	05054306 	streq	r4, [r5, #-774]	; 0xfffffcfa
    72a4:	3f060106 	svccc	0x00060106
    72a8:	01062e05 	tsteq	r6, r5, lsl #28
    72ac:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
    72b0:	05520603 	ldrbeq	r0, [r2, #-1539]	; 0xfffff9fd
    72b4:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    72b8:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    72bc:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    72c0:	05220603 	streq	r0, [r2, #-1539]!	; 0xfffff9fd
    72c4:	37050108 	strcc	r0, [r5, -r8, lsl #2]
    72c8:	01040200 	mrseq	r0, R12_usr
    72cc:	2e053c06 	cdpcs	12, 0, cr3, cr5, cr6, {0}
    72d0:	01040200 	mrseq	r0, R12_usr
    72d4:	06050520 	streq	r0, [r5], -r0, lsr #10
    72d8:	0607053f 			; <UNDEFINED> instruction: 0x0607053f
    72dc:	053e0601 	ldreq	r0, [lr, #-1537]!	; 0xfffff9ff
    72e0:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
    72e4:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    72e8:	2b052e01 	blcs	152af4 <_Min_Heap_Size+0x1522f4>
    72ec:	01040200 	mrseq	r0, R12_usr
    72f0:	0019052e 	andseq	r0, r9, lr, lsr #10
    72f4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    72f8:	03060505 	movweq	r0, #25861	; 0x6505
    72fc:	0c052e10 	stceq	14, cr2, [r5], {16}
    7300:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7304:	2b052206 	blcs	14fb24 <_Min_Heap_Size+0x14f324>
    7308:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    730c:	2e070520 	cfsh32cs	mvfx0, mvfx7, #16
    7310:	17053106 	strne	r3, [r5, -r6, lsl #2]
    7314:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7318:	12054d06 	andne	r4, r5, #384	; 0x180
    731c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7320:	2b052306 	blcs	14ff40 <_Min_Heap_Size+0x14f740>
    7324:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    7328:	2e070520 	cfsh32cs	mvfx0, mvfx7, #16
    732c:	17053106 	strne	r3, [r5, -r6, lsl #2]
    7330:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7334:	12054d06 	andne	r4, r5, #384	; 0x180
    7338:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    733c:	2c052306 	stccs	3, cr2, [r5], {6}
    7340:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    7344:	2e070520 	cfsh32cs	mvfx0, mvfx7, #16
    7348:	17053106 	strne	r3, [r5, -r6, lsl #2]
    734c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7350:	12054d06 	andne	r4, r5, #384	; 0x180
    7354:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7358:	7fbe0306 	svcvc	0x00be0306
    735c:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    7360:	06050501 	streq	r0, [r5], -r1, lsl #10
    7364:	060c053d 			; <UNDEFINED> instruction: 0x060c053d
    7368:	05052001 	streq	r2, [r5, #-1]
    736c:	200c0306 	andcs	r0, ip, r6, lsl #6
    7370:	01062e05 	tsteq	r6, r5, lsl #28
    7374:	4a201405 	bmi	80c390 <_Min_Heap_Size+0x80bb90>
    7378:	03060905 	movweq	r0, #26885	; 0x6905
    737c:	1905200e 	stmdbne	r5, {r1, r2, r3, sp}
    7380:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7384:	15053106 	strne	r3, [r5, #-262]	; 0xfffffefa
    7388:	09050106 	stmdbeq	r5, {r1, r2, r8}
    738c:	3c013f06 	stccc	15, cr3, [r1], {6}
    7390:	06100514 			; <UNDEFINED> instruction: 0x06100514
    7394:	06030501 	streq	r0, [r3], -r1, lsl #10
    7398:	052e2303 	streq	r2, [lr, #-771]!	; 0xfffffcfd
    739c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
    73a0:	22062005 	andcs	r2, r6, #5
    73a4:	01060d05 	tsteq	r6, r5, lsl #26
    73a8:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    73ac:	12030603 	andne	r0, r3, #3145728	; 0x300000
    73b0:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    73b4:	053f0601 	ldreq	r0, [pc, #-1537]!	; 6dbb <_Min_Heap_Size+0x65bb>
    73b8:	0501063f 	streq	r0, [r1, #-1599]	; 0xfffff9c1
    73bc:	10052038 	andne	r2, r5, r8, lsr r0
    73c0:	0605052e 	streq	r0, [r5], -lr, lsr #10
    73c4:	06110522 	ldreq	r0, [r1], -r2, lsr #10
    73c8:	06050501 	streq	r0, [r5], -r1, lsl #10
    73cc:	053c013f 	ldreq	r0, [ip, #-319]!	; 0xfffffec1
    73d0:	051a060a 	ldreq	r0, [sl, #-1546]	; 0xfffff9f6
    73d4:	60030607 	andvs	r0, r3, r7, lsl #12
    73d8:	41053f2e 	tstmi	r5, lr, lsr #30
    73dc:	3a050106 	bcc	1477fc <_Min_Heap_Size+0x146ffc>
    73e0:	2e120520 	cfmul64cs	mvdx0, mvdx2, mvdx0
    73e4:	23060705 	movwcs	r0, #26373	; 0x6705
    73e8:	01061205 	tsteq	r6, r5, lsl #4
    73ec:	3f060705 	svccc	0x00060705
    73f0:	05143c01 	ldreq	r3, [r4, #-3073]	; 0xfffff3ff
    73f4:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    73f8:	12030605 	andne	r0, r3, #5242880	; 0x500000
    73fc:	062c0520 	strteq	r0, [ip], -r0, lsr #10
    7400:	20250501 	eorcs	r0, r5, r1, lsl #10
    7404:	052e1005 	streq	r1, [lr, #-5]!
    7408:	0202230a 	andeq	r2, r2, #671088640	; 0x28000000
    740c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7410:	02050001 	andeq	r0, r5, #1
    7414:	00000000 	andeq	r0, r0, r0
    7418:	0105ea03 	tsteq	r5, r3, lsl #20
    741c:	03050106 	movweq	r0, #20742	; 0x5106
    7420:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    7424:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    7428:	052f0603 	streq	r0, [pc, #-1539]!	; 6e2d <_Min_Heap_Size+0x662d>
    742c:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    7430:	03052e0c 	movweq	r2, #24076	; 0x5e0c
    7434:	38054d06 	stmdacc	r5, {r1, r2, r8, sl, fp, lr}
    7438:	03050106 	movweq	r0, #20742	; 0x5106
    743c:	0a052206 	beq	14fc5c <_Min_Heap_Size+0x14f45c>
    7440:	03050106 	movweq	r0, #20742	; 0x5106
    7444:	2a052306 	bcs	150064 <_Min_Heap_Size+0x14f864>
    7448:	23050106 	movwcs	r0, #20742	; 0x5106
    744c:	2e060520 	cfsh32cs	mvfx0, mvfx6, #16
    7450:	30060505 	andcc	r0, r6, r5, lsl #10
    7454:	01060805 	tsteq	r6, r5, lsl #16
    7458:	062e0705 	strteq	r0, [lr], -r5, lsl #14
    745c:	061b053f 			; <UNDEFINED> instruction: 0x061b053f
    7460:	06070501 	streq	r0, [r7], -r1, lsl #10
    7464:	062c054d 	strteq	r0, [ip], -sp, asr #10
    7468:	20250501 	eorcs	r0, r5, r1, lsl #10
    746c:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
    7470:	05230607 	streq	r0, [r3, #-1543]!	; 0xfffff9f9
    7474:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    7478:	054e0603 	strbeq	r0, [lr, #-1539]	; 0xfffff9fd
    747c:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    7480:	06052023 	streq	r2, [r5], -r3, lsr #32
    7484:	0605052e 	streq	r0, [r5], -lr, lsr #10
    7488:	06080530 			; <UNDEFINED> instruction: 0x06080530
    748c:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    7490:	12053f06 	andne	r3, r5, #6, 30
    7494:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7498:	17052306 	strne	r2, [r5, -r6, lsl #6]
    749c:	03050106 	movweq	r0, #20742	; 0x5106
    74a0:	2b054e06 	blcs	15acc0 <_Min_Heap_Size+0x15a4c0>
    74a4:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
    74a8:	2e060520 	cfsh32cs	mvfx0, mvfx6, #16
    74ac:	30060505 	andcc	r0, r6, r5, lsl #10
    74b0:	01060805 	tsteq	r6, r5, lsl #16
    74b4:	062e0705 	strteq	r0, [lr], -r5, lsl #14
    74b8:	0612053f 			; <UNDEFINED> instruction: 0x0612053f
    74bc:	06070501 	streq	r0, [r7], -r1, lsl #10
    74c0:	06170523 	ldreq	r0, [r7], -r3, lsr #10
    74c4:	06030501 	streq	r0, [r3], -r1, lsl #10
    74c8:	062a054e 	strteq	r0, [sl], -lr, asr #10
    74cc:	20230501 	eorcs	r0, r3, r1, lsl #10
    74d0:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    74d4:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    74d8:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    74dc:	3f062e07 	svccc	0x00062e07
    74e0:	01061205 	tsteq	r6, r5, lsl #4
    74e4:	23060705 	movwcs	r0, #26373	; 0x6705
    74e8:	01061005 	tsteq	r6, r5
    74ec:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
    74f0:	3f062009 	svccc	0x00062009
    74f4:	01061b05 	tsteq	r6, r5, lsl #22
    74f8:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    74fc:	0612053e 			; <UNDEFINED> instruction: 0x0612053e
    7500:	200d0501 	andcs	r0, sp, r1, lsl #10
    7504:	20062306 	andcs	r2, r6, r6, lsl #6
    7508:	34060b05 	strcc	r0, [r6], #-2821	; 0xfffff4fb
    750c:	01061205 	tsteq	r6, r5, lsl #4
    7510:	06200d05 	strteq	r0, [r0], -r5, lsl #26
    7514:	05200623 	streq	r0, [r0, #-1571]!	; 0xfffff9dd
    7518:	05350609 	ldreq	r0, [r5, #-1545]!	; 0xfffff9f7
    751c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    7520:	3f06200b 	svccc	0x0006200b
    7524:	01061f05 	tsteq	r6, r5, lsl #30
    7528:	4d060905 	vstrmi.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    752c:	01061005 	tsteq	r6, r5
    7530:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    7534:	05200623 	streq	r0, [r0, #-1571]!	; 0xfffff9dd
    7538:	05260603 	streq	r0, [r6, #-1539]!	; 0xfffff9fd
    753c:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    7540:	06052023 	streq	r2, [r5], -r3, lsr #32
    7544:	0605052e 	streq	r0, [r5], -lr, lsr #10
    7548:	06080530 			; <UNDEFINED> instruction: 0x06080530
    754c:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    7550:	12053f06 	andne	r3, r5, #6, 30
    7554:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7558:	25052206 	strcs	r2, [r5, #-518]	; 0xfffffdfa
    755c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    7560:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
    7564:	052e1b03 	streq	r1, [lr, #-2819]!	; 0xfffff4fd
    7568:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    756c:	0905201a 	stmdbeq	r5, {r1, r3, r4, sp}
    7570:	053f0620 	ldreq	r0, [pc, #-1568]!	; 6f58 <_Min_Heap_Size+0x6758>
    7574:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    7578:	3e06200b 	cdpcc	0, 0, cr2, cr6, cr11, {0}
    757c:	01061205 	tsteq	r6, r5, lsl #4
    7580:	06200d05 	strteq	r0, [r0], -r5, lsl #26
    7584:	03090531 	movweq	r0, #38193	; 0x9531
    7588:	0d053c60 	stceq	12, cr3, [r5, #-384]	; 0xfffffe80
    758c:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    7590:	06090520 	streq	r0, [r9], -r0, lsr #10
    7594:	060d054b 	streq	r0, [sp], -fp, asr #10
    7598:	201d0501 	andscs	r0, sp, r1, lsl #10
    759c:	4c060905 			; <UNDEFINED> instruction: 0x4c060905
    75a0:	01061105 	tsteq	r6, r5, lsl #2
    75a4:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    75a8:	060f0522 	streq	r0, [pc], -r2, lsr #10
    75ac:	201f0501 	andscs	r0, pc, r1, lsl #10
    75b0:	4e060905 	vmlami.f16	s0, s12, s10	; <UNPREDICTABLE>
    75b4:	01062305 	tsteq	r6, r5, lsl #6
    75b8:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    75bc:	09052e14 	stmdbeq	r5, {r2, r4, r9, sl, fp, sp}
    75c0:	15052306 	strne	r2, [r5, #-774]	; 0xfffffcfa
    75c4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    75c8:	3c013f06 	stccc	15, cr3, [r1], {6}
    75cc:	06100514 			; <UNDEFINED> instruction: 0x06100514
    75d0:	200b0501 	andcs	r0, fp, r1, lsl #10
    75d4:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    75d8:	00390530 	eorseq	r0, r9, r0, lsr r5
    75dc:	06010402 	streq	r0, [r1], -r2, lsl #8
    75e0:	05206e03 	streq	r6, [r0, #-3587]!	; 0xfffff1fd
    75e4:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    75e8:	0b052001 	bleq	14f5f4 <_Min_Heap_Size+0x14edf4>
    75ec:	3c230306 	stccc	3, cr0, [r3], #-24	; 0xffffffe8
    75f0:	01061205 	tsteq	r6, r5, lsl #4
    75f4:	06200d05 	strteq	r0, [r0], -r5, lsl #26
    75f8:	43090523 	movwmi	r0, #38179	; 0x9523
    75fc:	01061b05 	tsteq	r6, r5, lsl #22
    7600:	06200b05 	strteq	r0, [r0], -r5, lsl #22
    7604:	061f053f 			; <UNDEFINED> instruction: 0x061f053f
    7608:	060b0501 	streq	r0, [fp], -r1, lsl #10
    760c:	0617054d 	ldreq	r0, [r7], -sp, asr #10
    7610:	060b0501 	streq	r0, [fp], -r1, lsl #10
    7614:	0200013f 	andeq	r0, r0, #-1073741809	; 0xc000000f
    7618:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    761c:	04020009 	streq	r0, [r2], #-9
    7620:	10051501 	andne	r1, r5, r1, lsl #10
    7624:	01040200 	mrseq	r0, R12_usr
    7628:	0b050106 	bleq	147a48 <_Min_Heap_Size+0x147248>
    762c:	01040200 	mrseq	r0, R12_usr
    7630:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    7634:	0a053503 	beq	154a48 <_Min_Heap_Size+0x154248>
    7638:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    763c:	05220620 	streq	r0, [r2, #-1568]!	; 0xfffff9e0
    7640:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    7644:	3e062007 	cdpcc	0, 0, cr2, cr6, cr7, {0}
    7648:	01061305 	tsteq	r6, r5, lsl #6
    764c:	3f060705 	svccc	0x00060705
    7650:	1409055a 	strne	r0, [r9], #-1370	; 0xfffffaa6
    7654:	01060d05 	tsteq	r6, r5, lsl #26
    7658:	062e0c05 	strteq	r0, [lr], -r5, lsl #24
    765c:	06120541 	ldreq	r0, [r2], -r1, asr #10
    7660:	201c0501 	andscs	r0, ip, r1, lsl #10
    7664:	06200705 	strteq	r0, [r0], -r5, lsl #14
    7668:	0613053f 			; <UNDEFINED> instruction: 0x0613053f
    766c:	06070501 	streq	r0, [r7], -r1, lsl #10
    7670:	0200013f 	andeq	r0, r0, #-1073741809	; 0xc000000f
    7674:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    7678:	04020005 	streq	r0, [r2], #-5
    767c:	0c051501 	cfstr32eq	mvfx1, [r5], {1}
    7680:	01040200 	mrseq	r0, R12_usr
    7684:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7688:	01040200 	mrseq	r0, R12_usr
    768c:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    7690:	2e310601 	cfmsuba32cs	mvax0, mvax0, mvfx1, mvfx1
    7694:	01000402 	tsteq	r0, r2, lsl #8
    7698:	00010501 	andeq	r0, r1, r1, lsl #10
    769c:	00000205 	andeq	r0, r0, r5, lsl #4
    76a0:	c7030000 	strgt	r0, [r3, -r0]
    76a4:	01060107 	tsteq	r6, r7, lsl #2
    76a8:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    76ac:	2e060115 	mcrcs	1, 0, r0, cr6, cr5, {0}
    76b0:	02040200 	andeq	r0, r4, #0, 4
    76b4:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    76b8:	003c0204 	eorseq	r0, ip, r4, lsl #4
    76bc:	14020402 	strne	r0, [r2], #-1026	; 0xfffffbfe
    76c0:	02002105 	andeq	r2, r0, #1073741825	; 0x40000001
    76c4:	01060204 	tsteq	r6, r4, lsl #4
    76c8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    76cc:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
    76d0:	2e25030c 	cdpcs	3, 2, cr0, cr5, cr12, {0}
    76d4:	24060305 	strcs	r0, [r6], #-773	; 0xfffffcfb
    76d8:	06200601 	strteq	r0, [r0], -r1, lsl #12
    76dc:	0a05142e 	beq	14c79c <_Min_Heap_Size+0x14bf9c>
    76e0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    76e4:	20570306 	subscs	r0, r7, r6, lsl #6
    76e8:	05770705 	ldrbeq	r0, [r7, #-1797]!	; 0xfffff8fb
    76ec:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    76f0:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    76f4:	75030615 	strvc	r0, [r3, #-1557]	; 0xfffff9eb
    76f8:	03070501 	movweq	r0, #29953	; 0x7501
    76fc:	2306200b 	movwcs	r2, #24587	; 0x600b
    7700:	01062205 	tsteq	r6, r5, lsl #4
    7704:	21060705 	tstcs	r6, r5, lsl #14
    7708:	03061505 	movweq	r1, #25861	; 0x6505
    770c:	07050171 	smlsdxeq	r5, r1, r1, r0
    7710:	06200f03 	strteq	r0, [r0], -r3, lsl #30
    7714:	06200523 	strteq	r0, [r0], -r3, lsr #10
    7718:	06070501 	streq	r0, [r7], -r1, lsl #10
    771c:	06150521 	ldreq	r0, [r5], -r1, lsr #10
    7720:	05016d03 	streq	r6, [r1, #-3331]	; 0xfffff2fd
    7724:	20130307 	andscs	r0, r3, r7, lsl #6
    7728:	24052306 	strcs	r2, [r5], #-774	; 0xfffffcfa
    772c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    7730:	15052106 	strne	r2, [r5, #-262]	; 0xfffffefa
    7734:	01690306 	cmneq	r9, r6, lsl #6
    7738:	17030705 	strne	r0, [r3, -r5, lsl #14]
    773c:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    7740:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    7744:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    7748:	65030615 	strvs	r0, [r3, #-1557]	; 0xfffff9eb
    774c:	03070501 	movweq	r0, #29953	; 0x7501
    7750:	2306201b 	movwcs	r2, #24603	; 0x601b
    7754:	01061f05 	tsteq	r6, r5, lsl #30
    7758:	21060705 	tstcs	r6, r5, lsl #14
    775c:	03061505 	movweq	r1, #25861	; 0x6505
    7760:	07050161 	streq	r0, [r5, -r1, ror #2]
    7764:	05201f03 	streq	r1, [r0, #-3843]!	; 0xfffff0fd
    7768:	20640303 	rsbcs	r0, r4, r3, lsl #6
    776c:	2e030105 	adfcss	f0, f3, f5
    7770:	00010220 	andeq	r0, r1, r0, lsr #4
    7774:	01050101 	tsteq	r5, r1, lsl #2
    7778:	00020500 	andeq	r0, r2, r0, lsl #10
    777c:	03000000 	movweq	r0, #0
    7780:	06010885 	streq	r0, [r1], -r5, lsl #17
    7784:	06030501 	streq	r0, [r3], -r1, lsl #10
    7788:	00011521 	andeq	r1, r1, r1, lsr #10
    778c:	4a020402 	bmi	8879c <_Min_Heap_Size+0x87f9c>
    7790:	02040200 	andeq	r0, r4, #0, 4
    7794:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    7798:	21051402 	tstcs	r5, r2, lsl #8
    779c:	02040200 	andeq	r0, r4, #0, 4
    77a0:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    77a4:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    77a8:	04020005 	streq	r0, [r2], #-5
    77ac:	0c052002 	stceq	0, cr2, [r5], {2}
    77b0:	052e2c03 	streq	r2, [lr, #-3075]!	; 0xfffff3fd
    77b4:	01240603 			; <UNDEFINED> instruction: 0x01240603
    77b8:	0a05143c 	beq	14c8b0 <_Min_Heap_Size+0x14c0b0>
    77bc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    77c0:	20500306 	subscs	r0, r0, r6, lsl #6
    77c4:	05850705 	streq	r0, [r5, #1797]	; 0x705
    77c8:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    77cc:	052f0607 	streq	r0, [pc, #-1543]!	; 71cd <_Min_Heap_Size+0x69cd>
    77d0:	75030615 	strvc	r0, [r3, #-1557]	; 0xfffff9eb
    77d4:	03070501 	movweq	r0, #29953	; 0x7501
    77d8:	2306200b 	movwcs	r2, #24587	; 0x600b
    77dc:	01062205 	tsteq	r6, r5, lsl #4
    77e0:	2f060705 	svccs	0x00060705
    77e4:	06200523 	strteq	r0, [r0], -r3, lsr #10
    77e8:	06070501 	streq	r0, [r7], -r1, lsl #10
    77ec:	2405232f 	strcs	r2, [r5], #-815	; 0xfffffcd1
    77f0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    77f4:	05232f06 	streq	r2, [r3, #-3846]!	; 0xfffff0fa
    77f8:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    77fc:	232f0607 			; <UNDEFINED> instruction: 0x232f0607
    7800:	01061f05 	tsteq	r6, r5, lsl #30
    7804:	2f060705 	svccs	0x00060705
    7808:	061e0523 	ldreq	r0, [lr], -r3, lsr #10
    780c:	06070501 	streq	r0, [r7], -r1, lsl #10
    7810:	0622052f 	strteq	r0, [r2], -pc, lsr #10
    7814:	06070501 	streq	r0, [r7], -r1, lsl #10
    7818:	06200521 	strteq	r0, [r0], -r1, lsr #10
    781c:	06070501 	streq	r0, [r7], -r1, lsl #10
    7820:	06240521 	strteq	r0, [r4], -r1, lsr #10
    7824:	06070501 	streq	r0, [r7], -r1, lsl #10
    7828:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    782c:	06070501 	streq	r0, [r7], -r1, lsl #10
    7830:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    7834:	06070501 	streq	r0, [r7], -r1, lsl #10
    7838:	06030521 	streq	r0, [r3], -r1, lsr #10
    783c:	05205b03 	streq	r5, [r0, #-2819]!	; 0xfffff4fd
    7840:	20350301 	eorscs	r0, r5, r1, lsl #6
    7844:	01000102 	tsteq	r0, r2, lsl #2
    7848:	00010501 	andeq	r0, r1, r1, lsl #10
    784c:	00000205 	andeq	r0, r0, r5, lsl #4
    7850:	da030000 	ble	c7858 <_Min_Heap_Size+0xc7058>
    7854:	03050108 	movweq	r0, #20744	; 0x5108
    7858:	060e0513 			; <UNDEFINED> instruction: 0x060e0513
    785c:	2f010501 	svccs	0x00010501
    7860:	01000102 	tsteq	r0, r2, lsl #2
    7864:	00010501 	andeq	r0, r1, r1, lsl #10
    7868:	00000205 	andeq	r0, r0, r5, lsl #4
    786c:	e5030000 	str	r0, [r3, #-0]
    7870:	03050108 	movweq	r0, #20744	; 0x5108
    7874:	060e0513 			; <UNDEFINED> instruction: 0x060e0513
    7878:	21010501 	tstcs	r1, r1, lsl #10
    787c:	01000102 	tsteq	r0, r2, lsl #2
    7880:	0008ba01 	andeq	fp, r8, r1, lsl #20
    7884:	d7000300 	strle	r0, [r0, -r0, lsl #6]
    7888:	02000001 	andeq	r0, r0, #1
    788c:	0d0efb01 	vstreq	d15, [lr, #-4]
    7890:	01010100 	mrseq	r0, (UNDEF: 17)
    7894:	00000001 	andeq	r0, r0, r1
    7898:	01000001 	tsteq	r0, r1
    789c:	442f2e2e 	strtmi	r2, [pc], #-3630	; 78a4 <_Min_Heap_Size+0x70a4>
    78a0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    78a4:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    78a8:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    78ac:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    78b0:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    78b4:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    78b8:	2f726576 	svccs	0x00726576
    78bc:	00637253 	rsbeq	r7, r3, r3, asr r2
    78c0:	442f2e2e 	strtmi	r2, [pc], #-3630	; 78c8 <_Min_Heap_Size+0x70c8>
    78c4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    78c8:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    78cc:	5349534d 	movtpl	r5, #37709	; 0x934d
    78d0:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    78d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    78d8:	2f2e2e00 	svccs	0x002e2e00
    78dc:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    78e0:	2f737265 	svccs	0x00737265
    78e4:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    78e8:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    78ec:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    78f0:	2f54532f 	svccs	0x0054532f
    78f4:	334d5453 	movtcc	r5, #54355	; 0xd453
    78f8:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    78fc:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    7900:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7904:	6f2f0065 	svcvs	0x002f0065
    7908:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
    790c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    7910:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    7914:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    7918:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    791c:	2e30312d 	rsfcssp	f3, f0, #5.0
    7920:	30322d33 	eorscc	r2, r2, r3, lsr sp
    7924:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    7928:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
    792c:	6f6e2d6d 	svcvs	0x006e2d6d
    7930:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    7934:	2f696261 	svccs	0x00696261
    7938:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    793c:	2f656475 	svccs	0x00656475
    7940:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    7944:	00656e69 	rsbeq	r6, r5, r9, ror #28
    7948:	74706f2f 	ldrbtvc	r6, [r0], #-3887	; 0xfffff0d1
    794c:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    7950:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    7954:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    7958:	61652d65 	cmnvs	r5, r5, ror #26
    795c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    7960:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    7964:	31323032 	teqcc	r2, r2, lsr r0
    7968:	2f30312e 	svccs	0x0030312e
    796c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    7970:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    7974:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    7978:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
    797c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    7980:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    7984:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    7988:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    798c:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    7990:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    7994:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    7998:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    799c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 79a4 <_Min_Heap_Size+0x71a4>
    79a0:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    79a4:	6e492f72 	mcrvs	15, 2, r2, cr9, cr2, {3}
    79a8:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    79ac:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    79b0:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
    79b4:	73000063 	movwvc	r0, #99	; 0x63
    79b8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    79bc:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    79c0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    79c4:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    79c8:	2e786574 	mrccs	5, 3, r6, cr8, cr4, {3}
    79cc:	00010063 	andeq	r0, r1, r3, rrx
    79d0:	726f6300 	rsbvc	r6, pc, #0, 6
    79d4:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
    79d8:	00682e34 	rsbeq	r2, r8, r4, lsr lr
    79dc:	63000002 	movwvs	r0, #2
    79e0:	7369736d 	cmnvc	r9, #-1275068415	; 0xb4000001
    79e4:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    79e8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    79ec:	74730000 	ldrbtvc	r0, [r3], #-0
    79f0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    79f4:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    79f8:	00682e78 	rsbeq	r2, r8, r8, ror lr
    79fc:	5f000003 	svcpl	0x00000003
    7a00:	61666564 	cmnvs	r6, r4, ror #10
    7a04:	5f746c75 	svcpl	0x00746c75
    7a08:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    7a0c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    7a10:	5f000004 	svcpl	0x00000004
    7a14:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    7a18:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    7a1c:	00000500 	andeq	r0, r0, r0, lsl #10
    7a20:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    7a24:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    7a28:	00682e78 	rsbeq	r2, r8, r8, ror lr
    7a2c:	73000003 	movwvc	r0, #3
    7a30:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    7a34:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    7a38:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    7a3c:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    7a40:	2e786574 	mrccs	5, 3, r6, cr8, cr4, {3}
    7a44:	00060068 	andeq	r0, r6, r8, rrx
    7a48:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    7a4c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    7a50:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    7a54:	635f6c61 	cmpvs	pc, #24832	; 0x6100
    7a58:	2e666e6f 	cdpcs	14, 6, cr6, cr6, cr15, {3}
    7a5c:	00070068 	andeq	r0, r7, r8, rrx
    7a60:	01050000 	mrseq	r0, (UNDEF: 5)
    7a64:	a0020500 	andge	r0, r2, r0, lsl #10
    7a68:	03080014 	movweq	r0, #32788	; 0x8014
    7a6c:	0601018d 	streq	r0, [r1], -sp, lsl #3
    7a70:	06030501 	streq	r0, [r3], -r1, lsl #10
    7a74:	02043f30 	andeq	r3, r4, #48, 30	; 0xc0
    7a78:	e2031605 	and	r1, r3, #5242880	; 0x500000
    7a7c:	0305010b 	movweq	r0, #20747	; 0x510b
    7a80:	05141314 	ldreq	r1, [r4, #-788]	; 0xfffffcec
    7a84:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    7a88:	052f0603 	streq	r0, [pc, #-1539]!	; 748d <_Min_Heap_Size+0x6c8d>
    7a8c:	2e01060d 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx13
    7a90:	2f060305 	svccs	0x00060305
    7a94:	14062305 	strne	r2, [r6], #-773	; 0xfffffcfb
    7a98:	2d3e0520 	cfldr32cs	mvfx0, [lr, #-128]!	; 0xffffff80
    7a9c:	051f0e05 	ldreq	r0, [pc, #-3589]	; 6c9f <_Min_Heap_Size+0x649f>
    7aa0:	054d0603 	strbeq	r0, [sp, #-1539]	; 0xfffff9fd
    7aa4:	2001060e 	andcs	r0, r1, lr, lsl #12
    7aa8:	01050104 	tsteq	r5, r4, lsl #2
    7aac:	01749503 	cmneq	r4, r3, lsl #10
    7ab0:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    7ab4:	001c0104 	andseq	r0, ip, r4, lsl #2
    7ab8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    7abc:	01000702 	tsteq	r0, r2, lsl #14
    7ac0:	00010501 	andeq	r0, r1, r1, lsl #10
    7ac4:	14dc0205 	ldrbne	r0, [ip], #517	; 0x205
    7ac8:	a3030800 	movwge	r0, #14336	; 0x3800
    7acc:	01060101 	tsteq	r6, r1, lsl #2
    7ad0:	4b060305 	blmi	1886ec <_Min_Heap_Size+0x187eec>
    7ad4:	04302f15 	ldrteq	r2, [r0], #-3861	; 0xfffff0eb
    7ad8:	031a0502 	tsteq	sl, #8388608	; 0x800000
    7adc:	05010bdd 	streq	r0, [r1, #-3037]	; 0xfffff423
    7ae0:	1a051403 	bne	14caf4 <_Min_Heap_Size+0x14c2f4>
    7ae4:	0b050106 	bleq	147f04 <_Min_Heap_Size+0x147704>
    7ae8:	01042e2e 	tsteq	r4, lr, lsr #28
    7aec:	03060305 	movweq	r0, #25349	; 0x6305
    7af0:	040174a3 	streq	r7, [r1], #-1187	; 0xfffffb5d
    7af4:	031a0502 	tsteq	sl, #8388608	; 0x800000
    7af8:	05010d98 	streq	r0, [r1, #-3480]	; 0xfffff268
    7afc:	13131403 	tstne	r3, #50331648	; 0x3000000
    7b00:	061f0514 			; <UNDEFINED> instruction: 0x061f0514
    7b04:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    7b08:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    7b0c:	01062c05 	tsteq	r6, r5, lsl #24
    7b10:	05206d05 	streq	r6, [r0, #-3333]!	; 0xfffff2fb
    7b14:	053e0603 	ldreq	r0, [lr, #-1539]!	; 0xfffff9fd
    7b18:	2e13061e 	mrccs	6, 0, r0, cr3, cr14, {0}
    7b1c:	2e52052e 	cdpcs	5, 5, cr0, cr2, cr14, {1}
    7b20:	2e211e05 	cdpcs	14, 2, cr1, cr1, cr5, {0}
    7b24:	202d6605 	eorcs	r6, sp, r5, lsl #12
    7b28:	03061605 	movweq	r1, #26117	; 0x6605
    7b2c:	03050147 	movweq	r0, #20807	; 0x5147
    7b30:	06060514 			; <UNDEFINED> instruction: 0x06060514
    7b34:	06050501 	streq	r0, [r5], -r1, lsl #10
    7b38:	06300530 			; <UNDEFINED> instruction: 0x06300530
    7b3c:	2e052001 	cdpcs	0, 0, cr2, cr5, cr1, {0}
    7b40:	044a2e20 	strbeq	r2, [sl], #-3616	; 0xfffff1e0
    7b44:	03010501 	movweq	r0, #5377	; 0x1501
    7b48:	05017394 	streq	r7, [r1, #-916]	; 0xfffffc6c
    7b4c:	04020003 	streq	r0, [r2], #-3
    7b50:	207a0301 	rsbscs	r0, sl, r1, lsl #6
    7b54:	01040200 	mrseq	r0, R12_usr
    7b58:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    7b5c:	02002001 	andeq	r2, r0, #1
    7b60:	002e0104 	eoreq	r0, lr, r4, lsl #2
    7b64:	21010402 	tstcs	r1, r2, lsl #8
    7b68:	6d050204 	sfmvs	f0, 4, [r5, #-16]
    7b6c:	580da303 	stmdapl	sp, {r0, r1, r8, r9, sp, pc}
    7b70:	05052020 	streq	r2, [r5, #-32]	; 0xffffffe0
    7b74:	01520306 	cmpeq	r2, r6, lsl #6
    7b78:	01062005 	tsteq	r6, r5
    7b7c:	202e3005 	eorcs	r3, lr, r5
    7b80:	2e202e05 	cdpcs	14, 2, cr2, cr0, cr5, {0}
    7b84:	01050104 	tsteq	r5, r4, lsl #2
    7b88:	01739003 	cmneq	r3, r3
    7b8c:	01000802 	tsteq	r0, r2, lsl #16
    7b90:	00010501 	andeq	r0, r1, r1, lsl #10
    7b94:	15680205 	strbne	r0, [r8, #-517]!	; 0xfffffdfb
    7b98:	b9030800 	stmdblt	r3, {fp}
    7b9c:	01060101 	tsteq	r6, r1, lsl #2
    7ba0:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    7ba4:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    7ba8:	0bd50316 	bleq	ff548808 <_estack+0xdf53ee68>
    7bac:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7bb0:	01060605 	tsteq	r6, r5, lsl #12
    7bb4:	30060505 	andcc	r0, r6, r5, lsl #10
    7bb8:	06510513 			; <UNDEFINED> instruction: 0x06510513
    7bbc:	2e220501 	cfsh64cs	mvdx0, mvdx2, #1
    7bc0:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
    7bc4:	05052e2b 	streq	r2, [r5, #-3627]	; 0xfffff1d5
    7bc8:	01063d06 	tsteq	r6, r6, lsl #26
    7bcc:	01050104 	tsteq	r5, r4, lsl #2
    7bd0:	0174a603 	cmneq	r4, r3, lsl #12
    7bd4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    7bd8:	001c0104 	andseq	r0, ip, r4, lsl #2
    7bdc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    7be0:	01000802 	tsteq	r0, r2, lsl #16
    7be4:	00010501 	andeq	r0, r1, r1, lsl #10
    7be8:	00000205 	andeq	r0, r0, r5, lsl #4
    7bec:	c9030000 	stmdbgt	r3, {}	; <UNPREDICTABLE>
    7bf0:	01060101 	tsteq	r6, r1, lsl #2
    7bf4:	22060305 	andcs	r0, r6, #335544320	; 0x14000000
    7bf8:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    7bfc:	0beb0316 	bleq	ffac885c <_estack+0xdfabeebc>
    7c00:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7c04:	01060605 	tsteq	r6, r5, lsl #12
    7c08:	30060505 	andcc	r0, r6, r5, lsl #10
    7c0c:	01065105 	tsteq	r6, r5, lsl #2
    7c10:	052e2205 	streq	r2, [lr, #-517]!	; 0xfffffdfb
    7c14:	2b05202d 	blcs	14fcd0 <_Min_Heap_Size+0x14f4d0>
    7c18:	0605052e 	streq	r0, [r5], -lr, lsr #10
    7c1c:	0503044b 	streq	r0, [r3, #-1099]	; 0xfffffbb5
    7c20:	74ce031b 	strbvc	r0, [lr], #795	; 0x31b
    7c24:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7c28:	05050204 	streq	r0, [r5, #-516]	; 0xfffffdfc
    7c2c:	2e0bb103 	mvfcse	f3, f3
    7c30:	1b050304 	blne	148848 <_Min_Heap_Size+0x148048>
    7c34:	0174c203 	cmneq	r4, r3, lsl #4
    7c38:	06140305 	ldreq	r0, [r4], -r5, lsl #6
    7c3c:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    7c40:	014c0301 	cmpeq	ip, r1, lsl #6
    7c44:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    7c48:	001c0104 	andseq	r0, ip, r4, lsl #2
    7c4c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    7c50:	01000702 	tsteq	r0, r2, lsl #14
    7c54:	00010501 	andeq	r0, r1, r1, lsl #10
    7c58:	00000205 	andeq	r0, r0, r5, lsl #4
    7c5c:	d6030000 	strle	r0, [r3], -r0
    7c60:	03050101 	movweq	r0, #20737	; 0x5101
    7c64:	05020414 	streq	r0, [r2, #-1044]	; 0xfffffbec
    7c68:	0db90322 	ldceq	3, cr0, [r9, #136]!	; 0x88
    7c6c:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7c70:	1b050304 	blne	148888 <_Min_Heap_Size+0x148088>
    7c74:	0172f903 	cmneq	r2, r3, lsl #18	; <UNPREDICTABLE>
    7c78:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
    7c7c:	0d870302 	stceq	3, cr0, [r7, #8]
    7c80:	0620052e 	strteq	r0, [r0], -lr, lsr #10
    7c84:	2e280513 	mcrcs	5, 1, r0, cr8, cr3, {0}
    7c88:	052d1105 	streq	r1, [sp, #-261]!	; 0xfffffefb
    7c8c:	03052e0f 	movweq	r2, #24079	; 0x5e0f
    7c90:	03042306 	movweq	r2, #17158	; 0x4306
    7c94:	f4031b05 			; <UNDEFINED> instruction: 0xf4031b05
    7c98:	03050172 	movweq	r0, #20850	; 0x5172
    7c9c:	03020414 	movweq	r0, #9236	; 0x2414
    7ca0:	052e0d8c 	streq	r0, [lr, #-3468]!	; 0xfffff274
    7ca4:	08051405 	stmdaeq	r5, {r0, r2, sl, ip}
    7ca8:	0006021e 	andeq	r0, r6, lr, lsl r2
    7cac:	01050101 	tsteq	r5, r1, lsl #2
    7cb0:	98020500 	stmdals	r2, {r8, sl}
    7cb4:	03080015 	movweq	r0, #32789	; 0x8015
    7cb8:	050101e3 	streq	r0, [r1, #-483]	; 0xfffffe1d
    7cbc:	02041304 	andeq	r1, r4, #4, 6	; 0x10000000
    7cc0:	81031a05 	tsthi	r3, r5, lsl #20
    7cc4:	0305010e 	movweq	r0, #20750	; 0x510e
    7cc8:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
    7ccc:	20060501 	andcs	r0, r6, r1, lsl #10
    7cd0:	41060305 	tstmi	r6, r5, lsl #6
    7cd4:	01061205 	tsteq	r6, r5, lsl #4
    7cd8:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    7cdc:	a8031605 	stmdage	r3, {r0, r2, r9, sl, ip}
    7ce0:	0305017e 	movweq	r0, #20862	; 0x517e
    7ce4:	18050514 	stmdane	r5, {r2, r4, r8, sl}
    7ce8:	01062e05 	tsteq	r6, r5, lsl #28
    7cec:	0603054a 	streq	r0, [r3], -sl, asr #10
    7cf0:	0101d103 	tsteq	r1, r3, lsl #2
    7cf4:	01061205 	tsteq	r6, r5, lsl #4
    7cf8:	06030520 	streq	r0, [r3], -r0, lsr #10
    7cfc:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    7d00:	06030501 	streq	r0, [r3], -r1, lsl #10
    7d04:	060a0531 			; <UNDEFINED> instruction: 0x060a0531
    7d08:	030c0501 	movweq	r0, #50433	; 0xc501
    7d0c:	04202077 	strteq	r2, [r0], #-119	; 0xffffff89
    7d10:	03010501 	movweq	r0, #5377	; 0x1501
    7d14:	020171fc 	andeq	r7, r1, #252, 2	; 0x3f
    7d18:	01010003 	tsteq	r1, r3
    7d1c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7d20:	00000002 	andeq	r0, r0, r2
    7d24:	02800300 	addeq	r0, r0, #0, 6
    7d28:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7d2c:	1b050304 	blne	148944 <_Min_Heap_Size+0x148144>
    7d30:	05011503 	streq	r1, [r1, #-1283]	; 0xfffffafd
    7d34:	01041403 	tsteq	r4, r3, lsl #8
    7d38:	052e6c03 	streq	r6, [lr, #-3075]!	; 0xfffff3fd
    7d3c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    7d40:	055b0603 	ldrbeq	r0, [fp, #-1539]	; 0xfffff9fd
    7d44:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    7d48:	04023d01 	streq	r3, [r2], #-3329	; 0xfffff2ff
    7d4c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    7d50:	02050001 	andeq	r0, r5, #1
    7d54:	00000000 	andeq	r0, r0, r0
    7d58:	01029703 	tsteq	r2, r3, lsl #14
    7d5c:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    7d60:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    7d64:	03052e0d 	movweq	r2, #24077	; 0x5e0d
    7d68:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    7d6c:	03050106 	movweq	r0, #20742	; 0x5106
    7d70:	03044d06 	movweq	r4, #19718	; 0x4d06
    7d74:	6d031b05 	vstrvs	d1, [r3, #-20]	; 0xffffffec
    7d78:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7d7c:	12030104 	andne	r0, r3, #4, 2
    7d80:	0503042e 	streq	r0, [r3, #-1070]	; 0xfffffbd2
    7d84:	0161031b 	cmneq	r1, fp, lsl r3
    7d88:	04140305 	ldreq	r0, [r4], #-773	; 0xfffffcfb
    7d8c:	06010501 	streq	r0, [r1], -r1, lsl #10
    7d90:	022e1e03 	eoreq	r1, lr, #3, 28	; 0x30
    7d94:	01010003 	tsteq	r1, r3
    7d98:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7d9c:	00000002 	andeq	r0, r0, r2
    7da0:	02aa0300 	adceq	r0, sl, #0, 6
    7da4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7da8:	3d300603 	ldccc	6, cr0, [r0, #-12]!
    7dac:	0616053f 			; <UNDEFINED> instruction: 0x0616053f
    7db0:	200c0501 	andcs	r0, ip, r1, lsl #10
    7db4:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    7db8:	01061005 	tsteq	r6, r5
    7dbc:	05200605 	streq	r0, [r0, #-1541]!	; 0xfffff9fb
    7dc0:	3d310605 	ldccc	6, cr0, [r1, #-20]!	; 0xffffffec
    7dc4:	01040200 	mrseq	r0, R12_usr
    7dc8:	02003c06 	andeq	r3, r0, #1536	; 0x600
    7dcc:	062e0204 	strteq	r0, [lr], -r4, lsl #4
    7dd0:	3d3d3d2f 	ldccc	13, cr3, [sp, #-188]!	; 0xffffff44
    7dd4:	055a3d3d 	ldrbeq	r3, [sl, #-3389]	; 0xfffff2c3
    7dd8:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    7ddc:	0505200f 	streq	r2, [r5, #-15]
    7de0:	24053d06 	strcs	r3, [r5], #-3334	; 0xfffff2fa
    7de4:	05210106 	streq	r0, [r1, #-262]!	; 0xfffffefa
    7de8:	5405203e 	strpl	r2, [r5], #-62	; 0xffffffc2
    7dec:	3024051f 	eorcc	r0, r4, pc, lsl r5
    7df0:	051f5405 	ldreq	r5, [pc, #-1029]	; 79f3 <_Min_Heap_Size+0x71f3>
    7df4:	54053024 	strpl	r3, [r5], #-36	; 0xffffffdc
    7df8:	3024051f 	eorcc	r0, r4, pc, lsl r5
    7dfc:	051f5405 	ldreq	r5, [pc, #-1029]	; 79ff <_Min_Heap_Size+0x71ff>
    7e00:	54053024 	strpl	r3, [r5], #-36	; 0xffffffdc
    7e04:	3024051f 	eorcc	r0, r4, pc, lsl r5
    7e08:	051f5405 	ldreq	r5, [pc, #-1029]	; 7a0b <_Min_Heap_Size+0x720b>
    7e0c:	54053024 	strpl	r3, [r5], #-36	; 0xffffffdc
    7e10:	3024051f 	eorcc	r0, r4, pc, lsl r5
    7e14:	051f5405 	ldreq	r5, [pc, #-1029]	; 7a17 <_Min_Heap_Size+0x7217>
    7e18:	2079030f 	rsbscs	r0, r9, pc, lsl #6
    7e1c:	0f030105 	svceq	0x00030105
    7e20:	0003052e 	andeq	r0, r3, lr, lsr #10
    7e24:	03010402 	movweq	r0, #5122	; 0x1402
    7e28:	0200205e 	andeq	r2, r0, #94	; 0x5e
    7e2c:	003c0104 	eorseq	r0, ip, r4, lsl #2
    7e30:	3d010402 	cfstrscc	mvf0, [r1, #-8]
    7e34:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    7e38:	006e0104 	rsbeq	r0, lr, r4, lsl #2
    7e3c:	67030402 	strvs	r0, [r3, -r2, lsl #8]
    7e40:	01040200 	mrseq	r0, R12_usr
    7e44:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    7e48:	02006701 	andeq	r6, r0, #262144	; 0x40000
    7e4c:	00670104 	rsbeq	r0, r7, r4, lsl #2
    7e50:	67010402 	strvs	r0, [r1, -r2, lsl #8]
    7e54:	01040200 	mrseq	r0, R12_usr
    7e58:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    7e5c:	03066701 	movweq	r6, #26369	; 0x6701
    7e60:	0f05660f 	svceq	0x0005660f
    7e64:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7e68:	0f054b06 	svceq	0x00054b06
    7e6c:	01050106 	tsteq	r5, r6, lsl #2
    7e70:	00050230 	andeq	r0, r5, r0, lsr r2
    7e74:	01050101 	tsteq	r5, r1, lsl #2
    7e78:	00020500 	andeq	r0, r2, r0, lsl #10
    7e7c:	03000000 	movweq	r0, #0
    7e80:	050102d6 	streq	r0, [r1, #-726]	; 0xfffffd2a
    7e84:	05211303 	streq	r1, [r1, #-771]!	; 0xfffffcfd
    7e88:	02210601 	eoreq	r0, r1, #1048576	; 0x100000
    7e8c:	01010001 	tsteq	r1, r1
    7e90:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7e94:	00000002 	andeq	r0, r0, r2
    7e98:	02e00300 	rsceq	r0, r0, #0, 6
    7e9c:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7ea0:	1a050204 	bne	1486b8 <_Min_Heap_Size+0x147eb8>
    7ea4:	010aa503 	tsteq	sl, r3, lsl #10
    7ea8:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    7eac:	0401061a 	streq	r0, [r1], #-1562	; 0xfffff9e6
    7eb0:	03010501 	movweq	r0, #5377	; 0x1501
    7eb4:	022e75da 	eoreq	r7, lr, #914358272	; 0x36800000
    7eb8:	01010006 	tsteq	r1, r6
    7ebc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7ec0:	00000002 	andeq	r0, r0, r2
    7ec4:	02fb0300 	rscseq	r0, fp, #0, 6
    7ec8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7ecc:	065a0603 	ldrbeq	r0, [sl], -r3, lsl #12
    7ed0:	04300620 	ldrteq	r0, [r0], #-1568	; 0xfffff9e0
    7ed4:	031a0502 	tsteq	sl, #8388608	; 0x800000
    7ed8:	05010bac 	streq	r0, [r1, #-2988]	; 0xfffff454
    7edc:	06051503 	streq	r1, [r5], -r3, lsl #10
    7ee0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    7ee4:	1f053006 	svcne	0x00053006
    7ee8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    7eec:	05204a40 	streq	r4, [r0, #-2624]!	; 0xfffff5c0
    7ef0:	2f030616 	svccs	0x00030616
    7ef4:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
    7ef8:	01060c05 	tsteq	r6, r5, lsl #24
    7efc:	2f060305 	svccs	0x00060305
    7f00:	1f051413 	svcne	0x00051413
    7f04:	17050106 	strne	r0, [r5, -r6, lsl #2]
    7f08:	0603052e 	streq	r0, [r3], -lr, lsr #10
    7f0c:	062c053d 			; <UNDEFINED> instruction: 0x062c053d
    7f10:	206d0501 	rsbcs	r0, sp, r1, lsl #10
    7f14:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
    7f18:	01062105 	tsteq	r6, r5, lsl #2
    7f1c:	2e2e3505 	cfsh64cs	mvdx3, mvdx14, #5
    7f20:	2e15052e 	cfmul64cs	mvdx0, mvdx5, mvdx14
    7f24:	21060305 	tstcs	r6, r5, lsl #6
    7f28:	01063505 	tsteq	r6, r5, lsl #10
    7f2c:	2e15052e 	cfmul64cs	mvdx0, mvdx5, mvdx14
    7f30:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    7f34:	74970301 	ldrvc	r0, [r7], #769	; 0x301
    7f38:	00030501 	andeq	r0, r3, r1, lsl #10
    7f3c:	1d010402 	cfstrsne	mvf0, [r1, #-8]
    7f40:	01040200 	mrseq	r0, R12_usr
    7f44:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    7f48:	02002001 	andeq	r2, r0, #1
    7f4c:	042e0104 	strteq	r0, [lr], #-260	; 0xfffffefc
    7f50:	06050502 	streq	r0, [r5], -r2, lsl #10
    7f54:	200bb703 	andcs	fp, fp, r3, lsl #14
    7f58:	01063205 	tsteq	r6, r5, lsl #4
    7f5c:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    7f60:	052e2e40 	streq	r2, [lr, #-3648]!	; 0xfffff1c0
    7f64:	0132036d 	teqeq	r2, sp, ror #6
    7f68:	00060220 	andeq	r0, r6, r0, lsr #4
    7f6c:	01050101 	tsteq	r5, r1, lsl #2
    7f70:	00020500 	andeq	r0, r2, r0, lsl #10
    7f74:	03000000 	movweq	r0, #0
    7f78:	0601038a 	streq	r0, [r1], -sl, lsl #7
    7f7c:	06030501 	streq	r0, [r3], -r1, lsl #10
    7f80:	02043122 	andeq	r3, r4, #-2147483640	; 0x80000008
    7f84:	d0031605 	andle	r1, r3, r5, lsl #12
    7f88:	0305010a 	movweq	r0, #20746	; 0x510a
    7f8c:	06060514 			; <UNDEFINED> instruction: 0x06060514
    7f90:	06050501 	streq	r0, [r5], -r1, lsl #10
    7f94:	06510530 			; <UNDEFINED> instruction: 0x06510530
    7f98:	2e220501 	cfsh64cs	mvdx0, mvdx2, #1
    7f9c:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
    7fa0:	044a2e2b 	strbeq	r2, [sl], #-3627	; 0xfffff1d5
    7fa4:	03010501 	movweq	r0, #5377	; 0x1501
    7fa8:	050175ad 	streq	r7, [r1, #-1453]	; 0xfffffa53
    7fac:	04020003 	streq	r0, [r2], #-3
    7fb0:	02001c01 	andeq	r1, r0, #256	; 0x100
    7fb4:	023c0104 	eorseq	r0, ip, #4, 2
    7fb8:	01010008 	tsteq	r1, r8
    7fbc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    7fc0:	00000002 	andeq	r0, r0, r2
    7fc4:	039c0300 	orrseq	r0, ip, #0, 6
    7fc8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    7fcc:	31220603 			; <UNDEFINED> instruction: 0x31220603
    7fd0:	1a050204 	bne	1487e8 <_Min_Heap_Size+0x147fe8>
    7fd4:	010aab03 	tsteq	sl, r3, lsl #22
    7fd8:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    7fdc:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    7fe0:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    7fe4:	05010636 	streq	r0, [r1, #-1590]	; 0xfffff9ca
    7fe8:	5b052023 	blpl	15007c <_Min_Heap_Size+0x14f87c>
    7fec:	2e67054a 	cdpcs	5, 6, cr0, cr7, cr10, {2}
    7ff0:	2e2e0c05 	cdpcs	12, 2, cr0, cr14, cr5, {0}
    7ff4:	01050104 	tsteq	r5, r4, lsl #2
    7ff8:	0175d203 	cmneq	r5, r3, lsl #4
    7ffc:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    8000:	001c0104 	andseq	r0, ip, r4, lsl #2
    8004:	3c010402 	cfstrscc	mvf0, [r1], {2}
    8008:	0b050204 	bleq	148820 <_Min_Heap_Size+0x148020>
    800c:	3c0ab603 	stccc	6, cr11, [sl], {3}
    8010:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    8014:	75cd030a 	strbvc	r0, [sp, #778]	; 0x30a
    8018:	00060201 	andeq	r0, r6, r1, lsl #4
    801c:	01050101 	tsteq	r5, r1, lsl #2
    8020:	00020500 	andeq	r0, r2, r0, lsl #10
    8024:	03000000 	movweq	r0, #0
    8028:	060103ac 	streq	r0, [r1], -ip, lsr #7
    802c:	06030501 	streq	r0, [r3], -r1, lsl #10
    8030:	02043122 	andeq	r3, r4, #-2147483640	; 0x80000008
    8034:	bd031605 	stclt	6, cr1, [r3, #-20]	; 0xffffffec
    8038:	0305010a 	movweq	r0, #20746	; 0x510a
    803c:	06060514 			; <UNDEFINED> instruction: 0x06060514
    8040:	06050501 	streq	r0, [r5], -r1, lsl #10
    8044:	06510530 			; <UNDEFINED> instruction: 0x06510530
    8048:	2e220501 	cfsh64cs	mvdx0, mvdx2, #1
    804c:	05202d05 	streq	r2, [r0, #-3333]!	; 0xfffff2fb
    8050:	044a2e2b 	strbeq	r2, [sl], #-3627	; 0xfffff1d5
    8054:	03010501 	movweq	r0, #5377	; 0x1501
    8058:	050175c0 	streq	r7, [r1, #-1472]	; 0xfffffa40
    805c:	04020003 	streq	r0, [r2], #-3
    8060:	02001c01 	andeq	r1, r0, #256	; 0x100
    8064:	023c0104 	eorseq	r0, ip, #4, 2
    8068:	01010008 	tsteq	r1, r8
    806c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8070:	00000002 	andeq	r0, r0, r2
    8074:	03bd0300 			; <UNDEFINED> instruction: 0x03bd0300
    8078:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    807c:	31220603 			; <UNDEFINED> instruction: 0x31220603
    8080:	1a050204 	bne	148898 <_Min_Heap_Size+0x148098>
    8084:	010abd03 	tsteq	sl, r3, lsl #26
    8088:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    808c:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    8090:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    8094:	05010636 	streq	r0, [r1, #-1590]	; 0xfffff9ca
    8098:	5b052023 	blpl	15012c <_Min_Heap_Size+0x14f92c>
    809c:	2e67054a 	cdpcs	5, 6, cr0, cr7, cr10, {2}
    80a0:	2e2e0c05 	cdpcs	12, 2, cr0, cr14, cr5, {0}
    80a4:	01050104 	tsteq	r5, r4, lsl #2
    80a8:	0175c003 	cmneq	r5, r3
    80ac:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    80b0:	001c0104 	andseq	r0, ip, r4, lsl #2
    80b4:	3c010402 	cfstrscc	mvf0, [r1], {2}
    80b8:	0b050204 	bleq	1488d0 <_Min_Heap_Size+0x1480d0>
    80bc:	3c0ac803 	stccc	8, cr12, [sl], {3}
    80c0:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    80c4:	75bb030a 	ldrvc	r0, [fp, #778]!	; 0x30a
    80c8:	00060201 	andeq	r0, r6, r1, lsl #4
    80cc:	01050101 	tsteq	r5, r1, lsl #2
    80d0:	00020500 	andeq	r0, r2, r0, lsl #10
    80d4:	03000000 	movweq	r0, #0
    80d8:	060103ce 	streq	r0, [r1], -lr, asr #7
    80dc:	06030501 	streq	r0, [r3], -r1, lsl #10
    80e0:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
    80e4:	062e0601 	strteq	r0, [lr], -r1, lsl #12
    80e8:	06060521 	streq	r0, [r6], -r1, lsr #10
    80ec:	06050501 	streq	r0, [r5], -r1, lsl #10
    80f0:	06130534 			; <UNDEFINED> instruction: 0x06130534
    80f4:	68010501 	stmdavs	r1, {r0, r8, sl}
    80f8:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    80fc:	77030204 	strvc	r0, [r3, -r4, lsl #4]
    8100:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    8104:	05053c02 	streq	r3, [r5, #-3074]	; 0xfffff3fe
    8108:	13053f06 	movwne	r3, #24326	; 0x5f06
    810c:	0a020106 	beq	8852c <_Min_Heap_Size+0x87d2c>
    8110:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8114:	02050001 	andeq	r0, r5, #1
    8118:	00000000 	andeq	r0, r0, r0
    811c:	0103e903 	tsteq	r3, r3, lsl #18
    8120:	00010216 	andeq	r0, r1, r6, lsl r2
    8124:	01050101 	tsteq	r5, r1, lsl #2
    8128:	00020500 	andeq	r0, r2, r0, lsl #10
    812c:	03000000 	movweq	r0, #0
    8130:	050103e0 	streq	r0, [r1, #-992]	; 0xfffffc20
    8134:	01052103 	tsteq	r5, r3, lsl #2
    8138:	01022f06 	tsteq	r2, r6, lsl #30
    813c:	8a010100 	bhi	48544 <_Min_Heap_Size+0x47d44>
    8140:	03000005 	movweq	r0, #5
    8144:	00020100 	andeq	r0, r2, r0, lsl #2
    8148:	fb010200 	blx	48952 <_Min_Heap_Size+0x48152>
    814c:	01000d0e 	tsteq	r0, lr, lsl #26
    8150:	00010101 	andeq	r0, r1, r1, lsl #2
    8154:	00010000 	andeq	r0, r1, r0
    8158:	2e2e0100 	sufcse	f0, f6, f0
    815c:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    8160:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    8164:	4d54532f 	ldclmi	3, cr5, [r4, #-188]	; 0xffffff44
    8168:	34463233 	strbcc	r3, [r6], #-563	; 0xfffffdcd
    816c:	485f7878 	ldmdami	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    8170:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 8178 <_Min_Heap_Size+0x7978>
    8174:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    8178:	72532f72 	subsvc	r2, r3, #456	; 0x1c8
    817c:	6f2f0063 	svcvs	0x002f0063
    8180:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
    8184:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    8188:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    818c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8190:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8194:	2e30312d 	rsfcssp	f3, f0, #5.0
    8198:	30322d33 	eorscc	r2, r2, r3, lsr sp
    819c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    81a0:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
    81a4:	6f6e2d6d 	svcvs	0x006e2d6d
    81a8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    81ac:	2f696261 	svccs	0x00696261
    81b0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    81b4:	2f656475 	svccs	0x00656475
    81b8:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    81bc:	00656e69 	rsbeq	r6, r5, r9, ror #28
    81c0:	74706f2f 	ldrbtvc	r6, [r0], #-3887	; 0xfffff0d1
    81c4:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    81c8:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    81cc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    81d0:	61652d65 	cmnvs	r5, r5, ror #26
    81d4:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    81d8:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    81dc:	31323032 	teqcc	r2, r2, lsr r0
    81e0:	2f30312e 	svccs	0x0030312e
    81e4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    81e8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    81ec:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    81f0:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
    81f4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    81f8:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    81fc:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    8200:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    8204:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    8208:	534d432f 	movtpl	r4, #54063	; 0xd32f
    820c:	492f5349 	stmdbmi	pc!, {r0, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    8210:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8214:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
    8218:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    821c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    8220:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    8224:	2f534953 	svccs	0x00534953
    8228:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
    822c:	532f6563 			; <UNDEFINED> instruction: 0x532f6563
    8230:	54532f54 	ldrbpl	r2, [r3], #-3924	; 0xfffff0ac
    8234:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    8238:	2f787834 	svccs	0x00787834
    823c:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    8240:	00656475 	rsbeq	r6, r5, r5, ror r4
    8244:	442f2e2e 	strtmi	r2, [pc], #-3630	; 824c <_Min_Heap_Size+0x7a4c>
    8248:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    824c:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    8250:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    8254:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    8258:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    825c:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    8260:	2f726576 	svccs	0x00726576
    8264:	00636e49 	rsbeq	r6, r3, r9, asr #28
    8268:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    826c:	2f65726f 	svccs	0x0065726f
    8270:	00636e49 	rsbeq	r6, r3, r9, asr #28
    8274:	6d747300 	ldclvs	3, cr7, [r4, #-0]
    8278:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    827c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    8280:	632e6c61 			; <UNDEFINED> instruction: 0x632e6c61
    8284:	00000100 	andeq	r0, r0, r0, lsl #2
    8288:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    828c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    8290:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    8294:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    8298:	00000200 	andeq	r0, r0, r0, lsl #4
    829c:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    82a0:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    82a4:	00030068 	andeq	r0, r3, r8, rrx
    82a8:	726f6300 	rsbvc	r6, pc, #0, 6
    82ac:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
    82b0:	00682e34 	rsbeq	r2, r8, r4, lsr lr
    82b4:	73000004 	movwvc	r0, #4
    82b8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    82bc:	35303466 	ldrcc	r3, [r0, #-1126]!	; 0xfffffb9a
    82c0:	682e7878 	stmdavs	lr!, {r3, r4, r5, r6, fp, ip, sp, lr}
    82c4:	00000500 	andeq	r0, r0, r0, lsl #10
    82c8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    82cc:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    82d0:	00682e78 	rsbeq	r2, r8, r8, ror lr
    82d4:	73000005 	movwvc	r0, #5
    82d8:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    82dc:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    82e0:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    82e4:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    82e8:	0600682e 	streq	r6, [r0], -lr, lsr #16
    82ec:	74730000 	ldrbtvc	r0, [r3], #-0
    82f0:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    82f4:	5f787834 	svcpl	0x00787834
    82f8:	2e6c6168 	powcsez	f6, f4, #0.0
    82fc:	00060068 	andeq	r0, r6, r8, rrx
    8300:	73797300 	cmnvc	r9, #0, 6
    8304:	5f6d6574 	svcpl	0x006d6574
    8308:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    830c:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    8310:	00682e78 	rsbeq	r2, r8, r8, ror lr
    8314:	73000005 	movwvc	r0, #5
    8318:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    831c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    8320:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    8324:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    8328:	00682e66 	rsbeq	r2, r8, r6, ror #28
    832c:	73000007 	movwvc	r0, #7
    8330:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    8334:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    8338:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    833c:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    8340:	2e786574 	mrccs	5, 3, r6, cr8, cr4, {3}
    8344:	00060068 	andeq	r0, r6, r8, rrx
    8348:	01050000 	mrseq	r0, (UNDEF: 5)
    834c:	00020500 	andeq	r0, r2, r0, lsl #10
    8350:	03000000 	movweq	r0, #0
    8354:	160101db 			; <UNDEFINED> instruction: 0x160101db
    8358:	01000102 	tsteq	r0, r2, lsl #2
    835c:	00010501 	andeq	r0, r1, r1, lsl #10
    8360:	00000205 	andeq	r0, r0, r5, lsl #4
    8364:	e6030000 	str	r0, [r3], -r0
    8368:	02160101 	andseq	r0, r6, #1073741824	; 0x40000000
    836c:	01010001 	tsteq	r1, r1
    8370:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8374:	00000002 	andeq	r0, r0, r2
    8378:	01be0300 			; <UNDEFINED> instruction: 0x01be0300
    837c:	22030501 	andcs	r0, r3, #4194304	; 0x400000
    8380:	222f303d 	eorcs	r3, pc, #61	; 0x3d
    8384:	222f222f 	eorcs	r2, pc, #-268435454	; 0xf0000002
    8388:	0531232f 	ldreq	r2, [r1, #-815]!	; 0xfffffcd1
    838c:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    8390:	0101000a 	tsteq	r1, sl
    8394:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8398:	0015c002 	andseq	ip, r5, r2
    839c:	01fd0308 	mvnseq	r0, r8, lsl #6
    83a0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    83a4:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    83a8:	2e010633 	mcrcs	6, 0, r0, cr1, cr3, {1}
    83ac:	054a0705 	strbeq	r0, [sl, #-1797]	; 0xfffff8fb
    83b0:	03056606 	movweq	r6, #22022	; 0x5606
    83b4:	06052606 	streq	r2, [r5], -r6, lsl #12
    83b8:	0c050106 	stfeqs	f0, [r5], {6}
    83bc:	06050535 			; <UNDEFINED> instruction: 0x06050535
    83c0:	10056729 	andne	r6, r5, r9, lsr #14
    83c4:	03050106 	movweq	r0, #20742	; 0x5106
    83c8:	0a053606 	beq	155be8 <_Min_Heap_Size+0x1553e8>
    83cc:	0c050106 	stfeqs	f0, [r5], {6}
    83d0:	052e7103 	streq	r7, [lr, #-259]!	; 0xfffffefd
    83d4:	20100301 	andscs	r0, r0, r1, lsl #6
    83d8:	00070220 	andeq	r0, r7, r0, lsr #4
    83dc:	01050101 	tsteq	r5, r1, lsl #2
    83e0:	0c020500 	cfstr32eq	mvfx0, [r2], {-0}
    83e4:	03080016 	movweq	r0, #32790	; 0x8016
    83e8:	0501019d 	streq	r0, [r1, #-413]	; 0xfffffe63
    83ec:	4e5c2303 	cdpmi	3, 5, cr2, cr12, cr3, {0}
    83f0:	313f3f4e 	teqcc	pc, lr, asr #30
    83f4:	13060105 	movwne	r0, #24837	; 0x6105
    83f8:	01000402 	tsteq	r0, r2, lsl #8
    83fc:	00010501 	andeq	r0, r1, r1, lsl #10
    8400:	16400205 	strbne	r0, [r0], -r5, lsl #4
    8404:	b8030800 	stmdalt	r3, {fp}
    8408:	03050102 	movweq	r0, #20738	; 0x5102
    840c:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    8410:	67010501 	strvs	r0, [r1, -r1, lsl #10]
    8414:	01000602 	tsteq	r0, r2, lsl #12
    8418:	00010501 	andeq	r0, r1, r1, lsl #10
    841c:	16580205 	ldrbne	r0, [r8], -r5, lsl #4
    8420:	c3030800 	movwgt	r0, #14336	; 0x3800
    8424:	03050102 	movweq	r0, #20738	; 0x5102
    8428:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    842c:	2f010501 	svccs	0x00010501
    8430:	01000402 	tsteq	r0, r2, lsl #8
    8434:	00010501 	andeq	r0, r1, r1, lsl #10
    8438:	00000205 	andeq	r0, r0, r5, lsl #4
    843c:	cc030000 	stcgt	0, cr0, [r3], {-0}
    8440:	03050102 	movweq	r0, #20738	; 0x5102
    8444:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8448:	00060213 	andeq	r0, r6, r3, lsl r2
    844c:	01050101 	tsteq	r5, r1, lsl #2
    8450:	00020500 	andeq	r0, r2, r0, lsl #10
    8454:	03000000 	movweq	r0, #0
    8458:	060102d5 			; <UNDEFINED> instruction: 0x060102d5
    845c:	06030501 	streq	r0, [r3], -r1, lsl #10
    8460:	0014132f 	andseq	r1, r4, pc, lsr #6
    8464:	06010402 	streq	r0, [r1], -r2, lsl #8
    8468:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    846c:	30062e02 	andcc	r2, r6, r2, lsl #28
    8470:	01061205 	tsteq	r6, r5, lsl #4
    8474:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
    8478:	03052915 	movweq	r2, #22805	; 0x5915
    847c:	20170306 	andscs	r0, r7, r6, lsl #6
    8480:	13060105 	movwne	r0, #24837	; 0x6105
    8484:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
    8488:	6b030304 	blvs	c90a0 <_Min_Heap_Size+0xc88a0>
    848c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    8490:	05053c03 	streq	r3, [r5, #-3075]	; 0xfffff3fd
    8494:	05154106 	ldreq	r4, [r5, #-262]	; 0xfffffefa
    8498:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    849c:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    84a0:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    84a4:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
    84a8:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    84ac:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
    84b0:	02010612 	andeq	r0, r1, #18874368	; 0x1200000
    84b4:	01010009 	tsteq	r1, r9
    84b8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    84bc:	00000002 	andeq	r0, r0, r2
    84c0:	02f60300 	rscseq	r0, r6, #0, 6
    84c4:	13030501 	movwne	r0, #13569	; 0x3501
    84c8:	13060105 	movwne	r0, #24837	; 0x6105
    84cc:	01000602 	tsteq	r0, r2, lsl #12
    84d0:	00010501 	andeq	r0, r1, r1, lsl #10
    84d4:	16640205 	strbtne	r0, [r4], -r5, lsl #4
    84d8:	86030800 	strhi	r0, [r3], -r0, lsl #16
    84dc:	01060103 	tsteq	r6, r3, lsl #2
    84e0:	2f060305 	svccs	0x00060305
    84e4:	01061805 	tsteq	r6, r5, lsl #16
    84e8:	0603052e 	streq	r0, [r3], -lr, lsr #10
    84ec:	06051521 	streq	r1, [r5], -r1, lsr #10
    84f0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    84f4:	0d053e06 	stceq	14, cr3, [r5, #-24]	; 0xffffffe8
    84f8:	0a050106 	beq	148918 <_Min_Heap_Size+0x148118>
    84fc:	0003052e 	andeq	r0, r3, lr, lsr #10
    8500:	06010402 	streq	r0, [r1], -r2, lsl #8
    8504:	00080525 	andeq	r0, r8, r5, lsr #10
    8508:	10010402 	andne	r0, r1, r2, lsl #8
    850c:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    8510:	01060104 	tsteq	r6, r4, lsl #2
    8514:	02001805 	andeq	r1, r0, #327680	; 0x50000
    8518:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    851c:	04020008 	streq	r0, [r2], #-8
    8520:	01052001 	tsteq	r5, r1
    8524:	03022031 	movweq	r2, #8241	; 0x2031
    8528:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    852c:	02050001 	andeq	r0, r5, #1
    8530:	00000000 	andeq	r0, r0, r0
    8534:	0103a003 	tsteq	r3, r3
    8538:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    853c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    8540:	01026701 	tsteq	r2, r1, lsl #14
    8544:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8548:	02050001 	andeq	r0, r5, #1
    854c:	00000000 	andeq	r0, r0, r0
    8550:	0103b003 	tsteq	r3, r3
    8554:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    8558:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    855c:	01026701 	tsteq	r2, r1, lsl #14
    8560:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8564:	02050001 	andeq	r0, r5, #1
    8568:	00000000 	andeq	r0, r0, r0
    856c:	0103ba03 	tsteq	r3, r3, lsl #20
    8570:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8574:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    8578:	01010004 	tsteq	r1, r4
    857c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    8580:	00000002 	andeq	r0, r0, r2
    8584:	03c30300 	biceq	r0, r3, #0, 6
    8588:	13030501 	movwne	r0, #13569	; 0x3501
    858c:	01061105 	tsteq	r6, r5, lsl #2
    8590:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    8594:	01010004 	tsteq	r1, r4
    8598:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    859c:	00000002 	andeq	r0, r0, r2
    85a0:	03cc0300 	biceq	r0, ip, #0, 6
    85a4:	13030501 	movwne	r0, #13569	; 0x3501
    85a8:	01061105 	tsteq	r6, r5, lsl #2
    85ac:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    85b0:	01010006 	tsteq	r1, r6
    85b4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    85b8:	00000002 	andeq	r0, r0, r2
    85bc:	03d50300 	bicseq	r0, r5, #0, 6
    85c0:	13030501 	movwne	r0, #13569	; 0x3501
    85c4:	59060105 	stmdbpl	r6, {r0, r2, r8}
    85c8:	01000302 	tsteq	r0, r2, lsl #6
    85cc:	00010501 	andeq	r0, r1, r1, lsl #10
    85d0:	00000205 	andeq	r0, r0, r5, lsl #4
    85d4:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    85d8:	03050103 	movweq	r0, #20739	; 0x5103
    85dc:	06010513 			; <UNDEFINED> instruction: 0x06010513
    85e0:	00030259 	andeq	r0, r3, r9, asr r2
    85e4:	01050101 	tsteq	r5, r1, lsl #2
    85e8:	00020500 	andeq	r0, r2, r0, lsl #10
    85ec:	03000000 	movweq	r0, #0
    85f0:	050103e7 	streq	r0, [r1, #-999]	; 0xfffffc19
    85f4:	01051303 	tsteq	r5, r3, lsl #6
    85f8:	03025906 	movweq	r5, #10502	; 0x2906
    85fc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8600:	02050001 	andeq	r0, r5, #1
    8604:	00000000 	andeq	r0, r0, r0
    8608:	0103f003 	tsteq	r3, r3	; <UNPREDICTABLE>
    860c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    8610:	02590601 	subseq	r0, r9, #1048576	; 0x100000
    8614:	01010003 	tsteq	r1, r3
    8618:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    861c:	00000002 	andeq	r0, r0, r2
    8620:	03f90300 	mvnseq	r0, #0, 6
    8624:	13030501 	movwne	r0, #13569	; 0x3501
    8628:	59060105 	stmdbpl	r6, {r0, r2, r8}
    862c:	01000302 	tsteq	r0, r2, lsl #6
    8630:	00010501 	andeq	r0, r1, r1, lsl #10
    8634:	00000205 	andeq	r0, r0, r5, lsl #4
    8638:	82030000 	andhi	r0, r3, #0
    863c:	03050104 	movweq	r0, #20740	; 0x5104
    8640:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8644:	00030259 	andeq	r0, r3, r9, asr r2
    8648:	01050101 	tsteq	r5, r1, lsl #2
    864c:	00020500 	andeq	r0, r2, r0, lsl #10
    8650:	03000000 	movweq	r0, #0
    8654:	0501048d 	streq	r0, [r1, #-1165]	; 0xfffffb73
    8658:	25051303 	strcs	r1, [r5, #-771]	; 0xfffffcfd
    865c:	01050106 	tsteq	r5, r6, lsl #2
    8660:	0004024b 	andeq	r0, r4, fp, asr #4
    8664:	01050101 	tsteq	r5, r1, lsl #2
    8668:	00020500 	andeq	r0, r2, r0, lsl #10
    866c:	03000000 	movweq	r0, #0
    8670:	05010498 	streq	r0, [r1, #-1176]	; 0xfffffb68
    8674:	25051303 	strcs	r1, [r5, #-771]	; 0xfffffcfd
    8678:	01050106 	tsteq	r5, r6, lsl #2
    867c:	0004024b 	andeq	r0, r4, fp, asr #4
    8680:	01050101 	tsteq	r5, r1, lsl #2
    8684:	00020500 	andeq	r0, r2, r0, lsl #10
    8688:	03000000 	movweq	r0, #0
    868c:	050104a1 	streq	r0, [r1, #-1185]	; 0xfffffb5f
    8690:	01051303 	tsteq	r5, r3, lsl #6
    8694:	06021306 	streq	r1, [r2], -r6, lsl #6
    8698:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    869c:	02050001 	andeq	r0, r5, #1
    86a0:	00000000 	andeq	r0, r0, r0
    86a4:	0104aa03 	tsteq	r4, r3, lsl #20
    86a8:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    86ac:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    86b0:	01010006 	tsteq	r1, r6
    86b4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    86b8:	00000002 	andeq	r0, r0, r2
    86bc:	04b30300 	ldrteq	r0, [r3], #768	; 0x300
    86c0:	13030501 	movwne	r0, #13569	; 0x3501
    86c4:	13060105 	movwne	r0, #24837	; 0x6105
    86c8:	01000602 	tsteq	r0, r2, lsl #12
    86cc:	00023701 	andeq	r3, r2, r1, lsl #14
    86d0:	51000300 	mrspl	r0, LR_irq
    86d4:	02000001 	andeq	r0, r0, #1
    86d8:	0d0efb01 	vstreq	d15, [lr, #-4]
    86dc:	01010100 	mrseq	r0, (UNDEF: 17)
    86e0:	00000001 	andeq	r0, r0, r1
    86e4:	01000001 	tsteq	r0, r1
    86e8:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    86ec:	2f65726f 	svccs	0x0065726f
    86f0:	00637253 	rsbeq	r7, r3, r3, asr r2
    86f4:	74706f2f 	ldrbtvc	r6, [r0], #-3887	; 0xfffff0d1
    86f8:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    86fc:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    8700:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8704:	61652d65 	cmnvs	r5, r5, ror #26
    8708:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    870c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    8710:	31323032 	teqcc	r2, r2, lsr r0
    8714:	2f30312e 	svccs	0x0030312e
    8718:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    871c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8720:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8724:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
    8728:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    872c:	616d2f65 	cmnvs	sp, r5, ror #30
    8730:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    8734:	6f2f0065 	svcvs	0x002f0065
    8738:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
    873c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    8740:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8744:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8748:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    874c:	2e30312d 	rsfcssp	f3, f0, #5.0
    8750:	30322d33 	eorscc	r2, r2, r3, lsr sp
    8754:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    8758:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
    875c:	6f6e2d6d 	svcvs	0x006e2d6d
    8760:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8764:	2f696261 	svccs	0x00696261
    8768:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    876c:	2f656475 	svccs	0x00656475
    8770:	00737973 	rsbseq	r7, r3, r3, ror r9
    8774:	442f2e2e 	strtmi	r2, [pc], #-3630	; 877c <_Min_Heap_Size+0x7f7c>
    8778:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    877c:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    8780:	5349534d 	movtpl	r5, #37709	; 0x934d
    8784:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    8788:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    878c:	2f2e2e00 	svccs	0x002e2e00
    8790:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    8794:	2f737265 	svccs	0x00737265
    8798:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
    879c:	65442f53 	strbvs	r2, [r4, #-3923]	; 0xfffff0ad
    87a0:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
    87a4:	2f54532f 	svccs	0x0054532f
    87a8:	334d5453 	movtcc	r5, #54355	; 0xd453
    87ac:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    87b0:	6e492f78 	mcrvs	15, 2, r2, cr9, cr8, {3}
    87b4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    87b8:	73000065 	movwvc	r0, #101	; 0x65
    87bc:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    87c0:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    87c4:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    87c8:	2e787834 	mrccs	8, 3, r7, cr8, cr4, {1}
    87cc:	00010063 	andeq	r0, r1, r3, rrx
    87d0:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    87d4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    87d8:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    87dc:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    87e0:	00020068 	andeq	r0, r2, r8, rrx
    87e4:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    87e8:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    87ec:	0300682e 	movweq	r6, #2094	; 0x82e
    87f0:	6f630000 	svcvs	0x00630000
    87f4:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    87f8:	682e346d 	stmdavs	lr!, {r0, r2, r3, r5, r6, sl, ip, sp}
    87fc:	00000400 	andeq	r0, r0, r0, lsl #8
    8800:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    8804:	735f6d65 	cmpvc	pc, #6464	; 0x1940
    8808:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    880c:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    8810:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    8814:	74730000 	ldrbtvc	r0, [r3], #-0
    8818:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    881c:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    8820:	00682e78 	rsbeq	r2, r8, r8, ror lr
    8824:	00000005 	andeq	r0, r0, r5
    8828:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    882c:	00168c02 	andseq	r8, r6, r2, lsl #24
    8830:	01a70308 			; <UNDEFINED> instruction: 0x01a70308
    8834:	15050501 	strne	r0, [r5, #-1281]	; 0xfffffaff
    8838:	01061005 	tsteq	r6, r5
    883c:	0b030105 	bleq	c8c58 <_Min_Heap_Size+0xc8458>
    8840:	00030274 	andeq	r0, r3, r4, ror r2
    8844:	01050101 	tsteq	r5, r1, lsl #2
    8848:	00020500 	andeq	r0, r2, r0, lsl #10
    884c:	03000000 	movweq	r0, #0
    8850:	050101dc 	streq	r0, [r1, #-476]	; 0xfffffe24
    8854:	05151303 	ldreq	r1, [r5, #-771]	; 0xfffffcfd
    8858:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    885c:	03052e07 	movweq	r2, #24071	; 0x5e07
    8860:	07053006 	streq	r3, [r5, -r6]
    8864:	05581f03 	ldrbeq	r1, [r8, #-3843]	; 0xfffff0fd
    8868:	20010617 	andcs	r0, r1, r7, lsl r6
    886c:	2f060705 	svccs	0x00060705
    8870:	05206303 	streq	r6, [r0, #-771]!	; 0xfffffcfd
    8874:	20010617 	andcs	r0, r1, r7, lsl r6
    8878:	2f060705 	svccs	0x00060705
    887c:	20030305 	andcs	r0, r3, r5, lsl #6
    8880:	061c0501 	ldreq	r0, [ip], -r1, lsl #10
    8884:	2e340501 	cdpcs	5, 3, cr0, cr4, cr1, {0}
    8888:	052e1605 	streq	r1, [lr, #-1541]!	; 0xfffff9fb
    888c:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
    8890:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    8894:	07054b01 	streq	r4, [r5, -r1, lsl #22]
    8898:	205f0306 	subscs	r0, pc, r6, lsl #6
    889c:	01061705 	tsteq	r6, r5, lsl #14
    88a0:	06070520 	streq	r0, [r7], -r0, lsr #10
    88a4:	1705262f 	strne	r2, [r5, -pc, lsr #12]
    88a8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    88ac:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
    88b0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    88b4:	0705200c 	streq	r2, [r5, -ip]
    88b8:	0a053006 	beq	1548d8 <_Min_Heap_Size+0x1540d8>
    88bc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    88c0:	1d053f06 	stcne	15, cr3, [r5, #-24]	; 0xffffffe8
    88c4:	2c050106 	stfcss	f0, [r5], {6}
    88c8:	4a05203c 	bmi	1509c0 <_Min_Heap_Size+0x1501c0>
    88cc:	2e100520 	cfmul64cs	mvdx0, mvdx0, mvdx0
    88d0:	36060705 	strcc	r0, [r6], -r5, lsl #14
    88d4:	01061405 	tsteq	r6, r5, lsl #8
    88d8:	052e3205 	streq	r3, [lr, #-517]!	; 0xfffffdfb
    88dc:	0c052e38 	stceq	14, cr2, [r5], {56}	; 0x38
    88e0:	06070520 	streq	r0, [r7], -r0, lsr #10
    88e4:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    88e8:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    88ec:	06070520 	streq	r0, [r7], -r0, lsr #10
    88f0:	1b090521 	blne	249d7c <_Min_Heap_Size+0x24957c>
    88f4:	01061d05 	tsteq	r6, r5, lsl #26
    88f8:	203c2c05 	eorscs	r2, ip, r5, lsl #24
    88fc:	05204a05 	streq	r4, [r0, #-2565]!	; 0xfffff5fb
    8900:	022e2e10 	eoreq	r2, lr, #16, 28	; 0x100
    8904:	0101000c 	tsteq	r1, ip
    8908:	0000052f 	andeq	r0, r0, pc, lsr #10
    890c:	01e60003 	mvneq	r0, r3
    8910:	01020000 	mrseq	r0, (UNDEF: 2)
    8914:	000d0efb 	strdeq	r0, [sp], -fp
    8918:	01010101 	tsteq	r1, r1, lsl #2
    891c:	01000000 	mrseq	r0, (UNDEF: 0)
    8920:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    8924:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8928:	2f2e2e2f 	svccs	0x002e2e2f
    892c:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    8930:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    8934:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    8938:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    893c:	2f706d75 	svccs	0x00706d75
    8940:	00637273 	rsbeq	r7, r3, r3, ror r2
    8944:	442f2e2e 	strtmi	r2, [pc], #-3630	; 894c <_Min_Heap_Size+0x814c>
    8948:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    894c:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
    8950:	5349534d 	movtpl	r5, #37709	; 0x934d
    8954:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    8958:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    895c:	706f2f00 	rsbvc	r2, pc, r0, lsl #30
    8960:	63672f74 	cmnvs	r7, #116, 30	; 0x1d0
    8964:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    8968:	6f6e2d6d 	svcvs	0x006e2d6d
    896c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8970:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    8974:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    8978:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    897c:	30312e31 	eorscc	r2, r1, r1, lsr lr
    8980:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    8984:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8988:	61652d65 	cmnvs	r5, r5, ror #26
    898c:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    8990:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8994:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; 880c <_Min_Heap_Size+0x800c>
    8998:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    899c:	2f00656e 	svccs	0x0000656e
    89a0:	2f74706f 	svccs	0x0074706f
    89a4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    89a8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    89ac:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    89b0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    89b4:	30312d69 	eorscc	r2, r1, r9, ror #26
    89b8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    89bc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    89c0:	6c2f3031 	stcvs	0, cr3, [pc], #-196	; 8904 <_Min_Heap_Size+0x8104>
    89c4:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
    89c8:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
    89cc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    89d0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    89d4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    89d8:	2e30312f 	rsfcssp	f3, f0, #10.0
    89dc:	2f312e33 	svccs	0x00312e33
    89e0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    89e4:	00656475 	rsbeq	r6, r5, r5, ror r4
    89e8:	74706f2f 	ldrbtvc	r6, [r0], #-3887	; 0xfffff0d1
    89ec:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    89f0:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    89f4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    89f8:	61652d65 	cmnvs	r5, r5, ror #26
    89fc:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    8a00:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    8a04:	31323032 	teqcc	r2, r2, lsr r0
    8a08:	2f30312e 	svccs	0x0030312e
    8a0c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8a10:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8a14:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8a18:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
    8a1c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    8a20:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    8a24:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    8a28:	2f2e2e2f 	svccs	0x002e2e2f
    8a2c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 897c <_Min_Heap_Size+0x817c>
    8a30:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    8a34:	2f736c69 	svccs	0x00736c69
    8a38:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    8a3c:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    8a40:	692f706d 	stmdbvs	pc!, {r0, r2, r3, r5, r6, ip, sp, lr}	; <UNPREDICTABLE>
    8a44:	2f00636e 	svccs	0x0000636e
    8a48:	2f74706f 	svccs	0x0074706f
    8a4c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8a50:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8a54:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8a58:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8a5c:	30312d69 	eorscc	r2, r1, r9, ror #26
    8a60:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    8a64:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8a68:	612f3031 			; <UNDEFINED> instruction: 0x612f3031
    8a6c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8a70:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8a74:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8a78:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    8a7c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8a80:	61660000 	cmnvs	r6, r0
    8a84:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    8a88:	706d7564 	rsbvc	r7, sp, r4, ror #10
    8a8c:	0100632e 	tsteq	r0, lr, lsr #6
    8a90:	6d630000 	stclvs	0, cr0, [r3, #-0]
    8a94:	5f736973 	svcpl	0x00736973
    8a98:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
    8a9c:	00020068 	andeq	r0, r2, r8, rrx
    8aa0:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    8aa4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    8aa8:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    8aac:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    8ab0:	00030068 	andeq	r0, r3, r8, rrx
    8ab4:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    8ab8:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    8abc:	00040068 	andeq	r0, r4, r8, rrx
    8ac0:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    8ac4:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    8ac8:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    8acc:	61660000 	cmnvs	r6, r0
    8ad0:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    8ad4:	706d7564 	rsbvc	r7, sp, r4, ror #10
    8ad8:	0600682e 	streq	r6, [r0], -lr, lsr #16
    8adc:	74730000 	ldrbtvc	r0, [r3], #-0
    8ae0:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
    8ae4:	00070068 	andeq	r0, r7, r8, rrx
    8ae8:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
    8aec:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
    8af0:	003e6e69 	eorseq	r6, lr, r9, ror #28
    8af4:	00000000 	andeq	r0, r0, r0
    8af8:	05003805 	streq	r3, [r0, #-2053]	; 0xfffff7fb
    8afc:	0016a002 	andseq	sl, r6, r2
    8b00:	00fe0308 	rscseq	r0, lr, r8, lsl #6
    8b04:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8b08:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    8b0c:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    8b10:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    8b14:	05010a05 	streq	r0, [r1, #-2565]	; 0xfffff5fb
    8b18:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
    8b1c:	04020009 	streq	r0, [r2], #-9
    8b20:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    8b24:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    8b28:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    8b2c:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    8b30:	3d052e03 	stccc	14, cr2, [r5, #-12]
    8b34:	03040200 	movweq	r0, #16896	; 0x4200
    8b38:	3e055706 	cdpcc	7, 0, cr5, cr5, cr6, {0}
    8b3c:	03040200 	movweq	r0, #16896	; 0x4200
    8b40:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    8b44:	01040200 	mrseq	r0, R12_usr
    8b48:	05052006 	streq	r2, [r5, #-6]
    8b4c:	01040200 	mrseq	r0, R12_usr
    8b50:	31060106 	tstcc	r6, r6, lsl #2
    8b54:	01062205 	tsteq	r6, r5, lsl #4
    8b58:	0605052f 	streq	r0, [r5], -pc, lsr #10
    8b5c:	0601052f 	streq	r0, [r1], -pc, lsr #10
    8b60:	02022e13 	andeq	r2, r2, #304	; 0x130
    8b64:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8b68:	02050033 	andeq	r0, r5, #51	; 0x33
    8b6c:	080016cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip}
    8b70:	01018903 	tsteq	r1, r3, lsl #18
    8b74:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    8b78:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    8b7c:	052f0605 	streq	r0, [pc, #-1541]!	; 857f <_Min_Heap_Size+0x7d7f>
    8b80:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    8b84:	0505200e 	streq	r2, [r5, #-14]
    8b88:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
    8b8c:	26050106 	strcs	r0, [r5], -r6, lsl #2
    8b90:	01040200 	mrseq	r0, R12_usr
    8b94:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    8b98:	0608053f 			; <UNDEFINED> instruction: 0x0608053f
    8b9c:	00260501 	eoreq	r0, r6, r1, lsl #10
    8ba0:	3c010402 	cfstrscc	mvf0, [r1], {2}
    8ba4:	203f0c05 	eorscs	r0, pc, r5, lsl #24
    8ba8:	201b1005 	andscs	r1, fp, r5
    8bac:	20232020 	eorcs	r2, r3, r0, lsr #32
    8bb0:	23010520 	movwcs	r0, #5408	; 0x1520
    8bb4:	01000102 	tsteq	r0, r2, lsl #2
    8bb8:	00360501 	eorseq	r0, r6, r1, lsl #10
    8bbc:	17040205 	strne	r0, [r4, -r5, lsl #4]
    8bc0:	98030800 	stmdals	r3, {fp}
    8bc4:	01060101 	tsteq	r6, r1, lsl #2
    8bc8:	2f060505 	svccs	0x00060505
    8bcc:	30062e06 	andcc	r2, r6, r6, lsl #28
    8bd0:	06010513 			; <UNDEFINED> instruction: 0x06010513
    8bd4:	0202203e 	andeq	r2, r2, #62	; 0x3e
    8bd8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    8bdc:	0205001c 	andeq	r0, r5, #28
    8be0:	0800171c 	stmdaeq	r0, {r2, r3, r4, r8, r9, sl, ip}
    8be4:	0100f303 	tsteq	r0, r3, lsl #6	; <UNPREDICTABLE>
    8be8:	05210505 	streq	r0, [r1, #-1285]!	; 0xfffffafb
    8bec:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    8bf0:	05052018 	streq	r2, [r5, #-24]	; 0xffffffe8
    8bf4:	1a052f06 	bne	154814 <_Min_Heap_Size+0x154014>
    8bf8:	18050106 	stmdane	r5, {r1, r2, r8}
    8bfc:	06050520 	streq	r0, [r5], -r0, lsr #10
    8c00:	05684c2f 	strbeq	r4, [r8, #-3119]!	; 0xfffff3d1
    8c04:	024c0601 	subeq	r0, ip, #1048576	; 0x100000
    8c08:	01010013 	tsteq	r1, r3, lsl r0
    8c0c:	05007305 	streq	r7, [r0, #-773]	; 0xfffffcfb
    8c10:	00176c02 	andseq	r6, r7, r2, lsl #24
    8c14:	01db0308 	bicseq	r0, fp, r8, lsl #6
    8c18:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8c1c:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    8c20:	06080513 			; <UNDEFINED> instruction: 0x06080513
    8c24:	001a0501 	andseq	r0, sl, r1, lsl #10
    8c28:	58010402 	stmdapl	r1, {r1, sl}
    8c2c:	23060505 	movwcs	r0, #25861	; 0x6505
    8c30:	01040200 	mrseq	r0, R12_usr
    8c34:	09052006 	stmdbeq	r5, {r1, r2, sp}
    8c38:	00050529 	andeq	r0, r5, r9, lsr #10
    8c3c:	06020402 	streq	r0, [r2], -r2, lsl #8
    8c40:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    8c44:	02002001 	andeq	r2, r0, #1
    8c48:	20060304 	andcs	r0, r6, r4, lsl #6
    8c4c:	30060905 	andcc	r0, r6, r5, lsl #18
    8c50:	01060c05 	tsteq	r6, r5, lsl #24
    8c54:	22060905 	andcs	r0, r6, #81920	; 0x14000
    8c58:	01061305 	tsteq	r6, r5, lsl #6
    8c5c:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    8c60:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    8c64:	26052e01 	strcs	r2, [r5], -r1, lsl #28
    8c68:	01040200 	mrseq	r0, R12_usr
    8c6c:	06090520 	streq	r0, [r9], -r0, lsr #10
    8c70:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    8c74:	06090501 	streq	r0, [r9], -r1, lsl #10
    8c78:	0c051440 	cfstrseq	mvf1, [r5], {64}	; 0x40
    8c7c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8c80:	0c053006 	stceq	0, cr3, [r5], {6}
    8c84:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8c88:	0e052406 	cdpeq	4, 0, cr2, cr5, cr6, {0}
    8c8c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    8c90:	0e053e06 	cdpeq	14, 0, cr3, cr5, cr6, {0}
    8c94:	0c050106 	stfeqs	f0, [r5], {6}
    8c98:	0609052e 	streq	r0, [r9], -lr, lsr #10
    8c9c:	06170532 			; <UNDEFINED> instruction: 0x06170532
    8ca0:	06090501 	streq	r0, [r9], -r1, lsl #10
    8ca4:	060f052f 	streq	r0, [pc], -pc, lsr #10
    8ca8:	06090501 	streq	r0, [r9], -r1, lsl #10
    8cac:	060c0521 	streq	r0, [ip], -r1, lsr #10
    8cb0:	33010501 	movwcc	r0, #5377	; 0x1501
    8cb4:	5a031005 	bpl	cccd0 <_Min_Heap_Size+0xcc4d0>
    8cb8:	583f3c3c 	ldmdapl	pc!, {r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
    8cbc:	01000602 	tsteq	r0, r2, lsl #12
    8cc0:	00430501 	subeq	r0, r3, r1, lsl #10
    8cc4:	17e80205 	strbne	r0, [r8, r5, lsl #4]!
    8cc8:	a0030800 	andge	r0, r3, r0, lsl #16
    8ccc:	01060101 	tsteq	r6, r1, lsl #2
    8cd0:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    8cd4:	14131313 	ldrne	r1, [r3], #-787	; 0xfffffced
    8cd8:	01061805 	tsteq	r6, r5, lsl #16
    8cdc:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    8ce0:	052f0605 	streq	r0, [pc, #-1541]!	; 86e3 <_Min_Heap_Size+0x7ee3>
    8ce4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    8ce8:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    8cec:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    8cf0:	16050106 	strne	r0, [r5], -r6, lsl #2
    8cf4:	06050520 	streq	r0, [r5], -r0, lsr #10
    8cf8:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    8cfc:	20160501 	andscs	r0, r6, r1, lsl #10
    8d00:	21060505 	tstcs	r6, r5, lsl #10
    8d04:	01061805 	tsteq	r6, r5, lsl #16
    8d08:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    8d0c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    8d10:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    8d14:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    8d18:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    8d1c:	16050106 	strne	r0, [r5], -r6, lsl #2
    8d20:	06050520 	streq	r0, [r5], -r0, lsr #10
    8d24:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    8d28:	20160501 	andscs	r0, r6, r1, lsl #10
    8d2c:	21060505 	tstcs	r6, r5, lsl #10
    8d30:	01061805 	tsteq	r6, r5, lsl #16
    8d34:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    8d38:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    8d3c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    8d40:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    8d44:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    8d48:	16050106 	strne	r0, [r5], -r6, lsl #2
    8d4c:	06050520 	streq	r0, [r5], -r0, lsr #10
    8d50:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    8d54:	20160501 	andscs	r0, r6, r1, lsl #10
    8d58:	21060505 	tstcs	r6, r5, lsl #10
    8d5c:	01061805 	tsteq	r6, r5, lsl #16
    8d60:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    8d64:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    8d68:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    8d6c:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    8d70:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    8d74:	16050106 	strne	r0, [r5], -r6, lsl #2
    8d78:	06050520 	streq	r0, [r5], -r0, lsr #10
    8d7c:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    8d80:	20160501 	andscs	r0, r6, r1, lsl #10
    8d84:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    8d88:	2f062e06 	svccs	0x00062e06
    8d8c:	4b4b3d3d 	blmi	12d8288 <_Min_Heap_Size+0x12d7a88>
    8d90:	4b4b4b4b 	blmi	12dbac4 <_Min_Heap_Size+0x12db2c4>
    8d94:	4b4b4b4b 	blmi	12dbac8 <_Min_Heap_Size+0x12db2c8>
    8d98:	4b4b4b4b 	blmi	12dbacc <_Min_Heap_Size+0x12db2cc>
    8d9c:	3e3d4b4b 	vsubcc.f64	d4, d13, d11
    8da0:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    8da4:	06050501 	streq	r0, [r5], -r1, lsl #10
    8da8:	06200686 	strteq	r0, [r0], -r6, lsl #13
    8dac:	10054b2f 	andne	r4, r5, pc, lsr #22
    8db0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    8db4:	00090520 	andeq	r0, r9, r0, lsr #10
    8db8:	06030402 	streq	r0, [r3], -r2, lsl #8
    8dbc:	00240521 	eoreq	r0, r4, r1, lsr #10
    8dc0:	65030402 	strvs	r0, [r3, #-1026]	; 0xfffffbfe
    8dc4:	02002905 	andeq	r2, r0, #81920	; 0x14000
    8dc8:	01060304 	tsteq	r6, r4, lsl #6
    8dcc:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    8dd0:	20060104 	andcs	r0, r6, r4, lsl #2
    8dd4:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    8dd8:	01060104 	tsteq	r6, r4, lsl #2
    8ddc:	02003106 	andeq	r3, r0, #-2147483647	; 0x80000001
    8de0:	053d0104 	ldreq	r0, [sp, #-260]!	; 0xfffffefc
    8de4:	0402000e 	streq	r0, [r2], #-14
    8de8:	0b050101 	bleq	1491f4 <_Min_Heap_Size+0x1489f4>
    8dec:	01040200 	mrseq	r0, R12_usr
    8df0:	00310201 	eorseq	r0, r1, r1, lsl #4
    8df4:	2e050101 	adfcss	f0, f5, f1
    8df8:	00020500 	andeq	r0, r2, r0, lsl #10
    8dfc:	03000000 	movweq	r0, #0
    8e00:	05010287 	streq	r0, [r1, #-647]	; 0xfffffd79
    8e04:	02041305 	andeq	r1, r4, #335544320	; 0x14000000
    8e08:	da031f05 	ble	d0a24 <_Min_Heap_Size+0xd0224>
    8e0c:	03050106 	movweq	r0, #20742	; 0x5106
    8e10:	062f1414 			; <UNDEFINED> instruction: 0x062f1414
    8e14:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    8e18:	79a20301 	stmibvc	r2!, {r0, r8, r9}
    8e1c:	00010201 	andeq	r0, r1, r1, lsl #4
    8e20:	2e050101 	adfcss	f0, f5, f1
    8e24:	00020500 	andeq	r0, r2, r0, lsl #10
    8e28:	03000000 	movweq	r0, #0
    8e2c:	0501028b 	streq	r0, [r1, #-651]	; 0xfffffd75
    8e30:	01051305 	tsteq	r5, r5, lsl #6
    8e34:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    8e38:	f1010100 	setend	le
    8e3c:	03000000 	movweq	r0, #0
    8e40:	0000a000 	andeq	sl, r0, r0
    8e44:	fb010200 	blx	4964e <_Min_Heap_Size+0x48e4e>
    8e48:	01000d0e 	tsteq	r0, lr, lsl #26
    8e4c:	00010101 	andeq	r0, r1, r1, lsl #2
    8e50:	00010000 	andeq	r0, r1, r0
    8e54:	2e2e0100 	sufcse	f0, f6, f0
    8e58:	2f2e2e2f 	svccs	0x002e2e2f
    8e5c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 8dac <_Min_Heap_Size+0x85ac>
    8e60:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    8e64:	2f736c69 	svccs	0x00736c69
    8e68:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    8e6c:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    8e70:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
    8e74:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
    8e78:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    8e7c:	346d2d78 	strbtcc	r2, [sp], #-3448	; 0xfffff288
    8e80:	706f2f00 	rsbvc	r2, pc, r0, lsl #30
    8e84:	63672f74 	cmnvs	r7, #116, 30	; 0x1d0
    8e88:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    8e8c:	6f6e2d6d 	svcvs	0x006e2d6d
    8e90:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8e94:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    8e98:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    8e9c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    8ea0:	30312e31 	eorscc	r2, r1, r1, lsr lr
    8ea4:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    8ea8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8eac:	61652d65 	cmnvs	r5, r5, ror #26
    8eb0:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    8eb4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8eb8:	00006564 	andeq	r6, r0, r4, ror #10
    8ebc:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    8ec0:	61682d74 	smcvs	33492	; 0x82d4
    8ec4:	00632e6c 	rsbeq	r2, r3, ip, ror #28
    8ec8:	3c000001 	stccc	0, cr0, [r0], {1}
    8ecc:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    8ed0:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
    8ed4:	0000003e 	andeq	r0, r0, lr, lsr r0
    8ed8:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    8edc:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    8ee0:	00000200 	andeq	r0, r0, r0, lsl #4
    8ee4:	00350500 	eorseq	r0, r5, r0, lsl #10
    8ee8:	196c0205 	stmdbne	ip!, {r0, r2, r9}^
    8eec:	0e030800 	cdpeq	8, 0, cr0, cr3, cr0, {0}
    8ef0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    8ef4:	062f0605 	strteq	r0, [pc], -r5, lsl #12
    8ef8:	3d2f0620 	stccc	6, cr0, [pc, #-128]!	; 8e80 <_Min_Heap_Size+0x8680>
    8efc:	01060805 	tsteq	r6, r5, lsl #16
    8f00:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    8f04:	3d400505 	cfstr64cc	mvdx0, [r0, #-20]	; 0xffffffec
    8f08:	01060805 	tsteq	r6, r5, lsl #16
    8f0c:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    8f10:	3d400505 	cfstr64cc	mvdx0, [r0, #-20]	; 0xffffffec
    8f14:	01060805 	tsteq	r6, r5, lsl #16
    8f18:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    8f1c:	05400505 	strbeq	r0, [r0, #-1285]	; 0xfffffafb
    8f20:	053d0601 	ldreq	r0, [sp, #-1537]!	; 0xfffff9ff
    8f24:	71030609 	tstvc	r3, r9, lsl #12
    8f28:	02505020 	subseq	r5, r0, #32
    8f2c:	01010018 	tsteq	r1, r8, lsl r0
    8f30:	00000350 	andeq	r0, r0, r0, asr r3
    8f34:	01430003 	cmpeq	r3, r3
    8f38:	01020000 	mrseq	r0, (UNDEF: 2)
    8f3c:	000d0efb 	strdeq	r0, [sp], -fp
    8f40:	01010101 	tsteq	r1, r1, lsl #2
    8f44:	01000000 	mrseq	r0, (UNDEF: 0)
    8f48:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    8f4c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    8f50:	2f2e2e2f 	svccs	0x002e2e2f
    8f54:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    8f58:	2f736f74 	svccs	0x00736f74
    8f5c:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    8f60:	534f5452 	movtpl	r5, #62546	; 0xf452
    8f64:	706f2f00 	rsbvc	r2, pc, r0, lsl #30
    8f68:	63672f74 	cmnvs	r7, #116, 30	; 0x1d0
    8f6c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    8f70:	6f6e2d6d 	svcvs	0x006e2d6d
    8f74:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    8f78:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    8f7c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    8f80:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    8f84:	30312e31 	eorscc	r2, r1, r1, lsr lr
    8f88:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    8f8c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    8f90:	61652d65 	cmnvs	r5, r5, ror #26
    8f94:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    8f98:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    8f9c:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; 8e14 <_Min_Heap_Size+0x8614>
    8fa0:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    8fa4:	2f00656e 	svccs	0x0000656e
    8fa8:	2f74706f 	svccs	0x0074706f
    8fac:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    8fb0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    8fb4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    8fb8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    8fbc:	30312d69 	eorscc	r2, r1, r9, ror #26
    8fc0:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    8fc4:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    8fc8:	612f3031 			; <UNDEFINED> instruction: 0x612f3031
    8fcc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    8fd0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    8fd4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    8fd8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    8fdc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    8fe0:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
    8fe4:	2f2e2e00 	svccs	0x002e2e00
    8fe8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    8fec:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    8ff0:	6f747262 	svcvs	0x00747262
    8ff4:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    8ff8:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    8ffc:	702f534f 	eorvc	r5, pc, pc, asr #6
    9000:	6174726f 	cmnvs	r4, pc, ror #4
    9004:	2f656c62 	svccs	0x00656c62
    9008:	2f434347 	svccs	0x00434347
    900c:	5f4d5241 	svcpl	0x004d5241
    9010:	46344d43 	ldrtmi	r4, [r4], -r3, asr #26
    9014:	2f2e2e00 	svccs	0x002e2e00
    9018:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    901c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    9020:	6f747262 	svcvs	0x00747262
    9024:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    9028:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    902c:	692f534f 	stmdbvs	pc!, {r0, r1, r2, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    9030:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    9034:	00006564 	andeq	r6, r0, r4, ror #10
    9038:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    903c:	0100632e 	tsteq	r0, lr, lsr #6
    9040:	645f0000 	ldrbvs	r0, [pc], #-0	; 9048 <_Min_Heap_Size+0x8848>
    9044:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    9048:	745f746c 	ldrbvc	r7, [pc], #-1132	; 9050 <_Min_Heap_Size+0x8850>
    904c:	73657079 	cmnvc	r5, #121	; 0x79
    9050:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    9054:	735f0000 	cmpvc	pc, #0
    9058:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    905c:	00682e74 	rsbeq	r2, r8, r4, ror lr
    9060:	70000003 	andvc	r0, r0, r3
    9064:	6d74726f 	lfmvs	f7, 2, [r4, #-444]!	; 0xfffffe44
    9068:	6f726361 	svcvs	0x00726361
    906c:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    9070:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    9074:	682e7473 	stmdavs	lr!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    9078:	00000500 	andeq	r0, r0, r0, lsl #10
    907c:	00010500 	andeq	r0, r1, r0, lsl #10
    9080:	19f40205 	ldmibne	r4!, {r0, r2, r9}^
    9084:	31030800 	tstcc	r3, r0, lsl #16
    9088:	13290501 			; <UNDEFINED> instruction: 0x13290501
    908c:	05170505 	ldreq	r0, [r7, #-1285]	; 0xfffffafb
    9090:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    9094:	4b052e15 	blmi	1548f0 <_Min_Heap_Size+0x1540f0>
    9098:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
    909c:	06210516 			; <UNDEFINED> instruction: 0x06210516
    90a0:	06050501 	streq	r0, [r5], -r1, lsl #10
    90a4:	061d0540 	ldreq	r0, [sp], -r0, asr #10
    90a8:	06050501 	streq	r0, [r5], -r1, lsl #10
    90ac:	06210521 	strteq	r0, [r1], -r1, lsr #10
    90b0:	06090501 	streq	r0, [r9], -r1, lsl #10
    90b4:	06220525 	strteq	r0, [r2], -r5, lsr #10
    90b8:	06090501 	streq	r0, [r9], -r1, lsl #10
    90bc:	0626052f 	strteq	r0, [r6], -pc, lsr #10
    90c0:	06500501 	ldrbeq	r0, [r0], -r1, lsl #10
    90c4:	16050521 	strne	r0, [r5], -r1, lsr #10
    90c8:	01061d05 	tsteq	r6, r5, lsl #26
    90cc:	24063305 	strcs	r3, [r6], #-773	; 0xfffffcfb
    90d0:	14220513 	strtne	r0, [r2], #-1299	; 0xfffffaed
    90d4:	13060105 	movwne	r0, #24837	; 0x6105
    90d8:	01000102 	tsteq	r0, r2, lsl #2
    90dc:	00010501 	andeq	r0, r1, r1, lsl #10
    90e0:	1a0e0205 	bne	3898fc <_Min_Heap_Size+0x3890fc>
    90e4:	d9030800 	stmdble	r3, {fp}
    90e8:	2d050100 	stfcss	f0, [r5, #-0]
    90ec:	15050513 	strne	r0, [r5, #-1299]	; 0xfffffaed
    90f0:	01061905 	tsteq	r6, r5, lsl #18
    90f4:	32063c05 	andcc	r3, r6, #1280	; 0x500
    90f8:	05133d05 	ldreq	r3, [r3, #-3333]	; 0xfffff2fb
    90fc:	01051426 	tsteq	r5, r6, lsr #8
    9100:	01021306 	tsteq	r2, r6, lsl #6
    9104:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    9108:	02050001 	andeq	r0, r5, #1
    910c:	00000000 	andeq	r0, r0, r0
    9110:	0100ea03 	tsteq	r0, r3, lsl #20
    9114:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    9118:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    911c:	05220637 	streq	r0, [r2, #-1591]!	; 0xfffff9c9
    9120:	32051726 	andcc	r1, r5, #9961472	; 0x980000
    9124:	17050513 	smladne	r5, r3, r5, r0
    9128:	01061b05 	tsteq	r6, r5, lsl #22
    912c:	21060505 	tstcs	r6, r5, lsl #10
    9130:	01062805 	tsteq	r6, r5, lsl #16
    9134:	05201f05 	streq	r1, [r0, #-3845]!	; 0xfffff0fb
    9138:	0523061c 	streq	r0, [r3, #-1564]!	; 0xfffff9e4
    913c:	21051405 	tstcs	r5, r5, lsl #8
    9140:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    9144:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    9148:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    914c:	20052306 	andcs	r2, r5, r6, lsl #6
    9150:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    9154:	3b052206 	blcc	151974 <_Min_Heap_Size+0x151174>
    9158:	23050106 	movwcs	r0, #20742	; 0x5106
    915c:	20210520 	eorcs	r0, r1, r0, lsr #10
    9160:	01052206 	tsteq	r5, r6, lsl #4
    9164:	01021306 	tsteq	r2, r6, lsl #6
    9168:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    916c:	02050001 	andeq	r0, r5, #1
    9170:	08001a14 	stmdaeq	r0, {r2, r4, r9, fp, ip}
    9174:	01018c03 	tsteq	r1, r3, lsl #24
    9178:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    917c:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
    9180:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    9184:	05220634 	streq	r0, [r2, #-1588]!	; 0xfffff9cc
    9188:	32051726 	andcc	r1, r5, #9961472	; 0x980000
    918c:	03050513 	movweq	r0, #21779	; 0x5513
    9190:	0705010a 	streq	r0, [r5, -sl, lsl #2]
    9194:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9198:	3c1f0306 	ldccc	3, cr0, [pc], {6}
    919c:	01061905 	tsteq	r6, r5, lsl #18
    91a0:	02004305 	andeq	r4, r0, #335544320	; 0x14000000
    91a4:	2e060104 	adfcss	f0, f6, f4
    91a8:	02004d05 	andeq	r4, r0, #320	; 0x140
    91ac:	20060104 	andcs	r0, r6, r4, lsl #2
    91b0:	02005505 	andeq	r5, r0, #20971520	; 0x1400000
    91b4:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    91b8:	04020009 	streq	r0, [r2], #-9
    91bc:	05052001 	streq	r2, [r5, #-1]
    91c0:	27053506 	strcs	r3, [r5, -r6, lsl #10]
    91c4:	1b050106 	blne	1495e4 <_Min_Heap_Size+0x148de4>
    91c8:	06050520 	streq	r0, [r5], -r0, lsr #10
    91cc:	06270521 	strteq	r0, [r7], -r1, lsr #10
    91d0:	06050501 	streq	r0, [r5], -r1, lsl #10
    91d4:	061f0521 	ldreq	r0, [pc], -r1, lsr #10
    91d8:	06050501 	streq	r0, [r5], -r1, lsl #10
    91dc:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    91e0:	06050501 	streq	r0, [r5], -r1, lsl #10
    91e4:	06200524 	strteq	r0, [r0], -r4, lsr #10
    91e8:	06050501 	streq	r0, [r5], -r1, lsl #10
    91ec:	063b0522 	ldrteq	r0, [fp], -r2, lsr #10
    91f0:	20230501 	eorcs	r0, r3, r1, lsl #10
    91f4:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    91f8:	0522061e 	streq	r0, [r2, #-1566]!	; 0xfffff9e2
    91fc:	20130601 	andscs	r0, r3, r1, lsl #12
    9200:	03060905 	movweq	r0, #26885	; 0x6905
    9204:	14052050 	strne	r2, [r5], #-80	; 0xffffffb0
    9208:	02200106 	eoreq	r0, r0, #-2147483647	; 0x80000001
    920c:	01010001 	tsteq	r1, r1
    9210:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    9214:	001a4602 	andseq	r4, sl, r2, lsl #12
    9218:	01d70308 	bicseq	r0, r7, r8, lsl #6
    921c:	15050501 	strne	r0, [r5, #-1281]	; 0xfffffaff
    9220:	01061405 	tsteq	r6, r5, lsl #8
    9224:	22062e05 	andcs	r2, r6, #5, 28	; 0x50
    9228:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    922c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    9230:	28052038 	stmdacs	r5, {r3, r4, r5, sp}
    9234:	06050520 	streq	r0, [r5], -r0, lsr #10
    9238:	06380521 	ldrteq	r0, [r8], -r1, lsr #10
    923c:	20280501 	eorcs	r0, r8, r1, lsl #10
    9240:	23061c05 	movwcs	r1, #27653	; 0x6c05
    9244:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    9248:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    924c:	21052007 	tstcs	r5, r7
    9250:	05053406 	streq	r3, [r5, #-1030]	; 0xfffffbfa
    9254:	06210515 			; <UNDEFINED> instruction: 0x06210515
    9258:	06050501 	streq	r0, [r5], -r1, lsl #10
    925c:	063b052f 	ldrteq	r0, [fp], -pc, lsr #10
    9260:	20230501 	eorcs	r0, r3, r1, lsl #10
    9264:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    9268:	05220638 	streq	r0, [r2, #-1592]!	; 0xfffff9c8
    926c:	01051405 	tsteq	r5, r5, lsl #8
    9270:	09051306 	stmdbeq	r5, {r1, r2, r8, r9, ip}
    9274:	20730306 	rsbscs	r0, r3, r6, lsl #6
    9278:	01062905 	tsteq	r6, r5, lsl #18
    927c:	02201905 	eoreq	r1, r0, #81920	; 0x14000
    9280:	01010002 	tsteq	r1, r2
    9284:	00001766 	andeq	r1, r0, r6, ror #14
    9288:	01d80003 	bicseq	r0, r8, r3
    928c:	01020000 	mrseq	r0, (UNDEF: 2)
    9290:	000d0efb 	strdeq	r0, [sp], -fp
    9294:	01010101 	tsteq	r1, r1, lsl #2
    9298:	01000000 	mrseq	r0, (UNDEF: 0)
    929c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    92a0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    92a4:	2f2e2e2f 	svccs	0x002e2e2f
    92a8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    92ac:	2f736f74 	svccs	0x00736f74
    92b0:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    92b4:	534f5452 	movtpl	r5, #62546	; 0xf452
    92b8:	2f2e2e00 	svccs	0x002e2e00
    92bc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    92c0:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    92c4:	6f747262 	svcvs	0x00747262
    92c8:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    92cc:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    92d0:	702f534f 	eorvc	r5, pc, pc, asr #6
    92d4:	6174726f 	cmnvs	r4, pc, ror #4
    92d8:	2f656c62 	svccs	0x00656c62
    92dc:	2f434347 	svccs	0x00434347
    92e0:	5f4d5241 	svcpl	0x004d5241
    92e4:	46344d43 	ldrtmi	r4, [r4], -r3, asr #26
    92e8:	706f2f00 	rsbvc	r2, pc, r0, lsl #30
    92ec:	63672f74 	cmnvs	r7, #116, 30	; 0x1d0
    92f0:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    92f4:	6f6e2d6d 	svcvs	0x006e2d6d
    92f8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    92fc:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    9300:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    9304:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    9308:	30312e31 	eorscc	r2, r1, r1, lsr lr
    930c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    9310:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    9314:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    9318:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    931c:	61652d65 	cmnvs	r5, r5, ror #26
    9320:	312f6962 			; <UNDEFINED> instruction: 0x312f6962
    9324:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    9328:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
    932c:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    9330:	6f2f0065 	svcvs	0x002f0065
    9334:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
    9338:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    933c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    9340:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    9344:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    9348:	2e30312d 	rsfcssp	f3, f0, #5.0
    934c:	30322d33 	eorscc	r2, r2, r3, lsr sp
    9350:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    9354:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
    9358:	6f6e2d6d 	svcvs	0x006e2d6d
    935c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    9360:	2f696261 	svccs	0x00696261
    9364:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    9368:	2f656475 	svccs	0x00656475
    936c:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    9370:	00656e69 	rsbeq	r6, r5, r9, ror #28
    9374:	74706f2f 	ldrbtvc	r6, [r0], #-3887	; 0xfffff0d1
    9378:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    937c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    9380:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    9384:	61652d65 	cmnvs	r5, r5, ror #26
    9388:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    938c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    9390:	31323032 	teqcc	r2, r2, lsr r0
    9394:	2f30312e 	svccs	0x0030312e
    9398:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    939c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    93a0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    93a4:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
    93a8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    93ac:	79732f65 	ldmdbvc	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
    93b0:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    93b4:	2f2e2e2f 	svccs	0x002e2e2f
    93b8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 9308 <_Min_Heap_Size+0x8b08>
    93bc:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    93c0:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    93c4:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    93c8:	2f534f54 	svccs	0x00534f54
    93cc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    93d0:	00656475 	rsbeq	r6, r5, r5, ror r4
    93d4:	65757100 	ldrbvs	r7, [r5, #-256]!	; 0xffffff00
    93d8:	632e6575 			; <UNDEFINED> instruction: 0x632e6575
    93dc:	00000100 	andeq	r0, r0, r0, lsl #2
    93e0:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    93e4:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    93e8:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    93ec:	73000002 	movwvc	r0, #2
    93f0:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    93f4:	00682e66 	rsbeq	r2, r8, r6, ror #28
    93f8:	5f000003 	svcpl	0x00000003
    93fc:	61666564 	cmnvs	r6, r4, ror #10
    9400:	5f746c75 	svcpl	0x00746c75
    9404:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    9408:	00682e73 	rsbeq	r2, r8, r3, ror lr
    940c:	5f000004 	svcpl	0x00000004
    9410:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    9414:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    9418:	00000500 	andeq	r0, r0, r0, lsl #10
    941c:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    9420:	534f5452 	movtpl	r5, #62546	; 0xf452
    9424:	0600682e 	streq	r6, [r0], -lr, lsr #16
    9428:	696c0000 	stmdbvs	ip!, {}^	; <UNPREDICTABLE>
    942c:	682e7473 	stmdavs	lr!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    9430:	00000600 	andeq	r0, r0, r0, lsl #12
    9434:	6b736174 	blvs	1ce1a0c <_Min_Heap_Size+0x1ce120c>
    9438:	0600682e 	streq	r6, [r0], -lr, lsr #16
    943c:	75710000 	ldrbvc	r0, [r1, #-0]!
    9440:	2e657565 	cdpcs	5, 6, cr7, cr5, cr5, {3}
    9444:	00060068 	andeq	r0, r6, r8, rrx
    9448:	726f7000 	rsbvc	r7, pc, #0
    944c:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    9450:	00682e65 	rsbeq	r2, r8, r5, ror #28
    9454:	3c000006 	stccc	0, cr0, [r0], {6}
    9458:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    945c:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
    9460:	0000003e 	andeq	r0, r0, lr, lsr r0
    9464:	05050000 	streq	r0, [r5, #-0]
    9468:	00020500 	andeq	r0, r2, r0, lsl #10
    946c:	03000000 	movweq	r0, #0
    9470:	060112bd 			; <UNDEFINED> instruction: 0x060112bd
    9474:	06090501 	streq	r0, [r9], -r1, lsl #10
    9478:	0d051a21 	vstreq	s2, [r5, #-132]	; 0xffffff7c
    947c:	0b050106 	bleq	14989c <_Min_Heap_Size+0x14909c>
    9480:	060d0520 	streq	r0, [sp], -r0, lsr #10
    9484:	06780522 	ldrbteq	r0, [r8], -r2, lsr #10
    9488:	2d052001 	stccs	0, cr2, [r5, #-4]
    948c:	06090520 	streq	r0, [r9], -r0, lsr #10
    9490:	06050535 			; <UNDEFINED> instruction: 0x06050535
    9494:	00010213 	andeq	r0, r1, r3, lsl r2
    9498:	01050101 	tsteq	r5, r1, lsl #2
    949c:	00020500 	andeq	r0, r2, r0, lsl #10
    94a0:	03000000 	movweq	r0, #0
    94a4:	060114e3 	streq	r1, [r1], -r3, ror #9
    94a8:	06050501 	streq	r0, [r5], -r1, lsl #10
    94ac:	0905142f 	stmdbeq	r5, {r0, r1, r2, r3, r5, sl, ip}
    94b0:	06140530 			; <UNDEFINED> instruction: 0x06140530
    94b4:	20320501 	eorscs	r0, r2, r1, lsl #10
    94b8:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    94bc:	05053415 	streq	r3, [r5, #-1045]	; 0xfffffbeb
    94c0:	05302306 	ldreq	r2, [r0, #-774]!	; 0xfffffcfa
    94c4:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    94c8:	2e760315 	mrccs	3, 3, r0, cr6, cr5, {0}
    94cc:	00010220 	andeq	r0, r1, r0, lsr #4
    94d0:	01050101 	tsteq	r5, r1, lsl #2
    94d4:	6a020500 	bvs	8a8dc <_Min_Heap_Size+0x8a0dc>
    94d8:	0308001a 	movweq	r0, #32794	; 0x801a
    94dc:	060114b6 			; <UNDEFINED> instruction: 0x060114b6
    94e0:	06050501 	streq	r0, [r5], -r1, lsl #10
    94e4:	0905142f 	stmdbeq	r5, {r0, r1, r2, r3, r5, sl, ip}
    94e8:	06140530 			; <UNDEFINED> instruction: 0x06140530
    94ec:	200b0501 	andcs	r0, fp, r1, lsl #10
    94f0:	05221505 	streq	r1, [r2, #-1285]!	; 0xfffffafb
    94f4:	30270605 	eorcc	r0, r7, r5, lsl #12
    94f8:	13060105 	movwne	r0, #24837	; 0x6105
    94fc:	7a031505 	bvc	ce918 <_Min_Heap_Size+0xce118>
    9500:	0102202e 	tsteq	r2, lr, lsr #32
    9504:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    9508:	02050001 	andeq	r0, r5, #1
    950c:	08001a84 	stmdaeq	r0, {r2, r7, r9, fp, ip}
    9510:	0112d803 	tsteq	r2, r3, lsl #16
    9514:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    9518:	16133d06 	ldrne	r3, [r3], -r6, lsl #26
    951c:	01061705 	tsteq	r6, r5, lsl #14
    9520:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    9524:	01061005 	tsteq	r6, r5
    9528:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    952c:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    9530:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    9534:	1005200f 	andne	r2, r5, pc
    9538:	05207503 	streq	r7, [r0, #-1283]!	; 0xfffffafd
    953c:	c5030625 	strgt	r0, [r3, #-1573]	; 0xfffff9db
    9540:	05052000 	streq	r2, [r5, #-0]
    9544:	06220516 			; <UNDEFINED> instruction: 0x06220516
    9548:	20200501 	eorcs	r0, r0, r1, lsl #10
    954c:	22060505 	andcs	r0, r6, #20971520	; 0x1400000
    9550:	13060105 	movwne	r0, #24837	; 0x6105
    9554:	03061105 	movweq	r1, #24837	; 0x6105
    9558:	1b052042 	blne	151668 <_Min_Heap_Size+0x150e68>
    955c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    9560:	052f0611 	streq	r0, [pc, #-1553]!	; 8f57 <_Min_Heap_Size+0x8757>
    9564:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    9568:	0903060a 	stmdbeq	r3, {r1, r3, r9, sl}
    956c:	060c053c 			; <UNDEFINED> instruction: 0x060c053c
    9570:	06090501 	streq	r0, [r9], -r1, lsl #10
    9574:	06120522 	ldreq	r0, [r2], -r2, lsr #10
    9578:	09052001 	stmdbeq	r5, {r0, sp}
    957c:	26052f06 	strcs	r2, [r5], -r6, lsl #30
    9580:	1c050106 	stfnes	f0, [r5], {6}
    9584:	06090520 	streq	r0, [r9], -r0, lsr #10
    9588:	0634053e 			; <UNDEFINED> instruction: 0x0634053e
    958c:	200b0501 	andcs	r0, fp, r1, lsl #10
    9590:	30060d05 	andcc	r0, r6, r5, lsl #26
    9594:	01062905 	tsteq	r6, r5, lsl #18
    9598:	05202005 	streq	r2, [r0, #-5]!
    959c:	20610310 	rsbcs	r0, r1, r0, lsl r3
    95a0:	03060905 	movweq	r0, #26885	; 0x6905
    95a4:	12052e28 	andne	r2, r5, #40, 28	; 0x280
    95a8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    95ac:	052f0609 	streq	r0, [pc, #-1545]!	; 8fab <_Min_Heap_Size+0x87ab>
    95b0:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    95b4:	09052026 	stmdbeq	r5, {r1, r2, r5, sp}
    95b8:	33054c06 	movwcc	r4, #23558	; 0x5c06
    95bc:	0b050106 	bleq	1499dc <_Min_Heap_Size+0x1491dc>
    95c0:	060d0520 	streq	r0, [sp], -r0, lsr #10
    95c4:	063f0530 			; <UNDEFINED> instruction: 0x063f0530
    95c8:	20470501 	subcs	r0, r7, r1, lsl #10
    95cc:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    95d0:	05240625 	streq	r0, [r4, #-1573]!	; 0xfffff9db
    95d4:	0b051509 	bleq	14ea00 <_Min_Heap_Size+0x14e200>
    95d8:	10050106 	andne	r0, r5, r6, lsl #2
    95dc:	052e4c03 	streq	r4, [lr, #-3075]!	; 0xfffff3fd
    95e0:	3603060d 	strcc	r0, [r3], -sp, lsl #12
    95e4:	060f052e 	streq	r0, [pc], -lr, lsr #10
    95e8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    95ec:	06100526 	ldreq	r0, [r0], -r6, lsr #10
    95f0:	2e204403 	cdpcs	4, 2, cr4, cr0, cr3, {0}
    95f4:	0002022e 	andeq	r0, r2, lr, lsr #4
    95f8:	01050101 	tsteq	r5, r1, lsl #2
    95fc:	fa020500 	blx	8aa04 <_Min_Heap_Size+0x8a204>
    9600:	0308001a 	movweq	r0, #32794	; 0x801a
    9604:	060113aa 	streq	r1, [r1], -sl, lsr #7
    9608:	06050501 	streq	r0, [r5], -r1, lsl #10
    960c:	06100521 	ldreq	r0, [r0], -r1, lsr #10
    9610:	20070501 	andcs	r0, r7, r1, lsl #10
    9614:	051f0105 	ldreq	r0, [pc, #-261]	; 9517 <_Min_Heap_Size+0x8d17>
    9618:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    961c:	20010626 	andcs	r0, r1, r6, lsr #12
    9620:	30060905 	andcc	r0, r6, r5, lsl #18
    9624:	01060b05 	tsteq	r6, r5, lsl #22
    9628:	3e060d05 	cdpcc	13, 0, cr0, cr6, cr5, {0}
    962c:	01063305 	tsteq	r6, r5, lsl #6
    9630:	05202a05 	streq	r2, [r0, #-2565]!	; 0xfffff5fb
    9634:	05240625 	streq	r0, [r4, #-1573]!	; 0xfffff9db
    9638:	12051509 	andne	r1, r5, #37748736	; 0x2400000
    963c:	01050106 	tsteq	r5, r6, lsl #2
    9640:	0102203e 	tsteq	r2, lr, lsr r0
    9644:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    9648:	02050005 	andeq	r0, r5, #5
    964c:	08001b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp, ip}
    9650:	0119ee03 	tsteq	r9, r3, lsl #28
    9654:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9658:	13053d06 	movwne	r3, #23814	; 0x5d06
    965c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9660:	2c052106 	stfcss	f2, [r5], {6}
    9664:	135f0519 	cmpne	pc, #104857600	; 0x6400000
    9668:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    966c:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    9670:	0b052049 	bleq	15179c <_Min_Heap_Size+0x150f9c>
    9674:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    9678:	05052e76 	streq	r2, [r5, #-3702]	; 0xfffff18a
    967c:	05203103 	streq	r3, [r0, #-259]!	; 0xfffffefd
    9680:	5b03060d 	blpl	caebc <_Min_Heap_Size+0xca6bc>
    9684:	061a053c 			; <UNDEFINED> instruction: 0x061a053c
    9688:	06370501 	ldrteq	r0, [r7], -r1, lsl #10
    968c:	150d053e 	strne	r0, [sp, #-1342]	; 0xfffffac2
    9690:	01061705 	tsteq	r6, r5, lsl #14
    9694:	0d052e3c 	stceq	14, cr2, [r5, #-240]	; 0xffffff10
    9698:	0f052206 	svceq	0x00052206
    969c:	11050106 	tstne	r5, r6, lsl #2
    96a0:	15053e06 	strne	r3, [r5, #-3590]	; 0xfffff1fa
    96a4:	13050106 	movwne	r0, #20742	; 0x5106
    96a8:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    96ac:	06190530 			; <UNDEFINED> instruction: 0x06190530
    96b0:	17052e01 	strne	r2, [r5, -r1, lsl #28]
    96b4:	3121052e 			; <UNDEFINED> instruction: 0x3121052e
    96b8:	06250520 	strteq	r0, [r5], -r0, lsr #10
    96bc:	05011303 	streq	r1, [r1, #-771]	; 0xfffffcfd
    96c0:	10051509 	andne	r1, r5, r9, lsl #10
    96c4:	11050106 	tstne	r5, r6, lsl #2
    96c8:	02040200 	andeq	r0, r4, #0, 4
    96cc:	20780306 	rsbscs	r0, r8, r6, lsl #6
    96d0:	02040200 	andeq	r0, r4, #0, 4
    96d4:	04020001 	streq	r0, [r2], #-1
    96d8:	02002e02 	andeq	r2, r0, #2, 28
    96dc:	002e0104 	eoreq	r0, lr, r4, lsl #2
    96e0:	01010402 	tsteq	r1, r2, lsl #8
    96e4:	01040200 	mrseq	r0, R12_usr
    96e8:	02002006 	andeq	r2, r0, #6
    96ec:	02200104 	eoreq	r0, r0, #4, 2
    96f0:	01010003 	tsteq	r1, r3
    96f4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    96f8:	001b7602 	andseq	r7, fp, r2, lsl #12
    96fc:	13be0308 			; <UNDEFINED> instruction: 0x13be0308
    9700:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    9704:	05350605 	ldreq	r0, [r5, #-1541]!	; 0xfffff9fb
    9708:	10053009 	andne	r3, r5, r9
    970c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9710:	0e053f06 	cdpeq	15, 0, cr3, cr5, cr6, {0}
    9714:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    9718:	20190306 	andscs	r0, r9, r6, lsl #6
    971c:	01061905 	tsteq	r6, r5, lsl #18
    9720:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    9724:	05220619 	streq	r0, [r2, #-1561]!	; 0xfffff9e7
    9728:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    972c:	35054a1b 	strcc	r4, [r5, #-2587]	; 0xfffff5e5
    9730:	0d052806 	stceq	8, cr2, [r5, #-24]	; 0xffffffe8
    9734:	06012103 	streq	r2, [r1], -r3, lsl #2
    9738:	060e0520 	streq	r0, [lr], -r0, lsr #10
    973c:	207fbc03 	rsbscs	fp, pc, r3, lsl #24
    9740:	05341105 	ldreq	r1, [r4, #-261]!	; 0xfffffefb
    9744:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    9748:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    974c:	19053006 	stmdbne	r5, {r1, r2, ip, sp}
    9750:	17050106 	strne	r0, [r5, -r6, lsl #2]
    9754:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    9758:	031d0533 	tsteq	sp, #213909504	; 0xcc00000
    975c:	09053c12 	stmdbeq	r5, {r1, r4, sl, fp, ip, sp}
    9760:	053c2803 	ldreq	r2, [ip, #-2051]!	; 0xfffff7fd
    9764:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    9768:	313e0605 	teqcc	lr, r5, lsl #12
    976c:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    9770:	2e010610 	mcrcs	6, 0, r0, cr1, cr0, {0}
    9774:	22060905 	andcs	r0, r6, #81920	; 0x14000
    9778:	01060e05 	tsteq	r6, r5, lsl #28
    977c:	03062d05 	movweq	r2, #27909	; 0x6d05
    9780:	1105200a 	tstne	r5, sl
    9784:	05200615 	streq	r0, [r0, #-1557]!	; 0xfffff9eb
    9788:	7303060e 	movwvc	r0, #13838	; 0x360e
    978c:	300d0520 	andcc	r0, sp, r0, lsr #10
    9790:	01061105 	tsteq	r6, r5, lsl #2
    9794:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    9798:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    979c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    97a0:	15054a13 	strne	r4, [r5, #-2579]	; 0xfffff5ed
    97a4:	09053006 	stmdbeq	r5, {r1, r2, ip, sp}
    97a8:	053c0f03 	ldreq	r0, [ip, #-3843]!	; 0xfffff0fd
    97ac:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    97b0:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    97b4:	202f0601 	eorcs	r0, pc, r1, lsl #12
    97b8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    97bc:	02050001 	andeq	r0, r5, #1
    97c0:	08001bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, ip}
    97c4:	0102b003 	tsteq	r2, r3
    97c8:	13130505 	tstne	r3, #20971520	; 0x1400000
    97cc:	05143705 	ldreq	r3, [r4, #-1797]	; 0xfffff8fb
    97d0:	0505141c 	streq	r1, [r5, #-1052]	; 0xfffffbe4
    97d4:	06070514 			; <UNDEFINED> instruction: 0x06070514
    97d8:	00010501 	andeq	r0, r1, r1, lsl #10
    97dc:	03010402 	movweq	r0, #5122	; 0x1402
    97e0:	12052e78 	andne	r2, r5, #120, 28	; 0x780
    97e4:	01040200 	mrseq	r0, R12_usr
    97e8:	053c0903 	ldreq	r0, [ip, #-2307]!	; 0xfffff6fd
    97ec:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    97f0:	36051f01 	strcc	r1, [r5], -r1, lsl #30
    97f4:	202c0531 	eorcs	r0, ip, r1, lsr r5
    97f8:	3a250520 	bcc	94ac80 <_Min_Heap_Size+0x94a480>
    97fc:	2f031105 	svccs	0x00031105
    9800:	06260520 	strteq	r0, [r6], -r0, lsr #10
    9804:	162e0523 	strtne	r0, [lr], -r3, lsr #10
    9808:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    980c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    9810:	204a032c 	subcs	r0, sl, ip, lsr #6
    9814:	30060905 	andcc	r0, r6, r5, lsl #18
    9818:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    981c:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    9820:	57052043 	strpl	r2, [r5, -r3, asr #32]
    9824:	20380520 	eorscs	r0, r8, r0, lsr #10
    9828:	052e2605 	streq	r2, [lr, #-1541]!	; 0xfffff9fb
    982c:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    9830:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    9834:	052f060d 	streq	r0, [pc, #-1549]!	; 922f <_Min_Heap_Size+0x8a2f>
    9838:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    983c:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    9840:	05010654 	streq	r0, [r1, #-1620]	; 0xfffff9ac
    9844:	2a05203c 	bcs	15193c <_Min_Heap_Size+0x15113c>
    9848:	060d052e 	streq	r0, [sp], -lr, lsr #10
    984c:	061e0521 	ldreq	r0, [lr], -r1, lsr #10
    9850:	060d0501 	streq	r0, [sp], -r1, lsl #10
    9854:	061e053d 			; <UNDEFINED> instruction: 0x061e053d
    9858:	060d0501 	streq	r0, [sp], -r1, lsl #10
    985c:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    9860:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    9864:	06150527 	ldreq	r0, [r5], -r7, lsr #10
    9868:	20130501 	andscs	r0, r3, r1, lsl #10
    986c:	03060905 	movweq	r0, #26885	; 0x6905
    9870:	10052017 	andne	r2, r5, r7, lsl r0
    9874:	2e4d0306 	cdpcs	3, 4, cr0, cr13, cr6, {0}
    9878:	33030905 	movwcc	r0, #14597	; 0x3905
    987c:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    9880:	05206b03 	streq	r6, [r0, #-2819]!	; 0xfffff4fd
    9884:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    9888:	19054a17 	stmdbne	r5, {r0, r1, r2, r4, r9, fp, lr}
    988c:	2e663006 	cdpcs	0, 6, cr3, cr6, cr6, {0}
    9890:	052e3905 	streq	r3, [lr, #-2309]!	; 0xfffff6fb
    9894:	200f0311 	andcs	r0, pc, r1, lsl r3	; <UNPREDICTABLE>
    9898:	055f064b 	ldrbeq	r0, [pc, #-1611]	; 9255 <_Min_Heap_Size+0x8a55>
    989c:	200a0301 	andcs	r0, sl, r1, lsl #6
    98a0:	76031105 	strvc	r1, [r3], -r5, lsl #2
    98a4:	03010520 	movweq	r0, #5408	; 0x1520
    98a8:	0020200a 	eoreq	r2, r0, sl
    98ac:	01050101 	tsteq	r5, r1, lsl #2
    98b0:	8e020500 	cfsh32hi	mvfx0, mvfx2, #0
    98b4:	0308001c 	movweq	r0, #32796	; 0x801c
    98b8:	060104ba 			; <UNDEFINED> instruction: 0x060104ba
    98bc:	06050501 	streq	r0, [r5], -r1, lsl #10
    98c0:	07051431 	smladxeq	r5, r1, r4, r1
    98c4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    98c8:	05260609 	streq	r0, [r6, #-1545]!	; 0xfffff9f7
    98cc:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    98d0:	0a030605 	beq	cb0ec <_Min_Heap_Size+0xca8ec>
    98d4:	061a0520 	ldreq	r0, [sl], -r0, lsr #10
    98d8:	06050501 	streq	r0, [r5], -r1, lsl #10
    98dc:	061c0521 	ldreq	r0, [ip], -r1, lsr #10
    98e0:	06050501 	streq	r0, [r5], -r1, lsl #10
    98e4:	060e0521 	streq	r0, [lr], -r1, lsr #10
    98e8:	05202001 	streq	r2, [r0, #-1]!
    98ec:	0a030609 	beq	cb118 <_Min_Heap_Size+0xca918>
    98f0:	0629052e 	strteq	r0, [r9], -lr, lsr #10
    98f4:	06240501 	strteq	r0, [r4], -r1, lsl #10
    98f8:	06010532 			; <UNDEFINED> instruction: 0x06010532
    98fc:	06090513 			; <UNDEFINED> instruction: 0x06090513
    9900:	05206a03 	streq	r6, [r0, #-2563]!	; 0xfffff5fd
    9904:	0201061c 	andeq	r0, r1, #28, 12	; 0x1c00000
    9908:	01010002 	tsteq	r1, r2
    990c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    9910:	001cae02 	andseq	sl, ip, r2, lsl #28
    9914:	02fc0308 	rscseq	r0, ip, #8, 6	; 0x20000000
    9918:	13090501 	movwne	r0, #38145	; 0x9501
    991c:	05147705 	ldreq	r7, [r4, #-1797]	; 0xfffff8fb
    9920:	09051626 	stmdbeq	r5, {r1, r2, r5, r9, sl, ip}
    9924:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    9928:	00050501 	andeq	r0, r5, r1, lsl #10
    992c:	03010402 	movweq	r0, #5122	; 0x1402
    9930:	33052077 	movwcc	r2, #20599	; 0x5077
    9934:	01040200 	mrseq	r0, R12_usr
    9938:	054a0903 	strbeq	r0, [sl, #-2307]	; 0xfffff6fd
    993c:	0f052127 	svceq	0x00052127
    9940:	004a0524 	subeq	r0, sl, r4, lsr #10
    9944:	20010402 	andcs	r0, r1, r2, lsl #8
    9948:	03060d05 	movweq	r0, #27909	; 0x6d05
    994c:	11052016 	tstne	r5, r6, lsl r0
    9950:	06330519 			; <UNDEFINED> instruction: 0x06330519
    9954:	0d052001 	stceq	0, cr2, [r5, #-4]
    9958:	4a063206 	bmi	196178 <_Min_Heap_Size+0x195978>
    995c:	75031805 	strvc	r1, [r3, #-2053]	; 0xfffff7fb
    9960:	0305052e 	movweq	r0, #21806	; 0x552e
    9964:	0f052016 	svceq	0x00052016
    9968:	052e5503 	streq	r5, [lr, #-1283]!	; 0xfffffafd
    996c:	2e720313 	mrccs	3, 3, r0, cr2, cr3, {0}
    9970:	03063c05 	movweq	r3, #27653	; 0x6c05
    9974:	09052036 	stmdbeq	r5, {r1, r2, r4, r5, sp}
    9978:	06100514 			; <UNDEFINED> instruction: 0x06100514
    997c:	03130501 	tsteq	r3, #4194304	; 0x400000
    9980:	05052048 	streq	r2, [r5, #-72]	; 0xffffffb8
    9984:	05203903 	streq	r3, [r0, #-2307]!	; 0xfffff6fd
    9988:	20470313 	subcs	r0, r7, r3, lsl r3
    998c:	02202020 	eoreq	r2, r0, #32
    9990:	01010001 	tsteq	r1, r1
    9994:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    9998:	00000002 	andeq	r0, r0, r2
    999c:	03c00300 	biceq	r0, r0, #0, 6
    99a0:	13090501 	movwne	r0, #38145	; 0x9501
    99a4:	145d0513 	ldrbne	r0, [sp], #-1299	; 0xfffffaed
    99a8:	05142005 	ldreq	r2, [r4, #-5]
    99ac:	0d051327 	stceq	3, cr1, [r5, #-156]	; 0xffffff64
    99b0:	06180517 			; <UNDEFINED> instruction: 0x06180517
    99b4:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    99b8:	0f031905 	svceq	0x00031905
    99bc:	063d052e 	ldrteq	r0, [sp], -lr, lsr #10
    99c0:	05201003 	streq	r1, [r0, #-3]!
    99c4:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    99c8:	11051306 	tstne	r5, r6, lsl #6
    99cc:	20600306 	rsbcs	r0, r0, r6, lsl #6
    99d0:	01061305 	tsteq	r6, r5, lsl #6
    99d4:	22061505 	andcs	r1, r6, #20971520	; 0x1400000
    99d8:	01063e05 	tsteq	r6, r5, lsl #28
    99dc:	05202705 	streq	r2, [r0, #-1797]!	; 0xfffff8fb
    99e0:	05260611 	streq	r0, [r6, #-1553]!	; 0xfffff9ef
    99e4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    99e8:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    99ec:	20010619 	andcs	r0, r1, r9, lsl r6
    99f0:	01000102 	tsteq	r0, r2, lsl #2
    99f4:	00050501 	andeq	r0, r5, r1, lsl #10
    99f8:	00000205 	andeq	r0, r0, r5, lsl #4
    99fc:	f8030000 			; <UNDEFINED> instruction: 0xf8030000
    9a00:	01060103 	tsteq	r6, r3, lsl #2
    9a04:	2f060905 	svccs	0x00060905
    9a08:	51051313 	tstpl	r5, r3, lsl r3
    9a0c:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    9a10:	01060b05 	tsteq	r6, r5, lsl #22
    9a14:	02002c05 	andeq	r2, r0, #1280	; 0x500
    9a18:	004c0104 	subeq	r0, ip, r4, lsl #2
    9a1c:	3c010402 	cfstrscc	mvf0, [r1], {2}
    9a20:	02003305 	andeq	r3, r0, #335544320	; 0x14000000
    9a24:	051e0104 	ldreq	r0, [lr, #-260]	; 0xfffffefc
    9a28:	3c052453 	cfstrscc	mvf2, [r5], {83}	; 0x53
    9a2c:	060d052c 	streq	r0, [sp], -ip, lsr #10
    9a30:	28051743 	stmdacs	r5, {r0, r1, r6, r8, r9, sl, ip}
    9a34:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    9a38:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    9a3c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    9a40:	13320611 	teqne	r2, #17825792	; 0x1100000
    9a44:	05191505 	ldreq	r1, [r9, #-1285]	; 0xfffffafb
    9a48:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
    9a4c:	06400611 			; <UNDEFINED> instruction: 0x06400611
    9a50:	052e2e4a 	streq	r2, [lr, #-3658]!	; 0xfffff1b6
    9a54:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    9a58:	20620301 	rsbcs	r0, r2, r1, lsl #6
    9a5c:	78031305 	stmdavc	r3, {r0, r2, r8, r9, ip}
    9a60:	0305052e 	movweq	r0, #21806	; 0x552e
    9a64:	13052037 	movwne	r2, #20535	; 0x5037
    9a68:	2e3c4903 	vaddcs.f16	s8, s24, s6	; <UNPREDICTABLE>
    9a6c:	03062705 	movweq	r2, #26373	; 0x6705
    9a70:	25052030 	strcs	r2, [r5, #-48]	; 0xffffffd0
    9a74:	15360513 	ldrne	r0, [r6, #-1299]!	; 0xfffffaed
    9a78:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    9a7c:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    9a80:	01010001 	tsteq	r1, r1
    9a84:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    9a88:	00000002 	andeq	r0, r0, r2
    9a8c:	06e00300 	strbteq	r0, [r0], r0, lsl #6
    9a90:	13090501 	movwne	r0, #38145	; 0x9501
    9a94:	05146405 	ldreq	r6, [r4, #-1029]	; 0xfffffbfb
    9a98:	0b051409 	bleq	14eac4 <_Min_Heap_Size+0x14e2c4>
    9a9c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    9aa0:	01040200 	mrseq	r0, R12_usr
    9aa4:	0022051b 	eoreq	r0, r2, fp, lsl r5
    9aa8:	41010402 	tstmi	r1, r2, lsl #8
    9aac:	31060d05 	tstcc	r6, r5, lsl #26
    9ab0:	01061705 	tsteq	r6, r5, lsl #14
    9ab4:	0d05204a 	stceq	0, cr2, [r5, #-296]	; 0xfffffed8
    9ab8:	0f053006 	svceq	0x00053006
    9abc:	11050106 	tstne	r5, r6, lsl #2
    9ac0:	3e052206 	cdpcc	2, 0, cr2, cr5, cr6, {0}
    9ac4:	31050106 	tstcc	r5, r6, lsl #2
    9ac8:	17052206 	strne	r2, [r5, -r6, lsl #4]
    9acc:	20730306 	rsbscs	r0, r3, r6, lsl #6
    9ad0:	1d030505 	cfstr32ne	mvfx0, [r3, #-20]	; 0xffffffec
    9ad4:	03170520 	tsteq	r7, #32, 10	; 0x8000000
    9ad8:	24052063 	strcs	r2, [r5], #-99	; 0xffffff9d
    9adc:	20160306 	andscs	r0, r6, r6, lsl #6
    9ae0:	05132505 	ldreq	r2, [r3, #-1285]	; 0xfffffafb
    9ae4:	09051543 	stmdbeq	r5, {r0, r1, r6, r8, sl, ip}
    9ae8:	06050514 			; <UNDEFINED> instruction: 0x06050514
    9aec:	01002e13 	tsteq	r0, r3, lsl lr
    9af0:	00050501 	andeq	r0, r5, r1, lsl #10
    9af4:	00000205 	andeq	r0, r0, r5, lsl #4
    9af8:	87030000 	strhi	r0, [r3, -r0]
    9afc:	09050107 	stmdbeq	r5, {r0, r1, r2, r8}
    9b00:	144f0513 	strbne	r0, [pc], #-1299	; 9b08 <_Min_Heap_Size+0x9308>
    9b04:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    9b08:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    9b0c:	04020005 	streq	r0, [r2], #-5
    9b10:	22051b01 	andcs	r1, r5, #1024	; 0x400
    9b14:	01040200 	mrseq	r0, R12_usr
    9b18:	060d0533 			; <UNDEFINED> instruction: 0x060d0533
    9b1c:	06170531 			; <UNDEFINED> instruction: 0x06170531
    9b20:	0d052e01 	stceq	14, cr2, [r5, #-4]
    9b24:	0f053006 	svceq	0x00053006
    9b28:	11050106 	tstne	r5, r6, lsl #2
    9b2c:	3e052206 	cdpcc	2, 0, cr2, cr5, cr6, {0}
    9b30:	31050106 	tstcc	r5, r6, lsl #2
    9b34:	17052206 	strne	r2, [r5, -r6, lsl #4]
    9b38:	20730306 	rsbscs	r0, r3, r6, lsl #6
    9b3c:	1d030505 	cfstr32ne	mvfx0, [r3, #-20]	; 0xffffffec
    9b40:	03170520 	tsteq	r7, #32, 10	; 0x8000000
    9b44:	24052063 	strcs	r2, [r5], #-99	; 0xffffff9d
    9b48:	20160306 	andscs	r0, r6, r6, lsl #6
    9b4c:	05132505 	ldreq	r2, [r3, #-1285]	; 0xfffffafb
    9b50:	0905153d 	stmdbeq	r5, {r0, r2, r3, r4, r5, r8, sl, ip}
    9b54:	06050514 			; <UNDEFINED> instruction: 0x06050514
    9b58:	01002013 	tsteq	r0, r3, lsl r0
    9b5c:	00010501 	andeq	r0, r1, r1, lsl #10
    9b60:	00000205 	andeq	r0, r0, r5, lsl #4
    9b64:	ae030000 	cdpge	0, 0, cr0, cr3, cr0, {0}
    9b68:	01060107 	tsteq	r6, r7, lsl #2
    9b6c:	67060505 	strvs	r0, [r6, -r5, lsl #10]
    9b70:	10051313 	andne	r1, r5, r3, lsl r3
    9b74:	2b051006 	blcs	14db94 <_Min_Heap_Size+0x14d394>
    9b78:	2e190306 	cdpcs	3, 1, cr0, cr9, cr6, {0}
    9b7c:	05161505 	ldreq	r1, [r6, #-1285]	; 0xfffffafb
    9b80:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    9b84:	05220615 	streq	r0, [r2, #-1557]!	; 0xfffff9eb
    9b88:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    9b8c:	055a0615 	ldrbeq	r0, [sl, #-1557]	; 0xfffff9eb
    9b90:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    9b94:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    9b98:	1b052206 	blne	1523b8 <_Min_Heap_Size+0x151bb8>
    9b9c:	41050106 	tstmi	r5, r6, lsl #2
    9ba0:	01040200 	mrseq	r0, R12_usr
    9ba4:	061e052e 	ldreq	r0, [lr], -lr, lsr #10
    9ba8:	06220527 	strteq	r0, [r2], -r7, lsr #10
    9bac:	20052001 	andcs	r2, r5, r1
    9bb0:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    9bb4:	052e6625 	streq	r6, [lr, #-1573]!	; 0xfffff9db
    9bb8:	35052e3d 	strcc	r2, [r5, #-3645]	; 0xfffff1c3
    9bbc:	05012403 	streq	r2, [r1, #-1027]	; 0xfffffbfd
    9bc0:	01280311 			; <UNDEFINED> instruction: 0x01280311
    9bc4:	05303805 	ldreq	r3, [r0, #-2053]!	; 0xfffff7fb
    9bc8:	18051411 	stmdane	r5, {r0, r4, sl, ip}
    9bcc:	01050106 	tsteq	r5, r6, lsl #2
    9bd0:	2000d303 	andcs	sp, r0, r3, lsl #6
    9bd4:	03061905 	movweq	r1, #26885	; 0x6905
    9bd8:	052e7ee8 	streq	r7, [lr, #-3816]!	; 0xfffff118
    9bdc:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    9be0:	1e05201b 	mcrne	0, 0, r2, cr5, cr11, {0}
    9be4:	200f0306 	andcs	r0, pc, r6, lsl #6
    9be8:	01062005 	tsteq	r6, r5
    9bec:	34061d05 	strcc	r1, [r6], #-3333	; 0xfffff2fb
    9bf0:	3d052e66 	stccc	14, cr2, [r5, #-408]	; 0xfffffe68
    9bf4:	031d052e 	tsteq	sp, #192937984	; 0xb800000
    9bf8:	2105206d 	tstcs	r5, sp, rrx
    9bfc:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    9c00:	21052e1f 	tstcs	r5, pc, lsl lr
    9c04:	2e663406 	cdpcs	4, 6, cr3, cr6, cr6, {0}
    9c08:	062e4105 	strteq	r4, [lr], -r5, lsl #2
    9c0c:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    9c10:	0100c503 	tsteq	r0, r3, lsl #10
    9c14:	05323605 	ldreq	r3, [r2, #-1541]!	; 0xfffff9fb
    9c18:	15051343 	strne	r1, [r5, #-835]	; 0xfffffcbd
    9c1c:	061c0514 			; <UNDEFINED> instruction: 0x061c0514
    9c20:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    9c24:	23053d34 	movwcs	r3, #23860	; 0x5d34
    9c28:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9c2c:	01040200 	mrseq	r0, R12_usr
    9c30:	2e0f0306 	cdpcs	3, 0, cr0, cr15, cr6, {0}
    9c34:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    9c38:	0311054a 	tsteq	r1, #310378496	; 0x12800000
    9c3c:	053d4a1e 	ldreq	r4, [sp, #-2590]!	; 0xfffff5e2
    9c40:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    9c44:	c1030657 	tstgt	r3, r7, asr r6
    9c48:	1c052e7e 	stcne	14, cr2, [r5], {126}	; 0x7e
    9c4c:	13640514 	cmnne	r4, #20, 10	; 0x5000000
    9c50:	05135b05 	ldreq	r5, [r3, #-2821]	; 0xfffff4fb
    9c54:	0505156e 	streq	r1, [r5, #-1390]	; 0xfffffa92
    9c58:	14090516 	strne	r0, [r9], #-1302	; 0xfffffaea
    9c5c:	05340d05 	ldreq	r0, [r4, #-3333]!	; 0xfffff2fb
    9c60:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    9c64:	0f052037 	svceq	0x00052037
    9c68:	00440520 	subeq	r0, r4, r0, lsr #10
    9c6c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    9c70:	03061105 	movweq	r1, #24837	; 0x6105
    9c74:	052e00ec 	streq	r0, [lr, #-236]!	; 0xffffff14
    9c78:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    9c7c:	16052013 			; <UNDEFINED> instruction: 0x16052013
    9c80:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    9c84:	01061805 	tsteq	r6, r5, lsl #16
    9c88:	03062d05 	movweq	r2, #27909	; 0x6d05
    9c8c:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    9c90:	2e2f3316 	mcrcs	3, 1, r3, cr15, cr6, {0}
    9c94:	03040200 	movweq	r0, #16896	; 0x4200
    9c98:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    9c9c:	02006606 	andeq	r6, r0, #6291456	; 0x600000
    9ca0:	05310604 	ldreq	r0, [r1, #-1540]!	; 0xfffff9fc
    9ca4:	0402000d 	streq	r0, [r2], #-13
    9ca8:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    9cac:	0402000b 	streq	r0, [r2], #-11
    9cb0:	0d054a06 	vstreq	s8, [r5, #-24]	; 0xffffffe8
    9cb4:	11052206 	tstne	r5, r6, lsl #4
    9cb8:	0f050106 	svceq	0x00050106
    9cbc:	0637053c 			; <UNDEFINED> instruction: 0x0637053c
    9cc0:	13110530 	tstne	r1, #48, 10	; 0xc000000
    9cc4:	1505435f 	strne	r4, [r5, #-863]	; 0xfffffca1
    9cc8:	13050106 	movwne	r0, #20742	; 0x5106
    9ccc:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    9cd0:	052e6630 	streq	r6, [lr, #-1584]!	; 0xfffff9d0
    9cd4:	3c0d030d 	stccc	3, cr0, [sp], {13}
    9cd8:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    9cdc:	062e0501 	strteq	r0, [lr], -r1, lsl #10
    9ce0:	133b0530 	teqne	fp, #48, 10	; 0xc000000
    9ce4:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    9ce8:	02010614 	andeq	r0, r1, #20, 12	; 0x1400000
    9cec:	01010002 	tsteq	r1, r2
    9cf0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    9cf4:	00000002 	andeq	r0, r0, r2
    9cf8:	04e60300 	strbteq	r0, [r6], #768	; 0x300
    9cfc:	13090501 	movwne	r0, #38145	; 0x9501
    9d00:	01060b05 	tsteq	r6, r5, lsl #22
    9d04:	051f0505 	ldreq	r0, [pc, #-1285]	; 9807 <_Min_Heap_Size+0x9007>
    9d08:	0527060d 	streq	r0, [r7, #-1549]!	; 0xfffff9f3
    9d0c:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    9d10:	052f060d 	streq	r0, [pc, #-1549]!	; 970b <_Min_Heap_Size+0x8f0b>
    9d14:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    9d18:	0523060d 	streq	r0, [r3, #-1549]!	; 0xfffff9f3
    9d1c:	0501063b 	streq	r0, [r1, #-1595]	; 0xfffff9c5
    9d20:	0522062c 	streq	r0, [r2, #-1580]!	; 0xfffff9d4
    9d24:	1605150d 	strne	r1, [r5], -sp, lsl #10
    9d28:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    9d2c:	05054e06 	streq	r4, [r5, #-3590]	; 0xfffff1fa
    9d30:	02201406 	eoreq	r1, r0, #100663296	; 0x6000000
    9d34:	01010001 	tsteq	r1, r1
    9d38:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    9d3c:	00000002 	andeq	r0, r0, r2
    9d40:	05840300 	streq	r0, [r4, #768]	; 0x300
    9d44:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    9d48:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    9d4c:	05143405 	ldreq	r3, [r4, #-1029]	; 0xfffffbfb
    9d50:	15051409 	strne	r1, [r5, #-1033]	; 0xfffffbf7
    9d54:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    9d58:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    9d5c:	09053033 	stmdbeq	r5, {r0, r1, r4, r5, ip, sp}
    9d60:	06050514 			; <UNDEFINED> instruction: 0x06050514
    9d64:	01002e13 	tsteq	r0, r3, lsl lr
    9d68:	00050501 	andeq	r0, r5, r1, lsl #10
    9d6c:	00000205 	andeq	r0, r0, r5, lsl #4
    9d70:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    9d74:	01060105 	tsteq	r6, r5, lsl #2
    9d78:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    9d7c:	14490513 	strbne	r0, [r9], #-1299	; 0xfffffaed
    9d80:	14160905 	ldrne	r0, [r6], #-2309	; 0xfffff6fb
    9d84:	01061505 	tsteq	r6, r5, lsl #10
    9d88:	052e203c 	streq	r2, [lr, #-60]!	; 0xffffffc4
    9d8c:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    9d90:	09053039 	stmdbeq	r5, {r0, r3, r4, r5, ip, sp}
    9d94:	06050514 			; <UNDEFINED> instruction: 0x06050514
    9d98:	01003c13 	tsteq	r0, r3, lsl ip
    9d9c:	00050501 	andeq	r0, r5, r1, lsl #10
    9da0:	00000205 	andeq	r0, r0, r5, lsl #4
    9da4:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    9da8:	01060105 	tsteq	r6, r5, lsl #2
    9dac:	2f060905 	svccs	0x00060905
    9db0:	14360513 	ldrtne	r0, [r6], #-1299	; 0xfffffaed
    9db4:	05142005 	ldreq	r2, [r4, #-5]
    9db8:	22051a09 	andcs	r1, r5, #36864	; 0x9000
    9dbc:	33050106 	movwcc	r0, #20742	; 0x5106
    9dc0:	2e0b0520 	cfsh32cs	mvfx0, mvfx11, #16
    9dc4:	1d031505 	cfstr32ne	mvfx1, [r3, #-20]	; 0xffffffec
    9dc8:	2805052e 	stmdacs	r5, {r1, r2, r3, r5, r8, sl}
    9dcc:	03063105 	movweq	r3, #24837	; 0x6105
    9dd0:	0d05205d 	stceq	0, cr2, [r5, #-372]	; 0xfffffe8c
    9dd4:	06240519 			; <UNDEFINED> instruction: 0x06240519
    9dd8:	203b0501 	eorscs	r0, fp, r1, lsl #10
    9ddc:	31060d05 	tstcc	r6, r5, lsl #26
    9de0:	01060f05 	tsteq	r6, r5, lsl #30
    9de4:	0b031505 	bleq	cf200 <_Min_Heap_Size+0xcea00>
    9de8:	06380520 	ldrteq	r0, [r8], -r0, lsr #10
    9dec:	09051528 	stmdbeq	r5, {r3, r5, r8, sl, ip}
    9df0:	06100514 			; <UNDEFINED> instruction: 0x06100514
    9df4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    9df8:	05206c03 	streq	r6, [r0, #-3075]!	; 0xfffff3fd
    9dfc:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    9e00:	02025f15 	andeq	r5, r2, #21, 30	; 0x54
    9e04:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    9e08:	02050001 	andeq	r0, r5, #1
    9e0c:	00000000 	andeq	r0, r0, r0
    9e10:	01098803 	tsteq	r9, r3, lsl #16
    9e14:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    9e18:	13135906 	tstne	r3, #98304	; 0x18000
    9e1c:	05146b05 	ldreq	r6, [r4, #-2821]	; 0xfffff4fb
    9e20:	6405141c 	strvs	r1, [r5], #-1052	; 0xfffffbe4
    9e24:	135b0513 	cmpne	fp, #79691776	; 0x4c00000
    9e28:	10032f05 	andne	r2, r3, r5, lsl #30
    9e2c:	03050501 	movweq	r0, #21761	; 0x5501
    9e30:	0204010a 	andeq	r0, r4, #-2147483646	; 0x80000002
    9e34:	b9032205 	stmdblt	r3, {r0, r2, r9, sp}
    9e38:	05050178 	streq	r0, [r5, #-376]	; 0xfffffe88
    9e3c:	0c031414 	cfstrseq	mvf1, [r3], {20}
    9e40:	0401069e 	streq	r0, [r1], #-1694	; 0xfffff962
    9e44:	06090501 	streq	r0, [r9], -r1, lsl #10
    9e48:	0107b903 	tsteq	r7, r3, lsl #18
    9e4c:	01061605 	tsteq	r6, r5, lsl #12
    9e50:	05203305 	streq	r3, [r0, #-773]!	; 0xfffffcfb
    9e54:	4005200b 	andmi	r2, r5, fp
    9e58:	01040200 	mrseq	r0, R12_usr
    9e5c:	0315052e 	tsteq	r5, #192937984	; 0xb800000
    9e60:	052e00f8 	streq	r0, [lr, #-248]!	; 0xffffff08
    9e64:	04230605 	strteq	r0, [r3], #-1541	; 0xfffff9fb
    9e68:	031e0502 	tsteq	lr, #8388608	; 0x800000
    9e6c:	050177d0 	streq	r7, [r1, #-2000]	; 0xfffff830
    9e70:	2e061405 	cdpcs	4, 0, cr1, cr6, cr5, {0}
    9e74:	34050104 	strcc	r0, [r5], #-260	; 0xfffffefc
    9e78:	08b00306 	ldmeq	r0!, {r1, r2, r8, r9}
    9e7c:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    9e80:	13060105 	movwne	r0, #24837	; 0x6105
    9e84:	03060d05 	movweq	r0, #27909	; 0x6d05
    9e88:	052e7f82 	streq	r7, [lr, #-3970]!	; 0xfffff07e
    9e8c:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    9e90:	053d060d 	ldreq	r0, [sp, #-1549]!	; 0xfffff9f3
    9e94:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    9e98:	05300630 	ldreq	r0, [r0, #-1584]!	; 0xfffff9d0
    9e9c:	1605190d 	strne	r1, [r5], -sp, lsl #18
    9ea0:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    9ea4:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    9ea8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    9eac:	05400615 	strbeq	r0, [r0, #-1557]	; 0xfffff9eb
    9eb0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    9eb4:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    9eb8:	1b052206 	blne	1526d8 <_Min_Heap_Size+0x151ed8>
    9ebc:	41050106 	tstmi	r5, r6, lsl #2
    9ec0:	01040200 	mrseq	r0, R12_usr
    9ec4:	061e052e 	ldreq	r0, [lr], -lr, lsr #10
    9ec8:	06220543 	strteq	r0, [r2], -r3, asr #10
    9ecc:	3c200501 	cfstr32cc	mvfx0, [r0], #-4
    9ed0:	25061d05 	strcs	r1, [r6, #-3333]	; 0xfffff2fb
    9ed4:	01061f05 	tsteq	r6, r5, lsl #30
    9ed8:	22062105 	andcs	r2, r6, #1073741825	; 0x40000001
    9edc:	01063c05 	tsteq	r6, r5, lsl #24
    9ee0:	03061905 	movweq	r1, #26885	; 0x6905
    9ee4:	1d053c0e 	stcne	12, cr3, [r5, #-56]	; 0xffffffc8
    9ee8:	1b050106 	blne	14a308 <_Min_Heap_Size+0x149b08>
    9eec:	03150520 	tsteq	r5, #32, 10	; 0x8000000
    9ef0:	052000c1 	streq	r0, [r0, #-193]!	; 0xffffff3f
    9ef4:	4103061d 	tstmi	r3, sp, lsl r6
    9ef8:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    9efc:	4a1f0501 	bmi	7cb308 <_Min_Heap_Size+0x7cab08>
    9f00:	24062105 	strcs	r2, [r6], #-261	; 0xfffffefb
    9f04:	01062305 	tsteq	r6, r5, lsl #6
    9f08:	22062505 	andcs	r2, r6, #20971520	; 0x1400000
    9f0c:	01064005 	tsteq	r6, r5
    9f10:	03061105 	movweq	r1, #24837	; 0x6105
    9f14:	2e013c36 	mcrcs	12, 0, r3, cr1, cr6, {1}
    9f18:	01040200 	mrseq	r0, R12_usr
    9f1c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    9f20:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    9f24:	20060104 	andcs	r0, r6, r4, lsl #2
    9f28:	01040200 	mrseq	r0, R12_usr
    9f2c:	00150520 	andseq	r0, r5, r0, lsr #10
    9f30:	31010402 	tstcc	r1, r2, lsl #8
    9f34:	01040200 	mrseq	r0, R12_usr
    9f38:	4a2e2020 	bmi	b91fc0 <_Min_Heap_Size+0xb917c0>
    9f3c:	0102204a 	tsteq	r2, sl, asr #32
    9f40:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    9f44:	02050001 	andeq	r0, r5, #1
    9f48:	00000000 	andeq	r0, r0, r0
    9f4c:	010ab203 	tsteq	sl, r3, lsl #4
    9f50:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    9f54:	13132106 	tstne	r3, #-2147483647	; 0x80000001
    9f58:	05144605 	ldreq	r4, [r4, #-1541]	; 0xfffff9fb
    9f5c:	2d051a1c 	vstrcs	s2, [r5, #-112]	; 0xffffff90
    9f60:	177b0516 			; <UNDEFINED> instruction: 0x177b0516
    9f64:	10032f05 	andne	r2, r3, r5, lsl #30
    9f68:	17050501 	strne	r0, [r5, -r1, lsl #10]
    9f6c:	22050204 	andcs	r0, r5, #4, 4	; 0x40000000
    9f70:	01778703 	cmneq	r7, r3, lsl #14
    9f74:	14140505 	ldrne	r0, [r4], #-1285	; 0xfffffafb
    9f78:	069e0c03 	ldreq	r0, [lr], r3, lsl #24
    9f7c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    9f80:	eb030609 	bl	cb7ac <_Min_Heap_Size+0xcafac>
    9f84:	1b050108 	blne	14a3ac <_Min_Heap_Size+0x149bac>
    9f88:	09050106 	stmdbeq	r5, {r1, r2, r8}
    9f8c:	28052506 	stmdacs	r5, {r1, r2, r8, sl, sp}
    9f90:	0b050106 	bleq	14a3b0 <_Min_Heap_Size+0x149bb0>
    9f94:	060d0520 	streq	r0, [sp], -r0, lsr #10
    9f98:	061a054c 	ldreq	r0, [sl], -ip, asr #10
    9f9c:	06300501 	ldrteq	r0, [r0], -r1, lsl #10
    9fa0:	1a0d053e 	bne	34b4a0 <_Min_Heap_Size+0x34aca0>
    9fa4:	01062a05 	tsteq	r6, r5, lsl #20
    9fa8:	05202805 	streq	r2, [r0, #-2053]!	; 0xfffff7fb
    9fac:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    9fb0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    9fb4:	05400615 	strbeq	r0, [r0, #-1557]	; 0xfffff9eb
    9fb8:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    9fbc:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    9fc0:	1d052206 	sfmne	f2, 4, [r5, #-24]	; 0xffffffe8
    9fc4:	1b050106 	blne	14a3e4 <_Min_Heap_Size+0x149be4>
    9fc8:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    9fcc:	061f0525 	ldreq	r0, [pc], -r5, lsr #10
    9fd0:	06210501 	strteq	r0, [r1], -r1, lsl #10
    9fd4:	063c0522 	ldrteq	r0, [ip], -r2, lsr #10
    9fd8:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    9fdc:	053c0e03 	ldreq	r0, [ip, #-3587]!	; 0xfffff1fd
    9fe0:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    9fe4:	1505201b 	strne	r2, [r5, #-27]	; 0xffffffe5
    9fe8:	20203e03 	eorcs	r3, r0, r3, lsl #28
    9fec:	03061d05 	movweq	r1, #27909	; 0x6d05
    9ff0:	21052044 	tstcs	r5, r4, asr #32
    9ff4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    9ff8:	21052e1f 	tstcs	r5, pc, lsl lr
    9ffc:	23052406 	movwcs	r2, #21510	; 0x5406
    a000:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    a004:	40052206 	andmi	r2, r5, r6, lsl #4
    a008:	11050106 	tstne	r5, r6, lsl #2
    a00c:	3c330306 	ldccc	3, cr0, [r3], #-24	; 0xffffffe8
    a010:	02002e01 	andeq	r2, r0, #1, 28
    a014:	002e0104 	eoreq	r0, lr, r4, lsl #2
    a018:	01010402 	tsteq	r1, r2, lsl #8
    a01c:	01040200 	mrseq	r0, R12_usr
    a020:	02002006 	andeq	r2, r0, #6
    a024:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    a028:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    a02c:	02003101 	andeq	r3, r0, #1073741824	; 0x40000000
    a030:	00200104 	eoreq	r0, r0, r4, lsl #2
    a034:	20010402 	andcs	r0, r1, r2, lsl #8
    a038:	05052017 	streq	r2, [r5, #-23]	; 0xffffffe9
    a03c:	02041506 	andeq	r1, r4, #25165824	; 0x1800000
    a040:	a3031e05 	movwge	r1, #15877	; 0x3e05
    a044:	05050176 	streq	r0, [r5, #-374]	; 0xfffffe8a
    a048:	042e0614 	strteq	r0, [lr], #-1556	; 0xfffff9ec
    a04c:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    a050:	0109dd03 	tsteq	r9, r3, lsl #26
    a054:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    a058:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    a05c:	20730315 	rsbscs	r0, r3, r5, lsl r3
    a060:	02204a4a 	eoreq	r4, r0, #303104	; 0x4a000
    a064:	01010001 	tsteq	r1, r1
    a068:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    a06c:	001cec02 	andseq	lr, ip, r2, lsl #24
    a070:	0be00308 	bleq	ff80ac98 <_estack+0xdf8012f8>
    a074:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    a078:	13590605 	cmpne	r9, #5242880	; 0x500000
    a07c:	06100513 			; <UNDEFINED> instruction: 0x06100513
    a080:	06110510 			; <UNDEFINED> instruction: 0x06110510
    a084:	052e1f03 	streq	r1, [lr, #-3843]!	; 0xfffff0fd
    a088:	11054b2e 	tstne	r5, lr, lsr #22
    a08c:	062e0513 			; <UNDEFINED> instruction: 0x062e0513
    a090:	202c0501 	eorcs	r0, ip, r1, lsl #10
    a094:	25061105 	strcs	r1, [r6, #-261]	; 0xfffffefb
    a098:	01061505 	tsteq	r6, r5, lsl #10
    a09c:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    a0a0:	0d03062d 	stceq	6, cr0, [r3, #-180]	; 0xffffff4c
    a0a4:	15110520 	ldrne	r0, [r1, #-1312]	; 0xfffffae0
    a0a8:	05303405 	ldreq	r3, [r0, #-1029]!	; 0xfffffbfb
    a0ac:	18051411 	stmdane	r5, {r0, r4, sl, ip}
    a0b0:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    a0b4:	00d50301 	sbcseq	r0, r5, r1, lsl #6
    a0b8:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    a0bc:	2e7f9903 	vaddcs.f16	s19, s30, s6	; <UNPREDICTABLE>
    a0c0:	01061905 	tsteq	r6, r5, lsl #18
    a0c4:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    a0c8:	66300619 			; <UNDEFINED> instruction: 0x66300619
    a0cc:	2e39052e 	cdpcs	5, 3, cr0, cr9, cr14, {1}
    a0d0:	18031505 	stmdane	r3, {r0, r2, r8, sl, ip}
    a0d4:	30390520 	eorscc	r0, r9, r0, lsr #10
    a0d8:	05134005 	ldreq	r4, [r3, #-5]
    a0dc:	1c051415 	cfstrsne	mvf1, [r5], {21}
    a0e0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    a0e4:	053d3406 	ldreq	r3, [sp, #-1030]!	; 0xfffffbfa
    a0e8:	2e010623 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx3
    a0ec:	02000905 	andeq	r0, r0, #81920	; 0x14000
    a0f0:	03060104 	movweq	r0, #24836	; 0x6104
    a0f4:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    a0f8:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
    a0fc:	4a1a0311 	bmi	68ad48 <_Min_Heap_Size+0x68a548>
    a100:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    a104:	060d0501 	streq	r0, [sp], -r1, lsl #10
    a108:	16053d43 	strne	r3, [r5], -r3, asr #26
    a10c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    a110:	11053006 	tstne	r5, r6
    a114:	0f050106 	svceq	0x00050106
    a118:	063f053c 			; <UNDEFINED> instruction: 0x063f053c
    a11c:	2e7f8203 	cdpcs	2, 7, cr8, cr15, cr3, {0}
    a120:	05152005 	ldreq	r2, [r5, #-5]
    a124:	6e051667 	cfmadd32vs	mvax3, mvfx1, mvfx5, mvfx7
    a128:	16050517 			; <UNDEFINED> instruction: 0x16050517
    a12c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    a130:	1f05300d 	svcne	0x0005300d
    a134:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    a138:	0f052406 	svceq	0x00052406
    a13c:	11050106 	tstne	r5, r6, lsl #2
    a140:	2e220306 	cdpcs	3, 2, cr0, cr2, cr6, {0}
    a144:	01062205 	tsteq	r6, r5, lsl #4
    a148:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    a14c:	0b030616 	bleq	cb9ac <_Min_Heap_Size+0xcb1ac>
    a150:	0618052e 	ldreq	r0, [r8], -lr, lsr #10
    a154:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    a158:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    a15c:	2f331609 	svccs	0x00331609
    a160:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    a164:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    a168:	00660604 	rsbeq	r0, r6, r4, lsl #12
    a16c:	31060402 	tstcc	r6, r2, lsl #8
    a170:	02000d05 	andeq	r0, r0, #320	; 0x140
    a174:	01060604 	tsteq	r6, r4, lsl #12
    a178:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    a17c:	054a0604 	strbeq	r0, [sl, #-1540]	; 0xfffff9fc
    a180:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    a184:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    a188:	3a053c0f 	bcc	1591cc <_Min_Heap_Size+0x1589cc>
    a18c:	11053006 	tstne	r5, r6
    a190:	053e5913 	ldreq	r5, [lr, #-2323]!	; 0xfffff6ed
    a194:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    a198:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    a19c:	2e663006 	cdpcs	0, 6, cr3, cr6, cr6, {0}
    a1a0:	052e2b05 	streq	r2, [lr, #-2821]!	; 0xfffff4fb
    a1a4:	1b030618 	blne	cba0c <_Min_Heap_Size+0xcb20c>
    a1a8:	00020220 	andeq	r0, r2, r0, lsr #4
    a1ac:	01050101 	tsteq	r5, r1, lsl #2
    a1b0:	00020500 	andeq	r0, r2, r0, lsl #10
    a1b4:	03000000 	movweq	r0, #0
    a1b8:	06010cf5 			; <UNDEFINED> instruction: 0x06010cf5
    a1bc:	06050501 	streq	r0, [r5], -r1, lsl #10
    a1c0:	0513134b 	ldreq	r1, [r3, #-843]	; 0xfffffcb5
    a1c4:	14051509 	strne	r1, [r5], #-1289	; 0xfffffaf7
    a1c8:	10050106 	andne	r0, r5, r6, lsl #2
    a1cc:	062e051b 			; <UNDEFINED> instruction: 0x062e051b
    a1d0:	052e2403 	streq	r2, [lr, #-1027]!	; 0xfffffbfd
    a1d4:	2e051611 	mcrcs	6, 0, r1, cr5, cr1, {0}
    a1d8:	2c050106 	stfcss	f0, [r5], {6}
    a1dc:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    a1e0:	06200524 	strteq	r0, [r0], -r4, lsr #10
    a1e4:	20170501 	andscs	r0, r7, r1, lsl #10
    a1e8:	28063105 	stmdacs	r6, {r0, r2, r8, ip, sp}
    a1ec:	05191105 	ldreq	r1, [r9, #-261]	; 0xfffffefb
    a1f0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    a1f4:	2d052013 	stccs	0, cr2, [r5, #-76]	; 0xffffffb4
    a1f8:	200d0306 	andcs	r0, sp, r6, lsl #6
    a1fc:	05151105 	ldreq	r1, [r5, #-261]	; 0xfffffefb
    a200:	1105303a 	tstne	r5, sl, lsr r0
    a204:	06180514 			; <UNDEFINED> instruction: 0x06180514
    a208:	01052001 	tsteq	r5, r1
    a20c:	01018c03 	tsteq	r1, r3, lsl #24
    a210:	03061905 	movweq	r1, #26885	; 0x6905
    a214:	052e7ed5 	streq	r7, [lr, #-3797]!	; 0xfffff12b
    a218:	0501063e 	streq	r0, [r1, #-1598]	; 0xfffff9c2
    a21c:	15052e3c 	strne	r2, [r5, #-3644]	; 0xfffff1c4
    a220:	2e0d0306 	cdpcs	3, 0, cr0, cr13, cr6, {0}
    a224:	01061905 	tsteq	r6, r5, lsl #18
    a228:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    a22c:	66300619 			; <UNDEFINED> instruction: 0x66300619
    a230:	2e39052e 	cdpcs	5, 3, cr0, cr9, cr14, {1}
    a234:	18031505 	stmdane	r3, {r0, r2, r8, sl, ip}
    a238:	30390520 	eorscc	r0, r9, r0, lsr #10
    a23c:	05134605 	ldreq	r4, [r3, #-1541]	; 0xfffff9fb
    a240:	1c051415 	cfstrsne	mvf1, [r5], {21}
    a244:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    a248:	053d3406 	ldreq	r3, [sp, #-1030]!	; 0xfffffbfa
    a24c:	2e010623 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx3
    a250:	02000905 	andeq	r0, r0, #81920	; 0x14000
    a254:	03060104 	movweq	r0, #24836	; 0x6104
    a258:	0200010f 	andeq	r0, r0, #-1073741821	; 0xc0000003
    a25c:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
    a260:	4a110319 	bmi	44aecc <_Min_Heap_Size+0x44a6cc>
    a264:	05301d05 	ldreq	r1, [r0, #-3333]!	; 0xfffff2fb
    a268:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    a26c:	064c0619 			; <UNDEFINED> instruction: 0x064c0619
    a270:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    a274:	3d201903 			; <UNDEFINED> instruction: 0x3d201903
    a278:	01061a05 	tsteq	r6, r5, lsl #20
    a27c:	42060d05 	andmi	r0, r6, #320	; 0x140
    a280:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    a284:	060d0501 	streq	r0, [sp], -r1, lsl #10
    a288:	06110534 			; <UNDEFINED> instruction: 0x06110534
    a28c:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    a290:	03063b05 	movweq	r3, #27397	; 0x6b05
    a294:	052e7eda 	streq	r7, [lr, #-3802]!	; 0xfffff126
    a298:	2d051520 	cfstr32cs	mvfx1, [r5, #-128]	; 0xffffff80
    a29c:	176e0516 			; <UNDEFINED> instruction: 0x176e0516
    a2a0:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    a2a4:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    a2a8:	061f0532 			; <UNDEFINED> instruction: 0x061f0532
    a2ac:	060d0501 	streq	r0, [sp], -r1, lsl #10
    a2b0:	060f0524 	streq	r0, [pc], -r4, lsr #10
    a2b4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    a2b8:	052e3103 	streq	r3, [lr, #-259]!	; 0xfffffefd
    a2bc:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    a2c0:	16052013 			; <UNDEFINED> instruction: 0x16052013
    a2c4:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    a2c8:	01061805 	tsteq	r6, r5, lsl #16
    a2cc:	03062d05 	movweq	r2, #27909	; 0x6d05
    a2d0:	09052e0a 	stmdbeq	r5, {r1, r3, r9, sl, fp, sp}
    a2d4:	2e2f3316 	mcrcs	3, 1, r3, cr15, cr6, {0}
    a2d8:	03040200 	movweq	r0, #16896	; 0x4200
    a2dc:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    a2e0:	02006606 	andeq	r6, r0, #6291456	; 0x600000
    a2e4:	05310604 	ldreq	r0, [r1, #-1540]!	; 0xfffff9fc
    a2e8:	0402000d 	streq	r0, [r2], #-13
    a2ec:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    a2f0:	0402000b 	streq	r0, [r2], #-11
    a2f4:	0d054a06 	vstreq	s8, [r5, #-24]	; 0xffffffe8
    a2f8:	11053406 	tstne	r5, r6, lsl #8
    a2fc:	0f050106 	svceq	0x00050106
    a300:	063a053c 			; <UNDEFINED> instruction: 0x063a053c
    a304:	16150530 			; <UNDEFINED> instruction: 0x16150530
    a308:	01062005 	tsteq	r6, r5
    a30c:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    a310:	0a030631 	beq	cbbdc <_Min_Heap_Size+0xcb3dc>
    a314:	1711052e 	ldrne	r0, [r1, -lr, lsr #10]
    a318:	15053e59 	strne	r3, [r5, #-3673]	; 0xfffff1a7
    a31c:	13050106 	movwne	r0, #20742	; 0x5106
    a320:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    a324:	052e6630 	streq	r6, [lr, #-1584]!	; 0xfffff9d0
    a328:	15052e2b 	strne	r2, [r5, #-3627]	; 0xfffff1d5
    a32c:	05202003 	streq	r2, [r0, #-3]!
    a330:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    a334:	1b030635 	blne	cbc10 <_Min_Heap_Size+0xcb410>
    a338:	13420520 	movtne	r0, #9504	; 0x2520
    a33c:	05141105 	ldreq	r1, [r4, #-261]	; 0xfffffefb
    a340:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    a344:	64030619 	strvs	r0, [r3], #-1561	; 0xfffff9e7
    a348:	301d052e 	andscc	r0, sp, lr, lsr #10
    a34c:	06380519 			; <UNDEFINED> instruction: 0x06380519
    a350:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    a354:	064a0903 	strbeq	r0, [sl], -r3, lsl #18
    a358:	19052e20 	stmdbne	r5, {r5, r9, sl, fp, sp}
    a35c:	03021406 	movweq	r1, #9222	; 0x2406
    a360:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    a364:	02050005 	andeq	r0, r5, #5
    a368:	00000000 	andeq	r0, r0, r0
    a36c:	0106b003 	tsteq	r6, r3
    a370:	09050106 	stmdbeq	r5, {r1, r2, r8}
    a374:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    a378:	20051444 	andcs	r1, r5, r4, asr #8
    a37c:	172d0514 			; <UNDEFINED> instruction: 0x172d0514
    a380:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    a384:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    a388:	0b052033 	bleq	15245c <_Min_Heap_Size+0x151c5c>
    a38c:	060d052e 	streq	r0, [sp], -lr, lsr #10
    a390:	06170535 			; <UNDEFINED> instruction: 0x06170535
    a394:	060d0501 	streq	r0, [sp], -r1, lsl #10
    a398:	060f054f 	streq	r0, [pc], -pc, asr #10
    a39c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    a3a0:	06280522 	strteq	r0, [r8], -r2, lsr #10
    a3a4:	203f0501 	eorscs	r0, pc, r1, lsl #10
    a3a8:	32063c05 	andcc	r3, r6, #1280	; 0x500
    a3ac:	05163805 	ldreq	r3, [r6, #-2053]	; 0xfffff7fb
    a3b0:	10051409 	andne	r1, r5, r9, lsl #8
    a3b4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    a3b8:	206a0306 	rsbcs	r0, sl, r6, lsl #6
    a3bc:	01062405 	tsteq	r6, r5, lsl #8
    a3c0:	05203b05 	streq	r3, [r0, #-2821]!	; 0xfffff4fb
    a3c4:	052f060d 	streq	r0, [pc, #-1549]!	; 9dbf <_Min_Heap_Size+0x95bf>
    a3c8:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    a3cc:	20160305 	andscs	r0, r6, r5, lsl #6
    a3d0:	01010020 	tsteq	r1, r0, lsr #32
    a3d4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    a3d8:	00000002 	andeq	r0, r0, r2
    a3dc:	0ed70300 	cdpeq	3, 13, cr0, cr7, cr0, {0}
    a3e0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    a3e4:	13590605 	cmpne	r9, #5242880	; 0x500000
    a3e8:	10051313 	andne	r1, r5, r3, lsl r3
    a3ec:	11050f06 	tstne	r5, r6, lsl #30
    a3f0:	2e220306 	cdpcs	3, 2, cr0, cr2, cr6, {0}
    a3f4:	01062805 	tsteq	r6, r5, lsl #16
    a3f8:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    a3fc:	054b2b05 	strbeq	r2, [fp, #-2821]	; 0xfffff4fb
    a400:	2e051511 	mcrcs	5, 0, r1, cr5, cr1, {0}
    a404:	11050106 	tstne	r5, r6, lsl #2
    a408:	15052406 	strne	r2, [r5, #-1030]	; 0xfffffbfa
    a40c:	13050106 	movwne	r0, #20742	; 0x5106
    a410:	062d0520 	strteq	r0, [sp], -r0, lsr #10
    a414:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    a418:	31051511 	tstcc	r5, r1, lsl r5
    a41c:	14110530 	ldrne	r0, [r1], #-1328	; 0xfffffad0
    a420:	01061805 	tsteq	r6, r5, lsl #16
    a424:	03010520 	movweq	r0, #5408	; 0x1520
    a428:	050100d6 	streq	r0, [r1, #-214]	; 0xffffff2a
    a42c:	97030615 	smladls	r3, r5, r6, r0
    a430:	19052e7f 	stmdbne	r5, {r0, r1, r2, r3, r4, r5, r6, r9, sl, fp, sp}
    a434:	17050106 	strne	r0, [r5, -r6, lsl #2]
    a438:	0619054a 	ldreq	r0, [r9], -sl, asr #10
    a43c:	052e6631 	streq	r6, [lr, #-1585]!	; 0xfffff9cf
    a440:	15052e39 	strne	r2, [r5, #-3641]	; 0xfffff1c7
    a444:	05201803 	streq	r1, [r0, #-2051]!	; 0xfffff7fd
    a448:	3d053036 	stccc	0, cr3, [r5, #-216]	; 0xffffff28
    a44c:	14150513 	ldrne	r0, [r5], #-1299	; 0xfffffaed
    a450:	01061c05 	tsteq	r6, r5, lsl #24
    a454:	35061505 	strcc	r1, [r6, #-1285]	; 0xfffffafb
    a458:	0623053d 			; <UNDEFINED> instruction: 0x0623053d
    a45c:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    a460:	01040200 	mrseq	r0, R12_usr
    a464:	010f0306 	tsteq	pc, r6, lsl #6
    a468:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    a46c:	0311054a 	tsteq	r1, #310378496	; 0x12800000
    a470:	053d4a1a 	ldreq	r4, [sp, #-2586]!	; 0xfffff5e6
    a474:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    a478:	3d43060d 	stclcc	6, cr0, [r3, #-52]	; 0xffffffcc
    a47c:	01061605 	tsteq	r6, r5, lsl #12
    a480:	30060d05 	andcc	r0, r6, r5, lsl #26
    a484:	01061105 	tsteq	r6, r5, lsl #2
    a488:	053c0f05 	ldreq	r0, [ip, #-3845]!	; 0xfffff0fb
    a48c:	fb03063c 	blx	cbd86 <_Min_Heap_Size+0xcb586>
    a490:	20052e7e 	andcs	r2, r5, lr, ror lr
    a494:	16670515 			; <UNDEFINED> instruction: 0x16670515
    a498:	05176e05 	ldreq	r6, [r7, #-3589]	; 0xfffff1fb
    a49c:	09051605 	stmdbeq	r5, {r0, r2, r9, sl, ip}
    a4a0:	300d0514 	andcc	r0, sp, r4, lsl r5
    a4a4:	01061f05 	tsteq	r6, r5, lsl #30
    a4a8:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    a4ac:	01060f05 	tsteq	r6, r5, lsl #30
    a4b0:	03061105 	movweq	r1, #24837	; 0x6105
    a4b4:	22052e28 	andcs	r2, r5, #40, 28	; 0x280
    a4b8:	13050106 	movwne	r0, #20742	; 0x5106
    a4bc:	06160520 	ldreq	r0, [r6], -r0, lsr #10
    a4c0:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    a4c4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    a4c8:	0b03062d 	bleq	cbd84 <_Min_Heap_Size+0xcb584>
    a4cc:	1609052e 	strne	r0, [r9], -lr, lsr #10
    a4d0:	002e2f33 	eoreq	r2, lr, r3, lsr pc
    a4d4:	66030402 	strvs	r0, [r3], -r2, lsl #8
    a4d8:	06040200 	streq	r0, [r4], -r0, lsl #4
    a4dc:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    a4e0:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
    a4e4:	06040200 	streq	r0, [r4], -r0, lsl #4
    a4e8:	0b050106 	bleq	14a908 <_Min_Heap_Size+0x14a108>
    a4ec:	06040200 	streq	r0, [r4], -r0, lsl #4
    a4f0:	060d054a 	streq	r0, [sp], -sl, asr #10
    a4f4:	06110532 			; <UNDEFINED> instruction: 0x06110532
    a4f8:	3c0f0501 	cfstr32cc	mvfx0, [pc], {1}
    a4fc:	30063705 	andcc	r3, r6, r5, lsl #14
    a500:	59131105 	ldmdbpl	r3, {r0, r2, r8, ip}
    a504:	0615053e 			; <UNDEFINED> instruction: 0x0615053e
    a508:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    a50c:	30061505 	andcc	r1, r6, r5, lsl #10
    a510:	2b052e66 	blcs	155eb0 <_Min_Heap_Size+0x1556b0>
    a514:	0618052e 	ldreq	r0, [r8], -lr, lsr #10
    a518:	02201b03 	eoreq	r1, r0, #3072	; 0xc00
    a51c:	01010002 	tsteq	r1, r2
    a520:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    a524:	00000002 	andeq	r0, r0, r2
    a528:	0ff50300 	svceq	0x00f50300
    a52c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    a530:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    a534:	14530513 	ldrbne	r0, [r3], #-1299	; 0xfffffaed
    a538:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    a53c:	2f05135f 	svccs	0x0005135f
    a540:	05011003 	streq	r1, [r1, #-3]
    a544:	02041705 	andeq	r1, r4, #1310720	; 0x140000
    a548:	d2032205 	andle	r2, r3, #1342177280	; 0x50000000
    a54c:	05050171 	streq	r0, [r5, #-369]	; 0xfffffe8f
    a550:	0c031414 	cfstrseq	mvf1, [r3], {20}
    a554:	0401069e 	streq	r0, [r1], #-1694	; 0xfffff962
    a558:	06090501 	streq	r0, [r9], -r1, lsl #10
    a55c:	010ea003 	tsteq	lr, r3
    a560:	01061b05 	tsteq	r6, r5, lsl #22
    a564:	23060905 	movwcs	r0, #26885	; 0x6905
    a568:	01060b05 	tsteq	r6, r5, lsl #22
    a56c:	33031505 	movwcc	r1, #13573	; 0x3505
    a570:	063a0520 	ldrteq	r0, [sl], -r0, lsr #10
    a574:	15050521 	strne	r0, [r5, #-1313]	; 0xfffffadf
    a578:	1e050204 	cdpne	2, 0, cr0, cr5, cr4, {0}
    a57c:	0171aa03 	cmneq	r1, r3, lsl #20
    a580:	06140505 	ldreq	r0, [r4], -r5, lsl #10
    a584:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    a588:	d6030630 			; <UNDEFINED> instruction: 0xd6030630
    a58c:	0505010e 	streq	r0, [r5, #-270]	; 0xfffffef2
    a590:	06010514 			; <UNDEFINED> instruction: 0x06010514
    a594:	0d052e13 	stceq	14, cr2, [r5, #-76]	; 0xffffffb4
    a598:	2e460306 	cdpcs	3, 4, cr0, cr6, cr6, {0}
    a59c:	01061a05 	tsteq	r6, r5, lsl #20
    a5a0:	4c063305 	stcmi	3, cr3, [r6], {5}
    a5a4:	2f140d05 	svccs	0x00140d05
    a5a8:	01062a05 	tsteq	r6, r5, lsl #20
    a5ac:	05202805 	streq	r2, [r0, #-2053]!	; 0xfffff7fb
    a5b0:	0526060d 	streq	r0, [r6, #-1549]!	; 0xfffff9f3
    a5b4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    a5b8:	053e0611 	ldreq	r0, [lr, #-1553]!	; 0xfffff9ef
    a5bc:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    a5c0:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    a5c4:	06202003 	strteq	r2, [r0], -r3
    a5c8:	052e6203 	streq	r6, [lr, #-515]!	; 0xfffffdfd
    a5cc:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    a5d0:	19054a17 	stmdbne	r5, {r0, r1, r2, r4, r9, fp, lr}
    a5d4:	1b052406 	blne	1535f4 <_Min_Heap_Size+0x152df4>
    a5d8:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    a5dc:	38052206 	stmdacc	r5, {r1, r2, r9, sp}
    a5e0:	11050106 	tstne	r5, r6, lsl #2
    a5e4:	3c150306 	ldccc	3, cr0, [r5], {6}
    a5e8:	02002e01 	andeq	r2, r0, #1, 28
    a5ec:	002e0104 	eoreq	r0, lr, r4, lsl #2
    a5f0:	01010402 	tsteq	r1, r2, lsl #8
    a5f4:	01040200 	mrseq	r0, R12_usr
    a5f8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    a5fc:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    a600:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    a604:	02003101 	andeq	r3, r0, #1073741824	; 0x40000000
    a608:	20200104 	eorcs	r0, r0, r4, lsl #2
    a60c:	0102204a 	tsteq	r2, sl, asr #32
    a610:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    a614:	02050001 	andeq	r0, r5, #1
    a618:	00000000 	andeq	r0, r0, r0
    a61c:	0110d803 	tsteq	r0, r3, lsl #16
    a620:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    a624:	13132106 	tstne	r3, #-2147483647	; 0x80000001
    a628:	14350513 	ldrtne	r0, [r5], #-1299	; 0xfffffaed
    a62c:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    a630:	2d05135f 	stccs	3, cr1, [r5, #-380]	; 0xfffffe84
    a634:	032f0513 			; <UNDEFINED> instruction: 0x032f0513
    a638:	05050110 	streq	r0, [r5, #-272]	; 0xfffffef0
    a63c:	05020417 	streq	r0, [r2, #-1047]	; 0xfffffbe9
    a640:	70ed0322 	rscvc	r0, sp, r2, lsr #6
    a644:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    a648:	9e0c0314 	mcrls	3, 0, r0, cr12, cr4, {0}
    a64c:	01040106 	tsteq	r4, r6, lsl #2
    a650:	03060905 	movweq	r0, #26885	; 0x6905
    a654:	05010f86 	streq	r0, [r1, #-3974]	; 0xfffff07a
    a658:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    a65c:	1505200b 	strne	r2, [r5, #-11]
    a660:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    a664:	05210637 	streq	r0, [r1, #-1591]!	; 0xfffff9c9
    a668:	02041505 	andeq	r1, r4, #20971520	; 0x1400000
    a66c:	ec031e05 	stc	14, cr1, [r3], {5}
    a670:	05050170 	streq	r0, [r5, #-368]	; 0xfffffe90
    a674:	042e0614 	strteq	r0, [lr], #-1556	; 0xfffff9ec
    a678:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    a67c:	010f9403 	tsteq	pc, r3, lsl #8
    a680:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    a684:	20130601 	andscs	r0, r3, r1, lsl #12
    a688:	03063005 	movweq	r3, #24581	; 0x6005
    a68c:	0d05206b 	stceq	0, cr2, [r5, #-428]	; 0xfffffe54
    a690:	06240516 			; <UNDEFINED> instruction: 0x06240516
    a694:	060d0501 	streq	r0, [sp], -r1, lsl #10
    a698:	2a052f21 	bcs	156324 <_Min_Heap_Size+0x155b24>
    a69c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    a6a0:	15052206 	strne	r2, [r5, #-518]	; 0xfffffdfa
    a6a4:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    a6a8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    a6ac:	02050001 	andeq	r0, r5, #1
    a6b0:	00000000 	andeq	r0, r0, r0
    a6b4:	01119503 	tsteq	r1, r3, lsl #10
    a6b8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    a6bc:	30052f06 	andcc	r2, r5, r6, lsl #30
    a6c0:	141b0514 	ldrne	r0, [fp], #-1300	; 0xfffffaec
    a6c4:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    a6c8:	12053009 	andne	r3, r5, #9
    a6cc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    a6d0:	33052206 	movwcc	r2, #20998	; 0x5206
    a6d4:	14050530 	strne	r0, [r5], #-1328	; 0xfffffad0
    a6d8:	13060105 	movwne	r0, #24837	; 0x6105
    a6dc:	0101002e 	tsteq	r1, lr, lsr #32
    a6e0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    a6e4:	00000002 	andeq	r0, r0, r2
    a6e8:	11a90300 			; <UNDEFINED> instruction: 0x11a90300
    a6ec:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    a6f0:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    a6f4:	05143005 	ldreq	r3, [r4, #-5]
    a6f8:	0505141c 	streq	r1, [r5, #-1052]	; 0xfffffbe4
    a6fc:	30090514 	andcc	r0, r9, r4, lsl r5
    a700:	01062d05 	tsteq	r6, r5, lsl #26
    a704:	05204105 	streq	r4, [r0, #-261]!	; 0xfffffefb
    a708:	05052012 	streq	r2, [r5, #-18]	; 0xffffffee
    a70c:	33052206 	movwcc	r2, #20998	; 0x5206
    a710:	14050530 	strne	r0, [r5], #-1328	; 0xfffffad0
    a714:	13060105 	movwne	r0, #24837	; 0x6105
    a718:	0101002e 	tsteq	r1, lr, lsr #32
    a71c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    a720:	00000002 	andeq	r0, r0, r2
    a724:	11be0300 			; <UNDEFINED> instruction: 0x11be0300
    a728:	13050501 	movwne	r0, #21761	; 0x5501
    a72c:	14370513 	ldrtne	r0, [r7], #-1299	; 0xfffffaed
    a730:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    a734:	0e051305 	cdpeq	3, 0, cr1, cr5, cr5, {0}
    a738:	3a050106 	bcc	14ab58 <_Min_Heap_Size+0x14a358>
    a73c:	05052206 	streq	r2, [r5, #-518]	; 0xfffffdfa
    a740:	06010514 			; <UNDEFINED> instruction: 0x06010514
    a744:	00010213 	andeq	r0, r1, r3, lsl r2
    a748:	01050101 	tsteq	r5, r1, lsl #2
    a74c:	00020500 	andeq	r0, r2, r0, lsl #10
    a750:	03000000 	movweq	r0, #0
    a754:	060111ce 	streq	r1, [r1], -lr, asr #3
    a758:	06050501 	streq	r0, [r5], -r1, lsl #10
    a75c:	14260521 	strtne	r0, [r6], #-1313	; 0xfffffadf
    a760:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    a764:	09051321 	stmdbeq	r5, {r0, r5, r8, r9, ip}
    a768:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    a76c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    a770:	01052e0b 	tsteq	r5, fp, lsl #28
    a774:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    a778:	7003060d 	andvc	r0, r3, sp, lsl #12
    a77c:	32250520 	eorcc	r0, r5, #32, 10	; 0x8000000
    a780:	0b031f05 	bleq	d239c <_Min_Heap_Size+0xd1b9c>
    a784:	06010501 	streq	r0, [r1], -r1, lsl #10
    a788:	00010213 	andeq	r0, r1, r3, lsl r2
    a78c:	01050101 	tsteq	r5, r1, lsl #2
    a790:	00020500 	andeq	r0, r2, r0, lsl #10
    a794:	03000000 	movweq	r0, #0
    a798:	050112a7 	streq	r1, [r1, #-679]	; 0xfffffd59
    a79c:	50051331 	andpl	r1, r5, r1, lsr r3
    a7a0:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    a7a4:	13060105 	movwne	r0, #24837	; 0x6105
    a7a8:	00010220 	andeq	r0, r1, r0, lsr #4
    a7ac:	01050101 	tsteq	r5, r1, lsl #2
    a7b0:	00020500 	andeq	r0, r2, r0, lsl #10
    a7b4:	03000000 	movweq	r0, #0
    a7b8:	050112b1 	streq	r1, [r1, #-689]	; 0xfffffd4f
    a7bc:	4c05132f 	stcmi	3, cr1, [r5], {47}	; 0x2f
    a7c0:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    a7c4:	13060105 	movwne	r0, #24837	; 0x6105
    a7c8:	00010220 	andeq	r0, r1, r0, lsr #4
    a7cc:	01050101 	tsteq	r5, r1, lsl #2
    a7d0:	00020500 	andeq	r0, r2, r0, lsl #10
    a7d4:	03000000 	movweq	r0, #0
    a7d8:	050114cb 	streq	r1, [r1, #-1227]	; 0xfffffb35
    a7dc:	05131305 	ldreq	r1, [r3, #-773]	; 0xfffffcfb
    a7e0:	1c051433 	cfstrsne	mvf1, [r5], {51}	; 0x33
    a7e4:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    a7e8:	01061005 	tsteq	r6, r5
    a7ec:	05200705 	streq	r0, [r0, #-1797]!	; 0xfffff8fb
    a7f0:	24202211 	strtcs	r2, [r0], #-529	; 0xfffffdef
    a7f4:	23063505 	movwcs	r3, #25861	; 0x6505
    a7f8:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    a7fc:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    a800:	01010001 	tsteq	r1, r1
    a804:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    a808:	00000002 	andeq	r0, r0, r2
    a80c:	14f80300 	ldrbtne	r0, [r8], #768	; 0x300
    a810:	13050501 	movwne	r0, #21761	; 0x5501
    a814:	14320513 	ldrtne	r0, [r2], #-1299	; 0xfffffaed
    a818:	05141c05 	ldreq	r1, [r4, #-3077]	; 0xfffff3fb
    a81c:	10051405 	andne	r1, r5, r5, lsl #8
    a820:	2e050106 	adfcss	f0, f5, f6
    a824:	20070520 	andcs	r0, r7, r0, lsr #10
    a828:	05341105 	ldreq	r1, [r4, #-261]!	; 0xfffffefb
    a82c:	05230634 	streq	r0, [r3, #-1588]!	; 0xfffff9cc
    a830:	01051405 	tsteq	r5, r5, lsl #8
    a834:	11051306 	tstne	r5, r6, lsl #6
    a838:	20207603 	eorcs	r7, r0, r3, lsl #12
    a83c:	01000102 	tsteq	r0, r2, lsl #2
    a840:	00050501 	andeq	r0, r5, r1, lsl #10
    a844:	1dfc0205 	lfmne	f0, 2, [ip, #20]!
    a848:	be030800 	cdplt	8, 0, cr0, cr3, cr0, {0}
    a84c:	01060118 	tsteq	r6, r8, lsl r1
    a850:	4b060905 	blmi	18cc6c <_Min_Heap_Size+0x18c46c>
    a854:	05145d05 	ldreq	r5, [r4, #-3333]	; 0xfffff2fb
    a858:	01100309 	tsteq	r0, r9, lsl #6
    a85c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    a860:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    a864:	00660604 	rsbeq	r0, r6, r4, lsl #12
    a868:	30060402 	andcc	r0, r6, r2, lsl #8
    a86c:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    a870:	01060604 	tsteq	r6, r4, lsl #12
    a874:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    a878:	05200604 	streq	r0, [r0, #-1540]!	; 0xfffff9fc
    a87c:	05270625 	streq	r0, [r7, #-1573]!	; 0xfffff9db
    a880:	35051509 	strcc	r1, [r5, #-1289]	; 0xfffffaf7
    a884:	0605053e 			; <UNDEFINED> instruction: 0x0605053e
    a888:	00090513 	andeq	r0, r9, r3, lsl r5
    a88c:	06010402 	streq	r0, [r1], -r2, lsl #8
    a890:	00207103 	eoreq	r7, r0, r3, lsl #2
    a894:	4a040402 	bmi	10b8a4 <_Min_Heap_Size+0x10b0a4>
    a898:	024f0d05 	subeq	r0, pc, #320	; 0x140
    a89c:	01010007 	tsteq	r1, r7
    a8a0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    a8a4:	00000002 	andeq	r0, r0, r2
    a8a8:	18e80300 	stmiane	r8!, {r8, r9}^
    a8ac:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    a8b0:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    a8b4:	09051439 	stmdbeq	r5, {r0, r3, r4, r5, sl, ip}
    a8b8:	06130514 			; <UNDEFINED> instruction: 0x06130514
    a8bc:	062f0501 	strteq	r0, [pc], -r1, lsl #10
    a8c0:	1409054c 	strne	r0, [r9], #-1356	; 0xfffffab4
    a8c4:	13060505 	movwne	r0, #25861	; 0x6505
    a8c8:	01000102 	tsteq	r0, r2, lsl #2
    a8cc:	00050501 	andeq	r0, r5, r1, lsl #10
    a8d0:	00000205 	andeq	r0, r0, r5, lsl #4
    a8d4:	fb030000 	blx	ca8de <_Min_Heap_Size+0xca0de>
    a8d8:	01060118 	tsteq	r6, r8, lsl r1
    a8dc:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    a8e0:	05144205 	ldreq	r4, [r4, #-517]	; 0xfffffdfb
    a8e4:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    a8e8:	06340530 			; <UNDEFINED> instruction: 0x06340530
    a8ec:	200f0501 	andcs	r0, pc, r1, lsl #10
    a8f0:	05231905 	streq	r1, [r3, #-2309]!	; 0xfffff6fb
    a8f4:	0e030609 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx9
    a8f8:	302e0520 	eorcc	r0, lr, r0, lsr #10
    a8fc:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    a900:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    a904:	6f030612 	svcvs	0x00030612
    a908:	0639052e 	ldrteq	r0, [r9], -lr, lsr #10
    a90c:	20140501 	andscs	r0, r4, r1, lsl #10
    a910:	28061105 	stmdacs	r6, {r0, r2, r8, ip}
    a914:	01064a05 	tsteq	r6, r5, lsl #20
    a918:	21061105 	tstcs	r6, r5, lsl #2
    a91c:	01061905 	tsteq	r6, r5, lsl #18
    a920:	02201b20 	eoreq	r1, r0, #32, 22	; 0x8000
    a924:	01010001 	tsteq	r1, r1
    a928:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    a92c:	00000002 	andeq	r0, r0, r2
    a930:	19a10300 	stmibne	r1!, {r8, r9}
    a934:	13090501 	movwne	r0, #38145	; 0x9501
    a938:	14470513 	strbne	r0, [r7], #-1299	; 0xfffffaed
    a93c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    a940:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    a944:	1505200b 	strne	r2, [r5, #-11]
    a948:	03050531 	movweq	r0, #21809	; 0x5531
    a94c:	60032017 	andvs	r2, r3, r7, lsl r0
    a950:	060e0520 	streq	r0, [lr], -r0, lsr #10
    a954:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    a958:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    a95c:	15052010 	strne	r2, [r5, #-16]
    a960:	06330525 	ldrteq	r0, [r3], -r5, lsr #10
    a964:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    a968:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    a96c:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    a970:	20740306 	rsbscs	r0, r4, r6, lsl #6
    a974:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
    a978:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    a97c:	2f30060d 	svccs	0x0030060d
    a980:	01061505 	tsteq	r6, r5, lsl #10
    a984:	01000202 	tsteq	r0, r2, lsl #4
    a988:	00050501 	andeq	r0, r5, r1, lsl #10
    a98c:	00000205 	andeq	r0, r0, r5, lsl #4
    a990:	ca030000 	bgt	ca998 <_Min_Heap_Size+0xca198>
    a994:	01060119 	tsteq	r6, r9, lsl r1
    a998:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    a99c:	01062005 	tsteq	r6, r5
    a9a0:	30064205 	andcc	r4, r6, r5, lsl #4
    a9a4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    a9a8:	20010612 	andcs	r0, r1, r2, lsl r6
    a9ac:	30063305 	andcc	r3, r6, r5, lsl #6
    a9b0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    a9b4:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    a9b8:	01010004 	tsteq	r1, r4
    a9bc:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    a9c0:	00000002 	andeq	r0, r0, r2
    a9c4:	19dc0300 	ldmibne	ip, {r8, r9}^
    a9c8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    a9cc:	052f0609 	streq	r0, [pc, #-1545]!	; a3cb <_Min_Heap_Size+0x9bcb>
    a9d0:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    a9d4:	0530063b 	ldreq	r0, [r0, #-1595]!	; 0xfffff9c5
    a9d8:	12051409 	andne	r1, r5, #150994944	; 0x9000000
    a9dc:	3a050106 	bcc	14adfc <_Min_Heap_Size+0x14a5fc>
    a9e0:	09053e06 	stmdbeq	r5, {r1, r2, r9, sl, fp, ip, sp}
    a9e4:	06050514 			; <UNDEFINED> instruction: 0x06050514
    a9e8:	00040213 	andeq	r0, r4, r3, lsl r2
    a9ec:	33140101 	tstcc	r4, #1073741824	; 0x40000000
    a9f0:	00030000 	andeq	r0, r3, r0
    a9f4:	0000022d 	andeq	r0, r0, sp, lsr #4
    a9f8:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    a9fc:	0101000d 	tsteq	r1, sp
    aa00:	00000101 	andeq	r0, r0, r1, lsl #2
    aa04:	00000100 	andeq	r0, r0, r0, lsl #2
    aa08:	2f2e2e01 	svccs	0x002e2e01
    aa0c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    aa10:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    aa14:	6f747262 	svcvs	0x00747262
    aa18:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    aa1c:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    aa20:	2e00534f 	cdpcs	3, 0, cr5, cr0, cr15, {2}
    aa24:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    aa28:	2f2e2e2f 	svccs	0x002e2e2f
    aa2c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    aa30:	2f736f74 	svccs	0x00736f74
    aa34:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    aa38:	534f5452 	movtpl	r5, #62546	; 0xf452
    aa3c:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    aa40:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    aa44:	43472f65 	movtmi	r2, #32613	; 0x7f65
    aa48:	52412f43 	subpl	r2, r1, #268	; 0x10c
    aa4c:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
    aa50:	2f004634 	svccs	0x00004634
    aa54:	2f74706f 	svccs	0x0074706f
    aa58:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    aa5c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    aa60:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    aa64:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    aa68:	30312d69 	eorscc	r2, r1, r9, ror #26
    aa6c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    aa70:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    aa74:	6c2f3031 	stcvs	0, cr3, [pc], #-196	; a9b8 <_Min_Heap_Size+0xa1b8>
    aa78:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
    aa7c:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
    aa80:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    aa84:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    aa88:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    aa8c:	2e30312f 	rsfcssp	f3, f0, #10.0
    aa90:	2f312e33 	svccs	0x00312e33
    aa94:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    aa98:	00656475 	rsbeq	r6, r5, r5, ror r4
    aa9c:	74706f2f 	ldrbtvc	r6, [r0], #-3887	; 0xfffff0d1
    aaa0:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    aaa4:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    aaa8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    aaac:	61652d65 	cmnvs	r5, r5, ror #26
    aab0:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    aab4:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    aab8:	31323032 	teqcc	r2, r2, lsr r0
    aabc:	2f30312e 	svccs	0x0030312e
    aac0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    aac4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    aac8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    aacc:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
    aad0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    aad4:	616d2f65 	cmnvs	sp, r5, ror #30
    aad8:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    aadc:	6f2f0065 	svcvs	0x002f0065
    aae0:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
    aae4:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    aae8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    aaec:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    aaf0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    aaf4:	2e30312d 	rsfcssp	f3, f0, #5.0
    aaf8:	30322d33 	eorscc	r2, r2, r3, lsr sp
    aafc:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    ab00:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
    ab04:	6f6e2d6d 	svcvs	0x006e2d6d
    ab08:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    ab0c:	2f696261 	svccs	0x00696261
    ab10:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    ab14:	2f656475 	svccs	0x00656475
    ab18:	00737973 	rsbseq	r7, r3, r3, ror r9
    ab1c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    ab20:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    ab24:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    ab28:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    ab2c:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    ab30:	4f545265 	svcmi	0x00545265
    ab34:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    ab38:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    ab3c:	6f2f0065 	svcvs	0x002f0065
    ab40:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
    ab44:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    ab48:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    ab4c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    ab50:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    ab54:	2e30312d 	rsfcssp	f3, f0, #5.0
    ab58:	30322d33 	eorscc	r2, r2, r3, lsr sp
    ab5c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    ab60:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
    ab64:	6f6e2d6d 	svcvs	0x006e2d6d
    ab68:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    ab6c:	2f696261 	svccs	0x00696261
    ab70:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    ab74:	00656475 	rsbeq	r6, r5, r5, ror r4
    ab78:	73617400 	cmnvc	r1, #0, 8
    ab7c:	632e736b 			; <UNDEFINED> instruction: 0x632e736b
    ab80:	00000100 	andeq	r0, r0, r0, lsl #2
    ab84:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    ab88:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    ab8c:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    ab90:	73000002 	movwvc	r0, #2
    ab94:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    ab98:	00682e66 	rsbeq	r2, r8, r6, ror #28
    ab9c:	5f000003 	svcpl	0x00000003
    aba0:	61666564 	cmnvs	r6, r4, ror #10
    aba4:	5f746c75 	svcpl	0x00746c75
    aba8:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    abac:	00682e73 	rsbeq	r2, r8, r3, ror lr
    abb0:	5f000004 	svcpl	0x00000004
    abb4:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    abb8:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    abbc:	00000500 	andeq	r0, r0, r0, lsl #10
    abc0:	6a6f7270 	bvs	1be7588 <_Min_Heap_Size+0x1be6d88>
    abc4:	73666564 	cmnvc	r6, #100, 10	; 0x19000000
    abc8:	0600682e 	streq	r6, [r0], -lr, lsr #16
    abcc:	72460000 	subvc	r0, r6, #0
    abd0:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    abd4:	682e534f 	stmdavs	lr!, {r0, r1, r2, r3, r6, r8, r9, ip, lr}
    abd8:	00000600 	andeq	r0, r0, r0, lsl #12
    abdc:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    abe0:	0600682e 	streq	r6, [r0], -lr, lsr #16
    abe4:	61740000 	cmnvs	r4, r0
    abe8:	682e6b73 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    abec:	00000600 	andeq	r0, r0, r0, lsl #12
    abf0:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    abf4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    abf8:	0600682e 	streq	r6, [r0], -lr, lsr #16
    abfc:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
    ac00:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
    ac04:	0600682e 	streq	r6, [r0], -lr, lsr #16
    ac08:	74730000 	ldrbtvc	r0, [r3], #-0
    ac0c:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    ac10:	0700682e 	streq	r6, [r0, -lr, lsr #16]
    ac14:	623c0000 	eorsvs	r0, ip, #0
    ac18:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    ac1c:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    ac20:	00000000 	andeq	r0, r0, r0
    ac24:	00050500 	andeq	r0, r5, r0, lsl #10
    ac28:	00000205 	andeq	r0, r0, r5, lsl #4
    ac2c:	d3030000 	movwle	r0, #12288	; 0x3000
    ac30:	09050119 	stmdbeq	r5, {r0, r3, r4, r8}
    ac34:	1e051313 	mcrne	3, 0, r1, cr5, cr3, {0}
    ac38:	15090518 	strne	r0, [r9, #-1304]	; 0xfffffae8
    ac3c:	01060d05 	tsteq	r6, r5, lsl #26
    ac40:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    ac44:	3c760314 	ldclcc	3, cr0, [r6], #-80	; 0xffffffb0
    ac48:	060d0520 	streq	r0, [sp], -r0, lsr #10
    ac4c:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    ac50:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    ac54:	1405200f 	strne	r2, [r5], #-15
    ac58:	203c7303 	eorscs	r7, ip, r3, lsl #6
    ac5c:	03061105 	movweq	r1, #24837	; 0x6105
    ac60:	13052011 	movwne	r2, #20497	; 0x5011
    ac64:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    ac68:	20206f03 	eorcs	r6, r0, r3, lsl #30
    ac6c:	03061d05 	movweq	r1, #27909	; 0x6d05
    ac70:	35052020 	strcc	r2, [r5, #-32]	; 0xffffffe0
    ac74:	1f050106 	svcne	0x00050106
    ac78:	006e054a 	rsbeq	r0, lr, sl, asr #10
    ac7c:	06020402 	streq	r0, [r2], -r2, lsl #8
    ac80:	006f052c 	rsbeq	r0, pc, ip, lsr #10
    ac84:	06020402 	streq	r0, [r2], -r2, lsl #8
    ac88:	04020001 	streq	r0, [r2], #-1
    ac8c:	20052002 	andcs	r2, r5, r2
    ac90:	00340520 	eorseq	r0, r4, r0, lsr #10
    ac94:	06010402 	streq	r0, [r1], -r2, lsl #8
    ac98:	00190520 	andseq	r0, r9, r0, lsr #10
    ac9c:	06010402 	streq	r0, [r1], -r2, lsl #8
    aca0:	2c210501 	cfstr32cs	mvfx0, [r1], #-4
    aca4:	26290520 	strtcs	r0, [r9], -r0, lsr #10
    aca8:	06250520 	strteq	r0, [r5], -r0, lsr #10
    acac:	05011703 	streq	r1, [r1, #-1795]	; 0xfffff8fd
    acb0:	05051509 	streq	r1, [r5, #-1289]	; 0xfffffaf7
    acb4:	05021306 	streq	r1, [r2, #-774]	; 0xfffffcfa
    acb8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    acbc:	02050005 	andeq	r0, r5, #5
    acc0:	08001e50 	stmdaeq	r0, {r4, r6, r9, sl, fp, ip}
    acc4:	011eb603 	tsteq	lr, r3, lsl #12
    acc8:	13130905 	tstne	r3, #81920	; 0x14000
    accc:	051a0d05 	ldreq	r0, [sl, #-3333]	; 0xfffff2fb
    acd0:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    acd4:	2c052e0f 	stccs	14, cr2, [r5], {15}
    acd8:	06090522 	streq	r0, [r9], -r2, lsr #10
    acdc:	05201303 	streq	r1, [r0, #-771]!	; 0xfffffcfd
    ace0:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    ace4:	0e053c0b 	cdpeq	12, 0, cr3, cr5, cr11, {0}
    ace8:	12052406 	andne	r2, r5, #100663296	; 0x6000000
    acec:	10050106 	andne	r0, r5, r6, lsl #2
    acf0:	060e052e 	streq	r0, [lr], -lr, lsr #10
    acf4:	06100535 			; <UNDEFINED> instruction: 0x06100535
    acf8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    acfc:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
    ad00:	20010615 	andcs	r0, r1, r5, lsl r6
    ad04:	21060d05 	tstcs	r6, r5, lsl #26
    ad08:	2e061505 	cfsh32cs	mvfx1, mvfx6, #5
    ad0c:	206d0320 	rsbcs	r0, sp, r0, lsr #6
    ad10:	03060905 	movweq	r0, #26885	; 0x6905
    ad14:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    ad18:	0c021306 	stceq	3, cr1, [r2], {6}
    ad1c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    ad20:	02050005 	andeq	r0, r5, #5
    ad24:	00000000 	andeq	r0, r0, r0
    ad28:	0120df03 			; <UNDEFINED> instruction: 0x0120df03
    ad2c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    ad30:	13132106 	tstne	r3, #-2147483647	; 0x80000001
    ad34:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    ad38:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    ad3c:	16210609 	strtne	r0, [r1], -r9, lsl #12
    ad40:	01060d05 	tsteq	r6, r5, lsl #26
    ad44:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    ad48:	0530060d 	ldreq	r0, [r0, #-1549]!	; 0xfffff9f3
    ad4c:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    ad50:	20740311 	rsbscs	r0, r4, r1, lsl r3
    ad54:	0c030d05 	stceq	13, cr0, [r3], {5}
    ad58:	03220520 			; <UNDEFINED> instruction: 0x03220520
    ad5c:	11052018 	tstne	r5, r8, lsl r0
    ad60:	200e0306 	andcs	r0, lr, r6, lsl #6
    ad64:	01061305 	tsteq	r6, r5, lsl #6
    ad68:	02005805 	andeq	r5, r0, #327680	; 0x50000
    ad6c:	03060204 	movweq	r0, #25092	; 0x6204
    ad70:	6305205a 	movwvs	r2, #20570	; 0x505a
    ad74:	02040200 	andeq	r0, r4, #0, 4
    ad78:	3d050106 	stfccs	f0, [r5, #-24]	; 0xffffffe8
    ad7c:	01040200 	mrseq	r0, R12_usr
    ad80:	0d052006 	stceq	0, cr2, [r5, #-24]	; 0xffffffe8
    ad84:	01040200 	mrseq	r0, R12_usr
    ad88:	11050106 	tstne	r5, r6, lsl #2
    ad8c:	17053306 	strne	r3, [r5, -r6, lsl #6]
    ad90:	11050106 	tstne	r5, r6, lsl #2
    ad94:	05142406 	ldreq	r2, [r4, #-1030]	; 0xfffffbfa
    ad98:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    ad9c:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
    ada0:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    ada4:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    ada8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    adac:	05300615 	ldreq	r0, [r0, #-1557]!	; 0xfffff9eb
    adb0:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    adb4:	053e0615 	ldreq	r0, [lr, #-1557]!	; 0xfffff9eb
    adb8:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    adbc:	1a052e17 	bne	156620 <_Min_Heap_Size+0x155e20>
    adc0:	1c053306 	stcne	3, cr3, [r5], {6}
    adc4:	31050106 	tstcc	r5, r6, lsl #2
    adc8:	02040200 	andeq	r0, r4, #0, 4
    adcc:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    add0:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    add4:	05150204 	ldreq	r0, [r5, #-516]	; 0xfffffdfc
    add8:	0402005a 	streq	r0, [r2], #-90	; 0xffffffa6
    addc:	016b0302 	cmneq	fp, r2, lsl #6
    ade0:	02005b05 	andeq	r5, r0, #5120	; 0x1400
    ade4:	01060204 	tsteq	r6, r4, lsl #4
    ade8:	02040200 	andeq	r0, r4, #0, 4
    adec:	03110520 	tsteq	r1, #32, 10	; 0x8000000
    adf0:	25052069 	strcs	r2, [r5, #-105]	; 0xffffff97
    adf4:	203b0306 	eorscs	r0, fp, r6, lsl #6
    adf8:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    adfc:	20130605 	andscs	r0, r3, r5, lsl #12
    ae00:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    ae04:	02050005 	andeq	r0, r5, #5
    ae08:	00000000 	andeq	r0, r0, r0
    ae0c:	0131a303 	teqeq	r1, r3, lsl #6
    ae10:	14130905 	ldrne	r0, [r3], #-2309	; 0xfffff6fb
    ae14:	10062005 	andne	r2, r6, r5
    ae18:	05220e05 	streq	r0, [r2, #-3589]!	; 0xfffff1fb
    ae1c:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    ae20:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    ae24:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    ae28:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    ae2c:	051d060e 	ldreq	r0, [sp, #-1550]	; 0xfffff9f2
    ae30:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    ae34:	0905200e 	stmdbeq	r5, {r1, r2, r3, sp}
    ae38:	05143406 	ldreq	r3, [r4, #-1030]	; 0xfffffbfa
    ae3c:	20130605 	andscs	r0, r3, r5, lsl #12
    ae40:	01000102 	tsteq	r0, r2, lsl #2
    ae44:	00010501 	andeq	r0, r1, r1, lsl #10
    ae48:	1e900205 	cdpne	2, 9, cr0, cr0, cr5, {0}
    ae4c:	b8030800 	stmdalt	r3, {fp}
    ae50:	05050132 	streq	r0, [r5, #-306]	; 0xfffffece
    ae54:	06090513 			; <UNDEFINED> instruction: 0x06090513
    ae58:	3c070501 	cfstr32cc	mvfx0, [r7], {1}
    ae5c:	26060905 	strcs	r0, [r6], -r5, lsl #18
    ae60:	01061e05 	tsteq	r6, r5, lsl #28
    ae64:	60060905 	andvs	r0, r6, r5, lsl #18
    ae68:	01062005 	tsteq	r6, r5
    ae6c:	054a1e05 	strbeq	r1, [sl, #-3589]	; 0xfffff1fb
    ae70:	05023001 	streq	r3, [r2, #-1]
    ae74:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    ae78:	02050001 	andeq	r0, r5, #1
    ae7c:	08001eb8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sl, fp, ip}
    ae80:	010e8803 	tsteq	lr, r3, lsl #16
    ae84:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    ae88:	05139f06 	ldreq	r9, [r3, #-3846]	; 0xfffff0fa
    ae8c:	01150309 	tsteq	r5, r9, lsl #6
    ae90:	01061205 	tsteq	r6, r5, lsl #4
    ae94:	05202020 	streq	r2, [r0, #-32]!	; 0xffffffe0
    ae98:	0a030609 	beq	cc6c4 <_Min_Heap_Size+0xcbec4>
    ae9c:	0623052e 	strteq	r0, [r3], -lr, lsr #10
    aea0:	202c0501 	eorcs	r0, ip, r1, lsl #10
    aea4:	053c1605 	ldreq	r1, [ip, #-1541]!	; 0xfffff9fb
    aea8:	052f0609 	streq	r0, [pc, #-1545]!	; a8a7 <_Min_Heap_Size+0xa0a7>
    aeac:	05010657 	streq	r0, [r1, #-1623]	; 0xfffff9a9
    aeb0:	31060181 	smlabbcc	r6, r1, r1, r0
    aeb4:	19030505 	stmdbne	r3, {r0, r2, r8, sl}
    aeb8:	06070501 	streq	r0, [r7], -r1, lsl #10
    aebc:	22100501 	andscs	r0, r0, #4194304	; 0x400000
    aec0:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    aec4:	2e060104 	adfcss	f0, f6, f4
    aec8:	02000905 	andeq	r0, r0, #81920	; 0x14000
    aecc:	01060104 	tsteq	r6, r4, lsl #2
    aed0:	3e060d05 	cdpcc	13, 0, cr0, cr6, cr5, {0}
    aed4:	01062f05 	tsteq	r6, r5, lsl #30
    aed8:	052e2705 	streq	r2, [lr, #-1797]!	; 0xfffff8fb
    aedc:	054f060d 	strbeq	r0, [pc, #-1549]	; a8d7 <_Min_Heap_Size+0xa0d7>
    aee0:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    aee4:	29052e0f 	stmdbcs	r5, {r0, r1, r2, r3, r9, sl, fp, sp}
    aee8:	02040200 	andeq	r0, r4, #0, 4
    aeec:	52052606 	andpl	r2, r5, #6291456	; 0x600000
    aef0:	02040200 	andeq	r0, r4, #0, 4
    aef4:	05017303 	streq	r7, [r1, #-771]	; 0xfffffcfd
    aef8:	04020053 	streq	r0, [r2], #-83	; 0xffffffad
    aefc:	00010602 	andeq	r0, r1, r2, lsl #12
    af00:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    af04:	03060905 	movweq	r0, #26885	; 0x6905
    af08:	3e052013 	mcrcc	0, 0, r2, cr5, cr3, {0}
    af0c:	21050106 	tstcs	r5, r6, lsl #2
    af10:	36054006 	strcc	r4, [r5], -r6
    af14:	14050516 	strne	r0, [r5], #-1302	; 0xfffffaea
    af18:	01060705 	tsteq	r6, r5, lsl #14
    af1c:	05301405 	ldreq	r1, [r0, #-1029]!	; 0xfffffbfb
    af20:	05240621 	streq	r0, [r4, #-1569]!	; 0xfffff9df
    af24:	1a051505 	bne	150340 <_Min_Heap_Size+0x14fb40>
    af28:	09050106 	stmdbeq	r5, {r1, r2, r8}
    af2c:	22052306 	andcs	r2, r5, #402653184	; 0x18000000
    af30:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    af34:	4e3d2406 	cdpmi	4, 3, cr2, cr13, cr6, {0}
    af38:	062e0623 	strteq	r0, [lr], -r3, lsr #12
    af3c:	03090521 	movweq	r0, #38177	; 0x9521
    af40:	0d052009 	stceq	0, cr2, [r5, #-36]	; 0xffffffdc
    af44:	05013903 	streq	r3, [r1, #-2307]	; 0xfffff6fd
    af48:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    af4c:	05055824 	streq	r5, [r5, #-2084]	; 0xfffff7dc
    af50:	20130306 	andscs	r0, r3, r6, lsl #6
    af54:	01060705 	tsteq	r6, r5, lsl #14
    af58:	40060905 	andmi	r0, r6, r5, lsl #18
    af5c:	01061805 	tsteq	r6, r5, lsl #16
    af60:	32062105 	andcc	r2, r6, #1073741825	; 0x40000001
    af64:	14060105 	strne	r0, [r6], #-261	; 0xfffffefb
    af68:	0101002e 	tsteq	r1, lr, lsr #32
    af6c:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    af70:	001f4c02 	andseq	r4, pc, r2, lsl #24
    af74:	09ed0308 	stmibeq	sp!, {r3, r8, r9}^
    af78:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    af7c:	05590609 	ldrbeq	r0, [r9, #-1545]	; 0xfffff9f7
    af80:	2d05142f 	cfstrscs	mvf1, [r5, #-188]	; 0xffffff44
    af84:	03090513 	movweq	r0, #38163	; 0x9513
    af88:	0b05010d 	bleq	14b3c4 <_Min_Heap_Size+0x14abc4>
    af8c:	26050106 	strcs	r0, [r5], -r6, lsl #2
    af90:	01040200 	mrseq	r0, R12_usr
    af94:	060d0558 			; <UNDEFINED> instruction: 0x060d0558
    af98:	16051327 	strne	r1, [r5], -r7, lsr #6
    af9c:	20200106 	eorcs	r0, r0, r6, lsl #2
    afa0:	060d0520 	streq	r0, [sp], -r0, lsr #10
    afa4:	061f052f 	ldreq	r0, [pc], -pc, lsr #10
    afa8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    afac:	06310526 	ldrteq	r0, [r1], -r6, lsr #10
    afb0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    afb4:	06160540 	ldreq	r0, [r6], -r0, asr #10
    afb8:	05c87403 	strbeq	r7, [r8, #1027]	; 0x403
    afbc:	20140305 	andscs	r0, r4, r5, lsl #6
    afc0:	20381605 	eorscs	r1, r8, r5, lsl #12
    afc4:	06090520 	streq	r0, [r9], -r0, lsr #10
    afc8:	06100523 	ldreq	r0, [r0], -r3, lsr #10
    afcc:	00010201 	andeq	r0, r1, r1, lsl #4
    afd0:	01050101 	tsteq	r5, r1, lsl #2
    afd4:	a0020500 	andge	r0, r2, r0, lsl #10
    afd8:	0308001f 	movweq	r0, #32799	; 0x801f
    afdc:	05012efb 	streq	r2, [r1, #-3835]	; 0xfffff105
    afe0:	05142105 	ldreq	r2, [r4, #-261]	; 0xfffffefb
    afe4:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    afe8:	09052005 	stmdbeq	r5, {r0, r2, sp}
    afec:	03040200 	movweq	r0, #16896	; 0x4200
    aff0:	5e052206 	cdppl	2, 0, cr2, cr5, cr6, {0}
    aff4:	03040200 	movweq	r0, #16896	; 0x4200
    aff8:	00680572 	rsbeq	r0, r8, r2, ror r5
    affc:	06030402 	streq	r0, [r3], -r2, lsl #8
    b000:	002b0501 	eoreq	r0, fp, r1, lsl #10
    b004:	06010402 	streq	r0, [r1], -r2, lsl #8
    b008:	00050520 	andeq	r0, r5, r0, lsr #10
    b00c:	06010402 	streq	r0, [r1], -r2, lsl #8
    b010:	4b330601 	blmi	ccc81c <_Min_Heap_Size+0xccc01c>
    b014:	3d062006 	stccc	0, cr2, [r6, #-24]	; 0xffffffe8
    b018:	42400905 	submi	r0, r0, #81920	; 0x14000
    b01c:	05420505 	strbeq	r0, [r2, #-1285]	; 0xfffffafb
    b020:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    b024:	052f0605 	streq	r0, [pc, #-1541]!	; aa27 <_Min_Heap_Size+0xa227>
    b028:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    b02c:	12022f01 	andne	r2, r2, #1, 30
    b030:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    b034:	02050005 	andeq	r0, r5, #5
    b038:	08002008 	stmdaeq	r0, {r3, sp}
    b03c:	010fe303 	tsteq	pc, r3, lsl #6
    b040:	09050106 	stmdbeq	r5, {r1, r2, r8}
    b044:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
    b048:	06260530 			; <UNDEFINED> instruction: 0x06260530
    b04c:	3c240501 	cfstr32cc	mvfx0, [r4], #-4
    b050:	22060d05 	andcs	r0, r6, #320	; 0x140
    b054:	01061e05 	tsteq	r6, r5, lsl #28
    b058:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    b05c:	17030611 	smladne	r3, r1, r6, r0
    b060:	06270520 	strteq	r0, [r7], -r0, lsr #10
    b064:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    b068:	22061505 	andcs	r1, r6, #20971520	; 0x1400000
    b06c:	01062505 	tsteq	r6, r5, lsl #10
    b070:	053c3d05 	ldreq	r3, [ip, #-3333]!	; 0xfffff2fb
    b074:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    b078:	26053006 	strcs	r3, [r5], -r6
    b07c:	11050106 	tstne	r5, r6, lsl #2
    b080:	3c690306 	stclcc	3, cr0, [r9], #-24	; 0xffffffe8
    b084:	01061e05 	tsteq	r6, r5, lsl #28
    b088:	30061105 	andcc	r1, r6, r5, lsl #2
    b08c:	01062c05 	tsteq	r6, r5, lsl #24
    b090:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    b094:	1e03062d 	cfmadd32ne	mvax1, mvfx0, mvfx3, mvfx13
    b098:	160d052e 	strne	r0, [sp], -lr, lsr #10
    b09c:	01061905 	tsteq	r6, r5, lsl #18
    b0a0:	52062905 	andpl	r2, r6, #81920	; 0x14000
    b0a4:	01140d05 	tsteq	r4, r5, lsl #26
    b0a8:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    b0ac:	00580104 	subseq	r0, r8, r4, lsl #2
    b0b0:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    b0b4:	03040200 	movweq	r0, #16896	; 0x4200
    b0b8:	04020001 	streq	r0, [r2], #-1
    b0bc:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    b0c0:	00660304 	rsbeq	r0, r6, r4, lsl #6
    b0c4:	01030402 	tsteq	r3, r2, lsl #8
    b0c8:	03040200 	movweq	r0, #16896	; 0x4200
    b0cc:	04020001 	streq	r0, [r2], #-1
    b0d0:	02002003 	andeq	r2, r0, #3
    b0d4:	002e0304 	eoreq	r0, lr, r4, lsl #6
    b0d8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    b0dc:	03040200 	movweq	r0, #16896	; 0x4200
    b0e0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    b0e4:	00200603 	eoreq	r0, r0, r3, lsl #12
    b0e8:	06030402 	streq	r0, [r3], -r2, lsl #8
    b0ec:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    b0f0:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    b0f4:	00010304 	andeq	r0, r1, r4, lsl #6
    b0f8:	01030402 	tsteq	r3, r2, lsl #8
    b0fc:	03040200 	movweq	r0, #16896	; 0x4200
    b100:	00090514 	andeq	r0, r9, r4, lsl r5
    b104:	14030402 	strne	r0, [r3], #-1026	; 0xfffffbfe
    b108:	03040200 	movweq	r0, #16896	; 0x4200
    b10c:	001f0530 	andseq	r0, pc, r0, lsr r5	; <UNPREDICTABLE>
    b110:	06030402 	streq	r0, [r3], -r2, lsl #8
    b114:	000b0501 	andeq	r0, fp, r1, lsl #10
    b118:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    b11c:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    b120:	04020001 	streq	r0, [r2], #-1
    b124:	02006601 	andeq	r6, r0, #1048576	; 0x100000
    b128:	00660104 	rsbeq	r0, r6, r4, lsl #2
    b12c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    b130:	01040200 	mrseq	r0, R12_usr
    b134:	0025052e 	eoreq	r0, r5, lr, lsr #10
    b138:	16010402 	strne	r0, [r1], -r2, lsl #8
    b13c:	14060505 	strne	r0, [r6], #-1285	; 0xfffffafb
    b140:	03061505 	movweq	r1, #25861	; 0x6505
    b144:	10022049 	andne	r2, r2, r9, asr #32
    b148:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    b14c:	02050005 	andeq	r0, r5, #5
    b150:	080020d4 	stmdaeq	r0, {r2, r4, r6, r7, sp}
    b154:	010cd903 	tsteq	ip, r3, lsl #18
    b158:	09050106 	stmdbeq	r5, {r1, r2, r8}
    b15c:	0d057506 	cfstr32eq	mvfx7, [r5, #-24]	; 0xffffffe8
    b160:	18012503 	stmdane	r1, {r0, r1, r8, sl, sp}
    b164:	01061705 	tsteq	r6, r5, lsl #14
    b168:	060d0520 	streq	r0, [sp], -r0, lsr #10
    b16c:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    b170:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    b174:	06280534 			; <UNDEFINED> instruction: 0x06280534
    b178:	11052001 	tstne	r5, r1
    b17c:	13053006 	movwne	r3, #20486	; 0x5006
    b180:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    b184:	1e053006 	cdpne	0, 0, cr3, cr5, cr6, {0}
    b188:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    b18c:	27054d06 	strcs	r4, [r5, -r6, lsl #26]
    b190:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    b194:	10030609 	andne	r0, r3, r9, lsl #12
    b198:	060b0501 	streq	r0, [fp], -r1, lsl #10
    b19c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    b1a0:	06310526 	ldrteq	r0, [r1], -r6, lsr #10
    b1a4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    b1a8:	06050540 	streq	r0, [r5], -r0, asr #10
    b1ac:	061505be 			; <UNDEFINED> instruction: 0x061505be
    b1b0:	064a6803 	strbeq	r6, [sl], -r3, lsl #16
    b1b4:	411a0520 	tstmi	sl, r0, lsr #10
    b1b8:	03060905 	movweq	r0, #26885	; 0x6905
    b1bc:	10052012 	andne	r2, r5, r2, lsl r0
    b1c0:	01020106 	tsteq	r2, r6, lsl #2
    b1c4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    b1c8:	02050005 	andeq	r0, r5, #5
    b1cc:	08002136 	stmdaeq	r0, {r1, r2, r4, r5, r8, sp}
    b1d0:	01328303 	teqeq	r2, r3, lsl #6
    b1d4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    b1d8:	0d053206 	sfmeq	f3, 4, [r5, #-24]	; 0xffffffe8
    b1dc:	05011503 	streq	r1, [r1, #-1283]	; 0xfffffafd
    b1e0:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    b1e4:	12052e0f 	andne	r2, r5, #15, 28	; 0xf0
    b1e8:	14052706 	strne	r2, [r5], #-1798	; 0xfffff8fa
    b1ec:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    b1f0:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
    b1f4:	6e030611 	mcrvs	6, 0, r0, cr3, cr1, {0}
    b1f8:	06200620 	strteq	r0, [r0], -r0, lsr #12
    b1fc:	6605502f 	strvs	r5, [r5], -pc, lsr #32
    b200:	13290534 			; <UNDEFINED> instruction: 0x13290534
    b204:	16060505 	strne	r0, [r6], -r5, lsl #10
    b208:	01000102 	tsteq	r0, r2, lsl #2
    b20c:	00010501 	andeq	r0, r1, r1, lsl #10
    b210:	215c0205 	cmpcs	ip, r5, lsl #4
    b214:	9b030800 	blls	cd21c <_Min_Heap_Size+0xcca1c>
    b218:	0905012f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r8}
    b21c:	0e051617 	mcreq	6, 0, r1, cr5, cr7, {0}
    b220:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    b224:	2e0e0501 	cfsh32cs	mvfx0, mvfx14, #1
    b228:	77030105 	strvc	r0, [r3, -r5, lsl #2]
    b22c:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    b230:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    b234:	21053419 	tstcs	r5, r9, lsl r4
    b238:	1f050106 	svcne	0x00050106
    b23c:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    b240:	06220521 	strteq	r0, [r2], -r1, lsr #10
    b244:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    b248:	11054b3d 	tstne	r5, sp, lsr fp
    b24c:	0e05304d 	cdpeq	0, 0, cr3, cr5, cr13, {2}
    b250:	053c6e03 	ldreq	r6, [ip, #-3587]!	; 0xfffff1fd
    b254:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    b258:	01052e0e 	tsteq	r5, lr, lsl #28
    b25c:	202e3f03 	eorcs	r3, lr, r3, lsl #30
    b260:	01000802 	tsteq	r0, r2, lsl #16
    b264:	00010501 	andeq	r0, r1, r1, lsl #10
    b268:	21a80205 			; <UNDEFINED> instruction: 0x21a80205
    b26c:	e0030800 	and	r0, r3, r0, lsl #16
    b270:	060100c1 	streq	r0, [r1], -r1, asr #1
    b274:	06050501 	streq	r0, [r5], -r1, lsl #10
    b278:	1605134b 	strne	r1, [r5], -fp, asr #6
    b27c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    b280:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    b284:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    b288:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    b28c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    b290:	15054306 	strne	r4, [r5, #-774]	; 0xfffffcfa
    b294:	26050106 	strcs	r0, [r5], -r6, lsl #2
    b298:	0505202e 	streq	r2, [r5, #-46]	; 0xffffffd2
    b29c:	26053406 	strcs	r3, [r5], -r6, lsl #8
    b2a0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    b2a4:	06210520 	strteq	r0, [r1], -r0, lsr #10
    b2a8:	17090544 	strne	r0, [r9, -r4, asr #10]
    b2ac:	01060b05 	tsteq	r6, r5, lsl #22
    b2b0:	03060d05 	movweq	r0, #27909	; 0x6d05
    b2b4:	19053c0c 	stmdbne	r5, {r2, r3, sl, fp, ip, sp}
    b2b8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    b2bc:	053e2306 	ldreq	r2, [lr, #-774]!	; 0xfffffcfa
    b2c0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    b2c4:	0532063b 	ldreq	r0, [r2, #-1595]!	; 0xfffff9c5
    b2c8:	44051311 	strmi	r1, [r5], #-785	; 0xfffffcef
    b2cc:	11050106 	tstne	r5, r6, lsl #2
    b2d0:	0301052e 	movweq	r0, #5422	; 0x152e
    b2d4:	2f054a3e 	svccs	0x00054a3e
    b2d8:	01040200 	mrseq	r0, R12_usr
    b2dc:	2e7fac03 	cdpcs	12, 7, cr10, cr15, cr3, {0}
    b2e0:	33060d05 	movwcc	r0, #27909	; 0x6d05
    b2e4:	01012e01 	tsteq	r1, r1, lsl #28
    b2e8:	062e063c 			; <UNDEFINED> instruction: 0x062e063c
    b2ec:	2e3c3c20 	cdpcs	12, 3, cr3, cr12, cr0, {1}
    b2f0:	0332053c 	teqeq	r2, #60, 10	; 0xf000000
    b2f4:	11052017 	tstne	r5, r7, lsl r0
    b2f8:	063c0513 			; <UNDEFINED> instruction: 0x063c0513
    b2fc:	2e110501 	cfmul32cs	mvfx0, mvfx1, mvfx1
    b300:	21054f06 	tstcs	r5, r6, lsl #30
    b304:	13050106 	movwne	r0, #20742	; 0x5106
    b308:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    b30c:	062a0530 			; <UNDEFINED> instruction: 0x062a0530
    b310:	062d0501 	strteq	r0, [sp], -r1, lsl #10
    b314:	06010532 			; <UNDEFINED> instruction: 0x06010532
    b318:	02012c03 	andeq	r2, r1, #768	; 0x300
    b31c:	0101000d 	tsteq	r1, sp
    b320:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    b324:	00225002 	eoreq	r5, r2, r2
    b328:	0aa30308 	beq	fe8cbf50 <_estack+0xde8c25b0>
    b32c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    b330:	052f0609 	streq	r0, [pc, #-1545]!	; ad2f <_Min_Heap_Size+0xa52f>
    b334:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    b338:	052f0609 	streq	r0, [pc, #-1545]!	; ad37 <_Min_Heap_Size+0xa537>
    b33c:	05140181 	ldreq	r0, [r4, #-385]	; 0xfffffe7f
    b340:	14051409 	strne	r1, [r5], #-1033	; 0xfffffbf7
    b344:	09050106 	stmdbeq	r5, {r1, r2, r8}
    b348:	0b05a006 	bleq	173368 <_Min_Heap_Size+0x172b68>
    b34c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    b350:	20090306 	andcs	r0, r9, r6, lsl #6
    b354:	05322505 	ldreq	r2, [r2, #-1285]!	; 0xfffffafb
    b358:	09051531 	stmdbeq	r5, {r0, r4, r5, r8, sl, ip}
    b35c:	06050514 			; <UNDEFINED> instruction: 0x06050514
    b360:	01003c13 	tsteq	r0, r3, lsl ip
    b364:	00050501 	andeq	r0, r5, r1, lsl #10
    b368:	22780205 	rsbscs	r0, r8, #1342177280	; 0x50000000
    b36c:	bb030800 	bllt	cd374 <_Min_Heap_Size+0xccb74>
    b370:	0106010d 	tsteq	r6, sp, lsl #2
    b374:	2f060905 	svccs	0x00060905
    b378:	146c0513 	strbtne	r0, [ip], #-1299	; 0xfffffaed
    b37c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    b380:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    b384:	05680609 	strbeq	r0, [r8, #-1545]!	; 0xfffff9f7
    b388:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    b38c:	0903060d 	stmdbeq	r3, {r0, r2, r3, r9, sl}
    b390:	15052f20 	strne	r2, [r5, #-3872]	; 0xfffff0e0
    b394:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    b398:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    b39c:	2e7a0315 	mrccs	3, 3, r0, cr10, cr5, {0}
    b3a0:	31062b05 	tstcc	r6, r5, lsl #22
    b3a4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    b3a8:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    b3ac:	01010001 	tsteq	r1, r1
    b3b0:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    b3b4:	00000002 	andeq	r0, r0, r2
    b3b8:	118f0300 	orrne	r0, pc, r0, lsl #6
    b3bc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    b3c0:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    b3c4:	14300513 	ldrtne	r0, [r0], #-1299	; 0xfffffaed
    b3c8:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    b3cc:	1505320d 	strne	r3, [r5, #-525]	; 0xfffffdf3
    b3d0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    b3d4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    b3d8:	11052306 	tstne	r5, r6, lsl #6
    b3dc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    b3e0:	29050106 	stmdbcs	r5, {r1, r2, r8}
    b3e4:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    b3e8:	0d055006 	stceq	0, cr5, [r5, #-24]	; 0xffffffe8
    b3ec:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    b3f0:	00110516 	andseq	r0, r1, r6, lsl r5
    b3f4:	06040402 	streq	r0, [r4], -r2, lsl #8
    b3f8:	000f0501 	andeq	r0, pc, r1, lsl #10
    b3fc:	20040402 	andcs	r0, r4, r2, lsl #8
    b400:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    b404:	01061a05 	tsteq	r6, r5, lsl #20
    b408:	4e062905 	vmlami.f16	s4, s12, s10	; <UNPREDICTABLE>
    b40c:	05190d05 	ldreq	r0, [r9, #-3333]	; 0xfffff2fb
    b410:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    b414:	054f060d 	strbeq	r0, [pc, #-1549]	; ae0f <_Min_Heap_Size+0xa60f>
    b418:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    b41c:	0402000d 	streq	r0, [r2], #-13
    b420:	055d0604 	ldrbeq	r0, [sp, #-1540]	; 0xfffff9fc
    b424:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    b428:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    b42c:	0402000f 	streq	r0, [r2], #-15
    b430:	32052e04 	andcc	r2, r5, #4, 28	; 0x40
    b434:	01040200 	mrseq	r0, R12_usr
    b438:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    b43c:	06203b03 	strteq	r3, [r0], -r3, lsl #22
    b440:	062a0520 	strteq	r0, [sl], -r0, lsr #10
    b444:	1611053d 			; <UNDEFINED> instruction: 0x1611053d
    b448:	33310905 	teqcc	r1, #81920	; 0x14000
    b44c:	43140d05 	tstmi	r4, #320	; 0x140
    b450:	01062305 	tsteq	r6, r5, lsl #6
    b454:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    b458:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    b45c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    b460:	05052e13 	streq	r2, [r5, #-3603]	; 0xfffff1ed
    b464:	052e0e03 	streq	r0, [lr, #-3587]!	; 0xfffff1fd
    b468:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    b46c:	7efb0301 	cdpvc	3, 15, cr0, cr11, cr1, {0}
    b470:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    b474:	28052e01 	stmdacs	r5, {r0, r9, sl, fp, sp}
    b478:	05201f03 	streq	r1, [r0, #-3843]!	; 0xfffff0fd
    b47c:	0d030611 	stceq	6, cr0, [r3, #-68]	; 0xffffffbc
    b480:	2a054f2e 	bcs	15f140 <_Min_Heap_Size+0x15e940>
    b484:	1511054e 	ldrne	r0, [r1, #-1358]	; 0xfffffab2
    b488:	051a5005 	ldreq	r5, [sl, #-5]
    b48c:	01270309 			; <UNDEFINED> instruction: 0x01270309
    b490:	033e0533 	teqeq	lr, #213909504	; 0xcc00000
    b494:	1505200d 	strne	r2, [r5, #-13]
    b498:	052e6613 	streq	r6, [lr, #-1555]!	; 0xfffff9ed
    b49c:	2d052e2b 	stccs	14, cr2, [r5, #-172]	; 0xffffff54
    b4a0:	18220516 	stmdane	r2!, {r1, r2, r4, r8, sl}
    b4a4:	13060505 	movwne	r0, #25861	; 0x6505
    b4a8:	01000d02 	tsteq	r0, r2, lsl #26
    b4ac:	00050501 	andeq	r0, r5, r1, lsl #10
    b4b0:	00000205 	andeq	r0, r0, r5, lsl #4
    b4b4:	b5030000 	strlt	r0, [r3, #-0]
    b4b8:	09050113 	stmdbeq	r5, {r0, r1, r4, r8}
    b4bc:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    b4c0:	2a051313 	bcs	150114 <_Min_Heap_Size+0x14f914>
    b4c4:	141e0514 	ldrne	r0, [lr], #-1300	; 0xfffffaec
    b4c8:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    b4cc:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    b4d0:	05052e0f 	streq	r2, [r5, #-3599]	; 0xfffff1f1
    b4d4:	052e7303 	streq	r7, [lr, #-771]!	; 0xfffffcfd
    b4d8:	1503060d 	strne	r0, [r3, #-1549]	; 0xfffff9f3
    b4dc:	3011053c 	andscc	r0, r1, ip, lsr r5
    b4e0:	01061d05 	tsteq	r6, r5, lsl #26
    b4e4:	21061105 	tstcs	r6, r5, lsl #2
    b4e8:	01061d05 	tsteq	r6, r5, lsl #26
    b4ec:	21061105 	tstcs	r6, r5, lsl #2
    b4f0:	01061f05 	tsteq	r6, r5, lsl #30
    b4f4:	2f061105 	svccs	0x00061105
    b4f8:	01062905 	tsteq	r6, r5, lsl #18
    b4fc:	3e060d05 	cdpcc	13, 0, cr0, cr6, cr5, {0}
    b500:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    b504:	06120501 	ldreq	r0, [r2], -r1, lsl #10
    b508:	06140543 	ldreq	r0, [r4], -r3, asr #10
    b50c:	00370501 	eorseq	r0, r7, r1, lsl #10
    b510:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    b514:	36061605 	strcc	r1, [r6], -r5, lsl #12
    b518:	01061805 	tsteq	r6, r5, lsl #16
    b51c:	03061605 	movweq	r1, #26117	; 0x6605
    b520:	18053c29 	stmdane	r5, {r0, r3, r5, sl, fp, ip, sp}
    b524:	47050106 	strmi	r0, [r5, -r6, lsl #2]
    b528:	01040200 	mrseq	r0, R12_usr
    b52c:	031d053c 	tsteq	sp, #60, 10	; 0xf000000
    b530:	1505200f 	strne	r2, [r5, #-15]
    b534:	2e4d0306 	cdpcs	3, 4, cr0, cr13, cr6, {0}
    b538:	01061905 	tsteq	r6, r5, lsl #18
    b53c:	05201705 	streq	r1, [r0, #-1797]!	; 0xfffff8fb
    b540:	201e0321 	andscs	r0, lr, r1, lsr #6
    b544:	2e710306 	cdpcs	3, 7, cr0, cr1, cr6, {0}
    b548:	01063905 	tsteq	r6, r5, lsl #18
    b54c:	054a2305 	strbeq	r2, [sl, #-773]	; 0xfffffcfb
    b550:	04020072 	streq	r0, [r2], #-114	; 0xffffff8e
    b554:	052c0602 	streq	r0, [ip, #-1538]!	; 0xfffff9fe
    b558:	04020073 	streq	r0, [r2], #-115	; 0xffffff8d
    b55c:	00010602 	andeq	r0, r1, r2, lsl #12
    b560:	20020402 	andcs	r0, r2, r2, lsl #8
    b564:	05202405 	streq	r2, [r0, #-1029]!	; 0xfffffbfb
    b568:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    b56c:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    b570:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    b574:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    b578:	052e2c25 	streq	r2, [lr, #-3109]!	; 0xfffff3db
    b57c:	011e031d 	tsteq	lr, sp, lsl r3
    b580:	b5031905 	strlt	r1, [r3, #-2309]	; 0xfffff6fb
    b584:	2d052e7f 	stccs	14, cr2, [r5, #-508]	; 0xfffffe04
    b588:	00e90306 	rsceq	r0, r9, r6, lsl #6
    b58c:	14090520 	strne	r0, [r9], #-1312	; 0xfffffae0
    b590:	13060505 	movwne	r0, #25861	; 0x6505
    b594:	a7031905 	strge	r1, [r3, -r5, lsl #18]
    b598:	2d05207f 	stccs	0, cr2, [r5, #-508]	; 0xfffffe04
    b59c:	00d60306 	sbcseq	r0, r6, r6, lsl #6
    b5a0:	14090520 	strne	r0, [r9], #-1312	; 0xfffffae0
    b5a4:	13060505 	movwne	r0, #25861	; 0x6505
    b5a8:	ad031905 	vstrge.16	s2, [r3, #-10]	; <UNPREDICTABLE>
    b5ac:	2d052e7f 	stccs	14, cr2, [r5, #-508]	; 0xfffffe04
    b5b0:	2e4a1a03 	vmlacs.f32	s3, s20, s6
    b5b4:	18031d05 	stmdane	r3, {r0, r2, r8, sl, fp, ip}
    b5b8:	000e0201 	andeq	r0, lr, r1, lsl #4
    b5bc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    b5c0:	00020500 	andeq	r0, r2, r0, lsl #10
    b5c4:	03000000 	movweq	r0, #0
    b5c8:	060114b9 			; <UNDEFINED> instruction: 0x060114b9
    b5cc:	06090501 	streq	r0, [r9], -r1, lsl #10
    b5d0:	2e05132f 	cdpcs	3, 0, cr1, cr5, cr15, {1}
    b5d4:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    b5d8:	05320d05 	ldreq	r0, [r2, #-3333]!	; 0xfffff2fb
    b5dc:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    b5e0:	0402000d 	streq	r0, [r2], #-13
    b5e4:	05210604 	streq	r0, [r1, #-1540]!	; 0xfffff9fc
    b5e8:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    b5ec:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    b5f0:	04020009 	streq	r0, [r2], #-9
    b5f4:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    b5f8:	04020032 	streq	r0, [r2], #-50	; 0xffffffce
    b5fc:	09053004 	stmdbeq	r5, {r2, ip, sp}
    b600:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    b604:	00050514 	andeq	r0, r5, r4, lsl r5
    b608:	06040402 	streq	r0, [r4], -r2, lsl #8
    b60c:	00150513 	andseq	r0, r5, r3, lsl r5
    b610:	03010402 	movweq	r0, #5122	; 0x1402
    b614:	02002e78 	andeq	r2, r0, #120, 28	; 0x780
    b618:	022e0104 	eoreq	r0, lr, #4, 2
    b61c:	01010004 	tsteq	r1, r4
    b620:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    b624:	00000002 	andeq	r0, r0, r2
    b628:	14d30300 	ldrbne	r0, [r3], #768	; 0x300
    b62c:	13090501 	movwne	r0, #38145	; 0x9501
    b630:	35051313 	strcc	r1, [r5, #-787]	; 0xfffffced
    b634:	03330514 	teqeq	r3, #20, 10	; 0x5000000
    b638:	09050112 	stmdbeq	r5, {r1, r4, r8}
    b63c:	05020417 	streq	r0, [r2, #-1047]	; 0xfffffbe9
    b640:	6cf50322 	ldclvs	3, cr0, [r5], #136	; 0x88
    b644:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    b648:	9e0c0314 	mcrls	3, 0, r0, cr12, cr4, {0}
    b64c:	01040106 	tsteq	r4, r6, lsl #2
    b650:	03060d05 	movweq	r0, #27909	; 0x6d05
    b654:	050112ff 	streq	r1, [r1, #-767]	; 0xfffffd01
    b658:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    b65c:	0402000d 	streq	r0, [r2], #-13
    b660:	05210604 	streq	r0, [r1, #-1540]!	; 0xfffff9fc
    b664:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    b668:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    b66c:	04020009 	streq	r0, [r2], #-9
    b670:	04220604 	strteq	r0, [r2], #-1540	; 0xfffff9fc
    b674:	001e0502 	andseq	r0, lr, r2, lsl #10
    b678:	03040402 	movweq	r0, #17410	; 0x4402
    b67c:	05016d82 	streq	r6, [r1, #-3458]	; 0xfffff27e
    b680:	04020005 	streq	r0, [r2], #-5
    b684:	02001404 	andeq	r1, r0, #4, 8	; 0x4000000
    b688:	2e060404 	cdpcs	4, 0, cr0, cr6, cr4, {0}
    b68c:	39050104 	stmdbcc	r5, {r2, r8}
    b690:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    b694:	12fe0306 	rscsne	r0, lr, #402653184	; 0x18000000
    b698:	00090501 	andeq	r0, r9, r1, lsl #10
    b69c:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    b6a0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    b6a4:	13060404 	movwne	r0, #25604	; 0x6404
    b6a8:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
    b6ac:	78030104 	stmdavc	r3, {r2, r8}
    b6b0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    b6b4:	03022e01 	movweq	r2, #11777	; 0x2e01
    b6b8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    b6bc:	02050005 	andeq	r0, r5, #5
    b6c0:	00000000 	andeq	r0, r0, r0
    b6c4:	01158303 	tsteq	r5, r3, lsl #6
    b6c8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    b6cc:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    b6d0:	09051432 	stmdbeq	r5, {r1, r4, r5, sl, ip}
    b6d4:	320d0514 	andcc	r0, sp, #20, 10	; 0x5000000
    b6d8:	01061505 	tsteq	r6, r5, lsl #10
    b6dc:	02000d05 	andeq	r0, r0, #320	; 0x140
    b6e0:	21060404 	tstcs	r6, r4, lsl #8
    b6e4:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    b6e8:	01060404 	tsteq	r6, r4, lsl #8
    b6ec:	02000905 	andeq	r0, r0, #81920	; 0x14000
    b6f0:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    b6f4:	02003605 	andeq	r3, r0, #5242880	; 0x500000
    b6f8:	05300404 	ldreq	r0, [r0, #-1028]!	; 0xfffffbfc
    b6fc:	04020009 	streq	r0, [r2], #-9
    b700:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    b704:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    b708:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    b70c:	01040200 	mrseq	r0, R12_usr
    b710:	002e7803 	eoreq	r7, lr, r3, lsl #16
    b714:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    b718:	01000402 	tsteq	r0, r2, lsl #8
    b71c:	00050501 	andeq	r0, r5, r1, lsl #10
    b720:	00000205 	andeq	r0, r0, r5, lsl #4
    b724:	9d030000 	stcls	0, cr0, [r3, #-0]
    b728:	09050115 	stmdbeq	r5, {r0, r2, r4, r8}
    b72c:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    b730:	33051439 	movwcc	r1, #21561	; 0x5439
    b734:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    b738:	02041709 	andeq	r1, r4, #2359296	; 0x240000
    b73c:	ab032205 	blge	d3f58 <_Min_Heap_Size+0xd3758>
    b740:	0505016c 	streq	r0, [r5, #-364]	; 0xfffffe94
    b744:	0c031414 	cfstrseq	mvf1, [r3], {20}
    b748:	0401069e 	streq	r0, [r1], #-1694	; 0xfffff962
    b74c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    b750:	0113c903 	tsteq	r3, r3, lsl #18
    b754:	01061505 	tsteq	r6, r5, lsl #10
    b758:	02000d05 	andeq	r0, r0, #320	; 0x140
    b75c:	21060404 	tstcs	r6, r4, lsl #8
    b760:	02001605 	andeq	r1, r0, #5242880	; 0x500000
    b764:	01060404 	tsteq	r6, r4, lsl #8
    b768:	02000905 	andeq	r0, r0, #81920	; 0x14000
    b76c:	22060404 	andcs	r0, r6, #4, 8	; 0x4000000
    b770:	1e050204 	cdpne	2, 0, cr0, cr5, cr4, {0}
    b774:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    b778:	016cb803 	cmneq	ip, r3, lsl #16
    b77c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    b780:	00140404 	andseq	r0, r4, r4, lsl #8
    b784:	06040402 	streq	r0, [r4], -r2, lsl #8
    b788:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    b78c:	0402003d 	streq	r0, [r2], #-61	; 0xffffffc3
    b790:	c8030604 	stmdagt	r3, {r2, r9, sl}
    b794:	09050113 	stmdbeq	r5, {r0, r1, r4, r8}
    b798:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    b79c:	00050514 	andeq	r0, r5, r4, lsl r5
    b7a0:	06040402 	streq	r0, [r4], -r2, lsl #8
    b7a4:	00150513 	andseq	r0, r5, r3, lsl r5
    b7a8:	03010402 	movweq	r0, #5122	; 0x1402
    b7ac:	02002078 	andeq	r2, r0, #120	; 0x78
    b7b0:	022e0104 	eoreq	r0, lr, #4, 2
    b7b4:	01010003 	tsteq	r1, r3
    b7b8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    b7bc:	00000002 	andeq	r0, r0, r2
    b7c0:	15ce0300 	strbne	r0, [lr, #768]	; 0x300
    b7c4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    b7c8:	133d0609 	teqne	sp, #9437184	; 0x900000
    b7cc:	183c0513 	ldmdane	ip!, {r0, r1, r4, r8, sl}
    b7d0:	05143d05 	ldreq	r3, [r4, #-3333]	; 0xfffff2fb
    b7d4:	0b051509 	bleq	150c00 <_Min_Heap_Size+0x150400>
    b7d8:	1b050106 	blne	14bbf8 <_Min_Heap_Size+0x14b3f8>
    b7dc:	06250530 			; <UNDEFINED> instruction: 0x06250530
    b7e0:	15090524 	strne	r0, [r9, #-1316]	; 0xfffffadc
    b7e4:	05320d05 	ldreq	r0, [r2, #-3333]!	; 0xfffff2fb
    b7e8:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    b7ec:	0402003b 	streq	r0, [r2], #-59	; 0xffffffc5
    b7f0:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    b7f4:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    b7f8:	27051604 	strcs	r1, [r5, -r4, lsl #12]
    b7fc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    b800:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    b804:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    b808:	0f052806 	svceq	0x00052806
    b80c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    b810:	11050106 	tstne	r5, r6, lsl #2
    b814:	13053206 	movwne	r3, #20998	; 0x5206
    b818:	19050106 	stmdbne	r5, {r1, r2, r8}
    b81c:	23052406 	movwcs	r2, #21510	; 0x5406
    b820:	1b050106 	blne	14bc40 <_Min_Heap_Size+0x14b440>
    b824:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    b828:	063d0533 			; <UNDEFINED> instruction: 0x063d0533
    b82c:	3c1f0501 	cfldr32cc	mvfx0, [pc], {1}
    b830:	4d031405 	cfstrsmi	mvf1, [r3, #-20]	; 0xffffffec
    b834:	0015052e 	andseq	r0, r5, lr, lsr #10
    b838:	03010402 	movweq	r0, #5122	; 0x1402
    b83c:	02002e18 	andeq	r2, r0, #24, 28	; 0x180
    b840:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    b844:	33030616 	movwcc	r0, #13846	; 0x3616
    b848:	06370520 	ldrteq	r0, [r7], -r0, lsr #10
    b84c:	2e180501 	cfmul32cs	mvfx0, mvfx8, mvfx1
    b850:	b5031405 	strlt	r1, [r3, #-1029]	; 0xfffffbfb
    b854:	11052e7f 	tstne	r5, pc, ror lr
    b858:	00dc0306 	sbcseq	r0, ip, r6, lsl #6
    b85c:	27051720 	strcs	r1, [r5, -r0, lsr #14]
    b860:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    b864:	17052706 	strne	r2, [r5, -r6, lsl #14]
    b868:	48050106 	stmdami	r5, {r1, r2, r8}
    b86c:	01040200 	mrseq	r0, R12_usr
    b870:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    b874:	062b0530 			; <UNDEFINED> instruction: 0x062b0530
    b878:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    b87c:	062b0528 	strteq	r0, [fp], -r8, lsr #10
    b880:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    b884:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    b888:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    b88c:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    b890:	2e063006 	cdpcs	0, 0, cr3, cr6, cr6, {0}
    b894:	24062d05 	strcs	r2, [r6], #-3333	; 0xfffff2fb
    b898:	05191105 	ldreq	r1, [r9, #-261]	; 0xfffffefb
    b89c:	3c010615 	stccc	6, cr0, [r1], {21}
    b8a0:	053c1305 	ldreq	r1, [ip, #-773]!	; 0xfffffcfb
    b8a4:	17030631 	smladxne	r3, r1, r6, r0
    b8a8:	0311052e 	tsteq	r1, #192937984	; 0xb800000
    b8ac:	1305010c 	movwne	r0, #20748	; 0x510c
    b8b0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    b8b4:	01012306 	tsteq	r1, r6, lsl #6
    b8b8:	012e2e66 			; <UNDEFINED> instruction: 0x012e2e66
    b8bc:	0f033105 	svceq	0x00033105
    b8c0:	18110501 	ldmdane	r1, {r0, r8, sl}
    b8c4:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    b8c8:	05053027 	streq	r3, [r5, #-39]	; 0xffffffd9
    b8cc:	14051306 	strne	r1, [r5], #-774	; 0xfffffcfa
    b8d0:	207eb603 	rsbscs	fp, lr, r3, lsl #12
    b8d4:	35033005 	strcc	r3, [r3, #-5]
    b8d8:	0328052e 			; <UNDEFINED> instruction: 0x0328052e
    b8dc:	15052e1f 	strne	r2, [r5, #-3615]	; 0xfffff1e1
    b8e0:	2e3a0306 	cdpcs	3, 3, cr0, cr10, cr6, {0}
    b8e4:	01061905 	tsteq	r6, r5, lsl #18
    b8e8:	03063105 	movweq	r3, #24837	; 0x6105
    b8ec:	15054a09 	strne	r4, [r5, #-2569]	; 0xfffff5f7
    b8f0:	01010115 	tsteq	r1, r5, lsl r1
    b8f4:	01040200 	mrseq	r0, R12_usr
    b8f8:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    b8fc:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    b900:	00010304 	andeq	r0, r1, r4, lsl #6
    b904:	01030402 	tsteq	r3, r2, lsl #8
    b908:	03040200 	movweq	r0, #16896	; 0x4200
    b90c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    b910:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    b914:	00010304 	andeq	r0, r1, r4, lsl #6
    b918:	20030402 	andcs	r0, r3, r2, lsl #8
    b91c:	03040200 	movweq	r0, #16896	; 0x4200
    b920:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    b924:	02002003 	andeq	r2, r0, #3
    b928:	00200304 	eoreq	r0, r0, r4, lsl #6
    b92c:	06030402 	streq	r0, [r3], -r2, lsl #8
    b930:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    b934:	00580603 	subseq	r0, r8, r3, lsl #12
    b938:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    b93c:	03040200 	movweq	r0, #16896	; 0x4200
    b940:	04020001 	streq	r0, [r2], #-1
    b944:	08020103 	stmdaeq	r2, {r0, r1, r8}
    b948:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    b94c:	02050005 	andeq	r0, r5, #5
    b950:	00000000 	andeq	r0, r0, r0
    b954:	011a9903 	tsteq	sl, r3, lsl #18
    b958:	09050106 	stmdbeq	r5, {r1, r2, r8}
    b95c:	30052106 	andcc	r2, r5, r6, lsl #2
    b960:	15260514 	strne	r0, [r6, #-1300]!	; 0xfffffaec
    b964:	05180d05 	ldreq	r0, [r8, #-3333]	; 0xfffff2fb
    b968:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    b96c:	2b052e0f 	blcs	1571b0 <_Min_Heap_Size+0x1569b0>
    b970:	01040200 	mrseq	r0, R12_usr
    b974:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    b978:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    b97c:	15053011 	strne	r3, [r5, #-17]	; 0xffffffef
    b980:	13050106 	movwne	r0, #20742	; 0x5106
    b984:	062d053c 			; <UNDEFINED> instruction: 0x062d053c
    b988:	05201003 	streq	r1, [r0, #-3]!
    b98c:	2505150d 	strcs	r1, [r5, #-1293]	; 0xfffffaf3
    b990:	15220532 	strne	r0, [r2, #-1330]!	; 0xffffface
    b994:	13060505 	movwne	r0, #25861	; 0x6505
    b998:	03062e05 	movweq	r2, #28165	; 0x6e05
    b99c:	15052067 	strne	r2, [r5, #-103]	; 0xffffff99
    b9a0:	061e0516 			; <UNDEFINED> instruction: 0x061e0516
    b9a4:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    b9a8:	0101014b 	tsteq	r1, fp, asr #2
    b9ac:	01040200 	mrseq	r0, R12_usr
    b9b0:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    b9b4:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    b9b8:	00010304 	andeq	r0, r1, r4, lsl #6
    b9bc:	01030402 	tsteq	r3, r2, lsl #8
    b9c0:	03040200 	movweq	r0, #16896	; 0x4200
    b9c4:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    b9c8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    b9cc:	00010304 	andeq	r0, r1, r4, lsl #6
    b9d0:	20030402 	andcs	r0, r3, r2, lsl #8
    b9d4:	03040200 	movweq	r0, #16896	; 0x4200
    b9d8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    b9dc:	02002003 	andeq	r2, r0, #3
    b9e0:	00200304 	eoreq	r0, r0, r4, lsl #6
    b9e4:	06030402 	streq	r0, [r3], -r2, lsl #8
    b9e8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    b9ec:	00580603 	subseq	r0, r8, r3, lsl #12
    b9f0:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    b9f4:	03040200 	movweq	r0, #16896	; 0x4200
    b9f8:	04020001 	streq	r0, [r2], #-1
    b9fc:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    ba00:	00170304 	andseq	r0, r7, r4, lsl #6
    ba04:	01030402 	tsteq	r3, r2, lsl #8
    ba08:	01040200 	mrseq	r0, R12_usr
    ba0c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    ba10:	02006601 	andeq	r6, r0, #1048576	; 0x100000
    ba14:	002e0104 	eoreq	r0, lr, r4, lsl #2
    ba18:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    ba1c:	01000702 	tsteq	r0, r2, lsl #14
    ba20:	00050501 	andeq	r0, r5, r1, lsl #10
    ba24:	00000205 	andeq	r0, r0, r5, lsl #4
    ba28:	d6030000 	strle	r0, [r3], -r0
    ba2c:	0106011a 	tsteq	r6, sl, lsl r1
    ba30:	2f060905 	svccs	0x00060905
    ba34:	37051313 	smladcc	r5, r3, r3, r1
    ba38:	14260514 	strtne	r0, [r6], #-1300	; 0xfffffaec
    ba3c:	12033305 	andne	r3, r3, #335544320	; 0x14000000
    ba40:	17090501 	strne	r0, [r9, -r1, lsl #10]
    ba44:	22050204 	andcs	r0, r5, #4, 4	; 0x40000000
    ba48:	0166f003 	msreq	SPSR_sx, r3
    ba4c:	14140505 	ldrne	r0, [r4], #-1285	; 0xfffffafb
    ba50:	069e0c03 	ldreq	r0, [lr], r3, lsl #24
    ba54:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    ba58:	8203060d 	andhi	r0, r3, #13631488	; 0xd00000
    ba5c:	11050119 	tstne	r5, r9, lsl r1
    ba60:	0f050106 	svceq	0x00050106
    ba64:	0633052e 	ldrteq	r0, [r3], -lr, lsr #10
    ba68:	1511053e 	ldrne	r0, [r1, #-1342]	; 0xfffffac2
    ba6c:	01062a05 	tsteq	r6, r5, lsl #20
    ba70:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    ba74:	05340619 	ldreq	r0, [r4, #-1561]!	; 0xfffff9e7
    ba78:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    ba7c:	1b05203d 	blne	153b78 <_Min_Heap_Size+0x153378>
    ba80:	061d053c 			; <UNDEFINED> instruction: 0x061d053c
    ba84:	31051730 	tstcc	r5, r0, lsr r7
    ba88:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    ba8c:	15054006 	strne	r4, [r5, #-6]
    ba90:	061e0517 			; <UNDEFINED> instruction: 0x061e0517
    ba94:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    ba98:	0101014b 	tsteq	r1, fp, asr #2
    ba9c:	01040200 	mrseq	r0, R12_usr
    baa0:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    baa4:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    baa8:	00010304 	andeq	r0, r1, r4, lsl #6
    baac:	01030402 	tsteq	r3, r2, lsl #8
    bab0:	03040200 	movweq	r0, #16896	; 0x4200
    bab4:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    bab8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    babc:	00010304 	andeq	r0, r1, r4, lsl #6
    bac0:	20030402 	andcs	r0, r3, r2, lsl #8
    bac4:	03040200 	movweq	r0, #16896	; 0x4200
    bac8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    bacc:	02002003 	andeq	r2, r0, #3
    bad0:	00200304 	eoreq	r0, r0, r4, lsl #6
    bad4:	06030402 	streq	r0, [r3], -r2, lsl #8
    bad8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    badc:	00580603 	subseq	r0, r8, r3, lsl #12
    bae0:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    bae4:	03040200 	movweq	r0, #16896	; 0x4200
    bae8:	04020001 	streq	r0, [r2], #-1
    baec:	29050103 	stmdbcs	r5, {r0, r1, r8}
    baf0:	05011703 	streq	r1, [r1, #-1795]	; 0xfffff8fd
    baf4:	02041509 	andeq	r1, r4, #37748736	; 0x2400000
    baf8:	cc031e05 	stcgt	14, cr1, [r3], {5}
    bafc:	05050166 	streq	r0, [r5, #-358]	; 0xfffffe9a
    bb00:	042e0614 	strteq	r0, [lr], #-1556	; 0xfffff9ec
    bb04:	06390501 	ldrteq	r0, [r9], -r1, lsl #10
    bb08:	0119b403 	tsteq	r9, r3, lsl #8
    bb0c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    bb10:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    bb14:	7fa60314 	svcvc	0x00a60314
    bb18:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    bb1c:	2e00c203 	cdpcs	2, 0, cr12, cr0, cr3, {0}
    bb20:	03061405 	movweq	r1, #25605	; 0x6405
    bb24:	02587fbe 	subseq	r7, r8, #760	; 0x2f8
    bb28:	0101000e 	tsteq	r1, lr
    bb2c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    bb30:	00000002 	andeq	r0, r0, r2
    bb34:	1db80300 	ldcne	3, cr0, [r8]
    bb38:	21230501 			; <UNDEFINED> instruction: 0x21230501
    bb3c:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    bb40:	0905170d 	stmdbeq	r5, {r0, r2, r3, r8, r9, sl, ip}
    bb44:	0616054f 	ldreq	r0, [r6], -pc, asr #10
    bb48:	001b0501 	andseq	r0, fp, r1, lsl #10
    bb4c:	06010402 	streq	r0, [r1], -r2, lsl #8
    bb50:	00090520 	andeq	r0, r9, r0, lsr #10
    bb54:	06010402 	streq	r0, [r1], -r2, lsl #8
    bb58:	09030601 	stmdbeq	r3, {r0, r9, sl}
    bb5c:	3505052e 	strcc	r0, [r5, #-1326]	; 0xfffffad2
    bb60:	1e050204 	cdpne	2, 0, cr0, cr5, cr4, {0}
    bb64:	0163fd03 	msreq	SPSR_xc, r3, lsl #26
    bb68:	14140505 	ldrne	r0, [r4], #-1285	; 0xfffffafb
    bb6c:	80030104 	andhi	r0, r3, r4, lsl #2
    bb70:	1705821c 	smladne	r5, ip, r2, r8
    bb74:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    bb78:	24054006 	strcs	r4, [r5], #-6
    bb7c:	06010530 			; <UNDEFINED> instruction: 0x06010530
    bb80:	000d0513 	andeq	r0, sp, r3, lsl r5
    bb84:	06030402 	streq	r0, [r3], -r2, lsl #8
    bb88:	05206a03 	streq	r6, [r0, #-2563]!	; 0xfffff5fd
    bb8c:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
    bb90:	52055603 	andpl	r5, r5, #3145728	; 0x300000
    bb94:	03040200 	movweq	r0, #16896	; 0x4200
    bb98:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    bb9c:	02200304 	eoreq	r0, r0, #4, 6	; 0x10000000
    bba0:	01010006 	tsteq	r1, r6
    bba4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    bba8:	00229c02 	eoreq	r9, r2, r2, lsl #24
    bbac:	1de30308 	stclne	3, cr0, [r3, #32]!
    bbb0:	13210501 			; <UNDEFINED> instruction: 0x13210501
    bbb4:	0b031f05 	bleq	d37d0 <_Min_Heap_Size+0xd2fd0>
    bbb8:	16090501 	strne	r0, [r9], -r1, lsl #10
    bbbc:	01062005 	tsteq	r6, r5
    bbc0:	053c1e05 	ldreq	r1, [ip, #-3589]!	; 0xfffff1fb
    bbc4:	05240609 	streq	r0, [r4, #-1545]!	; 0xfffff9f7
    bbc8:	01370322 	teqeq	r7, r2, lsr #6
    bbcc:	13060105 	movwne	r0, #24837	; 0x6105
    bbd0:	01000402 	tsteq	r0, r2, lsl #8
    bbd4:	00010501 	andeq	r0, r1, r1, lsl #10
    bbd8:	22ac0205 	adccs	r0, ip, #1342177280	; 0x50000000
    bbdc:	8a030800 	bhi	cdbe4 <_Min_Heap_Size+0xcd3e4>
    bbe0:	05050120 	streq	r0, [r5, #-288]	; 0xfffffee0
    bbe4:	14230513 	strtne	r0, [r3], #-1299	; 0xfffffaed
    bbe8:	14090515 	strne	r0, [r9], #-1301	; 0xfffffaeb
    bbec:	01061005 	tsteq	r6, r5
    bbf0:	30062205 	andcc	r2, r6, r5, lsl #4
    bbf4:	05142c05 	ldreq	r2, [r4, #-3077]	; 0xfffff3fb
    bbf8:	01051405 	tsteq	r5, r5, lsl #8
    bbfc:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    bc00:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    bc04:	02050001 	andeq	r0, r5, #1
    bc08:	00000000 	andeq	r0, r0, r0
    bc0c:	01209d03 			; <UNDEFINED> instruction: 0x01209d03
    bc10:	13130505 	tstne	r3, #20971520	; 0x1400000
    bc14:	05142a05 	ldreq	r2, [r4, #-2565]	; 0xfffff5fb
    bc18:	0110032f 	tsteq	r0, pc, lsr #6
    bc1c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    bc20:	11051409 	tstne	r5, r9, lsl #8
    bc24:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    bc28:	34053006 	strcc	r3, [r5], #-6
    bc2c:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    bc30:	13060105 	movwne	r0, #24837	; 0x6105
    bc34:	01000402 	tsteq	r0, r2, lsl #8
    bc38:	00010501 	andeq	r0, r1, r1, lsl #10
    bc3c:	22b80205 	adcscs	r0, r8, #1342177280	; 0x50000000
    bc40:	c0030800 	andgt	r0, r3, r0, lsl #16
    bc44:	28050120 	stmdacs	r5, {r5, r8}
    bc48:	16410513 			; <UNDEFINED> instruction: 0x16410513
    bc4c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    bc50:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    bc54:	04022f01 	streq	r2, [r2], #-3841	; 0xfffff0ff
    bc58:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    bc5c:	02050001 	andeq	r0, r5, #1
    bc60:	00000000 	andeq	r0, r0, r0
    bc64:	0120cc03 			; <UNDEFINED> instruction: 0x0120cc03
    bc68:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    bc6c:	0505142d 	streq	r1, [r5, #-1069]	; 0xfffffbd3
    bc70:	060d0516 			; <UNDEFINED> instruction: 0x060d0516
    bc74:	001a0501 	andseq	r0, sl, r1, lsl #10
    bc78:	06040402 	streq	r0, [r4], -r2, lsl #8
    bc7c:	003d052f 	eorseq	r0, sp, pc, lsr #10
    bc80:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    bc84:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    bc88:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    bc8c:	04020001 	streq	r0, [r2], #-1
    bc90:	05130604 	ldreq	r0, [r3, #-1540]	; 0xfffff9fc
    bc94:	0402000d 	streq	r0, [r2], #-13
    bc98:	3c7a0301 	ldclcc	3, cr0, [sl], #-4
    bc9c:	01040200 	mrseq	r0, R12_usr
    bca0:	0003022e 	andeq	r0, r3, lr, lsr #4
    bca4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    bca8:	00020500 	andeq	r0, r2, r0, lsl #10
    bcac:	03000000 	movweq	r0, #0
    bcb0:	050121ed 	streq	r2, [r1, #-493]	; 0xfffffe13
    bcb4:	05131309 	ldreq	r1, [r3, #-777]	; 0xfffffcf7
    bcb8:	30051452 	andcc	r1, r5, r2, asr r4
    bcbc:	132e0514 			; <UNDEFINED> instruction: 0x132e0514
    bcc0:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    bcc4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    bcc8:	0402000d 	streq	r0, [r2], #-13
    bccc:	05320604 	ldreq	r0, [r2, #-1540]!	; 0xfffff9fc
    bcd0:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    bcd4:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    bcd8:	0402000f 	streq	r0, [r2], #-15
    bcdc:	12052e04 	andne	r2, r5, #4, 28	; 0x40
    bce0:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    bce4:	01061405 	tsteq	r6, r5, lsl #8
    bce8:	05361905 	ldreq	r1, [r6, #-2309]!	; 0xfffff6fb
    bcec:	0b030635 	bleq	cd5c8 <_Min_Heap_Size+0xccdc8>
    bcf0:	14090520 	strne	r0, [r9], #-1312	; 0xfffffae0
    bcf4:	13060505 	movwne	r0, #25861	; 0x6505
    bcf8:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    bcfc:	5d030104 	stfpls	f0, [r3, #-16]
    bd00:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    bd04:	26062e01 	strcs	r2, [r6], -r1, lsl #28
    bd08:	01062905 	tsteq	r6, r5, lsl #18
    bd0c:	05202205 	streq	r2, [r0, #-517]!	; 0xfffffdfb
    bd10:	05240611 	streq	r0, [r4, #-1553]!	; 0xfffff9ef
    bd14:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    bd18:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    bd1c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    bd20:	05320611 	ldreq	r0, [r2, #-1553]!	; 0xfffff9ef
    bd24:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    bd28:	11052022 	tstne	r5, r2, lsr #32
    bd2c:	20052106 	andcs	r2, r5, r6, lsl #2
    bd30:	11050106 	tstne	r5, r6, lsl #2
    bd34:	01062f06 	tsteq	r6, r6, lsl #30
    bd38:	01000402 	tsteq	r0, r2, lsl #8
    bd3c:	00090501 	andeq	r0, r9, r1, lsl #10
    bd40:	00000205 	andeq	r0, r0, r5, lsl #4
    bd44:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    bd48:	30050122 	andcc	r0, r5, r2, lsr #2
    bd4c:	163e0513 			; <UNDEFINED> instruction: 0x163e0513
    bd50:	05144805 	ldreq	r4, [r4, #-2053]	; 0xfffff7fb
    bd54:	0905140d 	stmdbeq	r5, {r0, r2, r3, sl, ip}
    bd58:	06021306 	streq	r1, [r2], -r6, lsl #6
    bd5c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    bd60:	02050005 	andeq	r0, r5, #5
    bd64:	00000000 	andeq	r0, r0, r0
    bd68:	0122ff03 	msreq	LR_svc, r3
    bd6c:	05133c05 	ldreq	r3, [r3, #-3077]	; 0xfffff3fb
    bd70:	4005153f 	andmi	r1, r5, pc, lsr r5
    bd74:	14510516 	ldrbne	r0, [r1], #-1302	; 0xfffffaea
    bd78:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    bd7c:	3c130605 	ldccc	6, cr0, [r3], {5}
    bd80:	01000302 	tsteq	r0, r2, lsl #6
    bd84:	00050501 	andeq	r0, r5, r1, lsl #10
    bd88:	22c40205 	sbccs	r0, r4, #1342177280	; 0x50000000
    bd8c:	98030800 	stmdals	r3, {fp}
    bd90:	01060123 	tsteq	r6, r3, lsr #2
    bd94:	2f060905 	svccs	0x00060905
    bd98:	05143105 	ldreq	r3, [r4, #-261]	; 0xfffffefb
    bd9c:	28051709 	stmdacs	r5, {r0, r3, r8, r9, sl, ip}
    bda0:	1b050106 	blne	14c1c0 <_Min_Heap_Size+0x14b9c0>
    bda4:	0642052e 	strbeq	r0, [r2], -lr, lsr #10
    bda8:	14090521 	strne	r0, [r9], #-1313	; 0xfffffadf
    bdac:	01061f05 	tsteq	r6, r5, lsl #30
    bdb0:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    bdb4:	12030625 	andne	r0, r3, #38797312	; 0x2500000
    bdb8:	1509052e 	strne	r0, [r9, #-1326]	; 0xfffffad2
    bdbc:	01061405 	tsteq	r6, r5, lsl #8
    bdc0:	0631053c 			; <UNDEFINED> instruction: 0x0631053c
    bdc4:	13240522 			; <UNDEFINED> instruction: 0x13240522
    bdc8:	13060505 	movwne	r0, #25861	; 0x6505
    bdcc:	03064705 	movweq	r4, #26373	; 0x6705
    bdd0:	3d05206c 	stccc	0, cr2, [r5, #-432]	; 0xfffffe50
    bdd4:	150d0513 	strne	r0, [sp, #-1299]	; 0xfffffaed
    bdd8:	05301105 	ldreq	r1, [r0, #-261]!	; 0xfffffefb
    bddc:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    bde0:	2f4c060d 	svccs	0x004c060d
    bde4:	01061905 	tsteq	r6, r5, lsl #18
    bde8:	00070220 	andeq	r0, r7, r0, lsr #4
    bdec:	01050101 	tsteq	r5, r1, lsl #2
    bdf0:	00020500 	andeq	r0, r2, r0, lsl #10
    bdf4:	03080023 	movweq	r0, #32803	; 0x8023
    bdf8:	050124be 	streq	r2, [r1, #-1214]	; 0xfffffb42
    bdfc:	13131305 	tstne	r3, #335544320	; 0x14000000
    be00:	05182405 	ldreq	r2, [r8, #-1029]	; 0xfffffbfb
    be04:	0505172b 	streq	r1, [r5, #-1835]	; 0xfffff8d5
    be08:	061e0518 			; <UNDEFINED> instruction: 0x061e0518
    be0c:	2e070501 	cfsh32cs	mvfx0, mvfx7, #1
    be10:	6c030105 	stfvss	f0, [r3], {5}
    be14:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    be18:	05201803 	streq	r1, [r0, #-2051]!	; 0xfffff7fd
    be1c:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
    be20:	09052e1a 	stmdbeq	r5, {r1, r3, r4, r9, sl, fp, sp}
    be24:	14052406 	strne	r2, [r5], #-1030	; 0xfffffbfa
    be28:	09050106 	stmdbeq	r5, {r1, r2, r8}
    be2c:	0b052206 	bleq	15464c <_Min_Heap_Size+0x153e4c>
    be30:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    be34:	09052606 	stmdbeq	r5, {r1, r2, r9, sl, sp}
    be38:	061d0519 			; <UNDEFINED> instruction: 0x061d0519
    be3c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    be40:	58031005 	stmdapl	r3, {r0, r2, ip}
    be44:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    be48:	20018c03 	andcs	r8, r1, r3, lsl #24
    be4c:	01061505 	tsteq	r6, r5, lsl #10
    be50:	05821305 	streq	r1, [r2, #773]	; 0x305
    be54:	2d053025 	stccs	0, cr3, [r5, #-148]	; 0xffffff6c
    be58:	11052406 	tstne	r5, r6, lsl #8
    be5c:	05012b03 	streq	r2, [r1, #-2819]	; 0xfffff4fd
    be60:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    be64:	052e2e13 	streq	r2, [lr, #-3603]!	; 0xfffff1ed
    be68:	013a0301 	teqeq	sl, r1, lsl #6
    be6c:	03060d05 	movweq	r0, #27909	; 0x6d05
    be70:	01207ea6 			; <UNDEFINED> instruction: 0x01207ea6
    be74:	3c2e0101 	stfccs	f0, [lr], #-4
    be78:	2e064a20 	vmlacs.f32	s8, s12, s1
    be7c:	20060106 	andcs	r0, r6, r6, lsl #2
    be80:	63031005 	movwvs	r1, #12293	; 0x3005
    be84:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    be88:	052e3303 	streq	r3, [lr, #-771]!	; 0xfffffcfd
    be8c:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    be90:	054b0615 	strbeq	r0, [fp, #-1557]	; 0xfffff9eb
    be94:	20150319 	andscs	r0, r5, r9, lsl r3
    be98:	01062e05 	tsteq	r6, r5, lsl #28
    be9c:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    bea0:	00150521 	andseq	r0, r5, r1, lsr #10
    bea4:	28010402 	stmdacs	r1, {r1, sl}
    bea8:	01040200 	mrseq	r0, R12_usr
    beac:	19053c06 	stmdbne	r5, {r1, r2, sl, fp, ip, sp}
    beb0:	03040200 	movweq	r0, #16896	; 0x4200
    beb4:	02001806 	andeq	r1, r0, #393216	; 0x60000
    beb8:	002e0304 	eoreq	r0, lr, r4, lsl #6
    bebc:	3c030402 	cfstrscc	mvf0, [r3], {2}
    bec0:	05163105 	ldreq	r3, [r6, #-261]	; 0xfffffefb
    bec4:	01011715 	tsteq	r1, r5, lsl r7
    bec8:	04020001 	streq	r0, [r2], #-1
    becc:	02005801 	andeq	r5, r0, #65536	; 0x10000
    bed0:	002e0304 	eoreq	r0, lr, r4, lsl #6
    bed4:	01030402 	tsteq	r3, r2, lsl #8
    bed8:	03040200 	movweq	r0, #16896	; 0x4200
    bedc:	04020001 	streq	r0, [r2], #-1
    bee0:	02008203 	andeq	r8, r0, #805306368	; 0x30000000
    bee4:	00010304 	andeq	r0, r1, r4, lsl #6
    bee8:	01030402 	tsteq	r3, r2, lsl #8
    beec:	03040200 	movweq	r0, #16896	; 0x4200
    bef0:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    bef4:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    bef8:	00200304 	eoreq	r0, r0, r4, lsl #6
    befc:	20030402 	andcs	r0, r3, r2, lsl #8
    bf00:	03040200 	movweq	r0, #16896	; 0x4200
    bf04:	02002006 	andeq	r2, r0, #6
    bf08:	66060304 	strvs	r0, [r6], -r4, lsl #6
    bf0c:	03040200 	movweq	r0, #16896	; 0x4200
    bf10:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    bf14:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    bf18:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    bf1c:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    bf20:	01100303 	tsteq	r0, r3, lsl #6
    bf24:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    bf28:	01060304 	tsteq	r6, r4, lsl #6
    bf2c:	02004105 	andeq	r4, r0, #1073741825	; 0x40000001
    bf30:	00200304 	eoreq	r0, r0, r4, lsl #6
    bf34:	20030402 	andcs	r0, r3, r2, lsl #8
    bf38:	02001f05 	andeq	r1, r0, #5, 30
    bf3c:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    bf40:	0d053031 	stceq	0, cr3, [r5, #-196]	; 0xffffff3c
    bf44:	7fb70306 	svcvc	0x00b70306
    bf48:	14110520 	ldrne	r0, [r1], #-1312	; 0xfffffae0
    bf4c:	01061505 	tsteq	r6, r5, lsl #10
    bf50:	053c1305 	ldreq	r1, [ip, #-773]!	; 0xfffffcfb
    bf54:	13030615 	movwne	r0, #13845	; 0x3615
    bf58:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    bf5c:	3c1b0501 	cfldr32cc	mvfx0, [fp], {1}
    bf60:	21061505 	tstcs	r6, r5, lsl #10
    bf64:	01062005 	tsteq	r6, r5
    bf68:	22061505 	andcs	r1, r6, #20971520	; 0x1400000
    bf6c:	01061705 	tsteq	r6, r5, lsl #14
    bf70:	03063105 	movweq	r3, #24837	; 0x6105
    bf74:	15052e0c 	strne	r2, [r5, #-3596]	; 0xfffff1f4
    bf78:	3c200116 	stfccs	f0, [r0], #-88	; 0xffffffa8
    bf7c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    bf80:	02004a03 	andeq	r4, r0, #12288	; 0x3000
    bf84:	002e0304 	eoreq	r0, lr, r4, lsl #6
    bf88:	3c030402 	cfstrscc	mvf0, [r3], {2}
    bf8c:	03040200 	movweq	r0, #16896	; 0x4200
    bf90:	00190516 	andseq	r0, r9, r6, lsl r5
    bf94:	06030402 	streq	r0, [r3], -r2, lsl #8
    bf98:	00170501 	andseq	r0, r7, r1, lsl #10
    bf9c:	20030402 	andcs	r0, r3, r2, lsl #8
    bfa0:	30061905 	andcc	r1, r6, r5, lsl #18
    bfa4:	2e3c0101 	rsfcse	f0, f4, f1
    bfa8:	01040200 	mrseq	r0, R12_usr
    bfac:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    bfb0:	053c0601 	ldreq	r0, [ip, #-1537]!	; 0xfffff9ff
    bfb4:	91030609 	tstls	r3, r9, lsl #12
    bfb8:	16050101 	strne	r0, [r5], -r1, lsl #2
    bfbc:	10050106 	andne	r0, r5, r6, lsl #2
    bfc0:	4a7e9703 	bmi	1fb1bd4 <_Min_Heap_Size+0x1fb13d4>
    bfc4:	f7030105 			; <UNDEFINED> instruction: 0xf7030105
    bfc8:	25052001 	strcs	r2, [r5, #-1]
    bfcc:	20204803 	eorcs	r4, r0, r3, lsl #16
    bfd0:	03063605 	movweq	r3, #26117	; 0x6605
    bfd4:	05050135 	streq	r0, [r5, #-309]	; 0xfffffecb
    bfd8:	060c0514 			; <UNDEFINED> instruction: 0x060c0514
    bfdc:	00170201 	andseq	r0, r7, r1, lsl #4
    bfe0:	01050101 	tsteq	r5, r1, lsl #2
    bfe4:	60020500 	andvs	r0, r2, r0, lsl #10
    bfe8:	03080024 	movweq	r0, #32804	; 0x8024
    bfec:	05011ef4 	streq	r1, [r1, #-3828]	; 0xfffff10c
    bff0:	05132105 	ldreq	r2, [r3, #-261]	; 0xfffffefb
    bff4:	09051420 	stmdbeq	r5, {r5, sl, ip}
    bff8:	05010b03 	streq	r0, [r1, #-2819]	; 0xfffff4fd
    bffc:	0513300d 	ldreq	r3, [r3, #-13]
    c000:	0d051637 	stceq	6, cr1, [r5, #-220]	; 0xffffff24
    c004:	06240514 			; <UNDEFINED> instruction: 0x06240514
    c008:	3c220501 	cfstr32cc	mvfx0, [r2], #-4
    c00c:	21062405 	tstcs	r6, r5, lsl #8
    c010:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    c014:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    c018:	1105200f 	tstne	r5, pc
    c01c:	2c053006 	stccs	0, cr3, [r5], {6}
    c020:	13050106 	movwne	r0, #20742	; 0x5106
    c024:	0310052e 	tsteq	r0, #192937984	; 0xb800000
    c028:	19052065 	stmdbne	r5, {r0, r2, r5, r6, sp}
    c02c:	01040200 	mrseq	r0, R12_usr
    c030:	2e250306 	cdpcs	3, 2, cr0, cr5, cr6, {0}
    c034:	01040200 	mrseq	r0, R12_usr
    c038:	02003c06 	andeq	r3, r0, #1536	; 0x600
    c03c:	14060104 	strne	r0, [r6], #-260	; 0xfffffefc
    c040:	01040200 	mrseq	r0, R12_usr
    c044:	0d053c06 	stceq	12, cr3, [r5, #-24]	; 0xffffffe8
    c048:	05015803 	streq	r5, [r1, #-2051]	; 0xfffff7fd
    c04c:	35030639 	strcc	r0, [r3, #-1593]	; 0xfffff9c7
    c050:	031a0520 	tsteq	sl, #32, 10	; 0x8000000
    c054:	1c05016b 	stfnes	f0, [r5], {107}	; 0x6b
    c058:	1a050106 	bne	14c478 <_Min_Heap_Size+0x14bc78>
    c05c:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    c060:	06210533 			; <UNDEFINED> instruction: 0x06210533
    c064:	1f052001 	svcne	0x00052001
    c068:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    c06c:	3c200121 	stfccs	f0, [r0], #-132	; 0xffffff7c
    c070:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    c074:	02005803 	andeq	r5, r0, #196608	; 0x30000
    c078:	002e0304 	eoreq	r0, lr, r4, lsl #6
    c07c:	3c030402 	cfstrscc	mvf0, [r3], {2}
    c080:	03040200 	movweq	r0, #16896	; 0x4200
    c084:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    c088:	02001303 	andeq	r1, r0, #201326592	; 0xc000000
    c08c:	00010304 	andeq	r0, r1, r4, lsl #6
    c090:	20030402 	andcs	r0, r3, r2, lsl #8
    c094:	03040200 	movweq	r0, #16896	; 0x4200
    c098:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    c09c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    c0a0:	004a0304 	subeq	r0, sl, r4, lsl #6
    c0a4:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    c0a8:	03040200 	movweq	r0, #16896	; 0x4200
    c0ac:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    c0b0:	02001303 	andeq	r1, r0, #201326592	; 0xc000000
    c0b4:	00010304 	andeq	r0, r1, r4, lsl #6
    c0b8:	01030402 	tsteq	r3, r2, lsl #8
    c0bc:	03040200 	movweq	r0, #16896	; 0x4200
    c0c0:	04020001 	streq	r0, [r2], #-1
    c0c4:	00200603 	eoreq	r0, r0, r3, lsl #12
    c0c8:	06010402 	streq	r0, [r1], -r2, lsl #8
    c0cc:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    c0d0:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    c0d4:	00010304 	andeq	r0, r1, r4, lsl #6
    c0d8:	01030402 	tsteq	r3, r2, lsl #8
    c0dc:	03040200 	movweq	r0, #16896	; 0x4200
    c0e0:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    c0e4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    c0e8:	00010304 	andeq	r0, r1, r4, lsl #6
    c0ec:	20030402 	andcs	r0, r3, r2, lsl #8
    c0f0:	03040200 	movweq	r0, #16896	; 0x4200
    c0f4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    c0f8:	02002003 	andeq	r2, r0, #3
    c0fc:	00200304 	eoreq	r0, r0, r4, lsl #6
    c100:	06030402 	streq	r0, [r3], -r2, lsl #8
    c104:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    c108:	00580603 	subseq	r0, r8, r3, lsl #12
    c10c:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    c110:	03040200 	movweq	r0, #16896	; 0x4200
    c114:	04020001 	streq	r0, [r2], #-1
    c118:	1d050103 	stfnes	f0, [r5, #-12]
    c11c:	03040200 	movweq	r0, #16896	; 0x4200
    c120:	00260518 	eoreq	r0, r6, r8, lsl r5
    c124:	06030402 	streq	r0, [r3], -r2, lsl #8
    c128:	00410501 	subeq	r0, r1, r1, lsl #10
    c12c:	20030402 	andcs	r0, r3, r2, lsl #8
    c130:	02001f05 	andeq	r1, r0, #5, 30
    c134:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    c138:	05300621 	ldreq	r0, [r0, #-1569]!	; 0xfffff9df
    c13c:	0501063b 	streq	r0, [r1, #-1595]	; 0xfffff9c5
    c140:	10030615 	andne	r0, r3, r5, lsl r6
    c144:	0617054a 	ldreq	r0, [r7], -sl, asr #10
    c148:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    c14c:	2e0d0328 	cdpcs	3, 0, cr0, cr13, cr8, {1}
    c150:	01062405 	tsteq	r6, r5, lsl #8
    c154:	30061905 	andcc	r1, r6, r5, lsl #18
    c158:	01061b05 	tsteq	r6, r5, lsl #22
    c15c:	03063505 	movweq	r3, #25861	; 0x6505
    c160:	15052016 	strne	r2, [r5, #-22]	; 0xffffffea
    c164:	06270516 			; <UNDEFINED> instruction: 0x06270516
    c168:	2e170501 	cfmul32cs	mvfx0, mvfx7, mvfx1
    c16c:	24061d05 	strcs	r1, [r6], #-3333	; 0xfffff2fb
    c170:	662e0118 			; <UNDEFINED> instruction: 0x662e0118
    c174:	05012e2e 	streq	r2, [r1, #-3630]	; 0xfffff1d2
    c178:	7a03062d 	bvc	cda34 <_Min_Heap_Size+0xcd234>
    c17c:	063d0501 	ldrteq	r0, [sp], -r1, lsl #10
    c180:	052e6e03 	streq	r6, [lr, #-3587]!	; 0xfffff1fd
    c184:	24051521 	strcs	r1, [r5], #-1313	; 0xfffffadf
    c188:	061d0513 			; <UNDEFINED> instruction: 0x061d0513
    c18c:	03062001 	movweq	r2, #24577	; 0x6001
    c190:	21052072 	tstcs	r5, r2, ror r0
    c194:	06250514 			; <UNDEFINED> instruction: 0x06250514
    c198:	2e230501 	cfsh64cs	mvdx0, mvdx3, #1
    c19c:	32062505 	andcc	r2, r6, #20971520	; 0x1400000
    c1a0:	01063f05 	tsteq	r6, r5, lsl #30
    c1a4:	03061d05 	movweq	r1, #27909	; 0x6d05
    c1a8:	2a054a0a 	bcs	15e9d8 <_Min_Heap_Size+0x15e1d8>
    c1ac:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
    c1b0:	7f970310 	svcvc	0x00970310
    c1b4:	06290501 	strteq	r0, [r9], -r1, lsl #10
    c1b8:	20018703 	andcs	r8, r1, r3, lsl #14
    c1bc:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    c1c0:	05053132 	streq	r3, [r5, #-306]	; 0xfffffece
    c1c4:	06010514 			; <UNDEFINED> instruction: 0x06010514
    c1c8:	00082e13 	andeq	r2, r8, r3, lsl lr
    c1cc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    c1d0:	00020500 	andeq	r0, r2, r0, lsl #10
    c1d4:	03000000 	movweq	r0, #0
    c1d8:	060112a8 	streq	r1, [r1], -r8, lsr #5
    c1dc:	06090501 	streq	r0, [r9], -r1, lsl #10
    c1e0:	4905133d 	stmdbmi	r5, {r0, r2, r3, r4, r5, r8, r9, ip}
    c1e4:	142b0514 	strtne	r0, [fp], #-1300	; 0xfffffaec
    c1e8:	05133005 	ldreq	r3, [r3, #-5]
    c1ec:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    c1f0:	061e0532 			; <UNDEFINED> instruction: 0x061e0532
    c1f4:	06370501 	ldrteq	r0, [r7], -r1, lsl #10
    c1f8:	150d0530 	strne	r0, [sp, #-1328]	; 0xfffffad0
    c1fc:	01061b05 	tsteq	r6, r5, lsl #22
    c200:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
    c204:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    c208:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    c20c:	05350611 	ldreq	r0, [r5, #-1553]!	; 0xfffff9ef
    c210:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    c214:	1903060d 	stmdbne	r3, {r0, r2, r3, r9, sl}
    c218:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    c21c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    c220:	06250522 	strteq	r0, [r5], -r2, lsr #10
    c224:	20014c03 	andcs	r4, r1, r3, lsl #24
    c228:	02003b05 	andeq	r3, r0, #5120	; 0x1400
    c22c:	19030104 	stmdbne	r3, {r2, r8}
    c230:	060d0520 	streq	r0, [sp], -r0, lsr #10
    c234:	052e1903 	streq	r1, [lr, #-2307]!	; 0xfffff6fd
    c238:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    c23c:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    c240:	4c030625 	stcmi	6, cr0, [r3], {37}	; 0x25
    c244:	15052001 	strne	r2, [r5, #-1]
    c248:	201b0306 	andscs	r0, fp, r6, lsl #6
    c24c:	17030d05 	strne	r0, [r3, -r5, lsl #26]
    c250:	06210501 	strteq	r0, [r1], -r1, lsl #10
    c254:	060d0501 	streq	r0, [sp], -r1, lsl #10
    c258:	03110522 	tsteq	r1, #142606336	; 0x8800000
    c25c:	13052073 	movwne	r2, #20595	; 0x5073
    c260:	3b050106 	blcc	14c680 <_Min_Heap_Size+0x14be80>
    c264:	01040200 	mrseq	r0, R12_usr
    c268:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    c26c:	030d0530 	movweq	r0, #54576	; 0xd530
    c270:	21050109 	tstcs	r5, r9, lsl #2
    c274:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    c278:	35052206 	strcc	r2, [r5, #-518]	; 0xfffffdfa
    c27c:	16110514 			; <UNDEFINED> instruction: 0x16110514
    c280:	29052e06 	stmdbcs	r5, {r1, r2, r9, sl, fp, sp}
    c284:	09054006 	stmdbeq	r5, {r1, r2, lr}
    c288:	061b0515 			; <UNDEFINED> instruction: 0x061b0515
    c28c:	06090501 	streq	r0, [r9], -r1, lsl #10
    c290:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
    c294:	060d0501 	streq	r0, [sp], -r1, lsl #10
    c298:	052e6622 	streq	r6, [lr, #-1570]!	; 0xfffff9de
    c29c:	25052e23 	strcs	r2, [r5, #-3619]	; 0xfffff1dd
    c2a0:	15340516 	ldrne	r0, [r4, #-1302]!	; 0xfffffaea
    c2a4:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    c2a8:	20130605 	andscs	r0, r3, r5, lsl #12
    c2ac:	03060d05 	movweq	r0, #27909	; 0x6d05
    c2b0:	21052061 	tstcs	r5, r1, rrx
    c2b4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    c2b8:	25052206 	strcs	r2, [r5, #-518]	; 0xfffffdfa
    c2bc:	014c0306 	cmpeq	ip, r6, lsl #6
    c2c0:	00040220 	andeq	r0, r4, r0, lsr #4
    c2c4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    c2c8:	a0020500 	andge	r0, r2, r0, lsl #10
    c2cc:	03080025 	movweq	r0, #32805	; 0x8025
    c2d0:	06011383 	streq	r1, [r1], -r3, lsl #7
    c2d4:	06090501 	streq	r0, [r9], -r1, lsl #10
    c2d8:	142f0521 	strtne	r0, [pc], #-1313	; c2e0 <_Min_Heap_Size+0xbae0>
    c2dc:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    c2e0:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    c2e4:	1c03060d 	stcne	6, cr0, [r3], {13}
    c2e8:	052e6620 	streq	r6, [lr, #-1568]!	; 0xfffff9e0
    c2ec:	25052e23 	strcs	r2, [r5, #-3619]	; 0xfffff1dd
    c2f0:	15210516 	strne	r0, [r1, #-1302]!	; 0xfffffaea
    c2f4:	13060505 	movwne	r0, #25861	; 0x6505
    c2f8:	060d0520 	streq	r0, [sp], -r0, lsr #10
    c2fc:	05205e03 	streq	r5, [r0, #-3587]!	; 0xfffff1fd
    c300:	2205303b 	andcs	r3, r5, #59	; 0x3b
    c304:	03110514 	tsteq	r1, #20, 10	; 0x5000000
    c308:	0d050109 	stfeqs	f0, [r5, #-36]	; 0xffffffdc
    c30c:	061f054c 	ldreq	r0, [pc], -ip, asr #10
    c310:	06250501 	strteq	r0, [r5], -r1, lsl #10
    c314:	17090532 	smladxne	r9, r2, r5, r0
    c318:	01060b05 	tsteq	r6, r5, lsl #22
    c31c:	0001022e 	andeq	r0, r1, lr, lsr #4
    c320:	01050101 	tsteq	r5, r1, lsl #2
    c324:	d4020500 	strle	r0, [r2], #-1280	; 0xfffffb00
    c328:	03080025 	movweq	r0, #32805	; 0x8025
    c32c:	06012cf4 			; <UNDEFINED> instruction: 0x06012cf4
    c330:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    c334:	662e3203 	strtvs	r3, [lr], -r3, lsl #4
    c338:	2e1c052e 	cfmul64cs	mvdx0, mvdx12, mvdx14
    c33c:	05162905 	ldreq	r2, [r6, #-2309]	; 0xfffff6fb
    c340:	0112030d 	tsteq	r2, sp, lsl #6
    c344:	06210519 			; <UNDEFINED> instruction: 0x06210519
    c348:	060d0501 	streq	r0, [sp], -r1, lsl #10
    c34c:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    c350:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    c354:	7fb10306 	svcvc	0x00b10306
    c358:	1a430501 	bne	10cd764 <_Min_Heap_Size+0x10ccf64>
    c35c:	0a030505 	beq	cd778 <_Min_Heap_Size+0xccf78>
    c360:	16090501 	strne	r0, [r9], -r1, lsl #10
    c364:	18030d05 	stmdane	r3, {r0, r2, r8, sl, fp}
    c368:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    c36c:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    c370:	03061105 	movweq	r1, #24837	; 0x6105
    c374:	47053c23 	strmi	r3, [r5, -r3, lsr #24]
    c378:	13150533 	tstne	r5, #213909504	; 0xcc00000
    c37c:	01062905 	tsteq	r6, r5, lsl #18
    c380:	33065705 	movwcc	r5, #26373	; 0x6705
    c384:	05141505 	ldreq	r1, [r4, #-1285]	; 0xfffffafb
    c388:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    c38c:	05300634 	ldreq	r0, [r0, #-1588]!	; 0xfffff9cc
    c390:	32051319 	andcc	r1, r5, #1677721600	; 0x64000000
    c394:	1631052f 	ldrtne	r0, [r1], -pc, lsr #10
    c398:	05151105 	ldreq	r1, [r5, #-261]	; 0xfffffefb
    c39c:	0201061a 	andeq	r0, r1, #27262976	; 0x1a00000
    c3a0:	01010005 	tsteq	r1, r5
    c3a4:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    c3a8:	00000002 	andeq	r0, r0, r2
    c3ac:	21a70300 			; <UNDEFINED> instruction: 0x21a70300
    c3b0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    c3b4:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    c3b8:	05143305 	ldreq	r3, [r4, #-773]	; 0xfffffcfb
    c3bc:	0905154a 	stmdbeq	r5, {r1, r3, r6, r8, sl, ip}
    c3c0:	06150514 			; <UNDEFINED> instruction: 0x06150514
    c3c4:	052e7803 	streq	r7, [lr, #-2051]!	; 0xfffff7fd
    c3c8:	0b03060d 	bleq	cdc04 <_Min_Heap_Size+0xcd404>
    c3cc:	14110520 	ldrne	r0, [r1], #-1312	; 0xfffffae0
    c3d0:	01061805 	tsteq	r6, r5, lsl #16
    c3d4:	21061105 	tstcs	r6, r5, lsl #2
    c3d8:	01061905 	tsteq	r6, r5, lsl #18
    c3dc:	84061105 	strhi	r1, [r6], #-261	; 0xfffffefb
    c3e0:	01061305 	tsteq	r6, r5, lsl #6
    c3e4:	33061405 	movwcc	r1, #25605	; 0x6405
    c3e8:	01060d05 	tsteq	r6, r5, lsl #26
    c3ec:	0f053106 	svceq	0x00053106
    c3f0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    c3f4:	0f052506 	svceq	0x00052506
    c3f8:	11050106 	tstne	r5, r6, lsl #2
    c3fc:	13052706 	movwne	r2, #22278	; 0x5706
    c400:	11050106 	tstne	r5, r6, lsl #2
    c404:	200a0306 	andcs	r0, sl, r6, lsl #6
    c408:	01061305 	tsteq	r6, r5, lsl #6
    c40c:	28060905 	stmdacs	r6, {r0, r2, r8, fp}
    c410:	01061205 	tsteq	r6, r5, lsl #4
    c414:	30062c05 	andcc	r2, r6, r5, lsl #24
    c418:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    c41c:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    c420:	5f030611 	svcpl	0x00030611
    c424:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    c428:	054a2e01 	strbeq	r2, [sl, #-3585]	; 0xfffff1ff
    c42c:	05250611 	streq	r0, [r5, #-1553]!	; 0xfffff9ef
    c430:	2e010619 	mcrcs	6, 0, r0, cr1, cr9, {0}
    c434:	0615054a 	ldreq	r0, [r5], -sl, asr #10
    c438:	061d0528 	ldreq	r0, [sp], -r8, lsr #10
    c43c:	053c2e01 	ldreq	r2, [ip, #-3585]!	; 0xfffff1ff
    c440:	0a030615 	beq	cdc9c <_Min_Heap_Size+0xcd49c>
    c444:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
    c448:	023c2e01 	eorseq	r2, ip, #1, 28
    c44c:	0101000b 	tsteq	r1, fp
    c450:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    c454:	00000002 	andeq	r0, r0, r2
    c458:	23c20300 	biccs	r0, r2, #0, 6
    c45c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    c460:	052f0605 	streq	r0, [pc, #-1541]!	; be63 <_Min_Heap_Size+0xb663>
    c464:	3f051434 	svccc	0x00051434
    c468:	16050516 			; <UNDEFINED> instruction: 0x16050516
    c46c:	30090531 	andcc	r0, r9, r1, lsr r5
    c470:	01061605 	tsteq	r6, r5, lsl #12
    c474:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
    c478:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    c47c:	06340501 	ldrteq	r0, [r4], -r1, lsl #10
    c480:	14050530 	strne	r0, [r5], #-1328	; 0xfffffad0
    c484:	13060105 	movwne	r0, #24837	; 0x6105
    c488:	00030220 	andeq	r0, r3, r0, lsr #4
    c48c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    c490:	00020500 	andeq	r0, r2, r0, lsl #10
    c494:	03000000 	movweq	r0, #0
    c498:	060123e0 	streq	r2, [r1], -r0, ror #7
    c49c:	06090501 	streq	r0, [r9], -r1, lsl #10
    c4a0:	2c05132f 	stccs	3, cr1, [r5], {47}	; 0x2f
    c4a4:	141e0514 	ldrne	r0, [lr], #-1300	; 0xfffffaec
    c4a8:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    c4ac:	1105320d 	tstne	r5, sp, lsl #4
    c4b0:	0f050106 	svceq	0x00050106
    c4b4:	0319053c 	tsteq	r9, #60, 10	; 0xf000000
    c4b8:	052e00c4 	streq	r0, [lr, #-196]!	; 0xffffff3c
    c4bc:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    c4c0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    c4c4:	0530062f 	ldreq	r0, [r0, #-1583]!	; 0xfffff9d1
    c4c8:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    c4cc:	11051306 	tstne	r5, r6, lsl #6
    c4d0:	7fb60306 	svcvc	0x00b60306
    c4d4:	1a05172e 	bne	152194 <_Min_Heap_Size+0x151994>
    c4d8:	11050106 	tstne	r5, r6, lsl #2
    c4dc:	15055006 	strne	r5, [r5, #-6]
    c4e0:	06190530 			; <UNDEFINED> instruction: 0x06190530
    c4e4:	20170501 	andscs	r0, r7, r1, lsl #10
    c4e8:	22061905 	andcs	r1, r6, #81920	; 0x14000
    c4ec:	01062205 	tsteq	r6, r5, lsl #4
    c4f0:	4f061905 	svcmi	0x00061905
    c4f4:	01062f05 	tsteq	r6, r5, lsl #30
    c4f8:	40063105 	andmi	r3, r6, r5, lsl #2
    c4fc:	31151105 	tstcc	r5, r5, lsl #2
    c500:	00010101 	andeq	r0, r1, r1, lsl #2
    c504:	58010402 	stmdapl	r1, {r1, sl}
    c508:	03040200 	movweq	r0, #16896	; 0x4200
    c50c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    c510:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    c514:	00010304 	andeq	r0, r1, r4, lsl #6
    c518:	66030402 	strvs	r0, [r3], -r2, lsl #8
    c51c:	03040200 	movweq	r0, #16896	; 0x4200
    c520:	04020001 	streq	r0, [r2], #-1
    c524:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    c528:	00200304 	eoreq	r0, r0, r4, lsl #6
    c52c:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    c530:	03040200 	movweq	r0, #16896	; 0x4200
    c534:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    c538:	02002003 	andeq	r2, r0, #3
    c53c:	20060304 	andcs	r0, r6, r4, lsl #6
    c540:	03040200 	movweq	r0, #16896	; 0x4200
    c544:	02005806 	andeq	r5, r0, #393216	; 0x60000
    c548:	00740304 	rsbseq	r0, r4, r4, lsl #6
    c54c:	01030402 	tsteq	r3, r2, lsl #8
    c550:	03040200 	movweq	r0, #16896	; 0x4200
    c554:	00190501 	andseq	r0, r9, r1, lsl #10
    c558:	03030402 	movweq	r0, #13314	; 0x3402
    c55c:	2205010b 	andcs	r0, r5, #-1073741822	; 0xc0000002
    c560:	03040200 	movweq	r0, #16896	; 0x4200
    c564:	3d050106 	stfccs	f0, [r5, #-24]	; 0xffffffe8
    c568:	03040200 	movweq	r0, #16896	; 0x4200
    c56c:	001b0520 	andseq	r0, fp, r0, lsr #10
    c570:	3c030402 	cfstrscc	mvf0, [r3], {2}
    c574:	32061d05 	andcc	r1, r6, #320	; 0x140
    c578:	01063105 	tsteq	r6, r5, lsl #2
    c57c:	03190520 	tsteq	r9, #32, 10	; 0x8000000
    c580:	02203c53 	eoreq	r3, r0, #21248	; 0x5300
    c584:	01010009 	tsteq	r1, r9
    c588:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    c58c:	00000002 	andeq	r0, r0, r2
    c590:	26bf0300 	ldrtcs	r0, [pc], r0, lsl #6
    c594:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    c598:	052f0609 	streq	r0, [pc, #-1545]!	; bf97 <_Min_Heap_Size+0xb797>
    c59c:	09051447 	stmdbeq	r5, {r0, r1, r2, r6, sl, ip}
    c5a0:	060b0516 			; <UNDEFINED> instruction: 0x060b0516
    c5a4:	06090501 	streq	r0, [r9], -r1, lsl #10
    c5a8:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    c5ac:	1d05300d 	stcne	0, cr3, [r5, #-52]	; 0xffffffcc
    c5b0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    c5b4:	31052206 	tstcc	r5, r6, lsl #4
    c5b8:	06050530 			; <UNDEFINED> instruction: 0x06050530
    c5bc:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    c5c0:	05207003 	streq	r7, [r0, #-3]!
    c5c4:	2e010612 	mcrcs	6, 0, r0, cr1, cr2, {0}
    c5c8:	01000402 	tsteq	r0, r2, lsl #8
    c5cc:	00050501 	andeq	r0, r5, r1, lsl #10
    c5d0:	00000205 	andeq	r0, r0, r5, lsl #4
    c5d4:	e0030000 	and	r0, r3, r0
    c5d8:	01060126 	tsteq	r6, r6, lsr #2
    c5dc:	21060905 	tstcs	r6, r5, lsl #18
    c5e0:	14370513 	ldrtne	r0, [r7], #-1299	; 0xfffffaed
    c5e4:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    c5e8:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    c5ec:	04020009 	streq	r0, [r2], #-9
    c5f0:	05320604 	ldreq	r0, [r2, #-1540]!	; 0xfffff9fc
    c5f4:	0402000d 	streq	r0, [r2], #-13
    c5f8:	15053004 	strne	r3, [r5, #-4]
    c5fc:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    c600:	09050106 	stmdbeq	r5, {r1, r2, r8}
    c604:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    c608:	3a052206 	bcc	154e28 <_Min_Heap_Size+0x154628>
    c60c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    c610:	00090530 	andeq	r0, r9, r0, lsr r5
    c614:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    c618:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    c61c:	13060404 	movwne	r0, #25604	; 0x6404
    c620:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    c624:	73030104 	movwvc	r0, #12548	; 0x3104
    c628:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    c62c:	04022e01 	streq	r2, [r2], #-3585	; 0xfffff1ff
    c630:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    c634:	02050005 	andeq	r0, r5, #5
    c638:	00000000 	andeq	r0, r0, r0
    c63c:	0126fc03 	msreq	CPSR_sx, r3, lsl #24
    c640:	13130905 	tstne	r3, #81920	; 0x14000
    c644:	143e0513 	ldrtne	r0, [lr], #-1299	; 0xfffffaed
    c648:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    c64c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    c650:	04020009 	streq	r0, [r2], #-9
    c654:	04350604 	ldrteq	r0, [r5], #-1540	; 0xfffff9fc
    c658:	00220502 	eoreq	r0, r2, r2, lsl #10
    c65c:	03040402 	movweq	r0, #17410	; 0x4402
    c660:	05015ad9 	streq	r5, [r1, #-2777]	; 0xfffff527
    c664:	04020005 	streq	r0, [r2], #-5
    c668:	02001404 	andeq	r1, r0, #4, 8	; 0x4000000
    c66c:	00140404 	andseq	r0, r4, r4, lsl #8
    c670:	03040402 	movweq	r0, #17410	; 0x4402
    c674:	02009e0c 	andeq	r9, r0, #12, 28	; 0xc0
    c678:	01060404 	tsteq	r6, r4, lsl #8
    c67c:	0d050104 	stfeqs	f0, [r5, #-16]
    c680:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    c684:	25990306 	ldrcs	r0, [r9, #774]	; 0x306
    c688:	00150501 	andseq	r0, r5, r1, lsl #10
    c68c:	06040402 	streq	r0, [r4], -r2, lsl #8
    c690:	00090501 	andeq	r0, r9, r1, lsl #10
    c694:	06040402 	streq	r0, [r4], -r2, lsl #8
    c698:	05020422 	streq	r0, [r2, #-1058]	; 0xfffffbde
    c69c:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    c6a0:	5ae90304 	bpl	ffa4d2b8 <_estack+0xdfa43918>
    c6a4:	00050501 	andeq	r0, r5, r1, lsl #10
    c6a8:	14040402 	strne	r0, [r4], #-1026	; 0xfffffbfe
    c6ac:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    c6b0:	01042e06 	tsteq	r4, r6, lsl #28
    c6b4:	02004105 	andeq	r4, r0, #1073741825	; 0x40000001
    c6b8:	03060404 	movweq	r0, #25604	; 0x6404
    c6bc:	05012597 	streq	r2, [r1, #-1431]	; 0xfffffa69
    c6c0:	04020009 	streq	r0, [r2], #-9
    c6c4:	05051404 	streq	r1, [r5, #-1028]	; 0xfffffbfc
    c6c8:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    c6cc:	11051306 	tstne	r5, r6, lsl #6
    c6d0:	01040200 	mrseq	r0, R12_usr
    c6d4:	00207003 	eoreq	r7, r0, r3
    c6d8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    c6dc:	01000402 	tsteq	r0, r2, lsl #8
    c6e0:	00050501 	andeq	r0, r5, r1, lsl #10
    c6e4:	00000205 	andeq	r0, r0, r5, lsl #4
    c6e8:	9d030000 	stcls	0, cr0, [r3, #-0]
    c6ec:	01060127 	tsteq	r6, r7, lsr #2
    c6f0:	21060905 	tstcs	r6, r5, lsl #18
    c6f4:	14460513 	strbne	r0, [r6], #-1299	; 0xfffffaed
    c6f8:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    c6fc:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    c700:	09030609 	stmdbeq	r3, {r0, r3, r9, sl}
    c704:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    c708:	200b0501 	andcs	r0, fp, r1, lsl #10
    c70c:	22060d05 	andcs	r0, r6, #320	; 0x140
    c710:	01061705 	tsteq	r6, r5, lsl #14
    c714:	0a030505 	beq	cdb30 <_Min_Heap_Size+0xcd330>
    c718:	060d052e 	streq	r0, [sp], -lr, lsr #10
    c71c:	05206d03 	streq	r6, [r0, #-3331]!	; 0xfffff2fd
    c720:	2e010612 	mcrcs	6, 0, r0, cr1, cr2, {0}
    c724:	0d031505 	cfstr32eq	mvfx1, [r3, #-20]	; 0xffffffec
    c728:	063c0520 	ldrteq	r0, [ip], -r0, lsr #10
    c72c:	14090523 	strne	r0, [r9], #-1315	; 0xfffffadd
    c730:	01061005 	tsteq	r6, r5
    c734:	01000402 	tsteq	r0, r2, lsl #8
    c738:	00050501 	andeq	r0, r5, r1, lsl #10
    c73c:	261c0205 	ldrcs	r0, [ip], -r5, lsl #4
    c740:	c0030800 	andgt	r0, r3, r0, lsl #16
    c744:	28050127 	stmdacs	r5, {r0, r1, r2, r5, r8}
    c748:	14090513 	strne	r0, [r9], #-1299	; 0xfffffaed
    c74c:	01062205 	tsteq	r6, r5, lsl #4
    c750:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    c754:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    c758:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    c75c:	054e060d 	strbeq	r0, [lr, #-1549]	; 0xfffff9f3
    c760:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    c764:	053d0625 	ldreq	r0, [sp, #-1573]!	; 0xfffff9db
    c768:	011f032b 	tsteq	pc, fp, lsr #6
    c76c:	0e030d05 	cdpeq	13, 0, cr0, cr3, cr5, {0}
    c770:	002e0101 	eoreq	r0, lr, r1, lsl #2
    c774:	20030402 	andcs	r0, r3, r2, lsl #8
    c778:	03040200 	movweq	r0, #16896	; 0x4200
    c77c:	04020001 	streq	r0, [r2], #-1
    c780:	02002001 	andeq	r2, r0, #1
    c784:	00740404 	rsbseq	r0, r4, r4, lsl #8
    c788:	01040402 	tsteq	r4, r2, lsl #8
    c78c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    c790:	04020001 	streq	r0, [r2], #-1
    c794:	02007404 	andeq	r7, r0, #4, 8	; 0x4000000
    c798:	00820704 	addeq	r0, r2, r4, lsl #14
    c79c:	90070402 	andls	r0, r7, r2, lsl #8
    c7a0:	07040200 	streq	r0, [r4, -r0, lsl #4]
    c7a4:	04020001 	streq	r0, [r2], #-1
    c7a8:	24052e07 	strcs	r2, [r5], #-3591	; 0xfffff1f9
    c7ac:	07040200 	streq	r0, [r4, -r0, lsl #4]
    c7b0:	000d0513 	andeq	r0, sp, r3, lsl r5
    c7b4:	17070402 	strne	r0, [r7, -r2, lsl #8]
    c7b8:	02002905 	andeq	r2, r0, #81920	; 0x14000
    c7bc:	12030704 	andne	r0, r3, #4, 14	; 0x100000
    c7c0:	00050520 	andeq	r0, r5, r0, lsr #10
    c7c4:	06070402 	streq	r0, [r7], -r2, lsl #8
    c7c8:	000d0513 	andeq	r0, sp, r3, lsl r5
    c7cc:	06050402 	streq	r0, [r5], -r2, lsl #8
    c7d0:	08206703 	stmdaeq	r0!, {r0, r1, r8, r9, sl, sp, lr}
    c7d4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    c7d8:	02050005 	andeq	r0, r5, #5
    c7dc:	00000000 	andeq	r0, r0, r0
    c7e0:	0118b103 	tsteq	r8, r3, lsl #2
    c7e4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    c7e8:	32052f06 	andcc	r2, r5, #6, 30
    c7ec:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    c7f0:	05320d05 	ldreq	r0, [r2, #-3333]!	; 0xfffff2fb
    c7f4:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    c7f8:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
    c7fc:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    c800:	0402000d 	streq	r0, [r2], #-13
    c804:	11051604 	tstne	r5, r4, lsl #12
    c808:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    c80c:	29050106 	stmdbcs	r5, {r1, r2, r8}
    c810:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    c814:	0d055006 	stceq	0, cr5, [r5, #-24]	; 0xffffffe8
    c818:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    c81c:	00110516 	andseq	r0, r1, r6, lsl r5
    c820:	06040402 	streq	r0, [r4], -r2, lsl #8
    c824:	000f0501 	andeq	r0, pc, r1, lsl #10
    c828:	20040402 	andcs	r0, r4, r2, lsl #8
    c82c:	22061105 	andcs	r1, r6, #1073741825	; 0x40000001
    c830:	01061a05 	tsteq	r6, r5, lsl #20
    c834:	4e062905 	vmlami.f16	s4, s12, s10	; <UNPREDICTABLE>
    c838:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    c83c:	05144e11 	ldreq	r4, [r4, #-3601]	; 0xfffff1ef
    c840:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    c844:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
    c848:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    c84c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    c850:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    c854:	34030609 	strcc	r0, [r3], #-1545	; 0xfffff9f7
    c858:	320d052e 	andcc	r0, sp, #192937984	; 0xb800000
    c85c:	06230514 			; <UNDEFINED> instruction: 0x06230514
    c860:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    c864:	03062905 	movweq	r2, #26885	; 0x6905
    c868:	0d05200c 	stceq	0, cr2, [r5, #-48]	; 0xffffffd0
    c86c:	06170515 			; <UNDEFINED> instruction: 0x06170515
    c870:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    c874:	29030505 	stmdbcs	r3, {r0, r2, r8, sl}
    c878:	0015052e 	andseq	r0, r5, lr, lsr #10
    c87c:	03010402 	movweq	r0, #5122	; 0x1402
    c880:	00207eef 	eoreq	r7, r0, pc, ror #29
    c884:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    c888:	20210306 	eorcs	r0, r1, r6, lsl #6
    c88c:	01062d05 	tsteq	r6, r5, lsl #26
    c890:	054a1705 	strbeq	r1, [sl, #-1797]	; 0xfffff8fb
    c894:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    c898:	052c0602 	streq	r0, [ip, #-1538]!	; 0xfffff9fe
    c89c:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
    c8a0:	00010602 	andeq	r0, r1, r2, lsl #12
    c8a4:	20020402 	andcs	r0, r2, r2, lsl #8
    c8a8:	26061905 	strcs	r1, [r6], -r5, lsl #18
    c8ac:	01063305 	tsteq	r6, r5, lsl #6
    c8b0:	06110558 			; <UNDEFINED> instruction: 0x06110558
    c8b4:	05013803 	streq	r3, [r1, #-2051]	; 0xfffff7fd
    c8b8:	11053015 	tstne	r5, r5, lsl r0
    c8bc:	3c090330 	stccc	3, cr0, [r9], {48}	; 0x30
    c8c0:	01062705 	tsteq	r6, r5, lsl #14
    c8c4:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    c8c8:	0523063e 	streq	r0, [r3, #-1598]!	; 0xfffff9c2
    c8cc:	2e661315 	mcrcs	3, 3, r1, cr6, cr5, {0}
    c8d0:	052e2b05 	streq	r2, [lr, #-2821]!	; 0xfffff4fb
    c8d4:	200b0315 	andcs	r0, fp, r5, lsl r3
    c8d8:	01062905 	tsteq	r6, r5, lsl #18
    c8dc:	30061505 	andcc	r1, r6, r5, lsl #10
    c8e0:	01062d05 	tsteq	r6, r5, lsl #26
    c8e4:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    c8e8:	05340619 	ldreq	r0, [r4, #-1561]!	; 0xfffff9e7
    c8ec:	20010626 	andcs	r0, r1, r6, lsr #12
    c8f0:	40061905 	andmi	r1, r6, r5, lsl #18
    c8f4:	05342905 	ldreq	r2, [r4, #-2309]!	; 0xfffff6fb
    c8f8:	05051723 	streq	r1, [r5, #-1827]	; 0xfffff8dd
    c8fc:	09021306 	stmdbeq	r2, {r1, r2, r8, r9, ip}
    c900:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    c904:	02050001 	andeq	r0, r5, #1
    c908:	080026a0 	stmdaeq	r0, {r5, r7, r9, sl, sp}
    c90c:	0128fc03 	msreq	CPSR_f, r3, lsl #24
    c910:	42050106 	andmi	r0, r5, #-2147483647	; 0x80000001
    c914:	20052f06 	andcs	r2, r5, r6, lsl #30
    c918:	03050514 	movweq	r0, #21780	; 0x5514
    c91c:	2e050110 	fltcss	f5, r0
    c920:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    c924:	053e062e 	ldreq	r0, [lr, #-1582]!	; 0xfffff9d2
    c928:	01054c28 	tsteq	r5, r8, lsr #24
    c92c:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    c930:	01010002 	tsteq	r1, r2
    c934:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    c938:	00000002 	andeq	r0, r0, r2
    c93c:	299a0300 	ldmibcs	sl, {r8, r9}
    c940:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    c944:	052f0657 	streq	r0, [pc, #-1623]!	; c2f5 <_Min_Heap_Size+0xbaf5>
    c948:	3f051420 	svccc	0x00051420
    c94c:	17050516 	smladne	r5, r6, r5, r0
    c950:	062e2e06 	strteq	r2, [lr], -r6, lsl #28
    c954:	01200127 			; <UNDEFINED> instruction: 0x01200127
    c958:	3c3c2e01 	ldccc	14, cr2, [ip], #-4
    c95c:	0620063c 			; <UNDEFINED> instruction: 0x0620063c
    c960:	05143c20 	ldreq	r3, [r4, #-3104]	; 0xfffff3e0
    c964:	01054c31 	tsteq	r5, r1, lsr ip
    c968:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    c96c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    c970:	02050005 	andeq	r0, r5, #5
    c974:	080026bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, sp}
    c978:	0129ba03 			; <UNDEFINED> instruction: 0x0129ba03
    c97c:	63050106 	movwvs	r0, #20742	; 0x5106
    c980:	24053d06 	strcs	r3, [r5], #-3334	; 0xfffff2fa
    c984:	03090514 	movweq	r0, #38164	; 0x9514
    c988:	2001010c 	andcs	r0, r1, ip, lsl #2
    c98c:	3c3c0101 	ldfccs	f0, [ip], #-4
    c990:	20063c3c 	andcs	r3, r6, ip, lsr ip
    c994:	173c2006 	ldrne	r2, [ip, -r6]!
    c998:	01060b05 	tsteq	r6, r5, lsl #22
    c99c:	05301a05 	ldreq	r1, [r0, #-2565]!	; 0xfffff5fb
    c9a0:	0531063f 	ldreq	r0, [r1, #-1599]!	; 0xfffff9c1
    c9a4:	36051309 	strcc	r1, [r5], -r9, lsl #6
    c9a8:	06050530 			; <UNDEFINED> instruction: 0x06050530
    c9ac:	00030213 	andeq	r0, r3, r3, lsl r2
    c9b0:	01050101 	tsteq	r5, r1, lsl #2
    c9b4:	f8020500 			; <UNDEFINED> instruction: 0xf8020500
    c9b8:	03080026 	movweq	r0, #32806	; 0x8026
    c9bc:	060129dd 			; <UNDEFINED> instruction: 0x060129dd
    c9c0:	06050501 	streq	r0, [r5], -r1, lsl #10
    c9c4:	37051321 	strcc	r1, [r5, -r1, lsr #6]
    c9c8:	03050514 	movweq	r0, #21780	; 0x5514
    c9cc:	16050112 			; <UNDEFINED> instruction: 0x16050112
    c9d0:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    c9d4:	06230520 	strteq	r0, [r3], -r0, lsr #10
    c9d8:	13050521 	movwne	r0, #21793	; 0x5521
    c9dc:	2e3c2001 	cdpcs	0, 3, cr2, cr12, cr1, {0}
    c9e0:	03040200 	movweq	r0, #16896	; 0x4200
    c9e4:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    c9e8:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    c9ec:	003c0304 	eorseq	r0, ip, r4, lsl #6
    c9f0:	14030402 	strne	r0, [r3], #-1026	; 0xfffffbfe
    c9f4:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
    c9f8:	01060304 	tsteq	r6, r4, lsl #6
    c9fc:	03040200 	movweq	r0, #16896	; 0x4200
    ca00:	00070520 	andeq	r0, r7, r0, lsr #10
    ca04:	20030402 	andcs	r0, r3, r2, lsl #8
    ca08:	30060905 	andcc	r0, r6, r5, lsl #18
    ca0c:	2e3c2001 	cdpcs	0, 3, cr2, cr12, cr1, {0}
    ca10:	03040200 	movweq	r0, #16896	; 0x4200
    ca14:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    ca18:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    ca1c:	003c0304 	eorseq	r0, ip, r4, lsl #6
    ca20:	13030402 	movwne	r0, #13314	; 0x3402
    ca24:	03040200 	movweq	r0, #16896	; 0x4200
    ca28:	04020001 	streq	r0, [r2], #-1
    ca2c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    ca30:	00010304 	andeq	r0, r1, r4, lsl #6
    ca34:	06030402 	streq	r0, [r3], -r2, lsl #8
    ca38:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    ca3c:	004a0601 	subeq	r0, sl, r1, lsl #12
    ca40:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    ca44:	03040200 	movweq	r0, #16896	; 0x4200
    ca48:	04020001 	streq	r0, [r2], #-1
    ca4c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    ca50:	00660304 	rsbeq	r0, r6, r4, lsl #6
    ca54:	01030402 	tsteq	r3, r2, lsl #8
    ca58:	03040200 	movweq	r0, #16896	; 0x4200
    ca5c:	04020001 	streq	r0, [r2], #-1
    ca60:	02002003 	andeq	r2, r0, #3
    ca64:	20060304 	andcs	r0, r6, r4, lsl #6
    ca68:	03040200 	movweq	r0, #16896	; 0x4200
    ca6c:	02002006 	andeq	r2, r0, #6
    ca70:	00200304 	eoreq	r0, r0, r4, lsl #6
    ca74:	20030402 	andcs	r0, r3, r2, lsl #8
    ca78:	03040200 	movweq	r0, #16896	; 0x4200
    ca7c:	02002006 	andeq	r2, r0, #6
    ca80:	58060304 	stmdapl	r6, {r2, r8, r9}
    ca84:	03040200 	movweq	r0, #16896	; 0x4200
    ca88:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    ca8c:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    ca90:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    ca94:	0402000d 	streq	r0, [r2], #-13
    ca98:	010c0303 	tsteq	ip, r3, lsl #6
    ca9c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    caa0:	00360104 	eorseq	r0, r6, r4, lsl #2
    caa4:	17010402 	strne	r0, [r1, -r2, lsl #8]
    caa8:	02001b05 	andeq	r1, r0, #5120	; 0x1400
    caac:	01060104 	tsteq	r6, r4, lsl #2
    cab0:	02003605 	andeq	r3, r0, #5242880	; 0x500000
    cab4:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    cab8:	0402000b 	streq	r0, [r2], #-11
    cabc:	0d053c01 	stceq	12, cr3, [r5, #-4]
    cac0:	05163306 	ldreq	r3, [r6, #-774]	; 0xfffffcfa
    cac4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    cac8:	3c1a0301 	ldccc	3, cr0, [sl], {1}
    cacc:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    cad0:	03060104 	movweq	r0, #24836	; 0x6104
    cad4:	00207fbf 	strhteq	r7, [r0], -pc
    cad8:	06010402 	streq	r0, [r1], -r2, lsl #8
    cadc:	0009053c 	andeq	r0, r9, ip, lsr r5
    cae0:	06010402 	streq	r0, [r1], -r2, lsl #8
    cae4:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    cae8:	063c0601 	ldrteq	r0, [ip], -r1, lsl #12
    caec:	01011503 	tsteq	r1, r3, lsl #10
    caf0:	2001012e 	andcs	r0, r1, lr, lsr #2
    caf4:	20062006 	andcs	r2, r6, r6
    caf8:	06202020 	strteq	r2, [r0], -r0, lsr #32
    cafc:	15053c20 	strne	r3, [r5, #-3104]	; 0xfffff3e0
    cb00:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    cb04:	14030634 	strne	r0, [r3], #-1588	; 0xfffff9cc
    cb08:	13050520 	movwne	r0, #21792	; 0x5520
    cb0c:	01060c05 	tsteq	r6, r5, lsl #24
    cb10:	01000e02 	tsteq	r0, r2, lsl #28
    cb14:	00010501 	andeq	r0, r1, r1, lsl #10
    cb18:	00000205 	andeq	r0, r0, r5, lsl #4
    cb1c:	bb030000 	bllt	ccb24 <_Min_Heap_Size+0xcc324>
    cb20:	0106012a 	tsteq	r6, sl, lsr #2
    cb24:	21060505 	tstcs	r6, r5, lsl #10
    cb28:	05145005 	ldreq	r5, [r4, #-5]
    cb2c:	0505163f 	streq	r1, [r5, #-1599]	; 0xfffff9c1
    cb30:	062e0615 			; <UNDEFINED> instruction: 0x062e0615
    cb34:	06140527 	ldreq	r0, [r4], -r7, lsr #10
    cb38:	06230501 	strteq	r0, [r3], -r1, lsl #10
    cb3c:	13050521 	movwne	r0, #21793	; 0x5521
    cb40:	3c3c2001 	ldccc	0, cr2, [ip], #-4
    cb44:	03040200 	movweq	r0, #16896	; 0x4200
    cb48:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    cb4c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    cb50:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
    cb54:	04020009 	streq	r0, [r2], #-9
    cb58:	010c0303 	tsteq	ip, r3, lsl #6
    cb5c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    cb60:	00350304 	eorseq	r0, r5, r4, lsl #6
    cb64:	01030402 	tsteq	r3, r2, lsl #8
    cb68:	03040200 	movweq	r0, #16896	; 0x4200
    cb6c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    cb70:	02003c03 	andeq	r3, r0, #768	; 0x300
    cb74:	002e0304 	eoreq	r0, lr, r4, lsl #6
    cb78:	4a030402 	bmi	cdb88 <_Min_Heap_Size+0xcd388>
    cb7c:	03040200 	movweq	r0, #16896	; 0x4200
    cb80:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    cb84:	02003c03 	andeq	r3, r0, #768	; 0x300
    cb88:	00130304 	andseq	r0, r3, r4, lsl #6
    cb8c:	01030402 	tsteq	r3, r2, lsl #8
    cb90:	03040200 	movweq	r0, #16896	; 0x4200
    cb94:	04020001 	streq	r0, [r2], #-1
    cb98:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    cb9c:	20060304 	andcs	r0, r6, r4, lsl #6
    cba0:	01040200 	mrseq	r0, R12_usr
    cba4:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    cba8:	002e0304 	eoreq	r0, lr, r4, lsl #6
    cbac:	01030402 	tsteq	r3, r2, lsl #8
    cbb0:	03040200 	movweq	r0, #16896	; 0x4200
    cbb4:	04020001 	streq	r0, [r2], #-1
    cbb8:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    cbbc:	00010304 	andeq	r0, r1, r4, lsl #6
    cbc0:	01030402 	tsteq	r3, r2, lsl #8
    cbc4:	03040200 	movweq	r0, #16896	; 0x4200
    cbc8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    cbcc:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    cbd0:	00200304 	eoreq	r0, r0, r4, lsl #6
    cbd4:	20030402 	andcs	r0, r3, r2, lsl #8
    cbd8:	03040200 	movweq	r0, #16896	; 0x4200
    cbdc:	02002006 	andeq	r2, r0, #6
    cbe0:	58060304 	stmdapl	r6, {r2, r8, r9}
    cbe4:	03040200 	movweq	r0, #16896	; 0x4200
    cbe8:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    cbec:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    cbf0:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    cbf4:	04020009 	streq	r0, [r2], #-9
    cbf8:	1b051603 	blne	15240c <_Min_Heap_Size+0x151c0c>
    cbfc:	03040200 	movweq	r0, #16896	; 0x4200
    cc00:	36050106 	strcc	r0, [r5], -r6, lsl #2
    cc04:	03040200 	movweq	r0, #16896	; 0x4200
    cc08:	000b0520 	andeq	r0, fp, r0, lsr #10
    cc0c:	3c030402 	cfstrscc	mvf0, [r3], {2}
    cc10:	34060d05 	strcc	r0, [r6], #-3333	; 0xfffff2fb
    cc14:	01062105 	tsteq	r6, r5, lsl #2
    cc18:	03063405 	movweq	r3, #25605	; 0x6405
    cc1c:	01053c11 	tsteq	r5, r1, lsl ip
    cc20:	05051306 	streq	r1, [r5, #-774]	; 0xfffffcfa
    cc24:	01040200 	mrseq	r0, R12_usr
    cc28:	20500306 	subscs	r0, r0, r6, lsl #6
    cc2c:	01040200 	mrseq	r0, R12_usr
    cc30:	02003c06 	andeq	r3, r0, #1536	; 0x600
    cc34:	03060104 	movweq	r0, #24836	; 0x6104
    cc38:	0b020113 	bleq	8d08c <_Min_Heap_Size+0x8c88c>
    cc3c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    cc40:	02050001 	andeq	r0, r5, #1
    cc44:	00000000 	andeq	r0, r0, r0
    cc48:	012b8203 			; <UNDEFINED> instruction: 0x012b8203
    cc4c:	31050106 	tstcc	r5, r6, lsl #2
    cc50:	1e052f06 	cdpne	15, 0, cr2, cr5, cr6, {0}
    cc54:	13050514 	movwne	r0, #21780	; 0x5514
    cc58:	05300905 	ldreq	r0, [r0, #-2309]!	; 0xfffff6fb
    cc5c:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    cc60:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    cc64:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    cc68:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
    cc6c:	01053027 	tsteq	r5, r7, lsr #32
    cc70:	02201306 	eoreq	r1, r0, #402653184	; 0x18000000
    cc74:	01010005 	tsteq	r1, r5
    cc78:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    cc7c:	0027dc02 	eoreq	sp, r7, r2, lsl #24
    cc80:	2b920308 	blcs	fe48d8a8 <_estack+0xde483f08>
    cc84:	13390501 	teqne	r9, #4194304	; 0x400000
    cc88:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    cc8c:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    cc90:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    cc94:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    cc98:	053e062f 	ldreq	r0, [lr, #-1583]!	; 0xfffff9d1
    cc9c:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    cca0:	01010006 	tsteq	r1, r6
    cca4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    cca8:	0027f402 	eoreq	pc, r7, r2, lsl #8
    ccac:	2b9f0308 	blcs	fe7cd8d4 <_estack+0xde7c3f34>
    ccb0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    ccb4:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    ccb8:	1e051440 	cfcvtdsne	mvf1, mvd5
    ccbc:	13220514 			; <UNDEFINED> instruction: 0x13220514
    ccc0:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    ccc4:	1a053109 	bne	1590f0 <_Min_Heap_Size+0x1588f0>
    ccc8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    cccc:	44052f06 	strmi	r2, [r5], #-3846	; 0xfffff0fa
    ccd0:	1a050106 	bne	14d0f0 <_Min_Heap_Size+0x14c8f0>
    ccd4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    ccd8:	061d0523 	ldreq	r0, [sp], -r3, lsr #10
    ccdc:	4a0f0501 	bmi	3ce0e8 <_Min_Heap_Size+0x3cd8e8>
    cce0:	24061105 	strcs	r1, [r6], #-261	; 0xfffffefb
    cce4:	01061d05 	tsteq	r6, r5, lsl #26
    cce8:	202e2e05 	eorcs	r2, lr, r5, lsl #28
    ccec:	2f061105 	svccs	0x00061105
    ccf0:	01061905 	tsteq	r6, r5, lsl #18
    ccf4:	06050520 	streq	r0, [r5], -r0, lsr #10
    ccf8:	05012703 	streq	r2, [r1, #-1795]	; 0xfffff8fd
    ccfc:	05053030 	streq	r3, [r5, #-48]	; 0xffffffd0
    cd00:	06010514 			; <UNDEFINED> instruction: 0x06010514
    cd04:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    cd08:	052e5a03 	streq	r5, [lr, #-2563]!	; 0xfffff5fd
    cd0c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    cd10:	0905200f 	stmdbeq	r5, {r0, r1, r2, r3, sp}
    cd14:	3c0a0306 	stccc	3, cr0, [sl], {6}
    cd18:	01061f05 	tsteq	r6, r5, lsl #30
    cd1c:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    cd20:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    cd24:	0d053c01 	stceq	12, cr3, [r5, #-4]
    cd28:	05133506 	ldreq	r3, [r3, #-1286]	; 0xfffffafa
    cd2c:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    cd30:	1c052d15 	stcne	13, cr2, [r5], {21}
    cd34:	060e0521 	streq	r0, [lr], -r1, lsr #10
    cd38:	06100522 	ldreq	r0, [r0], -r2, lsr #10
    cd3c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    cd40:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    cd44:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    cd48:	052f060d 	streq	r0, [pc, #-1549]!	; c743 <_Min_Heap_Size+0xbf43>
    cd4c:	20010615 	andcs	r0, r1, r5, lsl r6
    cd50:	03060d05 	movweq	r0, #27909	; 0x6d05
    cd54:	1c052079 	stcne	0, cr2, [r5], {121}	; 0x79
    cd58:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    cd5c:	20063d06 	andcs	r3, r6, r6, lsl #26
    cd60:	15052f06 	strne	r2, [r5, #-3846]	; 0xfffff0fa
    cd64:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    cd68:	206c0319 	rsbcs	r0, ip, r9, lsl r3
    cd6c:	00080220 	andeq	r0, r8, r0, lsr #4
    cd70:	01050101 	tsteq	r5, r1, lsl #2
    cd74:	70020500 	andvc	r0, r2, r0, lsl #10
    cd78:	03080028 	movweq	r0, #32808	; 0x8028
    cd7c:	05012be3 	streq	r2, [r1, #-3043]	; 0xfffff41d
    cd80:	05051322 	streq	r1, [r5, #-802]	; 0xfffffcde
    cd84:	06290515 			; <UNDEFINED> instruction: 0x06290515
    cd88:	06230501 	strteq	r0, [r3], -r1, lsl #10
    cd8c:	0601053e 			; <UNDEFINED> instruction: 0x0601053e
    cd90:	00030213 	andeq	r0, r3, r3, lsl r2
    cd94:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    cd98:	7c020500 	cfstr32vc	mvfx0, [r2], {-0}
    cd9c:	03080028 	movweq	r0, #32808	; 0x8028
    cda0:	05012dfc 	streq	r2, [r1, #-3580]	; 0xfffff204
    cda4:	0905150d 	stmdbeq	r5, {r0, r2, r3, r8, sl, ip}
    cda8:	14310515 	ldrtne	r0, [r1], #-1301	; 0xfffffaeb
    cdac:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    cdb0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    cdb4:	0e052e0b 	cdpeq	14, 0, cr2, cr5, cr11, {0}
    cdb8:	20052506 	andcs	r2, r5, r6, lsl #10
    cdbc:	10050106 	andne	r0, r5, r6, lsl #2
    cdc0:	060e052e 	streq	r0, [lr], -lr, lsr #10
    cdc4:	061f0525 	ldreq	r0, [pc], -r5, lsr #10
    cdc8:	2e100501 	cfmul32cs	mvfx0, mvfx0, mvfx1
    cdcc:	28061205 	stmdacs	r6, {r0, r2, r9, ip}
    cdd0:	01061605 	tsteq	r6, r5, lsl #12
    cdd4:	052e6105 	streq	r6, [lr, #-261]!	; 0xfffffefb
    cdd8:	1a053c14 	bne	15be30 <_Min_Heap_Size+0x15b630>
    cddc:	052e6803 	streq	r6, [lr, #-2051]!	; 0xfffff7fd
    cde0:	2e090315 	mcrcs	3, 0, r0, cr9, cr5, {0}
    cde4:	19053433 	stmdbne	r5, {r0, r1, r4, r5, sl, ip, sp}
    cde8:	052e0a03 	streq	r0, [lr, #-2563]!	; 0xfffff5fd
    cdec:	05250625 	streq	r0, [r5, #-1573]!	; 0xfffff9db
    cdf0:	0905153b 	stmdbeq	r5, {r0, r1, r3, r4, r5, r8, sl, ip}
    cdf4:	06050514 			; <UNDEFINED> instruction: 0x06050514
    cdf8:	000b0213 	andeq	r0, fp, r3, lsl r2
    cdfc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    ce00:	00020500 	andeq	r0, r2, r0, lsl #10
    ce04:	03000000 	movweq	r0, #0
    ce08:	060131e3 	streq	r3, [r1], -r3, ror #3
    ce0c:	06090501 	streq	r0, [r9], -r1, lsl #10
    ce10:	05131321 	ldreq	r1, [r3, #-801]	; 0xfffffcdf
    ce14:	09051438 	stmdbeq	r5, {r3, r4, r5, sl, ip}
    ce18:	06110514 			; <UNDEFINED> instruction: 0x06110514
    ce1c:	000d0501 	andeq	r0, sp, r1, lsl #10
    ce20:	06040402 	streq	r0, [r4], -r2, lsl #8
    ce24:	00090532 	andeq	r0, r9, r2, lsr r5
    ce28:	1a040402 	bne	10de38 <_Min_Heap_Size+0x10d638>
    ce2c:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
    ce30:	01060404 	tsteq	r6, r4, lsl #8
    ce34:	02003c05 	andeq	r3, r0, #1280	; 0x500
    ce38:	3e060404 	cdpcc	4, 0, cr0, cr6, cr4, {0}
    ce3c:	02000905 	andeq	r0, r0, #81920	; 0x14000
    ce40:	05140404 	ldreq	r0, [r4, #-1028]	; 0xfffffbfc
    ce44:	04020005 	streq	r0, [r2], #-5
    ce48:	05130604 	ldreq	r0, [r3, #-1540]	; 0xfffff9fc
    ce4c:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    ce50:	206f0301 	rsbcs	r0, pc, r1, lsl #6
    ce54:	01040200 	mrseq	r0, R12_usr
    ce58:	0003022e 	andeq	r0, r3, lr, lsr #4
    ce5c:	09050101 	stmdbeq	r5, {r0, r8}
    ce60:	00020500 	andeq	r0, r2, r0, lsl #10
    ce64:	03000000 	movweq	r0, #0
    ce68:	050132d0 	streq	r3, [r1, #-720]	; 0xfffffd30
    ce6c:	3305130d 	movwcc	r1, #21261	; 0x530d
    ce70:	170d0514 	smladne	sp, r4, r5, r0
    ce74:	01061505 	tsteq	r6, r5, lsl #10
    ce78:	30063d05 	andcc	r3, r6, r5, lsl #26
    ce7c:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    ce80:	02130609 	andseq	r0, r3, #9437184	; 0x900000
    ce84:	01010004 	tsteq	r1, r4
    ce88:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    ce8c:	00000002 	andeq	r0, r0, r2
    ce90:	32f30300 	rscscc	r0, r3, #0, 6
    ce94:	13090501 	movwne	r0, #38145	; 0x9501
    ce98:	05143f05 	ldreq	r3, [r4, #-3845]	; 0xfffff0fb
    ce9c:	0b051409 	bleq	151ec8 <_Min_Heap_Size+0x1516c8>
    cea0:	11050106 	tstne	r5, r6, lsl #2
    cea4:	19052306 	stmdbne	r5, {r1, r2, r8, r9, sp}
    cea8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    ceac:	20790316 	rsbscs	r0, r9, r6, lsl r3
    ceb0:	03064005 	movweq	r4, #24581	; 0x6005
    ceb4:	0905200d 	stmdbeq	r5, {r0, r2, r3, sp}
    ceb8:	06050514 			; <UNDEFINED> instruction: 0x06050514
    cebc:	00030213 	andeq	r0, r3, r3, lsl r2
    cec0:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    cec4:	c4020500 	strgt	r0, [r2], #-1280	; 0xfffffb00
    cec8:	03080028 	movweq	r0, #32808	; 0x8028
    cecc:	0501338c 	streq	r3, [r1, #-908]	; 0xfffffc74
    ced0:	2c051309 	stccs	3, cr1, [r5], {9}
    ced4:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    ced8:	01061f05 	tsteq	r6, r5, lsl #30
    cedc:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    cee0:	0a030611 	beq	ce72c <_Min_Heap_Size+0xcdf2c>
    cee4:	062a0520 	strteq	r0, [sl], -r0, lsr #10
    cee8:	2e130501 	cfmul32cs	mvfx0, mvfx3, mvfx1
    ceec:	05261d05 	streq	r1, [r6, #-3333]!	; 0xfffff2fb
    cef0:	05280636 	streq	r0, [r8, #-1590]!	; 0xfffff9ca
    cef4:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    cef8:	1d051306 	stcne	3, cr1, [r5, #-24]	; 0xffffffe8
    cefc:	05207103 	streq	r7, [r0, #-259]!	; 0xfffffefd
    cf00:	2e760315 	mrccs	3, 3, r0, cr6, cr5, {0}
    cf04:	01000602 	tsteq	r0, r2, lsl #12
    cf08:	00050501 	andeq	r0, r5, r1, lsl #10
    cf0c:	00000205 	andeq	r0, r0, r5, lsl #4
    cf10:	b4030000 	strlt	r0, [r3], #-0
    cf14:	09050133 	stmdbeq	r5, {r0, r1, r4, r5, r8}
    cf18:	39051313 	stmdbcc	r5, {r0, r1, r4, r8, r9, ip}
    cf1c:	16090514 			; <UNDEFINED> instruction: 0x16090514
    cf20:	01060b05 	tsteq	r6, r5, lsl #22
    cf24:	78030505 	stmdavc	r3, {r0, r2, r8, sl}
    cf28:	060d052e 	streq	r0, [sp], -lr, lsr #10
    cf2c:	052e0d03 	streq	r0, [lr, #-3331]!	; 0xfffff2fd
    cf30:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    cf34:	0f05203c 	svceq	0x0005203c
    cf38:	0611053c 			; <UNDEFINED> instruction: 0x0611053c
    cf3c:	06170533 			; <UNDEFINED> instruction: 0x06170533
    cf40:	20130501 	andscs	r0, r3, r1, lsl #10
    cf44:	30061505 	andcc	r1, r6, r5, lsl #10
    cf48:	056a2d05 	strbeq	r2, [sl, #-3333]!	; 0xfffff2fb
    cf4c:	15051711 	strne	r1, [r5, #-1809]	; 0xfffff8ef
    cf50:	13050106 	movwne	r0, #20742	; 0x5106
    cf54:	06150566 	ldreq	r0, [r5], -r6, ror #10
    cf58:	052e1f03 	streq	r1, [lr, #-3843]!	; 0xfffff0fd
    cf5c:	05010640 	streq	r0, [r1, #-1600]	; 0xfffff9c0
    cf60:	19053c32 	stmdbne	r5, {r1, r4, r5, sl, fp, ip, sp}
    cf64:	03050526 	movweq	r0, #21798	; 0x5526
    cf68:	1505201d 	strne	r2, [r5, #-29]	; 0xffffffe3
    cf6c:	20400306 	subcs	r0, r0, r6, lsl #6
    cf70:	01061905 	tsteq	r6, r5, lsl #18
    cf74:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    cf78:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    cf7c:	40051615 	andmi	r1, r5, r5, lsl r6
    cf80:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    cf84:	0615053c 			; <UNDEFINED> instruction: 0x0615053c
    cf88:	01010121 	tsteq	r1, r1, lsr #2
    cf8c:	01040200 	mrseq	r0, R12_usr
    cf90:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    cf94:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    cf98:	00010304 	andeq	r0, r1, r4, lsl #6
    cf9c:	01030402 	tsteq	r3, r2, lsl #8
    cfa0:	03040200 	movweq	r0, #16896	; 0x4200
    cfa4:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    cfa8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    cfac:	00010304 	andeq	r0, r1, r4, lsl #6
    cfb0:	20030402 	andcs	r0, r3, r2, lsl #8
    cfb4:	03040200 	movweq	r0, #16896	; 0x4200
    cfb8:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    cfbc:	02002003 	andeq	r2, r0, #3
    cfc0:	00200304 	eoreq	r0, r0, r4, lsl #6
    cfc4:	06030402 	streq	r0, [r3], -r2, lsl #8
    cfc8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    cfcc:	00580603 	subseq	r0, r8, r3, lsl #12
    cfd0:	74030402 	strvc	r0, [r3], #-1026	; 0xfffffbfe
    cfd4:	03040200 	movweq	r0, #16896	; 0x4200
    cfd8:	04020001 	streq	r0, [r2], #-1
    cfdc:	19050103 	stmdbne	r5, {r0, r1, r8}
    cfe0:	03040200 	movweq	r0, #16896	; 0x4200
    cfe4:	01150306 	tsteq	r5, r6, lsl #6
    cfe8:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    cfec:	01062505 	tsteq	r6, r5, lsl #10
    cff0:	05204405 	streq	r4, [r0, #-1029]!	; 0xfffffbfb
    cff4:	14053c13 	strne	r3, [r5], #-3091	; 0xfffff3ed
    cff8:	2e7fbc03 	cdpcs	12, 7, cr11, cr15, cr3, {0}
    cffc:	05052020 	streq	r2, [r5, #-32]	; 0xffffffe0
    d000:	2000dd03 	andcs	sp, r0, r3, lsl #26
    d004:	70031d05 	andvc	r1, r3, r5, lsl #26
    d008:	06250520 	strteq	r0, [r5], -r0, lsr #10
    d00c:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    d010:	09051534 	stmdbeq	r5, {r2, r4, r5, r8, sl, ip}
    d014:	06100514 			; <UNDEFINED> instruction: 0x06100514
    d018:	00080201 	andeq	r0, r8, r1, lsl #4
    d01c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    d020:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
    d024:	03080028 	movweq	r0, #32808	; 0x8028
    d028:	0501349b 	streq	r3, [r1, #-1179]	; 0xfffffb65
    d02c:	05131309 	ldreq	r1, [r3, #-777]	; 0xfffffcf7
    d030:	0905143c 	stmdbeq	r5, {r2, r3, r4, r5, sl, ip}
    d034:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    d038:	03050501 	movweq	r0, #21761	; 0x5501
    d03c:	32052e7a 	andcc	r2, r5, #1952	; 0x7a0
    d040:	2e0c0306 	cdpcs	3, 0, cr0, cr12, cr6, {0}
    d044:	05133105 	ldreq	r3, [r3, #-261]	; 0xfffffefb
    d048:	1405130d 	strne	r1, [r5], #-781	; 0xfffffcf3
    d04c:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    d050:	060d0520 	streq	r0, [sp], -r0, lsr #10
    d054:	06160532 			; <UNDEFINED> instruction: 0x06160532
    d058:	202b0501 	eorcs	r0, fp, r1, lsl #10
    d05c:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    d060:	05310611 	ldreq	r0, [r1, #-1553]!	; 0xfffff9ef
    d064:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    d068:	206d0314 	rsbcs	r0, sp, r4, lsl r3
    d06c:	03062505 	movweq	r2, #25861	; 0x6505
    d070:	052000ce 	streq	r0, [r0, #-206]!	; 0xffffff32
    d074:	09051537 	stmdbeq	r5, {r0, r1, r2, r4, r5, r8, sl, ip}
    d078:	06050514 			; <UNDEFINED> instruction: 0x06050514
    d07c:	06150513 			; <UNDEFINED> instruction: 0x06150513
    d080:	05204603 	streq	r4, [r0, #-1539]!	; 0xfffff9fd
    d084:	2e010619 	mcrcs	6, 0, r0, cr1, cr9, {0}
    d088:	34063105 	strcc	r3, [r6], #-261	; 0xfffffefb
    d08c:	05175205 	ldreq	r5, [r7, #-517]	; 0xfffffdfb
    d090:	2e051315 	mcrcs	3, 0, r1, cr5, cr5, {0}
    d094:	27050106 	strcs	r0, [r5, -r6, lsl #2]
    d098:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    d09c:	01013d25 	tsteq	r1, r5, lsr #26
    d0a0:	04020001 	streq	r0, [r2], #-1
    d0a4:	02004a01 	andeq	r4, r0, #4096	; 0x1000
    d0a8:	002e0304 	eoreq	r0, lr, r4, lsl #6
    d0ac:	01030402 	tsteq	r3, r2, lsl #8
    d0b0:	03040200 	movweq	r0, #16896	; 0x4200
    d0b4:	04020001 	streq	r0, [r2], #-1
    d0b8:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    d0bc:	00010304 	andeq	r0, r1, r4, lsl #6
    d0c0:	01030402 	tsteq	r3, r2, lsl #8
    d0c4:	03040200 	movweq	r0, #16896	; 0x4200
    d0c8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    d0cc:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    d0d0:	00200304 	eoreq	r0, r0, r4, lsl #6
    d0d4:	20030402 	andcs	r0, r3, r2, lsl #8
    d0d8:	03040200 	movweq	r0, #16896	; 0x4200
    d0dc:	02002006 	andeq	r2, r0, #6
    d0e0:	58060304 	stmdapl	r6, {r2, r8, r9}
    d0e4:	03040200 	movweq	r0, #16896	; 0x4200
    d0e8:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    d0ec:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    d0f0:	00010304 	andeq	r0, r1, r4, lsl #6
    d0f4:	03030402 	movweq	r0, #13314	; 0x3402
    d0f8:	1d050114 	stfnes	f0, [r5, #-80]	; 0xffffffb0
    d0fc:	03040200 	movweq	r0, #16896	; 0x4200
    d100:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    d104:	052e4003 	streq	r4, [lr, #-3]!
    d108:	00d40305 	sbcseq	r0, r4, r5, lsl #6
    d10c:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    d110:	20207fac 	eorcs	r7, r0, ip, lsr #31
    d114:	01000602 	tsteq	r0, r2, lsl #12
    d118:	00050501 	andeq	r0, r5, r1, lsl #10
    d11c:	00000205 	andeq	r0, r0, r5, lsl #4
    d120:	fa030000 	blx	cd128 <_Min_Heap_Size+0xcc928>
    d124:	09050134 	stmdbeq	r5, {r2, r4, r5, r8}
    d128:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    d12c:	09051466 	stmdbeq	r5, {r1, r2, r5, r6, sl, ip}
    d130:	060b0514 			; <UNDEFINED> instruction: 0x060b0514
    d134:	03050501 	movweq	r0, #21761	; 0x5501
    d138:	31052e79 	tstcc	r5, r9, ror lr
    d13c:	2e0b0306 	cdpcs	3, 0, cr0, cr11, cr6, {0}
    d140:	05180d05 	ldreq	r0, [r8, #-3333]	; 0xfffff2fb
    d144:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    d148:	2105200f 	tstcs	r5, pc
    d14c:	060d0530 			; <UNDEFINED> instruction: 0x060d0530
    d150:	06160528 	ldreq	r0, [r6], -r8, lsr #10
    d154:	200f0501 	andcs	r0, pc, r1, lsl #10
    d158:	34061105 	strcc	r1, [r6], #-261	; 0xfffffefb
    d15c:	01061a05 	tsteq	r6, r5, lsl #20
    d160:	05201305 	streq	r1, [r0, #-773]!	; 0xfffffcfb
    d164:	00ce0305 	sbceq	r0, lr, r5, lsl #6
    d168:	063a052e 	ldrteq	r0, [sl], -lr, lsr #10
    d16c:	207fb703 	rsbscs	fp, pc, r3, lsl #14
    d170:	05174c05 	ldreq	r4, [r7, #-3077]	; 0xfffff3fb
    d174:	05131315 	ldreq	r1, [r3, #-789]	; 0xfffffceb
    d178:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
    d17c:	05240615 	streq	r0, [r4, #-1557]!	; 0xfffff9eb
    d180:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    d184:	19052017 	stmdbne	r5, {r0, r1, r2, r4, sp}
    d188:	2e063006 	cdpcs	0, 0, cr3, cr6, cr6, {0}
    d18c:	24063105 	strcs	r3, [r6], #-261	; 0xfffffefb
    d190:	09031505 	stmdbeq	r3, {r0, r2, r8, sl, ip}
    d194:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    d198:	17053c01 	strne	r3, [r5, -r1, lsl #24]
    d19c:	0619053c 			; <UNDEFINED> instruction: 0x0619053c
    d1a0:	061d0530 			; <UNDEFINED> instruction: 0x061d0530
    d1a4:	35052e01 	strcc	r2, [r5, #-3585]	; 0xfffff1ff
    d1a8:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    d1ac:	01151905 	tsteq	r5, r5, lsl #18
    d1b0:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    d1b4:	00580104 	subseq	r0, r8, r4, lsl #2
    d1b8:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    d1bc:	03040200 	movweq	r0, #16896	; 0x4200
    d1c0:	04020001 	streq	r0, [r2], #-1
    d1c4:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    d1c8:	00660304 	rsbeq	r0, r6, r4, lsl #6
    d1cc:	01030402 	tsteq	r3, r2, lsl #8
    d1d0:	03040200 	movweq	r0, #16896	; 0x4200
    d1d4:	04020001 	streq	r0, [r2], #-1
    d1d8:	02002003 	andeq	r2, r0, #3
    d1dc:	002e0304 	eoreq	r0, lr, r4, lsl #6
    d1e0:	20030402 	andcs	r0, r3, r2, lsl #8
    d1e4:	03040200 	movweq	r0, #16896	; 0x4200
    d1e8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    d1ec:	00200603 	eoreq	r0, r0, r3, lsl #12
    d1f0:	06030402 	streq	r0, [r3], -r2, lsl #8
    d1f4:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    d1f8:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    d1fc:	00010304 	andeq	r0, r1, r4, lsl #6
    d200:	01030402 	tsteq	r3, r2, lsl #8
    d204:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    d208:	1d030304 	stcne	3, cr0, [r3, #-16]
    d20c:	003a0501 	eorseq	r0, sl, r1, lsl #10
    d210:	15030402 	strne	r0, [r3, #-1026]	; 0xfffffbfe
    d214:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    d218:	13060304 	movwne	r0, #25348	; 0x6304
    d21c:	03040200 	movweq	r0, #16896	; 0x4200
    d220:	00060220 	andeq	r0, r6, r0, lsr #4
    d224:	01050101 	tsteq	r5, r1, lsl #2
    d228:	00020500 	andeq	r0, r2, r0, lsl #10
    d22c:	03000000 	movweq	r0, #0
    d230:	05013b91 	streq	r3, [r1, #-2961]	; 0xfffff46f
    d234:	2b051305 	blcs	151e50 <_Min_Heap_Size+0x151650>
    d238:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    d23c:	01061005 	tsteq	r6, r5
    d240:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
    d244:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
    d248:	05056836 	streq	r6, [r5, #-2102]	; 0xfffff7ca
    d24c:	06010514 			; <UNDEFINED> instruction: 0x06010514
    d250:	00030213 	andeq	r0, r3, r3, lsl r2
    d254:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    d258:	00020500 	andeq	r0, r2, r0, lsl #10
    d25c:	03000000 	movweq	r0, #0
    d260:	05013ba5 	streq	r3, [r1, #-2981]	; 0xfffff45b
    d264:	33051309 	movwcc	r1, #21257	; 0x5309
    d268:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    d26c:	01060f05 	tsteq	r6, r5, lsl #30
    d270:	32060905 	andcc	r0, r6, #81920	; 0x14000
    d274:	01060b05 	tsteq	r6, r5, lsl #22
    d278:	22060d05 	andcs	r0, r6, #320	; 0x140
    d27c:	01061405 	tsteq	r6, r5, lsl #8
    d280:	05202505 	streq	r2, [r0, #-1285]!	; 0xfffffafb
    d284:	0531063b 	ldreq	r0, [r1, #-1595]!	; 0xfffff9c5
    d288:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    d28c:	04021306 	streq	r1, [r2], #-774	; 0xfffffcfa
    d290:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    d294:	02050005 	andeq	r0, r5, #5
    d298:	00000000 	andeq	r0, r0, r0
    d29c:	013bc003 	teqeq	fp, r3
    d2a0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    d2a4:	05134b06 	ldreq	r4, [r3, #-2822]	; 0xfffff4fa
    d2a8:	5005145f 	andpl	r1, r5, pc, asr r4
    d2ac:	16090514 			; <UNDEFINED> instruction: 0x16090514
    d2b0:	05340d05 	ldreq	r0, [r4, #-3333]!	; 0xfffff2fb
    d2b4:	21053111 	tstcs	r5, r1, lsl r1
    d2b8:	32050106 	andcc	r0, r5, #-2147483647	; 0x80000001
    d2bc:	5813052e 	ldmdapl	r3, {r1, r2, r3, r5, r8, sl}
    d2c0:	23061505 	movwcs	r1, #25861	; 0x6505
    d2c4:	01062105 	tsteq	r6, r5, lsl #2
    d2c8:	052e4405 	streq	r4, [lr, #-1029]!	; 0xfffffbfb
    d2cc:	054c0615 	strbeq	r0, [ip, #-1557]	; 0xfffff9eb
    d2d0:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    d2d4:	0b03062d 	bleq	ceb90 <_Min_Heap_Size+0xce390>
    d2d8:	150d0520 	strne	r0, [sp, #-1312]	; 0xfffffae0
    d2dc:	19290533 	stmdbne	r9!, {r0, r1, r4, r5, r8, sl}
    d2e0:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    d2e4:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    d2e8:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    d2ec:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    d2f0:	05260625 	streq	r0, [r6, #-1573]!	; 0xfffff9db
    d2f4:	35051509 	strcc	r1, [r5, #-1289]	; 0xfffffaf7
    d2f8:	130d0530 	movwne	r0, #54576	; 0xd530
    d2fc:	01062405 	tsteq	r6, r5, lsl #8
    d300:	052e1605 	streq	r1, [lr, #-1541]!	; 0xfffff9fb
    d304:	055a060d 	ldrbeq	r0, [sl, #-1549]	; 0xfffff9f3
    d308:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    d30c:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    d310:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    d314:	05220615 	streq	r0, [r2, #-1557]!	; 0xfffff9eb
    d318:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    d31c:	29052e46 	stmdbcs	r5, {r1, r2, r6, r9, sl, fp, sp}
    d320:	4a090306 	bmi	24df40 <_Min_Heap_Size+0x24d740>
    d324:	05150d05 	ldreq	r0, [r5, #-3333]	; 0xfffff2fb
    d328:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    d32c:	05202e3c 	streq	r2, [r0, #-3644]!	; 0xfffff1c4
    d330:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    d334:	09053038 	stmdbeq	r5, {r3, r4, r5, ip, sp}
    d338:	06050514 			; <UNDEFINED> instruction: 0x06050514
    d33c:	062d0513 			; <UNDEFINED> instruction: 0x062d0513
    d340:	052e4603 	streq	r4, [lr, #-1539]!	; 0xfffff9fd
    d344:	0533150d 	ldreq	r1, [r3, #-1293]!	; 0xfffffaf3
    d348:	57030625 	strpl	r0, [r3, -r5, lsr #12]
    d34c:	19052001 	stmdbne	r5, {r0, sp}
    d350:	20180306 	andscs	r0, r8, r6, lsl #6
    d354:	09032d05 	stmdbeq	r3, {r0, r2, r8, sl, fp, sp}
    d358:	150d0501 	strne	r0, [sp, #-1281]	; 0xfffffaff
    d35c:	143f0533 	ldrtne	r0, [pc], #-1331	; d364 <_Min_Heap_Size+0xcb64>
    d360:	05131105 	ldreq	r1, [r3, #-261]	; 0xfffffefb
    d364:	6c030626 	stcvs	6, cr0, [r3], {38}	; 0x26
    d368:	2805204a 	stmdacs	r5, {r1, r3, r6, sp}
    d36c:	01040200 	mrseq	r0, R12_usr
    d370:	05201e03 	streq	r1, [r0, #-3587]!	; 0xfffff1fd
    d374:	6630060d 	ldrtvs	r0, [r0], -sp, lsl #12
    d378:	2e23052e 	cfsh64cs	mvdx0, mvdx3, #30
    d37c:	14031505 	strne	r1, [r3], #-1285	; 0xfffffafb
    d380:	06210520 	strteq	r0, [r1], -r0, lsr #10
    d384:	2e510501 	cdpcs	5, 5, cr0, cr1, cr1, {0}
    d388:	02204605 	eoreq	r4, r0, #5242880	; 0x500000
    d38c:	01010009 	tsteq	r1, r9
    d390:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    d394:	00000002 	andeq	r0, r0, r2
    d398:	3ca90300 	stccc	3, cr0, [r9]
    d39c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    d3a0:	05750609 	ldrbeq	r0, [r5, #-1545]!	; 0xfffff9f7
    d3a4:	0514018c 	ldreq	r0, [r4, #-396]	; 0xfffffe74
    d3a8:	09051450 	stmdbeq	r5, {r4, r6, sl, ip}
    d3ac:	330d0516 	movwcc	r0, #54550	; 0xd516
    d3b0:	05311105 	ldreq	r1, [r1, #-261]!	; 0xfffffefb
    d3b4:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    d3b8:	13052e30 	movwne	r2, #24112	; 0x5e30
    d3bc:	0615054a 	ldreq	r0, [r5], -sl, asr #10
    d3c0:	06460533 			; <UNDEFINED> instruction: 0x06460533
    d3c4:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    d3c8:	062105a1 	strteq	r0, [r1], -r1, lsr #11
    d3cc:	20440501 	subcs	r0, r4, r1, lsl #10
    d3d0:	4c061505 	cfstr32mi	mvfx1, [r6], {5}
    d3d4:	01061705 	tsteq	r6, r5, lsl #14
    d3d8:	03062d05 	movweq	r2, #27909	; 0x6d05
    d3dc:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
    d3e0:	29053315 	stmdbcs	r5, {r0, r2, r4, r8, r9, ip, sp}
    d3e4:	15090519 	strne	r0, [r9, #-1305]	; 0xfffffae7
    d3e8:	01061b05 	tsteq	r6, r5, lsl #22
    d3ec:	31060905 	tstcc	r6, r5, lsl #18
    d3f0:	01060b05 	tsteq	r6, r5, lsl #22
    d3f4:	26062505 	strcs	r2, [r6], -r5, lsl #10
    d3f8:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    d3fc:	0d053035 	stceq	0, cr3, [r5, #-212]	; 0xffffff2c
    d400:	060f0514 			; <UNDEFINED> instruction: 0x060f0514
    d404:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    d408:	06350524 	ldrteq	r0, [r5], -r4, lsr #10
    d40c:	2e460501 	cdpcs	5, 4, cr0, cr6, cr1, {0}
    d410:	05582705 	ldrbeq	r2, [r8, #-1797]	; 0xfffff8fb
    d414:	0527060d 	streq	r0, [r7, #-1549]!	; 0xfffff9f3
    d418:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    d41c:	0f052e2c 	svceq	0x00052e2c
    d420:	3119054a 	tstcc	r9, sl, asr #10
    d424:	03060d05 	movweq	r0, #27909	; 0x6d05
    d428:	1905200a 	stmdbne	r5, {r1, r3, sp}
    d42c:	3c050106 	stfccs	f0, [r5], {6}
    d430:	0905202e 	stmdbeq	r5, {r1, r2, r3, r5, sp}
    d434:	36053e06 	strcc	r3, [r5], -r6, lsl #28
    d438:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    d43c:	13060505 	movwne	r0, #25861	; 0x6505
    d440:	03062d05 	movweq	r2, #27909	; 0x6d05
    d444:	053c7fbf 	ldreq	r7, [ip, #-4031]!	; 0xfffff041
    d448:	0533150d 	ldreq	r1, [r3, #-1293]!	; 0xfffffaf3
    d44c:	5303062e 	movwpl	r0, #13870	; 0x362e
    d450:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    d454:	052e1c03 	streq	r1, [lr, #-3075]!	; 0xfffff3fd
    d458:	0109032d 	tsteq	r9, sp, lsr #6
    d45c:	33150d05 	tstcc	r5, #320	; 0x140
    d460:	05143f05 	ldreq	r3, [r4, #-3845]	; 0xfffff0fb
    d464:	26051311 			; <UNDEFINED> instruction: 0x26051311
    d468:	4a6c0306 	bmi	1b0e088 <_Min_Heap_Size+0x1b0d888>
    d46c:	02002805 	andeq	r2, r0, #327680	; 0x50000
    d470:	1e030104 	adfnes	f0, f3, f4
    d474:	060d052e 	streq	r0, [sp], -lr, lsr #10
    d478:	052e6630 	streq	r6, [lr, #-1584]!	; 0xfffff9d0
    d47c:	11052e23 	tstne	r5, r3, lsr #28
    d480:	05201f03 	streq	r1, [r0, #-3843]!	; 0xfffff0fd
    d484:	90010642 	andls	r0, r1, r2, asr #12
    d488:	21061105 	tstcs	r6, r5, lsl #2
    d48c:	01061905 	tsteq	r6, r5, lsl #18
    d490:	00030220 	andeq	r0, r3, r0, lsr #4
    d494:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    d498:	00020500 	andeq	r0, r2, r0, lsl #10
    d49c:	03000000 	movweq	r0, #0
    d4a0:	06013d9c 			; <UNDEFINED> instruction: 0x06013d9c
    d4a4:	06090501 	streq	r0, [r9], -r1, lsl #10
    d4a8:	05131383 	ldreq	r1, [r3, #-899]	; 0xfffffc7d
    d4ac:	50051478 	andpl	r1, r5, r8, ror r4
    d4b0:	13260514 			; <UNDEFINED> instruction: 0x13260514
    d4b4:	14130905 	ldrne	r0, [r3], #-2309	; 0xfffff6fb
    d4b8:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    d4bc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    d4c0:	053e0611 	ldreq	r0, [lr, #-1553]!	; 0xfffff9ef
    d4c4:	05010647 	streq	r0, [r1, #-1607]	; 0xfffff9b9
    d4c8:	0d05582f 	stceq	8, cr5, [r5, #-188]	; 0xffffff44
    d4cc:	23053106 	movwcs	r3, #20742	; 0x5106
    d4d0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    d4d4:	35054c06 	strcc	r4, [r5, #-3078]	; 0xfffff3fa
    d4d8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    d4dc:	15053e06 	strne	r3, [r5, #-3590]	; 0xfffff1fa
    d4e0:	063f0577 			; <UNDEFINED> instruction: 0x063f0577
    d4e4:	2e2e2001 	cdpcs	0, 2, cr2, cr14, cr1, {0}
    d4e8:	21061505 	tstcs	r6, r5, lsl #10
    d4ec:	03061405 	movweq	r1, #25605	; 0x6405
    d4f0:	30050168 	andcc	r0, r5, r8, ror #2
    d4f4:	00c00306 	sbceq	r0, r0, r6, lsl #6
    d4f8:	160d0520 	strne	r0, [sp], -r0, lsr #10
    d4fc:	01060f05 	tsteq	r6, r5, lsl #30
    d500:	03062905 	movweq	r2, #26885	; 0x6905
    d504:	09052e1e 	stmdbeq	r5, {r1, r2, r3, r4, r9, sl, fp, sp}
    d508:	30320515 	eorscc	r0, r2, r5, lsl r5
    d50c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    d510:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    d514:	b1030615 	tstlt	r3, r5, lsl r6
    d518:	2d053c7f 	stccs	12, cr3, [r5, #-508]	; 0xfffffe04
    d51c:	2e200106 	sufcss	f0, f0, f6
    d520:	05204205 	streq	r4, [r0, #-517]!	; 0xfffffdfb
    d524:	052f0615 	streq	r0, [pc, #-1557]!	; cf17 <_Min_Heap_Size+0xc717>
    d528:	64030614 	strvs	r0, [r3], #-1556	; 0xfffff9ec
    d52c:	03150501 	tsteq	r5, #4194304	; 0x400000
    d530:	2306201c 	movwcs	r2, #24604	; 0x601c
    d534:	01063f05 	tsteq	r6, r5, lsl #30
    d538:	15052e20 	strne	r2, [r5, #-3616]	; 0xfffff1e0
    d53c:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    d540:	01600306 	cmneq	r0, r6, lsl #6
    d544:	20031505 	andcs	r1, r3, r5, lsl #10
    d548:	05240620 	streq	r0, [r4, #-1568]!	; 0xfffff9e0
    d54c:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    d550:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    d554:	20010643 	andcs	r0, r1, r3, asr #12
    d558:	0314052e 	tsteq	r4, #192937984	; 0xb800000
    d55c:	0d05205a 	stceq	0, cr2, [r5, #-360]	; 0xfffffe98
    d560:	202e1403 	eorcs	r1, lr, r3, lsl #8
    d564:	17032105 	strne	r2, [r3, -r5, lsl #2]
    d568:	11052020 	tstne	r5, r0, lsr #32
    d56c:	201b0306 	andscs	r0, fp, r6, lsl #6
    d570:	3c3c2001 	ldccc	0, cr2, [ip], #-4
    d574:	03040200 	movweq	r0, #16896	; 0x4200
    d578:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    d57c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    d580:	003c0304 	eorseq	r0, ip, r4, lsl #6
    d584:	13030402 	movwne	r0, #13314	; 0x3402
    d588:	03040200 	movweq	r0, #16896	; 0x4200
    d58c:	04020001 	streq	r0, [r2], #-1
    d590:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    d594:	00010304 	andeq	r0, r1, r4, lsl #6
    d598:	06030402 	streq	r0, [r3], -r2, lsl #8
    d59c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    d5a0:	004a0601 	subeq	r0, sl, r1, lsl #12
    d5a4:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    d5a8:	03040200 	movweq	r0, #16896	; 0x4200
    d5ac:	04020001 	streq	r0, [r2], #-1
    d5b0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    d5b4:	00660304 	rsbeq	r0, r6, r4, lsl #6
    d5b8:	01030402 	tsteq	r3, r2, lsl #8
    d5bc:	03040200 	movweq	r0, #16896	; 0x4200
    d5c0:	04020001 	streq	r0, [r2], #-1
    d5c4:	02002003 	andeq	r2, r0, #3
    d5c8:	20060304 	andcs	r0, r6, r4, lsl #6
    d5cc:	03040200 	movweq	r0, #16896	; 0x4200
    d5d0:	02002006 	andeq	r2, r0, #6
    d5d4:	00200304 	eoreq	r0, r0, r4, lsl #6
    d5d8:	20030402 	andcs	r0, r3, r2, lsl #8
    d5dc:	03040200 	movweq	r0, #16896	; 0x4200
    d5e0:	02002006 	andeq	r2, r0, #6
    d5e4:	58060304 	stmdapl	r6, {r2, r8, r9}
    d5e8:	03040200 	movweq	r0, #16896	; 0x4200
    d5ec:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    d5f0:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    d5f4:	05010304 	streq	r0, [r1, #-772]	; 0xfffffcfc
    d5f8:	0402005e 	streq	r0, [r2], #-94	; 0xffffffa2
    d5fc:	15051503 	strne	r1, [r5, #-1283]	; 0xfffffafd
    d600:	03040200 	movweq	r0, #16896	; 0x4200
    d604:	05010e03 	streq	r0, [r1, #-3587]	; 0xfffff1fd
    d608:	04020011 	streq	r0, [r2], #-17	; 0xffffffef
    d60c:	02003403 	andeq	r3, r0, #50331648	; 0x3000000
    d610:	00010304 	andeq	r0, r1, r4, lsl #6
    d614:	66010402 	strvs	r0, [r1], -r2, lsl #8
    d618:	01040200 	mrseq	r0, R12_usr
    d61c:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
    d620:	02002e01 	andeq	r2, r0, #1, 28
    d624:	002e0104 	eoreq	r0, lr, r4, lsl #2
    d628:	03010402 	movweq	r0, #5122	; 0x1402
    d62c:	0a022068 	beq	957d4 <_Min_Heap_Size+0x94fd4>
    d630:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    d634:	02050005 	andeq	r0, r5, #5
    d638:	00000000 	andeq	r0, r0, r0
    d63c:	013e9503 	teqeq	lr, r3, lsl #10
    d640:	09050106 	stmdbeq	r5, {r1, r2, r8}
    d644:	13133d06 	tstne	r3, #384	; 0x180
    d648:	019a0513 	orrseq	r0, sl, r3, lsl r5
    d64c:	14260514 	strtne	r0, [r6], #-1300	; 0xfffffaec
    d650:	05135005 	ldreq	r5, [r3, #-5]
    d654:	01120333 	tsteq	r2, r3, lsr r3
    d658:	17140905 	ldrne	r0, [r4, -r5, lsl #18]
    d65c:	22050204 	andcs	r0, r5, #4, 4	; 0x40000000
    d660:	0143ad03 	cmpeq	r3, r3, lsl #26
    d664:	14140505 	ldrne	r0, [r4], #-1285	; 0xfffffafb
    d668:	069e0c03 	ldreq	r0, [lr], r3, lsl #24
    d66c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    d670:	c503060d 	strgt	r0, [r3, #-1549]	; 0xfffff9f3
    d674:	0f05013c 	svceq	0x0005013c
    d678:	11050106 	tstne	r5, r6, lsl #2
    d67c:	47052206 	strmi	r2, [r5, -r6, lsl #4]
    d680:	2f050106 	svccs	0x00050106
    d684:	060d0558 			; <UNDEFINED> instruction: 0x060d0558
    d688:	06230523 	strteq	r0, [r3], -r3, lsr #10
    d68c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    d690:	06350567 	ldrteq	r0, [r5], -r7, ror #10
    d694:	060d0501 	streq	r0, [sp], -r1, lsl #10
    d698:	0520063e 	streq	r0, [r0, #-1598]!	; 0xfffff9c2
    d69c:	05690615 	strbeq	r0, [r9, #-1557]!	; 0xfffff9eb
    d6a0:	2001063f 	andcs	r0, r1, pc, lsr r6
    d6a4:	15052e2e 	strne	r2, [r5, #-3630]	; 0xfffff1d2
    d6a8:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    d6ac:	01530306 	cmpeq	r3, r6, lsl #6
    d6b0:	03063905 	movweq	r3, #26885	; 0x6905
    d6b4:	052000d4 	streq	r0, [r0, #-212]!	; 0xffffff2c
    d6b8:	0f05160d 	svceq	0x0005160d
    d6bc:	31050106 	tstcc	r5, r6, lsl #2
    d6c0:	3c230306 	stccc	3, cr0, [r3], #-24	; 0xffffffe8
    d6c4:	16030905 	strne	r0, [r3], -r5, lsl #18
    d6c8:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    d6cc:	42cf031e 	sbcmi	r0, pc, #2013265920	; 0x78000000
    d6d0:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    d6d4:	01042e06 	tsteq	r4, r6, lsl #28
    d6d8:	03063905 	movweq	r3, #26885	; 0x6905
    d6dc:	05013db1 	streq	r3, [r1, #-3505]	; 0xfffff24f
    d6e0:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    d6e4:	15051306 	strne	r1, [r5, #-774]	; 0xfffffcfa
    d6e8:	7f9a0306 	svcvc	0x009a0306
    d6ec:	062d0520 	strteq	r0, [sp], -r0, lsr #10
    d6f0:	052e2001 	streq	r2, [lr, #-1]!
    d6f4:	15052042 	strne	r2, [r5, #-66]	; 0xffffffbe
    d6f8:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
    d6fc:	014f0306 	cmpeq	pc, r6, lsl #6
    d700:	31031505 	tstcc	r3, r5, lsl #10
    d704:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    d708:	2001063f 	andcs	r0, r1, pc, lsr r6
    d70c:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    d710:	06140521 	ldreq	r0, [r4], -r1, lsr #10
    d714:	05014b03 	streq	r4, [r1, #-2819]	; 0xfffff4fd
    d718:	20350315 	eorscs	r0, r5, r5, lsl r3
    d71c:	17052406 	strne	r2, [r5, -r6, lsl #8]
    d720:	19050106 	stmdbne	r5, {r1, r2, r8}
    d724:	43053e06 	movwmi	r3, #24070	; 0x5e06
    d728:	2e200106 	sufcss	f0, f0, f6
    d72c:	45031405 	strmi	r1, [r3, #-1029]	; 0xfffffbfb
    d730:	030d0520 	movweq	r0, #54560	; 0xd520
    d734:	21052e29 	tstcs	r5, r9, lsr #28
    d738:	052e1703 	streq	r1, [lr, #-1795]!	; 0xfffff8fd
    d73c:	1b03065e 	blne	cf0bc <_Min_Heap_Size+0xce8bc>
    d740:	1411052e 	ldrne	r0, [r1], #-1326	; 0xfffffad2
    d744:	01062a05 	tsteq	r6, r5, lsl #20
    d748:	052e1305 	streq	r1, [lr, #-773]!	; 0xfffffcfb
    d74c:	01300615 	teqeq	r0, r5, lsl r6
    d750:	0058582e 	subseq	r5, r8, lr, lsr #16
    d754:	58030402 	stmdapl	r3, {r1, sl}
    d758:	03040200 	movweq	r0, #16896	; 0x4200
    d75c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    d760:	02003c03 	andeq	r3, r0, #768	; 0x300
    d764:	00130304 	andseq	r0, r3, r4, lsl #6
    d768:	01030402 	tsteq	r3, r2, lsl #8
    d76c:	03040200 	movweq	r0, #16896	; 0x4200
    d770:	04020001 	streq	r0, [r2], #-1
    d774:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    d778:	2e060304 	cdpcs	3, 0, cr0, cr6, cr4, {0}
    d77c:	01040200 	mrseq	r0, R12_usr
    d780:	02004a06 	andeq	r4, r0, #24576	; 0x6000
    d784:	002e0304 	eoreq	r0, lr, r4, lsl #6
    d788:	01030402 	tsteq	r3, r2, lsl #8
    d78c:	03040200 	movweq	r0, #16896	; 0x4200
    d790:	04020001 	streq	r0, [r2], #-1
    d794:	02006603 	andeq	r6, r0, #3145728	; 0x300000
    d798:	00010304 	andeq	r0, r1, r4, lsl #6
    d79c:	01030402 	tsteq	r3, r2, lsl #8
    d7a0:	03040200 	movweq	r0, #16896	; 0x4200
    d7a4:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    d7a8:	02003c03 	andeq	r3, r0, #768	; 0x300
    d7ac:	00200304 	eoreq	r0, r0, r4, lsl #6
    d7b0:	20030402 	andcs	r0, r3, r2, lsl #8
    d7b4:	03040200 	movweq	r0, #16896	; 0x4200
    d7b8:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
    d7bc:	66060304 	strvs	r0, [r6], -r4, lsl #6
    d7c0:	03040200 	movweq	r0, #16896	; 0x4200
    d7c4:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    d7c8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    d7cc:	00010304 	andeq	r0, r1, r4, lsl #6
    d7d0:	18010402 	stmdane	r1, {r1, sl}
    d7d4:	01040200 	mrseq	r0, R12_usr
    d7d8:	001e0517 	andseq	r0, lr, r7, lsl r5
    d7dc:	06010402 	streq	r0, [r1], -r2, lsl #8
    d7e0:	00390501 	eorseq	r0, r9, r1, lsl #10
    d7e4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    d7e8:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    d7ec:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    d7f0:	05320619 	ldreq	r0, [r2, #-1561]!	; 0xfffff9e7
    d7f4:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    d7f8:	0530061d 	ldreq	r0, [r0, #-1565]!	; 0xfffff9e3
    d7fc:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    d800:	05420619 	strbeq	r0, [r2, #-1561]	; 0xfffff9e7
    d804:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    d808:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    d80c:	68030601 	stmdavs	r3, {r0, r9, sl}
    d810:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    d814:	064a0601 	strbeq	r0, [sl], -r1, lsl #12
    d818:	012e0119 			; <UNDEFINED> instruction: 0x012e0119
    d81c:	3c3c2e01 	ldccc	14, cr2, [ip], #-4
    d820:	20062e20 	andcs	r2, r6, r0, lsr #28
    d824:	01000f02 	tsteq	r0, r2, lsl #30
    d828:	00050501 	andeq	r0, r5, r1, lsl #10
    d82c:	00000205 	andeq	r0, r0, r5, lsl #4
    d830:	b8030000 	stmdalt	r3, {}	; <UNPREDICTABLE>
    d834:	0106013f 	tsteq	r6, pc, lsr r1
    d838:	21060905 	tstcs	r6, r5, lsl #18
    d83c:	6e051313 	mcrvs	3, 0, r1, cr5, cr3, {0}
    d840:	14260514 	strtne	r0, [r6], #-1300	; 0xfffffaec
    d844:	05135005 	ldreq	r5, [r3, #-5]
    d848:	01120333 	tsteq	r2, r3, lsr r3
    d84c:	17140905 	ldrne	r0, [r4, -r5, lsl #18]
    d850:	22050204 	andcs	r0, r5, #4, 4	; 0x40000000
    d854:	01428b03 	cmpeq	r2, r3, lsl #22
    d858:	14140505 	ldrne	r0, [r4], #-1285	; 0xfffffafb
    d85c:	069e0c03 	ldreq	r0, [lr], r3, lsl #24
    d860:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    d864:	e703060d 	str	r0, [r3, -sp, lsl #12]
    d868:	2305013d 	movwcs	r0, #20797	; 0x513d
    d86c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    d870:	35054b06 	strcc	r4, [r5, #-2822]	; 0xfffff4fa
    d874:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    d878:	25054e06 	strcs	r4, [r5, #-3590]	; 0xfffff1fa
    d87c:	2e200106 	sufcss	f0, f0, f6
    d880:	05203a05 	streq	r3, [r0, #-2565]!	; 0xfffff5fb
    d884:	0530063e 	ldreq	r0, [r0, #-1598]!	; 0xfffff9c2
    d888:	0f05160d 	svceq	0x0005160d
    d88c:	31050106 	tstcc	r5, r6, lsl #2
    d890:	2e230306 	cdpcs	3, 2, cr0, cr3, cr6, {0}
    d894:	16030905 	strne	r0, [r3], -r5, lsl #18
    d898:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    d89c:	41d9031e 	bicsmi	r0, r9, lr, lsl r3
    d8a0:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    d8a4:	01042e06 	tsteq	r4, r6, lsl #28
    d8a8:	03063405 	movweq	r3, #25605	; 0x6405
    d8ac:	05013ea7 	streq	r3, [r1, #-3751]	; 0xfffff159
    d8b0:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    d8b4:	4703065e 	smlsdmi	r3, lr, r6, r0
    d8b8:	14110520 	ldrne	r0, [r1], #-1312	; 0xfffffae0
    d8bc:	01062a05 	tsteq	r6, r5, lsl #20
    d8c0:	20130520 	andscs	r0, r3, r0, lsr #10
    d8c4:	30061505 	andcc	r1, r6, r5, lsl #10
    d8c8:	3c3c2001 	ldccc	0, cr2, [ip], #-4
    d8cc:	03040200 	movweq	r0, #16896	; 0x4200
    d8d0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    d8d4:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
    d8d8:	003c0304 	eorseq	r0, ip, r4, lsl #6
    d8dc:	13030402 	movwne	r0, #13314	; 0x3402
    d8e0:	03040200 	movweq	r0, #16896	; 0x4200
    d8e4:	04020001 	streq	r0, [r2], #-1
    d8e8:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    d8ec:	00010304 	andeq	r0, r1, r4, lsl #6
    d8f0:	06030402 	streq	r0, [r3], -r2, lsl #8
    d8f4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    d8f8:	004a0601 	subeq	r0, sl, r1, lsl #12
    d8fc:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    d900:	03040200 	movweq	r0, #16896	; 0x4200
    d904:	04020001 	streq	r0, [r2], #-1
    d908:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    d90c:	00660304 	rsbeq	r0, r6, r4, lsl #6
    d910:	01030402 	tsteq	r3, r2, lsl #8
    d914:	03040200 	movweq	r0, #16896	; 0x4200
    d918:	04020001 	streq	r0, [r2], #-1
    d91c:	02002003 	andeq	r2, r0, #3
    d920:	002e0304 	eoreq	r0, lr, r4, lsl #6
    d924:	20030402 	andcs	r0, r3, r2, lsl #8
    d928:	03040200 	movweq	r0, #16896	; 0x4200
    d92c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    d930:	00200603 	eoreq	r0, r0, r3, lsl #12
    d934:	06030402 	streq	r0, [r3], -r2, lsl #8
    d938:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    d93c:	02007403 	andeq	r7, r0, #50331648	; 0x3000000
    d940:	00010304 	andeq	r0, r1, r4, lsl #6
    d944:	01030402 	tsteq	r3, r2, lsl #8
    d948:	01040200 	mrseq	r0, R12_usr
    d94c:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
    d950:	1e051701 	cdpne	7, 0, cr1, cr5, cr1, {0}
    d954:	01040200 	mrseq	r0, R12_usr
    d958:	39050106 	stmdbcc	r5, {r1, r2, r8}
    d95c:	01040200 	mrseq	r0, R12_usr
    d960:	00170520 	andseq	r0, r7, r0, lsr #10
    d964:	3c010402 	cfstrscc	mvf0, [r1], {2}
    d968:	32061905 	andcc	r1, r6, #81920	; 0x14000
    d96c:	01061b05 	tsteq	r6, r5, lsl #22
    d970:	22061d05 	andcs	r1, r6, #320	; 0x140
    d974:	01063805 	tsteq	r6, r5, lsl #16
    d978:	34061905 	strcc	r1, [r6], #-2309	; 0xfffff6fb
    d97c:	01062d05 	tsteq	r6, r5, lsl #26
    d980:	0015052e 	andseq	r0, r5, lr, lsr #10
    d984:	06010402 	streq	r0, [r1], -r2, lsl #8
    d988:	002e6803 	eoreq	r6, lr, r3, lsl #16
    d98c:	06010402 	streq	r0, [r1], -r2, lsl #8
    d990:	0119063c 	tsteq	r9, ip, lsr r6
    d994:	2001012e 	andcs	r0, r1, lr, lsr #2
    d998:	20203c2e 	eorcs	r3, r0, lr, lsr #24
    d99c:	10022006 	andne	r2, r2, r6
    d9a0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    d9a4:	02050005 	andeq	r0, r5, #5
    d9a8:	00000000 	andeq	r0, r0, r0
    d9ac:	00c0ab03 	sbceq	sl, r0, r3, lsl #22
    d9b0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    d9b4:	132f0609 			; <UNDEFINED> instruction: 0x132f0609
    d9b8:	05144905 	ldreq	r4, [r4, #-2309]	; 0xfffff6fb
    d9bc:	0905144f 	stmdbeq	r5, {r0, r1, r2, r3, r6, sl, ip}
    d9c0:	06110516 			; <UNDEFINED> instruction: 0x06110516
    d9c4:	00090501 	andeq	r0, r9, r1, lsl #10
    d9c8:	06040402 	streq	r0, [r4], -r2, lsl #8
    d9cc:	000d0530 	andeq	r0, sp, r0, lsr r5
    d9d0:	30040402 	andcc	r0, r4, r2, lsl #8
    d9d4:	02002505 	andeq	r2, r0, #20971520	; 0x1400000
    d9d8:	01060404 	tsteq	r6, r4, lsl #8
    d9dc:	02000f05 	andeq	r0, r0, #5, 30
    d9e0:	054a0404 	strbeq	r0, [sl, #-1028]	; 0xfffffbfc
    d9e4:	09053519 	stmdbeq	r5, {r0, r3, r4, r8, sl, ip, sp}
    d9e8:	3c052306 	stccc	3, cr2, [r5], {6}
    d9ec:	14090530 	strne	r0, [r9], #-1328	; 0xfffffad0
    d9f0:	13060505 	movwne	r0, #25861	; 0x6505
    d9f4:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    d9f8:	6d030104 	stfvss	f0, [r3, #-16]
    d9fc:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    da00:	26062e01 	strcs	r2, [r6], -r1, lsl #28
    da04:	01063805 	tsteq	r6, r5, lsl #16
    da08:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    da0c:	0619053d 			; <UNDEFINED> instruction: 0x0619053d
    da10:	00040201 	andeq	r0, r4, r1, lsl #4
    da14:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    da18:	00020500 	andeq	r0, r2, r0, lsl #10
    da1c:	03000000 	movweq	r0, #0
    da20:	0100c0d2 	ldrdeq	ip, [r0, -r2]
    da24:	09050106 	stmdbeq	r5, {r1, r2, r8}
    da28:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    da2c:	4f051459 	svcmi	0x00051459
    da30:	16090514 			; <UNDEFINED> instruction: 0x16090514
    da34:	01061105 	tsteq	r6, r5, lsl #2
    da38:	02000905 	andeq	r0, r0, #81920	; 0x14000
    da3c:	30060404 	andcc	r0, r6, r4, lsl #8
    da40:	02000d05 	andeq	r0, r0, #320	; 0x140
    da44:	05320404 	ldreq	r0, [r2, #-1028]!	; 0xfffffbfc
    da48:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
    da4c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    da50:	0402000d 	streq	r0, [r2], #-13
    da54:	05590604 	ldrbeq	r0, [r9, #-1540]	; 0xfffff9fc
    da58:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    da5c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    da60:	04020009 	streq	r0, [r2], #-9
    da64:	054c0604 	strbeq	r0, [ip, #-1540]	; 0xfffff9fc
    da68:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    da6c:	09053004 	stmdbeq	r5, {r2, ip, sp}
    da70:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    da74:	00050514 	andeq	r0, r5, r4, lsl r5
    da78:	06040402 	streq	r0, [r4], -r2, lsl #8
    da7c:	00110513 	andseq	r0, r1, r3, lsl r5
    da80:	03010402 	movweq	r0, #5122	; 0x1402
    da84:	02002e72 	andeq	r2, r0, #1824	; 0x720
    da88:	022e0104 	eoreq	r0, lr, #4, 2
    da8c:	01010004 	tsteq	r1, r4
    da90:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    da94:	00296402 	eoreq	r6, r9, r2, lsl #8
    da98:	c38a0308 	orrgt	r0, sl, #8, 6	; 0x20000000
    da9c:	09050100 	stmdbeq	r5, {r8}
    daa0:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    daa4:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    daa8:	052f0609 	streq	r0, [pc, #-1545]!	; d4a7 <_Min_Heap_Size+0xcca7>
    daac:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    dab0:	052f0609 	streq	r0, [pc, #-1545]!	; d4af <_Min_Heap_Size+0xccaf>
    dab4:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    dab8:	06022f05 	streq	r2, [r2], -r5, lsl #30
    dabc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    dac0:	02050001 	andeq	r0, r5, #1
    dac4:	0800297c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, fp, sp}
    dac8:	011bb703 	tsteq	fp, r3, lsl #14
    dacc:	132f0505 			; <UNDEFINED> instruction: 0x132f0505
    dad0:	14131313 	ldrne	r1, [r3], #-787	; 0xfffffced
    dad4:	01061d05 	tsteq	r6, r5, lsl #26
    dad8:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    dadc:	20060104 	andcs	r0, r6, r4, lsl #2
    dae0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    dae4:	01060104 	tsteq	r6, r4, lsl #2
    dae8:	30060905 	andcc	r0, r6, r5, lsl #18
    daec:	01063f05 	tsteq	r6, r5, lsl #30
    daf0:	052e2905 	streq	r2, [lr, #-2309]!	; 0xfffff6fb
    daf4:	055d0609 	ldrbeq	r0, [sp, #-1545]	; 0xfffff9f7
    daf8:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    dafc:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
    db00:	05260602 	streq	r0, [r6, #-1538]!	; 0xfffff9fe
    db04:	0402006e 	streq	r0, [r2], #-110	; 0xffffff92
    db08:	01730302 	cmneq	r3, r2, lsl #6
    db0c:	00018005 	andeq	r8, r1, r5
    db10:	06020402 	streq	r0, [r2], -r2, lsl #8
    db14:	04020001 	streq	r0, [r2], #-1
    db18:	1d052002 	stcne	0, cr2, [r5, #-8]
    db1c:	01040200 	mrseq	r0, R12_usr
    db20:	00260520 	eoreq	r0, r6, r0, lsr #10
    db24:	06010402 	streq	r0, [r1], -r2, lsl #8
    db28:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    db2c:	04020005 	streq	r0, [r2], #-5
    db30:	06010601 	streq	r0, [r1], -r1, lsl #12
    db34:	3c00fb03 			; <UNDEFINED> instruction: 0x3c00fb03
    db38:	13060105 	movwne	r0, #24837	; 0x6105
    db3c:	03060d05 	movweq	r0, #27909	; 0x6d05
    db40:	032e7f88 			; <UNDEFINED> instruction: 0x032e7f88
    db44:	1c05012f 	stfnes	f0, [r5], {47}	; 0x2f
    db48:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    db4c:	1b052f06 	blne	15976c <_Min_Heap_Size+0x158f6c>
    db50:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    db54:	11052106 	tstne	r5, r6, lsl #2
    db58:	030d0518 	movweq	r0, #54552	; 0xd518
    db5c:	2b05580e 	blcs	163b9c <_Min_Heap_Size+0x16339c>
    db60:	29050106 	stmdbcs	r5, {r1, r2, r8}
    db64:	060d05ac 	streq	r0, [sp], -ip, lsr #11
    db68:	060f0544 	streq	r0, [pc], -r4, asr #10
    db6c:	09052001 	stmdbeq	r5, {r0, sp}
    db70:	01160306 	tsteq	r6, r6, lsl #6
    db74:	051a2905 	ldreq	r2, [sl, #-2309]	; 0xfffff6fb
    db78:	7f910356 	svcvc	0x00910356
    db7c:	065d0501 	ldrbeq	r0, [sp], -r1, lsl #10
    db80:	11052001 	tstne	r5, r1
    db84:	00d70306 	sbcseq	r0, r7, r6, lsl #6
    db88:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    db8c:	10030609 	andne	r0, r3, r9, lsl #12
    db90:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    db94:	02017003 	andeq	r7, r1, #3
    db98:	01010008 	tsteq	r1, r8
    db9c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    dba0:	0029e802 	eoreq	lr, r9, r2, lsl #16
    dba4:	1cd10308 	ldclne	3, cr0, [r1], {8}
    dba8:	21050501 	tstcs	r5, r1, lsl #10
    dbac:	05142505 	ldreq	r2, [r4, #-1285]	; 0xfffffafb
    dbb0:	010a0305 	tsteq	sl, r5, lsl #6
    dbb4:	01060f05 	tsteq	r6, r5, lsl #30
    dbb8:	32060905 	andcc	r0, r6, #81920	; 0x14000
    dbbc:	01060b05 	tsteq	r6, r5, lsl #22
    dbc0:	34062505 	strcc	r2, [r6], #-1285	; 0xfffffafb
    dbc4:	05170505 	ldreq	r0, [r7, #-1285]	; 0xfffffafb
    dbc8:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    dbcc:	3b030649 	blcc	cf4f8 <_Min_Heap_Size+0xcecf8>
    dbd0:	1705052e 	strne	r0, [r5, -lr, lsr #10]
    dbd4:	30260516 	eorcc	r0, r6, r6, lsl r5
    dbd8:	13060105 	movwne	r0, #24837	; 0x6105
    dbdc:	03060d05 	movweq	r0, #27909	; 0x6d05
    dbe0:	05207fb0 	streq	r7, [r0, #-4016]!	; 0xfffff050
    dbe4:	2e010617 	mcrcs	6, 0, r0, cr1, cr7, {0}
    dbe8:	03060905 	movweq	r0, #26885	; 0x6905
    dbec:	02042019 	andeq	r2, r4, #25
    dbf0:	d7031e05 	strle	r1, [r3, -r5, lsl #28]
    dbf4:	05050164 	streq	r0, [r5, #-356]	; 0xfffffe9c
    dbf8:	01041414 	tsteq	r4, r4, lsl r4
    dbfc:	af030905 	svcge	0x00030905
    dc00:	1e05821b 	mcrne	2, 0, r8, cr5, cr11, {0}
    dc04:	09050106 	stmdbeq	r5, {r1, r2, r8}
    dc08:	1b054b06 	blne	160828 <_Min_Heap_Size+0x160028>
    dc0c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    dc10:	14053d06 	strne	r3, [r5], #-3334	; 0xfffff2fa
    dc14:	31050106 	tstcc	r5, r6, lsl #2
    dc18:	20054406 	andcs	r4, r5, r6, lsl #8
    dc1c:	19090514 	stmdbne	r9, {r2, r4, r8, sl}
    dc20:	01061205 	tsteq	r6, r5, lsl #4
    dc24:	0009022e 	andeq	r0, r9, lr, lsr #4
    dc28:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    dc2c:	3c020500 	cfstr32cc	mvfx0, [r2], {-0}
    dc30:	0308002a 	movweq	r0, #32810	; 0x802a
    dc34:	0100c3b3 			; <UNDEFINED> instruction: 0x0100c3b3
    dc38:	13130905 	tstne	r3, #81920	; 0x14000
    dc3c:	06200514 			; <UNDEFINED> instruction: 0x06200514
    dc40:	06090501 	streq	r0, [r9], -r1, lsl #10
    dc44:	0622052f 	strteq	r0, [r2], -pc, lsr #10
    dc48:	06090501 	streq	r0, [r9], -r1, lsl #10
    dc4c:	0620052f 	strteq	r0, [r0], -pc, lsr #10
    dc50:	2f050501 	svccs	0x00050501
    dc54:	01000602 	tsteq	r0, r2, lsl #12
    dc58:	00010501 	andeq	r0, r1, r1, lsl #10
    dc5c:	00000205 	andeq	r0, r0, r5, lsl #4
    dc60:	c5030000 	strgt	r0, [r3, #-0]
    dc64:	050100c3 	streq	r0, [r1, #-195]	; 0xffffff3d
    dc68:	09051305 	stmdbeq	r5, {r0, r2, r8, r9, ip}
    dc6c:	06160517 			; <UNDEFINED> instruction: 0x06160517
    dc70:	06090501 	streq	r0, [r9], -r1, lsl #10
    dc74:	06260542 	strteq	r0, [r6], -r2, asr #10
    dc78:	06050501 	streq	r0, [r5], -r1, lsl #10
    dc7c:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    dc80:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    dc84:	052f0605 	streq	r0, [pc, #-1541]!	; d687 <_Min_Heap_Size+0xce87>
    dc88:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    dc8c:	052f0605 	streq	r0, [pc, #-1541]!	; d68f <_Min_Heap_Size+0xce8f>
    dc90:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    dc94:	052f0605 	streq	r0, [pc, #-1541]!	; d697 <_Min_Heap_Size+0xce97>
    dc98:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    dc9c:	052f0605 	streq	r0, [pc, #-1541]!	; d69f <_Min_Heap_Size+0xce9f>
    dca0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    dca4:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    dca8:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    dcac:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    dcb0:	01040200 	mrseq	r0, R12_usr
    dcb4:	33060106 	movwcc	r0, #24838	; 0x6106
    dcb8:	01061505 	tsteq	r6, r5, lsl #10
    dcbc:	06050520 	streq	r0, [r5], -r0, lsr #10
    dcc0:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
    dcc4:	06050501 	streq	r0, [r5], -r1, lsl #10
    dcc8:	061a052f 	ldreq	r0, [sl], -pc, lsr #10
    dccc:	06050501 	streq	r0, [r5], -r1, lsl #10
    dcd0:	061a0530 			; <UNDEFINED> instruction: 0x061a0530
    dcd4:	03010501 	movweq	r0, #5377	; 0x1501
    dcd8:	09052e0b 	stmdbeq	r5, {r0, r1, r3, r9, sl, fp, sp}
    dcdc:	03040200 	movweq	r0, #16896	; 0x4200
    dce0:	206e0306 	rsbcs	r0, lr, r6, lsl #6
    dce4:	02002305 	andeq	r2, r0, #335544320	; 0x14000000
    dce8:	01060304 	tsteq	r6, r4, lsl #6
    dcec:	02003805 	andeq	r3, r0, #327680	; 0x50000
    dcf0:	48060304 	stmdami	r6, {r2, r8, r9}
    dcf4:	02003f05 	andeq	r3, r0, #5, 30
    dcf8:	01060304 	tsteq	r6, r4, lsl #6
    dcfc:	03040200 	movweq	r0, #16896	; 0x4200
    dd00:	001a0220 	andseq	r0, sl, r0, lsr #4
    dd04:	0b700101 	bleq	1c0e110 <_Min_Heap_Size+0x1c0d910>
    dd08:	00030000 	andeq	r0, r3, r0
    dd0c:	000001e5 	andeq	r0, r0, r5, ror #3
    dd10:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    dd14:	0101000d 	tsteq	r1, sp
    dd18:	00000101 	andeq	r0, r0, r1, lsl #2
    dd1c:	00000100 	andeq	r0, r0, r0, lsl #2
    dd20:	2f2e2e01 	svccs	0x002e2e01
    dd24:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    dd28:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    dd2c:	6f747262 	svcvs	0x00747262
    dd30:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    dd34:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    dd38:	2f00534f 	svccs	0x0000534f
    dd3c:	2f74706f 	svccs	0x0074706f
    dd40:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    dd44:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    dd48:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    dd4c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    dd50:	30312d69 	eorscc	r2, r1, r9, ror #26
    dd54:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    dd58:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    dd5c:	6c2f3031 	stcvs	0, cr3, [pc], #-196	; dca0 <_Min_Heap_Size+0xd4a0>
    dd60:	672f6269 	strvs	r6, [pc, -r9, ror #4]!
    dd64:	612f6363 			; <UNDEFINED> instruction: 0x612f6363
    dd68:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    dd6c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    dd70:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    dd74:	2e30312f 	rsfcssp	f3, f0, #10.0
    dd78:	2f312e33 	svccs	0x00312e33
    dd7c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    dd80:	00656475 	rsbeq	r6, r5, r5, ror r4
    dd84:	74706f2f 	ldrbtvc	r6, [r0], #-3887	; 0xfffff0d1
    dd88:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    dd8c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    dd90:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    dd94:	61652d65 	cmnvs	r5, r5, ror #26
    dd98:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    dd9c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    dda0:	31323032 	teqcc	r2, r2, lsr r0
    dda4:	2f30312e 	svccs	0x0030312e
    dda8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    ddac:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    ddb0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    ddb4:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
    ddb8:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    ddbc:	616d2f65 	cmnvs	sp, r5, ror #30
    ddc0:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    ddc4:	6f2f0065 	svcvs	0x002f0065
    ddc8:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
    ddcc:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    ddd0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    ddd4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    ddd8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    dddc:	2e30312d 	rsfcssp	f3, f0, #5.0
    dde0:	30322d33 	eorscc	r2, r2, r3, lsr sp
    dde4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    dde8:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
    ddec:	6f6e2d6d 	svcvs	0x006e2d6d
    ddf0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    ddf4:	2f696261 	svccs	0x00696261
    ddf8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    ddfc:	2f656475 	svccs	0x00656475
    de00:	00737973 	rsbseq	r7, r3, r3, ror r9
    de04:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    de08:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    de0c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    de10:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    de14:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    de18:	4f545265 	svcmi	0x00545265
    de1c:	6e692f53 	mcrvs	15, 3, r2, cr9, cr3, {2}
    de20:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    de24:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    de28:	2f2e2e2f 	svccs	0x002e2e2f
    de2c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; dd7c <_Min_Heap_Size+0xd57c>
    de30:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    de34:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    de38:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    de3c:	2f534f54 	svccs	0x00534f54
    de40:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    de44:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    de48:	4343472f 	movtmi	r4, #14127	; 0x372f
    de4c:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
    de50:	344d435f 	strbcc	r4, [sp], #-863	; 0xfffffca1
    de54:	74000046 	strvc	r0, [r0], #-70	; 0xffffffba
    de58:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    de5c:	00632e73 	rsbeq	r2, r3, r3, ror lr
    de60:	73000001 	movwvc	r0, #1
    de64:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    de68:	00682e66 	rsbeq	r2, r8, r6, ror #28
    de6c:	5f000002 	svcpl	0x00000002
    de70:	61666564 	cmnvs	r6, r4, ror #10
    de74:	5f746c75 	svcpl	0x00746c75
    de78:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    de7c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    de80:	5f000003 	svcpl	0x00000003
    de84:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    de88:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    de8c:	00000400 	andeq	r0, r0, r0, lsl #8
    de90:	6a6f7270 	bvs	1bea858 <_Min_Heap_Size+0x1bea058>
    de94:	73666564 	cmnvc	r6, #100, 10	; 0x19000000
    de98:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    de9c:	6f700000 	svcvs	0x00700000
    dea0:	616d7472 	smcvs	55106	; 0xd742
    dea4:	2e6f7263 	cdpcs	2, 6, cr7, cr15, cr3, {3}
    dea8:	00060068 	andeq	r0, r6, r8, rrx
    deac:	65724600 	ldrbvs	r4, [r2, #-1536]!	; 0xfffffa00
    deb0:	4f545265 	svcmi	0x00545265
    deb4:	00682e53 	rsbeq	r2, r8, r3, asr lr
    deb8:	6c000005 	stcvs	0, cr0, [r0], {5}
    debc:	2e747369 	cdpcs	3, 7, cr7, cr4, cr9, {3}
    dec0:	00050068 	andeq	r0, r5, r8, rrx
    dec4:	73617400 	cmnvc	r1, #0, 8
    dec8:	00682e6b 	rsbeq	r2, r8, fp, ror #28
    decc:	71000005 	tstvc	r0, r5
    ded0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    ded4:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    ded8:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
    dedc:	7372656d 	cmnvc	r2, #457179136	; 0x1b400000
    dee0:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    dee4:	6f700000 	svcvs	0x00700000
    dee8:	62617472 	rsbvs	r7, r1, #1912602624	; 0x72000000
    deec:	682e656c 	stmdavs	lr!, {r2, r3, r5, r6, r8, sl, sp, lr}
    def0:	00000500 	andeq	r0, r0, r0, lsl #10
    def4:	00050500 	andeq	r0, r5, r0, lsl #10
    def8:	2a540205 	bcs	150e714 <_Min_Heap_Size+0x150df14>
    defc:	cc030800 	stcgt	8, cr0, [r3], {-0}
    df00:	09050106 	stmdbeq	r5, {r1, r2, r8}
    df04:	01090313 	tsteq	r9, r3, lsl r3
    df08:	01061b05 	tsteq	r6, r5, lsl #22
    df0c:	02001905 	andeq	r1, r0, #81920	; 0x14000
    df10:	05580404 	ldrbeq	r0, [r8, #-1028]	; 0xfffffbfc
    df14:	04020009 	streq	r0, [r2], #-9
    df18:	05220604 	streq	r0, [r2, #-1540]!	; 0xfffff9fc
    df1c:	0402000b 	streq	r0, [r2], #-11
    df20:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
    df24:	0522060d 	streq	r0, [r2, #-1549]!	; 0xfffff9f3
    df28:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    df2c:	0520201d 	streq	r2, [r0, #-29]!	; 0xffffffe3
    df30:	1d051c1b 	stcne	12, cr1, [r5, #-108]	; 0xffffff94
    df34:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    df38:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    df3c:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    df40:	01010003 	tsteq	r1, r3
    df44:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    df48:	002a7402 	eoreq	r7, sl, r2, lsl #8
    df4c:	07810308 	streq	r0, [r1, r8, lsl #6]
    df50:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    df54:	14210609 	strtne	r0, [r1], #-1545	; 0xfffff9f7
    df58:	0b052221 	bleq	1567e4 <_Min_Heap_Size+0x155fe4>
    df5c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    df60:	13053206 	movwne	r3, #20998	; 0x5206
    df64:	4a050106 	bmi	14e384 <_Min_Heap_Size+0x14db84>
    df68:	200f0520 	andcs	r0, pc, r0, lsr #10
    df6c:	05322205 	ldreq	r2, [r2, #-517]!	; 0xfffffdfb
    df70:	20170305 	andscs	r0, r7, r5, lsl #6
    df74:	03061105 	movweq	r1, #24837	; 0x6105
    df78:	2006206d 	andcs	r2, r6, sp, rrx
    df7c:	0314052e 	tsteq	r4, #192937984	; 0xb800000
    df80:	0d052e6f 	stceq	14, cr2, [r5, #-444]	; 0xfffffe44
    df84:	2e160306 	cdpcs	3, 1, cr0, cr6, cr6, {0}
    df88:	01060f05 	tsteq	r6, r5, lsl #30
    df8c:	02002d05 	andeq	r2, r0, #320	; 0x140
    df90:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    df94:	09030611 	stmdbeq	r3, {r0, r4, r9, sl}
    df98:	2020062e 	eorcs	r0, r0, lr, lsr #12
    df9c:	03140520 	tsteq	r4, #32, 10	; 0x8000000
    dfa0:	22052e61 	andcs	r2, r5, #1552	; 0x610
    dfa4:	052e1b03 	streq	r1, [lr, #-2819]!	; 0xfffff4fd
    dfa8:	05280609 	streq	r0, [r8, #-1545]!	; 0xfffff9f7
    dfac:	02010610 	andeq	r0, r1, #16, 12	; 0x1000000
    dfb0:	01010006 	tsteq	r1, r6
    dfb4:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    dfb8:	002abc02 	eoreq	fp, sl, r2, lsl #24
    dfbc:	05bd0308 	ldreq	r0, [sp, #776]!	; 0x308
    dfc0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    dfc4:	054e0609 	strbeq	r0, [lr, #-1545]	; 0xfffff9f7
    dfc8:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    dfcc:	0523060d 	streq	r0, [r3, #-1549]!	; 0xfffff9f3
    dfd0:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    dfd4:	2a05201a 	bcs	156044 <_Min_Heap_Size+0x155844>
    dfd8:	0d052306 	stceq	3, cr2, [r5, #-24]	; 0xffffffe8
    dfdc:	06140513 			; <UNDEFINED> instruction: 0x06140513
    dfe0:	200d0501 	andcs	r0, sp, r1, lsl #10
    dfe4:	03060e05 	movweq	r0, #28165	; 0x6e05
    dfe8:	4d052e79 	stcmi	14, cr2, [r5, #-484]	; 0xfffffe1c
    dfec:	10050106 	andne	r0, r5, r6, lsl #2
    dff0:	660e0520 	strvs	r0, [lr], -r0, lsr #10
    dff4:	09030505 	stmdbeq	r3, {r0, r2, r8, sl}
    dff8:	0100202e 	tsteq	r0, lr, lsr #32
    dffc:	00050501 	andeq	r0, r5, r1, lsl #10
    e000:	2ae40205 	bcs	ff90e81c <_estack+0xdf904e7c>
    e004:	cf030800 	svcgt	0x00030800
    e008:	01060105 	tsteq	r6, r5, lsl #2
    e00c:	40060905 	andmi	r0, r6, r5, lsl #18
    e010:	01063105 	tsteq	r6, r5, lsl #2
    e014:	053c1905 	ldreq	r1, [ip, #-2309]!	; 0xfffff6fb
    e018:	05250609 	streq	r0, [r5, #-1545]!	; 0xfffff9f7
    e01c:	20010612 	andcs	r0, r1, r2, lsl r6
    e020:	32060905 	andcc	r0, r6, #81920	; 0x14000
    e024:	01061605 	tsteq	r6, r5, lsl #12
    e028:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    e02c:	0542060d 	strbeq	r0, [r2, #-1549]	; 0xfffff9f3
    e030:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    e034:	054e0626 	strbeq	r0, [lr, #-1574]	; 0xfffff9da
    e038:	10051309 	andne	r1, r5, r9, lsl #6
    e03c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    e040:	2f050520 	svccs	0x00050520
    e044:	03060d05 	movweq	r0, #27909	; 0x6d05
    e048:	09022076 	stmdbeq	r2, {r1, r2, r4, r5, r6, sp}
    e04c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    e050:	02050005 	andeq	r0, r5, #5
    e054:	08002b24 	stmdaeq	r0, {r2, r5, r8, r9, fp, sp}
    e058:	0108be03 	tsteq	r8, r3, lsl #28
    e05c:	13210905 			; <UNDEFINED> instruction: 0x13210905
    e060:	060e0518 			; <UNDEFINED> instruction: 0x060e0518
    e064:	060d0501 	streq	r0, [sp], -r1, lsl #10
    e068:	061f0522 	ldreq	r0, [pc], -r2, lsr #10
    e06c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    e070:	030e0525 	movweq	r0, #58661	; 0xe525
    e074:	10055879 	andne	r5, r5, r9, ror r8
    e078:	0e050106 	adfeqs	f0, f5, f6
    e07c:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    e080:	132e0a03 			; <UNDEFINED> instruction: 0x132e0a03
    e084:	01061c05 	tsteq	r6, r5, lsl #24
    e088:	4b060905 	blmi	1904a4 <_Min_Heap_Size+0x18fca4>
    e08c:	01061d05 	tsteq	r6, r5, lsl #26
    e090:	20210505 	eorcs	r0, r1, r5, lsl #10
    e094:	01000502 	tsteq	r0, r2, lsl #10
    e098:	00050501 	andeq	r0, r5, r1, lsl #10
    e09c:	2b540205 	blcs	150e8b8 <_Min_Heap_Size+0x150e0b8>
    e0a0:	e7030800 	str	r0, [r3, -r0, lsl #16]
    e0a4:	01060106 	tsteq	r6, r6, lsl #2
    e0a8:	2f060905 	svccs	0x00060905
    e0ac:	05131905 	ldreq	r1, [r3, #-2309]	; 0xfffff6fb
    e0b0:	14051409 	strne	r1, [r5], #-1033	; 0xfffffbf7
    e0b4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    e0b8:	05220609 	streq	r0, [r2, #-1545]!	; 0xfffff9f7
    e0bc:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    e0c0:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    e0c4:	27053506 	strcs	r3, [r5, -r6, lsl #10]
    e0c8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    e0cc:	13053106 	movwne	r3, #20742	; 0x5106
    e0d0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    e0d4:	05053006 	streq	r3, [r5, #-6]
    e0d8:	0d051306 	stceq	3, cr1, [r5, #-24]	; 0xffffffe8
    e0dc:	2e750306 	cdpcs	3, 7, cr0, cr5, cr6, {0}
    e0e0:	0627052f 	strteq	r0, [r7], -pc, lsr #10
    e0e4:	00050201 	andeq	r0, r5, r1, lsl #4
    e0e8:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    e0ec:	80020500 	andhi	r0, r2, r0, lsl #10
    e0f0:	0308002b 	movweq	r0, #32811	; 0x802b
    e0f4:	0601068f 	streq	r0, [r1], -pc, lsl #13
    e0f8:	06090501 	streq	r0, [r9], -r1, lsl #10
    e0fc:	0514134b 	ldreq	r1, [r4, #-843]	; 0xfffffcb5
    e100:	1805350d 	stmdane	r5, {r0, r2, r3, r8, sl, ip, sp}
    e104:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    e108:	29053e06 	stmdbcs	r5, {r1, r2, r9, sl, fp, ip, sp}
    e10c:	0f050106 	svceq	0x00050106
    e110:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    e114:	06130531 			; <UNDEFINED> instruction: 0x06130531
    e118:	00320501 	eorseq	r0, r2, r1, lsl #10
    e11c:	20010402 	andcs	r0, r1, r2, lsl #8
    e120:	03061505 	movweq	r1, #25861	; 0x6505
    e124:	17052e0d 	strne	r2, [r5, -sp, lsl #28]
    e128:	19050106 	stmdbne	r5, {r1, r2, r8}
    e12c:	29052406 	stmdbcs	r5, {r1, r2, sl, sp}
    e130:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    e134:	4a065b06 	bmi	1a4d54 <_Min_Heap_Size+0x1a4554>
    e138:	19053006 	stmdbne	r5, {r1, r2, ip, sp}
    e13c:	17050106 	strne	r0, [r5, -r6, lsl #2]
    e140:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    e144:	052e6626 	streq	r6, [lr, #-1574]!	; 0xfffff9da
    e148:	15052e2f 	strne	r2, [r5, #-3631]	; 0xfffff1d1
    e14c:	05206603 	streq	r6, [r0, #-1539]!	; 0xfffff9fd
    e150:	0501061e 	streq	r0, [r1, #-1566]	; 0xfffff9e2
    e154:	052f0615 	streq	r0, [pc, #-1557]!	; db47 <_Min_Heap_Size+0xd347>
    e158:	0e030629 	cfmadd32eq	mvax1, mvfx0, mvfx3, mvfx9
    e15c:	11052058 	qaddne	r2, r8, r5
    e160:	20150306 	andscs	r0, r5, r6, lsl #6
    e164:	01061a05 	tsteq	r6, r5, lsl #20
    e168:	2e310505 	cdpcs	5, 3, cr0, cr1, cr5, {0}
    e16c:	01000402 	tsteq	r0, r2, lsl #8
    e170:	00050501 	andeq	r0, r5, r1, lsl #10
    e174:	2bf40205 	blcs	ffd0e990 <_estack+0xdfd04ff0>
    e178:	aa030800 	bge	d0180 <_Min_Heap_Size+0xcf980>
    e17c:	09050107 	stmdbeq	r5, {r0, r1, r2, r8}
    e180:	061d052f 	ldreq	r0, [sp], -pc, lsr #10
    e184:	06090501 	streq	r0, [r9], -r1, lsl #10
    e188:	14131359 	ldrne	r1, [r3], #-857	; 0xfffffca7
    e18c:	01060e05 	tsteq	r6, r5, lsl #28
    e190:	03062d05 	movweq	r2, #27909	; 0x6d05
    e194:	0d052013 	stceq	0, cr2, [r5, #-76]	; 0xffffffb4
    e198:	06190519 			; <UNDEFINED> instruction: 0x06190519
    e19c:	200f0501 	andcs	r0, pc, r1, lsl #10
    e1a0:	03060e05 	movweq	r0, #28165	; 0x6e05
    e1a4:	10052e66 	andne	r2, r5, r6, ror #28
    e1a8:	0e050106 	adfeqs	f0, f5, f6
    e1ac:	06110566 	ldreq	r0, [r1], -r6, ror #10
    e1b0:	061d0534 			; <UNDEFINED> instruction: 0x061d0534
    e1b4:	20130501 	andscs	r0, r3, r1, lsl #10
    e1b8:	30061505 	andcc	r1, r6, r5, lsl #10
    e1bc:	05162f05 	ldreq	r2, [r6, #-3845]	; 0xfffff0fb
    e1c0:	11051515 	tstne	r5, r5, lsl r5
    e1c4:	05580f03 	ldrbeq	r0, [r8, #-3843]	; 0xfffff0fd
    e1c8:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    e1cc:	05220611 	streq	r0, [r2, #-1553]!	; 0xfffff9ef
    e1d0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    e1d4:	15052013 	strne	r2, [r5, #-19]	; 0xffffffed
    e1d8:	1e052306 	cdpne	3, 0, cr2, cr5, cr6, {0}
    e1dc:	2d050106 	stfcss	f0, [r5, #-24]	; 0xffffffe8
    e1e0:	77054006 	strvc	r4, [r5, -r6]
    e1e4:	1a110515 	bne	44f640 <_Min_Heap_Size+0x44ee40>
    e1e8:	01061c05 	tsteq	r6, r5, lsl #24
    e1ec:	4c061105 	stfmis	f1, [r6], {5}
    e1f0:	01062105 	tsteq	r6, r5, lsl #2
    e1f4:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
    e1f8:	05a50619 	streq	r0, [r5, #1561]!	; 0x619
    e1fc:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    e200:	05680619 	strbeq	r0, [r8, #-1561]!	; 0xfffff9e7
    e204:	0501065d 	streq	r0, [r1, #-1629]	; 0xfffff9a3
    e208:	1d052075 	stcne	0, cr2, [r5, #-468]	; 0xfffffe2c
    e20c:	1b053c20 	blne	15d294 <_Min_Heap_Size+0x15ca94>
    e210:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    e214:	062a0532 			; <UNDEFINED> instruction: 0x062a0532
    e218:	2e1f0501 	cfmul32cs	mvfx0, mvfx15, mvfx1
    e21c:	42062105 	andmi	r2, r6, #1073741825	; 0x40000001
    e220:	01063305 	tsteq	r6, r5, lsl #6
    e224:	4e063a05 	vmlami.f32	s6, s12, s10
    e228:	05131d05 	ldreq	r1, [r3, #-3333]	; 0xfffff2fb
    e22c:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    e230:	2105201d 	tstcs	r5, sp, lsl r0
    e234:	3c770306 	ldclcc	3, cr0, [r7], #-24	; 0xffffffe8
    e238:	01066d05 	tsteq	r6, r5, lsl #26
    e23c:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    e240:	15030619 	strne	r0, [r3, #-1561]	; 0xfffff9e7
    e244:	062b0574 			; <UNDEFINED> instruction: 0x062b0574
    e248:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    e24c:	2b052467 	blcs	1573f0 <_Min_Heap_Size+0x156bf0>
    e250:	19050106 	stmdbne	r5, {r1, r2, r8}
    e254:	53056706 	movwpl	r6, #22278	; 0x5706
    e258:	36050106 	strcc	r0, [r5], -r6, lsl #2
    e25c:	064d0520 	strbeq	r0, [sp], -r0, lsr #10
    e260:	1a190521 	bne	64f6ec <_Min_Heap_Size+0x64eeec>
    e264:	01062205 	tsteq	r6, r5, lsl #4
    e268:	0619054a 	ldreq	r0, [r9], -sl, asr #10
    e26c:	281d052f 	ldmdacs	sp, {r0, r1, r2, r3, r5, r8, sl}
    e270:	01062a05 	tsteq	r6, r5, lsl #20
    e274:	052e1f05 	streq	r1, [lr, #-3845]!	; 0xfffff0fb
    e278:	05420621 	strbeq	r0, [r2, #-1569]	; 0xfffff9df
    e27c:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    e280:	06540621 	ldrbeq	r0, [r4], -r1, lsr #12
    e284:	03050520 	movweq	r0, #21792	; 0x5520
    e288:	04023c18 	streq	r3, [r2], #-3096	; 0xfffff3e8
    e28c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    e290:	02050005 	andeq	r0, r5, #5
    e294:	08002cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, sp}
    e298:	0105ec03 	tsteq	r5, r3, lsl #24
    e29c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    e2a0:	01040200 	mrseq	r0, R12_usr
    e2a4:	02002f06 	andeq	r2, r0, #6, 30
    e2a8:	00130104 	andseq	r0, r3, r4, lsl #2
    e2ac:	15010402 	strne	r0, [r1, #-1026]	; 0xfffffbfe
    e2b0:	01040200 	mrseq	r0, R12_usr
    e2b4:	05010c03 	streq	r0, [r1, #-3075]	; 0xfffff3fd
    e2b8:	0402000d 	streq	r0, [r2], #-13
    e2bc:	1f051601 	svcne	0x00051601
    e2c0:	01040200 	mrseq	r0, R12_usr
    e2c4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    e2c8:	01040200 	mrseq	r0, R12_usr
    e2cc:	02004006 	andeq	r4, r0, #6
    e2d0:	053f0104 	ldreq	r0, [pc, #-260]!	; e1d4 <_Min_Heap_Size+0xd9d4>
    e2d4:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
    e2d8:	2e750301 	cdpcs	3, 7, cr0, cr5, cr1, {0}
    e2dc:	01000102 	tsteq	r0, r2, lsl #2
    e2e0:	00050501 	andeq	r0, r5, r1, lsl #10
    e2e4:	2d040205 	sfmcs	f0, 4, [r4, #-20]	; 0xffffffec
    e2e8:	d7030800 	strle	r0, [r3, -r0, lsl #16]
    e2ec:	09050108 	stmdbeq	r5, {r3, r8}
    e2f0:	300d0532 	andcc	r0, sp, r2, lsr r5
    e2f4:	01061d05 	tsteq	r6, r5, lsl #26
    e2f8:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    e2fc:	25030629 	strcs	r0, [r3, #-1577]	; 0xfffff9d7
    e300:	15090520 	strne	r0, [r9, #-1312]	; 0xfffffae0
    e304:	2f060505 	svccs	0x00060505
    e308:	03061105 	movweq	r1, #24837	; 0x6105
    e30c:	4b4b2e59 	blmi	12d9c78 <_Min_Heap_Size+0x12d9478>
    e310:	01062405 	tsteq	r6, r5, lsl #8
    e314:	2f061105 	svccs	0x00061105
    e318:	01062505 	tsteq	r6, r5, lsl #10
    e31c:	05133406 	ldreq	r3, [r3, #-1030]	; 0xfffffbfa
    e320:	23051415 	movwcs	r1, #21525	; 0x5415
    e324:	21050106 	tstcs	r5, r6, lsl #2
    e328:	01000882 	smlabbeq	r0, r2, r8, r0
    e32c:	00050501 	andeq	r0, r5, r1, lsl #10
    e330:	00000205 	andeq	r0, r0, r5, lsl #4
    e334:	a6030000 	strge	r0, [r3], -r0
    e338:	01060103 	tsteq	r6, r3, lsl #2
    e33c:	76063405 	strvc	r3, [r6], -r5, lsl #8
    e340:	32160905 	andscc	r0, r6, #81920	; 0x14000
    e344:	01062105 	tsteq	r6, r5, lsl #2
    e348:	2f060905 	svccs	0x00060905
    e34c:	01062905 	tsteq	r6, r5, lsl #18
    e350:	21060905 	tstcs	r6, r5, lsl #18
    e354:	01061f05 	tsteq	r6, r5, lsl #30
    e358:	21060905 	tstcs	r6, r5, lsl #18
    e35c:	01062805 	tsteq	r6, r5, lsl #16
    e360:	2f060905 	svccs	0x00060905
    e364:	060b053e 			; <UNDEFINED> instruction: 0x060b053e
    e368:	060d0501 	streq	r0, [sp], -r1, lsl #10
    e36c:	06220522 	strteq	r0, [r2], -r2, lsr #10
    e370:	06280501 	strteq	r0, [r8], -r1, lsl #10
    e374:	06050569 	streq	r0, [r5], -r9, ror #10
    e378:	01002e13 	tsteq	r0, r3, lsl lr
    e37c:	00050501 	andeq	r0, r5, r1, lsl #10
    e380:	2d640205 	sfmcs	f0, 2, [r4, #-20]!	; 0xffffffec
    e384:	ed030800 	stc	8, cr0, [r3, #-0]
    e388:	09050101 	stmdbeq	r5, {r0, r8}
    e38c:	142b052f 	strtne	r0, [fp], #-1327	; 0xfffffad1
    e390:	30180905 	andscc	r0, r8, r5, lsl #18
    e394:	01061905 	tsteq	r6, r5, lsl #18
    e398:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    e39c:	29030615 	stmdbcs	r3, {r0, r2, r4, r9, sl}
    e3a0:	06240520 	strteq	r0, [r4], -r0, lsr #10
    e3a4:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    e3a8:	0623052f 	strteq	r0, [r3], -pc, lsr #10
    e3ac:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    e3b0:	05591421 	ldrbeq	r1, [r9, #-1057]	; 0xfffffbdf
    e3b4:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    e3b8:	1505ba26 	strne	fp, [r5, #-2598]	; 0xfffff5da
    e3bc:	17053606 	strne	r3, [r5, -r6, lsl #12]
    e3c0:	21050106 	tstcs	r5, r6, lsl #2
    e3c4:	05202022 	streq	r2, [r0, #-34]!	; 0xffffffde
    e3c8:	7fbe0314 	svcvc	0x00be0314
    e3cc:	06250501 	strteq	r0, [r5], -r1, lsl #10
    e3d0:	3c00d403 	cfstrscc	mvf13, [r0], {3}
    e3d4:	05152005 	ldreq	r2, [r5, #-5]
    e3d8:	09051435 	stmdbeq	r5, {r0, r2, r4, r5, sl, ip}
    e3dc:	06050514 			; <UNDEFINED> instruction: 0x06050514
    e3e0:	000b0213 	andeq	r0, fp, r3, lsl r2
    e3e4:	09050101 	stmdbeq	r5, {r0, r8}
    e3e8:	00020500 	andeq	r0, r2, r0, lsl #10
    e3ec:	03000000 	movweq	r0, #0
    e3f0:	060102d4 			; <UNDEFINED> instruction: 0x060102d4
    e3f4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    e3f8:	14740575 	ldrbtne	r0, [r4], #-1397	; 0xfffffa8b
    e3fc:	05170d05 	ldreq	r0, [r7, #-3333]	; 0xfffff2fb
    e400:	20010628 	andcs	r0, r1, r8, lsr #12
    e404:	30060d05 	andcc	r0, r6, r5, lsl #26
    e408:	01060f05 	tsteq	r6, r5, lsl #30
    e40c:	33061105 	movwcc	r1, #24837	; 0x6105
    e410:	01062605 	tsteq	r6, r5, lsl #12
    e414:	3d061105 	stfccs	f1, [r6, #-20]	; 0xffffffec
    e418:	33057406 	movwcc	r7, #21510	; 0x5406
    e41c:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
    e420:	06090514 			; <UNDEFINED> instruction: 0x06090514
    e424:	01004a13 	tsteq	r0, r3, lsl sl
    e428:	00090501 	andeq	r0, r9, r1, lsl #10
    e42c:	00000205 	andeq	r0, r0, r5, lsl #4
    e430:	f7030000 			; <UNDEFINED> instruction: 0xf7030000
    e434:	01060102 	tsteq	r6, r2, lsl #2
    e438:	3d060d05 	stccc	13, cr0, [r6, #-20]	; 0xffffffec
    e43c:	14018905 	strne	r8, [r1], #-2309	; 0xfffff6fb
    e440:	0e032a05 	vmlaeq.f32	s4, s6, s10
    e444:	160d0501 	strne	r0, [sp], -r1, lsl #10
    e448:	060f0514 			; <UNDEFINED> instruction: 0x060f0514
    e44c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    e450:	06260525 	strteq	r0, [r6], -r5, lsr #10
    e454:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    e458:	5b39054c 	blpl	e4f990 <_Min_Heap_Size+0xe4f190>
    e45c:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    e460:	3c130609 	ldccc	6, cr0, [r3], {9}
    e464:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    e468:	02050005 	andeq	r0, r5, #5
    e46c:	00000000 	andeq	r0, r0, r0
    e470:	0103c403 	tsteq	r3, r3, lsl #8
    e474:	13130905 	tstne	r3, #81920	; 0x14000
    e478:	147f0514 	ldrbtne	r0, [pc], #-1300	; e480 <_Min_Heap_Size+0xdc80>
    e47c:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    e480:	19051609 	stmdbne	r5, {r0, r3, r9, sl, ip}
    e484:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    e488:	0505200b 	streq	r2, [r5, #-11]
    e48c:	05207403 	streq	r7, [r0, #-1027]!	; 0xfffffbfd
    e490:	0f03060d 	svceq	0x0003060d
    e494:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    e498:	060d0501 	streq	r0, [sp], -r1, lsl #10
    e49c:	06370521 	ldrteq	r0, [r7], -r1, lsr #10
    e4a0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    e4a4:	06310521 	ldrteq	r0, [r1], -r1, lsr #10
    e4a8:	06430501 	strbeq	r0, [r3], -r1, lsl #10
    e4ac:	140d0522 	strne	r0, [sp], #-1314	; 0xfffffade
    e4b0:	01060f05 	tsteq	r6, r5, lsl #30
    e4b4:	6c031405 	cfstrsvs	mvf1, [r3], {5}
    e4b8:	0625052e 	strteq	r0, [r5], -lr, lsr #10
    e4bc:	05202403 	streq	r2, [r0, #-1027]!	; 0xfffffbfd
    e4c0:	0905153c 	stmdbeq	r5, {r2, r3, r4, r5, r8, sl, ip}
    e4c4:	06050514 			; <UNDEFINED> instruction: 0x06050514
    e4c8:	06110513 			; <UNDEFINED> instruction: 0x06110513
    e4cc:	053c6c03 	ldreq	r6, [ip, #-3075]!	; 0xfffff3fd
    e4d0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    e4d4:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    e4d8:	1f053406 	svcne	0x00053406
    e4dc:	05740106 	ldrbeq	r0, [r4, #-262]!	; 0xfffffefa
    e4e0:	051c0615 	ldreq	r0, [ip, #-1557]	; 0xfffff9eb
    e4e4:	7401061f 	strvc	r0, [r1], #-1567	; 0xfffff9e1
    e4e8:	68031405 	stmdavs	r3, {r0, r2, sl, ip}
    e4ec:	03050520 	movweq	r0, #21792	; 0x5520
    e4f0:	0302202a 	movweq	r2, #8234	; 0x202a
    e4f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    e4f8:	02050005 	andeq	r0, r5, #5
    e4fc:	00000000 	andeq	r0, r0, r0
    e500:	0103f703 	tsteq	r3, r3, lsl #14	; <UNPREDICTABLE>
    e504:	09050106 	stmdbeq	r5, {r1, r2, r8}
    e508:	14133d06 	ldrne	r3, [r3], #-3334	; 0xfffff2fa
    e50c:	05147e05 	ldreq	r7, [r4, #-3589]	; 0xfffff1fb
    e510:	0905141f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sl, ip}
    e514:	06190516 			; <UNDEFINED> instruction: 0x06190516
    e518:	0b052001 	bleq	156524 <_Min_Heap_Size+0x155d24>
    e51c:	060d0520 	streq	r0, [sp], -r0, lsr #10
    e520:	06210523 	strteq	r0, [r1], -r3, lsr #10
    e524:	060d0501 	streq	r0, [sp], -r1, lsl #10
    e528:	06370521 	ldrteq	r0, [r7], -r1, lsr #10
    e52c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    e530:	06310521 	ldrteq	r0, [r1], -r1, lsr #10
    e534:	06440501 	strbeq	r0, [r4], -r1, lsl #10
    e538:	140d0522 	strne	r0, [sp], #-1314	; 0xfffffade
    e53c:	01060f05 	tsteq	r6, r5, lsl #30
    e540:	6c031405 	cfstrsvs	mvf1, [r3], {5}
    e544:	0625052e 	strteq	r0, [r5], -lr, lsr #10
    e548:	05201d03 	streq	r1, [r0, #-3331]!	; 0xfffff2fd
    e54c:	0905153b 	stmdbeq	r5, {r0, r1, r3, r4, r5, r8, sl, ip}
    e550:	06050514 			; <UNDEFINED> instruction: 0x06050514
    e554:	06110513 			; <UNDEFINED> instruction: 0x06110513
    e558:	052e7303 	streq	r7, [lr, #-771]!	; 0xfffffcfd
    e55c:	2e01061b 	mcrcs	6, 0, r0, cr1, cr11, {0}
    e560:	052e2020 	streq	r2, [lr, #-32]!	; 0xffffffe0
    e564:	206a0314 	rsbcs	r0, sl, r4, lsl r3
    e568:	00040220 	andeq	r0, r4, r0, lsr #4
    e56c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    e570:	00020500 	andeq	r0, r2, r0, lsl #10
    e574:	03000000 	movweq	r0, #0
    e578:	0501049f 	streq	r0, [r1, #-1183]	; 0xfffffb61
    e57c:	35051334 	strcc	r1, [r5, #-820]	; 0xfffffccc
    e580:	14470516 	strbne	r0, [r7], #-1302	; 0xfffffaea
    e584:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    e588:	02130605 	andseq	r0, r3, #5242880	; 0x500000
    e58c:	01010006 	tsteq	r1, r6
    e590:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    e594:	00000002 	andeq	r0, r0, r2
    e598:	04ad0300 	strteq	r0, [sp], #768	; 0x300
    e59c:	13090501 	movwne	r0, #38145	; 0x9501
    e5a0:	05142d05 	ldreq	r2, [r4, #-3333]	; 0xfffff2fb
    e5a4:	4405141f 	strmi	r1, [r5], #-1055	; 0xfffffbe1
    e5a8:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    e5ac:	13060505 	movwne	r0, #25861	; 0x6505
    e5b0:	00010220 	andeq	r0, r1, r0, lsr #4
    e5b4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    e5b8:	00020500 	andeq	r0, r2, r0, lsl #10
    e5bc:	03000000 	movweq	r0, #0
    e5c0:	060104bc 			; <UNDEFINED> instruction: 0x060104bc
    e5c4:	06090501 	streq	r0, [r9], -r1, lsl #10
    e5c8:	143e053d 	ldrtne	r0, [lr], #-1341	; 0xfffffac3
    e5cc:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    e5d0:	0d051309 	stceq	3, cr1, [r5, #-36]	; 0xffffffdc
    e5d4:	060f0530 			; <UNDEFINED> instruction: 0x060f0530
    e5d8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    e5dc:	06230522 	strteq	r0, [r3], -r2, lsr #10
    e5e0:	06090501 	streq	r0, [r9], -r1, lsl #10
    e5e4:	302a056d 	eorcc	r0, sl, sp, ror #10
    e5e8:	13060505 	movwne	r0, #25861	; 0x6505
    e5ec:	03061105 	movweq	r1, #24837	; 0x6105
    e5f0:	2305207a 	movwcs	r2, #20602	; 0x507a
    e5f4:	07020106 	streq	r0, [r2, -r6, lsl #2]
    e5f8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    e5fc:	02050005 	andeq	r0, r5, #5
    e600:	00000000 	andeq	r0, r0, r0
    e604:	0104d403 	tsteq	r4, r3, lsl #8
    e608:	09050106 	stmdbeq	r5, {r1, r2, r8}
    e60c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    e610:	1f051431 	svcne	0x00051431
    e614:	13090514 	movwne	r0, #38164	; 0x9514
    e618:	05300d05 	ldreq	r0, [r0, #-3333]!	; 0xfffff2fb
    e61c:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    e620:	19052e0f 	stmdbne	r5, {r0, r1, r2, r3, r9, sl, fp, sp}
    e624:	0609053f 			; <UNDEFINED> instruction: 0x0609053f
    e628:	30330528 	eorscc	r0, r3, r8, lsr #10
    e62c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    e630:	05130605 	ldreq	r0, [r3, #-1541]	; 0xfffff9fb
    e634:	2e780319 	mrccs	3, 3, r0, cr8, cr9, {0}
    e638:	00010220 	andeq	r0, r1, r0, lsr #4
    e63c:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    e640:	00020500 	andeq	r0, r2, r0, lsl #10
    e644:	03000000 	movweq	r0, #0
    e648:	060104f0 			; <UNDEFINED> instruction: 0x060104f0
    e64c:	06090501 	streq	r0, [r9], -r1, lsl #10
    e650:	14320521 	ldrtne	r0, [r2], #-1313	; 0xfffffadf
    e654:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    e658:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    e65c:	05300635 	ldreq	r0, [r0, #-1589]!	; 0xfffff9cb
    e660:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    e664:	01021306 	tsteq	r2, r6, lsl #6
    e668:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    e66c:	02050005 	andeq	r0, r5, #5
    e670:	00000000 	andeq	r0, r0, r0
    e674:	0104fe03 	tsteq	r4, r3, lsl #28	; <UNPREDICTABLE>
    e678:	13130905 	tstne	r3, #81920	; 0x14000
    e67c:	05143105 	ldreq	r3, [r4, #-261]	; 0xfffffefb
    e680:	0905141f 	stmdbeq	r5, {r0, r1, r2, r3, r4, sl, ip}
    e684:	14330513 	ldrtne	r0, [r3], #-1299	; 0xfffffaed
    e688:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    e68c:	20130605 	andscs	r0, r3, r5, lsl #12
    e690:	01000102 	tsteq	r0, r2, lsl #2
    e694:	00090501 	andeq	r0, r9, r1, lsl #10
    e698:	00000205 	andeq	r0, r0, r5, lsl #4
    e69c:	90030000 	andls	r0, r3, r0
    e6a0:	0d050105 	stfeqs	f0, [r5, #-20]	; 0xffffffec
    e6a4:	47051313 	smladmi	r5, r3, r3, r1
    e6a8:	14330514 	ldrtne	r0, [r3], #-1300	; 0xfffffaec
    e6ac:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    e6b0:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    e6b4:	11052e0f 	tstne	r5, pc, lsl #28
    e6b8:	21054106 	tstcs	r5, r6, lsl #2
    e6bc:	11050106 	tstne	r5, r6, lsl #2
    e6c0:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    e6c4:	24200106 	strtcs	r0, [r0], #-262	; 0xfffffefa
    e6c8:	23063905 	movwcs	r3, #26885	; 0x6905
    e6cc:	05140d05 	ldreq	r0, [r4, #-3333]	; 0xfffff2fb
    e6d0:	02130609 	andseq	r0, r3, #9437184	; 0x900000
    e6d4:	01010001 	tsteq	r1, r1
    e6d8:	05000505 	streq	r0, [r0, #-1285]	; 0xfffffafb
    e6dc:	00000002 	andeq	r0, r0, r2
    e6e0:	05ad0300 	streq	r0, [sp, #768]!	; 0x300
    e6e4:	13090501 	movwne	r0, #38145	; 0x9501
    e6e8:	05142c05 	ldreq	r2, [r4, #-3077]	; 0xfffff3fb
    e6ec:	3b05141f 	blcc	153770 <_Min_Heap_Size+0x152f70>
    e6f0:	14090514 	strne	r0, [r9], #-1300	; 0xfffffaec
    e6f4:	13060505 	movwne	r0, #25861	; 0x6505
    e6f8:	00010220 	andeq	r0, r1, r0, lsr #4
    e6fc:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    e700:	00020500 	andeq	r0, r2, r0, lsl #10
    e704:	03000000 	movweq	r0, #0
    e708:	0601098a 	streq	r0, [r1], -sl, lsl #19
    e70c:	06090501 	streq	r0, [r9], -r1, lsl #10
    e710:	3105132f 	tstcc	r5, pc, lsr #6
    e714:	141f0514 	ldrne	r0, [pc], #-1300	; e71c <_Min_Heap_Size+0xdf1c>
    e718:	05150905 	ldreq	r0, [r5, #-2309]	; 0xfffff6fb
    e71c:	1a05300d 	bne	15a758 <_Min_Heap_Size+0x159f58>
    e720:	0f050106 	svceq	0x00050106
    e724:	3e19052e 	cfmul64cc	mvdx0, mvdx9, mvdx14
    e728:	27060905 	strcs	r0, [r6, -r5, lsl #18]
    e72c:	05303305 	ldreq	r3, [r0, #-773]!	; 0xfffffcfb
    e730:	05051409 	streq	r1, [r5, #-1033]	; 0xfffffbf7
    e734:	19051306 	stmdbne	r5, {r1, r2, r8, r9, ip}
    e738:	202e7803 	eorcs	r7, lr, r3, lsl #16
    e73c:	01000102 	tsteq	r0, r2, lsl #2
    e740:	00050501 	andeq	r0, r5, r1, lsl #10
    e744:	00000205 	andeq	r0, r0, r5, lsl #4
    e748:	a7030000 	strge	r0, [r3, -r0]
    e74c:	01060109 	tsteq	r6, r9, lsl #2
    e750:	2f060905 	svccs	0x00060905
    e754:	142f0513 	strtne	r0, [pc], #-1299	; e75c <_Min_Heap_Size+0xdf5c>
    e758:	05141f05 	ldreq	r1, [r4, #-3845]	; 0xfffff0fb
    e75c:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    e760:	06160530 			; <UNDEFINED> instruction: 0x06160530
    e764:	06090501 	streq	r0, [r9], -r1, lsl #10
    e768:	30320522 	eorscc	r0, r2, r2, lsr #10
    e76c:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    e770:	2e130605 	cfmsub32cs	mvax0, mvfx0, mvfx3, mvfx5
    e774:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    e778:	02050005 	andeq	r0, r5, #5
    e77c:	00000000 	andeq	r0, r0, r0
    e780:	0109bd03 	tsteq	r9, r3, lsl #26
    e784:	09050106 	stmdbeq	r5, {r1, r2, r8}
    e788:	37053d06 	strcc	r3, [r5, -r6, lsl #26]
    e78c:	141f0514 	ldrne	r0, [pc], #-1300	; e794 <_Min_Heap_Size+0xdf94>
    e790:	05140905 	ldreq	r0, [r4, #-2309]	; 0xfffff6fb
    e794:	2005300d 	andcs	r3, r5, sp
    e798:	09050106 	stmdbeq	r5, {r1, r2, r8}
    e79c:	27052206 	strcs	r2, [r5, -r6, lsl #4]
    e7a0:	06050530 			; <UNDEFINED> instruction: 0x06050530
    e7a4:	01002013 	tsteq	r0, r3, lsl r0
    e7a8:	00090501 	andeq	r0, r9, r1, lsl #10
    e7ac:	00000205 	andeq	r0, r0, r5, lsl #4
    e7b0:	d4030000 	strle	r0, [r3], #-0
    e7b4:	01060109 	tsteq	r6, r9, lsl #2
    e7b8:	4b060d05 	blmi	191bd4 <_Min_Heap_Size+0x1913d4>
    e7bc:	147f0513 	ldrbtne	r0, [pc], #-1299	; e7c4 <_Min_Heap_Size+0xdfc4>
    e7c0:	05160d05 	ldreq	r0, [r6, #-3333]	; 0xfffff2fb
    e7c4:	2e010621 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx1
    e7c8:	21060d05 	tstcs	r6, r5, lsl #26
    e7cc:	01063f05 	tsteq	r6, r5, lsl #30
    e7d0:	21060d05 	tstcs	r6, r5, lsl #26
    e7d4:	01063905 	tsteq	r6, r5, lsl #18
    e7d8:	21060d05 	tstcs	r6, r5, lsl #26
    e7dc:	01063905 	tsteq	r6, r5, lsl #18
    e7e0:	22060d05 	andcs	r0, r6, #320	; 0x140
    e7e4:	01061705 	tsteq	r6, r5, lsl #14
    e7e8:	6105202e 	tstvs	r5, lr, lsr #32
    e7ec:	41053e06 	tstmi	r5, r6, lsl #28
    e7f0:	140d0513 	strne	r0, [sp], #-1299	; 0xfffffaed
    e7f4:	13060905 	movwne	r0, #26885	; 0x6905
    e7f8:	0002022e 	andeq	r0, r2, lr, lsr #4
    e7fc:	09050101 	stmdbeq	r5, {r0, r8}
    e800:	00020500 	andeq	r0, r2, r0, lsl #10
    e804:	03000000 	movweq	r0, #0
    e808:	060109f2 			; <UNDEFINED> instruction: 0x060109f2
    e80c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    e810:	6b05134b 	blvs	153544 <_Min_Heap_Size+0x152d44>
    e814:	17280514 			; <UNDEFINED> instruction: 0x17280514
    e818:	05160d05 	ldreq	r0, [r6, #-3333]	; 0xfffff2fb
    e81c:	2e010621 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx1
    e820:	21060d05 	tstcs	r6, r5, lsl #26
    e824:	01063f05 	tsteq	r6, r5, lsl #30
    e828:	21060d05 	tstcs	r6, r5, lsl #26
    e82c:	01063905 	tsteq	r6, r5, lsl #18
    e830:	21060d05 	tstcs	r6, r5, lsl #26
    e834:	01063905 	tsteq	r6, r5, lsl #18
    e838:	22060d05 	andcs	r0, r6, #320	; 0x140
    e83c:	01061705 	tsteq	r6, r5, lsl #14
    e840:	5805202e 	stmdapl	r5, {r1, r2, r3, r5, sp}
    e844:	3a053e06 	bcc	15e064 <_Min_Heap_Size+0x15d864>
    e848:	140d0513 	strne	r0, [sp], #-1299	; 0xfffffaed
    e84c:	13060905 	movwne	r0, #26885	; 0x6905
    e850:	0002022e 	andeq	r0, r2, lr, lsr #4
    e854:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    e858:	00020500 	andeq	r0, r2, r0, lsl #10
    e85c:	03000000 	movweq	r0, #0
    e860:	05010ab2 	streq	r0, [r1, #-2738]	; 0xfffff54e
    e864:	15051309 	strne	r1, [r5, #-777]	; 0xfffffcf7
    e868:	09050106 	stmdbeq	r5, {r1, r2, r8}
    e86c:	1a053d06 	bne	15dc8c <_Min_Heap_Size+0x15d48c>
    e870:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    e874:	0005022f 	andeq	r0, r5, pc, lsr #4
    e878:	06ea0101 	strbteq	r0, [sl], r1, lsl #2
    e87c:	00030000 	andeq	r0, r3, r0
    e880:	000001c7 	andeq	r0, r0, r7, asr #3
    e884:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    e888:	0101000d 	tsteq	r1, sp
    e88c:	00000101 	andeq	r0, r0, r1, lsl #2
    e890:	00000100 	andeq	r0, r0, r0, lsl #2
    e894:	2f2e2e01 	svccs	0x002e2e01
    e898:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    e89c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    e8a0:	6f747262 	svcvs	0x00747262
    e8a4:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    e8a8:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    e8ac:	702f534f 	eorvc	r5, pc, pc, asr #6
    e8b0:	6174726f 	cmnvs	r4, pc, ror #4
    e8b4:	2f656c62 	svccs	0x00656c62
    e8b8:	4d6d654d 	cfstr64mi	mvdx6, [sp, #-308]!	; 0xfffffecc
    e8bc:	00676e61 	rsbeq	r6, r7, r1, ror #28
    e8c0:	74706f2f 	ldrbtvc	r6, [r0], #-3887	; 0xfffff0d1
    e8c4:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    e8c8:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    e8cc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    e8d0:	61652d65 	cmnvs	r5, r5, ror #26
    e8d4:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    e8d8:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    e8dc:	31323032 	teqcc	r2, r2, lsr r0
    e8e0:	2f30312e 	svccs	0x0030312e
    e8e4:	2f62696c 	svccs	0x0062696c
    e8e8:	2f636367 	svccs	0x00636367
    e8ec:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    e8f0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    e8f4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    e8f8:	30312f69 	eorscc	r2, r1, r9, ror #30
    e8fc:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
    e900:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    e904:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    e908:	706f2f00 	rsbvc	r2, pc, r0, lsl #30
    e90c:	63672f74 	cmnvs	r7, #116, 30	; 0x1d0
    e910:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    e914:	6f6e2d6d 	svcvs	0x006e2d6d
    e918:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    e91c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    e920:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    e924:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    e928:	30312e31 	eorscc	r2, r1, r1, lsr lr
    e92c:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    e930:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    e934:	61652d65 	cmnvs	r5, r5, ror #26
    e938:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    e93c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    e940:	6d2f6564 	cfstr32vs	mvfx6, [pc, #-400]!	; e7b8 <_Min_Heap_Size+0xdfb8>
    e944:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    e948:	2f00656e 	svccs	0x0000656e
    e94c:	2f74706f 	svccs	0x0074706f
    e950:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    e954:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    e958:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    e95c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    e960:	30312d69 	eorscc	r2, r1, r9, ror #26
    e964:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    e968:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    e96c:	612f3031 			; <UNDEFINED> instruction: 0x612f3031
    e970:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    e974:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    e978:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    e97c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    e980:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    e984:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
    e988:	2f2e2e00 	svccs	0x002e2e00
    e98c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    e990:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    e994:	6f747262 	svcvs	0x00747262
    e998:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    e99c:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    e9a0:	702f534f 	eorvc	r5, pc, pc, asr #6
    e9a4:	6174726f 	cmnvs	r4, pc, ror #4
    e9a8:	2f656c62 	svccs	0x00656c62
    e9ac:	2f434347 	svccs	0x00434347
    e9b0:	5f4d5241 	svcpl	0x004d5241
    e9b4:	46344d43 	ldrtmi	r4, [r4], -r3, asr #26
    e9b8:	2f2e2e00 	svccs	0x002e2e00
    e9bc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    e9c0:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    e9c4:	6f747262 	svcvs	0x00747262
    e9c8:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    e9cc:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    e9d0:	692f534f 	stmdbvs	pc!, {r0, r1, r2, r3, r6, r8, r9, ip, lr}	; <UNPREDICTABLE>
    e9d4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    e9d8:	00006564 	andeq	r6, r0, r4, ror #10
    e9dc:	70616568 	rsbvc	r6, r1, r8, ror #10
    e9e0:	632e345f 			; <UNDEFINED> instruction: 0x632e345f
    e9e4:	00000100 	andeq	r0, r0, r0, lsl #2
    e9e8:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    e9ec:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    e9f0:	00000200 	andeq	r0, r0, r0, lsl #4
    e9f4:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    e9f8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    e9fc:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    ea00:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    ea04:	00000300 	andeq	r0, r0, r0, lsl #6
    ea08:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    ea0c:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    ea10:	00040068 	andeq	r0, r4, r8, rrx
    ea14:	726f7000 	rsbvc	r7, pc, #0
    ea18:	63616d74 	cmnvs	r1, #116, 26	; 0x1d00
    ea1c:	682e6f72 	stmdavs	lr!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}
    ea20:	00000500 	andeq	r0, r0, r0, lsl #10
    ea24:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    ea28:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    ea2c:	0600682e 	streq	r6, [r0], -lr, lsr #16
    ea30:	61740000 	cmnvs	r4, r0
    ea34:	682e6b73 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    ea38:	00000600 	andeq	r0, r0, r0, lsl #12
    ea3c:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    ea40:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    ea44:	00003e6e 	andeq	r3, r0, lr, ror #28
    ea48:	05000000 	streq	r0, [r0, #-0]
    ea4c:	02050001 	andeq	r0, r5, #1
    ea50:	08002dc0 	stmdaeq	r0, {r6, r7, r8, sl, fp, sp}
    ea54:	0103bc03 	tsteq	r3, r3, lsl #24
    ea58:	13130505 	tstne	r3, #20971520	; 0x1400000
    ea5c:	14051513 	strne	r1, [r5], #-1299	; 0xfffffaed
    ea60:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    ea64:	07052206 	streq	r2, [r5, -r6, lsl #4]
    ea68:	09050106 	stmdbeq	r5, {r1, r2, r8}
    ea6c:	18053e06 	stmdane	r5, {r1, r2, r9, sl, fp, ip, sp}
    ea70:	09050106 	stmdbeq	r5, {r1, r2, r8}
    ea74:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    ea78:	09050106 	stmdbeq	r5, {r1, r2, r8}
    ea7c:	18052f06 	stmdane	r5, {r1, r2, r8, r9, sl, fp, sp}
    ea80:	053b0106 	ldreq	r0, [fp, #-262]!	; 0xfffffefa
    ea84:	0c030605 	stceq	6, cr0, [r3], {5}
    ea88:	061c0520 	ldreq	r0, [ip], -r0, lsr #10
    ea8c:	06050501 	streq	r0, [r5], -r1, lsl #10
    ea90:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
    ea94:	06050501 	streq	r0, [r5], -r1, lsl #10
    ea98:	06120532 			; <UNDEFINED> instruction: 0x06120532
    ea9c:	06050501 	streq	r0, [r5], -r1, lsl #10
    eaa0:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    eaa4:	06050501 	streq	r0, [r5], -r1, lsl #10
    eaa8:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    eaac:	06050501 	streq	r0, [r5], -r1, lsl #10
    eab0:	060b052f 	streq	r0, [fp], -pc, lsr #10
    eab4:	06050501 	streq	r0, [r5], -r1, lsl #10
    eab8:	0617052f 	ldreq	r0, [r7], -pc, lsr #10
    eabc:	06050501 	streq	r0, [r5], -r1, lsl #10
    eac0:	061c0521 	ldreq	r0, [ip], -r1, lsr #10
    eac4:	06050501 	streq	r0, [r5], -r1, lsl #10
    eac8:	3e051324 	cdpcc	3, 0, cr1, cr5, cr4, {1}
    eacc:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
    ead0:	06050520 	streq	r0, [r5], -r0, lsr #10
    ead4:	06270521 	strteq	r0, [r7], -r1, lsr #10
    ead8:	06050501 	streq	r0, [r5], -r1, lsl #10
    eadc:	06240523 	strteq	r0, [r4], -r3, lsr #10
    eae0:	05052001 	streq	r2, [r5, #-1]
    eae4:	19052106 	stmdbne	r5, {r1, r2, r8, sp}
    eae8:	01050106 	tsteq	r5, r6, lsl #2
    eaec:	030c052f 	movweq	r0, #50479	; 0xc52f
    eaf0:	0d022057 	stceq	0, cr2, [r2, #-348]	; 0xfffffea4
    eaf4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    eaf8:	02050001 	andeq	r0, r5, #1
    eafc:	08002e18 	stmdaeq	r0, {r3, r4, r9, sl, fp, sp}
    eb00:	0103ec03 	tsteq	r3, r3, lsl #24
    eb04:	13130505 	tstne	r3, #20971520	; 0x1400000
    eb08:	06150516 			; <UNDEFINED> instruction: 0x06150516
    eb0c:	00200501 	eoreq	r0, r0, r1, lsl #10
    eb10:	06010402 	streq	r0, [r1], -r2, lsl #8
    eb14:	00050520 	andeq	r0, r5, r0, lsr #10
    eb18:	06010402 	streq	r0, [r1], -r2, lsl #8
    eb1c:	0533062e 	ldreq	r0, [r3, #-1582]!	; 0xfffff9d2
    eb20:	05051431 	streq	r1, [r5, #-1073]	; 0xfffffbcf
    eb24:	1b051417 	blne	153b88 <_Min_Heap_Size+0x153388>
    eb28:	0f050106 	svceq	0x00050106
    eb2c:	2e070520 	cfsh32cs	mvfx0, mvfx7, #16
    eb30:	35062105 	strcc	r2, [r6, #-261]	; 0xfffffefb
    eb34:	14170505 	ldrne	r0, [r7], #-1285	; 0xfffffafb
    eb38:	01062005 	tsteq	r6, r5
    eb3c:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
    eb40:	09052e07 	stmdbeq	r5, {r0, r1, r2, r9, sl, fp, sp}
    eb44:	2e0f0306 	cdpcs	3, 0, cr0, cr15, cr6, {0}
    eb48:	01062a05 	tsteq	r6, r5, lsl #20
    eb4c:	27060505 	strcs	r0, [r6, -r5, lsl #10]
    eb50:	01060705 	tsteq	r6, r5, lsl #14
    eb54:	30060905 	andcc	r0, r6, r5, lsl #18
    eb58:	01062505 	tsteq	r6, r5, lsl #10
    eb5c:	24062105 	strcs	r2, [r6], #-261	; 0xfffffefb
    eb60:	58030905 	stmdapl	r3, {r0, r2, r8, fp}
    eb64:	06320520 	ldrteq	r0, [r2], -r0, lsr #10
    eb68:	20200501 	eorcs	r0, r0, r1, lsl #10
    eb6c:	2f060905 	svccs	0x00060905
    eb70:	01061905 	tsteq	r6, r5, lsl #18
    eb74:	69030105 	stmdbvs	r3, {r0, r2, r8}
    eb78:	0609052e 	streq	r0, [r9], -lr, lsr #10
    eb7c:	05202403 	streq	r2, [r0, #-1027]!	; 0xfffffbfd
    eb80:	05010646 	streq	r0, [r1, #-1606]	; 0xfffff9ba
    eb84:	0d052e0b 	stceq	14, cr2, [r5, #-44]	; 0xffffffd4
    eb88:	64053106 	strvs	r3, [r5], #-262	; 0xfffffefa
    eb8c:	29050106 	stmdbcs	r5, {r1, r2, r8}
    eb90:	060d0520 	streq	r0, [sp], -r0, lsr #10
    eb94:	0630052f 	ldrteq	r0, [r0], -pc, lsr #10
    eb98:	20680501 	rsbcs	r0, r8, r1, lsl #10
    eb9c:	05202e05 	streq	r2, [r0, #-3589]!	; 0xfffff1fb
    eba0:	10030605 	andne	r0, r3, r5, lsl #12
    eba4:	06070520 	streq	r0, [r7], -r0, lsr #10
    eba8:	06090501 	streq	r0, [r9], -r1, lsl #10
    ebac:	06250530 			; <UNDEFINED> instruction: 0x06250530
    ebb0:	06210501 	strteq	r0, [r1], -r1, lsl #10
    ebb4:	06010524 	streq	r0, [r1], -r4, lsr #10
    ebb8:	060d0514 			; <UNDEFINED> instruction: 0x060d0514
    ebbc:	053c6c03 	ldreq	r6, [ip, #-3075]!	; 0xfffff3fd
    ebc0:	2e01062e 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx14
    ebc4:	01000602 	tsteq	r0, r2, lsl #12
    ebc8:	00010501 	andeq	r0, r1, r1, lsl #10
    ebcc:	2e7c0205 	cdpcs	2, 7, cr0, cr12, cr5, {0}
    ebd0:	ad030800 	stcge	8, cr0, [r3, #-0]
    ebd4:	01060101 	tsteq	r6, r1, lsl #2
    ebd8:	21060505 	tstcs	r6, r5, lsl #10
    ebdc:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    ebe0:	06070514 			; <UNDEFINED> instruction: 0x06070514
    ebe4:	06090501 	streq	r0, [r9], -r1, lsl #10
    ebe8:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
    ebec:	060d0501 	streq	r0, [sp], -r1, lsl #10
    ebf0:	0619053e 			; <UNDEFINED> instruction: 0x0619053e
    ebf4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    ebf8:	060f0524 	streq	r0, [pc], -r4, lsr #10
    ebfc:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    ec00:	0629053f 			; <UNDEFINED> instruction: 0x0629053f
    ec04:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    ec08:	06150530 			; <UNDEFINED> instruction: 0x06150530
    ec0c:	20130501 	andscs	r0, r3, r1, lsl #10
    ec10:	30061505 	andcc	r1, r6, r5, lsl #10
    ec14:	01062105 	tsteq	r6, r5, lsl #2
    ec18:	03190520 	tsteq	r9, #32, 10	; 0x8000000
    ec1c:	2105200e 	tstcs	r5, lr
    ec20:	05052506 	streq	r2, [r5, #-1286]	; 0xfffffafa
    ec24:	32090515 	andcc	r0, r9, #88080384	; 0x5400000
    ec28:	01061305 	tsteq	r6, r5, lsl #6
    ec2c:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    ec30:	05260625 	streq	r0, [r6, #-1573]!	; 0xfffff9db
    ec34:	0b051909 	bleq	155060 <_Min_Heap_Size+0x154860>
    ec38:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    ec3c:	0f053006 	svceq	0x00053006
    ec40:	36050106 	strcc	r0, [r5], -r6, lsl #2
    ec44:	01040200 	mrseq	r0, R12_usr
    ec48:	0025052e 	eoreq	r0, r5, lr, lsr #10
    ec4c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    ec50:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    ec54:	06190513 			; <UNDEFINED> instruction: 0x06190513
    ec58:	06360501 	ldrteq	r0, [r6], -r1, lsl #10
    ec5c:	1411052f 	ldrne	r0, [r1], #-1327	; 0xfffffad1
    ec60:	01061605 	tsteq	r6, r5, lsl #12
    ec64:	53032105 	movwpl	r2, #12549	; 0x3105
    ec68:	0d052020 	stceq	0, cr2, [r5, #-128]	; 0xffffff80
    ec6c:	20180306 	andscs	r0, r8, r6, lsl #6
    ec70:	03062505 	movweq	r2, #25861	; 0x6505
    ec74:	1d053c17 	stcne	12, cr3, [r5, #-92]	; 0xffffffa4
    ec78:	063a0521 	ldrteq	r0, [sl], -r1, lsr #10
    ec7c:	0e160521 	cfmul64eq	mvdx0, mvdx6, mvdx1
    ec80:	01062105 	tsteq	r6, r5, lsl #2
    ec84:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    ec88:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    ec8c:	3e052e01 	cdpcc	14, 0, cr2, cr5, cr1, {0}
    ec90:	01040200 	mrseq	r0, R12_usr
    ec94:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    ec98:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
    ec9c:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    eca0:	15052e13 	strne	r2, [r5, #-3603]	; 0xfffff1ed
    eca4:	3d053206 	sfmcc	f3, 4, [r5, #-24]	; 0xffffffe8
    eca8:	1e050106 	adfnes	f0, f5, f6
    ecac:	063b0520 	ldrteq	r0, [fp], -r0, lsr #10
    ecb0:	16150521 	ldrne	r0, [r5], -r1, lsr #10
    ecb4:	01063f05 	tsteq	r6, r5, lsl #30
    ecb8:	05203605 	streq	r3, [r0, #-1541]!	; 0xfffff9fb
    ecbc:	05240669 	streq	r0, [r4, #-1641]!	; 0xfffff997
    ecc0:	22051415 	andcs	r1, r5, #352321536	; 0x15000000
    ecc4:	2f050106 	svccs	0x00050106
    ecc8:	20170520 	andscs	r0, r7, r0, lsr #10
    eccc:	34061905 	strcc	r1, [r6], #-2309	; 0xfffff6fb
    ecd0:	01062805 	tsteq	r6, r5, lsl #16
    ecd4:	21066905 	tstcs	r6, r5, lsl #18
    ecd8:	05161905 	ldreq	r1, [r6, #-2309]	; 0xfffff6fb
    ecdc:	05010634 	streq	r0, [r1, #-1588]	; 0xfffff9cc
    ece0:	05210619 	streq	r0, [r1, #-1561]!	; 0xfffff9e7
    ece4:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    ece8:	05230619 	streq	r0, [r3, #-1561]!	; 0xfffff9e7
    ecec:	0501064a 	streq	r0, [r1, #-1610]	; 0xfffff9b6
    ecf0:	19052039 	stmdbne	r5, {r0, r3, r4, r5, sp}
    ecf4:	3a052106 	bcc	157114 <_Min_Heap_Size+0x156914>
    ecf8:	31050106 	tstcc	r5, r6, lsl #2
    ecfc:	15052406 	strne	r2, [r5, #-1030]	; 0xfffffbfa
    ed00:	06330515 			; <UNDEFINED> instruction: 0x06330515
    ed04:	20290501 	eorcs	r0, r9, r1, lsl #10
    ed08:	3e061505 	cfsh32cc	mvfx1, mvfx6, #5
    ed0c:	01062d05 	tsteq	r6, r5, lsl #26
    ed10:	052e1705 	streq	r1, [lr, #-1797]!	; 0xfffff8fb
    ed14:	05300619 	ldreq	r0, [r0, #-1561]!	; 0xfffff9e7
    ed18:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    ed1c:	05320631 	ldreq	r0, [r2, #-1585]!	; 0xfffff9cf
    ed20:	053d1715 	ldreq	r1, [sp, #-1813]!	; 0xfffff8eb
    ed24:	0501062e 	streq	r0, [r1, #-1582]	; 0xfffff9d2
    ed28:	052f0615 	streq	r0, [pc, #-1557]!	; e71b <_Min_Heap_Size+0xdf1b>
    ed2c:	2e010633 	mcrcs	6, 0, r0, cr1, cr3, {1}
    ed30:	03062505 	movweq	r2, #25861	; 0x6505
    ed34:	2d052e0e 	stccs	14, cr2, [r5, #-56]	; 0xffffffc8
    ed38:	14050515 	strne	r0, [r5], #-1301	; 0xfffffaeb
    ed3c:	01060e05 	tsteq	r6, r5, lsl #28
    ed40:	03065a05 	movweq	r5, #27141	; 0x6a05
    ed44:	05052e0f 	streq	r2, [r5, #-3599]	; 0xfffff1f1
    ed48:	06010513 			; <UNDEFINED> instruction: 0x06010513
    ed4c:	030c0513 	movweq	r0, #50451	; 0xc513
    ed50:	662e7ed9 			; <UNDEFINED> instruction: 0x662e7ed9
    ed54:	01000c02 	tsteq	r0, r2, lsl #24
    ed58:	00010501 	andeq	r0, r1, r1, lsl #10
    ed5c:	2f500205 	svccs	0x00500205
    ed60:	dc030800 	stcle	8, cr0, [r3], {-0}
    ed64:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    ed68:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    ed6c:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
    ed70:	09051c01 	stmdbeq	r5, {r0, sl, fp, ip}
    ed74:	0d053606 	stceq	6, cr3, [r5, #-24]	; 0xffffffe8
    ed78:	09050106 	stmdbeq	r5, {r1, r2, r8}
    ed7c:	2d053106 	stfcss	f3, [r5, #-24]	; 0xffffffe8
    ed80:	133e0514 	teqne	lr, #20, 10	; 0x5000000
    ed84:	05133805 	ldreq	r3, [r3, #-2053]	; 0xfffff7fb
    ed88:	0d051409 	cfstrseq	mvf1, [r5, #-36]	; 0xffffffdc
    ed8c:	0b050106 	bleq	14f1ac <_Min_Heap_Size+0x14e9ac>
    ed90:	060d052e 	streq	r0, [sp], -lr, lsr #10
    ed94:	06170530 			; <UNDEFINED> instruction: 0x06170530
    ed98:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    ed9c:	24030105 	strcs	r0, [r3], #-261	; 0xfffffefb
    eda0:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    eda4:	03206003 			; <UNDEFINED> instruction: 0x03206003
    eda8:	15054a0c 	strne	r4, [r5, #-2572]	; 0xfffff5f4
    edac:	06320531 			; <UNDEFINED> instruction: 0x06320531
    edb0:	2e290501 	cfsh64cs	mvdx0, mvdx9, #1
    edb4:	4b063805 	blmi	19cdd0 <_Min_Heap_Size+0x19c5d0>
    edb8:	3d131505 	cfldr32cc	mvfx1, [r3, #-20]	; 0xffffffec
    edbc:	01062d05 	tsteq	r6, r5, lsl #26
    edc0:	4c061105 	stfmis	f1, [r6], {5}
    edc4:	01061a05 	tsteq	r6, r5, lsl #20
    edc8:	03062505 	movweq	r2, #25861	; 0x6505
    edcc:	01052e09 	tsteq	r5, r9, lsl #28
    edd0:	02201506 	eoreq	r1, r0, #25165824	; 0x1800000
    edd4:	01010005 	tsteq	r1, r5
    edd8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    eddc:	00000002 	andeq	r0, r0, r2
    ede0:	03970300 	orrseq	r0, r7, #0, 6
    ede4:	13050501 	movwne	r0, #21761	; 0x5501
    ede8:	13060105 	movwne	r0, #24837	; 0x6105
    edec:	01000602 	tsteq	r0, r2, lsl #12
    edf0:	00010501 	andeq	r0, r1, r1, lsl #10
    edf4:	00000205 	andeq	r0, r0, r5, lsl #4
    edf8:	9d030000 	stcls	0, cr0, [r3, #-0]
    edfc:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    ee00:	06010513 			; <UNDEFINED> instruction: 0x06010513
    ee04:	00060213 	andeq	r0, r6, r3, lsl r2
    ee08:	01050101 	tsteq	r5, r1, lsl #2
    ee0c:	00020500 	andeq	r0, r2, r0, lsl #10
    ee10:	03000000 	movweq	r0, #0
    ee14:	140103a3 	strne	r0, [r1], #-931	; 0xfffffc5d
    ee18:	01000102 	tsteq	r0, r2, lsl #2
    ee1c:	00010501 	andeq	r0, r1, r1, lsl #10
    ee20:	00000205 	andeq	r0, r0, r5, lsl #4
    ee24:	aa030000 	bge	cee2c <_Min_Heap_Size+0xce62c>
    ee28:	01060103 	tsteq	r6, r3, lsl #2
    ee2c:	21060505 	tstcs	r6, r5, lsl #10
    ee30:	06090514 			; <UNDEFINED> instruction: 0x06090514
    ee34:	02005801 	andeq	r5, r0, #65536	; 0x10000
    ee38:	06200104 	strteq	r0, [r0], -r4, lsl #2
    ee3c:	060e0522 	streq	r0, [lr], -r2, lsr #10
    ee40:	06090501 	streq	r0, [r9], -r1, lsl #10
    ee44:	060b055a 			; <UNDEFINED> instruction: 0x060b055a
    ee48:	060d0501 	streq	r0, [sp], -r1, lsl #10
    ee4c:	06160530 			; <UNDEFINED> instruction: 0x06160530
    ee50:	4f010501 	svcmi	0x00010501
    ee54:	030c052e 	movweq	r0, #50478	; 0xc52e
    ee58:	05052e73 	streq	r2, [r5, #-3699]	; 0xfffff18d
    ee5c:	200c0306 	andcs	r0, ip, r6, lsl #6
    ee60:	01060c05 	tsteq	r6, r5, lsl #24
    ee64:	01000102 	tsteq	r0, r2, lsl #2
    ee68:	00010501 	andeq	r0, r1, r1, lsl #10
    ee6c:	00000205 	andeq	r0, r0, r5, lsl #4
    ee70:	b0030000 	andlt	r0, r3, r0
    ee74:	01060104 	tsteq	r6, r4, lsl #2
    ee78:	2f060505 	svccs	0x00060505
    ee7c:	09051413 	stmdbeq	r5, {r0, r1, r4, sl, ip}
    ee80:	06110530 			; <UNDEFINED> instruction: 0x06110530
    ee84:	06090501 	streq	r0, [r9], -r1, lsl #10
    ee88:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
    ee8c:	03270501 			; <UNDEFINED> instruction: 0x03270501
    ee90:	19052078 	stmdbne	r5, {r3, r4, r5, r6, sp}
    ee94:	200c052e 	andcs	r0, ip, lr, lsr #10
    ee98:	052e2705 	streq	r2, [lr, #-1797]!	; 0xfffff8fb
    ee9c:	0c052e19 	stceq	14, cr2, [r5], {25}
    eea0:	06050520 	streq	r0, [r5], -r0, lsr #10
    eea4:	05202003 	streq	r2, [r0, #-3]!
    eea8:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    eeac:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    eeb0:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    eeb4:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    eeb8:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    eebc:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    eec0:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    eec4:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
    eec8:	31053009 	tstcc	r5, r9
    eecc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    eed0:	35053d06 	strcc	r3, [r5, #-3334]	; 0xfffff2fa
    eed4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    eed8:	2f053d06 	svccs	0x00053d06
    eedc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    eee0:	35053d06 	strcc	r3, [r5, #-3334]	; 0xfffff2fa
    eee4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    eee8:	01053e06 	tsteq	r5, r6, lsl #28
    eeec:	11052f06 	tstne	r5, r6, lsl #30
    eef0:	206e0306 	rsbcs	r0, lr, r6, lsl #6
    eef4:	01061905 	tsteq	r6, r5, lsl #18
    eef8:	03061205 	movweq	r1, #25093	; 0x6205
    eefc:	1c05206e 	stcne	0, cr2, [r5], {110}	; 0x6e
    ef00:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    ef04:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    ef08:	06180532 			; <UNDEFINED> instruction: 0x06180532
    ef0c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    ef10:	061c0522 	ldreq	r0, [ip], -r2, lsr #10
    ef14:	20130501 	andscs	r0, r3, r1, lsl #10
    ef18:	05301e05 	ldreq	r1, [r0, #-3589]!	; 0xfffff1fb
    ef1c:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    ef20:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    ef24:	0220301e 	eoreq	r3, r0, #30
    ef28:	0101000d 	tsteq	r1, sp
    ef2c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    ef30:	00000002 	andeq	r0, r0, r2
    ef34:	04e90300 	strbteq	r0, [r9], #768	; 0x300
    ef38:	13050501 	movwne	r0, #21761	; 0x5501
    ef3c:	01060b05 	tsteq	r6, r5, lsl #22
    ef40:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
    ef44:	01061905 	tsteq	r6, r5, lsl #18
    ef48:	2f060505 	svccs	0x00060505
    ef4c:	01062405 	tsteq	r6, r5, lsl #8
    ef50:	2f060505 	svccs	0x00060505
    ef54:	01062405 	tsteq	r6, r5, lsl #8
    ef58:	2f060505 	svccs	0x00060505
    ef5c:	01061e05 	tsteq	r6, r5, lsl #28
    ef60:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    ef64:	0101000b 	tsteq	r1, fp
    ef68:	0000054d 	andeq	r0, r0, sp, asr #10
    ef6c:	01370003 	teqeq	r7, r3
    ef70:	01020000 	mrseq	r0, (UNDEF: 2)
    ef74:	000d0efb 	strdeq	r0, [sp], -fp
    ef78:	01010101 	tsteq	r1, r1, lsl #2
    ef7c:	01000000 	mrseq	r0, (UNDEF: 0)
    ef80:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    ef84:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    ef88:	2f2e2e2f 	svccs	0x002e2e2f
    ef8c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    ef90:	2f736f74 	svccs	0x00736f74
    ef94:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    ef98:	534f5452 	movtpl	r5, #62546	; 0xf452
    ef9c:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    efa0:	6c626174 	stfvse	f6, [r2], #-464	; 0xfffffe30
    efa4:	43472f65 	movtmi	r2, #32613	; 0x7f65
    efa8:	52412f43 	subpl	r2, r1, #268	; 0x10c
    efac:	4d435f4d 	stclmi	15, cr5, [r3, #-308]	; 0xfffffecc
    efb0:	2f004634 	svccs	0x00004634
    efb4:	2f74706f 	svccs	0x0074706f
    efb8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    efbc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    efc0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    efc4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    efc8:	30312d69 	eorscc	r2, r1, r9, ror #26
    efcc:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    efd0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    efd4:	612f3031 			; <UNDEFINED> instruction: 0x612f3031
    efd8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    efdc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    efe0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    efe4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    efe8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    efec:	63616d2f 	cmnvs	r1, #3008	; 0xbc0
    eff0:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    eff4:	706f2f00 	rsbvc	r2, pc, r0, lsl #30
    eff8:	63672f74 	cmnvs	r7, #116, 30	; 0x1d0
    effc:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    f000:	6f6e2d6d 	svcvs	0x006e2d6d
    f004:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    f008:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    f00c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    f010:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    f014:	30312e31 	eorscc	r2, r1, r1, lsr lr
    f018:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    f01c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    f020:	61652d65 	cmnvs	r5, r5, ror #26
    f024:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    f028:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    f02c:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
    f030:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    f034:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    f038:	2f2e2e2f 	svccs	0x002e2e2f
    f03c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    f040:	2f736f74 	svccs	0x00736f74
    f044:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    f048:	534f5452 	movtpl	r5, #62546	; 0xf452
    f04c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    f050:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    f054:	6f700000 	svcvs	0x00700000
    f058:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
    f05c:	00000100 	andeq	r0, r0, r0, lsl #2
    f060:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    f064:	7263616d 	rsbvc	r6, r3, #1073741851	; 0x4000001b
    f068:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    f06c:	5f000001 	svcpl	0x00000001
    f070:	61666564 	cmnvs	r6, r4, ror #10
    f074:	5f746c75 	svcpl	0x00746c75
    f078:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    f07c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    f080:	5f000002 	svcpl	0x00000002
    f084:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    f088:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    f08c:	00000300 	andeq	r0, r0, r0, lsl #6
    f090:	6a6f7270 	bvs	1beba58 <_Min_Heap_Size+0x1beb258>
    f094:	73666564 	cmnvc	r6, #100, 10	; 0x19000000
    f098:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    f09c:	61740000 	cmnvs	r4, r0
    f0a0:	682e6b73 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    f0a4:	00000400 	andeq	r0, r0, r0, lsl #8
    f0a8:	00010500 	andeq	r0, r1, r0, lsl #10
    f0ac:	2fa00205 	svccs	0x00a00205
    f0b0:	ea030800 	b	d10b8 <_Min_Heap_Size+0xd08b8>
    f0b4:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    f0b8:	06170521 	ldreq	r0, [r7], -r1, lsr #10
    f0bc:	062e0501 	strteq	r0, [lr], -r1, lsl #10
    f0c0:	13050536 	movwne	r0, #21814	; 0x5536
    f0c4:	1e050204 	cdpne	2, 0, cr0, cr5, cr4, {0}
    f0c8:	05016003 	streq	r6, [r1, #-3]
    f0cc:	06141405 	ldreq	r1, [r4], -r5, lsl #8
    f0d0:	00010482 	andeq	r0, r1, r2, lsl #9
    f0d4:	06010402 	streq	r0, [r1], -r2, lsl #8
    f0d8:	05012703 	streq	r2, [r1, #-1795]	; 0xfffff8fd
    f0dc:	0402000a 	streq	r0, [r2], #-10
    f0e0:	01770301 	cmneq	r7, r1, lsl #6
    f0e4:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
    f0e8:	01060104 	tsteq	r6, r4, lsl #2
    f0ec:	02000a05 	andeq	r0, r0, #20480	; 0x5000
    f0f0:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    f0f4:	2e0a0301 	cdpcs	3, 0, cr0, cr10, cr1, {0}
    f0f8:	01000202 	tsteq	r0, r2, lsl #4
    f0fc:	00010501 	andeq	r0, r1, r1, lsl #10
    f100:	2fc00205 	svccs	0x00c00205
    f104:	97030800 	strls	r0, [r3, -r0, lsl #16]
    f108:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    f10c:	06010517 			; <UNDEFINED> instruction: 0x06010517
    f110:	3c080f03 	stccc	15, cr0, [r8], {3}
    f114:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    f118:	02050001 	andeq	r0, r5, #1
    f11c:	08002fe8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl, fp, sp}
    f120:	0106c403 	tsteq	r6, r3, lsl #8
    f124:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    f128:	0a030601 	beq	d0934 <_Min_Heap_Size+0xd0134>
    f12c:	0101009e 	swpeq	r0, lr, [r1]
    f130:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    f134:	002ffc02 	eoreq	pc, pc, r2, lsl #24
    f138:	01cc0308 	biceq	r0, ip, r8, lsl #6
    f13c:	18050501 	stmdane	r5, {r0, r8, sl}
    f140:	06130514 			; <UNDEFINED> instruction: 0x06130514
    f144:	06050501 	streq	r0, [r5], -r1, lsl #10
    f148:	3005134b 	andcc	r1, r5, fp, asr #6
    f14c:	13050106 	movwne	r0, #20742	; 0x5106
    f150:	0605052e 	streq	r0, [r5], -lr, lsr #10
    f154:	1505132f 	strne	r1, [r5, #-815]	; 0xfffffcd1
    f158:	13050106 	movwne	r0, #20742	; 0x5106
    f15c:	06050520 	streq	r0, [r5], -r0, lsr #10
    f160:	13051331 	movwne	r1, #21297	; 0x5331
    f164:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    f168:	05133206 	ldreq	r3, [r3, #-518]	; 0xfffffdfa
    f16c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    f170:	144c0605 	strbne	r0, [ip], #-1541	; 0xfffff9fb
    f174:	13060105 	movwne	r0, #24837	; 0x6105
    f178:	00040220 	andeq	r0, r4, r0, lsr #4
    f17c:	01050101 	tsteq	r5, r1, lsl #2
    f180:	30020500 	andcc	r0, r2, r0, lsl #10
    f184:	03080030 	movweq	r0, #32816	; 0x8030
    f188:	05010284 	streq	r0, [r1, #-644]	; 0xfffffd7c
    f18c:	01051305 	tsteq	r5, r5, lsl #6
    f190:	080e0306 	stmdaeq	lr, {r1, r2, r8, r9}
    f194:	01010020 	tsteq	r1, r0, lsr #32
    f198:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    f19c:	00000002 	andeq	r0, r0, r2
    f1a0:	03d40300 	bicseq	r0, r4, #0, 6
    f1a4:	15300501 	ldrne	r0, [r0, #-1281]!	; 0xfffffaff
    f1a8:	13060105 	movwne	r0, #24837	; 0x6105
    f1ac:	01000102 	tsteq	r0, r2, lsl #2
    f1b0:	00010501 	andeq	r0, r1, r1, lsl #10
    f1b4:	30540205 	subscc	r0, r4, r5, lsl #4
    f1b8:	dc030800 	stcle	8, cr0, [r3], {-0}
    f1bc:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    f1c0:	05020413 	streq	r0, [r2, #-1043]	; 0xfffffbed
    f1c4:	7df7031e 	ldclvc	3, cr0, [r7, #120]!	; 0x78
    f1c8:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    f1cc:	03010414 	movweq	r0, #5140	; 0x1414
    f1d0:	05820286 	streq	r0, [r2, #646]	; 0x286
    f1d4:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    f1d8:	05510605 	ldrbeq	r0, [r1, #-1541]	; 0xfffff9fb
    f1dc:	0105144d 	tsteq	r5, sp, asr #8
    f1e0:	04021406 	streq	r1, [r2], #-1030	; 0xfffffbfa
    f1e4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    f1e8:	02050001 	andeq	r0, r5, #1
    f1ec:	08003074 	stmdaeq	r0, {r2, r4, r5, r6, ip, sp}
    f1f0:	0103ed03 	tsteq	r3, r3, lsl #26
    f1f4:	05132605 	ldreq	r2, [r3, #-1541]	; 0xfffff9fb
    f1f8:	16051305 	strne	r1, [r5], -r5, lsl #6
    f1fc:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    f200:	07054c06 	streq	r4, [r5, -r6, lsl #24]
    f204:	09050106 	stmdbeq	r5, {r1, r2, r8}
    f208:	02042206 	andeq	r2, r4, #1610612736	; 0x60000000
    f20c:	85031e05 	strhi	r1, [r3, #-3589]	; 0xfffff1fb
    f210:	0505017e 	streq	r0, [r5, #-382]	; 0xfffffe82
    f214:	042e0614 	strteq	r0, [lr], #-1556	; 0xfffff9ec
    f218:	03010501 	movweq	r0, #5377	; 0x1501
    f21c:	020101fb 	andeq	r0, r1, #-1073741762	; 0xc000003e
    f220:	01010003 	tsteq	r1, r3
    f224:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    f228:	00309002 	eorseq	r9, r0, r2
    f22c:	03f90308 	mvnseq	r0, #8, 6	; 0x20000000
    f230:	15050501 	strne	r0, [r5, #-1281]	; 0xfffffaff
    f234:	03060105 	movweq	r0, #24837	; 0x6105
    f238:	01320232 	teqeq	r2, r2, lsr r2
    f23c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    f240:	02050001 	andeq	r0, r5, #1
    f244:	080030f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, ip, sp}
    f248:	0104b203 	tsteq	r4, r3, lsl #4
    f24c:	04250505 	strteq	r0, [r5], #-1285	; 0xfffffafb
    f250:	031e0502 	tsteq	lr, #8388608	; 0x800000
    f254:	05017d9d 	streq	r7, [r1, #-3485]	; 0xfffff263
    f258:	04141405 	ldreq	r1, [r4], #-1029	; 0xfffffbfb
    f25c:	03150501 	tsteq	r5, #4194304	; 0x400000
    f260:	058202e0 	streq	r0, [r2, #736]	; 0x2e0
    f264:	0d051509 	cfstr32eq	mvfx1, [r5, #-36]	; 0xffffffdc
    f268:	0b050106 	bleq	14f688 <_Min_Heap_Size+0x14ee88>
    f26c:	0629052e 	strteq	r0, [r9], -lr, lsr #10
    f270:	160d0522 	strne	r0, [sp], -r2, lsr #10
    f274:	01062305 	tsteq	r6, r5, lsl #6
    f278:	6a061c05 	bvs	196294 <_Min_Heap_Size+0x195a94>
    f27c:	04150505 	ldreq	r0, [r5], #-1285	; 0xfffffafb
    f280:	031e0502 	tsteq	lr, #8388608	; 0x800000
    f284:	05017db0 	streq	r7, [r1, #-3504]	; 0xfffff250
    f288:	3c061405 	cfstrscc	mvf1, [r6], {5}
    f28c:	01050104 	tsteq	r5, r4, lsl #2
    f290:	0102cf03 	tsteq	r2, r3, lsl #30
    f294:	01000102 	tsteq	r0, r2, lsl #2
    f298:	00050501 	andeq	r0, r5, r1, lsl #10
    f29c:	31200205 			; <UNDEFINED> instruction: 0x31200205
    f2a0:	cf030800 	svcgt	0x00030800
    f2a4:	01060104 	tsteq	r6, r4, lsl #2
    f2a8:	21060905 	tstcs	r6, r5, lsl #18
    f2ac:	1f051513 	svcne	0x00051513
    f2b0:	0b050106 	bleq	14f6d0 <_Min_Heap_Size+0x14eed0>
    f2b4:	0609052e 	streq	r0, [r9], -lr, lsr #10
    f2b8:	322f2143 	eorcc	r2, pc, #-1073741808	; 0xc0000010
    f2bc:	01060d05 	tsteq	r6, r5, lsl #26
    f2c0:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
    f2c4:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    f2c8:	bf030605 	svclt	0x00030605
    f2cc:	0d052001 	stceq	0, cr2, [r5, #-4]
    f2d0:	7ec90306 	cdpvc	3, 12, cr0, cr9, cr6, {0}
    f2d4:	06270520 	strteq	r0, [r7], -r0, lsr #10
    f2d8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    f2dc:	06250551 			; <UNDEFINED> instruction: 0x06250551
    f2e0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    f2e4:	060f0522 	streq	r0, [pc], -r2, lsr #10
    f2e8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    f2ec:	06290522 	strteq	r0, [r9], -r2, lsr #10
    f2f0:	0d052001 	stceq	0, cr2, [r5, #-4]
    f2f4:	20090306 	andcs	r0, r9, r6, lsl #6
    f2f8:	01066705 	tsteq	r6, r5, lsl #14
    f2fc:	05205105 	streq	r5, [r0, #-261]!	; 0xfffffefb
    f300:	0d052e1b 	stceq	14, cr2, [r5, #-108]	; 0xffffff94
    f304:	13053006 	movwne	r3, #20486	; 0x5006
    f308:	0f050106 	svceq	0x00050106
    f30c:	0611054a 	ldreq	r0, [r1], -sl, asr #10
    f310:	0627053e 			; <UNDEFINED> instruction: 0x0627053e
    f314:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    f318:	061f0567 	ldreq	r0, [pc], -r7, ror #10
    f31c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    f320:	061f053f 			; <UNDEFINED> instruction: 0x061f053f
    f324:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    f328:	30061105 	andcc	r1, r6, r5, lsl #2
    f32c:	01061f05 	tsteq	r6, r5, lsl #30
    f330:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    f334:	01062705 	tsteq	r6, r5, lsl #14
    f338:	40060d05 	andmi	r0, r6, r5, lsl #26
    f33c:	01063005 	tsteq	r6, r5
    f340:	31060d05 	tstcc	r6, r5, lsl #26
    f344:	01062705 	tsteq	r6, r5, lsl #14
    f348:	51060d05 	tstpl	r6, r5, lsl #26
    f34c:	05133e05 	ldreq	r3, [r3, #-3589]	; 0xfffff1fb
    f350:	0f05140d 	svceq	0x0005140d
    f354:	11050106 	tstne	r5, r6, lsl #2
    f358:	212f2206 			; <UNDEFINED> instruction: 0x212f2206
    f35c:	05313d05 	ldreq	r3, [r1, #-3333]!	; 0xfffff2fb
    f360:	2f21170d 	svccs	0x0021170d
    f364:	032f2134 			; <UNDEFINED> instruction: 0x032f2134
    f368:	27052e09 	strcs	r2, [r5, -r9, lsl #28]
    f36c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    f370:	13054d06 	movwne	r4, #23814	; 0x5d06
    f374:	0f050106 	svceq	0x00050106
    f378:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    f37c:	4b05173e 	blmi	15507c <_Min_Heap_Size+0x15487c>
    f380:	5f050106 	svcpl	0x00050106
    f384:	3c5d052e 	cfldr64cc	mvdx0, [sp], {46}	; 0x2e
    f388:	05204b05 	streq	r4, [r0, #-2821]!	; 0xfffff4fb
    f38c:	11052027 	tstne	r5, r7, lsr #32
    f390:	2d052606 	stccs	6, cr2, [r5, #-24]	; 0xffffffe8
    f394:	13050106 	movwne	r0, #20742	; 0x5106
    f398:	004d052e 	subeq	r0, sp, lr, lsr #10
    f39c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    f3a0:	30061505 	andcc	r1, r6, r5, lsl #10
    f3a4:	01062b05 	tsteq	r6, r5, lsl #22
    f3a8:	23061105 	movwcs	r1, #24837	; 0x6105
    f3ac:	01062b05 	tsteq	r6, r5, lsl #22
    f3b0:	41061105 	tstmi	r6, r5, lsl #2
    f3b4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    f3b8:	012d0306 			; <UNDEFINED> instruction: 0x012d0306
    f3bc:	01063005 	tsteq	r6, r5
    f3c0:	4b060d05 	blmi	1927dc <_Min_Heap_Size+0x191fdc>
    f3c4:	01062705 	tsteq	r6, r5, lsl #14
    f3c8:	31061105 	tstcc	r6, r5, lsl #2
    f3cc:	01064505 	tsteq	r6, r5, lsl #10
    f3d0:	053c2b05 	ldreq	r2, [ip, #-2821]!	; 0xfffff4fb
    f3d4:	1503060d 	strne	r0, [r3, #-1549]	; 0xfffff9f3
    f3d8:	05053120 	streq	r3, [r5, #-288]	; 0xfffffee0
    f3dc:	11052206 	tstne	r5, r6, lsl #4
    f3e0:	7fbe0306 	svcvc	0x00be0306
    f3e4:	06290520 	strteq	r0, [r9], -r0, lsr #10
    f3e8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    f3ec:	053c1203 	ldreq	r1, [ip, #-515]!	; 0xfffffdfd
    f3f0:	05010644 	streq	r0, [r1, #-1604]	; 0xfffff9bc
    f3f4:	11054a2e 	tstne	r5, lr, lsr #20
    f3f8:	27052406 	strcs	r2, [r5, -r6, lsl #8]
    f3fc:	11050106 	tstne	r5, r6, lsl #2
    f400:	4f053206 	svcmi	0x00053206
    f404:	6b050106 	blvs	14f824 <_Min_Heap_Size+0x14f024>
    f408:	2b05202e 	blcs	1574c8 <_Min_Heap_Size+0x156cc8>
    f40c:	08022020 	stmdaeq	r2, {r5, sp}
    f410:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    f414:	02050001 	andeq	r0, r5, #1
    f418:	08003234 	stmdaeq	r0, {r2, r4, r5, r9, ip, sp}
    f41c:	0106ae03 	tsteq	r6, r3, lsl #28
    f420:	05160905 	ldreq	r0, [r6, #-2309]	; 0xfffff6fb
    f424:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    f428:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    f42c:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    f430:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    f434:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    f438:	05410605 	strbeq	r0, [r1, #-1541]	; 0xfffff9fb
    f43c:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    f440:	054b0605 	strbeq	r0, [fp, #-1541]	; 0xfffff9fb
    f444:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    f448:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    f44c:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    f450:	052f0605 	streq	r0, [pc, #-1541]!	; ee53 <_Min_Heap_Size+0xe653>
    f454:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    f458:	0c022f01 	stceq	15, cr2, [r2], {1}
    f45c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    f460:	02050001 	andeq	r0, r5, #1
    f464:	08003270 	stmdaeq	r0, {r4, r5, r6, r9, ip, sp}
    f468:	0102b203 	tsteq	r2, r3, lsl #4
    f46c:	13243705 			; <UNDEFINED> instruction: 0x13243705
    f470:	10030905 	andne	r0, r3, r5, lsl #18
    f474:	03510501 	cmpeq	r1, #4194304	; 0x400000
    f478:	5705010f 	strpl	r0, [r5, -pc, lsl #2]
    f47c:	03050513 	movweq	r0, #21779	; 0x5513
    f480:	050100da 	streq	r0, [r1, #-218]	; 0xffffff26
    f484:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    f488:	05830605 	streq	r0, [r3, #1541]	; 0x605
    f48c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    f490:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
    f494:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    f498:	31400605 	cmpcc	r0, r5, lsl #12
    f49c:	01061705 	tsteq	r6, r5, lsl #14
    f4a0:	31060505 	tstcc	r6, r5, lsl #10
    f4a4:	06140531 			; <UNDEFINED> instruction: 0x06140531
    f4a8:	06050501 	streq	r0, [r5], -r1, lsl #10
    f4ac:	312f3669 			; <UNDEFINED> instruction: 0x312f3669
    f4b0:	13060105 	movwne	r0, #24837	; 0x6105
    f4b4:	01000402 	tsteq	r0, r2, lsl #8
    f4b8:	00019601 	andeq	r9, r1, r1, lsl #12
    f4bc:	2e000300 	cdpcs	3, 0, cr0, cr0, cr0, {0}
    f4c0:	02000001 	andeq	r0, r0, #1
    f4c4:	0d0efb01 	vstreq	d15, [lr, #-4]
    f4c8:	01010100 	mrseq	r0, (UNDEF: 17)
    f4cc:	00000001 	andeq	r0, r0, r1
    f4d0:	01000001 	tsteq	r0, r1
    f4d4:	70612f2e 	rsbvc	r2, r1, lr, lsr #30
    f4d8:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    f4dc:	6f697461 	svcvs	0x00697461
    f4e0:	6f2f006e 	svcvs	0x002f006e
    f4e4:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
    f4e8:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    f4ec:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    f4f0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    f4f4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    f4f8:	2e30312d 	rsfcssp	f3, f0, #5.0
    f4fc:	30322d33 	eorscc	r2, r2, r3, lsr sp
    f500:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    f504:	696c2f30 	stmdbvs	ip!, {r4, r5, r8, r9, sl, fp, sp}^
    f508:	63672f62 	cmnvs	r7, #392	; 0x188
    f50c:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
    f510:	6f6e2d6d 	svcvs	0x006e2d6d
    f514:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    f518:	2f696261 	svccs	0x00696261
    f51c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    f520:	692f312e 	stmdbvs	pc!, {r1, r2, r3, r5, r8, ip, sp}	; <UNPREDICTABLE>
    f524:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    f528:	2f006564 	svccs	0x00006564
    f52c:	2f74706f 	svccs	0x0074706f
    f530:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    f534:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    f538:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    f53c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    f540:	30312d69 	eorscc	r2, r1, r9, ror #26
    f544:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    f548:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    f54c:	612f3031 			; <UNDEFINED> instruction: 0x612f3031
    f550:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    f554:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    f558:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    f55c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    f560:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    f564:	63616d2f 	cmnvs	r1, #3008	; 0xbc0
    f568:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    f56c:	706f2f00 	rsbvc	r2, pc, r0, lsl #30
    f570:	63672f74 	cmnvs	r7, #116, 30	; 0x1d0
    f574:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    f578:	6f6e2d6d 	svcvs	0x006e2d6d
    f57c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    f580:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    f584:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    f588:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    f58c:	30312e31 	eorscc	r2, r1, r1, lsr lr
    f590:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
    f594:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    f598:	61652d65 	cmnvs	r5, r5, ror #26
    f59c:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
    f5a0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    f5a4:	732f6564 			; <UNDEFINED> instruction: 0x732f6564
    f5a8:	00007379 	andeq	r7, r0, r9, ror r3
    f5ac:	6d737973 			; <UNDEFINED> instruction: 0x6d737973
    f5b0:	632e6d65 			; <UNDEFINED> instruction: 0x632e6d65
    f5b4:	00000100 	andeq	r0, r0, r0, lsl #2
    f5b8:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    f5bc:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    f5c0:	00000200 	andeq	r0, r0, r0, lsl #4
    f5c4:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    f5c8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    f5cc:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    f5d0:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    f5d4:	00000300 	andeq	r0, r0, r0, lsl #6
    f5d8:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    f5dc:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    f5e0:	00040068 	andeq	r0, r4, r8, rrx
    f5e4:	72726500 	rsbsvc	r6, r2, #0, 10
    f5e8:	682e6f6e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    f5ec:	00000400 	andeq	r0, r0, r0, lsl #8
    f5f0:	00010500 	andeq	r0, r1, r0, lsl #10
    f5f4:	32c00205 	sbccc	r0, r0, #1342177280	; 0x50000000
    f5f8:	35030800 	strcc	r0, [r3, #-2048]	; 0xfffff800
    f5fc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    f600:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    f604:	12051313 	andne	r1, r5, #1275068416	; 0x4c000000
    f608:	03050106 	movweq	r0, #20742	; 0x5106
    f60c:	15132f06 	ldrne	r2, [r3, #-3846]	; 0xfffff0fa
    f610:	01060c05 	tsteq	r6, r5, lsl #24
    f614:	20060520 	andcs	r0, r6, r0, lsr #10
    f618:	26060305 	strcs	r0, [r6], -r5, lsl #6
    f61c:	01061705 	tsteq	r6, r5, lsl #14
    f620:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    f624:	13420603 	movtne	r0, #9731	; 0x2603
    f628:	01061305 	tsteq	r6, r5, lsl #6
    f62c:	30060305 	andcc	r0, r6, r5, lsl #6
    f630:	13060105 	movwne	r0, #24837	; 0x6105
    f634:	03060505 	movweq	r0, #25861	; 0x6505
    f638:	15052072 	strne	r2, [r5, #-114]	; 0xffffff8e
    f63c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    f640:	0b055006 	bleq	163660 <_Min_Heap_Size+0x162e60>
    f644:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    f648:	0c052f06 	stceq	15, cr2, [r5], {6}
    f64c:	0c020106 	stfeqs	f0, [r2], {6}
    f650:	e5010100 	str	r0, [r1, #-256]	; 0xffffff00
    f654:	03000003 	movweq	r0, #3
    f658:	00011700 	andeq	r1, r1, r0, lsl #14
    f65c:	fb010200 	blx	4fe66 <_Min_Heap_Size+0x4f666>
    f660:	01000d0e 	tsteq	r0, lr, lsl #26
    f664:	00010101 	andeq	r0, r1, r1, lsl #2
    f668:	00010000 	andeq	r0, r1, r0
    f66c:	2f2e0100 	svccs	0x002e0100
    f670:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
    f674:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    f678:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    f67c:	74706f2f 	ldrbtvc	r6, [r0], #-3887	; 0xfffff0d1
    f680:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    f684:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    f688:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    f68c:	61652d65 	cmnvs	r5, r5, ror #26
    f690:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    f694:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    f698:	31323032 	teqcc	r2, r2, lsr r0
    f69c:	2f30312e 	svccs	0x0030312e
    f6a0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    f6a4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    f6a8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    f6ac:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
    f6b0:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    f6b4:	616d2f65 	cmnvs	sp, r5, ror #30
    f6b8:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
    f6bc:	6f2f0065 	svcvs	0x002f0065
    f6c0:	672f7470 			; <UNDEFINED> instruction: 0x672f7470
    f6c4:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    f6c8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    f6cc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    f6d0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    f6d4:	2e30312d 	rsfcssp	f3, f0, #5.0
    f6d8:	30322d33 	eorscc	r2, r2, r3, lsr sp
    f6dc:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    f6e0:	72612f30 	rsbvc	r2, r1, #48, 30	; 0xc0
    f6e4:	6f6e2d6d 	svcvs	0x006e2d6d
    f6e8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    f6ec:	2f696261 	svccs	0x00696261
    f6f0:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    f6f4:	2f656475 	svccs	0x00656475
    f6f8:	00737973 	rsbseq	r7, r3, r3, ror r9
    f6fc:	73797300 	cmnvc	r9, #0, 6
    f700:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
    f704:	00632e73 	rsbeq	r2, r3, r3, ror lr
    f708:	5f000001 	svcpl	0x00000001
    f70c:	61666564 	cmnvs	r6, r4, ror #10
    f710:	5f746c75 	svcpl	0x00746c75
    f714:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    f718:	00682e73 	rsbeq	r2, r8, r3, ror lr
    f71c:	5f000002 	svcpl	0x00000002
    f720:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    f724:	00682e73 	rsbeq	r2, r8, r3, ror lr
    f728:	5f000003 	svcpl	0x00000003
    f72c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    f730:	2e6c6176 	mcrcs	1, 3, r6, cr12, cr6, {3}
    f734:	00030068 	andeq	r0, r3, r8, rrx
    f738:	69745f00 	ldmdbvs	r4!, {r8, r9, sl, fp, ip, lr}^
    f73c:	7073656d 	rsbsvc	r6, r3, sp, ror #10
    f740:	682e6365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, sp, lr}
    f744:	00000300 	andeq	r0, r0, r0, lsl #6
    f748:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    f74c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    f750:	73000003 	movwvc	r0, #3
    f754:	2e746174 	mrccs	1, 3, r6, cr4, cr4, {3}
    f758:	00030068 	andeq	r0, r3, r8, rrx
    f75c:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    f760:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    f764:	00000300 	andeq	r0, r0, r0, lsl #6
    f768:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
    f76c:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    f770:	00000003 	andeq	r0, r0, r3
    f774:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    f778:	00000002 	andeq	r0, r0, r2
    f77c:	012c0300 			; <UNDEFINED> instruction: 0x012c0300
    f780:	00010213 	andeq	r0, r1, r3, lsl r2
    f784:	01050101 	tsteq	r5, r1, lsl #2
    f788:	00020500 	andeq	r0, r2, r0, lsl #10
    f78c:	03000000 	movweq	r0, #0
    f790:	03050130 	movweq	r0, #20784	; 0x5130
    f794:	06010513 			; <UNDEFINED> instruction: 0x06010513
    f798:	00020213 	andeq	r0, r2, r3, lsl r2
    f79c:	01050101 	tsteq	r5, r1, lsl #2
    f7a0:	00020500 	andeq	r0, r2, r0, lsl #10
    f7a4:	03000000 	movweq	r0, #0
    f7a8:	01060135 	tsteq	r6, r5, lsr r1
    f7ac:	21060305 	tstcs	r6, r5, lsl #6
    f7b0:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
    f7b4:	03052e06 	movweq	r2, #24070	; 0x5e06
    f7b8:	01052f06 	tsteq	r5, r6, lsl #30
    f7bc:	03021306 	movweq	r1, #8966	; 0x2306
    f7c0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    f7c4:	02050001 	andeq	r0, r5, #1
    f7c8:	00000000 	andeq	r0, r0, r0
    f7cc:	06013d03 	streq	r3, [r1], -r3, lsl #26
    f7d0:	06030501 	streq	r0, [r3], -r1, lsl #10
    f7d4:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    f7d8:	0e054b01 	vmlaeq.f64	d4, d5, d1
    f7dc:	01040200 	mrseq	r0, R12_usr
    f7e0:	00090501 	andeq	r0, r9, r1, lsl #10
    f7e4:	01010402 	tsteq	r1, r2, lsl #8
    f7e8:	01000102 	tsteq	r0, r2, lsl #2
    f7ec:	00010501 	andeq	r0, r1, r1, lsl #10
    f7f0:	33080205 	movwcc	r0, #33285	; 0x8205
    f7f4:	c3030800 	movwgt	r0, #14336	; 0x3800
    f7f8:	01060100 	mrseq	r0, (UNDEF: 22)
    f7fc:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    f800:	10051413 	andne	r1, r5, r3, lsl r4
    f804:	03050106 	movweq	r0, #20742	; 0x5106
    f808:	00050520 	andeq	r0, r5, r0, lsr #10
    f80c:	06030402 	streq	r0, [r3], -r2, lsl #8
    f810:	000e0522 	andeq	r0, lr, r2, lsr #10
    f814:	06030402 	streq	r0, [r3], -r2, lsl #8
    f818:	00090501 	andeq	r0, r9, r1, lsl #10
    f81c:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    f820:	02000c05 	andeq	r0, r0, #1280	; 0x500
    f824:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    f828:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    f82c:	052c0603 	streq	r0, [ip, #-1539]!	; 0xfffff9fd
    f830:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    f834:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    f838:	04020009 	streq	r0, [r2], #-9
    f83c:	15052203 	strne	r2, [r5, #-515]	; 0xfffffdfd
    f840:	01040200 	mrseq	r0, R12_usr
    f844:	03051e06 	movweq	r1, #24070	; 0x5e06
    f848:	01040200 	mrseq	r0, R12_usr
    f84c:	33060106 	movwcc	r0, #24838	; 0x6106
    f850:	13060105 	movwne	r0, #24837	; 0x6105
    f854:	0101002e 	tsteq	r1, lr, lsr #32
    f858:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    f85c:	00332802 	eorseq	r2, r3, r2, lsl #16
    f860:	00d00308 	sbcseq	r0, r0, r8, lsl #6
    f864:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    f868:	133d0603 	teqne	sp, #3145728	; 0x300000
    f86c:	06100514 			; <UNDEFINED> instruction: 0x06100514
    f870:	20030501 	andcs	r0, r3, r1, lsl #10
    f874:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    f878:	22060304 	andcs	r0, r6, #4, 6	; 0x10000000
    f87c:	03040200 	movweq	r0, #16896	; 0x4200
    f880:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    f884:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    f888:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    f88c:	052c0603 	streq	r0, [ip, #-1539]!	; 0xfffff9fd
    f890:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    f894:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    f898:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    f89c:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    f8a0:	04020003 	streq	r0, [r2], #-3
    f8a4:	06010601 	streq	r0, [r1], -r1, lsl #12
    f8a8:	06010532 			; <UNDEFINED> instruction: 0x06010532
    f8ac:	01002e13 	tsteq	r0, r3, lsl lr
    f8b0:	00010501 	andeq	r0, r1, r1, lsl #10
    f8b4:	33440205 	movtcc	r0, #16901	; 0x4205
    f8b8:	dc030800 	stcle	8, cr0, [r3], {-0}
    f8bc:	03050100 	movweq	r0, #20736	; 0x5100
    f8c0:	01051313 	tsteq	r5, r3, lsl r3
    f8c4:	022e1306 	eoreq	r1, lr, #402653184	; 0x18000000
    f8c8:	01010001 	tsteq	r1, r1
    f8cc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    f8d0:	00334a02 	eorseq	r4, r3, r2, lsl #20
    f8d4:	00e30308 	rsceq	r0, r3, r8, lsl #6
    f8d8:	13030501 	movwne	r0, #13569	; 0x3501
    f8dc:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
    f8e0:	06030501 	streq	r0, [r3], -r1, lsl #10
    f8e4:	0601053d 			; <UNDEFINED> instruction: 0x0601053d
    f8e8:	01022013 	tsteq	r2, r3, lsl r0
    f8ec:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    f8f0:	02050001 	andeq	r0, r5, #1
    f8f4:	08003354 	stmdaeq	r0, {r2, r4, r6, r8, r9, ip, sp}
    f8f8:	0100ea03 	tsteq	r0, r3, lsl #20
    f8fc:	13130305 	tstne	r3, #335544320	; 0x14000000
    f900:	13060105 	movwne	r0, #24837	; 0x6105
    f904:	00010220 	andeq	r0, r1, r0, lsr #4
    f908:	01050101 	tsteq	r5, r1, lsl #2
    f90c:	58020500 	stmdapl	r2, {r8, sl}
    f910:	03080033 	movweq	r0, #32819	; 0x8033
    f914:	050100f0 	streq	r0, [r1, #-240]	; 0xffffff10
    f918:	13131303 	tstne	r3, #201326592	; 0xc000000
    f91c:	06010513 			; <UNDEFINED> instruction: 0x06010513
    f920:	01022013 	tsteq	r2, r3, lsl r0
    f924:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    f928:	02050001 	andeq	r0, r5, #1
    f92c:	00000000 	andeq	r0, r0, r0
    f930:	0100f803 	tsteq	r0, r3, lsl #16	; <UNPREDICTABLE>
    f934:	03050106 	movweq	r0, #20742	; 0x5106
    f938:	14132106 	ldrne	r2, [r3], #-262	; 0xfffffefa
    f93c:	13060105 	movwne	r0, #24837	; 0x6105
    f940:	0002022e 	andeq	r0, r2, lr, lsr #4
    f944:	01050101 	tsteq	r5, r1, lsl #2
    f948:	00020500 	andeq	r0, r2, r0, lsl #10
    f94c:	03000000 	movweq	r0, #0
    f950:	06010180 	streq	r0, [r1], -r0, lsl #3
    f954:	06030501 	streq	r0, [r3], -r1, lsl #10
    f958:	09051321 	stmdbeq	r5, {r0, r5, r8, r9, ip}
    f95c:	03052e06 	movweq	r2, #24070	; 0x5e06
    f960:	01052f06 	tsteq	r5, r6, lsl #30
    f964:	03021306 	movweq	r1, #8966	; 0x2306
    f968:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    f96c:	02050001 	andeq	r0, r5, #1
    f970:	00000000 	andeq	r0, r0, r0
    f974:	01018703 	tsteq	r1, r3, lsl #14
    f978:	03050106 	movweq	r0, #20742	; 0x5106
    f97c:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
    f980:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
    f984:	052f0603 	streq	r0, [pc, #-1539]!	; f389 <_Min_Heap_Size+0xeb89>
    f988:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    f98c:	01010003 	tsteq	r1, r3
    f990:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    f994:	00000002 	andeq	r0, r0, r2
    f998:	018e0300 	orreq	r0, lr, r0, lsl #6
    f99c:	13030501 	movwne	r0, #13569	; 0x3501
    f9a0:	06010513 			; <UNDEFINED> instruction: 0x06010513
    f9a4:	01022e13 	tsteq	r2, r3, lsl lr
    f9a8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    f9ac:	02050001 	andeq	r0, r5, #1
    f9b0:	00000000 	andeq	r0, r0, r0
    f9b4:	01019403 	tsteq	r1, r3, lsl #8
    f9b8:	13130305 	tstne	r3, #335544320	; 0x14000000
    f9bc:	01060f05 	tsteq	r6, r5, lsl #30
    f9c0:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    f9c4:	13060105 	movwne	r0, #24837	; 0x6105
    f9c8:	00010220 	andeq	r0, r1, r0, lsr #4
    f9cc:	01050101 	tsteq	r5, r1, lsl #2
    f9d0:	00020500 	andeq	r0, r2, r0, lsl #10
    f9d4:	03000000 	movweq	r0, #0
    f9d8:	0601019b 			; <UNDEFINED> instruction: 0x0601019b
    f9dc:	06030501 	streq	r0, [r3], -r1, lsl #10
    f9e0:	05131321 	ldreq	r1, [r3, #-801]	; 0xfffffcdf
    f9e4:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
    f9e8:	052f0603 	streq	r0, [pc, #-1539]!	; f3ed <_Min_Heap_Size+0xebed>
    f9ec:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    f9f0:	01010003 	tsteq	r1, r3
    f9f4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    f9f8:	00000002 	andeq	r0, r0, r2
    f9fc:	01a30300 			; <UNDEFINED> instruction: 0x01a30300
    fa00:	21030501 	tstcs	r3, r1, lsl #10
    fa04:	2e060905 	vmlacs.f16	s0, s12, s10	; <UNPREDICTABLE>
    fa08:	2f060305 	svccs	0x00060305
    fa0c:	13060105 	movwne	r0, #24837	; 0x6105
    fa10:	01000302 	tsteq	r0, r2, lsl #6
    fa14:	00010501 	andeq	r0, r1, r1, lsl #10
    fa18:	00000205 	andeq	r0, r0, r5, lsl #4
    fa1c:	a9030000 	stmdbge	r3, {}	; <UNPREDICTABLE>
    fa20:	01060101 	tsteq	r6, r1, lsl #2
    fa24:	21060305 	tstcs	r6, r5, lsl #6
    fa28:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    fa2c:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
    fa30:	052f0603 	streq	r0, [pc, #-1539]!	; f435 <_Min_Heap_Size+0xec35>
    fa34:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    fa38:	01010003 	tsteq	r1, r3
    fa3c:	00000080 	andeq	r0, r0, r0, lsl #1
    fa40:	003a0003 	eorseq	r0, sl, r3
    fa44:	01020000 	mrseq	r0, (UNDEF: 2)
    fa48:	000d0efb 	strdeq	r0, [sp], -fp
    fa4c:	01010101 	tsteq	r1, r1, lsl #2
    fa50:	01000000 	mrseq	r0, (UNDEF: 0)
    fa54:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    fa58:	6174732f 	cmnvs	r4, pc, lsr #6
    fa5c:	70757472 	rsbsvc	r7, r5, r2, ror r4
    fa60:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    fa64:	74730000 	ldrbtvc	r0, [r3], #-0
    fa68:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    fa6c:	74735f70 	ldrbtvc	r5, [r3], #-3952	; 0xfffff090
    fa70:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    fa74:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    fa78:	00732e78 	rsbseq	r2, r3, r8, ror lr
    fa7c:	00000001 	andeq	r0, r0, r1
    fa80:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
    fa84:	03080033 	movweq	r0, #32819	; 0x8033
    fa88:	3131013c 	teqcc	r1, ip, lsr r1
    fa8c:	21212121 			; <UNDEFINED> instruction: 0x21212121
    fa90:	23212123 			; <UNDEFINED> instruction: 0x23212123
    fa94:	21232121 			; <UNDEFINED> instruction: 0x21232121
    fa98:	21232121 			; <UNDEFINED> instruction: 0x21232121
    fa9c:	30232123 	eorcc	r2, r3, r3, lsr #2
    faa0:	2058032f 	subscs	r0, r8, pc, lsr #6
    faa4:	032f2f34 			; <UNDEFINED> instruction: 0x032f2f34
    faa8:	022f2e0f 	eoreq	r2, pc, #15, 28	; 0xf0
    faac:	01010002 	tsteq	r1, r2
    fab0:	ac020500 	cfstr32ge	mvfx0, [r2], {-0}
    fab4:	03080033 	movweq	r0, #32819	; 0x8033
    fab8:	020100f1 	andeq	r0, r1, #241	; 0xf1
    fabc:	01010001 	tsteq	r1, r1
    fac0:	0000007e 	andeq	r0, r0, lr, ror r0
    fac4:	004d0003 	subeq	r0, sp, r3
    fac8:	01020000 	mrseq	r0, (UNDEF: 2)
    facc:	000d0efb 	strdeq	r0, [sp], -fp
    fad0:	01010101 	tsteq	r1, r1, lsl #2
    fad4:	01000000 	mrseq	r0, (UNDEF: 0)
    fad8:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    fadc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    fae0:	2f2e2e2f 	svccs	0x002e2e2f
    fae4:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    fae8:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    faec:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    faf0:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    faf4:	2f706d75 	svccs	0x00706d75
    faf8:	2f757063 	svccs	0x00757063
    fafc:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    fb00:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
    fb04:	66000034 			; <UNDEFINED> instruction: 0x66000034
    fb08:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    fb0c:	6363672d 	cmnvs	r3, #11796480	; 0xb40000
    fb10:	0100732e 	tsteq	r0, lr, lsr #6
    fb14:	00000000 	andeq	r0, r0, r0
    fb18:	01d00205 	bicseq	r0, r0, r5, lsl #4
    fb1c:	19030800 	stmdbne	r3, {fp}
    fb20:	21212101 			; <UNDEFINED> instruction: 0x21212101
    fb24:	222f2221 	eorcs	r2, pc, #268435458	; 0x10000002
    fb28:	2121212f 			; <UNDEFINED> instruction: 0x2121212f
    fb2c:	212f3023 			; <UNDEFINED> instruction: 0x212f3023
    fb30:	2121302f 			; <UNDEFINED> instruction: 0x2121302f
    fb34:	6603212f 	strvs	r2, [r3], -pc, lsr #2
    fb38:	1503302e 	strne	r3, [r3, #-46]	; 0xffffffd2
    fb3c:	0002022e 	andeq	r0, r2, lr, lsr #4
    fb40:	Address 0x000000000000fb40 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
       4:	4d006674 	stcmi	6, cr6, [r0, #-464]	; 0xfffffe30
  errno = ENOMEM;
       8:	53555f58 	cmppl	r5, #88, 30	; 0x160
}
       c:	31545241 	cmpcc	r4, r1, asr #4
      10:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
      14:	6e495f54 	mcrvs	15, 2, r5, cr9, cr4, {2}
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	41007469 	tstmi	r0, r9, ror #8
      1c:	4c314250 	lfmmi	f4, 4, [r1], #-320	; 0xfffffec0
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
      24:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
}
      28:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
      2c:	74535f54 	ldrbvc	r5, [r3], #-3924	; 0xfffff0ac
      30:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
    if (status != HAL_OK)
      34:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
      uwTickFreq = prevTickFreq;
      38:	67006665 	strvs	r6, [r0, -r5, ror #12]
      3c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
      40:	304d0065 	subcc	r0, sp, r5, rrx
      44:	74005241 	strvc	r5, [r0], #-577	; 0xfffffdbf
      48:	31747365 	cmncc	r4, r5, ror #6
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	414d4400 	cmpmi	sp, r0, lsl #8
            while( pxBlock != pxEnd )
      50:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
      54:	70795474 	rsbsvc	r5, r9, r4, ror r4
                if( pxBlock->xBlockSize > xMaxSize )
      58:	66654465 	strbtvs	r4, [r5], -r5, ror #8
      5c:	42504100 	subsmi	r4, r0, #0, 2
                if( pxBlock->xBlockSize < xMinSize )
      60:	4b4c4331 	blmi	1310d2c <_Min_Heap_Size+0x131052c>
                    xMinSize = pxBlock->xBlockSize;
      64:	69766944 	ldmdbvs	r6!, {r2, r6, r8, fp, sp, lr}^
      68:	00726564 	rsbseq	r6, r2, r4, ror #10
      6c:	6e69616d 	powvsez	f6, f1, #5.0
      70:	7361745f 	cmnvc	r1, #1593835520	; 0x5f000000
      74:	5f5f006b 	svcpl	0x005f006b
      78:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
      7c:	00745f38 	rsbseq	r5, r4, r8, lsr pc
      80:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
      84:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
      88:	695f706d 	ldmdbvs	pc, {r0, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
      8c:	0074696e 	rsbseq	r6, r4, lr, ror #18
      90:	534c4c50 	movtpl	r4, #52304	; 0xcc50
      94:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
      98:	4c4c5000 	marmi	acc0, r5, ip
      9c:	4c50004d 	mrrcmi	0, 4, r0, r0, cr13	; <UNPREDICTABLE>
      a0:	50004e4c 	andpl	r4, r0, ip, asr #28
      a4:	00504c4c 	subseq	r4, r0, ip, asr #24
      a8:	514c4c50 	cmppl	ip, r0, asr ip
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	625f5f00 	subsvs	r5, pc, #0, 30
      b0:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	6d5f6e69 	ldclvs	14, cr6, [pc, #-420]	; ffffff18 <_estack+0xdfff6578>
      huart->hdmarx->XferAbortCallback = NULL;
      b8:	65736d65 	ldrbvs	r6, [r3, #-3429]!	; 0xfffff29b
      bc:	6f6c0074 	svcvs	0x006c0074
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
      c4:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      c8:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
      d0:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      d4:	64646100 	strbtvs	r6, [r4], #-256	; 0xffffff00
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	41480072 	hvcmi	32770	; 0x8002
      dc:	41555f4c 	cmpmi	r5, ip, asr #30
      e0:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    if (huart->hdmarx != NULL)
      e4:	65764578 	ldrbvs	r4, [r6, #-1400]!	; 0xfffffa88
      if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
      e8:	7954746e 	ldmdbvc	r4, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
        huart->hdmarx->XferAbortCallback = NULL;
      ec:	79546570 	ldmdbvc	r4, {r4, r5, r6, r8, sl, sp, lr}^
      f0:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    huart->TxXferCount = 0x00U;
      f4:	61700066 	cmnvs	r0, r6, rrx
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    huart->gState  = HAL_UART_STATE_READY;
      fc:	73726574 	cmnvc	r2, #116, 10	; 0x1d000000
    huart->RxState = HAL_UART_STATE_READY;
     100:	45534c00 	ldrbmi	r4, [r3, #-3072]	; 0xfffff400
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
     104:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    HAL_UART_AbortCpltCallback(huart);
     108:	43520065 	cmpmi	r2, #101	; 0x65
     10c:	734f5f43 	movtvc	r5, #65347	; 0xff43
  uint32_t AbortCplt = 0x01U;
     110:	696e4963 	stmdbvs	lr!, {r0, r1, r5, r6, r8, fp, lr}^
  if (AbortCplt == 0x01U)
     114:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
}
     118:	00746375 	rsbseq	r6, r4, r5, ror r3
     11c:	49555043 	ldmdbmi	r5, {r0, r1, r6, ip, lr}^
     120:	41480044 	cmpmi	r8, r4, asr #32
     124:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
                    taskYIELD_WITHIN_API();
     128:	54535f41 	ldrbpl	r5, [r3], #-3905	; 0xfffff0bf
     12c:	5f455441 	svcpl	0x00455441
     130:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     134:	65740054 	ldrbvs	r0, [r4, #-84]!	; 0xffffffac
     138:	00347473 	eorseq	r7, r4, r3, ror r4
            prvUnlockQueue( pxQueue );
     13c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     140:	41480035 	cmpmi	r8, r5, lsr r0
            ( void ) xTaskResumeAll();
     144:	41555f4c 	cmpmi	r5, ip, asr #30
            return errQUEUE_FULL;
     148:	545f5452 	ldrbpl	r5, [pc], #-1106	; 150 <_Min_Heap_Size-0x6b0>
     14c:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
     150:	0074696d 	rsbseq	r6, r4, sp, ror #18
     154:	31424841 	cmpcc	r2, r1, asr #16
     158:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     15c:	764f0052 			; <UNDEFINED> instruction: 0x764f0052
     160:	61537265 	cmpvs	r3, r5, ror #4
     164:	696c706d 	stmdbvs	ip!, {r0, r2, r3, r5, r6, ip, sp, lr}^
     168:	5400676e 	strpl	r6, [r0], #-1902	; 0xfffff892
     16c:	65665878 	strbvs	r5, [r6, #-2168]!	; 0xfffff788
     170:	756f4372 	strbvc	r4, [pc, #-882]!	; fffffe06 <_estack+0xdfff6466>
     174:	4900746e 	stmdbmi	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     178:	00524153 	subseq	r4, r2, r3, asr r1
     17c:	5f434352 	svcpl	0x00434352
     180:	4963734f 	stmdbmi	r3!, {r0, r1, r2, r3, r6, r8, r9, ip, sp, lr}^
}
     184:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     18c:	41006665 	tstmi	r0, r5, ror #12
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	52314248 	eorspl	r4, r1, #72, 4	; 0x80000004
     194:	00525453 	subseq	r5, r2, r3, asr r4
     198:	5f4c4148 	svcpl	0x004c4148
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     1a0:	4154535f 	cmpmi	r4, pc, asr r3
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	425f4554 	subsmi	r4, pc, #84, 10	; 0x15000000
     1a8:	5f595355 	svcpl	0x00595355
     1ac:	525f5854 	subspl	r5, pc, #84, 16	; 0x540000
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	54470058 	strbpl	r0, [r7], #-88	; 0xffffffa8
     1b4:	42005250 	andmi	r5, r0, #80, 4
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	52647561 	rsbpl	r7, r4, #406847488	; 0x18400000
     1bc:	00657461 	rsbeq	r7, r5, r1, ror #8
     1c0:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	6c65446b 	cfstrdvs	mvd4, [r5], #-428	; 0xfffffe54
     1c8:	58007961 	stmdapl	r0, {r0, r5, r6, r8, fp, ip, sp, lr}
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	4d726566 	cfldr64mi	mvdx6, [r2, #-408]!	; 0xfffffe68
     1d0:	6c704331 	ldclvs	3, cr4, [r0], #-196	; 0xffffff3c
     1d4:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
     1dc:	5750006b 	ldrbpl	r0, [r0, -fp, rrx]
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	79545f52 	ldmdbvc	r4, {r1, r4, r6, r8, r9, sl, fp, ip, lr}^
     1e4:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     1e8:	6d740066 	ldclvs	0, cr0, [r4, #-408]!	; 0xfffffe68
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	67657270 			; <UNDEFINED> instruction: 0x67657270
     1f0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	636f4c5f 	cmnvs	pc, #24320	; 0x5f00
     1f8:	7079546b 	rsbsvc	r5, r9, fp, ror #8
     1fc:	66654465 	strbtvs	r4, [r5], -r5, ror #8
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	43435200 	movtmi	r5, #12800	; 0x3200
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     208:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     20c:	65665800 	strbvs	r5, [r6, #-2048]!	; 0xfffff800
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	6c614872 	stclvs	8, cr4, [r1], #-456	; 0xfffffe38
     214:	6c704366 	ldclvs	3, cr4, [r0], #-408	; 0xfffffe68
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
     21c:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	5470006b 	ldrbtpl	r0, [r0], #-107	; 0xffffff95
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	66754278 			; <UNDEFINED> instruction: 0x66754278
     228:	72745066 	rsbsvc	r5, r4, #102	; 0x66
  tmp = hdma->Instance->FCR;
     22c:	42504100 	subsmi	r4, r0, #0, 2
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	54535232 	ldrbpl	r5, [r3], #-562	; 0xfffffdce
  tmp |= hdma->Init.FIFOMode;
     234:	65500052 	ldrbvs	r0, [r0, #-82]	; 0xffffffae
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	68706972 	ldmdavs	r0!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    tmp |= hdma->Init.FIFOThreshold;
     23c:	00636e49 	rsbeq	r6, r3, r9, asr #28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	5349534c 	movtpl	r5, #37708	; 0x934c
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     248:	6d654d00 	stclvs	13, cr4, [r5, #-0]
  hdma->Instance->FCR = tmp;
     24c:	73727542 	cmnvc	r2, #276824064	; 0x10800000
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	61540074 	cmpvs	r4, r4, ror r0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	61486b73 	hvcvs	34483	; 0x86b3
     258:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	4800745f 	stmdami	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
  hdma->State = HAL_DMA_STATE_READY;
     260:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 268 <_Min_Heap_Size-0x598>
     264:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
  return HAL_OK;
     268:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     26c:	5252455f 	subspl	r4, r2, #398458880	; 0x17c00000
     270:	4800524f 	stmdami	r0, {r0, r1, r2, r3, r6, r9, ip, lr}
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	74534953 	ldrbvc	r4, [r3], #-2387	; 0xfffff6ad
     278:	00657461 	rsbeq	r7, r5, r1, ror #8
     27c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	6e755f74 	mrcvs	15, 3, r5, cr5, cr4, {3}
        hdma->State = HAL_DMA_STATE_READY;
     284:	67696c61 	strbvs	r6, [r9, -r1, ror #24]!
        return HAL_ERROR; 
     288:	72745f6e 	rsbsvc	r5, r4, #440	; 0x1b8
    return HAL_ERROR;
     28c:	65676769 	strbvs	r6, [r7, #-1897]!	; 0xfffff897
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	53480072 	movtpl	r0, #32882	; 0x8072
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	6c614349 	stclvs	3, cr4, [r1], #-292	; 0xfffffedc
     298:	61726269 	cmnvs	r2, r9, ror #4
      tickstart = HAL_GetTick();
     29c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
     2a4:	616d0065 	cmnvs	sp, r5, rrx
     2a8:	53006e69 	movwpl	r6, #3689	; 0xe69
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	42706f74 	rsbsmi	r6, r0, #116, 30	; 0x1d0
     2b0:	00737469 	rsbseq	r7, r3, r9, ror #8
     2b4:	434c4c50 	movtmi	r4, #52304	; 0xcc50
          return HAL_TIMEOUT;
     2b8:	00524746 	subseq	r4, r2, r6, asr #14
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     2c0:	61426d61 	cmpvs	r2, r1, ror #26
     2c4:	64416573 	strbvs	r6, [r1], #-1395	; 0xfffffa8d
    FlagStatus       pwrclkchanged = RESET;
     2c8:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	46420073 			; <UNDEFINED> instruction: 0x46420073
     2d0:	50005241 	andpl	r5, r0, r1, asr #4
     2d4:	6e657261 	cdpvs	2, 6, cr7, cr5, cr1, {3}
      tickstart = HAL_GetTick();
     2d8:	41480074 	hvcmi	32772	; 0x8004
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	41555f4c 	cmpmi	r5, ip, asr #30
     2e0:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     2e4:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	4145525f 	cmpmi	r5, pc, asr r2
     2ec:	5f005944 	svcpl	0x00005944
          return HAL_TIMEOUT;
     2f0:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	5f323374 	svcpl	0x00323374
     2f8:	54760074 	ldrbtpl	r0, [r6], #-116	; 0xffffff8c
     2fc:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
     300:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     304:	65686353 	strbvs	r6, [r8, #-851]!	; 0xfffffcad
     308:	656c7564 	strbvs	r7, [ip, #-1380]!	; 0xfffffa9c
     30c:	69440072 	stmdbvs	r4, {r1, r4, r5, r6}^
     310:	74636572 	strbtvc	r6, [r3], #-1394	; 0xfffffa8e
      tickstart = HAL_GetTick();
     314:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     318:	5f424353 	svcpl	0x00424353
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     320:	6d646800 	stclvs	8, cr6, [r4, #-0]
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	00787261 	rsbseq	r7, r8, r1, ror #4
     328:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     32c:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
     330:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
          return HAL_TIMEOUT;
     334:	43520074 	cmpmi	r2, #116	; 0x74
    if(pwrclkchanged == SET)
     338:	6c435f43 	mcrrvs	15, 4, r5, r3, cr3
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	696e496b 	stmdbvs	lr!, {r0, r1, r3, r5, r6, r8, fp, lr}^
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	72745374 	rsbsvc	r5, r4, #116, 6	; 0xd0000001
     344:	00746375 	rsbseq	r6, r4, r5, ror r3
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	53455348 	movtpl	r5, #21320	; 0x5348
     34c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
     350:	72615000 	rsbvc	r5, r1, #0
     354:	00797469 	rsbseq	r7, r9, r9, ror #8
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	5f4c4148 	svcpl	0x004c4148
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
     360:	0054554f 	subseq	r5, r4, pc, asr #10
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	72617568 	rsbvc	r7, r1, #104, 10	; 0x1a000000
     368:	53003174 	movwpl	r3, #372	; 0x174
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	61657274 	smcvs	22308	; 0x5724
     370:	646e496d 	strbtvs	r4, [lr], #-2413	; 0xfffff693
     374:	48007865 	stmdami	r0, {r0, r2, r5, r6, fp, ip, sp, lr}
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	4f5f4c41 	svcmi	0x005f4c41
     37c:	5456004b 	ldrbpl	r0, [r6], #-75	; 0xffffffb5
     380:	2e00524f 	cdpcs	2, 0, cr5, cr0, cr15, {2}
     384:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	6163696c 	cmnvs	r3, ip, ror #18
     38c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
        __HAL_RCC_PLL_DISABLE();
     390:	69616d2f 	stmdbvs	r1!, {r0, r1, r2, r3, r5, r8, sl, fp, sp, lr}^
     394:	00632e6e 	rsbeq	r2, r3, lr, ror #28
        tickstart = HAL_GetTick();
     398:	66587852 			; <UNDEFINED> instruction: 0x66587852
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	69537265 	ldmdbvs	r3, {r0, r2, r5, r6, r9, ip, sp, lr}^
     3a0:	5400657a 	strpl	r6, [r0], #-1402	; 0xfffffa86
     3a4:	65665878 	strbvs	r5, [r6, #-2168]!	; 0xfffff788
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	7a695372 	bvc	1a55178 <_Min_Heap_Size+0x1a54978>
     3ac:	4c500065 	mrrcmi	0, 6, r0, r0, cr5	; <UNPREDICTABLE>
            return HAL_TIMEOUT;
     3b0:	5332494c 	teqpl	r2, #76, 18	; 0x130000
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     3b8:	53434900 	movtpl	r4, #14592	; 0x3900
     3bc:	41480052 	qdaddmi	r0, r2, r8
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
     3c4:	54535f41 	ldrbpl	r5, [r3], #-3905	; 0xfffff0bf
     3c8:	5f455441 	svcpl	0x00455441
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	524f4241 	subpl	r4, pc, #268435460	; 0x10000004
     3d0:	49410054 	stmdbmi	r1, {r2, r4, r6}^
     3d4:	00524352 	subseq	r4, r2, r2, asr r3
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	52534644 	subspl	r4, r3, #68, 12	; 0x4400000
     3dc:	72724500 	rsbsvc	r4, r2, #0, 10
     3e0:	6f43726f 	svcvs	0x0043726f
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	4f006564 	svcmi	0x00006564
     3e8:	6c696373 	stclvs	3, cr6, [r9], #-460	; 0xfffffe34
     3ec:	6f74616c 	svcvs	0x0074616c
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	70795472 	rsbsvc	r5, r9, r2, ror r4
     3f4:	4d4d0065 	stclmi	0, cr0, [sp, #-404]	; 0xfffffe6c
     3f8:	00524146 	subseq	r4, r2, r6, asr #2
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	446d654d 	strbtmi	r6, [sp], #-1357	; 0xfffffab3
     400:	41617461 	cmnmi	r1, r1, ror #8
     404:	6e67696c 	vnmulvs.f16	s13, s14, s25	; <UNPREDICTABLE>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
     40c:	41535500 	cmpmi	r3, r0, lsl #10
     410:	545f5452 	ldrbpl	r5, [pc], #-1106	; 418 <_Min_Heap_Size-0x3e8>
     414:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     418:	41006665 	tstmi	r0, r5, ror #12
     41c:	4c324250 	lfmmi	f4, 4, [r2], #-320	; 0xfffffec0
     420:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     424:	464d4d00 	strbmi	r4, [sp], -r0, lsl #26
        __HAL_RCC_PLL_ENABLE();
     428:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
     42c:	2074726f 	rsbscs	r7, r4, pc, ror #4
        tickstart = HAL_GetTick();
     430:	00746e69 	rsbseq	r6, r4, r9, ror #28
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	75625f5f 	strbvc	r5, [r2, #-3935]!	; 0xfffff0a1
     438:	69746c69 	ldmdbvs	r4!, {r0, r3, r5, r6, sl, fp, sp, lr}^
     43c:	75705f6e 	ldrbvc	r5, [r0, #-3950]!	; 0xfffff092
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	41007374 	tstmi	r0, r4, ror r3
     444:	4c434248 	sfmmi	f4, 2, [r3], {72}	; 0x48
            return HAL_TIMEOUT;
     448:	7669444b 	strbtvc	r4, [r9], -fp, asr #8
  return HAL_OK;
     44c:	72656469 	rsbvc	r6, r5, #1761607680	; 0x69000000
        __HAL_RCC_PLL_DISABLE();
     450:	72724500 	rsbsvc	r4, r2, #0, 10
     454:	485f726f 	ldmdami	pc, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
        tickstart = HAL_GetTick();
     458:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	48007265 	stmdami	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
     460:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 468 <_Min_Heap_Size-0x398>
     464:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     46c:	4145525f 	cmpmi	r5, pc, asr r2
            return HAL_TIMEOUT;
     470:	48005944 	stmdami	r0, {r2, r6, r8, fp, ip, lr}
  return HAL_OK;
     474:	495f4c41 	ldmdbmi	pc, {r0, r6, sl, fp, lr}^	; <UNPREDICTABLE>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	0074696e 	rsbseq	r6, r4, lr, ror #18
        pll_config = RCC->PLLCFGR;
     47c:	5f4c4148 	svcpl	0x004c4148
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	5f414d44 	svcpl	0x00414d44
     484:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	55425f45 	strbpl	r5, [r2, #-3909]	; 0xfffff0bb
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	5f005953 	svcpl	0x00005953
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	5f6f695f 	svcpl	0x006f695f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	63747570 	cmnvs	r4, #112, 10	; 0x1c000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	00726168 	rsbseq	r6, r2, r8, ror #2
     49c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     4a0:	69645f74 	stmdbvs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	657a5f76 	ldrbvs	r5, [sl, #-3958]!	; 0xfffff08a
     4a8:	745f6f72 	ldrbvc	r6, [pc], #-3954	; 4b0 <_Min_Heap_Size-0x350>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	67676972 			; <UNDEFINED> instruction: 0x67676972
     4b0:	5f007265 	svcpl	0x00007265
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	61485f54 	cmpvs	r8, r4, asr pc
     4bc:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
  return HAL_OK;
     4c0:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
}
     4c4:	00666544 	rsbeq	r6, r6, r4, asr #10
        return HAL_ERROR;
     4c8:	6e69616d 	powvsez	f6, f1, #5.0
        return HAL_ERROR;
     4cc:	7361745f 	cmnvc	r1, #1593835520	; 0x5f000000
}
     4d0:	6e655f6b 	cdpvs	15, 6, cr5, cr5, cr11, {3}
        return HAL_ERROR;
     4d4:	00797274 	rsbseq	r7, r9, r4, ror r2
          return HAL_ERROR;
     4d8:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
     4dc:	61547800 	cmpvs	r4, r0, lsl #16
     4e0:	72436b73 	subvc	r6, r3, #117760	; 0x1cc00
     4e4:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     4e8:	6f682f00 	svcvs	0x00682f00
     4ec:	782f656d 	stmdavc	pc!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     4f0:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
     4f4:	2f65646f 	svccs	0x0065646f
     4f8:	756d6571 	strbvc	r6, [sp, #-1393]!	; 0xfffffa8f
     4fc:	6d69732d 	stclvs	3, cr7, [r9, #-180]!	; 0xffffff4c
     500:	74616c75 	strbtvc	r6, [r1], #-3189	; 0xfffff38b
     504:	622f726f 	eorvs	r7, pc, #-268435450	; 0xf0000006
     508:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
     50c:	74732f73 	ldrbtvc	r2, [r3], #-3955	; 0xfffff08d
     510:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     514:	72353034 	eorsvc	r3, r5, #52	; 0x34
     518:	72462f67 	subvc	r2, r6, #412	; 0x19c
     51c:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
     520:	4800534f 	stmdami	r0, {r0, r1, r2, r3, r6, r8, r9, ip, lr}
     524:	4c5f4c41 	mrrcmi	12, 4, r4, pc, cr1	; <UNPREDICTABLE>
     528:	454b434f 	strbmi	r4, [fp, #-847]	; 0xfffffcb1
     52c:	48410044 	stmdami	r1, {r2, r6}^
     530:	4e453342 	cdpmi	3, 4, cr3, cr5, cr2, {2}
     534:	6e490052 	mcrvs	0, 2, r0, cr9, cr2, {2}
     538:	6e617473 	mcrvs	4, 3, r7, cr1, cr3, {3}
     53c:	58006563 	stmdapl	r0, {r0, r1, r5, r6, r8, sl, sp, lr}
     540:	45726566 	ldrbmi	r6, [r2, #-1382]!	; 0xfffffa9a
     544:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
     548:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     54c:	6b636162 	blvs	18d8adc <_Min_Heap_Size+0x18d82dc>
     550:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     554:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     558:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     55c:	5f455441 	svcpl	0x00455441
     560:	59535542 	ldmdbpl	r3, {r1, r6, r8, sl, ip, lr}^
     564:	0058545f 	subseq	r5, r8, pc, asr r4
     568:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     56c:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     570:	63750052 	cmnvs	r5, #82	; 0x52
     574:	70616548 	rsbvc	r6, r1, r8, asr #10
     578:	6d646800 	stclvs	8, cr6, [r4, #-0]
     57c:	00787461 	rsbseq	r7, r8, r1, ror #8
     580:	5f434352 	svcpl	0x00434352
     584:	496b6c43 	stmdbmi	fp!, {r0, r1, r6, sl, fp, sp, lr}^
     588:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     58c:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     590:	41006665 	tstmi	r0, r5, ror #12
     594:	52314250 	eorspl	r4, r1, #80, 4
     598:	00525453 	subseq	r5, r2, r3, asr r4
     59c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     5a0:	50430032 	subpl	r0, r3, r2, lsr r0
     5a4:	00524341 	subseq	r4, r2, r1, asr #6
     5a8:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     5ac:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     5b0:	45520030 	ldrbmi	r0, [r2, #-48]	; 0xffffffd0
     5b4:	56524553 			; <UNDEFINED> instruction: 0x56524553
     5b8:	00314445 	eorseq	r4, r1, r5, asr #8
     5bc:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     5c0:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     5c4:	45520032 	ldrbmi	r0, [r2, #-50]	; 0xffffffce
     5c8:	56524553 			; <UNDEFINED> instruction: 0x56524553
     5cc:	00334445 	eorseq	r4, r3, r5, asr #8
     5d0:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     5d4:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     5d8:	45520034 	ldrbmi	r0, [r2, #-52]	; 0xffffffcc
     5dc:	56524553 			; <UNDEFINED> instruction: 0x56524553
     5e0:	00354445 	eorseq	r4, r5, r5, asr #8
     5e4:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     5e8:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     5ec:	66580036 			; <UNDEFINED> instruction: 0x66580036
     5f0:	314d7265 	cmpcc	sp, r5, ror #4
     5f4:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
     5f8:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
     5fc:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     600:	6b636162 	blvs	18d8b90 <_Min_Heap_Size+0x18d8390>
     604:	61684300 	cmnvs	r8, r0, lsl #6
     608:	6c656e6e 	stclvs	14, cr6, [r5], #-440	; 0xfffffe48
     60c:	736e7500 	cmnvc	lr, #0, 10
     610:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     614:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
     618:	53007261 	movwpl	r7, #609	; 0x261
     61c:	52534348 	subspl	r4, r3, #72, 6	; 0x20000001
     620:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
     624:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
     628:	2e303120 	rsfcssp	f3, f0, f0
     62c:	20312e33 	eorscs	r2, r1, r3, lsr lr
     630:	31323032 	teqcc	r2, r2, lsr r0
     634:	34323830 	ldrtcc	r3, [r2], #-2096	; 0xfffff7d0
     638:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
     63c:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
     640:	2d202965 			; <UNDEFINED> instruction: 0x2d202965
     644:	7570636d 	ldrbvc	r6, [r0, #-877]!	; 0xfffffc93
     648:	726f633d 	rsbvc	r6, pc, #-201326592	; 0xf4000000
     64c:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
     650:	2d20346d 	cfstrscs	mvf3, [r0, #-436]!	; 0xfffffe4c
     654:	7568746d 	strbvc	r7, [r8, #-1133]!	; 0xfffffb93
     658:	2d20626d 	sfmcs	f6, 4, [r0, #-436]!	; 0xfffffe4c
     65c:	7570666d 	ldrbvc	r6, [r0, #-1645]!	; 0xfffff993
     660:	7670663d 			; <UNDEFINED> instruction: 0x7670663d
     664:	70732d34 	rsbsvc	r2, r3, r4, lsr sp
     668:	3631642d 	ldrtcc	r6, [r1], -sp, lsr #8
     66c:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
     670:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
     674:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
     678:	7261683d 	rsbvc	r6, r1, #3997696	; 0x3d0000
     67c:	6d2d2064 	stcvs	0, cr2, [sp, #-400]!	; 0xfffffe70
     680:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
     684:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
     688:	2d653776 	stclcs	7, cr3, [r5, #-472]!	; 0xfffffe28
     68c:	70662b6d 	rsbvc	r2, r6, sp, ror #22
     690:	20672d20 	rsbcs	r2, r7, r0, lsr #26
     694:	7764672d 	strbvc	r6, [r4, -sp, lsr #14]!
     698:	2d667261 	sfmcs	f7, 2, [r6, #-388]!	; 0xfffffe7c
     69c:	4f2d2032 	svcmi	0x002d2032
     6a0:	662d2067 	strtvs	r2, [sp], -r7, rrx
     6a4:	61746164 	cmnvs	r4, r4, ror #2
     6a8:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
     6ac:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     6b0:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
     6b4:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
     6b8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     6bc:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
     6c0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     6c4:	41480073 	hvcmi	32771	; 0x8003
     6c8:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
     6cc:	74535f41 	ldrbvc	r5, [r3], #-3905	; 0xfffff0bf
     6d0:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
     6d4:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     6d8:	41006665 	tstmi	r0, r5, ror #12
     6dc:	4c334248 	lfmmi	f4, 4, [r3], #-288	; 0xfffffee0
     6e0:	524e4550 	subpl	r4, lr, #80, 10	; 0x14000000
     6e4:	4c4c5000 	marmi	acc0, r5, ip
     6e8:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
     6ec:	5f006563 	svcpl	0x00006563
     6f0:	6e75665f 	mrcvs	6, 3, r6, cr5, cr15, {2}
     6f4:	005f5f63 	subseq	r5, pc, r3, ror #30
     6f8:	5f4c4148 	svcpl	0x004c4148
     6fc:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     700:	4154535f 	cmpmi	r4, pc, asr r3
     704:	455f4554 	ldrbmi	r4, [pc, #-1364]	; 1b8 <_Min_Heap_Size-0x648>
     708:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
     70c:	42504100 	subsmi	r4, r0, #0, 2
     710:	524e4532 	subpl	r4, lr, #209715200	; 0xc800000
     714:	42484100 	submi	r4, r8, #0, 2
     718:	54535233 	ldrbpl	r5, [r3], #-563	; 0xfffffdcd
     71c:	5f5f0052 	svcpl	0x005f0052
     720:	5f414d44 	svcpl	0x00414d44
     724:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     728:	7954656c 	ldmdbvc	r4, {r2, r3, r5, r6, r8, sl, sp, lr}^
     72c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     730:	49460066 	stmdbmi	r6, {r1, r2, r5, r6}^
     734:	6f4d4f46 	svcvs	0x004d4f46
     738:	57006564 	strpl	r6, [r0, -r4, ror #10]
     73c:	4c64726f 	sfmmi	f7, 2, [r4], #-444	; 0xfffffe44
     740:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
     744:	41480068 	cmpmi	r8, r8, rrx
     748:	52455f4c 	subpl	r5, r5, #76, 30	; 0x130
     74c:	00524f52 	subseq	r4, r2, r2, asr pc
     750:	31425041 	cmpcc	r2, r1, asr #32
     754:	00524e45 	subseq	r4, r2, r5, asr #28
     758:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     75c:	756f6420 	strbvc	r6, [pc, #-1056]!	; 344 <_Min_Heap_Size-0x4bc>
     760:	00656c62 	rsbeq	r6, r5, r2, ror #24
     764:	4f464946 	svcmi	0x00464946
     768:	65726854 	ldrbvs	r6, [r2, #-2132]!	; 0xfffff7ac
     76c:	6c6f6873 	stclvs	8, cr6, [pc], #-460	; 5a8 <_Min_Heap_Size-0x258>
     770:	41480064 	cmpmi	r8, r4, rrx
     774:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
     778:	734f5f43 	movtvc	r5, #65347	; 0xff43
     77c:	6e6f4363 	cdpvs	3, 6, cr4, cr15, cr3, {3}
     780:	00676966 	rsbeq	r6, r7, r6, ror #18
     784:	5f4c4148 	svcpl	0x004c4148
     788:	616c6544 	cmnvs	ip, r4, asr #10
     78c:	5f5f0079 	svcpl	0x005f0079
     790:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     794:	745f3631 	ldrbvc	r3, [pc], #-1585	; 79c <_Min_Heap_Size-0x64>
     798:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     79c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     7a0:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     7a4:	5f455441 	svcpl	0x00455441
     7a8:	59535542 	ldmdbpl	r3, {r1, r6, r8, sl, ip, lr}^
     7ac:	0058525f 	subseq	r5, r8, pc, asr r2
     7b0:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     7b4:	52545352 	subspl	r5, r4, #1207959553	; 0x48000001
     7b8:	6d654d00 	stclvs	13, cr4, [r5, #-0]
     7bc:	00636e49 	rsbeq	r6, r3, r9, asr #28
     7c0:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
     7c4:	75426870 	strbvc	r6, [r2, #-2160]	; 0xfffff790
     7c8:	00747372 	rsbseq	r7, r4, r2, ror r3
     7cc:	32425041 	subcc	r5, r2, #65	; 0x41
     7d0:	444b4c43 	strbmi	r4, [fp], #-3139	; 0xfffff3bd
     7d4:	64697669 	strbtvs	r7, [r9], #-1641	; 0xfffff997
     7d8:	53007265 	movwpl	r7, #613	; 0x265
     7dc:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     7e0:	6f6c436d 	svcvs	0x006c436d
     7e4:	435f6b63 	cmpmi	pc, #101376	; 0x18c00
     7e8:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
     7ec:	444e0067 	strbmi	r0, [lr], #-103	; 0xffffff99
     7f0:	48005254 	stmdami	r0, {r2, r4, r6, r9, ip, lr}
     7f4:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; fffffbbb <_estack+0xdfff621b>
     7f8:	5f545241 	svcpl	0x00545241
     7fc:	54415453 	strbpl	r5, [r1], #-1107	; 0xfffffbad
     800:	45525f45 	ldrbmi	r5, [r2, #-3909]	; 0xfffff0bb
     804:	00544553 	subseq	r4, r4, r3, asr r5
     808:	52534641 	subspl	r4, r3, #68157440	; 0x4100000
     80c:	414d4400 	cmpmi	sp, r0, lsl #8
     810:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     814:	5f6d6165 	svcpl	0x006d6165
     818:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     81c:	00666544 	rsbeq	r6, r6, r4, asr #10
     820:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     824:	00524e45 	subseq	r4, r2, r5, asr #28
     828:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
     82c:	6e752074 	mrcvs	0, 3, r2, cr5, cr4, {3}
     830:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
     834:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
     838:	7400746e 	strvc	r7, [r0], #-1134	; 0xfffffb92
     83c:	30747365 	rsbscc	r7, r4, r5, ror #6
     840:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
     844:	61745f6e 	cmnvs	r4, lr, ror #30
     848:	695f6b73 	ldmdbvs	pc, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
     84c:	0074696e 	rsbseq	r6, r4, lr, ror #18
     850:	5241314d 	subpl	r3, r1, #1073741843	; 0x40000013
     854:	73657400 	cmnvc	r5, #0, 8
     858:	50003374 	andpl	r3, r0, r4, ror r3
     85c:	70697265 	rsbvc	r7, r9, r5, ror #4
     860:	74614468 	strbtvc	r4, [r1], #-1128	; 0xfffffb98
     864:	696c4161 	stmdbvs	ip!, {r0, r5, r6, r8, lr}^
     868:	656d6e67 	strbvs	r6, [sp, #-3687]!	; 0xfffff199
     86c:	5500746e 	strpl	r7, [r0, #-1134]	; 0xfffffb92
     870:	5f545241 	svcpl	0x00545241
     874:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     878:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     87c:	00666544 	rsbeq	r6, r6, r4, asr #10
     880:	47435353 	smlsldmi	r5, r3, r3, r3
     884:	41480052 	qdaddmi	r0, r2, r8
     888:	41555f4c 	cmpmi	r5, ip, asr #30
     88c:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
     890:	70795478 	rsbsvc	r5, r9, r8, ror r4
     894:	70795465 	rsbsvc	r5, r9, r5, ror #8
     898:	66654465 	strbtvs	r4, [r5], -r5, ror #8
     89c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     8a0:	4343525f 	movtmi	r5, #12895	; 0x325f
     8a4:	6f6c435f 	svcvs	0x006c435f
     8a8:	6f436b63 	svcvs	0x00436b63
     8ac:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
     8b0:	43444200 	movtmi	r4, #16896	; 0x4200
     8b4:	41480052 	qdaddmi	r0, r2, r8
     8b8:	41555f4c 	cmpmi	r5, ip, asr #30
     8bc:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
     8c0:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     8c4:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     8c8:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
     8cc:	46774800 	ldrbtmi	r4, [r7], -r0, lsl #16
     8d0:	43776f6c 	cmnmi	r7, #108, 30	; 0x1b0
     8d4:	48006c74 	stmdami	r0, {r2, r4, r5, r6, sl, fp, sp, lr}
     8d8:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 8e0 <_Min_Heap_Size+0xe0>
     8dc:	535f414d 	cmppl	pc, #1073741843	; 0x40000013
     8e0:	45544154 	ldrbmi	r4, [r4, #-340]	; 0xfffffeac
     8e4:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     8e8:	54554f45 	ldrbpl	r4, [r5], #-3909	; 0xfffff0bb
     8ec:	78527000 	ldmdavc	r2, {ip, sp, lr}^
     8f0:	66667542 	strbtvs	r7, [r6], -r2, asr #10
     8f4:	00727450 	rsbseq	r7, r2, r0, asr r4
     8f8:	5f434352 	svcpl	0x00434352
     8fc:	494c4c50 	stmdbmi	ip, {r4, r6, sl, fp, lr}^
     900:	5474696e 	ldrbtpl	r6, [r4], #-2414	; 0xfffff692
     904:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     908:	43006665 	movwmi	r6, #1637	; 0x665
     90c:	6b636f6c 	blvs	18dc6c4 <_Min_Heap_Size+0x18dbec4>
     910:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     914:	42484100 	submi	r4, r8, #0, 2
     918:	524e4531 	subpl	r4, lr, #205520896	; 0xc400000
     91c:	58785200 	ldmdapl	r8!, {r9, ip, lr}^
     920:	43726566 	cmnmi	r2, #427819008	; 0x19800000
     924:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     928:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     92c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     930:	54535f54 	ldrbpl	r5, [r3], #-3924	; 0xfffff0ac
     934:	5f455441 	svcpl	0x00455441
     938:	59535542 	ldmdbpl	r3, {r1, r6, r8, sl, ip, lr}^
     93c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     940:	4c4e555f 	cfstr64mi	mvdx5, [lr], {95}	; 0x5f
     944:	454b434f 	strbmi	r4, [fp, #-847]	; 0xfffffcb1
     948:	41480044 	cmpmi	r8, r4, asr #32
     94c:	55425f4c 	strbpl	r5, [r2, #-3916]	; 0xfffff0b4
     950:	52005953 	andpl	r5, r0, #1359872	; 0x14c000
     954:	61745378 	cmnvs	r4, r8, ror r3
     958:	48006574 	stmdami	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
     95c:	00525346 	subseq	r5, r2, r6, asr #6
     960:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
     964:	6f697470 	svcvs	0x00697470
     968:	7079546e 	rsbsvc	r5, r9, lr, ror #8
     96c:	66580065 	ldrbvs	r0, [r8], -r5, rrx
     970:	62417265 	subvs	r7, r1, #1342177286	; 0x50000006
     974:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
     978:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
     97c:	006b6361 	rsbeq	r6, fp, r1, ror #6
     980:	72656658 	rsbvc	r6, r5, #88, 12	; 0x5800000
     984:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
     988:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     98c:	6b636162 	blvs	18d8f1c <_Min_Heap_Size+0x18d871c>
     990:	5f584d00 	svcpl	0x00584d00
     994:	4f495047 	svcmi	0x00495047
     998:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     99c:	73740074 	cmnvc	r4, #116	; 0x74
     9a0:	7361546b 	cmnvc	r1, #1795162112	; 0x6b000000
     9a4:	6e6f436b 	cdpvs	3, 6, cr4, cr15, cr11, {3}
     9a8:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 7e0 <_Min_Heap_Size-0x20>
     9ac:	636f6c42 	cmnvs	pc, #16896	; 0x4200
     9b0:	5953006b 	ldmdbpl	r3, {r0, r1, r3, r5, r6}^
     9b4:	4b4c4353 	blmi	1311708 <_Min_Heap_Size+0x1310f08>
     9b8:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
     9bc:	4e006563 	cfsh32mi	mvfx6, mvfx0, #51
     9c0:	485f494d 	ldmdami	pc, {r0, r2, r3, r6, r8, fp, lr}^	; <UNPREDICTABLE>
     9c4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     9c8:	44007265 	strmi	r7, [r0], #-613	; 0xfffffd9b
     9cc:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
     9d0:	5f6e6f4d 	svcpl	0x006e6f4d
     9d4:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     9d8:	0072656c 	rsbseq	r6, r2, ip, ror #10
     9dc:	726f5078 	rsbvc	r5, pc, #120	; 0x78
     9e0:	73795374 	cmnvc	r9, #116, 6	; 0xd0000001
     9e4:	6b636954 	blvs	18daf3c <_Min_Heap_Size+0x18da73c>
     9e8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     9ec:	0072656c 	rsbseq	r6, r2, ip, ror #10
     9f0:	46737542 	ldrbtmi	r7, [r3], -r2, asr #10
     9f4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     9f8:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     9fc:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     a00:	41535500 	cmpmi	r3, r0, lsl #10
     a04:	5f315452 	svcpl	0x00315452
     a08:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     a0c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     a10:	55007265 	strpl	r7, [r0, #-613]	; 0xfffffd9b
     a14:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
     a18:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     a1c:	61485f74 	hvcvs	34292	; 0x85f4
     a20:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     a24:	50780072 	rsbspl	r0, r8, r2, ror r0
     a28:	5074726f 	rsbspl	r7, r4, pc, ror #4
     a2c:	53646e65 	cmnpl	r4, #1616	; 0x650
     a30:	6e614856 	mcrvs	8, 3, r4, cr1, cr6, {2}
     a34:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     a38:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
     a3c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
     a40:	52495f54 	subpl	r5, r9, #84, 30	; 0x150
     a44:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     a48:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     a4c:	6d654d00 	stclvs	13, cr4, [r5, #-0]
     a50:	616e614d 	cmnvs	lr, sp, asr #2
     a54:	485f6567 	ldmdami	pc, {r0, r1, r2, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
     a58:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     a5c:	6c007265 	sfmvs	f7, 4, [r0], {101}	; 0x65
     a60:	00656e69 	rsbeq	r6, r5, r9, ror #28
     a64:	70612f2e 	rsbvc	r2, r1, lr, lsr #30
     a68:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
     a6c:	6f697461 	svcvs	0x00697461
     a70:	74732f6e 	ldrbtvc	r2, [r3], #-3950	; 0xfffff092
     a74:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     a78:	5f787834 	svcpl	0x00787834
     a7c:	632e7469 			; <UNDEFINED> instruction: 0x632e7469
     a80:	6e655000 	cdpvs	0, 6, cr5, cr5, cr0, {0}
     a84:	5f565364 	svcpl	0x00565364
     a88:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     a8c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     a90:	5f4c4148 	svcpl	0x004c4148
     a94:	54636e49 	strbtpl	r6, [r3], #-3657	; 0xfffff1b7
     a98:	006b6369 	rsbeq	r6, fp, r9, ror #6
     a9c:	69645f5f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     aa0:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
     aa4:	72695f65 	rsbvc	r5, r9, #404	; 0x194
     aa8:	73610071 	cmnvc	r1, #113	; 0x71
     aac:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
     ab0:	6961665f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r9, sl, sp, lr}^
     ab4:	0064656c 	rsbeq	r6, r4, ip, ror #10
     ab8:	656c6966 	strbvs	r6, [ip, #-2406]!	; 0xfffff69a
     abc:	43565300 	cmpmi	r6, #0, 6
     ac0:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     ac4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     ac8:	61547800 	cmpvs	r4, r0, lsl #16
     acc:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
     ad0:	68635374 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, ip, lr}^
     ad4:	6c756465 	cfldrdvs	mvd6, [r5], #-404	; 0xfffffe6c
     ad8:	74537265 	ldrbvc	r7, [r3], #-613	; 0xfffffd9b
     adc:	00657461 	rsbeq	r7, r5, r1, ror #8
     ae0:	726f5076 	rsbvc	r5, pc, #118	; 0x76
     ae4:	43565374 	cmpmi	r6, #116, 6	; 0xd0000001
     ae8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     aec:	0072656c 	rsbseq	r6, r2, ip, ror #10
     af0:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     af4:	5f6b6369 	svcpl	0x006b6369
     af8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     afc:	0072656c 	rsbseq	r6, r2, ip, ror #10
     b00:	64726148 	ldrbtvs	r6, [r2], #-328	; 0xfffffeb8
     b04:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     b08:	61485f74 	hvcvs	34292	; 0x85f4
     b0c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     b10:	654c5f72 	strbvs	r5, [ip, #-3954]	; 0xfffff08e
     b14:	636e6567 	cmnvs	lr, #432013312	; 0x19c00000
     b18:	2e2e0079 	mcrcs	0, 1, r0, cr14, cr9, {3}
     b1c:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     b20:	72532f65 	subsvc	r2, r3, #404	; 0x194
     b24:	70672f63 	rsbvc	r2, r7, r3, ror #30
     b28:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
     b2c:	65705300 	ldrbvs	r5, [r0, #-768]!	; 0xfffffd00
     b30:	52006465 	andpl	r6, r0, #1694498816	; 0x65000000
     b34:	575f4354 			; <UNDEFINED> instruction: 0x575f4354
     b38:	5f50554b 	svcpl	0x0050554b
     b3c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     b40:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     b44:	495f3249 	ldmdbmi	pc, {r0, r3, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     b48:	006e5152 	rsbeq	r5, lr, r2, asr r1
     b4c:	31414d44 	cmpcc	r1, r4, asr #26
     b50:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     b54:	366d6165 	strbtcc	r6, [sp], -r5, ror #2
     b58:	5152495f 	cmppl	r2, pc, asr r9
     b5c:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     b60:	555f384d 	ldrbpl	r3, [pc, #-2125]	; 31b <_Min_Heap_Size-0x4e5>
     b64:	49545f50 	ldmdbmi	r4, {r4, r6, r8, r9, sl, fp, ip, lr}^
     b68:	5f33314d 	svcpl	0x0033314d
     b6c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     b70:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     b74:	6e495f4f 	cdpvs	15, 4, cr5, cr9, cr15, {2}
     b78:	74537469 	ldrbvc	r7, [r3], #-1129	; 0xfffffb97
     b7c:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
     b80:	414d4400 	cmpmi	sp, r0, lsl #8
     b84:	74535f32 	ldrbvc	r5, [r3], #-3890	; 0xfffff0ce
     b88:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     b8c:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     b90:	53006e51 	movwpl	r6, #3665	; 0xe51
     b94:	5f334950 	svcpl	0x00334950
     b98:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     b9c:	414c4600 	cmpmi	ip, r0, lsl #12
     ba0:	495f4853 	ldmdbmi	pc, {r0, r1, r4, r6, fp, lr}^	; <UNPREDICTABLE>
     ba4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ba8:	324d4954 	subcc	r4, sp, #84, 18	; 0x150000
     bac:	5152495f 	cmppl	r2, pc, asr r9
     bb0:	4143006e 	cmpmi	r3, lr, rrx
     bb4:	525f324e 	subspl	r3, pc, #-536870908	; 0xe0000004
     bb8:	495f3058 	ldmdbmi	pc, {r3, r4, r6, ip, sp}^	; <UNPREDICTABLE>
     bbc:	006e5152 	rsbeq	r5, lr, r2, asr r1
     bc0:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     bc4:	495f3654 	ldmdbmi	pc, {r2, r4, r6, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     bc8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     bcc:	5f4c4148 	svcpl	0x004c4148
     bd0:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     bd4:	70734d5f 	rsbsvc	r4, r3, pc, asr sp
     bd8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     bdc:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     be0:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     be4:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     be8:	5f384d49 	svcpl	0x00384d49
     bec:	5f4b5242 	svcpl	0x004b5242
     bf0:	314d4954 	cmpcc	sp, r4, asr r9
     bf4:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     bf8:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     bfc:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; ffffffc3 <_estack+0xdfff6623>
     c00:	5f545241 	svcpl	0x00545241
     c04:	4470734d 	ldrbtmi	r7, [r0], #-845	; 0xfffffcb3
     c08:	696e4965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, lr}^
     c0c:	4d440074 	stclmi	0, cr0, [r4, #-464]	; 0xfffffe30
     c10:	535f3241 	cmppl	pc, #268435460	; 0x10000004
     c14:	61657274 	smcvs	22308	; 0x5724
     c18:	495f356d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     c1c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     c20:	314d4954 	cmpcc	sp, r4, asr r9
     c24:	4752545f 			; <UNDEFINED> instruction: 0x4752545f
     c28:	4d4f435f 	stclmi	3, cr4, [pc, #-380]	; ab4 <_Min_Heap_Size+0x2b4>
     c2c:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     c30:	495f3131 	ldmdbmi	pc, {r0, r4, r5, r8, ip, sp}^	; <UNPREDICTABLE>
     c34:	006e5152 	rsbeq	r5, lr, r2, asr r1
     c38:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     c3c:	5f6b6369 	svcpl	0x006b6369
     c40:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c44:	41535500 	cmpmi	r3, r0, lsl #10
     c48:	5f335452 	svcpl	0x00335452
     c4c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     c50:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
     c54:	6e495f4f 	cdpvs	15, 4, cr5, cr9, cr15, {2}
     c58:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
     c5c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     c60:	4d440066 	stclmi	0, cr0, [r4, #-408]	; 0xfffffe68
     c64:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     c68:	61657274 	smcvs	22308	; 0x5724
     c6c:	495f326d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     c70:	006e5152 	rsbeq	r5, lr, r2, asr r1
     c74:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     c78:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     c7c:	346d6165 	strbtcc	r6, [sp], #-357	; 0xfffffe9b
     c80:	5152495f 	cmppl	r2, pc, asr r9
     c84:	4148006e 	cmpmi	r8, lr, rrx
     c88:	50475f4c 	subpl	r5, r7, ip, asr #30
     c8c:	445f4f49 	ldrbmi	r4, [pc], #-3913	; c94 <_Min_Heap_Size+0x494>
     c90:	696e4965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, lr}^
     c94:	32490074 	subcc	r0, r9, #116	; 0x74
     c98:	455f3143 	ldrbmi	r3, [pc, #-323]	; b5d <_Min_Heap_Size+0x35d>
     c9c:	52495f52 	subpl	r5, r9, #328	; 0x148
     ca0:	75006e51 	strvc	r6, [r0, #-3665]	; 0xfffff1af
     ca4:	48747261 	ldmdami	r4!, {r0, r5, r6, r9, ip, sp, lr}^
     ca8:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     cac:	41430065 	cmpmi	r3, r5, rrx
     cb0:	535f324e 	cmppl	pc, #-536870908	; 0xe0000004
     cb4:	495f4543 	ldmdbmi	pc, {r0, r1, r6, r8, sl, lr}^	; <UNPREDICTABLE>
     cb8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     cbc:	354d4954 	strbcc	r4, [sp, #-2388]	; 0xfffff6ac
     cc0:	5152495f 	cmppl	r2, pc, asr r9
     cc4:	7355006e 	cmpvc	r5, #110	; 0x6e
     cc8:	46656761 	strbtmi	r6, [r5], -r1, ror #14
     ccc:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     cd0:	5152495f 	cmppl	r2, pc, asr r9
     cd4:	4148006e 	cmpmi	r8, lr, rrx
     cd8:	50475f4c 	subpl	r5, r7, ip, asr #30
     cdc:	495f4f49 	ldmdbmi	pc, {r0, r3, r6, r8, r9, sl, fp, lr}^	; <UNPREDICTABLE>
     ce0:	0074696e 	rsbseq	r6, r4, lr, ror #18
     ce4:	314e4143 	cmpcc	lr, r3, asr #2
     ce8:	3058525f 	subscc	r5, r8, pc, asr r2
     cec:	5152495f 	cmppl	r2, pc, asr r9
     cf0:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     cf4:	495f344d 	ldmdbmi	pc, {r0, r2, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     cf8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     cfc:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     d00:	495f3254 	ldmdbmi	pc, {r2, r4, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     d04:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d08:	5f4c4148 	svcpl	0x004c4148
     d0c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     d10:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     d14:	32490074 	subcc	r0, r9, #116	; 0x74
     d18:	455f3143 	ldrbmi	r3, [pc, #-323]	; bdd <_Min_Heap_Size+0x3dd>
     d1c:	52495f56 	subpl	r5, r9, #344	; 0x158
     d20:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     d24:	5f314d49 	svcpl	0x00314d49
     d28:	495f4343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     d2c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d30:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     d34:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     d38:	43006e51 	movwmi	r6, #3665	; 0xe51
     d3c:	5f314e41 	svcpl	0x00314e41
     d40:	495f5854 	ldmdbmi	pc, {r2, r4, r6, fp, ip, lr}^	; <UNPREDICTABLE>
     d44:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d48:	31414d44 	cmpcc	r1, r4, asr #26
     d4c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     d50:	356d6165 	strbcc	r6, [sp, #-357]!	; 0xfffffe9b
     d54:	5152495f 	cmppl	r2, pc, asr r9
     d58:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     d5c:	545f384d 	ldrbpl	r3, [pc], #-2125	; d64 <_Min_Heap_Size+0x564>
     d60:	435f4752 	cmpmi	pc, #21495808	; 0x1480000
     d64:	545f4d4f 	ldrbpl	r4, [pc], #-3407	; d6c <_Min_Heap_Size+0x56c>
     d68:	34314d49 	ldrtcc	r4, [r1], #-3401	; 0xfffff2b7
     d6c:	5152495f 	cmppl	r2, pc, asr r9
     d70:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     d74:	535f3241 	cmppl	pc, #268435460	; 0x10000004
     d78:	61657274 	smcvs	22308	; 0x5724
     d7c:	495f376d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     d80:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d84:	5f47544f 	svcpl	0x0047544f
     d88:	495f5346 	ldmdbmi	pc, {r1, r2, r6, r8, r9, ip, lr}^	; <UNPREDICTABLE>
     d8c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     d90:	4d6e6f4e 	stclmi	15, cr6, [lr, #-312]!	; 0xfffffec8
     d94:	616b7361 	cmnvs	fp, r1, ror #6
     d98:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
     d9c:	495f746e 	ldmdbmi	pc, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     da0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     da4:	47445757 	smlsldmi	r5, r4, r7, r7
     da8:	5152495f 	cmppl	r2, pc, asr r9
     dac:	544f006e 	strbpl	r0, [pc], #-110	; db4 <_Min_Heap_Size+0x5b4>
     db0:	53485f47 	movtpl	r5, #36679	; 0x8f47
     db4:	554b575f 	strbpl	r5, [fp, #-1887]	; 0xfffff8a1
     db8:	52495f50 	subpl	r5, r9, #80, 30	; 0x140
     dbc:	4d006e51 	stcmi	14, cr6, [r0, #-324]	; 0xfffffebc
     dc0:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
     dc4:	6e614d79 	mcrvs	13, 3, r4, cr1, cr9, {3}
     dc8:	6d656761 	stclvs	7, cr6, [r5, #-388]!	; 0xfffffe7c
     dcc:	5f746e65 	svcpl	0x00746e65
     dd0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     dd4:	4d415400 	cfstrdmi	mvd5, [r1, #-0]
     dd8:	54535f50 	ldrbpl	r5, [r3], #-3920	; 0xfffff0b0
     ddc:	5f504d41 	svcpl	0x00504d41
     de0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     de4:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     de8:	43535f31 	cmpmi	r3, #49, 30	; 0xc4
     dec:	52495f45 	subpl	r5, r9, #276	; 0x114
     df0:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     df4:	5f32414d 	svcpl	0x0032414d
     df8:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     dfc:	5f306d61 	svcpl	0x00306d61
     e00:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e04:	4b434c00 	blmi	10d3e0c <_Min_Heap_Size+0x10d360c>
     e08:	32490052 	subcc	r0, r9, #82	; 0x52
     e0c:	455f3243 	ldrbmi	r3, [pc, #-579]	; bd1 <_Min_Heap_Size+0x3d1>
     e10:	52495f52 	subpl	r5, r9, #328	; 0x148
     e14:	4f006e51 	svcmi	0x00006e51
     e18:	45455053 	strbmi	r5, [r5, #-83]	; 0xffffffad
     e1c:	42005244 	andmi	r5, r0, #68, 4	; 0x40000004
     e20:	61467375 	hvcvs	26421	; 0x6735
     e24:	5f746c75 	svcpl	0x00746c75
     e28:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e2c:	52415500 	subpl	r5, r1, #0, 10
     e30:	495f3554 	ldmdbmi	pc, {r2, r4, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     e34:	006e5152 	rsbeq	r5, lr, r2, asr r1
     e38:	314d4954 	cmpcc	sp, r4, asr r9
     e3c:	4b52425f 	blmi	14917c0 <_Min_Heap_Size+0x1490fc0>
     e40:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     e44:	52495f39 	subpl	r5, r9, #57, 30	; 0xe4
     e48:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     e4c:	5f374d49 	svcpl	0x00374d49
     e50:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e54:	47544f00 	ldrbmi	r4, [r4, -r0, lsl #30]
     e58:	5f53485f 	svcpl	0x0053485f
     e5c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e60:	50555000 	subspl	r5, r5, r0
     e64:	53005244 	movwpl	r5, #580	; 0x244
     e68:	5f314950 	svcpl	0x00314950
     e6c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e70:	43565300 	cmpmi	r6, #0, 6
     e74:	5f6c6c61 	svcpl	0x006c6c61
     e78:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e7c:	55504600 	ldrbpl	r4, [r0, #-1536]	; 0xfffffa00
     e80:	5152495f 	cmppl	r2, pc, asr r9
     e84:	4155006e 	cmpmi	r5, lr, rrx
     e88:	5f345452 	svcpl	0x00345452
     e8c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     e90:	746c4100 	strbtvc	r4, [ip], #-256	; 0xffffff00
     e94:	616e7265 	cmnvs	lr, r5, ror #4
     e98:	4f006574 	svcmi	0x00006574
     e9c:	465f4754 			; <UNDEFINED> instruction: 0x465f4754
     ea0:	4b575f53 	blmi	15d8bf4 <_Min_Heap_Size+0x15d83f4>
     ea4:	495f5055 	ldmdbmi	pc, {r0, r2, r4, r6, ip, lr}^	; <UNPREDICTABLE>
     ea8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     eac:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     eb0:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     eb4:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     eb8:	5f364d49 	svcpl	0x00364d49
     ebc:	5f434144 	svcpl	0x00434144
     ec0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ec4:	43324900 	teqmi	r2, #0, 18
     ec8:	56455f32 			; <UNDEFINED> instruction: 0x56455f32
     ecc:	5152495f 	cmppl	r2, pc, asr r9
     ed0:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     ed4:	535f3141 	cmppl	pc, #1073741840	; 0x40000010
     ed8:	61657274 	smcvs	22308	; 0x5724
     edc:	495f316d 	ldmdbmi	pc, {r0, r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     ee0:	006e5152 	rsbeq	r5, lr, r2, asr r1
     ee4:	32414d44 	subcc	r4, r1, #68, 26	; 0x1100
     ee8:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     eec:	336d6165 	cmncc	sp, #1073741849	; 0x40000019
     ef0:	5152495f 	cmppl	r2, pc, asr r9
     ef4:	4143006e 	cmpmi	r3, lr, rrx
     ef8:	545f324e 	ldrbpl	r3, [pc], #-590	; f00 <_Min_Heap_Size+0x700>
     efc:	52495f58 	subpl	r5, r9, #88, 30	; 0x160
     f00:	50006e51 	andpl	r6, r0, r1, asr lr
     f04:	006c6c75 	rsbeq	r6, ip, r5, ror ip
     f08:	31414d44 	cmpcc	r1, r4, asr #26
     f0c:	7274535f 	rsbsvc	r5, r4, #2080374785	; 0x7c000001
     f10:	306d6165 	rsbcc	r6, sp, r5, ror #2
     f14:	5152495f 	cmppl	r2, pc, asr r9
     f18:	5452006e 	ldrbpl	r0, [r2], #-110	; 0xffffff92
     f1c:	6c415f43 	mcrrvs	15, 4, r5, r1, cr3
     f20:	5f6d7261 	svcpl	0x006d7261
     f24:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f28:	43324900 	teqmi	r2, #0, 18
     f2c:	52455f33 	subpl	r5, r5, #51, 30	; 0xcc
     f30:	5152495f 	cmppl	r2, pc, asr r9
     f34:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     f38:	35314954 	ldrcc	r4, [r1, #-2388]!	; 0xfffff6ac
     f3c:	5f30315f 	svcpl	0x0030315f
     f40:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f44:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     f48:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     f4c:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     f50:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     f54:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     f58:	48006e51 	stmdami	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     f5c:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
     f60:	5f434956 	svcpl	0x00434956
     f64:	50746553 	rsbspl	r6, r4, r3, asr r5
     f68:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     f6c:	00797469 	rsbseq	r7, r9, r9, ror #8
     f70:	5f474e52 	svcpl	0x00474e52
     f74:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f78:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     f7c:	58525f32 	ldmdapl	r2, {r1, r4, r5, r8, r9, sl, fp, ip, lr}^
     f80:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     f84:	41006e51 	tstmi	r0, r1, asr lr
     f88:	495f4344 	ldmdbmi	pc, {r2, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     f8c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     f90:	5f445650 	svcpl	0x00445650
     f94:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     f98:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
     f9c:	00524550 	subseq	r4, r2, r0, asr r5
     fa0:	434d5346 	movtmi	r5, #54086	; 0xd346
     fa4:	5152495f 	cmppl	r2, pc, asr r9
     fa8:	4148006e 	cmpmi	r8, lr, rrx
     fac:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
     fb0:	455f4349 	ldrbmi	r4, [pc, #-841]	; c6f <_Min_Heap_Size+0x46f>
     fb4:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
     fb8:	51524965 	cmppl	r2, r5, ror #18
     fbc:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     fc0:	495f3049 	ldmdbmi	pc, {r0, r3, r6, ip, sp}^	; <UNPREDICTABLE>
     fc4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     fc8:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     fcc:	5f355f39 	svcpl	0x00355f39
     fd0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     fd4:	414d4400 	cmpmi	sp, r0, lsl #8
     fd8:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
     fdc:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
     fe0:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     fe4:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     fe8:	5f32414d 	svcpl	0x0032414d
     fec:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
     ff0:	5f366d61 	svcpl	0x00366d61
     ff4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     ff8:	62654400 	rsbvs	r4, r5, #0, 8
     ffc:	6f4d6775 	svcvs	0x004d6775
    1000:	6f74696e 	svcvs	0x0074696e
    1004:	52495f72 	subpl	r5, r9, #456	; 0x1c8
    1008:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
    100c:	5f334332 	svcpl	0x00334332
    1010:	495f5645 	ldmdbmi	pc, {r0, r2, r6, r9, sl, ip, lr}^	; <UNPREDICTABLE>
    1014:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1018:	5f4c4148 	svcpl	0x004c4148
    101c:	4349564e 	movtmi	r5, #38478	; 0x964e
    1020:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    1024:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1028:	00515249 	subseq	r5, r1, r9, asr #4
    102c:	5f434352 	svcpl	0x00434352
    1030:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    1034:	414d4400 	cmpmi	sp, r0, lsl #8
    1038:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
    103c:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    1040:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
    1044:	42006e51 	andmi	r6, r0, #1296	; 0x510
    1048:	00525253 	subseq	r5, r2, r3, asr r2
    104c:	4f495047 	svcmi	0x00495047
    1050:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    1054:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1058:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
    105c:	50555f31 	subspl	r5, r5, r1, lsr pc
    1060:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
    1064:	495f3031 	ldmdbmi	pc, {r0, r4, r5, ip, sp}^	; <UNPREDICTABLE>
    1068:	006e5152 	rsbeq	r5, lr, r2, asr r1
    106c:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    1070:	2f65726f 	svccs	0x0065726f
    1074:	2f637253 	svccs	0x00637253
    1078:	72617375 	rsbvc	r7, r1, #-738197503	; 0xd4000001
    107c:	00632e74 	rsbeq	r2, r3, r4, ror lr
    1080:	5f47544f 	svcpl	0x0047544f
    1084:	455f5348 	ldrbmi	r5, [pc, #-840]	; d44 <_Min_Heap_Size+0x544>
    1088:	4f5f3150 	svcmi	0x005f3150
    108c:	495f5455 	ldmdbmi	pc, {r0, r2, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    1090:	006e5152 	rsbeq	r5, lr, r2, asr r1
    1094:	45444f4d 	strbmi	r4, [r4, #-3917]	; 0xfffff0b3
    1098:	41430052 	qdaddmi	r0, r2, r3
    109c:	525f314e 	subspl	r3, pc, #-2147483629	; 0x80000013
    10a0:	495f3158 	ldmdbmi	pc, {r3, r4, r6, r8, ip, sp}^	; <UNPREDICTABLE>
    10a4:	006e5152 	rsbeq	r5, lr, r2, asr r1
    10a8:	384d4954 	stmdacc	sp, {r2, r4, r6, r8, fp, lr}^
    10ac:	5f43435f 	svcpl	0x0043435f
    10b0:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    10b4:	49445300 	stmdbmi	r4, {r8, r9, ip, lr}^
    10b8:	52495f4f 	subpl	r5, r9, #316	; 0x13c
    10bc:	45006e51 	strmi	r6, [r0, #-3665]	; 0xfffff1af
    10c0:	33495458 	movtcc	r5, #37976	; 0x9458
    10c4:	5152495f 	cmppl	r2, pc, asr r9
    10c8:	6550006e 	ldrbvs	r0, [r0, #-110]	; 0xffffff92
    10cc:	5653646e 	ldrbpl	r6, [r3], -lr, ror #8
    10d0:	5152495f 	cmppl	r2, pc, asr r9
    10d4:	544f006e 	strbpl	r0, [pc], #-110	; 10dc <_Min_Heap_Size+0x8dc>
    10d8:	53485f47 	movtpl	r5, #36679	; 0x8f47
    10dc:	3150455f 	cmpcc	r0, pc, asr r5
    10e0:	5f4e495f 	svcpl	0x004e495f
    10e4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    10e8:	414d4400 	cmpmi	sp, r0, lsl #8
    10ec:	74535f31 	ldrbvc	r5, [r3], #-3889	; 0xfffff0cf
    10f0:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    10f4:	52495f37 	subpl	r5, r9, #55, 30	; 0xdc
    10f8:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
    10fc:	5f32414d 	svcpl	0x0032414d
    1100:	65727453 	ldrbvs	r7, [r2, #-1107]!	; 0xfffffbad
    1104:	5f326d61 	svcpl	0x00326d61
    1108:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    110c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1110:	70734d5f 	rsbsvc	r4, r3, pc, asr sp
    1114:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    1118:	2f2e2e00 	svccs	0x002e2e00
    111c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    1120:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1124:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    1128:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    112c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1130:	6d5f6c61 	ldclvs	12, cr6, [pc, #-388]	; fb4 <_Min_Heap_Size+0x7b4>
    1134:	632e7073 			; <UNDEFINED> instruction: 0x632e7073
    1138:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    113c:	4343525f 	movtmi	r5, #12895	; 0x325f
    1140:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1144:	4b4c4350 	blmi	1311e8c <_Min_Heap_Size+0x131168c>
    1148:	65724631 	ldrbvs	r4, [r2, #-1585]!	; 0xfffff9cf
    114c:	41480071 	hvcmi	32769	; 0x8001
    1150:	41555f4c 	cmpmi	r5, ip, asr #30
    1154:	78455452 	stmdavc	r5, {r1, r4, r6, sl, ip, lr}^
    1158:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    115c:	76457852 			; <UNDEFINED> instruction: 0x76457852
    1160:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
    1164:	00657079 	rsbeq	r7, r5, r9, ror r0
    1168:	5f4c4148 	svcpl	0x004c4148
    116c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1170:	414d445f 	cmpmi	sp, pc, asr r4
    1174:	73756150 	cmnvc	r5, #80, 2
    1178:	41480065 	cmpmi	r8, r5, rrx
    117c:	494c5f4c 	stmdbmi	ip, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1180:	65535f4e 	ldrbvs	r5, [r3, #-3918]	; 0xfffff0b2
    1184:	7242646e 	subvc	r6, r2, #1845493760	; 0x6e000000
    1188:	006b6165 	rsbeq	r6, fp, r5, ror #2
    118c:	67616c46 	strbvs	r6, [r1, -r6, asr #24]!
    1190:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    1194:	48007375 	stmdami	r0, {r0, r2, r4, r5, r6, r8, r9, ip, sp, lr}
    1198:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 11a0 <_Min_Heap_Size+0x9a0>
    119c:	415f414d 	cmpmi	pc, sp, asr #2
    11a0:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    11a4:	0054495f 	subseq	r4, r4, pc, asr r9
    11a8:	5f4c4148 	svcpl	0x004c4148
    11ac:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    11b0:	6c707544 	cfldr64vs	mvdx7, [r0], #-272	; 0xfffffef0
    11b4:	455f7865 	ldrbmi	r7, [pc, #-2149]	; 957 <_Min_Heap_Size+0x157>
    11b8:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    11bc:	61725465 	cmnvs	r2, r5, ror #8
    11c0:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    11c4:	72657474 	rsbvc	r7, r5, #116, 8	; 0x74000000
    11c8:	33726300 	cmncc	r2, #0, 6
    11cc:	00737469 	rsbseq	r7, r3, r9, ror #8
    11d0:	5f4c4148 	svcpl	0x004c4148
    11d4:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    11d8:	525f7845 	subspl	r7, pc, #4521984	; 0x450000
    11dc:	65764578 	ldrbvs	r4, [r6, #-1400]!	; 0xfffffa88
    11e0:	6143746e 	cmpvs	r3, lr, ror #8
    11e4:	61626c6c 	cmnvs	r2, ip, ror #24
    11e8:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    11ec:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 5b3 <_Min_Heap_Size-0x24d>
    11f0:	5f545241 	svcpl	0x00545241
    11f4:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    11f8:	63655274 	cmnvs	r5, #116, 4	; 0x40000007
    11fc:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    1200:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1204:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1208:	65475f54 	strbvs	r5, [r7, #-3924]	; 0xfffff0ac
    120c:	72724574 	rsbsvc	r4, r2, #116, 10	; 0x1d000000
    1210:	7000726f 	andvc	r7, r0, pc, ror #4
    1214:	61746144 	cmnvs	r4, r4, asr #2
    1218:	52415500 	subpl	r5, r1, #0, 10
    121c:	6e455f54 	mcrvs	15, 2, r5, cr5, cr4, {2}
    1220:	54785264 	ldrbtpl	r5, [r8], #-612	; 0xfffffd9c
    1224:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    1228:	00726566 	rsbseq	r6, r2, r6, ror #10
    122c:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1230:	646e455f 	strbtvs	r4, [lr], #-1375	; 0xfffffaa1
    1234:	72547854 	subsvc	r7, r4, #84, 16	; 0x540000
    1238:	66736e61 	ldrbtvs	r6, [r3], -r1, ror #28
    123c:	70007265 	andvc	r7, r0, r5, ror #4
    1240:	61746164 	cmnvs	r4, r4, ror #2
    1244:	74696238 	strbtvc	r6, [r9], #-568	; 0xfffffdc8
    1248:	41550073 	cmpmi	r5, r3, ror r0
    124c:	445f5452 	ldrbmi	r5, [pc], #-1106	; 1254 <_Min_Heap_Size+0xa54>
    1250:	6552414d 	ldrbvs	r4, [r2, #-333]	; 0xfffffeb3
    1254:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    1258:	6c704365 	ldclvs	3, cr4, [r0], #-404	; 0xfffffe6c
    125c:	41550074 	cmpmi	r5, r4, ror r0
    1260:	445f5452 	ldrbmi	r5, [pc], #-1106	; 1268 <_Min_Heap_Size+0xa68>
    1264:	7854414d 	ldmdavc	r4, {r0, r2, r3, r6, r8, lr}^
    1268:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    126c:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    1270:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1274:	414d445f 	cmpmi	sp, pc, asr r4
    1278:	6174535f 	cmnvs	r4, pc, asr r3
    127c:	495f7472 	ldmdbmi	pc, {r1, r4, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
    1280:	41480054 	qdaddmi	r0, r4, r8
    1284:	41555f4c 	cmpmi	r5, ip, asr #30
    1288:	415f5452 	cmpmi	pc, r2, asr r4	; <UNPREDICTABLE>
    128c:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    1290:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1294:	43657669 	cmnmi	r5, #110100480	; 0x6900000
    1298:	43746c70 	cmnmi	r4, #112, 24	; 0x7000
    129c:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    12a0:	006b6361 	rsbeq	r6, fp, r1, ror #6
    12a4:	67616c46 	strbvs	r6, [r1, -r6, asr #24]!
    12a8:	61647000 	cmnvs	r4, r0
    12ac:	36316174 			; <UNDEFINED> instruction: 0x36316174
    12b0:	73746962 	cmnvc	r4, #1605632	; 0x188000
    12b4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    12b8:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    12bc:	78525f54 	ldmdavc	r2, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    12c0:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    12c4:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    12c8:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    12cc:	6b636162 	blvs	18d985c <_Min_Heap_Size+0x18d905c>
    12d0:	63695400 	cmnvs	r9, #0, 8
    12d4:	6174736b 	cmnvs	r4, fp, ror #6
    12d8:	48007472 	stmdami	r0, {r1, r4, r5, r6, sl, ip, sp, lr}
    12dc:	485f4c41 	ldmdami	pc, {r0, r6, sl, fp, lr}^	; <UNPREDICTABLE>
    12e0:	44666c61 	strbtmi	r6, [r6], #-3169	; 0xfffff39f
    12e4:	656c7075 	strbvs	r7, [ip, #-117]!	; 0xffffff8b
    12e8:	6e495f78 	mcrvs	15, 2, r5, cr9, cr8, {3}
    12ec:	48007469 	stmdami	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    12f0:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 6b7 <_Min_Heap_Size-0x149>
    12f4:	5f545241 	svcpl	0x00545241
    12f8:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
    12fc:	57007469 	strpl	r7, [r0, -r9, ror #8]
    1300:	55656b61 	strbpl	r6, [r5, #-2913]!	; 0xfffff49f
    1304:	74654d70 	strbtvc	r4, [r5], #-3440	; 0xfffff290
    1308:	00646f68 	rsbeq	r6, r4, r8, ror #30
    130c:	61657242 	cmnvs	r5, r2, asr #4
    1310:	7465446b 	strbtvc	r4, [r5], #-1131	; 0xfffffb95
    1314:	4c746365 	ldclmi	3, cr6, [r4], #-404	; 0xfffffe6c
    1318:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    131c:	41550068 	cmpmi	r5, r8, rrx
    1320:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
    1324:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1328:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    132c:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    1330:	0054495f 	subseq	r4, r4, pc, asr r9
    1334:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1338:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    133c:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1340:	41006769 	tstmi	r0, r9, ror #14
    1344:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    1348:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    134c:	52415500 	subpl	r5, r1, #0, 10
    1350:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    1354:	41785241 	cmnmi	r8, r1, asr #4
    1358:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    135c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1360:	6b636162 	blvs	18d98f0 <_Min_Heap_Size+0x18d90f0>
    1364:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1368:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    136c:	62415f54 	subvs	r5, r1, #84, 30	; 0x150
    1370:	5474726f 	ldrbtpl	r7, [r4], #-623	; 0xfffffd91
    1374:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    1378:	5f74696d 	svcpl	0x0074696d
    137c:	48005449 	stmdami	r0, {r0, r3, r6, sl, ip, lr}
    1380:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 747 <_Min_Heap_Size-0xb9>
    1384:	5f545241 	svcpl	0x00545241
    1388:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
    138c:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1390:	535f5f00 	cmppl	pc, #0, 30
    1394:	58455254 	stmdapl	r5, {r2, r4, r6, r9, ip, lr}^
    1398:	41550057 	cmpmi	r5, r7, asr r0
    139c:	445f5452 	ldrbmi	r5, [pc], #-1106	; 13a4 <_Min_Heap_Size+0xba4>
    13a0:	7852414d 	ldmdavc	r2, {r0, r2, r3, r6, r8, lr}^
    13a4:	796c6e4f 	stmdbvc	ip!, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    13a8:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    13ac:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    13b0:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    13b4:	7265006b 	rsbvc	r0, r5, #107	; 0x6b
    13b8:	66726f72 	uhsub16vs	r6, r2, r2
    13bc:	7367616c 	cmnvc	r7, #108, 2
    13c0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    13c4:	6174535f 	cmnvs	r4, pc, asr r3
    13c8:	54737574 	ldrbtpl	r7, [r3], #-1396	; 0xfffffa8c
    13cc:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    13d0:	48006665 	stmdami	r0, {r0, r2, r5, r6, r9, sl, sp, lr}
    13d4:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 13dc <_Min_Heap_Size+0xbdc>
    13d8:	415f414d 	cmpmi	pc, sp, asr #2
    13dc:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    13e0:	2f2e2e00 	svccs	0x002e2e00
    13e4:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    13e8:	2f737265 	svccs	0x00737265
    13ec:	334d5453 	movtcc	r5, #54355	; 0xd453
    13f0:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    13f4:	41485f78 	hvcmi	34296	; 0x85f8
    13f8:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    13fc:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1400:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1404:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    1408:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    140c:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1410:	755f6c61 	ldrbvc	r6, [pc, #-3169]	; 7b7 <_Min_Heap_Size-0x49>
    1414:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    1418:	41480063 	cmpmi	r8, r3, rrx
    141c:	41555f4c 	cmpmi	r5, ip, asr #30
    1420:	545f5452 	ldrbpl	r5, [pc], #-1106	; 1428 <_Min_Heap_Size+0xc28>
    1424:	6c704378 	ldclvs	3, cr4, [r0], #-480	; 0xfffffe20
    1428:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    142c:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1430:	4155006b 	cmpmi	r5, fp, rrx
    1434:	445f5452 	ldrbmi	r5, [pc], #-1106	; 143c <_Min_Heap_Size+0xc3c>
    1438:	7854414d 	ldmdavc	r4, {r0, r2, r3, r6, r8, lr}^
    143c:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1440:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    1444:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1448:	6468006b 	strbtvs	r0, [r8], #-107	; 0xffffff95
    144c:	6900616d 	stmdbvs	r0, {r0, r2, r3, r5, r6, r8, sp, lr}
    1450:	6c667273 	sfmvs	f7, 2, [r6], #-460	; 0xfffffe34
    1454:	00736761 	rsbseq	r6, r3, r1, ror #14
    1458:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    145c:	414d445f 	cmpmi	sp, pc, asr r4
    1460:	6f727245 	svcvs	0x00727245
    1464:	41480072 	hvcmi	32770	; 0x8002
    1468:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    146c:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    1470:	4148006b 	cmpmi	r8, fp, rrx
    1474:	41555f4c 	cmpmi	r5, ip, asr #30
    1478:	415f5452 	cmpmi	pc, r2, asr r4	; <UNPREDICTABLE>
    147c:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    1480:	0054495f 	subseq	r4, r4, pc, asr r9
    1484:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    1488:	414d445f 	cmpmi	sp, pc, asr r4
    148c:	61487852 	cmpvs	r8, r2, asr r8
    1490:	7043666c 	subvc	r6, r3, ip, ror #12
    1494:	4800746c 	stmdami	r0, {r2, r3, r5, r6, sl, ip, sp, lr}
    1498:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 85f <_Min_Heap_Size+0x5f>
    149c:	5f545241 	svcpl	0x00545241
    14a0:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    14a4:	5f657669 	svcpl	0x00657669
    14a8:	00414d44 	subeq	r4, r1, r4, asr #26
    14ac:	5f4c4148 	svcpl	0x004c4148
    14b0:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    14b4:	6f62415f 	svcvs	0x0062415f
    14b8:	65527472 	ldrbvs	r7, [r2, #-1138]	; 0xfffffb8e
    14bc:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    14c0:	54495f65 	strbpl	r5, [r9], #-3941	; 0xfffff09b
    14c4:	4c785200 	lfmmi	f5, 2, [r8], #-0
    14c8:	48006e65 	stmdami	r0, {r0, r2, r5, r6, r9, sl, fp, sp, lr}
    14cc:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 13d0 <_Min_Heap_Size+0xbd0>
    14d0:	69746c75 	ldmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    14d4:	636f7250 	cmnvs	pc, #80, 4
    14d8:	6f737365 	svcvs	0x00737365
    14dc:	6e495f72 	mcrvs	15, 2, r5, cr9, cr2, {3}
    14e0:	55007469 	strpl	r7, [r0, #-1129]	; 0xfffffb97
    14e4:	5f545241 	svcpl	0x00545241
    14e8:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    14ec:	6c466e4f 	mcrrvs	14, 4, r6, r6, cr15
    14f0:	6e556761 	cdpvs	7, 5, cr6, cr5, cr1, {3}
    14f4:	546c6974 	strbtpl	r6, [ip], #-2420	; 0xfffff68c
    14f8:	6f656d69 	svcvs	0x00656d69
    14fc:	48007475 	stmdami	r0, {r0, r2, r4, r5, r6, sl, ip, sp, lr}
    1500:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 8c7 <_Min_Heap_Size+0xc7>
    1504:	5f545241 	svcpl	0x00545241
    1508:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    150c:	61725474 	cmnvs	r2, r4, ror r4
    1510:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    1514:	6c704374 	ldclvs	3, cr4, [r0], #-464	; 0xfffffe30
    1518:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    151c:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1520:	5f5f006b 	svcpl	0x005f006b
    1524:	4552444c 	ldrbmi	r4, [r2, #-1100]	; 0xfffffbb4
    1528:	48005758 	stmdami	r0, {r3, r4, r6, r8, r9, sl, ip, lr}
    152c:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; 8f3 <_Min_Heap_Size+0xf3>
    1530:	5f545241 	svcpl	0x00545241
    1534:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1538:	61725474 	cmnvs	r2, r4, ror r4
    153c:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    1540:	41550074 	cmpmi	r5, r4, ror r0
    1544:	535f5452 	cmppl	pc, #1375731712	; 0x52000000
    1548:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    154c:	6365525f 	cmnvs	r5, #-268435451	; 0xf0000005
    1550:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    1554:	414d445f 	cmpmi	sp, pc, asr r4
    1558:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    155c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1560:	5f784554 	svcpl	0x00784554
    1564:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1568:	54657669 	strbtpl	r7, [r5], #-1641	; 0xfffff997
    156c:	6c64496f 			; <UNDEFINED> instruction: 0x6c64496f
    1570:	54495f65 	strbpl	r5, [r9], #-3941	; 0xfffff09b
    1574:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; 67c <_Min_Heap_Size-0x184>
    1578:	36746e69 	ldrbtcc	r6, [r4], -r9, ror #28
    157c:	00745f34 	rsbseq	r5, r4, r4, lsr pc
    1580:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
    1584:	5f696261 	svcpl	0x00696261
    1588:	69646c75 	stmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    158c:	646f6d76 	strbtvs	r6, [pc], #-3446	; 1594 <_Min_Heap_Size+0xd94>
    1590:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1594:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1598:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    159c:	6f745341 	svcvs	0x00745341
    15a0:	41480070 	hvcmi	32768	; 0x8000
    15a4:	754d5f4c 	strbvc	r5, [sp, #-3916]	; 0xfffff0b4
    15a8:	5069746c 	rsbpl	r7, r9, ip, ror #8
    15ac:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    15b0:	726f7373 	rsbvc	r7, pc, #-872415231	; 0xcc000001
    15b4:	6978455f 	ldmdbvs	r8!, {r0, r1, r2, r3, r4, r6, r8, sl, lr}^
    15b8:	74754d74 	ldrbtvc	r4, [r5], #-3444	; 0xfffff28c
    15bc:	646f4d65 	strbtvs	r4, [pc], #-3429	; 15c4 <_Min_Heap_Size+0xdc4>
    15c0:	75680065 	strbvc	r0, [r8, #-101]!	; 0xffffff9b
    15c4:	00747261 	rsbseq	r7, r4, r1, ror #4
    15c8:	5f4c4148 	svcpl	0x004c4148
    15cc:	5f434352 	svcpl	0x00434352
    15d0:	50746547 	rsbspl	r6, r4, r7, asr #10
    15d4:	324b4c43 	subcc	r4, fp, #17152	; 0x4300
    15d8:	71657246 	cmnvc	r5, r6, asr #4
    15dc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    15e0:	6c61485f 	stclvs	8, cr4, [r1], #-380	; 0xfffffe84
    15e4:	70754466 	rsbsvc	r4, r5, r6, ror #8
    15e8:	5f78656c 	svcpl	0x0078656c
    15ec:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    15f0:	6552656c 	ldrbvs	r6, [r2, #-1388]	; 0xfffffa94
    15f4:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    15f8:	70007265 	andvc	r7, r0, r5, ror #4
    15fc:	006b6c63 	rsbeq	r6, fp, r3, ror #24
    1600:	706d6574 	rsbvc	r6, sp, r4, ror r5
    1604:	65740031 	ldrbvs	r0, [r4, #-49]!	; 0xffffffcf
    1608:	0032706d 	eorseq	r7, r2, sp, rrx
    160c:	6b636974 	blvs	18dbbe4 <_Min_Heap_Size+0x18db3e4>
    1610:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    1614:	41480074 	hvcmi	32772	; 0x8004
    1618:	41555f4c 	cmpmi	r5, ip, asr #30
    161c:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    1620:	6c704378 	ldclvs	3, cr4, [r0], #-480	; 0xfffffe20
    1624:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    1628:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    162c:	626e006b 	rsbvs	r0, lr, #107	; 0x6b
    1630:	6d65725f 	sfmvs	f7, 2, [r5, #-380]!	; 0xfffffe84
    1634:	696e6961 	stmdbvs	lr!, {r0, r5, r6, r8, fp, sp, lr}^
    1638:	725f676e 	subsvc	r6, pc, #28835840	; 0x1b80000
    163c:	61645f78 	smcvs	17912	; 0x45f8
    1640:	48006174 	stmdami	r0, {r2, r4, r5, r6, r8, sp, lr}
    1644:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; a0b <_Min_Heap_Size+0x20b>
    1648:	5f545241 	svcpl	0x00545241
    164c:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    1650:	6c704374 	ldclvs	3, cr4, [r0], #-464	; 0xfffffe30
    1654:	6c614374 	stclvs	3, cr4, [r1], #-464	; 0xfffffe30
    1658:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    165c:	6d64006b 	stclvs	0, cr0, [r4, #-428]!	; 0xfffffe54
    1660:	71657261 	cmnvc	r5, r1, ror #4
    1664:	74736575 	ldrbtvc	r6, [r3], #-1397	; 0xfffffa8b
    1668:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    166c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1670:	65525f54 	ldrbvs	r5, [r2, #-3924]	; 0xfffff0ac
    1674:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    1678:	41480065 	cmpmi	r8, r5, rrx
    167c:	41555f4c 	cmpmi	r5, ip, asr #30
    1680:	545f5452 	ldrbpl	r5, [pc], #-1106	; 1688 <_Min_Heap_Size+0xe88>
    1684:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    1688:	5f74696d 	svcpl	0x0074696d
    168c:	55005449 	strpl	r5, [r0, #-1097]	; 0xfffffbb7
    1690:	5f545241 	svcpl	0x00545241
    1694:	41414d44 	cmpmi	r1, r4, asr #26
    1698:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    169c:	72456e4f 	subvc	r6, r5, #1264	; 0x4f0
    16a0:	00726f72 	rsbseq	r6, r2, r2, ror pc
    16a4:	725f626e 	subsvc	r6, pc, #-536870906	; 0xe0000006
    16a8:	61645f78 	smcvs	17912	; 0x45f8
    16ac:	55006174 	strpl	r6, [r0, #-372]	; 0xfffffe8c
    16b0:	5f545241 	svcpl	0x00545241
    16b4:	54414d44 	strbpl	r4, [r1], #-3396	; 0xfffff2bc
    16b8:	736e6172 	cmnvc	lr, #-2147483620	; 0x8000001c
    16bc:	4374696d 	cmnmi	r4, #1785856	; 0x1b4000
    16c0:	00746c70 	rsbseq	r6, r4, r0, ror ip
    16c4:	5f4c4148 	svcpl	0x004c4148
    16c8:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    16cc:	525f7845 	subspl	r7, pc, #4521984	; 0x450000
    16d0:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    16d4:	6f546576 	svcvs	0x00546576
    16d8:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    16dc:	414d445f 	cmpmi	sp, pc, asr r4
    16e0:	52415500 	subpl	r5, r1, #0, 10
    16e4:	6e455f54 	mcrvs	15, 2, r5, cr5, cr4, {2}
    16e8:	61725464 	cmnvs	r2, r4, ror #8
    16ec:	696d736e 	stmdbvs	sp!, {r1, r2, r3, r5, r6, r8, r9, ip, sp, lr}^
    16f0:	54495f74 	strbpl	r5, [r9], #-3956	; 0xfffff08c
    16f4:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    16f8:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    16fc:	78545f54 	ldmdavc	r4, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    1700:	666c6148 	strbtvs	r6, [ip], -r8, asr #2
    1704:	746c7043 	strbtvc	r7, [ip], #-67	; 0xffffffbd
    1708:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    170c:	6b636162 	blvs	18d9c9c <_Min_Heap_Size+0x18d949c>
    1710:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1714:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1718:	72455f54 	subvc	r5, r5, #84, 30	; 0x150
    171c:	43726f72 	cmnmi	r2, #456	; 0x1c8
    1720:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    1724:	006b6361 	rsbeq	r6, fp, r1, ror #6
    1728:	5f4c4148 	svcpl	0x004c4148
    172c:	5f414d44 	svcpl	0x00414d44
    1730:	45746547 	ldrbmi	r6, [r4, #-1351]!	; 0xfffffab9
    1734:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    1738:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    173c:	5241555f 	subpl	r5, r1, #398458880	; 0x17c00000
    1740:	72545f54 	subsvc	r5, r4, #84, 30	; 0x150
    1744:	6d736e61 	ldclvs	14, cr6, [r3, #-388]!	; 0xfffffe7c
    1748:	445f7469 	ldrbmi	r7, [pc], #-1129	; 1750 <_Min_Heap_Size+0xf50>
    174c:	4800414d 	stmdami	r0, {r0, r2, r3, r6, r8, lr}
    1750:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; b17 <_Min_Heap_Size+0x317>
    1754:	45545241 	ldrbmi	r5, [r4, #-577]	; 0xfffffdbf
    1758:	65525f78 	ldrbvs	r5, [r2, #-3960]	; 0xfffff088
    175c:	76696563 	strbtvc	r6, [r9], -r3, ror #10
    1760:	496f5465 	stmdbmi	pc!, {r0, r2, r5, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    1764:	00656c64 	rsbeq	r6, r5, r4, ror #24
    1768:	5f4c4148 	svcpl	0x004c4148
    176c:	746c754d 	strbtvc	r7, [ip], #-1357	; 0xfffffab3
    1770:	6f725069 	svcvs	0x00725069
    1774:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    1778:	455f726f 	ldrbmi	r7, [pc, #-623]	; 1511 <_Min_Heap_Size+0xd11>
    177c:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    1780:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    1784:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    1788:	52415500 	subpl	r5, r1, #0, 10
    178c:	4d445f54 	stclmi	15, cr5, [r4, #-336]	; 0xfffffeb0
    1790:	4f785441 	svcmi	0x00785441
    1794:	41796c6e 	cmnmi	r9, lr, ror #24
    1798:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    179c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    17a0:	6b636162 	blvs	18d9d30 <_Min_Heap_Size+0x18d9530>
    17a4:	31726300 	cmncc	r2, r0, lsl #6
    17a8:	00737469 	rsbseq	r7, r3, r9, ror #8
    17ac:	5f4c4148 	svcpl	0x004c4148
    17b0:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
    17b4:	414d445f 	cmpmi	sp, pc, asr r4
    17b8:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    17bc:	4800656d 	stmdami	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    17c0:	555f4c41 	ldrbpl	r4, [pc, #-3137]	; b87 <_Min_Heap_Size+0x387>
    17c4:	5f545241 	svcpl	0x00545241
    17c8:	726f6241 	rsbvc	r6, pc, #268435460	; 0x10000004
    17cc:	41480074 	hvcmi	32772	; 0x8004
    17d0:	41555f4c 	cmpmi	r5, ip, asr #30
    17d4:	525f5452 	subspl	r5, pc, #1375731712	; 0x52000000
    17d8:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    17dc:	495f6576 	ldmdbmi	pc, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
    17e0:	41480054 	qdaddmi	r0, r4, r8
    17e4:	494c5f4c 	stmdbmi	ip, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    17e8:	6e495f4e 	cdpvs	15, 4, cr5, cr9, cr14, {2}
    17ec:	72007469 	andvc	r7, r0, #1761607680	; 0x69000000
    17f0:	6c757365 	ldclvs	3, cr7, [r5], #-404	; 0xfffffe6c
    17f4:	41480074 	hvcmi	32772	; 0x8004
    17f8:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    17fc:	53435f43 	movtpl	r5, #16195	; 0x3f43
    1800:	6c614353 	stclvs	3, cr4, [r1], #-332	; 0xfffffeb4
    1804:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1808:	6c70006b 	ldclvs	0, cr0, [r0], #-428	; 0xfffffe54
    180c:	7000706c 	andvc	r7, r0, ip, rrx
    1810:	6c637277 	sfmvs	f7, 2, [r3], #-476	; 0xfffffe24
    1814:	6168636b 	cmnvs	r8, fp, ror #6
    1818:	6465676e 	strbtvs	r6, [r5], #-1902	; 0xfffff892
    181c:	42504100 	subsmi	r4, r0, #0, 2
    1820:	73657250 	cmnvc	r5, #80, 4
    1824:	62615463 	rsbvs	r5, r1, #1660944384	; 0x63000000
    1828:	4f00656c 	svcmi	0x0000656c
    182c:	52435450 	subpl	r5, r3, #80, 8	; 0x50000000
    1830:	414c4600 	cmpmi	ip, r0, lsl #12
    1834:	545f4853 	ldrbpl	r4, [pc], #-2131	; 183c <_Min_Heap_Size+0x103c>
    1838:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
    183c:	45006665 	strmi	r6, [r0, #-1637]	; 0xfffff99b
    1840:	4c42414e 	stfmie	f4, [r2], {78}	; 0x4e
    1844:	504f0045 	subpl	r0, pc, r5, asr #32
    1848:	59454b54 	stmdbpl	r5, {r2, r4, r6, r8, r9, fp, lr}^
    184c:	6c700052 	ldclvs	0, cr0, [r0], #-328	; 0xfffffeb8
    1850:	6f63766c 	svcvs	0x0063766c
    1854:	53494400 	movtpl	r4, #37888	; 0x9400
    1858:	454c4241 	strbmi	r4, [ip, #-577]	; 0xfffffdbf
    185c:	54504f00 	ldrbpl	r4, [r0], #-3840	; 0xfffff100
    1860:	00315243 	eorseq	r5, r1, r3, asr #4
    1864:	5f434352 	svcpl	0x00434352
    1868:	444f434d 	strbmi	r4, [pc], #-845	; 1870 <_Min_Heap_Size+0x1070>
    186c:	48007669 	stmdami	r0, {r0, r3, r5, r6, r9, sl, ip, sp, lr}
    1870:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    1874:	455f4343 	ldrbmi	r4, [pc, #-835]	; 1539 <_Min_Heap_Size+0xd39>
    1878:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    187c:	53534365 	cmppl	r3, #-1811939327	; 0x94000001
    1880:	42484100 	submi	r4, r8, #0, 2
    1884:	73657250 	cmnvc	r5, #80, 4
    1888:	62615463 	rsbvs	r5, r1, #1660944384	; 0x63000000
    188c:	7300656c 	movwvc	r6, #1388	; 0x56c
    1890:	6c637379 	stclvs	3, cr7, [r3], #-484	; 0xfffffe1c
    1894:	666b636f 	strbtvs	r6, [fp], -pc, ror #6
    1898:	00716572 	rsbseq	r6, r1, r2, ror r5
    189c:	5f4c4148 	svcpl	0x004c4148
    18a0:	5f434352 	svcpl	0x00434352
    18a4:	61736944 	cmnvs	r3, r4, asr #18
    18a8:	43656c62 	cmnmi	r5, #25088	; 0x6200
    18ac:	48005353 	stmdami	r0, {r0, r1, r4, r6, r8, r9, ip, lr}
    18b0:	525f4c41 	subspl	r4, pc, #16640	; 0x4100
    18b4:	4d5f4343 	ldclmi	3, cr4, [pc, #-268]	; 17b0 <_Min_Heap_Size+0xfb0>
    18b8:	6f434f43 	svcvs	0x00434f43
    18bc:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    18c0:	73795300 	cmnvc	r9, #0, 6
    18c4:	436d6574 	cmnmi	sp, #116, 10	; 0x1d000000
    18c8:	4365726f 	cmnmi	r5, #-268435450	; 0xf0000006
    18cc:	6b636f6c 	blvs	18dd684 <_Min_Heap_Size+0x18dce84>
    18d0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    18d4:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
    18d8:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    18dc:	6c70006b 	ldclvs	0, cr0, [r0], #-428	; 0xfffffe54
    18e0:	6f635f6c 	svcvs	0x00635f6c
    18e4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    18e8:	54777500 	ldrbtpl	r7, [r7], #-1280	; 0xfffffb00
    18ec:	506b6369 	rsbpl	r6, fp, r9, ror #6
    18f0:	006f6972 	rsbeq	r6, pc, r2, ror r9	; <UNPREDICTABLE>
    18f4:	6d6c6c70 	stclvs	12, cr6, [ip, #-448]!	; 0xfffffe40
    18f8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    18fc:	4343525f 	movtmi	r5, #12895	; 0x325f
    1900:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1904:	43737953 	cmnmi	r3, #1359872	; 0x14c000
    1908:	6b636f6c 	blvs	18dd6c0 <_Min_Heap_Size+0x18dcec0>
    190c:	71657246 	cmnvc	r5, r6, asr #4
    1910:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1914:	4343525f 	movtmi	r5, #12895	; 0x325f
    1918:	4965445f 	stmdbmi	r5!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    191c:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1920:	5f434352 	svcpl	0x00434352
    1924:	534f434d 	movtpl	r4, #62285	; 0xf34d
    1928:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
    192c:	41480065 	cmpmi	r8, r5, rrx
    1930:	43525f4c 	cmpmi	r2, #76, 30	; 0x130
    1934:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1938:	6f6c4374 	svcvs	0x006c4374
    193c:	6f436b63 	svcvs	0x00436b63
    1940:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1944:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1948:	4343525f 	movtmi	r5, #12895	; 0x325f
    194c:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    1950:	4b4c4348 	blmi	1312678 <_Min_Heap_Size+0x1311e78>
    1954:	71657246 	cmnvc	r5, r6, asr #4
    1958:	2f2e2e00 	svccs	0x002e2e00
    195c:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1960:	2f737265 	svccs	0x00737265
    1964:	334d5453 	movtcc	r5, #54355	; 0xd453
    1968:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    196c:	41485f78 	hvcmi	34296	; 0x85f8
    1970:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    1974:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1978:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    197c:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    1980:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    1984:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1988:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
    198c:	632e6363 			; <UNDEFINED> instruction: 0x632e6363
    1990:	43435200 	movtmi	r5, #12800	; 0x3200
    1994:	4f434d5f 	svcmi	0x00434d5f
    1998:	46700078 			; <UNDEFINED> instruction: 0x46700078
    199c:	6574614c 	ldrbvs	r6, [r4, #-332]!	; 0xfffffeb4
    19a0:	0079636e 	rsbseq	r6, r9, lr, ror #6
    19a4:	5f4c4148 	svcpl	0x004c4148
    19a8:	5f434352 	svcpl	0x00434352
    19ac:	4f746547 	svcmi	0x00746547
    19b0:	6f436373 	svcvs	0x00436373
    19b4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    19b8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    19bc:	4343525f 	movtmi	r5, #12895	; 0x325f
    19c0:	494d4e5f 	stmdbmi	sp, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    19c4:	5152495f 	cmppl	r2, pc, asr r9
    19c8:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    19cc:	0072656c 	rsbseq	r6, r2, ip, ror #10
    19d0:	4f495047 	svcmi	0x00495047
    19d4:	6e69505f 	mcrvs	0, 3, r5, cr9, cr15, {2}
    19d8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    19dc:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    19e0:	6f4c5f4f 	svcvs	0x004c5f4f
    19e4:	69506b63 	ldmdbvs	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    19e8:	6f69006e 	svcvs	0x0069006e
    19ec:	69736f70 	ldmdbvs	r3!, {r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    19f0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    19f4:	4d454d00 	stclmi	13, cr4, [r5, #-0]
    19f8:	00504d52 	subseq	r4, r0, r2, asr sp
    19fc:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    1a00:	48005243 	stmdami	r0, {r0, r1, r6, r9, ip, lr}
    1a04:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    1a08:	5f4f4950 	svcpl	0x004f4950
    1a0c:	67676f54 			; <UNDEFINED> instruction: 0x67676f54
    1a10:	6950656c 	ldmdbvs	r0, {r2, r3, r5, r6, r8, sl, sp, lr}^
    1a14:	6574006e 	ldrbvs	r0, [r4, #-110]!	; 0xffffff92
    1a18:	4700706d 	strmi	r7, [r0, -sp, rrx]
    1a1c:	5f4f4950 	svcpl	0x004f4950
    1a20:	5f4e4950 	svcpl	0x004e4950
    1a24:	00544553 	subseq	r4, r4, r3, asr r5
    1a28:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    1a2c:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    1a30:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1a34:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1a38:	4950475f 	ldmdbmi	r0, {r0, r1, r2, r3, r4, r6, r8, r9, sl, lr}^
    1a3c:	65525f4f 	ldrbvs	r5, [r2, #-3919]	; 0xfffff0b1
    1a40:	69506461 	ldmdbvs	r0, {r0, r5, r6, sl, sp, lr}^
    1a44:	4148006e 	cmpmi	r8, lr, rrx
    1a48:	50475f4c 	subpl	r5, r7, ip, asr #30
    1a4c:	575f4f49 	ldrbpl	r4, [pc, -r9, asr #30]
    1a50:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    1a54:	006e6950 	rsbeq	r6, lr, r0, asr r9
    1a58:	43504d43 	cmpmi	r0, #4288	; 0x10c0
    1a5c:	69620052 	stmdbvs	r2!, {r1, r4, r6}^
    1a60:	61747374 	cmnvs	r4, r4, ror r3
    1a64:	00737574 	rsbseq	r7, r3, r4, ror r5
    1a68:	4f495047 	svcmi	0x00495047
    1a6c:	4e49505f 	mcrmi	0, 2, r5, cr9, cr15, {2}
    1a70:	5345525f 	movtpl	r5, #21087	; 0x525f
    1a74:	48005445 	stmdami	r0, {r0, r2, r6, sl, ip, lr}
    1a78:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    1a7c:	5f4f4950 	svcpl	0x004f4950
    1a80:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    1a84:	6c61435f 	stclvs	3, cr4, [r1], #-380	; 0xfffffe84
    1a88:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    1a8c:	5446006b 	strbpl	r0, [r6], #-107	; 0xffffff95
    1a90:	48005253 	stmdami	r0, {r0, r1, r4, r6, r9, ip, lr}
    1a94:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    1a98:	5f4f4950 	svcpl	0x004f4950
    1a9c:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
    1aa0:	5152495f 	cmppl	r2, pc, asr r9
    1aa4:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    1aa8:	0072656c 	rsbseq	r6, r2, ip, ror #10
    1aac:	75636f69 	strbvc	r6, [r3, #-3945]!	; 0xfffff097
    1ab0:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    1ab4:	59530074 	ldmdbpl	r3, {r2, r4, r5, r6}^
    1ab8:	47464353 	smlsldmi	r4, r6, r3, r3
    1abc:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    1ac0:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    1ac4:	53545200 	cmppl	r4, #0, 4
    1ac8:	50470052 	subpl	r0, r7, r2, asr r0
    1acc:	00784f49 	rsbseq	r4, r8, r9, asr #30
    1ad0:	442f2e2e 	strtmi	r2, [pc], #-3630	; 1ad8 <_Min_Heap_Size+0x12d8>
    1ad4:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
    1ad8:	532f7372 			; <UNDEFINED> instruction: 0x532f7372
    1adc:	32334d54 	eorscc	r4, r3, #84, 26	; 0x1500
    1ae0:	78783446 	ldmdavc	r8!, {r1, r2, r6, sl, ip, sp}^
    1ae4:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    1ae8:	6972445f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, lr}^
    1aec:	2f726576 	svccs	0x00726576
    1af0:	2f637253 	svccs	0x00637253
    1af4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
    1af8:	78346632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, sp, lr}
    1afc:	61685f78 	smcvs	34296	; 0x85f8
    1b00:	70675f6c 	rsbvc	r5, r7, ip, ror #30
    1b04:	632e6f69 			; <UNDEFINED> instruction: 0x632e6f69
    1b08:	53455200 	movtpl	r5, #20992	; 0x5200
    1b0c:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
    1b10:	50470044 	subpl	r0, r7, r4, asr #32
    1b14:	505f4f49 	subspl	r4, pc, r9, asr #30
    1b18:	74536e69 	ldrbvc	r6, [r3], #-3689	; 0xfffff197
    1b1c:	00657461 	rsbeq	r7, r5, r1, ror #8
    1b20:	45495753 	strbmi	r5, [r9, #-1875]	; 0xfffff8ad
    1b24:	41480052 	qdaddmi	r0, r2, r8
    1b28:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1b2c:	46585f41 	ldrbmi	r5, [r8], -r1, asr #30
    1b30:	415f5245 	cmpmi	pc, r5, asr #4
    1b34:	54524f42 	ldrbpl	r4, [r2], #-3906	; 0xfffff0be
    1b38:	5f42435f 	svcpl	0x0042435f
    1b3c:	48004449 	stmdami	r0, {r0, r3, r6, sl, lr}
    1b40:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1b48 <_Min_Heap_Size+0x1348>
    1b44:	495f414d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1b48:	0074696e 	rsbseq	r6, r4, lr, ror #18
    1b4c:	5f4c4148 	svcpl	0x004c4148
    1b50:	5f414d44 	svcpl	0x00414d44
    1b54:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    1b58:	72657473 	rsbvc	r7, r5, #1929379840	; 0x73000000
    1b5c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1b60:	6b636162 	blvs	18da0f0 <_Min_Heap_Size+0x18d98f0>
    1b64:	73655200 	cmnvc	r5, #0, 4
    1b68:	65767265 	ldrbvs	r7, [r6, #-613]!	; 0xfffffd9b
    1b6c:	66003064 	strvs	r3, [r0], -r4, rrx
    1b70:	4267616c 	rsbmi	r6, r7, #108, 2
    1b74:	68737469 	ldmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1b78:	4f746669 	svcmi	0x00746669
    1b7c:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
    1b80:	6d740074 	ldclvs	0, cr0, [r4, #-464]!	; 0xfffffe30
    1b84:	72736970 	rsbsvc	r6, r3, #112, 18	; 0x1c0000
    1b88:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1b8c:	414d445f 	cmpmi	sp, pc, asr r4
    1b90:	4546585f 	strbmi	r5, [r6, #-2143]	; 0xfffff7a1
    1b94:	50435f52 	subpl	r5, r3, r2, asr pc
    1b98:	435f544c 	cmpmi	pc, #76, 8	; 0x4c000000
    1b9c:	44495f42 	strbmi	r5, [r9], #-3906	; 0xfffff0be
    1ba0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1ba4:	414d445f 	cmpmi	sp, pc, asr r4
    1ba8:	6174535f 	cmnvs	r4, pc, asr r3
    1bac:	48007472 	stmdami	r0, {r1, r4, r5, r6, sl, ip, sp, lr}
    1bb0:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1bb8 <_Min_Heap_Size+0x13b8>
    1bb4:	445f414d 	ldrbmi	r4, [pc], #-333	; 1bbc <_Min_Heap_Size+0x13bc>
    1bb8:	696e4965 	stmdbvs	lr!, {r0, r2, r5, r6, r8, fp, lr}^
    1bbc:	41480074 	hvcmi	32772	; 0x8004
    1bc0:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1bc4:	46585f41 	ldrbmi	r5, [r8], -r1, asr #30
    1bc8:	455f5245 	ldrbmi	r5, [pc, #-581]	; 198b <_Min_Heap_Size+0x118b>
    1bcc:	524f5252 	subpl	r5, pc, #536870917	; 0x20000005
    1bd0:	5f42435f 	svcpl	0x0042435f
    1bd4:	48004449 	stmdami	r0, {r0, r3, r6, sl, lr}
    1bd8:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1be0 <_Min_Heap_Size+0x13e0>
    1bdc:	485f414d 	ldmdami	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1be0:	5f464c41 	svcpl	0x00464c41
    1be4:	4e415254 	mcrmi	2, 2, r5, cr1, cr4, {2}
    1be8:	52454653 	subpl	r4, r5, #87031808	; 0x5300000
    1bec:	414d4400 	cmpmi	sp, r0, lsl #8
    1bf0:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    1bf4:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    1bf8:	2e006769 	cdpcs	7, 0, cr6, cr0, cr9, {3}
    1bfc:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    1c00:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1c04:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    1c08:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    1c0c:	5f787834 	svcpl	0x00787834
    1c10:	5f4c4148 	svcpl	0x004c4148
    1c14:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1c18:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    1c1c:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    1c20:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1c24:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1c28:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    1c2c:	616d645f 	cmnvs	sp, pc, asr r4
    1c30:	4800632e 	stmdami	r0, {r1, r2, r3, r5, r8, r9, sp, lr}
    1c34:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1c3c <_Min_Heap_Size+0x143c>
    1c38:	4c5f414d 	ldfmie	f4, [pc], {77}	; 0x4d
    1c3c:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
    1c40:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    1c44:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    1c48:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    1c4c:	00666544 	rsbeq	r6, r6, r4, asr #10
    1c50:	5f4c4148 	svcpl	0x004c4148
    1c54:	5f414d44 	svcpl	0x00414d44
    1c58:	4c4c5546 	cfstr64mi	mvdx5, [ip], {70}	; 0x46
    1c5c:	4152545f 	cmpmi	r2, pc, asr r4
    1c60:	4546534e 	strbmi	r5, [r6, #-846]	; 0xfffffcb2
    1c64:	74730052 	ldrbtvc	r0, [r3], #-82	; 0xffffffae
    1c68:	6d616572 	cfstr64vs	mvdx6, [r1, #-456]!	; 0xfffffe38
    1c6c:	6d756e5f 	ldclvs	14, cr6, [r5, #-380]!	; 0xfffffe84
    1c70:	00726562 	rsbseq	r6, r2, r2, ror #10
    1c74:	5f4c4148 	svcpl	0x004c4148
    1c78:	5f414d44 	svcpl	0x00414d44
    1c7c:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1c80:	6b636162 	blvs	18da210 <_Min_Heap_Size+0x18d9a10>
    1c84:	79544449 	ldmdbvc	r4, {r0, r3, r6, sl, lr}^
    1c88:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    1c8c:	41480066 	cmpmi	r8, r6, rrx
    1c90:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1c94:	46585f41 	ldrbmi	r5, [r8], -r1, asr #30
    1c98:	4d5f5245 	lfmmi	f5, 2, [pc, #-276]	; 1b8c <_Min_Heap_Size+0x138c>
    1c9c:	4c504331 	mrrcmi	3, 3, r4, r0, cr1
    1ca0:	42435f54 	submi	r5, r3, #84, 30	; 0x150
    1ca4:	0044495f 	subeq	r4, r4, pc, asr r9
    1ca8:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    1cac:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    1cb0:	6576654c 	ldrbvs	r6, [r6, #-1356]!	; 0xfffffab4
    1cb4:	4649006c 	strbmi	r0, [r9], -ip, rrx
    1cb8:	44005243 	strmi	r5, [r0], #-579	; 0xfffffdbd
    1cbc:	64417473 	strbvs	r7, [r1], #-1139	; 0xfffffb8d
    1cc0:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    1cc4:	61430073 	hvcvs	12291	; 0x3003
    1cc8:	61626c6c 	cmnvs	r2, ip, ror #24
    1ccc:	44496b63 	strbmi	r6, [r9], #-2915	; 0xfffff49d
    1cd0:	414d4400 	cmpmi	sp, r0, lsl #8
    1cd4:	6568435f 	strbvs	r4, [r8, #-863]!	; 0xfffffca1
    1cd8:	69466b63 	stmdbvs	r6, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    1cdc:	61506f66 	cmpvs	r0, r6, ror #30
    1ce0:	006d6172 	rsbeq	r6, sp, r2, ror r1
    1ce4:	5f4c4148 	svcpl	0x004c4148
    1ce8:	5f414d44 	svcpl	0x00414d44
    1cec:	65526e55 	ldrbvs	r6, [r2, #-3669]	; 0xfffff1ab
    1cf0:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    1cf4:	61437265 	cmpvs	r3, r5, ror #4
    1cf8:	61626c6c 	cmnvs	r2, ip, ror #24
    1cfc:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    1d00:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 1d08 <_Min_Heap_Size+0x1508>
    1d04:	495f414d 	ldmdbmi	pc, {r0, r2, r3, r6, r8, lr}^	; <UNPREDICTABLE>
    1d08:	61485152 	cmpvs	r8, r2, asr r1
    1d0c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1d10:	41480072 	hvcmi	32770	; 0x8002
    1d14:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1d18:	46585f41 	ldrbmi	r5, [r8], -r1, asr #30
    1d1c:	415f5245 	cmpmi	pc, r5, asr #4
    1d20:	435f4c4c 	cmpmi	pc, #76, 24	; 0x4c00
    1d24:	44495f42 	strbmi	r5, [r9], #-3906	; 0xfffff0be
    1d28:	414d4400 	cmpmi	sp, r0, lsl #8
    1d2c:	7361425f 	cmnvc	r1, #-268435451	; 0xf0000005
    1d30:	65525f65 	ldrbvs	r5, [r2, #-3941]	; 0xfffff09b
    1d34:	74736967 	ldrbtvc	r6, [r3], #-2407	; 0xfffff699
    1d38:	00737265 	rsbseq	r7, r3, r5, ror #4
    1d3c:	5f414d44 	svcpl	0x00414d44
    1d40:	636c6143 	cmnvs	ip, #-1073741808	; 0xc0000010
    1d44:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    1d48:	42646e41 	rsbmi	r6, r4, #1040	; 0x410
    1d4c:	68737469 	ldmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1d50:	00746669 	rsbseq	r6, r4, r9, ror #12
    1d54:	5f4c4148 	svcpl	0x004c4148
    1d58:	5f414d44 	svcpl	0x00414d44
    1d5c:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1d60:	4c41485f 	mcrrmi	8, 5, r4, r1, cr15
    1d64:	4c504346 	mrrcmi	3, 4, r4, r0, cr6
    1d68:	42435f54 	submi	r5, r3, #84, 30	; 0x150
    1d6c:	0044495f 	subeq	r4, r4, pc, asr r9
    1d70:	5f4c4148 	svcpl	0x004c4148
    1d74:	5f414d44 	svcpl	0x00414d44
    1d78:	52454658 	subpl	r4, r5, #88, 12	; 0x5800000
    1d7c:	48314d5f 	ldmdami	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, lr}
    1d80:	43464c41 	movtmi	r4, #27713	; 0x6c41
    1d84:	5f544c50 	svcpl	0x00544c50
    1d88:	495f4243 	ldmdbmi	pc, {r0, r1, r6, r9, lr}^	; <UNPREDICTABLE>
    1d8c:	6f630044 	svcvs	0x00630044
    1d90:	00746e75 	rsbseq	r6, r4, r5, ror lr
    1d94:	41637253 	cmnmi	r3, r3, asr r2
    1d98:	65726464 	ldrbvs	r6, [r2, #-1124]!	; 0xfffffb9c
    1d9c:	44007373 	strmi	r7, [r0], #-883	; 0xfffffc8d
    1da0:	4c617461 	cfstrdmi	mvd7, [r1], #-388	; 0xfffffe7c
    1da4:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    1da8:	41480068 	cmpmi	r8, r8, rrx
    1dac:	4d445f4c 	stclmi	15, cr5, [r4, #-304]	; 0xfffffed0
    1db0:	65475f41 	strbvs	r5, [r7, #-3905]	; 0xfffff0bf
    1db4:	61745374 	cmnvs	r4, r4, ror r3
    1db8:	70006574 	andvc	r6, r0, r4, ror r5
    1dbc:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    1dc0:	6b636162 	blvs	18da350 <_Min_Heap_Size+0x18d9b50>
    1dc4:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    1dc8:	74756f65 	ldrbtvc	r6, [r5], #-3941	; 0xfffff09b
    1dcc:	67657200 	strbvs	r7, [r5, -r0, lsl #4]!
    1dd0:	616d0073 	smcvs	53251	; 0xd003
    1dd4:	635f6b73 	cmpvs	pc, #117760	; 0x1cc00
    1dd8:	6c746c70 	ldclvs	12, cr6, [r4], #-448	; 0xfffffe40
    1ddc:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
    1de0:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1de4:	414d445f 	cmpmi	sp, pc, asr r4
    1de8:	6c6f505f 	stclvs	0, cr5, [pc], #-380	; 1c74 <_Min_Heap_Size+0x1474>
    1dec:	726f466c 	rsbvc	r4, pc, #108, 12	; 0x6c00000
    1df0:	6e617254 	mcrvs	2, 3, r7, cr1, cr4, {2}
    1df4:	72656673 	rsbvc	r6, r5, #120586240	; 0x7300000
    1df8:	50434900 	subpl	r4, r3, r0, lsl #18
    1dfc:	79540052 	ldmdbvc	r4, {r1, r4, r6}^
    1e00:	78456570 	stmdavc	r5, {r4, r5, r6, r8, sl, sp, lr}^
    1e04:	65694674 	strbvs	r4, [r9, #-1652]!	; 0xfffff98c
    1e08:	2e00646c 	cdpcs	4, 0, cr6, cr0, cr12, {3}
    1e0c:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    1e10:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1e14:	54532f73 	ldrbpl	r2, [r3], #-3955	; 0xfffff08d
    1e18:	4632334d 	ldrtmi	r3, [r2], -sp, asr #6
    1e1c:	5f787834 	svcpl	0x00787834
    1e20:	5f4c4148 	svcpl	0x004c4148
    1e24:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    1e28:	532f7265 			; <UNDEFINED> instruction: 0x532f7265
    1e2c:	732f6372 			; <UNDEFINED> instruction: 0x732f6372
    1e30:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
    1e34:	78783466 	ldmdavc	r8!, {r1, r2, r5, r6, sl, ip, sp}^
    1e38:	6c61685f 	stclvs	8, cr6, [r1], #-380	; 0xfffffe84
    1e3c:	726f635f 	rsbvc	r6, pc, #2080374785	; 0x7c000001
    1e40:	2e786574 	mrccs	5, 3, r6, cr8, cr4, {3}
    1e44:	41480063 	cmpmi	r8, r3, rrx
    1e48:	59535f4c 	ldmdbpl	r3, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    1e4c:	43495453 	movtmi	r5, #37971	; 0x9453
    1e50:	6f435f4b 	svcvs	0x00435f4b
    1e54:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    1e58:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1e5c:	524f435f 	subpl	r4, pc, #2080374785	; 0x7c000001
    1e60:	5f584554 	svcpl	0x00584554
    1e64:	61656c43 	cmnvs	r5, r3, asr #24
    1e68:	65764572 	ldrbvs	r4, [r6, #-1394]!	; 0xfffffa8e
    1e6c:	5200746e 	andpl	r7, r0, #1845493760	; 0x6e000000
    1e70:	5f525341 	svcpl	0x00525341
    1e74:	49003341 	stmdbmi	r0, {r0, r6, r8, r9, ip, sp}
    1e78:	00525053 	subseq	r5, r2, r3, asr r0
    1e7c:	75427349 	strbvc	r7, [r2, #-841]	; 0xfffffcb7
    1e80:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    1e84:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1e88:	69725000 	ldmdbvs	r2!, {ip, lr}^
    1e8c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1e90:	6f724779 	svcvs	0x00724779
    1e94:	48007075 	stmdami	r0, {r0, r2, r4, r5, r6, ip, sp, lr}
    1e98:	535f4c41 	cmppl	pc, #16640	; 0x4100
    1e9c:	49545359 	ldmdbmi	r4, {r0, r3, r4, r6, r8, r9, ip, lr}^
    1ea0:	495f4b43 	ldmdbmi	pc, {r0, r1, r6, r8, r9, fp, lr}^	; <UNPREDICTABLE>
    1ea4:	61485152 	cmpvs	r8, r2, asr r1
    1ea8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    1eac:	41480072 	hvcmi	32770	; 0x8002
    1eb0:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    1eb4:	435f4349 	cmpmi	pc, #603979777	; 0x24000001
    1eb8:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1ebc:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    1ec0:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    1ec4:	48005152 	stmdami	r0, {r1, r4, r6, r8, ip, lr}
    1ec8:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 1dcc <_Min_Heap_Size+0x15cc>
    1ecc:	445f5550 	ldrbmi	r5, [pc], #-1360	; 1ed4 <_Min_Heap_Size+0x16d4>
    1ed0:	62617369 	rsbvs	r7, r1, #-1543503871	; 0xa4000001
    1ed4:	5200656c 	andpl	r6, r0, #108, 10	; 0x1b000000
    1ed8:	5f525341 	svcpl	0x00525341
    1edc:	4d003141 	stfmis	f3, [r0, #-260]	; 0xfffffefc
    1ee0:	435f5550 	cmpmi	pc, #80, 10	; 0x14000000
    1ee4:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    1ee8:	48006c6f 	stmdami	r0, {r0, r1, r2, r3, r5, r6, sl, fp, sp, lr}
    1eec:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    1ef0:	5f434956 	svcpl	0x00434956
    1ef4:	50746547 	rsbspl	r6, r4, r7, asr #10
    1ef8:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    1efc:	00797469 	rsbseq	r7, r9, r9, ror #8
    1f00:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    1f04:	435f4349 	cmpmi	pc, #603979777	; 0x24000001
    1f08:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
    1f0c:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    1f10:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    1f14:	5f005152 	svcpl	0x00005152
    1f18:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1f1c:	79535f43 	ldmdbvc	r3, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    1f20:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1f24:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    1f28:	42520074 	subsmi	r0, r2, #116	; 0x74
    1f2c:	415f5241 	cmpmi	pc, r1, asr #4
    1f30:	42520031 	subsmi	r0, r2, #49	; 0x31
    1f34:	415f5241 	cmpmi	pc, r1, asr #4
    1f38:	42520032 	subsmi	r0, r2, #50	; 0x32
    1f3c:	415f5241 	cmpmi	pc, r1, asr #4
    1f40:	504d0033 	subpl	r0, sp, r3, lsr r0
    1f44:	6e495f55 	mcrvs	15, 2, r5, cr9, cr5, {2}
    1f48:	50007469 	andpl	r7, r0, r9, ror #8
    1f4c:	6d656572 	cfstr64vs	mvdx6, [r5, #-456]!	; 0xfffffe38
    1f50:	72507470 	subsvc	r7, r0, #112, 8	; 0x70000000
    1f54:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1f58:	69427974 	stmdbvs	r2, {r2, r4, r5, r6, r8, fp, ip, sp, lr}^
    1f5c:	52007374 	andpl	r7, r0, #116, 6	; 0xd0000001
    1f60:	5f525341 	svcpl	0x00525341
    1f64:	4d003241 	sfmmi	f3, 4, [r0, #-260]	; 0xfffffefc
    1f68:	525f5550 	subspl	r5, pc, #80, 10	; 0x14000000
    1f6c:	6f696765 	svcvs	0x00696765
    1f70:	6e495f6e 	cdpvs	15, 4, cr5, cr9, cr14, {3}
    1f74:	79547469 	ldmdbvc	r4, {r0, r3, r5, r6, sl, ip, sp, lr}^
    1f78:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
    1f7c:	73490066 	movtvc	r0, #36966	; 0x9066
    1f80:	68636143 	stmdavs	r3!, {r0, r1, r6, r8, sp, lr}^
    1f84:	6c626165 	stfvse	f6, [r2], #-404	; 0xfffffe6c
    1f88:	79530065 	ldmdbvc	r3, {r0, r2, r5, r6}^
    1f8c:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    1f90:	79545f6b 	ldmdbvc	r4, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1f94:	5f006570 	svcpl	0x00006570
    1f98:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1f9c:	69445f43 	stmdbvs	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    1fa0:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    1fa4:	51524965 	cmppl	r2, r5, ror #18
    1fa8:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    1fac:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    1fb0:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    1fb4:	6e655074 	mcrvs	0, 3, r5, cr5, cr4, {3}
    1fb8:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    1fbc:	00515249 	subseq	r5, r1, r9, asr #4
    1fc0:	5f4c4148 	svcpl	0x004c4148
    1fc4:	4349564e 	movtmi	r5, #38478	; 0x964e
    1fc8:	7379535f 	cmnvc	r9, #2080374785	; 0x7c000001
    1fcc:	526d6574 	rsbpl	r6, sp, #116, 10	; 0x1d000000
    1fd0:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    1fd4:	67657200 	strbvs	r7, [r5, -r0, lsl #4]!
    1fd8:	6c61765f 	stclvs	6, cr7, [r1], #-380	; 0xfffffe84
    1fdc:	43006575 	movwmi	r6, #1397	; 0x575
    1fe0:	42494c41 	submi	r4, r9, #16640	; 0x4100
    1fe4:	72507000 	subsvc	r7, r0, #0
    1fe8:	706d6565 	rsbvc	r6, sp, r5, ror #10
    1fec:	69725074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, lr}^
    1ff0:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1ff4:	63410079 	movtvs	r0, #4217	; 0x1079
    1ff8:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    1ffc:	6d726550 	cfldr64vs	mvdx6, [r2, #-320]!	; 0xfffffec0
    2000:	69737369 	ldmdbvs	r3!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
    2004:	70006e6f 	andvc	r6, r0, pc, ror #28
    2008:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    200c:	00797469 	rsbseq	r7, r9, r9, ror #8
    2010:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
    2014:	5f323374 	svcpl	0x00323374
    2018:	5f5f0074 	svcpl	0x005f0074
    201c:	4349564e 	movtmi	r5, #38478	; 0x964e
    2020:	7465535f 	strbtvc	r5, [r5], #-863	; 0xfffffca1
    2024:	6f697250 	svcvs	0x00697250
    2028:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    202c:	756f7247 	strbvc	r7, [pc, #-583]!	; 1ded <_Min_Heap_Size+0x15ed>
    2030:	676e6970 			; <UNDEFINED> instruction: 0x676e6970
    2034:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2038:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    203c:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    2040:	74634174 	strbtvc	r4, [r3], #-372	; 0xfffffe8c
    2044:	00657669 	rsbeq	r7, r5, r9, ror #12
    2048:	53445f5f 	movtpl	r5, #20319	; 0x4f5f
    204c:	5f5f0042 	svcpl	0x005f0042
    2050:	4349564e 	movtmi	r5, #38478	; 0x964e
    2054:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    2058:	6f697250 	svcvs	0x00697250
    205c:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2060:	75537000 	ldrbvc	r7, [r3, #-0]
    2064:	69725062 	ldmdbvs	r2!, {r1, r5, r6, ip, lr}^
    2068:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    206c:	72700079 	rsbsvc	r0, r0, #121	; 0x79
    2070:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2074:	72677974 	rsbvc	r7, r7, #116, 18	; 0x1d0000
    2078:	0070756f 	rsbseq	r7, r0, pc, ror #10
    207c:	44414f4c 	strbmi	r4, [r1], #-3916	; 0xfffff0b4
    2080:	63697400 	cmnvs	r9, #0, 8
    2084:	4900736b 	stmdbmi	r0, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}
    2088:	00524241 	subseq	r4, r2, r1, asr #4
    208c:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    2090:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    2094:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
    2098:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    209c:	51524967 	cmppl	r2, r7, ror #18
    20a0:	495f5f00 	ldmdbmi	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
    20a4:	4e004253 	mcrmi	2, 0, r4, cr0, cr3, {2}
    20a8:	5f434956 	svcpl	0x00434956
    20ac:	6f636e45 	svcvs	0x00636e45
    20b0:	72506564 	subsvc	r6, r0, #100, 10	; 0x19000000
    20b4:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    20b8:	49007974 	stmdbmi	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
    20bc:	00524543 	subseq	r4, r2, r3, asr #10
    20c0:	50627553 	rsbpl	r7, r2, r3, asr r5
    20c4:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    20c8:	42797469 	rsbsmi	r7, r9, #1761607680	; 0x69000000
    20cc:	00737469 	rsbseq	r7, r3, r9, ror #8
    20d0:	4349564e 	movtmi	r5, #38478	; 0x964e
    20d4:	6365445f 	cmnvs	r5, #1593835520	; 0x5f000000
    20d8:	5065646f 	rsbpl	r6, r5, pc, ror #8
    20dc:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    20e0:	00797469 	rsbseq	r7, r9, r9, ror #8
    20e4:	5f4c4148 	svcpl	0x004c4148
    20e8:	54535953 	ldrbpl	r5, [r3], #-2387	; 0xfffff6ad
    20ec:	5f4b4349 	svcpl	0x004b4349
    20f0:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    20f4:	6b636162 	blvs	18da684 <_Min_Heap_Size+0x18d9e84>
    20f8:	73694400 	cmnvc	r9, #0, 8
    20fc:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2100:	63657845 	cmnvs	r5, #4521984	; 0x450000
    2104:	445f5f00 	ldrbmi	r5, [pc], #-3840	; 210c <_Min_Heap_Size+0x190c>
    2108:	5300424d 	movwpl	r4, #589	; 0x24d
    210c:	65526275 	ldrbvs	r6, [r2, #-629]	; 0xfffffd8b
    2110:	6e6f6967 	vnmulvs.f16	s13, s30, s15	; <UNPREDICTABLE>
    2114:	61736944 	cmnvs	r3, r4, asr #18
    2118:	00656c62 	rsbeq	r6, r5, r2, ror #24
    211c:	52455349 	subpl	r5, r5, #603979777	; 0x24000001
    2120:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
    2124:	79545f43 	ldmdbvc	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    2128:	48006570 	stmdami	r0, {r4, r5, r6, r8, sl, sp, lr}
    212c:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    2130:	5f434956 	svcpl	0x00434956
    2134:	50746553 	rsbspl	r6, r4, r3, asr r5
    2138:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    213c:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    2140:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    2144:	00676e69 	rsbeq	r6, r7, r9, ror #28
    2148:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    214c:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    2150:	65507465 	ldrbvs	r7, [r0, #-1125]	; 0xfffffb9b
    2154:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    2158:	51524967 	cmppl	r2, r7, ror #18
    215c:	4e5f5f00 	cdpmi	15, 5, cr5, cr15, cr0, {0}
    2160:	5f434956 	svcpl	0x00434956
    2164:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
    2168:	5249656c 	subpl	r6, r9, #108, 10	; 0x1b000000
    216c:	42520051 	subsmi	r0, r2, #81	; 0x51
    2170:	50005241 	andpl	r5, r0, r1, asr #4
    2174:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2178:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    217c:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    2180:	00706d54 	rsbseq	r6, r0, r4, asr sp
    2184:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
    2188:	7079545f 	rsbsvc	r5, r9, pc, asr r4
    218c:	69540065 	ldmdbvs	r4, {r0, r2, r5, r6}^
    2190:	4e736b63 	vsubmi.f64	d22, d3, d19
    2194:	00626d75 	rsbeq	r6, r2, r5, ror sp
    2198:	52534152 	subspl	r4, r3, #-2147483628	; 0x80000014
    219c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    21a0:	5359535f 	cmppl	r9, #2080374785	; 0x7c000001
    21a4:	4b434954 	blmi	10d46fc <_Min_Heap_Size+0x10d3efc>
    21a8:	4b4c435f 	blmi	1312f2c <_Min_Heap_Size+0x131272c>
    21ac:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
    21b0:	6f436563 	svcvs	0x00436563
    21b4:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    21b8:	50595400 	subspl	r5, r9, r0, lsl #8
    21bc:	41480045 	cmpmi	r8, r5, asr #32
    21c0:	504d5f4c 	subpl	r5, sp, ip, asr #30
    21c4:	6f435f55 	svcvs	0x00435f55
    21c8:	6769666e 	strbvs	r6, [r9, -lr, ror #12]!
    21cc:	69676552 	stmdbvs	r7!, {r1, r4, r6, r8, sl, sp, lr}^
    21d0:	53006e6f 	movwpl	r6, #3695	; 0xe6f
    21d4:	69547379 	ldmdbvs	r4, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
    21d8:	435f6b63 	cmpmi	pc, #101376	; 0x18c00
    21dc:	69666e6f 	stmdbvs	r6!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}^
    21e0:	41480067 	cmpmi	r8, r7, rrx
    21e4:	564e5f4c 	strbpl	r5, [lr], -ip, asr #30
    21e8:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    21ec:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    21f0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    21f4:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
    21f8:	6970756f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    21fc:	4800676e 	stmdami	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    2200:	4d5f4c41 	ldclmi	12, cr4, [pc, #-260]	; 2104 <_Min_Heap_Size+0x1904>
    2204:	455f5550 	ldrbmi	r5, [pc, #-1360]	; 1cbc <_Min_Heap_Size+0x14bc>
    2208:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    220c:	54430065 	strbpl	r0, [r3], #-101	; 0xffffff9b
    2210:	5f004c52 	svcpl	0x00004c52
    2214:	49564e5f 	ldmdbmi	r6, {r0, r1, r2, r3, r4, r6, r9, sl, fp, lr}^
    2218:	65475f43 	strbvs	r5, [r7, #-3907]	; 0xfffff0bd
    221c:	74634174 	strbtvc	r4, [r3], #-372	; 0xfffffe8c
    2220:	00657669 	rsbeq	r7, r5, r9, ror #12
    2224:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    2228:	475f4349 	ldrbmi	r4, [pc, -r9, asr #6]
    222c:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    2230:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2234:	72477974 	subvc	r7, r7, #116, 18	; 0x1d0000
    2238:	6970756f 	ldmdbvs	r0!, {r0, r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}^
    223c:	5300676e 	movwpl	r6, #1902	; 0x76e
    2240:	00524954 	subseq	r4, r2, r4, asr r9
    2244:	68537349 	ldmdavs	r3, {r0, r3, r6, r8, r9, ip, sp, lr}^
    2248:	61657261 	cmnvs	r5, r1, ror #4
    224c:	00656c62 	rsbeq	r6, r5, r2, ror #24
    2250:	564e5f5f 			; <UNDEFINED> instruction: 0x564e5f5f
    2254:	535f4349 	cmppl	pc, #603979777	; 0x24000001
    2258:	72507465 	subsvc	r7, r0, #1694498816	; 0x65000000
    225c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2260:	48007974 	stmdami	r0, {r2, r4, r5, r6, r8, fp, ip, sp, lr}
    2264:	4e5f4c41 	cdpmi	12, 5, cr4, cr15, cr1, {2}
    2268:	5f434956 	svcpl	0x00434956
    226c:	50746553 	rsbspl	r6, r4, r3, asr r5
    2270:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    2274:	5249676e 	subpl	r6, r9, #28835840	; 0x1b80000
    2278:	504d0051 	subpl	r0, sp, r1, asr r0
    227c:	79545f55 	ldmdbvc	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    2280:	48006570 	stmdami	r0, {r4, r5, r6, r8, sl, sp, lr}
    2284:	475f4c41 	ldrbmi	r4, [pc, -r1, asr #24]
    2288:	61487465 	cmpvs	r8, r5, ror #8
    228c:	7265566c 	rsbvc	r5, r5, #108, 12	; 0x6c00000
    2290:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
    2294:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2298:	6369545f 	cmnvs	r9, #1593835520	; 0x5f000000
    229c:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    22a0:	70795471 	rsbsvc	r5, r9, r1, ror r4
    22a4:	66654465 	strbtvs	r4, [r5], -r5, ror #8
    22a8:	63695400 	cmnvs	r9, #0, 8
    22ac:	6972506b 	ldmdbvs	r2!, {r0, r1, r3, r5, r6, ip, lr}^
    22b0:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    22b4:	41480079 	hvcmi	32777	; 0x8009
    22b8:	65535f4c 	ldrbvs	r5, [r3, #-3916]	; 0xfffff0b4
    22bc:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    22c0:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    22c4:	44490071 	strbmi	r0, [r9], #-113	; 0xffffff8f
    22c8:	45444f43 	strbmi	r4, [r4, #-3907]	; 0xfffff0bd
    22cc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    22d0:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    22d4:	77444955 	smlsldvc	r4, r4, r5, r9	; <UNPREDICTABLE>
    22d8:	41480032 	cmpmi	r8, r2, lsr r0
    22dc:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    22e0:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    22e4:	616e455f 	cmnvs	lr, pc, asr r5
    22e8:	44656c62 	strbtmi	r6, [r5], #-3170	; 0xfffff39e
    22ec:	74534742 	ldrbvc	r4, [r3], #-1858	; 0xfffff8be
    22f0:	62646e61 	rsbvs	r6, r4, #1552	; 0x610
    22f4:	646f4d79 	strbtvs	r4, [pc], #-3449	; 22fc <_Min_Heap_Size+0x1afc>
    22f8:	41480065 	cmpmi	r8, r5, rrx
    22fc:	65475f4c 	strbvs	r5, [r7, #-3916]	; 0xfffff0b4
    2300:	63695474 	cmnvs	r9, #116, 8	; 0x74000000
    2304:	6972506b 	ldmdbvs	r2!, {r0, r1, r3, r5, r6, ip, lr}^
    2308:	4148006f 	cmpmi	r8, pc, rrx
    230c:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2310:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
    2314:	5f514552 	svcpl	0x00514552
    2318:	5a483031 	bpl	120e3e4 <_Min_Heap_Size+0x120dbe4>
    231c:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2320:	70734d5f 	rsbsvc	r4, r3, pc, asr sp
    2324:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
    2328:	48007469 	stmdami	r0, {r0, r3, r5, r6, sl, ip, sp, lr}
    232c:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 2334 <_Min_Heap_Size+0x1b34>
    2330:	434d4742 	movtmi	r4, #55106	; 0xd742
    2334:	69445f55 	stmdbvs	r4, {r0, r2, r4, r6, r8, r9, sl, fp, ip, lr}^
    2338:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
    233c:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    2340:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    2344:	646f4d70 	strbtvs	r4, [pc], #-3440	; 234c <_Min_Heap_Size+0x1b4c>
    2348:	41480065 	cmpmi	r8, r5, rrx
    234c:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    2350:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
    2354:	5f514552 	svcpl	0x00514552
    2358:	48303031 	ldmdami	r0!, {r0, r4, r5, ip, sp}
    235c:	4148005a 	qdaddmi	r0, sl, r8
    2360:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    2364:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    2368:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    236c:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2370:	53474244 	movtpl	r4, #29252	; 0x7244
    2374:	4d706f74 	ldclmi	15, cr6, [r0, #-464]!	; 0xfffffe30
    2378:	0065646f 	rsbeq	r6, r5, pc, ror #8
    237c:	5f4c4148 	svcpl	0x004c4148
    2380:	6e496544 	cdpvs	5, 4, cr6, cr9, cr4, {2}
    2384:	75007469 	strvc	r7, [r0, #-1129]	; 0xfffffb97
    2388:	63695477 	cmnvs	r9, #1996488704	; 0x77000000
    238c:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    2390:	77750071 			; <UNDEFINED> instruction: 0x77750071
    2394:	6b636954 	blvs	18dc8ec <_Min_Heap_Size+0x18dc0ec>
    2398:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    239c:	4349545f 	movtmi	r5, #37983	; 0x945f
    23a0:	52465f4b 	subpl	r5, r6, #300	; 0x12c
    23a4:	315f5145 	cmpcc	pc, r5, asr #2
    23a8:	005a484b 	subseq	r4, sl, fp, asr #16
    23ac:	5f4c4148 	svcpl	0x004c4148
    23b0:	4d474244 	sfmmi	f4, 2, [r7, #-272]	; 0xfffffef0
    23b4:	455f5543 	ldrbmi	r5, [pc, #-1347]	; 1e79 <_Min_Heap_Size+0x1679>
    23b8:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    23bc:	47424465 	strbmi	r4, [r2, -r5, ror #8]
    23c0:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
    23c4:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    23c8:	42504100 	subsmi	r4, r0, #0, 2
    23cc:	005a4632 	subseq	r4, sl, r2, lsr r6
    23d0:	5f4c4148 	svcpl	0x004c4148
    23d4:	55746547 	ldrbpl	r6, [r4, #-1351]!	; 0xfffffab9
    23d8:	30774449 	rsbscc	r4, r7, r9, asr #8
    23dc:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    23e0:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    23e4:	77444955 	smlsldvc	r4, r4, r5, r9	; <UNPREDICTABLE>
    23e8:	41480031 	cmpmi	r8, r1, lsr r0
    23ec:	49545f4c 	ldmdbmi	r4, {r2, r3, r6, r8, r9, sl, fp, ip, lr}^
    23f0:	465f4b43 	ldrbmi	r4, [pc], -r3, asr #22
    23f4:	5f514552 	svcpl	0x00514552
    23f8:	41464544 	cmpmi	r6, r4, asr #10
    23fc:	00544c55 	subseq	r4, r4, r5, asr ip
    2400:	5f4c4148 	svcpl	0x004c4148
    2404:	75736552 	ldrbvc	r6, [r3, #-1362]!	; 0xfffffaae
    2408:	6954656d 	ldmdbvs	r4, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    240c:	41006b63 	tstmi	r0, r3, ror #22
    2410:	46314250 			; <UNDEFINED> instruction: 0x46314250
    2414:	4148005a 	qdaddmi	r0, sl, r8
    2418:	42445f4c 	submi	r5, r4, #76, 30	; 0x130
    241c:	55434d47 	strbpl	r4, [r3, #-3399]	; 0xfffff2b9
    2420:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    2424:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2428:	53474244 	movtpl	r4, #29252	; 0x7244
    242c:	646e6174 	strbtvs	r6, [lr], #-372	; 0xfffffe8c
    2430:	6f4d7962 	svcvs	0x004d7962
    2434:	48006564 	stmdami	r0, {r2, r5, r6, r8, sl, sp, lr}
    2438:	535f4c41 	cmppl	pc, #16640	; 0x4100
    243c:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    2440:	6954646e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, sl, sp, lr}^
    2444:	48006b63 	stmdami	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    2448:	445f4c41 	ldrbmi	r4, [pc], #-3137	; 2450 <_Min_Heap_Size+0x1c50>
    244c:	434d4742 	movtmi	r4, #55106	; 0xd742
    2450:	6e455f55 	mcrvs	15, 2, r5, cr5, cr5, {2}
    2454:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    2458:	53474244 	movtpl	r4, #29252	; 0x7244
    245c:	7065656c 	rsbvc	r6, r5, ip, ror #10
    2460:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    2464:	47424400 	strbmi	r4, [r2, -r0, lsl #8]
    2468:	5f55434d 	svcpl	0x0055434d
    246c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    2470:	00666544 	rsbeq	r6, r6, r4, asr #10
    2474:	5f4c4148 	svcpl	0x004c4148
    2478:	52746547 	rsbspl	r6, r4, #297795584	; 0x11c00000
    247c:	44495645 	strbmi	r5, [r9], #-1605	; 0xfffff9bb
    2480:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    2484:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    2488:	6b636954 	blvs	18dc9e0 <_Min_Heap_Size+0x18dc1e0>
    248c:	71657246 	cmnvc	r5, r6, asr #4
    2490:	65727000 	ldrbvs	r7, [r2, #-0]!
    2494:	63695476 	cmnvs	r9, #1979711488	; 0x76000000
    2498:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    249c:	41480071 	hvcmi	32769	; 0x8001
    24a0:	6e455f4c 	cdpvs	15, 4, cr5, cr5, cr12, {2}
    24a4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    24a8:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    24ac:	61736e65 	cmnvs	r3, r5, ror #28
    24b0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    24b4:	6c6c6543 	cfstr64vs	mvdx6, [ip], #-268	; 0xfffffef4
    24b8:	2f2e2e00 	svccs	0x002e2e00
    24bc:	76697244 	strbtvc	r7, [r9], -r4, asr #4
    24c0:	2f737265 	svccs	0x00737265
    24c4:	334d5453 	movtcc	r5, #54355	; 0xd453
    24c8:	78344632 	ldmdavc	r4!, {r1, r4, r5, r9, sl, lr}
    24cc:	41485f78 	hvcmi	34296	; 0x85f8
    24d0:	72445f4c 	subvc	r5, r4, #76, 30	; 0x130
    24d4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    24d8:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    24dc:	6d74732f 	ldclvs	3, cr7, [r4, #-188]!	; 0xffffff44
    24e0:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    24e4:	685f7878 	ldmdavs	pc, {r3, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    24e8:	632e6c61 			; <UNDEFINED> instruction: 0x632e6c61
    24ec:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    24f0:	7369445f 	cmnvc	r9, #1593835520	; 0x5f000000
    24f4:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    24f8:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    24fc:	61736e65 	cmnvs	r3, r5, ror #28
    2500:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2504:	6c6c6543 	cfstr64vs	mvdx6, [ip], #-268	; 0xfffffef4
    2508:	4c414800 	mcrrmi	8, 0, r4, r1, cr0
    250c:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
    2510:	49564544 	ldmdbmi	r6, {r2, r6, r8, sl, lr}^
    2514:	2e2e0044 	cdpcs	0, 2, cr0, cr14, cr4, {2}
    2518:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
    251c:	72532f65 	subsvc	r2, r3, #404	; 0x194
    2520:	79732f63 	ldmdbvc	r3!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    2524:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2528:	6d74735f 	ldclvs	3, cr7, [r4, #-380]!	; 0xfffffe84
    252c:	34663233 	strbtcc	r3, [r6], #-563	; 0xfffffdcd
    2530:	632e7878 			; <UNDEFINED> instruction: 0x632e7878
    2534:	6c6c7000 	stclvs	0, cr7, [ip], #-0
    2538:	72756f73 	rsbsvc	r6, r5, #460	; 0x1cc
    253c:	53006563 	movwpl	r6, #1379	; 0x563
    2540:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    2544:	696e496d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, fp, lr}^
    2548:	79530074 	ldmdbvc	r3, {r2, r4, r5, r6}^
    254c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2550:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    2554:	636f6c43 	cmnvs	pc, #17152	; 0x4300
    2558:	6470556b 	ldrbtvs	r5, [r0], #-1387	; 0xfffffa95
    255c:	00657461 	rsbeq	r7, r5, r1, ror #8
    2560:	6574735f 	ldrbvs	r7, [r4, #-863]!	; 0xfffffca1
    2564:	6f007478 	svcvs	0x00007478
    2568:	646f6370 	strbtvs	r6, [pc], #-880	; 2570 <_Min_Heap_Size+0x1d70>
    256c:	73695f65 	cmnvc	r9, #404	; 0x194
    2570:	5f6c625f 	svcpl	0x006c625f
    2574:	625f726f 	subsvs	r7, pc, #-268435450	; 0xf0000006
    2578:	7300786c 	movwvc	r7, #2156	; 0x86c
    257c:	6b636174 	blvs	18dab54 <_Min_Heap_Size+0x18da354>
    2580:	6172665f 	cmnvs	r2, pc, asr r6
    2584:	745f656d 	ldrbvc	r6, [pc], #-1389	; 258c <_Min_Heap_Size+0x1d8c>
    2588:	5f646600 	svcpl	0x00646600
    258c:	6e69616d 	powvsez	f6, f1, #5.0
    2590:	6174735f 	cmnvs	r4, pc, asr r3
    2594:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
    2598:	006c6c75 	rsbeq	r6, ip, r5, ror ip
    259c:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
    25a0:	61660078 	smcvs	24584	; 0x6008
    25a4:	5f746c75 	svcpl	0x00746c75
    25a8:	706d7564 	rsbvc	r7, sp, r4, ror #10
    25ac:	5f6d625f 	svcpl	0x006d625f
    25b0:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    25b4:	74735f6b 	ldrbtvc	r5, [r3], #-3947	; 0xfffff095
    25b8:	00747261 	rsbseq	r7, r4, r1, ror #4
    25bc:	7473655f 	ldrbtvc	r6, [r3], #-1375	; 0xfffffaa1
    25c0:	006b6361 	rsbeq	r6, fp, r1, ror #6
    25c4:	7473735f 	ldrbtvc	r7, [r3], #-863	; 0xfffffca1
    25c8:	006b6361 	rsbeq	r6, fp, r1, ror #6
    25cc:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    25d0:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
    25d4:	625f706d 	subsvs	r7, pc, #109	; 0x6d
    25d8:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    25dc:	5f6b6361 	svcpl	0x006b6361
    25e0:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
    25e4:	61660074 	smcvs	24580	; 0x6004
    25e8:	5f746c75 	svcpl	0x00746c75
    25ec:	706d7564 	rsbvc	r7, sp, r4, ror #10
    25f0:	63706f5f 	cmnvs	r0, #380	; 0x17c
    25f4:	0065646f 	rsbeq	r6, r5, pc, ror #8
    25f8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    25fc:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
    2600:	635f706d 	cmpvs	pc, #109	; 0x6d
    2604:	736c6c61 	cmnvc	ip, #24832	; 0x6100
    2608:	6b636174 	blvs	18dabe0 <_Min_Heap_Size+0x18da3e0>
    260c:	6e696c00 	cdpvs	12, 6, cr6, cr9, cr0, {0}
    2610:	0072656b 	rsbseq	r6, r2, fp, ror #10
    2614:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    2618:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
    261c:	5f656d61 	svcpl	0x00656d61
    2620:	756e616d 	strbvc	r6, [lr, #-365]!	; 0xfffffe93
    2624:	745f6c61 	ldrbvc	r6, [pc], #-3169	; 262c <_Min_Heap_Size+0x1e2c>
    2628:	63706f00 	cmnvs	r0, #0, 30
    262c:	3165646f 	cmncc	r5, pc, ror #8
    2630:	63706f00 	cmnvs	r0, #0, 30
    2634:	3265646f 	rsbcc	r6, r5, #1862270976	; 0x6f000000
    2638:	61747300 	cmnvs	r4, r0, lsl #6
    263c:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
    2640:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    2644:	6e616d5f 	mcrvs	13, 3, r6, cr1, cr15, {2}
    2648:	006c6175 	rsbeq	r6, ip, r5, ror r1
    264c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    2650:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
    2654:	00656d61 	rsbeq	r6, r5, r1, ror #26
    2658:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    265c:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
    2660:	5f656d61 	svcpl	0x00656d61
    2664:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
    2668:	745f7470 	ldrbvc	r7, [pc], #-1136	; 2670 <_Min_Heap_Size+0x1e70>
    266c:	5f646600 	svcpl	0x00646600
    2670:	6e69616d 	powvsez	f6, f1, #5.0
    2674:	6174735f 	cmnvs	r4, pc, asr r3
    2678:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    267c:	00657361 	rsbeq	r7, r5, r1, ror #6
    2680:	6f6f425f 	svcvs	0x006f425f
    2684:	2e2e006c 	cdpcs	0, 2, cr0, cr14, cr12, {3}
    2688:	2f2e2e2f 	svccs	0x002e2e2f
    268c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 25dc <_Min_Heap_Size+0x1ddc>
    2690:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    2694:	2f736c69 	svccs	0x00736c69
    2698:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    269c:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    26a0:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    26a4:	662f6372 			; <UNDEFINED> instruction: 0x662f6372
    26a8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    26ac:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    26b0:	00632e70 	rsbeq	r2, r3, r0, ror lr
    26b4:	66667562 	strbtvs	r7, [r6], -r2, ror #10
    26b8:	66007265 	strvs	r7, [r0], -r5, ror #4
    26bc:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    26c0:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
    26c4:	61685f70 	smcvs	34288	; 0x85f0
    26c8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    26cc:	61660072 	smcvs	24578	; 0x6002
    26d0:	5f746c75 	svcpl	0x00746c75
    26d4:	706d7564 	rsbvc	r7, sp, r4, ror #10
    26d8:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
    26dc:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
    26e0:	006e7275 	rsbeq	r7, lr, r5, ror r2
    26e4:	65675f5f 	strbvs	r5, [r7, #-3935]!	; 0xfffff0a1
    26e8:	534d5f74 	movtpl	r5, #57204	; 0xdf74
    26ec:	74730050 	ldrbtvc	r0, [r3], #-80	; 0xffffffb0
    26f0:	5f6b6361 	svcpl	0x006b6361
    26f4:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
    26f8:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    26fc:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
    2700:	74655f00 	strbtvc	r5, [r5], #-3840	; 0xfffff100
    2704:	00747865 	rsbseq	r7, r4, r5, ror #16
    2708:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    270c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2710:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2714:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    2718:	61662f73 	smcvs	25331	; 0x62f3
    271c:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    2720:	706d7564 	rsbvc	r7, sp, r4, ror #10
    2724:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
    2728:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    272c:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
    2730:	662f346d 	strtvs	r3, [pc], -sp, ror #8
    2734:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    2738:	6c61682d 	stclvs	8, cr6, [r1], #-180	; 0xffffff4c
    273c:	7500632e 	strvc	r6, [r0, #-814]	; 0xfffffcd2
    2740:	73694c78 	cmnvc	r9, #120, 24	; 0x7800
    2744:	6d655274 	sfmvs	f5, 2, [r5, #-464]!	; 0xfffffe30
    2748:	0065766f 	rsbeq	r7, r5, pc, ror #12
    274c:	6f437670 	svcvs	0x00437670
    2750:	6961746e 	stmdbvs	r1!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    2754:	0072656e 	rsbseq	r6, r2, lr, ror #10
    2758:	6b636954 	blvs	18dccb0 <_Min_Heap_Size+0x18dc4b0>
    275c:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
    2760:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    2764:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
    2768:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    276c:	4c780065 	ldclmi	0, cr0, [r8], #-404	; 0xfffffe6c
    2770:	45747369 	ldrbmi	r7, [r4, #-873]!	; 0xfffffc97
    2774:	7000646e 	andvc	r6, r0, lr, ror #8
    2778:	6e774f76 	mrcvs	15, 3, r4, cr7, cr6, {3}
    277c:	78007265 	stmdavc	r0, {r0, r2, r5, r6, r9, ip, sp, lr}
    2780:	5453494c 	ldrbpl	r4, [r3], #-2380	; 0xfffff6b4
    2784:	4554495f 	ldrbmi	r4, [r4, #-2399]	; 0xfffff6a1
    2788:	7870004d 	ldmdavc	r0!, {r0, r2, r3, r6}^
    278c:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
    2790:	65526f54 	ldrbvs	r6, [r2, #-3924]	; 0xfffff0ac
    2794:	65766f6d 	ldrbvs	r6, [r6, #-3949]!	; 0xfffff093
    2798:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
    279c:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
    27a0:	61697469 	cmnvs	r9, r9, ror #8
    27a4:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    27a8:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
    27ac:	4e787500 	cdpmi	5, 7, cr7, cr8, cr0, {0}
    27b0:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    27b4:	49664f72 	stmdbmi	r6!, {r1, r4, r5, r6, r8, r9, sl, fp, lr}^
    27b8:	736d6574 	cmnvc	sp, #116, 10	; 0x1d000000
    27bc:	694c7600 	stmdbvs	ip, {r9, sl, ip, sp, lr}^
    27c0:	6e497473 	mcrvs	4, 2, r7, cr9, cr3, {3}
    27c4:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
    27c8:	00646e45 	rsbeq	r6, r4, r5, asr #28
    27cc:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
    27d0:	76007478 			; <UNDEFINED> instruction: 0x76007478
    27d4:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    27d8:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    27dc:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    27e0:	78006573 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, sl, sp, lr}
    27e4:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    27e8:	49664f65 	stmdbmi	r6!, {r0, r2, r5, r6, r8, r9, sl, fp, lr}^
    27ec:	7265736e 	rsbvc	r7, r5, #-1207959551	; 0xb8000001
    27f0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    27f4:	49787000 	ldmdbmi	r8!, {ip, sp, lr}^
    27f8:	006d6574 	rsbeq	r6, sp, r4, ror r5
    27fc:	73614255 	cmnvc	r1, #1342177285	; 0x50000005
    2800:	70795465 	rsbsvc	r5, r9, r5, ror #8
    2804:	00745f65 	rsbseq	r5, r4, r5, ror #30
    2808:	74497870 	strbvc	r7, [r9], #-2160	; 0xfffff790
    280c:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
    2810:	7000726f 	andvc	r7, r0, pc, ror #4
    2814:	646e4978 	strbtvs	r4, [lr], #-2424	; 0xfffff688
    2818:	70007865 	andvc	r7, r0, r5, ror #16
    281c:	65725078 	ldrbvs	r5, [r2, #-120]!	; 0xffffff88
    2820:	756f6976 	strbvc	r6, [pc, #-2422]!	; 1eb2 <_Min_Heap_Size+0x16b2>
    2824:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    2828:	2f2e2e2f 	svccs	0x002e2e2f
    282c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 277c <_Min_Heap_Size+0x1f7c>
    2830:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2834:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    2838:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    283c:	2f534f54 	svccs	0x00534f54
    2840:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    2844:	7000632e 	andvc	r6, r0, lr, lsr #6
    2848:	73694c78 	cmnvc	r9, #120, 24	; 0x7800
    284c:	4c780074 	ldclmi	0, cr0, [r8], #-464	; 0xfffffe30
    2850:	00545349 	subseq	r5, r4, r9, asr #6
    2854:	654e7870 	strbvs	r7, [lr, #-2160]	; 0xfffff790
    2858:	73694c77 	cmnvc	r9, #30464	; 0x7700
    285c:	65744974 	ldrbvs	r4, [r4, #-2420]!	; 0xfffff68c
    2860:	4c76006d 	ldclmi	0, cr0, [r6], #-436	; 0xfffffe4c
    2864:	49747369 	ldmdbmi	r4!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
    2868:	7265736e 	rsbvc	r7, r5, #-1207959551	; 0xb8000001
    286c:	50760074 	rsbspl	r0, r6, r4, ror r0
    2870:	4574726f 	ldrbmi	r7, [r4, #-623]!	; 0xfffffd91
    2874:	43746978 	cmnmi	r4, #120, 18	; 0x1e0000
    2878:	69746972 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    287c:	006c6163 	rsbeq	r6, ip, r3, ror #2
    2880:	4e767270 	mrcmi	2, 3, r7, cr6, cr0, {3}
    2884:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    2888:	65755179 	ldrbvs	r5, [r5, #-377]!	; 0xfffffe87
    288c:	65536575 	ldrbvs	r6, [r3, #-1397]	; 0xfffffa8b
    2890:	6e6f4374 	mcrvs	3, 3, r4, cr15, cr4, {3}
    2894:	6e696174 	mcrvs	1, 3, r6, cr9, cr4, {3}
    2898:	53007265 	movwpl	r7, #613	; 0x265
    289c:	70616d65 	rsbvc	r6, r1, r5, ror #26
    28a0:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    28a4:	61746144 	cmnvs	r4, r4, asr #2
    28a8:	6d655300 	stclvs	3, cr5, [r5, #-0]
    28ac:	6f687061 	svcvs	0x00687061
    28b0:	61446572 	hvcvs	18002	; 0x4652
    28b4:	745f6174 	ldrbvc	r6, [pc], #-372	; 28bc <_Min_Heap_Size+0x20bc>
    28b8:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    28bc:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
    28c0:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
    28c4:	65476369 	strbvs	r6, [r7, #-873]	; 0xfffffc97
    28c8:	61745374 	cmnvs	r4, r4, ror r3
    28cc:	42636974 	rsbmi	r6, r3, #116, 18	; 0x1d0000
    28d0:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
    28d4:	78007372 	stmdavc	r0, {r1, r4, r5, r6, r8, r9, ip, sp, lr}
    28d8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    28dc:	63655265 	cmnvs	r5, #1342177286	; 0x50000006
    28e0:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    28e4:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    28e8:	52657565 	rsbpl	r7, r5, #423624704	; 0x19400000
    28ec:	69656365 	stmdbvs	r5!, {r0, r2, r5, r6, r8, r9, sp, lr}^
    28f0:	72466576 	subvc	r6, r6, #494927872	; 0x1d800000
    28f4:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    28f8:	54780052 	ldrbtpl	r0, [r8], #-82	; 0xffffffae
    28fc:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    2900:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    2904:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
    2908:	6365526f 	cmnvs	r5, #-268435450	; 0xf0000006
    290c:	65766965 	ldrbvs	r6, [r6, #-2405]!	; 0xfffff69b
    2910:	48787000 	ldmdami	r8!, {ip, sp, lr}^
    2914:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    2918:	69725072 	ldmdbvs	r2!, {r1, r4, r5, r6, ip, lr}^
    291c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    2920:	73615479 	cmnvc	r1, #2030043136	; 0x79000000
    2924:	6b6f576b 	blvs	1bd86d8 <_Min_Heap_Size+0x1bd7ed8>
    2928:	70006e65 	andvc	r6, r0, r5, ror #28
    292c:	74754d78 	ldrbtvc	r4, [r5], #-3448	; 0xfffff288
    2930:	78007865 	stmdavc	r0, {r0, r2, r5, r6, fp, ip, sp, lr}
    2934:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
    2938:	54554f5f 	ldrbpl	r4, [r5], #-3935	; 0xfffff0a1
    293c:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    2940:	54657565 	strbtpl	r7, [r5], #-1381	; 0xfffffa9b
    2944:	4d656b61 	fstmdbxmi	r5!, {d22-d69}	;@ Deprecated
    2948:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    294c:	75636552 	strbvc	r6, [r3, #-1362]!	; 0xfffffaae
    2950:	76697372 			; <UNDEFINED> instruction: 0x76697372
    2954:	51780065 	cmnpl	r8, r5, rrx
    2958:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    295c:	656c6553 	strbvs	r6, [ip, #-1363]!	; 0xfffffaad
    2960:	72467463 	subvc	r7, r6, #1660944384	; 0x63000000
    2964:	65536d6f 	ldrbvs	r6, [r3, #-3439]	; 0xfffff291
    2968:	6f724674 	svcvs	0x00724674
    296c:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    2970:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    2974:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
    2978:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
    297c:	65536369 	ldrbvs	r6, [r3, #-873]	; 0xfffffc97
    2980:	7246646e 	subvc	r6, r6, #1845493760	; 0x6e000000
    2984:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    2988:	74530052 	ldrbvc	r0, [r3], #-82	; 0xffffffae
    298c:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    2990:	696e694d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, fp, sp, lr}^
    2994:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    2998:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
    299c:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    29a0:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    29a4:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    29a8:	696e6966 	stmdbvs	lr!, {r1, r2, r5, r6, r8, fp, sp, lr}^
    29ac:	796c6574 	stmdbvc	ip!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    29b0:	61547800 	cmpvs	r4, r0, lsl #16
    29b4:	57736b73 			; <UNDEFINED> instruction: 0x57736b73
    29b8:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    29bc:	6f54676e 	svcvs	0x0054676e
    29c0:	646e6553 	strbtvs	r6, [lr], #-1363	; 0xfffffaad
    29c4:	51787500 	cmnpl	r8, r0, lsl #10
    29c8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    29cc:	63617053 	cmnvs	r1, #83	; 0x53
    29d0:	76417365 	strbvc	r7, [r1], -r5, ror #6
    29d4:	616c6961 	cmnvs	ip, r1, ror #18
    29d8:	00656c62 	rsbeq	r6, r5, r2, ror #24
    29dc:	4c785463 	cfldrdmi	mvd5, [r8], #-396	; 0xfffffe74
    29e0:	006b636f 	rsbeq	r6, fp, pc, ror #6
    29e4:	65764f78 	ldrbvs	r4, [r6, #-3960]!	; 0xfffff088
    29e8:	6f6c6672 	svcvs	0x006c6672
    29ec:	756f4377 	strbvc	r4, [pc, #-887]!	; 267d <_Min_Heap_Size+0x1e7d>
    29f0:	7600746e 	strvc	r7, [r0], -lr, ror #8
    29f4:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    29f8:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xfffff1bb
    29fc:	69724372 	ldmdbvs	r2!, {r1, r4, r5, r6, r8, r9, lr}^
    2a00:	61636974 	smcvs	13972	; 0x3694
    2a04:	5f5f006c 	svcpl	0x005f006c
    2a08:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    2a0c:	5f6e6974 	svcpl	0x006e6974
    2a10:	636d656d 	cmnvs	sp, #457179136	; 0x1b400000
    2a14:	78007970 	stmdavc	r0, {r4, r5, r6, r8, fp, ip, sp, lr}
    2a18:	79706f43 	ldmdbvc	r0!, {r0, r1, r6, r8, r9, sl, fp, sp, lr}^
    2a1c:	69736f50 	ldmdbvs	r3!, {r4, r6, r8, r9, sl, fp, sp, lr}^
    2a20:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    2a24:	52787500 	rsbspl	r7, r8, #0, 10
    2a28:	72757465 	rsbsvc	r7, r5, #1694498816	; 0x65000000
    2a2c:	7875006e 	ldmdavc	r5!, {r1, r2, r3, r5, r6}^
    2a30:	6b736154 	blvs	1cdaf88 <_Min_Heap_Size+0x1cda788>
    2a34:	4e746547 	cdpmi	5, 7, cr6, cr4, cr7, {2}
    2a38:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    2a3c:	54664f72 	strbtpl	r4, [r6], #-3954	; 0xfffff08e
    2a40:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    2a44:	75517600 	ldrbvc	r7, [r1, #-1536]	; 0xfffffa00
    2a48:	44657565 	strbtmi	r7, [r5], #-1381	; 0xfffffa9b
    2a4c:	74656c65 	strbtvc	r6, [r5], #-3173	; 0xfffff39b
    2a50:	63700065 	cmnvs	r0, #101	; 0x65
    2a54:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    2a58:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 2948 <_Min_Heap_Size+0x2148>
    2a5c:	53787500 	cmnpl	r8, #0, 10
    2a60:	64657661 	strbtvs	r7, [r5], #-1633	; 0xfffff99f
    2a64:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    2a68:	70757272 	rsbsvc	r7, r5, r2, ror r2
    2a6c:	61745374 	cmnvs	r4, r4, ror r3
    2a70:	00737574 	rsbseq	r7, r3, r4, ror r5
    2a74:	49767270 	ldmdbmi	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    2a78:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    2a7c:	73696c61 	cmnvc	r9, #24832	; 0x6100
    2a80:	77654e65 	strbvc	r4, [r5, -r5, ror #28]!
    2a84:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    2a88:	44780065 	ldrbtmi	r0, [r8], #-101	; 0xffffff9b
    2a8c:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    2a90:	78750033 	ldmdavc	r5!, {r0, r1, r4, r5}^
    2a94:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    2a98:	7a695378 	bvc	1a57880 <_Min_Heap_Size+0x1a57080>
    2a9c:	59780065 	ldmdbpl	r8!, {r0, r2, r5, r6}^
    2aa0:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    2aa4:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
    2aa8:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
    2aac:	4f6c7500 	svcmi	0x006c7500
    2ab0:	69676972 	stmdbvs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2ab4:	426c616e 	rsbmi	r6, ip, #-2147483621	; 0x8000001b
    2ab8:	50455341 	subpl	r5, r5, r1, asr #6
    2abc:	70004952 	andvc	r4, r0, r2, asr r9
    2ac0:	77654e78 			; <UNDEFINED> instruction: 0x77654e78
    2ac4:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    2ac8:	75510065 	ldrbvc	r0, [r1, #-101]	; 0xffffff9b
    2acc:	44657565 	strbtmi	r7, [r5], #-1381	; 0xfffffa9b
    2ad0:	6e696665 	cdpvs	6, 6, cr6, cr9, cr5, {3}
    2ad4:	6f697469 	svcvs	0x00697469
    2ad8:	7270006e 	rsbsvc	r0, r0, #110	; 0x6e
    2adc:	51734976 	cmnpl	r3, r6, ror r9
    2ae0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2ae4:	74706d45 	ldrbtvc	r6, [r0], #-3397	; 0xfffff2bb
    2ae8:	76700079 			; <UNDEFINED> instruction: 0x76700079
    2aec:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    2af0:	70007265 	andvc	r7, r0, r5, ror #4
    2af4:	65477672 	strbvs	r7, [r7, #-1650]	; 0xfffff98e
    2af8:	73694474 	cmnvc	r9, #116, 8	; 0x74000000
    2afc:	65686e69 	strbvs	r6, [r8, #-3689]!	; 0xfffff197
    2b00:	50746972 	rsbspl	r6, r4, r2, ror r9
    2b04:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2b08:	41797469 	cmnmi	r9, r9, ror #8
    2b0c:	72657466 	rsbvc	r7, r5, #1711276032	; 0x66000000
    2b10:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2b14:	0074756f 	rsbseq	r7, r4, pc, ror #10
    2b18:	654d7875 	strbvs	r7, [sp, #-2165]	; 0xfffff78b
    2b1c:	67617373 			; <UNDEFINED> instruction: 0x67617373
    2b20:	61577365 	cmpvs	r7, r5, ror #6
    2b24:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
    2b28:	53780067 	cmnpl	r8, #103	; 0x67
    2b2c:	70616d65 	rsbvc	r6, r1, r5, ror #26
    2b30:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    2b34:	50767000 	rsbspl	r7, r6, r0
    2b38:	4d74726f 	lfmmi	f7, 2, [r4, #-444]!	; 0xfffffe44
    2b3c:	6f6c6c61 	svcvs	0x006c6c61
    2b40:	54760063 	ldrbtpl	r0, [r6], #-99	; 0xffffff9d
    2b44:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    2b48:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    2b4c:	6c41646e 	cfstrdvs	mvd6, [r1], {110}	; 0x6e
    2b50:	5178006c 	cmnpl	r8, ip, rrx
    2b54:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2b58:	6b656550 	blvs	195c0a0 <_Min_Heap_Size+0x195b8a0>
    2b5c:	6e457800 	cdpvs	8, 4, cr7, cr5, cr0, {0}
    2b60:	54797274 	ldrbtpl	r7, [r9], #-628	; 0xfffffd8c
    2b64:	53656d69 	cmnpl	r5, #6720	; 0x1a40
    2b68:	78007465 	stmdavc	r0, {r0, r2, r5, r6, sl, ip, sp, lr}
    2b6c:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    2b70:	5100656c 	tstpl	r0, ip, ror #10
    2b74:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2b78:	4d746553 	cfldr64mi	mvdx6, [r4, #-332]!	; 0xfffffeb4
    2b7c:	65626d65 	strbvs	r6, [r2, #-3429]!	; 0xfffff29b
    2b80:	6e614872 	mcrvs	8, 3, r4, cr1, cr2, {3}
    2b84:	5f656c64 	svcpl	0x00656c64
    2b88:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    2b8c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    2b90:	436c6169 	cmnmi	ip, #1073741850	; 0x4000001a
    2b94:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    2b98:	75707000 	ldrbvc	r7, [r0, #-0]!
    2b9c:	65755163 	ldrbvs	r5, [r5, #-355]!	; 0xfffffe9d
    2ba0:	74536575 	ldrbvc	r6, [r3], #-1397	; 0xfffffa8b
    2ba4:	6761726f 	strbvs	r7, [r1, -pc, ror #4]!
    2ba8:	75510065 	ldrbvc	r0, [r1, #-101]	; 0xffffff9b
    2bac:	53657565 	cmnpl	r5, #423624704	; 0x19400000
    2bb0:	61487465 	cmpvs	r8, r5, ror #8
    2bb4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    2bb8:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    2bbc:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    2bc0:	6d655365 	stclvs	3, cr5, [r5, #-404]!	; 0xfffffe6c
    2bc4:	6f687061 	svcvs	0x00687061
    2bc8:	61546572 	cmpvs	r4, r2, ror r5
    2bcc:	7600656b 	strvc	r6, [r0], -fp, ror #10
    2bd0:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    2bd4:	42746553 	rsbsmi	r6, r4, #348127232	; 0x14c00000
    2bd8:	50455341 	subpl	r5, r5, r1, asr #6
    2bdc:	70004952 	andvc	r4, r0, r2, asr r9
    2be0:	6d754476 	cfldrdvs	mvd4, [r5, #-472]!	; 0xfffffe28
    2be4:	0031796d 	eorseq	r7, r1, sp, ror #18
    2be8:	75447670 	strbvc	r7, [r4, #-1648]	; 0xfffff990
    2bec:	32796d6d 	rsbscc	r6, r9, #6976	; 0x1b40
    2bf0:	44767000 	ldrbtmi	r7, [r6], #-0
    2bf4:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    2bf8:	78750033 	ldmdavc	r5!, {r0, r1, r4, r5}^
    2bfc:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    2c00:	70003279 	andvc	r3, r0, r9, ror r2
    2c04:	6d754476 	cfldrdvs	mvd4, [r5, #-472]!	; 0xfffffe28
    2c08:	0037796d 	eorseq	r7, r7, sp, ror #18
    2c0c:	75447875 	strbvc	r7, [r4, #-2165]	; 0xfffff78b
    2c10:	34796d6d 	ldrbtcc	r6, [r9], #-3437	; 0xfffff293
    2c14:	76727000 	ldrbtvc	r7, [r2], -r0
    2c18:	79706f43 	ldmdbvc	r0!, {r0, r1, r6, r8, r9, sl, fp, sp, lr}^
    2c1c:	61746144 	cmnvs	r4, r4, asr #2
    2c20:	75516f54 	ldrbvc	r6, [r1, #-3924]	; 0xfffff0ac
    2c24:	00657565 	rsbeq	r7, r5, r5, ror #10
    2c28:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    2c2c:	65476575 	strbvs	r6, [r7, #-1397]	; 0xfffffa8b
    2c30:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    2c34:	6e655363 	cdpvs	3, 6, cr5, cr5, cr3, {3}
    2c38:	63750064 	cmnvs	r5, #100	; 0x64
    2c3c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    2c40:	6c616369 	stclvs	3, cr6, [r1], #-420	; 0xfffffe5c
    2c44:	6c41796c 	mcrrvs	9, 6, r7, r1, cr12	; <UNPREDICTABLE>
    2c48:	61636f6c 	cmnvs	r3, ip, ror #30
    2c4c:	00646574 	rsbeq	r6, r4, r4, ror r5
    2c50:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    2c54:	616c506b 	cmnvs	ip, fp, rrx
    2c58:	6e4f6563 	cdpvs	5, 4, cr6, cr15, cr3, {3}
    2c5c:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    2c60:	73694c74 	cmnvc	r9, #116, 24	; 0x7400
    2c64:	76700074 			; <UNDEFINED> instruction: 0x76700074
    2c68:	6b736154 	blvs	1cdb1c0 <_Min_Heap_Size+0x1cda9c0>
    2c6c:	72636e49 	rsbvc	r6, r3, #1168	; 0x490
    2c70:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
    2c74:	74754d74 	ldrbtvc	r4, [r5], #-3444	; 0xfffff28c
    2c78:	65487865 	strbvs	r7, [r8, #-2149]	; 0xfffff79b
    2c7c:	6f43646c 	svcvs	0x0043646c
    2c80:	00746e75 	rsbseq	r6, r4, r5, ror lr
    2c84:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2c88:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2c8c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2c90:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2c94:	6572462f 	ldrbvs	r4, [r2, #-1583]!	; 0xfffff9d1
    2c98:	4f545265 	svcmi	0x00545265
    2c9c:	75712f53 	ldrbvc	r2, [r1, #-3923]!	; 0xfffff0ad
    2ca0:	2e657565 	cdpcs	5, 6, cr7, cr5, cr5, {3}
    2ca4:	78750063 	ldmdavc	r5!, {r0, r1, r5, r6}^
    2ca8:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
    2cac:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2cb0:	51787500 	cmnpl	r8, r0, lsl #10
    2cb4:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2cb8:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    2cbc:	73656761 	cmnvc	r5, #25427968	; 0x1840000
    2cc0:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    2cc4:	46676e69 	strbtmi	r6, [r7], -r9, ror #28
    2cc8:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    2ccc:	75005253 	strvc	r5, [r0, #-595]	; 0xfffffdad
    2cd0:	65725078 	ldrbvs	r5, [r2, #-120]!	; 0xffffff88
    2cd4:	756f6976 	strbvc	r6, [pc, #-2422]!	; 2366 <_Min_Heap_Size+0x1b66>
    2cd8:	73654d73 	cmnvc	r5, #7360	; 0x1cc0
    2cdc:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
    2ce0:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
    2ce4:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    2ce8:	61547800 	cmpvs	r4, r0, lsl #16
    2cec:	72506b73 	subsvc	r6, r0, #117760	; 0x1cc00
    2cf0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2cf4:	69447974 	stmdbvs	r4, {r2, r4, r5, r6, r8, fp, ip, sp, lr}^
    2cf8:	686e6973 	stmdavs	lr!, {r0, r1, r4, r5, r6, r8, fp, sp, lr}^
    2cfc:	74697265 	strbtvc	r7, [r9], #-613	; 0xfffffd9b
    2d00:	4d787500 	cfldr64mi	mvdx7, [r8, #-0]
    2d04:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    2d08:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    2d0c:	70006874 	andvc	r6, r0, r4, ror r8
    2d10:	73497672 	movtvc	r7, #38514	; 0x9672
    2d14:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    2d18:	6c754665 	ldclvs	6, cr4, [r5], #-404	; 0xfffffe6c
    2d1c:	7551006c 	ldrbvc	r0, [r1, #-108]	; 0xffffff94
    2d20:	50657565 	rsbpl	r7, r5, r5, ror #10
    2d24:	746e696f 	strbtvc	r6, [lr], #-2415	; 0xfffff691
    2d28:	00737265 	rsbseq	r7, r3, r5, ror #4
    2d2c:	654e6c75 	strbvs	r6, [lr, #-3189]	; 0xfffff38b
    2d30:	53414277 	movtpl	r4, #4727	; 0x1277
    2d34:	49525045 	ldmdbmi	r2, {r0, r2, r6, ip, lr}^
    2d38:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    2d3c:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
    2d40:	46657669 	strbtmi	r7, [r5], -r9, ror #12
    2d44:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    2d48:	51005253 	tstpl	r0, r3, asr r2
    2d4c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2d50:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    2d54:	745f656c 	ldrbvc	r6, [pc], #-1388	; 2d5c <_Min_Heap_Size+0x255c>
    2d58:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    2d5c:	53657565 	cmnpl	r5, #423624704	; 0x19400000
    2d60:	76007465 	strvc	r7, [r0], -r5, ror #8
    2d64:	6b736154 	blvs	1cdb2bc <_Min_Heap_Size+0x1cdaabc>
    2d68:	63616c50 	cmnvs	r1, #80, 24	; 0x5000
    2d6c:	456e4f65 	strbmi	r4, [lr, #-3941]!	; 0xfffff09b
    2d70:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    2d74:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    2d78:	74736552 	ldrbtvc	r6, [r3], #-1362	; 0xfffffaae
    2d7c:	74636972 	strbtvc	r6, [r3], #-2418	; 0xfffff68e
    2d80:	75006465 	strvc	r6, [r0, #-1125]	; 0xfffffb9b
    2d84:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    2d88:	65476575 	strbvs	r6, [r7, #-1397]	; 0xfffffa8b
    2d8c:	65755174 	ldrbvs	r5, [r5, #-372]!	; 0xfffffe8c
    2d90:	654c6575 	strbvs	r6, [ip, #-1397]	; 0xfffffa8b
    2d94:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    2d98:	78707000 	ldmdavc	r0!, {ip, sp, lr}^
    2d9c:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    2da0:	75516369 	ldrbvc	r6, [r1, #-873]	; 0xfffffc97
    2da4:	00657565 	rsbeq	r7, r5, r5, ror #10
    2da8:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    2dac:	72436575 	subvc	r6, r3, #490733568	; 0x1d400000
    2db0:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    2db4:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    2db8:	61745378 	cmnvs	r4, r8, ror r3
    2dbc:	00636974 	rsbeq	r6, r3, r4, ror r9
    2dc0:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    2dc4:	65476575 	strbvs	r6, [r7, #-1397]	; 0xfffffa8b
    2dc8:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    2dcc:	65724363 	ldrbvs	r4, [r2, #-867]!	; 0xfffffc9d
    2dd0:	00657461 	rsbeq	r7, r5, r1, ror #8
    2dd4:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    2dd8:	72436575 	subvc	r6, r3, #490733568	; 0x1d400000
    2ddc:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    2de0:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    2de4:	6c750078 	ldclvs	0, cr0, [r5], #-480	; 0xfffffe20
    2de8:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    2dec:	73696152 	cmnvc	r9, #-2147483628	; 0x80000014
    2df0:	53414265 	movtpl	r4, #4709	; 0x1265
    2df4:	49525045 	ldmdbmi	r2, {r0, r2, r6, ip, lr}^
    2df8:	54537800 	ldrbpl	r7, [r3], #-2048	; 0xfffff800
    2dfc:	43495441 	movtmi	r5, #37953	; 0x9441
    2e00:	53494c5f 	movtpl	r4, #40031	; 0x9c5f
    2e04:	72700054 	rsbsvc	r0, r0, #84	; 0x54
    2e08:	696e4976 	stmdbvs	lr!, {r1, r2, r4, r5, r6, r8, fp, lr}^
    2e0c:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    2e10:	4d657369 	stclmi	3, cr7, [r5, #-420]!	; 0xfffffe5c
    2e14:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    2e18:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    2e1c:	6e4f656d 	cdpvs	5, 4, cr6, cr15, cr13, {3}
    2e20:	65746e45 	ldrbvs	r6, [r4, #-3653]!	; 0xfffff1bb
    2e24:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
    2e28:	61745300 	cmnvs	r4, r0, lsl #6
    2e2c:	51636974 	smcpl	13972	; 0x3694
    2e30:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2e34:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    2e38:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    2e3c:	6d655265 	sfmvs	f5, 2, [r5, #-404]!	; 0xfffffe6c
    2e40:	4665766f 	strbtmi	r7, [r5], -pc, ror #12
    2e44:	536d6f72 	cmnpl	sp, #456	; 0x1c8
    2e48:	75007465 	strvc	r7, [r0, #-1125]	; 0xfffffb9b
    2e4c:	78614d78 	stmdavc	r1!, {r3, r4, r5, r6, r8, sl, fp, lr}^
    2e50:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    2e54:	51780074 	cmnpl	r8, r4, ror r0
    2e58:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    2e5c:	61657243 	cmnvs	r5, r3, asr #4
    2e60:	65536574 	ldrbvs	r6, [r3, #-1396]	; 0xfffffa8c
    2e64:	69540074 	ldmdbvs	r4, {r2, r4, r5, r6}^
    2e68:	754f656d 	strbvc	r6, [pc, #-1389]	; 2903 <_Min_Heap_Size+0x2103>
    2e6c:	00745f74 	rsbseq	r5, r4, r4, ror pc
    2e70:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    2e74:	746e496b 	strbtvc	r4, [lr], #-2411	; 0xfffff695
    2e78:	616e7265 	cmnvs	lr, r5, ror #4
    2e7c:	7465536c 	strbtvc	r5, [r5], #-876	; 0xfffffc94
    2e80:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    2e84:	5374754f 	cmnpl	r4, #331350016	; 0x13c00000
    2e88:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    2e8c:	4f637000 	svcmi	0x00637000
    2e90:	69676972 	stmdbvs	r7!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2e94:	526c616e 	rsbpl	r6, ip, #-2147483621	; 0x8000001b
    2e98:	50646165 	rsbpl	r6, r4, r5, ror #2
    2e9c:	7469736f 	strbtvc	r7, [r9], #-879	; 0xfffffc91
    2ea0:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    2ea4:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    2ea8:	72436575 	subvc	r6, r3, #490733568	; 0x1d400000
    2eac:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    2eb0:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    2eb4:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    2eb8:	616d6553 	cmnvs	sp, r3, asr r5
    2ebc:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    2ec0:	61745365 	cmnvs	r4, r5, ror #6
    2ec4:	00636974 	rsbeq	r6, r3, r4, ror r9
    2ec8:	654e6c75 	strbvs	r6, [lr, #-3189]	; 0xfffff38b
    2ecc:	73614d77 	cmnvc	r1, #7616	; 0x1dc0
    2ed0:	6c61566b 	stclvs	6, cr5, [r1], #-428	; 0xfffffe54
    2ed4:	75006575 	strvc	r6, [r0, #-1397]	; 0xfffffa8b
    2ed8:	67694878 			; <UNDEFINED> instruction: 0x67694878
    2edc:	74736568 	ldrbtvc	r6, [r3], #-1384	; 0xfffffa98
    2ee0:	6f697250 	svcvs	0x00697250
    2ee4:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2ee8:	6157664f 	cmpvs	r7, pc, asr #12
    2eec:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
    2ef0:	73615467 	cmnvc	r1, #1728053248	; 0x67000000
    2ef4:	7500736b 	strvc	r7, [r0, #-875]	; 0xfffffc95
    2ef8:	65755163 	ldrbvs	r5, [r5, #-355]!	; 0xfffffe9d
    2efc:	79546575 	ldmdbvc	r4, {r0, r2, r4, r5, r6, r8, sl, sp, lr}^
    2f00:	75006570 	strvc	r6, [r0, #-1392]	; 0xfffffa90
    2f04:	6d655378 	stclvs	3, cr5, [r5, #-480]!	; 0xfffffe20
    2f08:	6f687061 	svcvs	0x00687061
    2f0c:	6f436572 	svcvs	0x00436572
    2f10:	00746e75 	rsbseq	r6, r4, r5, ror lr
    2f14:	72576370 	subsvc	r6, r7, #112, 6	; 0xc0000001
    2f18:	54657469 	strbtpl	r7, [r5], #-1129	; 0xfffffb97
    2f1c:	5f5f006f 	svcpl	0x005f006f
    2f20:	38746e69 	ldmdacc	r4!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
    2f24:	7500745f 	strvc	r7, [r0, #-1119]	; 0xfffffba1
    2f28:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    2f2c:	654c6575 	strbvs	r6, [ip, #-1397]	; 0xfffffa8b
    2f30:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    2f34:	6e497800 	cdpvs	8, 4, cr7, cr9, cr0, {0}
    2f38:	69726568 	ldmdbvs	r2!, {r3, r5, r6, r8, sl, sp, lr}^
    2f3c:	636e6174 	cmnvs	lr, #116, 2
    2f40:	63634f65 	cmnvs	r3, #404	; 0x194
    2f44:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    2f48:	63750064 	cmnvs	r5, #100	; 0x64
    2f4c:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    2f50:	75003579 	strvc	r3, [r0, #-1401]	; 0xfffffa87
    2f54:	6d754463 	cfldrdvs	mvd4, [r5, #-396]!	; 0xfffffe74
    2f58:	0036796d 	eorseq	r7, r6, sp, ror #18
    2f5c:	754e7875 	strbvc	r7, [lr, #-2165]	; 0xfffff78b
    2f60:	7265626d 	rsbvc	r6, r5, #-805306362	; 0xd0000006
    2f64:	6154664f 	cmpvs	r4, pc, asr #12
    2f68:	00736b73 	rsbseq	r6, r3, r3, ror fp
    2f6c:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    2f70:	696f5065 	stmdbvs	pc!, {r0, r2, r5, r6, ip, lr}^	; <UNPREDICTABLE>
    2f74:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
    2f78:	00745f73 	rsbseq	r5, r4, r3, ror pc
    2f7c:	654c7875 	strbvs	r7, [ip, #-2165]	; 0xfffff78b
    2f80:	6874676e 	ldmdavs	r4!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}^
    2f84:	75517600 	ldrbvc	r7, [r1, #-1536]	; 0xfffffa00
    2f88:	57657565 	strbpl	r7, [r5, -r5, ror #10]!
    2f8c:	46746961 	ldrbtmi	r6, [r4], -r1, ror #18
    2f90:	654d726f 	strbvs	r7, [sp, #-623]	; 0xfffffd91
    2f94:	67617373 			; <UNDEFINED> instruction: 0x67617373
    2f98:	73655265 	cmnvc	r5, #1342177286	; 0x50000006
    2f9c:	63697274 	cmnvs	r9, #116, 4	; 0x40000007
    2fa0:	00646574 	rsbeq	r6, r4, r4, ror r5
    2fa4:	75517870 	ldrbvc	r7, [r1, #-2160]	; 0xfffff790
    2fa8:	4f657565 	svcmi	0x00657565
    2fac:	6d655372 	stclvs	3, cr5, [r5, #-456]!	; 0xfffffe38
    2fb0:	6f687061 	svcvs	0x00687061
    2fb4:	78006572 	stmdavc	r0, {r1, r4, r5, r6, r8, sl, sp, lr}
    2fb8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    2fbc:	7a695365 	bvc	1a57d58 <_Min_Heap_Size+0x1a57558>
    2fc0:	426e4965 	rsbmi	r4, lr, #1654784	; 0x194000
    2fc4:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    2fc8:	61547800 	cmpvs	r4, r0, lsl #16
    2fcc:	65526b73 	ldrbvs	r6, [r2, #-2931]	; 0xfffff48d
    2fd0:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    2fd4:	006c6c41 	rsbeq	r6, ip, r1, asr #24
    2fd8:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
    2fdc:	47657565 	strbmi	r7, [r5, -r5, ror #10]!
    2fe0:	75517465 	ldrbvc	r7, [r1, #-1125]	; 0xfffffb9b
    2fe4:	49657565 	stmdbmi	r5!, {r0, r2, r5, r6, r8, sl, ip, sp, lr}^
    2fe8:	536d6574 	cmnpl	sp, #116, 10	; 0x1d000000
    2fec:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2ff0:	74497670 	strbvc	r7, [r9], #-1648	; 0xfffff990
    2ff4:	6f546d65 	svcvs	0x00546d65
    2ff8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    2ffc:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    3000:	436b7361 	cmnmi	fp, #-2080374783	; 0x84000001
    3004:	6b636568 	blvs	18dc5ac <_Min_Heap_Size+0x18dbdac>
    3008:	54726f46 	ldrbtpl	r6, [r2], #-3910	; 0xfffff0ba
    300c:	4f656d69 	svcmi	0x00656d69
    3010:	76007475 			; <UNDEFINED> instruction: 0x76007475
    3014:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    3018:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    301c:	75517800 	ldrbvc	r7, [r1, #-2048]	; 0xfffff800
    3020:	49657565 	stmdbmi	r5!, {r0, r2, r5, r6, r8, sl, ip, sp, lr}^
    3024:	65755173 	ldrbvs	r5, [r5, #-371]!	; 0xfffffe8d
    3028:	75466575 	strbvc	r6, [r6, #-1397]	; 0xfffffa8b
    302c:	72466c6c 	subvc	r6, r6, #108, 24	; 0x6c00
    3030:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    3034:	78750052 	ldmdavc	r5!, {r1, r4, r6}^
    3038:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    303c:	73654d65 	cmnvc	r5, #6464	; 0x1940
    3040:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
    3044:	69615773 	stmdbvs	r1!, {r0, r1, r4, r5, r6, r8, r9, sl, ip, lr}^
    3048:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    304c:	54637000 	strbtpl	r7, [r3], #-0
    3050:	006c6961 	rsbeq	r6, ip, r1, ror #18
    3054:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    3058:	65476575 	strbvs	r6, [r7, #-1397]	; 0xfffffa8b
    305c:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    3060:	65724363 	ldrbvs	r4, [r2, #-867]!	; 0xfffffc9d
    3064:	53657461 	cmnpl	r5, #1627389952	; 0x61000000
    3068:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    306c:	78700063 	ldmdavc	r0!, {r0, r1, r5, r6}^
    3070:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    3074:	53780065 	cmnpl	r8, #101	; 0x65
    3078:	49544154 	ldmdbmi	r4, {r2, r4, r6, r8, lr}^
    307c:	494c5f43 	stmdbmi	ip, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    3080:	495f5453 	ldmdbmi	pc, {r0, r1, r4, r6, sl, ip, lr}^	; <UNPREDICTABLE>
    3084:	004d4554 	subeq	r4, sp, r4, asr r5
    3088:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    308c:	73694d6b 	cmnvc	r9, #6848	; 0x1ac0
    3090:	59646573 	stmdbpl	r4!, {r0, r1, r4, r5, r6, r8, sl, sp, lr}^
    3094:	646c6569 	strbtvs	r6, [ip], #-1385	; 0xfffffa97
    3098:	61547800 	cmpvs	r4, r0, lsl #16
    309c:	72506b73 	subsvc	r6, r0, #117760	; 0x1cc00
    30a0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    30a4:	6e497974 			; <UNDEFINED> instruction: 0x6e497974
    30a8:	69726568 	ldmdbvs	r2!, {r3, r5, r6, r8, sl, sp, lr}^
    30ac:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    30b0:	75636552 	strbvc	r6, [r3, #-1362]!	; 0xfffffaae
    30b4:	76697372 			; <UNDEFINED> instruction: 0x76697372
    30b8:	6c614365 	stclvs	3, cr4, [r1], #-404	; 0xfffffe6c
    30bc:	756f436c 	strbvc	r4, [pc, #-876]!	; 2d58 <_Min_Heap_Size+0x2558>
    30c0:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    30c4:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    30c8:	6c655365 	stclvs	3, cr5, [r5], #-404	; 0xfffffe6c
    30cc:	46746365 	ldrbtmi	r6, [r4], -r5, ror #6
    30d0:	536d6f72 	cmnpl	sp, #456	; 0x1c8
    30d4:	78007465 	stmdavc	r0, {r0, r2, r5, r6, sl, ip, sp, lr}
    30d8:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    30dc:	65655065 	strbvs	r5, [r5, #-101]!	; 0xffffff9b
    30e0:	6f72466b 	svcvs	0x0072466b
    30e4:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    30e8:	48787500 	ldmdami	r8!, {r8, sl, ip, sp, lr}^
    30ec:	65686769 	strbvs	r6, [r8, #-1897]!	; 0xfffff897
    30f0:	61577473 	cmpvs	r7, r3, ror r4
    30f4:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
    30f8:	69725067 	ldmdbvs	r2!, {r0, r1, r2, r5, r6, ip, lr}^
    30fc:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    3100:	72700079 	rsbsvc	r0, r0, #121	; 0x79
    3104:	706f4376 	rsbvc	r4, pc, r6, ror r3	; <UNPREDICTABLE>
    3108:	74614479 	strbtvc	r4, [r1], #-1145	; 0xfffffb87
    310c:	6f724661 	svcvs	0x00724661
    3110:	6575516d 	ldrbvs	r5, [r5, #-365]!	; 0xfffffe93
    3114:	76006575 			; <UNDEFINED> instruction: 0x76006575
    3118:	6b736154 	blvs	1cdb670 <_Min_Heap_Size+0x1cdae70>
    311c:	6f697250 	svcvs	0x00697250
    3120:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    3124:	69736944 	ldmdbvs	r3!, {r2, r6, r8, fp, sp, lr}^
    3128:	7265686e 	rsbvc	r6, r5, #7208960	; 0x6e0000
    312c:	66417469 	strbvs	r7, [r1], -r9, ror #8
    3130:	54726574 	ldrbtpl	r6, [r2], #-1396	; 0xfffffa8c
    3134:	6f656d69 	svcvs	0x00656d69
    3138:	78007475 	stmdavc	r0, {r0, r2, r4, r5, r6, sl, ip, sp, lr}
    313c:	6b736154 	blvs	1cdb694 <_Min_Heap_Size+0x1cdae94>
    3140:	43746547 	cmnmi	r4, #297795584	; 0x11c00000
    3144:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    3148:	6154746e 	cmpvs	r4, lr, ror #8
    314c:	61486b73 	hvcvs	34483	; 0x86b3
    3150:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    3154:	48637000 	stmdami	r3!, {ip, sp, lr}^
    3158:	00646165 	rsbeq	r6, r4, r5, ror #2
    315c:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    3160:	69476575 	stmdbvs	r7, {r0, r2, r4, r5, r6, r8, sl, sp, lr}^
    3164:	754d6576 	strbvc	r6, [sp, #-1398]	; 0xfffffa8a
    3168:	52786574 	rsbspl	r6, r8, #116, 10	; 0x1d000000
    316c:	72756365 	rsbsvc	r6, r5, #-1811939327	; 0x94000001
    3170:	65766973 	ldrbvs	r6, [r6, #-2419]!	; 0xfffff68d
    3174:	76727000 	ldrbtvc	r7, [r2], -r0
    3178:	6f6c6e55 	svcvs	0x006c6e55
    317c:	75516b63 	ldrbvc	r6, [r1, #-2915]	; 0xfffff49d
    3180:	00657565 	rsbeq	r7, r5, r5, ror #10
    3184:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    3188:	65476575 	strbvs	r6, [r7, #-1397]	; 0xfffffa8b
    318c:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    3190:	73655263 	cmnvc	r5, #805306374	; 0x30000006
    3194:	78007465 	stmdavc	r0, {r0, r2, r5, r6, sl, ip, sp, lr}
    3198:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    319c:	51734965 	cmnpl	r3, r5, ror #18
    31a0:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    31a4:	74706d45 	ldrbtvc	r6, [r0], #-3397	; 0xfffff2bb
    31a8:	6f724679 	svcvs	0x00724679
    31ac:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    31b0:	55517800 	ldrbpl	r7, [r1, #-2048]	; 0xfffff800
    31b4:	00455545 	subeq	r5, r5, r5, asr #10
    31b8:	75517870 	ldrbvc	r7, [r1, #-2160]	; 0xfffff790
    31bc:	53657565 	cmnpl	r5, #423624704	; 0x19400000
    31c0:	6f437465 	svcvs	0x00437465
    31c4:	6961746e 	stmdbvs	r1!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    31c8:	0072656e 	rsbseq	r6, r2, lr, ror #10
    31cc:	736f5078 	cmnvc	pc, #120	; 0x78
    31d0:	6f697469 	svcvs	0x00697469
    31d4:	5178006e 	cmnpl	r8, lr, rrx
    31d8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    31dc:	54646441 	strbtpl	r6, [r4], #-1089	; 0xfffffbbf
    31e0:	7465536f 	strbtvc	r5, [r5], #-879	; 0xfffffc91
    31e4:	78526300 	ldmdavc	r2, {r8, r9, sp, lr}^
    31e8:	6b636f4c 	blvs	18def20 <_Min_Heap_Size+0x18de720>
    31ec:	54537800 	ldrbpl	r7, [r3], #-2048	; 0xfffff800
    31f0:	43495441 	movtmi	r5, #37953	; 0x9441
    31f4:	4555515f 	ldrbmi	r5, [r5, #-351]	; 0xfffffea1
    31f8:	75004555 	strvc	r4, [r0, #-1365]	; 0xfffffaab
    31fc:	65764578 	ldrbvs	r4, [r6, #-1400]!	; 0xfffffa88
    3200:	7551746e 	ldrbvc	r7, [r1, #-1134]	; 0xfffffb92
    3204:	4c657565 	cfstr64mi	mvdx7, [r5], #-404	; 0xfffffe6c
    3208:	74676e65 	strbtvc	r6, [r7], #-3685	; 0xfffff19b
    320c:	54780068 	ldrbtpl	r0, [r8], #-104	; 0xffffff98
    3210:	526b7361 	rsbpl	r7, fp, #-2080374783	; 0x84000001
    3214:	766f6d65 	strbtvc	r6, [pc], -r5, ror #26
    3218:	6f724665 	svcvs	0x00724665
    321c:	6576456d 	ldrbvs	r4, [r6, #-1389]!	; 0xfffffa93
    3220:	694c746e 	stmdbvs	ip, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    3224:	53007473 	movwpl	r7, #1139	; 0x473
    3228:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    322c:	73694c63 	cmnvc	r9, #25344	; 0x6300
    3230:	00745f74 	rsbseq	r5, r4, r4, ror pc
    3234:	65755178 	ldrbvs	r5, [r5, #-376]!	; 0xfffffe88
    3238:	72436575 	subvc	r6, r3, #490733568	; 0x1d400000
    323c:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    3240:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    3244:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
    3248:	616d6553 	cmnvs	sp, r3, asr r5
    324c:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    3250:	74530065 	ldrbvc	r0, [r3], #-101	; 0xffffff9b
    3254:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    3258:	6b736154 	blvs	1cdb7b0 <_Min_Heap_Size+0x1cdafb0>
    325c:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    3260:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    3264:	70004449 	andvc	r4, r0, r9, asr #8
    3268:	73615463 	cmnvc	r1, #1660944384	; 0x63000000
    326c:	6d614e6b 	stclvs	14, cr4, [r1, #-428]!	; 0xfffffe54
    3270:	54760065 	ldrbtpl	r0, [r6], #-101	; 0xffffff9b
    3274:	506b7361 	rsbpl	r7, fp, r1, ror #6
    3278:	6563616c 	strbvs	r6, [r3, #-364]!	; 0xfffffe94
    327c:	6e556e4f 	cdpvs	14, 5, cr6, cr5, cr15, {2}
    3280:	6564726f 	strbvs	r7, [r4, #-623]!	; 0xfffffd91
    3284:	45646572 	strbmi	r6, [r4, #-1394]!	; 0xfffffa8e
    3288:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    328c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    3290:	78707000 	ldmdavc	r0!, {ip, sp, lr}^
    3294:	656c6449 	strbvs	r6, [ip, #-1097]!	; 0xfffffbb7
    3298:	6b736154 	blvs	1cdb7f0 <_Min_Heap_Size+0x1cdaff0>
    329c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    32a0:	6675426b 	ldrbtvs	r4, [r5], -fp, ror #4
    32a4:	00726566 	rsbseq	r6, r2, r6, ror #10
    32a8:	726f5078 	rsbvc	r5, pc, #120	; 0x78
    32ac:	61745374 	cmnvs	r4, r4, ror r3
    32b0:	63537472 	cmpvs	r3, #1912602624	; 0x72000000
    32b4:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    32b8:	0072656c 	rsbseq	r6, r2, ip, ror #10
    32bc:	72507875 	subsvc	r7, r0, #7667712	; 0x750000
    32c0:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    32c4:	70007974 	andvc	r7, r0, r4, ror r9
    32c8:	6e6f4378 	mcrvs	3, 3, r4, cr15, cr8, {3}
    32cc:	694c7473 	stmdbvs	ip, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    32d0:	78007473 	stmdavc	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    32d4:	6b736154 	blvs	1cdb82c <_Min_Heap_Size+0x1cdb02c>
    32d8:	49746547 	ldmdbmi	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    32dc:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    32e0:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    32e4:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    32e8:	726f4665 	rsbvc	r4, pc, #105906176	; 0x6500000
    32ec:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    32f0:	53787000 	cmnpl	r8, #0
    32f4:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    32f8:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    32fc:	75536500 	ldrbvc	r6, [r3, #-1280]	; 0xfffffb00
    3300:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    3304:	00646564 	rsbeq	r6, r4, r4, ror #10
    3308:	75447875 	strbvc	r7, [r4, #-2165]	; 0xfffff78b
    330c:	31796d6d 	cmncc	r9, sp, ror #26
    3310:	54780032 	ldrbtpl	r0, [r8], #-50	; 0xffffffce
    3314:	446b7361 	strbtmi	r7, [fp], #-865	; 0xfffffc9f
    3318:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    331c:	69746e55 	ldmdbvs	r4!, {r0, r2, r4, r6, r9, sl, fp, sp, lr}^
    3320:	7875006c 	ldmdavc	r5!, {r2, r3, r5, r6}^
    3324:	796c6e4f 	stmdbvc	ip!, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}^
    3328:	4d656e4f 	stclmi	14, cr6, [r5, #-316]!	; 0xfffffec4
    332c:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    3330:	646c6548 	strbtvs	r6, [ip], #-1352	; 0xfffffab8
    3334:	426c7500 	rsbmi	r7, ip, #0, 10
    3338:	54737469 	ldrbtpl	r7, [r3], #-1129	; 0xfffffb97
    333c:	656c436f 	strbvs	r4, [ip, #-879]!	; 0xfffffc91
    3340:	6e4f7261 	cdpvs	2, 4, cr7, cr15, cr1, {3}
    3344:	74697845 	strbtvc	r7, [r9], #-2117	; 0xfffff7bb
    3348:	6f4e6500 	svcvs	0x004e6500
    334c:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    3350:	75006e6f 	strvc	r6, [r0, #-3695]	; 0xfffff191
    3354:	706f5478 	rsbvc	r5, pc, r8, ror r4	; <UNPREDICTABLE>
    3358:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    335c:	69725079 	ldmdbvs	r2!, {r0, r3, r4, r5, r6, ip, lr}^
    3360:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    3364:	78700079 	ldmdavc	r0!, {r0, r3, r4, r5, r6}^
    3368:	616c6544 	cmnvs	ip, r4, asr #10
    336c:	4c646579 	cfstr64mi	mvdx6, [r4], #-484	; 0xfffffe1c
    3370:	00747369 	rsbseq	r7, r4, r9, ror #6
    3374:	76457870 			; <UNDEFINED> instruction: 0x76457870
    3378:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
    337c:	00747369 	rsbseq	r7, r4, r9, ror #6
    3380:	68635378 	stmdavs	r3!, {r3, r4, r5, r6, r8, r9, ip, lr}^
    3384:	6c756465 	cfldrdvs	mvd6, [r5], #-404	; 0xfffffe6c
    3388:	75527265 	ldrbvc	r7, [r2, #-613]	; 0xfffffd9b
    338c:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
    3390:	74530067 	ldrbvc	r0, [r3], #-103	; 0xffffff99
    3394:	546b6361 	strbtpl	r6, [fp], #-865	; 0xfffffc9f
    3398:	5f657079 	svcpl	0x00657079
    339c:	6c750074 	ldclvs	0, cr0, [r5], #-464	; 0xfffffe30
    33a0:	73746942 	cmnvc	r4, #1081344	; 0x108000
    33a4:	6c436f54 	mcrrvs	15, 5, r6, r3, cr4
    33a8:	00726165 	rsbseq	r6, r2, r5, ror #2
    33ac:	65447875 	strbvs	r7, [r4, #-2165]	; 0xfffff78b
    33b0:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    33b4:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
    33b8:	6157736b 	cmpvs	r7, fp, ror #6
    33bc:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
    33c0:	656c4367 	strbvs	r4, [ip, #-871]!	; 0xfffffc99
    33c4:	70556e61 	subsvc	r6, r5, r1, ror #28
    33c8:	65447800 	strbvs	r7, [r4, #-2048]	; 0xfffff800
    33cc:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    33d0:	49424354 	stmdbmi	r2, {r2, r4, r6, r8, r9, lr}^
    33d4:	6c64496e 			; <UNDEFINED> instruction: 0x6c64496e
    33d8:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    33dc:	5078006b 	rsbspl	r0, r8, fp, rrx
    33e0:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    33e4:	756f4364 	strbvc	r4, [pc, #-868]!	; 3088 <_Min_Heap_Size+0x2888>
    33e8:	0073746e 	rsbseq	r7, r3, lr, ror #8
    33ec:	65527870 	ldrbvs	r7, [r2, #-2160]	; 0xfffff790
    33f0:	54796461 	ldrbtpl	r6, [r9], #-1121	; 0xfffffb9f
    33f4:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    33f8:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    33fc:	45780073 	ldrbmi	r0, [r8, #-115]!	; 0xffffff8d
    3400:	63657078 	cmnvs	r5, #120	; 0x78
    3404:	49646574 	stmdbmi	r4!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    3408:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    340c:	00656d69 	rsbeq	r6, r5, r9, ror #26
    3410:	75447875 	strbvc	r7, [r4, #-2165]	; 0xfffff78b
    3414:	32796d6d 	rsbscc	r6, r9, #6976	; 0x1b40
    3418:	54780030 	ldrbtpl	r0, [r8], #-48	; 0xffffffd0
    341c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    3420:	6b736154 	blvs	1cdb978 <_Min_Heap_Size+0x1cdb178>
    3424:	00424354 	subeq	r4, r2, r4, asr r3
    3428:	724f6375 	subvc	r6, pc, #-738197503	; 0xd4000001
    342c:	6e696769 	cdpvs	7, 6, cr6, cr9, cr9, {3}
    3430:	6f4e6c61 	svcvs	0x004e6c61
    3434:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    3438:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    343c:	54760065 	ldrbtpl	r0, [r6], #-101	; 0xffffff9b
    3440:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    3444:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    3448:	754f656d 	strbvc	r6, [pc, #-1389]	; 2ee3 <_Min_Heap_Size+0x26e3>
    344c:	61745374 	cmnvs	r4, r4, ror r3
    3450:	78006574 	stmdavc	r0, {r2, r4, r5, r6, r8, sl, sp, lr}
    3454:	6b736154 	blvs	1cdb9ac <_Min_Heap_Size+0x1cdb1ac>
    3458:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    345c:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    3460:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    3464:	6f724679 	svcvs	0x00724679
    3468:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    346c:	69597800 	ldmdbvs	r9, {fp, ip, sp, lr}^
    3470:	50646c65 	rsbpl	r6, r4, r5, ror #24
    3474:	69646e65 	stmdbvs	r4!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    3478:	0073676e 	rsbseq	r6, r3, lr, ror #14
    347c:	53637570 	cmnpl	r3, #112, 10	; 0x1c000000
    3480:	6b636174 	blvs	18dba58 <_Min_Heap_Size+0x18db258>
    3484:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0xfffff6be
    3488:	65447800 	strbvs	r7, [r4, #-2048]	; 0xfffff800
    348c:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
    3490:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
    3494:	73694c6b 	cmnvc	r9, #27392	; 0x6b00
    3498:	78003174 	stmdavc	r0, {r2, r4, r5, r6, r8, ip, sp}
    349c:	616c6544 	cmnvs	ip, r4, asr #10
    34a0:	54646579 	strbtpl	r6, [r4], #-1401	; 0xfffffa87
    34a4:	4c6b7361 	stclmi	3, cr7, [fp], #-388	; 0xfffffe7c
    34a8:	32747369 	rsbscc	r7, r4, #-1543503871	; 0xa4000001
    34ac:	4f787000 	svcmi	0x00787000
    34b0:	66726576 			; <UNDEFINED> instruction: 0x66726576
    34b4:	65776f6c 	ldrbvs	r6, [r7, #-3948]!	; 0xfffff094
    34b8:	6c654464 	cfstrdvs	mvd4, [r5], #-400	; 0xfffffe70
    34bc:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    34c0:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    34c4:	70557800 	subsvc	r7, r5, r0, lsl #16
    34c8:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
    34cc:	63695464 	cmnvs	r9, #100, 8	; 0x64000000
    34d0:	756f436b 	strbvc	r4, [pc, #-875]!	; 316d <_Min_Heap_Size+0x296d>
    34d4:	7800746e 	stmdavc	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    34d8:	6b736154 	blvs	1cdba30 <_Min_Heap_Size+0x1cdb230>
    34dc:	63746143 	cmnvs	r4, #-1073741808	; 0xc0000010
    34e0:	54705568 	ldrbtpl	r5, [r0], #-1384	; 0xfffffa98
    34e4:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
    34e8:	506c7500 	rsbpl	r7, ip, r0, lsl #10
    34ec:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
    34f0:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
    34f4:	52650073 	rsbpl	r0, r5, #115	; 0x73
    34f8:	72757465 	rsbsvc	r7, r5, #1694498816	; 0x65000000
    34fc:	5478006e 	ldrbtpl	r0, [r8], #-110	; 0xffffff92
    3500:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    3504:	7365526f 	cmnvc	r5, #-268435450	; 0xf0000006
    3508:	00656d75 	rsbeq	r6, r5, r5, ror sp
    350c:	6e497875 	mcrvs	8, 2, r7, cr9, cr5, {3}
    3510:	54786564 	ldrbtpl	r6, [r8], #-1380	; 0xfffffa9c
    3514:	656c436f 	strbvs	r4, [ip, #-879]!	; 0xfffffc91
    3518:	75007261 	strvc	r7, [r0, #-609]	; 0xfffffd9f
    351c:	6d754463 	cfldrdvs	mvd4, [r5, #-396]!	; 0xfffffe74
    3520:	3931796d 	ldmdbcc	r1!, {r0, r2, r3, r5, r6, r8, fp, ip, sp, lr}
    3524:	61547600 	cmpvs	r4, r0, lsl #12
    3528:	65536b73 	ldrbvs	r6, [r3, #-2931]	; 0xfffff48d
    352c:	70704174 	rsbsvc	r4, r0, r4, ror r1
    3530:	6163696c 	cmnvs	r3, ip, ror #18
    3534:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    3538:	6b736154 	blvs	1cdba90 <_Min_Heap_Size+0x1cdb290>
    353c:	00676154 	rsbeq	r6, r7, r4, asr r1
    3540:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    3544:	72437265 	subvc	r7, r3, #1342177286	; 0x50000006
    3548:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    354c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    3550:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    3554:	5365006b 	cmnpl	r5, #107	; 0x6b
    3558:	7065656c 	rsbvc	r6, r5, ip, ror #10
    355c:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    3560:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    3564:	75007375 	strvc	r7, [r0, #-885]	; 0xfffffc8b
    3568:	67694878 			; <UNDEFINED> instruction: 0x67694878
    356c:	50726568 	rsbspl	r6, r2, r8, ror #10
    3570:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    3574:	52797469 	rsbspl	r7, r9, #1761607680	; 0x69000000
    3578:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    357c:	6b736154 	blvs	1cdbad4 <_Min_Heap_Size+0x1cdb2d4>
    3580:	54780073 	ldrbtpl	r0, [r8], #-115	; 0xffffff8d
    3584:	436b7361 	cmnmi	fp, #-2080374783	; 0x84000001
    3588:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    358c:	61745365 	cmnvs	r4, r5, ror #6
    3590:	00636974 	rsbeq	r6, r3, r4, ror r9
    3594:	546b7374 	strbtpl	r7, [fp], #-884	; 0xfffffc8c
    3598:	76004243 	strvc	r4, [r0], -r3, asr #4
    359c:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    35a0:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    35a4:	476e6f69 	strbmi	r6, [lr, -r9, ror #30]!
    35a8:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    35ac:	5472656d 	ldrbtpl	r6, [r2], #-1389	; 0xfffffa93
    35b0:	4d6b7361 	stclmi	3, cr7, [fp, #-388]!	; 0xfffffe7c
    35b4:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    35b8:	54780079 	ldrbtpl	r0, [r8], #-121	; 0xffffff87
    35bc:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    35c0:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
    35c4:	6f4e6369 	svcvs	0x004e6369
    35c8:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    35cc:	55787000 	ldrbpl	r7, [r8, #-0]!
    35d0:	6f6c626e 	svcvs	0x006c626e
    35d4:	64656b63 	strbtvs	r6, [r5], #-2915	; 0xfffff49d
    35d8:	00424354 	subeq	r4, r2, r4, asr r3
    35dc:	656c4378 	strbvs	r4, [ip, #-888]!	; 0xfffffc88
    35e0:	6f437261 	svcvs	0x00437261
    35e4:	4f746e75 	svcmi	0x00746e75
    35e8:	6978456e 	ldmdbvs	r8!, {r1, r2, r3, r5, r6, r8, sl, lr}^
    35ec:	72700074 	rsbsvc	r0, r0, #116	; 0x74
    35f0:	65724376 	ldrbvs	r4, [r2, #-886]!	; 0xfffffc8a
    35f4:	54657461 	strbtpl	r7, [r5], #-1121	; 0xfffffb9f
    35f8:	006b7361 	rsbeq	r7, fp, r1, ror #6
    35fc:	616c4578 	smcvs	50264	; 0xc458
    3600:	64657370 	strbtvs	r7, [r5], #-880	; 0xfffffc90
    3604:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    3608:	62416500 	subvs	r6, r1, #0, 10
    360c:	5374726f 	cmnpl	r4, #-268435450	; 0xf0000006
    3610:	7065656c 	rsbvc	r6, r5, ip, ror #10
    3614:	65536500 	ldrbvs	r6, [r3, #-1280]	; 0xfffffb00
    3618:	6c615674 	stclvs	6, cr5, [r1], #-464	; 0xfffffe30
    361c:	69576575 	ldmdbvs	r7, {r0, r2, r4, r5, r6, r8, sl, sp, lr}^
    3620:	764f6874 			; <UNDEFINED> instruction: 0x764f6874
    3624:	72777265 	rsbsvc	r7, r7, #1342177286	; 0x50000006
    3628:	00657469 	rsbeq	r7, r5, r9, ror #8
    362c:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    3630:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    3634:	6b636954 	blvs	18ddb8c <_Min_Heap_Size+0x18dd38c>
    3638:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    363c:	6f724674 	svcvs	0x00724674
    3640:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    3644:	426c7500 	rsbmi	r7, ip, #0, 10
    3648:	54737469 	ldrbtpl	r7, [r3], #-1129	; 0xfffffb97
    364c:	656c436f 	strbvs	r4, [ip, #-879]!	; 0xfffffc91
    3650:	6e4f7261 	cdpvs	2, 4, cr7, cr15, cr1, {3}
    3654:	72746e45 	rsbsvc	r6, r4, #1104	; 0x450
    3658:	49780079 	ldmdbmi	r8!, {r0, r3, r4, r5, r6}^
    365c:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    3660:	4e6b7361 	cdpmi	3, 6, cr7, cr11, cr1, {3}
    3664:	49656d61 	stmdbmi	r5!, {r0, r5, r6, r8, sl, fp, sp, lr}^
    3668:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
    366c:	65507800 	ldrbvs	r7, [r0, #-2048]	; 0xfffff800
    3670:	6e69646e 	cdpvs	4, 6, cr6, cr9, cr14, {3}
    3674:	61655267 	cmnvs	r5, r7, ror #4
    3678:	694c7964 	stmdbvs	ip, {r2, r5, r6, r8, fp, ip, sp, lr}^
    367c:	70007473 	andvc	r7, r0, r3, ror r4
    3680:	72437672 	subvc	r7, r3, #119537664	; 0x7200000
    3684:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    3688:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    368c:	61546369 	cmpvs	r4, r9, ror #6
    3690:	78006b73 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    3694:	6b736154 	blvs	1cdbbec <_Min_Heap_Size+0x1cdb3ec>
    3698:	41746547 	cmnmi	r4, r7, asr #10
    369c:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
    36a0:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    36a4:	61546e6f 	cmpvs	r4, pc, ror #28
    36a8:	61546b73 	cmpvs	r4, r3, ror fp
    36ac:	54780067 	ldrbtpl	r0, [r8], #-103	; 0xffffff99
    36b0:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    36b4:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    36b8:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
    36bc:	696d7265 	stmdbvs	sp!, {r0, r2, r5, r6, r9, ip, sp, lr}^
    36c0:	6974616e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, sp, lr}^
    36c4:	76006e6f 	strvc	r6, [r0], -pc, ror #28
    36c8:	6b736154 	blvs	1cdbc20 <_Min_Heap_Size+0x1cdb420>
    36cc:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    36d0:	61745374 	cmnvs	r4, r4, ror r3
    36d4:	70006574 	andvc	r6, r0, r4, ror r5
    36d8:	6d655478 	cfstrdvs	mvd5, [r5, #-480]!	; 0xfffffe20
    36dc:	78750070 	ldmdavc	r5!, {r4, r5, r6}^
    36e0:	55706f54 	ldrbpl	r6, [r0, #-3924]!	; 0xfffff0ac
    36e4:	50646573 	rsbpl	r6, r4, r3, ror r5
    36e8:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    36ec:	00797469 	rsbseq	r7, r9, r9, ror #8
    36f0:	61547875 	cmpvs	r4, r5, ror r8
    36f4:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    36f8:	61745374 	cmnvs	r4, r4, ror r3
    36fc:	69486b63 	stmdbvs	r8, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    3700:	61576867 	cmpvs	r7, r7, ror #16
    3704:	4d726574 	cfldr64mi	mvdx6, [r2, #-464]!	; 0xfffffe30
    3708:	006b7261 	rsbeq	r7, fp, r1, ror #4
    370c:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    3710:	636e496b 	cmnvs	lr, #1753088	; 0x1ac000
    3714:	656d6572 	strbvs	r6, [sp, #-1394]!	; 0xfffffa8e
    3718:	6954746e 	ldmdbvs	r4, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    371c:	76006b63 	strvc	r6, [r0], -r3, ror #22
    3720:	6b736154 	blvs	1cdbc78 <_Min_Heap_Size+0x1cdb478>
    3724:	70657453 	rsbvc	r7, r5, r3, asr r4
    3728:	6b636954 	blvs	18ddc80 <_Min_Heap_Size+0x18dd480>
    372c:	53787500 	cmnpl	r8, #0, 10
    3730:	6b636174 	blvs	18dbd08 <_Min_Heap_Size+0x18db508>
    3734:	74706544 	ldrbtvc	r6, [r0], #-1348	; 0xfffffabc
    3738:	4e650068 	cdpmi	0, 6, cr0, cr5, cr8, {3}
    373c:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    3740:	74634179 	strbtvc	r4, [r3], #-377	; 0xfffffe87
    3744:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    3748:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    374c:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    3750:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
    3754:	7500656c 	strvc	r6, [r0, #-1388]	; 0xfffffa94
    3758:	6c654463 	cfstrdvs	mvd4, [r5], #-396	; 0xfffffe74
    375c:	62417961 	subvs	r7, r1, #1589248	; 0x184000
    3760:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    3764:	74530064 	ldrbvc	r0, [r3], #-100	; 0xffffff9c
    3768:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    376c:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    3770:	6d657449 	cfstrdvs	mvd7, [r5, #-292]!	; 0xfffffedc
    3774:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    3778:	6b636954 	blvs	18ddcd0 <_Min_Heap_Size+0x18dd4d0>
    377c:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    3780:	54760074 	ldrbtpl	r0, [r6], #-116	; 0xffffff8c
    3784:	456b7361 	strbmi	r7, [fp, #-865]!	; 0xfffffc9f
    3788:	6353646e 	cmpvs	r3, #1845493760	; 0x6e000000
    378c:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    3790:	0072656c 	rsbseq	r6, r2, ip, ror #10
    3794:	61547875 	cmpvs	r4, r5, ror r8
    3798:	72506b73 	subsvc	r6, r0, #117760	; 0x1cc00
    379c:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    37a0:	65477974 	strbvs	r7, [r7, #-2420]	; 0xfffff68c
    37a4:	43780074 	cmnmi	r8, #116	; 0x74
    37a8:	74736e6f 	ldrbtvc	r6, [r3], #-3695	; 0xfffff191
    37ac:	6b636954 	blvs	18ddd04 <_Min_Heap_Size+0x18dd504>
    37b0:	6e756f43 	cdpvs	15, 7, cr6, cr5, cr3, {2}
    37b4:	53780074 	cmnpl	r8, #116	; 0x74
    37b8:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    37bc:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
    37c0:	6b736154 	blvs	1cdbd18 <_Min_Heap_Size+0x1cdb518>
    37c4:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    37c8:	4e637000 	cdpmi	0, 6, cr7, cr3, cr0, {0}
    37cc:	00656d61 	rsbeq	r6, r5, r1, ror #26
    37d0:	764f7870 			; <UNDEFINED> instruction: 0x764f7870
    37d4:	6c667265 	sfmvs	f7, 2, [r6], #-404	; 0xfffffe6c
    37d8:	6544776f 	strbvs	r7, [r4, #-1903]	; 0xfffff891
    37dc:	6579616c 	ldrbvs	r6, [r9, #-364]!	; 0xfffffe94
    37e0:	73615464 	cmnvc	r1, #100, 8	; 0x64000000
    37e4:	73694c6b 	cmnvc	r9, #27392	; 0x6b00
    37e8:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    37ec:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    37f0:	70003579 	andvc	r3, r0, r9, ror r5
    37f4:	65477672 	strbvs	r7, [r7, #-1650]	; 0xfffff98e
    37f8:	70784574 	rsbsvc	r4, r8, r4, ror r5
    37fc:	65746365 	ldrbvs	r6, [r4, #-869]!	; 0xfffffc9b
    3800:	6c644964 			; <UNDEFINED> instruction: 0x6c644964
    3804:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    3808:	49780065 	ldmdbmi	r8!, {r0, r2, r5, r6}^
    380c:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    3810:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    3814:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    3818:	65007365 	strvs	r7, [r0, #-869]	; 0xfffffc9b
    381c:	6b736154 	blvs	1cdbd74 <_Min_Heap_Size+0x1cdb574>
    3820:	666e6f43 	strbtvs	r6, [lr], -r3, asr #30
    3824:	536d7269 	cmnpl	sp, #-1879048186	; 0x90000006
    3828:	7065656c 	rsbvc	r6, r5, ip, ror #10
    382c:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    3830:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    3834:	75007375 	strvc	r7, [r0, #-885]	; 0xfffffc8b
    3838:	746f4e6c 	strbtvc	r4, [pc], #-3692	; 3840 <_Min_Heap_Size+0x3040>
    383c:	65696669 	strbvs	r6, [r9, #-1641]!	; 0xfffff997
    3840:	6c615664 	stclvs	6, cr5, [r1], #-400	; 0xfffffe70
    3844:	70006575 	andvc	r6, r0, r5, ror r5
    3848:	74655278 	strbtvc	r5, [r5], #-632	; 0xfffffd88
    384c:	006e7275 	rsbeq	r7, lr, r5, ror r2
    3850:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    3854:	6d65526b 	sfmvs	f5, 2, [r5, #-428]!	; 0xfffffe54
    3858:	4665766f 	strbtmi	r7, [r5], -pc, ror #12
    385c:	556d6f72 	strbpl	r6, [sp, #-3954]!	; 0xfffff08e
    3860:	64726f6e 	ldrbtvs	r6, [r2], #-3950	; 0xfffff092
    3864:	64657265 	strbtvs	r7, [r5], #-613	; 0xfffffd9b
    3868:	6e657645 	cdpvs	6, 6, cr7, cr5, cr5, {2}
    386c:	73694c74 	cmnvc	r9, #116, 24	; 0x7400
    3870:	78750074 	ldmdavc	r5!, {r2, r4, r5, r6}^
    3874:	6574754d 	ldrbvs	r7, [r4, #-1357]!	; 0xfffffab3
    3878:	48736578 	ldmdami	r3!, {r3, r4, r5, r6, r8, sl, sp, lr}^
    387c:	00646c65 	rsbeq	r6, r4, r5, ror #24
    3880:	74655365 	strbtvc	r5, [r5], #-869	; 0xfffffc9b
    3884:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    3888:	74695765 	strbtvc	r5, [r9], #-1893	; 0xfffff89b
    388c:	74756f68 	ldrbtvc	r6, [r5], #-3944	; 0xfffff098
    3890:	7265764f 	rsbvc	r7, r5, #82837504	; 0x4f00000
    3894:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    3898:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    389c:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    38a0:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
    38a4:	6f4e6369 	svcvs	0x004e6369
    38a8:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    38ac:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    38b0:	68537800 	ldmdavs	r3, {fp, ip, sp, lr}^
    38b4:	646c756f 	strbtvs	r7, [ip], #-1391	; 0xfffffa91
    38b8:	616c6544 	cmnvs	ip, r4, asr #10
    38bc:	72700079 	rsbsvc	r0, r0, #121	; 0x79
    38c0:	6c644976 			; <UNDEFINED> instruction: 0x6c644976
    38c4:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    38c8:	7270006b 	rsbsvc	r0, r0, #107	; 0x6b
    38cc:	61655376 	smcvs	21814	; 0x5536
    38d0:	46686372 			; <UNDEFINED> instruction: 0x46686372
    38d4:	614e726f 	cmpvs	lr, pc, ror #4
    38d8:	6957656d 	ldmdbvs	r7, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    38dc:	6e696874 	mcrvs	8, 3, r6, cr9, cr4, {3}
    38e0:	676e6953 			; <UNDEFINED> instruction: 0x676e6953
    38e4:	694c656c 	stmdbvs	ip, {r2, r3, r5, r6, r8, sl, sp, lr}^
    38e8:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    38ec:	7361546c 	cmnvc	r1, #108, 8	; 0x6c000000
    38f0:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    38f4:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    38f8:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    38fc:	61547966 	cmpvs	r4, r6, ror #18
    3900:	7000656b 	andvc	r6, r0, fp, ror #10
    3904:	64417672 	strbvs	r7, [r1], #-1650	; 0xfffff98e
    3908:	77654e64 	strbvc	r4, [r5, -r4, ror #28]!
    390c:	6b736154 	blvs	1cdbe64 <_Min_Heap_Size+0x1cdb664>
    3910:	65526f54 	ldrbvs	r6, [r2, #-3924]	; 0xfffff0ac
    3914:	4c796461 	cfldrdmi	mvd6, [r9], #-388	; 0xfffffe7c
    3918:	00747369 	rsbseq	r7, r4, r9, ror #6
    391c:	6f487870 	svcvs	0x00487870
    3920:	75466b6f 	strbvc	r6, [r6, #-2927]	; 0xfffff491
    3924:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    3928:	65006e6f 	strvs	r6, [r0, #-3695]	; 0xfffff191
    392c:	64616552 	strbtvs	r6, [r1], #-1362	; 0xfffffaae
    3930:	72700079 	rsbsvc	r0, r0, #121	; 0x79
    3934:	65724376 	ldrbvs	r4, [r2, #-886]!	; 0xfffffc8a
    3938:	49657461 	stmdbmi	r5!, {r0, r5, r6, sl, ip, sp, lr}^
    393c:	54656c64 	strbtpl	r6, [r5], #-3172	; 0xfffff39c
    3940:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    3944:	61546500 	cmpvs	r4, r0, lsl #10
    3948:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    394c:	61745374 	cmnvs	r4, r4, ror r3
    3950:	70006574 	andvc	r6, r0, r4, ror r5
    3954:	53787570 	cmnpl	r8, #112, 10	; 0x1c000000
    3958:	6b636174 	blvs	18dbf30 <_Min_Heap_Size+0x18db730>
    395c:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    3960:	70007265 	andvc	r7, r0, r5, ror #4
    3964:	77654e78 			; <UNDEFINED> instruction: 0x77654e78
    3968:	00424354 	subeq	r4, r2, r4, asr r3
    396c:	75517875 	ldrbvc	r7, [r1, #-2165]	; 0xfffff78b
    3970:	00657565 	rsbeq	r7, r5, r5, ror #10
    3974:	54787070 	ldrbtpl	r7, [r8], #-112	; 0xffffff90
    3978:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    397c:	6b736154 	blvs	1cdbed4 <_Min_Heap_Size+0x1cdb6d4>
    3980:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    3984:	6675426b 	ldrbtvs	r4, [r5], -fp, ror #4
    3988:	00726566 	rsbseq	r6, r2, r6, ror #10
    398c:	65695978 	strbvs	r5, [r9, #-2424]!	; 0xfffff688
    3990:	634f646c 	movtvs	r6, #62572	; 0xf46c
    3994:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
    3998:	4d006465 	cfstrsmi	mvf6, [r0, #-404]	; 0xfffffe6c
    399c:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    39a0:	67655279 			; <UNDEFINED> instruction: 0x67655279
    39a4:	5f6e6f69 	svcpl	0x006e6f69
    39a8:	4e780074 	mrcmi	0, 3, r0, cr8, cr4, {3}
    39ac:	54747865 	ldrbtpl	r7, [r4], #-2149	; 0xfffff79b
    39b0:	556b7361 	strbpl	r7, [fp, #-865]!	; 0xfffffc9f
    39b4:	6f6c626e 	svcvs	0x006c626e
    39b8:	69546b63 	ldmdbvs	r4, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    39bc:	7000656d 	andvc	r6, r0, sp, ror #10
    39c0:	726f5078 	rsbvc	r5, pc, #120	; 0x78
    39c4:	696e4974 	stmdbvs	lr!, {r2, r4, r5, r6, r8, fp, lr}^
    39c8:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    39cc:	53657369 	cmnpl	r5, #-1543503871	; 0xa4000001
    39d0:	6b636174 	blvs	18dbfa8 <_Min_Heap_Size+0x18db7a8>
    39d4:	44787000 	ldrbtmi	r7, [r8], #-0
    39d8:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    39dc:	78700031 	ldmdavc	r0!, {r0, r4, r5}^
    39e0:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    39e4:	65003679 	strvs	r3, [r0, #-1657]	; 0xfffff987
    39e8:	656c6544 	strbvs	r6, [ip, #-1348]!	; 0xfffffabc
    39ec:	00646574 	rsbeq	r6, r4, r4, ror r5
    39f0:	61546c75 	cmpvs	r4, r5, ror ip
    39f4:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    39f8:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    39fc:	746f4e63 	strbtvc	r4, [pc], #-3683	; 3a04 <_Min_Heap_Size+0x3204>
    3a00:	56796669 	ldrbtpl	r6, [r9], -r9, ror #12
    3a04:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    3a08:	61656c43 	cmnvs	r5, r3, asr #24
    3a0c:	6c750072 	ldclvs	0, cr0, [r5], #-456	; 0xfffffe38
    3a10:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    3a14:	6e496874 	mcrvs	8, 2, r6, cr9, cr4, {3}
    3a18:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0xfffff6be
    3a1c:	70700073 	rsbsvc	r0, r0, r3, ror r0
    3a20:	6c644978 			; <UNDEFINED> instruction: 0x6c644978
    3a24:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    3a28:	4243546b 	submi	r5, r3, #1795162112	; 0x6b000000
    3a2c:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    3a30:	70007265 	andvc	r7, r0, r5, ror #4
    3a34:	65527672 	ldrbvs	r7, [r2, #-1650]	; 0xfffff98e
    3a38:	4e746573 	mrcmi	5, 3, r6, cr4, cr3, {3}
    3a3c:	54747865 	ldrbtpl	r7, [r4], #-2149	; 0xfffff79b
    3a40:	556b7361 	strbpl	r7, [fp, #-865]!	; 0xfffffc9f
    3a44:	6f6c626e 	svcvs	0x006c626e
    3a48:	69546b63 	ldmdbvs	r4, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    3a4c:	7500656d 	strvc	r6, [r0, #-1389]	; 0xfffffa93
    3a50:	77654e78 			; <UNDEFINED> instruction: 0x77654e78
    3a54:	6f697250 	svcvs	0x00697250
    3a58:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    3a5c:	73615400 	cmnvc	r1, #0, 8
    3a60:	6e75466b 	cdpvs	6, 7, cr4, cr5, cr11, {3}
    3a64:	6f697463 	svcvs	0x00697463
    3a68:	00745f6e 	rsbseq	r5, r4, lr, ror #30
    3a6c:	506c7570 	rsbpl	r7, ip, r0, ror r5
    3a70:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    3a74:	4e73756f 	cdpmi	5, 7, cr7, cr3, cr15, {3}
    3a78:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    3a7c:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    3a80:	566e6f69 	strbtpl	r6, [lr], -r9, ror #30
    3a84:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    3a88:	54787000 	ldrbtpl	r7, [r8], #-0
    3a8c:	4f656d69 	svcmi	0x00656d69
    3a90:	75007475 	strvc	r7, [r0, #-1141]	; 0xfffffb8b
    3a94:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    3a98:	6972506b 	ldmdbvs	r2!, {r0, r1, r3, r5, r6, ip, lr}^
    3a9c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    3aa0:	74654779 	strbtvc	r4, [r5], #-1913	; 0xfffff887
    3aa4:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 3994 <_Min_Heap_Size+0x3194>
    3aa8:	00525349 	subseq	r5, r2, r9, asr #6
    3aac:	75446375 	strbvc	r6, [r4, #-885]	; 0xfffffc8b
    3ab0:	32796d6d 	rsbscc	r6, r9, #6976	; 0x1b40
    3ab4:	54780031 	ldrbtpl	r0, [r8], #-49	; 0xffffffcf
    3ab8:	476b7361 	strbmi	r7, [fp, -r1, ror #6]!
    3abc:	69547465 	ldmdbvs	r4, {r0, r2, r5, r6, sl, ip, sp, lr}^
    3ac0:	6f436b63 	svcvs	0x00436b63
    3ac4:	00746e75 	rsbseq	r6, r4, r5, ror lr
    3ac8:	63695478 	cmnvs	r9, #120, 8	; 0x78000000
    3acc:	6f54736b 	svcvs	0x0054736b
    3ad0:	706d754a 	rsbvc	r7, sp, sl, asr #10
    3ad4:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    3ad8:	4e6b7361 	cdpmi	3, 6, cr7, cr11, cr1, {3}
    3adc:	65626d75 	strbvs	r6, [r2, #-3445]!	; 0xfffff28b
    3ae0:	41650072 	smcmi	20482	; 0x5002
    3ae4:	6f697463 	svcvs	0x00697463
    3ae8:	7875006e 	ldmdavc	r5!, {r1, r2, r3, r5, r6}^
    3aec:	6b736154 	blvs	1cdc044 <_Min_Heap_Size+0x1cdb844>
    3af0:	65736552 	ldrbvs	r6, [r3, #-1362]!	; 0xfffffaae
    3af4:	65764574 	ldrbvs	r4, [r6, #-1396]!	; 0xfffffa8c
    3af8:	7449746e 	strbvc	r7, [r9], #-1134	; 0xfffffb92
    3afc:	61566d65 	cmpvs	r6, r5, ror #26
    3b00:	0065756c 	rsbeq	r7, r5, ip, ror #10
    3b04:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    3b08:	6972506b 	ldmdbvs	r2!, {r0, r1, r3, r5, r6, ip, lr}^
    3b0c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    3b10:	74655379 	strbtvc	r5, [r5], #-889	; 0xfffffc87
    3b14:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    3b18:	426b7361 	rsbmi	r7, fp, #-2080374783	; 0x84000001
    3b1c:	50657361 	rsbpl	r7, r5, r1, ror #6
    3b20:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    3b24:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    3b28:	72467465 	subvc	r7, r6, #1694498816	; 0x65000000
    3b2c:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    3b30:	54650052 	strbtpl	r0, [r5], #-82	; 0xffffffae
    3b34:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    3b38:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    3b3c:	78707000 	ldmdavc	r0!, {ip, sp, lr}^
    3b40:	6b736154 	blvs	1cdc098 <_Min_Heap_Size+0x1cdb898>
    3b44:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    3b48:	70007265 	andvc	r7, r0, r5, ror #4
    3b4c:	646e4578 	strbtvs	r4, [lr], #-1400	; 0xfffffa88
    3b50:	6b72614d 	blvs	1c9c08c <_Min_Heap_Size+0x1c9b88c>
    3b54:	70007265 	andvc	r7, r0, r5, ror #4
    3b58:	64497875 	strbvs	r7, [r9], #-2165	; 0xfffff78b
    3b5c:	6154656c 	cmpvs	r4, ip, ror #10
    3b60:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
    3b64:	536b6361 	cmnpl	fp, #-2080374783	; 0x84000001
    3b68:	00657a69 	rsbeq	r7, r5, r9, ror #20
    3b6c:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    3b70:	4e6f546b 	cdpmi	4, 6, cr5, cr15, cr11, {3}
    3b74:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    3b78:	54780079 	ldrbtpl	r0, [r8], #-121	; 0xffffff87
    3b7c:	006b7361 	rsbeq	r7, fp, r1, ror #6
    3b80:	75447870 	strbvc	r7, [r4, #-2160]	; 0xfffff790
    3b84:	31796d6d 	cmncc	r9, sp, ror #26
    3b88:	54780034 	ldrbtpl	r0, [r8], #-52	; 0xffffffcc
    3b8c:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    3b90:	6575516f 	ldrbvs	r5, [r5, #-367]!	; 0xfffffe91
    3b94:	65007972 	strvs	r7, [r0, #-2418]	; 0xfffff68e
    3b98:	42746553 	rsbsmi	r6, r4, #348127232	; 0x14c00000
    3b9c:	00737469 	rsbseq	r7, r3, r9, ror #8
    3ba0:	4d454d78 	stclmi	13, cr4, [r5, #-480]	; 0xfffffe20
    3ba4:	5f59524f 	svcpl	0x0059524f
    3ba8:	49474552 	stmdbmi	r7, {r1, r4, r6, r8, sl, lr}^
    3bac:	75004e4f 	strvc	r4, [r0, #-3663]	; 0xfffff1b1
    3bb0:	72754378 	rsbsvc	r4, r5, #120, 6	; 0xe0000001
    3bb4:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    3bb8:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    3bbc:	676e654c 	strbvs	r6, [lr, -ip, asr #10]!
    3bc0:	76006874 			; <UNDEFINED> instruction: 0x76006874
    3bc4:	6b736154 	blvs	1cdc11c <_Min_Heap_Size+0x1cdb91c>
    3bc8:	656c6544 	strbvs	r6, [ip, #-1348]!	; 0xfffffabc
    3bcc:	75006574 	strvc	r6, [r0, #-1396]	; 0xfffffa8c
    3bd0:	6d754463 	cfldrdvs	mvd4, [r5, #-396]!	; 0xfffffe74
    3bd4:	0037796d 	eorseq	r7, r7, sp, ror #18
    3bd8:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    3bdc:	6c61436b 	stclvs	3, cr4, [r1], #-428	; 0xfffffe54
    3be0:	7070416c 	rsbsvc	r4, r0, ip, ror #2
    3be4:	6163696c 	cmnvs	r3, ip, ror #18
    3be8:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    3bec:	6b736154 	blvs	1cdc144 <_Min_Heap_Size+0x1cdb944>
    3bf0:	6b6f6f48 	blvs	1bdf918 <_Min_Heap_Size+0x1bdf118>
    3bf4:	50787500 	rsbspl	r7, r8, r0, lsl #10
    3bf8:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    3bfc:	54797469 	ldrbtpl	r7, [r9], #-1129	; 0xfffffb97
    3c00:	6573556f 	ldrbvs	r5, [r3, #-1391]!	; 0xfffffa91
    3c04:	61547600 	cmpvs	r4, r0, lsl #12
    3c08:	77536b73 			; <UNDEFINED> instruction: 0x77536b73
    3c0c:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    3c10:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    3c14:	00747865 	rsbseq	r7, r4, r5, ror #16
    3c18:	6d754e78 	ldclvs	14, cr4, [r5, #-480]!	; 0xfffffe20
    3c1c:	764f664f 	strbvc	r6, [pc], -pc, asr #12
    3c20:	6c667265 	sfmvs	f7, 2, [r6], #-404	; 0xfffffe6c
    3c24:	0073776f 	rsbseq	r7, r3, pc, ror #14
    3c28:	65724278 	ldrbvs	r4, [r2, #-632]!	; 0xfffffd88
    3c2c:	6f4c6b61 	svcvs	0x004c6b61
    3c30:	7800706f 	stmdavc	r0, {r0, r1, r2, r3, r5, r6, ip, sp, lr}
    3c34:	6b736154 	blvs	1cdc18c <_Min_Heap_Size+0x1cdb98c>
    3c38:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
    3c3c:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    3c40:	66754263 	ldrbtvs	r4, [r5], -r3, ror #4
    3c44:	73726566 	cmnvc	r2, #427819008	; 0x19800000
    3c48:	43787000 	cmnmi	r8, #0
    3c4c:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    3c50:	4354746e 	cmpmi	r4, #1845493760	; 0x6e000000
    3c54:	78750042 	ldmdavc	r5!, {r1, r6}^
    3c58:	68676948 	stmdavs	r7!, {r3, r6, r8, fp, sp, lr}^
    3c5c:	50747365 	rsbspl	r7, r4, r5, ror #6
    3c60:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    3c64:	57797469 	ldrbpl	r7, [r9, -r9, ror #8]!
    3c68:	69746961 	ldmdbvs	r4!, {r0, r5, r6, r8, fp, sp, lr}^
    3c6c:	6154676e 	cmpvs	r4, lr, ror #14
    3c70:	78006b73 	stmdavc	r0, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}
    3c74:	756f6853 	strbvc	r6, [pc, #-2131]!	; 3429 <_Min_Heap_Size+0x2c29>
    3c78:	6c42646c 	cfstrdvs	mvd6, [r2], {108}	; 0x6c
    3c7c:	006b636f 	rsbeq	r6, fp, pc, ror #6
    3c80:	78654e63 	stmdavc	r5!, {r0, r1, r5, r6, r9, sl, fp, lr}^
    3c84:	61684374 	smcvs	33844	; 0x8434
    3c88:	78700072 	ldmdavc	r0!, {r1, r4, r5, r6}^
    3c8c:	6b736154 	blvs	1cdc1e4 <_Min_Heap_Size+0x1cdb9e4>
    3c90:	00676154 	rsbeq	r6, r7, r4, asr r1
    3c94:	49767270 	ldmdbmi	r6!, {r4, r5, r6, r9, ip, sp, lr}^
    3c98:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    3c9c:	73696c61 	cmnvc	r9, #24832	; 0x6100
    3ca0:	77654e65 	strbvc	r4, [r5, -r5, ror #28]!
    3ca4:	6b736154 	blvs	1cdc1fc <_Min_Heap_Size+0x1cdb9fc>
    3ca8:	50767000 	rsbspl	r7, r6, r0
    3cac:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
    3cb0:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
    3cb4:	78700073 	ldmdavc	r0!, {r0, r1, r4, r5, r6}^
    3cb8:	616c6544 	cmnvs	ip, r4, asr #10
    3cbc:	54646579 	strbtpl	r6, [r4], #-1401	; 0xfffffa87
    3cc0:	4c6b7361 	stclmi	3, cr7, [fp], #-388	; 0xfffffe7c
    3cc4:	00747369 	rsbseq	r7, r4, r9, ror #6
    3cc8:	54767270 	ldrbtpl	r7, [r6], #-624	; 0xfffffd90
    3ccc:	496b7361 	stmdbmi	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    3cd0:	73615473 	cmnvc	r1, #1929379840	; 0x73000000
    3cd4:	7375536b 	cmnvc	r5, #-1409286143	; 0xac000001
    3cd8:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    3cdc:	78006465 	stmdavc	r0, {r0, r2, r5, r6, sl, sp, lr}
    3ce0:	6b736154 	blvs	1cdc238 <_Min_Heap_Size+0x1cdba38>
    3ce4:	41746547 	cmnmi	r4, r7, asr #10
    3ce8:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
    3cec:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    3cf0:	61546e6f 	cmpvs	r4, pc, ror #28
    3cf4:	61546b73 	cmpvs	r4, r3, ror fp
    3cf8:	6f724667 	svcvs	0x00724667
    3cfc:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    3d00:	77537800 	ldrbvc	r7, [r3, -r0, lsl #16]
    3d04:	68637469 	stmdavs	r3!, {r0, r3, r5, r6, sl, ip, sp, lr}^
    3d08:	75716552 	ldrbvc	r6, [r1, #-1362]!	; 0xfffffaae
    3d0c:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
    3d10:	4d787000 	ldclmi	0, cr7, [r8, #-0]
    3d14:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    3d18:	646c6f48 	strbtvs	r6, [ip], #-3912	; 0xfffff0b8
    3d1c:	70007265 	andvc	r7, r0, r5, ror #4
    3d20:	61745378 	cmnvs	r4, r8, ror r3
    3d24:	70006b63 	andvc	r6, r0, r3, ror #22
    3d28:	69547870 	ldmdbvs	r4, {r4, r5, r6, fp, ip, sp, lr}^
    3d2c:	5472656d 	ldrbtpl	r6, [r2], #-1389	; 0xfffffa93
    3d30:	546b7361 	strbtpl	r7, [fp], #-865	; 0xfffffc9f
    3d34:	75424243 	strbvc	r4, [r2, #-579]	; 0xfffffdbd
    3d38:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
    3d3c:	61547800 	cmpvs	r4, r0, lsl #16
    3d40:	6f546b73 	svcvs	0x00546b73
    3d44:	656c6544 	strbvs	r6, [ip, #-1348]!	; 0xfffffabc
    3d48:	75006574 	strvc	r6, [r0, #-1396]	; 0xfffffa8c
    3d4c:	6c61566c 	stclvs	6, cr5, [r1], #-432	; 0xfffffe50
    3d50:	78006575 	stmdavc	r0, {r0, r2, r4, r5, r6, r8, sl, sp, lr}
    3d54:	6b736154 	blvs	1cdc2ac <_Min_Heap_Size+0x1cdbaac>
    3d58:	75536f54 	ldrbvc	r6, [r3, #-3924]	; 0xfffff0ac
    3d5c:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    3d60:	50760064 	rsbspl	r0, r6, r4, rrx
    3d64:	4574726f 	ldrbmi	r7, [r4, #-623]!	; 0xfffffd91
    3d68:	6353646e 	cmpvs	r3, #1845493760	; 0x6e000000
    3d6c:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    3d70:	0072656c 	rsbseq	r6, r2, ip, ror #10
    3d74:	64497870 	strbvs	r7, [r9], #-2160	; 0xfffff790
    3d78:	6154656c 	cmpvs	r4, ip, ror #10
    3d7c:	75466b73 	strbvc	r6, [r6, #-2931]	; 0xfffff48d
    3d80:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    3d84:	70006e6f 	andvc	r6, r0, pc, ror #28
    3d88:	65725078 	ldrbvs	r5, [r2, #-120]!	; 0xffffff88
    3d8c:	756f6976 	strbvc	r6, [pc, #-2422]!	; 341e <_Min_Heap_Size+0x2c1e>
    3d90:	6b615773 	blvs	1859b64 <_Min_Heap_Size+0x1859364>
    3d94:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    3d98:	53780065 	cmnpl	r8, #101	; 0x65
    3d9c:	49544154 	ldmdbmi	r4, {r2, r4, r6, r8, lr}^
    3da0:	43545f43 	cmpmi	r4, #268	; 0x10c
    3da4:	54780042 	ldrbtpl	r0, [r8], #-66	; 0xffffffbe
    3da8:	416b7361 	cmnmi	fp, r1, ror #6
    3dac:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    3db0:	616c6544 	cmnvs	ip, r4, asr #10
    3db4:	54780079 	ldrbtpl	r0, [r8], #-121	; 0xffffff87
    3db8:	526b7361 	rsbpl	r7, fp, #-2080374783	; 0x84000001
    3dbc:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
    3dc0:	6f724665 	svcvs	0x00724665
    3dc4:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    3dc8:	446c7500 	strbtmi	r7, [ip], #-1280	; 0xfffffb00
    3dcc:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    3dd0:	70003831 	andvc	r3, r0, r1, lsr r8
    3dd4:	6f4e6c75 	svcvs	0x004e6c75
    3dd8:	69666974 	stmdbvs	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    3ddc:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
    3de0:	61566e6f 	cmpvs	r6, pc, ror #28
    3de4:	0065756c 	rsbeq	r7, r5, ip, ror #10
    3de8:	64497875 	strbvs	r7, [r9], #-2165	; 0xfffff78b
    3dec:	6154656c 	cmpvs	r4, ip, ror #10
    3df0:	74536b73 	ldrbvc	r6, [r3], #-2931	; 0xfffff48d
    3df4:	006b6361 	rsbeq	r6, fp, r1, ror #6
    3df8:	6b736154 	blvs	1cdc350 <_Min_Heap_Size+0x1cdbb50>
    3dfc:	6b6f6f48 	blvs	1bdfb24 <_Min_Heap_Size+0x1bdf324>
    3e00:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    3e04:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    3e08:	6500745f 	strvs	r7, [r0, #-1119]	; 0xfffffba1
    3e0c:	6e617453 	mcrvs	4, 3, r7, cr1, cr3, {2}
    3e10:	64726164 	ldrbtvs	r6, [r2], #-356	; 0xfffffe9c
    3e14:	65656c53 	strbvs	r6, [r5, #-3155]!	; 0xfffff3ad
    3e18:	50760070 	rsbspl	r0, r6, r0, ror r0
    3e1c:	5274726f 	rsbspl	r7, r4, #-268435450	; 0xf0000006
    3e20:	65736961 	ldrbvs	r6, [r3, #-2401]!	; 0xfffff69f
    3e24:	45534142 	ldrbmi	r4, [r3, #-322]	; 0xfffffebe
    3e28:	00495250 	subeq	r5, r9, r0, asr r2
    3e2c:	6f437875 	svcvs	0x00437875
    3e30:	00746e75 	rsbseq	r6, r4, r5, ror lr
    3e34:	546f4e65 	strbtpl	r4, [pc], #-3685	; 3e3c <_Min_Heap_Size+0x363c>
    3e38:	736b7361 	cmnvc	fp, #-2080374783	; 0x84000001
    3e3c:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    3e40:	54676e69 	strbtpl	r6, [r7], #-3689	; 0xfffff197
    3e44:	6f656d69 	svcvs	0x00656d69
    3e48:	70007475 	andvc	r7, r0, r5, ror r4
    3e4c:	6e456375 	mcrvs	3, 2, r6, cr5, cr5, {3}
    3e50:	53664f64 	cmnpl	r6, #100, 30	; 0x190
    3e54:	6b636174 	blvs	18dc42c <_Min_Heap_Size+0x18dbc2c>
    3e58:	4d787000 	ldclmi	0, cr7, [r8, #-0]
    3e5c:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    3e60:	646c6f48 	strbtvs	r6, [ip], #-3912	; 0xfffff0b8
    3e64:	43547265 	cmpmi	r4, #1342177286	; 0x50000006
    3e68:	63700042 	cmnvs	r0, #66	; 0x42
    3e6c:	6b736154 	blvs	1cdc3c4 <_Min_Heap_Size+0x1cdbbc4>
    3e70:	4e746547 	cdpmi	5, 7, cr6, cr4, cr7, {2}
    3e74:	00656d61 	rsbeq	r6, r5, r1, ror #26
    3e78:	63695478 	cmnvs	r9, #120, 8	; 0x78000000
    3e7c:	7800736b 	stmdavc	r0, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}
    3e80:	426e6143 	rsbmi	r6, lr, #-1073741808	; 0xc0000010
    3e84:	6b636f6c 	blvs	18dfc3c <_Min_Heap_Size+0x18df43c>
    3e88:	65646e49 	strbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    3e8c:	696e6966 	stmdbvs	lr!, {r1, r2, r5, r6, r8, fp, sp, lr}^
    3e90:	796c6574 	stmdbvc	ip!, {r2, r4, r5, r6, r8, sl, sp, lr}^
    3e94:	75526500 	ldrbvc	r6, [r2, #-1280]	; 0xfffffb00
    3e98:	6e696e6e 	cdpvs	14, 6, cr6, cr9, cr14, {3}
    3e9c:	63700067 	cmnvs	r0, #103	; 0x67
    3ea0:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    3ea4:	75516f54 	ldrbvc	r6, [r1, #-3924]	; 0xfffff0ac
    3ea8:	00797265 	rsbseq	r7, r9, r5, ror #4
    3eac:	61427670 	hvcvs	10080	; 0x2760
    3eb0:	64416573 	strbvs	r6, [r1], #-1395	; 0xfffffa8d
    3eb4:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    3eb8:	54780073 	ldrbtpl	r0, [r8], #-115	; 0xffffff8d
    3ebc:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
    3ec0:	65446f54 	strbvs	r6, [r4, #-3924]	; 0xfffff0ac
    3ec4:	0079616c 	rsbseq	r6, r9, ip, ror #2
    3ec8:	73615476 	cmnvc	r1, #1979711488	; 0x76000000
    3ecc:	6e65476b 	cdpvs	7, 6, cr4, cr5, cr11, {3}
    3ed0:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    3ed4:	69746f4e 	ldmdbvs	r4!, {r1, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
    3ed8:	69477966 	stmdbvs	r7, {r1, r2, r5, r6, r8, fp, ip, sp, lr}^
    3edc:	72466576 	subvc	r6, r6, #494927872	; 0x1d800000
    3ee0:	53496d6f 	movtpl	r6, #40303	; 0x9d6f
    3ee4:	50760052 	rsbspl	r0, r6, r2, asr r0
    3ee8:	5374726f 	cmnpl	r4, #-268435450	; 0xf0000006
    3eec:	72707075 	rsbsvc	r7, r0, #117	; 0x75
    3ef0:	54737365 	ldrbtpl	r7, [r3], #-869	; 0xfffffc9b
    3ef4:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
    3ef8:	53646e41 	cmnpl	r4, #1040	; 0x410
    3efc:	7065656c 	rsbvc	r6, r5, ip, ror #10
    3f00:	78757000 	ldmdavc	r5!, {ip, sp, lr}^
    3f04:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    3f08:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    3f0c:	6174536b 	cmnvs	r4, fp, ror #6
    3f10:	69536b63 	ldmdbvs	r3, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^
    3f14:	2e00657a 	cfrshl64cs	mvdx0, mvdx10, r6
    3f18:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3f1c:	2f2e2e2f 	svccs	0x002e2e2f
    3f20:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    3f24:	2f736f74 	svccs	0x00736f74
    3f28:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    3f2c:	534f5452 	movtpl	r5, #62546	; 0xf452
    3f30:	7361742f 	cmnvc	r1, #788529152	; 0x2f000000
    3f34:	632e736b 			; <UNDEFINED> instruction: 0x632e736b
    3f38:	54787000 	ldrbtpl	r7, [r8], #-0
    3f3c:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
    3f40:	61576f54 	cmpvs	r7, r4, asr pc
    3f44:	65007469 	strvs	r7, [r0, #-1129]	; 0xfffffb97
    3f48:	61766e49 	cmnvs	r6, r9, asr #28
    3f4c:	0064696c 	rsbeq	r6, r4, ip, ror #18
    3f50:	6f547875 	svcvs	0x00547875
    3f54:	69725070 	ldmdbvs	r2!, {r4, r5, r6, ip, lr}^
    3f58:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    3f5c:	78750079 	ldmdavc	r5!, {r0, r3, r4, r5, r6}^
    3f60:	65736142 	ldrbvs	r6, [r3, #-322]!	; 0xfffffebe
    3f64:	6f697250 	svcvs	0x00697250
    3f68:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    3f6c:	50787500 	rsbspl	r7, r8, r0, lsl #10
    3f70:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    3f74:	55797469 	ldrbpl	r7, [r9, #-1129]!	; 0xfffffb97
    3f78:	4f646573 	svcmi	0x00646573
    3f7c:	746e456e 	strbtvc	r4, [lr], #-1390	; 0xfffffa92
    3f80:	54007972 	strpl	r7, [r0], #-2418	; 0xfffff68e
    3f84:	745f4243 	ldrbvc	r4, [pc], #-579	; 3f8c <_Min_Heap_Size+0x378c>
    3f88:	76727000 	ldrbtvc	r7, [r2], -r0
    3f8c:	656c6544 	strbvs	r6, [ip, #-1348]!	; 0xfffffabc
    3f90:	43546574 	cmpmi	r4, #116, 10	; 0x1d000000
    3f94:	42650042 	rsbmi	r0, r5, #66	; 0x42
    3f98:	6b636f6c 	blvs	18dfd50 <_Min_Heap_Size+0x18df550>
    3f9c:	76006465 	strvc	r6, [r0], -r5, ror #8
    3fa0:	6b736154 	blvs	1cdc4f8 <_Min_Heap_Size+0x1cdbcf8>
    3fa4:	70737553 	rsbsvc	r7, r3, r3, asr r5
    3fa8:	00646e65 	rsbeq	r6, r4, r5, ror #28
    3fac:	726c4178 	rsbvc	r4, ip, #120, 2
    3fb0:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    3fb4:	6c656959 			; <UNDEFINED> instruction: 0x6c656959
    3fb8:	00646564 	rsbeq	r6, r4, r4, ror #10
    3fbc:	76457870 			; <UNDEFINED> instruction: 0x76457870
    3fc0:	4c746e65 	ldclmi	14, cr6, [r4], #-404	; 0xfffffe6c
    3fc4:	49747369 	ldmdbmi	r4!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
    3fc8:	006d6574 	rsbeq	r6, sp, r4, ror r5
    3fcc:	61507670 	cmpvs	r0, r0, ror r6
    3fd0:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    3fd4:	00726574 	rsbseq	r6, r2, r4, ror r5
    3fd8:	6e655078 	mcrvs	0, 3, r5, cr5, cr8, {3}
    3fdc:	54646564 	strbtpl	r6, [r4], #-1380	; 0xfffffa9c
    3fe0:	736b6369 	cmnvc	fp, #-1543503871	; 0xa4000001
    3fe4:	76727000 	ldrbtvc	r7, [r2], -r0
    3fe8:	6b736154 	blvs	1cdc540 <_Min_Heap_Size+0x1cdbd40>
    3fec:	63656843 	cmnvs	r5, #4390912	; 0x430000
    3ff0:	6572466b 	ldrbvs	r4, [r2, #-1643]!	; 0xfffff995
    3ff4:	61745365 	cmnvs	r4, r5, ror #6
    3ff8:	70536b63 	subsvc	r6, r3, r3, ror #22
    3ffc:	00656361 	rsbeq	r6, r5, r1, ror #6
    4000:	63695478 	cmnvs	r9, #120, 8	; 0x78000000
    4004:	6f54736b 	svcvs	0x0054736b
    4008:	63746143 	cmnvs	r4, #-1073741808	; 0xc0000010
    400c:	00705568 	rsbseq	r5, r0, r8, ror #10
    4010:	67655278 			; <UNDEFINED> instruction: 0x67655278
    4014:	736e6f69 	cmnvc	lr, #420	; 0x1a4
    4018:	76727000 	ldrbtvc	r7, [r2], -r0
    401c:	43646441 	cmnmi	r4, #1090519040	; 0x41000000
    4020:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    4024:	6154746e 	cmpvs	r4, lr, ror #8
    4028:	6f546b73 	svcvs	0x00546b73
    402c:	616c6544 	cmnvs	ip, r4, asr #10
    4030:	4c646579 	cfstr64mi	mvdx6, [r4], #-484	; 0xfffffe1c
    4034:	00747369 	rsbseq	r7, r4, r9, ror #6
    4038:	6f4e7875 	svcvs	0x004e7875
    403c:	7070416e 	rsbsvc	r4, r0, lr, ror #2
    4040:	6163696c 	cmnvs	r3, ip, ror #18
    4044:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4048:	6b736154 	blvs	1cdc5a0 <_Min_Heap_Size+0x1cdbda0>
    404c:	49630073 	stmdbmi	r3!, {r0, r1, r4, r5, r6}^
    4050:	4e656c64 	cdpmi	12, 6, cr6, cr5, cr4, {3}
    4054:	00656d61 	rsbeq	r6, r5, r1, ror #26
    4058:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    405c:	7465476b 	strbtvc	r4, [r5], #-1899	; 0xfffff895
    4060:	72727543 	rsbsvc	r7, r2, #281018368	; 0x10c00000
    4064:	54746e65 	ldrbtpl	r6, [r4], #-3685	; 0xfffff19b
    4068:	486b7361 	stmdami	fp!, {r0, r5, r6, r8, r9, ip, sp, lr}^
    406c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    4070:	726f4665 	rsbvc	r4, pc, #105906176	; 0x6500000
    4074:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    4078:	54787500 	ldrbtpl	r7, [r8], #-1280	; 0xfffffb00
    407c:	426b7361 	rsbmi	r7, fp, #-2080374783	; 0x84000001
    4080:	50657361 	rsbpl	r7, r5, r1, ror #6
    4084:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    4088:	47797469 	ldrbmi	r7, [r9, -r9, ror #8]!
    408c:	75007465 	strvc	r7, [r0, #-1125]	; 0xfffffb9b
    4090:	72754378 	rsbsvc	r4, r5, #120, 6	; 0xe0000001
    4094:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    4098:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    409c:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    40a0:	6b736154 	blvs	1cdc5f8 <_Min_Heap_Size+0x1cdbdf8>
    40a4:	54780073 	ldrbtpl	r0, [r8], #-115	; 0xffffff8d
    40a8:	49656d69 	stmdbmi	r5!, {r0, r3, r5, r6, r8, sl, fp, sp, lr}^
    40ac:	6572636e 	ldrbvs	r6, [r2, #-878]!	; 0xfffffc92
    40b0:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    40b4:	61547800 	cmpvs	r4, r0, lsl #16
    40b8:	65476b73 	strbvs	r6, [r7, #-2931]	; 0xfffff48d
    40bc:	6c644974 			; <UNDEFINED> instruction: 0x6c644974
    40c0:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    40c4:	6e61486b 	cdpvs	8, 6, cr4, cr1, cr11, {3}
    40c8:	00656c64 	rsbeq	r6, r5, r4, ror #24
    40cc:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    40d0:	576f5465 	strbpl	r5, [pc, -r5, ror #8]!
    40d4:	00656b61 	rsbeq	r6, r5, r1, ror #22
    40d8:	61745378 	cmnvs	r4, r8, ror r3
    40dc:	694c6574 	stmdbvs	ip, {r2, r4, r5, r6, r8, sl, sp, lr}^
    40e0:	74497473 	strbvc	r7, [r9], #-1139	; 0xfffffb8d
    40e4:	76006d65 	strvc	r6, [r0], -r5, ror #26
    40e8:	6c707041 	ldclvs	0, cr7, [r0], #-260	; 0xfffffefc
    40ec:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    40f0:	476e6f69 	strbmi	r6, [lr, -r9, ror #30]!
    40f4:	64497465 	strbvs	r7, [r9], #-1125	; 0xfffffb9b
    40f8:	6154656c 	cmpvs	r4, ip, ror #10
    40fc:	654d6b73 	strbvs	r6, [sp, #-2931]	; 0xfffff48d
    4100:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    4104:	54787000 	ldrbtpl	r7, [r8], #-0
    4108:	78004243 	stmdavc	r0, {r0, r1, r6, r9, lr}
    410c:	6b736154 	blvs	1cdc664 <_Min_Heap_Size+0x1cdbe64>
    4110:	656e6547 	strbvs	r6, [lr, #-1351]!	; 0xfffffab9
    4114:	4e636972 			; <UNDEFINED> instruction: 0x4e636972
    4118:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    411c:	61745379 	cmnvs	r4, r9, ror r3
    4120:	6c436574 	cfstr64vs	mvdx6, [r3], {116}	; 0x74
    4124:	00726165 	rsbseq	r6, r2, r5, ror #2
    4128:	69547875 	ldmdbvs	r4, {r0, r2, r4, r5, r6, fp, ip, sp, lr}^
    412c:	5472656d 	ldrbtpl	r6, [r2], #-1389	; 0xfffffa93
    4130:	536b7361 	cmnpl	fp, #-2080374783	; 0x84000001
    4134:	6b636174 	blvs	18dc70c <_Min_Heap_Size+0x18dbf0c>
    4138:	54787000 	ldrbtpl	r7, [r8], #-0
    413c:	436b7361 	cmnmi	fp, #-2080374783	; 0x84000001
    4140:	0065646f 	rsbeq	r6, r5, pc, ror #8
    4144:	63537875 	cmpvs	r3, #7667712	; 0x750000
    4148:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    414c:	5372656c 	cmnpl	r2, #108, 10	; 0x1b000000
    4150:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    4154:	6465646e 	strbtvs	r6, [r5], #-1134	; 0xfffffb92
    4158:	54787000 	ldrbtpl	r7, [r8], #-0
    415c:	664f706f 	strbvs	r7, [pc], -pc, rrx
    4160:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
    4164:	5476006b 	ldrbtpl	r0, [r6], #-107	; 0xffffff95
    4168:	526b7361 	rsbpl	r7, fp, #-2080374783	; 0x84000001
    416c:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
    4170:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    4174:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    4178:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
    417c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    4180:	6d656144 	stfvse	f6, [r5, #-272]!	; 0xfffffef0
    4184:	61546e6f 	cmpvs	r4, pc, ror #28
    4188:	61486b73 	hvcvs	34483	; 0x86b3
    418c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    4190:	76727000 	ldrbtvc	r7, [r2], -r0
    4194:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    4198:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    419c:	61546573 	cmpvs	r4, r3, ror r5
    41a0:	694c6b73 	stmdbvs	ip, {r0, r1, r4, r5, r6, r8, r9, fp, sp, lr}^
    41a4:	00737473 	rsbseq	r7, r3, r3, ror r4
    41a8:	6c644978 			; <UNDEFINED> instruction: 0x6c644978
    41ac:	73615465 	cmnvc	r1, #1694498816	; 0x65000000
    41b0:	4243546b 	submi	r5, r3, #1795162112	; 0x6b000000
    41b4:	49787500 	ldmdbmi	r8!, {r8, sl, ip, sp, lr}^
    41b8:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
    41bc:	6f4e6f54 	svcvs	0x004e6f54
    41c0:	79666974 	stmdbvc	r6!, {r2, r4, r5, r6, r8, fp, sp, lr}^
    41c4:	4e637500 	cdpmi	5, 6, cr7, cr3, cr0, {0}
    41c8:	6669746f 	strbtvs	r7, [r9], -pc, ror #8
    41cc:	61745379 	cmnvs	r4, r9, ror r3
    41d0:	70006574 	andvc	r6, r0, r4, ror r5
    41d4:	65724378 	ldrbvs	r4, [r2, #-888]!	; 0xfffffc88
    41d8:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    41dc:	6b736154 	blvs	1cdc734 <_Min_Heap_Size+0x1cdbf34>
    41e0:	76727000 	ldrbtvc	r7, [r2], -r0
    41e4:	63656843 	cmnvs	r5, #4390912	; 0x430000
    41e8:	7361546b 	cmnvc	r1, #1795162112	; 0x6b000000
    41ec:	6157736b 	cmpvs	r7, fp, ror #6
    41f0:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
    41f4:	72655467 	rsbvc	r5, r5, #1728053248	; 0x67000000
    41f8:	616e696d 	cmnvs	lr, sp, ror #18
    41fc:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4200:	4f787000 	svcmi	0x00787000
    4204:	66726576 			; <UNDEFINED> instruction: 0x66726576
    4208:	44776f6c 	ldrbtmi	r6, [r7], #-3948	; 0xfffff094
    420c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
    4210:	694c6465 	stmdbvs	ip, {r0, r2, r5, r6, sl, sp, lr}^
    4214:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    4218:	7465526c 	strbtvc	r5, [r5], #-620	; 0xfffffd94
    421c:	006e7275 	rsbeq	r7, lr, r5, ror r2
    4220:	73615478 	cmnvc	r1, #120, 8	; 0x78000000
    4224:	5273496b 	rsbspl	r4, r3, #1753088	; 0x1ac000
    4228:	696e6e75 	stmdbvs	lr!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
    422c:	724f676e 	subvc	r6, pc, #28835840	; 0x1b80000
    4230:	6c656959 			; <UNDEFINED> instruction: 0x6c656959
    4234:	676e6964 	strbvs	r6, [lr, -r4, ror #18]!
    4238:	43787500 	cmnmi	r8, #0, 10
    423c:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    4240:	6142746e 	cmpvs	r2, lr, ror #8
    4244:	72506573 	subsvc	r6, r0, #482344960	; 0x1cc00000
    4248:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    424c:	75007974 	strvc	r7, [r0, #-2420]	; 0xfffff68c
    4250:	646e4978 	strbtvs	r4, [lr], #-2424	; 0xfffff688
    4254:	6f547865 	svcvs	0x00547865
    4258:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
    425c:	78006e4f 	stmdavc	r0, {r0, r1, r2, r3, r6, r9, sl, fp, sp, lr}
    4260:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    4264:	54646e61 	strbtpl	r6, [r4], #-3681	; 0xfffff19f
    4268:	00656d69 	rsbeq	r6, r5, r9, ror #26
    426c:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    4270:	65507265 	ldrbvs	r7, [r0, #-613]	; 0xfffffd9b
    4274:	646f6972 	strbtvs	r6, [pc], #-2418	; 427c <_Min_Heap_Size+0x3a7c>
    4278:	69546e49 	ldmdbvs	r4, {r0, r3, r6, r9, sl, fp, sp, lr}^
    427c:	00736b63 	rsbseq	r6, r3, r3, ror #22
    4280:	61437870 	hvcvs	14208	; 0x3780
    4284:	61626c6c 	cmnvs	r2, ip, ror #24
    4288:	75466b63 	strbvc	r6, [r6, #-2915]	; 0xfffff49d
    428c:	6974636e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, r9, sp, lr}^
    4290:	70006e6f 	andvc	r6, r0, pc, ror #28
    4294:	73694c78 	cmnvc	r9, #120, 24	; 0x7800
    4298:	73615774 	cmnvc	r1, #116, 14	; 0x1d00000
    429c:	74706d45 	ldrbtvc	r6, [r0], #-3397	; 0xfffff2bb
    42a0:	54780079 	ldrbtpl	r0, [r8], #-121	; 0xffffff87
    42a4:	4e656d69 	cdpmi	13, 6, cr6, cr5, cr9, {3}
    42a8:	7800776f 	stmdavc	r0, {r0, r1, r2, r3, r5, r6, r8, r9, sl, ip, sp, lr}
    42ac:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    42b0:	69546369 	ldmdbvs	r4, {r0, r3, r5, r6, r8, r9, sp, lr}^
    42b4:	5172656d 	cmnpl	r2, sp, ror #10
    42b8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    42bc:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    42c0:	5072656d 	rsbspl	r6, r2, sp, ror #10
    42c4:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
    42c8:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
    42cc:	4f780073 	svcmi	0x00780073
    42d0:	6f697470 	svcvs	0x00697470
    42d4:	566c616e 	strbtpl	r6, [ip], -lr, ror #2
    42d8:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    42dc:	54637000 	strbtpl	r7, [r3], #-0
    42e0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    42e4:	656d614e 	strbvs	r6, [sp, #-334]!	; 0xfffffeb2
    42e8:	506c7500 	rsbpl	r7, ip, r0, lsl #10
    42ec:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
    42f0:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
    42f4:	54780032 	ldrbtpl	r0, [r8], #-50	; 0xffffffce
    42f8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    42fc:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
    4300:	636e7546 	cmnvs	lr, #293601280	; 0x11800000
    4304:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4308:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
    430c:	6d695400 	cfstrdvs	mvd5, [r9, #-0]
    4310:	61507265 	cmpvs	r0, r5, ror #4
    4314:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
    4318:	5f726574 	svcpl	0x00726574
    431c:	54780074 	ldrbtpl	r0, [r8], #-116	; 0xffffff8c
    4320:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    4324:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    4328:	74530065 	ldrbvc	r0, [r3], #-101	; 0xffffff9b
    432c:	63697461 	cmnvs	r9, #1627389952	; 0x61000000
    4330:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    4334:	00745f72 	rsbseq	r5, r4, r2, ror pc
    4338:	41545378 	cmpmi	r4, r8, ror r3
    433c:	5f434954 	svcpl	0x00434954
    4340:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
    4344:	54780052 	ldrbtpl	r0, [r8], #-82	; 0xffffffae
    4348:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    434c:	53746547 	cmnpl	r4, #297795584	; 0x11c00000
    4350:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    4354:	66754263 	ldrbtvs	r4, [r5], -r3, ror #4
    4358:	00726566 	rsbseq	r6, r2, r6, ror #10
    435c:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    4360:	6c614372 	stclvs	3, cr4, [r1], #-456	; 0xfffffe38
    4364:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    4368:	6e75466b 	cdpvs	6, 7, cr4, cr5, cr11, {3}
    436c:	6f697463 	svcvs	0x00697463
    4370:	00745f6e 	rsbseq	r5, r4, lr, ror #30
    4374:	6d6f4378 	stclvs	3, cr4, [pc, #-480]!	; 419c <_Min_Heap_Size+0x399c>
    4378:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
    437c:	78004449 	stmdavc	r0, {r0, r3, r6, sl, lr}
    4380:	636f7250 	cmnvs	pc, #80, 4
    4384:	54737365 	ldrbtpl	r7, [r3], #-869	; 0xfffffc9b
    4388:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    438c:	00776f4e 	rsbseq	r6, r7, lr, asr #30
    4390:	43767270 	cmnmi	r6, #112, 4
    4394:	6b636568 	blvs	18dd93c <_Min_Heap_Size+0x18dd13c>
    4398:	56726f46 	ldrbtpl	r6, [r2], -r6, asr #30
    439c:	64696c61 	strbtvs	r6, [r9], #-3169	; 0xfffff39f
    43a0:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    43a4:	51646e41 	cmnpl	r4, r1, asr #28
    43a8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    43ac:	2f2e2e00 	svccs	0x002e2e00
    43b0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    43b4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    43b8:	6f747262 	svcvs	0x00747262
    43bc:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    43c0:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    43c4:	742f534f 	strtvc	r5, [pc], #-847	; 43cc <_Min_Heap_Size+0x3bcc>
    43c8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    43cc:	00632e73 	rsbeq	r2, r3, r3, ror lr
    43d0:	69547875 	ldmdbvs	r4, {r0, r2, r4, r5, r6, fp, ip, sp, lr}^
    43d4:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    43d8:	65527465 	ldrbvs	r7, [r2, #-1125]	; 0xfffffb9b
    43dc:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
    43e0:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
    43e4:	6d695400 	cfstrdvs	mvd5, [r9, #-0]
    43e8:	61487265 	cmpvs	r8, r5, ror #4
    43ec:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
    43f0:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    43f4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    43f8:	65724372 	ldrbvs	r4, [r2, #-882]!	; 0xfffffc8e
    43fc:	53657461 	cmnpl	r5, #1627389952	; 0x61000000
    4400:	69746174 	ldmdbvs	r4!, {r2, r4, r5, r6, r8, sp, lr}^
    4404:	72700063 	rsbsvc	r0, r0, #99	; 0x63
    4408:	6f725076 	svcvs	0x00725076
    440c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    4410:	69707845 	ldmdbvs	r0!, {r0, r2, r6, fp, ip, sp, lr}^
    4414:	54646572 	strbtpl	r6, [r4], #-1394	; 0xfffffa8e
    4418:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    441c:	6c614300 	stclvs	3, cr4, [r1], #-0
    4420:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    4424:	7261506b 	rsbvc	r5, r1, #107	; 0x6b
    4428:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    442c:	5f737265 	svcpl	0x00737265
    4430:	76700074 			; <UNDEFINED> instruction: 0x76700074
    4434:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    4438:	70003679 	andvc	r3, r0, r9, ror r6
    443c:	77654e78 			; <UNDEFINED> instruction: 0x77654e78
    4440:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    4444:	76700072 			; <UNDEFINED> instruction: 0x76700072
    4448:	75746552 	ldrbvc	r6, [r4, #-1362]!	; 0xfffffaae
    444c:	78006e72 	stmdavc	r0, {r1, r4, r5, r6, r9, sl, fp, sp, lr}
    4450:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    4454:	54734972 	ldrbtpl	r4, [r3], #-2418	; 0xfffff68e
    4458:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    445c:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    4460:	78006576 	stmdavc	r0, {r1, r2, r4, r5, r6, r8, sl, sp, lr}
    4464:	69707845 	ldmdbvs	r0!, {r0, r2, r6, fp, ip, sp, lr}^
    4468:	54646572 	strbtpl	r6, [r4], #-1394	; 0xfffffa8e
    446c:	00656d69 	rsbeq	r6, r5, r9, ror #26
    4470:	54726d74 	ldrbtpl	r6, [r2], #-3444	; 0xfffff28c
    4474:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    4478:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    447c:	73654d65 	cmnvc	r5, #6464	; 0x1940
    4480:	65676173 	strbvs	r6, [r7, #-371]!	; 0xfffffe8d
    4484:	54767000 	ldrbtpl	r7, [r6], #-0
    4488:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    448c:	54746547 	ldrbtpl	r6, [r4], #-1351	; 0xfffffab9
    4490:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    4494:	78004449 	stmdavc	r0, {r0, r3, r6, sl, lr}
    4498:	6f747541 	svcvs	0x00747541
    449c:	6f6c6552 	svcvs	0x006c6552
    44a0:	78006461 	stmdavc	r0, {r0, r5, r6, sl, sp, lr}
    44a4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    44a8:	6e654772 	mcrvs	7, 3, r4, cr5, cr2, {3}
    44ac:	63697265 	cmnvs	r9, #1342177286	; 0x50000006
    44b0:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    44b4:	46646e61 	strbtmi	r6, [r4], -r1, ror #28
    44b8:	496d6f72 	stmdbmi	sp!, {r1, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
    44bc:	70005253 	andvc	r5, r0, r3, asr r2
    44c0:	65764f78 	ldrbvs	r4, [r6, #-3960]!	; 0xfffff088
    44c4:	6f6c6672 	svcvs	0x006c6672
    44c8:	6d695477 	cfstrdvs	mvd5, [r9, #-476]!	; 0xfffffe24
    44cc:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
    44d0:	70007473 	andvc	r7, r0, r3, ror r4
    44d4:	6e497672 	mcrvs	6, 2, r7, cr9, cr2, {3}
    44d8:	61697469 	cmnvs	r9, r9, ror #8
    44dc:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    44e0:	5477654e 	ldrbtpl	r6, [r7], #-1358	; 0xfffffab2
    44e4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    44e8:	44767000 	ldrbtmi	r7, [r6], #-0
    44ec:	796d6d75 	stmdbvc	sp!, {r0, r2, r4, r5, r6, r8, sl, fp, sp, lr}^
    44f0:	54780035 	ldrbtpl	r0, [r8], #-53	; 0xffffffcb
    44f4:	52454d49 	subpl	r4, r5, #4672	; 0x1240
    44f8:	63417800 	movtvs	r7, #6144	; 0x1800
    44fc:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
    4500:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    4504:	73694c72 	cmnvc	r9, #29184	; 0x7200
    4508:	78003174 	stmdavc	r0, {r2, r4, r5, r6, r8, ip, sp}
    450c:	69746341 	ldmdbvs	r4!, {r0, r6, r8, r9, sp, lr}^
    4510:	69546576 	ldmdbvs	r4, {r1, r2, r4, r5, r6, r8, sl, sp, lr}^
    4514:	4c72656d 	cfldr64mi	mvdx6, [r2], #-436	; 0xfffffe4c
    4518:	32747369 	rsbscc	r7, r4, #-1543503871	; 0xa4000001
    451c:	76727000 	ldrbtvc	r7, [r2], -r0
    4520:	65736e49 	ldrbvs	r6, [r3, #-3657]!	; 0xfffff1b7
    4524:	69547472 	ldmdbvs	r4, {r1, r4, r5, r6, sl, ip, sp, lr}^
    4528:	4972656d 	ldmdbmi	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    452c:	7463416e 	strbtvc	r4, [r3], #-366	; 0xfffffe92
    4530:	4c657669 	stclmi	6, cr7, [r5], #-420	; 0xfffffe5c
    4534:	00747369 	rsbseq	r7, r4, r9, ror #6
    4538:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    453c:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
    4540:	70784574 	rsbsvc	r4, r8, r4, ror r5
    4544:	54797269 	ldrbtpl	r7, [r9], #-617	; 0xfffffd97
    4548:	00656d69 	rsbeq	r6, r5, r9, ror #26
    454c:	43726d74 	cmnmi	r2, #116, 26	; 0x1d00
    4550:	626c6c61 	rsbvs	r6, ip, #24832	; 0x6100
    4554:	506b6361 	rsbpl	r6, fp, r1, ror #6
    4558:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
    455c:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
    4560:	54780073 	ldrbtpl	r0, [r8], #-115	; 0xffffff8d
    4564:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    4568:	61657243 	cmnvs	r5, r3, asr #4
    456c:	70006574 	andvc	r6, r0, r4, ror r5
    4570:	61537672 	cmpvs	r3, r2, ror r6
    4574:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
    4578:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    457c:	00776f4e 	rsbseq	r6, r7, lr, asr #30
    4580:	6c614378 	stclvs	3, cr4, [r1], #-480	; 0xfffffe20
    4584:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    4588:	7261506b 	rsbvc	r5, r1, #107	; 0x6b
    458c:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    4590:	00737265 	rsbseq	r7, r3, r5, ror #4
    4594:	6d695476 	cfstrdvs	mvd5, [r9, #-472]!	; 0xfffffe28
    4598:	65537265 	ldrbvs	r7, [r3, #-613]	; 0xfffffd9b
    459c:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    45a0:	44497265 	strbmi	r7, [r9], #-613	; 0xfffffd9b
    45a4:	69547800 	ldmdbvs	r4, {fp, ip, sp, lr}^
    45a8:	4c72656d 	cfldr64mi	mvdx6, [r2], #-436	; 0xfffffe4c
    45ac:	49747369 	ldmdbmi	r4!, {r0, r3, r5, r6, r8, r9, ip, sp, lr}^
    45b0:	006d6574 	rsbeq	r6, sp, r4, ror r5
    45b4:	654e7670 	strbvs	r7, [lr, #-1648]	; 0xfffff990
    45b8:	00444977 	subeq	r4, r4, r7, ror r9
    45bc:	53767270 	cmnpl	r6, #112, 4
    45c0:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    45c4:	6d695468 	cfstrdvs	mvd5, [r9, #-416]!	; 0xfffffe60
    45c8:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
    45cc:	00737473 	rsbseq	r7, r3, r3, ror r4
    45d0:	52767270 	rsbspl	r7, r6, #112, 4
    45d4:	616f6c65 	cmnvs	pc, r5, ror #24
    45d8:	6d695464 	cfstrdvs	mvd5, [r9, #-400]!	; 0xfffffe70
    45dc:	75007265 	strvc	r7, [r0, #-613]	; 0xfffffd9b
    45e0:	61745363 	cmnvs	r4, r3, ror #6
    45e4:	54636974 	strbtpl	r6, [r3], #-2420	; 0xfffff68c
    45e8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    45ec:	75657551 	strbvc	r7, [r5, #-1361]!	; 0xfffffaaf
    45f0:	6f745365 	svcvs	0x00745365
    45f4:	65676172 	strbvs	r6, [r7, #-370]!	; 0xfffffe8e
    45f8:	50767000 	rsbspl	r7, r6, r0
    45fc:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
    4600:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
    4604:	63750031 	cmnvs	r5, #49	; 0x31
    4608:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    460c:	78003879 	stmdavc	r0, {r0, r3, r4, r5, r6, fp, ip, sp}
    4610:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    4614:	73615472 	cmnvc	r1, #1912602624	; 0x72000000
    4618:	6e61486b 	cdpvs	8, 6, cr4, cr1, cr11, {3}
    461c:	00656c64 	rsbeq	r6, r5, r4, ror #24
    4620:	54767270 	ldrbtpl	r7, [r6], #-624	; 0xfffffd90
    4624:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    4628:	6b736154 	blvs	1cdcb80 <_Min_Heap_Size+0x1cdc380>
    462c:	654e7800 	strbvs	r7, [lr, #-2048]	; 0xfffff800
    4630:	78457478 	stmdavc	r5, {r3, r4, r5, r6, sl, ip, sp, lr}^
    4634:	65726970 	ldrbvs	r6, [r2, #-2416]!	; 0xfffff690
    4638:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    463c:	53637500 	cmnpl	r3, #0, 10
    4640:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
    4644:	72700073 	rsbsvc	r0, r0, #115	; 0x73
    4648:	6f725076 	svcvs	0x00725076
    464c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    4650:	65636552 	strbvs	r6, [r3, #-1362]!	; 0xfffffaae
    4654:	64657669 	strbtvs	r7, [r5], #-1641	; 0xfffff997
    4658:	6d6d6f43 	stclvs	15, cr6, [sp, #-268]!	; 0xfffffef4
    465c:	73646e61 	cmnvc	r4, #1552	; 0x610
    4660:	614c7800 	cmpvs	ip, r0, lsl #16
    4664:	69547473 	ldmdbvs	r4, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    4668:	5000656d 	andpl	r6, r0, sp, ror #10
    466c:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
    4670:	6e754664 	cdpvs	6, 7, cr4, cr5, cr4, {3}
    4674:	6f697463 	svcvs	0x00697463
    4678:	00745f6e 	rsbseq	r5, r4, lr, ror #30
    467c:	75437870 	strbvc	r7, [r3, #-2160]	; 0xfffff790
    4680:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    4684:	6d695474 	cfstrdvs	mvd5, [r9, #-464]!	; 0xfffffe30
    4688:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
    468c:	78007473 	stmdavc	r0, {r0, r1, r4, r5, r6, sl, ip, sp, lr}
    4690:	7373654d 	cmnvc	r3, #322961408	; 0x13400000
    4694:	00656761 	rsbeq	r6, r5, r1, ror #14
    4698:	69547670 	ldmdbvs	r4, {r4, r5, r6, r9, sl, ip, sp, lr}^
    469c:	4972656d 	ldmdbmi	r2!, {r0, r2, r3, r5, r6, r8, sl, sp, lr}^
    46a0:	4d780044 	ldclmi	0, cr0, [r8, #-272]!	; 0xfffffef0
    46a4:	61737365 	cmnvs	r3, r5, ror #6
    46a8:	44496567 	strbmi	r6, [r9], #-1383	; 0xfffffa99
    46ac:	65614400 	strbvs	r4, [r1, #-1024]!	; 0xfffffc00
    46b0:	546e6f6d 	strbtpl	r6, [lr], #-3949	; 0xfffff093
    46b4:	4d6b7361 	stclmi	3, cr7, [fp, #-388]!	; 0xfffffe7c
    46b8:	61737365 	cmnvs	r3, r5, ror #6
    46bc:	745f6567 	ldrbvc	r6, [pc], #-1383	; 46c4 <_Min_Heap_Size+0x3ec4>
    46c0:	69547600 	ldmdbvs	r4, {r9, sl, ip, sp, lr}^
    46c4:	5272656d 	rsbspl	r6, r2, #457179136	; 0x1b400000
    46c8:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    46cc:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    46d0:	54780065 	ldrbtpl	r0, [r8], #-101	; 0xffffff9b
    46d4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    46d8:	50746547 	rsbspl	r6, r4, r7, asr #10
    46dc:	6f697265 	svcvs	0x00697265
    46e0:	78700064 	ldmdavc	r0!, {r2, r5, r6}^
    46e4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    46e8:	4d780072 	ldclmi	0, cr0, [r8, #-456]!	; 0xfffffe38
    46ec:	61737365 	cmnvs	r3, r5, ror #6
    46f0:	61566567 	cmpvs	r6, r7, ror #10
    46f4:	0065756c 	rsbeq	r7, r5, ip, ror #10
    46f8:	6e754678 	mrcvs	6, 3, r4, cr5, cr8, {3}
    46fc:	6f697463 	svcvs	0x00697463
    4700:	506f546e 	rsbpl	r5, pc, lr, ror #8
    4704:	00646e65 	rsbeq	r6, r4, r5, ror #28
    4708:	54726d74 	ldrbtpl	r6, [r2], #-3444	; 0xfffff28c
    470c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    4710:	746e6f43 	strbtvc	r6, [lr], #-3907	; 0xfffff0bd
    4714:	006c6f72 	rsbeq	r6, ip, r2, ror pc
    4718:	69546370 	ldmdbvs	r4, {r4, r5, r6, r8, r9, sp, lr}^
    471c:	4772656d 	ldrbmi	r6, [r2, -sp, ror #10]!
    4720:	614e7465 	cmpvs	lr, r5, ror #8
    4724:	7800656d 	stmdavc	r0, {r0, r2, r3, r5, r6, r8, sl, sp, lr}
    4728:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    472c:	6e655072 	mcrvs	0, 3, r5, cr5, cr2, {3}
    4730:	6e754664 	cdpvs	6, 7, cr4, cr5, cr4, {3}
    4734:	6f697463 	svcvs	0x00697463
    4738:	6c61436e 	stclvs	3, cr4, [r1], #-440	; 0xfffffe48
    473c:	6f72466c 	svcvs	0x0072466c
    4740:	5253496d 	subspl	r4, r3, #1785856	; 0x1b4000
    4744:	76727000 	ldrbtvc	r7, [r2], -r0
    4748:	636f7250 	cmnvs	pc, #80, 4
    474c:	54737365 	ldrbtpl	r7, [r3], #-869	; 0xfffffc9b
    4750:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    4754:	6c42724f 	sfmvs	f7, 2, [r2], {79}	; 0x4f
    4758:	546b636f 	strbtpl	r6, [fp], #-879	; 0xfffffc91
    475c:	006b7361 	rsbeq	r7, fp, r1, ror #6
    4760:	6d695476 	cfstrdvs	mvd5, [r9, #-472]!	; 0xfffffe28
    4764:	65537265 	ldrbvs	r7, [r3, #-613]	; 0xfffffd9b
    4768:	6c655274 	sfmvs	f5, 2, [r5], #-464	; 0xfffffe30
    476c:	4d64616f 	stfmie	f6, [r4, #-444]!	; 0xfffffe44
    4770:	0065646f 	rsbeq	r6, r5, pc, ror #8
    4774:	78654e78 	stmdavc	r5!, {r3, r4, r5, r6, r9, sl, fp, lr}^
    4778:	70784574 	rsbsvc	r4, r8, r4, ror r5
    477c:	54797269 	ldrbtpl	r7, [r9], #-617	; 0xfffffd97
    4780:	00656d69 	rsbeq	r6, r5, r9, ror #26
    4784:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    4788:	65477265 	strbvs	r7, [r7, #-613]	; 0xfffffd9b
    478c:	6972656e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, r8, sl, sp, lr}^
    4790:	6d6f4363 	stclvs	3, cr4, [pc, #-396]!	; 460c <_Min_Heap_Size+0x3e0c>
    4794:	646e616d 	strbtvs	r6, [lr], #-365	; 0xfffffe93
    4798:	6d6f7246 	sfmvs	f7, 2, [pc, #-280]!	; 4688 <_Min_Heap_Size+0x3e88>
    479c:	6b736154 	blvs	1cdccf4 <_Min_Heap_Size+0x1cdc4f4>
    47a0:	726d7400 	rsbvc	r7, sp, #0, 8
    47a4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    47a8:	72615072 	rsbvc	r5, r1, #114	; 0x72
    47ac:	74656d61 	strbtvc	r6, [r5], #-3425	; 0xfffff29f
    47b0:	00737265 	rsbseq	r7, r3, r5, ror #4
    47b4:	54787070 	ldrbtpl	r7, [r8], #-112	; 0xffffff90
    47b8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    47bc:	66667542 	strbtvs	r7, [r6], -r2, asr #10
    47c0:	70007265 	andvc	r7, r0, r5, ror #4
    47c4:	6c614378 	stclvs	3, cr4, [r1], #-480	; 0xfffffe20
    47c8:	6361626c 	cmnvs	r1, #108, 4	; 0xc0000006
    47cc:	7270006b 	rsbsvc	r0, r0, #107	; 0x6b
    47d0:	74654776 	strbtvc	r4, [r5], #-1910	; 0xfffff88a
    47d4:	7478654e 	ldrbtvc	r6, [r8], #-1358	; 0xfffffab2
    47d8:	69707845 	ldmdbvs	r0!, {r0, r2, r6, fp, ip, sp, lr}^
    47dc:	69546572 	ldmdbvs	r4, {r1, r4, r5, r6, r8, sl, sp, lr}^
    47e0:	7000656d 	andvc	r6, r0, sp, ror #10
    47e4:	6d695478 	cfstrdvs	mvd5, [r9, #-480]!	; 0xfffffe20
    47e8:	694c7265 	stmdbvs	ip, {r0, r2, r5, r6, r9, ip, sp, lr}^
    47ec:	57737473 			; <UNDEFINED> instruction: 0x57737473
    47f0:	53657265 	cmnpl	r5, #1342177286	; 0x50000006
    47f4:	63746977 	cmnvs	r4, #1949696	; 0x1dc000
    47f8:	00646568 	rsbeq	r6, r4, r8, ror #10
    47fc:	72507870 	subsvc	r7, r0, #112, 16	; 0x700000
    4800:	6f697665 	svcvs	0x00697665
    4804:	6c427375 	mcrrvs	3, 7, r7, r2, cr5
    4808:	006b636f 	rsbeq	r6, fp, pc, ror #6
    480c:	65487870 	strbvs	r7, [r8, #-2160]	; 0xfffff790
    4810:	74537061 	ldrbvc	r7, [r3], #-97	; 0xffffff9f
    4814:	00737461 	rsbseq	r7, r3, r1, ror #8
    4818:	6e694d78 	mcrvs	13, 3, r4, cr9, cr8, {3}
    481c:	6d756d69 	ldclvs	13, cr6, [r5, #-420]!	; 0xfffffe5c
    4820:	72657645 	rsbvc	r7, r5, #72351744	; 0x4500000
    4824:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    4828:	65747942 	ldrbvs	r7, [r4, #-2370]!	; 0xfffff6be
    482c:	6d655273 	sfmvs	f5, 2, [r5, #-460]!	; 0xfffffe34
    4830:	696e6961 	stmdbvs	lr!, {r0, r5, r6, r8, fp, sp, lr}^
    4834:	4800676e 	stmdami	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    4838:	53706165 	cmnpl	r0, #1073741849	; 0x40000019
    483c:	73746174 	cmnvc	r4, #116, 2
    4840:	7000745f 	andvc	r7, r0, pc, asr r4
    4844:	78654e78 	stmdavc	r5!, {r3, r4, r5, r6, r9, sl, fp, lr}^
    4848:	65724674 	ldrbvs	r4, [r2, #-1652]!	; 0xfffff98c
    484c:	6f6c4265 	svcvs	0x006c4265
    4850:	70006b63 	andvc	r6, r0, r3, ror #22
    4854:	6f6c4278 	svcvs	0x006c4278
    4858:	78006b63 	stmdavc	r0, {r0, r1, r5, r6, r8, r9, fp, sp, lr}
    485c:	536e694d 	cmnpl	lr, #1261568	; 0x134000
    4860:	00657a69 	rsbeq	r7, r5, r9, ror #20
    4864:	6d754e78 	ldclvs	14, cr4, [r5, #-480]!	; 0xfffffe20
    4868:	4f726562 	svcmi	0x00726562
    486c:	65724666 	ldrbvs	r4, [r2, #-1638]!	; 0xfffff99a
    4870:	6f6c4265 	svcvs	0x006c4265
    4874:	00736b63 	rsbseq	r6, r3, r3, ror #22
    4878:	6e457870 	mcrvs	8, 2, r7, cr5, cr0, {3}
    487c:	72700064 	rsbsvc	r0, r0, #100	; 0x64
    4880:	736e4976 	cmnvc	lr, #1933312	; 0x1d8000
    4884:	42747265 	rsbsmi	r7, r4, #1342177286	; 0x50000006
    4888:	6b636f6c 	blvs	18e0640 <_Min_Heap_Size+0x18dfe40>
    488c:	6f746e49 	svcvs	0x00746e49
    4890:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    4894:	7473694c 	ldrbtvc	r6, [r3], #-2380	; 0xfffff6b4
    4898:	425f4100 	subsmi	r4, pc, #0, 2
    489c:	4b434f4c 	blmi	10d85d4 <_Min_Heap_Size+0x10d7dd4>
    48a0:	4e494c5f 	mcrmi	12, 2, r4, cr9, cr15, {2}
    48a4:	7875004b 	ldmdavc	r5!, {r0, r1, r3, r6}^
    48a8:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
    48ac:	64644174 	strbtvs	r4, [r4], #-372	; 0xfffffe8c
    48b0:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    48b4:	69537800 	ldmdbvs	r3, {fp, ip, sp, lr}^
    48b8:	664f657a 			; <UNDEFINED> instruction: 0x664f657a
    48bc:	6c616d53 	stclvs	13, cr6, [r1], #-332	; 0xfffffeb4
    48c0:	7473656c 	ldrbtvc	r6, [r3], #-1388	; 0xfffffa94
    48c4:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    48c8:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    48cc:	426e496b 	rsbmi	r4, lr, #1753088	; 0x1ac000
    48d0:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    48d4:	2f2e2e00 	svccs	0x002e2e00
    48d8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    48dc:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    48e0:	6f747262 	svcvs	0x00747262
    48e4:	72462f73 	subvc	r2, r6, #460	; 0x1cc
    48e8:	54526565 	ldrbpl	r6, [r2], #-1381	; 0xfffffa9b
    48ec:	702f534f 	eorvc	r5, pc, pc, asr #6
    48f0:	6174726f 	cmnvs	r4, pc, ror #4
    48f4:	2f656c62 	svccs	0x00656c62
    48f8:	4d6d654d 	cfstr64mi	mvdx6, [sp, #-308]!	; 0xfffffecc
    48fc:	2f676e61 	svccs	0x00676e61
    4900:	70616568 	rsbvc	r6, r1, r8, ror #10
    4904:	632e345f 			; <UNDEFINED> instruction: 0x632e345f
    4908:	45787500 	ldrbmi	r7, [r8, #-1280]!	; 0xfffffb00
    490c:	6441646e 	strbvs	r6, [r1], #-1134	; 0xfffffb92
    4910:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
    4914:	78700073 	ldmdavc	r0!, {r0, r1, r4, r5, r6}^
    4918:	4277654e 	rsbsmi	r6, r7, #327155712	; 0x13800000
    491c:	6b636f6c 	blvs	18e06d4 <_Min_Heap_Size+0x18dfed4>
    4920:	6b6e694c 	blvs	1b9ee58 <_Min_Heap_Size+0x1b9e658>
    4924:	6f507800 	svcvs	0x00507800
    4928:	65477472 	strbvs	r7, [r7, #-1138]	; 0xfffffb8e
    492c:	65724674 	ldrbvs	r4, [r2, #-1652]!	; 0xfffff98c
    4930:	61654865 	cmnvs	r5, r5, ror #16
    4934:	7a695370 	bvc	1a596fc <_Min_Heap_Size+0x1a58efc>
    4938:	41780065 	cmnmi	r8, r5, rrx
    493c:	74696464 	strbtvc	r6, [r9], #-1124	; 0xfffffb9c
    4940:	616e6f69 	cmnvs	lr, r9, ror #30
    4944:	7165526c 	cmnvc	r5, ip, ror #4
    4948:	65726975 	ldrbvs	r6, [r2, #-2421]!	; 0xfffff68b
    494c:	7a695364 	bvc	1a596e4 <_Min_Heap_Size+0x1a58ee4>
    4950:	50760065 	rsbspl	r0, r6, r5, rrx
    4954:	4874726f 	ldmdami	r4!, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^
    4958:	52706165 	rsbspl	r6, r0, #1073741849	; 0x40000019
    495c:	74657365 	strbtvc	r7, [r5], #-869	; 0xfffffc9b
    4960:	74617453 	strbtvc	r7, [r1], #-1107	; 0xfffffbad
    4964:	4d780065 	ldclmi	0, cr0, [r8, #-404]!	; 0xfffffe6c
    4968:	69537861 	ldmdbvs	r3, {r0, r5, r6, fp, ip, sp, lr}^
    496c:	7800657a 	stmdavc	r0, {r1, r3, r4, r5, r6, r8, sl, sp, lr}
    4970:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    4974:	4d746547 	cfldr64mi	mvdx6, [r4, #-284]!	; 0xfffffee4
    4978:	6d696e69 	stclvs	14, cr6, [r9, #-420]!	; 0xfffffe5c
    497c:	76456d75 			; <UNDEFINED> instruction: 0x76456d75
    4980:	72467265 	subvc	r7, r6, #1342177286	; 0x50000006
    4984:	65486565 	strbvs	r6, [r8, #-1381]	; 0xfffffa9b
    4988:	69537061 	ldmdbvs	r3, {r0, r5, r6, ip, sp, lr}^
    498c:	4200657a 	andmi	r6, r0, #511705088	; 0x1e800000
    4990:	6b636f6c 	blvs	18e0748 <_Min_Heap_Size+0x18dff48>
    4994:	6b6e694c 	blvs	1b9eecc <_Min_Heap_Size+0x1b9e6cc>
    4998:	7800745f 	stmdavc	r0, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}
    499c:	626d754e 	rsbvs	r7, sp, #327155712	; 0x13800000
    49a0:	664f7265 	strbvs	r7, [pc], -r5, ror #4
    49a4:	63637553 	cmnvs	r3, #348127232	; 0x14c00000
    49a8:	66737365 	ldrbtvs	r7, [r3], -r5, ror #6
    49ac:	6c416c75 	mcrrvs	12, 7, r6, r1, cr5
    49b0:	61636f6c 	cmnvs	r3, ip, ror #30
    49b4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    49b8:	41780073 	cmnmi	r8, r3, ror r0
    49bc:	6c696176 	stfvse	f6, [r9], #-472	; 0xfffffe28
    49c0:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    49c4:	70616548 	rsbvc	r6, r1, r8, asr #10
    49c8:	63617053 	cmnvs	r1, #83	; 0x53
    49cc:	426e4965 	rsbmi	r4, lr, #1654784	; 0x194000
    49d0:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    49d4:	65487800 	strbvs	r7, [r8, #-2048]	; 0xfffff800
    49d8:	74537061 	ldrbvc	r7, [r3], #-97	; 0xffffff9f
    49dc:	74637572 	strbtvc	r7, [r3], #-1394	; 0xfffffa8e
    49e0:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    49e4:	50767000 	rsbspl	r7, r6, r0
    49e8:	4374726f 	cmnmi	r4, #-268435450	; 0xf0000006
    49ec:	6f6c6c61 	svcvs	0x006c6c61
    49f0:	46780063 	ldrbtmi	r0, [r8], -r3, rrx
    49f4:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    49f8:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    49fc:	616d6552 	cmnvs	sp, r2, asr r5
    4a00:	6e696e69 	cdpvs	14, 6, cr6, cr9, cr9, {3}
    4a04:	53780067 	cmnpl	r8, #103	; 0x67
    4a08:	4f657a69 	svcmi	0x00657a69
    4a0c:	72614c66 	rsbvc	r4, r1, #26112	; 0x6600
    4a10:	74736567 	ldrbtvc	r6, [r3], #-1383	; 0xfffffa99
    4a14:	65657246 	strbvs	r7, [r5, #-582]!	; 0xfffffdba
    4a18:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    4a1c:	426e496b 	rsbmi	r4, lr, #1753088	; 0x1ac000
    4a20:	73657479 	cmnvc	r5, #2030043136	; 0x79000000
    4a24:	76727000 	ldrbtvc	r7, [r2], -r0
    4a28:	70616548 	rsbvc	r6, r1, r8, asr #10
    4a2c:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
    4a30:	42787000 	rsbsmi	r7, r8, #0
    4a34:	6b636f6c 	blvs	18e07ec <_Min_Heap_Size+0x18dffec>
    4a38:	6e496f54 	mcrvs	15, 2, r6, cr9, cr4, {2}
    4a3c:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
    4a40:	6f547800 	svcvs	0x00547800
    4a44:	486c6174 	stmdami	ip!, {r2, r4, r5, r6, r8, sp, lr}^
    4a48:	53706165 	cmnpl	r0, #1073741849	; 0x40000019
    4a4c:	00657a69 	rsbeq	r7, r5, r9, ror #20
    4a50:	6d754e78 	ldclvs	14, cr4, [r5, #-480]!	; 0xfffffe20
    4a54:	4f726562 	svcmi	0x00726562
    4a58:	63755366 	cmnvs	r5, #-1744830463	; 0x98000001
    4a5c:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
    4a60:	466c7566 	strbtmi	r7, [ip], -r6, ror #10
    4a64:	73656572 	cmnvc	r5, #478150656	; 0x1c800000
    4a68:	6c427800 	mcrrvs	8, 0, r7, r2, cr0
    4a6c:	536b636f 	cmnpl	fp, #-1140850687	; 0xbc000001
    4a70:	00657a69 	rsbeq	r7, r5, r9, ror #20
    4a74:	61745378 	cmnvs	r4, r8, ror r3
    4a78:	78007472 	stmdavc	r0, {r1, r4, r5, r6, sl, ip, sp, lr}
    4a7c:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    4a80:	7800736b 	stmdavc	r0, {r0, r1, r3, r5, r6, r8, r9, ip, sp, lr}
    4a84:	006d754e 	rsbeq	r7, sp, lr, asr #10
    4a88:	69467870 	stmdbvs	r6, {r4, r5, r6, fp, ip, sp, lr}^
    4a8c:	46747372 			; <UNDEFINED> instruction: 0x46747372
    4a90:	42656572 	rsbmi	r6, r5, #478150656	; 0x1c800000
    4a94:	6b636f6c 	blvs	18e084c <_Min_Heap_Size+0x18e004c>
    4a98:	61577800 	cmpvs	r7, r0, lsl #16
    4a9c:	6465746e 	strbtvs	r7, [r5], #-1134	; 0xfffffb92
    4aa0:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    4aa4:	6f507600 	svcvs	0x00507600
    4aa8:	6e497472 	mcrvs	4, 2, r7, cr9, cr2, {3}
    4aac:	61697469 	cmnvs	r9, r9, ror #8
    4ab0:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    4ab4:	636f6c42 	cmnvs	pc, #16896	; 0x4200
    4ab8:	7600736b 	strvc	r7, [r0], -fp, ror #6
    4abc:	74726f50 	ldrbtvc	r6, [r2], #-3920	; 0xfffff0b0
    4ac0:	48746547 	ldmdami	r4!, {r0, r1, r2, r6, r8, sl, sp, lr}^
    4ac4:	53706165 	cmnpl	r0, #1073741849	; 0x40000019
    4ac8:	73746174 	cmnvc	r4, #116, 2
    4acc:	4c787000 	ldclmi	0, cr7, [r8], #-0
    4ad0:	006b6e69 	rsbeq	r6, fp, r9, ror #28
    4ad4:	65526c75 	ldrbvs	r6, [r2, #-3189]	; 0xfffff38b
    4ad8:	64616f6c 	strbtvs	r6, [r1], #-3948	; 0xfffff094
    4adc:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    4ae0:	50760065 	rsbspl	r0, r6, r5, rrx
    4ae4:	4574726f 	ldrbmi	r7, [r4, #-623]!	; 0xfffffd91
    4ae8:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    4aec:	50465665 	subpl	r5, r6, r5, ror #12
    4af0:	76727000 	ldrbtvc	r7, [r2], -r0
    4af4:	6b736154 	blvs	1cdd04c <_Min_Heap_Size+0x1cdc84c>
    4af8:	74697845 	strbtvc	r7, [r9], #-2117	; 0xfffff7bb
    4afc:	6f727245 	svcvs	0x00727245
    4b00:	6c750072 	ldclvs	0, cr0, [r5], #-456	; 0xfffffe38
    4b04:	6d6d7544 	cfstr64vs	mvdx7, [sp, #-272]!	; 0xfffffef0
    4b08:	4d780079 	ldclmi	0, cr0, [r8, #-484]!	; 0xfffffe1c
    4b0c:	6d697861 	stclvs	8, cr7, [r9, #-388]!	; 0xfffffe7c
    4b10:	6f506d75 	svcvs	0x00506d75
    4b14:	62697373 	rsbvs	r7, r9, #-872415231	; 0xcc000001
    4b18:	7553656c 	ldrbvc	r6, [r3, #-1388]	; 0xfffffa94
    4b1c:	65727070 	ldrbvs	r7, [r2, #-112]!	; 0xffffff90
    4b20:	64657373 	strbtvs	r7, [r5], #-883	; 0xfffffc8d
    4b24:	6b636954 	blvs	18df07c <_Min_Heap_Size+0x18de87c>
    4b28:	4d780073 	ldclmi	0, cr0, [r8, #-460]!	; 0xfffffe34
    4b2c:	6669646f 	strbtvs	r6, [r9], -pc, ror #8
    4b30:	6c626169 	stfvse	f6, [r2], #-420	; 0xfffffe5c
    4b34:	6c644965 			; <UNDEFINED> instruction: 0x6c644965
    4b38:	6d695465 	cfstrdvs	mvd5, [r9, #-404]!	; 0xfffffe6c
    4b3c:	50760065 	rsbspl	r0, r6, r5, rrx
    4b40:	5374726f 	cmnpl	r4, #-268435450	; 0xf0000006
    4b44:	70757465 	rsbsvc	r7, r5, r5, ror #8
    4b48:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    4b4c:	746e4972 	strbtvc	r4, [lr], #-2418	; 0xfffff68e
    4b50:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    4b54:	75007470 	strvc	r7, [r0, #-1136]	; 0xfffffb90
    4b58:	6f74536c 	svcvs	0x0074536c
    4b5c:	64657070 	strbtvs	r7, [r5], #-112	; 0xffffff90
    4b60:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
    4b64:	6d6f4372 	stclvs	3, cr4, [pc, #-456]!	; 49a4 <_Min_Heap_Size+0x41a4>
    4b68:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
    4b6c:	6f697461 	svcvs	0x00697461
    4b70:	6c75006e 	ldclvs	0, cr0, [r5], #-440	; 0xfffffe48
    4b74:	706d6f43 	rsbvc	r6, sp, r3, asr #30
    4b78:	6574656c 	ldrbvs	r6, [r4, #-1388]!	; 0xfffffa94
    4b7c:	6b636954 	blvs	18df0d4 <_Min_Heap_Size+0x18de8d4>
    4b80:	69726550 	ldmdbvs	r2!, {r4, r6, r8, sl, sp, lr}^
    4b84:	0073646f 	rsbseq	r6, r3, pc, ror #8
    4b88:	61436c75 	hvcvs	14021	; 0x36c5
    4b8c:	6c75636c 	ldclvs	3, cr6, [r5], #-432	; 0xfffffe50
    4b90:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    4b94:	64616f4c 	strbtvs	r6, [r1], #-3916	; 0xfffff0b4
    4b98:	756c6156 	strbvc	r6, [ip, #-342]!	; 0xfffffeaa
    4b9c:	78750065 	ldmdavc	r5!, {r0, r2, r5, r6}^
    4ba0:	74697243 	strbtvc	r7, [r9], #-579	; 0xfffffdbd
    4ba4:	6c616369 	stclvs	3, cr6, [r1], #-420	; 0xfffffe5c
    4ba8:	7473654e 	ldrbtvc	r6, [r3], #-1358	; 0xfffffab2
    4bac:	00676e69 	rsbeq	r6, r7, r9, ror #28
    4bb0:	6f437870 	svcvs	0x00437870
    4bb4:	75006564 	strvc	r6, [r0, #-1380]	; 0xfffffa9c
    4bb8:	6d6f436c 	stclvs	3, cr4, [pc, #-432]!	; 4a10 <_Min_Heap_Size+0x4210>
    4bbc:	74656c70 	strbtvc	r6, [r5], #-3184	; 0xfffff390
    4bc0:	79536465 	ldmdbvc	r3, {r0, r2, r5, r6, sl, sp, lr}^
    4bc4:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
    4bc8:	6365446b 	cmnvs	r5, #1795162112	; 0x6b000000
    4bcc:	656d6572 	strbvs	r6, [sp, #-1394]!	; 0xfffffa8e
    4bd0:	0073746e 	rsbseq	r7, r3, lr, ror #8
    4bd4:	69546c75 	ldmdbvs	r4, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
    4bd8:	4372656d 	cmnmi	r2, #457179136	; 0x1b400000
    4bdc:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    4be0:	726f4673 	rsbvc	r4, pc, #120586240	; 0x7300000
    4be4:	54656e4f 	strbtpl	r6, [r5], #-3663	; 0xfffff1b1
    4be8:	006b6369 	rsbeq	r6, fp, r9, ror #6
    4bec:	65567870 	ldrbvs	r7, [r6, #-2160]	; 0xfffff790
    4bf0:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
    4bf4:	6c626154 	stfvse	f6, [r2], #-336	; 0xfffffeb0
    4bf8:	6f700065 	svcvs	0x00700065
    4bfc:	53497472 	movtpl	r7, #38002	; 0x9472
    4c00:	00745f52 	rsbseq	r5, r4, r2, asr pc
    4c04:	50767270 	rsbspl	r7, r6, r0, ror r2
    4c08:	5374726f 	cmnpl	r4, #-268435450	; 0xf0000006
    4c0c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    4c10:	73726946 	cmnvc	r2, #1146880	; 0x118000
    4c14:	73615474 	cmnvc	r1, #116, 8	; 0x74000000
    4c18:	6c75006b 	ldclvs	0, cr0, [r5], #-428	; 0xfffffe54
    4c1c:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
    4c20:	446b6369 	strbtmi	r6, [fp], #-873	; 0xfffffc97
    4c24:	65726365 	ldrbvs	r6, [r2, #-869]!	; 0xfffffc9b
    4c28:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
    4c2c:	66654c73 			; <UNDEFINED> instruction: 0x66654c73
    4c30:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
    4c34:	2f2e2e2f 	svccs	0x002e2e2f
    4c38:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 4b88 <_Min_Heap_Size+0x4388>
    4c3c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    4c40:	462f736f 	strtmi	r7, [pc], -pc, ror #6
    4c44:	52656572 	rsbpl	r6, r5, #478150656	; 0x1c800000
    4c48:	2f534f54 	svccs	0x00534f54
    4c4c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    4c50:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    4c54:	4343472f 	movtmi	r4, #14127	; 0x372f
    4c58:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
    4c5c:	344d435f 	strbcc	r4, [sp], #-863	; 0xfffffca1
    4c60:	6f702f46 	svcvs	0x00702f46
    4c64:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
    4c68:	65727000 	ldrbvs	r7, [r2, #-0]!
    4c6c:	65685f76 	strbvs	r5, [r8, #-3958]!	; 0xfffff08a
    4c70:	655f7061 	ldrbvs	r7, [pc, #-97]	; 4c17 <_Min_Heap_Size+0x4417>
    4c74:	6d00646e 	cfstrsvs	mvf6, [r0, #-440]	; 0xfffffe48
    4c78:	685f7861 	ldmdavs	pc, {r0, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    4c7c:	00706165 	rsbseq	r6, r0, r5, ror #2
    4c80:	64727470 	ldrbtvs	r7, [r2], #-1136	; 0xfffffb90
    4c84:	5f666669 	svcpl	0x00666669
    4c88:	2f2e0074 	svccs	0x002e0074
    4c8c:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
    4c90:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    4c94:	2f6e6f69 	svccs	0x006e6f69
    4c98:	6d737973 			; <UNDEFINED> instruction: 0x6d737973
    4c9c:	632e6d65 			; <UNDEFINED> instruction: 0x632e6d65
    4ca0:	694d5f00 	stmdbvs	sp, {r8, r9, sl, fp, ip, lr}^
    4ca4:	74535f6e 	ldrbvc	r5, [r3], #-3950	; 0xfffff092
    4ca8:	5f6b6361 	svcpl	0x006b6361
    4cac:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    4cb0:	636e6900 	cmnvs	lr, #0, 18
    4cb4:	5f5f0072 	svcpl	0x005f0072
    4cb8:	6b726273 	blvs	1c9d68c <_Min_Heap_Size+0x1c9ce8c>
    4cbc:	6165685f 	cmnvs	r5, pc, asr r8
    4cc0:	6e655f70 	mcrvs	15, 3, r5, cr5, cr0, {3}
    4cc4:	5f5f0064 	svcpl	0x005f0064
    4cc8:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
    4ccc:	735f006f 	cmpvc	pc, #111	; 0x6f
    4cd0:	006b7262 	rsbeq	r7, fp, r2, ror #4
    4cd4:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    4cd8:	696c5f6b 	stmdbvs	ip!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    4cdc:	0074696d 	rsbseq	r6, r4, sp, ror #18
    4ce0:	725f7473 	subsvc	r7, pc, #1929379840	; 0x73000000
    4ce4:	00766564 	rsbseq	r6, r6, r4, ror #10
    4ce8:	636f6c63 	cmnvs	pc, #25344	; 0x6300
    4cec:	00745f6b 	rsbseq	r5, r4, fp, ror #30
    4cf0:	69766e65 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    4cf4:	006e6f72 	rsbeq	r6, lr, r2, ror pc
    4cf8:	65736c5f 	ldrbvs	r6, [r3, #-3167]!	; 0xfffff3a1
    4cfc:	74006b65 	strvc	r6, [r0], #-2917	; 0xfffff49b
    4d00:	635f736d 	cmpvs	pc, #-1275068415	; 0xb4000001
    4d04:	6d697475 	cfstrdvs	mvd7, [r9, #-468]!	; 0xfffffe2c
    4d08:	655f0065 	ldrbvs	r0, [pc, #-101]	; 4cab <_Min_Heap_Size+0x44ab>
    4d0c:	76636578 			; <UNDEFINED> instruction: 0x76636578
    4d10:	76740065 	ldrbtvc	r0, [r4], -r5, rrx
    4d14:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    4d18:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    4d1c:	73007461 	movwvc	r7, #1121	; 0x461
    4d20:	74635f74 	strbtvc	r5, [r3], #-3956	; 0xfffff08c
    4d24:	5f006d69 	svcpl	0x00006d69
    4d28:	766e655f 			; <UNDEFINED> instruction: 0x766e655f
    4d2c:	78655f00 	stmdavc	r5!, {r8, r9, sl, fp, ip, lr}^
    4d30:	5f007469 	svcpl	0x00007469
    4d34:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
    4d38:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
    4d3c:	7665645f 			; <UNDEFINED> instruction: 0x7665645f
    4d40:	73665f00 	cmnvc	r6, #0, 30
    4d44:	00746174 	rsbseq	r6, r4, r4, ror r1
    4d48:	6c696b5f 			; <UNDEFINED> instruction: 0x6c696b5f
    4d4c:	6974006c 	ldmdbvs	r4!, {r2, r3, r5, r6}^
    4d50:	745f656d 	ldrbvc	r6, [pc], #-1389	; 4d58 <_Min_Heap_Size+0x4558>
    4d54:	695f5f00 	ldmdbvs	pc, {r8, r9, sl, fp, ip, lr}^	; <UNPREDICTABLE>
    4d58:	6c5f746e 	cfldrdvs	mvd7, [pc], {110}	; 0x6e
    4d5c:	74736165 	ldrbtvc	r6, [r3], #-357	; 0xfffffe9b
    4d60:	745f3436 	ldrbvc	r3, [pc], #-1078	; 4d68 <_Min_Heap_Size+0x4568>
    4d64:	5f747300 	svcpl	0x00747300
    4d68:	736b6c62 	cmnvc	fp, #25088	; 0x6200
    4d6c:	00657a69 	rsbeq	r7, r5, r9, ror #20
    4d70:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    4d74:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    4d78:	6d5f6573 	cfldr64vs	mvdx6, [pc, #-460]	; 4bb4 <_Min_Heap_Size+0x43b4>
    4d7c:	74696e6f 	strbtvc	r6, [r9], #-3695	; 0xfffff191
    4d80:	685f726f 	ldmdavs	pc, {r0, r1, r2, r3, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    4d84:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
    4d88:	73007365 	movwvc	r7, #869	; 0x365
    4d8c:	69675f74 	stmdbvs	r7!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4d90:	5f5f0064 	svcpl	0x005f0064
    4d94:	65646f6d 	strbvs	r6, [r4, #-3949]!	; 0xfffff093
    4d98:	2e00745f 	cfmvsrcs	mvf0, r7
    4d9c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
    4da0:	6163696c 	cmnvs	r3, ip, ror #18
    4da4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    4da8:	7379732f 	cmnvc	r9, #-1140850688	; 0xbc000000
    4dac:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
    4db0:	00632e73 	rsbeq	r2, r3, r3, ror lr
    4db4:	5f736d74 	svcpl	0x00736d74
    4db8:	69747363 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, r9, ip, sp, lr}^
    4dbc:	5f00656d 	svcpl	0x0000656d
    4dc0:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    4dc4:	5f5f0073 	svcpl	0x005f0073
    4dc8:	6e696c6e 	cdpvs	12, 6, cr6, cr9, cr14, {3}
    4dcc:	00745f6b 	rsbseq	r5, r4, fp, ror #30
    4dd0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
    4dd4:	61775f00 	cmnvs	r7, r0, lsl #30
    4dd8:	73007469 	movwvc	r7, #1129	; 0x469
    4ddc:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
    4de0:	725f006f 	subsvc	r0, pc, #111	; 0x6f
    4de4:	00646165 	rsbeq	r6, r4, r5, ror #2
    4de8:	6f695f5f 	svcvs	0x00695f5f
    4dec:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    4df0:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
    4df4:	5f767400 	svcpl	0x00767400
    4df8:	6365736e 	cmnvs	r5, #-1207959551	; 0xb8000001
    4dfc:	5f747300 	svcpl	0x00747300
    4e00:	6e696c6e 	cdpvs	12, 6, cr6, cr9, cr14, {3}
    4e04:	6f5f006b 	svcvs	0x005f006b
    4e08:	006e6570 	rsbeq	r6, lr, r0, ror r5
    4e0c:	76677261 	strbtvc	r7, [r7], -r1, ror #4
    4e10:	625f5f00 	subsvs	r5, pc, #0, 30
    4e14:	69736b6c 	ldmdbvs	r3!, {r2, r3, r5, r6, r8, r9, fp, sp, lr}^
    4e18:	745f657a 	ldrbvc	r6, [pc], #-1402	; 4e20 <_Min_Heap_Size+0x4620>
    4e1c:	5f747300 	svcpl	0x00747300
    4e20:	6d697461 	cfstrdvs	mvd7, [r9, #-388]!	; 0xfffffe7c
    4e24:	696c5f00 	stmdbvs	ip!, {r8, r9, sl, fp, ip, lr}^
    4e28:	5f006b6e 	svcpl	0x00006b6e
    4e2c:	736f6c63 	cmnvc	pc, #25344	; 0x6300
    4e30:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
    4e34:	6f6c625f 	svcvs	0x006c625f
    4e38:	00736b63 	rsbseq	r6, r3, r3, ror #22
    4e3c:	6173695f 	cmnvs	r3, pc, asr r9
    4e40:	00797474 	rsbseq	r7, r9, r4, ror r4
    4e44:	6d5f7473 	cfldrdvs	mvd7, [pc, #-460]	; 4c80 <_Min_Heap_Size+0x4480>
    4e48:	006d6974 	rsbeq	r6, sp, r4, ror r9
    4e4c:	6e695f5f 	mcrvs	15, 3, r5, cr9, cr15, {2}
    4e50:	00745f6f 	rsbseq	r5, r4, pc, ror #30
    4e54:	5f736d74 	svcpl	0x00736d74
    4e58:	6d697473 	cfstrdvs	mvd7, [r9, #-460]!	; 0xfffffe34
    4e5c:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
    4e60:	6469755f 	strbtvs	r7, [r9], #-1375	; 0xfffffaa1
    4e64:	5f747300 	svcpl	0x00747300
    4e68:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    4e6c:	5f747300 	svcpl	0x00747300
    4e70:	72617073 	rsbvc	r7, r1, #115	; 0x73
    4e74:	44003465 	strmi	r3, [r0], #-1125	; 0xfffffb9b
    4e78:	49617461 	stmdbmi	r1!, {r0, r5, r6, sl, ip, sp, lr}^
    4e7c:	5f007864 	svcpl	0x00007864
    4e80:	6b726f66 	blvs	1ca0c20 <_Min_Heap_Size+0x1ca0420>
    4e84:	65675f00 	strbvs	r5, [r7, #-3840]!	; 0xfffff100
    4e88:	64697074 	strbtvs	r7, [r9], #-116	; 0xffffff8c
    4e8c:	645f5f00 	ldrbvs	r5, [pc], #-3840	; 4e94 <_Min_Heap_Size+0x4694>
    4e90:	745f7665 	ldrbvc	r7, [pc], #-1637	; 4e98 <_Min_Heap_Size+0x4698>
    4e94:	6f5f5f00 	svcvs	0x005f5f00
    4e98:	745f6666 	ldrbvc	r6, [pc], #-1638	; 4ea0 <_Min_Heap_Size+0x46a0>
    4e9c:	74617000 	strbtvc	r7, [r1], #-0
    4ea0:	69740068 	ldmdbvs	r4!, {r3, r5, r6}^
    4ea4:	7073656d 	rsbsvc	r6, r3, sp, ror #10
    4ea8:	5f006365 	svcpl	0x00006365
    4eac:	6469755f 	strbtvs	r7, [r9], #-1375	; 0xfffffaa1
    4eb0:	7300745f 	movwvc	r7, #1119	; 0x45f
    4eb4:	6f6d5f74 	svcvs	0x006d5f74
    4eb8:	74006564 	strvc	r6, [r0], #-1380	; 0xfffffa9c
    4ebc:	755f736d 	ldrbvc	r7, [pc, #-877]	; 4b57 <_Min_Heap_Size+0x4357>
    4ec0:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    4ec4:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
    4ec8:	6b6e696c 	blvs	1b9f480 <_Min_Heap_Size+0x1b9ec80>
    4ecc:	625f5f00 	subsvs	r5, pc, #0, 30
    4ed0:	6e636b6c 	vnmulvs.f64	d22, d3, d28
    4ed4:	00745f74 	rsbseq	r5, r4, r4, ror pc
    4ed8:	69675f5f 	stmdbvs	r7!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    4edc:	00745f64 	rsbseq	r5, r4, r4, ror #30
    4ee0:	74732f2e 	ldrbtvc	r2, [r3], #-3886	; 0xfffff0d2
    4ee4:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    4ee8:	63672f70 	cmnvs	r7, #112, 30	; 0x1c0
    4eec:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    4ef0:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    4ef4:	74735f70 	ldrbtvc	r5, [r3], #-3952	; 0xfffff090
    4ef8:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
    4efc:	78353034 	ldmdavc	r5!, {r2, r4, r5, ip, sp}
    4f00:	00732e78 	rsbseq	r2, r3, r8, ror lr
    4f04:	20554e47 	subscs	r4, r5, r7, asr #28
    4f08:	32205341 	eorcc	r5, r0, #67108865	; 0x4000001
    4f0c:	2e36332e 	cdpcs	3, 3, cr3, cr6, cr14, {1}
    4f10:	2e2e0031 	mcrcs	0, 1, r0, cr14, cr1, {1}
    4f14:	2f2e2e2f 	svccs	0x002e2e2f
    4f18:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 4e68 <_Min_Heap_Size+0x4668>
    4f1c:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    4f20:	2f736c69 	svccs	0x00736c69
    4f24:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    4f28:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    4f2c:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
    4f30:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
    4f34:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    4f38:	346d2d78 	strbtcc	r2, [sp], #-3448	; 0xfffff288
    4f3c:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    4f40:	672d746c 	strvs	r7, [sp, -ip, ror #8]!
    4f44:	732e6363 			; <UNDEFINED> instruction: 0x732e6363
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_Min_Heap_Size+0x10d0524>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
  errno = ENOMEM;
   8:	72412055 	subvc	r2, r1, #85	; 0x55
}
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
  1c:	6e696168 	powvsez	f6, f1, #0.0
    HAL_NVIC_DisableIRQ(USART1_IRQn);
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
}
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    if (status != HAL_OK)
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
      uwTickFreq = prevTickFreq;
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  errno = ENOMEM;
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	0000001c 	andeq	r0, r0, ip, lsl r0
      14:	00000000 	andeq	r0, r0, r0
    HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
      18:	080005c4 	stmdaeq	r0, {r2, r6, r7, r8, sl}
      1c:	00000044 	andeq	r0, r0, r4, asr #32
    HAL_NVIC_DisableIRQ(USART1_IRQn);
      20:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
      24:	100e4101 	andne	r4, lr, r1, lsl #2
}
      28:	040e0a52 	streq	r0, [lr], #-2642	; 0xfffff5ae
      2c:	00000b42 	andeq	r0, r0, r2, asr #22
      30:	00000014 	andeq	r0, r0, r4, lsl r0
    if (status != HAL_OK)
      34:	00000000 	andeq	r0, r0, r0
      uwTickFreq = prevTickFreq;
      38:	08000608 	stmdaeq	r0, {r3, r9, sl}
      3c:	00000018 	andeq	r0, r0, r8, lsl r0
      40:	83080e41 	movwhi	r0, #36417	; 0x8e41
      44:	00018e02 	andeq	r8, r1, r2, lsl #28
      48:	00000018 	andeq	r0, r0, r8, lsl r0
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
      4c:	00000000 	andeq	r0, r0, r0
            while( pxBlock != pxEnd )
      50:	08000620 	stmdaeq	r0, {r5, r9, sl}
      54:	00000020 	andeq	r0, r0, r0, lsr #32
                if( pxBlock->xBlockSize > xMaxSize )
      58:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
      5c:	100e4101 	andne	r4, lr, r1, lsl #2
                if( pxBlock->xBlockSize < xMinSize )
      60:	00040e4a 	andeq	r0, r4, sl, asr #28
                    xMinSize = pxBlock->xBlockSize;
      64:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      70:	00000020 	andeq	r0, r0, r0, lsr #32
      74:	83080e41 	movwhi	r0, #36417	; 0x8e41
      78:	00018e02 	andeq	r8, r1, r2, lsl #28
      7c:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
      88:	0000004c 	andeq	r0, r0, ip, asr #32
      8c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
      90:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
      94:	180e4101 	stmdane	lr, {r0, r8, lr}
      98:	000c0e5f 	andeq	r0, ip, pc, asr lr
      9c:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      a8:	00000018 	andeq	r0, r0, r8, lsl r0
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
      ac:	83080e41 	movwhi	r0, #36417	; 0x8e41
      b0:	00018e02 	andeq	r8, r1, r2, lsl #28
      huart->hdmatx->XferAbortCallback = NULL;
      b4:	00000014 	andeq	r0, r0, r4, lsl r0
	...
  if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
      c0:	00000018 	andeq	r0, r0, r8, lsl r0
      c4:	83080e41 	movwhi	r0, #36417	; 0x8e41
      c8:	00018e02 	andeq	r8, r1, r2, lsl #28
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
      cc:	00000014 	andeq	r0, r0, r4, lsl r0
	...
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
      d8:	00000018 	andeq	r0, r0, r8, lsl r0
      dc:	83080e41 	movwhi	r0, #36417	; 0x8e41
    ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
      e0:	00018e02 	andeq	r8, r1, r2, lsl #28
    if (huart->hdmarx != NULL)
      e4:	00000014 	andeq	r0, r0, r4, lsl r0
	...
        huart->hdmarx->XferAbortCallback = NULL;
      f0:	00000018 	andeq	r0, r0, r8, lsl r0
    huart->TxXferCount = 0x00U;
      f4:	83080e41 	movwhi	r0, #36417	; 0x8e41
    huart->ErrorCode = HAL_UART_ERROR_NONE;
      f8:	00018e02 	andeq	r8, r1, r2, lsl #28
    huart->gState  = HAL_UART_STATE_READY;
      fc:	00000014 	andeq	r0, r0, r4, lsl r0
	...
    HAL_UART_AbortCpltCallback(huart);
     108:	00000018 	andeq	r0, r0, r8, lsl r0
     10c:	83080e41 	movwhi	r0, #36417	; 0x8e41
  uint32_t AbortCplt = 0x01U;
     110:	00018e02 	andeq	r8, r1, r2, lsl #28
  if (AbortCplt == 0x01U)
     114:	00000014 	andeq	r0, r0, r4, lsl r0
	...
}
     120:	00000018 	andeq	r0, r0, r8, lsl r0
     124:	83080e41 	movwhi	r0, #36417	; 0x8e41
                    taskYIELD_WITHIN_API();
     128:	00018e02 	andeq	r8, r1, r2, lsl #28
     12c:	00000014 	andeq	r0, r0, r4, lsl r0
     130:	00000000 	andeq	r0, r0, r0
     134:	08000640 	stmdaeq	r0, {r6, r9, sl}
     138:	0000002c 	andeq	r0, r0, ip, lsr #32
            prvUnlockQueue( pxQueue );
     13c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     140:	00018e02 	andeq	r8, r1, r2, lsl #28
            ( void ) xTaskResumeAll();
     144:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
     150:	000000a8 	andeq	r0, r0, r8, lsr #1
     154:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     158:	580e4101 	stmdapl	lr, {r0, r8, lr}
     15c:	0e0a4602 	cfmadd32eq	mvax0, mvfx4, mvfx10, mvfx2
     160:	000b4204 	andeq	r4, fp, r4, lsl #4
     164:	0000000c 	andeq	r0, r0, ip
     168:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     16c:	7c020001 	stcvc	0, cr0, [r2], {1}
     170:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     174:	00000014 	andeq	r0, r0, r4, lsl r0
     178:	00000164 	andeq	r0, r0, r4, ror #2
     17c:	0800066c 	stmdaeq	r0, {r2, r3, r5, r6, r9, sl}
     180:	00000014 	andeq	r0, r0, r4, lsl r0
}
     184:	83080e41 	movwhi	r0, #36417	; 0x8e41
  assert_param(IS_DMA_CHANNEL(hdma->Init.Channel));
     188:	00018e02 	andeq	r8, r1, r2, lsl #28
     18c:	00000014 	andeq	r0, r0, r4, lsl r0
  assert_param(IS_DMA_DIRECTION(hdma->Init.Direction));
     190:	00000164 	andeq	r0, r0, r4, ror #2
     194:	00000000 	andeq	r0, r0, r0
     198:	00000014 	andeq	r0, r0, r4, lsl r0
  assert_param(IS_DMA_PERIPHERAL_INC_STATE(hdma->Init.PeriphInc));
     19c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     1a0:	00018e02 	andeq	r8, r1, r2, lsl #28
  assert_param(IS_DMA_MEMORY_INC_STATE(hdma->Init.MemInc));
     1a4:	00000014 	andeq	r0, r0, r4, lsl r0
     1a8:	00000164 	andeq	r0, r0, r4, ror #2
     1ac:	08000680 	stmdaeq	r0, {r7, r9, sl}
  assert_param(IS_DMA_PERIPHERAL_DATA_SIZE(hdma->Init.PeriphDataAlignment));
     1b0:	00000014 	andeq	r0, r0, r4, lsl r0
     1b4:	83080e41 	movwhi	r0, #36417	; 0x8e41
  assert_param(IS_DMA_MEMORY_DATA_SIZE(hdma->Init.MemDataAlignment));
     1b8:	00018e02 	andeq	r8, r1, r2, lsl #28
     1bc:	00000014 	andeq	r0, r0, r4, lsl r0
     1c0:	00000164 	andeq	r0, r0, r4, ror #2
  assert_param(IS_DMA_MODE(hdma->Init.Mode));
     1c4:	08000694 	stmdaeq	r0, {r2, r4, r7, r9, sl}
     1c8:	00000014 	andeq	r0, r0, r4, lsl r0
  assert_param(IS_DMA_PRIORITY(hdma->Init.Priority));
     1cc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     1d0:	00018e02 	andeq	r8, r1, r2, lsl #28
     1d4:	00000014 	andeq	r0, r0, r4, lsl r0
  assert_param(IS_DMA_FIFO_MODE_STATE(hdma->Init.FIFOMode));
     1d8:	00000164 	andeq	r0, r0, r4, ror #2
     1dc:	080006a8 	stmdaeq	r0, {r3, r5, r7, r9, sl}
    assert_param(IS_DMA_FIFO_THRESHOLD(hdma->Init.FIFOThreshold));
     1e0:	00000014 	andeq	r0, r0, r4, lsl r0
     1e4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     1e8:	00018e02 	andeq	r8, r1, r2, lsl #28
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
     1ec:	00000014 	andeq	r0, r0, r4, lsl r0
     1f0:	00000164 	andeq	r0, r0, r4, ror #2
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
     1f4:	080006bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl}
     1f8:	00000008 	andeq	r0, r0, r8
     1fc:	83080e41 	movwhi	r0, #36417	; 0x8e41
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
     200:	00018e02 	andeq	r8, r1, r2, lsl #28
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
     204:	0000000c 	andeq	r0, r0, ip
     208:	00000164 	andeq	r0, r0, r4, ror #2
     20c:	080006c4 	stmdaeq	r0, {r2, r6, r7, r9, sl}
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
     210:	00000002 	andeq	r0, r0, r2
     214:	00000014 	andeq	r0, r0, r4, lsl r0
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
     218:	00000164 	andeq	r0, r0, r4, ror #2
     21c:	080006c6 	stmdaeq	r0, {r1, r2, r6, r7, r9, sl}
          hdma->Init.Mode                | hdma->Init.Priority;
     220:	00000008 	andeq	r0, r0, r8
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     224:	83080e41 	movwhi	r0, #36417	; 0x8e41
     228:	00018e02 	andeq	r8, r1, r2, lsl #28
  tmp = hdma->Instance->FCR;
     22c:	00000014 	andeq	r0, r0, r4, lsl r0
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
     230:	00000164 	andeq	r0, r0, r4, ror #2
  tmp |= hdma->Init.FIFOMode;
     234:	080006ce 	stmdaeq	r0, {r1, r2, r3, r6, r7, r9, sl}
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
     238:	00000016 	andeq	r0, r0, r6, lsl r0
    tmp |= hdma->Init.FIFOThreshold;
     23c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
     240:	00018e02 	andeq	r8, r1, r2, lsl #28
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
     244:	00000014 	andeq	r0, r0, r4, lsl r0
     248:	00000164 	andeq	r0, r0, r4, ror #2
  hdma->Instance->FCR = tmp;
     24c:	080006e4 	stmdaeq	r0, {r2, r5, r6, r7, r9, sl}
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
     250:	00000010 	andeq	r0, r0, r0, lsl r0
  regs->IFCR = 0x3FU << hdma->StreamIndex;
     254:	83080e41 	movwhi	r0, #36417	; 0x8e41
     258:	00018e02 	andeq	r8, r1, r2, lsl #28
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
     25c:	00000014 	andeq	r0, r0, r4, lsl r0
  hdma->State = HAL_DMA_STATE_READY;
     260:	00000164 	andeq	r0, r0, r4, ror #2
     264:	080006f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, sl}
  return HAL_OK;
     268:	00000018 	andeq	r0, r0, r8, lsl r0
     26c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     270:	00018e02 	andeq	r8, r1, r2, lsl #28
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
     274:	00000014 	andeq	r0, r0, r4, lsl r0
     278:	00000164 	andeq	r0, r0, r4, ror #2
     27c:	0800070c 	stmdaeq	r0, {r2, r3, r8, r9, sl}
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
     280:	00000018 	andeq	r0, r0, r8, lsl r0
        hdma->State = HAL_DMA_STATE_READY;
     284:	83080e41 	movwhi	r0, #36417	; 0x8e41
        return HAL_ERROR; 
     288:	00018e02 	andeq	r8, r1, r2, lsl #28
    return HAL_ERROR;
     28c:	0000000c 	andeq	r0, r0, ip
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     290:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
     294:	7c020001 	stcvc	0, cr0, [r2], {1}
     298:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      tickstart = HAL_GetTick();
     29c:	00000014 	andeq	r0, r0, r4, lsl r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
     2a0:	0000028c 	andeq	r0, r0, ip, lsl #5
     2a4:	08000724 	stmdaeq	r0, {r2, r5, r8, r9, sl}
     2a8:	0000004c 	andeq	r0, r0, ip, asr #32
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     2ac:	61100e41 	tstvs	r0, r1, asr #28
     2b0:	0000000e 	andeq	r0, r0, lr
     2b4:	0000000c 	andeq	r0, r0, ip
          return HAL_TIMEOUT;
     2b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
     2bc:	7c020001 	stcvc	0, cr0, [r2], {1}
     2c0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     2c4:	00000014 	andeq	r0, r0, r4, lsl r0
    FlagStatus       pwrclkchanged = RESET;
     2c8:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
      SET_BIT(PWR->CR, PWR_CR_DBP);
     2cc:	08000770 	stmdaeq	r0, {r4, r5, r6, r8, r9, sl}
     2d0:	00000034 	andeq	r0, r0, r4, lsr r0
     2d4:	83080e41 	movwhi	r0, #36417	; 0x8e41
      tickstart = HAL_GetTick();
     2d8:	00018e02 	andeq	r8, r1, r2, lsl #28
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
     2dc:	0000001c 	andeq	r0, r0, ip, lsl r0
     2e0:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
     2e4:	080007a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, sl}
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
     2e8:	00000080 	andeq	r0, r0, r0, lsl #1
     2ec:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
          return HAL_TIMEOUT;
     2f0:	41018e02 	tstmi	r1, r2, lsl #28
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
     2f4:	0a4e280e 	beq	138a334 <_Min_Heap_Size+0x1389b34>
     2f8:	0b41080e 	bleq	1042338 <_Min_Heap_Size+0x1041b38>
     2fc:	00000014 	andeq	r0, r0, r4, lsl r0
     300:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
     304:	00000000 	andeq	r0, r0, r0
     308:	00000034 	andeq	r0, r0, r4, lsr r0
     30c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     310:	00018e02 	andeq	r8, r1, r2, lsl #28
      tickstart = HAL_GetTick();
     314:	0000000c 	andeq	r0, r0, ip
     318:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
     31c:	7c020001 	stcvc	0, cr0, [r2], {1}
     320:	000d0c0e 	andeq	r0, sp, lr, lsl #24
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
     324:	00000014 	andeq	r0, r0, r4, lsl r0
     328:	00000314 	andeq	r0, r0, r4, lsl r3
     32c:	08000824 	stmdaeq	r0, {r2, r5, fp}
     330:	00000038 	andeq	r0, r0, r8, lsr r0
          return HAL_TIMEOUT;
     334:	57080e41 	strpl	r0, [r8, -r1, asr #28]
    if(pwrclkchanged == SET)
     338:	0000000e 	andeq	r0, r0, lr
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     33c:	0000000c 	andeq	r0, r0, ip
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
     340:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     344:	7c020001 	stcvc	0, cr0, [r2], {1}
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
     348:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     34c:	0000000c 	andeq	r0, r0, ip
     350:	0000033c 	andeq	r0, r0, ip, lsr r3
     354:	00000000 	andeq	r0, r0, r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
     358:	00000020 	andeq	r0, r0, r0, lsr #32
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     35c:	0000000c 	andeq	r0, r0, ip
     360:	0000033c 	andeq	r0, r0, ip, lsr r3
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     364:	0800085c 	stmdaeq	r0, {r2, r3, r4, r6, fp}
     368:	0000005c 	andeq	r0, r0, ip, asr r0
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     36c:	0000000c 	andeq	r0, r0, ip
     370:	0000033c 	andeq	r0, r0, ip, lsr r3
     374:	080008b8 	stmdaeq	r0, {r3, r4, r5, r7, fp}
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     378:	00000060 	andeq	r0, r0, r0, rrx
     37c:	00000018 	andeq	r0, r0, r8, lsl r0
     380:	0000033c 	andeq	r0, r0, ip, lsr r3
     384:	08000918 	stmdaeq	r0, {r3, r4, r8, fp}
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     388:	00000174 	andeq	r0, r0, r4, ror r1
     38c:	83100e41 	tsthi	r0, #1040	; 0x410
        __HAL_RCC_PLL_DISABLE();
     390:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     394:	00018e02 	andeq	r8, r1, r2, lsl #28
        tickstart = HAL_GetTick();
     398:	00000028 	andeq	r0, r0, r8, lsr #32
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     39c:	0000033c 	andeq	r0, r0, ip, lsr r3
     3a0:	08000a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp}
     3a4:	0000008a 	andeq	r0, r0, sl, lsl #1
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     3a8:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     3ac:	86068507 	strhi	r8, [r6], -r7, lsl #10
            return HAL_TIMEOUT;
     3b0:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
      __HAL_RCC_PWR_CLK_DISABLE();
     3b4:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     3b8:	280e4101 	stmdacs	lr, {r0, r8, lr}
     3bc:	1c0e0a7c 			; <UNDEFINED> instruction: 0x1c0e0a7c
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
     3c0:	00000b42 	andeq	r0, r0, r2, asr #22
     3c4:	0000000c 	andeq	r0, r0, ip
     3c8:	0000033c 	andeq	r0, r0, ip, lsr r3
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
     3cc:	00000000 	andeq	r0, r0, r0
     3d0:	00000002 	andeq	r0, r0, r2
     3d4:	0000001c 	andeq	r0, r0, ip, lsl r0
        assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
     3d8:	0000033c 	andeq	r0, r0, ip, lsr r3
     3dc:	08000b18 	stmdaeq	r0, {r3, r4, r8, r9, fp}
     3e0:	0000012c 	andeq	r0, r0, ip, lsr #2
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
     3e4:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
     3e8:	02018e02 	andeq	r8, r1, #2, 28
     3ec:	c4000e8b 	strgt	r0, [r0], #-3723	; 0xfffff175
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
     3f0:	000000ce 	andeq	r0, r0, lr, asr #1
     3f4:	0000001c 	andeq	r0, r0, ip, lsl r0
     3f8:	0000033c 	andeq	r0, r0, ip, lsr r3
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
     3fc:	00000000 	andeq	r0, r0, r0
     400:	000000e0 	andeq	r0, r0, r0, ror #1
     404:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
     408:	02018e02 	andeq	r8, r1, #2, 28
     40c:	c4000e66 	strgt	r0, [r0], #-3686	; 0xfffff19a
     410:	000000ce 	andeq	r0, r0, lr, asr #1
     414:	00000020 	andeq	r0, r0, r0, lsr #32
     418:	0000033c 	andeq	r0, r0, ip, lsr r3
     41c:	00000000 	andeq	r0, r0, r0
     420:	000000fc 	strdeq	r0, [r0], -ip
     424:	83100e43 	tsthi	r0, #1072	; 0x430
        __HAL_RCC_PLL_ENABLE();
     428:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     42c:	02018e02 	andeq	r8, r1, #2, 28
        tickstart = HAL_GetTick();
     430:	c3000e75 	movwgt	r0, #3701	; 0xe75
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
     434:	00cec5c4 	sbceq	ip, lr, r4, asr #11
     438:	00000020 	andeq	r0, r0, r0, lsr #32
     43c:	0000033c 	andeq	r0, r0, ip, lsr r3
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     440:	00000000 	andeq	r0, r0, r0
     444:	00000124 	andeq	r0, r0, r4, lsr #2
            return HAL_TIMEOUT;
     448:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
  return HAL_OK;
     44c:	86038504 	strhi	r8, [r3], -r4, lsl #10
        __HAL_RCC_PLL_DISABLE();
     450:	02018e02 	andeq	r8, r1, #2, 28
     454:	c4000e87 	strgt	r0, [r0], #-3719	; 0xfffff179
        tickstart = HAL_GetTick();
     458:	00cec6c5 	sbceq	ip, lr, r5, asr #13
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
     45c:	0000000c 	andeq	r0, r0, ip
     460:	0000033c 	andeq	r0, r0, ip, lsr r3
     464:	00000000 	andeq	r0, r0, r0
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
     468:	00000002 	andeq	r0, r0, r2
     46c:	00000018 	andeq	r0, r0, r8, lsl r0
            return HAL_TIMEOUT;
     470:	0000033c 	andeq	r0, r0, ip, lsr r3
  return HAL_OK;
     474:	00000000 	andeq	r0, r0, r0
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
     478:	00000078 	andeq	r0, r0, r8, ror r0
        pll_config = RCC->PLLCFGR;
     47c:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     480:	74018e02 	strvc	r8, [r1], #-3586	; 0xfffff1fe
     484:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
     488:	00000028 	andeq	r0, r0, r8, lsr #32
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     48c:	0000033c 	andeq	r0, r0, ip, lsr r3
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
     490:	08000c44 	stmdaeq	r0, {r2, r6, sl, fp}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     494:	000000cc 	andeq	r0, r0, ip, asr #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
     498:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     49c:	86058506 	strhi	r8, [r5], -r6, lsl #10
     4a0:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4a4:	41018e02 	tstmi	r1, r2, lsl #28
     4a8:	5f02200e 	svcpl	0x0002200e
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
     4ac:	42180e0a 	andsmi	r0, r8, #10, 28	; 0xa0
     4b0:	0000000b 	andeq	r0, r0, fp
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
     4b4:	00000028 	andeq	r0, r0, r8, lsr #32
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
     4b8:	0000033c 	andeq	r0, r0, ip, lsr r3
     4bc:	00000000 	andeq	r0, r0, r0
  return HAL_OK;
     4c0:	000000d2 	ldrdeq	r0, [r0], -r2
}
     4c4:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
        return HAL_ERROR;
     4c8:	86058506 	strhi	r8, [r5], -r6, lsl #10
        return HAL_ERROR;
     4cc:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
}
     4d0:	41018e02 	tstmi	r1, r2, lsl #28
        return HAL_ERROR;
     4d4:	6202200e 	andvs	r2, r2, #14
          return HAL_ERROR;
     4d8:	42180e0a 	andsmi	r0, r8, #10, 28	; 0xa0
     4dc:	0000000b 	andeq	r0, r0, fp
     4e0:	0000000c 	andeq	r0, r0, ip
     4e4:	0000033c 	andeq	r0, r0, ip, lsr r3
     4e8:	00000000 	andeq	r0, r0, r0
     4ec:	00000038 	andeq	r0, r0, r8, lsr r0
     4f0:	00000018 	andeq	r0, r0, r8, lsl r0
     4f4:	0000033c 	andeq	r0, r0, ip, lsr r3
     4f8:	00000000 	andeq	r0, r0, r0
     4fc:	00000084 	andeq	r0, r0, r4, lsl #1
     500:	83100e41 	tsthi	r0, #1040	; 0x410
     504:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     508:	00018e02 	andeq	r8, r1, r2, lsl #28
     50c:	0000000c 	andeq	r0, r0, ip
     510:	0000033c 	andeq	r0, r0, ip, lsr r3
     514:	00000000 	andeq	r0, r0, r0
     518:	00000094 	muleq	r0, r4, r0
     51c:	00000014 	andeq	r0, r0, r4, lsl r0
     520:	0000033c 	andeq	r0, r0, ip, lsr r3
     524:	00000000 	andeq	r0, r0, r0
     528:	00000096 	muleq	r0, r6, r0
     52c:	70080e5a 	andvc	r0, r8, sl, asr lr
     530:	0000000e 	andeq	r0, r0, lr
     534:	00000014 	andeq	r0, r0, r4, lsl r0
     538:	0000033c 	andeq	r0, r0, ip, lsr r3
     53c:	00000000 	andeq	r0, r0, r0
     540:	00000084 	andeq	r0, r0, r4, lsl #1
     544:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     548:	00018e02 	andeq	r8, r1, r2, lsl #28
     54c:	00000028 	andeq	r0, r0, r8, lsr #32
     550:	0000033c 	andeq	r0, r0, ip, lsr r3
     554:	00000000 	andeq	r0, r0, r0
     558:	00000120 	andeq	r0, r0, r0, lsr #2
     55c:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     560:	86068507 	strhi	r8, [r6], -r7, lsl #10
     564:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     568:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     56c:	280e4101 	stmdacs	lr, {r0, r8, lr}
     570:	0e0a8902 	vmlaeq.f16	s16, s20, s4	; <UNPREDICTABLE>
     574:	000b421c 	andeq	r4, fp, ip, lsl r2
     578:	0000000c 	andeq	r0, r0, ip
     57c:	0000033c 	andeq	r0, r0, ip, lsr r3
     580:	00000000 	andeq	r0, r0, r0
     584:	00000004 	andeq	r0, r0, r4
     588:	00000014 	andeq	r0, r0, r4, lsl r0
     58c:	0000033c 	andeq	r0, r0, ip, lsr r3
     590:	00000000 	andeq	r0, r0, r0
     594:	000000f2 	strdeq	r0, [r0], -r2
     598:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     59c:	00018e02 	andeq	r8, r1, r2, lsl #28
     5a0:	00000014 	andeq	r0, r0, r4, lsl r0
     5a4:	0000033c 	andeq	r0, r0, ip, lsr r3
     5a8:	00000000 	andeq	r0, r0, r0
     5ac:	0000006c 	andeq	r0, r0, ip, rrx
     5b0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     5b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     5b8:	00000014 	andeq	r0, r0, r4, lsl r0
     5bc:	0000033c 	andeq	r0, r0, ip, lsr r3
     5c0:	00000000 	andeq	r0, r0, r0
     5c4:	000000a6 	andeq	r0, r0, r6, lsr #1
     5c8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     5cc:	00018e02 	andeq	r8, r1, r2, lsl #28
     5d0:	0000000c 	andeq	r0, r0, ip
     5d4:	0000033c 	andeq	r0, r0, ip, lsr r3
     5d8:	08000d10 	stmdaeq	r0, {r4, r8, sl, fp}
     5dc:	00000002 	andeq	r0, r0, r2
     5e0:	00000014 	andeq	r0, r0, r4, lsl r0
     5e4:	0000033c 	andeq	r0, r0, ip, lsr r3
     5e8:	00000000 	andeq	r0, r0, r0
     5ec:	0000004c 	andeq	r0, r0, ip, asr #32
     5f0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5f4:	00018e02 	andeq	r8, r1, r2, lsl #28
     5f8:	00000014 	andeq	r0, r0, r4, lsl r0
     5fc:	0000033c 	andeq	r0, r0, ip, lsr r3
     600:	08000d12 	stmdaeq	r0, {r1, r4, r8, sl, fp}
     604:	0000001a 	andeq	r0, r0, sl, lsl r0
     608:	83080e41 	movwhi	r0, #36417	; 0x8e41
     60c:	00018e02 	andeq	r8, r1, r2, lsl #28
     610:	0000000c 	andeq	r0, r0, ip
     614:	0000033c 	andeq	r0, r0, ip, lsr r3
     618:	00000000 	andeq	r0, r0, r0
     61c:	00000002 	andeq	r0, r0, r2
     620:	00000014 	andeq	r0, r0, r4, lsl r0
     624:	0000033c 	andeq	r0, r0, ip, lsr r3
     628:	00000000 	andeq	r0, r0, r0
     62c:	0000000a 	andeq	r0, r0, sl
     630:	83080e41 	movwhi	r0, #36417	; 0x8e41
     634:	00018e02 	andeq	r8, r1, r2, lsl #28
     638:	0000000c 	andeq	r0, r0, ip
     63c:	0000033c 	andeq	r0, r0, ip, lsr r3
     640:	08000d2c 	stmdaeq	r0, {r2, r3, r5, r8, sl, fp}
     644:	00000002 	andeq	r0, r0, r2
     648:	0000000c 	andeq	r0, r0, ip
     64c:	0000033c 	andeq	r0, r0, ip, lsr r3
     650:	00000000 	andeq	r0, r0, r0
     654:	00000002 	andeq	r0, r0, r2
     658:	0000000c 	andeq	r0, r0, ip
     65c:	0000033c 	andeq	r0, r0, ip, lsr r3
     660:	08000d2e 	stmdaeq	r0, {r1, r2, r3, r5, r8, sl, fp}
     664:	00000002 	andeq	r0, r0, r2
     668:	00000014 	andeq	r0, r0, r4, lsl r0
     66c:	0000033c 	andeq	r0, r0, ip, lsr r3
     670:	00000000 	andeq	r0, r0, r0
     674:	00000058 	andeq	r0, r0, r8, asr r0
     678:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     67c:	00018e02 	andeq	r8, r1, r2, lsl #28
     680:	00000014 	andeq	r0, r0, r4, lsl r0
     684:	0000033c 	andeq	r0, r0, ip, lsr r3
     688:	08000d30 	stmdaeq	r0, {r4, r5, r8, sl, fp}
     68c:	00000010 	andeq	r0, r0, r0, lsl r0
     690:	83080e41 	movwhi	r0, #36417	; 0x8e41
     694:	00018e02 	andeq	r8, r1, r2, lsl #28
     698:	0000000c 	andeq	r0, r0, ip
     69c:	0000033c 	andeq	r0, r0, ip, lsr r3
     6a0:	00000000 	andeq	r0, r0, r0
     6a4:	00000002 	andeq	r0, r0, r2
     6a8:	00000018 	andeq	r0, r0, r8, lsl r0
     6ac:	0000033c 	andeq	r0, r0, ip, lsr r3
     6b0:	00000000 	andeq	r0, r0, r0
     6b4:	00000124 	andeq	r0, r0, r4, lsr #2
     6b8:	83100e41 	tsthi	r0, #1040	; 0x410
     6bc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     6c0:	00018e02 	andeq	r8, r1, r2, lsl #28
     6c4:	00000014 	andeq	r0, r0, r4, lsl r0
     6c8:	0000033c 	andeq	r0, r0, ip, lsr r3
     6cc:	00000000 	andeq	r0, r0, r0
     6d0:	0000002c 	andeq	r0, r0, ip, lsr #32
     6d4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6d8:	00018e02 	andeq	r8, r1, r2, lsl #28
     6dc:	00000014 	andeq	r0, r0, r4, lsl r0
     6e0:	0000033c 	andeq	r0, r0, ip, lsr r3
     6e4:	00000000 	andeq	r0, r0, r0
     6e8:	0000002c 	andeq	r0, r0, ip, lsr #32
     6ec:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6f0:	00018e02 	andeq	r8, r1, r2, lsl #28
     6f4:	0000000c 	andeq	r0, r0, ip
     6f8:	0000033c 	andeq	r0, r0, ip, lsr r3
     6fc:	00000000 	andeq	r0, r0, r0
     700:	00000002 	andeq	r0, r0, r2
     704:	00000014 	andeq	r0, r0, r4, lsl r0
     708:	0000033c 	andeq	r0, r0, ip, lsr r3
     70c:	00000000 	andeq	r0, r0, r0
     710:	00000080 	andeq	r0, r0, r0, lsl #1
     714:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     718:	00018e02 	andeq	r8, r1, r2, lsl #28
     71c:	00000014 	andeq	r0, r0, r4, lsl r0
     720:	0000033c 	andeq	r0, r0, ip, lsr r3
     724:	00000000 	andeq	r0, r0, r0
     728:	00000014 	andeq	r0, r0, r4, lsl r0
     72c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     730:	00018e02 	andeq	r8, r1, r2, lsl #28
     734:	0000000c 	andeq	r0, r0, ip
     738:	0000033c 	andeq	r0, r0, ip, lsr r3
     73c:	00000000 	andeq	r0, r0, r0
     740:	00000002 	andeq	r0, r0, r2
     744:	00000014 	andeq	r0, r0, r4, lsl r0
     748:	0000033c 	andeq	r0, r0, ip, lsr r3
     74c:	00000000 	andeq	r0, r0, r0
     750:	000000bc 	strheq	r0, [r0], -ip
     754:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     758:	00018e02 	andeq	r8, r1, r2, lsl #28
     75c:	00000014 	andeq	r0, r0, r4, lsl r0
     760:	0000033c 	andeq	r0, r0, ip, lsr r3
     764:	00000000 	andeq	r0, r0, r0
     768:	00000016 	andeq	r0, r0, r6, lsl r0
     76c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     770:	00018e02 	andeq	r8, r1, r2, lsl #28
     774:	0000000c 	andeq	r0, r0, ip
     778:	0000033c 	andeq	r0, r0, ip, lsr r3
     77c:	08000d40 	stmdaeq	r0, {r6, r8, sl, fp}
     780:	00000002 	andeq	r0, r0, r2
     784:	00000024 	andeq	r0, r0, r4, lsr #32
     788:	0000033c 	andeq	r0, r0, ip, lsr r3
     78c:	08000d42 	stmdaeq	r0, {r1, r6, r8, sl, fp}
     790:	000000e6 	andeq	r0, r0, r6, ror #1
     794:	8e040e60 	cdphi	14, 0, cr0, cr4, cr0, {3}
     798:	100e4101 	andne	r4, lr, r1, lsl #2
     79c:	42040e76 	andmi	r0, r4, #1888	; 0x760
     7a0:	53ce000e 	bicpl	r0, lr, #14
     7a4:	018e100e 	orreq	r1, lr, lr
     7a8:	ce000e43 	cdpgt	14, 0, cr0, cr0, cr3, {2}
     7ac:	00000020 	andeq	r0, r0, r0, lsr #32
     7b0:	0000033c 	andeq	r0, r0, ip, lsr r3
     7b4:	08000e28 	stmdaeq	r0, {r3, r5, r9, sl, fp}
     7b8:	00000288 	andeq	r0, r0, r8, lsl #5
     7bc:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     7c0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     7c4:	180e4101 	stmdane	lr, {r0, r8, lr}
     7c8:	0c0e0a67 			; <UNDEFINED> instruction: 0x0c0e0a67
     7cc:	00000b41 	andeq	r0, r0, r1, asr #22
     7d0:	00000014 	andeq	r0, r0, r4, lsl r0
     7d4:	0000033c 	andeq	r0, r0, ip, lsr r3
     7d8:	00000000 	andeq	r0, r0, r0
     7dc:	0000001e 	andeq	r0, r0, lr, lsl r0
     7e0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     7e8:	00000014 	andeq	r0, r0, r4, lsl r0
     7ec:	0000033c 	andeq	r0, r0, ip, lsr r3
     7f0:	00000000 	andeq	r0, r0, r0
     7f4:	0000009a 	muleq	r0, sl, r0
     7f8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7fc:	00018e02 	andeq	r8, r1, r2, lsl #28
     800:	00000014 	andeq	r0, r0, r4, lsl r0
     804:	0000033c 	andeq	r0, r0, ip, lsr r3
     808:	00000000 	andeq	r0, r0, r0
     80c:	00000084 	andeq	r0, r0, r4, lsl #1
     810:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     814:	00018e02 	andeq	r8, r1, r2, lsl #28
     818:	00000014 	andeq	r0, r0, r4, lsl r0
     81c:	0000033c 	andeq	r0, r0, ip, lsr r3
     820:	00000000 	andeq	r0, r0, r0
     824:	00000088 	andeq	r0, r0, r8, lsl #1
     828:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     82c:	00018e02 	andeq	r8, r1, r2, lsl #28
     830:	00000014 	andeq	r0, r0, r4, lsl r0
     834:	0000033c 	andeq	r0, r0, ip, lsr r3
     838:	00000000 	andeq	r0, r0, r0
     83c:	00000088 	andeq	r0, r0, r8, lsl #1
     840:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     844:	00018e02 	andeq	r8, r1, r2, lsl #28
     848:	0000000c 	andeq	r0, r0, ip
     84c:	0000033c 	andeq	r0, r0, ip, lsr r3
     850:	00000000 	andeq	r0, r0, r0
     854:	00000036 	andeq	r0, r0, r6, lsr r0
     858:	0000000c 	andeq	r0, r0, ip
     85c:	0000033c 	andeq	r0, r0, ip, lsr r3
     860:	00000000 	andeq	r0, r0, r0
     864:	00000036 	andeq	r0, r0, r6, lsr r0
     868:	0000000c 	andeq	r0, r0, ip
     86c:	0000033c 	andeq	r0, r0, ip, lsr r3
     870:	00000000 	andeq	r0, r0, r0
     874:	0000000c 	andeq	r0, r0, ip
     878:	0000000c 	andeq	r0, r0, ip
     87c:	0000033c 	andeq	r0, r0, ip, lsr r3
     880:	00000000 	andeq	r0, r0, r0
     884:	00000004 	andeq	r0, r0, r4
     888:	0000000c 	andeq	r0, r0, ip
     88c:	0000033c 	andeq	r0, r0, ip, lsr r3
     890:	00000000 	andeq	r0, r0, r0
     894:	00000036 	andeq	r0, r0, r6, lsr r0
     898:	00000014 	andeq	r0, r0, r4, lsl r0
     89c:	0000033c 	andeq	r0, r0, ip, lsr r3
     8a0:	00000000 	andeq	r0, r0, r0
     8a4:	00000026 	andeq	r0, r0, r6, lsr #32
     8a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     8ac:	00018e02 	andeq	r8, r1, r2, lsl #28
     8b0:	00000028 	andeq	r0, r0, r8, lsr #32
     8b4:	0000033c 	andeq	r0, r0, ip, lsr r3
     8b8:	00000000 	andeq	r0, r0, r0
     8bc:	00000066 	andeq	r0, r0, r6, rrx
     8c0:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     8c4:	41018e02 	tstmi	r1, r2, lsl #28
     8c8:	0a45100e 	beq	1144908 <_Min_Heap_Size+0x1144108>
     8cc:	0b41080e 	bleq	104290c <_Min_Heap_Size+0x104210c>
     8d0:	c4000e62 	strgt	r0, [r0], #-3682	; 0xfffff19e
     8d4:	100e42ce 	andne	r4, lr, lr, asr #5
     8d8:	018e0284 	orreq	r0, lr, r4, lsl #5
     8dc:	0000001c 	andeq	r0, r0, ip, lsl r0
     8e0:	0000033c 	andeq	r0, r0, ip, lsr r3
     8e4:	00000000 	andeq	r0, r0, r0
     8e8:	000000a4 	andeq	r0, r0, r4, lsr #1
     8ec:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     8f0:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     8f4:	180e4101 	stmdane	lr, {r0, r8, lr}
     8f8:	0c0e4902 			; <UNDEFINED> instruction: 0x0c0e4902
     8fc:	00000014 	andeq	r0, r0, r4, lsl r0
     900:	0000033c 	andeq	r0, r0, ip, lsr r3
     904:	00000000 	andeq	r0, r0, r0
     908:	00000026 	andeq	r0, r0, r6, lsr #32
     90c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     910:	00018e02 	andeq	r8, r1, r2, lsl #28
     914:	00000028 	andeq	r0, r0, r8, lsr #32
     918:	0000033c 	andeq	r0, r0, ip, lsr r3
     91c:	00000000 	andeq	r0, r0, r0
     920:	00000066 	andeq	r0, r0, r6, rrx
     924:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
     928:	41018e02 	tstmi	r1, r2, lsl #28
     92c:	0a45100e 	beq	114496c <_Min_Heap_Size+0x114416c>
     930:	0b41080e 	bleq	1042970 <_Min_Heap_Size+0x1042170>
     934:	c4000e62 	strgt	r0, [r0], #-3682	; 0xfffff19e
     938:	100e42ce 	andne	r4, lr, lr, asr #5
     93c:	018e0284 	orreq	r0, lr, r4, lsl #5
     940:	0000000c 	andeq	r0, r0, ip
     944:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     948:	7c020001 	stcvc	0, cr0, [r2], {1}
     94c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     950:	0000000c 	andeq	r0, r0, ip
     954:	00000940 	andeq	r0, r0, r0, asr #18
     958:	00000000 	andeq	r0, r0, r0
     95c:	00000004 	andeq	r0, r0, r4
     960:	00000034 	andeq	r0, r0, r4, lsr r0
     964:	00000940 	andeq	r0, r0, r0, asr #18
     968:	00000000 	andeq	r0, r0, r0
     96c:	000004fc 	strdeq	r0, [r0], -ip
     970:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     974:	86038504 	strhi	r8, [r3], -r4, lsl #10
     978:	41018e02 	tstmi	r1, r2, lsl #28
     97c:	5c03180e 	stcpl	8, cr1, [r3], {14}
     980:	c4000e02 	strgt	r0, [r0], #-3586	; 0xfffff1fe
     984:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
     988:	0484180e 	streq	r1, [r4], #2062	; 0x80e
     98c:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     990:	0a46018e 	beq	1180fd0 <_Min_Heap_Size+0x11807d0>
     994:	0b41100e 	bleq	10449d4 <_Min_Heap_Size+0x10441d4>
     998:	00000020 	andeq	r0, r0, r0, lsr #32
     99c:	00000940 	andeq	r0, r0, r0, asr #18
     9a0:	00000000 	andeq	r0, r0, r0
     9a4:	00000118 	andeq	r0, r0, r8, lsl r1
     9a8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     9ac:	86038504 	strhi	r8, [r3], -r4, lsl #10
     9b0:	41018e02 	tstmi	r1, r2, lsl #28
     9b4:	0a7e300e 	beq	1f8c9f4 <_Min_Heap_Size+0x1f8c1f4>
     9b8:	0b41100e 	bleq	10449f8 <_Min_Heap_Size+0x10441f8>
     9bc:	0000000c 	andeq	r0, r0, ip
     9c0:	00000940 	andeq	r0, r0, r0, asr #18
     9c4:	00000000 	andeq	r0, r0, r0
     9c8:	0000000c 	andeq	r0, r0, ip
     9cc:	0000000c 	andeq	r0, r0, ip
     9d0:	00000940 	andeq	r0, r0, r0, asr #18
     9d4:	00000000 	andeq	r0, r0, r0
     9d8:	0000000c 	andeq	r0, r0, ip
     9dc:	00000014 	andeq	r0, r0, r4, lsl r0
     9e0:	00000940 	andeq	r0, r0, r0, asr #18
     9e4:	00000000 	andeq	r0, r0, r0
     9e8:	000000d4 	ldrdeq	r0, [r0], -r4
     9ec:	83080e41 	movwhi	r0, #36417	; 0x8e41
     9f0:	00018e02 	andeq	r8, r1, r2, lsl #28
     9f4:	0000002c 	andeq	r0, r0, ip, lsr #32
     9f8:	00000940 	andeq	r0, r0, r0, asr #18
     9fc:	00000000 	andeq	r0, r0, r0
     a00:	0000021c 	andeq	r0, r0, ip, lsl r2
     a04:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
     a08:	86038504 	strhi	r8, [r3], -r4, lsl #10
     a0c:	02018e02 	andeq	r8, r1, #2, 28
     a10:	c4000ef6 	strgt	r0, [r0], #-3830	; 0xfffff10a
     a14:	42cec6c5 	sbcmi	ip, lr, #206569472	; 0xc500000
     a18:	0484100e 	streq	r1, [r4], #14
     a1c:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
     a20:	0000018e 	andeq	r0, r0, lr, lsl #3
     a24:	0000000c 	andeq	r0, r0, ip
     a28:	00000940 	andeq	r0, r0, r0, asr #18
     a2c:	080010b0 	stmdaeq	r0, {r4, r5, r7, ip}
     a30:	0000000c 	andeq	r0, r0, ip
     a34:	00000014 	andeq	r0, r0, r4, lsl r0
     a38:	00000940 	andeq	r0, r0, r0, asr #18
     a3c:	080010bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, ip}
     a40:	00000020 	andeq	r0, r0, r0, lsr #32
     a44:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a48:	00018e02 	andeq	r8, r1, r2, lsl #28
     a4c:	00000014 	andeq	r0, r0, r4, lsl r0
     a50:	00000940 	andeq	r0, r0, r0, asr #18
     a54:	080010dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, ip}
     a58:	00000020 	andeq	r0, r0, r0, lsr #32
     a5c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a60:	00018e02 	andeq	r8, r1, r2, lsl #28
     a64:	0000000c 	andeq	r0, r0, ip
     a68:	00000940 	andeq	r0, r0, r0, asr #18
     a6c:	00000000 	andeq	r0, r0, r0
     a70:	000000cc 	andeq	r0, r0, ip, asr #1
     a74:	0000000c 	andeq	r0, r0, ip
     a78:	00000940 	andeq	r0, r0, r0, asr #18
     a7c:	00000000 	andeq	r0, r0, r0
     a80:	0000003c 	andeq	r0, r0, ip, lsr r0
     a84:	0000000c 	andeq	r0, r0, ip
     a88:	00000940 	andeq	r0, r0, r0, asr #18
     a8c:	00000000 	andeq	r0, r0, r0
     a90:	00000002 	andeq	r0, r0, r2
     a94:	00000014 	andeq	r0, r0, r4, lsl r0
     a98:	00000940 	andeq	r0, r0, r0, asr #18
     a9c:	00000000 	andeq	r0, r0, r0
     aa0:	00000020 	andeq	r0, r0, r0, lsr #32
     aa4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     aa8:	00018e02 	andeq	r8, r1, r2, lsl #28
     aac:	0000000c 	andeq	r0, r0, ip
     ab0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ab4:	7c020001 	stcvc	0, cr0, [r2], {1}
     ab8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     abc:	00000024 	andeq	r0, r0, r4, lsr #32
     ac0:	00000aac 	andeq	r0, r0, ip, lsr #21
     ac4:	080010fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, ip}
     ac8:	000002e8 	andeq	r0, r0, r8, ror #5
     acc:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     ad0:	86058506 	strhi	r8, [r5], -r6, lsl #10
     ad4:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     ad8:	41018e02 	tstmi	r1, r2, lsl #28
     adc:	6703200e 	strvs	r2, [r3, -lr]
     ae0:	00180e01 	andseq	r0, r8, r1, lsl #28
     ae4:	0000001c 	andeq	r0, r0, ip, lsl r0
     ae8:	00000aac 	andeq	r0, r0, ip, lsr #21
     aec:	00000000 	andeq	r0, r0, r0
     af0:	00000184 	andeq	r0, r0, r4, lsl #3
     af4:	83180e41 	tsthi	r8, #1040	; 0x410
     af8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     afc:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     b00:	00018e02 	andeq	r8, r1, r2, lsl #28
     b04:	00000018 	andeq	r0, r0, r8, lsl r0
     b08:	00000aac 	andeq	r0, r0, ip, lsr #21
     b0c:	00000000 	andeq	r0, r0, r0
     b10:	00000028 	andeq	r0, r0, r8, lsr #32
     b14:	83100e41 	tsthi	r0, #1040	; 0x410
     b18:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     b1c:	00018e02 	andeq	r8, r1, r2, lsl #28
     b20:	00000018 	andeq	r0, r0, r8, lsl r0
     b24:	00000aac 	andeq	r0, r0, ip, lsr #21
     b28:	00000000 	andeq	r0, r0, r0
     b2c:	00000038 	andeq	r0, r0, r8, lsr r0
     b30:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     b34:	86038504 	strhi	r8, [r3], -r4, lsl #10
     b38:	00018e02 	andeq	r8, r1, r2, lsl #28
     b3c:	00000018 	andeq	r0, r0, r8, lsl r0
     b40:	00000aac 	andeq	r0, r0, ip, lsr #21
     b44:	00000000 	andeq	r0, r0, r0
     b48:	0000002c 	andeq	r0, r0, ip, lsr #32
     b4c:	83100e41 	tsthi	r0, #1040	; 0x410
     b50:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     b54:	00018e02 	andeq	r8, r1, r2, lsl #28
     b58:	00000020 	andeq	r0, r0, r0, lsr #32
     b5c:	00000aac 	andeq	r0, r0, ip, lsr #21
     b60:	00000000 	andeq	r0, r0, r0
     b64:	00000048 	andeq	r0, r0, r8, asr #32
     b68:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     b6c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     b70:	180e4101 	stmdane	lr, {r0, r8, lr}
     b74:	0c0e0a56 			; <UNDEFINED> instruction: 0x0c0e0a56
     b78:	00000b41 	andeq	r0, r0, r1, asr #22
     b7c:	0000000c 	andeq	r0, r0, ip
     b80:	00000aac 	andeq	r0, r0, ip, lsr #21
     b84:	00000000 	andeq	r0, r0, r0
     b88:	00000002 	andeq	r0, r0, r2
     b8c:	00000014 	andeq	r0, r0, r4, lsl r0
     b90:	00000aac 	andeq	r0, r0, ip, lsr #21
     b94:	00000000 	andeq	r0, r0, r0
     b98:	0000001c 	andeq	r0, r0, ip, lsl r0
     b9c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     ba0:	00018e02 	andeq	r8, r1, r2, lsl #28
     ba4:	0000000c 	andeq	r0, r0, ip
     ba8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     bac:	7c020001 	stcvc	0, cr0, [r2], {1}
     bb0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     bb4:	0000001c 	andeq	r0, r0, ip, lsl r0
     bb8:	00000ba4 	andeq	r0, r0, r4, lsr #23
     bbc:	00000000 	andeq	r0, r0, r0
     bc0:	0000002c 	andeq	r0, r0, ip, lsr #32
     bc4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     bc8:	4f018502 	svcmi	0x00018502
     bcc:	0ec4c50a 	cdpeq	5, 12, cr12, cr4, cr10, {0}
     bd0:	000b4100 	andeq	r4, fp, r0, lsl #2
     bd4:	00000018 	andeq	r0, r0, r8, lsl r0
     bd8:	00000ba4 	andeq	r0, r0, r4, lsr #23
     bdc:	00000000 	andeq	r0, r0, r0
     be0:	00000044 	andeq	r0, r0, r4, asr #32
     be4:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     be8:	c40a5501 	strgt	r5, [sl], #-1281	; 0xfffffaff
     bec:	0b41000e 	bleq	1040c2c <_Min_Heap_Size+0x104042c>
     bf0:	0000000c 	andeq	r0, r0, ip
     bf4:	00000ba4 	andeq	r0, r0, r4, lsr #23
     bf8:	00000000 	andeq	r0, r0, r0
     bfc:	0000008e 	andeq	r0, r0, lr, lsl #1
     c00:	00000018 	andeq	r0, r0, r8, lsl r0
     c04:	00000ba4 	andeq	r0, r0, r4, lsr #23
     c08:	00000000 	andeq	r0, r0, r0
     c0c:	0000028e 	andeq	r0, r0, lr, lsl #5
     c10:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     c14:	86038504 	strhi	r8, [r3], -r4, lsl #10
     c18:	00018e02 	andeq	r8, r1, r2, lsl #28
     c1c:	00000020 	andeq	r0, r0, r0, lsr #32
     c20:	00000ba4 	andeq	r0, r0, r4, lsr #23
     c24:	00000000 	andeq	r0, r0, r0
     c28:	000000dc 	ldrdeq	r0, [r0], -ip
     c2c:	83100e43 	tsthi	r0, #1072	; 0x430
     c30:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     c34:	02018e02 	andeq	r8, r1, #2, 28
     c38:	c3000e64 	movwgt	r0, #3684	; 0xe64
     c3c:	00cec5c4 	sbceq	ip, lr, r4, asr #11
     c40:	0000001c 	andeq	r0, r0, ip, lsl r0
     c44:	00000ba4 	andeq	r0, r0, r4, lsr #23
     c48:	00000000 	andeq	r0, r0, r0
     c4c:	00000078 	andeq	r0, r0, r8, ror r0
     c50:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     c54:	86058506 	strhi	r8, [r5], -r6, lsl #10
     c58:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     c5c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c60:	0000001c 	andeq	r0, r0, ip, lsl r0
     c64:	00000ba4 	andeq	r0, r0, r4, lsr #23
     c68:	00000000 	andeq	r0, r0, r0
     c6c:	00000098 	muleq	r0, r8, r0
     c70:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     c74:	86058506 	strhi	r8, [r5], -r6, lsl #10
     c78:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     c7c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c80:	00000018 	andeq	r0, r0, r8, lsl r0
     c84:	00000ba4 	andeq	r0, r0, r4, lsr #23
     c88:	080013e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, ip}
     c8c:	00000094 	muleq	r0, r4, r0
     c90:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     c94:	86038504 	strhi	r8, [r3], -r4, lsl #10
     c98:	00018e02 	andeq	r8, r1, r2, lsl #28
     c9c:	0000000c 	andeq	r0, r0, ip
     ca0:	00000ba4 	andeq	r0, r0, r4, lsr #23
     ca4:	08001478 	stmdaeq	r0, {r3, r4, r5, r6, sl, ip}
     ca8:	00000026 	andeq	r0, r0, r6, lsr #32
     cac:	00000020 	andeq	r0, r0, r0, lsr #32
     cb0:	00000ba4 	andeq	r0, r0, r4, lsr #23
     cb4:	00000000 	andeq	r0, r0, r0
     cb8:	00000128 	andeq	r0, r0, r8, lsr #2
     cbc:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     cc0:	86078508 	strhi	r8, [r7], -r8, lsl #10
     cc4:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     cc8:	8a038904 	bhi	e30e0 <_Min_Heap_Size+0xe28e0>
     ccc:	00018e02 	andeq	r8, r1, r2, lsl #28
     cd0:	00000020 	andeq	r0, r0, r0, lsr #32
     cd4:	00000ba4 	andeq	r0, r0, r4, lsr #23
     cd8:	00000000 	andeq	r0, r0, r0
     cdc:	000001dc 	ldrdeq	r0, [r0], -ip
     ce0:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     ce4:	86048505 	strhi	r8, [r4], -r5, lsl #10
     ce8:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     cec:	200e4101 	andcs	r4, lr, r1, lsl #2
     cf0:	140ee702 	strne	lr, [lr], #-1794	; 0xfffff8fe
     cf4:	0000000c 	andeq	r0, r0, ip
     cf8:	00000ba4 	andeq	r0, r0, r4, lsr #23
     cfc:	00000000 	andeq	r0, r0, r0
     d00:	0000005a 	andeq	r0, r0, sl, asr r0
     d04:	0000000c 	andeq	r0, r0, ip
     d08:	00000ba4 	andeq	r0, r0, r4, lsr #23
     d0c:	00000000 	andeq	r0, r0, r0
     d10:	0000006e 	andeq	r0, r0, lr, rrx
     d14:	0000000c 	andeq	r0, r0, ip
     d18:	00000ba4 	andeq	r0, r0, r4, lsr #23
     d1c:	00000000 	andeq	r0, r0, r0
     d20:	00000006 	andeq	r0, r0, r6
     d24:	0000000c 	andeq	r0, r0, ip
     d28:	00000ba4 	andeq	r0, r0, r4, lsr #23
     d2c:	00000000 	andeq	r0, r0, r0
     d30:	00000004 	andeq	r0, r0, r4
     d34:	0000000c 	andeq	r0, r0, ip
     d38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     d3c:	7c020001 	stcvc	0, cr0, [r2], {1}
     d40:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     d44:	00000014 	andeq	r0, r0, r4, lsl r0
     d48:	00000d34 	andeq	r0, r0, r4, lsr sp
     d4c:	080014a0 	stmdaeq	r0, {r5, r7, sl, ip}
     d50:	0000003c 	andeq	r0, r0, ip, lsr r0
     d54:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d58:	00018e02 	andeq	r8, r1, r2, lsl #28
     d5c:	00000018 	andeq	r0, r0, r8, lsl r0
     d60:	00000d34 	andeq	r0, r0, r4, lsr sp
     d64:	080014dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, ip}
     d68:	0000008c 	andeq	r0, r0, ip, lsl #1
     d6c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     d70:	86038504 	strhi	r8, [r3], -r4, lsl #10
     d74:	00018e02 	andeq	r8, r1, r2, lsl #28
     d78:	00000014 	andeq	r0, r0, r4, lsl r0
     d7c:	00000d34 	andeq	r0, r0, r4, lsr sp
     d80:	08001568 	stmdaeq	r0, {r3, r5, r6, r8, sl, ip}
     d84:	00000030 	andeq	r0, r0, r0, lsr r0
     d88:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d8c:	00018e02 	andeq	r8, r1, r2, lsl #28
     d90:	00000014 	andeq	r0, r0, r4, lsl r0
     d94:	00000d34 	andeq	r0, r0, r4, lsr sp
     d98:	00000000 	andeq	r0, r0, r0
     d9c:	00000038 	andeq	r0, r0, r8, lsr r0
     da0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     da4:	00018e02 	andeq	r8, r1, r2, lsl #28
     da8:	0000000c 	andeq	r0, r0, ip
     dac:	00000d34 	andeq	r0, r0, r4, lsr sp
     db0:	00000000 	andeq	r0, r0, r0
     db4:	00000024 	andeq	r0, r0, r4, lsr #32
     db8:	0000000c 	andeq	r0, r0, ip
     dbc:	00000d34 	andeq	r0, r0, r4, lsr sp
     dc0:	08001598 	stmdaeq	r0, {r3, r4, r7, r8, sl, ip}
     dc4:	00000028 	andeq	r0, r0, r8, lsr #32
     dc8:	0000000c 	andeq	r0, r0, ip
     dcc:	00000d34 	andeq	r0, r0, r4, lsr sp
     dd0:	00000000 	andeq	r0, r0, r0
     dd4:	0000001c 	andeq	r0, r0, ip, lsl r0
     dd8:	0000000c 	andeq	r0, r0, ip
     ddc:	00000d34 	andeq	r0, r0, r4, lsr sp
     de0:	00000000 	andeq	r0, r0, r0
     de4:	00000020 	andeq	r0, r0, r0, lsr #32
     de8:	00000014 	andeq	r0, r0, r4, lsl r0
     dec:	00000d34 	andeq	r0, r0, r4, lsr sp
     df0:	00000000 	andeq	r0, r0, r0
     df4:	00000128 	andeq	r0, r0, r8, lsr #2
     df8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     dfc:	00018e02 	andeq	r8, r1, r2, lsl #28
     e00:	0000000c 	andeq	r0, r0, ip
     e04:	00000d34 	andeq	r0, r0, r4, lsr sp
     e08:	00000000 	andeq	r0, r0, r0
     e0c:	00000006 	andeq	r0, r0, r6
     e10:	0000000c 	andeq	r0, r0, ip
     e14:	00000d34 	andeq	r0, r0, r4, lsr sp
     e18:	00000000 	andeq	r0, r0, r0
     e1c:	00000010 	andeq	r0, r0, r0, lsl r0
     e20:	0000001c 	andeq	r0, r0, ip, lsl r0
     e24:	00000d34 	andeq	r0, r0, r4, lsr sp
     e28:	00000000 	andeq	r0, r0, r0
     e2c:	0000007c 	andeq	r0, r0, ip, ror r0
     e30:	83180e41 	tsthi	r8, #1040	; 0x410
     e34:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     e38:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     e3c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e40:	00000014 	andeq	r0, r0, r4, lsl r0
     e44:	00000d34 	andeq	r0, r0, r4, lsr sp
     e48:	00000000 	andeq	r0, r0, r0
     e4c:	00000034 	andeq	r0, r0, r4, lsr r0
     e50:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e54:	00018e02 	andeq	r8, r1, r2, lsl #28
     e58:	00000014 	andeq	r0, r0, r4, lsl r0
     e5c:	00000d34 	andeq	r0, r0, r4, lsr sp
     e60:	00000000 	andeq	r0, r0, r0
     e64:	0000003c 	andeq	r0, r0, ip, lsr r0
     e68:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e6c:	00018e02 	andeq	r8, r1, r2, lsl #28
     e70:	00000014 	andeq	r0, r0, r4, lsl r0
     e74:	00000d34 	andeq	r0, r0, r4, lsr sp
     e78:	00000000 	andeq	r0, r0, r0
     e7c:	00000034 	andeq	r0, r0, r4, lsr r0
     e80:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e84:	00018e02 	andeq	r8, r1, r2, lsl #28
     e88:	00000014 	andeq	r0, r0, r4, lsl r0
     e8c:	00000d34 	andeq	r0, r0, r4, lsr sp
     e90:	00000000 	andeq	r0, r0, r0
     e94:	0000003c 	andeq	r0, r0, ip, lsr r0
     e98:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e9c:	00018e02 	andeq	r8, r1, r2, lsl #28
     ea0:	00000014 	andeq	r0, r0, r4, lsl r0
     ea4:	00000d34 	andeq	r0, r0, r4, lsr sp
     ea8:	00000000 	andeq	r0, r0, r0
     eac:	0000003c 	andeq	r0, r0, ip, lsr r0
     eb0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     eb4:	00018e02 	andeq	r8, r1, r2, lsl #28
     eb8:	0000000c 	andeq	r0, r0, ip
     ebc:	00000d34 	andeq	r0, r0, r4, lsr sp
     ec0:	00000000 	andeq	r0, r0, r0
     ec4:	00000002 	andeq	r0, r0, r2
     ec8:	00000014 	andeq	r0, r0, r4, lsl r0
     ecc:	00000d34 	andeq	r0, r0, r4, lsr sp
     ed0:	00000000 	andeq	r0, r0, r0
     ed4:	00000008 	andeq	r0, r0, r8
     ed8:	83080e41 	movwhi	r0, #36417	; 0x8e41
     edc:	00018e02 	andeq	r8, r1, r2, lsl #28
     ee0:	0000000c 	andeq	r0, r0, ip
     ee4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ee8:	7c020001 	stcvc	0, cr0, [r2], {1}
     eec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ef0:	0000000c 	andeq	r0, r0, ip
     ef4:	00000ee0 	andeq	r0, r0, r0, ror #29
     ef8:	00000000 	andeq	r0, r0, r0
     efc:	00000002 	andeq	r0, r0, r2
     f00:	0000000c 	andeq	r0, r0, ip
     f04:	00000ee0 	andeq	r0, r0, r0, ror #29
     f08:	00000000 	andeq	r0, r0, r0
     f0c:	00000002 	andeq	r0, r0, r2
     f10:	00000014 	andeq	r0, r0, r4, lsl r0
     f14:	00000ee0 	andeq	r0, r0, r0, ror #29
     f18:	00000000 	andeq	r0, r0, r0
     f1c:	0000003c 	andeq	r0, r0, ip, lsr r0
     f20:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f24:	00018e02 	andeq	r8, r1, r2, lsl #28
     f28:	00000014 	andeq	r0, r0, r4, lsl r0
     f2c:	00000ee0 	andeq	r0, r0, r0, ror #29
     f30:	080015c0 	stmdaeq	r0, {r6, r7, r8, sl, ip}
     f34:	0000004c 	andeq	r0, r0, ip, asr #32
     f38:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     f3c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f40:	00000014 	andeq	r0, r0, r4, lsl r0
     f44:	00000ee0 	andeq	r0, r0, r0, ror #29
     f48:	0800160c 	stmdaeq	r0, {r2, r3, r9, sl, ip}
     f4c:	00000034 	andeq	r0, r0, r4, lsr r0
     f50:	83080e41 	movwhi	r0, #36417	; 0x8e41
     f54:	00018e02 	andeq	r8, r1, r2, lsl #28
     f58:	0000000c 	andeq	r0, r0, ip
     f5c:	00000ee0 	andeq	r0, r0, r0, ror #29
     f60:	08001640 	stmdaeq	r0, {r6, r9, sl, ip}
     f64:	00000018 	andeq	r0, r0, r8, lsl r0
     f68:	0000000c 	andeq	r0, r0, ip
     f6c:	00000ee0 	andeq	r0, r0, r0, ror #29
     f70:	08001658 	stmdaeq	r0, {r3, r4, r6, r9, sl, ip}
     f74:	0000000c 	andeq	r0, r0, ip
     f78:	0000000c 	andeq	r0, r0, ip
     f7c:	00000ee0 	andeq	r0, r0, r0, ror #29
     f80:	00000000 	andeq	r0, r0, r0
     f84:	0000000c 	andeq	r0, r0, ip
     f88:	00000018 	andeq	r0, r0, r8, lsl r0
     f8c:	00000ee0 	andeq	r0, r0, r0, ror #29
     f90:	00000000 	andeq	r0, r0, r0
     f94:	00000048 	andeq	r0, r0, r8, asr #32
     f98:	83100e41 	tsthi	r0, #1040	; 0x410
     f9c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     fa0:	00018e02 	andeq	r8, r1, r2, lsl #28
     fa4:	0000000c 	andeq	r0, r0, ip
     fa8:	00000ee0 	andeq	r0, r0, r0, ror #29
     fac:	00000000 	andeq	r0, r0, r0
     fb0:	0000000c 	andeq	r0, r0, ip
     fb4:	00000018 	andeq	r0, r0, r8, lsl r0
     fb8:	00000ee0 	andeq	r0, r0, r0, ror #29
     fbc:	08001664 	stmdaeq	r0, {r2, r5, r6, r9, sl, ip}
     fc0:	00000028 	andeq	r0, r0, r8, lsr #32
     fc4:	83100e41 	tsthi	r0, #1040	; 0x410
     fc8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     fcc:	00018e02 	andeq	r8, r1, r2, lsl #28
     fd0:	0000000c 	andeq	r0, r0, ip
     fd4:	00000ee0 	andeq	r0, r0, r0, ror #29
     fd8:	00000000 	andeq	r0, r0, r0
     fdc:	0000000e 	andeq	r0, r0, lr
     fe0:	0000000c 	andeq	r0, r0, ip
     fe4:	00000ee0 	andeq	r0, r0, r0, ror #29
     fe8:	00000000 	andeq	r0, r0, r0
     fec:	0000000e 	andeq	r0, r0, lr
     ff0:	0000000c 	andeq	r0, r0, ip
     ff4:	00000ee0 	andeq	r0, r0, r0, ror #29
     ff8:	00000000 	andeq	r0, r0, r0
     ffc:	00000008 	andeq	r0, r0, r8
    1000:	0000000c 	andeq	r0, r0, ip
    1004:	00000ee0 	andeq	r0, r0, r0, ror #29
    1008:	00000000 	andeq	r0, r0, r0
    100c:	0000000c 	andeq	r0, r0, ip
    1010:	0000000c 	andeq	r0, r0, ip
    1014:	00000ee0 	andeq	r0, r0, r0, ror #29
    1018:	00000000 	andeq	r0, r0, r0
    101c:	00000010 	andeq	r0, r0, r0, lsl r0
    1020:	0000000c 	andeq	r0, r0, ip
    1024:	00000ee0 	andeq	r0, r0, r0, ror #29
    1028:	00000000 	andeq	r0, r0, r0
    102c:	00000010 	andeq	r0, r0, r0, lsl r0
    1030:	0000000c 	andeq	r0, r0, ip
    1034:	00000ee0 	andeq	r0, r0, r0, ror #29
    1038:	00000000 	andeq	r0, r0, r0
    103c:	00000010 	andeq	r0, r0, r0, lsl r0
    1040:	0000000c 	andeq	r0, r0, ip
    1044:	00000ee0 	andeq	r0, r0, r0, ror #29
    1048:	00000000 	andeq	r0, r0, r0
    104c:	00000010 	andeq	r0, r0, r0, lsl r0
    1050:	0000000c 	andeq	r0, r0, ip
    1054:	00000ee0 	andeq	r0, r0, r0, ror #29
    1058:	00000000 	andeq	r0, r0, r0
    105c:	00000010 	andeq	r0, r0, r0, lsl r0
    1060:	0000000c 	andeq	r0, r0, ip
    1064:	00000ee0 	andeq	r0, r0, r0, ror #29
    1068:	00000000 	andeq	r0, r0, r0
    106c:	00000010 	andeq	r0, r0, r0, lsl r0
    1070:	0000000c 	andeq	r0, r0, ip
    1074:	00000ee0 	andeq	r0, r0, r0, ror #29
    1078:	00000000 	andeq	r0, r0, r0
    107c:	00000010 	andeq	r0, r0, r0, lsl r0
    1080:	0000000c 	andeq	r0, r0, ip
    1084:	00000ee0 	andeq	r0, r0, r0, ror #29
    1088:	00000000 	andeq	r0, r0, r0
    108c:	00000010 	andeq	r0, r0, r0, lsl r0
    1090:	0000000c 	andeq	r0, r0, ip
    1094:	00000ee0 	andeq	r0, r0, r0, ror #29
    1098:	00000000 	andeq	r0, r0, r0
    109c:	00000010 	andeq	r0, r0, r0, lsl r0
    10a0:	0000000c 	andeq	r0, r0, ip
    10a4:	00000ee0 	andeq	r0, r0, r0, ror #29
    10a8:	00000000 	andeq	r0, r0, r0
    10ac:	0000000c 	andeq	r0, r0, ip
    10b0:	0000000c 	andeq	r0, r0, ip
    10b4:	00000ee0 	andeq	r0, r0, r0, ror #29
    10b8:	00000000 	andeq	r0, r0, r0
    10bc:	0000000c 	andeq	r0, r0, ip
    10c0:	0000000c 	andeq	r0, r0, ip
    10c4:	00000ee0 	andeq	r0, r0, r0, ror #29
    10c8:	00000000 	andeq	r0, r0, r0
    10cc:	0000000c 	andeq	r0, r0, ip
    10d0:	0000000c 	andeq	r0, r0, ip
    10d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    10d8:	7c020001 	stcvc	0, cr0, [r2], {1}
    10dc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    10e0:	0000000c 	andeq	r0, r0, ip
    10e4:	000010d0 	ldrdeq	r1, [r0], -r0
    10e8:	0800168c 	stmdaeq	r0, {r2, r3, r7, r9, sl, ip}
    10ec:	00000014 	andeq	r0, r0, r4, lsl r0
    10f0:	0000000c 	andeq	r0, r0, ip
    10f4:	000010d0 	ldrdeq	r1, [r0], -r0
    10f8:	00000000 	andeq	r0, r0, r0
    10fc:	000000a0 	andeq	r0, r0, r0, lsr #1
    1100:	0000000c 	andeq	r0, r0, ip
    1104:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1108:	7c020001 	stcvc	0, cr0, [r2], {1}
    110c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1110:	00000014 	andeq	r0, r0, r4, lsl r0
    1114:	00001100 	andeq	r1, r0, r0, lsl #2
    1118:	080016a0 	stmdaeq	r0, {r5, r7, r9, sl, ip}
    111c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1120:	54080e41 	strpl	r0, [r8], #-3649	; 0xfffff1bf
    1124:	0000000e 	andeq	r0, r0, lr
    1128:	0000000c 	andeq	r0, r0, ip
    112c:	00001100 	andeq	r1, r0, r0, lsl #2
    1130:	080016cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip}
    1134:	00000036 	andeq	r0, r0, r6, lsr r0
    1138:	00000014 	andeq	r0, r0, r4, lsl r0
    113c:	00001100 	andeq	r1, r0, r0, lsl #2
    1140:	08001704 	stmdaeq	r0, {r2, r8, r9, sl, ip}
    1144:	00000018 	andeq	r0, r0, r8, lsl r0
    1148:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    114c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1150:	00000014 	andeq	r0, r0, r4, lsl r0
    1154:	00001100 	andeq	r1, r0, r0, lsl #2
    1158:	0800171c 	stmdaeq	r0, {r2, r3, r4, r8, r9, sl, ip}
    115c:	00000050 	andeq	r0, r0, r0, asr r0
    1160:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1164:	00018e02 	andeq	r8, r1, r2, lsl #28
    1168:	00000020 	andeq	r0, r0, r0, lsr #32
    116c:	00001100 	andeq	r1, r0, r0, lsl #2
    1170:	0800176c 	stmdaeq	r0, {r2, r3, r5, r6, r8, r9, sl, ip}
    1174:	0000007c 	andeq	r0, r0, ip, ror r0
    1178:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
    117c:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    1180:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    1184:	89038804 	stmdbhi	r3, {r2, fp, pc}
    1188:	00018e02 	andeq	r8, r1, r2, lsl #28
    118c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1190:	00001100 	andeq	r1, r0, r0, lsl #2
    1194:	080017e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl, ip}
    1198:	00000184 	andeq	r0, r0, r4, lsl #3
    119c:	83180e41 	tsthi	r8, #1040	; 0x410
    11a0:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    11a4:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    11a8:	00018e02 	andeq	r8, r1, r2, lsl #28
    11ac:	0000000c 	andeq	r0, r0, ip
    11b0:	00001100 	andeq	r1, r0, r0, lsl #2
    11b4:	00000000 	andeq	r0, r0, r0
    11b8:	00000006 	andeq	r0, r0, r6
    11bc:	0000000c 	andeq	r0, r0, ip
    11c0:	00001100 	andeq	r1, r0, r0, lsl #2
    11c4:	00000000 	andeq	r0, r0, r0
    11c8:	00000008 	andeq	r0, r0, r8
    11cc:	0000000c 	andeq	r0, r0, ip
    11d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    11d4:	7c020001 	stcvc	0, cr0, [r2], {1}
    11d8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    11dc:	00000014 	andeq	r0, r0, r4, lsl r0
    11e0:	000011cc 	andeq	r1, r0, ip, asr #3
    11e4:	0800196c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp, ip}
    11e8:	00000088 	andeq	r0, r0, r8, lsl #1
    11ec:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    11f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    11f4:	0000000c 	andeq	r0, r0, ip
    11f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    11fc:	7c020001 	stcvc	0, cr0, [r2], {1}
    1200:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1204:	0000000c 	andeq	r0, r0, ip
    1208:	000011f4 	strdeq	r1, [r0], -r4
    120c:	080019f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, fp, ip}
    1210:	0000001a 	andeq	r0, r0, sl, lsl r0
    1214:	0000000c 	andeq	r0, r0, ip
    1218:	000011f4 	strdeq	r1, [r0], -r4
    121c:	08001a0e 	stmdaeq	r0, {r1, r2, r3, r9, fp, ip}
    1220:	00000006 	andeq	r0, r0, r6
    1224:	0000000c 	andeq	r0, r0, ip
    1228:	000011f4 	strdeq	r1, [r0], -r4
    122c:	00000000 	andeq	r0, r0, r0
    1230:	00000016 	andeq	r0, r0, r6, lsl r0
    1234:	0000001c 	andeq	r0, r0, ip, lsl r0
    1238:	000011f4 	strdeq	r1, [r0], -r4
    123c:	08001a14 	stmdaeq	r0, {r2, r4, r9, fp, ip}
    1240:	00000032 	andeq	r0, r0, r2, lsr r0
    1244:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1248:	55018502 	strpl	r8, [r1, #-1282]	; 0xfffffafe
    124c:	0ec4c50a 	cdpeq	5, 12, cr12, cr4, cr10, {0}
    1250:	000b4100 	andeq	r4, fp, r0, lsl #2
    1254:	0000000c 	andeq	r0, r0, ip
    1258:	000011f4 	strdeq	r1, [r0], -r4
    125c:	08001a46 	stmdaeq	r0, {r1, r2, r6, r9, fp, ip}
    1260:	00000024 	andeq	r0, r0, r4, lsr #32
    1264:	0000000c 	andeq	r0, r0, ip
    1268:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    126c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1270:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1274:	0000000c 	andeq	r0, r0, ip
    1278:	00001264 	andeq	r1, r0, r4, ror #4
    127c:	00000000 	andeq	r0, r0, r0
    1280:	00000010 	andeq	r0, r0, r0, lsl r0
    1284:	00000014 	andeq	r0, r0, r4, lsl r0
    1288:	00001264 	andeq	r1, r0, r4, ror #4
    128c:	00000000 	andeq	r0, r0, r0
    1290:	0000001e 	andeq	r0, r0, lr, lsl r0
    1294:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1298:	00018e02 	andeq	r8, r1, r2, lsl #28
    129c:	00000014 	andeq	r0, r0, r4, lsl r0
    12a0:	00001264 	andeq	r1, r0, r4, ror #4
    12a4:	08001a6a 	stmdaeq	r0, {r1, r3, r5, r6, r9, fp, ip}
    12a8:	0000001a 	andeq	r0, r0, sl, lsl r0
    12ac:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    12b0:	00018e02 	andeq	r8, r1, r2, lsl #28
    12b4:	00000018 	andeq	r0, r0, r8, lsl r0
    12b8:	00001264 	andeq	r1, r0, r4, ror #4
    12bc:	08001a84 	stmdaeq	r0, {r2, r7, r9, fp, ip}
    12c0:	00000076 	andeq	r0, r0, r6, ror r0
    12c4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    12c8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    12cc:	00018e02 	andeq	r8, r1, r2, lsl #28
    12d0:	00000018 	andeq	r0, r0, r8, lsl r0
    12d4:	00001264 	andeq	r1, r0, r4, ror #4
    12d8:	08001afa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, r9, fp, ip}
    12dc:	00000024 	andeq	r0, r0, r4, lsr #32
    12e0:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
    12e4:	4d018e02 	stcmi	14, cr8, [r1, #-8]
    12e8:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
    12ec:	00000020 	andeq	r0, r0, r0, lsr #32
    12f0:	00001264 	andeq	r1, r0, r4, ror #4
    12f4:	08001b1e 	stmdaeq	r0, {r1, r2, r3, r4, r8, r9, fp, ip}
    12f8:	00000058 	andeq	r0, r0, r8, asr r0
    12fc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1300:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1304:	41018e02 	tstmi	r1, r2, lsl #28
    1308:	0a49180e 	beq	1247348 <_Min_Heap_Size+0x1246b48>
    130c:	0b41100e 	bleq	104534c <_Min_Heap_Size+0x1044b4c>
    1310:	00000018 	andeq	r0, r0, r8, lsl r0
    1314:	00001264 	andeq	r1, r0, r4, ror #4
    1318:	08001b76 	stmdaeq	r0, {r1, r2, r4, r5, r6, r8, r9, fp, ip}
    131c:	00000082 	andeq	r0, r0, r2, lsl #1
    1320:	83100e41 	tsthi	r0, #1040	; 0x410
    1324:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1328:	00018e02 	andeq	r8, r1, r2, lsl #28
    132c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1330:	00001264 	andeq	r1, r0, r4, ror #4
    1334:	08001bf8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, r9, fp, ip}
    1338:	00000096 	muleq	r0, r6, r0
    133c:	83100e43 	tsthi	r0, #1072	; 0x430
    1340:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1344:	02018e02 	andeq	r8, r1, #2, 28
    1348:	c3000e44 	movwgt	r0, #3652	; 0xe44
    134c:	42cec5c4 	sbcmi	ip, lr, #196, 10	; 0x31000000
    1350:	0483100e 	streq	r1, [r3], #14
    1354:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1358:	0000018e 	andeq	r0, r0, lr, lsl #3
    135c:	00000014 	andeq	r0, r0, r4, lsl r0
    1360:	00001264 	andeq	r1, r0, r4, ror #4
    1364:	08001c8e 	stmdaeq	r0, {r1, r2, r3, r7, sl, fp, ip}
    1368:	00000020 	andeq	r0, r0, r0, lsr #32
    136c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1370:	00018e02 	andeq	r8, r1, r2, lsl #28
    1374:	00000028 	andeq	r0, r0, r8, lsr #32
    1378:	00001264 	andeq	r1, r0, r4, ror #4
    137c:	08001cae 	stmdaeq	r0, {r1, r2, r3, r5, r7, sl, fp, ip}
    1380:	0000003e 	andeq	r0, r0, lr, lsr r0
    1384:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
    1388:	41018e02 	tstmi	r1, r2, lsl #28
    138c:	0a51100e 	beq	14453cc <_Min_Heap_Size+0x1444bcc>
    1390:	0b41080e 	bleq	10433d0 <_Min_Heap_Size+0x1042bd0>
    1394:	c4000e44 	strgt	r0, [r0], #-3652	; 0xfffff1bc
    1398:	100e42ce 	andne	r4, lr, lr, asr #5
    139c:	018e0284 	orreq	r0, lr, r4, lsl #5
    13a0:	0000000c 	andeq	r0, r0, ip
    13a4:	00001264 	andeq	r1, r0, r4, ror #4
    13a8:	00000000 	andeq	r0, r0, r0
    13ac:	00000018 	andeq	r0, r0, r8, lsl r0
    13b0:	00000024 	andeq	r0, r0, r4, lsr #32
    13b4:	00001264 	andeq	r1, r0, r4, ror #4
    13b8:	00000000 	andeq	r0, r0, r0
    13bc:	00000056 	andeq	r0, r0, r6, asr r0
    13c0:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    13c4:	86048505 	strhi	r8, [r4], -r5, lsl #10
    13c8:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    13cc:	200e4101 	andcs	r4, lr, r1, lsl #2
    13d0:	140e0a64 	strne	r0, [lr], #-2660	; 0xfffff59c
    13d4:	00000b41 	andeq	r0, r0, r1, asr #22
    13d8:	00000028 	andeq	r0, r0, r8, lsr #32
    13dc:	00001264 	andeq	r1, r0, r4, ror #4
    13e0:	00000000 	andeq	r0, r0, r0
    13e4:	0000002a 	andeq	r0, r0, sl, lsr #32
    13e8:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
    13ec:	41018e02 	tstmi	r1, r2, lsl #28
    13f0:	0e4d100e 	cdpeq	0, 4, cr1, cr13, cr14, {0}
    13f4:	42cec400 	sbcmi	ip, lr, #0, 8
    13f8:	0284100e 	addeq	r1, r4, #14
    13fc:	0e42018e 	dvfeqd	f0, f2, #0.5
    1400:	00000008 	andeq	r0, r0, r8
    1404:	00000020 	andeq	r0, r0, r0, lsr #32
    1408:	00001264 	andeq	r1, r0, r4, ror #4
    140c:	00000000 	andeq	r0, r0, r0
    1410:	00000020 	andeq	r0, r0, r0, lsr #32
    1414:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
    1418:	4a018e02 	bmi	64c28 <_Min_Heap_Size+0x64428>
    141c:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
    1420:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
    1424:	00018e02 	andeq	r8, r1, r2, lsl #28
    1428:	00000024 	andeq	r0, r0, r4, lsr #32
    142c:	00001264 	andeq	r1, r0, r4, ror #4
    1430:	00000000 	andeq	r0, r0, r0
    1434:	0000014a 	andeq	r0, r0, sl, asr #2
    1438:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    143c:	86048505 	strhi	r8, [r4], -r5, lsl #10
    1440:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1444:	280e4101 	stmdacs	lr, {r0, r8, lr}
    1448:	140e0a63 	strne	r0, [lr], #-2659	; 0xfffff59d
    144c:	00000b41 	andeq	r0, r0, r1, asr #22
    1450:	00000018 	andeq	r0, r0, r8, lsl r0
    1454:	00001264 	andeq	r1, r0, r4, ror #4
    1458:	00000000 	andeq	r0, r0, r0
    145c:	00000018 	andeq	r0, r0, r8, lsl r0
    1460:	83080e42 	movwhi	r0, #36418	; 0x8e42
    1464:	49018e02 	stmdbmi	r1, {r1, r9, sl, fp, pc}
    1468:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
    146c:	00000014 	andeq	r0, r0, r4, lsl r0
    1470:	00001264 	andeq	r1, r0, r4, ror #4
    1474:	00000000 	andeq	r0, r0, r0
    1478:	00000016 	andeq	r0, r0, r6, lsl r0
    147c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1480:	00018e02 	andeq	r8, r1, r2, lsl #28
    1484:	0000001c 	andeq	r0, r0, ip, lsl r0
    1488:	00001264 	andeq	r1, r0, r4, ror #4
    148c:	00000000 	andeq	r0, r0, r0
    1490:	0000001e 	andeq	r0, r0, lr, lsl r0
    1494:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1498:	41018e02 	tstmi	r1, r2, lsl #28
    149c:	0e4c100e 	cdpeq	0, 4, cr1, cr12, cr14, {0}
    14a0:	00000008 	andeq	r0, r0, r8
    14a4:	00000018 	andeq	r0, r0, r8, lsl r0
    14a8:	00001264 	andeq	r1, r0, r4, ror #4
    14ac:	00000000 	andeq	r0, r0, r0
    14b0:	0000002c 	andeq	r0, r0, ip, lsr #32
    14b4:	83100e41 	tsthi	r0, #1040	; 0x410
    14b8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    14bc:	00018e02 	andeq	r8, r1, r2, lsl #28
    14c0:	00000020 	andeq	r0, r0, r0, lsr #32
    14c4:	00001264 	andeq	r1, r0, r4, ror #4
    14c8:	00000000 	andeq	r0, r0, r0
    14cc:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    14d0:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
    14d4:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    14d8:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    14dc:	89038804 	stmdbhi	r3, {r2, fp, pc}
    14e0:	00018e02 	andeq	r8, r1, r2, lsl #28
    14e4:	0000001c 	andeq	r0, r0, ip, lsl r0
    14e8:	00001264 	andeq	r1, r0, r4, ror #4
    14ec:	00000000 	andeq	r0, r0, r0
    14f0:	0000008c 	andeq	r0, r0, ip, lsl #1
    14f4:	83180e41 	tsthi	r8, #1040	; 0x410
    14f8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    14fc:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1500:	00018e02 	andeq	r8, r1, r2, lsl #28
    1504:	00000024 	andeq	r0, r0, r4, lsr #32
    1508:	00001264 	andeq	r1, r0, r4, ror #4
    150c:	08001cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, ip}
    1510:	00000110 	andeq	r0, r0, r0, lsl r1
    1514:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    1518:	86048505 	strhi	r8, [r4], -r5, lsl #10
    151c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1520:	280e4101 	stmdacs	lr, {r0, r8, lr}
    1524:	140e0a51 	strne	r0, [lr], #-2641	; 0xfffff5af
    1528:	00000b41 	andeq	r0, r0, r1, asr #22
    152c:	00000020 	andeq	r0, r0, r0, lsr #32
    1530:	00001264 	andeq	r1, r0, r4, ror #4
    1534:	00000000 	andeq	r0, r0, r0
    1538:	00000146 	andeq	r0, r0, r6, asr #2
    153c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1540:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1544:	41018e02 	tstmi	r1, r2, lsl #28
    1548:	0a4f200e 	beq	13c9588 <_Min_Heap_Size+0x13c8d88>
    154c:	0b41100e 	bleq	104558c <_Min_Heap_Size+0x1044d8c>
    1550:	00000018 	andeq	r0, r0, r8, lsl r0
    1554:	00001264 	andeq	r1, r0, r4, ror #4
    1558:	00000000 	andeq	r0, r0, r0
    155c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1560:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1564:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1568:	00018e02 	andeq	r8, r1, r2, lsl #28
    156c:	00000020 	andeq	r0, r0, r0, lsr #32
    1570:	00001264 	andeq	r1, r0, r4, ror #4
    1574:	00000000 	andeq	r0, r0, r0
    1578:	00000110 	andeq	r0, r0, r0, lsl r1
    157c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1580:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1584:	41018e02 	tstmi	r1, r2, lsl #28
    1588:	0a51200e 	beq	14495c8 <_Min_Heap_Size+0x1448dc8>
    158c:	0b41100e 	bleq	10455cc <_Min_Heap_Size+0x1044dcc>
    1590:	0000001c 	andeq	r0, r0, ip, lsl r0
    1594:	00001264 	andeq	r1, r0, r4, ror #4
    1598:	00000000 	andeq	r0, r0, r0
    159c:	0000007e 	andeq	r0, r0, lr, ror r0
    15a0:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    15a4:	86058506 	strhi	r8, [r5], -r6, lsl #10
    15a8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    15ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    15b0:	00000018 	andeq	r0, r0, r8, lsl r0
    15b4:	00001264 	andeq	r1, r0, r4, ror #4
    15b8:	00000000 	andeq	r0, r0, r0
    15bc:	00000030 	andeq	r0, r0, r0, lsr r0
    15c0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    15c4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    15c8:	00018e02 	andeq	r8, r1, r2, lsl #28
    15cc:	00000014 	andeq	r0, r0, r4, lsl r0
    15d0:	00001264 	andeq	r1, r0, r4, ror #4
    15d4:	00000000 	andeq	r0, r0, r0
    15d8:	00000012 	andeq	r0, r0, r2, lsl r0
    15dc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15e0:	00018e02 	andeq	r8, r1, r2, lsl #28
    15e4:	00000014 	andeq	r0, r0, r4, lsl r0
    15e8:	00001264 	andeq	r1, r0, r4, ror #4
    15ec:	00000000 	andeq	r0, r0, r0
    15f0:	00000016 	andeq	r0, r0, r6, lsl r0
    15f4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    15f8:	00018e02 	andeq	r8, r1, r2, lsl #28
    15fc:	0000000c 	andeq	r0, r0, ip
    1600:	00001264 	andeq	r1, r0, r4, ror #4
    1604:	00000000 	andeq	r0, r0, r0
    1608:	00000004 	andeq	r0, r0, r4
    160c:	00000014 	andeq	r0, r0, r4, lsl r0
    1610:	00001264 	andeq	r1, r0, r4, ror #4
    1614:	00000000 	andeq	r0, r0, r0
    1618:	00000010 	andeq	r0, r0, r0, lsl r0
    161c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1620:	00018e02 	andeq	r8, r1, r2, lsl #28
    1624:	0000000c 	andeq	r0, r0, ip
    1628:	00001264 	andeq	r1, r0, r4, ror #4
    162c:	00000000 	andeq	r0, r0, r0
    1630:	00000004 	andeq	r0, r0, r4
    1634:	0000000c 	andeq	r0, r0, ip
    1638:	00001264 	andeq	r1, r0, r4, ror #4
    163c:	00000000 	andeq	r0, r0, r0
    1640:	00000004 	andeq	r0, r0, r4
    1644:	0000000c 	andeq	r0, r0, ip
    1648:	00001264 	andeq	r1, r0, r4, ror #4
    164c:	00000000 	andeq	r0, r0, r0
    1650:	0000000c 	andeq	r0, r0, ip
    1654:	0000000c 	andeq	r0, r0, ip
    1658:	00001264 	andeq	r1, r0, r4, ror #4
    165c:	00000000 	andeq	r0, r0, r0
    1660:	00000010 	andeq	r0, r0, r0, lsl r0
    1664:	00000018 	andeq	r0, r0, r8, lsl r0
    1668:	00001264 	andeq	r1, r0, r4, ror #4
    166c:	08001dfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, fp, ip}
    1670:	00000052 	andeq	r0, r0, r2, asr r0
    1674:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1678:	86038504 	strhi	r8, [r3], -r4, lsl #10
    167c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1680:	00000014 	andeq	r0, r0, r4, lsl r0
    1684:	00001264 	andeq	r1, r0, r4, ror #4
    1688:	00000000 	andeq	r0, r0, r0
    168c:	0000000c 	andeq	r0, r0, ip
    1690:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1694:	00018e02 	andeq	r8, r1, r2, lsl #28
    1698:	00000018 	andeq	r0, r0, r8, lsl r0
    169c:	00001264 	andeq	r1, r0, r4, ror #4
    16a0:	00000000 	andeq	r0, r0, r0
    16a4:	00000026 	andeq	r0, r0, r6, lsr #32
    16a8:	83100e41 	tsthi	r0, #1040	; 0x410
    16ac:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    16b0:	00018e02 	andeq	r8, r1, r2, lsl #28
    16b4:	00000014 	andeq	r0, r0, r4, lsl r0
    16b8:	00001264 	andeq	r1, r0, r4, ror #4
    16bc:	00000000 	andeq	r0, r0, r0
    16c0:	00000026 	andeq	r0, r0, r6, lsr #32
    16c4:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
    16c8:	00018e02 	andeq	r8, r1, r2, lsl #28
    16cc:	00000018 	andeq	r0, r0, r8, lsl r0
    16d0:	00001264 	andeq	r1, r0, r4, ror #4
    16d4:	00000000 	andeq	r0, r0, r0
    16d8:	00000018 	andeq	r0, r0, r8, lsl r0
    16dc:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    16e0:	100e4101 	andne	r4, lr, r1, lsl #2
    16e4:	00040e48 	andeq	r0, r4, r8, asr #28
    16e8:	00000018 	andeq	r0, r0, r8, lsl r0
    16ec:	00001264 	andeq	r1, r0, r4, ror #4
    16f0:	00000000 	andeq	r0, r0, r0
    16f4:	00000016 	andeq	r0, r0, r6, lsl r0
    16f8:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    16fc:	100e4101 	andne	r4, lr, r1, lsl #2
    1700:	00040e47 	andeq	r0, r4, r7, asr #28
    1704:	0000000c 	andeq	r0, r0, ip
    1708:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    170c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1710:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1714:	0000000c 	andeq	r0, r0, ip
    1718:	00001704 	andeq	r1, r0, r4, lsl #14
    171c:	00000000 	andeq	r0, r0, r0
    1720:	00000044 	andeq	r0, r0, r4, asr #32
    1724:	0000000c 	andeq	r0, r0, ip
    1728:	00001704 	andeq	r1, r0, r4, lsl #14
    172c:	08001e50 	stmdaeq	r0, {r4, r6, r9, sl, fp, ip}
    1730:	00000040 	andeq	r0, r0, r0, asr #32
    1734:	00000018 	andeq	r0, r0, r8, lsl r0
    1738:	00001704 	andeq	r1, r0, r4, lsl #14
    173c:	00000000 	andeq	r0, r0, r0
    1740:	0000003e 	andeq	r0, r0, lr, lsr r0
    1744:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1748:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    174c:	00000001 	andeq	r0, r0, r1
    1750:	0000000c 	andeq	r0, r0, ip
    1754:	00001704 	andeq	r1, r0, r4, lsl #14
    1758:	00000000 	andeq	r0, r0, r0
    175c:	00000012 	andeq	r0, r0, r2, lsl r0
    1760:	0000000c 	andeq	r0, r0, ip
    1764:	00001704 	andeq	r1, r0, r4, lsl #14
    1768:	08001e90 	stmdaeq	r0, {r4, r7, r9, sl, fp, ip}
    176c:	00000028 	andeq	r0, r0, r8, lsr #32
    1770:	00000020 	andeq	r0, r0, r0, lsr #32
    1774:	00001704 	andeq	r1, r0, r4, lsl #14
    1778:	08001eb8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sl, fp, ip}
    177c:	00000094 	muleq	r0, r4, r0
    1780:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1784:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1788:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    178c:	8a038904 	bhi	e3ba4 <_Min_Heap_Size+0xe33a4>
    1790:	00018e02 	andeq	r8, r1, r2, lsl #28
    1794:	00000028 	andeq	r0, r0, r8, lsr #32
    1798:	00001704 	andeq	r1, r0, r4, lsl #14
    179c:	08001f4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, sl, fp, ip}
    17a0:	00000052 	andeq	r0, r0, r2, asr r0
    17a4:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    17a8:	86068507 	strhi	r8, [r6], -r7, lsl #10
    17ac:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    17b0:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    17b4:	300e4101 	andcc	r4, lr, r1, lsl #2
    17b8:	1c0e0a60 			; <UNDEFINED> instruction: 0x1c0e0a60
    17bc:	00000b42 	andeq	r0, r0, r2, asr #22
    17c0:	00000018 	andeq	r0, r0, r8, lsl r0
    17c4:	00001704 	andeq	r1, r0, r4, lsl #14
    17c8:	08001fa0 	stmdaeq	r0, {r5, r7, r8, r9, sl, fp, ip}
    17cc:	00000068 	andeq	r0, r0, r8, rrx
    17d0:	83100e41 	tsthi	r0, #1040	; 0x410
    17d4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    17d8:	00018e02 	andeq	r8, r1, r2, lsl #28
    17dc:	00000014 	andeq	r0, r0, r4, lsl r0
    17e0:	00001704 	andeq	r1, r0, r4, lsl #14
    17e4:	08002008 	stmdaeq	r0, {r3, sp}
    17e8:	000000cc 	andeq	r0, r0, ip, asr #1
    17ec:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    17f0:	00018e02 	andeq	r8, r1, r2, lsl #28
    17f4:	00000028 	andeq	r0, r0, r8, lsr #32
    17f8:	00001704 	andeq	r1, r0, r4, lsl #14
    17fc:	080020d4 	stmdaeq	r0, {r2, r4, r6, r7, sp}
    1800:	00000062 	andeq	r0, r0, r2, rrx
    1804:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    1808:	86068507 	strhi	r8, [r6], -r7, lsl #10
    180c:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    1810:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    1814:	300e4101 	andcc	r4, lr, r1, lsl #2
    1818:	1c0e0a66 			; <UNDEFINED> instruction: 0x1c0e0a66
    181c:	00000b42 	andeq	r0, r0, r2, asr #22
    1820:	00000014 	andeq	r0, r0, r4, lsl r0
    1824:	00001704 	andeq	r1, r0, r4, lsl #14
    1828:	08002136 	stmdaeq	r0, {r1, r2, r4, r5, r8, sp}
    182c:	00000024 	andeq	r0, r0, r4, lsr #32
    1830:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1834:	00018e02 	andeq	r8, r1, r2, lsl #28
    1838:	00000018 	andeq	r0, r0, r8, lsl r0
    183c:	00001704 	andeq	r1, r0, r4, lsl #14
    1840:	0800215c 	stmdaeq	r0, {r2, r3, r4, r6, r8, sp}
    1844:	0000004c 	andeq	r0, r0, ip, asr #32
    1848:	84080e44 	strhi	r0, [r8], #-3652	; 0xfffff1bc
    184c:	5a018e02 	bpl	6505c <_Min_Heap_Size+0x6485c>
    1850:	cec4000e 	cdpgt	0, 12, cr0, cr4, cr14, {0}
    1854:	0000001c 	andeq	r0, r0, ip, lsl r0
    1858:	00001704 	andeq	r1, r0, r4, lsl #14
    185c:	080021a8 	stmdaeq	r0, {r3, r5, r7, r8, sp}
    1860:	000000a8 	andeq	r0, r0, r8, lsr #1
    1864:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1868:	86058506 	strhi	r8, [r5], -r6, lsl #10
    186c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1870:	00018e02 	andeq	r8, r1, r2, lsl #28
    1874:	0000001c 	andeq	r0, r0, ip, lsl r0
    1878:	00001704 	andeq	r1, r0, r4, lsl #14
    187c:	08002250 	stmdaeq	r0, {r4, r6, r9, sp}
    1880:	00000028 	andeq	r0, r0, r8, lsr #32
    1884:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1888:	41018e02 	tstmi	r1, r2, lsl #28
    188c:	0e51200e 	cdpeq	0, 5, cr2, cr1, cr14, {0}
    1890:	00000008 	andeq	r0, r0, r8
    1894:	0000001c 	andeq	r0, r0, ip, lsl r0
    1898:	00001704 	andeq	r1, r0, r4, lsl #14
    189c:	08002278 	stmdaeq	r0, {r3, r4, r5, r6, r9, sp}
    18a0:	00000022 	andeq	r0, r0, r2, lsr #32
    18a4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    18a8:	41018e02 	tstmi	r1, r2, lsl #28
    18ac:	0a4b100e 	beq	12c58ec <_Min_Heap_Size+0x12c50ec>
    18b0:	0b41080e 	bleq	10438f0 <_Min_Heap_Size+0x10430f0>
    18b4:	00000018 	andeq	r0, r0, r8, lsl r0
    18b8:	00001704 	andeq	r1, r0, r4, lsl #14
    18bc:	00000000 	andeq	r0, r0, r0
    18c0:	000000ac 	andeq	r0, r0, ip, lsr #1
    18c4:	83100e41 	tsthi	r0, #1040	; 0x410
    18c8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    18cc:	00018e02 	andeq	r8, r1, r2, lsl #28
    18d0:	00000034 	andeq	r0, r0, r4, lsr r0
    18d4:	00001704 	andeq	r1, r0, r4, lsl #14
    18d8:	00000000 	andeq	r0, r0, r0
    18dc:	0000009c 	muleq	r0, ip, r0
    18e0:	84180e46 	ldrhi	r0, [r8], #-3654	; 0xfffff1ba
    18e4:	86058506 	strhi	r8, [r5], -r6, lsl #10
    18e8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    18ec:	6f018e02 	svcvs	0x00018e02
    18f0:	c5c4000e 	strbgt	r0, [r4, #14]
    18f4:	cec8c7c6 	cdpgt	7, 12, cr12, cr8, cr6, {6}
    18f8:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    18fc:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1900:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1904:	00018e02 	andeq	r8, r1, r2, lsl #28
    1908:	00000014 	andeq	r0, r0, r4, lsl r0
    190c:	00001704 	andeq	r1, r0, r4, lsl #14
    1910:	00000000 	andeq	r0, r0, r0
    1914:	00000020 	andeq	r0, r0, r0, lsr #32
    1918:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    191c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1920:	0000000c 	andeq	r0, r0, ip
    1924:	00001704 	andeq	r1, r0, r4, lsl #14
    1928:	00000000 	andeq	r0, r0, r0
    192c:	00000028 	andeq	r0, r0, r8, lsr #32
    1930:	00000014 	andeq	r0, r0, r4, lsl r0
    1934:	00001704 	andeq	r1, r0, r4, lsl #14
    1938:	00000000 	andeq	r0, r0, r0
    193c:	00000020 	andeq	r0, r0, r0, lsr #32
    1940:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1944:	00018e02 	andeq	r8, r1, r2, lsl #28
    1948:	0000000c 	andeq	r0, r0, ip
    194c:	00001704 	andeq	r1, r0, r4, lsl #14
    1950:	00000000 	andeq	r0, r0, r0
    1954:	00000028 	andeq	r0, r0, r8, lsr #32
    1958:	00000018 	andeq	r0, r0, r8, lsl r0
    195c:	00001704 	andeq	r1, r0, r4, lsl #14
    1960:	00000000 	andeq	r0, r0, r0
    1964:	000000e8 	andeq	r0, r0, r8, ror #1
    1968:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    196c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1970:	00018e02 	andeq	r8, r1, r2, lsl #28
    1974:	00000018 	andeq	r0, r0, r8, lsl r0
    1978:	00001704 	andeq	r1, r0, r4, lsl #14
    197c:	00000000 	andeq	r0, r0, r0
    1980:	00000094 	muleq	r0, r4, r0
    1984:	83100e41 	tsthi	r0, #1040	; 0x410
    1988:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    198c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1990:	0000001c 	andeq	r0, r0, ip, lsl r0
    1994:	00001704 	andeq	r1, r0, r4, lsl #14
    1998:	00000000 	andeq	r0, r0, r0
    199c:	000000b4 	strheq	r0, [r0], -r4
    19a0:	83180e41 	tsthi	r8, #1040	; 0x410
    19a4:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    19a8:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    19ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    19b0:	00000014 	andeq	r0, r0, r4, lsl r0
    19b4:	00001704 	andeq	r1, r0, r4, lsl #14
    19b8:	00000000 	andeq	r0, r0, r0
    19bc:	00000048 	andeq	r0, r0, r8, asr #32
    19c0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    19c4:	00018e02 	andeq	r8, r1, r2, lsl #28
    19c8:	0000000c 	andeq	r0, r0, ip
    19cc:	00001704 	andeq	r1, r0, r4, lsl #14
    19d0:	0800229c 	stmdaeq	r0, {r2, r3, r4, r7, r9, sp}
    19d4:	00000010 	andeq	r0, r0, r0, lsl r0
    19d8:	0000000c 	andeq	r0, r0, ip
    19dc:	00001704 	andeq	r1, r0, r4, lsl #14
    19e0:	080022ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, sp}
    19e4:	0000000c 	andeq	r0, r0, ip
    19e8:	0000000c 	andeq	r0, r0, ip
    19ec:	00001704 	andeq	r1, r0, r4, lsl #14
    19f0:	00000000 	andeq	r0, r0, r0
    19f4:	0000000c 	andeq	r0, r0, ip
    19f8:	0000000c 	andeq	r0, r0, ip
    19fc:	00001704 	andeq	r1, r0, r4, lsl #14
    1a00:	080022b8 	stmdaeq	r0, {r3, r4, r5, r7, r9, sp}
    1a04:	0000000c 	andeq	r0, r0, ip
    1a08:	0000000c 	andeq	r0, r0, ip
    1a0c:	00001704 	andeq	r1, r0, r4, lsl #14
    1a10:	00000000 	andeq	r0, r0, r0
    1a14:	00000014 	andeq	r0, r0, r4, lsl r0
    1a18:	0000000c 	andeq	r0, r0, ip
    1a1c:	00001704 	andeq	r1, r0, r4, lsl #14
    1a20:	00000000 	andeq	r0, r0, r0
    1a24:	00000034 	andeq	r0, r0, r4, lsr r0
    1a28:	0000000c 	andeq	r0, r0, ip
    1a2c:	00001704 	andeq	r1, r0, r4, lsl #14
    1a30:	00000000 	andeq	r0, r0, r0
    1a34:	0000000c 	andeq	r0, r0, ip
    1a38:	0000000c 	andeq	r0, r0, ip
    1a3c:	00001704 	andeq	r1, r0, r4, lsl #14
    1a40:	00000000 	andeq	r0, r0, r0
    1a44:	0000000c 	andeq	r0, r0, ip
    1a48:	00000014 	andeq	r0, r0, r4, lsl r0
    1a4c:	00001704 	andeq	r1, r0, r4, lsl #14
    1a50:	080022c4 	stmdaeq	r0, {r2, r6, r7, r9, sp}
    1a54:	0000003c 	andeq	r0, r0, ip, lsr r0
    1a58:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1a5c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1a60:	0000002c 	andeq	r0, r0, ip, lsr #32
    1a64:	00001704 	andeq	r1, r0, r4, lsl #14
    1a68:	08002300 	stmdaeq	r0, {r8, r9, sp}
    1a6c:	00000160 	andeq	r0, r0, r0, ror #2
    1a70:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
    1a74:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1a78:	02018e02 	andeq	r8, r1, #2, 28
    1a7c:	c4000e8c 	strgt	r0, [r0], #-3724	; 0xfffff174
    1a80:	46cec6c5 	strbmi	ip, [lr], r5, asr #13
    1a84:	0484100e 	streq	r1, [r4], #14
    1a88:	02860385 	addeq	r0, r6, #335544322	; 0x14000002
    1a8c:	0000018e 	andeq	r0, r0, lr, lsl #3
    1a90:	00000014 	andeq	r0, r0, r4, lsl r0
    1a94:	00001704 	andeq	r1, r0, r4, lsl #14
    1a98:	08002460 	stmdaeq	r0, {r5, r6, sl, sp}
    1a9c:	00000140 	andeq	r0, r0, r0, asr #2
    1aa0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1aa4:	00018e02 	andeq	r8, r1, r2, lsl #28
    1aa8:	00000018 	andeq	r0, r0, r8, lsl r0
    1aac:	00001704 	andeq	r1, r0, r4, lsl #14
    1ab0:	00000000 	andeq	r0, r0, r0
    1ab4:	0000006c 	andeq	r0, r0, ip, rrx
    1ab8:	83100e41 	tsthi	r0, #1040	; 0x410
    1abc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1ac0:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ac4:	00000014 	andeq	r0, r0, r4, lsl r0
    1ac8:	00001704 	andeq	r1, r0, r4, lsl #14
    1acc:	080025a0 	stmdaeq	r0, {r5, r7, r8, sl, sp}
    1ad0:	00000032 	andeq	r0, r0, r2, lsr r0
    1ad4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1ad8:	00018e02 	andeq	r8, r1, r2, lsl #28
    1adc:	00000014 	andeq	r0, r0, r4, lsl r0
    1ae0:	00001704 	andeq	r1, r0, r4, lsl #14
    1ae4:	080025d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, sl, sp}
    1ae8:	00000048 	andeq	r0, r0, r8, asr #32
    1aec:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1af0:	00018e02 	andeq	r8, r1, r2, lsl #28
    1af4:	00000018 	andeq	r0, r0, r8, lsl r0
    1af8:	00001704 	andeq	r1, r0, r4, lsl #14
    1afc:	00000000 	andeq	r0, r0, r0
    1b00:	0000007c 	andeq	r0, r0, ip, ror r0
    1b04:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1b08:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1b0c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b10:	00000014 	andeq	r0, r0, r4, lsl r0
    1b14:	00001704 	andeq	r1, r0, r4, lsl #14
    1b18:	00000000 	andeq	r0, r0, r0
    1b1c:	00000024 	andeq	r0, r0, r4, lsr #32
    1b20:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1b24:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b28:	00000018 	andeq	r0, r0, r8, lsl r0
    1b2c:	00001704 	andeq	r1, r0, r4, lsl #14
    1b30:	00000000 	andeq	r0, r0, r0
    1b34:	000000a4 	andeq	r0, r0, r4, lsr #1
    1b38:	83100e41 	tsthi	r0, #1040	; 0x410
    1b3c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b40:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b44:	00000018 	andeq	r0, r0, r8, lsl r0
    1b48:	00001704 	andeq	r1, r0, r4, lsl #14
    1b4c:	00000000 	andeq	r0, r0, r0
    1b50:	00000020 	andeq	r0, r0, r0, lsr #32
    1b54:	83100e41 	tsthi	r0, #1040	; 0x410
    1b58:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1b5c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b60:	00000014 	andeq	r0, r0, r4, lsl r0
    1b64:	00001704 	andeq	r1, r0, r4, lsl #14
    1b68:	00000000 	andeq	r0, r0, r0
    1b6c:	00000020 	andeq	r0, r0, r0, lsr #32
    1b70:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1b74:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b78:	0000000c 	andeq	r0, r0, ip
    1b7c:	00001704 	andeq	r1, r0, r4, lsl #14
    1b80:	00000000 	andeq	r0, r0, r0
    1b84:	0000002c 	andeq	r0, r0, ip, lsr #32
    1b88:	00000014 	andeq	r0, r0, r4, lsl r0
    1b8c:	00001704 	andeq	r1, r0, r4, lsl #14
    1b90:	00000000 	andeq	r0, r0, r0
    1b94:	00000020 	andeq	r0, r0, r0, lsr #32
    1b98:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1b9c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ba0:	0000000c 	andeq	r0, r0, ip
    1ba4:	00001704 	andeq	r1, r0, r4, lsl #14
    1ba8:	0800261c 	stmdaeq	r0, {r2, r3, r4, r9, sl, sp}
    1bac:	00000084 	andeq	r0, r0, r4, lsl #1
    1bb0:	00000018 	andeq	r0, r0, r8, lsl r0
    1bb4:	00001704 	andeq	r1, r0, r4, lsl #14
    1bb8:	00000000 	andeq	r0, r0, r0
    1bbc:	000000b4 	strheq	r0, [r0], -r4
    1bc0:	83100e41 	tsthi	r0, #1040	; 0x410
    1bc4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1bc8:	00018e02 	andeq	r8, r1, r2, lsl #28
    1bcc:	00000014 	andeq	r0, r0, r4, lsl r0
    1bd0:	00001704 	andeq	r1, r0, r4, lsl #14
    1bd4:	080026a0 	stmdaeq	r0, {r5, r7, r9, sl, sp}
    1bd8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1bdc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1be0:	00018e02 	andeq	r8, r1, r2, lsl #28
    1be4:	00000018 	andeq	r0, r0, r8, lsl r0
    1be8:	00001704 	andeq	r1, r0, r4, lsl #14
    1bec:	00000000 	andeq	r0, r0, r0
    1bf0:	00000040 	andeq	r0, r0, r0, asr #32
    1bf4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1bf8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1bfc:	00018e02 	andeq	r8, r1, r2, lsl #28
    1c00:	00000018 	andeq	r0, r0, r8, lsl r0
    1c04:	00001704 	andeq	r1, r0, r4, lsl #14
    1c08:	080026bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, sl, sp}
    1c0c:	0000003c 	andeq	r0, r0, ip, lsr r0
    1c10:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1c14:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1c18:	00018e02 	andeq	r8, r1, r2, lsl #28
    1c1c:	00000014 	andeq	r0, r0, r4, lsl r0
    1c20:	00001704 	andeq	r1, r0, r4, lsl #14
    1c24:	080026f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r9, sl, sp}
    1c28:	000000e4 	andeq	r0, r0, r4, ror #1
    1c2c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1c30:	00018e02 	andeq	r8, r1, r2, lsl #28
    1c34:	00000014 	andeq	r0, r0, r4, lsl r0
    1c38:	00001704 	andeq	r1, r0, r4, lsl #14
    1c3c:	00000000 	andeq	r0, r0, r0
    1c40:	000000b8 	strheq	r0, [r0], -r8
    1c44:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1c48:	00018e02 	andeq	r8, r1, r2, lsl #28
    1c4c:	00000014 	andeq	r0, r0, r4, lsl r0
    1c50:	00001704 	andeq	r1, r0, r4, lsl #14
    1c54:	00000000 	andeq	r0, r0, r0
    1c58:	00000024 	andeq	r0, r0, r4, lsr #32
    1c5c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1c60:	00018e02 	andeq	r8, r1, r2, lsl #28
    1c64:	0000000c 	andeq	r0, r0, ip
    1c68:	00001704 	andeq	r1, r0, r4, lsl #14
    1c6c:	080027dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, r9, sl, sp}
    1c70:	00000018 	andeq	r0, r0, r8, lsl r0
    1c74:	0000001c 	andeq	r0, r0, ip, lsl r0
    1c78:	00001704 	andeq	r1, r0, r4, lsl #14
    1c7c:	080027f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, sl, sp}
    1c80:	0000007c 	andeq	r0, r0, ip, ror r0
    1c84:	83180e41 	tsthi	r8, #1040	; 0x410
    1c88:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1c8c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1c90:	00018e02 	andeq	r8, r1, r2, lsl #28
    1c94:	0000000c 	andeq	r0, r0, ip
    1c98:	00001704 	andeq	r1, r0, r4, lsl #14
    1c9c:	08002870 	stmdaeq	r0, {r4, r5, r6, fp, sp}
    1ca0:	0000000c 	andeq	r0, r0, ip
    1ca4:	0000000c 	andeq	r0, r0, ip
    1ca8:	00001704 	andeq	r1, r0, r4, lsl #14
    1cac:	0800287c 	stmdaeq	r0, {r2, r3, r4, r5, r6, fp, sp}
    1cb0:	00000048 	andeq	r0, r0, r8, asr #32
    1cb4:	00000014 	andeq	r0, r0, r4, lsl r0
    1cb8:	00001704 	andeq	r1, r0, r4, lsl #14
    1cbc:	00000000 	andeq	r0, r0, r0
    1cc0:	00000018 	andeq	r0, r0, r8, lsl r0
    1cc4:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1cc8:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ccc:	0000000c 	andeq	r0, r0, ip
    1cd0:	00001704 	andeq	r1, r0, r4, lsl #14
    1cd4:	00000000 	andeq	r0, r0, r0
    1cd8:	0000000c 	andeq	r0, r0, ip
    1cdc:	0000000c 	andeq	r0, r0, ip
    1ce0:	00001704 	andeq	r1, r0, r4, lsl #14
    1ce4:	00000000 	andeq	r0, r0, r0
    1ce8:	00000010 	andeq	r0, r0, r0, lsl r0
    1cec:	0000000c 	andeq	r0, r0, ip
    1cf0:	00001704 	andeq	r1, r0, r4, lsl #14
    1cf4:	080028c4 	stmdaeq	r0, {r2, r6, r7, fp, sp}
    1cf8:	00000020 	andeq	r0, r0, r0, lsr #32
    1cfc:	0000002c 	andeq	r0, r0, ip, lsr #32
    1d00:	00001704 	andeq	r1, r0, r4, lsl #14
    1d04:	00000000 	andeq	r0, r0, r0
    1d08:	000000b8 	strheq	r0, [r0], -r8
    1d0c:	83100e43 	tsthi	r0, #1072	; 0x430
    1d10:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1d14:	02018e02 	andeq	r8, r1, #2, 28
    1d18:	c3000e4e 	movwgt	r0, #3662	; 0xe4e
    1d1c:	42cec5c4 	sbcmi	ip, lr, #196, 10	; 0x31000000
    1d20:	0483100e 	streq	r1, [r3], #14
    1d24:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1d28:	0000018e 	andeq	r0, r0, lr, lsl #3
    1d2c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1d30:	00001704 	andeq	r1, r0, r4, lsl #14
    1d34:	080028e4 	stmdaeq	r0, {r2, r5, r6, r7, fp, sp}
    1d38:	00000080 	andeq	r0, r0, r0, lsl #1
    1d3c:	83100e43 	tsthi	r0, #1072	; 0x430
    1d40:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1d44:	74018e02 	strvc	r8, [r1], #-3586	; 0xfffff1fe
    1d48:	c4c3000e 	strbgt	r0, [r3], #14
    1d4c:	0e42cec5 	cdpeq	14, 4, cr12, cr2, cr5, {6}
    1d50:	84048310 	strhi	r8, [r4], #-784	; 0xfffffcf0
    1d54:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1d58:	00000001 	andeq	r0, r0, r1
    1d5c:	00000020 	andeq	r0, r0, r0, lsr #32
    1d60:	00001704 	andeq	r1, r0, r4, lsl #14
    1d64:	00000000 	andeq	r0, r0, r0
    1d68:	00000090 	muleq	r0, r0, r0
    1d6c:	83100e43 	tsthi	r0, #1072	; 0x430
    1d70:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1d74:	7f018e02 	svcvc	0x00018e02
    1d78:	c4c3000e 	strbgt	r0, [r3], #14
    1d7c:	0000cec5 	andeq	ip, r0, r5, asr #29
    1d80:	0000000c 	andeq	r0, r0, ip
    1d84:	00001704 	andeq	r1, r0, r4, lsl #14
    1d88:	00000000 	andeq	r0, r0, r0
    1d8c:	00000018 	andeq	r0, r0, r8, lsl r0
    1d90:	0000000c 	andeq	r0, r0, ip
    1d94:	00001704 	andeq	r1, r0, r4, lsl #14
    1d98:	00000000 	andeq	r0, r0, r0
    1d9c:	00000014 	andeq	r0, r0, r4, lsl r0
    1da0:	00000018 	andeq	r0, r0, r8, lsl r0
    1da4:	00001704 	andeq	r1, r0, r4, lsl #14
    1da8:	00000000 	andeq	r0, r0, r0
    1dac:	000000b8 	strheq	r0, [r0], -r8
    1db0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1db4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1db8:	00018e02 	andeq	r8, r1, r2, lsl #28
    1dbc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1dc0:	00001704 	andeq	r1, r0, r4, lsl #14
    1dc4:	00000000 	andeq	r0, r0, r0
    1dc8:	000000dc 	ldrdeq	r0, [r0], -ip
    1dcc:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1dd0:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1dd4:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1dd8:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ddc:	0000001c 	andeq	r0, r0, ip, lsl r0
    1de0:	00001704 	andeq	r1, r0, r4, lsl #14
    1de4:	00000000 	andeq	r0, r0, r0
    1de8:	0000012c 	andeq	r0, r0, ip, lsr #2
    1dec:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1df0:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1df4:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1df8:	00018e02 	andeq	r8, r1, r2, lsl #28
    1dfc:	00000018 	andeq	r0, r0, r8, lsl r0
    1e00:	00001704 	andeq	r1, r0, r4, lsl #14
    1e04:	00000000 	andeq	r0, r0, r0
    1e08:	00000178 	andeq	r0, r0, r8, ror r1
    1e0c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1e10:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1e14:	00000001 	andeq	r0, r0, r1
    1e18:	00000018 	andeq	r0, r0, r8, lsl r0
    1e1c:	00001704 	andeq	r1, r0, r4, lsl #14
    1e20:	00000000 	andeq	r0, r0, r0
    1e24:	000000f8 	strdeq	r0, [r0], -r8
    1e28:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1e2c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1e30:	00000001 	andeq	r0, r0, r1
    1e34:	00000018 	andeq	r0, r0, r8, lsl r0
    1e38:	00001704 	andeq	r1, r0, r4, lsl #14
    1e3c:	00000000 	andeq	r0, r0, r0
    1e40:	00000038 	andeq	r0, r0, r8, lsr r0
    1e44:	83100e41 	tsthi	r0, #1040	; 0x410
    1e48:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1e4c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1e50:	00000018 	andeq	r0, r0, r8, lsl r0
    1e54:	00001704 	andeq	r1, r0, r4, lsl #14
    1e58:	00000000 	andeq	r0, r0, r0
    1e5c:	00000034 	andeq	r0, r0, r4, lsr r0
    1e60:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1e64:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1e68:	00018e02 	andeq	r8, r1, r2, lsl #28
    1e6c:	0000000c 	andeq	r0, r0, ip
    1e70:	00001704 	andeq	r1, r0, r4, lsl #14
    1e74:	08002964 	stmdaeq	r0, {r2, r5, r6, r8, fp, sp}
    1e78:	00000018 	andeq	r0, r0, r8, lsl r0
    1e7c:	00000020 	andeq	r0, r0, r0, lsr #32
    1e80:	00001704 	andeq	r1, r0, r4, lsl #14
    1e84:	0800297c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, fp, sp}
    1e88:	0000006c 	andeq	r0, r0, ip, rrx
    1e8c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1e90:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1e94:	300e4101 	andcc	r4, lr, r1, lsl #2
    1e98:	0c0e0a52 			; <UNDEFINED> instruction: 0x0c0e0a52
    1e9c:	00000b41 	andeq	r0, r0, r1, asr #22
    1ea0:	00000014 	andeq	r0, r0, r4, lsl r0
    1ea4:	00001704 	andeq	r1, r0, r4, lsl #14
    1ea8:	080029e8 	stmdaeq	r0, {r3, r5, r6, r7, r8, fp, sp}
    1eac:	00000054 	andeq	r0, r0, r4, asr r0
    1eb0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1eb4:	00018e02 	andeq	r8, r1, r2, lsl #28
    1eb8:	0000000c 	andeq	r0, r0, ip
    1ebc:	00001704 	andeq	r1, r0, r4, lsl #14
    1ec0:	08002a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp, sp}
    1ec4:	00000018 	andeq	r0, r0, r8, lsl r0
    1ec8:	0000000c 	andeq	r0, r0, ip
    1ecc:	00001704 	andeq	r1, r0, r4, lsl #14
    1ed0:	00000000 	andeq	r0, r0, r0
    1ed4:	00000074 	andeq	r0, r0, r4, ror r0
    1ed8:	0000000c 	andeq	r0, r0, ip
    1edc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ee0:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ee4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1ee8:	0000000c 	andeq	r0, r0, ip
    1eec:	00001ed8 	ldrdeq	r1, [r0], -r8
    1ef0:	08002a54 	stmdaeq	r0, {r2, r4, r6, r9, fp, sp}
    1ef4:	00000020 	andeq	r0, r0, r0, lsr #32
    1ef8:	00000014 	andeq	r0, r0, r4, lsl r0
    1efc:	00001ed8 	ldrdeq	r1, [r0], -r8
    1f00:	08002a74 	stmdaeq	r0, {r2, r4, r5, r6, r9, fp, sp}
    1f04:	00000048 	andeq	r0, r0, r8, asr #32
    1f08:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1f0c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1f10:	00000018 	andeq	r0, r0, r8, lsl r0
    1f14:	00001ed8 	ldrdeq	r1, [r0], -r8
    1f18:	08002abc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r9, fp, sp}
    1f1c:	00000028 	andeq	r0, r0, r8, lsr #32
    1f20:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1f24:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1f28:	00018e02 	andeq	r8, r1, r2, lsl #28
    1f2c:	00000018 	andeq	r0, r0, r8, lsl r0
    1f30:	00001ed8 	ldrdeq	r1, [r0], -r8
    1f34:	08002ae4 	stmdaeq	r0, {r2, r5, r6, r7, r9, fp, sp}
    1f38:	00000040 	andeq	r0, r0, r0, asr #32
    1f3c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1f40:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1f44:	00018e02 	andeq	r8, r1, r2, lsl #28
    1f48:	00000014 	andeq	r0, r0, r4, lsl r0
    1f4c:	00001ed8 	ldrdeq	r1, [r0], -r8
    1f50:	08002b24 	stmdaeq	r0, {r2, r5, r8, r9, fp, sp}
    1f54:	00000030 	andeq	r0, r0, r0, lsr r0
    1f58:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1f5c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1f60:	00000018 	andeq	r0, r0, r8, lsl r0
    1f64:	00001ed8 	ldrdeq	r1, [r0], -r8
    1f68:	08002b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp, sp}
    1f6c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1f70:	83100e41 	tsthi	r0, #1040	; 0x410
    1f74:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1f78:	00018e02 	andeq	r8, r1, r2, lsl #28
    1f7c:	00000020 	andeq	r0, r0, r0, lsr #32
    1f80:	00001ed8 	ldrdeq	r1, [r0], -r8
    1f84:	08002b80 	stmdaeq	r0, {r7, r8, r9, fp, sp}
    1f88:	00000074 	andeq	r0, r0, r4, ror r0
    1f8c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    1f90:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1f94:	41018e02 	tstmi	r1, r2, lsl #28
    1f98:	0e73180e 	cdpeq	8, 7, cr1, cr3, cr14, {0}
    1f9c:	00000010 	andeq	r0, r0, r0, lsl r0
    1fa0:	0000001c 	andeq	r0, r0, ip, lsl r0
    1fa4:	00001ed8 	ldrdeq	r1, [r0], -r8
    1fa8:	08002bf4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, r9, fp, sp}
    1fac:	000000f8 	strdeq	r0, [r0], -r8
    1fb0:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1fb4:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1fb8:	280e4101 	stmdacs	lr, {r0, r8, lr}
    1fbc:	0c0e7702 	stceq	7, cr7, [lr], {2}
    1fc0:	00000014 	andeq	r0, r0, r4, lsl r0
    1fc4:	00001ed8 	ldrdeq	r1, [r0], -r8
    1fc8:	08002cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, sp}
    1fcc:	00000016 	andeq	r0, r0, r6, lsl r0
    1fd0:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
    1fd4:	100e4101 	andne	r4, lr, r1, lsl #2
    1fd8:	00000020 	andeq	r0, r0, r0, lsr #32
    1fdc:	00001ed8 	ldrdeq	r1, [r0], -r8
    1fe0:	08002d04 	stmdaeq	r0, {r2, r8, sl, fp, sp}
    1fe4:	00000060 	andeq	r0, r0, r0, rrx
    1fe8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    1fec:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1ff0:	180e4101 	stmdane	lr, {r0, r8, lr}
    1ff4:	0c0e0a48 			; <UNDEFINED> instruction: 0x0c0e0a48
    1ff8:	00000b41 	andeq	r0, r0, r1, asr #22
    1ffc:	0000001c 	andeq	r0, r0, ip, lsl r0
    2000:	00001ed8 	ldrdeq	r1, [r0], -r8
    2004:	00000000 	andeq	r0, r0, r0
    2008:	00000036 	andeq	r0, r0, r6, lsr r0
    200c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    2010:	86058506 	strhi	r8, [r5], -r6, lsl #10
    2014:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    2018:	00018e02 	andeq	r8, r1, r2, lsl #28
    201c:	0000001c 	andeq	r0, r0, ip, lsl r0
    2020:	00001ed8 	ldrdeq	r1, [r0], -r8
    2024:	08002d64 	stmdaeq	r0, {r2, r5, r6, r8, sl, fp, sp}
    2028:	0000005c 	andeq	r0, r0, ip, asr r0
    202c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    2030:	41018e02 	tstmi	r1, r2, lsl #28
    2034:	0e62280e 	cdpeq	8, 6, cr2, cr2, cr14, {0}
    2038:	00000008 	andeq	r0, r0, r8
    203c:	00000024 	andeq	r0, r0, r4, lsr #32
    2040:	00001ed8 	ldrdeq	r1, [r0], -r8
    2044:	00000000 	andeq	r0, r0, r0
    2048:	00000038 	andeq	r0, r0, r8, lsr r0
    204c:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    2050:	86058506 	strhi	r8, [r5], -r6, lsl #10
    2054:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    2058:	41018e02 	tstmi	r1, r2, lsl #28
    205c:	0e57200e 	cdpeq	0, 5, cr2, cr7, cr14, {0}
    2060:	00000018 	andeq	r0, r0, r8, lsl r0
    2064:	0000001c 	andeq	r0, r0, ip, lsl r0
    2068:	00001ed8 	ldrdeq	r1, [r0], -r8
    206c:	00000000 	andeq	r0, r0, r0
    2070:	00000020 	andeq	r0, r0, r0, lsr #32
    2074:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
    2078:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    207c:	180e4101 	stmdane	lr, {r0, r8, lr}
    2080:	000c0e4d 	andeq	r0, ip, sp, asr #28
    2084:	00000020 	andeq	r0, r0, r0, lsr #32
    2088:	00001ed8 	ldrdeq	r1, [r0], -r8
    208c:	00000000 	andeq	r0, r0, r0
    2090:	0000004c 	andeq	r0, r0, ip, asr #32
    2094:	8e040e44 	cdphi	14, 0, cr0, cr4, cr4, {2}
    2098:	180e4101 	stmdane	lr, {r0, r8, lr}
    209c:	040e0a47 	streq	r0, [lr], #-2631	; 0xfffff5b9
    20a0:	0e540b42 	vnmlaeq.f64	d16, d4, d2
    20a4:	0000ce00 	andeq	ip, r0, r0, lsl #28
    20a8:	0000001c 	andeq	r0, r0, ip, lsl r0
    20ac:	00001ed8 	ldrdeq	r1, [r0], -r8
    20b0:	00000000 	andeq	r0, r0, r0
    20b4:	00000034 	andeq	r0, r0, r4, lsr r0
    20b8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    20bc:	41018e02 	tstmi	r1, r2, lsl #28
    20c0:	0a4b180e 	beq	12c8100 <_Min_Heap_Size+0x12c7900>
    20c4:	0b41080e 	bleq	1044104 <_Min_Heap_Size+0x1043904>
    20c8:	0000000c 	andeq	r0, r0, ip
    20cc:	00001ed8 	ldrdeq	r1, [r0], -r8
    20d0:	00000000 	andeq	r0, r0, r0
    20d4:	0000000c 	andeq	r0, r0, ip
    20d8:	0000000c 	andeq	r0, r0, ip
    20dc:	00001ed8 	ldrdeq	r1, [r0], -r8
    20e0:	00000000 	andeq	r0, r0, r0
    20e4:	00000004 	andeq	r0, r0, r4
    20e8:	00000018 	andeq	r0, r0, r8, lsl r0
    20ec:	00001ed8 	ldrdeq	r1, [r0], -r8
    20f0:	00000000 	andeq	r0, r0, r0
    20f4:	0000002c 	andeq	r0, r0, ip, lsr #32
    20f8:	83100e41 	tsthi	r0, #1040	; 0x410
    20fc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2100:	00018e02 	andeq	r8, r1, r2, lsl #28
    2104:	00000014 	andeq	r0, r0, r4, lsl r0
    2108:	00001ed8 	ldrdeq	r1, [r0], -r8
    210c:	00000000 	andeq	r0, r0, r0
    2110:	00000020 	andeq	r0, r0, r0, lsr #32
    2114:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    2118:	00018e02 	andeq	r8, r1, r2, lsl #28
    211c:	00000014 	andeq	r0, r0, r4, lsl r0
    2120:	00001ed8 	ldrdeq	r1, [r0], -r8
    2124:	00000000 	andeq	r0, r0, r0
    2128:	00000008 	andeq	r0, r0, r8
    212c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2130:	00018e02 	andeq	r8, r1, r2, lsl #28
    2134:	0000000c 	andeq	r0, r0, ip
    2138:	00001ed8 	ldrdeq	r1, [r0], -r8
    213c:	00000000 	andeq	r0, r0, r0
    2140:	00000004 	andeq	r0, r0, r4
    2144:	0000000c 	andeq	r0, r0, ip
    2148:	00001ed8 	ldrdeq	r1, [r0], -r8
    214c:	00000000 	andeq	r0, r0, r0
    2150:	00000014 	andeq	r0, r0, r4, lsl r0
    2154:	0000000c 	andeq	r0, r0, ip
    2158:	00001ed8 	ldrdeq	r1, [r0], -r8
    215c:	00000000 	andeq	r0, r0, r0
    2160:	00000004 	andeq	r0, r0, r4
    2164:	00000014 	andeq	r0, r0, r4, lsl r0
    2168:	00001ed8 	ldrdeq	r1, [r0], -r8
    216c:	00000000 	andeq	r0, r0, r0
    2170:	00000020 	andeq	r0, r0, r0, lsr #32
    2174:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    2178:	00018e02 	andeq	r8, r1, r2, lsl #28
    217c:	00000014 	andeq	r0, r0, r4, lsl r0
    2180:	00001ed8 	ldrdeq	r1, [r0], -r8
    2184:	00000000 	andeq	r0, r0, r0
    2188:	00000012 	andeq	r0, r0, r2, lsl r0
    218c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    2190:	00018e02 	andeq	r8, r1, r2, lsl #28
    2194:	00000018 	andeq	r0, r0, r8, lsl r0
    2198:	00001ed8 	ldrdeq	r1, [r0], -r8
    219c:	00000000 	andeq	r0, r0, r0
    21a0:	00000012 	andeq	r0, r0, r2, lsl r0
    21a4:	83100e41 	tsthi	r0, #1040	; 0x410
    21a8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    21ac:	00018e02 	andeq	r8, r1, r2, lsl #28
    21b0:	0000001c 	andeq	r0, r0, ip, lsl r0
    21b4:	00001ed8 	ldrdeq	r1, [r0], -r8
    21b8:	00000000 	andeq	r0, r0, r0
    21bc:	00000028 	andeq	r0, r0, r8, lsr #32
    21c0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    21c4:	41018e02 	tstmi	r1, r2, lsl #28
    21c8:	0e4f180e 	cdpeq	8, 4, cr1, cr15, cr14, {0}
    21cc:	00000008 	andeq	r0, r0, r8
    21d0:	0000001c 	andeq	r0, r0, ip, lsl r0
    21d4:	00001ed8 	ldrdeq	r1, [r0], -r8
    21d8:	00000000 	andeq	r0, r0, r0
    21dc:	00000028 	andeq	r0, r0, r8, lsr #32
    21e0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    21e4:	41018e02 	tstmi	r1, r2, lsl #28
    21e8:	0e4f180e 	cdpeq	8, 4, cr1, cr15, cr14, {0}
    21ec:	00000008 	andeq	r0, r0, r8
    21f0:	0000000c 	andeq	r0, r0, ip
    21f4:	00001ed8 	ldrdeq	r1, [r0], -r8
    21f8:	00000000 	andeq	r0, r0, r0
    21fc:	00000014 	andeq	r0, r0, r4, lsl r0
    2200:	0000000c 	andeq	r0, r0, ip
    2204:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2208:	7c020001 	stcvc	0, cr0, [r2], {1}
    220c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2210:	0000000c 	andeq	r0, r0, ip
    2214:	00002200 	andeq	r2, r0, r0, lsl #4
    2218:	08002dc0 	stmdaeq	r0, {r6, r7, r8, sl, fp, sp}
    221c:	00000058 	andeq	r0, r0, r8, asr r0
    2220:	0000001c 	andeq	r0, r0, ip, lsl r0
    2224:	00002200 	andeq	r2, r0, r0, lsl #4
    2228:	08002e18 	stmdaeq	r0, {r3, r4, r9, sl, fp, sp}
    222c:	00000064 	andeq	r0, r0, r4, rrx
    2230:	84040e5a 	strhi	r0, [r4], #-3674	; 0xfffff1a6
    2234:	c40a4f01 	strgt	r4, [sl], #-3841	; 0xfffff0ff
    2238:	0b41000e 	bleq	1042278 <_Min_Heap_Size+0x1041a78>
    223c:	c4000e42 	strgt	r0, [r0], #-3650	; 0xfffff1be
    2240:	00000018 	andeq	r0, r0, r8, lsl r0
    2244:	00002200 	andeq	r2, r0, r0, lsl #4
    2248:	08002e7c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, sl, fp, sp}
    224c:	000000d4 	ldrdeq	r0, [r0], -r4
    2250:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    2254:	86038504 	strhi	r8, [r3], -r4, lsl #10
    2258:	00018e02 	andeq	r8, r1, r2, lsl #28
    225c:	00000020 	andeq	r0, r0, r0, lsr #32
    2260:	00002200 	andeq	r2, r0, r0, lsl #4
    2264:	08002f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp, sp}
    2268:	00000050 	andeq	r0, r0, r0, asr r0
    226c:	83100e42 	tsthi	r0, #1056	; 0x420
    2270:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2274:	61018e02 	tstvs	r1, r2, lsl #28
    2278:	c4c3000e 	strbgt	r0, [r3], #14
    227c:	0000cec5 	andeq	ip, r0, r5, asr #29
    2280:	0000000c 	andeq	r0, r0, ip
    2284:	00002200 	andeq	r2, r0, r0, lsl #4
    2288:	00000000 	andeq	r0, r0, r0
    228c:	0000000c 	andeq	r0, r0, ip
    2290:	0000000c 	andeq	r0, r0, ip
    2294:	00002200 	andeq	r2, r0, r0, lsl #4
    2298:	00000000 	andeq	r0, r0, r0
    229c:	0000000c 	andeq	r0, r0, ip
    22a0:	0000000c 	andeq	r0, r0, ip
    22a4:	00002200 	andeq	r2, r0, r0, lsl #4
    22a8:	00000000 	andeq	r0, r0, r0
    22ac:	00000002 	andeq	r0, r0, r2
    22b0:	00000018 	andeq	r0, r0, r8, lsl r0
    22b4:	00002200 	andeq	r2, r0, r0, lsl #4
    22b8:	00000000 	andeq	r0, r0, r0
    22bc:	00000032 	andeq	r0, r0, r2, lsr r0
    22c0:	83100e41 	tsthi	r0, #1040	; 0x410
    22c4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    22c8:	00018e02 	andeq	r8, r1, r2, lsl #28
    22cc:	0000001c 	andeq	r0, r0, ip, lsl r0
    22d0:	00002200 	andeq	r2, r0, r0, lsl #4
    22d4:	00000000 	andeq	r0, r0, r0
    22d8:	00000080 	andeq	r0, r0, r0, lsl #1
    22dc:	83180e41 	tsthi	r8, #1040	; 0x410
    22e0:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    22e4:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    22e8:	00018e02 	andeq	r8, r1, r2, lsl #28
    22ec:	0000000c 	andeq	r0, r0, ip
    22f0:	00002200 	andeq	r2, r0, r0, lsl #4
    22f4:	00000000 	andeq	r0, r0, r0
    22f8:	0000002c 	andeq	r0, r0, ip, lsr #32
    22fc:	0000000c 	andeq	r0, r0, ip
    2300:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2304:	7c020001 	stcvc	0, cr0, [r2], {1}
    2308:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    230c:	00000014 	andeq	r0, r0, r4, lsl r0
    2310:	000022fc 	strdeq	r2, [r0], -ip
    2314:	08002fa0 	stmdaeq	r0, {r5, r7, r8, r9, sl, fp, sp}
    2318:	00000020 	andeq	r0, r0, r0, lsr #32
    231c:	4e080e41 	cdpmi	14, 0, cr0, cr8, cr1, {2}
    2320:	0000000e 	andeq	r0, r0, lr
    2324:	0000000c 	andeq	r0, r0, ip
    2328:	000022fc 	strdeq	r2, [r0], -ip
    232c:	08002fc0 	stmdaeq	r0, {r6, r7, r8, r9, sl, fp, sp}
    2330:	00000028 	andeq	r0, r0, r8, lsr #32
    2334:	0000000c 	andeq	r0, r0, ip
    2338:	000022fc 	strdeq	r2, [r0], -ip
    233c:	08002fe8 	stmdaeq	r0, {r3, r5, r6, r7, r8, r9, sl, fp, sp}
    2340:	00000014 	andeq	r0, r0, r4, lsl r0
    2344:	0000000c 	andeq	r0, r0, ip
    2348:	000022fc 	strdeq	r2, [r0], -ip
    234c:	08002ffc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, sp}
    2350:	0000002c 	andeq	r0, r0, ip, lsr #32
    2354:	0000000c 	andeq	r0, r0, ip
    2358:	000022fc 	strdeq	r2, [r0], -ip
    235c:	08003030 	stmdaeq	r0, {r4, r5, ip, sp}
    2360:	00000024 	andeq	r0, r0, r4, lsr #32
    2364:	0000000c 	andeq	r0, r0, ip
    2368:	000022fc 	strdeq	r2, [r0], -ip
    236c:	00000000 	andeq	r0, r0, r0
    2370:	00000002 	andeq	r0, r0, r2
    2374:	0000000c 	andeq	r0, r0, ip
    2378:	000022fc 	strdeq	r2, [r0], -ip
    237c:	08003054 	stmdaeq	r0, {r2, r4, r6, ip, sp}
    2380:	00000020 	andeq	r0, r0, r0, lsr #32
    2384:	0000000c 	andeq	r0, r0, ip
    2388:	000022fc 	strdeq	r2, [r0], -ip
    238c:	08003074 	stmdaeq	r0, {r2, r4, r5, r6, ip, sp}
    2390:	00000014 	andeq	r0, r0, r4, lsl r0
    2394:	0000000c 	andeq	r0, r0, ip
    2398:	000022fc 	strdeq	r2, [r0], -ip
    239c:	08003090 	stmdaeq	r0, {r4, r7, ip, sp}
    23a0:	00000064 	andeq	r0, r0, r4, rrx
    23a4:	00000014 	andeq	r0, r0, r4, lsl r0
    23a8:	000022fc 	strdeq	r2, [r0], -ip
    23ac:	080030f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, ip, sp}
    23b0:	0000002c 	andeq	r0, r0, ip, lsr #32
    23b4:	83080e41 	movwhi	r0, #36417	; 0x8e41
    23b8:	00018e02 	andeq	r8, r1, r2, lsl #28
    23bc:	00000014 	andeq	r0, r0, r4, lsl r0
    23c0:	000022fc 	strdeq	r2, [r0], -ip
    23c4:	08003120 	stmdaeq	r0, {r5, r8, ip, sp}
    23c8:	00000114 	andeq	r0, r0, r4, lsl r1
    23cc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    23d0:	00018e02 	andeq	r8, r1, r2, lsl #28
    23d4:	0000000c 	andeq	r0, r0, ip
    23d8:	000022fc 	strdeq	r2, [r0], -ip
    23dc:	08003234 	stmdaeq	r0, {r2, r4, r5, r9, ip, sp}
    23e0:	0000003c 	andeq	r0, r0, ip, lsr r0
    23e4:	00000018 	andeq	r0, r0, r8, lsl r0
    23e8:	000022fc 	strdeq	r2, [r0], -ip
    23ec:	08003270 	stmdaeq	r0, {r4, r5, r6, r9, ip, sp}
    23f0:	00000050 	andeq	r0, r0, r0, asr r0
    23f4:	83100e41 	tsthi	r0, #1040	; 0x410
    23f8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    23fc:	00018e02 	andeq	r8, r1, r2, lsl #28
    2400:	0000000c 	andeq	r0, r0, ip
    2404:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2408:	7c020001 	stcvc	0, cr0, [r2], {1}
    240c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2410:	00000014 	andeq	r0, r0, r4, lsl r0
    2414:	00002400 	andeq	r2, r0, r0, lsl #8
    2418:	080032c0 	stmdaeq	r0, {r6, r7, r9, ip, sp}
    241c:	00000048 	andeq	r0, r0, r8, asr #32
    2420:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    2424:	00018e02 	andeq	r8, r1, r2, lsl #28
    2428:	0000000c 	andeq	r0, r0, ip
    242c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2430:	7c020001 	stcvc	0, cr0, [r2], {1}
    2434:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2438:	0000000c 	andeq	r0, r0, ip
    243c:	00002428 	andeq	r2, r0, r8, lsr #8
    2440:	00000000 	andeq	r0, r0, r0
    2444:	00000002 	andeq	r0, r0, r2
    2448:	0000000c 	andeq	r0, r0, ip
    244c:	00002428 	andeq	r2, r0, r8, lsr #8
    2450:	00000000 	andeq	r0, r0, r0
    2454:	00000004 	andeq	r0, r0, r4
    2458:	00000014 	andeq	r0, r0, r4, lsl r0
    245c:	00002428 	andeq	r2, r0, r8, lsr #8
    2460:	00000000 	andeq	r0, r0, r0
    2464:	00000010 	andeq	r0, r0, r0, lsl r0
    2468:	83080e41 	movwhi	r0, #36417	; 0x8e41
    246c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2470:	00000014 	andeq	r0, r0, r4, lsl r0
    2474:	00002428 	andeq	r2, r0, r8, lsr #8
    2478:	00000000 	andeq	r0, r0, r0
    247c:	0000000c 	andeq	r0, r0, ip
    2480:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2484:	00018e02 	andeq	r8, r1, r2, lsl #28
    2488:	00000018 	andeq	r0, r0, r8, lsl r0
    248c:	00002428 	andeq	r2, r0, r8, lsr #8
    2490:	08003308 	stmdaeq	r0, {r3, r8, r9, ip, sp}
    2494:	00000020 	andeq	r0, r0, r0, lsr #32
    2498:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    249c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    24a0:	00018e02 	andeq	r8, r1, r2, lsl #28
    24a4:	00000018 	andeq	r0, r0, r8, lsl r0
    24a8:	00002428 	andeq	r2, r0, r8, lsr #8
    24ac:	08003328 	stmdaeq	r0, {r3, r5, r8, r9, ip, sp}
    24b0:	0000001c 	andeq	r0, r0, ip, lsl r0
    24b4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    24b8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    24bc:	00018e02 	andeq	r8, r1, r2, lsl #28
    24c0:	0000000c 	andeq	r0, r0, ip
    24c4:	00002428 	andeq	r2, r0, r8, lsr #8
    24c8:	08003344 	stmdaeq	r0, {r2, r6, r8, r9, ip, sp}
    24cc:	00000006 	andeq	r0, r0, r6
    24d0:	0000000c 	andeq	r0, r0, ip
    24d4:	00002428 	andeq	r2, r0, r8, lsr #8
    24d8:	0800334a 	stmdaeq	r0, {r1, r3, r6, r8, r9, ip, sp}
    24dc:	0000000a 	andeq	r0, r0, sl
    24e0:	0000000c 	andeq	r0, r0, ip
    24e4:	00002428 	andeq	r2, r0, r8, lsr #8
    24e8:	08003354 	stmdaeq	r0, {r2, r4, r6, r8, r9, ip, sp}
    24ec:	00000004 	andeq	r0, r0, r4
    24f0:	0000000c 	andeq	r0, r0, ip
    24f4:	00002428 	andeq	r2, r0, r8, lsr #8
    24f8:	08003358 	stmdaeq	r0, {r3, r4, r6, r8, r9, ip, sp}
    24fc:	00000004 	andeq	r0, r0, r4
    2500:	0000001c 	andeq	r0, r0, ip, lsl r0
    2504:	00002428 	andeq	r2, r0, r8, lsr #8
    2508:	00000000 	andeq	r0, r0, r0
    250c:	0000000a 	andeq	r0, r0, sl
    2510:	810c0e41 	tsthi	ip, r1, asr #28
    2514:	83028203 	movwhi	r8, #8707	; 0x2203
    2518:	c2c34301 	sbcgt	r4, r3, #67108864	; 0x4000000
    251c:	00000ec1 	andeq	r0, r0, r1, asr #29
    2520:	00000014 	andeq	r0, r0, r4, lsl r0
    2524:	00002428 	andeq	r2, r0, r8, lsr #8
    2528:	00000000 	andeq	r0, r0, r0
    252c:	00000010 	andeq	r0, r0, r0, lsl r0
    2530:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2534:	00018e02 	andeq	r8, r1, r2, lsl #28
    2538:	00000014 	andeq	r0, r0, r4, lsl r0
    253c:	00002428 	andeq	r2, r0, r8, lsr #8
    2540:	00000000 	andeq	r0, r0, r0
    2544:	00000010 	andeq	r0, r0, r0, lsl r0
    2548:	83080e41 	movwhi	r0, #36417	; 0x8e41
    254c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2550:	0000000c 	andeq	r0, r0, ip
    2554:	00002428 	andeq	r2, r0, r8, lsr #8
    2558:	00000000 	andeq	r0, r0, r0
    255c:	00000006 	andeq	r0, r0, r6
    2560:	0000000c 	andeq	r0, r0, ip
    2564:	00002428 	andeq	r2, r0, r8, lsr #8
    2568:	00000000 	andeq	r0, r0, r0
    256c:	0000000a 	andeq	r0, r0, sl
    2570:	00000014 	andeq	r0, r0, r4, lsl r0
    2574:	00002428 	andeq	r2, r0, r8, lsr #8
    2578:	00000000 	andeq	r0, r0, r0
    257c:	00000010 	andeq	r0, r0, r0, lsl r0
    2580:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2584:	00018e02 	andeq	r8, r1, r2, lsl #28
    2588:	00000014 	andeq	r0, r0, r4, lsl r0
    258c:	00002428 	andeq	r2, r0, r8, lsr #8
    2590:	00000000 	andeq	r0, r0, r0
    2594:	00000010 	andeq	r0, r0, r0, lsl r0
    2598:	83080e41 	movwhi	r0, #36417	; 0x8e41
    259c:	00018e02 	andeq	r8, r1, r2, lsl #28
    25a0:	00000014 	andeq	r0, r0, r4, lsl r0
    25a4:	00002428 	andeq	r2, r0, r8, lsr #8
    25a8:	00000000 	andeq	r0, r0, r0
    25ac:	00000010 	andeq	r0, r0, r0, lsl r0
    25b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    25b4:	00018e02 	andeq	r8, r1, r2, lsl #28
    25b8:	0000000c 	andeq	r0, r0, ip
    25bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    25c0:	7c020001 	stcvc	0, cr0, [r2], {1}
    25c4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    25c8:	0000000c 	andeq	r0, r0, ip
    25cc:	000025b8 			; <UNDEFINED> instruction: 0x000025b8
    25d0:	080033b0 	stmdaeq	r0, {r4, r5, r7, r8, r9, ip, sp}
    25d4:	0000000c 	andeq	r0, r0, ip
    25d8:	0000000c 	andeq	r0, r0, ip
    25dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    25e0:	7c020001 	stcvc	0, cr0, [r2], {1}
    25e4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    25e8:	00000018 	andeq	r0, r0, r8, lsl r0
    25ec:	000025d8 	ldrdeq	r2, [r0], -r8
    25f0:	080033bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, r9, ip, sp}
    25f4:	00000048 	andeq	r0, r0, r8, asr #32
    25f8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    25fc:	86038504 	strhi	r8, [r3], -r4, lsl #10
    2600:	00018e02 	andeq	r8, r1, r2, lsl #28
    2604:	0000000c 	andeq	r0, r0, ip
    2608:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    260c:	7c020001 	stcvc	0, cr0, [r2], {1}
    2610:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2614:	00000014 	andeq	r0, r0, r4, lsl r0
    2618:	00002604 	andeq	r2, r0, r4, lsl #12
    261c:	08003404 	stmdaeq	r0, {r2, sl, ip, sp}
    2620:	0000001c 	andeq	r0, r0, ip, lsl r0
    2624:	84080e47 	strhi	r0, [r8], #-3655	; 0xfffff1b9
    2628:	00018e02 	andeq	r8, r1, r2, lsl #28
    262c:	0000000c 	andeq	r0, r0, ip
    2630:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2634:	7c020001 	stcvc	0, cr0, [r2], {1}
    2638:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    263c:	0000000c 	andeq	r0, r0, ip
    2640:	0000262c 	andeq	r2, r0, ip, lsr #12
    2644:	08003420 	stmdaeq	r0, {r5, sl, ip, sp}
    2648:	00000010 	andeq	r0, r0, r0, lsl r0
    264c:	0000000c 	andeq	r0, r0, ip
    2650:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2654:	7c020001 	stcvc	0, cr0, [r2], {1}
    2658:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    265c:	0000002c 	andeq	r0, r0, ip, lsr #32
    2660:	0000264c 	andeq	r2, r0, ip, asr #12
    2664:	00000000 	andeq	r0, r0, r0
    2668:	00000028 	andeq	r0, r0, r8, lsr #32
    266c:	810c0e41 	tsthi	ip, r1, asr #28
    2670:	83028203 	movwhi	r8, #8707	; 0x2203
    2674:	200e4101 	andcs	r4, lr, r1, lsl #2
    2678:	048e0584 	streq	r0, [lr], #1412	; 0x584
    267c:	42140e4e 	andsmi	r0, r4, #1248	; 0x4e0
    2680:	0c0ec4ce 	cfstrseq	mvf12, [lr], {206}	; 0xce
    2684:	c1c2c341 	bicgt	ip, r2, r1, asr #6
    2688:	0000000e 	andeq	r0, r0, lr
    268c:	00000030 	andeq	r0, r0, r0, lsr r0
    2690:	0000264c 	andeq	r2, r0, ip, asr #12
    2694:	08003430 	stmdaeq	r0, {r4, r5, sl, ip, sp}
    2698:	00000030 	andeq	r0, r0, r0, lsr r0
    269c:	80100e41 	andshi	r0, r0, r1, asr #28
    26a0:	82038104 	andhi	r8, r3, #4, 2
    26a4:	42018302 	andmi	r8, r1, #134217728	; 0x8000000
    26a8:	0684200e 	streq	r2, [r4], lr
    26ac:	0e4f058e 	cdpeq	5, 4, cr0, cr15, cr14, {4}
    26b0:	c4ce4218 	strbgt	r4, [lr], #536	; 0x218
    26b4:	c341100e 	movtgt	r1, #4110	; 0x100e
    26b8:	0ec0c1c2 	acseqdm	f4, f2
    26bc:	00000000 	andeq	r0, r0, r0
    26c0:	0000000c 	andeq	r0, r0, ip
    26c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    26c8:	7c020001 	stcvc	0, cr0, [r2], {1}
    26cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    26d0:	00000018 	andeq	r0, r0, r8, lsl r0
    26d4:	000026c0 	andeq	r2, r0, r0, asr #13
    26d8:	08003460 	stmdaeq	r0, {r5, r6, sl, ip, sp}
    26dc:	000000dc 	ldrdeq	r0, [r0], -ip
    26e0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    26e4:	86038504 	strhi	r8, [r3], -r4, lsl #10
    26e8:	00018e02 	andeq	r8, r1, r2, lsl #28
    26ec:	0000000c 	andeq	r0, r0, ip
    26f0:	000026c0 	andeq	r2, r0, r0, asr #13
    26f4:	0800353c 	stmdaeq	r0, {r2, r3, r4, r5, r8, sl, ip, sp}
    26f8:	00000010 	andeq	r0, r0, r0, lsl r0
    26fc:	0000000c 	andeq	r0, r0, ip
    2700:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2704:	7c020001 	stcvc	0, cr0, [r2], {1}
    2708:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    270c:	0000001c 	andeq	r0, r0, ip, lsl r0
    2710:	000026fc 	strdeq	r2, [r0], -ip
    2714:	0800354c 	stmdaeq	r0, {r2, r3, r6, r8, sl, ip, sp}
    2718:	000000a4 	andeq	r0, r0, r4, lsr #1
    271c:	83180e41 	tsthi	r8, #1040	; 0x410
    2720:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    2724:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    2728:	00018e02 	andeq	r8, r1, r2, lsl #28
    272c:	0000000c 	andeq	r0, r0, ip
    2730:	000026fc 	strdeq	r2, [r0], -ip
    2734:	00000000 	andeq	r0, r0, r0
    2738:	00000010 	andeq	r0, r0, r0, lsl r0
    273c:	0000000c 	andeq	r0, r0, ip
    2740:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2744:	7c020001 	stcvc	0, cr0, [r2], {1}
    2748:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    274c:	00000018 	andeq	r0, r0, r8, lsl r0
    2750:	0000273c 	andeq	r2, r0, ip, lsr r7
    2754:	080035f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, sl, ip, sp}
    2758:	000000dc 	ldrdeq	r0, [r0], -ip
    275c:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    2760:	86038504 	strhi	r8, [r3], -r4, lsl #10
    2764:	00018e02 	andeq	r8, r1, r2, lsl #28
    2768:	0000000c 	andeq	r0, r0, ip
    276c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2770:	7c020001 	stcvc	0, cr0, [r2], {1}
    2774:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2778:	0000001c 	andeq	r0, r0, ip, lsl r0
    277c:	00002768 	andeq	r2, r0, r8, ror #14
    2780:	080036cc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, ip, sp}
    2784:	0000010c 	andeq	r0, r0, ip, lsl #2
    2788:	84180e43 	ldrhi	r0, [r8], #-3651	; 0xfffff1bd
    278c:	86058506 	strhi	r8, [r5], -r6, lsl #10
    2790:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    2794:	00018e02 	andeq	r8, r1, r2, lsl #28
    2798:	00000018 	andeq	r0, r0, r8, lsl r0
    279c:	00002768 	andeq	r2, r0, r8, ror #14
    27a0:	080037d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, ip, sp}
    27a4:	00000078 	andeq	r0, r0, r8, ror r0
    27a8:	83100e41 	tsthi	r0, #1040	; 0x410
    27ac:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    27b0:	00018e02 	andeq	r8, r1, r2, lsl #28
    27b4:	0000000c 	andeq	r0, r0, ip
    27b8:	00002768 	andeq	r2, r0, r8, ror #14
    27bc:	00000000 	andeq	r0, r0, r0
    27c0:	00000024 	andeq	r0, r0, r4, lsr #32
    27c4:	0000000c 	andeq	r0, r0, ip
    27c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    27cc:	7c020001 	stcvc	0, cr0, [r2], {1}
    27d0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    27d4:	00000014 	andeq	r0, r0, r4, lsl r0
    27d8:	000027c4 	andeq	r2, r0, r4, asr #15
    27dc:	08003850 	stmdaeq	r0, {r4, r6, fp, ip, sp}
    27e0:	00000048 	andeq	r0, r0, r8, asr #32
    27e4:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
    27e8:	00018e02 	andeq	r8, r1, r2, lsl #28
    27ec:	0000000c 	andeq	r0, r0, ip
    27f0:	000027c4 	andeq	r2, r0, r4, asr #15
    27f4:	08003898 	stmdaeq	r0, {r3, r4, r7, fp, ip, sp}
    27f8:	0000000c 	andeq	r0, r0, ip
    27fc:	00000014 	andeq	r0, r0, r4, lsl r0
    2800:	000027c4 	andeq	r2, r0, r4, asr #15
    2804:	00000000 	andeq	r0, r0, r0
    2808:	00000018 	andeq	r0, r0, r8, lsl r0
    280c:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2810:	00018e02 	andeq	r8, r1, r2, lsl #28
    2814:	00000014 	andeq	r0, r0, r4, lsl r0
    2818:	000027c4 	andeq	r2, r0, r4, asr #15
    281c:	00000000 	andeq	r0, r0, r0
    2820:	00000018 	andeq	r0, r0, r8, lsl r0
    2824:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2828:	00018e02 	andeq	r8, r1, r2, lsl #28
    282c:	00000018 	andeq	r0, r0, r8, lsl r0
    2830:	000027c4 	andeq	r2, r0, r4, asr #15
    2834:	080038a4 	stmdaeq	r0, {r2, r5, r7, fp, ip, sp}
    2838:	0000002c 	andeq	r0, r0, ip, lsr #32
    283c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    2840:	86038504 	strhi	r8, [r3], -r4, lsl #10
    2844:	00018e02 	andeq	r8, r1, r2, lsl #28
    2848:	0000000c 	andeq	r0, r0, ip
    284c:	000027c4 	andeq	r2, r0, r4, asr #15
    2850:	00000000 	andeq	r0, r0, r0
    2854:	0000000c 	andeq	r0, r0, ip
    2858:	0000000c 	andeq	r0, r0, ip
    285c:	000027c4 	andeq	r2, r0, r4, asr #15
    2860:	080038d0 	stmdaeq	r0, {r4, r6, r7, fp, ip, sp}
    2864:	0000000c 	andeq	r0, r0, ip
    2868:	0000000c 	andeq	r0, r0, ip
    286c:	000027c4 	andeq	r2, r0, r4, asr #15
    2870:	080038dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, fp, ip, sp}
    2874:	0000000c 	andeq	r0, r0, ip
    2878:	0000000c 	andeq	r0, r0, ip
    287c:	000027c4 	andeq	r2, r0, r4, asr #15
    2880:	080038e8 	stmdaeq	r0, {r3, r5, r6, r7, fp, ip, sp}
    2884:	0000000c 	andeq	r0, r0, ip
    2888:	0000000c 	andeq	r0, r0, ip
    288c:	000027c4 	andeq	r2, r0, r4, asr #15
    2890:	080038f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, fp, ip, sp}
    2894:	0000000c 	andeq	r0, r0, ip
    2898:	0000001c 	andeq	r0, r0, ip, lsl r0
    289c:	000027c4 	andeq	r2, r0, r4, asr #15
    28a0:	08003900 	stmdaeq	r0, {r8, fp, ip, sp}
    28a4:	00000070 	andeq	r0, r0, r0, ror r0
    28a8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    28ac:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    28b0:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
    28b4:	000b4200 	andeq	r4, fp, r0, lsl #4
    28b8:	0000001c 	andeq	r0, r0, ip, lsl r0
    28bc:	000027c4 	andeq	r2, r0, r4, asr #15
    28c0:	08003970 	stmdaeq	r0, {r4, r5, r6, r8, fp, ip, sp}
    28c4:	0000008c 	andeq	r0, r0, ip, lsl #1
    28c8:	83180e41 	tsthi	r8, #1040	; 0x410
    28cc:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    28d0:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    28d4:	00018e02 	andeq	r8, r1, r2, lsl #28
    28d8:	00000018 	andeq	r0, r0, r8, lsl r0
    28dc:	000027c4 	andeq	r2, r0, r4, asr #15
    28e0:	00000000 	andeq	r0, r0, r0
    28e4:	0000001c 	andeq	r0, r0, ip, lsl r0
    28e8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    28ec:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    28f0:	000ec3ce 	andeq	ip, lr, lr, asr #7
    28f4:	00000018 	andeq	r0, r0, r8, lsl r0
    28f8:	000027c4 	andeq	r2, r0, r4, asr #15
    28fc:	00000000 	andeq	r0, r0, r0
    2900:	0000001c 	andeq	r0, r0, ip, lsl r0
    2904:	83080e41 	movwhi	r0, #36417	; 0x8e41
    2908:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
    290c:	000ec3ce 	andeq	ip, lr, lr, asr #7
    2910:	0000000c 	andeq	r0, r0, ip
    2914:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2918:	7c020001 	stcvc	0, cr0, [r2], {1}
    291c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2920:	0000001c 	andeq	r0, r0, ip, lsl r0
    2924:	00002910 	andeq	r2, r0, r0, lsl r9
    2928:	00000000 	andeq	r0, r0, r0
    292c:	0000003a 	andeq	r0, r0, sl, lsr r0
    2930:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    2934:	86058506 	strhi	r8, [r5], -r6, lsl #10
    2938:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    293c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2940:	00000020 	andeq	r0, r0, r0, lsr #32
    2944:	00002910 	andeq	r2, r0, r0, lsl r9
    2948:	080039fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, fp, ip, sp}
    294c:	0000003e 	andeq	r0, r0, lr, lsr r0
    2950:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
    2954:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    2958:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    295c:	89038804 	stmdbhi	r3, {r2, fp, pc}
    2960:	00018e02 	andeq	r8, r1, r2, lsl #28
    2964:	0000000c 	andeq	r0, r0, ip
    2968:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    296c:	7c020001 	stcvc	0, cr0, [r2], {1}
    2970:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2974:	0000000c 	andeq	r0, r0, ip
    2978:	00002964 	andeq	r2, r0, r4, ror #18
    297c:	00000000 	andeq	r0, r0, r0
    2980:	00000002 	andeq	r0, r0, r2
    2984:	0000000c 	andeq	r0, r0, ip
    2988:	00002964 	andeq	r2, r0, r4, ror #18
    298c:	08003a3a 	stmdaeq	r0, {r1, r3, r4, r5, r9, fp, ip, sp}
    2990:	00000002 	andeq	r0, r0, r2
    2994:	0000000c 	andeq	r0, r0, ip
    2998:	00002964 	andeq	r2, r0, r4, ror #18
    299c:	00000000 	andeq	r0, r0, r0
    29a0:	00000002 	andeq	r0, r0, r2
    29a4:	0000000c 	andeq	r0, r0, ip
    29a8:	00002964 	andeq	r2, r0, r4, ror #18
    29ac:	00000000 	andeq	r0, r0, r0
    29b0:	00000002 	andeq	r0, r0, r2
    29b4:	0000000c 	andeq	r0, r0, ip
    29b8:	00002964 	andeq	r2, r0, r4, ror #18
    29bc:	00000000 	andeq	r0, r0, r0
    29c0:	00000002 	andeq	r0, r0, r2
    29c4:	0000000c 	andeq	r0, r0, ip
    29c8:	00002964 	andeq	r2, r0, r4, ror #18
    29cc:	08003a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp, ip, sp}
    29d0:	00000002 	andeq	r0, r0, r2
    29d4:	0000000c 	andeq	r0, r0, ip
    29d8:	00002964 	andeq	r2, r0, r4, ror #18
    29dc:	00000000 	andeq	r0, r0, r0
    29e0:	00000004 	andeq	r0, r0, r4
    29e4:	0000000c 	andeq	r0, r0, ip
    29e8:	00002964 	andeq	r2, r0, r4, ror #18
    29ec:	00000000 	andeq	r0, r0, r0
    29f0:	00000004 	andeq	r0, r0, r4
    29f4:	0000000c 	andeq	r0, r0, ip
    29f8:	00002964 	andeq	r2, r0, r4, ror #18
    29fc:	00000000 	andeq	r0, r0, r0
    2a00:	00000002 	andeq	r0, r0, r2
    2a04:	0000000c 	andeq	r0, r0, ip
    2a08:	00002964 	andeq	r2, r0, r4, ror #18
    2a0c:	08003a3e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r9, fp, ip, sp}
    2a10:	00000002 	andeq	r0, r0, r2
    2a14:	0000000c 	andeq	r0, r0, ip
    2a18:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2a1c:	7c020001 	stcvc	0, cr0, [r2], {1}
    2a20:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2a24:	00000020 	andeq	r0, r0, r0, lsr #32
    2a28:	00002a14 	andeq	r2, r0, r4, lsl sl
    2a2c:	08003a40 	stmdaeq	r0, {r6, r9, fp, ip, sp}
    2a30:	0000004a 	andeq	r0, r0, sl, asr #32
    2a34:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    2a38:	86038504 	strhi	r8, [r3], -r4, lsl #10
    2a3c:	45018e02 	strmi	r8, [r1, #-3586]	; 0xfffff1fe
    2a40:	0e5e680e 	cdpeq	8, 5, cr6, cr14, cr14, {0}
    2a44:	00000010 	andeq	r0, r0, r0, lsl r0
    2a48:	00000020 	andeq	r0, r0, r0, lsr #32
    2a4c:	00002a14 	andeq	r2, r0, r4, lsl sl
    2a50:	08003a8c 	stmdaeq	r0, {r2, r3, r7, r9, fp, ip, sp}
    2a54:	00000080 	andeq	r0, r0, r0, lsl #1
    2a58:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    2a5c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    2a60:	4b018e02 	blmi	66270 <_Min_Heap_Size+0x65a70>
    2a64:	41100e0a 	tstmi	r0, sl, lsl #28
    2a68:	0000000b 	andeq	r0, r0, fp
    2a6c:	0000000c 	andeq	r0, r0, ip
    2a70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2a74:	7c020001 	stcvc	0, cr0, [r2], {1}
    2a78:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2a7c:	00000024 	andeq	r0, r0, r4, lsr #32
    2a80:	00002a6c 	andeq	r2, r0, ip, ror #20
    2a84:	08003b0c 	stmdaeq	r0, {r2, r3, r8, r9, fp, ip, sp}
    2a88:	00000098 	muleq	r0, r8, r0
    2a8c:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
    2a90:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    2a94:	0e0a5301 	cdpeq	3, 0, cr5, cr10, cr1, {0}
    2a98:	c5ce420c 	strbgt	r4, [lr, #524]	; 0x20c
    2a9c:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    2aa0:	0c0e710b 	stfeqs	f7, [lr], {11}
    2aa4:	0000000c 	andeq	r0, r0, ip
    2aa8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2aac:	7c020001 	stcvc	0, cr0, [r2], {1}
    2ab0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2ab4:	00000018 	andeq	r0, r0, r8, lsl r0
    2ab8:	00002aa4 	andeq	r2, r0, r4, lsr #21
    2abc:	08003ba4 	stmdaeq	r0, {r2, r5, r7, r8, r9, fp, ip, sp}
    2ac0:	00000040 	andeq	r0, r0, r0, asr #32
    2ac4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    2ac8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    2acc:	00018e02 	andeq	r8, r1, r2, lsl #28
    2ad0:	0000001c 	andeq	r0, r0, ip, lsl r0
    2ad4:	00002aa4 	andeq	r2, r0, r4, lsr #21
    2ad8:	08003be4 	stmdaeq	r0, {r2, r5, r6, r7, r8, r9, fp, ip, sp}
    2adc:	000000e8 	andeq	r0, r0, r8, ror #1
    2ae0:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    2ae4:	86058506 	strhi	r8, [r5], -r6, lsl #10
    2ae8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    2aec:	00018e02 	andeq	r8, r1, r2, lsl #28
    2af0:	0000000c 	andeq	r0, r0, ip
    2af4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2af8:	7c020001 	stcvc	0, cr0, [r2], {1}
    2afc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2b00:	0000001c 	andeq	r0, r0, ip, lsl r0
    2b04:	00002af0 	strdeq	r2, [r0], -r0
    2b08:	08003ccc 	stmdaeq	r0, {r2, r3, r6, r7, sl, fp, ip, sp}
    2b0c:	0000002e 	andeq	r0, r0, lr, lsr #32
    2b10:	84040e44 	strhi	r0, [r4], #-3652	; 0xfffff1bc
    2b14:	c40a4901 	strgt	r4, [sl], #-2305	; 0xfffff6ff
    2b18:	0b42000e 	bleq	1082b58 <_Min_Heap_Size+0x1082358>
    2b1c:	000ec447 	andeq	ip, lr, r7, asr #8
    2b20:	0000001c 	andeq	r0, r0, ip, lsl r0
    2b24:	00002af0 	strdeq	r2, [r0], -r0
    2b28:	08003cfa 	stmdaeq	r0, {r1, r3, r4, r5, r6, r7, sl, fp, ip, sp}
    2b2c:	00000024 	andeq	r0, r0, r4, lsr #32
    2b30:	83180e41 	tsthi	r8, #1040	; 0x410
    2b34:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    2b38:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    2b3c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2b40:	00000018 	andeq	r0, r0, r8, lsl r0
    2b44:	00002af0 	strdeq	r2, [r0], -r0
    2b48:	00000000 	andeq	r0, r0, r0
    2b4c:	0000001a 	andeq	r0, r0, sl, lsl r0
    2b50:	83100e41 	tsthi	r0, #1040	; 0x410
    2b54:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2b58:	00018e02 	andeq	r8, r1, r2, lsl #28
    2b5c:	0000002c 	andeq	r0, r0, ip, lsr #32
    2b60:	00002af0 	strdeq	r2, [r0], -r0
    2b64:	08003d20 	stmdaeq	r0, {r5, r8, sl, fp, ip, sp}
    2b68:	00000260 	andeq	r0, r0, r0, ror #4
    2b6c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    2b70:	86088509 	strhi	r8, [r8], -r9, lsl #10
    2b74:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    2b78:	8a048905 	bhi	124f94 <_Min_Heap_Size+0x124794>
    2b7c:	8e028b03 	vmlahi.f64	d8, d2, d3
    2b80:	980e4201 	stmdals	lr, {r0, r9, lr}
    2b84:	0e0a6501 	cfsh32eq	mvfx6, mvfx10, #1
    2b88:	000b4224 	andeq	r4, fp, r4, lsr #4
    2b8c:	0000000c 	andeq	r0, r0, ip
    2b90:	00002af0 	strdeq	r2, [r0], -r0
    2b94:	00000000 	andeq	r0, r0, r0
    2b98:	00000014 	andeq	r0, r0, r4, lsl r0
    2b9c:	0000000c 	andeq	r0, r0, ip
    2ba0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2ba4:	7c020001 	stcvc	0, cr0, [r2], {1}
    2ba8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2bac:	00000020 	andeq	r0, r0, r0, lsr #32
    2bb0:	00002b9c 	muleq	r0, ip, fp
    2bb4:	08003f80 	stmdaeq	r0, {r7, r8, r9, sl, fp, ip, sp}
    2bb8:	000000da 	ldrdeq	r0, [r0], -sl
    2bbc:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    2bc0:	86078508 	strhi	r8, [r7], -r8, lsl #10
    2bc4:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    2bc8:	8a038904 	bhi	e4fe0 <_Min_Heap_Size+0xe47e0>
    2bcc:	00018e02 	andeq	r8, r1, r2, lsl #28
    2bd0:	00000028 	andeq	r0, r0, r8, lsr #32
    2bd4:	00002b9c 	muleq	r0, ip, fp
    2bd8:	0800405c 	stmdaeq	r0, {r2, r3, r4, r6, lr}
    2bdc:	0000024c 	andeq	r0, r0, ip, asr #4
    2be0:	84300e42 	ldrthi	r0, [r0], #-3650	; 0xfffff1be
    2be4:	86078508 	strhi	r8, [r7], -r8, lsl #10
    2be8:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    2bec:	8a038904 	bhi	e5004 <_Min_Heap_Size+0xe4804>
    2bf0:	02018e02 	andeq	r8, r1, #2, 28
    2bf4:	200e0ab3 			; <UNDEFINED> instruction: 0x200e0ab3
    2bf8:	00000b42 	andeq	r0, r0, r2, asr #22
    2bfc:	0000000c 	andeq	r0, r0, ip
    2c00:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2c04:	7c020001 	stcvc	0, cr0, [r2], {1}
    2c08:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2c0c:	00000018 	andeq	r0, r0, r8, lsl r0
    2c10:	00002bfc 	strdeq	r2, [r0], -ip
    2c14:	080042a8 	stmdaeq	r0, {r3, r5, r7, r9, lr}
    2c18:	00000020 	andeq	r0, r0, r0, lsr #32
    2c1c:	83100e41 	tsthi	r0, #1040	; 0x410
    2c20:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2c24:	00018e02 	andeq	r8, r1, r2, lsl #28
    2c28:	0000000c 	andeq	r0, r0, ip
    2c2c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2c30:	7c020001 	stcvc	0, cr0, [r2], {1}
    2c34:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2c38:	00000014 	andeq	r0, r0, r4, lsl r0
    2c3c:	00002c28 	andeq	r2, r0, r8, lsr #24
    2c40:	080042c8 	stmdaeq	r0, {r3, r6, r7, r9, lr}
    2c44:	00000022 	andeq	r0, r0, r2, lsr #32
    2c48:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    2c4c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2c50:	0000000c 	andeq	r0, r0, ip
    2c54:	00002c28 	andeq	r2, r0, r8, lsr #24
    2c58:	00000000 	andeq	r0, r0, r0
    2c5c:	00000004 	andeq	r0, r0, r4
    2c60:	00000024 	andeq	r0, r0, r4, lsr #32
    2c64:	00002c28 	andeq	r2, r0, r8, lsr #24
    2c68:	080042ea 	stmdaeq	r0, {r1, r3, r5, r6, r7, r9, lr}
    2c6c:	00000038 	andeq	r0, r0, r8, lsr r0
    2c70:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    2c74:	86058506 	strhi	r8, [r5], -r6, lsl #10
    2c78:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    2c7c:	58018e02 	stmdapl	r1, {r1, r9, sl, fp, pc}
    2c80:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
    2c84:	000ec4c5 	andeq	ip, lr, r5, asr #9
    2c88:	00000014 	andeq	r0, r0, r4, lsl r0
    2c8c:	00002c28 	andeq	r2, r0, r8, lsr #24
    2c90:	08004322 	stmdaeq	r0, {r1, r5, r8, r9, lr}
    2c94:	00000024 	andeq	r0, r0, r4, lsr #32
    2c98:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    2c9c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2ca0:	0000000c 	andeq	r0, r0, ip
    2ca4:	00002c28 	andeq	r2, r0, r8, lsr #24
    2ca8:	08004346 	stmdaeq	r0, {r1, r2, r6, r8, r9, lr}
    2cac:	00000008 	andeq	r0, r0, r8
    2cb0:	0000000c 	andeq	r0, r0, ip
    2cb4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2cb8:	7c020001 	stcvc	0, cr0, [r2], {1}
    2cbc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2cc0:	00000018 	andeq	r0, r0, r8, lsl r0
    2cc4:	00002cb0 			; <UNDEFINED> instruction: 0x00002cb0
    2cc8:	08004350 	stmdaeq	r0, {r4, r6, r8, r9, lr}
    2ccc:	00000024 	andeq	r0, r0, r4, lsr #32
    2cd0:	83100e41 	tsthi	r0, #1040	; 0x410
    2cd4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2cd8:	00018e02 	andeq	r8, r1, r2, lsl #28
    2cdc:	0000000c 	andeq	r0, r0, ip
    2ce0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2ce4:	7c020001 	stcvc	0, cr0, [r2], {1}
    2ce8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2cec:	00000018 	andeq	r0, r0, r8, lsl r0
    2cf0:	00002cdc 	ldrdeq	r2, [r0], -ip
    2cf4:	08004374 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, lr}
    2cf8:	00000020 	andeq	r0, r0, r0, lsr #32
    2cfc:	83100e41 	tsthi	r0, #1040	; 0x410
    2d00:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2d04:	00018e02 	andeq	r8, r1, r2, lsl #28
    2d08:	0000000c 	andeq	r0, r0, ip
    2d0c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2d10:	7c020001 	stcvc	0, cr0, [r2], {1}
    2d14:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2d18:	00000018 	andeq	r0, r0, r8, lsl r0
    2d1c:	00002d08 	andeq	r2, r0, r8, lsl #26
    2d20:	08004394 	stmdaeq	r0, {r2, r4, r7, r8, r9, lr}
    2d24:	00000024 	andeq	r0, r0, r4, lsr #32
    2d28:	83100e41 	tsthi	r0, #1040	; 0x410
    2d2c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2d30:	00018e02 	andeq	r8, r1, r2, lsl #28
    2d34:	0000000c 	andeq	r0, r0, ip
    2d38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2d3c:	7c020001 	stcvc	0, cr0, [r2], {1}
    2d40:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2d44:	00000018 	andeq	r0, r0, r8, lsl r0
    2d48:	00002d34 	andeq	r2, r0, r4, lsr sp
    2d4c:	080043b8 	stmdaeq	r0, {r3, r4, r5, r7, r8, r9, lr}
    2d50:	00000020 	andeq	r0, r0, r0, lsr #32
    2d54:	83100e41 	tsthi	r0, #1040	; 0x410
    2d58:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2d5c:	00018e02 	andeq	r8, r1, r2, lsl #28
    2d60:	0000000c 	andeq	r0, r0, ip
    2d64:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2d68:	7c020001 	stcvc	0, cr0, [r2], {1}
    2d6c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2d70:	00000018 	andeq	r0, r0, r8, lsl r0
    2d74:	00002d60 	andeq	r2, r0, r0, ror #26
    2d78:	080043d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, lr}
    2d7c:	00000024 	andeq	r0, r0, r4, lsr #32
    2d80:	83100e41 	tsthi	r0, #1040	; 0x410
    2d84:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2d88:	00018e02 	andeq	r8, r1, r2, lsl #28
    2d8c:	0000000c 	andeq	r0, r0, ip
    2d90:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2d94:	7c020001 	stcvc	0, cr0, [r2], {1}
    2d98:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2d9c:	0000000c 	andeq	r0, r0, ip
    2da0:	00002d8c 	andeq	r2, r0, ip, lsl #27
    2da4:	080043fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, lr}
    2da8:	0000000c 	andeq	r0, r0, ip
    2dac:	0000000c 	andeq	r0, r0, ip
    2db0:	00002d8c 	andeq	r2, r0, ip, lsl #27
    2db4:	08004408 	stmdaeq	r0, {r3, sl, lr}
    2db8:	0000000c 	andeq	r0, r0, ip
    2dbc:	0000000c 	andeq	r0, r0, ip
    2dc0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2dc4:	7c020001 	stcvc	0, cr0, [r2], {1}
    2dc8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2dcc:	00000018 	andeq	r0, r0, r8, lsl r0
    2dd0:	00002dbc 			; <UNDEFINED> instruction: 0x00002dbc
    2dd4:	08004414 	stmdaeq	r0, {r2, r4, sl, lr}
    2dd8:	00000024 	andeq	r0, r0, r4, lsr #32
    2ddc:	83100e41 	tsthi	r0, #1040	; 0x410
    2de0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2de4:	00018e02 	andeq	r8, r1, r2, lsl #28
    2de8:	0000000c 	andeq	r0, r0, ip
    2dec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2df0:	7c020001 	stcvc	0, cr0, [r2], {1}
    2df4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2df8:	00000020 	andeq	r0, r0, r0, lsr #32
    2dfc:	00002de8 	andeq	r2, r0, r8, ror #27
    2e00:	00000000 	andeq	r0, r0, r0
    2e04:	0000001a 	andeq	r0, r0, sl, lsl r0
    2e08:	83100e41 	tsthi	r0, #1040	; 0x410
    2e0c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    2e10:	4a018e02 	bmi	66620 <_Min_Heap_Size+0x65e20>
    2e14:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    2e18:	0000000e 	andeq	r0, r0, lr
    2e1c:	00000024 	andeq	r0, r0, r4, lsr #32
    2e20:	00002de8 	andeq	r2, r0, r8, ror #27
    2e24:	00000000 	andeq	r0, r0, r0
    2e28:	000000b8 	strheq	r0, [r0], -r8
    2e2c:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
    2e30:	86038504 	strhi	r8, [r3], -r4, lsl #10
    2e34:	7f018e02 	svcvc	0x00018e02
    2e38:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
    2e3c:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    2e40:	0000000b 	andeq	r0, r0, fp
    2e44:	0000000c 	andeq	r0, r0, ip
    2e48:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2e4c:	7c020001 	stcvc	0, cr0, [r2], {1}
    2e50:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2e54:	00000018 	andeq	r0, r0, r8, lsl r0
    2e58:	00002e44 	andeq	r2, r0, r4, asr #28
    2e5c:	080002c0 	stmdaeq	r0, {r6, r7, r9}
    2e60:	00000030 	andeq	r0, r0, r0, lsr r0
    2e64:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    2e68:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    2e6c:	00000010 	andeq	r0, r0, r0, lsl r0
    2e70:	0000000c 	andeq	r0, r0, ip
    2e74:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    2e78:	7c020001 	stcvc	0, cr0, [r2], {1}
    2e7c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    2e80:	00000020 	andeq	r0, r0, r0, lsr #32
    2e84:	00002e70 	andeq	r2, r0, r0, ror lr
    2e88:	080002f0 	stmdaeq	r0, {r4, r5, r6, r7, r9}
    2e8c:	000002d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2e90:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    2e94:	86078508 	strhi	r8, [r7], -r8, lsl #10
    2e98:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    2e9c:	8a038904 	bhi	e52b4 <_Min_Heap_Size+0xe4ab4>
    2ea0:	00018e02 	andeq	r8, r1, r2, lsl #28

##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [4.3.0-B58] date: [Wed Apr 10 23:57:21 CST 2024]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = stm32-qemu


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -g --apcs=interwork


#######################################
# paths
#######################################
# Build path
BUILD_DIR = stm32-qemu

######################################
# source
######################################
# C sources
C_SOURCES =  \
./application/main.c \
./application/stm32f4xx_it.c \
../Core/Src/gpio.c \
../Core/Src/usart.c \
../Core/Src/stm32f4xx_hal_msp.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_tim_ex.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_rcc_ex.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ex.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_flash_ramfunc.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_gpio.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma_ex.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_dma.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_pwr_ex.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_cortex.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c \
../Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_exti.c \
../Core/Src/system_stm32f4xx.c \
../../../libutils/fault-dump/src/fault-dump.c \
../../../libutils/fault-dump/cpu/cortex-m4/fault-hal.c 

# ASM sources
ASM_SOURCES =  \
./startup/startup_stm32f405xx.s \
../../../libutils/fault-dump/cpu/cortex-m4/fault-mdk.s

# ASM sources
ASMM_SOURCES = 


#######################################
# binaries
#######################################
PREFIX = C:/Users/xidon/program/ARM_Keil/Keil_v5/ARM/ARMCC506/bin
LIBFIX = C:/Users/xidon/program/ARM_Keil/Keil_v5/ARM/ARMCC506/lib
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
CC = $(PREFIX)/armcc
AS = $(PREFIX)/armasm
LK = $(PREFIX)/armlink
FF = $(PREFIX)/fromelf

#######################################
# CFLAGS
#######################################
# cpu
CPU = --cpu Cortex-M4.fp

# fpu
FPU = 

# float-abi
FLOAT-ABI = 

# mcu
MCU = $(CPU) --thumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS =  \
--pd "__MICROLIB SETA 1"


# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32F405xx \
-D__MICROLIB


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-I../Core/Inc \
-I../Drivers/STM32F4xx_HAL_Driver/Inc \
-I../Drivers/STM32F4xx_HAL_Driver/Inc/Legacy \
-I../Drivers/CMSIS/Device/ST/STM32F4xx/Include \
-I../Drivers/CMSIS/Include \
-I../../../libutils/fault-dump/inc \
-I../../../libutils/fault-dump/cpu/cortex-m4 


# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT)

CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) --c99

ifeq ($(DEBUG), 1)
CFLAGS += -g -O0
endif


# Generate dependency information
CFLAGS += 


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = ./startup/stm32-qemu.sct

# libraries
LIBFILE = --library_type=microlib
LIBPATH = --libpath=$(LIBFIX)
LDFLAGS = --scatter $(LDSCRIPT) $(LIBFILE) $(LIBPATH) --map --symbols --info common --info debug --info sizes --info totals --info unused --info veneers --list $(BUILD_DIR)/$(TARGET).map --strict

# default action: build all
all: $(BUILD_DIR)/$(TARGET).axf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASMM_SOURCES:.S=.o)))
vpath %.S $(sort $(dir $(ASMM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(ASFLAGS) $< -o $@
$(BUILD_DIR)/%.o: %.S Makefile | $(BUILD_DIR)
	$(AS) -c $(ASFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).axf: $(OBJECTS) Makefile
	$(LK) $(OBJECTS) $(LDFLAGS) -o $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.axf | $(BUILD_DIR)
	$(FF) --i32 --output $@ $<

$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.axf | $(BUILD_DIR)
	$(FF) --bin --output $@ $<

$(BUILD_DIR):
	mkdir $@

#######################################
# clean up
#######################################
clean:
ifeq ($(OS), Windows_NT)
	del $(BUILD_DIR)\*.o
	del $(BUILD_DIR)\*.d
	del $(BUILD_DIR)\*.i
	del $(BUILD_DIR)\*.crf
	del $(BUILD_DIR)\*.txt
	del $(BUILD_DIR)\*.htm
	del $(BUILD_DIR)\*.lnp
	del $(BUILD_DIR)\*.dep
else
	rm -fR $(BUILD_DIR)/*.o
	rm -fR $(BUILD_DIR)/*.d
	rm -fR $(BUILD_DIR)/*.i
	rm -fR $(BUILD_DIR)/*.crf
	rm -fR $(BUILD_DIR)/*.txt
	rm -fR $(BUILD_DIR)\*.htm
	rm -fR $(BUILD_DIR)\*.lnp
	rm -fR $(BUILD_DIR)\*.dep
endif

#######################################
# start qemu for debug
#######################################
debug:
	.\rtos-start.bat 

#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
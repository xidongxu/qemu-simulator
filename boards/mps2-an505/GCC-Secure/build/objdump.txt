
build/an505-qemu.elf:     file format elf32-littlearm


Disassembly of section .text:

10000000 <__Vectors>:
10000000:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10000004:	10001e3d 	andne	r1, r0, sp, lsr lr
10000008:	10001e91 	mulne	r0, r1, lr
1000000c:	10001ead 	andne	r1, r0, sp, lsr #29
10000010:	10001e91 	mulne	r0, r1, lr
10000014:	10001e91 	mulne	r0, r1, lr
10000018:	10001e91 	mulne	r0, r1, lr
1000001c:	10001e91 	mulne	r0, r1, lr
	...
1000002c:	10001e91 	mulne	r0, r1, lr
10000030:	10001e91 	mulne	r0, r1, lr
10000034:	00000000 	andeq	r0, r0, r0
10000038:	10001e91 	mulne	r0, r1, lr
1000003c:	10001e91 	mulne	r0, r1, lr
10000040:	10001e91 	mulne	r0, r1, lr
10000044:	10001e91 	mulne	r0, r1, lr
10000048:	10001e91 	mulne	r0, r1, lr
1000004c:	10001e91 	mulne	r0, r1, lr
10000050:	10001e91 	mulne	r0, r1, lr
10000054:	10001e91 	mulne	r0, r1, lr
10000058:	10001e91 	mulne	r0, r1, lr
1000005c:	10001e91 	mulne	r0, r1, lr
10000060:	10001e91 	mulne	r0, r1, lr
10000064:	10001e91 	mulne	r0, r1, lr
	...

100007c0 <__do_global_dtors_aux>:
100007c0:	b510      	push	{r4, lr}
100007c2:	4c05      	ldr	r4, [pc, #20]	; (100007d8 <__do_global_dtors_aux+0x18>)
100007c4:	7823      	ldrb	r3, [r4, #0]
100007c6:	b933      	cbnz	r3, 100007d6 <__do_global_dtors_aux+0x16>
100007c8:	4b04      	ldr	r3, [pc, #16]	; (100007dc <__do_global_dtors_aux+0x1c>)
100007ca:	b113      	cbz	r3, 100007d2 <__do_global_dtors_aux+0x12>
100007cc:	4804      	ldr	r0, [pc, #16]	; (100007e0 <__do_global_dtors_aux+0x20>)
100007ce:	e000      	b.n	100007d2 <__do_global_dtors_aux+0x12>
100007d0:	bf00      	nop
100007d2:	2301      	movs	r3, #1
100007d4:	7023      	strb	r3, [r4, #0]
100007d6:	bd10      	pop	{r4, pc}
100007d8:	38000440 	stmdacc	r0, {r6, sl}
100007dc:	00000000 	andeq	r0, r0, r0
100007e0:	10004120 	andne	r4, r0, r0, lsr #2

100007e4 <frame_dummy>:
100007e4:	b508      	push	{r3, lr}
100007e6:	4b03      	ldr	r3, [pc, #12]	; (100007f4 <frame_dummy+0x10>)
100007e8:	b11b      	cbz	r3, 100007f2 <frame_dummy+0xe>
100007ea:	4903      	ldr	r1, [pc, #12]	; (100007f8 <frame_dummy+0x14>)
100007ec:	4803      	ldr	r0, [pc, #12]	; (100007fc <frame_dummy+0x18>)
100007ee:	e000      	b.n	100007f2 <frame_dummy+0xe>
100007f0:	bf00      	nop
100007f2:	bd08      	pop	{r3, pc}
100007f4:	00000000 	andeq	r0, r0, r0
100007f8:	38000444 	stmdacc	r0, {r2, r6, sl}
100007fc:	10004120 	andne	r4, r0, r0, lsr #2

10000800 <fault_unalign_trigger>:
    SCB->CCR |= SCB_CCR_DIV_0_TRP_Msk;
    c = (a + (b / c));
    printf("c = %d\r\n", c);
}

void fault_unalign_trigger(void) {
10000800:	b530      	push	{r4, r5, lr}
10000802:	b083      	sub	sp, #12
    volatile int *addr = NULL;
    volatile int value = 0;
10000804:	2400      	movs	r4, #0
10000806:	9401      	str	r4, [sp, #4]
    SCB->CCR |= SCB_CCR_UNALIGN_TRP_Msk;
10000808:	4a0e      	ldr	r2, [pc, #56]	; (10000844 <fault_unalign_trigger+0x44>)
1000080a:	6953      	ldr	r3, [r2, #20]
1000080c:	f043 0308 	orr.w	r3, r3, #8
10000810:	6153      	str	r3, [r2, #20]

    addr = (int*)0x00;
    value = *addr;
10000812:	6823      	ldr	r3, [r4, #0]
10000814:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10000816:	9a01      	ldr	r2, [sp, #4]
10000818:	4d0b      	ldr	r5, [pc, #44]	; (10000848 <fault_unalign_trigger+0x48>)
1000081a:	4621      	mov	r1, r4
1000081c:	4628      	mov	r0, r5
1000081e:	f001 f965 	bl	10001aec <printf>
    addr = (int*)0x04;
    value = *addr;
10000822:	6863      	ldr	r3, [r4, #4]
10000824:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10000826:	9a01      	ldr	r2, [sp, #4]
10000828:	2104      	movs	r1, #4
1000082a:	4628      	mov	r0, r5
1000082c:	f001 f95e 	bl	10001aec <printf>
    addr = (int*)0x03;
    value = *addr;
10000830:	f8d4 3003 	ldr.w	r3, [r4, #3]
10000834:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10000836:	9a01      	ldr	r2, [sp, #4]
10000838:	2103      	movs	r1, #3
1000083a:	4628      	mov	r0, r5
1000083c:	f001 f956 	bl	10001aec <printf>
}
10000840:	b003      	add	sp, #12
10000842:	bd30      	pop	{r4, r5, pc}
10000844:	e000ed00 	and	lr, r0, r0, lsl #26
10000848:	10003dfc 	strdne	r3, [r0], -ip

1000084c <dump_callstack>:

void dump_callstack(void) {
1000084c:	b530      	push	{r4, r5, lr}
1000084e:	b0c1      	sub	sp, #260	; 0x104
    unsigned int buffer[FD_STACK_DUMP_DEPTH_MAX] = {0};
10000850:	f44f 7280 	mov.w	r2, #256	; 0x100
10000854:	2100      	movs	r1, #0
10000856:	4668      	mov	r0, sp
10000858:	f003 f9a8 	bl	10003bac <memset>
    unsigned int point = fault_dump_bm_stack_point();
1000085c:	f001 fae6 	bl	10001e2c <fault_dump_bm_stack_point>
10000860:	4604      	mov	r4, r0
    unsigned int start = fault_dump_bm_stack_start();
10000862:	f001 fae7 	bl	10001e34 <fault_dump_bm_stack_start>
10000866:	4603      	mov	r3, r0
    int count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, (unsigned int*)point, (unsigned int*)start);
10000868:	4622      	mov	r2, r4
1000086a:	2140      	movs	r1, #64	; 0x40
1000086c:	4668      	mov	r0, sp
1000086e:	f001 f9d9 	bl	10001c24 <fault_dump_callstack>
    if (count < 0) {
10000872:	1e05      	subs	r5, r0, #0
10000874:	db04      	blt.n	10000880 <dump_callstack+0x34>
        printf("CallStack dump error: %d\r\n", count);
    } else {
        printf("CallStack:[ ");
10000876:	480b      	ldr	r0, [pc, #44]	; (100008a4 <dump_callstack+0x58>)
10000878:	f001 f938 	bl	10001aec <printf>
        for (int i = 0; i < count; i++) {
1000087c:	2400      	movs	r4, #0
1000087e:	e00a      	b.n	10000896 <dump_callstack+0x4a>
        printf("CallStack dump error: %d\r\n", count);
10000880:	4629      	mov	r1, r5
10000882:	4809      	ldr	r0, [pc, #36]	; (100008a8 <dump_callstack+0x5c>)
10000884:	f001 f932 	bl	10001aec <printf>
10000888:	e00a      	b.n	100008a0 <dump_callstack+0x54>
            printf("%08X ", buffer[i]);
1000088a:	f85d 1024 	ldr.w	r1, [sp, r4, lsl #2]
1000088e:	4807      	ldr	r0, [pc, #28]	; (100008ac <dump_callstack+0x60>)
10000890:	f001 f92c 	bl	10001aec <printf>
        for (int i = 0; i < count; i++) {
10000894:	3401      	adds	r4, #1
10000896:	42ac      	cmp	r4, r5
10000898:	dbf7      	blt.n	1000088a <dump_callstack+0x3e>
        }
        printf("] \r\n");
1000089a:	4805      	ldr	r0, [pc, #20]	; (100008b0 <dump_callstack+0x64>)
1000089c:	f001 f946 	bl	10001b2c <puts>
    }
}
100008a0:	b041      	add	sp, #260	; 0x104
100008a2:	bd30      	pop	{r4, r5, pc}
100008a4:	10003e34 	andne	r3, r0, r4, lsr lr
100008a8:	10003e18 	andne	r3, r0, r8, lsl lr
100008ac:	10003e44 	andne	r3, r0, r4, asr #28
100008b0:	10003e4c 	andne	r3, r0, ip, asr #28

100008b4 <test0>:

void test0(void) {
100008b4:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008b6:	4904      	ldr	r1, [pc, #16]	; (100008c8 <test0+0x14>)
100008b8:	4804      	ldr	r0, [pc, #16]	; (100008cc <test0+0x18>)
100008ba:	f001 f917 	bl	10001aec <printf>
    dump_callstack();
100008be:	f7ff ffc5 	bl	1000084c <dump_callstack>
    // trigger a fault.
    fault_unalign_trigger();
100008c2:	f7ff ff9d 	bl	10000800 <fault_unalign_trigger>
}
100008c6:	bd08      	pop	{r3, pc}
100008c8:	10003ea4 	andne	r3, r0, r4, lsr #29
100008cc:	10003e50 	andne	r3, r0, r0, asr lr

100008d0 <test1>:

void test1(void) {
100008d0:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008d2:	4903      	ldr	r1, [pc, #12]	; (100008e0 <test1+0x10>)
100008d4:	4803      	ldr	r0, [pc, #12]	; (100008e4 <test1+0x14>)
100008d6:	f001 f909 	bl	10001aec <printf>
    test0();
100008da:	f7ff ffeb 	bl	100008b4 <test0>
}
100008de:	bd08      	pop	{r3, pc}
100008e0:	10003e9c 	mulne	r0, ip, lr
100008e4:	10003e50 	andne	r3, r0, r0, asr lr

100008e8 <test2>:

void test2(void) {
100008e8:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008ea:	4903      	ldr	r1, [pc, #12]	; (100008f8 <test2+0x10>)
100008ec:	4803      	ldr	r0, [pc, #12]	; (100008fc <test2+0x14>)
100008ee:	f001 f8fd 	bl	10001aec <printf>
    test1();
100008f2:	f7ff ffed 	bl	100008d0 <test1>
}
100008f6:	bd08      	pop	{r3, pc}
100008f8:	10003e94 	mulne	r0, r4, lr
100008fc:	10003e50 	andne	r3, r0, r0, asr lr

10000900 <test3>:

void test3(void) {
10000900:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
10000902:	4903      	ldr	r1, [pc, #12]	; (10000910 <test3+0x10>)
10000904:	4803      	ldr	r0, [pc, #12]	; (10000914 <test3+0x14>)
10000906:	f001 f8f1 	bl	10001aec <printf>
    test2();
1000090a:	f7ff ffed 	bl	100008e8 <test2>
}
1000090e:	bd08      	pop	{r3, pc}
10000910:	10003e8c 	andne	r3, r0, ip, lsl #29
10000914:	10003e50 	andne	r3, r0, r0, asr lr

10000918 <test4>:

void test4(void) {
10000918:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
1000091a:	4903      	ldr	r1, [pc, #12]	; (10000928 <test4+0x10>)
1000091c:	4803      	ldr	r0, [pc, #12]	; (1000092c <test4+0x14>)
1000091e:	f001 f8e5 	bl	10001aec <printf>
    test3();
10000922:	f7ff ffed 	bl	10000900 <test3>
}
10000926:	bd08      	pop	{r3, pc}
10000928:	10003e84 	andne	r3, r0, r4, lsl #29
1000092c:	10003e50 	andne	r3, r0, r0, asr lr

10000930 <test5>:

void test5(void) {
10000930:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
10000932:	4903      	ldr	r1, [pc, #12]	; (10000940 <test5+0x10>)
10000934:	4803      	ldr	r0, [pc, #12]	; (10000944 <test5+0x14>)
10000936:	f001 f8d9 	bl	10001aec <printf>
    test4();
1000093a:	f7ff ffed 	bl	10000918 <test4>
}
1000093e:	bd08      	pop	{r3, pc}
10000940:	10003e7c 	andne	r3, r0, ip, ror lr
10000944:	10003e50 	andne	r3, r0, r0, asr lr

10000948 <main>:

int main(void) {
10000948:	b510      	push	{r4, lr}
    int count = 0;
    uart_init();
1000094a:	f001 f8ff 	bl	10001b4c <uart_init>

    printf("Start\r\n");
1000094e:	4807      	ldr	r0, [pc, #28]	; (1000096c <main+0x24>)
10000950:	f001 f8ec 	bl	10001b2c <puts>
    fault_dump_init();
10000954:	f001 f93e 	bl	10001bd4 <fault_dump_init>
    test5();
10000958:	f7ff ffea 	bl	10000930 <test5>
    int count = 0;
1000095c:	2100      	movs	r1, #0

    while (1) {
        __NOP();
1000095e:	bf00      	nop
        printf("hello world - %d.\r\n", count++);
10000960:	1c4c      	adds	r4, r1, #1
10000962:	4803      	ldr	r0, [pc, #12]	; (10000970 <main+0x28>)
10000964:	f001 f8c2 	bl	10001aec <printf>
10000968:	4621      	mov	r1, r4
1000096a:	e7f8      	b.n	1000095e <main+0x16>
1000096c:	10003e60 	andne	r3, r0, r0, ror #28
10000970:	10003e68 	andne	r3, r0, r8, ror #28

10000974 <SystemInit>:
 *----------------------------------------------------------------------------*/
void SystemInit (void)
{

#if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
  SCB->VTOR = (uint32_t) &(__VECTOR_TABLE[0]);
10000974:	4b06      	ldr	r3, [pc, #24]	; (10000990 <SystemInit+0x1c>)
10000976:	4a07      	ldr	r2, [pc, #28]	; (10000994 <SystemInit+0x20>)
10000978:	609a      	str	r2, [r3, #8]
#endif

#if defined (__FPU_USED) && (__FPU_USED == 1U)
  SCB->CPACR |= ((3U << 10U*2U) |           /* enable CP10 Full Access */
1000097a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
1000097e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
10000982:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

#if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
  TZ_SAU_Setup();
#endif

  SystemCoreClock = SYSTEM_CLOCK;
10000986:	4b04      	ldr	r3, [pc, #16]	; (10000998 <SystemInit+0x24>)
10000988:	4a04      	ldr	r2, [pc, #16]	; (1000099c <SystemInit+0x28>)
1000098a:	601a      	str	r2, [r3, #0]
}
1000098c:	4770      	bx	lr
1000098e:	bf00      	nop
10000990:	e000ed00 	and	lr, r0, r0, lsl #26
10000994:	10000000 	andne	r0, r0, r0
10000998:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
1000099c:	017d7840 	cmneq	sp, r0, asr #16

100009a0 <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
100009a0:	4770      	bx	lr

100009a2 <_atoi>:
}


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
100009a2:	4601      	mov	r1, r0
  unsigned int i = 0U;
100009a4:	2000      	movs	r0, #0
  while (_is_digit(**str)) {
100009a6:	e007      	b.n	100009b8 <_atoi+0x16>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
100009a8:	eb00 0080 	add.w	r0, r0, r0, lsl #2
100009ac:	1c53      	adds	r3, r2, #1
100009ae:	600b      	str	r3, [r1, #0]
100009b0:	7813      	ldrb	r3, [r2, #0]
100009b2:	eb03 0040 	add.w	r0, r3, r0, lsl #1
100009b6:	3830      	subs	r0, #48	; 0x30
  while (_is_digit(**str)) {
100009b8:	680a      	ldr	r2, [r1, #0]
100009ba:	7813      	ldrb	r3, [r2, #0]
  return (ch >= '0') && (ch <= '9');
100009bc:	3b30      	subs	r3, #48	; 0x30
100009be:	b2db      	uxtb	r3, r3
  while (_is_digit(**str)) {
100009c0:	2b09      	cmp	r3, #9
100009c2:	d9f1      	bls.n	100009a8 <_atoi+0x6>
  }
  return i;
}
100009c4:	4770      	bx	lr

100009c6 <_out_rev>:


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
100009c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100009ca:	b083      	sub	sp, #12
100009cc:	4605      	mov	r5, r0
100009ce:	460e      	mov	r6, r1
100009d0:	4693      	mov	fp, r2
100009d2:	461f      	mov	r7, r3
100009d4:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
100009d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
100009da:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
  const size_t start_idx = idx;

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
100009de:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100009e0:	f013 0f03 	tst.w	r3, #3
100009e4:	d119      	bne.n	10000a1a <_out_rev+0x54>
    for (size_t i = len; i < width; i++) {
100009e6:	46a0      	mov	r8, r4
100009e8:	9201      	str	r2, [sp, #4]
100009ea:	45c8      	cmp	r8, r9
100009ec:	d209      	bcs.n	10000a02 <_out_rev+0x3c>
      out(' ', buffer, idx++, maxlen);
100009ee:	f102 0b01 	add.w	fp, r2, #1
100009f2:	463b      	mov	r3, r7
100009f4:	4631      	mov	r1, r6
100009f6:	2020      	movs	r0, #32
100009f8:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
100009fa:	f108 0801 	add.w	r8, r8, #1
      out(' ', buffer, idx++, maxlen);
100009fe:	465a      	mov	r2, fp
10000a00:	e7f3      	b.n	100009ea <_out_rev+0x24>
10000a02:	f8dd b004 	ldr.w	fp, [sp, #4]
10000a06:	e008      	b.n	10000a1a <_out_rev+0x54>
    }
  }

  // reverse string
  while (len) {
    out(buf[--len], buffer, idx++, maxlen);
10000a08:	3c01      	subs	r4, #1
10000a0a:	f102 0801 	add.w	r8, r2, #1
10000a0e:	463b      	mov	r3, r7
10000a10:	4631      	mov	r1, r6
10000a12:	f81a 0004 	ldrb.w	r0, [sl, r4]
10000a16:	47a8      	blx	r5
10000a18:	4642      	mov	r2, r8
  while (len) {
10000a1a:	2c00      	cmp	r4, #0
10000a1c:	d1f4      	bne.n	10000a08 <_out_rev+0x42>
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
10000a1e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000a20:	f013 0f02 	tst.w	r3, #2
10000a24:	d103      	bne.n	10000a2e <_out_rev+0x68>
      out(' ', buffer, idx++, maxlen);
    }
  }

  return idx;
}
10000a26:	4610      	mov	r0, r2
10000a28:	b003      	add	sp, #12
10000a2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while (idx - start_idx < width) {
10000a2e:	eba2 030b 	sub.w	r3, r2, fp
10000a32:	454b      	cmp	r3, r9
10000a34:	d2f7      	bcs.n	10000a26 <_out_rev+0x60>
      out(' ', buffer, idx++, maxlen);
10000a36:	1c54      	adds	r4, r2, #1
10000a38:	463b      	mov	r3, r7
10000a3a:	4631      	mov	r1, r6
10000a3c:	2020      	movs	r0, #32
10000a3e:	47a8      	blx	r5
10000a40:	4622      	mov	r2, r4
10000a42:	e7f4      	b.n	10000a2e <_out_rev+0x68>

10000a44 <_ntoa_format>:


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000a44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10000a48:	b085      	sub	sp, #20
10000a4a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
10000a4c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
10000a4e:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
10000a52:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
10000a56:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10000a5a:	9f11      	ldr	r7, [sp, #68]	; 0x44
10000a5c:	9e12      	ldr	r6, [sp, #72]	; 0x48
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
10000a5e:	f016 0f02 	tst.w	r6, #2
10000a62:	d121      	bne.n	10000aa8 <_ntoa_format+0x64>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
10000a64:	b17f      	cbz	r7, 10000a86 <_ntoa_format+0x42>
10000a66:	f016 0f01 	tst.w	r6, #1
10000a6a:	d00c      	beq.n	10000a86 <_ntoa_format+0x42>
10000a6c:	f1b9 0f00 	cmp.w	r9, #0
10000a70:	d102      	bne.n	10000a78 <_ntoa_format+0x34>
10000a72:	f016 0f0c 	tst.w	r6, #12
10000a76:	d006      	beq.n	10000a86 <_ntoa_format+0x42>
      width--;
10000a78:	3f01      	subs	r7, #1
10000a7a:	e004      	b.n	10000a86 <_ntoa_format+0x42>
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = '0';
10000a7c:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000a80:	f805 c004 	strb.w	ip, [r5, r4]
10000a84:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a86:	4574      	cmp	r4, lr
10000a88:	d201      	bcs.n	10000a8e <_ntoa_format+0x4a>
10000a8a:	2c1f      	cmp	r4, #31
10000a8c:	d9f6      	bls.n	10000a7c <_ntoa_format+0x38>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a8e:	f016 0f01 	tst.w	r6, #1
10000a92:	d009      	beq.n	10000aa8 <_ntoa_format+0x64>
10000a94:	42bc      	cmp	r4, r7
10000a96:	d207      	bcs.n	10000aa8 <_ntoa_format+0x64>
10000a98:	2c1f      	cmp	r4, #31
10000a9a:	d805      	bhi.n	10000aa8 <_ntoa_format+0x64>
      buf[len++] = '0';
10000a9c:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000aa0:	f805 c004 	strb.w	ip, [r5, r4]
10000aa4:	3401      	adds	r4, #1
10000aa6:	e7f2      	b.n	10000a8e <_ntoa_format+0x4a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
10000aa8:	f016 0f10 	tst.w	r6, #16
10000aac:	d017      	beq.n	10000ade <_ntoa_format+0x9a>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
10000aae:	f416 6f80 	tst.w	r6, #1024	; 0x400
10000ab2:	d104      	bne.n	10000abe <_ntoa_format+0x7a>
10000ab4:	b11c      	cbz	r4, 10000abe <_ntoa_format+0x7a>
10000ab6:	4574      	cmp	r4, lr
10000ab8:	d024      	beq.n	10000b04 <_ntoa_format+0xc0>
10000aba:	42bc      	cmp	r4, r7
10000abc:	d022      	beq.n	10000b04 <_ntoa_format+0xc0>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000abe:	f1b8 0f10 	cmp.w	r8, #16
10000ac2:	d02b      	beq.n	10000b1c <_ntoa_format+0xd8>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000ac4:	f1b8 0f10 	cmp.w	r8, #16
10000ac8:	d033      	beq.n	10000b32 <_ntoa_format+0xee>
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000aca:	f1b8 0f02 	cmp.w	r8, #2
10000ace:	d03b      	beq.n	10000b48 <_ntoa_format+0x104>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000ad0:	2c1f      	cmp	r4, #31
10000ad2:	d804      	bhi.n	10000ade <_ntoa_format+0x9a>
      buf[len++] = '0';
10000ad4:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000ad8:	f805 c004 	strb.w	ip, [r5, r4]
10000adc:	3401      	adds	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000ade:	2c1f      	cmp	r4, #31
10000ae0:	d807      	bhi.n	10000af2 <_ntoa_format+0xae>
    if (negative) {
10000ae2:	f1b9 0f00 	cmp.w	r9, #0
10000ae6:	d037      	beq.n	10000b58 <_ntoa_format+0x114>
      buf[len++] = '-';
10000ae8:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
10000aec:	f805 c004 	strb.w	ip, [r5, r4]
10000af0:	3401      	adds	r4, #1
    else if (flags & FLAGS_SPACE) {
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10000af2:	9603      	str	r6, [sp, #12]
10000af4:	9702      	str	r7, [sp, #8]
10000af6:	9401      	str	r4, [sp, #4]
10000af8:	9500      	str	r5, [sp, #0]
10000afa:	f7ff ff64 	bl	100009c6 <_out_rev>
}
10000afe:	b005      	add	sp, #20
10000b00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      if (len && (base == 16U)) {
10000b04:	f1b4 0c01 	subs.w	ip, r4, #1
10000b08:	d006      	beq.n	10000b18 <_ntoa_format+0xd4>
10000b0a:	f1b8 0f10 	cmp.w	r8, #16
10000b0e:	d001      	beq.n	10000b14 <_ntoa_format+0xd0>
      len--;
10000b10:	4664      	mov	r4, ip
10000b12:	e7d4      	b.n	10000abe <_ntoa_format+0x7a>
        len--;
10000b14:	3c02      	subs	r4, #2
10000b16:	e7d2      	b.n	10000abe <_ntoa_format+0x7a>
      len--;
10000b18:	4664      	mov	r4, ip
10000b1a:	e7d0      	b.n	10000abe <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b1c:	f016 0f20 	tst.w	r6, #32
10000b20:	d1d0      	bne.n	10000ac4 <_ntoa_format+0x80>
10000b22:	2c1f      	cmp	r4, #31
10000b24:	d8ce      	bhi.n	10000ac4 <_ntoa_format+0x80>
      buf[len++] = 'x';
10000b26:	f04f 0c78 	mov.w	ip, #120	; 0x78
10000b2a:	f805 c004 	strb.w	ip, [r5, r4]
10000b2e:	3401      	adds	r4, #1
10000b30:	e7ce      	b.n	10000ad0 <_ntoa_format+0x8c>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b32:	f016 0f20 	tst.w	r6, #32
10000b36:	d0c8      	beq.n	10000aca <_ntoa_format+0x86>
10000b38:	2c1f      	cmp	r4, #31
10000b3a:	d8c6      	bhi.n	10000aca <_ntoa_format+0x86>
      buf[len++] = 'X';
10000b3c:	f04f 0c58 	mov.w	ip, #88	; 0x58
10000b40:	f805 c004 	strb.w	ip, [r5, r4]
10000b44:	3401      	adds	r4, #1
10000b46:	e7c3      	b.n	10000ad0 <_ntoa_format+0x8c>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000b48:	2c1f      	cmp	r4, #31
10000b4a:	d8c1      	bhi.n	10000ad0 <_ntoa_format+0x8c>
      buf[len++] = 'b';
10000b4c:	f04f 0c62 	mov.w	ip, #98	; 0x62
10000b50:	f805 c004 	strb.w	ip, [r5, r4]
10000b54:	3401      	adds	r4, #1
10000b56:	e7bb      	b.n	10000ad0 <_ntoa_format+0x8c>
    else if (flags & FLAGS_PLUS) {
10000b58:	f016 0f04 	tst.w	r6, #4
10000b5c:	d005      	beq.n	10000b6a <_ntoa_format+0x126>
      buf[len++] = '+';  // ignore the space if the '+' exists
10000b5e:	f04f 0c2b 	mov.w	ip, #43	; 0x2b
10000b62:	f805 c004 	strb.w	ip, [r5, r4]
10000b66:	3401      	adds	r4, #1
10000b68:	e7c3      	b.n	10000af2 <_ntoa_format+0xae>
    else if (flags & FLAGS_SPACE) {
10000b6a:	f016 0f08 	tst.w	r6, #8
10000b6e:	d0c0      	beq.n	10000af2 <_ntoa_format+0xae>
      buf[len++] = ' ';
10000b70:	f04f 0c20 	mov.w	ip, #32
10000b74:	f805 c004 	strb.w	ip, [r5, r4]
10000b78:	3401      	adds	r4, #1
10000b7a:	e7ba      	b.n	10000af2 <_ntoa_format+0xae>

10000b7c <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000b7c:	b5f0      	push	{r4, r5, r6, r7, lr}
10000b7e:	b091      	sub	sp, #68	; 0x44
10000b80:	9c16      	ldr	r4, [sp, #88]	; 0x58
10000b82:	9d18      	ldr	r5, [sp, #96]	; 0x60
10000b84:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000b86:	b90c      	cbnz	r4, 10000b8c <_ntoa_long+0x10>
    flags &= ~FLAGS_HASH;
10000b88:	f026 0610 	bic.w	r6, r6, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000b8c:	f416 6e80 	ands.w	lr, r6, #1024	; 0x400
10000b90:	d016      	beq.n	10000bc0 <_ntoa_long+0x44>
10000b92:	b364      	cbz	r4, 10000bee <_ntoa_long+0x72>
10000b94:	f04f 0e00 	mov.w	lr, #0
10000b98:	e012      	b.n	10000bc0 <_ntoa_long+0x44>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b9a:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
10000b9e:	fa5f fc8c 	uxtb.w	ip, ip
10000ba2:	f10e 0701 	add.w	r7, lr, #1
10000ba6:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
10000baa:	44ee      	add	lr, sp
10000bac:	f80e cc20 	strb.w	ip, [lr, #-32]
      value /= base;
10000bb0:	fbb4 fcf5 	udiv	ip, r4, r5
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000bb4:	42ac      	cmp	r4, r5
10000bb6:	d31b      	bcc.n	10000bf0 <_ntoa_long+0x74>
10000bb8:	2f1f      	cmp	r7, #31
10000bba:	d819      	bhi.n	10000bf0 <_ntoa_long+0x74>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000bbc:	46be      	mov	lr, r7
      value /= base;
10000bbe:	4664      	mov	r4, ip
      const char digit = (char)(value % base);
10000bc0:	fbb4 fcf5 	udiv	ip, r4, r5
10000bc4:	fb05 4c1c 	mls	ip, r5, ip, r4
10000bc8:	fa5f fc8c 	uxtb.w	ip, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000bcc:	f1bc 0f09 	cmp.w	ip, #9
10000bd0:	d9e3      	bls.n	10000b9a <_ntoa_long+0x1e>
10000bd2:	f016 0f20 	tst.w	r6, #32
10000bd6:	d008      	beq.n	10000bea <_ntoa_long+0x6e>
10000bd8:	2741      	movs	r7, #65	; 0x41
10000bda:	44bc      	add	ip, r7
10000bdc:	fa5f fc8c 	uxtb.w	ip, ip
10000be0:	f1ac 0c0a 	sub.w	ip, ip, #10
10000be4:	fa5f fc8c 	uxtb.w	ip, ip
10000be8:	e7db      	b.n	10000ba2 <_ntoa_long+0x26>
10000bea:	2761      	movs	r7, #97	; 0x61
10000bec:	e7f5      	b.n	10000bda <_ntoa_long+0x5e>
  size_t len = 0U;
10000bee:	4627      	mov	r7, r4
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000bf0:	9606      	str	r6, [sp, #24]
10000bf2:	9c1a      	ldr	r4, [sp, #104]	; 0x68
10000bf4:	9405      	str	r4, [sp, #20]
10000bf6:	9c19      	ldr	r4, [sp, #100]	; 0x64
10000bf8:	9404      	str	r4, [sp, #16]
10000bfa:	9503      	str	r5, [sp, #12]
10000bfc:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
10000c00:	9402      	str	r4, [sp, #8]
10000c02:	9701      	str	r7, [sp, #4]
10000c04:	ac08      	add	r4, sp, #32
10000c06:	9400      	str	r4, [sp, #0]
10000c08:	f7ff ff1c 	bl	10000a44 <_ntoa_format>
}
10000c0c:	b011      	add	sp, #68	; 0x44
10000c0e:	bdf0      	pop	{r4, r5, r6, r7, pc}

10000c10 <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000c10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000c14:	b095      	sub	sp, #84	; 0x54
10000c16:	9009      	str	r0, [sp, #36]	; 0x24
10000c18:	910a      	str	r1, [sp, #40]	; 0x28
10000c1a:	920b      	str	r2, [sp, #44]	; 0x2c
10000c1c:	469b      	mov	fp, r3
10000c1e:	9d1e      	ldr	r5, [sp, #120]	; 0x78
10000c20:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
10000c22:	9f22      	ldr	r7, [sp, #136]	; 0x88
10000c24:	f8dd 808c 	ldr.w	r8, [sp, #140]	; 0x8c
10000c28:	f8dd a098 	ldr.w	sl, [sp, #152]	; 0x98
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000c2c:	ea55 0306 	orrs.w	r3, r5, r6
10000c30:	d101      	bne.n	10000c36 <_ntoa_long_long+0x26>
    flags &= ~FLAGS_HASH;
10000c32:	f02a 0a10 	bic.w	sl, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000c36:	f41a 6480 	ands.w	r4, sl, #1024	; 0x400
10000c3a:	d01f      	beq.n	10000c7c <_ntoa_long_long+0x6c>
10000c3c:	ea55 0306 	orrs.w	r3, r5, r6
10000c40:	d030      	beq.n	10000ca4 <_ntoa_long_long+0x94>
10000c42:	2400      	movs	r4, #0
10000c44:	e01a      	b.n	10000c7c <_ntoa_long_long+0x6c>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000c46:	f103 0230 	add.w	r2, r3, #48	; 0x30
10000c4a:	b2d2      	uxtb	r2, r2
10000c4c:	f104 0901 	add.w	r9, r4, #1
10000c50:	f104 0350 	add.w	r3, r4, #80	; 0x50
10000c54:	eb0d 0403 	add.w	r4, sp, r3
10000c58:	f804 2c20 	strb.w	r2, [r4, #-32]
      value /= base;
10000c5c:	463a      	mov	r2, r7
10000c5e:	4643      	mov	r3, r8
10000c60:	4628      	mov	r0, r5
10000c62:	4631      	mov	r1, r6
10000c64:	f001 fde2 	bl	1000282c <__aeabi_uldivmod>
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000c68:	42bd      	cmp	r5, r7
10000c6a:	eb76 0308 	sbcs.w	r3, r6, r8
10000c6e:	d31b      	bcc.n	10000ca8 <_ntoa_long_long+0x98>
10000c70:	f1b9 0f1f 	cmp.w	r9, #31
10000c74:	d818      	bhi.n	10000ca8 <_ntoa_long_long+0x98>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000c76:	464c      	mov	r4, r9
      value /= base;
10000c78:	4605      	mov	r5, r0
10000c7a:	460e      	mov	r6, r1
      const char digit = (char)(value % base);
10000c7c:	463a      	mov	r2, r7
10000c7e:	4643      	mov	r3, r8
10000c80:	4628      	mov	r0, r5
10000c82:	4631      	mov	r1, r6
10000c84:	f001 fdd2 	bl	1000282c <__aeabi_uldivmod>
10000c88:	b2d3      	uxtb	r3, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000c8a:	2b09      	cmp	r3, #9
10000c8c:	d9db      	bls.n	10000c46 <_ntoa_long_long+0x36>
10000c8e:	f01a 0f20 	tst.w	sl, #32
10000c92:	d005      	beq.n	10000ca0 <_ntoa_long_long+0x90>
10000c94:	2241      	movs	r2, #65	; 0x41
10000c96:	441a      	add	r2, r3
10000c98:	b2d2      	uxtb	r2, r2
10000c9a:	3a0a      	subs	r2, #10
10000c9c:	b2d2      	uxtb	r2, r2
10000c9e:	e7d5      	b.n	10000c4c <_ntoa_long_long+0x3c>
10000ca0:	2261      	movs	r2, #97	; 0x61
10000ca2:	e7f8      	b.n	10000c96 <_ntoa_long_long+0x86>
  size_t len = 0U;
10000ca4:	f04f 0900 	mov.w	r9, #0
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000ca8:	f8cd a018 	str.w	sl, [sp, #24]
10000cac:	9b25      	ldr	r3, [sp, #148]	; 0x94
10000cae:	9305      	str	r3, [sp, #20]
10000cb0:	9b24      	ldr	r3, [sp, #144]	; 0x90
10000cb2:	9304      	str	r3, [sp, #16]
10000cb4:	9703      	str	r7, [sp, #12]
10000cb6:	f89d 3080 	ldrb.w	r3, [sp, #128]	; 0x80
10000cba:	9302      	str	r3, [sp, #8]
10000cbc:	f8cd 9004 	str.w	r9, [sp, #4]
10000cc0:	ab0c      	add	r3, sp, #48	; 0x30
10000cc2:	9300      	str	r3, [sp, #0]
10000cc4:	465b      	mov	r3, fp
10000cc6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10000cc8:	990a      	ldr	r1, [sp, #40]	; 0x28
10000cca:	9809      	ldr	r0, [sp, #36]	; 0x24
10000ccc:	f7ff feba 	bl	10000a44 <_ntoa_format>
}
10000cd0:	b015      	add	sp, #84	; 0x54
10000cd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

10000cd8 <_etoa>:


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
10000cd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000cdc:	ed2d 8b02 	vpush	{d8}
10000ce0:	b091      	sub	sp, #68	; 0x44
10000ce2:	4682      	mov	sl, r0
10000ce4:	460c      	mov	r4, r1
10000ce6:	4693      	mov	fp, r2
10000ce8:	461d      	mov	r5, r3
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
10000cea:	e9dd 231c 	ldrd	r2, r3, [sp, #112]	; 0x70
10000cee:	4610      	mov	r0, r2
10000cf0:	4619      	mov	r1, r3
10000cf2:	f001 fd21 	bl	10002738 <__aeabi_dcmpeq>
10000cf6:	2800      	cmp	r0, #0
10000cf8:	f000 8107 	beq.w	10000f0a <_etoa+0x232>
10000cfc:	f04f 32ff 	mov.w	r2, #4294967295
10000d00:	4bb1      	ldr	r3, [pc, #708]	; (10000fc8 <_etoa+0x2f0>)
10000d02:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d06:	f001 fd3f 	bl	10002788 <__aeabi_dcmpgt>
10000d0a:	2800      	cmp	r0, #0
10000d0c:	f040 80fd 	bne.w	10000f0a <_etoa+0x232>
10000d10:	f04f 32ff 	mov.w	r2, #4294967295
10000d14:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10000d18:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d1c:	f001 fd16 	bl	1000274c <__aeabi_dcmplt>
10000d20:	2800      	cmp	r0, #0
10000d22:	f040 80f2 	bne.w	10000f0a <_etoa+0x232>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
  }

  // determine the sign
  const bool negative = value < 0;
  if (negative) {
10000d26:	2200      	movs	r2, #0
10000d28:	2300      	movs	r3, #0
10000d2a:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000d2e:	f001 fd0d 	bl	1000274c <__aeabi_dcmplt>
10000d32:	2800      	cmp	r0, #0
10000d34:	f040 80fe 	bne.w	10000f34 <_etoa+0x25c>
10000d38:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000d3c:	ed8d 7b06 	vstr	d7, [sp, #24]
    value = -value;
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
10000d40:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000d42:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
10000d46:	930f      	str	r3, [sp, #60]	; 0x3c
10000d48:	d101      	bne.n	10000d4e <_etoa+0x76>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10000d4a:	2306      	movs	r3, #6
10000d4c:	931e      	str	r3, [sp, #120]	; 0x78
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
10000d4e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000d52:	4602      	mov	r2, r0
10000d54:	f3c1 500a 	ubfx	r0, r1, #20, #11
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
10000d58:	f3c1 0313 	ubfx	r3, r1, #0, #20
10000d5c:	4690      	mov	r8, r2
10000d5e:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
10000d62:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
10000d66:	f2a0 30ff 	subw	r0, r0, #1023	; 0x3ff
10000d6a:	f001 fa13 	bl	10002194 <__aeabi_i2d>
10000d6e:	a384      	add	r3, pc, #528	; (adr r3, 10000f80 <_etoa+0x2a8>)
10000d70:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d74:	f001 fa78 	bl	10002268 <__aeabi_dmul>
10000d78:	a383      	add	r3, pc, #524	; (adr r3, 10000f88 <_etoa+0x2b0>)
10000d7a:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d7e:	f001 f8bd 	bl	10001efc <__adddf3>
10000d82:	4606      	mov	r6, r0
10000d84:	460f      	mov	r7, r1
10000d86:	2200      	movs	r2, #0
10000d88:	4b90      	ldr	r3, [pc, #576]	; (10000fcc <_etoa+0x2f4>)
10000d8a:	4640      	mov	r0, r8
10000d8c:	4649      	mov	r1, r9
10000d8e:	f001 f8b3 	bl	10001ef8 <__aeabi_dsub>
10000d92:	a37f      	add	r3, pc, #508	; (adr r3, 10000f90 <_etoa+0x2b8>)
10000d94:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d98:	f001 fa66 	bl	10002268 <__aeabi_dmul>
10000d9c:	4602      	mov	r2, r0
10000d9e:	460b      	mov	r3, r1
10000da0:	4630      	mov	r0, r6
10000da2:	4639      	mov	r1, r7
10000da4:	f001 f8aa 	bl	10001efc <__adddf3>
10000da8:	f001 fcf8 	bl	1000279c <__aeabi_d2iz>
10000dac:	4606      	mov	r6, r0
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
10000dae:	f001 f9f1 	bl	10002194 <__aeabi_i2d>
10000db2:	4680      	mov	r8, r0
10000db4:	4689      	mov	r9, r1
10000db6:	a378      	add	r3, pc, #480	; (adr r3, 10000f98 <_etoa+0x2c0>)
10000db8:	e9d3 2300 	ldrd	r2, r3, [r3]
10000dbc:	f001 fa54 	bl	10002268 <__aeabi_dmul>
10000dc0:	2200      	movs	r2, #0
10000dc2:	4b83      	ldr	r3, [pc, #524]	; (10000fd0 <_etoa+0x2f8>)
10000dc4:	f001 f89a 	bl	10001efc <__adddf3>
10000dc8:	f001 fce8 	bl	1000279c <__aeabi_d2iz>
10000dcc:	4607      	mov	r7, r0
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
10000dce:	a374      	add	r3, pc, #464	; (adr r3, 10000fa0 <_etoa+0x2c8>)
10000dd0:	e9d3 2300 	ldrd	r2, r3, [r3]
10000dd4:	4640      	mov	r0, r8
10000dd6:	4649      	mov	r1, r9
10000dd8:	f001 fa46 	bl	10002268 <__aeabi_dmul>
10000ddc:	4680      	mov	r8, r0
10000dde:	4689      	mov	r9, r1
10000de0:	4638      	mov	r0, r7
10000de2:	f001 f9d7 	bl	10002194 <__aeabi_i2d>
10000de6:	a370      	add	r3, pc, #448	; (adr r3, 10000fa8 <_etoa+0x2d0>)
10000de8:	e9d3 2300 	ldrd	r2, r3, [r3]
10000dec:	f001 fa3c 	bl	10002268 <__aeabi_dmul>
10000df0:	4602      	mov	r2, r0
10000df2:	460b      	mov	r3, r1
10000df4:	4640      	mov	r0, r8
10000df6:	4649      	mov	r1, r9
10000df8:	f001 f87e 	bl	10001ef8 <__aeabi_dsub>
10000dfc:	4680      	mov	r8, r0
10000dfe:	4689      	mov	r9, r1
  const double z2 = z * z;
10000e00:	4602      	mov	r2, r0
10000e02:	460b      	mov	r3, r1
10000e04:	f001 fa30 	bl	10002268 <__aeabi_dmul>
10000e08:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
10000e0c:	f207 37ff 	addw	r7, r7, #1023	; 0x3ff
10000e10:	2100      	movs	r1, #0
10000e12:	2200      	movs	r2, #0
10000e14:	e9cd 1208 	strd	r1, r2, [sp, #32]
10000e18:	053b      	lsls	r3, r7, #20
10000e1a:	9309      	str	r3, [sp, #36]	; 0x24
10000e1c:	2300      	movs	r3, #0
10000e1e:	9308      	str	r3, [sp, #32]
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
10000e20:	4642      	mov	r2, r8
10000e22:	464b      	mov	r3, r9
10000e24:	4640      	mov	r0, r8
10000e26:	4649      	mov	r1, r9
10000e28:	f001 f868 	bl	10001efc <__adddf3>
10000e2c:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
10000e30:	4642      	mov	r2, r8
10000e32:	464b      	mov	r3, r9
10000e34:	2000      	movs	r0, #0
10000e36:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
10000e3a:	f001 f85d 	bl	10001ef8 <__aeabi_dsub>
10000e3e:	4680      	mov	r8, r0
10000e40:	4689      	mov	r9, r1
10000e42:	2200      	movs	r2, #0
10000e44:	4b63      	ldr	r3, [pc, #396]	; (10000fd4 <_etoa+0x2fc>)
10000e46:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e4a:	f001 fb37 	bl	100024bc <__aeabi_ddiv>
10000e4e:	2200      	movs	r2, #0
10000e50:	4b61      	ldr	r3, [pc, #388]	; (10000fd8 <_etoa+0x300>)
10000e52:	f001 f853 	bl	10001efc <__adddf3>
10000e56:	4602      	mov	r2, r0
10000e58:	460b      	mov	r3, r1
10000e5a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e5e:	f001 fb2d 	bl	100024bc <__aeabi_ddiv>
10000e62:	2200      	movs	r2, #0
10000e64:	4b5d      	ldr	r3, [pc, #372]	; (10000fdc <_etoa+0x304>)
10000e66:	f001 f849 	bl	10001efc <__adddf3>
10000e6a:	4602      	mov	r2, r0
10000e6c:	460b      	mov	r3, r1
10000e6e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e72:	f001 fb23 	bl	100024bc <__aeabi_ddiv>
10000e76:	4602      	mov	r2, r0
10000e78:	460b      	mov	r3, r1
10000e7a:	4640      	mov	r0, r8
10000e7c:	4649      	mov	r1, r9
10000e7e:	f001 f83d 	bl	10001efc <__adddf3>
10000e82:	4602      	mov	r2, r0
10000e84:	460b      	mov	r3, r1
10000e86:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
10000e8a:	f001 fb17 	bl	100024bc <__aeabi_ddiv>
10000e8e:	2200      	movs	r2, #0
10000e90:	4b53      	ldr	r3, [pc, #332]	; (10000fe0 <_etoa+0x308>)
10000e92:	f001 f833 	bl	10001efc <__adddf3>
10000e96:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10000e9a:	f001 f9e5 	bl	10002268 <__aeabi_dmul>
10000e9e:	4680      	mov	r8, r0
10000ea0:	4689      	mov	r9, r1
10000ea2:	ec49 8b18 	vmov	d8, r8, r9
  // correct for rounding errors
  if (value < conv.F) {
10000ea6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
10000eaa:	f001 fc6d 	bl	10002788 <__aeabi_dcmpgt>
10000eae:	b140      	cbz	r0, 10000ec2 <_etoa+0x1ea>
    expval--;
10000eb0:	3e01      	subs	r6, #1
    conv.F /= 10;
10000eb2:	2200      	movs	r2, #0
10000eb4:	4b48      	ldr	r3, [pc, #288]	; (10000fd8 <_etoa+0x300>)
10000eb6:	4640      	mov	r0, r8
10000eb8:	4649      	mov	r1, r9
10000eba:	f001 faff 	bl	100024bc <__aeabi_ddiv>
10000ebe:	ec41 0b18 	vmov	d8, r0, r1
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000ec2:	f106 0363 	add.w	r3, r6, #99	; 0x63
10000ec6:	2bc6      	cmp	r3, #198	; 0xc6
10000ec8:	d83f      	bhi.n	10000f4a <_etoa+0x272>
10000eca:	2704      	movs	r7, #4

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
10000ecc:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000ece:	f413 6f00 	tst.w	r3, #2048	; 0x800
10000ed2:	d044      	beq.n	10000f5e <_etoa+0x286>
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
10000ed4:	a336      	add	r3, pc, #216	; (adr r3, 10000fb0 <_etoa+0x2d8>)
10000ed6:	e9d3 2300 	ldrd	r2, r3, [r3]
10000eda:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10000ede:	4640      	mov	r0, r8
10000ee0:	4649      	mov	r1, r9
10000ee2:	f001 fc47 	bl	10002774 <__aeabi_dcmpge>
10000ee6:	2800      	cmp	r0, #0
10000ee8:	d03f      	beq.n	10000f6a <_etoa+0x292>
10000eea:	a333      	add	r3, pc, #204	; (adr r3, 10000fb8 <_etoa+0x2e0>)
10000eec:	e9d3 2300 	ldrd	r2, r3, [r3]
10000ef0:	4640      	mov	r0, r8
10000ef2:	4649      	mov	r1, r9
10000ef4:	f001 fc2a 	bl	1000274c <__aeabi_dcmplt>
10000ef8:	2800      	cmp	r0, #0
10000efa:	d036      	beq.n	10000f6a <_etoa+0x292>
      if ((int)prec > expval) {
10000efc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000efe:	42b3      	cmp	r3, r6
10000f00:	dd25      	ble.n	10000f4e <_etoa+0x276>
        prec = (unsigned)((int)prec - expval - 1);
10000f02:	1b9e      	subs	r6, r3, r6
10000f04:	1e73      	subs	r3, r6, #1
10000f06:	931e      	str	r3, [sp, #120]	; 0x78
10000f08:	e023      	b.n	10000f52 <_etoa+0x27a>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
10000f0a:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f0c:	9304      	str	r3, [sp, #16]
10000f0e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000f10:	9303      	str	r3, [sp, #12]
10000f12:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f14:	9302      	str	r3, [sp, #8]
10000f16:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000f1a:	ed8d 7b00 	vstr	d7, [sp]
10000f1e:	462b      	mov	r3, r5
10000f20:	465a      	mov	r2, fp
10000f22:	4621      	mov	r1, r4
10000f24:	4650      	mov	r0, sl
10000f26:	f000 f8cf 	bl	100010c8 <_ftoa>
    if (flags & FLAGS_LEFT) {
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
    }
  }
  return idx;
}
10000f2a:	b011      	add	sp, #68	; 0x44
10000f2c:	ecbd 8b02 	vpop	{d8}
10000f30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    value = -value;
10000f34:	ed9f 7b22 	vldr	d7, [pc, #136]	; 10000fc0 <_etoa+0x2e8>
10000f38:	ed8d 7b06 	vstr	d7, [sp, #24]
10000f3c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
10000f3e:	9306      	str	r3, [sp, #24]
10000f40:	9b1d      	ldr	r3, [sp, #116]	; 0x74
10000f42:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
10000f46:	9307      	str	r3, [sp, #28]
10000f48:	e6fa      	b.n	10000d40 <_etoa+0x68>
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000f4a:	2705      	movs	r7, #5
10000f4c:	e7be      	b.n	10000ecc <_etoa+0x1f4>
        prec = 0;
10000f4e:	2300      	movs	r3, #0
10000f50:	931e      	str	r3, [sp, #120]	; 0x78
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
10000f52:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f54:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
10000f58:	9320      	str	r3, [sp, #128]	; 0x80
      minwidth = 0U;
10000f5a:	2700      	movs	r7, #0
      expval   = 0;
10000f5c:	463e      	mov	r6, r7
  if (width > minwidth) {
10000f5e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000f60:	429f      	cmp	r7, r3
10000f62:	d23f      	bcs.n	10000fe4 <_etoa+0x30c>
    fwidth -= minwidth;
10000f64:	eba3 0807 	sub.w	r8, r3, r7
10000f68:	e03e      	b.n	10000fe8 <_etoa+0x310>
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
10000f6a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f6c:	2b00      	cmp	r3, #0
10000f6e:	d0f6      	beq.n	10000f5e <_etoa+0x286>
10000f70:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000f72:	2b00      	cmp	r3, #0
10000f74:	d0f3      	beq.n	10000f5e <_etoa+0x286>
        --prec;
10000f76:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f78:	3b01      	subs	r3, #1
10000f7a:	931e      	str	r3, [sp, #120]	; 0x78
10000f7c:	e7ef      	b.n	10000f5e <_etoa+0x286>
10000f7e:	bf00      	nop
10000f80:	509f79fb 			; <UNDEFINED> instruction: 0x509f79fb
10000f84:	3fd34413 	svccc	0x00d34413
10000f88:	8b60c8b3 	blhi	1183325c <__copy_table_end__+0x182f054>
10000f8c:	3fc68a28 	svccc	0x00c68a28
10000f90:	636f4361 	cmnvs	pc, #-2080374783	; 0x84000001
10000f94:	3fd287a7 	svccc	0x00d287a7
10000f98:	0979a371 	ldmdbeq	r9!, {r0, r4, r5, r6, r8, r9, sp, pc}^
10000f9c:	400a934f 	andmi	r9, sl, pc, asr #6
10000fa0:	bbb55516 	bllt	ed56400 <__RAM_SIZE+0xec56400>
10000fa4:	40026bb1 			; <UNDEFINED> instruction: 0x40026bb1
10000fa8:	fefa39ef 			; <UNDEFINED> instruction: 0xfefa39ef
10000fac:	3fe62e42 	svccc	0x00e62e42
10000fb0:	eb1c432d 	bl	10711c6c <__copy_table_end__+0x70da64>
10000fb4:	3f1a36e2 	svccc	0x001a36e2
10000fb8:	00000000 	andeq	r0, r0, r0
10000fbc:	412e8480 	smlawbmi	lr, r0, r4, r8
	...
10000fc8:	7fefffff 	svcvc	0x00efffff
10000fcc:	3ff80000 	svccc	0x00f80000
10000fd0:	3fe00000 	svccc	0x00e00000
10000fd4:	402c0000 	eormi	r0, ip, r0
10000fd8:	40240000 	eormi	r0, r4, r0
10000fdc:	40180000 	andsmi	r0, r8, r0
10000fe0:	3ff00000 	svccc	0x00f00000	; IMB
    fwidth = 0U;
10000fe4:	f04f 0800 	mov.w	r8, #0
  if ((flags & FLAGS_LEFT) && minwidth) {
10000fe8:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000fea:	f013 0902 	ands.w	r9, r3, #2
10000fee:	d002      	beq.n	10000ff6 <_etoa+0x31e>
10000ff0:	b10f      	cbz	r7, 10000ff6 <_etoa+0x31e>
    fwidth = 0U;
10000ff2:	f04f 0800 	mov.w	r8, #0
  if (expval) {
10000ff6:	b13e      	cbz	r6, 10001008 <_etoa+0x330>
    value /= conv.F;
10000ff8:	ec53 2b18 	vmov	r2, r3, d8
10000ffc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10001000:	f001 fa5c 	bl	100024bc <__aeabi_ddiv>
10001004:	e9cd 0106 	strd	r0, r1, [sp, #24]
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10001008:	2200      	movs	r2, #0
1000100a:	2300      	movs	r3, #0
1000100c:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10001010:	f001 fb9c 	bl	1000274c <__aeabi_dcmplt>
10001014:	2800      	cmp	r0, #0
10001016:	d13d      	bne.n	10001094 <_etoa+0x3bc>
10001018:	9b20      	ldr	r3, [sp, #128]	; 0x80
1000101a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
1000101e:	9304      	str	r3, [sp, #16]
10001020:	f8cd 800c 	str.w	r8, [sp, #12]
10001024:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10001026:	9302      	str	r3, [sp, #8]
10001028:	ed9d 7b06 	vldr	d7, [sp, #24]
1000102c:	ed8d 7b00 	vstr	d7, [sp]
10001030:	462b      	mov	r3, r5
10001032:	465a      	mov	r2, fp
10001034:	4621      	mov	r1, r4
10001036:	4650      	mov	r0, sl
10001038:	f000 f846 	bl	100010c8 <_ftoa>
  if (minwidth) {
1000103c:	2f00      	cmp	r7, #0
1000103e:	f43f af74 	beq.w	10000f2a <_etoa+0x252>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
10001042:	9b20      	ldr	r3, [sp, #128]	; 0x80
10001044:	f013 0f20 	tst.w	r3, #32
10001048:	d02c      	beq.n	100010a4 <_etoa+0x3cc>
1000104a:	f04f 0c45 	mov.w	ip, #69	; 0x45
1000104e:	f100 0801 	add.w	r8, r0, #1
10001052:	462b      	mov	r3, r5
10001054:	4602      	mov	r2, r0
10001056:	4621      	mov	r1, r4
10001058:	4660      	mov	r0, ip
1000105a:	47d0      	blx	sl
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
1000105c:	ea86 73e6 	eor.w	r3, r6, r6, asr #31
10001060:	eba3 73e6 	sub.w	r3, r3, r6, asr #31
10001064:	2205      	movs	r2, #5
10001066:	9205      	str	r2, [sp, #20]
10001068:	3f01      	subs	r7, #1
1000106a:	9704      	str	r7, [sp, #16]
1000106c:	2200      	movs	r2, #0
1000106e:	9203      	str	r2, [sp, #12]
10001070:	220a      	movs	r2, #10
10001072:	9202      	str	r2, [sp, #8]
10001074:	0ff0      	lsrs	r0, r6, #31
10001076:	9001      	str	r0, [sp, #4]
10001078:	9300      	str	r3, [sp, #0]
1000107a:	462b      	mov	r3, r5
1000107c:	4642      	mov	r2, r8
1000107e:	4621      	mov	r1, r4
10001080:	4650      	mov	r0, sl
10001082:	f7ff fd7b 	bl	10000b7c <_ntoa_long>
    if (flags & FLAGS_LEFT) {
10001086:	f1b9 0f00 	cmp.w	r9, #0
1000108a:	f43f af4e 	beq.w	10000f2a <_etoa+0x252>
1000108e:	4602      	mov	r2, r0
10001090:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
10001092:	e010      	b.n	100010b6 <_etoa+0x3de>
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10001094:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10001098:	4602      	mov	r2, r0
1000109a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
1000109e:	e9cd 2306 	strd	r2, r3, [sp, #24]
100010a2:	e7b9      	b.n	10001018 <_etoa+0x340>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
100010a4:	f04f 0c65 	mov.w	ip, #101	; 0x65
100010a8:	e7d1      	b.n	1000104e <_etoa+0x376>
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
100010aa:	1c56      	adds	r6, r2, #1
100010ac:	462b      	mov	r3, r5
100010ae:	4621      	mov	r1, r4
100010b0:	2020      	movs	r0, #32
100010b2:	47d0      	blx	sl
100010b4:	4632      	mov	r2, r6
100010b6:	eba2 030b 	sub.w	r3, r2, fp
100010ba:	42bb      	cmp	r3, r7
100010bc:	d3f5      	bcc.n	100010aa <_etoa+0x3d2>
100010be:	4610      	mov	r0, r2
100010c0:	e733      	b.n	10000f2a <_etoa+0x252>
100010c2:	bf00      	nop
100010c4:	0000      	movs	r0, r0
	...

100010c8 <_ftoa>:
{
100010c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100010cc:	ed2d 8b02 	vpush	{d8}
100010d0:	b095      	sub	sp, #84	; 0x54
100010d2:	9007      	str	r0, [sp, #28]
100010d4:	910a      	str	r1, [sp, #40]	; 0x28
100010d6:	4692      	mov	sl, r2
100010d8:	469b      	mov	fp, r3
100010da:	e9dd 8920 	ldrd	r8, r9, [sp, #128]	; 0x80
100010de:	9d22      	ldr	r5, [sp, #136]	; 0x88
  if (value != value)
100010e0:	4642      	mov	r2, r8
100010e2:	464b      	mov	r3, r9
100010e4:	4640      	mov	r0, r8
100010e6:	4649      	mov	r1, r9
100010e8:	f001 fb26 	bl	10002738 <__aeabi_dcmpeq>
100010ec:	2800      	cmp	r0, #0
100010ee:	d040      	beq.n	10001172 <_ftoa+0xaa>
  if (value < -DBL_MAX)
100010f0:	f04f 32ff 	mov.w	r2, #4294967295
100010f4:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
100010f8:	4640      	mov	r0, r8
100010fa:	4649      	mov	r1, r9
100010fc:	f001 fb26 	bl	1000274c <__aeabi_dcmplt>
10001100:	2800      	cmp	r0, #0
10001102:	d145      	bne.n	10001190 <_ftoa+0xc8>
  if (value > DBL_MAX)
10001104:	f04f 32ff 	mov.w	r2, #4294967295
10001108:	4b9f      	ldr	r3, [pc, #636]	; (10001388 <_ftoa+0x2c0>)
1000110a:	4640      	mov	r0, r8
1000110c:	4649      	mov	r1, r9
1000110e:	f001 fb3b 	bl	10002788 <__aeabi_dcmpgt>
10001112:	2800      	cmp	r0, #0
10001114:	d14b      	bne.n	100011ae <_ftoa+0xe6>
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
10001116:	a398      	add	r3, pc, #608	; (adr r3, 10001378 <_ftoa+0x2b0>)
10001118:	e9d3 2300 	ldrd	r2, r3, [r3]
1000111c:	4640      	mov	r0, r8
1000111e:	4649      	mov	r1, r9
10001120:	f001 fb32 	bl	10002788 <__aeabi_dcmpgt>
10001124:	2800      	cmp	r0, #0
10001126:	d15a      	bne.n	100011de <_ftoa+0x116>
10001128:	a395      	add	r3, pc, #596	; (adr r3, 10001380 <_ftoa+0x2b8>)
1000112a:	e9d3 2300 	ldrd	r2, r3, [r3]
1000112e:	4640      	mov	r0, r8
10001130:	4649      	mov	r1, r9
10001132:	f001 fb0b 	bl	1000274c <__aeabi_dcmplt>
10001136:	2800      	cmp	r0, #0
10001138:	d151      	bne.n	100011de <_ftoa+0x116>
  if (value < 0) {
1000113a:	2200      	movs	r2, #0
1000113c:	2300      	movs	r3, #0
1000113e:	4640      	mov	r0, r8
10001140:	4649      	mov	r1, r9
10001142:	f001 fb03 	bl	1000274c <__aeabi_dcmplt>
10001146:	2800      	cmp	r0, #0
10001148:	d157      	bne.n	100011fa <_ftoa+0x132>
  bool negative = false;
1000114a:	2300      	movs	r3, #0
1000114c:	930b      	str	r3, [sp, #44]	; 0x2c
  if (!(flags & FLAGS_PRECISION)) {
1000114e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001150:	f413 6f80 	tst.w	r3, #1024	; 0x400
10001154:	d05c      	beq.n	10001210 <_ftoa+0x148>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10001156:	2400      	movs	r4, #0
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
10001158:	2c1f      	cmp	r4, #31
1000115a:	d85b      	bhi.n	10001214 <_ftoa+0x14c>
1000115c:	2d09      	cmp	r5, #9
1000115e:	d959      	bls.n	10001214 <_ftoa+0x14c>
    buf[len++] = '0';
10001160:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001164:	446b      	add	r3, sp
10001166:	2230      	movs	r2, #48	; 0x30
10001168:	f803 2c20 	strb.w	r2, [r3, #-32]
    prec--;
1000116c:	3d01      	subs	r5, #1
    buf[len++] = '0';
1000116e:	3401      	adds	r4, #1
10001170:	e7f2      	b.n	10001158 <_ftoa+0x90>
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
10001172:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001174:	9303      	str	r3, [sp, #12]
10001176:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001178:	9302      	str	r3, [sp, #8]
1000117a:	2303      	movs	r3, #3
1000117c:	9301      	str	r3, [sp, #4]
1000117e:	4b83      	ldr	r3, [pc, #524]	; (1000138c <_ftoa+0x2c4>)
10001180:	9300      	str	r3, [sp, #0]
10001182:	465b      	mov	r3, fp
10001184:	4652      	mov	r2, sl
10001186:	990a      	ldr	r1, [sp, #40]	; 0x28
10001188:	9807      	ldr	r0, [sp, #28]
1000118a:	f7ff fc1c 	bl	100009c6 <_out_rev>
1000118e:	e12c      	b.n	100013ea <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
10001190:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001192:	9303      	str	r3, [sp, #12]
10001194:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001196:	9302      	str	r3, [sp, #8]
10001198:	2304      	movs	r3, #4
1000119a:	9301      	str	r3, [sp, #4]
1000119c:	4b7c      	ldr	r3, [pc, #496]	; (10001390 <_ftoa+0x2c8>)
1000119e:	9300      	str	r3, [sp, #0]
100011a0:	465b      	mov	r3, fp
100011a2:	4652      	mov	r2, sl
100011a4:	990a      	ldr	r1, [sp, #40]	; 0x28
100011a6:	9807      	ldr	r0, [sp, #28]
100011a8:	f7ff fc0d 	bl	100009c6 <_out_rev>
100011ac:	e11d      	b.n	100013ea <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
100011ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
100011b0:	f013 0304 	ands.w	r3, r3, #4
100011b4:	d00f      	beq.n	100011d6 <_ftoa+0x10e>
100011b6:	4a77      	ldr	r2, [pc, #476]	; (10001394 <_ftoa+0x2cc>)
100011b8:	b17b      	cbz	r3, 100011da <_ftoa+0x112>
100011ba:	2304      	movs	r3, #4
100011bc:	9924      	ldr	r1, [sp, #144]	; 0x90
100011be:	9103      	str	r1, [sp, #12]
100011c0:	9923      	ldr	r1, [sp, #140]	; 0x8c
100011c2:	9102      	str	r1, [sp, #8]
100011c4:	9301      	str	r3, [sp, #4]
100011c6:	9200      	str	r2, [sp, #0]
100011c8:	465b      	mov	r3, fp
100011ca:	4652      	mov	r2, sl
100011cc:	990a      	ldr	r1, [sp, #40]	; 0x28
100011ce:	9807      	ldr	r0, [sp, #28]
100011d0:	f7ff fbf9 	bl	100009c6 <_out_rev>
100011d4:	e109      	b.n	100013ea <_ftoa+0x322>
100011d6:	4a70      	ldr	r2, [pc, #448]	; (10001398 <_ftoa+0x2d0>)
100011d8:	e7ee      	b.n	100011b8 <_ftoa+0xf0>
100011da:	2303      	movs	r3, #3
100011dc:	e7ee      	b.n	100011bc <_ftoa+0xf4>
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
100011de:	9b24      	ldr	r3, [sp, #144]	; 0x90
100011e0:	9304      	str	r3, [sp, #16]
100011e2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100011e4:	9303      	str	r3, [sp, #12]
100011e6:	9502      	str	r5, [sp, #8]
100011e8:	e9cd 8900 	strd	r8, r9, [sp]
100011ec:	465b      	mov	r3, fp
100011ee:	4652      	mov	r2, sl
100011f0:	990a      	ldr	r1, [sp, #40]	; 0x28
100011f2:	9807      	ldr	r0, [sp, #28]
100011f4:	f7ff fd70 	bl	10000cd8 <_etoa>
100011f8:	e0f7      	b.n	100013ea <_ftoa+0x322>
    value = 0 - value;
100011fa:	4642      	mov	r2, r8
100011fc:	464b      	mov	r3, r9
100011fe:	2000      	movs	r0, #0
10001200:	2100      	movs	r1, #0
10001202:	f000 fe79 	bl	10001ef8 <__aeabi_dsub>
10001206:	4680      	mov	r8, r0
10001208:	4689      	mov	r9, r1
    negative = true;
1000120a:	2301      	movs	r3, #1
1000120c:	930b      	str	r3, [sp, #44]	; 0x2c
1000120e:	e79e      	b.n	1000114e <_ftoa+0x86>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10001210:	2506      	movs	r5, #6
10001212:	e7a0      	b.n	10001156 <_ftoa+0x8e>
  int whole = (int)value;
10001214:	4640      	mov	r0, r8
10001216:	4649      	mov	r1, r9
10001218:	f001 fac0 	bl	1000279c <__aeabi_d2iz>
1000121c:	4606      	mov	r6, r0
  double tmp = (value - whole) * pow10[prec];
1000121e:	f000 ffb9 	bl	10002194 <__aeabi_i2d>
10001222:	4602      	mov	r2, r0
10001224:	460b      	mov	r3, r1
10001226:	4640      	mov	r0, r8
10001228:	4649      	mov	r1, r9
1000122a:	f000 fe65 	bl	10001ef8 <__aeabi_dsub>
1000122e:	4b5b      	ldr	r3, [pc, #364]	; (1000139c <_ftoa+0x2d4>)
10001230:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
10001234:	ed93 8b00 	vldr	d8, [r3]
10001238:	ec53 2b18 	vmov	r2, r3, d8
1000123c:	f001 f814 	bl	10002268 <__aeabi_dmul>
10001240:	4602      	mov	r2, r0
10001242:	460b      	mov	r3, r1
10001244:	e9cd 2308 	strd	r2, r3, [sp, #32]
  unsigned long frac = (unsigned long)tmp;
10001248:	f001 fad0 	bl	100027ec <__aeabi_d2uiz>
1000124c:	4607      	mov	r7, r0
  diff = tmp - frac;
1000124e:	f000 ff91 	bl	10002174 <__aeabi_ui2d>
10001252:	4602      	mov	r2, r0
10001254:	460b      	mov	r3, r1
10001256:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
1000125a:	f000 fe4d 	bl	10001ef8 <__aeabi_dsub>
1000125e:	4602      	mov	r2, r0
10001260:	460b      	mov	r3, r1
10001262:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (diff > 0.5) {
10001266:	2200      	movs	r2, #0
10001268:	4b4d      	ldr	r3, [pc, #308]	; (100013a0 <_ftoa+0x2d8>)
1000126a:	f001 fa8d 	bl	10002788 <__aeabi_dcmpgt>
1000126e:	b350      	cbz	r0, 100012c6 <_ftoa+0x1fe>
    ++frac;
10001270:	3701      	adds	r7, #1
    if (frac >= pow10[prec]) {
10001272:	4638      	mov	r0, r7
10001274:	f000 ff7e 	bl	10002174 <__aeabi_ui2d>
10001278:	4602      	mov	r2, r0
1000127a:	460b      	mov	r3, r1
1000127c:	ec51 0b18 	vmov	r0, r1, d8
10001280:	f001 fa6e 	bl	10002760 <__aeabi_dcmple>
10001284:	b108      	cbz	r0, 1000128a <_ftoa+0x1c2>
      ++whole;
10001286:	3601      	adds	r6, #1
      frac = 0;
10001288:	2700      	movs	r7, #0
  if (prec == 0U) {
1000128a:	bb55      	cbnz	r5, 100012e2 <_ftoa+0x21a>
    diff = value - (double)whole;
1000128c:	4630      	mov	r0, r6
1000128e:	f000 ff81 	bl	10002194 <__aeabi_i2d>
10001292:	4602      	mov	r2, r0
10001294:	460b      	mov	r3, r1
10001296:	4640      	mov	r0, r8
10001298:	4649      	mov	r1, r9
1000129a:	f000 fe2d 	bl	10001ef8 <__aeabi_dsub>
1000129e:	4607      	mov	r7, r0
100012a0:	4688      	mov	r8, r1
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
100012a2:	2200      	movs	r2, #0
100012a4:	4b3e      	ldr	r3, [pc, #248]	; (100013a0 <_ftoa+0x2d8>)
100012a6:	f001 fa51 	bl	1000274c <__aeabi_dcmplt>
100012aa:	b138      	cbz	r0, 100012bc <_ftoa+0x1f4>
100012ac:	2200      	movs	r2, #0
100012ae:	4b3c      	ldr	r3, [pc, #240]	; (100013a0 <_ftoa+0x2d8>)
100012b0:	4638      	mov	r0, r7
100012b2:	4641      	mov	r1, r8
100012b4:	f001 fa68 	bl	10002788 <__aeabi_dcmpgt>
100012b8:	2800      	cmp	r0, #0
100012ba:	d042      	beq.n	10001342 <_ftoa+0x27a>
100012bc:	f016 0f01 	tst.w	r6, #1
100012c0:	d03f      	beq.n	10001342 <_ftoa+0x27a>
      ++whole;
100012c2:	3601      	adds	r6, #1
100012c4:	e03d      	b.n	10001342 <_ftoa+0x27a>
  else if (diff < 0.5) {
100012c6:	2200      	movs	r2, #0
100012c8:	4b35      	ldr	r3, [pc, #212]	; (100013a0 <_ftoa+0x2d8>)
100012ca:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
100012ce:	f001 fa3d 	bl	1000274c <__aeabi_dcmplt>
100012d2:	2800      	cmp	r0, #0
100012d4:	d1d9      	bne.n	1000128a <_ftoa+0x1c2>
  else if ((frac == 0U) || (frac & 1U)) {
100012d6:	b117      	cbz	r7, 100012de <_ftoa+0x216>
100012d8:	f017 0f01 	tst.w	r7, #1
100012dc:	d0d5      	beq.n	1000128a <_ftoa+0x1c2>
    ++frac;
100012de:	3701      	adds	r7, #1
100012e0:	e7d3      	b.n	1000128a <_ftoa+0x1c2>
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
100012e2:	2c1f      	cmp	r4, #31
100012e4:	d817      	bhi.n	10001316 <_ftoa+0x24e>
      --count;
100012e6:	3d01      	subs	r5, #1
      buf[len++] = (char)(48U + (frac % 10U));
100012e8:	4b2e      	ldr	r3, [pc, #184]	; (100013a4 <_ftoa+0x2dc>)
100012ea:	fba3 2307 	umull	r2, r3, r3, r7
100012ee:	08db      	lsrs	r3, r3, #3
100012f0:	4619      	mov	r1, r3
100012f2:	eb03 0383 	add.w	r3, r3, r3, lsl #2
100012f6:	eba7 0343 	sub.w	r3, r7, r3, lsl #1
100012fa:	1c62      	adds	r2, r4, #1
100012fc:	3330      	adds	r3, #48	; 0x30
100012fe:	f104 0050 	add.w	r0, r4, #80	; 0x50
10001302:	eb0d 0400 	add.w	r4, sp, r0
10001306:	f804 3c20 	strb.w	r3, [r4, #-32]
      if (!(frac /= 10U)) {
1000130a:	2f09      	cmp	r7, #9
1000130c:	d902      	bls.n	10001314 <_ftoa+0x24c>
1000130e:	460f      	mov	r7, r1
      buf[len++] = (char)(48U + (frac % 10U));
10001310:	4614      	mov	r4, r2
10001312:	e7e6      	b.n	100012e2 <_ftoa+0x21a>
10001314:	4614      	mov	r4, r2
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
10001316:	2c1f      	cmp	r4, #31
10001318:	d80a      	bhi.n	10001330 <_ftoa+0x268>
1000131a:	1e6b      	subs	r3, r5, #1
1000131c:	b145      	cbz	r5, 10001330 <_ftoa+0x268>
      buf[len++] = '0';
1000131e:	f104 0250 	add.w	r2, r4, #80	; 0x50
10001322:	446a      	add	r2, sp
10001324:	2130      	movs	r1, #48	; 0x30
10001326:	f802 1c20 	strb.w	r1, [r2, #-32]
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
1000132a:	461d      	mov	r5, r3
      buf[len++] = '0';
1000132c:	3401      	adds	r4, #1
1000132e:	e7f2      	b.n	10001316 <_ftoa+0x24e>
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
10001330:	2c1f      	cmp	r4, #31
10001332:	d806      	bhi.n	10001342 <_ftoa+0x27a>
      buf[len++] = '.';
10001334:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001338:	446b      	add	r3, sp
1000133a:	222e      	movs	r2, #46	; 0x2e
1000133c:	f803 2c20 	strb.w	r2, [r3, #-32]
10001340:	3401      	adds	r4, #1
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
10001342:	2c1f      	cmp	r4, #31
10001344:	d833      	bhi.n	100013ae <_ftoa+0x2e6>
    buf[len++] = (char)(48 + (whole % 10));
10001346:	4a18      	ldr	r2, [pc, #96]	; (100013a8 <_ftoa+0x2e0>)
10001348:	fb82 3206 	smull	r3, r2, r2, r6
1000134c:	17f3      	asrs	r3, r6, #31
1000134e:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
10001352:	461a      	mov	r2, r3
10001354:	eb03 0383 	add.w	r3, r3, r3, lsl #2
10001358:	eba6 0343 	sub.w	r3, r6, r3, lsl #1
1000135c:	1c61      	adds	r1, r4, #1
1000135e:	3330      	adds	r3, #48	; 0x30
10001360:	f104 0050 	add.w	r0, r4, #80	; 0x50
10001364:	eb0d 0400 	add.w	r4, sp, r0
10001368:	f804 3c20 	strb.w	r3, [r4, #-32]
    if (!(whole /= 10)) {
1000136c:	4616      	mov	r6, r2
1000136e:	b1ea      	cbz	r2, 100013ac <_ftoa+0x2e4>
    buf[len++] = (char)(48 + (whole % 10));
10001370:	460c      	mov	r4, r1
10001372:	e7e6      	b.n	10001342 <_ftoa+0x27a>
10001374:	f3af 8000 	nop.w
10001378:	00000000 	andeq	r0, r0, r0
1000137c:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10001380:	00000000 	andeq	r0, r0, r0
10001384:	c1cdcd65 	bicgt	ip, sp, r5, ror #26
10001388:	7fefffff 	svcvc	0x00efffff
1000138c:	10003eb8 			; <UNDEFINED> instruction: 0x10003eb8
10001390:	10003ebc 			; <UNDEFINED> instruction: 0x10003ebc
10001394:	10003eb0 			; <UNDEFINED> instruction: 0x10003eb0
10001398:	10003eac 	andne	r3, r0, ip, lsr #29
1000139c:	10003ec8 	andne	r3, r0, r8, asr #29
100013a0:	3fe00000 	svccc	0x00e00000
100013a4:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
100013a8:	66666667 	strbtvs	r6, [r6], -r7, ror #12
100013ac:	460c      	mov	r4, r1
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
100013ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
100013b0:	f003 0303 	and.w	r3, r3, #3
100013b4:	2b01      	cmp	r3, #1
100013b6:	d01d      	beq.n	100013f4 <_ftoa+0x32c>
  if (len < PRINTF_FTOA_BUFFER_SIZE) {
100013b8:	2c1f      	cmp	r4, #31
100013ba:	d809      	bhi.n	100013d0 <_ftoa+0x308>
    if (negative) {
100013bc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
100013be:	2b00      	cmp	r3, #0
100013c0:	d035      	beq.n	1000142e <_ftoa+0x366>
      buf[len++] = '-';
100013c2:	f104 0350 	add.w	r3, r4, #80	; 0x50
100013c6:	446b      	add	r3, sp
100013c8:	222d      	movs	r2, #45	; 0x2d
100013ca:	f803 2c20 	strb.w	r2, [r3, #-32]
100013ce:	3401      	adds	r4, #1
  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
100013d0:	9b24      	ldr	r3, [sp, #144]	; 0x90
100013d2:	9303      	str	r3, [sp, #12]
100013d4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100013d6:	9302      	str	r3, [sp, #8]
100013d8:	9401      	str	r4, [sp, #4]
100013da:	ab0c      	add	r3, sp, #48	; 0x30
100013dc:	9300      	str	r3, [sp, #0]
100013de:	465b      	mov	r3, fp
100013e0:	4652      	mov	r2, sl
100013e2:	990a      	ldr	r1, [sp, #40]	; 0x28
100013e4:	9807      	ldr	r0, [sp, #28]
100013e6:	f7ff faee 	bl	100009c6 <_out_rev>
}
100013ea:	b015      	add	sp, #84	; 0x54
100013ec:	ecbd 8b02 	vpop	{d8}
100013f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
100013f4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100013f6:	b1b3      	cbz	r3, 10001426 <_ftoa+0x35e>
100013f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
100013fa:	b91b      	cbnz	r3, 10001404 <_ftoa+0x33c>
100013fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
100013fe:	f013 0f0c 	tst.w	r3, #12
10001402:	d012      	beq.n	1000142a <_ftoa+0x362>
      width--;
10001404:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001406:	3b01      	subs	r3, #1
10001408:	9323      	str	r3, [sp, #140]	; 0x8c
1000140a:	4619      	mov	r1, r3
1000140c:	e006      	b.n	1000141c <_ftoa+0x354>
      buf[len++] = '0';
1000140e:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001412:	446b      	add	r3, sp
10001414:	2230      	movs	r2, #48	; 0x30
10001416:	f803 2c20 	strb.w	r2, [r3, #-32]
1000141a:	3401      	adds	r4, #1
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
1000141c:	428c      	cmp	r4, r1
1000141e:	d2cb      	bcs.n	100013b8 <_ftoa+0x2f0>
10001420:	2c1f      	cmp	r4, #31
10001422:	d9f4      	bls.n	1000140e <_ftoa+0x346>
10001424:	e7c8      	b.n	100013b8 <_ftoa+0x2f0>
10001426:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001428:	e7f8      	b.n	1000141c <_ftoa+0x354>
1000142a:	9923      	ldr	r1, [sp, #140]	; 0x8c
1000142c:	e7f6      	b.n	1000141c <_ftoa+0x354>
    else if (flags & FLAGS_PLUS) {
1000142e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001430:	f013 0f04 	tst.w	r3, #4
10001434:	d007      	beq.n	10001446 <_ftoa+0x37e>
      buf[len++] = '+';  // ignore the space if the '+' exists
10001436:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000143a:	446b      	add	r3, sp
1000143c:	222b      	movs	r2, #43	; 0x2b
1000143e:	f803 2c20 	strb.w	r2, [r3, #-32]
10001442:	3401      	adds	r4, #1
10001444:	e7c4      	b.n	100013d0 <_ftoa+0x308>
    else if (flags & FLAGS_SPACE) {
10001446:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001448:	f013 0f08 	tst.w	r3, #8
1000144c:	d0c0      	beq.n	100013d0 <_ftoa+0x308>
      buf[len++] = ' ';
1000144e:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001452:	446b      	add	r3, sp
10001454:	2220      	movs	r2, #32
10001456:	f803 2c20 	strb.w	r2, [r3, #-32]
1000145a:	3401      	adds	r4, #1
1000145c:	e7b8      	b.n	100013d0 <_ftoa+0x308>
1000145e:	bf00      	nop

10001460 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
10001460:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10001464:	b08f      	sub	sp, #60	; 0x3c
10001466:	4607      	mov	r7, r0
10001468:	4616      	mov	r6, r2
1000146a:	930d      	str	r3, [sp, #52]	; 0x34
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
1000146c:	4688      	mov	r8, r1
1000146e:	2900      	cmp	r1, #0
10001470:	f000 8324 	beq.w	10001abc <_vsnprintf+0x65c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
        break;
10001474:	2400      	movs	r4, #0
  while (*format)
10001476:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001478:	7818      	ldrb	r0, [r3, #0]
1000147a:	2800      	cmp	r0, #0
1000147c:	f000 8320 	beq.w	10001ac0 <_vsnprintf+0x660>
    if (*format != '%') {
10001480:	2825      	cmp	r0, #37	; 0x25
10001482:	d009      	beq.n	10001498 <_vsnprintf+0x38>
      out(*format, buffer, idx++, maxlen);
10001484:	1c65      	adds	r5, r4, #1
10001486:	4633      	mov	r3, r6
10001488:	4622      	mov	r2, r4
1000148a:	4641      	mov	r1, r8
1000148c:	47b8      	blx	r7
      format++;
1000148e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001490:	3301      	adds	r3, #1
10001492:	930d      	str	r3, [sp, #52]	; 0x34
      out(*format, buffer, idx++, maxlen);
10001494:	462c      	mov	r4, r5
      continue;
10001496:	e7ee      	b.n	10001476 <_vsnprintf+0x16>
      format++;
10001498:	3301      	adds	r3, #1
1000149a:	930d      	str	r3, [sp, #52]	; 0x34
    flags = 0U;
1000149c:	2500      	movs	r5, #0
      switch (*format) {
1000149e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014a0:	7819      	ldrb	r1, [r3, #0]
100014a2:	f1a1 0220 	sub.w	r2, r1, #32
100014a6:	2a10      	cmp	r2, #16
100014a8:	d80a      	bhi.n	100014c0 <_vsnprintf+0x60>
100014aa:	e8df f002 	tbb	[pc, r2]
100014ae:	3d090938 	vstrcc.16	s0, [r9, #-112]	; 0xffffff90	; <UNPREDICTABLE>
100014b2:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
100014b6:	33090909 	movwcc	r0, #39177	; 0x9909
100014ba:	09092e09 	stmdbeq	r9, {r0, r3, r9, sl, fp, sp}
100014be:	f1a10029 			; <UNDEFINED> instruction: 0xf1a10029
  return (ch >= '0') && (ch <= '9');
100014c2:	0330      	lsls	r0, r6, #12
100014c4:	b2db      	uxtb	r3, r3
    if (_is_digit(*format)) {
100014c6:	2b09      	cmp	r3, #9
100014c8:	d933      	bls.n	10001532 <_vsnprintf+0xd2>
    else if (*format == '*') {
100014ca:	292a      	cmp	r1, #42	; 0x2a
100014cc:	d036      	beq.n	1000153c <_vsnprintf+0xdc>
    width = 0U;
100014ce:	2300      	movs	r3, #0
100014d0:	930a      	str	r3, [sp, #40]	; 0x28
    if (*format == '.') {
100014d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014d4:	781a      	ldrb	r2, [r3, #0]
100014d6:	2a2e      	cmp	r2, #46	; 0x2e
100014d8:	d040      	beq.n	1000155c <_vsnprintf+0xfc>
    precision = 0U;
100014da:	f04f 0b00 	mov.w	fp, #0
    switch (*format) {
100014de:	9a0d      	ldr	r2, [sp, #52]	; 0x34
100014e0:	7813      	ldrb	r3, [r2, #0]
100014e2:	3b68      	subs	r3, #104	; 0x68
100014e4:	2b12      	cmp	r3, #18
100014e6:	d877      	bhi.n	100015d8 <_vsnprintf+0x178>
100014e8:	e8df f003 	tbb	[pc, r3]
100014ec:	76d37664 	ldrbvc	r7, [r3], r4, ror #12
100014f0:	76767656 			; <UNDEFINED> instruction: 0x76767656
100014f4:	76767676 			; <UNDEFINED> instruction: 0x76767676
100014f8:	76767672 			; <UNDEFINED> instruction: 0x76767672
100014fc:	00d87676 	sbcseq	r7, r8, r6, ror r6
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
10001500:	f045 0501 	orr.w	r5, r5, #1
10001504:	3301      	adds	r3, #1
10001506:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001508:	e7c9      	b.n	1000149e <_vsnprintf+0x3e>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
1000150a:	f045 0502 	orr.w	r5, r5, #2
1000150e:	3301      	adds	r3, #1
10001510:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001512:	e7c4      	b.n	1000149e <_vsnprintf+0x3e>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
10001514:	f045 0504 	orr.w	r5, r5, #4
10001518:	3301      	adds	r3, #1
1000151a:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
1000151c:	e7bf      	b.n	1000149e <_vsnprintf+0x3e>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
1000151e:	f045 0508 	orr.w	r5, r5, #8
10001522:	3301      	adds	r3, #1
10001524:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001526:	e7ba      	b.n	1000149e <_vsnprintf+0x3e>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
10001528:	f045 0510 	orr.w	r5, r5, #16
1000152c:	3301      	adds	r3, #1
1000152e:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001530:	e7b5      	b.n	1000149e <_vsnprintf+0x3e>
      width = _atoi(&format);
10001532:	a80d      	add	r0, sp, #52	; 0x34
10001534:	f7ff fa35 	bl	100009a2 <_atoi>
10001538:	900a      	str	r0, [sp, #40]	; 0x28
1000153a:	e7ca      	b.n	100014d2 <_vsnprintf+0x72>
      const int w = va_arg(va, int);
1000153c:	9b18      	ldr	r3, [sp, #96]	; 0x60
1000153e:	1d1a      	adds	r2, r3, #4
10001540:	9218      	str	r2, [sp, #96]	; 0x60
10001542:	6818      	ldr	r0, [r3, #0]
      if (w < 0) {
10001544:	2800      	cmp	r0, #0
10001546:	db04      	blt.n	10001552 <_vsnprintf+0xf2>
        width = (unsigned int)w;
10001548:	900a      	str	r0, [sp, #40]	; 0x28
      format++;
1000154a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000154c:	3301      	adds	r3, #1
1000154e:	930d      	str	r3, [sp, #52]	; 0x34
10001550:	e7bf      	b.n	100014d2 <_vsnprintf+0x72>
        flags |= FLAGS_LEFT;    // reverse padding
10001552:	f045 0502 	orr.w	r5, r5, #2
        width = (unsigned int)-w;
10001556:	4243      	negs	r3, r0
10001558:	930a      	str	r3, [sp, #40]	; 0x28
1000155a:	e7f6      	b.n	1000154a <_vsnprintf+0xea>
      flags |= FLAGS_PRECISION;
1000155c:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
      format++;
10001560:	1c5a      	adds	r2, r3, #1
10001562:	920d      	str	r2, [sp, #52]	; 0x34
      if (_is_digit(*format)) {
10001564:	785a      	ldrb	r2, [r3, #1]
  return (ch >= '0') && (ch <= '9');
10001566:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
1000156a:	b2db      	uxtb	r3, r3
      if (_is_digit(*format)) {
1000156c:	2b09      	cmp	r3, #9
1000156e:	d904      	bls.n	1000157a <_vsnprintf+0x11a>
      else if (*format == '*') {
10001570:	2a2a      	cmp	r2, #42	; 0x2a
10001572:	d007      	beq.n	10001584 <_vsnprintf+0x124>
    precision = 0U;
10001574:	f04f 0b00 	mov.w	fp, #0
10001578:	e7b1      	b.n	100014de <_vsnprintf+0x7e>
        precision = _atoi(&format);
1000157a:	a80d      	add	r0, sp, #52	; 0x34
1000157c:	f7ff fa11 	bl	100009a2 <_atoi>
10001580:	4683      	mov	fp, r0
10001582:	e7ac      	b.n	100014de <_vsnprintf+0x7e>
        const int prec = (int)va_arg(va, int);
10001584:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001586:	1d1a      	adds	r2, r3, #4
10001588:	9218      	str	r2, [sp, #96]	; 0x60
1000158a:	681b      	ldr	r3, [r3, #0]
        precision = prec > 0 ? (unsigned int)prec : 0U;
1000158c:	ea23 7be3 	bic.w	fp, r3, r3, asr #31
        format++;
10001590:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001592:	3301      	adds	r3, #1
10001594:	930d      	str	r3, [sp, #52]	; 0x34
10001596:	e7a2      	b.n	100014de <_vsnprintf+0x7e>
        flags |= FLAGS_LONG;
10001598:	f445 7180 	orr.w	r1, r5, #256	; 0x100
        format++;
1000159c:	1c53      	adds	r3, r2, #1
1000159e:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'l') {
100015a0:	7852      	ldrb	r2, [r2, #1]
100015a2:	2a6c      	cmp	r2, #108	; 0x6c
100015a4:	d001      	beq.n	100015aa <_vsnprintf+0x14a>
        flags |= FLAGS_LONG;
100015a6:	460d      	mov	r5, r1
100015a8:	e016      	b.n	100015d8 <_vsnprintf+0x178>
          flags |= FLAGS_LONG_LONG;
100015aa:	f445 7540 	orr.w	r5, r5, #768	; 0x300
          format++;
100015ae:	3301      	adds	r3, #1
100015b0:	930d      	str	r3, [sp, #52]	; 0x34
100015b2:	e011      	b.n	100015d8 <_vsnprintf+0x178>
        flags |= FLAGS_SHORT;
100015b4:	f045 0180 	orr.w	r1, r5, #128	; 0x80
        format++;
100015b8:	1c53      	adds	r3, r2, #1
100015ba:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'h') {
100015bc:	7852      	ldrb	r2, [r2, #1]
100015be:	2a68      	cmp	r2, #104	; 0x68
100015c0:	d001      	beq.n	100015c6 <_vsnprintf+0x166>
        flags |= FLAGS_SHORT;
100015c2:	460d      	mov	r5, r1
100015c4:	e008      	b.n	100015d8 <_vsnprintf+0x178>
          flags |= FLAGS_CHAR;
100015c6:	f045 05c0 	orr.w	r5, r5, #192	; 0xc0
          format++;
100015ca:	3301      	adds	r3, #1
100015cc:	930d      	str	r3, [sp, #52]	; 0x34
100015ce:	e003      	b.n	100015d8 <_vsnprintf+0x178>
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100015d0:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
100015d4:	3201      	adds	r2, #1
100015d6:	920d      	str	r2, [sp, #52]	; 0x34
    switch (*format) {
100015d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100015da:	7818      	ldrb	r0, [r3, #0]
100015dc:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
100015e0:	2b53      	cmp	r3, #83	; 0x53
100015e2:	f200 8261 	bhi.w	10001aa8 <_vsnprintf+0x648>
100015e6:	e8df f013 	tbh	[pc, r3, lsl #1]
100015ea:	025f0254 	subseq	r0, pc, #84, 4	; 0x40000005
100015ee:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015f2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015f6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015fa:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015fe:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001602:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001606:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000160a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000160e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001612:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001616:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000161a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000161e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001622:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001626:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000162a:	01540174 	cmpeq	r4, r4, ror r1
1000162e:	025f0174 	subseq	r0, pc, #116, 2
10001632:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001636:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000163a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000163e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001642:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001646:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000164a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000164e:	005e025f 	subseq	r0, lr, pc, asr r2
10001652:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001656:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000165a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000165e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001662:	005e025f 	subseq	r0, lr, pc, asr r2
10001666:	005e019b 			; <UNDEFINED> instruction: 0x005e019b
1000166a:	01540174 	cmpeq	r4, r4, ror r1
1000166e:	025f0174 	subseq	r0, pc, #116, 2
10001672:	025f005e 	subseq	r0, pc, #94	; 0x5e
10001676:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000167a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000167e:	0239005e 	eorseq	r0, r9, #94	; 0x5e
10001682:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001686:	025f01d4 	subseq	r0, pc, #212, 2	; 0x35
1000168a:	025f005e 	subseq	r0, pc, #94	; 0x5e
1000168e:	005e025f 	subseq	r0, lr, pc, asr r2
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
10001692:	f445 7500 	orr.w	r5, r5, #512	; 0x200
        format++;
10001696:	3201      	adds	r2, #1
10001698:	920d      	str	r2, [sp, #52]	; 0x34
        break;
1000169a:	e79d      	b.n	100015d8 <_vsnprintf+0x178>
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
1000169c:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
100016a0:	3201      	adds	r2, #1
100016a2:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100016a4:	e798      	b.n	100015d8 <_vsnprintf+0x178>
        if (*format == 'x' || *format == 'X') {
100016a6:	2878      	cmp	r0, #120	; 0x78
100016a8:	d009      	beq.n	100016be <_vsnprintf+0x25e>
100016aa:	2858      	cmp	r0, #88	; 0x58
100016ac:	d03a      	beq.n	10001724 <_vsnprintf+0x2c4>
        else if (*format == 'o') {
100016ae:	286f      	cmp	r0, #111	; 0x6f
100016b0:	d03a      	beq.n	10001728 <_vsnprintf+0x2c8>
        else if (*format == 'b') {
100016b2:	2862      	cmp	r0, #98	; 0x62
100016b4:	d03a      	beq.n	1000172c <_vsnprintf+0x2cc>
          flags &= ~FLAGS_HASH;   // no hash for dec format
100016b6:	f025 0510 	bic.w	r5, r5, #16
          base = 10U;
100016ba:	230a      	movs	r3, #10
100016bc:	e000      	b.n	100016c0 <_vsnprintf+0x260>
          base = 16U;
100016be:	2310      	movs	r3, #16
        if (*format == 'X') {
100016c0:	2858      	cmp	r0, #88	; 0x58
100016c2:	d035      	beq.n	10001730 <_vsnprintf+0x2d0>
        if ((*format != 'i') && (*format != 'd')) {
100016c4:	2869      	cmp	r0, #105	; 0x69
100016c6:	d003      	beq.n	100016d0 <_vsnprintf+0x270>
100016c8:	2864      	cmp	r0, #100	; 0x64
100016ca:	d001      	beq.n	100016d0 <_vsnprintf+0x270>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
100016cc:	f025 050c 	bic.w	r5, r5, #12
        if (flags & FLAGS_PRECISION) {
100016d0:	f415 6f80 	tst.w	r5, #1024	; 0x400
100016d4:	d001      	beq.n	100016da <_vsnprintf+0x27a>
          flags &= ~FLAGS_ZEROPAD;
100016d6:	f025 0501 	bic.w	r5, r5, #1
        if ((*format == 'i') || (*format == 'd')) {
100016da:	2869      	cmp	r0, #105	; 0x69
100016dc:	d02b      	beq.n	10001736 <_vsnprintf+0x2d6>
100016de:	2864      	cmp	r0, #100	; 0x64
100016e0:	d029      	beq.n	10001736 <_vsnprintf+0x2d6>
          if (flags & FLAGS_LONG_LONG) {
100016e2:	f415 7f00 	tst.w	r5, #512	; 0x200
100016e6:	f040 8096 	bne.w	10001816 <_vsnprintf+0x3b6>
          else if (flags & FLAGS_LONG) {
100016ea:	f415 7f80 	tst.w	r5, #256	; 0x100
100016ee:	f040 80ae 	bne.w	1000184e <_vsnprintf+0x3ee>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
100016f2:	f015 0f40 	tst.w	r5, #64	; 0x40
100016f6:	f000 80bf 	beq.w	10001878 <_vsnprintf+0x418>
100016fa:	9a18      	ldr	r2, [sp, #96]	; 0x60
100016fc:	1d11      	adds	r1, r2, #4
100016fe:	9118      	str	r1, [sp, #96]	; 0x60
10001700:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
10001702:	9505      	str	r5, [sp, #20]
10001704:	990a      	ldr	r1, [sp, #40]	; 0x28
10001706:	9104      	str	r1, [sp, #16]
10001708:	f8cd b00c 	str.w	fp, [sp, #12]
1000170c:	9302      	str	r3, [sp, #8]
1000170e:	2300      	movs	r3, #0
10001710:	9301      	str	r3, [sp, #4]
10001712:	9200      	str	r2, [sp, #0]
10001714:	4633      	mov	r3, r6
10001716:	4622      	mov	r2, r4
10001718:	4641      	mov	r1, r8
1000171a:	4638      	mov	r0, r7
1000171c:	f7ff fa2e 	bl	10000b7c <_ntoa_long>
10001720:	4604      	mov	r4, r0
10001722:	e029      	b.n	10001778 <_vsnprintf+0x318>
          base = 16U;
10001724:	2310      	movs	r3, #16
10001726:	e7cb      	b.n	100016c0 <_vsnprintf+0x260>
          base =  8U;
10001728:	2308      	movs	r3, #8
1000172a:	e7c9      	b.n	100016c0 <_vsnprintf+0x260>
          base =  2U;
1000172c:	2302      	movs	r3, #2
1000172e:	e7c7      	b.n	100016c0 <_vsnprintf+0x260>
          flags |= FLAGS_UPPERCASE;
10001730:	f045 0520 	orr.w	r5, r5, #32
10001734:	e7c6      	b.n	100016c4 <_vsnprintf+0x264>
          if (flags & FLAGS_LONG_LONG) {
10001736:	f415 7f00 	tst.w	r5, #512	; 0x200
1000173a:	d121      	bne.n	10001780 <_vsnprintf+0x320>
          else if (flags & FLAGS_LONG) {
1000173c:	f415 7f80 	tst.w	r5, #256	; 0x100
10001740:	d142      	bne.n	100017c8 <_vsnprintf+0x368>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
10001742:	f015 0f40 	tst.w	r5, #64	; 0x40
10001746:	d058      	beq.n	100017fa <_vsnprintf+0x39a>
10001748:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000174a:	1d11      	adds	r1, r2, #4
1000174c:	9118      	str	r1, [sp, #96]	; 0x60
1000174e:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001750:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
10001754:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
10001758:	9505      	str	r5, [sp, #20]
1000175a:	980a      	ldr	r0, [sp, #40]	; 0x28
1000175c:	9004      	str	r0, [sp, #16]
1000175e:	f8cd b00c 	str.w	fp, [sp, #12]
10001762:	9302      	str	r3, [sp, #8]
10001764:	0fd2      	lsrs	r2, r2, #31
10001766:	9201      	str	r2, [sp, #4]
10001768:	9100      	str	r1, [sp, #0]
1000176a:	4633      	mov	r3, r6
1000176c:	4622      	mov	r2, r4
1000176e:	4641      	mov	r1, r8
10001770:	4638      	mov	r0, r7
10001772:	f7ff fa03 	bl	10000b7c <_ntoa_long>
10001776:	4604      	mov	r4, r0
        format++;
10001778:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000177a:	3301      	adds	r3, #1
1000177c:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000177e:	e67a      	b.n	10001476 <_vsnprintf+0x16>
            const long long value = va_arg(va, long long);
10001780:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001782:	3207      	adds	r2, #7
10001784:	f022 0207 	bic.w	r2, r2, #7
10001788:	f102 0108 	add.w	r1, r2, #8
1000178c:	9118      	str	r1, [sp, #96]	; 0x60
1000178e:	6851      	ldr	r1, [r2, #4]
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001790:	6812      	ldr	r2, [r2, #0]
10001792:	4608      	mov	r0, r1
10001794:	2900      	cmp	r1, #0
10001796:	db13      	blt.n	100017c0 <_vsnprintf+0x360>
10001798:	9508      	str	r5, [sp, #32]
1000179a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
1000179c:	9507      	str	r5, [sp, #28]
1000179e:	f8cd b018 	str.w	fp, [sp, #24]
100017a2:	9304      	str	r3, [sp, #16]
100017a4:	2300      	movs	r3, #0
100017a6:	9305      	str	r3, [sp, #20]
100017a8:	0fc9      	lsrs	r1, r1, #31
100017aa:	9102      	str	r1, [sp, #8]
100017ac:	9200      	str	r2, [sp, #0]
100017ae:	9001      	str	r0, [sp, #4]
100017b0:	4633      	mov	r3, r6
100017b2:	4622      	mov	r2, r4
100017b4:	4641      	mov	r1, r8
100017b6:	4638      	mov	r0, r7
100017b8:	f7ff fa2a 	bl	10000c10 <_ntoa_long_long>
100017bc:	4604      	mov	r4, r0
100017be:	e7db      	b.n	10001778 <_vsnprintf+0x318>
100017c0:	4252      	negs	r2, r2
100017c2:	eb61 0041 	sbc.w	r0, r1, r1, lsl #1
100017c6:	e7e7      	b.n	10001798 <_vsnprintf+0x338>
            const long value = va_arg(va, long);
100017c8:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017ca:	1d11      	adds	r1, r2, #4
100017cc:	9118      	str	r1, [sp, #96]	; 0x60
100017ce:	6812      	ldr	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100017d0:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
100017d4:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
100017d8:	9505      	str	r5, [sp, #20]
100017da:	980a      	ldr	r0, [sp, #40]	; 0x28
100017dc:	9004      	str	r0, [sp, #16]
100017de:	f8cd b00c 	str.w	fp, [sp, #12]
100017e2:	9302      	str	r3, [sp, #8]
100017e4:	0fd2      	lsrs	r2, r2, #31
100017e6:	9201      	str	r2, [sp, #4]
100017e8:	9100      	str	r1, [sp, #0]
100017ea:	4633      	mov	r3, r6
100017ec:	4622      	mov	r2, r4
100017ee:	4641      	mov	r1, r8
100017f0:	4638      	mov	r0, r7
100017f2:	f7ff f9c3 	bl	10000b7c <_ntoa_long>
100017f6:	4604      	mov	r4, r0
100017f8:	e7be      	b.n	10001778 <_vsnprintf+0x318>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
100017fa:	f015 0f80 	tst.w	r5, #128	; 0x80
100017fe:	d005      	beq.n	1000180c <_vsnprintf+0x3ac>
10001800:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001802:	1d11      	adds	r1, r2, #4
10001804:	9118      	str	r1, [sp, #96]	; 0x60
10001806:	f9b2 2000 	ldrsh.w	r2, [r2]
1000180a:	e7a1      	b.n	10001750 <_vsnprintf+0x2f0>
1000180c:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000180e:	1d11      	adds	r1, r2, #4
10001810:	9118      	str	r1, [sp, #96]	; 0x60
10001812:	6812      	ldr	r2, [r2, #0]
10001814:	e79c      	b.n	10001750 <_vsnprintf+0x2f0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
10001816:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001818:	3207      	adds	r2, #7
1000181a:	f022 0207 	bic.w	r2, r2, #7
1000181e:	f102 0108 	add.w	r1, r2, #8
10001822:	9118      	str	r1, [sp, #96]	; 0x60
10001824:	9508      	str	r5, [sp, #32]
10001826:	990a      	ldr	r1, [sp, #40]	; 0x28
10001828:	9107      	str	r1, [sp, #28]
1000182a:	f8cd b018 	str.w	fp, [sp, #24]
1000182e:	2100      	movs	r1, #0
10001830:	9304      	str	r3, [sp, #16]
10001832:	9105      	str	r1, [sp, #20]
10001834:	9102      	str	r1, [sp, #8]
10001836:	e9d2 2300 	ldrd	r2, r3, [r2]
1000183a:	e9cd 2300 	strd	r2, r3, [sp]
1000183e:	4633      	mov	r3, r6
10001840:	4622      	mov	r2, r4
10001842:	4641      	mov	r1, r8
10001844:	4638      	mov	r0, r7
10001846:	f7ff f9e3 	bl	10000c10 <_ntoa_long_long>
1000184a:	4604      	mov	r4, r0
1000184c:	e794      	b.n	10001778 <_vsnprintf+0x318>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
1000184e:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001850:	1d11      	adds	r1, r2, #4
10001852:	9118      	str	r1, [sp, #96]	; 0x60
10001854:	9505      	str	r5, [sp, #20]
10001856:	990a      	ldr	r1, [sp, #40]	; 0x28
10001858:	9104      	str	r1, [sp, #16]
1000185a:	f8cd b00c 	str.w	fp, [sp, #12]
1000185e:	9302      	str	r3, [sp, #8]
10001860:	2300      	movs	r3, #0
10001862:	9301      	str	r3, [sp, #4]
10001864:	6813      	ldr	r3, [r2, #0]
10001866:	9300      	str	r3, [sp, #0]
10001868:	4633      	mov	r3, r6
1000186a:	4622      	mov	r2, r4
1000186c:	4641      	mov	r1, r8
1000186e:	4638      	mov	r0, r7
10001870:	f7ff f984 	bl	10000b7c <_ntoa_long>
10001874:	4604      	mov	r4, r0
10001876:	e77f      	b.n	10001778 <_vsnprintf+0x318>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
10001878:	f015 0f80 	tst.w	r5, #128	; 0x80
1000187c:	d004      	beq.n	10001888 <_vsnprintf+0x428>
1000187e:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001880:	1d11      	adds	r1, r2, #4
10001882:	9118      	str	r1, [sp, #96]	; 0x60
10001884:	8812      	ldrh	r2, [r2, #0]
10001886:	e73c      	b.n	10001702 <_vsnprintf+0x2a2>
10001888:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000188a:	1d11      	adds	r1, r2, #4
1000188c:	9118      	str	r1, [sp, #96]	; 0x60
1000188e:	6812      	ldr	r2, [r2, #0]
10001890:	e737      	b.n	10001702 <_vsnprintf+0x2a2>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
10001892:	2846      	cmp	r0, #70	; 0x46
10001894:	d01a      	beq.n	100018cc <_vsnprintf+0x46c>
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
10001896:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001898:	3307      	adds	r3, #7
1000189a:	f023 0307 	bic.w	r3, r3, #7
1000189e:	f103 0208 	add.w	r2, r3, #8
100018a2:	9218      	str	r2, [sp, #96]	; 0x60
100018a4:	9504      	str	r5, [sp, #16]
100018a6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100018a8:	9203      	str	r2, [sp, #12]
100018aa:	f8cd b008 	str.w	fp, [sp, #8]
100018ae:	e9d3 2300 	ldrd	r2, r3, [r3]
100018b2:	e9cd 2300 	strd	r2, r3, [sp]
100018b6:	4633      	mov	r3, r6
100018b8:	4622      	mov	r2, r4
100018ba:	4641      	mov	r1, r8
100018bc:	4638      	mov	r0, r7
100018be:	f7ff fc03 	bl	100010c8 <_ftoa>
100018c2:	4604      	mov	r4, r0
        format++;
100018c4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100018c6:	3301      	adds	r3, #1
100018c8:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100018ca:	e5d4      	b.n	10001476 <_vsnprintf+0x16>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
100018cc:	f045 0520 	orr.w	r5, r5, #32
100018d0:	e7e1      	b.n	10001896 <_vsnprintf+0x436>
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
100018d2:	2867      	cmp	r0, #103	; 0x67
100018d4:	d001      	beq.n	100018da <_vsnprintf+0x47a>
100018d6:	2847      	cmp	r0, #71	; 0x47
100018d8:	d101      	bne.n	100018de <_vsnprintf+0x47e>
100018da:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
100018de:	2845      	cmp	r0, #69	; 0x45
100018e0:	d001      	beq.n	100018e6 <_vsnprintf+0x486>
100018e2:	2847      	cmp	r0, #71	; 0x47
100018e4:	d101      	bne.n	100018ea <_vsnprintf+0x48a>
100018e6:	f045 0520 	orr.w	r5, r5, #32
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
100018ea:	9b18      	ldr	r3, [sp, #96]	; 0x60
100018ec:	3307      	adds	r3, #7
100018ee:	f023 0307 	bic.w	r3, r3, #7
100018f2:	f103 0208 	add.w	r2, r3, #8
100018f6:	9218      	str	r2, [sp, #96]	; 0x60
100018f8:	9504      	str	r5, [sp, #16]
100018fa:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100018fc:	9203      	str	r2, [sp, #12]
100018fe:	f8cd b008 	str.w	fp, [sp, #8]
10001902:	e9d3 2300 	ldrd	r2, r3, [r3]
10001906:	e9cd 2300 	strd	r2, r3, [sp]
1000190a:	4633      	mov	r3, r6
1000190c:	4622      	mov	r2, r4
1000190e:	4641      	mov	r1, r8
10001910:	4638      	mov	r0, r7
10001912:	f7ff f9e1 	bl	10000cd8 <_etoa>
10001916:	4604      	mov	r4, r0
        format++;
10001918:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000191a:	3301      	adds	r3, #1
1000191c:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000191e:	e5aa      	b.n	10001476 <_vsnprintf+0x16>
        if (!(flags & FLAGS_LEFT)) {
10001920:	f015 0502 	ands.w	r5, r5, #2
10001924:	d01f      	beq.n	10001966 <_vsnprintf+0x506>
        unsigned int l = 1U;
10001926:	f04f 0901 	mov.w	r9, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
1000192a:	9818      	ldr	r0, [sp, #96]	; 0x60
1000192c:	1d03      	adds	r3, r0, #4
1000192e:	9318      	str	r3, [sp, #96]	; 0x60
10001930:	f104 0a01 	add.w	sl, r4, #1
10001934:	4633      	mov	r3, r6
10001936:	4622      	mov	r2, r4
10001938:	4641      	mov	r1, r8
1000193a:	7800      	ldrb	r0, [r0, #0]
1000193c:	47b8      	blx	r7
        if (flags & FLAGS_LEFT) {
1000193e:	b9bd      	cbnz	r5, 10001970 <_vsnprintf+0x510>
        format++;
10001940:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001942:	3301      	adds	r3, #1
10001944:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001946:	4654      	mov	r4, sl
10001948:	e595      	b.n	10001476 <_vsnprintf+0x16>
            out(' ', buffer, idx++, maxlen);
1000194a:	f102 0a01 	add.w	sl, r2, #1
1000194e:	4633      	mov	r3, r6
10001950:	4641      	mov	r1, r8
10001952:	2020      	movs	r0, #32
10001954:	47b8      	blx	r7
          while (l++ < width) {
10001956:	464b      	mov	r3, r9
            out(' ', buffer, idx++, maxlen);
10001958:	4652      	mov	r2, sl
          while (l++ < width) {
1000195a:	f103 0901 	add.w	r9, r3, #1
1000195e:	459b      	cmp	fp, r3
10001960:	d8f3      	bhi.n	1000194a <_vsnprintf+0x4ea>
10001962:	4614      	mov	r4, r2
10001964:	e7e1      	b.n	1000192a <_vsnprintf+0x4ca>
        unsigned int l = 1U;
10001966:	2301      	movs	r3, #1
10001968:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
1000196c:	4622      	mov	r2, r4
1000196e:	e7f4      	b.n	1000195a <_vsnprintf+0x4fa>
10001970:	4652      	mov	r2, sl
10001972:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
10001976:	e006      	b.n	10001986 <_vsnprintf+0x526>
            out(' ', buffer, idx++, maxlen);
10001978:	1c55      	adds	r5, r2, #1
1000197a:	4633      	mov	r3, r6
1000197c:	4641      	mov	r1, r8
1000197e:	2020      	movs	r0, #32
10001980:	47b8      	blx	r7
          while (l++ < width) {
10001982:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
10001984:	462a      	mov	r2, r5
          while (l++ < width) {
10001986:	f109 0401 	add.w	r4, r9, #1
1000198a:	45ca      	cmp	sl, r9
1000198c:	d8f4      	bhi.n	10001978 <_vsnprintf+0x518>
1000198e:	4692      	mov	sl, r2
10001990:	e7d6      	b.n	10001940 <_vsnprintf+0x4e0>
      }

      case 's' : {
        const char* p = va_arg(va, char*);
10001992:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001994:	1d1a      	adds	r2, r3, #4
10001996:	9218      	str	r2, [sp, #96]	; 0x60
10001998:	f8d3 a000 	ldr.w	sl, [r3]
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
1000199c:	f1bb 0f00 	cmp.w	fp, #0
100019a0:	d11e      	bne.n	100019e0 <_vsnprintf+0x580>
100019a2:	f04f 33ff 	mov.w	r3, #4294967295
100019a6:	46d1      	mov	r9, sl
100019a8:	e002      	b.n	100019b0 <_vsnprintf+0x550>
  for (s = str; *s && maxsize--; ++s);
100019aa:	f109 0901 	add.w	r9, r9, #1
100019ae:	4613      	mov	r3, r2
100019b0:	f899 2000 	ldrb.w	r2, [r9]
100019b4:	b112      	cbz	r2, 100019bc <_vsnprintf+0x55c>
100019b6:	1e5a      	subs	r2, r3, #1
100019b8:	2b00      	cmp	r3, #0
100019ba:	d1f6      	bne.n	100019aa <_vsnprintf+0x54a>
  return (unsigned int)(s - str);
100019bc:	eba9 090a 	sub.w	r9, r9, sl
        // pre padding
        if (flags & FLAGS_PRECISION) {
100019c0:	f415 6380 	ands.w	r3, r5, #1024	; 0x400
100019c4:	930b      	str	r3, [sp, #44]	; 0x2c
100019c6:	d002      	beq.n	100019ce <_vsnprintf+0x56e>
          l = (l < precision ? l : precision);
100019c8:	45d9      	cmp	r9, fp
100019ca:	bf28      	it	cs
100019cc:	46d9      	movcs	r9, fp
        }
        if (!(flags & FLAGS_LEFT)) {
100019ce:	f015 0302 	ands.w	r3, r5, #2
100019d2:	930c      	str	r3, [sp, #48]	; 0x30
100019d4:	d006      	beq.n	100019e4 <_vsnprintf+0x584>
100019d6:	4622      	mov	r2, r4
100019d8:	465c      	mov	r4, fp
100019da:	46b3      	mov	fp, r6
100019dc:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
100019de:	e01d      	b.n	10001a1c <_vsnprintf+0x5bc>
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
100019e0:	465b      	mov	r3, fp
100019e2:	e7e0      	b.n	100019a6 <_vsnprintf+0x546>
100019e4:	4622      	mov	r2, r4
100019e6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
100019e8:	464b      	mov	r3, r9
100019ea:	e007      	b.n	100019fc <_vsnprintf+0x59c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
100019ec:	f102 0901 	add.w	r9, r2, #1
100019f0:	4633      	mov	r3, r6
100019f2:	4641      	mov	r1, r8
100019f4:	2020      	movs	r0, #32
100019f6:	47b8      	blx	r7
          while (l++ < width) {
100019f8:	462b      	mov	r3, r5
            out(' ', buffer, idx++, maxlen);
100019fa:	464a      	mov	r2, r9
          while (l++ < width) {
100019fc:	1c5d      	adds	r5, r3, #1
100019fe:	429c      	cmp	r4, r3
10001a00:	d8f4      	bhi.n	100019ec <_vsnprintf+0x58c>
10001a02:	46a9      	mov	r9, r5
10001a04:	465c      	mov	r4, fp
10001a06:	46b3      	mov	fp, r6
10001a08:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
10001a0a:	e007      	b.n	10001a1c <_vsnprintf+0x5bc>
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001a0c:	461c      	mov	r4, r3
          out(*(p++), buffer, idx++, maxlen);
10001a0e:	f10a 0a01 	add.w	sl, sl, #1
10001a12:	1c55      	adds	r5, r2, #1
10001a14:	465b      	mov	r3, fp
10001a16:	4641      	mov	r1, r8
10001a18:	47b8      	blx	r7
10001a1a:	462a      	mov	r2, r5
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001a1c:	f89a 0000 	ldrb.w	r0, [sl]
10001a20:	b120      	cbz	r0, 10001a2c <_vsnprintf+0x5cc>
10001a22:	2e00      	cmp	r6, #0
10001a24:	d0f3      	beq.n	10001a0e <_vsnprintf+0x5ae>
10001a26:	1e63      	subs	r3, r4, #1
10001a28:	2c00      	cmp	r4, #0
10001a2a:	d1ef      	bne.n	10001a0c <_vsnprintf+0x5ac>
        }
        // post padding
        if (flags & FLAGS_LEFT) {
10001a2c:	4614      	mov	r4, r2
10001a2e:	465e      	mov	r6, fp
10001a30:	9b0c      	ldr	r3, [sp, #48]	; 0x30
10001a32:	b91b      	cbnz	r3, 10001a3c <_vsnprintf+0x5dc>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
10001a34:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001a36:	3301      	adds	r3, #1
10001a38:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001a3a:	e51c      	b.n	10001476 <_vsnprintf+0x16>
10001a3c:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
10001a40:	e006      	b.n	10001a50 <_vsnprintf+0x5f0>
            out(' ', buffer, idx++, maxlen);
10001a42:	1c55      	adds	r5, r2, #1
10001a44:	4633      	mov	r3, r6
10001a46:	4641      	mov	r1, r8
10001a48:	2020      	movs	r0, #32
10001a4a:	47b8      	blx	r7
          while (l++ < width) {
10001a4c:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
10001a4e:	462a      	mov	r2, r5
          while (l++ < width) {
10001a50:	f109 0401 	add.w	r4, r9, #1
10001a54:	45ca      	cmp	sl, r9
10001a56:	d8f4      	bhi.n	10001a42 <_vsnprintf+0x5e2>
10001a58:	4614      	mov	r4, r2
10001a5a:	e7eb      	b.n	10001a34 <_vsnprintf+0x5d4>
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
10001a5c:	f045 0521 	orr.w	r5, r5, #33	; 0x21
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
10001a60:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001a62:	1d1a      	adds	r2, r3, #4
10001a64:	9218      	str	r2, [sp, #96]	; 0x60
10001a66:	681b      	ldr	r3, [r3, #0]
10001a68:	9505      	str	r5, [sp, #20]
10001a6a:	2208      	movs	r2, #8
10001a6c:	9204      	str	r2, [sp, #16]
10001a6e:	f8cd b00c 	str.w	fp, [sp, #12]
10001a72:	2210      	movs	r2, #16
10001a74:	9202      	str	r2, [sp, #8]
10001a76:	2200      	movs	r2, #0
10001a78:	9201      	str	r2, [sp, #4]
10001a7a:	9300      	str	r3, [sp, #0]
10001a7c:	4633      	mov	r3, r6
10001a7e:	4622      	mov	r2, r4
10001a80:	4641      	mov	r1, r8
10001a82:	4638      	mov	r0, r7
10001a84:	f7ff f87a 	bl	10000b7c <_ntoa_long>
10001a88:	4604      	mov	r4, r0
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
10001a8a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001a8c:	3301      	adds	r3, #1
10001a8e:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001a90:	e4f1      	b.n	10001476 <_vsnprintf+0x16>
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
10001a92:	1c65      	adds	r5, r4, #1
10001a94:	4633      	mov	r3, r6
10001a96:	4622      	mov	r2, r4
10001a98:	4641      	mov	r1, r8
10001a9a:	2025      	movs	r0, #37	; 0x25
10001a9c:	47b8      	blx	r7
        format++;
10001a9e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001aa0:	3301      	adds	r3, #1
10001aa2:	930d      	str	r3, [sp, #52]	; 0x34
        out('%', buffer, idx++, maxlen);
10001aa4:	462c      	mov	r4, r5
        break;
10001aa6:	e4e6      	b.n	10001476 <_vsnprintf+0x16>

      default :
        out(*format, buffer, idx++, maxlen);
10001aa8:	1c65      	adds	r5, r4, #1
10001aaa:	4633      	mov	r3, r6
10001aac:	4622      	mov	r2, r4
10001aae:	4641      	mov	r1, r8
10001ab0:	47b8      	blx	r7
        format++;
10001ab2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001ab4:	3301      	adds	r3, #1
10001ab6:	930d      	str	r3, [sp, #52]	; 0x34
        out(*format, buffer, idx++, maxlen);
10001ab8:	462c      	mov	r4, r5
        break;
10001aba:	e4dc      	b.n	10001476 <_vsnprintf+0x16>
    out = _out_null;
10001abc:	4f07      	ldr	r7, [pc, #28]	; (10001adc <_vsnprintf+0x67c>)
10001abe:	e4d9      	b.n	10001474 <_vsnprintf+0x14>
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
10001ac0:	42b4      	cmp	r4, r6
10001ac2:	d301      	bcc.n	10001ac8 <_vsnprintf+0x668>
10001ac4:	1e72      	subs	r2, r6, #1
10001ac6:	e000      	b.n	10001aca <_vsnprintf+0x66a>
10001ac8:	4622      	mov	r2, r4
10001aca:	4633      	mov	r3, r6
10001acc:	4641      	mov	r1, r8
10001ace:	2000      	movs	r0, #0
10001ad0:	47b8      	blx	r7

  // return written chars without terminating \0
  return (int)idx;
}
10001ad2:	4620      	mov	r0, r4
10001ad4:	b00f      	add	sp, #60	; 0x3c
10001ad6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10001ada:	bf00      	nop
10001adc:	100009a1 	andne	r0, r0, r1, lsr #19

10001ae0 <_out_char>:
  if (character) {
10001ae0:	b900      	cbnz	r0, 10001ae4 <_out_char+0x4>
10001ae2:	4770      	bx	lr
{
10001ae4:	b508      	push	{r3, lr}
    putchar(character);
10001ae6:	f000 f817 	bl	10001b18 <putchar>
}
10001aea:	bd08      	pop	{r3, pc}

10001aec <printf>:


///////////////////////////////////////////////////////////////////////////////

int printf(const char* format, ...)
{
10001aec:	b40f      	push	{r0, r1, r2, r3}
10001aee:	b500      	push	{lr}
10001af0:	b085      	sub	sp, #20
10001af2:	aa06      	add	r2, sp, #24
10001af4:	f852 3b04 	ldr.w	r3, [r2], #4
  va_list va;
  va_start(va, format);
10001af8:	9203      	str	r2, [sp, #12]
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
10001afa:	9200      	str	r2, [sp, #0]
10001afc:	f04f 32ff 	mov.w	r2, #4294967295
10001b00:	a902      	add	r1, sp, #8
10001b02:	4804      	ldr	r0, [pc, #16]	; (10001b14 <printf+0x28>)
10001b04:	f7ff fcac 	bl	10001460 <_vsnprintf>
  va_end(va);
  return ret;
}
10001b08:	b005      	add	sp, #20
10001b0a:	f85d eb04 	ldr.w	lr, [sp], #4
10001b0e:	b004      	add	sp, #16
10001b10:	4770      	bx	lr
10001b12:	bf00      	nop
10001b14:	10001ae1 	andne	r1, r0, r1, ror #21

10001b18 <putchar>:
#define PUTCHAR_PROTOTYPE       int fputc(int ch, FILE *f)
#define GETCHAR_PROTOTYPE       int fgetc(FILE *f)
#endif

PUTCHAR_PROTOTYPE {
    while (UART_FLAG(UART0) & 0x20);
10001b18:	4b03      	ldr	r3, [pc, #12]	; (10001b28 <putchar+0x10>)
10001b1a:	699b      	ldr	r3, [r3, #24]
10001b1c:	f013 0f20 	tst.w	r3, #32
10001b20:	d1fa      	bne.n	10001b18 <putchar>
    UART_DATA(UART0) = ch;
10001b22:	4b01      	ldr	r3, [pc, #4]	; (10001b28 <putchar+0x10>)
10001b24:	6018      	str	r0, [r3, #0]
    return ch;
}
10001b26:	4770      	bx	lr
10001b28:	40200000 	eormi	r0, r0, r0

10001b2c <puts>:
GETCHAR_PROTOTYPE {
    while ((UART_FLAG(UART0) & 0x40) == 0);
    return UART_DATA(UART0);
}

int puts(const char* string) {
10001b2c:	b538      	push	{r3, r4, r5, lr}
10001b2e:	4605      	mov	r5, r0
    int index = 0;
10001b30:	2400      	movs	r4, #0
    while (string[index] != '\0') {
10001b32:	e002      	b.n	10001b3a <puts+0xe>
        putchar(string[index]);
10001b34:	f7ff fff0 	bl	10001b18 <putchar>
        index++;
10001b38:	3401      	adds	r4, #1
    while (string[index] != '\0') {
10001b3a:	5d28      	ldrb	r0, [r5, r4]
10001b3c:	2800      	cmp	r0, #0
10001b3e:	d1f9      	bne.n	10001b34 <puts+0x8>
    }
    putchar('\n');
10001b40:	200a      	movs	r0, #10
10001b42:	f7ff ffe9 	bl	10001b18 <putchar>
    return index;
}
10001b46:	4620      	mov	r0, r4
10001b48:	bd38      	pop	{r3, r4, r5, pc}
	...

10001b4c <uart_init>:

void uart_init(void) {
    UART_IBRD(UART0) = 40;
10001b4c:	4b07      	ldr	r3, [pc, #28]	; (10001b6c <uart_init+0x20>)
10001b4e:	2228      	movs	r2, #40	; 0x28
10001b50:	625a      	str	r2, [r3, #36]	; 0x24
    UART_FBRD(UART0) = 11;
10001b52:	220b      	movs	r2, #11
10001b54:	629a      	str	r2, [r3, #40]	; 0x28
    UART_LCRH(UART0) = 0x60;
10001b56:	2260      	movs	r2, #96	; 0x60
10001b58:	62da      	str	r2, [r3, #44]	; 0x2c
    UART_CR(UART0)   = 0x301;
10001b5a:	f240 3201 	movw	r2, #769	; 0x301
10001b5e:	631a      	str	r2, [r3, #48]	; 0x30
    UART_RSR(UART0)  = 0x0A;
10001b60:	220a      	movs	r2, #10
10001b62:	605a      	str	r2, [r3, #4]
    UART_CTRL(UART0) = 0x01;
10001b64:	2201      	movs	r2, #1
10001b66:	609a      	str	r2, [r3, #8]
}
10001b68:	4770      	bx	lr
10001b6a:	bf00      	nop
10001b6c:	40200000 	eormi	r0, r0, r0

10001b70 <fault_dump_opcode>:
    FD_CODE_TEXT_BASE,  FD_CODE_TEXT_ENDS,  FD_CODE_TEXT_SIZE );
    printf("Code Stack Growth Downward:%d\r\n", 
    FD_STACK_GROWTH_DOWNWARD);
}

static unsigned int fault_dump_opcode(unsigned int pc) {
10001b70:	b082      	sub	sp, #8
    uint16_t value[2] = {0};
10001b72:	2300      	movs	r3, #0
10001b74:	9301      	str	r3, [sp, #4]
    unsigned int opcode = 0;
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001b76:	e007      	b.n	10001b88 <fault_dump_opcode+0x18>
        value[i] = *(uint16_t*)(pc + i * sizeof(uint16_t));
10001b78:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
10001b7c:	aa02      	add	r2, sp, #8
10001b7e:	eb02 0243 	add.w	r2, r2, r3, lsl #1
10001b82:	f822 1c04 	strh.w	r1, [r2, #-4]
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001b86:	3301      	adds	r3, #1
10001b88:	2b01      	cmp	r3, #1
10001b8a:	d9f5      	bls.n	10001b78 <fault_dump_opcode+0x8>
    }
    opcode = ((unsigned int)value[1] << 0x10) |
10001b8c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
             ((unsigned int)value[0] << 0x00);
10001b90:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    return opcode;
}
10001b94:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
10001b98:	b002      	add	sp, #8
10001b9a:	4770      	bx	lr

10001b9c <opcode_is_bl_or_blx>:

static bool opcode_is_bl_or_blx(unsigned int ins) {
#define FD_BL_OPCODE_MASK   (0xF800)
#define FD_BL_OPCODE_BL     (0xF000)
#define FD_BL_OPCODE_BLX    (0xF800)
    uint16_t opcode1 = (((ins >> 0x00) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001b9c:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
    uint16_t opcode2 = (((ins >> 0x10) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001ba0:	0c00      	lsrs	r0, r0, #16
10001ba2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    if ((opcode1 == FD_BL_OPCODE_BL) || (opcode1 == FD_BL_OPCODE_BLX)) {
10001ba6:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
10001baa:	d00a      	beq.n	10001bc2 <opcode_is_bl_or_blx+0x26>
10001bac:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
10001bb0:	d009      	beq.n	10001bc6 <opcode_is_bl_or_blx+0x2a>
        return true;
    }
    if ((opcode2 == FD_BL_OPCODE_BL) || (opcode2 == FD_BL_OPCODE_BLX)) {
10001bb2:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
10001bb6:	d008      	beq.n	10001bca <opcode_is_bl_or_blx+0x2e>
10001bb8:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
10001bbc:	d007      	beq.n	10001bce <opcode_is_bl_or_blx+0x32>
        return true;
    }
    return false;
10001bbe:	2000      	movs	r0, #0
10001bc0:	4770      	bx	lr
        return true;
10001bc2:	2001      	movs	r0, #1
10001bc4:	4770      	bx	lr
10001bc6:	2001      	movs	r0, #1
10001bc8:	4770      	bx	lr
        return true;
10001bca:	2001      	movs	r0, #1
10001bcc:	4770      	bx	lr
10001bce:	2001      	movs	r0, #1
}
10001bd0:	4770      	bx	lr
	...

10001bd4 <fault_dump_init>:
void fault_dump_init(void) {
10001bd4:	b508      	push	{r3, lr}
    fd_code_stack_base = FD_CODE_STACK_BASE;
10001bd6:	490a      	ldr	r1, [pc, #40]	; (10001c00 <fault_dump_init+0x2c>)
10001bd8:	4b0a      	ldr	r3, [pc, #40]	; (10001c04 <fault_dump_init+0x30>)
10001bda:	6019      	str	r1, [r3, #0]
    fd_code_stack_full = FD_CODE_STACK_FULL;
10001bdc:	4a0a      	ldr	r2, [pc, #40]	; (10001c08 <fault_dump_init+0x34>)
10001bde:	4b0b      	ldr	r3, [pc, #44]	; (10001c0c <fault_dump_init+0x38>)
10001be0:	601a      	str	r2, [r3, #0]
    printf("Code Stack:[%08X - %08X], size:%d\r\n",
10001be2:	1a53      	subs	r3, r2, r1
10001be4:	480a      	ldr	r0, [pc, #40]	; (10001c10 <fault_dump_init+0x3c>)
10001be6:	f7ff ff81 	bl	10001aec <printf>
    printf("Code Text :[%08X - %08X], size:%d\r\n",
10001bea:	490a      	ldr	r1, [pc, #40]	; (10001c14 <fault_dump_init+0x40>)
10001bec:	4a0a      	ldr	r2, [pc, #40]	; (10001c18 <fault_dump_init+0x44>)
10001bee:	1a53      	subs	r3, r2, r1
10001bf0:	480a      	ldr	r0, [pc, #40]	; (10001c1c <fault_dump_init+0x48>)
10001bf2:	f7ff ff7b 	bl	10001aec <printf>
    printf("Code Stack Growth Downward:%d\r\n", 
10001bf6:	2101      	movs	r1, #1
10001bf8:	4809      	ldr	r0, [pc, #36]	; (10001c20 <fault_dump_init+0x4c>)
10001bfa:	f7ff ff77 	bl	10001aec <printf>
}
10001bfe:	bd08      	pop	{r3, pc}
10001c00:	380ff000 	stmdacc	pc, {ip, sp, lr, pc}	; <UNPREDICTABLE>
10001c04:	3800055c 	stmdacc	r0, {r2, r3, r4, r6, r8, sl}
10001c08:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001c0c:	38000560 	stmdacc	r0, {r5, r6, r8, sl}
10001c10:	10003f18 	andne	r3, r0, r8, lsl pc
10001c14:	10000000 	andne	r0, r0, r0
10001c18:	10004124 	andne	r4, r0, r4, lsr #2
10001c1c:	10003f3c 	andne	r3, r0, ip, lsr pc
10001c20:	10003f60 	andne	r3, r0, r0, ror #30

10001c24 <fault_dump_callstack>:
    }
    printf("\r\n");
    while (1);
}

int fault_dump_callstack(unsigned int *buffer, size_t size, unsigned int *stack_point, unsigned int *stack_start) {
10001c24:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int count = 0;
    unsigned int pc = 0, op = 0, *sp = NULL;
    if ((buffer == NULL) || (size <= 0)) {
10001c28:	b348      	cbz	r0, 10001c7e <fault_dump_callstack+0x5a>
10001c2a:	460f      	mov	r7, r1
10001c2c:	4614      	mov	r4, r2
10001c2e:	461d      	mov	r5, r3
10001c30:	4680      	mov	r8, r0
10001c32:	b339      	cbz	r1, 10001c84 <fault_dump_callstack+0x60>
        return -FD_EEMPTY;
    }
    FD_STACK_CHECKIT(stack_point, stack_start) {
10001c34:	b34a      	cbz	r2, 10001c8a <fault_dump_callstack+0x66>
10001c36:	429a      	cmp	r2, r3
10001c38:	d82a      	bhi.n	10001c90 <fault_dump_callstack+0x6c>
    int count = 0;
10001c3a:	2600      	movs	r6, #0
10001c3c:	e000      	b.n	10001c40 <fault_dump_callstack+0x1c>
        return -FD_EINVAL;
    }
    FD_STACK_FOREACH(stack_point, stack_start) {
10001c3e:	3404      	adds	r4, #4
10001c40:	b1d4      	cbz	r4, 10001c78 <fault_dump_callstack+0x54>
10001c42:	42ac      	cmp	r4, r5
10001c44:	d818      	bhi.n	10001c78 <fault_dump_callstack+0x54>
        // Read stack[x] value to pc.
        pc = *(unsigned int *)sp;
10001c46:	6822      	ldr	r2, [r4, #0]
        // PC must be in the code segment.
        if ((pc < FD_CODE_TEXT_BASE) || (pc > FD_CODE_TEXT_ENDS)) {
10001c48:	4813      	ldr	r0, [pc, #76]	; (10001c98 <fault_dump_callstack+0x74>)
10001c4a:	4290      	cmp	r0, r2
10001c4c:	d8f7      	bhi.n	10001c3e <fault_dump_callstack+0x1a>
10001c4e:	4b13      	ldr	r3, [pc, #76]	; (10001c9c <fault_dump_callstack+0x78>)
10001c50:	4293      	cmp	r3, r2
10001c52:	d3f4      	bcc.n	10001c3e <fault_dump_callstack+0x1a>
            continue;
        }
        // The thumb instruction must be an odd number.
        if ((pc % 2) == 0) {
10001c54:	f012 0f01 	tst.w	r2, #1
10001c58:	d0f1      	beq.n	10001c3e <fault_dump_callstack+0x1a>
            continue;
        }
        // Fix thumb instruction set.
        pc = pc - 1;
        // Calculate the address of the instruction being executed before pushing on the stack.
        pc = pc - sizeof(unsigned int);
10001c5a:	f1a2 0905 	sub.w	r9, r2, #5
        // The thumb instruction is at least 2-byte aligned.
        if ((pc & 0x1) != 0) {
10001c5e:	d0ee      	beq.n	10001c3e <fault_dump_callstack+0x1a>
            continue;
        }
        // Read the instruction at the PC address.
        op = fault_dump_opcode(pc);
10001c60:	4648      	mov	r0, r9
10001c62:	f7ff ff85 	bl	10001b70 <fault_dump_opcode>
        // Only BL or BLX opcode need to be recorded.
        if (!opcode_is_bl_or_blx(op)) {
10001c66:	f7ff ff99 	bl	10001b9c <opcode_is_bl_or_blx>
10001c6a:	2800      	cmp	r0, #0
10001c6c:	d0e7      	beq.n	10001c3e <fault_dump_callstack+0x1a>
            continue;
        }
        // storage this address.
        buffer[count] = pc;
10001c6e:	f848 9026 	str.w	r9, [r8, r6, lsl #2]
        count = count + 1;
10001c72:	3601      	adds	r6, #1
        if (count >= size) {
10001c74:	42be      	cmp	r6, r7
10001c76:	d3e2      	bcc.n	10001c3e <fault_dump_callstack+0x1a>
            break;
        }
    }
    return count;
}
10001c78:	4630      	mov	r0, r6
10001c7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        return -FD_EEMPTY;
10001c7e:	f06f 0601 	mvn.w	r6, #1
10001c82:	e7f9      	b.n	10001c78 <fault_dump_callstack+0x54>
10001c84:	f06f 0601 	mvn.w	r6, #1
10001c88:	e7f6      	b.n	10001c78 <fault_dump_callstack+0x54>
        return -FD_EINVAL;
10001c8a:	f06f 0602 	mvn.w	r6, #2
10001c8e:	e7f3      	b.n	10001c78 <fault_dump_callstack+0x54>
10001c90:	f06f 0602 	mvn.w	r6, #2
10001c94:	e7f0      	b.n	10001c78 <fault_dump_callstack+0x54>
10001c96:	bf00      	nop
10001c98:	10000000 	andne	r0, r0, r0
10001c9c:	10004124 	andne	r4, r0, r4, lsr #2

10001ca0 <fault_dump_handler>:
void fault_dump_handler(unsigned int *stack, unsigned int linker) {
10001ca0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10001ca2:	4605      	mov	r5, r0
10001ca4:	460e      	mov	r6, r1
    frame.manual.r4  = FD_STACK_READVAL(point);
10001ca6:	6803      	ldr	r3, [r0, #0]
10001ca8:	4c47      	ldr	r4, [pc, #284]	; (10001dc8 <fault_dump_handler+0x128>)
10001caa:	6023      	str	r3, [r4, #0]
    frame.manual.r5  = FD_STACK_READVAL(point);
10001cac:	6843      	ldr	r3, [r0, #4]
10001cae:	6063      	str	r3, [r4, #4]
    frame.manual.r6  = FD_STACK_READVAL(point);
10001cb0:	6883      	ldr	r3, [r0, #8]
10001cb2:	60a3      	str	r3, [r4, #8]
    frame.manual.r7  = FD_STACK_READVAL(point);
10001cb4:	68c3      	ldr	r3, [r0, #12]
10001cb6:	60e3      	str	r3, [r4, #12]
    frame.manual.r8  = FD_STACK_READVAL(point);
10001cb8:	6903      	ldr	r3, [r0, #16]
10001cba:	6123      	str	r3, [r4, #16]
    frame.manual.r9  = FD_STACK_READVAL(point);
10001cbc:	6943      	ldr	r3, [r0, #20]
10001cbe:	6163      	str	r3, [r4, #20]
    frame.manual.r10 = FD_STACK_READVAL(point);
10001cc0:	6983      	ldr	r3, [r0, #24]
10001cc2:	61a3      	str	r3, [r4, #24]
    frame.manual.r11 = FD_STACK_READVAL(point);
10001cc4:	69c3      	ldr	r3, [r0, #28]
10001cc6:	61e3      	str	r3, [r4, #28]
    frame.except.r0  = FD_STACK_READVAL(point);
10001cc8:	6a03      	ldr	r3, [r0, #32]
10001cca:	6223      	str	r3, [r4, #32]
    frame.except.r1  = FD_STACK_READVAL(point);
10001ccc:	6a43      	ldr	r3, [r0, #36]	; 0x24
10001cce:	6263      	str	r3, [r4, #36]	; 0x24
    frame.except.r2  = FD_STACK_READVAL(point);
10001cd0:	6a83      	ldr	r3, [r0, #40]	; 0x28
10001cd2:	62a3      	str	r3, [r4, #40]	; 0x28
    frame.except.r3  = FD_STACK_READVAL(point);
10001cd4:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
10001cd6:	62e3      	str	r3, [r4, #44]	; 0x2c
    frame.except.r12 = FD_STACK_READVAL(point);
10001cd8:	6b03      	ldr	r3, [r0, #48]	; 0x30
10001cda:	6323      	str	r3, [r4, #48]	; 0x30
    frame.except.lr  = FD_STACK_READVAL(point);
10001cdc:	6b43      	ldr	r3, [r0, #52]	; 0x34
10001cde:	6363      	str	r3, [r4, #52]	; 0x34
    frame.except.pc  = FD_STACK_READVAL(point);
10001ce0:	6b83      	ldr	r3, [r0, #56]	; 0x38
10001ce2:	63a3      	str	r3, [r4, #56]	; 0x38
    frame.except.psr = FD_STACK_READVAL(point);
10001ce4:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
10001ce6:	63e3      	str	r3, [r4, #60]	; 0x3c
    printf("\r\n");
10001ce8:	4f38      	ldr	r7, [pc, #224]	; (10001dcc <fault_dump_handler+0x12c>)
10001cea:	4638      	mov	r0, r7
10001cec:	f7ff ff1e 	bl	10001b2c <puts>
    printf(" HardFault Information Dump \r\n");
10001cf0:	4837      	ldr	r0, [pc, #220]	; (10001dd0 <fault_dump_handler+0x130>)
10001cf2:	f7ff ff1b 	bl	10001b2c <puts>
    printf(" Stack Frame   \r\n");
10001cf6:	4837      	ldr	r0, [pc, #220]	; (10001dd4 <fault_dump_handler+0x134>)
10001cf8:	f7ff ff18 	bl	10001b2c <puts>
    printf(" R0   = 0x%08X \r\n", (unsigned int)frame.except.r0);
10001cfc:	6a21      	ldr	r1, [r4, #32]
10001cfe:	4836      	ldr	r0, [pc, #216]	; (10001dd8 <fault_dump_handler+0x138>)
10001d00:	f7ff fef4 	bl	10001aec <printf>
    printf(" R1   = 0x%08X \r\n", (unsigned int)frame.except.r1);
10001d04:	6a61      	ldr	r1, [r4, #36]	; 0x24
10001d06:	4835      	ldr	r0, [pc, #212]	; (10001ddc <fault_dump_handler+0x13c>)
10001d08:	f7ff fef0 	bl	10001aec <printf>
    printf(" R2   = 0x%08X \r\n", (unsigned int)frame.except.r2);
10001d0c:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10001d0e:	4834      	ldr	r0, [pc, #208]	; (10001de0 <fault_dump_handler+0x140>)
10001d10:	f7ff feec 	bl	10001aec <printf>
    printf(" R3   = 0x%08X \r\n", (unsigned int)frame.except.r3);
10001d14:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
10001d16:	4833      	ldr	r0, [pc, #204]	; (10001de4 <fault_dump_handler+0x144>)
10001d18:	f7ff fee8 	bl	10001aec <printf>
    printf(" R4   = 0x%08X \r\n", (unsigned int)frame.manual.r4);
10001d1c:	6821      	ldr	r1, [r4, #0]
10001d1e:	4832      	ldr	r0, [pc, #200]	; (10001de8 <fault_dump_handler+0x148>)
10001d20:	f7ff fee4 	bl	10001aec <printf>
    printf(" R5   = 0x%08X \r\n", (unsigned int)frame.manual.r5);
10001d24:	6861      	ldr	r1, [r4, #4]
10001d26:	4831      	ldr	r0, [pc, #196]	; (10001dec <fault_dump_handler+0x14c>)
10001d28:	f7ff fee0 	bl	10001aec <printf>
    printf(" R6   = 0x%08X \r\n", (unsigned int)frame.manual.r6);
10001d2c:	68a1      	ldr	r1, [r4, #8]
10001d2e:	4830      	ldr	r0, [pc, #192]	; (10001df0 <fault_dump_handler+0x150>)
10001d30:	f7ff fedc 	bl	10001aec <printf>
    printf(" R7   = 0x%08X \r\n", (unsigned int)frame.manual.r7);
10001d34:	68e1      	ldr	r1, [r4, #12]
10001d36:	482f      	ldr	r0, [pc, #188]	; (10001df4 <fault_dump_handler+0x154>)
10001d38:	f7ff fed8 	bl	10001aec <printf>
    printf(" R8   = 0x%08X \r\n", (unsigned int)frame.manual.r8);
10001d3c:	6921      	ldr	r1, [r4, #16]
10001d3e:	482e      	ldr	r0, [pc, #184]	; (10001df8 <fault_dump_handler+0x158>)
10001d40:	f7ff fed4 	bl	10001aec <printf>
    printf(" R9   = 0x%08X \r\n", (unsigned int)frame.manual.r9);
10001d44:	6961      	ldr	r1, [r4, #20]
10001d46:	482d      	ldr	r0, [pc, #180]	; (10001dfc <fault_dump_handler+0x15c>)
10001d48:	f7ff fed0 	bl	10001aec <printf>
    printf(" R10  = 0x%08X \r\n", (unsigned int)frame.manual.r10);
10001d4c:	69a1      	ldr	r1, [r4, #24]
10001d4e:	482c      	ldr	r0, [pc, #176]	; (10001e00 <fault_dump_handler+0x160>)
10001d50:	f7ff fecc 	bl	10001aec <printf>
    printf(" R11  = 0x%08X \r\n", (unsigned int)frame.manual.r11);
10001d54:	69e1      	ldr	r1, [r4, #28]
10001d56:	482b      	ldr	r0, [pc, #172]	; (10001e04 <fault_dump_handler+0x164>)
10001d58:	f7ff fec8 	bl	10001aec <printf>
    printf(" R12  = 0x%08X \r\n", (unsigned int)frame.except.r12);
10001d5c:	6b21      	ldr	r1, [r4, #48]	; 0x30
10001d5e:	482a      	ldr	r0, [pc, #168]	; (10001e08 <fault_dump_handler+0x168>)
10001d60:	f7ff fec4 	bl	10001aec <printf>
    printf(" LR   = 0x%08X \r\n", (unsigned int)frame.except.lr);
10001d64:	6b61      	ldr	r1, [r4, #52]	; 0x34
10001d66:	4829      	ldr	r0, [pc, #164]	; (10001e0c <fault_dump_handler+0x16c>)
10001d68:	f7ff fec0 	bl	10001aec <printf>
    printf(" PC   = 0x%08X \r\n", (unsigned int)frame.except.pc);
10001d6c:	6ba1      	ldr	r1, [r4, #56]	; 0x38
10001d6e:	4828      	ldr	r0, [pc, #160]	; (10001e10 <fault_dump_handler+0x170>)
10001d70:	f7ff febc 	bl	10001aec <printf>
    printf(" PSR  = 0x%08X \r\n", (unsigned int)frame.except.psr);
10001d74:	6be1      	ldr	r1, [r4, #60]	; 0x3c
10001d76:	4827      	ldr	r0, [pc, #156]	; (10001e14 <fault_dump_handler+0x174>)
10001d78:	f7ff feb8 	bl	10001aec <printf>
    printf("\r\n");
10001d7c:	4638      	mov	r0, r7
10001d7e:	f7ff fed5 	bl	10001b2c <puts>
    printf(" EXE_RETURN: 0x%08X \r\n", linker);
10001d82:	4631      	mov	r1, r6
10001d84:	4824      	ldr	r0, [pc, #144]	; (10001e18 <fault_dump_handler+0x178>)
10001d86:	f7ff feb1 	bl	10001aec <printf>
    count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, 
10001d8a:	4b24      	ldr	r3, [pc, #144]	; (10001e1c <fault_dump_handler+0x17c>)
10001d8c:	f105 0240 	add.w	r2, r5, #64	; 0x40
10001d90:	2140      	movs	r1, #64	; 0x40
10001d92:	4823      	ldr	r0, [pc, #140]	; (10001e20 <fault_dump_handler+0x180>)
10001d94:	f7ff ff46 	bl	10001c24 <fault_dump_callstack>
10001d98:	4605      	mov	r5, r0
    printf(" Stack Call: ");
10001d9a:	4822      	ldr	r0, [pc, #136]	; (10001e24 <fault_dump_handler+0x184>)
10001d9c:	f7ff fea6 	bl	10001aec <printf>
    printf("%08X ", (unsigned int)frame.except.pc);
10001da0:	6ba1      	ldr	r1, [r4, #56]	; 0x38
10001da2:	4821      	ldr	r0, [pc, #132]	; (10001e28 <fault_dump_handler+0x188>)
10001da4:	f7ff fea2 	bl	10001aec <printf>
    for (index = 0; index < count; index++) {
10001da8:	2400      	movs	r4, #0
10001daa:	e006      	b.n	10001dba <fault_dump_handler+0x11a>
        printf("%08X ", buffer[index]);
10001dac:	4b1c      	ldr	r3, [pc, #112]	; (10001e20 <fault_dump_handler+0x180>)
10001dae:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
10001db2:	481d      	ldr	r0, [pc, #116]	; (10001e28 <fault_dump_handler+0x188>)
10001db4:	f7ff fe9a 	bl	10001aec <printf>
    for (index = 0; index < count; index++) {
10001db8:	3401      	adds	r4, #1
10001dba:	42ac      	cmp	r4, r5
10001dbc:	dbf6      	blt.n	10001dac <fault_dump_handler+0x10c>
    printf("\r\n");
10001dbe:	4803      	ldr	r0, [pc, #12]	; (10001dcc <fault_dump_handler+0x12c>)
10001dc0:	f7ff feb4 	bl	10001b2c <puts>
    while (1);
10001dc4:	e7fe      	b.n	10001dc4 <fault_dump_handler+0x124>
10001dc6:	bf00      	nop
10001dc8:	38000564 	stmdacc	r0, {r2, r5, r6, r8, sl}
10001dcc:	10003f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
10001dd0:	10003f80 	andne	r3, r0, r0, lsl #31
10001dd4:	10003fa0 	andne	r3, r0, r0, lsr #31
10001dd8:	10003fb4 			; <UNDEFINED> instruction: 0x10003fb4
10001ddc:	10003fc8 	andne	r3, r0, r8, asr #31
10001de0:	10003fdc 	ldrdne	r3, [r0], -ip
10001de4:	10003ff0 	strdne	r3, [r0], -r0
10001de8:	10004004 	andne	r4, r0, r4
10001dec:	10004018 	andne	r4, r0, r8, lsl r0
10001df0:	1000402c 	andne	r4, r0, ip, lsr #32
10001df4:	10004040 	andne	r4, r0, r0, asr #32
10001df8:	10004054 	andne	r4, r0, r4, asr r0
10001dfc:	10004068 	andne	r4, r0, r8, rrx
10001e00:	1000407c 	andne	r4, r0, ip, ror r0
10001e04:	10004090 	mulne	r0, r0, r0
10001e08:	100040a4 	andne	r4, r0, r4, lsr #1
10001e0c:	100040b8 	strhne	r4, [r0], -r8
10001e10:	100040cc 	andne	r4, r0, ip, asr #1
10001e14:	100040e0 	andne	r4, r0, r0, ror #1
10001e18:	100040f4 	strdne	r4, [r0], -r4	; <UNPREDICTABLE>
10001e1c:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001e20:	3800045c 	stmdacc	r0, {r2, r3, r4, r6, sl}
10001e24:	1000410c 	andne	r4, r0, ip, lsl #2
10001e28:	10003e44 	andne	r3, r0, r4, asr #28

10001e2c <fault_dump_bm_stack_point>:
 */
__STATIC_FORCEINLINE uint32_t __get_MSP(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, msp" : "=r" (result) );
10001e2c:	f3ef 8008 	mrs	r0, MSP

unsigned int fault_dump_bm_stack_point(void) {
    return __get_MSP();
}
10001e30:	4770      	bx	lr
	...

10001e34 <fault_dump_bm_stack_start>:

unsigned int fault_dump_bm_stack_start(void) {
    return FD_STACK_START;
}
10001e34:	4800      	ldr	r0, [pc, #0]	; (10001e38 <fault_dump_bm_stack_start+0x4>)
10001e36:	4770      	bx	lr
10001e38:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>

10001e3c <Reset_Handler>:
                .thumb_func
                .type    Reset_Handler, %function
                .globl   Reset_Handler
                .fnstart
Reset_Handler:
                ldr      r0, =__INITIAL_SP
10001e3c:	4815      	ldr	r0, [pc, #84]	; (10001e94 <BusFault_Handler+0x4>)
                msr      psp, r0
10001e3e:	f380 8809 	msr	PSP, r0

                ldr      r0, =__STACK_LIMIT
10001e42:	4815      	ldr	r0, [pc, #84]	; (10001e98 <BusFault_Handler+0x8>)
                msr      msplim, r0
10001e44:	f380 880a 	msr	MSPLIM, r0
                msr      psplim, r0
10001e48:	f380 880b 	msr	PSPLIM, r0
                ldr      r0, =__STACK_SEAL
                ldr      r1, =0xFEF5EDA5U
                strd     r1,r1,[r0,#0]
                #endif

                bl       SystemInit
10001e4c:	f7fe fd92 	bl	10000974 <SystemInit>

                ldr      r4, =__copy_table_start__
10001e50:	4c12      	ldr	r4, [pc, #72]	; (10001e9c <BusFault_Handler+0xc>)
                ldr      r5, =__copy_table_end__
10001e52:	4d13      	ldr	r5, [pc, #76]	; (10001ea0 <BusFault_Handler+0x10>)

.L_loop0:
                cmp      r4, r5
10001e54:	42ac      	cmp	r4, r5
                bge      .L_loop0_done
10001e56:	da0a      	bge.n	10001e6e <Reset_Handler+0x32>
                ldr      r1, [r4]                /* source address */
10001e58:	6821      	ldr	r1, [r4, #0]
                ldr      r2, [r4, #4]            /* destination address */
10001e5a:	6862      	ldr	r2, [r4, #4]
                ldr      r3, [r4, #8]            /* word count */
10001e5c:	68a3      	ldr	r3, [r4, #8]
                lsls     r3, r3, #2              /* byte count */
10001e5e:	009b      	lsls	r3, r3, #2

.L_loop0_0:
                subs     r3, #4                  /* decrement byte count */
10001e60:	3b04      	subs	r3, #4
                ittt     ge
10001e62:	bfa2      	ittt	ge
                ldrge    r0, [r1, r3]
10001e64:	58c8      	ldrge	r0, [r1, r3]
                strge    r0, [r2, r3]
10001e66:	50d0      	strge	r0, [r2, r3]
                bge      .L_loop0_0
10001e68:	e7fa      	bge.n	10001e60 <Reset_Handler+0x24>

                adds     r4, #12
10001e6a:	340c      	adds	r4, #12
                b        .L_loop0
10001e6c:	e7f2      	b.n	10001e54 <Reset_Handler+0x18>
.L_loop0_done:

                ldr      r3, =__zero_table_start__
10001e6e:	4b0d      	ldr	r3, [pc, #52]	; (10001ea4 <BusFault_Handler+0x14>)
                ldr      r4, =__zero_table_end__
10001e70:	4c0d      	ldr	r4, [pc, #52]	; (10001ea8 <BusFault_Handler+0x18>)

.L_loop2:
                cmp      r3, r4
10001e72:	42a3      	cmp	r3, r4
                bge      .L_loop2_done
10001e74:	da09      	bge.n	10001e8a <Reset_Handler+0x4e>
                ldr      r1, [r3]                /* destination address */
10001e76:	6819      	ldr	r1, [r3, #0]
                ldr      r2, [r3, #4]            /* word count */
10001e78:	685a      	ldr	r2, [r3, #4]
                lsls     r2, r2, #2              /* byte count */
10001e7a:	0092      	lsls	r2, r2, #2
                movs     r0, 0
10001e7c:	2000      	movs	r0, #0

.L_loop2_0:
                subs     r2, #4                  /* decrement byte count */
10001e7e:	3a04      	subs	r2, #4
                itt      ge
10001e80:	bfa4      	itt	ge
                strge    r0, [r1, r2]
10001e82:	5088      	strge	r0, [r1, r2]
                bge      .L_loop2_0
10001e84:	e7fb      	bge.n	10001e7e <Reset_Handler+0x42>

                adds     r3, #8
10001e86:	3308      	adds	r3, #8
                b        .L_loop2
10001e88:	e7f3      	b.n	10001e72 <Reset_Handler+0x36>
.L_loop2_done:

                bl       main
10001e8a:	f7fe fd5d 	bl	10000948 <main>
                .thumb_func
                .type    HardFault_Handler, %function
                .weak    HardFault_Handler
                .fnstart
HardFault_Handler:
                b        .
10001e8e:	e7fe      	b.n	10001e8e <Reset_Handler+0x52>

10001e90 <BusFault_Handler>:
                .thumb_func
                .type    Default_Handler, %function
                .weak    Default_Handler
                .fnstart
Default_Handler:
                b        .
10001e90:	e7fe      	b.n	10001e90 <BusFault_Handler>
10001e92:	00000000 	andeq	r0, r0, r0
                ldr      r0, =__INITIAL_SP
10001e96:	f0003810 			; <UNDEFINED> instruction: 0xf0003810
                ldr      r0, =__STACK_LIMIT
10001e9a:	41fc380f 	mvnsmi	r3, pc, lsl #16
                ldr      r4, =__copy_table_start__
10001e9e:	42081000 	andmi	r1, r8, #0
                ldr      r5, =__copy_table_end__
10001ea2:	42081000 	andmi	r1, r8, #0
                ldr      r3, =__zero_table_start__
10001ea6:	42081000 	andmi	r1, r8, #0
                ldr      r4, =__zero_table_end__
10001eaa:	 	blmi	10345eb2 <__copy_table_end__+0x341caa>

10001eac <HardFault_Handler>:
.global fault_dump_handler

.global HardFault_Handler
.type HardFault_Handler, % function
HardFault_Handler:
    ldr     r3, =fd_code_stack_base     /* r3 = &fd_code_stack_base */
10001eac:	4b0d      	ldr	r3, [pc, #52]	; (10001ee4 <stack_invalid+0x8>)
    ldr     r1, [r3]                    /* r1 = fd_code_stack_base  */
10001eae:	6819      	ldr	r1, [r3, #0]
    ldr     r3, =fd_code_stack_full     /* r3 = &fd_code_stack_full */
10001eb0:	4b0d      	ldr	r3, [pc, #52]	; (10001ee8 <stack_invalid+0xc>)
    ldr     r2, [r3]                    /* r2 = fd_code_stack_full  */
10001eb2:	681a      	ldr	r2, [r3, #0]

    tst     lr, #4                      /* use exc_return value get sp value */
10001eb4:	f01e 0f04 	tst.w	lr, #4
    ite     eq
10001eb8:	bf0c      	ite	eq
    mrseq   r0, msp                     /* lr & 0x04 == 1, r0 = sp = msp */
10001eba:	f3ef 8008 	mrseq	r0, MSP
    mrsne   r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
10001ebe:	f3ef 8009 	mrsne	r0, PSP

    cmp     r0, r1                      /* compare sp and stack base addr */
10001ec2:	4288      	cmp	r0, r1
    blt     stack_invalid               /* sp < stack_base_addr, sp is invalid */
10001ec4:	db0a      	blt.n	10001edc <stack_invalid>
    cmp     r0, r2                      /* compare sp and stack full addr */
10001ec6:	4290      	cmp	r0, r2
    bgt     stack_invalid               /* sp > stack_base_addr, sp is invalid */
10001ec8:	dc08      	bgt.n	10001edc <stack_invalid>

    push    {r4 - r11}                  /* sp value is in stack range, push r4 - r11 to stack */
10001eca:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}

    tst     lr, #4                      /* update sp value to r0*/
10001ece:	f01e 0f04 	tst.w	lr, #4
    ite     eq
10001ed2:	bf0c      	ite	eq
    mrseq   r0, msp                     /* lr & 0x04 == 1, r0 = sp = msp */
10001ed4:	f3ef 8008 	mrseq	r0, MSP
    mrsne   r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
10001ed8:	f3ef 8009 	mrsne	r0, PSP

10001edc <stack_invalid>:
stack_invalid:
    mov     r1, lr                      /* now, r0 = sp, r1 = lr */
10001edc:	4671      	mov	r1, lr
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
10001ede:	4a03      	ldr	r2, [pc, #12]	; (10001eec <stack_invalid+0x10>)
    bx      r2                          /* jump to fault_dump_handler */                        
10001ee0:	4710      	bx	r2
10001ee2:	055c0000 	ldrbeq	r0, [ip, #-0]
    ldr     r3, =fd_code_stack_base     /* r3 = &fd_code_stack_base */
10001ee6:	05603800 	strbeq	r3, [r0, #-2048]!	; 0xfffff800
    ldr     r3, =fd_code_stack_full     /* r3 = &fd_code_stack_full */
10001eea:	1ca13800 	stcne	8, cr3, [r1]
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
10001eee:	 			; <UNDEFINED> instruction: 0xf0811000

10001ef0 <__aeabi_drsub>:
10001ef0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
10001ef4:	e002      	b.n	10001efc <__adddf3>
10001ef6:	bf00      	nop

10001ef8 <__aeabi_dsub>:
10001ef8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

10001efc <__adddf3>:
10001efc:	b530      	push	{r4, r5, lr}
10001efe:	ea4f 0441 	mov.w	r4, r1, lsl #1
10001f02:	ea4f 0543 	mov.w	r5, r3, lsl #1
10001f06:	ea94 0f05 	teq	r4, r5
10001f0a:	bf08      	it	eq
10001f0c:	ea90 0f02 	teqeq	r0, r2
10001f10:	bf1f      	itttt	ne
10001f12:	ea54 0c00 	orrsne.w	ip, r4, r0
10001f16:	ea55 0c02 	orrsne.w	ip, r5, r2
10001f1a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
10001f1e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
10001f22:	f000 80e2 	beq.w	100020ea <__adddf3+0x1ee>
10001f26:	ea4f 5454 	mov.w	r4, r4, lsr #21
10001f2a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
10001f2e:	bfb8      	it	lt
10001f30:	426d      	neglt	r5, r5
10001f32:	dd0c      	ble.n	10001f4e <__adddf3+0x52>
10001f34:	442c      	add	r4, r5
10001f36:	ea80 0202 	eor.w	r2, r0, r2
10001f3a:	ea81 0303 	eor.w	r3, r1, r3
10001f3e:	ea82 0000 	eor.w	r0, r2, r0
10001f42:	ea83 0101 	eor.w	r1, r3, r1
10001f46:	ea80 0202 	eor.w	r2, r0, r2
10001f4a:	ea81 0303 	eor.w	r3, r1, r3
10001f4e:	2d36      	cmp	r5, #54	; 0x36
10001f50:	bf88      	it	hi
10001f52:	bd30      	pophi	{r4, r5, pc}
10001f54:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
10001f58:	ea4f 3101 	mov.w	r1, r1, lsl #12
10001f5c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
10001f60:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
10001f64:	d002      	beq.n	10001f6c <__adddf3+0x70>
10001f66:	4240      	negs	r0, r0
10001f68:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10001f6c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
10001f70:	ea4f 3303 	mov.w	r3, r3, lsl #12
10001f74:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
10001f78:	d002      	beq.n	10001f80 <__adddf3+0x84>
10001f7a:	4252      	negs	r2, r2
10001f7c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
10001f80:	ea94 0f05 	teq	r4, r5
10001f84:	f000 80a7 	beq.w	100020d6 <__adddf3+0x1da>
10001f88:	f1a4 0401 	sub.w	r4, r4, #1
10001f8c:	f1d5 0e20 	rsbs	lr, r5, #32
10001f90:	db0d      	blt.n	10001fae <__adddf3+0xb2>
10001f92:	fa02 fc0e 	lsl.w	ip, r2, lr
10001f96:	fa22 f205 	lsr.w	r2, r2, r5
10001f9a:	1880      	adds	r0, r0, r2
10001f9c:	f141 0100 	adc.w	r1, r1, #0
10001fa0:	fa03 f20e 	lsl.w	r2, r3, lr
10001fa4:	1880      	adds	r0, r0, r2
10001fa6:	fa43 f305 	asr.w	r3, r3, r5
10001faa:	4159      	adcs	r1, r3
10001fac:	e00e      	b.n	10001fcc <__adddf3+0xd0>
10001fae:	f1a5 0520 	sub.w	r5, r5, #32
10001fb2:	f10e 0e20 	add.w	lr, lr, #32
10001fb6:	2a01      	cmp	r2, #1
10001fb8:	fa03 fc0e 	lsl.w	ip, r3, lr
10001fbc:	bf28      	it	cs
10001fbe:	f04c 0c02 	orrcs.w	ip, ip, #2
10001fc2:	fa43 f305 	asr.w	r3, r3, r5
10001fc6:	18c0      	adds	r0, r0, r3
10001fc8:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
10001fcc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10001fd0:	d507      	bpl.n	10001fe2 <__adddf3+0xe6>
10001fd2:	f04f 0e00 	mov.w	lr, #0
10001fd6:	f1dc 0c00 	rsbs	ip, ip, #0
10001fda:	eb7e 0000 	sbcs.w	r0, lr, r0
10001fde:	eb6e 0101 	sbc.w	r1, lr, r1
10001fe2:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
10001fe6:	d31b      	bcc.n	10002020 <__adddf3+0x124>
10001fe8:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
10001fec:	d30c      	bcc.n	10002008 <__adddf3+0x10c>
10001fee:	0849      	lsrs	r1, r1, #1
10001ff0:	ea5f 0030 	movs.w	r0, r0, rrx
10001ff4:	ea4f 0c3c 	mov.w	ip, ip, rrx
10001ff8:	f104 0401 	add.w	r4, r4, #1
10001ffc:	ea4f 5244 	mov.w	r2, r4, lsl #21
10002000:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
10002004:	f080 809a 	bcs.w	1000213c <__adddf3+0x240>
10002008:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
1000200c:	bf08      	it	eq
1000200e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10002012:	f150 0000 	adcs.w	r0, r0, #0
10002016:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1000201a:	ea41 0105 	orr.w	r1, r1, r5
1000201e:	bd30      	pop	{r4, r5, pc}
10002020:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
10002024:	4140      	adcs	r0, r0
10002026:	eb41 0101 	adc.w	r1, r1, r1
1000202a:	3c01      	subs	r4, #1
1000202c:	bf28      	it	cs
1000202e:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
10002032:	d2e9      	bcs.n	10002008 <__adddf3+0x10c>
10002034:	f091 0f00 	teq	r1, #0
10002038:	bf04      	itt	eq
1000203a:	4601      	moveq	r1, r0
1000203c:	2000      	moveq	r0, #0
1000203e:	fab1 f381 	clz	r3, r1
10002042:	bf08      	it	eq
10002044:	3320      	addeq	r3, #32
10002046:	f1a3 030b 	sub.w	r3, r3, #11
1000204a:	f1b3 0220 	subs.w	r2, r3, #32
1000204e:	da0c      	bge.n	1000206a <__adddf3+0x16e>
10002050:	320c      	adds	r2, #12
10002052:	dd08      	ble.n	10002066 <__adddf3+0x16a>
10002054:	f102 0c14 	add.w	ip, r2, #20
10002058:	f1c2 020c 	rsb	r2, r2, #12
1000205c:	fa01 f00c 	lsl.w	r0, r1, ip
10002060:	fa21 f102 	lsr.w	r1, r1, r2
10002064:	e00c      	b.n	10002080 <__adddf3+0x184>
10002066:	f102 0214 	add.w	r2, r2, #20
1000206a:	bfd8      	it	le
1000206c:	f1c2 0c20 	rsble	ip, r2, #32
10002070:	fa01 f102 	lsl.w	r1, r1, r2
10002074:	fa20 fc0c 	lsr.w	ip, r0, ip
10002078:	bfdc      	itt	le
1000207a:	ea41 010c 	orrle.w	r1, r1, ip
1000207e:	4090      	lslle	r0, r2
10002080:	1ae4      	subs	r4, r4, r3
10002082:	bfa2      	ittt	ge
10002084:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
10002088:	4329      	orrge	r1, r5
1000208a:	bd30      	popge	{r4, r5, pc}
1000208c:	ea6f 0404 	mvn.w	r4, r4
10002090:	3c1f      	subs	r4, #31
10002092:	da1c      	bge.n	100020ce <__adddf3+0x1d2>
10002094:	340c      	adds	r4, #12
10002096:	dc0e      	bgt.n	100020b6 <__adddf3+0x1ba>
10002098:	f104 0414 	add.w	r4, r4, #20
1000209c:	f1c4 0220 	rsb	r2, r4, #32
100020a0:	fa20 f004 	lsr.w	r0, r0, r4
100020a4:	fa01 f302 	lsl.w	r3, r1, r2
100020a8:	ea40 0003 	orr.w	r0, r0, r3
100020ac:	fa21 f304 	lsr.w	r3, r1, r4
100020b0:	ea45 0103 	orr.w	r1, r5, r3
100020b4:	bd30      	pop	{r4, r5, pc}
100020b6:	f1c4 040c 	rsb	r4, r4, #12
100020ba:	f1c4 0220 	rsb	r2, r4, #32
100020be:	fa20 f002 	lsr.w	r0, r0, r2
100020c2:	fa01 f304 	lsl.w	r3, r1, r4
100020c6:	ea40 0003 	orr.w	r0, r0, r3
100020ca:	4629      	mov	r1, r5
100020cc:	bd30      	pop	{r4, r5, pc}
100020ce:	fa21 f004 	lsr.w	r0, r1, r4
100020d2:	4629      	mov	r1, r5
100020d4:	bd30      	pop	{r4, r5, pc}
100020d6:	f094 0f00 	teq	r4, #0
100020da:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
100020de:	bf06      	itte	eq
100020e0:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
100020e4:	3401      	addeq	r4, #1
100020e6:	3d01      	subne	r5, #1
100020e8:	e74e      	b.n	10001f88 <__adddf3+0x8c>
100020ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
100020ee:	bf18      	it	ne
100020f0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
100020f4:	d029      	beq.n	1000214a <__adddf3+0x24e>
100020f6:	ea94 0f05 	teq	r4, r5
100020fa:	bf08      	it	eq
100020fc:	ea90 0f02 	teqeq	r0, r2
10002100:	d005      	beq.n	1000210e <__adddf3+0x212>
10002102:	ea54 0c00 	orrs.w	ip, r4, r0
10002106:	bf04      	itt	eq
10002108:	4619      	moveq	r1, r3
1000210a:	4610      	moveq	r0, r2
1000210c:	bd30      	pop	{r4, r5, pc}
1000210e:	ea91 0f03 	teq	r1, r3
10002112:	bf1e      	ittt	ne
10002114:	2100      	movne	r1, #0
10002116:	2000      	movne	r0, #0
10002118:	bd30      	popne	{r4, r5, pc}
1000211a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
1000211e:	d105      	bne.n	1000212c <__adddf3+0x230>
10002120:	0040      	lsls	r0, r0, #1
10002122:	4149      	adcs	r1, r1
10002124:	bf28      	it	cs
10002126:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
1000212a:	bd30      	pop	{r4, r5, pc}
1000212c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
10002130:	bf3c      	itt	cc
10002132:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
10002136:	bd30      	popcc	{r4, r5, pc}
10002138:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
1000213c:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
10002140:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10002144:	f04f 0000 	mov.w	r0, #0
10002148:	bd30      	pop	{r4, r5, pc}
1000214a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
1000214e:	bf1a      	itte	ne
10002150:	4619      	movne	r1, r3
10002152:	4610      	movne	r0, r2
10002154:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
10002158:	bf1c      	itt	ne
1000215a:	460b      	movne	r3, r1
1000215c:	4602      	movne	r2, r0
1000215e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10002162:	bf06      	itte	eq
10002164:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
10002168:	ea91 0f03 	teqeq	r1, r3
1000216c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
10002170:	bd30      	pop	{r4, r5, pc}
10002172:	bf00      	nop

10002174 <__aeabi_ui2d>:
10002174:	f090 0f00 	teq	r0, #0
10002178:	bf04      	itt	eq
1000217a:	2100      	moveq	r1, #0
1000217c:	4770      	bxeq	lr
1000217e:	b530      	push	{r4, r5, lr}
10002180:	f44f 6480 	mov.w	r4, #1024	; 0x400
10002184:	f104 0432 	add.w	r4, r4, #50	; 0x32
10002188:	f04f 0500 	mov.w	r5, #0
1000218c:	f04f 0100 	mov.w	r1, #0
10002190:	e750      	b.n	10002034 <__adddf3+0x138>
10002192:	bf00      	nop

10002194 <__aeabi_i2d>:
10002194:	f090 0f00 	teq	r0, #0
10002198:	bf04      	itt	eq
1000219a:	2100      	moveq	r1, #0
1000219c:	4770      	bxeq	lr
1000219e:	b530      	push	{r4, r5, lr}
100021a0:	f44f 6480 	mov.w	r4, #1024	; 0x400
100021a4:	f104 0432 	add.w	r4, r4, #50	; 0x32
100021a8:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
100021ac:	bf48      	it	mi
100021ae:	4240      	negmi	r0, r0
100021b0:	f04f 0100 	mov.w	r1, #0
100021b4:	e73e      	b.n	10002034 <__adddf3+0x138>
100021b6:	bf00      	nop

100021b8 <__aeabi_f2d>:
100021b8:	0042      	lsls	r2, r0, #1
100021ba:	ea4f 01e2 	mov.w	r1, r2, asr #3
100021be:	ea4f 0131 	mov.w	r1, r1, rrx
100021c2:	ea4f 7002 	mov.w	r0, r2, lsl #28
100021c6:	bf1f      	itttt	ne
100021c8:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
100021cc:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
100021d0:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
100021d4:	4770      	bxne	lr
100021d6:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
100021da:	bf08      	it	eq
100021dc:	4770      	bxeq	lr
100021de:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
100021e2:	bf04      	itt	eq
100021e4:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
100021e8:	4770      	bxeq	lr
100021ea:	b530      	push	{r4, r5, lr}
100021ec:	f44f 7460 	mov.w	r4, #896	; 0x380
100021f0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
100021f4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
100021f8:	e71c      	b.n	10002034 <__adddf3+0x138>
100021fa:	bf00      	nop

100021fc <__aeabi_ul2d>:
100021fc:	ea50 0201 	orrs.w	r2, r0, r1
10002200:	bf08      	it	eq
10002202:	4770      	bxeq	lr
10002204:	b530      	push	{r4, r5, lr}
10002206:	f04f 0500 	mov.w	r5, #0
1000220a:	e00a      	b.n	10002222 <__aeabi_l2d+0x16>

1000220c <__aeabi_l2d>:
1000220c:	ea50 0201 	orrs.w	r2, r0, r1
10002210:	bf08      	it	eq
10002212:	4770      	bxeq	lr
10002214:	b530      	push	{r4, r5, lr}
10002216:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
1000221a:	d502      	bpl.n	10002222 <__aeabi_l2d+0x16>
1000221c:	4240      	negs	r0, r0
1000221e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10002222:	f44f 6480 	mov.w	r4, #1024	; 0x400
10002226:	f104 0432 	add.w	r4, r4, #50	; 0x32
1000222a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
1000222e:	f43f aed8 	beq.w	10001fe2 <__adddf3+0xe6>
10002232:	f04f 0203 	mov.w	r2, #3
10002236:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1000223a:	bf18      	it	ne
1000223c:	3203      	addne	r2, #3
1000223e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10002242:	bf18      	it	ne
10002244:	3203      	addne	r2, #3
10002246:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
1000224a:	f1c2 0320 	rsb	r3, r2, #32
1000224e:	fa00 fc03 	lsl.w	ip, r0, r3
10002252:	fa20 f002 	lsr.w	r0, r0, r2
10002256:	fa01 fe03 	lsl.w	lr, r1, r3
1000225a:	ea40 000e 	orr.w	r0, r0, lr
1000225e:	fa21 f102 	lsr.w	r1, r1, r2
10002262:	4414      	add	r4, r2
10002264:	e6bd      	b.n	10001fe2 <__adddf3+0xe6>
10002266:	bf00      	nop

10002268 <__aeabi_dmul>:
10002268:	b570      	push	{r4, r5, r6, lr}
1000226a:	f04f 0cff 	mov.w	ip, #255	; 0xff
1000226e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
10002272:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
10002276:	bf1d      	ittte	ne
10002278:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
1000227c:	ea94 0f0c 	teqne	r4, ip
10002280:	ea95 0f0c 	teqne	r5, ip
10002284:	f000 f8de 	bleq	10002444 <__aeabi_dmul+0x1dc>
10002288:	442c      	add	r4, r5
1000228a:	ea81 0603 	eor.w	r6, r1, r3
1000228e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
10002292:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
10002296:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
1000229a:	bf18      	it	ne
1000229c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
100022a0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
100022a4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
100022a8:	d038      	beq.n	1000231c <__aeabi_dmul+0xb4>
100022aa:	fba0 ce02 	umull	ip, lr, r0, r2
100022ae:	f04f 0500 	mov.w	r5, #0
100022b2:	fbe1 e502 	umlal	lr, r5, r1, r2
100022b6:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
100022ba:	fbe0 e503 	umlal	lr, r5, r0, r3
100022be:	f04f 0600 	mov.w	r6, #0
100022c2:	fbe1 5603 	umlal	r5, r6, r1, r3
100022c6:	f09c 0f00 	teq	ip, #0
100022ca:	bf18      	it	ne
100022cc:	f04e 0e01 	orrne.w	lr, lr, #1
100022d0:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
100022d4:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
100022d8:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
100022dc:	d204      	bcs.n	100022e8 <__aeabi_dmul+0x80>
100022de:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
100022e2:	416d      	adcs	r5, r5
100022e4:	eb46 0606 	adc.w	r6, r6, r6
100022e8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
100022ec:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
100022f0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
100022f4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
100022f8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
100022fc:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
10002300:	bf88      	it	hi
10002302:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
10002306:	d81e      	bhi.n	10002346 <__aeabi_dmul+0xde>
10002308:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
1000230c:	bf08      	it	eq
1000230e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
10002312:	f150 0000 	adcs.w	r0, r0, #0
10002316:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
1000231a:	bd70      	pop	{r4, r5, r6, pc}
1000231c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
10002320:	ea46 0101 	orr.w	r1, r6, r1
10002324:	ea40 0002 	orr.w	r0, r0, r2
10002328:	ea81 0103 	eor.w	r1, r1, r3
1000232c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
10002330:	bfc2      	ittt	gt
10002332:	ebd4 050c 	rsbsgt	r5, r4, ip
10002336:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1000233a:	bd70      	popgt	{r4, r5, r6, pc}
1000233c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10002340:	f04f 0e00 	mov.w	lr, #0
10002344:	3c01      	subs	r4, #1
10002346:	f300 80ab 	bgt.w	100024a0 <__aeabi_dmul+0x238>
1000234a:	f114 0f36 	cmn.w	r4, #54	; 0x36
1000234e:	bfde      	ittt	le
10002350:	2000      	movle	r0, #0
10002352:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
10002356:	bd70      	pople	{r4, r5, r6, pc}
10002358:	f1c4 0400 	rsb	r4, r4, #0
1000235c:	3c20      	subs	r4, #32
1000235e:	da35      	bge.n	100023cc <__aeabi_dmul+0x164>
10002360:	340c      	adds	r4, #12
10002362:	dc1b      	bgt.n	1000239c <__aeabi_dmul+0x134>
10002364:	f104 0414 	add.w	r4, r4, #20
10002368:	f1c4 0520 	rsb	r5, r4, #32
1000236c:	fa00 f305 	lsl.w	r3, r0, r5
10002370:	fa20 f004 	lsr.w	r0, r0, r4
10002374:	fa01 f205 	lsl.w	r2, r1, r5
10002378:	ea40 0002 	orr.w	r0, r0, r2
1000237c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
10002380:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
10002384:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10002388:	fa21 f604 	lsr.w	r6, r1, r4
1000238c:	eb42 0106 	adc.w	r1, r2, r6
10002390:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10002394:	bf08      	it	eq
10002396:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1000239a:	bd70      	pop	{r4, r5, r6, pc}
1000239c:	f1c4 040c 	rsb	r4, r4, #12
100023a0:	f1c4 0520 	rsb	r5, r4, #32
100023a4:	fa00 f304 	lsl.w	r3, r0, r4
100023a8:	fa20 f005 	lsr.w	r0, r0, r5
100023ac:	fa01 f204 	lsl.w	r2, r1, r4
100023b0:	ea40 0002 	orr.w	r0, r0, r2
100023b4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100023b8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100023bc:	f141 0100 	adc.w	r1, r1, #0
100023c0:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100023c4:	bf08      	it	eq
100023c6:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100023ca:	bd70      	pop	{r4, r5, r6, pc}
100023cc:	f1c4 0520 	rsb	r5, r4, #32
100023d0:	fa00 f205 	lsl.w	r2, r0, r5
100023d4:	ea4e 0e02 	orr.w	lr, lr, r2
100023d8:	fa20 f304 	lsr.w	r3, r0, r4
100023dc:	fa01 f205 	lsl.w	r2, r1, r5
100023e0:	ea43 0302 	orr.w	r3, r3, r2
100023e4:	fa21 f004 	lsr.w	r0, r1, r4
100023e8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100023ec:	fa21 f204 	lsr.w	r2, r1, r4
100023f0:	ea20 0002 	bic.w	r0, r0, r2
100023f4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
100023f8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100023fc:	bf08      	it	eq
100023fe:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10002402:	bd70      	pop	{r4, r5, r6, pc}
10002404:	f094 0f00 	teq	r4, #0
10002408:	d10f      	bne.n	1000242a <__aeabi_dmul+0x1c2>
1000240a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
1000240e:	0040      	lsls	r0, r0, #1
10002410:	eb41 0101 	adc.w	r1, r1, r1
10002414:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10002418:	bf08      	it	eq
1000241a:	3c01      	subeq	r4, #1
1000241c:	d0f7      	beq.n	1000240e <__aeabi_dmul+0x1a6>
1000241e:	ea41 0106 	orr.w	r1, r1, r6
10002422:	f095 0f00 	teq	r5, #0
10002426:	bf18      	it	ne
10002428:	4770      	bxne	lr
1000242a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
1000242e:	0052      	lsls	r2, r2, #1
10002430:	eb43 0303 	adc.w	r3, r3, r3
10002434:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
10002438:	bf08      	it	eq
1000243a:	3d01      	subeq	r5, #1
1000243c:	d0f7      	beq.n	1000242e <__aeabi_dmul+0x1c6>
1000243e:	ea43 0306 	orr.w	r3, r3, r6
10002442:	4770      	bx	lr
10002444:	ea94 0f0c 	teq	r4, ip
10002448:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1000244c:	bf18      	it	ne
1000244e:	ea95 0f0c 	teqne	r5, ip
10002452:	d00c      	beq.n	1000246e <__aeabi_dmul+0x206>
10002454:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10002458:	bf18      	it	ne
1000245a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1000245e:	d1d1      	bne.n	10002404 <__aeabi_dmul+0x19c>
10002460:	ea81 0103 	eor.w	r1, r1, r3
10002464:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10002468:	f04f 0000 	mov.w	r0, #0
1000246c:	bd70      	pop	{r4, r5, r6, pc}
1000246e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10002472:	bf06      	itte	eq
10002474:	4610      	moveq	r0, r2
10002476:	4619      	moveq	r1, r3
10002478:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1000247c:	d019      	beq.n	100024b2 <__aeabi_dmul+0x24a>
1000247e:	ea94 0f0c 	teq	r4, ip
10002482:	d102      	bne.n	1000248a <__aeabi_dmul+0x222>
10002484:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
10002488:	d113      	bne.n	100024b2 <__aeabi_dmul+0x24a>
1000248a:	ea95 0f0c 	teq	r5, ip
1000248e:	d105      	bne.n	1000249c <__aeabi_dmul+0x234>
10002490:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
10002494:	bf1c      	itt	ne
10002496:	4610      	movne	r0, r2
10002498:	4619      	movne	r1, r3
1000249a:	d10a      	bne.n	100024b2 <__aeabi_dmul+0x24a>
1000249c:	ea81 0103 	eor.w	r1, r1, r3
100024a0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100024a4:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
100024a8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
100024ac:	f04f 0000 	mov.w	r0, #0
100024b0:	bd70      	pop	{r4, r5, r6, pc}
100024b2:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
100024b6:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
100024ba:	bd70      	pop	{r4, r5, r6, pc}

100024bc <__aeabi_ddiv>:
100024bc:	b570      	push	{r4, r5, r6, lr}
100024be:	f04f 0cff 	mov.w	ip, #255	; 0xff
100024c2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
100024c6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
100024ca:	bf1d      	ittte	ne
100024cc:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
100024d0:	ea94 0f0c 	teqne	r4, ip
100024d4:	ea95 0f0c 	teqne	r5, ip
100024d8:	f000 f8a7 	bleq	1000262a <__aeabi_ddiv+0x16e>
100024dc:	eba4 0405 	sub.w	r4, r4, r5
100024e0:	ea81 0e03 	eor.w	lr, r1, r3
100024e4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
100024e8:	ea4f 3101 	mov.w	r1, r1, lsl #12
100024ec:	f000 8088 	beq.w	10002600 <__aeabi_ddiv+0x144>
100024f0:	ea4f 3303 	mov.w	r3, r3, lsl #12
100024f4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
100024f8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
100024fc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
10002500:	ea4f 2202 	mov.w	r2, r2, lsl #8
10002504:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
10002508:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
1000250c:	ea4f 2600 	mov.w	r6, r0, lsl #8
10002510:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
10002514:	429d      	cmp	r5, r3
10002516:	bf08      	it	eq
10002518:	4296      	cmpeq	r6, r2
1000251a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
1000251e:	f504 7440 	add.w	r4, r4, #768	; 0x300
10002522:	d202      	bcs.n	1000252a <__aeabi_ddiv+0x6e>
10002524:	085b      	lsrs	r3, r3, #1
10002526:	ea4f 0232 	mov.w	r2, r2, rrx
1000252a:	1ab6      	subs	r6, r6, r2
1000252c:	eb65 0503 	sbc.w	r5, r5, r3
10002530:	085b      	lsrs	r3, r3, #1
10002532:	ea4f 0232 	mov.w	r2, r2, rrx
10002536:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
1000253a:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
1000253e:	ebb6 0e02 	subs.w	lr, r6, r2
10002542:	eb75 0e03 	sbcs.w	lr, r5, r3
10002546:	bf22      	ittt	cs
10002548:	1ab6      	subcs	r6, r6, r2
1000254a:	4675      	movcs	r5, lr
1000254c:	ea40 000c 	orrcs.w	r0, r0, ip
10002550:	085b      	lsrs	r3, r3, #1
10002552:	ea4f 0232 	mov.w	r2, r2, rrx
10002556:	ebb6 0e02 	subs.w	lr, r6, r2
1000255a:	eb75 0e03 	sbcs.w	lr, r5, r3
1000255e:	bf22      	ittt	cs
10002560:	1ab6      	subcs	r6, r6, r2
10002562:	4675      	movcs	r5, lr
10002564:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
10002568:	085b      	lsrs	r3, r3, #1
1000256a:	ea4f 0232 	mov.w	r2, r2, rrx
1000256e:	ebb6 0e02 	subs.w	lr, r6, r2
10002572:	eb75 0e03 	sbcs.w	lr, r5, r3
10002576:	bf22      	ittt	cs
10002578:	1ab6      	subcs	r6, r6, r2
1000257a:	4675      	movcs	r5, lr
1000257c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
10002580:	085b      	lsrs	r3, r3, #1
10002582:	ea4f 0232 	mov.w	r2, r2, rrx
10002586:	ebb6 0e02 	subs.w	lr, r6, r2
1000258a:	eb75 0e03 	sbcs.w	lr, r5, r3
1000258e:	bf22      	ittt	cs
10002590:	1ab6      	subcs	r6, r6, r2
10002592:	4675      	movcs	r5, lr
10002594:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
10002598:	ea55 0e06 	orrs.w	lr, r5, r6
1000259c:	d018      	beq.n	100025d0 <__aeabi_ddiv+0x114>
1000259e:	ea4f 1505 	mov.w	r5, r5, lsl #4
100025a2:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
100025a6:	ea4f 1606 	mov.w	r6, r6, lsl #4
100025aa:	ea4f 03c3 	mov.w	r3, r3, lsl #3
100025ae:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
100025b2:	ea4f 02c2 	mov.w	r2, r2, lsl #3
100025b6:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
100025ba:	d1c0      	bne.n	1000253e <__aeabi_ddiv+0x82>
100025bc:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
100025c0:	d10b      	bne.n	100025da <__aeabi_ddiv+0x11e>
100025c2:	ea41 0100 	orr.w	r1, r1, r0
100025c6:	f04f 0000 	mov.w	r0, #0
100025ca:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
100025ce:	e7b6      	b.n	1000253e <__aeabi_ddiv+0x82>
100025d0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
100025d4:	bf04      	itt	eq
100025d6:	4301      	orreq	r1, r0
100025d8:	2000      	moveq	r0, #0
100025da:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
100025de:	bf88      	it	hi
100025e0:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
100025e4:	f63f aeaf 	bhi.w	10002346 <__aeabi_dmul+0xde>
100025e8:	ebb5 0c03 	subs.w	ip, r5, r3
100025ec:	bf04      	itt	eq
100025ee:	ebb6 0c02 	subseq.w	ip, r6, r2
100025f2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
100025f6:	f150 0000 	adcs.w	r0, r0, #0
100025fa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
100025fe:	bd70      	pop	{r4, r5, r6, pc}
10002600:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
10002604:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
10002608:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
1000260c:	bfc2      	ittt	gt
1000260e:	ebd4 050c 	rsbsgt	r5, r4, ip
10002612:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10002616:	bd70      	popgt	{r4, r5, r6, pc}
10002618:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1000261c:	f04f 0e00 	mov.w	lr, #0
10002620:	3c01      	subs	r4, #1
10002622:	e690      	b.n	10002346 <__aeabi_dmul+0xde>
10002624:	ea45 0e06 	orr.w	lr, r5, r6
10002628:	e68d      	b.n	10002346 <__aeabi_dmul+0xde>
1000262a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
1000262e:	ea94 0f0c 	teq	r4, ip
10002632:	bf08      	it	eq
10002634:	ea95 0f0c 	teqeq	r5, ip
10002638:	f43f af3b 	beq.w	100024b2 <__aeabi_dmul+0x24a>
1000263c:	ea94 0f0c 	teq	r4, ip
10002640:	d10a      	bne.n	10002658 <__aeabi_ddiv+0x19c>
10002642:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10002646:	f47f af34 	bne.w	100024b2 <__aeabi_dmul+0x24a>
1000264a:	ea95 0f0c 	teq	r5, ip
1000264e:	f47f af25 	bne.w	1000249c <__aeabi_dmul+0x234>
10002652:	4610      	mov	r0, r2
10002654:	4619      	mov	r1, r3
10002656:	e72c      	b.n	100024b2 <__aeabi_dmul+0x24a>
10002658:	ea95 0f0c 	teq	r5, ip
1000265c:	d106      	bne.n	1000266c <__aeabi_ddiv+0x1b0>
1000265e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10002662:	f43f aefd 	beq.w	10002460 <__aeabi_dmul+0x1f8>
10002666:	4610      	mov	r0, r2
10002668:	4619      	mov	r1, r3
1000266a:	e722      	b.n	100024b2 <__aeabi_dmul+0x24a>
1000266c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10002670:	bf18      	it	ne
10002672:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10002676:	f47f aec5 	bne.w	10002404 <__aeabi_dmul+0x19c>
1000267a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
1000267e:	f47f af0d 	bne.w	1000249c <__aeabi_dmul+0x234>
10002682:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
10002686:	f47f aeeb 	bne.w	10002460 <__aeabi_dmul+0x1f8>
1000268a:	e712      	b.n	100024b2 <__aeabi_dmul+0x24a>

1000268c <__gedf2>:
1000268c:	f04f 3cff 	mov.w	ip, #4294967295
10002690:	e006      	b.n	100026a0 <__cmpdf2+0x4>
10002692:	bf00      	nop

10002694 <__ledf2>:
10002694:	f04f 0c01 	mov.w	ip, #1
10002698:	e002      	b.n	100026a0 <__cmpdf2+0x4>
1000269a:	bf00      	nop

1000269c <__cmpdf2>:
1000269c:	f04f 0c01 	mov.w	ip, #1
100026a0:	f84d cd04 	str.w	ip, [sp, #-4]!
100026a4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
100026a8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100026ac:	ea4f 0c43 	mov.w	ip, r3, lsl #1
100026b0:	bf18      	it	ne
100026b2:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
100026b6:	d01b      	beq.n	100026f0 <__cmpdf2+0x54>
100026b8:	b001      	add	sp, #4
100026ba:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
100026be:	bf0c      	ite	eq
100026c0:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
100026c4:	ea91 0f03 	teqne	r1, r3
100026c8:	bf02      	ittt	eq
100026ca:	ea90 0f02 	teqeq	r0, r2
100026ce:	2000      	moveq	r0, #0
100026d0:	4770      	bxeq	lr
100026d2:	f110 0f00 	cmn.w	r0, #0
100026d6:	ea91 0f03 	teq	r1, r3
100026da:	bf58      	it	pl
100026dc:	4299      	cmppl	r1, r3
100026de:	bf08      	it	eq
100026e0:	4290      	cmpeq	r0, r2
100026e2:	bf2c      	ite	cs
100026e4:	17d8      	asrcs	r0, r3, #31
100026e6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
100026ea:	f040 0001 	orr.w	r0, r0, #1
100026ee:	4770      	bx	lr
100026f0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
100026f4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100026f8:	d102      	bne.n	10002700 <__cmpdf2+0x64>
100026fa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
100026fe:	d107      	bne.n	10002710 <__cmpdf2+0x74>
10002700:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10002704:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10002708:	d1d6      	bne.n	100026b8 <__cmpdf2+0x1c>
1000270a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
1000270e:	d0d3      	beq.n	100026b8 <__cmpdf2+0x1c>
10002710:	f85d 0b04 	ldr.w	r0, [sp], #4
10002714:	4770      	bx	lr
10002716:	bf00      	nop

10002718 <__aeabi_cdrcmple>:
10002718:	4684      	mov	ip, r0
1000271a:	4610      	mov	r0, r2
1000271c:	4662      	mov	r2, ip
1000271e:	468c      	mov	ip, r1
10002720:	4619      	mov	r1, r3
10002722:	4663      	mov	r3, ip
10002724:	e000      	b.n	10002728 <__aeabi_cdcmpeq>
10002726:	bf00      	nop

10002728 <__aeabi_cdcmpeq>:
10002728:	b501      	push	{r0, lr}
1000272a:	f7ff ffb7 	bl	1000269c <__cmpdf2>
1000272e:	2800      	cmp	r0, #0
10002730:	bf48      	it	mi
10002732:	f110 0f00 	cmnmi.w	r0, #0
10002736:	bd01      	pop	{r0, pc}

10002738 <__aeabi_dcmpeq>:
10002738:	f84d ed08 	str.w	lr, [sp, #-8]!
1000273c:	f7ff fff4 	bl	10002728 <__aeabi_cdcmpeq>
10002740:	bf0c      	ite	eq
10002742:	2001      	moveq	r0, #1
10002744:	2000      	movne	r0, #0
10002746:	f85d fb08 	ldr.w	pc, [sp], #8
1000274a:	bf00      	nop

1000274c <__aeabi_dcmplt>:
1000274c:	f84d ed08 	str.w	lr, [sp, #-8]!
10002750:	f7ff ffea 	bl	10002728 <__aeabi_cdcmpeq>
10002754:	bf34      	ite	cc
10002756:	2001      	movcc	r0, #1
10002758:	2000      	movcs	r0, #0
1000275a:	f85d fb08 	ldr.w	pc, [sp], #8
1000275e:	bf00      	nop

10002760 <__aeabi_dcmple>:
10002760:	f84d ed08 	str.w	lr, [sp, #-8]!
10002764:	f7ff ffe0 	bl	10002728 <__aeabi_cdcmpeq>
10002768:	bf94      	ite	ls
1000276a:	2001      	movls	r0, #1
1000276c:	2000      	movhi	r0, #0
1000276e:	f85d fb08 	ldr.w	pc, [sp], #8
10002772:	bf00      	nop

10002774 <__aeabi_dcmpge>:
10002774:	f84d ed08 	str.w	lr, [sp, #-8]!
10002778:	f7ff ffce 	bl	10002718 <__aeabi_cdrcmple>
1000277c:	bf94      	ite	ls
1000277e:	2001      	movls	r0, #1
10002780:	2000      	movhi	r0, #0
10002782:	f85d fb08 	ldr.w	pc, [sp], #8
10002786:	bf00      	nop

10002788 <__aeabi_dcmpgt>:
10002788:	f84d ed08 	str.w	lr, [sp, #-8]!
1000278c:	f7ff ffc4 	bl	10002718 <__aeabi_cdrcmple>
10002790:	bf34      	ite	cc
10002792:	2001      	movcc	r0, #1
10002794:	2000      	movcs	r0, #0
10002796:	f85d fb08 	ldr.w	pc, [sp], #8
1000279a:	bf00      	nop

1000279c <__aeabi_d2iz>:
1000279c:	ea4f 0241 	mov.w	r2, r1, lsl #1
100027a0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
100027a4:	d215      	bcs.n	100027d2 <__aeabi_d2iz+0x36>
100027a6:	d511      	bpl.n	100027cc <__aeabi_d2iz+0x30>
100027a8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
100027ac:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
100027b0:	d912      	bls.n	100027d8 <__aeabi_d2iz+0x3c>
100027b2:	ea4f 23c1 	mov.w	r3, r1, lsl #11
100027b6:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
100027ba:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
100027be:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
100027c2:	fa23 f002 	lsr.w	r0, r3, r2
100027c6:	bf18      	it	ne
100027c8:	4240      	negne	r0, r0
100027ca:	4770      	bx	lr
100027cc:	f04f 0000 	mov.w	r0, #0
100027d0:	4770      	bx	lr
100027d2:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
100027d6:	d105      	bne.n	100027e4 <__aeabi_d2iz+0x48>
100027d8:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
100027dc:	bf08      	it	eq
100027de:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
100027e2:	4770      	bx	lr
100027e4:	f04f 0000 	mov.w	r0, #0
100027e8:	4770      	bx	lr
100027ea:	bf00      	nop

100027ec <__aeabi_d2uiz>:
100027ec:	004a      	lsls	r2, r1, #1
100027ee:	d211      	bcs.n	10002814 <__aeabi_d2uiz+0x28>
100027f0:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
100027f4:	d211      	bcs.n	1000281a <__aeabi_d2uiz+0x2e>
100027f6:	d50d      	bpl.n	10002814 <__aeabi_d2uiz+0x28>
100027f8:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
100027fc:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10002800:	d40e      	bmi.n	10002820 <__aeabi_d2uiz+0x34>
10002802:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10002806:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
1000280a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
1000280e:	fa23 f002 	lsr.w	r0, r3, r2
10002812:	4770      	bx	lr
10002814:	f04f 0000 	mov.w	r0, #0
10002818:	4770      	bx	lr
1000281a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
1000281e:	d102      	bne.n	10002826 <__aeabi_d2uiz+0x3a>
10002820:	f04f 30ff 	mov.w	r0, #4294967295
10002824:	4770      	bx	lr
10002826:	f04f 0000 	mov.w	r0, #0
1000282a:	4770      	bx	lr

1000282c <__aeabi_uldivmod>:
1000282c:	b953      	cbnz	r3, 10002844 <__aeabi_uldivmod+0x18>
1000282e:	b94a      	cbnz	r2, 10002844 <__aeabi_uldivmod+0x18>
10002830:	2900      	cmp	r1, #0
10002832:	bf08      	it	eq
10002834:	2800      	cmpeq	r0, #0
10002836:	bf1c      	itt	ne
10002838:	f04f 31ff 	movne.w	r1, #4294967295
1000283c:	f04f 30ff 	movne.w	r0, #4294967295
10002840:	f001 b934 	b.w	10003aac <__aeabi_idiv0>
10002844:	f1ad 0c08 	sub.w	ip, sp, #8
10002848:	e96d ce04 	strd	ip, lr, [sp, #-16]!
1000284c:	f000 f806 	bl	1000285c <__udivmoddi4>
10002850:	f8dd e004 	ldr.w	lr, [sp, #4]
10002854:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10002858:	b004      	add	sp, #16
1000285a:	4770      	bx	lr

1000285c <__udivmoddi4>:
1000285c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10002860:	9d09      	ldr	r5, [sp, #36]	; 0x24
10002862:	4604      	mov	r4, r0
10002864:	460f      	mov	r7, r1
10002866:	2b00      	cmp	r3, #0
10002868:	d148      	bne.n	100028fc <__udivmoddi4+0xa0>
1000286a:	428a      	cmp	r2, r1
1000286c:	4694      	mov	ip, r2
1000286e:	d961      	bls.n	10002934 <__udivmoddi4+0xd8>
10002870:	fab2 f382 	clz	r3, r2
10002874:	b143      	cbz	r3, 10002888 <__udivmoddi4+0x2c>
10002876:	f1c3 0120 	rsb	r1, r3, #32
1000287a:	409f      	lsls	r7, r3
1000287c:	fa02 fc03 	lsl.w	ip, r2, r3
10002880:	409c      	lsls	r4, r3
10002882:	fa20 f101 	lsr.w	r1, r0, r1
10002886:	430f      	orrs	r7, r1
10002888:	ea4f 411c 	mov.w	r1, ip, lsr #16
1000288c:	fa1f fe8c 	uxth.w	lr, ip
10002890:	0c22      	lsrs	r2, r4, #16
10002892:	fbb7 f6f1 	udiv	r6, r7, r1
10002896:	fb01 7716 	mls	r7, r1, r6, r7
1000289a:	fb06 f00e 	mul.w	r0, r6, lr
1000289e:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
100028a2:	4290      	cmp	r0, r2
100028a4:	d908      	bls.n	100028b8 <__udivmoddi4+0x5c>
100028a6:	eb1c 0202 	adds.w	r2, ip, r2
100028aa:	f106 37ff 	add.w	r7, r6, #4294967295
100028ae:	d202      	bcs.n	100028b6 <__udivmoddi4+0x5a>
100028b0:	4290      	cmp	r0, r2
100028b2:	f200 8137 	bhi.w	10002b24 <__udivmoddi4+0x2c8>
100028b6:	463e      	mov	r6, r7
100028b8:	1a12      	subs	r2, r2, r0
100028ba:	b2a4      	uxth	r4, r4
100028bc:	fbb2 f0f1 	udiv	r0, r2, r1
100028c0:	fb01 2210 	mls	r2, r1, r0, r2
100028c4:	fb00 fe0e 	mul.w	lr, r0, lr
100028c8:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
100028cc:	45a6      	cmp	lr, r4
100028ce:	d908      	bls.n	100028e2 <__udivmoddi4+0x86>
100028d0:	eb1c 0404 	adds.w	r4, ip, r4
100028d4:	f100 32ff 	add.w	r2, r0, #4294967295
100028d8:	d202      	bcs.n	100028e0 <__udivmoddi4+0x84>
100028da:	45a6      	cmp	lr, r4
100028dc:	f200 811c 	bhi.w	10002b18 <__udivmoddi4+0x2bc>
100028e0:	4610      	mov	r0, r2
100028e2:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
100028e6:	eba4 040e 	sub.w	r4, r4, lr
100028ea:	2600      	movs	r6, #0
100028ec:	b11d      	cbz	r5, 100028f6 <__udivmoddi4+0x9a>
100028ee:	40dc      	lsrs	r4, r3
100028f0:	2300      	movs	r3, #0
100028f2:	e9c5 4300 	strd	r4, r3, [r5]
100028f6:	4631      	mov	r1, r6
100028f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100028fc:	428b      	cmp	r3, r1
100028fe:	d909      	bls.n	10002914 <__udivmoddi4+0xb8>
10002900:	2d00      	cmp	r5, #0
10002902:	f000 80fd 	beq.w	10002b00 <__udivmoddi4+0x2a4>
10002906:	2600      	movs	r6, #0
10002908:	e9c5 0100 	strd	r0, r1, [r5]
1000290c:	4630      	mov	r0, r6
1000290e:	4631      	mov	r1, r6
10002910:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10002914:	fab3 f683 	clz	r6, r3
10002918:	2e00      	cmp	r6, #0
1000291a:	d14b      	bne.n	100029b4 <__udivmoddi4+0x158>
1000291c:	428b      	cmp	r3, r1
1000291e:	f0c0 80f2 	bcc.w	10002b06 <__udivmoddi4+0x2aa>
10002922:	4282      	cmp	r2, r0
10002924:	f240 80ef 	bls.w	10002b06 <__udivmoddi4+0x2aa>
10002928:	4630      	mov	r0, r6
1000292a:	2d00      	cmp	r5, #0
1000292c:	d0e3      	beq.n	100028f6 <__udivmoddi4+0x9a>
1000292e:	e9c5 4700 	strd	r4, r7, [r5]
10002932:	e7e0      	b.n	100028f6 <__udivmoddi4+0x9a>
10002934:	b902      	cbnz	r2, 10002938 <__udivmoddi4+0xdc>
10002936:	deff      	udf	#255	; 0xff
10002938:	fab2 f382 	clz	r3, r2
1000293c:	2b00      	cmp	r3, #0
1000293e:	f040 809d 	bne.w	10002a7c <__udivmoddi4+0x220>
10002942:	1a89      	subs	r1, r1, r2
10002944:	ea4f 4e12 	mov.w	lr, r2, lsr #16
10002948:	b297      	uxth	r7, r2
1000294a:	2601      	movs	r6, #1
1000294c:	0c20      	lsrs	r0, r4, #16
1000294e:	fbb1 f2fe 	udiv	r2, r1, lr
10002952:	fb0e 1112 	mls	r1, lr, r2, r1
10002956:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
1000295a:	fb07 f002 	mul.w	r0, r7, r2
1000295e:	4288      	cmp	r0, r1
10002960:	d90f      	bls.n	10002982 <__udivmoddi4+0x126>
10002962:	eb1c 0101 	adds.w	r1, ip, r1
10002966:	f102 38ff 	add.w	r8, r2, #4294967295
1000296a:	bf2c      	ite	cs
1000296c:	f04f 0901 	movcs.w	r9, #1
10002970:	f04f 0900 	movcc.w	r9, #0
10002974:	4288      	cmp	r0, r1
10002976:	d903      	bls.n	10002980 <__udivmoddi4+0x124>
10002978:	f1b9 0f00 	cmp.w	r9, #0
1000297c:	f000 80cf 	beq.w	10002b1e <__udivmoddi4+0x2c2>
10002980:	4642      	mov	r2, r8
10002982:	1a09      	subs	r1, r1, r0
10002984:	b2a4      	uxth	r4, r4
10002986:	fbb1 f0fe 	udiv	r0, r1, lr
1000298a:	fb0e 1110 	mls	r1, lr, r0, r1
1000298e:	fb00 f707 	mul.w	r7, r0, r7
10002992:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
10002996:	42a7      	cmp	r7, r4
10002998:	d908      	bls.n	100029ac <__udivmoddi4+0x150>
1000299a:	eb1c 0404 	adds.w	r4, ip, r4
1000299e:	f100 31ff 	add.w	r1, r0, #4294967295
100029a2:	d202      	bcs.n	100029aa <__udivmoddi4+0x14e>
100029a4:	42a7      	cmp	r7, r4
100029a6:	f200 80b4 	bhi.w	10002b12 <__udivmoddi4+0x2b6>
100029aa:	4608      	mov	r0, r1
100029ac:	1be4      	subs	r4, r4, r7
100029ae:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
100029b2:	e79b      	b.n	100028ec <__udivmoddi4+0x90>
100029b4:	f1c6 0720 	rsb	r7, r6, #32
100029b8:	40b3      	lsls	r3, r6
100029ba:	fa01 f406 	lsl.w	r4, r1, r6
100029be:	fa22 fc07 	lsr.w	ip, r2, r7
100029c2:	40f9      	lsrs	r1, r7
100029c4:	40b2      	lsls	r2, r6
100029c6:	ea4c 0c03 	orr.w	ip, ip, r3
100029ca:	fa20 f307 	lsr.w	r3, r0, r7
100029ce:	ea4f 491c 	mov.w	r9, ip, lsr #16
100029d2:	431c      	orrs	r4, r3
100029d4:	fa1f fe8c 	uxth.w	lr, ip
100029d8:	fa00 f306 	lsl.w	r3, r0, r6
100029dc:	0c20      	lsrs	r0, r4, #16
100029de:	fbb1 f8f9 	udiv	r8, r1, r9
100029e2:	fb09 1118 	mls	r1, r9, r8, r1
100029e6:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
100029ea:	fb08 f00e 	mul.w	r0, r8, lr
100029ee:	4288      	cmp	r0, r1
100029f0:	d90f      	bls.n	10002a12 <__udivmoddi4+0x1b6>
100029f2:	eb1c 0101 	adds.w	r1, ip, r1
100029f6:	f108 3aff 	add.w	sl, r8, #4294967295
100029fa:	bf2c      	ite	cs
100029fc:	f04f 0b01 	movcs.w	fp, #1
10002a00:	f04f 0b00 	movcc.w	fp, #0
10002a04:	4288      	cmp	r0, r1
10002a06:	d903      	bls.n	10002a10 <__udivmoddi4+0x1b4>
10002a08:	f1bb 0f00 	cmp.w	fp, #0
10002a0c:	f000 808d 	beq.w	10002b2a <__udivmoddi4+0x2ce>
10002a10:	46d0      	mov	r8, sl
10002a12:	1a09      	subs	r1, r1, r0
10002a14:	b2a4      	uxth	r4, r4
10002a16:	fbb1 f0f9 	udiv	r0, r1, r9
10002a1a:	fb09 1110 	mls	r1, r9, r0, r1
10002a1e:	fb00 fe0e 	mul.w	lr, r0, lr
10002a22:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
10002a26:	458e      	cmp	lr, r1
10002a28:	d907      	bls.n	10002a3a <__udivmoddi4+0x1de>
10002a2a:	eb1c 0101 	adds.w	r1, ip, r1
10002a2e:	f100 34ff 	add.w	r4, r0, #4294967295
10002a32:	d201      	bcs.n	10002a38 <__udivmoddi4+0x1dc>
10002a34:	458e      	cmp	lr, r1
10002a36:	d87f      	bhi.n	10002b38 <__udivmoddi4+0x2dc>
10002a38:	4620      	mov	r0, r4
10002a3a:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
10002a3e:	eba1 010e 	sub.w	r1, r1, lr
10002a42:	fba0 9802 	umull	r9, r8, r0, r2
10002a46:	4541      	cmp	r1, r8
10002a48:	464c      	mov	r4, r9
10002a4a:	46c6      	mov	lr, r8
10002a4c:	d302      	bcc.n	10002a54 <__udivmoddi4+0x1f8>
10002a4e:	d106      	bne.n	10002a5e <__udivmoddi4+0x202>
10002a50:	454b      	cmp	r3, r9
10002a52:	d204      	bcs.n	10002a5e <__udivmoddi4+0x202>
10002a54:	3801      	subs	r0, #1
10002a56:	ebb9 0402 	subs.w	r4, r9, r2
10002a5a:	eb68 0e0c 	sbc.w	lr, r8, ip
10002a5e:	2d00      	cmp	r5, #0
10002a60:	d070      	beq.n	10002b44 <__udivmoddi4+0x2e8>
10002a62:	1b1a      	subs	r2, r3, r4
10002a64:	eb61 010e 	sbc.w	r1, r1, lr
10002a68:	fa22 f306 	lsr.w	r3, r2, r6
10002a6c:	fa01 f707 	lsl.w	r7, r1, r7
10002a70:	40f1      	lsrs	r1, r6
10002a72:	2600      	movs	r6, #0
10002a74:	431f      	orrs	r7, r3
10002a76:	e9c5 7100 	strd	r7, r1, [r5]
10002a7a:	e73c      	b.n	100028f6 <__udivmoddi4+0x9a>
10002a7c:	fa02 fc03 	lsl.w	ip, r2, r3
10002a80:	f1c3 0020 	rsb	r0, r3, #32
10002a84:	fa01 f203 	lsl.w	r2, r1, r3
10002a88:	fa21 f600 	lsr.w	r6, r1, r0
10002a8c:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
10002a90:	fa24 f100 	lsr.w	r1, r4, r0
10002a94:	fa1f f78c 	uxth.w	r7, ip
10002a98:	409c      	lsls	r4, r3
10002a9a:	4311      	orrs	r1, r2
10002a9c:	fbb6 f0fe 	udiv	r0, r6, lr
10002aa0:	0c0a      	lsrs	r2, r1, #16
10002aa2:	fb0e 6610 	mls	r6, lr, r0, r6
10002aa6:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
10002aaa:	fb00 f607 	mul.w	r6, r0, r7
10002aae:	4296      	cmp	r6, r2
10002ab0:	d90e      	bls.n	10002ad0 <__udivmoddi4+0x274>
10002ab2:	eb1c 0202 	adds.w	r2, ip, r2
10002ab6:	f100 38ff 	add.w	r8, r0, #4294967295
10002aba:	bf2c      	ite	cs
10002abc:	f04f 0901 	movcs.w	r9, #1
10002ac0:	f04f 0900 	movcc.w	r9, #0
10002ac4:	4296      	cmp	r6, r2
10002ac6:	d902      	bls.n	10002ace <__udivmoddi4+0x272>
10002ac8:	f1b9 0f00 	cmp.w	r9, #0
10002acc:	d031      	beq.n	10002b32 <__udivmoddi4+0x2d6>
10002ace:	4640      	mov	r0, r8
10002ad0:	1b92      	subs	r2, r2, r6
10002ad2:	b289      	uxth	r1, r1
10002ad4:	fbb2 f6fe 	udiv	r6, r2, lr
10002ad8:	fb0e 2216 	mls	r2, lr, r6, r2
10002adc:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
10002ae0:	fb06 f207 	mul.w	r2, r6, r7
10002ae4:	428a      	cmp	r2, r1
10002ae6:	d907      	bls.n	10002af8 <__udivmoddi4+0x29c>
10002ae8:	eb1c 0101 	adds.w	r1, ip, r1
10002aec:	f106 38ff 	add.w	r8, r6, #4294967295
10002af0:	d201      	bcs.n	10002af6 <__udivmoddi4+0x29a>
10002af2:	428a      	cmp	r2, r1
10002af4:	d823      	bhi.n	10002b3e <__udivmoddi4+0x2e2>
10002af6:	4646      	mov	r6, r8
10002af8:	1a89      	subs	r1, r1, r2
10002afa:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
10002afe:	e725      	b.n	1000294c <__udivmoddi4+0xf0>
10002b00:	462e      	mov	r6, r5
10002b02:	4628      	mov	r0, r5
10002b04:	e6f7      	b.n	100028f6 <__udivmoddi4+0x9a>
10002b06:	1a84      	subs	r4, r0, r2
10002b08:	eb61 0303 	sbc.w	r3, r1, r3
10002b0c:	2001      	movs	r0, #1
10002b0e:	461f      	mov	r7, r3
10002b10:	e70b      	b.n	1000292a <__udivmoddi4+0xce>
10002b12:	4464      	add	r4, ip
10002b14:	3802      	subs	r0, #2
10002b16:	e749      	b.n	100029ac <__udivmoddi4+0x150>
10002b18:	4464      	add	r4, ip
10002b1a:	3802      	subs	r0, #2
10002b1c:	e6e1      	b.n	100028e2 <__udivmoddi4+0x86>
10002b1e:	3a02      	subs	r2, #2
10002b20:	4461      	add	r1, ip
10002b22:	e72e      	b.n	10002982 <__udivmoddi4+0x126>
10002b24:	3e02      	subs	r6, #2
10002b26:	4462      	add	r2, ip
10002b28:	e6c6      	b.n	100028b8 <__udivmoddi4+0x5c>
10002b2a:	f1a8 0802 	sub.w	r8, r8, #2
10002b2e:	4461      	add	r1, ip
10002b30:	e76f      	b.n	10002a12 <__udivmoddi4+0x1b6>
10002b32:	3802      	subs	r0, #2
10002b34:	4462      	add	r2, ip
10002b36:	e7cb      	b.n	10002ad0 <__udivmoddi4+0x274>
10002b38:	3802      	subs	r0, #2
10002b3a:	4461      	add	r1, ip
10002b3c:	e77d      	b.n	10002a3a <__udivmoddi4+0x1de>
10002b3e:	3e02      	subs	r6, #2
10002b40:	4461      	add	r1, ip
10002b42:	e7d9      	b.n	10002af8 <__udivmoddi4+0x29c>
10002b44:	462e      	mov	r6, r5
10002b46:	e6d6      	b.n	100028f6 <__udivmoddi4+0x9a>

10002b48 <selfrel_offset31>:
10002b48:	6803      	ldr	r3, [r0, #0]
10002b4a:	005a      	lsls	r2, r3, #1
10002b4c:	bf4c      	ite	mi
10002b4e:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
10002b52:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
10002b56:	4418      	add	r0, r3
10002b58:	4770      	bx	lr
10002b5a:	bf00      	nop

10002b5c <search_EIT_table>:
10002b5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10002b60:	b339      	cbz	r1, 10002bb2 <search_EIT_table+0x56>
10002b62:	f101 38ff 	add.w	r8, r1, #4294967295
10002b66:	4606      	mov	r6, r0
10002b68:	4617      	mov	r7, r2
10002b6a:	f04f 0900 	mov.w	r9, #0
10002b6e:	4645      	mov	r5, r8
10002b70:	eb19 0105 	adds.w	r1, r9, r5
10002b74:	bf48      	it	mi
10002b76:	3101      	addmi	r1, #1
10002b78:	1049      	asrs	r1, r1, #1
10002b7a:	eb06 0ac1 	add.w	sl, r6, r1, lsl #3
10002b7e:	00cc      	lsls	r4, r1, #3
10002b80:	4650      	mov	r0, sl
10002b82:	f7ff ffe1 	bl	10002b48 <selfrel_offset31>
10002b86:	3408      	adds	r4, #8
10002b88:	4588      	cmp	r8, r1
10002b8a:	4603      	mov	r3, r0
10002b8c:	eb06 0004 	add.w	r0, r6, r4
10002b90:	d009      	beq.n	10002ba6 <search_EIT_table+0x4a>
10002b92:	42bb      	cmp	r3, r7
10002b94:	d809      	bhi.n	10002baa <search_EIT_table+0x4e>
10002b96:	f7ff ffd7 	bl	10002b48 <selfrel_offset31>
10002b9a:	3801      	subs	r0, #1
10002b9c:	f101 0901 	add.w	r9, r1, #1
10002ba0:	42b8      	cmp	r0, r7
10002ba2:	d3e5      	bcc.n	10002b70 <search_EIT_table+0x14>
10002ba4:	e007      	b.n	10002bb6 <search_EIT_table+0x5a>
10002ba6:	42bb      	cmp	r3, r7
10002ba8:	d905      	bls.n	10002bb6 <search_EIT_table+0x5a>
10002baa:	4589      	cmp	r9, r1
10002bac:	f101 35ff 	add.w	r5, r1, #4294967295
10002bb0:	d1de      	bne.n	10002b70 <search_EIT_table+0x14>
10002bb2:	f04f 0a00 	mov.w	sl, #0
10002bb6:	4650      	mov	r0, sl
10002bb8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

10002bbc <__gnu_unwind_get_pr_addr>:
10002bbc:	2801      	cmp	r0, #1
10002bbe:	d007      	beq.n	10002bd0 <__gnu_unwind_get_pr_addr+0x14>
10002bc0:	2802      	cmp	r0, #2
10002bc2:	d007      	beq.n	10002bd4 <__gnu_unwind_get_pr_addr+0x18>
10002bc4:	2800      	cmp	r0, #0
10002bc6:	4b04      	ldr	r3, [pc, #16]	; (10002bd8 <__gnu_unwind_get_pr_addr+0x1c>)
10002bc8:	bf14      	ite	ne
10002bca:	2000      	movne	r0, #0
10002bcc:	4618      	moveq	r0, r3
10002bce:	4770      	bx	lr
10002bd0:	4802      	ldr	r0, [pc, #8]	; (10002bdc <__gnu_unwind_get_pr_addr+0x20>)
10002bd2:	4770      	bx	lr
10002bd4:	4802      	ldr	r0, [pc, #8]	; (10002be0 <__gnu_unwind_get_pr_addr+0x24>)
10002bd6:	4770      	bx	lr
10002bd8:	100032cd 	andne	r3, r0, sp, asr #5
10002bdc:	100032d1 	ldrdne	r3, [r0], -r1
10002be0:	100032d5 	ldrdne	r3, [r0], -r5

10002be4 <get_eit_entry>:
10002be4:	4b23      	ldr	r3, [pc, #140]	; (10002c74 <get_eit_entry+0x90>)
10002be6:	b530      	push	{r4, r5, lr}
10002be8:	4604      	mov	r4, r0
10002bea:	b083      	sub	sp, #12
10002bec:	1e8d      	subs	r5, r1, #2
10002bee:	b343      	cbz	r3, 10002c42 <get_eit_entry+0x5e>
10002bf0:	a901      	add	r1, sp, #4
10002bf2:	4628      	mov	r0, r5
10002bf4:	e000      	b.n	10002bf8 <get_eit_entry+0x14>
10002bf6:	bf00      	nop
10002bf8:	b1f0      	cbz	r0, 10002c38 <get_eit_entry+0x54>
10002bfa:	9901      	ldr	r1, [sp, #4]
10002bfc:	462a      	mov	r2, r5
10002bfe:	f7ff ffad 	bl	10002b5c <search_EIT_table>
10002c02:	4601      	mov	r1, r0
10002c04:	b1c0      	cbz	r0, 10002c38 <get_eit_entry+0x54>
10002c06:	f7ff ff9f 	bl	10002b48 <selfrel_offset31>
10002c0a:	684b      	ldr	r3, [r1, #4]
10002c0c:	64a0      	str	r0, [r4, #72]	; 0x48
10002c0e:	2b01      	cmp	r3, #1
10002c10:	d02c      	beq.n	10002c6c <get_eit_entry+0x88>
10002c12:	2b00      	cmp	r3, #0
10002c14:	f101 0004 	add.w	r0, r1, #4
10002c18:	db24      	blt.n	10002c64 <get_eit_entry+0x80>
10002c1a:	f7ff ff95 	bl	10002b48 <selfrel_offset31>
10002c1e:	2300      	movs	r3, #0
10002c20:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10002c24:	6803      	ldr	r3, [r0, #0]
10002c26:	2b00      	cmp	r3, #0
10002c28:	db11      	blt.n	10002c4e <get_eit_entry+0x6a>
10002c2a:	f7ff ff8d 	bl	10002b48 <selfrel_offset31>
10002c2e:	4603      	mov	r3, r0
10002c30:	2000      	movs	r0, #0
10002c32:	6123      	str	r3, [r4, #16]
10002c34:	b003      	add	sp, #12
10002c36:	bd30      	pop	{r4, r5, pc}
10002c38:	2300      	movs	r3, #0
10002c3a:	2009      	movs	r0, #9
10002c3c:	6123      	str	r3, [r4, #16]
10002c3e:	b003      	add	sp, #12
10002c40:	bd30      	pop	{r4, r5, pc}
10002c42:	480d      	ldr	r0, [pc, #52]	; (10002c78 <get_eit_entry+0x94>)
10002c44:	490d      	ldr	r1, [pc, #52]	; (10002c7c <get_eit_entry+0x98>)
10002c46:	1a09      	subs	r1, r1, r0
10002c48:	10c9      	asrs	r1, r1, #3
10002c4a:	9101      	str	r1, [sp, #4]
10002c4c:	e7d6      	b.n	10002bfc <get_eit_entry+0x18>
10002c4e:	f3c3 6003 	ubfx	r0, r3, #24, #4
10002c52:	f7ff ffb3 	bl	10002bbc <__gnu_unwind_get_pr_addr>
10002c56:	2800      	cmp	r0, #0
10002c58:	6120      	str	r0, [r4, #16]
10002c5a:	bf14      	ite	ne
10002c5c:	2000      	movne	r0, #0
10002c5e:	2009      	moveq	r0, #9
10002c60:	b003      	add	sp, #12
10002c62:	bd30      	pop	{r4, r5, pc}
10002c64:	2301      	movs	r3, #1
10002c66:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10002c6a:	e7db      	b.n	10002c24 <get_eit_entry+0x40>
10002c6c:	2300      	movs	r3, #0
10002c6e:	2005      	movs	r0, #5
10002c70:	6123      	str	r3, [r4, #16]
10002c72:	e7df      	b.n	10002c34 <get_eit_entry+0x50>
10002c74:	00000000 	andeq	r0, r0, r0
10002c78:	1000413c 	andne	r4, r0, ip, lsr r1
10002c7c:	100041fc 	strdne	r4, [r0], -ip

10002c80 <restore_non_core_regs>:
10002c80:	6803      	ldr	r3, [r0, #0]
10002c82:	07da      	lsls	r2, r3, #31
10002c84:	b510      	push	{r4, lr}
10002c86:	4604      	mov	r4, r0
10002c88:	d406      	bmi.n	10002c98 <restore_non_core_regs+0x18>
10002c8a:	079b      	lsls	r3, r3, #30
10002c8c:	f100 0048 	add.w	r0, r0, #72	; 0x48
10002c90:	d509      	bpl.n	10002ca6 <restore_non_core_regs+0x26>
10002c92:	f000 fc8f 	bl	100035b4 <__gnu_Unwind_Restore_VFP_D>
10002c96:	6823      	ldr	r3, [r4, #0]
10002c98:	0759      	lsls	r1, r3, #29
10002c9a:	d509      	bpl.n	10002cb0 <restore_non_core_regs+0x30>
10002c9c:	071a      	lsls	r2, r3, #28
10002c9e:	d50e      	bpl.n	10002cbe <restore_non_core_regs+0x3e>
10002ca0:	06db      	lsls	r3, r3, #27
10002ca2:	d513      	bpl.n	10002ccc <restore_non_core_regs+0x4c>
10002ca4:	bd10      	pop	{r4, pc}
10002ca6:	f000 fc7d 	bl	100035a4 <__gnu_Unwind_Restore_VFP>
10002caa:	6823      	ldr	r3, [r4, #0]
10002cac:	0759      	lsls	r1, r3, #29
10002cae:	d4f5      	bmi.n	10002c9c <restore_non_core_regs+0x1c>
10002cb0:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
10002cb4:	f000 fc86 	bl	100035c4 <__gnu_Unwind_Restore_VFP_D_16_to_31>
10002cb8:	6823      	ldr	r3, [r4, #0]
10002cba:	071a      	lsls	r2, r3, #28
10002cbc:	d4f0      	bmi.n	10002ca0 <restore_non_core_regs+0x20>
10002cbe:	f504 70a8 	add.w	r0, r4, #336	; 0x150
10002cc2:	f000 fc87 	bl	100035d4 <__gnu_Unwind_Restore_WMMXD>
10002cc6:	6823      	ldr	r3, [r4, #0]
10002cc8:	06db      	lsls	r3, r3, #27
10002cca:	d4eb      	bmi.n	10002ca4 <restore_non_core_regs+0x24>
10002ccc:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
10002cd0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10002cd4:	f000 bcc2 	b.w	1000365c <__gnu_Unwind_Restore_WMMXC>

10002cd8 <__gnu_unwind_24bit.constprop.0>:
10002cd8:	2009      	movs	r0, #9
10002cda:	4770      	bx	lr

10002cdc <_Unwind_decode_typeinfo_ptr.constprop.0>:
10002cdc:	4603      	mov	r3, r0
10002cde:	6800      	ldr	r0, [r0, #0]
10002ce0:	b100      	cbz	r0, 10002ce4 <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
10002ce2:	4418      	add	r0, r3
10002ce4:	4770      	bx	lr
10002ce6:	bf00      	nop

10002ce8 <_Unwind_DebugHook>:
10002ce8:	4770      	bx	lr
10002cea:	bf00      	nop

10002cec <unwind_phase2>:
10002cec:	b570      	push	{r4, r5, r6, lr}
10002cee:	4604      	mov	r4, r0
10002cf0:	460e      	mov	r6, r1
10002cf2:	6c31      	ldr	r1, [r6, #64]	; 0x40
10002cf4:	4620      	mov	r0, r4
10002cf6:	f7ff ff75 	bl	10002be4 <get_eit_entry>
10002cfa:	4605      	mov	r5, r0
10002cfc:	b998      	cbnz	r0, 10002d26 <unwind_phase2+0x3a>
10002cfe:	f8d6 c040 	ldr.w	ip, [r6, #64]	; 0x40
10002d02:	4632      	mov	r2, r6
10002d04:	6923      	ldr	r3, [r4, #16]
10002d06:	4621      	mov	r1, r4
10002d08:	2001      	movs	r0, #1
10002d0a:	f8c4 c014 	str.w	ip, [r4, #20]
10002d0e:	4798      	blx	r3
10002d10:	2808      	cmp	r0, #8
10002d12:	d0ee      	beq.n	10002cf2 <unwind_phase2+0x6>
10002d14:	2807      	cmp	r0, #7
10002d16:	d106      	bne.n	10002d26 <unwind_phase2+0x3a>
10002d18:	4628      	mov	r0, r5
10002d1a:	6c31      	ldr	r1, [r6, #64]	; 0x40
10002d1c:	f7ff ffe4 	bl	10002ce8 <_Unwind_DebugHook>
10002d20:	1d30      	adds	r0, r6, #4
10002d22:	f000 fc33 	bl	1000358c <__restore_core_regs>
10002d26:	f000 fec3 	bl	10003ab0 <abort>
10002d2a:	bf00      	nop

10002d2c <unwind_phase2_forced>:
10002d2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10002d30:	f101 0c04 	add.w	ip, r1, #4
10002d34:	f5ad 7d74 	sub.w	sp, sp, #976	; 0x3d0
10002d38:	68c7      	ldr	r7, [r0, #12]
10002d3a:	4606      	mov	r6, r0
10002d3c:	f8d0 8018 	ldr.w	r8, [r0, #24]
10002d40:	4614      	mov	r4, r2
10002d42:	f10d 0e14 	add.w	lr, sp, #20
10002d46:	ad04      	add	r5, sp, #16
10002d48:	f04f 0900 	mov.w	r9, #0
10002d4c:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10002d50:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10002d54:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10002d58:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10002d5c:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10002d60:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10002d64:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10002d68:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
10002d6c:	f8c5 9000 	str.w	r9, [r5]
10002d70:	e023      	b.n	10002dba <unwind_phase2_forced+0x8e>
10002d72:	6c2b      	ldr	r3, [r5, #64]	; 0x40
10002d74:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
10002d78:	4629      	mov	r1, r5
10002d7a:	a87c      	add	r0, sp, #496	; 0x1f0
10002d7c:	6173      	str	r3, [r6, #20]
10002d7e:	f000 fe9f 	bl	10003ac0 <memcpy>
10002d82:	aa7c      	add	r2, sp, #496	; 0x1f0
10002d84:	4631      	mov	r1, r6
10002d86:	6933      	ldr	r3, [r6, #16]
10002d88:	4650      	mov	r0, sl
10002d8a:	4798      	blx	r3
10002d8c:	9b8a      	ldr	r3, [sp, #552]	; 0x228
10002d8e:	4621      	mov	r1, r4
10002d90:	4681      	mov	r9, r0
10002d92:	9303      	str	r3, [sp, #12]
10002d94:	4632      	mov	r2, r6
10002d96:	9c03      	ldr	r4, [sp, #12]
10002d98:	4633      	mov	r3, r6
10002d9a:	2001      	movs	r0, #1
10002d9c:	646c      	str	r4, [r5, #68]	; 0x44
10002d9e:	e9cd 5800 	strd	r5, r8, [sp]
10002da2:	47b8      	blx	r7
10002da4:	4604      	mov	r4, r0
10002da6:	b9e8      	cbnz	r0, 10002de4 <unwind_phase2_forced+0xb8>
10002da8:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
10002dac:	a97c      	add	r1, sp, #496	; 0x1f0
10002dae:	4628      	mov	r0, r5
10002db0:	f000 fe86 	bl	10003ac0 <memcpy>
10002db4:	f1b9 0f08 	cmp.w	r9, #8
10002db8:	d11b      	bne.n	10002df2 <unwind_phase2_forced+0xc6>
10002dba:	3409      	adds	r4, #9
10002dbc:	6c29      	ldr	r1, [r5, #64]	; 0x40
10002dbe:	4630      	mov	r0, r6
10002dc0:	f7ff ff10 	bl	10002be4 <get_eit_entry>
10002dc4:	4681      	mov	r9, r0
10002dc6:	fa5f fa84 	uxtb.w	sl, r4
10002dca:	2800      	cmp	r0, #0
10002dcc:	d0d1      	beq.n	10002d72 <unwind_phase2_forced+0x46>
10002dce:	6bac      	ldr	r4, [r5, #56]	; 0x38
10002dd0:	4633      	mov	r3, r6
10002dd2:	4632      	mov	r2, r6
10002dd4:	f04a 0110 	orr.w	r1, sl, #16
10002dd8:	646c      	str	r4, [r5, #68]	; 0x44
10002dda:	2001      	movs	r0, #1
10002ddc:	e9cd 5800 	strd	r5, r8, [sp]
10002de0:	47b8      	blx	r7
10002de2:	b108      	cbz	r0, 10002de8 <unwind_phase2_forced+0xbc>
10002de4:	f04f 0909 	mov.w	r9, #9
10002de8:	4648      	mov	r0, r9
10002dea:	f50d 7d74 	add.w	sp, sp, #976	; 0x3d0
10002dee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10002df2:	f1b9 0f07 	cmp.w	r9, #7
10002df6:	d1f5      	bne.n	10002de4 <unwind_phase2_forced+0xb8>
10002df8:	4620      	mov	r0, r4
10002dfa:	6c29      	ldr	r1, [r5, #64]	; 0x40
10002dfc:	f7ff ff74 	bl	10002ce8 <_Unwind_DebugHook>
10002e00:	a805      	add	r0, sp, #20
10002e02:	f000 fbc3 	bl	1000358c <__restore_core_regs>
10002e06:	bf00      	nop

10002e08 <_Unwind_GetCFA>:
10002e08:	6c40      	ldr	r0, [r0, #68]	; 0x44
10002e0a:	4770      	bx	lr

10002e0c <__gnu_Unwind_RaiseException>:
10002e0c:	b5f0      	push	{r4, r5, r6, r7, lr}
10002e0e:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10002e10:	b0f9      	sub	sp, #484	; 0x1e4
10002e12:	f101 0c04 	add.w	ip, r1, #4
10002e16:	460e      	mov	r6, r1
10002e18:	640b      	str	r3, [r1, #64]	; 0x40
10002e1a:	ac01      	add	r4, sp, #4
10002e1c:	4605      	mov	r5, r0
10002e1e:	f04f 37ff 	mov.w	r7, #4294967295
10002e22:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10002e26:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10002e28:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10002e2c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10002e2e:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10002e32:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10002e34:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10002e38:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
10002e3c:	9700      	str	r7, [sp, #0]
10002e3e:	e006      	b.n	10002e4e <__gnu_Unwind_RaiseException+0x42>
10002e40:	692b      	ldr	r3, [r5, #16]
10002e42:	466a      	mov	r2, sp
10002e44:	4629      	mov	r1, r5
10002e46:	4798      	blx	r3
10002e48:	2808      	cmp	r0, #8
10002e4a:	4604      	mov	r4, r0
10002e4c:	d108      	bne.n	10002e60 <__gnu_Unwind_RaiseException+0x54>
10002e4e:	9910      	ldr	r1, [sp, #64]	; 0x40
10002e50:	4628      	mov	r0, r5
10002e52:	f7ff fec7 	bl	10002be4 <get_eit_entry>
10002e56:	2800      	cmp	r0, #0
10002e58:	d0f2      	beq.n	10002e40 <__gnu_Unwind_RaiseException+0x34>
10002e5a:	2009      	movs	r0, #9
10002e5c:	b079      	add	sp, #484	; 0x1e4
10002e5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
10002e60:	4668      	mov	r0, sp
10002e62:	f7ff ff0d 	bl	10002c80 <restore_non_core_regs>
10002e66:	2c06      	cmp	r4, #6
10002e68:	d1f7      	bne.n	10002e5a <__gnu_Unwind_RaiseException+0x4e>
10002e6a:	4631      	mov	r1, r6
10002e6c:	4628      	mov	r0, r5
10002e6e:	f7ff ff3d 	bl	10002cec <unwind_phase2>
10002e72:	bf00      	nop

10002e74 <__gnu_Unwind_ForcedUnwind>:
10002e74:	b410      	push	{r4}
10002e76:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
10002e78:	60c1      	str	r1, [r0, #12]
10002e7a:	4619      	mov	r1, r3
10002e7c:	6182      	str	r2, [r0, #24]
10002e7e:	2200      	movs	r2, #0
10002e80:	641c      	str	r4, [r3, #64]	; 0x40
10002e82:	bc10      	pop	{r4}
10002e84:	e752      	b.n	10002d2c <unwind_phase2_forced>
10002e86:	bf00      	nop

10002e88 <__gnu_Unwind_Resume>:
10002e88:	b570      	push	{r4, r5, r6, lr}
10002e8a:	6943      	ldr	r3, [r0, #20]
10002e8c:	68c6      	ldr	r6, [r0, #12]
10002e8e:	640b      	str	r3, [r1, #64]	; 0x40
10002e90:	b9ae      	cbnz	r6, 10002ebe <__gnu_Unwind_Resume+0x36>
10002e92:	6903      	ldr	r3, [r0, #16]
10002e94:	460a      	mov	r2, r1
10002e96:	4604      	mov	r4, r0
10002e98:	460d      	mov	r5, r1
10002e9a:	4601      	mov	r1, r0
10002e9c:	2002      	movs	r0, #2
10002e9e:	4798      	blx	r3
10002ea0:	2807      	cmp	r0, #7
10002ea2:	d005      	beq.n	10002eb0 <__gnu_Unwind_Resume+0x28>
10002ea4:	2808      	cmp	r0, #8
10002ea6:	d10f      	bne.n	10002ec8 <__gnu_Unwind_Resume+0x40>
10002ea8:	4629      	mov	r1, r5
10002eaa:	4620      	mov	r0, r4
10002eac:	f7ff ff1e 	bl	10002cec <unwind_phase2>
10002eb0:	4630      	mov	r0, r6
10002eb2:	6c29      	ldr	r1, [r5, #64]	; 0x40
10002eb4:	f7ff ff18 	bl	10002ce8 <_Unwind_DebugHook>
10002eb8:	1d28      	adds	r0, r5, #4
10002eba:	f000 fb67 	bl	1000358c <__restore_core_regs>
10002ebe:	2201      	movs	r2, #1
10002ec0:	f7ff ff34 	bl	10002d2c <unwind_phase2_forced>
10002ec4:	f000 fdf4 	bl	10003ab0 <abort>
10002ec8:	f000 fdf2 	bl	10003ab0 <abort>

10002ecc <__gnu_Unwind_Resume_or_Rethrow>:
10002ecc:	68c2      	ldr	r2, [r0, #12]
10002ece:	b12a      	cbz	r2, 10002edc <__gnu_Unwind_Resume_or_Rethrow+0x10>
10002ed0:	f8d1 c03c 	ldr.w	ip, [r1, #60]	; 0x3c
10002ed4:	2200      	movs	r2, #0
10002ed6:	f8c1 c040 	str.w	ip, [r1, #64]	; 0x40
10002eda:	e727      	b.n	10002d2c <unwind_phase2_forced>
10002edc:	e796      	b.n	10002e0c <__gnu_Unwind_RaiseException>
10002ede:	bf00      	nop

10002ee0 <_Unwind_Complete>:
10002ee0:	4770      	bx	lr
10002ee2:	bf00      	nop

10002ee4 <_Unwind_DeleteException>:
10002ee4:	6883      	ldr	r3, [r0, #8]
10002ee6:	4601      	mov	r1, r0
10002ee8:	b10b      	cbz	r3, 10002eee <_Unwind_DeleteException+0xa>
10002eea:	2001      	movs	r0, #1
10002eec:	4718      	bx	r3
10002eee:	4770      	bx	lr

10002ef0 <_Unwind_VRS_Get>:
10002ef0:	2901      	cmp	r1, #1
10002ef2:	d015      	beq.n	10002f20 <_Unwind_VRS_Get+0x30>
10002ef4:	d80c      	bhi.n	10002f10 <_Unwind_VRS_Get+0x20>
10002ef6:	b98b      	cbnz	r3, 10002f1c <_Unwind_VRS_Get+0x2c>
10002ef8:	2a0f      	cmp	r2, #15
10002efa:	bf94      	ite	ls
10002efc:	2100      	movls	r1, #0
10002efe:	2101      	movhi	r1, #1
10002f00:	b961      	cbnz	r1, 10002f1c <_Unwind_VRS_Get+0x2c>
10002f02:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10002f06:	4608      	mov	r0, r1
10002f08:	6853      	ldr	r3, [r2, #4]
10002f0a:	9a00      	ldr	r2, [sp, #0]
10002f0c:	6013      	str	r3, [r2, #0]
10002f0e:	4770      	bx	lr
10002f10:	3903      	subs	r1, #3
10002f12:	2901      	cmp	r1, #1
10002f14:	bf94      	ite	ls
10002f16:	2001      	movls	r0, #1
10002f18:	2002      	movhi	r0, #2
10002f1a:	4770      	bx	lr
10002f1c:	2002      	movs	r0, #2
10002f1e:	4770      	bx	lr
10002f20:	4608      	mov	r0, r1
10002f22:	4770      	bx	lr

10002f24 <_Unwind_GetGR>:
10002f24:	b510      	push	{r4, lr}
10002f26:	b084      	sub	sp, #16
10002f28:	2300      	movs	r3, #0
10002f2a:	460a      	mov	r2, r1
10002f2c:	ac03      	add	r4, sp, #12
10002f2e:	4619      	mov	r1, r3
10002f30:	9400      	str	r4, [sp, #0]
10002f32:	f7ff ffdd 	bl	10002ef0 <_Unwind_VRS_Get>
10002f36:	9803      	ldr	r0, [sp, #12]
10002f38:	b004      	add	sp, #16
10002f3a:	bd10      	pop	{r4, pc}

10002f3c <_Unwind_VRS_Set>:
10002f3c:	2901      	cmp	r1, #1
10002f3e:	d015      	beq.n	10002f6c <_Unwind_VRS_Set+0x30>
10002f40:	d80c      	bhi.n	10002f5c <_Unwind_VRS_Set+0x20>
10002f42:	b98b      	cbnz	r3, 10002f68 <_Unwind_VRS_Set+0x2c>
10002f44:	2a0f      	cmp	r2, #15
10002f46:	bf94      	ite	ls
10002f48:	2100      	movls	r1, #0
10002f4a:	2101      	movhi	r1, #1
10002f4c:	b961      	cbnz	r1, 10002f68 <_Unwind_VRS_Set+0x2c>
10002f4e:	9b00      	ldr	r3, [sp, #0]
10002f50:	eb00 0282 	add.w	r2, r0, r2, lsl #2
10002f54:	4608      	mov	r0, r1
10002f56:	681b      	ldr	r3, [r3, #0]
10002f58:	6053      	str	r3, [r2, #4]
10002f5a:	4770      	bx	lr
10002f5c:	3903      	subs	r1, #3
10002f5e:	2901      	cmp	r1, #1
10002f60:	bf94      	ite	ls
10002f62:	2001      	movls	r0, #1
10002f64:	2002      	movhi	r0, #2
10002f66:	4770      	bx	lr
10002f68:	2002      	movs	r0, #2
10002f6a:	4770      	bx	lr
10002f6c:	4608      	mov	r0, r1
10002f6e:	4770      	bx	lr

10002f70 <_Unwind_SetGR>:
10002f70:	b510      	push	{r4, lr}
10002f72:	b084      	sub	sp, #16
10002f74:	2300      	movs	r3, #0
10002f76:	ac03      	add	r4, sp, #12
10002f78:	9203      	str	r2, [sp, #12]
10002f7a:	460a      	mov	r2, r1
10002f7c:	4619      	mov	r1, r3
10002f7e:	9400      	str	r4, [sp, #0]
10002f80:	f7ff ffdc 	bl	10002f3c <_Unwind_VRS_Set>
10002f84:	b004      	add	sp, #16
10002f86:	bd10      	pop	{r4, pc}

10002f88 <__gnu_Unwind_Backtrace>:
10002f88:	b5f0      	push	{r4, r5, r6, r7, lr}
10002f8a:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
10002f8c:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
10002f90:	1d14      	adds	r4, r2, #4
10002f92:	4606      	mov	r6, r0
10002f94:	6413      	str	r3, [r2, #64]	; 0x40
10002f96:	f10d 0c5c 	add.w	ip, sp, #92	; 0x5c
10002f9a:	460d      	mov	r5, r1
10002f9c:	f04f 37ff 	mov.w	r7, #4294967295
10002fa0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10002fa2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10002fa6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10002fa8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10002fac:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10002fae:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10002fb2:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
10002fb6:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
10002fba:	9716      	str	r7, [sp, #88]	; 0x58
10002fbc:	e010      	b.n	10002fe0 <__gnu_Unwind_Backtrace+0x58>
10002fbe:	f7ff ffd7 	bl	10002f70 <_Unwind_SetGR>
10002fc2:	4629      	mov	r1, r5
10002fc4:	a816      	add	r0, sp, #88	; 0x58
10002fc6:	47b0      	blx	r6
10002fc8:	4603      	mov	r3, r0
10002fca:	aa16      	add	r2, sp, #88	; 0x58
10002fcc:	4669      	mov	r1, sp
10002fce:	2008      	movs	r0, #8
10002fd0:	b983      	cbnz	r3, 10002ff4 <__gnu_Unwind_Backtrace+0x6c>
10002fd2:	9b04      	ldr	r3, [sp, #16]
10002fd4:	4798      	blx	r3
10002fd6:	2805      	cmp	r0, #5
10002fd8:	4604      	mov	r4, r0
10002fda:	d00c      	beq.n	10002ff6 <__gnu_Unwind_Backtrace+0x6e>
10002fdc:	2809      	cmp	r0, #9
10002fde:	d00a      	beq.n	10002ff6 <__gnu_Unwind_Backtrace+0x6e>
10002fe0:	9926      	ldr	r1, [sp, #152]	; 0x98
10002fe2:	4668      	mov	r0, sp
10002fe4:	f7ff fdfe 	bl	10002be4 <get_eit_entry>
10002fe8:	4603      	mov	r3, r0
10002fea:	466a      	mov	r2, sp
10002fec:	210c      	movs	r1, #12
10002fee:	a816      	add	r0, sp, #88	; 0x58
10002ff0:	2b00      	cmp	r3, #0
10002ff2:	d0e4      	beq.n	10002fbe <__gnu_Unwind_Backtrace+0x36>
10002ff4:	2409      	movs	r4, #9
10002ff6:	a816      	add	r0, sp, #88	; 0x58
10002ff8:	f7ff fe42 	bl	10002c80 <restore_non_core_regs>
10002ffc:	4620      	mov	r0, r4
10002ffe:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
10003002:	bdf0      	pop	{r4, r5, r6, r7, pc}

10003004 <__gnu_unwind_pr_common>:
10003004:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10003008:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
1000300a:	b089      	sub	sp, #36	; 0x24
1000300c:	461e      	mov	r6, r3
1000300e:	460d      	mov	r5, r1
10003010:	f854 3b04 	ldr.w	r3, [r4], #4
10003014:	4617      	mov	r7, r2
10003016:	f000 0803 	and.w	r8, r0, #3
1000301a:	9406      	str	r4, [sp, #24]
1000301c:	2e00      	cmp	r6, #0
1000301e:	d07f      	beq.n	10003120 <__gnu_unwind_pr_common+0x11c>
10003020:	0c1a      	lsrs	r2, r3, #16
10003022:	041b      	lsls	r3, r3, #16
10003024:	f88d 201d 	strb.w	r2, [sp, #29]
10003028:	b2d2      	uxtb	r2, r2
1000302a:	9305      	str	r3, [sp, #20]
1000302c:	2302      	movs	r3, #2
1000302e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
10003032:	f88d 301c 	strb.w	r3, [sp, #28]
10003036:	f1b8 0f02 	cmp.w	r8, #2
1000303a:	6d2b      	ldr	r3, [r5, #80]	; 0x50
1000303c:	bf08      	it	eq
1000303e:	6bac      	ldreq	r4, [r5, #56]	; 0x38
10003040:	f013 0301 	ands.w	r3, r3, #1
10003044:	d008      	beq.n	10003058 <__gnu_unwind_pr_common+0x54>
10003046:	a905      	add	r1, sp, #20
10003048:	4638      	mov	r0, r7
1000304a:	f000 fba1 	bl	10003790 <__gnu_unwind_execute>
1000304e:	bb90      	cbnz	r0, 100030b6 <__gnu_unwind_pr_common+0xb2>
10003050:	2008      	movs	r0, #8
10003052:	b009      	add	sp, #36	; 0x24
10003054:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10003058:	f8d4 a000 	ldr.w	sl, [r4]
1000305c:	f1ba 0f00 	cmp.w	sl, #0
10003060:	d0f1      	beq.n	10003046 <__gnu_unwind_pr_common+0x42>
10003062:	9301      	str	r3, [sp, #4]
10003064:	f000 0308 	and.w	r3, r0, #8
10003068:	9302      	str	r3, [sp, #8]
1000306a:	2e02      	cmp	r6, #2
1000306c:	d054      	beq.n	10003118 <__gnu_unwind_pr_common+0x114>
1000306e:	f8b4 a000 	ldrh.w	sl, [r4]
10003072:	3404      	adds	r4, #4
10003074:	f834 9c02 	ldrh.w	r9, [r4, #-2]
10003078:	6cab      	ldr	r3, [r5, #72]	; 0x48
1000307a:	f029 0b01 	bic.w	fp, r9, #1
1000307e:	210f      	movs	r1, #15
10003080:	4638      	mov	r0, r7
10003082:	449b      	add	fp, r3
10003084:	f7ff ff4e 	bl	10002f24 <_Unwind_GetGR>
10003088:	4583      	cmp	fp, r0
1000308a:	d818      	bhi.n	100030be <__gnu_unwind_pr_common+0xba>
1000308c:	f02a 0301 	bic.w	r3, sl, #1
10003090:	449b      	add	fp, r3
10003092:	4583      	cmp	fp, r0
10003094:	d913      	bls.n	100030be <__gnu_unwind_pr_common+0xba>
10003096:	ea4f 0349 	mov.w	r3, r9, lsl #1
1000309a:	f00a 0a01 	and.w	sl, sl, #1
1000309e:	f003 0302 	and.w	r3, r3, #2
100030a2:	ea43 030a 	orr.w	r3, r3, sl
100030a6:	2b01      	cmp	r3, #1
100030a8:	f000 80bf 	beq.w	1000322a <__gnu_unwind_pr_common+0x226>
100030ac:	2b02      	cmp	r3, #2
100030ae:	f000 8089 	beq.w	100031c4 <__gnu_unwind_pr_common+0x1c0>
100030b2:	2b00      	cmp	r3, #0
100030b4:	d04d      	beq.n	10003152 <__gnu_unwind_pr_common+0x14e>
100030b6:	2009      	movs	r0, #9
100030b8:	b009      	add	sp, #36	; 0x24
100030ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100030be:	ea4f 0349 	mov.w	r3, r9, lsl #1
100030c2:	f00a 0a01 	and.w	sl, sl, #1
100030c6:	f003 0302 	and.w	r3, r3, #2
100030ca:	ea43 030a 	orr.w	r3, r3, sl
100030ce:	2b01      	cmp	r3, #1
100030d0:	d03a      	beq.n	10003148 <__gnu_unwind_pr_common+0x144>
100030d2:	2b02      	cmp	r3, #2
100030d4:	d02a      	beq.n	1000312c <__gnu_unwind_pr_common+0x128>
100030d6:	2b00      	cmp	r3, #0
100030d8:	d1ed      	bne.n	100030b6 <__gnu_unwind_pr_common+0xb2>
100030da:	3404      	adds	r4, #4
100030dc:	f8d4 a000 	ldr.w	sl, [r4]
100030e0:	f1ba 0f00 	cmp.w	sl, #0
100030e4:	d1c1      	bne.n	1000306a <__gnu_unwind_pr_common+0x66>
100030e6:	a905      	add	r1, sp, #20
100030e8:	4638      	mov	r0, r7
100030ea:	f000 fb51 	bl	10003790 <__gnu_unwind_execute>
100030ee:	2800      	cmp	r0, #0
100030f0:	d1e1      	bne.n	100030b6 <__gnu_unwind_pr_common+0xb2>
100030f2:	9b01      	ldr	r3, [sp, #4]
100030f4:	2b00      	cmp	r3, #0
100030f6:	d0ab      	beq.n	10003050 <__gnu_unwind_pr_common+0x4c>
100030f8:	210f      	movs	r1, #15
100030fa:	4638      	mov	r0, r7
100030fc:	f7ff ff12 	bl	10002f24 <_Unwind_GetGR>
10003100:	210e      	movs	r1, #14
10003102:	4602      	mov	r2, r0
10003104:	4638      	mov	r0, r7
10003106:	f7ff ff33 	bl	10002f70 <_Unwind_SetGR>
1000310a:	4638      	mov	r0, r7
1000310c:	4a6e      	ldr	r2, [pc, #440]	; (100032c8 <__gnu_unwind_pr_common+0x2c4>)
1000310e:	210f      	movs	r1, #15
10003110:	f7ff ff2e 	bl	10002f70 <_Unwind_SetGR>
10003114:	2007      	movs	r0, #7
10003116:	e7cf      	b.n	100030b8 <__gnu_unwind_pr_common+0xb4>
10003118:	f8d4 9004 	ldr.w	r9, [r4, #4]
1000311c:	3408      	adds	r4, #8
1000311e:	e7ab      	b.n	10003078 <__gnu_unwind_pr_common+0x74>
10003120:	021b      	lsls	r3, r3, #8
10003122:	9305      	str	r3, [sp, #20]
10003124:	2303      	movs	r3, #3
10003126:	f8ad 301c 	strh.w	r3, [sp, #28]
1000312a:	e784      	b.n	10003036 <__gnu_unwind_pr_common+0x32>
1000312c:	6823      	ldr	r3, [r4, #0]
1000312e:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
10003132:	f1b8 0f00 	cmp.w	r8, #0
10003136:	d121      	bne.n	1000317c <__gnu_unwind_pr_common+0x178>
10003138:	2b00      	cmp	r3, #0
1000313a:	da00      	bge.n	1000313e <__gnu_unwind_pr_common+0x13a>
1000313c:	3404      	adds	r4, #4
1000313e:	f10b 0b01 	add.w	fp, fp, #1
10003142:	eb04 048b 	add.w	r4, r4, fp, lsl #2
10003146:	e7c9      	b.n	100030dc <__gnu_unwind_pr_common+0xd8>
10003148:	f1b8 0f00 	cmp.w	r8, #0
1000314c:	d120      	bne.n	10003190 <__gnu_unwind_pr_common+0x18c>
1000314e:	3408      	adds	r4, #8
10003150:	e7c4      	b.n	100030dc <__gnu_unwind_pr_common+0xd8>
10003152:	f1b8 0f00 	cmp.w	r8, #0
10003156:	d0c0      	beq.n	100030da <__gnu_unwind_pr_common+0xd6>
10003158:	4620      	mov	r0, r4
1000315a:	3404      	adds	r4, #4
1000315c:	f7ff fcf4 	bl	10002b48 <selfrel_offset31>
10003160:	4606      	mov	r6, r0
10003162:	63ac      	str	r4, [r5, #56]	; 0x38
10003164:	4628      	mov	r0, r5
10003166:	e000      	b.n	1000316a <__gnu_unwind_pr_common+0x166>
10003168:	bf00      	nop
1000316a:	2800      	cmp	r0, #0
1000316c:	d0a3      	beq.n	100030b6 <__gnu_unwind_pr_common+0xb2>
1000316e:	4638      	mov	r0, r7
10003170:	4632      	mov	r2, r6
10003172:	210f      	movs	r1, #15
10003174:	f7ff fefc 	bl	10002f70 <_Unwind_SetGR>
10003178:	2007      	movs	r0, #7
1000317a:	e79d      	b.n	100030b8 <__gnu_unwind_pr_common+0xb4>
1000317c:	f8d5 9020 	ldr.w	r9, [r5, #32]
10003180:	210d      	movs	r1, #13
10003182:	4638      	mov	r0, r7
10003184:	f7ff fece 	bl	10002f24 <_Unwind_GetGR>
10003188:	4581      	cmp	r9, r0
1000318a:	d079      	beq.n	10003280 <__gnu_unwind_pr_common+0x27c>
1000318c:	6823      	ldr	r3, [r4, #0]
1000318e:	e7d3      	b.n	10003138 <__gnu_unwind_pr_common+0x134>
10003190:	f8d5 9020 	ldr.w	r9, [r5, #32]
10003194:	210d      	movs	r1, #13
10003196:	4638      	mov	r0, r7
10003198:	f7ff fec4 	bl	10002f24 <_Unwind_GetGR>
1000319c:	4581      	cmp	r9, r0
1000319e:	d1d6      	bne.n	1000314e <__gnu_unwind_pr_common+0x14a>
100031a0:	6aab      	ldr	r3, [r5, #40]	; 0x28
100031a2:	429c      	cmp	r4, r3
100031a4:	d1d3      	bne.n	1000314e <__gnu_unwind_pr_common+0x14a>
100031a6:	4620      	mov	r0, r4
100031a8:	210f      	movs	r1, #15
100031aa:	f7ff fccd 	bl	10002b48 <selfrel_offset31>
100031ae:	4602      	mov	r2, r0
100031b0:	4638      	mov	r0, r7
100031b2:	f7ff fedd 	bl	10002f70 <_Unwind_SetGR>
100031b6:	4638      	mov	r0, r7
100031b8:	462a      	mov	r2, r5
100031ba:	2100      	movs	r1, #0
100031bc:	f7ff fed8 	bl	10002f70 <_Unwind_SetGR>
100031c0:	2007      	movs	r0, #7
100031c2:	e779      	b.n	100030b8 <__gnu_unwind_pr_common+0xb4>
100031c4:	6823      	ldr	r3, [r4, #0]
100031c6:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
100031ca:	f1b8 0f00 	cmp.w	r8, #0
100031ce:	d1d5      	bne.n	1000317c <__gnu_unwind_pr_common+0x178>
100031d0:	9a02      	ldr	r2, [sp, #8]
100031d2:	b112      	cbz	r2, 100031da <__gnu_unwind_pr_common+0x1d6>
100031d4:	f1bb 0f00 	cmp.w	fp, #0
100031d8:	d1ae      	bne.n	10003138 <__gnu_unwind_pr_common+0x134>
100031da:	f105 0358 	add.w	r3, r5, #88	; 0x58
100031de:	f8cd 800c 	str.w	r8, [sp, #12]
100031e2:	f104 0a04 	add.w	sl, r4, #4
100031e6:	46b0      	mov	r8, r6
100031e8:	f04f 0900 	mov.w	r9, #0
100031ec:	461e      	mov	r6, r3
100031ee:	e00d      	b.n	1000320c <__gnu_unwind_pr_common+0x208>
100031f0:	4650      	mov	r0, sl
100031f2:	9604      	str	r6, [sp, #16]
100031f4:	2200      	movs	r2, #0
100031f6:	f7ff fd71 	bl	10002cdc <_Unwind_decode_typeinfo_ptr.constprop.0>
100031fa:	ab04      	add	r3, sp, #16
100031fc:	4601      	mov	r1, r0
100031fe:	4628      	mov	r0, r5
10003200:	f10a 0a04 	add.w	sl, sl, #4
10003204:	e000      	b.n	10003208 <__gnu_unwind_pr_common+0x204>
10003206:	bf00      	nop
10003208:	2800      	cmp	r0, #0
1000320a:	d14a      	bne.n	100032a2 <__gnu_unwind_pr_common+0x29e>
1000320c:	45d9      	cmp	r9, fp
1000320e:	f109 0901 	add.w	r9, r9, #1
10003212:	d1ed      	bne.n	100031f0 <__gnu_unwind_pr_common+0x1ec>
10003214:	210d      	movs	r1, #13
10003216:	4638      	mov	r0, r7
10003218:	f7ff fe84 	bl	10002f24 <_Unwind_GetGR>
1000321c:	9b04      	ldr	r3, [sp, #16]
1000321e:	4602      	mov	r2, r0
10003220:	2006      	movs	r0, #6
10003222:	622a      	str	r2, [r5, #32]
10003224:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
10003228:	e746      	b.n	100030b8 <__gnu_unwind_pr_common+0xb4>
1000322a:	f1b8 0f00 	cmp.w	r8, #0
1000322e:	d1af      	bne.n	10003190 <__gnu_unwind_pr_common+0x18c>
10003230:	6863      	ldr	r3, [r4, #4]
10003232:	6822      	ldr	r2, [r4, #0]
10003234:	1c99      	adds	r1, r3, #2
10003236:	ea4f 72d2 	mov.w	r2, r2, lsr #31
1000323a:	f43f af3c 	beq.w	100030b6 <__gnu_unwind_pr_common+0xb2>
1000323e:	f105 0158 	add.w	r1, r5, #88	; 0x58
10003242:	3301      	adds	r3, #1
10003244:	9104      	str	r1, [sp, #16]
10003246:	d031      	beq.n	100032ac <__gnu_unwind_pr_common+0x2a8>
10003248:	1d20      	adds	r0, r4, #4
1000324a:	f7ff fd47 	bl	10002cdc <_Unwind_decode_typeinfo_ptr.constprop.0>
1000324e:	ab04      	add	r3, sp, #16
10003250:	4601      	mov	r1, r0
10003252:	4628      	mov	r0, r5
10003254:	e000      	b.n	10003258 <__gnu_unwind_pr_common+0x254>
10003256:	bf00      	nop
10003258:	2800      	cmp	r0, #0
1000325a:	f43f af78 	beq.w	1000314e <__gnu_unwind_pr_common+0x14a>
1000325e:	4681      	mov	r9, r0
10003260:	210d      	movs	r1, #13
10003262:	4638      	mov	r0, r7
10003264:	f7ff fe5e 	bl	10002f24 <_Unwind_GetGR>
10003268:	f1b9 0f02 	cmp.w	r9, #2
1000326c:	6228      	str	r0, [r5, #32]
1000326e:	d122      	bne.n	100032b6 <__gnu_unwind_pr_common+0x2b2>
10003270:	462b      	mov	r3, r5
10003272:	9a04      	ldr	r2, [sp, #16]
10003274:	f843 2f2c 	str.w	r2, [r3, #44]!
10003278:	626b      	str	r3, [r5, #36]	; 0x24
1000327a:	2006      	movs	r0, #6
1000327c:	62ac      	str	r4, [r5, #40]	; 0x28
1000327e:	e71b      	b.n	100030b8 <__gnu_unwind_pr_common+0xb4>
10003280:	6aab      	ldr	r3, [r5, #40]	; 0x28
10003282:	429c      	cmp	r4, r3
10003284:	d182      	bne.n	1000318c <__gnu_unwind_pr_common+0x188>
10003286:	2304      	movs	r3, #4
10003288:	2200      	movs	r2, #0
1000328a:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
1000328e:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
10003292:	18e3      	adds	r3, r4, r3
10003294:	636b      	str	r3, [r5, #52]	; 0x34
10003296:	6823      	ldr	r3, [r4, #0]
10003298:	2b00      	cmp	r3, #0
1000329a:	db0f      	blt.n	100032bc <__gnu_unwind_pr_common+0x2b8>
1000329c:	2301      	movs	r3, #1
1000329e:	9301      	str	r3, [sp, #4]
100032a0:	e74d      	b.n	1000313e <__gnu_unwind_pr_common+0x13a>
100032a2:	4646      	mov	r6, r8
100032a4:	6823      	ldr	r3, [r4, #0]
100032a6:	f8dd 800c 	ldr.w	r8, [sp, #12]
100032aa:	e745      	b.n	10003138 <__gnu_unwind_pr_common+0x134>
100032ac:	210d      	movs	r1, #13
100032ae:	4638      	mov	r0, r7
100032b0:	f7ff fe38 	bl	10002f24 <_Unwind_GetGR>
100032b4:	6228      	str	r0, [r5, #32]
100032b6:	9b04      	ldr	r3, [sp, #16]
100032b8:	626b      	str	r3, [r5, #36]	; 0x24
100032ba:	e7de      	b.n	1000327a <__gnu_unwind_pr_common+0x276>
100032bc:	f10b 0001 	add.w	r0, fp, #1
100032c0:	210f      	movs	r1, #15
100032c2:	eb04 0080 	add.w	r0, r4, r0, lsl #2
100032c6:	e770      	b.n	100031aa <__gnu_unwind_pr_common+0x1a6>
100032c8:	00000000 	andeq	r0, r0, r0

100032cc <__aeabi_unwind_cpp_pr0>:
100032cc:	2300      	movs	r3, #0
100032ce:	e699      	b.n	10003004 <__gnu_unwind_pr_common>

100032d0 <__aeabi_unwind_cpp_pr1>:
100032d0:	2301      	movs	r3, #1
100032d2:	e697      	b.n	10003004 <__gnu_unwind_pr_common>

100032d4 <__aeabi_unwind_cpp_pr2>:
100032d4:	2302      	movs	r3, #2
100032d6:	e695      	b.n	10003004 <__gnu_unwind_pr_common>

100032d8 <_Unwind_VRS_Pop>:
100032d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
100032dc:	4606      	mov	r6, r0
100032de:	b0c3      	sub	sp, #268	; 0x10c
100032e0:	4615      	mov	r5, r2
100032e2:	461c      	mov	r4, r3
100032e4:	2904      	cmp	r1, #4
100032e6:	f200 80c2 	bhi.w	1000346e <_Unwind_VRS_Pop+0x196>
100032ea:	e8df f001 	tbb	[pc, r1]
100032ee:	2cc059a3 			; <UNDEFINED> instruction: 0x2cc059a3
100032f2:	2c000003 	stccs	0, cr0, [r0], {3}
100032f6:	f040 80ba 	bne.w	1000346e <_Unwind_VRS_Pop+0x196>
100032fa:	2a10      	cmp	r2, #16
100032fc:	f200 80b7 	bhi.w	1000346e <_Unwind_VRS_Pop+0x196>
10003300:	6803      	ldr	r3, [r0, #0]
10003302:	06df      	lsls	r7, r3, #27
10003304:	f100 80b7 	bmi.w	10003476 <_Unwind_VRS_Pop+0x19e>
10003308:	af20      	add	r7, sp, #128	; 0x80
1000330a:	4638      	mov	r0, r7
1000330c:	f000 f9b0 	bl	10003670 <__gnu_Unwind_Save_WMMXC>
10003310:	6bb4      	ldr	r4, [r6, #56]	; 0x38
10003312:	4639      	mov	r1, r7
10003314:	2300      	movs	r3, #0
10003316:	f04f 0c01 	mov.w	ip, #1
1000331a:	fa0c f203 	lsl.w	r2, ip, r3
1000331e:	4620      	mov	r0, r4
10003320:	3301      	adds	r3, #1
10003322:	422a      	tst	r2, r5
10003324:	d003      	beq.n	1000332e <_Unwind_VRS_Pop+0x56>
10003326:	f850 2b04 	ldr.w	r2, [r0], #4
1000332a:	4604      	mov	r4, r0
1000332c:	600a      	str	r2, [r1, #0]
1000332e:	2b04      	cmp	r3, #4
10003330:	f101 0104 	add.w	r1, r1, #4
10003334:	d1f1      	bne.n	1000331a <_Unwind_VRS_Pop+0x42>
10003336:	4638      	mov	r0, r7
10003338:	63b4      	str	r4, [r6, #56]	; 0x38
1000333a:	f000 f98f 	bl	1000365c <__gnu_Unwind_Restore_WMMXC>
1000333e:	2000      	movs	r0, #0
10003340:	b043      	add	sp, #268	; 0x10c
10003342:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10003346:	2c03      	cmp	r4, #3
10003348:	f040 8091 	bne.w	1000346e <_Unwind_VRS_Pop+0x196>
1000334c:	fa1f f882 	uxth.w	r8, r2
10003350:	0c14      	lsrs	r4, r2, #16
10003352:	eb08 4512 	add.w	r5, r8, r2, lsr #16
10003356:	2d10      	cmp	r5, #16
10003358:	f200 8089 	bhi.w	1000346e <_Unwind_VRS_Pop+0x196>
1000335c:	6803      	ldr	r3, [r0, #0]
1000335e:	071a      	lsls	r2, r3, #28
10003360:	f100 80cd 	bmi.w	100034fe <_Unwind_VRS_Pop+0x226>
10003364:	af20      	add	r7, sp, #128	; 0x80
10003366:	4638      	mov	r0, r7
10003368:	f000 f956 	bl	10003618 <__gnu_Unwind_Save_WMMXD>
1000336c:	6bb5      	ldr	r5, [r6, #56]	; 0x38
1000336e:	eb07 01c4 	add.w	r1, r7, r4, lsl #3
10003372:	f1b8 0f00 	cmp.w	r8, #0
10003376:	d00b      	beq.n	10003390 <_Unwind_VRS_Pop+0xb8>
10003378:	460b      	mov	r3, r1
1000337a:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
1000337e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
10003382:	1ae8      	subs	r0, r5, r3
10003384:	581a      	ldr	r2, [r3, r0]
10003386:	f843 2b04 	str.w	r2, [r3], #4
1000338a:	428b      	cmp	r3, r1
1000338c:	d1fa      	bne.n	10003384 <_Unwind_VRS_Pop+0xac>
1000338e:	4445      	add	r5, r8
10003390:	4638      	mov	r0, r7
10003392:	63b5      	str	r5, [r6, #56]	; 0x38
10003394:	f000 f91e 	bl	100035d4 <__gnu_Unwind_Restore_WMMXD>
10003398:	2000      	movs	r0, #0
1000339a:	b043      	add	sp, #268	; 0x10c
1000339c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
100033a0:	f004 03fb 	and.w	r3, r4, #251	; 0xfb
100033a4:	ea4f 4812 	mov.w	r8, r2, lsr #16
100033a8:	b295      	uxth	r5, r2
100033aa:	2b01      	cmp	r3, #1
100033ac:	d15f      	bne.n	1000346e <_Unwind_VRS_Pop+0x196>
100033ae:	2c01      	cmp	r4, #1
100033b0:	eb08 0905 	add.w	r9, r8, r5
100033b4:	d058      	beq.n	10003468 <_Unwind_VRS_Pop+0x190>
100033b6:	f1b9 0f20 	cmp.w	r9, #32
100033ba:	d858      	bhi.n	1000346e <_Unwind_VRS_Pop+0x196>
100033bc:	f1b8 0f0f 	cmp.w	r8, #15
100033c0:	d975      	bls.n	100034ae <_Unwind_VRS_Pop+0x1d6>
100033c2:	2c05      	cmp	r4, #5
100033c4:	46a9      	mov	r9, r5
100033c6:	f000 80a4 	beq.w	10003512 <_Unwind_VRS_Pop+0x23a>
100033ca:	2d00      	cmp	r5, #0
100033cc:	d14f      	bne.n	1000346e <_Unwind_VRS_Pop+0x196>
100033ce:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100033d0:	b365      	cbz	r5, 1000342c <_Unwind_VRS_Pop+0x154>
100033d2:	af20      	add	r7, sp, #128	; 0x80
100033d4:	f04f 0900 	mov.w	r9, #0
100033d8:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
100033dc:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
100033e0:	3f04      	subs	r7, #4
100033e2:	f853 1b04 	ldr.w	r1, [r3], #4
100033e6:	429d      	cmp	r5, r3
100033e8:	f847 1f04 	str.w	r1, [r7, #4]!
100033ec:	d1f9      	bne.n	100033e2 <_Unwind_VRS_Pop+0x10a>
100033ee:	f1b9 0f00 	cmp.w	r9, #0
100033f2:	d00f      	beq.n	10003414 <_Unwind_VRS_Pop+0x13c>
100033f4:	466f      	mov	r7, sp
100033f6:	4641      	mov	r1, r8
100033f8:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
100033fc:	2910      	cmp	r1, #16
100033fe:	bf38      	it	cc
10003400:	2110      	movcc	r1, #16
10003402:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
10003406:	3984      	subs	r1, #132	; 0x84
10003408:	f853 0b04 	ldr.w	r0, [r3], #4
1000340c:	429d      	cmp	r5, r3
1000340e:	f841 0f04 	str.w	r0, [r1, #4]!
10003412:	d1f9      	bne.n	10003408 <_Unwind_VRS_Pop+0x130>
10003414:	2c01      	cmp	r4, #1
10003416:	d07a      	beq.n	1000350e <_Unwind_VRS_Pop+0x236>
10003418:	f1b8 0f0f 	cmp.w	r8, #15
1000341c:	63b5      	str	r5, [r6, #56]	; 0x38
1000341e:	d96a      	bls.n	100034f6 <_Unwind_VRS_Pop+0x21e>
10003420:	f1b9 0f00 	cmp.w	r9, #0
10003424:	d002      	beq.n	1000342c <_Unwind_VRS_Pop+0x154>
10003426:	4668      	mov	r0, sp
10003428:	f000 f8cc 	bl	100035c4 <__gnu_Unwind_Restore_VFP_D_16_to_31>
1000342c:	2000      	movs	r0, #0
1000342e:	b043      	add	sp, #268	; 0x10c
10003430:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10003434:	b9dc      	cbnz	r4, 1000346e <_Unwind_VRS_Pop+0x196>
10003436:	6b87      	ldr	r7, [r0, #56]	; 0x38
10003438:	4623      	mov	r3, r4
1000343a:	fa1f fc82 	uxth.w	ip, r2
1000343e:	2001      	movs	r0, #1
10003440:	1d34      	adds	r4, r6, #4
10003442:	fa00 f103 	lsl.w	r1, r0, r3
10003446:	463a      	mov	r2, r7
10003448:	ea11 0f0c 	tst.w	r1, ip
1000344c:	d004      	beq.n	10003458 <_Unwind_VRS_Pop+0x180>
1000344e:	f852 1b04 	ldr.w	r1, [r2], #4
10003452:	4617      	mov	r7, r2
10003454:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
10003458:	3301      	adds	r3, #1
1000345a:	2b10      	cmp	r3, #16
1000345c:	d1f1      	bne.n	10003442 <_Unwind_VRS_Pop+0x16a>
1000345e:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
10003462:	d1e3      	bne.n	1000342c <_Unwind_VRS_Pop+0x154>
10003464:	63b7      	str	r7, [r6, #56]	; 0x38
10003466:	e003      	b.n	10003470 <_Unwind_VRS_Pop+0x198>
10003468:	f1b9 0f10 	cmp.w	r9, #16
1000346c:	d90b      	bls.n	10003486 <_Unwind_VRS_Pop+0x1ae>
1000346e:	2002      	movs	r0, #2
10003470:	b043      	add	sp, #268	; 0x10c
10003472:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10003476:	f023 0310 	bic.w	r3, r3, #16
1000347a:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
1000347e:	6033      	str	r3, [r6, #0]
10003480:	f000 f8f6 	bl	10003670 <__gnu_Unwind_Save_WMMXC>
10003484:	e740      	b.n	10003308 <_Unwind_VRS_Pop+0x30>
10003486:	f1b8 0f0f 	cmp.w	r8, #15
1000348a:	d8f0      	bhi.n	1000346e <_Unwind_VRS_Pop+0x196>
1000348c:	6803      	ldr	r3, [r0, #0]
1000348e:	07d8      	lsls	r0, r3, #31
10003490:	d450      	bmi.n	10003534 <_Unwind_VRS_Pop+0x25c>
10003492:	af20      	add	r7, sp, #128	; 0x80
10003494:	4638      	mov	r0, r7
10003496:	f000 f889 	bl	100035ac <__gnu_Unwind_Save_VFP>
1000349a:	6bb3      	ldr	r3, [r6, #56]	; 0x38
1000349c:	2d00      	cmp	r5, #0
1000349e:	d199      	bne.n	100033d4 <_Unwind_VRS_Pop+0xfc>
100034a0:	461d      	mov	r5, r3
100034a2:	3504      	adds	r5, #4
100034a4:	4638      	mov	r0, r7
100034a6:	63b5      	str	r5, [r6, #56]	; 0x38
100034a8:	f000 f87c 	bl	100035a4 <__gnu_Unwind_Restore_VFP>
100034ac:	e7be      	b.n	1000342c <_Unwind_VRS_Pop+0x154>
100034ae:	f1b9 0f10 	cmp.w	r9, #16
100034b2:	d958      	bls.n	10003566 <_Unwind_VRS_Pop+0x28e>
100034b4:	2c05      	cmp	r4, #5
100034b6:	d1da      	bne.n	1000346e <_Unwind_VRS_Pop+0x196>
100034b8:	6833      	ldr	r3, [r6, #0]
100034ba:	f1a9 0910 	sub.w	r9, r9, #16
100034be:	07dd      	lsls	r5, r3, #31
100034c0:	d509      	bpl.n	100034d6 <_Unwind_VRS_Pop+0x1fe>
100034c2:	f023 0301 	bic.w	r3, r3, #1
100034c6:	4630      	mov	r0, r6
100034c8:	f043 0302 	orr.w	r3, r3, #2
100034cc:	f840 3b48 	str.w	r3, [r0], #72
100034d0:	f000 f874 	bl	100035bc <__gnu_Unwind_Save_VFP_D>
100034d4:	6833      	ldr	r3, [r6, #0]
100034d6:	0759      	lsls	r1, r3, #29
100034d8:	d421      	bmi.n	1000351e <_Unwind_VRS_Pop+0x246>
100034da:	a820      	add	r0, sp, #128	; 0x80
100034dc:	f000 f86e 	bl	100035bc <__gnu_Unwind_Save_VFP_D>
100034e0:	466f      	mov	r7, sp
100034e2:	f1c8 0510 	rsb	r5, r8, #16
100034e6:	4638      	mov	r0, r7
100034e8:	f000 f870 	bl	100035cc <__gnu_Unwind_Save_VFP_D_16_to_31>
100034ec:	2d00      	cmp	r5, #0
100034ee:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100034f0:	dd81      	ble.n	100033f6 <_Unwind_VRS_Pop+0x11e>
100034f2:	af20      	add	r7, sp, #128	; 0x80
100034f4:	e770      	b.n	100033d8 <_Unwind_VRS_Pop+0x100>
100034f6:	a820      	add	r0, sp, #128	; 0x80
100034f8:	f000 f85c 	bl	100035b4 <__gnu_Unwind_Restore_VFP_D>
100034fc:	e790      	b.n	10003420 <_Unwind_VRS_Pop+0x148>
100034fe:	f023 0308 	bic.w	r3, r3, #8
10003502:	f500 70a8 	add.w	r0, r0, #336	; 0x150
10003506:	6033      	str	r3, [r6, #0]
10003508:	f000 f886 	bl	10003618 <__gnu_Unwind_Save_WMMXD>
1000350c:	e72a      	b.n	10003364 <_Unwind_VRS_Pop+0x8c>
1000350e:	af20      	add	r7, sp, #128	; 0x80
10003510:	e7c7      	b.n	100034a2 <_Unwind_VRS_Pop+0x1ca>
10003512:	2d00      	cmp	r5, #0
10003514:	f43f af5b 	beq.w	100033ce <_Unwind_VRS_Pop+0xf6>
10003518:	6833      	ldr	r3, [r6, #0]
1000351a:	075a      	lsls	r2, r3, #29
1000351c:	d5e0      	bpl.n	100034e0 <_Unwind_VRS_Pop+0x208>
1000351e:	f023 0304 	bic.w	r3, r3, #4
10003522:	4630      	mov	r0, r6
10003524:	f840 3bd0 	str.w	r3, [r0], #208
10003528:	f000 f850 	bl	100035cc <__gnu_Unwind_Save_VFP_D_16_to_31>
1000352c:	f1b8 0f0f 	cmp.w	r8, #15
10003530:	d8d6      	bhi.n	100034e0 <_Unwind_VRS_Pop+0x208>
10003532:	e7d2      	b.n	100034da <_Unwind_VRS_Pop+0x202>
10003534:	f023 0303 	bic.w	r3, r3, #3
10003538:	4630      	mov	r0, r6
1000353a:	f840 3b48 	str.w	r3, [r0], #72
1000353e:	f000 f835 	bl	100035ac <__gnu_Unwind_Save_VFP>
10003542:	2c01      	cmp	r4, #1
10003544:	d0a5      	beq.n	10003492 <_Unwind_VRS_Pop+0x1ba>
10003546:	f1b8 0f0f 	cmp.w	r8, #15
1000354a:	f63f af40 	bhi.w	100033ce <_Unwind_VRS_Pop+0xf6>
1000354e:	af20      	add	r7, sp, #128	; 0x80
10003550:	4638      	mov	r0, r7
10003552:	f000 f833 	bl	100035bc <__gnu_Unwind_Save_VFP_D>
10003556:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10003558:	2d00      	cmp	r5, #0
1000355a:	f47f af3b 	bne.w	100033d4 <_Unwind_VRS_Pop+0xfc>
1000355e:	4638      	mov	r0, r7
10003560:	f000 f828 	bl	100035b4 <__gnu_Unwind_Restore_VFP_D>
10003564:	e762      	b.n	1000342c <_Unwind_VRS_Pop+0x154>
10003566:	6833      	ldr	r3, [r6, #0]
10003568:	07d9      	lsls	r1, r3, #31
1000356a:	d5ea      	bpl.n	10003542 <_Unwind_VRS_Pop+0x26a>
1000356c:	2c05      	cmp	r4, #5
1000356e:	d1e1      	bne.n	10003534 <_Unwind_VRS_Pop+0x25c>
10003570:	f023 0301 	bic.w	r3, r3, #1
10003574:	4630      	mov	r0, r6
10003576:	af20      	add	r7, sp, #128	; 0x80
10003578:	f043 0302 	orr.w	r3, r3, #2
1000357c:	f840 3b48 	str.w	r3, [r0], #72
10003580:	f000 f81c 	bl	100035bc <__gnu_Unwind_Save_VFP_D>
10003584:	4638      	mov	r0, r7
10003586:	f000 f819 	bl	100035bc <__gnu_Unwind_Save_VFP_D>
1000358a:	e7e4      	b.n	10003556 <_Unwind_VRS_Pop+0x27e>

1000358c <__restore_core_regs>:
1000358c:	f100 0134 	add.w	r1, r0, #52	; 0x34
10003590:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
10003594:	469c      	mov	ip, r3
10003596:	46a6      	mov	lr, r4
10003598:	f84c 5d04 	str.w	r5, [ip, #-4]!
1000359c:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
100035a0:	46e5      	mov	sp, ip
100035a2:	bd00      	pop	{pc}

100035a4 <__gnu_Unwind_Restore_VFP>:
100035a4:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
100035a8:	4770      	bx	lr
100035aa:	bf00      	nop

100035ac <__gnu_Unwind_Save_VFP>:
100035ac:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
100035b0:	4770      	bx	lr
100035b2:	bf00      	nop

100035b4 <__gnu_Unwind_Restore_VFP_D>:
100035b4:	ec90 0b20 	vldmia	r0, {d0-d15}
100035b8:	4770      	bx	lr
100035ba:	bf00      	nop

100035bc <__gnu_Unwind_Save_VFP_D>:
100035bc:	ec80 0b20 	vstmia	r0, {d0-d15}
100035c0:	4770      	bx	lr
100035c2:	bf00      	nop

100035c4 <__gnu_Unwind_Restore_VFP_D_16_to_31>:
100035c4:	ecd0 0b20 	vldmia	r0, {d16-d31}
100035c8:	4770      	bx	lr
100035ca:	bf00      	nop

100035cc <__gnu_Unwind_Save_VFP_D_16_to_31>:
100035cc:	ecc0 0b20 	vstmia	r0, {d16-d31}
100035d0:	4770      	bx	lr
100035d2:	bf00      	nop

100035d4 <__gnu_Unwind_Restore_WMMXD>:
100035d4:	ecf0 0102 	ldfe	f0, [r0], #8
100035d8:	ecf0 1102 	ldfe	f1, [r0], #8
100035dc:	ecf0 2102 	ldfe	f2, [r0], #8
100035e0:	ecf0 3102 	ldfe	f3, [r0], #8
100035e4:	ecf0 4102 	ldfe	f4, [r0], #8
100035e8:	ecf0 5102 	ldfe	f5, [r0], #8
100035ec:	ecf0 6102 	ldfe	f6, [r0], #8
100035f0:	ecf0 7102 	ldfe	f7, [r0], #8
100035f4:	ecf0 8102 	ldfp	f0, [r0], #8
100035f8:	ecf0 9102 	ldfp	f1, [r0], #8
100035fc:	ecf0 a102 	ldfp	f2, [r0], #8
10003600:	ecf0 b102 	ldfp	f3, [r0], #8
10003604:	ecf0 c102 	ldfp	f4, [r0], #8
10003608:	ecf0 d102 	ldfp	f5, [r0], #8
1000360c:	ecf0 e102 	ldfp	f6, [r0], #8
10003610:	ecf0 f102 	ldfp	f7, [r0], #8
10003614:	4770      	bx	lr
10003616:	bf00      	nop

10003618 <__gnu_Unwind_Save_WMMXD>:
10003618:	ece0 0102 	stfe	f0, [r0], #8
1000361c:	ece0 1102 	stfe	f1, [r0], #8
10003620:	ece0 2102 	stfe	f2, [r0], #8
10003624:	ece0 3102 	stfe	f3, [r0], #8
10003628:	ece0 4102 	stfe	f4, [r0], #8
1000362c:	ece0 5102 	stfe	f5, [r0], #8
10003630:	ece0 6102 	stfe	f6, [r0], #8
10003634:	ece0 7102 	stfe	f7, [r0], #8
10003638:	ece0 8102 	stfp	f0, [r0], #8
1000363c:	ece0 9102 	stfp	f1, [r0], #8
10003640:	ece0 a102 	stfp	f2, [r0], #8
10003644:	ece0 b102 	stfp	f3, [r0], #8
10003648:	ece0 c102 	stfp	f4, [r0], #8
1000364c:	ece0 d102 	stfp	f5, [r0], #8
10003650:	ece0 e102 	stfp	f6, [r0], #8
10003654:	ece0 f102 	stfp	f7, [r0], #8
10003658:	4770      	bx	lr
1000365a:	bf00      	nop

1000365c <__gnu_Unwind_Restore_WMMXC>:
1000365c:	fcb0 8101 	ldc2	1, cr8, [r0], #4
10003660:	fcb0 9101 	ldc2	1, cr9, [r0], #4
10003664:	fcb0 a101 	ldc2	1, cr10, [r0], #4
10003668:	fcb0 b101 	ldc2	1, cr11, [r0], #4
1000366c:	4770      	bx	lr
1000366e:	bf00      	nop

10003670 <__gnu_Unwind_Save_WMMXC>:
10003670:	fca0 8101 	stc2	1, cr8, [r0], #4
10003674:	fca0 9101 	stc2	1, cr9, [r0], #4
10003678:	fca0 a101 	stc2	1, cr10, [r0], #4
1000367c:	fca0 b101 	stc2	1, cr11, [r0], #4
10003680:	4770      	bx	lr
10003682:	bf00      	nop

10003684 <_Unwind_RaiseException>:
10003684:	46ec      	mov	ip, sp
10003686:	b500      	push	{lr}
10003688:	e92d 5000 	stmdb	sp!, {ip, lr}
1000368c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10003690:	f04f 0300 	mov.w	r3, #0
10003694:	e92d 000c 	stmdb	sp!, {r2, r3}
10003698:	a901      	add	r1, sp, #4
1000369a:	f7ff fbb7 	bl	10002e0c <__gnu_Unwind_RaiseException>
1000369e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100036a2:	b012      	add	sp, #72	; 0x48
100036a4:	4770      	bx	lr
100036a6:	bf00      	nop

100036a8 <_Unwind_Resume>:
100036a8:	46ec      	mov	ip, sp
100036aa:	b500      	push	{lr}
100036ac:	e92d 5000 	stmdb	sp!, {ip, lr}
100036b0:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100036b4:	f04f 0300 	mov.w	r3, #0
100036b8:	e92d 000c 	stmdb	sp!, {r2, r3}
100036bc:	a901      	add	r1, sp, #4
100036be:	f7ff fbe3 	bl	10002e88 <__gnu_Unwind_Resume>
100036c2:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100036c6:	b012      	add	sp, #72	; 0x48
100036c8:	4770      	bx	lr
100036ca:	bf00      	nop

100036cc <_Unwind_Resume_or_Rethrow>:
100036cc:	46ec      	mov	ip, sp
100036ce:	b500      	push	{lr}
100036d0:	e92d 5000 	stmdb	sp!, {ip, lr}
100036d4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100036d8:	f04f 0300 	mov.w	r3, #0
100036dc:	e92d 000c 	stmdb	sp!, {r2, r3}
100036e0:	a901      	add	r1, sp, #4
100036e2:	f7ff fbf3 	bl	10002ecc <__gnu_Unwind_Resume_or_Rethrow>
100036e6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100036ea:	b012      	add	sp, #72	; 0x48
100036ec:	4770      	bx	lr
100036ee:	bf00      	nop

100036f0 <_Unwind_ForcedUnwind>:
100036f0:	46ec      	mov	ip, sp
100036f2:	b500      	push	{lr}
100036f4:	e92d 5000 	stmdb	sp!, {ip, lr}
100036f8:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100036fc:	f04f 0300 	mov.w	r3, #0
10003700:	e92d 000c 	stmdb	sp!, {r2, r3}
10003704:	ab01      	add	r3, sp, #4
10003706:	f7ff fbb5 	bl	10002e74 <__gnu_Unwind_ForcedUnwind>
1000370a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000370e:	b012      	add	sp, #72	; 0x48
10003710:	4770      	bx	lr
10003712:	bf00      	nop

10003714 <_Unwind_Backtrace>:
10003714:	46ec      	mov	ip, sp
10003716:	b500      	push	{lr}
10003718:	e92d 5000 	stmdb	sp!, {ip, lr}
1000371c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10003720:	f04f 0300 	mov.w	r3, #0
10003724:	e92d 000c 	stmdb	sp!, {r2, r3}
10003728:	aa01      	add	r2, sp, #4
1000372a:	f7ff fc2d 	bl	10002f88 <__gnu_Unwind_Backtrace>
1000372e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10003732:	b012      	add	sp, #72	; 0x48
10003734:	4770      	bx	lr
10003736:	bf00      	nop

10003738 <next_unwind_byte>:
10003738:	7a02      	ldrb	r2, [r0, #8]
1000373a:	4603      	mov	r3, r0
1000373c:	b98a      	cbnz	r2, 10003762 <next_unwind_byte+0x2a>
1000373e:	7a42      	ldrb	r2, [r0, #9]
10003740:	b1b2      	cbz	r2, 10003770 <next_unwind_byte+0x38>
10003742:	6841      	ldr	r1, [r0, #4]
10003744:	3a01      	subs	r2, #1
10003746:	f04f 0c03 	mov.w	ip, #3
1000374a:	b410      	push	{r4}
1000374c:	7242      	strb	r2, [r0, #9]
1000374e:	1d0c      	adds	r4, r1, #4
10003750:	6808      	ldr	r0, [r1, #0]
10003752:	f883 c008 	strb.w	ip, [r3, #8]
10003756:	0202      	lsls	r2, r0, #8
10003758:	605c      	str	r4, [r3, #4]
1000375a:	0e00      	lsrs	r0, r0, #24
1000375c:	bc10      	pop	{r4}
1000375e:	601a      	str	r2, [r3, #0]
10003760:	4770      	bx	lr
10003762:	6800      	ldr	r0, [r0, #0]
10003764:	3a01      	subs	r2, #1
10003766:	721a      	strb	r2, [r3, #8]
10003768:	0202      	lsls	r2, r0, #8
1000376a:	0e00      	lsrs	r0, r0, #24
1000376c:	601a      	str	r2, [r3, #0]
1000376e:	4770      	bx	lr
10003770:	20b0      	movs	r0, #176	; 0xb0
10003772:	4770      	bx	lr

10003774 <_Unwind_GetGR.constprop.0>:
10003774:	b510      	push	{r4, lr}
10003776:	b084      	sub	sp, #16
10003778:	2300      	movs	r3, #0
1000377a:	220c      	movs	r2, #12
1000377c:	ac03      	add	r4, sp, #12
1000377e:	4619      	mov	r1, r3
10003780:	9400      	str	r4, [sp, #0]
10003782:	f7ff fbb5 	bl	10002ef0 <_Unwind_VRS_Get>
10003786:	9803      	ldr	r0, [sp, #12]
10003788:	b004      	add	sp, #16
1000378a:	bd10      	pop	{r4, pc}

1000378c <unwind_UCB_from_context>:
1000378c:	e7f2      	b.n	10003774 <_Unwind_GetGR.constprop.0>
1000378e:	bf00      	nop

10003790 <__gnu_unwind_execute>:
10003790:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10003794:	f04f 0800 	mov.w	r8, #0
10003798:	b085      	sub	sp, #20
1000379a:	4606      	mov	r6, r0
1000379c:	460d      	mov	r5, r1
1000379e:	4628      	mov	r0, r5
100037a0:	f7ff ffca 	bl	10003738 <next_unwind_byte>
100037a4:	28b0      	cmp	r0, #176	; 0xb0
100037a6:	4604      	mov	r4, r0
100037a8:	f000 80bc 	beq.w	10003924 <__gnu_unwind_execute+0x194>
100037ac:	0607      	lsls	r7, r0, #24
100037ae:	d520      	bpl.n	100037f2 <__gnu_unwind_execute+0x62>
100037b0:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
100037b4:	2b80      	cmp	r3, #128	; 0x80
100037b6:	d04e      	beq.n	10003856 <__gnu_unwind_execute+0xc6>
100037b8:	2b90      	cmp	r3, #144	; 0x90
100037ba:	d037      	beq.n	1000382c <__gnu_unwind_execute+0x9c>
100037bc:	2ba0      	cmp	r3, #160	; 0xa0
100037be:	d061      	beq.n	10003884 <__gnu_unwind_execute+0xf4>
100037c0:	2bb0      	cmp	r3, #176	; 0xb0
100037c2:	d076      	beq.n	100038b2 <__gnu_unwind_execute+0x122>
100037c4:	2bc0      	cmp	r3, #192	; 0xc0
100037c6:	f000 808d 	beq.w	100038e4 <__gnu_unwind_execute+0x154>
100037ca:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
100037ce:	2bd0      	cmp	r3, #208	; 0xd0
100037d0:	d10b      	bne.n	100037ea <__gnu_unwind_execute+0x5a>
100037d2:	f000 0207 	and.w	r2, r0, #7
100037d6:	2305      	movs	r3, #5
100037d8:	2101      	movs	r1, #1
100037da:	4630      	mov	r0, r6
100037dc:	3201      	adds	r2, #1
100037de:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
100037e2:	f7ff fd79 	bl	100032d8 <_Unwind_VRS_Pop>
100037e6:	2800      	cmp	r0, #0
100037e8:	d0d9      	beq.n	1000379e <__gnu_unwind_execute+0xe>
100037ea:	2009      	movs	r0, #9
100037ec:	b005      	add	sp, #20
100037ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
100037f2:	0083      	lsls	r3, r0, #2
100037f4:	f10d 090c 	add.w	r9, sp, #12
100037f8:	220d      	movs	r2, #13
100037fa:	4630      	mov	r0, r6
100037fc:	b2db      	uxtb	r3, r3
100037fe:	f8cd 9000 	str.w	r9, [sp]
10003802:	1d1f      	adds	r7, r3, #4
10003804:	2300      	movs	r3, #0
10003806:	4619      	mov	r1, r3
10003808:	f7ff fb72 	bl	10002ef0 <_Unwind_VRS_Get>
1000380c:	9b03      	ldr	r3, [sp, #12]
1000380e:	0660      	lsls	r0, r4, #25
10003810:	f04f 020d 	mov.w	r2, #13
10003814:	4630      	mov	r0, r6
10003816:	f8cd 9000 	str.w	r9, [sp]
1000381a:	bf4c      	ite	mi
1000381c:	1bdf      	submi	r7, r3, r7
1000381e:	18ff      	addpl	r7, r7, r3
10003820:	2300      	movs	r3, #0
10003822:	9703      	str	r7, [sp, #12]
10003824:	4619      	mov	r1, r3
10003826:	f7ff fb89 	bl	10002f3c <_Unwind_VRS_Set>
1000382a:	e7b8      	b.n	1000379e <__gnu_unwind_execute+0xe>
1000382c:	f000 030d 	and.w	r3, r0, #13
10003830:	2b0d      	cmp	r3, #13
10003832:	d0da      	beq.n	100037ea <__gnu_unwind_execute+0x5a>
10003834:	af03      	add	r7, sp, #12
10003836:	2300      	movs	r3, #0
10003838:	f000 020f 	and.w	r2, r0, #15
1000383c:	4630      	mov	r0, r6
1000383e:	4619      	mov	r1, r3
10003840:	9700      	str	r7, [sp, #0]
10003842:	f7ff fb55 	bl	10002ef0 <_Unwind_VRS_Get>
10003846:	2300      	movs	r3, #0
10003848:	220d      	movs	r2, #13
1000384a:	4630      	mov	r0, r6
1000384c:	4619      	mov	r1, r3
1000384e:	9700      	str	r7, [sp, #0]
10003850:	f7ff fb74 	bl	10002f3c <_Unwind_VRS_Set>
10003854:	e7a3      	b.n	1000379e <__gnu_unwind_execute+0xe>
10003856:	0224      	lsls	r4, r4, #8
10003858:	4628      	mov	r0, r5
1000385a:	f7ff ff6d 	bl	10003738 <next_unwind_byte>
1000385e:	4320      	orrs	r0, r4
10003860:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
10003864:	d0c1      	beq.n	100037ea <__gnu_unwind_execute+0x5a>
10003866:	0104      	lsls	r4, r0, #4
10003868:	2300      	movs	r3, #0
1000386a:	4630      	mov	r0, r6
1000386c:	b2a2      	uxth	r2, r4
1000386e:	4619      	mov	r1, r3
10003870:	f7ff fd32 	bl	100032d8 <_Unwind_VRS_Pop>
10003874:	2800      	cmp	r0, #0
10003876:	d1b8      	bne.n	100037ea <__gnu_unwind_execute+0x5a>
10003878:	f414 4f00 	tst.w	r4, #32768	; 0x8000
1000387c:	bf18      	it	ne
1000387e:	f04f 0801 	movne.w	r8, #1
10003882:	e78c      	b.n	1000379e <__gnu_unwind_execute+0xe>
10003884:	43c2      	mvns	r2, r0
10003886:	0701      	lsls	r1, r0, #28
10003888:	4630      	mov	r0, r6
1000388a:	f002 0307 	and.w	r3, r2, #7
1000388e:	f44f 627f 	mov.w	r2, #4080	; 0xff0
10003892:	fa42 f203 	asr.w	r2, r2, r3
10003896:	f04f 0300 	mov.w	r3, #0
1000389a:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
1000389e:	4619      	mov	r1, r3
100038a0:	bf48      	it	mi
100038a2:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
100038a6:	f7ff fd17 	bl	100032d8 <_Unwind_VRS_Pop>
100038aa:	2800      	cmp	r0, #0
100038ac:	f43f af77 	beq.w	1000379e <__gnu_unwind_execute+0xe>
100038b0:	e79b      	b.n	100037ea <__gnu_unwind_execute+0x5a>
100038b2:	28b1      	cmp	r0, #177	; 0xb1
100038b4:	d03b      	beq.n	1000392e <__gnu_unwind_execute+0x19e>
100038b6:	28b2      	cmp	r0, #178	; 0xb2
100038b8:	f000 80a1 	beq.w	100039fe <__gnu_unwind_execute+0x26e>
100038bc:	28b3      	cmp	r0, #179	; 0xb3
100038be:	d041      	beq.n	10003944 <__gnu_unwind_execute+0x1b4>
100038c0:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
100038c4:	2bb4      	cmp	r3, #180	; 0xb4
100038c6:	d090      	beq.n	100037ea <__gnu_unwind_execute+0x5a>
100038c8:	f000 0207 	and.w	r2, r0, #7
100038cc:	2301      	movs	r3, #1
100038ce:	441a      	add	r2, r3
100038d0:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
100038d4:	4619      	mov	r1, r3
100038d6:	4630      	mov	r0, r6
100038d8:	f7ff fcfe 	bl	100032d8 <_Unwind_VRS_Pop>
100038dc:	2800      	cmp	r0, #0
100038de:	f43f af5e 	beq.w	1000379e <__gnu_unwind_execute+0xe>
100038e2:	e782      	b.n	100037ea <__gnu_unwind_execute+0x5a>
100038e4:	28c6      	cmp	r0, #198	; 0xc6
100038e6:	d051      	beq.n	1000398c <__gnu_unwind_execute+0x1fc>
100038e8:	28c7      	cmp	r0, #199	; 0xc7
100038ea:	d062      	beq.n	100039b2 <__gnu_unwind_execute+0x222>
100038ec:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
100038f0:	2bc0      	cmp	r3, #192	; 0xc0
100038f2:	d071      	beq.n	100039d8 <__gnu_unwind_execute+0x248>
100038f4:	28c8      	cmp	r0, #200	; 0xc8
100038f6:	d076      	beq.n	100039e6 <__gnu_unwind_execute+0x256>
100038f8:	28c9      	cmp	r0, #201	; 0xc9
100038fa:	f47f af76 	bne.w	100037ea <__gnu_unwind_execute+0x5a>
100038fe:	4628      	mov	r0, r5
10003900:	f7ff ff1a 	bl	10003738 <next_unwind_byte>
10003904:	0302      	lsls	r2, r0, #12
10003906:	f000 000f 	and.w	r0, r0, #15
1000390a:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
1000390e:	3001      	adds	r0, #1
10003910:	4302      	orrs	r2, r0
10003912:	2101      	movs	r1, #1
10003914:	2305      	movs	r3, #5
10003916:	4630      	mov	r0, r6
10003918:	f7ff fcde 	bl	100032d8 <_Unwind_VRS_Pop>
1000391c:	2800      	cmp	r0, #0
1000391e:	f43f af3e 	beq.w	1000379e <__gnu_unwind_execute+0xe>
10003922:	e762      	b.n	100037ea <__gnu_unwind_execute+0x5a>
10003924:	f1b8 0f00 	cmp.w	r8, #0
10003928:	d01f      	beq.n	1000396a <__gnu_unwind_execute+0x1da>
1000392a:	2000      	movs	r0, #0
1000392c:	e75e      	b.n	100037ec <__gnu_unwind_execute+0x5c>
1000392e:	4628      	mov	r0, r5
10003930:	f7ff ff02 	bl	10003738 <next_unwind_byte>
10003934:	4602      	mov	r2, r0
10003936:	2800      	cmp	r0, #0
10003938:	f43f af57 	beq.w	100037ea <__gnu_unwind_execute+0x5a>
1000393c:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
10003940:	d0c8      	beq.n	100038d4 <__gnu_unwind_execute+0x144>
10003942:	e752      	b.n	100037ea <__gnu_unwind_execute+0x5a>
10003944:	4628      	mov	r0, r5
10003946:	f7ff fef7 	bl	10003738 <next_unwind_byte>
1000394a:	f000 030f 	and.w	r3, r0, #15
1000394e:	0302      	lsls	r2, r0, #12
10003950:	4630      	mov	r0, r6
10003952:	3301      	adds	r3, #1
10003954:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10003958:	431a      	orrs	r2, r3
1000395a:	2301      	movs	r3, #1
1000395c:	4619      	mov	r1, r3
1000395e:	f7ff fcbb 	bl	100032d8 <_Unwind_VRS_Pop>
10003962:	2800      	cmp	r0, #0
10003964:	f43f af1b 	beq.w	1000379e <__gnu_unwind_execute+0xe>
10003968:	e73f      	b.n	100037ea <__gnu_unwind_execute+0x5a>
1000396a:	ac03      	add	r4, sp, #12
1000396c:	4643      	mov	r3, r8
1000396e:	220e      	movs	r2, #14
10003970:	4641      	mov	r1, r8
10003972:	4630      	mov	r0, r6
10003974:	9400      	str	r4, [sp, #0]
10003976:	f7ff fabb 	bl	10002ef0 <_Unwind_VRS_Get>
1000397a:	4643      	mov	r3, r8
1000397c:	220f      	movs	r2, #15
1000397e:	4630      	mov	r0, r6
10003980:	4641      	mov	r1, r8
10003982:	9400      	str	r4, [sp, #0]
10003984:	f7ff fada 	bl	10002f3c <_Unwind_VRS_Set>
10003988:	4640      	mov	r0, r8
1000398a:	e72f      	b.n	100037ec <__gnu_unwind_execute+0x5c>
1000398c:	4628      	mov	r0, r5
1000398e:	f7ff fed3 	bl	10003738 <next_unwind_byte>
10003992:	f000 030f 	and.w	r3, r0, #15
10003996:	0302      	lsls	r2, r0, #12
10003998:	4630      	mov	r0, r6
1000399a:	3301      	adds	r3, #1
1000399c:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
100039a0:	431a      	orrs	r2, r3
100039a2:	2303      	movs	r3, #3
100039a4:	4619      	mov	r1, r3
100039a6:	f7ff fc97 	bl	100032d8 <_Unwind_VRS_Pop>
100039aa:	2800      	cmp	r0, #0
100039ac:	f43f aef7 	beq.w	1000379e <__gnu_unwind_execute+0xe>
100039b0:	e71b      	b.n	100037ea <__gnu_unwind_execute+0x5a>
100039b2:	4628      	mov	r0, r5
100039b4:	f7ff fec0 	bl	10003738 <next_unwind_byte>
100039b8:	4602      	mov	r2, r0
100039ba:	2800      	cmp	r0, #0
100039bc:	f43f af15 	beq.w	100037ea <__gnu_unwind_execute+0x5a>
100039c0:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
100039c4:	f47f af11 	bne.w	100037ea <__gnu_unwind_execute+0x5a>
100039c8:	2104      	movs	r1, #4
100039ca:	4630      	mov	r0, r6
100039cc:	f7ff fc84 	bl	100032d8 <_Unwind_VRS_Pop>
100039d0:	2800      	cmp	r0, #0
100039d2:	f43f aee4 	beq.w	1000379e <__gnu_unwind_execute+0xe>
100039d6:	e708      	b.n	100037ea <__gnu_unwind_execute+0x5a>
100039d8:	f000 020f 	and.w	r2, r0, #15
100039dc:	2303      	movs	r3, #3
100039de:	3201      	adds	r2, #1
100039e0:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
100039e4:	e776      	b.n	100038d4 <__gnu_unwind_execute+0x144>
100039e6:	4628      	mov	r0, r5
100039e8:	f7ff fea6 	bl	10003738 <next_unwind_byte>
100039ec:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
100039f0:	f000 030f 	and.w	r3, r0, #15
100039f4:	3210      	adds	r2, #16
100039f6:	3301      	adds	r3, #1
100039f8:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
100039fc:	e789      	b.n	10003912 <__gnu_unwind_execute+0x182>
100039fe:	2300      	movs	r3, #0
10003a00:	f10d 090c 	add.w	r9, sp, #12
10003a04:	220d      	movs	r2, #13
10003a06:	4630      	mov	r0, r6
10003a08:	4619      	mov	r1, r3
10003a0a:	f8cd 9000 	str.w	r9, [sp]
10003a0e:	f7ff fa6f 	bl	10002ef0 <_Unwind_VRS_Get>
10003a12:	4628      	mov	r0, r5
10003a14:	f7ff fe90 	bl	10003738 <next_unwind_byte>
10003a18:	0602      	lsls	r2, r0, #24
10003a1a:	f04f 0402 	mov.w	r4, #2
10003a1e:	d50b      	bpl.n	10003a38 <__gnu_unwind_execute+0x2a8>
10003a20:	f000 007f 	and.w	r0, r0, #127	; 0x7f
10003a24:	9b03      	ldr	r3, [sp, #12]
10003a26:	40a0      	lsls	r0, r4
10003a28:	3407      	adds	r4, #7
10003a2a:	4418      	add	r0, r3
10003a2c:	9003      	str	r0, [sp, #12]
10003a2e:	4628      	mov	r0, r5
10003a30:	f7ff fe82 	bl	10003738 <next_unwind_byte>
10003a34:	0603      	lsls	r3, r0, #24
10003a36:	d4f3      	bmi.n	10003a20 <__gnu_unwind_execute+0x290>
10003a38:	9b03      	ldr	r3, [sp, #12]
10003a3a:	f000 027f 	and.w	r2, r0, #127	; 0x7f
10003a3e:	f8cd 9000 	str.w	r9, [sp]
10003a42:	4630      	mov	r0, r6
10003a44:	40a2      	lsls	r2, r4
10003a46:	f503 7301 	add.w	r3, r3, #516	; 0x204
10003a4a:	441a      	add	r2, r3
10003a4c:	2300      	movs	r3, #0
10003a4e:	9203      	str	r2, [sp, #12]
10003a50:	4619      	mov	r1, r3
10003a52:	220d      	movs	r2, #13
10003a54:	f7ff fa72 	bl	10002f3c <_Unwind_VRS_Set>
10003a58:	e6a1      	b.n	1000379e <__gnu_unwind_execute+0xe>
10003a5a:	bf00      	nop

10003a5c <__gnu_unwind_frame>:
10003a5c:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
10003a5e:	460b      	mov	r3, r1
10003a60:	f04f 0c03 	mov.w	ip, #3
10003a64:	4618      	mov	r0, r3
10003a66:	3208      	adds	r2, #8
10003a68:	f852 3c04 	ldr.w	r3, [r2, #-4]
10003a6c:	b500      	push	{lr}
10003a6e:	b085      	sub	sp, #20
10003a70:	9202      	str	r2, [sp, #8]
10003a72:	a901      	add	r1, sp, #4
10003a74:	0e1a      	lsrs	r2, r3, #24
10003a76:	f88d c00c 	strb.w	ip, [sp, #12]
10003a7a:	021b      	lsls	r3, r3, #8
10003a7c:	f88d 200d 	strb.w	r2, [sp, #13]
10003a80:	9301      	str	r3, [sp, #4]
10003a82:	f7ff fe85 	bl	10003790 <__gnu_unwind_execute>
10003a86:	b005      	add	sp, #20
10003a88:	f85d fb04 	ldr.w	pc, [sp], #4

10003a8c <_Unwind_GetRegionStart>:
10003a8c:	b508      	push	{r3, lr}
10003a8e:	f7ff fe7d 	bl	1000378c <unwind_UCB_from_context>
10003a92:	6c80      	ldr	r0, [r0, #72]	; 0x48
10003a94:	bd08      	pop	{r3, pc}
10003a96:	bf00      	nop

10003a98 <_Unwind_GetLanguageSpecificData>:
10003a98:	b508      	push	{r3, lr}
10003a9a:	f7ff fe77 	bl	1000378c <unwind_UCB_from_context>
10003a9e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
10003aa0:	79c3      	ldrb	r3, [r0, #7]
10003aa2:	3302      	adds	r3, #2
10003aa4:	eb00 0083 	add.w	r0, r0, r3, lsl #2
10003aa8:	bd08      	pop	{r3, pc}
10003aaa:	bf00      	nop

10003aac <__aeabi_idiv0>:
10003aac:	4770      	bx	lr
10003aae:	bf00      	nop

10003ab0 <abort>:
10003ab0:	2006      	movs	r0, #6
10003ab2:	b508      	push	{r3, lr}
10003ab4:	f000 f8cc 	bl	10003c50 <raise>
10003ab8:	2001      	movs	r0, #1
10003aba:	f000 f991 	bl	10003de0 <_exit>
10003abe:	bf00      	nop

10003ac0 <memcpy>:
10003ac0:	4684      	mov	ip, r0
10003ac2:	ea41 0300 	orr.w	r3, r1, r0
10003ac6:	f013 0303 	ands.w	r3, r3, #3
10003aca:	d149      	bne.n	10003b60 <memcpy+0xa0>
10003acc:	3a40      	subs	r2, #64	; 0x40
10003ace:	d323      	bcc.n	10003b18 <memcpy+0x58>
10003ad0:	680b      	ldr	r3, [r1, #0]
10003ad2:	6003      	str	r3, [r0, #0]
10003ad4:	684b      	ldr	r3, [r1, #4]
10003ad6:	6043      	str	r3, [r0, #4]
10003ad8:	688b      	ldr	r3, [r1, #8]
10003ada:	6083      	str	r3, [r0, #8]
10003adc:	68cb      	ldr	r3, [r1, #12]
10003ade:	60c3      	str	r3, [r0, #12]
10003ae0:	690b      	ldr	r3, [r1, #16]
10003ae2:	6103      	str	r3, [r0, #16]
10003ae4:	694b      	ldr	r3, [r1, #20]
10003ae6:	6143      	str	r3, [r0, #20]
10003ae8:	698b      	ldr	r3, [r1, #24]
10003aea:	6183      	str	r3, [r0, #24]
10003aec:	69cb      	ldr	r3, [r1, #28]
10003aee:	61c3      	str	r3, [r0, #28]
10003af0:	6a0b      	ldr	r3, [r1, #32]
10003af2:	6203      	str	r3, [r0, #32]
10003af4:	6a4b      	ldr	r3, [r1, #36]	; 0x24
10003af6:	6243      	str	r3, [r0, #36]	; 0x24
10003af8:	6a8b      	ldr	r3, [r1, #40]	; 0x28
10003afa:	6283      	str	r3, [r0, #40]	; 0x28
10003afc:	6acb      	ldr	r3, [r1, #44]	; 0x2c
10003afe:	62c3      	str	r3, [r0, #44]	; 0x2c
10003b00:	6b0b      	ldr	r3, [r1, #48]	; 0x30
10003b02:	6303      	str	r3, [r0, #48]	; 0x30
10003b04:	6b4b      	ldr	r3, [r1, #52]	; 0x34
10003b06:	6343      	str	r3, [r0, #52]	; 0x34
10003b08:	6b8b      	ldr	r3, [r1, #56]	; 0x38
10003b0a:	6383      	str	r3, [r0, #56]	; 0x38
10003b0c:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10003b0e:	63c3      	str	r3, [r0, #60]	; 0x3c
10003b10:	3040      	adds	r0, #64	; 0x40
10003b12:	3140      	adds	r1, #64	; 0x40
10003b14:	3a40      	subs	r2, #64	; 0x40
10003b16:	d2db      	bcs.n	10003ad0 <memcpy+0x10>
10003b18:	3230      	adds	r2, #48	; 0x30
10003b1a:	d30b      	bcc.n	10003b34 <memcpy+0x74>
10003b1c:	680b      	ldr	r3, [r1, #0]
10003b1e:	6003      	str	r3, [r0, #0]
10003b20:	684b      	ldr	r3, [r1, #4]
10003b22:	6043      	str	r3, [r0, #4]
10003b24:	688b      	ldr	r3, [r1, #8]
10003b26:	6083      	str	r3, [r0, #8]
10003b28:	68cb      	ldr	r3, [r1, #12]
10003b2a:	60c3      	str	r3, [r0, #12]
10003b2c:	3010      	adds	r0, #16
10003b2e:	3110      	adds	r1, #16
10003b30:	3a10      	subs	r2, #16
10003b32:	d2f3      	bcs.n	10003b1c <memcpy+0x5c>
10003b34:	320c      	adds	r2, #12
10003b36:	d305      	bcc.n	10003b44 <memcpy+0x84>
10003b38:	f851 3b04 	ldr.w	r3, [r1], #4
10003b3c:	f840 3b04 	str.w	r3, [r0], #4
10003b40:	3a04      	subs	r2, #4
10003b42:	d2f9      	bcs.n	10003b38 <memcpy+0x78>
10003b44:	3204      	adds	r2, #4
10003b46:	d008      	beq.n	10003b5a <memcpy+0x9a>
10003b48:	07d2      	lsls	r2, r2, #31
10003b4a:	bf1c      	itt	ne
10003b4c:	f811 3b01 	ldrbne.w	r3, [r1], #1
10003b50:	f800 3b01 	strbne.w	r3, [r0], #1
10003b54:	d301      	bcc.n	10003b5a <memcpy+0x9a>
10003b56:	880b      	ldrh	r3, [r1, #0]
10003b58:	8003      	strh	r3, [r0, #0]
10003b5a:	4660      	mov	r0, ip
10003b5c:	4770      	bx	lr
10003b5e:	bf00      	nop
10003b60:	2a08      	cmp	r2, #8
10003b62:	d313      	bcc.n	10003b8c <memcpy+0xcc>
10003b64:	078b      	lsls	r3, r1, #30
10003b66:	d0b1      	beq.n	10003acc <memcpy+0xc>
10003b68:	f010 0303 	ands.w	r3, r0, #3
10003b6c:	d0ae      	beq.n	10003acc <memcpy+0xc>
10003b6e:	f1c3 0304 	rsb	r3, r3, #4
10003b72:	1ad2      	subs	r2, r2, r3
10003b74:	07db      	lsls	r3, r3, #31
10003b76:	bf1c      	itt	ne
10003b78:	f811 3b01 	ldrbne.w	r3, [r1], #1
10003b7c:	f800 3b01 	strbne.w	r3, [r0], #1
10003b80:	d3a4      	bcc.n	10003acc <memcpy+0xc>
10003b82:	f831 3b02 	ldrh.w	r3, [r1], #2
10003b86:	f820 3b02 	strh.w	r3, [r0], #2
10003b8a:	e79f      	b.n	10003acc <memcpy+0xc>
10003b8c:	3a04      	subs	r2, #4
10003b8e:	d3d9      	bcc.n	10003b44 <memcpy+0x84>
10003b90:	3a01      	subs	r2, #1
10003b92:	f811 3b01 	ldrb.w	r3, [r1], #1
10003b96:	f800 3b01 	strb.w	r3, [r0], #1
10003b9a:	d2f9      	bcs.n	10003b90 <memcpy+0xd0>
10003b9c:	780b      	ldrb	r3, [r1, #0]
10003b9e:	7003      	strb	r3, [r0, #0]
10003ba0:	784b      	ldrb	r3, [r1, #1]
10003ba2:	7043      	strb	r3, [r0, #1]
10003ba4:	788b      	ldrb	r3, [r1, #2]
10003ba6:	7083      	strb	r3, [r0, #2]
10003ba8:	4660      	mov	r0, ip
10003baa:	4770      	bx	lr

10003bac <memset>:
10003bac:	b570      	push	{r4, r5, r6, lr}
10003bae:	0786      	lsls	r6, r0, #30
10003bb0:	d048      	beq.n	10003c44 <memset+0x98>
10003bb2:	1e54      	subs	r4, r2, #1
10003bb4:	2a00      	cmp	r2, #0
10003bb6:	d03f      	beq.n	10003c38 <memset+0x8c>
10003bb8:	b2ca      	uxtb	r2, r1
10003bba:	4603      	mov	r3, r0
10003bbc:	e001      	b.n	10003bc2 <memset+0x16>
10003bbe:	3c01      	subs	r4, #1
10003bc0:	d33a      	bcc.n	10003c38 <memset+0x8c>
10003bc2:	f803 2b01 	strb.w	r2, [r3], #1
10003bc6:	079d      	lsls	r5, r3, #30
10003bc8:	d1f9      	bne.n	10003bbe <memset+0x12>
10003bca:	2c03      	cmp	r4, #3
10003bcc:	d92d      	bls.n	10003c2a <memset+0x7e>
10003bce:	b2cd      	uxtb	r5, r1
10003bd0:	2c0f      	cmp	r4, #15
10003bd2:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
10003bd6:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
10003bda:	d936      	bls.n	10003c4a <memset+0x9e>
10003bdc:	f1a4 0c10 	sub.w	ip, r4, #16
10003be0:	f103 0e20 	add.w	lr, r3, #32
10003be4:	f103 0210 	add.w	r2, r3, #16
10003be8:	f02c 060f 	bic.w	r6, ip, #15
10003bec:	ea4f 1c1c 	mov.w	ip, ip, lsr #4
10003bf0:	44b6      	add	lr, r6
10003bf2:	e942 5504 	strd	r5, r5, [r2, #-16]
10003bf6:	e942 5502 	strd	r5, r5, [r2, #-8]
10003bfa:	3210      	adds	r2, #16
10003bfc:	4572      	cmp	r2, lr
10003bfe:	d1f8      	bne.n	10003bf2 <memset+0x46>
10003c00:	f10c 0201 	add.w	r2, ip, #1
10003c04:	f014 0f0c 	tst.w	r4, #12
10003c08:	f004 0c0f 	and.w	ip, r4, #15
10003c0c:	eb03 1202 	add.w	r2, r3, r2, lsl #4
10003c10:	d013      	beq.n	10003c3a <memset+0x8e>
10003c12:	f1ac 0304 	sub.w	r3, ip, #4
10003c16:	f023 0303 	bic.w	r3, r3, #3
10003c1a:	3304      	adds	r3, #4
10003c1c:	4413      	add	r3, r2
10003c1e:	f842 5b04 	str.w	r5, [r2], #4
10003c22:	4293      	cmp	r3, r2
10003c24:	d1fb      	bne.n	10003c1e <memset+0x72>
10003c26:	f00c 0403 	and.w	r4, ip, #3
10003c2a:	b12c      	cbz	r4, 10003c38 <memset+0x8c>
10003c2c:	b2ca      	uxtb	r2, r1
10003c2e:	441c      	add	r4, r3
10003c30:	f803 2b01 	strb.w	r2, [r3], #1
10003c34:	429c      	cmp	r4, r3
10003c36:	d1fb      	bne.n	10003c30 <memset+0x84>
10003c38:	bd70      	pop	{r4, r5, r6, pc}
10003c3a:	4664      	mov	r4, ip
10003c3c:	4613      	mov	r3, r2
10003c3e:	2c00      	cmp	r4, #0
10003c40:	d1f4      	bne.n	10003c2c <memset+0x80>
10003c42:	e7f9      	b.n	10003c38 <memset+0x8c>
10003c44:	4603      	mov	r3, r0
10003c46:	4614      	mov	r4, r2
10003c48:	e7bf      	b.n	10003bca <memset+0x1e>
10003c4a:	461a      	mov	r2, r3
10003c4c:	46a4      	mov	ip, r4
10003c4e:	e7e0      	b.n	10003c12 <memset+0x66>

10003c50 <raise>:
10003c50:	b538      	push	{r3, r4, r5, lr}
10003c52:	281f      	cmp	r0, #31
10003c54:	4b14      	ldr	r3, [pc, #80]	; (10003ca8 <raise+0x58>)
10003c56:	681d      	ldr	r5, [r3, #0]
10003c58:	d820      	bhi.n	10003c9c <raise+0x4c>
10003c5a:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
10003c5e:	4604      	mov	r4, r0
10003c60:	b162      	cbz	r2, 10003c7c <raise+0x2c>
10003c62:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
10003c66:	b14b      	cbz	r3, 10003c7c <raise+0x2c>
10003c68:	2b01      	cmp	r3, #1
10003c6a:	d015      	beq.n	10003c98 <raise+0x48>
10003c6c:	1c59      	adds	r1, r3, #1
10003c6e:	d00f      	beq.n	10003c90 <raise+0x40>
10003c70:	2500      	movs	r5, #0
10003c72:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
10003c76:	4798      	blx	r3
10003c78:	4628      	mov	r0, r5
10003c7a:	bd38      	pop	{r3, r4, r5, pc}
10003c7c:	4628      	mov	r0, r5
10003c7e:	f000 f82b 	bl	10003cd8 <_getpid_r>
10003c82:	4622      	mov	r2, r4
10003c84:	4601      	mov	r1, r0
10003c86:	4628      	mov	r0, r5
10003c88:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10003c8c:	f000 b80e 	b.w	10003cac <_kill_r>
10003c90:	2316      	movs	r3, #22
10003c92:	2001      	movs	r0, #1
10003c94:	602b      	str	r3, [r5, #0]
10003c96:	bd38      	pop	{r3, r4, r5, pc}
10003c98:	2000      	movs	r0, #0
10003c9a:	bd38      	pop	{r3, r4, r5, pc}
10003c9c:	2316      	movs	r3, #22
10003c9e:	f04f 30ff 	mov.w	r0, #4294967295
10003ca2:	602b      	str	r3, [r5, #0]
10003ca4:	bd38      	pop	{r3, r4, r5, pc}
10003ca6:	bf00      	nop
10003ca8:	38000004 	stmdacc	r0, {r2}

10003cac <_kill_r>:
10003cac:	b570      	push	{r4, r5, r6, lr}
10003cae:	460c      	mov	r4, r1
10003cb0:	4603      	mov	r3, r0
10003cb2:	4d08      	ldr	r5, [pc, #32]	; (10003cd4 <_kill_r+0x28>)
10003cb4:	2600      	movs	r6, #0
10003cb6:	4620      	mov	r0, r4
10003cb8:	4611      	mov	r1, r2
10003cba:	461c      	mov	r4, r3
10003cbc:	602e      	str	r6, [r5, #0]
10003cbe:	f000 f887 	bl	10003dd0 <_kill>
10003cc2:	1c43      	adds	r3, r0, #1
10003cc4:	d000      	beq.n	10003cc8 <_kill_r+0x1c>
10003cc6:	bd70      	pop	{r4, r5, r6, pc}
10003cc8:	682b      	ldr	r3, [r5, #0]
10003cca:	2b00      	cmp	r3, #0
10003ccc:	d0fb      	beq.n	10003cc6 <_kill_r+0x1a>
10003cce:	6023      	str	r3, [r4, #0]
10003cd0:	bd70      	pop	{r4, r5, r6, pc}
10003cd2:	bf00      	nop
10003cd4:	380005a8 	stmdacc	r0, {r3, r5, r7, r8, sl}

10003cd8 <_getpid_r>:
10003cd8:	f000 b872 	b.w	10003dc0 <_getpid>

10003cdc <register_fini>:
10003cdc:	4b02      	ldr	r3, [pc, #8]	; (10003ce8 <register_fini+0xc>)
10003cde:	b113      	cbz	r3, 10003ce6 <register_fini+0xa>
10003ce0:	4802      	ldr	r0, [pc, #8]	; (10003cec <register_fini+0x10>)
10003ce2:	f000 b805 	b.w	10003cf0 <atexit>
10003ce6:	4770      	bx	lr
10003ce8:	00000000 	andeq	r0, r0, r0
10003cec:	10003cfd 	strdne	r3, [r0], -sp

10003cf0 <atexit>:
10003cf0:	2300      	movs	r3, #0
10003cf2:	4601      	mov	r1, r0
10003cf4:	461a      	mov	r2, r3
10003cf6:	4618      	mov	r0, r3
10003cf8:	f000 b81a 	b.w	10003d30 <__register_exitproc>

10003cfc <__libc_fini_array>:
10003cfc:	b538      	push	{r3, r4, r5, lr}
10003cfe:	4b08      	ldr	r3, [pc, #32]	; (10003d20 <__libc_fini_array+0x24>)
10003d00:	4d08      	ldr	r5, [pc, #32]	; (10003d24 <__libc_fini_array+0x28>)
10003d02:	1b5b      	subs	r3, r3, r5
10003d04:	109c      	asrs	r4, r3, #2
10003d06:	d007      	beq.n	10003d18 <__libc_fini_array+0x1c>
10003d08:	3b04      	subs	r3, #4
10003d0a:	441d      	add	r5, r3
10003d0c:	3c01      	subs	r4, #1
10003d0e:	f855 3904 	ldr.w	r3, [r5], #-4
10003d12:	4798      	blx	r3
10003d14:	2c00      	cmp	r4, #0
10003d16:	d1f9      	bne.n	10003d0c <__libc_fini_array+0x10>
10003d18:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10003d1c:	f000 b868 	b.w	10003df0 <_fini>
10003d20:	38000440 	stmdacc	r0, {r6, sl}
10003d24:	3800043c 	stmdacc	r0, {r2, r3, r4, r5, sl}

10003d28 <__retarget_lock_acquire_recursive>:
10003d28:	4770      	bx	lr
10003d2a:	bf00      	nop

10003d2c <__retarget_lock_release_recursive>:
10003d2c:	4770      	bx	lr
10003d2e:	bf00      	nop

10003d30 <__register_exitproc>:
10003d30:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10003d34:	f8df a084 	ldr.w	sl, [pc, #132]	; 10003dbc <__register_exitproc+0x8c>
10003d38:	4606      	mov	r6, r0
10003d3a:	4698      	mov	r8, r3
10003d3c:	460f      	mov	r7, r1
10003d3e:	f8da 0000 	ldr.w	r0, [sl]
10003d42:	4691      	mov	r9, r2
10003d44:	f7ff fff0 	bl	10003d28 <__retarget_lock_acquire_recursive>
10003d48:	4b1b      	ldr	r3, [pc, #108]	; (10003db8 <__register_exitproc+0x88>)
10003d4a:	681b      	ldr	r3, [r3, #0]
10003d4c:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
10003d50:	b334      	cbz	r4, 10003da0 <__register_exitproc+0x70>
10003d52:	6865      	ldr	r5, [r4, #4]
10003d54:	2d1f      	cmp	r5, #31
10003d56:	dc28      	bgt.n	10003daa <__register_exitproc+0x7a>
10003d58:	b95e      	cbnz	r6, 10003d72 <__register_exitproc+0x42>
10003d5a:	1c6b      	adds	r3, r5, #1
10003d5c:	3502      	adds	r5, #2
10003d5e:	f8da 0000 	ldr.w	r0, [sl]
10003d62:	6063      	str	r3, [r4, #4]
10003d64:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
10003d68:	f7ff ffe0 	bl	10003d2c <__retarget_lock_release_recursive>
10003d6c:	2000      	movs	r0, #0
10003d6e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10003d72:	eb04 0185 	add.w	r1, r4, r5, lsl #2
10003d76:	2301      	movs	r3, #1
10003d78:	2e02      	cmp	r6, #2
10003d7a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
10003d7e:	fa03 f305 	lsl.w	r3, r3, r5
10003d82:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
10003d86:	ea42 0203 	orr.w	r2, r2, r3
10003d8a:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
10003d8e:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
10003d92:	d1e2      	bne.n	10003d5a <__register_exitproc+0x2a>
10003d94:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
10003d98:	4313      	orrs	r3, r2
10003d9a:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
10003d9e:	e7dc      	b.n	10003d5a <__register_exitproc+0x2a>
10003da0:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
10003da4:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
10003da8:	e7d3      	b.n	10003d52 <__register_exitproc+0x22>
10003daa:	f8da 0000 	ldr.w	r0, [sl]
10003dae:	f7ff ffbd 	bl	10003d2c <__retarget_lock_release_recursive>
10003db2:	f04f 30ff 	mov.w	r0, #4294967295
10003db6:	e7da      	b.n	10003d6e <__register_exitproc+0x3e>
10003db8:	1000411c 	andne	r4, r0, ip, lsl r1
10003dbc:	38000430 	stmdacc	r0, {r4, r5, sl}

10003dc0 <_getpid>:
10003dc0:	4b02      	ldr	r3, [pc, #8]	; (10003dcc <_getpid+0xc>)
10003dc2:	2258      	movs	r2, #88	; 0x58
10003dc4:	f04f 30ff 	mov.w	r0, #4294967295
10003dc8:	601a      	str	r2, [r3, #0]
10003dca:	4770      	bx	lr
10003dcc:	380005a8 	stmdacc	r0, {r3, r5, r7, r8, sl}

10003dd0 <_kill>:
10003dd0:	4b02      	ldr	r3, [pc, #8]	; (10003ddc <_kill+0xc>)
10003dd2:	2258      	movs	r2, #88	; 0x58
10003dd4:	f04f 30ff 	mov.w	r0, #4294967295
10003dd8:	601a      	str	r2, [r3, #0]
10003dda:	4770      	bx	lr
10003ddc:	380005a8 	stmdacc	r0, {r3, r5, r7, r8, sl}

10003de0 <_exit>:
10003de0:	e7fe      	b.n	10003de0 <_exit>
10003de2:	bf00      	nop

10003de4 <_init>:
10003de4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10003de6:	bf00      	nop
10003de8:	bcf8      	pop	{r3, r4, r5, r6, r7}
10003dea:	bc08      	pop	{r3}
10003dec:	469e      	mov	lr, r3
10003dee:	4770      	bx	lr

10003df0 <_fini>:
10003df0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10003df2:	bf00      	nop
10003df4:	bcf8      	pop	{r3, r4, r5, r6, r7}
10003df6:	bc08      	pop	{r3}
10003df8:	469e      	mov	lr, r3
10003dfa:	4770      	bx	lr
10003dfc:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
10003e00:	2578303a 	ldrbcs	r3, [r8, #-58]!	; 0xffffffc6
10003e04:	2d583230 	lfmcs	f3, 2, [r8, #-192]	; 0xffffff40
10003e08:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
10003e0c:	78303a65 	ldmdavc	r0!, {r0, r2, r5, r6, r9, fp, ip, sp}
10003e10:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10003e14:	00000a0d 	andeq	r0, r0, sp, lsl #20
10003e18:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
10003e1c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
10003e20:	7564206b 	strbvc	r2, [r4, #-107]!	; 0xffffff95
10003e24:	6520706d 	strvs	r7, [r0, #-109]!	; 0xffffff93
10003e28:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
10003e2c:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
10003e30:	00000a0d 	andeq	r0, r0, sp, lsl #20
10003e34:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
10003e38:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
10003e3c:	205b3a6b 	subscs	r3, fp, fp, ror #20
10003e40:	00000000 	andeq	r0, r0, r0
10003e44:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10003e48:	00000020 	andeq	r0, r0, r0, lsr #32
10003e4c:	000d205d 	andeq	r2, sp, sp, asr r0
10003e50:	73696874 	cmnvc	r9, #116, 16	; 0x740000
10003e54:	20736920 	rsbscs	r6, r3, r0, lsr #18
10003e58:	0d2e7325 	stceq	3, cr7, [lr, #-148]!	; 0xffffff6c
10003e5c:	0000000a 	andeq	r0, r0, sl
10003e60:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
10003e64:	00000d74 	andeq	r0, r0, r4, ror sp
10003e68:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
10003e6c:	6f77206f 	svcvs	0x0077206f
10003e70:	20646c72 	rsbcs	r6, r4, r2, ror ip
10003e74:	6425202d 	strtvs	r2, [r5], #-45	; 0xffffffd3
10003e78:	000a0d2e 	andeq	r0, sl, lr, lsr #26

10003e7c <__func__.0>:
10003e7c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10003e80:	00000035 	andeq	r0, r0, r5, lsr r0

10003e84 <__func__.1>:
10003e84:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10003e88:	00000034 	andeq	r0, r0, r4, lsr r0

10003e8c <__func__.2>:
10003e8c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10003e90:	00000033 	andeq	r0, r0, r3, lsr r0

10003e94 <__func__.3>:
10003e94:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10003e98:	00000032 	andeq	r0, r0, r2, lsr r0

10003e9c <__func__.4>:
10003e9c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10003ea0:	00000031 	andeq	r0, r0, r1, lsr r0

10003ea4 <__func__.5>:
10003ea4:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10003ea8:	00000030 	andeq	r0, r0, r0, lsr r0
10003eac:	00696e66 	rsbeq	r6, r9, r6, ror #28
10003eb0:	2b696e66 	blcs	11a5f850 <__copy_table_end__+0x1a5b648>
10003eb4:	00000000 	andeq	r0, r0, r0
10003eb8:	006e616e 	rsbeq	r6, lr, lr, ror #2
10003ebc:	2d696e66 	stclcs	14, cr6, [r9, #-408]!	; 0xfffffe68
	...

10003ec8 <pow10.0>:
10003ec8:	00000000 	andeq	r0, r0, r0
10003ecc:	3ff00000 	svccc	0x00f00000	; IMB
10003ed0:	00000000 	andeq	r0, r0, r0
10003ed4:	40240000 	eormi	r0, r4, r0
10003ed8:	00000000 	andeq	r0, r0, r0
10003edc:	40590000 	subsmi	r0, r9, r0
10003ee0:	00000000 	andeq	r0, r0, r0
10003ee4:	408f4000 	addmi	r4, pc, r0
10003ee8:	00000000 	andeq	r0, r0, r0
10003eec:	40c38800 	sbcmi	r8, r3, r0, lsl #16
10003ef0:	00000000 	andeq	r0, r0, r0
10003ef4:	40f86a00 	rscsmi	r6, r8, r0, lsl #20
10003ef8:	00000000 	andeq	r0, r0, r0
10003efc:	412e8480 	smlawbmi	lr, r0, r4, r8
10003f00:	00000000 	andeq	r0, r0, r0
10003f04:	416312d0 	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
10003f08:	00000000 	andeq	r0, r0, r0
10003f0c:	4197d784 	orrsmi	sp, r7, r4, lsl #15
10003f10:	00000000 	andeq	r0, r0, r0
10003f14:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10003f18:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
10003f1c:	61745320 	cmnvs	r4, r0, lsr #6
10003f20:	5b3a6b63 	blpl	10e9ecb4 <__copy_table_end__+0xe9aaac>
10003f24:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10003f28:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
10003f2c:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
10003f30:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
10003f34:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
10003f38:	000a0d64 	andeq	r0, sl, r4, ror #26
10003f3c:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
10003f40:	78655420 	stmdavc	r5!, {r5, sl, ip, lr}^
10003f44:	5b3a2074 	blpl	10e8c11c <__copy_table_end__+0xe87f14>
10003f48:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10003f4c:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
10003f50:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
10003f54:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
10003f58:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
10003f5c:	000a0d64 	andeq	r0, sl, r4, ror #26
10003f60:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
10003f64:	61745320 	cmnvs	r4, r0, lsr #6
10003f68:	47206b63 	strmi	r6, [r0, -r3, ror #22]!
10003f6c:	74776f72 	ldrbtvc	r6, [r7], #-3954	; 0xfffff08e
10003f70:	6f442068 	svcvs	0x00442068
10003f74:	61776e77 	cmnvs	r7, r7, ror lr
10003f78:	253a6472 	ldrcs	r6, [sl, #-1138]!	; 0xfffffb8e
10003f7c:	000a0d64 	andeq	r0, sl, r4, ror #26
10003f80:	72614820 	rsbvc	r4, r1, #32, 16	; 0x200000
10003f84:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
10003f88:	4920746c 	stmdbmi	r0!, {r2, r3, r5, r6, sl, ip, sp, lr}
10003f8c:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
10003f90:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
10003f94:	44206e6f 	strtmi	r6, [r0], #-3695	; 0xfffff191
10003f98:	20706d75 	rsbscs	r6, r0, r5, ror sp
10003f9c:	0000000d 	andeq	r0, r0, sp
10003fa0:	61745320 	cmnvs	r4, r0, lsr #6
10003fa4:	46206b63 	strtmi	r6, [r0], -r3, ror #22
10003fa8:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
10003fac:	0d202020 	stceq	0, cr2, [r0, #-128]!	; 0xffffff80
10003fb0:	00000000 	andeq	r0, r0, r0
10003fb4:	20305220 	eorscs	r5, r0, r0, lsr #4
10003fb8:	203d2020 	eorscs	r2, sp, r0, lsr #32
10003fbc:	30257830 	eorcc	r7, r5, r0, lsr r8
10003fc0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10003fc4:	0000000a 	andeq	r0, r0, sl
10003fc8:	20315220 	eorscs	r5, r1, r0, lsr #4
10003fcc:	203d2020 	eorscs	r2, sp, r0, lsr #32
10003fd0:	30257830 	eorcc	r7, r5, r0, lsr r8
10003fd4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10003fd8:	0000000a 	andeq	r0, r0, sl
10003fdc:	20325220 	eorscs	r5, r2, r0, lsr #4
10003fe0:	203d2020 	eorscs	r2, sp, r0, lsr #32
10003fe4:	30257830 	eorcc	r7, r5, r0, lsr r8
10003fe8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10003fec:	0000000a 	andeq	r0, r0, sl
10003ff0:	20335220 	eorscs	r5, r3, r0, lsr #4
10003ff4:	203d2020 	eorscs	r2, sp, r0, lsr #32
10003ff8:	30257830 	eorcc	r7, r5, r0, lsr r8
10003ffc:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10004000:	0000000a 	andeq	r0, r0, sl
10004004:	20345220 	eorscs	r5, r4, r0, lsr #4
10004008:	203d2020 	eorscs	r2, sp, r0, lsr #32
1000400c:	30257830 	eorcc	r7, r5, r0, lsr r8
10004010:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10004014:	0000000a 	andeq	r0, r0, sl
10004018:	20355220 	eorscs	r5, r5, r0, lsr #4
1000401c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10004020:	30257830 	eorcc	r7, r5, r0, lsr r8
10004024:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10004028:	0000000a 	andeq	r0, r0, sl
1000402c:	20365220 	eorscs	r5, r6, r0, lsr #4
10004030:	203d2020 	eorscs	r2, sp, r0, lsr #32
10004034:	30257830 	eorcc	r7, r5, r0, lsr r8
10004038:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
1000403c:	0000000a 	andeq	r0, r0, sl
10004040:	20375220 	eorscs	r5, r7, r0, lsr #4
10004044:	203d2020 	eorscs	r2, sp, r0, lsr #32
10004048:	30257830 	eorcc	r7, r5, r0, lsr r8
1000404c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10004050:	0000000a 	andeq	r0, r0, sl
10004054:	20385220 	eorscs	r5, r8, r0, lsr #4
10004058:	203d2020 	eorscs	r2, sp, r0, lsr #32
1000405c:	30257830 	eorcc	r7, r5, r0, lsr r8
10004060:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10004064:	0000000a 	andeq	r0, r0, sl
10004068:	20395220 	eorscs	r5, r9, r0, lsr #4
1000406c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10004070:	30257830 	eorcc	r7, r5, r0, lsr r8
10004074:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10004078:	0000000a 	andeq	r0, r0, sl
1000407c:	30315220 	eorscc	r5, r1, r0, lsr #4
10004080:	203d2020 	eorscs	r2, sp, r0, lsr #32
10004084:	30257830 	eorcc	r7, r5, r0, lsr r8
10004088:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
1000408c:	0000000a 	andeq	r0, r0, sl
10004090:	31315220 	teqcc	r1, r0, lsr #4
10004094:	203d2020 	eorscs	r2, sp, r0, lsr #32
10004098:	30257830 	eorcc	r7, r5, r0, lsr r8
1000409c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100040a0:	0000000a 	andeq	r0, r0, sl
100040a4:	32315220 	eorscc	r5, r1, #32, 4
100040a8:	203d2020 	eorscs	r2, sp, r0, lsr #32
100040ac:	30257830 	eorcc	r7, r5, r0, lsr r8
100040b0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100040b4:	0000000a 	andeq	r0, r0, sl
100040b8:	20524c20 	subscs	r4, r2, r0, lsr #24
100040bc:	203d2020 	eorscs	r2, sp, r0, lsr #32
100040c0:	30257830 	eorcc	r7, r5, r0, lsr r8
100040c4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100040c8:	0000000a 	andeq	r0, r0, sl
100040cc:	20435020 	subcs	r5, r3, r0, lsr #32
100040d0:	203d2020 	eorscs	r2, sp, r0, lsr #32
100040d4:	30257830 	eorcc	r7, r5, r0, lsr r8
100040d8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100040dc:	0000000a 	andeq	r0, r0, sl
100040e0:	52535020 	subspl	r5, r3, #32
100040e4:	203d2020 	eorscs	r2, sp, r0, lsr #32
100040e8:	30257830 	eorcc	r7, r5, r0, lsr r8
100040ec:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100040f0:	0000000a 	andeq	r0, r0, sl
100040f4:	45584520 	ldrbmi	r4, [r8, #-1312]	; 0xfffffae0
100040f8:	5445525f 	strbpl	r5, [r5], #-607	; 0xfffffda1
100040fc:	3a4e5255 	bcc	11398a58 <__copy_table_end__+0x1394850>
10004100:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
10004104:	20583830 	subscs	r3, r8, r0, lsr r8
10004108:	00000a0d 	andeq	r0, r0, sp, lsl #20
1000410c:	61745320 	cmnvs	r4, r0, lsr #6
10004110:	43206b63 			; <UNDEFINED> instruction: 0x43206b63
10004114:	3a6c6c61 	bcc	11b1f2a0 <__copy_table_end__+0x1b1b098>
10004118:	00000020 	andeq	r0, r0, r0, lsr #32

1000411c <_global_impure_ptr>:
1000411c:	38000008 	stmdacc	r0, {r3}

10004120 <__EH_FRAME_BEGIN__>:
10004120:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.extab:

10004124 <__exidx_start-0x18>:
10004124:	8101b108 	tsthi	r1, r8, lsl #2
10004128:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
1000412c:	00000000 	andeq	r0, r0, r0
10004130:	8101b108 	tsthi	r1, r8, lsl #2
10004134:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10004138:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx:

1000413c <__exidx_end-0xc0>:
1000413c:	7fffdd00 	svcvc	0x00ffdd00
10004140:	80b0b0b0 	ldrhthi	fp, [r0], r0
10004144:	7fffdd68 	svcvc	0x00ffdd68
10004148:	00000001 	andeq	r0, r0, r1
1000414c:	7fffea98 	svcvc	0x00ffea98
10004150:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
10004154:	7fffeb2c 	svcvc	0x00ffeb2c
10004158:	80a8b0b0 	strhthi	fp, [r8], r0
1000415c:	7fffeb7c 	svcvc	0x00ffeb7c
10004160:	00000001 	andeq	r0, r0, r1
10004164:	7fffeb88 	svcvc	0x00ffeb88
10004168:	80aab0b0 	strhthi	fp, [sl], r0
1000416c:	7fffebc0 	svcvc	0x00ffebc0
10004170:	80b273ae 	adcshi	r7, r2, lr, lsr #7
10004174:	7fffec94 	svcvc	0x00ffec94
10004178:	00000001 	andeq	r0, r0, r1
1000417c:	7fffec90 	svcvc	0x00ffec90
10004180:	80383fab 	eorshi	r3, r8, fp, lsr #31
10004184:	7fffecf0 	svcvc	0x00ffecf0
10004188:	00000001 	andeq	r0, r0, r1
1000418c:	7fffecfc 	svcvc	0x00ffecfc
10004190:	80aab0b0 	strhthi	fp, [sl], r0
10004194:	7fffed38 	svcvc	0x00ffed38
10004198:	00000001 	andeq	r0, r0, r1
1000419c:	7fffedec 	svcvc	0x00ffedec
100041a0:	80b20eab 	adcshi	r0, r2, fp, lsr #29
100041a4:	7fffee60 	svcvc	0x00ffee60
100041a8:	8008afb0 			; <UNDEFINED> instruction: 0x8008afb0
100041ac:	7ffff120 	svcvc	0x00fff120
100041b0:	00000001 	andeq	r0, r0, r1
100041b4:	7ffff124 	svcvc	0x00fff124
100041b8:	80023fad 	andhi	r3, r2, sp, lsr #31
100041bc:	7ffff3d0 	svcvc	0x00fff3d0
100041c0:	00000001 	andeq	r0, r0, r1
100041c4:	7ffff5b0 	svcvc	0x00fff5b0
100041c8:	8003a8b0 			; <UNDEFINED> instruction: 0x8003a8b0
100041cc:	7ffff5c0 	svcvc	0x00fff5c0
100041d0:	00000001 	andeq	r0, r0, r1
100041d4:	7ffff5bc 	svcvc	0x00fff5bc
100041d8:	8004adb0 			; <UNDEFINED> instruction: 0x8004adb0
100041dc:	7ffff880 	svcvc	0x00fff880
100041e0:	80048400 	andhi	r8, r4, r0, lsl #8
100041e4:	7ffff8a8 	svcvc	0x00fff8a8
100041e8:	7fffff3c 	svcvc	0x00ffff3c
100041ec:	7ffff8ac 	svcvc	0x00fff8ac
100041f0:	7fffff40 	svcvc	0x00ffff40
100041f4:	7ffff8b8 	svcvc	0x00fff8b8
100041f8:	00000001 	andeq	r0, r0, r1

Disassembly of section .copy.table:

100041fc <__copy_table_start__>:
100041fc:	10004208 	andne	r4, r0, r8, lsl #4
10004200:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
10004204:	00000110 	andeq	r0, r0, r0, lsl r1

Disassembly of section .data:

38000000 <SystemCoreClock>:
38000000:	017d7840 	cmneq	sp, r0, asr #16

38000004 <_impure_ptr>:
38000004:	38000008 	stmdacc	r0, {r3}

38000008 <impure_data>:
38000008:	00000000 	andeq	r0, r0, r0
3800000c:	380002f4 	stmdacc	r0, {r2, r4, r5, r6, r7, r9}
38000010:	3800035c 	stmdacc	r0, {r2, r3, r4, r6, r8, r9}
38000014:	380003c4 	stmdacc	r0, {r2, r6, r7, r8, r9}
	...
380000b0:	00000001 	andeq	r0, r0, r1
380000b4:	00000000 	andeq	r0, r0, r0
380000b8:	abcd330e 	blge	3734ccf8 <__copy_table_end__+0x27348af0>
380000bc:	e66d1234 			; <UNDEFINED> instruction: 0xe66d1234
380000c0:	0005deec 	andeq	sp, r5, ip, ror #29
380000c4:	0000000b 	andeq	r0, r0, fp
	...

38000430 <__atexit_recursive_mutex>:
38000430:	380005a4 	stmdacc	r0, {r2, r5, r7, r8, sl}

38000434 <__init_array_start>:
38000434:	10003cdd 	ldrdne	r3, [r0], -sp

38000438 <__frame_dummy_init_array_entry>:
38000438:	100007e5 	andne	r0, r0, r5, ror #15

3800043c <__do_global_dtors_aux_fini_array_entry>:
3800043c:	100007c1 	andne	r0, r0, r1, asr #15

Disassembly of section .bss:

38000440 <__bss_start__>:
38000440:	00000000 	andeq	r0, r0, r0

38000444 <object.0>:
	...

3800045c <buffer.0>:
	...

3800055c <fd_code_stack_base>:
volatile unsigned int fd_code_stack_base = 0;
3800055c:	00000000 	andeq	r0, r0, r0

38000560 <fd_code_stack_full>:
volatile unsigned int fd_code_stack_full = 0;
38000560:	00000000 	andeq	r0, r0, r0

38000564 <frame.1>:
	...

380005a4 <__lock___atexit_recursive_mutex>:
380005a4:	00000000 	andeq	r0, r0, r0

380005a8 <errno>:
380005a8:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

380005ac <__end__-0x4>:
380005ac:	00000000 	andeq	r0, r0, r0

380005b0 <__end__>:
	...

Disassembly of section .stack:

380ff000 <__StackLimit>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	00003541 	andeq	r3, r0, r1, asr #10
   4:	61656100 	cmnvs	r5, r0, lsl #2
}
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002b 	andeq	r0, r0, fp, lsr #32
    printf("c = %d\r\n", c);
  10:	4d2d3805 	stcmi	8, cr3, [sp, #-20]!	; 0xffffffec
}
  14:	49414d2e 	stmdbmi	r1, {r1, r2, r3, r5, r8, sl, fp, lr}^
  18:	1106004e 	tstne	r6, lr, asr #32
  1c:	03094d07 	movweq	r4, #40199	; 0x9d07
  va_start(va, format);
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
  va_end(va);
  return ret;
}
  20:	0412080a 	ldreq	r0, [r2], #-2058	; 0xfffff7f6
  24:	01150114 	tsteq	r5, r4, lsl r1
  28:	01180317 	tsteq	r8, r7, lsl r3
  2c:	011b011a 	tsteq	fp, sl, lsl r1
  30:	0122011c 			; <UNDEFINED> instruction: 0x0122011c
  34:	Address 0x00000034 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	3a434347 	bcc	10d0d24 <__RAM_SIZE+0xfd0d24>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
}
   8:	72412055 	subvc	r2, r1, #85	; 0x55
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
    printf("c = %d\r\n", c);
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
}
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
  1c:	6e696168 	powvsez	f6, f1, #0.0
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	00000a4b 	andeq	r0, r0, fp, asr #20
       4:	00000002 	andeq	r0, r0, r2
}
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000188 	andeq	r0, r0, r8, lsl #3
    printf("c = %d\r\n", c);
      10:	0003460c 	andeq	r4, r3, ip, lsl #12
}
      14:	00001a00 	andeq	r1, r0, r0, lsl #20
      18:	00001800 	andeq	r1, r0, r0, lsl #16
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	00000272 	andeq	r0, r0, r2, ror r2
      30:	00017e03 	andeq	r7, r1, r3, lsl #28
      34:	182b0200 	stmdane	fp!, {r9}
      38:	0000003c 	andeq	r0, r0, ip, lsr r0
      3c:	70080102 	andvc	r0, r8, r2, lsl #2
      40:	02000002 	andeq	r0, r0, #2
      44:	006d0502 	rsbeq	r0, sp, r2, lsl #10
      48:	02020000 	andeq	r0, r2, #0
      4c:	00030207 	andeq	r0, r3, r7, lsl #4
      50:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      54:	00000169 	andeq	r0, r0, r9, ror #2
      58:	00009f03 	andeq	r9, r0, r3, lsl #30
      5c:	194f0200 	stmdbne	pc, {r9}^	; <UNPREDICTABLE>
      60:	00000064 	andeq	r0, r0, r4, rrx
      64:	b1070402 	tstlt	r7, r2, lsl #8
      68:	02000002 	andeq	r0, r0, #2
      6c:	01640508 	cmneq	r4, r8, lsl #10
      70:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      74:	0002ac07 	andeq	sl, r2, r7, lsl #24
      78:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
      7c:	00746e69 	rsbseq	r6, r4, r9, ror #28
      80:	00007905 	andeq	r7, r0, r5, lsl #18
      84:	07040200 	streq	r0, [r4, -r0, lsl #4]
      88:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
      8c:	00018003 	andeq	r8, r1, r3
      90:	13180300 	tstne	r8, #0, 6
      94:	00000030 	andeq	r0, r0, r0, lsr r0
      98:	00008c05 	andeq	r8, r0, r5, lsl #24
      9c:	00a10300 	adceq	r0, r1, r0, lsl #6
      a0:	30030000 	andcc	r0, r3, r0
      a4:	00005814 	andeq	r5, r0, r4, lsl r8
      a8:	009d0500 	addseq	r0, sp, r0, lsl #10
      ac:	a9060000 	stmdbge	r6, {}	; <UNPREDICTABLE>
      b0:	02000000 	andeq	r0, r0, #0
      b4:	00930408 	addseq	r0, r3, r8, lsl #8
      b8:	01020000 	mrseq	r0, (UNDEF: 2)
      bc:	00027908 	andeq	r7, r2, r8, lsl #18
      c0:	00ba0600 	adcseq	r0, sl, r0, lsl #12
      c4:	7c070000 	stcvc	0, cr0, [r7], {-0}
      c8:	01f80402 	mvnseq	r0, r2, lsl #8
      cc:	0003cb09 	andeq	ip, r3, r9, lsl #22
      d0:	00bb0800 	adcseq	r0, fp, r0, lsl #16
      d4:	fa040000 	blx	1000dc <__RAM_SIZE+0xdc>
      d8:	00ae1201 	adceq	r1, lr, r1, lsl #4
      dc:	23020000 	movwcs	r0, #8192	; 0x2000
      e0:	03b50800 			; <UNDEFINED> instruction: 0x03b50800
      e4:	fb040000 	blx	1000ee <__RAM_SIZE+0xee>
      e8:	00a91201 	adceq	r1, r9, r1, lsl #4
      ec:	23020000 	movwcs	r0, #8192	; 0x2000
      f0:	032d0804 			; <UNDEFINED> instruction: 0x032d0804
      f4:	fc040000 	stc2	0, cr0, [r4], {-0}
      f8:	00a91201 	adceq	r1, r9, r1, lsl #4
      fc:	23020000 	movwcs	r0, #8192	; 0x2000
     100:	03c00808 	biceq	r0, r0, #8, 16	; 0x80000
     104:	fd040000 	stc2	0, cr0, [r4, #-0]
     108:	00a91201 	adceq	r1, r9, r1, lsl #4
     10c:	23020000 	movwcs	r0, #8192	; 0x2000
     110:	4353090c 	cmpmi	r3, #12, 18	; 0x30000
     114:	fe040052 	mcr2	0, 0, r0, cr4, cr2, {2}
     118:	00a91201 	adceq	r1, r9, r1, lsl #4
     11c:	23020000 	movwcs	r0, #8192	; 0x2000
     120:	43430910 	movtmi	r0, #14608	; 0x3910
     124:	ff040052 			; <UNDEFINED> instruction: 0xff040052
     128:	00a91201 	adceq	r1, r9, r1, lsl #4
     12c:	23020000 	movwcs	r0, #8192	; 0x2000
     130:	02a70814 	adceq	r0, r7, #20, 16	; 0x140000
     134:	00040000 	andeq	r0, r4, r0
     138:	03db1202 	bicseq	r1, fp, #536870912	; 0x20000000
     13c:	23020000 	movwcs	r0, #8192	; 0x2000
     140:	02de0818 	sbcseq	r0, lr, #24, 16	; 0x180000
     144:	01040000 	mrseq	r0, (UNDEF: 4)
     148:	00a91202 	adceq	r1, r9, r2, lsl #4
     14c:	23020000 	movwcs	r0, #8192	; 0x2000
     150:	025b0824 	subseq	r0, fp, #36, 16	; 0x240000
     154:	02040000 	andeq	r0, r4, #0
     158:	00a91202 	adceq	r1, r9, r2, lsl #4
     15c:	23020000 	movwcs	r0, #8192	; 0x2000
     160:	03370828 	teqeq	r7, #40, 16	; 0x280000
     164:	03040000 	movweq	r0, #16384	; 0x4000
     168:	00a91202 	adceq	r1, r9, r2, lsl #4
     16c:	23020000 	movwcs	r0, #8192	; 0x2000
     170:	0332082c 	teqeq	r2, #44, 16	; 0x2c0000
     174:	04040000 	streq	r0, [r4], #-0
     178:	00a91202 	adceq	r1, r9, r2, lsl #4
     17c:	23020000 	movwcs	r0, #8192	; 0x2000
     180:	00610830 	rsbeq	r0, r1, r0, lsr r8
     184:	05040000 	streq	r0, [r4, #-0]
     188:	00a91202 	adceq	r1, r9, r2, lsl #4
     18c:	23020000 	movwcs	r0, #8192	; 0x2000
     190:	01720834 	cmneq	r2, r4, lsr r8
     194:	06040000 	streq	r0, [r4], -r0
     198:	00a91202 	adceq	r1, r9, r2, lsl #4
     19c:	23020000 	movwcs	r0, #8192	; 0x2000
     1a0:	03a20838 			; <UNDEFINED> instruction: 0x03a20838
     1a4:	07040000 	streq	r0, [r4, -r0]
     1a8:	00a91202 	adceq	r1, r9, r2, lsl #4
     1ac:	23020000 	movwcs	r0, #8192	; 0x2000
     1b0:	007d083c 	rsbseq	r0, sp, ip, lsr r8
     1b4:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
     1b8:	03f51202 	mvnseq	r1, #536870912	; 0x20000000
     1bc:	23020000 	movwcs	r0, #8192	; 0x2000
     1c0:	03ae0840 			; <UNDEFINED> instruction: 0x03ae0840
     1c4:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
     1c8:	00ae1202 	adceq	r1, lr, r2, lsl #4
     1cc:	23020000 	movwcs	r0, #8192	; 0x2000
     1d0:	011d0848 	tsteq	sp, r8, asr #16
     1d4:	0a040000 	beq	1001dc <__RAM_SIZE+0x1dc>
     1d8:	00ae1202 	adceq	r1, lr, r2, lsl #4
     1dc:	23020000 	movwcs	r0, #8192	; 0x2000
     1e0:	00b3084c 	adcseq	r0, r3, ip, asr #16
     1e4:	0b040000 	bleq	1001ec <__RAM_SIZE+0x1ec>
     1e8:	040f1202 	streq	r1, [pc], #-514	; 1f0 <__STACKSEAL_SIZE+0x1f0>
     1ec:	23020000 	movwcs	r0, #8192	; 0x2000
     1f0:	02860850 	addeq	r0, r6, #80, 16	; 0x500000
     1f4:	0c040000 	stceq	0, cr0, [r4], {-0}
     1f8:	04291202 	strteq	r1, [r9], #-514	; 0xfffffdfe
     1fc:	23020000 	movwcs	r0, #8192	; 0x2000
     200:	03840860 	orreq	r0, r4, #96, 16	; 0x600000
     204:	0d040000 	stceq	0, cr0, [r4, #-0]
     208:	00ae1202 	adceq	r1, lr, r2, lsl #4
     20c:	23020000 	movwcs	r0, #8192	; 0x2000
     210:	54430978 	strbpl	r0, [r3], #-2424	; 0xfffff688
     214:	0e040052 	mcreq	0, 0, r0, cr4, cr2, {2}
     218:	00ae1202 	adceq	r1, lr, r2, lsl #4
     21c:	23020000 	movwcs	r0, #8192	; 0x2000
     220:	0177087c 	cmneq	r7, ip, ror r8
     224:	0f040000 	svceq	0x00040000
     228:	00ae1202 	adceq	r1, lr, r2, lsl #4
     22c:	23030000 	movwcs	r0, #12288	; 0x3000
     230:	fb080180 	blx	20083a <__RAM_SIZE+0x10083a>
     234:	04000002 	streq	r0, [r0], #-2
     238:	a9120210 	ldmdbge	r2, {r4, r9}
     23c:	03000000 	movweq	r0, #0
     240:	08018423 	stmdaeq	r1, {r0, r1, r5, sl, pc}
     244:	000003ba 			; <UNDEFINED> instruction: 0x000003ba
     248:	12021104 	andne	r1, r2, #4, 2
     24c:	000000a9 	andeq	r0, r0, r9, lsr #1
     250:	01882303 	orreq	r2, r8, r3, lsl #6
     254:	0002ec08 	andeq	lr, r2, r8, lsl #24
     258:	02120400 	andseq	r0, r2, #0, 8
     25c:	0000a912 	andeq	sl, r0, r2, lsl r9
     260:	8c230300 	stchi	3, cr0, [r3], #-0
     264:	037a0801 	cmneq	sl, #65536	; 0x10000
     268:	13040000 	movwne	r0, #16384	; 0x4000
     26c:	042e1202 	strteq	r1, [lr], #-514	; 0xfffffdfe
     270:	23030000 	movwcs	r0, #12288	; 0x3000
     274:	d9080190 	stmdble	r8, {r4, r7, r8}
     278:	04000002 	streq	r0, [r0], #-2
     27c:	a9120214 	ldmdbge	r2, {r2, r4, r9}
     280:	03000000 	movweq	r0, #0
     284:	0801e423 	stmdaeq	r1, {r0, r1, r5, sl, sp, lr, pc}
     288:	00000357 	andeq	r0, r0, r7, asr r3
     28c:	12021504 	andne	r1, r2, #4, 10	; 0x1000000
     290:	000000a9 	andeq	r0, r0, r9, lsr #1
     294:	01e82303 	mvneq	r2, r3, lsl #6
     298:	00033c08 	andeq	r3, r3, r8, lsl #24
     29c:	02160400 	andseq	r0, r6, #0, 8
     2a0:	00043e12 	andeq	r3, r4, r2, lsl lr
     2a4:	ec230300 	stc	3, cr0, [r3], #-0
     2a8:	01180801 	tsteq	r8, r1, lsl #16
     2ac:	17040000 	strne	r0, [r4, -r0]
     2b0:	00a91202 	adceq	r1, r9, r2, lsl #4
     2b4:	23030000 	movwcs	r0, #12288	; 0x3000
     2b8:	d8080480 	stmdale	r8, {r7, sl}
     2bc:	04000000 	streq	r0, [r0], #-0
     2c0:	4e120218 	mrcmi	2, 0, r0, cr2, cr8, {0}
     2c4:	03000004 	movweq	r0, #4
     2c8:	08048423 	stmdaeq	r4, {r0, r1, r5, sl, pc}
     2cc:	00000067 	andeq	r0, r0, r7, rrx
     2d0:	12021904 	andne	r1, r2, #4, 18	; 0x10000
     2d4:	000000ae 	andeq	r0, r0, lr, lsr #1
     2d8:	04c02303 	strbeq	r2, [r0], #771	; 0x303
     2dc:	00007708 	andeq	r7, r0, r8, lsl #14
     2e0:	021a0400 	andseq	r0, sl, #0, 8
     2e4:	0000ae12 	andeq	sl, r0, r2, lsl lr
     2e8:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
     2ec:	015e0804 	cmpeq	lr, r4, lsl #16
     2f0:	1b040000 	blne	1002f8 <__RAM_SIZE+0x2f8>
     2f4:	00ae1202 	adceq	r1, lr, r2, lsl #4
     2f8:	23030000 	movwcs	r0, #12288	; 0x3000
     2fc:	4d0804c8 	cfstrsmi	mvf0, [r8, #-800]	; 0xfffffce0
     300:	04000003 	streq	r0, [r0], #-3
     304:	5e12021c 	mrcpl	2, 0, r0, cr2, cr12, {0}
     308:	03000004 	movweq	r0, #4
     30c:	0804cc23 	stmdaeq	r4, {r0, r1, r5, sl, fp, lr, pc}
     310:	00000260 	andeq	r0, r0, r0, ror #4
     314:	12021d04 	andne	r1, r2, #4, 26	; 0x100
     318:	000000a9 	andeq	r0, r0, r9, lsr #1
     31c:	04d02303 	ldrbeq	r2, [r0], #771	; 0x303
     320:	0000fc08 	andeq	pc, r0, r8, lsl #24
     324:	021e0400 	andseq	r0, lr, #0, 8
     328:	00045e12 	andeq	r5, r4, r2, lsl lr
     32c:	d4230300 	strtle	r0, [r3], #-768	; 0xfffffd00
     330:	027e0804 	rsbseq	r0, lr, #4, 16	; 0x40000
     334:	1f040000 	svcne	0x00040000
     338:	00a91202 	adceq	r1, r9, r2, lsl #4
     33c:	23030000 	movwcs	r0, #12288	; 0x3000
     340:	680804d8 	stmdavs	r8, {r3, r4, r6, r7, sl}
     344:	04000002 	streq	r0, [r0], #-2
     348:	a9120220 	ldmdbge	r2, {r5, r9}
     34c:	03000000 	movweq	r0, #0
     350:	0804dc23 	stmdaeq	r4, {r0, r1, r5, sl, fp, ip, lr, pc}
     354:	0000013e 	andeq	r0, r0, lr, lsr r1
     358:	12022104 	andne	r2, r2, #4, 2
     35c:	000000a9 	andeq	r0, r0, r9, lsr #1
     360:	04e02303 	strbteq	r2, [r0], #771	; 0x303
     364:	00031508 	andeq	r1, r3, r8, lsl #10
     368:	02220400 	eoreq	r0, r2, #0, 8
     36c:	0000a912 	andeq	sl, r0, r2, lsl r9
     370:	e4230300 	strt	r0, [r3], #-768	; 0xfffffd00
     374:	02e40804 	rsceq	r0, r4, #4, 16	; 0x40000
     378:	23040000 	movwcs	r0, #16384	; 0x4000
     37c:	00a91202 	adceq	r1, r9, r2, lsl #4
     380:	23030000 	movwcs	r0, #12288	; 0x3000
     384:	000804e8 	andeq	r0, r8, r8, ror #9
     388:	04000000 	streq	r0, [r0], #-0
     38c:	a9120224 	ldmdbge	r2, {r2, r5, r9}
     390:	03000000 	movweq	r0, #0
     394:	0804ec23 	stmdaeq	r4, {r0, r1, r5, sl, fp, sp, lr, pc}
     398:	000000aa 	andeq	r0, r0, sl, lsr #1
     39c:	12022504 	andne	r2, r2, #4, 10	; 0x1000000
     3a0:	000000a9 	andeq	r0, r0, r9, lsr #1
     3a4:	04f02303 	ldrbteq	r2, [r0], #771	; 0x303
     3a8:	00037308 	andeq	r7, r3, r8, lsl #6
     3ac:	02260400 	eoreq	r0, r6, #0, 8
     3b0:	0000a912 	andeq	sl, r0, r2, lsl r9
     3b4:	f4230300 	vld2.8	{d0-d3}, [r3], r0
     3b8:	03a70804 			; <UNDEFINED> instruction: 0x03a70804
     3bc:	27040000 	strcs	r0, [r4, -r0]
     3c0:	00a91202 	adceq	r1, r9, r2, lsl #4
     3c4:	23030000 	movwcs	r0, #12288	; 0x3000
     3c8:	0a0004f8 	beq	17b0 <__HEAP_SIZE+0x7b0>
     3cc:	00000098 	muleq	r0, r8, r0
     3d0:	000003db 	ldrdeq	r0, [r0], -fp
     3d4:	0000850b 	andeq	r8, r0, fp, lsl #10
     3d8:	05000b00 	streq	r0, [r0, #-2816]	; 0xfffff500
     3dc:	000003cb 	andeq	r0, r0, fp, asr #7
     3e0:	0000ae0a 	andeq	sl, r0, sl, lsl #28
     3e4:	0003f000 	andeq	pc, r3, r0
     3e8:	00850b00 	addeq	r0, r5, r0, lsl #22
     3ec:	00010000 	andeq	r0, r1, r0
     3f0:	0003e006 	andeq	lr, r3, r6
     3f4:	03f00500 	mvnseq	r0, #0, 10
     3f8:	ae0a0000 	cdpge	0, 0, cr0, cr10, cr0, {0}
     3fc:	0a000000 	beq	404 <__STACKSEAL_SIZE+0x404>
     400:	0b000004 	bleq	418 <__STACKSEAL_SIZE+0x418>
     404:	00000085 	andeq	r0, r0, r5, lsl #1
     408:	fa060003 	blx	18041c <__RAM_SIZE+0x8041c>
     40c:	05000003 	streq	r0, [r0, #-3]
     410:	0000040a 	andeq	r0, r0, sl, lsl #8
     414:	0000ae0a 	andeq	sl, r0, sl, lsl #28
     418:	00042400 	andeq	r2, r4, r0, lsl #8
     41c:	00850b00 	addeq	r0, r5, r0, lsl #22
     420:	00050000 	andeq	r0, r5, r0
     424:	00041406 	andeq	r1, r4, r6, lsl #8
     428:	04240500 	strteq	r0, [r4], #-1280	; 0xfffffb00
     42c:	9d0a0000 	stcls	0, cr0, [sl, #-0]
     430:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
     434:	0b000004 	bleq	44c <__STACKSEAL_SIZE+0x44c>
     438:	00000085 	andeq	r0, r0, r5, lsl #1
     43c:	9d0a0014 	stcls	0, cr0, [sl, #-80]	; 0xffffffb0
     440:	4e000000 	cdpmi	0, 0, cr0, cr0, cr0, {0}
     444:	0b000004 	bleq	45c <__STACKSEAL_SIZE+0x45c>
     448:	00000085 	andeq	r0, r0, r5, lsl #1
     44c:	9d0a0044 	stcls	0, cr0, [sl, #-272]	; 0xfffffef0
     450:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
     454:	0b000004 	bleq	46c <__STACKSEAL_SIZE+0x46c>
     458:	00000085 	andeq	r0, r0, r5, lsl #1
     45c:	9d0a000e 	stcls	0, cr0, [sl, #-56]	; 0xffffffc8
     460:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
     464:	0b000004 	bleq	47c <__STACKSEAL_SIZE+0x47c>
     468:	00000085 	andeq	r0, r0, r5, lsl #1
     46c:	9e0c0000 	cdpls	0, 0, cr0, cr12, cr0, {0}
     470:	04000002 	streq	r0, [r0], #-2
     474:	c6030228 	strgt	r0, [r3], -r8, lsr #4
     478:	0d000000 	stceq	0, cr0, [r0, #-0]
     47c:	00008e01 	andeq	r8, r0, r1, lsl #28
     480:	05580100 	ldrbeq	r0, [r8, #-256]	; 0xffffff00
     484:	00007901 	andeq	r7, r0, r1, lsl #18
     488:	00094800 	andeq	r4, r9, r0, lsl #16
     48c:	00097410 	andeq	r7, r9, r0, lsl r4
     490:	00000010 	andeq	r0, r0, r0, lsl r0
     494:	04fa0100 	ldrbteq	r0, [sl], #256	; 0x100
     498:	8a0e0000 	bhi	3804a0 <__RAM_SIZE+0x2804a0>
     49c:	01000003 	tsteq	r0, r3
     4a0:	00790959 	rsbseq	r0, r9, r9, asr r9
     4a4:	00260000 	eoreq	r0, r6, r0
     4a8:	00200000 	eoreq	r0, r0, r0
     4ac:	4e0f0000 	cdpmi	0, 0, cr0, cr15, cr0, {0}
     4b0:	e0100009 	ands	r0, r0, r9
     4b4:	10000009 	andne	r0, r0, r9
     4b8:	10000954 	andne	r0, r0, r4, asr r9
     4bc:	000009ee 	andeq	r0, r0, lr, ror #19
     4c0:	000004ce 	andeq	r0, r0, lr, asr #9
     4c4:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
     4c8:	003e6003 	eorseq	r6, lr, r3
     4cc:	580f0010 	stmdapl	pc, {r4}	; <UNPREDICTABLE>
     4d0:	fb100009 	blx	4004fe <__RAM_SIZE+0x3004fe>
     4d4:	0f000009 	svceq	0x00000009
     4d8:	1000095c 	andne	r0, r0, ip, asr r9
     4dc:	000004fa 	strdeq	r0, [r0], -sl
     4e0:	00096812 	andeq	r6, r9, r2, lsl r8
     4e4:	000a0910 	andeq	r0, sl, r0, lsl r9
     4e8:	50011100 	andpl	r1, r1, r0, lsl #2
     4ec:	3e680305 	cdpcc	3, 6, cr0, cr8, cr5, {0}
     4f0:	01111000 	tsteq	r1, r0
     4f4:	7f740251 	svcvc	0x00740251
     4f8:	01130000 	tsteq	r3, r0
     4fc:	0000039c 	muleq	r0, ip, r3
     500:	01065301 	tsteq	r6, r1, lsl #6
     504:	10000930 	andne	r0, r0, r0, lsr r9
     508:	10000948 	andne	r0, r0, r8, asr #18
     50c:	00000050 	andeq	r0, r0, r0, asr r0
     510:	00054f01 	andeq	r4, r5, r1, lsl #30
     514:	02f21400 	rscseq	r1, r2, #0, 8
     518:	055f0000 	ldrbeq	r0, [pc, #-0]	; 520 <__STACKSEAL_SIZE+0x520>
     51c:	05010000 	streq	r0, [r1, #-0]
     520:	003e7c03 	eorseq	r7, lr, r3, lsl #24
     524:	093a1010 	ldmdbeq	sl!, {r4, ip}
     528:	0a091000 	beq	244530 <__RAM_SIZE+0x144530>
     52c:	05450000 	strbeq	r0, [r5, #-0]
     530:	01110000 	tsteq	r1, r0
     534:	50030550 	andpl	r0, r3, r0, asr r5
     538:	1110003e 	tstne	r0, lr, lsr r0
     53c:	03055101 	movweq	r5, #20737	; 0x5101
     540:	10003e7c 	andne	r3, r0, ip, ror lr
     544:	093e0f00 	ldmdbeq	lr!, {r8, r9, sl, fp}
     548:	05641000 	strbeq	r1, [r4, #-0]!
     54c:	0a000000 	beq	554 <__STACKSEAL_SIZE+0x554>
     550:	000000c1 	andeq	r0, r0, r1, asr #1
     554:	0000055f 	andeq	r0, r0, pc, asr r5
     558:	0000850b 	andeq	r8, r0, fp, lsl #10
     55c:	06000500 	streq	r0, [r0], -r0, lsl #10
     560:	0000054f 	andeq	r0, r0, pc, asr #10
     564:	03960113 	orrseq	r0, r6, #-1073741820	; 0xc0000004
     568:	4e010000 	cdpmi	0, 0, cr0, cr1, cr0, {0}
     56c:	09180106 	ldmdbeq	r8, {r1, r2, r8}
     570:	09301000 	ldmdbeq	r0!, {ip}
     574:	00701000 	rsbseq	r1, r0, r0
     578:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
     57c:	14000005 	strne	r0, [r0], #-5
     580:	000002f2 	strdeq	r0, [r0], -r2
     584:	0000055f 	andeq	r0, r0, pc, asr r5
     588:	84030501 	strhi	r0, [r3], #-1281	; 0xfffffaff
     58c:	1010003e 	andsne	r0, r0, lr, lsr r0
     590:	10000922 	andne	r0, r0, r2, lsr #18
     594:	00000a09 	andeq	r0, r0, r9, lsl #20
     598:	000005af 	andeq	r0, r0, pc, lsr #11
     59c:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
     5a0:	003e5003 	eorseq	r5, lr, r3
     5a4:	51011110 	tstpl	r1, r0, lsl r1
     5a8:	3e840305 	cdpcc	3, 8, cr0, cr4, cr5, {0}
     5ac:	0f001000 	svceq	0x00001000
     5b0:	10000926 	andne	r0, r0, r6, lsr #18
     5b4:	000005b9 			; <UNDEFINED> instruction: 0x000005b9
     5b8:	12011300 	andne	r1, r1, #0, 6
     5bc:	01000001 	tsteq	r0, r1
     5c0:	00010649 	andeq	r0, r1, r9, asr #12
     5c4:	18100009 	ldmdane	r0, {r0, r3}
     5c8:	90100009 	andsls	r0, r0, r9
     5cc:	01000000 	mrseq	r0, (UNDEF: 0)
     5d0:	0000060e 	andeq	r0, r0, lr, lsl #12
     5d4:	0002f214 	andeq	pc, r2, r4, lsl r2	; <UNPREDICTABLE>
     5d8:	00055f00 	andeq	r5, r5, r0, lsl #30
     5dc:	03050100 	movweq	r0, #20736	; 0x5100
     5e0:	10003e8c 	andne	r3, r0, ip, lsl #29
     5e4:	00090a10 	andeq	r0, r9, r0, lsl sl
     5e8:	000a0910 	andeq	r0, sl, r0, lsl r9
     5ec:	00060400 	andeq	r0, r6, r0, lsl #8
     5f0:	50011100 	andpl	r1, r1, r0, lsl #2
     5f4:	3e500305 	cdpcc	3, 5, cr0, cr0, cr5, {0}
     5f8:	01111000 	tsteq	r1, r0
     5fc:	8c030551 	cfstr32hi	mvfx0, [r3], {81}	; 0x51
     600:	0010003e 	andseq	r0, r0, lr, lsr r0
     604:	00090e0f 	andeq	r0, r9, pc, lsl #28
     608:	00060e10 	andeq	r0, r6, r0, lsl lr
     60c:	01130000 	tsteq	r3, r0
     610:	0000010c 	andeq	r0, r0, ip, lsl #2
     614:	01064401 	tsteq	r6, r1, lsl #8
     618:	100008e8 	andne	r0, r0, r8, ror #17
     61c:	10000900 	andne	r0, r0, r0, lsl #18
     620:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
     624:	00066301 	andeq	r6, r6, r1, lsl #6
     628:	02f21400 	rscseq	r1, r2, #0, 8
     62c:	055f0000 	ldrbeq	r0, [pc, #-0]	; 634 <__STACKSEAL_SIZE+0x634>
     630:	05010000 	streq	r0, [r1, #-0]
     634:	003e9403 	eorseq	r9, lr, r3, lsl #8
     638:	08f21010 	ldmeq	r2!, {r4, ip}^
     63c:	0a091000 	beq	244644 <__RAM_SIZE+0x144644>
     640:	06590000 	ldrbeq	r0, [r9], -r0
     644:	01110000 	tsteq	r1, r0
     648:	50030550 	andpl	r0, r3, r0, asr r5
     64c:	1110003e 	tstne	r0, lr, lsr r0
     650:	03055101 	movweq	r5, #20737	; 0x5101
     654:	10003e94 	mulne	r0, r4, lr
     658:	08f60f00 	ldmeq	r6!, {r8, r9, sl, fp}^
     65c:	06631000 	strbteq	r1, [r3], -r0
     660:	13000000 	movwne	r0, #0
     664:	00010601 	andeq	r0, r1, r1, lsl #12
     668:	063f0100 	ldrteq	r0, [pc], -r0, lsl #2
     66c:	0008d001 	andeq	sp, r8, r1
     670:	0008e810 	andeq	lr, r8, r0, lsl r8
     674:	0000d010 	andeq	sp, r0, r0, lsl r0
     678:	06b80100 	ldrteq	r0, [r8], r0, lsl #2
     67c:	f2140000 	vhadd.s16	d0, d4, d0
     680:	5f000002 	svcpl	0x00000002
     684:	01000005 	tsteq	r0, r5
     688:	3e9c0305 	cdpcc	3, 9, cr0, cr12, cr5, {0}
     68c:	da101000 	ble	404694 <__RAM_SIZE+0x304694>
     690:	09100008 	ldmdbeq	r0, {r3}
     694:	ae00000a 	cdpge	0, 0, cr0, cr0, cr10, {0}
     698:	11000006 	tstne	r0, r6
     69c:	03055001 	movweq	r5, #20481	; 0x5001
     6a0:	10003e50 	andne	r3, r0, r0, asr lr
     6a4:	05510111 	ldrbeq	r0, [r1, #-273]	; 0xfffffeef
     6a8:	003e9c03 	eorseq	r9, lr, r3, lsl #24
     6ac:	de0f0010 	mcrle	0, 0, r0, cr15, cr0, {0}
     6b0:	b8100008 	ldmdalt	r0, {r3}
     6b4:	00000006 	andeq	r0, r0, r6
     6b8:	03900113 	orrseq	r0, r0, #-1073741820	; 0xc0000004
     6bc:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
     6c0:	08b40106 	ldmeq	r4!, {r1, r2, r8}
     6c4:	08d01000 	ldmeq	r0, {ip}^
     6c8:	00f01000 	rscseq	r1, r0, r0
     6cc:	16010000 	strne	r0, [r1], -r0
     6d0:	14000007 	strne	r0, [r0], #-7
     6d4:	000002f2 	strdeq	r0, [r0], -r2
     6d8:	0000055f 	andeq	r0, r0, pc, asr r5
     6dc:	a4030501 	strge	r0, [r3], #-1281	; 0xfffffaff
     6e0:	1010003e 	andsne	r0, r0, lr, lsr r0
     6e4:	100008be 			; <UNDEFINED> instruction: 0x100008be
     6e8:	00000a09 	andeq	r0, r0, r9, lsl #20
     6ec:	00000703 	andeq	r0, r0, r3, lsl #14
     6f0:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
     6f4:	003e5003 	eorseq	r5, lr, r3
     6f8:	51011110 	tstpl	r1, r0, lsl r1
     6fc:	3ea40305 	cdpcc	3, 10, cr0, cr4, cr5, {0}
     700:	0f001000 	svceq	0x00001000
     704:	100008c2 	andne	r0, r0, r2, asr #17
     708:	00000716 	andeq	r0, r0, r6, lsl r7
     70c:	0008c60f 	andeq	ip, r8, pc, lsl #12
     710:	00085610 	andeq	r5, r8, r0, lsl r6
     714:	01130000 	tsteq	r3, r0
     718:	0000024c 	andeq	r0, r0, ip, asr #4
     71c:	01062801 	tsteq	r6, r1, lsl #16
     720:	1000084c 	andne	r0, r0, ip, asr #16
     724:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
     728:	00000110 	andeq	r0, r0, r0, lsl r1
     72c:	00084601 	andeq	r4, r8, r1, lsl #12
     730:	04ac1500 	strteq	r1, [ip], #1280	; 0x500
     734:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
     738:	00084612 	andeq	r4, r8, r2, lsl r6
     73c:	f0910300 			; <UNDEFINED> instruction: 0xf0910300
     740:	01380e7d 	teqeq	r8, sp, ror lr
     744:	2a010000 	bcs	4074c <__HEAP_SIZE+0x3f74c>
     748:	00008512 	andeq	r8, r0, r2, lsl r5
     74c:	00014f00 	andeq	r4, r1, r0, lsl #30
     750:	00014900 	andeq	r4, r1, r0, lsl #18
     754:	00f60e00 	rscseq	r0, r6, r0, lsl #28
     758:	2b010000 	blcs	40760 <__HEAP_SIZE+0x3f760>
     75c:	00008512 	andeq	r8, r0, r2, lsl r5
     760:	00017c00 	andeq	r7, r1, r0, lsl #24
     764:	00017800 	andeq	r7, r1, r0, lsl #16
     768:	038a0e00 	orreq	r0, sl, #0, 28
     76c:	2c010000 	stccs	0, cr0, [r1], {-0}
     770:	00007909 	andeq	r7, r0, r9, lsl #18
     774:	0001a200 	andeq	sl, r1, r0, lsl #4
     778:	00019a00 	andeq	r9, r1, r0, lsl #20
     77c:	00001600 	andeq	r1, r0, r0, lsl #12
     780:	07ac0000 	streq	r0, [ip, r0]!
     784:	69170000 	ldmdbvs	r7, {}	; <UNPREDICTABLE>
     788:	12310100 	eorsne	r0, r1, #0, 2
     78c:	00000079 	andeq	r0, r0, r9, ror r0
     790:	000001da 	ldrdeq	r0, [r0], -sl
     794:	000001d6 	ldrdeq	r0, [r0], -r6
     798:	00089412 	andeq	r9, r8, r2, lsl r4
     79c:	000a0910 	andeq	r0, sl, r0, lsl r9
     7a0:	50011100 	andpl	r1, r1, r0, lsl #2
     7a4:	3e440305 	cdpcc	3, 4, cr0, cr4, cr5, {0}
     7a8:	00001000 	andeq	r1, r0, r0
     7ac:	00085c10 	andeq	r5, r8, r0, lsl ip
     7b0:	000a1710 	andeq	r1, sl, r0, lsl r7
     7b4:	0007cc00 	andeq	ip, r7, r0, lsl #24
     7b8:	50011100 	andpl	r1, r1, r0, lsl #2
     7bc:	11007d02 	tstne	r0, r2, lsl #26
     7c0:	30015101 	andcc	r5, r1, r1, lsl #2
     7c4:	03520111 	cmpeq	r2, #1073741828	; 0x40000004
     7c8:	0001000a 	andeq	r0, r1, sl
     7cc:	0008600f 	andeq	r6, r8, pc
     7d0:	000a2410 	andeq	r2, sl, r0, lsl r4
     7d4:	08660f00 	stmdaeq	r6!, {r8, r9, sl, fp}^
     7d8:	0a321000 	beq	c847e0 <__RAM_SIZE+0xb847e0>
     7dc:	72100000 	andsvc	r0, r0, #0
     7e0:	40100008 	andsmi	r0, r0, r8
     7e4:	fe00000a 	cdp2	0, 0, cr0, cr0, cr10, {0}
     7e8:	11000007 	tstne	r0, r7
     7ec:	7d025001 	stcvc	0, cr5, [r2, #-4]
     7f0:	51011100 	mrspl	r1, (UNDEF: 17)
     7f4:	11400802 	cmpne	r0, r2, lsl #16
     7f8:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
     7fc:	7c100000 	ldcvc	0, cr0, [r0], {-0}
     800:	09100008 	ldmdbeq	r0, {r3}
     804:	1500000a 	strne	r0, [r0, #-10]
     808:	11000008 	tstne	r0, r8
     80c:	03055001 	movweq	r5, #20481	; 0x5001
     810:	10003e34 	andne	r3, r0, r4, lsr lr
     814:	08881000 	stmeq	r8, {ip}
     818:	0a091000 	beq	244820 <__RAM_SIZE+0x144820>
     81c:	08320000 	ldmdaeq	r2!, {}	; <UNPREDICTABLE>
     820:	01110000 	tsteq	r1, r0
     824:	18030550 	stmdane	r3, {r4, r6, r8, sl}
     828:	1110003e 	tstne	r0, lr, lsr r0
     82c:	75025101 	strvc	r5, [r2, #-257]	; 0xfffffeff
     830:	a0120000 	andsge	r0, r2, r0
     834:	ee100008 	cdp	0, 1, cr0, cr0, cr8, {0}
     838:	11000009 	tstne	r0, r9
     83c:	03055001 	movweq	r5, #20481	; 0x5001
     840:	10003e4c 	andne	r3, r0, ip, asr #28
     844:	850a0000 	strhi	r0, [sl, #-0]
     848:	56000000 	strpl	r0, [r0], -r0
     84c:	0b000008 	bleq	874 <__Vectors_Size+0xb4>
     850:	00000085 	andeq	r0, r0, r5, lsl #1
     854:	0113003f 	tsteq	r3, pc, lsr r0
     858:	000002c3 	andeq	r0, r0, r3, asr #5
     85c:	01061801 	tsteq	r6, r1, lsl #16
     860:	10000800 	andne	r0, r0, r0, lsl #16
     864:	1000084c 	andne	r0, r0, ip, asr #16
     868:	000001f9 	strdeq	r0, [r0], -r9
     86c:	0008dd01 	andeq	sp, r8, r1, lsl #26
     870:	00150e00 	andseq	r0, r5, r0, lsl #28
     874:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
     878:	0008dd13 	andeq	sp, r8, r3, lsl sp
     87c:	00023700 	andeq	r3, r2, r0, lsl #14
     880:	00023100 	andeq	r3, r2, r0, lsl #2
     884:	00c11500 	sbceq	r1, r1, r0, lsl #10
     888:	1a010000 	bne	40890 <__HEAP_SIZE+0x3f890>
     88c:	00008012 	andeq	r8, r0, r2, lsl r0
     890:	6c910200 	lfmvs	f0, 4, [r1], {0}
     894:	00082210 	andeq	r2, r8, r0, lsl r2
     898:	000a0910 	andeq	r0, sl, r0, lsl r9
     89c:	0008ae00 	andeq	sl, r8, r0, lsl #28
     8a0:	50011100 	andpl	r1, r1, r0, lsl #2
     8a4:	11007502 	tstne	r0, r2, lsl #10
     8a8:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
     8ac:	30100000 	andscc	r0, r0, r0
     8b0:	09100008 	ldmdbeq	r0, {r3}
     8b4:	c700000a 	strgt	r0, [r0, -sl]
     8b8:	11000008 	tstne	r0, r8
     8bc:	75025001 	strvc	r5, [r2, #-1]
     8c0:	51011100 	mrspl	r1, (UNDEF: 17)
     8c4:	12003401 	andne	r3, r0, #16777216	; 0x1000000
     8c8:	10000840 	andne	r0, r0, r0, asr #16
     8cc:	00000a09 	andeq	r0, r0, r9, lsl #20
     8d0:	02500111 	subseq	r0, r0, #1073741828	; 0x40000004
     8d4:	01110075 	tsteq	r1, r5, ror r0
     8d8:	00330151 	eorseq	r0, r3, r1, asr r1
     8dc:	80041800 	andhi	r1, r4, r0, lsl #16
     8e0:	13000000 	movwne	r0, #0
     8e4:	00035c01 	andeq	r5, r3, r1, lsl #24
     8e8:	06100100 	ldreq	r0, [r0], -r0, lsl #2
     8ec:	00000001 	andeq	r0, r0, r1
     8f0:	00000000 	andeq	r0, r0, r0
     8f4:	00026300 	andeq	r6, r2, r0, lsl #6
     8f8:	09380100 	ldmdbeq	r8!, {r8}
     8fc:	61190000 	tstvs	r9, r0
     900:	09110100 	ldmdbeq	r1, {r8}
     904:	00000079 	andeq	r0, r0, r9, ror r0
     908:	00621900 	rsbeq	r1, r2, r0, lsl #18
     90c:	79101101 	ldmdbvc	r0, {r0, r8, ip}
     910:	00000000 	andeq	r0, r0, r0
     914:	01006319 	tsteq	r0, r9, lsl r3
     918:	00791711 	rsbseq	r1, r9, r1, lsl r7
     91c:	12000000 	andne	r0, r0, #0
     920:	00000000 	andeq	r0, r0, r0
     924:	00000a09 	andeq	r0, r0, r9, lsl #20
     928:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
     92c:	00000003 	andeq	r0, r0, r3
     930:	51011100 	mrspl	r1, (UNDEF: 17)
     934:	00003001 	andeq	r3, r0, r1
     938:	031d0113 	tsteq	sp, #-1073741820	; 0xc0000004
     93c:	0c010000 	stceq	0, cr0, [r1], {-0}
     940:	00000106 	andeq	r0, r0, r6, lsl #2
     944:	00000000 	andeq	r0, r0, r0
     948:	02830000 	addeq	r0, r3, #0
     94c:	77010000 	strvc	r0, [r1, -r0]
     950:	14000009 	strne	r0, [r0], #-9
     954:	000002f2 	strdeq	r0, [r0], -r2
     958:	00000987 	andeq	r0, r0, r7, lsl #19
     95c:	00030501 	andeq	r0, r3, r1, lsl #10
     960:	12000000 	andne	r0, r0, #0
     964:	00000000 	andeq	r0, r0, r0
     968:	000009ee 	andeq	r0, r0, lr, ror #19
     96c:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
     970:	00000003 	andeq	r0, r0, r3
     974:	0a000000 	beq	97c <__Vectors_Size+0x1bc>
     978:	000000c1 	andeq	r0, r0, r1, asr #1
     97c:	00000987 	andeq	r0, r0, r7, lsl #19
     980:	0000850b 	andeq	r8, r0, fp, lsl #10
     984:	06000f00 	streq	r0, [r0], -r0, lsl #30
     988:	00000977 	andeq	r0, r0, r7, ror r9
     98c:	01440113 	cmpeq	r4, r3, lsl r1
     990:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
     994:	00000106 	andeq	r0, r0, r6, lsl #2
     998:	00000000 	andeq	r0, r0, r0
     99c:	02a30000 	adceq	r0, r3, #0
     9a0:	cb010000 	blgt	409a8 <__HEAP_SIZE+0x3f9a8>
     9a4:	14000009 	strne	r0, [r0], #-9
     9a8:	000002f2 	strdeq	r0, [r0], -r2
     9ac:	000009db 	ldrdeq	r0, [r0], -fp
     9b0:	00030501 	andeq	r0, r3, r1, lsl #10
     9b4:	12000000 	andne	r0, r0, #0
     9b8:	00000000 	andeq	r0, r0, r0
     9bc:	000009ee 	andeq	r0, r0, lr, ror #19
     9c0:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
     9c4:	00000003 	andeq	r0, r0, r3
     9c8:	0a000000 	beq	9d0 <__Vectors_Size+0x210>
     9cc:	000000c1 	andeq	r0, r0, r1, asr #1
     9d0:	000009db 	ldrdeq	r0, [r0], -fp
     9d4:	0000850b 	andeq	r8, r0, fp, lsl #10
     9d8:	06001900 	streq	r1, [r0], -r0, lsl #18
     9dc:	000009cb 	andeq	r0, r0, fp, asr #19
     9e0:	8401011a 	strhi	r0, [r1], #-282	; 0xfffffee6
     9e4:	84000000 	strhi	r0, [r0], #-0
     9e8:	05000000 	streq	r0, [r0, #-0]
     9ec:	011b0606 	tsteq	fp, r6, lsl #12
     9f0:	00001001 	andeq	r1, r0, r1
     9f4:	00000600 	andeq	r0, r0, r0, lsl #12
     9f8:	1a000800 	bne	2a00 <__HEAP_SIZE+0x1a00>
     9fc:	028e0101 	addeq	r0, lr, #1073741824	; 0x40000000
     a00:	028e0000 	addeq	r0, lr, #0
     a04:	42060000 	andmi	r0, r6, #0
     a08:	01011a06 	tsteq	r1, r6, lsl #20
     a0c:	0000052f 	andeq	r0, r0, pc, lsr #10
     a10:	0000052f 	andeq	r0, r0, pc, lsr #10
     a14:	1b05c807 	blne	172a38 <__RAM_SIZE+0x72a38>
     a18:	00d10101 	sbcseq	r0, r1, r1, lsl #2
     a1c:	00c70000 	sbceq	r0, r7, r0
     a20:	00080000 	andeq	r0, r8, r0
     a24:	2401011a 	strcs	r0, [r1], #-282	; 0xfffffee6
     a28:	24000001 	strcs	r0, [r0], #-1
     a2c:	06000001 	streq	r0, [r0], -r1
     a30:	011a0e46 	tsteq	sl, r6, asr #28
     a34:	0000e201 	andeq	lr, r0, r1, lsl #4
     a38:	0000e200 	andeq	lr, r0, r0, lsl #4
     a3c:	0e470600 	cdpeq	6, 4, cr0, cr7, cr0, {0}
     a40:	4601011a 			; <UNDEFINED> instruction: 0x4601011a
     a44:	46000002 	strmi	r0, [r0], -r2
     a48:	06000002 	streq	r0, [r0], -r2
     a4c:	e5000644 	str	r0, [r0, #-1604]	; 0xfffff9bc
     a50:	02000004 	andeq	r0, r0, #4
     a54:	00019300 	andeq	r9, r1, r0, lsl #6
     a58:	88010400 	stmdahi	r1, {sl}
     a5c:	0c000001 	stceq	0, cr0, [r0], {1}
     a60:	00000401 	andeq	r0, r0, r1, lsl #8
     a64:	0000001a 	andeq	r0, r0, sl, lsl r0
     a68:	00000080 	andeq	r0, r0, r0, lsl #1
	...
     a74:	000003e5 	andeq	r0, r0, r5, ror #7
     a78:	72060102 	andvc	r0, r6, #-2147483648	; 0x80000000
     a7c:	03000002 	movweq	r0, #2
     a80:	0000017e 	andeq	r0, r0, lr, ror r1
     a84:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
     a88:	02000000 	andeq	r0, r0, #0
     a8c:	02700801 	rsbseq	r0, r0, #65536	; 0x10000
     a90:	02020000 	andeq	r0, r2, #0
     a94:	00006d05 	andeq	r6, r0, r5, lsl #26
     a98:	07020200 	streq	r0, [r2, -r0, lsl #4]
     a9c:	00000302 	andeq	r0, r0, r2, lsl #6
     aa0:	69050402 	stmdbvs	r5, {r1, sl}
     aa4:	03000001 	movweq	r0, #1
     aa8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     aac:	64194f02 	ldrvs	r4, [r9], #-3842	; 0xfffff0fe
     ab0:	02000000 	andeq	r0, r0, #0
     ab4:	02b10704 	adcseq	r0, r1, #4, 14	; 0x100000
     ab8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     abc:	00016405 	andeq	r6, r1, r5, lsl #8
     ac0:	07080200 	streq	r0, [r8, -r0, lsl #4]
     ac4:	000002ac 	andeq	r0, r0, ip, lsr #5
     ac8:	69050404 	stmdbvs	r5, {r2, sl}
     acc:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
     ad0:	02b60704 	adcseq	r0, r6, #4, 14	; 0x100000
     ad4:	80030000 	andhi	r0, r3, r0
     ad8:	03000001 	movweq	r0, #1
     adc:	00301318 	eorseq	r1, r0, r8, lsl r3
     ae0:	87050000 	strhi	r0, [r5, -r0]
     ae4:	03000000 	movweq	r0, #0
     ae8:	000000a1 	andeq	r0, r0, r1, lsr #1
     aec:	58143003 	ldmdapl	r4, {r0, r1, ip, sp}
     af0:	05000000 	streq	r0, [r0, #-0]
     af4:	00000098 	muleq	r0, r8, r0
     af8:	0000a406 	andeq	sl, r0, r6, lsl #8
     afc:	027c0700 	rsbseq	r0, ip, #0, 14
     b00:	0901f804 	stmdbeq	r1, {r2, fp, ip, sp, lr, pc}
     b04:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
     b08:	0000bb08 	andeq	fp, r0, r8, lsl #22
     b0c:	01fa0400 	mvnseq	r0, r0, lsl #8
     b10:	0000a912 	andeq	sl, r0, r2, lsl r9
     b14:	00230200 	eoreq	r0, r3, r0, lsl #4
     b18:	0003b508 	andeq	fp, r3, r8, lsl #10
     b1c:	01fb0400 	mvnseq	r0, r0, lsl #8
     b20:	0000a412 	andeq	sl, r0, r2, lsl r4
     b24:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     b28:	00032d08 	andeq	r2, r3, r8, lsl #26
     b2c:	01fc0400 	mvnseq	r0, r0, lsl #8
     b30:	0000a412 	andeq	sl, r0, r2, lsl r4
     b34:	08230200 	stmdaeq	r3!, {r9}
     b38:	0003c008 	andeq	ip, r3, r8
     b3c:	01fd0400 	mvnseq	r0, r0, lsl #8
     b40:	0000a412 	andeq	sl, r0, r2, lsl r4
     b44:	0c230200 	sfmeq	f0, 4, [r3], #-0
     b48:	52435309 	subpl	r5, r3, #603979776	; 0x24000000
     b4c:	01fe0400 	mvnseq	r0, r0, lsl #8
     b50:	0000a412 	andeq	sl, r0, r2, lsl r4
     b54:	10230200 	eorne	r0, r3, r0, lsl #4
     b58:	52434309 	subpl	r4, r3, #603979776	; 0x24000000
     b5c:	01ff0400 	mvnseq	r0, r0, lsl #8
     b60:	0000a412 	andeq	sl, r0, r2, lsl r4
     b64:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     b68:	0002a708 	andeq	sl, r2, r8, lsl #14
     b6c:	02000400 	andeq	r0, r0, #0, 8
     b70:	0003c312 	andeq	ip, r3, r2, lsl r3
     b74:	18230200 	stmdane	r3!, {r9}
     b78:	0002de08 	andeq	sp, r2, r8, lsl #28
     b7c:	02010400 	andeq	r0, r1, #0, 8
     b80:	0000a412 	andeq	sl, r0, r2, lsl r4
     b84:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     b88:	00025b08 	andeq	r5, r2, r8, lsl #22
     b8c:	02020400 	andeq	r0, r2, #0, 8
     b90:	0000a412 	andeq	sl, r0, r2, lsl r4
     b94:	28230200 	stmdacs	r3!, {r9}
     b98:	00033708 	andeq	r3, r3, r8, lsl #14
     b9c:	02030400 	andeq	r0, r3, #0, 8
     ba0:	0000a412 	andeq	sl, r0, r2, lsl r4
     ba4:	2c230200 	sfmcs	f0, 4, [r3], #-0
     ba8:	00033208 	andeq	r3, r3, r8, lsl #4
     bac:	02040400 	andeq	r0, r4, #0, 8
     bb0:	0000a412 	andeq	sl, r0, r2, lsl r4
     bb4:	30230200 	eorcc	r0, r3, r0, lsl #4
     bb8:	00006108 	andeq	r6, r0, r8, lsl #2
     bbc:	02050400 	andeq	r0, r5, #0, 8
     bc0:	0000a412 	andeq	sl, r0, r2, lsl r4
     bc4:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     bc8:	00017208 	andeq	r7, r1, r8, lsl #4
     bcc:	02060400 	andeq	r0, r6, #0, 8
     bd0:	0000a412 	andeq	sl, r0, r2, lsl r4
     bd4:	38230200 	stmdacc	r3!, {r9}
     bd8:	0003a208 	andeq	sl, r3, r8, lsl #4
     bdc:	02070400 	andeq	r0, r7, #0, 8
     be0:	0000a412 	andeq	sl, r0, r2, lsl r4
     be4:	3c230200 	sfmcc	f0, 4, [r3], #-0
     be8:	00007d08 	andeq	r7, r0, r8, lsl #26
     bec:	02080400 	andeq	r0, r8, #0, 8
     bf0:	0003dd12 	andeq	sp, r3, r2, lsl sp
     bf4:	40230200 	eormi	r0, r3, r0, lsl #4
     bf8:	0003ae08 	andeq	sl, r3, r8, lsl #28
     bfc:	02090400 	andeq	r0, r9, #0, 8
     c00:	0000a912 	andeq	sl, r0, r2, lsl r9
     c04:	48230200 	stmdami	r3!, {r9}
     c08:	00011d08 	andeq	r1, r1, r8, lsl #26
     c0c:	020a0400 	andeq	r0, sl, #0, 8
     c10:	0000a912 	andeq	sl, r0, r2, lsl r9
     c14:	4c230200 	sfmmi	f0, 4, [r3], #-0
     c18:	0000b308 	andeq	fp, r0, r8, lsl #6
     c1c:	020b0400 	andeq	r0, fp, #0, 8
     c20:	0003f712 	andeq	pc, r3, r2, lsl r7	; <UNPREDICTABLE>
     c24:	50230200 	eorpl	r0, r3, r0, lsl #4
     c28:	00028608 	andeq	r8, r2, r8, lsl #12
     c2c:	020c0400 	andeq	r0, ip, #0, 8
     c30:	00041112 	andeq	r1, r4, r2, lsl r1
     c34:	60230200 	eorvs	r0, r3, r0, lsl #4
     c38:	00038408 	andeq	r8, r3, r8, lsl #8
     c3c:	020d0400 	andeq	r0, sp, #0, 8
     c40:	0000a912 	andeq	sl, r0, r2, lsl r9
     c44:	78230200 	stmdavc	r3!, {r9}
     c48:	52544309 	subspl	r4, r4, #603979776	; 0x24000000
     c4c:	020e0400 	andeq	r0, lr, #0, 8
     c50:	0000a912 	andeq	sl, r0, r2, lsl r9
     c54:	7c230200 	sfmvc	f0, 4, [r3], #-0
     c58:	00017708 	andeq	r7, r1, r8, lsl #14
     c5c:	020f0400 	andeq	r0, pc, #0, 8
     c60:	0000a912 	andeq	sl, r0, r2, lsl r9
     c64:	80230300 	eorhi	r0, r3, r0, lsl #6
     c68:	02fb0801 	rscseq	r0, fp, #65536	; 0x10000
     c6c:	10040000 	andne	r0, r4, r0
     c70:	00a41202 	adceq	r1, r4, r2, lsl #4
     c74:	23030000 	movwcs	r0, #12288	; 0x3000
     c78:	ba080184 	blt	201290 <__RAM_SIZE+0x101290>
     c7c:	04000003 	streq	r0, [r0], #-3
     c80:	a4120211 	ldrge	r0, [r2], #-529	; 0xfffffdef
     c84:	03000000 	movweq	r0, #0
     c88:	08018823 	stmdaeq	r1, {r0, r1, r5, fp, pc}
     c8c:	000002ec 	andeq	r0, r0, ip, ror #5
     c90:	12021204 	andne	r1, r2, #4, 4	; 0x40000000
     c94:	000000a4 	andeq	r0, r0, r4, lsr #1
     c98:	018c2303 	orreq	r2, ip, r3, lsl #6
     c9c:	00037a08 	andeq	r7, r3, r8, lsl #20
     ca0:	02130400 	andseq	r0, r3, #0, 8
     ca4:	00041612 	andeq	r1, r4, r2, lsl r6
     ca8:	90230300 	eorls	r0, r3, r0, lsl #6
     cac:	02d90801 	sbcseq	r0, r9, #65536	; 0x10000
     cb0:	14040000 	strne	r0, [r4], #-0
     cb4:	00a41202 	adceq	r1, r4, r2, lsl #4
     cb8:	23030000 	movwcs	r0, #12288	; 0x3000
     cbc:	570801e4 	strpl	r0, [r8, -r4, ror #3]
     cc0:	04000003 	streq	r0, [r0], #-3
     cc4:	a4120215 	ldrge	r0, [r2], #-533	; 0xfffffdeb
     cc8:	03000000 	movweq	r0, #0
     ccc:	0801e823 	stmdaeq	r1, {r0, r1, r5, fp, sp, lr, pc}
     cd0:	0000033c 	andeq	r0, r0, ip, lsr r3
     cd4:	12021604 	andne	r1, r2, #4, 12	; 0x400000
     cd8:	00000426 	andeq	r0, r0, r6, lsr #8
     cdc:	01ec2303 	mvneq	r2, r3, lsl #6
     ce0:	00011808 	andeq	r1, r1, r8, lsl #16
     ce4:	02170400 	andseq	r0, r7, #0, 8
     ce8:	0000a412 	andeq	sl, r0, r2, lsl r4
     cec:	80230300 	eorhi	r0, r3, r0, lsl #6
     cf0:	00d80804 	sbcseq	r0, r8, r4, lsl #16
     cf4:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
     cf8:	04361202 	ldrteq	r1, [r6], #-514	; 0xfffffdfe
     cfc:	23030000 	movwcs	r0, #12288	; 0x3000
     d00:	67080484 	strvs	r0, [r8, -r4, lsl #9]
     d04:	04000000 	streq	r0, [r0], #-0
     d08:	a9120219 	ldmdbge	r2, {r0, r3, r4, r9}
     d0c:	03000000 	movweq	r0, #0
     d10:	0804c023 	stmdaeq	r4, {r0, r1, r5, lr, pc}
     d14:	00000077 	andeq	r0, r0, r7, ror r0
     d18:	12021a04 	andne	r1, r2, #4, 20	; 0x4000
     d1c:	000000a9 	andeq	r0, r0, r9, lsr #1
     d20:	04c42303 	strbeq	r2, [r4], #771	; 0x303
     d24:	00015e08 	andeq	r5, r1, r8, lsl #28
     d28:	021b0400 	andseq	r0, fp, #0, 8
     d2c:	0000a912 	andeq	sl, r0, r2, lsl r9
     d30:	c8230300 	stmdagt	r3!, {r8, r9}
     d34:	034d0804 	movteq	r0, #55300	; 0xd804
     d38:	1c040000 	stcne	0, cr0, [r4], {-0}
     d3c:	04461202 	strbeq	r1, [r6], #-514	; 0xfffffdfe
     d40:	23030000 	movwcs	r0, #12288	; 0x3000
     d44:	600804cc 	andvs	r0, r8, ip, asr #9
     d48:	04000002 	streq	r0, [r0], #-2
     d4c:	a412021d 	ldrge	r0, [r2], #-541	; 0xfffffde3
     d50:	03000000 	movweq	r0, #0
     d54:	0804d023 	stmdaeq	r4, {r0, r1, r5, ip, lr, pc}
     d58:	000000fc 	strdeq	r0, [r0], -ip
     d5c:	12021e04 	andne	r1, r2, #4, 28	; 0x40
     d60:	00000446 	andeq	r0, r0, r6, asr #8
     d64:	04d42303 	ldrbeq	r2, [r4], #771	; 0x303
     d68:	00027e08 	andeq	r7, r2, r8, lsl #28
     d6c:	021f0400 	andseq	r0, pc, #0, 8
     d70:	0000a412 	andeq	sl, r0, r2, lsl r4
     d74:	d8230300 	stmdale	r3!, {r8, r9}
     d78:	02680804 	rsbeq	r0, r8, #4, 16	; 0x40000
     d7c:	20040000 	andcs	r0, r4, r0
     d80:	00a41202 	adceq	r1, r4, r2, lsl #4
     d84:	23030000 	movwcs	r0, #12288	; 0x3000
     d88:	3e0804dc 	mcrcc	4, 0, r0, cr8, cr12, {6}
     d8c:	04000001 	streq	r0, [r0], #-1
     d90:	a4120221 	ldrge	r0, [r2], #-545	; 0xfffffddf
     d94:	03000000 	movweq	r0, #0
     d98:	0804e023 	stmdaeq	r4, {r0, r1, r5, sp, lr, pc}
     d9c:	00000315 	andeq	r0, r0, r5, lsl r3
     da0:	12022204 	andne	r2, r2, #4, 4	; 0x40000000
     da4:	000000a4 	andeq	r0, r0, r4, lsr #1
     da8:	04e42303 	strbteq	r2, [r4], #771	; 0x303
     dac:	0002e408 	andeq	lr, r2, r8, lsl #8
     db0:	02230400 	eoreq	r0, r3, #0, 8
     db4:	0000a412 	andeq	sl, r0, r2, lsl r4
     db8:	e8230300 	stmda	r3!, {r8, r9}
     dbc:	00000804 	andeq	r0, r0, r4, lsl #16
     dc0:	24040000 	strcs	r0, [r4], #-0
     dc4:	00a41202 	adceq	r1, r4, r2, lsl #4
     dc8:	23030000 	movwcs	r0, #12288	; 0x3000
     dcc:	aa0804ec 	bge	202184 <__RAM_SIZE+0x102184>
     dd0:	04000000 	streq	r0, [r0], #-0
     dd4:	a4120225 	ldrge	r0, [r2], #-549	; 0xfffffddb
     dd8:	03000000 	movweq	r0, #0
     ddc:	0804f023 	stmdaeq	r4, {r0, r1, r5, ip, sp, lr, pc}
     de0:	00000373 	andeq	r0, r0, r3, ror r3
     de4:	12022604 	andne	r2, r2, #4, 12	; 0x400000
     de8:	000000a4 	andeq	r0, r0, r4, lsr #1
     dec:	04f42303 	ldrbteq	r2, [r4], #771	; 0x303
     df0:	0003a708 	andeq	sl, r3, r8, lsl #14
     df4:	02270400 	eoreq	r0, r7, #0, 8
     df8:	0000a412 	andeq	sl, r0, r2, lsl r4
     dfc:	f8230300 			; <UNDEFINED> instruction: 0xf8230300
     e00:	930a0004 	movwls	r0, #40964	; 0xa004
     e04:	c3000000 	movwgt	r0, #0
     e08:	0b000003 	bleq	e1c <__Vectors_Size+0x65c>
     e0c:	00000080 	andeq	r0, r0, r0, lsl #1
     e10:	b305000b 	movwlt	r0, #20491	; 0x500b
     e14:	0a000003 	beq	e28 <__Vectors_Size+0x668>
     e18:	000000a9 	andeq	r0, r0, r9, lsr #1
     e1c:	000003d8 	ldrdeq	r0, [r0], -r8
     e20:	0000800b 	andeq	r8, r0, fp
     e24:	06000100 	streq	r0, [r0], -r0, lsl #2
     e28:	000003c8 	andeq	r0, r0, r8, asr #7
     e2c:	0003d805 	andeq	sp, r3, r5, lsl #16
     e30:	00a90a00 	adceq	r0, r9, r0, lsl #20
     e34:	03f20000 	mvnseq	r0, #0
     e38:	800b0000 	andhi	r0, fp, r0
     e3c:	03000000 	movweq	r0, #0
     e40:	03e20600 	mvneq	r0, #0, 12
     e44:	f2050000 	vhadd.s8	d0, d5, d0
     e48:	0a000003 	beq	e5c <__Vectors_Size+0x69c>
     e4c:	000000a9 	andeq	r0, r0, r9, lsr #1
     e50:	0000040c 	andeq	r0, r0, ip, lsl #8
     e54:	0000800b 	andeq	r8, r0, fp
     e58:	06000500 	streq	r0, [r0], -r0, lsl #10
     e5c:	000003fc 	strdeq	r0, [r0], -ip
     e60:	00040c05 	andeq	r0, r4, r5, lsl #24
     e64:	00980a00 	addseq	r0, r8, r0, lsl #20
     e68:	04260000 	strteq	r0, [r6], #-0
     e6c:	800b0000 	andhi	r0, fp, r0
     e70:	14000000 	strne	r0, [r0], #-0
     e74:	00980a00 	addseq	r0, r8, r0, lsl #20
     e78:	04360000 	ldrteq	r0, [r6], #-0
     e7c:	800b0000 	andhi	r0, fp, r0
     e80:	44000000 	strmi	r0, [r0], #-0
     e84:	00980a00 	addseq	r0, r8, r0, lsl #20
     e88:	04460000 	strbeq	r0, [r6], #-0
     e8c:	800b0000 	andhi	r0, fp, r0
     e90:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
     e94:	00980a00 	addseq	r0, r8, r0, lsl #20
     e98:	04560000 	ldrbeq	r0, [r6], #-0
     e9c:	800b0000 	andhi	r0, fp, r0
     ea0:	00000000 	andeq	r0, r0, r0
     ea4:	029e0c00 	addseq	r0, lr, #0, 24
     ea8:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
     eac:	00ae0302 	adceq	r0, lr, r2, lsl #6
     eb0:	12030000 	andne	r0, r3, #0
     eb4:	05000004 	streq	r0, [r0, #-4]
     eb8:	04740f24 	ldrbteq	r0, [r4], #-3876	; 0xfffff0dc
     ebc:	63060000 	movwvs	r0, #24576	; 0x6000
     ec0:	0d000004 	stceq	0, cr0, [r0, #-16]
     ec4:	00047a04 	andeq	r7, r4, r4, lsl #20
     ec8:	0f010e00 	svceq	0x00010e00
     ecc:	000003dc 	ldrdeq	r0, [r0], -ip
     ed0:	98112905 	ldmdals	r1, {r0, r2, r8, fp, sp}
     ed4:	01000000 	mrseq	r0, (UNDEF: 0)
     ed8:	046f0a01 	strbteq	r0, [pc], #-2561	; ee0 <__Vectors_Size+0x720>
     edc:	049b0000 	ldreq	r0, [fp], #0
     ee0:	80100000 	andshi	r0, r0, r0
     ee4:	ef000000 	svc	0x00000000
     ee8:	8a060001 	bhi	180ef4 <__RAM_SIZE+0x80ef4>
     eec:	0f000004 	svceq	0x00000004
     ef0:	000003ec 	andeq	r0, r0, ip, ror #7
     ef4:	9b203801 	blls	80ef00 <__RAM_SIZE+0x70ef00>
     ef8:	01000004 	tsteq	r0, r4
     efc:	047c1101 	ldrbteq	r1, [ip], #-257	; 0xfffffeff
     f00:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
     f04:	0003050a 	andeq	r0, r3, sl, lsl #10
     f08:	12380000 	eorsne	r0, r8, #0
     f0c:	0003f601 	andeq	pc, r3, r1, lsl #12
     f10:	064c0100 	strbeq	r0, [ip], -r0, lsl #2
     f14:	00097401 	andeq	r7, r9, r1, lsl #8
     f18:	0009a010 	andeq	sl, r9, r0, lsl r0
     f1c:	007d0210 	rsbseq	r0, sp, r0, lsl r2
     f20:	c6011201 	strgt	r1, [r1], -r1, lsl #4
     f24:	01000003 	tsteq	r0, r3
     f28:	00010644 	andeq	r0, r1, r4, asr #12
     f2c:	00000000 	andeq	r0, r0, r0
     f30:	02000000 	andeq	r0, r0, #0
     f34:	0001007d 	andeq	r0, r1, sp, ror r0
     f38:	00001bc1 	andeq	r1, r0, r1, asr #23
     f3c:	02830002 	addeq	r0, r3, #2
     f40:	01040000 	mrseq	r0, (UNDEF: 4)
     f44:	00000188 	andeq	r0, r0, r8, lsl #3
     f48:	0005030c 	andeq	r0, r5, ip, lsl #6
     f4c:	00001a00 	andeq	r1, r0, r0, lsl #20
     f50:	00015000 	andeq	r5, r1, r0
	...
     f5c:	0005ac00 	andeq	sl, r5, r0, lsl #24
     f60:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
     f64:	00000098 	muleq	r0, r8, r0
     f68:	b6070402 	strlt	r0, [r7], -r2, lsl #8
     f6c:	02000002 	andeq	r0, r0, #2
     f70:	02720601 	rsbseq	r0, r2, #1048576	; 0x100000
     f74:	01020000 	mrseq	r0, (UNDEF: 2)
     f78:	00027008 	andeq	r7, r2, r8
     f7c:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
     f80:	0000006d 	andeq	r0, r0, sp, rrx
     f84:	02070202 	andeq	r0, r7, #536870912	; 0x20000000
     f88:	02000003 	andeq	r0, r0, #3
     f8c:	01690504 	cmneq	r9, r4, lsl #10
     f90:	53030000 	movwpl	r0, #12288	; 0x3000
     f94:	02000000 	andeq	r0, r0, #0
     f98:	02b10704 	adcseq	r0, r1, #4, 14	; 0x100000
     f9c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     fa0:	00016405 	andeq	r6, r1, r5, lsl #8
     fa4:	00660300 	rsbeq	r0, r6, r0, lsl #6
     fa8:	c1040000 	mrsgt	r0, (UNDEF: 4)
     fac:	02000005 	andeq	r0, r0, #5
     fb0:	007e1969 	rsbseq	r1, lr, r9, ror #18
     fb4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     fb8:	0002ac07 	andeq	sl, r2, r7, lsl #24
     fbc:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
     fc0:	00746e69 	rsbseq	r6, r4, r9, ror #28
     fc4:	00008503 	andeq	r8, r0, r3, lsl #10
     fc8:	05ea0400 	strbeq	r0, [sl, #1024]!	; 0x400
     fcc:	e8020000 	stmda	r2, {}	; <UNPREDICTABLE>
     fd0:	0000301a 	andeq	r3, r0, sl, lsl r0
     fd4:	00300300 	eorseq	r0, r0, r0, lsl #6
     fd8:	c3040000 	movwgt	r0, #16384	; 0x4000
     fdc:	03000005 	movweq	r0, #5
     fe0:	0072143c 	rsbseq	r1, r2, ip, lsr r4
     fe4:	ec040000 	stc	0, cr0, [r4], {-0}
     fe8:	03000005 	movweq	r0, #5
     fec:	00911552 	addseq	r1, r1, r2, asr r5
     ff0:	54040000 	strpl	r0, [r4], #-0
     ff4:	04000006 	streq	r0, [r0], #-6
     ff8:	00c61b28 	sbceq	r1, r6, r8, lsr #22
     ffc:	f9060000 			; <UNDEFINED> instruction: 0xf9060000
    1000:	04000004 	streq	r0, [r0], #-4
    1004:	00e00006 	rsceq	r0, r0, r6
    1008:	a9070000 	stmdbge	r7, {}	; <UNPREDICTABLE>
    100c:	e0000005 	and	r0, r0, r5
    1010:	02000000 	andeq	r0, r0, #0
    1014:	00010023 	andeq	r0, r1, r3, lsr #32
    1018:	fb040408 	blx	102042 <__RAM_SIZE+0x2042>
    101c:	04000004 	streq	r0, [r0], #-4
    1020:	00ba1863 	adcseq	r1, sl, r3, ror #16
    1024:	5f040000 	svcpl	0x00040000
    1028:	05000004 	streq	r0, [r0, #-4]
    102c:	003017d1 	ldrsbteq	r1, [r0], -r1
    1030:	ee030000 	cdp	0, 0, cr0, cr3, cr0, {0}
    1034:	02000000 	andeq	r0, r0, #0
    1038:	00930408 	addseq	r0, r3, r8, lsl #8
    103c:	40040000 	andmi	r0, r4, r0
    1040:	01000005 	tsteq	r0, r5
    1044:	0112107a 	tsteq	r2, sl, ror r0
    1048:	04090000 	streq	r0, [r9], #-0
    104c:	00000118 	andeq	r0, r0, r8, lsl r1
    1050:	0133010a 	teqeq	r3, sl, lsl #2
    1054:	330b0000 	movwcc	r0, #45056	; 0xb000
    1058:	0b000001 	bleq	1064 <__HEAP_SIZE+0x64>
    105c:	000000e0 	andeq	r0, r0, r0, ror #1
    1060:	0000ee0b 	andeq	lr, r0, fp, lsl #28
    1064:	00ee0b00 	rsceq	r0, lr, r0, lsl #22
    1068:	02000000 	andeq	r0, r0, #0
    106c:	02790801 	rsbseq	r0, r9, #65536	; 0x10000
    1070:	33030000 	movwcc	r0, #12288	; 0x3000
    1074:	0c000001 	stceq	0, cr0, [r0], {1}
    1078:	097e0108 	ldmdbeq	lr!, {r3, r8}^
    107c:	00000167 	andeq	r0, r0, r7, ror #2
    1080:	7463660d 	strbtvc	r6, [r3], #-1549	; 0xfffff9f3
    1084:	0b7f0100 	bleq	1fc148c <__RAM_SIZE+0x1ec148c>
    1088:	00000178 	andeq	r0, r0, r8, ror r1
    108c:	0d002302 	stceq	3, cr2, [r0, #-8]
    1090:	00677261 	rsbeq	r7, r7, r1, ror #4
    1094:	e0098001 	and	r8, r9, r1
    1098:	02000000 	andeq	r0, r0, #0
    109c:	0a000423 	beq	2130 <__HEAP_SIZE+0x1130>
    10a0:	00017801 	andeq	r7, r1, r1, lsl #16
    10a4:	01330b00 	teqeq	r3, r0, lsl #22
    10a8:	e00b0000 	and	r0, fp, r0
    10ac:	00000000 	andeq	r0, r0, r0
    10b0:	01670409 	cmneq	r7, r9, lsl #8
    10b4:	36040000 	strcc	r0, [r4], -r0
    10b8:	01000006 	tsteq	r0, r6
    10bc:	013f0381 	teqeq	pc, r1, lsl #7
    10c0:	7e030000 	cdpvc	0, 0, cr0, cr3, cr0, {0}
    10c4:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    10c8:	0004d901 	andeq	sp, r4, r1, lsl #18
    10cc:	038a0100 	orreq	r0, sl, #0, 2
    10d0:	00850105 	addeq	r0, r5, r5, lsl #2
	...
    10dc:	02c30000 	sbceq	r0, r3, #0
    10e0:	4c010000 	stcmi	0, cr0, [r1], {-0}
    10e4:	0f000002 	svceq	0x00000002
    10e8:	0074756f 	rsbseq	r7, r4, pc, ror #10
    10ec:	16038a01 	strne	r8, [r3], -r1, lsl #20
    10f0:	00000178 	andeq	r0, r0, r8, ror r1
    10f4:	00000325 	andeq	r0, r0, r5, lsr #6
    10f8:	0000031f 	andeq	r0, r0, pc, lsl r3
    10fc:	6772610f 	ldrbvs	r6, [r2, -pc, lsl #2]!
    1100:	038a0100 	orreq	r0, sl, #0, 2
    1104:	0000e03d 	andeq	lr, r0, sp, lsr r0
    1108:	00035600 	andeq	r5, r3, r0, lsl #12
    110c:	00035200 	andeq	r5, r3, r0, lsl #4
    1110:	051e1000 	ldreq	r1, [lr, #-0]
    1114:	8a010000 	bhi	4111c <__HEAP_SIZE+0x4011c>
    1118:	024c4e03 	subeq	r4, ip, #3, 28	; 0x30
    111c:	91020000 	mrsls	r0, (UNDEF: 2)
    1120:	76121178 			; <UNDEFINED> instruction: 0x76121178
    1124:	8c010061 	stchi	0, cr0, [r1], {97}	; 0x61
    1128:	00e20b03 	rsceq	r0, r2, r3, lsl #22
    112c:	91020000 	mrsls	r0, (UNDEF: 2)
    1130:	0443136c 	strbeq	r1, [r3], #-876	; 0xfffffc94
    1134:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    1138:	018a1b03 	orreq	r1, sl, r3, lsl #22
    113c:	91020000 	mrsls	r0, (UNDEF: 2)
    1140:	65721464 	ldrbvs	r1, [r2, #-1124]!	; 0xfffffb9c
    1144:	8f010074 	svchi	0x00010074
    1148:	008c0d03 	addeq	r0, ip, r3, lsl #26
    114c:	03790000 	cmneq	r9, #0
    1150:	03770000 	cmneq	r7, #0
    1154:	00150000 	andseq	r0, r5, r0
    1158:	5f000000 	svcpl	0x00000000
    115c:	16000005 	strne	r0, [r0], -r5
    1160:	03055001 	movweq	r5, #20481	; 0x5001
    1164:	00000000 	andeq	r0, r0, r0
    1168:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    116c:	01165491 			; <UNDEFINED> instruction: 0x01165491
    1170:	ff090252 			; <UNDEFINED> instruction: 0xff090252
    1174:	03530116 	cmpeq	r3, #-2147483643	; 0x80000005
    1178:	16066891 			; <UNDEFINED> instruction: 0x16066891
    117c:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    1180:	00006c91 	muleq	r0, r1, ip
    1184:	013a0409 	teqeq	sl, r9, lsl #8
    1188:	010e0000 	mrseq	r0, (UNDEF: 14)
    118c:	0000052c 	andeq	r0, r0, ip, lsr #10
    1190:	05038401 	streq	r8, [r3, #-1025]	; 0xfffffbff
    1194:	00008501 	andeq	r8, r0, r1, lsl #10
	...
    11a0:	00038c00 	andeq	r8, r3, r0, lsl #24
    11a4:	02ee0100 	rsceq	r0, lr, #0, 2
    11a8:	ac170000 	ldcge	0, cr0, [r7], {-0}
    11ac:	01000004 	tsteq	r0, r4
    11b0:	ee150384 	cdp	3, 1, cr0, cr5, cr4, {4}
    11b4:	ca000002 	bgt	11c4 <__HEAP_SIZE+0x1c4>
    11b8:	c4000003 	strgt	r0, [r0], #-3
    11bc:	17000003 	strne	r0, [r0, -r3]
    11c0:	0000038a 	andeq	r0, r0, sl, lsl #7
    11c4:	24038401 	strcs	r8, [r3], #-1025	; 0xfffffbff
    11c8:	000000ee 	andeq	r0, r0, lr, ror #1
    11cc:	000003fc 	strdeq	r0, [r0], -ip
    11d0:	000003f6 	strdeq	r0, [r0], -r6
    11d4:	00051e17 	andeq	r1, r5, r7, lsl lr
    11d8:	03840100 	orreq	r0, r4, #0, 2
    11dc:	00024c37 	andeq	r4, r2, r7, lsr ip
    11e0:	00042e00 	andeq	r2, r4, r0, lsl #28
    11e4:	00042800 	andeq	r2, r4, r0, lsl #16
    11e8:	61760f00 	cmnvs	r6, r0, lsl #30
    11ec:	03840100 	orreq	r0, r4, #0, 2
    11f0:	0000e247 	andeq	lr, r0, r7, asr #4
    11f4:	00045c00 	andeq	r5, r4, r0, lsl #24
    11f8:	00045a00 	andeq	r5, r4, r0, lsl #20
    11fc:	00001500 	andeq	r1, r0, r0, lsl #10
    1200:	055f0000 	ldrbeq	r0, [pc, #-0]	; 1208 <__HEAP_SIZE+0x208>
    1204:	01160000 	tsteq	r6, r0
    1208:	00030550 	andeq	r0, r3, r0, asr r5
    120c:	16000000 	strne	r0, [r0], -r0
    1210:	f3035101 	vrhadd.u8	d5, d3, d1
    1214:	01165001 	tsteq	r6, r1
    1218:	01f30352 	mvnseq	r0, r2, asr r3
    121c:	53011651 	movwpl	r1, #5713	; 0x1651
    1220:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
    1224:	04090000 	streq	r0, [r9], #-0
    1228:	00000133 	andeq	r0, r0, r3, lsr r1
    122c:	0457010e 	ldrbeq	r0, [r7], #-270	; 0xfffffef2
    1230:	7d010000 	stcvc	0, cr0, [r1, #-0]
    1234:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
	...
    1240:	6f000000 	svcvs	0x00000000
    1244:	01000004 	tsteq	r0, r4
    1248:	00000374 	andeq	r0, r0, r4, ror r3
    124c:	00051e17 	andeq	r1, r5, r7, lsl lr
    1250:	037d0100 	cmneq	sp, #0, 2
    1254:	00024c19 	andeq	r4, r2, r9, lsl ip
    1258:	0004ad00 	andeq	sl, r4, r0, lsl #26
    125c:	0004a700 	andeq	sl, r4, r0, lsl #14
    1260:	61760f00 	cmnvs	r6, r0, lsl #30
    1264:	037d0100 	cmneq	sp, #0, 2
    1268:	0000e229 	andeq	lr, r0, r9, lsr #4
    126c:	0004db00 	andeq	sp, r4, r0, lsl #22
    1270:	0004d900 	andeq	sp, r4, r0, lsl #18
    1274:	04ac1300 	strteq	r1, [ip], #768	; 0x300
    1278:	7f010000 	svcvc	0x00010000
    127c:	03740803 	cmneq	r4, #196608	; 0x30000
    1280:	91020000 	mrsls	r0, (UNDEF: 2)
    1284:	00001574 	andeq	r1, r0, r4, ror r5
    1288:	055f0000 	ldrbeq	r0, [pc, #-0]	; 1290 <__HEAP_SIZE+0x290>
    128c:	01160000 	tsteq	r6, r0
    1290:	e1030550 	tst	r3, r0, asr r5
    1294:	1610001a 			; <UNDEFINED> instruction: 0x1610001a
    1298:	91025101 	tstls	r2, r1, lsl #2
    129c:	52011674 	andpl	r1, r1, #116, 12	; 0x7400000
    12a0:	16ff0902 	ldrbtne	r0, [pc], r2, lsl #18
    12a4:	f3035301 	vcgt.u8	d5, d3, d1
    12a8:	00005001 	andeq	r5, r0, r1
    12ac:	00013318 	andeq	r3, r1, r8, lsl r3
    12b0:	00038400 	andeq	r8, r3, r0, lsl #8
    12b4:	00301900 	eorseq	r1, r0, r0, lsl #18
    12b8:	00000000 	andeq	r0, r0, r0
    12bc:	052d010e 	streq	r0, [sp, #-270]!	; 0xfffffef2
    12c0:	73010000 	movwvc	r0, #4096	; 0x1000
    12c4:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
	...
    12d0:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    12d4:	01000004 	tsteq	r0, r4
    12d8:	00000433 	andeq	r0, r0, r3, lsr r4
    12dc:	0004ac17 	andeq	sl, r4, r7, lsl ip
    12e0:	03730100 	cmneq	r3, #0, 2
    12e4:	0002ee14 	andeq	lr, r2, r4, lsl lr
    12e8:	00055000 	andeq	r5, r5, r0
    12ec:	00054a00 	andeq	r4, r5, r0, lsl #20
    12f0:	038a1700 	orreq	r1, sl, #0, 14
    12f4:	73010000 	movwvc	r0, #4096	; 0x1000
    12f8:	00ee2303 	rsceq	r2, lr, r3, lsl #6
    12fc:	05820000 	streq	r0, [r2]
    1300:	057c0000 	ldrbeq	r0, [ip, #-0]!
    1304:	1e100000 	cdpne	0, 1, cr0, cr0, cr0, {0}
    1308:	01000005 	tsteq	r0, r5
    130c:	4c360373 	ldcmi	3, cr0, [r6], #-460	; 0xfffffe34
    1310:	02000002 	andeq	r0, r0, #2
    1314:	12117891 	andsne	r7, r1, #9502720	; 0x910000
    1318:	01006176 	tsteq	r0, r6, ror r1
    131c:	e20b0375 	and	r0, fp, #-738197503	; 0xd4000001
    1320:	02000000 	andeq	r0, r0, #0
    1324:	72146c91 	andsvc	r6, r4, #37120	; 0x9100
    1328:	01007465 	tsteq	r0, r5, ror #8
    132c:	8c0d0377 	stchi	3, cr0, [sp], {119}	; 0x77
    1330:	b0000000 	andlt	r0, r0, r0
    1334:	ae000005 	cdpge	0, 0, cr0, cr0, cr5, {0}
    1338:	15000005 	strne	r0, [r0, #-5]
    133c:	00000000 	andeq	r0, r0, r0
    1340:	0000055f 	andeq	r0, r0, pc, asr r5
    1344:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
    1348:	00000003 	andeq	r0, r0, r3
    134c:	51011600 	tstpl	r1, r0, lsl #12
    1350:	5001f303 	andpl	pc, r1, r3, lsl #6
    1354:	03520116 	cmpeq	r2, #-2147483643	; 0x80000005
    1358:	165101f3 			; <UNDEFINED> instruction: 0x165101f3
    135c:	91035301 	tstls	r3, r1, lsl #6
    1360:	02160668 	andseq	r0, r6, #104, 12	; 0x6800000
    1364:	9102007d 	tstls	r2, sp, ror r0
    1368:	0e00006c 	cdpeq	0, 0, cr0, cr0, cr12, {3}
    136c:	00056701 	andeq	r6, r5, r1, lsl #14
    1370:	03690100 	cmneq	r9, #0, 2
    1374:	00850105 	addeq	r0, r5, r5, lsl #2
	...
    1380:	05c30000 	strbeq	r0, [r3]
    1384:	cc010000 	stcgt	0, cr0, [r1], {-0}
    1388:	17000004 	strne	r0, [r0, -r4]
    138c:	000004ac 	andeq	r0, r0, ip, lsr #9
    1390:	13036901 	movwne	r6, #14593	; 0x3901
    1394:	000002ee 	andeq	r0, r0, lr, ror #5
    1398:	00000625 	andeq	r0, r0, r5, lsr #12
    139c:	0000061f 	andeq	r0, r0, pc, lsl r6
    13a0:	00051e10 	andeq	r1, r5, r0, lsl lr
    13a4:	03690100 	cmneq	r9, #0, 2
    13a8:	00024c27 	andeq	r4, r2, r7, lsr #24
    13ac:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    13b0:	61761211 	cmnvs	r6, r1, lsl r2
    13b4:	036b0100 	cmneq	fp, #0, 2
    13b8:	0000e20b 	andeq	lr, r0, fp, lsl #4
    13bc:	6c910200 	lfmvs	f0, 4, [r1], {0}
    13c0:	74657214 	strbtvc	r7, [r5], #-532	; 0xfffffdec
    13c4:	036d0100 	cmneq	sp, #0, 2
    13c8:	00008c0d 	andeq	r8, r0, sp, lsl #24
    13cc:	00065300 	andeq	r5, r6, r0, lsl #6
    13d0:	00065100 	andeq	r5, r6, r0, lsl #2
    13d4:	00001500 	andeq	r1, r0, r0, lsl #10
    13d8:	055f0000 	ldrbeq	r0, [pc, #-0]	; 13e0 <__HEAP_SIZE+0x3e0>
    13dc:	01160000 	tsteq	r6, r0
    13e0:	00030550 	andeq	r0, r3, r0, asr r5
    13e4:	16000000 	strne	r0, [r0], -r0
    13e8:	f3035101 	vrhadd.u8	d5, d3, d1
    13ec:	01165001 	tsteq	r6, r1
    13f0:	ff090252 			; <UNDEFINED> instruction: 0xff090252
    13f4:	03530116 	cmpeq	r3, #-2147483643	; 0x80000005
    13f8:	16065c91 			; <UNDEFINED> instruction: 0x16065c91
    13fc:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    1400:	00006091 	muleq	r0, r1, r0
    1404:	052f010e 	streq	r0, [pc, #-270]!	; 12fe <__HEAP_SIZE+0x2fe>
    1408:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    140c:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
    1410:	ec000000 	stc	0, cr0, [r0], {-0}
    1414:	1810001a 	ldmdane	r0, {r1, r3, r4}
    1418:	6610001b 			; <UNDEFINED> instruction: 0x6610001b
    141c:	01000006 	tsteq	r0, r6
    1420:	0000055f 	andeq	r0, r0, pc, asr r5
    1424:	00051e10 	andeq	r1, r5, r0, lsl lr
    1428:	035e0100 	cmpeq	lr, #0, 2
    142c:	00024c18 	andeq	r4, r2, r8, lsl ip
    1430:	70910200 	addsvc	r0, r1, r0, lsl #4
    1434:	61761211 	cmnvs	r6, r1, lsl r2
    1438:	03600100 	cmneq	r0, #0, 2
    143c:	0000e20b 	andeq	lr, r0, fp, lsl #4
    1440:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    1444:	0004ac13 	andeq	sl, r4, r3, lsl ip
    1448:	03620100 	cmneq	r2, #0, 2
    144c:	00037408 	andeq	r7, r3, r8, lsl #8
    1450:	60910200 	addsvs	r0, r1, r0, lsl #4
    1454:	74657214 	strbtvc	r7, [r5], #-532	; 0xfffffdec
    1458:	03630100 	cmneq	r3, #0, 2
    145c:	00008c0d 	andeq	r8, r0, sp, lsl #24
    1460:	0006c400 	andeq	ip, r6, r0, lsl #8
    1464:	0006c200 	andeq	ip, r6, r0, lsl #4
    1468:	1b081500 	blne	206870 <__RAM_SIZE+0x106870>
    146c:	055f1000 	ldrbeq	r1, [pc, #-0]	; 1474 <__HEAP_SIZE+0x474>
    1470:	01160000 	tsteq	r6, r0
    1474:	e1030550 	tst	r3, r0, asr r5
    1478:	1610001a 			; <UNDEFINED> instruction: 0x1610001a
    147c:	91025101 	tstls	r2, r1, lsl #2
    1480:	52011640 	andpl	r1, r1, #64, 12	; 0x4000000
    1484:	16ff0902 	ldrbtne	r0, [pc], r2, lsl #18
    1488:	91035301 	tstls	r3, r1, lsl #6
    148c:	02160650 	andseq	r0, r6, #80, 12	; 0x5000000
    1490:	9102007d 	tstls	r2, sp, ror r0
    1494:	1a000054 	bne	15ec <__HEAP_SIZE+0x5ec>
    1498:	0000052b 	andeq	r0, r0, fp, lsr #10
    149c:	0c024101 	stfeqs	f4, [r2], {1}
    14a0:	00008501 	andeq	r8, r0, r1, lsl #10
    14a4:	00146000 	andseq	r6, r4, r0
    14a8:	001ae010 	andseq	lr, sl, r0, lsl r0
    14ac:	0006d710 	andeq	sp, r6, r0, lsl r7
    14b0:	0b7d0100 	bleq	1f418b8 <__RAM_SIZE+0x1e418b8>
    14b4:	6f0f0000 	svcvs	0x000f0000
    14b8:	01007475 	tsteq	r0, r5, ror r4
    14bc:	06240241 	strteq	r0, [r4], -r1, asr #4
    14c0:	18000001 	stmdane	r0, {r0}
    14c4:	10000007 	andne	r0, r0, r7
    14c8:	17000007 	strne	r0, [r0, -r7]
    14cc:	000004ac 	andeq	r0, r0, ip, lsr #9
    14d0:	2f024101 	svccs	0x00024101
    14d4:	000002ee 	andeq	r0, r0, lr, ror #5
    14d8:	00000756 	andeq	r0, r0, r6, asr r7
    14dc:	0000074c 	andeq	r0, r0, ip, asr #14
    14e0:	00059117 	andeq	r9, r5, r7, lsl r1
    14e4:	02410100 	subeq	r0, r1, #0, 2
    14e8:	0000fa44 	andeq	pc, r0, r4, asr #20
    14ec:	0007aa00 	andeq	sl, r7, r0, lsl #20
    14f0:	00079800 	andeq	r9, r7, r0, lsl #16
    14f4:	051e1700 	ldreq	r1, [lr, #-1792]	; 0xfffff900
    14f8:	41010000 	mrsmi	r0, (UNDEF: 1)
    14fc:	024c5802 	subeq	r5, ip, #131072	; 0x20000
    1500:	081c0000 	ldmdaeq	ip, {}	; <UNPREDICTABLE>
    1504:	08180000 	ldmdaeq	r8, {}	; <UNPREDICTABLE>
    1508:	761b0000 	ldrvc	r0, [fp], -r0
    150c:	41010061 	tstmi	r1, r1, rrx
    1510:	00e26802 	rsceq	r6, r2, r2, lsl #16
    1514:	91020000 	mrsls	r0, (UNDEF: 2)
    1518:	057c1c00 	ldrbeq	r1, [ip, #-3072]!	; 0xfffff400
    151c:	43010000 	movwmi	r0, #4096	; 0x1000
    1520:	00301002 	eorseq	r1, r0, r2
    1524:	08520000 	ldmdaeq	r2, {}^	; <UNPREDICTABLE>
    1528:	083a0000 	ldmdaeq	sl!, {}	; <UNPREDICTABLE>
    152c:	4e1c0000 	cdpmi	0, 1, cr0, cr12, cr0, {0}
    1530:	01000006 	tsteq	r0, r6
    1534:	30170243 	andscc	r0, r7, r3, asr #4
    1538:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    153c:	e0000008 	and	r0, r0, r8
    1540:	1c000008 	stcne	0, cr0, [r0], {8}
    1544:	00000688 	andeq	r0, r0, r8, lsl #13
    1548:	1e024301 	cdpne	3, 0, cr4, cr2, cr1, {0}
    154c:	00000030 	andeq	r0, r0, r0, lsr r0
    1550:	0000099e 	muleq	r0, lr, r9
    1554:	00000980 	andeq	r0, r0, r0, lsl #19
    1558:	01006e14 	tsteq	r0, r4, lsl lr
    155c:	30290243 	eorcc	r0, r9, r3, asr #4
    1560:	5c000000 	stcpl	0, cr0, [r0], {-0}
    1564:	4e00000a 	cdpmi	0, 0, cr0, cr0, cr10, {0}
    1568:	1400000a 	strne	r0, [r0], #-10
    156c:	00786469 	rsbseq	r6, r8, r9, ror #8
    1570:	0a024401 	beq	9257c <__HEAP_SIZE+0x9157c>
    1574:	000000ee 	andeq	r0, r0, lr, ror #1
    1578:	00000b18 	andeq	r0, r0, r8, lsl fp
    157c:	00000ab8 			; <UNDEFINED> instruction: 0x00000ab8
    1580:	00153c1d 	andseq	r3, r5, sp, lsl ip
    1584:	00155c10 	andseq	r5, r5, r0, lsl ip
    1588:	00066310 	andeq	r6, r6, r0, lsl r3
    158c:	00771200 	rsbseq	r1, r7, r0, lsl #4
    1590:	11026c01 	tstne	r2, r1, lsl #24
    1594:	0000008c 	andeq	r0, r0, ip, lsl #1
    1598:	1d005001 	stcne	0, cr5, [r0, #-4]
    159c:	10001584 	andne	r1, r0, r4, lsl #11
    15a0:	10001598 	mulne	r0, r8, r5
    15a4:	00000680 	andeq	r0, r0, r0, lsl #13
    15a8:	00064813 	andeq	r4, r6, r3, lsl r8
    15ac:	02800100 	addeq	r0, r0, #0, 2
    15b0:	00008c13 	andeq	r8, r0, r3, lsl ip
    15b4:	00530100 	subseq	r0, r3, r0, lsl #2
    15b8:	0016a61d 	andseq	sl, r6, sp, lsl r6
    15bc:	00189210 	andseq	r9, r8, r0, lsl r2
    15c0:	00087310 	andeq	r7, r8, r0, lsl r3
    15c4:	080f1c00 	stmdaeq	pc, {sl, fp, ip}	; <UNPREDICTABLE>
    15c8:	b4010000 	strlt	r0, [r1], #-0
    15cc:	00301602 	eorseq	r1, r0, r2, lsl #12
    15d0:	0d4e0000 	stcleq	0, cr0, [lr, #-0]
    15d4:	0d320000 	ldceq	0, cr0, [r2, #-0]
    15d8:	381e0000 	ldmdacc	lr, {}	; <UNPREDICTABLE>
    15dc:	e9000001 	stmdb	r0, {r0}
    15e0:	1f000006 	svcne	0x00000006
    15e4:	000000c1 	andeq	r0, r0, r1, asr #1
    15e8:	1d02d601 	stcne	6, cr13, [r2, #-4]
    15ec:	0000006d 	andeq	r0, r0, sp, rrx
    15f0:	0017bc15 	andseq	fp, r7, r5, lsl ip
    15f4:	00137c10 	andseq	r7, r3, r0, lsl ip
    15f8:	50011600 	andpl	r1, r1, r0, lsl #12
    15fc:	16007702 	strne	r7, [r0], -r2, lsl #14
    1600:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1604:	52011600 	andpl	r1, r1, #0, 12
    1608:	16007402 	strne	r7, [r0], -r2, lsl #8
    160c:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1610:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1614:	007b0218 	rsbseq	r0, fp, r8, lsl r2
    1618:	1c7d0216 	lfmne	f0, 2, [sp], #-88	; 0xffffffa8
    161c:	00007502 	andeq	r7, r0, r2, lsl #10
    1620:	17c81d00 	strbne	r1, [r8, r0, lsl #26]
    1624:	17f81000 	ldrbne	r1, [r8, r0]!
    1628:	073e1000 	ldreq	r1, [lr, -r0]!
    162c:	c1130000 	tstgt	r3, r0
    1630:	01000000 	mrseq	r0, (UNDEF: 0)
    1634:	5a1802db 	bpl	6021a8 <__RAM_SIZE+0x5021a8>
    1638:	01000000 	mrseq	r0, (UNDEF: 0)
    163c:	17f61552 	ubfxne	r1, r2, #10, #23
    1640:	150f1000 	strne	r1, [pc, #-0]	; 1648 <__HEAP_SIZE+0x648>
    1644:	01160000 	tsteq	r6, r0
    1648:	00770250 	rsbseq	r0, r7, r0, asr r2
    164c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1650:	01160078 	tsteq	r6, r8, ror r0
    1654:	00740252 	rsbseq	r0, r4, r2, asr r2
    1658:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    165c:	02160076 	andseq	r0, r6, #118	; 0x76
    1660:	7b020c7d 	blvc	8485c <__HEAP_SIZE+0x8385c>
    1664:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1668:	48910310 	ldmmi	r1, {r4, r8, r9}
    166c:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1670:	00750214 	rsbseq	r0, r5, r4, lsl r2
    1674:	201e0000 	andscs	r0, lr, r0
    1678:	95000001 	strls	r0, [r0, #-1]
    167c:	1c000007 	stcne	0, cr0, [r0], {7}
    1680:	000000c1 	andeq	r0, r0, r1, asr #1
    1684:	1702df01 	strne	sp, [r2, -r1, lsl #30]
    1688:	0000008c 	andeq	r0, r0, ip, lsl #1
    168c:	00000dff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1690:	00000dfd 	strdeq	r0, [r0], -sp
    1694:	00177615 	andseq	r7, r7, r5, lsl r6
    1698:	00150f10 	andseq	r0, r5, r0, lsl pc
    169c:	50011600 	andpl	r1, r1, r0, lsl #12
    16a0:	16007702 	strne	r7, [r0], -r2, lsl #14
    16a4:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    16a8:	52011600 	andpl	r1, r1, #0, 12
    16ac:	16007402 	strne	r7, [r0], -r2, lsl #8
    16b0:	76025301 	strvc	r5, [r2], -r1, lsl #6
    16b4:	7d021600 	stcvc	6, cr1, [r2, #-0]
    16b8:	007b020c 	rsbseq	r0, fp, ip, lsl #4
    16bc:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    16c0:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    16c4:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    16c8:	00007502 	andeq	r7, r0, r2, lsl #10
    16cc:	01081e00 	tsteq	r8, r0, lsl #28
    16d0:	07f20000 	ldrbeq	r0, [r2, r0]!
    16d4:	c11c0000 	tstgt	ip, r0
    16d8:	01000000 	mrseq	r0, (UNDEF: 0)
    16dc:	9d2002ee 	sfmls	f0, 4, [r0, #-952]!	; 0xfffffc48
    16e0:	16000000 	strne	r0, [r0], -r0
    16e4:	1200000e 	andne	r0, r0, #14
    16e8:	1500000e 	strne	r0, [r0, #-14]
    16ec:	10001720 	andne	r1, r0, r0, lsr #14
    16f0:	0000150f 	andeq	r1, r0, pc, lsl #10
    16f4:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    16f8:	01160077 	tsteq	r6, r7, ror r0
    16fc:	00780251 	rsbseq	r0, r8, r1, asr r2
    1700:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1704:	01160074 	tsteq	r6, r4, ror r0
    1708:	00760253 	rsbseq	r0, r6, r3, asr r2
    170c:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    1710:	02163001 	andseq	r3, r6, #1
    1714:	7b020c7d 	blvc	84910 <__HEAP_SIZE+0x83910>
    1718:	7d021600 	stcvc	6, cr1, [r2, #-0]
    171c:	48910310 	ldmmi	r1, {r4, r8, r9}
    1720:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1724:	00750214 	rsbseq	r0, r5, r4, lsl r2
    1728:	4a200000 	bmi	801730 <__RAM_SIZE+0x701730>
    172c:	7c100018 	ldcvc	0, cr0, [r0], {24}
    1730:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
    1734:	16000008 	strne	r0, [r0], -r8
    1738:	77025001 	strvc	r5, [r2, -r1]
    173c:	51011600 	tstpl	r1, r0, lsl #12
    1740:	16007802 	strne	r7, [r0], -r2, lsl #16
    1744:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1748:	53011600 	movwpl	r1, #5632	; 0x1600
    174c:	16007602 	strne	r7, [r0], -r2, lsl #12
    1750:	01087d02 	tsteq	r8, r2, lsl #26
    1754:	7d021630 	stcvc	6, cr1, [r2, #-192]	; 0xffffff40
    1758:	007b0218 	rsbseq	r0, fp, r8, lsl r2
    175c:	1c7d0216 	lfmne	f0, 2, [sp], #-88	; 0xffffffa8
    1760:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    1764:	207d0216 	rsbscs	r0, sp, r6, lsl r2
    1768:	00007502 	andeq	r7, r0, r2, lsl #10
    176c:	00187415 	andseq	r7, r8, r5, lsl r4
    1770:	00150f10 	andseq	r0, r5, r0, lsl pc
    1774:	50011600 	andpl	r1, r1, r0, lsl #12
    1778:	16007702 	strne	r7, [r0], -r2, lsl #14
    177c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1780:	52011600 	andpl	r1, r1, #0, 12
    1784:	16007402 	strne	r7, [r0], -r2, lsl #8
    1788:	76025301 	strvc	r5, [r2], -r1, lsl #6
    178c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1790:	16300104 	ldrtne	r0, [r0], -r4, lsl #2
    1794:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    1798:	0216007b 	andseq	r0, r6, #123	; 0x7b
    179c:	9103107d 	tstls	r3, sp, ror r0
    17a0:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    17a4:	7502147d 	strvc	r1, [r2, #-1149]	; 0xfffffb83
    17a8:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    17ac:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    17b0:	000008ec 	andeq	r0, r0, ip, ror #17
    17b4:	01006c14 	tsteq	r0, r4, lsl ip
    17b8:	30160309 	andscc	r0, r6, r9, lsl #6
    17bc:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    17c0:	3500000e 	strcc	r0, [r0, #-14]
    17c4:	2100000e 	tstcs	r0, lr
    17c8:	1000193e 	andne	r1, r0, lr, lsr r9
    17cc:	000008ab 	andeq	r0, r0, fp, lsr #17
    17d0:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    17d4:	01160078 	tsteq	r6, r8, ror r0
    17d8:	00740252 	rsbseq	r0, r4, r2, asr r2
    17dc:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    17e0:	21000076 	tstcs	r0, r6, ror r0
    17e4:	10001956 	andne	r1, r0, r6, asr r9
    17e8:	000008cd 	andeq	r0, r0, sp, asr #17
    17ec:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    17f0:	01162008 	tsteq	r6, r8
    17f4:	00780251 	rsbseq	r0, r8, r1, asr r2
    17f8:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    17fc:	01167f7a 	tsteq	r6, sl, ror pc
    1800:	00760253 	rsbseq	r0, r6, r3, asr r2
    1804:	19822200 	stmibne	r2, {r9, sp}
    1808:	01161000 	tsteq	r6, r0
    180c:	20080250 	andcs	r0, r8, r0, asr r2
    1810:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1814:	01160078 	tsteq	r6, r8, ror r0
    1818:	7f750252 	svcvc	0x00750252
    181c:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1820:	00000076 	andeq	r0, r0, r6, ror r0
    1824:	0019921d 	andseq	r9, r9, sp, lsl r2
    1828:	001a5c10 	andseq	r5, sl, r0, lsl ip
    182c:	0009b110 	andeq	fp, r9, r0, lsl r1
    1830:	00701400 	rsbseq	r1, r0, r0, lsl #8
    1834:	15031d01 	strne	r1, [r3, #-3329]	; 0xfffff2ff
    1838:	0000024c 	andeq	r0, r0, ip, asr #4
    183c:	00000ec5 	andeq	r0, r0, r5, asr #29
    1840:	00000ec1 	andeq	r0, r0, r1, asr #29
    1844:	01006c14 	tsteq	r0, r4, lsl ip
    1848:	3016031e 	andscc	r0, r6, lr, lsl r3
    184c:	f9000000 			; <UNDEFINED> instruction: 0xf9000000
    1850:	e300000e 	movw	r0, #14
    1854:	2300000e 	movwcs	r0, #14
    1858:	00001964 	andeq	r1, r0, r4, ror #18
    185c:	100019aa 	andne	r1, r0, sl, lsr #19
    1860:	100019c0 	andne	r1, r0, r0, asr #19
    1864:	1a031e01 	bne	c9070 <__HEAP_SIZE+0xc8070>
    1868:	00000954 	andeq	r0, r0, r4, asr r9
    186c:	00198224 	andseq	r8, r9, r4, lsr #4
    1870:	000f8200 	andeq	r8, pc, r0, lsl #4
    1874:	000f7c00 	andeq	r7, pc, r0, lsl #24
    1878:	19762500 	ldmdbne	r6!, {r8, sl, sp}^
    187c:	8e260000 	cdphi	0, 2, cr0, cr6, cr0, {0}
    1880:	ad000019 	stcge	0, cr0, [r0, #-100]	; 0xffffff9c
    1884:	ab00000f 	blge	18c8 <__HEAP_SIZE+0x8c8>
    1888:	0000000f 	andeq	r0, r0, pc
    188c:	0019f821 	andseq	pc, r9, r1, lsr #16
    1890:	00097610 	andeq	r7, r9, r0, lsl r6
    1894:	50011600 	andpl	r1, r1, r0, lsl #12
    1898:	16200802 	strtne	r0, [r0], -r2, lsl #16
    189c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    18a0:	52011600 	andpl	r1, r1, #0, 12
    18a4:	167f7902 	ldrbtne	r7, [pc], -r2, lsl #18
    18a8:	76025301 	strvc	r5, [r2], -r1, lsl #6
    18ac:	1a210000 	bne	8418b4 <__RAM_SIZE+0x7418b4>
    18b0:	9210001a 	andsls	r0, r0, #26
    18b4:	16000009 	strne	r0, [r0], -r9
    18b8:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    18bc:	52011600 	andpl	r1, r1, #0, 12
    18c0:	167f7502 	ldrbtne	r7, [pc], -r2, lsl #10
    18c4:	7b025301 	blvc	964d0 <__HEAP_SIZE+0x954d0>
    18c8:	4c220000 	stcmi	0, cr0, [r2], #-0
    18cc:	1610001a 			; <UNDEFINED> instruction: 0x1610001a
    18d0:	08025001 	stmdaeq	r2, {r0, ip, lr}
    18d4:	51011620 	tstpl	r1, r0, lsr #12
    18d8:	16007802 	strne	r7, [r0], -r2, lsl #16
    18dc:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    18e0:	5301167f 	movwpl	r1, #5759	; 0x167f
    18e4:	00007602 	andeq	r7, r0, r2, lsl #12
    18e8:	1a5c1d00 	bne	1708cf0 <__RAM_SIZE+0x1608cf0>
    18ec:	1a921000 	bne	fe4858f4 <__StackTop+0xc63858f4>
    18f0:	0a161000 	beq	5858f8 <__RAM_SIZE+0x4858f8>
    18f4:	821c0000 	andshi	r0, ip, #0
    18f8:	01000006 	tsteq	r0, r6
    18fc:	8414033a 	ldrhi	r0, [r4], #-826	; 0xfffffcc6
    1900:	c200000b 	andgt	r0, r0, #11
    1904:	c000000f 	andgt	r0, r0, pc
    1908:	1500000f 	strne	r0, [r0, #-15]
    190c:	10001a88 	andne	r1, r0, r8, lsl #21
    1910:	0000150f 	andeq	r1, r0, pc, lsl #10
    1914:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1918:	01160077 	tsteq	r6, r7, ror r0
    191c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1920:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1924:	01160074 	tsteq	r6, r4, ror r0
    1928:	00760253 	rsbseq	r0, r6, r3, asr r2
    192c:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    1930:	02163001 	andseq	r3, r6, #1
    1934:	4001087d 	andmi	r0, r1, sp, ror r8
    1938:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    193c:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1940:	01107d02 	tsteq	r0, r2, lsl #26
    1944:	7d021638 	stcvc	6, cr1, [r2, #-224]	; 0xffffff20
    1948:	00750214 	rsbseq	r0, r5, r4, lsl r2
    194c:	46270000 	strtmi	r0, [r7], -r0
    1950:	c0000019 	andgt	r0, r0, r9, lsl r0
    1954:	03100014 	tsteq	r0, #20
    1958:	0014c000 	andseq	ip, r4, r0
    195c:	0014c610 	andseq	ip, r4, r0, lsl r6
    1960:	02680110 	rsbeq	r0, r8, #16, 2
    1964:	000a3f09 	andeq	r3, sl, r9, lsl #30
    1968:	19582400 	ldmdbne	r8, {sl, sp}^
    196c:	0fd80000 	svceq	0x00d80000
    1970:	0fd60000 	svceq	0x00d60000
    1974:	27000000 	strcs	r0, [r0, -r0]
    1978:	00001946 	andeq	r1, r0, r6, asr #18
    197c:	10001566 	andne	r1, r0, r6, ror #10
    1980:	15660000 	strbne	r0, [r6, #-0]!
    1984:	156c1000 	strbne	r1, [ip, #-0]!
    1988:	7c011000 	stcvc	0, cr1, [r1], {-0}
    198c:	0a680b02 	beq	1a0459c <__RAM_SIZE+0x190459c>
    1990:	58240000 	stmdapl	r4!, {}	; <UNPREDICTABLE>
    1994:	ed000019 	stc	0, cr0, [r0, #-100]	; 0xffffff9c
    1998:	eb00000f 	bl	19dc <__HEAP_SIZE+0x9dc>
    199c:	0000000f 	andeq	r0, r0, pc
    19a0:	00148e28 	andseq	r8, r4, r8, lsr #28
    19a4:	00770210 	rsbseq	r0, r7, r0, lsl r2
    19a8:	00000a87 	andeq	r0, r0, r7, lsl #21
    19ac:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    19b0:	01160078 	tsteq	r6, r8, ror r0
    19b4:	00740252 	rsbseq	r0, r4, r2, asr r2
    19b8:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    19bc:	20000076 	andcs	r0, r0, r6, ror r0
    19c0:	10001538 	andne	r1, r0, r8, lsr r5
    19c4:	000018d8 	ldrdeq	r1, [r0], -r8
    19c8:	00000a9b 	muleq	r0, fp, sl
    19cc:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    19d0:	20005491 	mulcs	r0, r1, r4
    19d4:	10001580 	andne	r1, r0, r0, lsl #11
    19d8:	000018d8 	ldrdeq	r1, [r0], -r8
    19dc:	00000aaf 	andeq	r0, r0, pc, lsr #21
    19e0:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    19e4:	20005491 	mulcs	r0, r1, r4
    19e8:	100018c2 	andne	r1, r0, r2, asr #17
    19ec:	00000fa8 	andeq	r0, r0, r8, lsr #31
    19f0:	00000aeb 	andeq	r0, r0, fp, ror #21
    19f4:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    19f8:	01160077 	tsteq	r6, r7, ror r0
    19fc:	00780251 	rsbseq	r0, r8, r1, asr r2
    1a00:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1a04:	01160074 	tsteq	r6, r4, ror r0
    1a08:	00760253 	rsbseq	r0, r6, r3, asr r2
    1a0c:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1a10:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1a14:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1a18:	16064891 			; <UNDEFINED> instruction: 0x16064891
    1a1c:	02107d02 	andseq	r7, r0, #2, 26	; 0x80
    1a20:	20000075 	andcs	r0, r0, r5, ror r0
    1a24:	10001916 	andne	r1, r0, r6, lsl r9
    1a28:	00000b89 	andeq	r0, r0, r9, lsl #23
    1a2c:	00000b27 	andeq	r0, r0, r7, lsr #22
    1a30:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1a34:	01160077 	tsteq	r6, r7, ror r0
    1a38:	00780251 	rsbseq	r0, r8, r1, asr r2
    1a3c:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1a40:	01160074 	tsteq	r6, r4, ror r0
    1a44:	00760253 	rsbseq	r0, r6, r3, asr r2
    1a48:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1a4c:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1a50:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1a54:	16064891 			; <UNDEFINED> instruction: 0x16064891
    1a58:	02107d02 	andseq	r7, r0, #2, 26	; 0x80
    1a5c:	21000075 	tstcs	r0, r5, ror r0
    1a60:	10001a9e 	mulne	r0, lr, sl
    1a64:	00000b49 	andeq	r0, r0, r9, asr #22
    1a68:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1a6c:	01162508 	tsteq	r6, r8, lsl #10
    1a70:	00780251 	rsbseq	r0, r8, r1, asr r2
    1a74:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1a78:	01160074 	tsteq	r6, r4, ror r0
    1a7c:	00760253 	rsbseq	r0, r6, r3, asr r2
    1a80:	1ab22100 	bne	fec89e88 <__StackTop+0xc6b89e88>
    1a84:	0b651000 	bleq	1945a8c <__RAM_SIZE+0x1845a8c>
    1a88:	01160000 	tsteq	r6, r0
    1a8c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1a90:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1a94:	01160074 	tsteq	r6, r4, ror r0
    1a98:	00760253 	rsbseq	r0, r6, r3, asr r2
    1a9c:	1ad22200 	bne	ff48a2a4 <__StackTop+0xc738a2a4>
    1aa0:	01161000 	tsteq	r6, r0
    1aa4:	16300150 			; <UNDEFINED> instruction: 0x16300150
    1aa8:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1aac:	53011600 	movwpl	r1, #5632	; 0x1600
    1ab0:	00007602 	andeq	r7, r0, r2, lsl #12
    1ab4:	02010200 	andeq	r0, r1, #0, 4
    1ab8:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
    1abc:	000b7d03 	andeq	r7, fp, r3, lsl #26
    1ac0:	047c1a00 	ldrbteq	r1, [ip], #-2560	; 0xfffff600
    1ac4:	d3010000 	movwle	r0, #4096	; 0x1000
    1ac8:	ee010f01 	cdp	15, 0, cr0, cr1, cr1, {0}
    1acc:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    1ad0:	c210000c 	andsgt	r0, r0, #12
    1ad4:	00100010 	andseq	r0, r0, r0, lsl r0
    1ad8:	01000010 	tsteq	r0, r0, lsl r0
    1adc:	00000fa3 	andeq	r0, r0, r3, lsr #31
    1ae0:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
    1ae4:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1ae8:	00010622 	andeq	r0, r1, r2, lsr #12
    1aec:	00106200 	andseq	r6, r0, r0, lsl #4
    1af0:	00105e00 	andseq	r5, r0, r0, lsl #28
    1af4:	04ac1700 	strteq	r1, [ip], #1792	; 0x700
    1af8:	d3010000 	movwle	r0, #4096	; 0x1000
    1afc:	02ee2d01 	rsceq	r2, lr, #1, 26	; 0x40
    1b00:	10840000 	addne	r0, r4, r0
    1b04:	10800000 	addne	r0, r0, r0
    1b08:	690f0000 	stmdbvs	pc, {}	; <UNPREDICTABLE>
    1b0c:	01007864 	tsteq	r0, r4, ror #16
    1b10:	ee3c01d3 	mrc	1, 1, r0, cr12, cr3, {6}
    1b14:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    1b18:	a2000010 	andge	r0, r0, #16
    1b1c:	17000010 	smladne	r0, r0, r0, r0
    1b20:	00000591 	muleq	r0, r1, r5
    1b24:	4801d301 	stmdami	r1, {r0, r8, r9, ip, lr, pc}
    1b28:	000000ee 	andeq	r0, r0, lr, ror #1
    1b2c:	0000113d 	andeq	r1, r0, sp, lsr r1
    1b30:	00001139 	andeq	r1, r0, r9, lsr r1
    1b34:	0000c117 	andeq	ip, r0, r7, lsl r1
    1b38:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1b3c:	00002957 	andeq	r2, r0, r7, asr r9
    1b40:	00116700 	andseq	r6, r1, r0, lsl #14
    1b44:	00115b00 	andseq	r5, r1, r0, lsl #22
    1b48:	06481700 	strbeq	r1, [r8], -r0, lsl #14
    1b4c:	d3010000 	movwle	r0, #4096	; 0x1000
    1b50:	00306b01 	eorseq	r6, r0, r1, lsl #22
    1b54:	11c60000 	bicne	r0, r6, r0
    1b58:	11ba0000 			; <UNDEFINED> instruction: 0x11ba0000
    1b5c:	4e170000 	cdpmi	0, 1, cr0, cr7, cr0, {0}
    1b60:	01000006 	tsteq	r0, r6
    1b64:	307e01d3 	ldrsbtcc	r0, [lr], #-19	; 0xffffffed
    1b68:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
    1b6c:	14000012 	strne	r0, [r0], #-18	; 0xffffffee
    1b70:	17000012 	smladne	r0, r2, r0, r0
    1b74:	0000057c 	andeq	r0, r0, ip, ror r5
    1b78:	9201d301 	andls	sp, r1, #67108864	; 0x4000000
    1b7c:	00000030 	andeq	r0, r0, r0, lsr r0
    1b80:	00001240 	andeq	r1, r0, r0, asr #4
    1b84:	00001238 	andeq	r1, r0, r8, lsr r2
    1b88:	0004e31c 	andeq	lr, r4, ip, lsl r3
    1b8c:	01db0100 	bicseq	r0, fp, r0, lsl #2
    1b90:	000b840e 	andeq	r8, fp, lr, lsl #8
    1b94:	00127b00 	andseq	r7, r2, r0, lsl #22
    1b98:	00127700 	andseq	r7, r2, r0, lsl #14
    1b9c:	01082900 	tsteq	r8, r0, lsl #18
    1ba0:	860301e7 	strhi	r0, [r3], -r7, ror #3
    1ba4:	2a00000c 	bcs	1bdc <__HEAP_SIZE+0xbdc>
    1ba8:	e8010055 	stmda	r1, {r0, r2, r4, r6}
    1bac:	00a20e01 	adceq	r0, r2, r1, lsl #28
    1bb0:	462a0000 	strtmi	r0, [sl], -r0
    1bb4:	01e90100 	mvneq	r0, r0, lsl #2
    1bb8:	0000290e 	andeq	r2, r0, lr, lsl #18
    1bbc:	d61c0000 	ldrle	r0, [ip], -r0
    1bc0:	01000005 	tsteq	r0, r5
    1bc4:	650501ea 	strvs	r0, [r5, #-490]	; 0xfffffe16
    1bc8:	bf00000c 	svclt	0x0000000c
    1bcc:	bb000012 	bllt	1c1c <__HEAP_SIZE+0xc1c>
    1bd0:	1c000012 	stcne	0, cr0, [r0], {18}
    1bd4:	0000043e 	andeq	r0, r0, lr, lsr r4
    1bd8:	0701ed01 	streq	lr, [r1, -r1, lsl #26]
    1bdc:	00000085 	andeq	r0, r0, r5, lsl #1
    1be0:	000012f7 	strdeq	r1, [r0], -r7
    1be4:	000012eb 	andeq	r1, r0, fp, ror #5
    1be8:	0004501c 	andeq	r5, r4, ip, lsl r0
    1bec:	01f00100 	mvnseq	r0, r0, lsl #2
    1bf0:	00008507 	andeq	r8, r0, r7, lsl #10
    1bf4:	00135400 	andseq	r5, r3, r0, lsl #8
    1bf8:	00134a00 	andseq	r4, r3, r0, lsl #20
    1bfc:	007a1400 	rsbseq	r1, sl, r0, lsl #8
    1c00:	1001f301 	andne	pc, r1, r1, lsl #6
    1c04:	00000fa3 	andeq	r0, r0, r3, lsr #31
    1c08:	00001396 	muleq	r0, r6, r3
    1c0c:	00001394 	muleq	r0, r4, r3
    1c10:	00327a14 	eorseq	r7, r2, r4, lsl sl
    1c14:	1001f401 	andne	pc, r1, r1, lsl #8
    1c18:	00000fa3 	andeq	r0, r0, r3, lsr #31
    1c1c:	000013b4 			; <UNDEFINED> instruction: 0x000013b4
    1c20:	000013ae 	andeq	r1, r0, lr, lsr #7
    1c24:	0004661c 	andeq	r6, r4, ip, lsl r6
    1c28:	01ff0100 	mvnseq	r0, r0, lsl #2
    1c2c:	00003010 	andeq	r3, r0, r0, lsl r0
    1c30:	0013f200 	andseq	pc, r3, r0, lsl #4
    1c34:	0013e600 	andseq	lr, r3, r0, lsl #12
    1c38:	064d1c00 	strbeq	r1, [sp], -r0, lsl #24
    1c3c:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    1c40:	00301002 	eorseq	r1, r0, r2
    1c44:	14490000 	strbne	r0, [r9], #-0
    1c48:	143f0000 	ldrtne	r0, [pc], #-0	; 1c50 <__HEAP_SIZE+0xc50>
    1c4c:	cf1c0000 	svcgt	0x001c0000
    1c50:	01000004 	tsteq	r0, r4
    1c54:	fa10022c 	blx	40250c <__RAM_SIZE+0x30250c>
    1c58:	8b000000 	blhi	1c60 <__HEAP_SIZE+0xc60>
    1c5c:	89000014 	stmdbhi	r0, {r2, r4}
    1c60:	2b000014 	blcs	1cb8 <__HEAP_SIZE+0xcb8>
    1c64:	10000cf6 	strdne	r0, [r0], -r6
    1c68:	00001b1c 	andeq	r1, r0, ip, lsl fp
    1c6c:	000d0a2b 	andeq	r0, sp, fp, lsr #20
    1c70:	001b2710 	andseq	r2, fp, r0, lsl r7
    1c74:	0d202b00 	vstmdbeq	r0!, {d2-d1}
    1c78:	1b321000 	blne	c85c80 <__RAM_SIZE+0xb85c80>
    1c7c:	322b0000 	eorcc	r0, fp, #0
    1c80:	3210000d 	andscc	r0, r0, #13
    1c84:	2b00001b 	blcs	1cf8 <__HEAP_SIZE+0xcf8>
    1c88:	10000d6e 	andne	r0, r0, lr, ror #26
    1c8c:	00001b3d 	andeq	r1, r0, sp, lsr fp
    1c90:	000d782b 	andeq	r7, sp, fp, lsr #16
    1c94:	001b4810 	andseq	r4, fp, r0, lsl r8
    1c98:	0d822b00 	vstreq	d2, [r2]
    1c9c:	1b531000 	blne	14c5ca4 <__RAM_SIZE+0x13c5ca4>
    1ca0:	922b0000 	eorls	r0, fp, #0
    1ca4:	5e10000d 	cdppl	0, 1, cr0, cr0, cr13, {0}
    1ca8:	2b00001b 	blcs	1d1c <__HEAP_SIZE+0xd1c>
    1cac:	10000d9c 	mulne	r0, ip, sp
    1cb0:	00001b48 	andeq	r1, r0, r8, asr #22
    1cb4:	000da82b 	andeq	sl, sp, fp, lsr #16
    1cb8:	001b5310 	andseq	r5, fp, r0, lsl r3
    1cbc:	0dac2b00 			; <UNDEFINED> instruction: 0x0dac2b00
    1cc0:	1b691000 	blne	1a45cc8 <__RAM_SIZE+0x1945cc8>
    1cc4:	b22b0000 	eorlt	r0, fp, #0
    1cc8:	3d10000d 	ldccc	0, cr0, [r0, #-52]	; 0xffffffcc
    1ccc:	2b00001b 	blcs	1d40 <__HEAP_SIZE+0xd40>
    1cd0:	10000dc0 	andne	r0, r0, r0, asr #27
    1cd4:	00001b48 	andeq	r1, r0, r8, asr #22
    1cd8:	000dc82b 	andeq	ip, sp, fp, lsr #16
    1cdc:	001b5310 	andseq	r5, fp, r0, lsl r3
    1ce0:	0dcc2b00 	vstreq	d18, [ip]
    1ce4:	1b691000 	blne	1a45cec <__RAM_SIZE+0x1945cec>
    1ce8:	dc2b0000 	stcle	0, cr0, [fp], #-0
    1cec:	4810000d 	ldmdami	r0, {r0, r2, r3}
    1cf0:	2b00001b 	blcs	1d64 <__HEAP_SIZE+0xd64>
    1cf4:	10000de6 	andne	r0, r0, r6, ror #27
    1cf8:	00001b3d 	andeq	r1, r0, sp, lsr fp
    1cfc:	000df02b 	andeq	pc, sp, fp, lsr #32
    1d00:	001b4810 	andseq	r4, fp, r0, lsl r8
    1d04:	0dfc2b00 			; <UNDEFINED> instruction: 0x0dfc2b00
    1d08:	1b5e1000 	blne	1785d10 <__RAM_SIZE+0x1685d10>
    1d0c:	082b0000 	stmdaeq	fp!, {}	; <UNPREDICTABLE>
    1d10:	4810000e 	ldmdami	r0, {r1, r2, r3}
    1d14:	2b00001b 	blcs	1d88 <__HEAP_SIZE+0xd88>
    1d18:	10000e2c 	andne	r0, r0, ip, lsr #28
    1d1c:	00001b53 	andeq	r1, r0, r3, asr fp
    1d20:	000e3e2b 	andeq	r3, lr, fp, lsr #28
    1d24:	001b5e10 	andseq	r5, fp, r0, lsl lr
    1d28:	0e4e2b00 	vmlaeq.f64	d18, d14, d0
    1d2c:	1b741000 	blne	1d05d34 <__RAM_SIZE+0x1c05d34>
    1d30:	562b0000 	strtpl	r0, [fp], -r0
    1d34:	5310000e 	tstpl	r0, #14
    1d38:	2b00001b 	blcs	1dac <__HEAP_SIZE+0xdac>
    1d3c:	10000e62 	andne	r0, r0, r2, ror #28
    1d40:	00001b74 	andeq	r1, r0, r4, ror fp
    1d44:	000e6a2b 	andeq	r6, lr, fp, lsr #20
    1d48:	001b5310 	andseq	r5, fp, r0, lsl r3
    1d4c:	0e762b00 	vaddeq.f64	d18, d6, d0
    1d50:	1b741000 	blne	1d05d58 <__RAM_SIZE+0x1c05d58>
    1d54:	822b0000 	eorhi	r0, fp, #0
    1d58:	5310000e 	tstpl	r0, #14
    1d5c:	2b00001b 	blcs	1dd0 <__HEAP_SIZE+0xdd0>
    1d60:	10000e8e 	andne	r0, r0, lr, lsl #29
    1d64:	00001b74 	andeq	r1, r0, r4, ror fp
    1d68:	000e962b 	andeq	r9, lr, fp, lsr #12
    1d6c:	001b5310 	andseq	r5, fp, r0, lsl r3
    1d70:	0e9e2b00 	vfnmseq.f64	d2, d14, d0
    1d74:	1b481000 	blne	1205d7c <__RAM_SIZE+0x1105d7c>
    1d78:	ae2b0000 	cdpge	0, 2, cr0, cr11, cr0, {0}
    1d7c:	2710000e 	ldrcs	r0, [r0, -lr]
    1d80:	2b00001b 	blcs	1df4 <__HEAP_SIZE+0xdf4>
    1d84:	10000ebe 			; <UNDEFINED> instruction: 0x10000ebe
    1d88:	00001b74 	andeq	r1, r0, r4, ror fp
    1d8c:	000ee62b 	andeq	lr, lr, fp, lsr #12
    1d90:	001b7f10 	andseq	r7, fp, r0, lsl pc
    1d94:	0ef82b00 	vmoveq.f64	d18, #128	; 0xc0000000 -2.0
    1d98:	1b321000 	blne	c85da0 <__RAM_SIZE+0xb85da0>
    1d9c:	2a200000 	bcs	801da4 <__RAM_SIZE+0x701da4>
    1da0:	a810000f 	ldmdage	r0, {r0, r1, r2, r3}
    1da4:	ae00000f 	cdpge	0, 0, cr0, cr0, cr15, {0}
    1da8:	1600000e 	strne	r0, [r0], -lr
    1dac:	7a025001 	bvc	95db8 <__HEAP_SIZE+0x94db8>
    1db0:	51011600 	tstpl	r1, r0, lsl #12
    1db4:	16007402 	strne	r7, [r0], -r2, lsl #8
    1db8:	7b025201 	blvc	965c4 <__HEAP_SIZE+0x955c4>
    1dbc:	53011600 	movwpl	r1, #5632	; 0x1600
    1dc0:	16007502 	strne	r7, [r0], -r2, lsl #10
    1dc4:	05007d02 	streq	r7, [r0, #-3330]	; 0xfffff2fe
    1dc8:	08f60091 	ldmeq	r6!, {r0, r4, r7}^
    1dcc:	7d021629 	stcvc	6, cr1, [r2, #-164]	; 0xffffff5c
    1dd0:	08910308 	ldmeq	r1, {r3, r8, r9}
    1dd4:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1dd8:	0c91030c 	ldceq	3, cr0, [r1], {12}
    1ddc:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1de0:	10910310 	addsne	r0, r1, r0, lsl r3
    1de4:	042b0006 	strteq	r0, [fp], #-6
    1de8:	74100010 	ldrvc	r0, [r0], #-16
    1dec:	2b00001b 	blcs	1e60 <__HEAP_SIZE+0xe60>
    1df0:	10001014 	andne	r1, r0, r4, lsl r0
    1df4:	00001b32 	andeq	r1, r0, r2, lsr fp
    1df8:	00103c20 	andseq	r3, r0, r0, lsr #24
    1dfc:	000fa810 	andeq	sl, pc, r0, lsl r8	; <UNPREDICTABLE>
    1e00:	000f0c00 	andeq	r0, pc, r0, lsl #24
    1e04:	50011600 	andpl	r1, r1, r0, lsl #12
    1e08:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1e0c:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    1e10:	52011600 	andpl	r1, r1, #0, 12
    1e14:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1e18:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    1e1c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1e20:	a8910600 	ldmge	r1, {r9, sl}
    1e24:	2908f67f 	stmdbcs	r8, {r0, r1, r2, r3, r4, r5, r6, r9, sl, ip, sp, lr, pc}
    1e28:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1e2c:	06089103 	streq	r9, [r8], -r3, lsl #2
    1e30:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1e34:	16007802 	strne	r7, [r0], -r2, lsl #16
    1e38:	07107d02 	ldreq	r7, [r0, -r2, lsl #26]
    1e3c:	0b061091 	bleq	186088 <__RAM_SIZE+0x86088>
    1e40:	001af7ff 			; <UNDEFINED> instruction: 0x001af7ff
    1e44:	00105c21 	andseq	r5, r0, r1, lsr #24
    1e48:	000f2810 	andeq	r2, pc, r0, lsl r8	; <UNPREDICTABLE>
    1e4c:	51011600 	tstpl	r1, r0, lsl #12
    1e50:	16007402 	strne	r7, [r0], -r2, lsl #8
    1e54:	78025201 	stmdavc	r2, {r0, r9, ip, lr}
    1e58:	5301167f 	movwpl	r1, #5759	; 0x167f
    1e5c:	00007502 	andeq	r7, r0, r2, lsl #10
    1e60:	00108620 	andseq	r8, r0, r0, lsr #12
    1e64:	00150f10 	andseq	r0, r5, r0, lsl pc
    1e68:	000f8400 	andeq	r8, pc, r0, lsl #8
    1e6c:	50011600 	andpl	r1, r1, r0, lsl #12
    1e70:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1e74:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    1e78:	52011600 	andpl	r1, r1, #0, 12
    1e7c:	16007802 	strne	r7, [r0], -r2, lsl #16
    1e80:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    1e84:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1e88:	00760c00 	rsbseq	r0, r6, r0, lsl #24
    1e8c:	0076264f 	rsbseq	r2, r6, pc, asr #12
    1e90:	4f007627 	svcmi	0x00007627
    1e94:	02161c26 	andseq	r1, r6, #9728	; 0x2600
    1e98:	7604047d 			; <UNDEFINED> instruction: 0x7604047d
    1e9c:	16254f00 	strtne	r4, [r5], -r0, lsl #30
    1ea0:	01087d02 	tsteq	r8, r2, lsl #26
    1ea4:	7d02163a 	stcvc	6, cr1, [r2, #-232]	; 0xffffff18
    1ea8:	b091040c 	addslt	r0, r1, ip, lsl #8
    1eac:	0216067f 	andseq	r0, r6, #133169152	; 0x7f00000
    1eb0:	7702107d 	smlsdxvc	r2, sp, r0, r1
    1eb4:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1eb8:	00350114 	eorseq	r0, r5, r4, lsl r1
    1ebc:	0010b422 	andseq	fp, r0, r2, lsr #8
    1ec0:	50011610 	andpl	r1, r1, r0, lsl r6
    1ec4:	16200802 	strtne	r0, [r0], -r2, lsl #16
    1ec8:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    1ecc:	52011600 	andpl	r1, r1, #0, 12
    1ed0:	167f7602 	ldrbtne	r7, [pc], -r2, lsl #12
    1ed4:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    1ed8:	03000000 	movweq	r0, #0
    1edc:	00000029 	andeq	r0, r0, r9, lsr #32
    1ee0:	0005251a 	andeq	r2, r5, sl, lsl r5
    1ee4:	01530100 	cmpeq	r3, r0, lsl #2
    1ee8:	00ee010f 	rsceq	r0, lr, pc, lsl #2
    1eec:	10c80000 	sbcne	r0, r8, r0
    1ef0:	145e1000 	ldrbne	r1, [lr], #-0
    1ef4:	149e1000 	ldrne	r1, [lr], #0
    1ef8:	57010000 	strpl	r0, [r1, -r0]
    1efc:	0f000013 	svceq	0x00000013
    1f00:	0074756f 	rsbseq	r7, r4, pc, ror #10
    1f04:	22015301 	andcs	r5, r1, #67108864	; 0x4000000
    1f08:	00000106 	andeq	r0, r0, r6, lsl #2
    1f0c:	00001500 	andeq	r1, r0, r0, lsl #10
    1f10:	000014fc 	strdeq	r1, [r0], -ip
    1f14:	0004ac17 	andeq	sl, r4, r7, lsl ip
    1f18:	01530100 	cmpeq	r3, r0, lsl #2
    1f1c:	0002ee2d 	andeq	lr, r2, sp, lsr #28
    1f20:	00152400 	andseq	r2, r5, r0, lsl #8
    1f24:	00152000 	andseq	r2, r5, r0
    1f28:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    1f2c:	53010078 	movwpl	r0, #4216	; 0x1078
    1f30:	00ee3c01 	rsceq	r3, lr, r1, lsl #24
    1f34:	15480000 	strbne	r0, [r8, #-0]
    1f38:	15440000 	strbne	r0, [r4, #-0]
    1f3c:	91170000 	tstls	r7, r0
    1f40:	01000005 	tsteq	r0, r5
    1f44:	ee480153 	mcr	1, 2, r0, cr8, cr3, {2}
    1f48:	6a000000 	bvs	1f50 <__HEAP_SIZE+0xf50>
    1f4c:	66000015 			; <UNDEFINED> instruction: 0x66000015
    1f50:	17000015 	smladne	r0, r5, r0, r0
    1f54:	000000c1 	andeq	r0, r0, r1, asr #1
    1f58:	57015301 	strpl	r5, [r1, -r1, lsl #6]
    1f5c:	00000029 	andeq	r0, r0, r9, lsr #32
    1f60:	00001592 	muleq	r0, r2, r5
    1f64:	00001588 	andeq	r1, r0, r8, lsl #11
    1f68:	00064817 	andeq	r4, r6, r7, lsl r8
    1f6c:	01530100 	cmpeq	r3, r0, lsl #2
    1f70:	0000306b 	andeq	r3, r0, fp, rrx
    1f74:	0015ea00 	andseq	lr, r5, r0, lsl #20
    1f78:	0015e200 	andseq	lr, r5, r0, lsl #4
    1f7c:	064e1700 	strbeq	r1, [lr], -r0, lsl #14
    1f80:	53010000 	movwpl	r0, #4096	; 0x1000
    1f84:	00307e01 	eorseq	r7, r0, r1, lsl #28
    1f88:	162a0000 	strtne	r0, [sl], -r0
    1f8c:	16200000 	strtne	r0, [r0], -r0
    1f90:	7c170000 	ldcvc	0, cr0, [r7], {-0}
    1f94:	01000005 	tsteq	r0, r5
    1f98:	30920153 	addscc	r0, r2, r3, asr r1
    1f9c:	70000000 	andvc	r0, r0, r0
    1fa0:	6c000016 	stcvs	0, cr0, [r0], {22}
    1fa4:	12000016 	andne	r0, r0, #22
    1fa8:	00667562 	rsbeq	r7, r6, r2, ror #10
    1fac:	08015501 	stmdaeq	r1, {r0, r8, sl, ip, lr}
    1fb0:	00001357 	andeq	r1, r0, r7, asr r3
    1fb4:	7fb09103 	svcvc	0x00b09103
    1fb8:	6e656c14 	mcrvs	12, 3, r6, cr5, cr4, {0}
    1fbc:	01560100 	cmpeq	r6, r0, lsl #2
    1fc0:	0000ee0a 	andeq	lr, r0, sl, lsl #28
    1fc4:	0016be00 	andseq	fp, r6, r0, lsl #28
    1fc8:	00169000 	andseq	r9, r6, r0
    1fcc:	06921c00 	ldreq	r1, [r2], r0, lsl #24
    1fd0:	57010000 	strpl	r0, [r1, -r0]
    1fd4:	00290a01 	eoreq	r0, r9, r1, lsl #20
    1fd8:	17dd0000 	ldrbne	r0, [sp, r0]
    1fdc:	17d30000 	ldrbne	r0, [r3, r0]
    1fe0:	38130000 	ldmdacc	r3, {}	; <UNPREDICTABLE>
    1fe4:	01000004 	tsteq	r0, r4
    1fe8:	7717015a 			; <UNDEFINED> instruction: 0x7717015a
    1fec:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    1ff0:	003ec803 	eorseq	ip, lr, r3, lsl #16
    1ff4:	04e31c10 	strbteq	r1, [r3], #3088	; 0xc10
    1ff8:	6f010000 	svcvs	0x00010000
    1ffc:	0b7d0801 	bleq	1f44008 <__RAM_SIZE+0x1e44008>
    2000:	183f0000 	ldmdane	pc!, {}	; <UNPREDICTABLE>
    2004:	18330000 	ldmdane	r3!, {}	; <UNPREDICTABLE>
    2008:	941c0000 	ldrls	r0, [ip], #-0
    200c:	01000004 	tsteq	r0, r4
    2010:	8507017f 	strhi	r0, [r7, #-383]	; 0xfffffe81
    2014:	9c000000 	stcls	0, cr0, [r0], {-0}
    2018:	92000018 	andls	r0, r0, #24
    201c:	14000018 	strne	r0, [r0], #-24	; 0xffffffe8
    2020:	00706d74 	rsbseq	r6, r0, r4, ror sp
    2024:	0a018001 	beq	62030 <__HEAP_SIZE+0x61030>
    2028:	00000029 	andeq	r0, r0, r9, lsr #32
    202c:	000018df 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    2030:	000018db 	ldrdeq	r1, [r0], -fp
    2034:	0004b31c 	andeq	fp, r4, ip, lsl r3
    2038:	01810100 	orreq	r0, r1, r0, lsl #2
    203c:	00005f11 	andeq	r5, r0, r1, lsl pc
    2040:	00191000 	andseq	r1, r9, r0
    2044:	00190400 	andseq	r0, r9, r0, lsl #8
    2048:	12e21d00 	rscne	r1, r2, #0, 26
    204c:	13421000 	movtne	r1, #8192	; 0x2000
    2050:	11341000 	teqne	r4, r0
    2054:	8a1c0000 	bhi	70205c <__RAM_SIZE+0x60205c>
    2058:	01000003 	tsteq	r0, r3
    205c:	3012019c 	mulscc	r2, ip, r1
    2060:	5f000000 	svcpl	0x00000000
    2064:	5b000019 	blpl	20d0 <__HEAP_SIZE+0x10d0>
    2068:	00000019 	andeq	r0, r0, r9, lsl r0
    206c:	0010ec2b 	andseq	lr, r0, fp, lsr #24
    2070:	001b1c10 	andseq	r1, fp, r0, lsl ip
    2074:	11002b00 	tstne	r0, r0, lsl #22
    2078:	1b321000 	blne	c86080 <__RAM_SIZE+0xb86080>
    207c:	122b0000 	eorne	r0, fp, #0
    2080:	27100011 			; <UNDEFINED> instruction: 0x27100011
    2084:	2b00001b 	blcs	20f8 <__HEAP_SIZE+0x10f8>
    2088:	10001124 	andne	r1, r0, r4, lsr #2
    208c:	00001b27 	andeq	r1, r0, r7, lsr #22
    2090:	0011362b 	andseq	r3, r1, fp, lsr #12
    2094:	001b3210 	andseq	r3, fp, r0, lsl r2
    2098:	11462b00 	cmpne	r6, r0, lsl #22
    209c:	1b321000 	blne	c860a4 <__RAM_SIZE+0xb860a4>
    20a0:	8e200000 	cdphi	0, 2, cr0, cr0, cr0, {0}
    20a4:	91100011 	tstls	r0, r1, lsl r0
    20a8:	b4000017 	strlt	r0, [r0], #-23	; 0xffffffe9
    20ac:	16000011 			; <UNDEFINED> instruction: 0x16000011
    20b0:	91045001 	tstls	r4, r1
    20b4:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    20b8:	91045101 	tstls	r4, r1, lsl #2
    20bc:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    20c0:	7a025201 	bvc	968cc <__HEAP_SIZE+0x958cc>
    20c4:	53011600 	movwpl	r1, #5632	; 0x1600
    20c8:	16007b02 	strne	r7, [r0], -r2, lsl #22
    20cc:	05007d02 	streq	r7, [r0, #-3330]	; 0xfffff2fe
    20d0:	003eb803 	eorseq	fp, lr, r3, lsl #16
    20d4:	7d021610 	stcvc	6, cr1, [r2, #-64]	; 0xffffffc0
    20d8:	16330104 	ldrtne	r0, [r3], -r4, lsl #2
    20dc:	03087d02 	movweq	r7, #36098	; 0x8d02
    20e0:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    20e4:	030c7d02 	movweq	r7, #52482	; 0xcd02
    20e8:	00061091 	muleq	r6, r1, r0
    20ec:	0011ac20 	andseq	sl, r1, r0, lsr #24
    20f0:	00179110 	andseq	r9, r7, r0, lsl r1
    20f4:	0011fe00 	andseq	pc, r1, r0, lsl #28
    20f8:	50011600 	andpl	r1, r1, r0, lsl #12
    20fc:	7f9c9104 	svcvc	0x009c9104
    2100:	51011606 	tstpl	r1, r6, lsl #12
    2104:	7fa89104 	svcvc	0x00a89104
    2108:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    210c:	16007a02 	strne	r7, [r0], -r2, lsl #20
    2110:	7b025301 	blvc	96d1c <__HEAP_SIZE+0x95d1c>
    2114:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2118:	bc030500 	cfstr32lt	mvfx0, [r3], {-0}
    211c:	1610003e 			; <UNDEFINED> instruction: 0x1610003e
    2120:	01047d02 	tsteq	r4, r2, lsl #26
    2124:	7d021634 	stcvc	6, cr1, [r2, #-208]	; 0xffffff30
    2128:	0c910308 	ldceq	3, cr0, [r1], {8}
    212c:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    2130:	1091030c 	addsne	r0, r1, ip, lsl #6
    2134:	d4200006 	strtle	r0, [r0], #-6
    2138:	91100011 	tstls	r0, r1, lsl r0
    213c:	38000017 	stmdacc	r0, {r0, r1, r2, r4}
    2140:	16000012 			; <UNDEFINED> instruction: 0x16000012
    2144:	91045001 	tstls	r4, r1
    2148:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    214c:	91045101 	tstls	r4, r1, lsl #2
    2150:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    2154:	7a025201 	bvc	96960 <__HEAP_SIZE+0x95960>
    2158:	53011600 	movwpl	r1, #5632	; 0x1600
    215c:	16007b02 	strne	r7, [r0], -r2, lsl #22
    2160:	03087d02 	movweq	r7, #36098	; 0x8d02
    2164:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    2168:	030c7d02 	movweq	r7, #52482	; 0xcd02
    216c:	00061091 	muleq	r6, r1, r0
    2170:	0011f820 	andseq	pc, r1, r0, lsr #16
    2174:	000b8910 	andeq	r8, fp, r0, lsl r9
    2178:	00128100 	andseq	r8, r2, r0, lsl #2
    217c:	50011600 	andpl	r1, r1, r0, lsl #12
    2180:	7f9c9104 	svcvc	0x009c9104
    2184:	51011606 	tstpl	r1, r6, lsl #12
    2188:	7fa89104 	svcvc	0x00a89104
    218c:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    2190:	16007a02 	strne	r7, [r0], -r2, lsl #20
    2194:	7b025301 	blvc	96da0 <__HEAP_SIZE+0x95da0>
    2198:	7d021600 	stcvc	6, cr1, [r2, #-0]
    219c:	08f50300 	ldmeq	r5!, {r8, r9}^
    21a0:	7d021629 	stcvc	6, cr1, [r2, #-164]	; 0xffffff5c
    21a4:	00750208 	rsbseq	r0, r5, r8, lsl #4
    21a8:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    21ac:	060c9103 	streq	r9, [ip], -r3, lsl #2
    21b0:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    21b4:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    21b8:	12062b00 	andne	r2, r6, #0, 22
    21bc:	1b5e1000 	blne	17861c4 <__RAM_SIZE+0x16861c4>
    21c0:	1c2b0000 	stcne	0, cr0, [fp], #-0
    21c4:	69100012 	ldmdbvs	r0, {r1, r4}
    21c8:	2b00001b 	blcs	223c <__HEAP_SIZE+0x123c>
    21cc:	10001222 	andne	r1, r0, r2, lsr #4
    21d0:	00001b3d 	andeq	r1, r0, sp, lsr fp
    21d4:	00122e2b 	andseq	r2, r2, fp, lsr #28
    21d8:	001b5e10 	andseq	r5, fp, r0, lsl lr
    21dc:	12402b00 	subne	r2, r0, #0, 22
    21e0:	1b481000 	blne	12061e8 <__RAM_SIZE+0x11061e8>
    21e4:	4c2b0000 	stcmi	0, cr0, [fp], #-0
    21e8:	8a100012 	bhi	402238 <__RAM_SIZE+0x302238>
    21ec:	2b00001b 	blcs	2260 <__HEAP_SIZE+0x1260>
    21f0:	10001252 	andne	r1, r0, r2, asr r2
    21f4:	00001b95 	muleq	r0, r5, fp
    21f8:	00125e2b 	andseq	r5, r2, fp, lsr #28
    21fc:	001b5e10 	andseq	r5, fp, r0, lsl lr
    2200:	126e2b00 	rsbne	r2, lr, #0, 22
    2204:	1b271000 	blne	9c620c <__RAM_SIZE+0x8c620c>
    2208:	782b0000 	stmdavc	fp!, {}	; <UNPREDICTABLE>
    220c:	95100012 	ldrls	r0, [r0, #-18]	; 0xffffffee
    2210:	2b00001b 	blcs	2284 <__HEAP_SIZE+0x1284>
    2214:	10001284 	andne	r1, r0, r4, lsl #5
    2218:	00001ba0 	andeq	r1, r0, r0, lsr #23
    221c:	0012922b 	andseq	r9, r2, fp, lsr #4
    2220:	001b3d10 	andseq	r3, fp, r0, lsl sp
    2224:	129e2b00 	addsne	r2, lr, #0, 22
    2228:	1b5e1000 	blne	1786230 <__RAM_SIZE+0x1686230>
    222c:	aa2b0000 	bge	ac2234 <__RAM_SIZE+0x9c2234>
    2230:	32100012 	andscc	r0, r0, #18
    2234:	2b00001b 	blcs	22a8 <__HEAP_SIZE+0x12a8>
    2238:	100012b8 			; <UNDEFINED> instruction: 0x100012b8
    223c:	00001b27 	andeq	r1, r0, r7, lsr #22
    2240:	0012d22b 	andseq	sp, r2, fp, lsr #4
    2244:	001b3210 	andseq	r3, fp, r0, lsl r2
    2248:	13ea1500 	mvnne	r1, #0, 10
    224c:	17911000 	ldrne	r1, [r1, r0]
    2250:	01160000 	tsteq	r6, r0
    2254:	9c910450 	cfldrsls	mvf0, [r1], {80}	; 0x50
    2258:	0116067f 	tsteq	r6, pc, ror r6
    225c:	a8910451 	ldmge	r1, {r0, r4, r6, sl}
    2260:	0116067f 	tsteq	r6, pc, ror r6
    2264:	007a0252 	rsbseq	r0, sl, r2, asr r2
    2268:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    226c:	0216007b 	andseq	r0, r6, #123	; 0x7b
    2270:	9103007d 	tstls	r3, sp, ror r0
    2274:	02167fb0 	andseq	r7, r6, #176, 30	; 0x2c0
    2278:	7402047d 	strvc	r0, [r2], #-1149	; 0xfffffb83
    227c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2280:	0c910308 	ldceq	3, cr0, [r1], {8}
    2284:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    2288:	1091030c 	addsne	r0, r1, ip, lsl #6
    228c:	18000006 	stmdane	r0, {r1, r2}
    2290:	00000133 	andeq	r0, r0, r3, lsr r1
    2294:	00001367 	andeq	r1, r0, r7, ror #6
    2298:	00003019 	andeq	r3, r0, r9, lsl r0
    229c:	18001f00 	stmdane	r0, {r8, r9, sl, fp, ip}
    22a0:	00000fa3 	andeq	r0, r0, r3, lsr #31
    22a4:	00001377 	andeq	r1, r0, r7, ror r3
    22a8:	00003019 	andeq	r3, r0, r9, lsl r0
    22ac:	03000900 	movweq	r0, #2304	; 0x900
    22b0:	00001367 	andeq	r1, r0, r7, ror #6
    22b4:	0006721a 	andeq	r7, r6, sl, lsl r2
    22b8:	01320100 	teqeq	r2, r0, lsl #2
    22bc:	00ee010f 	rsceq	r0, lr, pc, lsl #2
    22c0:	0c100000 	ldceq	0, cr0, [r0], {-0}
    22c4:	0cd61000 	ldcleq	0, cr1, [r6], {0}
    22c8:	197d1000 	ldmdbne	sp!, {ip}^
    22cc:	0f010000 	svceq	0x00010000
    22d0:	0f000015 	svceq	0x00000015
    22d4:	0074756f 	rsbseq	r7, r4, pc, ror #10
    22d8:	2c013201 	sfmcs	f3, 4, [r1], {1}
    22dc:	00000106 	andeq	r0, r0, r6, lsl #2
    22e0:	000019be 			; <UNDEFINED> instruction: 0x000019be
    22e4:	000019b6 			; <UNDEFINED> instruction: 0x000019b6
    22e8:	0004ac17 	andeq	sl, r4, r7, lsl ip
    22ec:	01320100 	teqeq	r2, r0, lsl #2
    22f0:	0002ee37 	andeq	lr, r2, r7, lsr lr
    22f4:	0019fe00 	andseq	pc, r9, r0, lsl #28
    22f8:	0019f600 	andseq	pc, r9, r0, lsl #12
    22fc:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    2300:	32010078 	andcc	r0, r1, #120	; 0x78
    2304:	00ee4601 	rsceq	r4, lr, r1, lsl #12
    2308:	1a3e0000 	bne	f82310 <__RAM_SIZE+0xe82310>
    230c:	1a360000 	bne	d82314 <__RAM_SIZE+0xc82314>
    2310:	91170000 	tstls	r7, r0
    2314:	01000005 	tsteq	r0, r5
    2318:	ee520132 	mrc	1, 2, r0, cr2, cr2, {1}
    231c:	7a000000 	bvc	2324 <__HEAP_SIZE+0x1324>
    2320:	7600001a 			; <UNDEFINED> instruction: 0x7600001a
    2324:	1700001a 	smladne	r0, sl, r0, r0
    2328:	000000c1 	andeq	r0, r0, r1, asr #1
    232c:	6d013201 	sfmvs	f3, 4, [r1, #-4]
    2330:	0000007e 	andeq	r0, r0, lr, ror r0
    2334:	00001aa2 	andeq	r1, r0, r2, lsr #21
    2338:	00001a98 	muleq	r0, r8, sl
    233c:	0004e310 	andeq	lr, r4, r0, lsl r3
    2340:	01320100 	teqeq	r2, r0, lsl #2
    2344:	000b7d79 	andeq	r7, fp, r9, ror sp
    2348:	08910200 	ldmeq	r1, {r9}
    234c:	00080f10 	andeq	r0, r8, r0, lsl pc
    2350:	01320100 	teqeq	r2, r0, lsl #2
    2354:	00007e96 	muleq	r0, r6, lr
    2358:	10910200 	addsne	r0, r1, r0, lsl #4
    235c:	00064810 	andeq	r4, r6, r0, lsl r8
    2360:	01320100 	teqeq	r2, r0, lsl #2
    2364:	000030a9 	andeq	r3, r0, r9, lsr #1
    2368:	18910200 	ldmne	r1, {r9}
    236c:	00064e10 	andeq	r4, r6, r0, lsl lr
    2370:	01320100 	teqeq	r2, r0, lsl #2
    2374:	000030bc 	strheq	r3, [r0], -ip
    2378:	1c910200 	lfmne	f0, 4, [r1], {0}
    237c:	00057c17 	andeq	r7, r5, r7, lsl ip
    2380:	01320100 	teqeq	r2, r0, lsl #2
    2384:	000030d0 	ldrdeq	r3, [r0], -r0
    2388:	001af600 	andseq	pc, sl, r0, lsl #12
    238c:	001af200 	andseq	pc, sl, r0, lsl #4
    2390:	75621200 	strbvc	r1, [r2, #-512]!	; 0xfffffe00
    2394:	34010066 	strcc	r0, [r1], #-102	; 0xffffff9a
    2398:	13570801 	cmpne	r7, #65536	; 0x10000
    239c:	91030000 	mrsls	r0, (UNDEF: 3)
    23a0:	6c147fb8 	ldcvs	15, cr7, [r4], {184}	; 0xb8
    23a4:	01006e65 	tsteq	r0, r5, ror #28
    23a8:	ee0a0135 	mcr	1, 0, r0, cr10, cr5, {1}
    23ac:	21000000 	mrscs	r0, (UNDEF: 0)
    23b0:	1500001b 	strne	r0, [r0, #-27]	; 0xffffffe5
    23b4:	1e00001b 	mcrne	0, 0, r0, cr0, cr11, {0}
    23b8:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    23bc:	000014b0 			; <UNDEFINED> instruction: 0x000014b0
    23c0:	0005d01c 	andeq	sp, r5, ip, lsl r0
    23c4:	013f0100 	teqeq	pc, r0, lsl #2
    23c8:	00013a12 	andeq	r3, r1, r2, lsl sl
    23cc:	001b7100 	andseq	r7, fp, r0, lsl #2
    23d0:	001b6d00 	andseq	r6, fp, r0, lsl #26
    23d4:	0c682b00 			; <UNDEFINED> instruction: 0x0c682b00
    23d8:	1bab1000 	blne	feac63e0 <__StackTop+0xc69c63e0>
    23dc:	882b0000 	stmdahi	fp!, {}	; <UNPREDICTABLE>
    23e0:	ab10000c 	blge	402418 <__RAM_SIZE+0x302418>
    23e4:	0000001b 	andeq	r0, r0, fp, lsl r0
    23e8:	000cd015 	andeq	sp, ip, r5, lsl r0
    23ec:	00167010 	andseq	r7, r6, r0, lsl r0
    23f0:	50011600 	andpl	r1, r1, r0, lsl #12
    23f4:	7fac9104 	svcvc	0x00ac9104
    23f8:	51011606 	tstpl	r1, r6, lsl #12
    23fc:	7fb09104 	svcvc	0x00b09104
    2400:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    2404:	7fb49104 	svcvc	0x00b49104
    2408:	53011606 	movwpl	r1, #5638	; 0x1606
    240c:	16007b02 	strne	r7, [r0], -r2, lsl #22
    2410:	03007d02 	movweq	r7, #3330	; 0xd02
    2414:	167fb891 			; <UNDEFINED> instruction: 0x167fb891
    2418:	02047d02 	andeq	r7, r4, #2, 26	; 0x80
    241c:	02160079 	andseq	r0, r6, #121	; 0x79
    2420:	9104087d 	tstls	r4, sp, ror r8
    2424:	16019408 	strne	r9, [r1], -r8, lsl #8
    2428:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    242c:	02160077 	andseq	r0, r6, #119	; 0x77
    2430:	9103107d 	tstls	r3, sp, ror r0
    2434:	02160618 	andseq	r0, r6, #24, 12	; 0x1800000
    2438:	9103147d 	tstls	r3, sp, ror r4
    243c:	0216061c 	andseq	r0, r6, #28, 12	; 0x1c00000
    2440:	7a02187d 	bvc	8863c <__HEAP_SIZE+0x8763c>
    2444:	1a000000 	bne	244c <__HEAP_SIZE+0x144c>
    2448:	0000055c 	andeq	r0, r0, ip, asr r5
    244c:	0f011901 	svceq	0x00011901
    2450:	0000ee01 	andeq	lr, r0, r1, lsl #28
    2454:	000b7c00 	andeq	r7, fp, r0, lsl #24
    2458:	000c1010 	andeq	r1, ip, r0, lsl r0
    245c:	001b8f10 	andseq	r8, fp, r0, lsl pc
    2460:	16700100 	ldrbtne	r0, [r0], -r0, lsl #2
    2464:	6f0f0000 	svcvs	0x000f0000
    2468:	01007475 	tsteq	r0, r5, ror r4
    246c:	06270119 			; <UNDEFINED> instruction: 0x06270119
    2470:	cc000001 	stcgt	0, cr0, [r0], {1}
    2474:	c800001b 	stmdagt	r0, {r0, r1, r3, r4}
    2478:	1700001b 	smladne	r0, fp, r0, r0
    247c:	000004ac 	andeq	r0, r0, ip, lsr #9
    2480:	32011901 	andcc	r1, r1, #16384	; 0x4000
    2484:	000002ee 	andeq	r0, r0, lr, ror #5
    2488:	00001bf1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    248c:	00001bed 	andeq	r1, r0, sp, ror #23
    2490:	7864690f 	stmdavc	r4!, {r0, r1, r2, r3, r8, fp, sp, lr}^
    2494:	01190100 	tsteq	r9, r0, lsl #2
    2498:	0000ee41 	andeq	lr, r0, r1, asr #28
    249c:	001c1600 	andseq	r1, ip, r0, lsl #12
    24a0:	001c1200 	andseq	r1, ip, r0, lsl #4
    24a4:	05911700 	ldreq	r1, [r1, #1792]	; 0x700
    24a8:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    24ac:	00ee4d01 	rsceq	r4, lr, r1, lsl #26
    24b0:	1c3b0000 	ldcne	0, cr0, [fp], #-0
    24b4:	1c370000 	ldcne	0, cr0, [r7], #-0
    24b8:	c1170000 	tstgt	r7, r0
    24bc:	01000000 	mrseq	r0, (UNDEF: 0)
    24c0:	5f630119 	svcpl	0x00630119
    24c4:	66000000 	strvs	r0, [r0], -r0
    24c8:	5c00001c 	stcpl	0, cr0, [r0], {28}
    24cc:	1000001c 	andne	r0, r0, ip, lsl r0
    24d0:	000004e3 	andeq	r0, r0, r3, ror #9
    24d4:	6f011901 	svcvs	0x00011901
    24d8:	00000b7d 	andeq	r0, r0, sp, ror fp
    24dc:	10049102 	andne	r9, r4, r2, lsl #2
    24e0:	0000080f 	andeq	r0, r0, pc, lsl #16
    24e4:	87011901 	strhi	r1, [r1, -r1, lsl #18]
    24e8:	0000005f 	andeq	r0, r0, pc, asr r0
    24ec:	10089102 	andne	r9, r8, r2, lsl #2
    24f0:	00000648 	andeq	r0, r0, r8, asr #12
    24f4:	9a011901 	bls	48900 <__HEAP_SIZE+0x47900>
    24f8:	00000030 	andeq	r0, r0, r0, lsr r0
    24fc:	100c9102 	andne	r9, ip, r2, lsl #2
    2500:	0000064e 	andeq	r0, r0, lr, asr #12
    2504:	ad011901 	vstrge.16	s2, [r1, #-2]	; <UNPREDICTABLE>
    2508:	00000030 	andeq	r0, r0, r0, lsr r0
    250c:	17109102 	ldrne	r9, [r0, -r2, lsl #2]
    2510:	0000057c 	andeq	r0, r0, ip, ror r5
    2514:	c1011901 	tstgt	r1, r1, lsl #18
    2518:	00000030 	andeq	r0, r0, r0, lsr r0
    251c:	00001cab 	andeq	r1, r0, fp, lsr #25
    2520:	00001ca7 	andeq	r1, r0, r7, lsr #25
    2524:	66756212 			; <UNDEFINED> instruction: 0x66756212
    2528:	011b0100 	tsteq	fp, r0, lsl #2
    252c:	00135708 	andseq	r5, r3, r8, lsl #14
    2530:	48910200 	ldmmi	r1, {r9}
    2534:	6e656c14 	mcrvs	12, 3, r6, cr5, cr4, {0}
    2538:	011c0100 	tsteq	ip, r0, lsl #2
    253c:	0000ee0a 	andeq	lr, r0, sl, lsl #28
    2540:	001cd600 	andseq	sp, ip, r0, lsl #12
    2544:	001cca00 	andseq	ip, ip, r0, lsl #20
    2548:	00b01e00 	adcseq	r1, r0, r0, lsl #28
    254c:	16300000 	ldrtne	r0, [r0], -r0
    2550:	d01c0000 	andsle	r0, ip, r0
    2554:	01000005 	tsteq	r0, r5
    2558:	3a120126 	bcc	4829f8 <__RAM_SIZE+0x3829f8>
    255c:	2e000001 	cdpcs	0, 0, cr0, cr0, cr1, {0}
    2560:	2200001d 	andcs	r0, r0, #29
    2564:	0000001d 	andeq	r0, r0, sp, lsl r0
    2568:	000c0c15 	andeq	r0, ip, r5, lsl ip
    256c:	00167010 	andseq	r7, r6, r0, lsl r0
    2570:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2574:	00740200 	rsbseq	r0, r4, r0, lsl #4
    2578:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    257c:	16007702 	strne	r7, [r0], -r2, lsl #14
    2580:	04087d02 	streq	r7, [r8], #-3330	; 0xfffff2fe
    2584:	01940491 			; <UNDEFINED> instruction: 0x01940491
    2588:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    258c:	16007502 	strne	r7, [r0], -r2, lsl #10
    2590:	03107d02 	tsteq	r0, #2, 26	; 0x80
    2594:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    2598:	03147d02 	tsteq	r4, #2, 26	; 0x80
    259c:	16061091 			; <UNDEFINED> instruction: 0x16061091
    25a0:	02187d02 	andseq	r7, r8, #2, 26	; 0x80
    25a4:	00000076 	andeq	r0, r0, r6, ror r0
    25a8:	0005182c 	andeq	r1, r5, ip, lsr #16
    25ac:	0fe30100 	svceq	0x00e30100
    25b0:	0000ee01 	andeq	lr, r0, r1, lsl #28
    25b4:	000a4400 	andeq	r4, sl, r0, lsl #8
    25b8:	000b7c10 	andeq	r7, fp, r0, lsl ip
    25bc:	001d9c10 	andseq	r9, sp, r0, lsl ip
    25c0:	17910100 	ldrne	r0, [r1, r0, lsl #2]
    25c4:	6f2d0000 	svcvs	0x002d0000
    25c8:	01007475 	tsteq	r0, r5, ror r4
    25cc:	010629e3 	smlatteq	r6, r3, r9, r2
    25d0:	1de60000 	stclne	0, cr0, [r6]
    25d4:	1de00000 	stclne	0, cr0, [r0]
    25d8:	ac2e0000 	stcge	0, cr0, [lr], #-0
    25dc:	01000004 	tsteq	r0, r4
    25e0:	02ee34e3 	rsceq	r3, lr, #-486539264	; 0xe3000000
    25e4:	1e180000 	cdpne	0, 1, cr0, cr8, cr0, {0}
    25e8:	1e120000 	cdpne	0, 1, cr0, cr2, cr0, {0}
    25ec:	692d0000 	pushvs	{}	; <UNPREDICTABLE>
    25f0:	01007864 	tsteq	r0, r4, ror #16
    25f4:	00ee43e3 	rsceq	r4, lr, r3, ror #7
    25f8:	1e4a0000 	cdpne	0, 4, cr0, cr10, cr0, {0}
    25fc:	1e440000 	cdpne	0, 4, cr0, cr4, cr0, {0}
    2600:	912e0000 			; <UNDEFINED> instruction: 0x912e0000
    2604:	01000005 	tsteq	r0, r5
    2608:	00ee4fe3 	rsceq	r4, lr, r3, ror #31
    260c:	1e7c0000 	cdpne	0, 7, cr0, cr12, cr0, {0}
    2610:	1e760000 	cdpne	0, 7, cr0, cr6, cr0, {0}
    2614:	622d0000 	eorvs	r0, sp, #0
    2618:	01006675 	tsteq	r0, r5, ror r6
    261c:	02ee5de3 	rsceq	r5, lr, #14528	; 0x38c0
    2620:	1eac0000 	cdpne	0, 10, cr0, cr12, cr0, {0}
    2624:	1ea80000 	cdpne	0, 10, cr0, cr8, cr0, {0}
    2628:	6c2d0000 	stcvs	0, cr0, [sp], #-0
    262c:	01006e65 	tsteq	r0, r5, ror #28
    2630:	00ee69e3 	rsceq	r6, lr, r3, ror #19
    2634:	1efe0000 	cdpne	0, 15, cr0, cr14, cr0, {0}
    2638:	1ecc0000 	cdpne	0, 12, cr0, cr12, cr0, {0}
    263c:	e32e0000 			; <UNDEFINED> instruction: 0xe32e0000
    2640:	01000004 	tsteq	r0, r4
    2644:	0b7d73e3 	bleq	1f5f5d8 <__RAM_SIZE+0x1e5f5d8>
    2648:	20320000 	eorscs	r0, r2, r0
    264c:	202e0000 	eorcs	r0, lr, r0
    2650:	0f2e0000 	svceq	0x002e0000
    2654:	01000008 	tsteq	r0, r8
    2658:	00308ae3 	eorseq	r8, r0, r3, ror #21
    265c:	20560000 	subscs	r0, r6, r0
    2660:	20520000 	subscs	r0, r2, r0
    2664:	482e0000 	stmdami	lr!, {}	; <UNPREDICTABLE>
    2668:	01000006 	tsteq	r0, r6
    266c:	00309de3 	eorseq	r9, r0, r3, ror #27
    2670:	207a0000 	rsbscs	r0, sl, r0
    2674:	20760000 	rsbscs	r0, r6, r0
    2678:	4e2e0000 	cdpmi	0, 2, cr0, cr14, cr0, {0}
    267c:	01000006 	tsteq	r0, r6
    2680:	0030b0e3 	eorseq	fp, r0, r3, ror #1
    2684:	209e0000 	addscs	r0, lr, r0
    2688:	209a0000 	addscs	r0, sl, r0
    268c:	7c2e0000 	stcvc	0, cr0, [lr], #-0
    2690:	01000005 	tsteq	r0, r5
    2694:	0030c4e3 	eorseq	ip, r0, r3, ror #9
    2698:	20c10000 	sbccs	r0, r1, r0
    269c:	20bd0000 	adcscs	r0, sp, r0
    26a0:	fe150000 	cdp2	0, 1, cr0, cr5, cr0, {0}
    26a4:	9110000a 	tstls	r0, sl
    26a8:	16000017 			; <UNDEFINED> instruction: 0x16000017
    26ac:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    26b0:	02160075 	andseq	r0, r6, #117	; 0x75
    26b4:	7402047d 	strvc	r0, [r2], #-1149	; 0xfffffb83
    26b8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    26bc:	00770208 	rsbseq	r0, r7, r8, lsl #4
    26c0:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    26c4:	00007602 	andeq	r7, r0, r2, lsl #12
    26c8:	06002c00 	streq	r2, [r0], -r0, lsl #24
    26cc:	c7010000 	strgt	r0, [r1, -r0]
    26d0:	00ee010f 	rsceq	r0, lr, pc, lsl #2
    26d4:	09c60000 	stmibeq	r6, {}^	; <UNPREDICTABLE>
    26d8:	0a441000 	beq	11066e0 <__RAM_SIZE+0x10066e0>
    26dc:	20e11000 	rsccs	r1, r1, r0
    26e0:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    26e4:	2d000018 	stccs	0, cr0, [r0, #-96]	; 0xffffffa0
    26e8:	0074756f 	rsbseq	r7, r4, pc, ror #10
    26ec:	0625c701 	strteq	ip, [r5], -r1, lsl #14
    26f0:	29000001 	stmdbcs	r0, {r0}
    26f4:	25000021 	strcs	r0, [r0, #-33]	; 0xffffffdf
    26f8:	2e000021 	cdpcs	0, 0, cr0, cr0, cr1, {1}
    26fc:	000004ac 	andeq	r0, r0, ip, lsr #9
    2700:	ee30c701 	cdp	7, 3, cr12, cr0, cr1, {0}
    2704:	4b000002 	blmi	2714 <__HEAP_SIZE+0x1714>
    2708:	47000021 	strmi	r0, [r0, -r1, lsr #32]
    270c:	2d000021 	stccs	0, cr0, [r0, #-132]	; 0xffffff7c
    2710:	00786469 	rsbseq	r6, r8, r9, ror #8
    2714:	ee3fc701 	cdp	7, 3, cr12, cr15, cr1, {0}
    2718:	75000000 	strvc	r0, [r0, #-0]
    271c:	69000021 	stmdbvs	r0, {r0, r5}
    2720:	2e000021 	cdpcs	0, 0, cr0, cr0, cr1, {1}
    2724:	00000591 	muleq	r0, r1, r5
    2728:	ee4bc701 	cdp	7, 4, cr12, cr11, cr1, {0}
    272c:	c3000000 	movwgt	r0, #0
    2730:	bf000021 	svclt	0x00000021
    2734:	2d000021 	stccs	0, cr0, [r0, #-132]	; 0xffffff7c
    2738:	00667562 	rsbeq	r7, r6, r2, ror #10
    273c:	4c5fc701 	mrrcmi	7, 0, ip, pc, cr1	; <UNPREDICTABLE>
    2740:	e5000002 	str	r0, [r0, #-2]
    2744:	e1000021 	tst	r0, r1, lsr #32
    2748:	2d000021 	stccs	0, cr0, [r0, #-132]	; 0xffffff7c
    274c:	006e656c 	rsbeq	r6, lr, ip, ror #10
    2750:	ee6bc701 	cdp	7, 6, cr12, cr11, cr1, {0}
    2754:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2758:	05000022 	streq	r0, [r0, #-34]	; 0xffffffde
    275c:	2e000022 	cdpcs	0, 0, cr0, cr0, cr2, {1}
    2760:	0000064e 	andeq	r0, r0, lr, asr #12
    2764:	307dc701 	rsbscc	ip, sp, r1, lsl #14
    2768:	2c000000 	stccs	0, cr0, [r0], {-0}
    276c:	28000022 	stmdacs	r0, {r1, r5}
    2770:	2e000022 	cdpcs	0, 0, cr0, cr0, cr2, {1}
    2774:	0000057c 	andeq	r0, r0, ip, ror r5
    2778:	3091c701 	addscc	ip, r1, r1, lsl #14
    277c:	50000000 	andpl	r0, r0, r0
    2780:	4c000022 	stcmi	0, cr0, [r0], {34}	; 0x22
    2784:	2f000022 	svccs	0x00000022
    2788:	000004cf 	andeq	r0, r0, pc, asr #9
    278c:	fa10c901 	blx	434b98 <__RAM_SIZE+0x334b98>
    2790:	76000000 	strvc	r0, [r0], -r0
    2794:	70000022 	andvc	r0, r0, r2, lsr #32
    2798:	1e000022 	cdpne	0, 0, cr0, cr0, cr2, {1}
    279c:	00000098 	muleq	r0, r8, r0
    27a0:	0000189d 	muleq	r0, sp, r8
    27a4:	01006930 	tsteq	r0, r0, lsr r9
    27a8:	00ee11cd 	rsceq	r1, lr, sp, asr #3
    27ac:	22a50000 	adccs	r0, r5, #0
    27b0:	22a30000 	adccs	r0, r3, #0
    27b4:	fa220000 	blx	8827bc <__RAM_SIZE+0x7827bc>
    27b8:	16100009 	ldrne	r0, [r0], -r9
    27bc:	08025001 	stmdaeq	r2, {r0, ip, lr}
    27c0:	51011620 	tstpl	r1, r0, lsr #12
    27c4:	16007602 	strne	r7, [r0], -r2, lsl #12
    27c8:	7b025201 	blvc	96fd4 <__HEAP_SIZE+0x95fd4>
    27cc:	5301167f 	movwpl	r1, #5759	; 0x167f
    27d0:	00007702 	andeq	r7, r0, r2, lsl #14
    27d4:	0a182100 	beq	60abdc <__RAM_SIZE+0x50abdc>
    27d8:	18b91000 	ldmne	r9!, {ip}
    27dc:	01160000 	tsteq	r6, r0
    27e0:	00760251 	rsbseq	r0, r6, r1, asr r2
    27e4:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    27e8:	01167f78 	tsteq	r6, r8, ror pc
    27ec:	00770253 	rsbseq	r0, r7, r3, asr r2
    27f0:	0a402200 	beq	100aff8 <__RAM_SIZE+0xf0aff8>
    27f4:	01161000 	tsteq	r6, r0
    27f8:	20080250 	andcs	r0, r8, r0, asr r2
    27fc:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    2800:	01160076 	tsteq	r6, r6, ror r0
    2804:	7f740252 	svcvc	0x00740252
    2808:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    280c:	00000077 	andeq	r0, r0, r7, ror r0
    2810:	00059831 	andeq	r9, r5, r1, lsr r8
    2814:	15bc0100 	ldrne	r0, [ip, #256]!	; 0x100
    2818:	00003001 	andeq	r3, r0, r1
    281c:	0009a200 	andeq	sl, r9, r0, lsl #4
    2820:	0009c610 	andeq	ip, r9, r0, lsl r6
    2824:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    2828:	00194001 	andseq	r4, r9, r1
    282c:	74732d00 	ldrbtvc	r2, [r3], #-3328	; 0xfffff300
    2830:	bc010072 	stclt	0, cr0, [r1], {114}	; 0x72
    2834:	00194028 	andseq	r4, r9, r8, lsr #32
    2838:	0022bc00 	eoreq	fp, r2, r0, lsl #24
    283c:	0022b800 	eoreq	fp, r2, r0, lsl #16
    2840:	00693000 	rsbeq	r3, r9, r0
    2844:	3010be01 	andscc	fp, r0, r1, lsl #28
    2848:	e0000000 	and	r0, r0, r0
    284c:	da000022 	ble	28dc <__HEAP_SIZE+0x18dc>
    2850:	32000022 	andcc	r0, r0, #34	; 0x22
    2854:	00001946 	andeq	r1, r0, r6, asr #18
    2858:	100009bc 			; <UNDEFINED> instruction: 0x100009bc
    285c:	09bc0000 	ldmibeq	ip!, {}	; <UNPREDICTABLE>
    2860:	09c01000 	stmibeq	r0, {ip}^
    2864:	bf011000 	svclt	0x00011000
    2868:	1958240a 	ldmdbne	r8, {r1, r3, sl, sp}^
    286c:	230e0000 	movwcs	r0, #57344	; 0xe000
    2870:	230a0000 	movwcs	r0, #40960	; 0xa000
    2874:	00000000 	andeq	r0, r0, r0
    2878:	024c0409 	subeq	r0, ip, #150994944	; 0x9000000
    287c:	cc330000 	ldcgt	0, cr0, [r3], #-0
    2880:	01000005 	tsteq	r0, r5
    2884:	7d0114b5 	cfstrsvc	mvf1, [r1, #-724]	; 0xfffffd2c
    2888:	0300000b 	movweq	r0, #11
    288c:	00001964 	andeq	r1, r0, r4, ror #18
    2890:	00686334 	rsbeq	r6, r8, r4, lsr r3
    2894:	3323b501 			; <UNDEFINED> instruction: 0x3323b501
    2898:	00000001 	andeq	r0, r0, r1
    289c:	00059e33 	andeq	r9, r5, r3, lsr lr
    28a0:	1cab0100 	stfnes	f0, [fp]
    28a4:	00003001 	andeq	r3, r0, r1
    28a8:	19990300 	ldmibne	r9, {r8, r9}
    28ac:	73340000 	teqvc	r4, #0
    28b0:	01007274 	tsteq	r0, r4, ror r2
    28b4:	024c33ab 	subeq	r3, ip, #-1409286142	; 0xac000002
    28b8:	8c350000 	ldchi	0, cr0, [r5], #-0
    28bc:	01000004 	tsteq	r0, r4
    28c0:	00ee3fab 	rsceq	r3, lr, fp, lsr #31
    28c4:	73360000 	teqvc	r6, #0
    28c8:	0fad0100 	svceq	0x00ad0100
    28cc:	0000024c 	andeq	r0, r0, ip, asr #4
    28d0:	04b83700 	ldrteq	r3, [r8], #1792	; 0x700
    28d4:	9f010000 	svcls	0x00010000
    28d8:	00000114 	andeq	r0, r0, r4, lsl r1
    28dc:	00000000 	andeq	r0, r0, r0
    28e0:	232e0000 			; <UNDEFINED> instruction: 0x232e0000
    28e4:	04010000 	streq	r0, [r1], #-0
    28e8:	2e00001a 	mcrcs	0, 0, r0, cr0, cr10, {0}
    28ec:	000005f6 	strdeq	r0, [r0], -r6
    28f0:	33229f01 			; <UNDEFINED> instruction: 0x33229f01
    28f4:	60000001 	andvs	r0, r0, r1
    28f8:	5a000023 	bpl	298c <__HEAP_SIZE+0x198c>
    28fc:	2e000023 	cdpcs	0, 0, cr0, cr0, cr3, {1}
    2900:	000004ac 	andeq	r0, r0, ip, lsr #9
    2904:	e0339f01 	eors	r9, r3, r1, lsl #30
    2908:	92000000 	andls	r0, r0, #0
    290c:	8c000023 	stchi	0, cr0, [r0], {35}	; 0x23
    2910:	2d000023 	stccs	0, cr0, [r0, #-140]	; 0xffffff74
    2914:	00786469 	rsbseq	r6, r8, r9, ror #8
    2918:	ee429f01 	cdp	15, 4, cr9, cr2, cr1, {0}
    291c:	c4000000 	strgt	r0, [r0], #-0
    2920:	be000023 	cdplt	0, 0, cr0, cr0, cr3, {1}
    2924:	2e000023 	cdpcs	0, 0, cr0, cr0, cr3, {1}
    2928:	00000591 	muleq	r0, r1, r5
    292c:	ee4e9f01 	cdp	15, 4, cr9, cr14, cr1, {0}
    2930:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    2934:	f0000023 			; <UNDEFINED> instruction: 0xf0000023
    2938:	00000023 	andeq	r0, r0, r3, lsr #32
    293c:	00048238 	andeq	r8, r4, r8, lsr r2
    2940:	14950100 	ldrne	r0, [r5], #256	; 0x100
    2944:	001ae001 	andseq	lr, sl, r1
    2948:	001aec10 	andseq	lr, sl, r0, lsl ip
    294c:	00242210 	eoreq	r2, r4, r0, lsl r2
    2950:	1a780100 	bne	1e02d58 <__RAM_SIZE+0x1d02d58>
    2954:	f62e0000 			; <UNDEFINED> instruction: 0xf62e0000
    2958:	01000005 	tsteq	r0, r5
    295c:	01332395 	teqeq	r3, r5	; <illegal shifter operand>
    2960:	24460000 	strbcs	r0, [r6], #-0
    2964:	24420000 	strbcs	r0, [r2], #-0
    2968:	ac2e0000 	stcge	0, cr0, [lr], #-0
    296c:	01000004 	tsteq	r0, r4
    2970:	00e03495 	smlaleq	r3, r0, r5, r4
    2974:	246b0000 	strbtcs	r0, [fp], #-0
    2978:	24670000 	strbtcs	r0, [r7], #-0
    297c:	692d0000 	pushvs	{}	; <UNPREDICTABLE>
    2980:	01007864 	tsteq	r0, r4, ror #16
    2984:	00ee4395 	smlaleq	r4, lr, r5, r3
    2988:	24900000 	ldrcs	r0, [r0], #0
    298c:	248c0000 	strcs	r0, [ip], #0
    2990:	912e0000 			; <UNDEFINED> instruction: 0x912e0000
    2994:	01000005 	tsteq	r0, r5
    2998:	00ee4f95 	smlaleq	r4, lr, r5, pc	; <UNPREDICTABLE>
    299c:	24b50000 	ldrtcs	r0, [r5], #0
    29a0:	24b10000 	ldrtcs	r0, [r1], #0
    29a4:	ea2b0000 	b	ac29ac <__RAM_SIZE+0x9c29ac>
    29a8:	b610001a 			; <UNDEFINED> instruction: 0xb610001a
    29ac:	0000001b 	andeq	r0, r0, fp, lsl r0
    29b0:	00053639 	andeq	r3, r5, r9, lsr r6
    29b4:	148e0100 	strne	r0, [lr], #256	; 0x100
    29b8:	0009a001 	andeq	sl, r9, r1
    29bc:	0009a210 	andeq	sl, r9, r0, lsl r2
    29c0:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    29c4:	001aca01 	andseq	ip, sl, r1, lsl #20
    29c8:	05f63a00 	ldrbeq	r3, [r6, #2560]!	; 0xa00
    29cc:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    29d0:	00013323 	andeq	r3, r1, r3, lsr #6
    29d4:	3a500100 	bcc	1402ddc <__RAM_SIZE+0x1302ddc>
    29d8:	000004ac 	andeq	r0, r0, ip, lsr #9
    29dc:	e0348e01 	eors	r8, r4, r1, lsl #28
    29e0:	01000000 	mrseq	r0, (UNDEF: 0)
    29e4:	64693b51 	strbtvs	r3, [r9], #-2897	; 0xfffff4af
    29e8:	8e010078 	mcrhi	0, 0, r0, cr1, cr8, {3}
    29ec:	0000ee43 	andeq	lr, r0, r3, asr #28
    29f0:	3a520100 	bcc	1482df8 <__RAM_SIZE+0x1382df8>
    29f4:	00000591 	muleq	r0, r1, r5
    29f8:	ee4f8e01 	cdp	14, 4, cr8, cr15, cr1, {0}
    29fc:	01000000 	mrseq	r0, (UNDEF: 0)
    2a00:	a7390053 			; <UNDEFINED> instruction: 0xa7390053
    2a04:	01000004 	tsteq	r0, r4
    2a08:	00011485 	andeq	r1, r1, r5, lsl #9
    2a0c:	00000000 	andeq	r0, r0, r0
    2a10:	02000000 	andeq	r0, r0, #0
    2a14:	1c01007d 	stcne	0, cr0, [r1], {125}	; 0x7d
    2a18:	3a00001b 	bcc	2a8c <__HEAP_SIZE+0x1a8c>
    2a1c:	000005f6 	strdeq	r0, [r0], -r6
    2a20:	33258501 			; <UNDEFINED> instruction: 0x33258501
    2a24:	01000001 	tsteq	r0, r1
    2a28:	04ac3a50 	strteq	r3, [ip], #2640	; 0xa50
    2a2c:	85010000 	strhi	r0, [r1, #-0]
    2a30:	0000e036 	andeq	lr, r0, r6, lsr r0
    2a34:	3b510100 	blcc	1442e3c <__RAM_SIZE+0x1342e3c>
    2a38:	00786469 	rsbseq	r6, r8, r9, ror #8
    2a3c:	ee458501 	cdp	5, 4, cr8, cr5, cr1, {0}
    2a40:	01000000 	mrseq	r0, (UNDEF: 0)
    2a44:	05913a52 	ldreq	r3, [r1, #2642]	; 0xa52
    2a48:	85010000 	strhi	r0, [r1, #-0]
    2a4c:	0000ee51 	andeq	lr, r0, r1, asr lr
    2a50:	00530100 	subseq	r0, r3, r0, lsl #2
    2a54:	db01013c 	blle	42f4c <__HEAP_SIZE+0x41f4c>
    2a58:	db000005 	blle	2a74 <__HEAP_SIZE+0x1a74>
    2a5c:	3c000005 	stccc	0, cr0, [r0], {5}
    2a60:	05820101 	streq	r0, [r2, #257]	; 0x101
    2a64:	05820000 	streq	r0, [r2]
    2a68:	013c0000 	teqeq	ip, r0
    2a6c:	00066301 	andeq	r6, r6, r1, lsl #6
    2a70:	00066300 	andeq	r6, r6, r0, lsl #6
    2a74:	01013c00 	tsteq	r1, r0, lsl #24
    2a78:	0000042c 	andeq	r0, r0, ip, lsr #8
    2a7c:	0000042c 	andeq	r0, r0, ip, lsr #8
    2a80:	ae01013c 	mcrge	1, 0, r0, cr1, cr12, {1}
    2a84:	ae000005 	cdpge	0, 0, cr0, cr0, cr5, {0}
    2a88:	3c000005 	stccc	0, cr0, [r0], {5}
    2a8c:	04ec0101 	strbteq	r0, [ip], #257	; 0x101
    2a90:	04ec0000 	strbteq	r0, [ip], #0
    2a94:	013c0000 	teqeq	ip, r0
    2a98:	00060901 	andeq	r0, r6, r1, lsl #18
    2a9c:	00060900 	andeq	r0, r6, r0, lsl #18
    2aa0:	01013c00 	tsteq	r1, r0, lsl #24
    2aa4:	0000049a 	muleq	r0, sl, r4
    2aa8:	0000049a 	muleq	r0, sl, r4
    2aac:	6f01013c 	svcvs	0x0001013c
    2ab0:	6f000004 	svcvs	0x00000004
    2ab4:	3c000004 	stccc	0, cr0, [r0], {4}
    2ab8:	054d0101 	strbeq	r0, [sp, #-257]	; 0xfffffeff
    2abc:	054d0000 	strbeq	r0, [sp, #-0]
    2ac0:	013c0000 	teqeq	ip, r0
    2ac4:	0004c101 	andeq	ip, r4, r1, lsl #2
    2ac8:	0004c100 	andeq	ip, r4, r0, lsl #2
    2acc:	01013c00 	tsteq	r1, r0, lsl #24
    2ad0:	0000056f 	andeq	r0, r0, pc, ror #10
    2ad4:	0000056f 	andeq	r0, r0, pc, ror #10
    2ad8:	2701013c 	smladxcs	r1, ip, r1, r0
    2adc:	27000006 	strcs	r0, [r0, -r6]
    2ae0:	3c000006 	stccc	0, cr0, [r0], {6}
    2ae4:	06160101 	ldreq	r0, [r6], -r1, lsl #2
    2ae8:	06160000 	ldreq	r0, [r6], -r0
    2aec:	013d0000 	teqeq	sp, r0
    2af0:	00042401 	andeq	r2, r4, r1, lsl #8
    2af4:	00042400 	andeq	r2, r4, r0, lsl #8
    2af8:	05310700 	ldreq	r0, [r1, #-1792]!	; 0xfffff900
    2afc:	00023d00 	andeq	r3, r2, r0, lsl #26
    2b00:	54000200 	strpl	r0, [r0], #-512	; 0xfffffe00
    2b04:	04000006 	streq	r0, [r0], #-6
    2b08:	00018801 	andeq	r8, r1, r1, lsl #16
    2b0c:	06970c00 	ldreq	r0, [r7], r0, lsl #24
    2b10:	001a0000 	andseq	r0, sl, r0
    2b14:	01e80000 	mvneq	r0, r0
	...
    2b20:	17bd0000 	ldrne	r0, [sp, r0]!
    2b24:	01020000 	mrseq	r0, (UNDEF: 2)
    2b28:	00027206 	andeq	r7, r2, r6, lsl #4
    2b2c:	017e0300 	cmneq	lr, r0, lsl #6
    2b30:	2b020000 	blcs	82b38 <__HEAP_SIZE+0x81b38>
    2b34:	00003c18 	andeq	r3, r0, r8, lsl ip
    2b38:	08010200 	stmdaeq	r1, {r9}
    2b3c:	00000270 	andeq	r0, r0, r0, ror r2
    2b40:	6d050202 	sfmvs	f0, 4, [r5, #-8]
    2b44:	02000000 	andeq	r0, r0, #0
    2b48:	03020702 	movweq	r0, #9986	; 0x2702
    2b4c:	04020000 	streq	r0, [r2], #-0
    2b50:	00016905 	andeq	r6, r1, r5, lsl #18
    2b54:	009f0300 	addseq	r0, pc, r0, lsl #6
    2b58:	4f020000 	svcmi	0x00020000
    2b5c:	00006419 	andeq	r6, r0, r9, lsl r4
    2b60:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2b64:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
    2b68:	64050802 	strvs	r0, [r5], #-2050	; 0xfffff7fe
    2b6c:	02000001 	andeq	r0, r0, #1
    2b70:	02ac0708 	adceq	r0, ip, #8, 14	; 0x200000
    2b74:	04040000 	streq	r0, [r4], #-0
    2b78:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    2b7c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2b80:	000002b6 			; <UNDEFINED> instruction: 0x000002b6
    2b84:	00045f03 	andeq	r5, r4, r3, lsl #30
    2b88:	17d10300 	ldrbne	r0, [r1, r0, lsl #6]
    2b8c:	00000080 	andeq	r0, r0, r0, lsl #1
    2b90:	93040802 	movwls	r0, #18434	; 0x4802
    2b94:	02000000 	andeq	r0, r0, #0
    2b98:	02790801 	rsbseq	r0, r9, #65536	; 0x10000
    2b9c:	9a050000 	bls	142ba4 <__RAM_SIZE+0x42ba4>
    2ba0:	06000000 	streq	r0, [r0], -r0
    2ba4:	0000a104 	andeq	sl, r0, r4, lsl #2
    2ba8:	01800300 	orreq	r0, r0, r0, lsl #6
    2bac:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    2bb0:	00003013 	andeq	r3, r0, r3, lsl r0
    2bb4:	00a10300 	adceq	r0, r1, r0, lsl #6
    2bb8:	30040000 	andcc	r0, r4, r0
    2bbc:	00005814 	andeq	r5, r0, r4, lsl r8
    2bc0:	b1010700 	tstlt	r1, r0, lsl #14
    2bc4:	01000006 	tsteq	r0, r6
    2bc8:	87010847 	strhi	r0, [r1, -r7, asr #16]
	...
    2bd4:	d6000000 	strle	r0, [r0], -r0
    2bd8:	01000024 	tsteq	r0, r4, lsr #32
    2bdc:	0000013b 	andeq	r0, r0, fp, lsr r1
    2be0:	0004ac08 	andeq	sl, r4, r8, lsl #24
    2be4:	1b470100 	blne	11c2fec <__RAM_SIZE+0x10c2fec>
    2be8:	0000013b 	andeq	r0, r0, fp, lsr r1
    2bec:	000024fa 	strdeq	r2, [r0], -sl
    2bf0:	000024f6 	strdeq	r2, [r0], -r6
    2bf4:	00048f08 	andeq	r8, r4, r8, lsl #30
    2bf8:	2a470100 	bcs	11c3000 <__RAM_SIZE+0x10c3000>
    2bfc:	00000087 	andeq	r0, r0, r7, lsl #1
    2c00:	0000251c 	andeq	r2, r0, ip, lsl r5
    2c04:	00002518 	andeq	r2, r0, r8, lsl r5
    2c08:	00686309 	rsbeq	r6, r8, r9, lsl #6
    2c0c:	ac0d4801 	stcge	8, cr4, [sp], {1}
    2c10:	40000000 	andmi	r0, r0, r0
    2c14:	3a000025 	bcc	2cb0 <__HEAP_SIZE+0x1cb0>
    2c18:	09000025 	stmdbeq	r0, {r0, r2, r5}
    2c1c:	01007469 	tsteq	r0, r9, ror #8
    2c20:	00870c49 	addeq	r0, r7, r9, asr #24
    2c24:	256e0000 	strbcs	r0, [lr, #-0]!
    2c28:	256a0000 	strbcs	r0, [sl, #-0]!
    2c2c:	000a0000 	andeq	r0, sl, r0
    2c30:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    2c34:	00000001 	andeq	r0, r0, r1
    2c38:	00ac0406 	adceq	r0, ip, r6, lsl #8
    2c3c:	010b0000 	mrseq	r0, (UNDEF: 11)
    2c40:	000006c9 	andeq	r0, r0, r9, asr #13
    2c44:	01064301 	tsteq	r6, r1, lsl #6
	...
    2c50:	0000258d 	andeq	r2, r0, sp, lsl #11
    2c54:	00018201 	andeq	r8, r1, r1, lsl #4
    2c58:	06aa0800 	strteq	r0, [sl], r0, lsl #16
    2c5c:	43010000 	movwmi	r0, #4096	; 0x1000
    2c60:	0000a61c 	andeq	sl, r0, ip, lsl r6
    2c64:	0025b100 	eoreq	fp, r5, r0, lsl #2
    2c68:	0025ad00 	eoreq	sl, r5, r0, lsl #26
    2c6c:	00000c00 	andeq	r0, r0, r0, lsl #24
    2c70:	01980000 	orrseq	r0, r8, r0
    2c74:	010d0000 	mrseq	r0, (UNDEF: 13)
    2c78:	01f30350 	mvnseq	r0, r0, asr r3
    2c7c:	0e000050 	mcreq	0, 0, r0, cr0, cr0, {2}
    2c80:	00008401 	andeq	r8, r0, r1, lsl #8
    2c84:	063a0100 	ldrteq	r0, [sl], -r0, lsl #2
    2c88:	001b4c01 	andseq	r4, fp, r1, lsl #24
    2c8c:	001b7010 	andseq	r7, fp, r0, lsl r0
    2c90:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    2c94:	10010701 	andne	r0, r1, r1, lsl #14
    2c98:	05000000 	streq	r0, [r0, #-0]
    2c9c:	790105dd 	stmdbvc	r1, {r0, r2, r3, r4, r6, r7, r8, sl}
    2ca0:	2c000000 	stccs	0, cr0, [r0], {-0}
    2ca4:	4a10001b 	bmi	402d18 <__RAM_SIZE+0x302d18>
    2ca8:	d210001b 	andsle	r0, r0, #27
    2cac:	01000025 	tsteq	r0, r5, lsr #32
    2cb0:	000001f8 	strdeq	r0, [r0], -r8
    2cb4:	0006aa08 	andeq	sl, r6, r8, lsl #20
    2cb8:	16300100 	ldrtne	r0, [r0], -r0, lsl #2
    2cbc:	000000a6 	andeq	r0, r0, r6, lsr #1
    2cc0:	000025f6 	strdeq	r2, [r0], -r6
    2cc4:	000025f2 	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
    2cc8:	0006c30f 	andeq	ip, r6, pc, lsl #6
    2ccc:	09310100 	ldmdbeq	r1!, {r8}
    2cd0:	00000079 	andeq	r0, r0, r9, ror r0
    2cd4:	00002618 	andeq	r2, r0, r8, lsl r6
    2cd8:	00002614 	andeq	r2, r0, r4, lsl r6
    2cdc:	001b380a 	andseq	r3, fp, sl, lsl #16
    2ce0:	00021210 	andeq	r1, r2, r0, lsl r2
    2ce4:	1b460c00 	blne	1185cec <__RAM_SIZE+0x1085cec>
    2ce8:	02121000 	andseq	r1, r2, #0
    2cec:	010d0000 	mrseq	r0, (UNDEF: 13)
    2cf0:	003a0150 	eorseq	r0, sl, r0, asr r1
    2cf4:	bb011000 	bllt	46cfc <__HEAP_SIZE+0x45cfc>
    2cf8:	05000006 	streq	r0, [r0, #-6]
    2cfc:	790105d9 	stmdbvc	r1, {r0, r3, r4, r6, r7, r8, sl}
	...
    2d08:	02000000 	andeq	r0, r0, #0
    2d0c:	1101007d 	tstne	r1, sp, ror r0
    2d10:	00042401 	andeq	r2, r4, r1, lsl #8
    2d14:	05dc0500 	ldrbeq	r0, [ip, #1280]	; 0x500
    2d18:	00007901 	andeq	r7, r0, r1, lsl #18
    2d1c:	001b1800 	andseq	r1, fp, r0, lsl #16
    2d20:	001b2c10 	andseq	r2, fp, r0, lsl ip
    2d24:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    2d28:	68631201 	stmdavs	r3!, {r0, r9, ip}^
    2d2c:	01250100 			; <UNDEFINED> instruction: 0x01250100
    2d30:	00000079 	andeq	r0, r0, r9, ror r0
    2d34:	00002639 	andeq	r2, r0, r9, lsr r6
    2d38:	00002637 	andeq	r2, r0, r7, lsr r6
    2d3c:	08350000 	ldmdaeq	r5!, {}	; <UNPREDICTABLE>
    2d40:	00020000 	andeq	r0, r2, r0
    2d44:	0000079d 	muleq	r0, sp, r7
    2d48:	01880104 	orreq	r0, r8, r4, lsl #2
    2d4c:	930c0000 	movwls	r0, #49152	; 0xc000
    2d50:	1a000007 	bne	2d74 <__HEAP_SIZE+0x1d74>
    2d54:	20000000 	andcs	r0, r0, r0
    2d58:	00000002 	andeq	r0, r0, r2
    2d5c:	00000000 	andeq	r0, r0, r0
    2d60:	fb000000 	blx	2d6a <__HEAP_SIZE+0x1d6a>
    2d64:	0200001a 	andeq	r0, r0, #26
    2d68:	02720601 	rsbseq	r0, r2, #1048576	; 0x100000
    2d6c:	01020000 	mrseq	r0, (UNDEF: 2)
    2d70:	00027008 	andeq	r7, r2, r8
    2d74:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    2d78:	0000006d 	andeq	r0, r0, sp, rrx
    2d7c:	0006ff03 	andeq	pc, r6, r3, lsl #30
    2d80:	19390300 	ldmdbne	r9!, {r8, r9}
    2d84:	0000004a 	andeq	r0, r0, sl, asr #32
    2d88:	02070202 	andeq	r0, r7, #536870912	; 0x20000000
    2d8c:	02000003 	andeq	r0, r0, #3
    2d90:	01690504 	cmneq	r9, r4, lsl #10
    2d94:	9f030000 	svcls	0x00030000
    2d98:	03000000 	movweq	r0, #0
    2d9c:	0064194f 	rsbeq	r1, r4, pc, asr #18
    2da0:	04020000 	streq	r0, [r2], #-0
    2da4:	0002b107 	andeq	fp, r2, r7, lsl #2
    2da8:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    2dac:	00000164 	andeq	r0, r0, r4, ror #2
    2db0:	ac070802 	stcge	8, cr0, [r7], {2}
    2db4:	04000002 	streq	r0, [r0], #-2
    2db8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    2dbc:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    2dc0:	0002b607 	andeq	fp, r2, r7, lsl #12
    2dc4:	00800500 	addeq	r0, r0, r0, lsl #10
    2dc8:	5f030000 	svcpl	0x00030000
    2dcc:	04000004 	streq	r0, [r0], #-4
    2dd0:	008017d1 	ldrdeq	r1, [r0], r1	; <UNPREDICTABLE>
    2dd4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2dd8:	00009304 	andeq	r9, r0, r4, lsl #6
    2ddc:	08010200 	stmdaeq	r1, {r9}
    2de0:	00000279 	andeq	r0, r0, r9, ror r2
    2de4:	00070103 	andeq	r0, r7, r3, lsl #2
    2de8:	14240500 	strtne	r0, [r4], #-1280	; 0xfffffb00
    2dec:	0000003e 	andeq	r0, r0, lr, lsr r0
    2df0:	0000a103 	andeq	sl, r0, r3, lsl #2
    2df4:	14300500 	ldrtne	r0, [r0], #-1280	; 0xfffffb00
    2df8:	00000058 	andeq	r0, r0, r8, asr r0
    2dfc:	00077e03 	andeq	r7, r7, r3, lsl #28
    2e00:	23240600 			; <UNDEFINED> instruction: 0x23240600
    2e04:	000000ca 	andeq	r0, r0, sl, asr #1
    2e08:	0007c106 	andeq	ip, r7, r6, lsl #2
    2e0c:	25062000 	strcs	r2, [r6, #-0]
    2e10:	00014a08 	andeq	r4, r1, r8, lsl #20
    2e14:	30720700 	rsbscc	r0, r2, r0, lsl #14
    2e18:	12260600 	eorne	r0, r6, #0, 12
    2e1c:	00000080 	andeq	r0, r0, r0, lsl #1
    2e20:	07002302 	streq	r2, [r0, -r2, lsl #6]
    2e24:	06003172 			; <UNDEFINED> instruction: 0x06003172
    2e28:	00801227 	addeq	r1, r0, r7, lsr #4
    2e2c:	23020000 	movwcs	r0, #8192	; 0x2000
    2e30:	32720704 	rsbscc	r0, r2, #4, 14	; 0x100000
    2e34:	12280600 	eorne	r0, r8, #0, 12
    2e38:	00000080 	andeq	r0, r0, r0, lsl #1
    2e3c:	07082302 	streq	r2, [r8, -r2, lsl #6]
    2e40:	06003372 			; <UNDEFINED> instruction: 0x06003372
    2e44:	00801229 	addeq	r1, r0, r9, lsr #4
    2e48:	23020000 	movwcs	r0, #8192	; 0x2000
    2e4c:	3172070c 	cmncc	r2, ip, lsl #14
    2e50:	2a060032 	bcs	182f20 <__RAM_SIZE+0x82f20>
    2e54:	00008012 	andeq	r8, r0, r2, lsl r0
    2e58:	10230200 	eorne	r0, r3, r0, lsl #4
    2e5c:	00726c07 	rsbseq	r6, r2, r7, lsl #24
    2e60:	80122b06 	andshi	r2, r2, r6, lsl #22
    2e64:	02000000 	andeq	r0, r0, #0
    2e68:	70071423 	andvc	r1, r7, r3, lsr #8
    2e6c:	2c060063 	stccs	0, cr0, [r6], {99}	; 0x63
    2e70:	00008012 	andeq	r8, r0, r2, lsl r0
    2e74:	18230200 	stmdane	r3!, {r9}
    2e78:	72737007 	rsbsvc	r7, r3, #7
    2e7c:	122d0600 	eorne	r0, sp, #0, 12
    2e80:	00000080 	andeq	r0, r0, r0, lsl #1
    2e84:	001c2302 	andseq	r2, ip, r2, lsl #6
    2e88:	00073a03 	andeq	r3, r7, r3, lsl #20
    2e8c:	23300600 	teqcs	r0, #0, 12
    2e90:	00000156 	andeq	r0, r0, r6, asr r1
    2e94:	00075f06 	andeq	r5, r7, r6, lsl #30
    2e98:	31062000 	mrscc	r2, (UNDEF: 6)
    2e9c:	0001d608 	andeq	sp, r1, r8, lsl #12
    2ea0:	34720700 	ldrbtcc	r0, [r2], #-1792	; 0xfffff900
    2ea4:	12320600 	eorsne	r0, r2, #0, 12
    2ea8:	00000080 	andeq	r0, r0, r0, lsl #1
    2eac:	07002302 	streq	r2, [r0, -r2, lsl #6]
    2eb0:	06003572 			; <UNDEFINED> instruction: 0x06003572
    2eb4:	00801233 	addeq	r1, r0, r3, lsr r2
    2eb8:	23020000 	movwcs	r0, #8192	; 0x2000
    2ebc:	36720704 	ldrbtcc	r0, [r2], -r4, lsl #14
    2ec0:	12340600 	eorsne	r0, r4, #0, 12
    2ec4:	00000080 	andeq	r0, r0, r0, lsl #1
    2ec8:	07082302 	streq	r2, [r8, -r2, lsl #6]
    2ecc:	06003772 			; <UNDEFINED> instruction: 0x06003772
    2ed0:	00801235 	addeq	r1, r0, r5, lsr r2
    2ed4:	23020000 	movwcs	r0, #8192	; 0x2000
    2ed8:	3872070c 	ldmdacc	r2!, {r2, r3, r8, r9, sl}^
    2edc:	12360600 	eorsne	r0, r6, #0, 12
    2ee0:	00000080 	andeq	r0, r0, r0, lsl #1
    2ee4:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    2ee8:	06003972 			; <UNDEFINED> instruction: 0x06003972
    2eec:	00801237 	addeq	r1, r0, r7, lsr r2
    2ef0:	23020000 	movwcs	r0, #8192	; 0x2000
    2ef4:	31720714 	cmncc	r2, r4, lsl r7
    2ef8:	38060030 	stmdacc	r6, {r4, r5}
    2efc:	00008012 	andeq	r8, r0, r2, lsl r0
    2f00:	18230200 	stmdane	r3!, {r9}
    2f04:	31317207 	teqcc	r1, r7, lsl #4
    2f08:	12390600 	eorsne	r0, r9, #0, 12
    2f0c:	00000080 	andeq	r0, r0, r0, lsl #1
    2f10:	001c2302 	andseq	r2, ip, r2, lsl #6
    2f14:	0006e703 	andeq	lr, r6, r3, lsl #14
    2f18:	1c3c0600 	ldcne	6, cr0, [ip], #-0
    2f1c:	000001e2 	andeq	r0, r0, r2, ror #3
    2f20:	00077206 	andeq	r7, r7, r6, lsl #4
    2f24:	3d064000 	stccc	0, cr4, [r6, #-0]
    2f28:	00020e08 	andeq	r0, r2, r8, lsl #28
    2f2c:	076b0800 	strbeq	r0, [fp, -r0, lsl #16]!
    2f30:	3e060000 	cdpcc	0, 0, cr0, cr6, cr0, {0}
    2f34:	00014a1a 	andeq	r4, r1, sl, lsl sl
    2f38:	00230200 	eoreq	r0, r3, r0, lsl #4
    2f3c:	0007cd08 	andeq	ip, r7, r8, lsl #26
    2f40:	1a3f0600 	bne	fc4748 <__RAM_SIZE+0xec4748>
    2f44:	000000be 	strheq	r0, [r0], -lr
    2f48:	00202302 	eoreq	r2, r0, r2, lsl #6
    2f4c:	0007fa09 	andeq	pc, r7, r9, lsl #20
    2f50:	151d0100 	ldrne	r0, [sp, #-256]	; 0xffffff00
    2f54:	00000080 	andeq	r0, r0, r0, lsl #1
    2f58:	14090101 	strne	r0, [r9], #-257	; 0xfffffeff
    2f5c:	01000008 	tsteq	r0, r8
    2f60:	0080151e 	addeq	r1, r0, lr, lsl r5
    2f64:	01010000 	mrseq	r0, (UNDEF: 1)
    2f68:	00070a09 	andeq	r0, r7, r9, lsl #20
    2f6c:	151f0100 	ldrne	r0, [pc, #-256]	; 2e74 <__HEAP_SIZE+0x1e74>
    2f70:	00000080 	andeq	r0, r0, r0, lsl #1
    2f74:	24090101 	strcs	r0, [r9], #-257	; 0xfffffeff
    2f78:	01000007 	tsteq	r0, r7
    2f7c:	00801520 	addeq	r1, r0, r0, lsr #10
    2f80:	01010000 	mrseq	r0, (UNDEF: 1)
    2f84:	0008010a 	andeq	r0, r8, sl, lsl #2
    2f88:	17660100 	strbne	r0, [r6, -r0, lsl #2]!
    2f8c:	00000087 	andeq	r0, r0, r7, lsl #1
    2f90:	5c030501 	cfstr32pl	mvfx0, [r3], {1}
    2f94:	0a380005 	beq	e02fb0 <__RAM_SIZE+0xd02fb0>
    2f98:	000007e7 	andeq	r0, r0, r7, ror #15
    2f9c:	87176701 	ldrhi	r6, [r7, -r1, lsl #14]
    2fa0:	01000000 	mrseq	r0, (UNDEF: 0)
    2fa4:	05600305 	strbeq	r0, [r0, #-773]!	; 0xfffffcfb
    2fa8:	010b3800 	tsteq	fp, r0, lsl #16
    2fac:	000000e2 	andeq	r0, r0, r2, ror #1
    2fb0:	010ef901 	tsteq	lr, r1, lsl #18	; <UNPREDICTABLE>
    2fb4:	00000080 	andeq	r0, r0, r0, lsl #1
    2fb8:	10001e34 	andne	r1, r0, r4, lsr lr
    2fbc:	10001e3c 	andne	r1, r0, ip, lsr lr
    2fc0:	01007d02 	tsteq	r0, r2, lsl #26
    2fc4:	0124010c 			; <UNDEFINED> instruction: 0x0124010c
    2fc8:	f5010000 			; <UNDEFINED> instruction: 0xf5010000
    2fcc:	0080010e 	addeq	r0, r0, lr, lsl #2
    2fd0:	1e2c0000 	cdpne	0, 2, cr0, cr12, cr0, {0}
    2fd4:	1e321000 	cdpne	0, 3, cr1, cr2, cr0, {0}
    2fd8:	7d021000 	stcvc	0, cr1, [r2, #-0]
    2fdc:	02c80100 	sbceq	r0, r8, #0, 2
    2fe0:	fc0d0000 	stc2	0, cr0, [sp], {-0}
    2fe4:	2c000007 	stccs	0, cr0, [r0], {7}
    2fe8:	0210001e 	andseq	r0, r0, #30
    2fec:	10001e2c 	andne	r1, r0, ip, lsr #28
    2ff0:	10001e30 	andne	r1, r0, r0, lsr lr
    2ff4:	0e0cf601 	cfmadd32eq	mvax0, mvfx15, mvfx12, mvfx1
    2ff8:	0000080f 	andeq	r0, r0, pc, lsl #16
    2ffc:	0000264e 	andeq	r2, r0, lr, asr #12
    3000:	0000264c 	andeq	r2, r0, ip, asr #12
    3004:	010f0000 	mrseq	r0, CPSR
    3008:	00000246 	andeq	r0, r0, r6, asr #4
    300c:	0105c901 	tsteq	r5, r1, lsl #18
    3010:	00000079 	andeq	r0, r0, r9, ror r0
    3014:	10001c24 	andne	r1, r0, r4, lsr #24
    3018:	10001ca0 	andne	r1, r0, r0, lsr #25
    301c:	00002661 	andeq	r2, r0, r1, ror #12
    3020:	0003a201 	andeq	sl, r3, r1, lsl #4
    3024:	04ac1000 	strteq	r1, [ip], #0
    3028:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    302c:	0003a228 	andeq	sl, r3, r8, lsr #4
    3030:	00268900 	eoreq	r8, r6, r0, lsl #18
    3034:	00268100 	eoreq	r8, r6, r0, lsl #2
    3038:	048f1000 	streq	r1, [pc], #0	; 3040 <__HEAP_SIZE+0x2040>
    303c:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    3040:	00008c37 	andeq	r8, r0, r7, lsr ip
    3044:	0026c800 	eoreq	ip, r6, r0, lsl #16
    3048:	0026c000 	eoreq	ip, r6, r0
    304c:	01321000 	teqeq	r2, r0
    3050:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    3054:	0003a24b 	andeq	sl, r3, fp, asr #4
    3058:	00270500 	eoreq	r0, r7, r0, lsl #10
    305c:	0026ff00 	eoreq	pc, r6, r0, lsl #30
    3060:	00f01000 	rscseq	r1, r0, r0
    3064:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    3068:	0003a266 	andeq	sl, r3, r6, ror #4
    306c:	00273900 	eoreq	r3, r7, r0, lsl #18
    3070:	00273100 	eoreq	r3, r7, r0, lsl #2
    3074:	038a1100 	orreq	r1, sl, #0, 2
    3078:	ca010000 	bgt	43080 <__HEAP_SIZE+0x42080>
    307c:	00007909 	andeq	r7, r0, r9, lsl #18
    3080:	00277600 	eoreq	r7, r7, r0, lsl #12
    3084:	00277000 	eoreq	r7, r7, r0
    3088:	63701200 	cmnvs	r0, #0, 4
    308c:	12cb0100 	sbcne	r0, fp, #0, 2
    3090:	00000080 	andeq	r0, r0, r0, lsl #1
    3094:	000027ab 	andeq	r2, r0, fp, lsr #15
    3098:	000027a1 	andeq	r2, r0, r1, lsr #15
    309c:	00706f12 	rsbseq	r6, r0, r2, lsl pc
    30a0:	801acb01 	andshi	ip, sl, r1, lsl #22
    30a4:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    30a8:	ee000027 	cdp	0, 0, cr0, cr0, cr7, {1}
    30ac:	12000027 	andne	r0, r0, #39	; 0x27
    30b0:	01007073 	tsteq	r0, r3, ror r0
    30b4:	03a223cb 			; <UNDEFINED> instruction: 0x03a223cb
    30b8:	28250000 	stmdacs	r5!, {}	; <UNPREDICTABLE>
    30bc:	281f0000 	ldmdacs	pc, {}	; <UNPREDICTABLE>
    30c0:	66130000 	ldrvs	r0, [r3], -r0
    30c4:	1910001c 	ldmdbne	r0, {r2, r3, r4}
    30c8:	98000007 	stmdals	r0, {r0, r1, r2}
    30cc:	14000003 	strne	r0, [r0], #-3
    30d0:	79025001 	stmdbvc	r2, {r0, ip, lr}
    30d4:	6a150000 	bvs	5430dc <__RAM_SIZE+0x4430dc>
    30d8:	b810001c 	ldmdalt	r0, {r2, r3, r4}
    30dc:	00000006 	andeq	r0, r0, r6
    30e0:	00800416 	addeq	r0, r0, r6, lsl r4
    30e4:	01170000 	tsteq	r7, r0
    30e8:	000007d4 	ldrdeq	r0, [r0], -r4
    30ec:	01068e01 	tsteq	r6, r1, lsl #28
    30f0:	10001ca0 	andne	r1, r0, r0, lsr #25
    30f4:	10001e2c 	andne	r1, r0, ip, lsr #28
    30f8:	00002850 	andeq	r2, r0, r0, asr r8
    30fc:	0006a801 	andeq	sl, r6, r1, lsl #16
    3100:	07261000 	streq	r1, [r6, -r0]!
    3104:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    3108:	0003a227 	andeq	sl, r3, r7, lsr #4
    310c:	00287600 	eoreq	r7, r8, r0, lsl #12
    3110:	00287000 	eoreq	r7, r8, r0
    3114:	07331000 	ldreq	r1, [r3, -r0]!
    3118:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    311c:	0000803b 	andeq	r8, r0, fp, lsr r0
    3120:	0028a600 	eoreq	sl, r8, r0, lsl #12
    3124:	0028a200 	eoreq	sl, r8, r0, lsl #4
    3128:	038a1100 	orreq	r1, sl, #0, 2
    312c:	8f010000 	svchi	0x00010000
    3130:	00007909 	andeq	r7, r0, r9, lsl #18
    3134:	0028ca00 	eoreq	ip, r8, r0, lsl #20
    3138:	0028c400 	eoreq	ip, r8, r0, lsl #8
    313c:	06c31100 	strbeq	r1, [r3], r0, lsl #2
    3140:	8f010000 	svchi	0x00010000
    3144:	00007914 	andeq	r7, r0, r4, lsl r9
    3148:	0028fc00 	eoreq	pc, r8, r0, lsl #24
    314c:	0028f400 	eoreq	pc, r8, r0, lsl #8
    3150:	01381100 	teqeq	r8, r0, lsl #2
    3154:	90010000 	andls	r0, r1, r0
    3158:	0003a213 	andeq	sl, r3, r3, lsl r2
    315c:	00295900 	eoreq	r5, r9, r0, lsl #18
    3160:	00293300 	eoreq	r3, r9, r0, lsl #6
    3164:	07781800 	ldrbeq	r1, [r8, -r0, lsl #16]!
    3168:	91010000 	mrsls	r0, (UNDEF: 1)
    316c:	0001d61a 	andeq	sp, r1, sl, lsl r6
    3170:	64030500 	strvs	r0, [r3], #-1280	; 0xfffffb00
    3174:	18380005 	ldmdane	r8!, {r0, r2}
    3178:	000004ac 	andeq	r0, r0, ip, lsr #9
    317c:	a8199201 	ldmdage	r9, {r0, r9, ip, pc}
    3180:	05000006 	streq	r0, [r0, #-6]
    3184:	00045c03 	andeq	r5, r4, r3, lsl #24
    3188:	1cf01338 	ldclne	3, cr1, [r0], #224	; 0xe0
    318c:	081d1000 	ldmdaeq	sp, {ip}
    3190:	045f0000 	ldrbeq	r0, [pc], #-0	; 3198 <__HEAP_SIZE+0x2198>
    3194:	01140000 	tsteq	r4, r0
    3198:	00770250 	rsbseq	r0, r7, r0, asr r2
    319c:	1cf61300 	ldclne	3, cr1, [r6]
    31a0:	081d1000 	ldmdaeq	sp, {ip}
    31a4:	04760000 	ldrbteq	r0, [r6], #-0
    31a8:	01140000 	tsteq	r4, r0
    31ac:	80030550 	andhi	r0, r3, r0, asr r5
    31b0:	0010003f 	andseq	r0, r0, pc, lsr r0
    31b4:	001cfc13 	andseq	pc, ip, r3, lsl ip	; <UNPREDICTABLE>
    31b8:	00081d10 	andeq	r1, r8, r0, lsl sp
    31bc:	00048d00 	andeq	r8, r4, r0, lsl #26
    31c0:	50011400 	andpl	r1, r1, r0, lsl #8
    31c4:	3fa00305 	svccc	0x00a00305
    31c8:	13001000 	movwne	r1, #0
    31cc:	10001d04 	andne	r1, r0, r4, lsl #26
    31d0:	0000082a 	andeq	r0, r0, sl, lsr #16
    31d4:	000004a4 	andeq	r0, r0, r4, lsr #9
    31d8:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    31dc:	003fb403 	eorseq	fp, pc, r3, lsl #8
    31e0:	0c130010 	ldceq	0, cr0, [r3], {16}
    31e4:	2a10001d 	bcs	403260 <__RAM_SIZE+0x303260>
    31e8:	bb000008 	bllt	3210 <__HEAP_SIZE+0x2210>
    31ec:	14000004 	strne	r0, [r0], #-4
    31f0:	03055001 	movweq	r5, #20481	; 0x5001
    31f4:	10003fc8 	andne	r3, r0, r8, asr #31
    31f8:	1d141300 	ldcne	3, cr1, [r4, #-0]
    31fc:	082a1000 	stmdaeq	sl!, {ip}
    3200:	04d20000 	ldrbeq	r0, [r2], #0
    3204:	01140000 	tsteq	r4, r0
    3208:	dc030550 	cfstr32le	mvfx0, [r3], {80}	; 0x50
    320c:	0010003f 	andseq	r0, r0, pc, lsr r0
    3210:	001d1c13 	andseq	r1, sp, r3, lsl ip
    3214:	00082a10 	andeq	r2, r8, r0, lsl sl
    3218:	0004e900 	andeq	lr, r4, r0, lsl #18
    321c:	50011400 	andpl	r1, r1, r0, lsl #8
    3220:	3ff00305 	svccc	0x00f00305
    3224:	13001000 	movwne	r1, #0
    3228:	10001d24 	andne	r1, r0, r4, lsr #26
    322c:	0000082a 	andeq	r0, r0, sl, lsr #16
    3230:	00000500 	andeq	r0, r0, r0, lsl #10
    3234:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    3238:	00400403 	subeq	r0, r0, r3, lsl #8
    323c:	2c130010 	ldccs	0, cr0, [r3], {16}
    3240:	2a10001d 	bcs	4032bc <__RAM_SIZE+0x3032bc>
    3244:	17000008 	strne	r0, [r0, -r8]
    3248:	14000005 	strne	r0, [r0], #-5
    324c:	03055001 	movweq	r5, #20481	; 0x5001
    3250:	10004018 	andne	r4, r0, r8, lsl r0
    3254:	1d341300 	ldcne	3, cr1, [r4, #-0]
    3258:	082a1000 	stmdaeq	sl!, {ip}
    325c:	052e0000 	streq	r0, [lr, #-0]!
    3260:	01140000 	tsteq	r4, r0
    3264:	2c030550 	cfstr32cs	mvfx0, [r3], {80}	; 0x50
    3268:	00100040 	andseq	r0, r0, r0, asr #32
    326c:	001d3c13 	andseq	r3, sp, r3, lsl ip
    3270:	00082a10 	andeq	r2, r8, r0, lsl sl
    3274:	00054500 	andeq	r4, r5, r0, lsl #10
    3278:	50011400 	andpl	r1, r1, r0, lsl #8
    327c:	40400305 	submi	r0, r0, r5, lsl #6
    3280:	13001000 	movwne	r1, #0
    3284:	10001d44 	andne	r1, r0, r4, asr #26
    3288:	0000082a 	andeq	r0, r0, sl, lsr #16
    328c:	0000055c 	andeq	r0, r0, ip, asr r5
    3290:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    3294:	00405403 	subeq	r5, r0, r3, lsl #8
    3298:	4c130010 	ldcmi	0, cr0, [r3], {16}
    329c:	2a10001d 	bcs	403318 <__RAM_SIZE+0x303318>
    32a0:	73000008 	movwvc	r0, #8
    32a4:	14000005 	strne	r0, [r0], #-5
    32a8:	03055001 	movweq	r5, #20481	; 0x5001
    32ac:	10004068 	andne	r4, r0, r8, rrx
    32b0:	1d541300 	ldclne	3, cr1, [r4, #-0]
    32b4:	082a1000 	stmdaeq	sl!, {ip}
    32b8:	058a0000 	streq	r0, [sl]
    32bc:	01140000 	tsteq	r4, r0
    32c0:	7c030550 	cfstr32vc	mvfx0, [r3], {80}	; 0x50
    32c4:	00100040 	andseq	r0, r0, r0, asr #32
    32c8:	001d5c13 	andseq	r5, sp, r3, lsl ip
    32cc:	00082a10 	andeq	r2, r8, r0, lsl sl
    32d0:	0005a100 	andeq	sl, r5, r0, lsl #2
    32d4:	50011400 	andpl	r1, r1, r0, lsl #8
    32d8:	40900305 	addsmi	r0, r0, r5, lsl #6
    32dc:	13001000 	movwne	r1, #0
    32e0:	10001d64 	andne	r1, r0, r4, ror #26
    32e4:	0000082a 	andeq	r0, r0, sl, lsr #16
    32e8:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
    32ec:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    32f0:	0040a403 	subeq	sl, r0, r3, lsl #8
    32f4:	6c130010 	ldcvs	0, cr0, [r3], {16}
    32f8:	2a10001d 	bcs	403374 <__RAM_SIZE+0x303374>
    32fc:	cf000008 	svcgt	0x00000008
    3300:	14000005 	strne	r0, [r0], #-5
    3304:	03055001 	movweq	r5, #20481	; 0x5001
    3308:	100040b8 	strhne	r4, [r0], -r8
    330c:	1d741300 	ldclne	3, cr1, [r4, #-0]
    3310:	082a1000 	stmdaeq	sl!, {ip}
    3314:	05e60000 	strbeq	r0, [r6, #0]!
    3318:	01140000 	tsteq	r4, r0
    331c:	cc030550 	cfstr32gt	mvfx0, [r3], {80}	; 0x50
    3320:	00100040 	andseq	r0, r0, r0, asr #32
    3324:	001d7c13 	andseq	r7, sp, r3, lsl ip
    3328:	00082a10 	andeq	r2, r8, r0, lsl sl
    332c:	0005fd00 	andeq	pc, r5, r0, lsl #26
    3330:	50011400 	andpl	r1, r1, r0, lsl #8
    3334:	40e00305 	rscmi	r0, r0, r5, lsl #6
    3338:	13001000 	movwne	r1, #0
    333c:	10001d82 	andne	r1, r0, r2, lsl #27
    3340:	0000081d 	andeq	r0, r0, sp, lsl r8
    3344:	00000611 	andeq	r0, r0, r1, lsl r6
    3348:	02500114 	subseq	r0, r0, #20, 2
    334c:	13000077 	movwne	r0, #119	; 0x77
    3350:	10001d8a 	andne	r1, r0, sl, lsl #27
    3354:	0000082a 	andeq	r0, r0, sl, lsr #16
    3358:	0000062e 	andeq	r0, r0, lr, lsr #12
    335c:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    3360:	0040f403 	subeq	pc, r0, r3, lsl #8
    3364:	51011410 	tstpl	r1, r0, lsl r4
    3368:	00007602 	andeq	r7, r0, r2, lsl #12
    336c:	001d9813 	andseq	r9, sp, r3, lsl r8
    3370:	0002c810 	andeq	ip, r2, r0, lsl r8
    3374:	00065200 	andeq	r5, r6, r0, lsl #4
    3378:	50011400 	andpl	r1, r1, r0, lsl #8
    337c:	045c0305 	ldrbeq	r0, [ip], #-773	; 0xfffffcfb
    3380:	01143800 	tsteq	r4, r0, lsl #16
    3384:	40080251 	andmi	r0, r8, r1, asr r2
    3388:	03520114 	cmpeq	r2, #20, 2
    338c:	0000c075 	andeq	ip, r0, r5, ror r0
    3390:	001da013 	andseq	sl, sp, r3, lsl r0
    3394:	00082a10 	andeq	r2, r8, r0, lsl sl
    3398:	00066900 	andeq	r6, r6, r0, lsl #18
    339c:	50011400 	andpl	r1, r1, r0, lsl #8
    33a0:	410c0305 	tstmi	ip, r5, lsl #6
    33a4:	13001000 	movwne	r1, #0
    33a8:	10001da8 	andne	r1, r0, r8, lsr #27
    33ac:	0000082a 	andeq	r0, r0, sl, lsr #16
    33b0:	00000680 	andeq	r0, r0, r0, lsl #13
    33b4:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    33b8:	003e4403 	eorseq	r4, lr, r3, lsl #8
    33bc:	b8130010 	ldmdalt	r3, {r4}
    33c0:	2a10001d 	bcs	40343c <__RAM_SIZE+0x30343c>
    33c4:	97000008 	strls	r0, [r0, -r8]
    33c8:	14000006 	strne	r0, [r0], #-6
    33cc:	03055001 	movweq	r5, #20481	; 0x5001
    33d0:	10003e44 	andne	r3, r0, r4, asr #28
    33d4:	1dc41900 	vstrne.16	s3, [r4]	; <UNPREDICTABLE>
    33d8:	081d1000 	ldmdaeq	sp, {ip}
    33dc:	01140000 	tsteq	r4, r0
    33e0:	00770250 	rsbseq	r0, r7, r0, asr r2
    33e4:	801a0000 	andshi	r0, sl, r0
    33e8:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    33ec:	1b000006 	blne	340c <__HEAP_SIZE+0x240c>
    33f0:	00000080 	andeq	r0, r0, r0, lsl #1
    33f4:	d31c003f 	tstle	ip, #63	; 0x3f
    33f8:	01000006 	tsteq	r0, r6
    33fc:	12010d7f 	andne	r0, r1, #8128	; 0x1fc0
    3400:	9c000007 	stcls	0, cr0, [r0], {7}
    3404:	d210001b 	andsle	r0, r0, #27
    3408:	0210001b 	andseq	r0, r0, #27
    340c:	1201007d 	andne	r0, r1, #125	; 0x7d
    3410:	1d000007 	stcne	0, cr0, [r0, #-28]	; 0xffffffe4
    3414:	00736e69 	rsbseq	r6, r3, r9, ror #28
    3418:	802e7f01 	eorhi	r7, lr, r1, lsl #30
    341c:	5f000000 	svcpl	0x00000000
    3420:	5b00002a 	blpl	34d0 <__HEAP_SIZE+0x24d0>
    3424:	1100002a 	tstne	r0, sl, lsr #32
    3428:	0000074f 	andeq	r0, r0, pc, asr #14
    342c:	a60e8301 	strge	r8, [lr], -r1, lsl #6
    3430:	82000000 	andhi	r0, r0, #0
    3434:	8000002a 	andhi	r0, r0, sl, lsr #32
    3438:	1100002a 	tstne	r0, sl, lsr #32
    343c:	00000757 	andeq	r0, r0, r7, asr r7
    3440:	a60e8401 	strge	r8, [lr], -r1, lsl #8
    3444:	a9000000 	stmdbge	r0, {}	; <UNPREDICTABLE>
    3448:	9500002a 	strls	r0, [r0, #-42]	; 0xffffffd6
    344c:	0000002a 	andeq	r0, r0, sl, lsr #32
    3450:	bb020102 	bllt	83860 <__HEAP_SIZE+0x82860>
    3454:	1e000005 	cdpne	0, 0, cr0, cr0, cr5, {0}
    3458:	00000712 	andeq	r0, r0, r2, lsl r7
    345c:	01157401 	tsteq	r5, r1, lsl #8
    3460:	00000080 	andeq	r0, r0, r0, lsl #1
    3464:	10001b70 	andne	r1, r0, r0, ror fp
    3468:	10001b9c 	mulne	r0, ip, fp
    346c:	00002b4c 	andeq	r2, r0, ip, asr #22
    3470:	00078a01 	andeq	r8, r7, r1, lsl #20
    3474:	63701d00 	cmnvs	r0, #0, 26
    3478:	34740100 	ldrbtcc	r0, [r4], #-256	; 0xffffff00
    347c:	00000080 	andeq	r0, r0, r0, lsl #1
    3480:	00002b7c 	andeq	r2, r0, ip, ror fp
    3484:	00002b78 	andeq	r2, r0, r8, ror fp
    3488:	0000c118 	andeq	ip, r0, r8, lsl r1
    348c:	0e750100 	rpweqs	f0, f5, f0
    3490:	0000078a 	andeq	r0, r0, sl, lsl #15
    3494:	117c9102 	cmnne	ip, r2, lsl #2
    3498:	0000071d 	andeq	r0, r0, sp, lsl r7
    349c:	80127601 	andshi	r7, r2, r1, lsl #12
    34a0:	a3000000 	movwge	r0, #0
    34a4:	9d00002b 	stcls	0, cr0, [r0, #-172]	; 0xffffff54
    34a8:	1f00002b 	svcne	0x0000002b
    34ac:	10001b76 	andne	r1, r0, r6, ror fp
    34b0:	10001b8c 	andne	r1, r0, ip, lsl #23
    34b4:	01006912 	tsteq	r0, r2, lsl r9
    34b8:	00790e77 	rsbseq	r0, r9, r7, ror lr
    34bc:	2bd80000 	blcs	ff6034c4 <__StackTop+0xc75034c4>
    34c0:	2bd40000 	blcs	ff5034c8 <__StackTop+0xc74034c8>
    34c4:	00000000 	andeq	r0, r0, r0
    34c8:	0000a61a 	andeq	sl, r0, sl, lsl r6
    34cc:	00079a00 	andeq	r9, r7, r0, lsl #20
    34d0:	00801b00 	addeq	r1, r0, r0, lsl #22
    34d4:	00010000 	andeq	r0, r1, r0
    34d8:	028e0117 	addeq	r0, lr, #-1073741819	; 0xc0000005
    34dc:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
    34e0:	1bd40106 	blne	ff503900 <__StackTop+0xc7403900>
    34e4:	1c241000 	stcne	0, cr1, [r4], #-0
    34e8:	2bf71000 	blcs	ffdc74f0 <__StackTop+0xc7cc74f0>
    34ec:	fc010000 	stc2	0, cr0, [r1], {-0}
    34f0:	13000007 	movwne	r0, #7
    34f4:	10001bea 	andne	r1, r0, sl, ror #23
    34f8:	0000082a 	andeq	r0, r0, sl, lsr #16
    34fc:	000007cc 	andeq	r0, r0, ip, asr #15
    3500:	05500114 	ldrbeq	r0, [r0, #-276]	; 0xfffffeec
    3504:	003f1803 	eorseq	r1, pc, r3, lsl #16
    3508:	f6130010 			; <UNDEFINED> instruction: 0xf6130010
    350c:	2a10001b 	bcs	403580 <__RAM_SIZE+0x303580>
    3510:	e3000008 	movw	r0, #8
    3514:	14000007 	strne	r0, [r0], #-7
    3518:	03055001 	movweq	r5, #20481	; 0x5001
    351c:	10003f3c 	andne	r3, r0, ip, lsr pc
    3520:	1bfe1900 	blne	fff89928 <__StackTop+0xc7e89928>
    3524:	082a1000 	stmdaeq	sl!, {ip}
    3528:	01140000 	tsteq	r4, r0
    352c:	60030550 	andvs	r0, r3, r0, asr r5
    3530:	1410003f 	ldrne	r0, [r0], #-63	; 0xffffffc1
    3534:	31015101 	tstcc	r1, r1, lsl #2
    3538:	f5200000 			; <UNDEFINED> instruction: 0xf5200000
    353c:	02000006 	andeq	r0, r0, #6
    3540:	011f0463 	tsteq	pc, r3, ror #8
    3544:	000000b2 	strheq	r0, [r0], -r2
    3548:	00081d03 	andeq	r1, r8, r3, lsl #26
    354c:	072c2100 	streq	r2, [ip, -r0, lsl #2]!
    3550:	65020000 	strvs	r0, [r2, #-0]
    3554:	00b20c04 	adcseq	r0, r2, r4, lsl #24
    3558:	22000000 	andcs	r0, r0, #0
    355c:	00100101 	andseq	r0, r0, r1, lsl #2
    3560:	00060000 	andeq	r0, r6, r0
    3564:	00070000 	andeq	r0, r7, r0
    3568:	2f010123 	svccs	0x00010123
    356c:	2f000005 	svccs	0x00000005
    3570:	08000005 	stmdaeq	r0, {r0, r2}
    3574:	220005c8 	andcs	r0, r0, #200, 10	; 0x32000000
    3578:	02000000 	andeq	r0, r0, #0
    357c:	000a0400 	andeq	r0, sl, r0, lsl #8
    3580:	81010400 	tsthi	r1, r0, lsl #8
    3584:	3c000020 	stccc	0, cr0, [r0], {32}
    3588:	ac10001e 	ldcge	0, cr0, [r0], {30}
    358c:	1b10001e 	blne	40360c <__RAM_SIZE+0x30360c>
    3590:	1a000008 	bne	35b8 <__HEAP_SIZE+0x25b8>
    3594:	2d000000 	stccs	0, cr0, [r0, #-0]
    3598:	01000008 	tsteq	r0, r8
    359c:	00002280 	andeq	r2, r0, r0, lsl #5
    35a0:	18000200 	stmdane	r0, {r9}
    35a4:	0400000a 	streq	r0, [r0], #-10
    35a8:	0020f901 	eoreq	pc, r0, r1, lsl #18
    35ac:	001eac00 	andseq	sl, lr, r0, lsl #24
    35b0:	001ef010 	andseq	pc, lr, r0, lsl r0	; <UNPREDICTABLE>
    35b4:	00083b10 	andeq	r3, r8, r0, lsl fp
    35b8:	00001a00 	andeq	r1, r0, r0, lsl #20
    35bc:	00082d00 	andeq	r2, r8, r0, lsl #26
    35c0:	Address 0x000035c0 is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
}
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    printf("c = %d\r\n", c);
  10:	00061001 	andeq	r1, r6, r1
}
  14:	00240200 	eoreq	r0, r4, r0, lsl #4
  18:	0b3e0b0b 	bleq	f82c4c <__RAM_SIZE+0xe82c4c>
  1c:	00000e03 	andeq	r0, r0, r3, lsl #28
  20:	03001603 	movweq	r1, #1539	; 0x603
  24:	3b0b3a0e 	blcc	2ce864 <__RAM_SIZE+0x1ce864>
  28:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  2c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
  30:	0b0b0024 	bleq	2c00c8 <__RAM_SIZE+0x1c00c8>
  34:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
  38:	35050000 	strcc	r0, [r5, #-0]
  3c:	00134900 	andseq	r4, r3, r0, lsl #18
  40:	00260600 	eoreq	r0, r6, r0, lsl #12
  44:	00001349 	andeq	r1, r0, r9, asr #6
  48:	0b011307 	bleq	44c6c <__HEAP_SIZE+0x43c6c>
  4c:	3b0b3a05 	blcc	2ce868 <__RAM_SIZE+0x1ce868>
  50:	010b3905 	tsteq	fp, r5, lsl #18
  54:	08000013 	stmdaeq	r0, {r0, r1, r4}
  58:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  5c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  60:	13490b39 	movtne	r0, #39737	; 0x9b39
  64:	00000a38 	andeq	r0, r0, r8, lsr sl
  68:	03000d09 	movweq	r0, #3337	; 0xd09
  6c:	3b0b3a08 	blcc	2ce894 <__RAM_SIZE+0x1ce894>
  70:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
  74:	000a3813 	andeq	r3, sl, r3, lsl r8
  78:	01010a00 	tsteq	r1, r0, lsl #20
  7c:	13011349 	movwne	r1, #4937	; 0x1349
  80:	210b0000 	mrscs	r0, (UNDEF: 11)
  84:	2f134900 	svccs	0x00134900
  88:	0c00000b 	stceq	0, cr0, [r0], {11}
  8c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
  90:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
  94:	13490b39 	movtne	r0, #39737	; 0x9b39
  98:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
  9c:	030c3f01 	movweq	r3, #52993	; 0xcf01
  a0:	3b0b3a0e 	blcc	2ce8e0 <__RAM_SIZE+0x1ce8e0>
  a4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  a8:	1113490c 	tstne	r3, ip, lsl #18
  ac:	40011201 	andmi	r1, r1, r1, lsl #4
  b0:	0c429706 	mcrreq	7, 0, r9, r2, cr6
  b4:	00001301 	andeq	r1, r0, r1, lsl #6
  b8:	0300340e 	movweq	r3, #1038	; 0x40e
  bc:	3b0b3a0e 	blcc	2ce8fc <__RAM_SIZE+0x1ce8fc>
  c0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  c4:	b7060213 	smladlt	r6, r3, r2, r0
  c8:	00000642 	andeq	r0, r0, r2, asr #12
  cc:	0182890f 	orreq	r8, r2, pc, lsl #18
  d0:	31011100 	mrscc	r1, (UNDEF: 17)
  d4:	10000013 	andne	r0, r0, r3, lsl r0
  d8:	01018289 	smlabbeq	r1, r9, r2, r8
  dc:	13310111 	teqne	r1, #1073741828	; 0x40000004
  e0:	00001301 	andeq	r1, r0, r1, lsl #6
  e4:	01828a11 	orreq	r8, r2, r1, lsl sl
  e8:	910a0200 	mrsls	r0, R10_fiq
  ec:	00000a42 	andeq	r0, r0, r2, asr #20
  f0:	01828912 	orreq	r8, r2, r2, lsl r9
  f4:	31011101 	tstcc	r1, r1, lsl #2
  f8:	13000013 	movwne	r0, #19
  fc:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 4c <__STACKSEAL_SIZE+0x4c>
 100:	0b3a0e03 	bleq	e83914 <__RAM_SIZE+0xd83914>
 104:	0b390b3b 	bleq	e42df8 <__RAM_SIZE+0xd42df8>
 108:	01110c27 	tsteq	r1, r7, lsr #24
 10c:	06400112 			; <UNDEFINED> instruction: 0x06400112
 110:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 114:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
 118:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 11c:	0c341349 	ldceq	3, cr1, [r4], #-292	; 0xfffffedc
 120:	00000a02 	andeq	r0, r0, r2, lsl #20
 124:	03003415 	movweq	r3, #1045	; 0x415
 128:	3b0b3a0e 	blcc	2ce968 <__RAM_SIZE+0x1ce968>
 12c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 130:	000a0213 	andeq	r0, sl, r3, lsl r2
 134:	010b1600 	tsteq	fp, r0, lsl #12
 138:	13010655 	movwne	r0, #5717	; 0x1655
 13c:	34170000 	ldrcc	r0, [r7], #-0
 140:	3a080300 	bcc	200d48 <__RAM_SIZE+0x100d48>
 144:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 148:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 14c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 150:	0f180000 	svceq	0x00180000
 154:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 158:	19000013 	stmdbne	r0, {r0, r1, r4}
 15c:	08030034 	stmdaeq	r3, {r2, r4, r5}
 160:	0b3b0b3a 	bleq	ec2e50 <__RAM_SIZE+0xdc2e50>
 164:	13490b39 	movtne	r0, #39737	; 0x9b39
 168:	00000b1c 	andeq	r0, r0, ip, lsl fp
 16c:	3f002e1a 	svccc	0x00002e1a
 170:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
 174:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
 178:	0b3b0b3a 	bleq	ec2e68 <__RAM_SIZE+0xdc2e68>
 17c:	00000b39 	andeq	r0, r0, r9, lsr fp
 180:	3f002e1b 	svccc	0x00002e1b
 184:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
 188:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
 18c:	0b3b0b3a 	bleq	ec2e7c <__RAM_SIZE+0xdc2e7c>
 190:	01000000 	mrseq	r0, (UNDEF: 0)
 194:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 198:	0e030b13 	vmoveq.32	d3[0], r0
 19c:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
 1a0:	01520111 	cmpeq	r2, r1, lsl r1
 1a4:	00000610 	andeq	r0, r0, r0, lsl r6
 1a8:	0b002402 	bleq	91b8 <__HEAP_SIZE+0x81b8>
 1ac:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 1b0:	0300000e 	movweq	r0, #14
 1b4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 1b8:	0b3b0b3a 	bleq	ec2ea8 <__RAM_SIZE+0xdc2ea8>
 1bc:	13490b39 	movtne	r0, #39737	; 0x9b39
 1c0:	24040000 	strcs	r0, [r4], #-0
 1c4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 1c8:	0008030b 	andeq	r0, r8, fp, lsl #6
 1cc:	00350500 	eorseq	r0, r5, r0, lsl #10
 1d0:	00001349 	andeq	r1, r0, r9, asr #6
 1d4:	49002606 	stmdbmi	r0, {r1, r2, r9, sl, sp}
 1d8:	07000013 	smladeq	r0, r3, r0, r0
 1dc:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
 1e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 1e4:	13010b39 	movwne	r0, #6969	; 0x1b39
 1e8:	0d080000 	stceq	0, cr0, [r8, #-0]
 1ec:	3a0e0300 	bcc	380df4 <__RAM_SIZE+0x280df4>
 1f0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 1f4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 1f8:	0900000a 	stmdbeq	r0, {r1, r3}
 1fc:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 200:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 204:	13490b39 	movtne	r0, #39737	; 0x9b39
 208:	00000a38 	andeq	r0, r0, r8, lsr sl
 20c:	4901010a 	stmdbmi	r1, {r1, r3, r8}
 210:	00130113 	andseq	r0, r3, r3, lsl r1
 214:	00210b00 	eoreq	r0, r1, r0, lsl #22
 218:	0b2f1349 	bleq	bc4f44 <__RAM_SIZE+0xac4f44>
 21c:	160c0000 	strne	r0, [ip], -r0
 220:	3a0e0300 	bcc	380e28 <__RAM_SIZE+0x280e28>
 224:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 228:	0013490b 	andseq	r4, r3, fp, lsl #18
 22c:	000f0d00 	andeq	r0, pc, r0, lsl #26
 230:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 234:	150e0000 	strne	r0, [lr, #-0]
 238:	000c2700 	andeq	r2, ip, r0, lsl #14
 23c:	00340f00 	eorseq	r0, r4, r0, lsl #30
 240:	0b3a0e03 	bleq	e83a54 <__RAM_SIZE+0xd83a54>
 244:	0b390b3b 	bleq	e42f38 <__RAM_SIZE+0xd42f38>
 248:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 12c <__STACKSEAL_SIZE+0x12c>
 24c:	00000c3c 	andeq	r0, r0, ip, lsr ip
 250:	49002110 	stmdbmi	r0, {r4, r8, sp}
 254:	00052f13 	andeq	r2, r5, r3, lsl pc
 258:	00341100 	eorseq	r1, r4, r0, lsl #2
 25c:	0b3a1347 	bleq	e84f80 <__RAM_SIZE+0xd84f80>
 260:	0b390b3b 	bleq	e42f54 <__RAM_SIZE+0xd42f54>
 264:	00000a02 	andeq	r0, r0, r2, lsl #20
 268:	3f002e12 	svccc	0x00002e12
 26c:	3a0e030c 	bcc	380ea4 <__RAM_SIZE+0x280ea4>
 270:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 274:	110c270b 	tstne	ip, fp, lsl #14
 278:	40011201 	andmi	r1, r1, r1, lsl #4
 27c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 280:	01000000 	mrseq	r0, (UNDEF: 0)
 284:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 288:	0e030b13 	vmoveq.32	d3[0], r0
 28c:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
 290:	01520111 	cmpeq	r2, r1, lsl r1
 294:	00000610 	andeq	r0, r0, r0, lsl r6
 298:	0b002402 	bleq	92a8 <__HEAP_SIZE+0x82a8>
 29c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 2a0:	0300000e 	movweq	r0, #14
 2a4:	13490026 	movtne	r0, #36902	; 0x9026
 2a8:	16040000 	strne	r0, [r4], -r0
 2ac:	3a0e0300 	bcc	380eb4 <__RAM_SIZE+0x280eb4>
 2b0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2b4:	0013490b 	andseq	r4, r3, fp, lsl #18
 2b8:	00240500 	eoreq	r0, r4, r0, lsl #10
 2bc:	0b3e0b0b 	bleq	f82ef0 <__RAM_SIZE+0xe82ef0>
 2c0:	00000803 	andeq	r0, r0, r3, lsl #16
 2c4:	03011306 	movweq	r1, #4870	; 0x1306
 2c8:	3a0b0b0e 	bcc	2c2f08 <__RAM_SIZE+0x1c2f08>
 2cc:	010b3b0b 	tsteq	fp, fp, lsl #22
 2d0:	07000013 	smladeq	r0, r3, r0, r0
 2d4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 2d8:	0a381349 	beq	e05004 <__RAM_SIZE+0xd05004>
 2dc:	00000c34 	andeq	r0, r0, r4, lsr ip
 2e0:	0b000f08 	bleq	3f08 <__HEAP_SIZE+0x2f08>
 2e4:	0900000b 	stmdbeq	r0, {r0, r1, r3}
 2e8:	0b0b000f 	bleq	2c032c <__RAM_SIZE+0x1c032c>
 2ec:	00001349 	andeq	r1, r0, r9, asr #6
 2f0:	2701150a 	strcs	r1, [r1, -sl, lsl #10]
 2f4:	0013010c 	andseq	r0, r3, ip, lsl #2
 2f8:	00050b00 	andeq	r0, r5, r0, lsl #22
 2fc:	00001349 	andeq	r1, r0, r9, asr #6
 300:	0b01130c 	bleq	44f38 <__HEAP_SIZE+0x43f38>
 304:	3b0b3a0b 	blcc	2ceb38 <__RAM_SIZE+0x1ceb38>
 308:	010b390b 	tsteq	fp, fp, lsl #18
 30c:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
 310:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 314:	0b3b0b3a 	bleq	ec3004 <__RAM_SIZE+0xdc3004>
 318:	13490b39 	movtne	r0, #39737	; 0x9b39
 31c:	00000a38 	andeq	r0, r0, r8, lsr sl
 320:	3f012e0e 	svccc	0x00012e0e
 324:	3a0e030c 	bcc	380f5c <__RAM_SIZE+0x280f5c>
 328:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 32c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 330:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 334:	97064001 	strls	r4, [r6, -r1]
 338:	13010c42 	movwne	r0, #7234	; 0x1c42
 33c:	050f0000 	streq	r0, [pc, #-0]	; 344 <__STACKSEAL_SIZE+0x344>
 340:	3a080300 	bcc	200f48 <__RAM_SIZE+0x100f48>
 344:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 348:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 34c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 350:	05100000 	ldreq	r0, [r0, #-0]
 354:	3a0e0300 	bcc	380f5c <__RAM_SIZE+0x280f5c>
 358:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 35c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 360:	1100000a 	tstne	r0, sl
 364:	00000018 	andeq	r0, r0, r8, lsl r0
 368:	03003412 	movweq	r3, #1042	; 0x412
 36c:	3b0b3a08 	blcc	2ceb94 <__RAM_SIZE+0x1ceb94>
 370:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 374:	000a0213 	andeq	r0, sl, r3, lsl r2
 378:	00341300 	eorseq	r1, r4, r0, lsl #6
 37c:	0b3a0e03 	bleq	e83b90 <__RAM_SIZE+0xd83b90>
 380:	0b39053b 	bleq	e41874 <__RAM_SIZE+0xd41874>
 384:	0a021349 	beq	850b0 <__HEAP_SIZE+0x840b0>
 388:	34140000 	ldrcc	r0, [r4], #-0
 38c:	3a080300 	bcc	200f94 <__RAM_SIZE+0x100f94>
 390:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 394:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 398:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 39c:	89150000 	ldmdbhi	r5, {}	; <UNPREDICTABLE>
 3a0:	11010182 	smlabbne	r1, r2, r1, r0
 3a4:	00133101 	andseq	r3, r3, r1, lsl #2
 3a8:	828a1600 	addhi	r1, sl, #0, 12
 3ac:	0a020001 	beq	803b8 <__HEAP_SIZE+0x7f3b8>
 3b0:	000a4291 	muleq	sl, r1, r2
 3b4:	00051700 	andeq	r1, r5, r0, lsl #14
 3b8:	0b3a0e03 	bleq	e83bcc <__RAM_SIZE+0xd83bcc>
 3bc:	0b39053b 	bleq	e418b0 <__RAM_SIZE+0xd418b0>
 3c0:	06021349 	streq	r1, [r2], -r9, asr #6
 3c4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 3c8:	01011800 	tsteq	r1, r0, lsl #16
 3cc:	13011349 	movwne	r1, #4937	; 0x1349
 3d0:	21190000 	tstcs	r9, r0
 3d4:	2f134900 	svccs	0x00134900
 3d8:	1a00000b 	bne	40c <__STACKSEAL_SIZE+0x40c>
 3dc:	0e03012e 	adfeqsp	f0, f3, #0.5
 3e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3e4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 3e8:	01111349 	tsteq	r1, r9, asr #6
 3ec:	06400112 			; <UNDEFINED> instruction: 0x06400112
 3f0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 3f4:	1b000013 	blne	448 <__STACKSEAL_SIZE+0x448>
 3f8:	08030005 	stmdaeq	r3, {r0, r2}
 3fc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 400:	13490b39 	movtne	r0, #39737	; 0x9b39
 404:	00000a02 	andeq	r0, r0, r2, lsl #20
 408:	0300341c 	movweq	r3, #1052	; 0x41c
 40c:	3b0b3a0e 	blcc	2cec4c <__RAM_SIZE+0x1cec4c>
 410:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 414:	b7060213 	smladlt	r6, r3, r2, r0
 418:	00000642 	andeq	r0, r0, r2, asr #12
 41c:	11010b1d 	tstne	r1, sp, lsl fp
 420:	01011201 	tsteq	r1, r1, lsl #4
 424:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
 428:	0655010b 	ldrbeq	r0, [r5], -fp, lsl #2
 42c:	00001301 	andeq	r1, r0, r1, lsl #6
 430:	0300341f 	movweq	r3, #1055	; 0x41f
 434:	3b0b3a0e 	blcc	2cec74 <__RAM_SIZE+0x1cec74>
 438:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 43c:	20000013 	andcs	r0, r0, r3, lsl r0
 440:	01018289 	smlabbeq	r1, r9, r2, r8
 444:	13310111 	teqne	r1, #1073741828	; 0x40000004
 448:	00001301 	andeq	r1, r0, r1, lsl #6
 44c:	01828921 	orreq	r8, r2, r1, lsr #18
 450:	01011101 	tsteq	r1, r1, lsl #2
 454:	22000013 	andcs	r0, r0, #19
 458:	01018289 	smlabbeq	r1, r9, r2, r8
 45c:	00000111 	andeq	r0, r0, r1, lsl r1
 460:	31011d23 	tstcc	r1, r3, lsr #26
 464:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 468:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
 46c:	010b5705 	tsteq	fp, r5, lsl #14
 470:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
 474:	13310005 	teqne	r1, #5
 478:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 47c:	25000006 	strcs	r0, [r0, #-6]
 480:	13310005 	teqne	r1, #5
 484:	34260000 	strtcc	r0, [r6], #-0
 488:	02133100 	andseq	r3, r3, #0, 2
 48c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 490:	1d270000 	stcne	0, cr0, [r7, #-0]
 494:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
 498:	0542b801 	strbeq	fp, [r2, #-2049]	; 0xfffff7ff
 49c:	01120111 	tsteq	r2, r1, lsl r1
 4a0:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
 4a4:	13010b57 	movwne	r0, #6999	; 0x1b57
 4a8:	89280000 	stmdbhi	r8!, {}	; <UNPREDICTABLE>
 4ac:	11010182 	smlabbne	r1, r2, r1, r0
 4b0:	0a429301 	beq	10a50bc <__RAM_SIZE+0xfa50bc>
 4b4:	00001301 	andeq	r1, r0, r1, lsl #6
 4b8:	0b011729 	bleq	46164 <__HEAP_SIZE+0x45164>
 4bc:	3b0b3a0b 	blcc	2cecf0 <__RAM_SIZE+0x1cecf0>
 4c0:	010b3905 	tsteq	fp, r5, lsl #18
 4c4:	2a000013 	bcs	518 <__STACKSEAL_SIZE+0x518>
 4c8:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 4cc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 4d0:	13490b39 	movtne	r0, #39737	; 0x9b39
 4d4:	892b0000 	stmdbhi	fp!, {}	; <UNPREDICTABLE>
 4d8:	11000182 	smlabbne	r0, r2, r1, r0
 4dc:	00133101 	andseq	r3, r3, r1, lsl #2
 4e0:	012e2c00 			; <UNDEFINED> instruction: 0x012e2c00
 4e4:	0b3a0e03 	bleq	e83cf8 <__RAM_SIZE+0xd83cf8>
 4e8:	0b390b3b 	bleq	e431dc <__RAM_SIZE+0xd431dc>
 4ec:	13490c27 	movtne	r0, #39975	; 0x9c27
 4f0:	01120111 	tsteq	r2, r1, lsl r1
 4f4:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
 4f8:	0013010c 	andseq	r0, r3, ip, lsl #2
 4fc:	00052d00 	andeq	r2, r5, r0, lsl #26
 500:	0b3a0803 	bleq	e82514 <__RAM_SIZE+0xd82514>
 504:	0b390b3b 	bleq	e431f8 <__RAM_SIZE+0xd431f8>
 508:	06021349 	streq	r1, [r2], -r9, asr #6
 50c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 510:	00052e00 	andeq	r2, r5, r0, lsl #28
 514:	0b3a0e03 	bleq	e83d28 <__RAM_SIZE+0xd83d28>
 518:	0b390b3b 	bleq	e4320c <__RAM_SIZE+0xd4320c>
 51c:	06021349 	streq	r1, [r2], -r9, asr #6
 520:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 524:	00342f00 	eorseq	r2, r4, r0, lsl #30
 528:	0b3a0e03 	bleq	e83d3c <__RAM_SIZE+0xd83d3c>
 52c:	0b390b3b 	bleq	e43220 <__RAM_SIZE+0xd43220>
 530:	06021349 	streq	r1, [r2], -r9, asr #6
 534:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 538:	00343000 	eorseq	r3, r4, r0
 53c:	0b3a0803 	bleq	e82550 <__RAM_SIZE+0xd82550>
 540:	0b390b3b 	bleq	e43234 <__RAM_SIZE+0xd43234>
 544:	06021349 	streq	r1, [r2], -r9, asr #6
 548:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 54c:	012e3100 			; <UNDEFINED> instruction: 0x012e3100
 550:	0b3a0e03 	bleq	e83d64 <__RAM_SIZE+0xd83d64>
 554:	0b390b3b 	bleq	e43248 <__RAM_SIZE+0xd43248>
 558:	13490c27 	movtne	r0, #39975	; 0x9c27
 55c:	01120111 	tsteq	r2, r1, lsl r1
 560:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 564:	0013010c 	andseq	r0, r3, ip, lsl #2
 568:	011d3200 	tsteq	sp, r0, lsl #4
 56c:	01521331 	cmpeq	r2, r1, lsr r3
 570:	110542b8 			; <UNDEFINED> instruction: 0x110542b8
 574:	58011201 	stmdapl	r1, {r0, r9, ip}
 578:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 57c:	3300000b 	movwcc	r0, #11
 580:	0e03012e 	adfeqsp	f0, f3, #0.5
 584:	0b3b0b3a 	bleq	ec3274 <__RAM_SIZE+0xdc3274>
 588:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 58c:	0b201349 	bleq	8052b8 <__RAM_SIZE+0x7052b8>
 590:	00001301 	andeq	r1, r0, r1, lsl #6
 594:	03000534 	movweq	r0, #1332	; 0x534
 598:	3b0b3a08 	blcc	2cedc0 <__RAM_SIZE+0x1cedc0>
 59c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 5a0:	35000013 	strcc	r0, [r0, #-19]	; 0xffffffed
 5a4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 5a8:	0b3b0b3a 	bleq	ec3298 <__RAM_SIZE+0xdc3298>
 5ac:	13490b39 	movtne	r0, #39737	; 0x9b39
 5b0:	34360000 	ldrtcc	r0, [r6], #-0
 5b4:	3a080300 	bcc	2011bc <__RAM_SIZE+0x1011bc>
 5b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5bc:	0013490b 	andseq	r4, r3, fp, lsl #18
 5c0:	012e3700 			; <UNDEFINED> instruction: 0x012e3700
 5c4:	0b3a0e03 	bleq	e83dd8 <__RAM_SIZE+0xd83dd8>
 5c8:	0b390b3b 	bleq	e432bc <__RAM_SIZE+0xd432bc>
 5cc:	01110c27 	tsteq	r1, r7, lsr #24
 5d0:	06400112 			; <UNDEFINED> instruction: 0x06400112
 5d4:	010c4296 			; <UNDEFINED> instruction: 0x010c4296
 5d8:	38000013 	stmdacc	r0, {r0, r1, r4}
 5dc:	0e03012e 	adfeqsp	f0, f3, #0.5
 5e0:	0b3b0b3a 	bleq	ec32d0 <__RAM_SIZE+0xdc32d0>
 5e4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 5e8:	01120111 	tsteq	r2, r1, lsl r1
 5ec:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
 5f0:	0013010c 	andseq	r0, r3, ip, lsl #2
 5f4:	012e3900 			; <UNDEFINED> instruction: 0x012e3900
 5f8:	0b3a0e03 	bleq	e83e0c <__RAM_SIZE+0xd83e0c>
 5fc:	0b390b3b 	bleq	e432f0 <__RAM_SIZE+0xd432f0>
 600:	01110c27 	tsteq	r1, r7, lsr #24
 604:	0a400112 	beq	1000a54 <__RAM_SIZE+0xf00a54>
 608:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 60c:	3a000013 	bcc	660 <__STACKSEAL_SIZE+0x660>
 610:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 614:	0b3b0b3a 	bleq	ec3304 <__RAM_SIZE+0xdc3304>
 618:	13490b39 	movtne	r0, #39737	; 0x9b39
 61c:	00000a02 	andeq	r0, r0, r2, lsl #20
 620:	0300053b 	movweq	r0, #1339	; 0x53b
 624:	3b0b3a08 	blcc	2cee4c <__RAM_SIZE+0x1cee4c>
 628:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 62c:	000a0213 	andeq	r0, sl, r3, lsl r2
 630:	002e3c00 	eoreq	r3, lr, r0, lsl #24
 634:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 638:	030e4087 	movweq	r4, #57479	; 0xe087
 63c:	3d00000e 	stccc	0, cr0, [r0, #-56]	; 0xffffffc8
 640:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 590 <__STACKSEAL_SIZE+0x590>
 644:	40870c3c 	addmi	r0, r7, ip, lsr ip
 648:	3a0e030e 	bcc	381288 <__RAM_SIZE+0x281288>
 64c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 650:	0000000b 	andeq	r0, r0, fp
 654:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 658:	030b130e 	movweq	r1, #45838	; 0xb30e
 65c:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
 660:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
 664:	00061001 	andeq	r1, r6, r1
 668:	00240200 	eoreq	r0, r4, r0, lsl #4
 66c:	0b3e0b0b 	bleq	f832a0 <__RAM_SIZE+0xe832a0>
 670:	00000e03 	andeq	r0, r0, r3, lsl #28
 674:	03001603 	movweq	r1, #1539	; 0x603
 678:	3b0b3a0e 	blcc	2ceeb8 <__RAM_SIZE+0x1ceeb8>
 67c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 680:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
 684:	0b0b0024 	bleq	2c071c <__RAM_SIZE+0x1c071c>
 688:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 68c:	26050000 	strcs	r0, [r5], -r0
 690:	00134900 	andseq	r4, r3, r0, lsl #18
 694:	000f0600 	andeq	r0, pc, r0, lsl #12
 698:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 69c:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
 6a0:	030c3f01 	movweq	r3, #52993	; 0xcf01
 6a4:	3b0b3a0e 	blcc	2ceee4 <__RAM_SIZE+0x1ceee4>
 6a8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 6ac:	1113490c 	tstne	r3, ip, lsl #18
 6b0:	40011201 	andmi	r1, r1, r1, lsl #4
 6b4:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 6b8:	00001301 	andeq	r1, r0, r1, lsl #6
 6bc:	03000508 	movweq	r0, #1288	; 0x508
 6c0:	3b0b3a0e 	blcc	2cef00 <__RAM_SIZE+0x1cef00>
 6c4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 6c8:	b7060213 	smladlt	r6, r3, r2, r0
 6cc:	00000642 	andeq	r0, r0, r2, asr #12
 6d0:	03003409 	movweq	r3, #1033	; 0x409
 6d4:	3b0b3a08 	blcc	2ceefc <__RAM_SIZE+0x1ceefc>
 6d8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 6dc:	b7060213 	smladlt	r6, r3, r2, r0
 6e0:	00000642 	andeq	r0, r0, r2, asr #12
 6e4:	0182890a 	orreq	r8, r2, sl, lsl #18
 6e8:	31011100 	mrscc	r1, (UNDEF: 17)
 6ec:	0b000013 	bleq	740 <__STACKSEAL_SIZE+0x740>
 6f0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 640 <__STACKSEAL_SIZE+0x640>
 6f4:	0b3a0e03 	bleq	e83f08 <__RAM_SIZE+0xd83f08>
 6f8:	0b390b3b 	bleq	e433ec <__RAM_SIZE+0xd433ec>
 6fc:	01110c27 	tsteq	r1, r7, lsr #24
 700:	06400112 			; <UNDEFINED> instruction: 0x06400112
 704:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 708:	0c000013 	stceq	0, cr0, [r0], {19}
 70c:	01018289 	smlabbeq	r1, r9, r2, r8
 710:	13310111 	teqne	r1, #1073741828	; 0x40000004
 714:	8a0d0000 	bhi	34071c <__RAM_SIZE+0x24071c>
 718:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
 71c:	0a42910a 	beq	10a4b4c <__RAM_SIZE+0xfa4b4c>
 720:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
 724:	030c3f00 	movweq	r3, #52992	; 0xcf00
 728:	3b0b3a0e 	blcc	2cef68 <__RAM_SIZE+0x1cef68>
 72c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 730:	1201110c 	andne	r1, r1, #12, 2
 734:	970a4001 	strls	r4, [sl, -r1]
 738:	00000c42 	andeq	r0, r0, r2, asr #24
 73c:	0300340f 	movweq	r3, #1039	; 0x40f
 740:	3b0b3a0e 	blcc	2cef80 <__RAM_SIZE+0x1cef80>
 744:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 748:	b7060213 	smladlt	r6, r3, r2, r0
 74c:	00000642 	andeq	r0, r0, r2, asr #12
 750:	3f002e10 	svccc	0x00002e10
 754:	3a0e030c 	bcc	38138c <__RAM_SIZE+0x28138c>
 758:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 75c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 760:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 764:	970a4001 	strls	r4, [sl, -r1]
 768:	00000c42 	andeq	r0, r0, r2, asr #24
 76c:	3f012e11 	svccc	0x00012e11
 770:	3a0e030c 	bcc	3813a8 <__RAM_SIZE+0x2813a8>
 774:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 778:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 77c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 780:	970a4001 	strls	r4, [sl, -r1]
 784:	00000c42 	andeq	r0, r0, r2, asr #24
 788:	03000512 	movweq	r0, #1298	; 0x512
 78c:	3b0b3a08 	blcc	2cefb4 <__RAM_SIZE+0x1cefb4>
 790:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 794:	b7060213 	smladlt	r6, r3, r2, r0
 798:	00000642 	andeq	r0, r0, r2, asr #12
 79c:	01110100 	tsteq	r1, r0, lsl #2
 7a0:	0b130e25 	bleq	4c403c <__RAM_SIZE+0x3c403c>
 7a4:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 7a8:	01110655 	tsteq	r1, r5, asr r6
 7ac:	06100152 			; <UNDEFINED> instruction: 0x06100152
 7b0:	24020000 	strcs	r0, [r2], #-0
 7b4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 7b8:	000e030b 	andeq	r0, lr, fp, lsl #6
 7bc:	00160300 	andseq	r0, r6, r0, lsl #6
 7c0:	0b3a0e03 	bleq	e83fd4 <__RAM_SIZE+0xd83fd4>
 7c4:	0b390b3b 	bleq	e434b8 <__RAM_SIZE+0xd434b8>
 7c8:	00001349 	andeq	r1, r0, r9, asr #6
 7cc:	0b002404 	bleq	97e4 <__HEAP_SIZE+0x87e4>
 7d0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 7d4:	05000008 	streq	r0, [r0, #-8]
 7d8:	13490035 	movtne	r0, #36917	; 0x9035
 7dc:	13060000 	movwne	r0, #24576	; 0x6000
 7e0:	0b0e0301 	bleq	3813ec <__RAM_SIZE+0x2813ec>
 7e4:	3b0b3a0b 	blcc	2cf018 <__RAM_SIZE+0x1cf018>
 7e8:	010b390b 	tsteq	fp, fp, lsl #18
 7ec:	07000013 	smladeq	r0, r3, r0, r0
 7f0:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 7f4:	0b3b0b3a 	bleq	ec34e4 <__RAM_SIZE+0xdc34e4>
 7f8:	13490b39 	movtne	r0, #39737	; 0x9b39
 7fc:	00000a38 	andeq	r0, r0, r8, lsr sl
 800:	03000d08 	movweq	r0, #3336	; 0xd08
 804:	3b0b3a0e 	blcc	2cf044 <__RAM_SIZE+0x1cf044>
 808:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 80c:	000a3813 	andeq	r3, sl, r3, lsl r8
 810:	00340900 	eorseq	r0, r4, r0, lsl #18
 814:	0b3a0e03 	bleq	e84028 <__RAM_SIZE+0xd84028>
 818:	0b390b3b 	bleq	e4350c <__RAM_SIZE+0xd4350c>
 81c:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 700 <__STACKSEAL_SIZE+0x700>
 820:	00000c3c 	andeq	r0, r0, ip, lsr ip
 824:	0300340a 	movweq	r3, #1034	; 0x40a
 828:	3b0b3a0e 	blcc	2cf068 <__RAM_SIZE+0x1cf068>
 82c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 830:	020c3f13 	andeq	r3, ip, #19, 30	; 0x4c
 834:	0b00000a 	bleq	864 <__Vectors_Size+0xa4>
 838:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 788 <__STACKSEAL_SIZE+0x788>
 83c:	0b3a0e03 	bleq	e84050 <__RAM_SIZE+0xd84050>
 840:	0b390b3b 	bleq	e43534 <__RAM_SIZE+0xd43534>
 844:	13490c27 	movtne	r0, #39975	; 0x9c27
 848:	01120111 	tsteq	r2, r1, lsl r1
 84c:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 850:	0c00000c 	stceq	0, cr0, [r0], {12}
 854:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 7a4 <__STACKSEAL_SIZE+0x7a4>
 858:	0b3a0e03 	bleq	e8406c <__RAM_SIZE+0xd8406c>
 85c:	0b390b3b 	bleq	e43550 <__RAM_SIZE+0xd43550>
 860:	13490c27 	movtne	r0, #39975	; 0x9c27
 864:	01120111 	tsteq	r2, r1, lsl r1
 868:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 86c:	0013010c 	andseq	r0, r3, ip, lsl #2
 870:	011d0d00 	tsteq	sp, r0, lsl #26
 874:	01521331 	cmpeq	r2, r1, lsr r3
 878:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
 87c:	58011201 	stmdapl	r1, {r0, r9, ip}
 880:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
 884:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
 888:	13310034 	teqne	r1, #52	; 0x34
 88c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 890:	0f000006 	svceq	0x00000006
 894:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 7e4 <__Vectors_Size+0x24>
 898:	0b3a0e03 	bleq	e840ac <__RAM_SIZE+0xd840ac>
 89c:	0b390b3b 	bleq	e43590 <__RAM_SIZE+0xd43590>
 8a0:	13490c27 	movtne	r0, #39975	; 0x9c27
 8a4:	01120111 	tsteq	r2, r1, lsl r1
 8a8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
 8ac:	0013010c 	andseq	r0, r3, ip, lsl #2
 8b0:	00051000 	andeq	r1, r5, r0
 8b4:	0b3a0e03 	bleq	e840c8 <__RAM_SIZE+0xd840c8>
 8b8:	0b390b3b 	bleq	e435ac <__RAM_SIZE+0xd435ac>
 8bc:	06021349 	streq	r1, [r2], -r9, asr #6
 8c0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 8c4:	00341100 	eorseq	r1, r4, r0, lsl #2
 8c8:	0b3a0e03 	bleq	e840dc <__RAM_SIZE+0xd840dc>
 8cc:	0b390b3b 	bleq	e435c0 <__RAM_SIZE+0xd435c0>
 8d0:	06021349 	streq	r1, [r2], -r9, asr #6
 8d4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 8d8:	00341200 	eorseq	r1, r4, r0, lsl #4
 8dc:	0b3a0803 	bleq	e828f0 <__RAM_SIZE+0xd828f0>
 8e0:	0b390b3b 	bleq	e435d4 <__RAM_SIZE+0xd435d4>
 8e4:	06021349 	streq	r1, [r2], -r9, asr #6
 8e8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 8ec:	82891300 	addhi	r1, r9, #0, 6
 8f0:	01110101 	tsteq	r1, r1, lsl #2
 8f4:	13011331 	movwne	r1, #4913	; 0x1331
 8f8:	8a140000 	bhi	500900 <__RAM_SIZE+0x400900>
 8fc:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
 900:	0a42910a 	beq	10a4d30 <__RAM_SIZE+0xfa4d30>
 904:	89150000 	ldmdbhi	r5, {}	; <UNPREDICTABLE>
 908:	11000182 	smlabbne	r0, r2, r1, r0
 90c:	00133101 	andseq	r3, r3, r1, lsl #2
 910:	000f1600 	andeq	r1, pc, r0, lsl #12
 914:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 918:	2e170000 	cdpcs	0, 1, cr0, cr7, cr0, {0}
 91c:	030c3f01 	movweq	r3, #52993	; 0xcf01
 920:	3b0b3a0e 	blcc	2cf160 <__RAM_SIZE+0x1cf160>
 924:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 928:	1201110c 	andne	r1, r1, #12, 2
 92c:	97064001 	strls	r4, [r6, -r1]
 930:	13010c42 	movwne	r0, #7234	; 0x1c42
 934:	34180000 	ldrcc	r0, [r8], #-0
 938:	3a0e0300 	bcc	381540 <__RAM_SIZE+0x281540>
 93c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 940:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 944:	1900000a 	stmdbne	r0, {r1, r3}
 948:	01018289 	smlabbeq	r1, r9, r2, r8
 94c:	13310111 	teqne	r1, #1073741828	; 0x40000004
 950:	011a0000 	tsteq	sl, r0
 954:	01134901 	tsteq	r3, r1, lsl #18
 958:	1b000013 	blne	9ac <__Vectors_Size+0x1ec>
 95c:	13490021 	movtne	r0, #36897	; 0x9021
 960:	00000b2f 	andeq	r0, r0, pc, lsr #22
 964:	03012e1c 	movweq	r2, #7708	; 0x1e1c
 968:	3b0b3a0e 	blcc	2cf1a8 <__RAM_SIZE+0x1cf1a8>
 96c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 970:	1113490c 	tstne	r3, ip, lsl #18
 974:	40011201 	andmi	r1, r1, r1, lsl #4
 978:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 97c:	00001301 	andeq	r1, r0, r1, lsl #6
 980:	0300051d 	movweq	r0, #1309	; 0x51d
 984:	3b0b3a08 	blcc	2cf1ac <__RAM_SIZE+0x1cf1ac>
 988:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 98c:	b7060213 	smladlt	r6, r3, r2, r0
 990:	00000642 	andeq	r0, r0, r2, asr #12
 994:	03012e1e 	movweq	r2, #7710	; 0x1e1e
 998:	3b0b3a0e 	blcc	2cf1d8 <__RAM_SIZE+0x1cf1d8>
 99c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 9a0:	1113490c 	tstne	r3, ip, lsl #18
 9a4:	40011201 	andmi	r1, r1, r1, lsl #4
 9a8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 9ac:	00001301 	andeq	r1, r0, r1, lsl #6
 9b0:	11010b1f 	tstne	r1, pc, lsl fp
 9b4:	00011201 	andeq	r1, r1, r1, lsl #4
 9b8:	012e2000 			; <UNDEFINED> instruction: 0x012e2000
 9bc:	0b3a0e03 	bleq	e841d0 <__RAM_SIZE+0xd841d0>
 9c0:	0b39053b 	bleq	e41eb4 <__RAM_SIZE+0xd41eb4>
 9c4:	13490c27 	movtne	r0, #39975	; 0x9c27
 9c8:	13010b20 	movwne	r0, #6944	; 0x1b20
 9cc:	34210000 	strtcc	r0, [r1], #-0
 9d0:	3a0e0300 	bcc	3815d8 <__RAM_SIZE+0x2815d8>
 9d4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 9d8:	0013490b 	andseq	r4, r3, fp, lsl #18
 9dc:	002e2200 	eoreq	r2, lr, r0, lsl #4
 9e0:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 9e4:	030e4087 	movweq	r4, #57479	; 0xe087
 9e8:	3b0b3a0e 	blcc	2cf228 <__RAM_SIZE+0x1cf228>
 9ec:	2300000b 	movwcs	r0, #11
 9f0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 940 <__Vectors_Size+0x180>
 9f4:	40870c3c 	addmi	r0, r7, ip, lsr ip
 9f8:	3a0e030e 	bcc	381638 <__RAM_SIZE+0x281638>
 9fc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 a00:	0000000b 	andeq	r0, r0, fp
 a04:	10001101 	andne	r1, r0, r1, lsl #2
 a08:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
 a0c:	1b0e0301 	blne	381618 <__RAM_SIZE+0x281618>
 a10:	130e250e 	movwne	r2, #58638	; 0xe50e
 a14:	00000005 	andeq	r0, r0, r5
 a18:	10001101 	andne	r1, r0, r1, lsl #2
 a1c:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
 a20:	1b0e0301 	blne	38162c <__RAM_SIZE+0x28162c>
 a24:	130e250e 	movwne	r2, #58638	; 0xe50e
 a28:	00000005 	andeq	r0, r0, r5

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	10000948 	andne	r0, r0, r8, asr #18
       4:	1000094a 	andne	r0, r0, sl, asr #18
}
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	1000094a 	andne	r0, r0, sl, asr #18
    printf("c = %d\r\n", c);
      10:	10000974 	andne	r0, r0, r4, ror r9
}
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00000001 	andeq	r0, r0, r1
      24:	094a0000 	stmdbeq	sl, {}^	; <UNPREDICTABLE>
      28:	095e1000 	ldmdbeq	lr, {ip}^
      2c:	00021000 	andeq	r1, r2, r0
      30:	095e9f30 	ldmdbeq	lr, {r4, r5, r8, r9, sl, fp, ip, pc}^
      34:	09621000 	stmdbeq	r2!, {ip}^
      38:	00011000 	andeq	r1, r1, r0
      3c:	00096251 	andeq	r6, r9, r1, asr r2
      40:	00097410 	andeq	r7, r9, r0, lsl r4
      44:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
      50:	10000930 	andne	r0, r0, r0, lsr r9
      54:	10000932 	andne	r0, r0, r2, lsr r9
      58:	007d0002 	rsbseq	r0, sp, r2
      5c:	10000932 	andne	r0, r0, r2, lsr r9
      60:	10000948 	andne	r0, r0, r8, asr #18
      64:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      70:	10000918 	andne	r0, r0, r8, lsl r9
      74:	1000091a 	andne	r0, r0, sl, lsl r9
      78:	007d0002 	rsbseq	r0, sp, r2
      7c:	1000091a 	andne	r0, r0, sl, lsl r9
      80:	10000930 	andne	r0, r0, r0, lsr r9
      84:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      90:	10000900 	andne	r0, r0, r0, lsl #18
      94:	10000902 	andne	r0, r0, r2, lsl #18
      98:	007d0002 	rsbseq	r0, sp, r2
      9c:	10000902 	andne	r0, r0, r2, lsl #18
      a0:	10000918 	andne	r0, r0, r8, lsl r9
      a4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      b0:	100008e8 	andne	r0, r0, r8, ror #17
      b4:	100008ea 	andne	r0, r0, sl, ror #17
      b8:	007d0002 	rsbseq	r0, sp, r2
      bc:	100008ea 	andne	r0, r0, sl, ror #17
      c0:	10000900 	andne	r0, r0, r0, lsl #18
      c4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      d0:	100008d0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
      d4:	100008d2 	ldrdne	r0, [r0], -r2
      d8:	007d0002 	rsbseq	r0, sp, r2
      dc:	100008d2 	ldrdne	r0, [r0], -r2
      e0:	100008e8 	andne	r0, r0, r8, ror #17
      e4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      f0:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
      f4:	100008b6 			; <UNDEFINED> instruction: 0x100008b6
      f8:	007d0002 	rsbseq	r0, sp, r2
      fc:	100008b6 			; <UNDEFINED> instruction: 0x100008b6
     100:	100008d0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
     104:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     110:	1000084c 	andne	r0, r0, ip, asr #16
     114:	1000084e 	andne	r0, r0, lr, asr #16
     118:	007d0002 	rsbseq	r0, sp, r2
     11c:	1000084e 	andne	r0, r0, lr, asr #16
     120:	10000850 	andne	r0, r0, r0, asr r8
     124:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
     128:	10000850 	andne	r0, r0, r0, asr r8
     12c:	100008a2 	andne	r0, r0, r2, lsr #17
     130:	907d0003 	rsbsls	r0, sp, r3
     134:	0008a202 	andeq	sl, r8, r2, lsl #4
     138:	0008b410 	andeq	fp, r8, r0, lsl r4
     13c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     140:	0000000c 	andeq	r0, r0, ip
	...
     14c:	62000000 	andvs	r0, r0, #0
     150:	65100008 	ldrvs	r0, [r0, #-8]
     154:	01100008 	tsteq	r0, r8
     158:	08655000 	stmdaeq	r5!, {ip, lr}^
     15c:	087e1000 	ldmdaeq	lr!, {ip}^
     160:	00011000 	andeq	r1, r1, r0
     164:	00088054 	andeq	r8, r8, r4, asr r0
     168:	00088a10 	andeq	r8, r8, r0, lsl sl
     16c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
     17c:	10000868 	andne	r0, r0, r8, ror #16
     180:	1000086e 	andne	r0, r0, lr, ror #16
     184:	6e500001 	cdpvs	0, 5, cr0, cr0, cr1, {0}
     188:	71100008 	tstvc	r0, r8
     18c:	01100008 	tsteq	r0, r8
     190:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     1a0:	08720000 	ldmdaeq	r2!, {}^	; <UNPREDICTABLE>
     1a4:	08781000 	ldmdaeq	r8!, {ip}^
     1a8:	00011000 	andeq	r1, r1, r0
     1ac:	00087850 	andeq	r7, r8, r0, asr r8
     1b0:	00088010 	andeq	r8, r8, r0, lsl r0
     1b4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     1b8:	10000880 	andne	r0, r0, r0, lsl #17
     1bc:	10000884 	andne	r0, r0, r4, lsl #17
     1c0:	84500001 	ldrbhi	r0, [r0], #-1
     1c4:	a4100008 	ldrge	r0, [r0], #-8
     1c8:	01100008 	tsteq	r0, r8
     1cc:	00005500 	andeq	r5, r0, r0, lsl #10
     1d0:	00000000 	andeq	r0, r0, r0
     1d4:	00020000 	andeq	r0, r2, r0
     1d8:	087c0000 	ldmdaeq	ip!, {}^	; <UNPREDICTABLE>
     1dc:	08801000 	stmeq	r0, {ip}
     1e0:	00021000 	andeq	r1, r2, r0
     1e4:	088a9f30 	stmeq	sl, {r4, r5, r8, r9, sl, fp, ip, pc}
     1e8:	08a01000 	stmiaeq	r0!, {ip}
     1ec:	00011000 	andeq	r1, r1, r0
     1f0:	00000054 	andeq	r0, r0, r4, asr r0
     1f4:	00000000 	andeq	r0, r0, r0
     1f8:	00080000 	andeq	r0, r8, r0
     1fc:	00080210 	andeq	r0, r8, r0, lsl r2
     200:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     204:	00080200 	andeq	r0, r8, r0, lsl #4
     208:	00080410 	andeq	r0, r8, r0, lsl r4
     20c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     210:	0008040c 	andeq	r0, r8, ip, lsl #8
     214:	00084210 	andeq	r4, r8, r0, lsl r2
     218:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     21c:	00084218 	andeq	r4, r8, r8, lsl r2
     220:	00084c10 	andeq	r4, r8, r0, lsl ip
     224:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     228:	0000000c 	andeq	r0, r0, ip
     22c:	00000000 	andeq	r0, r0, r0
     230:	01010100 	mrseq	r0, (UNDEF: 17)
     234:	04000101 	streq	r0, [r0], #-257	; 0xfffffeff
     238:	22100008 	andscs	r0, r0, #8
     23c:	02100008 	andseq	r0, r0, #8
     240:	229f3000 	addscs	r3, pc, #0
     244:	30100008 	andscc	r0, r0, r8
     248:	02100008 	andseq	r0, r0, #8
     24c:	309f3400 	addscc	r3, pc, r0, lsl #8
     250:	4c100008 	ldcmi	0, cr0, [r0], {8}
     254:	02100008 	andseq	r0, r0, #8
     258:	009f3300 	addseq	r3, pc, r0, lsl #6
	...
     268:	02000000 	andeq	r0, r0, #0
     26c:	00007d00 	andeq	r7, r0, r0, lsl #26
     270:	00000000 	andeq	r0, r0, r0
     274:	02000000 	andeq	r0, r0, #0
     278:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
     288:	02000000 	andeq	r0, r0, #0
     28c:	00007d00 	andeq	r7, r0, r0, lsl #26
     290:	00000000 	andeq	r0, r0, r0
     294:	02000000 	andeq	r0, r0, #0
     298:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
     2a8:	02000000 	andeq	r0, r0, #0
     2ac:	00007d00 	andeq	r7, r0, r0, lsl #26
     2b0:	00000000 	andeq	r0, r0, r0
     2b4:	02000000 	andeq	r0, r0, #0
     2b8:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
     2c8:	02000000 	andeq	r0, r0, #0
     2cc:	00007d00 	andeq	r7, r0, r0, lsl #26
     2d0:	00000000 	andeq	r0, r0, r0
     2d4:	02000000 	andeq	r0, r0, #0
     2d8:	00087d00 	andeq	r7, r8, r0, lsl #26
     2dc:	00000000 	andeq	r0, r0, r0
     2e0:	02000000 	andeq	r0, r0, #0
     2e4:	000c7d00 	andeq	r7, ip, r0, lsl #26
     2e8:	00000000 	andeq	r0, r0, r0
     2ec:	02000000 	andeq	r0, r0, #0
     2f0:	00287d00 	eoreq	r7, r8, r0, lsl #26
     2f4:	00000000 	andeq	r0, r0, r0
     2f8:	02000000 	andeq	r0, r0, #0
     2fc:	000c7d00 	andeq	r7, ip, r0, lsl #26
     300:	00000000 	andeq	r0, r0, r0
     304:	02000000 	andeq	r0, r0, #0
     308:	00087d00 	andeq	r7, r8, r0, lsl #26
     30c:	00000000 	andeq	r0, r0, r0
     310:	02000000 	andeq	r0, r0, #0
     314:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
     32c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     338:	54910002 	ldrpl	r0, [r1], #2
	...
     344:	01f30004 	mvnseq	r0, r4
     348:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     35c:	00010000 	andeq	r0, r1, r0
     360:	00000051 	andeq	r0, r0, r1, asr r0
     364:	00000000 	andeq	r0, r0, r0
     368:	f3000400 	vshl.u8	d0, d0, d0
     36c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     380:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     394:	007d0002 	rsbseq	r0, sp, r2
	...
     3a0:	047d0002 	ldrbteq	r0, [sp], #-2
	...
     3ac:	107d0002 	rsbsne	r0, sp, r2
	...
     3b8:	047d0002 	ldrbteq	r0, [sp], #-2
	...
     3d0:	00010000 	andeq	r0, r1, r0
     3d4:	00000050 	andeq	r0, r0, r0, asr r0
     3d8:	00000000 	andeq	r0, r0, r0
     3dc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     3e8:	01f30004 	mvnseq	r0, r4
     3ec:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     404:	00510001 	subseq	r0, r1, r1
     408:	00000000 	andeq	r0, r0, r0
     40c:	01000000 	mrseq	r0, (UNDEF: 0)
     410:	00005200 	andeq	r5, r0, r0, lsl #4
     414:	00000000 	andeq	r0, r0, r0
     418:	00040000 	andeq	r0, r4, r0
     41c:	9f5101f3 	svcls	0x005101f3
	...
     434:	00010000 	andeq	r0, r1, r0
     438:	00000052 	andeq	r0, r0, r2, asr r0
     43c:	00000000 	andeq	r0, r0, r0
     440:	53000100 	movwpl	r0, #256	; 0x100
	...
     44c:	01f30004 	mvnseq	r0, r4
     450:	00009f52 	andeq	r9, r0, r2, asr pc
	...
     464:	00530001 	subseq	r0, r3, r1
	...
     474:	02000000 	andeq	r0, r0, #0
     478:	00007d00 	andeq	r7, r0, r0, lsl #26
     47c:	00000000 	andeq	r0, r0, r0
     480:	02000000 	andeq	r0, r0, #0
     484:	00047d00 	andeq	r7, r4, r0, lsl #26
     488:	00000000 	andeq	r0, r0, r0
     48c:	02000000 	andeq	r0, r0, #0
     490:	00187d00 	andseq	r7, r8, r0, lsl #26
     494:	00000000 	andeq	r0, r0, r0
     498:	02000000 	andeq	r0, r0, #0
     49c:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
     4b4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     4c0:	00530001 	subseq	r0, r3, r1
     4c4:	00000000 	andeq	r0, r0, r0
     4c8:	04000000 	streq	r0, [r0], #-0
     4cc:	5001f300 	andpl	pc, r1, r0, lsl #6
     4d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     4e0:	01000000 	mrseq	r0, (UNDEF: 0)
     4e4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
     4f4:	00020000 	andeq	r0, r2, r0
     4f8:	0000007d 	andeq	r0, r0, sp, ror r0
     4fc:	00000000 	andeq	r0, r0, r0
     500:	00020000 	andeq	r0, r2, r0
     504:	0000087d 	andeq	r0, r0, sp, ror r8
     508:	00000000 	andeq	r0, r0, r0
     50c:	00020000 	andeq	r0, r2, r0
     510:	0000107d 	andeq	r1, r0, sp, ror r0
     514:	00000000 	andeq	r0, r0, r0
     518:	00020000 	andeq	r0, r2, r0
     51c:	0000207d 	andeq	r2, r0, sp, ror r0
     520:	00000000 	andeq	r0, r0, r0
     524:	00020000 	andeq	r0, r2, r0
     528:	0000107d 	andeq	r1, r0, sp, ror r0
     52c:	00000000 	andeq	r0, r0, r0
     530:	00020000 	andeq	r0, r2, r0
     534:	0000087d 	andeq	r0, r0, sp, ror r8
     538:	00000000 	andeq	r0, r0, r0
     53c:	00020000 	andeq	r0, r2, r0
     540:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     558:	00500001 	subseq	r0, r0, r1
     55c:	00000000 	andeq	r0, r0, r0
     560:	01000000 	mrseq	r0, (UNDEF: 0)
     564:	00005100 	andeq	r5, r0, r0, lsl #2
     568:	00000000 	andeq	r0, r0, r0
     56c:	00040000 	andeq	r0, r4, r0
     570:	9f5001f3 	svcls	0x005001f3
	...
     588:	00010000 	andeq	r0, r1, r0
     58c:	00000051 	andeq	r0, r0, r1, asr r0
     590:	00000000 	andeq	r0, r0, r0
     594:	52000100 	andpl	r0, r0, #0, 2
	...
     5a0:	01f30004 	mvnseq	r0, r4
     5a4:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     5b8:	00500001 	subseq	r0, r0, r1
	...
     5c8:	02000000 	andeq	r0, r0, #0
     5cc:	00007d00 	andeq	r7, r0, r0, lsl #26
     5d0:	00000000 	andeq	r0, r0, r0
     5d4:	02000000 	andeq	r0, r0, #0
     5d8:	000c7d00 	andeq	r7, ip, r0, lsl #26
     5dc:	00000000 	andeq	r0, r0, r0
     5e0:	02000000 	andeq	r0, r0, #0
     5e4:	00107d00 	andseq	r7, r0, r0, lsl #26
     5e8:	00000000 	andeq	r0, r0, r0
     5ec:	02000000 	andeq	r0, r0, #0
     5f0:	00207d00 	eoreq	r7, r0, r0, lsl #26
     5f4:	00000000 	andeq	r0, r0, r0
     5f8:	02000000 	andeq	r0, r0, #0
     5fc:	00107d00 	andseq	r7, r0, r0, lsl #26
     600:	00000000 	andeq	r0, r0, r0
     604:	02000000 	andeq	r0, r0, #0
     608:	000c7d00 	andeq	r7, ip, r0, lsl #26
     60c:	00000000 	andeq	r0, r0, r0
     610:	02000000 	andeq	r0, r0, #0
     614:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
     62c:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     638:	00510001 	subseq	r0, r1, r1
     63c:	00000000 	andeq	r0, r0, r0
     640:	04000000 	streq	r0, [r0], #-0
     644:	5001f300 	andpl	pc, r1, r0, lsl #6
     648:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     658:	01000000 	mrseq	r0, (UNDEF: 0)
     65c:	00005000 	andeq	r5, r0, r0
     660:	00000000 	andeq	r0, r0, r0
     664:	1aec0000 	bne	ffb0066c <__StackTop+0xc7a0066c>
     668:	1aee1000 	bne	ffb84670 <__StackTop+0xc7a84670>
     66c:	00021000 	andeq	r1, r2, r0
     670:	1aee007d 	bne	ffb8086c <__StackTop+0xc7a8086c>
     674:	1af01000 	bne	ffc0467c <__StackTop+0xc7b0467c>
     678:	00021000 	andeq	r1, r2, r0
     67c:	1af0107d 	bne	ffc04878 <__StackTop+0xc7b04878>
     680:	1af21000 	bne	ffc84688 <__StackTop+0xc7b84688>
     684:	00021000 	andeq	r1, r2, r0
     688:	1af2147d 	bne	ffc85884 <__StackTop+0xc7b85884>
     68c:	1b0a1000 	blne	284694 <__RAM_SIZE+0x184694>
     690:	00021000 	andeq	r1, r2, r0
     694:	1b0a287d 	blne	28a890 <__RAM_SIZE+0x18a890>
     698:	1b0e1000 	blne	3846a0 <__RAM_SIZE+0x2846a0>
     69c:	00021000 	andeq	r1, r2, r0
     6a0:	1b0e147d 	blne	38589c <__RAM_SIZE+0x28589c>
     6a4:	1b101000 	blne	4046ac <__RAM_SIZE+0x3046ac>
     6a8:	00021000 	andeq	r1, r2, r0
     6ac:	1b10107d 	blne	4048a8 <__RAM_SIZE+0x3048a8>
     6b0:	1b181000 	blne	6046b8 <__RAM_SIZE+0x5046b8>
     6b4:	00021000 	andeq	r1, r2, r0
     6b8:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     6c4:	10001b08 	andne	r1, r0, r8, lsl #22
     6c8:	10001b18 	andne	r1, r0, r8, lsl fp
     6cc:	00500001 	subseq	r0, r0, r1
     6d0:	00000000 	andeq	r0, r0, r0
     6d4:	60000000 	andvs	r0, r0, r0
     6d8:	64100014 	ldrvs	r0, [r0], #-20	; 0xffffffec
     6dc:	02100014 	andseq	r0, r0, #20
     6e0:	64007d00 	strvs	r7, [r0], #-3328	; 0xfffff300
     6e4:	66100014 			; <UNDEFINED> instruction: 0x66100014
     6e8:	02100014 	andseq	r0, r0, #20
     6ec:	66247d00 	strtvs	r7, [r4], -r0, lsl #26
     6f0:	d6100014 			; <UNDEFINED> instruction: 0xd6100014
     6f4:	0310001a 	tsteq	r0, #26
     6f8:	00e07d00 	rsceq	r7, r0, r0, lsl #26
     6fc:	10001ad6 	ldrdne	r1, [r0], -r6
     700:	10001ae0 	andne	r1, r0, r0, ror #21
     704:	247d0002 	ldrbtcs	r0, [sp], #-2
	...
     718:	10001460 	andne	r1, r0, r0, ror #8
     71c:	10001474 	andne	r1, r0, r4, ror r4
     720:	76500001 	ldrbvc	r0, [r0], -r1
     724:	bc100014 	ldclt	0, cr0, [r0], {20}
     728:	0110001a 	tsteq	r0, sl, lsl r0
     72c:	1abc5700 	bne	fef16334 <__StackTop+0xc6e16334>
     730:	1ac01000 	bne	ff004738 <__StackTop+0xc6f04738>
     734:	00011000 	andeq	r1, r1, r0
     738:	001ac050 	andseq	ip, sl, r0, asr r0
     73c:	001ada10 	andseq	sp, sl, r0, lsl sl
     740:	57000110 	smladpl	r0, r0, r1, r0
	...
     754:	14600000 	strbtne	r0, [r0], #-0
     758:	14761000 	ldrbtne	r1, [r6], #-0
     75c:	00011000 	andeq	r1, r1, r0
     760:	00147651 	andseq	r7, r4, r1, asr r6
     764:	001abc10 	andseq	fp, sl, r0, lsl ip
     768:	58000110 	stmdapl	r0, {r4, r8}
     76c:	10001abc 			; <UNDEFINED> instruction: 0x10001abc
     770:	10001ac0 	andne	r1, r0, r0, asr #21
     774:	c0510001 	subsgt	r0, r1, r1
     778:	da10001a 	ble	4007e8 <__RAM_SIZE+0x3007e8>
     77c:	0110001a 	tsteq	r0, sl, lsl r0
     780:	1ada5800 	bne	ff696788 <__StackTop+0xc7596788>
     784:	1ae01000 	bne	ff80478c <__StackTop+0xc770478c>
     788:	00041000 	andeq	r1, r4, r0
     78c:	9f5101f3 	svcls	0x005101f3
	...
     7a8:	14600000 	strbtne	r0, [r0], #-0
     7ac:	14761000 	ldrbtne	r1, [r6], #-0
     7b0:	00011000 	andeq	r1, r1, r0
     7b4:	00147652 	andseq	r7, r4, r2, asr r6
     7b8:	0019de10 	andseq	sp, r9, r0, lsl lr
     7bc:	56000110 			; <UNDEFINED> instruction: 0x56000110
     7c0:	100019de 	ldrdne	r1, [r0], -lr
     7c4:	100019e0 	andne	r1, r0, r0, ror #19
     7c8:	e05b0001 	subs	r0, fp, r1
     7cc:	0a100019 	beq	400838 <__RAM_SIZE+0x300838>
     7d0:	0110001a 	tsteq	r0, sl, lsl r0
     7d4:	1a0a5600 	bne	295fdc <__RAM_SIZE+0x195fdc>
     7d8:	1a341000 	bne	d047e0 <__RAM_SIZE+0xc047e0>
     7dc:	00011000 	andeq	r1, r1, r0
     7e0:	001a345b 	andseq	r3, sl, fp, asr r4
     7e4:	001abc10 	andseq	fp, sl, r0, lsl ip
     7e8:	56000110 			; <UNDEFINED> instruction: 0x56000110
     7ec:	10001abc 			; <UNDEFINED> instruction: 0x10001abc
     7f0:	10001ac0 	andne	r1, r0, r0, asr #21
     7f4:	c0520001 	subsgt	r0, r2, r1
     7f8:	da10001a 	ble	400868 <__RAM_SIZE+0x300868>
     7fc:	0110001a 	tsteq	r0, sl, lsl r0
     800:	1ada5600 	bne	ff696008 <__StackTop+0xc7596008>
     804:	1ae01000 	bne	ff80480c <__StackTop+0xc770480c>
     808:	00041000 	andeq	r1, r4, r0
     80c:	9f5201f3 	svcls	0x005201f3
	...
     81c:	10001460 	andne	r1, r0, r0, ror #8
     820:	10001476 	andne	r1, r0, r6, ror r4
     824:	bc530001 	mrrclt	0, 0, r0, r3, cr1
     828:	c010001a 	andsgt	r0, r0, sl, lsl r0
     82c:	0110001a 	tsteq	r0, sl, lsl r0
     830:	00005300 	andeq	r5, r0, r0, lsl #6
     834:	00000000 	andeq	r0, r0, r0
     838:	00010000 	andeq	r0, r1, r0
	...
     850:	149c0000 	ldrne	r0, [ip], #0
     854:	149e1000 	ldrne	r1, [lr], #0
     858:	00021000 	andeq	r1, r2, r0
     85c:	149e9f30 	ldrne	r9, [lr], #3888	; 0xf30
     860:	159c1000 	ldrne	r1, [ip]
     864:	00011000 	andeq	r1, r1, r0
     868:	00159c55 	andseq	r9, r5, r5, asr ip
     86c:	0015ae10 	andseq	sl, r5, r0, lsl lr
     870:	51000110 	tstpl	r0, r0, lsl r1
     874:	100015ae 	andne	r1, r0, lr, lsr #11
     878:	100015b8 			; <UNDEFINED> instruction: 0x100015b8
     87c:	b8550001 	ldmdalt	r5, {r0}^
     880:	ca100015 	bgt	4008dc <__RAM_SIZE+0x3008dc>
     884:	01100015 	tsteq	r0, r5, lsl r0
     888:	15ca5100 	strbne	r5, [sl, #256]	; 0x100
     88c:	17781000 	ldrbne	r1, [r8, -r0]!
     890:	00011000 	andeq	r1, r1, r0
     894:	00178055 	andseq	r8, r7, r5, asr r0
     898:	00179c10 	andseq	r9, r7, r0, lsl ip
     89c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     8a0:	1000179c 	mulne	r0, ip, r7
     8a4:	100017bb 			; <UNDEFINED> instruction: 0x100017bb
     8a8:	40910002 	addsmi	r0, r1, r2
     8ac:	100017c0 	andne	r1, r0, r0, asr #15
     8b0:	10001924 	andne	r1, r0, r4, lsr #18
     8b4:	92550001 	subsls	r0, r5, #1
     8b8:	ec100019 	ldc	0, cr0, [r0], {25}
     8bc:	01100019 	tsteq	r0, r9, lsl r0
     8c0:	1a5c5500 	bne	1715cc8 <__RAM_SIZE+0x1615cc8>
     8c4:	1a941000 	bne	fe5048cc <__StackTop+0xc64048cc>
     8c8:	00011000 	andeq	r1, r1, r0
     8cc:	001aa855 	andseq	sl, sl, r5, asr r8
     8d0:	001aaa10 	andseq	sl, sl, r0, lsl sl
     8d4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
     8e0:	00000002 	andeq	r0, r0, r2
	...
     8f0:	00020200 	andeq	r0, r2, r0, lsl #4
     8f4:	14c00000 	strbne	r0, [r0], #0
     8f8:	14d21000 	ldrbne	r1, [r2], #0
     8fc:	00021000 	andeq	r1, r2, r0
     900:	14d29f30 	ldrbne	r9, [r2], #3888	; 0xf30
     904:	14ff1000 	ldrbtne	r1, [pc], #0	; 90c <__Vectors_Size+0x14c>
     908:	00021000 	andeq	r1, r2, r0
     90c:	15324891 	ldrne	r4, [r2, #-2193]!	; 0xfffff76f
     910:	153a1000 	ldrne	r1, [sl, #-0]!
     914:	00021000 	andeq	r1, r2, r0
     918:	153a9f30 	ldrne	r9, [sl, #-3888]!	; 0xfffff0d0
     91c:	153c1000 	ldrne	r1, [ip, #-0]!
     920:	00011000 	andeq	r1, r1, r0
     924:	00153c50 	andseq	r3, r5, r0, asr ip
     928:	00154a10 	andseq	r4, r5, r0, lsl sl
     92c:	30000210 	andcc	r0, r0, r0, lsl r2
     930:	00154a9f 	mulseq	r5, pc, sl	; <UNPREDICTABLE>
     934:	00155210 	andseq	r5, r5, r0, lsl r2
     938:	91000210 	tstls	r0, r0, lsl r2
     93c:	00155248 	andseq	r5, r5, r8, asr #4
     940:	00155a10 	andseq	r5, r5, r0, lsl sl
     944:	30000210 	andcc	r0, r0, r0, lsl r2
     948:	00155a9f 	mulseq	r5, pc, sl	; <UNPREDICTABLE>
     94c:	00155c10 	andseq	r5, r5, r0, lsl ip
     950:	53000110 	movwpl	r0, #272	; 0x110
     954:	1000155c 	andne	r1, r0, ip, asr r5
     958:	10001a5c 	andne	r1, r0, ip, asr sl
     95c:	48910002 	ldmmi	r1, {r1}
     960:	10001a5c 	andne	r1, r0, ip, asr sl
     964:	10001a92 	mulne	r0, r2, sl
     968:	9f380002 	svcls	0x00380002
     96c:	10001a92 	mulne	r0, r2, sl
     970:	10001abc 			; <UNDEFINED> instruction: 0x10001abc
     974:	48910002 	ldmmi	r1, {r1}
	...
     980:	00000001 	andeq	r0, r0, r1
	...
     99c:	14d20000 	ldrbne	r0, [r2], #0
     9a0:	14de1000 	ldrbne	r1, [lr], #0
     9a4:	00021000 	andeq	r1, r2, r0
     9a8:	14de9f30 	ldrbne	r9, [lr], #3888	; 0xf30
     9ac:	14ff1000 	ldrbtne	r1, [pc], #0	; 9b4 <__Vectors_Size+0x1f4>
     9b0:	00011000 	andeq	r1, r1, r0
     9b4:	00155c5b 	andseq	r5, r5, fp, asr ip
     9b8:	00158210 	andseq	r8, r5, r0, lsl r2
     9bc:	30000210 	andcc	r0, r0, r0, lsl r2
     9c0:	0015829f 	mulseq	r5, pc, r2	; <UNPREDICTABLE>
     9c4:	00158410 	andseq	r8, r5, r0, lsl r4
     9c8:	50000110 	andpl	r0, r0, r0, lsl r1
     9cc:	10001584 	andne	r1, r0, r4, lsl #11
     9d0:	10001590 	mulne	r0, r0, r5
     9d4:	9f300002 	svcls	0x00300002
     9d8:	10001590 	mulne	r0, r0, r5
     9dc:	1000192a 	andne	r1, r0, sl, lsr #18
     9e0:	665b0001 	ldrbvs	r0, [fp], -r1
     9e4:	6c100019 	ldcvs	0, cr0, [r0], {25}
     9e8:	01100019 	tsteq	r0, r9, lsl r0
     9ec:	19925b00 	ldmibne	r2, {r8, r9, fp, ip, lr}
     9f0:	19dc1000 	ldmibne	ip, {ip}^
     9f4:	00011000 	andeq	r1, r1, r0
     9f8:	0019dc5b 	andseq	sp, r9, fp, asr ip
     9fc:	0019e010 	andseq	lr, r9, r0, lsl r0
     a00:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     a04:	100019e0 	andne	r1, r0, r0, ror #19
     a08:	10001a08 	andne	r1, r0, r8, lsl #20
     a0c:	085b0001 	ldmdaeq	fp, {r0}^
     a10:	0c10001a 	ldceq	0, cr0, [r0], {26}
     a14:	0110001a 	tsteq	r0, sl, lsl r0
     a18:	1a0c5400 	bne	315a20 <__RAM_SIZE+0x215a20>
     a1c:	1a0e1000 	bne	384a24 <__RAM_SIZE+0x284a24>
     a20:	00011000 	andeq	r1, r1, r0
     a24:	001a0e53 	andseq	r0, sl, r3, asr lr
     a28:	001a2810 	andseq	r2, sl, r0, lsl r8
     a2c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     a30:	10001a28 	andne	r1, r0, r8, lsr #20
     a34:	10001a2c 	andne	r1, r0, ip, lsr #20
     a38:	5c530001 	mrrcpl	0, 0, r0, r3, cr1
     a3c:	bc10001a 	ldclt	0, cr0, [r0], {26}
     a40:	0110001a 	tsteq	r0, sl, lsl r0
     a44:	00005b00 	andeq	r5, r0, r0, lsl #22
	...
     a50:	00010001 	andeq	r0, r1, r1
     a54:	00010001 	andeq	r0, r1, r1
     a58:	00000001 	andeq	r0, r0, r1
     a5c:	100014c0 	andne	r1, r0, r0, asr #9
     a60:	100014ff 	strdne	r1, [r0], -pc	; <UNPREDICTABLE>
     a64:	9f300002 	svcls	0x00300002
     a68:	10001508 	andne	r1, r0, r8, lsl #10
     a6c:	1000150a 	andne	r1, r0, sl, lsl #10
     a70:	9f310002 	svcls	0x00310002
     a74:	10001512 	andne	r1, r0, r2, lsl r5
     a78:	10001514 	andne	r1, r0, r4, lsl r5
     a7c:	9f310002 	svcls	0x00310002
     a80:	1000151c 	andne	r1, r0, ip, lsl r5
     a84:	1000151e 	andne	r1, r0, lr, lsl r5
     a88:	9f310002 	svcls	0x00310002
     a8c:	10001526 	andne	r1, r0, r6, lsr #10
     a90:	10001528 	andne	r1, r0, r8, lsr #10
     a94:	9f310002 	svcls	0x00310002
     a98:	10001530 	andne	r1, r0, r0, lsr r5
     a9c:	10001532 	andne	r1, r0, r2, lsr r5
     aa0:	9f310002 	svcls	0x00310002
     aa4:	10001532 	andne	r1, r0, r2, lsr r5
     aa8:	10001abc 			; <UNDEFINED> instruction: 0x10001abc
     aac:	9f300002 	svcls	0x00300002
	...
     ab8:	00000002 	andeq	r0, r0, r2
	...
     b18:	1000146c 	andne	r1, r0, ip, ror #8
     b1c:	10001476 	andne	r1, r0, r6, ror r4
     b20:	9f300002 	svcls	0x00300002
     b24:	10001476 	andne	r1, r0, r6, ror r4
     b28:	10001486 	andne	r1, r0, r6, lsl #9
     b2c:	86540001 	ldrbhi	r0, [r4], -r1
     b30:	98100014 	ldmdals	r0, {r2, r4}
     b34:	01100014 	tsteq	r0, r4, lsl r0
     b38:	14985500 	ldrne	r5, [r8], #1280	; 0x500
     b3c:	17221000 	strne	r1, [r2, -r0]!
     b40:	00011000 	andeq	r1, r1, r0
     b44:	00172254 	andseq	r2, r7, r4, asr r2
     b48:	00172410 	andseq	r2, r7, r0, lsl r4
     b4c:	50000110 	andpl	r0, r0, r0, lsl r1
     b50:	10001724 	andne	r1, r0, r4, lsr #14
     b54:	10001778 	andne	r1, r0, r8, ror r7
     b58:	78540001 	ldmdavc	r4, {r0}^
     b5c:	80100017 	andshi	r0, r0, r7, lsl r0
     b60:	01100017 	tsteq	r0, r7, lsl r0
     b64:	17805000 	strne	r5, [r0, r0]
     b68:	17be1000 	ldrne	r1, [lr, r0]!
     b6c:	00011000 	andeq	r1, r1, r0
     b70:	0017be54 	andseq	fp, r7, r4, asr lr
     b74:	0017c010 	andseq	ip, r7, r0, lsl r0
     b78:	50000110 	andpl	r0, r0, r0, lsl r1
     b7c:	100017c0 	andne	r1, r0, r0, asr #15
     b80:	100017f8 	strdne	r1, [r0], -r8
     b84:	f8540001 			; <UNDEFINED> instruction: 0xf8540001
     b88:	fa100017 	blx	400bec <__RAM_SIZE+0x300bec>
     b8c:	01100017 	tsteq	r0, r7, lsl r0
     b90:	17fa5000 	ldrbne	r5, [sl, r0]!
     b94:	184c1000 	stmdane	ip, {ip}^
     b98:	00011000 	andeq	r1, r1, r0
     b9c:	00184c54 	andseq	r4, r8, r4, asr ip
     ba0:	00184e10 	andseq	r4, r8, r0, lsl lr
     ba4:	50000110 	andpl	r0, r0, r0, lsl r1
     ba8:	1000184e 	andne	r1, r0, lr, asr #16
     bac:	10001876 	andne	r1, r0, r6, ror r8
     bb0:	76540001 	ldrbvc	r0, [r4], -r1
     bb4:	78100018 	ldmdavc	r0, {r3, r4}
     bb8:	01100018 	tsteq	r0, r8, lsl r0
     bbc:	18785000 	ldmdane	r8!, {ip, lr}^
     bc0:	18c41000 	stmiane	r4, {ip}^
     bc4:	00011000 	andeq	r1, r1, r0
     bc8:	0018c454 	andseq	ip, r8, r4, asr r4
     bcc:	0018cc10 	andseq	ip, r8, r0, lsl ip
     bd0:	50000110 	andpl	r0, r0, r0, lsl r1
     bd4:	100018cc 	andne	r1, r0, ip, asr #17
     bd8:	10001918 	andne	r1, r0, r8, lsl r9
     bdc:	18540001 	ldmdane	r4, {r0}^
     be0:	20100019 	andscs	r0, r0, r9, lsl r0
     be4:	01100019 	tsteq	r0, r9, lsl r0
     be8:	19205000 	stmdbne	r0!, {ip, lr}
     bec:	19341000 	ldmdbne	r4!, {ip}
     bf0:	00011000 	andeq	r1, r1, r0
     bf4:	00193454 	andseq	r3, r9, r4, asr r4
     bf8:	00194a10 	andseq	r4, r9, r0, lsl sl
     bfc:	5a000110 	bpl	1044 <__HEAP_SIZE+0x44>
     c00:	1000194a 	andne	r1, r0, sl, asr #18
     c04:	1000194e 	andne	r1, r0, lr, asr #18
     c08:	4e520001 	cdpmi	0, 5, cr0, cr2, cr1, {0}
     c0c:	5a100019 	bpl	400c78 <__RAM_SIZE+0x300c78>
     c10:	01100019 	tsteq	r0, r9, lsl r0
     c14:	195a5a00 	ldmdbne	sl, {r9, fp, ip, lr}^
     c18:	19661000 	stmdbne	r6!, {ip}^
     c1c:	00011000 	andeq	r1, r1, r0
     c20:	00196652 	andseq	r6, r9, r2, asr r6
     c24:	00197010 	andseq	r7, r9, r0, lsl r0
     c28:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c2c:	10001970 	andne	r1, r0, r0, ror r9
     c30:	10001976 	andne	r1, r0, r6, ror r9
     c34:	765a0001 	ldrbvc	r0, [sl], -r1
     c38:	7a100019 	bvc	400ca4 <__RAM_SIZE+0x300ca4>
     c3c:	01100019 	tsteq	r0, r9, lsl r0
     c40:	197a5200 	ldmdbne	sl!, {r9, ip, lr}^
     c44:	19861000 	stmibne	r6, {ip}
     c48:	00011000 	andeq	r1, r1, r0
     c4c:	00198655 	andseq	r8, r9, r5, asr r6
     c50:	00199210 	andseq	r9, r9, r0, lsl r2
     c54:	52000110 	andpl	r0, r0, #16, 2
     c58:	10001992 	mulne	r0, r2, r9
     c5c:	100019da 	ldrdne	r1, [r0], -sl
     c60:	da540001 	ble	1500c6c <__RAM_SIZE+0x1400c6c>
     c64:	e0100019 	ands	r0, r0, r9, lsl r0
     c68:	01100019 	tsteq	r0, r9, lsl r0
     c6c:	19e05200 	stmibne	r0!, {r9, ip, lr}^
     c70:	19e81000 	stmibne	r8!, {ip}^
     c74:	00011000 	andeq	r1, r1, r0
     c78:	0019e854 	andseq	lr, r9, r4, asr r8
     c7c:	0019f010 	andseq	pc, r9, r0, lsl r0	; <UNPREDICTABLE>
     c80:	52000110 	andpl	r0, r0, #16, 2
     c84:	100019f0 	strdne	r1, [r0], -r0
     c88:	100019fc 	strdne	r1, [r0], -ip
     c8c:	fc590001 	mrrc2	0, 0, r0, r9, cr1
     c90:	14100019 	ldrne	r0, [r0], #-25	; 0xffffffe7
     c94:	0110001a 	tsteq	r0, sl, lsl r0
     c98:	1a145200 	bne	5154a0 <__RAM_SIZE+0x4154a0>
     c9c:	1a1c1000 	bne	704ca4 <__RAM_SIZE+0x604ca4>
     ca0:	00011000 	andeq	r1, r1, r0
     ca4:	001a1c55 	andseq	r1, sl, r5, asr ip
     ca8:	001a4410 	andseq	r4, sl, r0, lsl r4
     cac:	52000110 	andpl	r0, r0, #16, 2
     cb0:	10001a44 	andne	r1, r0, r4, asr #20
     cb4:	10001a50 	andne	r1, r0, r0, asr sl
     cb8:	50550001 	subspl	r0, r5, r1
     cbc:	5c10001a 	ldcpl	0, cr0, [r0], {26}
     cc0:	0110001a 	tsteq	r0, sl, lsl r0
     cc4:	1a5c5200 	bne	17154cc <__RAM_SIZE+0x16154cc>
     cc8:	1a8a1000 	bne	fe284cd0 <__StackTop+0xc6184cd0>
     ccc:	00011000 	andeq	r1, r1, r0
     cd0:	001a8a54 	andseq	r8, sl, r4, asr sl
     cd4:	001a9210 	andseq	r9, sl, r0, lsl r2
     cd8:	50000110 	andpl	r0, r0, r0, lsl r1
     cdc:	10001a92 	mulne	r0, r2, sl
     ce0:	10001a94 	mulne	r0, r4, sl
     ce4:	94540001 	ldrbls	r0, [r4], #-1
     ce8:	a810001a 	ldmdage	r0, {r1, r3, r4}
     cec:	0110001a 	tsteq	r0, sl, lsl r0
     cf0:	1aa85500 	bne	fea160f8 <__StackTop+0xc69160f8>
     cf4:	1aaa1000 	bne	fea84cfc <__StackTop+0xc6984cfc>
     cf8:	00011000 	andeq	r1, r1, r0
     cfc:	001aaa54 	andseq	sl, sl, r4, asr sl
     d00:	001abc10 	andseq	fp, sl, r0, lsl ip
     d04:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     d08:	10001abc 			; <UNDEFINED> instruction: 0x10001abc
     d0c:	10001ac0 	andne	r1, r0, r0, asr #21
     d10:	9f300002 	svcls	0x00300002
     d14:	10001ac0 	andne	r1, r0, r0, asr #21
     d18:	10001ada 	ldrdne	r1, [r0], -sl
     d1c:	da540001 	ble	1500d28 <__RAM_SIZE+0x1400d28>
     d20:	e010001a 	ands	r0, r0, sl, lsl r0
     d24:	0110001a 	tsteq	r0, sl, lsl r0
     d28:	00005000 	andeq	r5, r0, r0
     d2c:	00000000 	andeq	r0, r0, r0
     d30:	00010000 	andeq	r0, r1, r0
	...
     d4c:	16b60000 	ldrtne	r0, [r6], r0
     d50:	16be1000 	ldrtne	r1, [lr], r0
     d54:	00021000 	andeq	r1, r2, r0
     d58:	16c09f3a 			; <UNDEFINED> instruction: 0x16c09f3a
     d5c:	17101000 	ldrne	r1, [r0, -r0]
     d60:	00011000 	andeq	r1, r1, r0
     d64:	00171053 	andseq	r1, r7, r3, asr r0
     d68:	00171f10 	andseq	r1, r7, r0, lsl pc
     d6c:	91000310 	tstls	r0, r0, lsl r3
     d70:	17307fa8 	ldrne	r7, [r0, -r8, lsr #31]!
     d74:	176c1000 	strbne	r1, [ip, -r0]!
     d78:	00011000 	andeq	r1, r1, r0
     d7c:	00176c53 	andseq	r6, r7, r3, asr ip
     d80:	00177510 	andseq	r7, r7, r0, lsl r5
     d84:	91000310 	tstls	r0, r0, lsl r3
     d88:	17807fa8 	strne	r7, [r0, r8, lsr #31]
     d8c:	17a61000 	strne	r1, [r6, r0]!
     d90:	00011000 	andeq	r1, r1, r0
     d94:	0017a653 	andseq	sl, r7, r3, asr r6
     d98:	0017bb10 	andseq	fp, r7, r0, lsl fp
     d9c:	91000310 	tstls	r0, r0, lsl r3
     da0:	17c07fb0 			; <UNDEFINED> instruction: 0x17c07fb0
     da4:	17ec1000 	strbne	r1, [ip, r0]!
     da8:	00011000 	andeq	r1, r1, r0
     dac:	0017ec53 	andseq	lr, r7, r3, asr ip
     db0:	0017f510 	andseq	pc, r7, r0, lsl r5	; <UNPREDICTABLE>
     db4:	91000310 	tstls	r0, r0, lsl r3
     db8:	17fa7fa8 	ldrbne	r7, [sl, r8, lsr #31]!
     dbc:	18401000 	stmdane	r0, {ip}^
     dc0:	00011000 	andeq	r1, r1, r0
     dc4:	00184053 	andseq	r4, r8, r3, asr r0
     dc8:	00184910 	andseq	r4, r8, r0, lsl r9
     dcc:	91000310 	tstls	r0, r0, lsl r3
     dd0:	184e7fb0 	stmdane	lr, {r4, r5, r7, r8, r9, sl, fp, ip, sp, lr}^
     dd4:	18621000 	stmdane	r2!, {ip}^
     dd8:	00011000 	andeq	r1, r1, r0
     ddc:	00186253 	andseq	r6, r8, r3, asr r2
     de0:	00187310 	andseq	r7, r8, r0, lsl r3
     de4:	91000310 	tstls	r0, r0, lsl r3
     de8:	18787fa8 	ldmdane	r8!, {r3, r5, r7, r8, r9, sl, fp, ip, sp, lr}^
     dec:	18921000 	ldmne	r2, {ip}
     df0:	00011000 	andeq	r1, r1, r0
     df4:	00000053 	andeq	r0, r0, r3, asr r0
     df8:	00000000 	andeq	r0, r0, r0
     dfc:	50000000 	andpl	r0, r0, r0
     e00:	66100017 			; <UNDEFINED> instruction: 0x66100017
     e04:	01100017 	tsteq	r0, r7, lsl r0
     e08:	00005200 	andeq	r5, r0, r0, lsl #4
	...
     e14:	17020000 	strne	r0, [r2, -r0]
     e18:	17181000 	ldrne	r1, [r8, -r0]
     e1c:	00011000 	andeq	r1, r1, r0
     e20:	00171852 	andseq	r1, r7, r2, asr r8
     e24:	00171f10 	andseq	r1, r7, r0, lsl pc
     e28:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
     e34:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     e48:	00192000 	andseq	r2, r9, r0
     e4c:	00192a10 	andseq	r2, r9, r0, lsl sl
     e50:	31000210 	tstcc	r0, r0, lsl r2
     e54:	00192a9f 	mulseq	r9, pc, sl	; <UNPREDICTABLE>
     e58:	00194010 	andseq	r4, r9, r0, lsl r0
     e5c:	59000110 	stmdbpl	r0, {r4, r8}
     e60:	1000194a 	andne	r1, r0, sl, asr #18
     e64:	1000195a 	andne	r1, r0, sl, asr r9
     e68:	5a590001 	bpl	1640e74 <__RAM_SIZE+0x1540e74>
     e6c:	5e100019 	mrcpl	0, 0, r0, cr0, cr9, {0}
     e70:	01100019 	tsteq	r0, r9, lsl r0
     e74:	195e5300 	ldmdbne	lr, {r8, r9, ip, lr}^
     e78:	19661000 	stmdbne	r6!, {ip}^
     e7c:	00011000 	andeq	r1, r1, r0
     e80:	00196659 	andseq	r6, r9, r9, asr r6
     e84:	00197010 	andseq	r7, r9, r0, lsl r0
     e88:	31000210 	tstcc	r0, r0, lsl r2
     e8c:	0019709f 	mulseq	r9, pc, r0	; <UNPREDICTABLE>
     e90:	00197810 	andseq	r7, r9, r0, lsl r8
     e94:	59000110 	stmdbpl	r0, {r4, r8}
     e98:	10001978 	andne	r1, r0, r8, ror r9
     e9c:	10001986 	andne	r1, r0, r6, lsl #19
     ea0:	86540001 	ldrbhi	r0, [r4], -r1
     ea4:	8a100019 	bhi	400f10 <__RAM_SIZE+0x300f10>
     ea8:	01100019 	tsteq	r0, r9, lsl r0
     eac:	198a5900 	stmibne	sl, {r8, fp, ip, lr}
     eb0:	19921000 	ldmibne	r2, {ip}
     eb4:	00011000 	andeq	r1, r1, r0
     eb8:	00000054 	andeq	r0, r0, r4, asr r0
	...
     ec4:	001a0c00 	andseq	r0, sl, r0, lsl #24
     ec8:	001a3410 	andseq	r3, sl, r0, lsl r4
     ecc:	5a000110 	bpl	1314 <__HEAP_SIZE+0x314>
     ed0:	10001a3c 	andne	r1, r0, ip, lsr sl
     ed4:	10001a40 	andne	r1, r0, r0, asr #20
     ed8:	005a0001 	subseq	r0, sl, r1
	...
     ef8:	0019c000 	andseq	ip, r9, r0
     efc:	0019e010 	andseq	lr, r9, r0, lsl r0
     f00:	59000110 	stmdbpl	r0, {r4, r8}
     f04:	100019e4 	andne	r1, r0, r4, ror #19
     f08:	100019ec 	andne	r1, r0, ip, ror #19
     f0c:	ec590001 	mrrc	0, 0, r0, r9, cr1
     f10:	fc100019 	ldc2	0, cr0, [r0], {25}
     f14:	01100019 	tsteq	r0, r9, lsl r0
     f18:	19fc5500 	ldmibne	ip!, {r8, sl, ip, lr}^
     f1c:	19fe1000 	ldmibne	lr!, {ip}^
     f20:	00011000 	andeq	r1, r1, r0
     f24:	0019fe53 	andseq	pc, r9, r3, asr lr	; <UNPREDICTABLE>
     f28:	001a0c10 	andseq	r0, sl, r0, lsl ip
     f2c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     f30:	10001a0c 	andne	r1, r0, ip, lsl #20
     f34:	10001a34 	andne	r1, r0, r4, lsr sl
     f38:	3c590001 	mrrccc	0, 0, r0, r9, cr1
     f3c:	4210001a 	andsmi	r0, r0, #26
     f40:	0110001a 	tsteq	r0, sl, lsl r0
     f44:	1a425900 	bne	109734c <__RAM_SIZE+0xf9734c>
     f48:	1a501000 	bne	1404f50 <__RAM_SIZE+0x1304f50>
     f4c:	00011000 	andeq	r1, r1, r0
     f50:	001a5054 	andseq	r5, sl, r4, asr r0
     f54:	001a5410 	andseq	r5, sl, r0, lsl r4
     f58:	59000110 	stmdbpl	r0, {r4, r8}
     f5c:	10001a54 	andne	r1, r0, r4, asr sl
     f60:	10001a5a 	andne	r1, r0, sl, asr sl
     f64:	5a540001 	bpl	1500f70 <__RAM_SIZE+0x1400f70>
     f68:	5c10001a 	ldcpl	0, cr0, [r0], {26}
     f6c:	0310001a 	tsteq	r0, #26
     f70:	9f017900 	svcls	0x00017900
	...
     f80:	19aa0000 	stmibne	sl!, {}	; <UNPREDICTABLE>
     f84:	19b01000 	ldmibne	r0!, {ip}
     f88:	00011000 	andeq	r1, r1, r0
     f8c:	0019b052 	andseq	fp, r9, r2, asr r0
     f90:	0019b810 	andseq	fp, r9, r0, lsl r8
     f94:	53000110 	movwpl	r0, #272	; 0x110
     f98:	100019b8 			; <UNDEFINED> instruction: 0x100019b8
     f9c:	100019bc 			; <UNDEFINED> instruction: 0x100019bc
     fa0:	00520001 	subseq	r0, r2, r1
	...
     fac:	0019aa00 	andseq	sl, r9, r0, lsl #20
     fb0:	0019c010 	andseq	ip, r9, r0, lsl r0
     fb4:	59000110 	stmdbpl	r0, {r4, r8}
	...
     fc0:	1a600001 	bne	1800fcc <__RAM_SIZE+0x1700fcc>
     fc4:	1a921000 	bne	fe484fcc <__StackTop+0xc6384fcc>
     fc8:	00021000 	andeq	r1, r2, r0
     fcc:	00009f30 	andeq	r9, r0, r0, lsr pc
     fd0:	00000000 	andeq	r0, r0, r0
     fd4:	00030000 	andeq	r0, r3, r0
     fd8:	100014c0 	andne	r1, r0, r0, asr #9
     fdc:	100014c6 	andne	r1, r0, r6, asr #9
     fe0:	00510001 	subseq	r0, r1, r1
	...
     fec:	00156600 	andseq	r6, r5, r0, lsl #12
     ff0:	00156c10 	andseq	r6, r5, r0, lsl ip
     ff4:	52000110 	andpl	r0, r0, #16, 2
	...
    1000:	10000cd8 	ldrdne	r0, [r0], -r8
    1004:	10000cdc 	ldrdne	r0, [r0], -ip
    1008:	007d0002 	rsbseq	r0, sp, r2
    100c:	10000cdc 	ldrdne	r0, [r0], -ip
    1010:	10000ce0 	andne	r0, r0, r0, ror #25
    1014:	247d0002 	ldrbtcs	r0, [sp], #-2
    1018:	10000ce0 	andne	r0, r0, r0, ror #25
    101c:	10000ce2 	andne	r0, r0, r2, ror #25
    1020:	2c7d0002 	ldclcs	0, cr0, [sp], #-8
    1024:	10000ce2 	andne	r0, r0, r2, ror #25
    1028:	10000f2c 	andne	r0, r0, ip, lsr #30
    102c:	f07d0003 			; <UNDEFINED> instruction: 0xf07d0003
    1030:	000f2c00 	andeq	r2, pc, r0, lsl #24
    1034:	000f3010 	andeq	r3, pc, r0, lsl r0	; <UNPREDICTABLE>
    1038:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    103c:	000f302c 	andeq	r3, pc, ip, lsr #32
    1040:	000f3410 	andeq	r3, pc, r0, lsl r4	; <UNPREDICTABLE>
    1044:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1048:	000f3424 	andeq	r3, pc, r4, lsr #8
    104c:	0010c210 	andseq	ip, r0, r0, lsl r2
    1050:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    1054:	000000f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
    1060:	0cd80000 	ldcleq	0, cr0, [r8], {0}
    1064:	0cf01000 	ldcleq	0, cr1, [r0]
    1068:	00011000 	andeq	r1, r1, r0
    106c:	000cf050 	andeq	pc, ip, r0, asr r0	; <UNPREDICTABLE>
    1070:	0010c210 	andseq	ip, r0, r0, lsl r2
    1074:	5a000110 	bpl	14bc <__HEAP_SIZE+0x4bc>
	...
    1084:	10000cd8 	ldrdne	r0, [r0], -r8
    1088:	10000cf2 	strdne	r0, [r0], -r2
    108c:	f2510001 	vhadd.s16	d16, d1, d1
    1090:	c210000c 	andsgt	r0, r0, #12
    1094:	01100010 	tsteq	r0, r0, lsl r0
    1098:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    10b8:	10000cd8 	ldrdne	r0, [r0], -r8
    10bc:	10000cee 	andne	r0, r0, lr, ror #25
    10c0:	ee520001 	cdp	0, 5, cr0, cr2, cr1, {0}
    10c4:	2a10000c 	bcs	4010fc <__RAM_SIZE+0x3010fc>
    10c8:	0110000f 	tsteq	r0, pc
    10cc:	0f345b00 	svceq	0x00345b00
    10d0:	103c1000 	eorsne	r1, ip, r0
    10d4:	00011000 	andeq	r1, r1, r0
    10d8:	00103c5b 	andseq	r3, r0, fp, asr ip
    10dc:	00105210 	andseq	r5, r0, r0, lsl r2
    10e0:	50000110 	andpl	r0, r0, r0, lsl r1
    10e4:	10001052 	andne	r1, r0, r2, asr r0
    10e8:	10001086 	andne	r1, r0, r6, lsl #1
    10ec:	86580001 	ldrbhi	r0, [r8], -r1
    10f0:	94100010 	ldrls	r0, [r0], #-16
    10f4:	01100010 	tsteq	r0, r0, lsl r0
    10f8:	10945000 	addsne	r5, r4, r0
    10fc:	10a41000 	adcne	r1, r4, r0
    1100:	00011000 	andeq	r1, r1, r0
    1104:	0010a45b 	andseq	sl, r0, fp, asr r4
    1108:	0010aa10 	andseq	sl, r0, r0, lsl sl
    110c:	50000110 	andpl	r0, r0, r0, lsl r1
    1110:	100010aa 	andne	r1, r0, sl, lsr #1
    1114:	100010ac 	andne	r1, r0, ip, lsr #1
    1118:	ac520001 	mrrcge	0, 0, r0, r2, cr1
    111c:	b6100010 			; <UNDEFINED> instruction: 0xb6100010
    1120:	01100010 	tsteq	r0, r0, lsl r0
    1124:	10b65600 	adcsne	r5, r6, r0, lsl #12
    1128:	10c21000 	sbcne	r1, r2, r0
    112c:	00011000 	andeq	r1, r1, r0
    1130:	00000052 	andeq	r0, r0, r2, asr r0
	...
    113c:	000cd800 	andeq	sp, ip, r0, lsl #16
    1140:	000cf510 	andeq	pc, ip, r0, lsl r5	; <UNPREDICTABLE>
    1144:	53000110 	movwpl	r0, #272	; 0x110
    1148:	10000cf5 	strdne	r0, [r0], -r5
    114c:	100010c2 	andne	r1, r0, r2, asr #1
    1150:	00550001 	subseq	r0, r5, r1
	...
    1164:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    1168:	4010000c 	andsmi	r0, r0, ip
    116c:	0210000d 	andseq	r0, r0, #13
    1170:	40009100 	andmi	r9, r0, r0, lsl #2
    1174:	0a10000d 	beq	4011b0 <__RAM_SIZE+0x3011b0>
    1178:	0310000f 	tsteq	r0, #15
    117c:	7fa89100 	svcvc	0x00a89100
    1180:	10000f0a 	andne	r0, r0, sl, lsl #30
    1184:	10000f2a 	andne	r0, r0, sl, lsr #30
    1188:	00910002 	addseq	r0, r1, r2
    118c:	10000f34 	andne	r0, r0, r4, lsr pc
    1190:	10000f48 	andne	r0, r0, r8, asr #30
    1194:	00910002 	addseq	r0, r1, r2
    1198:	10000f48 	andne	r0, r0, r8, asr #30
    119c:	10001018 	andne	r1, r0, r8, lsl r0
    11a0:	a8910003 	ldmge	r1, {r0, r1}
    11a4:	0010947f 	andseq	r9, r0, pc, ror r4
    11a8:	0010a210 	andseq	sl, r0, r0, lsl r2
    11ac:	91000310 	tstls	r0, r0, lsl r3
    11b0:	00007fa8 	andeq	r7, r0, r8, lsr #31
	...
    11c4:	0cd80000 	ldcleq	0, cr0, [r8], {0}
    11c8:	0d4e1000 	stcleq	0, cr1, [lr, #-0]
    11cc:	00021000 	andeq	r1, r2, r0
    11d0:	0d4e0891 	stcleq	8, cr0, [lr, #-580]	; 0xfffffdbc
    11d4:	0f081000 	svceq	0x00081000
    11d8:	00021000 	andeq	r1, r2, r0
    11dc:	0f080891 	svceq	0x00080891
    11e0:	0f0a1000 	svceq	0x000a1000
    11e4:	00011000 	andeq	r1, r1, r0
    11e8:	000f0a53 	andeq	r0, pc, r3, asr sl	; <UNPREDICTABLE>
    11ec:	000f7c10 	andeq	r7, pc, r0, lsl ip	; <UNPREDICTABLE>
    11f0:	91000210 	tstls	r0, r0, lsl r2
    11f4:	000f7c08 	andeq	r7, pc, r8, lsl #24
    11f8:	000fe410 	andeq	lr, pc, r0, lsl r4	; <UNPREDICTABLE>
    11fc:	53000110 	movwpl	r0, #272	; 0x110
    1200:	10000fe4 	andne	r0, r0, r4, ror #31
    1204:	100010c2 	andne	r1, r0, r2, asr #1
    1208:	08910002 	ldmeq	r1, {r1}
	...
    1218:	10000cd8 	ldrdne	r0, [r0], -r8
    121c:	10000f34 	andne	r0, r0, r4, lsr pc
    1220:	0c910002 	ldceq	0, cr0, [r1], {2}
    1224:	10000f34 	andne	r0, r0, r4, lsr pc
    1228:	100010c2 	andne	r1, r0, r2, asr #1
    122c:	0c910002 	ldceq	0, cr0, [r1], {2}
	...
    1240:	10000cd8 	ldrdne	r0, [r0], -r8
    1244:	10000f34 	andne	r0, r0, r4, lsr pc
    1248:	10910002 	addsne	r0, r1, r2
    124c:	10000f34 	andne	r0, r0, r4, lsr pc
    1250:	10000f5a 	andne	r0, r0, sl, asr pc
    1254:	10910002 	addsne	r0, r1, r2
    1258:	10000f5a 	andne	r0, r0, sl, asr pc
    125c:	10000f5e 	andne	r0, r0, lr, asr pc
    1260:	5e530001 	cdppl	0, 5, cr0, cr3, cr1, {0}
    1264:	c210000f 	andsgt	r0, r0, #15
    1268:	02100010 	andseq	r0, r0, #16
    126c:	00109100 	andseq	r9, r0, r0, lsl #2
    1270:	00000000 	andeq	r0, r0, r0
    1274:	01000000 	mrseq	r0, (UNDEF: 0)
    1278:	26000000 	strcs	r0, [r0], -r0
    127c:	0a10000d 	beq	4012b8 <__RAM_SIZE+0x3012b8>
    1280:	1210000f 	andsne	r0, r0, #15
    1284:	f6009100 			; <UNDEFINED> instruction: 0xf6009100
    1288:	29f42908 	ldmibcs	r4!, {r3, r8, fp, sp}^
    128c:	00000008 	andeq	r0, r0, r8
    1290:	00000000 	andeq	r0, r0, r0
    1294:	349f2d00 	ldrcc	r2, [pc], #3328	; 129c <__HEAP_SIZE+0x29c>
    1298:	c210000f 	andsgt	r0, r0, #15
    129c:	12100010 	andsne	r0, r0, #16
    12a0:	f6009100 			; <UNDEFINED> instruction: 0xf6009100
    12a4:	29f42908 	ldmibcs	r4!, {r3, r8, fp, sp}^
    12a8:	00000008 	andeq	r0, r0, r8
    12ac:	00000000 	andeq	r0, r0, r0
    12b0:	009f2d00 	addseq	r2, pc, r0, lsl #26
	...
    12bc:	2a000100 	bcs	16c4 <__HEAP_SIZE+0x6c4>
    12c0:	3010000f 	andscc	r0, r0, pc
    12c4:	0810000f 	ldmdaeq	r0, {r0, r1, r2, r3}
    12c8:	93509000 	cmpls	r0, #0
    12cc:	93519004 	cmpls	r1, #4
    12d0:	000ff804 	andeq	pc, pc, r4, lsl #16
    12d4:	0010c210 	andseq	ip, r0, r0, lsl r2
    12d8:	90000810 	andls	r0, r0, r0, lsl r8
    12dc:	90049350 	andls	r9, r4, r0, asr r3
    12e0:	00049351 	andeq	r9, r4, r1, asr r3
	...
    12f4:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    12f8:	6a10000d 	bvs	401334 <__RAM_SIZE+0x301334>
    12fc:	0410000d 	ldreq	r0, [r0], #-13
    1300:	78817000 	stmvc	r1, {ip, sp, lr}
    1304:	000d6a9f 	muleq	sp, pc, sl	; <UNPREDICTABLE>
    1308:	000d6d10 	andeq	r6, sp, r0, lsl sp
    130c:	50000110 	andpl	r0, r0, r0, lsl r1
    1310:	10000dce 	andne	r0, r0, lr, asr #27
    1314:	10000dd6 	ldrdne	r0, [r0], -r6
    1318:	d6500001 	ldrble	r0, [r0], -r1
    131c:	1010000d 	andsne	r0, r0, sp
    1320:	0110000e 	tsteq	r0, lr
    1324:	0e105700 	cdpeq	7, 1, cr5, cr0, cr0, {0}
    1328:	0ecc1000 	cdpeq	0, 12, cr1, cr12, cr0, {0}
    132c:	00041000 	andeq	r1, r4, r0
    1330:	9f788177 	svcls	0x00788177
    1334:	10000f4a 	andne	r0, r0, sl, asr #30
    1338:	10000f4c 	andne	r0, r0, ip, asr #30
    133c:	81770004 	cmnhi	r7, r4
    1340:	00009f78 	andeq	r9, r0, r8, ror pc
	...
    1350:	00000002 	andeq	r0, r0, r2
    1354:	10000dae 	andne	r0, r0, lr, lsr #27
    1358:	10000db1 			; <UNDEFINED> instruction: 0x10000db1
    135c:	b1500001 	cmplt	r0, r1
    1360:	0410000d 	ldreq	r0, [r0], #-13
    1364:	0110000f 	tsteq	r0, pc
    1368:	0f4a5600 	svceq	0x004a5600
    136c:	0f521000 	svceq	0x00521000
    1370:	00011000 	andeq	r1, r1, r0
    1374:	000f5a56 	andeq	r5, pc, r6, asr sl	; <UNPREDICTABLE>
    1378:	000f5e10 	andeq	r5, pc, r0, lsl lr	; <UNPREDICTABLE>
    137c:	30000210 	andcc	r0, r0, r0, lsl r2
    1380:	000f5e9f 	muleq	pc, pc, lr	; <UNPREDICTABLE>
    1384:	0010aa10 	andseq	sl, r0, r0, lsl sl
    1388:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    1394:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    1398:	0e401000 	cdpeq	0, 4, cr1, cr0, cr0, {0}
    139c:	00061000 	andeq	r1, r6, r0
    13a0:	59049358 	stmdbpl	r4, {r3, r4, r6, r8, r9, ip, pc}
    13a4:	00000493 	muleq	r0, r3, r4
	...
    13b4:	10000e0c 	andne	r0, r0, ip, lsl #28
    13b8:	10000e26 	andne	r0, r0, r6, lsr #28
    13bc:	93500006 	cmpls	r0, #6
    13c0:	04935104 	ldreq	r5, [r3], #260	; 0x104
    13c4:	10000e26 	andne	r0, r0, r6, lsr #28
    13c8:	10000f0a 	andne	r0, r0, sl, lsl #30
    13cc:	b8910003 	ldmlt	r1, {r0, r1}
    13d0:	000f4a7f 	andeq	r4, pc, pc, ror sl	; <UNPREDICTABLE>
    13d4:	0010c210 	andseq	ip, r0, r0, lsl r2
    13d8:	91000310 	tstls	r0, r0, lsl r3
    13dc:	00007fb8 			; <UNDEFINED> instruction: 0x00007fb8
	...
    13e8:	00010100 	andeq	r0, r1, r0, lsl #2
    13ec:	00000000 	andeq	r0, r0, r0
    13f0:	0ecc0000 	cdpeq	0, 12, cr0, cr12, cr0, {0}
    13f4:	0f0a1000 	svceq	0x000a1000
    13f8:	00011000 	andeq	r1, r1, r0
    13fc:	000f4e57 	andeq	r4, pc, r7, asr lr	; <UNPREDICTABLE>
    1400:	000f5a10 	andeq	r5, pc, r0, lsl sl	; <UNPREDICTABLE>
    1404:	57000110 	smladpl	r0, r0, r1, r0
    1408:	10000f5a 	andne	r0, r0, sl, asr pc
    140c:	10000f5e 	andne	r0, r0, lr, asr pc
    1410:	9f300002 	svcls	0x00300002
    1414:	10000f5e 	andne	r0, r0, lr, asr pc
    1418:	1000106a 	andne	r1, r0, sl, rrx
    141c:	6a570001 	bvs	15c1428 <__RAM_SIZE+0x14c1428>
    1420:	92100010 	andsls	r0, r0, #16
    1424:	03100010 	tsteq	r0, #16
    1428:	9f017700 	svcls	0x00017700
    142c:	10001094 	mulne	r0, r4, r0
    1430:	100010aa 	andne	r1, r0, sl, lsr #1
    1434:	00570001 	subseq	r0, r7, r1
    1438:	00000000 	andeq	r0, r0, r0
    143c:	01000000 	mrseq	r0, (UNDEF: 0)
	...
    1448:	000f5e00 	andeq	r5, pc, r0, lsl #28
    144c:	000f6810 	andeq	r6, pc, r0, lsl r8	; <UNPREDICTABLE>
    1450:	91000210 	tstls	r0, r0, lsl r2
    1454:	000f680c 	andeq	r6, pc, ip, lsl #16
    1458:	000f6a10 	andeq	r6, pc, r0, lsl sl	; <UNPREDICTABLE>
    145c:	58000110 	stmdapl	r0, {r4, r8}
    1460:	10000fe4 	andne	r0, r0, r4, ror #31
    1464:	10000fe8 	andne	r0, r0, r8, ror #31
    1468:	e8530001 	ldmda	r3, {r0}^
    146c:	5210000f 	andspl	r0, r0, #15
    1470:	01100010 	tsteq	r0, r0, lsl r0
    1474:	10945800 	addsne	r5, r4, r0, lsl #16
    1478:	10aa1000 	adcne	r1, sl, r0
    147c:	00011000 	andeq	r1, r1, r0
    1480:	00000058 	andeq	r0, r0, r8, asr r0
    1484:	00000000 	andeq	r0, r0, r0
    1488:	08000100 	stmdaeq	r0, {r8}
    148c:	c2100010 	andsgt	r0, r0, #16
    1490:	01100010 	tsteq	r0, r0, lsl r0
    1494:	00005b00 	andeq	r5, r0, r0, lsl #22
    1498:	00000000 	andeq	r0, r0, r0
    149c:	10c80000 	sbcne	r0, r8, r0
    14a0:	10cc1000 	sbcne	r1, ip, r0
    14a4:	00021000 	andeq	r1, r2, r0
    14a8:	10cc007d 	sbcne	r0, ip, sp, ror r0
    14ac:	10d01000 	sbcsne	r1, r0, r0
    14b0:	00021000 	andeq	r1, r2, r0
    14b4:	10d0247d 	sbcsne	r2, r0, sp, ror r4
    14b8:	10d21000 	sbcsne	r1, r2, r0
    14bc:	00021000 	andeq	r1, r2, r0
    14c0:	10d22c7d 	sbcsne	r2, r2, sp, ror ip
    14c4:	13ec1000 	mvnne	r1, #0
    14c8:	00031000 	andeq	r1, r3, r0
    14cc:	ec01807d 	stc	0, cr8, [r1], {125}	; 0x7d
    14d0:	f0100013 			; <UNDEFINED> instruction: 0xf0100013
    14d4:	02100013 	andseq	r0, r0, #19
    14d8:	f02c7d00 			; <UNDEFINED> instruction: 0xf02c7d00
    14dc:	f4100013 			; <UNDEFINED> instruction: 0xf4100013
    14e0:	02100013 	andseq	r0, r0, #19
    14e4:	f4247d00 			; <UNDEFINED> instruction: 0xf4247d00
    14e8:	5e100013 	mrcpl	0, 0, r0, cr0, cr3, {0}
    14ec:	03100014 	tsteq	r0, #20
    14f0:	01807d00 	orreq	r7, r0, r0, lsl #26
	...
    1500:	100010c8 	andne	r1, r0, r8, asr #1
    1504:	100010e6 	andne	r1, r0, r6, ror #1
    1508:	e6500001 	ldrb	r0, [r0], -r1
    150c:	5e100010 	mrcpl	0, 0, r0, cr0, cr0, {0}
    1510:	03100014 	tsteq	r0, #20
    1514:	7f9c9100 	svcvc	0x009c9100
	...
    1524:	100010c8 	andne	r1, r0, r8, asr #1
    1528:	100010e8 	andne	r1, r0, r8, ror #1
    152c:	e8510001 	ldmda	r1, {r0}^
    1530:	5e100010 	mrcpl	0, 0, r0, cr0, cr0, {0}
    1534:	03100014 	tsteq	r0, #20
    1538:	7fa89100 	svcvc	0x00a89100
	...
    1548:	100010c8 	andne	r1, r0, r8, asr #1
    154c:	100010e2 	andne	r1, r0, r2, ror #1
    1550:	e2520001 	subs	r0, r2, #1
    1554:	5e100010 	mrcpl	0, 0, r0, cr0, cr0, {0}
    1558:	01100014 	tsteq	r0, r4, lsl r0
    155c:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
    1568:	10c80000 	sbcne	r0, r8, r0
    156c:	10e41000 	rscne	r1, r4, r0
    1570:	00011000 	andeq	r1, r1, r0
    1574:	0010e453 	andseq	lr, r0, r3, asr r4
    1578:	00145e10 	andseq	r5, r4, r0, lsl lr
    157c:	5b000110 	blpl	19c4 <__HEAP_SIZE+0x9c4>
	...
    1590:	10c80000 	sbcne	r0, r8, r0
    1594:	114e1000 	mrsne	r1, (UNDEF: 78)
    1598:	00021000 	andeq	r1, r2, r0
    159c:	114e0091 	swpbne	r0, r1, [lr]
    15a0:	11721000 	cmnne	r2, r0
    15a4:	00061000 	andeq	r1, r6, r0
    15a8:	59049358 	stmdbpl	r4, {r3, r4, r6, r8, r9, ip, pc}
    15ac:	11720493 			; <UNDEFINED> instruction: 0x11720493
    15b0:	120a1000 	andne	r1, sl, #0
    15b4:	00021000 	andeq	r1, r2, r0
    15b8:	120a0091 	andne	r0, sl, #145	; 0x91
    15bc:	12a21000 	adcne	r1, r2, #0
    15c0:	00061000 	andeq	r1, r6, r0
    15c4:	59049358 	stmdbpl	r4, {r3, r4, r6, r8, r9, ip, pc}
    15c8:	12c60493 	sbcne	r0, r6, #-1828716544	; 0x93000000
    15cc:	13421000 	movtne	r1, #8192	; 0x2000
    15d0:	00061000 	andeq	r1, r6, r0
    15d4:	59049358 	stmdbpl	r4, {r3, r4, r6, r8, r9, ip, pc}
    15d8:	00000493 	muleq	r0, r3, r4
	...
    15e8:	10c80000 	sbcne	r0, r8, r0
    15ec:	11561000 	cmpne	r6, r0
    15f0:	00021000 	andeq	r1, r2, r0
    15f4:	11580891 			; <UNDEFINED> instruction: 0x11580891
    15f8:	11721000 	cmnne	r2, r0
    15fc:	00011000 	andeq	r1, r1, r0
    1600:	00117255 	andseq	r7, r1, r5, asr r2
    1604:	00121410 	andseq	r1, r2, r0, lsl r4
    1608:	91000210 	tstls	r0, r0, lsl r2
    160c:	00121408 	andseq	r1, r2, r8, lsl #8
    1610:	0012e210 	andseq	lr, r2, r0, lsl r2
    1614:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    1628:	10c80000 	sbcne	r0, r8, r0
    162c:	13b81000 			; <UNDEFINED> instruction: 0x13b81000
    1630:	00021000 	andeq	r1, r2, r0
    1634:	13b80c91 			; <UNDEFINED> instruction: 0x13b80c91
    1638:	140a1000 	strne	r1, [sl], #-0
    163c:	00021000 	andeq	r1, r2, r0
    1640:	140a0c91 	strne	r0, [sl], #-3217	; 0xfffff36f
    1644:	140e1000 	strne	r1, [lr], #-0
    1648:	00011000 	andeq	r1, r1, r0
    164c:	00140e53 	andseq	r0, r4, r3, asr lr
    1650:	00142610 	andseq	r2, r4, r0, lsl r6
    1654:	51000110 	tstpl	r0, r0, lsl r1
    1658:	10001426 	andne	r1, r0, r6, lsr #8
    165c:	1000145e 	andne	r1, r0, lr, asr r4
    1660:	0c910002 	ldceq	0, cr0, [r1], {2}
	...
    1670:	100010c8 	andne	r1, r0, r8, asr #1
    1674:	100013f4 	strdne	r1, [r0], -r4
    1678:	10910002 	addsne	r0, r1, r2
    167c:	100013f4 	strdne	r1, [r0], -r4
    1680:	1000145e 	andne	r1, r0, lr, asr r4
    1684:	10910002 	addsne	r0, r1, r2
	...
    1690:	01000002 	tsteq	r0, r2
    1694:	00000001 	andeq	r0, r0, r1
    1698:	00000000 	andeq	r0, r0, r0
    169c:	01000000 	mrseq	r0, (UNDEF: 0)
    16a0:	01000001 	tsteq	r0, r1
    16a4:	00000001 	andeq	r0, r0, r1
    16a8:	01000000 	mrseq	r0, (UNDEF: 0)
    16ac:	00000001 	andeq	r0, r0, r1
    16b0:	00010100 	andeq	r0, r1, r0, lsl #2
    16b4:	00010100 	andeq	r0, r1, r0, lsl #2
    16b8:	00010100 	andeq	r0, r1, r0, lsl #2
    16bc:	10e00000 	rscne	r0, r0, r0
    16c0:	11581000 	cmpne	r8, r0
    16c4:	00021000 	andeq	r1, r2, r0
    16c8:	11589f30 	cmpne	r8, r0, lsr pc
    16cc:	11601000 	cmnne	r0, r0
    16d0:	00011000 	andeq	r1, r1, r0
    16d4:	00116054 	andseq	r6, r1, r4, asr r0
    16d8:	00117010 	andseq	r7, r1, r0, lsl r0
    16dc:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    16e0:	11709f01 	cmnne	r0, r1, lsl #30
    16e4:	11721000 	cmnne	r2, r0
    16e8:	00011000 	andeq	r1, r1, r0
    16ec:	00117254 	andseq	r7, r1, r4, asr r2
    16f0:	00121410 	andseq	r1, r2, r0, lsl r4
    16f4:	30000210 	andcc	r0, r0, r0, lsl r2
    16f8:	0012149f 	mulseq	r2, pc, r4	; <UNPREDICTABLE>
    16fc:	0012fc10 	andseq	pc, r2, r0, lsl ip	; <UNPREDICTABLE>
    1700:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1704:	100012fc 	strdne	r1, [r0], -ip
    1708:	10001316 	andne	r1, r0, r6, lsl r3
    170c:	16520001 	ldrbne	r0, [r2], -r1
    1710:	1e100013 	mrcne	0, 0, r0, cr0, cr3, {0}
    1714:	01100013 	tsteq	r0, r3, lsl r0
    1718:	131e5400 	tstne	lr, #0, 8
    171c:	132e1000 			; <UNDEFINED> instruction: 0x132e1000
    1720:	00031000 	andeq	r1, r3, r0
    1724:	2e9f0174 	mrccs	1, 4, r0, cr15, cr4, {3}
    1728:	34100013 	ldrcc	r0, [r0], #-19	; 0xffffffed
    172c:	01100013 	tsteq	r0, r3, lsl r0
    1730:	13345400 	teqne	r4, #0, 8
    1734:	13421000 	movtne	r1, #8192	; 0x2000
    1738:	00031000 	andeq	r1, r3, r0
    173c:	429f0174 	addsmi	r0, pc, #116, 2
    1740:	5e100013 	mrcpl	0, 0, r0, cr0, cr3, {0}
    1744:	01100013 	tsteq	r0, r3, lsl r0
    1748:	135e5400 	cmpne	lr, #0, 8
    174c:	13ae1000 			; <UNDEFINED> instruction: 0x13ae1000
    1750:	00011000 	andeq	r1, r1, r0
    1754:	0013ae51 	andseq	sl, r3, r1, asr lr
    1758:	0013c210 	andseq	ip, r3, r0, lsl r2
    175c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1760:	100013c2 	andne	r1, r0, r2, asr #7
    1764:	100013d0 	ldrdne	r1, [r0], -r0
    1768:	01740003 	cmneq	r4, r3
    176c:	0013d09f 	mulseq	r3, pc, r0	; <UNPREDICTABLE>
    1770:	0013ea10 	andseq	lr, r3, r0, lsl sl
    1774:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1778:	100013f4 	strdne	r1, [r0], -r4
    177c:	1000140e 	andne	r1, r0, lr, lsl #8
    1780:	0e540001 	cdpeq	0, 5, cr0, cr4, cr1, {0}
    1784:	1c100014 	ldcne	0, cr0, [r0], {20}
    1788:	03100014 	tsteq	r0, #20
    178c:	9f017400 	svcls	0x00017400
    1790:	1000141c 	andne	r1, r0, ip, lsl r4
    1794:	10001436 	andne	r1, r0, r6, lsr r4
    1798:	36540001 	ldrbcc	r0, [r4], -r1
    179c:	44100014 	ldrmi	r0, [r0], #-20	; 0xffffffec
    17a0:	03100014 	tsteq	r0, #20
    17a4:	9f017400 	svcls	0x00017400
    17a8:	10001444 	andne	r1, r0, r4, asr #8
    17ac:	1000144e 	andne	r1, r0, lr, asr #8
    17b0:	4e540001 	cdpmi	0, 5, cr0, cr4, cr1, {0}
    17b4:	5c100014 	ldcpl	0, cr0, [r0], {20}
    17b8:	03100014 	tsteq	r0, #20
    17bc:	9f017400 	svcls	0x00017400
    17c0:	1000145c 	andne	r1, r0, ip, asr r4
    17c4:	1000145e 	andne	r1, r0, lr, asr r4
    17c8:	00540001 	subseq	r0, r4, r1
    17cc:	00000000 	andeq	r0, r0, r0
    17d0:	03000000 	movweq	r0, #0
	...
    17dc:	0010e000 	andseq	lr, r0, r0
    17e0:	00126610 	andseq	r6, r2, r0, lsl r6
    17e4:	9e000a10 	vmovls	s0, r0
    17e8:	00000008 	andeq	r0, r0, r8
    17ec:	00000000 	andeq	r0, r0, r0
    17f0:	00126600 	andseq	r6, r2, r0, lsl #12
    17f4:	00126810 	andseq	r6, r2, r0, lsl r8
    17f8:	52000610 	andpl	r0, r0, #16, 12	; 0x1000000
    17fc:	93530493 	cmpls	r3, #-1828716544	; 0x93000000
    1800:	00126804 	andseq	r6, r2, r4, lsl #16
    1804:	0012a210 	andseq	sl, r2, r0, lsl r2
    1808:	91000310 	tstls	r0, r0, lsl r3
    180c:	12a27fa0 	adcne	r7, r2, #160, 30	; 0x280
    1810:	12c61000 	sbcne	r1, r6, #0
    1814:	00061000 	andeq	r1, r6, r0
    1818:	58049357 	stmdapl	r4, {r0, r1, r2, r4, r6, r8, r9, ip, pc}
    181c:	12c60493 	sbcne	r0, r6, #-1828716544	; 0x93000000
    1820:	13421000 	movtne	r1, #8192	; 0x2000
    1824:	00031000 	andeq	r1, r3, r0
    1828:	007fa091 			; <UNDEFINED> instruction: 0x007fa091
    182c:	00000000 	andeq	r0, r0, r0
    1830:	01000000 	mrseq	r0, (UNDEF: 0)
    1834:	00000000 	andeq	r0, r0, r0
    1838:	00000101 	andeq	r0, r0, r1, lsl #2
    183c:	3a000000 	bcc	1844 <__HEAP_SIZE+0x844>
    1840:	4e100011 	mrcmi	0, 0, r0, cr0, cr1, {0}
    1844:	02100011 	andseq	r0, r0, #17
    1848:	4e9f3000 	cdpmi	0, 9, cr3, cr15, cr0, {0}
    184c:	72100011 	andsvc	r0, r0, #17
    1850:	03100011 	tsteq	r0, #17
    1854:	7fac9100 	svcvc	0x00ac9100
    1858:	100011fa 	strdne	r1, [r0], -sl
    185c:	100011fa 	strdne	r1, [r0], -sl
    1860:	9f300002 	svcls	0x00300002
    1864:	100011fa 	strdne	r1, [r0], -sl
    1868:	10001210 	andne	r1, r0, r0, lsl r2
    186c:	9f310002 	svcls	0x00310002
    1870:	10001210 	andne	r1, r0, r0, lsl r2
    1874:	100013ea 	andne	r1, r0, sl, ror #7
    1878:	ac910003 	ldcge	0, cr0, [r1], {3}
    187c:	0013f47f 	andseq	pc, r3, pc, ror r4	; <UNPREDICTABLE>
    1880:	00145e10 	andseq	r5, r4, r0, lsl lr
    1884:	91000310 	tstls	r0, r0, lsl r3
    1888:	00007fac 	andeq	r7, r0, ip, lsr #31
	...
    189c:	1000121e 	andne	r1, r0, lr, lsl r2
    18a0:	10001221 	andne	r1, r0, r1, lsr #4
    18a4:	21500001 	cmpcs	r0, r1
    18a8:	6e100012 	mrcvs	0, 0, r0, cr0, cr2, {0}
    18ac:	01100013 	tsteq	r0, r3, lsl r0
    18b0:	136e5600 	cmnne	lr, #0, 12
    18b4:	13ae1000 			; <UNDEFINED> instruction: 0x13ae1000
    18b8:	00011000 	andeq	r1, r1, r0
    18bc:	0013ae52 	andseq	sl, r3, r2, asr lr
    18c0:	0013ea10 	andseq	lr, r3, r0, lsl sl
    18c4:	56000110 			; <UNDEFINED> instruction: 0x56000110
    18c8:	100013f4 	strdne	r1, [r0], -r4
    18cc:	1000145e 	andne	r1, r0, lr, asr r4
    18d0:	00560001 	subseq	r0, r6, r1
	...
    18dc:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    18e0:	4b100012 	blmi	401930 <__RAM_SIZE+0x301930>
    18e4:	06100012 			; <UNDEFINED> instruction: 0x06100012
    18e8:	04935200 	ldreq	r5, [r3], #512	; 0x200
    18ec:	4b049353 	blmi	126640 <__RAM_SIZE+0x26640>
    18f0:	66100012 			; <UNDEFINED> instruction: 0x66100012
    18f4:	03100012 	tsteq	r0, #18
    18f8:	7fa09100 	svcvc	0x00a09100
	...
    1904:	01000000 	mrseq	r0, (UNDEF: 0)
    1908:	00000001 	andeq	r0, r0, r1
    190c:	00010100 	andeq	r0, r1, r0, lsl #2
    1910:	1000124e 	andne	r1, r0, lr, asr #4
    1914:	10001251 	andne	r1, r0, r1, asr r2
    1918:	51500001 	cmppl	r0, r1
    191c:	86100012 			; <UNDEFINED> instruction: 0x86100012
    1920:	01100012 	tsteq	r0, r2, lsl r0
    1924:	12865700 	addne	r5, r6, #0, 14
    1928:	128a1000 	addne	r1, sl, #0
    192c:	00021000 	andeq	r1, r2, r0
    1930:	128a9f30 	addne	r9, sl, #48, 30	; 0xc0
    1934:	12a01000 	adcne	r1, r0, #0
    1938:	00011000 	andeq	r1, r1, r0
    193c:	0012c657 	andseq	ip, r2, r7, asr r6
    1940:	00130a10 	andseq	r0, r3, r0, lsl sl
    1944:	57000110 	smladpl	r0, r0, r1, r0
    1948:	1000130a 	andne	r1, r0, sl, lsl #6
    194c:	10001316 	andne	r1, r0, r6, lsl r3
    1950:	00510001 	subseq	r0, r1, r1
	...
    195c:	e2000000 	and	r0, r0, #0
    1960:	1c100012 	ldcne	0, cr0, [r0], {18}
    1964:	01100013 	tsteq	r0, r3, lsl r0
    1968:	131c5500 	tstne	ip, #0, 10
    196c:	13301000 	teqne	r0, #0
    1970:	00011000 	andeq	r1, r1, r0
    1974:	00000053 	andeq	r0, r0, r3, asr r0
    1978:	00000000 	andeq	r0, r0, r0
    197c:	000c1000 	andeq	r1, ip, r0
    1980:	000c1410 	andeq	r1, ip, r0, lsl r4
    1984:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1988:	000c1400 	andeq	r1, ip, r0, lsl #8
    198c:	000c1610 	andeq	r1, ip, r0, lsl r6
    1990:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1994:	000c1624 	andeq	r1, ip, r4, lsr #12
    1998:	000cd210 	andeq	sp, ip, r0, lsl r2
    199c:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    19a0:	0cd200f8 	ldcleq	0, cr0, [r2], {248}	; 0xf8
    19a4:	0cd61000 	ldcleq	0, cr1, [r6], {0}
    19a8:	00021000 	andeq	r1, r2, r0
    19ac:	0000247d 	andeq	r2, r0, sp, ror r4
	...
    19bc:	0c100000 	ldceq	0, cr0, [r0], {-0}
    19c0:	0c461000 	mareq	acc0, r1, r6
    19c4:	00011000 	andeq	r1, r1, r0
    19c8:	000c4650 	andeq	r4, ip, r0, asr r6
    19cc:	000ca410 	andeq	sl, ip, r0, lsl r4
    19d0:	91000310 	tstls	r0, r0, lsl r3
    19d4:	0ca47fac 	stceq	15, cr7, [r4], #688	; 0x2b0
    19d8:	0ca81000 	stceq	0, cr1, [r8]
    19dc:	00011000 	andeq	r1, r1, r0
    19e0:	000ca850 	andeq	sl, ip, r0, asr r8
    19e4:	000cd610 	andeq	sp, ip, r0, lsl r6
    19e8:	91000310 	tstls	r0, r0, lsl r3
    19ec:	00007fac 	andeq	r7, r0, ip, lsr #31
	...
    19fc:	0c100000 	ldceq	0, cr0, [r0], {-0}
    1a00:	0c461000 	mareq	acc0, r1, r6
    1a04:	00011000 	andeq	r1, r1, r0
    1a08:	000c4651 	andeq	r4, ip, r1, asr r6
    1a0c:	000ca410 	andeq	sl, ip, r0, lsl r4
    1a10:	91000310 	tstls	r0, r0, lsl r3
    1a14:	0ca47fb0 	stceq	15, cr7, [r4], #704	; 0x2c0
    1a18:	0ca81000 	stceq	0, cr1, [r8]
    1a1c:	00011000 	andeq	r1, r1, r0
    1a20:	000ca851 	andeq	sl, ip, r1, asr r8
    1a24:	000cd610 	andeq	sp, ip, r0, lsl r6
    1a28:	91000310 	tstls	r0, r0, lsl r3
    1a2c:	00007fb0 			; <UNDEFINED> instruction: 0x00007fb0
	...
    1a3c:	0c100000 	ldceq	0, cr0, [r0], {-0}
    1a40:	0c461000 	mareq	acc0, r1, r6
    1a44:	00011000 	andeq	r1, r1, r0
    1a48:	000c4652 	andeq	r4, ip, r2, asr r6
    1a4c:	000ca410 	andeq	sl, ip, r0, lsl r4
    1a50:	91000310 	tstls	r0, r0, lsl r3
    1a54:	0ca47fb4 	stceq	15, cr7, [r4], #720	; 0x2d0
    1a58:	0ca81000 	stceq	0, cr1, [r8]
    1a5c:	00011000 	andeq	r1, r1, r0
    1a60:	000ca852 	andeq	sl, ip, r2, asr r8
    1a64:	000cd610 	andeq	sp, ip, r0, lsl r6
    1a68:	91000310 	tstls	r0, r0, lsl r3
    1a6c:	00007fb4 			; <UNDEFINED> instruction: 0x00007fb4
	...
    1a78:	0c100000 	ldceq	0, cr0, [r0], {-0}
    1a7c:	0c301000 	ldceq	0, cr1, [r0], #-0
    1a80:	00011000 	andeq	r1, r1, r0
    1a84:	000c3053 	andeq	r3, ip, r3, asr r0
    1a88:	000cd610 	andeq	sp, ip, r0, lsl r6
    1a8c:	5b000110 	blpl	1ed4 <__HEAP_SIZE+0xed4>
	...
    1aa0:	0c100000 	ldceq	0, cr0, [r0], {-0}
    1aa4:	0c461000 	mareq	acc0, r1, r6
    1aa8:	00021000 	andeq	r1, r2, r0
    1aac:	0c460091 	mcrreq	0, 9, r0, r6, cr1
    1ab0:	0c681000 	stcleq	0, cr1, [r8], #-0
    1ab4:	00061000 	andeq	r1, r6, r0
    1ab8:	56049355 			; <UNDEFINED> instruction: 0x56049355
    1abc:	0c680493 	cfstrdeq	mvd0, [r8], #-588	; 0xfffffdb4
    1ac0:	0c7c1000 	ldcleq	0, cr1, [ip], #-0
    1ac4:	00061000 	andeq	r1, r6, r0
    1ac8:	51049350 	tstpl	r4, r0, asr r3
    1acc:	0c7c0493 	cfldrdeq	mvd0, [ip], #-588	; 0xfffffdb4
    1ad0:	0ca41000 	stceq	0, cr1, [r4]
    1ad4:	00061000 	andeq	r1, r6, r0
    1ad8:	56049355 			; <UNDEFINED> instruction: 0x56049355
    1adc:	0ca40493 	cfstrseq	mvf0, [r4], #588	; 0x24c
    1ae0:	0ca81000 	stceq	0, cr1, [r8]
    1ae4:	00021000 	andeq	r1, r2, r0
    1ae8:	00000091 	muleq	r0, r1, r0
	...
    1af4:	0c100000 	ldceq	0, cr0, [r0], {-0}
    1af8:	0c361000 	ldceq	0, cr1, [r6], #-0
    1afc:	00021000 	andeq	r1, r2, r0
    1b00:	0c362091 	ldceq	0, cr2, [r6], #-580	; 0xfffffdbc
    1b04:	0cd61000 	ldcleq	0, cr1, [r6], {0}
    1b08:	00011000 	andeq	r1, r1, r0
    1b0c:	0000005a 	andeq	r0, r0, sl, asr r0
    1b10:	00000000 	andeq	r0, r0, r0
    1b14:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    1b20:	000c2c00 	andeq	r2, ip, r0, lsl #24
    1b24:	000c4610 	andeq	r4, ip, r0, lsl r6
    1b28:	30000210 	andcc	r0, r0, r0, lsl r2
    1b2c:	000c469f 	muleq	ip, pc, r6	; <UNPREDICTABLE>
    1b30:	000c5010 	andeq	r5, ip, r0, lsl r0
    1b34:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1b38:	10000c50 	andne	r0, r0, r0, asr ip
    1b3c:	10000c7c 	andne	r0, r0, ip, ror ip
    1b40:	7c590001 	mrrcvc	0, 0, r0, r9, cr1
    1b44:	a410000c 	ldrge	r0, [r0], #-12
    1b48:	0110000c 	tsteq	r0, ip
    1b4c:	0ca45400 	cfstrseq	mvf5, [r4]
    1b50:	0ca81000 	stceq	0, cr1, [r8]
    1b54:	00021000 	andeq	r1, r2, r0
    1b58:	0ca89f30 	stceq	15, cr9, [r8], #192	; 0xc0
    1b5c:	0cd61000 	ldcleq	0, cr1, [r6], {0}
    1b60:	00011000 	andeq	r1, r1, r0
    1b64:	00000059 	andeq	r0, r0, r9, asr r0
	...
    1b70:	000c4600 	andeq	r4, ip, r0, lsl #12
    1b74:	000c5410 	andeq	r5, ip, r0, lsl r4
    1b78:	53000110 	movwpl	r0, #272	; 0x110
    1b7c:	10000c8a 	andne	r0, r0, sl, lsl #25
    1b80:	10000ca4 	andne	r0, r0, r4, lsr #25
    1b84:	00530001 	subseq	r0, r3, r1
    1b88:	00000000 	andeq	r0, r0, r0
    1b8c:	7c000000 	stcvc	0, cr0, [r0], {-0}
    1b90:	7e10000b 	cdpvc	0, 1, cr0, cr0, cr11, {0}
    1b94:	0210000b 	andseq	r0, r0, #11
    1b98:	7e007d00 	cdpvc	13, 0, cr7, cr0, cr0, {0}
    1b9c:	8010000b 	andshi	r0, r0, fp
    1ba0:	0210000b 	andseq	r0, r0, #11
    1ba4:	80147d00 	andshi	r7, r4, r0, lsl #26
    1ba8:	0e10000b 	cdpeq	0, 1, cr0, cr0, cr11, {0}
    1bac:	0310000c 	tsteq	r0, #12
    1bb0:	00d87d00 	sbcseq	r7, r8, r0, lsl #26
    1bb4:	10000c0e 	andne	r0, r0, lr, lsl #24
    1bb8:	10000c10 	andne	r0, r0, r0, lsl ip
    1bbc:	147d0002 	ldrbtne	r0, [sp], #-2
	...
    1bcc:	10000b7c 	andne	r0, r0, ip, ror fp
    1bd0:	10000c0b 	andne	r0, r0, fp, lsl #24
    1bd4:	0b500001 	bleq	1401be0 <__RAM_SIZE+0x1301be0>
    1bd8:	1010000c 	andsne	r0, r0, ip
    1bdc:	0410000c 	ldreq	r0, [r0], #-12
    1be0:	5001f300 	andpl	pc, r1, r0, lsl #6
    1be4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1bf0:	000b7c00 	andeq	r7, fp, r0, lsl #24
    1bf4:	000c0b10 	andeq	r0, ip, r0, lsl fp
    1bf8:	51000110 	tstpl	r0, r0, lsl r1
    1bfc:	10000c0b 	andne	r0, r0, fp, lsl #24
    1c00:	10000c10 	andne	r0, r0, r0, lsl ip
    1c04:	01f30004 	mvnseq	r0, r4
    1c08:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    1c14:	0b7c0000 	bleq	1f01c1c <__RAM_SIZE+0x1e01c1c>
    1c18:	0c0b1000 	stceq	0, cr1, [fp], {-0}
    1c1c:	00011000 	andeq	r1, r1, r0
    1c20:	000c0b52 	andeq	r0, ip, r2, asr fp
    1c24:	000c1010 	andeq	r1, ip, r0, lsl r0
    1c28:	f3000410 	vqshl.u8	d0, d0, d0
    1c2c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    1c38:	7c000000 	stcvc	0, cr0, [r0], {-0}
    1c3c:	0b10000b 	bleq	401c70 <__RAM_SIZE+0x301c70>
    1c40:	0110000c 	tsteq	r0, ip
    1c44:	0c0b5300 	stceq	3, cr5, [fp], {-0}
    1c48:	0c101000 	ldceq	0, cr1, [r0], {-0}
    1c4c:	00041000 	andeq	r1, r4, r0
    1c50:	9f5301f3 	svcls	0x005301f3
	...
    1c64:	0b7c0000 	bleq	1f01c6c <__RAM_SIZE+0x1e01c6c>
    1c68:	0b9a1000 	bleq	fe685c70 <__StackTop+0xc6585c70>
    1c6c:	00021000 	andeq	r1, r2, r0
    1c70:	0b9a0091 	bleq	fe681ebc <__StackTop+0xc6581ebc>
    1c74:	0bb41000 	bleq	fed05c7c <__StackTop+0xc6c05c7c>
    1c78:	00011000 	andeq	r1, r1, r0
    1c7c:	000bb454 	andeq	fp, fp, r4, asr r4
    1c80:	000bc010 	andeq	ip, fp, r0, lsl r0
    1c84:	5c000110 	stfpls	f0, [r0], {16}
    1c88:	10000bc0 	andne	r0, r0, r0, asr #23
    1c8c:	10000bee 	andne	r0, r0, lr, ror #23
    1c90:	ee540001 	cdp	0, 5, cr0, cr4, cr1, {0}
    1c94:	f010000b 			; <UNDEFINED> instruction: 0xf010000b
    1c98:	0210000b 	andseq	r0, r0, #11
    1c9c:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    1ca8:	7c000000 	stcvc	0, cr0, [r0], {-0}
    1cac:	8c10000b 	ldchi	0, cr0, [r0], {11}
    1cb0:	0210000b 	andseq	r0, r0, #11
    1cb4:	8c149100 	ldfhid	f1, [r4], {-0}
    1cb8:	1010000b 	andsne	r0, r0, fp
    1cbc:	0110000c 	tsteq	r0, ip
    1cc0:	00005600 	andeq	r5, r0, r0, lsl #12
    1cc4:	00000000 	andeq	r0, r0, r0
    1cc8:	00020000 	andeq	r0, r2, r0
	...
    1cd4:	0b860000 	bleq	fe181cdc <__StackTop+0xc6081cdc>
    1cd8:	0b9a1000 	bleq	fe685ce0 <__StackTop+0xc6585ce0>
    1cdc:	00021000 	andeq	r1, r2, r0
    1ce0:	0b9a9f30 	bleq	fe6a99a8 <__StackTop+0xc65a99a8>
    1ce4:	0ba61000 	bleq	fe985cec <__StackTop+0xc6885cec>
    1ce8:	00011000 	andeq	r1, r1, r0
    1cec:	000ba65e 	andeq	sl, fp, lr, asr r6
    1cf0:	000bc010 	andeq	ip, fp, r0, lsl r0
    1cf4:	57000110 	smladpl	r0, r0, r1, r0
    1cf8:	10000bc0 	andne	r0, r0, r0, asr #23
    1cfc:	10000bee 	andne	r0, r0, lr, ror #23
    1d00:	ee5e0001 	cdp	0, 5, cr0, cr14, cr1, {0}
    1d04:	f010000b 			; <UNDEFINED> instruction: 0xf010000b
    1d08:	0210000b 	andseq	r0, r0, #11
    1d0c:	f09f3000 			; <UNDEFINED> instruction: 0xf09f3000
    1d10:	1010000b 	andsne	r0, r0, fp
    1d14:	0110000c 	tsteq	r0, ip
    1d18:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    1d2c:	0b9a0000 	bleq	fe681d34 <__StackTop+0xc6581d34>
    1d30:	0b9e1000 	bleq	fe785d38 <__StackTop+0xc6685d38>
    1d34:	00011000 	andeq	r1, r1, r0
    1d38:	000b9e5c 	andeq	r9, fp, ip, asr lr
    1d3c:	000ba210 	andeq	sl, fp, r0, lsl r2
    1d40:	7c000310 	stcvc	3, cr0, [r0], {16}
    1d44:	0ba29f50 	bleq	fe8a9a8c <__StackTop+0xc67a9a8c>
    1d48:	0bc01000 	bleq	ff005d50 <__StackTop+0xc6f05d50>
    1d4c:	00121000 	andseq	r1, r2, r0
    1d50:	00740074 	rsbseq	r0, r4, r4, ror r0
    1d54:	007530f7 	ldrshteq	r3, [r5], #-7
    1d58:	f71b30f7 			; <UNDEFINED> instruction: 0xf71b30f7
    1d5c:	1e007500 	cfsh32ne	mvfx7, mvfx0, #0
    1d60:	0bcc9f1c 	bleq	ff3299d8 <__StackTop+0xc72299d8>
    1d64:	0bdc1000 	bleq	ff705d6c <__StackTop+0xc7605d6c>
    1d68:	00011000 	andeq	r1, r1, r0
    1d6c:	000bdc5c 	andeq	sp, fp, ip, asr ip
    1d70:	000bea10 	andeq	lr, fp, r0, lsl sl
    1d74:	74001210 	strvc	r1, [r0], #-528	; 0xfffffdf0
    1d78:	f7007400 			; <UNDEFINED> instruction: 0xf7007400
    1d7c:	f7007530 			; <UNDEFINED> instruction: 0xf7007530
    1d80:	00f71b30 	rscseq	r1, r7, r0, lsr fp
    1d84:	1c1e0075 	ldcne	0, cr0, [lr], {117}	; 0x75
    1d88:	000bea9f 	muleq	fp, pc, sl	; <UNPREDICTABLE>
    1d8c:	000bee10 	andeq	lr, fp, r0, lsl lr
    1d90:	5c000110 	stfpls	f0, [r0], {16}
	...
    1d9c:	10000a44 	andne	r0, r0, r4, asr #20
    1da0:	10000a48 	andne	r0, r0, r8, asr #20
    1da4:	007d0002 	rsbseq	r0, sp, r2
    1da8:	10000a48 	andne	r0, r0, r8, asr #20
    1dac:	10000a4a 	andne	r0, r0, sl, asr #20
    1db0:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    1db4:	10000a4a 	andne	r0, r0, sl, asr #20
    1db8:	10000b00 	andne	r0, r0, r0, lsl #22
    1dbc:	307d0002 	rsbscc	r0, sp, r2
    1dc0:	10000b00 	andne	r0, r0, r0, lsl #22
    1dc4:	10000b04 	andne	r0, r0, r4, lsl #22
    1dc8:	1c7d0002 	ldclne	0, cr0, [sp], #-8
    1dcc:	10000b04 	andne	r0, r0, r4, lsl #22
    1dd0:	10000b7c 	andne	r0, r0, ip, ror fp
    1dd4:	307d0002 	rsbscc	r0, sp, r2
	...
    1de4:	0a440000 	beq	1101dec <__RAM_SIZE+0x1001dec>
    1de8:	0afd1000 	beq	fff45df0 <__StackTop+0xc7e45df0>
    1dec:	00011000 	andeq	r1, r1, r0
    1df0:	000afd50 	andeq	pc, sl, r0, asr sp	; <UNPREDICTABLE>
    1df4:	000b0410 	andeq	r0, fp, r0, lsl r4
    1df8:	f3000410 	vqshl.u8	d0, d0, d0
    1dfc:	049f5001 	ldreq	r5, [pc], #1	; 1e04 <__HEAP_SIZE+0xe04>
    1e00:	7c10000b 	ldcvc	0, cr0, [r0], {11}
    1e04:	0110000b 	tsteq	r0, fp
    1e08:	00005000 	andeq	r5, r0, r0
	...
    1e18:	10000a44 	andne	r0, r0, r4, asr #20
    1e1c:	10000afd 	strdne	r0, [r0], -sp
    1e20:	fd510001 	ldc2l	0, cr0, [r1, #-4]
    1e24:	0410000a 	ldreq	r0, [r0], #-10
    1e28:	0410000b 	ldreq	r0, [r0], #-11
    1e2c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1e30:	000b049f 	muleq	fp, pc, r4	; <UNPREDICTABLE>
    1e34:	000b7c10 	andeq	r7, fp, r0, lsl ip
    1e38:	51000110 	tstpl	r0, r0, lsl r1
	...
    1e48:	0a440000 	beq	1101e50 <__RAM_SIZE+0x1001e50>
    1e4c:	0afd1000 	beq	fff45e54 <__StackTop+0xc7e45e54>
    1e50:	00011000 	andeq	r1, r1, r0
    1e54:	000afd52 	andeq	pc, sl, r2, asr sp	; <UNPREDICTABLE>
    1e58:	000b0410 	andeq	r0, fp, r0, lsl r4
    1e5c:	f3000410 	vqshl.u8	d0, d0, d0
    1e60:	049f5201 	ldreq	r5, [pc], #513	; 1e68 <__HEAP_SIZE+0xe68>
    1e64:	7c10000b 	ldcvc	0, cr0, [r0], {11}
    1e68:	0110000b 	tsteq	r0, fp
    1e6c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    1e7c:	10000a44 	andne	r0, r0, r4, asr #20
    1e80:	10000afd 	strdne	r0, [r0], -sp
    1e84:	fd530001 	ldc2l	0, cr0, [r3, #-4]
    1e88:	0410000a 	ldreq	r0, [r0], #-10
    1e8c:	0410000b 	ldreq	r0, [r0], #-11
    1e90:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    1e94:	000b049f 	muleq	fp, pc, r4	; <UNPREDICTABLE>
    1e98:	000b7c10 	andeq	r7, fp, r0, lsl ip
    1e9c:	53000110 	movwpl	r0, #272	; 0x110
	...
    1eac:	10000a44 	andne	r0, r0, r4, asr #20
    1eb0:	10000b04 	andne	r0, r0, r4, lsl #22
    1eb4:	00910002 	addseq	r0, r1, r2
    1eb8:	10000b04 	andne	r0, r0, r4, lsl #22
    1ebc:	10000b7c 	andne	r0, r0, ip, ror fp
    1ec0:	00910002 	addseq	r0, r1, r2
	...
    1ecc:	01000000 	mrseq	r0, (UNDEF: 0)
    1ed0:	01000001 	tsteq	r0, r1
    1ed4:	01000001 	tsteq	r0, r1
    1ed8:	01000001 	tsteq	r0, r1
    1edc:	01000001 	tsteq	r0, r1
    1ee0:	00000001 	andeq	r0, r0, r1
    1ee4:	00000000 	andeq	r0, r0, r0
    1ee8:	00010100 	andeq	r0, r1, r0, lsl #2
    1eec:	00010100 	andeq	r0, r1, r0, lsl #2
    1ef0:	00010100 	andeq	r0, r1, r0, lsl #2
    1ef4:	00010100 	andeq	r0, r1, r0, lsl #2
    1ef8:	00010100 	andeq	r0, r1, r0, lsl #2
    1efc:	0a440000 	beq	1101f04 <__RAM_SIZE+0x1001f04>
    1f00:	0a7c1000 	beq	1f05f08 <__RAM_SIZE+0x1e05f08>
    1f04:	00021000 	andeq	r1, r2, r0
    1f08:	0a7c0491 	beq	1f03154 <__RAM_SIZE+0x1e03154>
    1f0c:	0a7c1000 	beq	1f05f14 <__RAM_SIZE+0x1e05f14>
    1f10:	00011000 	andeq	r1, r1, r0
    1f14:	000a7c54 	andeq	r7, sl, r4, asr ip
    1f18:	000a8610 	andeq	r8, sl, r0, lsl r6
    1f1c:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f20:	0a869f01 	beq	fe1a9b2c <__StackTop+0xc60a9b2c>
    1f24:	0a9c1000 	beq	fe705f2c <__StackTop+0xc6605f2c>
    1f28:	00011000 	andeq	r1, r1, r0
    1f2c:	000a9c54 	andeq	r9, sl, r4, asr ip
    1f30:	000aa610 	andeq	sl, sl, r0, lsl r6
    1f34:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f38:	0aa69f01 	beq	fe9a9b44 <__StackTop+0xc68a9b44>
    1f3c:	0ad41000 	beq	ff505f44 <__StackTop+0xc7405f44>
    1f40:	00011000 	andeq	r1, r1, r0
    1f44:	000ad454 	andeq	sp, sl, r4, asr r4
    1f48:	000ade10 	andeq	sp, sl, r0, lsl lr
    1f4c:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f50:	0ade9f01 	beq	ff7a9b5c <__StackTop+0xc76a9b5c>
    1f54:	0ae81000 	beq	ffa05f5c <__StackTop+0xc7905f5c>
    1f58:	00011000 	andeq	r1, r1, r0
    1f5c:	000ae854 	andeq	lr, sl, r4, asr r8
    1f60:	000af210 	andeq	pc, sl, r0, lsl r2	; <UNPREDICTABLE>
    1f64:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f68:	0af29f01 	beq	ffca9b74 <__StackTop+0xc7ba9b74>
    1f6c:	0b041000 	bleq	105f74 <__RAM_SIZE+0x5f74>
    1f70:	00011000 	andeq	r1, r1, r0
    1f74:	000b0454 	andeq	r0, fp, r4, asr r4
    1f78:	000b0810 	andeq	r0, fp, r0, lsl r8
    1f7c:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f80:	0b089f7f 	bleq	229d84 <__RAM_SIZE+0x129d84>
    1f84:	0b161000 	bleq	585f8c <__RAM_SIZE+0x485f8c>
    1f88:	00011000 	andeq	r1, r1, r0
    1f8c:	000b165c 	andeq	r1, fp, ip, asr r6
    1f90:	000b1810 	andeq	r1, fp, r0, lsl r8
    1f94:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1f98:	10000b18 	andne	r0, r0, r8, lsl fp
    1f9c:	10000b1c 	andne	r0, r0, ip, lsl fp
    1fa0:	1c5c0001 	mrrcne	0, 0, r0, ip, cr1
    1fa4:	2610000b 	ldrcs	r0, [r0], -fp
    1fa8:	0110000b 	tsteq	r0, fp
    1fac:	0b265400 	bleq	996fb4 <__RAM_SIZE+0x896fb4>
    1fb0:	0b301000 	bleq	c05fb8 <__RAM_SIZE+0xb05fb8>
    1fb4:	00031000 	andeq	r1, r3, r0
    1fb8:	309f0174 	addscc	r0, pc, r4, ror r1	; <UNPREDICTABLE>
    1fbc:	3c10000b 	ldccc	0, cr0, [r0], {11}
    1fc0:	0110000b 	tsteq	r0, fp
    1fc4:	0b3c5400 	bleq	f16fcc <__RAM_SIZE+0xe16fcc>
    1fc8:	0b461000 	bleq	1185fd0 <__RAM_SIZE+0x1085fd0>
    1fcc:	00031000 	andeq	r1, r3, r0
    1fd0:	469f0174 			; <UNDEFINED> instruction: 0x469f0174
    1fd4:	4c10000b 	ldcmi	0, cr0, [r0], {11}
    1fd8:	0110000b 	tsteq	r0, fp
    1fdc:	0b4c5400 	bleq	1316fe4 <__RAM_SIZE+0x1216fe4>
    1fe0:	0b561000 	bleq	1585fe8 <__RAM_SIZE+0x1485fe8>
    1fe4:	00031000 	andeq	r1, r3, r0
    1fe8:	569f0174 			; <UNDEFINED> instruction: 0x569f0174
    1fec:	5e10000b 	cdppl	0, 1, cr0, cr0, cr11, {0}
    1ff0:	0110000b 	tsteq	r0, fp
    1ff4:	0b5e5400 	bleq	1796ffc <__RAM_SIZE+0x1696ffc>
    1ff8:	0b681000 	bleq	1a06000 <__RAM_SIZE+0x1906000>
    1ffc:	00031000 	andeq	r1, r3, r0
    2000:	689f0174 	ldmvs	pc, {r2, r4, r5, r6, r8}	; <UNPREDICTABLE>
    2004:	7010000b 	andsvc	r0, r0, fp
    2008:	0110000b 	tsteq	r0, fp
    200c:	0b705400 	bleq	1c17014 <__RAM_SIZE+0x1b17014>
    2010:	0b7a1000 	bleq	1e86018 <__RAM_SIZE+0x1d86018>
    2014:	00031000 	andeq	r1, r3, r0
    2018:	7a9f0174 	bvc	fe7c25f0 <__StackTop+0xc66c25f0>
    201c:	7c10000b 	ldcvc	0, cr0, [r0], {11}
    2020:	0110000b 	tsteq	r0, fp
    2024:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    2030:	0a440000 	beq	1102038 <__RAM_SIZE+0x1002038>
    2034:	0b041000 	bleq	10603c <__RAM_SIZE+0x603c>
    2038:	00021000 	andeq	r1, r2, r0
    203c:	0b040891 	bleq	104288 <__RAM_SIZE+0x4288>
    2040:	0b7c1000 	bleq	1f06048 <__RAM_SIZE+0x1e06048>
    2044:	00021000 	andeq	r1, r2, r0
    2048:	00000891 	muleq	r0, r1, r8
	...
    2054:	0a440000 	beq	110205c <__RAM_SIZE+0x100205c>
    2058:	0b041000 	bleq	106060 <__RAM_SIZE+0x6060>
    205c:	00021000 	andeq	r1, r2, r0
    2060:	0b040c91 	bleq	1052ac <__RAM_SIZE+0x52ac>
    2064:	0b7c1000 	bleq	1f0606c <__RAM_SIZE+0x1e0606c>
    2068:	00021000 	andeq	r1, r2, r0
    206c:	00000c91 	muleq	r0, r1, ip
	...
    2078:	0a440000 	beq	1102080 <__RAM_SIZE+0x1002080>
    207c:	0b041000 	bleq	106084 <__RAM_SIZE+0x6084>
    2080:	00021000 	andeq	r1, r2, r0
    2084:	0b041091 	bleq	1062d0 <__RAM_SIZE+0x62d0>
    2088:	0b7c1000 	bleq	1f06090 <__RAM_SIZE+0x1e06090>
    208c:	00021000 	andeq	r1, r2, r0
    2090:	00001091 	muleq	r0, r1, r0
	...
    209c:	0a440000 	beq	11020a4 <__RAM_SIZE+0x10020a4>
    20a0:	0a7a1000 	beq	1e860a8 <__RAM_SIZE+0x1d860a8>
    20a4:	00021000 	andeq	r1, r2, r0
    20a8:	0a7a1491 	beq	1e872f4 <__RAM_SIZE+0x1d872f4>
    20ac:	0b7c1000 	bleq	1f060b4 <__RAM_SIZE+0x1e060b4>
    20b0:	00011000 	andeq	r1, r1, r0
    20b4:	00000057 	andeq	r0, r0, r7, asr r0
	...
    20c0:	000a4400 	andeq	r4, sl, r0, lsl #8
    20c4:	000b0410 	andeq	r0, fp, r0, lsl r4
    20c8:	91000210 	tstls	r0, r0, lsl r2
    20cc:	000b0418 	andeq	r0, fp, r8, lsl r4
    20d0:	000b7c10 	andeq	r7, fp, r0, lsl ip
    20d4:	91000210 	tstls	r0, r0, lsl r2
    20d8:	00000018 	andeq	r0, r0, r8, lsl r0
    20dc:	00000000 	andeq	r0, r0, r0
    20e0:	0009c600 	andeq	ip, r9, r0, lsl #12
    20e4:	0009ca10 	andeq	ip, r9, r0, lsl sl
    20e8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    20ec:	0009ca00 	andeq	ip, r9, r0, lsl #20
    20f0:	0009cc10 	andeq	ip, r9, r0, lsl ip
    20f4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    20f8:	0009cc24 	andeq	ip, r9, r4, lsr #24
    20fc:	000a2a10 	andeq	r2, sl, r0, lsl sl
    2100:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2104:	000a2a30 	andeq	r2, sl, r0, lsr sl
    2108:	000a2e10 	andeq	r2, sl, r0, lsl lr
    210c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2110:	000a2e24 	andeq	r2, sl, r4, lsr #28
    2114:	000a4410 	andeq	r4, sl, r0, lsl r4
    2118:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    211c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
    2128:	0009c600 	andeq	ip, r9, r0, lsl #12
    212c:	0009ea10 	andeq	lr, r9, r0, lsl sl
    2130:	50000110 	andpl	r0, r0, r0, lsl r1
    2134:	100009ea 	andne	r0, r0, sl, ror #19
    2138:	10000a44 	andne	r0, r0, r4, asr #20
    213c:	00550001 	subseq	r0, r5, r1
	...
    2148:	c6000000 	strgt	r0, [r0], -r0
    214c:	ea100009 	b	402178 <__RAM_SIZE+0x302178>
    2150:	01100009 	tsteq	r0, r9
    2154:	09ea5100 	stmibeq	sl!, {r8, ip, lr}^
    2158:	0a441000 	beq	1106160 <__RAM_SIZE+0x1006160>
    215c:	00011000 	andeq	r1, r1, r0
    2160:	00000056 	andeq	r0, r0, r6, asr r0
	...
    2174:	0009c600 	andeq	ip, r9, r0, lsl #12
    2178:	0009f210 	andeq	pc, r9, r0, lsl r2	; <UNPREDICTABLE>
    217c:	52000110 	andpl	r0, r0, #16, 2
    2180:	100009f2 	strdne	r0, [r0], -r2
    2184:	10000a02 	andne	r0, r0, r2, lsl #20
    2188:	025b0001 	subseq	r0, fp, #1
    218c:	0e10000a 	cdpeq	0, 1, cr0, cr0, cr10, {0}
    2190:	0110000a 	tsteq	r0, sl
    2194:	0a0e5200 	beq	39699c <__RAM_SIZE+0x29699c>
    2198:	0a1a1000 	beq	6861a0 <__RAM_SIZE+0x5861a0>
    219c:	00011000 	andeq	r1, r1, r0
    21a0:	000a1a58 	andeq	r1, sl, r8, asr sl
    21a4:	000a3810 	andeq	r3, sl, r0, lsl r8
    21a8:	52000110 	andpl	r0, r0, #16, 2
    21ac:	10000a38 	andne	r0, r0, r8, lsr sl
    21b0:	10000a44 	andne	r0, r0, r4, asr #20
    21b4:	00540001 	subseq	r0, r4, r1
	...
    21c0:	c6000000 	strgt	r0, [r0], -r0
    21c4:	e0100009 	ands	r0, r0, r9
    21c8:	01100009 	tsteq	r0, r9
    21cc:	09e05300 	stmibeq	r0!, {r8, r9, ip, lr}^
    21d0:	0a441000 	beq	11061d8 <__RAM_SIZE+0x10061d8>
    21d4:	00011000 	andeq	r1, r1, r0
    21d8:	00000057 	andeq	r0, r0, r7, asr r0
	...
    21e4:	0009c600 	andeq	ip, r9, r0, lsl #12
    21e8:	000a2e10 	andeq	r2, sl, r0, lsl lr
    21ec:	91000210 	tstls	r0, r0, lsl r2
    21f0:	000a2e00 	andeq	r2, sl, r0, lsl #28
    21f4:	000a4410 	andeq	r4, sl, r0, lsl r4
    21f8:	91000210 	tstls	r0, r0, lsl r2
	...
    2208:	0009c600 	andeq	ip, r9, r0, lsl #12
    220c:	000a0810 	andeq	r0, sl, r0, lsl r8
    2210:	91000210 	tstls	r0, r0, lsl r2
    2214:	000a0804 	andeq	r0, sl, r4, lsl #16
    2218:	000a2610 	andeq	r2, sl, r0, lsl r6
    221c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    222c:	100009c6 	andne	r0, r0, r6, asr #19
    2230:	10000a2e 	andne	r0, r0, lr, lsr #20
    2234:	08910002 	ldmeq	r1, {r1}
    2238:	10000a2e 	andne	r0, r0, lr, lsr #20
    223c:	10000a44 	andne	r0, r0, r4, asr #20
    2240:	08910002 	ldmeq	r1, {r1}
	...
    2250:	100009c6 	andne	r0, r0, r6, asr #19
    2254:	10000a2e 	andne	r0, r0, lr, lsr #20
    2258:	0c910002 	ldceq	0, cr0, [r1], {2}
    225c:	10000a2e 	andne	r0, r0, lr, lsr #20
    2260:	10000a44 	andne	r0, r0, r4, asr #20
    2264:	0c910002 	ldceq	0, cr0, [r1], {2}
	...
    2270:	00000001 	andeq	r0, r0, r1
    2274:	09de0000 	ldmibeq	lr, {}^	; <UNPREDICTABLE>
    2278:	09ea1000 	stmibeq	sl!, {ip}^
    227c:	00011000 	andeq	r1, r1, r0
    2280:	0009ea52 	andeq	lr, r9, r2, asr sl
    2284:	000a0810 	andeq	r0, sl, r0, lsl r8
    2288:	91000210 	tstls	r0, r0, lsl r2
    228c:	000a0854 	andeq	r0, sl, r4, asr r8
    2290:	000a4410 	andeq	r4, sl, r0, lsl r4
    2294:	f3000410 	vqshl.u8	d0, d0, d0
    2298:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    22a4:	0009ea00 	andeq	lr, r9, r0, lsl #20
    22a8:	000a0810 	andeq	r0, sl, r0, lsl r8
    22ac:	58000110 	stmdapl	r0, {r4, r8}
	...
    22bc:	100009a2 	andne	r0, r0, r2, lsr #19
    22c0:	100009a6 	andne	r0, r0, r6, lsr #19
    22c4:	a6500001 	ldrbge	r0, [r0], -r1
    22c8:	c6100009 	ldrgt	r0, [r0], -r9
    22cc:	01100009 	tsteq	r0, r9
    22d0:	00005100 	andeq	r5, r0, r0, lsl #2
    22d4:	00000000 	andeq	r0, r0, r0
    22d8:	00010000 	andeq	r0, r1, r0
    22dc:	00000000 	andeq	r0, r0, r0
    22e0:	100009a4 	andne	r0, r0, r4, lsr #19
    22e4:	100009a8 	andne	r0, r0, r8, lsr #19
    22e8:	9f300002 	svcls	0x00300002
    22ec:	100009a8 	andne	r0, r0, r8, lsr #19
    22f0:	100009ac 	andne	r0, r0, ip, lsr #19
    22f4:	b8500001 	ldmdalt	r0, {r0}^
    22f8:	c6100009 	ldrgt	r0, [r0], -r9
    22fc:	01100009 	tsteq	r0, r9
    2300:	00005000 	andeq	r5, r0, r0
	...
    230c:	09bc0000 	ldmibeq	ip!, {}	; <UNPREDICTABLE>
    2310:	09be1000 	ldmibeq	lr!, {ip}
    2314:	00011000 	andeq	r1, r1, r0
    2318:	0009be53 	andeq	fp, r9, r3, asr lr
    231c:	0009c010 	andeq	ip, r9, r0, lsl r0
    2320:	73000310 	movwvc	r0, #784	; 0x310
    2324:	00009f30 	andeq	r9, r0, r0, lsr pc
	...
    2334:	00020000 	andeq	r0, r2, r0
    2338:	0000007d 	andeq	r0, r0, sp, ror r0
    233c:	00000000 	andeq	r0, r0, r0
    2340:	00020000 	andeq	r0, r2, r0
    2344:	0000087d 	andeq	r0, r0, sp, ror r8
    2348:	00000000 	andeq	r0, r0, r0
    234c:	00020000 	andeq	r0, r2, r0
    2350:	0000007d 	andeq	r0, r0, sp, ror r0
	...
    2368:	00500001 	subseq	r0, r0, r1
    236c:	00000000 	andeq	r0, r0, r0
    2370:	04000000 	streq	r0, [r0], #-0
    2374:	5001f300 	andpl	pc, r1, r0, lsl #6
    2378:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    237c:	00000000 	andeq	r0, r0, r0
    2380:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    2398:	00010000 	andeq	r0, r1, r0
    239c:	00000051 	andeq	r0, r0, r1, asr r0
    23a0:	00000000 	andeq	r0, r0, r0
    23a4:	f3000400 	vshl.u8	d0, d0, d0
    23a8:	009f5101 	addseq	r5, pc, r1, lsl #2
    23ac:	00000000 	andeq	r0, r0, r0
    23b0:	01000000 	mrseq	r0, (UNDEF: 0)
    23b4:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    23cc:	00520001 	subseq	r0, r2, r1
    23d0:	00000000 	andeq	r0, r0, r0
    23d4:	04000000 	streq	r0, [r0], #-0
    23d8:	5201f300 	andpl	pc, r1, #0, 6
    23dc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    23e0:	00000000 	andeq	r0, r0, r0
    23e4:	52000100 	andpl	r0, r0, #0, 2
	...
    23fc:	00010000 	andeq	r0, r1, r0
    2400:	00000053 	andeq	r0, r0, r3, asr r0
    2404:	00000000 	andeq	r0, r0, r0
    2408:	f3000400 	vshl.u8	d0, d0, d0
    240c:	009f5301 	addseq	r5, pc, r1, lsl #6
    2410:	00000000 	andeq	r0, r0, r0
    2414:	01000000 	mrseq	r0, (UNDEF: 0)
    2418:	00005300 	andeq	r5, r0, r0, lsl #6
    241c:	00000000 	andeq	r0, r0, r0
    2420:	1ae00000 	bne	ff802428 <__StackTop+0xc7702428>
    2424:	1ae61000 	bne	ff98642c <__StackTop+0xc788642c>
    2428:	00021000 	andeq	r1, r2, r0
    242c:	1ae6007d 	bne	ff982628 <__StackTop+0xc7882628>
    2430:	1aec1000 	bne	ffb06438 <__StackTop+0xc7a06438>
    2434:	00021000 	andeq	r1, r2, r0
    2438:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    2444:	1ae00000 	bne	ff80244c <__StackTop+0xc770244c>
    2448:	1ae91000 	bne	ffa46450 <__StackTop+0xc7946450>
    244c:	00011000 	andeq	r1, r1, r0
    2450:	001ae950 	andseq	lr, sl, r0, asr r9
    2454:	001aec10 	andseq	lr, sl, r0, lsl ip
    2458:	f3000410 	vqshl.u8	d0, d0, d0
    245c:	009f5001 	addseq	r5, pc, r1
	...
    2468:	e0000000 	and	r0, r0, r0
    246c:	e910001a 	ldmdb	r0, {r1, r3, r4}
    2470:	0110001a 	tsteq	r0, sl, lsl r0
    2474:	1ae95100 	bne	ffa5687c <__StackTop+0xc795687c>
    2478:	1aec1000 	bne	ffb06480 <__StackTop+0xc7a06480>
    247c:	00041000 	andeq	r1, r4, r0
    2480:	9f5101f3 	svcls	0x005101f3
	...
    2490:	10001ae0 	andne	r1, r0, r0, ror #21
    2494:	10001ae9 	andne	r1, r0, r9, ror #21
    2498:	e9520001 	ldmdb	r2, {r0}^
    249c:	ec10001a 	ldc	0, cr0, [r0], {26}
    24a0:	0410001a 	ldreq	r0, [r0], #-26	; 0xffffffe6
    24a4:	5201f300 	andpl	pc, r1, #0, 6
    24a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    24b4:	001ae000 	andseq	lr, sl, r0
    24b8:	001ae910 	andseq	lr, sl, r0, lsl r9
    24bc:	53000110 	movwpl	r0, #272	; 0x110
    24c0:	10001ae9 	andne	r1, r0, r9, ror #21
    24c4:	10001aec 	andne	r1, r0, ip, ror #21
    24c8:	01f30004 	mvnseq	r0, r4
    24cc:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    24dc:	00020000 	andeq	r0, r2, r0
    24e0:	0000007d 	andeq	r0, r0, sp, ror r0
    24e4:	00000000 	andeq	r0, r0, r0
    24e8:	00020000 	andeq	r0, r2, r0
    24ec:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    2500:	00010000 	andeq	r0, r1, r0
    2504:	00000050 	andeq	r0, r0, r0, asr r0
    2508:	00000000 	andeq	r0, r0, r0
    250c:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
    2524:	00510001 	subseq	r0, r1, r1
    2528:	00000000 	andeq	r0, r0, r0
    252c:	01000000 	mrseq	r0, (UNDEF: 0)
    2530:	00005500 	andeq	r5, r0, r0, lsl #10
    2534:	00000000 	andeq	r0, r0, r0
    2538:	00010000 	andeq	r0, r1, r0
    253c:	00000100 	andeq	r0, r0, r0, lsl #2
	...
    2548:	9f300002 	svcls	0x00300002
	...
    2554:	00500001 	subseq	r0, r0, r1
    2558:	00000000 	andeq	r0, r0, r0
    255c:	01000000 	mrseq	r0, (UNDEF: 0)
    2560:	00005000 	andeq	r5, r0, r0
    2564:	00000000 	andeq	r0, r0, r0
    2568:	00020000 	andeq	r0, r2, r0
	...
    2574:	00020000 	andeq	r0, r2, r0
    2578:	00009f30 	andeq	r9, r0, r0, lsr pc
    257c:	00000000 	andeq	r0, r0, r0
    2580:	00010000 	andeq	r0, r1, r0
    2584:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2594:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    25a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    25a4:	00000008 	andeq	r0, r0, r8
	...
    25b8:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    25c4:	01f30004 	mvnseq	r0, r4
    25c8:	00009f50 	andeq	r9, r0, r0, asr pc
    25cc:	00000000 	andeq	r0, r0, r0
    25d0:	1b2c0000 	blne	b025d8 <__RAM_SIZE+0xa025d8>
    25d4:	1b2e1000 	blne	b865dc <__RAM_SIZE+0xa865dc>
    25d8:	00021000 	andeq	r1, r2, r0
    25dc:	1b2e007d 	blne	b827d8 <__RAM_SIZE+0xa827d8>
    25e0:	1b4a1000 	blne	12865e8 <__RAM_SIZE+0x11865e8>
    25e4:	00021000 	andeq	r1, r2, r0
    25e8:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    25f4:	1b2c0000 	blne	b025fc <__RAM_SIZE+0xa025fc>
    25f8:	1b341000 	blne	d06600 <__RAM_SIZE+0xc06600>
    25fc:	00011000 	andeq	r1, r1, r0
    2600:	001b3450 	andseq	r3, fp, r0, asr r4
    2604:	001b4a10 	andseq	r4, fp, r0, lsl sl
    2608:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    2614:	00000001 	andeq	r0, r0, r1
    2618:	10001b30 	andne	r1, r0, r0, lsr fp
    261c:	10001b34 	andne	r1, r0, r4, lsr fp
    2620:	9f300002 	svcls	0x00300002
    2624:	10001b34 	andne	r1, r0, r4, lsr fp
    2628:	10001b4a 	andne	r1, r0, sl, asr #22
    262c:	00540001 	subseq	r0, r4, r1
    2630:	00000000 	andeq	r0, r0, r0
    2634:	01000000 	mrseq	r0, (UNDEF: 0)
    2638:	001b1800 	andseq	r1, fp, r0, lsl #16
    263c:	001b2c10 	andseq	r2, fp, r0, lsl ip
    2640:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    264c:	1e300100 	rsfnes	f0, f0, f0
    2650:	1e301000 	cdpne	0, 3, cr1, cr0, cr0, {0}
    2654:	00011000 	andeq	r1, r1, r0
    2658:	00000050 	andeq	r0, r0, r0, asr r0
    265c:	00000000 	andeq	r0, r0, r0
    2660:	001c2400 	andseq	r2, ip, r0, lsl #8
    2664:	001c2810 	andseq	r2, ip, r0, lsl r8
    2668:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    266c:	001c2800 	andseq	r2, ip, r0, lsl #16
    2670:	001ca010 	andseq	sl, ip, r0, lsl r0
    2674:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2678:	00000020 	andeq	r0, r0, r0, lsr #32
	...
    2688:	001c2400 	andseq	r2, ip, r0, lsl #8
    268c:	001c3e10 	andseq	r3, ip, r0, lsl lr
    2690:	50000110 	andpl	r0, r0, r0, lsl r1
    2694:	10001c3e 	andne	r1, r0, lr, lsr ip
    2698:	10001c78 	andne	r1, r0, r8, ror ip
    269c:	78580001 	ldmdavc	r8, {r0}^
    26a0:	7e10001c 	mrcvc	0, 0, r0, cr0, cr12, {0}
    26a4:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    26a8:	5001f300 	andpl	pc, r1, r0, lsl #6
    26ac:	001c7e9f 	mulseq	ip, pc, lr	; <UNPREDICTABLE>
    26b0:	001ca010 	andseq	sl, ip, r0, lsl r0
    26b4:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    26c8:	10001c24 	andne	r1, r0, r4, lsr #24
    26cc:	10001c3e 	andne	r1, r0, lr, lsr ip
    26d0:	3e510001 	cdpcc	0, 5, cr0, cr1, cr1, {0}
    26d4:	7810001c 	ldmdavc	r0, {r2, r3, r4}
    26d8:	0110001c 	tsteq	r0, ip, lsl r0
    26dc:	1c785700 	ldclne	7, cr5, [r8], #-0
    26e0:	1c7e1000 	ldclne	0, cr1, [lr], #-0
    26e4:	00041000 	andeq	r1, r4, r0
    26e8:	9f5101f3 	svcls	0x005101f3
    26ec:	10001c7e 	andne	r1, r0, lr, ror ip
    26f0:	10001ca0 	andne	r1, r0, r0, lsr #25
    26f4:	00510001 	subseq	r0, r1, r1
	...
    2704:	001c2400 	andseq	r2, ip, r0, lsl #8
    2708:	001c3e10 	andseq	r3, ip, r0, lsl lr
    270c:	52000110 	andpl	r0, r0, #16, 2
    2710:	10001c3e 	andne	r1, r0, lr, lsr ip
    2714:	10001c7e 	andne	r1, r0, lr, ror ip
    2718:	01f30004 	mvnseq	r0, r4
    271c:	1c7e9f52 	ldclne	15, cr9, [lr], #-328	; 0xfffffeb8
    2720:	1ca01000 	stcne	0, cr1, [r0]
    2724:	00011000 	andeq	r1, r1, r0
    2728:	00000052 	andeq	r0, r0, r2, asr r0
	...
    2738:	001c2400 	andseq	r2, ip, r0, lsl #8
    273c:	001c3e10 	andseq	r3, ip, r0, lsl lr
    2740:	53000110 	movwpl	r0, #272	; 0x110
    2744:	10001c3e 	andne	r1, r0, lr, lsr ip
    2748:	10001c78 	andne	r1, r0, r8, ror ip
    274c:	78550001 	ldmdavc	r5, {r0}^
    2750:	7e10001c 	mrcvc	0, 0, r0, cr0, cr12, {0}
    2754:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    2758:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    275c:	001c7e9f 	mulseq	ip, pc, lr	; <UNPREDICTABLE>
    2760:	001ca010 	andseq	sl, ip, r0, lsl r0
    2764:	53000110 	movwpl	r0, #272	; 0x110
	...
    2770:	00000001 	andeq	r0, r0, r1
    2774:	1c280000 	stcne	0, cr0, [r8], #-0
    2778:	1c3e1000 	ldcne	0, cr1, [lr], #-0
    277c:	00021000 	andeq	r1, r2, r0
    2780:	1c3e9f30 	ldcne	15, cr9, [lr], #-192	; 0xffffff40
    2784:	1c781000 	ldclne	0, cr1, [r8], #-0
    2788:	00011000 	andeq	r1, r1, r0
    278c:	001c7e56 	andseq	r7, ip, r6, asr lr
    2790:	001c9410 	andseq	r9, ip, r0, lsl r4
    2794:	30000210 	andcc	r0, r0, r0, lsl r2
    2798:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    279c:	00000000 	andeq	r0, r0, r0
    27a0:	00000200 	andeq	r0, r0, r0, lsl #4
    27a4:	00000101 	andeq	r0, r0, r1, lsl #2
    27a8:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    27ac:	3e10001c 	mrccc	0, 0, r0, cr0, cr12, {0}
    27b0:	0210001c 	andseq	r0, r0, #28
    27b4:	489f3000 	ldmmi	pc, {ip, sp}	; <UNPREDICTABLE>
    27b8:	5a10001c 	bpl	402830 <__RAM_SIZE+0x302830>
    27bc:	0110001c 	tsteq	r0, ip, lsl r0
    27c0:	1c5a5200 	lfmne	f5, 2, [sl], {-0}
    27c4:	1c5e1000 	mrane	r1, lr, acc0
    27c8:	00031000 	andeq	r1, r3, r0
    27cc:	5e9f7f72 	mrcpl	15, 4, r7, cr15, cr2, {3}
    27d0:	7810001c 	ldmdavc	r0, {r2, r3, r4}
    27d4:	0110001c 	tsteq	r0, ip, lsl r0
    27d8:	1c7e5900 			; <UNDEFINED> instruction: 0x1c7e5900
    27dc:	1ca01000 	stcne	0, cr1, [r0]
    27e0:	00021000 	andeq	r1, r2, r0
    27e4:	00009f30 	andeq	r9, r0, r0, lsr pc
    27e8:	00000000 	andeq	r0, r0, r0
    27ec:	00020000 	andeq	r0, r2, r0
    27f0:	00000000 	andeq	r0, r0, r0
    27f4:	10001c28 	andne	r1, r0, r8, lsr #24
    27f8:	10001c3e 	andne	r1, r0, lr, lsr ip
    27fc:	9f300002 	svcls	0x00300002
    2800:	10001c66 	andne	r1, r0, r6, ror #24
    2804:	10001c69 	andne	r1, r0, r9, ror #24
    2808:	7e500001 	cdpvc	0, 5, cr0, cr0, cr1, {0}
    280c:	a010001c 	andsge	r0, r0, ip, lsl r0
    2810:	0210001c 	andseq	r0, r0, #28
    2814:	009f3000 	addseq	r3, pc, r0
    2818:	00000000 	andeq	r0, r0, r0
    281c:	02000000 	andeq	r0, r0, #0
    2820:	00000000 	andeq	r0, r0, r0
    2824:	001c2800 	andseq	r2, ip, r0, lsl #16
    2828:	001c3e10 	andseq	r3, ip, r0, lsl lr
    282c:	30000210 	andcc	r0, r0, r0, lsl r2
    2830:	001c3e9f 	mulseq	ip, pc, lr	; <UNPREDICTABLE>
    2834:	001c7810 	andseq	r7, ip, r0, lsl r8
    2838:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    283c:	10001c7e 	andne	r1, r0, lr, ror ip
    2840:	10001ca0 	andne	r1, r0, r0, lsr #25
    2844:	9f300002 	svcls	0x00300002
	...
    2850:	10001ca0 	andne	r1, r0, r0, lsr #25
    2854:	10001ca2 	andne	r1, r0, r2, lsr #25
    2858:	007d0002 	rsbseq	r0, sp, r2
    285c:	10001ca2 	andne	r1, r0, r2, lsr #25
    2860:	10001e2c 	andne	r1, r0, ip, lsr #28
    2864:	187d0002 	ldmdane	sp!, {r1}^
	...
    2874:	1ca00000 	stcne	0, cr0, [r0]
    2878:	1cec1000 	stclne	0, cr1, [ip]
    287c:	00011000 	andeq	r1, r1, r0
    2880:	001cec50 	andseq	lr, ip, r0, asr ip
    2884:	001d9a10 	andseq	r9, sp, r0, lsl sl
    2888:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    288c:	10001d9a 	mulne	r0, sl, sp
    2890:	10001e2c 	andne	r1, r0, ip, lsr #28
    2894:	01f30004 	mvnseq	r0, r4
    2898:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    28a4:	1ca00000 	stcne	0, cr0, [r0]
    28a8:	1cef1000 	stclne	0, cr1, [pc]	; 28b0 <__HEAP_SIZE+0x18b0>
    28ac:	00011000 	andeq	r1, r1, r0
    28b0:	001cef51 	andseq	lr, ip, r1, asr pc
    28b4:	001e2c10 	andseq	r2, lr, r0, lsl ip
    28b8:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    28c4:	00000001 	andeq	r0, r0, r1
    28c8:	1ca60000 	stcne	0, cr0, [r6]
    28cc:	1d9a1000 	ldcne	0, cr1, [sl]
    28d0:	00021000 	andeq	r1, r2, r0
    28d4:	1d9a9f30 	ldcne	15, cr9, [sl, #192]	; 0xc0
    28d8:	1d9c1000 	ldcne	0, cr1, [ip]
    28dc:	00011000 	andeq	r1, r1, r0
    28e0:	001d9c50 	andseq	r9, sp, r0, asr ip
    28e4:	001e2c10 	andseq	r2, lr, r0, lsl ip
    28e8:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    28f4:	01010101 	tsteq	r1, r1, lsl #2
    28f8:	00000001 	andeq	r0, r0, r1
    28fc:	10001ca6 	andne	r1, r0, r6, lsr #25
    2900:	10001d8a 	andne	r1, r0, sl, lsl #27
    2904:	9f300002 	svcls	0x00300002
    2908:	10001d8a 	andne	r1, r0, sl, lsl #27
    290c:	10001da8 	andne	r1, r0, r8, lsr #27
    2910:	9f400002 	svcls	0x00400002
    2914:	10001da8 	andne	r1, r0, r8, lsr #27
    2918:	10001dac 	andne	r1, r0, ip, lsr #27
    291c:	9f300002 	svcls	0x00300002
    2920:	10001dac 	andne	r1, r0, ip, lsr #27
    2924:	10001e2c 	andne	r1, r0, ip, lsr #28
    2928:	00540001 	subseq	r0, r4, r1
    292c:	00000000 	andeq	r0, r0, r0
    2930:	02000000 	andeq	r0, r0, #0
    2934:	01010505 	tsteq	r1, r5, lsl #10
    2938:	01010101 	tsteq	r1, r1, lsl #2
    293c:	01010101 	tsteq	r1, r1, lsl #2
    2940:	01010101 	tsteq	r1, r1, lsl #2
    2944:	01010101 	tsteq	r1, r1, lsl #2
    2948:	01010101 	tsteq	r1, r1, lsl #2
    294c:	01010101 	tsteq	r1, r1, lsl #2
    2950:	01010101 	tsteq	r1, r1, lsl #2
    2954:	00000000 	andeq	r0, r0, r0
    2958:	001ca600 	andseq	sl, ip, r0, lsl #12
    295c:	001ca610 	andseq	sl, ip, r0, lsl r6
    2960:	50000110 	andpl	r0, r0, r0, lsl r1
    2964:	10001ca6 	andne	r1, r0, r6, lsr #25
    2968:	10001cac 	andne	r1, r0, ip, lsr #25
    296c:	04700003 	ldrbteq	r0, [r0], #-3
    2970:	001cac9f 	mulseq	ip, pc, ip	; <UNPREDICTABLE>
    2974:	001cb010 	andseq	fp, ip, r0, lsl r0
    2978:	70000310 	andvc	r0, r0, r0, lsl r3
    297c:	1cb09f08 	ldcne	15, cr9, [r0], #32
    2980:	1cb41000 	ldcne	0, cr1, [r4]
    2984:	00031000 	andeq	r1, r3, r0
    2988:	b49f0c70 	ldrlt	r0, [pc], #3184	; 2990 <__HEAP_SIZE+0x1990>
    298c:	b810001c 	ldmdalt	r0, {r2, r3, r4}
    2990:	0310001c 	tsteq	r0, #28
    2994:	9f107000 	svcls	0x00107000
    2998:	10001cb8 			; <UNDEFINED> instruction: 0x10001cb8
    299c:	10001cbc 			; <UNDEFINED> instruction: 0x10001cbc
    29a0:	14700003 	ldrbtne	r0, [r0], #-3
    29a4:	001cbc9f 	mulseq	ip, pc, ip	; <UNPREDICTABLE>
    29a8:	001cc010 	andseq	ip, ip, r0, lsl r0
    29ac:	70000310 	andvc	r0, r0, r0, lsl r3
    29b0:	1cc09f18 	stclne	15, cr9, [r0], {24}
    29b4:	1cc41000 	stclne	0, cr1, [r4], {0}
    29b8:	00031000 	andeq	r1, r3, r0
    29bc:	c49f1c70 	ldrgt	r1, [pc], #3184	; 29c4 <__HEAP_SIZE+0x19c4>
    29c0:	c810001c 	ldmdagt	r0, {r2, r3, r4}
    29c4:	0310001c 	tsteq	r0, #28
    29c8:	9f207000 	svcls	0x00207000
    29cc:	10001cc8 	andne	r1, r0, r8, asr #25
    29d0:	10001ccc 	andne	r1, r0, ip, asr #25
    29d4:	24700003 	ldrbtcs	r0, [r0], #-3
    29d8:	001ccc9f 	mulseq	ip, pc, ip	; <UNPREDICTABLE>
    29dc:	001cd010 	andseq	sp, ip, r0, lsl r0
    29e0:	70000310 	andvc	r0, r0, r0, lsl r3
    29e4:	1cd09f28 	ldclne	15, cr9, [r0], {40}	; 0x28
    29e8:	1cd41000 	ldclne	0, cr1, [r4], {0}
    29ec:	00031000 	andeq	r1, r3, r0
    29f0:	d49f2c70 	ldrle	r2, [pc], #3184	; 29f8 <__HEAP_SIZE+0x19f8>
    29f4:	d810001c 	ldmdale	r0, {r2, r3, r4}
    29f8:	0310001c 	tsteq	r0, #28
    29fc:	9f307000 	svcls	0x00307000
    2a00:	10001cd8 	ldrdne	r1, [r0], -r8
    2a04:	10001cdc 	ldrdne	r1, [r0], -ip
    2a08:	34700003 	ldrbtcc	r0, [r0], #-3
    2a0c:	001cdc9f 	mulseq	ip, pc, ip	; <UNPREDICTABLE>
    2a10:	001ce010 	andseq	lr, ip, r0, lsl r0
    2a14:	70000310 	andvc	r0, r0, r0, lsl r3
    2a18:	1ce09f38 	stclne	15, cr9, [r0], #224	; 0xe0
    2a1c:	1ce41000 	stclne	0, cr1, [r4]
    2a20:	00031000 	andeq	r1, r3, r0
    2a24:	e49f3c70 	ldr	r3, [pc], #3184	; 2a2c <__HEAP_SIZE+0x1a2c>
    2a28:	ec10001c 	ldc	0, cr0, [r0], {28}
    2a2c:	0410001c 	ldreq	r0, [r0], #-28	; 0xffffffe4
    2a30:	00c07000 	sbceq	r7, r0, r0
    2a34:	001cec9f 	mulseq	ip, pc, ip	; <UNPREDICTABLE>
    2a38:	001d9a10 	andseq	r9, sp, r0, lsl sl
    2a3c:	75000410 	strvc	r0, [r0, #-1040]	; 0xfffffbf0
    2a40:	9a9f00c0 	bls	fe7c2d48 <__StackTop+0xc66c2d48>
    2a44:	2c10001d 	ldccs	0, cr0, [r0], {29}
    2a48:	0610001e 			; <UNDEFINED> instruction: 0x0610001e
    2a4c:	5001f300 	andpl	pc, r1, r0, lsl #6
    2a50:	009f4023 	addseq	r4, pc, r3, lsr #32
	...
    2a5c:	9c000000 	stcls	0, cr0, [r0], {-0}
    2a60:	a210001b 	andsge	r0, r0, #27
    2a64:	0110001b 	tsteq	r0, fp, lsl r0
    2a68:	1ba25000 	blne	fe896a70 <__StackTop+0xc6796a70>
    2a6c:	1bd21000 	blne	ff486a74 <__StackTop+0xc7386a74>
    2a70:	00041000 	andeq	r1, r4, r0
    2a74:	9f5001f3 	svcls	0x005001f3
	...
    2a80:	1ba00000 	blne	fe802a88 <__StackTop+0xc6702a88>
    2a84:	1bd21000 	blne	ff486a8c <__StackTop+0xc7386a8c>
    2a88:	00011000 	andeq	r1, r1, r0
    2a8c:	00000053 	andeq	r0, r0, r3, asr r0
	...
    2aa8:	001ba600 	andseq	sl, fp, r0, lsl #12
    2aac:	001bc010 	andseq	ip, fp, r0, lsl r0
    2ab0:	50000110 	andpl	r0, r0, r0, lsl r1
    2ab4:	10001bc0 	andne	r1, r0, r0, asr #23
    2ab8:	10001bc2 	andne	r1, r0, r2, asr #23
    2abc:	01f3000a 	mvnseq	r0, sl
    2ac0:	0a254050 	beq	952c08 <__RAM_SIZE+0x852c08>
    2ac4:	9f1af800 	svcls	0x001af800
    2ac8:	10001bc2 	andne	r1, r0, r2, asr #23
    2acc:	10001bc4 	andne	r1, r0, r4, asr #23
    2ad0:	c4500001 	ldrbgt	r0, [r0], #-1
    2ad4:	c610001b 			; <UNDEFINED> instruction: 0xc610001b
    2ad8:	0a10001b 	beq	402b4c <__RAM_SIZE+0x302b4c>
    2adc:	5001f300 	andpl	pc, r1, r0, lsl #6
    2ae0:	000a2540 	andeq	r2, sl, r0, asr #10
    2ae4:	c69f1af8 			; <UNDEFINED> instruction: 0xc69f1af8
    2ae8:	c810001b 	ldmdagt	r0, {r0, r1, r3, r4}
    2aec:	0110001b 	tsteq	r0, fp, lsl r0
    2af0:	1bc85000 	blne	ff216af8 <__StackTop+0xc7116af8>
    2af4:	1bca1000 	blne	ff286afc <__StackTop+0xc7186afc>
    2af8:	000a1000 	andeq	r1, sl, r0
    2afc:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    2b00:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    2b04:	1bca9f1a 	blne	ff2aa774 <__StackTop+0xc71aa774>
    2b08:	1bcc1000 	blne	ff306b10 <__StackTop+0xc7206b10>
    2b0c:	00011000 	andeq	r1, r1, r0
    2b10:	001bcc50 	andseq	ip, fp, r0, asr ip
    2b14:	001bce10 	andseq	ip, fp, r0, lsl lr
    2b18:	f3000a10 	vpmin.u8	d0, d0, d0
    2b1c:	25405001 	strbcs	r5, [r0, #-1]
    2b20:	1af8000a 	bne	ffe02b50 <__StackTop+0xc7d02b50>
    2b24:	001bce9f 	mulseq	fp, pc, lr	; <UNPREDICTABLE>
    2b28:	001bd010 	andseq	sp, fp, r0, lsl r0
    2b2c:	50000110 	andpl	r0, r0, r0, lsl r1
    2b30:	10001bd0 	ldrdne	r1, [r0], -r0
    2b34:	10001bd2 	ldrdne	r1, [r0], -r2
    2b38:	01f3000a 	mvnseq	r0, sl
    2b3c:	0a254050 	beq	952c84 <__RAM_SIZE+0x852c84>
    2b40:	9f1af800 	svcls	0x001af800
	...
    2b4c:	10001b70 	andne	r1, r0, r0, ror fp
    2b50:	10001b72 	andne	r1, r0, r2, ror fp
    2b54:	007d0002 	rsbseq	r0, sp, r2
    2b58:	10001b72 	andne	r1, r0, r2, ror fp
    2b5c:	10001b9a 	mulne	r0, sl, fp
    2b60:	087d0002 	ldmdaeq	sp!, {r1}^
    2b64:	10001b9a 	mulne	r0, sl, fp
    2b68:	10001b9c 	mulne	r0, ip, fp
    2b6c:	007d0002 	rsbseq	r0, sp, r2
	...
    2b7c:	10001b70 	andne	r1, r0, r0, ror fp
    2b80:	10001b90 	mulne	r0, r0, fp
    2b84:	90500001 	subsls	r0, r0, r1
    2b88:	9c10001b 	ldcls	0, cr0, [r0], {27}
    2b8c:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
    2b90:	5001f300 	andpl	pc, r1, r0, lsl #6
    2b94:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2b98:	00000000 	andeq	r0, r0, r0
    2b9c:	00000100 	andeq	r0, r0, r0, lsl #2
    2ba0:	76000000 	strvc	r0, [r0], -r0
    2ba4:	9410001b 	ldrls	r0, [r0], #-27	; 0xffffffe5
    2ba8:	0210001b 	andseq	r0, r0, #27
    2bac:	949f3000 	ldrls	r3, [pc], #0	; 2bb4 <__HEAP_SIZE+0x1bb4>
    2bb0:	9810001b 	ldmdals	r0, {r0, r1, r3, r4}
    2bb4:	0810001b 	ldmdaeq	r0, {r0, r1, r3, r4}
    2bb8:	40007000 	andmi	r7, r0, r0
    2bbc:	21007324 	tstcs	r0, r4, lsr #6
    2bc0:	001b989f 	mulseq	fp, pc, r8	; <UNPREDICTABLE>
    2bc4:	001b9c10 	andseq	r9, fp, r0, lsl ip
    2bc8:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    2bd4:	00000003 	andeq	r0, r0, r3
    2bd8:	10001b76 	andne	r1, r0, r6, ror fp
    2bdc:	10001b78 	andne	r1, r0, r8, ror fp
    2be0:	9f300002 	svcls	0x00300002
    2be4:	10001b78 	andne	r1, r0, r8, ror fp
    2be8:	10001b94 	mulne	r0, r4, fp
    2bec:	00530001 	subseq	r0, r3, r1
    2bf0:	00000000 	andeq	r0, r0, r0
    2bf4:	d4000000 	strle	r0, [r0], #-0
    2bf8:	d610001b 			; <UNDEFINED> instruction: 0xd610001b
    2bfc:	0210001b 	andseq	r0, r0, #27
    2c00:	d6007d00 	strle	r7, [r0], -r0, lsl #26
    2c04:	2410001b 	ldrcs	r0, [r0], #-27	; 0xffffffe5
    2c08:	0210001c 	andseq	r0, r0, #28
    2c0c:	00087d00 	andeq	r7, r8, r0, lsl #26
    2c10:	00000000 	andeq	r0, r0, r0
    2c14:	Address 0x00002c14 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	00000074 	andeq	r0, r0, r4, ror r0
   4:	00000002 	andeq	r0, r0, r2
}
   8:	00040000 	andeq	r0, r4, r0
	...
  14:	00000010 	andeq	r0, r0, r0, lsl r0
  18:	00000000 	andeq	r0, r0, r0
  1c:	00000010 	andeq	r0, r0, r0, lsl r0
  20:	00000000 	andeq	r0, r0, r0
  24:	00000020 	andeq	r0, r0, r0, lsr #32
  28:	10000800 	andne	r0, r0, r0, lsl #16
  2c:	0000004c 	andeq	r0, r0, ip, asr #32
  30:	1000084c 	andne	r0, r0, ip, asr #16
  34:	00000068 	andeq	r0, r0, r8, rrx
  38:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
  3c:	0000001c 	andeq	r0, r0, ip, lsl r0
  40:	100008d0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
  44:	00000018 	andeq	r0, r0, r8, lsl r0
  48:	100008e8 	andne	r0, r0, r8, ror #17
  4c:	00000018 	andeq	r0, r0, r8, lsl r0
  50:	10000900 	andne	r0, r0, r0, lsl #18
  54:	00000018 	andeq	r0, r0, r8, lsl r0
  58:	10000918 	andne	r0, r0, r8, lsl r9
  5c:	00000018 	andeq	r0, r0, r8, lsl r0
  60:	10000930 	andne	r0, r0, r0, lsr r9
  64:	00000018 	andeq	r0, r0, r8, lsl r0
  68:	10000948 	andne	r0, r0, r8, asr #18
  6c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
  78:	00000024 	andeq	r0, r0, r4, lsr #32
  7c:	0a4f0002 	beq	13c008c <__RAM_SIZE+0x12c008c>
  80:	00040000 	andeq	r0, r4, r0
	...
  8c:	00000010 	andeq	r0, r0, r0, lsl r0
  90:	10000974 	andne	r0, r0, r4, ror r9
  94:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
  a0:	000000a4 	andeq	r0, r0, r4, lsr #1
  a4:	0f380002 	svceq	0x00380002
  a8:	00040000 	andeq	r0, r4, r0
	...
  b4:	00000008 	andeq	r0, r0, r8
  b8:	100009a0 	andne	r0, r0, r0, lsr #19
  bc:	00000002 	andeq	r0, r0, r2
  c0:	00000000 	andeq	r0, r0, r0
  c4:	0000000e 	andeq	r0, r0, lr
  c8:	100009a2 	andne	r0, r0, r2, lsr #19
  cc:	00000024 	andeq	r0, r0, r4, lsr #32
  d0:	100009c6 	andne	r0, r0, r6, asr #19
  d4:	0000007e 	andeq	r0, r0, lr, ror r0
  d8:	10000a44 	andne	r0, r0, r4, asr #20
  dc:	00000138 	andeq	r0, r0, r8, lsr r1
  e0:	10000b7c 	andne	r0, r0, ip, ror fp
  e4:	00000094 	muleq	r0, r4, r0
  e8:	10000c10 	andne	r0, r0, r0, lsl ip
  ec:	000000c6 	andeq	r0, r0, r6, asr #1
  f0:	10000cd8 	ldrdne	r0, [r0], -r8
  f4:	000003ea 	andeq	r0, r0, sl, ror #7
  f8:	100010c8 	andne	r1, r0, r8, asr #1
  fc:	00000396 	muleq	r0, r6, r3
 100:	10001460 	andne	r1, r0, r0, ror #8
 104:	00000680 	andeq	r0, r0, r0, lsl #13
 108:	10001ae0 	andne	r1, r0, r0, ror #21
 10c:	0000000c 	andeq	r0, r0, ip
 110:	10001aec 	andne	r1, r0, ip, ror #21
 114:	0000002c 	andeq	r0, r0, ip, lsr #32
 118:	00000000 	andeq	r0, r0, r0
 11c:	0000002c 	andeq	r0, r0, ip, lsr #32
 120:	00000000 	andeq	r0, r0, r0
 124:	00000028 	andeq	r0, r0, r8, lsr #32
 128:	00000000 	andeq	r0, r0, r0
 12c:	00000020 	andeq	r0, r0, r0, lsr #32
 130:	00000000 	andeq	r0, r0, r0
 134:	0000001c 	andeq	r0, r0, ip, lsl r0
 138:	00000000 	andeq	r0, r0, r0
 13c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 148:	00000044 	andeq	r0, r0, r4, asr #32
 14c:	2afd0002 	bcs	fff4015c <__StackTop+0xc7e4015c>
 150:	00040000 	andeq	r0, r4, r0
 154:	00000000 	andeq	r0, r0, r0
 158:	10001b18 	andne	r1, r0, r8, lsl fp
 15c:	00000014 	andeq	r0, r0, r4, lsl r0
 160:	00000000 	andeq	r0, r0, r0
 164:	00000014 	andeq	r0, r0, r4, lsl r0
 168:	10001b2c 	andne	r1, r0, ip, lsr #22
 16c:	0000001e 	andeq	r0, r0, lr, lsl r0
 170:	10001b4c 	andne	r1, r0, ip, asr #22
 174:	00000024 	andeq	r0, r0, r4, lsr #32
 178:	00000000 	andeq	r0, r0, r0
 17c:	00000008 	andeq	r0, r0, r8
 180:	00000000 	andeq	r0, r0, r0
 184:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 190:	0000004c 	andeq	r0, r0, ip, asr #32
 194:	2d3e0002 	ldccs	0, cr0, [lr, #-8]!
 198:	00040000 	andeq	r0, r4, r0
 19c:	00000000 	andeq	r0, r0, r0
 1a0:	10001b70 	andne	r1, r0, r0, ror fp
 1a4:	0000002c 	andeq	r0, r0, ip, lsr #32
 1a8:	10001b9c 	mulne	r0, ip, fp
 1ac:	00000036 	andeq	r0, r0, r6, lsr r0
 1b0:	10001bd4 	ldrdne	r1, [r0], -r4
 1b4:	00000050 	andeq	r0, r0, r0, asr r0
 1b8:	10001c24 	andne	r1, r0, r4, lsr #24
 1bc:	0000007c 	andeq	r0, r0, ip, ror r0
 1c0:	10001ca0 	andne	r1, r0, r0, lsr #25
 1c4:	0000018c 	andeq	r0, r0, ip, lsl #3
 1c8:	10001e2c 	andne	r1, r0, ip, lsr #28
 1cc:	00000006 	andeq	r0, r0, r6
 1d0:	10001e34 	andne	r1, r0, r4, lsr lr
 1d4:	00000008 	andeq	r0, r0, r8
	...
 1e0:	0000001c 	andeq	r0, r0, ip, lsl r0
 1e4:	35770002 	ldrbcc	r0, [r7, #-2]!
 1e8:	00040000 	andeq	r0, r4, r0
 1ec:	00000000 	andeq	r0, r0, r0
 1f0:	10001e3c 	andne	r1, r0, ip, lsr lr
 1f4:	00000070 	andeq	r0, r0, r0, ror r0
	...
 200:	0000001c 	andeq	r0, r0, ip, lsl r0
 204:	359d0002 	ldrcc	r0, [sp, #2]
 208:	00040000 	andeq	r0, r4, r0
 20c:	00000000 	andeq	r0, r0, r0
 210:	10001eac 	andne	r1, r0, ip, lsr #29
 214:	00000044 	andeq	r0, r0, r4, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	1000087c 	andne	r0, r0, ip, ror r8
   4:	10000880 	andne	r0, r0, r0, lsl #17
}
   8:	1000088a 	andne	r0, r0, sl, lsl #17
   c:	1000089a 	mulne	r0, sl, r8
	...
  18:	00000001 	andeq	r0, r0, r1
  1c:	00000001 	andeq	r0, r0, r1
  20:	00000001 	andeq	r0, r0, r1
  24:	00000001 	andeq	r0, r0, r1
  28:	00000001 	andeq	r0, r0, r1
  2c:	00000001 	andeq	r0, r0, r1
  30:	10000800 	andne	r0, r0, r0, lsl #16
  34:	1000084c 	andne	r0, r0, ip, asr #16
  38:	1000084c 	andne	r0, r0, ip, asr #16
  3c:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
  40:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
  44:	100008d0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
  48:	100008d0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
  4c:	100008e8 	andne	r0, r0, r8, ror #17
  50:	100008e8 	andne	r0, r0, r8, ror #17
  54:	10000900 	andne	r0, r0, r0, lsl #18
  58:	10000900 	andne	r0, r0, r0, lsl #18
  5c:	10000918 	andne	r0, r0, r8, lsl r9
  60:	10000918 	andne	r0, r0, r8, lsl r9
  64:	10000930 	andne	r0, r0, r0, lsr r9
  68:	10000930 	andne	r0, r0, r0, lsr r9
  6c:	10000948 	andne	r0, r0, r8, asr #18
  70:	10000948 	andne	r0, r0, r8, asr #18
  74:	10000974 	andne	r0, r0, r4, ror r9
	...
  80:	00000001 	andeq	r0, r0, r1
  84:	00000001 	andeq	r0, r0, r1
  88:	10000974 	andne	r0, r0, r4, ror r9
  8c:	100009a0 	andne	r0, r0, r0, lsr #19
	...
  98:	100009e6 	andne	r0, r0, r6, ror #19
  9c:	100009e8 	andne	r0, r0, r8, ror #19
  a0:	100009ea 	andne	r0, r0, sl, ror #19
  a4:	10000a08 	andne	r0, r0, r8, lsl #20
	...
  b0:	10000b9a 	mulne	r0, sl, fp
  b4:	10000bb4 			; <UNDEFINED> instruction: 0x10000bb4
  b8:	10000bbc 			; <UNDEFINED> instruction: 0x10000bbc
  bc:	10000bc0 	andne	r0, r0, r0, asr #23
  c0:	10000bc0 	andne	r0, r0, r0, asr #23
  c4:	10000bee 	andne	r0, r0, lr, ror #23
	...
  d0:	10000c46 	andne	r0, r0, r6, asr #24
  d4:	10000c68 	andne	r0, r0, r8, ror #24
  d8:	10000c76 	andne	r0, r0, r6, ror ip
  dc:	10000c7c 	andne	r0, r0, ip, ror ip
  e0:	10000c7c 	andne	r0, r0, ip, ror ip
  e4:	10000ca4 	andne	r0, r0, r4, lsr #25
	...
  f0:	10001474 	andne	r1, r0, r4, ror r4
  f4:	10001476 	andne	r1, r0, r6, ror r4
  f8:	10001920 	andne	r1, r0, r0, lsr #18
  fc:	10001992 	mulne	r0, r2, r9
	...
 108:	100016f2 	strdne	r1, [r0], -r2
 10c:	10001724 	andne	r1, r0, r4, lsr #14
 110:	10001878 	andne	r1, r0, r8, ror r8
 114:	10001892 	mulne	r0, r2, r8
	...
 120:	10001742 	andne	r1, r0, r2, asr #14
 124:	10001778 	andne	r1, r0, r8, ror r7
 128:	100017fa 	strdne	r1, [r0], -sl
 12c:	10001816 	andne	r1, r0, r6, lsl r8
	...
 138:	10001780 	andne	r1, r0, r0, lsl #15
 13c:	100017be 			; <UNDEFINED> instruction: 0x100017be
 140:	100017c0 	andne	r1, r0, r0, asr #15
 144:	100017c8 	andne	r1, r0, r8, asr #15
	...
 150:	00000001 	andeq	r0, r0, r1
 154:	00000001 	andeq	r0, r0, r1
 158:	100009a0 	andne	r0, r0, r0, lsr #19
 15c:	100009a2 	andne	r0, r0, r2, lsr #19
 160:	00000001 	andeq	r0, r0, r1
 164:	00000001 	andeq	r0, r0, r1
 168:	100009a2 	andne	r0, r0, r2, lsr #19
 16c:	100009c6 	andne	r0, r0, r6, asr #19
 170:	100009c6 	andne	r0, r0, r6, asr #19
 174:	10000a44 	andne	r0, r0, r4, asr #20
 178:	10000a44 	andne	r0, r0, r4, asr #20
 17c:	10000b7c 	andne	r0, r0, ip, ror fp
 180:	10000b7c 	andne	r0, r0, ip, ror fp
 184:	10000c10 	andne	r0, r0, r0, lsl ip
 188:	10000c10 	andne	r0, r0, r0, lsl ip
 18c:	10000cd6 	ldrdne	r0, [r0], -r6
 190:	10000cd8 	ldrdne	r0, [r0], -r8
 194:	100010c2 	andne	r1, r0, r2, asr #1
 198:	100010c8 	andne	r1, r0, r8, asr #1
 19c:	1000145e 	andne	r1, r0, lr, asr r4
 1a0:	10001460 	andne	r1, r0, r0, ror #8
 1a4:	10001ae0 	andne	r1, r0, r0, ror #21
 1a8:	10001ae0 	andne	r1, r0, r0, ror #21
 1ac:	10001aec 	andne	r1, r0, ip, ror #21
 1b0:	10001aec 	andne	r1, r0, ip, ror #21
 1b4:	10001b18 	andne	r1, r0, r8, lsl fp
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
 1c0:	00000001 	andeq	r0, r0, r1
 1c4:	00000001 	andeq	r0, r0, r1
 1c8:	00000001 	andeq	r0, r0, r1
 1cc:	00000001 	andeq	r0, r0, r1
 1d0:	00000001 	andeq	r0, r0, r1
 1d4:	00000001 	andeq	r0, r0, r1
 1d8:	00000001 	andeq	r0, r0, r1
 1dc:	00000001 	andeq	r0, r0, r1
	...
 1e8:	10001b18 	andne	r1, r0, r8, lsl fp
 1ec:	10001b2c 	andne	r1, r0, ip, lsr #22
 1f0:	00000001 	andeq	r0, r0, r1
 1f4:	00000001 	andeq	r0, r0, r1
 1f8:	10001b2c 	andne	r1, r0, ip, lsr #22
 1fc:	10001b4a 	andne	r1, r0, sl, asr #22
 200:	10001b4c 	andne	r1, r0, ip, asr #22
 204:	10001b70 	andne	r1, r0, r0, ror fp
 208:	00000001 	andeq	r0, r0, r1
 20c:	00000001 	andeq	r0, r0, r1
 210:	00000001 	andeq	r0, r0, r1
 214:	00000001 	andeq	r0, r0, r1
	...
 220:	10001b70 	andne	r1, r0, r0, ror fp
 224:	10001b9c 	mulne	r0, ip, fp
 228:	10001b9c 	mulne	r0, ip, fp
 22c:	10001bd2 	ldrdne	r1, [r0], -r2
 230:	10001bd4 	ldrdne	r1, [r0], -r4
 234:	10001c24 	andne	r1, r0, r4, lsr #24
 238:	10001c24 	andne	r1, r0, r4, lsr #24
 23c:	10001ca0 	andne	r1, r0, r0, lsr #25
 240:	10001ca0 	andne	r1, r0, r0, lsr #25
 244:	10001e2c 	andne	r1, r0, ip, lsr #28
 248:	10001e2c 	andne	r1, r0, ip, lsr #28
 24c:	10001e32 	andne	r1, r0, r2, lsr lr
 250:	10001e34 	andne	r1, r0, r4, lsr lr
 254:	10001e3c 	andne	r1, r0, ip, lsr lr
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	000003e1 	andeq	r0, r0, r1, ror #7
       4:	01db0003 	bicseq	r0, fp, r3
}
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
    printf("c = %d\r\n", c);
      10:	01010101 	tsteq	r1, r1, lsl #2
}
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	63010000 	movwvs	r0, #4096	; 0x1000
      1c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
      20:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
      24:	6f646978 	svcvs	0x00646978
      28:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
      2c:	6172676f 	cmnvs	r2, pc, ror #14
      30:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
      34:	63675f6d 	cmnvs	r7, #436	; 0x1b4
      38:	63675c63 	cmnvs	r7, #25344	; 0x6300
      3c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
      40:	6f6e2d6d 	svcvs	0x006e2d6d
      44:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
      48:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
      4c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
      50:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
      54:	30312e31 	eorscc	r2, r1, r1, lsr lr
      58:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
      5c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
      60:	61652d65 	cmnvs	r5, r5, ror #26
      64:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
      68:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
      6c:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
      70:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
      74:	6300656e 	movwvs	r6, #1390	; 0x56e
      78:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
      7c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
      80:	6f646978 	svcvs	0x00646978
      84:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
      88:	6172676f 	cmnvs	r2, pc, ror #14
      8c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
      90:	63675f6d 	cmnvs	r7, #436	; 0x1b4
      94:	63675c63 	cmnvs	r7, #25344	; 0x6300
      98:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
      9c:	6f6e2d6d 	svcvs	0x006e2d6d
      a0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
      a4:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
      a8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
      ac:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
      b0:	30312e31 	eorscc	r2, r1, r1, lsr lr
      b4:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
      b8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
      bc:	61652d65 	cmnvs	r5, r5, ror #26
      c0:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
      c4:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
      c8:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
      cc:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
      d0:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
      d4:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
      d8:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
      dc:	5f534953 	svcpl	0x00534953
      e0:	4d432f35 	stclmi	15, cr2, [r3, #-212]	; 0xffffff2c
      e4:	2f534953 	svccs	0x00534953
      e8:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
      ec:	636e492f 	cmnvs	lr, #770048	; 0xbc000
      f0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
      f4:	2f2e2e00 	svccs	0x002e2e00
      f8:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
      fc:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     100:	2f2e2e00 	svccs	0x002e2e00
     104:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
     108:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
     10c:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
     110:	662f736c 	strtvs	r7, [pc], -ip, ror #6
     114:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     118:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
     11c:	6e692f70 	mcrvs	15, 3, r2, cr9, cr0, {3}
     120:	3a630063 	bcc	18c02b4 <__RAM_SIZE+0x17c02b4>
     124:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     128:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     12c:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     130:	6f72705c 	svcvs	0x0072705c
     134:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     138:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     13c:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     140:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     144:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     148:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     14c:	61652d65 	cmnvs	r5, r5, ror #26
     150:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     154:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     158:	31323032 	teqcc	r2, r2, lsr r0
     15c:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     160:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     164:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     168:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     16c:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     170:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     174:	6d000065 	stcvs	0, cr0, [r0, #-404]	; 0xfffffe6c
     178:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
     17c:	00000063 	andeq	r0, r0, r3, rrx
     180:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
     184:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     188:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     18c:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     190:	00010068 	andeq	r0, r1, r8, rrx
     194:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     198:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     19c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     1a0:	6f630000 	svcvs	0x00630000
     1a4:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
     1a8:	2e33336d 	cdpcs	3, 3, cr3, cr3, cr13, {3}
     1ac:	00030068 	andeq	r0, r3, r8, rrx
     1b0:	72617500 	rsbvc	r7, r1, #0, 10
     1b4:	00682e74 	rsbeq	r2, r8, r4, ror lr
     1b8:	66000004 	strvs	r0, [r0], -r4
     1bc:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     1c0:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
     1c4:	00682e70 	rsbeq	r2, r8, r0, ror lr
     1c8:	73000005 	movwvc	r0, #5
     1cc:	6f696474 	svcvs	0x00696474
     1d0:	0600682e 	streq	r6, [r0], -lr, lsr #16
     1d4:	623c0000 	eorsvs	r0, ip, #0
     1d8:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
     1dc:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
     1e0:	00000000 	andeq	r0, r0, r0
     1e4:	00260500 	eoreq	r0, r6, r0, lsl #10
     1e8:	00000205 	andeq	r0, r0, r5, lsl #4
     1ec:	05190000 	ldreq	r0, [r9, #-0]
     1f0:	01052105 	tsteq	r5, r5, lsl #2
     1f4:	04023d06 	streq	r3, [r2], #-3334	; 0xfffff2fa
     1f8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     1fc:	0205001c 	andeq	r0, r5, #28
     200:	00000000 	andeq	r0, r0, r0
     204:	05010b03 	streq	r0, [r1, #-2819]	; 0xfffff4fd
     208:	01052105 	tsteq	r5, r5, lsl #2
     20c:	04023d06 	streq	r3, [r2], #-3334	; 0xfffff2fa
     210:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     214:	02050023 	andeq	r0, r5, #35	; 0x23
     218:	00000000 	andeq	r0, r0, r0
     21c:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
     220:	05142105 	ldreq	r2, [r4, #-261]	; 0xfffffefb
     224:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     228:	13590605 	cmpne	r9, #5242880	; 0x500000
     22c:	4b060105 	blmi	180648 <__RAM_SIZE+0x80648>
     230:	01000602 	tsteq	r0, r2, lsl #12
     234:	00220501 	eoreq	r0, r2, r1, lsl #10
     238:	08000205 	stmdaeq	r0, {r0, r2, r9}
     23c:	17031000 	strne	r1, [r3, -r0]
     240:	2f050501 	svccs	0x00050501
     244:	06120513 			; <UNDEFINED> instruction: 0x06120513
     248:	06050501 	streq	r0, [r5], -r1, lsl #10
     24c:	060e052f 	streq	r0, [lr], -pc, lsr #10
     250:	06050501 	streq	r0, [r5], -r1, lsl #10
     254:	0d05135a 	stceq	3, cr1, [r5, #-360]	; 0xfffffe98
     258:	0b050106 	bleq	140678 <__RAM_SIZE+0x40678>
     25c:	06050520 	streq	r0, [r5], -r0, lsr #10
     260:	05136721 	ldreq	r6, [r3, #-1825]	; 0xfffff8df
     264:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     268:	0505200b 	streq	r2, [r5, #-11]
     26c:	13592106 	cmpne	r9, #-2147483647	; 0x80000001
     270:	01060d05 	tsteq	r6, r5, lsl #26
     274:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
     278:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     27c:	02590601 	subseq	r0, r9, #1048576	; 0x100000
     280:	01010006 	tsteq	r1, r6
     284:	05001b05 	streq	r1, [r0, #-2821]	; 0xfffff4fb
     288:	00084c02 	andeq	r4, r8, r2, lsl #24
     28c:	01270310 			; <UNDEFINED> instruction: 0x01270310
     290:	052f0505 	streq	r0, [pc, #-1285]!	; fffffd93 <__StackTop+0xc7effd93>
     294:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     298:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
     29c:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
     2a0:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     2a4:	2e01061a 	mcrcs	6, 0, r0, cr1, cr10, {0}
     2a8:	21060505 	tstcs	r6, r5, lsl #10
     2ac:	01061105 	tsteq	r6, r5, lsl #2
     2b0:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
     2b4:	0608052f 	streq	r0, [r8], -pc, lsr #10
     2b8:	06090501 	streq	r0, [r9], -r1, lsl #10
     2bc:	06200631 			; <UNDEFINED> instruction: 0x06200631
     2c0:	010e052f 	tsteq	lr, pc, lsr #10
     2c4:	01061205 	tsteq	r6, r5, lsl #4
     2c8:	20200905 	eorcs	r0, r0, r5, lsl #18
     2cc:	2e060f06 	cdpcs	15, 0, cr0, cr6, cr6, {0}
     2d0:	02000d05 	andeq	r0, r0, #320	; 0x140
     2d4:	40060304 	andmi	r0, r6, r4, lsl #6
     2d8:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     2dc:	05570304 	ldrbeq	r0, [r7, #-772]	; 0xfffffcfc
     2e0:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
     2e4:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
     2e8:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
     2ec:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
     2f0:	04020009 	streq	r0, [r2], #-9
     2f4:	06010601 	streq	r0, [r1], -r1, lsl #12
     2f8:	06010531 			; <UNDEFINED> instruction: 0x06010531
     2fc:	08022e3e 	stmdaeq	r2, {r1, r2, r3, r4, r5, r9, sl, fp, sp}
     300:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     304:	02050012 	andeq	r0, r5, #18
     308:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
     30c:	05013703 	streq	r3, [r1, #-1795]	; 0xfffff8fd
     310:	304b2105 	subcc	r2, fp, r5, lsl #2
     314:	2f060105 	svccs	0x00060105
     318:	01000502 	tsteq	r0, r2, lsl #10
     31c:	00120501 	andseq	r0, r2, r1, lsl #10
     320:	08d00205 	ldmeq	r0, {r0, r2, r9}^
     324:	3e031000 	cdpcc	0, 0, cr1, cr3, cr0, {0}
     328:	21050501 	tstcs	r5, r1, lsl #10
     32c:	0601054b 	streq	r0, [r1], -fp, asr #10
     330:	0005022f 	andeq	r0, r5, pc, lsr #4
     334:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     338:	e8020500 	stmda	r2, {r8, sl}
     33c:	03100008 	tsteq	r0, #8
     340:	050100c3 	streq	r0, [r1, #-195]	; 0xffffff3d
     344:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     348:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     34c:	01010005 	tsteq	r1, r5
     350:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     354:	00090002 	andeq	r0, r9, r2
     358:	00c80310 	sbceq	r0, r8, r0, lsl r3
     35c:	21050501 	tstcs	r5, r1, lsl #10
     360:	0601054b 	streq	r0, [r1], -fp, asr #10
     364:	0005022f 	andeq	r0, r5, pc, lsr #4
     368:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     36c:	18020500 	stmdane	r2, {r8, sl}
     370:	03100009 	tsteq	r0, #9
     374:	050100cd 	streq	r0, [r1, #-205]	; 0xffffff33
     378:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     37c:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     380:	01010005 	tsteq	r1, r5
     384:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     388:	00093002 	andeq	r3, r9, r2
     38c:	00d20310 	sbcseq	r0, r2, r0, lsl r3
     390:	21050501 	tstcs	r5, r1, lsl #10
     394:	0601054b 	streq	r0, [r1], -fp, asr #10
     398:	0005022f 	andeq	r0, r5, pc, lsr #4
     39c:	10050101 	andne	r0, r5, r1, lsl #2
     3a0:	48020500 	stmdami	r2, {r8, sl}
     3a4:	03100009 	tsteq	r0, #9
     3a8:	050100d7 	streq	r0, [r1, #-215]	; 0xffffff29
     3ac:	30132105 	andscc	r2, r3, r5, lsl #2
     3b0:	09052f3d 	stmdbeq	r5, {r0, r2, r3, r4, r5, r8, r9, sl, fp, sp}
     3b4:	05052906 	streq	r2, [r5, #-2310]	; 0xfffff6fa
     3b8:	01040200 	mrseq	r0, R12_usr
     3bc:	09052706 	stmdbeq	r5, {r1, r2, r8, r9, sl, sp}
     3c0:	01040200 	mrseq	r0, R12_usr
     3c4:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
     3c8:	02002101 	andeq	r2, r0, #1073741824	; 0x40000000
     3cc:	20060104 	andcs	r0, r6, r4, lsl #2
     3d0:	02000b05 	andeq	r0, r0, #5120	; 0x1400
     3d4:	3a060104 	bcc	1807ec <__RAM_SIZE+0x807ec>
     3d8:	02000905 	andeq	r0, r0, #81920	; 0x14000
     3dc:	14060104 	strne	r0, [r6], #-260	; 0xfffffefc
     3e0:	01000602 	tsteq	r0, r2, lsl #12
     3e4:	0001c301 	andeq	ip, r1, r1, lsl #6
     3e8:	73000300 	movwvc	r0, #768	; 0x300
     3ec:	02000001 	andeq	r0, r0, #1
     3f0:	0d0efb01 	vstreq	d15, [lr, #-4]
     3f4:	01010100 	mrseq	r0, (UNDEF: 17)
     3f8:	00000001 	andeq	r0, r0, r1
     3fc:	01000001 	tsteq	r0, r1
     400:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     404:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     408:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     40c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     410:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     414:	615c6d61 	cmpvs	ip, r1, ror #26
     418:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     41c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     420:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     424:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     428:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     42c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     430:	2e30312d 	rsfcssp	f3, f0, #5.0
     434:	30322d33 	eorscc	r2, r2, r3, lsr sp
     438:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     43c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     440:	6f6e2d6d 	svcvs	0x006e2d6d
     444:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     448:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     44c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     450:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     454:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     458:	00656e69 	rsbeq	r6, r5, r9, ror #28
     45c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     460:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     464:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     468:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     46c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     470:	615c6d61 	cmpvs	ip, r1, ror #26
     474:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     478:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     47c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     480:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     484:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     488:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     48c:	2e30312d 	rsfcssp	f3, f0, #5.0
     490:	30322d33 	eorscc	r2, r2, r3, lsr sp
     494:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     498:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     49c:	6f6e2d6d 	svcvs	0x006e2d6d
     4a0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     4a4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     4a8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     4ac:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     4b0:	00737973 	rsbseq	r7, r3, r3, ror r9
     4b4:	442f2e2e 	strtmi	r2, [pc], #-3630	; 4bc <__STACKSEAL_SIZE+0x4bc>
     4b8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
     4bc:	432f7372 			; <UNDEFINED> instruction: 0x432f7372
     4c0:	5349534d 	movtpl	r5, #37709	; 0x934d
     4c4:	432f355f 			; <UNDEFINED> instruction: 0x432f355f
     4c8:	5349534d 	movtpl	r5, #37709	; 0x934d
     4cc:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     4d0:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
     4d4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     4d8:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     4dc:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
     4e0:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
     4e4:	534d432f 	movtpl	r4, #54063	; 0xd32f
     4e8:	355f5349 	ldrbcc	r5, [pc, #-841]	; 1a7 <__STACKSEAL_SIZE+0x1a7>
     4ec:	7665442f 	strbtvc	r4, [r5], -pc, lsr #8
     4f0:	2f656369 	svccs	0x00656369
     4f4:	2f4d5241 	svccs	0x004d5241
     4f8:	434d5241 	movtmi	r5, #53825	; 0xd241
     4fc:	2f33334d 	svccs	0x0033334d
     500:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
     504:	00656475 	rsbeq	r6, r5, r5, ror r4
     508:	73797300 	cmnvc	r9, #0, 6
     50c:	5f6d6574 	svcpl	0x006d6574
     510:	434d5241 	movtmi	r5, #53825	; 0xd241
     514:	2e33334d 	cdpcs	3, 3, cr3, cr3, cr13, {2}
     518:	00000063 	andeq	r0, r0, r3, rrx
     51c:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
     520:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
     524:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     528:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
     52c:	00010068 	andeq	r0, r1, r8, rrx
     530:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     534:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
     538:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     53c:	6f630000 	svcvs	0x00630000
     540:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
     544:	2e33336d 	cdpcs	3, 3, cr3, cr3, cr13, {3}
     548:	00030068 	andeq	r0, r3, r8, rrx
     54c:	73797300 	cmnvc	r9, #0, 6
     550:	5f6d6574 	svcpl	0x006d6574
     554:	434d5241 	movtmi	r5, #53825	; 0xd241
     558:	2e33334d 	cdpcs	3, 3, cr3, cr3, cr13, {2}
     55c:	00040068 	andeq	r0, r4, r8, rrx
     560:	01050000 	mrseq	r0, (UNDEF: 5)
     564:	00020500 	andeq	r0, r2, r0, lsl #10
     568:	03000000 	movweq	r0, #0
     56c:	050100c4 	streq	r0, [r1, #-196]	; 0xffffff3c
     570:	13051303 	movwne	r1, #21251	; 0x5303
     574:	01050106 	tsteq	r5, r6, lsl #2
     578:	0005023d 	andeq	r0, r5, sp, lsr r2
     57c:	01050101 	tsteq	r5, r1, lsl #2
     580:	74020500 	strvc	r0, [r2], #-1280	; 0xfffffb00
     584:	03100009 	tsteq	r0, #9
     588:	050100cc 	streq	r0, [r1, #-204]	; 0xffffff34
     58c:	0d051503 	cfstr32eq	mvfx1, [r5, #-12]
     590:	03050106 	movweq	r0, #20742	; 0x5106
     594:	0e054006 	cdpeq	0, 0, cr4, cr5, cr6, {0}
     598:	03050106 	movweq	r0, #20742	; 0x5106
     59c:	660c0306 	strvs	r0, [ip], -r6, lsl #6
     5a0:	01061305 	tsteq	r6, r5, lsl #6
     5a4:	023d0105 	eorseq	r0, sp, #1073741825	; 0x40000001
     5a8:	0101000a 	tsteq	r1, sl
     5ac:	0000120d 	andeq	r1, r0, sp, lsl #4
     5b0:	01a10003 			; <UNDEFINED> instruction: 0x01a10003
     5b4:	01020000 	mrseq	r0, (UNDEF: 2)
     5b8:	000d0efb 	strdeq	r0, [sp], -fp
     5bc:	01010101 	tsteq	r1, r1, lsl #2
     5c0:	01000000 	mrseq	r0, (UNDEF: 0)
     5c4:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     5c8:	6f432f2e 	svcvs	0x00432f2e
     5cc:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
     5d0:	63006372 	movwvs	r6, #882	; 0x372
     5d4:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     5d8:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     5dc:	6f646978 	svcvs	0x00646978
     5e0:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     5e4:	6172676f 	cmnvs	r2, pc, ror #14
     5e8:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     5ec:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     5f0:	63675c63 	cmnvs	r7, #25344	; 0x6300
     5f4:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     5f8:	6f6e2d6d 	svcvs	0x006e2d6d
     5fc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     600:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     604:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     608:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     60c:	30312e31 	eorscc	r2, r1, r1, lsr lr
     610:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     614:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     618:	61652d65 	cmnvs	r5, r5, ror #26
     61c:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     620:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     624:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
     628:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
     62c:	6300656e 	movwvs	r6, #1390	; 0x56e
     630:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     634:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     638:	6f646978 	svcvs	0x00646978
     63c:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     640:	6172676f 	cmnvs	r2, pc, ror #14
     644:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     648:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     64c:	63675c63 	cmnvs	r7, #25344	; 0x6300
     650:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     654:	6f6e2d6d 	svcvs	0x006e2d6d
     658:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     65c:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     660:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     664:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     668:	30312e31 	eorscc	r2, r1, r1, lsr lr
     66c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     670:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     674:	61652d65 	cmnvs	r5, r5, ror #26
     678:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     67c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     680:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
     684:	63007379 	movwvs	r7, #889	; 0x379
     688:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     68c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     690:	6f646978 	svcvs	0x00646978
     694:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     698:	6172676f 	cmnvs	r2, pc, ror #14
     69c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     6a0:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     6a4:	63675c63 	cmnvs	r7, #25344	; 0x6300
     6a8:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     6ac:	6f6e2d6d 	svcvs	0x006e2d6d
     6b0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     6b4:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     6b8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     6bc:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     6c0:	30312e31 	eorscc	r2, r1, r1, lsr lr
     6c4:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
     6c8:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     6cc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     6d0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     6d4:	61652d65 	cmnvs	r5, r5, ror #26
     6d8:	315c6962 	cmpcc	ip, r2, ror #18
     6dc:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
     6e0:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
     6e4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     6e8:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
     6ec:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     6f0:	6e492f65 	cdpvs	15, 4, cr2, cr9, cr5, {3}
     6f4:	70000063 	andvc	r0, r0, r3, rrx
     6f8:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     6fc:	00632e66 	rsbeq	r2, r3, r6, ror #28
     700:	5f000001 	svcpl	0x00000001
     704:	61666564 	cmnvs	r6, r4, ror #10
     708:	5f746c75 	svcpl	0x00746c75
     70c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     710:	00682e73 	rsbeq	r2, r8, r3, ror lr
     714:	5f000002 	svcpl	0x00000002
     718:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     71c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
     720:	00000300 	andeq	r0, r0, r0, lsl #6
     724:	61647473 	smcvs	18243	; 0x4743
     728:	682e6772 	stmdavs	lr!, {r1, r4, r5, r6, r8, r9, sl, sp, lr}
     72c:	00000400 	andeq	r0, r0, r0, lsl #8
     730:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
     734:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
     738:	00000400 	andeq	r0, r0, r0, lsl #8
     73c:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
     740:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
     744:	00003e6e 	andeq	r3, r0, lr, ror #28
     748:	72700000 	rsbsvc	r0, r0, #0
     74c:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     750:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     754:	05000000 	streq	r0, [r0, #-0]
     758:	02050001 	andeq	r0, r5, #1
     75c:	00000000 	andeq	r0, r0, r0
     760:	01018503 	tsteq	r1, r3, lsl #10
     764:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     768:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     76c:	052f0605 	streq	r0, [pc, #-1541]!	; 16f <__STACKSEAL_SIZE+0x16f>
     770:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
     774:	01022201 	tsteq	r2, r1, lsl #4
     778:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     77c:	02050001 	andeq	r0, r5, #1
     780:	100009a0 	andne	r0, r0, r0, lsr #19
     784:	01018e03 	tsteq	r1, r3, lsl #28
     788:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     78c:	22050114 	andcs	r0, r5, #20, 2
     790:	012d0501 			; <UNDEFINED> instruction: 0x012d0501
     794:	13060105 	movwne	r0, #24837	; 0x6105
     798:	01000102 	tsteq	r0, r2, lsl #2
     79c:	00010501 	andeq	r0, r1, r1, lsl #10
     7a0:	00000205 	andeq	r0, r0, r5, lsl #4
     7a4:	9f030000 	svcls	0x00030000
     7a8:	03050101 	movweq	r0, #20737	; 0x5101
     7ac:	010e0513 	tsteq	lr, r3, lsl r5
     7b0:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     7b4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     7b8:	05051e01 	streq	r1, [r5, #-3585]	; 0xfffff1ff
     7bc:	21052406 	tstcs	r5, r6, lsl #8
     7c0:	06050106 	streq	r0, [r5], -r6, lsl #2
     7c4:	01052020 	tsteq	r5, r0, lsr #32
     7c8:	01022022 	tsteq	r2, r2, lsr #32
     7cc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     7d0:	02050001 	andeq	r0, r5, #1
     7d4:	100009a2 	andne	r0, r0, r2, lsr #19
     7d8:	0101bc03 	tsteq	r1, r3, lsl #24
     7dc:	03050106 	movweq	r0, #20742	; 0x5106
     7e0:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
     7e4:	05110610 	ldreq	r0, [r1, #-1552]	; 0xfffff9f0
     7e8:	05052109 	streq	r2, [r5, #-265]	; 0xfffffef7
     7ec:	0b052106 	bleq	148c0c <__RAM_SIZE+0x48c0c>
     7f0:	2a050106 	bcs	140c10 <__RAM_SIZE+0x40c10>
     7f4:	2e22052e 	cfsh64cs	mvdx0, mvdx2, #30
     7f8:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
     7fc:	09052e07 	stmdbeq	r5, {r0, r1, r2, r9, sl, fp, sp}
     800:	15051f06 	strne	r1, [r5, #-3846]	; 0xfffff0fa
     804:	0a050106 	beq	140c24 <__RAM_SIZE+0x40c24>
     808:	06140520 	ldreq	r0, [r4], -r0, lsr #10
     80c:	05207603 	streq	r7, [r0, #-1539]!	; 0xfffff9fd
     810:	16051403 	strne	r1, [r5], -r3, lsl #8
     814:	20200106 	eorcs	r0, r0, r6, lsl #2
     818:	051a0905 	ldreq	r0, [sl, #-2309]	; 0xfffff6fb
     81c:	05310603 	ldreq	r0, [r1, #-1539]!	; 0xfffff9fd
     820:	02130601 	andseq	r0, r3, #1048576	; 0x100000
     824:	01010001 	tsteq	r1, r1
     828:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     82c:	0009c602 	andeq	ip, r9, r2, lsl #12
     830:	01c70310 	biceq	r0, r7, r0, lsl r3
     834:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     838:	15bb0603 	ldrne	r0, [fp, #1539]!	; 0x603
     83c:	01060605 	tsteq	r6, r5, lsl #12
     840:	3d110520 	cfldr32cc	mvfx0, [r1, #-128]	; 0xffffff80
     844:	02001a05 	andeq	r1, r0, #20480	; 0x5000
     848:	2e060104 	adfcss	f0, f6, f4
     84c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     850:	01060104 	tsteq	r6, r4, lsl #2
     854:	02000705 	andeq	r0, r0, #1310720	; 0x140000
     858:	2f060304 	svccs	0x00060304
     85c:	03040200 	movweq	r0, #16896	; 0x4200
     860:	25052e06 	strcs	r2, [r5, #-3590]	; 0xfffff1fa
     864:	03040200 	movweq	r0, #16896	; 0x4200
     868:	26054906 	strcs	r4, [r5], -r6, lsl #18
     86c:	03040200 	movweq	r0, #16896	; 0x4200
     870:	07050106 	streq	r0, [r5, -r6, lsl #2]
     874:	03040200 	movweq	r0, #16896	; 0x4200
     878:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
     87c:	02002e03 	andeq	r2, r0, #3, 28	; 0x30
     880:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
     884:	06180605 	ldreq	r0, [r8], -r5, lsl #12
     888:	09052e20 	stmdbeq	r5, {r5, r9, sl, fp, sp}
     88c:	03056506 	movweq	r6, #21766	; 0x5506
     890:	06060533 			; <UNDEFINED> instruction: 0x06060533
     894:	51010501 	tstpl	r1, r1, lsl #10
     898:	03060b05 	movweq	r0, #27397	; 0x6b05
     89c:	10054a7a 	andne	r4, r5, sl, ror sl
     8a0:	0b050106 	bleq	140cc0 <__RAM_SIZE+0x40cc0>
     8a4:	0607052e 	streq	r0, [r7], -lr, lsr #10
     8a8:	0220062f 	eoreq	r0, r0, #49283072	; 0x2f00000
     8ac:	01010006 	tsteq	r1, r6
     8b0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     8b4:	000a4402 	andeq	r4, sl, r2, lsl #8
     8b8:	01e30310 	mvneq	r0, r0, lsl r3
     8bc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     8c0:	05ca0603 	strbeq	r0, [sl, #1539]	; 0x603
     8c4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     8c8:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     8cc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     8d0:	0402000f 	streq	r0, [r2], #-15
     8d4:	2a052001 	bcs	1488e0 <__RAM_SIZE+0x488e0>
     8d8:	02040200 	andeq	r0, r4, #0, 4
     8dc:	0037053c 	eorseq	r0, r7, ip, lsr r5
     8e0:	3c030402 	cfstrscc	mvf0, [r3], {2}
     8e4:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     8e8:	01060c05 	tsteq	r6, r5, lsl #24
     8ec:	06070520 	streq	r0, [r7], -r0, lsr #10
     8f0:	06120523 	ldreq	r0, [r2], -r3, lsr #10
     8f4:	4a0e0501 	bmi	381d00 <__RAM_SIZE+0x281d00>
     8f8:	1f060b05 	svcne	0x00060b05
     8fc:	02001905 	andeq	r1, r0, #81920	; 0x14000
     900:	2e060104 	adfcss	f0, f6, f4
     904:	31060b05 	tstcc	r6, r5, lsl #22
     908:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     90c:	3c060104 	stfccs	f0, [r6], {4}
     910:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
     914:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
     918:	052f0607 	streq	r0, [pc, #-1543]!	; 319 <__STACKSEAL_SIZE+0x319>
     91c:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     920:	05204a0e 	streq	r4, [r0, #-2574]!	; 0xfffff5f2
     924:	05250603 	streq	r0, [r5, #-1539]!	; 0xfffff9fd
     928:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     92c:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
     930:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     934:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
     938:	2b053c01 	blcs	14f944 <__RAM_SIZE+0x4f944>
     93c:	02040200 	andeq	r0, r4, #0, 4
     940:	003d0520 	eorseq	r0, sp, r0, lsr #10
     944:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
     948:	34060505 	strcc	r0, [r6], #-1285	; 0xfffffafb
     94c:	01060805 	tsteq	r6, r5, lsl #16
     950:	3f060a05 	svccc	0x00060a05
     954:	01060d05 	tsteq	r6, r5, lsl #26
     958:	3f060a05 	svccc	0x00060a05
     95c:	01060d05 	tsteq	r6, r5, lsl #26
     960:	3f060505 	svccc	0x00060505
     964:	01060805 	tsteq	r6, r5, lsl #16
     968:	2f060705 	svccs	0x00060705
     96c:	01061205 	tsteq	r6, r5, lsl #4
     970:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     974:	05240603 	streq	r0, [r4, #-1539]!	; 0xfffff9fd
     978:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     97c:	052f0605 	streq	r0, [pc, #-1541]!	; 37f <__STACKSEAL_SIZE+0x37f>
     980:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     984:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
     988:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     98c:	03054a0e 	movweq	r4, #23054	; 0x5a0e
     990:	200a0306 	andcs	r0, sl, r6, lsl #6
     994:	01060a05 	tsteq	r6, r5, lsl #20
     998:	05670105 	strbeq	r0, [r7, #-261]!	; 0xfffffefb
     99c:	60030607 	andvs	r0, r3, r7, lsl #12
     9a0:	0a05133c 	beq	145698 <__RAM_SIZE+0x45698>
     9a4:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     9a8:	0402000f 	streq	r0, [r2], #-15
     9ac:	0a052001 	beq	1489b8 <__RAM_SIZE+0x489b8>
     9b0:	0609053b 			; <UNDEFINED> instruction: 0x0609053b
     9b4:	060c0530 			; <UNDEFINED> instruction: 0x060c0530
     9b8:	0a052001 	beq	1489c4 <__RAM_SIZE+0x489c4>
     9bc:	0017051e 	andseq	r0, r7, lr, lsl r5
     9c0:	33010402 	movwcc	r0, #5122	; 0x1402
     9c4:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
     9c8:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
     9cc:	052f0607 	streq	r0, [pc, #-1543]!	; 3cd <__STACKSEAL_SIZE+0x3cd>
     9d0:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     9d4:	12054a0e 	andne	r4, r5, #57344	; 0xe000
     9d8:	001c0520 	andseq	r0, ip, r0, lsr #10
     9dc:	22010402 	andcs	r0, r1, #33554432	; 0x2000000
     9e0:	02003905 	andeq	r3, r0, #81920	; 0x14000
     9e4:	053c0204 	ldreq	r0, [ip, #-516]!	; 0xfffffdfc
     9e8:	052f0607 	streq	r0, [pc, #-1543]!	; 3e9 <__STACKSEAL_SIZE+0x3e9>
     9ec:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     9f0:	12054a0e 	andne	r4, r5, #57344	; 0xe000
     9f4:	001b0520 	andseq	r0, fp, r0, lsr #10
     9f8:	22010402 	andcs	r0, r1, #33554432	; 0x2000000
     9fc:	2f060705 	svccs	0x00060705
     a00:	01061205 	tsteq	r6, r5, lsl #4
     a04:	204a0e05 	subcs	r0, sl, r5, lsl #28
     a08:	03060a05 	movweq	r0, #27141	; 0x6a05
     a0c:	0d05200b 	stceq	0, cr2, [r5, #-44]	; 0xffffffd4
     a10:	07050106 	streq	r0, [r5, -r6, lsl #2]
     a14:	12053d06 	andne	r3, r5, #384	; 0x180
     a18:	0e050106 	adfeqs	f0, f5, f6
     a1c:	0a05204a 	beq	148b4c <__RAM_SIZE+0x48b4c>
     a20:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
     a24:	07050106 	streq	r0, [r5, -r6, lsl #2]
     a28:	12053d06 	andne	r3, r5, #384	; 0x180
     a2c:	0e050106 	adfeqs	f0, f5, f6
     a30:	0102204a 	tsteq	r2, sl, asr #32
     a34:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     a38:	02050001 	andeq	r0, r5, #1
     a3c:	10000b7c 	andne	r0, r0, ip, ror fp
     a40:	01029903 	tsteq	r2, r3, lsl #18
     a44:	03050106 	movweq	r0, #20742	; 0x5106
     a48:	15135906 	ldrne	r5, [r3, #-2310]	; 0xfffff6fa
     a4c:	01060605 	tsteq	r6, r5, lsl #12
     a50:	21060505 	tstcs	r6, r5, lsl #10
     a54:	01060b05 	tsteq	r6, r5, lsl #22
     a58:	32060305 	andcc	r0, r6, #335544320	; 0x14000000
     a5c:	01060605 	tsteq	r6, r5, lsl #12
     a60:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
     a64:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     a68:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     a6c:	02004d01 	andeq	r4, r0, #1, 26	; 0x40
     a70:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
     a74:	0402000e 	streq	r0, [r2], #-14
     a78:	12052e08 	andne	r2, r5, #8, 28	; 0x80
     a7c:	08040200 	stmdaeq	r4, {r9}
     a80:	0007052e 	andeq	r0, r7, lr, lsr #10
     a84:	06080402 	streq	r0, [r8], -r2, lsl #8
     a88:	000d0559 	andeq	r0, sp, r9, asr r5
     a8c:	06080402 	streq	r0, [r8], -r2, lsl #8
     a90:	04020001 	streq	r0, [r2], #-1
     a94:	02002e08 	andeq	r2, r0, #8, 28	; 0x80
     a98:	13060804 	movwne	r0, #26628	; 0x6804
     a9c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     aa0:	01060804 	tsteq	r6, r4, lsl #16
     aa4:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
     aa8:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
     aac:	0d052c0e 	stceq	12, cr2, [r5, #-56]	; 0xffffffc8
     ab0:	05052021 	streq	r2, [r5, #-33]	; 0xffffffdf
     ab4:	07050f06 	streq	r0, [r5, -r6, lsl #30]
     ab8:	06270513 			; <UNDEFINED> instruction: 0x06270513
     abc:	4a120501 	bmi	481ec8 <__RAM_SIZE+0x381ec8>
     ac0:	2f060705 	svccs	0x00060705
     ac4:	01061205 	tsteq	r6, r5, lsl #4
     ac8:	02005505 	andeq	r5, r0, #20971520	; 0x1400000
     acc:	3c3c0204 	lfmcc	f0, 4, [ip], #-16
     ad0:	07040200 	streq	r0, [r4, -r0, lsl #4]
     ad4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     ad8:	12052007 	andne	r2, r5, #7
     adc:	07040200 	streq	r0, [r4, -r0, lsl #4]
     ae0:	5855052e 	ldmdapl	r5, {r1, r2, r3, r5, r8, sl}^
     ae4:	030a052e 	movweq	r0, #42286	; 0xa52e
     ae8:	03050175 	movweq	r0, #20853	; 0x5175
     aec:	20100306 	andscs	r0, r0, r6, lsl #6
     af0:	01060a05 	tsteq	r6, r5, lsl #20
     af4:	2ed70105 	cdpcs	1, 13, cr0, cr7, cr5, {0}
     af8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     afc:	02050001 	andeq	r0, r5, #1
     b00:	10000c10 	andne	r0, r0, r0, lsl ip
     b04:	0102b203 	tsteq	r2, r3, lsl #4
     b08:	03050106 	movweq	r0, #20742	; 0x5106
     b0c:	1513d706 	ldrne	sp, [r3, #-1798]	; 0xfffff8fa
     b10:	01060605 	tsteq	r6, r5, lsl #12
     b14:	0605052e 	streq	r0, [r5], -lr, lsr #10
     b18:	060b0521 	streq	r0, [fp], -r1, lsr #10
     b1c:	06030501 	streq	r0, [r3], -r1, lsl #10
     b20:	06060532 			; <UNDEFINED> instruction: 0x06060532
     b24:	00220501 	eoreq	r0, r2, r1, lsl #10
     b28:	3c010402 	cfstrscc	mvf0, [r1], {2}
     b2c:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     b30:	055b0104 	ldrbeq	r0, [fp, #-260]	; 0xfffffefc
     b34:	0402000e 	streq	r0, [r2], #-14
     b38:	12053c08 	andne	r3, r5, #8, 24	; 0x800
     b3c:	08040200 	stmdaeq	r4, {r9}
     b40:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     b44:	07052e08 	streq	r2, [r5, -r8, lsl #28]
     b48:	08040200 	stmdaeq	r4, {r9}
     b4c:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
     b50:	08040200 	stmdaeq	r4, {r9}
     b54:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     b58:	00660804 	rsbeq	r0, r6, r4, lsl #16
     b5c:	06080402 	streq	r0, [r8], -r2, lsl #8
     b60:	00050513 	andeq	r0, r5, r3, lsl r5
     b64:	06080402 	streq	r0, [r8], -r2, lsl #8
     b68:	00140501 	andseq	r0, r4, r1, lsl #10
     b6c:	4a010402 	bmi	41b7c <__HEAP_SIZE+0x40b7c>
     b70:	053a0e05 	ldreq	r0, [sl, #-3589]!	; 0xfffff1fb
     b74:	052e210d 	streq	r2, [lr, #-269]!	; 0xfffffef3
     b78:	050f0605 	streq	r0, [pc, #-1541]	; 57b <__STACKSEAL_SIZE+0x57b>
     b7c:	27051307 	strcs	r1, [r5, -r7, lsl #6]
     b80:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
     b84:	06070566 	streq	r0, [r7], -r6, ror #10
     b88:	06120521 	ldreq	r0, [r2], -r1, lsr #10
     b8c:	00550501 	subseq	r0, r5, r1, lsl #10
     b90:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     b94:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
     b98:	12052007 	andne	r2, r5, #7
     b9c:	07040200 	streq	r0, [r4, -r0, lsl #4]
     ba0:	3c55052e 	cfldr64cc	mvdx0, [r5], {46}	; 0x2e
     ba4:	030a052e 	movweq	r0, #42286	; 0xa52e
     ba8:	03050175 	movweq	r0, #20853	; 0x5175
     bac:	2e100306 	cdpcs	3, 1, cr0, cr0, cr6, {0}
     bb0:	01060a05 	tsteq	r6, r5, lsl #20
     bb4:	3d080105 	stfccs	f0, [r8, #-20]	; 0xffffffec
     bb8:	0101003c 	tsteq	r1, ip, lsr r0
     bbc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     bc0:	000cd802 	andeq	sp, ip, r2, lsl #16
     bc4:	03d30310 	bicseq	r0, r3, #16, 6	; 0x40000000
     bc8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     bcc:	05920603 	ldreq	r0, [r2, #1539]	; 0x603
     bd0:	2e010606 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx6
     bd4:	052e2020 	streq	r2, [lr, #-32]!	; 0xffffffe0
     bd8:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
     bdc:	2d053c01 	stccs	12, cr3, [r5, #-4]
     be0:	02040200 	andeq	r0, r4, #0, 4
     be4:	0603059e 			; <UNDEFINED> instruction: 0x0603059e
     be8:	060513b1 			; <UNDEFINED> instruction: 0x060513b1
     bec:	03050106 	movweq	r0, #20742	; 0x5106
     bf0:	0605cd06 	streq	ip, [r5], -r6, lsl #26
     bf4:	0a050106 	beq	141014 <__RAM_SIZE+0x41014>
     bf8:	06030559 			; <UNDEFINED> instruction: 0x06030559
     bfc:	05131733 	ldreq	r1, [r3, #-1843]	; 0xfffff8cd
     c00:	053c060e 	ldreq	r0, [ip, #-1550]!	; 0xfffff9f2
     c04:	052f0603 	streq	r0, [pc, #-1539]!	; 609 <__STACKSEAL_SIZE+0x609>
     c08:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     c0c:	03052e2c 	movweq	r2, #24108	; 0x5e2c
     c10:	2d055a06 	vstrcs	s10, [r5, #-24]	; 0xffffffe8
     c14:	2e2e0106 	sufcse	f0, f6, f6
     c18:	05582605 	ldrbeq	r2, [r8, #-1541]	; 0xfffff9fb
     c1c:	5205744b 	andpl	r7, r5, #1258291200	; 0x4b000000
     c20:	74410566 	strbvc	r0, [r1], #-1382	; 0xfffffa9a
     c24:	054a0705 	strbeq	r0, [sl, #-1797]	; 0xfffff8fb
     c28:	053e0603 	ldreq	r0, [lr, #-1539]!	; 0xfffff9fd
     c2c:	2e010617 	mcrcs	6, 0, r0, cr1, cr7, {0}
     c30:	05742b05 	ldrbeq	r2, [r4, #-2821]!	; 0xfffff4fb
     c34:	03054a08 	movweq	r4, #23048	; 0x5a08
     c38:	1c053d06 	stcne	13, cr3, [r5], {6}
     c3c:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
     c40:	10055837 	andne	r5, r5, r7, lsr r8
     c44:	0603059e 			; <UNDEFINED> instruction: 0x0603059e
     c48:	06100567 	ldreq	r0, [r0], -r7, ror #10
     c4c:	06030501 	streq	r0, [r3], -r1, lsl #10
     c50:	061c0567 	ldreq	r0, [ip], -r7, ror #10
     c54:	2e240501 	cfsh64cs	mvdx0, mvdx4, #1
     c58:	84060305 	strhi	r0, [r6], #-773	; 0xfffffcfb
     c5c:	01061305 	tsteq	r6, r5, lsl #6
     c60:	581c053c 	ldmdapl	ip, {r2, r3, r4, r5, r8, sl}
     c64:	203c0582 	eorscs	r0, ip, r2, lsl #11
     c68:	05663705 	strbeq	r3, [r6, #-1797]!	; 0xfffff8fb
     c6c:	2b056631 	blcs	15a538 <__RAM_SIZE+0x5a538>
     c70:	6626054a 	strtvs	r0, [r6], -sl, asr #10
     c74:	05662005 	strbeq	r2, [r6, #-5]!
     c78:	0f056617 	svceq	0x00056617
     c7c:	4a0a054a 	bmi	2821ac <__RAM_SIZE+0x1821ac>
     c80:	84060305 	strhi	r0, [r6], #-773	; 0xfffffcfb
     c84:	01060605 	tsteq	r6, r5, lsl #12
     c88:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
     c8c:	01060b05 	tsteq	r6, r5, lsl #22
     c90:	21060505 	tstcs	r6, r5, lsl #10
     c94:	01060c05 	tsteq	r6, r5, lsl #24
     c98:	86060305 	strhi	r0, [r6], -r5, lsl #6
     c9c:	01062b05 	tsteq	r6, r5, lsl #22
     ca0:	2e2e4405 	cdpcs	4, 2, cr4, cr14, cr5, {0}
     ca4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
     ca8:	23060404 	movwcs	r0, #25604	; 0x6404
     cac:	02000605 	andeq	r0, r0, #5242880	; 0x500000
     cb0:	01060404 	tsteq	r6, r4, lsl #8
     cb4:	4c060505 	cfstr32mi	mvfx0, [r6], {5}
     cb8:	01060805 	tsteq	r6, r5, lsl #16
     cbc:	02001905 	andeq	r1, r0, #81920	; 0x14000
     cc0:	05ac0104 	streq	r0, [ip, #260]!	; 0x104
     cc4:	05910607 	ldreq	r0, [r1, #1543]	; 0x607
     cc8:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     ccc:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
     cd0:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
     cd4:	052e202e 	streq	r2, [lr, #-46]!	; 0xffffffd2
     cd8:	51030605 	tstpl	r3, r5, lsl #12
     cdc:	060c0520 	streq	r0, [ip], -r0, lsr #10
     ce0:	03010501 	movweq	r0, #5377	; 0x1501
     ce4:	3cf200e4 	ldclcc	0, cr0, [r2], #912	; 0x390
     ce8:	03060505 	movweq	r0, #25861	; 0x6505
     cec:	052e7fa2 	streq	r7, [lr, #-4002]!	; 0xfffff05e
     cf0:	9e01060b 	cfmadd32ls	mvax0, mvfx0, mvfx1, mvfx11
     cf4:	22034405 	andcs	r4, r3, #83886080	; 0x5000000
     cf8:	0e052020 	cdpeq	0, 0, cr2, cr5, cr0, {1}
     cfc:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
     d00:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
     d04:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     d08:	134c0607 	movtne	r0, #50695	; 0xc607
     d0c:	11061005 	tstne	r6, r5
     d10:	06030521 	streq	r0, [r3], -r1, lsr #10
     d14:	13200b03 			; <UNDEFINED> instruction: 0x13200b03
     d18:	01060605 	tsteq	r6, r5, lsl #12
     d1c:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
     d20:	01060c05 	tsteq	r6, r5, lsl #24
     d24:	0607052e 	streq	r0, [r7], -lr, lsr #10
     d28:	05207603 	streq	r7, [r0, #-1539]!	; 0xfffff9fd
     d2c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     d30:	04020016 	streq	r0, [r2], #-22	; 0xffffffea
     d34:	09053c01 	stmdbeq	r5, {r0, sl, fp, ip, sp}
     d38:	3c063d06 	stccc	13, cr3, [r6], {6}
     d3c:	0c030c05 	stceq	12, cr0, [r3], {5}
     d40:	05013402 	streq	r3, [r1, #-1026]	; 0xfffffbfe
     d44:	05300603 	ldreq	r0, [r0, #-1539]!	; 0xfffff9fd
     d48:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     d4c:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
     d50:	0c054a01 			; <UNDEFINED> instruction: 0x0c054a01
     d54:	06030522 	streq	r0, [r3], -r2, lsr #10
     d58:	06060532 			; <UNDEFINED> instruction: 0x06060532
     d5c:	06050501 	streq	r0, [r5], -r1, lsl #10
     d60:	06120521 	ldreq	r0, [r2], -r1, lsr #10
     d64:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
     d68:	6a060305 	bvs	181984 <__RAM_SIZE+0x81984>
     d6c:	06090513 			; <UNDEFINED> instruction: 0x06090513
     d70:	04020001 	streq	r0, [r2], #-1
     d74:	03058204 	movweq	r8, #20996	; 0x5204
     d78:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     d7c:	05230806 	streq	r0, [r3, #-2054]!	; 0xfffff7fa
     d80:	04020006 	streq	r0, [r2], #-6
     d84:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
     d88:	003e0605 	eorseq	r0, lr, r5, lsl #12
     d8c:	06040402 	streq	r0, [r4], -r2, lsl #8
     d90:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
     d94:	02002e04 	andeq	r2, r0, #4, 28	; 0x40
     d98:	5a060404 	bpl	181db0 <__RAM_SIZE+0x81db0>
     d9c:	02004705 	andeq	r4, r0, #1310720	; 0x140000
     da0:	01060404 	tsteq	r6, r4, lsl #8
     da4:	02000b05 	andeq	r0, r0, #5120	; 0x1400
     da8:	004a0404 	subeq	r0, sl, r4, lsl #8
     dac:	3c040402 	cfstrscc	mvf0, [r4], {2}
     db0:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     db4:	d8060404 	stmdale	r6, {r2, sl}
     db8:	02000805 	andeq	r0, r0, #327680	; 0x50000
     dbc:	01060404 	tsteq	r6, r4, lsl #8
     dc0:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     dc4:	00090566 	andeq	r0, r9, r6, ror #10
     dc8:	03010402 	movweq	r0, #5122	; 0x1402
     dcc:	02002077 	andeq	r2, r0, #119	; 0x77
     dd0:	05740104 	ldrbeq	r0, [r4, #-260]!	; 0xfffffefc
     dd4:	27052505 	strcs	r2, [r5, -r5, lsl #10]
     dd8:	02040200 	andeq	r0, r4, #0, 4
     ddc:	02004106 	andeq	r4, r0, #-2147483647	; 0x80000001
     de0:	20060204 	andcs	r0, r6, r4, lsl #4
     de4:	02000d05 	andeq	r0, r0, #320	; 0x140
     de8:	58060104 	stmdapl	r6, {r2, r8}
     dec:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     df0:	01060104 	tsteq	r6, r4, lsl #2
     df4:	02000d05 	andeq	r0, r0, #320	; 0x140
     df8:	002e0104 	eoreq	r0, lr, r4, lsl #2
     dfc:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     e00:	01000202 	tsteq	r0, r2, lsl #4
     e04:	00010501 	andeq	r0, r1, r1, lsl #10
     e08:	10c80205 	sbcne	r0, r8, r5, lsl #4
     e0c:	d3031000 	movwle	r1, #12288	; 0x3000
     e10:	01060102 	tsteq	r6, r2, lsl #2
     e14:	bb060305 	bllt	181a30 <__RAM_SIZE+0x81a30>
     e18:	15151313 	ldrne	r1, [r5, #-787]	; 0xfffffced
     e1c:	01060605 	tsteq	r6, r5, lsl #12
     e20:	20202020 	eorcs	r2, r0, r0, lsr #32
     e24:	4c060305 	stcmi	3, cr0, [r6], {5}
     e28:	01060605 	tsteq	r6, r5, lsl #12
     e2c:	a0060305 	andge	r0, r6, r5, lsl #6
     e30:	01060605 	tsteq	r6, r5, lsl #12
     e34:	95060305 	strls	r0, [r6, #-773]	; 0xfffffcfb
     e38:	01060605 	tsteq	r6, r5, lsl #12
     e3c:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
     e40:	05900104 	ldreq	r0, [r0, #260]	; 0x104
     e44:	09030603 	stmdbeq	r3, {r0, r1, r9, sl}
     e48:	06051390 			; <UNDEFINED> instruction: 0x06051390
     e4c:	08050106 	stmdaeq	r5, {r1, r2, r8}
     e50:	06030581 	streq	r0, [r3], -r1, lsl #11
     e54:	06060535 			; <UNDEFINED> instruction: 0x06060535
     e58:	4b0a0501 	blmi	282264 <__RAM_SIZE+0x182264>
     e5c:	23060905 	movwcs	r0, #26885	; 0x6905
     e60:	02002a05 	andeq	r2, r0, #20480	; 0x5000
     e64:	2e060104 	adfcss	f0, f6, f4
     e68:	2f060505 	svccs	0x00060505
     e6c:	01061005 	tsteq	r6, r5
     e70:	67060505 	strvs	r0, [r6, -r5, lsl #10]
     e74:	01060905 	tsteq	r6, r5, lsl #18
     e78:	201f0c05 	andscs	r0, pc, r5, lsl #24
     e7c:	03060505 	movweq	r0, #25861	; 0x6505
     e80:	0c052063 	stceq	0, cr2, [r5], {99}	; 0x63
     e84:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     e88:	0c05e606 	stceq	6, cr14, [r5], {6}
     e8c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     e90:	0c05e606 	stceq	6, cr14, [r5], {6}
     e94:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     e98:	20580404 	subscs	r0, r8, r4, lsl #8
     e9c:	08040200 	stmdaeq	r4, {r9}
     ea0:	0505c820 	streq	ip, [r5, #-2080]	; 0xfffff7e0
     ea4:	0c055006 	stceq	0, cr5, [r5], {6}
     ea8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     eac:	d6090306 	strle	r0, [r9], -r6, lsl #6
     eb0:	060b0513 			; <UNDEFINED> instruction: 0x060b0513
     eb4:	810e0501 	tsthi	lr, r1, lsl #10
     eb8:	05420a05 	strbeq	r0, [r2, #-2565]	; 0xfffff5fb
     ebc:	05360603 	ldreq	r0, [r6, #-1539]!	; 0xfffff9fd
     ec0:	05010607 	streq	r0, [r1, #-1543]	; 0xfffff9f9
     ec4:	05590603 	ldrbeq	r0, [r9, #-1539]	; 0xfffff9fd
     ec8:	2e010617 	mcrcs	6, 0, r0, cr1, cr7, {0}
     ecc:	05662705 	strbeq	r2, [r6, #-1797]!	; 0xfffff8fb
     ed0:	0305580a 	movweq	r5, #22538	; 0x580a
     ed4:	11058306 	tstne	r5, r6, lsl #6
     ed8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     edc:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
     ee0:	2e01060e 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx14
     ee4:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
     ee8:	05840603 	streq	r0, [r4, #1539]	; 0x603
     eec:	20010606 	andcs	r0, r1, r6, lsl #12
     ef0:	4b060505 	blmi	18230c <__RAM_SIZE+0x8230c>
     ef4:	060e0522 	streq	r0, [lr], -r2, lsr #10
     ef8:	58080501 	stmdapl	r8, {r0, r8, sl}
     efc:	59060705 	stmdbpl	r6, {r0, r2, r8, r9, sl}
     f00:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
     f04:	0603051f 			; <UNDEFINED> instruction: 0x0603051f
     f08:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
     f0c:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     f10:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     f14:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
     f18:	0558580a 	ldrbeq	r5, [r8, #-2058]	; 0xfffff7f6
     f1c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     f20:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     f24:	04020018 	streq	r0, [r2], #-24	; 0xffffffe8
     f28:	29055802 	stmdbcs	r5, {r1, fp, ip, lr}
     f2c:	03040200 	movweq	r0, #16896	; 0x4200
     f30:	06070582 	streq	r0, [r7], -r2, lsl #11
     f34:	0520063f 	streq	r0, [r0, #-1599]!	; 0xfffff9c1
     f38:	74030608 	strvc	r0, [r3], #-1544	; 0xfffff9f8
     f3c:	060b0520 	streq	r0, [fp], -r0, lsr #10
     f40:	06080501 	streq	r0, [r8], -r1, lsl #10
     f44:	060b0584 	streq	r0, [fp], -r4, lsl #11
     f48:	00190501 	andseq	r0, r9, r1, lsl #10
     f4c:	20010402 	andcs	r0, r1, r2, lsl #8
     f50:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
     f54:	0b052006 	bleq	148f74 <__RAM_SIZE+0x48f74>
     f58:	200e0306 	andcs	r0, lr, r6, lsl #6
     f5c:	212f0705 			; <UNDEFINED> instruction: 0x212f0705
     f60:	01062705 	tsteq	r6, r5, lsl #14
     f64:	05900e05 	ldreq	r0, [r0, #3589]	; 0xe05
     f68:	12052014 	andne	r2, r5, #20
     f6c:	06070520 	streq	r0, [r7], -r0, lsr #10
     f70:	060a0567 	streq	r0, [sl], -r7, ror #10
     f74:	2e120501 	cfmul32cs	mvfx0, mvfx2, mvfx1
     f78:	2e1f0e05 	cdpcs	14, 1, cr0, cr15, cr5, {0}
     f7c:	26060b05 	strcs	r0, [r6], -r5, lsl #22
     f80:	02003505 	andeq	r3, r0, #20971520	; 0x1400000
     f84:	2e060104 	adfcss	f0, f6, f4
     f88:	02002c05 	andeq	r2, r0, #1280	; 0x500
     f8c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     f90:	05210607 	streq	r0, [r1, #-1543]!	; 0xfffff9f9
     f94:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     f98:	0e056535 	mcreq	5, 0, r6, cr5, cr5, {1}
     f9c:	05052021 	streq	r2, [r5, #-33]	; 0xffffffdf
     fa0:	08052206 	stmdaeq	r5, {r1, r2, r9, sp}
     fa4:	07050106 	streq	r0, [r5, -r6, lsl #2]
     fa8:	12053006 	andne	r3, r5, #6
     fac:	0e050106 	adfeqs	f0, f5, f6
     fb0:	09052066 	stmdbeq	r5, {r1, r2, r5, r6, sp}
     fb4:	05051706 	streq	r1, [r5, #-1798]	; 0xfffff8fa
     fb8:	0625052f 	strteq	r0, [r5], -pc, lsr #10
     fbc:	ac0c0501 	cfstr32ge	mvfx0, [ip], {1}
     fc0:	05201205 	streq	r1, [r0, #-517]!	; 0xfffffdfb
     fc4:	05052010 	streq	r2, [r5, #-16]
     fc8:	11056706 	tstne	r5, r6, lsl #14
     fcc:	08050106 	stmdaeq	r5, {r1, r2, r8}
     fd0:	1f0c0520 	svcne	0x000c0520
     fd4:	0305c808 	movweq	ip, #22536	; 0x5808
     fd8:	1d052706 	stcne	7, cr2, [r5, #-24]	; 0xffffffe8
     fdc:	06050106 	streq	r0, [r5], -r6, lsl #2
     fe0:	0603053c 			; <UNDEFINED> instruction: 0x0603053c
     fe4:	052e0903 	streq	r0, [lr, #-2307]!	; 0xfffff6fd
     fe8:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     fec:	052f0605 	streq	r0, [pc, #-1541]!	; 9ef <__Vectors_Size+0x22f>
     ff0:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     ff4:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
     ff8:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     ffc:	0305660e 	movweq	r6, #22030	; 0x560e
    1000:	200a0306 	andcs	r0, sl, r6, lsl #6
    1004:	01060a05 	tsteq	r6, r5, lsl #20
    1008:	05c90105 	strbeq	r0, [r9, #261]	; 0x105
    100c:	6b030605 	blvs	c2828 <__HEAP_SIZE+0xc1828>
    1010:	06080558 			; <UNDEFINED> instruction: 0x06080558
    1014:	000f0501 	andeq	r0, pc, r1, lsl #10
    1018:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    101c:	02001c05 	andeq	r1, r0, #1280	; 0x500
    1020:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    1024:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
    1028:	3c01060c 	stccc	6, cr0, [r1], {12}
    102c:	31060705 	tstcc	r6, r5, lsl #14
    1030:	01061205 	tsteq	r6, r5, lsl #4
    1034:	05660e05 	strbeq	r0, [r6, #-3589]!	; 0xfffff1fb
    1038:	051f060b 	ldreq	r0, [pc, #-1547]	; a35 <__Vectors_Size+0x275>
    103c:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1040:	002e0601 	eoreq	r0, lr, r1, lsl #12
    1044:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1048:	03060a05 	movweq	r0, #27141	; 0x6a05
    104c:	0d054a09 	vstreq	s8, [r5, #-36]	; 0xffffffdc
    1050:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1054:	12054b06 	andne	r4, r5, #6144	; 0x1800
    1058:	0e050106 	adfeqs	f0, f5, f6
    105c:	0a052066 	beq	1491fc <__RAM_SIZE+0x491fc>
    1060:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    1064:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1068:	12054b06 	andne	r4, r5, #6144	; 0x1800
    106c:	0e050106 	adfeqs	f0, f5, f6
    1070:	01022066 	tsteq	r2, r6, rrx
    1074:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1078:	02050001 	andeq	r0, r5, #1
    107c:	10001460 	andne	r1, r0, r0, ror #8
    1080:	0104c103 	tsteq	r4, r3, lsl #2
    1084:	03050106 	movweq	r0, #20742	; 0x5106
    1088:	14136706 	ldrne	r6, [r3], #-1798	; 0xfffff8fa
    108c:	01060605 	tsteq	r6, r5, lsl #12
    1090:	d3030905 	movwle	r0, #14597	; 0x3905
    1094:	06204a01 	strteq	r4, [r0], -r1, lsl #20
    1098:	017eb203 	cmneq	lr, r3, lsl #4
    109c:	01060a05 	tsteq	r6, r5, lsl #20
    10a0:	052e0905 	streq	r0, [lr, #-2309]!	; 0xfffff6fb
    10a4:	053f0605 	ldreq	r0, [pc, #-1541]!	; aa7 <__Vectors_Size+0x2e7>
    10a8:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    10ac:	06300607 	ldrteq	r0, [r0], -r7, lsl #12
    10b0:	054b0620 	strbeq	r0, [fp, #-1568]	; 0xfffff9e0
    10b4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    10b8:	063d0607 	ldrteq	r0, [sp], -r7, lsl #12
    10bc:	24062210 	strcs	r2, [r6], #-528	; 0xfffffdf0
    10c0:	01060d05 	tsteq	r6, r5, lsl #26
    10c4:	32060505 	andcc	r0, r6, #20971520	; 0x1400000
    10c8:	01060b05 	tsteq	r6, r5, lsl #22
    10cc:	21060505 	tstcs	r6, r5, lsl #10
    10d0:	05130705 	ldreq	r0, [r3, #-1797]	; 0xfffff8fb
    10d4:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    10d8:	0d052e07 	stceq	14, cr2, [r5, #-28]	; 0xffffffe4
    10dc:	0505ec06 	streq	lr, [r5, #-3078]	; 0xfffff3fa
    10e0:	14051315 	strne	r1, [r5], #-789	; 0xfffffceb
    10e4:	017ccd03 	cmneq	ip, r3, lsl #26
    10e8:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
    10ec:	3c010616 	stccc	6, cr0, [r1], {22}
    10f0:	b1030805 	tstlt	r3, r5, lsl #16
    10f4:	0a050103 	beq	141508 <__RAM_SIZE+0x41508>
    10f8:	0d053106 	stfeqs	f3, [r5, #-24]	; 0xffffffe8
    10fc:	0b050106 	bleq	14151c <__RAM_SIZE+0x4151c>
    1100:	0605052a 	streq	r0, [r5], -sl, lsr #10
    1104:	132e1103 			; <UNDEFINED> instruction: 0x132e1103
    1108:	01060905 	tsteq	r6, r5, lsl #18
    110c:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    1110:	05052d0f 	streq	r2, [r5, #-3343]	; 0xfffff2f1
    1114:	2e0f0306 	cdpcs	3, 0, cr0, cr15, cr6, {0}
    1118:	01060d05 	tsteq	r6, r5, lsl #26
    111c:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
    1120:	56030613 			; <UNDEFINED> instruction: 0x56030613
    1124:	061905e4 	ldreq	r0, [r9], -r4, ror #11
    1128:	062b0501 	strteq	r0, [fp], -r1, lsl #10
    112c:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    1130:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    1134:	013d052e 	teqeq	sp, lr, lsr #10
    1138:	05190d05 	ldreq	r0, [r9, #-3333]	; 0xfffff2fb
    113c:	207a0313 	rsbscs	r0, sl, r3, lsl r3
    1140:	01061905 	tsteq	r6, r5, lsl #18
    1144:	2e062b05 	vmlacs.f64	d2, d6, d5
    1148:	01063105 	tsteq	r6, r5, lsl #2
    114c:	2e063505 	cfsh32cs	mvfx3, mvfx6, #5
    1150:	05013d05 	streq	r3, [r1, #-3333]	; 0xfffff2fb
    1154:	1305180d 	movwne	r1, #22541	; 0x580d
    1158:	0619051b 			; <UNDEFINED> instruction: 0x0619051b
    115c:	062b0501 	strteq	r0, [fp], -r1, lsl #10
    1160:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    1164:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    1168:	013d052e 	teqeq	sp, lr, lsr #10
    116c:	05170d05 	ldreq	r0, [r7, #-3333]	; 0xfffff2fb
    1170:	19051c13 	stmdbne	r5, {r0, r1, r4, sl, fp, ip}
    1174:	2b050106 	blcs	141594 <__RAM_SIZE+0x41594>
    1178:	31052e06 	tstcc	r5, r6, lsl #28
    117c:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    1180:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
    1184:	160d0501 	strne	r0, [sp], -r1, lsl #10
    1188:	051d1305 	ldreq	r1, [sp, #-773]	; 0xfffffcfb
    118c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    1190:	052e062b 	streq	r0, [lr, #-1579]!	; 0xfffff9d5
    1194:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    1198:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    119c:	0d05013d 	stfeqs	f0, [r5, #-244]	; 0xffffff0c
    11a0:	25070515 	strcs	r0, [r7, #-1301]	; 0xfffffaeb
    11a4:	01060f05 	tsteq	r6, r5, lsl #30
    11a8:	0607054a 	streq	r0, [r7], -sl, asr #10
    11ac:	06110523 	ldreq	r0, [r1], -r3, lsr #10
    11b0:	06070501 	streq	r0, [r7], -r1, lsl #10
    11b4:	060a054b 	streq	r0, [sl], -fp, asr #10
    11b8:	06090501 	streq	r0, [r9], -r1, lsl #10
    11bc:	060f0533 			; <UNDEFINED> instruction: 0x060f0533
    11c0:	06070501 	streq	r0, [r7], -r1, lsl #10
    11c4:	060d0522 	streq	r0, [sp], -r2, lsr #10
    11c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    11cc:	054a7a03 	strbeq	r7, [sl, #-2563]	; 0xfffff5fd
    11d0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    11d4:	052f0609 	streq	r0, [pc, #-1545]!	; bd3 <__Vectors_Size+0x413>
    11d8:	2e01061f 	mcrcs	6, 0, r0, cr1, cr15, {0}
    11dc:	06070520 	streq	r0, [r7], -r0, lsr #10
    11e0:	05010b03 	streq	r0, [r1, #-2819]	; 0xfffff4fd
    11e4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    11e8:	052f0607 	streq	r0, [pc, #-1543]!	; be9 <__Vectors_Size+0x429>
    11ec:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    11f0:	052f0607 	streq	r0, [pc, #-1543]!	; bf1 <__Vectors_Size+0x431>
    11f4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    11f8:	b9030614 	stmdblt	r3, {r2, r4, r9, sl}
    11fc:	0305207c 	movweq	r2, #20604	; 0x507c
    1200:	06160514 			; <UNDEFINED> instruction: 0x06160514
    1204:	0a053c01 	beq	150210 <__RAM_SIZE+0x50210>
    1208:	0103c503 	tsteq	r3, r3, lsl #10
    120c:	31060c05 	tstcc	r6, r5, lsl #24
    1210:	01060f05 	tsteq	r6, r5, lsl #30
    1214:	052e7903 	streq	r7, [lr, #-2307]!	; 0xfffff6fd
    1218:	05410609 	strbeq	r0, [r1, #-1545]	; 0xfffff9f7
    121c:	4a010615 	bmi	42a78 <__HEAP_SIZE+0x41a78>
    1220:	23060905 	movwcs	r0, #26885	; 0x6905
    1224:	01061305 	tsteq	r6, r5, lsl #6
    1228:	4b060905 	blmi	183644 <__RAM_SIZE+0x83644>
    122c:	01063305 	tsteq	r6, r5, lsl #6
    1230:	2f060905 	svccs	0x00060905
    1234:	01060f05 	tsteq	r6, r5, lsl #30
    1238:	0609054a 	streq	r0, [r9], -sl, asr #10
    123c:	060f0519 			; <UNDEFINED> instruction: 0x060f0519
    1240:	06090501 	streq	r0, [r9], -r1, lsl #10
    1244:	060f052f 	streq	r0, [pc], -pc, lsr #10
    1248:	06090501 	streq	r0, [r9], -r1, lsl #10
    124c:	060d052f 	streq	r0, [sp], -pc, lsr #10
    1250:	200c0501 	andcs	r0, ip, r1, lsl #10
    1254:	052c0f05 	streq	r0, [ip, #-3845]!	; 0xfffff0fb
    1258:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
    125c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1260:	052f060b 	streq	r0, [pc, #-1547]!	; c5d <__Vectors_Size+0x49d>
    1264:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    1268:	05400609 	strbeq	r0, [r0, #-1545]	; 0xfffff9f7
    126c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1270:	052f0609 	streq	r0, [pc, #-1545]!	; c6f <__Vectors_Size+0x4af>
    1274:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1278:	052f0609 	streq	r0, [pc, #-1545]!	; c77 <__Vectors_Size+0x4b7>
    127c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1280:	0f05200c 	svceq	0x0005200c
    1284:	060b052c 	streq	r0, [fp], -ip, lsr #10
    1288:	06110531 			; <UNDEFINED> instruction: 0x06110531
    128c:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1290:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    1294:	06090501 	streq	r0, [r9], -r1, lsl #10
    1298:	060f0541 	streq	r0, [pc], -r1, asr #10
    129c:	06090501 	streq	r0, [r9], -r1, lsl #10
    12a0:	060f052f 	streq	r0, [pc], -pc, lsr #10
    12a4:	06090501 	streq	r0, [r9], -r1, lsl #10
    12a8:	0305052f 	movweq	r0, #21807	; 0x552f
    12ac:	0d05010f 	stfeqs	f0, [r5, #-60]	; 0xffffffc4
    12b0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    12b4:	0609052e 	streq	r0, [r9], -lr, lsr #10
    12b8:	5b027403 	blpl	9e2cc <__HEAP_SIZE+0x9d2cc>
    12bc:	060f0501 	streq	r0, [pc], -r1, lsl #10
    12c0:	06090501 	streq	r0, [r9], -r1, lsl #10
    12c4:	060f052f 	streq	r0, [pc], -pc, lsr #10
    12c8:	06090501 	streq	r0, [r9], -r1, lsl #10
    12cc:	0f05222f 	svceq	0x0005222f
    12d0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    12d4:	0f052f06 	svceq	0x00052f06
    12d8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    12dc:	0f032f06 	svceq	0x00032f06
    12e0:	0c051320 	stceq	3, cr1, [r5], {32}
    12e4:	1c050106 	stfnes	f0, [r5], {6}
    12e8:	01040200 	mrseq	r0, R12_usr
    12ec:	060e052e 	streq	r0, [lr], -lr, lsr #10
    12f0:	06110531 			; <UNDEFINED> instruction: 0x06110531
    12f4:	060e0501 	streq	r0, [lr], -r1, lsl #10
    12f8:	06110531 			; <UNDEFINED> instruction: 0x06110531
    12fc:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1300:	11051332 	tstne	r5, r2, lsr r3
    1304:	10050106 	andne	r0, r5, r6, lsl #2
    1308:	2e77032d 	cdpcs	3, 7, cr0, cr7, cr13, {1}
    130c:	03060905 	movweq	r0, #26885	; 0x6905
    1310:	0c05200d 	stceq	0, cr2, [r5], {13}
    1314:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1318:	0c053306 	stceq	3, cr3, [r5], {6}
    131c:	1e050106 	adfnes	f0, f5, f6
    1320:	01040200 	mrseq	r0, R12_usr
    1324:	060b052e 	streq	r0, [fp], -lr, lsr #10
    1328:	0611052f 	ldreq	r0, [r1], -pc, lsr #10
    132c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1330:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    1334:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1338:	0611053d 			; <UNDEFINED> instruction: 0x0611053d
    133c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1340:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    1344:	001e0501 	andseq	r0, lr, r1, lsl #10
    1348:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    134c:	03060b05 	movweq	r0, #27397	; 0x6b05
    1350:	0e052e13 	mcreq	14, 0, r2, cr5, cr3, {0}
    1354:	10050106 	andne	r0, r5, r6, lsl #2
    1358:	13054f06 	movwne	r4, #24326	; 0x5f06
    135c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    1360:	67054e06 	strvs	r4, [r5, -r6, lsl #28]
    1364:	4e050106 	adfmis	f0, f5, f6
    1368:	000d054a 	andeq	r0, sp, sl, asr #10
    136c:	06080402 	streq	r0, [r8], -r2, lsl #8
    1370:	0013054b 	andseq	r0, r3, fp, asr #10
    1374:	06080402 	streq	r0, [r8], -r2, lsl #8
    1378:	04020001 	streq	r0, [r2], #-1
    137c:	02007408 	andeq	r7, r0, #8, 8	; 0x8000000
    1380:	004a0804 	subeq	r0, sl, r4, lsl #16
    1384:	4a080402 	bmi	202394 <__RAM_SIZE+0x102394>
    1388:	08040200 	stmdaeq	r4, {r9}
    138c:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1390:	10052008 	andne	r2, r5, r8
    1394:	31014703 	tstcc	r1, r3, lsl #14
    1398:	060b0531 			; <UNDEFINED> instruction: 0x060b0531
    139c:	06110536 			; <UNDEFINED> instruction: 0x06110536
    13a0:	0b052e01 	bleq	14cbac <__RAM_SIZE+0x4cbac>
    13a4:	20100306 	andscs	r0, r0, r6, lsl #6
    13a8:	01060e05 	tsteq	r6, r5, lsl #28
    13ac:	42061005 	andmi	r1, r6, #5
    13b0:	01061305 	tsteq	r6, r5, lsl #6
    13b4:	41060d05 	tstmi	r6, r5, lsl #26
    13b8:	01064c05 	tsteq	r6, r5, lsl #24
    13bc:	053c3c05 	ldreq	r3, [ip, #-3077]!	; 0xfffff3fb
    13c0:	0402000d 	streq	r0, [r2], #-13
    13c4:	054b0608 	strbeq	r0, [fp, #-1544]	; 0xfffff9f8
    13c8:	04020038 	streq	r0, [r2], #-56	; 0xffffffc8
    13cc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    13d0:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    13d4:	02004a08 	andeq	r4, r0, #8, 20	; 0x8000
    13d8:	00740804 	rsbseq	r0, r4, r4, lsl #16
    13dc:	3c080402 	cfstrscc	mvf0, [r8], {2}
    13e0:	08040200 	stmdaeq	r4, {r9}
    13e4:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    13e8:	09052008 	stmdbeq	r5, {r3, sp}
    13ec:	01120306 	tsteq	r2, r6, lsl #6
    13f0:	01060f05 	tsteq	r6, r5, lsl #30
    13f4:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    13f8:	63030d05 	movwvs	r0, #15621	; 0x3d05
    13fc:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
    1400:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1404:	063d0583 	ldrteq	r0, [sp], -r3, lsl #11
    1408:	4a130501 	bmi	4c2814 <__RAM_SIZE+0x3c2814>
    140c:	20ac582e 	adccs	r5, ip, lr, lsr #16
    1410:	05203d05 	streq	r3, [r0, #-3333]!	; 0xfffff2fb
    1414:	054e060d 	strbeq	r0, [lr, #-1549]	; 0xfffff9f3
    1418:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    141c:	054b060d 	strbeq	r0, [fp, #-1549]	; 0xfffff9f3
    1420:	05010638 	streq	r0, [r1, #-1592]	; 0xfffff9c8
    1424:	589e4a13 	ldmpl	lr, {r0, r1, r4, r9, fp, lr}
    1428:	01810520 	orreq	r0, r1, r0, lsr #10
    142c:	02040200 	andeq	r0, r4, #0, 4
    1430:	3c710523 	cfldr64cc	mvdx0, [r1], #-140	; 0xffffff74
    1434:	053c6605 	ldreq	r6, [ip, #-1541]!	; 0xfffff9fb
    1438:	583c0181 	ldmdapl	ip!, {r0, r7, r8}
    143c:	1a060d05 	bne	184858 <__RAM_SIZE+0x84858>
    1440:	01061305 	tsteq	r6, r5, lsl #6
    1444:	20584a08 	subscs	r4, r8, r8, lsl #20
    1448:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    144c:	01061305 	tsteq	r6, r5, lsl #6
    1450:	0520909e 	streq	r9, [r0, #-158]!	; 0xffffff62
    1454:	020001ae 	andeq	r0, r0, #-2147483605	; 0x8000002b
    1458:	05230204 	streq	r0, [r3, #-516]!	; 0xfffffdfc
    145c:	053c0195 	ldreq	r0, [ip, #-405]!	; 0xfffffe6b
    1460:	585801ae 	ldmdapl	r8, {r1, r2, r3, r5, r7, r8}^
    1464:	03060905 	movweq	r0, #26885	; 0x6905
    1468:	0c05010a 	stfeqs	f0, [r5], {10}
    146c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1470:	0f052f06 	svceq	0x00052f06
    1474:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1478:	05670806 	strbeq	r0, [r7, #-2054]!	; 0xfffff7fa
    147c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1480:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    1484:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    1488:	23051d01 	movwcs	r1, #23809	; 0x5d01
    148c:	01040200 	mrseq	r0, R12_usr
    1490:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    1494:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1498:	09030609 	stmdbeq	r3, {r0, r3, r9, sl}
    149c:	060c0520 	streq	r0, [ip], -r0, lsr #10
    14a0:	001d0501 	andseq	r0, sp, r1, lsl #10
    14a4:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    14a8:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    14ac:	2e060304 	cdpcs	3, 0, cr0, cr6, cr4, {0}
    14b0:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    14b4:	01060304 	tsteq	r6, r4, lsl #6
    14b8:	2f060905 	svccs	0x00060905
    14bc:	01060c05 	tsteq	r6, r5, lsl #24
    14c0:	02001d05 	andeq	r1, r0, #320	; 0x140
    14c4:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    14c8:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    14cc:	052e0603 	streq	r0, [lr, #-1539]!	; 0xfffff9fd
    14d0:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    14d4:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    14d8:	052f0609 	streq	r0, [pc, #-1545]!	; ed7 <__Vectors_Size+0x717>
    14dc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    14e0:	67080609 	strvs	r0, [r8, -r9, lsl #12]
    14e4:	01060f05 	tsteq	r6, r5, lsl #30
    14e8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    14ec:	0c051424 	cfstrseq	mvf1, [r5], {36}	; 0x24
    14f0:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    14f4:	09051e16 	stmdbeq	r5, {r1, r2, r4, r9, sl, fp, ip}
    14f8:	13053606 	movwne	r3, #22022	; 0x5606
    14fc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1500:	5a062e3c 	bpl	18cdf8 <__RAM_SIZE+0x8cdf8>
    1504:	01060c05 	tsteq	r6, r5, lsl #24
    1508:	25060905 	strcs	r0, [r6, #-2309]	; 0xfffff6fb
    150c:	01060f05 	tsteq	r6, r5, lsl #30
    1510:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    1514:	74030d05 	strvc	r0, [r3], #-3333	; 0xfffff2fb
    1518:	052e062e 	streq	r0, [lr, #-1582]!	; 0xfffff9d2
    151c:	0d054913 	vstreq.16	s8, [r5, #-38]	; 0xffffffda	; <UNPREDICTABLE>
    1520:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    1524:	0613051f 			; <UNDEFINED> instruction: 0x0613051f
    1528:	2e110501 	cfmul32cs	mvfx0, mvfx1, mvfx1
    152c:	2b16052e 	blcs	5829ec <__RAM_SIZE+0x4829ec>
    1530:	053c2e3c 	ldreq	r2, [ip, #-3644]!	; 0xfffff1c4
    1534:	0c03060d 	stceq	6, cr0, [r3], {13}
    1538:	05200620 	streq	r0, [r0, #-1568]!	; 0xfffff9e0
    153c:	0d054913 	vstreq.16	s8, [r5, #-38]	; 0xffffffda	; <UNPREDICTABLE>
    1540:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    1544:	0613051f 			; <UNDEFINED> instruction: 0x0613051f
    1548:	2e110501 	cfmul32cs	mvfx0, mvfx1, mvfx1
    154c:	09052e2e 	stmdbeq	r5, {r1, r2, r3, r5, r9, sl, fp, sp}
    1550:	01090306 	tsteq	r9, r6, lsl #6
    1554:	01061505 	tsteq	r6, r5, lsl #10
    1558:	59060905 	stmdbpl	r6, {r0, r2, r8, fp}
    155c:	01061a05 	tsteq	r6, r5, lsl #20
    1560:	03062605 	movweq	r2, #26117	; 0x6605
    1564:	05747b90 	ldrbeq	r7, [r4, #-2960]!	; 0xfffff470
    1568:	1e050122 	adfnesp	f0, f5, f2
    156c:	11052e06 	tstne	r5, r6, lsl #28
    1570:	03052006 	movweq	r2, #20486	; 0x5006
    1574:	1e052e06 	cdpne	14, 0, cr2, cr5, cr6, {0}
    1578:	20140520 	andscs	r0, r4, r0, lsr #10
    157c:	2f060305 	svccs	0x00060305
    1580:	01061b05 	tsteq	r6, r5, lsl #22
    1584:	0609052e 	streq	r0, [r9], -lr, lsr #10
    1588:	0104f103 	tsteq	r4, r3, lsl #2	; <UNPREDICTABLE>
    158c:	01060c05 	tsteq	r6, r5, lsl #24
    1590:	4b060b05 	blmi	1841ac <__RAM_SIZE+0x841ac>
    1594:	01060d05 	tsteq	r6, r5, lsl #26
    1598:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    159c:	01060c05 	tsteq	r6, r5, lsl #24
    15a0:	20202e4a 	eorcs	r2, r0, sl, asr #28
    15a4:	2e1b1a05 	vnmlscs.f32	s2, s22, s10
    15a8:	060d052e 	streq	r0, [sp], -lr, lsr #10
    15ac:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    15b0:	0d054913 	vstreq.16	s8, [r5, #-38]	; 0xffffffda	; <UNPREDICTABLE>
    15b4:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    15b8:	0613051f 			; <UNDEFINED> instruction: 0x0613051f
    15bc:	20110501 	andscs	r0, r1, r1, lsl #10
    15c0:	3c2e1305 	stccc	3, cr1, [lr], #-20	; 0xffffffec
    15c4:	25450520 	strbcs	r0, [r5, #-1312]	; 0xfffffae0
    15c8:	21060b05 	tstcs	r6, r5, lsl #22
    15cc:	01061205 	tsteq	r6, r5, lsl #4
    15d0:	202e0b05 	eorcs	r0, lr, r5, lsl #22
    15d4:	49060f05 	stmdbmi	r6, {r0, r2, r8, r9, sl, fp}
    15d8:	01061105 	tsteq	r6, r5, lsl #2
    15dc:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
    15e0:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    15e4:	45052001 	strmi	r2, [r5, #-1]
    15e8:	02040200 	andeq	r0, r4, #0, 4
    15ec:	0039052e 	eorseq	r0, r9, lr, lsr #10
    15f0:	20020402 	andcs	r0, r2, r2, lsl #8
    15f4:	05320c05 	ldreq	r0, [r2, #-3077]!	; 0xfffff3fb
    15f8:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
    15fc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1600:	05330609 	ldreq	r0, [r3, #-1545]!	; 0xfffff9f7
    1604:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1608:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
    160c:	0d052e20 	stceq	14, cr2, [r5, #-128]	; 0xffffff80
    1610:	20061c06 	andcs	r1, r6, r6, lsl #24
    1614:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    1618:	1105210d 	tstne	r5, sp, lsl #2
    161c:	13051f06 	movwne	r1, #24326	; 0x5f06
    1620:	11050106 	tstne	r5, r6, lsl #2
    1624:	20202e2e 	eorcs	r2, r0, lr, lsr #28
    1628:	03060905 	movweq	r0, #26885	; 0x6905
    162c:	05130109 	ldreq	r0, [r3, #-265]	; 0xfffffef7
    1630:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1634:	13300609 	teqne	r0, #9437184	; 0x900000
    1638:	05170b05 	ldreq	r0, [r7, #-2821]	; 0xfffff4fb
    163c:	05010651 	streq	r0, [r1, #-1617]	; 0xfffff9af
    1640:	09054a11 	stmdbeq	r5, {r0, r4, r9, fp, lr}
    1644:	05160806 	ldreq	r0, [r6, #-2054]	; 0xfffff7fa
    1648:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    164c:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
    1650:	06160620 	ldreq	r0, [r6], -r0, lsr #12
    1654:	05590620 	ldrbeq	r0, [r9, #-1568]	; 0xfffff9e0
    1658:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    165c:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
    1660:	23062210 	movwcs	r2, #25104	; 0x6210
    1664:	4b062006 	blmi	189684 <__RAM_SIZE+0x89684>
    1668:	01060f05 	tsteq	r6, r5, lsl #30
    166c:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    1670:	03221006 			; <UNDEFINED> instruction: 0x03221006
    1674:	05207df8 	streq	r7, [r0, #-3576]!	; 0xfffff208
    1678:	8d030603 	stchi	6, cr0, [r3, #-12]
    167c:	02002e02 	andeq	r2, r0, #2, 28
    1680:	2e060104 	adfcss	f0, f6, f4
    1684:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    1688:	02002004 	andeq	r2, r0, #4
    168c:	4d060404 	cfstrsmi	mvf0, [r6, #-16]
    1690:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    1694:	13060404 	movwne	r0, #25604	; 0x6404
    1698:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    169c:	0003024a 	andeq	r0, r3, sl, asr #4
    16a0:	01050101 	tsteq	r5, r1, lsl #2
    16a4:	e0020500 	and	r0, r2, r0, lsl #10
    16a8:	0310001a 	tsteq	r0, #26
    16ac:	05010195 	streq	r0, [r1, #-405]	; 0xfffffe6b
    16b0:	11051303 	tstne	r5, r3, lsl #6
    16b4:	011c0501 	tsteq	ip, r1, lsl #10
    16b8:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    16bc:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
    16c0:	05052c01 	streq	r2, [r5, #-3073]	; 0xfffff3ff
    16c4:	01052306 	tsteq	r5, r6, lsl #6
    16c8:	01023006 	tsteq	r2, r6
    16cc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    16d0:	02050001 	andeq	r0, r5, #1
    16d4:	10001aec 	andne	r1, r0, ip, ror #21
    16d8:	0106de03 	tsteq	r6, r3, lsl #28
    16dc:	03050106 	movweq	r0, #20742	; 0x5106
    16e0:	21136706 	tstcs	r3, r6, lsl #14
    16e4:	06130513 			; <UNDEFINED> instruction: 0x06130513
    16e8:	06030501 	streq	r0, [r3], -r1, lsl #10
    16ec:	01051375 	tsteq	r5, r5, ror r3
    16f0:	08021306 	stmdaeq	r2, {r1, r2, r8, r9, ip}
    16f4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    16f8:	02050001 	andeq	r0, r5, #1
    16fc:	00000000 	andeq	r0, r0, r0
    1700:	0106e903 	tsteq	r6, r3, lsl #18
    1704:	03050106 	movweq	r0, #20742	; 0x5106
    1708:	21137506 	tstcs	r3, r6, lsl #10
    170c:	01061305 	tsteq	r6, r5, lsl #6
    1710:	0603054a 	streq	r0, [r3], -sl, asr #10
    1714:	0105132f 	tsteq	r5, pc, lsr #6
    1718:	08021306 	stmdaeq	r2, {r1, r2, r8, r9, ip}
    171c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1720:	02050001 	andeq	r0, r5, #1
    1724:	00000000 	andeq	r0, r0, r0
    1728:	0106f303 	tsteq	r6, r3, lsl #6	; <UNPREDICTABLE>
    172c:	03050106 	movweq	r0, #20742	; 0x5106
    1730:	21137506 	tstcs	r3, r6, lsl #10
    1734:	01061305 	tsteq	r6, r5, lsl #6
    1738:	0305202e 	movweq	r2, #20526	; 0x502e
    173c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1740:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1744:	01010007 	tsteq	r1, r7
    1748:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    174c:	00000002 	andeq	r0, r0, r2
    1750:	06fd0300 	ldrbteq	r0, [sp], r0, lsl #6
    1754:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1758:	133d0603 	teqne	sp, #3145728	; 0x300000
    175c:	01060a05 	tsteq	r6, r5, lsl #20
    1760:	0105204a 	tsteq	r5, sl, asr #32
    1764:	0006022f 	andeq	r0, r6, pc, lsr #4
    1768:	01050101 	tsteq	r5, r1, lsl #2
    176c:	00020500 	andeq	r0, r2, r0, lsl #10
    1770:	03000000 	movweq	r0, #0
    1774:	06010784 	streq	r0, [r1], -r4, lsl #15
    1778:	06030501 	streq	r0, [r3], -r1, lsl #10
    177c:	060a052f 	streq	r0, [sl], -pc, lsr #10
    1780:	20202e01 	eorcs	r2, r0, r1, lsl #28
    1784:	2f010520 	svccs	0x00010520
    1788:	01000502 	tsteq	r0, r2, lsl #10
    178c:	00010501 	andeq	r0, r1, r1, lsl #10
    1790:	00000205 	andeq	r0, r0, r5, lsl #4
    1794:	8a030000 	bhi	c179c <__HEAP_SIZE+0xc079c>
    1798:	01060107 	tsteq	r6, r7, lsl #2
    179c:	67060305 	strvs	r0, [r6, -r5, lsl #6]
    17a0:	1b052113 	blne	149bf4 <__RAM_SIZE+0x49bf4>
    17a4:	03050106 	movweq	r0, #20742	; 0x5106
    17a8:	13052f06 	movwne	r2, #24326	; 0x5f06
    17ac:	05580106 	ldrbeq	r0, [r8, #-262]	; 0xfffffefa
    17b0:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    17b4:	13060105 	movwne	r0, #24837	; 0x6105
    17b8:	01000802 	tsteq	r0, r2, lsl #16
    17bc:	00033a01 	andeq	r3, r3, r1, lsl #20
    17c0:	cc000300 	stcgt	3, cr0, [r0], {-0}
    17c4:	02000001 	andeq	r0, r0, #1
    17c8:	0d0efb01 	vstreq	d15, [lr, #-4]
    17cc:	01010100 	mrseq	r0, (UNDEF: 17)
    17d0:	00000001 	andeq	r0, r0, r1
    17d4:	01000001 	tsteq	r0, r1
    17d8:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
    17dc:	2f65726f 	svccs	0x0065726f
    17e0:	00637253 	rsbeq	r7, r3, r3, asr r2
    17e4:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    17e8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    17ec:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    17f0:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    17f4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    17f8:	615c6d61 	cmpvs	ip, r1, ror #26
    17fc:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1800:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1804:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1808:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    180c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1810:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1814:	2e30312d 	rsfcssp	f3, f0, #5.0
    1818:	30322d33 	eorscc	r2, r2, r3, lsr sp
    181c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1820:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1824:	6f6e2d6d 	svcvs	0x006e2d6d
    1828:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    182c:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1830:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1834:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    1838:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    183c:	00656e69 	rsbeq	r6, r5, r9, ror #28
    1840:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1844:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1848:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    184c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1850:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1854:	615c6d61 	cmpvs	ip, r1, ror #26
    1858:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    185c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1860:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1864:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1868:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    186c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1870:	2e30312d 	rsfcssp	f3, f0, #5.0
    1874:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1878:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    187c:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
    1880:	63675c62 	cmnvs	r7, #25088	; 0x6200
    1884:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
    1888:	6f6e2d6d 	svcvs	0x006e2d6d
    188c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1890:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1894:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1898:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
    189c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    18a0:	63006564 	movwvs	r6, #1380	; 0x564
    18a4:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    18a8:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    18ac:	6f646978 	svcvs	0x00646978
    18b0:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    18b4:	6172676f 	cmnvs	r2, pc, ror #14
    18b8:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    18bc:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    18c0:	63675c63 	cmnvs	r7, #25344	; 0x6300
    18c4:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    18c8:	6f6e2d6d 	svcvs	0x006e2d6d
    18cc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    18d0:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    18d4:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    18d8:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    18dc:	30312e31 	eorscc	r2, r1, r1, lsr lr
    18e0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    18e4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    18e8:	61652d65 	cmnvs	r5, r5, ror #26
    18ec:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    18f0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    18f4:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    18f8:	63007379 	movwvs	r7, #889	; 0x379
    18fc:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1900:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1904:	6f646978 	svcvs	0x00646978
    1908:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    190c:	6172676f 	cmnvs	r2, pc, ror #14
    1910:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1914:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1918:	63675c63 	cmnvs	r7, #25344	; 0x6300
    191c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1920:	6f6e2d6d 	svcvs	0x006e2d6d
    1924:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1928:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    192c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1930:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1934:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1938:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    193c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1940:	61652d65 	cmnvs	r5, r5, ror #26
    1944:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    1948:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    194c:	00006564 	andeq	r6, r0, r4, ror #10
    1950:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
    1954:	0100632e 	tsteq	r0, lr, lsr #6
    1958:	645f0000 	ldrbvs	r0, [pc], #-0	; 1960 <__HEAP_SIZE+0x960>
    195c:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
    1960:	745f746c 	ldrbvc	r7, [pc], #-1132	; 1968 <__HEAP_SIZE+0x968>
    1964:	73657079 	cmnvc	r5, #121	; 0x79
    1968:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    196c:	74730000 	ldrbtvc	r0, [r3], #-0
    1970:	66656464 	strbtvs	r6, [r5], -r4, ror #8
    1974:	0300682e 	movweq	r6, #2094	; 0x82e
    1978:	735f0000 	cmpvc	pc, #0
    197c:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
    1980:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1984:	73000004 	movwvc	r0, #4
    1988:	6f696474 	svcvs	0x00696474
    198c:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1990:	05000000 	streq	r0, [r0, #-0]
    1994:	02050013 	andeq	r0, r5, #19
    1998:	10001b18 	andne	r1, r0, r8, lsl fp
    199c:	05012403 	streq	r2, [r1, #-1027]	; 0xfffffbfd
    19a0:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    19a4:	0b051301 	bleq	1465b0 <__RAM_SIZE+0x465b0>
    19a8:	01040200 	mrseq	r0, R12_usr
    19ac:	000c0501 	andeq	r0, ip, r1, lsl #10
    19b0:	06010402 	streq	r0, [r1], -r2, lsl #8
    19b4:	000b0501 	andeq	r0, fp, r1, lsl #10
    19b8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    19bc:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    19c0:	01061605 	tsteq	r6, r5, lsl #12
    19c4:	2f060505 	svccs	0x00060505
    19c8:	13060105 	movwne	r0, #24837	; 0x6105
    19cc:	01000302 	tsteq	r0, r2, lsl #6
    19d0:	00130501 	andseq	r0, r3, r1, lsl #10
    19d4:	00000205 	andeq	r0, r0, r5, lsl #4
    19d8:	2a030000 	bcs	c19e0 <__HEAP_SIZE+0xc09e0>
    19dc:	002b0501 	eoreq	r0, fp, r1, lsl #10
    19e0:	13010402 	movwne	r0, #5122	; 0x1402
    19e4:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    19e8:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
    19ec:	0402000d 	streq	r0, [r2], #-13
    19f0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    19f4:	0402000b 	streq	r0, [r2], #-11
    19f8:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    19fc:	0c053d06 	stceq	13, cr3, [r5], {6}
    1a00:	01050106 	tsteq	r5, r6, lsl #2
    1a04:	0003022f 	andeq	r0, r3, pc, lsr #4
    1a08:	1e050101 	adfnes	f0, f5, f1
    1a0c:	2c020500 	cfstr32cs	mvfx0, [r2], {-0}
    1a10:	0310001b 	tsteq	r0, #27
    1a14:	0106012f 	tsteq	r6, pc, lsr #2
    1a18:	2f060505 	svccs	0x00060505
    1a1c:	06090513 			; <UNDEFINED> instruction: 0x06090513
    1a20:	210b0511 	tstcs	fp, r1, lsl r5
    1a24:	21060905 	tstcs	r6, r5, lsl #18
    1a28:	060e052f 	streq	r0, [lr], -pc, lsr #10
    1a2c:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1a30:	0612051e 			; <UNDEFINED> instruction: 0x0612051e
    1a34:	200b0501 	andcs	r0, fp, r1, lsl #10
    1a38:	32060505 	andcc	r0, r6, #20971520	; 0x1400000
    1a3c:	0601053d 			; <UNDEFINED> instruction: 0x0601053d
    1a40:	01002e13 	tsteq	r0, r3, lsl lr
    1a44:	00160501 	andseq	r0, r6, r1, lsl #10
    1a48:	1b4c0205 	blne	1302264 <__RAM_SIZE+0x1202264>
    1a4c:	39031000 	stmdbcc	r3, {ip}
    1a50:	13050501 	movwne	r0, #21761	; 0x5501
    1a54:	01061605 	tsteq	r6, r5, lsl #12
    1a58:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    1a5c:	01061605 	tsteq	r6, r5, lsl #12
    1a60:	2f060505 	svccs	0x00060505
    1a64:	01061605 	tsteq	r6, r5, lsl #12
    1a68:	2f060505 	svccs	0x00060505
    1a6c:	01061605 	tsteq	r6, r5, lsl #12
    1a70:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    1a74:	01061605 	tsteq	r6, r5, lsl #12
    1a78:	2f060505 	svccs	0x00060505
    1a7c:	01061605 	tsteq	r6, r5, lsl #12
    1a80:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    1a84:	01010004 	tsteq	r1, r4
    1a88:	05002405 	streq	r2, [r0, #-1029]	; 0xfffffbfb
    1a8c:	00000002 	andeq	r0, r0, r2
    1a90:	00c20300 	sbceq	r0, r2, r0, lsl #6
    1a94:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1a98:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1a9c:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
    1aa0:	01010001 	tsteq	r1, r1
    1aa4:	05003005 	streq	r3, [r0, #-5]
    1aa8:	00000002 	andeq	r0, r0, r2
    1aac:	00c60300 	sbceq	r0, r6, r0, lsl #6
    1ab0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1ab4:	133d0605 	teqne	sp, #5242880	; 0x500000
    1ab8:	01060c05 	tsteq	r6, r5, lsl #24
    1abc:	34060905 	strcc	r0, [r6], #-2309	; 0xfffff6fb
    1ac0:	01061405 	tsteq	r6, r5, lsl #8
    1ac4:	21060905 	tstcs	r6, r5, lsl #18
    1ac8:	01060c05 	tsteq	r6, r5, lsl #24
    1acc:	03060b05 	movweq	r0, #27397	; 0x6b05
    1ad0:	0505207a 	streq	r2, [r5, #-122]	; 0xffffff86
    1ad4:	13090501 	movwne	r0, #38145	; 0x9501
    1ad8:	01060e05 	tsteq	r6, r5, lsl #28
    1adc:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    1ae0:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    1ae4:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
    1ae8:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    1aec:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
    1af0:	01053406 	tsteq	r5, r6, lsl #8
    1af4:	20201306 	eorcs	r1, r0, r6, lsl #6
    1af8:	82010100 	andhi	r0, r1, #0, 2
    1afc:	03000005 	movweq	r0, #5
    1b00:	00025b00 	andeq	r5, r2, r0, lsl #22
    1b04:	fb010200 	blx	4230e <__HEAP_SIZE+0x4130e>
    1b08:	01000d0e 	tsteq	r0, lr, lsl #26
    1b0c:	00010101 	andeq	r0, r1, r1, lsl #2
    1b10:	00010000 	andeq	r0, r1, r0
    1b14:	2e2e0100 	sufcse	f0, f6, f0
    1b18:	2f2e2e2f 	svccs	0x002e2e2f
    1b1c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1a6c <__HEAP_SIZE+0xa6c>
    1b20:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
    1b24:	2f736c69 	svccs	0x00736c69
    1b28:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    1b2c:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
    1b30:	732f706d 			; <UNDEFINED> instruction: 0x732f706d
    1b34:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    1b38:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    1b3c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    1b40:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    1b44:	5f534953 	svcpl	0x00534953
    1b48:	4d432f35 	stclmi	15, cr2, [r3, #-212]	; 0xffffff2c
    1b4c:	2f534953 	svccs	0x00534953
    1b50:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    1b54:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    1b58:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1b5c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    1b60:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1b64:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    1b68:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1b6c:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1b70:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1b74:	5f6d7261 	svcpl	0x006d7261
    1b78:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1b7c:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1b80:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1b84:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1b88:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1b8c:	30312d69 	eorscc	r2, r1, r9, ror #26
    1b90:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1b94:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1b98:	615c3031 	cmpvs	ip, r1, lsr r0
    1b9c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1ba0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1ba4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1ba8:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    1bac:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1bb0:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    1bb4:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    1bb8:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    1bbc:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1bc0:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    1bc4:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1bc8:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1bcc:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1bd0:	5f6d7261 	svcpl	0x006d7261
    1bd4:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1bd8:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1bdc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1be0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1be4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1be8:	30312d69 	eorscc	r2, r1, r9, ror #26
    1bec:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1bf0:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1bf4:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    1bf8:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    1bfc:	615c6363 	cmpvs	ip, r3, ror #6
    1c00:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1c04:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1c08:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1c0c:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    1c10:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    1c14:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1c18:	00656475 	rsbeq	r6, r5, r5, ror r4
    1c1c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1c20:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1c24:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1c28:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1c2c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1c30:	615c6d61 	cmpvs	ip, r1, ror #26
    1c34:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1c38:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1c3c:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1c40:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1c44:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1c48:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1c4c:	2e30312d 	rsfcssp	f3, f0, #5.0
    1c50:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1c54:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1c58:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1c5c:	6f6e2d6d 	svcvs	0x006e2d6d
    1c60:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1c64:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1c68:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1c6c:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    1c70:	00737973 	rsbseq	r7, r3, r3, ror r9
    1c74:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1c78:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1c7c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1c80:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    1c84:	61662f73 	smcvs	25331	; 0x62f3
    1c88:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    1c8c:	706d7564 	rsbvc	r7, sp, r4, ror #10
    1c90:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1c94:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    1c98:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1c9c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    1ca0:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1ca4:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1ca8:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1cac:	5f6d7261 	svcpl	0x006d7261
    1cb0:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    1cb4:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1cb8:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1cbc:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1cc0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1cc4:	30312d69 	eorscc	r2, r1, r9, ror #26
    1cc8:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1ccc:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1cd0:	615c3031 	cmpvs	ip, r1, lsr r0
    1cd4:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1cd8:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1cdc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1ce0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    1ce4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    1ce8:	61660000 	cmnvs	r6, r0
    1cec:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    1cf0:	706d7564 	rsbvc	r7, sp, r4, ror #10
    1cf4:	0100632e 	tsteq	r0, lr, lsr #6
    1cf8:	6d630000 	stclvs	0, cr0, [r3, #-0]
    1cfc:	5f736973 	svcpl	0x00736973
    1d00:	2e636367 	cdpcs	3, 6, cr6, cr3, cr7, {3}
    1d04:	00020068 	andeq	r0, r2, r8, rrx
    1d08:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    1d0c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    1d10:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1d14:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    1d18:	00030068 	andeq	r0, r3, r8, rrx
    1d1c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    1d20:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    1d24:	00040068 	andeq	r0, r4, r8, rrx
    1d28:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    1d2c:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    1d30:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
    1d34:	61660000 	cmnvs	r6, r0
    1d38:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    1d3c:	706d7564 	rsbvc	r7, sp, r4, ror #10
    1d40:	0600682e 	streq	r6, [r0], -lr, lsr #16
    1d44:	623c0000 	eorsvs	r0, ip, #0
    1d48:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    1d4c:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    1d50:	00000000 	andeq	r0, r0, r0
    1d54:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1d58:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    1d5c:	00000007 	andeq	r0, r0, r7
    1d60:	05003805 	streq	r3, [r0, #-2053]	; 0xfffff7fb
    1d64:	001b7002 	andseq	r7, fp, r2
    1d68:	00f30310 	rscseq	r0, r3, r0, lsl r3
    1d6c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1d70:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1d74:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1d78:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    1d7c:	05010a05 	streq	r0, [r1, #-2565]	; 0xfffff5fb
    1d80:	05010605 	streq	r0, [r1, #-1541]	; 0xfffff9fb
    1d84:	04020009 	streq	r0, [r2], #-9
    1d88:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    1d8c:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
    1d90:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    1d94:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
    1d98:	3d052e03 	stccc	14, cr2, [r5, #-12]
    1d9c:	03040200 	movweq	r0, #16896	; 0x4200
    1da0:	3e055706 	cdpcc	7, 0, cr5, cr5, cr6, {0}
    1da4:	03040200 	movweq	r0, #16896	; 0x4200
    1da8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    1dac:	01040200 	mrseq	r0, R12_usr
    1db0:	05052006 	streq	r2, [r5, #-6]
    1db4:	01040200 	mrseq	r0, R12_usr
    1db8:	31060106 	tstcc	r6, r6, lsl #2
    1dbc:	01062205 	tsteq	r6, r5, lsl #4
    1dc0:	0605052f 	streq	r0, [r5], -pc, lsr #10
    1dc4:	0601052f 	streq	r0, [r1], -pc, lsr #10
    1dc8:	02022e13 	andeq	r2, r2, #304	; 0x130
    1dcc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1dd0:	02050033 	andeq	r0, r5, #51	; 0x33
    1dd4:	10001b9c 	mulne	r0, ip, fp
    1dd8:	0100fe03 	tsteq	r0, r3, lsl #28	; <UNPREDICTABLE>
    1ddc:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    1de0:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1de4:	052f0605 	streq	r0, [pc, #-1541]!	; 17e7 <__HEAP_SIZE+0x7e7>
    1de8:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    1dec:	0505200e 	streq	r2, [r5, #-14]
    1df0:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
    1df4:	26050106 	strcs	r0, [r5], -r6, lsl #2
    1df8:	01040200 	mrseq	r0, R12_usr
    1dfc:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
    1e00:	0608053f 			; <UNDEFINED> instruction: 0x0608053f
    1e04:	00260501 	eoreq	r0, r6, r1, lsl #10
    1e08:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1e0c:	203f0c05 	eorscs	r0, pc, r5, lsl #24
    1e10:	201b1005 	andscs	r1, fp, r5
    1e14:	20232020 	eorcs	r2, r3, r0, lsr #32
    1e18:	23010520 	movwcs	r0, #5408	; 0x1520
    1e1c:	01000102 	tsteq	r0, r2, lsl #2
    1e20:	001c0501 	andseq	r0, ip, r1, lsl #10
    1e24:	1bd40205 	blne	ff502640 <__StackTop+0xc7402640>
    1e28:	e8031000 	stmda	r3, {ip}
    1e2c:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    1e30:	061a0521 	ldreq	r0, [sl], -r1, lsr #10
    1e34:	20180501 	andscs	r0, r8, r1, lsl #10
    1e38:	2f060505 	svccs	0x00060505
    1e3c:	01061a05 	tsteq	r6, r5, lsl #20
    1e40:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    1e44:	4c2f0605 	stcmi	6, cr0, [pc], #-20	; 1e38 <__HEAP_SIZE+0xe38>
    1e48:	06010568 	streq	r0, [r1], -r8, ror #10
    1e4c:	0013024c 	andseq	r0, r3, ip, asr #4
    1e50:	73050101 	movwvc	r0, #20737	; 0x5101
    1e54:	24020500 	strcs	r0, [r2], #-1280	; 0xfffffb00
    1e58:	0310001c 	tsteq	r0, #28
    1e5c:	060101c8 	streq	r0, [r1], -r8, asr #3
    1e60:	06050501 	streq	r0, [r5], -r1, lsl #10
    1e64:	0513132f 	ldreq	r1, [r3, #-815]	; 0xfffffcd1
    1e68:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1e6c:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
    1e70:	05055801 	streq	r5, [r5, #-2049]	; 0xfffff7ff
    1e74:	02002306 	andeq	r2, r0, #402653184	; 0x18000000
    1e78:	20060104 	andcs	r0, r6, r4, lsl #2
    1e7c:	05290905 	streq	r0, [r9, #-2309]!	; 0xfffff6fb
    1e80:	04020005 	streq	r0, [r2], #-5
    1e84:	00360602 	eorseq	r0, r6, r2, lsl #12
    1e88:	20010402 	andcs	r0, r1, r2, lsl #8
    1e8c:	03040200 	movweq	r0, #16896	; 0x4200
    1e90:	09052006 	stmdbeq	r5, {r1, r2, sp}
    1e94:	0c053006 	stceq	0, cr3, [r5], {6}
    1e98:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1e9c:	13052206 	movwne	r2, #20998	; 0x5206
    1ea0:	0c050106 	stfeqs	f0, [r5], {6}
    1ea4:	002f0520 	eoreq	r0, pc, r0, lsr #10
    1ea8:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1eac:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    1eb0:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1eb4:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    1eb8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1ebc:	14400609 	strbne	r0, [r0], #-1545	; 0xfffff9f7
    1ec0:	01060c05 	tsteq	r6, r5, lsl #24
    1ec4:	30060905 	andcc	r0, r6, r5, lsl #18
    1ec8:	01060c05 	tsteq	r6, r5, lsl #24
    1ecc:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    1ed0:	01060e05 	tsteq	r6, r5, lsl #28
    1ed4:	3e060905 	vmlacc.f16	s0, s12, s10	; <UNPREDICTABLE>
    1ed8:	01060e05 	tsteq	r6, r5, lsl #28
    1edc:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    1ee0:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    1ee4:	05010617 	streq	r0, [r1, #-1559]	; 0xfffff9e9
    1ee8:	052f0609 	streq	r0, [pc, #-1545]!	; 18e7 <__HEAP_SIZE+0x8e7>
    1eec:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1ef0:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    1ef4:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1ef8:	10053301 	andne	r3, r5, r1, lsl #6
    1efc:	3c3c5a03 			; <UNDEFINED> instruction: 0x3c3c5a03
    1f00:	0602583f 			; <UNDEFINED> instruction: 0x0602583f
    1f04:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1f08:	02050043 	andeq	r0, r5, #67	; 0x43
    1f0c:	10001ca0 	andne	r1, r0, r0, lsr #25
    1f10:	01018d03 	tsteq	r1, r3, lsl #26
    1f14:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1f18:	13133d06 	tstne	r3, #384	; 0x180
    1f1c:	18051413 	stmdane	r5, {r0, r1, r4, sl, ip}
    1f20:	16050106 	strne	r0, [r5], -r6, lsl #2
    1f24:	06050520 	streq	r0, [r5], -r0, lsr #10
    1f28:	0618052f 	ldreq	r0, [r8], -pc, lsr #10
    1f2c:	20160501 	andscs	r0, r6, r1, lsl #10
    1f30:	21060505 	tstcs	r6, r5, lsl #10
    1f34:	01061805 	tsteq	r6, r5, lsl #16
    1f38:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    1f3c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1f40:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1f44:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    1f48:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    1f4c:	16050106 	strne	r0, [r5], -r6, lsl #2
    1f50:	06050520 	streq	r0, [r5], -r0, lsr #10
    1f54:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    1f58:	20160501 	andscs	r0, r6, r1, lsl #10
    1f5c:	21060505 	tstcs	r6, r5, lsl #10
    1f60:	01061805 	tsteq	r6, r5, lsl #16
    1f64:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    1f68:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1f6c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1f70:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    1f74:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    1f78:	16050106 	strne	r0, [r5], -r6, lsl #2
    1f7c:	06050520 	streq	r0, [r5], -r0, lsr #10
    1f80:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    1f84:	20160501 	andscs	r0, r6, r1, lsl #10
    1f88:	21060505 	tstcs	r6, r5, lsl #10
    1f8c:	01061805 	tsteq	r6, r5, lsl #16
    1f90:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    1f94:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1f98:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1f9c:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    1fa0:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    1fa4:	16050106 	strne	r0, [r5], -r6, lsl #2
    1fa8:	06050520 	streq	r0, [r5], -r0, lsr #10
    1fac:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    1fb0:	20160501 	andscs	r0, r6, r1, lsl #10
    1fb4:	21060505 	tstcs	r6, r5, lsl #10
    1fb8:	01061805 	tsteq	r6, r5, lsl #16
    1fbc:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    1fc0:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1fc4:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1fc8:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    1fcc:	2e062206 	cdpcs	2, 0, cr2, cr6, cr6, {0}
    1fd0:	3d3d2f06 	ldccc	15, cr2, [sp, #-24]!	; 0xffffffe8
    1fd4:	4b4b4b4b 	blmi	12d4d08 <__RAM_SIZE+0x11d4d08>
    1fd8:	4b4b4b4b 	blmi	12d4d0c <__RAM_SIZE+0x11d4d0c>
    1fdc:	4b4b4b4b 	blmi	12d4d10 <__RAM_SIZE+0x11d4d10>
    1fe0:	4b4b4b4b 	blmi	12d4d14 <__RAM_SIZE+0x11d4d14>
    1fe4:	05134c3d 	ldreq	r4, [r3, #-3133]	; 0xfffff3c3
    1fe8:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1fec:	06860605 	streq	r0, [r6], r5, lsl #12
    1ff0:	4b2f0620 	blmi	bc3878 <__RAM_SIZE+0xac3878>
    1ff4:	01061005 	tsteq	r6, r5
    1ff8:	05200505 	streq	r0, [r0, #-1285]!	; 0xfffffafb
    1ffc:	04020009 	streq	r0, [r2], #-9
    2000:	05210603 	streq	r0, [r1, #-1539]!	; 0xfffff9fd
    2004:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    2008:	29056503 	stmdbcs	r5, {r0, r1, r8, sl, sp, lr}
    200c:	03040200 	movweq	r0, #16896	; 0x4200
    2010:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    2014:	01040200 	mrseq	r0, R12_usr
    2018:	05052006 	streq	r2, [r5, #-6]
    201c:	01040200 	mrseq	r0, R12_usr
    2020:	31060106 	tstcc	r6, r6, lsl #2
    2024:	01040200 	mrseq	r0, R12_usr
    2028:	000e053d 	andeq	r0, lr, sp, lsr r5
    202c:	01010402 	tsteq	r1, r2, lsl #8
    2030:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    2034:	02010104 	andeq	r0, r1, #4, 2
    2038:	01010034 	tsteq	r1, r4, lsr r0
    203c:	05002e05 	streq	r2, [r0, #-3589]	; 0xfffff1fb
    2040:	001e2c02 	andseq	r2, lr, r2, lsl #24
    2044:	01f40310 	mvnseq	r0, r0, lsl r3
    2048:	13050501 	movwne	r0, #21761	; 0x5501
    204c:	1f050204 	svcne	0x00050204
    2050:	0106ed03 	tsteq	r6, r3, lsl #26
    2054:	14140305 	ldrne	r0, [r4], #-773	; 0xfffffcfb
    2058:	0401062f 	streq	r0, [r1], #-1583	; 0xfffff9d1
    205c:	03010501 	movweq	r0, #5377	; 0x1501
    2060:	0201798f 	andeq	r7, r1, #2342912	; 0x23c000
    2064:	01010001 	tsteq	r1, r1
    2068:	05002e05 	streq	r2, [r0, #-3589]	; 0xfffff1fb
    206c:	001e3402 	andseq	r3, lr, r2, lsl #8
    2070:	01f80310 	mvnseq	r0, r0, lsl r3
    2074:	13050501 	movwne	r0, #21761	; 0x5501
    2078:	13060105 	movwne	r0, #24837	; 0x6105
    207c:	01000402 	tsteq	r0, r2, lsl #8
    2080:	00007401 	andeq	r7, r0, r1, lsl #8
    2084:	28000300 	stmdacs	r0, {r8, r9}
    2088:	02000000 	andeq	r0, r0, #0
    208c:	0d0efb01 	vstreq	d15, [lr, #-4]
    2090:	01010100 	mrseq	r0, (UNDEF: 17)
    2094:	00000001 	andeq	r0, r0, r1
    2098:	01000001 	tsteq	r0, r1
    209c:	61747300 	cmnvs	r4, r0, lsl #6
    20a0:	70757472 	rsbsvc	r7, r5, r2, ror r4
    20a4:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
    20a8:	33334d43 	teqcc	r3, #4288	; 0x10c0
    20ac:	0000732e 	andeq	r7, r0, lr, lsr #6
    20b0:	00000000 	andeq	r0, r0, r0
    20b4:	1e3c0205 	cdpne	2, 3, cr0, cr12, cr5, {0}
    20b8:	d3031000 	movwle	r1, #12288	; 0x3000
    20bc:	30210100 	eorcc	r0, r1, r0, lsl #2
    20c0:	30362f21 	eorscc	r2, r6, r1, lsr #30
    20c4:	21212321 			; <UNDEFINED> instruction: 0x21212321
    20c8:	23212121 			; <UNDEFINED> instruction: 0x23212121
    20cc:	21212121 			; <UNDEFINED> instruction: 0x21212121
    20d0:	21232122 			; <UNDEFINED> instruction: 0x21232122
    20d4:	21212123 			; <UNDEFINED> instruction: 0x21212123
    20d8:	21232121 			; <UNDEFINED> instruction: 0x21232121
    20dc:	21222121 			; <UNDEFINED> instruction: 0x21222121
    20e0:	2e0e0323 	cdpcs	3, 0, cr0, cr14, cr3, {1}
    20e4:	03200903 			; <UNDEFINED> instruction: 0x03200903
    20e8:	312e7faf 			; <UNDEFINED> instruction: 0x312e7faf
    20ec:	2f2e0c03 	svccs	0x002e0c03
    20f0:	2f2e1503 	svccs	0x002e1503
    20f4:	01000202 	tsteq	r0, r2, lsl #4
    20f8:	00007d01 	andeq	r7, r0, r1, lsl #26
    20fc:	4e000300 	cdpmi	3, 0, cr0, cr0, cr0, {0}
    2100:	02000000 	andeq	r0, r0, #0
    2104:	0d0efb01 	vstreq	d15, [lr, #-4]
    2108:	01010100 	mrseq	r0, (UNDEF: 17)
    210c:	00000001 	andeq	r0, r0, r1
    2110:	01000001 	tsteq	r0, r1
    2114:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2118:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    211c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2120:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    2124:	61662f73 	smcvs	25331	; 0x62f3
    2128:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    212c:	706d7564 	rsbvc	r7, sp, r4, ror #10
    2130:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
    2134:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    2138:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
    213c:	0033336d 	eorseq	r3, r3, sp, ror #6
    2140:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    2144:	672d746c 	strvs	r7, [sp, -ip, ror #8]!
    2148:	732e6363 			; <UNDEFINED> instruction: 0x732e6363
    214c:	00000100 	andeq	r0, r0, r0, lsl #2
    2150:	02050000 	andeq	r0, r5, #0
    2154:	10001eac 	andne	r1, r0, ip, lsr #29
    2158:	21011903 	tstcs	r1, r3, lsl #18
    215c:	2f222121 	svccs	0x00222121
    2160:	21302f21 	teqcs	r0, r1, lsr #30
    2164:	30222121 	eorcc	r2, r2, r1, lsr #2
    2168:	302f212f 	eorcc	r2, pc, pc, lsr #2
    216c:	68032121 	stmdavs	r3, {r0, r5, r8, sp}
    2170:	1503302e 	strne	r3, [r3, #-46]	; 0xffffffd2
    2174:	0002022e 	andeq	r0, r2, lr, lsr #4
    2178:	Address 0x00002178 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	53434344 	movtpl	r4, #13124	; 0x3344
   4:	5f5f0057 	svcpl	0x005f0057
}
   8:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
   c:	5f6e6974 	svcpl	0x006e6974
    printf("c = %d\r\n", c);
  10:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
}
  14:	64646100 	strbtvs	r6, [r4], #-256	; 0xffffff00
  18:	3a430072 	bcc	10c01e8 <__RAM_SIZE+0xfc01e8>
  1c:	6573555c 	ldrbvs	r5, [r3, #-1372]!	; 0xfffffaa4
  20:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
  24:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
  28:	646f635c 	strbtvs	r6, [pc], #-860	; 30 <__STACKSEAL_SIZE+0x30>
  2c:	69675c65 	stmdbvs	r7!, {r0, r2, r5, r6, sl, fp, ip, lr}^
  30:	62756874 	rsbsvs	r6, r5, #116, 16	; 0x740000
  34:	6d65715c 	stfvse	f7, [r5, #-368]!	; 0xfffffe90
  38:	69732d75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r8, sl, fp, sp}^
  3c:	616c756d 	cmnvs	ip, sp, ror #10
  40:	5c726f74 	ldclpl	15, cr6, [r2], #-464	; 0xfffffe30
  44:	72616f62 	rsbvc	r6, r1, #392	; 0x188
  48:	6d5c7364 	ldclvs	3, cr7, [ip, #-400]	; 0xfffffe70
  4c:	2d327370 	ldccs	3, cr7, [r2, #-448]!	; 0xfffffe40
  50:	30356e61 	eorscc	r6, r5, r1, ror #28
  54:	43475c35 	movtmi	r5, #31797	; 0x7c35
  58:	65532d43 	ldrbvs	r2, [r3, #-3395]	; 0xfffff2bd
  5c:	65727563 	ldrbvs	r7, [r2, #-1379]!	; 0xfffffa9d
  60:	464d4d00 	strbmi	r4, [sp], -r0, lsl #26
  64:	4d005241 	sfmmi	f5, 4, [r0, #-260]	; 0xfffffefc
  68:	30524656 	subscc	r4, r2, r6, asr r6
  6c:	6f687300 	svcvs	0x00687300
  70:	69207472 	stmdbvs	r0!, {r1, r4, r5, r6, sl, ip, sp, lr}
  74:	4d00746e 	cfstrsmi	mvf7, [r0, #-440]	; 0xfffffe48
  78:	31524656 	cmpcc	r2, r6, asr r6
  7c:	5f444900 	svcpl	0x00444900
  80:	00524650 	subseq	r4, r2, r0, asr r6
  84:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
  88:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
  8c:	616d0074 	smcvs	53252	; 0xd004
  90:	6c006e69 	stcvs	14, cr6, [r0], {105}	; 0x69
  94:	20676e6f 	rsbcs	r6, r7, pc, ror #28
  98:	62756f64 	rsbsvs	r6, r5, #100, 30	; 0x190
  9c:	5f00656c 	svcpl	0x0000656c
  a0:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
  a4:	5f323374 	svcpl	0x00323374
  a8:	43440074 	movtmi	r0, #16500	; 0x4074
  ac:	564d4943 	strbpl	r4, [sp], -r3, asr #18
  b0:	49004341 	stmdbmi	r0, {r0, r6, r8, r9, lr}
  b4:	4d4d5f44 	stclmi	15, cr5, [sp, #-272]	; 0xfffffef0
  b8:	43005246 	movwmi	r5, #582	; 0x246
  bc:	44495550 	strbmi	r5, [r9], #-1360	; 0xfffffab0
  c0:	6c617600 	stclvs	6, cr7, [r1], #-0
  c4:	5f006575 	svcpl	0x00006575
  c8:	6975625f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
  cc:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
  d0:	6d656d5f 	stclvs	13, cr6, [r5, #-380]!	; 0xfffffe84
  d4:	00746573 	rsbseq	r6, r4, r3, ror r5
  d8:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
  dc:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
  e0:	61660034 	cmnvs	r6, r4, lsr r0
  e4:	5f746c75 	svcpl	0x00746c75
  e8:	706d7564 	rsbvc	r7, sp, r4, ror #10
  ec:	5f6d625f 	svcpl	0x006d625f
  f0:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
  f4:	74735f6b 	ldrbtvc	r5, [r3], #-3947	; 0xfffff095
  f8:	00747261 	rsbseq	r7, r4, r1, ror #4
  fc:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 100:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 104:	65740036 	ldrbvs	r0, [r4, #-54]!	; 0xffffffca
 108:	00317473 	eorseq	r7, r1, r3, ror r4
 10c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 110:	65740032 	ldrbvs	r0, [r4, #-50]!	; 0xffffffce
 114:	00337473 	eorseq	r7, r3, r3, ror r4
 118:	52495453 	subpl	r5, r9, #1392508928	; 0x53000000
 11c:	5f444900 	svcpl	0x00444900
 120:	00524641 	subseq	r4, r2, r1, asr #12
 124:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 128:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
 12c:	625f706d 	subsvs	r7, pc, #109	; 0x6d
 130:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
 134:	5f6b6361 	svcpl	0x006b6361
 138:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
 13c:	43440074 	movtmi	r0, #16500	; 0x4074
 140:	00575349 	subseq	r5, r7, r9, asr #6
 144:	64726148 	ldrbtvs	r6, [r2], #-328	; 0xfffffeb8
 148:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
 14c:	61485f74 	hvcvs	34292	; 0x85f4
 150:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 154:	654c5f72 	strbvs	r5, [ip, #-3954]	; 0xfffff08e
 158:	636e6567 	cmnvs	lr, #432013312	; 0x19c00000
 15c:	564d0079 			; <UNDEFINED> instruction: 0x564d0079
 160:	00325246 	eorseq	r5, r2, r6, asr #4
 164:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 168:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
 16c:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
 170:	46420074 			; <UNDEFINED> instruction: 0x46420074
 174:	43005241 	movwmi	r5, #577	; 0x241
 178:	44495343 	strbmi	r5, [r9], #-835	; 0xfffffcbd
 17c:	5f5f0052 	svcpl	0x005f0052
 180:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
 184:	00745f38 	rsbseq	r5, r4, r8, lsr pc
 188:	20554e47 	subscs	r4, r5, r7, asr #28
 18c:	20373143 	eorscs	r3, r7, r3, asr #2
 190:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
 194:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
 198:	30313230 	eorscc	r3, r1, r0, lsr r2
 19c:	20343238 	eorscs	r3, r4, r8, lsr r2
 1a0:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
 1a4:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
 1a8:	6d2d2029 	stcvs	0, cr2, [sp, #-164]!	; 0xffffff5c
 1ac:	3d757063 	ldclcc	0, cr7, [r5, #-396]!	; 0xfffffe74
 1b0:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
 1b4:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
 1b8:	2d203333 	stccs	3, cr3, [r0, #-204]!	; 0xffffff34
 1bc:	7570666d 	ldrbvc	r6, [r0, #-1645]!	; 0xfffff993
 1c0:	7670663d 			; <UNDEFINED> instruction: 0x7670663d
 1c4:	70732d35 	rsbsvc	r2, r3, r5, lsr sp
 1c8:	3631642d 	ldrtcc	r6, [r1], -sp, lsr #8
 1cc:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
 1d0:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
 1d4:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
 1d8:	7261683d 	rsbvc	r6, r1, #3997696	; 0x3d0000
 1dc:	6d2d2064 	stcvs	0, cr2, [sp, #-400]!	; 0xfffffe70
 1e0:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
 1e4:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
 1e8:	68637261 	stmdavs	r3!, {r0, r5, r6, r9, ip, sp, lr}^
 1ec:	6d72613d 	ldfvse	f6, [r2, #-244]!	; 0xffffff0c
 1f0:	6d2d3876 	stcvs	8, cr3, [sp, #-472]!	; 0xfffffe28
 1f4:	69616d2e 	stmdbvs	r1!, {r1, r2, r3, r5, r8, sl, fp, sp, lr}^
 1f8:	73642b6e 	cmnvc	r4, #112640	; 0x1b800
 1fc:	70662b70 	rsbvc	r2, r6, r0, ror fp
 200:	20672d20 	rsbcs	r2, r7, r0, lsr #26
 204:	7764672d 	strbvc	r6, [r4, -sp, lsr #14]!
 208:	2d667261 	sfmcs	f7, 2, [r6, #-388]!	; 0xfffffe7c
 20c:	4f2d2032 	svcmi	0x002d2032
 210:	662d2067 	strtvs	r2, [sp], -r7, rrx
 214:	61746164 	cmnvs	r4, r4, ror #2
 218:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
 21c:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 220:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
 224:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 228:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 22c:	6365732d 	cmnvs	r5, #-1275068416	; 0xb4000000
 230:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 234:	662d2073 			; <UNDEFINED> instruction: 0x662d2073
 238:	652d6f6e 	strvs	r6, [sp, #-3950]!	; 0xfffff092
 23c:	70656378 	rsbvc	r6, r5, r8, ror r3
 240:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
 244:	61660073 	smcvs	24579	; 0x6003
 248:	5f746c75 	svcpl	0x00746c75
 24c:	706d7564 	rsbvc	r7, sp, r4, ror #10
 250:	6c61635f 	stclvs	3, cr6, [r1], #-380	; 0xfffffe84
 254:	6174736c 	cmnvs	r4, ip, ror #6
 258:	43006b63 	movwmi	r6, #2915	; 0xb63
 25c:	00525346 	subseq	r5, r2, r6, asr #6
 260:	41494349 	cmpmi	r9, r9, asr #6
 264:	00554c4c 	subseq	r4, r5, ip, asr #24
 268:	4d494344 	stclmi	3, cr4, [r9, #-272]	; 0xfffffef0
 26c:	00434156 	subeq	r4, r3, r6, asr r1
 270:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 274:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 278:	61686320 	cmnvs	r8, r0, lsr #6
 27c:	43490072 	movtmi	r0, #36978	; 0x9072
 280:	41564d49 	cmpmi	r6, r9, asr #26
 284:	44490055 	strbmi	r0, [r9], #-85	; 0xffffffab
 288:	4153495f 	cmpmi	r3, pc, asr r9
 28c:	61660052 	qdsubvs	r0, r2, r6
 290:	5f746c75 	svcpl	0x00746c75
 294:	706d7564 	rsbvc	r7, sp, r4, ror #10
 298:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 29c:	43530074 	cmpmi	r3, #116	; 0x74
 2a0:	79545f42 	ldmdbvc	r4, {r1, r6, r8, r9, sl, fp, ip, lr}^
 2a4:	53006570 	movwpl	r6, #1392	; 0x570
 2a8:	00525048 	subseq	r5, r2, r8, asr #32
 2ac:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 2b0:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
 2b4:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
 2b8:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 2bc:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
 2c0:	6600746e 	strvs	r7, [r0], -lr, ror #8
 2c4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 2c8:	616e755f 	cmnvs	lr, pc, asr r5
 2cc:	6e67696c 	vnmulvs.f16	s13, s14, s25	; <UNPREDICTABLE>
 2d0:	6972745f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, ip, sp, lr}^
 2d4:	72656767 	rsbvc	r6, r5, #27000832	; 0x19c0000
 2d8:	53465300 	movtpl	r5, #25344	; 0x6300
 2dc:	48530052 	ldmdami	r3, {r1, r4, r6}^
 2e0:	00525343 	subseq	r5, r2, r3, asr #6
 2e4:	4d434344 	stclmi	3, cr4, [r3, #-272]	; 0xfffffef0
 2e8:	00434156 	subeq	r4, r3, r6, asr r1
 2ec:	4341534e 	movtmi	r5, #4942	; 0x134e
 2f0:	5f5f0052 	svcpl	0x005f0052
 2f4:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
 2f8:	43005f5f 	movwmi	r5, #3935	; 0xf5f
 2fc:	4c455353 	mcrrmi	3, 5, r5, r5, cr3
 300:	68730052 	ldmdavs	r3!, {r1, r4, r6}^
 304:	2074726f 	rsbscs	r7, r4, pc, ror #4
 308:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 30c:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 310:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
 314:	43434400 	movtmi	r4, #13312	; 0x3400
 318:	5541564d 	strbpl	r5, [r1, #-1613]	; 0xfffff9b3
 31c:	66654400 	strbtvs	r4, [r5], -r0, lsl #8
 320:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 324:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
 328:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
 32c:	4f545600 	svcmi	0x00545600
 330:	46440052 			; <UNDEFINED> instruction: 0x46440052
 334:	48005253 	stmdami	r0, {r0, r1, r4, r6, r9, ip, lr}
 338:	00525346 	subseq	r5, r2, r6, asr #6
 33c:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
 340:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
 344:	616d0033 	cmnvs	sp, r3, lsr r0
 348:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
 34c:	53455200 	movtpl	r5, #20992	; 0x5200
 350:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
 354:	53003544 	movwpl	r3, #1348	; 0x544
 358:	00524146 	subseq	r4, r2, r6, asr #2
 35c:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 360:	69645f74 	stmdbvs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 364:	657a5f76 	ldrbvs	r5, [sl, #-3958]!	; 0xfffff08a
 368:	745f6f72 	ldrbvc	r6, [pc], #-3954	; 370 <__STACKSEAL_SIZE+0x370>
 36c:	67676972 			; <UNDEFINED> instruction: 0x67676972
 370:	44007265 	strmi	r7, [r0], #-613	; 0xfffffd9b
 374:	53494343 	movtpl	r4, #37699	; 0x9343
 378:	45520057 	ldrbmi	r0, [r2, #-87]	; 0xffffffa9
 37c:	56524553 			; <UNDEFINED> instruction: 0x56524553
 380:	00374445 	eorseq	r4, r7, r5, asr #8
 384:	44494c43 	strbmi	r4, [r9], #-3139	; 0xfffff3bd
 388:	6f630052 	svcvs	0x00630052
 38c:	00746e75 	rsbseq	r6, r4, r5, ror lr
 390:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 394:	65740030 	ldrbvs	r0, [r4, #-48]!	; 0xffffffd0
 398:	00347473 	eorseq	r7, r4, r3, ror r4
 39c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 3a0:	46410035 			; <UNDEFINED> instruction: 0x46410035
 3a4:	42005253 	andmi	r5, r0, #805306373	; 0x30000005
 3a8:	4c414950 	mcrrmi	9, 5, r4, r1, cr0	; <UNPREDICTABLE>
 3ac:	4449004c 	strbmi	r0, [r9], #-76	; 0xffffffb4
 3b0:	5246445f 	subpl	r4, r6, #1593835520	; 0x5f000000
 3b4:	53434900 	movtpl	r4, #14592	; 0x3900
 3b8:	50430052 	subpl	r0, r3, r2, asr r0
 3bc:	00524341 	subseq	r4, r2, r1, asr #6
 3c0:	43524941 	cmpmi	r2, #1064960	; 0x104000
 3c4:	79530052 	ldmdbvc	r3, {r1, r4, r6}^
 3c8:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
 3cc:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
 3d0:	636f6c43 	cmnvs	pc, #17152	; 0x4300
 3d4:	6470556b 	ldrbtvs	r5, [r0], #-1387	; 0xfffffa95
 3d8:	00657461 	rsbeq	r7, r5, r1, ror #8
 3dc:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
 3e0:	6f436d65 	svcvs	0x00436d65
 3e4:	6c436572 	cfstr64vs	mvdx6, [r3], {114}	; 0x72
 3e8:	006b636f 	rsbeq	r6, fp, pc, ror #6
 3ec:	65565f5f 	ldrbvs	r5, [r6, #-3935]	; 0xfffff0a1
 3f0:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
 3f4:	79530073 	ldmdbvc	r3, {r0, r1, r4, r5, r6}^
 3f8:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
 3fc:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
 400:	73797300 	cmnvc	r9, #0, 6
 404:	5f6d6574 	svcpl	0x006d6574
 408:	434d5241 	movtmi	r5, #53825	; 0xd241
 40c:	2e33334d 	cdpcs	3, 3, cr3, cr3, cr13, {2}
 410:	45560063 	ldrbmi	r0, [r6, #-99]	; 0xffffff9d
 414:	524f5443 	subpl	r5, pc, #1124073472	; 0x43000000
 418:	4241545f 	submi	r5, r1, #1593835520	; 0x5f000000
 41c:	545f454c 	ldrbpl	r4, [pc], #-1356	; 424 <__STACKSEAL_SIZE+0x424>
 420:	00657079 	rsbeq	r7, r5, r9, ror r0
 424:	63747570 	cmnvs	r4, #112, 10	; 0x1c000000
 428:	00726168 	rsbseq	r6, r2, r8, ror #2
 42c:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
 430:	5f696261 	svcpl	0x00696261
 434:	00643269 	rsbeq	r3, r4, r9, ror #4
 438:	31776f70 	cmncc	r7, r0, ror pc
 43c:	78650030 	stmdavc	r5!, {r4, r5}^
 440:	6f003270 	svcvs	0x00003270
 444:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
 448:	775f7463 	ldrbvc	r7, [pc, -r3, ror #8]
 44c:	00706172 	rsbseq	r6, r0, r2, ror r1
 450:	76707865 	ldrbtvc	r7, [r0], -r5, ror #16
 454:	76006c61 	strvc	r6, [r0], -r1, ror #24
 458:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
 45c:	73006674 	movwvc	r6, #1652	; 0x674
 460:	5f657a69 	svcpl	0x00657a69
 464:	696d0074 	stmdbvs	sp!, {r2, r4, r5, r6}^
 468:	6469776e 	strbtvs	r7, [r9], #-1902	; 0xfffff892
 46c:	5f006874 	svcpl	0x00006874
 470:	6165615f 	cmnvs	r5, pc, asr r1
 474:	645f6962 	ldrbvs	r6, [pc], #-2402	; 47c <__STACKSEAL_SIZE+0x47c>
 478:	00766964 	rsbseq	r6, r6, r4, ror #18
 47c:	6f74655f 	svcvs	0x0074655f
 480:	6f5f0061 	svcvs	0x005f0061
 484:	635f7475 	cmpvs	pc, #1962934272	; 0x75000000
 488:	00726168 	rsbseq	r6, r2, r8, ror #2
 48c:	7378616d 	cmnvc	r8, #1073741851	; 0x4000001b
 490:	00657a69 	rsbeq	r7, r5, r9, ror #20
 494:	6c6f6877 	stclvs	8, cr6, [pc], #-476	; 2c0 <__STACKSEAL_SIZE+0x2c0>
 498:	5f5f0065 	svcpl	0x005f0065
 49c:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
 4a0:	32645f69 	rsbcc	r5, r4, #420	; 0x1a4
 4a4:	5f007a69 	svcpl	0x00007a69
 4a8:	5f74756f 	svcpl	0x0074756f
 4ac:	66667562 	strbtvs	r7, [r6], -r2, ror #10
 4b0:	66007265 	strvs	r7, [r0], -r5, ror #4
 4b4:	00636172 	rsbeq	r6, r3, r2, ror r1
 4b8:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
 4bc:	7463665f 	strbtvc	r6, [r3], #-1631	; 0xfffff9a1
 4c0:	615f5f00 	cmpvs	pc, r0, lsl #30
 4c4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 4c8:	7532645f 	ldrvc	r6, [r2, #-1119]!	; 0xfffffba1
 4cc:	73007a69 	movwvc	r7, #2665	; 0xa69
 4d0:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 4d4:	7864695f 	stmdavc	r4!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 4d8:	74636600 	strbtvc	r6, [r3], #-1536	; 0xfffffa00
 4dc:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
 4e0:	6e006674 	mcrvs	6, 0, r6, cr0, cr4, {3}
 4e4:	74616765 	strbtvc	r6, [r1], #-1893	; 0xfffff89b
 4e8:	00657669 	rsbeq	r7, r5, r9, ror #12
 4ec:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
 4f0:	5f696261 	svcpl	0x00696261
 4f4:	64646164 	strbtvs	r6, [r4], #-356	; 0xfffffe9c
 4f8:	765f5f00 	ldrbvc	r5, [pc], -r0, lsl #30
 4fc:	696c5f61 	stmdbvs	ip!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
 500:	2e007473 	mcrcs	4, 0, r7, cr0, cr3, {3}
 504:	6f432f2e 	svcvs	0x00432f2e
 508:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
 50c:	702f6372 	eorvc	r6, pc, r2, ror r3	; <UNPREDICTABLE>
 510:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
 514:	00632e66 	rsbeq	r2, r3, r6, ror #28
 518:	6f746e5f 	svcvs	0x00746e5f
 51c:	6f665f61 	svcvs	0x00665f61
 520:	74616d72 	strbtvc	r6, [r1], #-3442	; 0xfffff28e
 524:	74665f00 	strbtvc	r5, [r6], #-3840	; 0xfffff100
 528:	5f00616f 	svcpl	0x0000616f
 52c:	706e7376 	rsbvc	r7, lr, r6, ror r3
 530:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
 534:	6f5f0066 	svcvs	0x005f0066
 538:	6e5f7475 	mrcvs	4, 2, r7, cr15, cr5, {3}
 53c:	006c6c75 	rsbeq	r6, ip, r5, ror ip
 540:	5f74756f 	svcpl	0x0074756f
 544:	5f746366 	svcpl	0x00746366
 548:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 54c:	615f5f00 	cmpvs	pc, r0, lsl #30
 550:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 554:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
 558:	00656770 	rsbeq	r6, r5, r0, ror r7
 55c:	6f746e5f 	svcvs	0x00746e5f
 560:	6f6c5f61 	svcvs	0x006c5f61
 564:	7300676e 	movwvc	r6, #1902	; 0x76e
 568:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
 56c:	5f006674 	svcpl	0x00006674
 570:	6165615f 	cmnvs	r5, pc, asr r1
 574:	755f6962 	ldrbvc	r6, [pc, #-2402]	; fffffc1a <__StackTop+0xc7effc1a>
 578:	00643269 	rsbeq	r3, r4, r9, ror #4
 57c:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
 580:	5f5f0073 	svcpl	0x005f0073
 584:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
 588:	63645f69 	cmnvs	r4, #420	; 0x1a4
 58c:	7467706d 	strbtvc	r7, [r7], #-109	; 0xffffff93
 590:	78616d00 	stmdavc	r1!, {r8, sl, fp, sp, lr}^
 594:	006e656c 	rsbeq	r6, lr, ip, ror #10
 598:	6f74615f 	svcvs	0x0074615f
 59c:	735f0069 	cmpvc	pc, #105	; 0x69
 5a0:	6c6e7274 	sfmvs	f7, 2, [lr], #-464	; 0xfffffe30
 5a4:	735f6e65 	cmpvc	pc, #1616	; 0x650
 5a8:	615f5f00 	cmpvs	pc, r0, lsl #30
 5ac:	5f5f0070 	svcpl	0x005f0070
 5b0:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
 5b4:	6d645f69 	stclvs	15, cr5, [r4, #-420]!	; 0xfffffe5c
 5b8:	5f006c75 	svcpl	0x00006c75
 5bc:	6c6f6f42 	stclvs	15, cr6, [pc], #-264	; 4bc <__STACKSEAL_SIZE+0x4bc>
 5c0:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff6c8 <__StackTop+0xc7eff6c8>
 5c4:	36746e69 	ldrbtcc	r6, [r4], -r9, ror #28
 5c8:	00745f34 	rsbseq	r5, r4, r4, lsr pc
 5cc:	5f73695f 	svcpl	0x0073695f
 5d0:	69676964 	stmdbvs	r7!, {r2, r5, r6, r8, fp, sp, lr}^
 5d4:	6f630074 	svcvs	0x00630074
 5d8:	5f00766e 	svcpl	0x0000766e
 5dc:	6165615f 	cmnvs	r5, pc, asr r1
 5e0:	645f6962 	ldrbvs	r6, [pc], #-2402	; 5e8 <__STACKSEAL_SIZE+0x5e8>
 5e4:	65706d63 	ldrbvs	r6, [r0, #-3427]!	; 0xfffff29d
 5e8:	5f5f0071 	svcpl	0x005f0071
 5ec:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
 5f0:	5f727470 	svcpl	0x00727470
 5f4:	68630074 	stmdavs	r3!, {r2, r4, r5, r6}^
 5f8:	63617261 	cmnvs	r1, #268435462	; 0x10000006
 5fc:	00726574 	rsbseq	r6, r2, r4, ror r5
 600:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
 604:	7665725f 			; <UNDEFINED> instruction: 0x7665725f
 608:	615f5f00 	cmpvs	pc, r0, lsl #30
 60c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 610:	7573645f 	ldrbvc	r6, [r3, #-1119]!	; 0xfffffba1
 614:	5f5f0062 	svcpl	0x005f0062
 618:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
 61c:	6c755f69 	ldclvs	15, cr5, [r5], #-420	; 0xfffffe5c
 620:	6d766964 			; <UNDEFINED> instruction: 0x6d766964
 624:	5f00646f 	svcpl	0x0000646f
 628:	6165615f 	cmnvs	r5, pc, asr r1
 62c:	645f6962 	ldrbvs	r6, [pc], #-2402	; 634 <__STACKSEAL_SIZE+0x634>
 630:	6c706d63 	ldclvs	13, cr6, [r0], #-396	; 0xfffffe74
 634:	756f0065 	strbvc	r0, [pc, #-101]!	; 5d7 <__STACKSEAL_SIZE+0x5d7>
 638:	63665f74 	cmnvs	r6, #116, 30	; 0x1d0
 63c:	72775f74 	rsbsvc	r5, r7, #116, 30	; 0x1d0
 640:	745f7061 	ldrbvc	r7, [pc], #-97	; 648 <__STACKSEAL_SIZE+0x648>
 644:	00657079 	rsbeq	r7, r5, r9, ror r0
 648:	63657270 	cmnvs	r5, #112, 4
 64c:	69776600 	ldmdbvs	r7!, {r9, sl, sp, lr}^
 650:	00687464 	rsbeq	r7, r8, r4, ror #8
 654:	6e675f5f 	mcrvs	15, 3, r5, cr7, cr15, {2}
 658:	765f6375 			; <UNDEFINED> instruction: 0x765f6375
 65c:	696c5f61 	stmdbvs	ip!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
 660:	5f007473 	svcpl	0x00007473
 664:	6165615f 	cmnvs	r5, pc, asr r1
 668:	645f6962 	ldrbvs	r6, [pc], #-2402	; 670 <__STACKSEAL_SIZE+0x670>
 66c:	6c706d63 	ldclvs	13, cr6, [r0], #-396	; 0xfffffe74
 670:	6e5f0074 	mrcvs	0, 2, r0, cr15, cr4, {3}
 674:	5f616f74 	svcpl	0x00616f74
 678:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 67c:	6e6f6c5f 	mcrvs	12, 3, r6, cr15, cr15, {2}
 680:	73690067 	cmnvc	r9, #103	; 0x67
 684:	006c6c5f 	rsbeq	r6, ip, pc, asr ip
 688:	63657270 	cmnvs	r5, #112, 4
 68c:	6f697369 	svcvs	0x00697369
 690:	6964006e 	stmdbvs	r4!, {r1, r2, r3, r5, r6}^
 694:	2e006666 	cfmadd32cs	mvax3, mvfx6, mvfx0, mvfx6
 698:	6f432f2e 	svcvs	0x00432f2e
 69c:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
 6a0:	752f6372 	strvc	r6, [pc, #-882]!	; 336 <__STACKSEAL_SIZE+0x336>
 6a4:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
 6a8:	74730063 	ldrbtvc	r0, [r3], #-99	; 0xffffff9d
 6ac:	676e6972 			; <UNDEFINED> instruction: 0x676e6972
 6b0:	72617500 	rsbvc	r7, r1, #0, 10
 6b4:	65725f74 	ldrbvs	r5, [r2, #-3956]!	; 0xfffff08c
 6b8:	67007663 	strvs	r7, [r0, -r3, ror #12]
 6bc:	68637465 	stmdavs	r3!, {r0, r2, r5, r6, sl, ip, sp, lr}^
 6c0:	69007261 	stmdbvs	r0, {r0, r5, r6, r9, ip, sp, lr}
 6c4:	7865646e 	stmdavc	r5!, {r1, r2, r3, r5, r6, sl, sp, lr}^
 6c8:	72617500 	rsbvc	r7, r1, #0, 10
 6cc:	65735f74 	ldrbvs	r5, [r3, #-3956]!	; 0xfffff08c
 6d0:	6f00646e 	svcvs	0x0000646e
 6d4:	646f6370 	strbtvs	r6, [pc], #-880	; 6dc <__STACKSEAL_SIZE+0x6dc>
 6d8:	73695f65 	cmnvc	r9, #404	; 0x194
 6dc:	5f6c625f 	svcpl	0x006c625f
 6e0:	625f726f 	subsvs	r7, pc, #-268435450	; 0xf0000006
 6e4:	7300786c 	movwvc	r7, #2156	; 0x86c
 6e8:	6b636174 	blvs	18d8cc0 <__RAM_SIZE+0x17d8cc0>
 6ec:	6172665f 	cmnvs	r2, pc, asr r6
 6f0:	745f656d 	ldrbvc	r6, [pc], #-1389	; 6f8 <__STACKSEAL_SIZE+0x6f8>
 6f4:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
 6f8:	4d5f7465 	cfldrdmi	mvd7, [pc, #-404]	; 56c <__STACKSEAL_SIZE+0x56c>
 6fc:	5f005053 	svcpl	0x00005053
 700:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
 704:	5f363174 	svcpl	0x00363174
 708:	735f0074 	cmpvc	pc, #116	; 0x74
 70c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
 710:	6166006b 	cmnvs	r6, fp, rrx
 714:	5f746c75 	svcpl	0x00746c75
 718:	706d7564 	rsbvc	r7, sp, r4, ror #10
 71c:	63706f5f 	cmnvs	r0, #380	; 0x17c
 720:	0065646f 	rsbeq	r6, r5, pc, ror #8
 724:	7473655f 	ldrbtvc	r6, [r3], #-1375	; 0xfffffaa1
 728:	006b6361 	rsbeq	r6, fp, r1, ror #6
 72c:	75736572 	ldrbvc	r6, [r3, #-1394]!	; 0xfffffa8e
 730:	6c00746c 	cfstrsvs	mvf7, [r0], {108}	; 0x6c
 734:	656b6e69 	strbvs	r6, [fp, #-3689]!	; 0xfffff197
 738:	74730072 	ldrbtvc	r0, [r3], #-114	; 0xffffff8e
 73c:	5f6b6361 	svcpl	0x006b6361
 740:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
 744:	616d5f65 	cmnvs	sp, r5, ror #30
 748:	6c61756e 	cfstr64vs	mvdx7, [r1], #-440	; 0xfffffe48
 74c:	6f00745f 	svcvs	0x0000745f
 750:	646f6370 	strbtvs	r6, [pc], #-880	; 758 <__STACKSEAL_SIZE+0x758>
 754:	6f003165 	svcvs	0x00003165
 758:	646f6370 	strbtvs	r6, [pc], #-880	; 760 <__STACKSEAL_SIZE+0x760>
 75c:	73003265 	movwvc	r3, #613	; 0x265
 760:	6b636174 	blvs	18d8d38 <__RAM_SIZE+0x17d8d38>
 764:	6172665f 	cmnvs	r2, pc, asr r6
 768:	6d5f656d 	cfldr64vs	mvdx6, [pc, #-436]	; 5bc <__STACKSEAL_SIZE+0x5bc>
 76c:	61756e61 	cmnvs	r5, r1, ror #28
 770:	7473006c 	ldrbtvc	r0, [r3], #-108	; 0xffffff94
 774:	5f6b6361 	svcpl	0x006b6361
 778:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
 77c:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
 780:	5f6b6361 	svcpl	0x006b6361
 784:	6d617266 	sfmvs	f7, 2, [r1, #-408]!	; 0xfffffe68
 788:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
 78c:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
 790:	2e00745f 	cfmvsrcs	mvf0, r7
 794:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
 798:	2f2e2e2f 	svccs	0x002e2e2f
 79c:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
 7a0:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
 7a4:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
 7a8:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
 7ac:	2f706d75 	svccs	0x00706d75
 7b0:	2f637273 	svccs	0x00637273
 7b4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 7b8:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
 7bc:	632e706d 			; <UNDEFINED> instruction: 0x632e706d
 7c0:	61747300 	cmnvs	r4, r0, lsl #6
 7c4:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
 7c8:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
 7cc:	6378655f 	cmnvs	r8, #398458880	; 0x17c00000
 7d0:	00747065 	rsbseq	r7, r4, r5, rrx
 7d4:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 7d8:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
 7dc:	685f706d 	ldmdavs	pc, {r0, r2, r3, r5, r6, ip, sp, lr}^	; <UNPREDICTABLE>
 7e0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
 7e4:	66007265 	strvs	r7, [r0], -r5, ror #4
 7e8:	6f635f64 	svcvs	0x00635f64
 7ec:	735f6564 	cmpvc	pc, #100, 10	; 0x19000000
 7f0:	6b636174 	blvs	18d8dc8 <__RAM_SIZE+0x17d8dc8>
 7f4:	6c75665f 	ldclvs	6, cr6, [r5], #-380	; 0xfffffe84
 7f8:	735f006c 	cmpvc	pc, #108	; 0x6c
 7fc:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 800:	5f646600 	svcpl	0x00646600
 804:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
 808:	6174735f 	cmnvs	r4, pc, asr r3
 80c:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
 810:	00657361 	rsbeq	r7, r5, r1, ror #6
 814:	6574655f 	ldrbvs	r6, [r4, #-1375]!	; 0xfffffaa1
 818:	73007478 	movwvc	r7, #1144	; 0x478
 81c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 820:	415f7075 	cmpmi	pc, r5, ror r0	; <UNPREDICTABLE>
 824:	4d434d52 	stclmi	13, cr4, [r3, #-328]	; 0xfffffeb8
 828:	732e3333 			; <UNDEFINED> instruction: 0x732e3333
 82c:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
 830:	20534120 	subscs	r4, r3, r0, lsr #2
 834:	36332e32 			; <UNDEFINED> instruction: 0x36332e32
 838:	2e00312e 	adfcssp	f3, f0, #0.5
 83c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
 840:	2f2e2e2f 	svccs	0x002e2e2f
 844:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
 848:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
 84c:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
 850:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
 854:	2f706d75 	svccs	0x00706d75
 858:	2f757063 	svccs	0x00757063
 85c:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
 860:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
 864:	662f3333 			; <UNDEFINED> instruction: 0x662f3333
 868:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 86c:	6363672d 	cmnvs	r3, #11796480	; 0xb40000
 870:	Address 0x00000870 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
}
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    printf("c = %d\r\n", c);
  10:	00000014 	andeq	r0, r0, r4, lsl r0
	...
}
  1c:	00000010 	andeq	r0, r0, r0, lsl r0
  20:	83080e41 	movwhi	r0, #36417	; 0x8e41
  24:	00018e02 	andeq	r8, r1, r2, lsl #28
  28:	00000014 	andeq	r0, r0, r4, lsl r0
	...
  34:	00000010 	andeq	r0, r0, r0, lsl r0
  38:	83080e41 	movwhi	r0, #36417	; 0x8e41
  3c:	00018e02 	andeq	r8, r1, r2, lsl #28
  40:	00000014 	andeq	r0, r0, r4, lsl r0
	...
  4c:	00000020 	andeq	r0, r0, r0, lsr #32
  50:	83080e41 	movwhi	r0, #36417	; 0x8e41
  54:	00018e02 	andeq	r8, r1, r2, lsl #28
  58:	0000001c 	andeq	r0, r0, ip, lsl r0
  5c:	00000000 	andeq	r0, r0, r0
  60:	10000800 	andne	r0, r0, r0, lsl #16
  64:	0000004c 	andeq	r0, r0, ip, asr #32
  68:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  6c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
  70:	180e4101 	stmdane	lr, {r0, r8, lr}
  74:	000c0e5f 	andeq	r0, ip, pc, asr lr
  78:	0000001c 	andeq	r0, r0, ip, lsl r0
  7c:	00000000 	andeq	r0, r0, r0
  80:	1000084c 	andne	r0, r0, ip, asr #16
  84:	00000068 	andeq	r0, r0, r8, rrx
  88:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  8c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
  90:	900e4101 	andls	r4, lr, r1, lsl #2
  94:	0c0e6902 			; <UNDEFINED> instruction: 0x0c0e6902
  98:	00000014 	andeq	r0, r0, r4, lsl r0
  9c:	00000000 	andeq	r0, r0, r0
  a0:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
  a4:	0000001c 	andeq	r0, r0, ip, lsl r0
  a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
  ac:	00018e02 	andeq	r8, r1, r2, lsl #28
  b0:	00000014 	andeq	r0, r0, r4, lsl r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	100008d0 	ldrdne	r0, [r0], -r0	; <UNPREDICTABLE>
  bc:	00000018 	andeq	r0, r0, r8, lsl r0
  c0:	83080e41 	movwhi	r0, #36417	; 0x8e41
  c4:	00018e02 	andeq	r8, r1, r2, lsl #28
  c8:	00000014 	andeq	r0, r0, r4, lsl r0
  cc:	00000000 	andeq	r0, r0, r0
  d0:	100008e8 	andne	r0, r0, r8, ror #17
  d4:	00000018 	andeq	r0, r0, r8, lsl r0
  d8:	83080e41 	movwhi	r0, #36417	; 0x8e41
  dc:	00018e02 	andeq	r8, r1, r2, lsl #28
  e0:	00000014 	andeq	r0, r0, r4, lsl r0
  e4:	00000000 	andeq	r0, r0, r0
  e8:	10000900 	andne	r0, r0, r0, lsl #18
  ec:	00000018 	andeq	r0, r0, r8, lsl r0
  f0:	83080e41 	movwhi	r0, #36417	; 0x8e41
  f4:	00018e02 	andeq	r8, r1, r2, lsl #28
  f8:	00000014 	andeq	r0, r0, r4, lsl r0
  fc:	00000000 	andeq	r0, r0, r0
 100:	10000918 	andne	r0, r0, r8, lsl r9
 104:	00000018 	andeq	r0, r0, r8, lsl r0
 108:	83080e41 	movwhi	r0, #36417	; 0x8e41
 10c:	00018e02 	andeq	r8, r1, r2, lsl #28
 110:	00000014 	andeq	r0, r0, r4, lsl r0
 114:	00000000 	andeq	r0, r0, r0
 118:	10000930 	andne	r0, r0, r0, lsr r9
 11c:	00000018 	andeq	r0, r0, r8, lsl r0
 120:	83080e41 	movwhi	r0, #36417	; 0x8e41
 124:	00018e02 	andeq	r8, r1, r2, lsl #28
 128:	00000014 	andeq	r0, r0, r4, lsl r0
 12c:	00000000 	andeq	r0, r0, r0
 130:	10000948 	andne	r0, r0, r8, asr #18
 134:	0000002c 	andeq	r0, r0, ip, lsr #32
 138:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 13c:	00018e02 	andeq	r8, r1, r2, lsl #28
 140:	0000000c 	andeq	r0, r0, ip
 144:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 148:	7c020001 	stcvc	0, cr0, [r2], {1}
 14c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 150:	0000000c 	andeq	r0, r0, ip
 154:	00000140 	andeq	r0, r0, r0, asr #2
 158:	00000000 	andeq	r0, r0, r0
 15c:	00000010 	andeq	r0, r0, r0, lsl r0
 160:	0000000c 	andeq	r0, r0, ip
 164:	00000140 	andeq	r0, r0, r0, asr #2
 168:	10000974 	andne	r0, r0, r4, ror r9
 16c:	0000002c 	andeq	r0, r0, ip, lsr #32
 170:	0000000c 	andeq	r0, r0, ip
 174:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 178:	7c020001 	stcvc	0, cr0, [r2], {1}
 17c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 180:	0000000c 	andeq	r0, r0, ip
 184:	00000170 	andeq	r0, r0, r0, ror r1
 188:	00000000 	andeq	r0, r0, r0
 18c:	00000008 	andeq	r0, r0, r8
 190:	0000000c 	andeq	r0, r0, ip
 194:	00000170 	andeq	r0, r0, r0, ror r1
 198:	100009a0 	andne	r0, r0, r0, lsr #19
 19c:	00000002 	andeq	r0, r0, r2
 1a0:	00000018 	andeq	r0, r0, r8, lsl r0
 1a4:	00000170 	andeq	r0, r0, r0, ror r1
 1a8:	00000000 	andeq	r0, r0, r0
 1ac:	0000000e 	andeq	r0, r0, lr
 1b0:	83080e42 	movwhi	r0, #36418	; 0x8e42
 1b4:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
 1b8:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
 1bc:	0000000c 	andeq	r0, r0, ip
 1c0:	00000170 	andeq	r0, r0, r0, ror r1
 1c4:	100009a2 	andne	r0, r0, r2, lsr #19
 1c8:	00000024 	andeq	r0, r0, r4, lsr #32
 1cc:	0000002c 	andeq	r0, r0, ip, lsr #32
 1d0:	00000170 	andeq	r0, r0, r0, ror r1
 1d4:	100009c6 	andne	r0, r0, r6, asr #19
 1d8:	0000007e 	andeq	r0, r0, lr, ror r0
 1dc:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 1e0:	86088509 	strhi	r8, [r8], -r9, lsl #10
 1e4:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 1e8:	8a048905 	bhi	122604 <__RAM_SIZE+0x22604>
 1ec:	8e028b03 	vmlahi.f64	d8, d2, d3
 1f0:	300e4101 	andcc	r4, lr, r1, lsl #2
 1f4:	240e0a6f 	strcs	r0, [lr], #-2671	; 0xfffff591
 1f8:	00000b42 	andeq	r0, r0, r2, asr #22
 1fc:	00000028 	andeq	r0, r0, r8, lsr #32
 200:	00000170 	andeq	r0, r0, r0, ror r1
 204:	10000a44 	andne	r0, r0, r4, asr #20
 208:	00000138 	andeq	r0, r0, r8, lsr r1
 20c:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
 210:	86068507 	strhi	r8, [r6], -r7, lsl #10
 214:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
 218:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
 21c:	300e4101 	andcc	r4, lr, r1, lsl #2
 220:	0e0a5b02 	vmlaeq.f64	d5, d10, d2
 224:	000b421c 	andeq	r4, fp, ip, lsl r2
 228:	00000020 	andeq	r0, r0, r0, lsr #32
 22c:	00000170 	andeq	r0, r0, r0, ror r1
 230:	10000b7c 	andne	r0, r0, ip, ror fp
 234:	00000094 	muleq	r0, r4, r0
 238:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 23c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 240:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 244:	580e4101 	stmdapl	lr, {r0, r8, lr}
 248:	140e4702 	strne	r4, [lr], #-1794	; 0xfffff8fe
 24c:	00000028 	andeq	r0, r0, r8, lsr #32
 250:	00000170 	andeq	r0, r0, r0, ror r1
 254:	10000c10 	andne	r0, r0, r0, lsl ip
 258:	000000c6 	andeq	r0, r0, r6, asr #1
 25c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 260:	86088509 	strhi	r8, [r8], -r9, lsl #10
 264:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 268:	8a048905 	bhi	122684 <__RAM_SIZE+0x22684>
 26c:	8e028b03 	vmlahi.f64	d8, d2, d3
 270:	780e4101 	stmdavc	lr, {r0, r8, lr}
 274:	240e5e02 	strcs	r5, [lr], #-3586	; 0xfffff1fe
 278:	0000003c 	andeq	r0, r0, ip, lsr r0
 27c:	00000170 	andeq	r0, r0, r0, ror r1
 280:	10000cd8 	ldrdne	r0, [r0], -r8
 284:	000003ea 	andeq	r0, r0, sl, ror #7
 288:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 28c:	86088509 	strhi	r8, [r8], -r9, lsl #10
 290:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 294:	8a048905 	bhi	1226b0 <__RAM_SIZE+0x226b0>
 298:	8e028b03 	vmlahi.f64	d8, d2, d3
 29c:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
 2a0:	050b5005 	streq	r5, [fp, #-5]
 2a4:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
 2a8:	01250370 			; <UNDEFINED> instruction: 0x01250370
 2ac:	422c0e0a 	eormi	r0, ip, #10, 28	; 0xa0
 2b0:	51065006 	tstpl	r6, r6
 2b4:	0b42240e 	bleq	10892f4 <__RAM_SIZE+0xf892f4>
 2b8:	00000040 	andeq	r0, r0, r0, asr #32
 2bc:	00000170 	andeq	r0, r0, r0, ror r1
 2c0:	100010c8 	andne	r1, r0, r8, asr #1
 2c4:	00000396 	muleq	r0, r6, r3
 2c8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 2cc:	86088509 	strhi	r8, [r8], -r9, lsl #10
 2d0:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 2d4:	8a048905 	bhi	1226f0 <__RAM_SIZE+0x226f0>
 2d8:	8e028b03 	vmlahi.f64	d8, d2, d3
 2dc:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
 2e0:	050b5005 	streq	r5, [fp, #-5]
 2e4:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
 2e8:	8d030180 	stfhis	f0, [r3, #-512]	; 0xfffffe00
 2ec:	2c0e0a01 			; <UNDEFINED> instruction: 0x2c0e0a01
 2f0:	06500642 	ldrbeq	r0, [r0], -r2, asr #12
 2f4:	42240e51 	eormi	r0, r4, #1296	; 0x510
 2f8:	0000000b 	andeq	r0, r0, fp
 2fc:	0000002c 	andeq	r0, r0, ip, lsr #32
 300:	00000170 	andeq	r0, r0, r0, ror r1
 304:	10001460 	andne	r1, r0, r0, ror #8
 308:	00000680 	andeq	r0, r0, r0, lsl #13
 30c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 310:	86088509 	strhi	r8, [r8], -r9, lsl #10
 314:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 318:	8a048905 	bhi	122734 <__RAM_SIZE+0x22734>
 31c:	8e028b03 	vmlahi.f64	d8, d2, d3
 320:	600e4101 	andvs	r4, lr, r1, lsl #2
 324:	0e033803 	cdpeq	8, 0, cr3, cr3, cr3, {0}
 328:	00000024 	andeq	r0, r0, r4, lsr #32
 32c:	00000014 	andeq	r0, r0, r4, lsl r0
 330:	00000170 	andeq	r0, r0, r0, ror r1
 334:	10001ae0 	andne	r1, r0, r0, ror #21
 338:	0000000c 	andeq	r0, r0, ip
 33c:	83080e43 	movwhi	r0, #36419	; 0x8e43
 340:	00018e02 	andeq	r8, r1, r2, lsl #28
 344:	00000030 	andeq	r0, r0, r0, lsr r0
 348:	00000170 	andeq	r0, r0, r0, ror r1
 34c:	10001aec 	andne	r1, r0, ip, ror #21
 350:	0000002c 	andeq	r0, r0, ip, lsr #32
 354:	80100e41 	andshi	r0, r0, r1, asr #28
 358:	82038104 	andhi	r8, r3, #4, 2
 35c:	41018302 	tstmi	r1, r2, lsl #6
 360:	058e140e 	streq	r1, [lr, #1038]	; 0x40e
 364:	4c280e41 	stcmi	14, cr0, [r8], #-260	; 0xfffffefc
 368:	ce42140e 	cdpgt	4, 4, cr1, cr2, cr14, {0}
 36c:	c341100e 	movtgt	r1, #4110	; 0x100e
 370:	0ec0c1c2 	acseqdm	f4, f2
 374:	00000000 	andeq	r0, r0, r0
 378:	0000002c 	andeq	r0, r0, ip, lsr #32
 37c:	00000170 	andeq	r0, r0, r0, ror r1
 380:	00000000 	andeq	r0, r0, r0
 384:	0000002c 	andeq	r0, r0, ip, lsr #32
 388:	810c0e41 	tsthi	ip, r1, asr #28
 38c:	83028203 	movwhi	r8, #8707	; 0x2203
 390:	100e4101 	andne	r4, lr, r1, lsl #2
 394:	0e41048e 	cdpeq	4, 4, cr0, cr1, cr14, {4}
 398:	100e4c20 	andne	r4, lr, r0, lsr #24
 39c:	0c0ece42 	stceq	14, cr12, [lr], {66}	; 0x42
 3a0:	c1c2c341 	bicgt	ip, r2, r1, asr #6
 3a4:	0000000e 	andeq	r0, r0, lr
 3a8:	0000002c 	andeq	r0, r0, ip, lsr #32
 3ac:	00000170 	andeq	r0, r0, r0, ror r1
 3b0:	00000000 	andeq	r0, r0, r0
 3b4:	00000028 	andeq	r0, r0, r8, lsr #32
 3b8:	82080e41 	andhi	r0, r8, #1040	; 0x410
 3bc:	41018302 	tstmi	r1, r2, lsl #6
 3c0:	0484100e 	streq	r1, [r4], #14
 3c4:	0e41038e 	cdpeq	3, 4, cr0, cr1, cr14, {4}
 3c8:	100e4b20 	andne	r4, lr, r0, lsr #22
 3cc:	0ec4ce42 	cdpeq	14, 12, cr12, cr4, cr2, {2}
 3d0:	c2c34108 	sbcgt	r4, r3, #8, 2
 3d4:	0000000e 	andeq	r0, r0, lr
 3d8:	00000018 	andeq	r0, r0, r8, lsl r0
 3dc:	00000170 	andeq	r0, r0, r0, ror r1
 3e0:	00000000 	andeq	r0, r0, r0
 3e4:	00000020 	andeq	r0, r0, r0, lsr #32
 3e8:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
 3ec:	180e4101 	stmdane	lr, {r0, r8, lr}
 3f0:	00040e49 	andeq	r0, r4, r9, asr #28
 3f4:	00000018 	andeq	r0, r0, r8, lsl r0
 3f8:	00000170 	andeq	r0, r0, r0, ror r1
 3fc:	00000000 	andeq	r0, r0, r0
 400:	0000001c 	andeq	r0, r0, ip, lsl r0
 404:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
 408:	100e4101 	andne	r4, lr, r1, lsl #2
 40c:	00040e48 	andeq	r0, r4, r8, asr #28
 410:	00000028 	andeq	r0, r0, r8, lsr #32
 414:	00000170 	andeq	r0, r0, r0, ror r1
 418:	00000000 	andeq	r0, r0, r0
 41c:	00000030 	andeq	r0, r0, r0, lsr r0
 420:	82080e41 	andhi	r0, r8, #1040	; 0x410
 424:	41018302 	tstmi	r1, r2, lsl #6
 428:	038e0c0e 	orreq	r0, lr, #3584	; 0xe00
 42c:	4e280e41 	cdpmi	14, 2, cr0, cr8, cr1, {2}
 430:	ce420c0e 	cdpgt	12, 4, cr0, cr2, cr14, {0}
 434:	c341080e 	movtgt	r0, #6158	; 0x180e
 438:	00000ec2 	andeq	r0, r0, r2, asr #29
 43c:	0000000c 	andeq	r0, r0, ip
 440:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 444:	7c020001 	stcvc	0, cr0, [r2], {1}
 448:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 44c:	0000000c 	andeq	r0, r0, ip
 450:	0000043c 	andeq	r0, r0, ip, lsr r4
 454:	10001b18 	andne	r1, r0, r8, lsl fp
 458:	00000014 	andeq	r0, r0, r4, lsl r0
 45c:	0000000c 	andeq	r0, r0, ip
 460:	0000043c 	andeq	r0, r0, ip, lsr r4
 464:	00000000 	andeq	r0, r0, r0
 468:	00000014 	andeq	r0, r0, r4, lsl r0
 46c:	00000018 	andeq	r0, r0, r8, lsl r0
 470:	0000043c 	andeq	r0, r0, ip, lsr r4
 474:	10001b2c 	andne	r1, r0, ip, lsr #22
 478:	0000001e 	andeq	r0, r0, lr, lsl r0
 47c:	83100e41 	tsthi	r0, #1040	; 0x410
 480:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 484:	00018e02 	andeq	r8, r1, r2, lsl #28
 488:	0000000c 	andeq	r0, r0, ip
 48c:	0000043c 	andeq	r0, r0, ip, lsr r4
 490:	10001b4c 	andne	r1, r0, ip, asr #22
 494:	00000024 	andeq	r0, r0, r4, lsr #32
 498:	00000014 	andeq	r0, r0, r4, lsl r0
 49c:	0000043c 	andeq	r0, r0, ip, lsr r4
 4a0:	00000000 	andeq	r0, r0, r0
 4a4:	00000008 	andeq	r0, r0, r8
 4a8:	83080e41 	movwhi	r0, #36417	; 0x8e41
 4ac:	00018e02 	andeq	r8, r1, r2, lsl #28
 4b0:	00000018 	andeq	r0, r0, r8, lsl r0
 4b4:	0000043c 	andeq	r0, r0, ip, lsr r4
 4b8:	00000000 	andeq	r0, r0, r0
 4bc:	00000020 	andeq	r0, r0, r0, lsr #32
 4c0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 4c4:	86038504 	strhi	r8, [r3], -r4, lsl #10
 4c8:	00018e02 	andeq	r8, r1, r2, lsl #28
 4cc:	0000000c 	andeq	r0, r0, ip
 4d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 4d4:	7c020001 	stcvc	0, cr0, [r2], {1}
 4d8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 4dc:	00000014 	andeq	r0, r0, r4, lsl r0
 4e0:	000004cc 	andeq	r0, r0, ip, asr #9
 4e4:	10001b70 	andne	r1, r0, r0, ror fp
 4e8:	0000002c 	andeq	r0, r0, ip, lsr #32
 4ec:	54080e41 	strpl	r0, [r8], #-3649	; 0xfffff1bf
 4f0:	0000000e 	andeq	r0, r0, lr
 4f4:	0000000c 	andeq	r0, r0, ip
 4f8:	000004cc 	andeq	r0, r0, ip, asr #9
 4fc:	10001b9c 	mulne	r0, ip, fp
 500:	00000036 	andeq	r0, r0, r6, lsr r0
 504:	00000014 	andeq	r0, r0, r4, lsl r0
 508:	000004cc 	andeq	r0, r0, ip, asr #9
 50c:	10001bd4 	ldrdne	r1, [r0], -r4
 510:	00000050 	andeq	r0, r0, r0, asr r0
 514:	83080e41 	movwhi	r0, #36417	; 0x8e41
 518:	00018e02 	andeq	r8, r1, r2, lsl #28
 51c:	00000020 	andeq	r0, r0, r0, lsr #32
 520:	000004cc 	andeq	r0, r0, ip, asr #9
 524:	10001c24 	andne	r1, r0, r4, lsr #24
 528:	0000007c 	andeq	r0, r0, ip, ror r0
 52c:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
 530:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
 534:	87058606 	strhi	r8, [r5, -r6, lsl #12]
 538:	89038804 	stmdbhi	r3, {r2, fp, pc}
 53c:	00018e02 	andeq	r8, r1, r2, lsl #28
 540:	0000001c 	andeq	r0, r0, ip, lsl r0
 544:	000004cc 	andeq	r0, r0, ip, asr #9
 548:	10001ca0 	andne	r1, r0, r0, lsr #25
 54c:	0000018c 	andeq	r0, r0, ip, lsl #3
 550:	83180e41 	tsthi	r8, #1040	; 0x410
 554:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 558:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 55c:	00018e02 	andeq	r8, r1, r2, lsl #28
 560:	0000000c 	andeq	r0, r0, ip
 564:	000004cc 	andeq	r0, r0, ip, asr #9
 568:	10001e2c 	andne	r1, r0, ip, lsr #28
 56c:	00000006 	andeq	r0, r0, r6
 570:	0000000c 	andeq	r0, r0, ip
 574:	000004cc 	andeq	r0, r0, ip, asr #9
 578:	10001e34 	andne	r1, r0, r4, lsr lr
 57c:	00000008 	andeq	r0, r0, r8
 580:	0000000c 	andeq	r0, r0, ip
 584:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 588:	7c020001 	stcvc	0, cr0, [r2], {1}
 58c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 590:	0000001c 	andeq	r0, r0, ip, lsl r0
 594:	00000580 	andeq	r0, r0, r0, lsl #11
 598:	10001ef0 	strdne	r1, [r0], -r0
 59c:	00000282 	andeq	r0, r0, r2, lsl #5
 5a0:	0c0e470a 	stceq	7, cr4, [lr], {10}
 5a4:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 5a8:	3a03018e 	bcc	c0be8 <__HEAP_SIZE+0xbfbe8>
 5ac:	00000b01 	andeq	r0, r0, r1, lsl #22
 5b0:	00000018 	andeq	r0, r0, r8, lsl r0
 5b4:	00000580 	andeq	r0, r0, r0, lsl #11
 5b8:	10002174 	andne	r2, r0, r4, ror r1
 5bc:	0000001e 	andeq	r0, r0, lr, lsl r0
 5c0:	0c0e460a 	stceq	6, cr4, [lr], {10}
 5c4:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 5c8:	0b49018e 	bleq	1240c08 <__RAM_SIZE+0x1140c08>
 5cc:	00000018 	andeq	r0, r0, r8, lsl r0
 5d0:	00000580 	andeq	r0, r0, r0, lsl #11
 5d4:	10002194 	mulne	r0, r4, r1
 5d8:	00000022 	andeq	r0, r0, r2, lsr #32
 5dc:	0c0e460a 	stceq	6, cr4, [lr], {10}
 5e0:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 5e4:	0b4b018e 	bleq	12c0c24 <__RAM_SIZE+0x11c0c24>
 5e8:	00000018 	andeq	r0, r0, r8, lsl r0
 5ec:	00000580 	andeq	r0, r0, r0, lsl #11
 5f0:	100021b8 			; <UNDEFINED> instruction: 0x100021b8
 5f4:	00000042 	andeq	r0, r0, r2, asr #32
 5f8:	0c0e5a0a 			; <UNDEFINED> instruction: 0x0c0e5a0a
 5fc:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 600:	0b47018e 	bleq	11c0c40 <__RAM_SIZE+0x10c0c40>
 604:	00000024 	andeq	r0, r0, r4, lsr #32
 608:	00000580 	andeq	r0, r0, r0, lsl #11
 60c:	100021fc 	strdne	r2, [r0], -ip
 610:	0000006a 	andeq	r0, r0, sl, rrx
 614:	0e450a0a 	vmlaeq.f32	s1, s10, s20
 618:	8503840c 	strhi	r8, [r3, #-1036]	; 0xfffffbf4
 61c:	43018e02 	movwmi	r8, #7682	; 0x1e02
 620:	0c0e450b 	cfstr32eq	mvfx4, [lr], {11}
 624:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
 628:	0b68018e 	bleq	1a00c68 <__RAM_SIZE+0x1900c68>
 62c:	0000000c 	andeq	r0, r0, ip
 630:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 634:	7c020001 	stcvc	0, cr0, [r2], {1}
 638:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 63c:	0000001c 	andeq	r0, r0, ip, lsl r0
 640:	0000062c 	andeq	r0, r0, ip, lsr #12
 644:	10002268 	andne	r2, r0, r8, ror #4
 648:	00000254 	andeq	r0, r0, r4, asr r2
 64c:	100e410a 	andne	r4, lr, sl, lsl #2
 650:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
 654:	018e0286 	orreq	r0, lr, r6, lsl #5
 658:	0b012903 	bleq	4aa6c <__HEAP_SIZE+0x49a6c>
 65c:	0000001c 	andeq	r0, r0, ip, lsl r0
 660:	0000062c 	andeq	r0, r0, ip, lsr #12
 664:	100024bc 			; <UNDEFINED> instruction: 0x100024bc
 668:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 66c:	100e410a 	andne	r4, lr, sl, lsl #2
 670:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
 674:	018e0286 	orreq	r0, lr, r6, lsl #5
 678:	000be702 	andeq	lr, fp, r2, lsl #14
 67c:	0000000c 	andeq	r0, r0, ip
 680:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 684:	7c020001 	stcvc	0, cr0, [r2], {1}
 688:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 68c:	0000001c 	andeq	r0, r0, ip, lsl r0
 690:	0000067c 	andeq	r0, r0, ip, ror r6
 694:	1000268c 	andne	r2, r0, ip, lsl #13
 698:	0000008a 	andeq	r0, r0, sl, lsl #1
 69c:	040e4c0a 	streq	r4, [lr], #-3082	; 0xfffff3f6
 6a0:	0e410a4a 	vmlseq.f32	s1, s2, s20
 6a4:	520b5b00 	andpl	r5, fp, #0, 22
 6a8:	0b41000e 	bleq	10406e8 <__RAM_SIZE+0xf406e8>
 6ac:	00000018 	andeq	r0, r0, r8, lsl r0
 6b0:	0000067c 	andeq	r0, r0, ip, ror r6
 6b4:	10002718 	andne	r2, r0, r8, lsl r7
 6b8:	00000020 	andeq	r0, r0, r0, lsr #32
 6bc:	080e490a 	stmdaeq	lr, {r1, r3, r8, fp, lr}
 6c0:	018e0280 	orreq	r0, lr, r0, lsl #5
 6c4:	00000b47 	andeq	r0, r0, r7, asr #22
 6c8:	00000014 	andeq	r0, r0, r4, lsl r0
 6cc:	0000067c 	andeq	r0, r0, ip, ror r6
 6d0:	10002738 	andne	r2, r0, r8, lsr r7
 6d4:	00000012 	andeq	r0, r0, r2, lsl r0
 6d8:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
 6dc:	0b47028e 	bleq	11c111c <__RAM_SIZE+0x10c111c>
 6e0:	00000014 	andeq	r0, r0, r4, lsl r0
 6e4:	0000067c 	andeq	r0, r0, ip, ror r6
 6e8:	1000274c 	andne	r2, r0, ip, asr #14
 6ec:	00000012 	andeq	r0, r0, r2, lsl r0
 6f0:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
 6f4:	0b47028e 	bleq	11c1134 <__RAM_SIZE+0x10c1134>
 6f8:	00000014 	andeq	r0, r0, r4, lsl r0
 6fc:	0000067c 	andeq	r0, r0, ip, ror r6
 700:	10002760 	andne	r2, r0, r0, ror #14
 704:	00000012 	andeq	r0, r0, r2, lsl r0
 708:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
 70c:	0b47028e 	bleq	11c114c <__RAM_SIZE+0x10c114c>
 710:	00000014 	andeq	r0, r0, r4, lsl r0
 714:	0000067c 	andeq	r0, r0, ip, ror r6
 718:	10002774 	andne	r2, r0, r4, ror r7
 71c:	00000012 	andeq	r0, r0, r2, lsl r0
 720:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
 724:	0b47028e 	bleq	11c1164 <__RAM_SIZE+0x10c1164>
 728:	00000014 	andeq	r0, r0, r4, lsl r0
 72c:	0000067c 	andeq	r0, r0, ip, ror r6
 730:	10002788 	andne	r2, r0, r8, lsl #15
 734:	00000012 	andeq	r0, r0, r2, lsl r0
 738:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
 73c:	0b47028e 	bleq	11c117c <__RAM_SIZE+0x10c117c>
 740:	0000000c 	andeq	r0, r0, ip
 744:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 748:	7c020001 	stcvc	0, cr0, [r2], {1}
 74c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 750:	00000010 	andeq	r0, r0, r0, lsl r0
 754:	00000740 	andeq	r0, r0, r0, asr #14
 758:	1000279c 	mulne	r0, ip, r7
 75c:	0000004e 	andeq	r0, r0, lr, asr #32
 760:	000b670a 	andeq	r6, fp, sl, lsl #14
 764:	0000000c 	andeq	r0, r0, ip
 768:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 76c:	7c020001 	stcvc	0, cr0, [r2], {1}
 770:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 774:	00000010 	andeq	r0, r0, r0, lsl r0
 778:	00000764 	andeq	r0, r0, r4, ror #14
 77c:	100027ec 	andne	r2, r0, ip, ror #15
 780:	00000040 	andeq	r0, r0, r0, asr #32
 784:	000b600a 	andeq	r6, fp, sl
 788:	0000000c 	andeq	r0, r0, ip
 78c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 790:	7c020001 	stcvc	0, cr0, [r2], {1}
 794:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 798:	00000018 	andeq	r0, r0, r8, lsl r0
 79c:	00000788 	andeq	r0, r0, r8, lsl #15
 7a0:	1000282c 	andne	r2, r0, ip, lsr #16
 7a4:	00000030 	andeq	r0, r0, r0, lsr r0
 7a8:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
 7ac:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
 7b0:	00000010 	andeq	r0, r0, r0, lsl r0
 7b4:	0000000c 	andeq	r0, r0, ip
 7b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 7bc:	7c020001 	stcvc	0, cr0, [r2], {1}
 7c0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 7c4:	00000024 	andeq	r0, r0, r4, lsr #32
 7c8:	000007b4 			; <UNDEFINED> instruction: 0x000007b4
 7cc:	1000285c 	andne	r2, r0, ip, asr r8
 7d0:	000002ec 	andeq	r0, r0, ip, ror #5
 7d4:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 7d8:	86088509 	strhi	r8, [r8], -r9, lsl #10
 7dc:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 7e0:	8a048905 	bhi	122bfc <__RAM_SIZE+0x22bfc>
 7e4:	8e028b03 	vmlahi.f64	d8, d2, d3
 7e8:	00000001 	andeq	r0, r0, r1
 7ec:	0000000c 	andeq	r0, r0, ip
 7f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 7f4:	7c020001 	stcvc	0, cr0, [r2], {1}
 7f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 7fc:	0000000c 	andeq	r0, r0, ip
 800:	000007ec 	andeq	r0, r0, ip, ror #15
 804:	10002b48 	andne	r2, r0, r8, asr #22
 808:	00000012 	andeq	r0, r0, r2, lsl r0
 80c:	00000020 	andeq	r0, r0, r0, lsr #32
 810:	000007ec 	andeq	r0, r0, ip, ror #15
 814:	10002b5c 	andne	r2, r0, ip, asr fp
 818:	00000060 	andeq	r0, r0, r0, rrx
 81c:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
 820:	86078508 	strhi	r8, [r7], -r8, lsl #10
 824:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
 828:	8a038904 	bhi	e2c40 <__HEAP_SIZE+0xe1c40>
 82c:	00018e02 	andeq	r8, r1, r2, lsl #28
 830:	0000000c 	andeq	r0, r0, ip
 834:	000007ec 	andeq	r0, r0, ip, ror #15
 838:	10002bbc 			; <UNDEFINED> instruction: 0x10002bbc
 83c:	00000028 	andeq	r0, r0, r8, lsr #32
 840:	0000002c 	andeq	r0, r0, ip, lsr #32
 844:	000007ec 	andeq	r0, r0, ip, ror #15
 848:	10002be4 	andne	r2, r0, r4, ror #23
 84c:	0000009c 	muleq	r0, ip, r0
 850:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
 854:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
 858:	180e4201 	stmdane	lr, {r0, r9, lr}
 85c:	0c0e0a65 			; <UNDEFINED> instruction: 0x0c0e0a65
 860:	0a440b41 	beq	110356c <__RAM_SIZE+0x100356c>
 864:	0b410c0e 	bleq	10438a4 <__RAM_SIZE+0xf438a4>
 868:	0c0e0a50 			; <UNDEFINED> instruction: 0x0c0e0a50
 86c:	00000b41 	andeq	r0, r0, r1, asr #22
 870:	00000018 	andeq	r0, r0, r8, lsl r0
 874:	000007ec 	andeq	r0, r0, ip, ror #15
 878:	10002c80 	andne	r2, r0, r0, lsl #25
 87c:	00000058 	andeq	r0, r0, r8, asr r0
 880:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
 884:	67018e02 	strvs	r8, [r1, -r2, lsl #28]
 888:	000ec4ce 	andeq	ip, lr, lr, asr #9
 88c:	0000000c 	andeq	r0, r0, ip
 890:	000007ec 	andeq	r0, r0, ip, ror #15
 894:	10002cd8 	ldrdne	r2, [r0], -r8
 898:	00000004 	andeq	r0, r0, r4
 89c:	0000000c 	andeq	r0, r0, ip
 8a0:	000007ec 	andeq	r0, r0, ip, ror #15
 8a4:	10002cdc 	ldrdne	r2, [r0], -ip
 8a8:	0000000a 	andeq	r0, r0, sl
 8ac:	0000000c 	andeq	r0, r0, ip
 8b0:	000007ec 	andeq	r0, r0, ip, ror #15
 8b4:	10002ce8 	andne	r2, r0, r8, ror #25
 8b8:	00000002 	andeq	r0, r0, r2
 8bc:	00000018 	andeq	r0, r0, r8, lsl r0
 8c0:	000007ec 	andeq	r0, r0, ip, ror #15
 8c4:	10002cec 	andne	r2, r0, ip, ror #25
 8c8:	0000003e 	andeq	r0, r0, lr, lsr r0
 8cc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 8d0:	86038504 	strhi	r8, [r3], -r4, lsl #10
 8d4:	00018e02 	andeq	r8, r1, r2, lsl #28
 8d8:	0000002c 	andeq	r0, r0, ip, lsr #32
 8dc:	000007ec 	andeq	r0, r0, ip, ror #15
 8e0:	10002d2c 	andne	r2, r0, ip, lsr #26
 8e4:	000000da 	ldrdeq	r0, [r0], -sl
 8e8:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
 8ec:	86078508 	strhi	r8, [r7], -r8, lsl #10
 8f0:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
 8f4:	8a038904 	bhi	e2d0c <__HEAP_SIZE+0xe1d0c>
 8f8:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
 8fc:	0207f00e 	andeq	pc, r7, #14
 900:	200e0a5b 	andcs	r0, lr, fp, asr sl
 904:	00000b42 	andeq	r0, r0, r2, asr #22
 908:	0000000c 	andeq	r0, r0, ip
 90c:	000007ec 	andeq	r0, r0, ip, ror #15
 910:	10002e08 	andne	r2, r0, r8, lsl #28
 914:	00000004 	andeq	r0, r0, r4
 918:	00000024 	andeq	r0, r0, r4, lsr #32
 91c:	000007ec 	andeq	r0, r0, ip, ror #15
 920:	10002e0c 	andne	r2, r0, ip, lsl #28
 924:	00000066 	andeq	r0, r0, r6, rrx
 928:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 92c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 930:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 934:	f80e4201 			; <UNDEFINED> instruction: 0xf80e4201
 938:	0e0a6603 	cfmadd32eq	mvax0, mvfx6, mvfx10, mvfx3
 93c:	000b4114 	andeq	r4, fp, r4, lsl r1
 940:	00000018 	andeq	r0, r0, r8, lsl r0
 944:	000007ec 	andeq	r0, r0, ip, ror #15
 948:	10002e74 	andne	r2, r0, r4, ror lr
 94c:	00000012 	andeq	r0, r0, r2, lsl r0
 950:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
 954:	0ec44701 	cdpeq	7, 12, cr4, cr4, cr1, {0}
 958:	00000000 	andeq	r0, r0, r0
 95c:	00000018 	andeq	r0, r0, r8, lsl r0
 960:	000007ec 	andeq	r0, r0, ip, ror #15
 964:	10002e88 	andne	r2, r0, r8, lsl #29
 968:	00000044 	andeq	r0, r0, r4, asr #32
 96c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 970:	86038504 	strhi	r8, [r3], -r4, lsl #10
 974:	00018e02 	andeq	r8, r1, r2, lsl #28
 978:	0000000c 	andeq	r0, r0, ip
 97c:	000007ec 	andeq	r0, r0, ip, ror #15
 980:	10002ecc 	andne	r2, r0, ip, asr #29
 984:	00000012 	andeq	r0, r0, r2, lsl r0
 988:	0000000c 	andeq	r0, r0, ip
 98c:	000007ec 	andeq	r0, r0, ip, ror #15
 990:	10002ee0 	andne	r2, r0, r0, ror #29
 994:	00000002 	andeq	r0, r0, r2
 998:	0000000c 	andeq	r0, r0, ip
 99c:	000007ec 	andeq	r0, r0, ip, ror #15
 9a0:	10002ee4 	andne	r2, r0, r4, ror #29
 9a4:	0000000c 	andeq	r0, r0, ip
 9a8:	0000000c 	andeq	r0, r0, ip
 9ac:	000007ec 	andeq	r0, r0, ip, ror #15
 9b0:	10002ef0 	strdne	r2, [r0], -r0
 9b4:	00000034 	andeq	r0, r0, r4, lsr r0
 9b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 9bc:	000007ec 	andeq	r0, r0, ip, ror #15
 9c0:	10002f24 	andne	r2, r0, r4, lsr #30
 9c4:	00000018 	andeq	r0, r0, r8, lsl r0
 9c8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 9cc:	41018e02 	tstmi	r1, r2, lsl #28
 9d0:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
 9d4:	00000008 	andeq	r0, r0, r8
 9d8:	0000000c 	andeq	r0, r0, ip
 9dc:	000007ec 	andeq	r0, r0, ip, ror #15
 9e0:	10002f3c 	andne	r2, r0, ip, lsr pc
 9e4:	00000034 	andeq	r0, r0, r4, lsr r0
 9e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 9ec:	000007ec 	andeq	r0, r0, ip, ror #15
 9f0:	10002f70 	andne	r2, r0, r0, ror pc
 9f4:	00000018 	andeq	r0, r0, r8, lsl r0
 9f8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 9fc:	41018e02 	tstmi	r1, r2, lsl #28
 a00:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
 a04:	00000008 	andeq	r0, r0, r8
 a08:	00000020 	andeq	r0, r0, r0, lsr #32
 a0c:	000007ec 	andeq	r0, r0, ip, ror #15
 a10:	10002f88 	andne	r2, r0, r8, lsl #31
 a14:	0000007c 	andeq	r0, r0, ip, ror r0
 a18:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 a1c:	86048505 	strhi	r8, [r4], -r5, lsl #10
 a20:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 a24:	d00e4301 	andle	r4, lr, r1, lsl #6
 a28:	140e7904 	strne	r7, [lr], #-2308	; 0xfffff6fc
 a2c:	00000030 	andeq	r0, r0, r0, lsr r0
 a30:	000007ec 	andeq	r0, r0, ip, ror #15
 a34:	10003004 	andne	r3, r0, r4
 a38:	000002c8 	andeq	r0, r0, r8, asr #5
 a3c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
 a40:	86088509 	strhi	r8, [r8], -r9, lsl #10
 a44:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
 a48:	8a048905 	bhi	122e64 <__RAM_SIZE+0x22e64>
 a4c:	8e028b03 	vmlahi.f64	d8, d2, d3
 a50:	480e4201 	stmdami	lr, {r0, r9, lr}
 a54:	240e0a64 	strcs	r0, [lr], #-2660	; 0xfffff59c
 a58:	0a710b42 	beq	1c43768 <__RAM_SIZE+0x1b43768>
 a5c:	0b42240e 	bleq	1089a9c <__RAM_SIZE+0xf89a9c>
 a60:	0000000c 	andeq	r0, r0, ip
 a64:	000007ec 	andeq	r0, r0, ip, ror #15
 a68:	100032cc 	andne	r3, r0, ip, asr #5
 a6c:	00000004 	andeq	r0, r0, r4
 a70:	0000000c 	andeq	r0, r0, ip
 a74:	000007ec 	andeq	r0, r0, ip, ror #15
 a78:	100032d0 	ldrdne	r3, [r0], -r0
 a7c:	00000004 	andeq	r0, r0, r4
 a80:	0000000c 	andeq	r0, r0, ip
 a84:	000007ec 	andeq	r0, r0, ip, ror #15
 a88:	100032d4 	ldrdne	r3, [r0], -r4
 a8c:	00000004 	andeq	r0, r0, r4
 a90:	0000003c 	andeq	r0, r0, ip, lsr r0
 a94:	000007ec 	andeq	r0, r0, ip, ror #15
 a98:	100032d8 	ldrdne	r3, [r0], -r8
 a9c:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
 aa0:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
 aa4:	86068507 	strhi	r8, [r6], -r7, lsl #10
 aa8:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
 aac:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
 ab0:	a80e4201 	stmdage	lr, {r0, r9, lr}
 ab4:	0e0a7102 	adfeqe	f7, f2, f2
 ab8:	6b0b421c 	blvs	2d1330 <__RAM_SIZE+0x1d1330>
 abc:	421c0e0a 	andsmi	r0, ip, #10, 28	; 0xa0
 ac0:	0a48020b 	beq	12012f4 <__RAM_SIZE+0x11012f4>
 ac4:	0b421c0e 	bleq	1087b04 <__RAM_SIZE+0xf87b04>
 ac8:	1c0e0a5f 			; <UNDEFINED> instruction: 0x1c0e0a5f
 acc:	00000b42 	andeq	r0, r0, r2, asr #22
 ad0:	0000000c 	andeq	r0, r0, ip
 ad4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 ad8:	7c020001 	stcvc	0, cr0, [r2], {1}
 adc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 ae0:	00000018 	andeq	r0, r0, r8, lsl r0
 ae4:	00000ad0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 ae8:	10003738 	andne	r3, r0, r8, lsr r7
 aec:	0000003c 	andeq	r0, r0, ip, lsr r0
 af0:	84040e4a 	strhi	r0, [r4], #-3658	; 0xfffff1b6
 af4:	0ec44901 	vdiveq.f16	s9, s8, s2	; <UNPREDICTABLE>
 af8:	00000000 	andeq	r0, r0, r0
 afc:	0000001c 	andeq	r0, r0, ip, lsl r0
 b00:	00000ad0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 b04:	10003774 	andne	r3, r0, r4, ror r7
 b08:	00000018 	andeq	r0, r0, r8, lsl r0
 b0c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
 b10:	41018e02 	tstmi	r1, r2, lsl #28
 b14:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
 b18:	00000008 	andeq	r0, r0, r8
 b1c:	0000000c 	andeq	r0, r0, ip
 b20:	00000ad0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 b24:	1000378c 	andne	r3, r0, ip, lsl #15
 b28:	00000002 	andeq	r0, r0, r2
 b2c:	00000028 	andeq	r0, r0, r8, lsr #32
 b30:	00000ad0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 b34:	10003790 	mulne	r0, r0, r7
 b38:	000002ca 	andeq	r0, r0, sl, asr #5
 b3c:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
 b40:	86068507 	strhi	r8, [r6], -r7, lsl #10
 b44:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
 b48:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
 b4c:	300e4301 	andcc	r4, lr, r1, lsl #6
 b50:	1c0e0a6a 			; <UNDEFINED> instruction: 0x1c0e0a6a
 b54:	00000b42 	andeq	r0, r0, r2, asr #22
 b58:	00000018 	andeq	r0, r0, r8, lsl r0
 b5c:	00000ad0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 b60:	10003a5c 	andne	r3, r0, ip, asr sl
 b64:	00000030 	andeq	r0, r0, r0, lsr r0
 b68:	8e040e49 	cdphi	14, 0, cr0, cr4, cr9, {2}
 b6c:	180e4101 	stmdane	lr, {r0, r8, lr}
 b70:	00040e4c 	andeq	r0, r4, ip, asr #28
 b74:	00000014 	andeq	r0, r0, r4, lsl r0
 b78:	00000ad0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 b7c:	10003a8c 	andne	r3, r0, ip, lsl #21
 b80:	0000000a 	andeq	r0, r0, sl
 b84:	83080e41 	movwhi	r0, #36417	; 0x8e41
 b88:	00018e02 	andeq	r8, r1, r2, lsl #28
 b8c:	00000014 	andeq	r0, r0, r4, lsl r0
 b90:	00000ad0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 b94:	10003a98 	mulne	r0, r8, sl
 b98:	00000012 	andeq	r0, r0, r2, lsl r0
 b9c:	83080e41 	movwhi	r0, #36417	; 0x8e41
 ba0:	00018e02 	andeq	r8, r1, r2, lsl #28
 ba4:	00000014 	andeq	r0, r0, r4, lsl r0
 ba8:	00000ad0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 bac:	00000000 	andeq	r0, r0, r0
 bb0:	00000006 	andeq	r0, r0, r6
 bb4:	83080e41 	movwhi	r0, #36417	; 0x8e41
 bb8:	00018e02 	andeq	r8, r1, r2, lsl #28
 bbc:	00000014 	andeq	r0, r0, r4, lsl r0
 bc0:	00000ad0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 bc4:	00000000 	andeq	r0, r0, r0
 bc8:	00000006 	andeq	r0, r0, r6
 bcc:	83080e41 	movwhi	r0, #36417	; 0x8e41
 bd0:	00018e02 	andeq	r8, r1, r2, lsl #28
 bd4:	0000000c 	andeq	r0, r0, ip
 bd8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 bdc:	7c020001 	stcvc	0, cr0, [r2], {1}
 be0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 be4:	00000014 	andeq	r0, r0, r4, lsl r0
 be8:	00000bd4 	ldrdeq	r0, [r0], -r4
 bec:	10003ab0 			; <UNDEFINED> instruction: 0x10003ab0
 bf0:	0000000e 	andeq	r0, r0, lr
 bf4:	83080e42 	movwhi	r0, #36418	; 0x8e42
 bf8:	00018e02 	andeq	r8, r1, r2, lsl #28
 bfc:	0000000c 	andeq	r0, r0, ip
 c00:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 c04:	7c020001 	stcvc	0, cr0, [r2], {1}
 c08:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 c0c:	00000018 	andeq	r0, r0, r8, lsl r0
 c10:	00000bfc 	strdeq	r0, [r0], -ip
 c14:	10003bac 	andne	r3, r0, ip, lsr #23
 c18:	000000a4 	andeq	r0, r0, r4, lsr #1
 c1c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 c20:	86038504 	strhi	r8, [r3], -r4, lsl #10
 c24:	00018e02 	andeq	r8, r1, r2, lsl #28
 c28:	0000000c 	andeq	r0, r0, ip
 c2c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 c30:	7c020001 	stcvc	0, cr0, [r2], {1}
 c34:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 c38:	00000018 	andeq	r0, r0, r8, lsl r0
 c3c:	00000c28 	andeq	r0, r0, r8, lsr #24
 c40:	00000000 	andeq	r0, r0, r0
 c44:	00000030 	andeq	r0, r0, r0, lsr r0
 c48:	83100e41 	tsthi	r0, #1040	; 0x410
 c4c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 c50:	00018e02 	andeq	r8, r1, r2, lsl #28
 c54:	0000001c 	andeq	r0, r0, ip, lsl r0
 c58:	00000c28 	andeq	r0, r0, r8, lsr #24
 c5c:	00000000 	andeq	r0, r0, r0
 c60:	0000004c 	andeq	r0, r0, ip, asr #32
 c64:	83180e42 	tsthi	r8, #1056	; 0x420
 c68:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
 c6c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
 c70:	00018e02 	andeq	r8, r1, r2, lsl #28
 c74:	00000024 	andeq	r0, r0, r4, lsr #32
 c78:	00000c28 	andeq	r0, r0, r8, lsr #24
 c7c:	00000000 	andeq	r0, r0, r0
 c80:	00000056 	andeq	r0, r0, r6, asr r0
 c84:	83100e42 	tsthi	r0, #1056	; 0x420
 c88:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 c8c:	5c018e02 	stcpl	14, cr8, [r1], {2}
 c90:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
 c94:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
 c98:	0000000b 	andeq	r0, r0, fp
 c9c:	00000020 	andeq	r0, r0, r0, lsr #32
 ca0:	00000c28 	andeq	r0, r0, r8, lsr #24
 ca4:	00000000 	andeq	r0, r0, r0
 ca8:	00000064 	andeq	r0, r0, r4, rrx
 cac:	83100e45 	tsthi	r0, #1104	; 0x450
 cb0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 cb4:	6a018e02 	bvs	644c4 <__HEAP_SIZE+0x634c4>
 cb8:	c4c3000e 	strbgt	r0, [r3], #14
 cbc:	0000cec5 	andeq	ip, r0, r5, asr #29
 cc0:	00000024 	andeq	r0, r0, r4, lsr #32
 cc4:	00000c28 	andeq	r0, r0, r8, lsr #24
 cc8:	10003c50 	andne	r3, r0, r0, asr ip
 ccc:	0000005c 	andeq	r0, r0, ip, asr r0
 cd0:	83100e41 	tsthi	r0, #1040	; 0x410
 cd4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 cd8:	5d018e02 	stcpl	14, cr8, [r1, #-8]
 cdc:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
 ce0:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
 ce4:	0000000b 	andeq	r0, r0, fp
 ce8:	00000018 	andeq	r0, r0, r8, lsl r0
 cec:	00000c28 	andeq	r0, r0, r8, lsr #24
 cf0:	00000000 	andeq	r0, r0, r0
 cf4:	00000054 	andeq	r0, r0, r4, asr r0
 cf8:	84100e43 	ldrhi	r0, [r0], #-3651	; 0xfffff1bd
 cfc:	86038504 	strhi	r8, [r3], -r4, lsl #10
 d00:	00018e02 	andeq	r8, r1, r2, lsl #28
 d04:	00000018 	andeq	r0, r0, r8, lsl r0
 d08:	00000c28 	andeq	r0, r0, r8, lsr #24
 d0c:	00000000 	andeq	r0, r0, r0
 d10:	00000038 	andeq	r0, r0, r8, lsr r0
 d14:	83100e41 	tsthi	r0, #1040	; 0x410
 d18:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 d1c:	00018e02 	andeq	r8, r1, r2, lsl #28
 d20:	00000018 	andeq	r0, r0, r8, lsl r0
 d24:	00000c28 	andeq	r0, r0, r8, lsr #24
 d28:	00000000 	andeq	r0, r0, r0
 d2c:	00000068 	andeq	r0, r0, r8, rrx
 d30:	83100e41 	tsthi	r0, #1040	; 0x410
 d34:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 d38:	00018e02 	andeq	r8, r1, r2, lsl #28
 d3c:	0000000c 	andeq	r0, r0, ip
 d40:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 d44:	7c020001 	stcvc	0, cr0, [r2], {1}
 d48:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 d4c:	00000018 	andeq	r0, r0, r8, lsl r0
 d50:	00000d3c 	andeq	r0, r0, ip, lsr sp
 d54:	10003cac 	andne	r3, r0, ip, lsr #25
 d58:	0000002c 	andeq	r0, r0, ip, lsr #32
 d5c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
 d60:	86038504 	strhi	r8, [r3], -r4, lsl #10
 d64:	00018e02 	andeq	r8, r1, r2, lsl #28
 d68:	0000000c 	andeq	r0, r0, ip
 d6c:	00000d3c 	andeq	r0, r0, ip, lsr sp
 d70:	10003cd8 	ldrdne	r3, [r0], -r8
 d74:	00000004 	andeq	r0, r0, r4
 d78:	0000000c 	andeq	r0, r0, ip
 d7c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 d80:	7c020001 	stcvc	0, cr0, [r2], {1}
 d84:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 d88:	0000000c 	andeq	r0, r0, ip
 d8c:	00000d78 	andeq	r0, r0, r8, ror sp
 d90:	10003cdc 	ldrdne	r3, [r0], -ip
 d94:	00000014 	andeq	r0, r0, r4, lsl r0
 d98:	00000044 	andeq	r0, r0, r4, asr #32
 d9c:	00000d78 	andeq	r0, r0, r8, ror sp
 da0:	00000000 	andeq	r0, r0, r0
 da4:	000000c8 	andeq	r0, r0, r8, asr #1
 da8:	83280e42 			; <UNDEFINED> instruction: 0x83280e42
 dac:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
 db0:	87078608 	strhi	r8, [r7, -r8, lsl #12]
 db4:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
 db8:	8b038a04 	blhi	e35d0 <__HEAP_SIZE+0xe25d0>
 dbc:	46018e02 	strmi	r8, [r1], -r2, lsl #28
 dc0:	5005300e 	andpl	r3, r5, lr
 dc4:	0b51050c 	bleq	14421fc <__RAM_SIZE+0x13421fc>
 dc8:	50060a60 	andpl	r0, r6, r0, ror #20
 dcc:	280e5106 	stmdacs	lr, {r1, r2, r8, ip, lr}
 dd0:	cacbce43 	bgt	ff2f46e4 <__StackTop+0xc71f46e4>
 dd4:	c6c7c8c9 	strbgt	ip, [r7], r9, asr #17
 dd8:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
 ddc:	000b4200 	andeq	r4, fp, r0, lsl #4
 de0:	0000000c 	andeq	r0, r0, ip
 de4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 de8:	7c020001 	stcvc	0, cr0, [r2], {1}
 dec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 df0:	0000000c 	andeq	r0, r0, ip
 df4:	00000de0 	andeq	r0, r0, r0, ror #27
 df8:	10003cf0 	strdne	r3, [r0], -r0
 dfc:	0000000c 	andeq	r0, r0, ip
 e00:	0000000c 	andeq	r0, r0, ip
 e04:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 e08:	7c020001 	stcvc	0, cr0, [r2], {1}
 e0c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 e10:	00000020 	andeq	r0, r0, r0, lsr #32
 e14:	00000e00 	andeq	r0, r0, r0, lsl #28
 e18:	10003cfc 	strdne	r3, [r0], -ip
 e1c:	0000002c 	andeq	r0, r0, ip, lsr #32
 e20:	83100e41 	tsthi	r0, #1040	; 0x410
 e24:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
 e28:	4f018e02 	svcmi	0x00018e02
 e2c:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
 e30:	0000000e 	andeq	r0, r0, lr
 e34:	0000000c 	andeq	r0, r0, ip
 e38:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 e3c:	7c020001 	stcvc	0, cr0, [r2], {1}
 e40:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 e44:	0000000c 	andeq	r0, r0, ip
 e48:	00000e34 	andeq	r0, r0, r4, lsr lr
 e4c:	00000000 	andeq	r0, r0, r0
 e50:	00000002 	andeq	r0, r0, r2
 e54:	0000000c 	andeq	r0, r0, ip
 e58:	00000e34 	andeq	r0, r0, r4, lsr lr
 e5c:	00000000 	andeq	r0, r0, r0
 e60:	00000002 	andeq	r0, r0, r2
 e64:	0000000c 	andeq	r0, r0, ip
 e68:	00000e34 	andeq	r0, r0, r4, lsr lr
 e6c:	00000000 	andeq	r0, r0, r0
 e70:	00000002 	andeq	r0, r0, r2
 e74:	0000000c 	andeq	r0, r0, ip
 e78:	00000e34 	andeq	r0, r0, r4, lsr lr
 e7c:	00000000 	andeq	r0, r0, r0
 e80:	00000002 	andeq	r0, r0, r2
 e84:	0000000c 	andeq	r0, r0, ip
 e88:	00000e34 	andeq	r0, r0, r4, lsr lr
 e8c:	00000000 	andeq	r0, r0, r0
 e90:	00000002 	andeq	r0, r0, r2
 e94:	0000000c 	andeq	r0, r0, ip
 e98:	00000e34 	andeq	r0, r0, r4, lsr lr
 e9c:	10003d28 	andne	r3, r0, r8, lsr #26
 ea0:	00000002 	andeq	r0, r0, r2
 ea4:	0000000c 	andeq	r0, r0, ip
 ea8:	00000e34 	andeq	r0, r0, r4, lsr lr
 eac:	00000000 	andeq	r0, r0, r0
 eb0:	00000004 	andeq	r0, r0, r4
 eb4:	0000000c 	andeq	r0, r0, ip
 eb8:	00000e34 	andeq	r0, r0, r4, lsr lr
 ebc:	00000000 	andeq	r0, r0, r0
 ec0:	00000004 	andeq	r0, r0, r4
 ec4:	0000000c 	andeq	r0, r0, ip
 ec8:	00000e34 	andeq	r0, r0, r4, lsr lr
 ecc:	00000000 	andeq	r0, r0, r0
 ed0:	00000002 	andeq	r0, r0, r2
 ed4:	0000000c 	andeq	r0, r0, ip
 ed8:	00000e34 	andeq	r0, r0, r4, lsr lr
 edc:	10003d2c 	andne	r3, r0, ip, lsr #26
 ee0:	00000002 	andeq	r0, r0, r2
 ee4:	0000000c 	andeq	r0, r0, ip
 ee8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 eec:	7c020001 	stcvc	0, cr0, [r2], {1}
 ef0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 ef4:	00000024 	andeq	r0, r0, r4, lsr #32
 ef8:	00000ee4 	andeq	r0, r0, r4, ror #29
 efc:	00000000 	andeq	r0, r0, r0
 f00:	00000048 	andeq	r0, r0, r8, asr #32
 f04:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
 f08:	86058506 	strhi	r8, [r5], -r6, lsl #10
 f0c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
 f10:	60018e02 	andvs	r8, r1, r2, lsl #28
 f14:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
 f18:	000ec4c5 	andeq	ip, lr, r5, asr #9
 f1c:	00000028 	andeq	r0, r0, r8, lsr #32
 f20:	00000ee4 	andeq	r0, r0, r4, ror #29
 f24:	00000000 	andeq	r0, r0, r0
 f28:	00000090 	muleq	r0, r0, r0
 f2c:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
 f30:	86038504 	strhi	r8, [r3], -r4, lsl #10
 f34:	7c018e02 	stcvc	14, cr8, [r1], {2}
 f38:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
 f3c:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
 f40:	000e410b 	andeq	r4, lr, fp, lsl #2
 f44:	cec6c5c4 	cdpgt	5, 12, cr12, cr6, cr4, {6}
 f48:	0000000c 	andeq	r0, r0, ip
 f4c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 f50:	7c020001 	stcvc	0, cr0, [r2], {1}
 f54:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 f58:	00000020 	andeq	r0, r0, r0, lsr #32
 f5c:	00000f48 	andeq	r0, r0, r8, asr #30
 f60:	10003d30 	andne	r3, r0, r0, lsr sp
 f64:	00000090 	muleq	r0, r0, r0
 f68:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
 f6c:	86078508 	strhi	r8, [r7], -r8, lsl #10
 f70:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
 f74:	8a038904 	bhi	e338c <__HEAP_SIZE+0xe238c>
 f78:	00018e02 	andeq	r8, r1, r2, lsl #28
 f7c:	0000000c 	andeq	r0, r0, ip
 f80:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 f84:	7c020001 	stcvc	0, cr0, [r2], {1}
 f88:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 f8c:	0000000c 	andeq	r0, r0, ip
 f90:	00000f7c 	andeq	r0, r0, ip, ror pc
 f94:	10003dc0 	andne	r3, r0, r0, asr #27
 f98:	00000010 	andeq	r0, r0, r0, lsl r0
 f9c:	0000000c 	andeq	r0, r0, ip
 fa0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 fa4:	7c020001 	stcvc	0, cr0, [r2], {1}
 fa8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 fac:	0000000c 	andeq	r0, r0, ip
 fb0:	00000f9c 	muleq	r0, ip, pc	; <UNPREDICTABLE>
 fb4:	10003dd0 	ldrdne	r3, [r0], -r0
 fb8:	00000010 	andeq	r0, r0, r0, lsl r0
 fbc:	0000000c 	andeq	r0, r0, ip
 fc0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 fc4:	7c020001 	stcvc	0, cr0, [r2], {1}
 fc8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 fcc:	0000000c 	andeq	r0, r0, ip
 fd0:	00000fbc 			; <UNDEFINED> instruction: 0x00000fbc
 fd4:	10003de0 	andne	r3, r0, r0, ror #27
 fd8:	00000002 	andeq	r0, r0, r2

Disassembly of section .stab:

00000000 <.stab>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	00000001 	andeq	r0, r0, r1
   4:	00040000 	andeq	r0, r4, r0
}
   8:	00000076 	andeq	r0, r0, r6, ror r0
   c:	0000000a 	andeq	r0, r0, sl
    printf("c = %d\r\n", c);
  10:	0000001e 	andeq	r0, r0, lr, lsl r0
}
  14:	00000000 	andeq	r0, r0, r0
  18:	0000003a 	andeq	r0, r0, sl, lsr r0
  1c:	00000001 	andeq	r0, r0, r1
  20:	00000000 	andeq	r0, r0, r0
  24:	00000042 	andeq	r0, r0, r2, asr #32
  28:	0000001e 	andeq	r0, r0, lr, lsl r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	00000070 	andeq	r0, r0, r0, ror r0
  34:	00000001 	andeq	r0, r0, r1
  38:	00000000 	andeq	r0, r0, r0

Disassembly of section .stabstr:

00000000 <.stabstr>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
   4:	2e646970 			; <UNDEFINED> instruction: 0x2e646970
}
   8:	675f0063 	ldrbvs	r0, [pc, -r3, rrx]
   c:	69707465 	ldmdbvs	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    printf("c = %d\r\n", c);
  10:	73692064 	cmnvc	r9, #100	; 0x64
}
  14:	746f6e20 	strbtvc	r6, [pc], #-3616	; 1c <__STACKSEAL_SIZE+0x1c>
  18:	706d6920 	rsbvc	r6, sp, r0, lsr #18
  1c:	656d656c 	strbvs	r6, [sp, #-1388]!	; 0xfffffa94
  20:	6465746e 	strbtvs	r7, [r5], #-1134	; 0xfffffb92
  24:	646e6120 	strbtvs	r6, [lr], #-288	; 0xfffffee0
  28:	6c697720 	stclvs	7, cr7, [r9], #-128	; 0xffffff80
  2c:	6c61206c 	stclvs	0, cr2, [r1], #-432	; 0xfffffe50
  30:	73796177 	cmnvc	r9, #-1073741795	; 0xc000001d
  34:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
  38:	675f006c 	ldrbvs	r0, [pc, -ip, rrx]
  3c:	69707465 	ldmdbvs	r0!, {r0, r2, r5, r6, sl, ip, sp, lr}^
  40:	6b5f0064 	blvs	17c01d8 <__RAM_SIZE+0x16c01d8>
  44:	206c6c69 	rsbcs	r6, ip, r9, ror #24
  48:	6e207369 	cdpvs	3, 2, cr7, cr0, cr9, {3}
  4c:	6920746f 	stmdbvs	r0!, {r0, r1, r2, r3, r5, r6, sl, ip, sp, lr}
  50:	656c706d 	strbvs	r7, [ip, #-109]!	; 0xffffff93
  54:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
  58:	61206465 			; <UNDEFINED> instruction: 0x61206465
  5c:	7720646e 	strvc	r6, [r0, -lr, ror #8]!
  60:	206c6c69 	rsbcs	r6, ip, r9, ror #24
  64:	61776c61 	cmnvs	r7, r1, ror #24
  68:	66207379 			; <UNDEFINED> instruction: 0x66207379
  6c:	006c6961 	rsbeq	r6, ip, r1, ror #18
  70:	6c696b5f 			; <UNDEFINED> instruction: 0x6c696b5f
  74:	Address 0x00000074 is out of bounds.



.\build\gcc/an505-qemu.elf:     file format elf32-littlearm


Disassembly of section .text:

10000000 <__Vectors>:
10000000:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10000004:	10001fad 	andne	r1, r0, sp, lsr #31
10000008:	10002001 	andne	r2, r0, r1
1000000c:	1000201d 	andne	r2, r0, sp, lsl r0
10000010:	10002001 	andne	r2, r0, r1
10000014:	10002001 	andne	r2, r0, r1
10000018:	10002001 	andne	r2, r0, r1
1000001c:	10002001 	andne	r2, r0, r1
	...
1000002c:	10002001 	andne	r2, r0, r1
10000030:	10002001 	andne	r2, r0, r1
10000034:	00000000 	andeq	r0, r0, r0
10000038:	10002001 	andne	r2, r0, r1
1000003c:	10002001 	andne	r2, r0, r1
10000040:	10002001 	andne	r2, r0, r1
10000044:	10002001 	andne	r2, r0, r1
10000048:	10002001 	andne	r2, r0, r1
1000004c:	10002001 	andne	r2, r0, r1
10000050:	10002001 	andne	r2, r0, r1
10000054:	10002001 	andne	r2, r0, r1
10000058:	10002001 	andne	r2, r0, r1
1000005c:	10002001 	andne	r2, r0, r1
10000060:	10002001 	andne	r2, r0, r1
10000064:	10002001 	andne	r2, r0, r1
	...

100007c0 <__do_global_dtors_aux>:
100007c0:	b510      	push	{r4, lr}
100007c2:	4c05      	ldr	r4, [pc, #20]	; (100007d8 <__do_global_dtors_aux+0x18>)
100007c4:	7823      	ldrb	r3, [r4, #0]
100007c6:	b933      	cbnz	r3, 100007d6 <__do_global_dtors_aux+0x16>
100007c8:	4b04      	ldr	r3, [pc, #16]	; (100007dc <__do_global_dtors_aux+0x1c>)
100007ca:	b113      	cbz	r3, 100007d2 <__do_global_dtors_aux+0x12>
100007cc:	4804      	ldr	r0, [pc, #16]	; (100007e0 <__do_global_dtors_aux+0x20>)
100007ce:	e000      	b.n	100007d2 <__do_global_dtors_aux+0x12>
100007d0:	bf00      	nop
100007d2:	2301      	movs	r3, #1
100007d4:	7023      	strb	r3, [r4, #0]
100007d6:	bd10      	pop	{r4, pc}
100007d8:	38000448 	stmdacc	r0, {r3, r6, sl}
100007dc:	00000000 	andeq	r0, r0, r0
100007e0:	10004490 	mulne	r0, r0, r4

100007e4 <frame_dummy>:
100007e4:	b508      	push	{r3, lr}
100007e6:	4b03      	ldr	r3, [pc, #12]	; (100007f4 <frame_dummy+0x10>)
100007e8:	b11b      	cbz	r3, 100007f2 <frame_dummy+0xe>
100007ea:	4903      	ldr	r1, [pc, #12]	; (100007f8 <frame_dummy+0x14>)
100007ec:	4803      	ldr	r0, [pc, #12]	; (100007fc <frame_dummy+0x18>)
100007ee:	e000      	b.n	100007f2 <frame_dummy+0xe>
100007f0:	bf00      	nop
100007f2:	bd08      	pop	{r3, pc}
100007f4:	00000000 	andeq	r0, r0, r0
100007f8:	3800044c 	stmdacc	r0, {r2, r3, r6, sl}
100007fc:	10004490 	mulne	r0, r0, r4

10000800 <dump_callstack>:

void Default_Handler(void) {
    printf("%s\n", __func__);
}

void dump_callstack(void) {
10000800:	b530      	push	{r4, r5, lr}
10000802:	b0c1      	sub	sp, #260	; 0x104
    unsigned int buffer[FD_STACK_DUMP_DEPTH_MAX] = {0};
10000804:	f44f 7280 	mov.w	r2, #256	; 0x100
10000808:	2100      	movs	r1, #0
1000080a:	4668      	mov	r0, sp
1000080c:	f001 fc30 	bl	10002070 <memset>
    unsigned int point = fault_dump_bm_stack_point();
10000810:	f001 fb08 	bl	10001e24 <fault_dump_bm_stack_point>
10000814:	4604      	mov	r4, r0
    unsigned int start = fault_dump_bm_stack_start();
10000816:	f001 fb09 	bl	10001e2c <fault_dump_bm_stack_start>
1000081a:	4603      	mov	r3, r0
    int count = fault_dump_callstack(buffer, FD_STACK_DUMP_DEPTH_MAX, (unsigned int*)point, (unsigned int*)start);
1000081c:	4622      	mov	r2, r4
1000081e:	2140      	movs	r1, #64	; 0x40
10000820:	4668      	mov	r0, sp
10000822:	f001 f9b3 	bl	10001b8c <fault_dump_callstack>
    if (count < 0) {
10000826:	1e05      	subs	r5, r0, #0
10000828:	db04      	blt.n	10000834 <dump_callstack+0x34>
        printf("CallStack dump error: %d\r\n", count);
    } else {
        printf("CallStack:[ ");
1000082a:	480b      	ldr	r0, [pc, #44]	; (10000858 <dump_callstack+0x58>)
1000082c:	f001 f93a 	bl	10001aa4 <printf>
        for (int i = 0; i < count; i++) {
10000830:	2400      	movs	r4, #0
10000832:	e00a      	b.n	1000084a <dump_callstack+0x4a>
        printf("CallStack dump error: %d\r\n", count);
10000834:	4629      	mov	r1, r5
10000836:	4809      	ldr	r0, [pc, #36]	; (1000085c <dump_callstack+0x5c>)
10000838:	f001 f934 	bl	10001aa4 <printf>
1000083c:	e00a      	b.n	10000854 <dump_callstack+0x54>
            printf("%08X ", buffer[i]);
1000083e:	f85d 1024 	ldr.w	r1, [sp, r4, lsl #2]
10000842:	4807      	ldr	r0, [pc, #28]	; (10000860 <dump_callstack+0x60>)
10000844:	f001 f92e 	bl	10001aa4 <printf>
        for (int i = 0; i < count; i++) {
10000848:	3401      	adds	r4, #1
1000084a:	42ac      	cmp	r4, r5
1000084c:	dbf7      	blt.n	1000083e <dump_callstack+0x3e>
        }
        printf("] \r\n");
1000084e:	4805      	ldr	r0, [pc, #20]	; (10000864 <dump_callstack+0x64>)
10000850:	f001 f948 	bl	10001ae4 <puts>
    }
}
10000854:	b041      	add	sp, #260	; 0x104
10000856:	bd30      	pop	{r4, r5, pc}
10000858:	10003f74 	andne	r3, r0, r4, ror pc
1000085c:	10003f58 	andne	r3, r0, r8, asr pc
10000860:	10003f84 	andne	r3, r0, r4, lsl #31
10000864:	10003f8c 	andne	r3, r0, ip, lsl #31

10000868 <test0>:

void test0(void) {
10000868:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
1000086a:	4904      	ldr	r1, [pc, #16]	; (1000087c <test0+0x14>)
1000086c:	4804      	ldr	r0, [pc, #16]	; (10000880 <test0+0x18>)
1000086e:	f001 f919 	bl	10001aa4 <printf>
    dump_callstack();
10000872:	f7ff ffc5 	bl	10000800 <dump_callstack>
    extern void fault_dump_unalign(void);
    fault_dump_unalign();
10000876:	f001 fb63 	bl	10001f40 <fault_dump_unalign>
}
1000087a:	bd08      	pop	{r3, pc}
1000087c:	10003fe4 	andne	r3, r0, r4, ror #31
10000880:	10003f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>

10000884 <test1>:

void test1(void) {
10000884:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
10000886:	4903      	ldr	r1, [pc, #12]	; (10000894 <test1+0x10>)
10000888:	4803      	ldr	r0, [pc, #12]	; (10000898 <test1+0x14>)
1000088a:	f001 f90b 	bl	10001aa4 <printf>
    test0();
1000088e:	f7ff ffeb 	bl	10000868 <test0>
}
10000892:	bd08      	pop	{r3, pc}
10000894:	10003fdc 	ldrdne	r3, [r0], -ip
10000898:	10003f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>

1000089c <test2>:

void test2(void) {
1000089c:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
1000089e:	4903      	ldr	r1, [pc, #12]	; (100008ac <test2+0x10>)
100008a0:	4803      	ldr	r0, [pc, #12]	; (100008b0 <test2+0x14>)
100008a2:	f001 f8ff 	bl	10001aa4 <printf>
    test1();
100008a6:	f7ff ffed 	bl	10000884 <test1>
}
100008aa:	bd08      	pop	{r3, pc}
100008ac:	10003fd4 	ldrdne	r3, [r0], -r4
100008b0:	10003f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>

100008b4 <test3>:

void test3(void) {
100008b4:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008b6:	4903      	ldr	r1, [pc, #12]	; (100008c4 <test3+0x10>)
100008b8:	4803      	ldr	r0, [pc, #12]	; (100008c8 <test3+0x14>)
100008ba:	f001 f8f3 	bl	10001aa4 <printf>
    test2();
100008be:	f7ff ffed 	bl	1000089c <test2>
}
100008c2:	bd08      	pop	{r3, pc}
100008c4:	10003fcc 	andne	r3, r0, ip, asr #31
100008c8:	10003f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>

100008cc <test4>:

void test4(void) {
100008cc:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008ce:	4903      	ldr	r1, [pc, #12]	; (100008dc <test4+0x10>)
100008d0:	4803      	ldr	r0, [pc, #12]	; (100008e0 <test4+0x14>)
100008d2:	f001 f8e7 	bl	10001aa4 <printf>
    test3();
100008d6:	f7ff ffed 	bl	100008b4 <test3>
}
100008da:	bd08      	pop	{r3, pc}
100008dc:	10003fc4 	andne	r3, r0, r4, asr #31
100008e0:	10003f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>

100008e4 <test5>:

void test5(void) {
100008e4:	b508      	push	{r3, lr}
    printf("this is %s.\r\n", __func__);
100008e6:	4903      	ldr	r1, [pc, #12]	; (100008f4 <test5+0x10>)
100008e8:	4803      	ldr	r0, [pc, #12]	; (100008f8 <test5+0x14>)
100008ea:	f001 f8db 	bl	10001aa4 <printf>
    test4();
100008ee:	f7ff ffed 	bl	100008cc <test4>
}
100008f2:	bd08      	pop	{r3, pc}
100008f4:	10003fbc 			; <UNDEFINED> instruction: 0x10003fbc
100008f8:	10003f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>

100008fc <main>:

int main(void) {
100008fc:	b510      	push	{r4, lr}
    int count = 0;
    uart_init();
100008fe:	f001 f901 	bl	10001b04 <uart_init>

    printf("Start\r\n");
10000902:	4807      	ldr	r0, [pc, #28]	; (10000920 <main+0x24>)
10000904:	f001 f8ee 	bl	10001ae4 <puts>
    fault_dump_init();
10000908:	f001 f98e 	bl	10001c28 <fault_dump_init>
    test5();
1000090c:	f7ff ffea 	bl	100008e4 <test5>
    int count = 0;
10000910:	2100      	movs	r1, #0

    while (1) {
        __NOP();
10000912:	bf00      	nop
        printf("hello world - %d.\r\n", count++);
10000914:	1c4c      	adds	r4, r1, #1
10000916:	4803      	ldr	r0, [pc, #12]	; (10000924 <main+0x28>)
10000918:	f001 f8c4 	bl	10001aa4 <printf>
1000091c:	4621      	mov	r1, r4
1000091e:	e7f8      	b.n	10000912 <main+0x16>
10000920:	10003fa0 	andne	r3, r0, r0, lsr #31
10000924:	10003fa8 	andne	r3, r0, r8, lsr #31

10000928 <SystemInit>:
 *----------------------------------------------------------------------------*/
void SystemInit (void)
{

#if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
  SCB->VTOR = (uint32_t) &(__VECTOR_TABLE[0]);
10000928:	4b06      	ldr	r3, [pc, #24]	; (10000944 <SystemInit+0x1c>)
1000092a:	4a07      	ldr	r2, [pc, #28]	; (10000948 <SystemInit+0x20>)
1000092c:	609a      	str	r2, [r3, #8]
#endif

#if defined (__FPU_USED) && (__FPU_USED == 1U)
  SCB->CPACR |= ((3U << 10U*2U) |           /* enable CP10 Full Access */
1000092e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
10000932:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
10000936:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

#if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
  TZ_SAU_Setup();
#endif

  SystemCoreClock = SYSTEM_CLOCK;
1000093a:	4b04      	ldr	r3, [pc, #16]	; (1000094c <SystemInit+0x24>)
1000093c:	4a04      	ldr	r2, [pc, #16]	; (10000950 <SystemInit+0x28>)
1000093e:	601a      	str	r2, [r3, #0]
}
10000940:	4770      	bx	lr
10000942:	bf00      	nop
10000944:	e000ed00 	and	lr, r0, r0, lsl #26
10000948:	10000000 	andne	r0, r0, r0
1000094c:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
10000950:	017d7840 	cmneq	sp, r0, asr #16

10000954 <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
10000954:	4770      	bx	lr

10000956 <_atoi>:
}


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
10000956:	4601      	mov	r1, r0
  unsigned int i = 0U;
10000958:	2000      	movs	r0, #0
  while (_is_digit(**str)) {
1000095a:	e007      	b.n	1000096c <_atoi+0x16>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
1000095c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
10000960:	1c53      	adds	r3, r2, #1
10000962:	600b      	str	r3, [r1, #0]
10000964:	7813      	ldrb	r3, [r2, #0]
10000966:	eb03 0040 	add.w	r0, r3, r0, lsl #1
1000096a:	3830      	subs	r0, #48	; 0x30
  while (_is_digit(**str)) {
1000096c:	680a      	ldr	r2, [r1, #0]
1000096e:	7813      	ldrb	r3, [r2, #0]
  return (ch >= '0') && (ch <= '9');
10000970:	3b30      	subs	r3, #48	; 0x30
10000972:	b2db      	uxtb	r3, r3
  while (_is_digit(**str)) {
10000974:	2b09      	cmp	r3, #9
10000976:	d9f1      	bls.n	1000095c <_atoi+0x6>
  }
  return i;
}
10000978:	4770      	bx	lr

1000097a <_out_rev>:


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
1000097a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000097e:	b083      	sub	sp, #12
10000980:	4605      	mov	r5, r0
10000982:	460e      	mov	r6, r1
10000984:	4693      	mov	fp, r2
10000986:	461f      	mov	r7, r3
10000988:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
1000098c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
1000098e:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
  const size_t start_idx = idx;

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
10000992:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000994:	f013 0f03 	tst.w	r3, #3
10000998:	d119      	bne.n	100009ce <_out_rev+0x54>
    for (size_t i = len; i < width; i++) {
1000099a:	46a0      	mov	r8, r4
1000099c:	9201      	str	r2, [sp, #4]
1000099e:	45c8      	cmp	r8, r9
100009a0:	d209      	bcs.n	100009b6 <_out_rev+0x3c>
      out(' ', buffer, idx++, maxlen);
100009a2:	f102 0b01 	add.w	fp, r2, #1
100009a6:	463b      	mov	r3, r7
100009a8:	4631      	mov	r1, r6
100009aa:	2020      	movs	r0, #32
100009ac:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
100009ae:	f108 0801 	add.w	r8, r8, #1
      out(' ', buffer, idx++, maxlen);
100009b2:	465a      	mov	r2, fp
100009b4:	e7f3      	b.n	1000099e <_out_rev+0x24>
100009b6:	f8dd b004 	ldr.w	fp, [sp, #4]
100009ba:	e008      	b.n	100009ce <_out_rev+0x54>
    }
  }

  // reverse string
  while (len) {
    out(buf[--len], buffer, idx++, maxlen);
100009bc:	3c01      	subs	r4, #1
100009be:	f102 0801 	add.w	r8, r2, #1
100009c2:	463b      	mov	r3, r7
100009c4:	4631      	mov	r1, r6
100009c6:	f81a 0004 	ldrb.w	r0, [sl, r4]
100009ca:	47a8      	blx	r5
100009cc:	4642      	mov	r2, r8
  while (len) {
100009ce:	2c00      	cmp	r4, #0
100009d0:	d1f4      	bne.n	100009bc <_out_rev+0x42>
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
100009d2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
100009d4:	f013 0f02 	tst.w	r3, #2
100009d8:	d103      	bne.n	100009e2 <_out_rev+0x68>
      out(' ', buffer, idx++, maxlen);
    }
  }

  return idx;
}
100009da:	4610      	mov	r0, r2
100009dc:	b003      	add	sp, #12
100009de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while (idx - start_idx < width) {
100009e2:	eba2 030b 	sub.w	r3, r2, fp
100009e6:	454b      	cmp	r3, r9
100009e8:	d2f7      	bcs.n	100009da <_out_rev+0x60>
      out(' ', buffer, idx++, maxlen);
100009ea:	1c54      	adds	r4, r2, #1
100009ec:	463b      	mov	r3, r7
100009ee:	4631      	mov	r1, r6
100009f0:	2020      	movs	r0, #32
100009f2:	47a8      	blx	r5
100009f4:	4622      	mov	r2, r4
100009f6:	e7f4      	b.n	100009e2 <_out_rev+0x68>

100009f8 <_ntoa_format>:


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
100009f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
100009fc:	b085      	sub	sp, #20
100009fe:	9d0c      	ldr	r5, [sp, #48]	; 0x30
10000a00:	9c0d      	ldr	r4, [sp, #52]	; 0x34
10000a02:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
10000a06:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
10000a0a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10000a0e:	9f11      	ldr	r7, [sp, #68]	; 0x44
10000a10:	9e12      	ldr	r6, [sp, #72]	; 0x48
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
10000a12:	f016 0f02 	tst.w	r6, #2
10000a16:	d121      	bne.n	10000a5c <_ntoa_format+0x64>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
10000a18:	b17f      	cbz	r7, 10000a3a <_ntoa_format+0x42>
10000a1a:	f016 0f01 	tst.w	r6, #1
10000a1e:	d00c      	beq.n	10000a3a <_ntoa_format+0x42>
10000a20:	f1b9 0f00 	cmp.w	r9, #0
10000a24:	d102      	bne.n	10000a2c <_ntoa_format+0x34>
10000a26:	f016 0f0c 	tst.w	r6, #12
10000a2a:	d006      	beq.n	10000a3a <_ntoa_format+0x42>
      width--;
10000a2c:	3f01      	subs	r7, #1
10000a2e:	e004      	b.n	10000a3a <_ntoa_format+0x42>
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = '0';
10000a30:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000a34:	f805 c004 	strb.w	ip, [r5, r4]
10000a38:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a3a:	4574      	cmp	r4, lr
10000a3c:	d201      	bcs.n	10000a42 <_ntoa_format+0x4a>
10000a3e:	2c1f      	cmp	r4, #31
10000a40:	d9f6      	bls.n	10000a30 <_ntoa_format+0x38>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a42:	f016 0f01 	tst.w	r6, #1
10000a46:	d009      	beq.n	10000a5c <_ntoa_format+0x64>
10000a48:	42bc      	cmp	r4, r7
10000a4a:	d207      	bcs.n	10000a5c <_ntoa_format+0x64>
10000a4c:	2c1f      	cmp	r4, #31
10000a4e:	d805      	bhi.n	10000a5c <_ntoa_format+0x64>
      buf[len++] = '0';
10000a50:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000a54:	f805 c004 	strb.w	ip, [r5, r4]
10000a58:	3401      	adds	r4, #1
10000a5a:	e7f2      	b.n	10000a42 <_ntoa_format+0x4a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
10000a5c:	f016 0f10 	tst.w	r6, #16
10000a60:	d017      	beq.n	10000a92 <_ntoa_format+0x9a>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
10000a62:	f416 6f80 	tst.w	r6, #1024	; 0x400
10000a66:	d104      	bne.n	10000a72 <_ntoa_format+0x7a>
10000a68:	b11c      	cbz	r4, 10000a72 <_ntoa_format+0x7a>
10000a6a:	4574      	cmp	r4, lr
10000a6c:	d024      	beq.n	10000ab8 <_ntoa_format+0xc0>
10000a6e:	42bc      	cmp	r4, r7
10000a70:	d022      	beq.n	10000ab8 <_ntoa_format+0xc0>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a72:	f1b8 0f10 	cmp.w	r8, #16
10000a76:	d02b      	beq.n	10000ad0 <_ntoa_format+0xd8>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a78:	f1b8 0f10 	cmp.w	r8, #16
10000a7c:	d033      	beq.n	10000ae6 <_ntoa_format+0xee>
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a7e:	f1b8 0f02 	cmp.w	r8, #2
10000a82:	d03b      	beq.n	10000afc <_ntoa_format+0x104>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000a84:	2c1f      	cmp	r4, #31
10000a86:	d804      	bhi.n	10000a92 <_ntoa_format+0x9a>
      buf[len++] = '0';
10000a88:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000a8c:	f805 c004 	strb.w	ip, [r5, r4]
10000a90:	3401      	adds	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000a92:	2c1f      	cmp	r4, #31
10000a94:	d807      	bhi.n	10000aa6 <_ntoa_format+0xae>
    if (negative) {
10000a96:	f1b9 0f00 	cmp.w	r9, #0
10000a9a:	d037      	beq.n	10000b0c <_ntoa_format+0x114>
      buf[len++] = '-';
10000a9c:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
10000aa0:	f805 c004 	strb.w	ip, [r5, r4]
10000aa4:	3401      	adds	r4, #1
    else if (flags & FLAGS_SPACE) {
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10000aa6:	9603      	str	r6, [sp, #12]
10000aa8:	9702      	str	r7, [sp, #8]
10000aaa:	9401      	str	r4, [sp, #4]
10000aac:	9500      	str	r5, [sp, #0]
10000aae:	f7ff ff64 	bl	1000097a <_out_rev>
}
10000ab2:	b005      	add	sp, #20
10000ab4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      if (len && (base == 16U)) {
10000ab8:	f1b4 0c01 	subs.w	ip, r4, #1
10000abc:	d006      	beq.n	10000acc <_ntoa_format+0xd4>
10000abe:	f1b8 0f10 	cmp.w	r8, #16
10000ac2:	d001      	beq.n	10000ac8 <_ntoa_format+0xd0>
      len--;
10000ac4:	4664      	mov	r4, ip
10000ac6:	e7d4      	b.n	10000a72 <_ntoa_format+0x7a>
        len--;
10000ac8:	3c02      	subs	r4, #2
10000aca:	e7d2      	b.n	10000a72 <_ntoa_format+0x7a>
      len--;
10000acc:	4664      	mov	r4, ip
10000ace:	e7d0      	b.n	10000a72 <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000ad0:	f016 0f20 	tst.w	r6, #32
10000ad4:	d1d0      	bne.n	10000a78 <_ntoa_format+0x80>
10000ad6:	2c1f      	cmp	r4, #31
10000ad8:	d8ce      	bhi.n	10000a78 <_ntoa_format+0x80>
      buf[len++] = 'x';
10000ada:	f04f 0c78 	mov.w	ip, #120	; 0x78
10000ade:	f805 c004 	strb.w	ip, [r5, r4]
10000ae2:	3401      	adds	r4, #1
10000ae4:	e7ce      	b.n	10000a84 <_ntoa_format+0x8c>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000ae6:	f016 0f20 	tst.w	r6, #32
10000aea:	d0c8      	beq.n	10000a7e <_ntoa_format+0x86>
10000aec:	2c1f      	cmp	r4, #31
10000aee:	d8c6      	bhi.n	10000a7e <_ntoa_format+0x86>
      buf[len++] = 'X';
10000af0:	f04f 0c58 	mov.w	ip, #88	; 0x58
10000af4:	f805 c004 	strb.w	ip, [r5, r4]
10000af8:	3401      	adds	r4, #1
10000afa:	e7c3      	b.n	10000a84 <_ntoa_format+0x8c>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000afc:	2c1f      	cmp	r4, #31
10000afe:	d8c1      	bhi.n	10000a84 <_ntoa_format+0x8c>
      buf[len++] = 'b';
10000b00:	f04f 0c62 	mov.w	ip, #98	; 0x62
10000b04:	f805 c004 	strb.w	ip, [r5, r4]
10000b08:	3401      	adds	r4, #1
10000b0a:	e7bb      	b.n	10000a84 <_ntoa_format+0x8c>
    else if (flags & FLAGS_PLUS) {
10000b0c:	f016 0f04 	tst.w	r6, #4
10000b10:	d005      	beq.n	10000b1e <_ntoa_format+0x126>
      buf[len++] = '+';  // ignore the space if the '+' exists
10000b12:	f04f 0c2b 	mov.w	ip, #43	; 0x2b
10000b16:	f805 c004 	strb.w	ip, [r5, r4]
10000b1a:	3401      	adds	r4, #1
10000b1c:	e7c3      	b.n	10000aa6 <_ntoa_format+0xae>
    else if (flags & FLAGS_SPACE) {
10000b1e:	f016 0f08 	tst.w	r6, #8
10000b22:	d0c0      	beq.n	10000aa6 <_ntoa_format+0xae>
      buf[len++] = ' ';
10000b24:	f04f 0c20 	mov.w	ip, #32
10000b28:	f805 c004 	strb.w	ip, [r5, r4]
10000b2c:	3401      	adds	r4, #1
10000b2e:	e7ba      	b.n	10000aa6 <_ntoa_format+0xae>

10000b30 <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000b30:	b5f0      	push	{r4, r5, r6, r7, lr}
10000b32:	b091      	sub	sp, #68	; 0x44
10000b34:	9c16      	ldr	r4, [sp, #88]	; 0x58
10000b36:	9d18      	ldr	r5, [sp, #96]	; 0x60
10000b38:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000b3a:	b90c      	cbnz	r4, 10000b40 <_ntoa_long+0x10>
    flags &= ~FLAGS_HASH;
10000b3c:	f026 0610 	bic.w	r6, r6, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000b40:	f416 6e80 	ands.w	lr, r6, #1024	; 0x400
10000b44:	d016      	beq.n	10000b74 <_ntoa_long+0x44>
10000b46:	b364      	cbz	r4, 10000ba2 <_ntoa_long+0x72>
10000b48:	f04f 0e00 	mov.w	lr, #0
10000b4c:	e012      	b.n	10000b74 <_ntoa_long+0x44>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b4e:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
10000b52:	fa5f fc8c 	uxtb.w	ip, ip
10000b56:	f10e 0701 	add.w	r7, lr, #1
10000b5a:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
10000b5e:	44ee      	add	lr, sp
10000b60:	f80e cc20 	strb.w	ip, [lr, #-32]
      value /= base;
10000b64:	fbb4 fcf5 	udiv	ip, r4, r5
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000b68:	42ac      	cmp	r4, r5
10000b6a:	d31b      	bcc.n	10000ba4 <_ntoa_long+0x74>
10000b6c:	2f1f      	cmp	r7, #31
10000b6e:	d819      	bhi.n	10000ba4 <_ntoa_long+0x74>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b70:	46be      	mov	lr, r7
      value /= base;
10000b72:	4664      	mov	r4, ip
      const char digit = (char)(value % base);
10000b74:	fbb4 fcf5 	udiv	ip, r4, r5
10000b78:	fb05 4c1c 	mls	ip, r5, ip, r4
10000b7c:	fa5f fc8c 	uxtb.w	ip, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b80:	f1bc 0f09 	cmp.w	ip, #9
10000b84:	d9e3      	bls.n	10000b4e <_ntoa_long+0x1e>
10000b86:	f016 0f20 	tst.w	r6, #32
10000b8a:	d008      	beq.n	10000b9e <_ntoa_long+0x6e>
10000b8c:	2741      	movs	r7, #65	; 0x41
10000b8e:	44bc      	add	ip, r7
10000b90:	fa5f fc8c 	uxtb.w	ip, ip
10000b94:	f1ac 0c0a 	sub.w	ip, ip, #10
10000b98:	fa5f fc8c 	uxtb.w	ip, ip
10000b9c:	e7db      	b.n	10000b56 <_ntoa_long+0x26>
10000b9e:	2761      	movs	r7, #97	; 0x61
10000ba0:	e7f5      	b.n	10000b8e <_ntoa_long+0x5e>
  size_t len = 0U;
10000ba2:	4627      	mov	r7, r4
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000ba4:	9606      	str	r6, [sp, #24]
10000ba6:	9c1a      	ldr	r4, [sp, #104]	; 0x68
10000ba8:	9405      	str	r4, [sp, #20]
10000baa:	9c19      	ldr	r4, [sp, #100]	; 0x64
10000bac:	9404      	str	r4, [sp, #16]
10000bae:	9503      	str	r5, [sp, #12]
10000bb0:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
10000bb4:	9402      	str	r4, [sp, #8]
10000bb6:	9701      	str	r7, [sp, #4]
10000bb8:	ac08      	add	r4, sp, #32
10000bba:	9400      	str	r4, [sp, #0]
10000bbc:	f7ff ff1c 	bl	100009f8 <_ntoa_format>
}
10000bc0:	b011      	add	sp, #68	; 0x44
10000bc2:	bdf0      	pop	{r4, r5, r6, r7, pc}

10000bc4 <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000bc8:	b095      	sub	sp, #84	; 0x54
10000bca:	9009      	str	r0, [sp, #36]	; 0x24
10000bcc:	910a      	str	r1, [sp, #40]	; 0x28
10000bce:	920b      	str	r2, [sp, #44]	; 0x2c
10000bd0:	469b      	mov	fp, r3
10000bd2:	9d1e      	ldr	r5, [sp, #120]	; 0x78
10000bd4:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
10000bd6:	9f22      	ldr	r7, [sp, #136]	; 0x88
10000bd8:	f8dd 808c 	ldr.w	r8, [sp, #140]	; 0x8c
10000bdc:	f8dd a098 	ldr.w	sl, [sp, #152]	; 0x98
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000be0:	ea55 0306 	orrs.w	r3, r5, r6
10000be4:	d101      	bne.n	10000bea <_ntoa_long_long+0x26>
    flags &= ~FLAGS_HASH;
10000be6:	f02a 0a10 	bic.w	sl, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000bea:	f41a 6480 	ands.w	r4, sl, #1024	; 0x400
10000bee:	d01f      	beq.n	10000c30 <_ntoa_long_long+0x6c>
10000bf0:	ea55 0306 	orrs.w	r3, r5, r6
10000bf4:	d030      	beq.n	10000c58 <_ntoa_long_long+0x94>
10000bf6:	2400      	movs	r4, #0
10000bf8:	e01a      	b.n	10000c30 <_ntoa_long_long+0x6c>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000bfa:	f103 0230 	add.w	r2, r3, #48	; 0x30
10000bfe:	b2d2      	uxtb	r2, r2
10000c00:	f104 0901 	add.w	r9, r4, #1
10000c04:	f104 0350 	add.w	r3, r4, #80	; 0x50
10000c08:	eb0d 0403 	add.w	r4, sp, r3
10000c0c:	f804 2c20 	strb.w	r2, [r4, #-32]
      value /= base;
10000c10:	463a      	mov	r2, r7
10000c12:	4643      	mov	r3, r8
10000c14:	4628      	mov	r0, r5
10000c16:	4631      	mov	r1, r6
10000c18:	f001 ff8c 	bl	10002b34 <__aeabi_uldivmod>
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000c1c:	42bd      	cmp	r5, r7
10000c1e:	eb76 0308 	sbcs.w	r3, r6, r8
10000c22:	d31b      	bcc.n	10000c5c <_ntoa_long_long+0x98>
10000c24:	f1b9 0f1f 	cmp.w	r9, #31
10000c28:	d818      	bhi.n	10000c5c <_ntoa_long_long+0x98>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000c2a:	464c      	mov	r4, r9
      value /= base;
10000c2c:	4605      	mov	r5, r0
10000c2e:	460e      	mov	r6, r1
      const char digit = (char)(value % base);
10000c30:	463a      	mov	r2, r7
10000c32:	4643      	mov	r3, r8
10000c34:	4628      	mov	r0, r5
10000c36:	4631      	mov	r1, r6
10000c38:	f001 ff7c 	bl	10002b34 <__aeabi_uldivmod>
10000c3c:	b2d3      	uxtb	r3, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000c3e:	2b09      	cmp	r3, #9
10000c40:	d9db      	bls.n	10000bfa <_ntoa_long_long+0x36>
10000c42:	f01a 0f20 	tst.w	sl, #32
10000c46:	d005      	beq.n	10000c54 <_ntoa_long_long+0x90>
10000c48:	2241      	movs	r2, #65	; 0x41
10000c4a:	441a      	add	r2, r3
10000c4c:	b2d2      	uxtb	r2, r2
10000c4e:	3a0a      	subs	r2, #10
10000c50:	b2d2      	uxtb	r2, r2
10000c52:	e7d5      	b.n	10000c00 <_ntoa_long_long+0x3c>
10000c54:	2261      	movs	r2, #97	; 0x61
10000c56:	e7f8      	b.n	10000c4a <_ntoa_long_long+0x86>
  size_t len = 0U;
10000c58:	f04f 0900 	mov.w	r9, #0
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000c5c:	f8cd a018 	str.w	sl, [sp, #24]
10000c60:	9b25      	ldr	r3, [sp, #148]	; 0x94
10000c62:	9305      	str	r3, [sp, #20]
10000c64:	9b24      	ldr	r3, [sp, #144]	; 0x90
10000c66:	9304      	str	r3, [sp, #16]
10000c68:	9703      	str	r7, [sp, #12]
10000c6a:	f89d 3080 	ldrb.w	r3, [sp, #128]	; 0x80
10000c6e:	9302      	str	r3, [sp, #8]
10000c70:	f8cd 9004 	str.w	r9, [sp, #4]
10000c74:	ab0c      	add	r3, sp, #48	; 0x30
10000c76:	9300      	str	r3, [sp, #0]
10000c78:	465b      	mov	r3, fp
10000c7a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10000c7c:	990a      	ldr	r1, [sp, #40]	; 0x28
10000c7e:	9809      	ldr	r0, [sp, #36]	; 0x24
10000c80:	f7ff feba 	bl	100009f8 <_ntoa_format>
}
10000c84:	b015      	add	sp, #84	; 0x54
10000c86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10000c8a:	0000      	movs	r0, r0
10000c8c:	0000      	movs	r0, r0
	...

10000c90 <_etoa>:


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
10000c90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000c94:	ed2d 8b02 	vpush	{d8}
10000c98:	b091      	sub	sp, #68	; 0x44
10000c9a:	4682      	mov	sl, r0
10000c9c:	460c      	mov	r4, r1
10000c9e:	4693      	mov	fp, r2
10000ca0:	461d      	mov	r5, r3
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
10000ca2:	e9dd 231c 	ldrd	r2, r3, [sp, #112]	; 0x70
10000ca6:	4610      	mov	r0, r2
10000ca8:	4619      	mov	r1, r3
10000caa:	f001 fec9 	bl	10002a40 <__aeabi_dcmpeq>
10000cae:	2800      	cmp	r0, #0
10000cb0:	f000 8107 	beq.w	10000ec2 <_etoa+0x232>
10000cb4:	f04f 32ff 	mov.w	r2, #4294967295
10000cb8:	4bb1      	ldr	r3, [pc, #708]	; (10000f80 <_etoa+0x2f0>)
10000cba:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000cbe:	f001 fee7 	bl	10002a90 <__aeabi_dcmpgt>
10000cc2:	2800      	cmp	r0, #0
10000cc4:	f040 80fd 	bne.w	10000ec2 <_etoa+0x232>
10000cc8:	f04f 32ff 	mov.w	r2, #4294967295
10000ccc:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10000cd0:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000cd4:	f001 febe 	bl	10002a54 <__aeabi_dcmplt>
10000cd8:	2800      	cmp	r0, #0
10000cda:	f040 80f2 	bne.w	10000ec2 <_etoa+0x232>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
  }

  // determine the sign
  const bool negative = value < 0;
  if (negative) {
10000cde:	2200      	movs	r2, #0
10000ce0:	2300      	movs	r3, #0
10000ce2:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000ce6:	f001 feb5 	bl	10002a54 <__aeabi_dcmplt>
10000cea:	2800      	cmp	r0, #0
10000cec:	f040 80fe 	bne.w	10000eec <_etoa+0x25c>
10000cf0:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000cf4:	ed8d 7b06 	vstr	d7, [sp, #24]
    value = -value;
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
10000cf8:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000cfa:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
10000cfe:	930f      	str	r3, [sp, #60]	; 0x3c
10000d00:	d101      	bne.n	10000d06 <_etoa+0x76>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10000d02:	2306      	movs	r3, #6
10000d04:	931e      	str	r3, [sp, #120]	; 0x78
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
10000d06:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000d0a:	4602      	mov	r2, r0
10000d0c:	f3c1 500a 	ubfx	r0, r1, #20, #11
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
10000d10:	f3c1 0313 	ubfx	r3, r1, #0, #20
10000d14:	4690      	mov	r8, r2
10000d16:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
10000d1a:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
10000d1e:	f2a0 30ff 	subw	r0, r0, #1023	; 0x3ff
10000d22:	f001 fbbb 	bl	1000249c <__aeabi_i2d>
10000d26:	a384      	add	r3, pc, #528	; (adr r3, 10000f38 <_etoa+0x2a8>)
10000d28:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d2c:	f001 fc20 	bl	10002570 <__aeabi_dmul>
10000d30:	a383      	add	r3, pc, #524	; (adr r3, 10000f40 <_etoa+0x2b0>)
10000d32:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d36:	f001 fa65 	bl	10002204 <__adddf3>
10000d3a:	4606      	mov	r6, r0
10000d3c:	460f      	mov	r7, r1
10000d3e:	2200      	movs	r2, #0
10000d40:	4b90      	ldr	r3, [pc, #576]	; (10000f84 <_etoa+0x2f4>)
10000d42:	4640      	mov	r0, r8
10000d44:	4649      	mov	r1, r9
10000d46:	f001 fa5b 	bl	10002200 <__aeabi_dsub>
10000d4a:	a37f      	add	r3, pc, #508	; (adr r3, 10000f48 <_etoa+0x2b8>)
10000d4c:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d50:	f001 fc0e 	bl	10002570 <__aeabi_dmul>
10000d54:	4602      	mov	r2, r0
10000d56:	460b      	mov	r3, r1
10000d58:	4630      	mov	r0, r6
10000d5a:	4639      	mov	r1, r7
10000d5c:	f001 fa52 	bl	10002204 <__adddf3>
10000d60:	f001 fea0 	bl	10002aa4 <__aeabi_d2iz>
10000d64:	4606      	mov	r6, r0
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
10000d66:	f001 fb99 	bl	1000249c <__aeabi_i2d>
10000d6a:	4680      	mov	r8, r0
10000d6c:	4689      	mov	r9, r1
10000d6e:	a378      	add	r3, pc, #480	; (adr r3, 10000f50 <_etoa+0x2c0>)
10000d70:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d74:	f001 fbfc 	bl	10002570 <__aeabi_dmul>
10000d78:	2200      	movs	r2, #0
10000d7a:	4b83      	ldr	r3, [pc, #524]	; (10000f88 <_etoa+0x2f8>)
10000d7c:	f001 fa42 	bl	10002204 <__adddf3>
10000d80:	f001 fe90 	bl	10002aa4 <__aeabi_d2iz>
10000d84:	4607      	mov	r7, r0
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
10000d86:	a374      	add	r3, pc, #464	; (adr r3, 10000f58 <_etoa+0x2c8>)
10000d88:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d8c:	4640      	mov	r0, r8
10000d8e:	4649      	mov	r1, r9
10000d90:	f001 fbee 	bl	10002570 <__aeabi_dmul>
10000d94:	4680      	mov	r8, r0
10000d96:	4689      	mov	r9, r1
10000d98:	4638      	mov	r0, r7
10000d9a:	f001 fb7f 	bl	1000249c <__aeabi_i2d>
10000d9e:	a370      	add	r3, pc, #448	; (adr r3, 10000f60 <_etoa+0x2d0>)
10000da0:	e9d3 2300 	ldrd	r2, r3, [r3]
10000da4:	f001 fbe4 	bl	10002570 <__aeabi_dmul>
10000da8:	4602      	mov	r2, r0
10000daa:	460b      	mov	r3, r1
10000dac:	4640      	mov	r0, r8
10000dae:	4649      	mov	r1, r9
10000db0:	f001 fa26 	bl	10002200 <__aeabi_dsub>
10000db4:	4680      	mov	r8, r0
10000db6:	4689      	mov	r9, r1
  const double z2 = z * z;
10000db8:	4602      	mov	r2, r0
10000dba:	460b      	mov	r3, r1
10000dbc:	f001 fbd8 	bl	10002570 <__aeabi_dmul>
10000dc0:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
10000dc4:	f207 37ff 	addw	r7, r7, #1023	; 0x3ff
10000dc8:	2100      	movs	r1, #0
10000dca:	2200      	movs	r2, #0
10000dcc:	e9cd 1208 	strd	r1, r2, [sp, #32]
10000dd0:	053b      	lsls	r3, r7, #20
10000dd2:	9309      	str	r3, [sp, #36]	; 0x24
10000dd4:	2300      	movs	r3, #0
10000dd6:	9308      	str	r3, [sp, #32]
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
10000dd8:	4642      	mov	r2, r8
10000dda:	464b      	mov	r3, r9
10000ddc:	4640      	mov	r0, r8
10000dde:	4649      	mov	r1, r9
10000de0:	f001 fa10 	bl	10002204 <__adddf3>
10000de4:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
10000de8:	4642      	mov	r2, r8
10000dea:	464b      	mov	r3, r9
10000dec:	2000      	movs	r0, #0
10000dee:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
10000df2:	f001 fa05 	bl	10002200 <__aeabi_dsub>
10000df6:	4680      	mov	r8, r0
10000df8:	4689      	mov	r9, r1
10000dfa:	2200      	movs	r2, #0
10000dfc:	4b63      	ldr	r3, [pc, #396]	; (10000f8c <_etoa+0x2fc>)
10000dfe:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e02:	f001 fcdf 	bl	100027c4 <__aeabi_ddiv>
10000e06:	2200      	movs	r2, #0
10000e08:	4b61      	ldr	r3, [pc, #388]	; (10000f90 <_etoa+0x300>)
10000e0a:	f001 f9fb 	bl	10002204 <__adddf3>
10000e0e:	4602      	mov	r2, r0
10000e10:	460b      	mov	r3, r1
10000e12:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e16:	f001 fcd5 	bl	100027c4 <__aeabi_ddiv>
10000e1a:	2200      	movs	r2, #0
10000e1c:	4b5d      	ldr	r3, [pc, #372]	; (10000f94 <_etoa+0x304>)
10000e1e:	f001 f9f1 	bl	10002204 <__adddf3>
10000e22:	4602      	mov	r2, r0
10000e24:	460b      	mov	r3, r1
10000e26:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000e2a:	f001 fccb 	bl	100027c4 <__aeabi_ddiv>
10000e2e:	4602      	mov	r2, r0
10000e30:	460b      	mov	r3, r1
10000e32:	4640      	mov	r0, r8
10000e34:	4649      	mov	r1, r9
10000e36:	f001 f9e5 	bl	10002204 <__adddf3>
10000e3a:	4602      	mov	r2, r0
10000e3c:	460b      	mov	r3, r1
10000e3e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
10000e42:	f001 fcbf 	bl	100027c4 <__aeabi_ddiv>
10000e46:	2200      	movs	r2, #0
10000e48:	4b53      	ldr	r3, [pc, #332]	; (10000f98 <_etoa+0x308>)
10000e4a:	f001 f9db 	bl	10002204 <__adddf3>
10000e4e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10000e52:	f001 fb8d 	bl	10002570 <__aeabi_dmul>
10000e56:	4680      	mov	r8, r0
10000e58:	4689      	mov	r9, r1
10000e5a:	ec49 8b18 	vmov	d8, r8, r9
  // correct for rounding errors
  if (value < conv.F) {
10000e5e:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
10000e62:	f001 fe15 	bl	10002a90 <__aeabi_dcmpgt>
10000e66:	b140      	cbz	r0, 10000e7a <_etoa+0x1ea>
    expval--;
10000e68:	3e01      	subs	r6, #1
    conv.F /= 10;
10000e6a:	2200      	movs	r2, #0
10000e6c:	4b48      	ldr	r3, [pc, #288]	; (10000f90 <_etoa+0x300>)
10000e6e:	4640      	mov	r0, r8
10000e70:	4649      	mov	r1, r9
10000e72:	f001 fca7 	bl	100027c4 <__aeabi_ddiv>
10000e76:	ec41 0b18 	vmov	d8, r0, r1
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000e7a:	f106 0363 	add.w	r3, r6, #99	; 0x63
10000e7e:	2bc6      	cmp	r3, #198	; 0xc6
10000e80:	d83f      	bhi.n	10000f02 <_etoa+0x272>
10000e82:	2704      	movs	r7, #4

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
10000e84:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000e86:	f413 6f00 	tst.w	r3, #2048	; 0x800
10000e8a:	d044      	beq.n	10000f16 <_etoa+0x286>
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
10000e8c:	a336      	add	r3, pc, #216	; (adr r3, 10000f68 <_etoa+0x2d8>)
10000e8e:	e9d3 2300 	ldrd	r2, r3, [r3]
10000e92:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10000e96:	4640      	mov	r0, r8
10000e98:	4649      	mov	r1, r9
10000e9a:	f001 fdef 	bl	10002a7c <__aeabi_dcmpge>
10000e9e:	2800      	cmp	r0, #0
10000ea0:	d03f      	beq.n	10000f22 <_etoa+0x292>
10000ea2:	a333      	add	r3, pc, #204	; (adr r3, 10000f70 <_etoa+0x2e0>)
10000ea4:	e9d3 2300 	ldrd	r2, r3, [r3]
10000ea8:	4640      	mov	r0, r8
10000eaa:	4649      	mov	r1, r9
10000eac:	f001 fdd2 	bl	10002a54 <__aeabi_dcmplt>
10000eb0:	2800      	cmp	r0, #0
10000eb2:	d036      	beq.n	10000f22 <_etoa+0x292>
      if ((int)prec > expval) {
10000eb4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000eb6:	42b3      	cmp	r3, r6
10000eb8:	dd25      	ble.n	10000f06 <_etoa+0x276>
        prec = (unsigned)((int)prec - expval - 1);
10000eba:	1b9e      	subs	r6, r3, r6
10000ebc:	1e73      	subs	r3, r6, #1
10000ebe:	931e      	str	r3, [sp, #120]	; 0x78
10000ec0:	e023      	b.n	10000f0a <_etoa+0x27a>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
10000ec2:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000ec4:	9304      	str	r3, [sp, #16]
10000ec6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000ec8:	9303      	str	r3, [sp, #12]
10000eca:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000ecc:	9302      	str	r3, [sp, #8]
10000ece:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000ed2:	ed8d 7b00 	vstr	d7, [sp]
10000ed6:	462b      	mov	r3, r5
10000ed8:	465a      	mov	r2, fp
10000eda:	4621      	mov	r1, r4
10000edc:	4650      	mov	r0, sl
10000ede:	f000 f8cf 	bl	10001080 <_ftoa>
    if (flags & FLAGS_LEFT) {
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
    }
  }
  return idx;
}
10000ee2:	b011      	add	sp, #68	; 0x44
10000ee4:	ecbd 8b02 	vpop	{d8}
10000ee8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    value = -value;
10000eec:	ed9f 7b22 	vldr	d7, [pc, #136]	; 10000f78 <_etoa+0x2e8>
10000ef0:	ed8d 7b06 	vstr	d7, [sp, #24]
10000ef4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
10000ef6:	9306      	str	r3, [sp, #24]
10000ef8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
10000efa:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
10000efe:	9307      	str	r3, [sp, #28]
10000f00:	e6fa      	b.n	10000cf8 <_etoa+0x68>
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000f02:	2705      	movs	r7, #5
10000f04:	e7be      	b.n	10000e84 <_etoa+0x1f4>
        prec = 0;
10000f06:	2300      	movs	r3, #0
10000f08:	931e      	str	r3, [sp, #120]	; 0x78
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
10000f0a:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f0c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
10000f10:	9320      	str	r3, [sp, #128]	; 0x80
      minwidth = 0U;
10000f12:	2700      	movs	r7, #0
      expval   = 0;
10000f14:	463e      	mov	r6, r7
  if (width > minwidth) {
10000f16:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000f18:	429f      	cmp	r7, r3
10000f1a:	d23f      	bcs.n	10000f9c <_etoa+0x30c>
    fwidth -= minwidth;
10000f1c:	eba3 0807 	sub.w	r8, r3, r7
10000f20:	e03e      	b.n	10000fa0 <_etoa+0x310>
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
10000f22:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f24:	2b00      	cmp	r3, #0
10000f26:	d0f6      	beq.n	10000f16 <_etoa+0x286>
10000f28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000f2a:	2b00      	cmp	r3, #0
10000f2c:	d0f3      	beq.n	10000f16 <_etoa+0x286>
        --prec;
10000f2e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f30:	3b01      	subs	r3, #1
10000f32:	931e      	str	r3, [sp, #120]	; 0x78
10000f34:	e7ef      	b.n	10000f16 <_etoa+0x286>
10000f36:	bf00      	nop
10000f38:	509f79fb 			; <UNDEFINED> instruction: 0x509f79fb
10000f3c:	3fd34413 	svccc	0x00d34413
10000f40:	8b60c8b3 	blhi	11833214 <__copy_table_end__+0x182ec9c>
10000f44:	3fc68a28 	svccc	0x00c68a28
10000f48:	636f4361 	cmnvs	pc, #-2080374783	; 0x84000001
10000f4c:	3fd287a7 	svccc	0x00d287a7
10000f50:	0979a371 	ldmdbeq	r9!, {r0, r4, r5, r6, r8, r9, sp, pc}^
10000f54:	400a934f 	andmi	r9, sl, pc, asr #6
10000f58:	bbb55516 	bllt	ed563b8 <__RAM_SIZE+0xec563b8>
10000f5c:	40026bb1 			; <UNDEFINED> instruction: 0x40026bb1
10000f60:	fefa39ef 			; <UNDEFINED> instruction: 0xfefa39ef
10000f64:	3fe62e42 	svccc	0x00e62e42
10000f68:	eb1c432d 	bl	10711c24 <__copy_table_end__+0x70d6ac>
10000f6c:	3f1a36e2 	svccc	0x001a36e2
10000f70:	00000000 	andeq	r0, r0, r0
10000f74:	412e8480 	smlawbmi	lr, r0, r4, r8
	...
10000f80:	7fefffff 	svcvc	0x00efffff
10000f84:	3ff80000 	svccc	0x00f80000
10000f88:	3fe00000 	svccc	0x00e00000
10000f8c:	402c0000 	eormi	r0, ip, r0
10000f90:	40240000 	eormi	r0, r4, r0
10000f94:	40180000 	andsmi	r0, r8, r0
10000f98:	3ff00000 	svccc	0x00f00000	; IMB
    fwidth = 0U;
10000f9c:	f04f 0800 	mov.w	r8, #0
  if ((flags & FLAGS_LEFT) && minwidth) {
10000fa0:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000fa2:	f013 0902 	ands.w	r9, r3, #2
10000fa6:	d002      	beq.n	10000fae <_etoa+0x31e>
10000fa8:	b10f      	cbz	r7, 10000fae <_etoa+0x31e>
    fwidth = 0U;
10000faa:	f04f 0800 	mov.w	r8, #0
  if (expval) {
10000fae:	b13e      	cbz	r6, 10000fc0 <_etoa+0x330>
    value /= conv.F;
10000fb0:	ec53 2b18 	vmov	r2, r3, d8
10000fb4:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000fb8:	f001 fc04 	bl	100027c4 <__aeabi_ddiv>
10000fbc:	e9cd 0106 	strd	r0, r1, [sp, #24]
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10000fc0:	2200      	movs	r2, #0
10000fc2:	2300      	movs	r3, #0
10000fc4:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000fc8:	f001 fd44 	bl	10002a54 <__aeabi_dcmplt>
10000fcc:	2800      	cmp	r0, #0
10000fce:	d13d      	bne.n	1000104c <_etoa+0x3bc>
10000fd0:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000fd2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
10000fd6:	9304      	str	r3, [sp, #16]
10000fd8:	f8cd 800c 	str.w	r8, [sp, #12]
10000fdc:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000fde:	9302      	str	r3, [sp, #8]
10000fe0:	ed9d 7b06 	vldr	d7, [sp, #24]
10000fe4:	ed8d 7b00 	vstr	d7, [sp]
10000fe8:	462b      	mov	r3, r5
10000fea:	465a      	mov	r2, fp
10000fec:	4621      	mov	r1, r4
10000fee:	4650      	mov	r0, sl
10000ff0:	f000 f846 	bl	10001080 <_ftoa>
  if (minwidth) {
10000ff4:	2f00      	cmp	r7, #0
10000ff6:	f43f af74 	beq.w	10000ee2 <_etoa+0x252>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
10000ffa:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000ffc:	f013 0f20 	tst.w	r3, #32
10001000:	d02c      	beq.n	1000105c <_etoa+0x3cc>
10001002:	f04f 0c45 	mov.w	ip, #69	; 0x45
10001006:	f100 0801 	add.w	r8, r0, #1
1000100a:	462b      	mov	r3, r5
1000100c:	4602      	mov	r2, r0
1000100e:	4621      	mov	r1, r4
10001010:	4660      	mov	r0, ip
10001012:	47d0      	blx	sl
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
10001014:	ea86 73e6 	eor.w	r3, r6, r6, asr #31
10001018:	eba3 73e6 	sub.w	r3, r3, r6, asr #31
1000101c:	2205      	movs	r2, #5
1000101e:	9205      	str	r2, [sp, #20]
10001020:	3f01      	subs	r7, #1
10001022:	9704      	str	r7, [sp, #16]
10001024:	2200      	movs	r2, #0
10001026:	9203      	str	r2, [sp, #12]
10001028:	220a      	movs	r2, #10
1000102a:	9202      	str	r2, [sp, #8]
1000102c:	0ff0      	lsrs	r0, r6, #31
1000102e:	9001      	str	r0, [sp, #4]
10001030:	9300      	str	r3, [sp, #0]
10001032:	462b      	mov	r3, r5
10001034:	4642      	mov	r2, r8
10001036:	4621      	mov	r1, r4
10001038:	4650      	mov	r0, sl
1000103a:	f7ff fd79 	bl	10000b30 <_ntoa_long>
    if (flags & FLAGS_LEFT) {
1000103e:	f1b9 0f00 	cmp.w	r9, #0
10001042:	f43f af4e 	beq.w	10000ee2 <_etoa+0x252>
10001046:	4602      	mov	r2, r0
10001048:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
1000104a:	e010      	b.n	1000106e <_etoa+0x3de>
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
1000104c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10001050:	4602      	mov	r2, r0
10001052:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
10001056:	e9cd 2306 	strd	r2, r3, [sp, #24]
1000105a:	e7b9      	b.n	10000fd0 <_etoa+0x340>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
1000105c:	f04f 0c65 	mov.w	ip, #101	; 0x65
10001060:	e7d1      	b.n	10001006 <_etoa+0x376>
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
10001062:	1c56      	adds	r6, r2, #1
10001064:	462b      	mov	r3, r5
10001066:	4621      	mov	r1, r4
10001068:	2020      	movs	r0, #32
1000106a:	47d0      	blx	sl
1000106c:	4632      	mov	r2, r6
1000106e:	eba2 030b 	sub.w	r3, r2, fp
10001072:	42bb      	cmp	r3, r7
10001074:	d3f5      	bcc.n	10001062 <_etoa+0x3d2>
10001076:	4610      	mov	r0, r2
10001078:	e733      	b.n	10000ee2 <_etoa+0x252>
1000107a:	bf00      	nop
1000107c:	0000      	movs	r0, r0
	...

10001080 <_ftoa>:
{
10001080:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10001084:	ed2d 8b02 	vpush	{d8}
10001088:	b095      	sub	sp, #84	; 0x54
1000108a:	9007      	str	r0, [sp, #28]
1000108c:	910a      	str	r1, [sp, #40]	; 0x28
1000108e:	4692      	mov	sl, r2
10001090:	469b      	mov	fp, r3
10001092:	e9dd 8920 	ldrd	r8, r9, [sp, #128]	; 0x80
10001096:	9d22      	ldr	r5, [sp, #136]	; 0x88
  if (value != value)
10001098:	4642      	mov	r2, r8
1000109a:	464b      	mov	r3, r9
1000109c:	4640      	mov	r0, r8
1000109e:	4649      	mov	r1, r9
100010a0:	f001 fcce 	bl	10002a40 <__aeabi_dcmpeq>
100010a4:	2800      	cmp	r0, #0
100010a6:	d040      	beq.n	1000112a <_ftoa+0xaa>
  if (value < -DBL_MAX)
100010a8:	f04f 32ff 	mov.w	r2, #4294967295
100010ac:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
100010b0:	4640      	mov	r0, r8
100010b2:	4649      	mov	r1, r9
100010b4:	f001 fcce 	bl	10002a54 <__aeabi_dcmplt>
100010b8:	2800      	cmp	r0, #0
100010ba:	d145      	bne.n	10001148 <_ftoa+0xc8>
  if (value > DBL_MAX)
100010bc:	f04f 32ff 	mov.w	r2, #4294967295
100010c0:	4b9f      	ldr	r3, [pc, #636]	; (10001340 <_ftoa+0x2c0>)
100010c2:	4640      	mov	r0, r8
100010c4:	4649      	mov	r1, r9
100010c6:	f001 fce3 	bl	10002a90 <__aeabi_dcmpgt>
100010ca:	2800      	cmp	r0, #0
100010cc:	d14b      	bne.n	10001166 <_ftoa+0xe6>
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
100010ce:	a398      	add	r3, pc, #608	; (adr r3, 10001330 <_ftoa+0x2b0>)
100010d0:	e9d3 2300 	ldrd	r2, r3, [r3]
100010d4:	4640      	mov	r0, r8
100010d6:	4649      	mov	r1, r9
100010d8:	f001 fcda 	bl	10002a90 <__aeabi_dcmpgt>
100010dc:	2800      	cmp	r0, #0
100010de:	d15a      	bne.n	10001196 <_ftoa+0x116>
100010e0:	a395      	add	r3, pc, #596	; (adr r3, 10001338 <_ftoa+0x2b8>)
100010e2:	e9d3 2300 	ldrd	r2, r3, [r3]
100010e6:	4640      	mov	r0, r8
100010e8:	4649      	mov	r1, r9
100010ea:	f001 fcb3 	bl	10002a54 <__aeabi_dcmplt>
100010ee:	2800      	cmp	r0, #0
100010f0:	d151      	bne.n	10001196 <_ftoa+0x116>
  if (value < 0) {
100010f2:	2200      	movs	r2, #0
100010f4:	2300      	movs	r3, #0
100010f6:	4640      	mov	r0, r8
100010f8:	4649      	mov	r1, r9
100010fa:	f001 fcab 	bl	10002a54 <__aeabi_dcmplt>
100010fe:	2800      	cmp	r0, #0
10001100:	d157      	bne.n	100011b2 <_ftoa+0x132>
  bool negative = false;
10001102:	2300      	movs	r3, #0
10001104:	930b      	str	r3, [sp, #44]	; 0x2c
  if (!(flags & FLAGS_PRECISION)) {
10001106:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001108:	f413 6f80 	tst.w	r3, #1024	; 0x400
1000110c:	d05c      	beq.n	100011c8 <_ftoa+0x148>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
1000110e:	2400      	movs	r4, #0
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
10001110:	2c1f      	cmp	r4, #31
10001112:	d85b      	bhi.n	100011cc <_ftoa+0x14c>
10001114:	2d09      	cmp	r5, #9
10001116:	d959      	bls.n	100011cc <_ftoa+0x14c>
    buf[len++] = '0';
10001118:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000111c:	446b      	add	r3, sp
1000111e:	2230      	movs	r2, #48	; 0x30
10001120:	f803 2c20 	strb.w	r2, [r3, #-32]
    prec--;
10001124:	3d01      	subs	r5, #1
    buf[len++] = '0';
10001126:	3401      	adds	r4, #1
10001128:	e7f2      	b.n	10001110 <_ftoa+0x90>
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
1000112a:	9b24      	ldr	r3, [sp, #144]	; 0x90
1000112c:	9303      	str	r3, [sp, #12]
1000112e:	9b23      	ldr	r3, [sp, #140]	; 0x8c
10001130:	9302      	str	r3, [sp, #8]
10001132:	2303      	movs	r3, #3
10001134:	9301      	str	r3, [sp, #4]
10001136:	4b83      	ldr	r3, [pc, #524]	; (10001344 <_ftoa+0x2c4>)
10001138:	9300      	str	r3, [sp, #0]
1000113a:	465b      	mov	r3, fp
1000113c:	4652      	mov	r2, sl
1000113e:	990a      	ldr	r1, [sp, #40]	; 0x28
10001140:	9807      	ldr	r0, [sp, #28]
10001142:	f7ff fc1a 	bl	1000097a <_out_rev>
10001146:	e12c      	b.n	100013a2 <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
10001148:	9b24      	ldr	r3, [sp, #144]	; 0x90
1000114a:	9303      	str	r3, [sp, #12]
1000114c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000114e:	9302      	str	r3, [sp, #8]
10001150:	2304      	movs	r3, #4
10001152:	9301      	str	r3, [sp, #4]
10001154:	4b7c      	ldr	r3, [pc, #496]	; (10001348 <_ftoa+0x2c8>)
10001156:	9300      	str	r3, [sp, #0]
10001158:	465b      	mov	r3, fp
1000115a:	4652      	mov	r2, sl
1000115c:	990a      	ldr	r1, [sp, #40]	; 0x28
1000115e:	9807      	ldr	r0, [sp, #28]
10001160:	f7ff fc0b 	bl	1000097a <_out_rev>
10001164:	e11d      	b.n	100013a2 <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
10001166:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001168:	f013 0304 	ands.w	r3, r3, #4
1000116c:	d00f      	beq.n	1000118e <_ftoa+0x10e>
1000116e:	4a77      	ldr	r2, [pc, #476]	; (1000134c <_ftoa+0x2cc>)
10001170:	b17b      	cbz	r3, 10001192 <_ftoa+0x112>
10001172:	2304      	movs	r3, #4
10001174:	9924      	ldr	r1, [sp, #144]	; 0x90
10001176:	9103      	str	r1, [sp, #12]
10001178:	9923      	ldr	r1, [sp, #140]	; 0x8c
1000117a:	9102      	str	r1, [sp, #8]
1000117c:	9301      	str	r3, [sp, #4]
1000117e:	9200      	str	r2, [sp, #0]
10001180:	465b      	mov	r3, fp
10001182:	4652      	mov	r2, sl
10001184:	990a      	ldr	r1, [sp, #40]	; 0x28
10001186:	9807      	ldr	r0, [sp, #28]
10001188:	f7ff fbf7 	bl	1000097a <_out_rev>
1000118c:	e109      	b.n	100013a2 <_ftoa+0x322>
1000118e:	4a70      	ldr	r2, [pc, #448]	; (10001350 <_ftoa+0x2d0>)
10001190:	e7ee      	b.n	10001170 <_ftoa+0xf0>
10001192:	2303      	movs	r3, #3
10001194:	e7ee      	b.n	10001174 <_ftoa+0xf4>
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
10001196:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001198:	9304      	str	r3, [sp, #16]
1000119a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000119c:	9303      	str	r3, [sp, #12]
1000119e:	9502      	str	r5, [sp, #8]
100011a0:	e9cd 8900 	strd	r8, r9, [sp]
100011a4:	465b      	mov	r3, fp
100011a6:	4652      	mov	r2, sl
100011a8:	990a      	ldr	r1, [sp, #40]	; 0x28
100011aa:	9807      	ldr	r0, [sp, #28]
100011ac:	f7ff fd70 	bl	10000c90 <_etoa>
100011b0:	e0f7      	b.n	100013a2 <_ftoa+0x322>
    value = 0 - value;
100011b2:	4642      	mov	r2, r8
100011b4:	464b      	mov	r3, r9
100011b6:	2000      	movs	r0, #0
100011b8:	2100      	movs	r1, #0
100011ba:	f001 f821 	bl	10002200 <__aeabi_dsub>
100011be:	4680      	mov	r8, r0
100011c0:	4689      	mov	r9, r1
    negative = true;
100011c2:	2301      	movs	r3, #1
100011c4:	930b      	str	r3, [sp, #44]	; 0x2c
100011c6:	e79e      	b.n	10001106 <_ftoa+0x86>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
100011c8:	2506      	movs	r5, #6
100011ca:	e7a0      	b.n	1000110e <_ftoa+0x8e>
  int whole = (int)value;
100011cc:	4640      	mov	r0, r8
100011ce:	4649      	mov	r1, r9
100011d0:	f001 fc68 	bl	10002aa4 <__aeabi_d2iz>
100011d4:	4606      	mov	r6, r0
  double tmp = (value - whole) * pow10[prec];
100011d6:	f001 f961 	bl	1000249c <__aeabi_i2d>
100011da:	4602      	mov	r2, r0
100011dc:	460b      	mov	r3, r1
100011de:	4640      	mov	r0, r8
100011e0:	4649      	mov	r1, r9
100011e2:	f001 f80d 	bl	10002200 <__aeabi_dsub>
100011e6:	4b5b      	ldr	r3, [pc, #364]	; (10001354 <_ftoa+0x2d4>)
100011e8:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
100011ec:	ed93 8b00 	vldr	d8, [r3]
100011f0:	ec53 2b18 	vmov	r2, r3, d8
100011f4:	f001 f9bc 	bl	10002570 <__aeabi_dmul>
100011f8:	4602      	mov	r2, r0
100011fa:	460b      	mov	r3, r1
100011fc:	e9cd 2308 	strd	r2, r3, [sp, #32]
  unsigned long frac = (unsigned long)tmp;
10001200:	f001 fc78 	bl	10002af4 <__aeabi_d2uiz>
10001204:	4607      	mov	r7, r0
  diff = tmp - frac;
10001206:	f001 f939 	bl	1000247c <__aeabi_ui2d>
1000120a:	4602      	mov	r2, r0
1000120c:	460b      	mov	r3, r1
1000120e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10001212:	f000 fff5 	bl	10002200 <__aeabi_dsub>
10001216:	4602      	mov	r2, r0
10001218:	460b      	mov	r3, r1
1000121a:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (diff > 0.5) {
1000121e:	2200      	movs	r2, #0
10001220:	4b4d      	ldr	r3, [pc, #308]	; (10001358 <_ftoa+0x2d8>)
10001222:	f001 fc35 	bl	10002a90 <__aeabi_dcmpgt>
10001226:	b350      	cbz	r0, 1000127e <_ftoa+0x1fe>
    ++frac;
10001228:	3701      	adds	r7, #1
    if (frac >= pow10[prec]) {
1000122a:	4638      	mov	r0, r7
1000122c:	f001 f926 	bl	1000247c <__aeabi_ui2d>
10001230:	4602      	mov	r2, r0
10001232:	460b      	mov	r3, r1
10001234:	ec51 0b18 	vmov	r0, r1, d8
10001238:	f001 fc16 	bl	10002a68 <__aeabi_dcmple>
1000123c:	b108      	cbz	r0, 10001242 <_ftoa+0x1c2>
      ++whole;
1000123e:	3601      	adds	r6, #1
      frac = 0;
10001240:	2700      	movs	r7, #0
  if (prec == 0U) {
10001242:	bb55      	cbnz	r5, 1000129a <_ftoa+0x21a>
    diff = value - (double)whole;
10001244:	4630      	mov	r0, r6
10001246:	f001 f929 	bl	1000249c <__aeabi_i2d>
1000124a:	4602      	mov	r2, r0
1000124c:	460b      	mov	r3, r1
1000124e:	4640      	mov	r0, r8
10001250:	4649      	mov	r1, r9
10001252:	f000 ffd5 	bl	10002200 <__aeabi_dsub>
10001256:	4607      	mov	r7, r0
10001258:	4688      	mov	r8, r1
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
1000125a:	2200      	movs	r2, #0
1000125c:	4b3e      	ldr	r3, [pc, #248]	; (10001358 <_ftoa+0x2d8>)
1000125e:	f001 fbf9 	bl	10002a54 <__aeabi_dcmplt>
10001262:	b138      	cbz	r0, 10001274 <_ftoa+0x1f4>
10001264:	2200      	movs	r2, #0
10001266:	4b3c      	ldr	r3, [pc, #240]	; (10001358 <_ftoa+0x2d8>)
10001268:	4638      	mov	r0, r7
1000126a:	4641      	mov	r1, r8
1000126c:	f001 fc10 	bl	10002a90 <__aeabi_dcmpgt>
10001270:	2800      	cmp	r0, #0
10001272:	d042      	beq.n	100012fa <_ftoa+0x27a>
10001274:	f016 0f01 	tst.w	r6, #1
10001278:	d03f      	beq.n	100012fa <_ftoa+0x27a>
      ++whole;
1000127a:	3601      	adds	r6, #1
1000127c:	e03d      	b.n	100012fa <_ftoa+0x27a>
  else if (diff < 0.5) {
1000127e:	2200      	movs	r2, #0
10001280:	4b35      	ldr	r3, [pc, #212]	; (10001358 <_ftoa+0x2d8>)
10001282:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10001286:	f001 fbe5 	bl	10002a54 <__aeabi_dcmplt>
1000128a:	2800      	cmp	r0, #0
1000128c:	d1d9      	bne.n	10001242 <_ftoa+0x1c2>
  else if ((frac == 0U) || (frac & 1U)) {
1000128e:	b117      	cbz	r7, 10001296 <_ftoa+0x216>
10001290:	f017 0f01 	tst.w	r7, #1
10001294:	d0d5      	beq.n	10001242 <_ftoa+0x1c2>
    ++frac;
10001296:	3701      	adds	r7, #1
10001298:	e7d3      	b.n	10001242 <_ftoa+0x1c2>
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
1000129a:	2c1f      	cmp	r4, #31
1000129c:	d817      	bhi.n	100012ce <_ftoa+0x24e>
      --count;
1000129e:	3d01      	subs	r5, #1
      buf[len++] = (char)(48U + (frac % 10U));
100012a0:	4b2e      	ldr	r3, [pc, #184]	; (1000135c <_ftoa+0x2dc>)
100012a2:	fba3 2307 	umull	r2, r3, r3, r7
100012a6:	08db      	lsrs	r3, r3, #3
100012a8:	4619      	mov	r1, r3
100012aa:	eb03 0383 	add.w	r3, r3, r3, lsl #2
100012ae:	eba7 0343 	sub.w	r3, r7, r3, lsl #1
100012b2:	1c62      	adds	r2, r4, #1
100012b4:	3330      	adds	r3, #48	; 0x30
100012b6:	f104 0050 	add.w	r0, r4, #80	; 0x50
100012ba:	eb0d 0400 	add.w	r4, sp, r0
100012be:	f804 3c20 	strb.w	r3, [r4, #-32]
      if (!(frac /= 10U)) {
100012c2:	2f09      	cmp	r7, #9
100012c4:	d902      	bls.n	100012cc <_ftoa+0x24c>
100012c6:	460f      	mov	r7, r1
      buf[len++] = (char)(48U + (frac % 10U));
100012c8:	4614      	mov	r4, r2
100012ca:	e7e6      	b.n	1000129a <_ftoa+0x21a>
100012cc:	4614      	mov	r4, r2
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
100012ce:	2c1f      	cmp	r4, #31
100012d0:	d80a      	bhi.n	100012e8 <_ftoa+0x268>
100012d2:	1e6b      	subs	r3, r5, #1
100012d4:	b145      	cbz	r5, 100012e8 <_ftoa+0x268>
      buf[len++] = '0';
100012d6:	f104 0250 	add.w	r2, r4, #80	; 0x50
100012da:	446a      	add	r2, sp
100012dc:	2130      	movs	r1, #48	; 0x30
100012de:	f802 1c20 	strb.w	r1, [r2, #-32]
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
100012e2:	461d      	mov	r5, r3
      buf[len++] = '0';
100012e4:	3401      	adds	r4, #1
100012e6:	e7f2      	b.n	100012ce <_ftoa+0x24e>
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
100012e8:	2c1f      	cmp	r4, #31
100012ea:	d806      	bhi.n	100012fa <_ftoa+0x27a>
      buf[len++] = '.';
100012ec:	f104 0350 	add.w	r3, r4, #80	; 0x50
100012f0:	446b      	add	r3, sp
100012f2:	222e      	movs	r2, #46	; 0x2e
100012f4:	f803 2c20 	strb.w	r2, [r3, #-32]
100012f8:	3401      	adds	r4, #1
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
100012fa:	2c1f      	cmp	r4, #31
100012fc:	d833      	bhi.n	10001366 <_ftoa+0x2e6>
    buf[len++] = (char)(48 + (whole % 10));
100012fe:	4a18      	ldr	r2, [pc, #96]	; (10001360 <_ftoa+0x2e0>)
10001300:	fb82 3206 	smull	r3, r2, r2, r6
10001304:	17f3      	asrs	r3, r6, #31
10001306:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
1000130a:	461a      	mov	r2, r3
1000130c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
10001310:	eba6 0343 	sub.w	r3, r6, r3, lsl #1
10001314:	1c61      	adds	r1, r4, #1
10001316:	3330      	adds	r3, #48	; 0x30
10001318:	f104 0050 	add.w	r0, r4, #80	; 0x50
1000131c:	eb0d 0400 	add.w	r4, sp, r0
10001320:	f804 3c20 	strb.w	r3, [r4, #-32]
    if (!(whole /= 10)) {
10001324:	4616      	mov	r6, r2
10001326:	b1ea      	cbz	r2, 10001364 <_ftoa+0x2e4>
    buf[len++] = (char)(48 + (whole % 10));
10001328:	460c      	mov	r4, r1
1000132a:	e7e6      	b.n	100012fa <_ftoa+0x27a>
1000132c:	f3af 8000 	nop.w
10001330:	00000000 	andeq	r0, r0, r0
10001334:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10001338:	00000000 	andeq	r0, r0, r0
1000133c:	c1cdcd65 	bicgt	ip, sp, r5, ror #26
10001340:	7fefffff 	svcvc	0x00efffff
10001344:	10003ff8 	strdne	r3, [r0], -r8
10001348:	10003ffc 	strdne	r3, [r0], -ip
1000134c:	10003ff0 	strdne	r3, [r0], -r0
10001350:	10003fec 	andne	r3, r0, ip, ror #31
10001354:	10004008 	andne	r4, r0, r8
10001358:	3fe00000 	svccc	0x00e00000
1000135c:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
10001360:	66666667 	strbtvs	r6, [r6], -r7, ror #12
10001364:	460c      	mov	r4, r1
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
10001366:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001368:	f003 0303 	and.w	r3, r3, #3
1000136c:	2b01      	cmp	r3, #1
1000136e:	d01d      	beq.n	100013ac <_ftoa+0x32c>
  if (len < PRINTF_FTOA_BUFFER_SIZE) {
10001370:	2c1f      	cmp	r4, #31
10001372:	d809      	bhi.n	10001388 <_ftoa+0x308>
    if (negative) {
10001374:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10001376:	2b00      	cmp	r3, #0
10001378:	d035      	beq.n	100013e6 <_ftoa+0x366>
      buf[len++] = '-';
1000137a:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000137e:	446b      	add	r3, sp
10001380:	222d      	movs	r2, #45	; 0x2d
10001382:	f803 2c20 	strb.w	r2, [r3, #-32]
10001386:	3401      	adds	r4, #1
  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10001388:	9b24      	ldr	r3, [sp, #144]	; 0x90
1000138a:	9303      	str	r3, [sp, #12]
1000138c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000138e:	9302      	str	r3, [sp, #8]
10001390:	9401      	str	r4, [sp, #4]
10001392:	ab0c      	add	r3, sp, #48	; 0x30
10001394:	9300      	str	r3, [sp, #0]
10001396:	465b      	mov	r3, fp
10001398:	4652      	mov	r2, sl
1000139a:	990a      	ldr	r1, [sp, #40]	; 0x28
1000139c:	9807      	ldr	r0, [sp, #28]
1000139e:	f7ff faec 	bl	1000097a <_out_rev>
}
100013a2:	b015      	add	sp, #84	; 0x54
100013a4:	ecbd 8b02 	vpop	{d8}
100013a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
100013ac:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100013ae:	b1b3      	cbz	r3, 100013de <_ftoa+0x35e>
100013b0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
100013b2:	b91b      	cbnz	r3, 100013bc <_ftoa+0x33c>
100013b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
100013b6:	f013 0f0c 	tst.w	r3, #12
100013ba:	d012      	beq.n	100013e2 <_ftoa+0x362>
      width--;
100013bc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100013be:	3b01      	subs	r3, #1
100013c0:	9323      	str	r3, [sp, #140]	; 0x8c
100013c2:	4619      	mov	r1, r3
100013c4:	e006      	b.n	100013d4 <_ftoa+0x354>
      buf[len++] = '0';
100013c6:	f104 0350 	add.w	r3, r4, #80	; 0x50
100013ca:	446b      	add	r3, sp
100013cc:	2230      	movs	r2, #48	; 0x30
100013ce:	f803 2c20 	strb.w	r2, [r3, #-32]
100013d2:	3401      	adds	r4, #1
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
100013d4:	428c      	cmp	r4, r1
100013d6:	d2cb      	bcs.n	10001370 <_ftoa+0x2f0>
100013d8:	2c1f      	cmp	r4, #31
100013da:	d9f4      	bls.n	100013c6 <_ftoa+0x346>
100013dc:	e7c8      	b.n	10001370 <_ftoa+0x2f0>
100013de:	9923      	ldr	r1, [sp, #140]	; 0x8c
100013e0:	e7f8      	b.n	100013d4 <_ftoa+0x354>
100013e2:	9923      	ldr	r1, [sp, #140]	; 0x8c
100013e4:	e7f6      	b.n	100013d4 <_ftoa+0x354>
    else if (flags & FLAGS_PLUS) {
100013e6:	9b24      	ldr	r3, [sp, #144]	; 0x90
100013e8:	f013 0f04 	tst.w	r3, #4
100013ec:	d007      	beq.n	100013fe <_ftoa+0x37e>
      buf[len++] = '+';  // ignore the space if the '+' exists
100013ee:	f104 0350 	add.w	r3, r4, #80	; 0x50
100013f2:	446b      	add	r3, sp
100013f4:	222b      	movs	r2, #43	; 0x2b
100013f6:	f803 2c20 	strb.w	r2, [r3, #-32]
100013fa:	3401      	adds	r4, #1
100013fc:	e7c4      	b.n	10001388 <_ftoa+0x308>
    else if (flags & FLAGS_SPACE) {
100013fe:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001400:	f013 0f08 	tst.w	r3, #8
10001404:	d0c0      	beq.n	10001388 <_ftoa+0x308>
      buf[len++] = ' ';
10001406:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000140a:	446b      	add	r3, sp
1000140c:	2220      	movs	r2, #32
1000140e:	f803 2c20 	strb.w	r2, [r3, #-32]
10001412:	3401      	adds	r4, #1
10001414:	e7b8      	b.n	10001388 <_ftoa+0x308>
10001416:	bf00      	nop

10001418 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
10001418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000141c:	b08f      	sub	sp, #60	; 0x3c
1000141e:	4607      	mov	r7, r0
10001420:	4616      	mov	r6, r2
10001422:	930d      	str	r3, [sp, #52]	; 0x34
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
10001424:	4688      	mov	r8, r1
10001426:	2900      	cmp	r1, #0
10001428:	f000 8324 	beq.w	10001a74 <_vsnprintf+0x65c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
        break;
1000142c:	2400      	movs	r4, #0
  while (*format)
1000142e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001430:	7818      	ldrb	r0, [r3, #0]
10001432:	2800      	cmp	r0, #0
10001434:	f000 8320 	beq.w	10001a78 <_vsnprintf+0x660>
    if (*format != '%') {
10001438:	2825      	cmp	r0, #37	; 0x25
1000143a:	d009      	beq.n	10001450 <_vsnprintf+0x38>
      out(*format, buffer, idx++, maxlen);
1000143c:	1c65      	adds	r5, r4, #1
1000143e:	4633      	mov	r3, r6
10001440:	4622      	mov	r2, r4
10001442:	4641      	mov	r1, r8
10001444:	47b8      	blx	r7
      format++;
10001446:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001448:	3301      	adds	r3, #1
1000144a:	930d      	str	r3, [sp, #52]	; 0x34
      out(*format, buffer, idx++, maxlen);
1000144c:	462c      	mov	r4, r5
      continue;
1000144e:	e7ee      	b.n	1000142e <_vsnprintf+0x16>
      format++;
10001450:	3301      	adds	r3, #1
10001452:	930d      	str	r3, [sp, #52]	; 0x34
    flags = 0U;
10001454:	2500      	movs	r5, #0
      switch (*format) {
10001456:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001458:	7819      	ldrb	r1, [r3, #0]
1000145a:	f1a1 0220 	sub.w	r2, r1, #32
1000145e:	2a10      	cmp	r2, #16
10001460:	d80a      	bhi.n	10001478 <_vsnprintf+0x60>
10001462:	e8df f002 	tbb	[pc, r2]
10001466:	3d090938 	vstrcc.16	s0, [r9, #-112]	; 0xffffff90	; <UNPREDICTABLE>
1000146a:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
1000146e:	33090909 	movwcc	r0, #39177	; 0x9909
10001472:	09092e09 	stmdbeq	r9, {r0, r3, r9, sl, fp, sp}
10001476:	f1a10029 			; <UNDEFINED> instruction: 0xf1a10029
  return (ch >= '0') && (ch <= '9');
1000147a:	0330      	lsls	r0, r6, #12
1000147c:	b2db      	uxtb	r3, r3
    if (_is_digit(*format)) {
1000147e:	2b09      	cmp	r3, #9
10001480:	d933      	bls.n	100014ea <_vsnprintf+0xd2>
    else if (*format == '*') {
10001482:	292a      	cmp	r1, #42	; 0x2a
10001484:	d036      	beq.n	100014f4 <_vsnprintf+0xdc>
    width = 0U;
10001486:	2300      	movs	r3, #0
10001488:	930a      	str	r3, [sp, #40]	; 0x28
    if (*format == '.') {
1000148a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000148c:	781a      	ldrb	r2, [r3, #0]
1000148e:	2a2e      	cmp	r2, #46	; 0x2e
10001490:	d040      	beq.n	10001514 <_vsnprintf+0xfc>
    precision = 0U;
10001492:	f04f 0b00 	mov.w	fp, #0
    switch (*format) {
10001496:	9a0d      	ldr	r2, [sp, #52]	; 0x34
10001498:	7813      	ldrb	r3, [r2, #0]
1000149a:	3b68      	subs	r3, #104	; 0x68
1000149c:	2b12      	cmp	r3, #18
1000149e:	d877      	bhi.n	10001590 <_vsnprintf+0x178>
100014a0:	e8df f003 	tbb	[pc, r3]
100014a4:	76d37664 	ldrbvc	r7, [r3], r4, ror #12
100014a8:	76767656 			; <UNDEFINED> instruction: 0x76767656
100014ac:	76767676 			; <UNDEFINED> instruction: 0x76767676
100014b0:	76767672 			; <UNDEFINED> instruction: 0x76767672
100014b4:	00d87676 	sbcseq	r7, r8, r6, ror r6
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
100014b8:	f045 0501 	orr.w	r5, r5, #1
100014bc:	3301      	adds	r3, #1
100014be:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
100014c0:	e7c9      	b.n	10001456 <_vsnprintf+0x3e>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
100014c2:	f045 0502 	orr.w	r5, r5, #2
100014c6:	3301      	adds	r3, #1
100014c8:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
100014ca:	e7c4      	b.n	10001456 <_vsnprintf+0x3e>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
100014cc:	f045 0504 	orr.w	r5, r5, #4
100014d0:	3301      	adds	r3, #1
100014d2:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
100014d4:	e7bf      	b.n	10001456 <_vsnprintf+0x3e>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
100014d6:	f045 0508 	orr.w	r5, r5, #8
100014da:	3301      	adds	r3, #1
100014dc:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
100014de:	e7ba      	b.n	10001456 <_vsnprintf+0x3e>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
100014e0:	f045 0510 	orr.w	r5, r5, #16
100014e4:	3301      	adds	r3, #1
100014e6:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
100014e8:	e7b5      	b.n	10001456 <_vsnprintf+0x3e>
      width = _atoi(&format);
100014ea:	a80d      	add	r0, sp, #52	; 0x34
100014ec:	f7ff fa33 	bl	10000956 <_atoi>
100014f0:	900a      	str	r0, [sp, #40]	; 0x28
100014f2:	e7ca      	b.n	1000148a <_vsnprintf+0x72>
      const int w = va_arg(va, int);
100014f4:	9b18      	ldr	r3, [sp, #96]	; 0x60
100014f6:	1d1a      	adds	r2, r3, #4
100014f8:	9218      	str	r2, [sp, #96]	; 0x60
100014fa:	6818      	ldr	r0, [r3, #0]
      if (w < 0) {
100014fc:	2800      	cmp	r0, #0
100014fe:	db04      	blt.n	1000150a <_vsnprintf+0xf2>
        width = (unsigned int)w;
10001500:	900a      	str	r0, [sp, #40]	; 0x28
      format++;
10001502:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001504:	3301      	adds	r3, #1
10001506:	930d      	str	r3, [sp, #52]	; 0x34
10001508:	e7bf      	b.n	1000148a <_vsnprintf+0x72>
        flags |= FLAGS_LEFT;    // reverse padding
1000150a:	f045 0502 	orr.w	r5, r5, #2
        width = (unsigned int)-w;
1000150e:	4243      	negs	r3, r0
10001510:	930a      	str	r3, [sp, #40]	; 0x28
10001512:	e7f6      	b.n	10001502 <_vsnprintf+0xea>
      flags |= FLAGS_PRECISION;
10001514:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
      format++;
10001518:	1c5a      	adds	r2, r3, #1
1000151a:	920d      	str	r2, [sp, #52]	; 0x34
      if (_is_digit(*format)) {
1000151c:	785a      	ldrb	r2, [r3, #1]
  return (ch >= '0') && (ch <= '9');
1000151e:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
10001522:	b2db      	uxtb	r3, r3
      if (_is_digit(*format)) {
10001524:	2b09      	cmp	r3, #9
10001526:	d904      	bls.n	10001532 <_vsnprintf+0x11a>
      else if (*format == '*') {
10001528:	2a2a      	cmp	r2, #42	; 0x2a
1000152a:	d007      	beq.n	1000153c <_vsnprintf+0x124>
    precision = 0U;
1000152c:	f04f 0b00 	mov.w	fp, #0
10001530:	e7b1      	b.n	10001496 <_vsnprintf+0x7e>
        precision = _atoi(&format);
10001532:	a80d      	add	r0, sp, #52	; 0x34
10001534:	f7ff fa0f 	bl	10000956 <_atoi>
10001538:	4683      	mov	fp, r0
1000153a:	e7ac      	b.n	10001496 <_vsnprintf+0x7e>
        const int prec = (int)va_arg(va, int);
1000153c:	9b18      	ldr	r3, [sp, #96]	; 0x60
1000153e:	1d1a      	adds	r2, r3, #4
10001540:	9218      	str	r2, [sp, #96]	; 0x60
10001542:	681b      	ldr	r3, [r3, #0]
        precision = prec > 0 ? (unsigned int)prec : 0U;
10001544:	ea23 7be3 	bic.w	fp, r3, r3, asr #31
        format++;
10001548:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000154a:	3301      	adds	r3, #1
1000154c:	930d      	str	r3, [sp, #52]	; 0x34
1000154e:	e7a2      	b.n	10001496 <_vsnprintf+0x7e>
        flags |= FLAGS_LONG;
10001550:	f445 7180 	orr.w	r1, r5, #256	; 0x100
        format++;
10001554:	1c53      	adds	r3, r2, #1
10001556:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'l') {
10001558:	7852      	ldrb	r2, [r2, #1]
1000155a:	2a6c      	cmp	r2, #108	; 0x6c
1000155c:	d001      	beq.n	10001562 <_vsnprintf+0x14a>
        flags |= FLAGS_LONG;
1000155e:	460d      	mov	r5, r1
10001560:	e016      	b.n	10001590 <_vsnprintf+0x178>
          flags |= FLAGS_LONG_LONG;
10001562:	f445 7540 	orr.w	r5, r5, #768	; 0x300
          format++;
10001566:	3301      	adds	r3, #1
10001568:	930d      	str	r3, [sp, #52]	; 0x34
1000156a:	e011      	b.n	10001590 <_vsnprintf+0x178>
        flags |= FLAGS_SHORT;
1000156c:	f045 0180 	orr.w	r1, r5, #128	; 0x80
        format++;
10001570:	1c53      	adds	r3, r2, #1
10001572:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'h') {
10001574:	7852      	ldrb	r2, [r2, #1]
10001576:	2a68      	cmp	r2, #104	; 0x68
10001578:	d001      	beq.n	1000157e <_vsnprintf+0x166>
        flags |= FLAGS_SHORT;
1000157a:	460d      	mov	r5, r1
1000157c:	e008      	b.n	10001590 <_vsnprintf+0x178>
          flags |= FLAGS_CHAR;
1000157e:	f045 05c0 	orr.w	r5, r5, #192	; 0xc0
          format++;
10001582:	3301      	adds	r3, #1
10001584:	930d      	str	r3, [sp, #52]	; 0x34
10001586:	e003      	b.n	10001590 <_vsnprintf+0x178>
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
10001588:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
1000158c:	3201      	adds	r2, #1
1000158e:	920d      	str	r2, [sp, #52]	; 0x34
    switch (*format) {
10001590:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001592:	7818      	ldrb	r0, [r3, #0]
10001594:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
10001598:	2b53      	cmp	r3, #83	; 0x53
1000159a:	f200 8261 	bhi.w	10001a60 <_vsnprintf+0x648>
1000159e:	e8df f013 	tbh	[pc, r3, lsl #1]
100015a2:	025f0254 	subseq	r0, pc, #84, 4	; 0x40000005
100015a6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015aa:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015ae:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015b2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015b6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015ba:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015be:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015c2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015c6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015ca:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015ce:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015d2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015d6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015da:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015de:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015e2:	01540174 	cmpeq	r4, r4, ror r1
100015e6:	025f0174 	subseq	r0, pc, #116, 2
100015ea:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015ee:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015f2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015f6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015fa:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015fe:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001602:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001606:	005e025f 	subseq	r0, lr, pc, asr r2
1000160a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000160e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001612:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001616:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000161a:	005e025f 	subseq	r0, lr, pc, asr r2
1000161e:	005e019b 			; <UNDEFINED> instruction: 0x005e019b
10001622:	01540174 	cmpeq	r4, r4, ror r1
10001626:	025f0174 	subseq	r0, pc, #116, 2
1000162a:	025f005e 	subseq	r0, pc, #94	; 0x5e
1000162e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001632:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001636:	0239005e 	eorseq	r0, r9, #94	; 0x5e
1000163a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000163e:	025f01d4 	subseq	r0, pc, #212, 2	; 0x35
10001642:	025f005e 	subseq	r0, pc, #94	; 0x5e
10001646:	005e025f 	subseq	r0, lr, pc, asr r2
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
1000164a:	f445 7500 	orr.w	r5, r5, #512	; 0x200
        format++;
1000164e:	3201      	adds	r2, #1
10001650:	920d      	str	r2, [sp, #52]	; 0x34
        break;
10001652:	e79d      	b.n	10001590 <_vsnprintf+0x178>
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
10001654:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
10001658:	3201      	adds	r2, #1
1000165a:	920d      	str	r2, [sp, #52]	; 0x34
        break;
1000165c:	e798      	b.n	10001590 <_vsnprintf+0x178>
        if (*format == 'x' || *format == 'X') {
1000165e:	2878      	cmp	r0, #120	; 0x78
10001660:	d009      	beq.n	10001676 <_vsnprintf+0x25e>
10001662:	2858      	cmp	r0, #88	; 0x58
10001664:	d03a      	beq.n	100016dc <_vsnprintf+0x2c4>
        else if (*format == 'o') {
10001666:	286f      	cmp	r0, #111	; 0x6f
10001668:	d03a      	beq.n	100016e0 <_vsnprintf+0x2c8>
        else if (*format == 'b') {
1000166a:	2862      	cmp	r0, #98	; 0x62
1000166c:	d03a      	beq.n	100016e4 <_vsnprintf+0x2cc>
          flags &= ~FLAGS_HASH;   // no hash for dec format
1000166e:	f025 0510 	bic.w	r5, r5, #16
          base = 10U;
10001672:	230a      	movs	r3, #10
10001674:	e000      	b.n	10001678 <_vsnprintf+0x260>
          base = 16U;
10001676:	2310      	movs	r3, #16
        if (*format == 'X') {
10001678:	2858      	cmp	r0, #88	; 0x58
1000167a:	d035      	beq.n	100016e8 <_vsnprintf+0x2d0>
        if ((*format != 'i') && (*format != 'd')) {
1000167c:	2869      	cmp	r0, #105	; 0x69
1000167e:	d003      	beq.n	10001688 <_vsnprintf+0x270>
10001680:	2864      	cmp	r0, #100	; 0x64
10001682:	d001      	beq.n	10001688 <_vsnprintf+0x270>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
10001684:	f025 050c 	bic.w	r5, r5, #12
        if (flags & FLAGS_PRECISION) {
10001688:	f415 6f80 	tst.w	r5, #1024	; 0x400
1000168c:	d001      	beq.n	10001692 <_vsnprintf+0x27a>
          flags &= ~FLAGS_ZEROPAD;
1000168e:	f025 0501 	bic.w	r5, r5, #1
        if ((*format == 'i') || (*format == 'd')) {
10001692:	2869      	cmp	r0, #105	; 0x69
10001694:	d02b      	beq.n	100016ee <_vsnprintf+0x2d6>
10001696:	2864      	cmp	r0, #100	; 0x64
10001698:	d029      	beq.n	100016ee <_vsnprintf+0x2d6>
          if (flags & FLAGS_LONG_LONG) {
1000169a:	f415 7f00 	tst.w	r5, #512	; 0x200
1000169e:	f040 8096 	bne.w	100017ce <_vsnprintf+0x3b6>
          else if (flags & FLAGS_LONG) {
100016a2:	f415 7f80 	tst.w	r5, #256	; 0x100
100016a6:	f040 80ae 	bne.w	10001806 <_vsnprintf+0x3ee>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
100016aa:	f015 0f40 	tst.w	r5, #64	; 0x40
100016ae:	f000 80bf 	beq.w	10001830 <_vsnprintf+0x418>
100016b2:	9a18      	ldr	r2, [sp, #96]	; 0x60
100016b4:	1d11      	adds	r1, r2, #4
100016b6:	9118      	str	r1, [sp, #96]	; 0x60
100016b8:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
100016ba:	9505      	str	r5, [sp, #20]
100016bc:	990a      	ldr	r1, [sp, #40]	; 0x28
100016be:	9104      	str	r1, [sp, #16]
100016c0:	f8cd b00c 	str.w	fp, [sp, #12]
100016c4:	9302      	str	r3, [sp, #8]
100016c6:	2300      	movs	r3, #0
100016c8:	9301      	str	r3, [sp, #4]
100016ca:	9200      	str	r2, [sp, #0]
100016cc:	4633      	mov	r3, r6
100016ce:	4622      	mov	r2, r4
100016d0:	4641      	mov	r1, r8
100016d2:	4638      	mov	r0, r7
100016d4:	f7ff fa2c 	bl	10000b30 <_ntoa_long>
100016d8:	4604      	mov	r4, r0
100016da:	e029      	b.n	10001730 <_vsnprintf+0x318>
          base = 16U;
100016dc:	2310      	movs	r3, #16
100016de:	e7cb      	b.n	10001678 <_vsnprintf+0x260>
          base =  8U;
100016e0:	2308      	movs	r3, #8
100016e2:	e7c9      	b.n	10001678 <_vsnprintf+0x260>
          base =  2U;
100016e4:	2302      	movs	r3, #2
100016e6:	e7c7      	b.n	10001678 <_vsnprintf+0x260>
          flags |= FLAGS_UPPERCASE;
100016e8:	f045 0520 	orr.w	r5, r5, #32
100016ec:	e7c6      	b.n	1000167c <_vsnprintf+0x264>
          if (flags & FLAGS_LONG_LONG) {
100016ee:	f415 7f00 	tst.w	r5, #512	; 0x200
100016f2:	d121      	bne.n	10001738 <_vsnprintf+0x320>
          else if (flags & FLAGS_LONG) {
100016f4:	f415 7f80 	tst.w	r5, #256	; 0x100
100016f8:	d142      	bne.n	10001780 <_vsnprintf+0x368>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
100016fa:	f015 0f40 	tst.w	r5, #64	; 0x40
100016fe:	d058      	beq.n	100017b2 <_vsnprintf+0x39a>
10001700:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001702:	1d11      	adds	r1, r2, #4
10001704:	9118      	str	r1, [sp, #96]	; 0x60
10001706:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001708:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
1000170c:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
10001710:	9505      	str	r5, [sp, #20]
10001712:	980a      	ldr	r0, [sp, #40]	; 0x28
10001714:	9004      	str	r0, [sp, #16]
10001716:	f8cd b00c 	str.w	fp, [sp, #12]
1000171a:	9302      	str	r3, [sp, #8]
1000171c:	0fd2      	lsrs	r2, r2, #31
1000171e:	9201      	str	r2, [sp, #4]
10001720:	9100      	str	r1, [sp, #0]
10001722:	4633      	mov	r3, r6
10001724:	4622      	mov	r2, r4
10001726:	4641      	mov	r1, r8
10001728:	4638      	mov	r0, r7
1000172a:	f7ff fa01 	bl	10000b30 <_ntoa_long>
1000172e:	4604      	mov	r4, r0
        format++;
10001730:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001732:	3301      	adds	r3, #1
10001734:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001736:	e67a      	b.n	1000142e <_vsnprintf+0x16>
            const long long value = va_arg(va, long long);
10001738:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000173a:	3207      	adds	r2, #7
1000173c:	f022 0207 	bic.w	r2, r2, #7
10001740:	f102 0108 	add.w	r1, r2, #8
10001744:	9118      	str	r1, [sp, #96]	; 0x60
10001746:	6851      	ldr	r1, [r2, #4]
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001748:	6812      	ldr	r2, [r2, #0]
1000174a:	4608      	mov	r0, r1
1000174c:	2900      	cmp	r1, #0
1000174e:	db13      	blt.n	10001778 <_vsnprintf+0x360>
10001750:	9508      	str	r5, [sp, #32]
10001752:	9d0a      	ldr	r5, [sp, #40]	; 0x28
10001754:	9507      	str	r5, [sp, #28]
10001756:	f8cd b018 	str.w	fp, [sp, #24]
1000175a:	9304      	str	r3, [sp, #16]
1000175c:	2300      	movs	r3, #0
1000175e:	9305      	str	r3, [sp, #20]
10001760:	0fc9      	lsrs	r1, r1, #31
10001762:	9102      	str	r1, [sp, #8]
10001764:	9200      	str	r2, [sp, #0]
10001766:	9001      	str	r0, [sp, #4]
10001768:	4633      	mov	r3, r6
1000176a:	4622      	mov	r2, r4
1000176c:	4641      	mov	r1, r8
1000176e:	4638      	mov	r0, r7
10001770:	f7ff fa28 	bl	10000bc4 <_ntoa_long_long>
10001774:	4604      	mov	r4, r0
10001776:	e7db      	b.n	10001730 <_vsnprintf+0x318>
10001778:	4252      	negs	r2, r2
1000177a:	eb61 0041 	sbc.w	r0, r1, r1, lsl #1
1000177e:	e7e7      	b.n	10001750 <_vsnprintf+0x338>
            const long value = va_arg(va, long);
10001780:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001782:	1d11      	adds	r1, r2, #4
10001784:	9118      	str	r1, [sp, #96]	; 0x60
10001786:	6812      	ldr	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001788:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
1000178c:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
10001790:	9505      	str	r5, [sp, #20]
10001792:	980a      	ldr	r0, [sp, #40]	; 0x28
10001794:	9004      	str	r0, [sp, #16]
10001796:	f8cd b00c 	str.w	fp, [sp, #12]
1000179a:	9302      	str	r3, [sp, #8]
1000179c:	0fd2      	lsrs	r2, r2, #31
1000179e:	9201      	str	r2, [sp, #4]
100017a0:	9100      	str	r1, [sp, #0]
100017a2:	4633      	mov	r3, r6
100017a4:	4622      	mov	r2, r4
100017a6:	4641      	mov	r1, r8
100017a8:	4638      	mov	r0, r7
100017aa:	f7ff f9c1 	bl	10000b30 <_ntoa_long>
100017ae:	4604      	mov	r4, r0
100017b0:	e7be      	b.n	10001730 <_vsnprintf+0x318>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
100017b2:	f015 0f80 	tst.w	r5, #128	; 0x80
100017b6:	d005      	beq.n	100017c4 <_vsnprintf+0x3ac>
100017b8:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017ba:	1d11      	adds	r1, r2, #4
100017bc:	9118      	str	r1, [sp, #96]	; 0x60
100017be:	f9b2 2000 	ldrsh.w	r2, [r2]
100017c2:	e7a1      	b.n	10001708 <_vsnprintf+0x2f0>
100017c4:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017c6:	1d11      	adds	r1, r2, #4
100017c8:	9118      	str	r1, [sp, #96]	; 0x60
100017ca:	6812      	ldr	r2, [r2, #0]
100017cc:	e79c      	b.n	10001708 <_vsnprintf+0x2f0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
100017ce:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017d0:	3207      	adds	r2, #7
100017d2:	f022 0207 	bic.w	r2, r2, #7
100017d6:	f102 0108 	add.w	r1, r2, #8
100017da:	9118      	str	r1, [sp, #96]	; 0x60
100017dc:	9508      	str	r5, [sp, #32]
100017de:	990a      	ldr	r1, [sp, #40]	; 0x28
100017e0:	9107      	str	r1, [sp, #28]
100017e2:	f8cd b018 	str.w	fp, [sp, #24]
100017e6:	2100      	movs	r1, #0
100017e8:	9304      	str	r3, [sp, #16]
100017ea:	9105      	str	r1, [sp, #20]
100017ec:	9102      	str	r1, [sp, #8]
100017ee:	e9d2 2300 	ldrd	r2, r3, [r2]
100017f2:	e9cd 2300 	strd	r2, r3, [sp]
100017f6:	4633      	mov	r3, r6
100017f8:	4622      	mov	r2, r4
100017fa:	4641      	mov	r1, r8
100017fc:	4638      	mov	r0, r7
100017fe:	f7ff f9e1 	bl	10000bc4 <_ntoa_long_long>
10001802:	4604      	mov	r4, r0
10001804:	e794      	b.n	10001730 <_vsnprintf+0x318>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
10001806:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001808:	1d11      	adds	r1, r2, #4
1000180a:	9118      	str	r1, [sp, #96]	; 0x60
1000180c:	9505      	str	r5, [sp, #20]
1000180e:	990a      	ldr	r1, [sp, #40]	; 0x28
10001810:	9104      	str	r1, [sp, #16]
10001812:	f8cd b00c 	str.w	fp, [sp, #12]
10001816:	9302      	str	r3, [sp, #8]
10001818:	2300      	movs	r3, #0
1000181a:	9301      	str	r3, [sp, #4]
1000181c:	6813      	ldr	r3, [r2, #0]
1000181e:	9300      	str	r3, [sp, #0]
10001820:	4633      	mov	r3, r6
10001822:	4622      	mov	r2, r4
10001824:	4641      	mov	r1, r8
10001826:	4638      	mov	r0, r7
10001828:	f7ff f982 	bl	10000b30 <_ntoa_long>
1000182c:	4604      	mov	r4, r0
1000182e:	e77f      	b.n	10001730 <_vsnprintf+0x318>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
10001830:	f015 0f80 	tst.w	r5, #128	; 0x80
10001834:	d004      	beq.n	10001840 <_vsnprintf+0x428>
10001836:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001838:	1d11      	adds	r1, r2, #4
1000183a:	9118      	str	r1, [sp, #96]	; 0x60
1000183c:	8812      	ldrh	r2, [r2, #0]
1000183e:	e73c      	b.n	100016ba <_vsnprintf+0x2a2>
10001840:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001842:	1d11      	adds	r1, r2, #4
10001844:	9118      	str	r1, [sp, #96]	; 0x60
10001846:	6812      	ldr	r2, [r2, #0]
10001848:	e737      	b.n	100016ba <_vsnprintf+0x2a2>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
1000184a:	2846      	cmp	r0, #70	; 0x46
1000184c:	d01a      	beq.n	10001884 <_vsnprintf+0x46c>
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
1000184e:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001850:	3307      	adds	r3, #7
10001852:	f023 0307 	bic.w	r3, r3, #7
10001856:	f103 0208 	add.w	r2, r3, #8
1000185a:	9218      	str	r2, [sp, #96]	; 0x60
1000185c:	9504      	str	r5, [sp, #16]
1000185e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10001860:	9203      	str	r2, [sp, #12]
10001862:	f8cd b008 	str.w	fp, [sp, #8]
10001866:	e9d3 2300 	ldrd	r2, r3, [r3]
1000186a:	e9cd 2300 	strd	r2, r3, [sp]
1000186e:	4633      	mov	r3, r6
10001870:	4622      	mov	r2, r4
10001872:	4641      	mov	r1, r8
10001874:	4638      	mov	r0, r7
10001876:	f7ff fc03 	bl	10001080 <_ftoa>
1000187a:	4604      	mov	r4, r0
        format++;
1000187c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000187e:	3301      	adds	r3, #1
10001880:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001882:	e5d4      	b.n	1000142e <_vsnprintf+0x16>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
10001884:	f045 0520 	orr.w	r5, r5, #32
10001888:	e7e1      	b.n	1000184e <_vsnprintf+0x436>
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
1000188a:	2867      	cmp	r0, #103	; 0x67
1000188c:	d001      	beq.n	10001892 <_vsnprintf+0x47a>
1000188e:	2847      	cmp	r0, #71	; 0x47
10001890:	d101      	bne.n	10001896 <_vsnprintf+0x47e>
10001892:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
10001896:	2845      	cmp	r0, #69	; 0x45
10001898:	d001      	beq.n	1000189e <_vsnprintf+0x486>
1000189a:	2847      	cmp	r0, #71	; 0x47
1000189c:	d101      	bne.n	100018a2 <_vsnprintf+0x48a>
1000189e:	f045 0520 	orr.w	r5, r5, #32
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
100018a2:	9b18      	ldr	r3, [sp, #96]	; 0x60
100018a4:	3307      	adds	r3, #7
100018a6:	f023 0307 	bic.w	r3, r3, #7
100018aa:	f103 0208 	add.w	r2, r3, #8
100018ae:	9218      	str	r2, [sp, #96]	; 0x60
100018b0:	9504      	str	r5, [sp, #16]
100018b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100018b4:	9203      	str	r2, [sp, #12]
100018b6:	f8cd b008 	str.w	fp, [sp, #8]
100018ba:	e9d3 2300 	ldrd	r2, r3, [r3]
100018be:	e9cd 2300 	strd	r2, r3, [sp]
100018c2:	4633      	mov	r3, r6
100018c4:	4622      	mov	r2, r4
100018c6:	4641      	mov	r1, r8
100018c8:	4638      	mov	r0, r7
100018ca:	f7ff f9e1 	bl	10000c90 <_etoa>
100018ce:	4604      	mov	r4, r0
        format++;
100018d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100018d2:	3301      	adds	r3, #1
100018d4:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100018d6:	e5aa      	b.n	1000142e <_vsnprintf+0x16>
        if (!(flags & FLAGS_LEFT)) {
100018d8:	f015 0502 	ands.w	r5, r5, #2
100018dc:	d01f      	beq.n	1000191e <_vsnprintf+0x506>
        unsigned int l = 1U;
100018de:	f04f 0901 	mov.w	r9, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
100018e2:	9818      	ldr	r0, [sp, #96]	; 0x60
100018e4:	1d03      	adds	r3, r0, #4
100018e6:	9318      	str	r3, [sp, #96]	; 0x60
100018e8:	f104 0a01 	add.w	sl, r4, #1
100018ec:	4633      	mov	r3, r6
100018ee:	4622      	mov	r2, r4
100018f0:	4641      	mov	r1, r8
100018f2:	7800      	ldrb	r0, [r0, #0]
100018f4:	47b8      	blx	r7
        if (flags & FLAGS_LEFT) {
100018f6:	b9bd      	cbnz	r5, 10001928 <_vsnprintf+0x510>
        format++;
100018f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100018fa:	3301      	adds	r3, #1
100018fc:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100018fe:	4654      	mov	r4, sl
10001900:	e595      	b.n	1000142e <_vsnprintf+0x16>
            out(' ', buffer, idx++, maxlen);
10001902:	f102 0a01 	add.w	sl, r2, #1
10001906:	4633      	mov	r3, r6
10001908:	4641      	mov	r1, r8
1000190a:	2020      	movs	r0, #32
1000190c:	47b8      	blx	r7
          while (l++ < width) {
1000190e:	464b      	mov	r3, r9
            out(' ', buffer, idx++, maxlen);
10001910:	4652      	mov	r2, sl
          while (l++ < width) {
10001912:	f103 0901 	add.w	r9, r3, #1
10001916:	459b      	cmp	fp, r3
10001918:	d8f3      	bhi.n	10001902 <_vsnprintf+0x4ea>
1000191a:	4614      	mov	r4, r2
1000191c:	e7e1      	b.n	100018e2 <_vsnprintf+0x4ca>
        unsigned int l = 1U;
1000191e:	2301      	movs	r3, #1
10001920:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
10001924:	4622      	mov	r2, r4
10001926:	e7f4      	b.n	10001912 <_vsnprintf+0x4fa>
10001928:	4652      	mov	r2, sl
1000192a:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
1000192e:	e006      	b.n	1000193e <_vsnprintf+0x526>
            out(' ', buffer, idx++, maxlen);
10001930:	1c55      	adds	r5, r2, #1
10001932:	4633      	mov	r3, r6
10001934:	4641      	mov	r1, r8
10001936:	2020      	movs	r0, #32
10001938:	47b8      	blx	r7
          while (l++ < width) {
1000193a:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
1000193c:	462a      	mov	r2, r5
          while (l++ < width) {
1000193e:	f109 0401 	add.w	r4, r9, #1
10001942:	45ca      	cmp	sl, r9
10001944:	d8f4      	bhi.n	10001930 <_vsnprintf+0x518>
10001946:	4692      	mov	sl, r2
10001948:	e7d6      	b.n	100018f8 <_vsnprintf+0x4e0>
      }

      case 's' : {
        const char* p = va_arg(va, char*);
1000194a:	9b18      	ldr	r3, [sp, #96]	; 0x60
1000194c:	1d1a      	adds	r2, r3, #4
1000194e:	9218      	str	r2, [sp, #96]	; 0x60
10001950:	f8d3 a000 	ldr.w	sl, [r3]
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
10001954:	f1bb 0f00 	cmp.w	fp, #0
10001958:	d11e      	bne.n	10001998 <_vsnprintf+0x580>
1000195a:	f04f 33ff 	mov.w	r3, #4294967295
1000195e:	46d1      	mov	r9, sl
10001960:	e002      	b.n	10001968 <_vsnprintf+0x550>
  for (s = str; *s && maxsize--; ++s);
10001962:	f109 0901 	add.w	r9, r9, #1
10001966:	4613      	mov	r3, r2
10001968:	f899 2000 	ldrb.w	r2, [r9]
1000196c:	b112      	cbz	r2, 10001974 <_vsnprintf+0x55c>
1000196e:	1e5a      	subs	r2, r3, #1
10001970:	2b00      	cmp	r3, #0
10001972:	d1f6      	bne.n	10001962 <_vsnprintf+0x54a>
  return (unsigned int)(s - str);
10001974:	eba9 090a 	sub.w	r9, r9, sl
        // pre padding
        if (flags & FLAGS_PRECISION) {
10001978:	f415 6380 	ands.w	r3, r5, #1024	; 0x400
1000197c:	930b      	str	r3, [sp, #44]	; 0x2c
1000197e:	d002      	beq.n	10001986 <_vsnprintf+0x56e>
          l = (l < precision ? l : precision);
10001980:	45d9      	cmp	r9, fp
10001982:	bf28      	it	cs
10001984:	46d9      	movcs	r9, fp
        }
        if (!(flags & FLAGS_LEFT)) {
10001986:	f015 0302 	ands.w	r3, r5, #2
1000198a:	930c      	str	r3, [sp, #48]	; 0x30
1000198c:	d006      	beq.n	1000199c <_vsnprintf+0x584>
1000198e:	4622      	mov	r2, r4
10001990:	465c      	mov	r4, fp
10001992:	46b3      	mov	fp, r6
10001994:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
10001996:	e01d      	b.n	100019d4 <_vsnprintf+0x5bc>
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
10001998:	465b      	mov	r3, fp
1000199a:	e7e0      	b.n	1000195e <_vsnprintf+0x546>
1000199c:	4622      	mov	r2, r4
1000199e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
100019a0:	464b      	mov	r3, r9
100019a2:	e007      	b.n	100019b4 <_vsnprintf+0x59c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
100019a4:	f102 0901 	add.w	r9, r2, #1
100019a8:	4633      	mov	r3, r6
100019aa:	4641      	mov	r1, r8
100019ac:	2020      	movs	r0, #32
100019ae:	47b8      	blx	r7
          while (l++ < width) {
100019b0:	462b      	mov	r3, r5
            out(' ', buffer, idx++, maxlen);
100019b2:	464a      	mov	r2, r9
          while (l++ < width) {
100019b4:	1c5d      	adds	r5, r3, #1
100019b6:	429c      	cmp	r4, r3
100019b8:	d8f4      	bhi.n	100019a4 <_vsnprintf+0x58c>
100019ba:	46a9      	mov	r9, r5
100019bc:	465c      	mov	r4, fp
100019be:	46b3      	mov	fp, r6
100019c0:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
100019c2:	e007      	b.n	100019d4 <_vsnprintf+0x5bc>
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
100019c4:	461c      	mov	r4, r3
          out(*(p++), buffer, idx++, maxlen);
100019c6:	f10a 0a01 	add.w	sl, sl, #1
100019ca:	1c55      	adds	r5, r2, #1
100019cc:	465b      	mov	r3, fp
100019ce:	4641      	mov	r1, r8
100019d0:	47b8      	blx	r7
100019d2:	462a      	mov	r2, r5
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
100019d4:	f89a 0000 	ldrb.w	r0, [sl]
100019d8:	b120      	cbz	r0, 100019e4 <_vsnprintf+0x5cc>
100019da:	2e00      	cmp	r6, #0
100019dc:	d0f3      	beq.n	100019c6 <_vsnprintf+0x5ae>
100019de:	1e63      	subs	r3, r4, #1
100019e0:	2c00      	cmp	r4, #0
100019e2:	d1ef      	bne.n	100019c4 <_vsnprintf+0x5ac>
        }
        // post padding
        if (flags & FLAGS_LEFT) {
100019e4:	4614      	mov	r4, r2
100019e6:	465e      	mov	r6, fp
100019e8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
100019ea:	b91b      	cbnz	r3, 100019f4 <_vsnprintf+0x5dc>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
100019ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100019ee:	3301      	adds	r3, #1
100019f0:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100019f2:	e51c      	b.n	1000142e <_vsnprintf+0x16>
100019f4:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
100019f8:	e006      	b.n	10001a08 <_vsnprintf+0x5f0>
            out(' ', buffer, idx++, maxlen);
100019fa:	1c55      	adds	r5, r2, #1
100019fc:	4633      	mov	r3, r6
100019fe:	4641      	mov	r1, r8
10001a00:	2020      	movs	r0, #32
10001a02:	47b8      	blx	r7
          while (l++ < width) {
10001a04:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
10001a06:	462a      	mov	r2, r5
          while (l++ < width) {
10001a08:	f109 0401 	add.w	r4, r9, #1
10001a0c:	45ca      	cmp	sl, r9
10001a0e:	d8f4      	bhi.n	100019fa <_vsnprintf+0x5e2>
10001a10:	4614      	mov	r4, r2
10001a12:	e7eb      	b.n	100019ec <_vsnprintf+0x5d4>
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
10001a14:	f045 0521 	orr.w	r5, r5, #33	; 0x21
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
10001a18:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001a1a:	1d1a      	adds	r2, r3, #4
10001a1c:	9218      	str	r2, [sp, #96]	; 0x60
10001a1e:	681b      	ldr	r3, [r3, #0]
10001a20:	9505      	str	r5, [sp, #20]
10001a22:	2208      	movs	r2, #8
10001a24:	9204      	str	r2, [sp, #16]
10001a26:	f8cd b00c 	str.w	fp, [sp, #12]
10001a2a:	2210      	movs	r2, #16
10001a2c:	9202      	str	r2, [sp, #8]
10001a2e:	2200      	movs	r2, #0
10001a30:	9201      	str	r2, [sp, #4]
10001a32:	9300      	str	r3, [sp, #0]
10001a34:	4633      	mov	r3, r6
10001a36:	4622      	mov	r2, r4
10001a38:	4641      	mov	r1, r8
10001a3a:	4638      	mov	r0, r7
10001a3c:	f7ff f878 	bl	10000b30 <_ntoa_long>
10001a40:	4604      	mov	r4, r0
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
10001a42:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001a44:	3301      	adds	r3, #1
10001a46:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001a48:	e4f1      	b.n	1000142e <_vsnprintf+0x16>
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
10001a4a:	1c65      	adds	r5, r4, #1
10001a4c:	4633      	mov	r3, r6
10001a4e:	4622      	mov	r2, r4
10001a50:	4641      	mov	r1, r8
10001a52:	2025      	movs	r0, #37	; 0x25
10001a54:	47b8      	blx	r7
        format++;
10001a56:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001a58:	3301      	adds	r3, #1
10001a5a:	930d      	str	r3, [sp, #52]	; 0x34
        out('%', buffer, idx++, maxlen);
10001a5c:	462c      	mov	r4, r5
        break;
10001a5e:	e4e6      	b.n	1000142e <_vsnprintf+0x16>

      default :
        out(*format, buffer, idx++, maxlen);
10001a60:	1c65      	adds	r5, r4, #1
10001a62:	4633      	mov	r3, r6
10001a64:	4622      	mov	r2, r4
10001a66:	4641      	mov	r1, r8
10001a68:	47b8      	blx	r7
        format++;
10001a6a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001a6c:	3301      	adds	r3, #1
10001a6e:	930d      	str	r3, [sp, #52]	; 0x34
        out(*format, buffer, idx++, maxlen);
10001a70:	462c      	mov	r4, r5
        break;
10001a72:	e4dc      	b.n	1000142e <_vsnprintf+0x16>
    out = _out_null;
10001a74:	4f07      	ldr	r7, [pc, #28]	; (10001a94 <_vsnprintf+0x67c>)
10001a76:	e4d9      	b.n	1000142c <_vsnprintf+0x14>
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
10001a78:	42b4      	cmp	r4, r6
10001a7a:	d301      	bcc.n	10001a80 <_vsnprintf+0x668>
10001a7c:	1e72      	subs	r2, r6, #1
10001a7e:	e000      	b.n	10001a82 <_vsnprintf+0x66a>
10001a80:	4622      	mov	r2, r4
10001a82:	4633      	mov	r3, r6
10001a84:	4641      	mov	r1, r8
10001a86:	2000      	movs	r0, #0
10001a88:	47b8      	blx	r7

  // return written chars without terminating \0
  return (int)idx;
}
10001a8a:	4620      	mov	r0, r4
10001a8c:	b00f      	add	sp, #60	; 0x3c
10001a8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10001a92:	bf00      	nop
10001a94:	10000955 	andne	r0, r0, r5, asr r9

10001a98 <_out_char>:
  if (character) {
10001a98:	b900      	cbnz	r0, 10001a9c <_out_char+0x4>
10001a9a:	4770      	bx	lr
{
10001a9c:	b508      	push	{r3, lr}
    put_char(character);
10001a9e:	f000 f817 	bl	10001ad0 <put_char>
}
10001aa2:	bd08      	pop	{r3, pc}

10001aa4 <printf>:


///////////////////////////////////////////////////////////////////////////////

int printf(const char* format, ...)
{
10001aa4:	b40f      	push	{r0, r1, r2, r3}
10001aa6:	b500      	push	{lr}
10001aa8:	b085      	sub	sp, #20
10001aaa:	aa06      	add	r2, sp, #24
10001aac:	f852 3b04 	ldr.w	r3, [r2], #4
  va_list va;
  va_start(va, format);
10001ab0:	9203      	str	r2, [sp, #12]
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
10001ab2:	9200      	str	r2, [sp, #0]
10001ab4:	f04f 32ff 	mov.w	r2, #4294967295
10001ab8:	a902      	add	r1, sp, #8
10001aba:	4804      	ldr	r0, [pc, #16]	; (10001acc <printf+0x28>)
10001abc:	f7ff fcac 	bl	10001418 <_vsnprintf>
  va_end(va);
  return ret;
}
10001ac0:	b005      	add	sp, #20
10001ac2:	f85d eb04 	ldr.w	lr, [sp], #4
10001ac6:	b004      	add	sp, #16
10001ac8:	4770      	bx	lr
10001aca:	bf00      	nop
10001acc:	10001a99 	mulne	r0, r9, sl

10001ad0 <put_char>:
#define UART_MIS(base)          (*((volatile uint32_t *)(base + 0x40)))
#define UART_ICR(base)          (*((volatile uint32_t *)(base + 0x44)))
#define UART_DMACR(base)        (*((volatile uint32_t *)(base + 0x48)))

int put_char(int ch) {
    while (UART_FLAG(UART0) & 0x20);
10001ad0:	4b03      	ldr	r3, [pc, #12]	; (10001ae0 <put_char+0x10>)
10001ad2:	699b      	ldr	r3, [r3, #24]
10001ad4:	f013 0f20 	tst.w	r3, #32
10001ad8:	d1fa      	bne.n	10001ad0 <put_char>
    UART_DATA(UART0) = ch;
10001ada:	4b01      	ldr	r3, [pc, #4]	; (10001ae0 <put_char+0x10>)
10001adc:	6018      	str	r0, [r3, #0]
    return ch;
}
10001ade:	4770      	bx	lr
10001ae0:	40200000 	eormi	r0, r0, r0

10001ae4 <puts>:
int get_char(void) {
    while ((UART_FLAG(UART0) & 0x40) == 0);
    return UART_DATA(UART0);
}

int puts(const char* string) {
10001ae4:	b538      	push	{r3, r4, r5, lr}
10001ae6:	4605      	mov	r5, r0
    int index = 0;
10001ae8:	2400      	movs	r4, #0
    while (string[index] != '\0') {
10001aea:	e002      	b.n	10001af2 <puts+0xe>
        put_char(string[index]);
10001aec:	f7ff fff0 	bl	10001ad0 <put_char>
        index++;
10001af0:	3401      	adds	r4, #1
    while (string[index] != '\0') {
10001af2:	5d28      	ldrb	r0, [r5, r4]
10001af4:	2800      	cmp	r0, #0
10001af6:	d1f9      	bne.n	10001aec <puts+0x8>
    }
    put_char('\n');
10001af8:	200a      	movs	r0, #10
10001afa:	f7ff ffe9 	bl	10001ad0 <put_char>
    return index;
}
10001afe:	4620      	mov	r0, r4
10001b00:	bd38      	pop	{r3, r4, r5, pc}
	...

10001b04 <uart_init>:

void uart_init(void) {
    UART_IBRD(UART0) = 40;
10001b04:	4b07      	ldr	r3, [pc, #28]	; (10001b24 <uart_init+0x20>)
10001b06:	2228      	movs	r2, #40	; 0x28
10001b08:	625a      	str	r2, [r3, #36]	; 0x24
    UART_FBRD(UART0) = 11;
10001b0a:	220b      	movs	r2, #11
10001b0c:	629a      	str	r2, [r3, #40]	; 0x28
    UART_LCRH(UART0) = 0x60;
10001b0e:	2260      	movs	r2, #96	; 0x60
10001b10:	62da      	str	r2, [r3, #44]	; 0x2c
    UART_CR(UART0)   = 0x301;
10001b12:	f240 3201 	movw	r2, #769	; 0x301
10001b16:	631a      	str	r2, [r3, #48]	; 0x30
    UART_RSR(UART0)  = 0x0A;
10001b18:	220a      	movs	r2, #10
10001b1a:	605a      	str	r2, [r3, #4]
    UART_CTRL(UART0) = 0x01;
10001b1c:	2201      	movs	r2, #1
10001b1e:	609a      	str	r2, [r3, #8]
}
10001b20:	4770      	bx	lr
10001b22:	bf00      	nop
10001b24:	40200000 	eormi	r0, r0, r0

10001b28 <fault_dump_opcode>:
    FD_CODE_TEXT_BASE,  FD_CODE_TEXT_ENDS,  FD_CODE_TEXT_SIZE );
    printf("Code Stack Growth Downward:%d\r\n", 
    FD_STACK_GROWTH_DOWNWARD);
}

static unsigned int fault_dump_opcode(unsigned int pc) {
10001b28:	b082      	sub	sp, #8
    uint16_t value[2] = {0};
10001b2a:	2300      	movs	r3, #0
10001b2c:	9301      	str	r3, [sp, #4]
    unsigned int opcode = 0;
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001b2e:	e007      	b.n	10001b40 <fault_dump_opcode+0x18>
        value[i] = *(uint16_t*)(pc + i * sizeof(uint16_t));
10001b30:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
10001b34:	aa02      	add	r2, sp, #8
10001b36:	eb02 0243 	add.w	r2, r2, r3, lsl #1
10001b3a:	f822 1c04 	strh.w	r1, [r2, #-4]
    for (int i = 0; i < (sizeof(value) / sizeof(uint16_t)); i++) {
10001b3e:	3301      	adds	r3, #1
10001b40:	2b01      	cmp	r3, #1
10001b42:	d9f5      	bls.n	10001b30 <fault_dump_opcode+0x8>
    }
    opcode = ((unsigned int)value[1] << 0x10) |
10001b44:	f8bd 0006 	ldrh.w	r0, [sp, #6]
             ((unsigned int)value[0] << 0x00);
10001b48:	f8bd 3004 	ldrh.w	r3, [sp, #4]
    return opcode;
}
10001b4c:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
10001b50:	b002      	add	sp, #8
10001b52:	4770      	bx	lr

10001b54 <opcode_is_bl_or_blx>:

static bool opcode_is_bl_or_blx(unsigned int ins) {
#define FD_BL_OPCODE_MASK   (0xF800)
#define FD_BL_OPCODE_BL     (0xF000)
#define FD_BL_OPCODE_BLX    (0xF800)
    uint16_t opcode1 = (((ins >> 0x00) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001b54:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
    uint16_t opcode2 = (((ins >> 0x10) & 0xFFFF) & FD_BL_OPCODE_MASK);
10001b58:	0c00      	lsrs	r0, r0, #16
10001b5a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    if ((opcode1 == FD_BL_OPCODE_BL) || (opcode1 == FD_BL_OPCODE_BLX)) {
10001b5e:	f5b3 4f70 	cmp.w	r3, #61440	; 0xf000
10001b62:	d00a      	beq.n	10001b7a <opcode_is_bl_or_blx+0x26>
10001b64:	f5b3 4f78 	cmp.w	r3, #63488	; 0xf800
10001b68:	d009      	beq.n	10001b7e <opcode_is_bl_or_blx+0x2a>
        return true;
    }
    if ((opcode2 == FD_BL_OPCODE_BL) || (opcode2 == FD_BL_OPCODE_BLX)) {
10001b6a:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
10001b6e:	d008      	beq.n	10001b82 <opcode_is_bl_or_blx+0x2e>
10001b70:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
10001b74:	d007      	beq.n	10001b86 <opcode_is_bl_or_blx+0x32>
        return true;
    }
    return false;
10001b76:	2000      	movs	r0, #0
10001b78:	4770      	bx	lr
        return true;
10001b7a:	2001      	movs	r0, #1
10001b7c:	4770      	bx	lr
10001b7e:	2001      	movs	r0, #1
10001b80:	4770      	bx	lr
        return true;
10001b82:	2001      	movs	r0, #1
10001b84:	4770      	bx	lr
10001b86:	2001      	movs	r0, #1
}
10001b88:	4770      	bx	lr
	...

10001b8c <fault_dump_callstack>:
    }
    printf("\r\n");
    while (1);
}

int fault_dump_callstack(unsigned int *buffer, size_t size, unsigned int *stack_point, unsigned int *stack_start) {
10001b8c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    int count = 0;
    unsigned int pc = 0, op = 0, *sp = NULL;
    if ((buffer == NULL) || (size <= 0)) {
10001b90:	b348      	cbz	r0, 10001be6 <fault_dump_callstack+0x5a>
10001b92:	460f      	mov	r7, r1
10001b94:	4614      	mov	r4, r2
10001b96:	461d      	mov	r5, r3
10001b98:	4680      	mov	r8, r0
10001b9a:	b339      	cbz	r1, 10001bec <fault_dump_callstack+0x60>
        return -FD_EEMPTY;
    }
    FD_STACK_CHECKIT(stack_point, stack_start) {
10001b9c:	b34a      	cbz	r2, 10001bf2 <fault_dump_callstack+0x66>
10001b9e:	429a      	cmp	r2, r3
10001ba0:	d82a      	bhi.n	10001bf8 <fault_dump_callstack+0x6c>
    int count = 0;
10001ba2:	2600      	movs	r6, #0
10001ba4:	e000      	b.n	10001ba8 <fault_dump_callstack+0x1c>
        return -FD_EINVAL;
    }
    FD_STACK_FOREACH(stack_point, stack_start) {
10001ba6:	3404      	adds	r4, #4
10001ba8:	b1d4      	cbz	r4, 10001be0 <fault_dump_callstack+0x54>
10001baa:	42ac      	cmp	r4, r5
10001bac:	d818      	bhi.n	10001be0 <fault_dump_callstack+0x54>
        // Read stack[x] value to pc.
        pc = *(unsigned int *)sp;
10001bae:	6822      	ldr	r2, [r4, #0]
        // PC must be in the code segment.
        if ((pc < FD_CODE_TEXT_BASE) || (pc > FD_CODE_TEXT_ENDS)) {
10001bb0:	4813      	ldr	r0, [pc, #76]	; (10001c00 <fault_dump_callstack+0x74>)
10001bb2:	4290      	cmp	r0, r2
10001bb4:	d8f7      	bhi.n	10001ba6 <fault_dump_callstack+0x1a>
10001bb6:	4b13      	ldr	r3, [pc, #76]	; (10001c04 <fault_dump_callstack+0x78>)
10001bb8:	4293      	cmp	r3, r2
10001bba:	d3f4      	bcc.n	10001ba6 <fault_dump_callstack+0x1a>
            continue;
        }
        // The thumb instruction must be an odd number.
        if ((pc % 2) == 0) {
10001bbc:	f012 0f01 	tst.w	r2, #1
10001bc0:	d0f1      	beq.n	10001ba6 <fault_dump_callstack+0x1a>
            continue;
        }
        // Fix thumb instruction set.
        pc = pc - 1;
        // Calculate the address of the instruction being executed before pushing on the stack.
        pc = pc - sizeof(unsigned int);
10001bc2:	f1a2 0905 	sub.w	r9, r2, #5
        // The thumb instruction is at least 2-byte aligned.
        if ((pc & 0x1) != 0) {
10001bc6:	d0ee      	beq.n	10001ba6 <fault_dump_callstack+0x1a>
            continue;
        }
        // Read the instruction at the PC address.
        op = fault_dump_opcode(pc);
10001bc8:	4648      	mov	r0, r9
10001bca:	f7ff ffad 	bl	10001b28 <fault_dump_opcode>
        // Only BL or BLX opcode need to be recorded.
        if (!opcode_is_bl_or_blx(op)) {
10001bce:	f7ff ffc1 	bl	10001b54 <opcode_is_bl_or_blx>
10001bd2:	2800      	cmp	r0, #0
10001bd4:	d0e7      	beq.n	10001ba6 <fault_dump_callstack+0x1a>
            continue;
        }
        // storage this address.
        buffer[count] = pc;
10001bd6:	f848 9026 	str.w	r9, [r8, r6, lsl #2]
        count = count + 1;
10001bda:	3601      	adds	r6, #1
        if (count >= size) {
10001bdc:	42be      	cmp	r6, r7
10001bde:	d3e2      	bcc.n	10001ba6 <fault_dump_callstack+0x1a>
            break;
        }
    }
    return count;
}
10001be0:	4630      	mov	r0, r6
10001be2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        return -FD_EEMPTY;
10001be6:	f06f 0601 	mvn.w	r6, #1
10001bea:	e7f9      	b.n	10001be0 <fault_dump_callstack+0x54>
10001bec:	f06f 0601 	mvn.w	r6, #1
10001bf0:	e7f6      	b.n	10001be0 <fault_dump_callstack+0x54>
        return -FD_EINVAL;
10001bf2:	f06f 0602 	mvn.w	r6, #2
10001bf6:	e7f3      	b.n	10001be0 <fault_dump_callstack+0x54>
10001bf8:	f06f 0602 	mvn.w	r6, #2
10001bfc:	e7f0      	b.n	10001be0 <fault_dump_callstack+0x54>
10001bfe:	bf00      	nop
10001c00:	10000000 	andne	r0, r0, r0
10001c04:	10004494 	mulne	r0, r4, r4

10001c08 <dump_exc_return>:
static void dump_exc_return(unsigned int exc_return) {
10001c08:	b510      	push	{r4, lr}
10001c0a:	4604      	mov	r4, r0
    printf(" EXE_RETURN: 0x%08X \r\n", exc_return);
10001c0c:	4601      	mov	r1, r0
10001c0e:	4803      	ldr	r0, [pc, #12]	; (10001c1c <dump_exc_return+0x14>)
10001c10:	f7ff ff48 	bl	10001aa4 <printf>
    fault_dump_exc_return(exc_return);
10001c14:	4620      	mov	r0, r4
10001c16:	f000 f90d 	bl	10001e34 <fault_dump_exc_return>
}
10001c1a:	bd10      	pop	{r4, pc}
10001c1c:	10004058 	andne	r4, r0, r8, asr r0

10001c20 <stack_using_msp>:
static bool stack_using_msp(unsigned int exc_return) {
10001c20:	b508      	push	{r3, lr}
    result = fault_dump_using_msp(exc_return);
10001c22:	f000 f985 	bl	10001f30 <fault_dump_using_msp>
}
10001c26:	bd08      	pop	{r3, pc}

10001c28 <fault_dump_init>:
void fault_dump_init(void) {
10001c28:	b508      	push	{r3, lr}
    fd_main_stack_base = FD_CODE_STACK_BASE;
10001c2a:	490a      	ldr	r1, [pc, #40]	; (10001c54 <fault_dump_init+0x2c>)
10001c2c:	4b0a      	ldr	r3, [pc, #40]	; (10001c58 <fault_dump_init+0x30>)
10001c2e:	6019      	str	r1, [r3, #0]
    fd_main_stack_full = FD_CODE_STACK_FULL;
10001c30:	4a0a      	ldr	r2, [pc, #40]	; (10001c5c <fault_dump_init+0x34>)
10001c32:	4b0b      	ldr	r3, [pc, #44]	; (10001c60 <fault_dump_init+0x38>)
10001c34:	601a      	str	r2, [r3, #0]
    printf("Code Stack:[%08X - %08X], size:%d\r\n",
10001c36:	1a53      	subs	r3, r2, r1
10001c38:	480a      	ldr	r0, [pc, #40]	; (10001c64 <fault_dump_init+0x3c>)
10001c3a:	f7ff ff33 	bl	10001aa4 <printf>
    printf("Code Text :[%08X - %08X], size:%d\r\n",
10001c3e:	490a      	ldr	r1, [pc, #40]	; (10001c68 <fault_dump_init+0x40>)
10001c40:	4a0a      	ldr	r2, [pc, #40]	; (10001c6c <fault_dump_init+0x44>)
10001c42:	1a53      	subs	r3, r2, r1
10001c44:	480a      	ldr	r0, [pc, #40]	; (10001c70 <fault_dump_init+0x48>)
10001c46:	f7ff ff2d 	bl	10001aa4 <printf>
    printf("Code Stack Growth Downward:%d\r\n", 
10001c4a:	2101      	movs	r1, #1
10001c4c:	4809      	ldr	r0, [pc, #36]	; (10001c74 <fault_dump_init+0x4c>)
10001c4e:	f7ff ff29 	bl	10001aa4 <printf>
}
10001c52:	bd08      	pop	{r3, pc}
10001c54:	380ff000 	stmdacc	pc, {ip, sp, lr, pc}	; <UNPREDICTABLE>
10001c58:	38000564 	stmdacc	r0, {r2, r5, r6, r8, sl}
10001c5c:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001c60:	38000568 	stmdacc	r0, {r3, r5, r6, r8, sl}
10001c64:	10004070 	andne	r4, r0, r0, ror r0
10001c68:	10000000 	andne	r0, r0, r0
10001c6c:	10004494 	mulne	r0, r4, r4
10001c70:	10004094 	mulne	r0, r4, r0
10001c74:	100040b8 	strhne	r4, [r0], -r8

10001c78 <fault_dump_handler>:
void fault_dump_handler(unsigned int *stack, unsigned int linker) {
10001c78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10001c7a:	4605      	mov	r5, r0
10001c7c:	460e      	mov	r6, r1
    frame.manual.r4  = FD_STACK_READVAL(point);
10001c7e:	6803      	ldr	r3, [r0, #0]
10001c80:	4c4e      	ldr	r4, [pc, #312]	; (10001dbc <fault_dump_handler+0x144>)
10001c82:	6023      	str	r3, [r4, #0]
    frame.manual.r5  = FD_STACK_READVAL(point);
10001c84:	6843      	ldr	r3, [r0, #4]
10001c86:	6063      	str	r3, [r4, #4]
    frame.manual.r6  = FD_STACK_READVAL(point);
10001c88:	6883      	ldr	r3, [r0, #8]
10001c8a:	60a3      	str	r3, [r4, #8]
    frame.manual.r7  = FD_STACK_READVAL(point);
10001c8c:	68c3      	ldr	r3, [r0, #12]
10001c8e:	60e3      	str	r3, [r4, #12]
    frame.manual.r8  = FD_STACK_READVAL(point);
10001c90:	6903      	ldr	r3, [r0, #16]
10001c92:	6123      	str	r3, [r4, #16]
    frame.manual.r9  = FD_STACK_READVAL(point);
10001c94:	6943      	ldr	r3, [r0, #20]
10001c96:	6163      	str	r3, [r4, #20]
    frame.manual.r10 = FD_STACK_READVAL(point);
10001c98:	6983      	ldr	r3, [r0, #24]
10001c9a:	61a3      	str	r3, [r4, #24]
    frame.manual.r11 = FD_STACK_READVAL(point);
10001c9c:	69c3      	ldr	r3, [r0, #28]
10001c9e:	61e3      	str	r3, [r4, #28]
    frame.except.r0  = FD_STACK_READVAL(point);
10001ca0:	6a03      	ldr	r3, [r0, #32]
10001ca2:	6223      	str	r3, [r4, #32]
    frame.except.r1  = FD_STACK_READVAL(point);
10001ca4:	6a43      	ldr	r3, [r0, #36]	; 0x24
10001ca6:	6263      	str	r3, [r4, #36]	; 0x24
    frame.except.r2  = FD_STACK_READVAL(point);
10001ca8:	6a83      	ldr	r3, [r0, #40]	; 0x28
10001caa:	62a3      	str	r3, [r4, #40]	; 0x28
    frame.except.r3  = FD_STACK_READVAL(point);
10001cac:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
10001cae:	62e3      	str	r3, [r4, #44]	; 0x2c
    frame.except.r12 = FD_STACK_READVAL(point);
10001cb0:	6b03      	ldr	r3, [r0, #48]	; 0x30
10001cb2:	6323      	str	r3, [r4, #48]	; 0x30
    frame.except.lr  = FD_STACK_READVAL(point);
10001cb4:	6b43      	ldr	r3, [r0, #52]	; 0x34
10001cb6:	6363      	str	r3, [r4, #52]	; 0x34
    frame.except.pc  = FD_STACK_READVAL(point);
10001cb8:	6b83      	ldr	r3, [r0, #56]	; 0x38
10001cba:	63a3      	str	r3, [r4, #56]	; 0x38
    frame.except.psr = FD_STACK_READVAL(point);
10001cbc:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
10001cbe:	63e3      	str	r3, [r4, #60]	; 0x3c
    printf("\r\n");
10001cc0:	4f3f      	ldr	r7, [pc, #252]	; (10001dc0 <fault_dump_handler+0x148>)
10001cc2:	4638      	mov	r0, r7
10001cc4:	f7ff ff0e 	bl	10001ae4 <puts>
    printf(" HardFault Information Dump \r\n");
10001cc8:	483e      	ldr	r0, [pc, #248]	; (10001dc4 <fault_dump_handler+0x14c>)
10001cca:	f7ff ff0b 	bl	10001ae4 <puts>
    printf(" Stack Frame   \r\n");
10001cce:	483e      	ldr	r0, [pc, #248]	; (10001dc8 <fault_dump_handler+0x150>)
10001cd0:	f7ff ff08 	bl	10001ae4 <puts>
    printf(" R0   = 0x%08X \r\n", (unsigned int)frame.except.r0);
10001cd4:	6a21      	ldr	r1, [r4, #32]
10001cd6:	483d      	ldr	r0, [pc, #244]	; (10001dcc <fault_dump_handler+0x154>)
10001cd8:	f7ff fee4 	bl	10001aa4 <printf>
    printf(" R1   = 0x%08X \r\n", (unsigned int)frame.except.r1);
10001cdc:	6a61      	ldr	r1, [r4, #36]	; 0x24
10001cde:	483c      	ldr	r0, [pc, #240]	; (10001dd0 <fault_dump_handler+0x158>)
10001ce0:	f7ff fee0 	bl	10001aa4 <printf>
    printf(" R2   = 0x%08X \r\n", (unsigned int)frame.except.r2);
10001ce4:	6aa1      	ldr	r1, [r4, #40]	; 0x28
10001ce6:	483b      	ldr	r0, [pc, #236]	; (10001dd4 <fault_dump_handler+0x15c>)
10001ce8:	f7ff fedc 	bl	10001aa4 <printf>
    printf(" R3   = 0x%08X \r\n", (unsigned int)frame.except.r3);
10001cec:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
10001cee:	483a      	ldr	r0, [pc, #232]	; (10001dd8 <fault_dump_handler+0x160>)
10001cf0:	f7ff fed8 	bl	10001aa4 <printf>
    printf(" R4   = 0x%08X \r\n", (unsigned int)frame.manual.r4);
10001cf4:	6821      	ldr	r1, [r4, #0]
10001cf6:	4839      	ldr	r0, [pc, #228]	; (10001ddc <fault_dump_handler+0x164>)
10001cf8:	f7ff fed4 	bl	10001aa4 <printf>
    printf(" R5   = 0x%08X \r\n", (unsigned int)frame.manual.r5);
10001cfc:	6861      	ldr	r1, [r4, #4]
10001cfe:	4838      	ldr	r0, [pc, #224]	; (10001de0 <fault_dump_handler+0x168>)
10001d00:	f7ff fed0 	bl	10001aa4 <printf>
    printf(" R6   = 0x%08X \r\n", (unsigned int)frame.manual.r6);
10001d04:	68a1      	ldr	r1, [r4, #8]
10001d06:	4837      	ldr	r0, [pc, #220]	; (10001de4 <fault_dump_handler+0x16c>)
10001d08:	f7ff fecc 	bl	10001aa4 <printf>
    printf(" R7   = 0x%08X \r\n", (unsigned int)frame.manual.r7);
10001d0c:	68e1      	ldr	r1, [r4, #12]
10001d0e:	4836      	ldr	r0, [pc, #216]	; (10001de8 <fault_dump_handler+0x170>)
10001d10:	f7ff fec8 	bl	10001aa4 <printf>
    printf(" R8   = 0x%08X \r\n", (unsigned int)frame.manual.r8);
10001d14:	6921      	ldr	r1, [r4, #16]
10001d16:	4835      	ldr	r0, [pc, #212]	; (10001dec <fault_dump_handler+0x174>)
10001d18:	f7ff fec4 	bl	10001aa4 <printf>
    printf(" R9   = 0x%08X \r\n", (unsigned int)frame.manual.r9);
10001d1c:	6961      	ldr	r1, [r4, #20]
10001d1e:	4834      	ldr	r0, [pc, #208]	; (10001df0 <fault_dump_handler+0x178>)
10001d20:	f7ff fec0 	bl	10001aa4 <printf>
    printf(" R10  = 0x%08X \r\n", (unsigned int)frame.manual.r10);
10001d24:	69a1      	ldr	r1, [r4, #24]
10001d26:	4833      	ldr	r0, [pc, #204]	; (10001df4 <fault_dump_handler+0x17c>)
10001d28:	f7ff febc 	bl	10001aa4 <printf>
    printf(" R11  = 0x%08X \r\n", (unsigned int)frame.manual.r11);
10001d2c:	69e1      	ldr	r1, [r4, #28]
10001d2e:	4832      	ldr	r0, [pc, #200]	; (10001df8 <fault_dump_handler+0x180>)
10001d30:	f7ff feb8 	bl	10001aa4 <printf>
    printf(" R12  = 0x%08X \r\n", (unsigned int)frame.except.r12);
10001d34:	6b21      	ldr	r1, [r4, #48]	; 0x30
10001d36:	4831      	ldr	r0, [pc, #196]	; (10001dfc <fault_dump_handler+0x184>)
10001d38:	f7ff feb4 	bl	10001aa4 <printf>
    printf(" LR   = 0x%08X \r\n", (unsigned int)frame.except.lr);
10001d3c:	6b61      	ldr	r1, [r4, #52]	; 0x34
10001d3e:	4830      	ldr	r0, [pc, #192]	; (10001e00 <fault_dump_handler+0x188>)
10001d40:	f7ff feb0 	bl	10001aa4 <printf>
    printf(" PC   = 0x%08X \r\n", (unsigned int)frame.except.pc);
10001d44:	6ba1      	ldr	r1, [r4, #56]	; 0x38
10001d46:	482f      	ldr	r0, [pc, #188]	; (10001e04 <fault_dump_handler+0x18c>)
10001d48:	f7ff feac 	bl	10001aa4 <printf>
    printf(" PSR  = 0x%08X \r\n", (unsigned int)frame.except.psr);
10001d4c:	6be1      	ldr	r1, [r4, #60]	; 0x3c
10001d4e:	482e      	ldr	r0, [pc, #184]	; (10001e08 <fault_dump_handler+0x190>)
10001d50:	f7ff fea8 	bl	10001aa4 <printf>
    printf("\r\n");
10001d54:	4638      	mov	r0, r7
10001d56:	f7ff fec5 	bl	10001ae4 <puts>
    dump_exc_return(linker);
10001d5a:	4630      	mov	r0, r6
10001d5c:	f7ff ff54 	bl	10001c08 <dump_exc_return>
    if (stack_using_msp(linker)) {
10001d60:	4630      	mov	r0, r6
10001d62:	f7ff ff5d 	bl	10001c20 <stack_using_msp>
10001d66:	b190      	cbz	r0, 10001d8e <fault_dump_handler+0x116>
        count = fd_msp_stack_parser(buffer, FD_STACK_DUMP_DEPTH_MAX, 
10001d68:	4b28      	ldr	r3, [pc, #160]	; (10001e0c <fault_dump_handler+0x194>)
10001d6a:	681c      	ldr	r4, [r3, #0]
10001d6c:	4b28      	ldr	r3, [pc, #160]	; (10001e10 <fault_dump_handler+0x198>)
10001d6e:	f105 0240 	add.w	r2, r5, #64	; 0x40
10001d72:	2140      	movs	r1, #64	; 0x40
10001d74:	4827      	ldr	r0, [pc, #156]	; (10001e14 <fault_dump_handler+0x19c>)
10001d76:	47a0      	blx	r4
10001d78:	4605      	mov	r5, r0
    printf(" Stack Call: ");
10001d7a:	4827      	ldr	r0, [pc, #156]	; (10001e18 <fault_dump_handler+0x1a0>)
10001d7c:	f7ff fe92 	bl	10001aa4 <printf>
    printf("%08X ", (unsigned int)frame.except.pc);
10001d80:	4b0e      	ldr	r3, [pc, #56]	; (10001dbc <fault_dump_handler+0x144>)
10001d82:	6b99      	ldr	r1, [r3, #56]	; 0x38
10001d84:	4825      	ldr	r0, [pc, #148]	; (10001e1c <fault_dump_handler+0x1a4>)
10001d86:	f7ff fe8d 	bl	10001aa4 <printf>
    for (index = 0; index < count; index++) {
10001d8a:	2400      	movs	r4, #0
10001d8c:	e00f      	b.n	10001dae <fault_dump_handler+0x136>
        count = fd_psp_stack_parser(buffer, FD_STACK_DUMP_DEPTH_MAX, stack, NULL);
10001d8e:	4b24      	ldr	r3, [pc, #144]	; (10001e20 <fault_dump_handler+0x1a8>)
10001d90:	681c      	ldr	r4, [r3, #0]
10001d92:	2300      	movs	r3, #0
10001d94:	462a      	mov	r2, r5
10001d96:	2140      	movs	r1, #64	; 0x40
10001d98:	481e      	ldr	r0, [pc, #120]	; (10001e14 <fault_dump_handler+0x19c>)
10001d9a:	47a0      	blx	r4
10001d9c:	4605      	mov	r5, r0
10001d9e:	e7ec      	b.n	10001d7a <fault_dump_handler+0x102>
        printf("%08X ", buffer[index]);
10001da0:	4b1c      	ldr	r3, [pc, #112]	; (10001e14 <fault_dump_handler+0x19c>)
10001da2:	f853 1024 	ldr.w	r1, [r3, r4, lsl #2]
10001da6:	481d      	ldr	r0, [pc, #116]	; (10001e1c <fault_dump_handler+0x1a4>)
10001da8:	f7ff fe7c 	bl	10001aa4 <printf>
    for (index = 0; index < count; index++) {
10001dac:	3401      	adds	r4, #1
10001dae:	42a5      	cmp	r5, r4
10001db0:	dcf6      	bgt.n	10001da0 <fault_dump_handler+0x128>
    printf("\r\n");
10001db2:	4803      	ldr	r0, [pc, #12]	; (10001dc0 <fault_dump_handler+0x148>)
10001db4:	f7ff fe96 	bl	10001ae4 <puts>
    while (1);
10001db8:	e7fe      	b.n	10001db8 <fault_dump_handler+0x140>
10001dba:	bf00      	nop
10001dbc:	3800056c 	stmdacc	r0, {r2, r3, r5, r6, r8, sl}
10001dc0:	100040f4 	strdne	r4, [r0], -r4	; <UNPREDICTABLE>
10001dc4:	100040d8 	ldrdne	r4, [r0], -r8
10001dc8:	100040f8 	strdne	r4, [r0], -r8
10001dcc:	1000410c 	andne	r4, r0, ip, lsl #2
10001dd0:	10004120 	andne	r4, r0, r0, lsr #2
10001dd4:	10004134 	andne	r4, r0, r4, lsr r1
10001dd8:	10004148 	andne	r4, r0, r8, asr #2
10001ddc:	1000415c 	andne	r4, r0, ip, asr r1
10001de0:	10004170 	andne	r4, r0, r0, ror r1
10001de4:	10004184 	andne	r4, r0, r4, lsl #3
10001de8:	10004198 	mulne	r0, r8, r1
10001dec:	100041ac 	andne	r4, r0, ip, lsr #3
10001df0:	100041c0 	andne	r4, r0, r0, asr #3
10001df4:	100041d4 	ldrdne	r4, [r0], -r4	; <UNPREDICTABLE>
10001df8:	100041e8 	andne	r4, r0, r8, ror #3
10001dfc:	100041fc 	strdne	r4, [r0], -ip
10001e00:	10004210 	andne	r4, r0, r0, lsl r2
10001e04:	10004224 	andne	r4, r0, r4, lsr #4
10001e08:	10004238 	andne	r4, r0, r8, lsr r2
10001e0c:	38000004 	stmdacc	r0, {r2}
10001e10:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10001e14:	38000464 	stmdacc	r0, {r2, r5, r6, sl}
10001e18:	1000424c 	andne	r4, r0, ip, asr #4
10001e1c:	10003f84 	andne	r3, r0, r4, lsl #31
10001e20:	38000008 	stmdacc	r0, {r3}

10001e24 <fault_dump_bm_stack_point>:
 */
__STATIC_FORCEINLINE uint32_t __get_MSP(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, msp" : "=r" (result) );
10001e24:	f3ef 8008 	mrs	r0, MSP

unsigned int fault_dump_bm_stack_point(void) {
    return __get_MSP();
}
10001e28:	4770      	bx	lr
	...

10001e2c <fault_dump_bm_stack_start>:

unsigned int fault_dump_bm_stack_start(void) {
    return FD_STACK_START;
}
10001e2c:	4800      	ldr	r0, [pc, #0]	; (10001e30 <fault_dump_bm_stack_start+0x4>)
10001e2e:	4770      	bx	lr
10001e30:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>

10001e34 <fault_dump_exc_return>:
  *
  ******************************************************************************
  */
#include "fault-dump.h"

void fault_dump_exc_return(unsigned int exc_return) {
10001e34:	b510      	push	{r4, lr}
10001e36:	4604      	mov	r4, r0
    printf(" \r\n");
10001e38:	482a      	ldr	r0, [pc, #168]	; (10001ee4 <fault_dump_exc_return+0xb0>)
10001e3a:	f7ff fe53 	bl	10001ae4 <puts>
    printf(" Bit0 Except Security State:");
10001e3e:	482a      	ldr	r0, [pc, #168]	; (10001ee8 <fault_dump_exc_return+0xb4>)
10001e40:	f7ff fe30 	bl	10001aa4 <printf>
    if (FD_CHECK_BIT(exc_return, 0)) {
10001e44:	f014 0f01 	tst.w	r4, #1
10001e48:	d033      	beq.n	10001eb2 <fault_dump_exc_return+0x7e>
        printf("[Use Security State....].\r\n");
10001e4a:	4828      	ldr	r0, [pc, #160]	; (10001eec <fault_dump_exc_return+0xb8>)
10001e4c:	f7ff fe4a 	bl	10001ae4 <puts>
    } else {
        printf("[Use Not Security State].\r\n");
    }
    printf(" Bit2 Stack Point Select...:");
10001e50:	4827      	ldr	r0, [pc, #156]	; (10001ef0 <fault_dump_exc_return+0xbc>)
10001e52:	f7ff fe27 	bl	10001aa4 <printf>
    if (FD_CHECK_BIT(exc_return, 2)) {
10001e56:	f014 0f04 	tst.w	r4, #4
10001e5a:	d02e      	beq.n	10001eba <fault_dump_exc_return+0x86>
        printf("[Use PSP...............].\r\n");
10001e5c:	4825      	ldr	r0, [pc, #148]	; (10001ef4 <fault_dump_exc_return+0xc0>)
10001e5e:	f7ff fe41 	bl	10001ae4 <puts>
    } else {
        printf("[Use MSP...............].\r\n");
    }
    printf(" Bit3 Proc Mode Before IRQ.:");
10001e62:	4825      	ldr	r0, [pc, #148]	; (10001ef8 <fault_dump_exc_return+0xc4>)
10001e64:	f7ff fe1e 	bl	10001aa4 <printf>
    if (FD_CHECK_BIT(exc_return, 3)) {
10001e68:	f014 0f08 	tst.w	r4, #8
10001e6c:	d029      	beq.n	10001ec2 <fault_dump_exc_return+0x8e>
        printf("[Use Thread Mode.......].\r\n");
10001e6e:	4823      	ldr	r0, [pc, #140]	; (10001efc <fault_dump_exc_return+0xc8>)
10001e70:	f7ff fe38 	bl	10001ae4 <puts>
    } else {
        printf("[Use Process Mode......].\r\n");
    }
    printf(" Bit4 Stack Frame Type.....:");
10001e74:	4822      	ldr	r0, [pc, #136]	; (10001f00 <fault_dump_exc_return+0xcc>)
10001e76:	f7ff fe15 	bl	10001aa4 <printf>
    if (FD_CHECK_BIT(exc_return, 4)) {
10001e7a:	f014 0f10 	tst.w	r4, #16
10001e7e:	d024      	beq.n	10001eca <fault_dump_exc_return+0x96>
        printf("[Use Standard Frame....].\r\n");
10001e80:	4820      	ldr	r0, [pc, #128]	; (10001f04 <fault_dump_exc_return+0xd0>)
10001e82:	f7ff fe2f 	bl	10001ae4 <puts>
    } else {
        printf("[Use Extended Frame....].\r\n");
    }
    printf(" Bit5 Default Call Rule....:");
10001e86:	4820      	ldr	r0, [pc, #128]	; (10001f08 <fault_dump_exc_return+0xd4>)
10001e88:	f7ff fe0c 	bl	10001aa4 <printf>
    if (FD_CHECK_BIT(exc_return, 5)) {
10001e8c:	f014 0f20 	tst.w	r4, #32
10001e90:	d01f      	beq.n	10001ed2 <fault_dump_exc_return+0x9e>
        printf("[Use Default Rule......].\r\n");
10001e92:	481e      	ldr	r0, [pc, #120]	; (10001f0c <fault_dump_exc_return+0xd8>)
10001e94:	f7ff fe26 	bl	10001ae4 <puts>
    } else {
        printf("[Use Not Default Rule..].\r\n");
    }
    printf(" Bit6 Security Stack.......:");
10001e98:	481d      	ldr	r0, [pc, #116]	; (10001f10 <fault_dump_exc_return+0xdc>)
10001e9a:	f7ff fe03 	bl	10001aa4 <printf>
    if (FD_CHECK_BIT(exc_return, 6)) {
10001e9e:	f014 0f40 	tst.w	r4, #64	; 0x40
10001ea2:	d01a      	beq.n	10001eda <fault_dump_exc_return+0xa6>
        printf("[Use Security Stack....].\r\n");
10001ea4:	481b      	ldr	r0, [pc, #108]	; (10001f14 <fault_dump_exc_return+0xe0>)
10001ea6:	f7ff fe1d 	bl	10001ae4 <puts>
    } else {
        printf("[Use Not Security Stack].\r\n");
    }
    printf(" \r\n");
10001eaa:	480e      	ldr	r0, [pc, #56]	; (10001ee4 <fault_dump_exc_return+0xb0>)
10001eac:	f7ff fe1a 	bl	10001ae4 <puts>
}
10001eb0:	bd10      	pop	{r4, pc}
        printf("[Use Not Security State].\r\n");
10001eb2:	4819      	ldr	r0, [pc, #100]	; (10001f18 <fault_dump_exc_return+0xe4>)
10001eb4:	f7ff fe16 	bl	10001ae4 <puts>
10001eb8:	e7ca      	b.n	10001e50 <fault_dump_exc_return+0x1c>
        printf("[Use MSP...............].\r\n");
10001eba:	4818      	ldr	r0, [pc, #96]	; (10001f1c <fault_dump_exc_return+0xe8>)
10001ebc:	f7ff fe12 	bl	10001ae4 <puts>
10001ec0:	e7cf      	b.n	10001e62 <fault_dump_exc_return+0x2e>
        printf("[Use Process Mode......].\r\n");
10001ec2:	4817      	ldr	r0, [pc, #92]	; (10001f20 <fault_dump_exc_return+0xec>)
10001ec4:	f7ff fe0e 	bl	10001ae4 <puts>
10001ec8:	e7d4      	b.n	10001e74 <fault_dump_exc_return+0x40>
        printf("[Use Extended Frame....].\r\n");
10001eca:	4816      	ldr	r0, [pc, #88]	; (10001f24 <fault_dump_exc_return+0xf0>)
10001ecc:	f7ff fe0a 	bl	10001ae4 <puts>
10001ed0:	e7d9      	b.n	10001e86 <fault_dump_exc_return+0x52>
        printf("[Use Not Default Rule..].\r\n");
10001ed2:	4815      	ldr	r0, [pc, #84]	; (10001f28 <fault_dump_exc_return+0xf4>)
10001ed4:	f7ff fe06 	bl	10001ae4 <puts>
10001ed8:	e7de      	b.n	10001e98 <fault_dump_exc_return+0x64>
        printf("[Use Not Security Stack].\r\n");
10001eda:	4814      	ldr	r0, [pc, #80]	; (10001f2c <fault_dump_exc_return+0xf8>)
10001edc:	f7ff fe02 	bl	10001ae4 <puts>
10001ee0:	e7e3      	b.n	10001eaa <fault_dump_exc_return+0x76>
10001ee2:	bf00      	nop
10001ee4:	1000425c 	andne	r4, r0, ip, asr r2
10001ee8:	10004260 	andne	r4, r0, r0, ror #4
10001eec:	10004280 	andne	r4, r0, r0, lsl #5
10001ef0:	100042b8 			; <UNDEFINED> instruction: 0x100042b8
10001ef4:	100042d8 	ldrdne	r4, [r0], -r8
10001ef8:	10004310 	andne	r4, r0, r0, lsl r3
10001efc:	10004330 	andne	r4, r0, r0, lsr r3
10001f00:	10004368 	andne	r4, r0, r8, ror #6
10001f04:	10004388 	andne	r4, r0, r8, lsl #7
10001f08:	100043c0 	andne	r4, r0, r0, asr #7
10001f0c:	100043e0 	andne	r4, r0, r0, ror #7
10001f10:	10004418 	andne	r4, r0, r8, lsl r4
10001f14:	10004438 	andne	r4, r0, r8, lsr r4
10001f18:	1000429c 	mulne	r0, ip, r2
10001f1c:	100042f4 	strdne	r4, [r0], -r4	; <UNPREDICTABLE>
10001f20:	1000434c 	andne	r4, r0, ip, asr #6
10001f24:	100043a4 	andne	r4, r0, r4, lsr #7
10001f28:	100043fc 	strdne	r4, [r0], -ip
10001f2c:	10004454 	andne	r4, r0, r4, asr r4

10001f30 <fault_dump_using_msp>:

bool fault_dump_using_msp(unsigned int exc_return) {
    if (FD_CHECK_BIT(exc_return, 2)) {
10001f30:	f010 0f04 	tst.w	r0, #4
10001f34:	d001      	beq.n	10001f3a <fault_dump_using_msp+0xa>
        return false;
10001f36:	2000      	movs	r0, #0
10001f38:	4770      	bx	lr
    } else {
        return true;
10001f3a:	2001      	movs	r0, #1
    }
}
10001f3c:	4770      	bx	lr
	...

10001f40 <fault_dump_unalign>:
    SCB->CCR |= SCB_CCR_DIV_0_TRP_Msk;
    c = (a + (b / c));
    printf("zero = %d\r\n", c);
}

void fault_dump_unalign(void) {
10001f40:	b530      	push	{r4, r5, lr}
10001f42:	b083      	sub	sp, #12
    volatile int *addr = NULL;
    volatile int value = 0;
10001f44:	2400      	movs	r4, #0
10001f46:	9401      	str	r4, [sp, #4]
    SCB->CCR |= SCB_CCR_UNALIGN_TRP_Msk;
10001f48:	4a0e      	ldr	r2, [pc, #56]	; (10001f84 <fault_dump_unalign+0x44>)
10001f4a:	6953      	ldr	r3, [r2, #20]
10001f4c:	f043 0308 	orr.w	r3, r3, #8
10001f50:	6153      	str	r3, [r2, #20]
    addr = (int*)0x00;
    value = *addr;
10001f52:	6823      	ldr	r3, [r4, #0]
10001f54:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10001f56:	9a01      	ldr	r2, [sp, #4]
10001f58:	4d0b      	ldr	r5, [pc, #44]	; (10001f88 <fault_dump_unalign+0x48>)
10001f5a:	4621      	mov	r1, r4
10001f5c:	4628      	mov	r0, r5
10001f5e:	f7ff fda1 	bl	10001aa4 <printf>
    addr = (int*)0x04;
    value = *addr;
10001f62:	6863      	ldr	r3, [r4, #4]
10001f64:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10001f66:	9a01      	ldr	r2, [sp, #4]
10001f68:	2104      	movs	r1, #4
10001f6a:	4628      	mov	r0, r5
10001f6c:	f7ff fd9a 	bl	10001aa4 <printf>
    addr = (int*)0x03;
    value = *addr;
10001f70:	f8d4 3003 	ldr.w	r3, [r4, #3]
10001f74:	9301      	str	r3, [sp, #4]
    printf("addr:0x%02X-value:0x%08X\r\n", (int)addr, value);
10001f76:	9a01      	ldr	r2, [sp, #4]
10001f78:	2103      	movs	r1, #3
10001f7a:	4628      	mov	r0, r5
10001f7c:	f7ff fd92 	bl	10001aa4 <printf>
}
10001f80:	b003      	add	sp, #12
10001f82:	bd30      	pop	{r4, r5, pc}
10001f84:	e000ed00 	and	lr, r0, r0, lsl #26
10001f88:	10004470 	andne	r4, r0, r0, ror r4

10001f8c <_getpid>:
10001f8c:	2001      	movs	r0, #1
10001f8e:	4770      	bx	lr

10001f90 <_kill>:
10001f90:	b508      	push	{r3, lr}
10001f92:	f000 f867 	bl	10002064 <__errno>
10001f96:	2316      	movs	r3, #22
10001f98:	6003      	str	r3, [r0, #0]
10001f9a:	f04f 30ff 	mov.w	r0, #4294967295
10001f9e:	bd08      	pop	{r3, pc}

10001fa0 <_exit>:
10001fa0:	b508      	push	{r3, lr}
10001fa2:	f04f 31ff 	mov.w	r1, #4294967295
10001fa6:	f7ff fff3 	bl	10001f90 <_kill>
10001faa:	e7fe      	b.n	10001faa <_exit+0xa>

10001fac <Reset_Handler>:
                .thumb_func
                .type    Reset_Handler, %function
                .globl   Reset_Handler
                .fnstart
Reset_Handler:
                ldr      r0, =__INITIAL_SP
10001fac:	4815      	ldr	r0, [pc, #84]	; (10002004 <BusFault_Handler+0x4>)
                msr      psp, r0
10001fae:	f380 8809 	msr	PSP, r0

                ldr      r0, =__STACK_LIMIT
10001fb2:	4815      	ldr	r0, [pc, #84]	; (10002008 <BusFault_Handler+0x8>)
                msr      msplim, r0
10001fb4:	f380 880a 	msr	MSPLIM, r0
                msr      psplim, r0
10001fb8:	f380 880b 	msr	PSPLIM, r0
                ldr      r0, =__STACK_SEAL
                ldr      r1, =0xFEF5EDA5U
                strd     r1,r1,[r0,#0]
                #endif

                bl       SystemInit
10001fbc:	f7fe fcb4 	bl	10000928 <SystemInit>

                ldr      r4, =__copy_table_start__
10001fc0:	4c12      	ldr	r4, [pc, #72]	; (1000200c <BusFault_Handler+0xc>)
                ldr      r5, =__copy_table_end__
10001fc2:	4d13      	ldr	r5, [pc, #76]	; (10002010 <BusFault_Handler+0x10>)

.L_loop0:
                cmp      r4, r5
10001fc4:	42ac      	cmp	r4, r5
                bge      .L_loop0_done
10001fc6:	da0a      	bge.n	10001fde <Reset_Handler+0x32>
                ldr      r1, [r4]                /* source address */
10001fc8:	6821      	ldr	r1, [r4, #0]
                ldr      r2, [r4, #4]            /* destination address */
10001fca:	6862      	ldr	r2, [r4, #4]
                ldr      r3, [r4, #8]            /* word count */
10001fcc:	68a3      	ldr	r3, [r4, #8]
                lsls     r3, r3, #2              /* byte count */
10001fce:	009b      	lsls	r3, r3, #2

.L_loop0_0:
                subs     r3, #4                  /* decrement byte count */
10001fd0:	3b04      	subs	r3, #4
                ittt     ge
10001fd2:	bfa2      	ittt	ge
                ldrge    r0, [r1, r3]
10001fd4:	58c8      	ldrge	r0, [r1, r3]
                strge    r0, [r2, r3]
10001fd6:	50d0      	strge	r0, [r2, r3]
                bge      .L_loop0_0
10001fd8:	e7fa      	bge.n	10001fd0 <Reset_Handler+0x24>

                adds     r4, #12
10001fda:	340c      	adds	r4, #12
                b        .L_loop0
10001fdc:	e7f2      	b.n	10001fc4 <Reset_Handler+0x18>
.L_loop0_done:

                ldr      r3, =__zero_table_start__
10001fde:	4b0d      	ldr	r3, [pc, #52]	; (10002014 <BusFault_Handler+0x14>)
                ldr      r4, =__zero_table_end__
10001fe0:	4c0d      	ldr	r4, [pc, #52]	; (10002018 <BusFault_Handler+0x18>)

.L_loop2:
                cmp      r3, r4
10001fe2:	42a3      	cmp	r3, r4
                bge      .L_loop2_done
10001fe4:	da09      	bge.n	10001ffa <Reset_Handler+0x4e>
                ldr      r1, [r3]                /* destination address */
10001fe6:	6819      	ldr	r1, [r3, #0]
                ldr      r2, [r3, #4]            /* word count */
10001fe8:	685a      	ldr	r2, [r3, #4]
                lsls     r2, r2, #2              /* byte count */
10001fea:	0092      	lsls	r2, r2, #2
                movs     r0, 0
10001fec:	2000      	movs	r0, #0

.L_loop2_0:
                subs     r2, #4                  /* decrement byte count */
10001fee:	3a04      	subs	r2, #4
                itt      ge
10001ff0:	bfa4      	itt	ge
                strge    r0, [r1, r2]
10001ff2:	5088      	strge	r0, [r1, r2]
                bge      .L_loop2_0
10001ff4:	e7fb      	bge.n	10001fee <Reset_Handler+0x42>

                adds     r3, #8
10001ff6:	3308      	adds	r3, #8
                b        .L_loop2
10001ff8:	e7f3      	b.n	10001fe2 <Reset_Handler+0x36>
.L_loop2_done:

                bl       main
10001ffa:	f7fe fc7f 	bl	100008fc <main>
                .thumb_func
                .type    HardFault_Handler, %function
                .weak    HardFault_Handler
                .fnstart
HardFault_Handler:
                b        .
10001ffe:	e7fe      	b.n	10001ffe <Reset_Handler+0x52>

10002000 <BusFault_Handler>:
                .thumb_func
                .type    Default_Handler, %function
                .weak    Default_Handler
                .fnstart
Default_Handler:
                b        .
10002000:	e7fe      	b.n	10002000 <BusFault_Handler>
10002002:	00000000 	andeq	r0, r0, r0
                ldr      r0, =__INITIAL_SP
10002006:	f0003810 			; <UNDEFINED> instruction: 0xf0003810
                ldr      r0, =__STACK_LIMIT
1000200a:	456c380f 	strbmi	r3, [ip, #-2063]!	; 0xfffff7f1
                ldr      r4, =__copy_table_start__
1000200e:	45781000 	ldrbmi	r1, [r8, #-0]!
                ldr      r5, =__copy_table_end__
10002012:	45781000 	ldrbmi	r1, [r8, #-0]!
                ldr      r3, =__zero_table_start__
10002016:	45781000 	ldrbmi	r1, [r8, #-0]!
                ldr      r4, =__zero_table_end__
1000201a:	 	ldrbtlt	r1, [r2], -r0

1000201c <HardFault_Handler>:
.global fault_dump_handler

.global HardFault_Handler
.type HardFault_Handler, % function
HardFault_Handler:
    cpsid   i                           /* disable interrupts */
1000201c:	b672      	cpsid	i
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
1000201e:	4b0e      	ldr	r3, [pc, #56]	; (10002058 <stack_checked+0xc>)
    ldr     r1, [r3]                    /* r1 = fd_main_stack_base  */
10002020:	6819      	ldr	r1, [r3, #0]
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
10002022:	4b0e      	ldr	r3, [pc, #56]	; (1000205c <stack_checked+0x10>)
    ldr     r2, [r3]                    /* r2 = fd_main_stack_full  */
10002024:	681a      	ldr	r2, [r3, #0]

    tst     lr, #4                      /* use exc_return value get sp value */
10002026:	f01e 0f04 	tst.w	lr, #4
    bne     stack_use_psp               /* if (sp != msp), jump to stack_use_psp */
1000202a:	d10a      	bne.n	10002042 <stack_use_psp>

    mrs     r0, msp                     /* else (sp == msp), r0 = sp = msp */
1000202c:	f3ef 8008 	mrs	r0, MSP
    cmp     r0, r1                      /* compare msp and stack base addr */
10002030:	4288      	cmp	r0, r1
    blt     stack_invalid               /* msp < stack_base_addr, msp is invalid */
10002032:	db0a      	blt.n	1000204a <stack_invalid>
    cmp     r0, r2                      /* compare msp and stack full addr */
10002034:	4290      	cmp	r0, r2
    bgt     stack_invalid               /* msp > stack_base_addr, msp is invalid */
10002036:	dc08      	bgt.n	1000204a <stack_invalid>

    push    {r4 - r11}                  /* stack value is normal, push {r4 - r11} to stack */
10002038:	e92d 0ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp}
    mrs     r0, msp                     /* refresh r0 = sp = msp */
1000203c:	f3ef 8008 	mrs	r0, MSP
    b       stack_checked
10002040:	e004      	b.n	1000204c <stack_checked>

10002042 <stack_use_psp>:
stack_use_psp:
    mrs     r0, psp                     /* lr & 0x04 == 0, r0 = sp = psp */
10002042:	f3ef 8009 	mrs	r0, PSP
    stmdb   r0!, {r4 - r11}             /* sp using psp, use stmdb push {r4 - r11} to stack */
10002046:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}

1000204a <stack_invalid>:
    
stack_invalid:
    nop                                 /* stack value is invalid, not to process temporary */
1000204a:	bf00      	nop

1000204c <stack_checked>:
stack_checked:
    mov     r1, lr                      /* now, r0 = sp, r1 = lr */
1000204c:	4671      	mov	r1, lr
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
1000204e:	4a04      	ldr	r2, [pc, #16]	; (10002060 <stack_checked+0x14>)
    dsb                                 /* wait for memory access to complete */
10002050:	f3bf 8f4f 	dsb	sy
    cpsie   i                           /* enable interrupts */
10002054:	b662      	cpsie	i
    bx      r2                          /* jump to fault_dump_handler */
10002056:	4710      	bx	r2
    ldr     r3, =fd_main_stack_base     /* r3 = &fd_main_stack_base */
10002058:	38000564 	stmdacc	r0, {r2, r5, r6, r8, sl}
    ldr     r3, =fd_main_stack_full     /* r3 = &fd_main_stack_full */
1000205c:	38000568 	stmdacc	r0, {r3, r5, r6, r8, sl}
    ldr     r2, =fault_dump_handler     /* now, r2 = fault_dump_handler */
10002060:	10001c79 	andne	r1, r0, r9, ror ip

10002064 <__errno>:
10002064:	4b01      	ldr	r3, [pc, #4]	; (1000206c <__errno+0x8>)
10002066:	6818      	ldr	r0, [r3, #0]
10002068:	4770      	bx	lr
1000206a:	bf00      	nop
1000206c:	3800000c 	stmdacc	r0, {r2, r3}

10002070 <memset>:
10002070:	b570      	push	{r4, r5, r6, lr}
10002072:	0786      	lsls	r6, r0, #30
10002074:	d048      	beq.n	10002108 <memset+0x98>
10002076:	1e54      	subs	r4, r2, #1
10002078:	2a00      	cmp	r2, #0
1000207a:	d03f      	beq.n	100020fc <memset+0x8c>
1000207c:	b2ca      	uxtb	r2, r1
1000207e:	4603      	mov	r3, r0
10002080:	e001      	b.n	10002086 <memset+0x16>
10002082:	3c01      	subs	r4, #1
10002084:	d33a      	bcc.n	100020fc <memset+0x8c>
10002086:	f803 2b01 	strb.w	r2, [r3], #1
1000208a:	079d      	lsls	r5, r3, #30
1000208c:	d1f9      	bne.n	10002082 <memset+0x12>
1000208e:	2c03      	cmp	r4, #3
10002090:	d92d      	bls.n	100020ee <memset+0x7e>
10002092:	b2cd      	uxtb	r5, r1
10002094:	2c0f      	cmp	r4, #15
10002096:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
1000209a:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
1000209e:	d936      	bls.n	1000210e <memset+0x9e>
100020a0:	f1a4 0c10 	sub.w	ip, r4, #16
100020a4:	f103 0e20 	add.w	lr, r3, #32
100020a8:	f103 0210 	add.w	r2, r3, #16
100020ac:	f02c 060f 	bic.w	r6, ip, #15
100020b0:	ea4f 1c1c 	mov.w	ip, ip, lsr #4
100020b4:	44b6      	add	lr, r6
100020b6:	e942 5504 	strd	r5, r5, [r2, #-16]
100020ba:	e942 5502 	strd	r5, r5, [r2, #-8]
100020be:	3210      	adds	r2, #16
100020c0:	4572      	cmp	r2, lr
100020c2:	d1f8      	bne.n	100020b6 <memset+0x46>
100020c4:	f10c 0201 	add.w	r2, ip, #1
100020c8:	f014 0f0c 	tst.w	r4, #12
100020cc:	f004 0c0f 	and.w	ip, r4, #15
100020d0:	eb03 1202 	add.w	r2, r3, r2, lsl #4
100020d4:	d013      	beq.n	100020fe <memset+0x8e>
100020d6:	f1ac 0304 	sub.w	r3, ip, #4
100020da:	f023 0303 	bic.w	r3, r3, #3
100020de:	3304      	adds	r3, #4
100020e0:	4413      	add	r3, r2
100020e2:	f842 5b04 	str.w	r5, [r2], #4
100020e6:	4293      	cmp	r3, r2
100020e8:	d1fb      	bne.n	100020e2 <memset+0x72>
100020ea:	f00c 0403 	and.w	r4, ip, #3
100020ee:	b12c      	cbz	r4, 100020fc <memset+0x8c>
100020f0:	b2ca      	uxtb	r2, r1
100020f2:	441c      	add	r4, r3
100020f4:	f803 2b01 	strb.w	r2, [r3], #1
100020f8:	429c      	cmp	r4, r3
100020fa:	d1fb      	bne.n	100020f4 <memset+0x84>
100020fc:	bd70      	pop	{r4, r5, r6, pc}
100020fe:	4664      	mov	r4, ip
10002100:	4613      	mov	r3, r2
10002102:	2c00      	cmp	r4, #0
10002104:	d1f4      	bne.n	100020f0 <memset+0x80>
10002106:	e7f9      	b.n	100020fc <memset+0x8c>
10002108:	4603      	mov	r3, r0
1000210a:	4614      	mov	r4, r2
1000210c:	e7bf      	b.n	1000208e <memset+0x1e>
1000210e:	461a      	mov	r2, r3
10002110:	46a4      	mov	ip, r4
10002112:	e7e0      	b.n	100020d6 <memset+0x66>

10002114 <register_fini>:
10002114:	4b02      	ldr	r3, [pc, #8]	; (10002120 <register_fini+0xc>)
10002116:	b113      	cbz	r3, 1000211e <register_fini+0xa>
10002118:	4802      	ldr	r0, [pc, #8]	; (10002124 <register_fini+0x10>)
1000211a:	f000 b805 	b.w	10002128 <atexit>
1000211e:	4770      	bx	lr
10002120:	00000000 	andeq	r0, r0, r0
10002124:	10002135 	andne	r2, r0, r5, lsr r1

10002128 <atexit>:
10002128:	2300      	movs	r3, #0
1000212a:	4601      	mov	r1, r0
1000212c:	461a      	mov	r2, r3
1000212e:	4618      	mov	r0, r3
10002130:	f000 b81a 	b.w	10002168 <__register_exitproc>

10002134 <__libc_fini_array>:
10002134:	b538      	push	{r3, r4, r5, lr}
10002136:	4b08      	ldr	r3, [pc, #32]	; (10002158 <__libc_fini_array+0x24>)
10002138:	4d08      	ldr	r5, [pc, #32]	; (1000215c <__libc_fini_array+0x28>)
1000213a:	1b5b      	subs	r3, r3, r5
1000213c:	109c      	asrs	r4, r3, #2
1000213e:	d007      	beq.n	10002150 <__libc_fini_array+0x1c>
10002140:	3b04      	subs	r3, #4
10002142:	441d      	add	r5, r3
10002144:	3c01      	subs	r4, #1
10002146:	f855 3904 	ldr.w	r3, [r5], #-4
1000214a:	4798      	blx	r3
1000214c:	2c00      	cmp	r4, #0
1000214e:	d1f9      	bne.n	10002144 <__libc_fini_array+0x10>
10002150:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10002154:	f001 befa 	b.w	10003f4c <_fini>
10002158:	38000448 	stmdacc	r0, {r3, r6, sl}
1000215c:	38000444 	stmdacc	r0, {r2, r6, sl}

10002160 <__retarget_lock_acquire_recursive>:
10002160:	4770      	bx	lr
10002162:	bf00      	nop

10002164 <__retarget_lock_release_recursive>:
10002164:	4770      	bx	lr
10002166:	bf00      	nop

10002168 <__register_exitproc>:
10002168:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
1000216c:	f8df a084 	ldr.w	sl, [pc, #132]	; 100021f4 <__register_exitproc+0x8c>
10002170:	4606      	mov	r6, r0
10002172:	4698      	mov	r8, r3
10002174:	460f      	mov	r7, r1
10002176:	f8da 0000 	ldr.w	r0, [sl]
1000217a:	4691      	mov	r9, r2
1000217c:	f7ff fff0 	bl	10002160 <__retarget_lock_acquire_recursive>
10002180:	4b1b      	ldr	r3, [pc, #108]	; (100021f0 <__register_exitproc+0x88>)
10002182:	681b      	ldr	r3, [r3, #0]
10002184:	f8d3 4148 	ldr.w	r4, [r3, #328]	; 0x148
10002188:	b334      	cbz	r4, 100021d8 <__register_exitproc+0x70>
1000218a:	6865      	ldr	r5, [r4, #4]
1000218c:	2d1f      	cmp	r5, #31
1000218e:	dc28      	bgt.n	100021e2 <__register_exitproc+0x7a>
10002190:	b95e      	cbnz	r6, 100021aa <__register_exitproc+0x42>
10002192:	1c6b      	adds	r3, r5, #1
10002194:	3502      	adds	r5, #2
10002196:	f8da 0000 	ldr.w	r0, [sl]
1000219a:	6063      	str	r3, [r4, #4]
1000219c:	f844 7025 	str.w	r7, [r4, r5, lsl #2]
100021a0:	f7ff ffe0 	bl	10002164 <__retarget_lock_release_recursive>
100021a4:	2000      	movs	r0, #0
100021a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
100021aa:	eb04 0185 	add.w	r1, r4, r5, lsl #2
100021ae:	2301      	movs	r3, #1
100021b0:	2e02      	cmp	r6, #2
100021b2:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
100021b6:	fa03 f305 	lsl.w	r3, r3, r5
100021ba:	f8d4 2188 	ldr.w	r2, [r4, #392]	; 0x188
100021be:	ea42 0203 	orr.w	r2, r2, r3
100021c2:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
100021c6:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
100021ca:	d1e2      	bne.n	10002192 <__register_exitproc+0x2a>
100021cc:	f8d4 218c 	ldr.w	r2, [r4, #396]	; 0x18c
100021d0:	4313      	orrs	r3, r2
100021d2:	f8c4 318c 	str.w	r3, [r4, #396]	; 0x18c
100021d6:	e7dc      	b.n	10002192 <__register_exitproc+0x2a>
100021d8:	f503 74a6 	add.w	r4, r3, #332	; 0x14c
100021dc:	f8c3 4148 	str.w	r4, [r3, #328]	; 0x148
100021e0:	e7d3      	b.n	1000218a <__register_exitproc+0x22>
100021e2:	f8da 0000 	ldr.w	r0, [sl]
100021e6:	f7ff ffbd 	bl	10002164 <__retarget_lock_release_recursive>
100021ea:	f04f 30ff 	mov.w	r0, #4294967295
100021ee:	e7da      	b.n	100021a6 <__register_exitproc+0x3e>
100021f0:	1000448c 	andne	r4, r0, ip, lsl #9
100021f4:	38000438 	stmdacc	r0, {r3, r4, r5, sl}

100021f8 <__aeabi_drsub>:
100021f8:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
100021fc:	e002      	b.n	10002204 <__adddf3>
100021fe:	bf00      	nop

10002200 <__aeabi_dsub>:
10002200:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

10002204 <__adddf3>:
10002204:	b530      	push	{r4, r5, lr}
10002206:	ea4f 0441 	mov.w	r4, r1, lsl #1
1000220a:	ea4f 0543 	mov.w	r5, r3, lsl #1
1000220e:	ea94 0f05 	teq	r4, r5
10002212:	bf08      	it	eq
10002214:	ea90 0f02 	teqeq	r0, r2
10002218:	bf1f      	itttt	ne
1000221a:	ea54 0c00 	orrsne.w	ip, r4, r0
1000221e:	ea55 0c02 	orrsne.w	ip, r5, r2
10002222:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
10002226:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1000222a:	f000 80e2 	beq.w	100023f2 <__adddf3+0x1ee>
1000222e:	ea4f 5454 	mov.w	r4, r4, lsr #21
10002232:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
10002236:	bfb8      	it	lt
10002238:	426d      	neglt	r5, r5
1000223a:	dd0c      	ble.n	10002256 <__adddf3+0x52>
1000223c:	442c      	add	r4, r5
1000223e:	ea80 0202 	eor.w	r2, r0, r2
10002242:	ea81 0303 	eor.w	r3, r1, r3
10002246:	ea82 0000 	eor.w	r0, r2, r0
1000224a:	ea83 0101 	eor.w	r1, r3, r1
1000224e:	ea80 0202 	eor.w	r2, r0, r2
10002252:	ea81 0303 	eor.w	r3, r1, r3
10002256:	2d36      	cmp	r5, #54	; 0x36
10002258:	bf88      	it	hi
1000225a:	bd30      	pophi	{r4, r5, pc}
1000225c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
10002260:	ea4f 3101 	mov.w	r1, r1, lsl #12
10002264:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
10002268:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
1000226c:	d002      	beq.n	10002274 <__adddf3+0x70>
1000226e:	4240      	negs	r0, r0
10002270:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
10002274:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
10002278:	ea4f 3303 	mov.w	r3, r3, lsl #12
1000227c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
10002280:	d002      	beq.n	10002288 <__adddf3+0x84>
10002282:	4252      	negs	r2, r2
10002284:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
10002288:	ea94 0f05 	teq	r4, r5
1000228c:	f000 80a7 	beq.w	100023de <__adddf3+0x1da>
10002290:	f1a4 0401 	sub.w	r4, r4, #1
10002294:	f1d5 0e20 	rsbs	lr, r5, #32
10002298:	db0d      	blt.n	100022b6 <__adddf3+0xb2>
1000229a:	fa02 fc0e 	lsl.w	ip, r2, lr
1000229e:	fa22 f205 	lsr.w	r2, r2, r5
100022a2:	1880      	adds	r0, r0, r2
100022a4:	f141 0100 	adc.w	r1, r1, #0
100022a8:	fa03 f20e 	lsl.w	r2, r3, lr
100022ac:	1880      	adds	r0, r0, r2
100022ae:	fa43 f305 	asr.w	r3, r3, r5
100022b2:	4159      	adcs	r1, r3
100022b4:	e00e      	b.n	100022d4 <__adddf3+0xd0>
100022b6:	f1a5 0520 	sub.w	r5, r5, #32
100022ba:	f10e 0e20 	add.w	lr, lr, #32
100022be:	2a01      	cmp	r2, #1
100022c0:	fa03 fc0e 	lsl.w	ip, r3, lr
100022c4:	bf28      	it	cs
100022c6:	f04c 0c02 	orrcs.w	ip, ip, #2
100022ca:	fa43 f305 	asr.w	r3, r3, r5
100022ce:	18c0      	adds	r0, r0, r3
100022d0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
100022d4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
100022d8:	d507      	bpl.n	100022ea <__adddf3+0xe6>
100022da:	f04f 0e00 	mov.w	lr, #0
100022de:	f1dc 0c00 	rsbs	ip, ip, #0
100022e2:	eb7e 0000 	sbcs.w	r0, lr, r0
100022e6:	eb6e 0101 	sbc.w	r1, lr, r1
100022ea:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
100022ee:	d31b      	bcc.n	10002328 <__adddf3+0x124>
100022f0:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
100022f4:	d30c      	bcc.n	10002310 <__adddf3+0x10c>
100022f6:	0849      	lsrs	r1, r1, #1
100022f8:	ea5f 0030 	movs.w	r0, r0, rrx
100022fc:	ea4f 0c3c 	mov.w	ip, ip, rrx
10002300:	f104 0401 	add.w	r4, r4, #1
10002304:	ea4f 5244 	mov.w	r2, r4, lsl #21
10002308:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
1000230c:	f080 809a 	bcs.w	10002444 <__adddf3+0x240>
10002310:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
10002314:	bf08      	it	eq
10002316:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1000231a:	f150 0000 	adcs.w	r0, r0, #0
1000231e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10002322:	ea41 0105 	orr.w	r1, r1, r5
10002326:	bd30      	pop	{r4, r5, pc}
10002328:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
1000232c:	4140      	adcs	r0, r0
1000232e:	eb41 0101 	adc.w	r1, r1, r1
10002332:	3c01      	subs	r4, #1
10002334:	bf28      	it	cs
10002336:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
1000233a:	d2e9      	bcs.n	10002310 <__adddf3+0x10c>
1000233c:	f091 0f00 	teq	r1, #0
10002340:	bf04      	itt	eq
10002342:	4601      	moveq	r1, r0
10002344:	2000      	moveq	r0, #0
10002346:	fab1 f381 	clz	r3, r1
1000234a:	bf08      	it	eq
1000234c:	3320      	addeq	r3, #32
1000234e:	f1a3 030b 	sub.w	r3, r3, #11
10002352:	f1b3 0220 	subs.w	r2, r3, #32
10002356:	da0c      	bge.n	10002372 <__adddf3+0x16e>
10002358:	320c      	adds	r2, #12
1000235a:	dd08      	ble.n	1000236e <__adddf3+0x16a>
1000235c:	f102 0c14 	add.w	ip, r2, #20
10002360:	f1c2 020c 	rsb	r2, r2, #12
10002364:	fa01 f00c 	lsl.w	r0, r1, ip
10002368:	fa21 f102 	lsr.w	r1, r1, r2
1000236c:	e00c      	b.n	10002388 <__adddf3+0x184>
1000236e:	f102 0214 	add.w	r2, r2, #20
10002372:	bfd8      	it	le
10002374:	f1c2 0c20 	rsble	ip, r2, #32
10002378:	fa01 f102 	lsl.w	r1, r1, r2
1000237c:	fa20 fc0c 	lsr.w	ip, r0, ip
10002380:	bfdc      	itt	le
10002382:	ea41 010c 	orrle.w	r1, r1, ip
10002386:	4090      	lslle	r0, r2
10002388:	1ae4      	subs	r4, r4, r3
1000238a:	bfa2      	ittt	ge
1000238c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
10002390:	4329      	orrge	r1, r5
10002392:	bd30      	popge	{r4, r5, pc}
10002394:	ea6f 0404 	mvn.w	r4, r4
10002398:	3c1f      	subs	r4, #31
1000239a:	da1c      	bge.n	100023d6 <__adddf3+0x1d2>
1000239c:	340c      	adds	r4, #12
1000239e:	dc0e      	bgt.n	100023be <__adddf3+0x1ba>
100023a0:	f104 0414 	add.w	r4, r4, #20
100023a4:	f1c4 0220 	rsb	r2, r4, #32
100023a8:	fa20 f004 	lsr.w	r0, r0, r4
100023ac:	fa01 f302 	lsl.w	r3, r1, r2
100023b0:	ea40 0003 	orr.w	r0, r0, r3
100023b4:	fa21 f304 	lsr.w	r3, r1, r4
100023b8:	ea45 0103 	orr.w	r1, r5, r3
100023bc:	bd30      	pop	{r4, r5, pc}
100023be:	f1c4 040c 	rsb	r4, r4, #12
100023c2:	f1c4 0220 	rsb	r2, r4, #32
100023c6:	fa20 f002 	lsr.w	r0, r0, r2
100023ca:	fa01 f304 	lsl.w	r3, r1, r4
100023ce:	ea40 0003 	orr.w	r0, r0, r3
100023d2:	4629      	mov	r1, r5
100023d4:	bd30      	pop	{r4, r5, pc}
100023d6:	fa21 f004 	lsr.w	r0, r1, r4
100023da:	4629      	mov	r1, r5
100023dc:	bd30      	pop	{r4, r5, pc}
100023de:	f094 0f00 	teq	r4, #0
100023e2:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
100023e6:	bf06      	itte	eq
100023e8:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
100023ec:	3401      	addeq	r4, #1
100023ee:	3d01      	subne	r5, #1
100023f0:	e74e      	b.n	10002290 <__adddf3+0x8c>
100023f2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
100023f6:	bf18      	it	ne
100023f8:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
100023fc:	d029      	beq.n	10002452 <__adddf3+0x24e>
100023fe:	ea94 0f05 	teq	r4, r5
10002402:	bf08      	it	eq
10002404:	ea90 0f02 	teqeq	r0, r2
10002408:	d005      	beq.n	10002416 <__adddf3+0x212>
1000240a:	ea54 0c00 	orrs.w	ip, r4, r0
1000240e:	bf04      	itt	eq
10002410:	4619      	moveq	r1, r3
10002412:	4610      	moveq	r0, r2
10002414:	bd30      	pop	{r4, r5, pc}
10002416:	ea91 0f03 	teq	r1, r3
1000241a:	bf1e      	ittt	ne
1000241c:	2100      	movne	r1, #0
1000241e:	2000      	movne	r0, #0
10002420:	bd30      	popne	{r4, r5, pc}
10002422:	ea5f 5c54 	movs.w	ip, r4, lsr #21
10002426:	d105      	bne.n	10002434 <__adddf3+0x230>
10002428:	0040      	lsls	r0, r0, #1
1000242a:	4149      	adcs	r1, r1
1000242c:	bf28      	it	cs
1000242e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
10002432:	bd30      	pop	{r4, r5, pc}
10002434:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
10002438:	bf3c      	itt	cc
1000243a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
1000243e:	bd30      	popcc	{r4, r5, pc}
10002440:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10002444:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
10002448:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
1000244c:	f04f 0000 	mov.w	r0, #0
10002450:	bd30      	pop	{r4, r5, pc}
10002452:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10002456:	bf1a      	itte	ne
10002458:	4619      	movne	r1, r3
1000245a:	4610      	movne	r0, r2
1000245c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
10002460:	bf1c      	itt	ne
10002462:	460b      	movne	r3, r1
10002464:	4602      	movne	r2, r0
10002466:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1000246a:	bf06      	itte	eq
1000246c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
10002470:	ea91 0f03 	teqeq	r1, r3
10002474:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
10002478:	bd30      	pop	{r4, r5, pc}
1000247a:	bf00      	nop

1000247c <__aeabi_ui2d>:
1000247c:	f090 0f00 	teq	r0, #0
10002480:	bf04      	itt	eq
10002482:	2100      	moveq	r1, #0
10002484:	4770      	bxeq	lr
10002486:	b530      	push	{r4, r5, lr}
10002488:	f44f 6480 	mov.w	r4, #1024	; 0x400
1000248c:	f104 0432 	add.w	r4, r4, #50	; 0x32
10002490:	f04f 0500 	mov.w	r5, #0
10002494:	f04f 0100 	mov.w	r1, #0
10002498:	e750      	b.n	1000233c <__adddf3+0x138>
1000249a:	bf00      	nop

1000249c <__aeabi_i2d>:
1000249c:	f090 0f00 	teq	r0, #0
100024a0:	bf04      	itt	eq
100024a2:	2100      	moveq	r1, #0
100024a4:	4770      	bxeq	lr
100024a6:	b530      	push	{r4, r5, lr}
100024a8:	f44f 6480 	mov.w	r4, #1024	; 0x400
100024ac:	f104 0432 	add.w	r4, r4, #50	; 0x32
100024b0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
100024b4:	bf48      	it	mi
100024b6:	4240      	negmi	r0, r0
100024b8:	f04f 0100 	mov.w	r1, #0
100024bc:	e73e      	b.n	1000233c <__adddf3+0x138>
100024be:	bf00      	nop

100024c0 <__aeabi_f2d>:
100024c0:	0042      	lsls	r2, r0, #1
100024c2:	ea4f 01e2 	mov.w	r1, r2, asr #3
100024c6:	ea4f 0131 	mov.w	r1, r1, rrx
100024ca:	ea4f 7002 	mov.w	r0, r2, lsl #28
100024ce:	bf1f      	itttt	ne
100024d0:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
100024d4:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
100024d8:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
100024dc:	4770      	bxne	lr
100024de:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
100024e2:	bf08      	it	eq
100024e4:	4770      	bxeq	lr
100024e6:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
100024ea:	bf04      	itt	eq
100024ec:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
100024f0:	4770      	bxeq	lr
100024f2:	b530      	push	{r4, r5, lr}
100024f4:	f44f 7460 	mov.w	r4, #896	; 0x380
100024f8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
100024fc:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
10002500:	e71c      	b.n	1000233c <__adddf3+0x138>
10002502:	bf00      	nop

10002504 <__aeabi_ul2d>:
10002504:	ea50 0201 	orrs.w	r2, r0, r1
10002508:	bf08      	it	eq
1000250a:	4770      	bxeq	lr
1000250c:	b530      	push	{r4, r5, lr}
1000250e:	f04f 0500 	mov.w	r5, #0
10002512:	e00a      	b.n	1000252a <__aeabi_l2d+0x16>

10002514 <__aeabi_l2d>:
10002514:	ea50 0201 	orrs.w	r2, r0, r1
10002518:	bf08      	it	eq
1000251a:	4770      	bxeq	lr
1000251c:	b530      	push	{r4, r5, lr}
1000251e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
10002522:	d502      	bpl.n	1000252a <__aeabi_l2d+0x16>
10002524:	4240      	negs	r0, r0
10002526:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1000252a:	f44f 6480 	mov.w	r4, #1024	; 0x400
1000252e:	f104 0432 	add.w	r4, r4, #50	; 0x32
10002532:	ea5f 5c91 	movs.w	ip, r1, lsr #22
10002536:	f43f aed8 	beq.w	100022ea <__adddf3+0xe6>
1000253a:	f04f 0203 	mov.w	r2, #3
1000253e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
10002542:	bf18      	it	ne
10002544:	3203      	addne	r2, #3
10002546:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
1000254a:	bf18      	it	ne
1000254c:	3203      	addne	r2, #3
1000254e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
10002552:	f1c2 0320 	rsb	r3, r2, #32
10002556:	fa00 fc03 	lsl.w	ip, r0, r3
1000255a:	fa20 f002 	lsr.w	r0, r0, r2
1000255e:	fa01 fe03 	lsl.w	lr, r1, r3
10002562:	ea40 000e 	orr.w	r0, r0, lr
10002566:	fa21 f102 	lsr.w	r1, r1, r2
1000256a:	4414      	add	r4, r2
1000256c:	e6bd      	b.n	100022ea <__adddf3+0xe6>
1000256e:	bf00      	nop

10002570 <__aeabi_dmul>:
10002570:	b570      	push	{r4, r5, r6, lr}
10002572:	f04f 0cff 	mov.w	ip, #255	; 0xff
10002576:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
1000257a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
1000257e:	bf1d      	ittte	ne
10002580:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10002584:	ea94 0f0c 	teqne	r4, ip
10002588:	ea95 0f0c 	teqne	r5, ip
1000258c:	f000 f8de 	bleq	1000274c <__aeabi_dmul+0x1dc>
10002590:	442c      	add	r4, r5
10002592:	ea81 0603 	eor.w	r6, r1, r3
10002596:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
1000259a:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
1000259e:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
100025a2:	bf18      	it	ne
100025a4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
100025a8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
100025ac:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
100025b0:	d038      	beq.n	10002624 <__aeabi_dmul+0xb4>
100025b2:	fba0 ce02 	umull	ip, lr, r0, r2
100025b6:	f04f 0500 	mov.w	r5, #0
100025ba:	fbe1 e502 	umlal	lr, r5, r1, r2
100025be:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
100025c2:	fbe0 e503 	umlal	lr, r5, r0, r3
100025c6:	f04f 0600 	mov.w	r6, #0
100025ca:	fbe1 5603 	umlal	r5, r6, r1, r3
100025ce:	f09c 0f00 	teq	ip, #0
100025d2:	bf18      	it	ne
100025d4:	f04e 0e01 	orrne.w	lr, lr, #1
100025d8:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
100025dc:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
100025e0:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
100025e4:	d204      	bcs.n	100025f0 <__aeabi_dmul+0x80>
100025e6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
100025ea:	416d      	adcs	r5, r5
100025ec:	eb46 0606 	adc.w	r6, r6, r6
100025f0:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
100025f4:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
100025f8:	ea4f 20c5 	mov.w	r0, r5, lsl #11
100025fc:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
10002600:	ea4f 2ece 	mov.w	lr, lr, lsl #11
10002604:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
10002608:	bf88      	it	hi
1000260a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
1000260e:	d81e      	bhi.n	1000264e <__aeabi_dmul+0xde>
10002610:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
10002614:	bf08      	it	eq
10002616:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
1000261a:	f150 0000 	adcs.w	r0, r0, #0
1000261e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10002622:	bd70      	pop	{r4, r5, r6, pc}
10002624:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
10002628:	ea46 0101 	orr.w	r1, r6, r1
1000262c:	ea40 0002 	orr.w	r0, r0, r2
10002630:	ea81 0103 	eor.w	r1, r1, r3
10002634:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
10002638:	bfc2      	ittt	gt
1000263a:	ebd4 050c 	rsbsgt	r5, r4, ip
1000263e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10002642:	bd70      	popgt	{r4, r5, r6, pc}
10002644:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10002648:	f04f 0e00 	mov.w	lr, #0
1000264c:	3c01      	subs	r4, #1
1000264e:	f300 80ab 	bgt.w	100027a8 <__aeabi_dmul+0x238>
10002652:	f114 0f36 	cmn.w	r4, #54	; 0x36
10002656:	bfde      	ittt	le
10002658:	2000      	movle	r0, #0
1000265a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
1000265e:	bd70      	pople	{r4, r5, r6, pc}
10002660:	f1c4 0400 	rsb	r4, r4, #0
10002664:	3c20      	subs	r4, #32
10002666:	da35      	bge.n	100026d4 <__aeabi_dmul+0x164>
10002668:	340c      	adds	r4, #12
1000266a:	dc1b      	bgt.n	100026a4 <__aeabi_dmul+0x134>
1000266c:	f104 0414 	add.w	r4, r4, #20
10002670:	f1c4 0520 	rsb	r5, r4, #32
10002674:	fa00 f305 	lsl.w	r3, r0, r5
10002678:	fa20 f004 	lsr.w	r0, r0, r4
1000267c:	fa01 f205 	lsl.w	r2, r1, r5
10002680:	ea40 0002 	orr.w	r0, r0, r2
10002684:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
10002688:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
1000268c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10002690:	fa21 f604 	lsr.w	r6, r1, r4
10002694:	eb42 0106 	adc.w	r1, r2, r6
10002698:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1000269c:	bf08      	it	eq
1000269e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100026a2:	bd70      	pop	{r4, r5, r6, pc}
100026a4:	f1c4 040c 	rsb	r4, r4, #12
100026a8:	f1c4 0520 	rsb	r5, r4, #32
100026ac:	fa00 f304 	lsl.w	r3, r0, r4
100026b0:	fa20 f005 	lsr.w	r0, r0, r5
100026b4:	fa01 f204 	lsl.w	r2, r1, r4
100026b8:	ea40 0002 	orr.w	r0, r0, r2
100026bc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100026c0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100026c4:	f141 0100 	adc.w	r1, r1, #0
100026c8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100026cc:	bf08      	it	eq
100026ce:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
100026d2:	bd70      	pop	{r4, r5, r6, pc}
100026d4:	f1c4 0520 	rsb	r5, r4, #32
100026d8:	fa00 f205 	lsl.w	r2, r0, r5
100026dc:	ea4e 0e02 	orr.w	lr, lr, r2
100026e0:	fa20 f304 	lsr.w	r3, r0, r4
100026e4:	fa01 f205 	lsl.w	r2, r1, r5
100026e8:	ea43 0302 	orr.w	r3, r3, r2
100026ec:	fa21 f004 	lsr.w	r0, r1, r4
100026f0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100026f4:	fa21 f204 	lsr.w	r2, r1, r4
100026f8:	ea20 0002 	bic.w	r0, r0, r2
100026fc:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
10002700:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10002704:	bf08      	it	eq
10002706:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1000270a:	bd70      	pop	{r4, r5, r6, pc}
1000270c:	f094 0f00 	teq	r4, #0
10002710:	d10f      	bne.n	10002732 <__aeabi_dmul+0x1c2>
10002712:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
10002716:	0040      	lsls	r0, r0, #1
10002718:	eb41 0101 	adc.w	r1, r1, r1
1000271c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10002720:	bf08      	it	eq
10002722:	3c01      	subeq	r4, #1
10002724:	d0f7      	beq.n	10002716 <__aeabi_dmul+0x1a6>
10002726:	ea41 0106 	orr.w	r1, r1, r6
1000272a:	f095 0f00 	teq	r5, #0
1000272e:	bf18      	it	ne
10002730:	4770      	bxne	lr
10002732:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
10002736:	0052      	lsls	r2, r2, #1
10002738:	eb43 0303 	adc.w	r3, r3, r3
1000273c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
10002740:	bf08      	it	eq
10002742:	3d01      	subeq	r5, #1
10002744:	d0f7      	beq.n	10002736 <__aeabi_dmul+0x1c6>
10002746:	ea43 0306 	orr.w	r3, r3, r6
1000274a:	4770      	bx	lr
1000274c:	ea94 0f0c 	teq	r4, ip
10002750:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10002754:	bf18      	it	ne
10002756:	ea95 0f0c 	teqne	r5, ip
1000275a:	d00c      	beq.n	10002776 <__aeabi_dmul+0x206>
1000275c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10002760:	bf18      	it	ne
10002762:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10002766:	d1d1      	bne.n	1000270c <__aeabi_dmul+0x19c>
10002768:	ea81 0103 	eor.w	r1, r1, r3
1000276c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10002770:	f04f 0000 	mov.w	r0, #0
10002774:	bd70      	pop	{r4, r5, r6, pc}
10002776:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
1000277a:	bf06      	itte	eq
1000277c:	4610      	moveq	r0, r2
1000277e:	4619      	moveq	r1, r3
10002780:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10002784:	d019      	beq.n	100027ba <__aeabi_dmul+0x24a>
10002786:	ea94 0f0c 	teq	r4, ip
1000278a:	d102      	bne.n	10002792 <__aeabi_dmul+0x222>
1000278c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
10002790:	d113      	bne.n	100027ba <__aeabi_dmul+0x24a>
10002792:	ea95 0f0c 	teq	r5, ip
10002796:	d105      	bne.n	100027a4 <__aeabi_dmul+0x234>
10002798:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
1000279c:	bf1c      	itt	ne
1000279e:	4610      	movne	r0, r2
100027a0:	4619      	movne	r1, r3
100027a2:	d10a      	bne.n	100027ba <__aeabi_dmul+0x24a>
100027a4:	ea81 0103 	eor.w	r1, r1, r3
100027a8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100027ac:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
100027b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
100027b4:	f04f 0000 	mov.w	r0, #0
100027b8:	bd70      	pop	{r4, r5, r6, pc}
100027ba:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
100027be:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
100027c2:	bd70      	pop	{r4, r5, r6, pc}

100027c4 <__aeabi_ddiv>:
100027c4:	b570      	push	{r4, r5, r6, lr}
100027c6:	f04f 0cff 	mov.w	ip, #255	; 0xff
100027ca:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
100027ce:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
100027d2:	bf1d      	ittte	ne
100027d4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
100027d8:	ea94 0f0c 	teqne	r4, ip
100027dc:	ea95 0f0c 	teqne	r5, ip
100027e0:	f000 f8a7 	bleq	10002932 <__aeabi_ddiv+0x16e>
100027e4:	eba4 0405 	sub.w	r4, r4, r5
100027e8:	ea81 0e03 	eor.w	lr, r1, r3
100027ec:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
100027f0:	ea4f 3101 	mov.w	r1, r1, lsl #12
100027f4:	f000 8088 	beq.w	10002908 <__aeabi_ddiv+0x144>
100027f8:	ea4f 3303 	mov.w	r3, r3, lsl #12
100027fc:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
10002800:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
10002804:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
10002808:	ea4f 2202 	mov.w	r2, r2, lsl #8
1000280c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
10002810:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
10002814:	ea4f 2600 	mov.w	r6, r0, lsl #8
10002818:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
1000281c:	429d      	cmp	r5, r3
1000281e:	bf08      	it	eq
10002820:	4296      	cmpeq	r6, r2
10002822:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
10002826:	f504 7440 	add.w	r4, r4, #768	; 0x300
1000282a:	d202      	bcs.n	10002832 <__aeabi_ddiv+0x6e>
1000282c:	085b      	lsrs	r3, r3, #1
1000282e:	ea4f 0232 	mov.w	r2, r2, rrx
10002832:	1ab6      	subs	r6, r6, r2
10002834:	eb65 0503 	sbc.w	r5, r5, r3
10002838:	085b      	lsrs	r3, r3, #1
1000283a:	ea4f 0232 	mov.w	r2, r2, rrx
1000283e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
10002842:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
10002846:	ebb6 0e02 	subs.w	lr, r6, r2
1000284a:	eb75 0e03 	sbcs.w	lr, r5, r3
1000284e:	bf22      	ittt	cs
10002850:	1ab6      	subcs	r6, r6, r2
10002852:	4675      	movcs	r5, lr
10002854:	ea40 000c 	orrcs.w	r0, r0, ip
10002858:	085b      	lsrs	r3, r3, #1
1000285a:	ea4f 0232 	mov.w	r2, r2, rrx
1000285e:	ebb6 0e02 	subs.w	lr, r6, r2
10002862:	eb75 0e03 	sbcs.w	lr, r5, r3
10002866:	bf22      	ittt	cs
10002868:	1ab6      	subcs	r6, r6, r2
1000286a:	4675      	movcs	r5, lr
1000286c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
10002870:	085b      	lsrs	r3, r3, #1
10002872:	ea4f 0232 	mov.w	r2, r2, rrx
10002876:	ebb6 0e02 	subs.w	lr, r6, r2
1000287a:	eb75 0e03 	sbcs.w	lr, r5, r3
1000287e:	bf22      	ittt	cs
10002880:	1ab6      	subcs	r6, r6, r2
10002882:	4675      	movcs	r5, lr
10002884:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
10002888:	085b      	lsrs	r3, r3, #1
1000288a:	ea4f 0232 	mov.w	r2, r2, rrx
1000288e:	ebb6 0e02 	subs.w	lr, r6, r2
10002892:	eb75 0e03 	sbcs.w	lr, r5, r3
10002896:	bf22      	ittt	cs
10002898:	1ab6      	subcs	r6, r6, r2
1000289a:	4675      	movcs	r5, lr
1000289c:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
100028a0:	ea55 0e06 	orrs.w	lr, r5, r6
100028a4:	d018      	beq.n	100028d8 <__aeabi_ddiv+0x114>
100028a6:	ea4f 1505 	mov.w	r5, r5, lsl #4
100028aa:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
100028ae:	ea4f 1606 	mov.w	r6, r6, lsl #4
100028b2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
100028b6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
100028ba:	ea4f 02c2 	mov.w	r2, r2, lsl #3
100028be:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
100028c2:	d1c0      	bne.n	10002846 <__aeabi_ddiv+0x82>
100028c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
100028c8:	d10b      	bne.n	100028e2 <__aeabi_ddiv+0x11e>
100028ca:	ea41 0100 	orr.w	r1, r1, r0
100028ce:	f04f 0000 	mov.w	r0, #0
100028d2:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
100028d6:	e7b6      	b.n	10002846 <__aeabi_ddiv+0x82>
100028d8:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
100028dc:	bf04      	itt	eq
100028de:	4301      	orreq	r1, r0
100028e0:	2000      	moveq	r0, #0
100028e2:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
100028e6:	bf88      	it	hi
100028e8:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
100028ec:	f63f aeaf 	bhi.w	1000264e <__aeabi_dmul+0xde>
100028f0:	ebb5 0c03 	subs.w	ip, r5, r3
100028f4:	bf04      	itt	eq
100028f6:	ebb6 0c02 	subseq.w	ip, r6, r2
100028fa:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
100028fe:	f150 0000 	adcs.w	r0, r0, #0
10002902:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10002906:	bd70      	pop	{r4, r5, r6, pc}
10002908:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
1000290c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
10002910:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
10002914:	bfc2      	ittt	gt
10002916:	ebd4 050c 	rsbsgt	r5, r4, ip
1000291a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
1000291e:	bd70      	popgt	{r4, r5, r6, pc}
10002920:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10002924:	f04f 0e00 	mov.w	lr, #0
10002928:	3c01      	subs	r4, #1
1000292a:	e690      	b.n	1000264e <__aeabi_dmul+0xde>
1000292c:	ea45 0e06 	orr.w	lr, r5, r6
10002930:	e68d      	b.n	1000264e <__aeabi_dmul+0xde>
10002932:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10002936:	ea94 0f0c 	teq	r4, ip
1000293a:	bf08      	it	eq
1000293c:	ea95 0f0c 	teqeq	r5, ip
10002940:	f43f af3b 	beq.w	100027ba <__aeabi_dmul+0x24a>
10002944:	ea94 0f0c 	teq	r4, ip
10002948:	d10a      	bne.n	10002960 <__aeabi_ddiv+0x19c>
1000294a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
1000294e:	f47f af34 	bne.w	100027ba <__aeabi_dmul+0x24a>
10002952:	ea95 0f0c 	teq	r5, ip
10002956:	f47f af25 	bne.w	100027a4 <__aeabi_dmul+0x234>
1000295a:	4610      	mov	r0, r2
1000295c:	4619      	mov	r1, r3
1000295e:	e72c      	b.n	100027ba <__aeabi_dmul+0x24a>
10002960:	ea95 0f0c 	teq	r5, ip
10002964:	d106      	bne.n	10002974 <__aeabi_ddiv+0x1b0>
10002966:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
1000296a:	f43f aefd 	beq.w	10002768 <__aeabi_dmul+0x1f8>
1000296e:	4610      	mov	r0, r2
10002970:	4619      	mov	r1, r3
10002972:	e722      	b.n	100027ba <__aeabi_dmul+0x24a>
10002974:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10002978:	bf18      	it	ne
1000297a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
1000297e:	f47f aec5 	bne.w	1000270c <__aeabi_dmul+0x19c>
10002982:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
10002986:	f47f af0d 	bne.w	100027a4 <__aeabi_dmul+0x234>
1000298a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
1000298e:	f47f aeeb 	bne.w	10002768 <__aeabi_dmul+0x1f8>
10002992:	e712      	b.n	100027ba <__aeabi_dmul+0x24a>

10002994 <__gedf2>:
10002994:	f04f 3cff 	mov.w	ip, #4294967295
10002998:	e006      	b.n	100029a8 <__cmpdf2+0x4>
1000299a:	bf00      	nop

1000299c <__ledf2>:
1000299c:	f04f 0c01 	mov.w	ip, #1
100029a0:	e002      	b.n	100029a8 <__cmpdf2+0x4>
100029a2:	bf00      	nop

100029a4 <__cmpdf2>:
100029a4:	f04f 0c01 	mov.w	ip, #1
100029a8:	f84d cd04 	str.w	ip, [sp, #-4]!
100029ac:	ea4f 0c41 	mov.w	ip, r1, lsl #1
100029b0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
100029b4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
100029b8:	bf18      	it	ne
100029ba:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
100029be:	d01b      	beq.n	100029f8 <__cmpdf2+0x54>
100029c0:	b001      	add	sp, #4
100029c2:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
100029c6:	bf0c      	ite	eq
100029c8:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
100029cc:	ea91 0f03 	teqne	r1, r3
100029d0:	bf02      	ittt	eq
100029d2:	ea90 0f02 	teqeq	r0, r2
100029d6:	2000      	moveq	r0, #0
100029d8:	4770      	bxeq	lr
100029da:	f110 0f00 	cmn.w	r0, #0
100029de:	ea91 0f03 	teq	r1, r3
100029e2:	bf58      	it	pl
100029e4:	4299      	cmppl	r1, r3
100029e6:	bf08      	it	eq
100029e8:	4290      	cmpeq	r0, r2
100029ea:	bf2c      	ite	cs
100029ec:	17d8      	asrcs	r0, r3, #31
100029ee:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
100029f2:	f040 0001 	orr.w	r0, r0, #1
100029f6:	4770      	bx	lr
100029f8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
100029fc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10002a00:	d102      	bne.n	10002a08 <__cmpdf2+0x64>
10002a02:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10002a06:	d107      	bne.n	10002a18 <__cmpdf2+0x74>
10002a08:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10002a0c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10002a10:	d1d6      	bne.n	100029c0 <__cmpdf2+0x1c>
10002a12:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10002a16:	d0d3      	beq.n	100029c0 <__cmpdf2+0x1c>
10002a18:	f85d 0b04 	ldr.w	r0, [sp], #4
10002a1c:	4770      	bx	lr
10002a1e:	bf00      	nop

10002a20 <__aeabi_cdrcmple>:
10002a20:	4684      	mov	ip, r0
10002a22:	4610      	mov	r0, r2
10002a24:	4662      	mov	r2, ip
10002a26:	468c      	mov	ip, r1
10002a28:	4619      	mov	r1, r3
10002a2a:	4663      	mov	r3, ip
10002a2c:	e000      	b.n	10002a30 <__aeabi_cdcmpeq>
10002a2e:	bf00      	nop

10002a30 <__aeabi_cdcmpeq>:
10002a30:	b501      	push	{r0, lr}
10002a32:	f7ff ffb7 	bl	100029a4 <__cmpdf2>
10002a36:	2800      	cmp	r0, #0
10002a38:	bf48      	it	mi
10002a3a:	f110 0f00 	cmnmi.w	r0, #0
10002a3e:	bd01      	pop	{r0, pc}

10002a40 <__aeabi_dcmpeq>:
10002a40:	f84d ed08 	str.w	lr, [sp, #-8]!
10002a44:	f7ff fff4 	bl	10002a30 <__aeabi_cdcmpeq>
10002a48:	bf0c      	ite	eq
10002a4a:	2001      	moveq	r0, #1
10002a4c:	2000      	movne	r0, #0
10002a4e:	f85d fb08 	ldr.w	pc, [sp], #8
10002a52:	bf00      	nop

10002a54 <__aeabi_dcmplt>:
10002a54:	f84d ed08 	str.w	lr, [sp, #-8]!
10002a58:	f7ff ffea 	bl	10002a30 <__aeabi_cdcmpeq>
10002a5c:	bf34      	ite	cc
10002a5e:	2001      	movcc	r0, #1
10002a60:	2000      	movcs	r0, #0
10002a62:	f85d fb08 	ldr.w	pc, [sp], #8
10002a66:	bf00      	nop

10002a68 <__aeabi_dcmple>:
10002a68:	f84d ed08 	str.w	lr, [sp, #-8]!
10002a6c:	f7ff ffe0 	bl	10002a30 <__aeabi_cdcmpeq>
10002a70:	bf94      	ite	ls
10002a72:	2001      	movls	r0, #1
10002a74:	2000      	movhi	r0, #0
10002a76:	f85d fb08 	ldr.w	pc, [sp], #8
10002a7a:	bf00      	nop

10002a7c <__aeabi_dcmpge>:
10002a7c:	f84d ed08 	str.w	lr, [sp, #-8]!
10002a80:	f7ff ffce 	bl	10002a20 <__aeabi_cdrcmple>
10002a84:	bf94      	ite	ls
10002a86:	2001      	movls	r0, #1
10002a88:	2000      	movhi	r0, #0
10002a8a:	f85d fb08 	ldr.w	pc, [sp], #8
10002a8e:	bf00      	nop

10002a90 <__aeabi_dcmpgt>:
10002a90:	f84d ed08 	str.w	lr, [sp, #-8]!
10002a94:	f7ff ffc4 	bl	10002a20 <__aeabi_cdrcmple>
10002a98:	bf34      	ite	cc
10002a9a:	2001      	movcc	r0, #1
10002a9c:	2000      	movcs	r0, #0
10002a9e:	f85d fb08 	ldr.w	pc, [sp], #8
10002aa2:	bf00      	nop

10002aa4 <__aeabi_d2iz>:
10002aa4:	ea4f 0241 	mov.w	r2, r1, lsl #1
10002aa8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
10002aac:	d215      	bcs.n	10002ada <__aeabi_d2iz+0x36>
10002aae:	d511      	bpl.n	10002ad4 <__aeabi_d2iz+0x30>
10002ab0:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
10002ab4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10002ab8:	d912      	bls.n	10002ae0 <__aeabi_d2iz+0x3c>
10002aba:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10002abe:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
10002ac2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10002ac6:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
10002aca:	fa23 f002 	lsr.w	r0, r3, r2
10002ace:	bf18      	it	ne
10002ad0:	4240      	negne	r0, r0
10002ad2:	4770      	bx	lr
10002ad4:	f04f 0000 	mov.w	r0, #0
10002ad8:	4770      	bx	lr
10002ada:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10002ade:	d105      	bne.n	10002aec <__aeabi_d2iz+0x48>
10002ae0:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
10002ae4:	bf08      	it	eq
10002ae6:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
10002aea:	4770      	bx	lr
10002aec:	f04f 0000 	mov.w	r0, #0
10002af0:	4770      	bx	lr
10002af2:	bf00      	nop

10002af4 <__aeabi_d2uiz>:
10002af4:	004a      	lsls	r2, r1, #1
10002af6:	d211      	bcs.n	10002b1c <__aeabi_d2uiz+0x28>
10002af8:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
10002afc:	d211      	bcs.n	10002b22 <__aeabi_d2uiz+0x2e>
10002afe:	d50d      	bpl.n	10002b1c <__aeabi_d2uiz+0x28>
10002b00:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
10002b04:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10002b08:	d40e      	bmi.n	10002b28 <__aeabi_d2uiz+0x34>
10002b0a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10002b0e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
10002b12:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10002b16:	fa23 f002 	lsr.w	r0, r3, r2
10002b1a:	4770      	bx	lr
10002b1c:	f04f 0000 	mov.w	r0, #0
10002b20:	4770      	bx	lr
10002b22:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10002b26:	d102      	bne.n	10002b2e <__aeabi_d2uiz+0x3a>
10002b28:	f04f 30ff 	mov.w	r0, #4294967295
10002b2c:	4770      	bx	lr
10002b2e:	f04f 0000 	mov.w	r0, #0
10002b32:	4770      	bx	lr

10002b34 <__aeabi_uldivmod>:
10002b34:	b953      	cbnz	r3, 10002b4c <__aeabi_uldivmod+0x18>
10002b36:	b94a      	cbnz	r2, 10002b4c <__aeabi_uldivmod+0x18>
10002b38:	2900      	cmp	r1, #0
10002b3a:	bf08      	it	eq
10002b3c:	2800      	cmpeq	r0, #0
10002b3e:	bf1c      	itt	ne
10002b40:	f04f 31ff 	movne.w	r1, #4294967295
10002b44:	f04f 30ff 	movne.w	r0, #4294967295
10002b48:	f001 b934 	b.w	10003db4 <__aeabi_idiv0>
10002b4c:	f1ad 0c08 	sub.w	ip, sp, #8
10002b50:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10002b54:	f000 f806 	bl	10002b64 <__udivmoddi4>
10002b58:	f8dd e004 	ldr.w	lr, [sp, #4]
10002b5c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10002b60:	b004      	add	sp, #16
10002b62:	4770      	bx	lr

10002b64 <__udivmoddi4>:
10002b64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10002b68:	9d09      	ldr	r5, [sp, #36]	; 0x24
10002b6a:	4604      	mov	r4, r0
10002b6c:	460f      	mov	r7, r1
10002b6e:	2b00      	cmp	r3, #0
10002b70:	d148      	bne.n	10002c04 <__udivmoddi4+0xa0>
10002b72:	428a      	cmp	r2, r1
10002b74:	4694      	mov	ip, r2
10002b76:	d961      	bls.n	10002c3c <__udivmoddi4+0xd8>
10002b78:	fab2 f382 	clz	r3, r2
10002b7c:	b143      	cbz	r3, 10002b90 <__udivmoddi4+0x2c>
10002b7e:	f1c3 0120 	rsb	r1, r3, #32
10002b82:	409f      	lsls	r7, r3
10002b84:	fa02 fc03 	lsl.w	ip, r2, r3
10002b88:	409c      	lsls	r4, r3
10002b8a:	fa20 f101 	lsr.w	r1, r0, r1
10002b8e:	430f      	orrs	r7, r1
10002b90:	ea4f 411c 	mov.w	r1, ip, lsr #16
10002b94:	fa1f fe8c 	uxth.w	lr, ip
10002b98:	0c22      	lsrs	r2, r4, #16
10002b9a:	fbb7 f6f1 	udiv	r6, r7, r1
10002b9e:	fb01 7716 	mls	r7, r1, r6, r7
10002ba2:	fb06 f00e 	mul.w	r0, r6, lr
10002ba6:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
10002baa:	4290      	cmp	r0, r2
10002bac:	d908      	bls.n	10002bc0 <__udivmoddi4+0x5c>
10002bae:	eb1c 0202 	adds.w	r2, ip, r2
10002bb2:	f106 37ff 	add.w	r7, r6, #4294967295
10002bb6:	d202      	bcs.n	10002bbe <__udivmoddi4+0x5a>
10002bb8:	4290      	cmp	r0, r2
10002bba:	f200 8137 	bhi.w	10002e2c <__udivmoddi4+0x2c8>
10002bbe:	463e      	mov	r6, r7
10002bc0:	1a12      	subs	r2, r2, r0
10002bc2:	b2a4      	uxth	r4, r4
10002bc4:	fbb2 f0f1 	udiv	r0, r2, r1
10002bc8:	fb01 2210 	mls	r2, r1, r0, r2
10002bcc:	fb00 fe0e 	mul.w	lr, r0, lr
10002bd0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
10002bd4:	45a6      	cmp	lr, r4
10002bd6:	d908      	bls.n	10002bea <__udivmoddi4+0x86>
10002bd8:	eb1c 0404 	adds.w	r4, ip, r4
10002bdc:	f100 32ff 	add.w	r2, r0, #4294967295
10002be0:	d202      	bcs.n	10002be8 <__udivmoddi4+0x84>
10002be2:	45a6      	cmp	lr, r4
10002be4:	f200 811c 	bhi.w	10002e20 <__udivmoddi4+0x2bc>
10002be8:	4610      	mov	r0, r2
10002bea:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
10002bee:	eba4 040e 	sub.w	r4, r4, lr
10002bf2:	2600      	movs	r6, #0
10002bf4:	b11d      	cbz	r5, 10002bfe <__udivmoddi4+0x9a>
10002bf6:	40dc      	lsrs	r4, r3
10002bf8:	2300      	movs	r3, #0
10002bfa:	e9c5 4300 	strd	r4, r3, [r5]
10002bfe:	4631      	mov	r1, r6
10002c00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10002c04:	428b      	cmp	r3, r1
10002c06:	d909      	bls.n	10002c1c <__udivmoddi4+0xb8>
10002c08:	2d00      	cmp	r5, #0
10002c0a:	f000 80fd 	beq.w	10002e08 <__udivmoddi4+0x2a4>
10002c0e:	2600      	movs	r6, #0
10002c10:	e9c5 0100 	strd	r0, r1, [r5]
10002c14:	4630      	mov	r0, r6
10002c16:	4631      	mov	r1, r6
10002c18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10002c1c:	fab3 f683 	clz	r6, r3
10002c20:	2e00      	cmp	r6, #0
10002c22:	d14b      	bne.n	10002cbc <__udivmoddi4+0x158>
10002c24:	428b      	cmp	r3, r1
10002c26:	f0c0 80f2 	bcc.w	10002e0e <__udivmoddi4+0x2aa>
10002c2a:	4282      	cmp	r2, r0
10002c2c:	f240 80ef 	bls.w	10002e0e <__udivmoddi4+0x2aa>
10002c30:	4630      	mov	r0, r6
10002c32:	2d00      	cmp	r5, #0
10002c34:	d0e3      	beq.n	10002bfe <__udivmoddi4+0x9a>
10002c36:	e9c5 4700 	strd	r4, r7, [r5]
10002c3a:	e7e0      	b.n	10002bfe <__udivmoddi4+0x9a>
10002c3c:	b902      	cbnz	r2, 10002c40 <__udivmoddi4+0xdc>
10002c3e:	deff      	udf	#255	; 0xff
10002c40:	fab2 f382 	clz	r3, r2
10002c44:	2b00      	cmp	r3, #0
10002c46:	f040 809d 	bne.w	10002d84 <__udivmoddi4+0x220>
10002c4a:	1a89      	subs	r1, r1, r2
10002c4c:	ea4f 4e12 	mov.w	lr, r2, lsr #16
10002c50:	b297      	uxth	r7, r2
10002c52:	2601      	movs	r6, #1
10002c54:	0c20      	lsrs	r0, r4, #16
10002c56:	fbb1 f2fe 	udiv	r2, r1, lr
10002c5a:	fb0e 1112 	mls	r1, lr, r2, r1
10002c5e:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
10002c62:	fb07 f002 	mul.w	r0, r7, r2
10002c66:	4288      	cmp	r0, r1
10002c68:	d90f      	bls.n	10002c8a <__udivmoddi4+0x126>
10002c6a:	eb1c 0101 	adds.w	r1, ip, r1
10002c6e:	f102 38ff 	add.w	r8, r2, #4294967295
10002c72:	bf2c      	ite	cs
10002c74:	f04f 0901 	movcs.w	r9, #1
10002c78:	f04f 0900 	movcc.w	r9, #0
10002c7c:	4288      	cmp	r0, r1
10002c7e:	d903      	bls.n	10002c88 <__udivmoddi4+0x124>
10002c80:	f1b9 0f00 	cmp.w	r9, #0
10002c84:	f000 80cf 	beq.w	10002e26 <__udivmoddi4+0x2c2>
10002c88:	4642      	mov	r2, r8
10002c8a:	1a09      	subs	r1, r1, r0
10002c8c:	b2a4      	uxth	r4, r4
10002c8e:	fbb1 f0fe 	udiv	r0, r1, lr
10002c92:	fb0e 1110 	mls	r1, lr, r0, r1
10002c96:	fb00 f707 	mul.w	r7, r0, r7
10002c9a:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
10002c9e:	42a7      	cmp	r7, r4
10002ca0:	d908      	bls.n	10002cb4 <__udivmoddi4+0x150>
10002ca2:	eb1c 0404 	adds.w	r4, ip, r4
10002ca6:	f100 31ff 	add.w	r1, r0, #4294967295
10002caa:	d202      	bcs.n	10002cb2 <__udivmoddi4+0x14e>
10002cac:	42a7      	cmp	r7, r4
10002cae:	f200 80b4 	bhi.w	10002e1a <__udivmoddi4+0x2b6>
10002cb2:	4608      	mov	r0, r1
10002cb4:	1be4      	subs	r4, r4, r7
10002cb6:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
10002cba:	e79b      	b.n	10002bf4 <__udivmoddi4+0x90>
10002cbc:	f1c6 0720 	rsb	r7, r6, #32
10002cc0:	40b3      	lsls	r3, r6
10002cc2:	fa01 f406 	lsl.w	r4, r1, r6
10002cc6:	fa22 fc07 	lsr.w	ip, r2, r7
10002cca:	40f9      	lsrs	r1, r7
10002ccc:	40b2      	lsls	r2, r6
10002cce:	ea4c 0c03 	orr.w	ip, ip, r3
10002cd2:	fa20 f307 	lsr.w	r3, r0, r7
10002cd6:	ea4f 491c 	mov.w	r9, ip, lsr #16
10002cda:	431c      	orrs	r4, r3
10002cdc:	fa1f fe8c 	uxth.w	lr, ip
10002ce0:	fa00 f306 	lsl.w	r3, r0, r6
10002ce4:	0c20      	lsrs	r0, r4, #16
10002ce6:	fbb1 f8f9 	udiv	r8, r1, r9
10002cea:	fb09 1118 	mls	r1, r9, r8, r1
10002cee:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
10002cf2:	fb08 f00e 	mul.w	r0, r8, lr
10002cf6:	4288      	cmp	r0, r1
10002cf8:	d90f      	bls.n	10002d1a <__udivmoddi4+0x1b6>
10002cfa:	eb1c 0101 	adds.w	r1, ip, r1
10002cfe:	f108 3aff 	add.w	sl, r8, #4294967295
10002d02:	bf2c      	ite	cs
10002d04:	f04f 0b01 	movcs.w	fp, #1
10002d08:	f04f 0b00 	movcc.w	fp, #0
10002d0c:	4288      	cmp	r0, r1
10002d0e:	d903      	bls.n	10002d18 <__udivmoddi4+0x1b4>
10002d10:	f1bb 0f00 	cmp.w	fp, #0
10002d14:	f000 808d 	beq.w	10002e32 <__udivmoddi4+0x2ce>
10002d18:	46d0      	mov	r8, sl
10002d1a:	1a09      	subs	r1, r1, r0
10002d1c:	b2a4      	uxth	r4, r4
10002d1e:	fbb1 f0f9 	udiv	r0, r1, r9
10002d22:	fb09 1110 	mls	r1, r9, r0, r1
10002d26:	fb00 fe0e 	mul.w	lr, r0, lr
10002d2a:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
10002d2e:	458e      	cmp	lr, r1
10002d30:	d907      	bls.n	10002d42 <__udivmoddi4+0x1de>
10002d32:	eb1c 0101 	adds.w	r1, ip, r1
10002d36:	f100 34ff 	add.w	r4, r0, #4294967295
10002d3a:	d201      	bcs.n	10002d40 <__udivmoddi4+0x1dc>
10002d3c:	458e      	cmp	lr, r1
10002d3e:	d87f      	bhi.n	10002e40 <__udivmoddi4+0x2dc>
10002d40:	4620      	mov	r0, r4
10002d42:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
10002d46:	eba1 010e 	sub.w	r1, r1, lr
10002d4a:	fba0 9802 	umull	r9, r8, r0, r2
10002d4e:	4541      	cmp	r1, r8
10002d50:	464c      	mov	r4, r9
10002d52:	46c6      	mov	lr, r8
10002d54:	d302      	bcc.n	10002d5c <__udivmoddi4+0x1f8>
10002d56:	d106      	bne.n	10002d66 <__udivmoddi4+0x202>
10002d58:	454b      	cmp	r3, r9
10002d5a:	d204      	bcs.n	10002d66 <__udivmoddi4+0x202>
10002d5c:	3801      	subs	r0, #1
10002d5e:	ebb9 0402 	subs.w	r4, r9, r2
10002d62:	eb68 0e0c 	sbc.w	lr, r8, ip
10002d66:	2d00      	cmp	r5, #0
10002d68:	d070      	beq.n	10002e4c <__udivmoddi4+0x2e8>
10002d6a:	1b1a      	subs	r2, r3, r4
10002d6c:	eb61 010e 	sbc.w	r1, r1, lr
10002d70:	fa22 f306 	lsr.w	r3, r2, r6
10002d74:	fa01 f707 	lsl.w	r7, r1, r7
10002d78:	40f1      	lsrs	r1, r6
10002d7a:	2600      	movs	r6, #0
10002d7c:	431f      	orrs	r7, r3
10002d7e:	e9c5 7100 	strd	r7, r1, [r5]
10002d82:	e73c      	b.n	10002bfe <__udivmoddi4+0x9a>
10002d84:	fa02 fc03 	lsl.w	ip, r2, r3
10002d88:	f1c3 0020 	rsb	r0, r3, #32
10002d8c:	fa01 f203 	lsl.w	r2, r1, r3
10002d90:	fa21 f600 	lsr.w	r6, r1, r0
10002d94:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
10002d98:	fa24 f100 	lsr.w	r1, r4, r0
10002d9c:	fa1f f78c 	uxth.w	r7, ip
10002da0:	409c      	lsls	r4, r3
10002da2:	4311      	orrs	r1, r2
10002da4:	fbb6 f0fe 	udiv	r0, r6, lr
10002da8:	0c0a      	lsrs	r2, r1, #16
10002daa:	fb0e 6610 	mls	r6, lr, r0, r6
10002dae:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
10002db2:	fb00 f607 	mul.w	r6, r0, r7
10002db6:	4296      	cmp	r6, r2
10002db8:	d90e      	bls.n	10002dd8 <__udivmoddi4+0x274>
10002dba:	eb1c 0202 	adds.w	r2, ip, r2
10002dbe:	f100 38ff 	add.w	r8, r0, #4294967295
10002dc2:	bf2c      	ite	cs
10002dc4:	f04f 0901 	movcs.w	r9, #1
10002dc8:	f04f 0900 	movcc.w	r9, #0
10002dcc:	4296      	cmp	r6, r2
10002dce:	d902      	bls.n	10002dd6 <__udivmoddi4+0x272>
10002dd0:	f1b9 0f00 	cmp.w	r9, #0
10002dd4:	d031      	beq.n	10002e3a <__udivmoddi4+0x2d6>
10002dd6:	4640      	mov	r0, r8
10002dd8:	1b92      	subs	r2, r2, r6
10002dda:	b289      	uxth	r1, r1
10002ddc:	fbb2 f6fe 	udiv	r6, r2, lr
10002de0:	fb0e 2216 	mls	r2, lr, r6, r2
10002de4:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
10002de8:	fb06 f207 	mul.w	r2, r6, r7
10002dec:	428a      	cmp	r2, r1
10002dee:	d907      	bls.n	10002e00 <__udivmoddi4+0x29c>
10002df0:	eb1c 0101 	adds.w	r1, ip, r1
10002df4:	f106 38ff 	add.w	r8, r6, #4294967295
10002df8:	d201      	bcs.n	10002dfe <__udivmoddi4+0x29a>
10002dfa:	428a      	cmp	r2, r1
10002dfc:	d823      	bhi.n	10002e46 <__udivmoddi4+0x2e2>
10002dfe:	4646      	mov	r6, r8
10002e00:	1a89      	subs	r1, r1, r2
10002e02:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
10002e06:	e725      	b.n	10002c54 <__udivmoddi4+0xf0>
10002e08:	462e      	mov	r6, r5
10002e0a:	4628      	mov	r0, r5
10002e0c:	e6f7      	b.n	10002bfe <__udivmoddi4+0x9a>
10002e0e:	1a84      	subs	r4, r0, r2
10002e10:	eb61 0303 	sbc.w	r3, r1, r3
10002e14:	2001      	movs	r0, #1
10002e16:	461f      	mov	r7, r3
10002e18:	e70b      	b.n	10002c32 <__udivmoddi4+0xce>
10002e1a:	4464      	add	r4, ip
10002e1c:	3802      	subs	r0, #2
10002e1e:	e749      	b.n	10002cb4 <__udivmoddi4+0x150>
10002e20:	4464      	add	r4, ip
10002e22:	3802      	subs	r0, #2
10002e24:	e6e1      	b.n	10002bea <__udivmoddi4+0x86>
10002e26:	3a02      	subs	r2, #2
10002e28:	4461      	add	r1, ip
10002e2a:	e72e      	b.n	10002c8a <__udivmoddi4+0x126>
10002e2c:	3e02      	subs	r6, #2
10002e2e:	4462      	add	r2, ip
10002e30:	e6c6      	b.n	10002bc0 <__udivmoddi4+0x5c>
10002e32:	f1a8 0802 	sub.w	r8, r8, #2
10002e36:	4461      	add	r1, ip
10002e38:	e76f      	b.n	10002d1a <__udivmoddi4+0x1b6>
10002e3a:	3802      	subs	r0, #2
10002e3c:	4462      	add	r2, ip
10002e3e:	e7cb      	b.n	10002dd8 <__udivmoddi4+0x274>
10002e40:	3802      	subs	r0, #2
10002e42:	4461      	add	r1, ip
10002e44:	e77d      	b.n	10002d42 <__udivmoddi4+0x1de>
10002e46:	3e02      	subs	r6, #2
10002e48:	4461      	add	r1, ip
10002e4a:	e7d9      	b.n	10002e00 <__udivmoddi4+0x29c>
10002e4c:	462e      	mov	r6, r5
10002e4e:	e6d6      	b.n	10002bfe <__udivmoddi4+0x9a>

10002e50 <selfrel_offset31>:
10002e50:	6803      	ldr	r3, [r0, #0]
10002e52:	005a      	lsls	r2, r3, #1
10002e54:	bf4c      	ite	mi
10002e56:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
10002e5a:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
10002e5e:	4418      	add	r0, r3
10002e60:	4770      	bx	lr
10002e62:	bf00      	nop

10002e64 <search_EIT_table>:
10002e64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10002e68:	b339      	cbz	r1, 10002eba <search_EIT_table+0x56>
10002e6a:	f101 38ff 	add.w	r8, r1, #4294967295
10002e6e:	4606      	mov	r6, r0
10002e70:	4617      	mov	r7, r2
10002e72:	f04f 0900 	mov.w	r9, #0
10002e76:	4645      	mov	r5, r8
10002e78:	eb19 0105 	adds.w	r1, r9, r5
10002e7c:	bf48      	it	mi
10002e7e:	3101      	addmi	r1, #1
10002e80:	1049      	asrs	r1, r1, #1
10002e82:	eb06 0ac1 	add.w	sl, r6, r1, lsl #3
10002e86:	00cc      	lsls	r4, r1, #3
10002e88:	4650      	mov	r0, sl
10002e8a:	f7ff ffe1 	bl	10002e50 <selfrel_offset31>
10002e8e:	3408      	adds	r4, #8
10002e90:	4588      	cmp	r8, r1
10002e92:	4603      	mov	r3, r0
10002e94:	eb06 0004 	add.w	r0, r6, r4
10002e98:	d009      	beq.n	10002eae <search_EIT_table+0x4a>
10002e9a:	42bb      	cmp	r3, r7
10002e9c:	d809      	bhi.n	10002eb2 <search_EIT_table+0x4e>
10002e9e:	f7ff ffd7 	bl	10002e50 <selfrel_offset31>
10002ea2:	3801      	subs	r0, #1
10002ea4:	f101 0901 	add.w	r9, r1, #1
10002ea8:	42b8      	cmp	r0, r7
10002eaa:	d3e5      	bcc.n	10002e78 <search_EIT_table+0x14>
10002eac:	e007      	b.n	10002ebe <search_EIT_table+0x5a>
10002eae:	42bb      	cmp	r3, r7
10002eb0:	d905      	bls.n	10002ebe <search_EIT_table+0x5a>
10002eb2:	4589      	cmp	r9, r1
10002eb4:	f101 35ff 	add.w	r5, r1, #4294967295
10002eb8:	d1de      	bne.n	10002e78 <search_EIT_table+0x14>
10002eba:	f04f 0a00 	mov.w	sl, #0
10002ebe:	4650      	mov	r0, sl
10002ec0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

10002ec4 <__gnu_unwind_get_pr_addr>:
10002ec4:	2801      	cmp	r0, #1
10002ec6:	d007      	beq.n	10002ed8 <__gnu_unwind_get_pr_addr+0x14>
10002ec8:	2802      	cmp	r0, #2
10002eca:	d007      	beq.n	10002edc <__gnu_unwind_get_pr_addr+0x18>
10002ecc:	2800      	cmp	r0, #0
10002ece:	4b04      	ldr	r3, [pc, #16]	; (10002ee0 <__gnu_unwind_get_pr_addr+0x1c>)
10002ed0:	bf14      	ite	ne
10002ed2:	2000      	movne	r0, #0
10002ed4:	4618      	moveq	r0, r3
10002ed6:	4770      	bx	lr
10002ed8:	4802      	ldr	r0, [pc, #8]	; (10002ee4 <__gnu_unwind_get_pr_addr+0x20>)
10002eda:	4770      	bx	lr
10002edc:	4802      	ldr	r0, [pc, #8]	; (10002ee8 <__gnu_unwind_get_pr_addr+0x24>)
10002ede:	4770      	bx	lr
10002ee0:	100035d5 	ldrdne	r3, [r0], -r5
10002ee4:	100035d9 	ldrdne	r3, [r0], -r9
10002ee8:	100035dd 	ldrdne	r3, [r0], -sp

10002eec <get_eit_entry>:
10002eec:	4b23      	ldr	r3, [pc, #140]	; (10002f7c <get_eit_entry+0x90>)
10002eee:	b530      	push	{r4, r5, lr}
10002ef0:	4604      	mov	r4, r0
10002ef2:	b083      	sub	sp, #12
10002ef4:	1e8d      	subs	r5, r1, #2
10002ef6:	b343      	cbz	r3, 10002f4a <get_eit_entry+0x5e>
10002ef8:	a901      	add	r1, sp, #4
10002efa:	4628      	mov	r0, r5
10002efc:	e000      	b.n	10002f00 <get_eit_entry+0x14>
10002efe:	bf00      	nop
10002f00:	b1f0      	cbz	r0, 10002f40 <get_eit_entry+0x54>
10002f02:	9901      	ldr	r1, [sp, #4]
10002f04:	462a      	mov	r2, r5
10002f06:	f7ff ffad 	bl	10002e64 <search_EIT_table>
10002f0a:	4601      	mov	r1, r0
10002f0c:	b1c0      	cbz	r0, 10002f40 <get_eit_entry+0x54>
10002f0e:	f7ff ff9f 	bl	10002e50 <selfrel_offset31>
10002f12:	684b      	ldr	r3, [r1, #4]
10002f14:	64a0      	str	r0, [r4, #72]	; 0x48
10002f16:	2b01      	cmp	r3, #1
10002f18:	d02c      	beq.n	10002f74 <get_eit_entry+0x88>
10002f1a:	2b00      	cmp	r3, #0
10002f1c:	f101 0004 	add.w	r0, r1, #4
10002f20:	db24      	blt.n	10002f6c <get_eit_entry+0x80>
10002f22:	f7ff ff95 	bl	10002e50 <selfrel_offset31>
10002f26:	2300      	movs	r3, #0
10002f28:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10002f2c:	6803      	ldr	r3, [r0, #0]
10002f2e:	2b00      	cmp	r3, #0
10002f30:	db11      	blt.n	10002f56 <get_eit_entry+0x6a>
10002f32:	f7ff ff8d 	bl	10002e50 <selfrel_offset31>
10002f36:	4603      	mov	r3, r0
10002f38:	2000      	movs	r0, #0
10002f3a:	6123      	str	r3, [r4, #16]
10002f3c:	b003      	add	sp, #12
10002f3e:	bd30      	pop	{r4, r5, pc}
10002f40:	2300      	movs	r3, #0
10002f42:	2009      	movs	r0, #9
10002f44:	6123      	str	r3, [r4, #16]
10002f46:	b003      	add	sp, #12
10002f48:	bd30      	pop	{r4, r5, pc}
10002f4a:	480d      	ldr	r0, [pc, #52]	; (10002f80 <get_eit_entry+0x94>)
10002f4c:	490d      	ldr	r1, [pc, #52]	; (10002f84 <get_eit_entry+0x98>)
10002f4e:	1a09      	subs	r1, r1, r0
10002f50:	10c9      	asrs	r1, r1, #3
10002f52:	9101      	str	r1, [sp, #4]
10002f54:	e7d6      	b.n	10002f04 <get_eit_entry+0x18>
10002f56:	f3c3 6003 	ubfx	r0, r3, #24, #4
10002f5a:	f7ff ffb3 	bl	10002ec4 <__gnu_unwind_get_pr_addr>
10002f5e:	2800      	cmp	r0, #0
10002f60:	6120      	str	r0, [r4, #16]
10002f62:	bf14      	ite	ne
10002f64:	2000      	movne	r0, #0
10002f66:	2009      	moveq	r0, #9
10002f68:	b003      	add	sp, #12
10002f6a:	bd30      	pop	{r4, r5, pc}
10002f6c:	2301      	movs	r3, #1
10002f6e:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
10002f72:	e7db      	b.n	10002f2c <get_eit_entry+0x40>
10002f74:	2300      	movs	r3, #0
10002f76:	2005      	movs	r0, #5
10002f78:	6123      	str	r3, [r4, #16]
10002f7a:	e7df      	b.n	10002f3c <get_eit_entry+0x50>
10002f7c:	00000000 	andeq	r0, r0, r0
10002f80:	100044ac 	andne	r4, r0, ip, lsr #9
10002f84:	1000456c 	andne	r4, r0, ip, ror #10

10002f88 <restore_non_core_regs>:
10002f88:	6803      	ldr	r3, [r0, #0]
10002f8a:	07da      	lsls	r2, r3, #31
10002f8c:	b510      	push	{r4, lr}
10002f8e:	4604      	mov	r4, r0
10002f90:	d406      	bmi.n	10002fa0 <restore_non_core_regs+0x18>
10002f92:	079b      	lsls	r3, r3, #30
10002f94:	f100 0048 	add.w	r0, r0, #72	; 0x48
10002f98:	d509      	bpl.n	10002fae <restore_non_core_regs+0x26>
10002f9a:	f000 fc8f 	bl	100038bc <__gnu_Unwind_Restore_VFP_D>
10002f9e:	6823      	ldr	r3, [r4, #0]
10002fa0:	0759      	lsls	r1, r3, #29
10002fa2:	d509      	bpl.n	10002fb8 <restore_non_core_regs+0x30>
10002fa4:	071a      	lsls	r2, r3, #28
10002fa6:	d50e      	bpl.n	10002fc6 <restore_non_core_regs+0x3e>
10002fa8:	06db      	lsls	r3, r3, #27
10002faa:	d513      	bpl.n	10002fd4 <restore_non_core_regs+0x4c>
10002fac:	bd10      	pop	{r4, pc}
10002fae:	f000 fc7d 	bl	100038ac <__gnu_Unwind_Restore_VFP>
10002fb2:	6823      	ldr	r3, [r4, #0]
10002fb4:	0759      	lsls	r1, r3, #29
10002fb6:	d4f5      	bmi.n	10002fa4 <restore_non_core_regs+0x1c>
10002fb8:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
10002fbc:	f000 fc86 	bl	100038cc <__gnu_Unwind_Restore_VFP_D_16_to_31>
10002fc0:	6823      	ldr	r3, [r4, #0]
10002fc2:	071a      	lsls	r2, r3, #28
10002fc4:	d4f0      	bmi.n	10002fa8 <restore_non_core_regs+0x20>
10002fc6:	f504 70a8 	add.w	r0, r4, #336	; 0x150
10002fca:	f000 fc87 	bl	100038dc <__gnu_Unwind_Restore_WMMXD>
10002fce:	6823      	ldr	r3, [r4, #0]
10002fd0:	06db      	lsls	r3, r3, #27
10002fd2:	d4eb      	bmi.n	10002fac <restore_non_core_regs+0x24>
10002fd4:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
10002fd8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10002fdc:	f000 bcc2 	b.w	10003964 <__gnu_Unwind_Restore_WMMXC>

10002fe0 <__gnu_unwind_24bit.constprop.0>:
10002fe0:	2009      	movs	r0, #9
10002fe2:	4770      	bx	lr

10002fe4 <_Unwind_decode_typeinfo_ptr.constprop.0>:
10002fe4:	4603      	mov	r3, r0
10002fe6:	6800      	ldr	r0, [r0, #0]
10002fe8:	b100      	cbz	r0, 10002fec <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
10002fea:	4418      	add	r0, r3
10002fec:	4770      	bx	lr
10002fee:	bf00      	nop

10002ff0 <_Unwind_DebugHook>:
10002ff0:	4770      	bx	lr
10002ff2:	bf00      	nop

10002ff4 <unwind_phase2>:
10002ff4:	b570      	push	{r4, r5, r6, lr}
10002ff6:	4604      	mov	r4, r0
10002ff8:	460e      	mov	r6, r1
10002ffa:	6c31      	ldr	r1, [r6, #64]	; 0x40
10002ffc:	4620      	mov	r0, r4
10002ffe:	f7ff ff75 	bl	10002eec <get_eit_entry>
10003002:	4605      	mov	r5, r0
10003004:	b998      	cbnz	r0, 1000302e <unwind_phase2+0x3a>
10003006:	f8d6 c040 	ldr.w	ip, [r6, #64]	; 0x40
1000300a:	4632      	mov	r2, r6
1000300c:	6923      	ldr	r3, [r4, #16]
1000300e:	4621      	mov	r1, r4
10003010:	2001      	movs	r0, #1
10003012:	f8c4 c014 	str.w	ip, [r4, #20]
10003016:	4798      	blx	r3
10003018:	2808      	cmp	r0, #8
1000301a:	d0ee      	beq.n	10002ffa <unwind_phase2+0x6>
1000301c:	2807      	cmp	r0, #7
1000301e:	d106      	bne.n	1000302e <unwind_phase2+0x3a>
10003020:	4628      	mov	r0, r5
10003022:	6c31      	ldr	r1, [r6, #64]	; 0x40
10003024:	f7ff ffe4 	bl	10002ff0 <_Unwind_DebugHook>
10003028:	1d30      	adds	r0, r6, #4
1000302a:	f000 fc33 	bl	10003894 <__restore_core_regs>
1000302e:	f000 fec3 	bl	10003db8 <abort>
10003032:	bf00      	nop

10003034 <unwind_phase2_forced>:
10003034:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10003038:	f101 0c04 	add.w	ip, r1, #4
1000303c:	f5ad 7d74 	sub.w	sp, sp, #976	; 0x3d0
10003040:	68c7      	ldr	r7, [r0, #12]
10003042:	4606      	mov	r6, r0
10003044:	f8d0 8018 	ldr.w	r8, [r0, #24]
10003048:	4614      	mov	r4, r2
1000304a:	f10d 0e14 	add.w	lr, sp, #20
1000304e:	ad04      	add	r5, sp, #16
10003050:	f04f 0900 	mov.w	r9, #0
10003054:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10003058:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
1000305c:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10003060:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
10003064:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10003068:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
1000306c:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10003070:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
10003074:	f8c5 9000 	str.w	r9, [r5]
10003078:	e023      	b.n	100030c2 <unwind_phase2_forced+0x8e>
1000307a:	6c2b      	ldr	r3, [r5, #64]	; 0x40
1000307c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
10003080:	4629      	mov	r1, r5
10003082:	a87c      	add	r0, sp, #496	; 0x1f0
10003084:	6173      	str	r3, [r6, #20]
10003086:	f000 fe9f 	bl	10003dc8 <memcpy>
1000308a:	aa7c      	add	r2, sp, #496	; 0x1f0
1000308c:	4631      	mov	r1, r6
1000308e:	6933      	ldr	r3, [r6, #16]
10003090:	4650      	mov	r0, sl
10003092:	4798      	blx	r3
10003094:	9b8a      	ldr	r3, [sp, #552]	; 0x228
10003096:	4621      	mov	r1, r4
10003098:	4681      	mov	r9, r0
1000309a:	9303      	str	r3, [sp, #12]
1000309c:	4632      	mov	r2, r6
1000309e:	9c03      	ldr	r4, [sp, #12]
100030a0:	4633      	mov	r3, r6
100030a2:	2001      	movs	r0, #1
100030a4:	646c      	str	r4, [r5, #68]	; 0x44
100030a6:	e9cd 5800 	strd	r5, r8, [sp]
100030aa:	47b8      	blx	r7
100030ac:	4604      	mov	r4, r0
100030ae:	b9e8      	cbnz	r0, 100030ec <unwind_phase2_forced+0xb8>
100030b0:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
100030b4:	a97c      	add	r1, sp, #496	; 0x1f0
100030b6:	4628      	mov	r0, r5
100030b8:	f000 fe86 	bl	10003dc8 <memcpy>
100030bc:	f1b9 0f08 	cmp.w	r9, #8
100030c0:	d11b      	bne.n	100030fa <unwind_phase2_forced+0xc6>
100030c2:	3409      	adds	r4, #9
100030c4:	6c29      	ldr	r1, [r5, #64]	; 0x40
100030c6:	4630      	mov	r0, r6
100030c8:	f7ff ff10 	bl	10002eec <get_eit_entry>
100030cc:	4681      	mov	r9, r0
100030ce:	fa5f fa84 	uxtb.w	sl, r4
100030d2:	2800      	cmp	r0, #0
100030d4:	d0d1      	beq.n	1000307a <unwind_phase2_forced+0x46>
100030d6:	6bac      	ldr	r4, [r5, #56]	; 0x38
100030d8:	4633      	mov	r3, r6
100030da:	4632      	mov	r2, r6
100030dc:	f04a 0110 	orr.w	r1, sl, #16
100030e0:	646c      	str	r4, [r5, #68]	; 0x44
100030e2:	2001      	movs	r0, #1
100030e4:	e9cd 5800 	strd	r5, r8, [sp]
100030e8:	47b8      	blx	r7
100030ea:	b108      	cbz	r0, 100030f0 <unwind_phase2_forced+0xbc>
100030ec:	f04f 0909 	mov.w	r9, #9
100030f0:	4648      	mov	r0, r9
100030f2:	f50d 7d74 	add.w	sp, sp, #976	; 0x3d0
100030f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
100030fa:	f1b9 0f07 	cmp.w	r9, #7
100030fe:	d1f5      	bne.n	100030ec <unwind_phase2_forced+0xb8>
10003100:	4620      	mov	r0, r4
10003102:	6c29      	ldr	r1, [r5, #64]	; 0x40
10003104:	f7ff ff74 	bl	10002ff0 <_Unwind_DebugHook>
10003108:	a805      	add	r0, sp, #20
1000310a:	f000 fbc3 	bl	10003894 <__restore_core_regs>
1000310e:	bf00      	nop

10003110 <_Unwind_GetCFA>:
10003110:	6c40      	ldr	r0, [r0, #68]	; 0x44
10003112:	4770      	bx	lr

10003114 <__gnu_Unwind_RaiseException>:
10003114:	b5f0      	push	{r4, r5, r6, r7, lr}
10003116:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10003118:	b0f9      	sub	sp, #484	; 0x1e4
1000311a:	f101 0c04 	add.w	ip, r1, #4
1000311e:	460e      	mov	r6, r1
10003120:	640b      	str	r3, [r1, #64]	; 0x40
10003122:	ac01      	add	r4, sp, #4
10003124:	4605      	mov	r5, r0
10003126:	f04f 37ff 	mov.w	r7, #4294967295
1000312a:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
1000312e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10003130:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10003134:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10003136:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
1000313a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1000313c:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
10003140:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
10003144:	9700      	str	r7, [sp, #0]
10003146:	e006      	b.n	10003156 <__gnu_Unwind_RaiseException+0x42>
10003148:	692b      	ldr	r3, [r5, #16]
1000314a:	466a      	mov	r2, sp
1000314c:	4629      	mov	r1, r5
1000314e:	4798      	blx	r3
10003150:	2808      	cmp	r0, #8
10003152:	4604      	mov	r4, r0
10003154:	d108      	bne.n	10003168 <__gnu_Unwind_RaiseException+0x54>
10003156:	9910      	ldr	r1, [sp, #64]	; 0x40
10003158:	4628      	mov	r0, r5
1000315a:	f7ff fec7 	bl	10002eec <get_eit_entry>
1000315e:	2800      	cmp	r0, #0
10003160:	d0f2      	beq.n	10003148 <__gnu_Unwind_RaiseException+0x34>
10003162:	2009      	movs	r0, #9
10003164:	b079      	add	sp, #484	; 0x1e4
10003166:	bdf0      	pop	{r4, r5, r6, r7, pc}
10003168:	4668      	mov	r0, sp
1000316a:	f7ff ff0d 	bl	10002f88 <restore_non_core_regs>
1000316e:	2c06      	cmp	r4, #6
10003170:	d1f7      	bne.n	10003162 <__gnu_Unwind_RaiseException+0x4e>
10003172:	4631      	mov	r1, r6
10003174:	4628      	mov	r0, r5
10003176:	f7ff ff3d 	bl	10002ff4 <unwind_phase2>
1000317a:	bf00      	nop

1000317c <__gnu_Unwind_ForcedUnwind>:
1000317c:	b410      	push	{r4}
1000317e:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
10003180:	60c1      	str	r1, [r0, #12]
10003182:	4619      	mov	r1, r3
10003184:	6182      	str	r2, [r0, #24]
10003186:	2200      	movs	r2, #0
10003188:	641c      	str	r4, [r3, #64]	; 0x40
1000318a:	bc10      	pop	{r4}
1000318c:	e752      	b.n	10003034 <unwind_phase2_forced>
1000318e:	bf00      	nop

10003190 <__gnu_Unwind_Resume>:
10003190:	b570      	push	{r4, r5, r6, lr}
10003192:	6943      	ldr	r3, [r0, #20]
10003194:	68c6      	ldr	r6, [r0, #12]
10003196:	640b      	str	r3, [r1, #64]	; 0x40
10003198:	b9ae      	cbnz	r6, 100031c6 <__gnu_Unwind_Resume+0x36>
1000319a:	6903      	ldr	r3, [r0, #16]
1000319c:	460a      	mov	r2, r1
1000319e:	4604      	mov	r4, r0
100031a0:	460d      	mov	r5, r1
100031a2:	4601      	mov	r1, r0
100031a4:	2002      	movs	r0, #2
100031a6:	4798      	blx	r3
100031a8:	2807      	cmp	r0, #7
100031aa:	d005      	beq.n	100031b8 <__gnu_Unwind_Resume+0x28>
100031ac:	2808      	cmp	r0, #8
100031ae:	d10f      	bne.n	100031d0 <__gnu_Unwind_Resume+0x40>
100031b0:	4629      	mov	r1, r5
100031b2:	4620      	mov	r0, r4
100031b4:	f7ff ff1e 	bl	10002ff4 <unwind_phase2>
100031b8:	4630      	mov	r0, r6
100031ba:	6c29      	ldr	r1, [r5, #64]	; 0x40
100031bc:	f7ff ff18 	bl	10002ff0 <_Unwind_DebugHook>
100031c0:	1d28      	adds	r0, r5, #4
100031c2:	f000 fb67 	bl	10003894 <__restore_core_regs>
100031c6:	2201      	movs	r2, #1
100031c8:	f7ff ff34 	bl	10003034 <unwind_phase2_forced>
100031cc:	f000 fdf4 	bl	10003db8 <abort>
100031d0:	f000 fdf2 	bl	10003db8 <abort>

100031d4 <__gnu_Unwind_Resume_or_Rethrow>:
100031d4:	68c2      	ldr	r2, [r0, #12]
100031d6:	b12a      	cbz	r2, 100031e4 <__gnu_Unwind_Resume_or_Rethrow+0x10>
100031d8:	f8d1 c03c 	ldr.w	ip, [r1, #60]	; 0x3c
100031dc:	2200      	movs	r2, #0
100031de:	f8c1 c040 	str.w	ip, [r1, #64]	; 0x40
100031e2:	e727      	b.n	10003034 <unwind_phase2_forced>
100031e4:	e796      	b.n	10003114 <__gnu_Unwind_RaiseException>
100031e6:	bf00      	nop

100031e8 <_Unwind_Complete>:
100031e8:	4770      	bx	lr
100031ea:	bf00      	nop

100031ec <_Unwind_DeleteException>:
100031ec:	6883      	ldr	r3, [r0, #8]
100031ee:	4601      	mov	r1, r0
100031f0:	b10b      	cbz	r3, 100031f6 <_Unwind_DeleteException+0xa>
100031f2:	2001      	movs	r0, #1
100031f4:	4718      	bx	r3
100031f6:	4770      	bx	lr

100031f8 <_Unwind_VRS_Get>:
100031f8:	2901      	cmp	r1, #1
100031fa:	d015      	beq.n	10003228 <_Unwind_VRS_Get+0x30>
100031fc:	d80c      	bhi.n	10003218 <_Unwind_VRS_Get+0x20>
100031fe:	b98b      	cbnz	r3, 10003224 <_Unwind_VRS_Get+0x2c>
10003200:	2a0f      	cmp	r2, #15
10003202:	bf94      	ite	ls
10003204:	2100      	movls	r1, #0
10003206:	2101      	movhi	r1, #1
10003208:	b961      	cbnz	r1, 10003224 <_Unwind_VRS_Get+0x2c>
1000320a:	eb00 0282 	add.w	r2, r0, r2, lsl #2
1000320e:	4608      	mov	r0, r1
10003210:	6853      	ldr	r3, [r2, #4]
10003212:	9a00      	ldr	r2, [sp, #0]
10003214:	6013      	str	r3, [r2, #0]
10003216:	4770      	bx	lr
10003218:	3903      	subs	r1, #3
1000321a:	2901      	cmp	r1, #1
1000321c:	bf94      	ite	ls
1000321e:	2001      	movls	r0, #1
10003220:	2002      	movhi	r0, #2
10003222:	4770      	bx	lr
10003224:	2002      	movs	r0, #2
10003226:	4770      	bx	lr
10003228:	4608      	mov	r0, r1
1000322a:	4770      	bx	lr

1000322c <_Unwind_GetGR>:
1000322c:	b510      	push	{r4, lr}
1000322e:	b084      	sub	sp, #16
10003230:	2300      	movs	r3, #0
10003232:	460a      	mov	r2, r1
10003234:	ac03      	add	r4, sp, #12
10003236:	4619      	mov	r1, r3
10003238:	9400      	str	r4, [sp, #0]
1000323a:	f7ff ffdd 	bl	100031f8 <_Unwind_VRS_Get>
1000323e:	9803      	ldr	r0, [sp, #12]
10003240:	b004      	add	sp, #16
10003242:	bd10      	pop	{r4, pc}

10003244 <_Unwind_VRS_Set>:
10003244:	2901      	cmp	r1, #1
10003246:	d015      	beq.n	10003274 <_Unwind_VRS_Set+0x30>
10003248:	d80c      	bhi.n	10003264 <_Unwind_VRS_Set+0x20>
1000324a:	b98b      	cbnz	r3, 10003270 <_Unwind_VRS_Set+0x2c>
1000324c:	2a0f      	cmp	r2, #15
1000324e:	bf94      	ite	ls
10003250:	2100      	movls	r1, #0
10003252:	2101      	movhi	r1, #1
10003254:	b961      	cbnz	r1, 10003270 <_Unwind_VRS_Set+0x2c>
10003256:	9b00      	ldr	r3, [sp, #0]
10003258:	eb00 0282 	add.w	r2, r0, r2, lsl #2
1000325c:	4608      	mov	r0, r1
1000325e:	681b      	ldr	r3, [r3, #0]
10003260:	6053      	str	r3, [r2, #4]
10003262:	4770      	bx	lr
10003264:	3903      	subs	r1, #3
10003266:	2901      	cmp	r1, #1
10003268:	bf94      	ite	ls
1000326a:	2001      	movls	r0, #1
1000326c:	2002      	movhi	r0, #2
1000326e:	4770      	bx	lr
10003270:	2002      	movs	r0, #2
10003272:	4770      	bx	lr
10003274:	4608      	mov	r0, r1
10003276:	4770      	bx	lr

10003278 <_Unwind_SetGR>:
10003278:	b510      	push	{r4, lr}
1000327a:	b084      	sub	sp, #16
1000327c:	2300      	movs	r3, #0
1000327e:	ac03      	add	r4, sp, #12
10003280:	9203      	str	r2, [sp, #12]
10003282:	460a      	mov	r2, r1
10003284:	4619      	mov	r1, r3
10003286:	9400      	str	r4, [sp, #0]
10003288:	f7ff ffdc 	bl	10003244 <_Unwind_VRS_Set>
1000328c:	b004      	add	sp, #16
1000328e:	bd10      	pop	{r4, pc}

10003290 <__gnu_Unwind_Backtrace>:
10003290:	b5f0      	push	{r4, r5, r6, r7, lr}
10003292:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
10003294:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
10003298:	1d14      	adds	r4, r2, #4
1000329a:	4606      	mov	r6, r0
1000329c:	6413      	str	r3, [r2, #64]	; 0x40
1000329e:	f10d 0c5c 	add.w	ip, sp, #92	; 0x5c
100032a2:	460d      	mov	r5, r1
100032a4:	f04f 37ff 	mov.w	r7, #4294967295
100032a8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
100032aa:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
100032ae:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
100032b0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
100032b4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
100032b6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
100032ba:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
100032be:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
100032c2:	9716      	str	r7, [sp, #88]	; 0x58
100032c4:	e010      	b.n	100032e8 <__gnu_Unwind_Backtrace+0x58>
100032c6:	f7ff ffd7 	bl	10003278 <_Unwind_SetGR>
100032ca:	4629      	mov	r1, r5
100032cc:	a816      	add	r0, sp, #88	; 0x58
100032ce:	47b0      	blx	r6
100032d0:	4603      	mov	r3, r0
100032d2:	aa16      	add	r2, sp, #88	; 0x58
100032d4:	4669      	mov	r1, sp
100032d6:	2008      	movs	r0, #8
100032d8:	b983      	cbnz	r3, 100032fc <__gnu_Unwind_Backtrace+0x6c>
100032da:	9b04      	ldr	r3, [sp, #16]
100032dc:	4798      	blx	r3
100032de:	2805      	cmp	r0, #5
100032e0:	4604      	mov	r4, r0
100032e2:	d00c      	beq.n	100032fe <__gnu_Unwind_Backtrace+0x6e>
100032e4:	2809      	cmp	r0, #9
100032e6:	d00a      	beq.n	100032fe <__gnu_Unwind_Backtrace+0x6e>
100032e8:	9926      	ldr	r1, [sp, #152]	; 0x98
100032ea:	4668      	mov	r0, sp
100032ec:	f7ff fdfe 	bl	10002eec <get_eit_entry>
100032f0:	4603      	mov	r3, r0
100032f2:	466a      	mov	r2, sp
100032f4:	210c      	movs	r1, #12
100032f6:	a816      	add	r0, sp, #88	; 0x58
100032f8:	2b00      	cmp	r3, #0
100032fa:	d0e4      	beq.n	100032c6 <__gnu_Unwind_Backtrace+0x36>
100032fc:	2409      	movs	r4, #9
100032fe:	a816      	add	r0, sp, #88	; 0x58
10003300:	f7ff fe42 	bl	10002f88 <restore_non_core_regs>
10003304:	4620      	mov	r0, r4
10003306:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
1000330a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1000330c <__gnu_unwind_pr_common>:
1000330c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10003310:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
10003312:	b089      	sub	sp, #36	; 0x24
10003314:	461e      	mov	r6, r3
10003316:	460d      	mov	r5, r1
10003318:	f854 3b04 	ldr.w	r3, [r4], #4
1000331c:	4617      	mov	r7, r2
1000331e:	f000 0803 	and.w	r8, r0, #3
10003322:	9406      	str	r4, [sp, #24]
10003324:	2e00      	cmp	r6, #0
10003326:	d07f      	beq.n	10003428 <__gnu_unwind_pr_common+0x11c>
10003328:	0c1a      	lsrs	r2, r3, #16
1000332a:	041b      	lsls	r3, r3, #16
1000332c:	f88d 201d 	strb.w	r2, [sp, #29]
10003330:	b2d2      	uxtb	r2, r2
10003332:	9305      	str	r3, [sp, #20]
10003334:	2302      	movs	r3, #2
10003336:	eb04 0482 	add.w	r4, r4, r2, lsl #2
1000333a:	f88d 301c 	strb.w	r3, [sp, #28]
1000333e:	f1b8 0f02 	cmp.w	r8, #2
10003342:	6d2b      	ldr	r3, [r5, #80]	; 0x50
10003344:	bf08      	it	eq
10003346:	6bac      	ldreq	r4, [r5, #56]	; 0x38
10003348:	f013 0301 	ands.w	r3, r3, #1
1000334c:	d008      	beq.n	10003360 <__gnu_unwind_pr_common+0x54>
1000334e:	a905      	add	r1, sp, #20
10003350:	4638      	mov	r0, r7
10003352:	f000 fba1 	bl	10003a98 <__gnu_unwind_execute>
10003356:	bb90      	cbnz	r0, 100033be <__gnu_unwind_pr_common+0xb2>
10003358:	2008      	movs	r0, #8
1000335a:	b009      	add	sp, #36	; 0x24
1000335c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10003360:	f8d4 a000 	ldr.w	sl, [r4]
10003364:	f1ba 0f00 	cmp.w	sl, #0
10003368:	d0f1      	beq.n	1000334e <__gnu_unwind_pr_common+0x42>
1000336a:	9301      	str	r3, [sp, #4]
1000336c:	f000 0308 	and.w	r3, r0, #8
10003370:	9302      	str	r3, [sp, #8]
10003372:	2e02      	cmp	r6, #2
10003374:	d054      	beq.n	10003420 <__gnu_unwind_pr_common+0x114>
10003376:	f8b4 a000 	ldrh.w	sl, [r4]
1000337a:	3404      	adds	r4, #4
1000337c:	f834 9c02 	ldrh.w	r9, [r4, #-2]
10003380:	6cab      	ldr	r3, [r5, #72]	; 0x48
10003382:	f029 0b01 	bic.w	fp, r9, #1
10003386:	210f      	movs	r1, #15
10003388:	4638      	mov	r0, r7
1000338a:	449b      	add	fp, r3
1000338c:	f7ff ff4e 	bl	1000322c <_Unwind_GetGR>
10003390:	4583      	cmp	fp, r0
10003392:	d818      	bhi.n	100033c6 <__gnu_unwind_pr_common+0xba>
10003394:	f02a 0301 	bic.w	r3, sl, #1
10003398:	449b      	add	fp, r3
1000339a:	4583      	cmp	fp, r0
1000339c:	d913      	bls.n	100033c6 <__gnu_unwind_pr_common+0xba>
1000339e:	ea4f 0349 	mov.w	r3, r9, lsl #1
100033a2:	f00a 0a01 	and.w	sl, sl, #1
100033a6:	f003 0302 	and.w	r3, r3, #2
100033aa:	ea43 030a 	orr.w	r3, r3, sl
100033ae:	2b01      	cmp	r3, #1
100033b0:	f000 80bf 	beq.w	10003532 <__gnu_unwind_pr_common+0x226>
100033b4:	2b02      	cmp	r3, #2
100033b6:	f000 8089 	beq.w	100034cc <__gnu_unwind_pr_common+0x1c0>
100033ba:	2b00      	cmp	r3, #0
100033bc:	d04d      	beq.n	1000345a <__gnu_unwind_pr_common+0x14e>
100033be:	2009      	movs	r0, #9
100033c0:	b009      	add	sp, #36	; 0x24
100033c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100033c6:	ea4f 0349 	mov.w	r3, r9, lsl #1
100033ca:	f00a 0a01 	and.w	sl, sl, #1
100033ce:	f003 0302 	and.w	r3, r3, #2
100033d2:	ea43 030a 	orr.w	r3, r3, sl
100033d6:	2b01      	cmp	r3, #1
100033d8:	d03a      	beq.n	10003450 <__gnu_unwind_pr_common+0x144>
100033da:	2b02      	cmp	r3, #2
100033dc:	d02a      	beq.n	10003434 <__gnu_unwind_pr_common+0x128>
100033de:	2b00      	cmp	r3, #0
100033e0:	d1ed      	bne.n	100033be <__gnu_unwind_pr_common+0xb2>
100033e2:	3404      	adds	r4, #4
100033e4:	f8d4 a000 	ldr.w	sl, [r4]
100033e8:	f1ba 0f00 	cmp.w	sl, #0
100033ec:	d1c1      	bne.n	10003372 <__gnu_unwind_pr_common+0x66>
100033ee:	a905      	add	r1, sp, #20
100033f0:	4638      	mov	r0, r7
100033f2:	f000 fb51 	bl	10003a98 <__gnu_unwind_execute>
100033f6:	2800      	cmp	r0, #0
100033f8:	d1e1      	bne.n	100033be <__gnu_unwind_pr_common+0xb2>
100033fa:	9b01      	ldr	r3, [sp, #4]
100033fc:	2b00      	cmp	r3, #0
100033fe:	d0ab      	beq.n	10003358 <__gnu_unwind_pr_common+0x4c>
10003400:	210f      	movs	r1, #15
10003402:	4638      	mov	r0, r7
10003404:	f7ff ff12 	bl	1000322c <_Unwind_GetGR>
10003408:	210e      	movs	r1, #14
1000340a:	4602      	mov	r2, r0
1000340c:	4638      	mov	r0, r7
1000340e:	f7ff ff33 	bl	10003278 <_Unwind_SetGR>
10003412:	4638      	mov	r0, r7
10003414:	4a6e      	ldr	r2, [pc, #440]	; (100035d0 <__gnu_unwind_pr_common+0x2c4>)
10003416:	210f      	movs	r1, #15
10003418:	f7ff ff2e 	bl	10003278 <_Unwind_SetGR>
1000341c:	2007      	movs	r0, #7
1000341e:	e7cf      	b.n	100033c0 <__gnu_unwind_pr_common+0xb4>
10003420:	f8d4 9004 	ldr.w	r9, [r4, #4]
10003424:	3408      	adds	r4, #8
10003426:	e7ab      	b.n	10003380 <__gnu_unwind_pr_common+0x74>
10003428:	021b      	lsls	r3, r3, #8
1000342a:	9305      	str	r3, [sp, #20]
1000342c:	2303      	movs	r3, #3
1000342e:	f8ad 301c 	strh.w	r3, [sp, #28]
10003432:	e784      	b.n	1000333e <__gnu_unwind_pr_common+0x32>
10003434:	6823      	ldr	r3, [r4, #0]
10003436:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
1000343a:	f1b8 0f00 	cmp.w	r8, #0
1000343e:	d121      	bne.n	10003484 <__gnu_unwind_pr_common+0x178>
10003440:	2b00      	cmp	r3, #0
10003442:	da00      	bge.n	10003446 <__gnu_unwind_pr_common+0x13a>
10003444:	3404      	adds	r4, #4
10003446:	f10b 0b01 	add.w	fp, fp, #1
1000344a:	eb04 048b 	add.w	r4, r4, fp, lsl #2
1000344e:	e7c9      	b.n	100033e4 <__gnu_unwind_pr_common+0xd8>
10003450:	f1b8 0f00 	cmp.w	r8, #0
10003454:	d120      	bne.n	10003498 <__gnu_unwind_pr_common+0x18c>
10003456:	3408      	adds	r4, #8
10003458:	e7c4      	b.n	100033e4 <__gnu_unwind_pr_common+0xd8>
1000345a:	f1b8 0f00 	cmp.w	r8, #0
1000345e:	d0c0      	beq.n	100033e2 <__gnu_unwind_pr_common+0xd6>
10003460:	4620      	mov	r0, r4
10003462:	3404      	adds	r4, #4
10003464:	f7ff fcf4 	bl	10002e50 <selfrel_offset31>
10003468:	4606      	mov	r6, r0
1000346a:	63ac      	str	r4, [r5, #56]	; 0x38
1000346c:	4628      	mov	r0, r5
1000346e:	e000      	b.n	10003472 <__gnu_unwind_pr_common+0x166>
10003470:	bf00      	nop
10003472:	2800      	cmp	r0, #0
10003474:	d0a3      	beq.n	100033be <__gnu_unwind_pr_common+0xb2>
10003476:	4638      	mov	r0, r7
10003478:	4632      	mov	r2, r6
1000347a:	210f      	movs	r1, #15
1000347c:	f7ff fefc 	bl	10003278 <_Unwind_SetGR>
10003480:	2007      	movs	r0, #7
10003482:	e79d      	b.n	100033c0 <__gnu_unwind_pr_common+0xb4>
10003484:	f8d5 9020 	ldr.w	r9, [r5, #32]
10003488:	210d      	movs	r1, #13
1000348a:	4638      	mov	r0, r7
1000348c:	f7ff fece 	bl	1000322c <_Unwind_GetGR>
10003490:	4581      	cmp	r9, r0
10003492:	d079      	beq.n	10003588 <__gnu_unwind_pr_common+0x27c>
10003494:	6823      	ldr	r3, [r4, #0]
10003496:	e7d3      	b.n	10003440 <__gnu_unwind_pr_common+0x134>
10003498:	f8d5 9020 	ldr.w	r9, [r5, #32]
1000349c:	210d      	movs	r1, #13
1000349e:	4638      	mov	r0, r7
100034a0:	f7ff fec4 	bl	1000322c <_Unwind_GetGR>
100034a4:	4581      	cmp	r9, r0
100034a6:	d1d6      	bne.n	10003456 <__gnu_unwind_pr_common+0x14a>
100034a8:	6aab      	ldr	r3, [r5, #40]	; 0x28
100034aa:	429c      	cmp	r4, r3
100034ac:	d1d3      	bne.n	10003456 <__gnu_unwind_pr_common+0x14a>
100034ae:	4620      	mov	r0, r4
100034b0:	210f      	movs	r1, #15
100034b2:	f7ff fccd 	bl	10002e50 <selfrel_offset31>
100034b6:	4602      	mov	r2, r0
100034b8:	4638      	mov	r0, r7
100034ba:	f7ff fedd 	bl	10003278 <_Unwind_SetGR>
100034be:	4638      	mov	r0, r7
100034c0:	462a      	mov	r2, r5
100034c2:	2100      	movs	r1, #0
100034c4:	f7ff fed8 	bl	10003278 <_Unwind_SetGR>
100034c8:	2007      	movs	r0, #7
100034ca:	e779      	b.n	100033c0 <__gnu_unwind_pr_common+0xb4>
100034cc:	6823      	ldr	r3, [r4, #0]
100034ce:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
100034d2:	f1b8 0f00 	cmp.w	r8, #0
100034d6:	d1d5      	bne.n	10003484 <__gnu_unwind_pr_common+0x178>
100034d8:	9a02      	ldr	r2, [sp, #8]
100034da:	b112      	cbz	r2, 100034e2 <__gnu_unwind_pr_common+0x1d6>
100034dc:	f1bb 0f00 	cmp.w	fp, #0
100034e0:	d1ae      	bne.n	10003440 <__gnu_unwind_pr_common+0x134>
100034e2:	f105 0358 	add.w	r3, r5, #88	; 0x58
100034e6:	f8cd 800c 	str.w	r8, [sp, #12]
100034ea:	f104 0a04 	add.w	sl, r4, #4
100034ee:	46b0      	mov	r8, r6
100034f0:	f04f 0900 	mov.w	r9, #0
100034f4:	461e      	mov	r6, r3
100034f6:	e00d      	b.n	10003514 <__gnu_unwind_pr_common+0x208>
100034f8:	4650      	mov	r0, sl
100034fa:	9604      	str	r6, [sp, #16]
100034fc:	2200      	movs	r2, #0
100034fe:	f7ff fd71 	bl	10002fe4 <_Unwind_decode_typeinfo_ptr.constprop.0>
10003502:	ab04      	add	r3, sp, #16
10003504:	4601      	mov	r1, r0
10003506:	4628      	mov	r0, r5
10003508:	f10a 0a04 	add.w	sl, sl, #4
1000350c:	e000      	b.n	10003510 <__gnu_unwind_pr_common+0x204>
1000350e:	bf00      	nop
10003510:	2800      	cmp	r0, #0
10003512:	d14a      	bne.n	100035aa <__gnu_unwind_pr_common+0x29e>
10003514:	45d9      	cmp	r9, fp
10003516:	f109 0901 	add.w	r9, r9, #1
1000351a:	d1ed      	bne.n	100034f8 <__gnu_unwind_pr_common+0x1ec>
1000351c:	210d      	movs	r1, #13
1000351e:	4638      	mov	r0, r7
10003520:	f7ff fe84 	bl	1000322c <_Unwind_GetGR>
10003524:	9b04      	ldr	r3, [sp, #16]
10003526:	4602      	mov	r2, r0
10003528:	2006      	movs	r0, #6
1000352a:	622a      	str	r2, [r5, #32]
1000352c:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
10003530:	e746      	b.n	100033c0 <__gnu_unwind_pr_common+0xb4>
10003532:	f1b8 0f00 	cmp.w	r8, #0
10003536:	d1af      	bne.n	10003498 <__gnu_unwind_pr_common+0x18c>
10003538:	6863      	ldr	r3, [r4, #4]
1000353a:	6822      	ldr	r2, [r4, #0]
1000353c:	1c99      	adds	r1, r3, #2
1000353e:	ea4f 72d2 	mov.w	r2, r2, lsr #31
10003542:	f43f af3c 	beq.w	100033be <__gnu_unwind_pr_common+0xb2>
10003546:	f105 0158 	add.w	r1, r5, #88	; 0x58
1000354a:	3301      	adds	r3, #1
1000354c:	9104      	str	r1, [sp, #16]
1000354e:	d031      	beq.n	100035b4 <__gnu_unwind_pr_common+0x2a8>
10003550:	1d20      	adds	r0, r4, #4
10003552:	f7ff fd47 	bl	10002fe4 <_Unwind_decode_typeinfo_ptr.constprop.0>
10003556:	ab04      	add	r3, sp, #16
10003558:	4601      	mov	r1, r0
1000355a:	4628      	mov	r0, r5
1000355c:	e000      	b.n	10003560 <__gnu_unwind_pr_common+0x254>
1000355e:	bf00      	nop
10003560:	2800      	cmp	r0, #0
10003562:	f43f af78 	beq.w	10003456 <__gnu_unwind_pr_common+0x14a>
10003566:	4681      	mov	r9, r0
10003568:	210d      	movs	r1, #13
1000356a:	4638      	mov	r0, r7
1000356c:	f7ff fe5e 	bl	1000322c <_Unwind_GetGR>
10003570:	f1b9 0f02 	cmp.w	r9, #2
10003574:	6228      	str	r0, [r5, #32]
10003576:	d122      	bne.n	100035be <__gnu_unwind_pr_common+0x2b2>
10003578:	462b      	mov	r3, r5
1000357a:	9a04      	ldr	r2, [sp, #16]
1000357c:	f843 2f2c 	str.w	r2, [r3, #44]!
10003580:	626b      	str	r3, [r5, #36]	; 0x24
10003582:	2006      	movs	r0, #6
10003584:	62ac      	str	r4, [r5, #40]	; 0x28
10003586:	e71b      	b.n	100033c0 <__gnu_unwind_pr_common+0xb4>
10003588:	6aab      	ldr	r3, [r5, #40]	; 0x28
1000358a:	429c      	cmp	r4, r3
1000358c:	d182      	bne.n	10003494 <__gnu_unwind_pr_common+0x188>
1000358e:	2304      	movs	r3, #4
10003590:	2200      	movs	r2, #0
10003592:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
10003596:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
1000359a:	18e3      	adds	r3, r4, r3
1000359c:	636b      	str	r3, [r5, #52]	; 0x34
1000359e:	6823      	ldr	r3, [r4, #0]
100035a0:	2b00      	cmp	r3, #0
100035a2:	db0f      	blt.n	100035c4 <__gnu_unwind_pr_common+0x2b8>
100035a4:	2301      	movs	r3, #1
100035a6:	9301      	str	r3, [sp, #4]
100035a8:	e74d      	b.n	10003446 <__gnu_unwind_pr_common+0x13a>
100035aa:	4646      	mov	r6, r8
100035ac:	6823      	ldr	r3, [r4, #0]
100035ae:	f8dd 800c 	ldr.w	r8, [sp, #12]
100035b2:	e745      	b.n	10003440 <__gnu_unwind_pr_common+0x134>
100035b4:	210d      	movs	r1, #13
100035b6:	4638      	mov	r0, r7
100035b8:	f7ff fe38 	bl	1000322c <_Unwind_GetGR>
100035bc:	6228      	str	r0, [r5, #32]
100035be:	9b04      	ldr	r3, [sp, #16]
100035c0:	626b      	str	r3, [r5, #36]	; 0x24
100035c2:	e7de      	b.n	10003582 <__gnu_unwind_pr_common+0x276>
100035c4:	f10b 0001 	add.w	r0, fp, #1
100035c8:	210f      	movs	r1, #15
100035ca:	eb04 0080 	add.w	r0, r4, r0, lsl #2
100035ce:	e770      	b.n	100034b2 <__gnu_unwind_pr_common+0x1a6>
100035d0:	00000000 	andeq	r0, r0, r0

100035d4 <__aeabi_unwind_cpp_pr0>:
100035d4:	2300      	movs	r3, #0
100035d6:	e699      	b.n	1000330c <__gnu_unwind_pr_common>

100035d8 <__aeabi_unwind_cpp_pr1>:
100035d8:	2301      	movs	r3, #1
100035da:	e697      	b.n	1000330c <__gnu_unwind_pr_common>

100035dc <__aeabi_unwind_cpp_pr2>:
100035dc:	2302      	movs	r3, #2
100035de:	e695      	b.n	1000330c <__gnu_unwind_pr_common>

100035e0 <_Unwind_VRS_Pop>:
100035e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
100035e4:	4606      	mov	r6, r0
100035e6:	b0c3      	sub	sp, #268	; 0x10c
100035e8:	4615      	mov	r5, r2
100035ea:	461c      	mov	r4, r3
100035ec:	2904      	cmp	r1, #4
100035ee:	f200 80c2 	bhi.w	10003776 <_Unwind_VRS_Pop+0x196>
100035f2:	e8df f001 	tbb	[pc, r1]
100035f6:	2cc059a3 			; <UNDEFINED> instruction: 0x2cc059a3
100035fa:	2c000003 	stccs	0, cr0, [r0], {3}
100035fe:	f040 80ba 	bne.w	10003776 <_Unwind_VRS_Pop+0x196>
10003602:	2a10      	cmp	r2, #16
10003604:	f200 80b7 	bhi.w	10003776 <_Unwind_VRS_Pop+0x196>
10003608:	6803      	ldr	r3, [r0, #0]
1000360a:	06df      	lsls	r7, r3, #27
1000360c:	f100 80b7 	bmi.w	1000377e <_Unwind_VRS_Pop+0x19e>
10003610:	af20      	add	r7, sp, #128	; 0x80
10003612:	4638      	mov	r0, r7
10003614:	f000 f9b0 	bl	10003978 <__gnu_Unwind_Save_WMMXC>
10003618:	6bb4      	ldr	r4, [r6, #56]	; 0x38
1000361a:	4639      	mov	r1, r7
1000361c:	2300      	movs	r3, #0
1000361e:	f04f 0c01 	mov.w	ip, #1
10003622:	fa0c f203 	lsl.w	r2, ip, r3
10003626:	4620      	mov	r0, r4
10003628:	3301      	adds	r3, #1
1000362a:	422a      	tst	r2, r5
1000362c:	d003      	beq.n	10003636 <_Unwind_VRS_Pop+0x56>
1000362e:	f850 2b04 	ldr.w	r2, [r0], #4
10003632:	4604      	mov	r4, r0
10003634:	600a      	str	r2, [r1, #0]
10003636:	2b04      	cmp	r3, #4
10003638:	f101 0104 	add.w	r1, r1, #4
1000363c:	d1f1      	bne.n	10003622 <_Unwind_VRS_Pop+0x42>
1000363e:	4638      	mov	r0, r7
10003640:	63b4      	str	r4, [r6, #56]	; 0x38
10003642:	f000 f98f 	bl	10003964 <__gnu_Unwind_Restore_WMMXC>
10003646:	2000      	movs	r0, #0
10003648:	b043      	add	sp, #268	; 0x10c
1000364a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1000364e:	2c03      	cmp	r4, #3
10003650:	f040 8091 	bne.w	10003776 <_Unwind_VRS_Pop+0x196>
10003654:	fa1f f882 	uxth.w	r8, r2
10003658:	0c14      	lsrs	r4, r2, #16
1000365a:	eb08 4512 	add.w	r5, r8, r2, lsr #16
1000365e:	2d10      	cmp	r5, #16
10003660:	f200 8089 	bhi.w	10003776 <_Unwind_VRS_Pop+0x196>
10003664:	6803      	ldr	r3, [r0, #0]
10003666:	071a      	lsls	r2, r3, #28
10003668:	f100 80cd 	bmi.w	10003806 <_Unwind_VRS_Pop+0x226>
1000366c:	af20      	add	r7, sp, #128	; 0x80
1000366e:	4638      	mov	r0, r7
10003670:	f000 f956 	bl	10003920 <__gnu_Unwind_Save_WMMXD>
10003674:	6bb5      	ldr	r5, [r6, #56]	; 0x38
10003676:	eb07 01c4 	add.w	r1, r7, r4, lsl #3
1000367a:	f1b8 0f00 	cmp.w	r8, #0
1000367e:	d00b      	beq.n	10003698 <_Unwind_VRS_Pop+0xb8>
10003680:	460b      	mov	r3, r1
10003682:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
10003686:	ea4f 08c8 	mov.w	r8, r8, lsl #3
1000368a:	1ae8      	subs	r0, r5, r3
1000368c:	581a      	ldr	r2, [r3, r0]
1000368e:	f843 2b04 	str.w	r2, [r3], #4
10003692:	428b      	cmp	r3, r1
10003694:	d1fa      	bne.n	1000368c <_Unwind_VRS_Pop+0xac>
10003696:	4445      	add	r5, r8
10003698:	4638      	mov	r0, r7
1000369a:	63b5      	str	r5, [r6, #56]	; 0x38
1000369c:	f000 f91e 	bl	100038dc <__gnu_Unwind_Restore_WMMXD>
100036a0:	2000      	movs	r0, #0
100036a2:	b043      	add	sp, #268	; 0x10c
100036a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
100036a8:	f004 03fb 	and.w	r3, r4, #251	; 0xfb
100036ac:	ea4f 4812 	mov.w	r8, r2, lsr #16
100036b0:	b295      	uxth	r5, r2
100036b2:	2b01      	cmp	r3, #1
100036b4:	d15f      	bne.n	10003776 <_Unwind_VRS_Pop+0x196>
100036b6:	2c01      	cmp	r4, #1
100036b8:	eb08 0905 	add.w	r9, r8, r5
100036bc:	d058      	beq.n	10003770 <_Unwind_VRS_Pop+0x190>
100036be:	f1b9 0f20 	cmp.w	r9, #32
100036c2:	d858      	bhi.n	10003776 <_Unwind_VRS_Pop+0x196>
100036c4:	f1b8 0f0f 	cmp.w	r8, #15
100036c8:	d975      	bls.n	100037b6 <_Unwind_VRS_Pop+0x1d6>
100036ca:	2c05      	cmp	r4, #5
100036cc:	46a9      	mov	r9, r5
100036ce:	f000 80a4 	beq.w	1000381a <_Unwind_VRS_Pop+0x23a>
100036d2:	2d00      	cmp	r5, #0
100036d4:	d14f      	bne.n	10003776 <_Unwind_VRS_Pop+0x196>
100036d6:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100036d8:	b365      	cbz	r5, 10003734 <_Unwind_VRS_Pop+0x154>
100036da:	af20      	add	r7, sp, #128	; 0x80
100036dc:	f04f 0900 	mov.w	r9, #0
100036e0:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
100036e4:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
100036e8:	3f04      	subs	r7, #4
100036ea:	f853 1b04 	ldr.w	r1, [r3], #4
100036ee:	429d      	cmp	r5, r3
100036f0:	f847 1f04 	str.w	r1, [r7, #4]!
100036f4:	d1f9      	bne.n	100036ea <_Unwind_VRS_Pop+0x10a>
100036f6:	f1b9 0f00 	cmp.w	r9, #0
100036fa:	d00f      	beq.n	1000371c <_Unwind_VRS_Pop+0x13c>
100036fc:	466f      	mov	r7, sp
100036fe:	4641      	mov	r1, r8
10003700:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
10003704:	2910      	cmp	r1, #16
10003706:	bf38      	it	cc
10003708:	2110      	movcc	r1, #16
1000370a:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
1000370e:	3984      	subs	r1, #132	; 0x84
10003710:	f853 0b04 	ldr.w	r0, [r3], #4
10003714:	429d      	cmp	r5, r3
10003716:	f841 0f04 	str.w	r0, [r1, #4]!
1000371a:	d1f9      	bne.n	10003710 <_Unwind_VRS_Pop+0x130>
1000371c:	2c01      	cmp	r4, #1
1000371e:	d07a      	beq.n	10003816 <_Unwind_VRS_Pop+0x236>
10003720:	f1b8 0f0f 	cmp.w	r8, #15
10003724:	63b5      	str	r5, [r6, #56]	; 0x38
10003726:	d96a      	bls.n	100037fe <_Unwind_VRS_Pop+0x21e>
10003728:	f1b9 0f00 	cmp.w	r9, #0
1000372c:	d002      	beq.n	10003734 <_Unwind_VRS_Pop+0x154>
1000372e:	4668      	mov	r0, sp
10003730:	f000 f8cc 	bl	100038cc <__gnu_Unwind_Restore_VFP_D_16_to_31>
10003734:	2000      	movs	r0, #0
10003736:	b043      	add	sp, #268	; 0x10c
10003738:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1000373c:	b9dc      	cbnz	r4, 10003776 <_Unwind_VRS_Pop+0x196>
1000373e:	6b87      	ldr	r7, [r0, #56]	; 0x38
10003740:	4623      	mov	r3, r4
10003742:	fa1f fc82 	uxth.w	ip, r2
10003746:	2001      	movs	r0, #1
10003748:	1d34      	adds	r4, r6, #4
1000374a:	fa00 f103 	lsl.w	r1, r0, r3
1000374e:	463a      	mov	r2, r7
10003750:	ea11 0f0c 	tst.w	r1, ip
10003754:	d004      	beq.n	10003760 <_Unwind_VRS_Pop+0x180>
10003756:	f852 1b04 	ldr.w	r1, [r2], #4
1000375a:	4617      	mov	r7, r2
1000375c:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
10003760:	3301      	adds	r3, #1
10003762:	2b10      	cmp	r3, #16
10003764:	d1f1      	bne.n	1000374a <_Unwind_VRS_Pop+0x16a>
10003766:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
1000376a:	d1e3      	bne.n	10003734 <_Unwind_VRS_Pop+0x154>
1000376c:	63b7      	str	r7, [r6, #56]	; 0x38
1000376e:	e003      	b.n	10003778 <_Unwind_VRS_Pop+0x198>
10003770:	f1b9 0f10 	cmp.w	r9, #16
10003774:	d90b      	bls.n	1000378e <_Unwind_VRS_Pop+0x1ae>
10003776:	2002      	movs	r0, #2
10003778:	b043      	add	sp, #268	; 0x10c
1000377a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1000377e:	f023 0310 	bic.w	r3, r3, #16
10003782:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
10003786:	6033      	str	r3, [r6, #0]
10003788:	f000 f8f6 	bl	10003978 <__gnu_Unwind_Save_WMMXC>
1000378c:	e740      	b.n	10003610 <_Unwind_VRS_Pop+0x30>
1000378e:	f1b8 0f0f 	cmp.w	r8, #15
10003792:	d8f0      	bhi.n	10003776 <_Unwind_VRS_Pop+0x196>
10003794:	6803      	ldr	r3, [r0, #0]
10003796:	07d8      	lsls	r0, r3, #31
10003798:	d450      	bmi.n	1000383c <_Unwind_VRS_Pop+0x25c>
1000379a:	af20      	add	r7, sp, #128	; 0x80
1000379c:	4638      	mov	r0, r7
1000379e:	f000 f889 	bl	100038b4 <__gnu_Unwind_Save_VFP>
100037a2:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100037a4:	2d00      	cmp	r5, #0
100037a6:	d199      	bne.n	100036dc <_Unwind_VRS_Pop+0xfc>
100037a8:	461d      	mov	r5, r3
100037aa:	3504      	adds	r5, #4
100037ac:	4638      	mov	r0, r7
100037ae:	63b5      	str	r5, [r6, #56]	; 0x38
100037b0:	f000 f87c 	bl	100038ac <__gnu_Unwind_Restore_VFP>
100037b4:	e7be      	b.n	10003734 <_Unwind_VRS_Pop+0x154>
100037b6:	f1b9 0f10 	cmp.w	r9, #16
100037ba:	d958      	bls.n	1000386e <_Unwind_VRS_Pop+0x28e>
100037bc:	2c05      	cmp	r4, #5
100037be:	d1da      	bne.n	10003776 <_Unwind_VRS_Pop+0x196>
100037c0:	6833      	ldr	r3, [r6, #0]
100037c2:	f1a9 0910 	sub.w	r9, r9, #16
100037c6:	07dd      	lsls	r5, r3, #31
100037c8:	d509      	bpl.n	100037de <_Unwind_VRS_Pop+0x1fe>
100037ca:	f023 0301 	bic.w	r3, r3, #1
100037ce:	4630      	mov	r0, r6
100037d0:	f043 0302 	orr.w	r3, r3, #2
100037d4:	f840 3b48 	str.w	r3, [r0], #72
100037d8:	f000 f874 	bl	100038c4 <__gnu_Unwind_Save_VFP_D>
100037dc:	6833      	ldr	r3, [r6, #0]
100037de:	0759      	lsls	r1, r3, #29
100037e0:	d421      	bmi.n	10003826 <_Unwind_VRS_Pop+0x246>
100037e2:	a820      	add	r0, sp, #128	; 0x80
100037e4:	f000 f86e 	bl	100038c4 <__gnu_Unwind_Save_VFP_D>
100037e8:	466f      	mov	r7, sp
100037ea:	f1c8 0510 	rsb	r5, r8, #16
100037ee:	4638      	mov	r0, r7
100037f0:	f000 f870 	bl	100038d4 <__gnu_Unwind_Save_VFP_D_16_to_31>
100037f4:	2d00      	cmp	r5, #0
100037f6:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100037f8:	dd81      	ble.n	100036fe <_Unwind_VRS_Pop+0x11e>
100037fa:	af20      	add	r7, sp, #128	; 0x80
100037fc:	e770      	b.n	100036e0 <_Unwind_VRS_Pop+0x100>
100037fe:	a820      	add	r0, sp, #128	; 0x80
10003800:	f000 f85c 	bl	100038bc <__gnu_Unwind_Restore_VFP_D>
10003804:	e790      	b.n	10003728 <_Unwind_VRS_Pop+0x148>
10003806:	f023 0308 	bic.w	r3, r3, #8
1000380a:	f500 70a8 	add.w	r0, r0, #336	; 0x150
1000380e:	6033      	str	r3, [r6, #0]
10003810:	f000 f886 	bl	10003920 <__gnu_Unwind_Save_WMMXD>
10003814:	e72a      	b.n	1000366c <_Unwind_VRS_Pop+0x8c>
10003816:	af20      	add	r7, sp, #128	; 0x80
10003818:	e7c7      	b.n	100037aa <_Unwind_VRS_Pop+0x1ca>
1000381a:	2d00      	cmp	r5, #0
1000381c:	f43f af5b 	beq.w	100036d6 <_Unwind_VRS_Pop+0xf6>
10003820:	6833      	ldr	r3, [r6, #0]
10003822:	075a      	lsls	r2, r3, #29
10003824:	d5e0      	bpl.n	100037e8 <_Unwind_VRS_Pop+0x208>
10003826:	f023 0304 	bic.w	r3, r3, #4
1000382a:	4630      	mov	r0, r6
1000382c:	f840 3bd0 	str.w	r3, [r0], #208
10003830:	f000 f850 	bl	100038d4 <__gnu_Unwind_Save_VFP_D_16_to_31>
10003834:	f1b8 0f0f 	cmp.w	r8, #15
10003838:	d8d6      	bhi.n	100037e8 <_Unwind_VRS_Pop+0x208>
1000383a:	e7d2      	b.n	100037e2 <_Unwind_VRS_Pop+0x202>
1000383c:	f023 0303 	bic.w	r3, r3, #3
10003840:	4630      	mov	r0, r6
10003842:	f840 3b48 	str.w	r3, [r0], #72
10003846:	f000 f835 	bl	100038b4 <__gnu_Unwind_Save_VFP>
1000384a:	2c01      	cmp	r4, #1
1000384c:	d0a5      	beq.n	1000379a <_Unwind_VRS_Pop+0x1ba>
1000384e:	f1b8 0f0f 	cmp.w	r8, #15
10003852:	f63f af40 	bhi.w	100036d6 <_Unwind_VRS_Pop+0xf6>
10003856:	af20      	add	r7, sp, #128	; 0x80
10003858:	4638      	mov	r0, r7
1000385a:	f000 f833 	bl	100038c4 <__gnu_Unwind_Save_VFP_D>
1000385e:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10003860:	2d00      	cmp	r5, #0
10003862:	f47f af3b 	bne.w	100036dc <_Unwind_VRS_Pop+0xfc>
10003866:	4638      	mov	r0, r7
10003868:	f000 f828 	bl	100038bc <__gnu_Unwind_Restore_VFP_D>
1000386c:	e762      	b.n	10003734 <_Unwind_VRS_Pop+0x154>
1000386e:	6833      	ldr	r3, [r6, #0]
10003870:	07d9      	lsls	r1, r3, #31
10003872:	d5ea      	bpl.n	1000384a <_Unwind_VRS_Pop+0x26a>
10003874:	2c05      	cmp	r4, #5
10003876:	d1e1      	bne.n	1000383c <_Unwind_VRS_Pop+0x25c>
10003878:	f023 0301 	bic.w	r3, r3, #1
1000387c:	4630      	mov	r0, r6
1000387e:	af20      	add	r7, sp, #128	; 0x80
10003880:	f043 0302 	orr.w	r3, r3, #2
10003884:	f840 3b48 	str.w	r3, [r0], #72
10003888:	f000 f81c 	bl	100038c4 <__gnu_Unwind_Save_VFP_D>
1000388c:	4638      	mov	r0, r7
1000388e:	f000 f819 	bl	100038c4 <__gnu_Unwind_Save_VFP_D>
10003892:	e7e4      	b.n	1000385e <_Unwind_VRS_Pop+0x27e>

10003894 <__restore_core_regs>:
10003894:	f100 0134 	add.w	r1, r0, #52	; 0x34
10003898:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
1000389c:	469c      	mov	ip, r3
1000389e:	46a6      	mov	lr, r4
100038a0:	f84c 5d04 	str.w	r5, [ip, #-4]!
100038a4:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
100038a8:	46e5      	mov	sp, ip
100038aa:	bd00      	pop	{pc}

100038ac <__gnu_Unwind_Restore_VFP>:
100038ac:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
100038b0:	4770      	bx	lr
100038b2:	bf00      	nop

100038b4 <__gnu_Unwind_Save_VFP>:
100038b4:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
100038b8:	4770      	bx	lr
100038ba:	bf00      	nop

100038bc <__gnu_Unwind_Restore_VFP_D>:
100038bc:	ec90 0b20 	vldmia	r0, {d0-d15}
100038c0:	4770      	bx	lr
100038c2:	bf00      	nop

100038c4 <__gnu_Unwind_Save_VFP_D>:
100038c4:	ec80 0b20 	vstmia	r0, {d0-d15}
100038c8:	4770      	bx	lr
100038ca:	bf00      	nop

100038cc <__gnu_Unwind_Restore_VFP_D_16_to_31>:
100038cc:	ecd0 0b20 	vldmia	r0, {d16-d31}
100038d0:	4770      	bx	lr
100038d2:	bf00      	nop

100038d4 <__gnu_Unwind_Save_VFP_D_16_to_31>:
100038d4:	ecc0 0b20 	vstmia	r0, {d16-d31}
100038d8:	4770      	bx	lr
100038da:	bf00      	nop

100038dc <__gnu_Unwind_Restore_WMMXD>:
100038dc:	ecf0 0102 	ldfe	f0, [r0], #8
100038e0:	ecf0 1102 	ldfe	f1, [r0], #8
100038e4:	ecf0 2102 	ldfe	f2, [r0], #8
100038e8:	ecf0 3102 	ldfe	f3, [r0], #8
100038ec:	ecf0 4102 	ldfe	f4, [r0], #8
100038f0:	ecf0 5102 	ldfe	f5, [r0], #8
100038f4:	ecf0 6102 	ldfe	f6, [r0], #8
100038f8:	ecf0 7102 	ldfe	f7, [r0], #8
100038fc:	ecf0 8102 	ldfp	f0, [r0], #8
10003900:	ecf0 9102 	ldfp	f1, [r0], #8
10003904:	ecf0 a102 	ldfp	f2, [r0], #8
10003908:	ecf0 b102 	ldfp	f3, [r0], #8
1000390c:	ecf0 c102 	ldfp	f4, [r0], #8
10003910:	ecf0 d102 	ldfp	f5, [r0], #8
10003914:	ecf0 e102 	ldfp	f6, [r0], #8
10003918:	ecf0 f102 	ldfp	f7, [r0], #8
1000391c:	4770      	bx	lr
1000391e:	bf00      	nop

10003920 <__gnu_Unwind_Save_WMMXD>:
10003920:	ece0 0102 	stfe	f0, [r0], #8
10003924:	ece0 1102 	stfe	f1, [r0], #8
10003928:	ece0 2102 	stfe	f2, [r0], #8
1000392c:	ece0 3102 	stfe	f3, [r0], #8
10003930:	ece0 4102 	stfe	f4, [r0], #8
10003934:	ece0 5102 	stfe	f5, [r0], #8
10003938:	ece0 6102 	stfe	f6, [r0], #8
1000393c:	ece0 7102 	stfe	f7, [r0], #8
10003940:	ece0 8102 	stfp	f0, [r0], #8
10003944:	ece0 9102 	stfp	f1, [r0], #8
10003948:	ece0 a102 	stfp	f2, [r0], #8
1000394c:	ece0 b102 	stfp	f3, [r0], #8
10003950:	ece0 c102 	stfp	f4, [r0], #8
10003954:	ece0 d102 	stfp	f5, [r0], #8
10003958:	ece0 e102 	stfp	f6, [r0], #8
1000395c:	ece0 f102 	stfp	f7, [r0], #8
10003960:	4770      	bx	lr
10003962:	bf00      	nop

10003964 <__gnu_Unwind_Restore_WMMXC>:
10003964:	fcb0 8101 	ldc2	1, cr8, [r0], #4
10003968:	fcb0 9101 	ldc2	1, cr9, [r0], #4
1000396c:	fcb0 a101 	ldc2	1, cr10, [r0], #4
10003970:	fcb0 b101 	ldc2	1, cr11, [r0], #4
10003974:	4770      	bx	lr
10003976:	bf00      	nop

10003978 <__gnu_Unwind_Save_WMMXC>:
10003978:	fca0 8101 	stc2	1, cr8, [r0], #4
1000397c:	fca0 9101 	stc2	1, cr9, [r0], #4
10003980:	fca0 a101 	stc2	1, cr10, [r0], #4
10003984:	fca0 b101 	stc2	1, cr11, [r0], #4
10003988:	4770      	bx	lr
1000398a:	bf00      	nop

1000398c <_Unwind_RaiseException>:
1000398c:	46ec      	mov	ip, sp
1000398e:	b500      	push	{lr}
10003990:	e92d 5000 	stmdb	sp!, {ip, lr}
10003994:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10003998:	f04f 0300 	mov.w	r3, #0
1000399c:	e92d 000c 	stmdb	sp!, {r2, r3}
100039a0:	a901      	add	r1, sp, #4
100039a2:	f7ff fbb7 	bl	10003114 <__gnu_Unwind_RaiseException>
100039a6:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100039aa:	b012      	add	sp, #72	; 0x48
100039ac:	4770      	bx	lr
100039ae:	bf00      	nop

100039b0 <_Unwind_Resume>:
100039b0:	46ec      	mov	ip, sp
100039b2:	b500      	push	{lr}
100039b4:	e92d 5000 	stmdb	sp!, {ip, lr}
100039b8:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100039bc:	f04f 0300 	mov.w	r3, #0
100039c0:	e92d 000c 	stmdb	sp!, {r2, r3}
100039c4:	a901      	add	r1, sp, #4
100039c6:	f7ff fbe3 	bl	10003190 <__gnu_Unwind_Resume>
100039ca:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100039ce:	b012      	add	sp, #72	; 0x48
100039d0:	4770      	bx	lr
100039d2:	bf00      	nop

100039d4 <_Unwind_Resume_or_Rethrow>:
100039d4:	46ec      	mov	ip, sp
100039d6:	b500      	push	{lr}
100039d8:	e92d 5000 	stmdb	sp!, {ip, lr}
100039dc:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
100039e0:	f04f 0300 	mov.w	r3, #0
100039e4:	e92d 000c 	stmdb	sp!, {r2, r3}
100039e8:	a901      	add	r1, sp, #4
100039ea:	f7ff fbf3 	bl	100031d4 <__gnu_Unwind_Resume_or_Rethrow>
100039ee:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
100039f2:	b012      	add	sp, #72	; 0x48
100039f4:	4770      	bx	lr
100039f6:	bf00      	nop

100039f8 <_Unwind_ForcedUnwind>:
100039f8:	46ec      	mov	ip, sp
100039fa:	b500      	push	{lr}
100039fc:	e92d 5000 	stmdb	sp!, {ip, lr}
10003a00:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10003a04:	f04f 0300 	mov.w	r3, #0
10003a08:	e92d 000c 	stmdb	sp!, {r2, r3}
10003a0c:	ab01      	add	r3, sp, #4
10003a0e:	f7ff fbb5 	bl	1000317c <__gnu_Unwind_ForcedUnwind>
10003a12:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10003a16:	b012      	add	sp, #72	; 0x48
10003a18:	4770      	bx	lr
10003a1a:	bf00      	nop

10003a1c <_Unwind_Backtrace>:
10003a1c:	46ec      	mov	ip, sp
10003a1e:	b500      	push	{lr}
10003a20:	e92d 5000 	stmdb	sp!, {ip, lr}
10003a24:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10003a28:	f04f 0300 	mov.w	r3, #0
10003a2c:	e92d 000c 	stmdb	sp!, {r2, r3}
10003a30:	aa01      	add	r2, sp, #4
10003a32:	f7ff fc2d 	bl	10003290 <__gnu_Unwind_Backtrace>
10003a36:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10003a3a:	b012      	add	sp, #72	; 0x48
10003a3c:	4770      	bx	lr
10003a3e:	bf00      	nop

10003a40 <next_unwind_byte>:
10003a40:	7a02      	ldrb	r2, [r0, #8]
10003a42:	4603      	mov	r3, r0
10003a44:	b98a      	cbnz	r2, 10003a6a <next_unwind_byte+0x2a>
10003a46:	7a42      	ldrb	r2, [r0, #9]
10003a48:	b1b2      	cbz	r2, 10003a78 <next_unwind_byte+0x38>
10003a4a:	6841      	ldr	r1, [r0, #4]
10003a4c:	3a01      	subs	r2, #1
10003a4e:	f04f 0c03 	mov.w	ip, #3
10003a52:	b410      	push	{r4}
10003a54:	7242      	strb	r2, [r0, #9]
10003a56:	1d0c      	adds	r4, r1, #4
10003a58:	6808      	ldr	r0, [r1, #0]
10003a5a:	f883 c008 	strb.w	ip, [r3, #8]
10003a5e:	0202      	lsls	r2, r0, #8
10003a60:	605c      	str	r4, [r3, #4]
10003a62:	0e00      	lsrs	r0, r0, #24
10003a64:	bc10      	pop	{r4}
10003a66:	601a      	str	r2, [r3, #0]
10003a68:	4770      	bx	lr
10003a6a:	6800      	ldr	r0, [r0, #0]
10003a6c:	3a01      	subs	r2, #1
10003a6e:	721a      	strb	r2, [r3, #8]
10003a70:	0202      	lsls	r2, r0, #8
10003a72:	0e00      	lsrs	r0, r0, #24
10003a74:	601a      	str	r2, [r3, #0]
10003a76:	4770      	bx	lr
10003a78:	20b0      	movs	r0, #176	; 0xb0
10003a7a:	4770      	bx	lr

10003a7c <_Unwind_GetGR.constprop.0>:
10003a7c:	b510      	push	{r4, lr}
10003a7e:	b084      	sub	sp, #16
10003a80:	2300      	movs	r3, #0
10003a82:	220c      	movs	r2, #12
10003a84:	ac03      	add	r4, sp, #12
10003a86:	4619      	mov	r1, r3
10003a88:	9400      	str	r4, [sp, #0]
10003a8a:	f7ff fbb5 	bl	100031f8 <_Unwind_VRS_Get>
10003a8e:	9803      	ldr	r0, [sp, #12]
10003a90:	b004      	add	sp, #16
10003a92:	bd10      	pop	{r4, pc}

10003a94 <unwind_UCB_from_context>:
10003a94:	e7f2      	b.n	10003a7c <_Unwind_GetGR.constprop.0>
10003a96:	bf00      	nop

10003a98 <__gnu_unwind_execute>:
10003a98:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10003a9c:	f04f 0800 	mov.w	r8, #0
10003aa0:	b085      	sub	sp, #20
10003aa2:	4606      	mov	r6, r0
10003aa4:	460d      	mov	r5, r1
10003aa6:	4628      	mov	r0, r5
10003aa8:	f7ff ffca 	bl	10003a40 <next_unwind_byte>
10003aac:	28b0      	cmp	r0, #176	; 0xb0
10003aae:	4604      	mov	r4, r0
10003ab0:	f000 80bc 	beq.w	10003c2c <__gnu_unwind_execute+0x194>
10003ab4:	0607      	lsls	r7, r0, #24
10003ab6:	d520      	bpl.n	10003afa <__gnu_unwind_execute+0x62>
10003ab8:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
10003abc:	2b80      	cmp	r3, #128	; 0x80
10003abe:	d04e      	beq.n	10003b5e <__gnu_unwind_execute+0xc6>
10003ac0:	2b90      	cmp	r3, #144	; 0x90
10003ac2:	d037      	beq.n	10003b34 <__gnu_unwind_execute+0x9c>
10003ac4:	2ba0      	cmp	r3, #160	; 0xa0
10003ac6:	d061      	beq.n	10003b8c <__gnu_unwind_execute+0xf4>
10003ac8:	2bb0      	cmp	r3, #176	; 0xb0
10003aca:	d076      	beq.n	10003bba <__gnu_unwind_execute+0x122>
10003acc:	2bc0      	cmp	r3, #192	; 0xc0
10003ace:	f000 808d 	beq.w	10003bec <__gnu_unwind_execute+0x154>
10003ad2:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
10003ad6:	2bd0      	cmp	r3, #208	; 0xd0
10003ad8:	d10b      	bne.n	10003af2 <__gnu_unwind_execute+0x5a>
10003ada:	f000 0207 	and.w	r2, r0, #7
10003ade:	2305      	movs	r3, #5
10003ae0:	2101      	movs	r1, #1
10003ae2:	4630      	mov	r0, r6
10003ae4:	3201      	adds	r2, #1
10003ae6:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
10003aea:	f7ff fd79 	bl	100035e0 <_Unwind_VRS_Pop>
10003aee:	2800      	cmp	r0, #0
10003af0:	d0d9      	beq.n	10003aa6 <__gnu_unwind_execute+0xe>
10003af2:	2009      	movs	r0, #9
10003af4:	b005      	add	sp, #20
10003af6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10003afa:	0083      	lsls	r3, r0, #2
10003afc:	f10d 090c 	add.w	r9, sp, #12
10003b00:	220d      	movs	r2, #13
10003b02:	4630      	mov	r0, r6
10003b04:	b2db      	uxtb	r3, r3
10003b06:	f8cd 9000 	str.w	r9, [sp]
10003b0a:	1d1f      	adds	r7, r3, #4
10003b0c:	2300      	movs	r3, #0
10003b0e:	4619      	mov	r1, r3
10003b10:	f7ff fb72 	bl	100031f8 <_Unwind_VRS_Get>
10003b14:	9b03      	ldr	r3, [sp, #12]
10003b16:	0660      	lsls	r0, r4, #25
10003b18:	f04f 020d 	mov.w	r2, #13
10003b1c:	4630      	mov	r0, r6
10003b1e:	f8cd 9000 	str.w	r9, [sp]
10003b22:	bf4c      	ite	mi
10003b24:	1bdf      	submi	r7, r3, r7
10003b26:	18ff      	addpl	r7, r7, r3
10003b28:	2300      	movs	r3, #0
10003b2a:	9703      	str	r7, [sp, #12]
10003b2c:	4619      	mov	r1, r3
10003b2e:	f7ff fb89 	bl	10003244 <_Unwind_VRS_Set>
10003b32:	e7b8      	b.n	10003aa6 <__gnu_unwind_execute+0xe>
10003b34:	f000 030d 	and.w	r3, r0, #13
10003b38:	2b0d      	cmp	r3, #13
10003b3a:	d0da      	beq.n	10003af2 <__gnu_unwind_execute+0x5a>
10003b3c:	af03      	add	r7, sp, #12
10003b3e:	2300      	movs	r3, #0
10003b40:	f000 020f 	and.w	r2, r0, #15
10003b44:	4630      	mov	r0, r6
10003b46:	4619      	mov	r1, r3
10003b48:	9700      	str	r7, [sp, #0]
10003b4a:	f7ff fb55 	bl	100031f8 <_Unwind_VRS_Get>
10003b4e:	2300      	movs	r3, #0
10003b50:	220d      	movs	r2, #13
10003b52:	4630      	mov	r0, r6
10003b54:	4619      	mov	r1, r3
10003b56:	9700      	str	r7, [sp, #0]
10003b58:	f7ff fb74 	bl	10003244 <_Unwind_VRS_Set>
10003b5c:	e7a3      	b.n	10003aa6 <__gnu_unwind_execute+0xe>
10003b5e:	0224      	lsls	r4, r4, #8
10003b60:	4628      	mov	r0, r5
10003b62:	f7ff ff6d 	bl	10003a40 <next_unwind_byte>
10003b66:	4320      	orrs	r0, r4
10003b68:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
10003b6c:	d0c1      	beq.n	10003af2 <__gnu_unwind_execute+0x5a>
10003b6e:	0104      	lsls	r4, r0, #4
10003b70:	2300      	movs	r3, #0
10003b72:	4630      	mov	r0, r6
10003b74:	b2a2      	uxth	r2, r4
10003b76:	4619      	mov	r1, r3
10003b78:	f7ff fd32 	bl	100035e0 <_Unwind_VRS_Pop>
10003b7c:	2800      	cmp	r0, #0
10003b7e:	d1b8      	bne.n	10003af2 <__gnu_unwind_execute+0x5a>
10003b80:	f414 4f00 	tst.w	r4, #32768	; 0x8000
10003b84:	bf18      	it	ne
10003b86:	f04f 0801 	movne.w	r8, #1
10003b8a:	e78c      	b.n	10003aa6 <__gnu_unwind_execute+0xe>
10003b8c:	43c2      	mvns	r2, r0
10003b8e:	0701      	lsls	r1, r0, #28
10003b90:	4630      	mov	r0, r6
10003b92:	f002 0307 	and.w	r3, r2, #7
10003b96:	f44f 627f 	mov.w	r2, #4080	; 0xff0
10003b9a:	fa42 f203 	asr.w	r2, r2, r3
10003b9e:	f04f 0300 	mov.w	r3, #0
10003ba2:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
10003ba6:	4619      	mov	r1, r3
10003ba8:	bf48      	it	mi
10003baa:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
10003bae:	f7ff fd17 	bl	100035e0 <_Unwind_VRS_Pop>
10003bb2:	2800      	cmp	r0, #0
10003bb4:	f43f af77 	beq.w	10003aa6 <__gnu_unwind_execute+0xe>
10003bb8:	e79b      	b.n	10003af2 <__gnu_unwind_execute+0x5a>
10003bba:	28b1      	cmp	r0, #177	; 0xb1
10003bbc:	d03b      	beq.n	10003c36 <__gnu_unwind_execute+0x19e>
10003bbe:	28b2      	cmp	r0, #178	; 0xb2
10003bc0:	f000 80a1 	beq.w	10003d06 <__gnu_unwind_execute+0x26e>
10003bc4:	28b3      	cmp	r0, #179	; 0xb3
10003bc6:	d041      	beq.n	10003c4c <__gnu_unwind_execute+0x1b4>
10003bc8:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
10003bcc:	2bb4      	cmp	r3, #180	; 0xb4
10003bce:	d090      	beq.n	10003af2 <__gnu_unwind_execute+0x5a>
10003bd0:	f000 0207 	and.w	r2, r0, #7
10003bd4:	2301      	movs	r3, #1
10003bd6:	441a      	add	r2, r3
10003bd8:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
10003bdc:	4619      	mov	r1, r3
10003bde:	4630      	mov	r0, r6
10003be0:	f7ff fcfe 	bl	100035e0 <_Unwind_VRS_Pop>
10003be4:	2800      	cmp	r0, #0
10003be6:	f43f af5e 	beq.w	10003aa6 <__gnu_unwind_execute+0xe>
10003bea:	e782      	b.n	10003af2 <__gnu_unwind_execute+0x5a>
10003bec:	28c6      	cmp	r0, #198	; 0xc6
10003bee:	d051      	beq.n	10003c94 <__gnu_unwind_execute+0x1fc>
10003bf0:	28c7      	cmp	r0, #199	; 0xc7
10003bf2:	d062      	beq.n	10003cba <__gnu_unwind_execute+0x222>
10003bf4:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
10003bf8:	2bc0      	cmp	r3, #192	; 0xc0
10003bfa:	d071      	beq.n	10003ce0 <__gnu_unwind_execute+0x248>
10003bfc:	28c8      	cmp	r0, #200	; 0xc8
10003bfe:	d076      	beq.n	10003cee <__gnu_unwind_execute+0x256>
10003c00:	28c9      	cmp	r0, #201	; 0xc9
10003c02:	f47f af76 	bne.w	10003af2 <__gnu_unwind_execute+0x5a>
10003c06:	4628      	mov	r0, r5
10003c08:	f7ff ff1a 	bl	10003a40 <next_unwind_byte>
10003c0c:	0302      	lsls	r2, r0, #12
10003c0e:	f000 000f 	and.w	r0, r0, #15
10003c12:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10003c16:	3001      	adds	r0, #1
10003c18:	4302      	orrs	r2, r0
10003c1a:	2101      	movs	r1, #1
10003c1c:	2305      	movs	r3, #5
10003c1e:	4630      	mov	r0, r6
10003c20:	f7ff fcde 	bl	100035e0 <_Unwind_VRS_Pop>
10003c24:	2800      	cmp	r0, #0
10003c26:	f43f af3e 	beq.w	10003aa6 <__gnu_unwind_execute+0xe>
10003c2a:	e762      	b.n	10003af2 <__gnu_unwind_execute+0x5a>
10003c2c:	f1b8 0f00 	cmp.w	r8, #0
10003c30:	d01f      	beq.n	10003c72 <__gnu_unwind_execute+0x1da>
10003c32:	2000      	movs	r0, #0
10003c34:	e75e      	b.n	10003af4 <__gnu_unwind_execute+0x5c>
10003c36:	4628      	mov	r0, r5
10003c38:	f7ff ff02 	bl	10003a40 <next_unwind_byte>
10003c3c:	4602      	mov	r2, r0
10003c3e:	2800      	cmp	r0, #0
10003c40:	f43f af57 	beq.w	10003af2 <__gnu_unwind_execute+0x5a>
10003c44:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
10003c48:	d0c8      	beq.n	10003bdc <__gnu_unwind_execute+0x144>
10003c4a:	e752      	b.n	10003af2 <__gnu_unwind_execute+0x5a>
10003c4c:	4628      	mov	r0, r5
10003c4e:	f7ff fef7 	bl	10003a40 <next_unwind_byte>
10003c52:	f000 030f 	and.w	r3, r0, #15
10003c56:	0302      	lsls	r2, r0, #12
10003c58:	4630      	mov	r0, r6
10003c5a:	3301      	adds	r3, #1
10003c5c:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10003c60:	431a      	orrs	r2, r3
10003c62:	2301      	movs	r3, #1
10003c64:	4619      	mov	r1, r3
10003c66:	f7ff fcbb 	bl	100035e0 <_Unwind_VRS_Pop>
10003c6a:	2800      	cmp	r0, #0
10003c6c:	f43f af1b 	beq.w	10003aa6 <__gnu_unwind_execute+0xe>
10003c70:	e73f      	b.n	10003af2 <__gnu_unwind_execute+0x5a>
10003c72:	ac03      	add	r4, sp, #12
10003c74:	4643      	mov	r3, r8
10003c76:	220e      	movs	r2, #14
10003c78:	4641      	mov	r1, r8
10003c7a:	4630      	mov	r0, r6
10003c7c:	9400      	str	r4, [sp, #0]
10003c7e:	f7ff fabb 	bl	100031f8 <_Unwind_VRS_Get>
10003c82:	4643      	mov	r3, r8
10003c84:	220f      	movs	r2, #15
10003c86:	4630      	mov	r0, r6
10003c88:	4641      	mov	r1, r8
10003c8a:	9400      	str	r4, [sp, #0]
10003c8c:	f7ff fada 	bl	10003244 <_Unwind_VRS_Set>
10003c90:	4640      	mov	r0, r8
10003c92:	e72f      	b.n	10003af4 <__gnu_unwind_execute+0x5c>
10003c94:	4628      	mov	r0, r5
10003c96:	f7ff fed3 	bl	10003a40 <next_unwind_byte>
10003c9a:	f000 030f 	and.w	r3, r0, #15
10003c9e:	0302      	lsls	r2, r0, #12
10003ca0:	4630      	mov	r0, r6
10003ca2:	3301      	adds	r3, #1
10003ca4:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10003ca8:	431a      	orrs	r2, r3
10003caa:	2303      	movs	r3, #3
10003cac:	4619      	mov	r1, r3
10003cae:	f7ff fc97 	bl	100035e0 <_Unwind_VRS_Pop>
10003cb2:	2800      	cmp	r0, #0
10003cb4:	f43f aef7 	beq.w	10003aa6 <__gnu_unwind_execute+0xe>
10003cb8:	e71b      	b.n	10003af2 <__gnu_unwind_execute+0x5a>
10003cba:	4628      	mov	r0, r5
10003cbc:	f7ff fec0 	bl	10003a40 <next_unwind_byte>
10003cc0:	4602      	mov	r2, r0
10003cc2:	2800      	cmp	r0, #0
10003cc4:	f43f af15 	beq.w	10003af2 <__gnu_unwind_execute+0x5a>
10003cc8:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
10003ccc:	f47f af11 	bne.w	10003af2 <__gnu_unwind_execute+0x5a>
10003cd0:	2104      	movs	r1, #4
10003cd2:	4630      	mov	r0, r6
10003cd4:	f7ff fc84 	bl	100035e0 <_Unwind_VRS_Pop>
10003cd8:	2800      	cmp	r0, #0
10003cda:	f43f aee4 	beq.w	10003aa6 <__gnu_unwind_execute+0xe>
10003cde:	e708      	b.n	10003af2 <__gnu_unwind_execute+0x5a>
10003ce0:	f000 020f 	and.w	r2, r0, #15
10003ce4:	2303      	movs	r3, #3
10003ce6:	3201      	adds	r2, #1
10003ce8:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
10003cec:	e776      	b.n	10003bdc <__gnu_unwind_execute+0x144>
10003cee:	4628      	mov	r0, r5
10003cf0:	f7ff fea6 	bl	10003a40 <next_unwind_byte>
10003cf4:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
10003cf8:	f000 030f 	and.w	r3, r0, #15
10003cfc:	3210      	adds	r2, #16
10003cfe:	3301      	adds	r3, #1
10003d00:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
10003d04:	e789      	b.n	10003c1a <__gnu_unwind_execute+0x182>
10003d06:	2300      	movs	r3, #0
10003d08:	f10d 090c 	add.w	r9, sp, #12
10003d0c:	220d      	movs	r2, #13
10003d0e:	4630      	mov	r0, r6
10003d10:	4619      	mov	r1, r3
10003d12:	f8cd 9000 	str.w	r9, [sp]
10003d16:	f7ff fa6f 	bl	100031f8 <_Unwind_VRS_Get>
10003d1a:	4628      	mov	r0, r5
10003d1c:	f7ff fe90 	bl	10003a40 <next_unwind_byte>
10003d20:	0602      	lsls	r2, r0, #24
10003d22:	f04f 0402 	mov.w	r4, #2
10003d26:	d50b      	bpl.n	10003d40 <__gnu_unwind_execute+0x2a8>
10003d28:	f000 007f 	and.w	r0, r0, #127	; 0x7f
10003d2c:	9b03      	ldr	r3, [sp, #12]
10003d2e:	40a0      	lsls	r0, r4
10003d30:	3407      	adds	r4, #7
10003d32:	4418      	add	r0, r3
10003d34:	9003      	str	r0, [sp, #12]
10003d36:	4628      	mov	r0, r5
10003d38:	f7ff fe82 	bl	10003a40 <next_unwind_byte>
10003d3c:	0603      	lsls	r3, r0, #24
10003d3e:	d4f3      	bmi.n	10003d28 <__gnu_unwind_execute+0x290>
10003d40:	9b03      	ldr	r3, [sp, #12]
10003d42:	f000 027f 	and.w	r2, r0, #127	; 0x7f
10003d46:	f8cd 9000 	str.w	r9, [sp]
10003d4a:	4630      	mov	r0, r6
10003d4c:	40a2      	lsls	r2, r4
10003d4e:	f503 7301 	add.w	r3, r3, #516	; 0x204
10003d52:	441a      	add	r2, r3
10003d54:	2300      	movs	r3, #0
10003d56:	9203      	str	r2, [sp, #12]
10003d58:	4619      	mov	r1, r3
10003d5a:	220d      	movs	r2, #13
10003d5c:	f7ff fa72 	bl	10003244 <_Unwind_VRS_Set>
10003d60:	e6a1      	b.n	10003aa6 <__gnu_unwind_execute+0xe>
10003d62:	bf00      	nop

10003d64 <__gnu_unwind_frame>:
10003d64:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
10003d66:	460b      	mov	r3, r1
10003d68:	f04f 0c03 	mov.w	ip, #3
10003d6c:	4618      	mov	r0, r3
10003d6e:	3208      	adds	r2, #8
10003d70:	f852 3c04 	ldr.w	r3, [r2, #-4]
10003d74:	b500      	push	{lr}
10003d76:	b085      	sub	sp, #20
10003d78:	9202      	str	r2, [sp, #8]
10003d7a:	a901      	add	r1, sp, #4
10003d7c:	0e1a      	lsrs	r2, r3, #24
10003d7e:	f88d c00c 	strb.w	ip, [sp, #12]
10003d82:	021b      	lsls	r3, r3, #8
10003d84:	f88d 200d 	strb.w	r2, [sp, #13]
10003d88:	9301      	str	r3, [sp, #4]
10003d8a:	f7ff fe85 	bl	10003a98 <__gnu_unwind_execute>
10003d8e:	b005      	add	sp, #20
10003d90:	f85d fb04 	ldr.w	pc, [sp], #4

10003d94 <_Unwind_GetRegionStart>:
10003d94:	b508      	push	{r3, lr}
10003d96:	f7ff fe7d 	bl	10003a94 <unwind_UCB_from_context>
10003d9a:	6c80      	ldr	r0, [r0, #72]	; 0x48
10003d9c:	bd08      	pop	{r3, pc}
10003d9e:	bf00      	nop

10003da0 <_Unwind_GetLanguageSpecificData>:
10003da0:	b508      	push	{r3, lr}
10003da2:	f7ff fe77 	bl	10003a94 <unwind_UCB_from_context>
10003da6:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
10003da8:	79c3      	ldrb	r3, [r0, #7]
10003daa:	3302      	adds	r3, #2
10003dac:	eb00 0083 	add.w	r0, r0, r3, lsl #2
10003db0:	bd08      	pop	{r3, pc}
10003db2:	bf00      	nop

10003db4 <__aeabi_idiv0>:
10003db4:	4770      	bx	lr
10003db6:	bf00      	nop

10003db8 <abort>:
10003db8:	2006      	movs	r0, #6
10003dba:	b508      	push	{r3, lr}
10003dbc:	f000 f87a 	bl	10003eb4 <raise>
10003dc0:	2001      	movs	r0, #1
10003dc2:	f7fe f8ed 	bl	10001fa0 <_exit>
10003dc6:	bf00      	nop

10003dc8 <memcpy>:
10003dc8:	4684      	mov	ip, r0
10003dca:	ea41 0300 	orr.w	r3, r1, r0
10003dce:	f013 0303 	ands.w	r3, r3, #3
10003dd2:	d149      	bne.n	10003e68 <memcpy+0xa0>
10003dd4:	3a40      	subs	r2, #64	; 0x40
10003dd6:	d323      	bcc.n	10003e20 <memcpy+0x58>
10003dd8:	680b      	ldr	r3, [r1, #0]
10003dda:	6003      	str	r3, [r0, #0]
10003ddc:	684b      	ldr	r3, [r1, #4]
10003dde:	6043      	str	r3, [r0, #4]
10003de0:	688b      	ldr	r3, [r1, #8]
10003de2:	6083      	str	r3, [r0, #8]
10003de4:	68cb      	ldr	r3, [r1, #12]
10003de6:	60c3      	str	r3, [r0, #12]
10003de8:	690b      	ldr	r3, [r1, #16]
10003dea:	6103      	str	r3, [r0, #16]
10003dec:	694b      	ldr	r3, [r1, #20]
10003dee:	6143      	str	r3, [r0, #20]
10003df0:	698b      	ldr	r3, [r1, #24]
10003df2:	6183      	str	r3, [r0, #24]
10003df4:	69cb      	ldr	r3, [r1, #28]
10003df6:	61c3      	str	r3, [r0, #28]
10003df8:	6a0b      	ldr	r3, [r1, #32]
10003dfa:	6203      	str	r3, [r0, #32]
10003dfc:	6a4b      	ldr	r3, [r1, #36]	; 0x24
10003dfe:	6243      	str	r3, [r0, #36]	; 0x24
10003e00:	6a8b      	ldr	r3, [r1, #40]	; 0x28
10003e02:	6283      	str	r3, [r0, #40]	; 0x28
10003e04:	6acb      	ldr	r3, [r1, #44]	; 0x2c
10003e06:	62c3      	str	r3, [r0, #44]	; 0x2c
10003e08:	6b0b      	ldr	r3, [r1, #48]	; 0x30
10003e0a:	6303      	str	r3, [r0, #48]	; 0x30
10003e0c:	6b4b      	ldr	r3, [r1, #52]	; 0x34
10003e0e:	6343      	str	r3, [r0, #52]	; 0x34
10003e10:	6b8b      	ldr	r3, [r1, #56]	; 0x38
10003e12:	6383      	str	r3, [r0, #56]	; 0x38
10003e14:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10003e16:	63c3      	str	r3, [r0, #60]	; 0x3c
10003e18:	3040      	adds	r0, #64	; 0x40
10003e1a:	3140      	adds	r1, #64	; 0x40
10003e1c:	3a40      	subs	r2, #64	; 0x40
10003e1e:	d2db      	bcs.n	10003dd8 <memcpy+0x10>
10003e20:	3230      	adds	r2, #48	; 0x30
10003e22:	d30b      	bcc.n	10003e3c <memcpy+0x74>
10003e24:	680b      	ldr	r3, [r1, #0]
10003e26:	6003      	str	r3, [r0, #0]
10003e28:	684b      	ldr	r3, [r1, #4]
10003e2a:	6043      	str	r3, [r0, #4]
10003e2c:	688b      	ldr	r3, [r1, #8]
10003e2e:	6083      	str	r3, [r0, #8]
10003e30:	68cb      	ldr	r3, [r1, #12]
10003e32:	60c3      	str	r3, [r0, #12]
10003e34:	3010      	adds	r0, #16
10003e36:	3110      	adds	r1, #16
10003e38:	3a10      	subs	r2, #16
10003e3a:	d2f3      	bcs.n	10003e24 <memcpy+0x5c>
10003e3c:	320c      	adds	r2, #12
10003e3e:	d305      	bcc.n	10003e4c <memcpy+0x84>
10003e40:	f851 3b04 	ldr.w	r3, [r1], #4
10003e44:	f840 3b04 	str.w	r3, [r0], #4
10003e48:	3a04      	subs	r2, #4
10003e4a:	d2f9      	bcs.n	10003e40 <memcpy+0x78>
10003e4c:	3204      	adds	r2, #4
10003e4e:	d008      	beq.n	10003e62 <memcpy+0x9a>
10003e50:	07d2      	lsls	r2, r2, #31
10003e52:	bf1c      	itt	ne
10003e54:	f811 3b01 	ldrbne.w	r3, [r1], #1
10003e58:	f800 3b01 	strbne.w	r3, [r0], #1
10003e5c:	d301      	bcc.n	10003e62 <memcpy+0x9a>
10003e5e:	880b      	ldrh	r3, [r1, #0]
10003e60:	8003      	strh	r3, [r0, #0]
10003e62:	4660      	mov	r0, ip
10003e64:	4770      	bx	lr
10003e66:	bf00      	nop
10003e68:	2a08      	cmp	r2, #8
10003e6a:	d313      	bcc.n	10003e94 <memcpy+0xcc>
10003e6c:	078b      	lsls	r3, r1, #30
10003e6e:	d0b1      	beq.n	10003dd4 <memcpy+0xc>
10003e70:	f010 0303 	ands.w	r3, r0, #3
10003e74:	d0ae      	beq.n	10003dd4 <memcpy+0xc>
10003e76:	f1c3 0304 	rsb	r3, r3, #4
10003e7a:	1ad2      	subs	r2, r2, r3
10003e7c:	07db      	lsls	r3, r3, #31
10003e7e:	bf1c      	itt	ne
10003e80:	f811 3b01 	ldrbne.w	r3, [r1], #1
10003e84:	f800 3b01 	strbne.w	r3, [r0], #1
10003e88:	d3a4      	bcc.n	10003dd4 <memcpy+0xc>
10003e8a:	f831 3b02 	ldrh.w	r3, [r1], #2
10003e8e:	f820 3b02 	strh.w	r3, [r0], #2
10003e92:	e79f      	b.n	10003dd4 <memcpy+0xc>
10003e94:	3a04      	subs	r2, #4
10003e96:	d3d9      	bcc.n	10003e4c <memcpy+0x84>
10003e98:	3a01      	subs	r2, #1
10003e9a:	f811 3b01 	ldrb.w	r3, [r1], #1
10003e9e:	f800 3b01 	strb.w	r3, [r0], #1
10003ea2:	d2f9      	bcs.n	10003e98 <memcpy+0xd0>
10003ea4:	780b      	ldrb	r3, [r1, #0]
10003ea6:	7003      	strb	r3, [r0, #0]
10003ea8:	784b      	ldrb	r3, [r1, #1]
10003eaa:	7043      	strb	r3, [r0, #1]
10003eac:	788b      	ldrb	r3, [r1, #2]
10003eae:	7083      	strb	r3, [r0, #2]
10003eb0:	4660      	mov	r0, ip
10003eb2:	4770      	bx	lr

10003eb4 <raise>:
10003eb4:	b538      	push	{r3, r4, r5, lr}
10003eb6:	281f      	cmp	r0, #31
10003eb8:	4b14      	ldr	r3, [pc, #80]	; (10003f0c <raise+0x58>)
10003eba:	681d      	ldr	r5, [r3, #0]
10003ebc:	d820      	bhi.n	10003f00 <raise+0x4c>
10003ebe:	f8d5 22dc 	ldr.w	r2, [r5, #732]	; 0x2dc
10003ec2:	4604      	mov	r4, r0
10003ec4:	b162      	cbz	r2, 10003ee0 <raise+0x2c>
10003ec6:	f852 3020 	ldr.w	r3, [r2, r0, lsl #2]
10003eca:	b14b      	cbz	r3, 10003ee0 <raise+0x2c>
10003ecc:	2b01      	cmp	r3, #1
10003ece:	d015      	beq.n	10003efc <raise+0x48>
10003ed0:	1c59      	adds	r1, r3, #1
10003ed2:	d00f      	beq.n	10003ef4 <raise+0x40>
10003ed4:	2500      	movs	r5, #0
10003ed6:	f842 5020 	str.w	r5, [r2, r0, lsl #2]
10003eda:	4798      	blx	r3
10003edc:	4628      	mov	r0, r5
10003ede:	bd38      	pop	{r3, r4, r5, pc}
10003ee0:	4628      	mov	r0, r5
10003ee2:	f000 f82b 	bl	10003f3c <_getpid_r>
10003ee6:	4622      	mov	r2, r4
10003ee8:	4601      	mov	r1, r0
10003eea:	4628      	mov	r0, r5
10003eec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
10003ef0:	f000 b80e 	b.w	10003f10 <_kill_r>
10003ef4:	2316      	movs	r3, #22
10003ef6:	2001      	movs	r0, #1
10003ef8:	602b      	str	r3, [r5, #0]
10003efa:	bd38      	pop	{r3, r4, r5, pc}
10003efc:	2000      	movs	r0, #0
10003efe:	bd38      	pop	{r3, r4, r5, pc}
10003f00:	2316      	movs	r3, #22
10003f02:	f04f 30ff 	mov.w	r0, #4294967295
10003f06:	602b      	str	r3, [r5, #0]
10003f08:	bd38      	pop	{r3, r4, r5, pc}
10003f0a:	bf00      	nop
10003f0c:	3800000c 	stmdacc	r0, {r2, r3}

10003f10 <_kill_r>:
10003f10:	b570      	push	{r4, r5, r6, lr}
10003f12:	460c      	mov	r4, r1
10003f14:	4603      	mov	r3, r0
10003f16:	4d08      	ldr	r5, [pc, #32]	; (10003f38 <_kill_r+0x28>)
10003f18:	2600      	movs	r6, #0
10003f1a:	4620      	mov	r0, r4
10003f1c:	4611      	mov	r1, r2
10003f1e:	461c      	mov	r4, r3
10003f20:	602e      	str	r6, [r5, #0]
10003f22:	f7fe f835 	bl	10001f90 <_kill>
10003f26:	1c43      	adds	r3, r0, #1
10003f28:	d000      	beq.n	10003f2c <_kill_r+0x1c>
10003f2a:	bd70      	pop	{r4, r5, r6, pc}
10003f2c:	682b      	ldr	r3, [r5, #0]
10003f2e:	2b00      	cmp	r3, #0
10003f30:	d0fb      	beq.n	10003f2a <_kill_r+0x1a>
10003f32:	6023      	str	r3, [r4, #0]
10003f34:	bd70      	pop	{r4, r5, r6, pc}
10003f36:	bf00      	nop
10003f38:	380005b0 	stmdacc	r0, {r4, r5, r7, r8, sl}

10003f3c <_getpid_r>:
10003f3c:	f7fe b826 	b.w	10001f8c <_getpid>

10003f40 <_init>:
10003f40:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10003f42:	bf00      	nop
10003f44:	bcf8      	pop	{r3, r4, r5, r6, r7}
10003f46:	bc08      	pop	{r3}
10003f48:	469e      	mov	lr, r3
10003f4a:	4770      	bx	lr

10003f4c <_fini>:
10003f4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10003f4e:	bf00      	nop
10003f50:	bcf8      	pop	{r3, r4, r5, r6, r7}
10003f52:	bc08      	pop	{r3}
10003f54:	469e      	mov	lr, r3
10003f56:	4770      	bx	lr
10003f58:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
10003f5c:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
10003f60:	7564206b 	strbvc	r2, [r4, #-107]!	; 0xffffff95
10003f64:	6520706d 	strvs	r7, [r0, #-109]!	; 0xffffff93
10003f68:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
10003f6c:	6425203a 	strtvs	r2, [r5], #-58	; 0xffffffc6
10003f70:	00000a0d 	andeq	r0, r0, sp, lsl #20
10003f74:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
10003f78:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
10003f7c:	205b3a6b 	subscs	r3, fp, fp, ror #20
10003f80:	00000000 	andeq	r0, r0, r0
10003f84:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10003f88:	00000020 	andeq	r0, r0, r0, lsr #32
10003f8c:	000d205d 	andeq	r2, sp, sp, asr r0
10003f90:	73696874 	cmnvc	r9, #116, 16	; 0x740000
10003f94:	20736920 	rsbscs	r6, r3, r0, lsr #18
10003f98:	0d2e7325 	stceq	3, cr7, [lr, #-148]!	; 0xffffff6c
10003f9c:	0000000a 	andeq	r0, r0, sl
10003fa0:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
10003fa4:	00000d74 	andeq	r0, r0, r4, ror sp
10003fa8:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
10003fac:	6f77206f 	svcvs	0x0077206f
10003fb0:	20646c72 	rsbcs	r6, r4, r2, ror ip
10003fb4:	6425202d 	strtvs	r2, [r5], #-45	; 0xffffffd3
10003fb8:	000a0d2e 	andeq	r0, sl, lr, lsr #26

10003fbc <__func__.0>:
10003fbc:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10003fc0:	00000035 	andeq	r0, r0, r5, lsr r0

10003fc4 <__func__.1>:
10003fc4:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10003fc8:	00000034 	andeq	r0, r0, r4, lsr r0

10003fcc <__func__.2>:
10003fcc:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10003fd0:	00000033 	andeq	r0, r0, r3, lsr r0

10003fd4 <__func__.3>:
10003fd4:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10003fd8:	00000032 	andeq	r0, r0, r2, lsr r0

10003fdc <__func__.4>:
10003fdc:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10003fe0:	00000031 	andeq	r0, r0, r1, lsr r0

10003fe4 <__func__.5>:
10003fe4:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
10003fe8:	00000030 	andeq	r0, r0, r0, lsr r0
10003fec:	00696e66 	rsbeq	r6, r9, r6, ror #28
10003ff0:	2b696e66 	blcs	11a5f990 <__copy_table_end__+0x1a5b418>
10003ff4:	00000000 	andeq	r0, r0, r0
10003ff8:	006e616e 	rsbeq	r6, lr, lr, ror #2
10003ffc:	2d696e66 	stclcs	14, cr6, [r9, #-408]!	; 0xfffffe68
	...

10004008 <pow10.0>:
10004008:	00000000 	andeq	r0, r0, r0
1000400c:	3ff00000 	svccc	0x00f00000	; IMB
10004010:	00000000 	andeq	r0, r0, r0
10004014:	40240000 	eormi	r0, r4, r0
10004018:	00000000 	andeq	r0, r0, r0
1000401c:	40590000 	subsmi	r0, r9, r0
10004020:	00000000 	andeq	r0, r0, r0
10004024:	408f4000 	addmi	r4, pc, r0
10004028:	00000000 	andeq	r0, r0, r0
1000402c:	40c38800 	sbcmi	r8, r3, r0, lsl #16
10004030:	00000000 	andeq	r0, r0, r0
10004034:	40f86a00 	rscsmi	r6, r8, r0, lsl #20
10004038:	00000000 	andeq	r0, r0, r0
1000403c:	412e8480 	smlawbmi	lr, r0, r4, r8
10004040:	00000000 	andeq	r0, r0, r0
10004044:	416312d0 	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
10004048:	00000000 	andeq	r0, r0, r0
1000404c:	4197d784 	orrsmi	sp, r7, r4, lsl #15
10004050:	00000000 	andeq	r0, r0, r0
10004054:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10004058:	45584520 	ldrbmi	r4, [r8, #-1312]	; 0xfffffae0
1000405c:	5445525f 	strbpl	r5, [r5], #-607	; 0xfffffda1
10004060:	3a4e5255 	bcc	113989bc <__copy_table_end__+0x1394444>
10004064:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
10004068:	20583830 	subscs	r3, r8, r0, lsr r8
1000406c:	00000a0d 	andeq	r0, r0, sp, lsl #20
10004070:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
10004074:	61745320 	cmnvs	r4, r0, lsr #6
10004078:	5b3a6b63 	blpl	10e9ee0c <__copy_table_end__+0xe9a894>
1000407c:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10004080:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
10004084:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
10004088:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
1000408c:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
10004090:	000a0d64 	andeq	r0, sl, r4, ror #26
10004094:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
10004098:	78655420 	stmdavc	r5!, {r5, sl, ip, lr}^
1000409c:	5b3a2074 	blpl	10e8c274 <__copy_table_end__+0xe87cfc>
100040a0:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
100040a4:	25202d20 	strcs	r2, [r0, #-3360]!	; 0xfffff2e0
100040a8:	5d583830 	ldclpl	8, cr3, [r8, #-192]	; 0xffffff40
100040ac:	6973202c 	ldmdbvs	r3!, {r2, r3, r5, sp}^
100040b0:	253a657a 	ldrcs	r6, [sl, #-1402]!	; 0xfffffa86
100040b4:	000a0d64 	andeq	r0, sl, r4, ror #26
100040b8:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
100040bc:	61745320 	cmnvs	r4, r0, lsr #6
100040c0:	47206b63 	strmi	r6, [r0, -r3, ror #22]!
100040c4:	74776f72 	ldrbtvc	r6, [r7], #-3954	; 0xfffff08e
100040c8:	6f442068 	svcvs	0x00442068
100040cc:	61776e77 	cmnvs	r7, r7, ror lr
100040d0:	253a6472 	ldrcs	r6, [sl, #-1138]!	; 0xfffffb8e
100040d4:	000a0d64 	andeq	r0, sl, r4, ror #26
100040d8:	72614820 	rsbvc	r4, r1, #32, 16	; 0x200000
100040dc:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
100040e0:	4920746c 	stmdbmi	r0!, {r2, r3, r5, r6, sl, ip, sp, lr}
100040e4:	726f666e 	rsbvc	r6, pc, #115343360	; 0x6e00000
100040e8:	6974616d 	ldmdbvs	r4!, {r0, r2, r3, r5, r6, r8, sp, lr}^
100040ec:	44206e6f 	strtmi	r6, [r0], #-3695	; 0xfffff191
100040f0:	20706d75 	rsbscs	r6, r0, r5, ror sp
100040f4:	0000000d 	andeq	r0, r0, sp
100040f8:	61745320 	cmnvs	r4, r0, lsr #6
100040fc:	46206b63 	strtmi	r6, [r0], -r3, ror #22
10004100:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
10004104:	0d202020 	stceq	0, cr2, [r0, #-128]!	; 0xffffff80
10004108:	00000000 	andeq	r0, r0, r0
1000410c:	20305220 	eorscs	r5, r0, r0, lsr #4
10004110:	203d2020 	eorscs	r2, sp, r0, lsr #32
10004114:	30257830 	eorcc	r7, r5, r0, lsr r8
10004118:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
1000411c:	0000000a 	andeq	r0, r0, sl
10004120:	20315220 	eorscs	r5, r1, r0, lsr #4
10004124:	203d2020 	eorscs	r2, sp, r0, lsr #32
10004128:	30257830 	eorcc	r7, r5, r0, lsr r8
1000412c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10004130:	0000000a 	andeq	r0, r0, sl
10004134:	20325220 	eorscs	r5, r2, r0, lsr #4
10004138:	203d2020 	eorscs	r2, sp, r0, lsr #32
1000413c:	30257830 	eorcc	r7, r5, r0, lsr r8
10004140:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10004144:	0000000a 	andeq	r0, r0, sl
10004148:	20335220 	eorscs	r5, r3, r0, lsr #4
1000414c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10004150:	30257830 	eorcc	r7, r5, r0, lsr r8
10004154:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10004158:	0000000a 	andeq	r0, r0, sl
1000415c:	20345220 	eorscs	r5, r4, r0, lsr #4
10004160:	203d2020 	eorscs	r2, sp, r0, lsr #32
10004164:	30257830 	eorcc	r7, r5, r0, lsr r8
10004168:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
1000416c:	0000000a 	andeq	r0, r0, sl
10004170:	20355220 	eorscs	r5, r5, r0, lsr #4
10004174:	203d2020 	eorscs	r2, sp, r0, lsr #32
10004178:	30257830 	eorcc	r7, r5, r0, lsr r8
1000417c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10004180:	0000000a 	andeq	r0, r0, sl
10004184:	20365220 	eorscs	r5, r6, r0, lsr #4
10004188:	203d2020 	eorscs	r2, sp, r0, lsr #32
1000418c:	30257830 	eorcc	r7, r5, r0, lsr r8
10004190:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10004194:	0000000a 	andeq	r0, r0, sl
10004198:	20375220 	eorscs	r5, r7, r0, lsr #4
1000419c:	203d2020 	eorscs	r2, sp, r0, lsr #32
100041a0:	30257830 	eorcc	r7, r5, r0, lsr r8
100041a4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100041a8:	0000000a 	andeq	r0, r0, sl
100041ac:	20385220 	eorscs	r5, r8, r0, lsr #4
100041b0:	203d2020 	eorscs	r2, sp, r0, lsr #32
100041b4:	30257830 	eorcc	r7, r5, r0, lsr r8
100041b8:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100041bc:	0000000a 	andeq	r0, r0, sl
100041c0:	20395220 	eorscs	r5, r9, r0, lsr #4
100041c4:	203d2020 	eorscs	r2, sp, r0, lsr #32
100041c8:	30257830 	eorcc	r7, r5, r0, lsr r8
100041cc:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100041d0:	0000000a 	andeq	r0, r0, sl
100041d4:	30315220 	eorscc	r5, r1, r0, lsr #4
100041d8:	203d2020 	eorscs	r2, sp, r0, lsr #32
100041dc:	30257830 	eorcc	r7, r5, r0, lsr r8
100041e0:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100041e4:	0000000a 	andeq	r0, r0, sl
100041e8:	31315220 	teqcc	r1, r0, lsr #4
100041ec:	203d2020 	eorscs	r2, sp, r0, lsr #32
100041f0:	30257830 	eorcc	r7, r5, r0, lsr r8
100041f4:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
100041f8:	0000000a 	andeq	r0, r0, sl
100041fc:	32315220 	eorscc	r5, r1, #32, 4
10004200:	203d2020 	eorscs	r2, sp, r0, lsr #32
10004204:	30257830 	eorcc	r7, r5, r0, lsr r8
10004208:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
1000420c:	0000000a 	andeq	r0, r0, sl
10004210:	20524c20 	subscs	r4, r2, r0, lsr #24
10004214:	203d2020 	eorscs	r2, sp, r0, lsr #32
10004218:	30257830 	eorcc	r7, r5, r0, lsr r8
1000421c:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10004220:	0000000a 	andeq	r0, r0, sl
10004224:	20435020 	subcs	r5, r3, r0, lsr #32
10004228:	203d2020 	eorscs	r2, sp, r0, lsr #32
1000422c:	30257830 	eorcc	r7, r5, r0, lsr r8
10004230:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10004234:	0000000a 	andeq	r0, r0, sl
10004238:	52535020 	subspl	r5, r3, #32
1000423c:	203d2020 	eorscs	r2, sp, r0, lsr #32
10004240:	30257830 	eorcc	r7, r5, r0, lsr r8
10004244:	0d205838 	stceq	8, cr5, [r0, #-224]!	; 0xffffff20
10004248:	0000000a 	andeq	r0, r0, sl
1000424c:	61745320 	cmnvs	r4, r0, lsr #6
10004250:	43206b63 			; <UNDEFINED> instruction: 0x43206b63
10004254:	3a6c6c61 	bcc	11b1f3e0 <__copy_table_end__+0x1b1ae68>
10004258:	00000020 	andeq	r0, r0, r0, lsr #32
1000425c:	00000d20 	andeq	r0, r0, r0, lsr #26
10004260:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10004264:	78452030 	stmdavc	r5, {r4, r5, sp}^
10004268:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
1000426c:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10004270:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10004274:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10004278:	3a657461 	bcc	11961404 <__copy_table_end__+0x195ce8c>
1000427c:	00000000 	andeq	r0, r0, r0
10004280:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10004284:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10004288:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
1000428c:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10004290:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
10004294:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10004298:	00000d2e 	andeq	r0, r0, lr, lsr #26
1000429c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
100042a0:	746f4e20 	strbtvc	r4, [pc], #-3616	; 100042a8 <pow10.0+0x2a0>
100042a4:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
100042a8:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
100042ac:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
100042b0:	5d657461 	cfstrdpl	mvd7, [r5, #-388]!	; 0xfffffe7c
100042b4:	00000d2e 	andeq	r0, r0, lr, lsr #26
100042b8:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
100042bc:	74532032 	ldrbvc	r2, [r3], #-50	; 0xffffffce
100042c0:	206b6361 	rsbcs	r6, fp, r1, ror #6
100042c4:	6e696f50 	mcrvs	15, 3, r6, cr9, cr0, {2}
100042c8:	65532074 	ldrbvs	r2, [r3, #-116]	; 0xffffff8c
100042cc:	7463656c 	strbtvc	r6, [r3], #-1388	; 0xfffffa94
100042d0:	3a2e2e2e 	bcc	10b8fb90 <__copy_table_end__+0xb8b618>
100042d4:	00000000 	andeq	r0, r0, r0
100042d8:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
100042dc:	50535020 	subspl	r5, r3, r0, lsr #32
100042e0:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
100042e4:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
100042e8:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
100042ec:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
100042f0:	00000d2e 	andeq	r0, r0, lr, lsr #26
100042f4:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
100042f8:	50534d20 	subspl	r4, r3, r0, lsr #26
100042fc:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10004300:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10004304:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10004308:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
1000430c:	00000d2e 	andeq	r0, r0, lr, lsr #26
10004310:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
10004314:	72502033 	subsvc	r2, r0, #51	; 0x33
10004318:	4d20636f 	stcmi	3, cr6, [r0, #-444]!	; 0xfffffe44
1000431c:	2065646f 	rsbcs	r6, r5, pc, ror #8
10004320:	6f666542 	svcvs	0x00666542
10004324:	49206572 	stmdbmi	r0!, {r1, r4, r5, r6, r8, sl, sp, lr}
10004328:	3a2e5152 	bcc	10b98878 <__copy_table_end__+0xb94300>
1000432c:	00000000 	andeq	r0, r0, r0
10004330:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10004334:	72685420 	rsbvc	r5, r8, #32, 8	; 0x20000000
10004338:	20646165 	rsbcs	r6, r4, r5, ror #2
1000433c:	65646f4d 	strbvs	r6, [r4, #-3917]!	; 0xfffff0b3
10004340:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10004344:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10004348:	00000d2e 	andeq	r0, r0, lr, lsr #26
1000434c:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10004350:	6f725020 	svcvs	0x00725020
10004354:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
10004358:	646f4d20 	strbtvs	r4, [pc], #-3360	; 10004360 <pow10.0+0x358>
1000435c:	2e2e2e65 	cdpcs	14, 2, cr2, cr14, cr5, {3}
10004360:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10004364:	00000d2e 	andeq	r0, r0, lr, lsr #26
10004368:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
1000436c:	74532034 	ldrbvc	r2, [r3], #-52	; 0xffffffcc
10004370:	206b6361 	rsbcs	r6, fp, r1, ror #6
10004374:	6d617246 	sfmvs	f7, 2, [r1, #-280]!	; 0xfffffee8
10004378:	79542065 	ldmdbvc	r4, {r0, r2, r5, r6, sp}^
1000437c:	2e2e6570 	mcrcs	5, 1, r6, cr14, cr0, {3}
10004380:	3a2e2e2e 	bcc	10b8fc40 <__copy_table_end__+0xb8b6c8>
10004384:	00000000 	andeq	r0, r0, r0
10004388:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
1000438c:	61745320 	cmnvs	r4, r0, lsr #6
10004390:	7261646e 	rsbvc	r6, r1, #1845493760	; 0x6e000000
10004394:	72462064 	subvc	r2, r6, #100	; 0x64
10004398:	2e656d61 	cdpcs	13, 6, cr6, cr5, cr1, {3}
1000439c:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
100043a0:	00000d2e 	andeq	r0, r0, lr, lsr #26
100043a4:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
100043a8:	74784520 	ldrbtvc	r4, [r8], #-1312	; 0xfffffae0
100043ac:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
100043b0:	72462064 	subvc	r2, r6, #100	; 0x64
100043b4:	2e656d61 	cdpcs	13, 6, cr6, cr5, cr1, {3}
100043b8:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
100043bc:	00000d2e 	andeq	r0, r0, lr, lsr #26
100043c0:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
100043c4:	65442035 	strbvs	r2, [r4, #-53]	; 0xffffffcb
100043c8:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
100043cc:	61432074 	hvcvs	12804	; 0x3204
100043d0:	52206c6c 	eorpl	r6, r0, #108, 24	; 0x6c00
100043d4:	2e656c75 	mcrcs	12, 3, r6, cr5, cr5, {3}
100043d8:	3a2e2e2e 	bcc	10b8fc98 <__copy_table_end__+0xb8b720>
100043dc:	00000000 	andeq	r0, r0, r0
100043e0:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
100043e4:	66654420 	strbtvs	r4, [r5], -r0, lsr #8
100043e8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
100043ec:	6c755220 	lfmvs	f5, 2, [r5], #-128	; 0xffffff80
100043f0:	2e2e2e65 	cdpcs	14, 2, cr2, cr14, cr5, {3}
100043f4:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
100043f8:	00000d2e 	andeq	r0, r0, lr, lsr #26
100043fc:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10004400:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10004408 <pow10.0+0x400>
10004404:	66654420 	strbtvs	r4, [r5], -r0, lsr #8
10004408:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
1000440c:	6c755220 	lfmvs	f5, 2, [r5], #-128	; 0xffffff80
10004410:	5d2e2e65 	stcpl	14, cr2, [lr, #-404]!	; 0xfffffe6c
10004414:	00000d2e 	andeq	r0, r0, lr, lsr #26
10004418:	74694220 	strbtvc	r4, [r9], #-544	; 0xfffffde0
1000441c:	65532036 	ldrbvs	r2, [r3, #-54]	; 0xffffffca
10004420:	69727563 	ldmdbvs	r2!, {r0, r1, r5, r6, r8, sl, ip, sp, lr}^
10004424:	53207974 			; <UNDEFINED> instruction: 0x53207974
10004428:	6b636174 	blvs	118dca00 <__copy_table_end__+0x18d8488>
1000442c:	2e2e2e2e 	cdpcs	14, 2, cr2, cr14, cr14, {1}
10004430:	3a2e2e2e 	bcc	10b8fcf0 <__copy_table_end__+0xb8b778>
10004434:	00000000 	andeq	r0, r0, r0
10004438:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
1000443c:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10004440:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10004444:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10004448:	2e6b6361 	cdpcs	3, 6, cr6, cr11, cr1, {3}
1000444c:	5d2e2e2e 	stcpl	14, cr2, [lr, #-184]!	; 0xffffff48
10004450:	00000d2e 	andeq	r0, r0, lr, lsr #26
10004454:	6573555b 	ldrbvs	r5, [r3, #-1371]!	; 0xfffffaa5
10004458:	746f4e20 	strbtvc	r4, [pc], #-3616	; 10004460 <pow10.0+0x458>
1000445c:	63655320 	cmnvs	r5, #32, 6	; 0x80000000
10004460:	74697275 	strbtvc	r7, [r9], #-629	; 0xfffffd8b
10004464:	74532079 	ldrbvc	r2, [r3], #-121	; 0xffffff87
10004468:	5d6b6361 	stclpl	3, cr6, [fp, #-388]!	; 0xfffffe7c
1000446c:	00000d2e 	andeq	r0, r0, lr, lsr #26
10004470:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
10004474:	2578303a 	ldrbcs	r3, [r8, #-58]!	; 0xffffffc6
10004478:	2d583230 	lfmcs	f3, 2, [r8, #-192]	; 0xffffff40
1000447c:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
10004480:	78303a65 	ldmdavc	r0!, {r0, r2, r5, r6, r9, fp, ip, sp}
10004484:	58383025 	ldmdapl	r8!, {r0, r2, r5, ip, sp}
10004488:	00000a0d 	andeq	r0, r0, sp, lsl #20

1000448c <_global_impure_ptr>:
1000448c:	38000010 	stmdacc	r0, {r4}

10004490 <__EH_FRAME_BEGIN__>:
10004490:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.extab:

10004494 <__exidx_start-0x18>:
10004494:	8101b108 	tsthi	r1, r8, lsl #2
10004498:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
1000449c:	00000000 	andeq	r0, r0, r0
100044a0:	8101b108 	tsthi	r1, r8, lsl #2
100044a4:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
100044a8:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx:

100044ac <__exidx_end-0xc0>:
100044ac:	7fffdb00 	svcvc	0x00ffdb00
100044b0:	80b0b0b0 	ldrhthi	fp, [r0], r0
100044b4:	7fffdb68 	svcvc	0x00ffdb68
100044b8:	00000001 	andeq	r0, r0, r1
100044bc:	7fffea30 	svcvc	0x00ffea30
100044c0:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
100044c4:	7fffeac4 	svcvc	0x00ffeac4
100044c8:	80a8b0b0 	strhthi	fp, [r8], r0
100044cc:	7fffeb14 	svcvc	0x00ffeb14
100044d0:	00000001 	andeq	r0, r0, r1
100044d4:	7fffeb20 	svcvc	0x00ffeb20
100044d8:	80aab0b0 	strhthi	fp, [sl], r0
100044dc:	7fffeb58 	svcvc	0x00ffeb58
100044e0:	80b273ae 	adcshi	r7, r2, lr, lsr #7
100044e4:	7fffec2c 	svcvc	0x00ffec2c
100044e8:	00000001 	andeq	r0, r0, r1
100044ec:	7fffec28 	svcvc	0x00ffec28
100044f0:	80383fab 	eorshi	r3, r8, fp, lsr #31
100044f4:	7fffec88 	svcvc	0x00ffec88
100044f8:	00000001 	andeq	r0, r0, r1
100044fc:	7fffec94 	svcvc	0x00ffec94
10004500:	80aab0b0 	strhthi	fp, [sl], r0
10004504:	7fffecd0 	svcvc	0x00ffecd0
10004508:	00000001 	andeq	r0, r0, r1
1000450c:	7fffed84 	svcvc	0x00ffed84
10004510:	80b20eab 	adcshi	r0, r2, fp, lsr #29
10004514:	7fffedf8 	svcvc	0x00ffedf8
10004518:	8008afb0 			; <UNDEFINED> instruction: 0x8008afb0
1000451c:	7ffff0b8 	svcvc	0x00fff0b8
10004520:	00000001 	andeq	r0, r0, r1
10004524:	7ffff0bc 	svcvc	0x00fff0bc
10004528:	80023fad 	andhi	r3, r2, sp, lsr #31
1000452c:	7ffff368 	svcvc	0x00fff368
10004530:	00000001 	andeq	r0, r0, r1
10004534:	7ffff548 	svcvc	0x00fff548
10004538:	8003a8b0 			; <UNDEFINED> instruction: 0x8003a8b0
1000453c:	7ffff558 	svcvc	0x00fff558
10004540:	00000001 	andeq	r0, r0, r1
10004544:	7ffff554 	svcvc	0x00fff554
10004548:	8004adb0 			; <UNDEFINED> instruction: 0x8004adb0
1000454c:	7ffff818 	svcvc	0x00fff818
10004550:	80048400 	andhi	r8, r4, r0, lsl #8
10004554:	7ffff840 	svcvc	0x00fff840
10004558:	7fffff3c 	svcvc	0x00ffff3c
1000455c:	7ffff844 	svcvc	0x00fff844
10004560:	7fffff40 	svcvc	0x00ffff40
10004564:	7ffff850 	svcvc	0x00fff850
10004568:	00000001 	andeq	r0, r0, r1

Disassembly of section .copy.table:

1000456c <__copy_table_start__>:
1000456c:	10004578 	andne	r4, r0, r8, ror r5
10004570:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
10004574:	00000112 	andeq	r0, r0, r2, lsl r1

Disassembly of section .data:

38000000 <SystemCoreClock>:
38000000:	017d7840 	cmneq	sp, r0, asr #16

38000004 <fd_msp_stack_parser>:
static volatile stack_parser_t fd_msp_stack_parser = fault_dump_callstack;
38000004:	10001b8d 	andne	r1, r0, sp, lsl #23

38000008 <fd_psp_stack_parser>:
static volatile stack_parser_t fd_psp_stack_parser = fault_dump_callstack;
38000008:	10001b8d 	andne	r1, r0, sp, lsl #23

3800000c <_impure_ptr>:
3800000c:	38000010 	stmdacc	r0, {r4}

38000010 <impure_data>:
38000010:	00000000 	andeq	r0, r0, r0
38000014:	380002fc 	stmdacc	r0, {r2, r3, r4, r5, r6, r7, r9}
38000018:	38000364 	stmdacc	r0, {r2, r5, r6, r8, r9}
3800001c:	380003cc 	stmdacc	r0, {r2, r3, r6, r7, r8, r9}
	...
380000b8:	00000001 	andeq	r0, r0, r1
380000bc:	00000000 	andeq	r0, r0, r0
380000c0:	abcd330e 	blge	3734cd00 <__copy_table_end__+0x27348788>
380000c4:	e66d1234 			; <UNDEFINED> instruction: 0xe66d1234
380000c8:	0005deec 	andeq	sp, r5, ip, ror #29
380000cc:	0000000b 	andeq	r0, r0, fp
	...

38000438 <__atexit_recursive_mutex>:
38000438:	380005ac 	stmdacc	r0, {r2, r3, r5, r7, r8, sl}

3800043c <__init_array_start>:
3800043c:	10002115 	andne	r2, r0, r5, lsl r1

38000440 <__frame_dummy_init_array_entry>:
38000440:	100007e5 	andne	r0, r0, r5, ror #15

38000444 <__do_global_dtors_aux_fini_array_entry>:
38000444:	100007c1 	andne	r0, r0, r1, asr #15

Disassembly of section .bss:

38000448 <__bss_start__>:
38000448:	00000000 	andeq	r0, r0, r0

3800044c <object.0>:
	...

38000464 <buffer.0>:
	...

38000564 <fd_main_stack_base>:
volatile unsigned int fd_main_stack_base = 0;
38000564:	00000000 	andeq	r0, r0, r0

38000568 <fd_main_stack_full>:
volatile unsigned int fd_main_stack_full = 0;
38000568:	00000000 	andeq	r0, r0, r0

3800056c <frame.1>:
	...

380005ac <__lock___atexit_recursive_mutex>:
380005ac:	00000000 	andeq	r0, r0, r0

380005b0 <errno>:
380005b0:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

380005b4 <__end__-0x4>:
380005b4:	00000000 	andeq	r0, r0, r0

380005b8 <__end__>:
	...

Disassembly of section .stack:

380ff000 <__StackLimit>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
void Default_Handler(void) {
   0:	00003541 	andeq	r3, r0, r1, asr #10
    printf("%s\n", __func__);
   4:	61656100 	cmnvs	r5, r0, lsl #2
}
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002b 	andeq	r0, r0, fp, lsr #32
    if (parser != NULL) {
        fd_psp_stack_parser = parser;
        result = FD_EOK;
    }
    return result;
}
  10:	4d2d3805 	stcmi	8, cr3, [sp, #-20]!	; 0xffffffec
size_t uart_recv(uint8_t* buffer, size_t size) {
    uint8_t ch = 0;
    size_t it = 0;
    while (1) {
        ch = getchar();
        if(ch == '\n' || it >= size) {
  14:	49414d2e 	stmdbmi	r1, {r1, r2, r3, r5, r8, sl, fp, lr}^
  18:	1106004e 	tstne	r6, lr, asr #32
        }
        buffer[it] = ch;
        it = it + 1;
    }
    return (it + 1);
}
  1c:	03094d07 	movweq	r4, #40199	; 0x9d07
  va_start(va, format);
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
  va_end(va);
  return ret;
}
  20:	0412080a 	ldreq	r0, [r2], #-2058	; 0xfffff7f6
  24:	01150114 	tsteq	r5, r4, lsl r1
  28:	01180317 	tsteq	r8, r7, lsl r3
  2c:	011b011a 	tsteq	fp, sl, lsl r1
  30:	0122011c 			; <UNDEFINED> instruction: 0x0122011c
  34:	Address 0x00000034 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
void Default_Handler(void) {
   0:	3a434347 	bcc	10d0d24 <__RAM_SIZE+0xfd0d24>
    printf("%s\n", __func__);
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
}
   8:	72412055 	subvc	r2, r1, #85	; 0x55
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
        if(ch == '\n' || it >= size) {
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
}
  1c:	6e696168 	powvsez	f6, f1, #0.0
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
void Default_Handler(void) {
       0:	00000589 	andeq	r0, r0, r9, lsl #11
    printf("%s\n", __func__);
       4:	00000002 	andeq	r0, r0, r2
}
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	000000cf 	andeq	r0, r0, pc, asr #1
      10:	00006f0c 	andeq	r6, r0, ip, lsl #30
        if(ch == '\n' || it >= size) {
      14:	00002000 	andeq	r2, r0, r0
      18:	00001800 	andeq	r1, r0, r0, lsl #16
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
      30:	9d080102 	stflss	f0, [r8, #-8]
      34:	02000000 	andeq	r0, r0, #0
      38:	02160502 	andseq	r0, r6, #8388608	; 0x800000
      3c:	02020000 	andeq	r0, r2, #0
      40:	0000bc07 	andeq	fp, r0, r7, lsl #24
      44:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      48:	000001da 	ldrdeq	r0, [r0], -sl
      4c:	b7070402 	strlt	r0, [r7, -r2, lsl #8]
      50:	02000001 	andeq	r0, r0, #1
      54:	01d50508 	bicseq	r0, r5, r8, lsl #10
      58:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      5c:	0001b207 	andeq	fp, r1, r7, lsl #4
      60:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
      64:	00746e69 	rsbseq	r6, r4, r9, ror #28
      68:	bc070402 	cfstrslt	mvf0, [r7], {2}
      6c:	02000001 	andeq	r0, r0, #1
      70:	01c90408 	biceq	r0, r9, r8, lsl #8
      74:	01020000 	mrseq	r0, (UNDEF: 2)
      78:	0000a608 	andeq	sl, r0, r8, lsl #12
      7c:	00760400 	rsbseq	r0, r6, r0, lsl #8
      80:	01050000 	mrseq	r0, (UNDEF: 5)
      84:	000001a7 	andeq	r0, r0, r7, lsr #3
      88:	01054001 	tsteq	r5, r1
      8c:	00000061 	andeq	r0, r0, r1, rrx
      90:	100008fc 	strdne	r0, [r0], -ip
      94:	10000928 	andne	r0, r0, r8, lsr #18
      98:	00000000 	andeq	r0, r0, r0
      9c:	00010101 	andeq	r0, r1, r1, lsl #2
      a0:	001a0600 	andseq	r0, sl, r0, lsl #12
      a4:	41010000 	mrsmi	r0, (UNDEF: 1)
      a8:	00006109 	andeq	r6, r0, r9, lsl #2
      ac:	00002600 	andeq	r2, r0, r0, lsl #12
      b0:	00002000 	andeq	r2, r0, r0
      b4:	09020700 	stmdbeq	r2, {r8, r9, sl}
      b8:	05101000 	ldreq	r1, [r0, #-0]
      bc:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
      c0:	1e100009 	cdpne	0, 1, cr0, cr0, cr9, {0}
      c4:	d5000005 	strle	r0, [r0, #-5]
      c8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
      cc:	03055001 	movweq	r5, #20481	; 0x5001
      d0:	10003fa0 	andne	r3, r0, r0, lsr #31
      d4:	090c0700 	stmdbeq	ip, {r8, r9, sl}
      d8:	052b1000 	streq	r1, [fp, #-0]!
      dc:	10070000 	andne	r0, r7, r0
      e0:	01100009 	tsteq	r0, r9
      e4:	0a000001 	beq	f0 <__STACKSEAL_SIZE+0xf0>
      e8:	1000091c 	andne	r0, r0, ip, lsl r9
      ec:	00000539 	andeq	r0, r0, r9, lsr r5
      f0:	05500109 	ldrbeq	r0, [r0, #-265]	; 0xfffffef7
      f4:	003fa803 	eorseq	sl, pc, r3, lsl #16
      f8:	51010910 	tstpl	r1, r0, lsl r9
      fc:	007f7402 	rsbseq	r7, pc, r2, lsl #8
     100:	67010b00 	strvs	r0, [r1, -r0, lsl #22]
     104:	01000002 	tsteq	r0, r2
     108:	e401063b 	str	r0, [r1], #-1595	; 0xfffff9c5
     10c:	fc100008 	ldc2	0, cr0, [r0], {8}
     110:	50100008 	andspl	r0, r0, r8
     114:	01000000 	mrseq	r0, (UNDEF: 0)
     118:	00000156 	andeq	r0, r0, r6, asr r1
     11c:	0000660c 	andeq	r6, r0, ip, lsl #12
     120:	00016600 	andeq	r6, r1, r0, lsl #12
     124:	03050100 	movweq	r0, #20736	; 0x5100
     128:	10003fbc 			; <UNDEFINED> instruction: 0x10003fbc
     12c:	0008ee08 	andeq	lr, r8, r8, lsl #28
     130:	00053910 	andeq	r3, r5, r0, lsl r9
     134:	00014c00 	andeq	r4, r1, r0, lsl #24
     138:	50010900 	andpl	r0, r1, r0, lsl #18
     13c:	3f900305 	svccc	0x00900305
     140:	01091000 	mrseq	r1, (UNDEF: 9)
     144:	bc030551 	cfstr32lt	mvfx0, [r3], {81}	; 0x51
     148:	0010003f 	andseq	r0, r0, pc, lsr r0
     14c:	0008f207 	andeq	pc, r8, r7, lsl #4
     150:	00016b10 	andeq	r6, r1, r0, lsl fp
     154:	7d0d0000 	stcvc	0, cr0, [sp, #-0]
     158:	66000000 	strvs	r0, [r0], -r0
     15c:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     160:	00000068 	andeq	r0, r0, r8, rrx
     164:	56040005 	strpl	r0, [r4], -r5
     168:	0b000001 	bleq	174 <__STACKSEAL_SIZE+0x174>
     16c:	0001ac01 	andeq	sl, r1, r1, lsl #24
     170:	06360100 	ldrteq	r0, [r6], -r0, lsl #2
     174:	0008cc01 	andeq	ip, r8, r1, lsl #24
     178:	0008e410 	andeq	lr, r8, r0, lsl r4
     17c:	00007010 	andeq	r7, r0, r0, lsl r0
     180:	01c00100 	biceq	r0, r0, r0, lsl #2
     184:	660c0000 	strvs	r0, [ip], -r0
     188:	66000000 	strvs	r0, [r0], -r0
     18c:	01000001 	tsteq	r0, r1
     190:	3fc40305 	svccc	0x00c40305
     194:	d6081000 	strle	r1, [r8], -r0
     198:	39100008 	ldmdbcc	r0, {r3}
     19c:	b6000005 	strlt	r0, [r0], -r5
     1a0:	09000001 	stmdbeq	r0, {r0}
     1a4:	03055001 	movweq	r5, #20481	; 0x5001
     1a8:	10003f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>
     1ac:	05510109 	ldrbeq	r0, [r1, #-265]	; 0xfffffef7
     1b0:	003fc403 	eorseq	ip, pc, r3, lsl #8
     1b4:	da070010 	ble	1c01fc <__RAM_SIZE+0xc01fc>
     1b8:	c0100008 	andsgt	r0, r0, r8
     1bc:	00000001 	andeq	r0, r0, r1
     1c0:	024c010b 	subeq	r0, ip, #-1073741822	; 0xc0000002
     1c4:	31010000 	mrscc	r0, (UNDEF: 1)
     1c8:	08b40106 	ldmeq	r4!, {r1, r2, r8}
     1cc:	08cc1000 	stmiaeq	ip, {ip}^
     1d0:	00901000 	addseq	r1, r0, r0
     1d4:	15010000 	strne	r0, [r1, #-0]
     1d8:	0c000002 	stceq	0, cr0, [r0], {2}
     1dc:	00000066 	andeq	r0, r0, r6, rrx
     1e0:	00000166 	andeq	r0, r0, r6, ror #2
     1e4:	cc030501 	cfstr32gt	mvfx0, [r3], {1}
     1e8:	0810003f 	ldmdaeq	r0, {r0, r1, r2, r3, r4, r5}
     1ec:	100008be 			; <UNDEFINED> instruction: 0x100008be
     1f0:	00000539 	andeq	r0, r0, r9, lsr r5
     1f4:	0000020b 	andeq	r0, r0, fp, lsl #4
     1f8:	05500109 	ldrbeq	r0, [r0, #-265]	; 0xfffffef7
     1fc:	003f9003 	eorseq	r9, pc, r3
     200:	51010910 	tstpl	r1, r0, lsl r9
     204:	3fcc0305 	svccc	0x00cc0305
     208:	07001000 	streq	r1, [r0, -r0]
     20c:	100008c2 	andne	r0, r0, r2, asr #17
     210:	00000215 	andeq	r0, r0, r5, lsl r2
     214:	46010b00 	strmi	r0, [r1], -r0, lsl #22
     218:	01000002 	tsteq	r0, r2
     21c:	9c01062c 	stcls	6, cr0, [r1], {44}	; 0x2c
     220:	b4100008 	ldrlt	r0, [r0], #-8
     224:	b0100008 	andslt	r0, r0, r8
     228:	01000000 	mrseq	r0, (UNDEF: 0)
     22c:	0000026a 	andeq	r0, r0, sl, ror #4
     230:	0000660c 	andeq	r6, r0, ip, lsl #12
     234:	00016600 	andeq	r6, r1, r0, lsl #12
     238:	03050100 	movweq	r0, #20736	; 0x5100
     23c:	10003fd4 	ldrdne	r3, [r0], -r4
     240:	0008a608 	andeq	sl, r8, r8, lsl #12
     244:	00053910 	andeq	r3, r5, r0, lsl r9
     248:	00026000 	andeq	r6, r2, r0
     24c:	50010900 	andpl	r0, r1, r0, lsl #18
     250:	3f900305 	svccc	0x00900305
     254:	01091000 	mrseq	r1, (UNDEF: 9)
     258:	d4030551 	strle	r0, [r3], #-1361	; 0xfffffaaf
     25c:	0010003f 	andseq	r0, r0, pc, lsr r0
     260:	0008aa07 	andeq	sl, r8, r7, lsl #20
     264:	00026a10 	andeq	r6, r2, r0, lsl sl
     268:	010b0000 	mrseq	r0, (UNDEF: 11)
     26c:	00000240 	andeq	r0, r0, r0, asr #4
     270:	01062701 	tsteq	r6, r1, lsl #14
     274:	10000884 	andne	r0, r0, r4, lsl #17
     278:	1000089c 	mulne	r0, ip, r8
     27c:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     280:	0002bf01 	andeq	fp, r2, r1, lsl #30
     284:	00660c00 	rsbeq	r0, r6, r0, lsl #24
     288:	01660000 	cmneq	r6, r0
     28c:	05010000 	streq	r0, [r1, #-0]
     290:	003fdc03 	eorseq	sp, pc, r3, lsl #24
     294:	088e0810 	stmeq	lr, {r4, fp}
     298:	05391000 	ldreq	r1, [r9, #-0]!
     29c:	02b50000 	adcseq	r0, r5, #0
     2a0:	01090000 	mrseq	r0, (UNDEF: 9)
     2a4:	90030550 	andls	r0, r3, r0, asr r5
     2a8:	0910003f 	ldmdbeq	r0, {r0, r1, r2, r3, r4, r5}
     2ac:	03055101 	movweq	r5, #20737	; 0x5101
     2b0:	10003fdc 	ldrdne	r3, [r0], -ip
     2b4:	08920700 	ldmeq	r2, {r8, r9, sl}
     2b8:	02bf1000 	adcseq	r1, pc, #0
     2bc:	0b000000 	bleq	2c4 <__STACKSEAL_SIZE+0x2c4>
     2c0:	00023a01 	andeq	r3, r2, r1, lsl #20
     2c4:	06200100 	strteq	r0, [r0], -r0, lsl #2
     2c8:	00086801 	andeq	r6, r8, r1, lsl #16
     2cc:	00088410 	andeq	r8, r8, r0, lsl r4
     2d0:	0000f010 	andeq	pc, r0, r0, lsl r0	; <UNPREDICTABLE>
     2d4:	03280100 			; <UNDEFINED> instruction: 0x03280100
     2d8:	660c0000 	strvs	r0, [ip], -r0
     2dc:	66000000 	strvs	r0, [r0], -r0
     2e0:	01000001 	tsteq	r0, r1
     2e4:	3fe40305 	svccc	0x00e40305
     2e8:	010f1000 	mrseq	r1, CPSR
     2ec:	000001f3 	strdeq	r0, [r0], -r3
     2f0:	01112301 	tsteq	r1, r1, lsl #6
     2f4:	08720801 	ldmdaeq	r2!, {r0, fp}^
     2f8:	05391000 	ldreq	r1, [r9, #-0]!
     2fc:	03150000 	tsteq	r5, #0
     300:	01090000 	mrseq	r0, (UNDEF: 9)
     304:	90030550 	andls	r0, r3, r0, asr r5
     308:	0910003f 	ldmdbeq	r0, {r0, r1, r2, r3, r4, r5}
     30c:	03055101 	movweq	r5, #20737	; 0x5101
     310:	10003fe4 	andne	r3, r0, r4, ror #31
     314:	08760700 	ldmdaeq	r6!, {r8, r9, sl}^
     318:	03281000 			; <UNDEFINED> instruction: 0x03281000
     31c:	7a070000 	bvc	1c0324 <__RAM_SIZE+0xc0324>
     320:	47100008 	ldrmi	r0, [r0, -r8]
     324:	00000005 	andeq	r0, r0, r5
     328:	0258010b 	subseq	r0, r8, #-1073741822	; 0xc0000002
     32c:	10010000 	andne	r0, r1, r0
     330:	08000106 	stmdaeq	r0, {r1, r2, r8}
     334:	08681000 	stmdaeq	r8!, {ip}^
     338:	01101000 	tsteq	r0, r0
     33c:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
     340:	10000004 	andne	r0, r0, r4
     344:	0000044a 	andeq	r0, r0, sl, asr #8
     348:	58121101 	ldmdapl	r2, {r0, r8, ip}
     34c:	03000004 	movweq	r0, #4
     350:	067df091 			; <UNDEFINED> instruction: 0x067df091
     354:	00000234 	andeq	r0, r0, r4, lsr r2
     358:	68121201 	ldmdavs	r2, {r0, r9, ip}
     35c:	4f000000 	svcmi	0x00000000
     360:	49000001 	stmdbmi	r0, {r0}
     364:	06000001 	streq	r0, [r0], -r1
     368:	00000014 	andeq	r0, r0, r4, lsl r0
     36c:	68121301 	ldmdavs	r2, {r0, r8, r9, ip}
     370:	7c000000 	stcvc	0, cr0, [r0], {-0}
     374:	78000001 	stmdavc	r0, {r0}
     378:	06000001 	streq	r0, [r0], -r1
     37c:	0000001a 	andeq	r0, r0, sl, lsl r0
     380:	61091401 	tstvs	r9, r1, lsl #8
     384:	a2000000 	andge	r0, r0, #0
     388:	9a000001 	bls	394 <__STACKSEAL_SIZE+0x394>
     38c:	11000001 	tstne	r0, r1
     390:	00000000 	andeq	r0, r0, r0
     394:	000003be 			; <UNDEFINED> instruction: 0x000003be
     398:	01006912 	tsteq	r0, r2, lsl r9
     39c:	00611219 	rsbeq	r1, r1, r9, lsl r2
     3a0:	01da0000 	bicseq	r0, sl, r0
     3a4:	01d60000 	bicseq	r0, r6, r0
     3a8:	480a0000 	stmdami	sl, {}	; <UNPREDICTABLE>
     3ac:	39100008 	ldmdbcc	r0, {r3}
     3b0:	09000005 	stmdbeq	r0, {r0, r2}
     3b4:	03055001 	movweq	r5, #20481	; 0x5001
     3b8:	10003f84 	andne	r3, r0, r4, lsl #31
     3bc:	10080000 	andne	r0, r8, r0
     3c0:	55100008 	ldrpl	r0, [r0, #-8]
     3c4:	de000005 	cdple	0, 0, cr0, cr0, cr5, {0}
     3c8:	09000003 	stmdbeq	r0, {r0, r1}
     3cc:	7d025001 	stcvc	0, cr5, [r2, #-4]
     3d0:	51010900 	tstpl	r1, r0, lsl #18
     3d4:	01093001 	tsteq	r9, r1
     3d8:	000a0352 	andeq	r0, sl, r2, asr r3
     3dc:	14070001 	strne	r0, [r7], #-1
     3e0:	62100008 	andsvs	r0, r0, #8
     3e4:	07000005 	streq	r0, [r0, -r5]
     3e8:	1000081a 	andne	r0, r0, sl, lsl r8
     3ec:	00000570 	andeq	r0, r0, r0, ror r5
     3f0:	00082608 	andeq	r2, r8, r8, lsl #12
     3f4:	00057e10 	andeq	r7, r5, r0, lsl lr
     3f8:	00041000 	andeq	r1, r4, r0
     3fc:	50010900 	andpl	r0, r1, r0, lsl #18
     400:	09007d02 	stmdbeq	r0, {r1, r8, sl, fp, ip, sp, lr}
     404:	08025101 	stmdaeq	r2, {r0, r8, ip, lr}
     408:	52010940 	andpl	r0, r1, #64, 18	; 0x100000
     40c:	00007402 	andeq	r7, r0, r2, lsl #8
     410:	00083008 	andeq	r3, r8, r8
     414:	00053910 	andeq	r3, r5, r0, lsl r9
     418:	00042700 	andeq	r2, r4, r0, lsl #14
     41c:	50010900 	andpl	r0, r1, r0, lsl #18
     420:	3f740305 	svccc	0x00740305
     424:	08001000 	stmdaeq	r0, {ip}
     428:	1000083c 	andne	r0, r0, ip, lsr r8
     42c:	00000539 	andeq	r0, r0, r9, lsr r5
     430:	00000444 	andeq	r0, r0, r4, asr #8
     434:	05500109 	ldrbeq	r0, [r0, #-265]	; 0xfffffef7
     438:	003f5803 	eorseq	r5, pc, r3, lsl #16
     43c:	51010910 	tstpl	r1, r0, lsl r9
     440:	00007502 	andeq	r7, r0, r2, lsl #10
     444:	0008540a 	andeq	r5, r8, sl, lsl #8
     448:	00051e10 	andeq	r1, r5, r0, lsl lr
     44c:	50010900 	andpl	r0, r1, r0, lsl #18
     450:	3f8c0305 	svccc	0x008c0305
     454:	00001000 	andeq	r1, r0, r0
     458:	0000680d 	andeq	r6, r0, sp, lsl #16
     45c:	00046800 	andeq	r6, r4, r0, lsl #16
     460:	00680e00 	rsbeq	r0, r8, r0, lsl #28
     464:	003f0000 	eorseq	r0, pc, r0
     468:	01e3010b 	mvneq	r0, fp, lsl #2
     46c:	0c010000 	stceq	0, cr0, [r1], {-0}
     470:	00000106 	andeq	r0, r0, r6, lsl #2
     474:	00000000 	andeq	r0, r0, r0
     478:	01f90000 	mvnseq	r0, r0
     47c:	a7010000 	strge	r0, [r1, -r0]
     480:	0c000004 	stceq	0, cr0, [r0], {4}
     484:	00000066 	andeq	r0, r0, r6, rrx
     488:	000004b7 			; <UNDEFINED> instruction: 0x000004b7
     48c:	00030501 	andeq	r0, r3, r1, lsl #10
     490:	0a000000 	beq	498 <__STACKSEAL_SIZE+0x498>
     494:	00000000 	andeq	r0, r0, r0
     498:	0000051e 	andeq	r0, r0, lr, lsl r5
     49c:	05500109 	ldrbeq	r0, [r0, #-265]	; 0xfffffef7
     4a0:	00000003 	andeq	r0, r0, r3
     4a4:	0d000000 	stceq	0, cr0, [r0, #-0]
     4a8:	0000007d 	andeq	r0, r0, sp, ror r0
     4ac:	000004b7 			; <UNDEFINED> instruction: 0x000004b7
     4b0:	0000680e 	andeq	r6, r0, lr, lsl #16
     4b4:	04000f00 	streq	r0, [r0], #-3840	; 0xfffff100
     4b8:	000004a7 	andeq	r0, r0, r7, lsr #9
     4bc:	018d010b 	orreq	r0, sp, fp, lsl #2
     4c0:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
     4c4:	00000106 	andeq	r0, r0, r6, lsl #2
     4c8:	00000000 	andeq	r0, r0, r0
     4cc:	02190000 	andseq	r0, r9, #0
     4d0:	fb010000 	blx	404da <__HEAP_SIZE+0x3f4da>
     4d4:	0c000004 	stceq	0, cr0, [r0], {4}
     4d8:	00000066 	andeq	r0, r0, r6, rrx
     4dc:	0000050b 	andeq	r0, r0, fp, lsl #10
     4e0:	00030501 	andeq	r0, r3, r1, lsl #10
     4e4:	0a000000 	beq	4ec <__STACKSEAL_SIZE+0x4ec>
     4e8:	00000000 	andeq	r0, r0, r0
     4ec:	0000051e 	andeq	r0, r0, lr, lsl r5
     4f0:	05500109 	ldrbeq	r0, [r0, #-265]	; 0xfffffef7
     4f4:	00000003 	andeq	r0, r0, r3
     4f8:	0d000000 	stceq	0, cr0, [r0, #-0]
     4fc:	0000007d 	andeq	r0, r0, sp, ror r0
     500:	0000050b 	andeq	r0, r0, fp, lsl #10
     504:	0000680e 	andeq	r6, r0, lr, lsl #16
     508:	04001900 	streq	r1, [r0], #-2304	; 0xfffff700
     50c:	000004fb 	strdeq	r0, [r0], -fp
     510:	84010113 	strhi	r0, [r1], #-275	; 0xfffffeed
     514:	84000000 	strhi	r0, [r0], #-0
     518:	02000000 	andeq	r0, r0, #0
     51c:	01140607 	tsteq	r4, r7, lsl #12
     520:	00009801 	andeq	r9, r0, r1, lsl #16
     524:	00008e00 	andeq	r8, r0, r0, lsl #28
     528:	13000500 	movwne	r0, #1280	; 0x500
     52c:	02060101 	andeq	r0, r6, #1073741824	; 0x40000000
     530:	02060000 	andeq	r0, r6, #0
     534:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
     538:	01011306 	tsteq	r1, r6, lsl #6
     53c:	0000052c 	andeq	r0, r0, ip, lsr #10
     540:	0000052c 	andeq	r0, r0, ip, lsr #10
     544:	1305c804 	movwne	ip, #22532	; 0x5804
     548:	01f30101 	mvnseq	r0, r1, lsl #2
     54c:	01f30000 	mvnseq	r0, r0
     550:	23010000 	movwcs	r0, #4096	; 0x1000
     554:	01011411 	tsteq	r1, r1, lsl r4
     558:	000000b5 	strheq	r0, [r0], -r5
     55c:	000000ab 	andeq	r0, r0, fp, lsr #1
     560:	01130005 	tsteq	r3, r5
     564:	00022001 	andeq	r2, r2, r1
     568:	00022000 	andeq	r2, r2, r0
     56c:	0e4c0300 	cdpeq	3, 4, cr0, cr12, cr0, {0}
     570:	00010113 	andeq	r0, r1, r3, lsl r1
     574:	00000000 	andeq	r0, r0, r0
     578:	03000000 	movweq	r0, #0
     57c:	01130e4d 	tsteq	r3, sp, asr #28
     580:	00025201 	andeq	r5, r2, r1, lsl #4
     584:	00025200 	andeq	r5, r2, r0, lsl #4
     588:	064a0300 	strbeq	r0, [sl], -r0, lsl #6
     58c:	0004e500 	andeq	lr, r4, r0, lsl #10
     590:	36000200 	strcc	r0, [r0], -r0, lsl #4
     594:	04000001 	streq	r0, [r0], #-1
     598:	0000cf01 	andeq	ip, r0, r1, lsl #30
     59c:	026d0c00 	rsbeq	r0, sp, #0, 24
     5a0:	00200000 	eoreq	r0, r0, r0
     5a4:	00700000 	rsbseq	r0, r0, r0
	...
     5b0:	02740000 	rsbseq	r0, r4, #0
     5b4:	01020000 	mrseq	r0, (UNDEF: 2)
     5b8:	00009f06 	andeq	r9, r0, r6, lsl #30
     5bc:	028c0300 	addeq	r0, ip, #0, 6
     5c0:	2b020000 	blcs	805c8 <__HEAP_SIZE+0x7f5c8>
     5c4:	00003c18 	andeq	r3, r0, r8, lsl ip
     5c8:	08010200 	stmdaeq	r1, {r9}
     5cc:	0000009d 	muleq	r0, sp, r0
     5d0:	16050202 	strne	r0, [r5], -r2, lsl #4
     5d4:	02000002 	andeq	r0, r0, #2
     5d8:	00bc0702 	adcseq	r0, ip, r2, lsl #14
     5dc:	04020000 	streq	r0, [r2], #-0
     5e0:	0001da05 	andeq	sp, r1, r5, lsl #20
     5e4:	02ef0300 	rsceq	r0, pc, #0, 6
     5e8:	4f020000 	svcmi	0x00020000
     5ec:	00006419 	andeq	r6, r0, r9, lsl r4
     5f0:	07040200 	streq	r0, [r4, -r0, lsl #4]
     5f4:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
     5f8:	d5050802 	strle	r0, [r5, #-2050]	; 0xfffff7fe
     5fc:	02000001 	andeq	r0, r0, #1
     600:	01b20708 			; <UNDEFINED> instruction: 0x01b20708
     604:	04040000 	streq	r0, [r4], #-0
     608:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     60c:	07040200 	streq	r0, [r4, -r0, lsl #4]
     610:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
     614:	00028e03 	andeq	r8, r2, r3, lsl #28
     618:	13180300 	tstne	r8, #0, 6
     61c:	00000030 	andeq	r0, r0, r0, lsr r0
     620:	00008705 	andeq	r8, r0, r5, lsl #14
     624:	02f10300 	rscseq	r0, r1, #0, 6
     628:	30030000 	andcc	r0, r3, r0
     62c:	00005814 	andeq	r5, r0, r4, lsl r8
     630:	00980500 	addseq	r0, r8, r0, lsl #10
     634:	a4060000 	strge	r0, [r6], #-0
     638:	07000000 	streq	r0, [r0, -r0]
     63c:	f804027c 			; <UNDEFINED> instruction: 0xf804027c
     640:	03b30901 			; <UNDEFINED> instruction: 0x03b30901
     644:	a9080000 	stmdbge	r8, {}	; <UNPREDICTABLE>
     648:	04000002 	streq	r0, [r0], #-2
     64c:	a91201fa 	ldmdbge	r2, {r1, r3, r4, r5, r6, r7, r8}
     650:	02000000 	andeq	r0, r0, #0
     654:	45080023 	strmi	r0, [r8, #-35]	; 0xffffffdd
     658:	04000003 	streq	r0, [r0], #-3
     65c:	a41201fb 	ldrge	r0, [r2], #-507	; 0xfffffe05
     660:	02000000 	andeq	r0, r0, #0
     664:	3b080423 	blcc	2016f8 <__RAM_SIZE+0x1016f8>
     668:	04000003 	streq	r0, [r0], #-3
     66c:	a41201fc 	ldrge	r0, [r2], #-508	; 0xfffffe04
     670:	02000000 	andeq	r0, r0, #0
     674:	4a080823 	bmi	202708 <__RAM_SIZE+0x102708>
     678:	04000003 	streq	r0, [r0], #-3
     67c:	a41201fd 	ldrge	r0, [r2], #-509	; 0xfffffe03
     680:	02000000 	andeq	r0, r0, #0
     684:	53090c23 	movwpl	r0, #39971	; 0x9c23
     688:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
     68c:	a41201fe 	ldrge	r0, [r2], #-510	; 0xfffffe02
     690:	02000000 	andeq	r0, r0, #0
     694:	43091023 	movwmi	r1, #36899	; 0x9023
     698:	04005243 	streq	r5, [r0], #-579	; 0xfffffdbd
     69c:	a41201ff 	ldrge	r0, [r2], #-511	; 0xfffffe01
     6a0:	02000000 	andeq	r0, r0, #0
     6a4:	e9081423 	stmdb	r8, {r0, r1, r5, sl, ip}
     6a8:	04000003 	streq	r0, [r0], #-3
     6ac:	c3120200 	tstgt	r2, #0, 4
     6b0:	02000003 	andeq	r0, r0, #3
     6b4:	bc081823 	stclt	8, cr1, [r8], {35}	; 0x23
     6b8:	04000003 	streq	r0, [r0], #-3
     6bc:	a4120201 	ldrge	r0, [r2], #-513	; 0xfffffdff
     6c0:	02000000 	andeq	r0, r0, #0
     6c4:	62082423 	andvs	r2, r8, #587202560	; 0x23000000
     6c8:	04000003 	streq	r0, [r0], #-3
     6cc:	a4120202 	ldrge	r0, [r2], #-514	; 0xfffffdfe
     6d0:	02000000 	andeq	r0, r0, #0
     6d4:	15082823 	strne	r2, [r8, #-2083]	; 0xfffff7dd
     6d8:	04000004 	streq	r0, [r0], #-4
     6dc:	a4120203 	ldrge	r0, [r2], #-515	; 0xfffffdfd
     6e0:	02000000 	andeq	r0, r0, #0
     6e4:	50082c23 	andpl	r2, r8, r3, lsr #24
     6e8:	04000003 	streq	r0, [r0], #-3
     6ec:	a4120204 	ldrge	r0, [r2], #-516	; 0xfffffdfc
     6f0:	02000000 	andeq	r0, r0, #0
     6f4:	55083023 	strpl	r3, [r8, #-35]	; 0xffffffdd
     6f8:	04000003 	streq	r0, [r0], #-3
     6fc:	a4120205 	ldrge	r0, [r2], #-517	; 0xfffffdfb
     700:	02000000 	andeq	r0, r0, #0
     704:	ea083423 	b	20d798 <__RAM_SIZE+0x10d798>
     708:	04000002 	streq	r0, [r0], #-2
     70c:	a4120206 	ldrge	r0, [r2], #-518	; 0xfffffdfa
     710:	02000000 	andeq	r0, r0, #0
     714:	d9083823 	stmdble	r8, {r0, r1, r5, fp, ip, sp}
     718:	04000003 	streq	r0, [r0], #-3
     71c:	a4120207 	ldrge	r0, [r2], #-519	; 0xfffffdf9
     720:	02000000 	andeq	r0, r0, #0
     724:	b6083c23 	strlt	r3, [r8], -r3, lsr #24
     728:	04000002 	streq	r0, [r0], #-2
     72c:	dd120208 	lfmle	f0, 4, [r2, #-32]	; 0xffffffe0
     730:	02000003 	andeq	r0, r0, #3
     734:	03084023 	movweq	r4, #32803	; 0x8023
     738:	04000003 	streq	r0, [r0], #-3
     73c:	a9120209 	ldmdbge	r2, {r0, r3, r9}
     740:	02000000 	andeq	r0, r0, #0
     744:	00084823 	andeq	r4, r8, r3, lsr #16
     748:	04000004 	streq	r0, [r0], #-4
     74c:	a912020a 	ldmdbge	r2, {r1, r3, r9}
     750:	02000000 	andeq	r0, r0, #0
     754:	da084c23 	ble	2137e8 <__RAM_SIZE+0x1137e8>
     758:	04000002 	streq	r0, [r0], #-2
     75c:	f712020b 			; <UNDEFINED> instruction: 0xf712020b
     760:	02000003 	andeq	r0, r0, #3
     764:	07085023 	streq	r5, [r8, -r3, lsr #32]
     768:	04000004 	streq	r0, [r0], #-4
     76c:	1112020c 	tstne	r2, ip, lsl #4
     770:	02000004 	andeq	r0, r0, #4
     774:	a3086023 	movwge	r6, #32803	; 0x8023
     778:	04000002 	streq	r0, [r0], #-2
     77c:	a912020d 	ldmdbge	r2, {r0, r2, r3, r9}
     780:	02000000 	andeq	r0, r0, #0
     784:	43097823 	movwmi	r7, #38947	; 0x9823
     788:	04005254 	streq	r5, [r0], #-596	; 0xfffffdac
     78c:	a912020e 	ldmdbge	r2, {r1, r2, r3, r9}
     790:	02000000 	andeq	r0, r0, #0
     794:	5b087c23 	blpl	21f828 <__RAM_SIZE+0x11f828>
     798:	04000003 	streq	r0, [r0], #-3
     79c:	a912020f 	ldmdbge	r2, {r0, r1, r2, r3, r9}
     7a0:	03000000 	movweq	r0, #0
     7a4:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
     7a8:	00000312 	andeq	r0, r0, r2, lsl r3
     7ac:	12021004 	andne	r1, r2, #4
     7b0:	000000a4 	andeq	r0, r0, r4, lsr #1
     7b4:	01842303 	orreq	r2, r4, r3, lsl #6
     7b8:	00040f08 	andeq	r0, r4, r8, lsl #30
     7bc:	02110400 	andseq	r0, r1, #0, 8
     7c0:	0000a412 	andeq	sl, r0, r2, lsl r4
     7c4:	88230300 	stmdahi	r3!, {r8, r9}
     7c8:	03670801 	cmneq	r7, #65536	; 0x10000
     7cc:	12040000 	andne	r0, r4, #0
     7d0:	00a41202 	adceq	r1, r4, r2, lsl #4
     7d4:	23030000 	movwcs	r0, #12288	; 0x3000
     7d8:	a708018c 	strge	r0, [r8, -ip, lsl #3]
     7dc:	04000003 	streq	r0, [r0], #-3
     7e0:	16120213 			; <UNDEFINED> instruction: 0x16120213
     7e4:	03000004 	movweq	r0, #4
     7e8:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
     7ec:	000003de 	ldrdeq	r0, [r0], -lr
     7f0:	12021404 	andne	r1, r2, #4, 8	; 0x4000000
     7f4:	000000a4 	andeq	r0, r0, r4, lsr #1
     7f8:	01e42303 	mvneq	r2, r3, lsl #6
     7fc:	00034008 	andeq	r4, r3, r8
     800:	02150400 	andseq	r0, r5, #0, 8
     804:	0000a412 	andeq	sl, r0, r2, lsl r4
     808:	e8230300 	stmda	r3!, {r8, r9}
     80c:	037f0801 	cmneq	pc, #65536	; 0x10000
     810:	16040000 	strne	r0, [r4], -r0
     814:	04261202 	strteq	r1, [r6], #-514	; 0xfffffdfe
     818:	23030000 	movwcs	r0, #12288	; 0x3000
     81c:	960801ec 	strls	r0, [r8], -ip, ror #3
     820:	04000002 	streq	r0, [r0], #-2
     824:	a4120217 	ldrge	r0, [r2], #-535	; 0xfffffde9
     828:	03000000 	movweq	r0, #0
     82c:	08048023 	stmdaeq	r4, {r0, r1, r5, pc}
     830:	00000389 	andeq	r0, r0, r9, lsl #7
     834:	12021804 	andne	r1, r2, #4, 16	; 0x40000
     838:	00000436 	andeq	r0, r0, r6, lsr r4
     83c:	04842303 	streq	r2, [r4], #771	; 0x303
     840:	00036d08 	andeq	r6, r3, r8, lsl #26
     844:	02190400 	andseq	r0, r9, #0, 8
     848:	0000a912 	andeq	sl, r0, r2, lsl r9
     84c:	c0230300 	eorgt	r0, r3, r0, lsl #6
     850:	03730804 	cmneq	r3, #4, 16	; 0x40000
     854:	1a040000 	bne	10085c <__RAM_SIZE+0x85c>
     858:	00a91202 	adceq	r1, r9, r2, lsl #4
     85c:	23030000 	movwcs	r0, #12288	; 0x3000
     860:	790804c4 	stmdbvc	r8, {r2, r6, r7, sl}
     864:	04000003 	streq	r0, [r0], #-3
     868:	a912021b 	ldmdbge	r2, {r0, r1, r3, r4, r9}
     86c:	03000000 	movweq	r0, #0
     870:	0804c823 	stmdaeq	r4, {r0, r1, r5, fp, lr, pc}
     874:	00000393 	muleq	r0, r3, r3
     878:	12021c04 	andne	r1, r2, #4, 24	; 0x400
     87c:	00000446 	andeq	r0, r0, r6, asr #8
     880:	04cc2303 	strbeq	r2, [ip], #771	; 0x303
     884:	0002e208 	andeq	lr, r2, r8, lsl #4
     888:	021d0400 	andseq	r0, sp, #0, 8
     88c:	0000a412 	andeq	sl, r0, r2, lsl r4
     890:	d0230300 	eorle	r0, r3, r0, lsl #6
     894:	039d0804 	orrseq	r0, sp, #4, 16	; 0x40000
     898:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
     89c:	04461202 	strbeq	r1, [r6], #-514	; 0xfffffdfe
     8a0:	23030000 	movwcs	r0, #12288	; 0x3000
     8a4:	cb0804d4 	blgt	201bfc <__RAM_SIZE+0x101bfc>
     8a8:	04000003 	streq	r0, [r0], #-3
     8ac:	a412021f 	ldrge	r0, [r2], #-543	; 0xfffffde1
     8b0:	03000000 	movweq	r0, #0
     8b4:	0804d823 	stmdaeq	r4, {r0, r1, r5, fp, ip, lr, pc}
     8b8:	0000029b 	muleq	r0, fp, r2
     8bc:	12022004 	andne	r2, r2, #4
     8c0:	000000a4 	andeq	r0, r0, r4, lsr #1
     8c4:	04dc2303 	ldrbeq	r2, [ip], #771	; 0x303
     8c8:	0003d308 	andeq	sp, r3, r8, lsl #6
     8cc:	02210400 	eoreq	r0, r1, #0, 8
     8d0:	0000a412 	andeq	sl, r0, r2, lsl r4
     8d4:	e0230300 	eor	r0, r3, r0, lsl #6
     8d8:	03290804 			; <UNDEFINED> instruction: 0x03290804
     8dc:	22040000 	andcs	r0, r4, #0
     8e0:	00a41202 	adceq	r1, r4, r2, lsl #4
     8e4:	23030000 	movwcs	r0, #12288	; 0x3000
     8e8:	0a0804e4 	beq	201c80 <__RAM_SIZE+0x101c80>
     8ec:	04000003 	streq	r0, [r0], #-3
     8f0:	a4120223 	ldrge	r0, [r2], #-547	; 0xfffffddd
     8f4:	03000000 	movweq	r0, #0
     8f8:	0804e823 	stmdaeq	r4, {r0, r1, r5, fp, sp, lr, pc}
     8fc:	000003e3 	andeq	r0, r0, r3, ror #7
     900:	12022404 	andne	r2, r2, #4, 8	; 0x4000000
     904:	000000a4 	andeq	r0, r0, r4, lsr #1
     908:	04ec2303 	strbteq	r2, [ip], #771	; 0x303
     90c:	0003c208 	andeq	ip, r3, r8, lsl #4
     910:	02250400 	eoreq	r0, r5, #0, 8
     914:	0000a412 	andeq	sl, r0, r2, lsl r4
     918:	f0230300 			; <UNDEFINED> instruction: 0xf0230300
     91c:	02bd0804 	adcseq	r0, sp, #4, 16	; 0x40000
     920:	26040000 	strcs	r0, [r4], -r0
     924:	00a41202 	adceq	r1, r4, r2, lsl #4
     928:	23030000 	movwcs	r0, #12288	; 0x3000
     92c:	af0804f4 	svcge	0x000804f4
     930:	04000002 	streq	r0, [r0], #-2
     934:	a4120227 	ldrge	r0, [r2], #-551	; 0xfffffdd9
     938:	03000000 	movweq	r0, #0
     93c:	0004f823 	andeq	pc, r4, r3, lsr #16
     940:	0000930a 	andeq	r9, r0, sl, lsl #6
     944:	0003c300 	andeq	ip, r3, r0, lsl #6
     948:	00800b00 	addeq	r0, r0, r0, lsl #22
     94c:	000b0000 	andeq	r0, fp, r0
     950:	0003b305 	andeq	fp, r3, r5, lsl #6
     954:	00a90a00 	adceq	r0, r9, r0, lsl #20
     958:	03d80000 	bicseq	r0, r8, #0
     95c:	800b0000 	andhi	r0, fp, r0
     960:	01000000 	mrseq	r0, (UNDEF: 0)
     964:	03c80600 	biceq	r0, r8, #0, 12
     968:	d8050000 	stmdale	r5, {}	; <UNPREDICTABLE>
     96c:	0a000003 	beq	980 <__Vectors_Size+0x1c0>
     970:	000000a9 	andeq	r0, r0, r9, lsr #1
     974:	000003f2 	strdeq	r0, [r0], -r2
     978:	0000800b 	andeq	r8, r0, fp
     97c:	06000300 	streq	r0, [r0], -r0, lsl #6
     980:	000003e2 	andeq	r0, r0, r2, ror #7
     984:	0003f205 	andeq	pc, r3, r5, lsl #4
     988:	00a90a00 	adceq	r0, r9, r0, lsl #20
     98c:	040c0000 	streq	r0, [ip], #-0
     990:	800b0000 	andhi	r0, fp, r0
     994:	05000000 	streq	r0, [r0, #-0]
     998:	03fc0600 	mvnseq	r0, #0, 12
     99c:	0c050000 	stceq	0, cr0, [r5], {-0}
     9a0:	0a000004 	beq	9b8 <__Vectors_Size+0x1f8>
     9a4:	00000098 	muleq	r0, r8, r0
     9a8:	00000426 	andeq	r0, r0, r6, lsr #8
     9ac:	0000800b 	andeq	r8, r0, fp
     9b0:	0a001400 	beq	59b8 <__HEAP_SIZE+0x49b8>
     9b4:	00000098 	muleq	r0, r8, r0
     9b8:	00000436 	andeq	r0, r0, r6, lsr r4
     9bc:	0000800b 	andeq	r8, r0, fp
     9c0:	0a004400 	beq	119c8 <__HEAP_SIZE+0x109c8>
     9c4:	00000098 	muleq	r0, r8, r0
     9c8:	00000446 	andeq	r0, r0, r6, asr #8
     9cc:	0000800b 	andeq	r8, r0, fp
     9d0:	0a000e00 	beq	41d8 <__HEAP_SIZE+0x31d8>
     9d4:	00000098 	muleq	r0, r8, r0
     9d8:	00000456 	andeq	r0, r0, r6, asr r4
     9dc:	0000800b 	andeq	r8, r0, fp
     9e0:	0c000000 	stceq	0, cr0, [r0], {-0}
     9e4:	000002fa 	strdeq	r0, [r0], -sl
     9e8:	03022804 	movweq	r2, #10244	; 0x2804
     9ec:	000000ae 	andeq	r0, r0, lr, lsr #1
     9f0:	0003ee03 	andeq	lr, r3, r3, lsl #28
     9f4:	0f240500 	svceq	0x00240500
     9f8:	00000474 	andeq	r0, r0, r4, ror r4
     9fc:	00046306 	andeq	r6, r4, r6, lsl #6
     a00:	7a040d00 	bvc	103e08 <__RAM_SIZE+0x3e08>
     a04:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
     a08:	03190f01 	tsteq	r9, #1, 30
     a0c:	29050000 	stmdbcs	r5, {}	; <UNPREDICTABLE>
     a10:	00009811 	andeq	r9, r0, r1, lsl r8
     a14:	0a010100 	beq	40e1c <__HEAP_SIZE+0x3fe1c>
     a18:	0000046f 	andeq	r0, r0, pc, ror #8
     a1c:	0000049b 	muleq	r0, fp, r4
     a20:	00008010 	andeq	r8, r0, r0, lsl r0
     a24:	0001ef00 	andeq	lr, r1, r0, lsl #30
     a28:	00048a06 	andeq	r8, r4, r6, lsl #20
     a2c:	03310f00 	teqeq	r1, #0, 30
     a30:	38010000 	stmdacc	r1, {}	; <UNPREDICTABLE>
     a34:	00049b20 	andeq	r9, r4, r0, lsr #22
     a38:	11010100 	mrsne	r0, (UNDEF: 17)
     a3c:	0000047c 	andeq	r0, r0, ip, ror r4
     a40:	050a3e01 	streq	r3, [sl, #-3585]	; 0xfffff1ff
     a44:	00000003 	andeq	r0, r0, r3
     a48:	b1011238 	tstlt	r1, r8, lsr r2
     a4c:	01000003 	tsteq	r0, r3
     a50:	2801064c 	stmdacs	r1, {r2, r3, r6, r9, sl}
     a54:	54100009 	ldrpl	r0, [r0], #-9
     a58:	02100009 	andseq	r0, r0, #9
     a5c:	1201007d 	andne	r0, r1, #125	; 0x7d
     a60:	0002c401 	andeq	ip, r2, r1, lsl #8
     a64:	06440100 	strbeq	r0, [r4], -r0, lsl #2
     a68:	00000001 	andeq	r0, r0, r1
     a6c:	00000000 	andeq	r0, r0, r0
     a70:	007d0200 	rsbseq	r0, sp, r0, lsl #4
     a74:	1bc10001 	blne	ff040a80 <__StackTop+0xc6f40a80>
     a78:	00020000 	andeq	r0, r2, r0
     a7c:	00000226 	andeq	r0, r0, r6, lsr #4
     a80:	00cf0104 	sbceq	r0, pc, r4, lsl #2
     a84:	000c0000 	andeq	r0, ip, r0
     a88:	20000005 	andcs	r0, r0, r5
     a8c:	40000000 	andmi	r0, r0, r0
     a90:	00000001 	andeq	r0, r0, r1
     a94:	00000000 	andeq	r0, r0, r0
     a98:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
     a9c:	02000004 	andeq	r0, r0, #4
     aa0:	01ce0408 	biceq	r0, lr, r8, lsl #8
     aa4:	04020000 	streq	r0, [r2], #-0
     aa8:	0001bc07 	andeq	fp, r1, r7, lsl #24
     aac:	06010200 	streq	r0, [r1], -r0, lsl #4
     ab0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     ab4:	9d080102 	stflss	f0, [r8, #-8]
     ab8:	02000000 	andeq	r0, r0, #0
     abc:	02160502 	andseq	r0, r6, #8388608	; 0x800000
     ac0:	02020000 	andeq	r0, r2, #0
     ac4:	0000bc07 	andeq	fp, r0, r7, lsl #24
     ac8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
     acc:	000001da 	ldrdeq	r0, [r0], -sl
     ad0:	00005303 	andeq	r5, r0, r3, lsl #6
     ad4:	07040200 	streq	r0, [r4, -r0, lsl #4]
     ad8:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
     adc:	d5050802 	strle	r0, [r5, #-2050]	; 0xfffff7fe
     ae0:	03000001 	movweq	r0, #1
     ae4:	00000066 	andeq	r0, r0, r6, rrx
     ae8:	0005be04 	andeq	fp, r5, r4, lsl #28
     aec:	19690200 	stmdbne	r9!, {r9}^
     af0:	0000007e 	andeq	r0, r0, lr, ror r0
     af4:	b2070802 	andlt	r0, r7, #131072	; 0x20000
     af8:	05000001 	streq	r0, [r0, #-1]
     afc:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     b00:	85030074 	strhi	r0, [r3, #-116]	; 0xffffff8c
     b04:	04000000 	streq	r0, [r0], #-0
     b08:	000005e7 	andeq	r0, r0, r7, ror #11
     b0c:	301ae802 	andscc	lr, sl, r2, lsl #16
     b10:	03000000 	movweq	r0, #0
     b14:	00000030 	andeq	r0, r0, r0, lsr r0
     b18:	0005c004 	andeq	ip, r5, r4
     b1c:	143c0300 	ldrtne	r0, [ip], #-768	; 0xfffffd00
     b20:	00000072 	andeq	r0, r0, r2, ror r0
     b24:	0005e904 	andeq	lr, r5, r4, lsl #18
     b28:	15520300 	ldrbne	r0, [r2, #-768]	; 0xfffffd00
     b2c:	00000091 	muleq	r0, r1, r0
     b30:	00065104 	andeq	r5, r6, r4, lsl #2
     b34:	1b280400 	blne	a01b3c <__RAM_SIZE+0x901b3c>
     b38:	000000c6 	andeq	r0, r0, r6, asr #1
     b3c:	0004f606 	andeq	pc, r4, r6, lsl #12
     b40:	00060400 	andeq	r0, r6, r0, lsl #8
     b44:	000000e0 	andeq	r0, r0, r0, ror #1
     b48:	0005a607 	andeq	sl, r5, r7, lsl #12
     b4c:	0000e000 	andeq	lr, r0, r0
     b50:	00230200 	eoreq	r0, r3, r0, lsl #4
     b54:	04080001 	streq	r0, [r8], #-1
     b58:	0004f804 	andeq	pc, r4, r4, lsl #16
     b5c:	18630400 	stmdane	r3!, {sl}^
     b60:	000000ba 	strheq	r0, [r0], -sl
     b64:	00045904 	andeq	r5, r4, r4, lsl #18
     b68:	17d10500 	ldrbne	r0, [r1, r0, lsl #10]
     b6c:	00000030 	andeq	r0, r0, r0, lsr r0
     b70:	0000ee03 	andeq	lr, r0, r3, lsl #28
     b74:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
     b78:	000001c9 	andeq	r0, r0, r9, asr #3
     b7c:	00053d04 	andeq	r3, r5, r4, lsl #26
     b80:	107a0100 	rsbsne	r0, sl, r0, lsl #2
     b84:	00000112 	andeq	r0, r0, r2, lsl r1
     b88:	01180409 	tsteq	r8, r9, lsl #8
     b8c:	010a0000 	mrseq	r0, (UNDEF: 10)
     b90:	00000133 	andeq	r0, r0, r3, lsr r1
     b94:	0001330b 	andeq	r3, r1, fp, lsl #6
     b98:	00e00b00 	rsceq	r0, r0, r0, lsl #22
     b9c:	ee0b0000 	cdp	0, 0, cr0, cr11, cr0, {0}
     ba0:	0b000000 	bleq	ba8 <__Vectors_Size+0x3e8>
     ba4:	000000ee 	andeq	r0, r0, lr, ror #1
     ba8:	08010200 	stmdaeq	r1, {r9}
     bac:	000000a6 	andeq	r0, r0, r6, lsr #1
     bb0:	00013303 	andeq	r3, r1, r3, lsl #6
     bb4:	01080c00 	tsteq	r8, r0, lsl #24
     bb8:	0167097e 	smceq	28830	; 0x709e
     bbc:	660d0000 	strvs	r0, [sp], -r0
     bc0:	01007463 	tsteq	r0, r3, ror #8
     bc4:	01780b7f 	cmneq	r8, pc, ror fp
     bc8:	23020000 	movwcs	r0, #8192	; 0x2000
     bcc:	72610d00 	rsbvc	r0, r1, #0, 26
     bd0:	80010067 	andhi	r0, r1, r7, rrx
     bd4:	0000e009 	andeq	lr, r0, r9
     bd8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     bdc:	78010a00 	stmdavc	r1, {r9, fp}
     be0:	0b000001 	bleq	bec <__Vectors_Size+0x42c>
     be4:	00000133 	andeq	r0, r0, r3, lsr r1
     be8:	0000e00b 	andeq	lr, r0, fp
     bec:	04090000 	streq	r0, [r9], #-0
     bf0:	00000167 	andeq	r0, r0, r7, ror #2
     bf4:	00063304 	andeq	r3, r6, r4, lsl #6
     bf8:	03810100 	orreq	r0, r1, #0, 2
     bfc:	0000013f 	andeq	r0, r0, pc, lsr r1
     c00:	00017e03 	andeq	r7, r1, r3, lsl #28
     c04:	d6010e00 	strle	r0, [r1], -r0, lsl #28
     c08:	01000004 	tsteq	r0, r4
     c0c:	0105038a 	smlabbeq	r5, sl, r3, r0
     c10:	00000085 	andeq	r0, r0, r5, lsl #1
	...
     c1c:	00000239 	andeq	r0, r0, r9, lsr r2
     c20:	00024c01 	andeq	r4, r2, r1, lsl #24
     c24:	756f0f00 	strbvc	r0, [pc, #-3840]!	; fffffd2c <__StackTop+0xc7effd2c>
     c28:	8a010074 	bhi	40e00 <__HEAP_SIZE+0x3fe00>
     c2c:	01781603 	cmneq	r8, r3, lsl #12
     c30:	029b0000 	addseq	r0, fp, #0
     c34:	02950000 	addseq	r0, r5, #0
     c38:	610f0000 	mrsvs	r0, CPSR
     c3c:	01006772 	tsteq	r0, r2, ror r7
     c40:	e03d038a 	eors	r0, sp, sl, lsl #7
     c44:	cc000000 	stcgt	0, cr0, [r0], {-0}
     c48:	c8000002 	stmdagt	r0, {r1}
     c4c:	10000002 	andne	r0, r0, r2
     c50:	0000051b 	andeq	r0, r0, fp, lsl r5
     c54:	4e038a01 	vmlami.f32	s16, s6, s2
     c58:	0000024c 	andeq	r0, r0, ip, asr #4
     c5c:	11789102 	cmnne	r8, r2, lsl #2
     c60:	00617612 	rsbeq	r7, r1, r2, lsl r6
     c64:	0b038c01 	bleq	e3c70 <__HEAP_SIZE+0xe2c70>
     c68:	000000e2 	andeq	r0, r0, r2, ror #1
     c6c:	136c9102 	cmnne	ip, #-2147483648	; 0x80000000
     c70:	00000431 	andeq	r0, r0, r1, lsr r4
     c74:	1b038e01 	blne	e4480 <__HEAP_SIZE+0xe3480>
     c78:	0000018a 	andeq	r0, r0, sl, lsl #3
     c7c:	14649102 	strbtne	r9, [r4], #-258	; 0xfffffefe
     c80:	00746572 	rsbseq	r6, r4, r2, ror r5
     c84:	0d038f01 	stceq	15, cr8, [r3, #-4]
     c88:	0000008c 	andeq	r0, r0, ip, lsl #1
     c8c:	000002ef 	andeq	r0, r0, pc, ror #5
     c90:	000002ed 	andeq	r0, r0, sp, ror #5
     c94:	00000015 	andeq	r0, r0, r5, lsl r0
     c98:	00055f00 	andeq	r5, r5, r0, lsl #30
     c9c:	50011600 	andpl	r1, r1, r0, lsl #12
     ca0:	00000305 	andeq	r0, r0, r5, lsl #6
     ca4:	01160000 	tsteq	r6, r0
     ca8:	54910251 	ldrpl	r0, [r1], #593	; 0x251
     cac:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
     cb0:	0116ff09 	tsteq	r6, r9, lsl #30	; <UNPREDICTABLE>
     cb4:	68910353 	ldmvs	r1, {r0, r1, r4, r6, r8, r9}
     cb8:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
     cbc:	6c910200 	lfmvs	f0, 4, [r1], {0}
     cc0:	04090000 	streq	r0, [r9], #-0
     cc4:	0000013a 	andeq	r0, r0, sl, lsr r1
     cc8:	0529010e 	streq	r0, [r9, #-270]!	; 0xfffffef2
     ccc:	84010000 	strhi	r0, [r1], #-0
     cd0:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
	...
     cdc:	02000000 	andeq	r0, r0, #0
     ce0:	01000003 	tsteq	r0, r3
     ce4:	000002ee 	andeq	r0, r0, lr, ror #5
     ce8:	00044a17 	andeq	r4, r4, r7, lsl sl
     cec:	03840100 	orreq	r0, r4, #0, 2
     cf0:	0002ee15 	andeq	lr, r2, r5, lsl lr
     cf4:	00034000 	andeq	r4, r3, r0
     cf8:	00033a00 	andeq	r3, r3, r0, lsl #20
     cfc:	001a1700 	andseq	r1, sl, r0, lsl #14
     d00:	84010000 	strhi	r0, [r1], #-0
     d04:	00ee2403 	rsceq	r2, lr, r3, lsl #8
     d08:	03720000 	cmneq	r2, #0
     d0c:	036c0000 	cmneq	ip, #0
     d10:	1b170000 	blne	5c0d18 <__RAM_SIZE+0x4c0d18>
     d14:	01000005 	tsteq	r0, r5
     d18:	4c370384 	ldcmi	3, cr0, [r7], #-528	; 0xfffffdf0
     d1c:	a4000002 	strge	r0, [r0], #-2
     d20:	9e000003 	cdpls	0, 0, cr0, cr0, cr3, {0}
     d24:	0f000003 	svceq	0x00000003
     d28:	01006176 	tsteq	r0, r6, ror r1
     d2c:	e2470384 	sub	r0, r7, #132, 6	; 0x10000002
     d30:	d2000000 	andle	r0, r0, #0
     d34:	d0000003 	andle	r0, r0, r3
     d38:	15000003 	strne	r0, [r0, #-3]
     d3c:	00000000 	andeq	r0, r0, r0
     d40:	0000055f 	andeq	r0, r0, pc, asr r5
     d44:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     d48:	00000003 	andeq	r0, r0, r3
     d4c:	51011600 	tstpl	r1, r0, lsl #12
     d50:	5001f303 	andpl	pc, r1, r3, lsl #6
     d54:	03520116 	cmpeq	r2, #-2147483643	; 0x80000005
     d58:	165101f3 			; <UNDEFINED> instruction: 0x165101f3
     d5c:	f3035301 	vcgt.u8	d5, d3, d1
     d60:	00005201 	andeq	r5, r0, r1, lsl #4
     d64:	01330409 	teqeq	r3, r9, lsl #8
     d68:	010e0000 	mrseq	r0, (UNDEF: 14)
     d6c:	00000451 	andeq	r0, r0, r1, asr r4
     d70:	05037d01 	streq	r7, [r3, #-3329]	; 0xfffff2ff
     d74:	00008501 	andeq	r8, r0, r1, lsl #10
	...
     d80:	0003e500 	andeq	lr, r3, r0, lsl #10
     d84:	03740100 	cmneq	r4, #0, 2
     d88:	1b170000 	blne	5c0d90 <__RAM_SIZE+0x4c0d90>
     d8c:	01000005 	tsteq	r0, r5
     d90:	4c19037d 	ldcmi	3, cr0, [r9], {125}	; 0x7d
     d94:	23000002 	movwcs	r0, #2
     d98:	1d000004 	stcne	0, cr0, [r0, #-16]
     d9c:	0f000004 	svceq	0x00000004
     da0:	01006176 	tsteq	r0, r6, ror r1
     da4:	e229037d 	eor	r0, r9, #-201326591	; 0xf4000001
     da8:	51000000 	mrspl	r0, (UNDEF: 0)
     dac:	4f000004 	svcmi	0x00000004
     db0:	13000004 	movwne	r0, #4
     db4:	0000044a 	andeq	r0, r0, sl, asr #8
     db8:	08037f01 	stmdaeq	r3, {r0, r8, r9, sl, fp, ip, sp, lr}
     dbc:	00000374 	andeq	r0, r0, r4, ror r3
     dc0:	15749102 	ldrbne	r9, [r4, #-258]!	; 0xfffffefe
     dc4:	00000000 	andeq	r0, r0, r0
     dc8:	0000055f 	andeq	r0, r0, pc, asr r5
     dcc:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     dd0:	001a9903 	andseq	r9, sl, r3, lsl #18
     dd4:	51011610 	tstpl	r1, r0, lsl r6
     dd8:	16749102 	ldrbtne	r9, [r4], -r2, lsl #2
     ddc:	09025201 	stmdbeq	r2, {r0, r9, ip, lr}
     de0:	530116ff 	movwpl	r1, #5887	; 0x16ff
     de4:	5001f303 	andpl	pc, r1, r3, lsl #6
     de8:	33180000 	tstcc	r8, #0
     dec:	84000001 	strhi	r0, [r0], #-1
     df0:	19000003 	stmdbne	r0, {r0, r1}
     df4:	00000030 	andeq	r0, r0, r0, lsr r0
     df8:	010e0000 	mrseq	r0, (UNDEF: 14)
     dfc:	0000052a 	andeq	r0, r0, sl, lsr #10
     e00:	05037301 	streq	r7, [r3, #-769]	; 0xfffffcff
     e04:	00008501 	andeq	r8, r0, r1, lsl #10
	...
     e10:	00046400 	andeq	r6, r4, r0, lsl #8
     e14:	04330100 	ldrteq	r0, [r3], #-256	; 0xffffff00
     e18:	4a170000 	bmi	5c0e20 <__RAM_SIZE+0x4c0e20>
     e1c:	01000004 	tsteq	r0, r4
     e20:	ee140373 	mrc	3, 0, r0, cr4, cr3, {3}
     e24:	c6000002 	strgt	r0, [r0], -r2
     e28:	c0000004 	andgt	r0, r0, r4
     e2c:	17000004 	strne	r0, [r0, -r4]
     e30:	0000001a 	andeq	r0, r0, sl, lsl r0
     e34:	23037301 	movwcs	r7, #13057	; 0x3301
     e38:	000000ee 	andeq	r0, r0, lr, ror #1
     e3c:	000004f8 	strdeq	r0, [r0], -r8
     e40:	000004f2 	strdeq	r0, [r0], -r2
     e44:	00051b10 	andeq	r1, r5, r0, lsl fp
     e48:	03730100 	cmneq	r3, #0, 2
     e4c:	00024c36 	andeq	r4, r2, r6, lsr ip
     e50:	78910200 	ldmvc	r1, {r9}
     e54:	61761211 	cmnvs	r6, r1, lsl r2
     e58:	03750100 	cmneq	r5, #0, 2
     e5c:	0000e20b 	andeq	lr, r0, fp, lsl #4
     e60:	6c910200 	lfmvs	f0, 4, [r1], {0}
     e64:	74657214 	strbtvc	r7, [r5], #-532	; 0xfffffdec
     e68:	03770100 	cmneq	r7, #0, 2
     e6c:	00008c0d 	andeq	r8, r0, sp, lsl #24
     e70:	00052600 	andeq	r2, r5, r0, lsl #12
     e74:	00052400 	andeq	r2, r5, r0, lsl #8
     e78:	00001500 	andeq	r1, r0, r0, lsl #10
     e7c:	055f0000 	ldrbeq	r0, [pc, #-0]	; e84 <__Vectors_Size+0x6c4>
     e80:	01160000 	tsteq	r6, r0
     e84:	00030550 	andeq	r0, r3, r0, asr r5
     e88:	16000000 	strne	r0, [r0], -r0
     e8c:	f3035101 	vrhadd.u8	d5, d3, d1
     e90:	01165001 	tsteq	r6, r1
     e94:	01f30352 	mvnseq	r0, r2, asr r3
     e98:	53011651 	movwpl	r1, #5713	; 0x1651
     e9c:	06689103 	strbteq	r9, [r8], -r3, lsl #2
     ea0:	007d0216 	rsbseq	r0, sp, r6, lsl r2
     ea4:	006c9102 	rsbeq	r9, ip, r2, lsl #2
     ea8:	64010e00 	strvs	r0, [r1], #-3584	; 0xfffff200
     eac:	01000005 	tsteq	r0, r5
     eb0:	01050369 	tsteq	r5, r9, ror #6
     eb4:	00000085 	andeq	r0, r0, r5, lsl #1
	...
     ec0:	00000539 	andeq	r0, r0, r9, lsr r5
     ec4:	0004cc01 	andeq	ip, r4, r1, lsl #24
     ec8:	044a1700 	strbeq	r1, [sl], #-1792	; 0xfffff900
     ecc:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
     ed0:	02ee1303 	rsceq	r1, lr, #201326592	; 0xc000000
     ed4:	059b0000 	ldreq	r0, [fp]
     ed8:	05950000 	ldreq	r0, [r5]
     edc:	1b100000 	blne	400ee4 <__RAM_SIZE+0x300ee4>
     ee0:	01000005 	tsteq	r0, r5
     ee4:	4c270369 	stcmi	3, cr0, [r7], #-420	; 0xfffffe5c
     ee8:	02000002 	andeq	r0, r0, #2
     eec:	12117491 	andsne	r7, r1, #-1862270976	; 0x91000000
     ef0:	01006176 	tsteq	r0, r6, ror r1
     ef4:	e20b036b 	and	r0, fp, #-1409286143	; 0xac000001
     ef8:	02000000 	andeq	r0, r0, #0
     efc:	72146c91 	andsvc	r6, r4, #37120	; 0x9100
     f00:	01007465 	tsteq	r0, r5, ror #8
     f04:	8c0d036d 	stchi	3, cr0, [sp], {109}	; 0x6d
     f08:	c9000000 	stmdbgt	r0, {}	; <UNPREDICTABLE>
     f0c:	c7000005 	strgt	r0, [r0, -r5]
     f10:	15000005 	strne	r0, [r0, #-5]
     f14:	00000000 	andeq	r0, r0, r0
     f18:	0000055f 	andeq	r0, r0, pc, asr r5
     f1c:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     f20:	00000003 	andeq	r0, r0, r3
     f24:	51011600 	tstpl	r1, r0, lsl #12
     f28:	5001f303 	andpl	pc, r1, r3, lsl #6
     f2c:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
     f30:	0116ff09 	tsteq	r6, r9, lsl #30	; <UNPREDICTABLE>
     f34:	5c910353 	ldcpl	3, cr0, [r1], {83}	; 0x53
     f38:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
     f3c:	60910200 	addsvs	r0, r1, r0, lsl #4
     f40:	010e0000 	mrseq	r0, (UNDEF: 14)
     f44:	0000052c 	andeq	r0, r0, ip, lsr #10
     f48:	05035e01 	streq	r5, [r3, #-3585]	; 0xfffff1ff
     f4c:	00008501 	andeq	r8, r0, r1, lsl #10
     f50:	001aa400 	andseq	sl, sl, r0, lsl #8
     f54:	001ad010 	andseq	sp, sl, r0, lsl r0
     f58:	0005dc10 	andeq	sp, r5, r0, lsl ip
     f5c:	055f0100 	ldrbeq	r0, [pc, #-256]	; e64 <__Vectors_Size+0x6a4>
     f60:	1b100000 	blne	400f68 <__RAM_SIZE+0x300f68>
     f64:	01000005 	tsteq	r0, r5
     f68:	4c18035e 	ldcmi	3, cr0, [r8], {94}	; 0x5e
     f6c:	02000002 	andeq	r0, r0, #2
     f70:	12117091 	andsne	r7, r1, #145	; 0x91
     f74:	01006176 	tsteq	r0, r6, ror r1
     f78:	e20b0360 	and	r0, fp, #96, 6	; 0x80000001
     f7c:	02000000 	andeq	r0, r0, #0
     f80:	4a136491 	bmi	4da1cc <__RAM_SIZE+0x3da1cc>
     f84:	01000004 	tsteq	r0, r4
     f88:	74080362 	strvc	r0, [r8], #-866	; 0xfffffc9e
     f8c:	02000003 	andeq	r0, r0, #3
     f90:	72146091 	andsvc	r6, r4, #145	; 0x91
     f94:	01007465 	tsteq	r0, r5, ror #8
     f98:	8c0d0363 	stchi	3, cr0, [sp], {99}	; 0x63
     f9c:	3a000000 	bcc	fa4 <__Vectors_Size+0x7e4>
     fa0:	38000006 	stmdacc	r0, {r1, r2}
     fa4:	15000006 	strne	r0, [r0, #-6]
     fa8:	10001ac0 	andne	r1, r0, r0, asr #21
     fac:	0000055f 	andeq	r0, r0, pc, asr r5
     fb0:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
     fb4:	001a9903 	andseq	r9, sl, r3, lsl #18
     fb8:	51011610 	tstpl	r1, r0, lsl r6
     fbc:	16409102 	strbne	r9, [r0], -r2, lsl #2
     fc0:	09025201 	stmdbeq	r2, {r0, r9, ip, lr}
     fc4:	530116ff 	movwpl	r1, #5887	; 0x16ff
     fc8:	06509103 	ldrbeq	r9, [r0], -r3, lsl #2
     fcc:	007d0216 	rsbseq	r0, sp, r6, lsl r2
     fd0:	00549102 	subseq	r9, r4, r2, lsl #2
     fd4:	05281a00 	streq	r1, [r8, #-2560]!	; 0xfffff600
     fd8:	41010000 	mrsmi	r0, (UNDEF: 1)
     fdc:	85010c02 	strhi	r0, [r1, #-3074]	; 0xfffff3fe
     fe0:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
     fe4:	98100014 	ldmdals	r0, {r2, r4}
     fe8:	4d10001a 	ldcmi	0, cr0, [r0, #-104]	; 0xffffff98
     fec:	01000006 	tsteq	r0, r6
     ff0:	00000b7d 	andeq	r0, r0, sp, ror fp
     ff4:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
     ff8:	02410100 	subeq	r0, r1, #0, 2
     ffc:	00010624 	andeq	r0, r1, r4, lsr #12
    1000:	00068e00 	andeq	r8, r6, r0, lsl #28
    1004:	00068600 	andeq	r8, r6, r0, lsl #12
    1008:	044a1700 	strbeq	r1, [sl], #-1792	; 0xfffff900
    100c:	41010000 	mrsmi	r0, (UNDEF: 1)
    1010:	02ee2f02 	rsceq	r2, lr, #2, 30
    1014:	06cc0000 	strbeq	r0, [ip], r0
    1018:	06c20000 	strbeq	r0, [r2], r0
    101c:	8e170000 	cdphi	0, 1, cr0, cr7, cr0, {0}
    1020:	01000005 	tsteq	r0, r5
    1024:	fa440241 	blx	1101930 <__RAM_SIZE+0x1001930>
    1028:	20000000 	andcs	r0, r0, r0
    102c:	0e000007 	cdpeq	0, 0, cr0, cr0, cr7, {0}
    1030:	17000007 	strne	r0, [r0, -r7]
    1034:	0000051b 	andeq	r0, r0, fp, lsl r5
    1038:	58024101 	stmdapl	r2, {r0, r8, lr}
    103c:	0000024c 	andeq	r0, r0, ip, asr #4
    1040:	00000792 	muleq	r0, r2, r7
    1044:	0000078e 	andeq	r0, r0, lr, lsl #15
    1048:	0061761b 	rsbeq	r7, r1, fp, lsl r6
    104c:	68024101 	stmdavs	r2, {r0, r8, lr}
    1050:	000000e2 	andeq	r0, r0, r2, ror #1
    1054:	1c009102 	stfned	f1, [r0], {2}
    1058:	00000579 	andeq	r0, r0, r9, ror r5
    105c:	10024301 	andne	r4, r2, r1, lsl #6
    1060:	00000030 	andeq	r0, r0, r0, lsr r0
    1064:	000007c8 	andeq	r0, r0, r8, asr #15
    1068:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
    106c:	00064b1c 	andeq	r4, r6, ip, lsl fp
    1070:	02430100 	subeq	r0, r3, #0, 2
    1074:	00003017 	andeq	r3, r0, r7, lsl r0
    1078:	00086c00 	andeq	r6, r8, r0, lsl #24
    107c:	00085600 	andeq	r5, r8, r0, lsl #12
    1080:	06851c00 	streq	r1, [r5], r0, lsl #24
    1084:	43010000 	movwmi	r0, #4096	; 0x1000
    1088:	00301e02 	eorseq	r1, r0, r2, lsl #28
    108c:	09140000 	ldmdbeq	r4, {}	; <UNPREDICTABLE>
    1090:	08f60000 	ldmeq	r6!, {}^	; <UNPREDICTABLE>
    1094:	6e140000 	cdpvs	0, 1, cr0, cr4, cr0, {0}
    1098:	02430100 	subeq	r0, r3, #0, 2
    109c:	00003029 	andeq	r3, r0, r9, lsr #32
    10a0:	0009d200 	andeq	sp, r9, r0, lsl #4
    10a4:	0009c400 	andeq	ip, r9, r0, lsl #8
    10a8:	64691400 	strbtvs	r1, [r9], #-1024	; 0xfffffc00
    10ac:	44010078 	strmi	r0, [r1], #-120	; 0xffffff88
    10b0:	00ee0a02 	rsceq	r0, lr, r2, lsl #20
    10b4:	0a8e0000 	beq	fe3810bc <__StackTop+0xc62810bc>
    10b8:	0a2e0000 	beq	b810c0 <__RAM_SIZE+0xa810c0>
    10bc:	f41d0000 			; <UNDEFINED> instruction: 0xf41d0000
    10c0:	14100014 	ldrne	r0, [r0], #-20	; 0xffffffec
    10c4:	63100015 	tstvs	r0, #21
    10c8:	12000006 	andne	r0, r0, #6
    10cc:	6c010077 	stcvs	0, cr0, [r1], {119}	; 0x77
    10d0:	008c1102 	addeq	r1, ip, r2, lsl #2
    10d4:	50010000 	andpl	r0, r1, r0
    10d8:	153c1d00 	ldrne	r1, [ip, #-3328]!	; 0xfffff300
    10dc:	15501000 	ldrbne	r1, [r0, #-0]
    10e0:	06801000 	streq	r1, [r0], r0
    10e4:	45130000 	ldrmi	r0, [r3, #-0]
    10e8:	01000006 	tsteq	r0, r6
    10ec:	8c130280 	lfmhi	f0, 4, [r3], {128}	; 0x80
    10f0:	01000000 	mrseq	r0, (UNDEF: 0)
    10f4:	5e1d0053 	mrcpl	0, 0, r0, cr13, cr3, {2}
    10f8:	4a100016 	bmi	401158 <__RAM_SIZE+0x301158>
    10fc:	73100018 	tstvc	r0, #24
    1100:	1c000008 	stcne	0, cr0, [r0], {8}
    1104:	00000870 	andeq	r0, r0, r0, ror r8
    1108:	1602b401 	strne	fp, [r2], -r1, lsl #8
    110c:	00000030 	andeq	r0, r0, r0, lsr r0
    1110:	00000cc4 	andeq	r0, r0, r4, asr #25
    1114:	00000ca8 	andeq	r0, r0, r8, lsr #25
    1118:	0001281e 	andeq	r2, r1, lr, lsl r8
    111c:	0006e900 	andeq	lr, r6, r0, lsl #18
    1120:	04af1f00 	strteq	r1, [pc], #3840	; 1128 <__HEAP_SIZE+0x128>
    1124:	d6010000 	strle	r0, [r1], -r0
    1128:	006d1d02 	rsbeq	r1, sp, r2, lsl #26
    112c:	74150000 	ldrvc	r0, [r5], #-0
    1130:	7c100017 	ldcvc	0, cr0, [r0], {23}
    1134:	16000013 			; <UNDEFINED> instruction: 0x16000013
    1138:	77025001 	strvc	r5, [r2, -r1]
    113c:	51011600 	tstpl	r1, r0, lsl #12
    1140:	16007802 	strne	r7, [r0], -r2, lsl #16
    1144:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    1148:	53011600 	movwpl	r1, #5632	; 0x1600
    114c:	16007602 	strne	r7, [r0], -r2, lsl #12
    1150:	02187d02 	andseq	r7, r8, #2, 26	; 0x80
    1154:	0216007b 	andseq	r0, r6, #123	; 0x7b
    1158:	75021c7d 	strvc	r1, [r2, #-3197]	; 0xfffff383
    115c:	1d000000 	stcne	0, cr0, [r0, #-0]
    1160:	10001780 	andne	r1, r0, r0, lsl #15
    1164:	100017b0 			; <UNDEFINED> instruction: 0x100017b0
    1168:	0000073e 	andeq	r0, r0, lr, lsr r7
    116c:	0004af13 	andeq	sl, r4, r3, lsl pc
    1170:	02db0100 	sbcseq	r0, fp, #0, 2
    1174:	00005a18 	andeq	r5, r0, r8, lsl sl
    1178:	15520100 	ldrbne	r0, [r2, #-256]	; 0xffffff00
    117c:	100017ae 	andne	r1, r0, lr, lsr #15
    1180:	0000150f 	andeq	r1, r0, pc, lsl #10
    1184:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1188:	01160077 	tsteq	r6, r7, ror r0
    118c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1190:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1194:	01160074 	tsteq	r6, r4, ror r0
    1198:	00760253 	rsbseq	r0, r6, r3, asr r2
    119c:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    11a0:	16007b02 	strne	r7, [r0], -r2, lsl #22
    11a4:	03107d02 	tsteq	r0, #2, 26	; 0x80
    11a8:	16064891 			; <UNDEFINED> instruction: 0x16064891
    11ac:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    11b0:	00000075 	andeq	r0, r0, r5, ror r0
    11b4:	0001101e 	andeq	r1, r1, lr, lsl r0
    11b8:	00079500 	andeq	r9, r7, r0, lsl #10
    11bc:	04af1c00 	strteq	r1, [pc], #3072	; 11c4 <__HEAP_SIZE+0x1c4>
    11c0:	df010000 	svcle	0x00010000
    11c4:	008c1702 	addeq	r1, ip, r2, lsl #14
    11c8:	0d750000 	ldcleq	0, cr0, [r5, #-0]
    11cc:	0d730000 	ldcleq	0, cr0, [r3, #-0]
    11d0:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
    11d4:	0f100017 	svceq	0x00100017
    11d8:	16000015 			; <UNDEFINED> instruction: 0x16000015
    11dc:	77025001 	strvc	r5, [r2, -r1]
    11e0:	51011600 	tstpl	r1, r0, lsl #12
    11e4:	16007802 	strne	r7, [r0], -r2, lsl #16
    11e8:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    11ec:	53011600 	movwpl	r1, #5632	; 0x1600
    11f0:	16007602 	strne	r7, [r0], -r2, lsl #12
    11f4:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    11f8:	0216007b 	andseq	r0, r6, #123	; 0x7b
    11fc:	9103107d 	tstls	r3, sp, ror r0
    1200:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    1204:	7502147d 	strvc	r1, [r2, #-1149]	; 0xfffffb83
    1208:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    120c:	000000f8 	strdeq	r0, [r0], -r8
    1210:	000007f2 	strdeq	r0, [r0], -r2
    1214:	0004af1c 	andeq	sl, r4, ip, lsl pc
    1218:	02ee0100 	rsceq	r0, lr, #0, 2
    121c:	00009d20 	andeq	r9, r0, r0, lsr #26
    1220:	000d8c00 	andeq	r8, sp, r0, lsl #24
    1224:	000d8800 	andeq	r8, sp, r0, lsl #16
    1228:	16d81500 	ldrbne	r1, [r8], r0, lsl #10
    122c:	150f1000 	strne	r1, [pc, #-0]	; 1234 <__HEAP_SIZE+0x234>
    1230:	01160000 	tsteq	r6, r0
    1234:	00770250 	rsbseq	r0, r7, r0, asr r2
    1238:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    123c:	01160078 	tsteq	r6, r8, ror r0
    1240:	00740252 	rsbseq	r0, r4, r2, asr r2
    1244:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1248:	02160076 	andseq	r0, r6, #118	; 0x76
    124c:	3001047d 	andcc	r0, r1, sp, ror r4
    1250:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1254:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1258:	03107d02 	tsteq	r0, #2, 26	; 0x80
    125c:	16064891 			; <UNDEFINED> instruction: 0x16064891
    1260:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    1264:	00000075 	andeq	r0, r0, r5, ror r0
    1268:	00180220 	andseq	r0, r8, r0, lsr #4
    126c:	00137c10 	andseq	r7, r3, r0, lsl ip
    1270:	00083400 	andeq	r3, r8, r0, lsl #8
    1274:	50011600 	andpl	r1, r1, r0, lsl #12
    1278:	16007702 	strne	r7, [r0], -r2, lsl #14
    127c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1280:	52011600 	andpl	r1, r1, #0, 12
    1284:	16007402 	strne	r7, [r0], -r2, lsl #8
    1288:	76025301 	strvc	r5, [r2], -r1, lsl #6
    128c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1290:	16300108 	ldrtne	r0, [r0], -r8, lsl #2
    1294:	02187d02 	andseq	r7, r8, #2, 26	; 0x80
    1298:	0216007b 	andseq	r0, r6, #123	; 0x7b
    129c:	91031c7d 	tstls	r3, sp, ror ip
    12a0:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    12a4:	7502207d 	strvc	r2, [r2, #-125]	; 0xffffff83
    12a8:	2c150000 	ldccs	0, cr0, [r5], {-0}
    12ac:	0f100018 	svceq	0x00100018
    12b0:	16000015 			; <UNDEFINED> instruction: 0x16000015
    12b4:	77025001 	strvc	r5, [r2, -r1]
    12b8:	51011600 	tstpl	r1, r0, lsl #12
    12bc:	16007802 	strne	r7, [r0], -r2, lsl #16
    12c0:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    12c4:	53011600 	movwpl	r1, #5632	; 0x1600
    12c8:	16007602 	strne	r7, [r0], -r2, lsl #12
    12cc:	01047d02 	tsteq	r4, r2, lsl #26
    12d0:	7d021630 	stcvc	6, cr1, [r2, #-192]	; 0xffffff40
    12d4:	007b020c 	rsbseq	r0, fp, ip, lsl #4
    12d8:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    12dc:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    12e0:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    12e4:	00007502 	andeq	r7, r0, r2, lsl #10
    12e8:	00e01e00 	rsceq	r1, r0, r0, lsl #28
    12ec:	08ec0000 	stmiaeq	ip!, {}^	; <UNPREDICTABLE>
    12f0:	6c140000 	ldcvs	0, cr0, [r4], {-0}
    12f4:	03090100 	movweq	r0, #37120	; 0x9100
    12f8:	00003016 	andeq	r3, r0, r6, lsl r0
    12fc:	000dbf00 	andeq	fp, sp, r0, lsl #30
    1300:	000dab00 	andeq	sl, sp, r0, lsl #22
    1304:	18f62100 	ldmne	r6!, {r8, sp}^
    1308:	08ab1000 	stmiaeq	fp!, {ip}
    130c:	01160000 	tsteq	r6, r0
    1310:	00780251 	rsbseq	r0, r8, r1, asr r2
    1314:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1318:	01160074 	tsteq	r6, r4, ror r0
    131c:	00760253 	rsbseq	r0, r6, r3, asr r2
    1320:	190e2100 	stmdbne	lr, {r8, sp}
    1324:	08cd1000 	stmiaeq	sp, {ip}^
    1328:	01160000 	tsteq	r6, r0
    132c:	20080250 	andcs	r0, r8, r0, asr r2
    1330:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1334:	01160078 	tsteq	r6, r8, ror r0
    1338:	7f7a0252 	svcvc	0x007a0252
    133c:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1340:	22000076 	andcs	r0, r0, #118	; 0x76
    1344:	1000193a 	andne	r1, r0, sl, lsr r9
    1348:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    134c:	01162008 	tsteq	r6, r8
    1350:	00780251 	rsbseq	r0, r8, r1, asr r2
    1354:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1358:	01167f75 	tsteq	r6, r5, ror pc
    135c:	00760253 	rsbseq	r0, r6, r3, asr r2
    1360:	4a1d0000 	bmi	741368 <__RAM_SIZE+0x641368>
    1364:	14100019 	ldrne	r0, [r0], #-25	; 0xffffffe7
    1368:	b110001a 	tstlt	r0, sl, lsl r0
    136c:	14000009 	strne	r0, [r0], #-9
    1370:	1d010070 	stcne	0, cr0, [r1, #-448]	; 0xfffffe40
    1374:	024c1503 	subeq	r1, ip, #12582912	; 0xc00000
    1378:	0e3b0000 	cdpeq	0, 3, cr0, cr11, cr0, {0}
    137c:	0e370000 	cdpeq	0, 3, cr0, cr7, cr0, {0}
    1380:	6c140000 	ldcvs	0, cr0, [r4], {-0}
    1384:	031e0100 	tsteq	lr, #0, 2
    1388:	00003016 	andeq	r3, r0, r6, lsl r0
    138c:	000e6f00 	andeq	r6, lr, r0, lsl #30
    1390:	000e5900 	andeq	r5, lr, r0, lsl #18
    1394:	19642300 	stmdbne	r4!, {r8, r9, sp}^
    1398:	19620000 	stmdbne	r2!, {}^	; <UNPREDICTABLE>
    139c:	19781000 	ldmdbne	r8!, {ip}^
    13a0:	1e011000 	cdpne	0, 0, cr1, cr1, cr0, {0}
    13a4:	09541a03 	ldmdbeq	r4, {r0, r1, r9, fp, ip}^
    13a8:	82240000 	eorhi	r0, r4, #0
    13ac:	f8000019 			; <UNDEFINED> instruction: 0xf8000019
    13b0:	f200000e 	vhadd.s8	d0, d0, d14
    13b4:	2500000e 	strcs	r0, [r0, #-14]
    13b8:	00001976 	andeq	r1, r0, r6, ror r9
    13bc:	00198e26 	andseq	r8, r9, r6, lsr #28
    13c0:	000f2300 	andeq	r2, pc, r0, lsl #6
    13c4:	000f2100 	andeq	r2, pc, r0, lsl #2
    13c8:	b0210000 	eorlt	r0, r1, r0
    13cc:	76100019 			; <UNDEFINED> instruction: 0x76100019
    13d0:	16000009 	strne	r0, [r0], -r9
    13d4:	08025001 	stmdaeq	r2, {r0, ip, lr}
    13d8:	51011620 	tstpl	r1, r0, lsr #12
    13dc:	16007802 	strne	r7, [r0], -r2, lsl #16
    13e0:	79025201 	stmdbvc	r2, {r0, r9, ip, lr}
    13e4:	5301167f 	movwpl	r1, #5759	; 0x167f
    13e8:	00007602 	andeq	r7, r0, r2, lsl #12
    13ec:	0019d221 	andseq	sp, r9, r1, lsr #4
    13f0:	00099210 	andeq	r9, r9, r0, lsl r2
    13f4:	51011600 	tstpl	r1, r0, lsl #12
    13f8:	16007802 	strne	r7, [r0], -r2, lsl #16
    13fc:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    1400:	5301167f 	movwpl	r1, #5759	; 0x167f
    1404:	00007b02 	andeq	r7, r0, r2, lsl #22
    1408:	001a0422 	andseq	r0, sl, r2, lsr #8
    140c:	50011610 	andpl	r1, r1, r0, lsl r6
    1410:	16200802 	strtne	r0, [r0], -r2, lsl #16
    1414:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1418:	52011600 	andpl	r1, r1, #0, 12
    141c:	167f7502 	ldrbtne	r7, [pc], -r2, lsl #10
    1420:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1424:	1d000000 	stcne	0, cr0, [r0, #-0]
    1428:	10001a14 	andne	r1, r0, r4, lsl sl
    142c:	10001a4a 	andne	r1, r0, sl, asr #20
    1430:	00000a16 	andeq	r0, r0, r6, lsl sl
    1434:	00067f1c 	andeq	r7, r6, ip, lsl pc
    1438:	033a0100 	teqeq	sl, #0, 2
    143c:	000b8414 	andeq	r8, fp, r4, lsl r4
    1440:	000f3800 	andeq	r3, pc, r0, lsl #16
    1444:	000f3600 	andeq	r3, pc, r0, lsl #12
    1448:	1a401500 	bne	1006850 <__RAM_SIZE+0xf06850>
    144c:	150f1000 	strne	r1, [pc, #-0]	; 1454 <__HEAP_SIZE+0x454>
    1450:	01160000 	tsteq	r6, r0
    1454:	00770250 	rsbseq	r0, r7, r0, asr r2
    1458:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    145c:	01160078 	tsteq	r6, r8, ror r0
    1460:	00740252 	rsbseq	r0, r4, r2, asr r2
    1464:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1468:	02160076 	andseq	r0, r6, #118	; 0x76
    146c:	3001047d 	andcc	r0, r1, sp, ror r4
    1470:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1474:	02164001 	andseq	r4, r6, #1
    1478:	7b020c7d 	blvc	84674 <__HEAP_SIZE+0x83674>
    147c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1480:	16380110 			; <UNDEFINED> instruction: 0x16380110
    1484:	02147d02 	andseq	r7, r4, #2, 26	; 0x80
    1488:	00000075 	andeq	r0, r0, r5, ror r0
    148c:	00194627 	andseq	r4, r9, r7, lsr #12
    1490:	00147800 	andseq	r7, r4, r0, lsl #16
    1494:	78000310 	stmdavc	r0, {r4, r8, r9}
    1498:	7e100014 	mrcvc	0, 0, r0, cr0, cr4, {0}
    149c:	01100014 	tsteq	r0, r4, lsl r0
    14a0:	3f090268 	svccc	0x00090268
    14a4:	2400000a 	strcs	r0, [r0], #-10
    14a8:	00001958 	andeq	r1, r0, r8, asr r9
    14ac:	00000f4e 	andeq	r0, r0, lr, asr #30
    14b0:	00000f4c 	andeq	r0, r0, ip, asr #30
    14b4:	19462700 	stmdbne	r6, {r8, r9, sl, sp}^
    14b8:	151e0000 	ldrne	r0, [lr, #-0]
    14bc:	00001000 	andeq	r1, r0, r0
    14c0:	1000151e 	andne	r1, r0, lr, lsl r5
    14c4:	10001524 	andne	r1, r0, r4, lsr #10
    14c8:	0b027c01 	bleq	a04d4 <__HEAP_SIZE+0x9f4d4>
    14cc:	00000a68 	andeq	r0, r0, r8, ror #20
    14d0:	00195824 	andseq	r5, r9, r4, lsr #16
    14d4:	000f6300 	andeq	r6, pc, r0, lsl #6
    14d8:	000f6100 	andeq	r6, pc, r0, lsl #2
    14dc:	46280000 	strtmi	r0, [r8], -r0
    14e0:	02100014 	andseq	r0, r0, #20
    14e4:	0a870077 	beq	fe1c16c8 <__StackTop+0xc60c16c8>
    14e8:	01160000 	tsteq	r6, r0
    14ec:	00780251 	rsbseq	r0, r8, r1, asr r2
    14f0:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    14f4:	01160074 	tsteq	r6, r4, ror r0
    14f8:	00760253 	rsbseq	r0, r6, r3, asr r2
    14fc:	14f02000 	ldrbtne	r2, [r0], #0
    1500:	18d81000 	ldmne	r8, {ip}^
    1504:	0a9b0000 	beq	fe6c150c <__StackTop+0xc65c150c>
    1508:	01160000 	tsteq	r6, r0
    150c:	54910250 	ldrpl	r0, [r1], #592	; 0x250
    1510:	15382000 	ldrne	r2, [r8, #-0]!
    1514:	18d81000 	ldmne	r8, {ip}^
    1518:	0aaf0000 	beq	febc1520 <__StackTop+0xc6ac1520>
    151c:	01160000 	tsteq	r6, r0
    1520:	54910250 	ldrpl	r0, [r1], #592	; 0x250
    1524:	187a2000 	ldmdane	sl!, {sp}^
    1528:	0fa81000 	svceq	0x00a81000
    152c:	0aeb0000 	beq	ffac1534 <__StackTop+0xc79c1534>
    1530:	01160000 	tsteq	r6, r0
    1534:	00770250 	rsbseq	r0, r7, r0, asr r2
    1538:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    153c:	01160078 	tsteq	r6, r8, ror r0
    1540:	00740252 	rsbseq	r0, r4, r2, asr r2
    1544:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1548:	02160076 	andseq	r0, r6, #118	; 0x76
    154c:	7b02087d 	blvc	83748 <__HEAP_SIZE+0x82748>
    1550:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1554:	4891030c 	ldmmi	r1, {r2, r3, r8, r9}
    1558:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    155c:	00750210 	rsbseq	r0, r5, r0, lsl r2
    1560:	18ce2000 	stmiane	lr, {sp}^
    1564:	0b891000 	bleq	fe24556c <__StackTop+0xc614556c>
    1568:	0b270000 	bleq	9c1570 <__RAM_SIZE+0x8c1570>
    156c:	01160000 	tsteq	r6, r0
    1570:	00770250 	rsbseq	r0, r7, r0, asr r2
    1574:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1578:	01160078 	tsteq	r6, r8, ror r0
    157c:	00740252 	rsbseq	r0, r4, r2, asr r2
    1580:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1584:	02160076 	andseq	r0, r6, #118	; 0x76
    1588:	7b02087d 	blvc	83784 <__HEAP_SIZE+0x82784>
    158c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1590:	4891030c 	ldmmi	r1, {r2, r3, r8, r9}
    1594:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1598:	00750210 	rsbseq	r0, r5, r0, lsl r2
    159c:	1a562100 	bne	15899a4 <__RAM_SIZE+0x14899a4>
    15a0:	0b491000 	bleq	12455a8 <__RAM_SIZE+0x11455a8>
    15a4:	01160000 	tsteq	r6, r0
    15a8:	25080250 	strcs	r0, [r8, #-592]	; 0xfffffdb0
    15ac:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    15b0:	01160078 	tsteq	r6, r8, ror r0
    15b4:	00740252 	rsbseq	r0, r4, r2, asr r2
    15b8:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    15bc:	21000076 	tstcs	r0, r6, ror r0
    15c0:	10001a6a 	andne	r1, r0, sl, ror #20
    15c4:	00000b65 	andeq	r0, r0, r5, ror #22
    15c8:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    15cc:	01160078 	tsteq	r6, r8, ror r0
    15d0:	00740252 	rsbseq	r0, r4, r2, asr r2
    15d4:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    15d8:	22000076 	andcs	r0, r0, #118	; 0x76
    15dc:	10001a8a 	andne	r1, r0, sl, lsl #21
    15e0:	01500116 	cmpeq	r0, r6, lsl r1
    15e4:	51011630 	tstpl	r1, r0, lsr r6
    15e8:	16007802 	strne	r7, [r0], -r2, lsl #16
    15ec:	76025301 	strvc	r5, [r2], -r1, lsl #6
    15f0:	02000000 	andeq	r0, r0, #0
    15f4:	05b80201 	ldreq	r0, [r8, #513]!	; 0x201
    15f8:	7d030000 	stcvc	0, cr0, [r3, #-0]
    15fc:	1a00000b 	bne	1630 <__HEAP_SIZE+0x630>
    1600:	00000476 	andeq	r0, r0, r6, ror r4
    1604:	0f01d301 	svceq	0x0001d301
    1608:	0000ee01 	andeq	lr, r0, r1, lsl #28
    160c:	000c9000 	andeq	r9, ip, r0
    1610:	00107a10 	andseq	r7, r0, r0, lsl sl
    1614:	000f7610 	andeq	r7, pc, r0, lsl r6	; <UNPREDICTABLE>
    1618:	0fa30100 	svceq	0x00a30100
    161c:	6f0f0000 	svcvs	0x000f0000
    1620:	01007475 	tsteq	r0, r5, ror r4
    1624:	062201d3 			; <UNDEFINED> instruction: 0x062201d3
    1628:	d8000001 	stmdale	r0, {r0}
    162c:	d400000f 	strle	r0, [r0], #-15
    1630:	1700000f 	strne	r0, [r0, -pc]
    1634:	0000044a 	andeq	r0, r0, sl, asr #8
    1638:	2d01d301 	stccs	3, cr13, [r1, #-4]
    163c:	000002ee 	andeq	r0, r0, lr, ror #5
    1640:	00000ffa 	strdeq	r0, [r0], -sl
    1644:	00000ff6 	strdeq	r0, [r0], -r6
    1648:	7864690f 	stmdavc	r4!, {r0, r1, r2, r3, r8, fp, sp, lr}^
    164c:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1650:	0000ee3c 	andeq	lr, r0, ip, lsr lr
    1654:	00102e00 	andseq	r2, r0, r0, lsl #28
    1658:	00101800 	andseq	r1, r0, r0, lsl #16
    165c:	058e1700 	streq	r1, [lr, #1792]	; 0x700
    1660:	d3010000 	movwle	r0, #4096	; 0x1000
    1664:	00ee4801 	rsceq	r4, lr, r1, lsl #16
    1668:	10b30000 	adcsne	r0, r3, r0
    166c:	10af0000 	adcne	r0, pc, r0
    1670:	af170000 	svcge	0x00170000
    1674:	01000004 	tsteq	r0, r4
    1678:	295701d3 	ldmdbcs	r7, {r0, r1, r4, r6, r7, r8}^
    167c:	dd000000 	stcle	0, cr0, [r0, #-0]
    1680:	d1000010 	tstle	r0, r0, lsl r0
    1684:	17000010 	smladne	r0, r0, r0, r0
    1688:	00000645 	andeq	r0, r0, r5, asr #12
    168c:	6b01d301 	blvs	76298 <__HEAP_SIZE+0x75298>
    1690:	00000030 	andeq	r0, r0, r0, lsr r0
    1694:	0000113c 	andeq	r1, r0, ip, lsr r1
    1698:	00001130 	andeq	r1, r0, r0, lsr r1
    169c:	00064b17 	andeq	r4, r6, r7, lsl fp
    16a0:	01d30100 	bicseq	r0, r3, r0, lsl #2
    16a4:	0000307e 	andeq	r3, r0, lr, ror r0
    16a8:	00118e00 	andseq	r8, r1, r0, lsl #28
    16ac:	00118a00 	andseq	r8, r1, r0, lsl #20
    16b0:	05791700 	ldrbeq	r1, [r9, #-1792]!	; 0xfffff900
    16b4:	d3010000 	movwle	r0, #4096	; 0x1000
    16b8:	00309201 	eorseq	r9, r0, r1, lsl #4
    16bc:	11b60000 			; <UNDEFINED> instruction: 0x11b60000
    16c0:	11ae0000 			; <UNDEFINED> instruction: 0x11ae0000
    16c4:	e01c0000 	ands	r0, ip, r0
    16c8:	01000004 	tsteq	r0, r4
    16cc:	840e01db 	strhi	r0, [lr], #-475	; 0xfffffe25
    16d0:	f100000b 	cps	#11
    16d4:	ed000011 	stc	0, cr0, [r0, #-68]	; 0xffffffbc
    16d8:	29000011 	stmdbcs	r0, {r0, r4}
    16dc:	01e70108 	mvneq	r0, r8, lsl #2
    16e0:	000c8603 	andeq	r8, ip, r3, lsl #12
    16e4:	00552a00 	subseq	r2, r5, r0, lsl #20
    16e8:	0e01e801 	cdpeq	8, 0, cr14, cr1, cr1, {0}
    16ec:	000000a2 	andeq	r0, r0, r2, lsr #1
    16f0:	0100462a 	tsteq	r0, sl, lsr #12
    16f4:	290e01e9 	stmdbcs	lr, {r0, r3, r5, r6, r7, r8}
    16f8:	00000000 	andeq	r0, r0, r0
    16fc:	0005d31c 	andeq	sp, r5, ip, lsl r3
    1700:	01ea0100 	mvneq	r0, r0, lsl #2
    1704:	000c6505 	andeq	r6, ip, r5, lsl #10
    1708:	00123500 	andseq	r3, r2, r0, lsl #10
    170c:	00123100 	andseq	r3, r2, r0, lsl #2
    1710:	042c1c00 	strteq	r1, [ip], #-3072	; 0xfffff400
    1714:	ed010000 	stc	0, cr0, [r1, #-0]
    1718:	00850701 	addeq	r0, r5, r1, lsl #14
    171c:	126d0000 	rsbne	r0, sp, #0
    1720:	12610000 	rsbne	r0, r1, #0
    1724:	3e1c0000 	cdpcc	0, 1, cr0, cr12, cr0, {0}
    1728:	01000004 	tsteq	r0, r4
    172c:	850701f0 	strhi	r0, [r7, #-496]	; 0xfffffe10
    1730:	ca000000 	bgt	1738 <__HEAP_SIZE+0x738>
    1734:	c0000012 	andgt	r0, r0, r2, lsl r0
    1738:	14000012 	strne	r0, [r0], #-18	; 0xffffffee
    173c:	f301007a 	vqadd.u8	q0, <illegal reg q0.5>, q13
    1740:	0fa31001 	svceq	0x00a31001
    1744:	130c0000 	movwne	r0, #49152	; 0xc000
    1748:	130a0000 	movwne	r0, #40960	; 0xa000
    174c:	7a140000 	bvc	501754 <__RAM_SIZE+0x401754>
    1750:	f4010032 	vst4.8	{d0-d3}, [r1 :256], r2
    1754:	0fa31001 	svceq	0x00a31001
    1758:	132a0000 			; <UNDEFINED> instruction: 0x132a0000
    175c:	13240000 			; <UNDEFINED> instruction: 0x13240000
    1760:	601c0000 	andsvs	r0, ip, r0
    1764:	01000004 	tsteq	r0, r4
    1768:	301001ff 			; <UNDEFINED> instruction: 0x301001ff
    176c:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    1770:	5c000013 	stcpl	0, cr0, [r0], {19}
    1774:	1c000013 	stcne	0, cr0, [r0], {19}
    1778:	0000064a 	andeq	r0, r0, sl, asr #12
    177c:	10021901 	andne	r1, r2, r1, lsl #18
    1780:	00000030 	andeq	r0, r0, r0, lsr r0
    1784:	000013bf 			; <UNDEFINED> instruction: 0x000013bf
    1788:	000013b5 			; <UNDEFINED> instruction: 0x000013b5
    178c:	0004cc1c 	andeq	ip, r4, ip, lsl ip
    1790:	022c0100 	eoreq	r0, ip, #0, 2
    1794:	0000fa10 	andeq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    1798:	00140100 	andseq	r0, r4, r0, lsl #2
    179c:	0013ff00 	andseq	pc, r3, r0, lsl #30
    17a0:	0cae2b00 	vstmiaeq	lr!, {d2-d1}
    17a4:	1b1c1000 	blne	7057ac <__RAM_SIZE+0x6057ac>
    17a8:	c22b0000 	eorgt	r0, fp, #0
    17ac:	2710000c 	ldrcs	r0, [r0, -ip]
    17b0:	2b00001b 	blcs	1824 <__HEAP_SIZE+0x824>
    17b4:	10000cd8 	ldrdne	r0, [r0], -r8
    17b8:	00001b32 	andeq	r1, r0, r2, lsr fp
    17bc:	000cea2b 	andeq	lr, ip, fp, lsr #20
    17c0:	001b3210 	andseq	r3, fp, r0, lsl r2
    17c4:	0d262b00 	vstmdbeq	r6!, {d2-d1}
    17c8:	1b3d1000 	blne	f457d0 <__RAM_SIZE+0xe457d0>
    17cc:	302b0000 	eorcc	r0, fp, r0
    17d0:	4810000d 	ldmdami	r0, {r0, r2, r3}
    17d4:	2b00001b 	blcs	1848 <__HEAP_SIZE+0x848>
    17d8:	10000d3a 	andne	r0, r0, sl, lsr sp
    17dc:	00001b53 	andeq	r1, r0, r3, asr fp
    17e0:	000d4a2b 	andeq	r4, sp, fp, lsr #20
    17e4:	001b5e10 	andseq	r5, fp, r0, lsl lr
    17e8:	0d542b00 	vldreq	d18, [r4, #-0]
    17ec:	1b481000 	blne	12057f4 <__RAM_SIZE+0x11057f4>
    17f0:	602b0000 	eorvs	r0, fp, r0
    17f4:	5310000d 	tstpl	r0, #13
    17f8:	2b00001b 	blcs	186c <__HEAP_SIZE+0x86c>
    17fc:	10000d64 	andne	r0, r0, r4, ror #26
    1800:	00001b69 	andeq	r1, r0, r9, ror #22
    1804:	000d6a2b 	andeq	r6, sp, fp, lsr #20
    1808:	001b3d10 	andseq	r3, fp, r0, lsl sp
    180c:	0d782b00 	vldmdbeq	r8!, {d18-d17}
    1810:	1b481000 	blne	1205818 <__RAM_SIZE+0x1105818>
    1814:	802b0000 	eorhi	r0, fp, r0
    1818:	5310000d 	tstpl	r0, #13
    181c:	2b00001b 	blcs	1890 <__HEAP_SIZE+0x890>
    1820:	10000d84 	andne	r0, r0, r4, lsl #27
    1824:	00001b69 	andeq	r1, r0, r9, ror #22
    1828:	000d942b 	andeq	r9, sp, fp, lsr #8
    182c:	001b4810 	andseq	r4, fp, r0, lsl r8
    1830:	0d9e2b00 	vldreq	d2, [lr]
    1834:	1b3d1000 	blne	f4583c <__RAM_SIZE+0xe4583c>
    1838:	a82b0000 	stmdage	fp!, {}	; <UNPREDICTABLE>
    183c:	4810000d 	ldmdami	r0, {r0, r2, r3}
    1840:	2b00001b 	blcs	18b4 <__HEAP_SIZE+0x8b4>
    1844:	10000db4 			; <UNDEFINED> instruction: 0x10000db4
    1848:	00001b5e 	andeq	r1, r0, lr, asr fp
    184c:	000dc02b 	andeq	ip, sp, fp, lsr #32
    1850:	001b4810 	andseq	r4, fp, r0, lsl r8
    1854:	0de42b00 			; <UNDEFINED> instruction: 0x0de42b00
    1858:	1b531000 	blne	14c5860 <__RAM_SIZE+0x13c5860>
    185c:	f62b0000 			; <UNDEFINED> instruction: 0xf62b0000
    1860:	5e10000d 	cdppl	0, 1, cr0, cr0, cr13, {0}
    1864:	2b00001b 	blcs	18d8 <__HEAP_SIZE+0x8d8>
    1868:	10000e06 	andne	r0, r0, r6, lsl #28
    186c:	00001b74 	andeq	r1, r0, r4, ror fp
    1870:	000e0e2b 	andeq	r0, lr, fp, lsr #28
    1874:	001b5310 	andseq	r5, fp, r0, lsl r3
    1878:	0e1a2b00 	vnmlseq.f64	d2, d10, d0
    187c:	1b741000 	blne	1d05884 <__RAM_SIZE+0x1c05884>
    1880:	222b0000 	eorcs	r0, fp, #0
    1884:	5310000e 	tstpl	r0, #14
    1888:	2b00001b 	blcs	18fc <__HEAP_SIZE+0x8fc>
    188c:	10000e2e 	andne	r0, r0, lr, lsr #28
    1890:	00001b74 	andeq	r1, r0, r4, ror fp
    1894:	000e3a2b 	andeq	r3, lr, fp, lsr #20
    1898:	001b5310 	andseq	r5, fp, r0, lsl r3
    189c:	0e462b00 	vmlaeq.f64	d18, d6, d0
    18a0:	1b741000 	blne	1d058a8 <__RAM_SIZE+0x1c058a8>
    18a4:	4e2b0000 	cdpmi	0, 2, cr0, cr11, cr0, {0}
    18a8:	5310000e 	tstpl	r0, #14
    18ac:	2b00001b 	blcs	1920 <__HEAP_SIZE+0x920>
    18b0:	10000e56 	andne	r0, r0, r6, asr lr
    18b4:	00001b48 	andeq	r1, r0, r8, asr #22
    18b8:	000e662b 	andeq	r6, lr, fp, lsr #12
    18bc:	001b2710 	andseq	r2, fp, r0, lsl r7
    18c0:	0e762b00 	vaddeq.f64	d18, d6, d0
    18c4:	1b741000 	blne	1d058cc <__RAM_SIZE+0x1c058cc>
    18c8:	9e2b0000 	cdpls	0, 2, cr0, cr11, cr0, {0}
    18cc:	7f10000e 	svcvc	0x0010000e
    18d0:	2b00001b 	blcs	1944 <__HEAP_SIZE+0x944>
    18d4:	10000eb0 			; <UNDEFINED> instruction: 0x10000eb0
    18d8:	00001b32 	andeq	r1, r0, r2, lsr fp
    18dc:	000ee220 	andeq	lr, lr, r0, lsr #4
    18e0:	000fa810 	andeq	sl, pc, r0, lsl r8	; <UNPREDICTABLE>
    18e4:	000eae00 	andeq	sl, lr, r0, lsl #28
    18e8:	50011600 	andpl	r1, r1, r0, lsl #12
    18ec:	16007a02 	strne	r7, [r0], -r2, lsl #20
    18f0:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    18f4:	52011600 	andpl	r1, r1, #0, 12
    18f8:	16007b02 	strne	r7, [r0], -r2, lsl #22
    18fc:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    1900:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1904:	00910500 	addseq	r0, r1, r0, lsl #10
    1908:	162908f6 			; <UNDEFINED> instruction: 0x162908f6
    190c:	03087d02 	movweq	r7, #36098	; 0x8d02
    1910:	16060891 			; <UNDEFINED> instruction: 0x16060891
    1914:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1918:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    191c:	03107d02 	tsteq	r0, #2, 26	; 0x80
    1920:	00061091 	muleq	r6, r1, r0
    1924:	000fbc2b 	andeq	fp, pc, fp, lsr #24
    1928:	001b7410 	andseq	r7, fp, r0, lsl r4
    192c:	0fcc2b00 	svceq	0x00cc2b00
    1930:	1b321000 	blne	c85938 <__RAM_SIZE+0xb85938>
    1934:	f4200000 	vld4.8	{d0-d3}, [r0], r0
    1938:	a810000f 	ldmdage	r0, {r0, r1, r2, r3}
    193c:	0c00000f 	stceq	0, cr0, [r0], {15}
    1940:	1600000f 	strne	r0, [r0], -pc
    1944:	7a025001 	bvc	95950 <__HEAP_SIZE+0x94950>
    1948:	51011600 	tstpl	r1, r0, lsl #12
    194c:	16007402 	strne	r7, [r0], -r2, lsl #8
    1950:	7b025201 	blvc	9615c <__HEAP_SIZE+0x9515c>
    1954:	53011600 	movwpl	r1, #5632	; 0x1600
    1958:	16007502 	strne	r7, [r0], -r2, lsl #10
    195c:	06007d02 	streq	r7, [r0], -r2, lsl #26
    1960:	f67fa891 			; <UNDEFINED> instruction: 0xf67fa891
    1964:	02162908 	andseq	r2, r6, #8, 18	; 0x20000
    1968:	9103087d 	tstls	r3, sp, ror r8
    196c:	02160608 	andseq	r0, r6, #8, 12	; 0x800000
    1970:	78020c7d 	stmdavc	r2, {r0, r2, r3, r4, r5, r6, sl, fp}
    1974:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1978:	10910710 	addsne	r0, r1, r0, lsl r7
    197c:	f7ff0b06 			; <UNDEFINED> instruction: 0xf7ff0b06
    1980:	1421001a 	strtne	r0, [r1], #-26	; 0xffffffe6
    1984:	28100010 	ldmdacs	r0, {r4}
    1988:	1600000f 	strne	r0, [r0], -pc
    198c:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    1990:	52011600 	andpl	r1, r1, #0, 12
    1994:	167f7802 	ldrbtne	r7, [pc], -r2, lsl #16
    1998:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    199c:	3e200000 	cdpcc	0, 2, cr0, cr0, cr0, {0}
    19a0:	0f100010 	svceq	0x00100010
    19a4:	84000015 	strhi	r0, [r0], #-21	; 0xffffffeb
    19a8:	1600000f 	strne	r0, [r0], -pc
    19ac:	7a025001 	bvc	959b8 <__HEAP_SIZE+0x949b8>
    19b0:	51011600 	tstpl	r1, r0, lsl #12
    19b4:	16007402 	strne	r7, [r0], -r2, lsl #8
    19b8:	78025201 	stmdavc	r2, {r0, r9, ip, lr}
    19bc:	53011600 	movwpl	r1, #5632	; 0x1600
    19c0:	16007502 	strne	r7, [r0], -r2, lsl #10
    19c4:	0c007d02 	stceq	13, cr7, [r0], {2}
    19c8:	264f0076 			; <UNDEFINED> instruction: 0x264f0076
    19cc:	76270076 			; <UNDEFINED> instruction: 0x76270076
    19d0:	1c264f00 	stcne	15, cr4, [r6], #-0
    19d4:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    19d8:	4f007604 	svcmi	0x00007604
    19dc:	7d021625 	stcvc	6, cr1, [r2, #-148]	; 0xffffff6c
    19e0:	163a0108 	ldrtne	r0, [sl], -r8, lsl #2
    19e4:	040c7d02 	streq	r7, [ip], #-3330	; 0xfffff2fe
    19e8:	067fb091 			; <UNDEFINED> instruction: 0x067fb091
    19ec:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    19f0:	16007702 	strne	r7, [r0], -r2, lsl #14
    19f4:	01147d02 	tsteq	r4, r2, lsl #26
    19f8:	6c220035 	stcvs	0, cr0, [r2], #-212	; 0xffffff2c
    19fc:	16100010 			; <UNDEFINED> instruction: 0x16100010
    1a00:	08025001 	stmdaeq	r2, {r0, ip, lr}
    1a04:	51011620 	tstpl	r1, r0, lsr #12
    1a08:	16007402 	strne	r7, [r0], -r2, lsl #8
    1a0c:	76025201 	strvc	r5, [r2], -r1, lsl #4
    1a10:	5301167f 	movwpl	r1, #5759	; 0x167f
    1a14:	00007502 	andeq	r7, r0, r2, lsl #10
    1a18:	00290300 	eoreq	r0, r9, r0, lsl #6
    1a1c:	221a0000 	andscs	r0, sl, #0
    1a20:	01000005 	tsteq	r0, r5
    1a24:	010f0153 	tsteq	pc, r3, asr r1	; <UNPREDICTABLE>
    1a28:	000000ee 	andeq	r0, r0, lr, ror #1
    1a2c:	10001080 	andne	r1, r0, r0, lsl #1
    1a30:	10001416 	andne	r1, r0, r6, lsl r4
    1a34:	00001414 	andeq	r1, r0, r4, lsl r4
    1a38:	00135701 	andseq	r5, r3, r1, lsl #14
    1a3c:	756f0f00 	strbvc	r0, [pc, #-3840]!	; b44 <__Vectors_Size+0x384>
    1a40:	53010074 	movwpl	r0, #4212	; 0x1074
    1a44:	01062201 	tsteq	r6, r1, lsl #4
    1a48:	14760000 	ldrbtne	r0, [r6], #-0
    1a4c:	14720000 	ldrbtne	r0, [r2], #-0
    1a50:	4a170000 	bmi	5c1a58 <__RAM_SIZE+0x4c1a58>
    1a54:	01000004 	tsteq	r0, r4
    1a58:	ee2d0153 	mcr	1, 1, r0, cr13, cr3, {2}
    1a5c:	9a000002 	bls	1a6c <__HEAP_SIZE+0xa6c>
    1a60:	96000014 			; <UNDEFINED> instruction: 0x96000014
    1a64:	0f000014 	svceq	0x00000014
    1a68:	00786469 	rsbseq	r6, r8, r9, ror #8
    1a6c:	3c015301 	stccc	3, cr5, [r1], {1}
    1a70:	000000ee 	andeq	r0, r0, lr, ror #1
    1a74:	000014be 			; <UNDEFINED> instruction: 0x000014be
    1a78:	000014ba 			; <UNDEFINED> instruction: 0x000014ba
    1a7c:	00058e17 	andeq	r8, r5, r7, lsl lr
    1a80:	01530100 	cmpeq	r3, r0, lsl #2
    1a84:	0000ee48 	andeq	lr, r0, r8, asr #28
    1a88:	0014e000 	andseq	lr, r4, r0
    1a8c:	0014dc00 	andseq	sp, r4, r0, lsl #24
    1a90:	04af1700 	strteq	r1, [pc], #1792	; 1a98 <__HEAP_SIZE+0xa98>
    1a94:	53010000 	movwpl	r0, #4096	; 0x1000
    1a98:	00295701 	eoreq	r5, r9, r1, lsl #14
    1a9c:	15080000 	strne	r0, [r8, #-0]
    1aa0:	14fe0000 	ldrbtne	r0, [lr], #0
    1aa4:	45170000 	ldrmi	r0, [r7, #-0]
    1aa8:	01000006 	tsteq	r0, r6
    1aac:	306b0153 	rsbcc	r0, fp, r3, asr r1
    1ab0:	60000000 	andvs	r0, r0, r0
    1ab4:	58000015 	stmdapl	r0, {r0, r2, r4}
    1ab8:	17000015 	smladne	r0, r5, r0, r0
    1abc:	0000064b 	andeq	r0, r0, fp, asr #12
    1ac0:	7e015301 	cdpvc	3, 0, cr5, cr1, cr1, {0}
    1ac4:	00000030 	andeq	r0, r0, r0, lsr r0
    1ac8:	000015a0 	andeq	r1, r0, r0, lsr #11
    1acc:	00001596 	muleq	r0, r6, r5
    1ad0:	00057917 	andeq	r7, r5, r7, lsl r9
    1ad4:	01530100 	cmpeq	r3, r0, lsl #2
    1ad8:	00003092 	muleq	r0, r2, r0
    1adc:	0015e600 	andseq	lr, r5, r0, lsl #12
    1ae0:	0015e200 	andseq	lr, r5, r0, lsl #4
    1ae4:	75621200 	strbvc	r1, [r2, #-512]!	; 0xfffffe00
    1ae8:	55010066 	strpl	r0, [r1, #-102]	; 0xffffff9a
    1aec:	13570801 	cmpne	r7, #65536	; 0x10000
    1af0:	91030000 	mrsls	r0, (UNDEF: 3)
    1af4:	6c147fb0 	ldcvs	15, cr7, [r4], {176}	; 0xb0
    1af8:	01006e65 	tsteq	r0, r5, ror #28
    1afc:	ee0a0156 	mcr	1, 0, r0, cr10, cr6, {2}
    1b00:	34000000 	strcc	r0, [r0], #-0
    1b04:	06000016 			; <UNDEFINED> instruction: 0x06000016
    1b08:	1c000016 	stcne	0, cr0, [r0], {22}
    1b0c:	0000068f 	andeq	r0, r0, pc, lsl #13
    1b10:	0a015701 	beq	5771c <__HEAP_SIZE+0x5671c>
    1b14:	00000029 	andeq	r0, r0, r9, lsr #32
    1b18:	00001753 	andeq	r1, r0, r3, asr r7
    1b1c:	00001749 	andeq	r1, r0, r9, asr #14
    1b20:	00042613 	andeq	r2, r4, r3, lsl r6
    1b24:	015a0100 	cmpeq	sl, r0, lsl #2
    1b28:	00137717 	andseq	r7, r3, r7, lsl r7
    1b2c:	08030500 	stmdaeq	r3, {r8, sl}
    1b30:	1c100040 	ldcne	0, cr0, [r0], {64}	; 0x40
    1b34:	000004e0 	andeq	r0, r0, r0, ror #9
    1b38:	08016f01 	stmdaeq	r1, {r0, r8, r9, sl, fp, sp, lr}
    1b3c:	00000b7d 	andeq	r0, r0, sp, ror fp
    1b40:	000017b5 			; <UNDEFINED> instruction: 0x000017b5
    1b44:	000017a9 	andeq	r1, r0, r9, lsr #15
    1b48:	0004971c 	andeq	r9, r4, ip, lsl r7
    1b4c:	017f0100 	cmneq	pc, r0, lsl #2
    1b50:	00008507 	andeq	r8, r0, r7, lsl #10
    1b54:	00181200 	andseq	r1, r8, r0, lsl #4
    1b58:	00180800 	andseq	r0, r8, r0, lsl #16
    1b5c:	6d741400 	cfldrdvs	mvd1, [r4, #-0]
    1b60:	80010070 	andhi	r0, r1, r0, ror r0
    1b64:	00290a01 	eoreq	r0, r9, r1, lsl #20
    1b68:	18550000 	ldmdane	r5, {}^	; <UNPREDICTABLE>
    1b6c:	18510000 	ldmdane	r1, {}^	; <UNPREDICTABLE>
    1b70:	aa1c0000 	bge	701b78 <__RAM_SIZE+0x601b78>
    1b74:	01000004 	tsteq	r0, r4
    1b78:	5f110181 	svcpl	0x00110181
    1b7c:	86000000 	strhi	r0, [r0], -r0
    1b80:	7a000018 	bvc	1be8 <__HEAP_SIZE+0xbe8>
    1b84:	1d000018 	stcne	0, cr0, [r0, #-96]	; 0xffffffa0
    1b88:	1000129a 	mulne	r0, sl, r2
    1b8c:	100012fa 	strdne	r1, [r0], -sl
    1b90:	00001134 	andeq	r1, r0, r4, lsr r1
    1b94:	00001a1c 	andeq	r1, r0, ip, lsl sl
    1b98:	019c0100 	orrseq	r0, ip, r0, lsl #2
    1b9c:	00003012 	andeq	r3, r0, r2, lsl r0
    1ba0:	0018d500 	andseq	sp, r8, r0, lsl #10
    1ba4:	0018d100 	andseq	sp, r8, r0, lsl #2
    1ba8:	a42b0000 	strtge	r0, [fp], #-0
    1bac:	1c100010 	ldcne	0, cr0, [r0], {16}
    1bb0:	2b00001b 	blcs	1c24 <__HEAP_SIZE+0xc24>
    1bb4:	100010b8 	strhne	r1, [r0], -r8
    1bb8:	00001b32 	andeq	r1, r0, r2, lsr fp
    1bbc:	0010ca2b 	andseq	ip, r0, fp, lsr #20
    1bc0:	001b2710 	andseq	r2, fp, r0, lsl r7
    1bc4:	10dc2b00 	sbcsne	r2, ip, r0, lsl #22
    1bc8:	1b271000 	blne	9c5bd0 <__RAM_SIZE+0x8c5bd0>
    1bcc:	ee2b0000 	cdp	0, 2, cr0, cr11, cr0, {0}
    1bd0:	32100010 	andscc	r0, r0, #16
    1bd4:	2b00001b 	blcs	1c48 <__HEAP_SIZE+0xc48>
    1bd8:	100010fe 	strdne	r1, [r0], -lr
    1bdc:	00001b32 	andeq	r1, r0, r2, lsr fp
    1be0:	00114620 	andseq	r4, r1, r0, lsr #12
    1be4:	00179110 	andseq	r9, r7, r0, lsl r1
    1be8:	0011b400 	andseq	fp, r1, r0, lsl #8
    1bec:	50011600 	andpl	r1, r1, r0, lsl #12
    1bf0:	7f9c9104 	svcvc	0x009c9104
    1bf4:	51011606 	tstpl	r1, r6, lsl #12
    1bf8:	7fa89104 	svcvc	0x00a89104
    1bfc:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    1c00:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1c04:	7b025301 	blvc	96810 <__HEAP_SIZE+0x95810>
    1c08:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1c0c:	f8030500 			; <UNDEFINED> instruction: 0xf8030500
    1c10:	1610003f 			; <UNDEFINED> instruction: 0x1610003f
    1c14:	01047d02 	tsteq	r4, r2, lsl #26
    1c18:	7d021633 	stcvc	6, cr1, [r2, #-204]	; 0xffffff34
    1c1c:	0c910308 	ldceq	3, cr0, [r1], {8}
    1c20:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1c24:	1091030c 	addsne	r0, r1, ip, lsl #6
    1c28:	64200006 	strtvs	r0, [r0], #-6
    1c2c:	91100011 	tstls	r0, r1, lsl r0
    1c30:	fe000017 	mcr2	0, 0, r0, cr0, cr7, {0}
    1c34:	16000011 			; <UNDEFINED> instruction: 0x16000011
    1c38:	91045001 	tstls	r4, r1
    1c3c:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    1c40:	91045101 	tstls	r4, r1, lsl #2
    1c44:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    1c48:	7a025201 	bvc	96454 <__HEAP_SIZE+0x95454>
    1c4c:	53011600 	movwpl	r1, #5632	; 0x1600
    1c50:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1c54:	05007d02 	streq	r7, [r0, #-3330]	; 0xfffff2fe
    1c58:	003ffc03 	eorseq	pc, pc, r3, lsl #24
    1c5c:	7d021610 	stcvc	6, cr1, [r2, #-64]	; 0xffffffc0
    1c60:	16340104 	ldrtne	r0, [r4], -r4, lsl #2
    1c64:	03087d02 	movweq	r7, #36098	; 0x8d02
    1c68:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    1c6c:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1c70:	00061091 	muleq	r6, r1, r0
    1c74:	00118c20 	andseq	r8, r1, r0, lsr #24
    1c78:	00179110 	andseq	r9, r7, r0, lsl r1
    1c7c:	00123800 	andseq	r3, r2, r0, lsl #16
    1c80:	50011600 	andpl	r1, r1, r0, lsl #12
    1c84:	7f9c9104 	svcvc	0x009c9104
    1c88:	51011606 	tstpl	r1, r6, lsl #12
    1c8c:	7fa89104 	svcvc	0x00a89104
    1c90:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    1c94:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1c98:	7b025301 	blvc	968a4 <__HEAP_SIZE+0x958a4>
    1c9c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1ca0:	0c910308 	ldceq	3, cr0, [r1], {8}
    1ca4:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1ca8:	1091030c 	addsne	r0, r1, ip, lsl #6
    1cac:	b0200006 	eorlt	r0, r0, r6
    1cb0:	89100011 	ldmdbhi	r0, {r0, r4}
    1cb4:	8100000b 	tsthi	r0, fp
    1cb8:	16000012 			; <UNDEFINED> instruction: 0x16000012
    1cbc:	91045001 	tstls	r4, r1
    1cc0:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    1cc4:	91045101 	tstls	r4, r1, lsl #2
    1cc8:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    1ccc:	7a025201 	bvc	964d8 <__HEAP_SIZE+0x954d8>
    1cd0:	53011600 	movwpl	r1, #5632	; 0x1600
    1cd4:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1cd8:	03007d02 	movweq	r7, #3330	; 0xd02
    1cdc:	162908f5 			; <UNDEFINED> instruction: 0x162908f5
    1ce0:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    1ce4:	02160075 	andseq	r0, r6, #117	; 0x75
    1ce8:	91030c7d 	tstls	r3, sp, ror ip
    1cec:	0216060c 	andseq	r0, r6, #12, 12	; 0xc00000
    1cf0:	9103107d 	tstls	r3, sp, ror r0
    1cf4:	2b000610 	blcs	353c <__HEAP_SIZE+0x253c>
    1cf8:	100011be 			; <UNDEFINED> instruction: 0x100011be
    1cfc:	00001b5e 	andeq	r1, r0, lr, asr fp
    1d00:	0011d42b 	andseq	sp, r1, fp, lsr #8
    1d04:	001b6910 	andseq	r6, fp, r0, lsl r9
    1d08:	11da2b00 	bicsne	r2, sl, r0, lsl #22
    1d0c:	1b3d1000 	blne	f45d14 <__RAM_SIZE+0xe45d14>
    1d10:	e62b0000 	strt	r0, [fp], -r0
    1d14:	5e100011 	mrcpl	0, 0, r0, cr0, cr1, {0}
    1d18:	2b00001b 	blcs	1d8c <__HEAP_SIZE+0xd8c>
    1d1c:	100011f8 	strdne	r1, [r0], -r8
    1d20:	00001b48 	andeq	r1, r0, r8, asr #22
    1d24:	0012042b 	andseq	r0, r2, fp, lsr #8
    1d28:	001b8a10 	andseq	r8, fp, r0, lsl sl
    1d2c:	120a2b00 	andne	r2, sl, #0, 22
    1d30:	1b951000 	blne	fe545d38 <__StackTop+0xc6445d38>
    1d34:	162b0000 	strtne	r0, [fp], -r0
    1d38:	5e100012 	mrcpl	0, 0, r0, cr0, cr2, {0}
    1d3c:	2b00001b 	blcs	1db0 <__HEAP_SIZE+0xdb0>
    1d40:	10001226 	andne	r1, r0, r6, lsr #4
    1d44:	00001b27 	andeq	r1, r0, r7, lsr #22
    1d48:	0012302b 	andseq	r3, r2, fp, lsr #32
    1d4c:	001b9510 	andseq	r9, fp, r0, lsl r5
    1d50:	123c2b00 	eorsne	r2, ip, #0, 22
    1d54:	1ba01000 	blne	fe805d5c <__StackTop+0xc6705d5c>
    1d58:	4a2b0000 	bmi	ac1d60 <__RAM_SIZE+0x9c1d60>
    1d5c:	3d100012 	ldccc	0, cr0, [r0, #-72]	; 0xffffffb8
    1d60:	2b00001b 	blcs	1dd4 <__HEAP_SIZE+0xdd4>
    1d64:	10001256 	andne	r1, r0, r6, asr r2
    1d68:	00001b5e 	andeq	r1, r0, lr, asr fp
    1d6c:	0012622b 	andseq	r6, r2, fp, lsr #4
    1d70:	001b3210 	andseq	r3, fp, r0, lsl r2
    1d74:	12702b00 	rsbsne	r2, r0, #0, 22
    1d78:	1b271000 	blne	9c5d80 <__RAM_SIZE+0x8c5d80>
    1d7c:	8a2b0000 	bhi	ac1d84 <__RAM_SIZE+0x9c1d84>
    1d80:	32100012 	andscc	r0, r0, #18
    1d84:	1500001b 	strne	r0, [r0, #-27]	; 0xffffffe5
    1d88:	100013a2 	andne	r1, r0, r2, lsr #7
    1d8c:	00001791 	muleq	r0, r1, r7
    1d90:	04500116 	ldrbeq	r0, [r0], #-278	; 0xfffffeea
    1d94:	067f9c91 			; <UNDEFINED> instruction: 0x067f9c91
    1d98:	04510116 	ldrbeq	r0, [r1], #-278	; 0xfffffeea
    1d9c:	067fa891 			; <UNDEFINED> instruction: 0x067fa891
    1da0:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1da4:	0116007a 	tsteq	r6, sl, ror r0
    1da8:	007b0253 	rsbseq	r0, fp, r3, asr r2
    1dac:	007d0216 	rsbseq	r0, sp, r6, lsl r2
    1db0:	7fb09103 	svcvc	0x00b09103
    1db4:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    1db8:	16007402 	strne	r7, [r0], -r2, lsl #8
    1dbc:	03087d02 	movweq	r7, #36098	; 0x8d02
    1dc0:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    1dc4:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1dc8:	00061091 	muleq	r6, r1, r0
    1dcc:	01331800 	teqeq	r3, r0, lsl #16
    1dd0:	13670000 	cmnne	r7, #0
    1dd4:	30190000 	andscc	r0, r9, r0
    1dd8:	1f000000 	svcne	0x00000000
    1ddc:	0fa31800 	svceq	0x00a31800
    1de0:	13770000 	cmnne	r7, #0
    1de4:	30190000 	andscc	r0, r9, r0
    1de8:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1dec:	13670300 	cmnne	r7, #0, 6
    1df0:	6f1a0000 	svcvs	0x001a0000
    1df4:	01000006 	tsteq	r0, r6
    1df8:	010f0132 	tsteq	pc, r2, lsr r1	; <UNPREDICTABLE>
    1dfc:	000000ee 	andeq	r0, r0, lr, ror #1
    1e00:	10000bc4 	andne	r0, r0, r4, asr #23
    1e04:	10000c8a 	andne	r0, r0, sl, lsl #25
    1e08:	000018f3 	strdeq	r1, [r0], -r3
    1e0c:	00150f01 	andseq	r0, r5, r1, lsl #30
    1e10:	756f0f00 	strbvc	r0, [pc, #-3840]!	; f18 <__Vectors_Size+0x758>
    1e14:	32010074 	andcc	r0, r1, #116	; 0x74
    1e18:	01062c01 	tsteq	r6, r1, lsl #24
    1e1c:	19340000 	ldmdbne	r4!, {}	; <UNPREDICTABLE>
    1e20:	192c0000 	stmdbne	ip!, {}	; <UNPREDICTABLE>
    1e24:	4a170000 	bmi	5c1e2c <__RAM_SIZE+0x4c1e2c>
    1e28:	01000004 	tsteq	r0, r4
    1e2c:	ee370132 	mrc	1, 1, r0, cr7, cr2, {1}
    1e30:	74000002 	strvc	r0, [r0], #-2
    1e34:	6c000019 	stcvs	0, cr0, [r0], {25}
    1e38:	0f000019 	svceq	0x00000019
    1e3c:	00786469 	rsbseq	r6, r8, r9, ror #8
    1e40:	46013201 	strmi	r3, [r1], -r1, lsl #4
    1e44:	000000ee 	andeq	r0, r0, lr, ror #1
    1e48:	000019b4 			; <UNDEFINED> instruction: 0x000019b4
    1e4c:	000019ac 	andeq	r1, r0, ip, lsr #19
    1e50:	00058e17 	andeq	r8, r5, r7, lsl lr
    1e54:	01320100 	teqeq	r2, r0, lsl #2
    1e58:	0000ee52 	andeq	lr, r0, r2, asr lr
    1e5c:	0019f000 	andseq	pc, r9, r0
    1e60:	0019ec00 	andseq	lr, r9, r0, lsl #24
    1e64:	04af1700 	strteq	r1, [pc], #1792	; 1e6c <__HEAP_SIZE+0xe6c>
    1e68:	32010000 	andcc	r0, r1, #0
    1e6c:	007e6d01 	rsbseq	r6, lr, r1, lsl #26
    1e70:	1a180000 	bne	601e78 <__RAM_SIZE+0x501e78>
    1e74:	1a0e0000 	bne	381e7c <__RAM_SIZE+0x281e7c>
    1e78:	e0100000 	ands	r0, r0, r0
    1e7c:	01000004 	tsteq	r0, r4
    1e80:	7d790132 	ldfvce	f0, [r9, #-200]!	; 0xffffff38
    1e84:	0200000b 	andeq	r0, r0, #11
    1e88:	70100891 	mulsvc	r0, r1, r8
    1e8c:	01000008 	tsteq	r0, r8
    1e90:	7e960132 	mrcvc	1, 4, r0, cr6, cr2, {1}
    1e94:	02000000 	andeq	r0, r0, #0
    1e98:	45101091 	ldrmi	r1, [r0, #-145]	; 0xffffff6f
    1e9c:	01000006 	tsteq	r0, r6
    1ea0:	30a90132 	adccc	r0, r9, r2, lsr r1
    1ea4:	02000000 	andeq	r0, r0, #0
    1ea8:	4b101891 	blmi	4080f4 <__RAM_SIZE+0x3080f4>
    1eac:	01000006 	tsteq	r0, r6
    1eb0:	30bc0132 	adcscc	r0, ip, r2, lsr r1
    1eb4:	02000000 	andeq	r0, r0, #0
    1eb8:	79171c91 	ldmdbvc	r7, {r0, r4, r7, sl, fp, ip}
    1ebc:	01000005 	tsteq	r0, r5
    1ec0:	30d00132 	sbcscc	r0, r0, r2, lsr r1
    1ec4:	6c000000 	stcvs	0, cr0, [r0], {-0}
    1ec8:	6800001a 	stmdavs	r0, {r1, r3, r4}
    1ecc:	1200001a 	andne	r0, r0, #26
    1ed0:	00667562 	rsbeq	r7, r6, r2, ror #10
    1ed4:	08013401 	stmdaeq	r1, {r0, sl, ip, sp}
    1ed8:	00001357 	andeq	r1, r0, r7, asr r3
    1edc:	7fb89103 	svcvc	0x00b89103
    1ee0:	6e656c14 	mcrvs	12, 3, r6, cr5, cr4, {0}
    1ee4:	01350100 	teqeq	r5, r0, lsl #2
    1ee8:	0000ee0a 	andeq	lr, r0, sl, lsl #28
    1eec:	001a9700 	andseq	r9, sl, r0, lsl #14
    1ef0:	001a8b00 	andseq	r8, sl, r0, lsl #22
    1ef4:	00c01e00 	sbceq	r1, r0, r0, lsl #28
    1ef8:	14b00000 	ldrtne	r0, [r0], #0
    1efc:	cd1c0000 	ldcgt	0, cr0, [ip, #-0]
    1f00:	01000005 	tsteq	r0, r5
    1f04:	3a12013f 	bcc	482408 <__RAM_SIZE+0x382408>
    1f08:	e7000001 	str	r0, [r0, -r1]
    1f0c:	e300001a 	movw	r0, #26
    1f10:	2b00001a 	blcs	1f80 <__HEAP_SIZE+0xf80>
    1f14:	10000c1c 	andne	r0, r0, ip, lsl ip
    1f18:	00001bab 	andeq	r1, r0, fp, lsr #23
    1f1c:	000c3c2b 	andeq	r3, ip, fp, lsr #24
    1f20:	001bab10 	andseq	sl, fp, r0, lsl fp
    1f24:	84150000 	ldrhi	r0, [r5], #-0
    1f28:	7010000c 	andsvc	r0, r0, ip
    1f2c:	16000016 			; <UNDEFINED> instruction: 0x16000016
    1f30:	91045001 	tstls	r4, r1
    1f34:	16067fac 	strne	r7, [r6], -ip, lsr #31
    1f38:	91045101 	tstls	r4, r1, lsl #2
    1f3c:	16067fb0 			; <UNDEFINED> instruction: 0x16067fb0
    1f40:	91045201 	tstls	r4, r1, lsl #4
    1f44:	16067fb4 			; <UNDEFINED> instruction: 0x16067fb4
    1f48:	7b025301 	blvc	96b54 <__HEAP_SIZE+0x95b54>
    1f4c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1f50:	b8910300 	ldmlt	r1, {r8, r9}
    1f54:	7d02167f 	stcvc	6, cr1, [r2, #-508]	; 0xfffffe04
    1f58:	00790204 	rsbseq	r0, r9, r4, lsl #4
    1f5c:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1f60:	94089104 	strls	r9, [r8], #-260	; 0xfffffefc
    1f64:	7d021601 	stcvc	6, cr1, [r2, #-4]
    1f68:	0077020c 	rsbseq	r0, r7, ip, lsl #4
    1f6c:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    1f70:	06189103 	ldreq	r9, [r8], -r3, lsl #2
    1f74:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    1f78:	061c9103 	ldreq	r9, [ip], -r3, lsl #2
    1f7c:	187d0216 	ldmdane	sp!, {r1, r2, r4, r9}^
    1f80:	00007a02 	andeq	r7, r0, r2, lsl #20
    1f84:	05591a00 	ldrbeq	r1, [r9, #-2560]	; 0xfffff600
    1f88:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    1f8c:	ee010f01 	cdp	15, 0, cr0, cr1, cr1, {0}
    1f90:	30000000 	andcc	r0, r0, r0
    1f94:	c410000b 	ldrgt	r0, [r0], #-11
    1f98:	0510000b 	ldreq	r0, [r0, #-11]
    1f9c:	0100001b 	tsteq	r0, fp, lsl r0
    1fa0:	00001670 	andeq	r1, r0, r0, ror r6
    1fa4:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
    1fa8:	01190100 	tsteq	r9, r0, lsl #2
    1fac:	00010627 	andeq	r0, r1, r7, lsr #12
    1fb0:	001b4200 	andseq	r4, fp, r0, lsl #4
    1fb4:	001b3e00 	andseq	r3, fp, r0, lsl #28
    1fb8:	044a1700 	strbeq	r1, [sl], #-1792	; 0xfffff900
    1fbc:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    1fc0:	02ee3201 	rsceq	r3, lr, #268435456	; 0x10000000
    1fc4:	1b670000 	blne	19c1fcc <__RAM_SIZE+0x18c1fcc>
    1fc8:	1b630000 	blne	18c1fd0 <__RAM_SIZE+0x17c1fd0>
    1fcc:	690f0000 	stmdbvs	pc, {}	; <UNPREDICTABLE>
    1fd0:	01007864 	tsteq	r0, r4, ror #16
    1fd4:	ee410119 	mcr	1, 2, r0, cr1, cr9, {0}
    1fd8:	8c000000 	stchi	0, cr0, [r0], {-0}
    1fdc:	8800001b 	stmdahi	r0, {r0, r1, r3, r4}
    1fe0:	1700001b 	smladne	r0, fp, r0, r0
    1fe4:	0000058e 	andeq	r0, r0, lr, lsl #11
    1fe8:	4d011901 	vstrmi.16	s2, [r1, #-2]	; <UNPREDICTABLE>
    1fec:	000000ee 	andeq	r0, r0, lr, ror #1
    1ff0:	00001bb1 			; <UNDEFINED> instruction: 0x00001bb1
    1ff4:	00001bad 	andeq	r1, r0, sp, lsr #23
    1ff8:	0004af17 	andeq	sl, r4, r7, lsl pc
    1ffc:	01190100 	tsteq	r9, r0, lsl #2
    2000:	00005f63 	andeq	r5, r0, r3, ror #30
    2004:	001bdc00 	andseq	sp, fp, r0, lsl #24
    2008:	001bd200 	andseq	sp, fp, r0, lsl #4
    200c:	04e01000 	strbteq	r1, [r0], #0
    2010:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2014:	0b7d6f01 	bleq	1f5dc20 <__RAM_SIZE+0x1e5dc20>
    2018:	91020000 	mrsls	r0, (UNDEF: 2)
    201c:	08701004 	ldmdaeq	r0!, {r2, ip}^
    2020:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2024:	005f8701 	subseq	r8, pc, r1, lsl #14
    2028:	91020000 	mrsls	r0, (UNDEF: 2)
    202c:	06451008 	strbeq	r1, [r5], -r8
    2030:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2034:	00309a01 	eorseq	r9, r0, r1, lsl #20
    2038:	91020000 	mrsls	r0, (UNDEF: 2)
    203c:	064b100c 	strbeq	r1, [fp], -ip
    2040:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2044:	0030ad01 	eorseq	sl, r0, r1, lsl #26
    2048:	91020000 	mrsls	r0, (UNDEF: 2)
    204c:	05791710 	ldrbeq	r1, [r9, #-1808]!	; 0xfffff8f0
    2050:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    2054:	0030c101 	eorseq	ip, r0, r1, lsl #2
    2058:	1c210000 	stcne	0, cr0, [r1], #-0
    205c:	1c1d0000 	ldcne	0, cr0, [sp], {-0}
    2060:	62120000 	andsvs	r0, r2, #0
    2064:	01006675 	tsteq	r0, r5, ror r6
    2068:	5708011b 	smladpl	r8, fp, r1, r0
    206c:	02000013 	andeq	r0, r0, #19
    2070:	6c144891 	ldcvs	8, cr4, [r4], {145}	; 0x91
    2074:	01006e65 	tsteq	r0, r5, ror #28
    2078:	ee0a011c 	mcr	1, 0, r0, cr10, cr12, {0}
    207c:	4c000000 	stcmi	0, cr0, [r0], {-0}
    2080:	4000001c 	andmi	r0, r0, ip, lsl r0
    2084:	1e00001c 	mcrne	0, 0, r0, cr0, cr12, {0}
    2088:	000000a0 	andeq	r0, r0, r0, lsr #1
    208c:	00001630 	andeq	r1, r0, r0, lsr r6
    2090:	0005cd1c 	andeq	ip, r5, ip, lsl sp
    2094:	01260100 			; <UNDEFINED> instruction: 0x01260100
    2098:	00013a12 	andeq	r3, r1, r2, lsl sl
    209c:	001ca400 	andseq	sl, ip, r0, lsl #8
    20a0:	001c9800 	andseq	r9, ip, r0, lsl #16
    20a4:	c0150000 	andsgt	r0, r5, r0
    20a8:	7010000b 	andsvc	r0, r0, fp
    20ac:	16000016 			; <UNDEFINED> instruction: 0x16000016
    20b0:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    20b4:	02160074 	andseq	r0, r6, #116	; 0x74
    20b8:	7702047d 	smlsdxvc	r2, sp, r4, r0
    20bc:	7d021600 	stcvc	6, cr1, [r2, #-0]
    20c0:	04910408 	ldreq	r0, [r1], #1032	; 0x408
    20c4:	02160194 	andseq	r0, r6, #148, 2	; 0x25
    20c8:	75020c7d 	strvc	r0, [r2, #-3197]	; 0xfffff383
    20cc:	7d021600 	stcvc	6, cr1, [r2, #-0]
    20d0:	0c910310 	ldceq	3, cr0, [r1], {16}
    20d4:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    20d8:	10910314 	addsne	r0, r1, r4, lsl r3
    20dc:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    20e0:	00760218 	rsbseq	r0, r6, r8, lsl r2
    20e4:	152c0000 	strne	r0, [ip, #-0]!
    20e8:	01000005 	tsteq	r0, r5
    20ec:	ee010fe3 	cdp	15, 0, cr0, cr1, cr3, {7}
    20f0:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    20f4:	30100009 	andscc	r0, r0, r9
    20f8:	1210000b 	andsne	r0, r0, #11
    20fc:	0100001d 	tsteq	r0, sp, lsl r0
    2100:	00001791 	muleq	r0, r1, r7
    2104:	74756f2d 	ldrbtvc	r6, [r5], #-3885	; 0xfffff0d3
    2108:	29e30100 	stmibcs	r3!, {r8}^
    210c:	00000106 	andeq	r0, r0, r6, lsl #2
    2110:	00001d5c 	andeq	r1, r0, ip, asr sp
    2114:	00001d56 	andeq	r1, r0, r6, asr sp
    2118:	00044a2e 	andeq	r4, r4, lr, lsr #20
    211c:	34e30100 	strbtcc	r0, [r3], #256	; 0x100
    2120:	000002ee 	andeq	r0, r0, lr, ror #5
    2124:	00001d8e 	andeq	r1, r0, lr, lsl #27
    2128:	00001d88 	andeq	r1, r0, r8, lsl #27
    212c:	7864692d 	stmdavc	r4!, {r0, r2, r3, r5, r8, fp, sp, lr}^
    2130:	43e30100 	mvnmi	r0, #0, 2
    2134:	000000ee 	andeq	r0, r0, lr, ror #1
    2138:	00001dc0 	andeq	r1, r0, r0, asr #27
    213c:	00001dba 			; <UNDEFINED> instruction: 0x00001dba
    2140:	00058e2e 	andeq	r8, r5, lr, lsr #28
    2144:	4fe30100 	svcmi	0x00e30100
    2148:	000000ee 	andeq	r0, r0, lr, ror #1
    214c:	00001df2 	strdeq	r1, [r0], -r2
    2150:	00001dec 	andeq	r1, r0, ip, ror #27
    2154:	6675622d 	ldrbtvs	r6, [r5], -sp, lsr #4
    2158:	5de30100 	stfple	f0, [r3]
    215c:	000002ee 	andeq	r0, r0, lr, ror #5
    2160:	00001e22 	andeq	r1, r0, r2, lsr #28
    2164:	00001e1e 	andeq	r1, r0, lr, lsl lr
    2168:	6e656c2d 	cdpvs	12, 6, cr6, cr5, cr13, {1}
    216c:	69e30100 	stmibvs	r3!, {r8}^
    2170:	000000ee 	andeq	r0, r0, lr, ror #1
    2174:	00001e74 	andeq	r1, r0, r4, ror lr
    2178:	00001e42 	andeq	r1, r0, r2, asr #28
    217c:	0004e02e 	andeq	lr, r4, lr, lsr #32
    2180:	73e30100 	mvnvc	r0, #0, 2
    2184:	00000b7d 	andeq	r0, r0, sp, ror fp
    2188:	00001fa8 	andeq	r1, r0, r8, lsr #31
    218c:	00001fa4 	andeq	r1, r0, r4, lsr #31
    2190:	0008702e 	andeq	r7, r8, lr, lsr #32
    2194:	8ae30100 	bhi	ff8c259c <__StackTop+0xc77c259c>
    2198:	00000030 	andeq	r0, r0, r0, lsr r0
    219c:	00001fcc 	andeq	r1, r0, ip, asr #31
    21a0:	00001fc8 	andeq	r1, r0, r8, asr #31
    21a4:	0006452e 	andeq	r4, r6, lr, lsr #10
    21a8:	9de30100 	stflse	f0, [r3]
    21ac:	00000030 	andeq	r0, r0, r0, lsr r0
    21b0:	00001ff0 	strdeq	r1, [r0], -r0
    21b4:	00001fec 	andeq	r1, r0, ip, ror #31
    21b8:	00064b2e 	andeq	r4, r6, lr, lsr #22
    21bc:	b0e30100 	rsclt	r0, r3, r0, lsl #2
    21c0:	00000030 	andeq	r0, r0, r0, lsr r0
    21c4:	00002014 	andeq	r2, r0, r4, lsl r0
    21c8:	00002010 	andeq	r2, r0, r0, lsl r0
    21cc:	0005792e 	andeq	r7, r5, lr, lsr #18
    21d0:	c4e30100 	strbtgt	r0, [r3], #256	; 0x100
    21d4:	00000030 	andeq	r0, r0, r0, lsr r0
    21d8:	00002037 	andeq	r2, r0, r7, lsr r0
    21dc:	00002033 	andeq	r2, r0, r3, lsr r0
    21e0:	000ab215 	andeq	fp, sl, r5, lsl r2
    21e4:	00179110 	andseq	r9, r7, r0, lsl r1
    21e8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    21ec:	00750200 	rsbseq	r0, r5, r0, lsl #4
    21f0:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    21f4:	16007402 	strne	r7, [r0], -r2, lsl #8
    21f8:	02087d02 	andeq	r7, r8, #2, 26	; 0x80
    21fc:	02160077 	andseq	r0, r6, #119	; 0x77
    2200:	76020c7d 			; <UNDEFINED> instruction: 0x76020c7d
    2204:	2c000000 	stccs	0, cr0, [r0], {-0}
    2208:	000005fd 	strdeq	r0, [r0], -sp
    220c:	010fc701 	tsteq	pc, r1, lsl #14
    2210:	000000ee 	andeq	r0, r0, lr, ror #1
    2214:	1000097a 	andne	r0, r0, sl, ror r9
    2218:	100009f8 	strdne	r0, [r0], -r8
    221c:	00002057 	andeq	r2, r0, r7, asr r0
    2220:	0018d801 	andseq	sp, r8, r1, lsl #16
    2224:	756f2d00 	strbvc	r2, [pc, #-3328]!	; 152c <__HEAP_SIZE+0x52c>
    2228:	c7010074 	smlsdxgt	r1, r4, r0, r0
    222c:	00010625 	andeq	r0, r1, r5, lsr #12
    2230:	00209f00 	eoreq	r9, r0, r0, lsl #30
    2234:	00209b00 	eoreq	r9, r0, r0, lsl #22
    2238:	044a2e00 	strbeq	r2, [sl], #-3584	; 0xfffff200
    223c:	c7010000 	strgt	r0, [r1, -r0]
    2240:	0002ee30 	andeq	lr, r2, r0, lsr lr
    2244:	0020c100 	eoreq	ip, r0, r0, lsl #2
    2248:	0020bd00 	eoreq	fp, r0, r0, lsl #26
    224c:	64692d00 	strbtvs	r2, [r9], #-3328	; 0xfffff300
    2250:	c7010078 	smlsdxgt	r1, r8, r0, r0
    2254:	0000ee3f 	andeq	lr, r0, pc, lsr lr
    2258:	0020eb00 	eoreq	lr, r0, r0, lsl #22
    225c:	0020df00 	eoreq	sp, r0, r0, lsl #30
    2260:	058e2e00 	streq	r2, [lr, #3584]	; 0xe00
    2264:	c7010000 	strgt	r0, [r1, -r0]
    2268:	0000ee4b 	andeq	lr, r0, fp, asr #28
    226c:	00213900 	eoreq	r3, r1, r0, lsl #18
    2270:	00213500 	eoreq	r3, r1, r0, lsl #10
    2274:	75622d00 	strbvc	r2, [r2, #-3328]!	; 0xfffff300
    2278:	c7010066 	strgt	r0, [r1, -r6, rrx]
    227c:	00024c5f 	andeq	r4, r2, pc, asr ip
    2280:	00215b00 	eoreq	r5, r1, r0, lsl #22
    2284:	00215700 	eoreq	r5, r1, r0, lsl #14
    2288:	656c2d00 	strbvs	r2, [ip, #-3328]!	; 0xfffff300
    228c:	c701006e 	strgt	r0, [r1, -lr, rrx]
    2290:	0000ee6b 	andeq	lr, r0, fp, ror #28
    2294:	00217f00 	eoreq	r7, r1, r0, lsl #30
    2298:	00217b00 	eoreq	r7, r1, r0, lsl #22
    229c:	064b2e00 	strbeq	r2, [fp], -r0, lsl #28
    22a0:	c7010000 	strgt	r0, [r1, -r0]
    22a4:	0000307d 	andeq	r3, r0, sp, ror r0
    22a8:	0021a200 	eoreq	sl, r1, r0, lsl #4
    22ac:	00219e00 	eoreq	r9, r1, r0, lsl #28
    22b0:	05792e00 	ldrbeq	r2, [r9, #-3584]!	; 0xfffff200
    22b4:	c7010000 	strgt	r0, [r1, -r0]
    22b8:	00003091 	muleq	r0, r1, r0
    22bc:	0021c600 	eoreq	ip, r1, r0, lsl #12
    22c0:	0021c200 	eoreq	ip, r1, r0, lsl #4
    22c4:	04cc2f00 	strbeq	r2, [ip], #3840	; 0xf00
    22c8:	c9010000 	stmdbgt	r1, {}	; <UNPREDICTABLE>
    22cc:	0000fa10 	andeq	pc, r0, r0, lsl sl	; <UNPREDICTABLE>
    22d0:	0021ec00 	eoreq	lr, r1, r0, lsl #24
    22d4:	0021e600 	eoreq	lr, r1, r0, lsl #12
    22d8:	00881e00 	addeq	r1, r8, r0, lsl #28
    22dc:	189d0000 	ldmne	sp, {}	; <UNPREDICTABLE>
    22e0:	69300000 	ldmdbvs	r0!, {}	; <UNPREDICTABLE>
    22e4:	11cd0100 	bicne	r0, sp, r0, lsl #2
    22e8:	000000ee 	andeq	r0, r0, lr, ror #1
    22ec:	0000221b 	andeq	r2, r0, fp, lsl r2
    22f0:	00002219 	andeq	r2, r0, r9, lsl r2
    22f4:	0009ae22 	andeq	sl, r9, r2, lsr #28
    22f8:	50011610 	andpl	r1, r1, r0, lsl r6
    22fc:	16200802 	strtne	r0, [r0], -r2, lsl #16
    2300:	76025101 	strvc	r5, [r2], -r1, lsl #2
    2304:	52011600 	andpl	r1, r1, #0, 12
    2308:	167f7b02 	ldrbtne	r7, [pc], -r2, lsl #22
    230c:	77025301 	strvc	r5, [r2, -r1, lsl #6]
    2310:	21000000 	mrscs	r0, (UNDEF: 0)
    2314:	100009cc 	andne	r0, r0, ip, asr #19
    2318:	000018b9 			; <UNDEFINED> instruction: 0x000018b9
    231c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    2320:	01160076 	tsteq	r6, r6, ror r0
    2324:	7f780252 	svcvc	0x00780252
    2328:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    232c:	22000077 	andcs	r0, r0, #119	; 0x77
    2330:	100009f4 	strdne	r0, [r0], -r4
    2334:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    2338:	01162008 	tsteq	r6, r8
    233c:	00760251 	rsbseq	r0, r6, r1, asr r2
    2340:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    2344:	01167f74 	tsteq	r6, r4, ror pc
    2348:	00770253 	rsbseq	r0, r7, r3, asr r2
    234c:	95310000 	ldrls	r0, [r1, #-0]!
    2350:	01000005 	tsteq	r0, r5
    2354:	300115bc 			; <UNDEFINED> instruction: 0x300115bc
    2358:	56000000 	strpl	r0, [r0], -r0
    235c:	7a100009 	bvc	402388 <__RAM_SIZE+0x302388>
    2360:	02100009 	andseq	r0, r0, #9
    2364:	4001007d 	andmi	r0, r1, sp, ror r0
    2368:	2d000019 	stccs	0, cr0, [r0, #-100]	; 0xffffff9c
    236c:	00727473 	rsbseq	r7, r2, r3, ror r4
    2370:	4028bc01 	eormi	fp, r8, r1, lsl #24
    2374:	32000019 	andcc	r0, r0, #25
    2378:	2e000022 	cdpcs	0, 0, cr0, cr0, cr2, {1}
    237c:	30000022 	andcc	r0, r0, r2, lsr #32
    2380:	be010069 	cdplt	0, 0, cr0, cr1, cr9, {3}
    2384:	00003010 	andeq	r3, r0, r0, lsl r0
    2388:	00225600 	eoreq	r5, r2, r0, lsl #12
    238c:	00225000 	eoreq	r5, r2, r0
    2390:	19463200 	stmdbne	r6, {r9, ip, sp}^
    2394:	09700000 	ldmdbeq	r0!, {}^	; <UNPREDICTABLE>
    2398:	00001000 	andeq	r1, r0, r0
    239c:	10000970 	andne	r0, r0, r0, ror r9
    23a0:	10000974 	andne	r0, r0, r4, ror r9
    23a4:	240abf01 	strcs	fp, [sl], #-3841	; 0xfffff0ff
    23a8:	00001958 	andeq	r1, r0, r8, asr r9
    23ac:	00002284 	andeq	r2, r0, r4, lsl #5
    23b0:	00002280 	andeq	r2, r0, r0, lsl #5
    23b4:	04090000 	streq	r0, [r9], #-0
    23b8:	0000024c 	andeq	r0, r0, ip, asr #4
    23bc:	0005c933 	andeq	ip, r5, r3, lsr r9
    23c0:	14b50100 	ldrtne	r0, [r5], #256	; 0x100
    23c4:	000b7d01 	andeq	r7, fp, r1, lsl #26
    23c8:	19640300 	stmdbne	r4!, {r8, r9}^
    23cc:	63340000 	teqvs	r4, #0
    23d0:	b5010068 	strlt	r0, [r1, #-104]	; 0xffffff98
    23d4:	00013323 	andeq	r3, r1, r3, lsr #6
    23d8:	9b330000 	blls	cc23e0 <__RAM_SIZE+0xbc23e0>
    23dc:	01000005 	tsteq	r0, r5
    23e0:	30011cab 	andcc	r1, r1, fp, lsr #25
    23e4:	03000000 	movweq	r0, #0
    23e8:	00001999 	muleq	r0, r9, r9
    23ec:	72747334 	rsbsvc	r7, r4, #52, 6	; 0xd0000000
    23f0:	33ab0100 			; <UNDEFINED> instruction: 0x33ab0100
    23f4:	0000024c 	andeq	r0, r0, ip, asr #4
    23f8:	00048f35 	andeq	r8, r4, r5, lsr pc
    23fc:	3fab0100 	svccc	0x00ab0100
    2400:	000000ee 	andeq	r0, r0, lr, ror #1
    2404:	01007336 	tsteq	r0, r6, lsr r3
    2408:	024c0fad 	subeq	r0, ip, #692	; 0x2b4
    240c:	37000000 	strcc	r0, [r0, -r0]
    2410:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
    2414:	01149f01 	tsteq	r4, r1, lsl #30
	...
    2420:	000022a4 	andeq	r2, r0, r4, lsr #5
    2424:	001a0401 	andseq	r0, sl, r1, lsl #8
    2428:	05f32e00 	ldrbeq	r2, [r3, #3584]!	; 0xe00
    242c:	9f010000 	svcls	0x00010000
    2430:	00013322 	andeq	r3, r1, r2, lsr #6
    2434:	0022d600 	eoreq	sp, r2, r0, lsl #12
    2438:	0022d000 	eoreq	sp, r2, r0
    243c:	044a2e00 	strbeq	r2, [sl], #-3584	; 0xfffff200
    2440:	9f010000 	svcls	0x00010000
    2444:	0000e033 	andeq	lr, r0, r3, lsr r0
    2448:	00230800 	eoreq	r0, r3, r0, lsl #16
    244c:	00230200 	eoreq	r0, r3, r0, lsl #4
    2450:	64692d00 	strbtvs	r2, [r9], #-3328	; 0xfffff300
    2454:	9f010078 	svcls	0x00010078
    2458:	0000ee42 	andeq	lr, r0, r2, asr #28
    245c:	00233a00 	eoreq	r3, r3, r0, lsl #20
    2460:	00233400 	eoreq	r3, r3, r0, lsl #8
    2464:	058e2e00 	streq	r2, [lr, #3584]	; 0xe00
    2468:	9f010000 	svcls	0x00010000
    246c:	0000ee4e 	andeq	lr, r0, lr, asr #28
    2470:	00236c00 	eoreq	r6, r3, r0, lsl #24
    2474:	00236600 	eoreq	r6, r3, r0, lsl #12
    2478:	85380000 	ldrhi	r0, [r8, #-0]!
    247c:	01000004 	tsteq	r0, r4
    2480:	98011495 	stmdals	r1, {r0, r2, r4, r7, sl, ip}
    2484:	a410001a 	ldrge	r0, [r0], #-26	; 0xffffffe6
    2488:	9810001a 	ldmdals	r0, {r1, r3, r4}
    248c:	01000023 	tsteq	r0, r3, lsr #32
    2490:	00001a78 	andeq	r1, r0, r8, ror sl
    2494:	0005f32e 	andeq	pc, r5, lr, lsr #6
    2498:	23950100 	orrscs	r0, r5, #0, 2
    249c:	00000133 	andeq	r0, r0, r3, lsr r1
    24a0:	000023bc 			; <UNDEFINED> instruction: 0x000023bc
    24a4:	000023b8 			; <UNDEFINED> instruction: 0x000023b8
    24a8:	00044a2e 	andeq	r4, r4, lr, lsr #20
    24ac:	34950100 	ldrcc	r0, [r5], #256	; 0x100
    24b0:	000000e0 	andeq	r0, r0, r0, ror #1
    24b4:	000023e1 	andeq	r2, r0, r1, ror #7
    24b8:	000023dd 	ldrdeq	r2, [r0], -sp
    24bc:	7864692d 	stmdavc	r4!, {r0, r2, r3, r5, r8, fp, sp, lr}^
    24c0:	43950100 	orrsmi	r0, r5, #0, 2
    24c4:	000000ee 	andeq	r0, r0, lr, ror #1
    24c8:	00002406 	andeq	r2, r0, r6, lsl #8
    24cc:	00002402 	andeq	r2, r0, r2, lsl #8
    24d0:	00058e2e 	andeq	r8, r5, lr, lsr #28
    24d4:	4f950100 	svcmi	0x00950100
    24d8:	000000ee 	andeq	r0, r0, lr, ror #1
    24dc:	0000242b 	andeq	r2, r0, fp, lsr #8
    24e0:	00002427 	andeq	r2, r0, r7, lsr #8
    24e4:	001aa22b 	andseq	sl, sl, fp, lsr #4
    24e8:	001bb610 	andseq	fp, fp, r0, lsl r6
    24ec:	33390000 	teqcc	r9, #0
    24f0:	01000005 	tsteq	r0, r5
    24f4:	5401148e 	strpl	r1, [r1], #-1166	; 0xfffffb72
    24f8:	56100009 	ldrpl	r0, [r0], -r9
    24fc:	02100009 	andseq	r0, r0, #9
    2500:	ca01007d 	bgt	426fc <__HEAP_SIZE+0x416fc>
    2504:	3a00001a 	bcc	2574 <__HEAP_SIZE+0x1574>
    2508:	000005f3 	strdeq	r0, [r0], -r3
    250c:	33238e01 			; <UNDEFINED> instruction: 0x33238e01
    2510:	01000001 	tsteq	r0, r1
    2514:	044a3a50 	strbeq	r3, [sl], #-2640	; 0xfffff5b0
    2518:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    251c:	0000e034 	andeq	lr, r0, r4, lsr r0
    2520:	3b510100 	blcc	1442928 <__RAM_SIZE+0x1342928>
    2524:	00786469 	rsbseq	r6, r8, r9, ror #8
    2528:	ee438e01 	cdp	14, 4, cr8, cr3, cr1, {0}
    252c:	01000000 	mrseq	r0, (UNDEF: 0)
    2530:	058e3a52 	streq	r3, [lr, #2642]	; 0xa52
    2534:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    2538:	0000ee4f 	andeq	lr, r0, pc, asr #28
    253c:	00530100 	subseq	r0, r3, r0, lsl #2
    2540:	00044539 	andeq	r4, r4, r9, lsr r5
    2544:	14850100 	strne	r0, [r5], #256	; 0x100
    2548:	00000001 	andeq	r0, r0, r1
    254c:	00000000 	andeq	r0, r0, r0
    2550:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    2554:	001b1c01 	andseq	r1, fp, r1, lsl #24
    2558:	05f33a00 	ldrbeq	r3, [r3, #2560]!	; 0xa00
    255c:	85010000 	strhi	r0, [r1, #-0]
    2560:	00013325 	andeq	r3, r1, r5, lsr #6
    2564:	3a500100 	bcc	140296c <__RAM_SIZE+0x130296c>
    2568:	0000044a 	andeq	r0, r0, sl, asr #8
    256c:	e0368501 	eors	r8, r6, r1, lsl #10
    2570:	01000000 	mrseq	r0, (UNDEF: 0)
    2574:	64693b51 	strbtvs	r3, [r9], #-2897	; 0xfffff4af
    2578:	85010078 	strhi	r0, [r1, #-120]	; 0xffffff88
    257c:	0000ee45 	andeq	lr, r0, r5, asr #28
    2580:	3a520100 	bcc	1482988 <__RAM_SIZE+0x1382988>
    2584:	0000058e 	andeq	r0, r0, lr, lsl #11
    2588:	ee518501 	cdp	5, 5, cr8, cr1, cr1, {0}
    258c:	01000000 	mrseq	r0, (UNDEF: 0)
    2590:	013c0053 	teqeq	ip, r3, asr r0
    2594:	0005d801 	andeq	sp, r5, r1, lsl #16
    2598:	0005d800 	andeq	sp, r5, r0, lsl #16
    259c:	01013c00 	tsteq	r1, r0, lsl #24
    25a0:	0000057f 	andeq	r0, r0, pc, ror r5
    25a4:	0000057f 	andeq	r0, r0, pc, ror r5
    25a8:	6001013c 	andvs	r0, r1, ip, lsr r1
    25ac:	60000006 	andvs	r0, r0, r6
    25b0:	3c000006 	stccc	0, cr0, [r0], {6}
    25b4:	041a0101 	ldreq	r0, [sl], #-257	; 0xfffffeff
    25b8:	041a0000 	ldreq	r0, [sl], #-0
    25bc:	013c0000 	teqeq	ip, r0
    25c0:	0005ab01 	andeq	sl, r5, r1, lsl #22
    25c4:	0005ab00 	andeq	sl, r5, r0, lsl #22
    25c8:	01013c00 	tsteq	r1, r0, lsl #24
    25cc:	000004e9 	andeq	r0, r0, r9, ror #9
    25d0:	000004e9 	andeq	r0, r0, r9, ror #9
    25d4:	0601013c 			; <UNDEFINED> instruction: 0x0601013c
    25d8:	06000006 	streq	r0, [r0], -r6
    25dc:	3c000006 	stccc	0, cr0, [r0], {6}
    25e0:	049d0101 	ldreq	r0, [sp], #257	; 0x101
    25e4:	049d0000 	ldreq	r0, [sp], #0
    25e8:	013c0000 	teqeq	ip, r0
    25ec:	00046901 	andeq	r6, r4, r1, lsl #18
    25f0:	00046900 	andeq	r6, r4, r0, lsl #18
    25f4:	01013c00 	tsteq	r1, r0, lsl #24
    25f8:	0000054a 	andeq	r0, r0, sl, asr #10
    25fc:	0000054a 	andeq	r0, r0, sl, asr #10
    2600:	be01013c 	mcrlt	1, 0, r0, cr1, cr12, {1}
    2604:	be000004 	cdplt	0, 0, cr0, cr0, cr4, {0}
    2608:	3c000004 	stccc	0, cr0, [r0], {4}
    260c:	056c0101 	strbeq	r0, [ip, #-257]!	; 0xfffffeff
    2610:	056c0000 	strbeq	r0, [ip, #-0]!
    2614:	013c0000 	teqeq	ip, r0
    2618:	00062401 	andeq	r2, r6, r1, lsl #8
    261c:	00062400 	andeq	r2, r6, r0, lsl #8
    2620:	01013c00 	tsteq	r1, r0, lsl #24
    2624:	00000613 	andeq	r0, r0, r3, lsl r6
    2628:	00000613 	andeq	r0, r0, r3, lsl r6
    262c:	7c01013d 	stfvcs	f0, [r1], {61}	; 0x3d
    2630:	7c000004 	stcvc	0, cr0, [r0], {4}
    2634:	07000004 	streq	r0, [r0, -r4]
    2638:	4f000531 	svcmi	0x00000531
    263c:	02000002 	andeq	r0, r0, #2
    2640:	0005f700 	andeq	pc, r5, r0, lsl #14
    2644:	cf010400 	svcgt	0x00010400
    2648:	0c000000 	stceq	0, cr0, [r0], {-0}
    264c:	000006ad 	andeq	r0, r0, sp, lsr #13
    2650:	00000020 	andeq	r0, r0, r0, lsr #32
    2654:	000001d8 	ldrdeq	r0, [r0], -r8
	...
    2660:	0000165a 	andeq	r1, r0, sl, asr r6
    2664:	9f060102 	svcls	0x00060102
    2668:	03000000 	movweq	r0, #0
    266c:	0000028c 	andeq	r0, r0, ip, lsl #5
    2670:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
    2674:	02000000 	andeq	r0, r0, #0
    2678:	009d0801 	addseq	r0, sp, r1, lsl #16
    267c:	02020000 	andeq	r0, r2, #0
    2680:	00021605 	andeq	r1, r2, r5, lsl #12
    2684:	07020200 	streq	r0, [r2, -r0, lsl #4]
    2688:	000000bc 	strheq	r0, [r0], -ip
    268c:	da050402 	ble	14369c <__RAM_SIZE+0x4369c>
    2690:	03000001 	movweq	r0, #1
    2694:	000002ef 	andeq	r0, r0, pc, ror #5
    2698:	64194f02 	ldrvs	r4, [r9], #-3842	; 0xfffff0fe
    269c:	02000000 	andeq	r0, r0, #0
    26a0:	01b70704 			; <UNDEFINED> instruction: 0x01b70704
    26a4:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    26a8:	0001d505 	andeq	sp, r1, r5, lsl #10
    26ac:	07080200 	streq	r0, [r8, -r0, lsl #4]
    26b0:	000001b2 			; <UNDEFINED> instruction: 0x000001b2
    26b4:	69050404 	stmdbvs	r5, {r2, sl}
    26b8:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    26bc:	01bc0704 			; <UNDEFINED> instruction: 0x01bc0704
    26c0:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>
    26c4:	03000004 	movweq	r0, #4
    26c8:	008017d1 	ldrdeq	r1, [r0], r1	; <UNPREDICTABLE>
    26cc:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    26d0:	0001c904 	andeq	ip, r1, r4, lsl #18
    26d4:	08010200 	stmdaeq	r1, {r9}
    26d8:	000000a6 	andeq	r0, r0, r6, lsr #1
    26dc:	00009a05 	andeq	r9, r0, r5, lsl #20
    26e0:	a1040600 	tstge	r4, r0, lsl #12
    26e4:	03000000 	movweq	r0, #0
    26e8:	0000028e 	andeq	r0, r0, lr, lsl #5
    26ec:	30131804 	andscc	r1, r3, r4, lsl #16
    26f0:	03000000 	movweq	r0, #0
    26f4:	000002f1 	strdeq	r0, [r0], -r1
    26f8:	58143004 	ldmdapl	r4, {r2, ip, sp}
    26fc:	07000000 	streq	r0, [r0, -r0]
    2700:	00069b01 	andeq	r9, r6, r1, lsl #22
    2704:	083f0100 	ldmdaeq	pc!, {r8}	; <UNPREDICTABLE>
    2708:	00008701 	andeq	r8, r0, r1, lsl #14
	...
    2714:	00244c00 	eoreq	r4, r4, r0, lsl #24
    2718:	013b0100 	teqeq	fp, r0, lsl #2
    271c:	4a080000 	bmi	202724 <__RAM_SIZE+0x102724>
    2720:	01000004 	tsteq	r0, r4
    2724:	013b1b3f 	teqeq	fp, pc, lsr fp
    2728:	24700000 	ldrbtcs	r0, [r0], #-0
    272c:	246c0000 	strbtcs	r0, [ip], #-0
    2730:	92080000 	andls	r0, r8, #0
    2734:	01000004 	tsteq	r0, r4
    2738:	00872a3f 	addeq	r2, r7, pc, lsr sl
    273c:	24920000 	ldrcs	r0, [r2], #0
    2740:	248e0000 	strcs	r0, [lr], #0
    2744:	63090000 	movwvs	r0, #36864	; 0x9000
    2748:	40010068 	andmi	r0, r1, r8, rrx
    274c:	0000ac0d 	andeq	sl, r0, sp, lsl #24
    2750:	0024b600 	eoreq	fp, r4, r0, lsl #12
    2754:	0024b000 	eoreq	fp, r4, r0
    2758:	74690900 	strbtvc	r0, [r9], #-2304	; 0xfffff700
    275c:	0c410100 	stfeqe	f0, [r1], {-0}
    2760:	00000087 	andeq	r0, r0, r7, lsl #1
    2764:	000024e4 	andeq	r2, r0, r4, ror #9
    2768:	000024e0 	andeq	r2, r0, r0, ror #9
    276c:	0000000a 	andeq	r0, r0, sl
    2770:	00024400 	andeq	r4, r2, r0, lsl #8
    2774:	04060000 	streq	r0, [r6], #-0
    2778:	000000ac 	andeq	r0, r0, ip, lsr #1
    277c:	06c6010b 	strbeq	r0, [r6], fp, lsl #2
    2780:	3b010000 	blcc	42788 <__HEAP_SIZE+0x41788>
    2784:	00000106 	andeq	r0, r0, r6, lsl #2
    2788:	00000000 	andeq	r0, r0, r0
    278c:	25030000 	strcs	r0, [r3, #-0]
    2790:	82010000 	andhi	r0, r1, #0
    2794:	08000001 	stmdaeq	r0, {r0}
    2798:	00000694 	muleq	r0, r4, r6
    279c:	a61c3b01 	ldrge	r3, [ip], -r1, lsl #22
    27a0:	27000000 	strcs	r0, [r0, -r0]
    27a4:	23000025 	movwcs	r0, #37	; 0x25
    27a8:	0c000025 	stceq	0, cr0, [r0], {37}	; 0x25
    27ac:	00000000 	andeq	r0, r0, r0
    27b0:	00000198 	muleq	r0, r8, r1
    27b4:	0350010d 	cmpeq	r0, #1073741827	; 0x40000003
    27b8:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    27bc:	84010e00 	strhi	r0, [r1], #-3584	; 0xfffff200
    27c0:	01000000 	mrseq	r0, (UNDEF: 0)
    27c4:	04010632 	streq	r0, [r1], #-1586	; 0xfffff9ce
    27c8:	2810001b 	ldmdacs	r0, {r0, r1, r3, r4}
    27cc:	0210001b 	andseq	r0, r0, #27
    27d0:	0701007d 	smlsdxeq	r1, sp, r0, r0
    27d4:	00009801 	andeq	r9, r0, r1, lsl #16
    27d8:	05dd0500 	ldrbeq	r0, [sp, #1280]	; 0x500
    27dc:	00007901 	andeq	r7, r0, r1, lsl #18
    27e0:	001ae400 	andseq	lr, sl, r0, lsl #8
    27e4:	001b0210 	andseq	r0, fp, r0, lsl r2
    27e8:	00254810 	eoreq	r4, r5, r0, lsl r8
    27ec:	01f80100 	mvnseq	r0, r0, lsl #2
    27f0:	94080000 	strls	r0, [r8], #-0
    27f4:	01000006 	tsteq	r0, r6
    27f8:	00a61628 	adceq	r1, r6, r8, lsr #12
    27fc:	256c0000 	strbcs	r0, [ip, #-0]!
    2800:	25680000 	strbcs	r0, [r8, #-0]!
    2804:	c00f0000 	andgt	r0, pc, r0
    2808:	01000006 	tsteq	r0, r6
    280c:	00790929 	rsbseq	r0, r9, r9, lsr #18
    2810:	258e0000 	strcs	r0, [lr]
    2814:	258a0000 	strcs	r0, [sl]
    2818:	f00a0000 			; <UNDEFINED> instruction: 0xf00a0000
    281c:	1210001a 	andsne	r0, r0, #26
    2820:	0c000002 	stceq	0, cr0, [r0], {2}
    2824:	10001afe 	strdne	r1, [r0], -lr
    2828:	00000212 	andeq	r0, r0, r2, lsl r2
    282c:	0150010d 	cmpeq	r0, sp, lsl #2
    2830:	1000003a 	andne	r0, r0, sl, lsr r0
    2834:	0006d001 	andeq	sp, r6, r1
    2838:	05230100 	streq	r0, [r3, #-256]!	; 0xffffff00
    283c:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    2848:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    284c:	7c011101 	stfvcs	f1, [r1], {1}
    2850:	01000004 	tsteq	r0, r4
    2854:	7901051d 	stmdbvc	r1, {r0, r2, r3, r4, r8, sl}
    2858:	d0000000 	andle	r0, r0, r0
    285c:	e410001a 	ldr	r0, [r0], #-26	; 0xffffffe6
    2860:	0210001a 	andseq	r0, r0, #26
    2864:	4401007d 	strmi	r0, [r1], #-125	; 0xffffff83
    2868:	12000002 	andne	r0, r0, #2
    286c:	01006863 	tsteq	r0, r3, ror #16
    2870:	0079121d 	rsbseq	r1, r9, sp, lsl r2
    2874:	25af0000 	strcs	r0, [pc, #0]!	; 287c <__HEAP_SIZE+0x187c>
    2878:	25ad0000 	strcs	r0, [sp, #0]!
    287c:	13000000 	movwne	r0, #0
    2880:	06a50101 	strteq	r0, [r5], r1, lsl #2
    2884:	06a50000 	strteq	r0, [r5], r0
    2888:	d9050000 	stmdble	r5, {}	; <UNPREDICTABLE>
    288c:	0a3b0005 	beq	ec28a8 <__RAM_SIZE+0xdc28a8>
    2890:	00020000 	andeq	r0, r2, r0
    2894:	00000756 	andeq	r0, r0, r6, asr r7
    2898:	00cf0104 	sbceq	r0, pc, r4, lsl #2
    289c:	210c0000 	mrscs	r0, (UNDEF: 12)
    28a0:	20000008 	andcs	r0, r0, r8
    28a4:	10000000 	andne	r0, r0, r0
    28a8:	00000002 	andeq	r0, r0, r2
    28ac:	00000000 	andeq	r0, r0, r0
    28b0:	96000000 	strls	r0, [r0], -r0
    28b4:	02000019 	andeq	r0, r0, #25
    28b8:	009f0601 	addseq	r0, pc, r1, lsl #12
    28bc:	01020000 	mrseq	r0, (UNDEF: 2)
    28c0:	00009d08 	andeq	r9, r0, r8, lsl #26
    28c4:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    28c8:	00000216 	andeq	r0, r0, r6, lsl r2
    28cc:	00075003 	andeq	r5, r7, r3
    28d0:	19390300 	ldmdbne	r9!, {r8, r9}
    28d4:	0000004a 	andeq	r0, r0, sl, asr #32
    28d8:	bc070202 	sfmlt	f0, 4, [r7], {2}
    28dc:	02000000 	andeq	r0, r0, #0
    28e0:	01da0504 	bicseq	r0, sl, r4, lsl #10
    28e4:	ef030000 	svc	0x00030000
    28e8:	03000002 	movweq	r0, #2
    28ec:	0064194f 	rsbeq	r1, r4, pc, asr #18
    28f0:	04020000 	streq	r0, [r2], #-0
    28f4:	0001b707 	andeq	fp, r1, r7, lsl #14
    28f8:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    28fc:	000001d5 	ldrdeq	r0, [r0], -r5
    2900:	b2070802 	andlt	r0, r7, #131072	; 0x20000
    2904:	04000001 	streq	r0, [r0], #-1
    2908:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    290c:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    2910:	0001bc07 	andeq	fp, r1, r7, lsl #24
    2914:	00800500 	addeq	r0, r0, r0, lsl #10
    2918:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>
    291c:	04000004 	streq	r0, [r0], #-4
    2920:	008017d1 	ldrdeq	r1, [r0], r1	; <UNPREDICTABLE>
    2924:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2928:	0001c904 	andeq	ip, r1, r4, lsl #18
    292c:	08010200 	stmdaeq	r1, {r9}
    2930:	000000a6 	andeq	r0, r0, r6, lsr #1
    2934:	00075203 	andeq	r5, r7, r3, lsl #4
    2938:	14240500 	strtne	r0, [r4], #-1280	; 0xfffffb00
    293c:	0000003e 	andeq	r0, r0, lr, lsr r0
    2940:	0002f103 	andeq	pc, r2, r3, lsl #2
    2944:	14300500 	ldrtne	r0, [r0], #-1280	; 0xfffffb00
    2948:	00000058 	andeq	r0, r0, r8, asr r0
    294c:	0007f803 	andeq	pc, r7, r3, lsl #16
    2950:	23280600 			; <UNDEFINED> instruction: 0x23280600
    2954:	000000ca 	andeq	r0, r0, sl, asr #1
    2958:	0008bf06 	andeq	fp, r8, r6, lsl #30
    295c:	29062000 	stmdbcs	r6, {sp}
    2960:	00014a08 	andeq	r4, r1, r8, lsl #20
    2964:	30720700 	rsbscc	r0, r2, r0, lsl #14
    2968:	122a0600 	eorne	r0, sl, #0, 12
    296c:	00000080 	andeq	r0, r0, r0, lsl #1
    2970:	07002302 	streq	r2, [r0, -r2, lsl #6]
    2974:	06003172 			; <UNDEFINED> instruction: 0x06003172
    2978:	0080122b 	addeq	r1, r0, fp, lsr #4
    297c:	23020000 	movwcs	r0, #8192	; 0x2000
    2980:	32720704 	rsbscc	r0, r2, #4, 14	; 0x100000
    2984:	122c0600 	eorne	r0, ip, #0, 12
    2988:	00000080 	andeq	r0, r0, r0, lsl #1
    298c:	07082302 	streq	r2, [r8, -r2, lsl #6]
    2990:	06003372 			; <UNDEFINED> instruction: 0x06003372
    2994:	0080122d 	addeq	r1, r0, sp, lsr #4
    2998:	23020000 	movwcs	r0, #8192	; 0x2000
    299c:	3172070c 	cmncc	r2, ip, lsl #14
    29a0:	2e060032 	mcrcs	0, 0, r0, cr6, cr2, {1}
    29a4:	00008012 	andeq	r8, r0, r2, lsl r0
    29a8:	10230200 	eorne	r0, r3, r0, lsl #4
    29ac:	00726c07 	rsbseq	r6, r2, r7, lsl #24
    29b0:	80122f06 	andshi	r2, r2, r6, lsl #30
    29b4:	02000000 	andeq	r0, r0, #0
    29b8:	70071423 	andvc	r1, r7, r3, lsr #8
    29bc:	30060063 	andcc	r0, r6, r3, rrx
    29c0:	00008012 	andeq	r8, r0, r2, lsl r0
    29c4:	18230200 	stmdane	r3!, {r9}
    29c8:	72737007 	rsbsvc	r7, r3, #7
    29cc:	12310600 	eorsne	r0, r1, #0, 12
    29d0:	00000080 	andeq	r0, r0, r0, lsl #1
    29d4:	001c2302 	andseq	r2, ip, r2, lsl #6
    29d8:	0007b403 	andeq	fp, r7, r3, lsl #8
    29dc:	23340600 	teqcs	r4, #0, 12
    29e0:	00000156 	andeq	r0, r0, r6, asr r1
    29e4:	0007d906 	andeq	sp, r7, r6, lsl #18
    29e8:	35062000 	strcc	r2, [r6, #-0]
    29ec:	0001d608 	andeq	sp, r1, r8, lsl #12
    29f0:	34720700 	ldrbtcc	r0, [r2], #-1792	; 0xfffff900
    29f4:	12360600 	eorsne	r0, r6, #0, 12
    29f8:	00000080 	andeq	r0, r0, r0, lsl #1
    29fc:	07002302 	streq	r2, [r0, -r2, lsl #6]
    2a00:	06003572 			; <UNDEFINED> instruction: 0x06003572
    2a04:	00801237 	addeq	r1, r0, r7, lsr r2
    2a08:	23020000 	movwcs	r0, #8192	; 0x2000
    2a0c:	36720704 	ldrbtcc	r0, [r2], -r4, lsl #14
    2a10:	12380600 	eorsne	r0, r8, #0, 12
    2a14:	00000080 	andeq	r0, r0, r0, lsl #1
    2a18:	07082302 	streq	r2, [r8, -r2, lsl #6]
    2a1c:	06003772 			; <UNDEFINED> instruction: 0x06003772
    2a20:	00801239 	addeq	r1, r0, r9, lsr r2
    2a24:	23020000 	movwcs	r0, #8192	; 0x2000
    2a28:	3872070c 	ldmdacc	r2!, {r2, r3, r8, r9, sl}^
    2a2c:	123a0600 	eorsne	r0, sl, #0, 12
    2a30:	00000080 	andeq	r0, r0, r0, lsl #1
    2a34:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    2a38:	06003972 			; <UNDEFINED> instruction: 0x06003972
    2a3c:	0080123b 	addeq	r1, r0, fp, lsr r2
    2a40:	23020000 	movwcs	r0, #8192	; 0x2000
    2a44:	31720714 	cmncc	r2, r4, lsl r7
    2a48:	3c060030 	stccc	0, cr0, [r6], {48}	; 0x30
    2a4c:	00008012 	andeq	r8, r0, r2, lsl r0
    2a50:	18230200 	stmdane	r3!, {r9}
    2a54:	31317207 	teqcc	r1, r7, lsl #4
    2a58:	123d0600 	eorsne	r0, sp, #0, 12
    2a5c:	00000080 	andeq	r0, r0, r0, lsl #1
    2a60:	001c2302 	andseq	r2, ip, r2, lsl #6
    2a64:	00072f03 	andeq	r2, r7, r3, lsl #30
    2a68:	1c400600 	mcrrne	6, 0, r0, r0, cr0
    2a6c:	000001e2 	andeq	r0, r0, r2, ror #3
    2a70:	0007ec06 	andeq	lr, r7, r6, lsl #24
    2a74:	41064000 	mrsmi	r4, (UNDEF: 6)
    2a78:	00020e08 	andeq	r0, r2, r8, lsl #28
    2a7c:	07e50800 	strbeq	r0, [r5, r0, lsl #16]!
    2a80:	42060000 	andmi	r0, r6, #0
    2a84:	00014a1a 	andeq	r4, r1, sl, lsl sl
    2a88:	00230200 	eoreq	r0, r3, r0, lsl #4
    2a8c:	0008cb08 	andeq	ip, r8, r8, lsl #22
    2a90:	1a430600 	bne	10c4298 <__RAM_SIZE+0xfc4298>
    2a94:	000000be 	strheq	r0, [r0], -lr
    2a98:	00202302 	eoreq	r2, r0, r2, lsl #6
    2a9c:	0008a603 	andeq	sl, r8, r3, lsl #12
    2aa0:	0f460600 	svceq	0x00460600
    2aa4:	0000021f 	andeq	r0, r0, pc, lsl r2
    2aa8:	00020e05 	andeq	r0, r2, r5, lsl #28
    2aac:	25040900 	strcs	r0, [r4, #-2304]	; 0xfffff700
    2ab0:	0a000002 	beq	2ac0 <__HEAP_SIZE+0x1ac0>
    2ab4:	00007901 	andeq	r7, r0, r1, lsl #18
    2ab8:	00024400 	andeq	r4, r2, r0, lsl #8
    2abc:	02440b00 	subeq	r0, r4, #0, 22
    2ac0:	8c0b0000 	stchi	0, cr0, [fp], {-0}
    2ac4:	0b000000 	bleq	2acc <__HEAP_SIZE+0x1acc>
    2ac8:	00000244 	andeq	r0, r0, r4, asr #4
    2acc:	0002440b 	andeq	r4, r2, fp, lsl #8
    2ad0:	04090000 	streq	r0, [r9], #-0
    2ad4:	00000080 	andeq	r0, r0, r0, lsl #1
    2ad8:	00088a0c 	andeq	r8, r8, ip, lsl #20
    2adc:	151d0100 	ldrne	r0, [sp, #-256]	; 0xffffff00
    2ae0:	00000080 	andeq	r0, r0, r0, lsl #1
    2ae4:	d20c0101 	andle	r0, ip, #1073741824	; 0x40000000
    2ae8:	01000008 	tsteq	r0, r8
    2aec:	0080151e 	addeq	r1, r0, lr, lsl r5
    2af0:	01010000 	mrseq	r0, (UNDEF: 1)
    2af4:	0007700c 	andeq	r7, r7, ip
    2af8:	151f0100 	ldrne	r0, [pc, #-256]	; 2a00 <__HEAP_SIZE+0x1a00>
    2afc:	00000080 	andeq	r0, r0, r0, lsl #1
    2b00:	8a0c0101 	bhi	302f0c <__RAM_SIZE+0x202f0c>
    2b04:	01000007 	tsteq	r0, r7
    2b08:	00801520 	addeq	r1, r0, r0, lsr #10
    2b0c:	01010000 	mrseq	r0, (UNDEF: 1)
    2b10:	0007990d 	andeq	r9, r7, sp, lsl #18
    2b14:	20710100 	rsbscs	r0, r1, r0, lsl #2
    2b18:	0000021a 	andeq	r0, r0, sl, lsl r2
    2b1c:	00040305 	andeq	r0, r4, r5, lsl #6
    2b20:	0d0d3800 	stceq	8, cr3, [sp, #-0]
    2b24:	01000008 	tsteq	r0, r8
    2b28:	021a2072 	andseq	r2, sl, #114	; 0x72
    2b2c:	03050000 	movweq	r0, #20480	; 0x5000
    2b30:	38000008 	stmdacc	r0, {r3}
    2b34:	0008620e 	andeq	r6, r8, lr, lsl #4
    2b38:	17740100 	ldrbne	r0, [r4, -r0, lsl #2]!
    2b3c:	00000087 	andeq	r0, r0, r7, lsl #1
    2b40:	64030501 	strvs	r0, [r3], #-1281	; 0xfffffaff
    2b44:	0e380005 	cdpeq	0, 3, cr0, cr8, cr5, {0}
    2b48:	0000073d 	andeq	r0, r0, sp, lsr r7
    2b4c:	87177501 	ldrhi	r7, [r7, -r1, lsl #10]
    2b50:	01000000 	mrseq	r0, (UNDEF: 0)
    2b54:	05680305 	strbeq	r0, [r8, #-773]!	; 0xfffffcfb
    2b58:	010f3800 	tsteq	pc, r0, lsl #16
    2b5c:	000006d9 	ldrdeq	r0, [r0], -r9
    2b60:	05012b01 	streq	r2, [r1, #-2817]	; 0xfffff4ff
    2b64:	00007901 	andeq	r7, r0, r1, lsl #18
	...
    2b70:	007d0200 	rsbseq	r0, sp, r0, lsl #4
    2b74:	00031601 	andeq	r1, r3, r1, lsl #12
    2b78:	07a61000 	streq	r1, [r6, r0]!
    2b7c:	2b010000 	blcs	42b84 <__HEAP_SIZE+0x41b84>
    2b80:	020e3001 	andeq	r3, lr, #1
    2b84:	25ca0000 	strbcs	r0, [sl]
    2b88:	25c20000 	strbcs	r0, [r2]
    2b8c:	92110000 	andsls	r0, r1, #0
    2b90:	01000007 	tsteq	r0, r7
    2b94:	7909012c 	stmdbvc	r9, {r2, r3, r5, r8}
    2b98:	0b000000 	bleq	2ba0 <__HEAP_SIZE+0x1ba0>
    2b9c:	05000026 	streq	r0, [r0, #-38]	; 0xffffffda
    2ba0:	00000026 	andeq	r0, r0, r6, lsr #32
    2ba4:	075b0112 	smmlaeq	fp, r2, r1, r0
    2ba8:	27010000 	strcs	r0, [r1, -r0]
    2bac:	80010e01 	andhi	r0, r1, r1, lsl #28
	...
    2bb8:	02000000 	andeq	r0, r0, #0
    2bbc:	1201007d 	andne	r0, r1, #125	; 0x7d
    2bc0:	00089101 	andeq	r9, r8, r1, lsl #2
    2bc4:	01230100 			; <UNDEFINED> instruction: 0x01230100
    2bc8:	0080010e 	addeq	r0, r0, lr, lsl #2
	...
    2bd4:	7d020000 	stcvc	0, cr0, [r2, #-0]
    2bd8:	01120100 	tsteq	r2, r0, lsl #2
    2bdc:	00000000 	andeq	r0, r0, r0
    2be0:	0e011f01 	cdpeq	15, 0, cr1, cr1, cr1, {0}
    2be4:	00008001 	andeq	r8, r0, r1
    2be8:	001e2c00 	andseq	r2, lr, r0, lsl #24
    2bec:	001e3410 	andseq	r3, lr, r0, lsl r4
    2bf0:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    2bf4:	20010f01 	andcs	r0, r1, r1, lsl #30
    2bf8:	01000002 	tsteq	r0, r2
    2bfc:	010e011b 	tsteq	lr, fp, lsl r1
    2c00:	00000080 	andeq	r0, r0, r0, lsl #1
    2c04:	10001e24 	andne	r1, r0, r4, lsr #28
    2c08:	10001e2a 	andne	r1, r0, sl, lsr #28
    2c0c:	01007d02 	tsteq	r0, r2, lsl #26
    2c10:	000003ab 	andeq	r0, r0, fp, lsr #7
    2c14:	0009e613 	andeq	lr, r9, r3, lsl r6
    2c18:	001e2400 	andseq	r2, lr, r0, lsl #8
    2c1c:	1e240210 	mcrne	2, 1, r0, cr4, cr0, {0}
    2c20:	1e281000 	cdpne	0, 2, cr1, cr8, cr0, {0}
    2c24:	1c011000 	stcne	0, cr1, [r1], {-0}
    2c28:	f9140c01 			; <UNDEFINED> instruction: 0xf9140c01
    2c2c:	39000009 	stmdbcc	r0, {r0, r3}
    2c30:	37000026 	strcc	r0, [r0, -r6, lsr #32]
    2c34:	00000026 	andeq	r0, r0, r6, lsr #32
    2c38:	52011500 	andpl	r1, r1, #0, 10
    2c3c:	01000002 	tsteq	r0, r2
    2c40:	790105ef 	stmdbvc	r1, {r0, r1, r2, r3, r5, r6, r7, r8, sl}
    2c44:	8c000000 	stchi	0, cr0, [r0], {-0}
    2c48:	0810001b 	ldmdaeq	r0, {r0, r1, r3, r4}
    2c4c:	4c10001c 	ldcmi	0, cr0, [r0], {28}
    2c50:	01000026 	tsteq	r0, r6, lsr #32
    2c54:	00000485 	andeq	r0, r0, r5, lsl #9
    2c58:	00044a16 	andeq	r4, r4, r6, lsl sl
    2c5c:	28ef0100 	stmiacs	pc!, {r8}^	; <UNPREDICTABLE>
    2c60:	00000244 	andeq	r0, r0, r4, asr #4
    2c64:	00002674 	andeq	r2, r0, r4, ror r6
    2c68:	0000266c 	andeq	r2, r0, ip, ror #12
    2c6c:	00049216 	andeq	r9, r4, r6, lsl r2
    2c70:	37ef0100 	strbcc	r0, [pc, r0, lsl #2]!
    2c74:	0000008c 	andeq	r0, r0, ip, lsl #1
    2c78:	000026b3 			; <UNDEFINED> instruction: 0x000026b3
    2c7c:	000026ab 	andeq	r2, r0, fp, lsr #13
    2c80:	00022e16 	andeq	r2, r2, r6, lsl lr
    2c84:	4bef0100 	blmi	ffbc308c <__StackTop+0xc7ac308c>
    2c88:	00000244 	andeq	r0, r0, r4, asr #4
    2c8c:	000026f0 	strdeq	r2, [r0], -r0
    2c90:	000026ea 	andeq	r2, r0, sl, ror #13
    2c94:	00000e16 	andeq	r0, r0, r6, lsl lr
    2c98:	66ef0100 	strbtvs	r0, [pc], r0, lsl #2
    2c9c:	00000244 	andeq	r0, r0, r4, asr #4
    2ca0:	00002724 	andeq	r2, r0, r4, lsr #14
    2ca4:	0000271c 	andeq	r2, r0, ip, lsl r7
    2ca8:	00001a17 	andeq	r1, r0, r7, lsl sl
    2cac:	09f00100 	ldmibeq	r0!, {r8}^
    2cb0:	00000079 	andeq	r0, r0, r9, ror r0
    2cb4:	00002761 	andeq	r2, r0, r1, ror #14
    2cb8:	0000275b 	andeq	r2, r0, fp, asr r7
    2cbc:	00637018 	rsbeq	r7, r3, r8, lsl r0
    2cc0:	8012f101 	andshi	pc, r2, r1, lsl #2
    2cc4:	96000000 	strls	r0, [r0], -r0
    2cc8:	8c000027 	stchi	0, cr0, [r0], {39}	; 0x27
    2ccc:	18000027 	stmdane	r0, {r0, r1, r2, r5}
    2cd0:	0100706f 	tsteq	r0, pc, rrx
    2cd4:	00801af1 	strdeq	r1, [r0], r1	; <UNPREDICTABLE>
    2cd8:	27df0000 	ldrbcs	r0, [pc, r0]
    2cdc:	27d90000 	ldrbcs	r0, [r9, r0]
    2ce0:	73180000 	tstvc	r8, #0
    2ce4:	f1010070 	setend	le
    2ce8:	00024423 	andeq	r4, r2, r3, lsr #8
    2cec:	00281000 	eoreq	r1, r8, r0
    2cf0:	00280a00 	eoreq	r0, r8, r0, lsl #20
    2cf4:	1bce1900 	blne	ff3890fc <__StackTop+0xc72890fc>
    2cf8:	09031000 	stmdbeq	r3, {ip}
    2cfc:	047b0000 	ldrbteq	r0, [fp], #-0
    2d00:	011a0000 	tsteq	sl, r0
    2d04:	00790250 	rsbseq	r0, r9, r0, asr r2
    2d08:	1bd21b00 	blne	ff489910 <__StackTop+0xc7389910>
    2d0c:	08a91000 	stmiaeq	r9!, {ip}
    2d10:	1c000000 	stcne	0, cr0, [r0], {-0}
    2d14:	00084f01 	andeq	r4, r8, r1, lsl #30
    2d18:	06af0100 	strteq	r0, [pc], r0, lsl #2
    2d1c:	001c7801 	andseq	r7, ip, r1, lsl #16
    2d20:	001e2410 	andseq	r2, lr, r0, lsl r4
    2d24:	00283b10 	eoreq	r3, r8, r0, lsl fp
    2d28:	07b00100 	ldreq	r0, [r0, r0, lsl #2]!
    2d2c:	8c160000 	ldchi	0, cr0, [r6], {-0}
    2d30:	01000007 	tsteq	r0, r7
    2d34:	024427af 	subeq	r2, r4, #45875200	; 0x2bc0000
    2d38:	28650000 	stmdacs	r5!, {}^	; <UNPREDICTABLE>
    2d3c:	285b0000 	ldmdacs	fp, {}^	; <UNPREDICTABLE>
    2d40:	ad160000 	ldcge	0, cr0, [r6, #-0]
    2d44:	01000007 	tsteq	r0, r7
    2d48:	00803baf 	addeq	r3, r0, pc, lsr #23
    2d4c:	28ae0000 	stmiacs	lr!, {}	; <UNPREDICTABLE>
    2d50:	28aa0000 	stmiacs	sl!, {}	; <UNPREDICTABLE>
    2d54:	1a170000 	bne	5c2d5c <__RAM_SIZE+0x4c2d5c>
    2d58:	01000000 	mrseq	r0, (UNDEF: 0)
    2d5c:	007909b0 	ldrhteq	r0, [r9], #-144	; 0xffffff70
    2d60:	28d80000 	ldmcs	r8, {}^	; <UNPREDICTABLE>
    2d64:	28cc0000 	stmiacs	ip, {}^	; <UNPREDICTABLE>
    2d68:	c0170000 	andsgt	r0, r7, r0
    2d6c:	01000006 	tsteq	r0, r6
    2d70:	007914b0 	ldrhteq	r1, [r9], #-64	; 0xffffffc0
    2d74:	292e0000 	stmdbcs	lr!, {}	; <UNPREDICTABLE>
    2d78:	29240000 	stmdbcs	r4!, {}	; <UNPREDICTABLE>
    2d7c:	34170000 	ldrcc	r0, [r7], #-0
    2d80:	01000002 	tsteq	r0, r2
    2d84:	024413b1 	subeq	r1, r4, #-1006632958	; 0xc4000002
    2d88:	299b0000 	ldmibcs	fp, {}	; <UNPREDICTABLE>
    2d8c:	29710000 	ldmdbcs	r1!, {}^	; <UNPREDICTABLE>
    2d90:	f20d0000 	vhadd.s8	d0, d13, d0
    2d94:	01000007 	tsteq	r0, r7
    2d98:	01d61ab2 	ldrheq	r1, [r6, #162]	; 0xa2
    2d9c:	03050000 	movweq	r0, #20480	; 0x5000
    2da0:	3800056c 	stmdacc	r0, {r2, r3, r5, r6, r8, sl}
    2da4:	00044a0d 	andeq	r4, r4, sp, lsl #20
    2da8:	19b30100 	ldmibne	r3!, {r8}
    2dac:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
    2db0:	04640305 	strbteq	r0, [r4], #-773	; 0xfffffcfb
    2db4:	c8193800 	ldmdagt	r9, {fp, ip, sp}
    2db8:	0710001c 			; <UNDEFINED> instruction: 0x0710001c
    2dbc:	3c00000a 	stccc	0, cr0, [r0], {10}
    2dc0:	1a000005 	bne	2ddc <__HEAP_SIZE+0x1ddc>
    2dc4:	77025001 	strvc	r5, [r2, -r1]
    2dc8:	ce190000 	cdpgt	0, 1, cr0, cr9, cr0, {0}
    2dcc:	0710001c 			; <UNDEFINED> instruction: 0x0710001c
    2dd0:	5300000a 	movwpl	r0, #10
    2dd4:	1a000005 	bne	2df0 <__HEAP_SIZE+0x1df0>
    2dd8:	03055001 	movweq	r5, #20481	; 0x5001
    2ddc:	100040d8 	ldrdne	r4, [r0], -r8
    2de0:	1cd41900 			; <UNDEFINED> instruction: 0x1cd41900
    2de4:	0a071000 	beq	1c6dec <__RAM_SIZE+0xc6dec>
    2de8:	056a0000 	strbeq	r0, [sl, #-0]!
    2dec:	011a0000 	tsteq	sl, r0
    2df0:	f8030550 			; <UNDEFINED> instruction: 0xf8030550
    2df4:	00100040 	andseq	r0, r0, r0, asr #32
    2df8:	001cdc19 	andseq	sp, ip, r9, lsl ip
    2dfc:	000a1410 	andeq	r1, sl, r0, lsl r4
    2e00:	00058100 	andeq	r8, r5, r0, lsl #2
    2e04:	50011a00 	andpl	r1, r1, r0, lsl #20
    2e08:	410c0305 	tstmi	ip, r5, lsl #6
    2e0c:	19001000 	stmdbne	r0, {ip}
    2e10:	10001ce4 	andne	r1, r0, r4, ror #25
    2e14:	00000a14 	andeq	r0, r0, r4, lsl sl
    2e18:	00000598 	muleq	r0, r8, r5
    2e1c:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    2e20:	00412003 	subeq	r2, r1, r3
    2e24:	ec190010 	ldc	0, cr0, [r9], {16}
    2e28:	1410001c 	ldrne	r0, [r0], #-28	; 0xffffffe4
    2e2c:	af00000a 	svcge	0x0000000a
    2e30:	1a000005 	bne	2e4c <__HEAP_SIZE+0x1e4c>
    2e34:	03055001 	movweq	r5, #20481	; 0x5001
    2e38:	10004134 	andne	r4, r0, r4, lsr r1
    2e3c:	1cf41900 			; <UNDEFINED> instruction: 0x1cf41900
    2e40:	0a141000 	beq	506e48 <__RAM_SIZE+0x406e48>
    2e44:	05c60000 	strbeq	r0, [r6]
    2e48:	011a0000 	tsteq	sl, r0
    2e4c:	48030550 	stmdami	r3, {r4, r6, r8, sl}
    2e50:	00100041 	andseq	r0, r0, r1, asr #32
    2e54:	001cfc19 	andseq	pc, ip, r9, lsl ip	; <UNPREDICTABLE>
    2e58:	000a1410 	andeq	r1, sl, r0, lsl r4
    2e5c:	0005dd00 	andeq	sp, r5, r0, lsl #26
    2e60:	50011a00 	andpl	r1, r1, r0, lsl #20
    2e64:	415c0305 	cmpmi	ip, r5, lsl #6
    2e68:	19001000 	stmdbne	r0, {ip}
    2e6c:	10001d04 	andne	r1, r0, r4, lsl #26
    2e70:	00000a14 	andeq	r0, r0, r4, lsl sl
    2e74:	000005f4 	strdeq	r0, [r0], -r4
    2e78:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    2e7c:	00417003 	subeq	r7, r1, r3
    2e80:	0c190010 	ldceq	0, cr0, [r9], {16}
    2e84:	1410001d 	ldrne	r0, [r0], #-29	; 0xffffffe3
    2e88:	0b00000a 	bleq	2eb8 <__HEAP_SIZE+0x1eb8>
    2e8c:	1a000006 	bne	2eac <__HEAP_SIZE+0x1eac>
    2e90:	03055001 	movweq	r5, #20481	; 0x5001
    2e94:	10004184 	andne	r4, r0, r4, lsl #3
    2e98:	1d141900 	vldrne.16	s2, [r4, #-0]	; <UNPREDICTABLE>
    2e9c:	0a141000 	beq	506ea4 <__RAM_SIZE+0x406ea4>
    2ea0:	06220000 	strteq	r0, [r2], -r0
    2ea4:	011a0000 	tsteq	sl, r0
    2ea8:	98030550 	stmdals	r3, {r4, r6, r8, sl}
    2eac:	00100041 	andseq	r0, r0, r1, asr #32
    2eb0:	001d1c19 	andseq	r1, sp, r9, lsl ip
    2eb4:	000a1410 	andeq	r1, sl, r0, lsl r4
    2eb8:	00063900 	andeq	r3, r6, r0, lsl #18
    2ebc:	50011a00 	andpl	r1, r1, r0, lsl #20
    2ec0:	41ac0305 			; <UNDEFINED> instruction: 0x41ac0305
    2ec4:	19001000 	stmdbne	r0, {ip}
    2ec8:	10001d24 	andne	r1, r0, r4, lsr #26
    2ecc:	00000a14 	andeq	r0, r0, r4, lsl sl
    2ed0:	00000650 	andeq	r0, r0, r0, asr r6
    2ed4:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    2ed8:	0041c003 	subeq	ip, r1, r3
    2edc:	2c190010 	ldccs	0, cr0, [r9], {16}
    2ee0:	1410001d 	ldrne	r0, [r0], #-29	; 0xffffffe3
    2ee4:	6700000a 	strvs	r0, [r0, -sl]
    2ee8:	1a000006 	bne	2f08 <__HEAP_SIZE+0x1f08>
    2eec:	03055001 	movweq	r5, #20481	; 0x5001
    2ef0:	100041d4 	ldrdne	r4, [r0], -r4	; <UNPREDICTABLE>
    2ef4:	1d341900 			; <UNDEFINED> instruction: 0x1d341900
    2ef8:	0a141000 	beq	506f00 <__RAM_SIZE+0x406f00>
    2efc:	067e0000 	ldrbteq	r0, [lr], -r0
    2f00:	011a0000 	tsteq	sl, r0
    2f04:	e8030550 	stmda	r3, {r4, r6, r8, sl}
    2f08:	00100041 	andseq	r0, r0, r1, asr #32
    2f0c:	001d3c19 	andseq	r3, sp, r9, lsl ip
    2f10:	000a1410 	andeq	r1, sl, r0, lsl r4
    2f14:	00069500 	andeq	r9, r6, r0, lsl #10
    2f18:	50011a00 	andpl	r1, r1, r0, lsl #20
    2f1c:	41fc0305 	mvnsmi	r0, r5, lsl #6
    2f20:	19001000 	stmdbne	r0, {ip}
    2f24:	10001d44 	andne	r1, r0, r4, asr #26
    2f28:	00000a14 	andeq	r0, r0, r4, lsl sl
    2f2c:	000006ac 	andeq	r0, r0, ip, lsr #13
    2f30:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    2f34:	00421003 	subeq	r1, r2, r3
    2f38:	4c190010 	ldcmi	0, cr0, [r9], {16}
    2f3c:	1410001d 	ldrne	r0, [r0], #-29	; 0xffffffe3
    2f40:	c300000a 	movwgt	r0, #10
    2f44:	1a000006 	bne	2f64 <__HEAP_SIZE+0x1f64>
    2f48:	03055001 	movweq	r5, #20481	; 0x5001
    2f4c:	10004224 	andne	r4, r0, r4, lsr #4
    2f50:	1d541900 	vldrne.16	s3, [r4, #-0]	; <UNPREDICTABLE>
    2f54:	0a141000 	beq	506f5c <__RAM_SIZE+0x406f5c>
    2f58:	06da0000 	ldrbeq	r0, [sl], r0
    2f5c:	011a0000 	tsteq	sl, r0
    2f60:	38030550 	stmdacc	r3, {r4, r6, r8, sl}
    2f64:	00100042 	andseq	r0, r0, r2, asr #32
    2f68:	001d5a19 	andseq	r5, sp, r9, lsl sl
    2f6c:	000a0710 	andeq	r0, sl, r0, lsl r7
    2f70:	0006ee00 	andeq	lr, r6, r0, lsl #28
    2f74:	50011a00 	andpl	r1, r1, r0, lsl #20
    2f78:	00007702 	andeq	r7, r0, r2, lsl #14
    2f7c:	001d6019 	andseq	r6, sp, r9, lsl r0
    2f80:	00083810 	andeq	r3, r8, r0, lsl r8
    2f84:	00070200 	andeq	r0, r7, r0, lsl #4
    2f88:	50011a00 	andpl	r1, r1, r0, lsl #20
    2f8c:	00007602 	andeq	r7, r0, r2, lsl #12
    2f90:	001d6619 	andseq	r6, sp, r9, lsl r6
    2f94:	0007c010 	andeq	ip, r7, r0, lsl r0
    2f98:	00071600 	andeq	r1, r7, r0, lsl #12
    2f9c:	50011a00 	andpl	r1, r1, r0, lsl #20
    2fa0:	00007602 	andeq	r7, r0, r2, lsl #12
    2fa4:	001d781d 	andseq	r7, sp, sp, lsl r8
    2fa8:	00073610 	andeq	r3, r7, r0, lsl r6
    2fac:	50011a00 	andpl	r1, r1, r0, lsl #20
    2fb0:	04640305 	strbteq	r0, [r4], #-773	; 0xfffffcfb
    2fb4:	011a3800 	tsteq	sl, r0, lsl #16
    2fb8:	40080251 	andmi	r0, r8, r1, asr r2
    2fbc:	0352011a 	cmpeq	r2, #-2147483642	; 0x80000006
    2fc0:	0000c075 	andeq	ip, r0, r5, ror r0
    2fc4:	001d8019 	andseq	r8, sp, r9, lsl r0
    2fc8:	000a1410 	andeq	r1, sl, r0, lsl r4
    2fcc:	00074d00 	andeq	r4, r7, r0, lsl #26
    2fd0:	50011a00 	andpl	r1, r1, r0, lsl #20
    2fd4:	424c0305 	submi	r0, ip, #335544320	; 0x14000000
    2fd8:	19001000 	stmdbne	r0, {ip}
    2fdc:	10001d8a 	andne	r1, r0, sl, lsl #27
    2fe0:	00000a14 	andeq	r0, r0, r4, lsl sl
    2fe4:	00000764 	andeq	r0, r0, r4, ror #14
    2fe8:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    2fec:	003f8403 	eorseq	r8, pc, r3, lsl #8
    2ff0:	9c1d0010 	ldcls	0, cr0, [sp], {16}
    2ff4:	8810001d 	ldmdahi	r0, {r0, r2, r3, r4}
    2ff8:	1a000007 	bne	301c <__HEAP_SIZE+0x201c>
    2ffc:	03055001 	movweq	r5, #20481	; 0x5001
    3000:	38000464 	stmdacc	r0, {r2, r5, r6, sl}
    3004:	0251011a 	subseq	r0, r1, #-2147483642	; 0x80000006
    3008:	011a4008 	tsteq	sl, r8
    300c:	00750252 	rsbseq	r0, r5, r2, asr r2
    3010:	0153011a 	cmpeq	r3, sl, lsl r1
    3014:	ac190030 	ldcge	0, cr0, [r9], {48}	; 0x30
    3018:	1410001d 	ldrne	r0, [r0], #-29	; 0xffffffe3
    301c:	9f00000a 	svcls	0x0000000a
    3020:	1a000007 	bne	3044 <__HEAP_SIZE+0x2044>
    3024:	03055001 	movweq	r5, #20481	; 0x5001
    3028:	10003f84 	andne	r3, r0, r4, lsl #31
    302c:	1db81e00 	ldcne	14, cr1, [r8]
    3030:	0a071000 	beq	1c7038 <__RAM_SIZE+0xc7038>
    3034:	011a0000 	tsteq	sl, r0
    3038:	00770250 	rsbseq	r0, r7, r0, asr r2
    303c:	801f0000 	andshi	r0, pc, r0
    3040:	c0000000 	andgt	r0, r0, r0
    3044:	20000007 	andcs	r0, r0, r7
    3048:	00000080 	andeq	r0, r0, r0, lsl #1
    304c:	f521003f 			; <UNDEFINED> instruction: 0xf521003f
    3050:	01000006 	tsteq	r0, r6
    3054:	31010da4 	smlatbcc	r1, r4, sp, r0
    3058:	20000008 	andcs	r0, r0, r8
    305c:	2810001c 	ldmdacs	r0, {r2, r3, r4}
    3060:	bb10001c 	bllt	4030d8 <__RAM_SIZE+0x3030d8>
    3064:	0100002a 	tsteq	r0, sl, lsr #32
    3068:	00000831 	andeq	r0, r0, r1, lsr r8
    306c:	00071016 	andeq	r1, r7, r6, lsl r0
    3070:	2aa40100 	bcs	fe903478 <__StackTop+0xc6803478>
    3074:	00000080 	andeq	r0, r0, r0, lsl #1
    3078:	00002adf 	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    307c:	00002adb 	ldrdeq	r2, [r0], -fp
    3080:	00079217 	andeq	r9, r7, r7, lsl r2
    3084:	0aa50100 	beq	fe94348c <__StackTop+0xc684348c>
    3088:	00000831 	andeq	r0, r0, r1, lsr r8
    308c:	00002b04 	andeq	r2, r0, r4, lsl #22
    3090:	00002b00 	andeq	r2, r0, r0, lsl #22
    3094:	08750122 	ldmdaeq	r5!, {r1, r5, r8}^
    3098:	a7010000 	strge	r0, [r1, -r0]
    309c:	08310111 	ldmdaeq	r1!, {r0, r4, r8}
    30a0:	1f010000 	svcne	0x00010000
    30a4:	0b000008 	bleq	30cc <__HEAP_SIZE+0x20cc>
    30a8:	00000080 	andeq	r0, r0, r0, lsl #1
    30ac:	1c261e00 	stcne	14, cr1, [r6], #-0
    30b0:	0a221000 	beq	8870b8 <__RAM_SIZE+0x7870b8>
    30b4:	011a0000 	tsteq	sl, r0
    30b8:	01f30350 	mvnseq	r0, r0, asr r3
    30bc:	02000050 	andeq	r0, r0, #80	; 0x50
    30c0:	05b80201 	ldreq	r0, [r8, #513]!	; 0x201
    30c4:	0b230000 	bleq	8c30cc <__RAM_SIZE+0x7c30cc>
    30c8:	01000007 	tsteq	r0, r7
    30cc:	08010d9c 	stmdaeq	r1, {r2, r3, r4, r7, r8, sl, fp}
    30d0:	2010001c 	andscs	r0, r0, ip, lsl r0
    30d4:	2310001c 	tstcs	r0, #28
    30d8:	0100002b 	tsteq	r0, fp, lsr #32
    30dc:	000008a9 	andeq	r0, r0, r9, lsr #17
    30e0:	00071016 	andeq	r1, r7, r6, lsl r0
    30e4:	2a9c0100 	bcs	fe7034ec <__StackTop+0xc66034ec>
    30e8:	00000080 	andeq	r0, r0, r0, lsl #1
    30ec:	00002b4b 	andeq	r2, r0, fp, asr #22
    30f0:	00002b43 	andeq	r2, r0, r3, asr #22
    30f4:	07050124 	streq	r0, [r5, -r4, lsr #2]
    30f8:	9f010000 	svcls	0x00010000
    30fc:	7b010111 	blvc	43548 <__HEAP_SIZE+0x42548>
    3100:	0b000008 	bleq	3128 <__HEAP_SIZE+0x2128>
    3104:	00000080 	andeq	r0, r0, r0, lsl #1
    3108:	1c141900 			; <UNDEFINED> instruction: 0x1c141900
    310c:	0a141000 	beq	507114 <__RAM_SIZE+0x407114>
    3110:	08980000 	ldmeq	r8, {}	; <UNPREDICTABLE>
    3114:	011a0000 	tsteq	sl, r0
    3118:	58030550 	stmdapl	r3, {r4, r6, r8, sl}
    311c:	1a100040 	bne	403224 <__RAM_SIZE+0x303224>
    3120:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    3124:	1a1e0000 	bne	78312c <__RAM_SIZE+0x68312c>
    3128:	3010001c 	andscc	r0, r0, ip, lsl r0
    312c:	1a00000a 	bne	315c <__HEAP_SIZE+0x215c>
    3130:	74025001 	strvc	r5, [r2], #-1
    3134:	25000000 	strcs	r0, [r0, #-0]
    3138:	0000071b 	andeq	r0, r0, fp, lsl r7
    313c:	010d8d01 	tsteq	sp, r1, lsl #26
    3140:	00000831 	andeq	r0, r0, r1, lsr r8
    3144:	10001b54 	andne	r1, r0, r4, asr fp
    3148:	10001b8a 	andne	r1, r0, sl, lsl #23
    314c:	01007d02 	tsteq	r0, r2, lsl #26
    3150:	00000903 	andeq	r0, r0, r3, lsl #18
    3154:	736e6926 	cmnvc	lr, #622592	; 0x98000
    3158:	2e8d0100 	rmfcse	f0, f5, f0
    315c:	00000080 	andeq	r0, r0, r0, lsl #1
    3160:	00002b86 	andeq	r2, r0, r6, lsl #23
    3164:	00002b82 	andeq	r2, r0, r2, lsl #23
    3168:	0007c917 	andeq	ip, r7, r7, lsl r9
    316c:	0e910100 	fmleqs	f0, f1, f0
    3170:	000000a6 	andeq	r0, r0, r6, lsr #1
    3174:	00002ba9 	andeq	r2, r0, r9, lsr #23
    3178:	00002ba7 	andeq	r2, r0, r7, lsr #23
    317c:	0007d117 	andeq	sp, r7, r7, lsl r1
    3180:	0e920100 	fmleqs	f0, f2, f0
    3184:	000000a6 	andeq	r0, r0, r6, lsr #1
    3188:	00002bd0 	ldrdeq	r2, [r0], -r0
    318c:	00002bbc 			; <UNDEFINED> instruction: 0x00002bbc
    3190:	07782100 	ldrbeq	r2, [r8, -r0, lsl #2]!
    3194:	82010000 	andhi	r0, r1, #0
    3198:	00800115 	addeq	r0, r0, r5, lsl r1
    319c:	1b280000 	blne	a031a4 <__RAM_SIZE+0x9031a4>
    31a0:	1b541000 	blne	15071a8 <__RAM_SIZE+0x14071a8>
    31a4:	2c731000 	ldclcs	0, cr1, [r3], #-0
    31a8:	74010000 	strvc	r0, [r1], #-0
    31ac:	26000009 	strcs	r0, [r0], -r9
    31b0:	01006370 	tsteq	r0, r0, ror r3
    31b4:	00803482 	addeq	r3, r0, r2, lsl #9
    31b8:	2ca30000 	stccs	0, cr0, [r3]
    31bc:	2c9f0000 	ldccs	0, cr0, [pc], {0}
    31c0:	af0d0000 	svcge	0x000d0000
    31c4:	01000004 	tsteq	r0, r4
    31c8:	09740e83 	ldmdbeq	r4!, {r0, r1, r7, r9, sl, fp}^
    31cc:	91020000 	mrsls	r0, (UNDEF: 2)
    31d0:	0783177c 			; <UNDEFINED> instruction: 0x0783177c
    31d4:	84010000 	strhi	r0, [r1], #-0
    31d8:	00008012 	andeq	r8, r0, r2, lsl r0
    31dc:	002cca00 	eoreq	ip, ip, r0, lsl #20
    31e0:	002cc400 	eoreq	ip, ip, r0, lsl #8
    31e4:	1b2e2700 	blne	b8cdec <__RAM_SIZE+0xa8cdec>
    31e8:	1b441000 	blne	11071f0 <__RAM_SIZE+0x10071f0>
    31ec:	69181000 	ldmdbvs	r8, {ip}
    31f0:	0e850100 	rmfeqs	f0, f5, f0
    31f4:	00000079 	andeq	r0, r0, r9, ror r0
    31f8:	00002cff 	strdeq	r2, [r0], -pc	; <UNPREDICTABLE>
    31fc:	00002cfb 	strdeq	r2, [r0], -fp
    3200:	a61f0000 	ldrge	r0, [pc], -r0
    3204:	84000000 	strhi	r0, [r0], #-0
    3208:	20000009 	andcs	r0, r0, r9
    320c:	00000080 	andeq	r0, r0, r0, lsl #1
    3210:	011c0001 	tsteq	ip, r1
    3214:	00000206 	andeq	r0, r0, r6, lsl #4
    3218:	01067701 	tsteq	r6, r1, lsl #14
    321c:	10001c28 	andne	r1, r0, r8, lsr #24
    3220:	10001c78 	andne	r1, r0, r8, ror ip
    3224:	00002d1e 	andeq	r2, r0, lr, lsl sp
    3228:	0009e601 	andeq	lr, r9, r1, lsl #12
    322c:	1c3e1900 			; <UNDEFINED> instruction: 0x1c3e1900
    3230:	0a141000 	beq	507238 <__RAM_SIZE+0x407238>
    3234:	09b60000 	ldmibeq	r6!, {}	; <UNPREDICTABLE>
    3238:	011a0000 	tsteq	sl, r0
    323c:	70030550 	andvc	r0, r3, r0, asr r5
    3240:	00100040 	andseq	r0, r0, r0, asr #32
    3244:	001c4a19 	andseq	r4, ip, r9, lsl sl
    3248:	000a1410 	andeq	r1, sl, r0, lsl r4
    324c:	0009cd00 	andeq	ip, r9, r0, lsl #26
    3250:	50011a00 	andpl	r1, r1, r0, lsl #20
    3254:	40940305 	addsmi	r0, r4, r5, lsl #6
    3258:	1e001000 	cdpne	0, 0, cr1, cr0, cr0, {0}
    325c:	10001c52 	andne	r1, r0, r2, asr ip
    3260:	00000a14 	andeq	r0, r0, r4, lsl sl
    3264:	0550011a 	ldrbeq	r0, [r0, #-282]	; 0xfffffee6
    3268:	0040b803 	subeq	fp, r0, r3, lsl #16
    326c:	51011a10 	tstpl	r1, r0, lsl sl
    3270:	00003101 	andeq	r3, r0, r1, lsl #2
    3274:	0008b528 	andeq	fp, r8, r8, lsr #10
    3278:	04630200 	strbteq	r0, [r3], #-512	; 0xfffffe00
    327c:	00b2011f 	adcseq	r0, r2, pc, lsl r1
    3280:	07030000 	streq	r0, [r3, -r0]
    3284:	2900000a 	stmdbcs	r0, {r1, r3}
    3288:	00000792 	muleq	r0, r2, r7
    328c:	0c046502 	cfstr32eq	mvfx6, [r4], {2}
    3290:	000000b2 	strheq	r0, [r0], -r2
    3294:	01012a00 	tsteq	r1, r0, lsl #20
    3298:	00000098 	muleq	r0, r8, r0
    329c:	0000008e 	andeq	r0, r0, lr, lsl #1
    32a0:	012b0008 			; <UNDEFINED> instruction: 0x012b0008
    32a4:	00052c01 	andeq	r2, r5, r1, lsl #24
    32a8:	00052c00 	andeq	r2, r5, r0, lsl #24
    32ac:	05c80700 	strbeq	r0, [r8, #1792]	; 0x700
    32b0:	7501012b 	strvc	r0, [r1, #-299]	; 0xfffffed5
    32b4:	75000008 	strvc	r0, [r0, #-8]
    32b8:	01000008 	tsteq	r0, r8
    32bc:	012b11a7 			; <UNDEFINED> instruction: 0x012b11a7
    32c0:	00070501 	andeq	r0, r7, r1, lsl #10
    32c4:	00070500 	andeq	r0, r7, r0, lsl #10
    32c8:	119f0100 	orrsne	r0, pc, r0, lsl #2
    32cc:	0007a200 	andeq	sl, r7, r0, lsl #4
    32d0:	48000200 	stmdami	r0, {r9}
    32d4:	0400000a 	streq	r0, [r0], #-10
    32d8:	0000cf01 	andeq	ip, r0, r1, lsl #30
    32dc:	08de0c00 	ldmeq	lr, {sl, fp}^
    32e0:	00200000 	eoreq	r0, r0, r0
    32e4:	02780000 	rsbseq	r0, r8, #0
	...
    32f0:	1fe00000 	svcne	0x00e00000
    32f4:	01020000 	mrseq	r0, (UNDEF: 2)
    32f8:	00009f06 	andeq	r9, r0, r6, lsl #30
    32fc:	028c0300 	addeq	r0, ip, #0, 6
    3300:	2b020000 	blcs	83308 <__HEAP_SIZE+0x82308>
    3304:	00003c18 	andeq	r3, r0, r8, lsl ip
    3308:	08010200 	stmdaeq	r1, {r9}
    330c:	0000009d 	muleq	r0, sp, r0
    3310:	16050202 	strne	r0, [r5], -r2, lsl #4
    3314:	02000002 	andeq	r0, r0, #2
    3318:	00bc0702 	adcseq	r0, ip, r2, lsl #14
    331c:	04020000 	streq	r0, [r2], #-0
    3320:	0001da05 	andeq	sp, r1, r5, lsl #20
    3324:	02ef0300 	rsceq	r0, pc, #0, 6
    3328:	4f020000 	svcmi	0x00020000
    332c:	00006419 	andeq	r6, r0, r9, lsl r4
    3330:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3334:	000001b7 			; <UNDEFINED> instruction: 0x000001b7
    3338:	d5050802 	strle	r0, [r5, #-2050]	; 0xfffff7fe
    333c:	02000001 	andeq	r0, r0, #1
    3340:	01b20708 			; <UNDEFINED> instruction: 0x01b20708
    3344:	04040000 	streq	r0, [r4], #-0
    3348:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    334c:	00790500 	rsbseq	r0, r9, r0, lsl #10
    3350:	04020000 	streq	r0, [r2], #-0
    3354:	0001bc07 	andeq	fp, r1, r7, lsl #24
    3358:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    335c:	000001c9 	andeq	r0, r0, r9, asr #3
    3360:	a6080102 	strge	r0, [r8], -r2, lsl #2
    3364:	03000000 	movweq	r0, #0
    3368:	0000028e 	andeq	r0, r0, lr, lsl #5
    336c:	30131803 	andscc	r1, r3, r3, lsl #16
    3370:	05000000 	streq	r0, [r0, #-0]
    3374:	0000009a 	muleq	r0, sl, r0
    3378:	0002f103 	andeq	pc, r2, r3, lsl #2
    337c:	14300300 	ldrtne	r0, [r0], #-768	; 0xfffffd00
    3380:	00000058 	andeq	r0, r0, r8, asr r0
    3384:	0000ab05 	andeq	sl, r0, r5, lsl #22
    3388:	00b70600 	adcseq	r0, r7, r0, lsl #12
    338c:	7c070000 	stcvc	0, cr0, [r7], {-0}
    3390:	01f80402 	mvnseq	r0, r2, lsl #8
    3394:	0003c609 	andeq	ip, r3, r9, lsl #12
    3398:	02a90800 	adceq	r0, r9, #0, 16
    339c:	fa040000 	blx	1033a4 <__RAM_SIZE+0x33a4>
    33a0:	00bc1201 	adcseq	r1, ip, r1, lsl #4
    33a4:	23020000 	movwcs	r0, #8192	; 0x2000
    33a8:	03450800 	movteq	r0, #22528	; 0x5800
    33ac:	fb040000 	blx	1033b6 <__RAM_SIZE+0x33b6>
    33b0:	00b71201 	adcseq	r1, r7, r1, lsl #4
    33b4:	23020000 	movwcs	r0, #8192	; 0x2000
    33b8:	033b0804 	teqeq	fp, #4, 16	; 0x40000
    33bc:	fc040000 	stc2	0, cr0, [r4], {-0}
    33c0:	00b71201 	adcseq	r1, r7, r1, lsl #4
    33c4:	23020000 	movwcs	r0, #8192	; 0x2000
    33c8:	034a0808 	movteq	r0, #43016	; 0xa808
    33cc:	fd040000 	stc2	0, cr0, [r4, #-0]
    33d0:	00b71201 	adcseq	r1, r7, r1, lsl #4
    33d4:	23020000 	movwcs	r0, #8192	; 0x2000
    33d8:	4353090c 	cmpmi	r3, #12, 18	; 0x30000
    33dc:	fe040052 	mcr2	0, 0, r0, cr4, cr2, {2}
    33e0:	00b71201 	adcseq	r1, r7, r1, lsl #4
    33e4:	23020000 	movwcs	r0, #8192	; 0x2000
    33e8:	43430910 	movtmi	r0, #14608	; 0x3910
    33ec:	ff040052 			; <UNDEFINED> instruction: 0xff040052
    33f0:	00b71201 	adcseq	r1, r7, r1, lsl #4
    33f4:	23020000 	movwcs	r0, #8192	; 0x2000
    33f8:	03e90814 	mvneq	r0, #20, 16	; 0x140000
    33fc:	00040000 	andeq	r0, r4, r0
    3400:	03d61202 	bicseq	r1, r6, #536870912	; 0x20000000
    3404:	23020000 	movwcs	r0, #8192	; 0x2000
    3408:	03bc0818 			; <UNDEFINED> instruction: 0x03bc0818
    340c:	01040000 	mrseq	r0, (UNDEF: 4)
    3410:	00b71202 	adcseq	r1, r7, r2, lsl #4
    3414:	23020000 	movwcs	r0, #8192	; 0x2000
    3418:	03620824 	cmneq	r2, #36, 16	; 0x240000
    341c:	02040000 	andeq	r0, r4, #0
    3420:	00b71202 	adcseq	r1, r7, r2, lsl #4
    3424:	23020000 	movwcs	r0, #8192	; 0x2000
    3428:	04150828 	ldreq	r0, [r5], #-2088	; 0xfffff7d8
    342c:	03040000 	movweq	r0, #16384	; 0x4000
    3430:	00b71202 	adcseq	r1, r7, r2, lsl #4
    3434:	23020000 	movwcs	r0, #8192	; 0x2000
    3438:	0350082c 	cmpeq	r0, #44, 16	; 0x2c0000
    343c:	04040000 	streq	r0, [r4], #-0
    3440:	00b71202 	adcseq	r1, r7, r2, lsl #4
    3444:	23020000 	movwcs	r0, #8192	; 0x2000
    3448:	03550830 	cmpeq	r5, #48, 16	; 0x300000
    344c:	05040000 	streq	r0, [r4, #-0]
    3450:	00b71202 	adcseq	r1, r7, r2, lsl #4
    3454:	23020000 	movwcs	r0, #8192	; 0x2000
    3458:	02ea0834 	rsceq	r0, sl, #52, 16	; 0x340000
    345c:	06040000 	streq	r0, [r4], -r0
    3460:	00b71202 	adcseq	r1, r7, r2, lsl #4
    3464:	23020000 	movwcs	r0, #8192	; 0x2000
    3468:	03d90838 	bicseq	r0, r9, #56, 16	; 0x380000
    346c:	07040000 	streq	r0, [r4, -r0]
    3470:	00b71202 	adcseq	r1, r7, r2, lsl #4
    3474:	23020000 	movwcs	r0, #8192	; 0x2000
    3478:	02b6083c 	adcseq	r0, r6, #60, 16	; 0x3c0000
    347c:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    3480:	03f01202 	mvnseq	r1, #536870912	; 0x20000000
    3484:	23020000 	movwcs	r0, #8192	; 0x2000
    3488:	03030840 	movweq	r0, #14400	; 0x3840
    348c:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    3490:	00bc1202 	adcseq	r1, ip, r2, lsl #4
    3494:	23020000 	movwcs	r0, #8192	; 0x2000
    3498:	04000848 	streq	r0, [r0], #-2120	; 0xfffff7b8
    349c:	0a040000 	beq	1034a4 <__RAM_SIZE+0x34a4>
    34a0:	00bc1202 	adcseq	r1, ip, r2, lsl #4
    34a4:	23020000 	movwcs	r0, #8192	; 0x2000
    34a8:	02da084c 	sbcseq	r0, sl, #76, 16	; 0x4c0000
    34ac:	0b040000 	bleq	1034b4 <__RAM_SIZE+0x34b4>
    34b0:	040a1202 	streq	r1, [sl], #-514	; 0xfffffdfe
    34b4:	23020000 	movwcs	r0, #8192	; 0x2000
    34b8:	04070850 	streq	r0, [r7], #-2128	; 0xfffff7b0
    34bc:	0c040000 	stceq	0, cr0, [r4], {-0}
    34c0:	04241202 	strteq	r1, [r4], #-514	; 0xfffffdfe
    34c4:	23020000 	movwcs	r0, #8192	; 0x2000
    34c8:	02a30860 	adceq	r0, r3, #96, 16	; 0x600000
    34cc:	0d040000 	stceq	0, cr0, [r4, #-0]
    34d0:	00bc1202 	adcseq	r1, ip, r2, lsl #4
    34d4:	23020000 	movwcs	r0, #8192	; 0x2000
    34d8:	54430978 	strbpl	r0, [r3], #-2424	; 0xfffff688
    34dc:	0e040052 	mcreq	0, 0, r0, cr4, cr2, {2}
    34e0:	00bc1202 	adcseq	r1, ip, r2, lsl #4
    34e4:	23020000 	movwcs	r0, #8192	; 0x2000
    34e8:	035b087c 	cmpeq	fp, #124, 16	; 0x7c0000
    34ec:	0f040000 	svceq	0x00040000
    34f0:	00bc1202 	adcseq	r1, ip, r2, lsl #4
    34f4:	23030000 	movwcs	r0, #12288	; 0x3000
    34f8:	12080180 	andne	r0, r8, #128, 2
    34fc:	04000003 	streq	r0, [r0], #-3
    3500:	b7120210 			; <UNDEFINED> instruction: 0xb7120210
    3504:	03000000 	movweq	r0, #0
    3508:	08018423 	stmdaeq	r1, {r0, r1, r5, sl, pc}
    350c:	0000040f 	andeq	r0, r0, pc, lsl #8
    3510:	12021104 	andne	r1, r2, #4, 2
    3514:	000000b7 	strheq	r0, [r0], -r7
    3518:	01882303 	orreq	r2, r8, r3, lsl #6
    351c:	00036708 	andeq	r6, r3, r8, lsl #14
    3520:	02120400 	andseq	r0, r2, #0, 8
    3524:	0000b712 	andeq	fp, r0, r2, lsl r7
    3528:	8c230300 	stchi	3, cr0, [r3], #-0
    352c:	03a70801 			; <UNDEFINED> instruction: 0x03a70801
    3530:	13040000 	movwne	r0, #16384	; 0x4000
    3534:	04291202 	strteq	r1, [r9], #-514	; 0xfffffdfe
    3538:	23030000 	movwcs	r0, #12288	; 0x3000
    353c:	de080190 	fltle<illegal precision>	f0, r0
    3540:	04000003 	streq	r0, [r0], #-3
    3544:	b7120214 			; <UNDEFINED> instruction: 0xb7120214
    3548:	03000000 	movweq	r0, #0
    354c:	0801e423 	stmdaeq	r1, {r0, r1, r5, sl, sp, lr, pc}
    3550:	00000340 	andeq	r0, r0, r0, asr #6
    3554:	12021504 	andne	r1, r2, #4, 10	; 0x1000000
    3558:	000000b7 	strheq	r0, [r0], -r7
    355c:	01e82303 	mvneq	r2, r3, lsl #6
    3560:	00037f08 	andeq	r7, r3, r8, lsl #30
    3564:	02160400 	andseq	r0, r6, #0, 8
    3568:	00043912 	andeq	r3, r4, r2, lsl r9
    356c:	ec230300 	stc	3, cr0, [r3], #-0
    3570:	02960801 	addseq	r0, r6, #65536	; 0x10000
    3574:	17040000 	strne	r0, [r4, -r0]
    3578:	00b71202 	adcseq	r1, r7, r2, lsl #4
    357c:	23030000 	movwcs	r0, #12288	; 0x3000
    3580:	89080480 	stmdbhi	r8, {r7, sl}
    3584:	04000003 	streq	r0, [r0], #-3
    3588:	49120218 	ldmdbmi	r2, {r3, r4, r9}
    358c:	03000004 	movweq	r0, #4
    3590:	08048423 	stmdaeq	r4, {r0, r1, r5, sl, pc}
    3594:	0000036d 	andeq	r0, r0, sp, ror #6
    3598:	12021904 	andne	r1, r2, #4, 18	; 0x10000
    359c:	000000bc 	strheq	r0, [r0], -ip
    35a0:	04c02303 	strbeq	r2, [r0], #771	; 0x303
    35a4:	00037308 	andeq	r7, r3, r8, lsl #6
    35a8:	021a0400 	andseq	r0, sl, #0, 8
    35ac:	0000bc12 	andeq	fp, r0, r2, lsl ip
    35b0:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    35b4:	03790804 	cmneq	r9, #4, 16	; 0x40000
    35b8:	1b040000 	blne	1035c0 <__RAM_SIZE+0x35c0>
    35bc:	00bc1202 	adcseq	r1, ip, r2, lsl #4
    35c0:	23030000 	movwcs	r0, #12288	; 0x3000
    35c4:	930804c8 	movwls	r0, #33992	; 0x84c8
    35c8:	04000003 	streq	r0, [r0], #-3
    35cc:	5912021c 	ldmdbpl	r2, {r2, r3, r4, r9}
    35d0:	03000004 	movweq	r0, #4
    35d4:	0804cc23 	stmdaeq	r4, {r0, r1, r5, sl, fp, lr, pc}
    35d8:	000002e2 	andeq	r0, r0, r2, ror #5
    35dc:	12021d04 	andne	r1, r2, #4, 26	; 0x100
    35e0:	000000b7 	strheq	r0, [r0], -r7
    35e4:	04d02303 	ldrbeq	r2, [r0], #771	; 0x303
    35e8:	00039d08 	andeq	r9, r3, r8, lsl #26
    35ec:	021e0400 	andseq	r0, lr, #0, 8
    35f0:	00045912 	andeq	r5, r4, r2, lsl r9
    35f4:	d4230300 	strtle	r0, [r3], #-768	; 0xfffffd00
    35f8:	03cb0804 	biceq	r0, fp, #4, 16	; 0x40000
    35fc:	1f040000 	svcne	0x00040000
    3600:	00b71202 	adcseq	r1, r7, r2, lsl #4
    3604:	23030000 	movwcs	r0, #12288	; 0x3000
    3608:	9b0804d8 	blls	204970 <__RAM_SIZE+0x104970>
    360c:	04000002 	streq	r0, [r0], #-2
    3610:	b7120220 	ldrlt	r0, [r2, -r0, lsr #4]
    3614:	03000000 	movweq	r0, #0
    3618:	0804dc23 	stmdaeq	r4, {r0, r1, r5, sl, fp, ip, lr, pc}
    361c:	000003d3 	ldrdeq	r0, [r0], -r3
    3620:	12022104 	andne	r2, r2, #4, 2
    3624:	000000b7 	strheq	r0, [r0], -r7
    3628:	04e02303 	strbteq	r2, [r0], #771	; 0x303
    362c:	00032908 	andeq	r2, r3, r8, lsl #18
    3630:	02220400 	eoreq	r0, r2, #0, 8
    3634:	0000b712 	andeq	fp, r0, r2, lsl r7
    3638:	e4230300 	strt	r0, [r3], #-768	; 0xfffffd00
    363c:	030a0804 	movweq	r0, #43012	; 0xa804
    3640:	23040000 	movwcs	r0, #16384	; 0x4000
    3644:	00b71202 	adcseq	r1, r7, r2, lsl #4
    3648:	23030000 	movwcs	r0, #12288	; 0x3000
    364c:	e30804e8 	movw	r0, #34024	; 0x84e8
    3650:	04000003 	streq	r0, [r0], #-3
    3654:	b7120224 	ldrlt	r0, [r2, -r4, lsr #4]
    3658:	03000000 	movweq	r0, #0
    365c:	0804ec23 	stmdaeq	r4, {r0, r1, r5, sl, fp, sp, lr, pc}
    3660:	000003c2 	andeq	r0, r0, r2, asr #7
    3664:	12022504 	andne	r2, r2, #4, 10	; 0x1000000
    3668:	000000b7 	strheq	r0, [r0], -r7
    366c:	04f02303 	ldrbteq	r2, [r0], #771	; 0x303
    3670:	0002bd08 	andeq	fp, r2, r8, lsl #26
    3674:	02260400 	eoreq	r0, r6, #0, 8
    3678:	0000b712 	andeq	fp, r0, r2, lsl r7
    367c:	f4230300 	vld2.8	{d0-d3}, [r3], r0
    3680:	02af0804 	adceq	r0, pc, #4, 16	; 0x40000
    3684:	27040000 	strcs	r0, [r4, -r0]
    3688:	00b71202 	adcseq	r1, r7, r2, lsl #4
    368c:	23030000 	movwcs	r0, #12288	; 0x3000
    3690:	0a0004f8 	beq	4a78 <__HEAP_SIZE+0x3a78>
    3694:	000000a6 	andeq	r0, r0, r6, lsr #1
    3698:	000003d6 	ldrdeq	r0, [r0], -r6
    369c:	0000850b 	andeq	r8, r0, fp, lsl #10
    36a0:	05000b00 	streq	r0, [r0, #-2816]	; 0xfffff500
    36a4:	000003c6 	andeq	r0, r0, r6, asr #7
    36a8:	0000bc0a 	andeq	fp, r0, sl, lsl #24
    36ac:	0003eb00 	andeq	lr, r3, r0, lsl #22
    36b0:	00850b00 	addeq	r0, r5, r0, lsl #22
    36b4:	00010000 	andeq	r0, r1, r0
    36b8:	0003db06 	andeq	sp, r3, r6, lsl #22
    36bc:	03eb0500 	mvneq	r0, #0, 10
    36c0:	bc0a0000 	stclt	0, cr0, [sl], {-0}
    36c4:	05000000 	streq	r0, [r0, #-0]
    36c8:	0b000004 	bleq	36e0 <__HEAP_SIZE+0x26e0>
    36cc:	00000085 	andeq	r0, r0, r5, lsl #1
    36d0:	f5060003 			; <UNDEFINED> instruction: 0xf5060003
    36d4:	05000003 	streq	r0, [r0, #-3]
    36d8:	00000405 	andeq	r0, r0, r5, lsl #8
    36dc:	0000bc0a 	andeq	fp, r0, sl, lsl #24
    36e0:	00041f00 	andeq	r1, r4, r0, lsl #30
    36e4:	00850b00 	addeq	r0, r5, r0, lsl #22
    36e8:	00050000 	andeq	r0, r5, r0
    36ec:	00040f06 	andeq	r0, r4, r6, lsl #30
    36f0:	041f0500 	ldreq	r0, [pc], #-1280	; 36f8 <__HEAP_SIZE+0x26f8>
    36f4:	ab0a0000 	blge	2836fc <__RAM_SIZE+0x1836fc>
    36f8:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    36fc:	0b000004 	bleq	3714 <__HEAP_SIZE+0x2714>
    3700:	00000085 	andeq	r0, r0, r5, lsl #1
    3704:	ab0a0014 	blge	28375c <__RAM_SIZE+0x18375c>
    3708:	49000000 	stmdbmi	r0, {}	; <UNPREDICTABLE>
    370c:	0b000004 	bleq	3724 <__HEAP_SIZE+0x2724>
    3710:	00000085 	andeq	r0, r0, r5, lsl #1
    3714:	ab0a0044 	blge	28382c <__RAM_SIZE+0x18382c>
    3718:	59000000 	stmdbpl	r0, {}	; <UNPREDICTABLE>
    371c:	0b000004 	bleq	3734 <__HEAP_SIZE+0x2734>
    3720:	00000085 	andeq	r0, r0, r5, lsl #1
    3724:	ab0a000e 	blge	283764 <__RAM_SIZE+0x183764>
    3728:	69000000 	stmdbvs	r0, {}	; <UNPREDICTABLE>
    372c:	0b000004 	bleq	3744 <__HEAP_SIZE+0x2744>
    3730:	00000085 	andeq	r0, r0, r5, lsl #1
    3734:	fa0c0000 	blx	30373c <__RAM_SIZE+0x20373c>
    3738:	04000002 	streq	r0, [r0], #-2
    373c:	c1030228 	tstgt	r3, r8, lsr #4
    3740:	0d000000 	stceq	0, cr0, [r0, #-0]
    3744:	0001f301 	andeq	pc, r1, r1, lsl #6
    3748:	06480100 	strbeq	r0, [r8], -r0, lsl #2
    374c:	001f4001 	andseq	r4, pc, r1
    3750:	001f8c10 	andseq	r8, pc, r0, lsl ip	; <UNPREDICTABLE>
    3754:	002d3e10 	eoreq	r3, sp, r0, lsl lr
    3758:	04fd0100 	ldrbteq	r0, [sp], #256	; 0x100
    375c:	d90e0000 	stmdble	lr, {}	; <UNPREDICTABLE>
    3760:	01000008 	tsteq	r0, r8
    3764:	04fd1349 	ldrbteq	r1, [sp], #841	; 0x349
    3768:	2d7c0000 	ldclcs	0, cr0, [ip, #-0]
    376c:	2d760000 	ldclcs	0, cr0, [r6, #-0]
    3770:	af0f0000 	svcge	0x000f0000
    3774:	01000004 	tsteq	r0, r4
    3778:	0080124a 	addeq	r1, r0, sl, asr #4
    377c:	91020000 	mrsls	r0, (UNDEF: 2)
    3780:	1f62106c 	svcne	0x0062106c
    3784:	078a1000 	streq	r1, [sl, r0]
    3788:	04ce0000 	strbeq	r0, [lr], #0
    378c:	01110000 	tsteq	r1, r0
    3790:	00750250 	rsbseq	r0, r5, r0, asr r2
    3794:	02510111 	subseq	r0, r1, #1073741828	; 0x40000004
    3798:	10000074 	andne	r0, r0, r4, ror r0
    379c:	10001f70 	andne	r1, r0, r0, ror pc
    37a0:	0000078a 	andeq	r0, r0, sl, lsl #15
    37a4:	000004e7 	andeq	r0, r0, r7, ror #9
    37a8:	02500111 	subseq	r0, r0, #1073741828	; 0x40000004
    37ac:	01110075 	tsteq	r1, r5, ror r0
    37b0:	00340151 	eorseq	r0, r4, r1, asr r1
    37b4:	001f8012 	andseq	r8, pc, r2, lsl r0	; <UNPREDICTABLE>
    37b8:	00078a10 	andeq	r8, r7, r0, lsl sl
    37bc:	50011100 	andpl	r1, r1, r0, lsl #2
    37c0:	11007502 	tstne	r0, r2, lsl #10
    37c4:	33015101 	movwcc	r5, #4353	; 0x1101
    37c8:	04130000 	ldreq	r0, [r3], #-0
    37cc:	00000080 	andeq	r0, r0, r0, lsl #1
    37d0:	0916010d 	ldmdbeq	r6, {r0, r2, r3, r8}
    37d4:	40010000 	andmi	r0, r1, r0
    37d8:	00000106 	andeq	r0, r0, r6, lsl #2
    37dc:	00000000 	andeq	r0, r0, r0
    37e0:	2da80000 	stccs	0, cr0, [r8]
    37e4:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    37e8:	14000005 	strne	r0, [r0], #-5
    37ec:	41010061 	tstmi	r1, r1, rrx
    37f0:	00007909 	andeq	r7, r0, r9, lsl #18
    37f4:	62140000 	andsvs	r0, r4, #0
    37f8:	10410100 	subne	r0, r1, r0, lsl #2
    37fc:	00000079 	andeq	r0, r0, r9, ror r0
    3800:	00631400 	rsbeq	r1, r3, r0, lsl #8
    3804:	79174101 	ldmdbvc	r7, {r0, r8, lr}
    3808:	00000000 	andeq	r0, r0, r0
    380c:	00000012 	andeq	r0, r0, r2, lsl r0
    3810:	00078a00 	andeq	r8, r7, r0, lsl #20
    3814:	50011100 	andpl	r1, r1, r0, lsl #2
    3818:	00000305 	andeq	r0, r0, r5, lsl #6
    381c:	01110000 	tsteq	r1, r0
    3820:	00300151 	eorseq	r0, r0, r1, asr r1
    3824:	75011500 	strvc	r1, [r1, #-1280]	; 0xfffffb00
    3828:	01000008 	tsteq	r0, r8
    382c:	8b010638 	blhi	45114 <__HEAP_SIZE+0x44114>
    3830:	30000005 	andcc	r0, r0, r5
    3834:	3e10001f 	mrccc	0, 0, r0, cr0, cr15, {0}
    3838:	0210001f 	andseq	r0, r0, #31
    383c:	8b01007d 	blhi	43a38 <__HEAP_SIZE+0x42a38>
    3840:	16000005 	strne	r0, [r0], -r5
    3844:	00000710 	andeq	r0, r0, r0, lsl r7
    3848:	85283801 	strhi	r3, [r8, #-2049]!	; 0xfffff7ff
    384c:	d0000000 	andle	r0, r0, r0
    3850:	c800002d 	stmdagt	r0, {r0, r2, r3, r5}
    3854:	0000002d 	andeq	r0, r0, sp, lsr #32
    3858:	b8020102 	stmdalt	r2, {r1, r8}
    385c:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    3860:	00070501 	andeq	r0, r7, r1, lsl #10
    3864:	060f0100 	streq	r0, [pc], -r0, lsl #2
    3868:	001e3401 	andseq	r3, lr, r1, lsl #8
    386c:	001f3010 	andseq	r3, pc, r0, lsl r0	; <UNPREDICTABLE>
    3870:	002e0a10 	eoreq	r0, lr, r0, lsl sl
    3874:	078a0100 	streq	r0, [sl, r0, lsl #2]
    3878:	10160000 	andsne	r0, r6, r0
    387c:	01000007 	tsteq	r0, r7
    3880:	0085290f 	addeq	r2, r5, pc, lsl #18
    3884:	2e2e0000 	cdpcs	0, 2, cr0, cr14, cr0, {0}
    3888:	2e2a0000 	cdpcs	0, 2, cr0, cr10, cr0, {0}
    388c:	3e100000 	cdpcc	0, 1, cr0, cr0, cr0, {0}
    3890:	9810001e 	ldmdals	r0, {r1, r2, r3, r4}
    3894:	d8000007 	stmdale	r0, {r0, r1, r2}
    3898:	11000005 	tstne	r0, r5
    389c:	03055001 	movweq	r5, #20481	; 0x5001
    38a0:	1000425c 	andne	r4, r0, ip, asr r2
    38a4:	1e441000 	cdpne	0, 4, cr1, cr4, cr0, {0}
    38a8:	078a1000 	streq	r1, [sl, r0]
    38ac:	05ef0000 	strbeq	r0, [pc, #0]!	; 38b4 <__HEAP_SIZE+0x28b4>
    38b0:	01110000 	tsteq	r1, r0
    38b4:	60030550 	andvs	r0, r3, r0, asr r5
    38b8:	00100042 	andseq	r0, r0, r2, asr #32
    38bc:	001e5010 	andseq	r5, lr, r0, lsl r0
    38c0:	00079810 	andeq	r9, r7, r0, lsl r8
    38c4:	00060600 	andeq	r0, r6, r0, lsl #12
    38c8:	50011100 	andpl	r1, r1, r0, lsl #2
    38cc:	42800305 	addmi	r0, r0, #335544320	; 0x14000000
    38d0:	10001000 	andne	r1, r0, r0
    38d4:	10001e56 	andne	r1, r0, r6, asr lr
    38d8:	0000078a 	andeq	r0, r0, sl, lsl #15
    38dc:	0000061d 	andeq	r0, r0, sp, lsl r6
    38e0:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    38e4:	0042b803 	subeq	fp, r2, r3, lsl #16
    38e8:	62100010 	andsvs	r0, r0, #16
    38ec:	9810001e 	ldmdals	r0, {r1, r2, r3, r4}
    38f0:	34000007 	strcc	r0, [r0], #-7
    38f4:	11000006 	tstne	r0, r6
    38f8:	03055001 	movweq	r5, #20481	; 0x5001
    38fc:	100042d8 	ldrdne	r4, [r0], -r8
    3900:	1e681000 	cdpne	0, 6, cr1, cr8, cr0, {0}
    3904:	078a1000 	streq	r1, [sl, r0]
    3908:	064b0000 	strbeq	r0, [fp], -r0
    390c:	01110000 	tsteq	r1, r0
    3910:	10030550 	andne	r0, r3, r0, asr r5
    3914:	00100043 	andseq	r0, r0, r3, asr #32
    3918:	001e7410 	andseq	r7, lr, r0, lsl r4
    391c:	00079810 	andeq	r9, r7, r0, lsl r8
    3920:	00066200 	andeq	r6, r6, r0, lsl #4
    3924:	50011100 	andpl	r1, r1, r0, lsl #2
    3928:	43300305 	teqmi	r0, #335544320	; 0x14000000
    392c:	10001000 	andne	r1, r0, r0
    3930:	10001e7a 	andne	r1, r0, sl, ror lr
    3934:	0000078a 	andeq	r0, r0, sl, lsl #15
    3938:	00000679 	andeq	r0, r0, r9, ror r6
    393c:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3940:	00436803 	subeq	r6, r3, r3, lsl #16
    3944:	86100010 			; <UNDEFINED> instruction: 0x86100010
    3948:	9810001e 	ldmdals	r0, {r1, r2, r3, r4}
    394c:	90000007 	andls	r0, r0, r7
    3950:	11000006 	tstne	r0, r6
    3954:	03055001 	movweq	r5, #20481	; 0x5001
    3958:	10004388 	andne	r4, r0, r8, lsl #7
    395c:	1e8c1000 	cdpne	0, 8, cr1, cr12, cr0, {0}
    3960:	078a1000 	streq	r1, [sl, r0]
    3964:	06a70000 	strteq	r0, [r7], r0
    3968:	01110000 	tsteq	r1, r0
    396c:	c0030550 	andgt	r0, r3, r0, asr r5
    3970:	00100043 	andseq	r0, r0, r3, asr #32
    3974:	001e9810 	andseq	r9, lr, r0, lsl r8
    3978:	00079810 	andeq	r9, r7, r0, lsl r8
    397c:	0006be00 	andeq	fp, r6, r0, lsl #28
    3980:	50011100 	andpl	r1, r1, r0, lsl #2
    3984:	43e00305 	mvnmi	r0, #335544320	; 0x14000000
    3988:	10001000 	andne	r1, r0, r0
    398c:	10001e9e 	mulne	r0, lr, lr
    3990:	0000078a 	andeq	r0, r0, sl, lsl #15
    3994:	000006d5 	ldrdeq	r0, [r0], -r5
    3998:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    399c:	00441803 	subeq	r1, r4, r3, lsl #16
    39a0:	aa100010 	bge	4039e8 <__RAM_SIZE+0x3039e8>
    39a4:	9810001e 	ldmdals	r0, {r1, r2, r3, r4}
    39a8:	ec000007 	stc	0, cr0, [r0], {7}
    39ac:	11000006 	tstne	r0, r6
    39b0:	03055001 	movweq	r5, #20481	; 0x5001
    39b4:	10004438 	andne	r4, r0, r8, lsr r4
    39b8:	1eb01000 	cdpne	0, 11, cr1, cr0, cr0, {0}
    39bc:	07981000 	ldreq	r1, [r8, r0]
    39c0:	07030000 	streq	r0, [r3, -r0]
    39c4:	01110000 	tsteq	r1, r0
    39c8:	5c030550 	cfstr32pl	mvfx0, [r3], {80}	; 0x50
    39cc:	00100042 	andseq	r0, r0, r2, asr #32
    39d0:	001eb810 	andseq	fp, lr, r0, lsl r8
    39d4:	00079810 	andeq	r9, r7, r0, lsl r8
    39d8:	00071a00 	andeq	r1, r7, r0, lsl #20
    39dc:	50011100 	andpl	r1, r1, r0, lsl #2
    39e0:	429c0305 	addsmi	r0, ip, #335544320	; 0x14000000
    39e4:	10001000 	andne	r1, r0, r0
    39e8:	10001ec0 	andne	r1, r0, r0, asr #29
    39ec:	00000798 	muleq	r0, r8, r7
    39f0:	00000731 	andeq	r0, r0, r1, lsr r7
    39f4:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    39f8:	0042f403 	subeq	pc, r2, r3, lsl #8
    39fc:	c8100010 	ldmdagt	r0, {r4}
    3a00:	9810001e 	ldmdals	r0, {r1, r2, r3, r4}
    3a04:	48000007 	stmdami	r0, {r0, r1, r2}
    3a08:	11000007 	tstne	r0, r7
    3a0c:	03055001 	movweq	r5, #20481	; 0x5001
    3a10:	1000434c 	andne	r4, r0, ip, asr #6
    3a14:	1ed01000 	cdpne	0, 13, cr1, cr0, cr0, {0}
    3a18:	07981000 	ldreq	r1, [r8, r0]
    3a1c:	075f0000 	ldrbeq	r0, [pc, -r0]
    3a20:	01110000 	tsteq	r1, r0
    3a24:	a4030550 	strge	r0, [r3], #-1360	; 0xfffffab0
    3a28:	00100043 	andseq	r0, r0, r3, asr #32
    3a2c:	001ed810 	andseq	sp, lr, r0, lsl r8
    3a30:	00079810 	andeq	r9, r7, r0, lsl r8
    3a34:	00077600 	andeq	r7, r7, r0, lsl #12
    3a38:	50011100 	andpl	r1, r1, r0, lsl #2
    3a3c:	43fc0305 	mvnsmi	r0, #335544320	; 0x14000000
    3a40:	12001000 	andne	r1, r0, #0
    3a44:	10001ee0 	andne	r1, r0, r0, ror #29
    3a48:	00000798 	muleq	r0, r8, r7
    3a4c:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
    3a50:	00445403 	subeq	r5, r4, r3, lsl #8
    3a54:	17000010 	smladne	r0, r0, r0, r0
    3a58:	052c0101 	streq	r0, [ip, #-257]!	; 0xfffffeff
    3a5c:	052c0000 	streq	r0, [ip, #-0]!
    3a60:	c8050000 	stmdagt	r5, {}	; <UNPREDICTABLE>
    3a64:	01011805 	tsteq	r1, r5, lsl #16
    3a68:	00000098 	muleq	r0, r8, r0
    3a6c:	0000008e 	andeq	r0, r0, lr, lsl #1
    3a70:	22000006 	andcs	r0, r0, #6
    3a74:	02000000 	andeq	r0, r0, #0
    3a78:	000bba00 	andeq	fp, fp, r0, lsl #20
    3a7c:	b3010400 	movwlt	r0, #5120	; 0x1400
    3a80:	ac000022 	stcge	0, cr0, [r0], {34}	; 0x22
    3a84:	1c10001f 	ldcne	0, cr0, [r0], {31}
    3a88:	2a100020 	bcs	403b10 <__RAM_SIZE+0x303b10>
    3a8c:	20000009 	andcs	r0, r0, r9
    3a90:	4a000000 	bmi	3a98 <__HEAP_SIZE+0x2a98>
    3a94:	01000009 	tsteq	r0, r9
    3a98:	00002280 	andeq	r2, r0, r0, lsl #5
    3a9c:	ce000200 	cdpgt	2, 0, cr0, cr0, cr0, {0}
    3aa0:	0400000b 	streq	r0, [r0], #-11
    3aa4:	00233901 	eoreq	r3, r3, r1, lsl #18
    3aa8:	00201c00 	eoreq	r1, r0, r0, lsl #24
    3aac:	00206410 	eoreq	r6, r0, r0, lsl r4
    3ab0:	00095810 	andeq	r5, r9, r0, lsl r8
    3ab4:	00002000 	andeq	r2, r0, r0
    3ab8:	00094a00 	andeq	r4, r9, r0, lsl #20
    3abc:	Address 0x00003abc is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
void Default_Handler(void) {
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    printf("%s\n", __func__);
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
}
   8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
   c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
  10:	00061001 	andeq	r1, r6, r1
  14:	00240200 	eoreq	r0, r4, r0, lsl #4
  18:	0b3e0b0b 	bleq	f82c4c <__RAM_SIZE+0xe82c4c>
}
  1c:	00000e03 	andeq	r0, r0, r3, lsl #28
  20:	0b002403 	bleq	9034 <__HEAP_SIZE+0x8034>
  24:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  28:	04000008 	streq	r0, [r0], #-8
  2c:	13490026 	movtne	r0, #36902	; 0x9026
  30:	2e050000 	cdpcs	0, 0, cr0, cr5, cr0, {0}
  34:	030c3f01 	movweq	r3, #52993	; 0xcf01
  38:	3b0b3a0e 	blcc	2ce878 <__RAM_SIZE+0x1ce878>
  3c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  40:	1113490c 	tstne	r3, ip, lsl #18
  44:	40011201 	andmi	r1, r1, r1, lsl #4
  48:	0c429706 	mcrreq	7, 0, r9, r2, cr6
  4c:	00001301 	andeq	r1, r0, r1, lsl #6
  50:	03003406 	movweq	r3, #1030	; 0x406
  54:	3b0b3a0e 	blcc	2ce894 <__RAM_SIZE+0x1ce894>
  58:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  5c:	b7060213 	smladlt	r6, r3, r2, r0
  60:	00000642 	andeq	r0, r0, r2, asr #12
  64:	01828907 	orreq	r8, r2, r7, lsl #18
  68:	31011100 	mrscc	r1, (UNDEF: 17)
  6c:	08000013 	stmdaeq	r0, {r0, r1, r4}
  70:	01018289 	smlabbeq	r1, r9, r2, r8
  74:	13310111 	teqne	r1, #1073741828	; 0x40000004
  78:	00001301 	andeq	r1, r0, r1, lsl #6
  7c:	01828a09 	orreq	r8, r2, r9, lsl #20
  80:	910a0200 	mrsls	r0, R10_fiq
  84:	00000a42 	andeq	r0, r0, r2, asr #20
  88:	0182890a 	orreq	r8, r2, sl, lsl #18
  8c:	31011101 	tstcc	r1, r1, lsl #2
  90:	0b000013 	bleq	e4 <__STACKSEAL_SIZE+0xe4>
  94:	0c3f012e 	ldfeqs	f0, [pc], #-184	; ffffffe4 <__StackTop+0xc7efffe4>
  98:	0b3a0e03 	bleq	e838ac <__RAM_SIZE+0xd838ac>
  9c:	0b390b3b 	bleq	e42d90 <__RAM_SIZE+0xd42d90>
  a0:	01110c27 	tsteq	r1, r7, lsr #24
  a4:	06400112 			; <UNDEFINED> instruction: 0x06400112
  a8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
  ac:	0c000013 	stceq	0, cr0, [r0], {19}
  b0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  b4:	0c341349 	ldceq	3, cr1, [r4], #-292	; 0xfffffedc
  b8:	00000a02 	andeq	r0, r0, r2, lsl #20
  bc:	4901010d 	stmdbmi	r1, {r0, r2, r3, r8}
  c0:	00130113 	andseq	r0, r3, r3, lsl r1
  c4:	00210e00 	eoreq	r0, r1, r0, lsl #28
  c8:	0b2f1349 	bleq	bc4df4 <__RAM_SIZE+0xac4df4>
  cc:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
  d0:	030c3f00 	movweq	r3, #52992	; 0xcf00
  d4:	3b0b3a0e 	blcc	2ce914 <__RAM_SIZE+0x1ce914>
  d8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
  dc:	000c3c0c 	andeq	r3, ip, ip, lsl #24
  e0:	00341000 	eorseq	r1, r4, r0
  e4:	0b3a0e03 	bleq	e838f8 <__RAM_SIZE+0xd838f8>
  e8:	0b390b3b 	bleq	e42ddc <__RAM_SIZE+0xd42ddc>
  ec:	0a021349 	beq	84e18 <__HEAP_SIZE+0x83e18>
  f0:	0b110000 	bleq	4400f8 <__RAM_SIZE+0x3400f8>
  f4:	01065501 	tsteq	r6, r1, lsl #10
  f8:	12000013 	andne	r0, r0, #19
  fc:	08030034 	stmdaeq	r3, {r2, r4, r5}
 100:	0b3b0b3a 	bleq	ec2df0 <__RAM_SIZE+0xdc2df0>
 104:	13490b39 	movtne	r0, #39737	; 0x9b39
 108:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 10c:	13000006 	movwne	r0, #6
 110:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 60 <__STACKSEAL_SIZE+0x60>
 114:	40870c3c 	addmi	r0, r7, ip, lsr ip
 118:	3a0e030e 	bcc	380d58 <__RAM_SIZE+0x280d58>
 11c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 120:	1400000b 	strne	r0, [r0], #-11
 124:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 74 <__STACKSEAL_SIZE+0x74>
 128:	40870c3c 	addmi	r0, r7, ip, lsr ip
 12c:	3a0e030e 	bcc	380d6c <__RAM_SIZE+0x280d6c>
 130:	000b3b0b 	andeq	r3, fp, fp, lsl #22
 134:	11010000 	mrsne	r0, (UNDEF: 1)
 138:	130e2501 	movwne	r2, #58625	; 0xe501
 13c:	1b0e030b 	blne	380d70 <__RAM_SIZE+0x280d70>
 140:	1106550e 	tstne	r6, lr, lsl #10
 144:	10015201 	andne	r5, r1, r1, lsl #4
 148:	02000006 	andeq	r0, r0, #6
 14c:	0b0b0024 	bleq	2c01e4 <__RAM_SIZE+0x1c01e4>
 150:	0e030b3e 	vmoveq.16	d3[0], r0
 154:	16030000 	strne	r0, [r3], -r0
 158:	3a0e0300 	bcc	380d60 <__RAM_SIZE+0x280d60>
 15c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 160:	0013490b 	andseq	r4, r3, fp, lsl #18
 164:	00240400 	eoreq	r0, r4, r0, lsl #8
 168:	0b3e0b0b 	bleq	f82d9c <__RAM_SIZE+0xe82d9c>
 16c:	00000803 	andeq	r0, r0, r3, lsl #16
 170:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
 174:	06000013 			; <UNDEFINED> instruction: 0x06000013
 178:	13490026 	movtne	r0, #36902	; 0x9026
 17c:	13070000 	movwne	r0, #28672	; 0x7000
 180:	3a050b01 	bcc	142d8c <__RAM_SIZE+0x42d8c>
 184:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 188:	0013010b 	andseq	r0, r3, fp, lsl #2
 18c:	000d0800 	andeq	r0, sp, r0, lsl #16
 190:	0b3a0e03 	bleq	e839a4 <__RAM_SIZE+0xd839a4>
 194:	0b39053b 	bleq	e41688 <__RAM_SIZE+0xd41688>
 198:	0a381349 	beq	e04ec4 <__RAM_SIZE+0xd04ec4>
 19c:	0d090000 	stceq	0, cr0, [r9, #-0]
 1a0:	3a080300 	bcc	200da8 <__RAM_SIZE+0x100da8>
 1a4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 1a8:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 1ac:	0a00000a 	beq	1dc <__STACKSEAL_SIZE+0x1dc>
 1b0:	13490101 	movtne	r0, #37121	; 0x9101
 1b4:	00001301 	andeq	r1, r0, r1, lsl #6
 1b8:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
 1bc:	000b2f13 	andeq	r2, fp, r3, lsl pc
 1c0:	00160c00 	andseq	r0, r6, r0, lsl #24
 1c4:	0b3a0e03 	bleq	e839d8 <__RAM_SIZE+0xd839d8>
 1c8:	0b39053b 	bleq	e416bc <__RAM_SIZE+0xd416bc>
 1cc:	00001349 	andeq	r1, r0, r9, asr #6
 1d0:	0b000f0d 	bleq	3e0c <__HEAP_SIZE+0x2e0c>
 1d4:	0013490b 	andseq	r4, r3, fp, lsl #18
 1d8:	00150e00 	andseq	r0, r5, r0, lsl #28
 1dc:	00000c27 	andeq	r0, r0, r7, lsr #24
 1e0:	0300340f 	movweq	r3, #1039	; 0x40f
 1e4:	3b0b3a0e 	blcc	2cea24 <__RAM_SIZE+0x1cea24>
 1e8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 1ec:	3c0c3f13 	stccc	15, cr3, [ip], {19}
 1f0:	1000000c 	andne	r0, r0, ip
 1f4:	13490021 	movtne	r0, #36897	; 0x9021
 1f8:	0000052f 	andeq	r0, r0, pc, lsr #10
 1fc:	47003411 	smladmi	r0, r1, r4, r3
 200:	3b0b3a13 	blcc	2cea54 <__RAM_SIZE+0x1cea54>
 204:	020b390b 	andeq	r3, fp, #180224	; 0x2c000
 208:	1200000a 	andne	r0, r0, #10
 20c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 15c <__STACKSEAL_SIZE+0x15c>
 210:	0b3a0e03 	bleq	e83a24 <__RAM_SIZE+0xd83a24>
 214:	0b390b3b 	bleq	e42f08 <__RAM_SIZE+0xd42f08>
 218:	01110c27 	tsteq	r1, r7, lsr #24
 21c:	0a400112 	beq	100066c <__RAM_SIZE+0xf0066c>
 220:	000c4297 	muleq	ip, r7, r2
 224:	11010000 	mrsne	r0, (UNDEF: 1)
 228:	130e2501 	movwne	r2, #58625	; 0xe501
 22c:	1b0e030b 	blne	380e60 <__RAM_SIZE+0x280e60>
 230:	1106550e 	tstne	r6, lr, lsl #10
 234:	10015201 	andne	r5, r1, r1, lsl #4
 238:	02000006 	andeq	r0, r0, #6
 23c:	0b0b0024 	bleq	2c02d4 <__RAM_SIZE+0x1c02d4>
 240:	0e030b3e 	vmoveq.16	d3[0], r0
 244:	26030000 	strcs	r0, [r3], -r0
 248:	00134900 	andseq	r4, r3, r0, lsl #18
 24c:	00160400 	andseq	r0, r6, r0, lsl #8
 250:	0b3a0e03 	bleq	e83a64 <__RAM_SIZE+0xd83a64>
 254:	0b390b3b 	bleq	e42f48 <__RAM_SIZE+0xd42f48>
 258:	00001349 	andeq	r1, r0, r9, asr #6
 25c:	0b002405 	bleq	9278 <__HEAP_SIZE+0x8278>
 260:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 264:	06000008 	streq	r0, [r0], -r8
 268:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 26c:	0b3a0b0b 	bleq	e82ea0 <__RAM_SIZE+0xd82ea0>
 270:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 274:	0d070000 	stceq	0, cr0, [r7, #-0]
 278:	490e0300 	stmdbmi	lr, {r8, r9}
 27c:	340a3813 	strcc	r3, [sl], #-2067	; 0xfffff7ed
 280:	0800000c 	stmdaeq	r0, {r2, r3}
 284:	0b0b000f 	bleq	2c02c8 <__RAM_SIZE+0x1c02c8>
 288:	0f090000 	svceq	0x00090000
 28c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 290:	0a000013 	beq	2e4 <__STACKSEAL_SIZE+0x2e4>
 294:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
 298:	00001301 	andeq	r1, r0, r1, lsl #6
 29c:	4900050b 	stmdbmi	r0, {r0, r1, r3, r8, sl}
 2a0:	0c000013 	stceq	0, cr0, [r0], {19}
 2a4:	0b0b0113 	bleq	2c06f8 <__RAM_SIZE+0x1c06f8>
 2a8:	0b3b0b3a 	bleq	ec2f98 <__RAM_SIZE+0xdc2f98>
 2ac:	13010b39 	movwne	r0, #6969	; 0x1b39
 2b0:	0d0d0000 	stceq	0, cr0, [sp, #-0]
 2b4:	3a080300 	bcc	200ebc <__RAM_SIZE+0x100ebc>
 2b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2bc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 2c0:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
 2c4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 214 <__STACKSEAL_SIZE+0x214>
 2c8:	0b3a0e03 	bleq	e83adc <__RAM_SIZE+0xd83adc>
 2cc:	0b39053b 	bleq	e417c0 <__RAM_SIZE+0xd417c0>
 2d0:	13490c27 	movtne	r0, #39975	; 0x9c27
 2d4:	01120111 	tsteq	r2, r1, lsl r1
 2d8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
 2dc:	0013010c 	andseq	r0, r3, ip, lsl #2
 2e0:	00050f00 	andeq	r0, r5, r0, lsl #30
 2e4:	0b3a0803 	bleq	e822f8 <__RAM_SIZE+0xd822f8>
 2e8:	0b39053b 	bleq	e417dc <__RAM_SIZE+0xd417dc>
 2ec:	06021349 	streq	r1, [r2], -r9, asr #6
 2f0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 2f4:	00051000 	andeq	r1, r5, r0
 2f8:	0b3a0e03 	bleq	e83b0c <__RAM_SIZE+0xd83b0c>
 2fc:	0b39053b 	bleq	e417f0 <__RAM_SIZE+0xd417f0>
 300:	0a021349 	beq	8502c <__HEAP_SIZE+0x8402c>
 304:	18110000 	ldmdane	r1, {}	; <UNPREDICTABLE>
 308:	12000000 	andne	r0, r0, #0
 30c:	08030034 	stmdaeq	r3, {r2, r4, r5}
 310:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 314:	13490b39 	movtne	r0, #39737	; 0x9b39
 318:	00000a02 	andeq	r0, r0, r2, lsl #20
 31c:	03003413 	movweq	r3, #1043	; 0x413
 320:	3b0b3a0e 	blcc	2ceb60 <__RAM_SIZE+0x1ceb60>
 324:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 328:	000a0213 	andeq	r0, sl, r3, lsl r2
 32c:	00341400 	eorseq	r1, r4, r0, lsl #8
 330:	0b3a0803 	bleq	e82344 <__RAM_SIZE+0xd82344>
 334:	0b39053b 	bleq	e41828 <__RAM_SIZE+0xd41828>
 338:	06021349 	streq	r1, [r2], -r9, asr #6
 33c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 340:	82891500 	addhi	r1, r9, #0, 10
 344:	01110101 	tsteq	r1, r1, lsl #2
 348:	00001331 	andeq	r1, r0, r1, lsr r3
 34c:	01828a16 	orreq	r8, r2, r6, lsl sl
 350:	910a0200 	mrsls	r0, R10_fiq
 354:	00000a42 	andeq	r0, r0, r2, asr #20
 358:	03000517 	movweq	r0, #1303	; 0x517
 35c:	3b0b3a0e 	blcc	2ceb9c <__RAM_SIZE+0x1ceb9c>
 360:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 364:	b7060213 	smladlt	r6, r3, r2, r0
 368:	00000642 	andeq	r0, r0, r2, asr #12
 36c:	49010118 	stmdbmi	r1, {r3, r4, r8}
 370:	00130113 	andseq	r0, r3, r3, lsl r1
 374:	00211900 	eoreq	r1, r1, r0, lsl #18
 378:	0b2f1349 	bleq	bc50a4 <__RAM_SIZE+0xac50a4>
 37c:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
 380:	3a0e0301 	bcc	380f8c <__RAM_SIZE+0x280f8c>
 384:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 388:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 38c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 390:	97064001 	strls	r4, [r6, -r1]
 394:	13010c42 	movwne	r0, #7234	; 0x1c42
 398:	051b0000 	ldreq	r0, [fp, #-0]
 39c:	3a080300 	bcc	200fa4 <__RAM_SIZE+0x100fa4>
 3a0:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 3a4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 3a8:	1c00000a 	stcne	0, cr0, [r0], {10}
 3ac:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 3b0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3b4:	13490b39 	movtne	r0, #39737	; 0x9b39
 3b8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 3bc:	1d000006 	stcne	0, cr0, [r0, #-24]	; 0xffffffe8
 3c0:	0111010b 	tsteq	r1, fp, lsl #2
 3c4:	13010112 	movwne	r0, #4370	; 0x1112
 3c8:	0b1e0000 	bleq	7803d0 <__RAM_SIZE+0x6803d0>
 3cc:	01065501 	tsteq	r6, r1, lsl #10
 3d0:	1f000013 	svcne	0x00000013
 3d4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 3d8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 3dc:	13490b39 	movtne	r0, #39737	; 0x9b39
 3e0:	89200000 	stmdbhi	r0!, {}	; <UNPREDICTABLE>
 3e4:	11010182 	smlabbne	r1, r2, r1, r0
 3e8:	01133101 	tsteq	r3, r1, lsl #2
 3ec:	21000013 	tstcs	r0, r3, lsl r0
 3f0:	01018289 	smlabbeq	r1, r9, r2, r8
 3f4:	13010111 	movwne	r0, #4369	; 0x1111
 3f8:	89220000 	stmdbhi	r2!, {}	; <UNPREDICTABLE>
 3fc:	11010182 	smlabbne	r1, r2, r1, r0
 400:	23000001 	movwcs	r0, #1
 404:	1331011d 	teqne	r1, #1073741831	; 0x40000007
 408:	01120111 	tsteq	r2, r1, lsl r1
 40c:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
 410:	13010b57 	movwne	r0, #6999	; 0x1b57
 414:	05240000 	streq	r0, [r4, #-0]!
 418:	02133100 	andseq	r3, r3, #0, 2
 41c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 420:	05250000 	streq	r0, [r5, #-0]!
 424:	00133100 	andseq	r3, r3, r0, lsl #2
 428:	00342600 	eorseq	r2, r4, r0, lsl #12
 42c:	06021331 			; <UNDEFINED> instruction: 0x06021331
 430:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 434:	011d2700 	tsteq	sp, r0, lsl #14
 438:	01521331 	cmpeq	r2, r1, lsr r3
 43c:	110542b8 			; <UNDEFINED> instruction: 0x110542b8
 440:	58011201 	stmdapl	r1, {r0, r9, ip}
 444:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
 448:	0013010b 	andseq	r0, r3, fp, lsl #2
 44c:	82892800 	addhi	r2, r9, #0, 16
 450:	01110101 	tsteq	r1, r1, lsl #2
 454:	010a4293 			; <UNDEFINED> instruction: 0x010a4293
 458:	29000013 	stmdbcs	r0, {r0, r1, r4}
 45c:	0b0b0117 	bleq	2c08c0 <__RAM_SIZE+0x1c08c0>
 460:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 464:	13010b39 	movwne	r0, #6969	; 0x1b39
 468:	0d2a0000 	stceq	0, cr0, [sl, #-0]
 46c:	3a080300 	bcc	201074 <__RAM_SIZE+0x101074>
 470:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 474:	0013490b 	andseq	r4, r3, fp, lsl #18
 478:	82892b00 	addhi	r2, r9, #0, 22
 47c:	01110001 	tsteq	r1, r1
 480:	00001331 	andeq	r1, r0, r1, lsr r3
 484:	03012e2c 	movweq	r2, #7724	; 0x1e2c
 488:	3b0b3a0e 	blcc	2cecc8 <__RAM_SIZE+0x1cecc8>
 48c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 490:	1113490c 	tstne	r3, ip, lsl #18
 494:	40011201 	andmi	r1, r1, r1, lsl #4
 498:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 49c:	00001301 	andeq	r1, r0, r1, lsl #6
 4a0:	0300052d 	movweq	r0, #1325	; 0x52d
 4a4:	3b0b3a08 	blcc	2ceccc <__RAM_SIZE+0x1ceccc>
 4a8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 4ac:	b7060213 	smladlt	r6, r3, r2, r0
 4b0:	00000642 	andeq	r0, r0, r2, asr #12
 4b4:	0300052e 	movweq	r0, #1326	; 0x52e
 4b8:	3b0b3a0e 	blcc	2cecf8 <__RAM_SIZE+0x1cecf8>
 4bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 4c0:	b7060213 	smladlt	r6, r3, r2, r0
 4c4:	00000642 	andeq	r0, r0, r2, asr #12
 4c8:	0300342f 	movweq	r3, #1071	; 0x42f
 4cc:	3b0b3a0e 	blcc	2ced0c <__RAM_SIZE+0x1ced0c>
 4d0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 4d4:	b7060213 	smladlt	r6, r3, r2, r0
 4d8:	00000642 	andeq	r0, r0, r2, asr #12
 4dc:	03003430 	movweq	r3, #1072	; 0x430
 4e0:	3b0b3a08 	blcc	2ced08 <__RAM_SIZE+0x1ced08>
 4e4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 4e8:	b7060213 	smladlt	r6, r3, r2, r0
 4ec:	00000642 	andeq	r0, r0, r2, asr #12
 4f0:	03012e31 	movweq	r2, #7729	; 0x1e31
 4f4:	3b0b3a0e 	blcc	2ced34 <__RAM_SIZE+0x1ced34>
 4f8:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 4fc:	1113490c 	tstne	r3, ip, lsl #18
 500:	40011201 	andmi	r1, r1, r1, lsl #4
 504:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 508:	00001301 	andeq	r1, r0, r1, lsl #6
 50c:	31011d32 	tstcc	r1, r2, lsr sp
 510:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
 514:	01110542 	tsteq	r1, r2, asr #10
 518:	0b580112 	bleq	1600968 <__RAM_SIZE+0x1500968>
 51c:	0b570b59 	bleq	15c3288 <__RAM_SIZE+0x14c3288>
 520:	2e330000 	cdpcs	0, 3, cr0, cr3, cr0, {0}
 524:	3a0e0301 	bcc	381130 <__RAM_SIZE+0x281130>
 528:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 52c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 530:	010b2013 	tsteq	fp, r3, lsl r0
 534:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
 538:	08030005 	stmdaeq	r3, {r0, r2}
 53c:	0b3b0b3a 	bleq	ec322c <__RAM_SIZE+0xdc322c>
 540:	13490b39 	movtne	r0, #39737	; 0x9b39
 544:	05350000 	ldreq	r0, [r5, #-0]!
 548:	3a0e0300 	bcc	381150 <__RAM_SIZE+0x281150>
 54c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 550:	0013490b 	andseq	r4, r3, fp, lsl #18
 554:	00343600 	eorseq	r3, r4, r0, lsl #12
 558:	0b3a0803 	bleq	e8256c <__RAM_SIZE+0xd8256c>
 55c:	0b390b3b 	bleq	e43250 <__RAM_SIZE+0xd43250>
 560:	00001349 	andeq	r1, r0, r9, asr #6
 564:	03012e37 	movweq	r2, #7735	; 0x1e37
 568:	3b0b3a0e 	blcc	2ceda8 <__RAM_SIZE+0x1ceda8>
 56c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 570:	1201110c 	andne	r1, r1, #12, 2
 574:	96064001 	strls	r4, [r6], -r1
 578:	13010c42 	movwne	r0, #7234	; 0x1c42
 57c:	2e380000 	cdpcs	0, 3, cr0, cr8, cr0, {0}
 580:	3a0e0301 	bcc	38118c <__RAM_SIZE+0x28118c>
 584:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 588:	110c270b 	tstne	ip, fp, lsl #14
 58c:	40011201 	andmi	r1, r1, r1, lsl #4
 590:	0c429706 	mcrreq	7, 0, r9, r2, cr6
 594:	00001301 	andeq	r1, r0, r1, lsl #6
 598:	03012e39 	movweq	r2, #7737	; 0x1e39
 59c:	3b0b3a0e 	blcc	2ceddc <__RAM_SIZE+0x1ceddc>
 5a0:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 5a4:	1201110c 	andne	r1, r1, #12, 2
 5a8:	970a4001 	strls	r4, [sl, -r1]
 5ac:	13010c42 	movwne	r0, #7234	; 0x1c42
 5b0:	053a0000 	ldreq	r0, [sl, #-0]!
 5b4:	3a0e0300 	bcc	3811bc <__RAM_SIZE+0x2811bc>
 5b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5bc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 5c0:	3b00000a 	blcc	5f0 <__STACKSEAL_SIZE+0x5f0>
 5c4:	08030005 	stmdaeq	r3, {r0, r2}
 5c8:	0b3b0b3a 	bleq	ec32b8 <__RAM_SIZE+0xdc32b8>
 5cc:	13490b39 	movtne	r0, #39737	; 0x9b39
 5d0:	00000a02 	andeq	r0, r0, r2, lsl #20
 5d4:	3f002e3c 	svccc	0x00002e3c
 5d8:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
 5dc:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
 5e0:	2e3d0000 	cdpcs	0, 3, cr0, cr13, cr0, {0}
 5e4:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
 5e8:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
 5ec:	0b3a0e03 	bleq	e83e00 <__RAM_SIZE+0xd83e00>
 5f0:	0b390b3b 	bleq	e432e4 <__RAM_SIZE+0xd432e4>
 5f4:	01000000 	mrseq	r0, (UNDEF: 0)
 5f8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 5fc:	0e030b13 	vmoveq.32	d3[0], r0
 600:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
 604:	01520111 	cmpeq	r2, r1, lsl r1
 608:	00000610 	andeq	r0, r0, r0, lsl r6
 60c:	0b002402 	bleq	961c <__HEAP_SIZE+0x861c>
 610:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 614:	0300000e 	movweq	r0, #14
 618:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 61c:	0b3b0b3a 	bleq	ec330c <__RAM_SIZE+0xdc330c>
 620:	13490b39 	movtne	r0, #39737	; 0x9b39
 624:	24040000 	strcs	r0, [r4], #-0
 628:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 62c:	0008030b 	andeq	r0, r8, fp, lsl #6
 630:	00260500 	eoreq	r0, r6, r0, lsl #10
 634:	00001349 	andeq	r1, r0, r9, asr #6
 638:	0b000f06 	bleq	4258 <__HEAP_SIZE+0x3258>
 63c:	0013490b 	andseq	r4, r3, fp, lsl #18
 640:	012e0700 			; <UNDEFINED> instruction: 0x012e0700
 644:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 648:	0b3b0b3a 	bleq	ec3338 <__RAM_SIZE+0xdc3338>
 64c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 650:	01111349 	tsteq	r1, r9, asr #6
 654:	06400112 			; <UNDEFINED> instruction: 0x06400112
 658:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 65c:	08000013 	stmdaeq	r0, {r0, r1, r4}
 660:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 664:	0b3b0b3a 	bleq	ec3354 <__RAM_SIZE+0xdc3354>
 668:	13490b39 	movtne	r0, #39737	; 0x9b39
 66c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 670:	09000006 	stmdbeq	r0, {r1, r2}
 674:	08030034 	stmdaeq	r3, {r2, r4, r5}
 678:	0b3b0b3a 	bleq	ec3368 <__RAM_SIZE+0xdc3368>
 67c:	13490b39 	movtne	r0, #39737	; 0x9b39
 680:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 684:	0a000006 	beq	6a4 <__STACKSEAL_SIZE+0x6a4>
 688:	00018289 	andeq	r8, r1, r9, lsl #5
 68c:	13310111 	teqne	r1, #1073741828	; 0x40000004
 690:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
 694:	030c3f01 	movweq	r3, #52993	; 0xcf01
 698:	3b0b3a0e 	blcc	2ceed8 <__RAM_SIZE+0x1ceed8>
 69c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 6a0:	1201110c 	andne	r1, r1, #12, 2
 6a4:	97064001 	strls	r4, [r6, -r1]
 6a8:	13010c42 	movwne	r0, #7234	; 0x1c42
 6ac:	890c0000 	stmdbhi	ip, {}	; <UNPREDICTABLE>
 6b0:	11010182 	smlabbne	r1, r2, r1, r0
 6b4:	00133101 	andseq	r3, r3, r1, lsl #2
 6b8:	828a0d00 	addhi	r0, sl, #0, 26
 6bc:	0a020001 	beq	806c8 <__HEAP_SIZE+0x7f6c8>
 6c0:	000a4291 	muleq	sl, r1, r2
 6c4:	002e0e00 	eoreq	r0, lr, r0, lsl #28
 6c8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 6cc:	0b3b0b3a 	bleq	ec33bc <__RAM_SIZE+0xdc33bc>
 6d0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 6d4:	01120111 	tsteq	r2, r1, lsl r1
 6d8:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 6dc:	0f00000c 	svceq	0x0000000c
 6e0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 6e4:	0b3b0b3a 	bleq	ec33d4 <__RAM_SIZE+0xdc33d4>
 6e8:	13490b39 	movtne	r0, #39737	; 0x9b39
 6ec:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 6f0:	10000006 	andne	r0, r0, r6
 6f4:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 644 <__STACKSEAL_SIZE+0x644>
 6f8:	0b3a0e03 	bleq	e83f0c <__RAM_SIZE+0xd83f0c>
 6fc:	0b390b3b 	bleq	e433f0 <__RAM_SIZE+0xd433f0>
 700:	13490c27 	movtne	r0, #39975	; 0x9c27
 704:	01120111 	tsteq	r2, r1, lsl r1
 708:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 70c:	1100000c 	tstne	r0, ip
 710:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 660 <__STACKSEAL_SIZE+0x660>
 714:	0b3a0e03 	bleq	e83f28 <__RAM_SIZE+0xd83f28>
 718:	0b390b3b 	bleq	e4340c <__RAM_SIZE+0xd4340c>
 71c:	13490c27 	movtne	r0, #39975	; 0x9c27
 720:	01120111 	tsteq	r2, r1, lsl r1
 724:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
 728:	0013010c 	andseq	r0, r3, ip, lsl #2
 72c:	00051200 	andeq	r1, r5, r0, lsl #4
 730:	0b3a0803 	bleq	e82744 <__RAM_SIZE+0xd82744>
 734:	0b390b3b 	bleq	e43428 <__RAM_SIZE+0xd43428>
 738:	06021349 	streq	r1, [r2], -r9, asr #6
 73c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
 740:	002e1300 	eoreq	r1, lr, r0, lsl #6
 744:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 748:	030e4087 	movweq	r4, #57479	; 0xe087
 74c:	3b0b3a0e 	blcc	2cef8c <__RAM_SIZE+0x1cef8c>
 750:	000b390b 	andeq	r3, fp, fp, lsl #18
 754:	11010000 	mrsne	r0, (UNDEF: 1)
 758:	130e2501 	movwne	r2, #58625	; 0xe501
 75c:	1b0e030b 	blne	381390 <__RAM_SIZE+0x281390>
 760:	1106550e 	tstne	r6, lr, lsl #10
 764:	10015201 	andne	r5, r1, r1, lsl #4
 768:	02000006 	andeq	r0, r0, #6
 76c:	0b0b0024 	bleq	2c0804 <__RAM_SIZE+0x1c0804>
 770:	0e030b3e 	vmoveq.16	d3[0], r0
 774:	16030000 	strne	r0, [r3], -r0
 778:	3a0e0300 	bcc	381380 <__RAM_SIZE+0x281380>
 77c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 780:	0013490b 	andseq	r4, r3, fp, lsl #18
 784:	00240400 	eoreq	r0, r4, r0, lsl #8
 788:	0b3e0b0b 	bleq	f833bc <__RAM_SIZE+0xe833bc>
 78c:	00000803 	andeq	r0, r0, r3, lsl #16
 790:	49003505 	stmdbmi	r0, {r0, r2, r8, sl, ip, sp}
 794:	06000013 			; <UNDEFINED> instruction: 0x06000013
 798:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
 79c:	0b3a0b0b 	bleq	e833d0 <__RAM_SIZE+0xd833d0>
 7a0:	0b390b3b 	bleq	e43494 <__RAM_SIZE+0xd43494>
 7a4:	00001301 	andeq	r1, r0, r1, lsl #6
 7a8:	03000d07 	movweq	r0, #3335	; 0xd07
 7ac:	3b0b3a08 	blcc	2cefd4 <__RAM_SIZE+0x1cefd4>
 7b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 7b4:	000a3813 	andeq	r3, sl, r3, lsl r8
 7b8:	000d0800 	andeq	r0, sp, r0, lsl #16
 7bc:	0b3a0e03 	bleq	e83fd0 <__RAM_SIZE+0xd83fd0>
 7c0:	0b390b3b 	bleq	e434b4 <__RAM_SIZE+0xd434b4>
 7c4:	0a381349 	beq	e054f0 <__RAM_SIZE+0xd054f0>
 7c8:	0f090000 	svceq	0x00090000
 7cc:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 7d0:	0a000013 	beq	824 <__Vectors_Size+0x64>
 7d4:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
 7d8:	13011349 	movwne	r1, #4937	; 0x1349
 7dc:	050b0000 	streq	r0, [fp, #-0]
 7e0:	00134900 	andseq	r4, r3, r0, lsl #18
 7e4:	00340c00 	eorseq	r0, r4, r0, lsl #24
 7e8:	0b3a0e03 	bleq	e83ffc <__RAM_SIZE+0xd83ffc>
 7ec:	0b390b3b 	bleq	e434e0 <__RAM_SIZE+0xd434e0>
 7f0:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 6d4 <__STACKSEAL_SIZE+0x6d4>
 7f4:	00000c3c 	andeq	r0, r0, ip, lsr ip
 7f8:	0300340d 	movweq	r3, #1037	; 0x40d
 7fc:	3b0b3a0e 	blcc	2cf03c <__RAM_SIZE+0x1cf03c>
 800:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 804:	000a0213 	andeq	r0, sl, r3, lsl r2
 808:	00340e00 	eorseq	r0, r4, r0, lsl #28
 80c:	0b3a0e03 	bleq	e84020 <__RAM_SIZE+0xd84020>
 810:	0b390b3b 	bleq	e43504 <__RAM_SIZE+0xd43504>
 814:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 6f8 <__STACKSEAL_SIZE+0x6f8>
 818:	00000a02 	andeq	r0, r0, r2, lsl #20
 81c:	3f012e0f 	svccc	0x00012e0f
 820:	3a0e030c 	bcc	381458 <__RAM_SIZE+0x281458>
 824:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 828:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 82c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 830:	970a4001 	strls	r4, [sl, -r1]
 834:	13010c42 	movwne	r0, #7234	; 0x1c42
 838:	05100000 	ldreq	r0, [r0, #-0]
 83c:	3a0e0300 	bcc	381444 <__RAM_SIZE+0x281444>
 840:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 844:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 848:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 84c:	34110000 	ldrcc	r0, [r1], #-0
 850:	3a0e0300 	bcc	381458 <__RAM_SIZE+0x281458>
 854:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 858:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 85c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 860:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
 864:	030c3f00 	movweq	r3, #52992	; 0xcf00
 868:	3b0b3a0e 	blcc	2cf0a8 <__RAM_SIZE+0x1cf0a8>
 86c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
 870:	1113490c 	tstne	r3, ip, lsl #18
 874:	40011201 	andmi	r1, r1, r1, lsl #4
 878:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 87c:	1d130000 	ldcne	0, cr0, [r3, #-0]
 880:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
 884:	0b42b801 	bleq	10ae890 <__RAM_SIZE+0xfae890>
 888:	01120111 	tsteq	r2, r1, lsl r1
 88c:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
 890:	00000b57 	andeq	r0, r0, r7, asr fp
 894:	31003414 	tstcc	r0, r4, lsl r4
 898:	b7060213 	smladlt	r6, r3, r2, r0
 89c:	00000642 	andeq	r0, r0, r2, asr #12
 8a0:	3f012e15 	svccc	0x00012e15
 8a4:	3a0e030c 	bcc	3814dc <__RAM_SIZE+0x2814dc>
 8a8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 8ac:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 8b0:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 8b4:	97064001 	strls	r4, [r6, -r1]
 8b8:	13010c42 	movwne	r0, #7234	; 0x1c42
 8bc:	05160000 	ldreq	r0, [r6, #-0]
 8c0:	3a0e0300 	bcc	3814c8 <__RAM_SIZE+0x2814c8>
 8c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 8c8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 8cc:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 8d0:	34170000 	ldrcc	r0, [r7], #-0
 8d4:	3a0e0300 	bcc	3814dc <__RAM_SIZE+0x2814dc>
 8d8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 8dc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 8e0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 8e4:	34180000 	ldrcc	r0, [r8], #-0
 8e8:	3a080300 	bcc	2014f0 <__RAM_SIZE+0x1014f0>
 8ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 8f0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 8f4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 8f8:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
 8fc:	11010182 	smlabbne	r1, r2, r1, r0
 900:	01133101 	tsteq	r3, r1, lsl #2
 904:	1a000013 	bne	958 <__Vectors_Size+0x198>
 908:	0001828a 	andeq	r8, r1, sl, lsl #5
 90c:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
 910:	1b00000a 	blne	940 <__Vectors_Size+0x180>
 914:	00018289 	andeq	r8, r1, r9, lsl #5
 918:	13310111 	teqne	r1, #1073741828	; 0x40000004
 91c:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
 920:	030c3f01 	movweq	r3, #52993	; 0xcf01
 924:	3b0b3a0e 	blcc	2cf164 <__RAM_SIZE+0x1cf164>
 928:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 92c:	1201110c 	andne	r1, r1, #12, 2
 930:	97064001 	strls	r4, [r6, -r1]
 934:	13010c42 	movwne	r0, #7234	; 0x1c42
 938:	891d0000 	ldmdbhi	sp, {}	; <UNPREDICTABLE>
 93c:	11010182 	smlabbne	r1, r2, r1, r0
 940:	00130101 	andseq	r0, r3, r1, lsl #2
 944:	82891e00 	addhi	r1, r9, #0, 28
 948:	01110101 	tsteq	r1, r1, lsl #2
 94c:	00001331 	andeq	r1, r0, r1, lsr r3
 950:	4901011f 	stmdbmi	r1, {r0, r1, r2, r3, r4, r8}
 954:	00130113 	andseq	r0, r3, r3, lsl r1
 958:	00212000 	eoreq	r2, r1, r0
 95c:	0b2f1349 	bleq	bc5688 <__RAM_SIZE+0xac5688>
 960:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
 964:	3a0e0301 	bcc	381570 <__RAM_SIZE+0x281570>
 968:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 96c:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
 970:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 974:	97064001 	strls	r4, [r6, -r1]
 978:	13010c42 	movwne	r0, #7234	; 0x1c42
 97c:	2e220000 	cdpcs	0, 2, cr0, cr2, cr0, {0}
 980:	030c3f01 	movweq	r3, #52993	; 0xcf01
 984:	3b0b3a0e 	blcc	2cf1c4 <__RAM_SIZE+0x1cf1c4>
 988:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 98c:	3c13490c 			; <UNDEFINED> instruction: 0x3c13490c
 990:	0013010c 	andseq	r0, r3, ip, lsl #2
 994:	012e2300 			; <UNDEFINED> instruction: 0x012e2300
 998:	0b3a0e03 	bleq	e841ac <__RAM_SIZE+0xd841ac>
 99c:	0b390b3b 	bleq	e43690 <__RAM_SIZE+0xd43690>
 9a0:	01110c27 	tsteq	r1, r7, lsr #24
 9a4:	06400112 			; <UNDEFINED> instruction: 0x06400112
 9a8:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 9ac:	24000013 	strcs	r0, [r0], #-19	; 0xffffffed
 9b0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 900 <__Vectors_Size+0x140>
 9b4:	0b3a0e03 	bleq	e841c8 <__RAM_SIZE+0xd841c8>
 9b8:	0b390b3b 	bleq	e436ac <__RAM_SIZE+0xd436ac>
 9bc:	0c3c0c27 	ldceq	12, cr0, [ip], #-156	; 0xffffff64
 9c0:	00001301 	andeq	r1, r0, r1, lsl #6
 9c4:	03012e25 	movweq	r2, #7717	; 0x1e25
 9c8:	3b0b3a0e 	blcc	2cf208 <__RAM_SIZE+0x1cf208>
 9cc:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 9d0:	1113490c 	tstne	r3, ip, lsl #18
 9d4:	40011201 	andmi	r1, r1, r1, lsl #4
 9d8:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
 9dc:	00001301 	andeq	r1, r0, r1, lsl #6
 9e0:	03000526 	movweq	r0, #1318	; 0x526
 9e4:	3b0b3a08 	blcc	2cf20c <__RAM_SIZE+0x1cf20c>
 9e8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 9ec:	b7060213 	smladlt	r6, r3, r2, r0
 9f0:	00000642 	andeq	r0, r0, r2, asr #12
 9f4:	11010b27 	tstne	r1, r7, lsr #22
 9f8:	00011201 	andeq	r1, r1, r1, lsl #4
 9fc:	012e2800 			; <UNDEFINED> instruction: 0x012e2800
 a00:	0b3a0e03 	bleq	e84214 <__RAM_SIZE+0xd84214>
 a04:	0b39053b 	bleq	e41ef8 <__RAM_SIZE+0xd41ef8>
 a08:	13490c27 	movtne	r0, #39975	; 0x9c27
 a0c:	13010b20 	movwne	r0, #6944	; 0x1b20
 a10:	34290000 	strtcc	r0, [r9], #-0
 a14:	3a0e0300 	bcc	38161c <__RAM_SIZE+0x28161c>
 a18:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 a1c:	0013490b 	andseq	r4, r3, fp, lsl #18
 a20:	002e2a00 	eoreq	r2, lr, r0, lsl #20
 a24:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
 a28:	030e4087 	movweq	r4, #57479	; 0xe087
 a2c:	3b0b3a0e 	blcc	2cf26c <__RAM_SIZE+0x1cf26c>
 a30:	2b00000b 	blcs	a64 <__Vectors_Size+0x2a4>
 a34:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 984 <__Vectors_Size+0x1c4>
 a38:	40870c3c 	addmi	r0, r7, ip, lsr ip
 a3c:	3a0e030e 	bcc	38167c <__RAM_SIZE+0x28167c>
 a40:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 a44:	0000000b 	andeq	r0, r0, fp
 a48:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 a4c:	030b130e 	movweq	r1, #45838	; 0xb30e
 a50:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
 a54:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
 a58:	00061001 	andeq	r1, r6, r1
 a5c:	00240200 	eoreq	r0, r4, r0, lsl #4
 a60:	0b3e0b0b 	bleq	f83694 <__RAM_SIZE+0xe83694>
 a64:	00000e03 	andeq	r0, r0, r3, lsl #28
 a68:	03001603 	movweq	r1, #1539	; 0x603
 a6c:	3b0b3a0e 	blcc	2cf2ac <__RAM_SIZE+0x1cf2ac>
 a70:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 a74:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
 a78:	0b0b0024 	bleq	2c0b10 <__RAM_SIZE+0x1c0b10>
 a7c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 a80:	35050000 	strcc	r0, [r5, #-0]
 a84:	00134900 	andseq	r4, r3, r0, lsl #18
 a88:	00260600 	eoreq	r0, r6, r0, lsl #12
 a8c:	00001349 	andeq	r1, r0, r9, asr #6
 a90:	0b011307 	bleq	456b4 <__HEAP_SIZE+0x446b4>
 a94:	3b0b3a05 	blcc	2cf2b0 <__RAM_SIZE+0x1cf2b0>
 a98:	010b3905 	tsteq	fp, r5, lsl #18
 a9c:	08000013 	stmdaeq	r0, {r0, r1, r4}
 aa0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 aa4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 aa8:	13490b39 	movtne	r0, #39737	; 0x9b39
 aac:	00000a38 	andeq	r0, r0, r8, lsr sl
 ab0:	03000d09 	movweq	r0, #3337	; 0xd09
 ab4:	3b0b3a08 	blcc	2cf2dc <__RAM_SIZE+0x1cf2dc>
 ab8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
 abc:	000a3813 	andeq	r3, sl, r3, lsl r8
 ac0:	01010a00 	tsteq	r1, r0, lsl #20
 ac4:	13011349 	movwne	r1, #4937	; 0x1349
 ac8:	210b0000 	mrscs	r0, (UNDEF: 11)
 acc:	2f134900 	svccs	0x00134900
 ad0:	0c00000b 	stceq	0, cr0, [r0], {11}
 ad4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 ad8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 adc:	13490b39 	movtne	r0, #39737	; 0x9b39
 ae0:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
 ae4:	030c3f01 	movweq	r3, #52993	; 0xcf01
 ae8:	3b0b3a0e 	blcc	2cf328 <__RAM_SIZE+0x1cf328>
 aec:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 af0:	1201110c 	andne	r1, r1, #12, 2
 af4:	97064001 	strls	r4, [r6, -r1]
 af8:	13010c42 	movwne	r0, #7234	; 0x1c42
 afc:	340e0000 	strcc	r0, [lr], #-0
 b00:	3a0e0300 	bcc	381708 <__RAM_SIZE+0x281708>
 b04:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 b08:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 b0c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
 b10:	340f0000 	strcc	r0, [pc], #-0	; b18 <__Vectors_Size+0x358>
 b14:	3a0e0300 	bcc	38171c <__RAM_SIZE+0x28171c>
 b18:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 b1c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 b20:	1000000a 	andne	r0, r0, sl
 b24:	01018289 	smlabbeq	r1, r9, r2, r8
 b28:	13310111 	teqne	r1, #1073741828	; 0x40000004
 b2c:	00001301 	andeq	r1, r0, r1, lsl #6
 b30:	01828a11 	orreq	r8, r2, r1, lsl sl
 b34:	910a0200 	mrsls	r0, R10_fiq
 b38:	00000a42 	andeq	r0, r0, r2, asr #20
 b3c:	01828912 	orreq	r8, r2, r2, lsl r9
 b40:	31011101 	tstcc	r1, r1, lsl #2
 b44:	13000013 	movwne	r0, #19
 b48:	0b0b000f 	bleq	2c0b8c <__RAM_SIZE+0x1c0b8c>
 b4c:	00001349 	andeq	r1, r0, r9, asr #6
 b50:	03003414 	movweq	r3, #1044	; 0x414
 b54:	3b0b3a08 	blcc	2cf37c <__RAM_SIZE+0x1cf37c>
 b58:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 b5c:	000b1c13 	andeq	r1, fp, r3, lsl ip
 b60:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
 b64:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
 b68:	0b3b0b3a 	bleq	ec3858 <__RAM_SIZE+0xdc3858>
 b6c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
 b70:	01111349 	tsteq	r1, r9, asr #6
 b74:	0a400112 	beq	1000fc4 <__RAM_SIZE+0xf00fc4>
 b78:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
 b7c:	16000013 			; <UNDEFINED> instruction: 0x16000013
 b80:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
 b84:	0b3b0b3a 	bleq	ec3874 <__RAM_SIZE+0xdc3874>
 b88:	13490b39 	movtne	r0, #39737	; 0x9b39
 b8c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
 b90:	17000006 	strne	r0, [r0, -r6]
 b94:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; ae4 <__Vectors_Size+0x324>
 b98:	40870c3c 	addmi	r0, r7, ip, lsr ip
 b9c:	3a0e030e 	bcc	3817dc <__RAM_SIZE+0x2817dc>
 ba0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 ba4:	1800000b 	stmdane	r0, {r0, r1, r3}
 ba8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; af8 <__Vectors_Size+0x338>
 bac:	40870c3c 	addmi	r0, r7, ip, lsr ip
 bb0:	3a0e030e 	bcc	3817f0 <__RAM_SIZE+0x2817f0>
 bb4:	000b3b0b 	andeq	r3, fp, fp, lsl #22
 bb8:	11010000 	mrsne	r0, (UNDEF: 1)
 bbc:	11061000 	mrsne	r1, (UNDEF: 6)
 bc0:	03011201 	movweq	r1, #4609	; 0x1201
 bc4:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
 bc8:	0005130e 	andeq	r1, r5, lr, lsl #6
 bcc:	11010000 	mrsne	r0, (UNDEF: 1)
 bd0:	11061000 	mrsne	r1, (UNDEF: 6)
 bd4:	03011201 	movweq	r1, #4609	; 0x1201
 bd8:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
 bdc:	0005130e 	andeq	r1, r5, lr, lsl #6
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
void Default_Handler(void) {
       0:	100008fc 	strdne	r0, [r0], -ip
    printf("%s\n", __func__);
       4:	100008fe 	strdne	r0, [r0], -lr
}
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	100008fe 	strdne	r0, [r0], -lr
      10:	10000928 	andne	r0, r0, r8, lsr #18
        if(ch == '\n' || it >= size) {
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00000001 	andeq	r0, r0, r1
      24:	08fe0000 	ldmeq	lr!, {}^	; <UNPREDICTABLE>
      28:	09121000 	ldmdbeq	r2, {ip}
      2c:	00021000 	andeq	r1, r2, r0
      30:	09129f30 	ldmdbeq	r2, {r4, r5, r8, r9, sl, fp, ip, pc}
      34:	09161000 	ldmdbeq	r6, {ip}
      38:	00011000 	andeq	r1, r1, r0
      3c:	00091651 	andeq	r1, r9, r1, asr r6
      40:	00092810 	andeq	r2, r9, r0, lsl r8
      44:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
      50:	100008e4 	andne	r0, r0, r4, ror #17
      54:	100008e6 	andne	r0, r0, r6, ror #17
      58:	007d0002 	rsbseq	r0, sp, r2
      5c:	100008e6 	andne	r0, r0, r6, ror #17
      60:	100008fc 	strdne	r0, [r0], -ip
      64:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      70:	100008cc 	andne	r0, r0, ip, asr #17
      74:	100008ce 	andne	r0, r0, lr, asr #17
      78:	007d0002 	rsbseq	r0, sp, r2
      7c:	100008ce 	andne	r0, r0, lr, asr #17
      80:	100008e4 	andne	r0, r0, r4, ror #17
      84:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      90:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
      94:	100008b6 			; <UNDEFINED> instruction: 0x100008b6
      98:	007d0002 	rsbseq	r0, sp, r2
      9c:	100008b6 			; <UNDEFINED> instruction: 0x100008b6
      a0:	100008cc 	andne	r0, r0, ip, asr #17
      a4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      b0:	1000089c 	mulne	r0, ip, r8
      b4:	1000089e 	mulne	r0, lr, r8
      b8:	007d0002 	rsbseq	r0, sp, r2
      bc:	1000089e 	mulne	r0, lr, r8
      c0:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
      c4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      d0:	10000884 	andne	r0, r0, r4, lsl #17
      d4:	10000886 	andne	r0, r0, r6, lsl #17
      d8:	007d0002 	rsbseq	r0, sp, r2
      dc:	10000886 	andne	r0, r0, r6, lsl #17
      e0:	1000089c 	mulne	r0, ip, r8
      e4:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      f0:	10000868 	andne	r0, r0, r8, ror #16
      f4:	1000086a 	andne	r0, r0, sl, ror #16
      f8:	007d0002 	rsbseq	r0, sp, r2
      fc:	1000086a 	andne	r0, r0, sl, ror #16
     100:	10000884 	andne	r0, r0, r4, lsl #17
     104:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     110:	10000800 	andne	r0, r0, r0, lsl #16
     114:	10000802 	andne	r0, r0, r2, lsl #16
     118:	007d0002 	rsbseq	r0, sp, r2
     11c:	10000802 	andne	r0, r0, r2, lsl #16
     120:	10000804 	andne	r0, r0, r4, lsl #16
     124:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
     128:	10000804 	andne	r0, r0, r4, lsl #16
     12c:	10000856 	andne	r0, r0, r6, asr r8
     130:	907d0003 	rsbsls	r0, sp, r3
     134:	00085602 	andeq	r5, r8, r2, lsl #12
     138:	00086810 	andeq	r6, r8, r0, lsl r8
     13c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     140:	0000000c 	andeq	r0, r0, ip
	...
     14c:	16000000 	strne	r0, [r0], -r0
     150:	19100008 	ldmdbne	r0, {r3}
     154:	01100008 	tsteq	r0, r8
     158:	08195000 	ldmdaeq	r9, {ip, lr}
     15c:	08321000 	ldmdaeq	r2!, {ip}
     160:	00011000 	andeq	r1, r1, r0
     164:	00083454 	andeq	r3, r8, r4, asr r4
     168:	00083e10 	andeq	r3, r8, r0, lsl lr
     16c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
     17c:	1000081c 	andne	r0, r0, ip, lsl r8
     180:	10000822 	andne	r0, r0, r2, lsr #16
     184:	22500001 	subscs	r0, r0, #1
     188:	25100008 	ldrcs	r0, [r0, #-8]
     18c:	01100008 	tsteq	r0, r8
     190:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     1a0:	08260000 	stmdaeq	r6!, {}	; <UNPREDICTABLE>
     1a4:	082c1000 	stmdaeq	ip!, {ip}
     1a8:	00011000 	andeq	r1, r1, r0
     1ac:	00082c50 	andeq	r2, r8, r0, asr ip
     1b0:	00083410 	andeq	r3, r8, r0, lsl r4
     1b4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     1b8:	10000834 	andne	r0, r0, r4, lsr r8
     1bc:	10000838 	andne	r0, r0, r8, lsr r8
     1c0:	38500001 	ldmdacc	r0, {r0}^
     1c4:	58100008 	ldmdapl	r0, {r3}
     1c8:	01100008 	tsteq	r0, r8
     1cc:	00005500 	andeq	r5, r0, r0, lsl #10
     1d0:	00000000 	andeq	r0, r0, r0
     1d4:	00020000 	andeq	r0, r2, r0
     1d8:	08300000 	ldmdaeq	r0!, {}	; <UNPREDICTABLE>
     1dc:	08341000 	ldmdaeq	r4!, {ip}
     1e0:	00021000 	andeq	r1, r2, r0
     1e4:	083e9f30 	ldmdaeq	lr!, {r4, r5, r8, r9, sl, fp, ip, pc}
     1e8:	08541000 	ldmdaeq	r4, {ip}^
     1ec:	00011000 	andeq	r1, r1, r0
     1f0:	00000054 	andeq	r0, r0, r4, asr r0
	...
     200:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     20c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     210:	00000008 	andeq	r0, r0, r8
	...
     220:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     22c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     230:	00000008 	andeq	r0, r0, r8
	...
     240:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     24c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     250:	00000008 	andeq	r0, r0, r8
     254:	00000000 	andeq	r0, r0, r0
     258:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     25c:	0000000c 	andeq	r0, r0, ip
     260:	00000000 	andeq	r0, r0, r0
     264:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     268:	00000028 	andeq	r0, r0, r8, lsr #32
     26c:	00000000 	andeq	r0, r0, r0
     270:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     274:	0000000c 	andeq	r0, r0, ip
     278:	00000000 	andeq	r0, r0, r0
     27c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     280:	00000008 	andeq	r0, r0, r8
     284:	00000000 	andeq	r0, r0, r0
     288:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     2a0:	01000000 	mrseq	r0, (UNDEF: 0)
     2a4:	00005000 	andeq	r5, r0, r0
     2a8:	00000000 	andeq	r0, r0, r0
     2ac:	00020000 	andeq	r0, r2, r0
     2b0:	00005491 	muleq	r0, r1, r4
     2b4:	00000000 	andeq	r0, r0, r0
     2b8:	00040000 	andeq	r0, r4, r0
     2bc:	9f5001f3 	svcls	0x005001f3
	...
     2d4:	00510001 	subseq	r0, r1, r1
     2d8:	00000000 	andeq	r0, r0, r0
     2dc:	04000000 	streq	r0, [r0], #-0
     2e0:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     2e4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     2f4:	01000000 	mrseq	r0, (UNDEF: 0)
     2f8:	00005000 	andeq	r5, r0, r0
	...
     308:	00020000 	andeq	r0, r2, r0
     30c:	0000007d 	andeq	r0, r0, sp, ror r0
     310:	00000000 	andeq	r0, r0, r0
     314:	00020000 	andeq	r0, r2, r0
     318:	0000047d 	andeq	r0, r0, sp, ror r4
     31c:	00000000 	andeq	r0, r0, r0
     320:	00020000 	andeq	r0, r2, r0
     324:	0000107d 	andeq	r1, r0, sp, ror r0
     328:	00000000 	andeq	r0, r0, r0
     32c:	00020000 	andeq	r0, r2, r0
     330:	0000047d 	andeq	r0, r0, sp, ror r4
	...
     348:	00500001 	subseq	r0, r0, r1
     34c:	00000000 	andeq	r0, r0, r0
     350:	01000000 	mrseq	r0, (UNDEF: 0)
     354:	00005100 	andeq	r5, r0, r0, lsl #2
     358:	00000000 	andeq	r0, r0, r0
     35c:	00040000 	andeq	r0, r4, r0
     360:	9f5001f3 	svcls	0x005001f3
	...
     378:	00010000 	andeq	r0, r1, r0
     37c:	00000051 	andeq	r0, r0, r1, asr r0
     380:	00000000 	andeq	r0, r0, r0
     384:	52000100 	andpl	r0, r0, #0, 2
	...
     390:	01f30004 	mvnseq	r0, r4
     394:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     3ac:	00520001 	subseq	r0, r2, r1
     3b0:	00000000 	andeq	r0, r0, r0
     3b4:	01000000 	mrseq	r0, (UNDEF: 0)
     3b8:	00005300 	andeq	r5, r0, r0, lsl #6
     3bc:	00000000 	andeq	r0, r0, r0
     3c0:	00040000 	andeq	r0, r4, r0
     3c4:	9f5201f3 	svcls	0x005201f3
	...
     3d8:	00010000 	andeq	r0, r1, r0
     3dc:	00000053 	andeq	r0, r0, r3, asr r0
	...
     3ec:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     3f8:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     3fc:	00000004 	andeq	r0, r0, r4
     400:	00000000 	andeq	r0, r0, r0
     404:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     408:	00000018 	andeq	r0, r0, r8, lsl r0
     40c:	00000000 	andeq	r0, r0, r0
     410:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     414:	00000004 	andeq	r0, r0, r4
	...
     428:	01000000 	mrseq	r0, (UNDEF: 0)
     42c:	00005000 	andeq	r5, r0, r0
     430:	00000000 	andeq	r0, r0, r0
     434:	00010000 	andeq	r0, r1, r0
     438:	00000053 	andeq	r0, r0, r3, asr r0
     43c:	00000000 	andeq	r0, r0, r0
     440:	f3000400 	vshl.u8	d0, d0, d0
     444:	009f5001 	addseq	r5, pc, r1
	...
     458:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     46c:	007d0002 	rsbseq	r0, sp, r2
	...
     478:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     484:	107d0002 	rsbsne	r0, sp, r2
	...
     490:	207d0002 	rsbscs	r0, sp, r2
	...
     49c:	107d0002 	rsbsne	r0, sp, r2
	...
     4a8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
     4b4:	007d0002 	rsbseq	r0, sp, r2
	...
     4cc:	00010000 	andeq	r0, r1, r0
     4d0:	00000050 	andeq	r0, r0, r0, asr r0
     4d4:	00000000 	andeq	r0, r0, r0
     4d8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     4e4:	01f30004 	mvnseq	r0, r4
     4e8:	00009f50 	andeq	r9, r0, r0, asr pc
	...
     500:	00510001 	subseq	r0, r1, r1
     504:	00000000 	andeq	r0, r0, r0
     508:	01000000 	mrseq	r0, (UNDEF: 0)
     50c:	00005200 	andeq	r5, r0, r0, lsl #4
     510:	00000000 	andeq	r0, r0, r0
     514:	00040000 	andeq	r0, r4, r0
     518:	9f5101f3 	svcls	0x005101f3
	...
     52c:	00010000 	andeq	r0, r1, r0
     530:	00000050 	andeq	r0, r0, r0, asr r0
	...
     540:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     54c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     550:	0000000c 	andeq	r0, r0, ip
     554:	00000000 	andeq	r0, r0, r0
     558:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     55c:	00000010 	andeq	r0, r0, r0, lsl r0
     560:	00000000 	andeq	r0, r0, r0
     564:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     568:	00000020 	andeq	r0, r0, r0, lsr #32
     56c:	00000000 	andeq	r0, r0, r0
     570:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     574:	00000010 	andeq	r0, r0, r0, lsl r0
     578:	00000000 	andeq	r0, r0, r0
     57c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     580:	0000000c 	andeq	r0, r0, ip
     584:	00000000 	andeq	r0, r0, r0
     588:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     5a0:	01000000 	mrseq	r0, (UNDEF: 0)
     5a4:	00005000 	andeq	r5, r0, r0
     5a8:	00000000 	andeq	r0, r0, r0
     5ac:	00010000 	andeq	r0, r1, r0
     5b0:	00000051 	andeq	r0, r0, r1, asr r0
     5b4:	00000000 	andeq	r0, r0, r0
     5b8:	f3000400 	vshl.u8	d0, d0, d0
     5bc:	009f5001 	addseq	r5, pc, r1
	...
     5d0:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     5dc:	10001aa4 	andne	r1, r0, r4, lsr #21
     5e0:	10001aa6 	andne	r1, r0, r6, lsr #21
     5e4:	007d0002 	rsbseq	r0, sp, r2
     5e8:	10001aa6 	andne	r1, r0, r6, lsr #21
     5ec:	10001aa8 	andne	r1, r0, r8, lsr #21
     5f0:	107d0002 	rsbsne	r0, sp, r2
     5f4:	10001aa8 	andne	r1, r0, r8, lsr #21
     5f8:	10001aaa 	andne	r1, r0, sl, lsr #21
     5fc:	147d0002 	ldrbtne	r0, [sp], #-2
     600:	10001aaa 	andne	r1, r0, sl, lsr #21
     604:	10001ac2 	andne	r1, r0, r2, asr #21
     608:	287d0002 	ldmdacs	sp!, {r1}^
     60c:	10001ac2 	andne	r1, r0, r2, asr #21
     610:	10001ac6 	andne	r1, r0, r6, asr #21
     614:	147d0002 	ldrbtne	r0, [sp], #-2
     618:	10001ac6 	andne	r1, r0, r6, asr #21
     61c:	10001ac8 	andne	r1, r0, r8, asr #21
     620:	107d0002 	rsbsne	r0, sp, r2
     624:	10001ac8 	andne	r1, r0, r8, asr #21
     628:	10001ad0 	ldrdne	r1, [r0], -r0
     62c:	007d0002 	rsbseq	r0, sp, r2
	...
     638:	1ac00000 	bne	ff000640 <__StackTop+0xc6f00640>
     63c:	1ad01000 	bne	ff404644 <__StackTop+0xc7304644>
     640:	00011000 	andeq	r1, r1, r0
     644:	00000050 	andeq	r0, r0, r0, asr r0
     648:	00000000 	andeq	r0, r0, r0
     64c:	00141800 	andseq	r1, r4, r0, lsl #16
     650:	00141c10 	andseq	r1, r4, r0, lsl ip
     654:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     658:	00141c00 	andseq	r1, r4, r0, lsl #24
     65c:	00141e10 	andseq	r1, r4, r0, lsl lr
     660:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     664:	00141e24 	andseq	r1, r4, r4, lsr #28
     668:	001a8e10 	andseq	r8, sl, r0, lsl lr
     66c:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
     670:	1a8e00e0 	bne	fe3809f8 <__StackTop+0xc62809f8>
     674:	1a981000 	bne	fe60467c <__StackTop+0xc650467c>
     678:	00021000 	andeq	r1, r2, r0
     67c:	0000247d 	andeq	r2, r0, sp, ror r4
	...
     68c:	14180000 	ldrne	r0, [r8], #-0
     690:	142c1000 	strtne	r1, [ip], #-0
     694:	00011000 	andeq	r1, r1, r0
     698:	00142e50 	andseq	r2, r4, r0, asr lr
     69c:	001a7410 	andseq	r7, sl, r0, lsl r4
     6a0:	57000110 	smladpl	r0, r0, r1, r0
     6a4:	10001a74 	andne	r1, r0, r4, ror sl
     6a8:	10001a78 	andne	r1, r0, r8, ror sl
     6ac:	78500001 	ldmdavc	r0, {r0}^
     6b0:	9210001a 	andsls	r0, r0, #26
     6b4:	0110001a 	tsteq	r0, sl, lsl r0
     6b8:	00005700 	andeq	r5, r0, r0, lsl #14
	...
     6cc:	10001418 	andne	r1, r0, r8, lsl r4
     6d0:	1000142e 	andne	r1, r0, lr, lsr #8
     6d4:	2e510001 	cdpcs	0, 5, cr0, cr1, cr1, {0}
     6d8:	74100014 	ldrvc	r0, [r0], #-20	; 0xffffffec
     6dc:	0110001a 	tsteq	r0, sl, lsl r0
     6e0:	1a745800 	bne	1d166e8 <__RAM_SIZE+0x1c166e8>
     6e4:	1a781000 	bne	1e046ec <__RAM_SIZE+0x1d046ec>
     6e8:	00011000 	andeq	r1, r1, r0
     6ec:	001a7851 	andseq	r7, sl, r1, asr r8
     6f0:	001a9210 	andseq	r9, sl, r0, lsl r2
     6f4:	58000110 	stmdapl	r0, {r4, r8}
     6f8:	10001a92 	mulne	r0, r2, sl
     6fc:	10001a98 	mulne	r0, r8, sl
     700:	01f30004 	mvnseq	r0, r4
     704:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     720:	10001418 	andne	r1, r0, r8, lsl r4
     724:	1000142e 	andne	r1, r0, lr, lsr #8
     728:	2e520001 	cdpcs	0, 5, cr0, cr2, cr1, {0}
     72c:	96100014 			; <UNDEFINED> instruction: 0x96100014
     730:	01100019 	tsteq	r0, r9, lsl r0
     734:	19965600 	ldmibne	r6, {r9, sl, ip, lr}
     738:	19981000 	ldmibne	r8, {ip}
     73c:	00011000 	andeq	r1, r1, r0
     740:	0019985b 	andseq	r9, r9, fp, asr r8
     744:	0019c210 	andseq	ip, r9, r0, lsl r2
     748:	56000110 			; <UNDEFINED> instruction: 0x56000110
     74c:	100019c2 	andne	r1, r0, r2, asr #19
     750:	100019ec 	andne	r1, r0, ip, ror #19
     754:	ec5b0001 	mrrc	0, 0, r0, fp, cr1
     758:	74100019 	ldrvc	r0, [r0], #-25	; 0xffffffe7
     75c:	0110001a 	tsteq	r0, sl, lsl r0
     760:	1a745600 	bne	1d15f68 <__RAM_SIZE+0x1c15f68>
     764:	1a781000 	bne	1e0476c <__RAM_SIZE+0x1d0476c>
     768:	00011000 	andeq	r1, r1, r0
     76c:	001a7852 	andseq	r7, sl, r2, asr r8
     770:	001a9210 	andseq	r9, sl, r0, lsl r2
     774:	56000110 			; <UNDEFINED> instruction: 0x56000110
     778:	10001a92 	mulne	r0, r2, sl
     77c:	10001a98 	mulne	r0, r8, sl
     780:	01f30004 	mvnseq	r0, r4
     784:	00009f52 	andeq	r9, r0, r2, asr pc
	...
     790:	14180000 	ldrne	r0, [r8], #-0
     794:	142e1000 	strtne	r1, [lr], #-0
     798:	00011000 	andeq	r1, r1, r0
     79c:	001a7453 	andseq	r7, sl, r3, asr r4
     7a0:	001a7810 	andseq	r7, sl, r0, lsl r8
     7a4:	53000110 	movwpl	r0, #272	; 0x110
	...
     7b0:	00000001 	andeq	r0, r0, r1
	...
     7c8:	10001454 	andne	r1, r0, r4, asr r4
     7cc:	10001456 	andne	r1, r0, r6, asr r4
     7d0:	9f300002 	svcls	0x00300002
     7d4:	10001456 	andne	r1, r0, r6, asr r4
     7d8:	10001554 	andne	r1, r0, r4, asr r5
     7dc:	54550001 	ldrbpl	r0, [r5], #-1
     7e0:	66100015 			; <UNDEFINED> instruction: 0x66100015
     7e4:	01100015 	tsteq	r0, r5, lsl r0
     7e8:	15665100 	strbne	r5, [r6, #-256]!	; 0xffffff00
     7ec:	15701000 	ldrbne	r1, [r0, #-0]!
     7f0:	00011000 	andeq	r1, r1, r0
     7f4:	00157055 	andseq	r7, r5, r5, asr r0
     7f8:	00158210 	andseq	r8, r5, r0, lsl r2
     7fc:	51000110 	tstpl	r0, r0, lsl r1
     800:	10001582 	andne	r1, r0, r2, lsl #11
     804:	10001730 	andne	r1, r0, r0, lsr r7
     808:	38550001 	ldmdacc	r5, {r0}^
     80c:	54100017 	ldrpl	r0, [r0], #-23	; 0xffffffe9
     810:	01100017 	tsteq	r0, r7, lsl r0
     814:	17545500 	ldrbne	r5, [r4, -r0, lsl #10]
     818:	17731000 	ldrbne	r1, [r3, -r0]!
     81c:	00021000 	andeq	r1, r2, r0
     820:	17784091 			; <UNDEFINED> instruction: 0x17784091
     824:	18dc1000 	ldmne	ip, {ip}^
     828:	00011000 	andeq	r1, r1, r0
     82c:	00194a55 	andseq	r4, r9, r5, asr sl
     830:	0019a410 	andseq	sl, r9, r0, lsl r4
     834:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     838:	10001a14 	andne	r1, r0, r4, lsl sl
     83c:	10001a4c 	andne	r1, r0, ip, asr #20
     840:	60550001 	subsvs	r0, r5, r1
     844:	6210001a 	andsvs	r0, r0, #26
     848:	0110001a 	tsteq	r0, sl, lsl r0
     84c:	00005500 	andeq	r5, r0, r0, lsl #10
     850:	00000000 	andeq	r0, r0, r0
     854:	00020000 	andeq	r0, r2, r0
	...
     864:	02000000 	andeq	r0, r0, #0
     868:	00000002 	andeq	r0, r0, r2
     86c:	10001478 	andne	r1, r0, r8, ror r4
     870:	1000148a 	andne	r1, r0, sl, lsl #9
     874:	9f300002 	svcls	0x00300002
     878:	1000148a 	andne	r1, r0, sl, lsl #9
     87c:	100014b7 			; <UNDEFINED> instruction: 0x100014b7
     880:	48910002 	ldmmi	r1, {r1}
     884:	100014ea 	andne	r1, r0, sl, ror #9
     888:	100014f2 	strdne	r1, [r0], -r2
     88c:	9f300002 	svcls	0x00300002
     890:	100014f2 	strdne	r1, [r0], -r2
     894:	100014f4 	strdne	r1, [r0], -r4
     898:	f4500001 			; <UNDEFINED> instruction: 0xf4500001
     89c:	02100014 	andseq	r0, r0, #20
     8a0:	02100015 	andseq	r0, r0, #21
     8a4:	029f3000 	addseq	r3, pc, #0
     8a8:	0a100015 	beq	400904 <__RAM_SIZE+0x300904>
     8ac:	02100015 	andseq	r0, r0, #21
     8b0:	0a489100 	beq	1224cb8 <__RAM_SIZE+0x1124cb8>
     8b4:	12100015 	andsne	r0, r0, #21
     8b8:	02100015 	andseq	r0, r0, #21
     8bc:	129f3000 	addsne	r3, pc, #0
     8c0:	14100015 	ldrne	r0, [r0], #-21	; 0xffffffeb
     8c4:	01100015 	tsteq	r0, r5, lsl r0
     8c8:	15145300 	ldrne	r5, [r4, #-768]	; 0xfffffd00
     8cc:	1a141000 	bne	5048d4 <__RAM_SIZE+0x4048d4>
     8d0:	00021000 	andeq	r1, r2, r0
     8d4:	1a144891 	bne	512b20 <__RAM_SIZE+0x412b20>
     8d8:	1a4a1000 	bne	12848e0 <__RAM_SIZE+0x11848e0>
     8dc:	00021000 	andeq	r1, r2, r0
     8e0:	1a4a9f38 	bne	12a85c8 <__RAM_SIZE+0x11a85c8>
     8e4:	1a741000 	bne	1d048ec <__RAM_SIZE+0x1c048ec>
     8e8:	00021000 	andeq	r1, r2, r0
     8ec:	00004891 	muleq	r0, r1, r8
     8f0:	00000000 	andeq	r0, r0, r0
     8f4:	00010000 	andeq	r0, r1, r0
	...
     914:	1000148a 	andne	r1, r0, sl, lsl #9
     918:	10001496 	mulne	r0, r6, r4
     91c:	9f300002 	svcls	0x00300002
     920:	10001496 	mulne	r0, r6, r4
     924:	100014b7 			; <UNDEFINED> instruction: 0x100014b7
     928:	145b0001 	ldrbne	r0, [fp], #-1
     92c:	3a100015 	bcc	400988 <__RAM_SIZE+0x300988>
     930:	02100015 	andseq	r0, r0, #21
     934:	3a9f3000 	bcc	fe7cc93c <__StackTop+0xc66cc93c>
     938:	3c100015 	ldccc	0, cr0, [r0], {21}
     93c:	01100015 	tsteq	r0, r5, lsl r0
     940:	153c5000 	ldrne	r5, [ip, #-0]!
     944:	15481000 	strbne	r1, [r8, #-0]
     948:	00021000 	andeq	r1, r2, r0
     94c:	15489f30 	strbne	r9, [r8, #-3888]	; 0xfffff0d0
     950:	18e21000 	stmiane	r2!, {ip}^
     954:	00011000 	andeq	r1, r1, r0
     958:	00191e5b 	andseq	r1, r9, fp, asr lr
     95c:	00192410 	andseq	r2, r9, r0, lsl r4
     960:	5b000110 	blpl	da8 <__Vectors_Size+0x5e8>
     964:	1000194a 	andne	r1, r0, sl, asr #18
     968:	10001994 	mulne	r0, r4, r9
     96c:	945b0001 	ldrbls	r0, [fp], #-1
     970:	98100019 	ldmdals	r0, {r0, r3, r4}
     974:	01100019 	tsteq	r0, r9, lsl r0
     978:	19985400 	ldmibne	r8, {sl, ip, lr}
     97c:	19c01000 	stmibne	r0, {ip}^
     980:	00011000 	andeq	r1, r1, r0
     984:	0019c05b 	andseq	ip, r9, fp, asr r0
     988:	0019c410 	andseq	ip, r9, r0, lsl r4
     98c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     990:	100019c4 	andne	r1, r0, r4, asr #19
     994:	100019c6 	andne	r1, r0, r6, asr #19
     998:	c6530001 	ldrbgt	r0, [r3], -r1
     99c:	e0100019 	ands	r0, r0, r9, lsl r0
     9a0:	01100019 	tsteq	r0, r9, lsl r0
     9a4:	19e05400 	stmibne	r0!, {sl, ip, lr}^
     9a8:	19e41000 	stmibne	r4!, {ip}^
     9ac:	00011000 	andeq	r1, r1, r0
     9b0:	001a1453 	andseq	r1, sl, r3, asr r4
     9b4:	001a7410 	andseq	r7, sl, r0, lsl r4
     9b8:	5b000110 	blpl	e00 <__Vectors_Size+0x640>
	...
     9c4:	00010000 	andeq	r0, r1, r0
     9c8:	00010001 	andeq	r0, r1, r1
     9cc:	00010001 	andeq	r0, r1, r1
     9d0:	14780000 	ldrbtne	r0, [r8], #-0
     9d4:	14b71000 	ldrtne	r1, [r7], #0
     9d8:	00021000 	andeq	r1, r2, r0
     9dc:	14c09f30 	strbne	r9, [r0], #3888	; 0xf30
     9e0:	14c21000 	strbne	r1, [r2], #0
     9e4:	00021000 	andeq	r1, r2, r0
     9e8:	14ca9f31 	strbne	r9, [sl], #3889	; 0xf31
     9ec:	14cc1000 	strbne	r1, [ip], #0
     9f0:	00021000 	andeq	r1, r2, r0
     9f4:	14d49f31 	ldrbne	r9, [r4], #3889	; 0xf31
     9f8:	14d61000 	ldrbne	r1, [r6], #0
     9fc:	00021000 	andeq	r1, r2, r0
     a00:	14de9f31 	ldrbne	r9, [lr], #3889	; 0xf31
     a04:	14e01000 	strbtne	r1, [r0], #0
     a08:	00021000 	andeq	r1, r2, r0
     a0c:	14e89f31 	strbtne	r9, [r8], #3889	; 0xf31
     a10:	14ea1000 	strbtne	r1, [sl], #0
     a14:	00021000 	andeq	r1, r2, r0
     a18:	14ea9f31 	strbtne	r9, [sl], #3889	; 0xf31
     a1c:	1a741000 	bne	1d04a24 <__RAM_SIZE+0x1c04a24>
     a20:	00021000 	andeq	r1, r2, r0
     a24:	00009f30 	andeq	r9, r0, r0, lsr pc
     a28:	00000000 	andeq	r0, r0, r0
     a2c:	00020000 	andeq	r0, r2, r0
	...
     a8c:	14240000 	strtne	r0, [r4], #-0
     a90:	142e1000 	strtne	r1, [lr], #-0
     a94:	00021000 	andeq	r1, r2, r0
     a98:	142e9f30 	strtne	r9, [lr], #-3888	; 0xfffff0d0
     a9c:	143e1000 	ldrtne	r1, [lr], #-0
     aa0:	00011000 	andeq	r1, r1, r0
     aa4:	00143e54 	andseq	r3, r4, r4, asr lr
     aa8:	00145010 	andseq	r5, r4, r0, lsl r0
     aac:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     ab0:	10001450 	andne	r1, r0, r0, asr r4
     ab4:	100016da 	ldrdne	r1, [r0], -sl
     ab8:	da540001 	ble	1500ac4 <__RAM_SIZE+0x1400ac4>
     abc:	dc100016 	ldcle	0, cr0, [r0], {22}
     ac0:	01100016 	tsteq	r0, r6, lsl r0
     ac4:	16dc5000 	ldrbne	r5, [ip], r0
     ac8:	17301000 	ldrne	r1, [r0, -r0]!
     acc:	00011000 	andeq	r1, r1, r0
     ad0:	00173054 	andseq	r3, r7, r4, asr r0
     ad4:	00173810 	andseq	r3, r7, r0, lsl r8
     ad8:	50000110 	andpl	r0, r0, r0, lsl r1
     adc:	10001738 	andne	r1, r0, r8, lsr r7
     ae0:	10001776 	andne	r1, r0, r6, ror r7
     ae4:	76540001 	ldrbvc	r0, [r4], -r1
     ae8:	78100017 	ldmdavc	r0, {r0, r1, r2, r4}
     aec:	01100017 	tsteq	r0, r7, lsl r0
     af0:	17785000 	ldrbne	r5, [r8, -r0]!
     af4:	17b01000 	ldrne	r1, [r0, r0]!
     af8:	00011000 	andeq	r1, r1, r0
     afc:	0017b054 	andseq	fp, r7, r4, asr r0
     b00:	0017b210 	andseq	fp, r7, r0, lsl r2
     b04:	50000110 	andpl	r0, r0, r0, lsl r1
     b08:	100017b2 			; <UNDEFINED> instruction: 0x100017b2
     b0c:	10001804 	andne	r1, r0, r4, lsl #16
     b10:	04540001 	ldrbeq	r0, [r4], #-1
     b14:	06100018 			; <UNDEFINED> instruction: 0x06100018
     b18:	01100018 	tsteq	r0, r8, lsl r0
     b1c:	18065000 	stmdane	r6, {ip, lr}
     b20:	182e1000 	stmdane	lr!, {ip}
     b24:	00011000 	andeq	r1, r1, r0
     b28:	00182e54 	andseq	r2, r8, r4, asr lr
     b2c:	00183010 	andseq	r3, r8, r0, lsl r0
     b30:	50000110 	andpl	r0, r0, r0, lsl r1
     b34:	10001830 	andne	r1, r0, r0, lsr r8
     b38:	1000187c 	andne	r1, r0, ip, ror r8
     b3c:	7c540001 	mrrcvc	0, 0, r0, r4, cr1
     b40:	84100018 	ldrhi	r0, [r0], #-24	; 0xffffffe8
     b44:	01100018 	tsteq	r0, r8, lsl r0
     b48:	18845000 	stmne	r4, {ip, lr}
     b4c:	18d01000 	ldmne	r0, {ip}^
     b50:	00011000 	andeq	r1, r1, r0
     b54:	0018d054 	andseq	sp, r8, r4, asr r0
     b58:	0018d810 	andseq	sp, r8, r0, lsl r8
     b5c:	50000110 	andpl	r0, r0, r0, lsl r1
     b60:	100018d8 	ldrdne	r1, [r0], -r8
     b64:	100018ec 	andne	r1, r0, ip, ror #17
     b68:	ec540001 	mrrc	0, 0, r0, r4, cr1
     b6c:	02100018 	andseq	r0, r0, #24
     b70:	01100019 	tsteq	r0, r9, lsl r0
     b74:	19025a00 	stmdbne	r2, {r9, fp, ip, lr}
     b78:	19061000 	stmdbne	r6, {ip}
     b7c:	00011000 	andeq	r1, r1, r0
     b80:	00190652 	andseq	r0, r9, r2, asr r6
     b84:	00191210 	andseq	r1, r9, r0, lsl r2
     b88:	5a000110 	bpl	fd0 <__Vectors_Size+0x810>
     b8c:	10001912 	andne	r1, r0, r2, lsl r9
     b90:	1000191e 	andne	r1, r0, lr, lsl r9
     b94:	1e520001 	cdpne	0, 5, cr0, cr2, cr1, {0}
     b98:	28100019 	ldmdacs	r0, {r0, r3, r4}
     b9c:	01100019 	tsteq	r0, r9, lsl r0
     ba0:	19285400 	stmdbne	r8!, {sl, ip, lr}
     ba4:	192e1000 	stmdbne	lr!, {ip}
     ba8:	00011000 	andeq	r1, r1, r0
     bac:	00192e5a 	andseq	r2, r9, sl, asr lr
     bb0:	00193210 	andseq	r3, r9, r0, lsl r2
     bb4:	52000110 	andpl	r0, r0, #16, 2
     bb8:	10001932 	andne	r1, r0, r2, lsr r9
     bbc:	1000193e 	andne	r1, r0, lr, lsr r9
     bc0:	3e550001 	cdpcc	0, 5, cr0, cr5, cr1, {0}
     bc4:	4a100019 	bmi	400c30 <__RAM_SIZE+0x300c30>
     bc8:	01100019 	tsteq	r0, r9, lsl r0
     bcc:	194a5200 	stmdbne	sl, {r9, ip, lr}^
     bd0:	19921000 	ldmibne	r2, {ip}
     bd4:	00011000 	andeq	r1, r1, r0
     bd8:	00199254 	andseq	r9, r9, r4, asr r2
     bdc:	00199810 	andseq	r9, r9, r0, lsl r8
     be0:	52000110 	andpl	r0, r0, #16, 2
     be4:	10001998 	mulne	r0, r8, r9
     be8:	100019a0 	andne	r1, r0, r0, lsr #19
     bec:	a0540001 	subsge	r0, r4, r1
     bf0:	a8100019 	ldmdage	r0, {r0, r3, r4}
     bf4:	01100019 	tsteq	r0, r9, lsl r0
     bf8:	19a85200 	stmibne	r8!, {r9, ip, lr}
     bfc:	19b41000 	ldmibne	r4!, {ip}
     c00:	00011000 	andeq	r1, r1, r0
     c04:	0019b459 	andseq	fp, r9, r9, asr r4
     c08:	0019cc10 	andseq	ip, r9, r0, lsl ip
     c0c:	52000110 	andpl	r0, r0, #16, 2
     c10:	100019cc 	andne	r1, r0, ip, asr #19
     c14:	100019d4 	ldrdne	r1, [r0], -r4
     c18:	d4550001 	ldrble	r0, [r5], #-1
     c1c:	fc100019 	ldc2	0, cr0, [r0], {25}
     c20:	01100019 	tsteq	r0, r9, lsl r0
     c24:	19fc5200 	ldmibne	ip!, {r9, ip, lr}^
     c28:	1a081000 	bne	204c30 <__RAM_SIZE+0x104c30>
     c2c:	00011000 	andeq	r1, r1, r0
     c30:	001a0855 	andseq	r0, sl, r5, asr r8
     c34:	001a1410 	andseq	r1, sl, r0, lsl r4
     c38:	52000110 	andpl	r0, r0, #16, 2
     c3c:	10001a14 	andne	r1, r0, r4, lsl sl
     c40:	10001a42 	andne	r1, r0, r2, asr #20
     c44:	42540001 	subsmi	r0, r4, #1
     c48:	4a10001a 	bmi	400cb8 <__RAM_SIZE+0x300cb8>
     c4c:	0110001a 	tsteq	r0, sl, lsl r0
     c50:	1a4a5000 	bne	1294c58 <__RAM_SIZE+0x1194c58>
     c54:	1a4c1000 	bne	1304c5c <__RAM_SIZE+0x1204c5c>
     c58:	00011000 	andeq	r1, r1, r0
     c5c:	001a4c54 	andseq	r4, sl, r4, asr ip
     c60:	001a6010 	andseq	r6, sl, r0, lsl r0
     c64:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     c68:	10001a60 	andne	r1, r0, r0, ror #20
     c6c:	10001a62 	andne	r1, r0, r2, ror #20
     c70:	62540001 	subsvs	r0, r4, #1
     c74:	7410001a 	ldrvc	r0, [r0], #-26	; 0xffffffe6
     c78:	0110001a 	tsteq	r0, sl, lsl r0
     c7c:	1a745500 	bne	1d16084 <__RAM_SIZE+0x1c16084>
     c80:	1a781000 	bne	1e04c88 <__RAM_SIZE+0x1d04c88>
     c84:	00021000 	andeq	r1, r2, r0
     c88:	1a789f30 	bne	1e28950 <__RAM_SIZE+0x1d28950>
     c8c:	1a921000 	bne	fe484c94 <__StackTop+0xc6384c94>
     c90:	00011000 	andeq	r1, r1, r0
     c94:	001a9254 	andseq	r9, sl, r4, asr r2
     c98:	001a9810 	andseq	r9, sl, r0, lsl r8
     c9c:	50000110 	andpl	r0, r0, r0, lsl r1
	...
     ca8:	00000001 	andeq	r0, r0, r1
	...
     cc4:	1000166e 	andne	r1, r0, lr, ror #12
     cc8:	10001676 	andne	r1, r0, r6, ror r6
     ccc:	9f3a0002 	svcls	0x003a0002
     cd0:	10001678 	andne	r1, r0, r8, ror r6
     cd4:	100016c8 	andne	r1, r0, r8, asr #13
     cd8:	c8530001 	ldmdagt	r3, {r0}^
     cdc:	d7100016 			; <UNDEFINED> instruction: 0xd7100016
     ce0:	03100016 	tsteq	r0, #22
     ce4:	7fa89100 	svcvc	0x00a89100
     ce8:	100016e8 	andne	r1, r0, r8, ror #13
     cec:	10001724 	andne	r1, r0, r4, lsr #14
     cf0:	24530001 	ldrbcs	r0, [r3], #-1
     cf4:	2d100017 	ldccs	0, cr0, [r0, #-92]	; 0xffffffa4
     cf8:	03100017 	tsteq	r0, #23
     cfc:	7fa89100 	svcvc	0x00a89100
     d00:	10001738 	andne	r1, r0, r8, lsr r7
     d04:	1000175e 	andne	r1, r0, lr, asr r7
     d08:	5e530001 	cdppl	0, 5, cr0, cr3, cr1, {0}
     d0c:	73100017 	tstvc	r0, #23
     d10:	03100017 	tsteq	r0, #23
     d14:	7fb09100 	svcvc	0x00b09100
     d18:	10001778 	andne	r1, r0, r8, ror r7
     d1c:	100017a4 	andne	r1, r0, r4, lsr #15
     d20:	a4530001 	ldrbge	r0, [r3], #-1
     d24:	ad100017 	ldcge	0, cr0, [r0, #-92]	; 0xffffffa4
     d28:	03100017 	tsteq	r0, #23
     d2c:	7fa89100 	svcvc	0x00a89100
     d30:	100017b2 			; <UNDEFINED> instruction: 0x100017b2
     d34:	100017f8 	strdne	r1, [r0], -r8
     d38:	f8530001 			; <UNDEFINED> instruction: 0xf8530001
     d3c:	01100017 	tsteq	r0, r7, lsl r0
     d40:	03100018 	tsteq	r0, #24
     d44:	7fb09100 	svcvc	0x00b09100
     d48:	10001806 	andne	r1, r0, r6, lsl #16
     d4c:	1000181a 	andne	r1, r0, sl, lsl r8
     d50:	1a530001 	bne	14c0d5c <__RAM_SIZE+0x13c0d5c>
     d54:	2b100018 	blcs	400dbc <__RAM_SIZE+0x300dbc>
     d58:	03100018 	tsteq	r0, #24
     d5c:	7fa89100 	svcvc	0x00a89100
     d60:	10001830 	andne	r1, r0, r0, lsr r8
     d64:	1000184a 	andne	r1, r0, sl, asr #16
     d68:	00530001 	subseq	r0, r3, r1
	...
     d74:	00170800 	andseq	r0, r7, r0, lsl #16
     d78:	00171e10 	andseq	r1, r7, r0, lsl lr
     d7c:	52000110 	andpl	r0, r0, #16, 2
	...
     d8c:	100016ba 			; <UNDEFINED> instruction: 0x100016ba
     d90:	100016d0 	ldrdne	r1, [r0], -r0
     d94:	d0520001 	subsle	r0, r2, r1
     d98:	d7100016 			; <UNDEFINED> instruction: 0xd7100016
     d9c:	02100016 	andseq	r0, r0, #22
     da0:	00007d00 	andeq	r7, r0, r0, lsl #26
     da4:	00000000 	andeq	r0, r0, r0
     da8:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     dbc:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
     dc0:	e2100018 	ands	r0, r0, #24
     dc4:	02100018 	andseq	r0, r0, #24
     dc8:	e29f3100 	adds	r3, pc, #0, 2
     dcc:	f8100018 			; <UNDEFINED> instruction: 0xf8100018
     dd0:	01100018 	tsteq	r0, r8, lsl r0
     dd4:	19025900 	stmdbne	r2, {r8, fp, ip, lr}
     dd8:	19121000 	ldmdbne	r2, {ip}
     ddc:	00011000 	andeq	r1, r1, r0
     de0:	00191259 	andseq	r1, r9, r9, asr r2
     de4:	00191610 	andseq	r1, r9, r0, lsl r6
     de8:	53000110 	movwpl	r0, #272	; 0x110
     dec:	10001916 	andne	r1, r0, r6, lsl r9
     df0:	1000191e 	andne	r1, r0, lr, lsl r9
     df4:	1e590001 	cdpne	0, 5, cr0, cr9, cr1, {0}
     df8:	28100019 	ldmdacs	r0, {r0, r3, r4}
     dfc:	02100019 	andseq	r0, r0, #25
     e00:	289f3100 	ldmcs	pc, {r8, ip, sp}	; <UNPREDICTABLE>
     e04:	30100019 	andscc	r0, r0, r9, lsl r0
     e08:	01100019 	tsteq	r0, r9, lsl r0
     e0c:	19305900 	ldmdbne	r0!, {r8, fp, ip, lr}
     e10:	193e1000 	ldmdbne	lr!, {ip}
     e14:	00011000 	andeq	r1, r1, r0
     e18:	00193e54 	andseq	r3, r9, r4, asr lr
     e1c:	00194210 	andseq	r4, r9, r0, lsl r2
     e20:	59000110 	stmdbpl	r0, {r4, r8}
     e24:	10001942 	andne	r1, r0, r2, asr #18
     e28:	1000194a 	andne	r1, r0, sl, asr #18
     e2c:	00540001 	subseq	r0, r4, r1
	...
     e38:	c4000000 	strgt	r0, [r0], #-0
     e3c:	ec100019 	ldc	0, cr0, [r0], {25}
     e40:	01100019 	tsteq	r0, r9, lsl r0
     e44:	19f45a00 	ldmibne	r4!, {r9, fp, ip, lr}^
     e48:	19f81000 	ldmibne	r8!, {ip}^
     e4c:	00011000 	andeq	r1, r1, r0
     e50:	0000005a 	andeq	r0, r0, sl, asr r0
	...
     e6c:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
     e70:	98100019 	ldmdals	r0, {r0, r3, r4}
     e74:	01100019 	tsteq	r0, r9, lsl r0
     e78:	199c5900 	ldmibne	ip, {r8, fp, ip, lr}
     e7c:	19a41000 	stmibne	r4!, {ip}
     e80:	00011000 	andeq	r1, r1, r0
     e84:	0019a459 	andseq	sl, r9, r9, asr r4
     e88:	0019b410 	andseq	fp, r9, r0, lsl r4
     e8c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     e90:	100019b4 			; <UNDEFINED> instruction: 0x100019b4
     e94:	100019b6 			; <UNDEFINED> instruction: 0x100019b6
     e98:	b6530001 	ldrblt	r0, [r3], -r1
     e9c:	c4100019 	ldrgt	r0, [r0], #-25	; 0xffffffe7
     ea0:	01100019 	tsteq	r0, r9, lsl r0
     ea4:	19c45500 	stmibne	r4, {r8, sl, ip, lr}^
     ea8:	19ec1000 	stmibne	ip!, {ip}^
     eac:	00011000 	andeq	r1, r1, r0
     eb0:	0019f459 	andseq	pc, r9, r9, asr r4	; <UNPREDICTABLE>
     eb4:	0019fa10 	andseq	pc, r9, r0, lsl sl	; <UNPREDICTABLE>
     eb8:	59000110 	stmdbpl	r0, {r4, r8}
     ebc:	100019fa 	strdne	r1, [r0], -sl
     ec0:	10001a08 	andne	r1, r0, r8, lsl #20
     ec4:	08540001 	ldmdaeq	r4, {r0}^
     ec8:	0c10001a 	ldceq	0, cr0, [r0], {26}
     ecc:	0110001a 	tsteq	r0, sl, lsl r0
     ed0:	1a0c5900 	bne	3172d8 <__RAM_SIZE+0x2172d8>
     ed4:	1a121000 	bne	484edc <__RAM_SIZE+0x384edc>
     ed8:	00011000 	andeq	r1, r1, r0
     edc:	001a1254 	andseq	r1, sl, r4, asr r2
     ee0:	001a1410 	andseq	r1, sl, r0, lsl r4
     ee4:	79000310 	stmdbvc	r0, {r4, r8, r9}
     ee8:	00009f01 	andeq	r9, r0, r1, lsl #30
	...
     ef8:	10001962 	andne	r1, r0, r2, ror #18
     efc:	10001968 	andne	r1, r0, r8, ror #18
     f00:	68520001 	ldmdavs	r2, {r0}^
     f04:	70100019 	andsvc	r0, r0, r9, lsl r0
     f08:	01100019 	tsteq	r0, r9, lsl r0
     f0c:	19705300 	ldmdbne	r0!, {r8, r9, ip, lr}^
     f10:	19741000 	ldmdbne	r4!, {ip}^
     f14:	00011000 	andeq	r1, r1, r0
     f18:	00000052 	andeq	r0, r0, r2, asr r0
     f1c:	00000000 	andeq	r0, r0, r0
     f20:	62000000 	andvs	r0, r0, #0
     f24:	78100019 	ldmdavc	r0, {r0, r3, r4}
     f28:	01100019 	tsteq	r0, r9, lsl r0
     f2c:	00005900 	andeq	r5, r0, r0, lsl #18
     f30:	00000000 	andeq	r0, r0, r0
     f34:	00010000 	andeq	r0, r1, r0
     f38:	10001a18 	andne	r1, r0, r8, lsl sl
     f3c:	10001a4a 	andne	r1, r0, sl, asr #20
     f40:	9f300002 	svcls	0x00300002
	...
     f4c:	14780003 	ldrbtne	r0, [r8], #-3
     f50:	147e1000 	ldrbtne	r1, [lr], #-0
     f54:	00011000 	andeq	r1, r1, r0
     f58:	00000051 	andeq	r0, r0, r1, asr r0
     f5c:	00000000 	andeq	r0, r0, r0
     f60:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
     f64:	24100015 	ldrcs	r0, [r0], #-21	; 0xffffffeb
     f68:	01100015 	tsteq	r0, r5, lsl r0
     f6c:	00005200 	andeq	r5, r0, r0, lsl #4
     f70:	00000000 	andeq	r0, r0, r0
     f74:	0c900000 	ldceq	0, cr0, [r0], {0}
     f78:	0c941000 	ldceq	0, cr1, [r4], {0}
     f7c:	00021000 	andeq	r1, r2, r0
     f80:	0c94007d 	ldceq	0, cr0, [r4], {125}	; 0x7d
     f84:	0c981000 	ldceq	0, cr1, [r8], {0}
     f88:	00021000 	andeq	r1, r2, r0
     f8c:	0c98247d 	cfldrseq	mvf2, [r8], {125}	; 0x7d
     f90:	0c9a1000 	ldceq	0, cr1, [sl], {0}
     f94:	00021000 	andeq	r1, r2, r0
     f98:	0c9a2c7d 	ldceq	12, cr2, [sl], {125}	; 0x7d
     f9c:	0ee41000 	cdpeq	0, 14, cr1, cr4, cr0, {0}
     fa0:	00031000 	andeq	r1, r3, r0
     fa4:	e400f07d 	str	pc, [r0], #-125	; 0xffffff83
     fa8:	e810000e 	ldmda	r0, {r1, r2, r3}
     fac:	0210000e 	andseq	r0, r0, #14
     fb0:	e82c7d00 	stmda	ip!, {r8, sl, fp, ip, sp, lr}
     fb4:	ec10000e 	ldc	0, cr0, [r0], {14}
     fb8:	0210000e 	andseq	r0, r0, #14
     fbc:	ec247d00 	stc	13, cr7, [r4], #-0
     fc0:	7a10000e 	bvc	401000 <__RAM_SIZE+0x301000>
     fc4:	03100010 	tsteq	r0, #16
     fc8:	00f07d00 	rscseq	r7, r0, r0, lsl #26
	...
     fd8:	10000c90 	mulne	r0, r0, ip
     fdc:	10000ca8 	andne	r0, r0, r8, lsr #25
     fe0:	a8500001 	ldmdage	r0, {r0}^
     fe4:	7a10000c 	bvc	40101c <__RAM_SIZE+0x30101c>
     fe8:	01100010 	tsteq	r0, r0, lsl r0
     fec:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
     ff8:	0c900000 	ldceq	0, cr0, [r0], {0}
     ffc:	0caa1000 	stceq	0, cr1, [sl]
    1000:	00011000 	andeq	r1, r1, r0
    1004:	000caa51 	andeq	sl, ip, r1, asr sl
    1008:	00107a10 	andseq	r7, r0, r0, lsl sl
    100c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    102c:	0c900000 	ldceq	0, cr0, [r0], {0}
    1030:	0ca61000 	stceq	0, cr1, [r6]
    1034:	00011000 	andeq	r1, r1, r0
    1038:	000ca652 	andeq	sl, ip, r2, asr r6
    103c:	000ee210 	andeq	lr, lr, r0, lsl r2
    1040:	5b000110 	blpl	1488 <__HEAP_SIZE+0x488>
    1044:	10000eec 	andne	r0, r0, ip, ror #29
    1048:	10000ff4 	strdne	r0, [r0], -r4
    104c:	f45b0001 			; <UNDEFINED> instruction: 0xf45b0001
    1050:	0a10000f 	beq	401094 <__RAM_SIZE+0x301094>
    1054:	01100010 	tsteq	r0, r0, lsl r0
    1058:	100a5000 	andne	r5, sl, r0
    105c:	103e1000 	eorsne	r1, lr, r0
    1060:	00011000 	andeq	r1, r1, r0
    1064:	00103e58 	andseq	r3, r0, r8, asr lr
    1068:	00104c10 	andseq	r4, r0, r0, lsl ip
    106c:	50000110 	andpl	r0, r0, r0, lsl r1
    1070:	1000104c 	andne	r1, r0, ip, asr #32
    1074:	1000105c 	andne	r1, r0, ip, asr r0
    1078:	5c5b0001 	mrrcpl	0, 0, r0, fp, cr1
    107c:	62100010 	andsvs	r0, r0, #16
    1080:	01100010 	tsteq	r0, r0, lsl r0
    1084:	10625000 	rsbne	r5, r2, r0
    1088:	10641000 	rsbne	r1, r4, r0
    108c:	00011000 	andeq	r1, r1, r0
    1090:	00106452 	andseq	r6, r0, r2, asr r4
    1094:	00106e10 	andseq	r6, r0, r0, lsl lr
    1098:	56000110 			; <UNDEFINED> instruction: 0x56000110
    109c:	1000106e 	andne	r1, r0, lr, rrx
    10a0:	1000107a 	andne	r1, r0, sl, ror r0
    10a4:	00520001 	subseq	r0, r2, r1
	...
    10b0:	90000000 	andls	r0, r0, r0
    10b4:	ad10000c 	ldcge	0, cr0, [r0, #-48]	; 0xffffffd0
    10b8:	0110000c 	tsteq	r0, ip
    10bc:	0cad5300 	stceq	3, cr5, [sp]
    10c0:	107a1000 	rsbsne	r1, sl, r0
    10c4:	00011000 	andeq	r1, r1, r0
    10c8:	00000055 	andeq	r0, r0, r5, asr r0
	...
    10dc:	000c9000 	andeq	r9, ip, r0
    10e0:	000cf810 	andeq	pc, ip, r0, lsl r8	; <UNPREDICTABLE>
    10e4:	91000210 	tstls	r0, r0, lsl r2
    10e8:	000cf800 	andeq	pc, ip, r0, lsl #16
    10ec:	000ec210 	andeq	ip, lr, r0, lsl r2
    10f0:	91000310 	tstls	r0, r0, lsl r3
    10f4:	0ec27fa8 	cdpeq	15, 12, cr7, cr2, cr8, {5}
    10f8:	0ee21000 	cdpeq	0, 14, cr1, cr2, cr0, {0}
    10fc:	00021000 	andeq	r1, r2, r0
    1100:	0eec0091 	mcreq	0, 7, r0, cr12, cr1, {4}
    1104:	0f001000 	svceq	0x00001000
    1108:	00021000 	andeq	r1, r2, r0
    110c:	0f000091 	svceq	0x00000091
    1110:	0fd01000 	svceq	0x00d01000
    1114:	00031000 	andeq	r1, r3, r0
    1118:	4c7fa891 	ldclmi	8, cr10, [pc], #-580	; edc <__Vectors_Size+0x71c>
    111c:	5a100010 	bpl	401164 <__RAM_SIZE+0x301164>
    1120:	03100010 	tsteq	r0, #16
    1124:	7fa89100 	svcvc	0x00a89100
	...
    113c:	10000c90 	mulne	r0, r0, ip
    1140:	10000d06 	andne	r0, r0, r6, lsl #26
    1144:	08910002 	ldmeq	r1, {r1}
    1148:	10000d06 	andne	r0, r0, r6, lsl #26
    114c:	10000ec0 	andne	r0, r0, r0, asr #29
    1150:	08910002 	ldmeq	r1, {r1}
    1154:	10000ec0 	andne	r0, r0, r0, asr #29
    1158:	10000ec2 	andne	r0, r0, r2, asr #29
    115c:	c2530001 	subsgt	r0, r3, #1
    1160:	3410000e 	ldrcc	r0, [r0], #-14
    1164:	0210000f 	andseq	r0, r0, #15
    1168:	34089100 	strcc	r9, [r8], #-256	; 0xffffff00
    116c:	9c10000f 	ldcls	0, cr0, [r0], {15}
    1170:	0110000f 	tsteq	r0, pc
    1174:	0f9c5300 	svceq	0x009c5300
    1178:	107a1000 	rsbsne	r1, sl, r0
    117c:	00021000 	andeq	r1, r2, r0
    1180:	00000891 	muleq	r0, r1, r8
	...
    118c:	0c900000 	ldceq	0, cr0, [r0], {0}
    1190:	0eec1000 	cdpeq	0, 14, cr1, cr12, cr0, {0}
    1194:	00021000 	andeq	r1, r2, r0
    1198:	0eec0c91 	mcreq	12, 7, r0, cr12, cr1, {4}
    119c:	107a1000 	rsbsne	r1, sl, r0
    11a0:	00021000 	andeq	r1, r2, r0
    11a4:	00000c91 	muleq	r0, r1, ip
	...
    11b4:	0c900000 	ldceq	0, cr0, [r0], {0}
    11b8:	0eec1000 	cdpeq	0, 14, cr1, cr12, cr0, {0}
    11bc:	00021000 	andeq	r1, r2, r0
    11c0:	0eec1091 	mcreq	0, 7, r1, cr12, cr1, {4}
    11c4:	0f121000 	svceq	0x00121000
    11c8:	00021000 	andeq	r1, r2, r0
    11cc:	0f121091 	svceq	0x00121091
    11d0:	0f161000 	svceq	0x00161000
    11d4:	00011000 	andeq	r1, r1, r0
    11d8:	000f1653 	andeq	r1, pc, r3, asr r6	; <UNPREDICTABLE>
    11dc:	00107a10 	andseq	r7, r0, r0, lsl sl
    11e0:	91000210 	tstls	r0, r0, lsl r2
    11e4:	00000010 	andeq	r0, r0, r0, lsl r0
    11e8:	00000000 	andeq	r0, r0, r0
    11ec:	00000100 	andeq	r0, r0, r0, lsl #2
    11f0:	000cde00 	andeq	sp, ip, r0, lsl #28
    11f4:	000ec210 	andeq	ip, lr, r0, lsl r2
    11f8:	91001210 	tstls	r0, r0, lsl r2
    11fc:	2908f600 	stmdbcs	r8, {r9, sl, ip, sp, lr, pc}
    1200:	000829f4 	strdeq	r2, [r8], -r4
    1204:	00000000 	andeq	r0, r0, r0
    1208:	2d000000 	stccs	0, cr0, [r0, #-0]
    120c:	000eec9f 	muleq	lr, pc, ip	; <UNPREDICTABLE>
    1210:	00107a10 	andseq	r7, r0, r0, lsl sl
    1214:	91001210 	tstls	r0, r0, lsl r2
    1218:	2908f600 	stmdbcs	r8, {r9, sl, ip, sp, lr, pc}
    121c:	000829f4 	strdeq	r2, [r8], -r4
    1220:	00000000 	andeq	r0, r0, r0
    1224:	2d000000 	stccs	0, cr0, [r0, #-0]
    1228:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    122c:	00000000 	andeq	r0, r0, r0
    1230:	01000000 	mrseq	r0, (UNDEF: 0)
    1234:	000ee200 	andeq	lr, lr, r0, lsl #4
    1238:	000ee810 	andeq	lr, lr, r0, lsl r8
    123c:	90000810 	andls	r0, r0, r0, lsl r8
    1240:	90049350 	andls	r9, r4, r0, asr r3
    1244:	b0049351 	andlt	r9, r4, r1, asr r3
    1248:	7a10000f 	bvc	40128c <__RAM_SIZE+0x30128c>
    124c:	08100010 	ldmdaeq	r0, {r4}
    1250:	93509000 	cmpls	r0, #0
    1254:	93519004 	cmpls	r1, #4
    1258:	00000004 	andeq	r0, r0, r4
	...
    126c:	000d1000 	andeq	r1, sp, r0
    1270:	000d2210 	andeq	r2, sp, r0, lsl r2
    1274:	70000410 	andvc	r0, r0, r0, lsl r4
    1278:	229f7881 	addscs	r7, pc, #8454144	; 0x810000
    127c:	2510000d 	ldrcs	r0, [r0, #-13]
    1280:	0110000d 	tsteq	r0, sp
    1284:	0d865000 	stceq	0, cr5, [r6]
    1288:	0d8e1000 	stceq	0, cr1, [lr]
    128c:	00011000 	andeq	r1, r1, r0
    1290:	000d8e50 	andeq	r8, sp, r0, asr lr
    1294:	000dc810 	andeq	ip, sp, r0, lsl r8
    1298:	57000110 	smladpl	r0, r0, r1, r0
    129c:	10000dc8 	andne	r0, r0, r8, asr #27
    12a0:	10000e84 	andne	r0, r0, r4, lsl #29
    12a4:	81770004 	cmnhi	r7, r4
    12a8:	0f029f78 	svceq	0x00029f78
    12ac:	0f041000 	svceq	0x00041000
    12b0:	00041000 	andeq	r1, r4, r0
    12b4:	9f788177 	svcls	0x00788177
	...
    12c4:	00020000 	andeq	r0, r2, r0
    12c8:	0d660000 	stcleq	0, cr0, [r6, #-0]
    12cc:	0d691000 	stcleq	0, cr1, [r9, #-0]
    12d0:	00011000 	andeq	r1, r1, r0
    12d4:	000d6950 	andeq	r6, sp, r0, asr r9
    12d8:	000ebc10 	andeq	fp, lr, r0, lsl ip
    12dc:	56000110 			; <UNDEFINED> instruction: 0x56000110
    12e0:	10000f02 	andne	r0, r0, r2, lsl #30
    12e4:	10000f0a 	andne	r0, r0, sl, lsl #30
    12e8:	12560001 	subsne	r0, r6, #1
    12ec:	1610000f 	ldrne	r0, [r0], -pc
    12f0:	0210000f 	andseq	r0, r0, #15
    12f4:	169f3000 	ldrne	r3, [pc], r0
    12f8:	6210000f 	andsvs	r0, r0, #15
    12fc:	01100010 	tsteq	r0, r0, lsl r0
    1300:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    130c:	10000db8 			; <UNDEFINED> instruction: 0x10000db8
    1310:	10000df8 	strdne	r0, [r0], -r8
    1314:	93580006 	cmpls	r8, #6
    1318:	04935904 	ldreq	r5, [r3], #2308	; 0x904
	...
    1328:	0dc40000 	stcleq	0, cr0, [r4]
    132c:	0dde1000 	ldcleq	0, cr1, [lr]
    1330:	00061000 	andeq	r1, r6, r0
    1334:	51049350 	tstpl	r4, r0, asr r3
    1338:	0dde0493 	cfldrdeq	mvd0, [lr, #588]	; 0x24c
    133c:	0ec21000 	cdpeq	0, 12, cr1, cr2, cr0, {0}
    1340:	00031000 	andeq	r1, r3, r0
    1344:	027fb891 	rsbseq	fp, pc, #9502720	; 0x910000
    1348:	7a10000f 	bvc	40138c <__RAM_SIZE+0x30138c>
    134c:	03100010 	tsteq	r0, #16
    1350:	7fb89100 	svcvc	0x00b89100
	...
    135c:	01000000 	mrseq	r0, (UNDEF: 0)
    1360:	00000001 	andeq	r0, r0, r1
    1364:	00000000 	andeq	r0, r0, r0
    1368:	10000e84 	andne	r0, r0, r4, lsl #29
    136c:	10000ec2 	andne	r0, r0, r2, asr #29
    1370:	06570001 	ldrbeq	r0, [r7], -r1
    1374:	1210000f 	andsne	r0, r0, #15
    1378:	0110000f 	tsteq	r0, pc
    137c:	0f125700 	svceq	0x00125700
    1380:	0f161000 	svceq	0x00161000
    1384:	00021000 	andeq	r1, r2, r0
    1388:	0f169f30 	svceq	0x00169f30
    138c:	10221000 	eorne	r1, r2, r0
    1390:	00011000 	andeq	r1, r1, r0
    1394:	00102257 	andseq	r2, r0, r7, asr r2
    1398:	00104a10 	andseq	r4, r0, r0, lsl sl
    139c:	77000310 	smladvc	r0, r0, r3, r0
    13a0:	104c9f01 	subne	r9, ip, r1, lsl #30
    13a4:	10621000 	rsbne	r1, r2, r0
    13a8:	00011000 	andeq	r1, r1, r0
    13ac:	00000057 	andeq	r0, r0, r7, asr r0
    13b0:	00000000 	andeq	r0, r0, r0
    13b4:	00000100 	andeq	r0, r0, r0, lsl #2
    13b8:	00000000 	andeq	r0, r0, r0
    13bc:	16000000 	strne	r0, [r0], -r0
    13c0:	2010000f 	andscs	r0, r0, pc
    13c4:	0210000f 	andseq	r0, r0, #15
    13c8:	200c9100 	andcs	r9, ip, r0, lsl #2
    13cc:	2210000f 	andscs	r0, r0, #15
    13d0:	0110000f 	tsteq	r0, pc
    13d4:	0f9c5800 	svceq	0x009c5800
    13d8:	0fa01000 	svceq	0x00a01000
    13dc:	00011000 	andeq	r1, r1, r0
    13e0:	000fa053 	andeq	sl, pc, r3, asr r0	; <UNPREDICTABLE>
    13e4:	00100a10 	andseq	r0, r0, r0, lsl sl
    13e8:	58000110 	stmdapl	r0, {r4, r8}
    13ec:	1000104c 	andne	r1, r0, ip, asr #32
    13f0:	10001062 	andne	r1, r0, r2, rrx
    13f4:	00580001 	subseq	r0, r8, r1
    13f8:	00000000 	andeq	r0, r0, r0
    13fc:	01000000 	mrseq	r0, (UNDEF: 0)
    1400:	000fc000 	andeq	ip, pc, r0
    1404:	00107a10 	andseq	r7, r0, r0, lsl sl
    1408:	5b000110 	blpl	1850 <__HEAP_SIZE+0x850>
	...
    1414:	10001080 	andne	r1, r0, r0, lsl #1
    1418:	10001084 	andne	r1, r0, r4, lsl #1
    141c:	007d0002 	rsbseq	r0, sp, r2
    1420:	10001084 	andne	r1, r0, r4, lsl #1
    1424:	10001088 	andne	r1, r0, r8, lsl #1
    1428:	247d0002 	ldrbtcs	r0, [sp], #-2
    142c:	10001088 	andne	r1, r0, r8, lsl #1
    1430:	1000108a 	andne	r1, r0, sl, lsl #1
    1434:	2c7d0002 	ldclcs	0, cr0, [sp], #-8
    1438:	1000108a 	andne	r1, r0, sl, lsl #1
    143c:	100013a4 	andne	r1, r0, r4, lsr #7
    1440:	807d0003 	rsbshi	r0, sp, r3
    1444:	0013a401 	andseq	sl, r3, r1, lsl #8
    1448:	0013a810 	andseq	sl, r3, r0, lsl r8
    144c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1450:	0013a82c 	andseq	sl, r3, ip, lsr #16
    1454:	0013ac10 	andseq	sl, r3, r0, lsl ip
    1458:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    145c:	0013ac24 	andseq	sl, r3, r4, lsr #24
    1460:	00141610 	andseq	r1, r4, r0, lsl r6
    1464:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    1468:	00000180 	andeq	r0, r0, r0, lsl #3
	...
    1474:	10800000 	addne	r0, r0, r0
    1478:	109e1000 	addsne	r1, lr, r0
    147c:	00011000 	andeq	r1, r1, r0
    1480:	00109e50 	andseq	r9, r0, r0, asr lr
    1484:	00141610 	andseq	r1, r4, r0, lsl r6
    1488:	91000310 	tstls	r0, r0, lsl r3
    148c:	00007f9c 	muleq	r0, ip, pc	; <UNPREDICTABLE>
	...
    1498:	10800000 	addne	r0, r0, r0
    149c:	10a01000 	adcne	r1, r0, r0
    14a0:	00011000 	andeq	r1, r1, r0
    14a4:	0010a051 	andseq	sl, r0, r1, asr r0
    14a8:	00141610 	andseq	r1, r4, r0, lsl r6
    14ac:	91000310 	tstls	r0, r0, lsl r3
    14b0:	00007fa8 	andeq	r7, r0, r8, lsr #31
	...
    14bc:	10800000 	addne	r0, r0, r0
    14c0:	109a1000 	addsne	r1, sl, r0
    14c4:	00011000 	andeq	r1, r1, r0
    14c8:	00109a52 	andseq	r9, r0, r2, asr sl
    14cc:	00141610 	andseq	r1, r4, r0, lsl r6
    14d0:	5a000110 	bpl	1918 <__HEAP_SIZE+0x918>
	...
    14e0:	10001080 	andne	r1, r0, r0, lsl #1
    14e4:	1000109c 	mulne	r0, ip, r0
    14e8:	9c530001 	mrrcls	0, 0, r0, r3, cr1
    14ec:	16100010 			; <UNDEFINED> instruction: 0x16100010
    14f0:	01100014 	tsteq	r0, r4, lsl r0
    14f4:	00005b00 	andeq	r5, r0, r0, lsl #22
	...
    1508:	10001080 	andne	r1, r0, r0, lsl #1
    150c:	10001106 	andne	r1, r0, r6, lsl #2
    1510:	00910002 	addseq	r0, r1, r2
    1514:	10001106 	andne	r1, r0, r6, lsl #2
    1518:	1000112a 	andne	r1, r0, sl, lsr #2
    151c:	93580006 	cmpls	r8, #6
    1520:	04935904 	ldreq	r5, [r3], #2308	; 0x904
    1524:	1000112a 	andne	r1, r0, sl, lsr #2
    1528:	100011c2 	andne	r1, r0, r2, asr #3
    152c:	00910002 	addseq	r0, r1, r2
    1530:	100011c2 	andne	r1, r0, r2, asr #3
    1534:	1000125a 	andne	r1, r0, sl, asr r2
    1538:	93580006 	cmpls	r8, #6
    153c:	04935904 	ldreq	r5, [r3], #2308	; 0x904
    1540:	1000127e 	andne	r1, r0, lr, ror r2
    1544:	100012fa 	strdne	r1, [r0], -sl
    1548:	93580006 	cmpls	r8, #6
    154c:	04935904 	ldreq	r5, [r3], #2308	; 0x904
	...
    1560:	10001080 	andne	r1, r0, r0, lsl #1
    1564:	1000110e 	andne	r1, r0, lr, lsl #2
    1568:	08910002 	ldmeq	r1, {r1}
    156c:	10001110 	andne	r1, r0, r0, lsl r1
    1570:	1000112a 	andne	r1, r0, sl, lsr #2
    1574:	2a550001 	bcs	1541580 <__RAM_SIZE+0x1441580>
    1578:	cc100011 	ldcgt	0, cr0, [r0], {17}
    157c:	02100011 	andseq	r0, r0, #17
    1580:	cc089100 	stfgtd	f1, [r8], {-0}
    1584:	9a100011 	bls	4015d0 <__RAM_SIZE+0x3015d0>
    1588:	01100012 	tsteq	r0, r2, lsl r0
    158c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    15a0:	10001080 	andne	r1, r0, r0, lsl #1
    15a4:	10001370 	andne	r1, r0, r0, ror r3
    15a8:	0c910002 	ldceq	0, cr0, [r1], {2}
    15ac:	10001370 	andne	r1, r0, r0, ror r3
    15b0:	100013c2 	andne	r1, r0, r2, asr #7
    15b4:	0c910002 	ldceq	0, cr0, [r1], {2}
    15b8:	100013c2 	andne	r1, r0, r2, asr #7
    15bc:	100013c6 	andne	r1, r0, r6, asr #7
    15c0:	c6530001 	ldrbgt	r0, [r3], -r1
    15c4:	de100013 	mrcle	0, 0, r0, cr0, cr3, {0}
    15c8:	01100013 	tsteq	r0, r3, lsl r0
    15cc:	13de5100 	bicsne	r5, lr, #0, 2
    15d0:	14161000 	ldrne	r1, [r6], #-0
    15d4:	00021000 	andeq	r1, r2, r0
    15d8:	00000c91 	muleq	r0, r1, ip
	...
    15e4:	10800000 	addne	r0, r0, r0
    15e8:	13ac1000 			; <UNDEFINED> instruction: 0x13ac1000
    15ec:	00021000 	andeq	r1, r2, r0
    15f0:	13ac1091 			; <UNDEFINED> instruction: 0x13ac1091
    15f4:	14161000 	ldrne	r1, [r6], #-0
    15f8:	00021000 	andeq	r1, r2, r0
    15fc:	00001091 	muleq	r0, r1, r0
    1600:	00000000 	andeq	r0, r0, r0
    1604:	00020000 	andeq	r0, r2, r0
    1608:	00010100 	andeq	r0, r1, r0, lsl #2
	...
    1614:	00010100 	andeq	r0, r1, r0, lsl #2
    1618:	00010100 	andeq	r0, r1, r0, lsl #2
    161c:	00000000 	andeq	r0, r0, r0
    1620:	00010100 	andeq	r0, r1, r0, lsl #2
    1624:	01000000 	mrseq	r0, (UNDEF: 0)
    1628:	01000001 	tsteq	r0, r1
    162c:	01000001 	tsteq	r0, r1
    1630:	00000001 	andeq	r0, r0, r1
    1634:	10001098 	mulne	r0, r8, r0
    1638:	10001110 	andne	r1, r0, r0, lsl r1
    163c:	9f300002 	svcls	0x00300002
    1640:	10001110 	andne	r1, r0, r0, lsl r1
    1644:	10001118 	andne	r1, r0, r8, lsl r1
    1648:	18540001 	ldmdane	r4, {r0}^
    164c:	28100011 	ldmdacs	r0, {r0, r4}
    1650:	03100011 	tsteq	r0, #17
    1654:	9f017400 	svcls	0x00017400
    1658:	10001128 	andne	r1, r0, r8, lsr #2
    165c:	1000112a 	andne	r1, r0, sl, lsr #2
    1660:	2a540001 	bcs	150166c <__RAM_SIZE+0x140166c>
    1664:	cc100011 	ldcgt	0, cr0, [r0], {17}
    1668:	02100011 	andseq	r0, r0, #17
    166c:	cc9f3000 	ldcgt	0, cr3, [pc], {0}
    1670:	b4100011 	ldrlt	r0, [r0], #-17	; 0xffffffef
    1674:	01100012 	tsteq	r0, r2, lsl r0
    1678:	12b45400 	adcsne	r5, r4, #0, 8
    167c:	12ce1000 	sbcne	r1, lr, #0
    1680:	00011000 	andeq	r1, r1, r0
    1684:	0012ce52 	andseq	ip, r2, r2, asr lr
    1688:	0012d610 	andseq	sp, r2, r0, lsl r6
    168c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1690:	100012d6 	ldrdne	r1, [r0], -r6
    1694:	100012e6 	andne	r1, r0, r6, ror #5
    1698:	01740003 	cmneq	r4, r3
    169c:	0012e69f 	mulseq	r2, pc, r6	; <UNPREDICTABLE>
    16a0:	0012ec10 	andseq	lr, r2, r0, lsl ip
    16a4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    16a8:	100012ec 	andne	r1, r0, ip, ror #5
    16ac:	100012fa 	strdne	r1, [r0], -sl
    16b0:	01740003 	cmneq	r4, r3
    16b4:	0012fa9f 	mulseq	r2, pc, sl	; <UNPREDICTABLE>
    16b8:	00131610 	andseq	r1, r3, r0, lsl r6
    16bc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    16c0:	10001316 	andne	r1, r0, r6, lsl r3
    16c4:	10001366 	andne	r1, r0, r6, ror #6
    16c8:	66510001 	ldrbvs	r0, [r1], -r1
    16cc:	7a100013 	bvc	401720 <__RAM_SIZE+0x301720>
    16d0:	01100013 	tsteq	r0, r3, lsl r0
    16d4:	137a5400 	cmnne	sl, #0, 8
    16d8:	13881000 	orrne	r1, r8, #0
    16dc:	00031000 	andeq	r1, r3, r0
    16e0:	889f0174 	ldmhi	pc, {r2, r4, r5, r6, r8}	; <UNPREDICTABLE>
    16e4:	a2100013 	andsge	r0, r0, #19
    16e8:	01100013 	tsteq	r0, r3, lsl r0
    16ec:	13ac5400 			; <UNDEFINED> instruction: 0x13ac5400
    16f0:	13c61000 	bicne	r1, r6, #0
    16f4:	00011000 	andeq	r1, r1, r0
    16f8:	0013c654 	andseq	ip, r3, r4, asr r6
    16fc:	0013d410 	andseq	sp, r3, r0, lsl r4
    1700:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1704:	13d49f01 	bicsne	r9, r4, #1, 30
    1708:	13ee1000 	mvnne	r1, #0
    170c:	00011000 	andeq	r1, r1, r0
    1710:	0013ee54 	andseq	lr, r3, r4, asr lr
    1714:	0013fc10 	andseq	pc, r3, r0, lsl ip	; <UNPREDICTABLE>
    1718:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    171c:	13fc9f01 	mvnsne	r9, #1, 30
    1720:	14061000 	strne	r1, [r6], #-0
    1724:	00011000 	andeq	r1, r1, r0
    1728:	00140654 	andseq	r0, r4, r4, asr r6
    172c:	00141410 	andseq	r1, r4, r0, lsl r4
    1730:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1734:	14149f01 	ldrne	r9, [r4], #-3841	; 0xfffff0ff
    1738:	14161000 	ldrne	r1, [r6], #-0
    173c:	00011000 	andeq	r1, r1, r0
    1740:	00000054 	andeq	r0, r0, r4, asr r0
    1744:	00000000 	andeq	r0, r0, r0
    1748:	00000300 	andeq	r0, r0, r0, lsl #6
    174c:	00000000 	andeq	r0, r0, r0
    1750:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    1754:	1e100010 	mrcne	0, 0, r0, cr0, cr0, {0}
    1758:	0a100012 	beq	4017a8 <__RAM_SIZE+0x3017a8>
    175c:	00089e00 	andeq	r9, r8, r0, lsl #28
    1760:	00000000 	andeq	r0, r0, r0
    1764:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    1768:	20100012 	andscs	r0, r0, r2, lsl r0
    176c:	06100012 			; <UNDEFINED> instruction: 0x06100012
    1770:	04935200 	ldreq	r5, [r3], #512	; 0x200
    1774:	20049353 	andcs	r9, r4, r3, asr r3
    1778:	5a100012 	bpl	4017c8 <__RAM_SIZE+0x3017c8>
    177c:	03100012 	tsteq	r0, #18
    1780:	7fa09100 	svcvc	0x00a09100
    1784:	1000125a 	andne	r1, r0, sl, asr r2
    1788:	1000127e 	andne	r1, r0, lr, ror r2
    178c:	93570006 	cmpls	r7, #6
    1790:	04935804 	ldreq	r5, [r3], #2052	; 0x804
    1794:	1000127e 	andne	r1, r0, lr, ror r2
    1798:	100012fa 	strdne	r1, [r0], -sl
    179c:	a0910003 	addsge	r0, r1, r3
    17a0:	0000007f 	andeq	r0, r0, pc, ror r0
    17a4:	00000000 	andeq	r0, r0, r0
    17a8:	00000100 	andeq	r0, r0, r0, lsl #2
    17ac:	01010000 	mrseq	r0, (UNDEF: 1)
    17b0:	00000000 	andeq	r0, r0, r0
    17b4:	0010f200 	andseq	pc, r0, r0, lsl #4
    17b8:	00110610 	andseq	r0, r1, r0, lsl r6
    17bc:	30000210 	andcc	r0, r0, r0, lsl r2
    17c0:	0011069f 	mulseq	r1, pc, r6	; <UNPREDICTABLE>
    17c4:	00112a10 	andseq	r2, r1, r0, lsl sl
    17c8:	91000310 	tstls	r0, r0, lsl r3
    17cc:	11b27fac 			; <UNDEFINED> instruction: 0x11b27fac
    17d0:	11b21000 			; <UNDEFINED> instruction: 0x11b21000
    17d4:	00021000 	andeq	r1, r2, r0
    17d8:	11b29f30 			; <UNDEFINED> instruction: 0x11b29f30
    17dc:	11c81000 	bicne	r1, r8, r0
    17e0:	00021000 	andeq	r1, r2, r0
    17e4:	11c89f31 	bicne	r9, r8, r1, lsr pc
    17e8:	13a21000 			; <UNDEFINED> instruction: 0x13a21000
    17ec:	00031000 	andeq	r1, r3, r0
    17f0:	ac7fac91 	ldclge	12, cr10, [pc], #-580	; 15b4 <__HEAP_SIZE+0x5b4>
    17f4:	16100013 			; <UNDEFINED> instruction: 0x16100013
    17f8:	03100014 	tsteq	r0, #20
    17fc:	7fac9100 	svcvc	0x00ac9100
	...
    1810:	11d60000 	bicsne	r0, r6, r0
    1814:	11d91000 	bicsne	r1, r9, r0
    1818:	00011000 	andeq	r1, r1, r0
    181c:	0011d950 	andseq	sp, r1, r0, asr r9
    1820:	00132610 	andseq	r2, r3, r0, lsl r6
    1824:	56000110 			; <UNDEFINED> instruction: 0x56000110
    1828:	10001326 	andne	r1, r0, r6, lsr #6
    182c:	10001366 	andne	r1, r0, r6, ror #6
    1830:	66520001 	ldrbvs	r0, [r2], -r1
    1834:	a2100013 	andsge	r0, r0, #19
    1838:	01100013 	tsteq	r0, r3, lsl r0
    183c:	13ac5600 			; <UNDEFINED> instruction: 0x13ac5600
    1840:	14161000 	ldrne	r1, [r6], #-0
    1844:	00011000 	andeq	r1, r1, r0
    1848:	00000056 	andeq	r0, r0, r6, asr r0
	...
    1854:	00120000 	andseq	r0, r2, r0
    1858:	00120310 	andseq	r0, r2, r0, lsl r3
    185c:	52000610 	andpl	r0, r0, #16, 12	; 0x1000000
    1860:	93530493 	cmpls	r3, #-1828716544	; 0x93000000
    1864:	00120304 	andseq	r0, r2, r4, lsl #6
    1868:	00121e10 	andseq	r1, r2, r0, lsl lr
    186c:	91000310 	tstls	r0, r0, lsl r3
    1870:	00007fa0 	andeq	r7, r0, r0, lsr #31
	...
    187c:	00010100 	andeq	r0, r1, r0, lsl #2
    1880:	01000000 	mrseq	r0, (UNDEF: 0)
    1884:	12060001 	andne	r0, r6, #1
    1888:	12091000 	andne	r1, r9, #0
    188c:	00011000 	andeq	r1, r1, r0
    1890:	00120950 	andseq	r0, r2, r0, asr r9
    1894:	00123e10 	andseq	r3, r2, r0, lsl lr
    1898:	57000110 	smladpl	r0, r0, r1, r0
    189c:	1000123e 	andne	r1, r0, lr, lsr r2
    18a0:	10001242 	andne	r1, r0, r2, asr #4
    18a4:	9f300002 	svcls	0x00300002
    18a8:	10001242 	andne	r1, r0, r2, asr #4
    18ac:	10001258 	andne	r1, r0, r8, asr r2
    18b0:	7e570001 	cdpvc	0, 5, cr0, cr7, cr1, {0}
    18b4:	c2100012 	andsgt	r0, r0, #18
    18b8:	01100012 	tsteq	r0, r2, lsl r0
    18bc:	12c25700 	sbcne	r5, r2, #0, 14
    18c0:	12ce1000 	sbcne	r1, lr, #0
    18c4:	00011000 	andeq	r1, r1, r0
    18c8:	00000051 	andeq	r0, r0, r1, asr r0
	...
    18d4:	00129a00 	andseq	r9, r2, r0, lsl #20
    18d8:	0012d410 	andseq	sp, r2, r0, lsl r4
    18dc:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    18e0:	100012d4 	ldrdne	r1, [r0], -r4
    18e4:	100012e8 	andne	r1, r0, r8, ror #5
    18e8:	00530001 	subseq	r0, r3, r1
    18ec:	00000000 	andeq	r0, r0, r0
    18f0:	c4000000 	strgt	r0, [r0], #-0
    18f4:	c810000b 	ldmdagt	r0, {r0, r1, r3}
    18f8:	0210000b 	andseq	r0, r0, #11
    18fc:	c8007d00 	stmdagt	r0, {r8, sl, fp, ip, sp, lr}
    1900:	ca10000b 	bgt	401934 <__RAM_SIZE+0x301934>
    1904:	0210000b 	andseq	r0, r0, #11
    1908:	ca247d00 	bgt	920d10 <__RAM_SIZE+0x820d10>
    190c:	8610000b 	ldrhi	r0, [r0], -fp
    1910:	0310000c 	tsteq	r0, #12
    1914:	00f87d00 	rscseq	r7, r8, r0, lsl #26
    1918:	10000c86 	andne	r0, r0, r6, lsl #25
    191c:	10000c8a 	andne	r0, r0, sl, lsl #25
    1920:	247d0002 	ldrbtcs	r0, [sp], #-2
	...
    1934:	10000bc4 	andne	r0, r0, r4, asr #23
    1938:	10000bfa 	strdne	r0, [r0], -sl
    193c:	fa500001 	blx	1401948 <__RAM_SIZE+0x1301948>
    1940:	5810000b 	ldmdapl	r0, {r0, r1, r3}
    1944:	0310000c 	tsteq	r0, #12
    1948:	7fac9100 	svcvc	0x00ac9100
    194c:	10000c58 	andne	r0, r0, r8, asr ip
    1950:	10000c5c 	andne	r0, r0, ip, asr ip
    1954:	5c500001 	mrrcpl	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    1958:	8a10000c 	bhi	401990 <__RAM_SIZE+0x301990>
    195c:	0310000c 	tsteq	r0, #12
    1960:	7fac9100 	svcvc	0x00ac9100
	...
    1974:	10000bc4 	andne	r0, r0, r4, asr #23
    1978:	10000bfa 	strdne	r0, [r0], -sl
    197c:	fa510001 	blx	1441988 <__RAM_SIZE+0x1341988>
    1980:	5810000b 	ldmdapl	r0, {r0, r1, r3}
    1984:	0310000c 	tsteq	r0, #12
    1988:	7fb09100 	svcvc	0x00b09100
    198c:	10000c58 	andne	r0, r0, r8, asr ip
    1990:	10000c5c 	andne	r0, r0, ip, asr ip
    1994:	5c510001 	mrrcpl	0, 0, r0, r1, cr1
    1998:	8a10000c 	bhi	4019d0 <__RAM_SIZE+0x3019d0>
    199c:	0310000c 	tsteq	r0, #12
    19a0:	7fb09100 	svcvc	0x00b09100
	...
    19b4:	10000bc4 	andne	r0, r0, r4, asr #23
    19b8:	10000bfa 	strdne	r0, [r0], -sl
    19bc:	fa520001 	blx	14819c8 <__RAM_SIZE+0x13819c8>
    19c0:	5810000b 	ldmdapl	r0, {r0, r1, r3}
    19c4:	0310000c 	tsteq	r0, #12
    19c8:	7fb49100 	svcvc	0x00b49100
    19cc:	10000c58 	andne	r0, r0, r8, asr ip
    19d0:	10000c5c 	andne	r0, r0, ip, asr ip
    19d4:	5c520001 	mrrcpl	0, 0, r0, r2, cr1
    19d8:	8a10000c 	bhi	401a10 <__RAM_SIZE+0x301a10>
    19dc:	0310000c 	tsteq	r0, #12
    19e0:	7fb49100 	svcvc	0x00b49100
	...
    19f0:	10000bc4 	andne	r0, r0, r4, asr #23
    19f4:	10000be4 	andne	r0, r0, r4, ror #23
    19f8:	e4530001 	ldrb	r0, [r3], #-1
    19fc:	8a10000b 	bhi	401a30 <__RAM_SIZE+0x301a30>
    1a00:	0110000c 	tsteq	r0, ip
    1a04:	00005b00 	andeq	r5, r0, r0, lsl #22
	...
    1a18:	10000bc4 	andne	r0, r0, r4, asr #23
    1a1c:	10000bfa 	strdne	r0, [r0], -sl
    1a20:	00910002 	addseq	r0, r1, r2
    1a24:	10000bfa 	strdne	r0, [r0], -sl
    1a28:	10000c1c 	andne	r0, r0, ip, lsl ip
    1a2c:	93550006 	cmpls	r5, #6
    1a30:	04935604 	ldreq	r5, [r3], #1540	; 0x604
    1a34:	10000c1c 	andne	r0, r0, ip, lsl ip
    1a38:	10000c30 	andne	r0, r0, r0, lsr ip
    1a3c:	93500006 	cmpls	r0, #6
    1a40:	04935104 	ldreq	r5, [r3], #260	; 0x104
    1a44:	10000c30 	andne	r0, r0, r0, lsr ip
    1a48:	10000c58 	andne	r0, r0, r8, asr ip
    1a4c:	93550006 	cmpls	r5, #6
    1a50:	04935604 	ldreq	r5, [r3], #1540	; 0x604
    1a54:	10000c58 	andne	r0, r0, r8, asr ip
    1a58:	10000c5c 	andne	r0, r0, ip, asr ip
    1a5c:	00910002 	addseq	r0, r1, r2
	...
    1a6c:	10000bc4 	andne	r0, r0, r4, asr #23
    1a70:	10000bea 	andne	r0, r0, sl, ror #23
    1a74:	20910002 	addscs	r0, r1, r2
    1a78:	10000bea 	andne	r0, r0, sl, ror #23
    1a7c:	10000c8a 	andne	r0, r0, sl, lsl #25
    1a80:	005a0001 	subseq	r0, sl, r1
    1a84:	00000000 	andeq	r0, r0, r0
    1a88:	02000000 	andeq	r0, r0, #0
	...
    1a94:	e0000000 	and	r0, r0, r0
    1a98:	fa10000b 	blx	401acc <__RAM_SIZE+0x301acc>
    1a9c:	0210000b 	andseq	r0, r0, #11
    1aa0:	fa9f3000 	blx	fe7cdaa8 <__StackTop+0xc66cdaa8>
    1aa4:	0410000b 	ldreq	r0, [r0], #-11
    1aa8:	0110000c 	tsteq	r0, ip
    1aac:	0c045400 	cfstrseq	mvf5, [r4], {-0}
    1ab0:	0c301000 	ldceq	0, cr1, [r0], #-0
    1ab4:	00011000 	andeq	r1, r1, r0
    1ab8:	000c3059 	andeq	r3, ip, r9, asr r0
    1abc:	000c5810 	andeq	r5, ip, r0, lsl r8
    1ac0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1ac4:	10000c58 	andne	r0, r0, r8, asr ip
    1ac8:	10000c5c 	andne	r0, r0, ip, asr ip
    1acc:	9f300002 	svcls	0x00300002
    1ad0:	10000c5c 	andne	r0, r0, ip, asr ip
    1ad4:	10000c8a 	andne	r0, r0, sl, lsl #25
    1ad8:	00590001 	subseq	r0, r9, r1
	...
    1ae4:	fa000000 	blx	1aec <__HEAP_SIZE+0xaec>
    1ae8:	0810000b 	ldmdaeq	r0, {r0, r1, r3}
    1aec:	0110000c 	tsteq	r0, ip
    1af0:	0c3e5300 	ldceq	3, cr5, [lr], #-0
    1af4:	0c581000 	mraeq	r1, r8, acc0
    1af8:	00011000 	andeq	r1, r1, r0
    1afc:	00000053 	andeq	r0, r0, r3, asr r0
    1b00:	00000000 	andeq	r0, r0, r0
    1b04:	000b3000 	andeq	r3, fp, r0
    1b08:	000b3210 	andeq	r3, fp, r0, lsl r2
    1b0c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1b10:	000b3200 	andeq	r3, fp, r0, lsl #4
    1b14:	000b3410 	andeq	r3, fp, r0, lsl r4
    1b18:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1b1c:	000b3414 	andeq	r3, fp, r4, lsl r4
    1b20:	000bc210 	andeq	ip, fp, r0, lsl r2
    1b24:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    1b28:	0bc200d8 	bleq	ff081e90 <__StackTop+0xc6f81e90>
    1b2c:	0bc41000 	bleq	ff105b34 <__StackTop+0xc7005b34>
    1b30:	00021000 	andeq	r1, r2, r0
    1b34:	0000147d 	andeq	r1, r0, sp, ror r4
	...
    1b40:	0b300000 	bleq	c01b48 <__RAM_SIZE+0xb01b48>
    1b44:	0bbf1000 	bleq	fefc5b4c <__StackTop+0xc6ec5b4c>
    1b48:	00011000 	andeq	r1, r1, r0
    1b4c:	000bbf50 	andeq	fp, fp, r0, asr pc
    1b50:	000bc410 	andeq	ip, fp, r0, lsl r4
    1b54:	f3000410 	vqshl.u8	d0, d0, d0
    1b58:	009f5001 	addseq	r5, pc, r1
	...
    1b64:	30000000 	andcc	r0, r0, r0
    1b68:	bf10000b 	svclt	0x0010000b
    1b6c:	0110000b 	tsteq	r0, fp
    1b70:	0bbf5100 	bleq	fefd5f78 <__StackTop+0xc6ed5f78>
    1b74:	0bc41000 	bleq	ff105b7c <__StackTop+0xc7005b7c>
    1b78:	00041000 	andeq	r1, r4, r0
    1b7c:	9f5101f3 	svcls	0x005101f3
	...
    1b8c:	10000b30 	andne	r0, r0, r0, lsr fp
    1b90:	10000bbf 			; <UNDEFINED> instruction: 0x10000bbf
    1b94:	bf520001 	svclt	0x00520001
    1b98:	c410000b 	ldrgt	r0, [r0], #-11
    1b9c:	0410000b 	ldreq	r0, [r0], #-11
    1ba0:	5201f300 	andpl	pc, r1, #0, 6
    1ba4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1bb0:	000b3000 	andeq	r3, fp, r0
    1bb4:	000bbf10 	andeq	fp, fp, r0, lsl pc
    1bb8:	53000110 	movwpl	r0, #272	; 0x110
    1bbc:	10000bbf 			; <UNDEFINED> instruction: 0x10000bbf
    1bc0:	10000bc4 	andne	r0, r0, r4, asr #23
    1bc4:	01f30004 	mvnseq	r0, r4
    1bc8:	00009f53 	andeq	r9, r0, r3, asr pc
	...
    1bdc:	10000b30 	andne	r0, r0, r0, lsr fp
    1be0:	10000b4e 	andne	r0, r0, lr, asr #22
    1be4:	00910002 	addseq	r0, r1, r2
    1be8:	10000b4e 	andne	r0, r0, lr, asr #22
    1bec:	10000b68 	andne	r0, r0, r8, ror #22
    1bf0:	68540001 	ldmdavs	r4, {r0}^
    1bf4:	7410000b 	ldrvc	r0, [r0], #-11
    1bf8:	0110000b 	tsteq	r0, fp
    1bfc:	0b745c00 	bleq	1d18c04 <__RAM_SIZE+0x1c18c04>
    1c00:	0ba21000 	bleq	fe885c08 <__StackTop+0xc6785c08>
    1c04:	00011000 	andeq	r1, r1, r0
    1c08:	000ba254 	andeq	sl, fp, r4, asr r2
    1c0c:	000ba410 	andeq	sl, fp, r0, lsl r4
    1c10:	91000210 	tstls	r0, r0, lsl r2
	...
    1c20:	000b3000 	andeq	r3, fp, r0
    1c24:	000b4010 	andeq	r4, fp, r0, lsl r0
    1c28:	91000210 	tstls	r0, r0, lsl r2
    1c2c:	000b4014 	andeq	r4, fp, r4, lsl r0
    1c30:	000bc410 	andeq	ip, fp, r0, lsl r4
    1c34:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    1c40:	00000002 	andeq	r0, r0, r2
	...
    1c4c:	10000b3a 	andne	r0, r0, sl, lsr fp
    1c50:	10000b4e 	andne	r0, r0, lr, asr #22
    1c54:	9f300002 	svcls	0x00300002
    1c58:	10000b4e 	andne	r0, r0, lr, asr #22
    1c5c:	10000b5a 	andne	r0, r0, sl, asr fp
    1c60:	5a5e0001 	bpl	1781c6c <__RAM_SIZE+0x1681c6c>
    1c64:	7410000b 	ldrvc	r0, [r0], #-11
    1c68:	0110000b 	tsteq	r0, fp
    1c6c:	0b745700 	bleq	1d17874 <__RAM_SIZE+0x1c17874>
    1c70:	0ba21000 	bleq	fe885c78 <__StackTop+0xc6785c78>
    1c74:	00011000 	andeq	r1, r1, r0
    1c78:	000ba25e 	andeq	sl, fp, lr, asr r2
    1c7c:	000ba410 	andeq	sl, fp, r0, lsl r4
    1c80:	30000210 	andcc	r0, r0, r0, lsl r2
    1c84:	000ba49f 	muleq	fp, pc, r4	; <UNPREDICTABLE>
    1c88:	000bc410 	andeq	ip, fp, r0, lsl r4
    1c8c:	57000110 	smladpl	r0, r0, r1, r0
	...
    1ca4:	10000b4e 	andne	r0, r0, lr, asr #22
    1ca8:	10000b52 	andne	r0, r0, r2, asr fp
    1cac:	525c0001 	subspl	r0, ip, #1
    1cb0:	5610000b 	ldrpl	r0, [r0], -fp
    1cb4:	0310000b 	tsteq	r0, #11
    1cb8:	9f507c00 	svcls	0x00507c00
    1cbc:	10000b56 	andne	r0, r0, r6, asr fp
    1cc0:	10000b74 	andne	r0, r0, r4, ror fp
    1cc4:	00740012 	rsbseq	r0, r4, r2, lsl r0
    1cc8:	30f70074 	rscscc	r0, r7, r4, ror r0
    1ccc:	30f70075 	rscscc	r0, r7, r5, ror r0
    1cd0:	7500f71b 	strvc	pc, [r0, #-1819]	; 0xfffff8e5
    1cd4:	9f1c1e00 	svcls	0x001c1e00
    1cd8:	10000b80 	andne	r0, r0, r0, lsl #23
    1cdc:	10000b90 	mulne	r0, r0, fp
    1ce0:	905c0001 	subsls	r0, ip, r1
    1ce4:	9e10000b 	cdpls	0, 1, cr0, cr0, cr11, {0}
    1ce8:	1210000b 	andsne	r0, r0, #11
    1cec:	74007400 	strvc	r7, [r0], #-1024	; 0xfffffc00
    1cf0:	7530f700 	ldrvc	pc, [r0, #-1792]!	; 0xfffff900
    1cf4:	1b30f700 	blne	c3f8fc <__RAM_SIZE+0xb3f8fc>
    1cf8:	007500f7 	ldrshteq	r0, [r5], #-7
    1cfc:	9e9f1c1e 	mrcls	12, 4, r1, cr15, cr14, {0}
    1d00:	a210000b 	andsge	r0, r0, #11
    1d04:	0110000b 	tsteq	r0, fp
    1d08:	00005c00 	andeq	r5, r0, r0, lsl #24
    1d0c:	00000000 	andeq	r0, r0, r0
    1d10:	09f80000 	ldmibeq	r8!, {}^	; <UNPREDICTABLE>
    1d14:	09fc1000 	ldmibeq	ip!, {ip}^
    1d18:	00021000 	andeq	r1, r2, r0
    1d1c:	09fc007d 	ldmibeq	ip!, {r0, r2, r3, r4, r5, r6}^
    1d20:	09fe1000 	ldmibeq	lr!, {ip}^
    1d24:	00021000 	andeq	r1, r2, r0
    1d28:	09fe1c7d 	ldmibeq	lr!, {r0, r2, r3, r4, r5, r6, sl, fp, ip}^
    1d2c:	0ab41000 	beq	fed05d34 <__StackTop+0xc6c05d34>
    1d30:	00021000 	andeq	r1, r2, r0
    1d34:	0ab4307d 	beq	fed0df30 <__StackTop+0xc6c0df30>
    1d38:	0ab81000 	beq	fee05d40 <__StackTop+0xc6d05d40>
    1d3c:	00021000 	andeq	r1, r2, r0
    1d40:	0ab81c7d 	beq	fee08f3c <__StackTop+0xc6d08f3c>
    1d44:	0b301000 	bleq	c05d4c <__RAM_SIZE+0xb05d4c>
    1d48:	00021000 	andeq	r1, r2, r0
    1d4c:	0000307d 	andeq	r3, r0, sp, ror r0
	...
    1d5c:	100009f8 	strdne	r0, [r0], -r8
    1d60:	10000ab1 			; <UNDEFINED> instruction: 0x10000ab1
    1d64:	b1500001 	cmplt	r0, r1
    1d68:	b810000a 	ldmdalt	r0, {r1, r3}
    1d6c:	0410000a 	ldreq	r0, [r0], #-10
    1d70:	5001f300 	andpl	pc, r1, r0, lsl #6
    1d74:	000ab89f 	muleq	sl, pc, r8	; <UNPREDICTABLE>
    1d78:	000b3010 	andeq	r3, fp, r0, lsl r0
    1d7c:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    1d8c:	09f80000 	ldmibeq	r8!, {}^	; <UNPREDICTABLE>
    1d90:	0ab11000 	beq	fec45d98 <__StackTop+0xc6b45d98>
    1d94:	00011000 	andeq	r1, r1, r0
    1d98:	000ab151 	andeq	fp, sl, r1, asr r1
    1d9c:	000ab810 	andeq	fp, sl, r0, lsl r8
    1da0:	f3000410 	vqshl.u8	d0, d0, d0
    1da4:	b89f5101 	ldmlt	pc, {r0, r8, ip, lr}	; <UNPREDICTABLE>
    1da8:	3010000a 	andscc	r0, r0, sl
    1dac:	0110000b 	tsteq	r0, fp
    1db0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    1dc0:	100009f8 	strdne	r0, [r0], -r8
    1dc4:	10000ab1 			; <UNDEFINED> instruction: 0x10000ab1
    1dc8:	b1520001 	cmplt	r2, r1
    1dcc:	b810000a 	ldmdalt	r0, {r1, r3}
    1dd0:	0410000a 	ldreq	r0, [r0], #-10
    1dd4:	5201f300 	andpl	pc, r1, #0, 6
    1dd8:	000ab89f 	muleq	sl, pc, r8	; <UNPREDICTABLE>
    1ddc:	000b3010 	andeq	r3, fp, r0, lsl r0
    1de0:	52000110 	andpl	r0, r0, #16, 2
	...
    1df0:	09f80000 	ldmibeq	r8!, {}^	; <UNPREDICTABLE>
    1df4:	0ab11000 	beq	fec45dfc <__StackTop+0xc6b45dfc>
    1df8:	00011000 	andeq	r1, r1, r0
    1dfc:	000ab153 	andeq	fp, sl, r3, asr r1
    1e00:	000ab810 	andeq	fp, sl, r0, lsl r8
    1e04:	f3000410 	vqshl.u8	d0, d0, d0
    1e08:	b89f5301 	ldmlt	pc, {r0, r8, r9, ip, lr}	; <UNPREDICTABLE>
    1e0c:	3010000a 	andscc	r0, r0, sl
    1e10:	0110000b 	tsteq	r0, fp
    1e14:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    1e20:	09f80000 	ldmibeq	r8!, {}^	; <UNPREDICTABLE>
    1e24:	0ab81000 	beq	fee05e2c <__StackTop+0xc6d05e2c>
    1e28:	00021000 	andeq	r1, r2, r0
    1e2c:	0ab80091 	beq	fee02078 <__StackTop+0xc6d02078>
    1e30:	0b301000 	bleq	c05e38 <__RAM_SIZE+0xb05e38>
    1e34:	00021000 	andeq	r1, r2, r0
    1e38:	00000091 	muleq	r0, r1, r0
	...
    1e44:	00010100 	andeq	r0, r1, r0, lsl #2
    1e48:	00010100 	andeq	r0, r1, r0, lsl #2
    1e4c:	00010100 	andeq	r0, r1, r0, lsl #2
    1e50:	00010100 	andeq	r0, r1, r0, lsl #2
    1e54:	00010100 	andeq	r0, r1, r0, lsl #2
    1e58:	00000000 	andeq	r0, r0, r0
    1e5c:	01000000 	mrseq	r0, (UNDEF: 0)
    1e60:	01000001 	tsteq	r0, r1
    1e64:	01000001 	tsteq	r0, r1
    1e68:	01000001 	tsteq	r0, r1
    1e6c:	01000001 	tsteq	r0, r1
    1e70:	00000001 	andeq	r0, r0, r1
    1e74:	100009f8 	strdne	r0, [r0], -r8
    1e78:	10000a30 	andne	r0, r0, r0, lsr sl
    1e7c:	04910002 	ldreq	r0, [r1], #2
    1e80:	10000a30 	andne	r0, r0, r0, lsr sl
    1e84:	10000a30 	andne	r0, r0, r0, lsr sl
    1e88:	30540001 	subscc	r0, r4, r1
    1e8c:	3a10000a 	bcc	401ebc <__RAM_SIZE+0x301ebc>
    1e90:	0310000a 	tsteq	r0, #10
    1e94:	9f017400 	svcls	0x00017400
    1e98:	10000a3a 	andne	r0, r0, sl, lsr sl
    1e9c:	10000a50 	andne	r0, r0, r0, asr sl
    1ea0:	50540001 	subspl	r0, r4, r1
    1ea4:	5a10000a 	bpl	401ed4 <__RAM_SIZE+0x301ed4>
    1ea8:	0310000a 	tsteq	r0, #10
    1eac:	9f017400 	svcls	0x00017400
    1eb0:	10000a5a 	andne	r0, r0, sl, asr sl
    1eb4:	10000a88 	andne	r0, r0, r8, lsl #21
    1eb8:	88540001 	ldmdahi	r4, {r0}^
    1ebc:	9210000a 	andsls	r0, r0, #10
    1ec0:	0310000a 	tsteq	r0, #10
    1ec4:	9f017400 	svcls	0x00017400
    1ec8:	10000a92 	mulne	r0, r2, sl
    1ecc:	10000a9c 	mulne	r0, ip, sl
    1ed0:	9c540001 	mrrcls	0, 0, r0, r4, cr1
    1ed4:	a610000a 	ldrge	r0, [r0], -sl
    1ed8:	0310000a 	tsteq	r0, #10
    1edc:	9f017400 	svcls	0x00017400
    1ee0:	10000aa6 	andne	r0, r0, r6, lsr #21
    1ee4:	10000ab8 			; <UNDEFINED> instruction: 0x10000ab8
    1ee8:	b8540001 	ldmdalt	r4, {r0}^
    1eec:	bc10000a 	ldclt	0, cr0, [r0], {10}
    1ef0:	0310000a 	tsteq	r0, #10
    1ef4:	9f7f7400 	svcls	0x007f7400
    1ef8:	10000abc 			; <UNDEFINED> instruction: 0x10000abc
    1efc:	10000aca 	andne	r0, r0, sl, asr #21
    1f00:	ca5c0001 	bgt	1701f0c <__RAM_SIZE+0x1601f0c>
    1f04:	cc10000a 	ldcgt	0, cr0, [r0], {10}
    1f08:	0110000a 	tsteq	r0, sl
    1f0c:	0acc5400 	beq	ff316f14 <__StackTop+0xc7216f14>
    1f10:	0ad01000 	beq	ff405f18 <__StackTop+0xc7305f18>
    1f14:	00011000 	andeq	r1, r1, r0
    1f18:	000ad05c 	andeq	sp, sl, ip, asr r0
    1f1c:	000ada10 	andeq	sp, sl, r0, lsl sl
    1f20:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1f24:	10000ada 	ldrdne	r0, [r0], -sl
    1f28:	10000ae4 	andne	r0, r0, r4, ror #21
    1f2c:	01740003 	cmneq	r4, r3
    1f30:	000ae49f 	muleq	sl, pc, r4	; <UNPREDICTABLE>
    1f34:	000af010 	andeq	pc, sl, r0, lsl r0	; <UNPREDICTABLE>
    1f38:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1f3c:	10000af0 	strdne	r0, [r0], -r0	; <UNPREDICTABLE>
    1f40:	10000afa 	strdne	r0, [r0], -sl
    1f44:	01740003 	cmneq	r4, r3
    1f48:	000afa9f 	muleq	sl, pc, sl	; <UNPREDICTABLE>
    1f4c:	000b0010 	andeq	r0, fp, r0, lsl r0
    1f50:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1f54:	10000b00 	andne	r0, r0, r0, lsl #22
    1f58:	10000b0a 	andne	r0, r0, sl, lsl #22
    1f5c:	01740003 	cmneq	r4, r3
    1f60:	000b0a9f 	muleq	fp, pc, sl	; <UNPREDICTABLE>
    1f64:	000b1210 	andeq	r1, fp, r0, lsl r2
    1f68:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1f6c:	10000b12 	andne	r0, r0, r2, lsl fp
    1f70:	10000b1c 	andne	r0, r0, ip, lsl fp
    1f74:	01740003 	cmneq	r4, r3
    1f78:	000b1c9f 	muleq	fp, pc, ip	; <UNPREDICTABLE>
    1f7c:	000b2410 	andeq	r2, fp, r0, lsl r4
    1f80:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1f84:	10000b24 	andne	r0, r0, r4, lsr #22
    1f88:	10000b2e 	andne	r0, r0, lr, lsr #22
    1f8c:	01740003 	cmneq	r4, r3
    1f90:	000b2e9f 	muleq	fp, pc, lr	; <UNPREDICTABLE>
    1f94:	000b3010 	andeq	r3, fp, r0, lsl r0
    1f98:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    1fa8:	100009f8 	strdne	r0, [r0], -r8
    1fac:	10000ab8 			; <UNDEFINED> instruction: 0x10000ab8
    1fb0:	08910002 	ldmeq	r1, {r1}
    1fb4:	10000ab8 			; <UNDEFINED> instruction: 0x10000ab8
    1fb8:	10000b30 	andne	r0, r0, r0, lsr fp
    1fbc:	08910002 	ldmeq	r1, {r1}
	...
    1fcc:	100009f8 	strdne	r0, [r0], -r8
    1fd0:	10000ab8 			; <UNDEFINED> instruction: 0x10000ab8
    1fd4:	0c910002 	ldceq	0, cr0, [r1], {2}
    1fd8:	10000ab8 			; <UNDEFINED> instruction: 0x10000ab8
    1fdc:	10000b30 	andne	r0, r0, r0, lsr fp
    1fe0:	0c910002 	ldceq	0, cr0, [r1], {2}
	...
    1ff0:	100009f8 	strdne	r0, [r0], -r8
    1ff4:	10000ab8 			; <UNDEFINED> instruction: 0x10000ab8
    1ff8:	10910002 	addsne	r0, r1, r2
    1ffc:	10000ab8 			; <UNDEFINED> instruction: 0x10000ab8
    2000:	10000b30 	andne	r0, r0, r0, lsr fp
    2004:	10910002 	addsne	r0, r1, r2
	...
    2014:	100009f8 	strdne	r0, [r0], -r8
    2018:	10000a2e 	andne	r0, r0, lr, lsr #20
    201c:	14910002 	ldrne	r0, [r1], #2
    2020:	10000a2e 	andne	r0, r0, lr, lsr #20
    2024:	10000b30 	andne	r0, r0, r0, lsr fp
    2028:	00570001 	subseq	r0, r7, r1
	...
    2034:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    2038:	b8100009 	ldmdalt	r0, {r0, r3}
    203c:	0210000a 	andseq	r0, r0, #10
    2040:	b8189100 	ldmdalt	r8, {r8, ip, pc}
    2044:	3010000a 	andscc	r0, r0, sl
    2048:	0210000b 	andseq	r0, r0, #11
    204c:	00189100 	andseq	r9, r8, r0, lsl #2
    2050:	00000000 	andeq	r0, r0, r0
    2054:	7a000000 	bvc	205c <__HEAP_SIZE+0x105c>
    2058:	7e100009 	cdpvc	0, 1, cr0, cr0, cr9, {0}
    205c:	02100009 	andseq	r0, r0, #9
    2060:	7e007d00 	cdpvc	13, 0, cr7, cr0, cr0, {0}
    2064:	80100009 	andshi	r0, r0, r9
    2068:	02100009 	andseq	r0, r0, #9
    206c:	80247d00 	eorhi	r7, r4, r0, lsl #26
    2070:	de100009 	cdple	0, 1, cr0, cr0, cr9, {0}
    2074:	02100009 	andseq	r0, r0, #9
    2078:	de307d00 	cdple	13, 3, cr7, cr0, cr0, {0}
    207c:	e2100009 	ands	r0, r0, #9
    2080:	02100009 	andseq	r0, r0, #9
    2084:	e2247d00 	eor	r7, r4, #0, 26
    2088:	f8100009 			; <UNDEFINED> instruction: 0xf8100009
    208c:	02100009 	andseq	r0, r0, #9
    2090:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    209c:	7a000000 	bvc	20a4 <__HEAP_SIZE+0x10a4>
    20a0:	9e100009 	cdpls	0, 1, cr0, cr0, cr9, {0}
    20a4:	01100009 	tsteq	r0, r9
    20a8:	099e5000 	ldmibeq	lr, {ip, lr}
    20ac:	09f81000 	ldmibeq	r8!, {ip}^
    20b0:	00011000 	andeq	r1, r1, r0
    20b4:	00000055 	andeq	r0, r0, r5, asr r0
	...
    20c0:	00097a00 	andeq	r7, r9, r0, lsl #20
    20c4:	00099e10 	andeq	r9, r9, r0, lsl lr
    20c8:	51000110 	tstpl	r0, r0, lsl r1
    20cc:	1000099e 	mulne	r0, lr, r9
    20d0:	100009f8 	strdne	r0, [r0], -r8
    20d4:	00560001 	subseq	r0, r6, r1
	...
    20e8:	7a000000 	bvc	20f0 <__HEAP_SIZE+0x10f0>
    20ec:	a6100009 	ldrge	r0, [r0], -r9
    20f0:	01100009 	tsteq	r0, r9
    20f4:	09a65200 	stmibeq	r6!, {r9, ip, lr}
    20f8:	09b61000 	ldmibeq	r6!, {ip}
    20fc:	00011000 	andeq	r1, r1, r0
    2100:	0009b65b 	andeq	fp, r9, fp, asr r6
    2104:	0009c210 	andeq	ip, r9, r0, lsl r2
    2108:	52000110 	andpl	r0, r0, #16, 2
    210c:	100009c2 	andne	r0, r0, r2, asr #19
    2110:	100009ce 	andne	r0, r0, lr, asr #19
    2114:	ce580001 	cdpgt	0, 5, cr0, cr8, cr1, {0}
    2118:	ec100009 	ldc	0, cr0, [r0], {9}
    211c:	01100009 	tsteq	r0, r9
    2120:	09ec5200 	stmibeq	ip!, {r9, ip, lr}^
    2124:	09f81000 	ldmibeq	r8!, {ip}^
    2128:	00011000 	andeq	r1, r1, r0
    212c:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2138:	00097a00 	andeq	r7, r9, r0, lsl #20
    213c:	00099410 	andeq	r9, r9, r0, lsl r4
    2140:	53000110 	movwpl	r0, #272	; 0x110
    2144:	10000994 	mulne	r0, r4, r9
    2148:	100009f8 	strdne	r0, [r0], -r8
    214c:	00570001 	subseq	r0, r7, r1
	...
    2158:	7a000000 	bvc	2160 <__HEAP_SIZE+0x1160>
    215c:	e2100009 	ands	r0, r0, #9
    2160:	02100009 	andseq	r0, r0, #9
    2164:	e2009100 	and	r9, r0, #0, 2
    2168:	f8100009 			; <UNDEFINED> instruction: 0xf8100009
    216c:	02100009 	andseq	r0, r0, #9
    2170:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    217c:	7a000000 	bvc	2184 <__HEAP_SIZE+0x1184>
    2180:	bc100009 	ldclt	0, cr0, [r0], {9}
    2184:	02100009 	andseq	r0, r0, #9
    2188:	bc049100 	stfltd	f1, [r4], {-0}
    218c:	da100009 	ble	4021b8 <__RAM_SIZE+0x3021b8>
    2190:	01100009 	tsteq	r0, r9
    2194:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    21a0:	097a0000 	ldmdbeq	sl!, {}^	; <UNPREDICTABLE>
    21a4:	09e21000 	stmibeq	r2!, {ip}^
    21a8:	00021000 	andeq	r1, r2, r0
    21ac:	09e20891 	stmibeq	r2!, {r0, r4, r7, fp}^
    21b0:	09f81000 	ldmibeq	r8!, {ip}^
    21b4:	00021000 	andeq	r1, r2, r0
    21b8:	00000891 	muleq	r0, r1, r8
	...
    21c4:	097a0000 	ldmdbeq	sl!, {}^	; <UNPREDICTABLE>
    21c8:	09e21000 	stmibeq	r2!, {ip}^
    21cc:	00021000 	andeq	r1, r2, r0
    21d0:	09e20c91 	stmibeq	r2!, {r0, r4, r7, sl, fp}^
    21d4:	09f81000 	ldmibeq	r8!, {ip}^
    21d8:	00021000 	andeq	r1, r2, r0
    21dc:	00000c91 	muleq	r0, r1, ip
    21e0:	00000000 	andeq	r0, r0, r0
    21e4:	00010000 	andeq	r0, r1, r0
    21e8:	00000000 	andeq	r0, r0, r0
    21ec:	10000992 	mulne	r0, r2, r9
    21f0:	1000099e 	mulne	r0, lr, r9
    21f4:	9e520001 	cdpls	0, 5, cr0, cr2, cr1, {0}
    21f8:	bc100009 	ldclt	0, cr0, [r0], {9}
    21fc:	02100009 	andseq	r0, r0, #9
    2200:	bc549100 	ldfltp	f1, [r4], {-0}
    2204:	f8100009 			; <UNDEFINED> instruction: 0xf8100009
    2208:	04100009 	ldreq	r0, [r0], #-9
    220c:	5201f300 	andpl	pc, r1, #0, 6
    2210:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2214:	00000000 	andeq	r0, r0, r0
    2218:	9e000000 	cdpls	0, 0, cr0, cr0, cr0, {0}
    221c:	bc100009 	ldclt	0, cr0, [r0], {9}
    2220:	01100009 	tsteq	r0, r9
    2224:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    2230:	09560000 	ldmdbeq	r6, {}^	; <UNPREDICTABLE>
    2234:	095a1000 	ldmdbeq	sl, {ip}^
    2238:	00011000 	andeq	r1, r1, r0
    223c:	00095a50 	andeq	r5, r9, r0, asr sl
    2240:	00097a10 	andeq	r7, r9, r0, lsl sl
    2244:	51000110 	tstpl	r0, r0, lsl r1
	...
    2250:	00000001 	andeq	r0, r0, r1
    2254:	09580000 	ldmdbeq	r8, {}^	; <UNPREDICTABLE>
    2258:	095c1000 	ldmdbeq	ip, {ip}^
    225c:	00021000 	andeq	r1, r2, r0
    2260:	095c9f30 	ldmdbeq	ip, {r4, r5, r8, r9, sl, fp, ip, pc}^
    2264:	09601000 	stmdbeq	r0!, {ip}^
    2268:	00011000 	andeq	r1, r1, r0
    226c:	00096c50 	andeq	r6, r9, r0, asr ip
    2270:	00097a10 	andeq	r7, r9, r0, lsl sl
    2274:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    2284:	10000970 	andne	r0, r0, r0, ror r9
    2288:	10000972 	andne	r0, r0, r2, ror r9
    228c:	72530001 	subsvc	r0, r3, #1
    2290:	74100009 	ldrvc	r0, [r0], #-9
    2294:	03100009 	tsteq	r0, #9
    2298:	9f307300 	svcls	0x00307300
	...
    22ac:	007d0002 	rsbseq	r0, sp, r2
	...
    22b8:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    22c4:	007d0002 	rsbseq	r0, sp, r2
	...
    22dc:	00010000 	andeq	r0, r1, r0
    22e0:	00000050 	andeq	r0, r0, r0, asr r0
    22e4:	00000000 	andeq	r0, r0, r0
    22e8:	f3000400 	vshl.u8	d0, d0, d0
    22ec:	009f5001 	addseq	r5, pc, r1
    22f0:	00000000 	andeq	r0, r0, r0
    22f4:	01000000 	mrseq	r0, (UNDEF: 0)
    22f8:	00005000 	andeq	r5, r0, r0
	...
    2310:	00510001 	subseq	r0, r1, r1
    2314:	00000000 	andeq	r0, r0, r0
    2318:	04000000 	streq	r0, [r0], #-0
    231c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    2320:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2324:	00000000 	andeq	r0, r0, r0
    2328:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2340:	00010000 	andeq	r0, r1, r0
    2344:	00000052 	andeq	r0, r0, r2, asr r0
    2348:	00000000 	andeq	r0, r0, r0
    234c:	f3000400 	vshl.u8	d0, d0, d0
    2350:	009f5201 	addseq	r5, pc, r1, lsl #4
    2354:	00000000 	andeq	r0, r0, r0
    2358:	01000000 	mrseq	r0, (UNDEF: 0)
    235c:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    2374:	00530001 	subseq	r0, r3, r1
    2378:	00000000 	andeq	r0, r0, r0
    237c:	04000000 	streq	r0, [r0], #-0
    2380:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    2384:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2388:	00000000 	andeq	r0, r0, r0
    238c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2398:	10001a98 	mulne	r0, r8, sl
    239c:	10001a9e 	mulne	r0, lr, sl
    23a0:	007d0002 	rsbseq	r0, sp, r2
    23a4:	10001a9e 	mulne	r0, lr, sl
    23a8:	10001aa4 	andne	r1, r0, r4, lsr #21
    23ac:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    23bc:	10001a98 	mulne	r0, r8, sl
    23c0:	10001aa1 	andne	r1, r0, r1, lsr #21
    23c4:	a1500001 	cmpge	r0, r1
    23c8:	a410001a 	ldrge	r0, [r0], #-26	; 0xffffffe6
    23cc:	0410001a 	ldreq	r0, [r0], #-26	; 0xffffffe6
    23d0:	5001f300 	andpl	pc, r1, r0, lsl #6
    23d4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    23e0:	001a9800 	andseq	r9, sl, r0, lsl #16
    23e4:	001aa110 	andseq	sl, sl, r0, lsl r1
    23e8:	51000110 	tstpl	r0, r0, lsl r1
    23ec:	10001aa1 	andne	r1, r0, r1, lsr #21
    23f0:	10001aa4 	andne	r1, r0, r4, lsr #21
    23f4:	01f30004 	mvnseq	r0, r4
    23f8:	00009f51 	andeq	r9, r0, r1, asr pc
	...
    2404:	1a980000 	bne	fe60240c <__StackTop+0xc650240c>
    2408:	1aa11000 	bne	fe846410 <__StackTop+0xc6746410>
    240c:	00011000 	andeq	r1, r1, r0
    2410:	001aa152 	andseq	sl, sl, r2, asr r1
    2414:	001aa410 	andseq	sl, sl, r0, lsl r4
    2418:	f3000410 	vqshl.u8	d0, d0, d0
    241c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
    2428:	98000000 	stmdals	r0, {}	; <UNPREDICTABLE>
    242c:	a110001a 	tstge	r0, sl, lsl r0
    2430:	0110001a 	tsteq	r0, sl, lsl r0
    2434:	1aa15300 	bne	fe85703c <__StackTop+0xc675703c>
    2438:	1aa41000 	bne	fe906440 <__StackTop+0xc6806440>
    243c:	00041000 	andeq	r1, r4, r0
    2440:	9f5301f3 	svcls	0x005301f3
	...
    2454:	007d0002 	rsbseq	r0, sp, r2
	...
    2460:	107d0002 	rsbsne	r0, sp, r2
	...
    2478:	00500001 	subseq	r0, r0, r1
    247c:	00000000 	andeq	r0, r0, r0
    2480:	01000000 	mrseq	r0, (UNDEF: 0)
    2484:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    2498:	00010000 	andeq	r0, r1, r0
    249c:	00000051 	andeq	r0, r0, r1, asr r0
    24a0:	00000000 	andeq	r0, r0, r0
    24a4:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
	...
    24b0:	01000001 	tsteq	r0, r1
	...
    24bc:	00020000 	andeq	r0, r2, r0
    24c0:	00009f30 	andeq	r9, r0, r0, lsr pc
    24c4:	00000000 	andeq	r0, r0, r0
    24c8:	00010000 	andeq	r0, r1, r0
    24cc:	00000050 	andeq	r0, r0, r0, asr r0
    24d0:	00000000 	andeq	r0, r0, r0
    24d4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    24e0:	00000002 	andeq	r0, r0, r2
	...
    24ec:	9f300002 	svcls	0x00300002
	...
    24f8:	00540001 	subseq	r0, r4, r1
	...
    2508:	02000000 	andeq	r0, r0, #0
    250c:	00007d00 	andeq	r7, r0, r0, lsl #26
    2510:	00000000 	andeq	r0, r0, r0
    2514:	02000000 	andeq	r0, r0, #0
    2518:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    252c:	01000000 	mrseq	r0, (UNDEF: 0)
    2530:	00005000 	andeq	r5, r0, r0
    2534:	00000000 	andeq	r0, r0, r0
    2538:	00040000 	andeq	r0, r4, r0
    253c:	9f5001f3 	svcls	0x005001f3
	...
    2548:	10001ae4 	andne	r1, r0, r4, ror #21
    254c:	10001ae6 	andne	r1, r0, r6, ror #21
    2550:	007d0002 	rsbseq	r0, sp, r2
    2554:	10001ae6 	andne	r1, r0, r6, ror #21
    2558:	10001b02 	andne	r1, r0, r2, lsl #22
    255c:	107d0002 	rsbsne	r0, sp, r2
	...
    256c:	10001ae4 	andne	r1, r0, r4, ror #21
    2570:	10001aec 	andne	r1, r0, ip, ror #21
    2574:	ec500001 	mrrc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    2578:	0210001a 	andseq	r0, r0, #26
    257c:	0110001b 	tsteq	r0, fp, lsl r0
    2580:	00005500 	andeq	r5, r0, r0, lsl #10
    2584:	00000000 	andeq	r0, r0, r0
    2588:	00010000 	andeq	r0, r1, r0
    258c:	1ae80000 	bne	ffa02594 <__StackTop+0xc7902594>
    2590:	1aec1000 	bne	ffb06598 <__StackTop+0xc7a06598>
    2594:	00021000 	andeq	r1, r2, r0
    2598:	1aec9f30 	bne	ffb2a260 <__StackTop+0xc7a2a260>
    259c:	1b021000 	blne	865a4 <__HEAP_SIZE+0x855a4>
    25a0:	00011000 	andeq	r1, r1, r0
    25a4:	00000054 	andeq	r0, r0, r4, asr r0
    25a8:	00000000 	andeq	r0, r0, r0
    25ac:	d0000100 	andle	r0, r0, r0, lsl #2
    25b0:	e410001a 	ldr	r0, [r0], #-26	; 0xffffffe6
    25b4:	0110001a 	tsteq	r0, sl, lsl r0
    25b8:	00005000 	andeq	r5, r0, r0
	...
    25d0:	00010000 	andeq	r0, r1, r0
    25d4:	00000050 	andeq	r0, r0, r0, asr r0
    25d8:	00000000 	andeq	r0, r0, r0
    25dc:	03000500 	movweq	r0, #1280	; 0x500
    25e0:	38000008 	stmdacc	r0, {r3}
	...
    25ec:	00500001 	subseq	r0, r0, r1
    25f0:	00000000 	andeq	r0, r0, r0
    25f4:	04000000 	streq	r0, [r0], #-0
    25f8:	5001f300 	andpl	pc, r1, r0, lsl #6
    25fc:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2600:	00000000 	andeq	r0, r0, r0
    2604:	01010200 	mrseq	r0, R9_usr
	...
    2610:	02000000 	andeq	r0, r0, #0
    2614:	009f3200 	addseq	r3, pc, r0, lsl #4
    2618:	00000000 	andeq	r0, r0, r0
    261c:	02000000 	andeq	r0, r0, #0
    2620:	009f3000 	addseq	r3, pc, r0
    2624:	00000000 	andeq	r0, r0, r0
    2628:	02000000 	andeq	r0, r0, #0
    262c:	009f3200 	addseq	r3, pc, r0, lsl #4
	...
    2638:	001e2801 	andseq	r2, lr, r1, lsl #16
    263c:	001e2810 	andseq	r2, lr, r0, lsl r8
    2640:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    264c:	10001b8c 	andne	r1, r0, ip, lsl #23
    2650:	10001b90 	mulne	r0, r0, fp
    2654:	007d0002 	rsbseq	r0, sp, r2
    2658:	10001b90 	mulne	r0, r0, fp
    265c:	10001c08 	andne	r1, r0, r8, lsl #24
    2660:	207d0002 	rsbscs	r0, sp, r2
	...
    2674:	10001b8c 	andne	r1, r0, ip, lsl #23
    2678:	10001ba6 	andne	r1, r0, r6, lsr #23
    267c:	a6500001 	ldrbge	r0, [r0], -r1
    2680:	e010001b 	ands	r0, r0, fp, lsl r0
    2684:	0110001b 	tsteq	r0, fp, lsl r0
    2688:	1be05800 	blne	ff818690 <__StackTop+0xc7718690>
    268c:	1be61000 	blne	ff986694 <__StackTop+0xc7886694>
    2690:	00041000 	andeq	r1, r4, r0
    2694:	9f5001f3 	svcls	0x005001f3
    2698:	10001be6 	andne	r1, r0, r6, ror #23
    269c:	10001c08 	andne	r1, r0, r8, lsl #24
    26a0:	00500001 	subseq	r0, r0, r1
	...
    26b0:	8c000000 	stchi	0, cr0, [r0], {-0}
    26b4:	a610001b 			; <UNDEFINED> instruction: 0xa610001b
    26b8:	0110001b 	tsteq	r0, fp, lsl r0
    26bc:	1ba65100 	blne	fe996ac4 <__StackTop+0xc6896ac4>
    26c0:	1be01000 	blne	ff8066c8 <__StackTop+0xc77066c8>
    26c4:	00011000 	andeq	r1, r1, r0
    26c8:	001be057 	andseq	lr, fp, r7, asr r0
    26cc:	001be610 	andseq	lr, fp, r0, lsl r6
    26d0:	f3000410 	vqshl.u8	d0, d0, d0
    26d4:	e69f5101 	ldr	r5, [pc], r1, lsl #2
    26d8:	0810001b 	ldmdaeq	r0, {r0, r1, r3, r4}
    26dc:	0110001c 	tsteq	r0, ip, lsl r0
    26e0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    26f0:	10001b8c 	andne	r1, r0, ip, lsl #23
    26f4:	10001ba6 	andne	r1, r0, r6, lsr #23
    26f8:	a6520001 	ldrbge	r0, [r2], -r1
    26fc:	e610001b 			; <UNDEFINED> instruction: 0xe610001b
    2700:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
    2704:	5201f300 	andpl	pc, r1, #0, 6
    2708:	001be69f 	mulseq	fp, pc, r6	; <UNPREDICTABLE>
    270c:	001c0810 	andseq	r0, ip, r0, lsl r8
    2710:	52000110 	andpl	r0, r0, #16, 2
	...
    2724:	10001b8c 	andne	r1, r0, ip, lsl #23
    2728:	10001ba6 	andne	r1, r0, r6, lsr #23
    272c:	a6530001 	ldrbge	r0, [r3], -r1
    2730:	e010001b 	ands	r0, r0, fp, lsl r0
    2734:	0110001b 	tsteq	r0, fp, lsl r0
    2738:	1be05500 	blne	ff817b40 <__StackTop+0xc7717b40>
    273c:	1be61000 	blne	ff986744 <__StackTop+0xc7886744>
    2740:	00041000 	andeq	r1, r4, r0
    2744:	9f5301f3 	svcls	0x005301f3
    2748:	10001be6 	andne	r1, r0, r6, ror #23
    274c:	10001c08 	andne	r1, r0, r8, lsl #24
    2750:	00530001 	subseq	r0, r3, r1
    2754:	00000000 	andeq	r0, r0, r0
    2758:	01000000 	mrseq	r0, (UNDEF: 0)
    275c:	00000000 	andeq	r0, r0, r0
    2760:	001b9000 	andseq	r9, fp, r0
    2764:	001ba610 	andseq	sl, fp, r0, lsl r6
    2768:	30000210 	andcc	r0, r0, r0, lsl r2
    276c:	001ba69f 	mulseq	fp, pc, r6	; <UNPREDICTABLE>
    2770:	001be010 	andseq	lr, fp, r0, lsl r0
    2774:	56000110 			; <UNDEFINED> instruction: 0x56000110
    2778:	10001be6 	andne	r1, r0, r6, ror #23
    277c:	10001bfc 	strdne	r1, [r0], -ip
    2780:	9f300002 	svcls	0x00300002
	...
    278c:	01000002 	tsteq	r0, r2
    2790:	00000001 	andeq	r0, r0, r1
    2794:	1b900000 	blne	fe40279c <__StackTop+0xc630279c>
    2798:	1ba61000 	blne	fe9867a0 <__StackTop+0xc68867a0>
    279c:	00021000 	andeq	r1, r2, r0
    27a0:	1bb09f30 	blne	fec2a468 <__StackTop+0xc6b2a468>
    27a4:	1bc21000 	blne	ff0867ac <__StackTop+0xc6f867ac>
    27a8:	00011000 	andeq	r1, r1, r0
    27ac:	001bc252 	andseq	ip, fp, r2, asr r2
    27b0:	001bc610 	andseq	ip, fp, r0, lsl r6
    27b4:	72000310 	andvc	r0, r0, #16, 6	; 0x40000000
    27b8:	1bc69f7f 	blne	ff1aa5bc <__StackTop+0xc70aa5bc>
    27bc:	1be01000 	blne	ff8067c4 <__StackTop+0xc77067c4>
    27c0:	00011000 	andeq	r1, r1, r0
    27c4:	001be659 	andseq	lr, fp, r9, asr r6
    27c8:	001c0810 	andseq	r0, ip, r0, lsl r8
    27cc:	30000210 	andcc	r0, r0, r0, lsl r2
    27d0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    27d4:	00000000 	andeq	r0, r0, r0
    27d8:	00000200 	andeq	r0, r0, r0, lsl #4
    27dc:	90000000 	andls	r0, r0, r0
    27e0:	a610001b 			; <UNDEFINED> instruction: 0xa610001b
    27e4:	0210001b 	andseq	r0, r0, #27
    27e8:	ce9f3000 	cdpgt	0, 9, cr3, cr15, cr0, {0}
    27ec:	d110001b 	tstle	r0, fp, lsl r0
    27f0:	0110001b 	tsteq	r0, fp, lsl r0
    27f4:	1be65000 	blne	ff9967fc <__StackTop+0xc78967fc>
    27f8:	1c081000 	stcne	0, cr1, [r8], {-0}
    27fc:	00021000 	andeq	r1, r2, r0
    2800:	00009f30 	andeq	r9, r0, r0, lsr pc
    2804:	00000000 	andeq	r0, r0, r0
    2808:	00020000 	andeq	r0, r2, r0
    280c:	00000000 	andeq	r0, r0, r0
    2810:	10001b90 	mulne	r0, r0, fp
    2814:	10001ba6 	andne	r1, r0, r6, lsr #23
    2818:	9f300002 	svcls	0x00300002
    281c:	10001ba6 	andne	r1, r0, r6, lsr #23
    2820:	10001be0 	andne	r1, r0, r0, ror #23
    2824:	e6540001 	ldrb	r0, [r4], -r1
    2828:	0810001b 	ldmdaeq	r0, {r0, r1, r3, r4}
    282c:	0210001c 	andseq	r0, r0, #28
    2830:	009f3000 	addseq	r3, pc, r0
    2834:	00000000 	andeq	r0, r0, r0
    2838:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    283c:	7a10001c 	bvc	4028b4 <__RAM_SIZE+0x3028b4>
    2840:	0210001c 	andseq	r0, r0, #28
    2844:	7a007d00 	bvc	21c4c <__HEAP_SIZE+0x20c4c>
    2848:	2410001c 	ldrcs	r0, [r0], #-28	; 0xffffffe4
    284c:	0210001e 	andseq	r0, r0, #30
    2850:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    2864:	001c7800 	andseq	r7, ip, r0, lsl #16
    2868:	001cc410 	andseq	ip, ip, r0, lsl r4
    286c:	50000110 	andpl	r0, r0, r0, lsl r1
    2870:	10001cc4 	andne	r1, r0, r4, asr #25
    2874:	10001d7a 	andne	r1, r0, sl, ror sp
    2878:	7a550001 	bvc	1542884 <__RAM_SIZE+0x1442884>
    287c:	8e10001d 	mrchi	0, 0, r0, cr0, cr13, {0}
    2880:	0410001d 	ldreq	r0, [r0], #-29	; 0xffffffe3
    2884:	5001f300 	andpl	pc, r1, r0, lsl #6
    2888:	001d8e9f 	mulseq	sp, pc, lr	; <UNPREDICTABLE>
    288c:	001d9e10 	andseq	r9, sp, r0, lsl lr
    2890:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    2894:	10001d9e 	mulne	r0, lr, sp
    2898:	10001e24 	andne	r1, r0, r4, lsr #28
    289c:	01f30004 	mvnseq	r0, r4
    28a0:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    28ac:	1c780000 	ldclne	0, cr0, [r8], #-0
    28b0:	1cc71000 	stclne	0, cr1, [r7], {0}
    28b4:	00011000 	andeq	r1, r1, r0
    28b8:	001cc751 	andseq	ip, ip, r1, asr r7
    28bc:	001e2410 	andseq	r2, lr, r0, lsl r4
    28c0:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    28cc:	00000001 	andeq	r0, r0, r1
	...
    28d8:	10001c7e 	andne	r1, r0, lr, ror ip
    28dc:	10001d7a 	andne	r1, r0, sl, ror sp
    28e0:	9f300002 	svcls	0x00300002
    28e4:	10001d7a 	andne	r1, r0, sl, ror sp
    28e8:	10001d7c 	andne	r1, r0, ip, ror sp
    28ec:	7c500001 	mrrcvc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    28f0:	8e10001d 	mrchi	0, 0, r0, cr0, cr13, {0}
    28f4:	0110001d 	tsteq	r0, sp, lsl r0
    28f8:	1d8e5500 	cfstr32ne	mvfx5, [lr]
    28fc:	1d9e1000 	ldcne	0, cr1, [lr]
    2900:	00021000 	andeq	r1, r2, r0
    2904:	1d9e9f30 	ldcne	15, cr9, [lr, #192]	; 0xc0
    2908:	1da01000 	stcne	0, cr1, [r0]
    290c:	00011000 	andeq	r1, r1, r0
    2910:	001da050 	andseq	sl, sp, r0, asr r0
    2914:	001e2410 	andseq	r2, lr, r0, lsl r4
    2918:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    2924:	01010101 	tsteq	r1, r1, lsl #2
    2928:	00000001 	andeq	r0, r0, r1
    292c:	1c7e0000 	ldclne	0, cr0, [lr], #-0
    2930:	1d601000 	stclne	0, cr1, [r0, #-0]
    2934:	00021000 	andeq	r1, r2, r0
    2938:	1d609f30 	stclne	15, cr9, [r0, #-192]!	; 0xffffff40
    293c:	1d8a1000 	stcne	0, cr1, [sl]
    2940:	00021000 	andeq	r1, r2, r0
    2944:	1d8a9f40 	stcne	15, cr9, [sl, #256]	; 0x100
    2948:	1d8e1000 	stcne	0, cr1, [lr]
    294c:	00021000 	andeq	r1, r2, r0
    2950:	1d8e9f30 	stcne	15, cr9, [lr, #192]	; 0xc0
    2954:	1da01000 	stcne	0, cr1, [r0]
    2958:	00021000 	andeq	r1, r2, r0
    295c:	1da09f40 	stcne	15, cr9, [r0, #256]!	; 0x100
    2960:	1e241000 	cdpne	0, 2, cr1, cr4, cr0, {0}
    2964:	00011000 	andeq	r1, r1, r0
    2968:	00000054 	andeq	r0, r0, r4, asr r0
    296c:	00000000 	andeq	r0, r0, r0
    2970:	05050200 	streq	r0, [r5, #-512]	; 0xfffffe00
    2974:	01010101 	tsteq	r1, r1, lsl #2
    2978:	01010101 	tsteq	r1, r1, lsl #2
    297c:	01010101 	tsteq	r1, r1, lsl #2
    2980:	01010101 	tsteq	r1, r1, lsl #2
    2984:	01010101 	tsteq	r1, r1, lsl #2
    2988:	01010101 	tsteq	r1, r1, lsl #2
    298c:	01010101 	tsteq	r1, r1, lsl #2
    2990:	00000101 	andeq	r0, r0, r1, lsl #2
    2994:	00000000 	andeq	r0, r0, r0
    2998:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    299c:	7e10001c 	mrcvc	0, 0, r0, cr0, cr12, {0}
    29a0:	0110001c 	tsteq	r0, ip, lsl r0
    29a4:	1c7e5000 	ldclne	0, cr5, [lr], #-0
    29a8:	1c841000 	stcne	0, cr1, [r4], {0}
    29ac:	00031000 	andeq	r1, r3, r0
    29b0:	849f0470 	ldrhi	r0, [pc], #1136	; 29b8 <__HEAP_SIZE+0x19b8>
    29b4:	8810001c 	ldmdahi	r0, {r2, r3, r4}
    29b8:	0310001c 	tsteq	r0, #28
    29bc:	9f087000 	svcls	0x00087000
    29c0:	10001c88 	andne	r1, r0, r8, lsl #25
    29c4:	10001c8c 	andne	r1, r0, ip, lsl #25
    29c8:	0c700003 	ldcleq	0, cr0, [r0], #-12
    29cc:	001c8c9f 	mulseq	ip, pc, ip	; <UNPREDICTABLE>
    29d0:	001c9010 	andseq	r9, ip, r0, lsl r0
    29d4:	70000310 	andvc	r0, r0, r0, lsl r3
    29d8:	1c909f10 	ldcne	15, cr9, [r0], {16}
    29dc:	1c941000 	ldcne	0, cr1, [r4], {0}
    29e0:	00031000 	andeq	r1, r3, r0
    29e4:	949f1470 	ldrls	r1, [pc], #1136	; 29ec <__HEAP_SIZE+0x19ec>
    29e8:	9810001c 	ldmdals	r0, {r2, r3, r4}
    29ec:	0310001c 	tsteq	r0, #28
    29f0:	9f187000 	svcls	0x00187000
    29f4:	10001c98 	mulne	r0, r8, ip
    29f8:	10001c9c 	mulne	r0, ip, ip
    29fc:	1c700003 	ldclne	0, cr0, [r0], #-12
    2a00:	001c9c9f 	mulseq	ip, pc, ip	; <UNPREDICTABLE>
    2a04:	001ca010 	andseq	sl, ip, r0, lsl r0
    2a08:	70000310 	andvc	r0, r0, r0, lsl r3
    2a0c:	1ca09f20 	stcne	15, cr9, [r0], #128	; 0x80
    2a10:	1ca41000 	stcne	0, cr1, [r4]
    2a14:	00031000 	andeq	r1, r3, r0
    2a18:	a49f2470 	ldrge	r2, [pc], #1136	; 2a20 <__HEAP_SIZE+0x1a20>
    2a1c:	a810001c 	ldmdage	r0, {r2, r3, r4}
    2a20:	0310001c 	tsteq	r0, #28
    2a24:	9f287000 	svcls	0x00287000
    2a28:	10001ca8 	andne	r1, r0, r8, lsr #25
    2a2c:	10001cac 	andne	r1, r0, ip, lsr #25
    2a30:	2c700003 	ldclcs	0, cr0, [r0], #-12
    2a34:	001cac9f 	mulseq	ip, pc, ip	; <UNPREDICTABLE>
    2a38:	001cb010 	andseq	fp, ip, r0, lsl r0
    2a3c:	70000310 	andvc	r0, r0, r0, lsl r3
    2a40:	1cb09f30 	ldcne	15, cr9, [r0], #192	; 0xc0
    2a44:	1cb41000 	ldcne	0, cr1, [r4]
    2a48:	00031000 	andeq	r1, r3, r0
    2a4c:	b49f3470 	ldrlt	r3, [pc], #1136	; 2a54 <__HEAP_SIZE+0x1a54>
    2a50:	b810001c 	ldmdalt	r0, {r2, r3, r4}
    2a54:	0310001c 	tsteq	r0, #28
    2a58:	9f387000 	svcls	0x00387000
    2a5c:	10001cb8 			; <UNDEFINED> instruction: 0x10001cb8
    2a60:	10001cbc 			; <UNDEFINED> instruction: 0x10001cbc
    2a64:	3c700003 	ldclcc	0, cr0, [r0], #-12
    2a68:	001cbc9f 	mulseq	ip, pc, ip	; <UNPREDICTABLE>
    2a6c:	001cc410 	andseq	ip, ip, r0, lsl r4
    2a70:	70000410 	andvc	r0, r0, r0, lsl r4
    2a74:	c49f00c0 	ldrgt	r0, [pc], #192	; 2a7c <__HEAP_SIZE+0x1a7c>
    2a78:	7a10001c 	bvc	402af0 <__RAM_SIZE+0x302af0>
    2a7c:	0410001d 	ldreq	r0, [r0], #-29	; 0xffffffe3
    2a80:	00c07500 	sbceq	r7, r0, r0, lsl #10
    2a84:	001d7a9f 	mulseq	sp, pc, sl	; <UNPREDICTABLE>
    2a88:	001d8e10 	andseq	r8, sp, r0, lsl lr
    2a8c:	f3000610 	vmin.u8	d0, d0, d0
    2a90:	40235001 	eormi	r5, r3, r1
    2a94:	001d8e9f 	mulseq	sp, pc, lr	; <UNPREDICTABLE>
    2a98:	001d9e10 	andseq	r9, sp, r0, lsl lr
    2a9c:	75000410 	strvc	r0, [r0, #-1040]	; 0xfffffbf0
    2aa0:	9e9f00c0 	cdpls	0, 9, cr0, cr15, cr0, {6}
    2aa4:	2410001d 	ldrcs	r0, [r0], #-29	; 0xffffffe3
    2aa8:	0610001e 			; <UNDEFINED> instruction: 0x0610001e
    2aac:	5001f300 	andpl	pc, r1, r0, lsl #6
    2ab0:	009f4023 	addseq	r4, pc, r3, lsr #32
    2ab4:	00000000 	andeq	r0, r0, r0
    2ab8:	20000000 	andcs	r0, r0, r0
    2abc:	2210001c 	andscs	r0, r0, #28
    2ac0:	0210001c 	andseq	r0, r0, #28
    2ac4:	22007d00 	andcs	r7, r0, #0, 26
    2ac8:	2810001c 	ldmdacs	r0, {r2, r3, r4}
    2acc:	0210001c 	andseq	r0, r0, #28
    2ad0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2adc:	20000000 	andcs	r0, r0, r0
    2ae0:	2510001c 	ldrcs	r0, [r0, #-28]	; 0xffffffe4
    2ae4:	0110001c 	tsteq	r0, ip, lsl r0
    2ae8:	1c255000 	stcne	0, cr5, [r5], #-0
    2aec:	1c281000 	stcne	0, cr1, [r8], #-0
    2af0:	00041000 	andeq	r1, r4, r0
    2af4:	9f5001f3 	svcls	0x005001f3
	...
    2b00:	00000001 	andeq	r0, r0, r1
    2b04:	10001c22 	andne	r1, r0, r2, lsr #24
    2b08:	10001c26 	andne	r1, r0, r6, lsr #24
    2b0c:	9f310002 	svcls	0x00310002
    2b10:	10001c26 	andne	r1, r0, r6, lsr #24
    2b14:	10001c28 	andne	r1, r0, r8, lsr #24
    2b18:	00500001 	subseq	r0, r0, r1
    2b1c:	00000000 	andeq	r0, r0, r0
    2b20:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2b24:	0a10001c 	beq	402b9c <__RAM_SIZE+0x302b9c>
    2b28:	0210001c 	andseq	r0, r0, #28
    2b2c:	0a007d00 	beq	21f34 <__HEAP_SIZE+0x20f34>
    2b30:	2010001c 	andscs	r0, r0, ip, lsl r0
    2b34:	0210001c 	andseq	r0, r0, #28
    2b38:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2b48:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    2b4c:	1010001c 	andsne	r0, r0, ip, lsl r0
    2b50:	0110001c 	tsteq	r0, ip, lsl r0
    2b54:	1c105000 	ldcne	0, cr5, [r0], {-0}
    2b58:	1c131000 	ldcne	0, cr1, [r3], {-0}
    2b5c:	00011000 	andeq	r1, r1, r0
    2b60:	001c1351 	andseq	r1, ip, r1, asr r3
    2b64:	001c1c10 	andseq	r1, ip, r0, lsl ip
    2b68:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    2b6c:	10001c1c 	andne	r1, r0, ip, lsl ip
    2b70:	10001c20 	andne	r1, r0, r0, lsr #24
    2b74:	01f30004 	mvnseq	r0, r4
    2b78:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    2b84:	1b540000 	blne	1502b8c <__RAM_SIZE+0x1402b8c>
    2b88:	1b5a1000 	blne	1686b90 <__RAM_SIZE+0x1586b90>
    2b8c:	00011000 	andeq	r1, r1, r0
    2b90:	001b5a50 	andseq	r5, fp, r0, asr sl
    2b94:	001b8a10 	andseq	r8, fp, r0, lsl sl
    2b98:	f3000410 	vqshl.u8	d0, d0, d0
    2b9c:	009f5001 	addseq	r5, pc, r1
	...
    2ba8:	001b5800 	andseq	r5, fp, r0, lsl #16
    2bac:	001b8a10 	andseq	r8, fp, r0, lsl sl
    2bb0:	53000110 	movwpl	r0, #272	; 0x110
	...
    2bd0:	10001b5e 	andne	r1, r0, lr, asr fp
    2bd4:	10001b78 	andne	r1, r0, r8, ror fp
    2bd8:	78500001 	ldmdavc	r0, {r0}^
    2bdc:	7a10001b 	bvc	402c50 <__RAM_SIZE+0x302c50>
    2be0:	0a10001b 	beq	402c54 <__RAM_SIZE+0x302c54>
    2be4:	5001f300 	andpl	pc, r1, r0, lsl #6
    2be8:	000a2540 	andeq	r2, sl, r0, asr #10
    2bec:	7a9f1af8 	bvc	fe7c97d4 <__StackTop+0xc66c97d4>
    2bf0:	7c10001b 	ldcvc	0, cr0, [r0], {27}
    2bf4:	0110001b 	tsteq	r0, fp, lsl r0
    2bf8:	1b7c5000 	blne	1f16c00 <__RAM_SIZE+0x1e16c00>
    2bfc:	1b7e1000 	blne	1f86c04 <__RAM_SIZE+0x1e86c04>
    2c00:	000a1000 	andeq	r1, sl, r0
    2c04:	405001f3 	ldrshmi	r0, [r0], #-19	; 0xffffffed
    2c08:	f8000a25 			; <UNDEFINED> instruction: 0xf8000a25
    2c0c:	1b7e9f1a 	blne	1faa87c <__RAM_SIZE+0x1eaa87c>
    2c10:	1b801000 	blne	fe006c18 <__StackTop+0xc5f06c18>
    2c14:	00011000 	andeq	r1, r1, r0
    2c18:	001b8050 	andseq	r8, fp, r0, asr r0
    2c1c:	001b8210 	andseq	r8, fp, r0, lsl r2
    2c20:	f3000a10 	vpmin.u8	d0, d0, d0
    2c24:	25405001 	strbcs	r5, [r0, #-1]
    2c28:	1af8000a 	bne	ffe02c58 <__StackTop+0xc7d02c58>
    2c2c:	001b829f 	mulseq	fp, pc, r2	; <UNPREDICTABLE>
    2c30:	001b8410 	andseq	r8, fp, r0, lsl r4
    2c34:	50000110 	andpl	r0, r0, r0, lsl r1
    2c38:	10001b84 	andne	r1, r0, r4, lsl #23
    2c3c:	10001b86 	andne	r1, r0, r6, lsl #23
    2c40:	01f3000a 	mvnseq	r0, sl
    2c44:	0a254050 	beq	952d8c <__RAM_SIZE+0x852d8c>
    2c48:	9f1af800 	svcls	0x001af800
    2c4c:	10001b86 	andne	r1, r0, r6, lsl #23
    2c50:	10001b88 	andne	r1, r0, r8, lsl #23
    2c54:	88500001 	ldmdahi	r0, {r0}^
    2c58:	8a10001b 	bhi	402ccc <__RAM_SIZE+0x302ccc>
    2c5c:	0a10001b 	beq	402cd0 <__RAM_SIZE+0x302cd0>
    2c60:	5001f300 	andpl	pc, r1, r0, lsl #6
    2c64:	000a2540 	andeq	r2, sl, r0, asr #10
    2c68:	009f1af8 			; <UNDEFINED> instruction: 0x009f1af8
    2c6c:	00000000 	andeq	r0, r0, r0
    2c70:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    2c74:	2a10001b 	bcs	402ce8 <__RAM_SIZE+0x302ce8>
    2c78:	0210001b 	andseq	r0, r0, #27
    2c7c:	2a007d00 	bcs	22084 <__HEAP_SIZE+0x21084>
    2c80:	5210001b 	andspl	r0, r0, #27
    2c84:	0210001b 	andseq	r0, r0, #27
    2c88:	52087d00 	andpl	r7, r8, #0, 26
    2c8c:	5410001b 	ldrpl	r0, [r0], #-27	; 0xffffffe5
    2c90:	0210001b 	andseq	r0, r0, #27
    2c94:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    2ca0:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    2ca4:	4810001b 	ldmdami	r0, {r0, r1, r3, r4}
    2ca8:	0110001b 	tsteq	r0, fp, lsl r0
    2cac:	1b485000 	blne	1216cb4 <__RAM_SIZE+0x1116cb4>
    2cb0:	1b541000 	blne	1506cb8 <__RAM_SIZE+0x1406cb8>
    2cb4:	00041000 	andeq	r1, r4, r0
    2cb8:	9f5001f3 	svcls	0x005001f3
	...
    2cc4:	00000001 	andeq	r0, r0, r1
    2cc8:	1b2e0000 	blne	b82cd0 <__RAM_SIZE+0xa82cd0>
    2ccc:	1b4c1000 	blne	1306cd4 <__RAM_SIZE+0x1206cd4>
    2cd0:	00021000 	andeq	r1, r2, r0
    2cd4:	1b4c9f30 	blne	132a99c <__RAM_SIZE+0x122a99c>
    2cd8:	1b501000 	blne	1406ce0 <__RAM_SIZE+0x1306ce0>
    2cdc:	00081000 	andeq	r1, r8, r0
    2ce0:	24400070 	strbcs	r0, [r0], #-112	; 0xffffff90
    2ce4:	9f210073 	svcls	0x00210073
    2ce8:	10001b50 	andne	r1, r0, r0, asr fp
    2cec:	10001b54 	andne	r1, r0, r4, asr fp
    2cf0:	00500001 	subseq	r0, r0, r1
    2cf4:	00000000 	andeq	r0, r0, r0
    2cf8:	03000000 	movweq	r0, #0
    2cfc:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    2d00:	3010001b 	andscc	r0, r0, fp, lsl r0
    2d04:	0210001b 	andseq	r0, r0, #27
    2d08:	309f3000 	addscc	r3, pc, r0
    2d0c:	4c10001b 	ldcmi	0, cr0, [r0], {27}
    2d10:	0110001b 	tsteq	r0, fp, lsl r0
    2d14:	00005300 	andeq	r5, r0, r0, lsl #6
    2d18:	00000000 	andeq	r0, r0, r0
    2d1c:	1c280000 	stcne	0, cr0, [r8], #-0
    2d20:	1c2a1000 	stcne	0, cr1, [sl], #-0
    2d24:	00021000 	andeq	r1, r2, r0
    2d28:	1c2a007d 	stcne	0, cr0, [sl], #-500	; 0xfffffe0c
    2d2c:	1c781000 	ldclne	0, cr1, [r8], #-0
    2d30:	00021000 	andeq	r1, r2, r0
    2d34:	0000087d 	andeq	r0, r0, sp, ror r8
    2d38:	00000000 	andeq	r0, r0, r0
    2d3c:	1f400000 	svcne	0x00400000
    2d40:	1f421000 	svcne	0x00421000
    2d44:	00021000 	andeq	r1, r2, r0
    2d48:	1f42007d 	svcne	0x0042007d
    2d4c:	1f441000 	svcne	0x00441000
    2d50:	00021000 	andeq	r1, r2, r0
    2d54:	1f440c7d 	svcne	0x00440c7d
    2d58:	1f821000 	svcne	0x00821000
    2d5c:	00021000 	andeq	r1, r2, r0
    2d60:	1f82187d 	svcne	0x0082187d
    2d64:	1f8c1000 	svcne	0x008c1000
    2d68:	00021000 	andeq	r1, r2, r0
    2d6c:	00000c7d 	andeq	r0, r0, sp, ror ip
    2d70:	00000000 	andeq	r0, r0, r0
    2d74:	01010000 	mrseq	r0, (UNDEF: 1)
    2d78:	00010101 	andeq	r0, r1, r1, lsl #2
    2d7c:	10001f44 	andne	r1, r0, r4, asr #30
    2d80:	10001f62 	andne	r1, r0, r2, ror #30
    2d84:	9f300002 	svcls	0x00300002
    2d88:	10001f62 	andne	r1, r0, r2, ror #30
    2d8c:	10001f70 	andne	r1, r0, r0, ror pc
    2d90:	9f340002 	svcls	0x00340002
    2d94:	10001f70 	andne	r1, r0, r0, ror pc
    2d98:	10001f8c 	andne	r1, r0, ip, lsl #31
    2d9c:	9f330002 	svcls	0x00330002
	...
    2db0:	007d0002 	rsbseq	r0, sp, r2
	...
    2dbc:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2dd0:	10001f30 	andne	r1, r0, r0, lsr pc
    2dd4:	10001f38 	andne	r1, r0, r8, lsr pc
    2dd8:	38500001 	ldmdacc	r0, {r0}^
    2ddc:	3a10001f 	bcc	402e60 <__RAM_SIZE+0x302e60>
    2de0:	0410001f 	ldreq	r0, [r0], #-31	; 0xffffffe1
    2de4:	5001f300 	andpl	pc, r1, r0, lsl #6
    2de8:	001f3a9f 	mulseq	pc, pc, sl	; <UNPREDICTABLE>
    2dec:	001f3c10 	andseq	r3, pc, r0, lsl ip	; <UNPREDICTABLE>
    2df0:	50000110 	andpl	r0, r0, r0, lsl r1
    2df4:	10001f3c 	andne	r1, r0, ip, lsr pc
    2df8:	10001f3e 	andne	r1, r0, lr, lsr pc
    2dfc:	01f30004 	mvnseq	r0, r4
    2e00:	00009f50 	andeq	r9, r0, r0, asr pc
    2e04:	00000000 	andeq	r0, r0, r0
    2e08:	1e340000 	cdpne	0, 3, cr0, cr4, cr0, {0}
    2e0c:	1e361000 	cdpne	0, 3, cr1, cr6, cr0, {0}
    2e10:	00021000 	andeq	r1, r2, r0
    2e14:	1e36007d 	mrcne	0, 1, r0, cr6, cr13, {3}
    2e18:	1f301000 	svcne	0x00301000
    2e1c:	00021000 	andeq	r1, r2, r0
    2e20:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    2e2c:	1e340000 	cdpne	0, 3, cr0, cr4, cr0, {0}
    2e30:	1e3a1000 	cdpne	0, 3, cr1, cr10, cr0, {0}
    2e34:	00011000 	andeq	r1, r1, r0
    2e38:	001e3a50 	andseq	r3, lr, r0, asr sl
    2e3c:	001f3010 	andseq	r3, pc, r0, lsl r0	; <UNPREDICTABLE>
    2e40:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
void Default_Handler(void) {
   0:	00000064 	andeq	r0, r0, r4, rrx
    printf("%s\n", __func__);
   4:	00000002 	andeq	r0, r0, r2
}
   8:	00040000 	andeq	r0, r4, r0
	...
  14:	00000010 	andeq	r0, r0, r0, lsl r0
  18:	00000000 	andeq	r0, r0, r0
}
  1c:	00000010 	andeq	r0, r0, r0, lsl r0
  20:	10000800 	andne	r0, r0, r0, lsl #16
  24:	00000068 	andeq	r0, r0, r8, rrx
  28:	10000868 	andne	r0, r0, r8, ror #16
  2c:	0000001c 	andeq	r0, r0, ip, lsl r0
  30:	10000884 	andne	r0, r0, r4, lsl #17
  34:	00000018 	andeq	r0, r0, r8, lsl r0
  38:	1000089c 	mulne	r0, ip, r8
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
  40:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
  44:	00000018 	andeq	r0, r0, r8, lsl r0
  48:	100008cc 	andne	r0, r0, ip, asr #17
  4c:	00000018 	andeq	r0, r0, r8, lsl r0
  50:	100008e4 	andne	r0, r0, r4, ror #17
  54:	00000018 	andeq	r0, r0, r8, lsl r0
  58:	100008fc 	strdne	r0, [r0], -ip
  5c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
  68:	00000024 	andeq	r0, r0, r4, lsr #32
  6c:	058d0002 	streq	r0, [sp, #2]
  70:	00040000 	andeq	r0, r4, r0
	...
  7c:	00000010 	andeq	r0, r0, r0, lsl r0
  80:	10000928 	andne	r0, r0, r8, lsr #18
  84:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
  90:	000000a4 	andeq	r0, r0, r4, lsr #1
  94:	0a760002 	beq	1d800a4 <__RAM_SIZE+0x1c800a4>
  98:	00040000 	andeq	r0, r4, r0
	...
  a4:	00000008 	andeq	r0, r0, r8
  a8:	10000954 	andne	r0, r0, r4, asr r9
  ac:	00000002 	andeq	r0, r0, r2
  b0:	00000000 	andeq	r0, r0, r0
  b4:	0000000e 	andeq	r0, r0, lr
  b8:	10000956 	andne	r0, r0, r6, asr r9
  bc:	00000024 	andeq	r0, r0, r4, lsr #32
  c0:	1000097a 	andne	r0, r0, sl, ror r9
  c4:	0000007e 	andeq	r0, r0, lr, ror r0
  c8:	100009f8 	strdne	r0, [r0], -r8
  cc:	00000138 	andeq	r0, r0, r8, lsr r1
  d0:	10000b30 	andne	r0, r0, r0, lsr fp
  d4:	00000094 	muleq	r0, r4, r0
  d8:	10000bc4 	andne	r0, r0, r4, asr #23
  dc:	000000c6 	andeq	r0, r0, r6, asr #1
  e0:	10000c90 	mulne	r0, r0, ip
  e4:	000003ea 	andeq	r0, r0, sl, ror #7
  e8:	10001080 	andne	r1, r0, r0, lsl #1
  ec:	00000396 	muleq	r0, r6, r3
  f0:	10001418 	andne	r1, r0, r8, lsl r4
  f4:	00000680 	andeq	r0, r0, r0, lsl #13
  f8:	10001a98 	mulne	r0, r8, sl
  fc:	0000000c 	andeq	r0, r0, ip
 100:	10001aa4 	andne	r1, r0, r4, lsr #21
 104:	0000002c 	andeq	r0, r0, ip, lsr #32
 108:	00000000 	andeq	r0, r0, r0
 10c:	0000002c 	andeq	r0, r0, ip, lsr #32
 110:	00000000 	andeq	r0, r0, r0
 114:	00000028 	andeq	r0, r0, r8, lsr #32
 118:	00000000 	andeq	r0, r0, r0
 11c:	00000020 	andeq	r0, r0, r0, lsr #32
 120:	00000000 	andeq	r0, r0, r0
 124:	0000001c 	andeq	r0, r0, ip, lsl r0
 128:	00000000 	andeq	r0, r0, r0
 12c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 138:	00000044 	andeq	r0, r0, r4, asr #32
 13c:	263b0002 	ldrtcs	r0, [fp], -r2
 140:	00040000 	andeq	r0, r4, r0
 144:	00000000 	andeq	r0, r0, r0
 148:	10001ad0 	ldrdne	r1, [r0], -r0
 14c:	00000014 	andeq	r0, r0, r4, lsl r0
 150:	00000000 	andeq	r0, r0, r0
 154:	00000014 	andeq	r0, r0, r4, lsl r0
 158:	10001ae4 	andne	r1, r0, r4, ror #21
 15c:	0000001e 	andeq	r0, r0, lr, lsl r0
 160:	10001b04 	andne	r1, r0, r4, lsl #22
 164:	00000024 	andeq	r0, r0, r4, lsr #32
 168:	00000000 	andeq	r0, r0, r0
 16c:	00000008 	andeq	r0, r0, r8
 170:	00000000 	andeq	r0, r0, r0
 174:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 180:	00000074 	andeq	r0, r0, r4, ror r0
 184:	288e0002 	stmcs	lr, {r1}
 188:	00040000 	andeq	r0, r4, r0
 18c:	00000000 	andeq	r0, r0, r0
 190:	10001b28 	andne	r1, r0, r8, lsr #22
 194:	0000002c 	andeq	r0, r0, ip, lsr #32
 198:	10001b54 	andne	r1, r0, r4, asr fp
 19c:	00000036 	andeq	r0, r0, r6, lsr r0
 1a0:	10001b8c 	andne	r1, r0, ip, lsl #23
 1a4:	0000007c 	andeq	r0, r0, ip, ror r0
 1a8:	10001c08 	andne	r1, r0, r8, lsl #24
 1ac:	00000018 	andeq	r0, r0, r8, lsl r0
 1b0:	10001c20 	andne	r1, r0, r0, lsr #24
 1b4:	00000008 	andeq	r0, r0, r8
 1b8:	10001c28 	andne	r1, r0, r8, lsr #24
 1bc:	00000050 	andeq	r0, r0, r0, asr r0
 1c0:	10001c78 	andne	r1, r0, r8, ror ip
 1c4:	000001ac 	andeq	r0, r0, ip, lsr #3
 1c8:	10001e24 	andne	r1, r0, r4, lsr #28
 1cc:	00000006 	andeq	r0, r0, r6
 1d0:	10001e2c 	andne	r1, r0, ip, lsr #28
 1d4:	00000008 	andeq	r0, r0, r8
 1d8:	00000000 	andeq	r0, r0, r0
 1dc:	00000008 	andeq	r0, r0, r8
 1e0:	00000000 	andeq	r0, r0, r0
 1e4:	00000008 	andeq	r0, r0, r8
 1e8:	00000000 	andeq	r0, r0, r0
 1ec:	00000014 	andeq	r0, r0, r4, lsl r0
	...
 1f8:	00000034 	andeq	r0, r0, r4, lsr r0
 1fc:	32cd0002 	sbccc	r0, sp, #2
 200:	00040000 	andeq	r0, r4, r0
 204:	00000000 	andeq	r0, r0, r0
 208:	10001e34 	andne	r1, r0, r4, lsr lr
 20c:	000000fc 	strdeq	r0, [r0], -ip
 210:	10001f30 	andne	r1, r0, r0, lsr pc
 214:	0000000e 	andeq	r0, r0, lr
 218:	00000000 	andeq	r0, r0, r0
 21c:	00000020 	andeq	r0, r0, r0, lsr #32
 220:	10001f40 	andne	r1, r0, r0, asr #30
 224:	0000004c 	andeq	r0, r0, ip, asr #32
	...
 230:	0000001c 	andeq	r0, r0, ip, lsl r0
 234:	3a730002 	bcc	1cc0244 <__RAM_SIZE+0x1bc0244>
 238:	00040000 	andeq	r0, r4, r0
 23c:	00000000 	andeq	r0, r0, r0
 240:	10001fac 	andne	r1, r0, ip, lsr #31
 244:	00000070 	andeq	r0, r0, r0, ror r0
	...
 250:	0000001c 	andeq	r0, r0, ip, lsl r0
 254:	3a990002 	bcc	fe640264 <__StackTop+0xc6540264>
 258:	00040000 	andeq	r0, r4, r0
 25c:	00000000 	andeq	r0, r0, r0
 260:	1000201c 	andne	r2, r0, ip, lsl r0
 264:	00000048 	andeq	r0, r0, r8, asr #32
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
void Default_Handler(void) {
   0:	10000830 	andne	r0, r0, r0, lsr r8
    printf("%s\n", __func__);
   4:	10000834 	andne	r0, r0, r4, lsr r8
}
   8:	1000083e 	andne	r0, r0, lr, lsr r8
   c:	1000084e 	andne	r0, r0, lr, asr #16
	...
        if(ch == '\n' || it >= size) {
  18:	00000001 	andeq	r0, r0, r1
}
  1c:	00000001 	andeq	r0, r0, r1
  20:	00000001 	andeq	r0, r0, r1
  24:	00000001 	andeq	r0, r0, r1
  28:	10000800 	andne	r0, r0, r0, lsl #16
  2c:	10000868 	andne	r0, r0, r8, ror #16
  30:	10000868 	andne	r0, r0, r8, ror #16
  34:	10000884 	andne	r0, r0, r4, lsl #17
  38:	10000884 	andne	r0, r0, r4, lsl #17
  3c:	1000089c 	mulne	r0, ip, r8
  40:	1000089c 	mulne	r0, ip, r8
  44:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
  48:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
  4c:	100008cc 	andne	r0, r0, ip, asr #17
  50:	100008cc 	andne	r0, r0, ip, asr #17
  54:	100008e4 	andne	r0, r0, r4, ror #17
  58:	100008e4 	andne	r0, r0, r4, ror #17
  5c:	100008fc 	strdne	r0, [r0], -ip
  60:	100008fc 	strdne	r0, [r0], -ip
  64:	10000928 	andne	r0, r0, r8, lsr #18
	...
  70:	00000001 	andeq	r0, r0, r1
  74:	00000001 	andeq	r0, r0, r1
  78:	10000928 	andne	r0, r0, r8, lsr #18
  7c:	10000954 	andne	r0, r0, r4, asr r9
	...
  88:	1000099a 	mulne	r0, sl, r9
  8c:	1000099c 	mulne	r0, ip, r9
  90:	1000099e 	mulne	r0, lr, r9
  94:	100009bc 			; <UNDEFINED> instruction: 0x100009bc
	...
  a0:	10000b4e 	andne	r0, r0, lr, asr #22
  a4:	10000b68 	andne	r0, r0, r8, ror #22
  a8:	10000b70 	andne	r0, r0, r0, ror fp
  ac:	10000b74 	andne	r0, r0, r4, ror fp
  b0:	10000b74 	andne	r0, r0, r4, ror fp
  b4:	10000ba2 	andne	r0, r0, r2, lsr #23
	...
  c0:	10000bfa 	strdne	r0, [r0], -sl
  c4:	10000c1c 	andne	r0, r0, ip, lsl ip
  c8:	10000c2a 	andne	r0, r0, sl, lsr #24
  cc:	10000c30 	andne	r0, r0, r0, lsr ip
  d0:	10000c30 	andne	r0, r0, r0, lsr ip
  d4:	10000c58 	andne	r0, r0, r8, asr ip
	...
  e0:	1000142c 	andne	r1, r0, ip, lsr #8
  e4:	1000142e 	andne	r1, r0, lr, lsr #8
  e8:	100018d8 	ldrdne	r1, [r0], -r8
  ec:	1000194a 	andne	r1, r0, sl, asr #18
	...
  f8:	100016aa 	andne	r1, r0, sl, lsr #13
  fc:	100016dc 	ldrdne	r1, [r0], -ip
 100:	10001830 	andne	r1, r0, r0, lsr r8
 104:	1000184a 	andne	r1, r0, sl, asr #16
	...
 110:	100016fa 	strdne	r1, [r0], -sl
 114:	10001730 	andne	r1, r0, r0, lsr r7
 118:	100017b2 			; <UNDEFINED> instruction: 0x100017b2
 11c:	100017ce 	andne	r1, r0, lr, asr #15
	...
 128:	10001738 	andne	r1, r0, r8, lsr r7
 12c:	10001776 	andne	r1, r0, r6, ror r7
 130:	10001778 	andne	r1, r0, r8, ror r7
 134:	10001780 	andne	r1, r0, r0, lsl #15
	...
 140:	00000001 	andeq	r0, r0, r1
 144:	00000001 	andeq	r0, r0, r1
 148:	10000954 	andne	r0, r0, r4, asr r9
 14c:	10000956 	andne	r0, r0, r6, asr r9
 150:	00000001 	andeq	r0, r0, r1
 154:	00000001 	andeq	r0, r0, r1
 158:	10000956 	andne	r0, r0, r6, asr r9
 15c:	1000097a 	andne	r0, r0, sl, ror r9
 160:	1000097a 	andne	r0, r0, sl, ror r9
 164:	100009f8 	strdne	r0, [r0], -r8
 168:	100009f8 	strdne	r0, [r0], -r8
 16c:	10000b30 	andne	r0, r0, r0, lsr fp
 170:	10000b30 	andne	r0, r0, r0, lsr fp
 174:	10000bc4 	andne	r0, r0, r4, asr #23
 178:	10000bc4 	andne	r0, r0, r4, asr #23
 17c:	10000c8a 	andne	r0, r0, sl, lsl #25
 180:	10000c90 	mulne	r0, r0, ip
 184:	1000107a 	andne	r1, r0, sl, ror r0
 188:	10001080 	andne	r1, r0, r0, lsl #1
 18c:	10001416 	andne	r1, r0, r6, lsl r4
 190:	10001418 	andne	r1, r0, r8, lsl r4
 194:	10001a98 	mulne	r0, r8, sl
 198:	10001a98 	mulne	r0, r8, sl
 19c:	10001aa4 	andne	r1, r0, r4, lsr #21
 1a0:	10001aa4 	andne	r1, r0, r4, lsr #21
 1a4:	10001ad0 	ldrdne	r1, [r0], -r0
 1a8:	00000001 	andeq	r0, r0, r1
 1ac:	00000001 	andeq	r0, r0, r1
 1b0:	00000001 	andeq	r0, r0, r1
 1b4:	00000001 	andeq	r0, r0, r1
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
 1c0:	00000001 	andeq	r0, r0, r1
 1c4:	00000001 	andeq	r0, r0, r1
 1c8:	00000001 	andeq	r0, r0, r1
 1cc:	00000001 	andeq	r0, r0, r1
	...
 1d8:	10001ad0 	ldrdne	r1, [r0], -r0
 1dc:	10001ae4 	andne	r1, r0, r4, ror #21
 1e0:	00000001 	andeq	r0, r0, r1
 1e4:	00000001 	andeq	r0, r0, r1
 1e8:	10001ae4 	andne	r1, r0, r4, ror #21
 1ec:	10001b02 	andne	r1, r0, r2, lsl #22
 1f0:	10001b04 	andne	r1, r0, r4, lsl #22
 1f4:	10001b28 	andne	r1, r0, r8, lsr #22
 1f8:	00000001 	andeq	r0, r0, r1
 1fc:	00000001 	andeq	r0, r0, r1
 200:	00000001 	andeq	r0, r0, r1
 204:	00000001 	andeq	r0, r0, r1
	...
 210:	10001b28 	andne	r1, r0, r8, lsr #22
 214:	10001b54 	andne	r1, r0, r4, asr fp
 218:	10001b54 	andne	r1, r0, r4, asr fp
 21c:	10001b8a 	andne	r1, r0, sl, lsl #23
 220:	10001b8c 	andne	r1, r0, ip, lsl #23
 224:	10001c08 	andne	r1, r0, r8, lsl #24
 228:	10001c08 	andne	r1, r0, r8, lsl #24
 22c:	10001c20 	andne	r1, r0, r0, lsr #24
 230:	10001c20 	andne	r1, r0, r0, lsr #24
 234:	10001c28 	andne	r1, r0, r8, lsr #24
 238:	10001c28 	andne	r1, r0, r8, lsr #24
 23c:	10001c78 	andne	r1, r0, r8, ror ip
 240:	10001c78 	andne	r1, r0, r8, ror ip
 244:	10001e24 	andne	r1, r0, r4, lsr #28
 248:	10001e24 	andne	r1, r0, r4, lsr #28
 24c:	10001e2a 	andne	r1, r0, sl, lsr #28
 250:	10001e2c 	andne	r1, r0, ip, lsr #28
 254:	10001e34 	andne	r1, r0, r4, lsr lr
 258:	00000001 	andeq	r0, r0, r1
 25c:	00000001 	andeq	r0, r0, r1
 260:	00000001 	andeq	r0, r0, r1
 264:	00000001 	andeq	r0, r0, r1
 268:	00000001 	andeq	r0, r0, r1
 26c:	00000001 	andeq	r0, r0, r1
	...
 278:	10001e34 	andne	r1, r0, r4, lsr lr
 27c:	10001f30 	andne	r1, r0, r0, lsr pc
 280:	10001f30 	andne	r1, r0, r0, lsr pc
 284:	10001f3e 	andne	r1, r0, lr, lsr pc
 288:	00000001 	andeq	r0, r0, r1
 28c:	00000001 	andeq	r0, r0, r1
 290:	10001f40 	andne	r1, r0, r0, asr #30
 294:	10001f8c 	andne	r1, r0, ip, lsl #31
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
void Default_Handler(void) {
       0:	00000270 	andeq	r0, r0, r0, ror r2
    printf("%s\n", __func__);
       4:	00df0003 	sbcseq	r0, pc, r3
}
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
        if(ch == '\n' || it >= size) {
      14:	01000000 	mrseq	r0, (UNDEF: 0)
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
      28:	2f2e2e00 	svccs	0x002e2e00
      2c:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
      30:	636e492f 	cmnvs	lr, #770048	; 0xbc000
      34:	2f2e2e00 	svccs	0x002e2e00
      38:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
      3c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
      40:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
      44:	662f736c 	strtvs	r7, [pc], -ip, ror #6
      48:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
      4c:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
      50:	6e692f70 	mcrvs	15, 3, r2, cr9, cr0, {3}
      54:	3a630063 	bcc	18c01e8 <__RAM_SIZE+0x17c01e8>
      58:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
      5c:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
      60:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
      64:	6f72705c 	svcvs	0x0072705c
      68:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
      6c:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
      70:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
      74:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
      78:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
      7c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
      80:	61652d65 	cmnvs	r5, r5, ror #26
      84:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
      88:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
      8c:	31323032 	teqcc	r2, r2, lsr r0
      90:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
      94:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
      98:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
      9c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
      a0:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
      a4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
      a8:	6d000065 	stcvs	0, cr0, [r0, #-404]	; 0xfffffe6c
      ac:	2e6e6961 	vnmulcs.f16	s13, s28, s3	; <UNPREDICTABLE>
      b0:	00010063 	andeq	r0, r1, r3, rrx
      b4:	72617500 	rsbvc	r7, r1, #0, 10
      b8:	00682e74 	rsbeq	r2, r8, r4, ror lr
      bc:	66000002 	strvs	r0, [r0], -r2
      c0:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
      c4:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
      c8:	00682e70 	rsbeq	r2, r8, r0, ror lr
      cc:	73000003 	movwvc	r0, #3
      d0:	6f696474 	svcvs	0x00696474
      d4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
      d8:	623c0000 	eorsvs	r0, ip, #0
      dc:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
      e0:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
      e4:	00000000 	andeq	r0, r0, r0
      e8:	00260500 	eoreq	r0, r6, r0, lsl #10
      ec:	00000205 	andeq	r0, r0, r5, lsl #4
      f0:	05190000 	ldreq	r0, [r9, #-0]
      f4:	01052105 	tsteq	r5, r5, lsl #2
      f8:	04023d06 	streq	r3, [r2], #-3334	; 0xfffff2fa
      fc:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     100:	0205001c 	andeq	r0, r5, #28
     104:	00000000 	andeq	r0, r0, r0
     108:	05010b03 	streq	r0, [r1, #-2819]	; 0xfffff4fd
     10c:	01052105 	tsteq	r5, r5, lsl #2
     110:	04023d06 	streq	r3, [r2], #-3334	; 0xfffff2fa
     114:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     118:	0205001b 	andeq	r0, r5, #27
     11c:	10000800 	andne	r0, r0, r0, lsl #16
     120:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
     124:	12052f05 	andne	r2, r5, #5, 30
     128:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     12c:	1a056706 	bne	159d4c <__RAM_SIZE+0x59d4c>
     130:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     134:	1a053d06 	bne	14f554 <__RAM_SIZE+0x4f554>
     138:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     13c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     140:	3c010611 	stccc	6, cr0, [r1], {17}
     144:	2f060505 	svccs	0x00060505
     148:	01060805 	tsteq	r6, r5, lsl #16
     14c:	31060905 	tstcc	r6, r5, lsl #18
     150:	2f062006 	svccs	0x00062006
     154:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
     158:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     15c:	06202009 	strteq	r2, [r0], -r9
     160:	052e060f 	streq	r0, [lr, #-1551]!	; 0xfffff9f1
     164:	0402000d 	streq	r0, [r2], #-13
     168:	05400603 	strbeq	r0, [r0, #-1539]	; 0xfffff9fd
     16c:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
     170:	25055703 	strcs	r5, [r5, #-1795]	; 0xfffff8fd
     174:	03040200 	movweq	r0, #16896	; 0x4200
     178:	19050106 	stmdbne	r5, {r1, r2, r8}
     17c:	01040200 	mrseq	r0, R12_usr
     180:	09052006 	stmdbeq	r5, {r1, r2, sp}
     184:	01040200 	mrseq	r0, R12_usr
     188:	31060106 	tstcc	r6, r6, lsl #2
     18c:	3e060105 	adfccs	f0, f6, f5
     190:	0008022e 	andeq	r0, r8, lr, lsr #4
     194:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     198:	68020500 	stmdavs	r2, {r8, sl}
     19c:	03100008 	tsteq	r0, #8
     1a0:	0505011f 	streq	r0, [r5, #-287]	; 0xfffffee1
     1a4:	132f4b21 			; <UNDEFINED> instruction: 0x132f4b21
     1a8:	2f060105 	svccs	0x00060105
     1ac:	01000502 	tsteq	r0, r2, lsl #10
     1b0:	00120501 	andseq	r0, r2, r1, lsl #10
     1b4:	08840205 	stmeq	r4, {r0, r2, r9}
     1b8:	26031000 	strcs	r1, [r3], -r0
     1bc:	21050501 	tstcs	r5, r1, lsl #10
     1c0:	0601054b 	streq	r0, [r1], -fp, asr #10
     1c4:	0005022f 	andeq	r0, r5, pc, lsr #4
     1c8:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     1cc:	9c020500 	cfstr32ls	mvfx0, [r2], {-0}
     1d0:	03100008 	tsteq	r0, #8
     1d4:	0505012b 	streq	r0, [r5, #-299]	; 0xfffffed5
     1d8:	01054b21 	tsteq	r5, r1, lsr #22
     1dc:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     1e0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     1e4:	02050012 	andeq	r0, r5, #18
     1e8:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
     1ec:	05013003 	streq	r3, [r1, #-3]
     1f0:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     1f4:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     1f8:	01010005 	tsteq	r1, r5
     1fc:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     200:	0008cc02 	andeq	ip, r8, r2, lsl #24
     204:	01350310 	teqeq	r5, r0, lsl r3
     208:	4b210505 	blmi	841624 <__RAM_SIZE+0x741624>
     20c:	2f060105 	svccs	0x00060105
     210:	01000502 	tsteq	r0, r2, lsl #10
     214:	00120501 	andseq	r0, r2, r1, lsl #10
     218:	08e40205 	stmiaeq	r4!, {r0, r2, r9}^
     21c:	3a031000 	bcc	c4224 <__HEAP_SIZE+0xc3224>
     220:	21050501 	tstcs	r5, r1, lsl #10
     224:	0601054b 	streq	r0, [r1], -fp, asr #10
     228:	0005022f 	andeq	r0, r5, pc, lsr #4
     22c:	10050101 	andne	r0, r5, r1, lsl #2
     230:	fc020500 	stc2	5, cr0, [r2], {-0}
     234:	03100008 	tsteq	r0, #8
     238:	0505013f 	streq	r0, [r5, #-319]	; 0xfffffec1
     23c:	3d301321 	ldccc	3, cr1, [r0, #-132]!	; 0xffffff7c
     240:	0609052f 	streq	r0, [r9], -pc, lsr #10
     244:	00050529 	andeq	r0, r5, r9, lsr #10
     248:	06010402 	streq	r0, [r1], -r2, lsl #8
     24c:	00090527 	andeq	r0, r9, r7, lsr #10
     250:	13010402 	movwne	r0, #5122	; 0x1402
     254:	01040200 	mrseq	r0, R12_usr
     258:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
     25c:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
     260:	0402000b 	streq	r0, [r2], #-11
     264:	053a0601 	ldreq	r0, [sl, #-1537]!	; 0xfffff9ff
     268:	04020009 	streq	r0, [r2], #-9
     26c:	02140601 	andseq	r0, r4, #1048576	; 0x100000
     270:	01010006 	tsteq	r1, r6
     274:	000001d1 	ldrdeq	r0, [r0], -r1
     278:	01810003 	orreq	r0, r1, r3
     27c:	01020000 	mrseq	r0, (UNDEF: 2)
     280:	000d0efb 	strdeq	r0, [sp], -fp
     284:	01010101 	tsteq	r1, r1, lsl #2
     288:	01000000 	mrseq	r0, (UNDEF: 0)
     28c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
     290:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
     294:	6163696c 	cmnvs	r3, ip, ror #18
     298:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     29c:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     2a0:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     2a4:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     2a8:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     2ac:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     2b0:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     2b4:	5f6d7261 	svcpl	0x006d7261
     2b8:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     2bc:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     2c0:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     2c4:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     2c8:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     2cc:	30312d69 	eorscc	r2, r1, r9, ror #26
     2d0:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     2d4:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     2d8:	615c3031 	cmpvs	ip, r1, lsr r0
     2dc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     2e0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     2e4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     2e8:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     2ec:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     2f0:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
     2f4:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
     2f8:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
     2fc:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     300:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
     304:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
     308:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
     30c:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
     310:	5f6d7261 	svcpl	0x006d7261
     314:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     318:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
     31c:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     320:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     324:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     328:	30312d69 	eorscc	r2, r1, r9, ror #26
     32c:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
     330:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
     334:	615c3031 	cmpvs	ip, r1, lsr r0
     338:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     33c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     340:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     344:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     348:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     34c:	7379735c 	cmnvc	r9, #92, 6	; 0x70000001
     350:	2f2e2e00 	svccs	0x002e2e00
     354:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     358:	2f737265 	svccs	0x00737265
     35c:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     360:	2f355f53 	svccs	0x00355f53
     364:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     368:	6f432f53 	svcvs	0x00432f53
     36c:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     370:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     374:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     378:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     37c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     380:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
     384:	5f534953 	svcpl	0x00534953
     388:	65442f35 	strbvs	r2, [r4, #-3893]	; 0xfffff0cb
     38c:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
     390:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
     394:	4d52412f 	ldfmie	f4, [r2, #-188]	; 0xffffff44
     398:	33334d43 	teqcc	r3, #4288	; 0x10c0
     39c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     3a0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     3a4:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     3a8:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     3ac:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
     3b0:	33334d43 	teqcc	r3, #4288	; 0x10c0
     3b4:	0100632e 	tsteq	r0, lr, lsr #6
     3b8:	645f0000 	ldrbvs	r0, [pc], #-0	; 3c0 <__STACKSEAL_SIZE+0x3c0>
     3bc:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     3c0:	745f746c 	ldrbvc	r7, [pc], #-1132	; 3c8 <__STACKSEAL_SIZE+0x3c8>
     3c4:	73657079 	cmnvc	r5, #121	; 0x79
     3c8:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     3cc:	735f0000 	cmpvc	pc, #0
     3d0:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     3d4:	00682e74 	rsbeq	r2, r8, r4, ror lr
     3d8:	63000003 	movwvs	r0, #3
     3dc:	5f65726f 	svcpl	0x0065726f
     3e0:	33336d63 	teqcc	r3, #6336	; 0x18c0
     3e4:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
     3e8:	79730000 	ldmdbvc	r3!, {}^	; <UNPREDICTABLE>
     3ec:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     3f0:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
     3f4:	33334d43 	teqcc	r3, #4288	; 0x10c0
     3f8:	0500682e 	streq	r6, [r0, #-2094]	; 0xfffff7d2
     3fc:	05000000 	streq	r0, [r0, #-0]
     400:	02050001 	andeq	r0, r5, #1
     404:	00000000 	andeq	r0, r0, r0
     408:	0100c403 	tsteq	r0, r3, lsl #8
     40c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
     410:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
     414:	05023d01 	streq	r3, [r2, #-3329]	; 0xfffff2ff
     418:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     41c:	02050001 	andeq	r0, r5, #1
     420:	10000928 	andne	r0, r0, r8, lsr #18
     424:	0100cc03 	tsteq	r0, r3, lsl #24
     428:	05150305 	ldreq	r0, [r5, #-773]	; 0xfffffcfb
     42c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     430:	05400603 	strbeq	r0, [r0, #-1539]	; 0xfffff9fd
     434:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
     438:	0c030603 	stceq	6, cr0, [r3], {3}
     43c:	06130566 	ldreq	r0, [r3], -r6, ror #10
     440:	3d010501 	cfstr32cc	mvfx0, [r1, #-4]
     444:	01000a02 	tsteq	r0, r2, lsl #20
     448:	00120d01 	andseq	r0, r2, r1, lsl #26
     44c:	a1000300 	mrsge	r0, LR_irq
     450:	02000001 	andeq	r0, r0, #1
     454:	0d0efb01 	vstreq	d15, [lr, #-4]
     458:	01010100 	mrseq	r0, (UNDEF: 17)
     45c:	00000001 	andeq	r0, r0, r1
     460:	01000001 	tsteq	r0, r1
     464:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     468:	2f65726f 	svccs	0x0065726f
     46c:	00637253 	rsbeq	r7, r3, r3, asr r2
     470:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     474:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     478:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     47c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     480:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     484:	615c6d61 	cmpvs	ip, r1, ror #26
     488:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     48c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     490:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     494:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     498:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     49c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     4a0:	2e30312d 	rsfcssp	f3, f0, #5.0
     4a4:	30322d33 	eorscc	r2, r2, r3, lsr sp
     4a8:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     4ac:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     4b0:	6f6e2d6d 	svcvs	0x006e2d6d
     4b4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     4b8:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     4bc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     4c0:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     4c4:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
     4c8:	00656e69 	rsbeq	r6, r5, r9, ror #28
     4cc:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     4d0:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     4d4:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     4d8:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     4dc:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     4e0:	615c6d61 	cmpvs	ip, r1, ror #26
     4e4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     4e8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     4ec:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     4f0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     4f4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     4f8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     4fc:	2e30312d 	rsfcssp	f3, f0, #5.0
     500:	30322d33 	eorscc	r2, r2, r3, lsr sp
     504:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     508:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
     50c:	6f6e2d6d 	svcvs	0x006e2d6d
     510:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     514:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     518:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
     51c:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
     520:	00737973 	rsbseq	r7, r3, r3, ror r9
     524:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
     528:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     52c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     530:	705c6e6f 	subsvc	r6, ip, pc, ror #28
     534:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
     538:	615c6d61 	cmpvs	ip, r1, ror #26
     53c:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
     540:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
     544:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
     548:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
     54c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
     550:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     554:	2e30312d 	rsfcssp	f3, f0, #5.0
     558:	30322d33 	eorscc	r2, r2, r3, lsr sp
     55c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
     560:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
     564:	63675c62 	cmnvs	r7, #25088	; 0x6200
     568:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
     56c:	6f6e2d6d 	svcvs	0x006e2d6d
     570:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     574:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
     578:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     57c:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
     580:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     584:	2e006564 	cfsh32cs	mvfx6, mvfx0, #52
     588:	6f432f2e 	svcvs	0x00432f2e
     58c:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
     590:	0000636e 	andeq	r6, r0, lr, ror #6
     594:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     598:	632e6674 			; <UNDEFINED> instruction: 0x632e6674
     59c:	00000100 	andeq	r0, r0, r0, lsl #2
     5a0:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     5a4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     5a8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     5ac:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     5b0:	00000200 	andeq	r0, r0, r0, lsl #4
     5b4:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     5b8:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     5bc:	00030068 	andeq	r0, r3, r8, rrx
     5c0:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     5c4:	2e677261 	cdpcs	2, 6, cr7, cr7, cr1, {3}
     5c8:	00040068 	andeq	r0, r4, r8, rrx
     5cc:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     5d0:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
     5d4:	00040068 	andeq	r0, r4, r8, rrx
     5d8:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
     5dc:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
     5e0:	003e6e69 	eorseq	r6, lr, r9, ror #28
     5e4:	70000000 	andvc	r0, r0, r0
     5e8:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     5ec:	00682e66 	rsbeq	r2, r8, r6, ror #28
     5f0:	00000005 	andeq	r0, r0, r5
     5f4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     5f8:	00000002 	andeq	r0, r0, r2
     5fc:	01850300 	orreq	r0, r5, r0, lsl #6
     600:	13030501 	movwne	r0, #13569	; 0x3501
     604:	01060605 	tsteq	r6, r5, lsl #12
     608:	2f060505 	svccs	0x00060505
     60c:	01061a05 	tsteq	r6, r5, lsl #20
     610:	02220105 	eoreq	r0, r2, #1073741825	; 0x40000001
     614:	01010001 	tsteq	r1, r1
     618:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     61c:	00095402 	andeq	r5, r9, r2, lsl #8
     620:	018e0310 	orreq	r0, lr, r0, lsl r3
     624:	13030501 	movwne	r0, #13569	; 0x3501
     628:	05011405 	streq	r1, [r1, #-1029]	; 0xfffffbfb
     62c:	2d050122 	stfcss	f0, [r5, #-136]	; 0xffffff78
     630:	06010501 	streq	r0, [r1], -r1, lsl #10
     634:	00010213 	andeq	r0, r1, r3, lsl r2
     638:	01050101 	tsteq	r5, r1, lsl #2
     63c:	00020500 	andeq	r0, r2, r0, lsl #10
     640:	03000000 	movweq	r0, #0
     644:	0501019f 	streq	r0, [r1, #-415]	; 0xfffffe61
     648:	0e051303 	cdpeq	3, 0, cr1, cr5, cr3, {0}
     64c:	13030501 	movwne	r0, #13569	; 0x3501
     650:	01060605 	tsteq	r6, r5, lsl #12
     654:	051e0105 	ldreq	r0, [lr, #-261]	; 0xfffffefb
     658:	05240605 	streq	r0, [r4, #-1541]!	; 0xfffff9fb
     65c:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
     660:	05202006 	streq	r2, [r0, #-6]!
     664:	02202201 	eoreq	r2, r0, #268435456	; 0x10000000
     668:	01010001 	tsteq	r1, r1
     66c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     670:	00095602 	andeq	r5, r9, r2, lsl #12
     674:	01bc0310 			; <UNDEFINED> instruction: 0x01bc0310
     678:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     67c:	13210603 			; <UNDEFINED> instruction: 0x13210603
     680:	11061005 	tstne	r6, r5
     684:	05210905 	streq	r0, [r1, #-2309]!	; 0xfffff6fb
     688:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     68c:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     690:	22052e2a 	andcs	r2, r5, #672	; 0x2a0
     694:	2011052e 	andscs	r0, r1, lr, lsr #10
     698:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
     69c:	051f0609 	ldreq	r0, [pc, #-1545]	; 9b <__STACKSEAL_SIZE+0x9b>
     6a0:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
     6a4:	1405200a 	strne	r2, [r5], #-10
     6a8:	20760306 	rsbscs	r0, r6, r6, lsl #6
     6ac:	05140305 	ldreq	r0, [r4, #-773]	; 0xfffffcfb
     6b0:	20010616 	andcs	r0, r1, r6, lsl r6
     6b4:	1a090520 	bne	241b3c <__RAM_SIZE+0x141b3c>
     6b8:	31060305 	tstcc	r6, r5, lsl #6
     6bc:	13060105 	movwne	r0, #24837	; 0x6105
     6c0:	01000102 	tsteq	r0, r2, lsl #2
     6c4:	00010501 	andeq	r0, r1, r1, lsl #10
     6c8:	097a0205 	ldmdbeq	sl!, {r0, r2, r9}^
     6cc:	c7031000 	strgt	r1, [r3, -r0]
     6d0:	01060101 	tsteq	r6, r1, lsl #2
     6d4:	bb060305 	bllt	1812f0 <__RAM_SIZE+0x812f0>
     6d8:	06060515 			; <UNDEFINED> instruction: 0x06060515
     6dc:	11052001 	tstne	r5, r1
     6e0:	001a053d 	andseq	r0, sl, sp, lsr r5
     6e4:	06010402 	streq	r0, [r1], -r2, lsl #8
     6e8:	0005052e 	andeq	r0, r5, lr, lsr #10
     6ec:	06010402 	streq	r0, [r1], -r2, lsl #8
     6f0:	00070501 	andeq	r0, r7, r1, lsl #10
     6f4:	06030402 	streq	r0, [r3], -r2, lsl #8
     6f8:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
     6fc:	052e0603 	streq	r0, [lr, #-1539]!	; 0xfffff9fd
     700:	04020025 	streq	r0, [r2], #-37	; 0xffffffdb
     704:	05490603 	strbeq	r0, [r9, #-1539]	; 0xfffff9fd
     708:	04020026 	streq	r0, [r2], #-38	; 0xffffffda
     70c:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
     710:	04020007 	streq	r0, [r2], #-7
     714:	02002f03 	andeq	r2, r0, #3, 30
     718:	002e0304 	eoreq	r0, lr, r4, lsl #6
     71c:	3c030402 	cfstrscc	mvf0, [r3], {2}
     720:	18060505 	stmdane	r6, {r0, r2, r8, sl}
     724:	052e2006 	streq	r2, [lr, #-6]!
     728:	05650609 	strbeq	r0, [r5, #-1545]!	; 0xfffff9f7
     72c:	06053303 	streq	r3, [r5], -r3, lsl #6
     730:	01050106 	tsteq	r5, r6, lsl #2
     734:	060b0551 			; <UNDEFINED> instruction: 0x060b0551
     738:	054a7a03 	strbeq	r7, [sl, #-2563]	; 0xfffff5fd
     73c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     740:	07052e0b 	streq	r2, [r5, -fp, lsl #28]
     744:	20062f06 	andcs	r2, r6, r6, lsl #30
     748:	01000602 	tsteq	r0, r2, lsl #12
     74c:	00010501 	andeq	r0, r1, r1, lsl #10
     750:	09f80205 	ldmibeq	r8!, {r0, r2, r9}^
     754:	e3031000 	movw	r1, #12288	; 0x3000
     758:	01060101 	tsteq	r6, r1, lsl #2
     75c:	ca060305 	bgt	181378 <__RAM_SIZE+0x81378>
     760:	01060605 	tsteq	r6, r5, lsl #12
     764:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     768:	01060805 	tsteq	r6, r5, lsl #16
     76c:	02000f05 	andeq	r0, r0, #5, 30
     770:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     774:	0402002a 	streq	r0, [r2], #-42	; 0xffffffd6
     778:	37053c02 	strcc	r3, [r5, -r2, lsl #24]
     77c:	03040200 	movweq	r0, #16896	; 0x4200
     780:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
     784:	060c053d 			; <UNDEFINED> instruction: 0x060c053d
     788:	07052001 	streq	r2, [r5, -r1]
     78c:	12052306 	andne	r2, r5, #402653184	; 0x18000000
     790:	0e050106 	adfeqs	f0, f5, f6
     794:	060b054a 	streq	r0, [fp], -sl, asr #10
     798:	0019051f 	andseq	r0, r9, pc, lsl r5
     79c:	06010402 	streq	r0, [r1], -r2, lsl #8
     7a0:	060b052e 	streq	r0, [fp], -lr, lsr #10
     7a4:	00240531 	eoreq	r0, r4, r1, lsr r5
     7a8:	06010402 	streq	r0, [r1], -r2, lsl #8
     7ac:	0035053c 	eorseq	r0, r5, ip, lsr r5
     7b0:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     7b4:	2f060705 	svccs	0x00060705
     7b8:	01061205 	tsteq	r6, r5, lsl #4
     7bc:	204a0e05 	subcs	r0, sl, r5, lsl #28
     7c0:	25060305 	strcs	r0, [r6, #-773]	; 0xfffffcfb
     7c4:	01060605 	tsteq	r6, r5, lsl #12
     7c8:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
     7cc:	01060805 	tsteq	r6, r5, lsl #16
     7d0:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
     7d4:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     7d8:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
     7dc:	3d052002 	stccc	0, cr2, [r5, #-8]
     7e0:	03040200 	movweq	r0, #16896	; 0x4200
     7e4:	0605052e 	streq	r0, [r5], -lr, lsr #10
     7e8:	06080534 			; <UNDEFINED> instruction: 0x06080534
     7ec:	060a0501 	streq	r0, [sl], -r1, lsl #10
     7f0:	060d053f 			; <UNDEFINED> instruction: 0x060d053f
     7f4:	060a0501 	streq	r0, [sl], -r1, lsl #10
     7f8:	060d053f 			; <UNDEFINED> instruction: 0x060d053f
     7fc:	06050501 	streq	r0, [r5], -r1, lsl #10
     800:	0608053f 			; <UNDEFINED> instruction: 0x0608053f
     804:	06070501 	streq	r0, [r7], -r1, lsl #10
     808:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     80c:	4a0e0501 	bmi	381c18 <__RAM_SIZE+0x281c18>
     810:	24060305 	strcs	r0, [r6], #-773	; 0xfffffcfb
     814:	01060605 	tsteq	r6, r5, lsl #12
     818:	2f060505 	svccs	0x00060505
     81c:	01060805 	tsteq	r6, r5, lsl #16
     820:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     824:	01061205 	tsteq	r6, r5, lsl #4
     828:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     82c:	0a030603 	beq	c2040 <__HEAP_SIZE+0xc1040>
     830:	060a0520 	streq	r0, [sl], -r0, lsr #10
     834:	67010501 	strvs	r0, [r1, -r1, lsl #10]
     838:	03060705 	movweq	r0, #26373	; 0x6705
     83c:	05133c60 	ldreq	r3, [r3, #-3168]	; 0xfffff3a0
     840:	2e01060a 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx10
     844:	02000f05 	andeq	r0, r0, #5, 30
     848:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     84c:	09053b0a 	stmdbeq	r5, {r1, r3, r8, r9, fp, ip, sp}
     850:	0c053006 	stceq	0, cr3, [r5], {6}
     854:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     858:	17051e0a 	strne	r1, [r5, -sl, lsl #28]
     85c:	01040200 	mrseq	r0, R12_usr
     860:	00350533 	eorseq	r0, r5, r3, lsr r5
     864:	3c020402 	cfstrscc	mvf0, [r2], {2}
     868:	2f060705 	svccs	0x00060705
     86c:	01061205 	tsteq	r6, r5, lsl #4
     870:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     874:	1c052012 	stcne	0, cr2, [r5], {18}
     878:	01040200 	mrseq	r0, R12_usr
     87c:	00390522 	eorseq	r0, r9, r2, lsr #10
     880:	3c020402 	cfstrscc	mvf0, [r2], {2}
     884:	2f060705 	svccs	0x00060705
     888:	01061205 	tsteq	r6, r5, lsl #4
     88c:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     890:	1b052012 	blne	1488e0 <__RAM_SIZE+0x488e0>
     894:	01040200 	mrseq	r0, R12_usr
     898:	06070522 	streq	r0, [r7], -r2, lsr #10
     89c:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     8a0:	4a0e0501 	bmi	381cac <__RAM_SIZE+0x281cac>
     8a4:	060a0520 	streq	r0, [sl], -r0, lsr #10
     8a8:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
     8ac:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     8b0:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
     8b4:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     8b8:	05204a0e 	streq	r4, [r0, #-2574]!	; 0xfffff5f2
     8bc:	0522060a 	streq	r0, [r2, #-1546]!	; 0xfffff9f6
     8c0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     8c4:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
     8c8:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     8cc:	02204a0e 	eoreq	r4, r0, #57344	; 0xe000
     8d0:	01010001 	tsteq	r1, r1
     8d4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     8d8:	000b3002 	andeq	r3, fp, r2
     8dc:	02990310 	addseq	r0, r9, #16, 6	; 0x40000000
     8e0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     8e4:	13590603 	cmpne	r9, #3145728	; 0x300000
     8e8:	06060515 			; <UNDEFINED> instruction: 0x06060515
     8ec:	06050501 	streq	r0, [r5], -r1, lsl #10
     8f0:	060b0521 	streq	r0, [fp], -r1, lsr #10
     8f4:	06030501 	streq	r0, [r3], -r1, lsl #10
     8f8:	06060532 			; <UNDEFINED> instruction: 0x06060532
     8fc:	00220501 	eoreq	r0, r2, r1, lsl #10
     900:	3c010402 	cfstrscc	mvf0, [r1], {2}
     904:	02001205 	andeq	r1, r0, #1342177280	; 0x50000000
     908:	004d0104 	subeq	r0, sp, r4, lsl #2
     90c:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     910:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     914:	052e0804 	streq	r0, [lr, #-2052]!	; 0xfffff7fc
     918:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     91c:	07052e08 	streq	r2, [r5, -r8, lsl #28]
     920:	08040200 	stmdaeq	r4, {r9}
     924:	0d055906 	vstreq.16	s10, [r5, #-12]	; <UNPREDICTABLE>
     928:	08040200 	stmdaeq	r4, {r9}
     92c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     930:	002e0804 	eoreq	r0, lr, r4, lsl #16
     934:	06080402 	streq	r0, [r8], -r2, lsl #8
     938:	00050513 	andeq	r0, r5, r3, lsl r5
     93c:	06080402 	streq	r0, [r8], -r2, lsl #8
     940:	00140501 	andseq	r0, r4, r1, lsl #10
     944:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     948:	052c0e05 	streq	r0, [ip, #-3589]!	; 0xfffff1fb
     94c:	0520210d 	streq	r2, [r0, #-269]!	; 0xfffffef3
     950:	050f0605 	streq	r0, [pc, #-1541]	; 353 <__STACKSEAL_SIZE+0x353>
     954:	27051307 	strcs	r1, [r5, -r7, lsl #6]
     958:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
     95c:	0607054a 	streq	r0, [r7], -sl, asr #10
     960:	0612052f 	ldreq	r0, [r2], -pc, lsr #10
     964:	00550501 	subseq	r0, r5, r1, lsl #10
     968:	3c020402 	cfstrscc	mvf0, [r2], {2}
     96c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
     970:	02002007 	andeq	r2, r0, #7
     974:	05200704 	streq	r0, [r0, #-1796]!	; 0xfffff8fc
     978:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     97c:	55052e07 	strpl	r2, [r5, #-3591]	; 0xfffff1f9
     980:	0a052e58 	beq	14c2e8 <__RAM_SIZE+0x4c2e8>
     984:	05017503 	streq	r7, [r1, #-1283]	; 0xfffffafd
     988:	10030603 	andne	r0, r3, r3, lsl #12
     98c:	060a0520 	streq	r0, [sl], -r0, lsr #10
     990:	d7010501 	strle	r0, [r1, -r1, lsl #10]
     994:	0101002e 	tsteq	r1, lr, lsr #32
     998:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     99c:	000bc402 	andeq	ip, fp, r2, lsl #8
     9a0:	02b20310 	adcseq	r0, r2, #16, 6	; 0x40000000
     9a4:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     9a8:	13d70603 	bicsne	r0, r7, #3145728	; 0x300000
     9ac:	06060515 			; <UNDEFINED> instruction: 0x06060515
     9b0:	05052e01 	streq	r2, [r5, #-3585]	; 0xfffff1ff
     9b4:	0b052106 	bleq	148dd4 <__RAM_SIZE+0x48dd4>
     9b8:	03050106 	movweq	r0, #20742	; 0x5106
     9bc:	06053206 	streq	r3, [r5], -r6, lsl #4
     9c0:	22050106 	andcs	r0, r5, #-2147483647	; 0x80000001
     9c4:	01040200 	mrseq	r0, R12_usr
     9c8:	0012053c 	andseq	r0, r2, ip, lsr r5
     9cc:	5b010402 	blpl	419dc <__HEAP_SIZE+0x409dc>
     9d0:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
     9d4:	053c0804 	ldreq	r0, [ip, #-2052]!	; 0xfffff7fc
     9d8:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     9dc:	02002e08 	andeq	r2, r0, #8, 28	; 0x80
     9e0:	052e0804 	streq	r0, [lr, #-2052]!	; 0xfffff7fc
     9e4:	04020007 	streq	r0, [r2], #-7
     9e8:	054b0608 	strbeq	r0, [fp, #-1544]	; 0xfffff9f8
     9ec:	0402000d 	streq	r0, [r2], #-13
     9f0:	00010608 	andeq	r0, r1, r8, lsl #12
     9f4:	66080402 	strvs	r0, [r8], -r2, lsl #8
     9f8:	08040200 	stmdaeq	r4, {r9}
     9fc:	05051306 	streq	r1, [r5, #-774]	; 0xfffffcfa
     a00:	08040200 	stmdaeq	r4, {r9}
     a04:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
     a08:	01040200 	mrseq	r0, R12_usr
     a0c:	3a0e054a 	bcc	381f3c <__RAM_SIZE+0x281f3c>
     a10:	2e210d05 	cdpcs	13, 2, cr0, cr1, cr5, {0}
     a14:	0f060505 	svceq	0x00060505
     a18:	05130705 	ldreq	r0, [r3, #-1797]	; 0xfffff8fb
     a1c:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
     a20:	07056612 	smladeq	r5, r2, r6, r6
     a24:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     a28:	55050106 	strpl	r0, [r5, #-262]	; 0xfffffefa
     a2c:	02040200 	andeq	r0, r4, #0, 4
     a30:	02003c2e 	andeq	r3, r0, #11776	; 0x2e00
     a34:	05200704 	streq	r0, [r0, #-1796]!	; 0xfffff8fc
     a38:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     a3c:	55052e07 	strpl	r2, [r5, #-3591]	; 0xfffff1f9
     a40:	0a052e3c 	beq	14c338 <__RAM_SIZE+0x4c338>
     a44:	05017503 	streq	r7, [r1, #-1283]	; 0xfffffafd
     a48:	10030603 	andne	r0, r3, r3, lsl #12
     a4c:	060a052e 	streq	r0, [sl], -lr, lsr #10
     a50:	08010501 	stmdaeq	r1, {r0, r8, sl}
     a54:	01003c3d 	tsteq	r0, sp, lsr ip
     a58:	00010501 	andeq	r0, r1, r1, lsl #10
     a5c:	0c900205 	lfmeq	f0, 4, [r0], {5}
     a60:	d3031000 	movwle	r1, #12288	; 0x3000
     a64:	01060103 	tsteq	r6, r3, lsl #2
     a68:	92060305 	andls	r0, r6, #335544320	; 0x14000000
     a6c:	01060605 	tsteq	r6, r5, lsl #12
     a70:	2e20202e 	cdpcs	0, 2, cr2, cr0, cr14, {1}
     a74:	02001805 	andeq	r1, r0, #327680	; 0x50000
     a78:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     a7c:	0402002d 	streq	r0, [r2], #-45	; 0xffffffd3
     a80:	03059e02 	movweq	r9, #24066	; 0x5e02
     a84:	0513b106 	ldreq	fp, [r3, #-262]	; 0xfffffefa
     a88:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     a8c:	05cd0603 	strbeq	r0, [sp, #1539]	; 0x603
     a90:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     a94:	0305590a 	movweq	r5, #22794	; 0x590a
     a98:	13173306 	tstne	r7, #402653184	; 0x18000000
     a9c:	3c060e05 	stccc	14, cr0, [r6], {5}
     aa0:	2f060305 	svccs	0x00060305
     aa4:	01061405 	tsteq	r6, r5, lsl #8
     aa8:	052e2c05 	streq	r2, [lr, #-3077]!	; 0xfffff3fb
     aac:	055a0603 	ldrbeq	r0, [sl, #-1539]	; 0xfffff9fd
     ab0:	2e01062d 	cfmadd32cs	mvax1, mvfx0, mvfx1, mvfx13
     ab4:	5826052e 	stmdapl	r6!, {r1, r2, r3, r5, r8, sl}
     ab8:	05744b05 	ldrbeq	r4, [r4, #-2821]!	; 0xfffff4fb
     abc:	41056652 	tstmi	r5, r2, asr r6
     ac0:	4a070574 	bmi	1c2098 <__RAM_SIZE+0xc2098>
     ac4:	3e060305 	cdpcc	3, 0, cr0, cr6, cr5, {0}
     ac8:	01061705 	tsteq	r6, r5, lsl #14
     acc:	742b052e 	strtvc	r0, [fp], #-1326	; 0xfffffad2
     ad0:	054a0805 	strbeq	r0, [sl, #-2053]	; 0xfffff7fb
     ad4:	053d0603 	ldreq	r0, [sp, #-1539]!	; 0xfffff9fd
     ad8:	4a01061c 	bmi	42350 <__HEAP_SIZE+0x41350>
     adc:	05583705 	ldrbeq	r3, [r8, #-1797]	; 0xfffff8fb
     ae0:	03059e10 	movweq	r9, #24080	; 0x5e10
     ae4:	10056706 	andne	r6, r5, r6, lsl #14
     ae8:	03050106 	movweq	r0, #20742	; 0x5106
     aec:	1c056706 	stcne	7, cr6, [r5], {6}
     af0:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
     af4:	0603052e 	streq	r0, [r3], -lr, lsr #10
     af8:	06130584 	ldreq	r0, [r3], -r4, lsl #11
     afc:	1c053c01 	stcne	12, cr3, [r5], {1}
     b00:	3c058258 	sfmcc	f0, 1, [r5], {88}	; 0x58
     b04:	66370520 	ldrtvs	r0, [r7], -r0, lsr #10
     b08:	05663105 	strbeq	r3, [r6, #-261]!	; 0xfffffefb
     b0c:	26054a2b 	strcs	r4, [r5], -fp, lsr #20
     b10:	66200566 	strtvs	r0, [r0], -r6, ror #10
     b14:	05661705 	strbeq	r1, [r6, #-1797]!	; 0xfffff8fb
     b18:	0a054a0f 	beq	15335c <__RAM_SIZE+0x5335c>
     b1c:	0603054a 	streq	r0, [r3], -sl, asr #10
     b20:	06060584 	streq	r0, [r6], -r4, lsl #11
     b24:	06050501 	streq	r0, [r5], -r1, lsl #10
     b28:	060b0559 			; <UNDEFINED> instruction: 0x060b0559
     b2c:	06050501 	streq	r0, [r5], -r1, lsl #10
     b30:	060c0521 	streq	r0, [ip], -r1, lsr #10
     b34:	06030501 	streq	r0, [r3], -r1, lsl #10
     b38:	062b0586 	strteq	r0, [fp], -r6, lsl #11
     b3c:	2e440501 	cdpcs	5, 4, cr0, cr4, cr1, {0}
     b40:	0003052e 	andeq	r0, r3, lr, lsr #10
     b44:	06040402 	streq	r0, [r4], -r2, lsl #8
     b48:	00060523 	andeq	r0, r6, r3, lsr #10
     b4c:	06040402 	streq	r0, [r4], -r2, lsl #8
     b50:	06050501 	streq	r0, [r5], -r1, lsl #10
     b54:	0608054c 	streq	r0, [r8], -ip, asr #10
     b58:	00190501 	andseq	r0, r9, r1, lsl #10
     b5c:	ac010402 	cfstrsge	mvf0, [r1], {2}
     b60:	91060705 	tstls	r6, r5, lsl #14
     b64:	01060a05 	tsteq	r6, r5, lsl #20
     b68:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
     b6c:	01062505 	tsteq	r6, r5, lsl #10
     b70:	2e202e05 	cdpcs	14, 2, cr2, cr0, cr5, {0}
     b74:	03060505 	movweq	r0, #25861	; 0x6505
     b78:	0c052051 	stceq	0, cr2, [r5], {81}	; 0x51
     b7c:	01050106 	tsteq	r5, r6, lsl #2
     b80:	f200e403 	vshl.s8	d14, d3, d0
     b84:	0605053c 			; <UNDEFINED> instruction: 0x0605053c
     b88:	2e7fa203 	cdpcs	2, 7, cr10, cr15, cr3, {0}
     b8c:	01060b05 	tsteq	r6, r5, lsl #22
     b90:	0344059e 	movteq	r0, #17822	; 0x459e
     b94:	05202022 	streq	r2, [r0, #-34]!	; 0xffffffde
     b98:	200a030e 	andcs	r0, sl, lr, lsl #6
     b9c:	30060705 	andcc	r0, r6, r5, lsl #14
     ba0:	01060d05 	tsteq	r6, r5, lsl #26
     ba4:	4c060705 	stcmi	7, cr0, [r6], {5}
     ba8:	06100513 			; <UNDEFINED> instruction: 0x06100513
     bac:	03052111 	movweq	r2, #20753	; 0x5111
     bb0:	200b0306 	andcs	r0, fp, r6, lsl #6
     bb4:	06060513 			; <UNDEFINED> instruction: 0x06060513
     bb8:	06050501 	streq	r0, [r5], -r1, lsl #10
     bbc:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
     bc0:	07052e01 	streq	r2, [r5, -r1, lsl #28]
     bc4:	20760306 	rsbscs	r0, r6, r6, lsl #6
     bc8:	01060a05 	tsteq	r6, r5, lsl #20
     bcc:	02001605 	andeq	r1, r0, #5242880	; 0x500000
     bd0:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     bd4:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
     bd8:	030c053c 	movweq	r0, #50492	; 0xc53c
     bdc:	0134020c 	teqeq	r4, ip, lsl #4
     be0:	30060305 	andcc	r0, r6, r5, lsl #6
     be4:	01060605 	tsteq	r6, r5, lsl #12
     be8:	02001c05 	andeq	r1, r0, #1280	; 0x500
     bec:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     bf0:	0305220c 	movweq	r2, #21004	; 0x520c
     bf4:	06053206 	streq	r3, [r5], -r6, lsl #4
     bf8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     bfc:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     c00:	0b050106 	bleq	141020 <__RAM_SIZE+0x41020>
     c04:	0603052e 	streq	r0, [r3], -lr, lsr #10
     c08:	0905136a 	stmdbeq	r5, {r1, r3, r5, r6, r8, r9, ip}
     c0c:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
     c10:	05820404 	streq	r0, [r2, #1028]	; 0x404
     c14:	04020003 	streq	r0, [r2], #-3
     c18:	23080604 	movwcs	r0, #34308	; 0x8604
     c1c:	02000605 	andeq	r0, r0, #5242880	; 0x500000
     c20:	01060404 	tsteq	r6, r4, lsl #8
     c24:	3e060505 	cfsh32cc	mvfx0, mvfx6, #5
     c28:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     c2c:	02006606 	andeq	r6, r0, #6291456	; 0x600000
     c30:	002e0404 	eoreq	r0, lr, r4, lsl #8
     c34:	06040402 	streq	r0, [r4], -r2, lsl #8
     c38:	0047055a 	subeq	r0, r7, sl, asr r5
     c3c:	06040402 	streq	r0, [r4], -r2, lsl #8
     c40:	000b0501 	andeq	r0, fp, r1, lsl #10
     c44:	4a040402 	bmi	101c54 <__RAM_SIZE+0x1c54>
     c48:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     c4c:	0005053c 	andeq	r0, r5, ip, lsr r5
     c50:	06040402 	streq	r0, [r4], -r2, lsl #8
     c54:	000805d8 	ldrdeq	r0, [r8], -r8
     c58:	06040402 	streq	r0, [r4], -r2, lsl #8
     c5c:	04020001 	streq	r0, [r2], #-1
     c60:	09056604 	stmdbeq	r5, {r2, r9, sl, sp, lr}
     c64:	01040200 	mrseq	r0, R12_usr
     c68:	00207703 	eoreq	r7, r0, r3, lsl #14
     c6c:	74010402 	strvc	r0, [r1], #-1026	; 0xfffffbfe
     c70:	05250505 	streq	r0, [r5, #-1285]!	; 0xfffffafb
     c74:	04020027 	streq	r0, [r2], #-39	; 0xffffffd9
     c78:	00410602 	subeq	r0, r1, r2, lsl #12
     c7c:	06020402 	streq	r0, [r2], -r2, lsl #8
     c80:	000d0520 	andeq	r0, sp, r0, lsr #10
     c84:	06010402 	streq	r0, [r1], -r2, lsl #8
     c88:	00120558 	andseq	r0, r2, r8, asr r5
     c8c:	06010402 	streq	r0, [r1], -r2, lsl #8
     c90:	000d0501 	andeq	r0, sp, r1, lsl #10
     c94:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
     c98:	01040200 	mrseq	r0, R12_usr
     c9c:	0002022e 	andeq	r0, r2, lr, lsr #4
     ca0:	01050101 	tsteq	r5, r1, lsl #2
     ca4:	80020500 	andhi	r0, r2, r0, lsl #10
     ca8:	03100010 	tsteq	r0, #16
     cac:	060102d3 			; <UNDEFINED> instruction: 0x060102d3
     cb0:	06030501 	streq	r0, [r3], -r1, lsl #10
     cb4:	151313bb 	ldrne	r1, [r3, #-955]	; 0xfffffc45
     cb8:	06060515 			; <UNDEFINED> instruction: 0x06060515
     cbc:	20202001 	eorcs	r2, r0, r1
     cc0:	06030520 	streq	r0, [r3], -r0, lsr #10
     cc4:	0606054c 	streq	r0, [r6], -ip, asr #10
     cc8:	06030501 	streq	r0, [r3], -r1, lsl #10
     ccc:	060605a0 	streq	r0, [r6], -r0, lsr #11
     cd0:	06030501 	streq	r0, [r3], -r1, lsl #10
     cd4:	06060595 			; <UNDEFINED> instruction: 0x06060595
     cd8:	00220501 	eoreq	r0, r2, r1, lsl #10
     cdc:	90010402 	andls	r0, r1, r2, lsl #8
     ce0:	03060305 	movweq	r0, #25349	; 0x6305
     ce4:	05139009 	ldreq	r9, [r3, #-9]
     ce8:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     cec:	03058108 	movweq	r8, #20744	; 0x5108
     cf0:	06053506 	streq	r3, [r5], -r6, lsl #10
     cf4:	0a050106 	beq	141114 <__RAM_SIZE+0x41114>
     cf8:	0609054b 	streq	r0, [r9], -fp, asr #10
     cfc:	002a0523 	eoreq	r0, sl, r3, lsr #10
     d00:	06010402 	streq	r0, [r1], -r2, lsl #8
     d04:	0605052e 	streq	r0, [r5], -lr, lsr #10
     d08:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
     d0c:	06050501 	streq	r0, [r5], -r1, lsl #10
     d10:	06090567 	streq	r0, [r9], -r7, ror #10
     d14:	1f0c0501 	svcne	0x000c0501
     d18:	06050520 	streq	r0, [r5], -r0, lsr #10
     d1c:	05206303 	streq	r6, [r0, #-771]!	; 0xfffffcfd
     d20:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     d24:	05e60605 	strbeq	r0, [r6, #1541]!	; 0x605
     d28:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     d2c:	05e60605 	strbeq	r0, [r6, #1541]!	; 0x605
     d30:	0001060c 	andeq	r0, r1, ip, lsl #12
     d34:	58040402 	stmdapl	r4, {r1, sl}
     d38:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     d3c:	05c82008 	strbeq	r2, [r8, #8]
     d40:	05500605 	ldrbeq	r0, [r0, #-1541]	; 0xfffff9fb
     d44:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     d48:	09030605 	stmdbeq	r3, {r0, r2, r9, sl}
     d4c:	0b0513d6 	bleq	145cac <__RAM_SIZE+0x45cac>
     d50:	0e050106 	adfeqs	f0, f5, f6
     d54:	420a0581 	andmi	r0, sl, #541065216	; 0x20400000
     d58:	36060305 	strcc	r0, [r6], -r5, lsl #6
     d5c:	01060705 	tsteq	r6, r5, lsl #14
     d60:	59060305 	stmdbpl	r6, {r0, r2, r8, r9}
     d64:	01061705 	tsteq	r6, r5, lsl #14
     d68:	6627052e 	strtvs	r0, [r7], -lr, lsr #10
     d6c:	05580a05 	ldrbeq	r0, [r8, #-2565]	; 0xfffff5fb
     d70:	05830603 	streq	r0, [r3, #1539]	; 0x603
     d74:	2e010611 	mcrcs	6, 0, r0, cr1, cr1, {0}
     d78:	21060305 	tstcs	r6, r5, lsl #6
     d7c:	01060e05 	tsteq	r6, r5, lsl #28
     d80:	2e08052e 	cfsh32cs	mvfx0, mvfx8, #30
     d84:	84060305 	strhi	r0, [r6], #-773	; 0xfffffcfb
     d88:	01060605 	tsteq	r6, r5, lsl #12
     d8c:	06050520 	streq	r0, [r5], -r0, lsr #10
     d90:	0e05224b 	cdpeq	2, 0, cr2, cr5, cr11, {2}
     d94:	08050106 	stmdaeq	r5, {r1, r2, r8}
     d98:	06070558 			; <UNDEFINED> instruction: 0x06070558
     d9c:	0c051359 	stceq	3, cr1, [r5], {89}	; 0x59
     da0:	03051f06 	movweq	r1, #24326	; 0x5f06
     da4:	200b0306 	andcs	r0, fp, r6, lsl #6
     da8:	01060605 	tsteq	r6, r5, lsl #12
     dac:	21060505 	tstcs	r6, r5, lsl #10
     db0:	01061405 	tsteq	r6, r5, lsl #8
     db4:	58580a05 	ldmdapl	r8, {r0, r2, r9, fp}^
     db8:	21060505 	tstcs	r6, r5, lsl #10
     dbc:	01060805 	tsteq	r6, r5, lsl #16
     dc0:	02001805 	andeq	r1, r0, #327680	; 0x50000
     dc4:	05580204 	ldrbeq	r0, [r8, #-516]	; 0xfffffdfc
     dc8:	04020029 	streq	r0, [r2], #-41	; 0xffffffd7
     dcc:	07058203 	streq	r8, [r5, -r3, lsl #4]
     dd0:	20063f06 	andcs	r3, r6, r6, lsl #30
     dd4:	03060805 	movweq	r0, #26629	; 0x6805
     dd8:	0b052074 	bleq	148fb0 <__RAM_SIZE+0x48fb0>
     ddc:	08050106 	stmdaeq	r5, {r1, r2, r8}
     de0:	0b058406 	bleq	161e00 <__RAM_SIZE+0x61e00>
     de4:	19050106 	stmdbne	r5, {r1, r2, r8}
     de8:	01040200 	mrseq	r0, R12_usr
     dec:	06050520 	streq	r0, [r5], -r0, lsr #10
     df0:	0520063e 	streq	r0, [r0, #-1598]!	; 0xfffff9c2
     df4:	0e03060b 	cfmadd32eq	mvax0, mvfx0, mvfx3, mvfx11
     df8:	2f070520 	svccs	0x00070520
     dfc:	06270521 	strteq	r0, [r7], -r1, lsr #10
     e00:	900e0501 	andls	r0, lr, r1, lsl #10
     e04:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
     e08:	07052012 	smladeq	r5, r2, r0, r2
     e0c:	0a056706 	beq	15aa2c <__RAM_SIZE+0x5aa2c>
     e10:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
     e14:	1f0e052e 	svcne	0x000e052e
     e18:	060b052e 	streq	r0, [fp], -lr, lsr #10
     e1c:	00350526 	eorseq	r0, r5, r6, lsr #10
     e20:	06010402 	streq	r0, [r1], -r2, lsl #8
     e24:	002c052e 	eoreq	r0, ip, lr, lsr #10
     e28:	20010402 	andcs	r0, r1, r2, lsl #8
     e2c:	21060705 	tstcs	r6, r5, lsl #14
     e30:	01061205 	tsteq	r6, r5, lsl #4
     e34:	05653505 	strbeq	r3, [r5, #-1285]!	; 0xfffffafb
     e38:	0520210e 	streq	r2, [r0, #-270]!	; 0xfffffef2
     e3c:	05220605 	streq	r0, [r2, #-1541]!	; 0xfffff9fb
     e40:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     e44:	05300607 	ldreq	r0, [r0, #-1543]!	; 0xfffff9f9
     e48:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     e4c:	0520660e 	streq	r6, [r0, #-1550]!	; 0xfffff9f2
     e50:	05170609 	ldreq	r0, [r7, #-1545]	; 0xfffff9f7
     e54:	25052f05 	strcs	r2, [r5, #-3845]	; 0xfffff0fb
     e58:	0c050106 	stfeqs	f0, [r5], {6}
     e5c:	201205ac 	andscs	r0, r2, ip, lsr #11
     e60:	05201005 	streq	r1, [r0, #-5]!
     e64:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
     e68:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
     e6c:	0c052008 	stceq	0, cr2, [r5], {8}
     e70:	05c8081f 	strbeq	r0, [r8, #2079]	; 0x81f
     e74:	05270603 	streq	r0, [r7, #-1539]!	; 0xfffff9fd
     e78:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
     e7c:	03053c06 	movweq	r3, #23558	; 0x5c06
     e80:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
     e84:	01060605 	tsteq	r6, r5, lsl #12
     e88:	2f060505 	svccs	0x00060505
     e8c:	01060805 	tsteq	r6, r5, lsl #16
     e90:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     e94:	01061205 	tsteq	r6, r5, lsl #4
     e98:	05660e05 	strbeq	r0, [r6, #-3589]!	; 0xfffff1fb
     e9c:	0a030603 	beq	c26b0 <__HEAP_SIZE+0xc16b0>
     ea0:	060a0520 	streq	r0, [sl], -r0, lsr #10
     ea4:	c9010501 	stmdbgt	r1, {r0, r8, sl}
     ea8:	03060505 	movweq	r0, #25861	; 0x6505
     eac:	0805586b 	stmdaeq	r5, {r0, r1, r3, r5, r6, fp, ip, lr}
     eb0:	0f050106 	svceq	0x00050106
     eb4:	01040200 	mrseq	r0, R12_usr
     eb8:	001c052e 	andseq	r0, ip, lr, lsr #10
     ebc:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
     ec0:	4b060705 	blmi	182adc <__RAM_SIZE+0x82adc>
     ec4:	01060c05 	tsteq	r6, r5, lsl #24
     ec8:	0607053c 			; <UNDEFINED> instruction: 0x0607053c
     ecc:	06120531 			; <UNDEFINED> instruction: 0x06120531
     ed0:	660e0501 	strvs	r0, [lr], -r1, lsl #10
     ed4:	1f060b05 	svcne	0x00060b05
     ed8:	02001a05 	andeq	r1, r0, #20480	; 0x5000
     edc:	2e060104 	adfcss	f0, f6, f4
     ee0:	01040200 	mrseq	r0, R12_usr
     ee4:	060a053c 			; <UNDEFINED> instruction: 0x060a053c
     ee8:	054a0903 	strbeq	r0, [sl, #-2307]	; 0xfffff6fd
     eec:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     ef0:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
     ef4:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     ef8:	0520660e 	streq	r6, [r0, #-1550]!	; 0xfffff9f2
     efc:	0522060a 	streq	r0, [r2, #-1546]!	; 0xfffff9f6
     f00:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     f04:	054b0607 	strbeq	r0, [fp, #-1543]	; 0xfffff9f9
     f08:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     f0c:	0220660e 	eoreq	r6, r0, #14680064	; 0xe00000
     f10:	01010001 	tsteq	r1, r1
     f14:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     f18:	00141802 	andseq	r1, r4, r2, lsl #16
     f1c:	04c10310 	strbeq	r0, [r1], #784	; 0x310
     f20:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     f24:	13670603 	cmnne	r7, #3145728	; 0x300000
     f28:	06060514 			; <UNDEFINED> instruction: 0x06060514
     f2c:	03090501 	movweq	r0, #38145	; 0x9501
     f30:	204a01d3 	ldrdcs	r0, [sl], #-19	; 0xffffffed
     f34:	7eb20306 	cdpvc	3, 11, cr0, cr2, cr6, {0}
     f38:	060a0501 	streq	r0, [sl], -r1, lsl #10
     f3c:	2e090501 	cfsh32cs	mvfx0, mvfx9, #1
     f40:	3f060505 	svccc	0x00060505
     f44:	01060805 	tsteq	r6, r5, lsl #16
     f48:	30060705 	andcc	r0, r6, r5, lsl #14
     f4c:	4b062006 	blmi	188f6c <__RAM_SIZE+0x88f6c>
     f50:	01060d05 	tsteq	r6, r5, lsl #26
     f54:	3d060705 	stccc	7, cr0, [r6, #-20]	; 0xffffffec
     f58:	06221006 	strteq	r1, [r2], -r6
     f5c:	060d0524 	streq	r0, [sp], -r4, lsr #10
     f60:	06050501 	streq	r0, [r5], -r1, lsl #10
     f64:	060b0532 			; <UNDEFINED> instruction: 0x060b0532
     f68:	06050501 	streq	r0, [r5], -r1, lsl #10
     f6c:	13070521 	movwne	r0, #29985	; 0x7521
     f70:	01060f05 	tsteq	r6, r5, lsl #30
     f74:	052e0705 	streq	r0, [lr, #-1797]!	; 0xfffff8fb
     f78:	05ec060d 	strbeq	r0, [ip, #1549]!	; 0x60d
     f7c:	05131505 	ldreq	r1, [r3, #-1285]	; 0xfffffafb
     f80:	7ccd0314 	stclvc	3, cr0, [sp], {20}
     f84:	14030501 	strne	r0, [r3], #-1281	; 0xfffffaff
     f88:	01061605 	tsteq	r6, r5, lsl #12
     f8c:	0308053c 	movweq	r0, #34108	; 0x853c
     f90:	050103b1 	streq	r0, [r1, #-945]	; 0xfffffc4f
     f94:	0531060a 	ldreq	r0, [r1, #-1546]!	; 0xfffff9f6
     f98:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     f9c:	05052a0b 	streq	r2, [r5, #-2571]	; 0xfffff5f5
     fa0:	2e110306 	cdpcs	3, 1, cr0, cr1, cr6, {0}
     fa4:	06090513 			; <UNDEFINED> instruction: 0x06090513
     fa8:	2e080501 	cfsh32cs	mvfx0, mvfx8, #1
     fac:	052d0f05 	streq	r0, [sp, #-3845]!	; 0xfffff0fb
     fb0:	0f030605 	svceq	0x00030605
     fb4:	060d052e 	streq	r0, [sp], -lr, lsr #10
     fb8:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
     fbc:	03061305 	movweq	r1, #25349	; 0x6305
     fc0:	1905e456 	stmdbne	r5, {r1, r2, r4, r6, sl, sp, lr, pc}
     fc4:	2b050106 	blcs	1413e4 <__RAM_SIZE+0x413e4>
     fc8:	31052e06 	tstcc	r5, r6, lsl #28
     fcc:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
     fd0:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
     fd4:	190d0501 	stmdbne	sp, {r0, r8, sl}
     fd8:	7a031305 	bvc	c5bf4 <__HEAP_SIZE+0xc4bf4>
     fdc:	06190520 	ldreq	r0, [r9], -r0, lsr #10
     fe0:	062b0501 	strteq	r0, [fp], -r1, lsl #10
     fe4:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
     fe8:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
     fec:	013d052e 	teqeq	sp, lr, lsr #10
     ff0:	05180d05 	ldreq	r0, [r8, #-3333]	; 0xfffff2fb
     ff4:	19051b13 	stmdbne	r5, {r0, r1, r4, r8, r9, fp, ip}
     ff8:	2b050106 	blcs	141418 <__RAM_SIZE+0x41418>
     ffc:	31052e06 	tstcc	r5, r6, lsl #28
    1000:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    1004:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
    1008:	170d0501 	strne	r0, [sp, -r1, lsl #10]
    100c:	051c1305 	ldreq	r1, [ip, #-773]	; 0xfffffcfb
    1010:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    1014:	052e062b 	streq	r0, [lr, #-1579]!	; 0xfffff9d5
    1018:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    101c:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    1020:	0d05013d 	stfeqs	f0, [r5, #-244]	; 0xffffff0c
    1024:	1d130516 	cfldr32ne	mvfx0, [r3, #-88]	; 0xffffffa8
    1028:	01061905 	tsteq	r6, r5, lsl #18
    102c:	2e062b05 	vmlacs.f64	d2, d6, d5
    1030:	01063105 	tsteq	r6, r5, lsl #2
    1034:	2e063505 	cfsh32cs	mvfx3, mvfx6, #5
    1038:	05013d05 	streq	r3, [r1, #-3333]	; 0xfffff2fb
    103c:	0705150d 	streq	r1, [r5, -sp, lsl #10]
    1040:	060f0525 	streq	r0, [pc], -r5, lsr #10
    1044:	07054a01 	streq	r4, [r5, -r1, lsl #20]
    1048:	11052306 	tstne	r5, r6, lsl #6
    104c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1050:	0a054b06 	beq	153c70 <__RAM_SIZE+0x53c70>
    1054:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1058:	0f053306 	svceq	0x00053306
    105c:	07050106 	streq	r0, [r5, -r6, lsl #2]
    1060:	0d052206 	sfmeq	f2, 4, [r5, #-24]	; 0xffffffe8
    1064:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1068:	4a7a0306 	bmi	1e81c88 <__RAM_SIZE+0x1d81c88>
    106c:	01060f05 	tsteq	r6, r5, lsl #30
    1070:	2f060905 	svccs	0x00060905
    1074:	01061f05 	tsteq	r6, r5, lsl #30
    1078:	0705202e 	streq	r2, [r5, -lr, lsr #32]
    107c:	010b0306 	tsteq	fp, r6, lsl #6
    1080:	01060d05 	tsteq	r6, r5, lsl #26
    1084:	2f060705 	svccs	0x00060705
    1088:	01060d05 	tsteq	r6, r5, lsl #26
    108c:	2f060705 	svccs	0x00060705
    1090:	01060b05 	tsteq	r6, r5, lsl #22
    1094:	03061405 	movweq	r1, #25605	; 0x6405
    1098:	05207cb9 	streq	r7, [r0, #-3257]!	; 0xfffff347
    109c:	16051403 	strne	r1, [r5], -r3, lsl #8
    10a0:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
    10a4:	03c5030a 	biceq	r0, r5, #671088640	; 0x28000000
    10a8:	060c0501 	streq	r0, [ip], -r1, lsl #10
    10ac:	060f0531 			; <UNDEFINED> instruction: 0x060f0531
    10b0:	2e790301 	cdpcs	3, 7, cr0, cr9, cr1, {0}
    10b4:	41060905 	tstmi	r6, r5, lsl #18
    10b8:	01061505 	tsteq	r6, r5, lsl #10
    10bc:	0609054a 	streq	r0, [r9], -sl, asr #10
    10c0:	06130523 	ldreq	r0, [r3], -r3, lsr #10
    10c4:	06090501 	streq	r0, [r9], -r1, lsl #10
    10c8:	0633054b 	ldrteq	r0, [r3], -fp, asr #10
    10cc:	06090501 	streq	r0, [r9], -r1, lsl #10
    10d0:	060f052f 	streq	r0, [pc], -pc, lsr #10
    10d4:	09054a01 	stmdbeq	r5, {r0, r9, fp, lr}
    10d8:	0f051906 	svceq	0x00051906
    10dc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    10e0:	0f052f06 	svceq	0x00052f06
    10e4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    10e8:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    10ec:	0c050106 	stfeqs	f0, [r5], {6}
    10f0:	2c0f0520 	cfstr32cs	mvfx0, [pc], {32}
    10f4:	31060b05 	tstcc	r6, r5, lsl #22
    10f8:	01061105 	tsteq	r6, r5, lsl #2
    10fc:	2f060b05 	svccs	0x00060b05
    1100:	01061105 	tsteq	r6, r5, lsl #2
    1104:	40060905 	andmi	r0, r6, r5, lsl #18
    1108:	01060f05 	tsteq	r6, r5, lsl #30
    110c:	2f060905 	svccs	0x00060905
    1110:	01060f05 	tsteq	r6, r5, lsl #30
    1114:	2f060905 	svccs	0x00060905
    1118:	01060d05 	tsteq	r6, r5, lsl #26
    111c:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    1120:	0b052c0f 	bleq	14c164 <__RAM_SIZE+0x4c164>
    1124:	11053106 	tstne	r5, r6, lsl #2
    1128:	0b050106 	bleq	141548 <__RAM_SIZE+0x41548>
    112c:	11052f06 	tstne	r5, r6, lsl #30
    1130:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1134:	0f054106 	svceq	0x00054106
    1138:	09050106 	stmdbeq	r5, {r1, r2, r8}
    113c:	0f052f06 	svceq	0x00052f06
    1140:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1144:	05052f06 	streq	r2, [r5, #-3846]	; 0xfffff0fa
    1148:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
    114c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1150:	09052e05 	stmdbeq	r5, {r0, r2, r9, sl, fp, sp}
    1154:	02740306 	rsbseq	r0, r4, #402653184	; 0x18000000
    1158:	0f05015b 	svceq	0x0005015b
    115c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1160:	0f052f06 	svceq	0x00052f06
    1164:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1168:	05222f06 	streq	r2, [r2, #-3846]!	; 0xfffff0fa
    116c:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1170:	052f0609 	streq	r0, [pc, #-1545]!	; b6f <__Vectors_Size+0x3af>
    1174:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1178:	032f0609 			; <UNDEFINED> instruction: 0x032f0609
    117c:	0513200f 	ldreq	r2, [r3, #-15]
    1180:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1184:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
    1188:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
    118c:	11053106 	tstne	r5, r6, lsl #2
    1190:	0e050106 	adfeqs	f0, f5, f6
    1194:	11053106 	tstne	r5, r6, lsl #2
    1198:	0b050106 	bleq	1415b8 <__RAM_SIZE+0x415b8>
    119c:	05133206 	ldreq	r3, [r3, #-518]	; 0xfffffdfa
    11a0:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    11a4:	77032d10 	smladvc	r3, r0, sp, r2
    11a8:	0609052e 	streq	r0, [r9], -lr, lsr #10
    11ac:	05200d03 	streq	r0, [r0, #-3331]!	; 0xfffff2fd
    11b0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    11b4:	05330609 	ldreq	r0, [r3, #-1545]!	; 0xfffff9f7
    11b8:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    11bc:	0402001e 	streq	r0, [r2], #-30	; 0xffffffe2
    11c0:	0b052e01 	bleq	14c9cc <__RAM_SIZE+0x4c9cc>
    11c4:	11052f06 	tstne	r5, r6, lsl #30
    11c8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    11cc:	0c053206 	sfmeq	f3, 4, [r5], {6}
    11d0:	0b050106 	bleq	1415f0 <__RAM_SIZE+0x415f0>
    11d4:	11053d06 	tstne	r5, r6, lsl #26
    11d8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    11dc:	0c053206 	sfmeq	f3, 4, [r5], {6}
    11e0:	1e050106 	adfnes	f0, f5, f6
    11e4:	01040200 	mrseq	r0, R12_usr
    11e8:	060b052e 	streq	r0, [fp], -lr, lsr #10
    11ec:	052e1303 	streq	r1, [lr, #-771]!	; 0xfffffcfd
    11f0:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    11f4:	054f0610 	strbeq	r0, [pc, #-1552]	; bec <__Vectors_Size+0x42c>
    11f8:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    11fc:	054e060d 	strbeq	r0, [lr, #-1549]	; 0xfffff9f3
    1200:	05010667 	streq	r0, [r1, #-1639]	; 0xfffff999
    1204:	0d054a4e 	vstreq	s8, [r5, #-312]	; 0xfffffec8
    1208:	08040200 	stmdaeq	r4, {r9}
    120c:	13054b06 	movwne	r4, #23302	; 0x5b06
    1210:	08040200 	stmdaeq	r4, {r9}
    1214:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    1218:	00740804 	rsbseq	r0, r4, r4, lsl #16
    121c:	4a080402 	bmi	20222c <__RAM_SIZE+0x10222c>
    1220:	08040200 	stmdaeq	r4, {r9}
    1224:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    1228:	02002008 	andeq	r2, r0, #8
    122c:	05200804 	streq	r0, [r0, #-2052]!	; 0xfffff7fc
    1230:	01470310 	cmpeq	r7, r0, lsl r3
    1234:	0b053131 	bleq	14d700 <__RAM_SIZE+0x4d700>
    1238:	11053606 	tstne	r5, r6, lsl #12
    123c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    1240:	1003060b 	andne	r0, r3, fp, lsl #12
    1244:	060e0520 	streq	r0, [lr], -r0, lsr #10
    1248:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    124c:	06130542 	ldreq	r0, [r3], -r2, asr #10
    1250:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1254:	064c0541 	strbeq	r0, [ip], -r1, asr #10
    1258:	3c3c0501 	cfldr32cc	mvfx0, [ip], #-4
    125c:	02000d05 	andeq	r0, r0, #320	; 0x140
    1260:	4b060804 	blmi	183278 <__RAM_SIZE+0x83278>
    1264:	02003805 	andeq	r3, r0, #327680	; 0x50000
    1268:	01060804 	tsteq	r6, r4, lsl #16
    126c:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    1270:	004a0804 	subeq	r0, sl, r4, lsl #16
    1274:	74080402 	strvc	r0, [r8], #-1026	; 0xfffffbfe
    1278:	08040200 	stmdaeq	r4, {r9}
    127c:	0402003c 	streq	r0, [r2], #-60	; 0xffffffc4
    1280:	02005808 	andeq	r5, r0, #8, 16	; 0x80000
    1284:	05200804 	streq	r0, [r0, #-2052]!	; 0xfffff7fc
    1288:	12030609 	andne	r0, r3, #9437184	; 0x900000
    128c:	060f0501 	streq	r0, [pc], -r1, lsl #10
    1290:	06090501 	streq	r0, [r9], -r1, lsl #10
    1294:	030d053d 	movweq	r0, #54589	; 0xd53d
    1298:	1d052063 	stcne	0, cr2, [r5, #-396]	; 0xfffffe74
    129c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    12a0:	3d058306 	stccc	3, cr8, [r5, #-24]	; 0xffffffe8
    12a4:	13050106 	movwne	r0, #20742	; 0x5106
    12a8:	ac582e4a 	mrrcge	14, 4, r2, r8, cr10
    12ac:	203d0520 	eorscs	r0, sp, r0, lsr #10
    12b0:	4e060d05 	cdpmi	13, 0, cr0, cr6, cr5, {0}
    12b4:	01061805 	tsteq	r6, r5, lsl #16
    12b8:	4b060d05 	blmi	1846d4 <__RAM_SIZE+0x846d4>
    12bc:	01063805 	tsteq	r6, r5, lsl #16
    12c0:	9e4a1305 	cdpls	3, 4, cr1, cr10, cr5, {0}
    12c4:	81052058 	qaddhi	r2, r8, r5
    12c8:	04020001 	streq	r0, [r2], #-1
    12cc:	71052302 	tstvc	r5, r2, lsl #6
    12d0:	3c66053c 	cfstr64cc	mvdx0, [r6], #-240	; 0xffffff10
    12d4:	3c018105 	stfccd	f0, [r1], {5}
    12d8:	060d0558 			; <UNDEFINED> instruction: 0x060d0558
    12dc:	0613051a 			; <UNDEFINED> instruction: 0x0613051a
    12e0:	584a0801 	stmdapl	sl, {r0, fp}^
    12e4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    12e8:	06130524 	ldreq	r0, [r3], -r4, lsr #10
    12ec:	20909e01 	addscs	r9, r0, r1, lsl #28
    12f0:	0001ae05 	andeq	sl, r1, r5, lsl #28
    12f4:	23020402 	movwcs	r0, #9218	; 0x2402
    12f8:	3c019505 	cfstr32cc	mvfx9, [r1], {5}
    12fc:	5801ae05 	stmdapl	r1, {r0, r2, r9, sl, fp, sp, pc}
    1300:	06090558 			; <UNDEFINED> instruction: 0x06090558
    1304:	05010a03 	streq	r0, [r1, #-2563]	; 0xfffff5fd
    1308:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    130c:	052f0609 	streq	r0, [pc, #-1545]!	; d0b <__Vectors_Size+0x54b>
    1310:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1314:	67080609 	strvs	r0, [r8, -r9, lsl #12]
    1318:	01060f05 	tsteq	r6, r5, lsl #30
    131c:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    1320:	02001d05 	andeq	r1, r0, #320	; 0x140
    1324:	051d0104 	ldreq	r0, [sp, #-260]	; 0xfffffefc
    1328:	04020023 	streq	r0, [r2], #-35	; 0xffffffdd
    132c:	00010601 	andeq	r0, r1, r1, lsl #12
    1330:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    1334:	03060905 	movweq	r0, #26885	; 0x6905
    1338:	0c052009 	stceq	0, cr2, [r5], {9}
    133c:	1d050106 	stfnes	f0, [r5, #-24]	; 0xffffffe8
    1340:	02040200 	andeq	r0, r4, #0, 4
    1344:	0031052e 	eorseq	r0, r1, lr, lsr #10
    1348:	06030402 	streq	r0, [r3], -r2, lsl #8
    134c:	0037052e 	eorseq	r0, r7, lr, lsr #10
    1350:	06030402 	streq	r0, [r3], -r2, lsl #8
    1354:	06090501 	streq	r0, [r9], -r1, lsl #10
    1358:	060c052f 	streq	r0, [ip], -pc, lsr #10
    135c:	001d0501 	andseq	r0, sp, r1, lsl #10
    1360:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    1364:	02003105 	andeq	r3, r0, #1073741825	; 0x40000001
    1368:	2e060304 	cdpcs	3, 0, cr0, cr6, cr4, {0}
    136c:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    1370:	01060304 	tsteq	r6, r4, lsl #6
    1374:	2f060905 	svccs	0x00060905
    1378:	01060f05 	tsteq	r6, r5, lsl #30
    137c:	08060905 	stmdaeq	r6, {r0, r2, r8, fp}
    1380:	060f0567 	streq	r0, [pc], -r7, ror #10
    1384:	06090501 	streq	r0, [r9], -r1, lsl #10
    1388:	0514243d 	ldreq	r2, [r4, #-1085]	; 0xfffffbc3
    138c:	2e01060c 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx12
    1390:	051e1605 	ldreq	r1, [lr, #-1541]	; 0xfffff9fb
    1394:	05360609 	ldreq	r0, [r6, #-1545]!	; 0xfffff9f7
    1398:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    139c:	062e3c09 	strteq	r3, [lr], -r9, lsl #24
    13a0:	060c055a 			; <UNDEFINED> instruction: 0x060c055a
    13a4:	06090501 	streq	r0, [r9], -r1, lsl #10
    13a8:	060f0525 	streq	r0, [pc], -r5, lsr #10
    13ac:	06090501 	streq	r0, [r9], -r1, lsl #10
    13b0:	030d053d 	movweq	r0, #54589	; 0xd53d
    13b4:	2e062e74 	mcrcs	14, 0, r2, cr6, cr4, {3}
    13b8:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    13bc:	1105210d 	tstne	r5, sp, lsl #2
    13c0:	13051f06 	movwne	r1, #24326	; 0x5f06
    13c4:	11050106 	tstne	r5, r6, lsl #2
    13c8:	16052e2e 	strne	r2, [r5], -lr, lsr #28
    13cc:	3c2e3c2b 	stccc	12, cr3, [lr], #-172	; 0xffffff54
    13d0:	03060d05 	movweq	r0, #27909	; 0x6d05
    13d4:	2006200c 	andcs	r2, r6, ip
    13d8:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    13dc:	1105210d 	tstne	r5, sp, lsl #2
    13e0:	13051f06 	movwne	r1, #24326	; 0x5f06
    13e4:	11050106 	tstne	r5, r6, lsl #2
    13e8:	052e2e2e 	streq	r2, [lr, #-3630]!	; 0xfffff1d2
    13ec:	09030609 	stmdbeq	r3, {r0, r3, r9, sl}
    13f0:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    13f4:	06090501 	streq	r0, [r9], -r1, lsl #10
    13f8:	061a0559 			; <UNDEFINED> instruction: 0x061a0559
    13fc:	06260501 	strteq	r0, [r6], -r1, lsl #10
    1400:	747b9003 	ldrbtvc	r9, [fp], #-3
    1404:	05012205 	streq	r2, [r1, #-517]	; 0xfffffdfb
    1408:	052e061e 	streq	r0, [lr, #-1566]!	; 0xfffff9e2
    140c:	05200611 	streq	r0, [r0, #-1553]!	; 0xfffff9ef
    1410:	052e0603 	streq	r0, [lr, #-1539]!	; 0xfffff9fd
    1414:	1405201e 	strne	r2, [r5], #-30	; 0xffffffe2
    1418:	06030520 	streq	r0, [r3], -r0, lsr #10
    141c:	061b052f 	ldreq	r0, [fp], -pc, lsr #10
    1420:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    1424:	04f10306 	ldrbteq	r0, [r1], #774	; 0x306
    1428:	060c0501 	streq	r0, [ip], -r1, lsl #10
    142c:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1430:	060d054b 	streq	r0, [sp], -fp, asr #10
    1434:	06090501 	streq	r0, [r9], -r1, lsl #10
    1438:	060c053e 			; <UNDEFINED> instruction: 0x060c053e
    143c:	202e4a01 	eorcs	r4, lr, r1, lsl #20
    1440:	1b1a0520 	blne	6828c8 <__RAM_SIZE+0x5828c8>
    1444:	0d052e2e 	stceq	14, cr2, [r5, #-184]	; 0xffffff48
    1448:	2e063506 	cfsh32cs	mvfx3, mvfx6, #6
    144c:	05491305 	strbeq	r1, [r9, #-773]	; 0xfffffcfb
    1450:	1105210d 	tstne	r5, sp, lsl #2
    1454:	13051f06 	movwne	r1, #24326	; 0x5f06
    1458:	11050106 	tstne	r5, r6, lsl #2
    145c:	2e130520 	cfmul64cs	mvdx0, mvdx3, mvdx0
    1460:	4505203c 	strmi	r2, [r5, #-60]	; 0xffffffc4
    1464:	060b0525 	streq	r0, [fp], -r5, lsr #10
    1468:	06120521 	ldreq	r0, [r2], -r1, lsr #10
    146c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
    1470:	060f0520 	streq	r0, [pc], -r0, lsr #10
    1474:	06110549 	ldreq	r0, [r1], -r9, asr #10
    1478:	2e0f0501 	cfsh32cs	mvfx0, mvfx15, #1
    147c:	02001a05 	andeq	r1, r0, #20480	; 0x5000
    1480:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
    1484:	04020045 	streq	r0, [r2], #-69	; 0xffffffbb
    1488:	39052e02 	stmdbcc	r5, {r1, r9, sl, fp, sp}
    148c:	02040200 	andeq	r0, r4, #0, 4
    1490:	320c0520 	andcc	r0, ip, #32, 10	; 0x8000000
    1494:	2e060905 	vmlacs.f16	s0, s12, s10	; <UNPREDICTABLE>
    1498:	01060c05 	tsteq	r6, r5, lsl #24
    149c:	33060905 	movwcc	r0, #26885	; 0x6905
    14a0:	01060f05 	tsteq	r6, r5, lsl #30
    14a4:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    14a8:	052e2006 	streq	r2, [lr, #-6]!
    14ac:	061c060d 	ldreq	r0, [ip], -sp, lsl #12
    14b0:	49130520 	ldmdbmi	r3, {r5, r8, sl}
    14b4:	05210d05 	streq	r0, [r1, #-3333]!	; 0xfffff2fb
    14b8:	051f0611 	ldreq	r0, [pc, #-1553]	; eaf <__Vectors_Size+0x6ef>
    14bc:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    14c0:	202e2e11 	eorcs	r2, lr, r1, lsl lr
    14c4:	06090520 	streq	r0, [r9], -r0, lsr #10
    14c8:	13010903 	movwne	r0, #6403	; 0x1903
    14cc:	01060f05 	tsteq	r6, r5, lsl #30
    14d0:	30060905 	andcc	r0, r6, r5, lsl #18
    14d4:	170b0513 	smladne	fp, r3, r5, r0
    14d8:	01065105 	tsteq	r6, r5, lsl #2
    14dc:	054a1105 	strbeq	r1, [sl, #-261]	; 0xfffffefb
    14e0:	16080609 	strne	r0, [r8], -r9, lsl #12
    14e4:	01060f05 	tsteq	r6, r5, lsl #30
    14e8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    14ec:	16062006 	strne	r2, [r6], -r6
    14f0:	59062006 	stmdbpl	r6, {r1, r2, sp}
    14f4:	01060f05 	tsteq	r6, r5, lsl #30
    14f8:	3d060905 	vstrcc.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    14fc:	06221006 	strteq	r1, [r2], -r6
    1500:	06200623 	strteq	r0, [r0], -r3, lsr #12
    1504:	060f054b 	streq	r0, [pc], -fp, asr #10
    1508:	06090501 	streq	r0, [r9], -r1, lsl #10
    150c:	2210063d 	andscs	r0, r0, #63963136	; 0x3d00000
    1510:	207df803 	rsbscs	pc, sp, r3, lsl #16
    1514:	03060305 	movweq	r0, #25349	; 0x6305
    1518:	002e028d 	eoreq	r0, lr, sp, lsl #5
    151c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1520:	02002e2e 	andeq	r2, r0, #736	; 0x2e0
    1524:	00200404 	eoreq	r0, r0, r4, lsl #8
    1528:	06040402 	streq	r0, [r4], -r2, lsl #8
    152c:	0001054d 	andeq	r0, r1, sp, asr #10
    1530:	06040402 	streq	r0, [r4], -r2, lsl #8
    1534:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
    1538:	03024a04 	movweq	r4, #10756	; 0x2a04
    153c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1540:	02050001 	andeq	r0, r5, #1
    1544:	10001a98 	mulne	r0, r8, sl
    1548:	01019503 	tsteq	r1, r3, lsl #10
    154c:	05130305 	ldreq	r0, [r3, #-773]	; 0xfffffcfb
    1550:	1c050111 	stfnes	f0, [r5], {17}
    1554:	13030501 	movwne	r0, #13569	; 0x3501
    1558:	01060605 	tsteq	r6, r5, lsl #12
    155c:	052c0105 	streq	r0, [ip, #-261]!	; 0xfffffefb
    1560:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    1564:	02300601 	eorseq	r0, r0, #1048576	; 0x100000
    1568:	01010001 	tsteq	r1, r1
    156c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1570:	001aa402 	andseq	sl, sl, r2, lsl #8
    1574:	06de0310 			; <UNDEFINED> instruction: 0x06de0310
    1578:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    157c:	13670603 	cmnne	r7, #3145728	; 0x300000
    1580:	13051321 	movwne	r1, #21281	; 0x5321
    1584:	03050106 	movweq	r0, #20742	; 0x5106
    1588:	05137506 	ldreq	r7, [r3, #-1286]	; 0xfffffafa
    158c:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1590:	01010008 	tsteq	r1, r8
    1594:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1598:	00000002 	andeq	r0, r0, r2
    159c:	06e90300 	strbteq	r0, [r9], r0, lsl #6
    15a0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    15a4:	13750603 	cmnne	r5, #3145728	; 0x300000
    15a8:	06130521 	ldreq	r0, [r3], -r1, lsr #10
    15ac:	03054a01 	movweq	r4, #23041	; 0x5a01
    15b0:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    15b4:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    15b8:	01010008 	tsteq	r1, r8
    15bc:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    15c0:	00000002 	andeq	r0, r0, r2
    15c4:	06f30300 	ldrbteq	r0, [r3], r0, lsl #6
    15c8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    15cc:	13750603 	cmnne	r5, #3145728	; 0x300000
    15d0:	06130521 	ldreq	r0, [r3], -r1, lsr #10
    15d4:	05202e01 	streq	r2, [r0, #-3585]!	; 0xfffff1ff
    15d8:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    15dc:	13060105 	movwne	r0, #24837	; 0x6105
    15e0:	01000702 	tsteq	r0, r2, lsl #14
    15e4:	00010501 	andeq	r0, r1, r1, lsl #10
    15e8:	00000205 	andeq	r0, r0, r5, lsl #4
    15ec:	fd030000 	stc2	0, cr0, [r3, #-0]
    15f0:	01060106 	tsteq	r6, r6, lsl #2
    15f4:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    15f8:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
    15fc:	05204a01 	streq	r4, [r0, #-2561]!	; 0xfffff5ff
    1600:	06022f01 	streq	r2, [r2], -r1, lsl #30
    1604:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1608:	02050001 	andeq	r0, r5, #1
    160c:	00000000 	andeq	r0, r0, r0
    1610:	01078403 	tsteq	r7, r3, lsl #8
    1614:	03050106 	movweq	r0, #20742	; 0x5106
    1618:	0a052f06 	beq	14d238 <__RAM_SIZE+0x4d238>
    161c:	202e0106 	eorcs	r0, lr, r6, lsl #2
    1620:	01052020 	tsteq	r5, r0, lsr #32
    1624:	0005022f 	andeq	r0, r5, pc, lsr #4
    1628:	01050101 	tsteq	r5, r1, lsl #2
    162c:	00020500 	andeq	r0, r2, r0, lsl #10
    1630:	03000000 	movweq	r0, #0
    1634:	0601078a 	streq	r0, [r1], -sl, lsl #15
    1638:	06030501 	streq	r0, [r3], -r1, lsl #10
    163c:	05211367 	streq	r1, [r1, #-871]!	; 0xfffffc99
    1640:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    1644:	052f0603 	streq	r0, [pc, #-1539]!	; 1049 <__HEAP_SIZE+0x49>
    1648:	58010613 	stmdapl	r1, {r0, r1, r4, r9, sl}
    164c:	2f060305 	svccs	0x00060305
    1650:	06010513 			; <UNDEFINED> instruction: 0x06010513
    1654:	00080213 	andeq	r0, r8, r3, lsl r2
    1658:	03380101 	teqeq	r8, #1073741824	; 0x40000000
    165c:	00030000 	andeq	r0, r3, r0
    1660:	000001cc 	andeq	r0, r0, ip, asr #3
    1664:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1668:	0101000d 	tsteq	r1, sp
    166c:	00000101 	andeq	r0, r0, r1, lsl #2
    1670:	00000100 	andeq	r0, r0, r0, lsl #2
    1674:	2f2e2e01 	svccs	0x002e2e01
    1678:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    167c:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1680:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    1684:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    1688:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    168c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    1690:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    1694:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    1698:	5f6d7261 	svcpl	0x006d7261
    169c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    16a0:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    16a4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    16a8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    16ac:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    16b0:	30312d69 	eorscc	r2, r1, r9, ror #26
    16b4:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    16b8:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    16bc:	615c3031 	cmpvs	ip, r1, lsr r0
    16c0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    16c4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    16c8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    16cc:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    16d0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    16d4:	63616d5c 	cmnvs	r1, #92, 26	; 0x1700
    16d8:	656e6968 	strbvs	r6, [lr, #-2408]!	; 0xfffff698
    16dc:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    16e0:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    16e4:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    16e8:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    16ec:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    16f0:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    16f4:	5f6d7261 	svcpl	0x006d7261
    16f8:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    16fc:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    1700:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1704:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    1708:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    170c:	30312d69 	eorscc	r2, r1, r9, ror #26
    1710:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    1714:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    1718:	6c5c3031 	mrrcvs	0, 3, r3, ip, cr1
    171c:	675c6269 	ldrbvs	r6, [ip, -r9, ror #4]
    1720:	615c6363 	cmpvs	ip, r3, ror #6
    1724:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1728:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    172c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1730:	2e30315c 	mrccs	1, 1, r3, cr0, cr12, {2}
    1734:	5c312e33 	ldcpl	14, cr2, [r1], #-204	; 0xffffff34
    1738:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    173c:	00656475 	rsbeq	r6, r5, r5, ror r4
    1740:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1744:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1748:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    174c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1750:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1754:	615c6d61 	cmpvs	ip, r1, ror #26
    1758:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    175c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1760:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1764:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1768:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    176c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1770:	2e30312d 	rsfcssp	f3, f0, #5.0
    1774:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1778:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    177c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1780:	6f6e2d6d 	svcvs	0x006e2d6d
    1784:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1788:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    178c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1790:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    1794:	00737973 	rsbseq	r7, r3, r3, ror r9
    1798:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    179c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    17a0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    17a4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    17a8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    17ac:	615c6d61 	cmpvs	ip, r1, ror #26
    17b0:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    17b4:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    17b8:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    17bc:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    17c0:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    17c4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    17c8:	2e30312d 	rsfcssp	f3, f0, #5.0
    17cc:	30322d33 	eorscc	r2, r2, r3, lsr sp
    17d0:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    17d4:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    17d8:	6f6e2d6d 	svcvs	0x006e2d6d
    17dc:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    17e0:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    17e4:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    17e8:	00656475 	rsbeq	r6, r5, r5, ror r4
    17ec:	72617500 	rsbvc	r7, r1, #0, 10
    17f0:	00632e74 	rsbeq	r2, r3, r4, ror lr
    17f4:	5f000001 	svcpl	0x00000001
    17f8:	61666564 	cmnvs	r6, r4, ror #10
    17fc:	5f746c75 	svcpl	0x00746c75
    1800:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    1804:	00682e73 	rsbeq	r2, r8, r3, ror lr
    1808:	73000002 	movwvc	r0, #2
    180c:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
    1810:	00682e66 	rsbeq	r2, r8, r6, ror #28
    1814:	5f000003 	svcpl	0x00000003
    1818:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    181c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
    1820:	00000400 	andeq	r0, r0, r0, lsl #8
    1824:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    1828:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    182c:	00000005 	andeq	r0, r0, r5
    1830:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    1834:	001ad002 	andseq	sp, sl, r2
    1838:	011c0310 	tsteq	ip, r0, lsl r3
    183c:	02002405 	andeq	r2, r0, #83886080	; 0x5000000
    1840:	05130104 	ldreq	r0, [r3, #-260]	; 0xfffffefc
    1844:	0402000b 	streq	r0, [r2], #-11
    1848:	0c050101 	stfeqs	f0, [r5], {1}
    184c:	01040200 	mrseq	r0, R12_usr
    1850:	0b050106 	bleq	141c70 <__RAM_SIZE+0x41c70>
    1854:	01040200 	mrseq	r0, R12_usr
    1858:	0605052e 	streq	r0, [r5], -lr, lsr #10
    185c:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    1860:	06050501 	streq	r0, [r5], -r1, lsl #10
    1864:	0601052f 	streq	r0, [r1], -pc, lsr #10
    1868:	00030213 	andeq	r0, r3, r3, lsl r2
    186c:	14050101 	strne	r0, [r5], #-257	; 0xfffffeff
    1870:	00020500 	andeq	r0, r2, r0, lsl #10
    1874:	03000000 	movweq	r0, #0
    1878:	2b050122 	blcs	141d08 <__RAM_SIZE+0x41d08>
    187c:	01040200 	mrseq	r0, R12_usr
    1880:	000b0513 	andeq	r0, fp, r3, lsl r5
    1884:	01010402 	tsteq	r1, r2, lsl #8
    1888:	02000d05 	andeq	r0, r0, #320	; 0x140
    188c:	01060104 	tsteq	r6, r4, lsl #2
    1890:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    1894:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1898:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    189c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    18a0:	03022f01 	movweq	r2, #12033	; 0x2f01
    18a4:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    18a8:	0205001e 	andeq	r0, r5, #30
    18ac:	10001ae4 	andne	r1, r0, r4, ror #21
    18b0:	06012703 	streq	r2, [r1], -r3, lsl #14
    18b4:	06050501 	streq	r0, [r5], -r1, lsl #10
    18b8:	0905132f 	stmdbeq	r5, {r0, r1, r2, r3, r5, r8, r9, ip}
    18bc:	0b051106 	bleq	145cdc <__RAM_SIZE+0x45cdc>
    18c0:	06090521 	streq	r0, [r9], -r1, lsr #10
    18c4:	0e052f21 	cdpeq	15, 0, cr2, cr5, cr1, {1}
    18c8:	0b050106 	bleq	141ce8 <__RAM_SIZE+0x41ce8>
    18cc:	12051e06 	andne	r1, r5, #6, 28	; 0x60
    18d0:	0b050106 	bleq	141cf0 <__RAM_SIZE+0x41cf0>
    18d4:	06050520 	streq	r0, [r5], -r0, lsr #10
    18d8:	01053d32 	tsteq	r5, r2, lsr sp
    18dc:	002e1306 	eoreq	r1, lr, r6, lsl #6
    18e0:	16050101 	strne	r0, [r5], -r1, lsl #2
    18e4:	04020500 	streq	r0, [r2], #-1280	; 0xfffffb00
    18e8:	0310001b 	tsteq	r0, #27
    18ec:	05050131 	streq	r0, [r5, #-305]	; 0xfffffecf
    18f0:	06160513 			; <UNDEFINED> instruction: 0x06160513
    18f4:	06050501 	streq	r0, [r5], -r1, lsl #10
    18f8:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    18fc:	06050501 	streq	r0, [r5], -r1, lsl #10
    1900:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    1904:	06050501 	streq	r0, [r5], -r1, lsl #10
    1908:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    190c:	06050501 	streq	r0, [r5], -r1, lsl #10
    1910:	0616053d 			; <UNDEFINED> instruction: 0x0616053d
    1914:	06050501 	streq	r0, [r5], -r1, lsl #10
    1918:	0616052f 	ldreq	r0, [r6], -pc, lsr #10
    191c:	2f010501 	svccs	0x00010501
    1920:	01000402 	tsteq	r0, r2, lsl #8
    1924:	00240501 	eoreq	r0, r4, r1, lsl #10
    1928:	00000205 	andeq	r0, r0, r5, lsl #4
    192c:	3a030000 	bcc	c1934 <__HEAP_SIZE+0xc0934>
    1930:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1934:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1938:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
    193c:	01010001 	tsteq	r1, r1
    1940:	05003005 	streq	r3, [r0, #-5]
    1944:	00000002 	andeq	r0, r0, r2
    1948:	013e0300 	teqeq	lr, r0, lsl #6
    194c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1950:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    1954:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1958:	05340609 	ldreq	r0, [r4, #-1545]!	; 0xfffff9f7
    195c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    1960:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    1964:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1968:	7a03060b 	bvc	c319c <__HEAP_SIZE+0xc219c>
    196c:	01050520 	tsteq	r5, r0, lsr #10
    1970:	05130905 	ldreq	r0, [r3, #-2309]	; 0xfffff6fb
    1974:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1978:	09052e0c 	stmdbeq	r5, {r2, r3, r9, sl, fp, sp}
    197c:	0b052106 	bleq	149d9c <__RAM_SIZE+0x49d9c>
    1980:	17050106 	strne	r0, [r5, -r6, lsl #2]
    1984:	01040200 	mrseq	r0, R12_usr
    1988:	0605052e 	streq	r0, [r5], -lr, lsr #10
    198c:	06010534 			; <UNDEFINED> instruction: 0x06010534
    1990:	00202013 	eoreq	r2, r0, r3, lsl r0
    1994:	06460101 	strbeq	r0, [r6], -r1, lsl #2
    1998:	00030000 	andeq	r0, r3, r0
    199c:	0000025b 	andeq	r0, r0, fp, asr r2
    19a0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    19a4:	0101000d 	tsteq	r1, sp
    19a8:	00000101 	andeq	r0, r0, r1, lsl #2
    19ac:	00000100 	andeq	r0, r0, r0, lsl #2
    19b0:	2f2e2e01 	svccs	0x002e2e01
    19b4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    19b8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    19bc:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
    19c0:	662f736c 	strtvs	r7, [pc], -ip, ror #6
    19c4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    19c8:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
    19cc:	72732f70 	rsbsvc	r2, r3, #112, 30	; 0x1c0
    19d0:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    19d4:	6972442f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, sl, lr}^
    19d8:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    19dc:	534d432f 	movtpl	r4, #54063	; 0xd32f
    19e0:	355f5349 	ldrbcc	r5, [pc, #-841]	; 169f <__HEAP_SIZE+0x69f>
    19e4:	534d432f 	movtpl	r4, #54063	; 0xd32f
    19e8:	432f5349 			; <UNDEFINED> instruction: 0x432f5349
    19ec:	2f65726f 	svccs	0x0065726f
    19f0:	6c636e49 	stclvs	14, cr6, [r3], #-292	; 0xfffffedc
    19f4:	00656475 	rsbeq	r6, r5, r5, ror r4
    19f8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    19fc:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1a00:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1a04:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1a08:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1a0c:	615c6d61 	cmpvs	ip, r1, ror #26
    1a10:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1a14:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1a18:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1a1c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1a20:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1a24:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1a28:	2e30312d 	rsfcssp	f3, f0, #5.0
    1a2c:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1a30:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1a34:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1a38:	6f6e2d6d 	svcvs	0x006e2d6d
    1a3c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1a40:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1a44:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1a48:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    1a4c:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    1a50:	00656e69 	rsbeq	r6, r5, r9, ror #28
    1a54:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1a58:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1a5c:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1a60:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1a64:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1a68:	615c6d61 	cmpvs	ip, r1, ror #26
    1a6c:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1a70:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1a74:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1a78:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1a7c:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1a80:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1a84:	2e30312d 	rsfcssp	f3, f0, #5.0
    1a88:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1a8c:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1a90:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
    1a94:	63675c62 	cmnvs	r7, #25088	; 0x6200
    1a98:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
    1a9c:	6f6e2d6d 	svcvs	0x006e2d6d
    1aa0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1aa4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1aa8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1aac:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
    1ab0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1ab4:	63006564 	movwvs	r6, #1380	; 0x564
    1ab8:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1abc:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1ac0:	6f646978 	svcvs	0x00646978
    1ac4:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    1ac8:	6172676f 	cmnvs	r2, pc, ror #14
    1acc:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1ad0:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1ad4:	63675c63 	cmnvs	r7, #25344	; 0x6300
    1ad8:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1adc:	6f6e2d6d 	svcvs	0x006e2d6d
    1ae0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1ae4:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    1ae8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1aec:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1af0:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1af4:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1af8:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1afc:	61652d65 	cmnvs	r5, r5, ror #26
    1b00:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    1b04:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1b08:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    1b0c:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    1b10:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1b14:	2f2e2e2f 	svccs	0x002e2e2f
    1b18:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    1b1c:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    1b20:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    1b24:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    1b28:	2f706d75 	svccs	0x00706d75
    1b2c:	00636e69 	rsbeq	r6, r3, r9, ror #28
    1b30:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    1b34:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    1b38:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    1b3c:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    1b40:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    1b44:	615c6d61 	cmpvs	ip, r1, ror #26
    1b48:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    1b4c:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    1b50:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    1b54:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    1b58:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    1b5c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    1b60:	2e30312d 	rsfcssp	f3, f0, #5.0
    1b64:	30322d33 	eorscc	r2, r2, r3, lsr sp
    1b68:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    1b6c:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    1b70:	6f6e2d6d 	svcvs	0x006e2d6d
    1b74:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1b78:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    1b7c:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    1b80:	00656475 	rsbeq	r6, r5, r5, ror r4
    1b84:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    1b88:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    1b8c:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
    1b90:	00010063 	andeq	r0, r1, r3, rrx
    1b94:	736d6300 	cmnvc	sp, #0, 6
    1b98:	675f7369 	ldrbvs	r7, [pc, -r9, ror #6]
    1b9c:	682e6363 	stmdavs	lr!, {r0, r1, r5, r6, r8, r9, sp, lr}
    1ba0:	00000200 	andeq	r0, r0, r0, lsl #4
    1ba4:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    1ba8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    1bac:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    1bb0:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    1bb4:	00000300 	andeq	r0, r0, r0, lsl #6
    1bb8:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    1bbc:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    1bc0:	00000400 	andeq	r0, r0, r0, lsl #8
    1bc4:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    1bc8:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    1bcc:	00050068 	andeq	r0, r5, r8, rrx
    1bd0:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    1bd4:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    1bd8:	2e706d75 	mrccs	13, 3, r6, cr0, cr5, {3}
    1bdc:	00060068 	andeq	r0, r6, r8, rrx
    1be0:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    1be4:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    1be8:	00000700 	andeq	r0, r0, r0, lsl #14
    1bec:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    1bf0:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    1bf4:	00003e6e 	andeq	r3, r0, lr, ror #28
    1bf8:	05000000 	streq	r0, [r0, #-0]
    1bfc:	02050038 	andeq	r0, r5, #56	; 0x38
    1c00:	10001b28 	andne	r1, r0, r8, lsr #22
    1c04:	01018103 	tsteq	r1, r3, lsl #2
    1c08:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1c0c:	0e052106 	adfeqs	f2, f5, f6
    1c10:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1c14:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1c18:	0505010a 	streq	r0, [r5, #-266]	; 0xfffffef6
    1c1c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1c20:	03040200 	movweq	r0, #16896	; 0x4200
    1c24:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
    1c28:	03040200 	movweq	r0, #16896	; 0x4200
    1c2c:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    1c30:	03040200 	movweq	r0, #16896	; 0x4200
    1c34:	003d052e 	eorseq	r0, sp, lr, lsr #10
    1c38:	06030402 	streq	r0, [r3], -r2, lsl #8
    1c3c:	003e0557 	eorseq	r0, lr, r7, asr r5
    1c40:	06030402 	streq	r0, [r3], -r2, lsl #8
    1c44:	00150501 	andseq	r0, r5, r1, lsl #10
    1c48:	06010402 	streq	r0, [r1], -r2, lsl #8
    1c4c:	00050520 	andeq	r0, r5, r0, lsr #10
    1c50:	06010402 	streq	r0, [r1], -r2, lsl #8
    1c54:	05310601 	ldreq	r0, [r1, #-1537]!	; 0xfffff9ff
    1c58:	2f010622 	svccs	0x00010622
    1c5c:	2f060505 	svccs	0x00060505
    1c60:	13060105 	movwne	r0, #24837	; 0x6105
    1c64:	0002022e 	andeq	r0, r2, lr, lsr #4
    1c68:	33050101 	movwcc	r0, #20737	; 0x5101
    1c6c:	54020500 	strpl	r0, [r2], #-1280	; 0xfffffb00
    1c70:	0310001b 	tsteq	r0, #27
    1c74:	0501018c 	streq	r0, [r1, #-396]	; 0xfffffe74
    1c78:	0e051605 	cfmadd32eq	mvax0, mvfx1, mvfx5, mvfx5
    1c7c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1c80:	32052f06 	andcc	r2, r5, #6, 30
    1c84:	0e050106 	adfeqs	f0, f5, f6
    1c88:	06050520 	streq	r0, [r5], -r0, lsr #10
    1c8c:	0608052f 	streq	r0, [r8], -pc, lsr #10
    1c90:	00260501 	eoreq	r0, r6, r1, lsl #10
    1c94:	3c010402 	cfstrscc	mvf0, [r1], {2}
    1c98:	3f060505 	svccc	0x00060505
    1c9c:	01060805 	tsteq	r6, r5, lsl #16
    1ca0:	02002605 	andeq	r2, r0, #5242880	; 0x500000
    1ca4:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
    1ca8:	05203f0c 	streq	r3, [r0, #-3852]!	; 0xfffff0f4
    1cac:	20201b10 	eorcs	r1, r0, r0, lsl fp
    1cb0:	20202320 	eorcs	r2, r0, r0, lsr #6
    1cb4:	02230105 	eoreq	r0, r3, #1073741825	; 0x40000001
    1cb8:	01010001 	tsteq	r1, r1
    1cbc:	05007305 	streq	r7, [r0, #-773]	; 0xfffffcfb
    1cc0:	001b8c02 	andseq	r8, fp, r2, lsl #24
    1cc4:	01ee0310 	mvneq	r0, r0, lsl r3
    1cc8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1ccc:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    1cd0:	06080513 			; <UNDEFINED> instruction: 0x06080513
    1cd4:	001a0501 	andseq	r0, sl, r1, lsl #10
    1cd8:	58010402 	stmdapl	r1, {r1, sl}
    1cdc:	23060505 	movwcs	r0, #25861	; 0x6505
    1ce0:	01040200 	mrseq	r0, R12_usr
    1ce4:	09052006 	stmdbeq	r5, {r1, r2, sp}
    1ce8:	00050529 	andeq	r0, r5, r9, lsr #10
    1cec:	06020402 	streq	r0, [r2], -r2, lsl #8
    1cf0:	04020036 	streq	r0, [r2], #-54	; 0xffffffca
    1cf4:	02002001 	andeq	r2, r0, #1
    1cf8:	20060304 	andcs	r0, r6, r4, lsl #6
    1cfc:	30060905 	andcc	r0, r6, r5, lsl #18
    1d00:	01060c05 	tsteq	r6, r5, lsl #24
    1d04:	22060905 	andcs	r0, r6, #81920	; 0x14000
    1d08:	01061305 	tsteq	r6, r5, lsl #6
    1d0c:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    1d10:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
    1d14:	26052e01 	strcs	r2, [r5], -r1, lsl #28
    1d18:	01040200 	mrseq	r0, R12_usr
    1d1c:	06090520 	streq	r0, [r9], -r0, lsr #10
    1d20:	060c0532 			; <UNDEFINED> instruction: 0x060c0532
    1d24:	06090501 	streq	r0, [r9], -r1, lsl #10
    1d28:	0c051440 	cfstrseq	mvf1, [r5], {64}	; 0x40
    1d2c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1d30:	0c053006 	stceq	0, cr3, [r5], {6}
    1d34:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1d38:	0e052406 	cdpeq	4, 0, cr2, cr5, cr6, {0}
    1d3c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1d40:	0e053e06 	cdpeq	14, 0, cr3, cr5, cr6, {0}
    1d44:	0c050106 	stfeqs	f0, [r5], {6}
    1d48:	0609052e 	streq	r0, [r9], -lr, lsr #10
    1d4c:	06170532 			; <UNDEFINED> instruction: 0x06170532
    1d50:	06090501 	streq	r0, [r9], -r1, lsl #10
    1d54:	060f052f 	streq	r0, [pc], -pc, lsr #10
    1d58:	06090501 	streq	r0, [r9], -r1, lsl #10
    1d5c:	060c0521 	streq	r0, [ip], -r1, lsr #10
    1d60:	33010501 	movwcc	r0, #5377	; 0x1501
    1d64:	5a031005 	bpl	c5d80 <__HEAP_SIZE+0xc4d80>
    1d68:	583f3c3c 	ldmdapl	pc!, {r2, r3, r4, r5, sl, fp, ip, sp}	; <UNPREDICTABLE>
    1d6c:	01000602 	tsteq	r0, r2, lsl #12
    1d70:	00360501 	eorseq	r0, r6, r1, lsl #10
    1d74:	1c080205 	sfmne	f0, 4, [r8], {5}
    1d78:	9b031000 	blls	c5d80 <__HEAP_SIZE+0xc4d80>
    1d7c:	01060101 	tsteq	r6, r1, lsl #2
    1d80:	2f060505 	svccs	0x00060505
    1d84:	30062e06 	andcc	r2, r6, r6, lsl #28
    1d88:	06010513 			; <UNDEFINED> instruction: 0x06010513
    1d8c:	0202203e 	andeq	r2, r2, #62	; 0x3e
    1d90:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1d94:	02050036 	andeq	r0, r5, #54	; 0x36
    1d98:	10001c20 	andne	r1, r0, r0, lsr #24
    1d9c:	0101a303 	tsteq	r1, r3, lsl #6
    1da0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1da4:	13142106 	tstne	r4, #-2147483647	; 0x80000001
    1da8:	01060e05 	tsteq	r6, r5, lsl #28
    1dac:	32060505 	andcc	r0, r6, #20971520	; 0x1400000
    1db0:	13060105 	movwne	r0, #24837	; 0x6105
    1db4:	01000102 	tsteq	r0, r2, lsl #2
    1db8:	001c0501 	andseq	r0, ip, r1, lsl #10
    1dbc:	1c280205 	sfmne	f0, 4, [r8], #-20	; 0xffffffec
    1dc0:	f6031000 			; <UNDEFINED> instruction: 0xf6031000
    1dc4:	05050100 	streq	r0, [r5, #-256]	; 0xffffff00
    1dc8:	061a0521 	ldreq	r0, [sl], -r1, lsr #10
    1dcc:	20180501 	andscs	r0, r8, r1, lsl #10
    1dd0:	2f060505 	svccs	0x00060505
    1dd4:	01061a05 	tsteq	r6, r5, lsl #20
    1dd8:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    1ddc:	4c2f0605 	stcmi	6, cr0, [pc], #-20	; 1dd0 <__HEAP_SIZE+0xdd0>
    1de0:	06010568 	streq	r0, [r1], -r8, ror #10
    1de4:	0013024c 	andseq	r0, r3, ip, asr #4
    1de8:	43050101 	movwmi	r0, #20737	; 0x5101
    1dec:	78020500 	stmdavc	r2, {r8, sl}
    1df0:	0310001c 	tsteq	r0, #28
    1df4:	060101ae 	streq	r0, [r1], -lr, lsr #3
    1df8:	06050501 	streq	r0, [r5], -r1, lsl #10
    1dfc:	1313133d 	tstne	r3, #-201326592	; 0xf4000000
    1e00:	06180514 			; <UNDEFINED> instruction: 0x06180514
    1e04:	20160501 	andscs	r0, r6, r1, lsl #10
    1e08:	2f060505 	svccs	0x00060505
    1e0c:	01061805 	tsteq	r6, r5, lsl #16
    1e10:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    1e14:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1e18:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1e1c:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    1e20:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    1e24:	16050106 	strne	r0, [r5], -r6, lsl #2
    1e28:	06050520 	streq	r0, [r5], -r0, lsr #10
    1e2c:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    1e30:	20160501 	andscs	r0, r6, r1, lsl #10
    1e34:	21060505 	tstcs	r6, r5, lsl #10
    1e38:	01061805 	tsteq	r6, r5, lsl #16
    1e3c:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    1e40:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1e44:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1e48:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    1e4c:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    1e50:	16050106 	strne	r0, [r5], -r6, lsl #2
    1e54:	06050520 	streq	r0, [r5], -r0, lsr #10
    1e58:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    1e5c:	20160501 	andscs	r0, r6, r1, lsl #10
    1e60:	21060505 	tstcs	r6, r5, lsl #10
    1e64:	01061805 	tsteq	r6, r5, lsl #16
    1e68:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    1e6c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1e70:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1e74:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    1e78:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    1e7c:	16050106 	strne	r0, [r5], -r6, lsl #2
    1e80:	06050520 	streq	r0, [r5], -r0, lsr #10
    1e84:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    1e88:	20160501 	andscs	r0, r6, r1, lsl #10
    1e8c:	21060505 	tstcs	r6, r5, lsl #10
    1e90:	01061805 	tsteq	r6, r5, lsl #16
    1e94:	05201605 	streq	r1, [r0, #-1541]!	; 0xfffff9fb
    1e98:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1e9c:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    1ea0:	05052016 	streq	r2, [r5, #-22]	; 0xffffffea
    1ea4:	18052106 	stmdane	r5, {r1, r2, r8, sp}
    1ea8:	16050106 	strne	r0, [r5], -r6, lsl #2
    1eac:	06050520 	streq	r0, [r5], -r0, lsr #10
    1eb0:	062e0622 	strteq	r0, [lr], -r2, lsr #12
    1eb4:	4b3d3d2f 	blmi	f51378 <__RAM_SIZE+0xe51378>
    1eb8:	4b4b4b4b 	blmi	12d4bec <__RAM_SIZE+0x11d4bec>
    1ebc:	4b4b4b4b 	blmi	12d4bf0 <__RAM_SIZE+0x11d4bf0>
    1ec0:	4b4b4b4b 	blmi	12d4bf4 <__RAM_SIZE+0x11d4bf4>
    1ec4:	3d4b4b4b 	vstrcc	d20, [fp, #-300]	; 0xfffffed4
    1ec8:	0905143e 	stmdbeq	r5, {r1, r2, r3, r4, r5, sl, ip}
    1ecc:	08050106 	stmdaeq	r5, {r1, r2, r8}
    1ed0:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
    1ed4:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    1ed8:	06050501 	streq	r0, [r5], -r1, lsl #10
    1edc:	06200697 			; <UNDEFINED> instruction: 0x06200697
    1ee0:	1005592f 	andne	r5, r5, pc, lsr #18
    1ee4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    1ee8:	06090520 	streq	r0, [r9], -r0, lsr #10
    1eec:	0611051b 			; <UNDEFINED> instruction: 0x0611051b
    1ef0:	09058201 	stmdbeq	r5, {r0, r9, pc}
    1ef4:	03040200 	movweq	r0, #16896	; 0x4200
    1ef8:	24052606 	strcs	r2, [r5], #-1542	; 0xfffff9fa
    1efc:	03040200 	movweq	r0, #16896	; 0x4200
    1f00:	00290565 	eoreq	r0, r9, r5, ror #10
    1f04:	06030402 	streq	r0, [r3], -r2, lsl #8
    1f08:	00150501 	andseq	r0, r5, r1, lsl #10
    1f0c:	06010402 	streq	r0, [r1], -r2, lsl #8
    1f10:	00050520 	andeq	r0, r5, r0, lsr #10
    1f14:	06010402 	streq	r0, [r1], -r2, lsl #8
    1f18:	00310601 	eorseq	r0, r1, r1, lsl #12
    1f1c:	3d010402 	cfstrscc	mvf0, [r1, #-8]
    1f20:	02000e05 	andeq	r0, r0, #5, 28	; 0x50
    1f24:	05010104 	streq	r0, [r1, #-260]	; 0xfffffefc
    1f28:	0402000b 	streq	r0, [r2], #-11
    1f2c:	36020101 	strcc	r0, [r2], -r1, lsl #2
    1f30:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1f34:	0205002e 	andeq	r0, r5, #46	; 0x2e
    1f38:	10001e24 	andne	r1, r0, r4, lsr #28
    1f3c:	01029a03 	tsteq	r2, r3, lsl #20
    1f40:	04130505 	ldreq	r0, [r3], #-1285	; 0xfffffafb
    1f44:	031f0502 	tsteq	pc, #8388608	; 0x800000
    1f48:	050106c7 	streq	r0, [r1, #-1735]	; 0xfffff939
    1f4c:	2f141403 	svccs	0x00141403
    1f50:	01040106 	tsteq	r4, r6, lsl #2
    1f54:	b5030105 	strlt	r0, [r3, #-261]	; 0xfffffefb
    1f58:	01020179 	tsteq	r2, r9, ror r1
    1f5c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1f60:	0205002e 	andeq	r0, r5, #46	; 0x2e
    1f64:	10001e2c 	andne	r1, r0, ip, lsr #28
    1f68:	01029e03 	tsteq	r2, r3, lsl #28
    1f6c:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    1f70:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1f74:	01010004 	tsteq	r1, r4
    1f78:	05002905 	streq	r2, [r0, #-2309]	; 0xfffff6fb
    1f7c:	00000002 	andeq	r0, r0, r2
    1f80:	02a20300 	adceq	r0, r2, #0, 6
    1f84:	13050501 	movwne	r0, #21761	; 0x5501
    1f88:	13060105 	movwne	r0, #24837	; 0x6105
    1f8c:	01000402 	tsteq	r0, r2, lsl #8
    1f90:	00290501 	eoreq	r0, r9, r1, lsl #10
    1f94:	00000205 	andeq	r0, r0, r5, lsl #4
    1f98:	a6030000 	strge	r0, [r3], -r0
    1f9c:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    1fa0:	06010513 			; <UNDEFINED> instruction: 0x06010513
    1fa4:	00040213 	andeq	r0, r4, r3, lsl r2
    1fa8:	38050101 	stmdacc	r5, {r0, r8}
    1fac:	00020500 	andeq	r0, r2, r0, lsl #10
    1fb0:	03000000 	movweq	r0, #0
    1fb4:	050102aa 	streq	r0, [r1, #-682]	; 0xfffffd56
    1fb8:	05131305 	ldreq	r1, [r3, #-773]	; 0xfffffcfb
    1fbc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1fc0:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    1fc4:	0501061d 	streq	r0, [r1, #-1565]	; 0xfffff9e3
    1fc8:	052f0609 	streq	r0, [pc, #-1545]!	; 19c7 <__HEAP_SIZE+0x9c7>
    1fcc:	20010610 	andcs	r0, r1, r0, lsl r6
    1fd0:	051d0905 	ldreq	r0, [sp, #-2309]	; 0xfffff6fb
    1fd4:	05250605 	streq	r0, [r5, #-1541]!	; 0xfffff9fb
    1fd8:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1fdc:	01010004 	tsteq	r1, r4
    1fe0:	000002cf 	andeq	r0, r0, pc, asr #5
    1fe4:	01c50003 	biceq	r0, r5, r3
    1fe8:	01020000 	mrseq	r0, (UNDEF: 2)
    1fec:	000d0efb 	strdeq	r0, [sp], -fp
    1ff0:	01010101 	tsteq	r1, r1, lsl #2
    1ff4:	01000000 	mrseq	r0, (UNDEF: 0)
    1ff8:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    1ffc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2000:	2f2e2e2f 	svccs	0x002e2e2f
    2004:	7562696c 	strbvc	r6, [r2, #-2412]!	; 0xfffff694
    2008:	736c6974 	cmnvc	ip, #116, 18	; 0x1d0000
    200c:	7561662f 	strbvc	r6, [r1, #-1583]!	; 0xfffff9d1
    2010:	642d746c 	strtvs	r7, [sp], #-1132	; 0xfffffb94
    2014:	2f706d75 	svccs	0x00706d75
    2018:	2f757063 	svccs	0x00757063
    201c:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    2020:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
    2024:	63003333 	movwvs	r3, #819	; 0x333
    2028:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    202c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    2030:	6f646978 	svcvs	0x00646978
    2034:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    2038:	6172676f 	cmnvs	r2, pc, ror #14
    203c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    2040:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    2044:	63675c63 	cmnvs	r7, #25344	; 0x6300
    2048:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    204c:	6f6e2d6d 	svcvs	0x006e2d6d
    2050:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    2054:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    2058:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    205c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    2060:	30312e31 	eorscc	r2, r1, r1, lsr lr
    2064:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    2068:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    206c:	61652d65 	cmnvs	r5, r5, ror #26
    2070:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    2074:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    2078:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    207c:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    2080:	6300656e 	movwvs	r6, #1390	; 0x56e
    2084:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    2088:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    208c:	6f646978 	svcvs	0x00646978
    2090:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    2094:	6172676f 	cmnvs	r2, pc, ror #14
    2098:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    209c:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    20a0:	63675c63 	cmnvs	r7, #25344	; 0x6300
    20a4:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    20a8:	6f6e2d6d 	svcvs	0x006e2d6d
    20ac:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    20b0:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    20b4:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    20b8:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    20bc:	30312e31 	eorscc	r2, r1, r1, lsr lr
    20c0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    20c4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    20c8:	61652d65 	cmnvs	r5, r5, ror #26
    20cc:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    20d0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    20d4:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    20d8:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
    20dc:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
    20e0:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
    20e4:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
    20e8:	5f534953 	svcpl	0x00534953
    20ec:	4d432f35 	stclmi	15, cr2, [r3, #-212]	; 0xffffff2c
    20f0:	2f534953 	svccs	0x00534953
    20f4:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
    20f8:	636e492f 	cmnvs	lr, #770048	; 0xbc000
    20fc:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2100:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    2104:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    2108:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    210c:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    2110:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    2114:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    2118:	5f6d7261 	svcpl	0x006d7261
    211c:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    2120:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    2124:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    2128:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    212c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2130:	30312d69 	eorscc	r2, r1, r9, ror #26
    2134:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    2138:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    213c:	615c3031 	cmpvs	ip, r1, lsr r0
    2140:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2144:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    2148:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    214c:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    2150:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    2154:	61660000 	cmnvs	r6, r0
    2158:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    215c:	2e6c6168 	powcsez	f6, f4, #0.0
    2160:	00010063 	andeq	r0, r1, r3, rrx
    2164:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    2168:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    216c:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2170:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    2174:	00020068 	andeq	r0, r2, r8, rrx
    2178:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    217c:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    2180:	0300682e 	movweq	r6, #2094	; 0x82e
    2184:	6f630000 	svcvs	0x00630000
    2188:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
    218c:	2e33336d 	cdpcs	3, 3, cr3, cr3, cr13, {3}
    2190:	00040068 	andeq	r0, r4, r8, rrx
    2194:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    2198:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    219c:	00000500 	andeq	r0, r0, r0, lsl #10
    21a0:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    21a4:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    21a8:	00003e6e 	andeq	r3, r0, lr, ror #28
    21ac:	05000000 	streq	r0, [r0, #-0]
    21b0:	02050035 	andeq	r0, r5, #53	; 0x35
    21b4:	10001e34 	andne	r1, r0, r4, lsr lr
    21b8:	06010e03 	streq	r0, [r1], -r3, lsl #28
    21bc:	06050501 	streq	r0, [r5], -r1, lsl #10
    21c0:	0620062f 	strteq	r0, [r0], -pc, lsr #12
    21c4:	08053d2f 	stmdaeq	r5, {r0, r1, r2, r3, r5, r8, sl, fp, ip, sp}
    21c8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    21cc:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    21d0:	08053d40 	stmdaeq	r5, {r6, r8, sl, fp, ip, sp}
    21d4:	09050106 	stmdbeq	r5, {r1, r2, r8}
    21d8:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    21dc:	08053d40 	stmdaeq	r5, {r6, r8, sl, fp, ip, sp}
    21e0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    21e4:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    21e8:	08053d40 	stmdaeq	r5, {r6, r8, sl, fp, ip, sp}
    21ec:	09050106 	stmdbeq	r5, {r1, r2, r8}
    21f0:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    21f4:	08053d40 	stmdaeq	r5, {r6, r8, sl, fp, ip, sp}
    21f8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    21fc:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    2200:	08053d40 	stmdaeq	r5, {r6, r8, sl, fp, ip, sp}
    2204:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2208:	05053d06 	streq	r3, [r5, #-3334]	; 0xfffff2fa
    220c:	06010540 	streq	r0, [r1], -r0, asr #10
    2210:	0609053d 			; <UNDEFINED> instruction: 0x0609053d
    2214:	50205f03 	eorpl	r5, r0, r3, lsl #30
    2218:	50505050 	subspl	r5, r0, r0, asr r0
    221c:	01002b02 	tsteq	r0, r2, lsl #22
    2220:	00340501 	eorseq	r0, r4, r1, lsl #10
    2224:	1f300205 	svcne	0x00300205
    2228:	37031000 	strcc	r1, [r3, -r0]
    222c:	13050501 	movwne	r0, #21761	; 0x5501
    2230:	01060805 	tsteq	r6, r5, lsl #16
    2234:	203d1005 	eorscs	r1, sp, r5
    2238:	22010522 	andcs	r0, r1, #142606336	; 0x8800000
    223c:	01000102 	tsteq	r0, r2, lsl #2
    2240:	00200501 	eoreq	r0, r0, r1, lsl #10
    2244:	00000205 	andeq	r0, r0, r5, lsl #4
    2248:	3f030000 	svccc	0x00030000
    224c:	21050501 	tstcs	r5, r1, lsl #10
    2250:	060e0514 			; <UNDEFINED> instruction: 0x060e0514
    2254:	06050501 	streq	r0, [r5], -r1, lsl #10
    2258:	01051359 	tsteq	r5, r9, asr r3
    225c:	06024b06 	streq	r4, [r2], -r6, lsl #22
    2260:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    2264:	0205001f 	andeq	r0, r5, #31
    2268:	10001f40 	andne	r1, r0, r0, asr #30
    226c:	0100c703 	tsteq	r0, r3, lsl #14
    2270:	132f0505 			; <UNDEFINED> instruction: 0x132f0505
    2274:	01061205 	tsteq	r6, r5, lsl #4
    2278:	2f060505 	svccs	0x00060505
    227c:	01060e05 	tsteq	r6, r5, lsl #28
    2280:	59060505 	stmdbpl	r6, {r0, r2, r8, sl}
    2284:	060d0513 			; <UNDEFINED> instruction: 0x060d0513
    2288:	200b0501 	andcs	r0, fp, r1, lsl #10
    228c:	21060505 	tstcs	r6, r5, lsl #10
    2290:	0d051367 	stceq	3, cr1, [r5, #-412]	; 0xfffffe64
    2294:	0b050106 	bleq	1426b4 <__RAM_SIZE+0x426b4>
    2298:	06050520 	streq	r0, [r5], -r0, lsr #10
    229c:	05135921 	ldreq	r5, [r3, #-2337]	; 0xfffff6df
    22a0:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    22a4:	05052e0b 	streq	r2, [r5, #-3595]	; 0xfffff1f5
    22a8:	01052106 	tsteq	r5, r6, lsl #2
    22ac:	06025906 	streq	r5, [r2], -r6, lsl #18
    22b0:	82010100 	andhi	r0, r1, #0, 2
    22b4:	03000000 	movweq	r0, #0
    22b8:	00003600 	andeq	r3, r0, r0, lsl #12
    22bc:	fb010200 	blx	42ac6 <__HEAP_SIZE+0x41ac6>
    22c0:	01000d0e 	tsteq	r0, lr, lsl #26
    22c4:	00010101 	andeq	r0, r1, r1, lsl #2
    22c8:	00010000 	andeq	r0, r1, r0
    22cc:	2f2e0100 	svccs	0x002e0100
    22d0:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    22d4:	2f707574 	svccs	0x00707574
    22d8:	00636367 	rsbeq	r6, r3, r7, ror #6
    22dc:	61747300 	cmnvs	r4, r0, lsl #6
    22e0:	70757472 	rsbsvc	r7, r5, r2, ror r4
    22e4:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
    22e8:	33334d43 	teqcc	r3, #4288	; 0x10c0
    22ec:	0100732e 	tsteq	r0, lr, lsr #6
    22f0:	00000000 	andeq	r0, r0, r0
    22f4:	1fac0205 	svcne	0x00ac0205
    22f8:	d3031000 	movwle	r1, #12288	; 0x3000
    22fc:	30210100 	eorcc	r0, r1, r0, lsl #2
    2300:	30362f21 	eorscc	r2, r6, r1, lsr #30
    2304:	21212321 			; <UNDEFINED> instruction: 0x21212321
    2308:	23212121 			; <UNDEFINED> instruction: 0x23212121
    230c:	21212121 			; <UNDEFINED> instruction: 0x21212121
    2310:	21232122 			; <UNDEFINED> instruction: 0x21232122
    2314:	21212123 			; <UNDEFINED> instruction: 0x21212123
    2318:	21232121 			; <UNDEFINED> instruction: 0x21232121
    231c:	21222121 			; <UNDEFINED> instruction: 0x21222121
    2320:	2e0e0323 	cdpcs	3, 0, cr0, cr14, cr3, {1}
    2324:	03200903 			; <UNDEFINED> instruction: 0x03200903
    2328:	312e7faf 			; <UNDEFINED> instruction: 0x312e7faf
    232c:	2f2e0c03 	svccs	0x002e0c03
    2330:	2f2e1503 	svccs	0x002e1503
    2334:	01000202 	tsteq	r0, r2, lsl #4
    2338:	00008001 	andeq	r8, r0, r1
    233c:	4e000300 	cdpmi	3, 0, cr0, cr0, cr0, {0}
    2340:	02000000 	andeq	r0, r0, #0
    2344:	0d0efb01 	vstreq	d15, [lr, #-4]
    2348:	01010100 	mrseq	r0, (UNDEF: 17)
    234c:	00000001 	andeq	r0, r0, r1
    2350:	01000001 	tsteq	r0, r1
    2354:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2358:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    235c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2360:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
    2364:	61662f73 	smcvs	25331	; 0x62f3
    2368:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
    236c:	706d7564 	rsbvc	r7, sp, r4, ror #10
    2370:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
    2374:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    2378:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
    237c:	0033336d 	eorseq	r3, r3, sp, ror #6
    2380:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
    2384:	672d746c 	strvs	r7, [sp, -ip, ror #8]!
    2388:	732e6363 			; <UNDEFINED> instruction: 0x732e6363
    238c:	00000100 	andeq	r0, r0, r0, lsl #2
    2390:	02050000 	andeq	r0, r5, #0
    2394:	1000201c 	andne	r2, r0, ip, lsl r0
    2398:	21011903 	tstcs	r1, r3, lsl #18
    239c:	22212121 	eorcs	r2, r1, #1073741832	; 0x40000008
    23a0:	212f222f 			; <UNDEFINED> instruction: 0x212f222f
    23a4:	2f222121 	svccs	0x00222121
    23a8:	312f222f 			; <UNDEFINED> instruction: 0x312f222f
    23ac:	2f212122 	svccs	0x00212122
    23b0:	20640321 	rsbcs	r0, r4, r1, lsr #6
    23b4:	2e170330 	mrccs	3, 0, r0, cr7, cr0, {1}
    23b8:	01000202 	tsteq	r0, r2, lsl #4
    23bc:	Address 0x000023bc is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
void Default_Handler(void) {
   0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    printf("%s\n", __func__);
   4:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
}
   8:	625f706d 	subsvs	r7, pc, #109	; 0x6d
   c:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
  10:	5f6b6361 	svcpl	0x006b6361
        if(ch == '\n' || it >= size) {
  14:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
  18:	6f630074 	svcvs	0x00630074
}
  1c:	00746e75 	rsbseq	r6, r4, r5, ror lr
  20:	555c3a43 	ldrbpl	r3, [ip, #-2627]	; 0xfffff5bd
  24:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  28:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
  2c:	635c6e6f 	cmpvs	ip, #1776	; 0x6f0
  30:	5c65646f 	cfstrdpl	mvd6, [r5], #-444	; 0xfffffe44
  34:	68746967 	ldmdavs	r4!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
  38:	715c6275 	cmpvc	ip, r5, ror r2
  3c:	2d756d65 	ldclcs	13, cr6, [r5, #-404]!	; 0xfffffe6c
  40:	756d6973 	strbvc	r6, [sp, #-2419]!	; 0xfffff68d
  44:	6f74616c 	svcvs	0x0074616c
  48:	6f625c72 	svcvs	0x00625c72
  4c:	73647261 	cmnvc	r4, #268435462	; 0x10000006
  50:	73706d5c 	cmnvc	r0, #92, 26	; 0x1700
  54:	6e612d32 	mcrvs	13, 3, r2, cr1, cr2, {1}
  58:	5c353035 	ldcpl	0, cr3, [r5], #-212	; 0xffffff2c
  5c:	65726142 	ldrbvs	r6, [r2, #-322]!	; 0xfffffebe
  60:	6174654d 	cmnvs	r4, sp, asr #10
  64:	5f5f006c 	svcpl	0x005f006c
  68:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
  6c:	2e005f5f 	mcrcs	15, 0, r5, cr0, cr15, {2}
  70:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
  74:	6163696c 	cmnvs	r3, ip, ror #18
  78:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
  7c:	69616d2f 	stmdbvs	r1!, {r0, r1, r2, r3, r5, r8, sl, fp, sp, lr}^
  80:	00632e6e 	rsbeq	r2, r3, lr, ror #28
  84:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
  88:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
  8c:	5f5f0074 	svcpl	0x005f0074
  90:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
  94:	5f6e6974 	svcpl	0x006e6974
  98:	73747570 	cmnvc	r4, #112, 10	; 0x1c000000
  9c:	736e7500 	cmnvc	lr, #0, 10
  a0:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  a4:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
  a8:	5f007261 	svcpl	0x00007261
  ac:	6975625f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
  b0:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
  b4:	6d656d5f 	stclvs	13, cr6, [r5, #-380]!	; 0xfffffe84
  b8:	00746573 	rsbseq	r6, r4, r3, ror r5
  bc:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
  c0:	6e752074 	mrcvs	0, 3, r2, cr5, cr4, {3}
  c4:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
  c8:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
  cc:	4700746e 	strmi	r7, [r0, -lr, ror #8]
  d0:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
  d4:	31203731 			; <UNDEFINED> instruction: 0x31203731
  d8:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
  dc:	30322031 	eorscc	r2, r2, r1, lsr r0
  e0:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  e4:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  e8:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  ec:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
  f0:	636d2d20 	cmnvs	sp, #32, 26	; 0x800
  f4:	633d7570 	teqvs	sp, #112, 10	; 0x1c000000
  f8:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
  fc:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
 100:	6d2d2033 	stcvs	0, cr2, [sp, #-204]!	; 0xffffff34
 104:	3d757066 	ldclcc	0, cr7, [r5, #-408]!	; 0xfffffe68
 108:	35767066 	ldrbcc	r7, [r6, #-102]!	; 0xffffff9a
 10c:	2d70732d 	ldclcs	3, cr7, [r0, #-180]!	; 0xffffff4c
 110:	20363164 	eorscs	r3, r6, r4, ror #2
 114:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
 118:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
 11c:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
 120:	64726168 	ldrbtvs	r6, [r2], #-360	; 0xfffffe98
 124:	746d2d20 	strbtvc	r2, [sp], #-3360	; 0xfffff2e0
 128:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
 12c:	616d2d20 	cmnvs	sp, r0, lsr #26
 130:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
 134:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
 138:	2e6d2d38 	mcrcs	13, 3, r2, cr13, cr8, {1}
 13c:	6e69616d 	powvsez	f6, f1, #5.0
 140:	7073642b 	rsbsvc	r6, r3, fp, lsr #8
 144:	2070662b 	rsbscs	r6, r0, fp, lsr #12
 148:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
 14c:	61776467 	cmnvs	r7, r7, ror #8
 150:	322d6672 	eorcc	r6, sp, #119537664	; 0x7200000
 154:	674f2d20 	strbvs	r2, [pc, -r0, lsr #26]
 158:	64662d20 	strbtvs	r2, [r6], #-3360	; 0xfffff2e0
 15c:	2d617461 	cfstrdcs	mvd7, [r1, #-388]!	; 0xfffffe7c
 160:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
 164:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 168:	66662d20 	strbtvs	r2, [r6], -r0, lsr #26
 16c:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
 170:	2d6e6f69 	stclcs	15, cr6, [lr, #-420]!	; 0xfffffe5c
 174:	74636573 	strbtvc	r6, [r3], #-1395	; 0xfffffa8d
 178:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 17c:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
 180:	78652d6f 	stmdavc	r5!, {r0, r1, r2, r3, r5, r6, r8, sl, fp, sp}^
 184:	74706563 	ldrbtvc	r6, [r0], #-1379	; 0xfffffa9d
 188:	736e6f69 	cmnvc	lr, #420	; 0x1a4
 18c:	72614800 	rsbvc	r4, r1, #0, 16
 190:	75614664 	strbvc	r4, [r1, #-1636]!	; 0xfffff99c
 194:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 198:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
 19c:	4c5f7265 	lfmmi	f7, 2, [pc], {101}	; 0x65
 1a0:	6e656765 	cdpvs	7, 6, cr6, cr5, cr5, {3}
 1a4:	6d007963 	vstrvs.16	s14, [r0, #-198]	; 0xffffff3a	; <UNPREDICTABLE>
 1a8:	006e6961 	rsbeq	r6, lr, r1, ror #18
 1ac:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 1b0:	6f6c0034 	svcvs	0x006c0034
 1b4:	6c20676e 	stcvs	7, cr6, [r0], #-440	; 0xfffffe48
 1b8:	20676e6f 	rsbcs	r6, r7, pc, ror #28
 1bc:	69736e75 	ldmdbvs	r3!, {r0, r2, r4, r5, r6, r9, sl, fp, sp, lr}^
 1c0:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
 1c4:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
 1c8:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
 1cc:	6f642067 	svcvs	0x00642067
 1d0:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
 1d4:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
 1d8:	6f6c2067 	svcvs	0x006c2067
 1dc:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 1e0:	4400746e 	strmi	r7, [r0], #-1134	; 0xfffffb92
 1e4:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
 1e8:	485f746c 	ldmdami	pc, {r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
 1ec:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
 1f0:	66007265 	strvs	r7, [r0], -r5, ror #4
 1f4:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 1f8:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
 1fc:	6e755f70 	mrcvs	15, 3, r5, cr5, cr0, {3}
 200:	67696c61 	strbvs	r6, [r9, -r1, ror #24]!
 204:	6166006e 	cmnvs	r6, lr, rrx
 208:	5f746c75 	svcpl	0x00746c75
 20c:	706d7564 	rsbvc	r7, sp, r4, ror #10
 210:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 214:	68730074 	ldmdavs	r3!, {r2, r4, r5, r6}^
 218:	2074726f 	rsbscs	r7, r4, pc, ror #4
 21c:	00746e69 	rsbseq	r6, r4, r9, ror #28
 220:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 224:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
 228:	625f706d 	subsvs	r7, pc, #109	; 0x6d
 22c:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
 230:	5f6b6361 	svcpl	0x006b6361
 234:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
 238:	65740074 	ldrbvs	r0, [r4, #-116]!	; 0xffffff8c
 23c:	00307473 	eorseq	r7, r0, r3, ror r4
 240:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 244:	65740031 	ldrbvs	r0, [r4, #-49]!	; 0xffffffcf
 248:	00327473 	eorseq	r7, r2, r3, ror r4
 24c:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
 250:	61660033 	cmnvs	r6, r3, lsr r0
 254:	5f746c75 	svcpl	0x00746c75
 258:	706d7564 	rsbvc	r7, sp, r4, ror #10
 25c:	6c61635f 	stclvs	3, cr6, [r1], #-380	; 0xfffffe84
 260:	6174736c 	cmnvs	r4, ip, ror #6
 264:	74006b63 	strvc	r6, [r0], #-2915	; 0xfffff49d
 268:	35747365 	ldrbcc	r7, [r4, #-869]!	; 0xfffffc9b
 26c:	612f2e00 			; <UNDEFINED> instruction: 0x612f2e00
 270:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
 274:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
 278:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
 27c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
 280:	52415f6d 	subpl	r5, r1, #436	; 0x1b4
 284:	334d434d 	movtcc	r4, #54093	; 0xd34d
 288:	00632e33 	rsbeq	r2, r3, r3, lsr lr
 28c:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
 290:	5f38746e 	svcpl	0x0038746e
 294:	54530074 	ldrbpl	r0, [r3], #-116	; 0xffffff8c
 298:	44005249 	strmi	r5, [r0], #-585	; 0xfffffdb7
 29c:	564d4943 	strbpl	r4, [sp], -r3, asr #18
 2a0:	43004341 	movwmi	r4, #833	; 0x341
 2a4:	5244494c 	subpl	r4, r4, #76, 18	; 0x130000
 2a8:	55504300 	ldrbpl	r4, [r0, #-768]	; 0xfffffd00
 2ac:	42004449 	andmi	r4, r0, #1224736768	; 0x49000000
 2b0:	4c414950 	mcrrmi	9, 5, r4, r1, cr0	; <UNPREDICTABLE>
 2b4:	4449004c 	strbmi	r0, [r9], #-76	; 0xffffffb4
 2b8:	5246505f 	subpl	r5, r6, #95	; 0x5f
 2bc:	43434400 	movtmi	r4, #13312	; 0x3400
 2c0:	00575349 	subseq	r5, r7, r9, asr #6
 2c4:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
 2c8:	6f436d65 	svcvs	0x00436d65
 2cc:	6c436572 	cfstr64vs	mvdx6, [r3], {114}	; 0x72
 2d0:	556b636f 	strbpl	r6, [fp, #-879]!	; 0xfffffc91
 2d4:	74616470 	strbtvc	r6, [r1], #-1136	; 0xfffffb90
 2d8:	44490065 	strbmi	r0, [r9], #-101	; 0xffffff9b
 2dc:	464d4d5f 			; <UNDEFINED> instruction: 0x464d4d5f
 2e0:	43490052 	movtmi	r0, #36946	; 0x9052
 2e4:	4c4c4149 	stfmie	f4, [ip], {73}	; 0x49
 2e8:	46420055 			; <UNDEFINED> instruction: 0x46420055
 2ec:	5f005241 	svcpl	0x00005241
 2f0:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
 2f4:	5f323374 	svcpl	0x00323374
 2f8:	43530074 	cmpmi	r3, #116	; 0x74
 2fc:	79545f42 	ldmdbvc	r4, {r1, r6, r8, r9, sl, fp, ip, lr}^
 300:	49006570 	stmdbmi	r0, {r4, r5, r6, r8, sl, sp, lr}
 304:	46445f44 	strbmi	r5, [r4], -r4, asr #30
 308:	43440052 	movtmi	r0, #16466	; 0x4052
 30c:	41564d43 	cmpmi	r6, r3, asr #26
 310:	53430043 	movtpl	r0, #12355	; 0x3043
 314:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
 318:	73795300 	cmnvc	r9, #0, 6
 31c:	436d6574 	cmnmi	sp, #116, 10	; 0x1d000000
 320:	4365726f 	cmnmi	r5, #-268435450	; 0xf0000006
 324:	6b636f6c 	blvs	18dc0dc <__RAM_SIZE+0x17dc0dc>
 328:	43434400 	movtmi	r4, #13312	; 0x3400
 32c:	5541564d 	strbpl	r5, [r1, #-1613]	; 0xfffff9b3
 330:	565f5f00 	ldrbpl	r5, [pc], -r0, lsl #30
 334:	6f746365 	svcvs	0x00746365
 338:	56007372 			; <UNDEFINED> instruction: 0x56007372
 33c:	00524f54 	subseq	r4, r2, r4, asr pc
 340:	52414653 	subpl	r4, r1, #87031808	; 0x5300000
 344:	53434900 	movtpl	r4, #14592	; 0x3900
 348:	49410052 	stmdbmi	r1, {r1, r4, r6}^
 34c:	00524352 	subseq	r4, r2, r2, asr r3
 350:	52534644 	subspl	r4, r3, #68, 12	; 0x4400000
 354:	464d4d00 	strbmi	r4, [sp], -r0, lsl #26
 358:	43005241 	movwmi	r5, #577	; 0x241
 35c:	44495343 	strbmi	r5, [r9], #-835	; 0xfffffcbd
 360:	46430052 			; <UNDEFINED> instruction: 0x46430052
 364:	4e005253 	mcrmi	2, 0, r5, cr0, cr3, {2}
 368:	52434153 	subpl	r4, r3, #-1073741804	; 0xc0000014
 36c:	46564d00 	ldrbmi	r4, [r6], -r0, lsl #26
 370:	4d003052 	stcmi	0, cr3, [r0, #-328]	; 0xfffffeb8
 374:	31524656 	cmpcc	r2, r6, asr r6
 378:	46564d00 	ldrbmi	r4, [r6], -r0, lsl #26
 37c:	52003252 	andpl	r3, r0, #536870917	; 0x20000005
 380:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
 384:	33444556 	movtcc	r4, #17750	; 0x4556
 388:	53455200 	movtpl	r5, #20992	; 0x5200
 38c:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
 390:	52003444 	andpl	r3, r0, #68, 8	; 0x44000000
 394:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
 398:	35444556 	strbcc	r4, [r4, #-1366]	; 0xfffffaaa
 39c:	53455200 	movtpl	r5, #20992	; 0x5200
 3a0:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
 3a4:	52003644 	andpl	r3, r0, #68, 12	; 0x4400000
 3a8:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
 3ac:	37444556 	smlsldcc	r4, r4, r6, r5	; <UNPREDICTABLE>
 3b0:	73795300 	cmnvc	r9, #0, 6
 3b4:	496d6574 	stmdbmi	sp!, {r2, r4, r5, r6, r8, sl, sp, lr}^
 3b8:	0074696e 	rsbseq	r6, r4, lr, ror #18
 3bc:	53434853 	movtpl	r4, #14419	; 0x3853
 3c0:	43440052 	movtmi	r0, #16466	; 0x4052
 3c4:	564d4943 	strbpl	r4, [sp], -r3, asr #18
 3c8:	49004341 	stmdbmi	r0, {r0, r6, r8, r9, lr}
 3cc:	564d4943 	strbpl	r4, [sp], -r3, asr #18
 3d0:	44005541 	strmi	r5, [r0], #-1345	; 0xfffffabf
 3d4:	57534943 	ldrbpl	r4, [r3, -r3, asr #18]
 3d8:	53464100 	movtpl	r4, #24832	; 0x6100
 3dc:	46530052 			; <UNDEFINED> instruction: 0x46530052
 3e0:	44005253 	strmi	r5, [r0], #-595	; 0xfffffdad
 3e4:	57534343 	ldrbpl	r4, [r3, -r3, asr #6]
 3e8:	50485300 	subpl	r5, r8, r0, lsl #6
 3ec:	45560052 	ldrbmi	r0, [r6, #-82]	; 0xffffffae
 3f0:	524f5443 	subpl	r5, pc, #1124073472	; 0x43000000
 3f4:	4241545f 	submi	r5, r1, #1593835520	; 0x5f000000
 3f8:	545f454c 	ldrbpl	r4, [pc], #-1356	; 400 <__STACKSEAL_SIZE+0x400>
 3fc:	00657079 	rsbeq	r7, r5, r9, ror r0
 400:	415f4449 	cmpmi	pc, r9, asr #8
 404:	49005246 	stmdbmi	r0, {r1, r2, r6, r9, ip, lr}
 408:	53495f44 	movtpl	r5, #40772	; 0x9f44
 40c:	43005241 	movwmi	r5, #577	; 0x241
 410:	52434150 	subpl	r4, r3, #80, 2
 414:	53464800 	movtpl	r4, #26624	; 0x6800
 418:	5f5f0052 	svcpl	0x005f0052
 41c:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
 420:	32695f69 	rsbcc	r5, r9, #420	; 0x1a4
 424:	6f700064 	svcvs	0x00700064
 428:	00303177 	eorseq	r3, r0, r7, ror r1
 42c:	32707865 	rsbscc	r7, r0, #6619136	; 0x650000
 430:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 434:	7463665f 	strbtvc	r6, [r3], #-1631	; 0xfffff9a1
 438:	6172775f 	cmnvs	r2, pc, asr r7
 43c:	78650070 	stmdavc	r5!, {r4, r5, r6}^
 440:	6c617670 	stclvs	6, cr7, [r1], #-448	; 0xfffffe40
 444:	756f5f00 	strbvc	r5, [pc, #-3840]!	; fffff54c <__StackTop+0xc7eff54c>
 448:	75625f74 	strbvc	r5, [r2, #-3956]!	; 0xfffff08c
 44c:	72656666 	rsbvc	r6, r5, #106954752	; 0x6600000
 450:	72707600 	rsbsvc	r7, r0, #0, 12
 454:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
 458:	7a697300 	bvc	1a5d060 <__RAM_SIZE+0x195d060>
 45c:	00745f65 	rsbseq	r5, r4, r5, ror #30
 460:	776e696d 	strbvc	r6, [lr, -sp, ror #18]!
 464:	68746469 	ldmdavs	r4!, {r0, r3, r5, r6, sl, sp, lr}^
 468:	615f5f00 	cmpvs	pc, r0, lsl #30
 46c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 470:	6964645f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, sl, sp, lr}^
 474:	655f0076 	ldrbvs	r0, [pc, #-118]	; 406 <__STACKSEAL_SIZE+0x406>
 478:	00616f74 	rsbeq	r6, r1, r4, ror pc
 47c:	5f747570 	svcpl	0x00747570
 480:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 484:	756f5f00 	strbvc	r5, [pc, #-3840]!	; fffff58c <__StackTop+0xc7eff58c>
 488:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 48c:	6d007261 	sfmvs	f7, 4, [r0, #-388]	; 0xfffffe7c
 490:	69737861 	ldmdbvs	r3!, {r0, r5, r6, fp, ip, sp, lr}^
 494:	7700657a 	smlsdxvc	r0, sl, r5, r6
 498:	656c6f68 	strbvs	r6, [ip, #-3944]!	; 0xfffff098
 49c:	615f5f00 	cmpvs	pc, r0, lsl #30
 4a0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 4a4:	6932645f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, sp, lr}
 4a8:	7266007a 	rsbvc	r0, r6, #122	; 0x7a
 4ac:	76006361 	strvc	r6, [r0], -r1, ror #6
 4b0:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
 4b4:	756f5f00 	strbvc	r5, [pc, #-3840]!	; fffff5bc <__StackTop+0xc7eff5bc>
 4b8:	63665f74 	cmnvs	r6, #116, 30	; 0x1d0
 4bc:	5f5f0074 	svcpl	0x005f0074
 4c0:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
 4c4:	32645f69 	rsbcc	r5, r4, #420	; 0x1a4
 4c8:	007a6975 	rsbseq	r6, sl, r5, ror r9
 4cc:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 4d0:	64695f74 	strbtvs	r5, [r9], #-3956	; 0xfffff08c
 4d4:	63660078 	cmnvs	r6, #120	; 0x78
 4d8:	69727074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, sp, lr}^
 4dc:	0066746e 	rsbeq	r7, r6, lr, ror #8
 4e0:	6167656e 	cmnvs	r7, lr, ror #10
 4e4:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
 4e8:	615f5f00 	cmpvs	pc, r0, lsl #30
 4ec:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 4f0:	6461645f 	strbtvs	r6, [r1], #-1119	; 0xfffffba1
 4f4:	5f5f0064 	svcpl	0x005f0064
 4f8:	6c5f6176 	ldfvse	f6, [pc], {118}	; 0x76
 4fc:	00747369 	rsbseq	r7, r4, r9, ror #6
 500:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
 504:	2f65726f 	svccs	0x0065726f
 508:	2f637253 	svccs	0x00637253
 50c:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
 510:	632e6674 			; <UNDEFINED> instruction: 0x632e6674
 514:	746e5f00 	strbtvc	r5, [lr], #-3840	; 0xfffff100
 518:	665f616f 	ldrbvs	r6, [pc], -pc, ror #2
 51c:	616d726f 	cmnvs	sp, pc, ror #4
 520:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
 524:	00616f74 	rsbeq	r6, r1, r4, ror pc
 528:	6e73765f 	mrcvs	6, 3, r7, cr3, cr15, {2}
 52c:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
 530:	5f006674 	svcpl	0x00006674
 534:	5f74756f 	svcpl	0x0074756f
 538:	6c6c756e 	cfstr64vs	mvdx7, [ip], #-440	; 0xfffffe48
 53c:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
 540:	7463665f 	strbtvc	r6, [r3], #-1631	; 0xfffff9a1
 544:	7079745f 	rsbsvc	r7, r9, pc, asr r4
 548:	5f5f0065 	svcpl	0x005f0065
 54c:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
 550:	63645f69 	cmnvs	r4, #420	; 0x1a4
 554:	6567706d 	strbvs	r7, [r7, #-109]!	; 0xffffff93
 558:	746e5f00 	strbtvc	r5, [lr], #-3840	; 0xfffff100
 55c:	6c5f616f 	ldfvse	f6, [pc], {111}	; 0x6f
 560:	00676e6f 	rsbeq	r6, r7, pc, ror #28
 564:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
 568:	0066746e 	rsbeq	r7, r6, lr, ror #8
 56c:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
 570:	5f696261 	svcpl	0x00696261
 574:	64326975 	ldrtvs	r6, [r2], #-2421	; 0xfffff68b
 578:	616c6600 	cmnvs	ip, r0, lsl #12
 57c:	5f007367 	svcpl	0x00007367
 580:	6165615f 	cmnvs	r5, pc, asr r1
 584:	645f6962 	ldrbvs	r6, [pc], #-2402	; 58c <__STACKSEAL_SIZE+0x58c>
 588:	67706d63 	ldrbvs	r6, [r0, -r3, ror #26]!
 58c:	616d0074 	smcvs	53252	; 0xd004
 590:	6e656c78 	mcrvs	12, 3, r6, cr5, cr8, {3}
 594:	74615f00 	strbtvc	r5, [r1], #-3840	; 0xfffff100
 598:	5f00696f 	svcpl	0x0000696f
 59c:	6e727473 	mrcvs	4, 3, r7, cr2, cr3, {3}
 5a0:	5f6e656c 	svcpl	0x006e656c
 5a4:	5f5f0073 	svcpl	0x005f0073
 5a8:	5f007061 	svcpl	0x00007061
 5ac:	6165615f 	cmnvs	r5, pc, asr r1
 5b0:	645f6962 	ldrbvs	r6, [pc], #-2402	; 5b8 <__STACKSEAL_SIZE+0x5b8>
 5b4:	006c756d 	rsbeq	r7, ip, sp, ror #10
 5b8:	6f6f425f 	svcvs	0x006f425f
 5bc:	5f5f006c 	svcpl	0x005f006c
 5c0:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
 5c4:	745f3436 	ldrbvc	r3, [pc], #-1078	; 5cc <__STACKSEAL_SIZE+0x5cc>
 5c8:	73695f00 	cmnvc	r9, #0, 30
 5cc:	6769645f 			; <UNDEFINED> instruction: 0x6769645f
 5d0:	63007469 	movwvs	r7, #1129	; 0x469
 5d4:	00766e6f 	rsbseq	r6, r6, pc, ror #28
 5d8:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
 5dc:	5f696261 	svcpl	0x00696261
 5e0:	706d6364 	rsbvc	r6, sp, r4, ror #6
 5e4:	5f007165 	svcpl	0x00007165
 5e8:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
 5ec:	72747074 	rsbsvc	r7, r4, #116	; 0x74
 5f0:	6300745f 	movwvs	r7, #1119	; 0x45f
 5f4:	61726168 	cmnvs	r2, r8, ror #2
 5f8:	72657463 	rsbvc	r7, r5, #1660944384	; 0x63000000
 5fc:	756f5f00 	strbvc	r5, [pc, #-3840]!	; fffff704 <__StackTop+0xc7eff704>
 600:	65725f74 	ldrbvs	r5, [r2, #-3956]!	; 0xfffff08c
 604:	5f5f0076 	svcpl	0x005f0076
 608:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
 60c:	73645f69 	cmnvc	r4, #420	; 0x1a4
 610:	5f006275 	svcpl	0x00006275
 614:	6165615f 	cmnvs	r5, pc, asr r1
 618:	755f6962 	ldrbvc	r6, [pc, #-2402]	; fffffcbe <__StackTop+0xc7effcbe>
 61c:	7669646c 	strbtvc	r6, [r9], -ip, ror #8
 620:	00646f6d 	rsbeq	r6, r4, sp, ror #30
 624:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
 628:	5f696261 	svcpl	0x00696261
 62c:	706d6364 	rsbvc	r6, sp, r4, ror #6
 630:	6f00656c 	svcvs	0x0000656c
 634:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
 638:	775f7463 	ldrbvc	r7, [pc, -r3, ror #8]
 63c:	5f706172 	svcpl	0x00706172
 640:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
 644:	65727000 	ldrbvs	r7, [r2, #-0]!
 648:	77660063 	strbvc	r0, [r6, -r3, rrx]!
 64c:	68746469 	ldmdavs	r4!, {r0, r3, r5, r6, sl, sp, lr}^
 650:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
 654:	5f63756e 	svcpl	0x0063756e
 658:	6c5f6176 	ldfvse	f6, [pc], {118}	; 0x76
 65c:	00747369 	rsbseq	r7, r4, r9, ror #6
 660:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
 664:	5f696261 	svcpl	0x00696261
 668:	706d6364 	rsbvc	r6, sp, r4, ror #6
 66c:	5f00746c 	svcpl	0x0000746c
 670:	616f746e 	cmnvs	pc, lr, ror #8
 674:	6e6f6c5f 	mcrvs	12, 3, r6, cr15, cr15, {2}
 678:	6f6c5f67 	svcvs	0x006c5f67
 67c:	6900676e 	stmdbvs	r0, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
 680:	6c6c5f73 	stclvs	15, cr5, [ip], #-460	; 0xfffffe34
 684:	65727000 	ldrbvs	r7, [r2, #-0]!
 688:	69736963 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, fp, sp, lr}^
 68c:	64006e6f 	strvs	r6, [r0], #-3695	; 0xfffff191
 690:	00666669 	rsbeq	r6, r6, r9, ror #12
 694:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
 698:	7500676e 	strvc	r6, [r0, #-1902]	; 0xfffff892
 69c:	5f747261 	svcpl	0x00747261
 6a0:	76636572 			; <UNDEFINED> instruction: 0x76636572
 6a4:	74656700 	strbtvc	r6, [r5], #-1792	; 0xfffff900
 6a8:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 6ac:	2f2e2e00 	svccs	0x002e2e00
 6b0:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
 6b4:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
 6b8:	7261752f 	rsbvc	r7, r1, #197132288	; 0xbc00000
 6bc:	00632e74 	rsbeq	r2, r3, r4, ror lr
 6c0:	65646e69 	strbvs	r6, [r4, #-3689]!	; 0xfffff197
 6c4:	61750078 	cmnvs	r5, r8, ror r0
 6c8:	735f7472 	cmpvc	pc, #1912602624	; 0x72000000
 6cc:	00646e65 	rsbeq	r6, r4, r5, ror #28
 6d0:	5f746567 	svcpl	0x00746567
 6d4:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
 6d8:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
 6dc:	645f746c 	ldrbvs	r7, [pc], #-1132	; 6e4 <__STACKSEAL_SIZE+0x6e4>
 6e0:	5f706d75 	svcpl	0x00706d75
 6e4:	5f707370 	svcpl	0x00707370
 6e8:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
 6ec:	61705f6b 	cmnvs	r0, fp, ror #30
 6f0:	72657372 	rsbvc	r7, r5, #-939524095	; 0xc8000001
 6f4:	61747300 	cmnvs	r4, r0, lsl #6
 6f8:	755f6b63 	ldrbvc	r6, [pc, #-2915]	; fffffb9d <__StackTop+0xc7effb9d>
 6fc:	676e6973 			; <UNDEFINED> instruction: 0x676e6973
 700:	70736d5f 	rsbsvc	r6, r3, pc, asr sp
 704:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
 708:	645f746c 	ldrbvs	r7, [pc], #-1132	; 710 <__STACKSEAL_SIZE+0x710>
 70c:	5f706d75 	svcpl	0x00706d75
 710:	5f637865 	svcpl	0x00637865
 714:	75746572 	ldrbvc	r6, [r4, #-1394]!	; 0xfffffa8e
 718:	6f006e72 	svcvs	0x00006e72
 71c:	646f6370 	strbtvs	r6, [pc], #-880	; 724 <__STACKSEAL_SIZE+0x724>
 720:	73695f65 	cmnvc	r9, #404	; 0x194
 724:	5f6c625f 	svcpl	0x006c625f
 728:	625f726f 	subsvs	r7, pc, #-268435450	; 0xf0000006
 72c:	7300786c 	movwvc	r7, #2156	; 0x86c
 730:	6b636174 	blvs	18d8d08 <__RAM_SIZE+0x17d8d08>
 734:	6172665f 	cmnvs	r2, pc, asr r6
 738:	745f656d 	ldrbvc	r6, [pc], #-1389	; 740 <__STACKSEAL_SIZE+0x740>
 73c:	5f646600 	svcpl	0x00646600
 740:	6e69616d 	powvsez	f6, f1, #5.0
 744:	6174735f 	cmnvs	r4, pc, asr r3
 748:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
 74c:	006c6c75 	rsbeq	r6, ip, r5, ror ip
 750:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
 754:	3631746e 	ldrtcc	r7, [r1], -lr, ror #8
 758:	6600745f 			; <UNDEFINED> instruction: 0x6600745f
 75c:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 760:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
 764:	65745f70 	ldrbvs	r5, [r4, #-3952]!	; 0xfffff090
 768:	655f7478 	ldrbvs	r7, [pc, #-1144]	; 2f8 <__STACKSEAL_SIZE+0x2f8>
 76c:	0073646e 	rsbseq	r6, r3, lr, ror #8
 770:	7473735f 	ldrbtvc	r7, [r3], #-863	; 0xfffffca1
 774:	006b6361 	rsbeq	r6, fp, r1, ror #6
 778:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 77c:	75645f74 	strbvc	r5, [r4, #-3956]!	; 0xfffff08c
 780:	6f5f706d 	svcvs	0x005f706d
 784:	646f6370 	strbtvs	r6, [pc], #-880	; 78c <__STACKSEAL_SIZE+0x78c>
 788:	655f0065 	ldrbvs	r0, [pc, #-101]	; 72b <__STACKSEAL_SIZE+0x72b>
 78c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
 790:	6572006b 	ldrbvs	r0, [r2, #-107]!	; 0xffffff95
 794:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
 798:	5f646600 	svcpl	0x00646600
 79c:	5f70736d 	svcpl	0x0070736d
 7a0:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
 7a4:	61705f6b 	cmnvs	r0, fp, ror #30
 7a8:	72657372 	rsbvc	r7, r5, #-939524095	; 0xc8000001
 7ac:	6e696c00 	cdpvs	12, 6, cr6, cr9, cr0, {0}
 7b0:	0072656b 	rsbseq	r6, r2, fp, ror #10
 7b4:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
 7b8:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
 7bc:	5f656d61 	svcpl	0x00656d61
 7c0:	756e616d 	strbvc	r6, [lr, #-365]!	; 0xfffffe93
 7c4:	745f6c61 	ldrbvc	r6, [pc], #-3169	; 7cc <__Vectors_Size+0xc>
 7c8:	63706f00 	cmnvs	r0, #0, 30
 7cc:	3165646f 	cmncc	r5, pc, ror #8
 7d0:	63706f00 	cmnvs	r0, #0, 30
 7d4:	3265646f 	rsbcc	r6, r5, #1862270976	; 0x6f000000
 7d8:	61747300 	cmnvs	r4, r0, lsl #6
 7dc:	665f6b63 	ldrbvs	r6, [pc], -r3, ror #22
 7e0:	656d6172 	strbvs	r6, [sp, #-370]!	; 0xfffffe8e
 7e4:	6e616d5f 	mcrvs	13, 3, r6, cr1, cr15, {2}
 7e8:	006c6175 	rsbeq	r6, ip, r5, ror r1
 7ec:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
 7f0:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
 7f4:	00656d61 	rsbeq	r6, r5, r1, ror #26
 7f8:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
 7fc:	72665f6b 	rsbvc	r5, r6, #428	; 0x1ac
 800:	5f656d61 	svcpl	0x00656d61
 804:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
 808:	745f7470 	ldrbvc	r7, [pc], #-1136	; 810 <__Vectors_Size+0x50>
 80c:	5f646600 	svcpl	0x00646600
 810:	5f707370 	svcpl	0x00707370
 814:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
 818:	61705f6b 	cmnvs	r0, fp, ror #30
 81c:	72657372 	rsbvc	r7, r5, #-939524095	; 0xc8000001
 820:	2f2e2e00 	svccs	0x002e2e00
 824:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
 828:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
 82c:	69747562 	ldmdbvs	r4!, {r1, r5, r6, r8, sl, ip, sp, lr}^
 830:	662f736c 	strtvs	r7, [pc], -ip, ror #6
 834:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 838:	6d75642d 	cfldrdvs	mvd6, [r5, #-180]!	; 0xffffff4c
 83c:	72732f70 	rsbsvc	r2, r3, #112, 30	; 0x1c0
 840:	61662f63 	cmnvs	r6, r3, ror #30
 844:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
 848:	706d7564 	rsbvc	r7, sp, r4, ror #10
 84c:	6600632e 	strvs	r6, [r0], -lr, lsr #6
 850:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
 854:	6d75645f 	cfldrdvs	mvd6, [r5, #-380]!	; 0xfffffe84
 858:	61685f70 	smcvs	34288	; 0x85f0
 85c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 860:	64660072 	strbtvs	r0, [r6], #-114	; 0xffffff8e
 864:	69616d5f 	stmdbvs	r1!, {r0, r1, r2, r3, r4, r6, r8, sl, fp, sp, lr}^
 868:	74735f6e 	ldrbtvc	r5, [r3], #-3950	; 0xfffff092
 86c:	5f6b6361 	svcpl	0x006b6361
 870:	65736162 	ldrbvs	r6, [r3, #-354]!	; 0xfffffe9e
 874:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
 878:	645f746c 	ldrbvs	r7, [pc], #-1132	; 880 <__Vectors_Size+0xc0>
 87c:	5f706d75 	svcpl	0x00706d75
 880:	6e697375 	mcrvs	3, 3, r7, cr9, cr5, {3}
 884:	736d5f67 	cmnvc	sp, #412	; 0x19c
 888:	735f0070 	cmpvc	pc, #112	; 0x70
 88c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 890:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
 894:	645f746c 	ldrbvs	r7, [pc], #-1132	; 89c <__Vectors_Size+0xdc>
 898:	5f706d75 	svcpl	0x00706d75
 89c:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8a0:	7361625f 	cmnvc	r1, #-268435451	; 0xf0000005
 8a4:	74730065 	ldrbtvc	r0, [r3], #-101	; 0xffffff9b
 8a8:	5f6b6361 	svcpl	0x006b6361
 8ac:	73726170 	cmnvc	r2, #112, 2
 8b0:	745f7265 	ldrbvc	r7, [pc], #-613	; 8b8 <__Vectors_Size+0xf8>
 8b4:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
 8b8:	4d5f7465 	cfldrdmi	mvd7, [pc, #-404]	; 72c <__STACKSEAL_SIZE+0x72c>
 8bc:	73005053 	movwvc	r5, #83	; 0x53
 8c0:	6b636174 	blvs	18d8e98 <__RAM_SIZE+0x17d8e98>
 8c4:	6172665f 	cmnvs	r2, pc, asr r6
 8c8:	655f656d 	ldrbvs	r6, [pc, #-1389]	; 363 <__STACKSEAL_SIZE+0x363>
 8cc:	70656378 	rsbvc	r6, r5, r8, ror r3
 8d0:	655f0074 	ldrbvs	r0, [pc, #-116]	; 864 <__Vectors_Size+0xa4>
 8d4:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 8d8:	64646100 	strbtvs	r6, [r4], #-256	; 0xffffff00
 8dc:	2e2e0072 	mcrcs	0, 1, r0, cr14, cr2, {3}
 8e0:	2f2e2e2f 	svccs	0x002e2e2f
 8e4:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 834 <__Vectors_Size+0x74>
 8e8:	74756269 	ldrbtvc	r6, [r5], #-617	; 0xfffffd97
 8ec:	2f736c69 	svccs	0x00736c69
 8f0:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 8f4:	75642d74 	strbvc	r2, [r4, #-3444]!	; 0xfffff28c
 8f8:	632f706d 			; <UNDEFINED> instruction: 0x632f706d
 8fc:	632f7570 			; <UNDEFINED> instruction: 0x632f7570
 900:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
 904:	336d2d78 	cmncc	sp, #120, 26	; 0x1e00
 908:	61662f33 	cmnvs	r6, r3, lsr pc
 90c:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
 910:	2e6c6168 	powcsez	f6, f4, #0.0
 914:	61660063 	cmnvs	r6, r3, rrx
 918:	5f746c75 	svcpl	0x00746c75
 91c:	706d7564 	rsbvc	r7, sp, r4, ror #10
 920:	7669645f 			; <UNDEFINED> instruction: 0x7669645f
 924:	72657a5f 	rsbvc	r7, r5, #389120	; 0x5f000
 928:	2f2e006f 	svccs	0x002e006f
 92c:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 930:	2f707574 	svccs	0x00707574
 934:	2f636367 	svccs	0x00636367
 938:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
 93c:	5f707574 	svcpl	0x00707574
 940:	434d5241 	movtmi	r5, #53825	; 0xd241
 944:	2e33334d 	cdpcs	3, 3, cr3, cr3, cr13, {2}
 948:	4e470073 	mcrmi	0, 2, r0, cr7, cr3, {3}
 94c:	53412055 	movtpl	r2, #4181	; 0x1055
 950:	332e3220 			; <UNDEFINED> instruction: 0x332e3220
 954:	00312e36 	eorseq	r2, r1, r6, lsr lr
 958:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
 95c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
 960:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
 964:	6c697475 	cfstrdvs	mvd7, [r9], #-468	; 0xfffffe2c
 968:	61662f73 	smcvs	25331	; 0x62f3
 96c:	2d746c75 	ldclcs	12, cr6, [r4, #-468]!	; 0xfffffe2c
 970:	706d7564 	rsbvc	r7, sp, r4, ror #10
 974:	7570632f 	ldrbvc	r6, [r0, #-815]!	; 0xfffffcd1
 978:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
 97c:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
 980:	2f33336d 	svccs	0x0033336d
 984:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
 988:	63672d74 	cmnvs	r7, #116, 26	; 0x1d00
 98c:	00732e63 	rsbseq	r2, r3, r3, ror #28

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
void Default_Handler(void) {
       0:	0000000c 	andeq	r0, r0, ip
    printf("%s\n", __func__);
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
}
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      1c:	00000010 	andeq	r0, r0, r0, lsl r0
      20:	83080e41 	movwhi	r0, #36417	; 0x8e41
      24:	00018e02 	andeq	r8, r1, r2, lsl #28
      28:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      34:	00000010 	andeq	r0, r0, r0, lsl r0
      38:	83080e41 	movwhi	r0, #36417	; 0x8e41
      3c:	00018e02 	andeq	r8, r1, r2, lsl #28
      40:	0000001c 	andeq	r0, r0, ip, lsl r0
      44:	00000000 	andeq	r0, r0, r0
      48:	10000800 	andne	r0, r0, r0, lsl #16
      4c:	00000068 	andeq	r0, r0, r8, rrx
      50:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
      54:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
      58:	900e4101 	andls	r4, lr, r1, lsl #2
      5c:	0c0e6902 			; <UNDEFINED> instruction: 0x0c0e6902
      60:	00000014 	andeq	r0, r0, r4, lsl r0
      64:	00000000 	andeq	r0, r0, r0
      68:	10000868 	andne	r0, r0, r8, ror #16
      6c:	0000001c 	andeq	r0, r0, ip, lsl r0
      70:	83080e41 	movwhi	r0, #36417	; 0x8e41
      74:	00018e02 	andeq	r8, r1, r2, lsl #28
      78:	00000014 	andeq	r0, r0, r4, lsl r0
      7c:	00000000 	andeq	r0, r0, r0
      80:	10000884 	andne	r0, r0, r4, lsl #17
      84:	00000018 	andeq	r0, r0, r8, lsl r0
      88:	83080e41 	movwhi	r0, #36417	; 0x8e41
      8c:	00018e02 	andeq	r8, r1, r2, lsl #28
      90:	00000014 	andeq	r0, r0, r4, lsl r0
      94:	00000000 	andeq	r0, r0, r0
      98:	1000089c 	mulne	r0, ip, r8
      9c:	00000018 	andeq	r0, r0, r8, lsl r0
      a0:	83080e41 	movwhi	r0, #36417	; 0x8e41
      a4:	00018e02 	andeq	r8, r1, r2, lsl #28
      a8:	00000014 	andeq	r0, r0, r4, lsl r0
      ac:	00000000 	andeq	r0, r0, r0
      b0:	100008b4 			; <UNDEFINED> instruction: 0x100008b4
      b4:	00000018 	andeq	r0, r0, r8, lsl r0
      b8:	83080e41 	movwhi	r0, #36417	; 0x8e41
      bc:	00018e02 	andeq	r8, r1, r2, lsl #28
      c0:	00000014 	andeq	r0, r0, r4, lsl r0
      c4:	00000000 	andeq	r0, r0, r0
      c8:	100008cc 	andne	r0, r0, ip, asr #17
      cc:	00000018 	andeq	r0, r0, r8, lsl r0
      d0:	83080e41 	movwhi	r0, #36417	; 0x8e41
      d4:	00018e02 	andeq	r8, r1, r2, lsl #28
      d8:	00000014 	andeq	r0, r0, r4, lsl r0
      dc:	00000000 	andeq	r0, r0, r0
      e0:	100008e4 	andne	r0, r0, r4, ror #17
      e4:	00000018 	andeq	r0, r0, r8, lsl r0
      e8:	83080e41 	movwhi	r0, #36417	; 0x8e41
      ec:	00018e02 	andeq	r8, r1, r2, lsl #28
      f0:	00000014 	andeq	r0, r0, r4, lsl r0
      f4:	00000000 	andeq	r0, r0, r0
      f8:	100008fc 	strdne	r0, [r0], -ip
      fc:	0000002c 	andeq	r0, r0, ip, lsr #32
     100:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     104:	00018e02 	andeq	r8, r1, r2, lsl #28
     108:	0000000c 	andeq	r0, r0, ip
     10c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     110:	7c020001 	stcvc	0, cr0, [r2], {1}
     114:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     118:	0000000c 	andeq	r0, r0, ip
     11c:	00000108 	andeq	r0, r0, r8, lsl #2
     120:	00000000 	andeq	r0, r0, r0
     124:	00000010 	andeq	r0, r0, r0, lsl r0
     128:	0000000c 	andeq	r0, r0, ip
     12c:	00000108 	andeq	r0, r0, r8, lsl #2
     130:	10000928 	andne	r0, r0, r8, lsr #18
     134:	0000002c 	andeq	r0, r0, ip, lsr #32
     138:	0000000c 	andeq	r0, r0, ip
     13c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     140:	7c020001 	stcvc	0, cr0, [r2], {1}
     144:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     148:	0000000c 	andeq	r0, r0, ip
     14c:	00000138 	andeq	r0, r0, r8, lsr r1
     150:	00000000 	andeq	r0, r0, r0
     154:	00000008 	andeq	r0, r0, r8
     158:	0000000c 	andeq	r0, r0, ip
     15c:	00000138 	andeq	r0, r0, r8, lsr r1
     160:	10000954 	andne	r0, r0, r4, asr r9
     164:	00000002 	andeq	r0, r0, r2
     168:	00000018 	andeq	r0, r0, r8, lsl r0
     16c:	00000138 	andeq	r0, r0, r8, lsr r1
     170:	00000000 	andeq	r0, r0, r0
     174:	0000000e 	andeq	r0, r0, lr
     178:	83080e42 	movwhi	r0, #36418	; 0x8e42
     17c:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
     180:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     184:	0000000c 	andeq	r0, r0, ip
     188:	00000138 	andeq	r0, r0, r8, lsr r1
     18c:	10000956 	andne	r0, r0, r6, asr r9
     190:	00000024 	andeq	r0, r0, r4, lsr #32
     194:	0000002c 	andeq	r0, r0, ip, lsr #32
     198:	00000138 	andeq	r0, r0, r8, lsr r1
     19c:	1000097a 	andne	r0, r0, sl, ror r9
     1a0:	0000007e 	andeq	r0, r0, lr, ror r0
     1a4:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     1a8:	86088509 	strhi	r8, [r8], -r9, lsl #10
     1ac:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     1b0:	8a048905 	bhi	1225cc <__RAM_SIZE+0x225cc>
     1b4:	8e028b03 	vmlahi.f64	d8, d2, d3
     1b8:	300e4101 	andcc	r4, lr, r1, lsl #2
     1bc:	240e0a6f 	strcs	r0, [lr], #-2671	; 0xfffff591
     1c0:	00000b42 	andeq	r0, r0, r2, asr #22
     1c4:	00000028 	andeq	r0, r0, r8, lsr #32
     1c8:	00000138 	andeq	r0, r0, r8, lsr r1
     1cc:	100009f8 	strdne	r0, [r0], -r8
     1d0:	00000138 	andeq	r0, r0, r8, lsr r1
     1d4:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     1d8:	86068507 	strhi	r8, [r6], -r7, lsl #10
     1dc:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     1e0:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     1e4:	300e4101 	andcc	r4, lr, r1, lsl #2
     1e8:	0e0a5b02 	vmlaeq.f64	d5, d10, d2
     1ec:	000b421c 	andeq	r4, fp, ip, lsl r2
     1f0:	00000020 	andeq	r0, r0, r0, lsr #32
     1f4:	00000138 	andeq	r0, r0, r8, lsr r1
     1f8:	10000b30 	andne	r0, r0, r0, lsr fp
     1fc:	00000094 	muleq	r0, r4, r0
     200:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     204:	86048505 	strhi	r8, [r4], -r5, lsl #10
     208:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     20c:	580e4101 	stmdapl	lr, {r0, r8, lr}
     210:	140e4702 	strne	r4, [lr], #-1794	; 0xfffff8fe
     214:	00000028 	andeq	r0, r0, r8, lsr #32
     218:	00000138 	andeq	r0, r0, r8, lsr r1
     21c:	10000bc4 	andne	r0, r0, r4, asr #23
     220:	000000c6 	andeq	r0, r0, r6, asr #1
     224:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     228:	86088509 	strhi	r8, [r8], -r9, lsl #10
     22c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     230:	8a048905 	bhi	12264c <__RAM_SIZE+0x2264c>
     234:	8e028b03 	vmlahi.f64	d8, d2, d3
     238:	780e4101 	stmdavc	lr, {r0, r8, lr}
     23c:	240e5e02 	strcs	r5, [lr], #-3586	; 0xfffff1fe
     240:	0000003c 	andeq	r0, r0, ip, lsr r0
     244:	00000138 	andeq	r0, r0, r8, lsr r1
     248:	10000c90 	mulne	r0, r0, ip
     24c:	000003ea 	andeq	r0, r0, sl, ror #7
     250:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     254:	86088509 	strhi	r8, [r8], -r9, lsl #10
     258:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     25c:	8a048905 	bhi	122678 <__RAM_SIZE+0x22678>
     260:	8e028b03 	vmlahi.f64	d8, d2, d3
     264:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     268:	050b5005 	streq	r5, [fp, #-5]
     26c:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     270:	01250370 			; <UNDEFINED> instruction: 0x01250370
     274:	422c0e0a 	eormi	r0, ip, #10, 28	; 0xa0
     278:	51065006 	tstpl	r6, r6
     27c:	0b42240e 	bleq	10892bc <__RAM_SIZE+0xf892bc>
     280:	00000040 	andeq	r0, r0, r0, asr #32
     284:	00000138 	andeq	r0, r0, r8, lsr r1
     288:	10001080 	andne	r1, r0, r0, lsl #1
     28c:	00000396 	muleq	r0, r6, r3
     290:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     294:	86088509 	strhi	r8, [r8], -r9, lsl #10
     298:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     29c:	8a048905 	bhi	1226b8 <__RAM_SIZE+0x226b8>
     2a0:	8e028b03 	vmlahi.f64	d8, d2, d3
     2a4:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     2a8:	050b5005 	streq	r5, [fp, #-5]
     2ac:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     2b0:	8d030180 	stfhis	f0, [r3, #-512]	; 0xfffffe00
     2b4:	2c0e0a01 			; <UNDEFINED> instruction: 0x2c0e0a01
     2b8:	06500642 	ldrbeq	r0, [r0], -r2, asr #12
     2bc:	42240e51 	eormi	r0, r4, #1296	; 0x510
     2c0:	0000000b 	andeq	r0, r0, fp
     2c4:	0000002c 	andeq	r0, r0, ip, lsr #32
     2c8:	00000138 	andeq	r0, r0, r8, lsr r1
     2cc:	10001418 	andne	r1, r0, r8, lsl r4
     2d0:	00000680 	andeq	r0, r0, r0, lsl #13
     2d4:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     2d8:	86088509 	strhi	r8, [r8], -r9, lsl #10
     2dc:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     2e0:	8a048905 	bhi	1226fc <__RAM_SIZE+0x226fc>
     2e4:	8e028b03 	vmlahi.f64	d8, d2, d3
     2e8:	600e4101 	andvs	r4, lr, r1, lsl #2
     2ec:	0e033803 	cdpeq	8, 0, cr3, cr3, cr3, {0}
     2f0:	00000024 	andeq	r0, r0, r4, lsr #32
     2f4:	00000014 	andeq	r0, r0, r4, lsl r0
     2f8:	00000138 	andeq	r0, r0, r8, lsr r1
     2fc:	10001a98 	mulne	r0, r8, sl
     300:	0000000c 	andeq	r0, r0, ip
     304:	83080e43 	movwhi	r0, #36419	; 0x8e43
     308:	00018e02 	andeq	r8, r1, r2, lsl #28
     30c:	00000030 	andeq	r0, r0, r0, lsr r0
     310:	00000138 	andeq	r0, r0, r8, lsr r1
     314:	10001aa4 	andne	r1, r0, r4, lsr #21
     318:	0000002c 	andeq	r0, r0, ip, lsr #32
     31c:	80100e41 	andshi	r0, r0, r1, asr #28
     320:	82038104 	andhi	r8, r3, #4, 2
     324:	41018302 	tstmi	r1, r2, lsl #6
     328:	058e140e 	streq	r1, [lr, #1038]	; 0x40e
     32c:	4c280e41 	stcmi	14, cr0, [r8], #-260	; 0xfffffefc
     330:	ce42140e 	cdpgt	4, 4, cr1, cr2, cr14, {0}
     334:	c341100e 	movtgt	r1, #4110	; 0x100e
     338:	0ec0c1c2 	acseqdm	f4, f2
     33c:	00000000 	andeq	r0, r0, r0
     340:	0000002c 	andeq	r0, r0, ip, lsr #32
     344:	00000138 	andeq	r0, r0, r8, lsr r1
     348:	00000000 	andeq	r0, r0, r0
     34c:	0000002c 	andeq	r0, r0, ip, lsr #32
     350:	810c0e41 	tsthi	ip, r1, asr #28
     354:	83028203 	movwhi	r8, #8707	; 0x2203
     358:	100e4101 	andne	r4, lr, r1, lsl #2
     35c:	0e41048e 	cdpeq	4, 4, cr0, cr1, cr14, {4}
     360:	100e4c20 	andne	r4, lr, r0, lsr #24
     364:	0c0ece42 	stceq	14, cr12, [lr], {66}	; 0x42
     368:	c1c2c341 	bicgt	ip, r2, r1, asr #6
     36c:	0000000e 	andeq	r0, r0, lr
     370:	0000002c 	andeq	r0, r0, ip, lsr #32
     374:	00000138 	andeq	r0, r0, r8, lsr r1
     378:	00000000 	andeq	r0, r0, r0
     37c:	00000028 	andeq	r0, r0, r8, lsr #32
     380:	82080e41 	andhi	r0, r8, #1040	; 0x410
     384:	41018302 	tstmi	r1, r2, lsl #6
     388:	0484100e 	streq	r1, [r4], #14
     38c:	0e41038e 	cdpeq	3, 4, cr0, cr1, cr14, {4}
     390:	100e4b20 	andne	r4, lr, r0, lsr #22
     394:	0ec4ce42 	cdpeq	14, 12, cr12, cr4, cr2, {2}
     398:	c2c34108 	sbcgt	r4, r3, #8, 2
     39c:	0000000e 	andeq	r0, r0, lr
     3a0:	00000018 	andeq	r0, r0, r8, lsl r0
     3a4:	00000138 	andeq	r0, r0, r8, lsr r1
     3a8:	00000000 	andeq	r0, r0, r0
     3ac:	00000020 	andeq	r0, r0, r0, lsr #32
     3b0:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     3b4:	180e4101 	stmdane	lr, {r0, r8, lr}
     3b8:	00040e49 	andeq	r0, r4, r9, asr #28
     3bc:	00000018 	andeq	r0, r0, r8, lsl r0
     3c0:	00000138 	andeq	r0, r0, r8, lsr r1
     3c4:	00000000 	andeq	r0, r0, r0
     3c8:	0000001c 	andeq	r0, r0, ip, lsl r0
     3cc:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     3d0:	100e4101 	andne	r4, lr, r1, lsl #2
     3d4:	00040e48 	andeq	r0, r4, r8, asr #28
     3d8:	00000028 	andeq	r0, r0, r8, lsr #32
     3dc:	00000138 	andeq	r0, r0, r8, lsr r1
     3e0:	00000000 	andeq	r0, r0, r0
     3e4:	00000030 	andeq	r0, r0, r0, lsr r0
     3e8:	82080e41 	andhi	r0, r8, #1040	; 0x410
     3ec:	41018302 	tstmi	r1, r2, lsl #6
     3f0:	038e0c0e 	orreq	r0, lr, #3584	; 0xe00
     3f4:	4e280e41 	cdpmi	14, 2, cr0, cr8, cr1, {2}
     3f8:	ce420c0e 	cdpgt	12, 4, cr0, cr2, cr14, {0}
     3fc:	c341080e 	movtgt	r0, #6158	; 0x180e
     400:	00000ec2 	andeq	r0, r0, r2, asr #29
     404:	0000000c 	andeq	r0, r0, ip
     408:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     40c:	7c020001 	stcvc	0, cr0, [r2], {1}
     410:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     414:	0000000c 	andeq	r0, r0, ip
     418:	00000404 	andeq	r0, r0, r4, lsl #8
     41c:	10001ad0 	ldrdne	r1, [r0], -r0
     420:	00000014 	andeq	r0, r0, r4, lsl r0
     424:	0000000c 	andeq	r0, r0, ip
     428:	00000404 	andeq	r0, r0, r4, lsl #8
     42c:	00000000 	andeq	r0, r0, r0
     430:	00000014 	andeq	r0, r0, r4, lsl r0
     434:	00000018 	andeq	r0, r0, r8, lsl r0
     438:	00000404 	andeq	r0, r0, r4, lsl #8
     43c:	10001ae4 	andne	r1, r0, r4, ror #21
     440:	0000001e 	andeq	r0, r0, lr, lsl r0
     444:	83100e41 	tsthi	r0, #1040	; 0x410
     448:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     44c:	00018e02 	andeq	r8, r1, r2, lsl #28
     450:	0000000c 	andeq	r0, r0, ip
     454:	00000404 	andeq	r0, r0, r4, lsl #8
     458:	10001b04 	andne	r1, r0, r4, lsl #22
     45c:	00000024 	andeq	r0, r0, r4, lsr #32
     460:	00000014 	andeq	r0, r0, r4, lsl r0
     464:	00000404 	andeq	r0, r0, r4, lsl #8
     468:	00000000 	andeq	r0, r0, r0
     46c:	00000008 	andeq	r0, r0, r8
     470:	83080e41 	movwhi	r0, #36417	; 0x8e41
     474:	00018e02 	andeq	r8, r1, r2, lsl #28
     478:	00000018 	andeq	r0, r0, r8, lsl r0
     47c:	00000404 	andeq	r0, r0, r4, lsl #8
     480:	00000000 	andeq	r0, r0, r0
     484:	00000020 	andeq	r0, r0, r0, lsr #32
     488:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     48c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     490:	00018e02 	andeq	r8, r1, r2, lsl #28
     494:	0000000c 	andeq	r0, r0, ip
     498:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     49c:	7c020001 	stcvc	0, cr0, [r2], {1}
     4a0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     4a4:	00000014 	andeq	r0, r0, r4, lsl r0
     4a8:	00000494 	muleq	r0, r4, r4
     4ac:	10001b28 	andne	r1, r0, r8, lsr #22
     4b0:	0000002c 	andeq	r0, r0, ip, lsr #32
     4b4:	54080e41 	strpl	r0, [r8], #-3649	; 0xfffff1bf
     4b8:	0000000e 	andeq	r0, r0, lr
     4bc:	0000000c 	andeq	r0, r0, ip
     4c0:	00000494 	muleq	r0, r4, r4
     4c4:	10001b54 	andne	r1, r0, r4, asr fp
     4c8:	00000036 	andeq	r0, r0, r6, lsr r0
     4cc:	00000020 	andeq	r0, r0, r0, lsr #32
     4d0:	00000494 	muleq	r0, r4, r4
     4d4:	10001b8c 	andne	r1, r0, ip, lsl #23
     4d8:	0000007c 	andeq	r0, r0, ip, ror r0
     4dc:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     4e0:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     4e4:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     4e8:	89038804 	stmdbhi	r3, {r2, fp, pc}
     4ec:	00018e02 	andeq	r8, r1, r2, lsl #28
     4f0:	00000014 	andeq	r0, r0, r4, lsl r0
     4f4:	00000494 	muleq	r0, r4, r4
     4f8:	10001c08 	andne	r1, r0, r8, lsl #24
     4fc:	00000018 	andeq	r0, r0, r8, lsl r0
     500:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     504:	00018e02 	andeq	r8, r1, r2, lsl #28
     508:	00000014 	andeq	r0, r0, r4, lsl r0
     50c:	00000494 	muleq	r0, r4, r4
     510:	10001c20 	andne	r1, r0, r0, lsr #24
     514:	00000008 	andeq	r0, r0, r8
     518:	83080e41 	movwhi	r0, #36417	; 0x8e41
     51c:	00018e02 	andeq	r8, r1, r2, lsl #28
     520:	00000014 	andeq	r0, r0, r4, lsl r0
     524:	00000494 	muleq	r0, r4, r4
     528:	10001c28 	andne	r1, r0, r8, lsr #24
     52c:	00000050 	andeq	r0, r0, r0, asr r0
     530:	83080e41 	movwhi	r0, #36417	; 0x8e41
     534:	00018e02 	andeq	r8, r1, r2, lsl #28
     538:	0000001c 	andeq	r0, r0, ip, lsl r0
     53c:	00000494 	muleq	r0, r4, r4
     540:	10001c78 	andne	r1, r0, r8, ror ip
     544:	000001ac 	andeq	r0, r0, ip, lsr #3
     548:	83180e41 	tsthi	r8, #1040	; 0x410
     54c:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     550:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     554:	00018e02 	andeq	r8, r1, r2, lsl #28
     558:	0000000c 	andeq	r0, r0, ip
     55c:	00000494 	muleq	r0, r4, r4
     560:	10001e24 	andne	r1, r0, r4, lsr #28
     564:	00000006 	andeq	r0, r0, r6
     568:	0000000c 	andeq	r0, r0, ip
     56c:	00000494 	muleq	r0, r4, r4
     570:	10001e2c 	andne	r1, r0, ip, lsr #28
     574:	00000008 	andeq	r0, r0, r8
     578:	0000000c 	andeq	r0, r0, ip
     57c:	00000494 	muleq	r0, r4, r4
     580:	00000000 	andeq	r0, r0, r0
     584:	00000008 	andeq	r0, r0, r8
     588:	0000000c 	andeq	r0, r0, ip
     58c:	00000494 	muleq	r0, r4, r4
     590:	00000000 	andeq	r0, r0, r0
     594:	00000008 	andeq	r0, r0, r8
     598:	0000000c 	andeq	r0, r0, ip
     59c:	00000494 	muleq	r0, r4, r4
     5a0:	00000000 	andeq	r0, r0, r0
     5a4:	00000014 	andeq	r0, r0, r4, lsl r0
     5a8:	0000000c 	andeq	r0, r0, ip
     5ac:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     5b0:	7c020001 	stcvc	0, cr0, [r2], {1}
     5b4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5b8:	00000014 	andeq	r0, r0, r4, lsl r0
     5bc:	000005a8 	andeq	r0, r0, r8, lsr #11
     5c0:	10001e34 	andne	r1, r0, r4, lsr lr
     5c4:	000000fc 	strdeq	r0, [r0], -ip
     5c8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     5cc:	00018e02 	andeq	r8, r1, r2, lsl #28
     5d0:	0000000c 	andeq	r0, r0, ip
     5d4:	000005a8 	andeq	r0, r0, r8, lsr #11
     5d8:	10001f30 	andne	r1, r0, r0, lsr pc
     5dc:	0000000e 	andeq	r0, r0, lr
     5e0:	00000014 	andeq	r0, r0, r4, lsl r0
     5e4:	000005a8 	andeq	r0, r0, r8, lsr #11
     5e8:	00000000 	andeq	r0, r0, r0
     5ec:	00000020 	andeq	r0, r0, r0, lsr #32
     5f0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5f4:	00018e02 	andeq	r8, r1, r2, lsl #28
     5f8:	0000001c 	andeq	r0, r0, ip, lsl r0
     5fc:	000005a8 	andeq	r0, r0, r8, lsr #11
     600:	10001f40 	andne	r1, r0, r0, asr #30
     604:	0000004c 	andeq	r0, r0, ip, asr #32
     608:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     60c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     610:	180e4101 	stmdane	lr, {r0, r8, lr}
     614:	000c0e5f 	andeq	r0, ip, pc, asr lr
     618:	0000000c 	andeq	r0, r0, ip
     61c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     620:	7c020001 	stcvc	0, cr0, [r2], {1}
     624:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     628:	0000000c 	andeq	r0, r0, ip
     62c:	00000618 	andeq	r0, r0, r8, lsl r6
     630:	10002064 	andne	r2, r0, r4, rrx
     634:	0000000c 	andeq	r0, r0, ip
     638:	0000000c 	andeq	r0, r0, ip
     63c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     640:	7c020001 	stcvc	0, cr0, [r2], {1}
     644:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     648:	00000018 	andeq	r0, r0, r8, lsl r0
     64c:	00000638 	andeq	r0, r0, r8, lsr r6
     650:	10002070 	andne	r2, r0, r0, ror r0
     654:	000000a4 	andeq	r0, r0, r4, lsr #1
     658:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     65c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     660:	00018e02 	andeq	r8, r1, r2, lsl #28
     664:	0000000c 	andeq	r0, r0, ip
     668:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     66c:	7c020001 	stcvc	0, cr0, [r2], {1}
     670:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     674:	0000000c 	andeq	r0, r0, ip
     678:	00000664 	andeq	r0, r0, r4, ror #12
     67c:	10002114 	andne	r2, r0, r4, lsl r1
     680:	00000014 	andeq	r0, r0, r4, lsl r0
     684:	00000044 	andeq	r0, r0, r4, asr #32
     688:	00000664 	andeq	r0, r0, r4, ror #12
     68c:	00000000 	andeq	r0, r0, r0
     690:	000000c8 	andeq	r0, r0, r8, asr #1
     694:	83280e42 			; <UNDEFINED> instruction: 0x83280e42
     698:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
     69c:	87078608 	strhi	r8, [r7, -r8, lsl #12]
     6a0:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
     6a4:	8b038a04 	blhi	e2ebc <__HEAP_SIZE+0xe1ebc>
     6a8:	46018e02 	strmi	r8, [r1], -r2, lsl #28
     6ac:	5005300e 	andpl	r3, r5, lr
     6b0:	0b51050c 	bleq	1441ae8 <__RAM_SIZE+0x1341ae8>
     6b4:	50060a60 	andpl	r0, r6, r0, ror #20
     6b8:	280e5106 	stmdacs	lr, {r1, r2, r8, ip, lr}
     6bc:	cacbce43 	bgt	ff2f3fd0 <__StackTop+0xc71f3fd0>
     6c0:	c6c7c8c9 	strbgt	ip, [r7], r9, asr #17
     6c4:	0ec3c4c5 	cdpeq	4, 12, cr12, cr3, cr5, {6}
     6c8:	000b4200 	andeq	r4, fp, r0, lsl #4
     6cc:	0000000c 	andeq	r0, r0, ip
     6d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     6d4:	7c020001 	stcvc	0, cr0, [r2], {1}
     6d8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     6dc:	0000000c 	andeq	r0, r0, ip
     6e0:	000006cc 	andeq	r0, r0, ip, asr #13
     6e4:	10002128 	andne	r2, r0, r8, lsr #2
     6e8:	0000000c 	andeq	r0, r0, ip
     6ec:	0000000c 	andeq	r0, r0, ip
     6f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     6f4:	7c020001 	stcvc	0, cr0, [r2], {1}
     6f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     6fc:	00000020 	andeq	r0, r0, r0, lsr #32
     700:	000006ec 	andeq	r0, r0, ip, ror #13
     704:	10002134 	andne	r2, r0, r4, lsr r1
     708:	0000002c 	andeq	r0, r0, ip, lsr #32
     70c:	83100e41 	tsthi	r0, #1040	; 0x410
     710:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     714:	4f018e02 	svcmi	0x00018e02
     718:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
     71c:	0000000e 	andeq	r0, r0, lr
     720:	0000000c 	andeq	r0, r0, ip
     724:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     728:	7c020001 	stcvc	0, cr0, [r2], {1}
     72c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     730:	0000000c 	andeq	r0, r0, ip
     734:	00000720 	andeq	r0, r0, r0, lsr #14
     738:	00000000 	andeq	r0, r0, r0
     73c:	00000002 	andeq	r0, r0, r2
     740:	0000000c 	andeq	r0, r0, ip
     744:	00000720 	andeq	r0, r0, r0, lsr #14
     748:	00000000 	andeq	r0, r0, r0
     74c:	00000002 	andeq	r0, r0, r2
     750:	0000000c 	andeq	r0, r0, ip
     754:	00000720 	andeq	r0, r0, r0, lsr #14
     758:	00000000 	andeq	r0, r0, r0
     75c:	00000002 	andeq	r0, r0, r2
     760:	0000000c 	andeq	r0, r0, ip
     764:	00000720 	andeq	r0, r0, r0, lsr #14
     768:	00000000 	andeq	r0, r0, r0
     76c:	00000002 	andeq	r0, r0, r2
     770:	0000000c 	andeq	r0, r0, ip
     774:	00000720 	andeq	r0, r0, r0, lsr #14
     778:	00000000 	andeq	r0, r0, r0
     77c:	00000002 	andeq	r0, r0, r2
     780:	0000000c 	andeq	r0, r0, ip
     784:	00000720 	andeq	r0, r0, r0, lsr #14
     788:	10002160 	andne	r2, r0, r0, ror #2
     78c:	00000002 	andeq	r0, r0, r2
     790:	0000000c 	andeq	r0, r0, ip
     794:	00000720 	andeq	r0, r0, r0, lsr #14
     798:	00000000 	andeq	r0, r0, r0
     79c:	00000004 	andeq	r0, r0, r4
     7a0:	0000000c 	andeq	r0, r0, ip
     7a4:	00000720 	andeq	r0, r0, r0, lsr #14
     7a8:	00000000 	andeq	r0, r0, r0
     7ac:	00000004 	andeq	r0, r0, r4
     7b0:	0000000c 	andeq	r0, r0, ip
     7b4:	00000720 	andeq	r0, r0, r0, lsr #14
     7b8:	00000000 	andeq	r0, r0, r0
     7bc:	00000002 	andeq	r0, r0, r2
     7c0:	0000000c 	andeq	r0, r0, ip
     7c4:	00000720 	andeq	r0, r0, r0, lsr #14
     7c8:	10002164 	andne	r2, r0, r4, ror #2
     7cc:	00000002 	andeq	r0, r0, r2
     7d0:	0000000c 	andeq	r0, r0, ip
     7d4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     7d8:	7c020001 	stcvc	0, cr0, [r2], {1}
     7dc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     7e0:	00000020 	andeq	r0, r0, r0, lsr #32
     7e4:	000007d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     7e8:	10002168 	andne	r2, r0, r8, ror #2
     7ec:	00000090 	muleq	r0, r0, r0
     7f0:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     7f4:	86078508 	strhi	r8, [r7], -r8, lsl #10
     7f8:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     7fc:	8a038904 	bhi	e2c14 <__HEAP_SIZE+0xe1c14>
     800:	00018e02 	andeq	r8, r1, r2, lsl #28
     804:	0000000c 	andeq	r0, r0, ip
     808:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     80c:	7c020001 	stcvc	0, cr0, [r2], {1}
     810:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     814:	00000024 	andeq	r0, r0, r4, lsr #32
     818:	00000804 	andeq	r0, r0, r4, lsl #16
     81c:	00000000 	andeq	r0, r0, r0
     820:	00000048 	andeq	r0, r0, r8, asr #32
     824:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     828:	86058506 	strhi	r8, [r5], -r6, lsl #10
     82c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     830:	60018e02 	andvs	r8, r1, r2, lsl #28
     834:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
     838:	000ec4c5 	andeq	ip, lr, r5, asr #9
     83c:	00000028 	andeq	r0, r0, r8, lsr #32
     840:	00000804 	andeq	r0, r0, r4, lsl #16
     844:	00000000 	andeq	r0, r0, r0
     848:	00000090 	muleq	r0, r0, r0
     84c:	84100e46 	ldrhi	r0, [r0], #-3654	; 0xfffff1ba
     850:	86038504 	strhi	r8, [r3], -r4, lsl #10
     854:	7c018e02 	stcvc	14, cr8, [r1], {2}
     858:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
     85c:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
     860:	000e410b 	andeq	r4, lr, fp, lsl #2
     864:	cec6c5c4 	cdpgt	5, 12, cr12, cr6, cr4, {6}
     868:	0000000c 	andeq	r0, r0, ip
     86c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     870:	7c020001 	stcvc	0, cr0, [r2], {1}
     874:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     878:	0000001c 	andeq	r0, r0, ip, lsl r0
     87c:	00000868 	andeq	r0, r0, r8, ror #16
     880:	100021f8 	strdne	r2, [r0], -r8
     884:	00000282 	andeq	r0, r0, r2, lsl #5
     888:	0c0e470a 	stceq	7, cr4, [lr], {10}
     88c:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     890:	3a03018e 	bcc	c0ed0 <__HEAP_SIZE+0xbfed0>
     894:	00000b01 	andeq	r0, r0, r1, lsl #22
     898:	00000018 	andeq	r0, r0, r8, lsl r0
     89c:	00000868 	andeq	r0, r0, r8, ror #16
     8a0:	1000247c 	andne	r2, r0, ip, ror r4
     8a4:	0000001e 	andeq	r0, r0, lr, lsl r0
     8a8:	0c0e460a 	stceq	6, cr4, [lr], {10}
     8ac:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     8b0:	0b49018e 	bleq	1240ef0 <__RAM_SIZE+0x1140ef0>
     8b4:	00000018 	andeq	r0, r0, r8, lsl r0
     8b8:	00000868 	andeq	r0, r0, r8, ror #16
     8bc:	1000249c 	mulne	r0, ip, r4
     8c0:	00000022 	andeq	r0, r0, r2, lsr #32
     8c4:	0c0e460a 	stceq	6, cr4, [lr], {10}
     8c8:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     8cc:	0b4b018e 	bleq	12c0f0c <__RAM_SIZE+0x11c0f0c>
     8d0:	00000018 	andeq	r0, r0, r8, lsl r0
     8d4:	00000868 	andeq	r0, r0, r8, ror #16
     8d8:	100024c0 	andne	r2, r0, r0, asr #9
     8dc:	00000042 	andeq	r0, r0, r2, asr #32
     8e0:	0c0e5a0a 			; <UNDEFINED> instruction: 0x0c0e5a0a
     8e4:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     8e8:	0b47018e 	bleq	11c0f28 <__RAM_SIZE+0x10c0f28>
     8ec:	00000024 	andeq	r0, r0, r4, lsr #32
     8f0:	00000868 	andeq	r0, r0, r8, ror #16
     8f4:	10002504 	andne	r2, r0, r4, lsl #10
     8f8:	0000006a 	andeq	r0, r0, sl, rrx
     8fc:	0e450a0a 	vmlaeq.f32	s1, s10, s20
     900:	8503840c 	strhi	r8, [r3, #-1036]	; 0xfffffbf4
     904:	43018e02 	movwmi	r8, #7682	; 0x1e02
     908:	0c0e450b 	cfstr32eq	mvfx4, [lr], {11}
     90c:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
     910:	0b68018e 	bleq	1a00f50 <__RAM_SIZE+0x1900f50>
     914:	0000000c 	andeq	r0, r0, ip
     918:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     91c:	7c020001 	stcvc	0, cr0, [r2], {1}
     920:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     924:	0000001c 	andeq	r0, r0, ip, lsl r0
     928:	00000914 	andeq	r0, r0, r4, lsl r9
     92c:	10002570 	andne	r2, r0, r0, ror r5
     930:	00000254 	andeq	r0, r0, r4, asr r2
     934:	100e410a 	andne	r4, lr, sl, lsl #2
     938:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
     93c:	018e0286 	orreq	r0, lr, r6, lsl #5
     940:	0b012903 	bleq	4ad54 <__HEAP_SIZE+0x49d54>
     944:	0000001c 	andeq	r0, r0, ip, lsl r0
     948:	00000914 	andeq	r0, r0, r4, lsl r9
     94c:	100027c4 	andne	r2, r0, r4, asr #15
     950:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     954:	100e410a 	andne	r4, lr, sl, lsl #2
     958:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
     95c:	018e0286 	orreq	r0, lr, r6, lsl #5
     960:	000be702 	andeq	lr, fp, r2, lsl #14
     964:	0000000c 	andeq	r0, r0, ip
     968:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     96c:	7c020001 	stcvc	0, cr0, [r2], {1}
     970:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     974:	0000001c 	andeq	r0, r0, ip, lsl r0
     978:	00000964 	andeq	r0, r0, r4, ror #18
     97c:	10002994 	mulne	r0, r4, r9
     980:	0000008a 	andeq	r0, r0, sl, lsl #1
     984:	040e4c0a 	streq	r4, [lr], #-3082	; 0xfffff3f6
     988:	0e410a4a 	vmlseq.f32	s1, s2, s20
     98c:	520b5b00 	andpl	r5, fp, #0, 22
     990:	0b41000e 	bleq	10409d0 <__RAM_SIZE+0xf409d0>
     994:	00000018 	andeq	r0, r0, r8, lsl r0
     998:	00000964 	andeq	r0, r0, r4, ror #18
     99c:	10002a20 	andne	r2, r0, r0, lsr #20
     9a0:	00000020 	andeq	r0, r0, r0, lsr #32
     9a4:	080e490a 	stmdaeq	lr, {r1, r3, r8, fp, lr}
     9a8:	018e0280 	orreq	r0, lr, r0, lsl #5
     9ac:	00000b47 	andeq	r0, r0, r7, asr #22
     9b0:	00000014 	andeq	r0, r0, r4, lsl r0
     9b4:	00000964 	andeq	r0, r0, r4, ror #18
     9b8:	10002a40 	andne	r2, r0, r0, asr #20
     9bc:	00000012 	andeq	r0, r0, r2, lsl r0
     9c0:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
     9c4:	0b47028e 	bleq	11c1404 <__RAM_SIZE+0x10c1404>
     9c8:	00000014 	andeq	r0, r0, r4, lsl r0
     9cc:	00000964 	andeq	r0, r0, r4, ror #18
     9d0:	10002a54 	andne	r2, r0, r4, asr sl
     9d4:	00000012 	andeq	r0, r0, r2, lsl r0
     9d8:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
     9dc:	0b47028e 	bleq	11c141c <__RAM_SIZE+0x10c141c>
     9e0:	00000014 	andeq	r0, r0, r4, lsl r0
     9e4:	00000964 	andeq	r0, r0, r4, ror #18
     9e8:	10002a68 	andne	r2, r0, r8, ror #20
     9ec:	00000012 	andeq	r0, r0, r2, lsl r0
     9f0:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
     9f4:	0b47028e 	bleq	11c1434 <__RAM_SIZE+0x10c1434>
     9f8:	00000014 	andeq	r0, r0, r4, lsl r0
     9fc:	00000964 	andeq	r0, r0, r4, ror #18
     a00:	10002a7c 	andne	r2, r0, ip, ror sl
     a04:	00000012 	andeq	r0, r0, r2, lsl r0
     a08:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
     a0c:	0b47028e 	bleq	11c144c <__RAM_SIZE+0x10c144c>
     a10:	00000014 	andeq	r0, r0, r4, lsl r0
     a14:	00000964 	andeq	r0, r0, r4, ror #18
     a18:	10002a90 	mulne	r0, r0, sl
     a1c:	00000012 	andeq	r0, r0, r2, lsl r0
     a20:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
     a24:	0b47028e 	bleq	11c1464 <__RAM_SIZE+0x10c1464>
     a28:	0000000c 	andeq	r0, r0, ip
     a2c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     a30:	7c020001 	stcvc	0, cr0, [r2], {1}
     a34:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     a38:	00000010 	andeq	r0, r0, r0, lsl r0
     a3c:	00000a28 	andeq	r0, r0, r8, lsr #20
     a40:	10002aa4 	andne	r2, r0, r4, lsr #21
     a44:	0000004e 	andeq	r0, r0, lr, asr #32
     a48:	000b670a 	andeq	r6, fp, sl, lsl #14
     a4c:	0000000c 	andeq	r0, r0, ip
     a50:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     a54:	7c020001 	stcvc	0, cr0, [r2], {1}
     a58:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     a5c:	00000010 	andeq	r0, r0, r0, lsl r0
     a60:	00000a4c 	andeq	r0, r0, ip, asr #20
     a64:	10002af4 	strdne	r2, [r0], -r4
     a68:	00000040 	andeq	r0, r0, r0, asr #32
     a6c:	000b600a 	andeq	r6, fp, sl
     a70:	0000000c 	andeq	r0, r0, ip
     a74:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     a78:	7c020001 	stcvc	0, cr0, [r2], {1}
     a7c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     a80:	00000018 	andeq	r0, r0, r8, lsl r0
     a84:	00000a70 	andeq	r0, r0, r0, ror sl
     a88:	10002b34 	andne	r2, r0, r4, lsr fp
     a8c:	00000030 	andeq	r0, r0, r0, lsr r0
     a90:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
     a94:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
     a98:	00000010 	andeq	r0, r0, r0, lsl r0
     a9c:	0000000c 	andeq	r0, r0, ip
     aa0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     aa4:	7c020001 	stcvc	0, cr0, [r2], {1}
     aa8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     aac:	00000024 	andeq	r0, r0, r4, lsr #32
     ab0:	00000a9c 	muleq	r0, ip, sl
     ab4:	10002b64 	andne	r2, r0, r4, ror #22
     ab8:	000002ec 	andeq	r0, r0, ip, ror #5
     abc:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     ac0:	86088509 	strhi	r8, [r8], -r9, lsl #10
     ac4:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     ac8:	8a048905 	bhi	122ee4 <__RAM_SIZE+0x22ee4>
     acc:	8e028b03 	vmlahi.f64	d8, d2, d3
     ad0:	00000001 	andeq	r0, r0, r1
     ad4:	0000000c 	andeq	r0, r0, ip
     ad8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     adc:	7c020001 	stcvc	0, cr0, [r2], {1}
     ae0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ae4:	0000000c 	andeq	r0, r0, ip
     ae8:	00000ad4 	ldrdeq	r0, [r0], -r4
     aec:	10002e50 	andne	r2, r0, r0, asr lr
     af0:	00000012 	andeq	r0, r0, r2, lsl r0
     af4:	00000020 	andeq	r0, r0, r0, lsr #32
     af8:	00000ad4 	ldrdeq	r0, [r0], -r4
     afc:	10002e64 	andne	r2, r0, r4, ror #28
     b00:	00000060 	andeq	r0, r0, r0, rrx
     b04:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     b08:	86078508 	strhi	r8, [r7], -r8, lsl #10
     b0c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     b10:	8a038904 	bhi	e2f28 <__HEAP_SIZE+0xe1f28>
     b14:	00018e02 	andeq	r8, r1, r2, lsl #28
     b18:	0000000c 	andeq	r0, r0, ip
     b1c:	00000ad4 	ldrdeq	r0, [r0], -r4
     b20:	10002ec4 	andne	r2, r0, r4, asr #29
     b24:	00000028 	andeq	r0, r0, r8, lsr #32
     b28:	0000002c 	andeq	r0, r0, ip, lsr #32
     b2c:	00000ad4 	ldrdeq	r0, [r0], -r4
     b30:	10002eec 	andne	r2, r0, ip, ror #29
     b34:	0000009c 	muleq	r0, ip, r0
     b38:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
     b3c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     b40:	180e4201 	stmdane	lr, {r0, r9, lr}
     b44:	0c0e0a65 			; <UNDEFINED> instruction: 0x0c0e0a65
     b48:	0a440b41 	beq	1103854 <__RAM_SIZE+0x1003854>
     b4c:	0b410c0e 	bleq	1043b8c <__RAM_SIZE+0xf43b8c>
     b50:	0c0e0a50 			; <UNDEFINED> instruction: 0x0c0e0a50
     b54:	00000b41 	andeq	r0, r0, r1, asr #22
     b58:	00000018 	andeq	r0, r0, r8, lsl r0
     b5c:	00000ad4 	ldrdeq	r0, [r0], -r4
     b60:	10002f88 	andne	r2, r0, r8, lsl #31
     b64:	00000058 	andeq	r0, r0, r8, asr r0
     b68:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
     b6c:	67018e02 	strvs	r8, [r1, -r2, lsl #28]
     b70:	000ec4ce 	andeq	ip, lr, lr, asr #9
     b74:	0000000c 	andeq	r0, r0, ip
     b78:	00000ad4 	ldrdeq	r0, [r0], -r4
     b7c:	10002fe0 	andne	r2, r0, r0, ror #31
     b80:	00000004 	andeq	r0, r0, r4
     b84:	0000000c 	andeq	r0, r0, ip
     b88:	00000ad4 	ldrdeq	r0, [r0], -r4
     b8c:	10002fe4 	andne	r2, r0, r4, ror #31
     b90:	0000000a 	andeq	r0, r0, sl
     b94:	0000000c 	andeq	r0, r0, ip
     b98:	00000ad4 	ldrdeq	r0, [r0], -r4
     b9c:	10002ff0 	strdne	r2, [r0], -r0
     ba0:	00000002 	andeq	r0, r0, r2
     ba4:	00000018 	andeq	r0, r0, r8, lsl r0
     ba8:	00000ad4 	ldrdeq	r0, [r0], -r4
     bac:	10002ff4 	strdne	r2, [r0], -r4
     bb0:	0000003e 	andeq	r0, r0, lr, lsr r0
     bb4:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     bb8:	86038504 	strhi	r8, [r3], -r4, lsl #10
     bbc:	00018e02 	andeq	r8, r1, r2, lsl #28
     bc0:	0000002c 	andeq	r0, r0, ip, lsr #32
     bc4:	00000ad4 	ldrdeq	r0, [r0], -r4
     bc8:	10003034 	andne	r3, r0, r4, lsr r0
     bcc:	000000da 	ldrdeq	r0, [r0], -sl
     bd0:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     bd4:	86078508 	strhi	r8, [r7], -r8, lsl #10
     bd8:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     bdc:	8a038904 	bhi	e2ff4 <__HEAP_SIZE+0xe1ff4>
     be0:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
     be4:	0207f00e 	andeq	pc, r7, #14
     be8:	200e0a5b 	andcs	r0, lr, fp, asr sl
     bec:	00000b42 	andeq	r0, r0, r2, asr #22
     bf0:	0000000c 	andeq	r0, r0, ip
     bf4:	00000ad4 	ldrdeq	r0, [r0], -r4
     bf8:	10003110 	andne	r3, r0, r0, lsl r1
     bfc:	00000004 	andeq	r0, r0, r4
     c00:	00000024 	andeq	r0, r0, r4, lsr #32
     c04:	00000ad4 	ldrdeq	r0, [r0], -r4
     c08:	10003114 	andne	r3, r0, r4, lsl r1
     c0c:	00000066 	andeq	r0, r0, r6, rrx
     c10:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     c14:	86048505 	strhi	r8, [r4], -r5, lsl #10
     c18:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     c1c:	f80e4201 			; <UNDEFINED> instruction: 0xf80e4201
     c20:	0e0a6603 	cfmadd32eq	mvax0, mvfx6, mvfx10, mvfx3
     c24:	000b4114 	andeq	r4, fp, r4, lsl r1
     c28:	00000018 	andeq	r0, r0, r8, lsl r0
     c2c:	00000ad4 	ldrdeq	r0, [r0], -r4
     c30:	1000317c 	andne	r3, r0, ip, ror r1
     c34:	00000012 	andeq	r0, r0, r2, lsl r0
     c38:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     c3c:	0ec44701 	cdpeq	7, 12, cr4, cr4, cr1, {0}
     c40:	00000000 	andeq	r0, r0, r0
     c44:	00000018 	andeq	r0, r0, r8, lsl r0
     c48:	00000ad4 	ldrdeq	r0, [r0], -r4
     c4c:	10003190 	mulne	r0, r0, r1
     c50:	00000044 	andeq	r0, r0, r4, asr #32
     c54:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     c58:	86038504 	strhi	r8, [r3], -r4, lsl #10
     c5c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c60:	0000000c 	andeq	r0, r0, ip
     c64:	00000ad4 	ldrdeq	r0, [r0], -r4
     c68:	100031d4 	ldrdne	r3, [r0], -r4
     c6c:	00000012 	andeq	r0, r0, r2, lsl r0
     c70:	0000000c 	andeq	r0, r0, ip
     c74:	00000ad4 	ldrdeq	r0, [r0], -r4
     c78:	100031e8 	andne	r3, r0, r8, ror #3
     c7c:	00000002 	andeq	r0, r0, r2
     c80:	0000000c 	andeq	r0, r0, ip
     c84:	00000ad4 	ldrdeq	r0, [r0], -r4
     c88:	100031ec 	andne	r3, r0, ip, ror #3
     c8c:	0000000c 	andeq	r0, r0, ip
     c90:	0000000c 	andeq	r0, r0, ip
     c94:	00000ad4 	ldrdeq	r0, [r0], -r4
     c98:	100031f8 	strdne	r3, [r0], -r8
     c9c:	00000034 	andeq	r0, r0, r4, lsr r0
     ca0:	0000001c 	andeq	r0, r0, ip, lsl r0
     ca4:	00000ad4 	ldrdeq	r0, [r0], -r4
     ca8:	1000322c 	andne	r3, r0, ip, lsr #4
     cac:	00000018 	andeq	r0, r0, r8, lsl r0
     cb0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     cb4:	41018e02 	tstmi	r1, r2, lsl #28
     cb8:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
     cbc:	00000008 	andeq	r0, r0, r8
     cc0:	0000000c 	andeq	r0, r0, ip
     cc4:	00000ad4 	ldrdeq	r0, [r0], -r4
     cc8:	10003244 	andne	r3, r0, r4, asr #4
     ccc:	00000034 	andeq	r0, r0, r4, lsr r0
     cd0:	0000001c 	andeq	r0, r0, ip, lsl r0
     cd4:	00000ad4 	ldrdeq	r0, [r0], -r4
     cd8:	10003278 	andne	r3, r0, r8, ror r2
     cdc:	00000018 	andeq	r0, r0, r8, lsl r0
     ce0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     ce4:	41018e02 	tstmi	r1, r2, lsl #28
     ce8:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
     cec:	00000008 	andeq	r0, r0, r8
     cf0:	00000020 	andeq	r0, r0, r0, lsr #32
     cf4:	00000ad4 	ldrdeq	r0, [r0], -r4
     cf8:	10003290 	mulne	r0, r0, r2
     cfc:	0000007c 	andeq	r0, r0, ip, ror r0
     d00:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     d04:	86048505 	strhi	r8, [r4], -r5, lsl #10
     d08:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     d0c:	d00e4301 	andle	r4, lr, r1, lsl #6
     d10:	140e7904 	strne	r7, [lr], #-2308	; 0xfffff6fc
     d14:	00000030 	andeq	r0, r0, r0, lsr r0
     d18:	00000ad4 	ldrdeq	r0, [r0], -r4
     d1c:	1000330c 	andne	r3, r0, ip, lsl #6
     d20:	000002c8 	andeq	r0, r0, r8, asr #5
     d24:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     d28:	86088509 	strhi	r8, [r8], -r9, lsl #10
     d2c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     d30:	8a048905 	bhi	12314c <__RAM_SIZE+0x2314c>
     d34:	8e028b03 	vmlahi.f64	d8, d2, d3
     d38:	480e4201 	stmdami	lr, {r0, r9, lr}
     d3c:	240e0a64 	strcs	r0, [lr], #-2660	; 0xfffff59c
     d40:	0a710b42 	beq	1c43a50 <__RAM_SIZE+0x1b43a50>
     d44:	0b42240e 	bleq	1089d84 <__RAM_SIZE+0xf89d84>
     d48:	0000000c 	andeq	r0, r0, ip
     d4c:	00000ad4 	ldrdeq	r0, [r0], -r4
     d50:	100035d4 	ldrdne	r3, [r0], -r4
     d54:	00000004 	andeq	r0, r0, r4
     d58:	0000000c 	andeq	r0, r0, ip
     d5c:	00000ad4 	ldrdeq	r0, [r0], -r4
     d60:	100035d8 	ldrdne	r3, [r0], -r8
     d64:	00000004 	andeq	r0, r0, r4
     d68:	0000000c 	andeq	r0, r0, ip
     d6c:	00000ad4 	ldrdeq	r0, [r0], -r4
     d70:	100035dc 	ldrdne	r3, [r0], -ip
     d74:	00000004 	andeq	r0, r0, r4
     d78:	0000003c 	andeq	r0, r0, ip, lsr r0
     d7c:	00000ad4 	ldrdeq	r0, [r0], -r4
     d80:	100035e0 	andne	r3, r0, r0, ror #11
     d84:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
     d88:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     d8c:	86068507 	strhi	r8, [r6], -r7, lsl #10
     d90:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     d94:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     d98:	a80e4201 	stmdage	lr, {r0, r9, lr}
     d9c:	0e0a7102 	adfeqe	f7, f2, f2
     da0:	6b0b421c 	blvs	2d1618 <__RAM_SIZE+0x1d1618>
     da4:	421c0e0a 	andsmi	r0, ip, #10, 28	; 0xa0
     da8:	0a48020b 	beq	12015dc <__RAM_SIZE+0x11015dc>
     dac:	0b421c0e 	bleq	1087dec <__RAM_SIZE+0xf87dec>
     db0:	1c0e0a5f 			; <UNDEFINED> instruction: 0x1c0e0a5f
     db4:	00000b42 	andeq	r0, r0, r2, asr #22
     db8:	0000000c 	andeq	r0, r0, ip
     dbc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     dc0:	7c020001 	stcvc	0, cr0, [r2], {1}
     dc4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     dc8:	00000018 	andeq	r0, r0, r8, lsl r0
     dcc:	00000db8 			; <UNDEFINED> instruction: 0x00000db8
     dd0:	10003a40 	andne	r3, r0, r0, asr #20
     dd4:	0000003c 	andeq	r0, r0, ip, lsr r0
     dd8:	84040e4a 	strhi	r0, [r4], #-3658	; 0xfffff1b6
     ddc:	0ec44901 	vdiveq.f16	s9, s8, s2	; <UNPREDICTABLE>
     de0:	00000000 	andeq	r0, r0, r0
     de4:	0000001c 	andeq	r0, r0, ip, lsl r0
     de8:	00000db8 			; <UNDEFINED> instruction: 0x00000db8
     dec:	10003a7c 	andne	r3, r0, ip, ror sl
     df0:	00000018 	andeq	r0, r0, r8, lsl r0
     df4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     df8:	41018e02 	tstmi	r1, r2, lsl #28
     dfc:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
     e00:	00000008 	andeq	r0, r0, r8
     e04:	0000000c 	andeq	r0, r0, ip
     e08:	00000db8 			; <UNDEFINED> instruction: 0x00000db8
     e0c:	10003a94 	mulne	r0, r4, sl
     e10:	00000002 	andeq	r0, r0, r2
     e14:	00000028 	andeq	r0, r0, r8, lsr #32
     e18:	00000db8 			; <UNDEFINED> instruction: 0x00000db8
     e1c:	10003a98 	mulne	r0, r8, sl
     e20:	000002ca 	andeq	r0, r0, sl, asr #5
     e24:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     e28:	86068507 	strhi	r8, [r6], -r7, lsl #10
     e2c:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     e30:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     e34:	300e4301 	andcc	r4, lr, r1, lsl #6
     e38:	1c0e0a6a 			; <UNDEFINED> instruction: 0x1c0e0a6a
     e3c:	00000b42 	andeq	r0, r0, r2, asr #22
     e40:	00000018 	andeq	r0, r0, r8, lsl r0
     e44:	00000db8 			; <UNDEFINED> instruction: 0x00000db8
     e48:	10003d64 	andne	r3, r0, r4, ror #26
     e4c:	00000030 	andeq	r0, r0, r0, lsr r0
     e50:	8e040e49 	cdphi	14, 0, cr0, cr4, cr9, {2}
     e54:	180e4101 	stmdane	lr, {r0, r8, lr}
     e58:	00040e4c 	andeq	r0, r4, ip, asr #28
     e5c:	00000014 	andeq	r0, r0, r4, lsl r0
     e60:	00000db8 			; <UNDEFINED> instruction: 0x00000db8
     e64:	10003d94 	mulne	r0, r4, sp
     e68:	0000000a 	andeq	r0, r0, sl
     e6c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     e70:	00018e02 	andeq	r8, r1, r2, lsl #28
     e74:	00000014 	andeq	r0, r0, r4, lsl r0
     e78:	00000db8 			; <UNDEFINED> instruction: 0x00000db8
     e7c:	10003da0 	andne	r3, r0, r0, lsr #27
     e80:	00000012 	andeq	r0, r0, r2, lsl r0
     e84:	83080e41 	movwhi	r0, #36417	; 0x8e41
     e88:	00018e02 	andeq	r8, r1, r2, lsl #28
     e8c:	00000014 	andeq	r0, r0, r4, lsl r0
     e90:	00000db8 			; <UNDEFINED> instruction: 0x00000db8
     e94:	00000000 	andeq	r0, r0, r0
     e98:	00000006 	andeq	r0, r0, r6
     e9c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     ea0:	00018e02 	andeq	r8, r1, r2, lsl #28
     ea4:	00000014 	andeq	r0, r0, r4, lsl r0
     ea8:	00000db8 			; <UNDEFINED> instruction: 0x00000db8
     eac:	00000000 	andeq	r0, r0, r0
     eb0:	00000006 	andeq	r0, r0, r6
     eb4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     eb8:	00018e02 	andeq	r8, r1, r2, lsl #28
     ebc:	0000000c 	andeq	r0, r0, ip
     ec0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ec4:	7c020001 	stcvc	0, cr0, [r2], {1}
     ec8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ecc:	00000014 	andeq	r0, r0, r4, lsl r0
     ed0:	00000ebc 			; <UNDEFINED> instruction: 0x00000ebc
     ed4:	10003db8 			; <UNDEFINED> instruction: 0x10003db8
     ed8:	0000000e 	andeq	r0, r0, lr
     edc:	83080e42 	movwhi	r0, #36418	; 0x8e42
     ee0:	00018e02 	andeq	r8, r1, r2, lsl #28
     ee4:	0000000c 	andeq	r0, r0, ip
     ee8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     eec:	7c020001 	stcvc	0, cr0, [r2], {1}
     ef0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ef4:	00000018 	andeq	r0, r0, r8, lsl r0
     ef8:	00000ee4 	andeq	r0, r0, r4, ror #29
     efc:	00000000 	andeq	r0, r0, r0
     f00:	00000030 	andeq	r0, r0, r0, lsr r0
     f04:	83100e41 	tsthi	r0, #1040	; 0x410
     f08:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f0c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f10:	0000001c 	andeq	r0, r0, ip, lsl r0
     f14:	00000ee4 	andeq	r0, r0, r4, ror #29
     f18:	00000000 	andeq	r0, r0, r0
     f1c:	0000004c 	andeq	r0, r0, ip, asr #32
     f20:	83180e42 	tsthi	r8, #1056	; 0x420
     f24:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     f28:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     f2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     f30:	00000024 	andeq	r0, r0, r4, lsr #32
     f34:	00000ee4 	andeq	r0, r0, r4, ror #29
     f38:	00000000 	andeq	r0, r0, r0
     f3c:	00000056 	andeq	r0, r0, r6, asr r0
     f40:	83100e42 	tsthi	r0, #1056	; 0x420
     f44:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f48:	5c018e02 	stcpl	14, cr8, [r1], {2}
     f4c:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
     f50:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
     f54:	0000000b 	andeq	r0, r0, fp
     f58:	00000020 	andeq	r0, r0, r0, lsr #32
     f5c:	00000ee4 	andeq	r0, r0, r4, ror #29
     f60:	00000000 	andeq	r0, r0, r0
     f64:	00000064 	andeq	r0, r0, r4, rrx
     f68:	83100e45 	tsthi	r0, #1104	; 0x450
     f6c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f70:	6a018e02 	bvs	64780 <__HEAP_SIZE+0x63780>
     f74:	c4c3000e 	strbgt	r0, [r3], #14
     f78:	0000cec5 	andeq	ip, r0, r5, asr #29
     f7c:	00000024 	andeq	r0, r0, r4, lsr #32
     f80:	00000ee4 	andeq	r0, r0, r4, ror #29
     f84:	10003eb4 			; <UNDEFINED> instruction: 0x10003eb4
     f88:	0000005c 	andeq	r0, r0, ip, asr r0
     f8c:	83100e41 	tsthi	r0, #1040	; 0x410
     f90:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     f94:	5d018e02 	stcpl	14, cr8, [r1, #-8]
     f98:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
     f9c:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
     fa0:	0000000b 	andeq	r0, r0, fp
     fa4:	00000018 	andeq	r0, r0, r8, lsl r0
     fa8:	00000ee4 	andeq	r0, r0, r4, ror #29
     fac:	00000000 	andeq	r0, r0, r0
     fb0:	00000054 	andeq	r0, r0, r4, asr r0
     fb4:	84100e43 	ldrhi	r0, [r0], #-3651	; 0xfffff1bd
     fb8:	86038504 	strhi	r8, [r3], -r4, lsl #10
     fbc:	00018e02 	andeq	r8, r1, r2, lsl #28
     fc0:	00000018 	andeq	r0, r0, r8, lsl r0
     fc4:	00000ee4 	andeq	r0, r0, r4, ror #29
     fc8:	00000000 	andeq	r0, r0, r0
     fcc:	00000038 	andeq	r0, r0, r8, lsr r0
     fd0:	83100e41 	tsthi	r0, #1040	; 0x410
     fd4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     fd8:	00018e02 	andeq	r8, r1, r2, lsl #28
     fdc:	00000018 	andeq	r0, r0, r8, lsl r0
     fe0:	00000ee4 	andeq	r0, r0, r4, ror #29
     fe4:	00000000 	andeq	r0, r0, r0
     fe8:	00000068 	andeq	r0, r0, r8, rrx
     fec:	83100e41 	tsthi	r0, #1040	; 0x410
     ff0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     ff4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ff8:	0000000c 	andeq	r0, r0, ip
     ffc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1000:	7c020001 	stcvc	0, cr0, [r2], {1}
    1004:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1008:	00000018 	andeq	r0, r0, r8, lsl r0
    100c:	00000ff8 	strdeq	r0, [r0], -r8
    1010:	10003f10 	andne	r3, r0, r0, lsl pc
    1014:	0000002c 	andeq	r0, r0, ip, lsr #32
    1018:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    101c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1020:	00018e02 	andeq	r8, r1, r2, lsl #28
    1024:	0000000c 	andeq	r0, r0, ip
    1028:	00000ff8 	strdeq	r0, [r0], -r8
    102c:	10003f3c 	andne	r3, r0, ip, lsr pc
    1030:	00000004 	andeq	r0, r0, r4

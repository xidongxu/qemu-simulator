
.\build\gcc/an505-qemu.elf:     file format elf32-littlearm


Disassembly of section .text:

10000000 <__Vectors>:
10000000:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10000004:	10002f7d 	andne	r2, r0, sp, ror pc
10000008:	10002fd1 	ldrdne	r2, [r0], -r1
1000000c:	10003055 	andne	r3, r0, r5, asr r0
10000010:	10002fd1 	ldrdne	r2, [r0], -r1
10000014:	10002fd1 	ldrdne	r2, [r0], -r1
10000018:	10003059 	andne	r3, r0, r9, asr r0
1000001c:	10002fd1 	ldrdne	r2, [r0], -r1
	...
1000002c:	10002fd1 	ldrdne	r2, [r0], -r1
10000030:	10002fd1 	ldrdne	r2, [r0], -r1
10000034:	00000000 	andeq	r0, r0, r0
10000038:	100030f9 	strdne	r3, [r0], -r9
1000003c:	10003049 	andne	r3, r0, r9, asr #32
10000040:	10002fd1 	ldrdne	r2, [r0], -r1
10000044:	10002fd1 	ldrdne	r2, [r0], -r1
10000048:	10002fd1 	ldrdne	r2, [r0], -r1
1000004c:	10002fd1 	ldrdne	r2, [r0], -r1
10000050:	10002fd1 	ldrdne	r2, [r0], -r1
10000054:	10002fd1 	ldrdne	r2, [r0], -r1
10000058:	10002fd1 	ldrdne	r2, [r0], -r1
1000005c:	10002fd1 	ldrdne	r2, [r0], -r1
10000060:	10002fd1 	ldrdne	r2, [r0], -r1
10000064:	10002fd1 	ldrdne	r2, [r0], -r1
	...

100007c0 <__do_global_dtors_aux>:
100007c0:	b510      	push	{r4, lr}
100007c2:	4c05      	ldr	r4, [pc, #20]	; (100007d8 <__do_global_dtors_aux+0x18>)
100007c4:	7823      	ldrb	r3, [r4, #0]
100007c6:	b933      	cbnz	r3, 100007d6 <__do_global_dtors_aux+0x16>
100007c8:	4b04      	ldr	r3, [pc, #16]	; (100007dc <__do_global_dtors_aux+0x1c>)
100007ca:	b113      	cbz	r3, 100007d2 <__do_global_dtors_aux+0x12>
100007cc:	4804      	ldr	r0, [pc, #16]	; (100007e0 <__do_global_dtors_aux+0x20>)
100007ce:	e000      	b.n	100007d2 <__do_global_dtors_aux+0x12>
100007d0:	bf00      	nop
100007d2:	2301      	movs	r3, #1
100007d4:	7023      	strb	r3, [r4, #0]
100007d6:	bd10      	pop	{r4, pc}
100007d8:	38000074 	stmdacc	r0, {r2, r4, r5, r6}
100007dc:	00000000 	andeq	r0, r0, r0
100007e0:	10006158 	andne	r6, r0, r8, asr r1

100007e4 <frame_dummy>:
100007e4:	b508      	push	{r3, lr}
100007e6:	4b03      	ldr	r3, [pc, #12]	; (100007f4 <frame_dummy+0x10>)
100007e8:	b11b      	cbz	r3, 100007f2 <frame_dummy+0xe>
100007ea:	4903      	ldr	r1, [pc, #12]	; (100007f8 <frame_dummy+0x14>)
100007ec:	4803      	ldr	r0, [pc, #12]	; (100007fc <frame_dummy+0x18>)
100007ee:	e000      	b.n	100007f2 <frame_dummy+0xe>
100007f0:	bf00      	nop
100007f2:	bd08      	pop	{r3, pc}
100007f4:	00000000 	andeq	r0, r0, r0
100007f8:	38000078 	stmdacc	r0, {r3, r4, r5, r6}
100007fc:	10006158 	andne	r6, r0, r8, asr r1

10000800 <tx_task_entry>:
void test5(void) {
    printf("this is %s.\r\n", __func__);
    test4();
}

static void tx_task_entry(ULONG thread_input) {
10000800:	b510      	push	{r4, lr}
    int counter = 0;
10000802:	2100      	movs	r1, #0
    while(1) {
        printf("hello threadx %d\r\n", counter++);
10000804:	1c4c      	adds	r4, r1, #1
10000806:	4804      	ldr	r0, [pc, #16]	; (10000818 <tx_task_entry+0x18>)
10000808:	f001 f914 	bl	10001a34 <printf>
        tx_thread_sleep(1000);
1000080c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
10000810:	f001 fbaa 	bl	10001f68 <_tx_thread_sleep>
        printf("hello threadx %d\r\n", counter++);
10000814:	4621      	mov	r1, r4
10000816:	e7f5      	b.n	10000804 <tx_task_entry+0x4>
10000818:	10005f30 	andne	r5, r0, r0, lsr pc

1000081c <tx_application_define>:
    }
}

void tx_application_define(void *first_unused_memory) {
1000081c:	b530      	push	{r4, r5, lr}
1000081e:	b08b      	sub	sp, #44	; 0x2c
    CHAR *tx_stack = TX_NULL;
10000820:	2400      	movs	r4, #0
10000822:	9409      	str	r4, [sp, #36]	; 0x24
    static TX_THREAD tx_task;
    static TX_BYTE_POOL tx_pool;
    static UCHAR tx_memory[4096];

    tx_byte_pool_create(&tx_pool, "tx_pool", tx_memory, sizeof(tx_memory));
10000824:	4d14      	ldr	r5, [pc, #80]	; (10000878 <tx_application_define+0x5c>)
10000826:	2334      	movs	r3, #52	; 0x34
10000828:	9300      	str	r3, [sp, #0]
1000082a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
1000082e:	4a13      	ldr	r2, [pc, #76]	; (1000087c <tx_application_define+0x60>)
10000830:	4913      	ldr	r1, [pc, #76]	; (10000880 <tx_application_define+0x64>)
10000832:	4628      	mov	r0, r5
10000834:	f002 fa36 	bl	10002ca4 <_txe_byte_pool_create>
    tx_byte_allocate(&tx_pool, (VOID **) &tx_stack, 1024, TX_NO_WAIT);
10000838:	4623      	mov	r3, r4
1000083a:	f44f 6280 	mov.w	r2, #1024	; 0x400
1000083e:	a909      	add	r1, sp, #36	; 0x24
10000840:	4628      	mov	r0, r5
10000842:	f002 f9e5 	bl	10002c10 <_txe_byte_allocate>
    tx_thread_create(&tx_task, "tx_task", tx_task_entry, 0, tx_stack, 1024, 1, 1, 10, TX_AUTO_START);
10000846:	23d8      	movs	r3, #216	; 0xd8
10000848:	9306      	str	r3, [sp, #24]
1000084a:	2301      	movs	r3, #1
1000084c:	9305      	str	r3, [sp, #20]
1000084e:	220a      	movs	r2, #10
10000850:	9204      	str	r2, [sp, #16]
10000852:	9303      	str	r3, [sp, #12]
10000854:	9302      	str	r3, [sp, #8]
10000856:	f44f 6380 	mov.w	r3, #1024	; 0x400
1000085a:	9301      	str	r3, [sp, #4]
1000085c:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000085e:	9300      	str	r3, [sp, #0]
10000860:	4623      	mov	r3, r4
10000862:	4a08      	ldr	r2, [pc, #32]	; (10000884 <tx_application_define+0x68>)
10000864:	4908      	ldr	r1, [pc, #32]	; (10000888 <tx_application_define+0x6c>)
10000866:	4809      	ldr	r0, [pc, #36]	; (1000088c <tx_application_define+0x70>)
10000868:	f002 fa86 	bl	10002d78 <_txe_thread_create>
    tx_block_release(tx_stack);
1000086c:	9809      	ldr	r0, [sp, #36]	; 0x24
1000086e:	f002 f9bb 	bl	10002be8 <_txe_block_release>
}
10000872:	b00b      	add	sp, #44	; 0x2c
10000874:	bd30      	pop	{r4, r5, pc}
10000876:	bf00      	nop
10000878:	38001090 	stmdacc	r0, {r4, r7, ip}
1000087c:	38000090 	stmdacc	r0, {r4, r7}
10000880:	10005f44 	andne	r5, r0, r4, asr #30
10000884:	10000801 	andne	r0, r0, r1, lsl #16
10000888:	10005f4c 	andne	r5, r0, ip, asr #30
1000088c:	380010c4 	stmdacc	r0, {r2, r6, r7, ip}

10000890 <main>:

int main(void) {
10000890:	b510      	push	{r4, lr}
    int count = 0;
    uart_init();
10000892:	f001 f8ff 	bl	10001a94 <uart_init>

    printf("Start\r\n");
10000896:	4806      	ldr	r0, [pc, #24]	; (100008b0 <main+0x20>)
10000898:	f001 f8ec 	bl	10001a74 <puts>
    tx_kernel_enter();
1000089c:	f001 fa68 	bl	10001d70 <_tx_initialize_kernel_enter>
    int count = 0;
100008a0:	2100      	movs	r1, #0

    while (1) {
        __NOP();
100008a2:	bf00      	nop
        printf("hello world - %d.\r\n", count++);
100008a4:	1c4c      	adds	r4, r1, #1
100008a6:	4803      	ldr	r0, [pc, #12]	; (100008b4 <main+0x24>)
100008a8:	f001 f8c4 	bl	10001a34 <printf>
100008ac:	4621      	mov	r1, r4
100008ae:	e7f8      	b.n	100008a2 <main+0x12>
100008b0:	10005f54 	andne	r5, r0, r4, asr pc
100008b4:	10005f5c 	andne	r5, r0, ip, asr pc

100008b8 <SystemInit>:
 *----------------------------------------------------------------------------*/
void SystemInit (void)
{

#if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
  SCB->VTOR = (uint32_t) &(__VECTOR_TABLE[0]);
100008b8:	4b06      	ldr	r3, [pc, #24]	; (100008d4 <SystemInit+0x1c>)
100008ba:	4a07      	ldr	r2, [pc, #28]	; (100008d8 <SystemInit+0x20>)
100008bc:	609a      	str	r2, [r3, #8]
#endif

#if defined (__FPU_USED) && (__FPU_USED == 1U)
  SCB->CPACR |= ((3U << 10U*2U) |           /* enable CP10 Full Access */
100008be:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
100008c2:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
100008c6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

#if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
  TZ_SAU_Setup();
#endif

  SystemCoreClock = SYSTEM_CLOCK;
100008ca:	4b04      	ldr	r3, [pc, #16]	; (100008dc <SystemInit+0x24>)
100008cc:	4a04      	ldr	r2, [pc, #16]	; (100008e0 <SystemInit+0x28>)
100008ce:	601a      	str	r2, [r3, #0]
}
100008d0:	4770      	bx	lr
100008d2:	bf00      	nop
100008d4:	e000ed00 	and	lr, r0, r0, lsl #26
100008d8:	10000000 	andne	r0, r0, r0
100008dc:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
100008e0:	017d7840 	cmneq	sp, r0, asr #16

100008e4 <_out_null>:

// internal null output
static inline void _out_null(char character, void* buffer, size_t idx, size_t maxlen)
{
  (void)character; (void)buffer; (void)idx; (void)maxlen;
}
100008e4:	4770      	bx	lr

100008e6 <_atoi>:
}


// internal ASCII string to unsigned int conversion
static unsigned int _atoi(const char** str)
{
100008e6:	4601      	mov	r1, r0
  unsigned int i = 0U;
100008e8:	2000      	movs	r0, #0
  while (_is_digit(**str)) {
100008ea:	e007      	b.n	100008fc <_atoi+0x16>
    i = i * 10U + (unsigned int)(*((*str)++) - '0');
100008ec:	eb00 0080 	add.w	r0, r0, r0, lsl #2
100008f0:	1c53      	adds	r3, r2, #1
100008f2:	600b      	str	r3, [r1, #0]
100008f4:	7813      	ldrb	r3, [r2, #0]
100008f6:	eb03 0040 	add.w	r0, r3, r0, lsl #1
100008fa:	3830      	subs	r0, #48	; 0x30
  while (_is_digit(**str)) {
100008fc:	680a      	ldr	r2, [r1, #0]
100008fe:	7813      	ldrb	r3, [r2, #0]
  return (ch >= '0') && (ch <= '9');
10000900:	3b30      	subs	r3, #48	; 0x30
10000902:	b2db      	uxtb	r3, r3
  while (_is_digit(**str)) {
10000904:	2b09      	cmp	r3, #9
10000906:	d9f1      	bls.n	100008ec <_atoi+0x6>
  }
  return i;
}
10000908:	4770      	bx	lr

1000090a <_out_rev>:


// output the specified string in reverse, taking care of any zero-padding
static size_t _out_rev(out_fct_type out, char* buffer, size_t idx, size_t maxlen, const char* buf, size_t len, unsigned int width, unsigned int flags)
{
1000090a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
1000090e:	b083      	sub	sp, #12
10000910:	4605      	mov	r5, r0
10000912:	460e      	mov	r6, r1
10000914:	4693      	mov	fp, r2
10000916:	461f      	mov	r7, r3
10000918:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
1000091c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
1000091e:	f8dd 9038 	ldr.w	r9, [sp, #56]	; 0x38
  const size_t start_idx = idx;

  // pad spaces up to given width
  if (!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
10000922:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000924:	f013 0f03 	tst.w	r3, #3
10000928:	d119      	bne.n	1000095e <_out_rev+0x54>
    for (size_t i = len; i < width; i++) {
1000092a:	46a0      	mov	r8, r4
1000092c:	9201      	str	r2, [sp, #4]
1000092e:	45c8      	cmp	r8, r9
10000930:	d209      	bcs.n	10000946 <_out_rev+0x3c>
      out(' ', buffer, idx++, maxlen);
10000932:	f102 0b01 	add.w	fp, r2, #1
10000936:	463b      	mov	r3, r7
10000938:	4631      	mov	r1, r6
1000093a:	2020      	movs	r0, #32
1000093c:	47a8      	blx	r5
    for (size_t i = len; i < width; i++) {
1000093e:	f108 0801 	add.w	r8, r8, #1
      out(' ', buffer, idx++, maxlen);
10000942:	465a      	mov	r2, fp
10000944:	e7f3      	b.n	1000092e <_out_rev+0x24>
10000946:	f8dd b004 	ldr.w	fp, [sp, #4]
1000094a:	e008      	b.n	1000095e <_out_rev+0x54>
    }
  }

  // reverse string
  while (len) {
    out(buf[--len], buffer, idx++, maxlen);
1000094c:	3c01      	subs	r4, #1
1000094e:	f102 0801 	add.w	r8, r2, #1
10000952:	463b      	mov	r3, r7
10000954:	4631      	mov	r1, r6
10000956:	f81a 0004 	ldrb.w	r0, [sl, r4]
1000095a:	47a8      	blx	r5
1000095c:	4642      	mov	r2, r8
  while (len) {
1000095e:	2c00      	cmp	r4, #0
10000960:	d1f4      	bne.n	1000094c <_out_rev+0x42>
  }

  // append pad spaces up to given width
  if (flags & FLAGS_LEFT) {
10000962:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000964:	f013 0f02 	tst.w	r3, #2
10000968:	d103      	bne.n	10000972 <_out_rev+0x68>
      out(' ', buffer, idx++, maxlen);
    }
  }

  return idx;
}
1000096a:	4610      	mov	r0, r2
1000096c:	b003      	add	sp, #12
1000096e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    while (idx - start_idx < width) {
10000972:	eba2 030b 	sub.w	r3, r2, fp
10000976:	454b      	cmp	r3, r9
10000978:	d2f7      	bcs.n	1000096a <_out_rev+0x60>
      out(' ', buffer, idx++, maxlen);
1000097a:	1c54      	adds	r4, r2, #1
1000097c:	463b      	mov	r3, r7
1000097e:	4631      	mov	r1, r6
10000980:	2020      	movs	r0, #32
10000982:	47a8      	blx	r5
10000984:	4622      	mov	r2, r4
10000986:	e7f4      	b.n	10000972 <_out_rev+0x68>

10000988 <_ntoa_format>:


// internal itoa format
static size_t _ntoa_format(out_fct_type out, char* buffer, size_t idx, size_t maxlen, char* buf, size_t len, bool negative, unsigned int base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000988:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
1000098c:	b085      	sub	sp, #20
1000098e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
10000990:	9c0d      	ldr	r4, [sp, #52]	; 0x34
10000992:	f89d 9038 	ldrb.w	r9, [sp, #56]	; 0x38
10000996:	f8dd 803c 	ldr.w	r8, [sp, #60]	; 0x3c
1000099a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
1000099e:	9f11      	ldr	r7, [sp, #68]	; 0x44
100009a0:	9e12      	ldr	r6, [sp, #72]	; 0x48
  // pad leading zeros
  if (!(flags & FLAGS_LEFT)) {
100009a2:	f016 0f02 	tst.w	r6, #2
100009a6:	d121      	bne.n	100009ec <_ntoa_format+0x64>
    if (width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
100009a8:	b17f      	cbz	r7, 100009ca <_ntoa_format+0x42>
100009aa:	f016 0f01 	tst.w	r6, #1
100009ae:	d00c      	beq.n	100009ca <_ntoa_format+0x42>
100009b0:	f1b9 0f00 	cmp.w	r9, #0
100009b4:	d102      	bne.n	100009bc <_ntoa_format+0x34>
100009b6:	f016 0f0c 	tst.w	r6, #12
100009ba:	d006      	beq.n	100009ca <_ntoa_format+0x42>
      width--;
100009bc:	3f01      	subs	r7, #1
100009be:	e004      	b.n	100009ca <_ntoa_format+0x42>
    }
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
      buf[len++] = '0';
100009c0:	f04f 0c30 	mov.w	ip, #48	; 0x30
100009c4:	f805 c004 	strb.w	ip, [r5, r4]
100009c8:	3401      	adds	r4, #1
    while ((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
100009ca:	4574      	cmp	r4, lr
100009cc:	d201      	bcs.n	100009d2 <_ntoa_format+0x4a>
100009ce:	2c1f      	cmp	r4, #31
100009d0:	d9f6      	bls.n	100009c0 <_ntoa_format+0x38>
    }
    while ((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
100009d2:	f016 0f01 	tst.w	r6, #1
100009d6:	d009      	beq.n	100009ec <_ntoa_format+0x64>
100009d8:	42bc      	cmp	r4, r7
100009da:	d207      	bcs.n	100009ec <_ntoa_format+0x64>
100009dc:	2c1f      	cmp	r4, #31
100009de:	d805      	bhi.n	100009ec <_ntoa_format+0x64>
      buf[len++] = '0';
100009e0:	f04f 0c30 	mov.w	ip, #48	; 0x30
100009e4:	f805 c004 	strb.w	ip, [r5, r4]
100009e8:	3401      	adds	r4, #1
100009ea:	e7f2      	b.n	100009d2 <_ntoa_format+0x4a>
    }
  }

  // handle hash
  if (flags & FLAGS_HASH) {
100009ec:	f016 0f10 	tst.w	r6, #16
100009f0:	d017      	beq.n	10000a22 <_ntoa_format+0x9a>
    if (!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
100009f2:	f416 6f80 	tst.w	r6, #1024	; 0x400
100009f6:	d104      	bne.n	10000a02 <_ntoa_format+0x7a>
100009f8:	b11c      	cbz	r4, 10000a02 <_ntoa_format+0x7a>
100009fa:	4574      	cmp	r4, lr
100009fc:	d024      	beq.n	10000a48 <_ntoa_format+0xc0>
100009fe:	42bc      	cmp	r4, r7
10000a00:	d022      	beq.n	10000a48 <_ntoa_format+0xc0>
      len--;
      if (len && (base == 16U)) {
        len--;
      }
    }
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a02:	f1b8 0f10 	cmp.w	r8, #16
10000a06:	d02b      	beq.n	10000a60 <_ntoa_format+0xd8>
      buf[len++] = 'x';
    }
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a08:	f1b8 0f10 	cmp.w	r8, #16
10000a0c:	d033      	beq.n	10000a76 <_ntoa_format+0xee>
      buf[len++] = 'X';
    }
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a0e:	f1b8 0f02 	cmp.w	r8, #2
10000a12:	d03b      	beq.n	10000a8c <_ntoa_format+0x104>
      buf[len++] = 'b';
    }
    if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000a14:	2c1f      	cmp	r4, #31
10000a16:	d804      	bhi.n	10000a22 <_ntoa_format+0x9a>
      buf[len++] = '0';
10000a18:	f04f 0c30 	mov.w	ip, #48	; 0x30
10000a1c:	f805 c004 	strb.w	ip, [r5, r4]
10000a20:	3401      	adds	r4, #1
    }
  }

  if (len < PRINTF_NTOA_BUFFER_SIZE) {
10000a22:	2c1f      	cmp	r4, #31
10000a24:	d807      	bhi.n	10000a36 <_ntoa_format+0xae>
    if (negative) {
10000a26:	f1b9 0f00 	cmp.w	r9, #0
10000a2a:	d037      	beq.n	10000a9c <_ntoa_format+0x114>
      buf[len++] = '-';
10000a2c:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
10000a30:	f805 c004 	strb.w	ip, [r5, r4]
10000a34:	3401      	adds	r4, #1
    else if (flags & FLAGS_SPACE) {
      buf[len++] = ' ';
    }
  }

  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10000a36:	9603      	str	r6, [sp, #12]
10000a38:	9702      	str	r7, [sp, #8]
10000a3a:	9401      	str	r4, [sp, #4]
10000a3c:	9500      	str	r5, [sp, #0]
10000a3e:	f7ff ff64 	bl	1000090a <_out_rev>
}
10000a42:	b005      	add	sp, #20
10000a44:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
      if (len && (base == 16U)) {
10000a48:	f1b4 0c01 	subs.w	ip, r4, #1
10000a4c:	d006      	beq.n	10000a5c <_ntoa_format+0xd4>
10000a4e:	f1b8 0f10 	cmp.w	r8, #16
10000a52:	d001      	beq.n	10000a58 <_ntoa_format+0xd0>
      len--;
10000a54:	4664      	mov	r4, ip
10000a56:	e7d4      	b.n	10000a02 <_ntoa_format+0x7a>
        len--;
10000a58:	3c02      	subs	r4, #2
10000a5a:	e7d2      	b.n	10000a02 <_ntoa_format+0x7a>
      len--;
10000a5c:	4664      	mov	r4, ip
10000a5e:	e7d0      	b.n	10000a02 <_ntoa_format+0x7a>
    if ((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a60:	f016 0f20 	tst.w	r6, #32
10000a64:	d1d0      	bne.n	10000a08 <_ntoa_format+0x80>
10000a66:	2c1f      	cmp	r4, #31
10000a68:	d8ce      	bhi.n	10000a08 <_ntoa_format+0x80>
      buf[len++] = 'x';
10000a6a:	f04f 0c78 	mov.w	ip, #120	; 0x78
10000a6e:	f805 c004 	strb.w	ip, [r5, r4]
10000a72:	3401      	adds	r4, #1
10000a74:	e7ce      	b.n	10000a14 <_ntoa_format+0x8c>
    else if ((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a76:	f016 0f20 	tst.w	r6, #32
10000a7a:	d0c8      	beq.n	10000a0e <_ntoa_format+0x86>
10000a7c:	2c1f      	cmp	r4, #31
10000a7e:	d8c6      	bhi.n	10000a0e <_ntoa_format+0x86>
      buf[len++] = 'X';
10000a80:	f04f 0c58 	mov.w	ip, #88	; 0x58
10000a84:	f805 c004 	strb.w	ip, [r5, r4]
10000a88:	3401      	adds	r4, #1
10000a8a:	e7c3      	b.n	10000a14 <_ntoa_format+0x8c>
    else if ((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
10000a8c:	2c1f      	cmp	r4, #31
10000a8e:	d8c1      	bhi.n	10000a14 <_ntoa_format+0x8c>
      buf[len++] = 'b';
10000a90:	f04f 0c62 	mov.w	ip, #98	; 0x62
10000a94:	f805 c004 	strb.w	ip, [r5, r4]
10000a98:	3401      	adds	r4, #1
10000a9a:	e7bb      	b.n	10000a14 <_ntoa_format+0x8c>
    else if (flags & FLAGS_PLUS) {
10000a9c:	f016 0f04 	tst.w	r6, #4
10000aa0:	d005      	beq.n	10000aae <_ntoa_format+0x126>
      buf[len++] = '+';  // ignore the space if the '+' exists
10000aa2:	f04f 0c2b 	mov.w	ip, #43	; 0x2b
10000aa6:	f805 c004 	strb.w	ip, [r5, r4]
10000aaa:	3401      	adds	r4, #1
10000aac:	e7c3      	b.n	10000a36 <_ntoa_format+0xae>
    else if (flags & FLAGS_SPACE) {
10000aae:	f016 0f08 	tst.w	r6, #8
10000ab2:	d0c0      	beq.n	10000a36 <_ntoa_format+0xae>
      buf[len++] = ' ';
10000ab4:	f04f 0c20 	mov.w	ip, #32
10000ab8:	f805 c004 	strb.w	ip, [r5, r4]
10000abc:	3401      	adds	r4, #1
10000abe:	e7ba      	b.n	10000a36 <_ntoa_format+0xae>

10000ac0 <_ntoa_long>:


// internal itoa for 'long' type
static size_t _ntoa_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long value, bool negative, unsigned long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000ac0:	b5f0      	push	{r4, r5, r6, r7, lr}
10000ac2:	b091      	sub	sp, #68	; 0x44
10000ac4:	9c16      	ldr	r4, [sp, #88]	; 0x58
10000ac6:	9d18      	ldr	r5, [sp, #96]	; 0x60
10000ac8:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000aca:	b90c      	cbnz	r4, 10000ad0 <_ntoa_long+0x10>
    flags &= ~FLAGS_HASH;
10000acc:	f026 0610 	bic.w	r6, r6, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000ad0:	f416 6e80 	ands.w	lr, r6, #1024	; 0x400
10000ad4:	d016      	beq.n	10000b04 <_ntoa_long+0x44>
10000ad6:	b364      	cbz	r4, 10000b32 <_ntoa_long+0x72>
10000ad8:	f04f 0e00 	mov.w	lr, #0
10000adc:	e012      	b.n	10000b04 <_ntoa_long+0x44>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000ade:	f10c 0c30 	add.w	ip, ip, #48	; 0x30
10000ae2:	fa5f fc8c 	uxtb.w	ip, ip
10000ae6:	f10e 0701 	add.w	r7, lr, #1
10000aea:	f10e 0e40 	add.w	lr, lr, #64	; 0x40
10000aee:	44ee      	add	lr, sp
10000af0:	f80e cc20 	strb.w	ip, [lr, #-32]
      value /= base;
10000af4:	fbb4 fcf5 	udiv	ip, r4, r5
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000af8:	42ac      	cmp	r4, r5
10000afa:	d31b      	bcc.n	10000b34 <_ntoa_long+0x74>
10000afc:	2f1f      	cmp	r7, #31
10000afe:	d819      	bhi.n	10000b34 <_ntoa_long+0x74>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b00:	46be      	mov	lr, r7
      value /= base;
10000b02:	4664      	mov	r4, ip
      const char digit = (char)(value % base);
10000b04:	fbb4 fcf5 	udiv	ip, r4, r5
10000b08:	fb05 4c1c 	mls	ip, r5, ip, r4
10000b0c:	fa5f fc8c 	uxtb.w	ip, ip
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b10:	f1bc 0f09 	cmp.w	ip, #9
10000b14:	d9e3      	bls.n	10000ade <_ntoa_long+0x1e>
10000b16:	f016 0f20 	tst.w	r6, #32
10000b1a:	d008      	beq.n	10000b2e <_ntoa_long+0x6e>
10000b1c:	2741      	movs	r7, #65	; 0x41
10000b1e:	44bc      	add	ip, r7
10000b20:	fa5f fc8c 	uxtb.w	ip, ip
10000b24:	f1ac 0c0a 	sub.w	ip, ip, #10
10000b28:	fa5f fc8c 	uxtb.w	ip, ip
10000b2c:	e7db      	b.n	10000ae6 <_ntoa_long+0x26>
10000b2e:	2761      	movs	r7, #97	; 0x61
10000b30:	e7f5      	b.n	10000b1e <_ntoa_long+0x5e>
  size_t len = 0U;
10000b32:	4627      	mov	r7, r4
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000b34:	9606      	str	r6, [sp, #24]
10000b36:	9c1a      	ldr	r4, [sp, #104]	; 0x68
10000b38:	9405      	str	r4, [sp, #20]
10000b3a:	9c19      	ldr	r4, [sp, #100]	; 0x64
10000b3c:	9404      	str	r4, [sp, #16]
10000b3e:	9503      	str	r5, [sp, #12]
10000b40:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
10000b44:	9402      	str	r4, [sp, #8]
10000b46:	9701      	str	r7, [sp, #4]
10000b48:	ac08      	add	r4, sp, #32
10000b4a:	9400      	str	r4, [sp, #0]
10000b4c:	f7ff ff1c 	bl	10000988 <_ntoa_format>
}
10000b50:	b011      	add	sp, #68	; 0x44
10000b52:	bdf0      	pop	{r4, r5, r6, r7, pc}

10000b54 <_ntoa_long_long>:


// internal itoa for 'long long' type
#if defined(PRINTF_SUPPORT_LONG_LONG)
static size_t _ntoa_long_long(out_fct_type out, char* buffer, size_t idx, size_t maxlen, unsigned long long value, bool negative, unsigned long long base, unsigned int prec, unsigned int width, unsigned int flags)
{
10000b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000b58:	b095      	sub	sp, #84	; 0x54
10000b5a:	9009      	str	r0, [sp, #36]	; 0x24
10000b5c:	910a      	str	r1, [sp, #40]	; 0x28
10000b5e:	920b      	str	r2, [sp, #44]	; 0x2c
10000b60:	469b      	mov	fp, r3
10000b62:	9d1e      	ldr	r5, [sp, #120]	; 0x78
10000b64:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
10000b66:	9f22      	ldr	r7, [sp, #136]	; 0x88
10000b68:	f8dd 808c 	ldr.w	r8, [sp, #140]	; 0x8c
10000b6c:	f8dd a098 	ldr.w	sl, [sp, #152]	; 0x98
  char buf[PRINTF_NTOA_BUFFER_SIZE];
  size_t len = 0U;

  // no hash for 0 values
  if (!value) {
10000b70:	ea55 0306 	orrs.w	r3, r5, r6
10000b74:	d101      	bne.n	10000b7a <_ntoa_long_long+0x26>
    flags &= ~FLAGS_HASH;
10000b76:	f02a 0a10 	bic.w	sl, sl, #16
  }

  // write if precision != 0 and value is != 0
  if (!(flags & FLAGS_PRECISION) || value) {
10000b7a:	f41a 6480 	ands.w	r4, sl, #1024	; 0x400
10000b7e:	d01f      	beq.n	10000bc0 <_ntoa_long_long+0x6c>
10000b80:	ea55 0306 	orrs.w	r3, r5, r6
10000b84:	d030      	beq.n	10000be8 <_ntoa_long_long+0x94>
10000b86:	2400      	movs	r4, #0
10000b88:	e01a      	b.n	10000bc0 <_ntoa_long_long+0x6c>
    do {
      const char digit = (char)(value % base);
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000b8a:	f103 0230 	add.w	r2, r3, #48	; 0x30
10000b8e:	b2d2      	uxtb	r2, r2
10000b90:	f104 0901 	add.w	r9, r4, #1
10000b94:	f104 0350 	add.w	r3, r4, #80	; 0x50
10000b98:	eb0d 0403 	add.w	r4, sp, r3
10000b9c:	f804 2c20 	strb.w	r2, [r4, #-32]
      value /= base;
10000ba0:	463a      	mov	r2, r7
10000ba2:	4643      	mov	r3, r8
10000ba4:	4628      	mov	r0, r5
10000ba6:	4631      	mov	r1, r6
10000ba8:	f004 f874 	bl	10004c94 <__aeabi_uldivmod>
    } while (value && (len < PRINTF_NTOA_BUFFER_SIZE));
10000bac:	42bd      	cmp	r5, r7
10000bae:	eb76 0308 	sbcs.w	r3, r6, r8
10000bb2:	d31b      	bcc.n	10000bec <_ntoa_long_long+0x98>
10000bb4:	f1b9 0f1f 	cmp.w	r9, #31
10000bb8:	d818      	bhi.n	10000bec <_ntoa_long_long+0x98>
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000bba:	464c      	mov	r4, r9
      value /= base;
10000bbc:	4605      	mov	r5, r0
10000bbe:	460e      	mov	r6, r1
      const char digit = (char)(value % base);
10000bc0:	463a      	mov	r2, r7
10000bc2:	4643      	mov	r3, r8
10000bc4:	4628      	mov	r0, r5
10000bc6:	4631      	mov	r1, r6
10000bc8:	f004 f864 	bl	10004c94 <__aeabi_uldivmod>
10000bcc:	b2d3      	uxtb	r3, r2
      buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit - 10;
10000bce:	2b09      	cmp	r3, #9
10000bd0:	d9db      	bls.n	10000b8a <_ntoa_long_long+0x36>
10000bd2:	f01a 0f20 	tst.w	sl, #32
10000bd6:	d005      	beq.n	10000be4 <_ntoa_long_long+0x90>
10000bd8:	2241      	movs	r2, #65	; 0x41
10000bda:	441a      	add	r2, r3
10000bdc:	b2d2      	uxtb	r2, r2
10000bde:	3a0a      	subs	r2, #10
10000be0:	b2d2      	uxtb	r2, r2
10000be2:	e7d5      	b.n	10000b90 <_ntoa_long_long+0x3c>
10000be4:	2261      	movs	r2, #97	; 0x61
10000be6:	e7f8      	b.n	10000bda <_ntoa_long_long+0x86>
  size_t len = 0U;
10000be8:	f04f 0900 	mov.w	r9, #0
  }

  return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, width, flags);
10000bec:	f8cd a018 	str.w	sl, [sp, #24]
10000bf0:	9b25      	ldr	r3, [sp, #148]	; 0x94
10000bf2:	9305      	str	r3, [sp, #20]
10000bf4:	9b24      	ldr	r3, [sp, #144]	; 0x90
10000bf6:	9304      	str	r3, [sp, #16]
10000bf8:	9703      	str	r7, [sp, #12]
10000bfa:	f89d 3080 	ldrb.w	r3, [sp, #128]	; 0x80
10000bfe:	9302      	str	r3, [sp, #8]
10000c00:	f8cd 9004 	str.w	r9, [sp, #4]
10000c04:	ab0c      	add	r3, sp, #48	; 0x30
10000c06:	9300      	str	r3, [sp, #0]
10000c08:	465b      	mov	r3, fp
10000c0a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
10000c0c:	990a      	ldr	r1, [sp, #40]	; 0x28
10000c0e:	9809      	ldr	r0, [sp, #36]	; 0x24
10000c10:	f7ff feba 	bl	10000988 <_ntoa_format>
}
10000c14:	b015      	add	sp, #84	; 0x54
10000c16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10000c1a:	0000      	movs	r0, r0
10000c1c:	0000      	movs	r0, r0
	...

10000c20 <_etoa>:


#if defined(PRINTF_SUPPORT_EXPONENTIAL)
// internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.jasperse@gmail.com>
static size_t _etoa(out_fct_type out, char* buffer, size_t idx, size_t maxlen, double value, unsigned int prec, unsigned int width, unsigned int flags)
{
10000c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10000c24:	ed2d 8b02 	vpush	{d8}
10000c28:	b091      	sub	sp, #68	; 0x44
10000c2a:	4682      	mov	sl, r0
10000c2c:	460c      	mov	r4, r1
10000c2e:	4693      	mov	fp, r2
10000c30:	461d      	mov	r5, r3
  // check for NaN and special values
  if ((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
10000c32:	e9dd 231c 	ldrd	r2, r3, [sp, #112]	; 0x70
10000c36:	4610      	mov	r0, r2
10000c38:	4619      	mov	r1, r3
10000c3a:	f003 ffb1 	bl	10004ba0 <__aeabi_dcmpeq>
10000c3e:	2800      	cmp	r0, #0
10000c40:	f000 8107 	beq.w	10000e52 <_etoa+0x232>
10000c44:	f04f 32ff 	mov.w	r2, #4294967295
10000c48:	4bb1      	ldr	r3, [pc, #708]	; (10000f10 <_etoa+0x2f0>)
10000c4a:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000c4e:	f003 ffcf 	bl	10004bf0 <__aeabi_dcmpgt>
10000c52:	2800      	cmp	r0, #0
10000c54:	f040 80fd 	bne.w	10000e52 <_etoa+0x232>
10000c58:	f04f 32ff 	mov.w	r2, #4294967295
10000c5c:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10000c60:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000c64:	f003 ffa6 	bl	10004bb4 <__aeabi_dcmplt>
10000c68:	2800      	cmp	r0, #0
10000c6a:	f040 80f2 	bne.w	10000e52 <_etoa+0x232>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
  }

  // determine the sign
  const bool negative = value < 0;
  if (negative) {
10000c6e:	2200      	movs	r2, #0
10000c70:	2300      	movs	r3, #0
10000c72:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000c76:	f003 ff9d 	bl	10004bb4 <__aeabi_dcmplt>
10000c7a:	2800      	cmp	r0, #0
10000c7c:	f040 80fe 	bne.w	10000e7c <_etoa+0x25c>
10000c80:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000c84:	ed8d 7b06 	vstr	d7, [sp, #24]
    value = -value;
  }

  // default precision
  if (!(flags & FLAGS_PRECISION)) {
10000c88:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000c8a:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
10000c8e:	930f      	str	r3, [sp, #60]	; 0x3c
10000c90:	d101      	bne.n	10000c96 <_etoa+0x76>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10000c92:	2306      	movs	r3, #6
10000c94:	931e      	str	r3, [sp, #120]	; 0x78
    uint64_t U;
    double   F;
  } conv;

  conv.F = value;
  int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
10000c96:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000c9a:	4602      	mov	r2, r0
10000c9c:	f3c1 500a 	ubfx	r0, r1, #20, #11
  conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is now in [1,2)
10000ca0:	f3c1 0313 	ubfx	r3, r1, #0, #20
10000ca4:	4690      	mov	r8, r2
10000ca6:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
10000caa:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
  // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
  int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602168);
10000cae:	f2a0 30ff 	subw	r0, r0, #1023	; 0x3ff
10000cb2:	f003 fca3 	bl	100045fc <__aeabi_i2d>
10000cb6:	a384      	add	r3, pc, #528	; (adr r3, 10000ec8 <_etoa+0x2a8>)
10000cb8:	e9d3 2300 	ldrd	r2, r3, [r3]
10000cbc:	f003 fd08 	bl	100046d0 <__aeabi_dmul>
10000cc0:	a383      	add	r3, pc, #524	; (adr r3, 10000ed0 <_etoa+0x2b0>)
10000cc2:	e9d3 2300 	ldrd	r2, r3, [r3]
10000cc6:	f003 fb4d 	bl	10004364 <__adddf3>
10000cca:	4606      	mov	r6, r0
10000ccc:	460f      	mov	r7, r1
10000cce:	2200      	movs	r2, #0
10000cd0:	4b90      	ldr	r3, [pc, #576]	; (10000f14 <_etoa+0x2f4>)
10000cd2:	4640      	mov	r0, r8
10000cd4:	4649      	mov	r1, r9
10000cd6:	f003 fb43 	bl	10004360 <__aeabi_dsub>
10000cda:	a37f      	add	r3, pc, #508	; (adr r3, 10000ed8 <_etoa+0x2b8>)
10000cdc:	e9d3 2300 	ldrd	r2, r3, [r3]
10000ce0:	f003 fcf6 	bl	100046d0 <__aeabi_dmul>
10000ce4:	4602      	mov	r2, r0
10000ce6:	460b      	mov	r3, r1
10000ce8:	4630      	mov	r0, r6
10000cea:	4639      	mov	r1, r7
10000cec:	f003 fb3a 	bl	10004364 <__adddf3>
10000cf0:	f003 ff88 	bl	10004c04 <__aeabi_d2iz>
10000cf4:	4606      	mov	r6, r0
  // now we want to compute 10^expval but we want to be sure it won't overflow
  exp2 = (int)(expval * 3.321928094887362 + 0.5);
10000cf6:	f003 fc81 	bl	100045fc <__aeabi_i2d>
10000cfa:	4680      	mov	r8, r0
10000cfc:	4689      	mov	r9, r1
10000cfe:	a378      	add	r3, pc, #480	; (adr r3, 10000ee0 <_etoa+0x2c0>)
10000d00:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d04:	f003 fce4 	bl	100046d0 <__aeabi_dmul>
10000d08:	2200      	movs	r2, #0
10000d0a:	4b83      	ldr	r3, [pc, #524]	; (10000f18 <_etoa+0x2f8>)
10000d0c:	f003 fb2a 	bl	10004364 <__adddf3>
10000d10:	f003 ff78 	bl	10004c04 <__aeabi_d2iz>
10000d14:	4607      	mov	r7, r0
  const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
10000d16:	a374      	add	r3, pc, #464	; (adr r3, 10000ee8 <_etoa+0x2c8>)
10000d18:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d1c:	4640      	mov	r0, r8
10000d1e:	4649      	mov	r1, r9
10000d20:	f003 fcd6 	bl	100046d0 <__aeabi_dmul>
10000d24:	4680      	mov	r8, r0
10000d26:	4689      	mov	r9, r1
10000d28:	4638      	mov	r0, r7
10000d2a:	f003 fc67 	bl	100045fc <__aeabi_i2d>
10000d2e:	a370      	add	r3, pc, #448	; (adr r3, 10000ef0 <_etoa+0x2d0>)
10000d30:	e9d3 2300 	ldrd	r2, r3, [r3]
10000d34:	f003 fccc 	bl	100046d0 <__aeabi_dmul>
10000d38:	4602      	mov	r2, r0
10000d3a:	460b      	mov	r3, r1
10000d3c:	4640      	mov	r0, r8
10000d3e:	4649      	mov	r1, r9
10000d40:	f003 fb0e 	bl	10004360 <__aeabi_dsub>
10000d44:	4680      	mov	r8, r0
10000d46:	4689      	mov	r9, r1
  const double z2 = z * z;
10000d48:	4602      	mov	r2, r0
10000d4a:	460b      	mov	r3, r1
10000d4c:	f003 fcc0 	bl	100046d0 <__aeabi_dmul>
10000d50:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
  conv.U = (uint64_t)(exp2 + 1023) << 52U;
10000d54:	f207 37ff 	addw	r7, r7, #1023	; 0x3ff
10000d58:	2100      	movs	r1, #0
10000d5a:	2200      	movs	r2, #0
10000d5c:	e9cd 1208 	strd	r1, r2, [sp, #32]
10000d60:	053b      	lsls	r3, r7, #20
10000d62:	9309      	str	r3, [sp, #36]	; 0x24
10000d64:	2300      	movs	r3, #0
10000d66:	9308      	str	r3, [sp, #32]
  // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_function#Continued_fractions_for_ex
  conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
10000d68:	4642      	mov	r2, r8
10000d6a:	464b      	mov	r3, r9
10000d6c:	4640      	mov	r0, r8
10000d6e:	4649      	mov	r1, r9
10000d70:	f003 faf8 	bl	10004364 <__adddf3>
10000d74:	e9cd 010c 	strd	r0, r1, [sp, #48]	; 0x30
10000d78:	4642      	mov	r2, r8
10000d7a:	464b      	mov	r3, r9
10000d7c:	2000      	movs	r0, #0
10000d7e:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
10000d82:	f003 faed 	bl	10004360 <__aeabi_dsub>
10000d86:	4680      	mov	r8, r0
10000d88:	4689      	mov	r9, r1
10000d8a:	2200      	movs	r2, #0
10000d8c:	4b63      	ldr	r3, [pc, #396]	; (10000f1c <_etoa+0x2fc>)
10000d8e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000d92:	f003 fdc7 	bl	10004924 <__aeabi_ddiv>
10000d96:	2200      	movs	r2, #0
10000d98:	4b61      	ldr	r3, [pc, #388]	; (10000f20 <_etoa+0x300>)
10000d9a:	f003 fae3 	bl	10004364 <__adddf3>
10000d9e:	4602      	mov	r2, r0
10000da0:	460b      	mov	r3, r1
10000da2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000da6:	f003 fdbd 	bl	10004924 <__aeabi_ddiv>
10000daa:	2200      	movs	r2, #0
10000dac:	4b5d      	ldr	r3, [pc, #372]	; (10000f24 <_etoa+0x304>)
10000dae:	f003 fad9 	bl	10004364 <__adddf3>
10000db2:	4602      	mov	r2, r0
10000db4:	460b      	mov	r3, r1
10000db6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
10000dba:	f003 fdb3 	bl	10004924 <__aeabi_ddiv>
10000dbe:	4602      	mov	r2, r0
10000dc0:	460b      	mov	r3, r1
10000dc2:	4640      	mov	r0, r8
10000dc4:	4649      	mov	r1, r9
10000dc6:	f003 facd 	bl	10004364 <__adddf3>
10000dca:	4602      	mov	r2, r0
10000dcc:	460b      	mov	r3, r1
10000dce:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
10000dd2:	f003 fda7 	bl	10004924 <__aeabi_ddiv>
10000dd6:	2200      	movs	r2, #0
10000dd8:	4b53      	ldr	r3, [pc, #332]	; (10000f28 <_etoa+0x308>)
10000dda:	f003 fac3 	bl	10004364 <__adddf3>
10000dde:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
10000de2:	f003 fc75 	bl	100046d0 <__aeabi_dmul>
10000de6:	4680      	mov	r8, r0
10000de8:	4689      	mov	r9, r1
10000dea:	ec49 8b18 	vmov	d8, r8, r9
  // correct for rounding errors
  if (value < conv.F) {
10000dee:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
10000df2:	f003 fefd 	bl	10004bf0 <__aeabi_dcmpgt>
10000df6:	b140      	cbz	r0, 10000e0a <_etoa+0x1ea>
    expval--;
10000df8:	3e01      	subs	r6, #1
    conv.F /= 10;
10000dfa:	2200      	movs	r2, #0
10000dfc:	4b48      	ldr	r3, [pc, #288]	; (10000f20 <_etoa+0x300>)
10000dfe:	4640      	mov	r0, r8
10000e00:	4649      	mov	r1, r9
10000e02:	f003 fd8f 	bl	10004924 <__aeabi_ddiv>
10000e06:	ec41 0b18 	vmov	d8, r0, r1
  }

  // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000e0a:	f106 0363 	add.w	r3, r6, #99	; 0x63
10000e0e:	2bc6      	cmp	r3, #198	; 0xc6
10000e10:	d83f      	bhi.n	10000e92 <_etoa+0x272>
10000e12:	2704      	movs	r7, #4

  // in "%g" mode, "prec" is the number of *significant figures* not decimals
  if (flags & FLAGS_ADAPT_EXP) {
10000e14:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000e16:	f413 6f00 	tst.w	r3, #2048	; 0x800
10000e1a:	d044      	beq.n	10000ea6 <_etoa+0x286>
    // do we want to fall-back to "%f" mode?
    if ((value >= 1e-4) && (value < 1e6)) {
10000e1c:	a336      	add	r3, pc, #216	; (adr r3, 10000ef8 <_etoa+0x2d8>)
10000e1e:	e9d3 2300 	ldrd	r2, r3, [r3]
10000e22:	e9dd 8906 	ldrd	r8, r9, [sp, #24]
10000e26:	4640      	mov	r0, r8
10000e28:	4649      	mov	r1, r9
10000e2a:	f003 fed7 	bl	10004bdc <__aeabi_dcmpge>
10000e2e:	2800      	cmp	r0, #0
10000e30:	d03f      	beq.n	10000eb2 <_etoa+0x292>
10000e32:	a333      	add	r3, pc, #204	; (adr r3, 10000f00 <_etoa+0x2e0>)
10000e34:	e9d3 2300 	ldrd	r2, r3, [r3]
10000e38:	4640      	mov	r0, r8
10000e3a:	4649      	mov	r1, r9
10000e3c:	f003 feba 	bl	10004bb4 <__aeabi_dcmplt>
10000e40:	2800      	cmp	r0, #0
10000e42:	d036      	beq.n	10000eb2 <_etoa+0x292>
      if ((int)prec > expval) {
10000e44:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000e46:	42b3      	cmp	r3, r6
10000e48:	dd25      	ble.n	10000e96 <_etoa+0x276>
        prec = (unsigned)((int)prec - expval - 1);
10000e4a:	1b9e      	subs	r6, r3, r6
10000e4c:	1e73      	subs	r3, r6, #1
10000e4e:	931e      	str	r3, [sp, #120]	; 0x78
10000e50:	e023      	b.n	10000e9a <_etoa+0x27a>
    return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
10000e52:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000e54:	9304      	str	r3, [sp, #16]
10000e56:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000e58:	9303      	str	r3, [sp, #12]
10000e5a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000e5c:	9302      	str	r3, [sp, #8]
10000e5e:	ed9d 7b1c 	vldr	d7, [sp, #112]	; 0x70
10000e62:	ed8d 7b00 	vstr	d7, [sp]
10000e66:	462b      	mov	r3, r5
10000e68:	465a      	mov	r2, fp
10000e6a:	4621      	mov	r1, r4
10000e6c:	4650      	mov	r0, sl
10000e6e:	f000 f8cf 	bl	10001010 <_ftoa>
    if (flags & FLAGS_LEFT) {
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
    }
  }
  return idx;
}
10000e72:	b011      	add	sp, #68	; 0x44
10000e74:	ecbd 8b02 	vpop	{d8}
10000e78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    value = -value;
10000e7c:	ed9f 7b22 	vldr	d7, [pc, #136]	; 10000f08 <_etoa+0x2e8>
10000e80:	ed8d 7b06 	vstr	d7, [sp, #24]
10000e84:	9b1c      	ldr	r3, [sp, #112]	; 0x70
10000e86:	9306      	str	r3, [sp, #24]
10000e88:	9b1d      	ldr	r3, [sp, #116]	; 0x74
10000e8a:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
10000e8e:	9307      	str	r3, [sp, #28]
10000e90:	e6fa      	b.n	10000c88 <_etoa+0x68>
  unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
10000e92:	2705      	movs	r7, #5
10000e94:	e7be      	b.n	10000e14 <_etoa+0x1f4>
        prec = 0;
10000e96:	2300      	movs	r3, #0
10000e98:	931e      	str	r3, [sp, #120]	; 0x78
      flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
10000e9a:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000e9c:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
10000ea0:	9320      	str	r3, [sp, #128]	; 0x80
      minwidth = 0U;
10000ea2:	2700      	movs	r7, #0
      expval   = 0;
10000ea4:	463e      	mov	r6, r7
  if (width > minwidth) {
10000ea6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
10000ea8:	429f      	cmp	r7, r3
10000eaa:	d23f      	bcs.n	10000f2c <_etoa+0x30c>
    fwidth -= minwidth;
10000eac:	eba3 0807 	sub.w	r8, r3, r7
10000eb0:	e03e      	b.n	10000f30 <_etoa+0x310>
      if ((prec > 0) && (flags & FLAGS_PRECISION)) {
10000eb2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000eb4:	2b00      	cmp	r3, #0
10000eb6:	d0f6      	beq.n	10000ea6 <_etoa+0x286>
10000eb8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10000eba:	2b00      	cmp	r3, #0
10000ebc:	d0f3      	beq.n	10000ea6 <_etoa+0x286>
        --prec;
10000ebe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000ec0:	3b01      	subs	r3, #1
10000ec2:	931e      	str	r3, [sp, #120]	; 0x78
10000ec4:	e7ef      	b.n	10000ea6 <_etoa+0x286>
10000ec6:	bf00      	nop
10000ec8:	509f79fb 			; <UNDEFINED> instruction: 0x509f79fb
10000ecc:	3fd34413 	svccc	0x00d34413
10000ed0:	8b60c8b3 	blhi	118331a4 <__copy_table_end__+0x182cf64>
10000ed4:	3fc68a28 	svccc	0x00c68a28
10000ed8:	636f4361 	cmnvs	pc, #-2080374783	; 0x84000001
10000edc:	3fd287a7 	svccc	0x00d287a7
10000ee0:	0979a371 	ldmdbeq	r9!, {r0, r4, r5, r6, r8, r9, sp, pc}^
10000ee4:	400a934f 	andmi	r9, sl, pc, asr #6
10000ee8:	bbb55516 	bllt	ed56348 <SYSTEM_CLOCK+0x4d1e948>
10000eec:	40026bb1 			; <UNDEFINED> instruction: 0x40026bb1
10000ef0:	fefa39ef 			; <UNDEFINED> instruction: 0xfefa39ef
10000ef4:	3fe62e42 	svccc	0x00e62e42
10000ef8:	eb1c432d 	bl	10711bb4 <__copy_table_end__+0x70b974>
10000efc:	3f1a36e2 	svccc	0x001a36e2
10000f00:	00000000 	andeq	r0, r0, r0
10000f04:	412e8480 	smlawbmi	lr, r0, r4, r8
	...
10000f10:	7fefffff 	svcvc	0x00efffff
10000f14:	3ff80000 	svccc	0x00f80000
10000f18:	3fe00000 	svccc	0x00e00000
10000f1c:	402c0000 	eormi	r0, ip, r0
10000f20:	40240000 	eormi	r0, r4, r0
10000f24:	40180000 	andsmi	r0, r8, r0
10000f28:	3ff00000 	svccc	0x00f00000	; IMB
    fwidth = 0U;
10000f2c:	f04f 0800 	mov.w	r8, #0
  if ((flags & FLAGS_LEFT) && minwidth) {
10000f30:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f32:	f013 0902 	ands.w	r9, r3, #2
10000f36:	d002      	beq.n	10000f3e <_etoa+0x31e>
10000f38:	b10f      	cbz	r7, 10000f3e <_etoa+0x31e>
    fwidth = 0U;
10000f3a:	f04f 0800 	mov.w	r8, #0
  if (expval) {
10000f3e:	b13e      	cbz	r6, 10000f50 <_etoa+0x330>
    value /= conv.F;
10000f40:	ec53 2b18 	vmov	r2, r3, d8
10000f44:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000f48:	f003 fcec 	bl	10004924 <__aeabi_ddiv>
10000f4c:	e9cd 0106 	strd	r0, r1, [sp, #24]
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10000f50:	2200      	movs	r2, #0
10000f52:	2300      	movs	r3, #0
10000f54:	e9dd 011c 	ldrd	r0, r1, [sp, #112]	; 0x70
10000f58:	f003 fe2c 	bl	10004bb4 <__aeabi_dcmplt>
10000f5c:	2800      	cmp	r0, #0
10000f5e:	d13d      	bne.n	10000fdc <_etoa+0x3bc>
10000f60:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f62:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
10000f66:	9304      	str	r3, [sp, #16]
10000f68:	f8cd 800c 	str.w	r8, [sp, #12]
10000f6c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
10000f6e:	9302      	str	r3, [sp, #8]
10000f70:	ed9d 7b06 	vldr	d7, [sp, #24]
10000f74:	ed8d 7b00 	vstr	d7, [sp]
10000f78:	462b      	mov	r3, r5
10000f7a:	465a      	mov	r2, fp
10000f7c:	4621      	mov	r1, r4
10000f7e:	4650      	mov	r0, sl
10000f80:	f000 f846 	bl	10001010 <_ftoa>
  if (minwidth) {
10000f84:	2f00      	cmp	r7, #0
10000f86:	f43f af74 	beq.w	10000e72 <_etoa+0x252>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
10000f8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
10000f8c:	f013 0f20 	tst.w	r3, #32
10000f90:	d02c      	beq.n	10000fec <_etoa+0x3cc>
10000f92:	f04f 0c45 	mov.w	ip, #69	; 0x45
10000f96:	f100 0801 	add.w	r8, r0, #1
10000f9a:	462b      	mov	r3, r5
10000f9c:	4602      	mov	r2, r0
10000f9e:	4621      	mov	r1, r4
10000fa0:	4660      	mov	r0, ip
10000fa2:	47d0      	blx	sl
    idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10, 0, minwidth-1, FLAGS_ZEROPAD | FLAGS_PLUS);
10000fa4:	ea86 73e6 	eor.w	r3, r6, r6, asr #31
10000fa8:	eba3 73e6 	sub.w	r3, r3, r6, asr #31
10000fac:	2205      	movs	r2, #5
10000fae:	9205      	str	r2, [sp, #20]
10000fb0:	3f01      	subs	r7, #1
10000fb2:	9704      	str	r7, [sp, #16]
10000fb4:	2200      	movs	r2, #0
10000fb6:	9203      	str	r2, [sp, #12]
10000fb8:	220a      	movs	r2, #10
10000fba:	9202      	str	r2, [sp, #8]
10000fbc:	0ff0      	lsrs	r0, r6, #31
10000fbe:	9001      	str	r0, [sp, #4]
10000fc0:	9300      	str	r3, [sp, #0]
10000fc2:	462b      	mov	r3, r5
10000fc4:	4642      	mov	r2, r8
10000fc6:	4621      	mov	r1, r4
10000fc8:	4650      	mov	r0, sl
10000fca:	f7ff fd79 	bl	10000ac0 <_ntoa_long>
    if (flags & FLAGS_LEFT) {
10000fce:	f1b9 0f00 	cmp.w	r9, #0
10000fd2:	f43f af4e 	beq.w	10000e72 <_etoa+0x252>
10000fd6:	4602      	mov	r2, r0
10000fd8:	9f1f      	ldr	r7, [sp, #124]	; 0x7c
10000fda:	e010      	b.n	10000ffe <_etoa+0x3de>
  idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_ADAPT_EXP);
10000fdc:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
10000fe0:	4602      	mov	r2, r0
10000fe2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
10000fe6:	e9cd 2306 	strd	r2, r3, [sp, #24]
10000fea:	e7b9      	b.n	10000f60 <_etoa+0x340>
    out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
10000fec:	f04f 0c65 	mov.w	ip, #101	; 0x65
10000ff0:	e7d1      	b.n	10000f96 <_etoa+0x376>
      while (idx - start_idx < width) out(' ', buffer, idx++, maxlen);
10000ff2:	1c56      	adds	r6, r2, #1
10000ff4:	462b      	mov	r3, r5
10000ff6:	4621      	mov	r1, r4
10000ff8:	2020      	movs	r0, #32
10000ffa:	47d0      	blx	sl
10000ffc:	4632      	mov	r2, r6
10000ffe:	eba2 030b 	sub.w	r3, r2, fp
10001002:	42bb      	cmp	r3, r7
10001004:	d3f5      	bcc.n	10000ff2 <_etoa+0x3d2>
10001006:	4610      	mov	r0, r2
10001008:	e733      	b.n	10000e72 <_etoa+0x252>
1000100a:	bf00      	nop
1000100c:	0000      	movs	r0, r0
	...

10001010 <_ftoa>:
{
10001010:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10001014:	ed2d 8b02 	vpush	{d8}
10001018:	b095      	sub	sp, #84	; 0x54
1000101a:	9007      	str	r0, [sp, #28]
1000101c:	910a      	str	r1, [sp, #40]	; 0x28
1000101e:	4692      	mov	sl, r2
10001020:	469b      	mov	fp, r3
10001022:	e9dd 8920 	ldrd	r8, r9, [sp, #128]	; 0x80
10001026:	9d22      	ldr	r5, [sp, #136]	; 0x88
  if (value != value)
10001028:	4642      	mov	r2, r8
1000102a:	464b      	mov	r3, r9
1000102c:	4640      	mov	r0, r8
1000102e:	4649      	mov	r1, r9
10001030:	f003 fdb6 	bl	10004ba0 <__aeabi_dcmpeq>
10001034:	2800      	cmp	r0, #0
10001036:	d040      	beq.n	100010ba <_ftoa+0xaa>
  if (value < -DBL_MAX)
10001038:	f04f 32ff 	mov.w	r2, #4294967295
1000103c:	f46f 1380 	mvn.w	r3, #1048576	; 0x100000
10001040:	4640      	mov	r0, r8
10001042:	4649      	mov	r1, r9
10001044:	f003 fdb6 	bl	10004bb4 <__aeabi_dcmplt>
10001048:	2800      	cmp	r0, #0
1000104a:	d145      	bne.n	100010d8 <_ftoa+0xc8>
  if (value > DBL_MAX)
1000104c:	f04f 32ff 	mov.w	r2, #4294967295
10001050:	4b9f      	ldr	r3, [pc, #636]	; (100012d0 <_ftoa+0x2c0>)
10001052:	4640      	mov	r0, r8
10001054:	4649      	mov	r1, r9
10001056:	f003 fdcb 	bl	10004bf0 <__aeabi_dcmpgt>
1000105a:	2800      	cmp	r0, #0
1000105c:	d14b      	bne.n	100010f6 <_ftoa+0xe6>
  if ((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
1000105e:	a398      	add	r3, pc, #608	; (adr r3, 100012c0 <_ftoa+0x2b0>)
10001060:	e9d3 2300 	ldrd	r2, r3, [r3]
10001064:	4640      	mov	r0, r8
10001066:	4649      	mov	r1, r9
10001068:	f003 fdc2 	bl	10004bf0 <__aeabi_dcmpgt>
1000106c:	2800      	cmp	r0, #0
1000106e:	d15a      	bne.n	10001126 <_ftoa+0x116>
10001070:	a395      	add	r3, pc, #596	; (adr r3, 100012c8 <_ftoa+0x2b8>)
10001072:	e9d3 2300 	ldrd	r2, r3, [r3]
10001076:	4640      	mov	r0, r8
10001078:	4649      	mov	r1, r9
1000107a:	f003 fd9b 	bl	10004bb4 <__aeabi_dcmplt>
1000107e:	2800      	cmp	r0, #0
10001080:	d151      	bne.n	10001126 <_ftoa+0x116>
  if (value < 0) {
10001082:	2200      	movs	r2, #0
10001084:	2300      	movs	r3, #0
10001086:	4640      	mov	r0, r8
10001088:	4649      	mov	r1, r9
1000108a:	f003 fd93 	bl	10004bb4 <__aeabi_dcmplt>
1000108e:	2800      	cmp	r0, #0
10001090:	d157      	bne.n	10001142 <_ftoa+0x132>
  bool negative = false;
10001092:	2300      	movs	r3, #0
10001094:	930b      	str	r3, [sp, #44]	; 0x2c
  if (!(flags & FLAGS_PRECISION)) {
10001096:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001098:	f413 6f80 	tst.w	r3, #1024	; 0x400
1000109c:	d05c      	beq.n	10001158 <_ftoa+0x148>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
1000109e:	2400      	movs	r4, #0
  while ((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
100010a0:	2c1f      	cmp	r4, #31
100010a2:	d85b      	bhi.n	1000115c <_ftoa+0x14c>
100010a4:	2d09      	cmp	r5, #9
100010a6:	d959      	bls.n	1000115c <_ftoa+0x14c>
    buf[len++] = '0';
100010a8:	f104 0350 	add.w	r3, r4, #80	; 0x50
100010ac:	446b      	add	r3, sp
100010ae:	2230      	movs	r2, #48	; 0x30
100010b0:	f803 2c20 	strb.w	r2, [r3, #-32]
    prec--;
100010b4:	3d01      	subs	r5, #1
    buf[len++] = '0';
100010b6:	3401      	adds	r4, #1
100010b8:	e7f2      	b.n	100010a0 <_ftoa+0x90>
    return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
100010ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
100010bc:	9303      	str	r3, [sp, #12]
100010be:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100010c0:	9302      	str	r3, [sp, #8]
100010c2:	2303      	movs	r3, #3
100010c4:	9301      	str	r3, [sp, #4]
100010c6:	4b83      	ldr	r3, [pc, #524]	; (100012d4 <_ftoa+0x2c4>)
100010c8:	9300      	str	r3, [sp, #0]
100010ca:	465b      	mov	r3, fp
100010cc:	4652      	mov	r2, sl
100010ce:	990a      	ldr	r1, [sp, #40]	; 0x28
100010d0:	9807      	ldr	r0, [sp, #28]
100010d2:	f7ff fc1a 	bl	1000090a <_out_rev>
100010d6:	e12c      	b.n	10001332 <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
100010d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
100010da:	9303      	str	r3, [sp, #12]
100010dc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
100010de:	9302      	str	r3, [sp, #8]
100010e0:	2304      	movs	r3, #4
100010e2:	9301      	str	r3, [sp, #4]
100010e4:	4b7c      	ldr	r3, [pc, #496]	; (100012d8 <_ftoa+0x2c8>)
100010e6:	9300      	str	r3, [sp, #0]
100010e8:	465b      	mov	r3, fp
100010ea:	4652      	mov	r2, sl
100010ec:	990a      	ldr	r1, [sp, #40]	; 0x28
100010ee:	9807      	ldr	r0, [sp, #28]
100010f0:	f7ff fc0b 	bl	1000090a <_out_rev>
100010f4:	e11d      	b.n	10001332 <_ftoa+0x322>
    return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & FLAGS_PLUS) ? 4U : 3U, width, flags);
100010f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
100010f8:	f013 0304 	ands.w	r3, r3, #4
100010fc:	d00f      	beq.n	1000111e <_ftoa+0x10e>
100010fe:	4a77      	ldr	r2, [pc, #476]	; (100012dc <_ftoa+0x2cc>)
10001100:	b17b      	cbz	r3, 10001122 <_ftoa+0x112>
10001102:	2304      	movs	r3, #4
10001104:	9924      	ldr	r1, [sp, #144]	; 0x90
10001106:	9103      	str	r1, [sp, #12]
10001108:	9923      	ldr	r1, [sp, #140]	; 0x8c
1000110a:	9102      	str	r1, [sp, #8]
1000110c:	9301      	str	r3, [sp, #4]
1000110e:	9200      	str	r2, [sp, #0]
10001110:	465b      	mov	r3, fp
10001112:	4652      	mov	r2, sl
10001114:	990a      	ldr	r1, [sp, #40]	; 0x28
10001116:	9807      	ldr	r0, [sp, #28]
10001118:	f7ff fbf7 	bl	1000090a <_out_rev>
1000111c:	e109      	b.n	10001332 <_ftoa+0x322>
1000111e:	4a70      	ldr	r2, [pc, #448]	; (100012e0 <_ftoa+0x2d0>)
10001120:	e7ee      	b.n	10001100 <_ftoa+0xf0>
10001122:	2303      	movs	r3, #3
10001124:	e7ee      	b.n	10001104 <_ftoa+0xf4>
    return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
10001126:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001128:	9304      	str	r3, [sp, #16]
1000112a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000112c:	9303      	str	r3, [sp, #12]
1000112e:	9502      	str	r5, [sp, #8]
10001130:	e9cd 8900 	strd	r8, r9, [sp]
10001134:	465b      	mov	r3, fp
10001136:	4652      	mov	r2, sl
10001138:	990a      	ldr	r1, [sp, #40]	; 0x28
1000113a:	9807      	ldr	r0, [sp, #28]
1000113c:	f7ff fd70 	bl	10000c20 <_etoa>
10001140:	e0f7      	b.n	10001332 <_ftoa+0x322>
    value = 0 - value;
10001142:	4642      	mov	r2, r8
10001144:	464b      	mov	r3, r9
10001146:	2000      	movs	r0, #0
10001148:	2100      	movs	r1, #0
1000114a:	f003 f909 	bl	10004360 <__aeabi_dsub>
1000114e:	4680      	mov	r8, r0
10001150:	4689      	mov	r9, r1
    negative = true;
10001152:	2301      	movs	r3, #1
10001154:	930b      	str	r3, [sp, #44]	; 0x2c
10001156:	e79e      	b.n	10001096 <_ftoa+0x86>
    prec = PRINTF_DEFAULT_FLOAT_PRECISION;
10001158:	2506      	movs	r5, #6
1000115a:	e7a0      	b.n	1000109e <_ftoa+0x8e>
  int whole = (int)value;
1000115c:	4640      	mov	r0, r8
1000115e:	4649      	mov	r1, r9
10001160:	f003 fd50 	bl	10004c04 <__aeabi_d2iz>
10001164:	4606      	mov	r6, r0
  double tmp = (value - whole) * pow10[prec];
10001166:	f003 fa49 	bl	100045fc <__aeabi_i2d>
1000116a:	4602      	mov	r2, r0
1000116c:	460b      	mov	r3, r1
1000116e:	4640      	mov	r0, r8
10001170:	4649      	mov	r1, r9
10001172:	f003 f8f5 	bl	10004360 <__aeabi_dsub>
10001176:	4b5b      	ldr	r3, [pc, #364]	; (100012e4 <_ftoa+0x2d4>)
10001178:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
1000117c:	ed93 8b00 	vldr	d8, [r3]
10001180:	ec53 2b18 	vmov	r2, r3, d8
10001184:	f003 faa4 	bl	100046d0 <__aeabi_dmul>
10001188:	4602      	mov	r2, r0
1000118a:	460b      	mov	r3, r1
1000118c:	e9cd 2308 	strd	r2, r3, [sp, #32]
  unsigned long frac = (unsigned long)tmp;
10001190:	f003 fd60 	bl	10004c54 <__aeabi_d2uiz>
10001194:	4607      	mov	r7, r0
  diff = tmp - frac;
10001196:	f003 fa21 	bl	100045dc <__aeabi_ui2d>
1000119a:	4602      	mov	r2, r0
1000119c:	460b      	mov	r3, r1
1000119e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
100011a2:	f003 f8dd 	bl	10004360 <__aeabi_dsub>
100011a6:	4602      	mov	r2, r0
100011a8:	460b      	mov	r3, r1
100011aa:	e9cd 2308 	strd	r2, r3, [sp, #32]
  if (diff > 0.5) {
100011ae:	2200      	movs	r2, #0
100011b0:	4b4d      	ldr	r3, [pc, #308]	; (100012e8 <_ftoa+0x2d8>)
100011b2:	f003 fd1d 	bl	10004bf0 <__aeabi_dcmpgt>
100011b6:	b350      	cbz	r0, 1000120e <_ftoa+0x1fe>
    ++frac;
100011b8:	3701      	adds	r7, #1
    if (frac >= pow10[prec]) {
100011ba:	4638      	mov	r0, r7
100011bc:	f003 fa0e 	bl	100045dc <__aeabi_ui2d>
100011c0:	4602      	mov	r2, r0
100011c2:	460b      	mov	r3, r1
100011c4:	ec51 0b18 	vmov	r0, r1, d8
100011c8:	f003 fcfe 	bl	10004bc8 <__aeabi_dcmple>
100011cc:	b108      	cbz	r0, 100011d2 <_ftoa+0x1c2>
      ++whole;
100011ce:	3601      	adds	r6, #1
      frac = 0;
100011d0:	2700      	movs	r7, #0
  if (prec == 0U) {
100011d2:	bb55      	cbnz	r5, 1000122a <_ftoa+0x21a>
    diff = value - (double)whole;
100011d4:	4630      	mov	r0, r6
100011d6:	f003 fa11 	bl	100045fc <__aeabi_i2d>
100011da:	4602      	mov	r2, r0
100011dc:	460b      	mov	r3, r1
100011de:	4640      	mov	r0, r8
100011e0:	4649      	mov	r1, r9
100011e2:	f003 f8bd 	bl	10004360 <__aeabi_dsub>
100011e6:	4607      	mov	r7, r0
100011e8:	4688      	mov	r8, r1
    if ((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
100011ea:	2200      	movs	r2, #0
100011ec:	4b3e      	ldr	r3, [pc, #248]	; (100012e8 <_ftoa+0x2d8>)
100011ee:	f003 fce1 	bl	10004bb4 <__aeabi_dcmplt>
100011f2:	b138      	cbz	r0, 10001204 <_ftoa+0x1f4>
100011f4:	2200      	movs	r2, #0
100011f6:	4b3c      	ldr	r3, [pc, #240]	; (100012e8 <_ftoa+0x2d8>)
100011f8:	4638      	mov	r0, r7
100011fa:	4641      	mov	r1, r8
100011fc:	f003 fcf8 	bl	10004bf0 <__aeabi_dcmpgt>
10001200:	2800      	cmp	r0, #0
10001202:	d042      	beq.n	1000128a <_ftoa+0x27a>
10001204:	f016 0f01 	tst.w	r6, #1
10001208:	d03f      	beq.n	1000128a <_ftoa+0x27a>
      ++whole;
1000120a:	3601      	adds	r6, #1
1000120c:	e03d      	b.n	1000128a <_ftoa+0x27a>
  else if (diff < 0.5) {
1000120e:	2200      	movs	r2, #0
10001210:	4b35      	ldr	r3, [pc, #212]	; (100012e8 <_ftoa+0x2d8>)
10001212:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
10001216:	f003 fccd 	bl	10004bb4 <__aeabi_dcmplt>
1000121a:	2800      	cmp	r0, #0
1000121c:	d1d9      	bne.n	100011d2 <_ftoa+0x1c2>
  else if ((frac == 0U) || (frac & 1U)) {
1000121e:	b117      	cbz	r7, 10001226 <_ftoa+0x216>
10001220:	f017 0f01 	tst.w	r7, #1
10001224:	d0d5      	beq.n	100011d2 <_ftoa+0x1c2>
    ++frac;
10001226:	3701      	adds	r7, #1
10001228:	e7d3      	b.n	100011d2 <_ftoa+0x1c2>
    while (len < PRINTF_FTOA_BUFFER_SIZE) {
1000122a:	2c1f      	cmp	r4, #31
1000122c:	d817      	bhi.n	1000125e <_ftoa+0x24e>
      --count;
1000122e:	3d01      	subs	r5, #1
      buf[len++] = (char)(48U + (frac % 10U));
10001230:	4b2e      	ldr	r3, [pc, #184]	; (100012ec <_ftoa+0x2dc>)
10001232:	fba3 2307 	umull	r2, r3, r3, r7
10001236:	08db      	lsrs	r3, r3, #3
10001238:	4619      	mov	r1, r3
1000123a:	eb03 0383 	add.w	r3, r3, r3, lsl #2
1000123e:	eba7 0343 	sub.w	r3, r7, r3, lsl #1
10001242:	1c62      	adds	r2, r4, #1
10001244:	3330      	adds	r3, #48	; 0x30
10001246:	f104 0050 	add.w	r0, r4, #80	; 0x50
1000124a:	eb0d 0400 	add.w	r4, sp, r0
1000124e:	f804 3c20 	strb.w	r3, [r4, #-32]
      if (!(frac /= 10U)) {
10001252:	2f09      	cmp	r7, #9
10001254:	d902      	bls.n	1000125c <_ftoa+0x24c>
10001256:	460f      	mov	r7, r1
      buf[len++] = (char)(48U + (frac % 10U));
10001258:	4614      	mov	r4, r2
1000125a:	e7e6      	b.n	1000122a <_ftoa+0x21a>
1000125c:	4614      	mov	r4, r2
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
1000125e:	2c1f      	cmp	r4, #31
10001260:	d80a      	bhi.n	10001278 <_ftoa+0x268>
10001262:	1e6b      	subs	r3, r5, #1
10001264:	b145      	cbz	r5, 10001278 <_ftoa+0x268>
      buf[len++] = '0';
10001266:	f104 0250 	add.w	r2, r4, #80	; 0x50
1000126a:	446a      	add	r2, sp
1000126c:	2130      	movs	r1, #48	; 0x30
1000126e:	f802 1c20 	strb.w	r1, [r2, #-32]
    while ((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
10001272:	461d      	mov	r5, r3
      buf[len++] = '0';
10001274:	3401      	adds	r4, #1
10001276:	e7f2      	b.n	1000125e <_ftoa+0x24e>
    if (len < PRINTF_FTOA_BUFFER_SIZE) {
10001278:	2c1f      	cmp	r4, #31
1000127a:	d806      	bhi.n	1000128a <_ftoa+0x27a>
      buf[len++] = '.';
1000127c:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001280:	446b      	add	r3, sp
10001282:	222e      	movs	r2, #46	; 0x2e
10001284:	f803 2c20 	strb.w	r2, [r3, #-32]
10001288:	3401      	adds	r4, #1
  while (len < PRINTF_FTOA_BUFFER_SIZE) {
1000128a:	2c1f      	cmp	r4, #31
1000128c:	d833      	bhi.n	100012f6 <_ftoa+0x2e6>
    buf[len++] = (char)(48 + (whole % 10));
1000128e:	4a18      	ldr	r2, [pc, #96]	; (100012f0 <_ftoa+0x2e0>)
10001290:	fb82 3206 	smull	r3, r2, r2, r6
10001294:	17f3      	asrs	r3, r6, #31
10001296:	ebc3 03a2 	rsb	r3, r3, r2, asr #2
1000129a:	461a      	mov	r2, r3
1000129c:	eb03 0383 	add.w	r3, r3, r3, lsl #2
100012a0:	eba6 0343 	sub.w	r3, r6, r3, lsl #1
100012a4:	1c61      	adds	r1, r4, #1
100012a6:	3330      	adds	r3, #48	; 0x30
100012a8:	f104 0050 	add.w	r0, r4, #80	; 0x50
100012ac:	eb0d 0400 	add.w	r4, sp, r0
100012b0:	f804 3c20 	strb.w	r3, [r4, #-32]
    if (!(whole /= 10)) {
100012b4:	4616      	mov	r6, r2
100012b6:	b1ea      	cbz	r2, 100012f4 <_ftoa+0x2e4>
    buf[len++] = (char)(48 + (whole % 10));
100012b8:	460c      	mov	r4, r1
100012ba:	e7e6      	b.n	1000128a <_ftoa+0x27a>
100012bc:	f3af 8000 	nop.w
100012c0:	00000000 	andeq	r0, r0, r0
100012c4:	41cdcd65 	bicmi	ip, sp, r5, ror #26
100012c8:	00000000 	andeq	r0, r0, r0
100012cc:	c1cdcd65 	bicgt	ip, sp, r5, ror #26
100012d0:	7fefffff 	svcvc	0x00efffff
100012d4:	10005f7c 	andne	r5, r0, ip, ror pc
100012d8:	10005f80 	andne	r5, r0, r0, lsl #31
100012dc:	10005f74 	andne	r5, r0, r4, ror pc
100012e0:	10005f70 	andne	r5, r0, r0, ror pc
100012e4:	10005f88 	andne	r5, r0, r8, lsl #31
100012e8:	3fe00000 	svccc	0x00e00000
100012ec:	cccccccd 	stclgt	12, cr12, [ip], {205}	; 0xcd
100012f0:	66666667 	strbtvs	r6, [r6], -r7, ror #12
100012f4:	460c      	mov	r4, r1
  if (!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
100012f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
100012f8:	f003 0303 	and.w	r3, r3, #3
100012fc:	2b01      	cmp	r3, #1
100012fe:	d01d      	beq.n	1000133c <_ftoa+0x32c>
  if (len < PRINTF_FTOA_BUFFER_SIZE) {
10001300:	2c1f      	cmp	r4, #31
10001302:	d809      	bhi.n	10001318 <_ftoa+0x308>
    if (negative) {
10001304:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10001306:	2b00      	cmp	r3, #0
10001308:	d035      	beq.n	10001376 <_ftoa+0x366>
      buf[len++] = '-';
1000130a:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000130e:	446b      	add	r3, sp
10001310:	222d      	movs	r2, #45	; 0x2d
10001312:	f803 2c20 	strb.w	r2, [r3, #-32]
10001316:	3401      	adds	r4, #1
  return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
10001318:	9b24      	ldr	r3, [sp, #144]	; 0x90
1000131a:	9303      	str	r3, [sp, #12]
1000131c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000131e:	9302      	str	r3, [sp, #8]
10001320:	9401      	str	r4, [sp, #4]
10001322:	ab0c      	add	r3, sp, #48	; 0x30
10001324:	9300      	str	r3, [sp, #0]
10001326:	465b      	mov	r3, fp
10001328:	4652      	mov	r2, sl
1000132a:	990a      	ldr	r1, [sp, #40]	; 0x28
1000132c:	9807      	ldr	r0, [sp, #28]
1000132e:	f7ff faec 	bl	1000090a <_out_rev>
}
10001332:	b015      	add	sp, #84	; 0x54
10001334:	ecbd 8b02 	vpop	{d8}
10001338:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    if (width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
1000133c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000133e:	b1b3      	cbz	r3, 1000136e <_ftoa+0x35e>
10001340:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
10001342:	b91b      	cbnz	r3, 1000134c <_ftoa+0x33c>
10001344:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001346:	f013 0f0c 	tst.w	r3, #12
1000134a:	d012      	beq.n	10001372 <_ftoa+0x362>
      width--;
1000134c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
1000134e:	3b01      	subs	r3, #1
10001350:	9323      	str	r3, [sp, #140]	; 0x8c
10001352:	4619      	mov	r1, r3
10001354:	e006      	b.n	10001364 <_ftoa+0x354>
      buf[len++] = '0';
10001356:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000135a:	446b      	add	r3, sp
1000135c:	2230      	movs	r2, #48	; 0x30
1000135e:	f803 2c20 	strb.w	r2, [r3, #-32]
10001362:	3401      	adds	r4, #1
    while ((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
10001364:	428c      	cmp	r4, r1
10001366:	d2cb      	bcs.n	10001300 <_ftoa+0x2f0>
10001368:	2c1f      	cmp	r4, #31
1000136a:	d9f4      	bls.n	10001356 <_ftoa+0x346>
1000136c:	e7c8      	b.n	10001300 <_ftoa+0x2f0>
1000136e:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001370:	e7f8      	b.n	10001364 <_ftoa+0x354>
10001372:	9923      	ldr	r1, [sp, #140]	; 0x8c
10001374:	e7f6      	b.n	10001364 <_ftoa+0x354>
    else if (flags & FLAGS_PLUS) {
10001376:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001378:	f013 0f04 	tst.w	r3, #4
1000137c:	d007      	beq.n	1000138e <_ftoa+0x37e>
      buf[len++] = '+';  // ignore the space if the '+' exists
1000137e:	f104 0350 	add.w	r3, r4, #80	; 0x50
10001382:	446b      	add	r3, sp
10001384:	222b      	movs	r2, #43	; 0x2b
10001386:	f803 2c20 	strb.w	r2, [r3, #-32]
1000138a:	3401      	adds	r4, #1
1000138c:	e7c4      	b.n	10001318 <_ftoa+0x308>
    else if (flags & FLAGS_SPACE) {
1000138e:	9b24      	ldr	r3, [sp, #144]	; 0x90
10001390:	f013 0f08 	tst.w	r3, #8
10001394:	d0c0      	beq.n	10001318 <_ftoa+0x308>
      buf[len++] = ' ';
10001396:	f104 0350 	add.w	r3, r4, #80	; 0x50
1000139a:	446b      	add	r3, sp
1000139c:	2220      	movs	r2, #32
1000139e:	f803 2c20 	strb.w	r2, [r3, #-32]
100013a2:	3401      	adds	r4, #1
100013a4:	e7b8      	b.n	10001318 <_ftoa+0x308>
100013a6:	bf00      	nop

100013a8 <_vsnprintf>:
#endif  // PRINTF_SUPPORT_FLOAT


// internal vsnprintf
static int _vsnprintf(out_fct_type out, char* buffer, const size_t maxlen, const char* format, va_list va)
{
100013a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100013ac:	b08f      	sub	sp, #60	; 0x3c
100013ae:	4607      	mov	r7, r0
100013b0:	4616      	mov	r6, r2
100013b2:	930d      	str	r3, [sp, #52]	; 0x34
  unsigned int flags, width, precision, n;
  size_t idx = 0U;

  if (!buffer) {
100013b4:	4688      	mov	r8, r1
100013b6:	2900      	cmp	r1, #0
100013b8:	f000 8324 	beq.w	10001a04 <_vsnprintf+0x65c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
        break;
100013bc:	2400      	movs	r4, #0
  while (*format)
100013be:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100013c0:	7818      	ldrb	r0, [r3, #0]
100013c2:	2800      	cmp	r0, #0
100013c4:	f000 8320 	beq.w	10001a08 <_vsnprintf+0x660>
    if (*format != '%') {
100013c8:	2825      	cmp	r0, #37	; 0x25
100013ca:	d009      	beq.n	100013e0 <_vsnprintf+0x38>
      out(*format, buffer, idx++, maxlen);
100013cc:	1c65      	adds	r5, r4, #1
100013ce:	4633      	mov	r3, r6
100013d0:	4622      	mov	r2, r4
100013d2:	4641      	mov	r1, r8
100013d4:	47b8      	blx	r7
      format++;
100013d6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100013d8:	3301      	adds	r3, #1
100013da:	930d      	str	r3, [sp, #52]	; 0x34
      out(*format, buffer, idx++, maxlen);
100013dc:	462c      	mov	r4, r5
      continue;
100013de:	e7ee      	b.n	100013be <_vsnprintf+0x16>
      format++;
100013e0:	3301      	adds	r3, #1
100013e2:	930d      	str	r3, [sp, #52]	; 0x34
    flags = 0U;
100013e4:	2500      	movs	r5, #0
      switch (*format) {
100013e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100013e8:	7819      	ldrb	r1, [r3, #0]
100013ea:	f1a1 0220 	sub.w	r2, r1, #32
100013ee:	2a10      	cmp	r2, #16
100013f0:	d80a      	bhi.n	10001408 <_vsnprintf+0x60>
100013f2:	e8df f002 	tbb	[pc, r2]
100013f6:	3d090938 	vstrcc.16	s0, [r9, #-112]	; 0xffffff90	; <UNPREDICTABLE>
100013fa:	09090909 	stmdbeq	r9, {r0, r3, r8, fp}
100013fe:	33090909 	movwcc	r0, #39177	; 0x9909
10001402:	09092e09 	stmdbeq	r9, {r0, r3, r9, sl, fp, sp}
10001406:	f1a10029 			; <UNDEFINED> instruction: 0xf1a10029
  return (ch >= '0') && (ch <= '9');
1000140a:	0330      	lsls	r0, r6, #12
1000140c:	b2db      	uxtb	r3, r3
    if (_is_digit(*format)) {
1000140e:	2b09      	cmp	r3, #9
10001410:	d933      	bls.n	1000147a <_vsnprintf+0xd2>
    else if (*format == '*') {
10001412:	292a      	cmp	r1, #42	; 0x2a
10001414:	d036      	beq.n	10001484 <_vsnprintf+0xdc>
    width = 0U;
10001416:	2300      	movs	r3, #0
10001418:	930a      	str	r3, [sp, #40]	; 0x28
    if (*format == '.') {
1000141a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000141c:	781a      	ldrb	r2, [r3, #0]
1000141e:	2a2e      	cmp	r2, #46	; 0x2e
10001420:	d040      	beq.n	100014a4 <_vsnprintf+0xfc>
    precision = 0U;
10001422:	f04f 0b00 	mov.w	fp, #0
    switch (*format) {
10001426:	9a0d      	ldr	r2, [sp, #52]	; 0x34
10001428:	7813      	ldrb	r3, [r2, #0]
1000142a:	3b68      	subs	r3, #104	; 0x68
1000142c:	2b12      	cmp	r3, #18
1000142e:	d877      	bhi.n	10001520 <_vsnprintf+0x178>
10001430:	e8df f003 	tbb	[pc, r3]
10001434:	76d37664 	ldrbvc	r7, [r3], r4, ror #12
10001438:	76767656 			; <UNDEFINED> instruction: 0x76767656
1000143c:	76767676 			; <UNDEFINED> instruction: 0x76767676
10001440:	76767672 			; <UNDEFINED> instruction: 0x76767672
10001444:	00d87676 	sbcseq	r7, r8, r6, ror r6
        case '0': flags |= FLAGS_ZEROPAD; format++; n = 1U; break;
10001448:	f045 0501 	orr.w	r5, r5, #1
1000144c:	3301      	adds	r3, #1
1000144e:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001450:	e7c9      	b.n	100013e6 <_vsnprintf+0x3e>
        case '-': flags |= FLAGS_LEFT;    format++; n = 1U; break;
10001452:	f045 0502 	orr.w	r5, r5, #2
10001456:	3301      	adds	r3, #1
10001458:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
1000145a:	e7c4      	b.n	100013e6 <_vsnprintf+0x3e>
        case '+': flags |= FLAGS_PLUS;    format++; n = 1U; break;
1000145c:	f045 0504 	orr.w	r5, r5, #4
10001460:	3301      	adds	r3, #1
10001462:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001464:	e7bf      	b.n	100013e6 <_vsnprintf+0x3e>
        case ' ': flags |= FLAGS_SPACE;   format++; n = 1U; break;
10001466:	f045 0508 	orr.w	r5, r5, #8
1000146a:	3301      	adds	r3, #1
1000146c:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
1000146e:	e7ba      	b.n	100013e6 <_vsnprintf+0x3e>
        case '#': flags |= FLAGS_HASH;    format++; n = 1U; break;
10001470:	f045 0510 	orr.w	r5, r5, #16
10001474:	3301      	adds	r3, #1
10001476:	930d      	str	r3, [sp, #52]	; 0x34
    } while (n);
10001478:	e7b5      	b.n	100013e6 <_vsnprintf+0x3e>
      width = _atoi(&format);
1000147a:	a80d      	add	r0, sp, #52	; 0x34
1000147c:	f7ff fa33 	bl	100008e6 <_atoi>
10001480:	900a      	str	r0, [sp, #40]	; 0x28
10001482:	e7ca      	b.n	1000141a <_vsnprintf+0x72>
      const int w = va_arg(va, int);
10001484:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001486:	1d1a      	adds	r2, r3, #4
10001488:	9218      	str	r2, [sp, #96]	; 0x60
1000148a:	6818      	ldr	r0, [r3, #0]
      if (w < 0) {
1000148c:	2800      	cmp	r0, #0
1000148e:	db04      	blt.n	1000149a <_vsnprintf+0xf2>
        width = (unsigned int)w;
10001490:	900a      	str	r0, [sp, #40]	; 0x28
      format++;
10001492:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001494:	3301      	adds	r3, #1
10001496:	930d      	str	r3, [sp, #52]	; 0x34
10001498:	e7bf      	b.n	1000141a <_vsnprintf+0x72>
        flags |= FLAGS_LEFT;    // reverse padding
1000149a:	f045 0502 	orr.w	r5, r5, #2
        width = (unsigned int)-w;
1000149e:	4243      	negs	r3, r0
100014a0:	930a      	str	r3, [sp, #40]	; 0x28
100014a2:	e7f6      	b.n	10001492 <_vsnprintf+0xea>
      flags |= FLAGS_PRECISION;
100014a4:	f445 6580 	orr.w	r5, r5, #1024	; 0x400
      format++;
100014a8:	1c5a      	adds	r2, r3, #1
100014aa:	920d      	str	r2, [sp, #52]	; 0x34
      if (_is_digit(*format)) {
100014ac:	785a      	ldrb	r2, [r3, #1]
  return (ch >= '0') && (ch <= '9');
100014ae:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
100014b2:	b2db      	uxtb	r3, r3
      if (_is_digit(*format)) {
100014b4:	2b09      	cmp	r3, #9
100014b6:	d904      	bls.n	100014c2 <_vsnprintf+0x11a>
      else if (*format == '*') {
100014b8:	2a2a      	cmp	r2, #42	; 0x2a
100014ba:	d007      	beq.n	100014cc <_vsnprintf+0x124>
    precision = 0U;
100014bc:	f04f 0b00 	mov.w	fp, #0
100014c0:	e7b1      	b.n	10001426 <_vsnprintf+0x7e>
        precision = _atoi(&format);
100014c2:	a80d      	add	r0, sp, #52	; 0x34
100014c4:	f7ff fa0f 	bl	100008e6 <_atoi>
100014c8:	4683      	mov	fp, r0
100014ca:	e7ac      	b.n	10001426 <_vsnprintf+0x7e>
        const int prec = (int)va_arg(va, int);
100014cc:	9b18      	ldr	r3, [sp, #96]	; 0x60
100014ce:	1d1a      	adds	r2, r3, #4
100014d0:	9218      	str	r2, [sp, #96]	; 0x60
100014d2:	681b      	ldr	r3, [r3, #0]
        precision = prec > 0 ? (unsigned int)prec : 0U;
100014d4:	ea23 7be3 	bic.w	fp, r3, r3, asr #31
        format++;
100014d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100014da:	3301      	adds	r3, #1
100014dc:	930d      	str	r3, [sp, #52]	; 0x34
100014de:	e7a2      	b.n	10001426 <_vsnprintf+0x7e>
        flags |= FLAGS_LONG;
100014e0:	f445 7180 	orr.w	r1, r5, #256	; 0x100
        format++;
100014e4:	1c53      	adds	r3, r2, #1
100014e6:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'l') {
100014e8:	7852      	ldrb	r2, [r2, #1]
100014ea:	2a6c      	cmp	r2, #108	; 0x6c
100014ec:	d001      	beq.n	100014f2 <_vsnprintf+0x14a>
        flags |= FLAGS_LONG;
100014ee:	460d      	mov	r5, r1
100014f0:	e016      	b.n	10001520 <_vsnprintf+0x178>
          flags |= FLAGS_LONG_LONG;
100014f2:	f445 7540 	orr.w	r5, r5, #768	; 0x300
          format++;
100014f6:	3301      	adds	r3, #1
100014f8:	930d      	str	r3, [sp, #52]	; 0x34
100014fa:	e011      	b.n	10001520 <_vsnprintf+0x178>
        flags |= FLAGS_SHORT;
100014fc:	f045 0180 	orr.w	r1, r5, #128	; 0x80
        format++;
10001500:	1c53      	adds	r3, r2, #1
10001502:	930d      	str	r3, [sp, #52]	; 0x34
        if (*format == 'h') {
10001504:	7852      	ldrb	r2, [r2, #1]
10001506:	2a68      	cmp	r2, #104	; 0x68
10001508:	d001      	beq.n	1000150e <_vsnprintf+0x166>
        flags |= FLAGS_SHORT;
1000150a:	460d      	mov	r5, r1
1000150c:	e008      	b.n	10001520 <_vsnprintf+0x178>
          flags |= FLAGS_CHAR;
1000150e:	f045 05c0 	orr.w	r5, r5, #192	; 0xc0
          format++;
10001512:	3301      	adds	r3, #1
10001514:	930d      	str	r3, [sp, #52]	; 0x34
10001516:	e003      	b.n	10001520 <_vsnprintf+0x178>
        flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
10001518:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
1000151c:	3201      	adds	r2, #1
1000151e:	920d      	str	r2, [sp, #52]	; 0x34
    switch (*format) {
10001520:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001522:	7818      	ldrb	r0, [r3, #0]
10001524:	f1a0 0325 	sub.w	r3, r0, #37	; 0x25
10001528:	2b53      	cmp	r3, #83	; 0x53
1000152a:	f200 8261 	bhi.w	100019f0 <_vsnprintf+0x648>
1000152e:	e8df f013 	tbh	[pc, r3, lsl #1]
10001532:	025f0254 	subseq	r0, pc, #84, 4	; 0x40000005
10001536:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000153a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000153e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001542:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001546:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000154a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000154e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001552:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001556:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000155a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000155e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001562:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001566:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000156a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000156e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001572:	01540174 	cmpeq	r4, r4, ror r1
10001576:	025f0174 	subseq	r0, pc, #116, 2
1000157a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000157e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001582:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001586:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000158a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000158e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001592:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
10001596:	005e025f 	subseq	r0, lr, pc, asr r2
1000159a:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
1000159e:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015a2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015a6:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015aa:	005e025f 	subseq	r0, lr, pc, asr r2
100015ae:	005e019b 			; <UNDEFINED> instruction: 0x005e019b
100015b2:	01540174 	cmpeq	r4, r4, ror r1
100015b6:	025f0174 	subseq	r0, pc, #116, 2
100015ba:	025f005e 	subseq	r0, pc, #94	; 0x5e
100015be:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015c2:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015c6:	0239005e 	eorseq	r0, r9, #94	; 0x5e
100015ca:	025f025f 	subseq	r0, pc, #-268435451	; 0xf0000005
100015ce:	025f01d4 	subseq	r0, pc, #212, 2	; 0x35
100015d2:	025f005e 	subseq	r0, pc, #94	; 0x5e
100015d6:	005e025f 	subseq	r0, lr, pc, asr r2
        flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100015da:	f445 7500 	orr.w	r5, r5, #512	; 0x200
        format++;
100015de:	3201      	adds	r2, #1
100015e0:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100015e2:	e79d      	b.n	10001520 <_vsnprintf+0x178>
        flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
100015e4:	f445 7580 	orr.w	r5, r5, #256	; 0x100
        format++;
100015e8:	3201      	adds	r2, #1
100015ea:	920d      	str	r2, [sp, #52]	; 0x34
        break;
100015ec:	e798      	b.n	10001520 <_vsnprintf+0x178>
        if (*format == 'x' || *format == 'X') {
100015ee:	2878      	cmp	r0, #120	; 0x78
100015f0:	d009      	beq.n	10001606 <_vsnprintf+0x25e>
100015f2:	2858      	cmp	r0, #88	; 0x58
100015f4:	d03a      	beq.n	1000166c <_vsnprintf+0x2c4>
        else if (*format == 'o') {
100015f6:	286f      	cmp	r0, #111	; 0x6f
100015f8:	d03a      	beq.n	10001670 <_vsnprintf+0x2c8>
        else if (*format == 'b') {
100015fa:	2862      	cmp	r0, #98	; 0x62
100015fc:	d03a      	beq.n	10001674 <_vsnprintf+0x2cc>
          flags &= ~FLAGS_HASH;   // no hash for dec format
100015fe:	f025 0510 	bic.w	r5, r5, #16
          base = 10U;
10001602:	230a      	movs	r3, #10
10001604:	e000      	b.n	10001608 <_vsnprintf+0x260>
          base = 16U;
10001606:	2310      	movs	r3, #16
        if (*format == 'X') {
10001608:	2858      	cmp	r0, #88	; 0x58
1000160a:	d035      	beq.n	10001678 <_vsnprintf+0x2d0>
        if ((*format != 'i') && (*format != 'd')) {
1000160c:	2869      	cmp	r0, #105	; 0x69
1000160e:	d003      	beq.n	10001618 <_vsnprintf+0x270>
10001610:	2864      	cmp	r0, #100	; 0x64
10001612:	d001      	beq.n	10001618 <_vsnprintf+0x270>
          flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
10001614:	f025 050c 	bic.w	r5, r5, #12
        if (flags & FLAGS_PRECISION) {
10001618:	f415 6f80 	tst.w	r5, #1024	; 0x400
1000161c:	d001      	beq.n	10001622 <_vsnprintf+0x27a>
          flags &= ~FLAGS_ZEROPAD;
1000161e:	f025 0501 	bic.w	r5, r5, #1
        if ((*format == 'i') || (*format == 'd')) {
10001622:	2869      	cmp	r0, #105	; 0x69
10001624:	d02b      	beq.n	1000167e <_vsnprintf+0x2d6>
10001626:	2864      	cmp	r0, #100	; 0x64
10001628:	d029      	beq.n	1000167e <_vsnprintf+0x2d6>
          if (flags & FLAGS_LONG_LONG) {
1000162a:	f415 7f00 	tst.w	r5, #512	; 0x200
1000162e:	f040 8096 	bne.w	1000175e <_vsnprintf+0x3b6>
          else if (flags & FLAGS_LONG) {
10001632:	f415 7f80 	tst.w	r5, #256	; 0x100
10001636:	f040 80ae 	bne.w	10001796 <_vsnprintf+0x3ee>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
1000163a:	f015 0f40 	tst.w	r5, #64	; 0x40
1000163e:	f000 80bf 	beq.w	100017c0 <_vsnprintf+0x418>
10001642:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001644:	1d11      	adds	r1, r2, #4
10001646:	9118      	str	r1, [sp, #96]	; 0x60
10001648:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precision, width, flags);
1000164a:	9505      	str	r5, [sp, #20]
1000164c:	990a      	ldr	r1, [sp, #40]	; 0x28
1000164e:	9104      	str	r1, [sp, #16]
10001650:	f8cd b00c 	str.w	fp, [sp, #12]
10001654:	9302      	str	r3, [sp, #8]
10001656:	2300      	movs	r3, #0
10001658:	9301      	str	r3, [sp, #4]
1000165a:	9200      	str	r2, [sp, #0]
1000165c:	4633      	mov	r3, r6
1000165e:	4622      	mov	r2, r4
10001660:	4641      	mov	r1, r8
10001662:	4638      	mov	r0, r7
10001664:	f7ff fa2c 	bl	10000ac0 <_ntoa_long>
10001668:	4604      	mov	r4, r0
1000166a:	e029      	b.n	100016c0 <_vsnprintf+0x318>
          base = 16U;
1000166c:	2310      	movs	r3, #16
1000166e:	e7cb      	b.n	10001608 <_vsnprintf+0x260>
          base =  8U;
10001670:	2308      	movs	r3, #8
10001672:	e7c9      	b.n	10001608 <_vsnprintf+0x260>
          base =  2U;
10001674:	2302      	movs	r3, #2
10001676:	e7c7      	b.n	10001608 <_vsnprintf+0x260>
          flags |= FLAGS_UPPERCASE;
10001678:	f045 0520 	orr.w	r5, r5, #32
1000167c:	e7c6      	b.n	1000160c <_vsnprintf+0x264>
          if (flags & FLAGS_LONG_LONG) {
1000167e:	f415 7f00 	tst.w	r5, #512	; 0x200
10001682:	d121      	bne.n	100016c8 <_vsnprintf+0x320>
          else if (flags & FLAGS_LONG) {
10001684:	f415 7f80 	tst.w	r5, #256	; 0x100
10001688:	d142      	bne.n	10001710 <_vsnprintf+0x368>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
1000168a:	f015 0f40 	tst.w	r5, #64	; 0x40
1000168e:	d058      	beq.n	10001742 <_vsnprintf+0x39a>
10001690:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001692:	1d11      	adds	r1, r2, #4
10001694:	9118      	str	r1, [sp, #96]	; 0x60
10001696:	7812      	ldrb	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001698:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
1000169c:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
100016a0:	9505      	str	r5, [sp, #20]
100016a2:	980a      	ldr	r0, [sp, #40]	; 0x28
100016a4:	9004      	str	r0, [sp, #16]
100016a6:	f8cd b00c 	str.w	fp, [sp, #12]
100016aa:	9302      	str	r3, [sp, #8]
100016ac:	0fd2      	lsrs	r2, r2, #31
100016ae:	9201      	str	r2, [sp, #4]
100016b0:	9100      	str	r1, [sp, #0]
100016b2:	4633      	mov	r3, r6
100016b4:	4622      	mov	r2, r4
100016b6:	4641      	mov	r1, r8
100016b8:	4638      	mov	r0, r7
100016ba:	f7ff fa01 	bl	10000ac0 <_ntoa_long>
100016be:	4604      	mov	r4, r0
        format++;
100016c0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100016c2:	3301      	adds	r3, #1
100016c4:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100016c6:	e67a      	b.n	100013be <_vsnprintf+0x16>
            const long long value = va_arg(va, long long);
100016c8:	9a18      	ldr	r2, [sp, #96]	; 0x60
100016ca:	3207      	adds	r2, #7
100016cc:	f022 0207 	bic.w	r2, r2, #7
100016d0:	f102 0108 	add.w	r1, r2, #8
100016d4:	9118      	str	r1, [sp, #96]	; 0x60
100016d6:	6851      	ldr	r1, [r2, #4]
            idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
100016d8:	6812      	ldr	r2, [r2, #0]
100016da:	4608      	mov	r0, r1
100016dc:	2900      	cmp	r1, #0
100016de:	db13      	blt.n	10001708 <_vsnprintf+0x360>
100016e0:	9508      	str	r5, [sp, #32]
100016e2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
100016e4:	9507      	str	r5, [sp, #28]
100016e6:	f8cd b018 	str.w	fp, [sp, #24]
100016ea:	9304      	str	r3, [sp, #16]
100016ec:	2300      	movs	r3, #0
100016ee:	9305      	str	r3, [sp, #20]
100016f0:	0fc9      	lsrs	r1, r1, #31
100016f2:	9102      	str	r1, [sp, #8]
100016f4:	9200      	str	r2, [sp, #0]
100016f6:	9001      	str	r0, [sp, #4]
100016f8:	4633      	mov	r3, r6
100016fa:	4622      	mov	r2, r4
100016fc:	4641      	mov	r1, r8
100016fe:	4638      	mov	r0, r7
10001700:	f7ff fa28 	bl	10000b54 <_ntoa_long_long>
10001704:	4604      	mov	r4, r0
10001706:	e7db      	b.n	100016c0 <_vsnprintf+0x318>
10001708:	4252      	negs	r2, r2
1000170a:	eb61 0041 	sbc.w	r0, r1, r1, lsl #1
1000170e:	e7e7      	b.n	100016e0 <_vsnprintf+0x338>
            const long value = va_arg(va, long);
10001710:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001712:	1d11      	adds	r1, r2, #4
10001714:	9118      	str	r1, [sp, #96]	; 0x60
10001716:	6812      	ldr	r2, [r2, #0]
            idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? value : 0 - value), value < 0, base, precision, width, flags);
10001718:	ea82 71e2 	eor.w	r1, r2, r2, asr #31
1000171c:	eba1 71e2 	sub.w	r1, r1, r2, asr #31
10001720:	9505      	str	r5, [sp, #20]
10001722:	980a      	ldr	r0, [sp, #40]	; 0x28
10001724:	9004      	str	r0, [sp, #16]
10001726:	f8cd b00c 	str.w	fp, [sp, #12]
1000172a:	9302      	str	r3, [sp, #8]
1000172c:	0fd2      	lsrs	r2, r2, #31
1000172e:	9201      	str	r2, [sp, #4]
10001730:	9100      	str	r1, [sp, #0]
10001732:	4633      	mov	r3, r6
10001734:	4622      	mov	r2, r4
10001736:	4641      	mov	r1, r8
10001738:	4638      	mov	r0, r7
1000173a:	f7ff f9c1 	bl	10000ac0 <_ntoa_long>
1000173e:	4604      	mov	r4, r0
10001740:	e7be      	b.n	100016c0 <_vsnprintf+0x318>
            const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags & FLAGS_SHORT) ? (short int)va_arg(va, int) : va_arg(va, int);
10001742:	f015 0f80 	tst.w	r5, #128	; 0x80
10001746:	d005      	beq.n	10001754 <_vsnprintf+0x3ac>
10001748:	9a18      	ldr	r2, [sp, #96]	; 0x60
1000174a:	1d11      	adds	r1, r2, #4
1000174c:	9118      	str	r1, [sp, #96]	; 0x60
1000174e:	f9b2 2000 	ldrsh.w	r2, [r2]
10001752:	e7a1      	b.n	10001698 <_vsnprintf+0x2f0>
10001754:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001756:	1d11      	adds	r1, r2, #4
10001758:	9118      	str	r1, [sp, #96]	; 0x60
1000175a:	6812      	ldr	r2, [r2, #0]
1000175c:	e79c      	b.n	10001698 <_vsnprintf+0x2f0>
            idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned long long), false, base, precision, width, flags);
1000175e:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001760:	3207      	adds	r2, #7
10001762:	f022 0207 	bic.w	r2, r2, #7
10001766:	f102 0108 	add.w	r1, r2, #8
1000176a:	9118      	str	r1, [sp, #96]	; 0x60
1000176c:	9508      	str	r5, [sp, #32]
1000176e:	990a      	ldr	r1, [sp, #40]	; 0x28
10001770:	9107      	str	r1, [sp, #28]
10001772:	f8cd b018 	str.w	fp, [sp, #24]
10001776:	2100      	movs	r1, #0
10001778:	9304      	str	r3, [sp, #16]
1000177a:	9105      	str	r1, [sp, #20]
1000177c:	9102      	str	r1, [sp, #8]
1000177e:	e9d2 2300 	ldrd	r2, r3, [r2]
10001782:	e9cd 2300 	strd	r2, r3, [sp]
10001786:	4633      	mov	r3, r6
10001788:	4622      	mov	r2, r4
1000178a:	4641      	mov	r1, r8
1000178c:	4638      	mov	r0, r7
1000178e:	f7ff f9e1 	bl	10000b54 <_ntoa_long_long>
10001792:	4604      	mov	r4, r0
10001794:	e794      	b.n	100016c0 <_vsnprintf+0x318>
            idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), false, base, precision, width, flags);
10001796:	9a18      	ldr	r2, [sp, #96]	; 0x60
10001798:	1d11      	adds	r1, r2, #4
1000179a:	9118      	str	r1, [sp, #96]	; 0x60
1000179c:	9505      	str	r5, [sp, #20]
1000179e:	990a      	ldr	r1, [sp, #40]	; 0x28
100017a0:	9104      	str	r1, [sp, #16]
100017a2:	f8cd b00c 	str.w	fp, [sp, #12]
100017a6:	9302      	str	r3, [sp, #8]
100017a8:	2300      	movs	r3, #0
100017aa:	9301      	str	r3, [sp, #4]
100017ac:	6813      	ldr	r3, [r2, #0]
100017ae:	9300      	str	r3, [sp, #0]
100017b0:	4633      	mov	r3, r6
100017b2:	4622      	mov	r2, r4
100017b4:	4641      	mov	r1, r8
100017b6:	4638      	mov	r0, r7
100017b8:	f7ff f982 	bl	10000ac0 <_ntoa_long>
100017bc:	4604      	mov	r4, r0
100017be:	e77f      	b.n	100016c0 <_vsnprintf+0x318>
            const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg(va, unsigned int) : (flags & FLAGS_SHORT) ? (unsigned short int)va_arg(va, unsigned int) : va_arg(va, unsigned int);
100017c0:	f015 0f80 	tst.w	r5, #128	; 0x80
100017c4:	d004      	beq.n	100017d0 <_vsnprintf+0x428>
100017c6:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017c8:	1d11      	adds	r1, r2, #4
100017ca:	9118      	str	r1, [sp, #96]	; 0x60
100017cc:	8812      	ldrh	r2, [r2, #0]
100017ce:	e73c      	b.n	1000164a <_vsnprintf+0x2a2>
100017d0:	9a18      	ldr	r2, [sp, #96]	; 0x60
100017d2:	1d11      	adds	r1, r2, #4
100017d4:	9118      	str	r1, [sp, #96]	; 0x60
100017d6:	6812      	ldr	r2, [r2, #0]
100017d8:	e737      	b.n	1000164a <_vsnprintf+0x2a2>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
100017da:	2846      	cmp	r0, #70	; 0x46
100017dc:	d01a      	beq.n	10001814 <_vsnprintf+0x46c>
        idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
100017de:	9b18      	ldr	r3, [sp, #96]	; 0x60
100017e0:	3307      	adds	r3, #7
100017e2:	f023 0307 	bic.w	r3, r3, #7
100017e6:	f103 0208 	add.w	r2, r3, #8
100017ea:	9218      	str	r2, [sp, #96]	; 0x60
100017ec:	9504      	str	r5, [sp, #16]
100017ee:	9a0a      	ldr	r2, [sp, #40]	; 0x28
100017f0:	9203      	str	r2, [sp, #12]
100017f2:	f8cd b008 	str.w	fp, [sp, #8]
100017f6:	e9d3 2300 	ldrd	r2, r3, [r3]
100017fa:	e9cd 2300 	strd	r2, r3, [sp]
100017fe:	4633      	mov	r3, r6
10001800:	4622      	mov	r2, r4
10001802:	4641      	mov	r1, r8
10001804:	4638      	mov	r0, r7
10001806:	f7ff fc03 	bl	10001010 <_ftoa>
1000180a:	4604      	mov	r4, r0
        format++;
1000180c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000180e:	3301      	adds	r3, #1
10001810:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001812:	e5d4      	b.n	100013be <_vsnprintf+0x16>
        if (*format == 'F') flags |= FLAGS_UPPERCASE;
10001814:	f045 0520 	orr.w	r5, r5, #32
10001818:	e7e1      	b.n	100017de <_vsnprintf+0x436>
        if ((*format == 'g')||(*format == 'G')) flags |= FLAGS_ADAPT_EXP;
1000181a:	2867      	cmp	r0, #103	; 0x67
1000181c:	d001      	beq.n	10001822 <_vsnprintf+0x47a>
1000181e:	2847      	cmp	r0, #71	; 0x47
10001820:	d101      	bne.n	10001826 <_vsnprintf+0x47e>
10001822:	f445 6500 	orr.w	r5, r5, #2048	; 0x800
        if ((*format == 'E')||(*format == 'G')) flags |= FLAGS_UPPERCASE;
10001826:	2845      	cmp	r0, #69	; 0x45
10001828:	d001      	beq.n	1000182e <_vsnprintf+0x486>
1000182a:	2847      	cmp	r0, #71	; 0x47
1000182c:	d101      	bne.n	10001832 <_vsnprintf+0x48a>
1000182e:	f045 0520 	orr.w	r5, r5, #32
        idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
10001832:	9b18      	ldr	r3, [sp, #96]	; 0x60
10001834:	3307      	adds	r3, #7
10001836:	f023 0307 	bic.w	r3, r3, #7
1000183a:	f103 0208 	add.w	r2, r3, #8
1000183e:	9218      	str	r2, [sp, #96]	; 0x60
10001840:	9504      	str	r5, [sp, #16]
10001842:	9a0a      	ldr	r2, [sp, #40]	; 0x28
10001844:	9203      	str	r2, [sp, #12]
10001846:	f8cd b008 	str.w	fp, [sp, #8]
1000184a:	e9d3 2300 	ldrd	r2, r3, [r3]
1000184e:	e9cd 2300 	strd	r2, r3, [sp]
10001852:	4633      	mov	r3, r6
10001854:	4622      	mov	r2, r4
10001856:	4641      	mov	r1, r8
10001858:	4638      	mov	r0, r7
1000185a:	f7ff f9e1 	bl	10000c20 <_etoa>
1000185e:	4604      	mov	r4, r0
        format++;
10001860:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001862:	3301      	adds	r3, #1
10001864:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001866:	e5aa      	b.n	100013be <_vsnprintf+0x16>
        if (!(flags & FLAGS_LEFT)) {
10001868:	f015 0502 	ands.w	r5, r5, #2
1000186c:	d01f      	beq.n	100018ae <_vsnprintf+0x506>
        unsigned int l = 1U;
1000186e:	f04f 0901 	mov.w	r9, #1
        out((char)va_arg(va, int), buffer, idx++, maxlen);
10001872:	9818      	ldr	r0, [sp, #96]	; 0x60
10001874:	1d03      	adds	r3, r0, #4
10001876:	9318      	str	r3, [sp, #96]	; 0x60
10001878:	f104 0a01 	add.w	sl, r4, #1
1000187c:	4633      	mov	r3, r6
1000187e:	4622      	mov	r2, r4
10001880:	4641      	mov	r1, r8
10001882:	7800      	ldrb	r0, [r0, #0]
10001884:	47b8      	blx	r7
        if (flags & FLAGS_LEFT) {
10001886:	b9bd      	cbnz	r5, 100018b8 <_vsnprintf+0x510>
        format++;
10001888:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000188a:	3301      	adds	r3, #1
1000188c:	930d      	str	r3, [sp, #52]	; 0x34
        break;
1000188e:	4654      	mov	r4, sl
10001890:	e595      	b.n	100013be <_vsnprintf+0x16>
            out(' ', buffer, idx++, maxlen);
10001892:	f102 0a01 	add.w	sl, r2, #1
10001896:	4633      	mov	r3, r6
10001898:	4641      	mov	r1, r8
1000189a:	2020      	movs	r0, #32
1000189c:	47b8      	blx	r7
          while (l++ < width) {
1000189e:	464b      	mov	r3, r9
            out(' ', buffer, idx++, maxlen);
100018a0:	4652      	mov	r2, sl
          while (l++ < width) {
100018a2:	f103 0901 	add.w	r9, r3, #1
100018a6:	459b      	cmp	fp, r3
100018a8:	d8f3      	bhi.n	10001892 <_vsnprintf+0x4ea>
100018aa:	4614      	mov	r4, r2
100018ac:	e7e1      	b.n	10001872 <_vsnprintf+0x4ca>
        unsigned int l = 1U;
100018ae:	2301      	movs	r3, #1
100018b0:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
100018b4:	4622      	mov	r2, r4
100018b6:	e7f4      	b.n	100018a2 <_vsnprintf+0x4fa>
100018b8:	4652      	mov	r2, sl
100018ba:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
100018be:	e006      	b.n	100018ce <_vsnprintf+0x526>
            out(' ', buffer, idx++, maxlen);
100018c0:	1c55      	adds	r5, r2, #1
100018c2:	4633      	mov	r3, r6
100018c4:	4641      	mov	r1, r8
100018c6:	2020      	movs	r0, #32
100018c8:	47b8      	blx	r7
          while (l++ < width) {
100018ca:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
100018cc:	462a      	mov	r2, r5
          while (l++ < width) {
100018ce:	f109 0401 	add.w	r4, r9, #1
100018d2:	45ca      	cmp	sl, r9
100018d4:	d8f4      	bhi.n	100018c0 <_vsnprintf+0x518>
100018d6:	4692      	mov	sl, r2
100018d8:	e7d6      	b.n	10001888 <_vsnprintf+0x4e0>
      }

      case 's' : {
        const char* p = va_arg(va, char*);
100018da:	9b18      	ldr	r3, [sp, #96]	; 0x60
100018dc:	1d1a      	adds	r2, r3, #4
100018de:	9218      	str	r2, [sp, #96]	; 0x60
100018e0:	f8d3 a000 	ldr.w	sl, [r3]
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
100018e4:	f1bb 0f00 	cmp.w	fp, #0
100018e8:	d11e      	bne.n	10001928 <_vsnprintf+0x580>
100018ea:	f04f 33ff 	mov.w	r3, #4294967295
100018ee:	46d1      	mov	r9, sl
100018f0:	e002      	b.n	100018f8 <_vsnprintf+0x550>
  for (s = str; *s && maxsize--; ++s);
100018f2:	f109 0901 	add.w	r9, r9, #1
100018f6:	4613      	mov	r3, r2
100018f8:	f899 2000 	ldrb.w	r2, [r9]
100018fc:	b112      	cbz	r2, 10001904 <_vsnprintf+0x55c>
100018fe:	1e5a      	subs	r2, r3, #1
10001900:	2b00      	cmp	r3, #0
10001902:	d1f6      	bne.n	100018f2 <_vsnprintf+0x54a>
  return (unsigned int)(s - str);
10001904:	eba9 090a 	sub.w	r9, r9, sl
        // pre padding
        if (flags & FLAGS_PRECISION) {
10001908:	f415 6380 	ands.w	r3, r5, #1024	; 0x400
1000190c:	930b      	str	r3, [sp, #44]	; 0x2c
1000190e:	d002      	beq.n	10001916 <_vsnprintf+0x56e>
          l = (l < precision ? l : precision);
10001910:	45d9      	cmp	r9, fp
10001912:	bf28      	it	cs
10001914:	46d9      	movcs	r9, fp
        }
        if (!(flags & FLAGS_LEFT)) {
10001916:	f015 0302 	ands.w	r3, r5, #2
1000191a:	930c      	str	r3, [sp, #48]	; 0x30
1000191c:	d006      	beq.n	1000192c <_vsnprintf+0x584>
1000191e:	4622      	mov	r2, r4
10001920:	465c      	mov	r4, fp
10001922:	46b3      	mov	fp, r6
10001924:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
10001926:	e01d      	b.n	10001964 <_vsnprintf+0x5bc>
        unsigned int l = _strnlen_s(p, precision ? precision : (size_t)-1);
10001928:	465b      	mov	r3, fp
1000192a:	e7e0      	b.n	100018ee <_vsnprintf+0x546>
1000192c:	4622      	mov	r2, r4
1000192e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
10001930:	464b      	mov	r3, r9
10001932:	e007      	b.n	10001944 <_vsnprintf+0x59c>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
10001934:	f102 0901 	add.w	r9, r2, #1
10001938:	4633      	mov	r3, r6
1000193a:	4641      	mov	r1, r8
1000193c:	2020      	movs	r0, #32
1000193e:	47b8      	blx	r7
          while (l++ < width) {
10001940:	462b      	mov	r3, r5
            out(' ', buffer, idx++, maxlen);
10001942:	464a      	mov	r2, r9
          while (l++ < width) {
10001944:	1c5d      	adds	r5, r3, #1
10001946:	429c      	cmp	r4, r3
10001948:	d8f4      	bhi.n	10001934 <_vsnprintf+0x58c>
1000194a:	46a9      	mov	r9, r5
1000194c:	465c      	mov	r4, fp
1000194e:	46b3      	mov	fp, r6
10001950:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
10001952:	e007      	b.n	10001964 <_vsnprintf+0x5bc>
          }
        }
        // string output
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001954:	461c      	mov	r4, r3
          out(*(p++), buffer, idx++, maxlen);
10001956:	f10a 0a01 	add.w	sl, sl, #1
1000195a:	1c55      	adds	r5, r2, #1
1000195c:	465b      	mov	r3, fp
1000195e:	4641      	mov	r1, r8
10001960:	47b8      	blx	r7
10001962:	462a      	mov	r2, r5
        while ((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
10001964:	f89a 0000 	ldrb.w	r0, [sl]
10001968:	b120      	cbz	r0, 10001974 <_vsnprintf+0x5cc>
1000196a:	2e00      	cmp	r6, #0
1000196c:	d0f3      	beq.n	10001956 <_vsnprintf+0x5ae>
1000196e:	1e63      	subs	r3, r4, #1
10001970:	2c00      	cmp	r4, #0
10001972:	d1ef      	bne.n	10001954 <_vsnprintf+0x5ac>
        }
        // post padding
        if (flags & FLAGS_LEFT) {
10001974:	4614      	mov	r4, r2
10001976:	465e      	mov	r6, fp
10001978:	9b0c      	ldr	r3, [sp, #48]	; 0x30
1000197a:	b91b      	cbnz	r3, 10001984 <_vsnprintf+0x5dc>
          while (l++ < width) {
            out(' ', buffer, idx++, maxlen);
          }
        }
        format++;
1000197c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
1000197e:	3301      	adds	r3, #1
10001980:	930d      	str	r3, [sp, #52]	; 0x34
        break;
10001982:	e51c      	b.n	100013be <_vsnprintf+0x16>
10001984:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
10001988:	e006      	b.n	10001998 <_vsnprintf+0x5f0>
            out(' ', buffer, idx++, maxlen);
1000198a:	1c55      	adds	r5, r2, #1
1000198c:	4633      	mov	r3, r6
1000198e:	4641      	mov	r1, r8
10001990:	2020      	movs	r0, #32
10001992:	47b8      	blx	r7
          while (l++ < width) {
10001994:	46a1      	mov	r9, r4
            out(' ', buffer, idx++, maxlen);
10001996:	462a      	mov	r2, r5
          while (l++ < width) {
10001998:	f109 0401 	add.w	r4, r9, #1
1000199c:	45ca      	cmp	sl, r9
1000199e:	d8f4      	bhi.n	1000198a <_vsnprintf+0x5e2>
100019a0:	4614      	mov	r4, r2
100019a2:	e7eb      	b.n	1000197c <_vsnprintf+0x5d4>
      }

      case 'p' : {
        width = sizeof(void*) * 2U;
        flags |= FLAGS_ZEROPAD | FLAGS_UPPERCASE;
100019a4:	f045 0521 	orr.w	r5, r5, #33	; 0x21
        if (is_ll) {
          idx = _ntoa_long_long(out, buffer, idx, maxlen, (uintptr_t)va_arg(va, void*), false, 16U, precision, width, flags);
        }
        else {
#endif
          idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)((uintptr_t)va_arg(va, void*)), false, 16U, precision, width, flags);
100019a8:	9b18      	ldr	r3, [sp, #96]	; 0x60
100019aa:	1d1a      	adds	r2, r3, #4
100019ac:	9218      	str	r2, [sp, #96]	; 0x60
100019ae:	681b      	ldr	r3, [r3, #0]
100019b0:	9505      	str	r5, [sp, #20]
100019b2:	2208      	movs	r2, #8
100019b4:	9204      	str	r2, [sp, #16]
100019b6:	f8cd b00c 	str.w	fp, [sp, #12]
100019ba:	2210      	movs	r2, #16
100019bc:	9202      	str	r2, [sp, #8]
100019be:	2200      	movs	r2, #0
100019c0:	9201      	str	r2, [sp, #4]
100019c2:	9300      	str	r3, [sp, #0]
100019c4:	4633      	mov	r3, r6
100019c6:	4622      	mov	r2, r4
100019c8:	4641      	mov	r1, r8
100019ca:	4638      	mov	r0, r7
100019cc:	f7ff f878 	bl	10000ac0 <_ntoa_long>
100019d0:	4604      	mov	r4, r0
#if defined(PRINTF_SUPPORT_LONG_LONG)
        }
#endif
        format++;
100019d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100019d4:	3301      	adds	r3, #1
100019d6:	930d      	str	r3, [sp, #52]	; 0x34
        break;
100019d8:	e4f1      	b.n	100013be <_vsnprintf+0x16>
      }

      case '%' :
        out('%', buffer, idx++, maxlen);
100019da:	1c65      	adds	r5, r4, #1
100019dc:	4633      	mov	r3, r6
100019de:	4622      	mov	r2, r4
100019e0:	4641      	mov	r1, r8
100019e2:	2025      	movs	r0, #37	; 0x25
100019e4:	47b8      	blx	r7
        format++;
100019e6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100019e8:	3301      	adds	r3, #1
100019ea:	930d      	str	r3, [sp, #52]	; 0x34
        out('%', buffer, idx++, maxlen);
100019ec:	462c      	mov	r4, r5
        break;
100019ee:	e4e6      	b.n	100013be <_vsnprintf+0x16>

      default :
        out(*format, buffer, idx++, maxlen);
100019f0:	1c65      	adds	r5, r4, #1
100019f2:	4633      	mov	r3, r6
100019f4:	4622      	mov	r2, r4
100019f6:	4641      	mov	r1, r8
100019f8:	47b8      	blx	r7
        format++;
100019fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
100019fc:	3301      	adds	r3, #1
100019fe:	930d      	str	r3, [sp, #52]	; 0x34
        out(*format, buffer, idx++, maxlen);
10001a00:	462c      	mov	r4, r5
        break;
10001a02:	e4dc      	b.n	100013be <_vsnprintf+0x16>
    out = _out_null;
10001a04:	4f07      	ldr	r7, [pc, #28]	; (10001a24 <_vsnprintf+0x67c>)
10001a06:	e4d9      	b.n	100013bc <_vsnprintf+0x14>
    }
  }

  // termination
  out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
10001a08:	42b4      	cmp	r4, r6
10001a0a:	d301      	bcc.n	10001a10 <_vsnprintf+0x668>
10001a0c:	1e72      	subs	r2, r6, #1
10001a0e:	e000      	b.n	10001a12 <_vsnprintf+0x66a>
10001a10:	4622      	mov	r2, r4
10001a12:	4633      	mov	r3, r6
10001a14:	4641      	mov	r1, r8
10001a16:	2000      	movs	r0, #0
10001a18:	47b8      	blx	r7

  // return written chars without terminating \0
  return (int)idx;
}
10001a1a:	4620      	mov	r0, r4
10001a1c:	b00f      	add	sp, #60	; 0x3c
10001a1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10001a22:	bf00      	nop
10001a24:	100008e5 	andne	r0, r0, r5, ror #17

10001a28 <_out_char>:
  if (character) {
10001a28:	b900      	cbnz	r0, 10001a2c <_out_char+0x4>
10001a2a:	4770      	bx	lr
{
10001a2c:	b508      	push	{r3, lr}
    put_char(character);
10001a2e:	f000 f817 	bl	10001a60 <put_char>
}
10001a32:	bd08      	pop	{r3, pc}

10001a34 <printf>:


///////////////////////////////////////////////////////////////////////////////

int printf(const char* format, ...)
{
10001a34:	b40f      	push	{r0, r1, r2, r3}
10001a36:	b500      	push	{lr}
10001a38:	b085      	sub	sp, #20
10001a3a:	aa06      	add	r2, sp, #24
10001a3c:	f852 3b04 	ldr.w	r3, [r2], #4
  va_list va;
  va_start(va, format);
10001a40:	9203      	str	r2, [sp, #12]
  char buffer[1];
  const int ret = _vsnprintf(_out_char, buffer, (size_t)-1, format, va);
10001a42:	9200      	str	r2, [sp, #0]
10001a44:	f04f 32ff 	mov.w	r2, #4294967295
10001a48:	a902      	add	r1, sp, #8
10001a4a:	4804      	ldr	r0, [pc, #16]	; (10001a5c <printf+0x28>)
10001a4c:	f7ff fcac 	bl	100013a8 <_vsnprintf>
  va_end(va);
  return ret;
}
10001a50:	b005      	add	sp, #20
10001a52:	f85d eb04 	ldr.w	lr, [sp], #4
10001a56:	b004      	add	sp, #16
10001a58:	4770      	bx	lr
10001a5a:	bf00      	nop
10001a5c:	10001a29 	andne	r1, r0, r9, lsr #20

10001a60 <put_char>:
#define UART_MIS(base)          (*((volatile uint32_t *)(base + 0x40)))
#define UART_ICR(base)          (*((volatile uint32_t *)(base + 0x44)))
#define UART_DMACR(base)        (*((volatile uint32_t *)(base + 0x48)))

int put_char(int ch) {
    while (UART_FLAG(UART0) & 0x20);
10001a60:	4b03      	ldr	r3, [pc, #12]	; (10001a70 <put_char+0x10>)
10001a62:	699b      	ldr	r3, [r3, #24]
10001a64:	f013 0f20 	tst.w	r3, #32
10001a68:	d1fa      	bne.n	10001a60 <put_char>
    UART_DATA(UART0) = ch;
10001a6a:	4b01      	ldr	r3, [pc, #4]	; (10001a70 <put_char+0x10>)
10001a6c:	6018      	str	r0, [r3, #0]
    return ch;
}
10001a6e:	4770      	bx	lr
10001a70:	40200000 	eormi	r0, r0, r0

10001a74 <puts>:
int get_char(void) {
    while ((UART_FLAG(UART0) & 0x40) == 0);
    return UART_DATA(UART0);
}

int puts(const char* string) {
10001a74:	b538      	push	{r3, r4, r5, lr}
10001a76:	4605      	mov	r5, r0
    int index = 0;
10001a78:	2400      	movs	r4, #0
    while (string[index] != '\0') {
10001a7a:	e002      	b.n	10001a82 <puts+0xe>
        put_char(string[index]);
10001a7c:	f7ff fff0 	bl	10001a60 <put_char>
        index++;
10001a80:	3401      	adds	r4, #1
    while (string[index] != '\0') {
10001a82:	5d28      	ldrb	r0, [r5, r4]
10001a84:	2800      	cmp	r0, #0
10001a86:	d1f9      	bne.n	10001a7c <puts+0x8>
    }
    put_char('\n');
10001a88:	200a      	movs	r0, #10
10001a8a:	f7ff ffe9 	bl	10001a60 <put_char>
    return index;
}
10001a8e:	4620      	mov	r0, r4
10001a90:	bd38      	pop	{r3, r4, r5, pc}
	...

10001a94 <uart_init>:

void uart_init(void) {
    UART_IBRD(UART0) = 40;
10001a94:	4b07      	ldr	r3, [pc, #28]	; (10001ab4 <uart_init+0x20>)
10001a96:	2228      	movs	r2, #40	; 0x28
10001a98:	625a      	str	r2, [r3, #36]	; 0x24
    UART_FBRD(UART0) = 11;
10001a9a:	220b      	movs	r2, #11
10001a9c:	629a      	str	r2, [r3, #40]	; 0x28
    UART_LCRH(UART0) = 0x60;
10001a9e:	2260      	movs	r2, #96	; 0x60
10001aa0:	62da      	str	r2, [r3, #44]	; 0x2c
    UART_CR(UART0)   = 0x301;
10001aa2:	f240 3201 	movw	r2, #769	; 0x301
10001aa6:	631a      	str	r2, [r3, #48]	; 0x30
    UART_RSR(UART0)  = 0x0A;
10001aa8:	220a      	movs	r2, #10
10001aaa:	605a      	str	r2, [r3, #4]
    UART_CTRL(UART0) = 0x01;
10001aac:	2201      	movs	r2, #1
10001aae:	609a      	str	r2, [r3, #8]
}
10001ab0:	4770      	bx	lr
10001ab2:	bf00      	nop
10001ab4:	40200000 	eormi	r0, r0, r0

10001ab8 <_tx_block_release>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
UINT  _tx_block_release(VOID *block_ptr)
{
10001ab8:	b510      	push	{r4, lr}
10001aba:	4603      	mov	r3, r0
{
UINT posture;
#ifdef TX_PORT_USE_BASEPRI
    __asm__ volatile ("MRS  %0, BASEPRI ": "=r" (posture));
#else
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001abc:	f3ef 8410 	mrs	r4, PRIMASK
    int_posture = __get_interrupt_posture();

#ifdef TX_PORT_USE_BASEPRI
    __set_basepri_value(TX_PORT_BASEPRI);
#else
    __asm__ volatile ("CPSID i" : : : "memory");
10001ac0:	b672      	cpsid	i
    TX_DISABLE

    /* Pickup the pool pointer which is just previous to the starting
       address of the block that the caller sees.  */
    work_ptr =        TX_VOID_TO_UCHAR_POINTER_CONVERT(block_ptr);
    work_ptr =        TX_UCHAR_POINTER_SUB(work_ptr, (sizeof(UCHAR *)));
10001ac2:	1f01      	subs	r1, r0, #4
    next_block_ptr =  TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(work_ptr);
    pool_ptr =        TX_UCHAR_TO_BLOCK_POOL_POINTER_CONVERT((*next_block_ptr));
10001ac4:	f850 2c04 	ldr.w	r2, [r0, #-4]

    /* Log this kernel call.  */
    TX_EL_BLOCK_RELEASE_INSERT

    /* Determine if there are any threads suspended on the block pool.  */
    thread_ptr =  pool_ptr -> tx_block_pool_suspension_list;
10001ac8:	6a10      	ldr	r0, [r2, #32]
    if (thread_ptr != TX_NULL)
10001aca:	b1b0      	cbz	r0, 10001afa <_tx_block_release+0x42>
    {

        /* Remove the suspended thread from the list.  */

        /* Decrement the number of threads suspended.  */
        (pool_ptr -> tx_block_pool_suspended_count)--;
10001acc:	6a51      	ldr	r1, [r2, #36]	; 0x24
10001ace:	3901      	subs	r1, #1
10001ad0:	6251      	str	r1, [r2, #36]	; 0x24

        /* Pickup the suspended count.  */
        suspended_count =  (pool_ptr -> tx_block_pool_suspended_count);

        /* See if this is the only suspended thread on the list.  */
        if (suspended_count == TX_NO_SUSPENSIONS)
10001ad2:	b961      	cbnz	r1, 10001aee <_tx_block_release+0x36>
        {

            /* Yes, the only suspended thread.  */

            /* Update the head pointer.  */
            pool_ptr -> tx_block_pool_suspension_list =  TX_NULL;
10001ad4:	6211      	str	r1, [r2, #32]
        }

        /* Prepare for resumption of the first thread.  */

        /* Clear cleanup routine to avoid timeout.  */
        thread_ptr -> tx_thread_suspend_cleanup =  TX_NULL;
10001ad6:	2200      	movs	r2, #0
10001ad8:	6682      	str	r2, [r0, #104]	; 0x68

        /* Return this block pointer to the suspended thread waiting for
           a block.  */
        return_block_ptr =  TX_VOID_TO_INDIRECT_UCHAR_POINTER_CONVERT(thread_ptr -> tx_thread_additional_suspend_info);
10001ada:	6fc1      	ldr	r1, [r0, #124]	; 0x7c
        work_ptr =          TX_VOID_TO_UCHAR_POINTER_CONVERT(block_ptr);
        *return_block_ptr =  work_ptr;
10001adc:	600b      	str	r3, [r1, #0]

        /* Put return status into the thread control block.  */
        thread_ptr -> tx_thread_suspend_status =  TX_SUCCESS;
10001ade:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84

#ifdef TX_NOT_INTERRUPTABLE

        /* Resume the thread!  */
        _tx_thread_system_ni_resume(thread_ptr);
10001ae2:	f000 fb3b 	bl	1000215c <_tx_thread_system_ni_resume>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001ae6:	f384 8810 	msr	PRIMASK, r4
        TX_RESTORE
    }

    /* Return successful completion status.  */
    return(TX_SUCCESS);
}
10001aea:	2000      	movs	r0, #0
10001aec:	bd10      	pop	{r4, pc}
            next_thread =                                thread_ptr -> tx_thread_suspended_next;
10001aee:	6f01      	ldr	r1, [r0, #112]	; 0x70
            pool_ptr -> tx_block_pool_suspension_list =  next_thread;
10001af0:	6211      	str	r1, [r2, #32]
            previous_thread =                              thread_ptr -> tx_thread_suspended_previous;
10001af2:	6f42      	ldr	r2, [r0, #116]	; 0x74
            next_thread -> tx_thread_suspended_previous =  previous_thread;
10001af4:	674a      	str	r2, [r1, #116]	; 0x74
            previous_thread -> tx_thread_suspended_next =  next_thread;
10001af6:	6711      	str	r1, [r2, #112]	; 0x70
10001af8:	e7ed      	b.n	10001ad6 <_tx_block_release+0x1e>
        *next_block_ptr =  pool_ptr -> tx_block_pool_available_list;
10001afa:	6910      	ldr	r0, [r2, #16]
10001afc:	f843 0c04 	str.w	r0, [r3, #-4]
        pool_ptr -> tx_block_pool_available_list =  work_ptr;
10001b00:	6111      	str	r1, [r2, #16]
        pool_ptr -> tx_block_pool_available++;
10001b02:	6893      	ldr	r3, [r2, #8]
10001b04:	3301      	adds	r3, #1
10001b06:	6093      	str	r3, [r2, #8]
10001b08:	f384 8810 	msr	PRIMASK, r4
}
10001b0c:	e7ed      	b.n	10001aea <_tx_block_release+0x32>
	...

10001b10 <_tx_byte_allocate>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
UINT  _tx_byte_allocate(TX_BYTE_POOL *pool_ptr, VOID **memory_ptr, ULONG memory_size,  ULONG wait_option)
{
10001b10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10001b14:	4604      	mov	r4, r0
10001b16:	4688      	mov	r8, r1
10001b18:	4699      	mov	r9, r3
#endif


    /* Round the memory size up to the next size that is evenly divisible by
       an ALIGN_TYPE (this is typically a 32-bit ULONG).  This guarantees proper alignment.  */
    memory_size = (((memory_size + (sizeof(ALIGN_TYPE)))-((ALIGN_TYPE) 1))/(sizeof(ALIGN_TYPE))) * (sizeof(ALIGN_TYPE));
10001b1a:	3203      	adds	r2, #3
10001b1c:	f022 0703 	bic.w	r7, r2, #3
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001b20:	f3ef 8510 	mrs	r5, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001b24:	b672      	cpsid	i

    /* Disable interrupts.  */
    TX_DISABLE

    /* Pickup thread pointer.  */
    TX_THREAD_GET_CURRENT(thread_ptr)
10001b26:	4b22      	ldr	r3, [pc, #136]	; (10001bb0 <_tx_byte_allocate+0xa0>)
10001b28:	681e      	ldr	r6, [r3, #0]
    /* Loop to handle cases where the owner of the pool changed.  */
    do
    {

        /* Indicate that this thread is the current owner.  */
        pool_ptr -> tx_byte_pool_owner =  thread_ptr;
10001b2a:	6226      	str	r6, [r4, #32]
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001b2c:	f385 8810 	msr	PRIMASK, r5
        /* Restore interrupts.  */
        TX_RESTORE

        /* At this point, the executing thread owns the pool and can perform a search
           for free memory.  */
        work_ptr =  _tx_byte_pool_search(pool_ptr, memory_size);
10001b30:	4639      	mov	r1, r7
10001b32:	4620      	mov	r0, r4
10001b34:	f000 f8a2 	bl	10001c7c <_tx_byte_pool_search>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001b38:	f3ef 8510 	mrs	r5, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001b3c:	b672      	cpsid	i

        /* Lockout interrupts.  */
        TX_DISABLE

        /* Determine if we are finished.  */
        if (work_ptr != TX_NULL)
10001b3e:	b910      	cbnz	r0, 10001b46 <_tx_byte_allocate+0x36>
        }
        else
        {

            /* No block was found, does this thread still own the pool?  */
            if (pool_ptr -> tx_byte_pool_owner == thread_ptr)
10001b40:	6a23      	ldr	r3, [r4, #32]
10001b42:	42b3      	cmp	r3, r6
10001b44:	d1f1      	bne.n	10001b2a <_tx_byte_allocate+0x1a>
        }

    } while (finished == TX_FALSE);

    /* Copy the pointer into the return destination.  */
    *memory_ptr =  (VOID *) work_ptr;
10001b46:	f8c8 0000 	str.w	r0, [r8]

    /* Determine if memory was found.  */
    if (work_ptr != TX_NULL)
10001b4a:	b120      	cbz	r0, 10001b56 <_tx_byte_allocate+0x46>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001b4c:	f385 8810 	msr	PRIMASK, r5

        /* Restore interrupts.  */
        TX_RESTORE

        /* Set the status to success.  */
        status =  TX_SUCCESS;
10001b50:	2000      	movs	r0, #0
        }
    }

    /* Return completion status.  */
    return(status);
}
10001b52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
        if (wait_option != TX_NO_WAIT)
10001b56:	f1b9 0f00 	cmp.w	r9, #0
10001b5a:	d025      	beq.n	10001ba8 <_tx_byte_allocate+0x98>
            if (_tx_thread_preempt_disable != ((UINT) 0))
10001b5c:	4b15      	ldr	r3, [pc, #84]	; (10001bb4 <_tx_byte_allocate+0xa4>)
10001b5e:	681b      	ldr	r3, [r3, #0]
10001b60:	b9bb      	cbnz	r3, 10001b92 <_tx_byte_allocate+0x82>
                thread_ptr -> tx_thread_suspend_cleanup =  &(_tx_byte_pool_cleanup);
10001b62:	4b15      	ldr	r3, [pc, #84]	; (10001bb8 <_tx_byte_allocate+0xa8>)
10001b64:	66b3      	str	r3, [r6, #104]	; 0x68
                thread_ptr -> tx_thread_suspend_control_block =  (VOID *) pool_ptr;
10001b66:	66f4      	str	r4, [r6, #108]	; 0x6c
                thread_ptr -> tx_thread_additional_suspend_info =  (VOID *) memory_ptr;
10001b68:	f8c6 807c 	str.w	r8, [r6, #124]	; 0x7c
                thread_ptr -> tx_thread_suspend_info =  memory_size;
10001b6c:	67b7      	str	r7, [r6, #120]	; 0x78
                suspended_count =  pool_ptr -> tx_byte_pool_suspended_count;
10001b6e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
                (pool_ptr -> tx_byte_pool_suspended_count)++;
10001b70:	1c5a      	adds	r2, r3, #1
10001b72:	62a2      	str	r2, [r4, #40]	; 0x28
                if (suspended_count == TX_NO_SUSPENSIONS)
10001b74:	b98b      	cbnz	r3, 10001b9a <_tx_byte_allocate+0x8a>
                    pool_ptr -> tx_byte_pool_suspension_list =      thread_ptr;
10001b76:	6266      	str	r6, [r4, #36]	; 0x24
                    thread_ptr -> tx_thread_suspended_next =        thread_ptr;
10001b78:	6736      	str	r6, [r6, #112]	; 0x70
                    thread_ptr -> tx_thread_suspended_previous =    thread_ptr;
10001b7a:	6776      	str	r6, [r6, #116]	; 0x74
                thread_ptr -> tx_thread_state =       TX_BYTE_MEMORY;
10001b7c:	2309      	movs	r3, #9
10001b7e:	6333      	str	r3, [r6, #48]	; 0x30
                _tx_thread_system_ni_suspend(thread_ptr, wait_option);
10001b80:	4649      	mov	r1, r9
10001b82:	4630      	mov	r0, r6
10001b84:	f000 fc7e 	bl	10002484 <_tx_thread_system_ni_suspend>
10001b88:	f385 8810 	msr	PRIMASK, r5
                status =  thread_ptr -> tx_thread_suspend_status;
10001b8c:	f8d6 0084 	ldr.w	r0, [r6, #132]	; 0x84
10001b90:	e7df      	b.n	10001b52 <_tx_byte_allocate+0x42>
10001b92:	f385 8810 	msr	PRIMASK, r5
                status =  TX_NO_MEMORY;
10001b96:	2010      	movs	r0, #16
}
10001b98:	e7db      	b.n	10001b52 <_tx_byte_allocate+0x42>
                    next_thread =                                   pool_ptr -> tx_byte_pool_suspension_list;
10001b9a:	6a63      	ldr	r3, [r4, #36]	; 0x24
                    thread_ptr -> tx_thread_suspended_next =        next_thread;
10001b9c:	6733      	str	r3, [r6, #112]	; 0x70
                    previous_thread =                               next_thread -> tx_thread_suspended_previous;
10001b9e:	6f5a      	ldr	r2, [r3, #116]	; 0x74
                    thread_ptr -> tx_thread_suspended_previous =    previous_thread;
10001ba0:	6772      	str	r2, [r6, #116]	; 0x74
                    previous_thread -> tx_thread_suspended_next =   thread_ptr;
10001ba2:	6716      	str	r6, [r2, #112]	; 0x70
                    next_thread -> tx_thread_suspended_previous =   thread_ptr;
10001ba4:	675e      	str	r6, [r3, #116]	; 0x74
10001ba6:	e7e9      	b.n	10001b7c <_tx_byte_allocate+0x6c>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001ba8:	f385 8810 	msr	PRIMASK, r5
            status =  TX_NO_MEMORY;
10001bac:	2010      	movs	r0, #16
    return(status);
10001bae:	e7d0      	b.n	10001b52 <_tx_byte_allocate+0x42>
10001bb0:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
10001bb4:	3800120c 	stmdacc	r0, {r2, r3, r9, ip}
10001bb8:	10001bbd 			; <UNDEFINED> instruction: 0x10001bbd

10001bbc <_tx_byte_pool_cleanup>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID  _tx_byte_pool_cleanup(TX_THREAD *thread_ptr, ULONG suspension_sequence)
{
10001bbc:	b508      	push	{r3, lr}
                    if (pool_ptr -> tx_byte_pool_suspended_count != TX_NO_SUSPENSIONS)
                    {
#else

                        /* Setup pointer to byte pool control block.  */
                        pool_ptr =  TX_VOID_TO_BYTE_POOL_POINTER_CONVERT(thread_ptr -> tx_thread_suspend_control_block);
10001bbe:	6ec2      	ldr	r2, [r0, #108]	; 0x6c
#endif

                        /* Thread suspended for memory... Clear the suspension cleanup flag.  */
                        thread_ptr -> tx_thread_suspend_cleanup =  TX_NULL;
10001bc0:	2300      	movs	r3, #0
10001bc2:	6683      	str	r3, [r0, #104]	; 0x68

                        /* Decrement the suspension count.  */
                        pool_ptr -> tx_byte_pool_suspended_count--;
10001bc4:	6a93      	ldr	r3, [r2, #40]	; 0x28
10001bc6:	3b01      	subs	r3, #1
10001bc8:	6293      	str	r3, [r2, #40]	; 0x28
                        suspended_count =  pool_ptr -> tx_byte_pool_suspended_count;

                        /* Remove the suspended thread from the list.  */

                        /* See if this is the only suspended thread on the list.  */
                        if (suspended_count == TX_NO_SUSPENSIONS)
10001bca:	b923      	cbnz	r3, 10001bd6 <_tx_byte_pool_cleanup+0x1a>
                        {

                            /* Yes, the only suspended thread.  */

                            /* Update the head pointer.  */
                            pool_ptr -> tx_byte_pool_suspension_list =  TX_NULL;
10001bcc:	6253      	str	r3, [r2, #36]	; 0x24
                            }
                        }

                        /* Now we need to determine if this cleanup is from a terminate, timeout,
                           or from a wait abort.  */
                        if (thread_ptr -> tx_thread_state == TX_BYTE_MEMORY)
10001bce:	6b03      	ldr	r3, [r0, #48]	; 0x30
10001bd0:	2b09      	cmp	r3, #9
10001bd2:	d009      	beq.n	10001be8 <_tx_byte_pool_cleanup+0x2c>
    }

    /* Restore interrupts.  */
    TX_RESTORE
#endif
}
10001bd4:	bd08      	pop	{r3, pc}
                            next_thread =                                   thread_ptr -> tx_thread_suspended_next;
10001bd6:	6f03      	ldr	r3, [r0, #112]	; 0x70
                            previous_thread =                               thread_ptr -> tx_thread_suspended_previous;
10001bd8:	6f41      	ldr	r1, [r0, #116]	; 0x74
                            next_thread -> tx_thread_suspended_previous =   previous_thread;
10001bda:	6759      	str	r1, [r3, #116]	; 0x74
                            previous_thread -> tx_thread_suspended_next =   next_thread;
10001bdc:	670b      	str	r3, [r1, #112]	; 0x70
                            if (pool_ptr -> tx_byte_pool_suspension_list == thread_ptr)
10001bde:	6a51      	ldr	r1, [r2, #36]	; 0x24
10001be0:	4281      	cmp	r1, r0
10001be2:	d1f4      	bne.n	10001bce <_tx_byte_pool_cleanup+0x12>
                                pool_ptr -> tx_byte_pool_suspension_list =      next_thread;
10001be4:	6253      	str	r3, [r2, #36]	; 0x24
10001be6:	e7f2      	b.n	10001bce <_tx_byte_pool_cleanup+0x12>
                            thread_ptr -> tx_thread_suspend_status =  TX_NO_MEMORY;
10001be8:	2310      	movs	r3, #16
10001bea:	f8c0 3084 	str.w	r3, [r0, #132]	; 0x84
                            _tx_thread_system_ni_resume(thread_ptr);
10001bee:	f000 fab5 	bl	1000215c <_tx_thread_system_ni_resume>
}
10001bf2:	e7ef      	b.n	10001bd4 <_tx_byte_pool_cleanup+0x18>

10001bf4 <_tx_byte_pool_create>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
UINT  _tx_byte_pool_create(TX_BYTE_POOL *pool_ptr, CHAR *name_ptr, VOID *pool_start, ULONG pool_size)
{
10001bf4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10001bf6:	4604      	mov	r4, r0
10001bf8:	460f      	mov	r7, r1
10001bfa:	4616      	mov	r6, r2
10001bfc:	461d      	mov	r5, r3
TX_BYTE_POOL        *previous_pool;
ALIGN_TYPE          *free_ptr;


    /* Initialize the byte pool control block to all zeros.  */
    TX_MEMSET(pool_ptr, 0, (sizeof(TX_BYTE_POOL)));
10001bfe:	2234      	movs	r2, #52	; 0x34
10001c00:	2100      	movs	r1, #0
10001c02:	f001 fb4d 	bl	100032a0 <memset>

    /* Round the pool size down to something that is evenly divisible by
       an ULONG.  */
    pool_size =   (pool_size/(sizeof(ALIGN_TYPE))) * (sizeof(ALIGN_TYPE));
10001c06:	f025 0303 	bic.w	r3, r5, #3

    /* Setup the basic byte pool fields.  */
    pool_ptr -> tx_byte_pool_name =              name_ptr;
10001c0a:	6067      	str	r7, [r4, #4]

    /* Save the start and size of the pool.  */
    pool_ptr -> tx_byte_pool_start =   TX_VOID_TO_UCHAR_POINTER_CONVERT(pool_start);
10001c0c:	61a6      	str	r6, [r4, #24]
    pool_ptr -> tx_byte_pool_size =    pool_size;
10001c0e:	61e3      	str	r3, [r4, #28]

    /* Setup memory list to the beginning as well as the search pointer.  */
    pool_ptr -> tx_byte_pool_list =    TX_VOID_TO_UCHAR_POINTER_CONVERT(pool_start);
10001c10:	6126      	str	r6, [r4, #16]
    pool_ptr -> tx_byte_pool_search =  TX_VOID_TO_UCHAR_POINTER_CONVERT(pool_start);
10001c12:	6166      	str	r6, [r4, #20]

    /* Initially, the pool will have two blocks.  One large block at the
       beginning that is available and a small allocated block at the end
       of the pool that is there just for the algorithm.  Be sure to count
       the available block's header in the available bytes count.  */
    pool_ptr -> tx_byte_pool_available =   pool_size - ((sizeof(VOID *)) + (sizeof(ALIGN_TYPE)));
10001c14:	f1a3 0208 	sub.w	r2, r3, #8
10001c18:	60a2      	str	r2, [r4, #8]
    pool_ptr -> tx_byte_pool_fragments =   ((UINT) 2);
10001c1a:	2202      	movs	r2, #2
10001c1c:	60e2      	str	r2, [r4, #12]
       field that contains either the constant TX_BYTE_BLOCK_FREE (if the block is free) or a pointer to the
       owning pool (if the block is allocated).  */

    /* Calculate the end of the pool's memory area.  */
    block_ptr =  TX_VOID_TO_UCHAR_POINTER_CONVERT(pool_start);
    block_ptr =  TX_UCHAR_POINTER_ADD(block_ptr, pool_size);
10001c1e:	4433      	add	r3, r6
    block_ptr =  TX_UCHAR_POINTER_SUB(block_ptr, (sizeof(ALIGN_TYPE)));

    /* Cast the pool pointer into a ULONG.  */
    temp_ptr =             TX_BYTE_POOL_TO_UCHAR_POINTER_CONVERT(pool_ptr);
    block_indirect_ptr =   TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(block_ptr);
    *block_indirect_ptr =  temp_ptr;
10001c20:	f843 4c04 	str.w	r4, [r3, #-4]

    block_ptr =            TX_UCHAR_POINTER_SUB(block_ptr, (sizeof(UCHAR *)));
10001c24:	f1a3 0208 	sub.w	r2, r3, #8
    block_indirect_ptr =   TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(block_ptr);
    *block_indirect_ptr =  TX_VOID_TO_UCHAR_POINTER_CONVERT(pool_start);
10001c28:	f843 6c08 	str.w	r6, [r3, #-8]

    /* Now setup the large available block in the pool.  */
    temp_ptr =             TX_VOID_TO_UCHAR_POINTER_CONVERT(pool_start);
    block_indirect_ptr =   TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(temp_ptr);
    *block_indirect_ptr =  block_ptr;
10001c2c:	6032      	str	r2, [r6, #0]
    block_ptr =            TX_VOID_TO_UCHAR_POINTER_CONVERT(pool_start);
    block_ptr =            TX_UCHAR_POINTER_ADD(block_ptr, (sizeof(UCHAR *)));
    free_ptr =             TX_UCHAR_TO_ALIGN_TYPE_POINTER_CONVERT(block_ptr);
    *free_ptr =            TX_BYTE_BLOCK_FREE;
10001c2e:	4b0f      	ldr	r3, [pc, #60]	; (10001c6c <_tx_byte_pool_create+0x78>)
10001c30:	6073      	str	r3, [r6, #4]

    /* Clear the owner id.  */
    pool_ptr -> tx_byte_pool_owner =  TX_NULL;
10001c32:	2300      	movs	r3, #0
10001c34:	6223      	str	r3, [r4, #32]
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001c36:	f3ef 8210 	mrs	r2, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001c3a:	b672      	cpsid	i

    /* Disable interrupts to place the byte pool on the created list.  */
    TX_DISABLE

    /* Setup the byte pool ID to make it valid.  */
    pool_ptr -> tx_byte_pool_id =  TX_BYTE_POOL_ID;
10001c3c:	4b0c      	ldr	r3, [pc, #48]	; (10001c70 <_tx_byte_pool_create+0x7c>)
10001c3e:	6023      	str	r3, [r4, #0]

    /* Place the byte pool on the list of created byte pools.  First,
       check for an empty list.  */
    if (_tx_byte_pool_created_count == TX_EMPTY)
10001c40:	4b0c      	ldr	r3, [pc, #48]	; (10001c74 <_tx_byte_pool_create+0x80>)
10001c42:	681b      	ldr	r3, [r3, #0]
10001c44:	b953      	cbnz	r3, 10001c5c <_tx_byte_pool_create+0x68>
    {

        /* The created byte pool list is empty.  Add byte pool to empty list.  */
        _tx_byte_pool_created_ptr =                  pool_ptr;
10001c46:	490c      	ldr	r1, [pc, #48]	; (10001c78 <_tx_byte_pool_create+0x84>)
10001c48:	600c      	str	r4, [r1, #0]
        pool_ptr -> tx_byte_pool_created_next =      pool_ptr;
10001c4a:	62e4      	str	r4, [r4, #44]	; 0x2c
        pool_ptr -> tx_byte_pool_created_previous =  pool_ptr;
10001c4c:	6324      	str	r4, [r4, #48]	; 0x30
        pool_ptr -> tx_byte_pool_created_previous =  previous_pool;
        pool_ptr -> tx_byte_pool_created_next =      next_pool;
    }

    /* Increment the number of created byte pools.  */
    _tx_byte_pool_created_count++;
10001c4e:	3301      	adds	r3, #1
10001c50:	4908      	ldr	r1, [pc, #32]	; (10001c74 <_tx_byte_pool_create+0x80>)
10001c52:	600b      	str	r3, [r1, #0]
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001c54:	f382 8810 	msr	PRIMASK, r2
    /* Restore interrupts.  */
    TX_RESTORE

    /* Return TX_SUCCESS.  */
    return(TX_SUCCESS);
}
10001c58:	2000      	movs	r0, #0
10001c5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        next_pool =      _tx_byte_pool_created_ptr;
10001c5c:	4906      	ldr	r1, [pc, #24]	; (10001c78 <_tx_byte_pool_create+0x84>)
10001c5e:	6809      	ldr	r1, [r1, #0]
        previous_pool =  next_pool -> tx_byte_pool_created_previous;
10001c60:	6b08      	ldr	r0, [r1, #48]	; 0x30
        next_pool -> tx_byte_pool_created_previous =  pool_ptr;
10001c62:	630c      	str	r4, [r1, #48]	; 0x30
        previous_pool -> tx_byte_pool_created_next =  pool_ptr;
10001c64:	62c4      	str	r4, [r0, #44]	; 0x2c
        pool_ptr -> tx_byte_pool_created_previous =  previous_pool;
10001c66:	6320      	str	r0, [r4, #48]	; 0x30
        pool_ptr -> tx_byte_pool_created_next =      next_pool;
10001c68:	62e1      	str	r1, [r4, #44]	; 0x2c
10001c6a:	e7f0      	b.n	10001c4e <_tx_byte_pool_create+0x5a>
10001c6c:	ffffeeee 			; <UNDEFINED> instruction: 0xffffeeee
10001c70:	42595445 	subsmi	r5, r9, #1157627904	; 0x45000000
10001c74:	3800119c 	stmdacc	r0, {r2, r3, r4, r7, r8, ip}
10001c78:	380011a0 	stmdacc	r0, {r5, r7, r8, ip}

10001c7c <_tx_byte_pool_search>:
/*                                            calculation,                */
/*                                            resulting in version 6.1.7  */
/*                                                                        */
/**************************************************************************/
UCHAR  *_tx_byte_pool_search(TX_BYTE_POOL *pool_ptr, ULONG memory_size)
{
10001c7c:	b5f0      	push	{r4, r5, r6, r7, lr}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001c7e:	f3ef 8c10 	mrs	ip, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001c82:	b672      	cpsid	i
    /* Disable interrupts.  */
    TX_DISABLE

    /* First, determine if there are enough bytes in the pool.  */
    /* Theoretical bytes available = free bytes + ((fragments-2) * overhead of each block) */
    total_theoretical_available = pool_ptr -> tx_byte_pool_available + ((pool_ptr -> tx_byte_pool_fragments - 2) * ((sizeof(UCHAR *)) + (sizeof(ALIGN_TYPE))));
10001c84:	6882      	ldr	r2, [r0, #8]
10001c86:	68c3      	ldr	r3, [r0, #12]
10001c88:	1e9c      	subs	r4, r3, #2
10001c8a:	eb02 02c4 	add.w	r2, r2, r4, lsl #3
    if (memory_size >= total_theoretical_available)
10001c8e:	428a      	cmp	r2, r1
10001c90:	d907      	bls.n	10001ca2 <_tx_byte_pool_search+0x26>
    }
    else
    {

        /* Pickup thread pointer.  */
        TX_THREAD_GET_CURRENT(thread_ptr)
10001c92:	4a32      	ldr	r2, [pc, #200]	; (10001d5c <_tx_byte_pool_search+0xe0>)
10001c94:	6815      	ldr	r5, [r2, #0]

        /* Setup ownership of the byte pool.  */
        pool_ptr -> tx_byte_pool_owner =  thread_ptr;
10001c96:	6205      	str	r5, [r0, #32]

        /* Walk through the memory pool in search for a large enough block.  */
        current_ptr =      pool_ptr -> tx_byte_pool_search;
10001c98:	6942      	ldr	r2, [r0, #20]
        examine_blocks =   pool_ptr -> tx_byte_pool_fragments + ((UINT) 1);
10001c9a:	3301      	adds	r3, #1
UINT            first_free_block_found =  TX_FALSE;
10001c9c:	f04f 0e00 	mov.w	lr, #0
10001ca0:	e02d      	b.n	10001cfe <_tx_byte_pool_search+0x82>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001ca2:	f38c 8810 	msr	PRIMASK, ip
        current_ptr =  TX_NULL;
10001ca6:	2000      	movs	r0, #0
10001ca8:	e04f      	b.n	10001d4a <_tx_byte_pool_search+0xce>
            free_ptr =  TX_UCHAR_TO_ALIGN_TYPE_POINTER_CONVERT(work_ptr);
            if ((*free_ptr) == TX_BYTE_BLOCK_FREE)
            {

                /* Determine if this is the first free block.  */
                if (first_free_block_found == TX_FALSE)
10001caa:	f1be 0f00 	cmp.w	lr, #0
10001cae:	d102      	bne.n	10001cb6 <_tx_byte_pool_search+0x3a>
                {
                    /* This is the first free block.  */
                    pool_ptr->tx_byte_pool_search =  current_ptr;
10001cb0:	6142      	str	r2, [r0, #20]

                    /* Set the flag to indicate we have found the first free
                       block.  */
                    first_free_block_found =  TX_TRUE;
10001cb2:	f04f 0e01 	mov.w	lr, #1

                /* Block is free, see if it is large enough.  */

                /* Pickup the next block's pointer.  */
                this_block_link_ptr =  TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(current_ptr);
                next_ptr =             *this_block_link_ptr;
10001cb6:	6817      	ldr	r7, [r2, #0]

                /* Calculate the number of bytes available in this block.  */
                available_bytes =   TX_UCHAR_POINTER_DIF(next_ptr, current_ptr);
10001cb8:	1abc      	subs	r4, r7, r2
                available_bytes =   available_bytes - ((sizeof(UCHAR *)) + (sizeof(ALIGN_TYPE)));
10001cba:	3c08      	subs	r4, #8

                /* If this is large enough, we are done because our first-fit algorithm
                   has been satisfied!  */
                if (available_bytes >= memory_size)
10001cbc:	42a1      	cmp	r1, r4
10001cbe:	d927      	bls.n	10001d10 <_tx_byte_pool_search+0x94>

                    /* Not enough memory, check to see if the neighbor is
                       free and can be merged.  */
                    work_ptr =  TX_UCHAR_POINTER_ADD(next_ptr, (sizeof(UCHAR *)));
                    free_ptr =  TX_UCHAR_TO_ALIGN_TYPE_POINTER_CONVERT(work_ptr);
                    if ((*free_ptr) == TX_BYTE_BLOCK_FREE)
10001cc0:	4c27      	ldr	r4, [pc, #156]	; (10001d60 <_tx_byte_pool_search+0xe4>)
10001cc2:	687e      	ldr	r6, [r7, #4]
10001cc4:	42a6      	cmp	r6, r4
10001cc6:	d003      	beq.n	10001cd0 <_tx_byte_pool_search+0x54>
                    }
                    else
                    {
                        /* Neighbor is not free so we can skip over it!  */
                        next_block_link_ptr =  TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(next_ptr);
                        current_ptr =  *next_block_link_ptr;
10001cc8:	683a      	ldr	r2, [r7, #0]

                        /* Decrement the examined block count to account for this one.  */
                        if (examine_blocks != ((UINT) 0))
10001cca:	b1eb      	cbz	r3, 10001d08 <_tx_byte_pool_search+0x8c>
                        {
                            examine_blocks--;
10001ccc:	3b01      	subs	r3, #1
10001cce:	e01b      	b.n	10001d08 <_tx_byte_pool_search+0x8c>
                        *this_block_link_ptr =  *next_block_link_ptr;
10001cd0:	683c      	ldr	r4, [r7, #0]
10001cd2:	6014      	str	r4, [r2, #0]
                        pool_ptr -> tx_byte_pool_fragments--;
10001cd4:	68c4      	ldr	r4, [r0, #12]
10001cd6:	3c01      	subs	r4, #1
10001cd8:	60c4      	str	r4, [r0, #12]
                        if (pool_ptr -> tx_byte_pool_search ==  next_ptr)
10001cda:	6944      	ldr	r4, [r0, #20]
10001cdc:	42bc      	cmp	r4, r7
10001cde:	d113      	bne.n	10001d08 <_tx_byte_pool_search+0x8c>
                            pool_ptr -> tx_byte_pool_search =  current_ptr;
10001ce0:	6142      	str	r2, [r0, #20]
10001ce2:	e011      	b.n	10001d08 <_tx_byte_pool_search+0x8c>
10001ce4:	f38c 8810 	msr	PRIMASK, ip
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001ce8:	f3ef 8c10 	mrs	ip, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001cec:	b672      	cpsid	i

            /* Disable interrupts.  */
            TX_DISABLE

            /* Determine if anything has changed in terms of pool ownership.  */
            if (pool_ptr -> tx_byte_pool_owner != thread_ptr)
10001cee:	6a04      	ldr	r4, [r0, #32]
10001cf0:	42ac      	cmp	r4, r5
10001cf2:	d003      	beq.n	10001cfc <_tx_byte_pool_search+0x80>
            {

                /* Pool changed ownership in the brief period interrupts were
                   enabled.  Reset the search.  */
                current_ptr =      pool_ptr -> tx_byte_pool_search;
10001cf4:	6942      	ldr	r2, [r0, #20]
                examine_blocks =   pool_ptr -> tx_byte_pool_fragments + ((UINT) 1);
10001cf6:	68c3      	ldr	r3, [r0, #12]
10001cf8:	3301      	adds	r3, #1

                /* Setup our ownership again.  */
                pool_ptr -> tx_byte_pool_owner =  thread_ptr;
10001cfa:	6205      	str	r5, [r0, #32]
            }
        } while(examine_blocks != ((UINT) 0));
10001cfc:	b14b      	cbz	r3, 10001d12 <_tx_byte_pool_search+0x96>
            if ((*free_ptr) == TX_BYTE_BLOCK_FREE)
10001cfe:	4c18      	ldr	r4, [pc, #96]	; (10001d60 <_tx_byte_pool_search+0xe4>)
10001d00:	6857      	ldr	r7, [r2, #4]
10001d02:	42a7      	cmp	r7, r4
10001d04:	d0d1      	beq.n	10001caa <_tx_byte_pool_search+0x2e>
                current_ptr =  *this_block_link_ptr;
10001d06:	6812      	ldr	r2, [r2, #0]
            if (examine_blocks != ((UINT) 0))
10001d08:	2b00      	cmp	r3, #0
10001d0a:	d0eb      	beq.n	10001ce4 <_tx_byte_pool_search+0x68>
                examine_blocks--;
10001d0c:	3b01      	subs	r3, #1
10001d0e:	e7e9      	b.n	10001ce4 <_tx_byte_pool_search+0x68>
                available_bytes =   available_bytes - ((sizeof(UCHAR *)) + (sizeof(ALIGN_TYPE)));
10001d10:	4623      	mov	r3, r4

        /* Determine if a block was found.  If so, determine if it needs to be
           split.  */
        if (available_bytes != ((ULONG) 0))
10001d12:	b1f3      	cbz	r3, 10001d52 <_tx_byte_pool_search+0xd6>
        {

            /* Determine if we need to split this block.  */
            if ((available_bytes - memory_size) >= ((ULONG) TX_BYTE_BLOCK_MIN))
10001d14:	1a5c      	subs	r4, r3, r1
10001d16:	2c13      	cmp	r4, #19
10001d18:	d90b      	bls.n	10001d32 <_tx_byte_pool_search+0xb6>
            {

                /* Split the block.  */
                next_ptr =  TX_UCHAR_POINTER_ADD(current_ptr, (memory_size + ((sizeof(UCHAR *)) + (sizeof(ALIGN_TYPE)))));
10001d1a:	f101 0308 	add.w	r3, r1, #8
10001d1e:	18d4      	adds	r4, r2, r3

                /* Setup the new free block.  */
                next_block_link_ptr =   TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(next_ptr);
                this_block_link_ptr =   TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(current_ptr);
                *next_block_link_ptr =  *this_block_link_ptr;
10001d20:	6815      	ldr	r5, [r2, #0]
10001d22:	50d5      	str	r5, [r2, r3]
                work_ptr =              TX_UCHAR_POINTER_ADD(next_ptr, (sizeof(UCHAR *)));
                free_ptr =              TX_UCHAR_TO_ALIGN_TYPE_POINTER_CONVERT(work_ptr);
                *free_ptr =             TX_BYTE_BLOCK_FREE;
10001d24:	4b0e      	ldr	r3, [pc, #56]	; (10001d60 <_tx_byte_pool_search+0xe4>)
10001d26:	6063      	str	r3, [r4, #4]

                /* Increase the total fragment counter.  */
                pool_ptr -> tx_byte_pool_fragments++;
10001d28:	68c3      	ldr	r3, [r0, #12]
10001d2a:	3301      	adds	r3, #1
10001d2c:	60c3      	str	r3, [r0, #12]

                /* Update the current pointer to point at the newly created block.  */
                *this_block_link_ptr =  next_ptr;
10001d2e:	6014      	str	r4, [r2, #0]

                /* Set available equal to memory size for subsequent calculation.  */
                available_bytes =  memory_size;
10001d30:	460b      	mov	r3, r1
            }

            /* In any case, mark the current block as allocated.  */
            work_ptr =              TX_UCHAR_POINTER_ADD(current_ptr, (sizeof(UCHAR *)));
            this_block_link_ptr =   TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(work_ptr);
            *this_block_link_ptr =  TX_BYTE_POOL_TO_UCHAR_POINTER_CONVERT(pool_ptr);
10001d32:	6050      	str	r0, [r2, #4]

            /* Reduce the number of available bytes in the pool.  */
            pool_ptr -> tx_byte_pool_available =  (pool_ptr -> tx_byte_pool_available - available_bytes) - ((sizeof(UCHAR *)) + (sizeof(ALIGN_TYPE)));
10001d34:	6881      	ldr	r1, [r0, #8]
10001d36:	1acb      	subs	r3, r1, r3
10001d38:	3b08      	subs	r3, #8
10001d3a:	6083      	str	r3, [r0, #8]

            /* Determine if the search pointer needs to be updated. This is only done
               if the search pointer matches the block to be returned.  */
            if (current_ptr == pool_ptr -> tx_byte_pool_search)
10001d3c:	6943      	ldr	r3, [r0, #20]
10001d3e:	4293      	cmp	r3, r2
10001d40:	d004      	beq.n	10001d4c <_tx_byte_pool_search+0xd0>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001d42:	f38c 8810 	msr	PRIMASK, ip

            /* Restore interrupts.  */
            TX_RESTORE

            /* Adjust the pointer for the application.  */
            current_ptr =  TX_UCHAR_POINTER_ADD(current_ptr, (((sizeof(UCHAR *)) + (sizeof(ALIGN_TYPE)))));
10001d46:	f102 0008 	add.w	r0, r2, #8
        }
    }

    /* Return the search pointer.  */
    return(current_ptr);
}
10001d4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
                pool_ptr -> tx_byte_pool_search =  *this_block_link_ptr;
10001d4c:	6813      	ldr	r3, [r2, #0]
10001d4e:	6143      	str	r3, [r0, #20]
10001d50:	e7f7      	b.n	10001d42 <_tx_byte_pool_search+0xc6>
10001d52:	f38c 8810 	msr	PRIMASK, ip
            current_ptr =  TX_NULL;
10001d56:	2000      	movs	r0, #0
    return(current_ptr);
10001d58:	e7f7      	b.n	10001d4a <_tx_byte_pool_search+0xce>
10001d5a:	bf00      	nop
10001d5c:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
10001d60:	ffffeeee 			; <UNDEFINED> instruction: 0xffffeeee

10001d64 <_tx_initialize_high_level>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID    _tx_initialize_high_level(VOID)
{
10001d64:	b508      	push	{r3, lr}

    /* Initialize the event log, if enabled.  */
    TX_EL_INITIALIZE

    /* Call the thread control initialization function.  */
    _tx_thread_initialize();
10001d66:	f000 f8cd 	bl	10001f04 <_tx_thread_initialize>

#ifndef TX_NO_TIMER

    /* Call the timer control initialization function.  */
    _tx_timer_initialize();
10001d6a:	f000 fdd3 	bl	10002914 <_tx_timer_initialize>
    _tx_byte_pool_initialize();

    /* Call the mutex initialization function.  */
    _tx_mutex_initialize();
#endif
}
10001d6e:	bd08      	pop	{r3, pc}

10001d70 <_tx_initialize_kernel_enter>:
/*                                            initialization,             */
/*                                            resulting in version 6.3.0  */
/*                                                                        */
/**************************************************************************/
VOID  _tx_initialize_kernel_enter(VOID)
{
10001d70:	b510      	push	{r4, lr}

    /* Determine if the compiler has pre-initialized ThreadX.  */
    if (_tx_thread_system_state != TX_INITIALIZE_ALMOST_DONE)
10001d72:	4b0f      	ldr	r3, [pc, #60]	; (10001db0 <_tx_initialize_kernel_enter+0x40>)
10001d74:	681b      	ldr	r3, [r3, #0]
10001d76:	f113 3f0f 	cmn.w	r3, #252645135	; 0xf0f0f0f
10001d7a:	d10c      	bne.n	10001d96 <_tx_initialize_kernel_enter+0x26>
    TX_INITIALIZE_KERNEL_ENTER_EXTENSION

    /* Ensure that the system state variable is set to indicate
       initialization is in progress.  Note that this variable is
       later used to represent interrupt nesting.  */
    _tx_thread_system_state =  TX_INITIALIZE_IN_PROGRESS;
10001d7c:	4c0c      	ldr	r4, [pc, #48]	; (10001db0 <_tx_initialize_kernel_enter+0x40>)
10001d7e:	f04f 33f0 	mov.w	r3, #4042322160	; 0xf0f0f0f0
10001d82:	6023      	str	r3, [r4, #0]
    /* Optional random number generator initialization.  */
    TX_INITIALIZE_RANDOM_GENERATOR_INITIALIZATION

    /* Call the application provided initialization function.  Pass the
       first available memory address to it.  */
    tx_application_define(_tx_initialize_unused_memory);
10001d84:	4b0b      	ldr	r3, [pc, #44]	; (10001db4 <_tx_initialize_kernel_enter+0x44>)
10001d86:	6818      	ldr	r0, [r3, #0]
10001d88:	f7fe fd48 	bl	1000081c <tx_application_define>

    /* Set the system state in preparation for entering the thread
       scheduler.  */
    _tx_thread_system_state =  TX_INITIALIZE_IS_FINISHED;
10001d8c:	2300      	movs	r3, #0
10001d8e:	6023      	str	r3, [r4, #0]
    /* Initialize Execution Profile Kit.  */
    _tx_execution_initialize();
#endif

    /* Enter the scheduling loop to start executing threads!  */
    _tx_thread_schedule();
10001d90:	f001 f99c 	bl	100030cc <_tx_thread_schedule>
#ifdef TX_SAFETY_CRITICAL

    /* If we ever get here, raise safety critical exception.  */
    TX_SAFETY_CRITICAL_EXCEPTION(__FILE__, __LINE__, 0);
#endif
}
10001d94:	bd10      	pop	{r4, pc}
        _tx_thread_system_state =  TX_INITIALIZE_IN_PROGRESS;
10001d96:	4b06      	ldr	r3, [pc, #24]	; (10001db0 <_tx_initialize_kernel_enter+0x40>)
10001d98:	f04f 32f0 	mov.w	r2, #4042322160	; 0xf0f0f0f0
10001d9c:	601a      	str	r2, [r3, #0]
        _tx_initialize_low_level();
10001d9e:	f001 f925 	bl	10002fec <_tx_initialize_low_level>
        _tx_initialize_high_level();
10001da2:	f7ff ffdf 	bl	10001d64 <_tx_initialize_high_level>
        TX_PORT_SPECIFIC_POST_INITIALIZATION
10001da6:	4a04      	ldr	r2, [pc, #16]	; (10001db8 <_tx_initialize_kernel_enter+0x48>)
10001da8:	6813      	ldr	r3, [r2, #0]
10001daa:	3301      	adds	r3, #1
10001dac:	6013      	str	r3, [r2, #0]
10001dae:	e7e5      	b.n	10001d7c <_tx_initialize_kernel_enter+0xc>
10001db0:	38000004 	stmdacc	r0, {r2}
10001db4:	380011a4 	stmdacc	r0, {r2, r5, r7, r8, ip}
10001db8:	3800120c 	stmdacc	r0, {r2, r3, r9, ip}

10001dbc <_tx_thread_create>:
/*                                                                        */
/**************************************************************************/
UINT  _tx_thread_create(TX_THREAD *thread_ptr, CHAR *name_ptr, VOID (*entry_function)(ULONG id), ULONG entry_input,
                            VOID *stack_start, ULONG stack_size, UINT priority, UINT preempt_threshold,
                            ULONG time_slice, UINT auto_start)
{
10001dbc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
10001dc0:	4604      	mov	r4, r0
10001dc2:	468a      	mov	sl, r1
10001dc4:	4691      	mov	r9, r2
10001dc6:	4698      	mov	r8, r3
10001dc8:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
10001dcc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
10001dce:	9f0c      	ldr	r7, [sp, #48]	; 0x30

#ifndef TX_DISABLE_STACK_FILLING
#if defined(TX_ENABLE_RANDOM_NUMBER_STACK_FILLING) && defined(TX_ENABLE_STACK_CHECKING)

    /* Initialize the stack fill value to a 8-bit random value.  */
    thread_ptr -> tx_thread_stack_fill_value = ((ULONG) TX_RAND()) & 0xFFUL;
10001dd0:	f001 fa6e 	bl	100032b0 <rand>
10001dd4:	b2c0      	uxtb	r0, r0
10001dd6:	f8c4 00d4 	str.w	r0, [r4, #212]	; 0xd4

    /* Duplicate the random value in each of the 4 bytes of the stack fill value.  */
    thread_ptr -> tx_thread_stack_fill_value = thread_ptr -> tx_thread_stack_fill_value |
10001dda:	ea40 2100 	orr.w	r1, r0, r0, lsl #8
                    (thread_ptr -> tx_thread_stack_fill_value << 8) |
10001dde:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
                    (thread_ptr -> tx_thread_stack_fill_value << 16) |
10001de2:	ea41 6100 	orr.w	r1, r1, r0, lsl #24
    thread_ptr -> tx_thread_stack_fill_value = thread_ptr -> tx_thread_stack_fill_value |
10001de6:	f8c4 10d4 	str.w	r1, [r4, #212]	; 0xd4
#endif

    /* Set the thread stack to a pattern prior to creating the initial
       stack frame.  This pattern is used by the stack checking routines
       to see how much has been used.  */
    TX_MEMSET(stack_start, ((UCHAR) TX_STACK_FILL), stack_size);
10001dea:	462a      	mov	r2, r5
10001dec:	b2c9      	uxtb	r1, r1
10001dee:	4658      	mov	r0, fp
10001df0:	f001 fa56 	bl	100032a0 <memset>
#ifdef TX_ENABLE_STACK_CHECKING

    /* Ensure that there are two ULONG of 0xEF patterns at the top and
       bottom of the thread's stack. This will be used to check for stack
       overflow conditions during run-time.  */
    stack_size =  ((stack_size/(sizeof(ULONG))) * (sizeof(ULONG))) - (sizeof(ULONG));
10001df4:	f025 0303 	bic.w	r3, r5, #3
10001df8:	1f1e      	subs	r6, r3, #4
#ifdef TX_MISRA_ENABLE
    new_stack_start = TX_POINTER_TO_ULONG_CONVERT(stack_start);
#else
    new_stack_start =  TX_POINTER_TO_ALIGN_TYPE_CONVERT(stack_start);
#endif /* TX_MISRA_ENABLE */
    updated_stack_start =  (((new_stack_start) + ((sizeof(ULONG)) - ((ULONG) 1)) ) & (~((sizeof(ULONG)) - ((ULONG) 1))));
10001dfa:	f10b 0503 	add.w	r5, fp, #3
10001dfe:	f025 0503 	bic.w	r5, r5, #3

    /* Determine if the starting stack address is different.  */
    if (new_stack_start != updated_stack_start)
10001e02:	45ab      	cmp	fp, r5
10001e04:	d001      	beq.n	10001e0a <_tx_thread_create+0x4e>
    {

        /* Yes, subtract another ULONG from the size to avoid going past the stack area.  */
        stack_size =  stack_size - (sizeof(ULONG));
10001e06:	f1a3 0608 	sub.w	r6, r3, #8

    /* Prepare the thread control block prior to placing it on the created
       list.  */

    /* Initialize thread control block to all zeros.  */
    TX_MEMSET(thread_ptr, 0, (sizeof(TX_THREAD)));
10001e0a:	22d8      	movs	r2, #216	; 0xd8
10001e0c:	2100      	movs	r1, #0
10001e0e:	4620      	mov	r0, r4
10001e10:	f001 fa46 	bl	100032a0 <memset>

    /* Place the supplied parameters into the thread's control block.  */
    thread_ptr -> tx_thread_name =              name_ptr;
10001e14:	f8c4 a028 	str.w	sl, [r4, #40]	; 0x28
    thread_ptr -> tx_thread_entry =             entry_function;
10001e18:	f8c4 9044 	str.w	r9, [r4, #68]	; 0x44
    thread_ptr -> tx_thread_entry_parameter =   entry_input;
10001e1c:	f8c4 8048 	str.w	r8, [r4, #72]	; 0x48
    thread_ptr -> tx_thread_stack_start =       stack_start;
10001e20:	60e5      	str	r5, [r4, #12]
    thread_ptr -> tx_thread_stack_size =        stack_size;
10001e22:	6166      	str	r6, [r4, #20]
    thread_ptr -> tx_thread_priority =          priority;
10001e24:	62e7      	str	r7, [r4, #44]	; 0x2c
    thread_ptr -> tx_thread_user_priority =     priority;
10001e26:	f8c4 7090 	str.w	r7, [r4, #144]	; 0x90
    thread_ptr -> tx_thread_time_slice =        time_slice;
10001e2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
10001e2c:	61a3      	str	r3, [r4, #24]
    thread_ptr -> tx_thread_new_time_slice =    time_slice;
10001e2e:	61e3      	str	r3, [r4, #28]
    thread_ptr -> tx_thread_inherit_priority =  ((UINT) TX_MAX_PRIORITIES);
10001e30:	2320      	movs	r3, #32
10001e32:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98

    /* Calculate the end of the thread's stack area.  */
    temp_ptr =  TX_VOID_TO_UCHAR_POINTER_CONVERT(stack_start);
    temp_ptr =  (TX_UCHAR_POINTER_ADD(temp_ptr, (stack_size - ((ULONG) 1))));
10001e36:	3e01      	subs	r6, #1
10001e38:	4435      	add	r5, r6
    thread_ptr -> tx_thread_stack_end =         TX_UCHAR_TO_VOID_POINTER_CONVERT(temp_ptr);
10001e3a:	6125      	str	r5, [r4, #16]
    thread_ptr -> tx_thread_preempt_threshold =       preempt_threshold;
    thread_ptr -> tx_thread_user_preempt_threshold =  preempt_threshold;
#else

    /* Preemption-threshold is disabled, determine if preemption-threshold was required.  */
    if (priority != preempt_threshold)
10001e3c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
10001e3e:	429f      	cmp	r7, r3
10001e40:	d024      	beq.n	10001e8c <_tx_thread_create+0xd0>
        thread_ptr -> tx_thread_user_preempt_threshold =  priority;
    }
#endif

    /* Now fill in the values that are required for thread initialization.  */
    thread_ptr -> tx_thread_state =  TX_SUSPENDED;
10001e42:	2303      	movs	r3, #3
10001e44:	6323      	str	r3, [r4, #48]	; 0x30

    /* Setup the necessary fields in the thread timer block.  */
    TX_THREAD_CREATE_TIMEOUT_SETUP(thread_ptr)
10001e46:	4b28      	ldr	r3, [pc, #160]	; (10001ee8 <_tx_thread_create+0x12c>)
10001e48:	6563      	str	r3, [r4, #84]	; 0x54
10001e4a:	65a4      	str	r4, [r4, #88]	; 0x58
    TX_THREAD_CREATE_INTERNAL_EXTENSION(thread_ptr)

    /* Call the target specific stack frame building routine to build the
       thread's initial stack and to setup the actual stack pointer in the
       control block.  */
    _tx_thread_stack_build(thread_ptr, _tx_thread_shell_entry);
10001e4c:	4927      	ldr	r1, [pc, #156]	; (10001eec <_tx_thread_create+0x130>)
10001e4e:	4620      	mov	r0, r4
10001e50:	f001 f9a4 	bl	1000319c <_tx_thread_stack_build>

#ifdef TX_ENABLE_STACK_CHECKING

    /* Setup the highest usage stack pointer.  */
    thread_ptr -> tx_thread_stack_highest_ptr =  thread_ptr -> tx_thread_stack_ptr;
10001e54:	68a3      	ldr	r3, [r4, #8]
10001e56:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001e5a:	f3ef 8510 	mrs	r5, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001e5e:	b672      	cpsid	i

    /* Prepare to make this thread a member of the created thread list.  */
    TX_DISABLE

    /* Load the thread ID field in the thread control block.  */
    thread_ptr -> tx_thread_id =  TX_THREAD_ID;
10001e60:	4b23      	ldr	r3, [pc, #140]	; (10001ef0 <_tx_thread_create+0x134>)
10001e62:	6023      	str	r3, [r4, #0]

    /* Place the thread on the list of created threads.  First,
       check for an empty list.  */
    if (_tx_thread_created_count == TX_EMPTY)
10001e64:	4b23      	ldr	r3, [pc, #140]	; (10001ef4 <_tx_thread_create+0x138>)
10001e66:	681b      	ldr	r3, [r3, #0]
10001e68:	b9a3      	cbnz	r3, 10001e94 <_tx_thread_create+0xd8>
    {

        /* The created thread list is empty.  Add thread to empty list.  */
        _tx_thread_created_ptr =                    thread_ptr;
10001e6a:	4a23      	ldr	r2, [pc, #140]	; (10001ef8 <_tx_thread_create+0x13c>)
10001e6c:	6014      	str	r4, [r2, #0]
        thread_ptr -> tx_thread_created_next =      thread_ptr;
10001e6e:	f8c4 4088 	str.w	r4, [r4, #136]	; 0x88
        thread_ptr -> tx_thread_created_previous =  thread_ptr;
10001e72:	f8c4 408c 	str.w	r4, [r4, #140]	; 0x8c
        thread_ptr -> tx_thread_created_previous =  previous_thread;
        thread_ptr -> tx_thread_created_next =      next_thread;
    }

    /* Increment the thread created count.  */
    _tx_thread_created_count++;
10001e76:	3301      	adds	r3, #1
10001e78:	4a1e      	ldr	r2, [pc, #120]	; (10001ef4 <_tx_thread_create+0x138>)
10001e7a:	6013      	str	r3, [r2, #0]
    _tx_thread_preempt_disable++;
#endif

    /* Determine if an automatic start was requested.  If so, call the resume
       thread function and then check for a preemption condition.  */
    if (auto_start == TX_AUTO_START)
10001e7c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10001e7e:	2b01      	cmp	r3, #1
10001e80:	d015      	beq.n	10001eae <_tx_thread_create+0xf2>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001e82:	f385 8810 	msr	PRIMASK, r5
#endif
    }

    /* Always return a success.  */
    return(TX_SUCCESS);
}
10001e86:	2000      	movs	r0, #0
10001e88:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
        thread_ptr -> tx_thread_preempt_threshold =       priority;
10001e8c:	63e7      	str	r7, [r4, #60]	; 0x3c
        thread_ptr -> tx_thread_user_preempt_threshold =  priority;
10001e8e:	f8c4 7094 	str.w	r7, [r4, #148]	; 0x94
10001e92:	e7d6      	b.n	10001e42 <_tx_thread_create+0x86>
        next_thread =  _tx_thread_created_ptr;
10001e94:	4a18      	ldr	r2, [pc, #96]	; (10001ef8 <_tx_thread_create+0x13c>)
10001e96:	6812      	ldr	r2, [r2, #0]
        previous_thread =  next_thread -> tx_thread_created_previous;
10001e98:	f8d2 108c 	ldr.w	r1, [r2, #140]	; 0x8c
        next_thread -> tx_thread_created_previous =  thread_ptr;
10001e9c:	f8c2 408c 	str.w	r4, [r2, #140]	; 0x8c
        previous_thread -> tx_thread_created_next =  thread_ptr;
10001ea0:	f8c1 4088 	str.w	r4, [r1, #136]	; 0x88
        thread_ptr -> tx_thread_created_previous =  previous_thread;
10001ea4:	f8c4 108c 	str.w	r1, [r4, #140]	; 0x8c
        thread_ptr -> tx_thread_created_next =      next_thread;
10001ea8:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
10001eac:	e7e3      	b.n	10001e76 <_tx_thread_create+0xba>
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10001eae:	f3ef 8205 	mrs	r2, IPSR
        if (TX_THREAD_GET_SYSTEM_STATE() >= TX_INITIALIZE_IN_PROGRESS)
10001eb2:	4b12      	ldr	r3, [pc, #72]	; (10001efc <_tx_thread_create+0x140>)
10001eb4:	681b      	ldr	r3, [r3, #0]
10001eb6:	4313      	orrs	r3, r2
10001eb8:	f1b3 3ff0 	cmp.w	r3, #4042322160	; 0xf0f0f0f0
10001ebc:	d306      	bcc.n	10001ecc <_tx_thread_create+0x110>
            saved_thread_ptr =  _tx_thread_execute_ptr;
10001ebe:	4b10      	ldr	r3, [pc, #64]	; (10001f00 <_tx_thread_create+0x144>)
10001ec0:	681e      	ldr	r6, [r3, #0]
            if (saved_thread_ptr != TX_NULL)
10001ec2:	b176      	cbz	r6, 10001ee2 <_tx_thread_create+0x126>
                saved_threshold =  saved_thread_ptr -> tx_thread_preempt_threshold;
10001ec4:	6bf7      	ldr	r7, [r6, #60]	; 0x3c
                saved_thread_ptr -> tx_thread_preempt_threshold =  saved_thread_ptr -> tx_thread_priority;
10001ec6:	6af3      	ldr	r3, [r6, #44]	; 0x2c
10001ec8:	63f3      	str	r3, [r6, #60]	; 0x3c
10001eca:	e001      	b.n	10001ed0 <_tx_thread_create+0x114>
UINT                    saved_threshold =  ((UINT) 0);
10001ecc:	2700      	movs	r7, #0
            saved_thread_ptr =  TX_NULL;
10001ece:	463e      	mov	r6, r7
        _tx_thread_system_ni_resume(thread_ptr);
10001ed0:	4620      	mov	r0, r4
10001ed2:	f000 f943 	bl	1000215c <_tx_thread_system_ni_resume>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001ed6:	f385 8810 	msr	PRIMASK, r5
        if (saved_thread_ptr != TX_NULL)
10001eda:	2e00      	cmp	r6, #0
10001edc:	d0d3      	beq.n	10001e86 <_tx_thread_create+0xca>
            saved_thread_ptr -> tx_thread_preempt_threshold =  saved_threshold;
10001ede:	63f7      	str	r7, [r6, #60]	; 0x3c
10001ee0:	e7d1      	b.n	10001e86 <_tx_thread_create+0xca>
UINT                    saved_threshold =  ((UINT) 0);
10001ee2:	2700      	movs	r7, #0
10001ee4:	e7f4      	b.n	10001ed0 <_tx_thread_create+0x114>
10001ee6:	bf00      	nop
10001ee8:	100028c1 	andne	r2, r0, r1, asr #17
10001eec:	10001f25 	andne	r1, r0, r5, lsr #30
10001ef0:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc
10001ef4:	380011b0 	stmdacc	r0, {r4, r5, r7, r8, ip}
10001ef8:	380011b4 	stmdacc	r0, {r2, r4, r5, r7, r8, ip}
10001efc:	38000004 	stmdacc	r0, {r2}
10001f00:	380011bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, ip}

10001f04 <_tx_thread_initialize>:
#endif
#endif

    /* Setup the highest priority variable to the max, indicating no thread is currently
       ready.  */
    _tx_thread_highest_priority =  ((UINT) TX_MAX_PRIORITIES);
10001f04:	4b04      	ldr	r3, [pc, #16]	; (10001f18 <_tx_thread_initialize+0x14>)
10001f06:	2220      	movs	r2, #32
10001f08:	601a      	str	r2, [r3, #0]
#endif
#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO
                            | (((ULONG) 1) << 10)
#endif
#ifdef TX_TIMER_ENABLE_PERFORMANCE_INFO
                            | (((ULONG) 1) << 9)
10001f0a:	4a04      	ldr	r2, [pc, #16]	; (10001f1c <_tx_thread_initialize+0x18>)
10001f0c:	6811      	ldr	r1, [r2, #0]
10001f0e:	4b04      	ldr	r3, [pc, #16]	; (10001f20 <_tx_thread_initialize+0x1c>)
10001f10:	430b      	orrs	r3, r1
    _tx_build_options =  _tx_build_options 
10001f12:	6013      	str	r3, [r2, #0]
#endif
#if TX_PORT_SPECIFIC_BUILD_OPTIONS != 0
                            | TX_PORT_SPECIFIC_BUILD_OPTIONS
#endif
                            ;
}
10001f14:	4770      	bx	lr
10001f16:	bf00      	nop
10001f18:	380011c0 	stmdacc	r0, {r6, r7, r8, ip}
10001f1c:	380011a8 	stmdacc	r0, {r3, r5, r7, r8, ip}
10001f20:	c15e0e00 	cmpgt	lr, r0, lsl #28

10001f24 <_tx_thread_shell_entry>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID  _tx_thread_shell_entry(VOID)
{
10001f24:	b538      	push	{r3, r4, r5, lr}
VOID            (*entry_exit_notify)(TX_THREAD *notify_thread_ptr, UINT type);
#endif


    /* Pickup thread pointer.  */
    TX_THREAD_GET_CURRENT(thread_ptr)
10001f26:	4b0e      	ldr	r3, [pc, #56]	; (10001f60 <_tx_thread_shell_entry+0x3c>)
10001f28:	681c      	ldr	r4, [r3, #0]
        (entry_exit_notify)(thread_ptr, TX_THREAD_ENTRY);
    }
#endif

    /* Call current thread's entry function.  */
    (thread_ptr -> tx_thread_entry) (thread_ptr -> tx_thread_entry_parameter);
10001f2a:	6c63      	ldr	r3, [r4, #68]	; 0x44
10001f2c:	6ca0      	ldr	r0, [r4, #72]	; 0x48
10001f2e:	4798      	blx	r3

    /* Suspend thread with a "completed" state.  */

    /* Determine if the application is using mutexes.  */
    if (_tx_thread_mutex_release != TX_NULL)
10001f30:	4b0c      	ldr	r3, [pc, #48]	; (10001f64 <_tx_thread_shell_entry+0x40>)
10001f32:	681b      	ldr	r3, [r3, #0]
10001f34:	b10b      	cbz	r3, 10001f3a <_tx_thread_shell_entry+0x16>
    {

        /* Yes, call the mutex release function via a function pointer that
           is setup during mutex initialization.  */
        (_tx_thread_mutex_release)(thread_ptr);
10001f36:	4620      	mov	r0, r4
10001f38:	4798      	blx	r3
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001f3a:	f3ef 8510 	mrs	r5, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001f3e:	b672      	cpsid	i
    entry_exit_notify =  thread_ptr -> tx_thread_entry_exit_notify;
#endif

    /* Set the status to suspending, in order to indicate the suspension
       is in progress.  */
    thread_ptr -> tx_thread_state =  TX_COMPLETED;
10001f40:	2301      	movs	r3, #1
10001f42:	6323      	str	r3, [r4, #48]	; 0x30
    __asm__ volatile (" MRS  %0,CONTROL ": "=r" (control_value) );
10001f44:	f3ef 8314 	mrs	r3, CONTROL
        (entry_exit_notify)(thread_ptr, TX_THREAD_EXIT);
    }
#endif

    /* Perform any additional activities for tool or user purpose.  */
    TX_THREAD_COMPLETED_EXTENSION(thread_ptr)
10001f48:	f023 0304 	bic.w	r3, r3, #4
    __asm__ volatile (" MSR  CONTROL,%0": : "r" (control_value): "memory" );
10001f4c:	f383 8814 	msr	CONTROL, r3

    /* Call actual non-interruptable thread suspension routine.  */
    _tx_thread_system_ni_suspend(thread_ptr, ((ULONG) 0));
10001f50:	2100      	movs	r1, #0
10001f52:	4620      	mov	r0, r4
10001f54:	f000 fa96 	bl	10002484 <_tx_thread_system_ni_suspend>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001f58:	f385 8810 	msr	PRIMASK, r5
#ifdef TX_SAFETY_CRITICAL

    /* If we ever get here, raise safety critical exception.  */
    TX_SAFETY_CRITICAL_EXCEPTION(__FILE__, __LINE__, 0);
#endif
}
10001f5c:	bd38      	pop	{r3, r4, r5, pc}
10001f5e:	bf00      	nop
10001f60:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
10001f64:	380011c4 	stmdacc	r0, {r2, r6, r7, r8, ip}

10001f68 <_tx_thread_sleep>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
UINT  _tx_thread_sleep(ULONG timer_ticks)
{
10001f68:	b538      	push	{r3, r4, r5, lr}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001f6a:	f3ef 8510 	mrs	r5, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001f6e:	b672      	cpsid	i

    /* Lockout interrupts while the thread is being resumed.  */
    TX_DISABLE

    /* Pickup thread pointer.  */
    TX_THREAD_GET_CURRENT(thread_ptr)
10001f70:	4b16      	ldr	r3, [pc, #88]	; (10001fcc <_tx_thread_sleep+0x64>)
10001f72:	681c      	ldr	r4, [r3, #0]

    /* Determine if this is a legal request.  */

    /* Is there a current thread?  */
    if (thread_ptr == TX_NULL)
10001f74:	b164      	cbz	r4, 10001f90 <_tx_thread_sleep+0x28>
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10001f76:	f3ef 8305 	mrs	r3, IPSR
        /* Illegal caller of this service.  */
        status =  TX_CALLER_ERROR;
    }

    /* Is the caller an ISR or Initialization?  */
    else if (TX_THREAD_GET_SYSTEM_STATE() != ((ULONG) 0))
10001f7a:	4a15      	ldr	r2, [pc, #84]	; (10001fd0 <_tx_thread_sleep+0x68>)
10001f7c:	6812      	ldr	r2, [r2, #0]
10001f7e:	4313      	orrs	r3, r2
10001f80:	d10a      	bne.n	10001f98 <_tx_thread_sleep+0x30>
    }

#ifndef TX_TIMER_PROCESS_IN_ISR

    /* Is the caller the system timer thread?  */
    else if (thread_ptr == &_tx_timer_thread)
10001f82:	4b14      	ldr	r3, [pc, #80]	; (10001fd4 <_tx_thread_sleep+0x6c>)
10001f84:	429c      	cmp	r4, r3
10001f86:	d00b      	beq.n	10001fa0 <_tx_thread_sleep+0x38>
        status =  TX_CALLER_ERROR;
    }
#endif

    /* Determine if the requested number of ticks is zero.  */
    else if (timer_ticks == ((ULONG) 0))
10001f88:	b970      	cbnz	r0, 10001fa8 <_tx_thread_sleep+0x40>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001f8a:	f385 8810 	msr	PRIMASK, r5

        /* Restore interrupts.  */
        TX_RESTORE

        /* Just return with a successful status.  */
        status =  TX_SUCCESS;
10001f8e:	e006      	b.n	10001f9e <_tx_thread_sleep+0x36>
10001f90:	f385 8810 	msr	PRIMASK, r5
        status =  TX_CALLER_ERROR;
10001f94:	2013      	movs	r0, #19
10001f96:	e002      	b.n	10001f9e <_tx_thread_sleep+0x36>
10001f98:	f385 8810 	msr	PRIMASK, r5
        status =  TX_CALLER_ERROR;
10001f9c:	2013      	movs	r0, #19
        }
    }

    /* Return completion status.  */
    return(status);
}
10001f9e:	bd38      	pop	{r3, r4, r5, pc}
10001fa0:	f385 8810 	msr	PRIMASK, r5
        status =  TX_CALLER_ERROR;
10001fa4:	2013      	movs	r0, #19
10001fa6:	e7fa      	b.n	10001f9e <_tx_thread_sleep+0x36>
        if (_tx_thread_preempt_disable != ((UINT) 0))
10001fa8:	4b0b      	ldr	r3, [pc, #44]	; (10001fd8 <_tx_thread_sleep+0x70>)
10001faa:	681b      	ldr	r3, [r3, #0]
10001fac:	b11b      	cbz	r3, 10001fb6 <_tx_thread_sleep+0x4e>
10001fae:	f385 8810 	msr	PRIMASK, r5
            status =  TX_CALLER_ERROR;
10001fb2:	2013      	movs	r0, #19
10001fb4:	e7f3      	b.n	10001f9e <_tx_thread_sleep+0x36>
            thread_ptr -> tx_thread_state =    TX_SLEEP;
10001fb6:	2304      	movs	r3, #4
10001fb8:	6323      	str	r3, [r4, #48]	; 0x30
            _tx_thread_system_ni_suspend(thread_ptr, timer_ticks);
10001fba:	4601      	mov	r1, r0
10001fbc:	4620      	mov	r0, r4
10001fbe:	f000 fa61 	bl	10002484 <_tx_thread_system_ni_suspend>
10001fc2:	f385 8810 	msr	PRIMASK, r5
            status =  thread_ptr -> tx_thread_suspend_status;
10001fc6:	f8d4 0084 	ldr.w	r0, [r4, #132]	; 0x84
    return(status);
10001fca:	e7e8      	b.n	10001f9e <_tx_thread_sleep+0x36>
10001fcc:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
10001fd0:	38000004 	stmdacc	r0, {r2}
10001fd4:	3800134c 	stmdacc	r0, {r2, r3, r6, r8, r9, ip}
10001fd8:	3800120c 	stmdacc	r0, {r2, r3, r9, ip}

10001fdc <_tx_thread_stack_analyze>:
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10001fdc:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10001fe0:	b672      	cpsid	i

    /* Disable interrupts.  */
    TX_DISABLE

    /* Determine if the thread pointer is NULL.  */
    if (thread_ptr != TX_NULL)
10001fe2:	b118      	cbz	r0, 10001fec <_tx_thread_stack_analyze+0x10>
    {

        /* Determine if the thread ID is invalid.  */
        if (thread_ptr -> tx_thread_id == TX_THREAD_ID)
10001fe4:	6801      	ldr	r1, [r0, #0]
10001fe6:	4a1f      	ldr	r2, [pc, #124]	; (10002064 <_tx_thread_stack_analyze+0x88>)
10001fe8:	4291      	cmp	r1, r2
10001fea:	d002      	beq.n	10001ff2 <_tx_thread_stack_analyze+0x16>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10001fec:	f383 8810 	msr	PRIMASK, r3
10001ff0:	4770      	bx	lr
        {

            /* Pickup the current stack variables.  */
            stack_lowest =   TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_stack_start);
10001ff2:	68c1      	ldr	r1, [r0, #12]

            /* Determine if the pointer is null.  */
            if (stack_lowest != TX_NULL)
10001ff4:	2900      	cmp	r1, #0
10001ff6:	d0f9      	beq.n	10001fec <_tx_thread_stack_analyze+0x10>
{
10001ff8:	b470      	push	{r4, r5, r6}
            {

                /* Pickup the highest stack pointer.  */
                stack_highest =  TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_stack_highest_ptr);
10001ffa:	f8d0 60cc 	ldr.w	r6, [r0, #204]	; 0xcc

                /* Determine if the pointer is null.  */
                if (stack_highest != TX_NULL)
10001ffe:	b1ee      	cbz	r6, 1000203c <_tx_thread_stack_analyze+0x60>
10002000:	f383 8810 	msr	PRIMASK, r3
}
10002004:	e002      	b.n	1000200c <_tx_thread_stack_analyze+0x30>
                        }
                        else
                        {

                            /* Update the stack lowest, since we need to look in the lower half now.  */
                            stack_lowest =  stack_ptr;
10002006:	4611      	mov	r1, r2
                        }

                    } while(size > ((ULONG) 1));
10002008:	2b03      	cmp	r3, #3
1000200a:	d90d      	bls.n	10002028 <_tx_thread_stack_analyze+0x4c>
                        size =  (ULONG) (TX_ULONG_POINTER_DIF(stack_highest, stack_lowest))/((ULONG) 2);
1000200c:	1a73      	subs	r3, r6, r1
1000200e:	109b      	asrs	r3, r3, #2
10002010:	085c      	lsrs	r4, r3, #1
                        stack_ptr =  TX_ULONG_POINTER_ADD(stack_lowest, size);
10002012:	eb01 0284 	add.w	r2, r1, r4, lsl #2
                        if (*stack_ptr != TX_STACK_FILL)
10002016:	f851 5024 	ldr.w	r5, [r1, r4, lsl #2]
1000201a:	f8d0 40d4 	ldr.w	r4, [r0, #212]	; 0xd4
1000201e:	42a5      	cmp	r5, r4
10002020:	d0f1      	beq.n	10002006 <_tx_thread_stack_analyze+0x2a>
                            stack_highest =  stack_ptr;
10002022:	4616      	mov	r6, r2
10002024:	e7f0      	b.n	10002008 <_tx_thread_stack_analyze+0x2c>
                    /* Position to first used word - at this point we are within a few words.  */
                    while (*stack_ptr == TX_STACK_FILL)
                    {

                        /* Position to next word in stack.  */
                        stack_ptr =  TX_ULONG_POINTER_ADD(stack_ptr, 1);
10002026:	3204      	adds	r2, #4
                    while (*stack_ptr == TX_STACK_FILL)
10002028:	6813      	ldr	r3, [r2, #0]
1000202a:	429c      	cmp	r4, r3
1000202c:	d0fb      	beq.n	10002026 <_tx_thread_stack_analyze+0x4a>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000202e:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002032:	b672      	cpsid	i

                    /* Disable interrupts.  */
                    TX_DISABLE

                    /* Check to see if the thread is still created.  */
                    if (thread_ptr -> tx_thread_id == TX_THREAD_ID)
10002034:	6804      	ldr	r4, [r0, #0]
10002036:	490b      	ldr	r1, [pc, #44]	; (10002064 <_tx_thread_stack_analyze+0x88>)
10002038:	428c      	cmp	r4, r1
1000203a:	d003      	beq.n	10002044 <_tx_thread_stack_analyze+0x68>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000203c:	f383 8810 	msr	PRIMASK, r3
        }
    }

    /* Restore interrupts.  */
    TX_RESTORE
}
10002040:	bc70      	pop	{r4, r5, r6}
10002042:	4770      	bx	lr
                        if (stack_ptr > (TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_stack_start)))
10002044:	68c1      	ldr	r1, [r0, #12]
10002046:	4291      	cmp	r1, r2
10002048:	d2f8      	bcs.n	1000203c <_tx_thread_stack_analyze+0x60>
                            if (stack_ptr < (TX_VOID_TO_ULONG_POINTER_CONVERT(thread_ptr -> tx_thread_stack_highest_ptr)))
1000204a:	f8d0 10cc 	ldr.w	r1, [r0, #204]	; 0xcc
1000204e:	4291      	cmp	r1, r2
10002050:	d9f4      	bls.n	1000203c <_tx_thread_stack_analyze+0x60>
                                if (*stack_ptr != TX_STACK_FILL)
10002052:	6814      	ldr	r4, [r2, #0]
10002054:	f8d0 10d4 	ldr.w	r1, [r0, #212]	; 0xd4
10002058:	428c      	cmp	r4, r1
1000205a:	d0ef      	beq.n	1000203c <_tx_thread_stack_analyze+0x60>
                                    thread_ptr -> tx_thread_stack_highest_ptr =  stack_ptr;
1000205c:	f8c0 20cc 	str.w	r2, [r0, #204]	; 0xcc
10002060:	e7ec      	b.n	1000203c <_tx_thread_stack_analyze+0x60>
10002062:	bf00      	nop
10002064:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc

10002068 <_tx_thread_stack_error_handler>:
/*                                            stack check error handling, */
/*                                            resulting in version 6.1.9  */
/*                                                                        */
/**************************************************************************/
VOID  _tx_thread_stack_error_handler(TX_THREAD *thread_ptr)
{
10002068:	b510      	push	{r4, lr}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000206a:	f3ef 8410 	mrs	r4, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000206e:	b672      	cpsid	i

    /* Disable interrupts.  */
    TX_DISABLE

    /* Determine if the application has registered an error handler.  */
    if (_tx_thread_application_stack_error_handler != TX_NULL)
10002070:	4b03      	ldr	r3, [pc, #12]	; (10002080 <_tx_thread_stack_error_handler+0x18>)
10002072:	681b      	ldr	r3, [r3, #0]
10002074:	b103      	cbz	r3, 10002078 <_tx_thread_stack_error_handler+0x10>
    {

        /* Yes, an error handler is present, simply call the application error handler.  */
        (_tx_thread_application_stack_error_handler)(thread_ptr);
10002076:	4798      	blx	r3
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002078:	f384 8810 	msr	PRIMASK, r4

        /* Restore interrupts.  */
        TX_RESTORE
    }
#endif
}
1000207c:	bd10      	pop	{r4, pc}
1000207e:	bf00      	nop
10002080:	380011ac 	stmdacc	r0, {r2, r3, r5, r7, r8, ip}

10002084 <_tx_thread_system_preempt_check>:
TX_THREAD       *current_thread;
TX_THREAD       *thread_ptr;


    /* Combine the system state and preempt disable flags into one for comparison.  */
    TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
10002084:	4b2f      	ldr	r3, [pc, #188]	; (10002144 <_tx_thread_system_preempt_check+0xc0>)
10002086:	681b      	ldr	r3, [r3, #0]

    /* Determine if we are in a system state (ISR or Initialization) or internal preemption is disabled.  */
    if (combined_flags == ((ULONG) 0))
10002088:	2b00      	cmp	r3, #0
1000208a:	d15a      	bne.n	10002142 <_tx_thread_system_preempt_check+0xbe>
{
1000208c:	b510      	push	{r4, lr}
    {

        /* No, at thread execution level so continue checking for preemption.  */

        /* Pickup thread pointer.  */
        TX_THREAD_GET_CURRENT(current_thread)
1000208e:	4b2e      	ldr	r3, [pc, #184]	; (10002148 <_tx_thread_system_preempt_check+0xc4>)
10002090:	681b      	ldr	r3, [r3, #0]

        /* Pickup the next execute pointer.  */
        thread_ptr =  _tx_thread_execute_ptr;
10002092:	4a2e      	ldr	r2, [pc, #184]	; (1000214c <_tx_thread_system_preempt_check+0xc8>)
10002094:	6814      	ldr	r4, [r2, #0]

        /* Determine if preemption should take place.  */
        if (current_thread != thread_ptr)
10002096:	42a3      	cmp	r3, r4
10002098:	d01d      	beq.n	100020d6 <_tx_thread_system_preempt_check+0x52>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000209a:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000209e:	b672      	cpsid	i
        {

#ifdef TX_ENABLE_STACK_CHECKING

            /* Check this thread's stack.  */
            TX_THREAD_STACK_CHECK(thread_ptr)
100020a0:	b11c      	cbz	r4, 100020aa <_tx_thread_system_preempt_check+0x26>
100020a2:	6821      	ldr	r1, [r4, #0]
100020a4:	4a2a      	ldr	r2, [pc, #168]	; (10002150 <_tx_thread_system_preempt_check+0xcc>)
100020a6:	4291      	cmp	r1, r2
100020a8:	d016      	beq.n	100020d8 <_tx_thread_system_preempt_check+0x54>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100020aa:	f383 8810 	msr	PRIMASK, r3


#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

            /* Determine if an idle system return is present.  */
            if (thread_ptr == TX_NULL)
100020ae:	2c00      	cmp	r4, #0
100020b0:	d042      	beq.n	10002138 <_tx_thread_system_preempt_check+0xb4>
            }
            else
            {

                /* No, there is another thread ready to run and will be scheduled upon return.  */
                _tx_thread_performance_non_idle_return_count++;
100020b2:	4a28      	ldr	r2, [pc, #160]	; (10002154 <_tx_thread_system_preempt_check+0xd0>)
100020b4:	6813      	ldr	r3, [r2, #0]
100020b6:	3301      	adds	r3, #1
100020b8:	6013      	str	r3, [r2, #0]
__attribute__( ( always_inline ) ) static inline void _tx_thread_system_return_inline(void)
{
UINT interrupt_save;

    /* Set PendSV to invoke ThreadX scheduler.  */
    *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
100020ba:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100020be:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
100020c2:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
100020c6:	f3ef 8305 	mrs	r3, IPSR
    if (_tx_ipsr_get() == 0)
100020ca:	b923      	cbnz	r3, 100020d6 <_tx_thread_system_preempt_check+0x52>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100020cc:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSIE  i": : : "memory");
100020d0:	b662      	cpsie	i
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100020d2:	f383 8810 	msr	PRIMASK, r3

            /* Return to the system so the higher priority thread can be scheduled.  */
            _tx_thread_system_return();
        }
    }
}
100020d6:	bd10      	pop	{r4, pc}
            TX_THREAD_STACK_CHECK(thread_ptr)
100020d8:	68a2      	ldr	r2, [r4, #8]
100020da:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
100020de:	428a      	cmp	r2, r1
100020e0:	d201      	bcs.n	100020e6 <_tx_thread_system_preempt_check+0x62>
100020e2:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
100020e6:	68e1      	ldr	r1, [r4, #12]
100020e8:	6808      	ldr	r0, [r1, #0]
100020ea:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
100020ee:	4290      	cmp	r0, r2
100020f0:	d104      	bne.n	100020fc <_tx_thread_system_preempt_check+0x78>
100020f2:	6920      	ldr	r0, [r4, #16]
100020f4:	f8d0 0001 	ldr.w	r0, [r0, #1]
100020f8:	4282      	cmp	r2, r0
100020fa:	d018      	beq.n	1000212e <_tx_thread_system_preempt_check+0xaa>
100020fc:	f383 8810 	msr	PRIMASK, r3
10002100:	4620      	mov	r0, r4
10002102:	f7ff ffb1 	bl	10002068 <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002106:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000210a:	b672      	cpsid	i
1000210c:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
10002110:	f852 1c04 	ldr.w	r1, [r2, #-4]
10002114:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
10002118:	4291      	cmp	r1, r2
1000211a:	d0c6      	beq.n	100020aa <_tx_thread_system_preempt_check+0x26>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000211c:	f383 8810 	msr	PRIMASK, r3
10002120:	4620      	mov	r0, r4
10002122:	f7ff ff5b 	bl	10001fdc <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002126:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000212a:	b672      	cpsid	i
    return(int_posture);
1000212c:	e7bd      	b.n	100020aa <_tx_thread_system_preempt_check+0x26>
1000212e:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
10002132:	4291      	cmp	r1, r2
10002134:	d9ea      	bls.n	1000210c <_tx_thread_system_preempt_check+0x88>
10002136:	e7e1      	b.n	100020fc <_tx_thread_system_preempt_check+0x78>
                _tx_thread_performance_idle_return_count++;
10002138:	4a07      	ldr	r2, [pc, #28]	; (10002158 <_tx_thread_system_preempt_check+0xd4>)
1000213a:	6813      	ldr	r3, [r2, #0]
1000213c:	3301      	adds	r3, #1
1000213e:	6013      	str	r3, [r2, #0]
10002140:	e7bb      	b.n	100020ba <_tx_thread_system_preempt_check+0x36>
10002142:	4770      	bx	lr
10002144:	3800120c 	stmdacc	r0, {r2, r3, r9, ip}
10002148:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
1000214c:	380011bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, ip}
10002150:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc
10002154:	380011f4 	stmdacc	r0, {r2, r4, r5, r6, r7, r8, ip}
10002158:	380011ec 	stmdacc	r0, {r2, r3, r5, r6, r7, r8, ip}

1000215c <_tx_thread_system_ni_resume>:

/* Define the non-interruptable version of thread resume. It is assumed at this point that
   all interrupts are disabled and will remain so during this function.  */

VOID  _tx_thread_system_ni_resume(TX_THREAD *thread_ptr)
{
1000215c:	b510      	push	{r4, lr}
1000215e:	4604      	mov	r4, r0


#ifndef TX_NO_TIMER

    /* Deactivate the timeout timer if necessary.  */
    if (thread_ptr -> tx_thread_timer.tx_timer_internal_list_head != TX_NULL)
10002160:	6e43      	ldr	r3, [r0, #100]	; 0x64
10002162:	b113      	cbz	r3, 1000216a <_tx_thread_system_ni_resume+0xe>
    {

        /* Deactivate the thread's timeout timer.  */
        _tx_timer_system_deactivate(&(thread_ptr -> tx_thread_timer));
10002164:	304c      	adds	r0, #76	; 0x4c
10002166:	f000 fc49 	bl	100029fc <_tx_timer_system_deactivate>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000216a:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000216e:	b672      	cpsid	i
#endif

#ifdef TX_ENABLE_STACK_CHECKING

    /* Check this thread's stack.  */
    TX_THREAD_STACK_CHECK(thread_ptr)
10002170:	b11c      	cbz	r4, 1000217a <_tx_thread_system_ni_resume+0x1e>
10002172:	6821      	ldr	r1, [r4, #0]
10002174:	4a9d      	ldr	r2, [pc, #628]	; (100023ec <_tx_thread_system_ni_resume+0x290>)
10002176:	4291      	cmp	r1, r2
10002178:	d01f      	beq.n	100021ba <_tx_thread_system_ni_resume+0x5e>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000217a:	f383 8810 	msr	PRIMASK, r3
#endif

    /* Thread is not in the process of suspending. Now check to make sure the thread
       has not already been resumed.  */
    if (thread_ptr -> tx_thread_state != TX_READY)
1000217e:	6b23      	ldr	r3, [r4, #48]	; 0x30
10002180:	2b00      	cmp	r3, #0
10002182:	f000 80f9 	beq.w	10002378 <_tx_thread_system_ni_resume+0x21c>
    {

        /* No, now check to see if the delayed suspension flag is set.  */
        if (thread_ptr -> tx_thread_delayed_suspend == TX_FALSE)
10002186:	6b63      	ldr	r3, [r4, #52]	; 0x34
10002188:	2b00      	cmp	r3, #0
1000218a:	f040 80f1 	bne.w	10002370 <_tx_thread_system_ni_resume+0x214>
            /* Resume the thread!  */

            /* Make this thread ready.  */

            /* Change the state to ready.  */
            thread_ptr -> tx_thread_state =  TX_READY;
1000218e:	6323      	str	r3, [r4, #48]	; 0x30

            /* Log the thread status change.  */
            TX_EL_THREAD_STATUS_CHANGE_INSERT(thread_ptr, TX_READY)

            /* Pickup priority of thread.  */
            priority =  thread_ptr -> tx_thread_priority;
10002190:	6ae2      	ldr	r2, [r4, #44]	; 0x2c

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

            /* Increment the total number of thread resumptions.  */
            _tx_thread_performance_resume_count++;
10002192:	4997      	ldr	r1, [pc, #604]	; (100023f0 <_tx_thread_system_ni_resume+0x294>)
10002194:	680b      	ldr	r3, [r1, #0]
10002196:	3301      	adds	r3, #1
10002198:	600b      	str	r3, [r1, #0]

            /* Increment this thread's resume count.  */
            thread_ptr -> tx_thread_performance_resume_count++;
1000219a:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
1000219e:	3301      	adds	r3, #1
100021a0:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
#endif

            /* Determine if there are other threads at this priority that are
               ready.  */
            head_ptr =  _tx_thread_priority_list[priority];
100021a4:	4b93      	ldr	r3, [pc, #588]	; (100023f4 <_tx_thread_system_ni_resume+0x298>)
100021a6:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
            if (head_ptr == TX_NULL)
100021aa:	2b00      	cmp	r3, #0
100021ac:	d035      	beq.n	1000221a <_tx_thread_system_ni_resume+0xbe>
            {

                /* No, there are other threads at this priority already ready.  */

                /* Just add this thread to the priority list.  */
                tail_ptr =                                 head_ptr -> tx_thread_ready_previous;
100021ae:	6a5a      	ldr	r2, [r3, #36]	; 0x24
                tail_ptr -> tx_thread_ready_next =         thread_ptr;
100021b0:	6214      	str	r4, [r2, #32]
                head_ptr -> tx_thread_ready_previous =     thread_ptr;
100021b2:	625c      	str	r4, [r3, #36]	; 0x24
                thread_ptr -> tx_thread_ready_previous =   tail_ptr;
100021b4:	6262      	str	r2, [r4, #36]	; 0x24
                thread_ptr -> tx_thread_ready_next =       head_ptr;
100021b6:	6223      	str	r3, [r4, #32]
100021b8:	e0de      	b.n	10002378 <_tx_thread_system_ni_resume+0x21c>
    TX_THREAD_STACK_CHECK(thread_ptr)
100021ba:	68a2      	ldr	r2, [r4, #8]
100021bc:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
100021c0:	428a      	cmp	r2, r1
100021c2:	d201      	bcs.n	100021c8 <_tx_thread_system_ni_resume+0x6c>
100021c4:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
100021c8:	68e1      	ldr	r1, [r4, #12]
100021ca:	6808      	ldr	r0, [r1, #0]
100021cc:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
100021d0:	4290      	cmp	r0, r2
100021d2:	d104      	bne.n	100021de <_tx_thread_system_ni_resume+0x82>
100021d4:	6920      	ldr	r0, [r4, #16]
100021d6:	f8d0 0001 	ldr.w	r0, [r0, #1]
100021da:	4282      	cmp	r2, r0
100021dc:	d018      	beq.n	10002210 <_tx_thread_system_ni_resume+0xb4>
100021de:	f383 8810 	msr	PRIMASK, r3
100021e2:	4620      	mov	r0, r4
100021e4:	f7ff ff40 	bl	10002068 <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100021e8:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100021ec:	b672      	cpsid	i
100021ee:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
100021f2:	f852 1c04 	ldr.w	r1, [r2, #-4]
100021f6:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
100021fa:	4291      	cmp	r1, r2
100021fc:	d0bd      	beq.n	1000217a <_tx_thread_system_ni_resume+0x1e>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100021fe:	f383 8810 	msr	PRIMASK, r3
10002202:	4620      	mov	r0, r4
10002204:	f7ff feea 	bl	10001fdc <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002208:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000220c:	b672      	cpsid	i
    return(int_posture);
1000220e:	e7b4      	b.n	1000217a <_tx_thread_system_ni_resume+0x1e>
10002210:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
10002214:	4291      	cmp	r1, r2
10002216:	d9ea      	bls.n	100021ee <_tx_thread_system_ni_resume+0x92>
10002218:	e7e1      	b.n	100021de <_tx_thread_system_ni_resume+0x82>
                _tx_thread_priority_list[priority] =       thread_ptr;
1000221a:	4b76      	ldr	r3, [pc, #472]	; (100023f4 <_tx_thread_system_ni_resume+0x298>)
1000221c:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
                thread_ptr -> tx_thread_ready_next =       thread_ptr;
10002220:	6224      	str	r4, [r4, #32]
                thread_ptr -> tx_thread_ready_previous =   thread_ptr;
10002222:	6264      	str	r4, [r4, #36]	; 0x24
                TX_MOD32_BIT_SET(priority, priority_bit)
10002224:	2301      	movs	r3, #1
10002226:	fa03 f102 	lsl.w	r1, r3, r2
                _tx_thread_priority_maps[MAP_INDEX] =  _tx_thread_priority_maps[MAP_INDEX] | priority_bit;
1000222a:	4873      	ldr	r0, [pc, #460]	; (100023f8 <_tx_thread_system_ni_resume+0x29c>)
1000222c:	6803      	ldr	r3, [r0, #0]
1000222e:	430b      	orrs	r3, r1
10002230:	6003      	str	r3, [r0, #0]
                if (priority < _tx_thread_highest_priority)
10002232:	4b72      	ldr	r3, [pc, #456]	; (100023fc <_tx_thread_system_ni_resume+0x2a0>)
10002234:	681b      	ldr	r3, [r3, #0]
10002236:	4293      	cmp	r3, r2
10002238:	f240 809e 	bls.w	10002378 <_tx_thread_system_ni_resume+0x21c>
                    _tx_thread_highest_priority =  priority;
1000223c:	4b6f      	ldr	r3, [pc, #444]	; (100023fc <_tx_thread_system_ni_resume+0x2a0>)
1000223e:	601a      	str	r2, [r3, #0]
                    execute_ptr =  _tx_thread_execute_ptr;
10002240:	4b6f      	ldr	r3, [pc, #444]	; (10002400 <_tx_thread_system_ni_resume+0x2a4>)
10002242:	681b      	ldr	r3, [r3, #0]
                    if (execute_ptr == TX_NULL)
10002244:	2b00      	cmp	r3, #0
10002246:	d04e      	beq.n	100022e6 <_tx_thread_system_ni_resume+0x18a>
                        if (priority < execute_ptr -> tx_thread_preempt_threshold)
10002248:	6bd9      	ldr	r1, [r3, #60]	; 0x3c
1000224a:	4291      	cmp	r1, r2
1000224c:	f240 8094 	bls.w	10002378 <_tx_thread_system_ni_resume+0x21c>
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10002250:	f3ef 8205 	mrs	r2, IPSR
                            if (TX_THREAD_GET_SYSTEM_STATE() == ((ULONG) 0))
10002254:	496b      	ldr	r1, [pc, #428]	; (10002404 <_tx_thread_system_ni_resume+0x2a8>)
10002256:	6809      	ldr	r1, [r1, #0]
10002258:	430a      	orrs	r2, r1
1000225a:	d147      	bne.n	100022ec <_tx_thread_system_ni_resume+0x190>
                                _tx_thread_performance_solicited_preemption_count++;
1000225c:	496a      	ldr	r1, [pc, #424]	; (10002408 <_tx_thread_system_ni_resume+0x2ac>)
1000225e:	680a      	ldr	r2, [r1, #0]
10002260:	3201      	adds	r2, #1
10002262:	600a      	str	r2, [r1, #0]
                                execute_ptr -> tx_thread_performance_solicited_preemption_count++;
10002264:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
10002268:	3201      	adds	r2, #1
1000226a:	f8c3 20ac 	str.w	r2, [r3, #172]	; 0xac
                            execute_ptr -> tx_thread_performance_last_preempting_thread =  thread_ptr;
1000226e:	f8c3 40b8 	str.w	r4, [r3, #184]	; 0xb8
                            _tx_thread_execute_ptr =  thread_ptr;
10002272:	4b63      	ldr	r3, [pc, #396]	; (10002400 <_tx_thread_system_ni_resume+0x2a4>)
10002274:	601c      	str	r4, [r3, #0]
                            if (_tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] != _tx_thread_execute_ptr)
10002276:	4b65      	ldr	r3, [pc, #404]	; (1000240c <_tx_thread_system_ni_resume+0x2b0>)
10002278:	681b      	ldr	r3, [r3, #0]
1000227a:	4a65      	ldr	r2, [pc, #404]	; (10002410 <_tx_thread_system_ni_resume+0x2b4>)
1000227c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
10002280:	42a2      	cmp	r2, r4
10002282:	d00c      	beq.n	1000229e <_tx_thread_system_ni_resume+0x142>
                                _tx_thread_performance__execute_log_index++;
10002284:	3301      	adds	r3, #1
10002286:	4a61      	ldr	r2, [pc, #388]	; (1000240c <_tx_thread_system_ni_resume+0x2b0>)
10002288:	6013      	str	r3, [r2, #0]
                                if (_tx_thread_performance__execute_log_index >= TX_THREAD_EXECUTE_LOG_SIZE)
1000228a:	2b07      	cmp	r3, #7
1000228c:	d902      	bls.n	10002294 <_tx_thread_system_ni_resume+0x138>
                                    _tx_thread_performance__execute_log_index =  ((UINT) 0);
1000228e:	4613      	mov	r3, r2
10002290:	2200      	movs	r2, #0
10002292:	601a      	str	r2, [r3, #0]
                                _tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] =  _tx_thread_execute_ptr;
10002294:	4b5d      	ldr	r3, [pc, #372]	; (1000240c <_tx_thread_system_ni_resume+0x2b0>)
10002296:	681a      	ldr	r2, [r3, #0]
10002298:	4b5d      	ldr	r3, [pc, #372]	; (10002410 <_tx_thread_system_ni_resume+0x2b4>)
1000229a:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000229e:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100022a2:	b672      	cpsid	i
                            TX_THREAD_STACK_CHECK(thread_ptr)
100022a4:	b11c      	cbz	r4, 100022ae <_tx_thread_system_ni_resume+0x152>
100022a6:	6821      	ldr	r1, [r4, #0]
100022a8:	4a50      	ldr	r2, [pc, #320]	; (100023ec <_tx_thread_system_ni_resume+0x290>)
100022aa:	4291      	cmp	r1, r2
100022ac:	d030      	beq.n	10002310 <_tx_thread_system_ni_resume+0x1b4>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100022ae:	f383 8810 	msr	PRIMASK, r3
                            TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
100022b2:	4b58      	ldr	r3, [pc, #352]	; (10002414 <_tx_thread_system_ni_resume+0x2b8>)
100022b4:	681b      	ldr	r3, [r3, #0]
                            if (combined_flags == ((ULONG) 0))
100022b6:	2b00      	cmp	r3, #0
100022b8:	f040 8097 	bne.w	100023ea <_tx_thread_system_ni_resume+0x28e>
                                _tx_thread_performance_non_idle_return_count++;
100022bc:	4a56      	ldr	r2, [pc, #344]	; (10002418 <_tx_thread_system_ni_resume+0x2bc>)
100022be:	6813      	ldr	r3, [r2, #0]
100022c0:	3301      	adds	r3, #1
100022c2:	6013      	str	r3, [r2, #0]
    *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
100022c4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100022c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
100022cc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
100022d0:	f3ef 8305 	mrs	r3, IPSR
    if (_tx_ipsr_get() == 0)
100022d4:	2b00      	cmp	r3, #0
100022d6:	f040 8088 	bne.w	100023ea <_tx_thread_system_ni_resume+0x28e>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100022da:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSIE  i": : : "memory");
100022de:	b662      	cpsie	i
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100022e0:	f383 8810 	msr	PRIMASK, r3
                            return;
100022e4:	e081      	b.n	100023ea <_tx_thread_system_ni_resume+0x28e>
                        _tx_thread_execute_ptr =  thread_ptr;
100022e6:	4b46      	ldr	r3, [pc, #280]	; (10002400 <_tx_thread_system_ni_resume+0x2a4>)
100022e8:	601c      	str	r4, [r3, #0]
100022ea:	e045      	b.n	10002378 <_tx_thread_system_ni_resume+0x21c>
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
100022ec:	f3ef 8105 	mrs	r1, IPSR
                                if (TX_THREAD_GET_SYSTEM_STATE() < TX_INITIALIZE_IN_PROGRESS)
100022f0:	4a44      	ldr	r2, [pc, #272]	; (10002404 <_tx_thread_system_ni_resume+0x2a8>)
100022f2:	6812      	ldr	r2, [r2, #0]
100022f4:	430a      	orrs	r2, r1
100022f6:	f1b2 3ff0 	cmp.w	r2, #4042322160	; 0xf0f0f0f0
100022fa:	d2b8      	bcs.n	1000226e <_tx_thread_system_ni_resume+0x112>
                                    _tx_thread_performance_interrupt_preemption_count++;
100022fc:	4947      	ldr	r1, [pc, #284]	; (1000241c <_tx_thread_system_ni_resume+0x2c0>)
100022fe:	680a      	ldr	r2, [r1, #0]
10002300:	3201      	adds	r2, #1
10002302:	600a      	str	r2, [r1, #0]
                                    execute_ptr -> tx_thread_performance_interrupt_preemption_count++;
10002304:	f8d3 20b0 	ldr.w	r2, [r3, #176]	; 0xb0
10002308:	3201      	adds	r2, #1
1000230a:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
1000230e:	e7ae      	b.n	1000226e <_tx_thread_system_ni_resume+0x112>
                            TX_THREAD_STACK_CHECK(thread_ptr)
10002310:	68a2      	ldr	r2, [r4, #8]
10002312:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
10002316:	428a      	cmp	r2, r1
10002318:	d201      	bcs.n	1000231e <_tx_thread_system_ni_resume+0x1c2>
1000231a:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
1000231e:	68e2      	ldr	r2, [r4, #12]
10002320:	6810      	ldr	r0, [r2, #0]
10002322:	f8d4 10d4 	ldr.w	r1, [r4, #212]	; 0xd4
10002326:	4288      	cmp	r0, r1
10002328:	d104      	bne.n	10002334 <_tx_thread_system_ni_resume+0x1d8>
1000232a:	6920      	ldr	r0, [r4, #16]
1000232c:	f8d0 0001 	ldr.w	r0, [r0, #1]
10002330:	4281      	cmp	r1, r0
10002332:	d018      	beq.n	10002366 <_tx_thread_system_ni_resume+0x20a>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002334:	f383 8810 	msr	PRIMASK, r3
10002338:	4620      	mov	r0, r4
1000233a:	f7ff fe95 	bl	10002068 <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000233e:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002342:	b672      	cpsid	i
10002344:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
10002348:	f852 1c04 	ldr.w	r1, [r2, #-4]
1000234c:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
10002350:	4291      	cmp	r1, r2
10002352:	d0ac      	beq.n	100022ae <_tx_thread_system_ni_resume+0x152>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002354:	f383 8810 	msr	PRIMASK, r3
10002358:	4620      	mov	r0, r4
1000235a:	f7ff fe3f 	bl	10001fdc <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000235e:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002362:	b672      	cpsid	i
    return(int_posture);
10002364:	e7a3      	b.n	100022ae <_tx_thread_system_ni_resume+0x152>
10002366:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
1000236a:	428a      	cmp	r2, r1
1000236c:	d9ea      	bls.n	10002344 <_tx_thread_system_ni_resume+0x1e8>
1000236e:	e7e1      	b.n	10002334 <_tx_thread_system_ni_resume+0x1d8>
        /* Else, delayed suspend flag was set.  */
        else
        {

            /* Clear the delayed suspend flag and change the state.  */
            thread_ptr -> tx_thread_delayed_suspend =  TX_FALSE;
10002370:	2300      	movs	r3, #0
10002372:	6363      	str	r3, [r4, #52]	; 0x34
            thread_ptr -> tx_thread_state =            TX_SUSPENDED;
10002374:	2303      	movs	r3, #3
10002376:	6323      	str	r3, [r4, #48]	; 0x30
    }

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

    /* Is the execute pointer different?  */
    if (_tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] != _tx_thread_execute_ptr)
10002378:	4b24      	ldr	r3, [pc, #144]	; (1000240c <_tx_thread_system_ni_resume+0x2b0>)
1000237a:	681b      	ldr	r3, [r3, #0]
1000237c:	4a24      	ldr	r2, [pc, #144]	; (10002410 <_tx_thread_system_ni_resume+0x2b4>)
1000237e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
10002382:	491f      	ldr	r1, [pc, #124]	; (10002400 <_tx_thread_system_ni_resume+0x2a4>)
10002384:	680c      	ldr	r4, [r1, #0]
10002386:	42a2      	cmp	r2, r4
10002388:	d00c      	beq.n	100023a4 <_tx_thread_system_ni_resume+0x248>
    {

        /* Move to next entry.  */
        _tx_thread_performance__execute_log_index++;
1000238a:	3301      	adds	r3, #1
1000238c:	4a1f      	ldr	r2, [pc, #124]	; (1000240c <_tx_thread_system_ni_resume+0x2b0>)
1000238e:	6013      	str	r3, [r2, #0]

        /* Check for wrap condition.  */
        if (_tx_thread_performance__execute_log_index >= TX_THREAD_EXECUTE_LOG_SIZE)
10002390:	2b07      	cmp	r3, #7
10002392:	d902      	bls.n	1000239a <_tx_thread_system_ni_resume+0x23e>
        {

            /* Set the index to the beginning.  */
            _tx_thread_performance__execute_log_index =  ((UINT) 0);
10002394:	4613      	mov	r3, r2
10002396:	2200      	movs	r2, #0
10002398:	601a      	str	r2, [r3, #0]
        }

        /* Log the new execute pointer.  */
        _tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] =  _tx_thread_execute_ptr;
1000239a:	4b1c      	ldr	r3, [pc, #112]	; (1000240c <_tx_thread_system_ni_resume+0x2b0>)
1000239c:	681a      	ldr	r2, [r3, #0]
1000239e:	4b1c      	ldr	r3, [pc, #112]	; (10002410 <_tx_thread_system_ni_resume+0x2b4>)
100023a0:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
        }
    }
#endif

    /* Pickup thread pointer.  */
    TX_THREAD_GET_CURRENT(current_thread)
100023a4:	4b1e      	ldr	r3, [pc, #120]	; (10002420 <_tx_thread_system_ni_resume+0x2c4>)
100023a6:	681b      	ldr	r3, [r3, #0]

    /* Determine if a preemption condition is present.  */
    if (current_thread != _tx_thread_execute_ptr)
100023a8:	429c      	cmp	r4, r3
100023aa:	d01e      	beq.n	100023ea <_tx_thread_system_ni_resume+0x28e>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100023ac:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100023b0:	b672      	cpsid	i

        /* Pickup the next execute pointer.  */
        thread_ptr =  _tx_thread_execute_ptr;

        /* Check this thread's stack.  */
        TX_THREAD_STACK_CHECK(thread_ptr)
100023b2:	b11c      	cbz	r4, 100023bc <_tx_thread_system_ni_resume+0x260>
100023b4:	6821      	ldr	r1, [r4, #0]
100023b6:	4a0d      	ldr	r2, [pc, #52]	; (100023ec <_tx_thread_system_ni_resume+0x290>)
100023b8:	4291      	cmp	r1, r2
100023ba:	d033      	beq.n	10002424 <_tx_thread_system_ni_resume+0x2c8>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100023bc:	f383 8810 	msr	PRIMASK, r3
#endif

        /* Now determine if preemption should take place. This is only possible if the current thread pointer is
           not the same as the execute thread pointer AND the system state and preempt disable flags are clear.  */
        TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
100023c0:	4b14      	ldr	r3, [pc, #80]	; (10002414 <_tx_thread_system_ni_resume+0x2b8>)
100023c2:	681b      	ldr	r3, [r3, #0]
        if (combined_flags == ((ULONG) 0))
100023c4:	b98b      	cbnz	r3, 100023ea <_tx_thread_system_ni_resume+0x28e>
        {

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

            /* There is another thread ready to run and will be scheduled upon return.  */
            _tx_thread_performance_non_idle_return_count++;
100023c6:	4a14      	ldr	r2, [pc, #80]	; (10002418 <_tx_thread_system_ni_resume+0x2bc>)
100023c8:	6813      	ldr	r3, [r2, #0]
100023ca:	3301      	adds	r3, #1
100023cc:	6013      	str	r3, [r2, #0]
    *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
100023ce:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
100023d2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
100023d6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
100023da:	f3ef 8305 	mrs	r3, IPSR
    if (_tx_ipsr_get() == 0)
100023de:	b923      	cbnz	r3, 100023ea <_tx_thread_system_ni_resume+0x28e>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100023e0:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSIE  i": : : "memory");
100023e4:	b662      	cpsie	i
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100023e6:	f383 8810 	msr	PRIMASK, r3

            /* Preemption is needed - return to the system!  */
            _tx_thread_system_return();
        }
    }
}
100023ea:	bd10      	pop	{r4, pc}
100023ec:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc
100023f0:	380011f8 	stmdacc	r0, {r3, r4, r5, r6, r7, r8, ip}
100023f4:	38001210 	stmdacc	r0, {r4, r9, ip}
100023f8:	38001290 	stmdacc	r0, {r4, r7, r9, ip}
100023fc:	380011c0 	stmdacc	r0, {r6, r7, r8, ip}
10002400:	380011bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, ip}
10002404:	38000004 	stmdacc	r0, {r2}
10002408:	380011fc 	stmdacc	r0, {r2, r3, r4, r5, r6, r7, r8, ip}
1000240c:	380011c8 	stmdacc	r0, {r3, r6, r7, r8, ip}
10002410:	380011cc 	stmdacc	r0, {r2, r3, r6, r7, r8, ip}
10002414:	3800120c 	stmdacc	r0, {r2, r3, r9, ip}
10002418:	380011f4 	stmdacc	r0, {r2, r4, r5, r6, r7, r8, ip}
1000241c:	380011f0 	stmdacc	r0, {r4, r5, r6, r7, r8, ip}
10002420:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
        TX_THREAD_STACK_CHECK(thread_ptr)
10002424:	68a2      	ldr	r2, [r4, #8]
10002426:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
1000242a:	428a      	cmp	r2, r1
1000242c:	d201      	bcs.n	10002432 <_tx_thread_system_ni_resume+0x2d6>
1000242e:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
10002432:	68e1      	ldr	r1, [r4, #12]
10002434:	6808      	ldr	r0, [r1, #0]
10002436:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
1000243a:	4290      	cmp	r0, r2
1000243c:	d104      	bne.n	10002448 <_tx_thread_system_ni_resume+0x2ec>
1000243e:	6920      	ldr	r0, [r4, #16]
10002440:	f8d0 0001 	ldr.w	r0, [r0, #1]
10002444:	4282      	cmp	r2, r0
10002446:	d018      	beq.n	1000247a <_tx_thread_system_ni_resume+0x31e>
10002448:	f383 8810 	msr	PRIMASK, r3
1000244c:	4620      	mov	r0, r4
1000244e:	f7ff fe0b 	bl	10002068 <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002452:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002456:	b672      	cpsid	i
10002458:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
1000245c:	f852 1c04 	ldr.w	r1, [r2, #-4]
10002460:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
10002464:	4291      	cmp	r1, r2
10002466:	d0a9      	beq.n	100023bc <_tx_thread_system_ni_resume+0x260>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002468:	f383 8810 	msr	PRIMASK, r3
1000246c:	4620      	mov	r0, r4
1000246e:	f7ff fdb5 	bl	10001fdc <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002472:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002476:	b672      	cpsid	i
    return(int_posture);
10002478:	e7a0      	b.n	100023bc <_tx_thread_system_ni_resume+0x260>
1000247a:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
1000247e:	4291      	cmp	r1, r2
10002480:	d9ea      	bls.n	10002458 <_tx_thread_system_ni_resume+0x2fc>
10002482:	e7e1      	b.n	10002448 <_tx_thread_system_ni_resume+0x2ec>

10002484 <_tx_thread_system_ni_suspend>:

/* Define the system suspend function that is not interruptable, i.e., it is assumed that
   interrupts are disabled upon calling this function.  */

VOID  _tx_thread_system_ni_suspend(TX_THREAD *thread_ptr, ULONG wait_option)
{
10002484:	b570      	push	{r4, r5, r6, lr}
10002486:	4604      	mov	r4, r0
ULONG                       time_stamp =  ((ULONG) 0);
#endif


    /* Pickup thread pointer.  */
    TX_THREAD_GET_CURRENT(current_thread)
10002488:	4ba1      	ldr	r3, [pc, #644]	; (10002710 <_tx_thread_system_ni_suspend+0x28c>)
1000248a:	681e      	ldr	r6, [r3, #0]

#ifndef TX_NO_TIMER


    /* Determine if a timeout needs to be activated.  */
    if (thread_ptr == current_thread)
1000248c:	4286      	cmp	r6, r0
1000248e:	d060      	beq.n	10002552 <_tx_thread_system_ni_suspend+0xce>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002490:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002494:	b672      	cpsid	i
#endif

#ifdef TX_ENABLE_STACK_CHECKING

    /* Check this thread's stack.  */
    TX_THREAD_STACK_CHECK(thread_ptr)
10002496:	b11c      	cbz	r4, 100024a0 <_tx_thread_system_ni_suspend+0x1c>
10002498:	6821      	ldr	r1, [r4, #0]
1000249a:	4a9e      	ldr	r2, [pc, #632]	; (10002714 <_tx_thread_system_ni_suspend+0x290>)
1000249c:	4291      	cmp	r1, r2
1000249e:	d065      	beq.n	1000256c <_tx_thread_system_ni_suspend+0xe8>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100024a0:	f383 8810 	msr	PRIMASK, r3
#endif

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

    /* Increment the thread's suspend count.  */
    thread_ptr -> tx_thread_performance_suspend_count++;
100024a4:	f8d4 30a8 	ldr.w	r3, [r4, #168]	; 0xa8
100024a8:	3301      	adds	r3, #1
100024aa:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8

    /* Increment the total number of thread suspensions.  */
    _tx_thread_performance_suspend_count++;
100024ae:	4a9a      	ldr	r2, [pc, #616]	; (10002718 <_tx_thread_system_ni_suspend+0x294>)
100024b0:	6813      	ldr	r3, [r2, #0]
100024b2:	3301      	adds	r3, #1
100024b4:	6013      	str	r3, [r2, #0]
        time_stamp =  entry_ptr -> tx_trace_buffer_entry_time_stamp;
    }
#endif

    /* Pickup priority of thread.  */
    priority =  thread_ptr -> tx_thread_priority;
100024b6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c

    /* Pickup the next ready thread pointer.  */
    ready_next =      thread_ptr -> tx_thread_ready_next;
100024b8:	6a23      	ldr	r3, [r4, #32]

    /* Determine if there are other threads at this priority that are
       ready.  */
    if (ready_next != thread_ptr)
100024ba:	429c      	cmp	r4, r3
100024bc:	f000 808b 	beq.w	100025d6 <_tx_thread_system_ni_suspend+0x152>
    {

        /* Yes, there are other threads at this priority ready.  */

        /* Pickup the previous ready thread pointer.  */
        ready_previous =  thread_ptr -> tx_thread_ready_previous;
100024c0:	6a61      	ldr	r1, [r4, #36]	; 0x24

        /* Just remove this thread from the priority list.  */
        ready_next -> tx_thread_ready_previous =    ready_previous;
100024c2:	6259      	str	r1, [r3, #36]	; 0x24
        ready_previous -> tx_thread_ready_next =    ready_next;
100024c4:	620b      	str	r3, [r1, #32]

        /* Determine if this is the head of the priority list.  */
        if (_tx_thread_priority_list[priority] == thread_ptr)
100024c6:	4995      	ldr	r1, [pc, #596]	; (1000271c <_tx_thread_system_ni_suspend+0x298>)
100024c8:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
100024cc:	42a1      	cmp	r1, r4
100024ce:	d07e      	beq.n	100025ce <_tx_thread_system_ni_suspend+0x14a>
            _tx_thread_highest_priority =  base_priority + ((UINT) priority_bit);
        }
    }

    /* Determine if the suspending thread is the thread designated to execute.  */
    if (thread_ptr == _tx_thread_execute_ptr)
100024d0:	4b93      	ldr	r3, [pc, #588]	; (10002720 <_tx_thread_system_ni_suspend+0x29c>)
100024d2:	681d      	ldr	r5, [r3, #0]
100024d4:	42a5      	cmp	r5, r4
100024d6:	f000 80af 	beq.w	10002638 <_tx_thread_system_ni_suspend+0x1b4>
    }

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

    /* Is the execute pointer different?  */
    if (_tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] != _tx_thread_execute_ptr)
100024da:	4b92      	ldr	r3, [pc, #584]	; (10002724 <_tx_thread_system_ni_suspend+0x2a0>)
100024dc:	681b      	ldr	r3, [r3, #0]
100024de:	4a92      	ldr	r2, [pc, #584]	; (10002728 <_tx_thread_system_ni_suspend+0x2a4>)
100024e0:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
100024e4:	4295      	cmp	r5, r2
100024e6:	d00c      	beq.n	10002502 <_tx_thread_system_ni_suspend+0x7e>
    {

        /* Move to next entry.  */
        _tx_thread_performance__execute_log_index++;
100024e8:	3301      	adds	r3, #1
100024ea:	4a8e      	ldr	r2, [pc, #568]	; (10002724 <_tx_thread_system_ni_suspend+0x2a0>)
100024ec:	6013      	str	r3, [r2, #0]

        /* Check for wrap condition.  */
        if (_tx_thread_performance__execute_log_index >= TX_THREAD_EXECUTE_LOG_SIZE)
100024ee:	2b07      	cmp	r3, #7
100024f0:	d902      	bls.n	100024f8 <_tx_thread_system_ni_suspend+0x74>
        {

            /* Set the index to the beginning.  */
            _tx_thread_performance__execute_log_index =  ((UINT) 0);
100024f2:	4613      	mov	r3, r2
100024f4:	2200      	movs	r2, #0
100024f6:	601a      	str	r2, [r3, #0]
        }

        /* Log the new execute pointer.  */
        _tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] =  _tx_thread_execute_ptr;
100024f8:	4b8a      	ldr	r3, [pc, #552]	; (10002724 <_tx_thread_system_ni_suspend+0x2a0>)
100024fa:	681a      	ldr	r2, [r3, #0]
100024fc:	4b8a      	ldr	r3, [pc, #552]	; (10002728 <_tx_thread_system_ni_suspend+0x2a4>)
100024fe:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
        }
    }
#endif

    /* Determine if a preemption condition is present.  */
    if (current_thread != _tx_thread_execute_ptr)
10002502:	42b5      	cmp	r5, r6
10002504:	d024      	beq.n	10002550 <_tx_thread_system_ni_suspend+0xcc>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002506:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000250a:	b672      	cpsid	i

        /* Pickup the next execute pointer.  */
        thread_ptr =  _tx_thread_execute_ptr;

        /* Check this thread's stack.  */
        TX_THREAD_STACK_CHECK(thread_ptr)
1000250c:	b125      	cbz	r5, 10002518 <_tx_thread_system_ni_suspend+0x94>
1000250e:	6829      	ldr	r1, [r5, #0]
10002510:	4a80      	ldr	r2, [pc, #512]	; (10002714 <_tx_thread_system_ni_suspend+0x290>)
10002512:	4291      	cmp	r1, r2
10002514:	f000 80c5 	beq.w	100026a2 <_tx_thread_system_ni_suspend+0x21e>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002518:	f383 8810 	msr	PRIMASK, r3
#endif

        /* Determine if preemption should take place. This is only possible if the current thread pointer is
           not the same as the execute thread pointer AND the system state and preempt disable flags are clear.  */
        TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
1000251c:	4b83      	ldr	r3, [pc, #524]	; (1000272c <_tx_thread_system_ni_suspend+0x2a8>)
1000251e:	681b      	ldr	r3, [r3, #0]
        if (combined_flags == ((ULONG) 0))
10002520:	b9b3      	cbnz	r3, 10002550 <_tx_thread_system_ni_suspend+0xcc>
        {

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

            /* Determine if an idle system return is present.  */
            if (_tx_thread_execute_ptr == TX_NULL)
10002522:	4b7f      	ldr	r3, [pc, #508]	; (10002720 <_tx_thread_system_ni_suspend+0x29c>)
10002524:	681b      	ldr	r3, [r3, #0]
10002526:	2b00      	cmp	r3, #0
10002528:	f000 80ec 	beq.w	10002704 <_tx_thread_system_ni_suspend+0x280>
            }
            else
            {

                /* No, there is another thread ready to run and will be scheduled upon return.  */
                _tx_thread_performance_non_idle_return_count++;
1000252c:	4a80      	ldr	r2, [pc, #512]	; (10002730 <_tx_thread_system_ni_suspend+0x2ac>)
1000252e:	6813      	ldr	r3, [r2, #0]
10002530:	3301      	adds	r3, #1
10002532:	6013      	str	r3, [r2, #0]
    *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
10002534:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10002538:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
1000253c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10002540:	f3ef 8305 	mrs	r3, IPSR
    if (_tx_ipsr_get() == 0)
10002544:	b923      	cbnz	r3, 10002550 <_tx_thread_system_ni_suspend+0xcc>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002546:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSIE  i": : : "memory");
1000254a:	b662      	cpsie	i
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000254c:	f383 8810 	msr	PRIMASK, r3
        }
    }

    /* Return to caller.  */
    return;
}
10002550:	bd70      	pop	{r4, r5, r6, pc}
        if (wait_option != TX_NO_WAIT)
10002552:	b111      	cbz	r1, 1000255a <_tx_thread_system_ni_suspend+0xd6>
            if (wait_option != TX_WAIT_FOREVER)
10002554:	f1b1 3fff 	cmp.w	r1, #4294967295
10002558:	d103      	bne.n	10002562 <_tx_thread_system_ni_suspend+0xde>
        _tx_timer_time_slice =  thread_ptr -> tx_thread_new_time_slice;
1000255a:	69e2      	ldr	r2, [r4, #28]
1000255c:	4b75      	ldr	r3, [pc, #468]	; (10002734 <_tx_thread_system_ni_suspend+0x2b0>)
1000255e:	601a      	str	r2, [r3, #0]
10002560:	e796      	b.n	10002490 <_tx_thread_system_ni_suspend+0xc>
                thread_ptr -> tx_thread_timer.tx_timer_internal_remaining_ticks =  wait_option;
10002562:	f840 1f4c 	str.w	r1, [r0, #76]!
                _tx_timer_system_activate(&(thread_ptr -> tx_thread_timer));
10002566:	f000 fa1d 	bl	100029a4 <_tx_timer_system_activate>
1000256a:	e7f6      	b.n	1000255a <_tx_thread_system_ni_suspend+0xd6>
    TX_THREAD_STACK_CHECK(thread_ptr)
1000256c:	68a2      	ldr	r2, [r4, #8]
1000256e:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
10002572:	428a      	cmp	r2, r1
10002574:	d201      	bcs.n	1000257a <_tx_thread_system_ni_suspend+0xf6>
10002576:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
1000257a:	68e1      	ldr	r1, [r4, #12]
1000257c:	6808      	ldr	r0, [r1, #0]
1000257e:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
10002582:	4290      	cmp	r0, r2
10002584:	d104      	bne.n	10002590 <_tx_thread_system_ni_suspend+0x10c>
10002586:	6920      	ldr	r0, [r4, #16]
10002588:	f8d0 0001 	ldr.w	r0, [r0, #1]
1000258c:	4282      	cmp	r2, r0
1000258e:	d019      	beq.n	100025c4 <_tx_thread_system_ni_suspend+0x140>
10002590:	f383 8810 	msr	PRIMASK, r3
10002594:	4620      	mov	r0, r4
10002596:	f7ff fd67 	bl	10002068 <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000259a:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000259e:	b672      	cpsid	i
100025a0:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
100025a4:	f852 1c04 	ldr.w	r1, [r2, #-4]
100025a8:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
100025ac:	4291      	cmp	r1, r2
100025ae:	f43f af77 	beq.w	100024a0 <_tx_thread_system_ni_suspend+0x1c>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100025b2:	f383 8810 	msr	PRIMASK, r3
100025b6:	4620      	mov	r0, r4
100025b8:	f7ff fd10 	bl	10001fdc <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100025bc:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100025c0:	b672      	cpsid	i
    return(int_posture);
100025c2:	e76d      	b.n	100024a0 <_tx_thread_system_ni_suspend+0x1c>
100025c4:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
100025c8:	4291      	cmp	r1, r2
100025ca:	d9e9      	bls.n	100025a0 <_tx_thread_system_ni_suspend+0x11c>
100025cc:	e7e0      	b.n	10002590 <_tx_thread_system_ni_suspend+0x10c>
            _tx_thread_priority_list[priority] =  ready_next;
100025ce:	4953      	ldr	r1, [pc, #332]	; (1000271c <_tx_thread_system_ni_suspend+0x298>)
100025d0:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
100025d4:	e77c      	b.n	100024d0 <_tx_thread_system_ni_suspend+0x4c>
        _tx_thread_priority_list[priority] =    TX_NULL;
100025d6:	4b51      	ldr	r3, [pc, #324]	; (1000271c <_tx_thread_system_ni_suspend+0x298>)
100025d8:	2100      	movs	r1, #0
100025da:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        TX_MOD32_BIT_SET(priority, priority_bit)
100025de:	2301      	movs	r3, #1
100025e0:	4093      	lsls	r3, r2
        _tx_thread_priority_maps[MAP_INDEX] =  _tx_thread_priority_maps[MAP_INDEX] & (~(priority_bit));
100025e2:	4955      	ldr	r1, [pc, #340]	; (10002738 <_tx_thread_system_ni_suspend+0x2b4>)
100025e4:	680a      	ldr	r2, [r1, #0]
100025e6:	ea22 0203 	bic.w	r2, r2, r3
100025ea:	600a      	str	r2, [r1, #0]
        if (priority_map == ((ULONG) 0))
100025ec:	b132      	cbz	r2, 100025fc <_tx_thread_system_ni_suspend+0x178>
            TX_LOWEST_SET_BIT_CALCULATE(priority_map, priority_bit)
100025ee:	fa92 f2a2 	rbit	r2, r2
100025f2:	fab2 f282 	clz	r2, r2
            _tx_thread_highest_priority =  base_priority + ((UINT) priority_bit);
100025f6:	4b51      	ldr	r3, [pc, #324]	; (1000273c <_tx_thread_system_ni_suspend+0x2b8>)
100025f8:	601a      	str	r2, [r3, #0]
100025fa:	e769      	b.n	100024d0 <_tx_thread_system_ni_suspend+0x4c>
            _tx_thread_highest_priority =  ((UINT) TX_MAX_PRIORITIES);
100025fc:	4b4f      	ldr	r3, [pc, #316]	; (1000273c <_tx_thread_system_ni_suspend+0x2b8>)
100025fe:	2220      	movs	r2, #32
10002600:	601a      	str	r2, [r3, #0]
            _tx_thread_execute_ptr =       TX_NULL;
10002602:	4b47      	ldr	r3, [pc, #284]	; (10002720 <_tx_thread_system_ni_suspend+0x29c>)
10002604:	2200      	movs	r2, #0
10002606:	601a      	str	r2, [r3, #0]
            TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
10002608:	4b48      	ldr	r3, [pc, #288]	; (1000272c <_tx_thread_system_ni_suspend+0x2a8>)
1000260a:	681b      	ldr	r3, [r3, #0]
            if (combined_flags == ((ULONG) 0))
1000260c:	2b00      	cmp	r3, #0
1000260e:	d19f      	bne.n	10002550 <_tx_thread_system_ni_suspend+0xcc>
                _tx_thread_performance_idle_return_count++;
10002610:	4a4b      	ldr	r2, [pc, #300]	; (10002740 <_tx_thread_system_ni_suspend+0x2bc>)
10002612:	6813      	ldr	r3, [r2, #0]
10002614:	3301      	adds	r3, #1
10002616:	6013      	str	r3, [r2, #0]
    *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
10002618:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
1000261c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
10002620:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10002624:	f3ef 8305 	mrs	r3, IPSR
    if (_tx_ipsr_get() == 0)
10002628:	2b00      	cmp	r3, #0
1000262a:	d191      	bne.n	10002550 <_tx_thread_system_ni_suspend+0xcc>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000262c:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSIE  i": : : "memory");
10002630:	b662      	cpsie	i
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002632:	f383 8810 	msr	PRIMASK, r3
            return;
10002636:	e78b      	b.n	10002550 <_tx_thread_system_ni_suspend+0xcc>
        _tx_thread_execute_ptr =  _tx_thread_priority_list[_tx_thread_highest_priority];
10002638:	4b40      	ldr	r3, [pc, #256]	; (1000273c <_tx_thread_system_ni_suspend+0x2b8>)
1000263a:	681a      	ldr	r2, [r3, #0]
1000263c:	4b37      	ldr	r3, [pc, #220]	; (1000271c <_tx_thread_system_ni_suspend+0x298>)
1000263e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
10002642:	4b37      	ldr	r3, [pc, #220]	; (10002720 <_tx_thread_system_ni_suspend+0x29c>)
10002644:	601a      	str	r2, [r3, #0]
        if (_tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] != _tx_thread_execute_ptr)
10002646:	4b37      	ldr	r3, [pc, #220]	; (10002724 <_tx_thread_system_ni_suspend+0x2a0>)
10002648:	681b      	ldr	r3, [r3, #0]
1000264a:	4937      	ldr	r1, [pc, #220]	; (10002728 <_tx_thread_system_ni_suspend+0x2a4>)
1000264c:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
10002650:	428a      	cmp	r2, r1
10002652:	d00c      	beq.n	1000266e <_tx_thread_system_ni_suspend+0x1ea>
            _tx_thread_performance__execute_log_index++;
10002654:	3301      	adds	r3, #1
10002656:	4933      	ldr	r1, [pc, #204]	; (10002724 <_tx_thread_system_ni_suspend+0x2a0>)
10002658:	600b      	str	r3, [r1, #0]
            if (_tx_thread_performance__execute_log_index >= TX_THREAD_EXECUTE_LOG_SIZE)
1000265a:	2b07      	cmp	r3, #7
1000265c:	d902      	bls.n	10002664 <_tx_thread_system_ni_suspend+0x1e0>
                _tx_thread_performance__execute_log_index =  ((UINT) 0);
1000265e:	460b      	mov	r3, r1
10002660:	2100      	movs	r1, #0
10002662:	6019      	str	r1, [r3, #0]
            _tx_thread_performance_execute_log[_tx_thread_performance__execute_log_index] =  _tx_thread_execute_ptr;
10002664:	4b2f      	ldr	r3, [pc, #188]	; (10002724 <_tx_thread_system_ni_suspend+0x2a0>)
10002666:	6819      	ldr	r1, [r3, #0]
10002668:	4b2f      	ldr	r3, [pc, #188]	; (10002728 <_tx_thread_system_ni_suspend+0x2a4>)
1000266a:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
        TX_THREAD_SYSTEM_RETURN_CHECK(combined_flags)
1000266e:	4b2f      	ldr	r3, [pc, #188]	; (1000272c <_tx_thread_system_ni_suspend+0x2a8>)
10002670:	681b      	ldr	r3, [r3, #0]
        if (combined_flags == ((ULONG) 0))
10002672:	2b00      	cmp	r3, #0
10002674:	f47f af6c 	bne.w	10002550 <_tx_thread_system_ni_suspend+0xcc>
            _tx_thread_performance_non_idle_return_count++;
10002678:	4a2d      	ldr	r2, [pc, #180]	; (10002730 <_tx_thread_system_ni_suspend+0x2ac>)
1000267a:	6813      	ldr	r3, [r2, #0]
1000267c:	3301      	adds	r3, #1
1000267e:	6013      	str	r3, [r2, #0]
    *((volatile ULONG *) 0xE000ED04) = ((ULONG) 0x10000000);
10002680:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
10002684:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
10002688:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
1000268c:	f3ef 8305 	mrs	r3, IPSR
    if (_tx_ipsr_get() == 0)
10002690:	2b00      	cmp	r3, #0
10002692:	f47f af5d 	bne.w	10002550 <_tx_thread_system_ni_suspend+0xcc>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002696:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSIE  i": : : "memory");
1000269a:	b662      	cpsie	i
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000269c:	f383 8810 	msr	PRIMASK, r3
        return;
100026a0:	e756      	b.n	10002550 <_tx_thread_system_ni_suspend+0xcc>
        TX_THREAD_STACK_CHECK(thread_ptr)
100026a2:	68aa      	ldr	r2, [r5, #8]
100026a4:	f8d5 10cc 	ldr.w	r1, [r5, #204]	; 0xcc
100026a8:	428a      	cmp	r2, r1
100026aa:	d201      	bcs.n	100026b0 <_tx_thread_system_ni_suspend+0x22c>
100026ac:	f8c5 20cc 	str.w	r2, [r5, #204]	; 0xcc
100026b0:	68e9      	ldr	r1, [r5, #12]
100026b2:	6808      	ldr	r0, [r1, #0]
100026b4:	f8d5 20d4 	ldr.w	r2, [r5, #212]	; 0xd4
100026b8:	4290      	cmp	r0, r2
100026ba:	d104      	bne.n	100026c6 <_tx_thread_system_ni_suspend+0x242>
100026bc:	6928      	ldr	r0, [r5, #16]
100026be:	f8d0 0001 	ldr.w	r0, [r0, #1]
100026c2:	4282      	cmp	r2, r0
100026c4:	d019      	beq.n	100026fa <_tx_thread_system_ni_suspend+0x276>
100026c6:	f383 8810 	msr	PRIMASK, r3
100026ca:	4628      	mov	r0, r5
100026cc:	f7ff fccc 	bl	10002068 <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100026d0:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100026d4:	b672      	cpsid	i
100026d6:	f8d5 20cc 	ldr.w	r2, [r5, #204]	; 0xcc
100026da:	f852 1c04 	ldr.w	r1, [r2, #-4]
100026de:	f8d5 20d4 	ldr.w	r2, [r5, #212]	; 0xd4
100026e2:	4291      	cmp	r1, r2
100026e4:	f43f af18 	beq.w	10002518 <_tx_thread_system_ni_suspend+0x94>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100026e8:	f383 8810 	msr	PRIMASK, r3
100026ec:	4628      	mov	r0, r5
100026ee:	f7ff fc75 	bl	10001fdc <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100026f2:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100026f6:	b672      	cpsid	i
    return(int_posture);
100026f8:	e70e      	b.n	10002518 <_tx_thread_system_ni_suspend+0x94>
100026fa:	f8d5 20cc 	ldr.w	r2, [r5, #204]	; 0xcc
100026fe:	4291      	cmp	r1, r2
10002700:	d9e9      	bls.n	100026d6 <_tx_thread_system_ni_suspend+0x252>
10002702:	e7e0      	b.n	100026c6 <_tx_thread_system_ni_suspend+0x242>
                _tx_thread_performance_idle_return_count++;
10002704:	4a0e      	ldr	r2, [pc, #56]	; (10002740 <_tx_thread_system_ni_suspend+0x2bc>)
10002706:	6813      	ldr	r3, [r2, #0]
10002708:	3301      	adds	r3, #1
1000270a:	6013      	str	r3, [r2, #0]
1000270c:	e712      	b.n	10002534 <_tx_thread_system_ni_suspend+0xb0>
1000270e:	bf00      	nop
10002710:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
10002714:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc
10002718:	38001200 	stmdacc	r0, {r9, ip}
1000271c:	38001210 	stmdacc	r0, {r4, r9, ip}
10002720:	380011bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, ip}
10002724:	380011c8 	stmdacc	r0, {r3, r6, r7, r8, ip}
10002728:	380011cc 	stmdacc	r0, {r2, r3, r6, r7, r8, ip}
1000272c:	3800120c 	stmdacc	r0, {r2, r3, r9, ip}
10002730:	380011f4 	stmdacc	r0, {r2, r4, r5, r6, r7, r8, ip}
10002734:	38002424 	stmdacc	r0, {r2, r5, sl, sp}
10002738:	38001290 	stmdacc	r0, {r4, r7, r9, ip}
1000273c:	380011c0 	stmdacc	r0, {r6, r7, r8, ip}
10002740:	380011ec 	stmdacc	r0, {r2, r3, r5, r6, r7, r8, ip}

10002744 <_tx_thread_time_slice>:
/*                                            TX_NO_TIMER is defined,     */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID  _tx_thread_time_slice(VOID)
{
10002744:	b538      	push	{r3, r4, r5, lr}
ULONG           system_state;
UINT            preempt_disable;
#endif

    /* Pickup thread pointer.  */
    TX_THREAD_GET_CURRENT(thread_ptr)
10002746:	4b56      	ldr	r3, [pc, #344]	; (100028a0 <_tx_thread_time_slice+0x15c>)
10002748:	681c      	ldr	r4, [r3, #0]
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000274a:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000274e:	b672      	cpsid	i

#ifdef TX_ENABLE_STACK_CHECKING

    /* Check this thread's stack.  */
    TX_THREAD_STACK_CHECK(thread_ptr)
10002750:	b11c      	cbz	r4, 1000275a <_tx_thread_time_slice+0x16>
10002752:	6821      	ldr	r1, [r4, #0]
10002754:	4a53      	ldr	r2, [pc, #332]	; (100028a4 <_tx_thread_time_slice+0x160>)
10002756:	4291      	cmp	r1, r2
10002758:	d00d      	beq.n	10002776 <_tx_thread_time_slice+0x32>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000275a:	f383 8810 	msr	PRIMASK, r3
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000275e:	f3ef 8110 	mrs	r1, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002762:	b672      	cpsid	i

    /* Lockout interrupts while the time-slice is evaluated.  */
    TX_DISABLE

    /* Clear the expired time-slice flag.  */
    _tx_timer_expired_time_slice =  TX_FALSE;
10002764:	4b50      	ldr	r3, [pc, #320]	; (100028a8 <_tx_thread_time_slice+0x164>)
10002766:	2200      	movs	r2, #0
10002768:	601a      	str	r2, [r3, #0]

    /* Make sure the thread pointer is valid.  */
    if (thread_ptr != TX_NULL)
1000276a:	b3a4      	cbz	r4, 100027d6 <_tx_thread_time_slice+0x92>
    {

        /* Make sure the thread is still active, i.e. not suspended.  */
        if (thread_ptr -> tx_thread_state == TX_READY)
1000276c:	6b23      	ldr	r3, [r4, #48]	; 0x30
1000276e:	b3ab      	cbz	r3, 100027dc <_tx_thread_time_slice+0x98>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002770:	f381 8810 	msr	PRIMASK, r1

        /* Yes, check this thread's stack.  */
        TX_THREAD_STACK_CHECK(next_thread_ptr)
    }
#endif
}
10002774:	bd38      	pop	{r3, r4, r5, pc}
    TX_THREAD_STACK_CHECK(thread_ptr)
10002776:	68a2      	ldr	r2, [r4, #8]
10002778:	f8d4 10cc 	ldr.w	r1, [r4, #204]	; 0xcc
1000277c:	428a      	cmp	r2, r1
1000277e:	d201      	bcs.n	10002784 <_tx_thread_time_slice+0x40>
10002780:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
10002784:	68e1      	ldr	r1, [r4, #12]
10002786:	6808      	ldr	r0, [r1, #0]
10002788:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
1000278c:	4290      	cmp	r0, r2
1000278e:	d104      	bne.n	1000279a <_tx_thread_time_slice+0x56>
10002790:	6920      	ldr	r0, [r4, #16]
10002792:	f8d0 0001 	ldr.w	r0, [r0, #1]
10002796:	4282      	cmp	r2, r0
10002798:	d018      	beq.n	100027cc <_tx_thread_time_slice+0x88>
1000279a:	f383 8810 	msr	PRIMASK, r3
1000279e:	4620      	mov	r0, r4
100027a0:	f7ff fc62 	bl	10002068 <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100027a4:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100027a8:	b672      	cpsid	i
100027aa:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
100027ae:	f852 1c04 	ldr.w	r1, [r2, #-4]
100027b2:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
100027b6:	4291      	cmp	r1, r2
100027b8:	d0cf      	beq.n	1000275a <_tx_thread_time_slice+0x16>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100027ba:	f383 8810 	msr	PRIMASK, r3
100027be:	4620      	mov	r0, r4
100027c0:	f7ff fc0c 	bl	10001fdc <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100027c4:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100027c8:	b672      	cpsid	i
    return(int_posture);
100027ca:	e7c6      	b.n	1000275a <_tx_thread_time_slice+0x16>
100027cc:	f8d4 20cc 	ldr.w	r2, [r4, #204]	; 0xcc
100027d0:	4291      	cmp	r1, r2
100027d2:	d9ea      	bls.n	100027aa <_tx_thread_time_slice+0x66>
100027d4:	e7e1      	b.n	1000279a <_tx_thread_time_slice+0x56>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100027d6:	f381 8810 	msr	PRIMASK, r1
    if (next_thread_ptr != TX_NULL)
100027da:	e7cb      	b.n	10002774 <_tx_thread_time_slice+0x30>
            thread_ptr -> tx_thread_time_slice =  thread_ptr -> tx_thread_new_time_slice;
100027dc:	69e3      	ldr	r3, [r4, #28]
100027de:	61a3      	str	r3, [r4, #24]
            _tx_timer_time_slice =  thread_ptr -> tx_thread_time_slice;
100027e0:	4a32      	ldr	r2, [pc, #200]	; (100028ac <_tx_thread_time_slice+0x168>)
100027e2:	6013      	str	r3, [r2, #0]
            if (thread_ptr -> tx_thread_ready_next != thread_ptr)
100027e4:	6a23      	ldr	r3, [r4, #32]
100027e6:	42a3      	cmp	r3, r4
100027e8:	d006      	beq.n	100027f8 <_tx_thread_time_slice+0xb4>
                if (thread_ptr -> tx_thread_priority == thread_ptr -> tx_thread_preempt_threshold)
100027ea:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
100027ec:	6be0      	ldr	r0, [r4, #60]	; 0x3c
100027ee:	4282      	cmp	r2, r0
100027f0:	d005      	beq.n	100027fe <_tx_thread_time_slice+0xba>
100027f2:	f381 8810 	msr	PRIMASK, r1
    if (next_thread_ptr != TX_NULL)
100027f6:	e7bd      	b.n	10002774 <_tx_thread_time_slice+0x30>
100027f8:	f381 8810 	msr	PRIMASK, r1
100027fc:	e7ba      	b.n	10002774 <_tx_thread_time_slice+0x30>
                    _tx_thread_priority_list[thread_ptr -> tx_thread_priority] =  thread_ptr -> tx_thread_ready_next;
100027fe:	482c      	ldr	r0, [pc, #176]	; (100028b0 <_tx_thread_time_slice+0x16c>)
10002800:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
                    _tx_thread_execute_ptr =  _tx_thread_priority_list[_tx_thread_highest_priority];
10002804:	4b2b      	ldr	r3, [pc, #172]	; (100028b4 <_tx_thread_time_slice+0x170>)
10002806:	681b      	ldr	r3, [r3, #0]
10002808:	f850 5023 	ldr.w	r5, [r0, r3, lsl #2]
1000280c:	4b2a      	ldr	r3, [pc, #168]	; (100028b8 <_tx_thread_time_slice+0x174>)
1000280e:	601d      	str	r5, [r3, #0]
                    thread_ptr -> tx_thread_performance_time_slice_count++;
10002810:	f8d4 30bc 	ldr.w	r3, [r4, #188]	; 0xbc
10002814:	3301      	adds	r3, #1
10002816:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
                    _tx_thread_performance_time_slice_count++;
1000281a:	4a28      	ldr	r2, [pc, #160]	; (100028bc <_tx_thread_time_slice+0x178>)
1000281c:	6813      	ldr	r3, [r2, #0]
1000281e:	3301      	adds	r3, #1
10002820:	6013      	str	r3, [r2, #0]
10002822:	f381 8810 	msr	PRIMASK, r1
    if (next_thread_ptr != TX_NULL)
10002826:	2d00      	cmp	r5, #0
10002828:	d0a4      	beq.n	10002774 <_tx_thread_time_slice+0x30>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000282a:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
1000282e:	b672      	cpsid	i
        TX_THREAD_STACK_CHECK(next_thread_ptr)
10002830:	6829      	ldr	r1, [r5, #0]
10002832:	4a1c      	ldr	r2, [pc, #112]	; (100028a4 <_tx_thread_time_slice+0x160>)
10002834:	4291      	cmp	r1, r2
10002836:	d002      	beq.n	1000283e <_tx_thread_time_slice+0xfa>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002838:	f383 8810 	msr	PRIMASK, r3
}
1000283c:	e79a      	b.n	10002774 <_tx_thread_time_slice+0x30>
        TX_THREAD_STACK_CHECK(next_thread_ptr)
1000283e:	68aa      	ldr	r2, [r5, #8]
10002840:	f8d5 10cc 	ldr.w	r1, [r5, #204]	; 0xcc
10002844:	428a      	cmp	r2, r1
10002846:	d201      	bcs.n	1000284c <_tx_thread_time_slice+0x108>
10002848:	f8c5 20cc 	str.w	r2, [r5, #204]	; 0xcc
1000284c:	68e9      	ldr	r1, [r5, #12]
1000284e:	6808      	ldr	r0, [r1, #0]
10002850:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
10002854:	4290      	cmp	r0, r2
10002856:	d104      	bne.n	10002862 <_tx_thread_time_slice+0x11e>
10002858:	6928      	ldr	r0, [r5, #16]
1000285a:	f8d0 0001 	ldr.w	r0, [r0, #1]
1000285e:	4282      	cmp	r2, r0
10002860:	d018      	beq.n	10002894 <_tx_thread_time_slice+0x150>
10002862:	f383 8810 	msr	PRIMASK, r3
10002866:	4628      	mov	r0, r5
10002868:	f7ff fbfe 	bl	10002068 <_tx_thread_stack_error_handler>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000286c:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002870:	b672      	cpsid	i
10002872:	f8d5 20cc 	ldr.w	r2, [r5, #204]	; 0xcc
10002876:	f852 1c04 	ldr.w	r1, [r2, #-4]
1000287a:	f8d4 20d4 	ldr.w	r2, [r4, #212]	; 0xd4
1000287e:	4291      	cmp	r1, r2
10002880:	d0da      	beq.n	10002838 <_tx_thread_time_slice+0xf4>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002882:	f383 8810 	msr	PRIMASK, r3
10002886:	4628      	mov	r0, r5
10002888:	f7ff fba8 	bl	10001fdc <_tx_thread_stack_analyze>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
1000288c:	f3ef 8310 	mrs	r3, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002890:	b672      	cpsid	i
    return(int_posture);
10002892:	e7d1      	b.n	10002838 <_tx_thread_time_slice+0xf4>
10002894:	f8d5 20cc 	ldr.w	r2, [r5, #204]	; 0xcc
10002898:	4291      	cmp	r1, r2
1000289a:	d9ea      	bls.n	10002872 <_tx_thread_time_slice+0x12e>
1000289c:	e7e1      	b.n	10002862 <_tx_thread_time_slice+0x11e>
1000289e:	bf00      	nop
100028a0:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
100028a4:	54485244 	strbpl	r5, [r8], #-580	; 0xfffffdbc
100028a8:	380012a0 	stmdacc	r0, {r5, r7, r9, ip}
100028ac:	38002424 	stmdacc	r0, {r2, r5, sl, sp}
100028b0:	38001210 	stmdacc	r0, {r4, r9, ip}
100028b4:	380011c0 	stmdacc	r0, {r6, r7, r8, ip}
100028b8:	380011bc 	stmdacc	r0, {r2, r3, r4, r5, r7, r8, ip}
100028bc:	38001204 	stmdacc	r0, {r2, r9, ip}

100028c0 <_tx_thread_timeout>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID  _tx_thread_timeout(ULONG timeout_input)
{
100028c0:	b510      	push	{r4, lr}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100028c2:	f3ef 8410 	mrs	r4, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
100028c6:	b672      	cpsid	i

    /* Disable interrupts.  */
    TX_DISABLE

    /* Determine how the thread is currently suspended.  */
    if (thread_ptr -> tx_thread_state == TX_SLEEP)
100028c8:	6b03      	ldr	r3, [r0, #48]	; 0x30
100028ca:	2b04      	cmp	r3, #4
100028cc:	d00f      	beq.n	100028ee <_tx_thread_timeout+0x2e>
        /* Process all other suspension timeouts.  */

#ifdef TX_THREAD_ENABLE_PERFORMANCE_INFO

        /* Increment the total number of thread timeouts.  */
        _tx_thread_performance_timeout_count++;
100028ce:	4a0a      	ldr	r2, [pc, #40]	; (100028f8 <_tx_thread_timeout+0x38>)
100028d0:	6813      	ldr	r3, [r2, #0]
100028d2:	3301      	adds	r3, #1
100028d4:	6013      	str	r3, [r2, #0]

        /* Increment the number of timeouts for this thread.  */
        thread_ptr -> tx_thread_performance_timeout_count++;
100028d6:	f8d0 30c4 	ldr.w	r3, [r0, #196]	; 0xc4
100028da:	3301      	adds	r3, #1
100028dc:	f8c0 30c4 	str.w	r3, [r0, #196]	; 0xc4
#endif

        /* Pickup the cleanup routine address.  */
        suspend_cleanup =  thread_ptr -> tx_thread_suspend_cleanup;
100028e0:	6e83      	ldr	r3, [r0, #104]	; 0x68
        /* Restore interrupts.  */
        TX_RESTORE
#endif

        /* Call any cleanup routines.  */
        if (suspend_cleanup != TX_NULL)
100028e2:	b10b      	cbz	r3, 100028e8 <_tx_thread_timeout+0x28>
        {

            /* Yes, there is a function to call.  */
            (suspend_cleanup)(thread_ptr, suspension_sequence);
100028e4:	2100      	movs	r1, #0
100028e6:	4798      	blx	r3
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
100028e8:	f384 8810 	msr	PRIMASK, r4

        /* Restore interrupts.  */
        TX_RESTORE
#endif
    }
}
100028ec:	bd10      	pop	{r4, pc}
        _tx_thread_system_ni_resume(thread_ptr);
100028ee:	f7ff fc35 	bl	1000215c <_tx_thread_system_ni_resume>
100028f2:	f384 8810 	msr	PRIMASK, r4
}
100028f6:	e7f9      	b.n	100028ec <_tx_thread_timeout+0x2c>
100028f8:	38001208 	stmdacc	r0, {r3, r9, ip}

100028fc <_tx_timer_expiration_process>:
/*                                            TX_NO_TIMER is defined,     */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID  _tx_timer_expiration_process(VOID)
{
100028fc:	b510      	push	{r4, lr}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
100028fe:	f3ef 8410 	mrs	r4, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002902:	b672      	cpsid	i
    TX_DISABLE

#ifdef TX_NOT_INTERRUPTABLE

    /* Resume the thread!  */
    _tx_thread_system_ni_resume(&_tx_timer_thread);
10002904:	4802      	ldr	r0, [pc, #8]	; (10002910 <_tx_timer_expiration_process+0x14>)
10002906:	f7ff fc29 	bl	1000215c <_tx_thread_system_ni_resume>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
1000290a:	f384 8810 	msr	PRIMASK, r4
    }

    /* Restore interrupts.  */
    TX_RESTORE
#endif
}
1000290e:	bd10      	pop	{r4, pc}
10002910:	3800134c 	stmdacc	r0, {r2, r3, r6, r8, r9, ip}

10002914 <_tx_timer_initialize>:
/*  09-30-2020     Yuxin Zhou               Modified comment(s),          */
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
VOID  _tx_timer_initialize(VOID)
{
10002914:	b500      	push	{lr}
10002916:	b087      	sub	sp, #28
    /* First, initialize the timer list.  */
    TX_MEMSET(&_tx_timer_list[0], 0, (sizeof(_tx_timer_list)));
#endif

    /* Initialize all of the list pointers.  */
    _tx_timer_list_start =   &_tx_timer_list[0];
10002918:	4b16      	ldr	r3, [pc, #88]	; (10002974 <_tx_timer_initialize+0x60>)
1000291a:	4a17      	ldr	r2, [pc, #92]	; (10002978 <_tx_timer_initialize+0x64>)
1000291c:	6013      	str	r3, [r2, #0]
    _tx_timer_current_ptr =  &_tx_timer_list[0];
1000291e:	4a17      	ldr	r2, [pc, #92]	; (1000297c <_tx_timer_initialize+0x68>)
10002920:	6013      	str	r3, [r2, #0]

    /* Set the timer list end pointer to one past the actual timer list.  This is done
       to make the timer interrupt handling in assembly language a little easier.  */
    _tx_timer_list_end =     &_tx_timer_list[TX_TIMER_ENTRIES-((ULONG) 1)];
10002922:	4a17      	ldr	r2, [pc, #92]	; (10002980 <_tx_timer_initialize+0x6c>)
10002924:	f103 017c 	add.w	r1, r3, #124	; 0x7c
10002928:	6011      	str	r1, [r2, #0]
    _tx_timer_list_end =     TX_TIMER_POINTER_ADD(_tx_timer_list_end, ((ULONG) 1));
1000292a:	3380      	adds	r3, #128	; 0x80
1000292c:	6013      	str	r3, [r2, #0]

#ifndef TX_TIMER_PROCESS_IN_ISR

    /* Setup the variables associated with the system timer thread's stack and
       priority.  */
    _tx_timer_stack_start =  (VOID *) &_tx_timer_thread_stack_area[0];
1000292e:	4b15      	ldr	r3, [pc, #84]	; (10002984 <_tx_timer_initialize+0x70>)
10002930:	4a15      	ldr	r2, [pc, #84]	; (10002988 <_tx_timer_initialize+0x74>)
10002932:	601a      	str	r2, [r3, #0]
    _tx_timer_stack_size =   ((ULONG) TX_TIMER_THREAD_STACK_SIZE);
10002934:	4b15      	ldr	r3, [pc, #84]	; (1000298c <_tx_timer_initialize+0x78>)
10002936:	f44f 5280 	mov.w	r2, #4096	; 0x1000
1000293a:	601a      	str	r2, [r3, #0]
    _tx_timer_priority =     ((UINT) TX_TIMER_THREAD_PRIORITY);
1000293c:	4b14      	ldr	r3, [pc, #80]	; (10002990 <_tx_timer_initialize+0x7c>)
1000293e:	2205      	movs	r2, #5
10002940:	601a      	str	r2, [r3, #0]
       low-level initialization component.  */
    do
    {

        /* Create the system timer thread.  */
        status =  _tx_thread_create(&_tx_timer_thread,
10002942:	4b13      	ldr	r3, [pc, #76]	; (10002990 <_tx_timer_initialize+0x7c>)
10002944:	681b      	ldr	r3, [r3, #0]
10002946:	2200      	movs	r2, #0
10002948:	9205      	str	r2, [sp, #20]
1000294a:	9204      	str	r2, [sp, #16]
1000294c:	9303      	str	r3, [sp, #12]
1000294e:	9302      	str	r3, [sp, #8]
10002950:	4b0e      	ldr	r3, [pc, #56]	; (1000298c <_tx_timer_initialize+0x78>)
10002952:	681b      	ldr	r3, [r3, #0]
10002954:	9301      	str	r3, [sp, #4]
10002956:	4b0b      	ldr	r3, [pc, #44]	; (10002984 <_tx_timer_initialize+0x70>)
10002958:	681b      	ldr	r3, [r3, #0]
1000295a:	9300      	str	r3, [sp, #0]
1000295c:	4b0d      	ldr	r3, [pc, #52]	; (10002994 <_tx_timer_initialize+0x80>)
1000295e:	4a0e      	ldr	r2, [pc, #56]	; (10002998 <_tx_timer_initialize+0x84>)
10002960:	490e      	ldr	r1, [pc, #56]	; (1000299c <_tx_timer_initialize+0x88>)
10002962:	480f      	ldr	r0, [pc, #60]	; (100029a0 <_tx_timer_initialize+0x8c>)
10002964:	f7ff fa2a 	bl	10001dbc <_tx_thread_create>
#endif

        /* Define timer initialize extension.  */
        TX_TIMER_INITIALIZE_EXTENSION(status)

    } while (status != TX_SUCCESS);
10002968:	2800      	cmp	r0, #0
1000296a:	d1ea      	bne.n	10002942 <_tx_timer_initialize+0x2e>
    _tx_timer_performance_expiration_count =         ((ULONG) 0);
    _tx_timer_performance__expiration_adjust_count =  ((ULONG) 0);
#endif
#endif
#endif
}
1000296c:	b007      	add	sp, #28
1000296e:	f85d fb04 	ldr.w	pc, [sp], #4
10002972:	bf00      	nop
10002974:	380012a8 	stmdacc	r0, {r3, r5, r7, r9, ip}
10002978:	3800132c 	stmdacc	r0, {r2, r3, r5, r8, r9, ip}
1000297c:	38001298 	stmdacc	r0, {r3, r4, r7, r9, ip}
10002980:	38001328 	stmdacc	r0, {r3, r5, r8, r9, ip}
10002984:	38001344 	stmdacc	r0, {r2, r6, r8, r9, ip}
10002988:	38001424 	stmdacc	r0, {r2, r5, sl, ip}
1000298c:	38001340 	stmdacc	r0, {r6, r8, r9, ip}
10002990:	3800133c 	stmdacc	r0, {r2, r3, r4, r5, r8, r9, ip}
10002994:	4154494d 	cmpmi	r4, sp, asr #18
10002998:	10002a2d 	andne	r2, r0, sp, lsr #20
1000299c:	10005fd8 	ldrdne	r5, [r0], -r8
100029a0:	3800134c 	stmdacc	r0, {r2, r3, r6, r8, r9, ip}

100029a4 <_tx_timer_system_activate>:
ULONG                       remaining_ticks;
ULONG                       expiration_time;


    /* Pickup the remaining ticks.  */
    remaining_ticks =  timer_ptr -> tx_timer_internal_remaining_ticks;
100029a4:	6803      	ldr	r3, [r0, #0]

    /* Determine if there is a timer to activate.  */
    if (remaining_ticks != ((ULONG) 0))
100029a6:	b123      	cbz	r3, 100029b2 <_tx_timer_system_activate+0xe>
    {

        /* Determine if the timer is set to wait forever.  */
        if (remaining_ticks != TX_WAIT_FOREVER)
100029a8:	f1b3 3fff 	cmp.w	r3, #4294967295
100029ac:	d001      	beq.n	100029b2 <_tx_timer_system_activate+0xe>
        {

            /* Valid timer activate request.  */

            /* Determine if the timer still needs activation.  */
            if (timer_ptr -> tx_timer_internal_list_head == TX_NULL)
100029ae:	6982      	ldr	r2, [r0, #24]
100029b0:	b102      	cbz	r2, 100029b4 <_tx_timer_system_activate+0x10>
                /* Setup list head pointer.  */
                timer_ptr -> tx_timer_internal_list_head =  timer_list;
            }
        }
    }
}
100029b2:	4770      	bx	lr
                if (remaining_ticks > TX_TIMER_ENTRIES)
100029b4:	2b20      	cmp	r3, #32
100029b6:	d815      	bhi.n	100029e4 <_tx_timer_system_activate+0x40>
                    expiration_time =  (remaining_ticks - ((ULONG) 1));
100029b8:	3b01      	subs	r3, #1
                timer_list =  TX_TIMER_POINTER_ADD(_tx_timer_current_ptr, expiration_time);
100029ba:	4a0d      	ldr	r2, [pc, #52]	; (100029f0 <_tx_timer_system_activate+0x4c>)
100029bc:	6812      	ldr	r2, [r2, #0]
100029be:	eb02 0383 	add.w	r3, r2, r3, lsl #2
                if (TX_TIMER_INDIRECT_TO_VOID_POINTER_CONVERT(timer_list) >= TX_TIMER_INDIRECT_TO_VOID_POINTER_CONVERT(_tx_timer_list_end))
100029c2:	4a0c      	ldr	r2, [pc, #48]	; (100029f4 <_tx_timer_system_activate+0x50>)
100029c4:	6812      	ldr	r2, [r2, #0]
100029c6:	429a      	cmp	r2, r3
100029c8:	d803      	bhi.n	100029d2 <_tx_timer_system_activate+0x2e>
                    delta =  TX_TIMER_POINTER_DIF(timer_list, _tx_timer_list_end);
100029ca:	1a9b      	subs	r3, r3, r2
                    timer_list =  TX_TIMER_POINTER_ADD(_tx_timer_list_start, delta);
100029cc:	4a0a      	ldr	r2, [pc, #40]	; (100029f8 <_tx_timer_system_activate+0x54>)
100029ce:	6812      	ldr	r2, [r2, #0]
100029d0:	4413      	add	r3, r2
                if ((*timer_list) == TX_NULL)
100029d2:	681a      	ldr	r2, [r3, #0]
100029d4:	b142      	cbz	r2, 100029e8 <_tx_timer_system_activate+0x44>
                    previous_timer =                                    next_timer -> tx_timer_internal_active_previous;
100029d6:	6951      	ldr	r1, [r2, #20]
                    previous_timer -> tx_timer_internal_active_next =   timer_ptr;
100029d8:	6108      	str	r0, [r1, #16]
                    next_timer -> tx_timer_internal_active_previous =   timer_ptr;
100029da:	6150      	str	r0, [r2, #20]
                    timer_ptr -> tx_timer_internal_active_next =        next_timer;
100029dc:	6102      	str	r2, [r0, #16]
                    timer_ptr -> tx_timer_internal_active_previous =    previous_timer;
100029de:	6141      	str	r1, [r0, #20]
                timer_ptr -> tx_timer_internal_list_head =  timer_list;
100029e0:	6183      	str	r3, [r0, #24]
}
100029e2:	e7e6      	b.n	100029b2 <_tx_timer_system_activate+0xe>
                    expiration_time =  TX_TIMER_ENTRIES - ((ULONG) 1);
100029e4:	231f      	movs	r3, #31
100029e6:	e7e8      	b.n	100029ba <_tx_timer_system_activate+0x16>
                    timer_ptr -> tx_timer_internal_active_next =      timer_ptr;
100029e8:	6100      	str	r0, [r0, #16]
                    timer_ptr -> tx_timer_internal_active_previous =  timer_ptr;
100029ea:	6140      	str	r0, [r0, #20]
                    *timer_list =  timer_ptr;
100029ec:	6018      	str	r0, [r3, #0]
100029ee:	e7f7      	b.n	100029e0 <_tx_timer_system_activate+0x3c>
100029f0:	38001298 	stmdacc	r0, {r3, r4, r7, r9, ip}
100029f4:	38001328 	stmdacc	r0, {r3, r5, r8, r9, ip}
100029f8:	3800132c 	stmdacc	r0, {r2, r3, r5, r8, r9, ip}

100029fc <_tx_timer_system_deactivate>:
TX_TIMER_INTERNAL   *next_timer;
TX_TIMER_INTERNAL   *previous_timer;


    /* Pickup the list head pointer.  */
    list_head =  timer_ptr -> tx_timer_internal_list_head;
100029fc:	6983      	ldr	r3, [r0, #24]

    /* Determine if the timer still needs deactivation.  */
    if (list_head != TX_NULL)
100029fe:	b153      	cbz	r3, 10002a16 <_tx_timer_system_deactivate+0x1a>
    {

        /* Deactivate the timer.  */

        /* Pickup the next active timer.  */
        next_timer =  timer_ptr -> tx_timer_internal_active_next;
10002a00:	6902      	ldr	r2, [r0, #16]

        /* See if this is the only timer in the list.  */
        if (timer_ptr == next_timer)
10002a02:	4290      	cmp	r0, r2
10002a04:	d008      	beq.n	10002a18 <_tx_timer_system_deactivate+0x1c>
        {

            /* At least one more timer is on the same expiration list.  */

            /* Update the links of the adjacent timers.  */
            previous_timer =                                   timer_ptr -> tx_timer_internal_active_previous;
10002a06:	6941      	ldr	r1, [r0, #20]
            next_timer -> tx_timer_internal_active_previous =  previous_timer;
10002a08:	6151      	str	r1, [r2, #20]
            previous_timer -> tx_timer_internal_active_next =  next_timer;
10002a0a:	610a      	str	r2, [r1, #16]

            /* Determine if the head pointer needs to be updated.  */
            if (*(list_head) == timer_ptr)
10002a0c:	6819      	ldr	r1, [r3, #0]
10002a0e:	4281      	cmp	r1, r0
10002a10:	d008      	beq.n	10002a24 <_tx_timer_system_deactivate+0x28>
                *(list_head) =  next_timer;
            }
        }

        /* Clear the timer's list head pointer.  */
        timer_ptr -> tx_timer_internal_list_head =  TX_NULL;
10002a12:	2300      	movs	r3, #0
10002a14:	6183      	str	r3, [r0, #24]
    }
}
10002a16:	4770      	bx	lr
            if (*(list_head) == timer_ptr)
10002a18:	681a      	ldr	r2, [r3, #0]
10002a1a:	4282      	cmp	r2, r0
10002a1c:	d1f9      	bne.n	10002a12 <_tx_timer_system_deactivate+0x16>
                *(list_head) =  TX_NULL;
10002a1e:	2200      	movs	r2, #0
10002a20:	601a      	str	r2, [r3, #0]
10002a22:	e7f6      	b.n	10002a12 <_tx_timer_system_deactivate+0x16>
                next_timer -> tx_timer_internal_list_head =  list_head;
10002a24:	6193      	str	r3, [r2, #24]
                *(list_head) =  next_timer;
10002a26:	601a      	str	r2, [r3, #0]
10002a28:	e7f3      	b.n	10002a12 <_tx_timer_system_deactivate+0x16>
	...

10002a2c <_tx_timer_thread_entry>:
#endif


    /* Make sure the timer input is correct.  This also gets rid of the
       silly compiler warnings.  */
    if (timer_thread_input == TX_TIMER_ID)
10002a2c:	4b63      	ldr	r3, [pc, #396]	; (10002bbc <_tx_timer_thread_entry+0x190>)
10002a2e:	4298      	cmp	r0, r3
10002a30:	d000      	beq.n	10002a34 <_tx_timer_thread_entry+0x8>
10002a32:	4770      	bx	lr
{
10002a34:	b5f0      	push	{r4, r5, r6, r7, lr}
10002a36:	b083      	sub	sp, #12
ULONG                       timeout_param =  ((ULONG) 0);
10002a38:	2700      	movs	r7, #0
10002a3a:	e09e      	b.n	10002b7a <_tx_timer_thread_entry+0x14e>
               the end of the list.  */
            _tx_timer_current_ptr =  TX_TIMER_POINTER_ADD(_tx_timer_current_ptr, 1);
            if (_tx_timer_current_ptr == _tx_timer_list_end)
            {

                _tx_timer_current_ptr =  _tx_timer_list_start;
10002a3c:	4b60      	ldr	r3, [pc, #384]	; (10002bc0 <_tx_timer_thread_entry+0x194>)
10002a3e:	681a      	ldr	r2, [r3, #0]
10002a40:	4b60      	ldr	r3, [pc, #384]	; (10002bc4 <_tx_timer_thread_entry+0x198>)
10002a42:	601a      	str	r2, [r3, #0]
10002a44:	e0ae      	b.n	10002ba4 <_tx_timer_thread_entry+0x178>
                {

                    /* Yes, this is the only timer in the list.  */

                    /* Set the head pointer to NULL.  */
                    expired_timers =  TX_NULL;
10002a46:	9201      	str	r2, [sp, #4]
10002a48:	e02a      	b.n	10002aa0 <_tx_timer_thread_entry+0x74>
                    }
#endif

                    /* Decrement the remaining ticks of the timer.  */
                    current_timer -> tx_timer_internal_remaining_ticks =
                            current_timer -> tx_timer_internal_remaining_ticks - TX_TIMER_ENTRIES;
10002a4a:	6823      	ldr	r3, [r4, #0]
10002a4c:	3b20      	subs	r3, #32
                    current_timer -> tx_timer_internal_remaining_ticks =
10002a4e:	6023      	str	r3, [r4, #0]
                    timeout_function =  TX_NULL;

                    /* Make the timer appear that it is still active while interrupts
                       are enabled.  This will permit proper processing of a timer
                       deactivate from an ISR.  */
                    current_timer -> tx_timer_internal_list_head =    &reactivate_timer;
10002a50:	f8c4 d018 	str.w	sp, [r4, #24]
                    current_timer -> tx_timer_internal_active_next =  current_timer;
10002a54:	6124      	str	r4, [r4, #16]

                    /* Setup the temporary timer list head pointer.  */
                    reactivate_timer =  current_timer;
10002a56:	9400      	str	r4, [sp, #0]
                    timeout_function =  TX_NULL;
10002a58:	2500      	movs	r5, #0
                        current_timer -> tx_timer_internal_list_head =  TX_NULL;
                    }
                }

                /* Set pointer to indicate the expired timer that is currently being processed.  */
                _tx_timer_expired_timer_ptr =  current_timer;
10002a5a:	4b5b      	ldr	r3, [pc, #364]	; (10002bc8 <_tx_timer_thread_entry+0x19c>)
10002a5c:	601c      	str	r4, [r3, #0]
10002a5e:	f386 8810 	msr	PRIMASK, r6

                /* Restore interrupts for timer expiration call.  */
                TX_RESTORE

                /* Call the timer-expiration function, if non-NULL.  */
                if (timeout_function != TX_NULL)
10002a62:	b10d      	cbz	r5, 10002a68 <_tx_timer_thread_entry+0x3c>
                {

                    (timeout_function) (timeout_param);
10002a64:	4638      	mov	r0, r7
10002a66:	47a8      	blx	r5
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002a68:	f3ef 8210 	mrs	r2, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002a6c:	b672      	cpsid	i

                /* Lockout interrupts again.  */
                TX_DISABLE

                /* Clear expired timer pointer.  */
                _tx_timer_expired_timer_ptr =  TX_NULL;
10002a6e:	4b56      	ldr	r3, [pc, #344]	; (10002bc8 <_tx_timer_thread_entry+0x19c>)
10002a70:	2100      	movs	r1, #0
10002a72:	6019      	str	r1, [r3, #0]

                /* Determine if the timer needs to be reactivated.  */
                if (reactivate_timer == current_timer)
10002a74:	9b00      	ldr	r3, [sp, #0]
10002a76:	42a3      	cmp	r3, r4
10002a78:	d043      	beq.n	10002b02 <_tx_timer_thread_entry+0xd6>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002a7a:	f382 8810 	msr	PRIMASK, r2
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002a7e:	f3ef 8610 	mrs	r6, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002a82:	b672      	cpsid	i
            while (expired_timers != TX_NULL)
10002a84:	9c01      	ldr	r4, [sp, #4]
10002a86:	2c00      	cmp	r4, #0
10002a88:	d06c      	beq.n	10002b64 <_tx_timer_thread_entry+0x138>
                next_timer =  expired_timers -> tx_timer_internal_active_next;
10002a8a:	6923      	ldr	r3, [r4, #16]
                reactivate_timer =  TX_NULL;
10002a8c:	2200      	movs	r2, #0
10002a8e:	9200      	str	r2, [sp, #0]
                if (current_timer == next_timer)
10002a90:	429c      	cmp	r4, r3
10002a92:	d0d8      	beq.n	10002a46 <_tx_timer_thread_entry+0x1a>
                    previous_timer =                                   current_timer -> tx_timer_internal_active_previous;
10002a94:	6962      	ldr	r2, [r4, #20]
                    next_timer -> tx_timer_internal_active_previous =  previous_timer;
10002a96:	615a      	str	r2, [r3, #20]
                    previous_timer -> tx_timer_internal_active_next =  next_timer;
10002a98:	6113      	str	r3, [r2, #16]
                    next_timer -> tx_timer_internal_list_head =  &expired_timers;
10002a9a:	aa01      	add	r2, sp, #4
10002a9c:	619a      	str	r2, [r3, #24]
                    expired_timers =  next_timer;
10002a9e:	9301      	str	r3, [sp, #4]
                if (current_timer -> tx_timer_internal_remaining_ticks > TX_TIMER_ENTRIES)
10002aa0:	6823      	ldr	r3, [r4, #0]
10002aa2:	2b20      	cmp	r3, #32
10002aa4:	d910      	bls.n	10002ac8 <_tx_timer_thread_entry+0x9c>
                    _tx_timer_performance__expiration_adjust_count++;
10002aa6:	4a49      	ldr	r2, [pc, #292]	; (10002bcc <_tx_timer_thread_entry+0x1a0>)
10002aa8:	6813      	ldr	r3, [r2, #0]
10002aaa:	3301      	adds	r3, #1
10002aac:	6013      	str	r3, [r2, #0]
                    if (current_timer -> tx_timer_internal_timeout_function != &_tx_thread_timeout)
10002aae:	68a2      	ldr	r2, [r4, #8]
10002ab0:	4b47      	ldr	r3, [pc, #284]	; (10002bd0 <_tx_timer_thread_entry+0x1a4>)
10002ab2:	429a      	cmp	r2, r3
10002ab4:	d0c9      	beq.n	10002a4a <_tx_timer_thread_entry+0x1e>
                        if (timer_ptr -> tx_timer_id == TX_TIMER_ID)
10002ab6:	f854 2c08 	ldr.w	r2, [r4, #-8]
10002aba:	4b40      	ldr	r3, [pc, #256]	; (10002bbc <_tx_timer_thread_entry+0x190>)
10002abc:	429a      	cmp	r2, r3
10002abe:	d1c4      	bne.n	10002a4a <_tx_timer_thread_entry+0x1e>
                            timer_ptr -> tx_timer_performance__expiration_adjust_count++;
10002ac0:	6b63      	ldr	r3, [r4, #52]	; 0x34
10002ac2:	3301      	adds	r3, #1
10002ac4:	6363      	str	r3, [r4, #52]	; 0x34
10002ac6:	e7c0      	b.n	10002a4a <_tx_timer_thread_entry+0x1e>
                    _tx_timer_performance_expiration_count++;
10002ac8:	4a42      	ldr	r2, [pc, #264]	; (10002bd4 <_tx_timer_thread_entry+0x1a8>)
10002aca:	6813      	ldr	r3, [r2, #0]
10002acc:	3301      	adds	r3, #1
10002ace:	6013      	str	r3, [r2, #0]
                    if (current_timer -> tx_timer_internal_timeout_function != &_tx_thread_timeout)
10002ad0:	68a5      	ldr	r5, [r4, #8]
10002ad2:	4b3f      	ldr	r3, [pc, #252]	; (10002bd0 <_tx_timer_thread_entry+0x1a4>)
10002ad4:	429d      	cmp	r5, r3
10002ad6:	d004      	beq.n	10002ae2 <_tx_timer_thread_entry+0xb6>
                        if (timer_ptr -> tx_timer_id == TX_TIMER_ID)
10002ad8:	f854 2c08 	ldr.w	r2, [r4, #-8]
10002adc:	4b37      	ldr	r3, [pc, #220]	; (10002bbc <_tx_timer_thread_entry+0x190>)
10002ade:	429a      	cmp	r2, r3
10002ae0:	d008      	beq.n	10002af4 <_tx_timer_thread_entry+0xc8>
                    timeout_param =     current_timer -> tx_timer_internal_timeout_param;
10002ae2:	68e7      	ldr	r7, [r4, #12]
                    current_timer -> tx_timer_internal_remaining_ticks =  current_timer -> tx_timer_internal_re_initialize_ticks;
10002ae4:	6863      	ldr	r3, [r4, #4]
10002ae6:	6023      	str	r3, [r4, #0]
                    if (current_timer -> tx_timer_internal_remaining_ticks != ((ULONG) 0))
10002ae8:	b143      	cbz	r3, 10002afc <_tx_timer_thread_entry+0xd0>
                        current_timer -> tx_timer_internal_list_head =    &reactivate_timer;
10002aea:	f8c4 d018 	str.w	sp, [r4, #24]
                        current_timer -> tx_timer_internal_active_next =  current_timer;
10002aee:	6124      	str	r4, [r4, #16]
                        reactivate_timer =  current_timer;
10002af0:	9400      	str	r4, [sp, #0]
10002af2:	e7b2      	b.n	10002a5a <_tx_timer_thread_entry+0x2e>
                            timer_ptr -> tx_timer_performance_expiration_count++;
10002af4:	6b23      	ldr	r3, [r4, #48]	; 0x30
10002af6:	3301      	adds	r3, #1
10002af8:	6323      	str	r3, [r4, #48]	; 0x30
10002afa:	e7f2      	b.n	10002ae2 <_tx_timer_thread_entry+0xb6>
                        current_timer -> tx_timer_internal_list_head =  TX_NULL;
10002afc:	2300      	movs	r3, #0
10002afe:	61a3      	str	r3, [r4, #24]
10002b00:	e7ab      	b.n	10002a5a <_tx_timer_thread_entry+0x2e>
                    /* Reactivate the timer.  */

#ifdef TX_TIMER_ENABLE_PERFORMANCE_INFO

                    /* Determine if this timer expired.  */
                    if (timeout_function != TX_NULL)
10002b02:	b165      	cbz	r5, 10002b1e <_tx_timer_thread_entry+0xf2>
                    {

                        /* Increment the total reactivations counter.  */
                        _tx_timer_performance_reactivate_count++;
10002b04:	4934      	ldr	r1, [pc, #208]	; (10002bd8 <_tx_timer_thread_entry+0x1ac>)
10002b06:	680b      	ldr	r3, [r1, #0]
10002b08:	3301      	adds	r3, #1
10002b0a:	600b      	str	r3, [r1, #0]

                        /* Determine if this is an application timer.  */
                        if (current_timer -> tx_timer_internal_timeout_function != &_tx_thread_timeout)
10002b0c:	68a1      	ldr	r1, [r4, #8]
10002b0e:	4b30      	ldr	r3, [pc, #192]	; (10002bd0 <_tx_timer_thread_entry+0x1a4>)
10002b10:	4299      	cmp	r1, r3
10002b12:	d004      	beq.n	10002b1e <_tx_timer_thread_entry+0xf2>

                            /* Pickup the application timer pointer.  */
                            TX_USER_TIMER_POINTER_GET(current_timer, timer_ptr)

                            /* Increment the number of expirations on this timer.  */
                            if (timer_ptr -> tx_timer_id == TX_TIMER_ID)
10002b14:	f854 1c08 	ldr.w	r1, [r4, #-8]
10002b18:	4b28      	ldr	r3, [pc, #160]	; (10002bbc <_tx_timer_thread_entry+0x190>)
10002b1a:	4299      	cmp	r1, r3
10002b1c:	d018      	beq.n	10002b50 <_tx_timer_thread_entry+0x124>
#endif

#ifdef TX_REACTIVATE_INLINE

                    /* Calculate the amount of time remaining for the timer.  */
                    if (current_timer -> tx_timer_internal_remaining_ticks > TX_TIMER_ENTRIES)
10002b1e:	6821      	ldr	r1, [r4, #0]
10002b20:	2920      	cmp	r1, #32
10002b22:	d819      	bhi.n	10002b58 <_tx_timer_thread_entry+0x12c>
                    {

                        /* Timer value fits in the timer entries.  */

                        /* Set the expiration time.  */
                        expiration_time =  ((UINT) current_timer -> tx_timer_internal_remaining_ticks) - ((UINT) 1);
10002b24:	3901      	subs	r1, #1

                    /* At this point, we are ready to put the timer back on one of
                       the timer lists.  */

                    /* Calculate the proper place for the timer.  */
                    timer_list =  TX_TIMER_POINTER_ADD(_tx_timer_current_ptr, expiration_time);
10002b26:	4b27      	ldr	r3, [pc, #156]	; (10002bc4 <_tx_timer_thread_entry+0x198>)
10002b28:	681b      	ldr	r3, [r3, #0]
10002b2a:	eb03 0381 	add.w	r3, r3, r1, lsl #2
                    if (TX_TIMER_INDIRECT_TO_VOID_POINTER_CONVERT(timer_list) >= TX_TIMER_INDIRECT_TO_VOID_POINTER_CONVERT(_tx_timer_list_end))
10002b2e:	492b      	ldr	r1, [pc, #172]	; (10002bdc <_tx_timer_thread_entry+0x1b0>)
10002b30:	6809      	ldr	r1, [r1, #0]
10002b32:	4299      	cmp	r1, r3
10002b34:	d803      	bhi.n	10002b3e <_tx_timer_thread_entry+0x112>
                    {

                        /* Wrap from the beginning of the list.  */
                        delta =  TX_TIMER_POINTER_DIF(timer_list, _tx_timer_list_end);
10002b36:	1a5b      	subs	r3, r3, r1
                        timer_list =  TX_TIMER_POINTER_ADD(_tx_timer_list_start, delta);
10002b38:	4921      	ldr	r1, [pc, #132]	; (10002bc0 <_tx_timer_thread_entry+0x194>)
10002b3a:	6809      	ldr	r1, [r1, #0]
10002b3c:	440b      	add	r3, r1
                    }

                    /* Now put the timer on this list.  */
                    if ((*timer_list) == TX_NULL)
10002b3e:	6819      	ldr	r1, [r3, #0]
10002b40:	b161      	cbz	r1, 10002b5c <_tx_timer_thread_entry+0x130>
                    else
                    {

                        /* This list is not NULL, add current timer to the end. */
                        next_timer =                                          *timer_list;
                        previous_timer =                                      next_timer -> tx_timer_internal_active_previous;
10002b42:	6948      	ldr	r0, [r1, #20]
                        previous_timer -> tx_timer_internal_active_next =     current_timer;
10002b44:	6104      	str	r4, [r0, #16]
                        next_timer -> tx_timer_internal_active_previous =     current_timer;
10002b46:	614c      	str	r4, [r1, #20]
                        current_timer -> tx_timer_internal_active_next =      next_timer;
10002b48:	6121      	str	r1, [r4, #16]
                        current_timer -> tx_timer_internal_active_previous =  previous_timer;
10002b4a:	6160      	str	r0, [r4, #20]
                    }

                    /* Setup list head pointer.  */
                    current_timer -> tx_timer_internal_list_head =  timer_list;
10002b4c:	61a3      	str	r3, [r4, #24]
10002b4e:	e794      	b.n	10002a7a <_tx_timer_thread_entry+0x4e>
                                timer_ptr -> tx_timer_performance_reactivate_count++;
10002b50:	6aa3      	ldr	r3, [r4, #40]	; 0x28
10002b52:	3301      	adds	r3, #1
10002b54:	62a3      	str	r3, [r4, #40]	; 0x28
10002b56:	e7e2      	b.n	10002b1e <_tx_timer_thread_entry+0xf2>
                        expiration_time =  TX_TIMER_ENTRIES - ((UINT) 1);
10002b58:	211f      	movs	r1, #31
10002b5a:	e7e4      	b.n	10002b26 <_tx_timer_thread_entry+0xfa>
                        current_timer -> tx_timer_internal_active_next =      current_timer;
10002b5c:	6124      	str	r4, [r4, #16]
                        current_timer -> tx_timer_internal_active_previous =  current_timer;
10002b5e:	6164      	str	r4, [r4, #20]
                        *timer_list =  current_timer;
10002b60:	601c      	str	r4, [r3, #0]
10002b62:	e7f3      	b.n	10002b4c <_tx_timer_thread_entry+0x120>

            /* Finally, suspend this thread and wait for the next expiration.  */

            /* Determine if another expiration took place while we were in this
               thread.  If so, process another expiration.  */
            if (_tx_timer_expired == TX_FALSE)
10002b64:	4b1e      	ldr	r3, [pc, #120]	; (10002be0 <_tx_timer_thread_entry+0x1b4>)
10002b66:	681b      	ldr	r3, [r3, #0]
10002b68:	bb2b      	cbnz	r3, 10002bb6 <_tx_timer_thread_entry+0x18a>
                /* Build pointer to the timer thread.  */
                thread_ptr =  &_tx_timer_thread;

                /* Set the status to suspending, in order to indicate the
                   suspension is in progress.  */
                thread_ptr -> tx_thread_state =  TX_SUSPENDED;
10002b6a:	481e      	ldr	r0, [pc, #120]	; (10002be4 <_tx_timer_thread_entry+0x1b8>)
10002b6c:	2303      	movs	r3, #3
10002b6e:	6303      	str	r3, [r0, #48]	; 0x30

#ifdef TX_NOT_INTERRUPTABLE

                /* Call actual non-interruptable thread suspension routine.  */
                _tx_thread_system_ni_suspend(thread_ptr, ((ULONG) 0));
10002b70:	2100      	movs	r1, #0
10002b72:	f7ff fc87 	bl	10002484 <_tx_thread_system_ni_suspend>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002b76:	f386 8810 	msr	PRIMASK, r6
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002b7a:	f3ef 8110 	mrs	r1, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002b7e:	b672      	cpsid	i
            expired_timers =  *_tx_timer_current_ptr;
10002b80:	4b10      	ldr	r3, [pc, #64]	; (10002bc4 <_tx_timer_thread_entry+0x198>)
10002b82:	681a      	ldr	r2, [r3, #0]
10002b84:	6813      	ldr	r3, [r2, #0]
10002b86:	9301      	str	r3, [sp, #4]
            if (expired_timers != TX_NULL)
10002b88:	b10b      	cbz	r3, 10002b8e <_tx_timer_thread_entry+0x162>
                expired_timers -> tx_timer_internal_list_head =  &expired_timers;
10002b8a:	a801      	add	r0, sp, #4
10002b8c:	6198      	str	r0, [r3, #24]
            *_tx_timer_current_ptr =  TX_NULL;
10002b8e:	2300      	movs	r3, #0
10002b90:	6013      	str	r3, [r2, #0]
            _tx_timer_current_ptr =  TX_TIMER_POINTER_ADD(_tx_timer_current_ptr, 1);
10002b92:	4a0c      	ldr	r2, [pc, #48]	; (10002bc4 <_tx_timer_thread_entry+0x198>)
10002b94:	6813      	ldr	r3, [r2, #0]
10002b96:	3304      	adds	r3, #4
10002b98:	6013      	str	r3, [r2, #0]
            if (_tx_timer_current_ptr == _tx_timer_list_end)
10002b9a:	4a10      	ldr	r2, [pc, #64]	; (10002bdc <_tx_timer_thread_entry+0x1b0>)
10002b9c:	6812      	ldr	r2, [r2, #0]
10002b9e:	4293      	cmp	r3, r2
10002ba0:	f43f af4c 	beq.w	10002a3c <_tx_timer_thread_entry+0x10>
            _tx_timer_expired =  TX_FALSE;
10002ba4:	4b0e      	ldr	r3, [pc, #56]	; (10002be0 <_tx_timer_thread_entry+0x1b4>)
10002ba6:	2200      	movs	r2, #0
10002ba8:	601a      	str	r2, [r3, #0]
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002baa:	f381 8810 	msr	PRIMASK, r1
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002bae:	f3ef 8610 	mrs	r6, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002bb2:	b672      	cpsid	i
            while (expired_timers != TX_NULL)
10002bb4:	e766      	b.n	10002a84 <_tx_timer_thread_entry+0x58>
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002bb6:	f386 8810 	msr	PRIMASK, r6
}
10002bba:	e7de      	b.n	10002b7a <_tx_timer_thread_entry+0x14e>
10002bbc:	4154494d 	cmpmi	r4, sp, asr #18
10002bc0:	3800132c 	stmdacc	r0, {r2, r3, r5, r8, r9, ip}
10002bc4:	38001298 	stmdacc	r0, {r3, r4, r7, r9, ip}
10002bc8:	380012a4 	stmdacc	r0, {r2, r5, r7, r9, ip}
10002bcc:	38001330 	stmdacc	r0, {r4, r5, r8, r9, ip}
10002bd0:	100028c1 	andne	r2, r0, r1, asr #17
10002bd4:	38001334 	stmdacc	r0, {r2, r4, r5, r8, r9, ip}
10002bd8:	38001338 	stmdacc	r0, {r3, r4, r5, r8, r9, ip}
10002bdc:	38001328 	stmdacc	r0, {r3, r5, r8, r9, ip}
10002be0:	3800129c 	stmdacc	r0, {r2, r3, r4, r7, r9, ip}
10002be4:	3800134c 	stmdacc	r0, {r2, r3, r6, r8, r9, ip}

10002be8 <_txe_block_release>:
UCHAR               **indirect_ptr;
UCHAR               *work_ptr;


    /* First check the supplied pointer.  */
    if (block_ptr == TX_NULL)
10002be8:	b160      	cbz	r0, 10002c04 <_txe_block_release+0x1c>
{
10002bea:	b508      	push	{r3, lr}
        /* Pickup the pool pointer which is just previous to the starting
           address of block that the caller sees.  */
        work_ptr =      TX_VOID_TO_UCHAR_POINTER_CONVERT(block_ptr);
        work_ptr =      TX_UCHAR_POINTER_SUB(work_ptr, (sizeof(UCHAR *)));
        indirect_ptr =  TX_UCHAR_TO_INDIRECT_UCHAR_POINTER_CONVERT(work_ptr);
        work_ptr =      *indirect_ptr;
10002bec:	f850 3c04 	ldr.w	r3, [r0, #-4]
        pool_ptr =      TX_UCHAR_TO_BLOCK_POOL_POINTER_CONVERT(work_ptr);

        /* Check for an invalid pool pointer.  */
        if (pool_ptr == TX_NULL)
10002bf0:	b153      	cbz	r3, 10002c08 <_txe_block_release+0x20>
            /* Pool pointer is invalid, return appropriate error code.  */
            status =  TX_PTR_ERROR;
        }

        /* Now check for invalid pool ID.  */
        else if  (pool_ptr -> tx_block_pool_id != TX_BLOCK_POOL_ID)
10002bf2:	6819      	ldr	r1, [r3, #0]
10002bf4:	4b05      	ldr	r3, [pc, #20]	; (10002c0c <_txe_block_release+0x24>)
10002bf6:	4299      	cmp	r1, r3
10002bf8:	d001      	beq.n	10002bfe <_txe_block_release+0x16>
        {

            /* Pool pointer is invalid, return appropriate error code.  */
            status =  TX_PTR_ERROR;
10002bfa:	2003      	movs	r0, #3
        }
    }

    /* Return completion status.  */
    return(status);
}
10002bfc:	bd08      	pop	{r3, pc}
            status =  _tx_block_release(block_ptr);
10002bfe:	f7fe ff5b 	bl	10001ab8 <_tx_block_release>
10002c02:	e7fb      	b.n	10002bfc <_txe_block_release+0x14>
        status =  TX_PTR_ERROR;
10002c04:	2003      	movs	r0, #3
}
10002c06:	4770      	bx	lr
            status =  TX_PTR_ERROR;
10002c08:	2003      	movs	r0, #3
10002c0a:	e7f7      	b.n	10002bfc <_txe_block_release+0x14>
10002c0c:	424c4f43 	submi	r4, ip, #268	; 0x10c

10002c10 <_txe_byte_allocate>:
/*                                            resulting in version 6.1    */
/*                                                                        */
/**************************************************************************/
UINT  _txe_byte_allocate(TX_BYTE_POOL *pool_ptr, VOID **memory_ptr,
                                    ULONG memory_size,  ULONG wait_option)
{
10002c10:	b510      	push	{r4, lr}

    /* Default status to success.  */
    status =  TX_SUCCESS;

    /* Check for an invalid byte pool pointer.  */
    if (pool_ptr == TX_NULL)
10002c12:	4684      	mov	ip, r0
10002c14:	b360      	cbz	r0, 10002c70 <_txe_byte_allocate+0x60>
        /* Byte pool pointer is invalid, return appropriate error code.  */
        status =  TX_POOL_ERROR;
    }

    /* Now check for invalid pool ID.  */
    else if  (pool_ptr -> tx_byte_pool_id != TX_BYTE_POOL_ID)
10002c16:	481f      	ldr	r0, [pc, #124]	; (10002c94 <_txe_byte_allocate+0x84>)
10002c18:	f8dc 4000 	ldr.w	r4, [ip]
10002c1c:	4284      	cmp	r4, r0
10002c1e:	d013      	beq.n	10002c48 <_txe_byte_allocate+0x38>
    {

        /* Byte pool pointer is invalid, return appropriate error code.  */
        status =  TX_POOL_ERROR;
10002c20:	2002      	movs	r0, #2
        }
    }
#endif

    /* Is everything still okay?  */
    if (status == TX_SUCCESS)
10002c22:	b978      	cbnz	r0, 10002c44 <_txe_byte_allocate+0x34>
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10002c24:	f3ef 8e05 	mrs	lr, IPSR
    {

        /* Check for interrupt call.  */
        if (TX_THREAD_GET_SYSTEM_STATE() != ((ULONG) 0))
10002c28:	4c1b      	ldr	r4, [pc, #108]	; (10002c98 <_txe_byte_allocate+0x88>)
10002c2a:	6824      	ldr	r4, [r4, #0]
10002c2c:	ea54 040e 	orrs.w	r4, r4, lr
10002c30:	d008      	beq.n	10002c44 <_txe_byte_allocate+0x34>
10002c32:	f3ef 8e05 	mrs	lr, IPSR
        {

            /* Now, make sure the call is from an interrupt and not initialization.  */
            if (TX_THREAD_GET_SYSTEM_STATE() < TX_INITIALIZE_IN_PROGRESS)
10002c36:	4c18      	ldr	r4, [pc, #96]	; (10002c98 <_txe_byte_allocate+0x88>)
10002c38:	6824      	ldr	r4, [r4, #0]
10002c3a:	ea44 040e 	orr.w	r4, r4, lr
10002c3e:	f1b4 3ff0 	cmp.w	r4, #4042322160	; 0xf0f0f0f0
10002c42:	d325      	bcc.n	10002c90 <_txe_byte_allocate+0x80>
            }
        }
    }

    /* Determine if everything is okay.  */
    if (status == TX_SUCCESS)
10002c44:	b300      	cbz	r0, 10002c88 <_txe_byte_allocate+0x78>
        status =  _tx_byte_allocate(pool_ptr, memory_ptr, memory_size,  wait_option);
    }

    /* Return completion status.  */
    return(status);
}
10002c46:	bd10      	pop	{r4, pc}
    else if (memory_ptr == TX_NULL)
10002c48:	b1a1      	cbz	r1, 10002c74 <_txe_byte_allocate+0x64>
    else if (memory_size == ((ULONG) 0))
10002c4a:	b1aa      	cbz	r2, 10002c78 <_txe_byte_allocate+0x68>
    else if (memory_size > pool_ptr -> tx_byte_pool_size)
10002c4c:	f8dc 001c 	ldr.w	r0, [ip, #28]
10002c50:	4290      	cmp	r0, r2
10002c52:	d313      	bcc.n	10002c7c <_txe_byte_allocate+0x6c>
        if (wait_option != TX_NO_WAIT)
10002c54:	b12b      	cbz	r3, 10002c62 <_txe_byte_allocate+0x52>
10002c56:	f3ef 8005 	mrs	r0, IPSR
            if (TX_THREAD_GET_SYSTEM_STATE() != ((ULONG) 0))
10002c5a:	4c0f      	ldr	r4, [pc, #60]	; (10002c98 <_txe_byte_allocate+0x88>)
10002c5c:	6824      	ldr	r4, [r4, #0]
10002c5e:	4320      	orrs	r0, r4
10002c60:	d10e      	bne.n	10002c80 <_txe_byte_allocate+0x70>
        TX_THREAD_GET_CURRENT(thread_ptr)
10002c62:	480e      	ldr	r0, [pc, #56]	; (10002c9c <_txe_byte_allocate+0x8c>)
10002c64:	6804      	ldr	r4, [r0, #0]
        if (thread_ptr == &_tx_timer_thread)
10002c66:	480e      	ldr	r0, [pc, #56]	; (10002ca0 <_txe_byte_allocate+0x90>)
10002c68:	4284      	cmp	r4, r0
10002c6a:	d00b      	beq.n	10002c84 <_txe_byte_allocate+0x74>
10002c6c:	2000      	movs	r0, #0
10002c6e:	e7d8      	b.n	10002c22 <_txe_byte_allocate+0x12>
        status =  TX_POOL_ERROR;
10002c70:	2002      	movs	r0, #2
10002c72:	e7d6      	b.n	10002c22 <_txe_byte_allocate+0x12>
        status =  TX_PTR_ERROR;
10002c74:	2003      	movs	r0, #3
10002c76:	e7d4      	b.n	10002c22 <_txe_byte_allocate+0x12>
        status =  TX_SIZE_ERROR;
10002c78:	2005      	movs	r0, #5
10002c7a:	e7d2      	b.n	10002c22 <_txe_byte_allocate+0x12>
        status =  TX_SIZE_ERROR;
10002c7c:	2005      	movs	r0, #5
10002c7e:	e7d0      	b.n	10002c22 <_txe_byte_allocate+0x12>
                status =  TX_WAIT_ERROR;
10002c80:	2004      	movs	r0, #4
10002c82:	e7ce      	b.n	10002c22 <_txe_byte_allocate+0x12>
            status =  TX_CALLER_ERROR;
10002c84:	2013      	movs	r0, #19
10002c86:	e7dd      	b.n	10002c44 <_txe_byte_allocate+0x34>
        status =  _tx_byte_allocate(pool_ptr, memory_ptr, memory_size,  wait_option);
10002c88:	4660      	mov	r0, ip
10002c8a:	f7fe ff41 	bl	10001b10 <_tx_byte_allocate>
10002c8e:	e7da      	b.n	10002c46 <_txe_byte_allocate+0x36>
                status =  TX_CALLER_ERROR;
10002c90:	2013      	movs	r0, #19
    return(status);
10002c92:	e7d8      	b.n	10002c46 <_txe_byte_allocate+0x36>
10002c94:	42595445 	subsmi	r5, r9, #1157627904	; 0x45000000
10002c98:	38000004 	stmdacc	r0, {r2}
10002c9c:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
10002ca0:	3800134c 	stmdacc	r0, {r2, r3, r6, r8, r9, ip}

10002ca4 <_txe_byte_pool_create>:

    /* Default status to success.  */
    status =  TX_SUCCESS;

    /* Check for an invalid byte pool pointer.  */
    if (pool_ptr == TX_NULL)
10002ca4:	2800      	cmp	r0, #0
10002ca6:	d050      	beq.n	10002d4a <_txe_byte_pool_create+0xa6>
{
10002ca8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
10002cac:	4689      	mov	r9, r1
10002cae:	4617      	mov	r7, r2
10002cb0:	4698      	mov	r8, r3
10002cb2:	4606      	mov	r6, r0
        /* Byte pool pointer is invalid, return appropriate error code.  */
        status =  TX_POOL_ERROR;
    }

    /* Now see if the pool control block size is valid.  */
    else if (pool_control_block_size != (sizeof(TX_BYTE_POOL)))
10002cb4:	9b08      	ldr	r3, [sp, #32]
10002cb6:	2b34      	cmp	r3, #52	; 0x34
10002cb8:	d002      	beq.n	10002cc0 <_txe_byte_pool_create+0x1c>
    {

        /* Byte pool pointer is invalid, return appropriate error code.  */
        status =  TX_POOL_ERROR;
10002cba:	2002      	movs	r0, #2
        status =  _tx_byte_pool_create(pool_ptr, name_ptr, pool_start, pool_size);
    }

    /* Return completion status.  */
    return(status);
}
10002cbc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002cc0:	f3ef 8110 	mrs	r1, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002cc4:	b672      	cpsid	i
        _tx_thread_preempt_disable++;
10002cc6:	4a26      	ldr	r2, [pc, #152]	; (10002d60 <_txe_byte_pool_create+0xbc>)
10002cc8:	6813      	ldr	r3, [r2, #0]
10002cca:	3301      	adds	r3, #1
10002ccc:	6013      	str	r3, [r2, #0]
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002cce:	f381 8810 	msr	PRIMASK, r1
        next_pool =   _tx_byte_pool_created_ptr;
10002cd2:	4b24      	ldr	r3, [pc, #144]	; (10002d64 <_txe_byte_pool_create+0xc0>)
10002cd4:	681c      	ldr	r4, [r3, #0]
        for (i = ((ULONG) 0); i < _tx_byte_pool_created_count; i++)
10002cd6:	2000      	movs	r0, #0
10002cd8:	4d23      	ldr	r5, [pc, #140]	; (10002d68 <_txe_byte_pool_create+0xc4>)
10002cda:	682d      	ldr	r5, [r5, #0]
10002cdc:	4285      	cmp	r5, r0
10002cde:	d904      	bls.n	10002cea <_txe_byte_pool_create+0x46>
            if (pool_ptr == next_pool)
10002ce0:	42b4      	cmp	r4, r6
10002ce2:	d002      	beq.n	10002cea <_txe_byte_pool_create+0x46>
                next_pool =  next_pool -> tx_byte_pool_created_next;
10002ce4:	6ae4      	ldr	r4, [r4, #44]	; 0x2c
        for (i = ((ULONG) 0); i < _tx_byte_pool_created_count; i++)
10002ce6:	3001      	adds	r0, #1
10002ce8:	e7f6      	b.n	10002cd8 <_txe_byte_pool_create+0x34>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002cea:	f3ef 8110 	mrs	r1, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002cee:	b672      	cpsid	i
        _tx_thread_preempt_disable--;
10002cf0:	4a1b      	ldr	r2, [pc, #108]	; (10002d60 <_txe_byte_pool_create+0xbc>)
10002cf2:	6813      	ldr	r3, [r2, #0]
10002cf4:	3b01      	subs	r3, #1
10002cf6:	6013      	str	r3, [r2, #0]
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002cf8:	f381 8810 	msr	PRIMASK, r1
        _tx_thread_system_preempt_check();
10002cfc:	f7ff f9c2 	bl	10002084 <_tx_thread_system_preempt_check>
        if (pool_ptr == next_pool)
10002d00:	42b4      	cmp	r4, r6
10002d02:	d024      	beq.n	10002d4e <_txe_byte_pool_create+0xaa>
        else if (pool_start == TX_NULL)
10002d04:	b32f      	cbz	r7, 10002d52 <_txe_byte_pool_create+0xae>
        else if (pool_size < TX_BYTE_POOL_MIN)
10002d06:	f1b8 0f63 	cmp.w	r8, #99	; 0x63
10002d0a:	d924      	bls.n	10002d56 <_txe_byte_pool_create+0xb2>
            TX_THREAD_GET_CURRENT(thread_ptr)
10002d0c:	4b17      	ldr	r3, [pc, #92]	; (10002d6c <_txe_byte_pool_create+0xc8>)
10002d0e:	681a      	ldr	r2, [r3, #0]
            if (thread_ptr == &_tx_timer_thread)
10002d10:	4b17      	ldr	r3, [pc, #92]	; (10002d70 <_txe_byte_pool_create+0xcc>)
10002d12:	429a      	cmp	r2, r3
10002d14:	d017      	beq.n	10002d46 <_txe_byte_pool_create+0xa2>
    status =  TX_SUCCESS;
10002d16:	2000      	movs	r0, #0
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10002d18:	f3ef 8305 	mrs	r3, IPSR
            if (TX_THREAD_GET_SYSTEM_STATE() != ((ULONG) 0))
10002d1c:	4a15      	ldr	r2, [pc, #84]	; (10002d74 <_txe_byte_pool_create+0xd0>)
10002d1e:	6812      	ldr	r2, [r2, #0]
10002d20:	4313      	orrs	r3, r2
10002d22:	d007      	beq.n	10002d34 <_txe_byte_pool_create+0x90>
10002d24:	f3ef 8205 	mrs	r2, IPSR
                if (TX_THREAD_GET_SYSTEM_STATE() < TX_INITIALIZE_IN_PROGRESS)
10002d28:	4b12      	ldr	r3, [pc, #72]	; (10002d74 <_txe_byte_pool_create+0xd0>)
10002d2a:	681b      	ldr	r3, [r3, #0]
10002d2c:	4313      	orrs	r3, r2
10002d2e:	f1b3 3ff0 	cmp.w	r3, #4042322160	; 0xf0f0f0f0
10002d32:	d312      	bcc.n	10002d5a <_txe_byte_pool_create+0xb6>
    if (status == TX_SUCCESS)
10002d34:	2800      	cmp	r0, #0
10002d36:	d1c1      	bne.n	10002cbc <_txe_byte_pool_create+0x18>
        status =  _tx_byte_pool_create(pool_ptr, name_ptr, pool_start, pool_size);
10002d38:	4643      	mov	r3, r8
10002d3a:	463a      	mov	r2, r7
10002d3c:	4649      	mov	r1, r9
10002d3e:	4630      	mov	r0, r6
10002d40:	f7fe ff58 	bl	10001bf4 <_tx_byte_pool_create>
10002d44:	e7ba      	b.n	10002cbc <_txe_byte_pool_create+0x18>
                status =  TX_CALLER_ERROR;
10002d46:	2013      	movs	r0, #19
10002d48:	e7e6      	b.n	10002d18 <_txe_byte_pool_create+0x74>
        status =  TX_POOL_ERROR;
10002d4a:	2002      	movs	r0, #2
}
10002d4c:	4770      	bx	lr
            status =  TX_POOL_ERROR;
10002d4e:	2002      	movs	r0, #2
10002d50:	e7b4      	b.n	10002cbc <_txe_byte_pool_create+0x18>
            status =  TX_PTR_ERROR;
10002d52:	2003      	movs	r0, #3
10002d54:	e7b2      	b.n	10002cbc <_txe_byte_pool_create+0x18>
            status =  TX_SIZE_ERROR;
10002d56:	2005      	movs	r0, #5
10002d58:	e7b0      	b.n	10002cbc <_txe_byte_pool_create+0x18>
                    status =  TX_CALLER_ERROR;
10002d5a:	2013      	movs	r0, #19
    return(status);
10002d5c:	e7ae      	b.n	10002cbc <_txe_byte_pool_create+0x18>
10002d5e:	bf00      	nop
10002d60:	3800120c 	stmdacc	r0, {r2, r3, r9, ip}
10002d64:	380011a0 	stmdacc	r0, {r5, r7, r8, ip}
10002d68:	3800119c 	stmdacc	r0, {r2, r3, r4, r7, r8, ip}
10002d6c:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
10002d70:	3800134c 	stmdacc	r0, {r2, r3, r6, r8, r9, ip}
10002d74:	38000004 	stmdacc	r0, {r2}

10002d78 <_txe_thread_create>:
UINT    _txe_thread_create(TX_THREAD *thread_ptr, CHAR *name_ptr,
                VOID (*entry_function)(ULONG id), ULONG entry_input,
                VOID *stack_start, ULONG stack_size,
                UINT priority, UINT preempt_threshold,
                ULONG time_slice, UINT auto_start, UINT thread_control_block_size)
{
10002d78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10002d7c:	b086      	sub	sp, #24
10002d7e:	9e0e      	ldr	r6, [sp, #56]	; 0x38

    /* Default status to success.  */
    status =  TX_SUCCESS;

    /* Check for an invalid thread pointer.  */
    if (thread_ptr == TX_NULL)
10002d80:	2800      	cmp	r0, #0
10002d82:	d07e      	beq.n	10002e82 <_txe_thread_create+0x10a>
10002d84:	4689      	mov	r9, r1
10002d86:	4690      	mov	r8, r2
10002d88:	469a      	mov	sl, r3
10002d8a:	4607      	mov	r7, r0
        /* Thread pointer is invalid, return appropriate error code.  */
        status =  TX_THREAD_ERROR;
    }

    /* Now check for invalid thread control block size.  */
    else if (thread_control_block_size != (sizeof(TX_THREAD)))
10002d8c:	9b14      	ldr	r3, [sp, #80]	; 0x50
10002d8e:	2bd8      	cmp	r3, #216	; 0xd8
10002d90:	d003      	beq.n	10002d9a <_txe_thread_create+0x22>
    {

        /* Thread pointer is invalid, return appropriate error code.  */
        status =  TX_THREAD_ERROR;
10002d92:	200e      	movs	r0, #14
                        time_slice, auto_start);
    }

    /* Return completion status.  */
    return(status);
}
10002d94:	b006      	add	sp, #24
10002d96:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002d9a:	f3ef 8110 	mrs	r1, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002d9e:	b672      	cpsid	i
        _tx_thread_preempt_disable++;
10002da0:	4a41      	ldr	r2, [pc, #260]	; (10002ea8 <_txe_thread_create+0x130>)
10002da2:	6813      	ldr	r3, [r2, #0]
10002da4:	3301      	adds	r3, #1
10002da6:	6013      	str	r3, [r2, #0]
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002da8:	f381 8810 	msr	PRIMASK, r1
        next_thread =  _tx_thread_created_ptr;
10002dac:	4b3f      	ldr	r3, [pc, #252]	; (10002eac <_txe_thread_create+0x134>)
10002dae:	681c      	ldr	r4, [r3, #0]
        work_ptr =     TX_UCHAR_POINTER_ADD(work_ptr, (stack_size - ((ULONG) 1)));
10002db0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10002db2:	1e5a      	subs	r2, r3, #1
10002db4:	4432      	add	r2, r6
        for (i = ((ULONG) 0); i < _tx_thread_created_count; i++)
10002db6:	2000      	movs	r0, #0
        break_flag =   TX_FALSE;
10002db8:	4601      	mov	r1, r0
        for (i = ((ULONG) 0); i < _tx_thread_created_count; i++)
10002dba:	e002      	b.n	10002dc2 <_txe_thread_create+0x4a>
            next_thread =  next_thread -> tx_thread_created_next;
10002dbc:	f8d4 4088 	ldr.w	r4, [r4, #136]	; 0x88
        for (i = ((ULONG) 0); i < _tx_thread_created_count; i++)
10002dc0:	3001      	adds	r0, #1
10002dc2:	4b3b      	ldr	r3, [pc, #236]	; (10002eb0 <_txe_thread_create+0x138>)
10002dc4:	681b      	ldr	r3, [r3, #0]
10002dc6:	4283      	cmp	r3, r0
10002dc8:	d912      	bls.n	10002df0 <_txe_thread_create+0x78>
            if (thread_ptr == next_thread)
10002dca:	42bc      	cmp	r4, r7
10002dcc:	d010      	beq.n	10002df0 <_txe_thread_create+0x78>
            if (break_flag == TX_TRUE)
10002dce:	b979      	cbnz	r1, 10002df0 <_txe_thread_create+0x78>
            if (stack_start >= next_thread -> tx_thread_stack_start)
10002dd0:	68e5      	ldr	r5, [r4, #12]
10002dd2:	42b5      	cmp	r5, r6
10002dd4:	d804      	bhi.n	10002de0 <_txe_thread_create+0x68>
                if (stack_start < next_thread -> tx_thread_stack_end)
10002dd6:	6923      	ldr	r3, [r4, #16]
10002dd8:	42b3      	cmp	r3, r6
10002dda:	d901      	bls.n	10002de0 <_txe_thread_create+0x68>
                    break_flag =  TX_TRUE;
10002ddc:	2101      	movs	r1, #1
                    stack_start =  TX_NULL;
10002dde:	2600      	movs	r6, #0
            if (stack_end >= next_thread -> tx_thread_stack_start)
10002de0:	4295      	cmp	r5, r2
10002de2:	d8eb      	bhi.n	10002dbc <_txe_thread_create+0x44>
                if (stack_end < next_thread -> tx_thread_stack_end)
10002de4:	6923      	ldr	r3, [r4, #16]
10002de6:	4293      	cmp	r3, r2
10002de8:	d9e8      	bls.n	10002dbc <_txe_thread_create+0x44>
                    break_flag =  TX_TRUE;
10002dea:	2101      	movs	r1, #1
                    stack_start =  TX_NULL;
10002dec:	2600      	movs	r6, #0
10002dee:	e7e5      	b.n	10002dbc <_txe_thread_create+0x44>
    __asm__ volatile ("MRS  %0, PRIMASK ": "=r" (posture));
10002df0:	f3ef 8110 	mrs	r1, PRIMASK
    __asm__ volatile ("CPSID i" : : : "memory");
10002df4:	b672      	cpsid	i
        _tx_thread_preempt_disable--;
10002df6:	4a2c      	ldr	r2, [pc, #176]	; (10002ea8 <_txe_thread_create+0x130>)
10002df8:	6813      	ldr	r3, [r2, #0]
10002dfa:	3b01      	subs	r3, #1
10002dfc:	6013      	str	r3, [r2, #0]
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
10002dfe:	f381 8810 	msr	PRIMASK, r1
        _tx_thread_system_preempt_check();
10002e02:	f7ff f93f 	bl	10002084 <_tx_thread_system_preempt_check>
        if (thread_ptr == next_thread)
10002e06:	42bc      	cmp	r4, r7
10002e08:	d03d      	beq.n	10002e86 <_txe_thread_create+0x10e>
        else if (stack_start == TX_NULL)
10002e0a:	2e00      	cmp	r6, #0
10002e0c:	d03d      	beq.n	10002e8a <_txe_thread_create+0x112>
        else if (entry_function == TX_NULL)
10002e0e:	f1b8 0f00 	cmp.w	r8, #0
10002e12:	d03c      	beq.n	10002e8e <_txe_thread_create+0x116>
        else if (stack_size < ((ULONG) TX_MINIMUM_STACK))
10002e14:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10002e16:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
10002e1a:	d33a      	bcc.n	10002e92 <_txe_thread_create+0x11a>
        else if (priority >= ((UINT) TX_MAX_PRIORITIES))
10002e1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
10002e1e:	2b1f      	cmp	r3, #31
10002e20:	d839      	bhi.n	10002e96 <_txe_thread_create+0x11e>
        else if (preempt_threshold > priority)
10002e22:	9a11      	ldr	r2, [sp, #68]	; 0x44
10002e24:	4293      	cmp	r3, r2
10002e26:	d338      	bcc.n	10002e9a <_txe_thread_create+0x122>
        else if (auto_start > TX_AUTO_START)
10002e28:	9b13      	ldr	r3, [sp, #76]	; 0x4c
10002e2a:	2b01      	cmp	r3, #1
10002e2c:	d837      	bhi.n	10002e9e <_txe_thread_create+0x126>
            TX_THREAD_GET_CURRENT(current_thread)
10002e2e:	4b21      	ldr	r3, [pc, #132]	; (10002eb4 <_txe_thread_create+0x13c>)
10002e30:	681a      	ldr	r2, [r3, #0]
            if (current_thread == &_tx_timer_thread)
10002e32:	4b21      	ldr	r3, [pc, #132]	; (10002eb8 <_txe_thread_create+0x140>)
10002e34:	429a      	cmp	r2, r3
10002e36:	d022      	beq.n	10002e7e <_txe_thread_create+0x106>
    status =  TX_SUCCESS;
10002e38:	2000      	movs	r0, #0
    __asm__ volatile (" MRS  %0,IPSR ": "=r" (ipsr_value) );
10002e3a:	f3ef 8305 	mrs	r3, IPSR
            if (TX_THREAD_GET_SYSTEM_STATE() != ((ULONG) 0))
10002e3e:	4a1f      	ldr	r2, [pc, #124]	; (10002ebc <_txe_thread_create+0x144>)
10002e40:	6812      	ldr	r2, [r2, #0]
10002e42:	4313      	orrs	r3, r2
10002e44:	d007      	beq.n	10002e56 <_txe_thread_create+0xde>
10002e46:	f3ef 8205 	mrs	r2, IPSR
                if (TX_THREAD_GET_SYSTEM_STATE() < TX_INITIALIZE_IN_PROGRESS)
10002e4a:	4b1c      	ldr	r3, [pc, #112]	; (10002ebc <_txe_thread_create+0x144>)
10002e4c:	681b      	ldr	r3, [r3, #0]
10002e4e:	4313      	orrs	r3, r2
10002e50:	f1b3 3ff0 	cmp.w	r3, #4042322160	; 0xf0f0f0f0
10002e54:	d325      	bcc.n	10002ea2 <_txe_thread_create+0x12a>
    if (status == TX_SUCCESS)
10002e56:	2800      	cmp	r0, #0
10002e58:	d19c      	bne.n	10002d94 <_txe_thread_create+0x1c>
        status =  _tx_thread_create(thread_ptr, name_ptr, entry_function, entry_input,
10002e5a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
10002e5c:	9305      	str	r3, [sp, #20]
10002e5e:	9b12      	ldr	r3, [sp, #72]	; 0x48
10002e60:	9304      	str	r3, [sp, #16]
10002e62:	9b11      	ldr	r3, [sp, #68]	; 0x44
10002e64:	9303      	str	r3, [sp, #12]
10002e66:	9b10      	ldr	r3, [sp, #64]	; 0x40
10002e68:	9302      	str	r3, [sp, #8]
10002e6a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
10002e6c:	9301      	str	r3, [sp, #4]
10002e6e:	9600      	str	r6, [sp, #0]
10002e70:	4653      	mov	r3, sl
10002e72:	4642      	mov	r2, r8
10002e74:	4649      	mov	r1, r9
10002e76:	4638      	mov	r0, r7
10002e78:	f7fe ffa0 	bl	10001dbc <_tx_thread_create>
10002e7c:	e78a      	b.n	10002d94 <_txe_thread_create+0x1c>
                status =  TX_CALLER_ERROR;
10002e7e:	2013      	movs	r0, #19
10002e80:	e7db      	b.n	10002e3a <_txe_thread_create+0xc2>
        status =  TX_THREAD_ERROR;
10002e82:	200e      	movs	r0, #14
10002e84:	e786      	b.n	10002d94 <_txe_thread_create+0x1c>
            status =  TX_THREAD_ERROR;
10002e86:	200e      	movs	r0, #14
10002e88:	e784      	b.n	10002d94 <_txe_thread_create+0x1c>
            status =  TX_PTR_ERROR;
10002e8a:	2003      	movs	r0, #3
10002e8c:	e782      	b.n	10002d94 <_txe_thread_create+0x1c>
            status =  TX_PTR_ERROR;
10002e8e:	2003      	movs	r0, #3
10002e90:	e780      	b.n	10002d94 <_txe_thread_create+0x1c>
            status =  TX_SIZE_ERROR;
10002e92:	2005      	movs	r0, #5
10002e94:	e77e      	b.n	10002d94 <_txe_thread_create+0x1c>
            status =  TX_PRIORITY_ERROR;
10002e96:	200f      	movs	r0, #15
10002e98:	e77c      	b.n	10002d94 <_txe_thread_create+0x1c>
            status =  TX_THRESH_ERROR;
10002e9a:	2018      	movs	r0, #24
10002e9c:	e77a      	b.n	10002d94 <_txe_thread_create+0x1c>
            status =  TX_START_ERROR;
10002e9e:	2010      	movs	r0, #16
10002ea0:	e778      	b.n	10002d94 <_txe_thread_create+0x1c>
                    status =  TX_CALLER_ERROR;
10002ea2:	2013      	movs	r0, #19
    return(status);
10002ea4:	e776      	b.n	10002d94 <_txe_thread_create+0x1c>
10002ea6:	bf00      	nop
10002ea8:	3800120c 	stmdacc	r0, {r2, r3, r9, ip}
10002eac:	380011b4 	stmdacc	r0, {r2, r4, r5, r7, r8, ip}
10002eb0:	380011b0 	stmdacc	r0, {r4, r5, r7, r8, ip}
10002eb4:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
10002eb8:	3800134c 	stmdacc	r0, {r2, r3, r6, r8, r9, ip}
10002ebc:	38000004 	stmdacc	r0, {r2}

10002ec0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
10002ec0:	b510      	push	{r4, lr}
10002ec2:	4603      	mov	r3, r0
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
10002ec4:	4a0c      	ldr	r2, [pc, #48]	; (10002ef8 <_sbrk+0x38>)
10002ec6:	490d      	ldr	r1, [pc, #52]	; (10002efc <_sbrk+0x3c>)
  const uint8_t *max_heap = (uint8_t *)stack_limit;
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
10002ec8:	480d      	ldr	r0, [pc, #52]	; (10002f00 <_sbrk+0x40>)
10002eca:	6800      	ldr	r0, [r0, #0]
10002ecc:	b140      	cbz	r0, 10002ee0 <_sbrk+0x20>
  {
    __sbrk_heap_end = &_end;
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
10002ece:	480c      	ldr	r0, [pc, #48]	; (10002f00 <_sbrk+0x40>)
10002ed0:	6800      	ldr	r0, [r0, #0]
10002ed2:	4403      	add	r3, r0
10002ed4:	1a52      	subs	r2, r2, r1
10002ed6:	4293      	cmp	r3, r2
10002ed8:	d806      	bhi.n	10002ee8 <_sbrk+0x28>
    errno = ENOMEM;
    return (void *)-1;
  }

  prev_heap_end = __sbrk_heap_end;
  __sbrk_heap_end += incr;
10002eda:	4a09      	ldr	r2, [pc, #36]	; (10002f00 <_sbrk+0x40>)
10002edc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
}
10002ede:	bd10      	pop	{r4, pc}
    __sbrk_heap_end = &_end;
10002ee0:	4807      	ldr	r0, [pc, #28]	; (10002f00 <_sbrk+0x40>)
10002ee2:	4c08      	ldr	r4, [pc, #32]	; (10002f04 <_sbrk+0x44>)
10002ee4:	6004      	str	r4, [r0, #0]
10002ee6:	e7f2      	b.n	10002ece <_sbrk+0xe>
    errno = ENOMEM;
10002ee8:	f000 f9d4 	bl	10003294 <__errno>
10002eec:	230c      	movs	r3, #12
10002eee:	6003      	str	r3, [r0, #0]
    return (void *)-1;
10002ef0:	f04f 30ff 	mov.w	r0, #4294967295
10002ef4:	e7f3      	b.n	10002ede <_sbrk+0x1e>
10002ef6:	bf00      	nop
10002ef8:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
10002efc:	00001000 	andeq	r1, r0, r0
10002f00:	38002428 	stmdacc	r0, {r3, r5, sl, sp}
10002f04:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>

10002f08 <_getpid>:
}

int _getpid(void)
{
  return 1;
}
10002f08:	2001      	movs	r0, #1
10002f0a:	4770      	bx	lr

10002f0c <_kill>:

int _kill(int pid, int sig)
{
10002f0c:	b508      	push	{r3, lr}
  (void)pid;
  (void)sig;
  errno = EINVAL;
10002f0e:	f000 f9c1 	bl	10003294 <__errno>
10002f12:	2316      	movs	r3, #22
10002f14:	6003      	str	r3, [r0, #0]
  return -1;
}
10002f16:	f04f 30ff 	mov.w	r0, #4294967295
10002f1a:	bd08      	pop	{r3, pc}

10002f1c <_exit>:

void _exit (int status)
{
10002f1c:	b508      	push	{r3, lr}
  _kill(status, -1);
10002f1e:	f04f 31ff 	mov.w	r1, #4294967295
10002f22:	f7ff fff3 	bl	10002f0c <_kill>
  while (1) {}    /* Make sure we hang here */
10002f26:	e7fe      	b.n	10002f26 <_exit+0xa>

10002f28 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
10002f28:	b570      	push	{r4, r5, r6, lr}
10002f2a:	460c      	mov	r4, r1
10002f2c:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
10002f2e:	2500      	movs	r5, #0
10002f30:	e006      	b.n	10002f40 <_read+0x18>
  {
    *ptr++ = __io_getchar();
10002f32:	e000      	b.n	10002f36 <_read+0xe>
10002f34:	bf00      	nop
10002f36:	4621      	mov	r1, r4
10002f38:	f801 0b01 	strb.w	r0, [r1], #1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
10002f3c:	3501      	adds	r5, #1
    *ptr++ = __io_getchar();
10002f3e:	460c      	mov	r4, r1
  for (DataIdx = 0; DataIdx < len; DataIdx++)
10002f40:	42b5      	cmp	r5, r6
10002f42:	dbf6      	blt.n	10002f32 <_read+0xa>
  }

  return len;
}
10002f44:	4630      	mov	r0, r6
10002f46:	bd70      	pop	{r4, r5, r6, pc}

10002f48 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
10002f48:	b570      	push	{r4, r5, r6, lr}
10002f4a:	460c      	mov	r4, r1
10002f4c:	4616      	mov	r6, r2
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
10002f4e:	2500      	movs	r5, #0
10002f50:	e004      	b.n	10002f5c <_write+0x14>
  {
    __io_putchar(*ptr++);
10002f52:	f814 0b01 	ldrb.w	r0, [r4], #1
10002f56:	e000      	b.n	10002f5a <_write+0x12>
10002f58:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
10002f5a:	3501      	adds	r5, #1
10002f5c:	42b5      	cmp	r5, r6
10002f5e:	dbf8      	blt.n	10002f52 <_write+0xa>
  }
  return len;
}
10002f60:	4630      	mov	r0, r6
10002f62:	bd70      	pop	{r4, r5, r6, pc}

10002f64 <_close>:

int _close(int file)
{
  (void)file;
  return -1;
}
10002f64:	f04f 30ff 	mov.w	r0, #4294967295
10002f68:	4770      	bx	lr

10002f6a <_fstat>:


int _fstat(int file, struct stat *st)
{
  (void)file;
  st->st_mode = S_IFCHR;
10002f6a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
10002f6e:	604b      	str	r3, [r1, #4]
  return 0;
}
10002f70:	2000      	movs	r0, #0
10002f72:	4770      	bx	lr

10002f74 <_isatty>:

int _isatty(int file)
{
  (void)file;
  return 1;
}
10002f74:	2001      	movs	r0, #1
10002f76:	4770      	bx	lr

10002f78 <_lseek>:
{
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
}
10002f78:	2000      	movs	r0, #0
10002f7a:	4770      	bx	lr

10002f7c <Reset_Handler>:
                .thumb_func
                .type    Reset_Handler, %function
                .globl   Reset_Handler
                .fnstart
Reset_Handler:
                ldr      r0, =__INITIAL_SP
10002f7c:	4815      	ldr	r0, [pc, #84]	; (10002fd4 <BusFault_Handler+0x4>)
                msr      psp, r0
10002f7e:	f380 8809 	msr	PSP, r0

                ldr      r0, =__STACK_LIMIT
10002f82:	4815      	ldr	r0, [pc, #84]	; (10002fd8 <BusFault_Handler+0x8>)
                msr      msplim, r0
10002f84:	f380 880a 	msr	MSPLIM, r0
                msr      psplim, r0
10002f88:	f380 880b 	msr	PSPLIM, r0
                ldr      r0, =__STACK_SEAL
                ldr      r1, =0xFEF5EDA5U
                strd     r1,r1,[r0,#0]
                #endif

                bl       SystemInit
10002f8c:	f7fd fc94 	bl	100008b8 <SystemInit>

                ldr      r4, =__copy_table_start__
10002f90:	4c12      	ldr	r4, [pc, #72]	; (10002fdc <BusFault_Handler+0xc>)
                ldr      r5, =__copy_table_end__
10002f92:	4d13      	ldr	r5, [pc, #76]	; (10002fe0 <BusFault_Handler+0x10>)

.L_loop0:
                cmp      r4, r5
10002f94:	42ac      	cmp	r4, r5
                bge      .L_loop0_done
10002f96:	da0a      	bge.n	10002fae <Reset_Handler+0x32>
                ldr      r1, [r4]                /* source address */
10002f98:	6821      	ldr	r1, [r4, #0]
                ldr      r2, [r4, #4]            /* destination address */
10002f9a:	6862      	ldr	r2, [r4, #4]
                ldr      r3, [r4, #8]            /* word count */
10002f9c:	68a3      	ldr	r3, [r4, #8]
                lsls     r3, r3, #2              /* byte count */
10002f9e:	009b      	lsls	r3, r3, #2

.L_loop0_0:
                subs     r3, #4                  /* decrement byte count */
10002fa0:	3b04      	subs	r3, #4
                ittt     ge
10002fa2:	bfa2      	ittt	ge
                ldrge    r0, [r1, r3]
10002fa4:	58c8      	ldrge	r0, [r1, r3]
                strge    r0, [r2, r3]
10002fa6:	50d0      	strge	r0, [r2, r3]
                bge      .L_loop0_0
10002fa8:	e7fa      	bge.n	10002fa0 <Reset_Handler+0x24>

                adds     r4, #12
10002faa:	340c      	adds	r4, #12
                b        .L_loop0
10002fac:	e7f2      	b.n	10002f94 <Reset_Handler+0x18>
.L_loop0_done:

                ldr      r3, =__zero_table_start__
10002fae:	4b0d      	ldr	r3, [pc, #52]	; (10002fe4 <BusFault_Handler+0x14>)
                ldr      r4, =__zero_table_end__
10002fb0:	4c0d      	ldr	r4, [pc, #52]	; (10002fe8 <BusFault_Handler+0x18>)

.L_loop2:
                cmp      r3, r4
10002fb2:	42a3      	cmp	r3, r4
                bge      .L_loop2_done
10002fb4:	da09      	bge.n	10002fca <Reset_Handler+0x4e>
                ldr      r1, [r3]                /* destination address */
10002fb6:	6819      	ldr	r1, [r3, #0]
                ldr      r2, [r3, #4]            /* word count */
10002fb8:	685a      	ldr	r2, [r3, #4]
                lsls     r2, r2, #2              /* byte count */
10002fba:	0092      	lsls	r2, r2, #2
                movs     r0, 0
10002fbc:	2000      	movs	r0, #0

.L_loop2_0:
                subs     r2, #4                  /* decrement byte count */
10002fbe:	3a04      	subs	r2, #4
                itt      ge
10002fc0:	bfa4      	itt	ge
                strge    r0, [r1, r2]
10002fc2:	5088      	strge	r0, [r1, r2]
                bge      .L_loop2_0
10002fc4:	e7fb      	bge.n	10002fbe <Reset_Handler+0x42>

                adds     r3, #8
10002fc6:	3308      	adds	r3, #8
                b        .L_loop2
10002fc8:	e7f3      	b.n	10002fb2 <Reset_Handler+0x36>
.L_loop2_done:

                bl       main
10002fca:	f7fd fc61 	bl	10000890 <main>
                .thumb_func
                .type    HardFault_Handler, %function
                .weak    HardFault_Handler
                .fnstart
HardFault_Handler:
                b        .
10002fce:	e7fe      	b.n	10002fce <Reset_Handler+0x52>

10002fd0 <BusFault_Handler>:
                .thumb_func
                .type    Default_Handler, %function
                .weak    Default_Handler
                .fnstart
Default_Handler:
                b        .
10002fd0:	e7fe      	b.n	10002fd0 <BusFault_Handler>
10002fd2:	00000000 	andeq	r0, r0, r0
                ldr      r0, =__INITIAL_SP
10002fd6:	f0003810 			; <UNDEFINED> instruction: 0xf0003810
                ldr      r0, =__STACK_LIMIT
10002fda:	6234380f 	eorsvs	r3, r4, #983040	; 0xf0000
                ldr      r4, =__copy_table_start__
10002fde:	62401000 	subvs	r1, r0, #0
                ldr      r5, =__copy_table_end__
10002fe2:	62401000 	subvs	r1, r0, #0
                ldr      r3, =__zero_table_start__
10002fe6:	62401000 	subvs	r1, r0, #0
                ldr      r4, =__zero_table_end__
10002fea:	 	ldrbtlt	r1, [r2], -r0

10002fec <_tx_initialize_low_level>:
    .thumb_func
.type _tx_initialize_low_level, function
_tx_initialize_low_level:

    /* Disable interrupts during ThreadX initialization.  */
    CPSID   i
10002fec:	b672      	cpsid	i

    /* Set base of available memory to end of non-initialised RAM area.  */
    LDR     r0, =_tx_initialize_unused_memory       // Build address of unused memory pointer
10002fee:	482c      	ldr	r0, [pc, #176]	; (100030a0 <__tx_DBGHandler+0x4>)
    LDR     r1, =__RAM_segment_used_end__           // Build first free address
10002ff0:	492c      	ldr	r1, [pc, #176]	; (100030a4 <__tx_DBGHandler+0x8>)
    ADD     r1, r1, #4                              //
10002ff2:	f101 0104 	add.w	r1, r1, #4
    STR     r1, [r0]                                // Setup first unused memory pointer
10002ff6:	6001      	str	r1, [r0, #0]

    /* Setup Vector Table Offset Register.  */
    MOV     r0, #0xE000E000                         // Build address of NVIC registers
10002ff8:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    LDR     r1, =__Vectors                          // Pickup address of vector table
10002ffc:	492a      	ldr	r1, [pc, #168]	; (100030a8 <__tx_DBGHandler+0xc>)
    STR     r1, [r0, #0xD08]                        // Set vector table address
10002ffe:	f8c0 1d08 	str.w	r1, [r0, #3336]	; 0xd08

    /* Enable the cycle count register.  */
    LDR     r0, =0xE0001000                         // Build address of DWT register
10003002:	482a      	ldr	r0, [pc, #168]	; (100030ac <__tx_DBGHandler+0x10>)
    LDR     r1, [r0]                                // Pickup the current value
10003004:	6801      	ldr	r1, [r0, #0]
    ORR     r1, r1, #1                              // Set the CYCCNTENA bit
10003006:	f041 0101 	orr.w	r1, r1, #1
    STR     r1, [r0]                                // Enable the cycle count register
1000300a:	6001      	str	r1, [r0, #0]

    /* Set system stack pointer from vector value.  */
    LDR     r0, =_tx_thread_system_stack_ptr        // Build address of system stack pointer
1000300c:	4828      	ldr	r0, [pc, #160]	; (100030b0 <__tx_DBGHandler+0x14>)
    LDR     r1, =__Vectors                          // Pickup address of vector table
1000300e:	4926      	ldr	r1, [pc, #152]	; (100030a8 <__tx_DBGHandler+0xc>)
    LDR     r1, [r1]                                // Pickup reset stack pointer
10003010:	6809      	ldr	r1, [r1, #0]
    STR     r1, [r0]                                // Save system stack pointer
10003012:	6001      	str	r1, [r0, #0]

    /* Configure SysTick.  */
    MOV     r0, #0xE000E000                         // Build address of NVIC registers
10003014:	f04f 20e0 	mov.w	r0, #3758153728	; 0xe000e000
    LDR     r1, =SYSTICK_CYCLES
10003018:	4926      	ldr	r1, [pc, #152]	; (100030b4 <__tx_DBGHandler+0x18>)
    STR     r1, [r0, #0x14]                         // Setup SysTick Reload Value
1000301a:	6141      	str	r1, [r0, #20]
    MOV     r1, #0x7                                // Build SysTick Control Enable Value
1000301c:	f04f 0107 	mov.w	r1, #7
    STR     r1, [r0, #0x10]                         // Setup SysTick Control
10003020:	6101      	str	r1, [r0, #16]

    /* Configure handler priorities.  */
    LDR     r1, =0x00000000                         // Rsrv, UsgF, BusF, MemM
10003022:	f04f 0100 	mov.w	r1, #0
    STR     r1, [r0, #0xD18]                        // Setup System Handlers 4-7 Priority Registers
10003026:	f8c0 1d18 	str.w	r1, [r0, #3352]	; 0xd18
    LDR     r1, =0xFF000000                         // SVCl, Rsrv, Rsrv, Rsrv
1000302a:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    STR     r1, [r0, #0xD1C]                        // Setup System Handlers 8-11 Priority Registers
1000302e:	f8c0 1d1c 	str.w	r1, [r0, #3356]	; 0xd1c
                                                    // Note: SVC must be lowest priority, which is 0xFF
    LDR     r1, =0x40FF0000                         // SysT, PnSV, Rsrv, DbgM
10003032:	4921      	ldr	r1, [pc, #132]	; (100030b8 <__tx_DBGHandler+0x1c>)
    STR     r1, [r0, #0xD20]                        // Setup System Handlers 12-15 Priority Registers
10003034:	f8c0 1d20 	str.w	r1, [r0, #3360]	; 0xd20
                                                    // Note: PnSV must be lowest priority, which is 0xFF

    /* Return to caller.  */
    BX      lr
10003038:	4770      	bx	lr
1000303a:	bf00      	nop

1000303c <__tx_BadHandler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  __tx_BadHandler
    .thumb_func
.type __tx_BadHandler, function
__tx_BadHandler:
    B       __tx_BadHandler
1000303c:	f7ff bffe 	b.w	1000303c <__tx_BadHandler>

10003040 <__tx_IntHandler>:
    .thumb_func
.type __tx_IntHandler, function
__tx_IntHandler:
// VOID InterruptHandler (VOID)
// {
    PUSH    {r0,lr}     // Save LR (and dummy r0 to maintain stack alignment)
10003040:	b501      	push	{r0, lr}
    /* Do interrupt handler work here */
    /* .... */
#if (defined(TX_ENABLE_EXECUTION_CHANGE_NOTIFY) || defined(TX_EXECUTION_PROFILE_ENABLE))
    BL      _tx_execution_isr_exit              // Call the ISR exit function
#endif
    POP     {r0,lr}
10003042:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
    BX      lr
10003046:	4770      	bx	lr

10003048 <SysTick_Handler>:
    .thumb_func
.type SysTick_Handler, function
SysTick_Handler:
// VOID TimerInterruptHandler (VOID)
// {
    PUSH    {r0,lr}     // Save LR (and dummy r0 to maintain stack alignment)
10003048:	b501      	push	{r0, lr}
#if (defined(TX_ENABLE_EXECUTION_CHANGE_NOTIFY) || defined(TX_EXECUTION_PROFILE_ENABLE))
    BL      _tx_execution_isr_enter             // Call the ISR enter function
#endif
    BL      _tx_timer_interrupt
1000304a:	f000 f8c7 	bl	100031dc <_tx_timer_interrupt>
#if (defined(TX_ENABLE_EXECUTION_CHANGE_NOTIFY) || defined(TX_EXECUTION_PROFILE_ENABLE))
    BL      _tx_execution_isr_exit              // Call the ISR exit function
#endif
    POP     {r0,lr}
1000304e:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
    BX      lr
10003052:	4770      	bx	lr

10003054 <HardFault_Handler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  HardFault_Handler
    .thumb_func
.type HardFault_Handler, function
HardFault_Handler:
    B       HardFault_Handler
10003054:	f7ff bffe 	b.w	10003054 <HardFault_Handler>

10003058 <UsageFault_Handler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  UsageFault_Handler
    .thumb_func
.type UsageFault_Handler, function
UsageFault_Handler:
    CPSID   i                                       // Disable interrupts
10003058:	b672      	cpsid	i
    // Check for stack limit fault
    LDR     r0, =0xE000ED28                         // CFSR address
1000305a:	4818      	ldr	r0, [pc, #96]	; (100030bc <__tx_DBGHandler+0x20>)
    LDR     r1,[r0]                                 // Pick up CFSR
1000305c:	6801      	ldr	r1, [r0, #0]
    TST     r1, #0x00100000                         // Check for Stack Overflow
1000305e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000

10003062 <_unhandled_usage_loop>:
_unhandled_usage_loop:
    BEQ     _unhandled_usage_loop                   // If not stack overflow then loop
10003062:	d0fe      	beq.n	10003062 <_unhandled_usage_loop>

    // Handle stack overflow
    STR     r1, [r0]                                // Clear CFSR flag(s)
10003064:	6001      	str	r1, [r0, #0]

#ifdef __ARM_FP
    LDR     r0, =0xE000EF34                         // Cleanup FPU context: Load FPCCR address
10003066:	4816      	ldr	r0, [pc, #88]	; (100030c0 <__tx_DBGHandler+0x24>)
    LDR     r1, [r0]                                // Load FPCCR
10003068:	6801      	ldr	r1, [r0, #0]
    BIC     r1, r1, #1                              // Clear the lazy preservation active bit
1000306a:	f021 0101 	bic.w	r1, r1, #1
    STR     r1, [r0]                                // Store the value
1000306e:	6001      	str	r1, [r0, #0]
#endif

    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
10003070:	4814      	ldr	r0, [pc, #80]	; (100030c4 <__tx_DBGHandler+0x28>)
    LDR     r0,[r0]                                 // Pick up current thread pointer
10003072:	6800      	ldr	r0, [r0, #0]
    PUSH    {r0,lr}                                 // Save LR (and r0 to maintain stack alignment)
10003074:	b501      	push	{r0, lr}
    BL      _tx_thread_stack_error_handler          // Call ThreadX/user handler
10003076:	f7fe fff7 	bl	10002068 <_tx_thread_stack_error_handler>
    POP     {r0,lr}                                 // Restore LR and dummy reg
1000307a:	e8bd 4001 	ldmia.w	sp!, {r0, lr}
    PUSH    {r0, lr}                                // Save LR (and r0 just for alignment)
    BL      _tx_execution_thread_exit               // Call the thread exit function
    POP     {r0, lr}                                // Recover LR
#endif

    MOV     r1, #0                                  // Build NULL value
1000307e:	f04f 0100 	mov.w	r1, #0
    LDR     r0, =_tx_thread_current_ptr             // Pickup address of current thread pointer
10003082:	4810      	ldr	r0, [pc, #64]	; (100030c4 <__tx_DBGHandler+0x28>)
    STR     r1, [r0]                                // Clear current thread pointer
10003084:	6001      	str	r1, [r0, #0]

    // Return from UsageFault_Handler exception
    LDR     r0, =0xE000ED04                         // Load ICSR
10003086:	4810      	ldr	r0, [pc, #64]	; (100030c8 <__tx_DBGHandler+0x2c>)
    LDR     r1, =0x10000000                         // Set PENDSVSET bit
10003088:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
    STR     r1, [r0]                                // Store ICSR
1000308c:	6001      	str	r1, [r0, #0]
    DSB                                             // Wait for memory access to complete
1000308e:	f3bf 8f4f 	dsb	sy
    CPSIE   i                                       // Enable interrupts
10003092:	b662      	cpsie	i
    BX      lr                                      // Return from exception
10003094:	4770      	bx	lr
10003096:	bf00      	nop

10003098 <__tx_NMIHandler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  __tx_NMIHandler
    .thumb_func
.type __tx_NMIHandler, function
__tx_NMIHandler:
    B       __tx_NMIHandler
10003098:	f7ff bffe 	b.w	10003098 <__tx_NMIHandler>

1000309c <__tx_DBGHandler>:
    .eabi_attribute Tag_ABI_align_preserved, 1
    .global  __tx_DBGHandler
    .thumb_func
.type __tx_DBGHandler, function
__tx_DBGHandler:
    B       __tx_DBGHandler
1000309c:	f7ff bffe 	b.w	1000309c <__tx_DBGHandler>
    LDR     r0, =_tx_initialize_unused_memory       // Build address of unused memory pointer
100030a0:	380011a4 	stmdacc	r0, {r2, r5, r7, r8, ip}
    LDR     r1, =__RAM_segment_used_end__           // Build first free address
100030a4:	38100000 	ldmdacc	r0, {}	; <UNPREDICTABLE>
    LDR     r1, =__Vectors                          // Pickup address of vector table
100030a8:	10000000 	andne	r0, r0, r0
    LDR     r0, =0xE0001000                         // Build address of DWT register
100030ac:	e0001000 	and	r1, r0, r0
    LDR     r0, =_tx_thread_system_stack_ptr        // Build address of system stack pointer
100030b0:	38001294 	stmdacc	r0, {r2, r4, r7, r9, ip}
    LDR     r1, =SYSTICK_CYCLES
100030b4:	0002903f 	andeq	r9, r2, pc, lsr r0
    LDR     r1, =0x40FF0000                         // SysT, PnSV, Rsrv, DbgM
100030b8:	40ff0000 	rscsmi	r0, pc, r0
    LDR     r0, =0xE000ED28                         // CFSR address
100030bc:	e000ed28 	and	lr, r0, r8, lsr #26
    LDR     r0, =0xE000EF34                         // Cleanup FPU context: Load FPCCR address
100030c0:	e000ef34 	and	lr, r0, r4, lsr pc
    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
100030c4:	380011b8 	stmdacc	r0, {r3, r4, r5, r7, r8, ip}
    LDR     r0, =0xE000ED04                         // Load ICSR
100030c8:	e000ed04 	and	lr, r0, r4, lsl #26

100030cc <_tx_thread_schedule>:
    /* This function should only ever be called on Cortex-M
       from the first schedule request. Subsequent scheduling occurs
       from the PendSV handling routine below. */

    /* Clear the preempt-disable flag to enable rescheduling after initialization on Cortex-M targets.  */
    MOV     r0, #0                                  // Build value for TX_FALSE
100030cc:	f04f 0000 	mov.w	r0, #0
    LDR     r2, =_tx_thread_preempt_disable         // Build address of preempt disable flag
100030d0:	4a2e      	ldr	r2, [pc, #184]	; (1000318c <_tx_vfp_access+0x8>)
    STR     r0, [r2, #0]                            // Clear preempt disable flag
100030d2:	6010      	str	r0, [r2, #0]

#ifdef __ARM_FP
    /* Clear CONTROL.FPCA bit so VFP registers aren't unnecessarily stacked.  */
    MRS     r0, CONTROL                             // Pickup current CONTROL register
100030d4:	f3ef 8014 	mrs	r0, CONTROL
    BIC     r0, r0, #4                              // Clear the FPCA bit
100030d8:	f020 0004 	bic.w	r0, r0, #4
    MSR     CONTROL, r0                             // Setup new CONTROL register
100030dc:	f380 8814 	msr	CONTROL, r0
#endif

    /* Enable interrupts */
    CPSIE   i
100030e0:	b662      	cpsie	i

    /* Enter the scheduler for the first time.  */
    MOV     r0, #0x10000000                         // Load PENDSVSET bit
100030e2:	f04f 5080 	mov.w	r0, #268435456	; 0x10000000
    MOV     r1, #0xE000E000                         // Load NVIC base
100030e6:	f04f 21e0 	mov.w	r1, #3758153728	; 0xe000e000
    STR     r0, [r1, #0xD04]                        // Set PENDSVBIT in ICSR
100030ea:	f8c1 0d04 	str.w	r0, [r1, #3332]	; 0xd04
    DSB                                             // Complete all memory accesses
100030ee:	f3bf 8f4f 	dsb	sy
    ISB                                             // Flush pipeline
100030f2:	f3bf 8f6f 	isb	sy

100030f6 <__tx_wait_here>:

    /* Wait here for the PendSV to take place.  */

__tx_wait_here:
    B       __tx_wait_here                          // Wait for the PendSV to happen
100030f6:	e7fe      	b.n	100030f6 <__tx_wait_here>

100030f8 <PendSV_Handler>:
#else
    CPSIE   i                                       // Enable interrupts
#endif  /* TX_PORT_USE_BASEPRI */
#endif  /* EXECUTION PROFILE */

    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
100030f8:	4825      	ldr	r0, [pc, #148]	; (10003190 <_tx_vfp_access+0xc>)
    LDR     r2, =_tx_thread_execute_ptr             // Build execute thread pointer address
100030fa:	4a26      	ldr	r2, [pc, #152]	; (10003194 <_tx_vfp_access+0x10>)
    MOV     r3, #0                                  // Build NULL value
100030fc:	f04f 0300 	mov.w	r3, #0
    LDR     r1, [r0]                                // Pickup current thread pointer
10003100:	6801      	ldr	r1, [r0, #0]

    /* Determine if there is a current thread to finish preserving.  */

    CBZ     r1, __tx_ts_new                         // If NULL, skip preservation
10003102:	b191      	cbz	r1, 1000312a <__tx_ts_new>

    /* Recover PSP and preserve current thread context.  */

    STR     r3, [r0]                                // Set _tx_thread_current_ptr to NULL
10003104:	6003      	str	r3, [r0, #0]
    MRS     r12, PSP                                // Pickup PSP pointer (thread's stack pointer)
10003106:	f3ef 8c09 	mrs	ip, PSP
    STMDB   r12!, {r4-r11}                          // Save its remaining registers
1000310a:	e92c 0ff0 	stmdb	ip!, {r4, r5, r6, r7, r8, r9, sl, fp}
#ifdef __ARM_FP
    TST     LR, #0x10                               // Determine if the VFP extended frame is present
1000310e:	f01e 0f10 	tst.w	lr, #16
    BNE     _skip_vfp_save
10003112:	d101      	bne.n	10003118 <_skip_vfp_save>
    VSTMDB  r12!,{s16-s31}                          // Yes, save additional VFP registers
10003114:	ed2c 8a10 	vstmdb	ip!, {s16-s31}

10003118 <_skip_vfp_save>:
_skip_vfp_save:
#endif
    LDR     r4, =_tx_timer_time_slice               // Build address of time-slice variable
10003118:	4c1f      	ldr	r4, [pc, #124]	; (10003198 <_tx_vfp_access+0x14>)
    STMDB   r12!, {LR}                              // Save LR on the stack
1000311a:	f84c ed04 	str.w	lr, [ip, #-4]!
    STR     r12, [r1, #8]                           // Save the thread stack pointer
1000311e:	f8c1 c008 	str.w	ip, [r1, #8]
_skip_secure_save:
#endif

    /* Determine if time-slice is active. If it isn't, skip time handling processing.  */

    LDR     r5, [r4]                                // Pickup current time-slice
10003122:	6825      	ldr	r5, [r4, #0]
    CBZ     r5, __tx_ts_new                         // If not active, skip processing
10003124:	b10d      	cbz	r5, 1000312a <__tx_ts_new>

    /* Time-slice is active, save the current thread's time-slice and clear the global time-slice variable.  */

    STR     r5, [r1, #24]                           // Save current time-slice
10003126:	618d      	str	r5, [r1, #24]

    /* Clear the global time-slice.  */

    STR     r3, [r4]                                // Clear time-slice
10003128:	6023      	str	r3, [r4, #0]

1000312a <__tx_ts_new>:

#ifdef TX_PORT_USE_BASEPRI
    LDR     r1, =TX_PORT_BASEPRI                    // Mask interrupt priorities =< TX_PORT_BASEPRI
    MSR     BASEPRI, r1
#else
    CPSID   i                                       // Disable interrupts
1000312a:	b672      	cpsid	i
#endif
    LDR     r1, [r2]                                // Is there another thread ready to execute?
1000312c:	6811      	ldr	r1, [r2, #0]
    CBZ     r1, __tx_ts_wait                        // No, skip to the wait processing
1000312e:	b1d1      	cbz	r1, 10003166 <__tx_ts_wait>

    /* Yes, another thread is ready for else, make the current thread the new thread.  */

    STR     r1, [r0]                                // Setup the current thread pointer to the new thread
10003130:	6001      	str	r1, [r0, #0]
#ifdef TX_PORT_USE_BASEPRI
    MOV     r4, #0                                  // Disable BASEPRI masking (enable interrupts)
    MSR     BASEPRI, r4
#else
    CPSIE   i                                       // Enable interrupts
10003132:	b662      	cpsie	i

10003134 <__tx_ts_restore>:
#endif

    /* Increment the thread run count.  */

__tx_ts_restore:
    LDR     r7, [r1, #4]                            // Pickup the current thread run count
10003134:	684f      	ldr	r7, [r1, #4]
    LDR     r4, =_tx_timer_time_slice               // Build address of time-slice variable
10003136:	4c18      	ldr	r4, [pc, #96]	; (10003198 <_tx_vfp_access+0x14>)
    LDR     r5, [r1, #24]                           // Pickup thread's current time-slice
10003138:	698d      	ldr	r5, [r1, #24]
    ADD     r7, r7, #1                              // Increment the thread run count
1000313a:	f107 0701 	add.w	r7, r7, #1
    STR     r7, [r1, #4]                            // Store the new run count
1000313e:	604f      	str	r7, [r1, #4]

    /* Setup global time-slice with thread's current time-slice.  */

    STR     r5, [r4]                                // Setup global time-slice
10003140:	6025      	str	r5, [r4, #0]
    POP     {r0,r1}                                 // Restore r1 (and dummy r0)
_skip_secure_restore:
#endif

    /* Restore the thread context and PSP.  */
    LDR     r12, [r1, #12]                          // Get stack start
10003142:	f8d1 c00c 	ldr.w	ip, [r1, #12]
    MSR     PSPLIM, r12                             // Set stack limit
10003146:	f38c 880b 	msr	PSPLIM, ip
    LDR     r12, [r1, #8]                           // Pickup thread's stack pointer
1000314a:	f8d1 c008 	ldr.w	ip, [r1, #8]
    LDMIA   r12!, {LR}                              // Pickup LR
1000314e:	f85c eb04 	ldr.w	lr, [ip], #4
#ifdef __ARM_FP
    TST     LR, #0x10                               // Determine if the VFP extended frame is present
10003152:	f01e 0f10 	tst.w	lr, #16
    BNE     _skip_vfp_restore                       // If not, skip VFP restore
10003156:	d101      	bne.n	1000315c <_skip_vfp_restore>
    VLDMIA  r12!, {s16-s31}                         // Yes, restore additional VFP registers
10003158:	ecbc 8a10 	vldmia	ip!, {s16-s31}

1000315c <_skip_vfp_restore>:
_skip_vfp_restore:
#endif
    LDMIA   r12!, {r4-r11}                          // Recover thread's registers
1000315c:	e8bc 0ff0 	ldmia.w	ip!, {r4, r5, r6, r7, r8, r9, sl, fp}
    MSR     PSP, r12                                // Setup the thread's stack pointer
10003160:	f38c 8809 	msr	PSP, ip

    BX      lr                                      // Return to thread!
10003164:	4770      	bx	lr

10003166 <__tx_ts_wait>:
__tx_ts_wait:
#ifdef TX_PORT_USE_BASEPRI
    LDR     r1, =TX_PORT_BASEPRI                    // Mask interrupt priorities =< TX_PORT_BASEPRI
    MSR     BASEPRI, r1
#else
    CPSID   i                                       // Disable interrupts
10003166:	b672      	cpsid	i
#endif
    LDR     r1, [r2]                                // Pickup the next thread to execute pointer
10003168:	6811      	ldr	r1, [r2, #0]
    STR     r1, [r0]                                // Store it in the current pointer
1000316a:	6001      	str	r1, [r0, #0]
    CBNZ    r1, __tx_ts_ready                       // If non-NULL, a new thread is ready!
1000316c:	b909      	cbnz	r1, 10003172 <__tx_ts_ready>

#ifdef TX_PORT_USE_BASEPRI
    MOV     r4, #0                                  // Disable BASEPRI masking (enable interrupts)
    MSR     BASEPRI, r4
#else
    CPSIE   i                                       // Enable interrupts
1000316e:	b662      	cpsie	i
#endif
    B       __tx_ts_wait                            // Loop to continue waiting
10003170:	e7f9      	b.n	10003166 <__tx_ts_wait>

10003172 <__tx_ts_ready>:

    /* At this point, we have a new thread ready to go. Clear any newly pended PendSV - since we are
       already in the handler!  */
__tx_ts_ready:
    MOV     r7, #0x08000000                         // Build clear PendSV value
10003172:	f04f 6700 	mov.w	r7, #134217728	; 0x8000000
    MOV     r8, #0xE000E000                         // Build base NVIC address
10003176:	f04f 28e0 	mov.w	r8, #3758153728	; 0xe000e000
    STR     r7, [r8, #0xD04]                        // Clear any PendSV
1000317a:	f8c8 7d04 	str.w	r7, [r8, #3332]	; 0xd04
    /* Re-enable interrupts and restore new thread.  */
#ifdef TX_PORT_USE_BASEPRI
    MOV     r4, #0                                  // Disable BASEPRI masking (enable interrupts)
    MSR     BASEPRI, r4
#else
    CPSIE   i                                       // Enable interrupts
1000317e:	b662      	cpsie	i
#endif
    B       __tx_ts_restore                         // Restore the thread
10003180:	e7d8      	b.n	10003134 <__tx_ts_restore>
10003182:	bf00      	nop

10003184 <_tx_vfp_access>:
    .global  _tx_vfp_access
    .thumb_func
.type _tx_vfp_access, function
_tx_vfp_access:
#if TX_ENABLE_FPU_SUPPORT
    VMOV.F32 s0, s0                                 // Simply access the VFP
10003184:	eeb0 0a40 	vmov.f32	s0, s0
#endif
    BX       lr                                     // Return to caller
10003188:	4770      	bx	lr
1000318a:	120c0000 	andne	r0, ip, #0
    LDR     r2, =_tx_thread_preempt_disable         // Build address of preempt disable flag
1000318e:	11b83800 			; <UNDEFINED> instruction: 0x11b83800
    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
10003192:	11bc3800 			; <UNDEFINED> instruction: 0x11bc3800
    LDR     r2, =_tx_thread_execute_ptr             // Build execute thread pointer address
10003196:	24243800 	strtcs	r3, [r4], #-2048	; 0xfffff800
    LDR     r4, =_tx_timer_time_slice               // Build address of time-slice variable
1000319a:	 	stmdbvs	r2, {fp, ip, sp}

1000319c <_tx_thread_stack_build>:
                       pc          Initial value for pc
                       xPSR        Initial value for xPSR

    Stack Bottom: (higher memory address)  */

    LDR     r2, [r0, #16]                           // Pickup end of stack area
1000319c:	6902      	ldr	r2, [r0, #16]
    BIC     r2, r2, #0x7                            // Align frame for 8-byte alignment
1000319e:	f022 0207 	bic.w	r2, r2, #7
    SUB     r2, r2, #68                             // Subtract frame size
100031a2:	f1a2 0244 	sub.w	r2, r2, #68	; 0x44
#ifdef TX_SINGLE_MODE_SECURE
    LDR     r3, =0xFFFFFFFD                         // Build initial LR value for secure mode
100031a6:	f06f 0302 	mvn.w	r3, #2
#else
    LDR     r3, =0xFFFFFFBC                         // Build initial LR value to return to non-secure PSP
#endif
    STR     r3, [r2, #0]                            // Save on the stack
100031aa:	6013      	str	r3, [r2, #0]

    /* Actually build the stack frame.  */

    MOV     r3, #0                                  // Build initial register value
100031ac:	f04f 0300 	mov.w	r3, #0
    STR     r3, [r2, #4]                            // Store initial r4
100031b0:	6053      	str	r3, [r2, #4]
    STR     r3, [r2, #8]                            // Store initial r5
100031b2:	6093      	str	r3, [r2, #8]
    STR     r3, [r2, #12]                           // Store initial r6
100031b4:	60d3      	str	r3, [r2, #12]
    STR     r3, [r2, #16]                           // Store initial r7
100031b6:	6113      	str	r3, [r2, #16]
    STR     r3, [r2, #20]                           // Store initial r8
100031b8:	6153      	str	r3, [r2, #20]
    STR     r3, [r2, #24]                           // Store initial r9
100031ba:	6193      	str	r3, [r2, #24]
    STR     r3, [r2, #28]                           // Store initial r10
100031bc:	61d3      	str	r3, [r2, #28]
    STR     r3, [r2, #32]                           // Store initial r11
100031be:	6213      	str	r3, [r2, #32]

    /* Hardware stack follows.  */

    STR     r3, [r2, #36]                           // Store initial r0
100031c0:	6253      	str	r3, [r2, #36]	; 0x24
    STR     r3, [r2, #40]                           // Store initial r1
100031c2:	6293      	str	r3, [r2, #40]	; 0x28
    STR     r3, [r2, #44]                           // Store initial r2
100031c4:	62d3      	str	r3, [r2, #44]	; 0x2c
    STR     r3, [r2, #48]                           // Store initial r3
100031c6:	6313      	str	r3, [r2, #48]	; 0x30
    STR     r3, [r2, #52]                           // Store initial r12
100031c8:	6353      	str	r3, [r2, #52]	; 0x34
    MOV     r3, #0xFFFFFFFF                         // Poison EXC_RETURN value
100031ca:	f04f 33ff 	mov.w	r3, #4294967295
    STR     r3, [r2, #56]                           // Store initial lr
100031ce:	6393      	str	r3, [r2, #56]	; 0x38
    STR     r1, [r2, #60]                           // Store initial pc
100031d0:	63d1      	str	r1, [r2, #60]	; 0x3c
    MOV     r3, #0x01000000                         // Only T-bit need be set
100031d2:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
    STR     r3, [r2, #64]                           // Store initial xPSR
100031d6:	6413      	str	r3, [r2, #64]	; 0x40

    /* Setup stack pointer.  */
    // thread_ptr -> tx_thread_stack_ptr =  r2;

    STR     r2, [r0, #8]                            // Save stack pointer in thread's
100031d8:	6082      	str	r2, [r0, #8]
                                                    //   control block
    BX      lr                                      // Return to caller
100031da:	4770      	bx	lr

100031dc <_tx_timer_interrupt>:
       for use.  */

    /* Increment the system clock.  */
    // _tx_timer_system_clock++;

    LDR     r1, =_tx_timer_system_clock             // Pickup address of system clock
100031dc:	4922      	ldr	r1, [pc, #136]	; (10003268 <__tx_timer_nothing_expired+0x8>)
    LDR     r0, [r1, #0]                            // Pickup system clock
100031de:	6808      	ldr	r0, [r1, #0]
    ADD     r0, r0, #1                              // Increment system clock
100031e0:	f100 0001 	add.w	r0, r0, #1
    STR     r0, [r1, #0]                            // Store new system clock
100031e4:	6008      	str	r0, [r1, #0]

    /* Test for time-slice expiration.  */
    // if (_tx_timer_time_slice)
    // {

    LDR     r3, =_tx_timer_time_slice               // Pickup address of time-slice
100031e6:	4b21      	ldr	r3, [pc, #132]	; (1000326c <__tx_timer_nothing_expired+0xc>)
    LDR     r2, [r3, #0]                            // Pickup time-slice
100031e8:	681a      	ldr	r2, [r3, #0]
    CBZ     r2, __tx_timer_no_time_slice            // Is it non-active?
100031ea:	b13a      	cbz	r2, 100031fc <__tx_timer_no_time_slice>
                                                    // Yes, skip time-slice processing

       /* Decrement the time_slice.  */
       // _tx_timer_time_slice--;

    SUB     r2, r2, #1                              // Decrement the time-slice
100031ec:	f1a2 0201 	sub.w	r2, r2, #1
    STR     r2, [r3, #0]                            // Store new time-slice value
100031f0:	601a      	str	r2, [r3, #0]

       /* Check for expiration.  */
       // if (__tx_timer_time_slice == 0)

    CBNZ    r2, __tx_timer_no_time_slice            // Has it expired?
100031f2:	b91a      	cbnz	r2, 100031fc <__tx_timer_no_time_slice>
                                                    // No, skip expiration processing

       /* Set the time-slice expired flag.  */
       // _tx_timer_expired_time_slice =  TX_TRUE;

    LDR     r3, =_tx_timer_expired_time_slice       // Pickup address of expired flag
100031f4:	4b1e      	ldr	r3, [pc, #120]	; (10003270 <__tx_timer_nothing_expired+0x10>)
    MOV     r0, #1                                  // Build expired value
100031f6:	f04f 0001 	mov.w	r0, #1
    STR     r0, [r3, #0]                            // Set time-slice expiration flag
100031fa:	6018      	str	r0, [r3, #0]

100031fc <__tx_timer_no_time_slice>:

    /* Test for timer expiration.  */
    // if (*_tx_timer_current_ptr)
    // {

    LDR     r1, =_tx_timer_current_ptr              // Pickup current timer pointer address
100031fc:	491d      	ldr	r1, [pc, #116]	; (10003274 <__tx_timer_nothing_expired+0x14>)
    LDR     r0, [r1, #0]                            // Pickup current timer
100031fe:	6808      	ldr	r0, [r1, #0]
    LDR     r2, [r0, #0]                            // Pickup timer list entry
10003200:	6802      	ldr	r2, [r0, #0]
    CBZ     r2, __tx_timer_no_timer                 // Is there anything in the list?
10003202:	b122      	cbz	r2, 1000320e <__tx_timer_no_timer>
                                                    // No, just increment the timer

        /* Set expiration flag.  */
        // _tx_timer_expired =  TX_TRUE;

    LDR     r3, =_tx_timer_expired                  // Pickup expiration flag address
10003204:	4b1c      	ldr	r3, [pc, #112]	; (10003278 <__tx_timer_nothing_expired+0x18>)
    MOV     r2, #1                                  // Build expired value
10003206:	f04f 0201 	mov.w	r2, #1
    STR     r2, [r3, #0]                            // Set expired flag
1000320a:	601a      	str	r2, [r3, #0]
    B       __tx_timer_done                         // Finished timer processing
1000320c:	e008      	b.n	10003220 <__tx_timer_done>

1000320e <__tx_timer_no_timer>:
__tx_timer_no_timer:

        /* No timer expired, increment the timer pointer.  */
        // _tx_timer_current_ptr++;

    ADD     r0, r0, #4                              // Move to next timer
1000320e:	f100 0004 	add.w	r0, r0, #4

        /* Check for wrap-around.  */
        // if (_tx_timer_current_ptr == _tx_timer_list_end)

    LDR     r3, =_tx_timer_list_end                 // Pickup addr of timer list end
10003212:	4b1a      	ldr	r3, [pc, #104]	; (1000327c <__tx_timer_nothing_expired+0x1c>)
    LDR     r2, [r3, #0]                            // Pickup list end
10003214:	681a      	ldr	r2, [r3, #0]
    CMP     r0, r2                                  // Are we at list end?
10003216:	4290      	cmp	r0, r2
    BNE     __tx_timer_skip_wrap                    // No, skip wrap-around logic
10003218:	d101      	bne.n	1000321e <__tx_timer_skip_wrap>

            /* Wrap to beginning of list.  */
            // _tx_timer_current_ptr =  _tx_timer_list_start;

    LDR     r3, =_tx_timer_list_start               // Pickup addr of timer list start
1000321a:	4b19      	ldr	r3, [pc, #100]	; (10003280 <__tx_timer_nothing_expired+0x20>)
    LDR     r0, [r3, #0]                            // Set current pointer to list start
1000321c:	6818      	ldr	r0, [r3, #0]

1000321e <__tx_timer_skip_wrap>:

__tx_timer_skip_wrap:

    STR     r0, [r1, #0]                            // Store new current timer pointer
1000321e:	6008      	str	r0, [r1, #0]

10003220 <__tx_timer_done>:

    /* See if anything has expired.  */
    // if ((_tx_timer_expired_time_slice) || (_tx_timer_expired))
    // {

    LDR     r3, =_tx_timer_expired_time_slice       // Pickup addr of expired flag
10003220:	4b13      	ldr	r3, [pc, #76]	; (10003270 <__tx_timer_nothing_expired+0x10>)
    LDR     r2, [r3, #0]                            // Pickup time-slice expired flag
10003222:	681a      	ldr	r2, [r3, #0]
    CBNZ    r2, __tx_something_expired              // Did a time-slice expire?
10003224:	b912      	cbnz	r2, 1000322c <__tx_something_expired>
                                                    // If non-zero, time-slice expired
    LDR     r1, =_tx_timer_expired                  // Pickup addr of other expired flag
10003226:	4914      	ldr	r1, [pc, #80]	; (10003278 <__tx_timer_nothing_expired+0x18>)
    LDR     r0, [r1, #0]                            // Pickup timer expired flag
10003228:	6808      	ldr	r0, [r1, #0]
    CBZ     r0, __tx_timer_nothing_expired          // Did a timer expire?
1000322a:	b1c8      	cbz	r0, 10003260 <__tx_timer_nothing_expired>

1000322c <__tx_something_expired>:
                                                    // No, nothing expired

__tx_something_expired:

    PUSH    {r0, lr}                                // Save the lr register on the stack
1000322c:	b501      	push	{r0, lr}

    /* Did a timer expire?  */
    // if (_tx_timer_expired)
    // {

    LDR     r1, =_tx_timer_expired                  // Pickup addr of expired flag
1000322e:	4912      	ldr	r1, [pc, #72]	; (10003278 <__tx_timer_nothing_expired+0x18>)
    LDR     r0, [r1, #0]                            // Pickup timer expired flag
10003230:	6808      	ldr	r0, [r1, #0]
    CBZ     r0, __tx_timer_dont_activate            // Check for timer expiration
10003232:	b108      	cbz	r0, 10003238 <__tx_timer_dont_activate>
                                                    // If not set, skip timer activation

        /* Process timer expiration.  */
        // _tx_timer_expiration_process();

    BL      _tx_timer_expiration_process            // Call the timer expiration handling routine
10003234:	f7ff fb62 	bl	100028fc <_tx_timer_expiration_process>

10003238 <__tx_timer_dont_activate>:

    /* Did time slice expire?  */
    // if (_tx_timer_expired_time_slice)
    // {

    LDR     r3, =_tx_timer_expired_time_slice       // Pickup addr of time-slice expired
10003238:	4b0d      	ldr	r3, [pc, #52]	; (10003270 <__tx_timer_nothing_expired+0x10>)
    LDR     r2, [r3, #0]                            // Pickup the actual flag
1000323a:	681a      	ldr	r2, [r3, #0]
    CBZ     r2, __tx_timer_not_ts_expiration        // See if the flag is set
1000323c:	b172      	cbz	r2, 1000325c <__tx_timer_not_ts_expiration>
                                                    // No, skip time-slice processing

        /* Time slice interrupted thread.  */
        // _tx_thread_time_slice();

    BL      _tx_thread_time_slice                   // Call time-slice processing
1000323e:	f7ff fa81 	bl	10002744 <_tx_thread_time_slice>
    LDR     r0, =_tx_thread_preempt_disable         // Build address of preempt disable flag
10003242:	4810      	ldr	r0, [pc, #64]	; (10003284 <__tx_timer_nothing_expired+0x24>)
    LDR     r1, [r0]                                // Is the preempt disable flag set?
10003244:	6801      	ldr	r1, [r0, #0]
    CBNZ    r1, __tx_timer_skip_time_slice          // Yes, skip the PendSV logic
10003246:	b949      	cbnz	r1, 1000325c <__tx_timer_not_ts_expiration>
    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
10003248:	480f      	ldr	r0, [pc, #60]	; (10003288 <__tx_timer_nothing_expired+0x28>)
    LDR     r1, [r0]                                // Pickup the current thread pointer
1000324a:	6801      	ldr	r1, [r0, #0]
    LDR     r2, =_tx_thread_execute_ptr             // Build execute thread pointer address
1000324c:	4a0f      	ldr	r2, [pc, #60]	; (1000328c <__tx_timer_nothing_expired+0x2c>)
    LDR     r3, [r2]                                // Pickup the execute thread pointer
1000324e:	6813      	ldr	r3, [r2, #0]
    LDR     r0, =0xE000ED04                         // Build address of control register
10003250:	480f      	ldr	r0, [pc, #60]	; (10003290 <__tx_timer_nothing_expired+0x30>)
    LDR     r2, =0x10000000                         // Build value for PendSV bit
10003252:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    CMP     r1, r3                                  // Are they the same?
10003256:	4299      	cmp	r1, r3
    BEQ     __tx_timer_skip_time_slice              // If the same, there was no time-slice performed
10003258:	d000      	beq.n	1000325c <__tx_timer_not_ts_expiration>
    STR     r2, [r0]                                // Not the same, issue the PendSV for preemption
1000325a:	6002      	str	r2, [r0, #0]

1000325c <__tx_timer_not_ts_expiration>:
__tx_timer_skip_time_slice:
    // }

__tx_timer_not_ts_expiration:

    POP     {r0, lr}                                // Recover lr register (r0 is just there for
1000325c:	e8bd 4001 	ldmia.w	sp!, {r0, lr}

10003260 <__tx_timer_nothing_expired>:

    // }

__tx_timer_nothing_expired:

    DSB                                             // Complete all memory access
10003260:	f3bf 8f4f 	dsb	sy
    BX      lr                                      // Return to caller
10003264:	4770      	bx	lr
10003266:	13480000 	movtne	r0, #32768	; 0x8000
    LDR     r1, =_tx_timer_system_clock             // Pickup address of system clock
1000326a:	24243800 	strtcs	r3, [r4], #-2048	; 0xfffff800
    LDR     r3, =_tx_timer_time_slice               // Pickup address of time-slice
1000326e:	12a03800 	adcne	r3, r0, #0, 16
    LDR     r3, =_tx_timer_expired_time_slice       // Pickup address of expired flag
10003272:	12983800 	addsne	r3, r8, #0, 16
    LDR     r1, =_tx_timer_current_ptr              // Pickup current timer pointer address
10003276:	129c3800 	addsne	r3, ip, #0, 16
    LDR     r3, =_tx_timer_expired                  // Pickup expiration flag address
1000327a:	13283800 			; <UNDEFINED> instruction: 0x13283800
    LDR     r3, =_tx_timer_list_end                 // Pickup addr of timer list end
1000327e:	132c3800 			; <UNDEFINED> instruction: 0x132c3800
    LDR     r3, =_tx_timer_list_start               // Pickup addr of timer list start
10003282:	120c3800 	andne	r3, ip, #0, 16
    LDR     r0, =_tx_thread_preempt_disable         // Build address of preempt disable flag
10003286:	11b83800 			; <UNDEFINED> instruction: 0x11b83800
    LDR     r0, =_tx_thread_current_ptr             // Build current thread pointer address
1000328a:	11bc3800 			; <UNDEFINED> instruction: 0x11bc3800
    LDR     r2, =_tx_thread_execute_ptr             // Build execute thread pointer address
1000328e:	ed043800 	stc	8, cr3, [r4, #-0]
    LDR     r0, =0xE000ED04                         // Build address of control register
10003292:	 	blmi	1007b29a <__copy_table_end__+0x7505a>

10003294 <__errno>:
10003294:	4b01      	ldr	r3, [pc, #4]	; (1000329c <__errno+0x8>)
10003296:	6818      	ldr	r0, [r3, #0]
10003298:	4770      	bx	lr
1000329a:	bf00      	nop
1000329c:	38000008 	stmdacc	r0, {r3}

100032a0 <memset>:
100032a0:	4402      	add	r2, r0
100032a2:	4603      	mov	r3, r0
100032a4:	4293      	cmp	r3, r2
100032a6:	d100      	bne.n	100032aa <memset+0xa>
100032a8:	4770      	bx	lr
100032aa:	f803 1b01 	strb.w	r1, [r3], #1
100032ae:	e7f9      	b.n	100032a4 <memset+0x4>

100032b0 <rand>:
100032b0:	4b16      	ldr	r3, [pc, #88]	; (1000330c <rand+0x5c>)
100032b2:	b510      	push	{r4, lr}
100032b4:	681c      	ldr	r4, [r3, #0]
100032b6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
100032b8:	b9b3      	cbnz	r3, 100032e8 <rand+0x38>
100032ba:	2018      	movs	r0, #24
100032bc:	f000 f95e 	bl	1000357c <malloc>
100032c0:	63a0      	str	r0, [r4, #56]	; 0x38
100032c2:	b928      	cbnz	r0, 100032d0 <rand+0x20>
100032c4:	4602      	mov	r2, r0
100032c6:	4b12      	ldr	r3, [pc, #72]	; (10003310 <rand+0x60>)
100032c8:	214e      	movs	r1, #78	; 0x4e
100032ca:	4812      	ldr	r0, [pc, #72]	; (10003314 <rand+0x64>)
100032cc:	f000 f82e 	bl	1000332c <__assert_func>
100032d0:	4a11      	ldr	r2, [pc, #68]	; (10003318 <rand+0x68>)
100032d2:	4b12      	ldr	r3, [pc, #72]	; (1000331c <rand+0x6c>)
100032d4:	e9c0 2300 	strd	r2, r3, [r0]
100032d8:	4b11      	ldr	r3, [pc, #68]	; (10003320 <rand+0x70>)
100032da:	2201      	movs	r2, #1
100032dc:	6083      	str	r3, [r0, #8]
100032de:	230b      	movs	r3, #11
100032e0:	8183      	strh	r3, [r0, #12]
100032e2:	2300      	movs	r3, #0
100032e4:	e9c0 2304 	strd	r2, r3, [r0, #16]
100032e8:	6ba4      	ldr	r4, [r4, #56]	; 0x38
100032ea:	4a0e      	ldr	r2, [pc, #56]	; (10003324 <rand+0x74>)
100032ec:	6920      	ldr	r0, [r4, #16]
100032ee:	6963      	ldr	r3, [r4, #20]
100032f0:	490d      	ldr	r1, [pc, #52]	; (10003328 <rand+0x78>)
100032f2:	4342      	muls	r2, r0
100032f4:	fb01 2203 	mla	r2, r1, r3, r2
100032f8:	fba0 0101 	umull	r0, r1, r0, r1
100032fc:	1c43      	adds	r3, r0, #1
100032fe:	eb42 0001 	adc.w	r0, r2, r1
10003302:	e9c4 3004 	strd	r3, r0, [r4, #16]
10003306:	f020 4000 	bic.w	r0, r0, #2147483648	; 0x80000000
1000330a:	bd10      	pop	{r4, pc}
1000330c:	38000008 	stmdacc	r0, {r3}
10003310:	10005ff0 	strdne	r5, [r0], -r0
10003314:	10006007 	andne	r6, r0, r7
10003318:	abcd330e 	blge	f34ff58 <SYSTEM_CLOCK+0x5318558>
1000331c:	e66d1234 			; <UNDEFINED> instruction: 0xe66d1234
10003320:	0005deec 	andeq	sp, r5, ip, ror #29
10003324:	5851f42d 	ldmdapl	r1, {r0, r2, r3, r5, sl, ip, sp, lr, pc}^
10003328:	4c957f2d 	ldcmi	15, cr7, [r5], {45}	; 0x2d

1000332c <__assert_func>:
1000332c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
1000332e:	4614      	mov	r4, r2
10003330:	461a      	mov	r2, r3
10003332:	4b09      	ldr	r3, [pc, #36]	; (10003358 <__assert_func+0x2c>)
10003334:	4605      	mov	r5, r0
10003336:	681b      	ldr	r3, [r3, #0]
10003338:	68d8      	ldr	r0, [r3, #12]
1000333a:	b14c      	cbz	r4, 10003350 <__assert_func+0x24>
1000333c:	4b07      	ldr	r3, [pc, #28]	; (1000335c <__assert_func+0x30>)
1000333e:	9100      	str	r1, [sp, #0]
10003340:	4907      	ldr	r1, [pc, #28]	; (10003360 <__assert_func+0x34>)
10003342:	e9cd 3401 	strd	r3, r4, [sp, #4]
10003346:	462b      	mov	r3, r5
10003348:	f000 f8e4 	bl	10003514 <fiprintf>
1000334c:	f000 fe14 	bl	10003f78 <abort>
10003350:	4b04      	ldr	r3, [pc, #16]	; (10003364 <__assert_func+0x38>)
10003352:	461c      	mov	r4, r3
10003354:	e7f3      	b.n	1000333e <__assert_func+0x12>
10003356:	bf00      	nop
10003358:	38000008 	stmdacc	r0, {r3}
1000335c:	10006085 	andne	r6, r0, r5, lsl #1
10003360:	10006092 	mulne	r0, r2, r0
10003364:	100060c0 	andne	r6, r0, r0, asr #1

10003368 <std>:
10003368:	2300      	movs	r3, #0
1000336a:	b510      	push	{r4, lr}
1000336c:	4604      	mov	r4, r0
1000336e:	6083      	str	r3, [r0, #8]
10003370:	8181      	strh	r1, [r0, #12]
10003372:	4619      	mov	r1, r3
10003374:	6643      	str	r3, [r0, #100]	; 0x64
10003376:	81c2      	strh	r2, [r0, #14]
10003378:	2208      	movs	r2, #8
1000337a:	6183      	str	r3, [r0, #24]
1000337c:	e9c0 3300 	strd	r3, r3, [r0]
10003380:	e9c0 3304 	strd	r3, r3, [r0, #16]
10003384:	305c      	adds	r0, #92	; 0x5c
10003386:	f7ff ff8b 	bl	100032a0 <memset>
1000338a:	4b05      	ldr	r3, [pc, #20]	; (100033a0 <std+0x38>)
1000338c:	6224      	str	r4, [r4, #32]
1000338e:	6263      	str	r3, [r4, #36]	; 0x24
10003390:	4b04      	ldr	r3, [pc, #16]	; (100033a4 <std+0x3c>)
10003392:	62a3      	str	r3, [r4, #40]	; 0x28
10003394:	4b04      	ldr	r3, [pc, #16]	; (100033a8 <std+0x40>)
10003396:	62e3      	str	r3, [r4, #44]	; 0x2c
10003398:	4b04      	ldr	r3, [pc, #16]	; (100033ac <std+0x44>)
1000339a:	6323      	str	r3, [r4, #48]	; 0x30
1000339c:	bd10      	pop	{r4, pc}
1000339e:	bf00      	nop
100033a0:	10003d4d 	andne	r3, r0, sp, asr #26
100033a4:	10003d6f 	andne	r3, r0, pc, ror #26
100033a8:	10003da7 	andne	r3, r0, r7, lsr #27
100033ac:	10003dcb 	andne	r3, r0, fp, asr #27

100033b0 <_cleanup_r>:
100033b0:	4901      	ldr	r1, [pc, #4]	; (100033b8 <_cleanup_r+0x8>)
100033b2:	f000 b8c1 	b.w	10003538 <_fwalk_reent>
100033b6:	bf00      	nop
100033b8:	100040b1 	strhne	r4, [r0], -r1

100033bc <__sfmoreglue>:
100033bc:	b570      	push	{r4, r5, r6, lr}
100033be:	2268      	movs	r2, #104	; 0x68
100033c0:	1e4d      	subs	r5, r1, #1
100033c2:	460e      	mov	r6, r1
100033c4:	4355      	muls	r5, r2
100033c6:	f105 0174 	add.w	r1, r5, #116	; 0x74
100033ca:	f000 f94b 	bl	10003664 <_malloc_r>
100033ce:	4604      	mov	r4, r0
100033d0:	b140      	cbz	r0, 100033e4 <__sfmoreglue+0x28>
100033d2:	2100      	movs	r1, #0
100033d4:	f105 0268 	add.w	r2, r5, #104	; 0x68
100033d8:	e9c0 1600 	strd	r1, r6, [r0]
100033dc:	300c      	adds	r0, #12
100033de:	60a0      	str	r0, [r4, #8]
100033e0:	f7ff ff5e 	bl	100032a0 <memset>
100033e4:	4620      	mov	r0, r4
100033e6:	bd70      	pop	{r4, r5, r6, pc}

100033e8 <__sfp_lock_acquire>:
100033e8:	4801      	ldr	r0, [pc, #4]	; (100033f0 <__sfp_lock_acquire+0x8>)
100033ea:	f000 b8c5 	b.w	10003578 <__retarget_lock_acquire_recursive>
100033ee:	bf00      	nop
100033f0:	3800242d 	stmdacc	r0, {r0, r2, r3, r5, sl, sp}

100033f4 <__sfp_lock_release>:
100033f4:	4801      	ldr	r0, [pc, #4]	; (100033fc <__sfp_lock_release+0x8>)
100033f6:	f000 b8c0 	b.w	1000357a <__retarget_lock_release_recursive>
100033fa:	bf00      	nop
100033fc:	3800242d 	stmdacc	r0, {r0, r2, r3, r5, sl, sp}

10003400 <__sinit_lock_acquire>:
10003400:	4801      	ldr	r0, [pc, #4]	; (10003408 <__sinit_lock_acquire+0x8>)
10003402:	f000 b8b9 	b.w	10003578 <__retarget_lock_acquire_recursive>
10003406:	bf00      	nop
10003408:	3800242e 	stmdacc	r0, {r1, r2, r3, r5, sl, sp}

1000340c <__sinit_lock_release>:
1000340c:	4801      	ldr	r0, [pc, #4]	; (10003414 <__sinit_lock_release+0x8>)
1000340e:	f000 b8b4 	b.w	1000357a <__retarget_lock_release_recursive>
10003412:	bf00      	nop
10003414:	3800242e 	stmdacc	r0, {r1, r2, r3, r5, sl, sp}

10003418 <__sinit>:
10003418:	b510      	push	{r4, lr}
1000341a:	4604      	mov	r4, r0
1000341c:	f7ff fff0 	bl	10003400 <__sinit_lock_acquire>
10003420:	69a3      	ldr	r3, [r4, #24]
10003422:	b11b      	cbz	r3, 1000342c <__sinit+0x14>
10003424:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
10003428:	f7ff bff0 	b.w	1000340c <__sinit_lock_release>
1000342c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
10003430:	6523      	str	r3, [r4, #80]	; 0x50
10003432:	4620      	mov	r0, r4
10003434:	4b12      	ldr	r3, [pc, #72]	; (10003480 <__sinit+0x68>)
10003436:	4a13      	ldr	r2, [pc, #76]	; (10003484 <__sinit+0x6c>)
10003438:	681b      	ldr	r3, [r3, #0]
1000343a:	62a2      	str	r2, [r4, #40]	; 0x28
1000343c:	42a3      	cmp	r3, r4
1000343e:	bf04      	itt	eq
10003440:	2301      	moveq	r3, #1
10003442:	61a3      	streq	r3, [r4, #24]
10003444:	f000 f820 	bl	10003488 <__sfp>
10003448:	6060      	str	r0, [r4, #4]
1000344a:	4620      	mov	r0, r4
1000344c:	f000 f81c 	bl	10003488 <__sfp>
10003450:	60a0      	str	r0, [r4, #8]
10003452:	4620      	mov	r0, r4
10003454:	f000 f818 	bl	10003488 <__sfp>
10003458:	2200      	movs	r2, #0
1000345a:	2104      	movs	r1, #4
1000345c:	60e0      	str	r0, [r4, #12]
1000345e:	6860      	ldr	r0, [r4, #4]
10003460:	f7ff ff82 	bl	10003368 <std>
10003464:	2201      	movs	r2, #1
10003466:	2109      	movs	r1, #9
10003468:	68a0      	ldr	r0, [r4, #8]
1000346a:	f7ff ff7d 	bl	10003368 <std>
1000346e:	2202      	movs	r2, #2
10003470:	2112      	movs	r1, #18
10003472:	68e0      	ldr	r0, [r4, #12]
10003474:	f7ff ff78 	bl	10003368 <std>
10003478:	2301      	movs	r3, #1
1000347a:	61a3      	str	r3, [r4, #24]
1000347c:	e7d2      	b.n	10003424 <__sinit+0xc>
1000347e:	bf00      	nop
10003480:	10005fec 	andne	r5, r0, ip, ror #31
10003484:	100033b1 			; <UNDEFINED> instruction: 0x100033b1

10003488 <__sfp>:
10003488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000348a:	4607      	mov	r7, r0
1000348c:	f7ff ffac 	bl	100033e8 <__sfp_lock_acquire>
10003490:	4b1e      	ldr	r3, [pc, #120]	; (1000350c <__sfp+0x84>)
10003492:	681e      	ldr	r6, [r3, #0]
10003494:	69b3      	ldr	r3, [r6, #24]
10003496:	b913      	cbnz	r3, 1000349e <__sfp+0x16>
10003498:	4630      	mov	r0, r6
1000349a:	f7ff ffbd 	bl	10003418 <__sinit>
1000349e:	3648      	adds	r6, #72	; 0x48
100034a0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
100034a4:	3b01      	subs	r3, #1
100034a6:	d503      	bpl.n	100034b0 <__sfp+0x28>
100034a8:	6833      	ldr	r3, [r6, #0]
100034aa:	b30b      	cbz	r3, 100034f0 <__sfp+0x68>
100034ac:	6836      	ldr	r6, [r6, #0]
100034ae:	e7f7      	b.n	100034a0 <__sfp+0x18>
100034b0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
100034b4:	b9d5      	cbnz	r5, 100034ec <__sfp+0x64>
100034b6:	4b16      	ldr	r3, [pc, #88]	; (10003510 <__sfp+0x88>)
100034b8:	f104 0058 	add.w	r0, r4, #88	; 0x58
100034bc:	6665      	str	r5, [r4, #100]	; 0x64
100034be:	60e3      	str	r3, [r4, #12]
100034c0:	f000 f859 	bl	10003576 <__retarget_lock_init_recursive>
100034c4:	f7ff ff96 	bl	100033f4 <__sfp_lock_release>
100034c8:	2208      	movs	r2, #8
100034ca:	4629      	mov	r1, r5
100034cc:	f104 005c 	add.w	r0, r4, #92	; 0x5c
100034d0:	6025      	str	r5, [r4, #0]
100034d2:	61a5      	str	r5, [r4, #24]
100034d4:	e9c4 5501 	strd	r5, r5, [r4, #4]
100034d8:	e9c4 5504 	strd	r5, r5, [r4, #16]
100034dc:	f7ff fee0 	bl	100032a0 <memset>
100034e0:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
100034e4:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
100034e8:	4620      	mov	r0, r4
100034ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
100034ec:	3468      	adds	r4, #104	; 0x68
100034ee:	e7d9      	b.n	100034a4 <__sfp+0x1c>
100034f0:	2104      	movs	r1, #4
100034f2:	4638      	mov	r0, r7
100034f4:	f7ff ff62 	bl	100033bc <__sfmoreglue>
100034f8:	4604      	mov	r4, r0
100034fa:	6030      	str	r0, [r6, #0]
100034fc:	2800      	cmp	r0, #0
100034fe:	d1d5      	bne.n	100034ac <__sfp+0x24>
10003500:	f7ff ff78 	bl	100033f4 <__sfp_lock_release>
10003504:	230c      	movs	r3, #12
10003506:	603b      	str	r3, [r7, #0]
10003508:	e7ee      	b.n	100034e8 <__sfp+0x60>
1000350a:	bf00      	nop
1000350c:	10005fec 	andne	r5, r0, ip, ror #31
10003510:	ffff0001 			; <UNDEFINED> instruction: 0xffff0001

10003514 <fiprintf>:
10003514:	b40e      	push	{r1, r2, r3}
10003516:	b503      	push	{r0, r1, lr}
10003518:	ab03      	add	r3, sp, #12
1000351a:	4601      	mov	r1, r0
1000351c:	4805      	ldr	r0, [pc, #20]	; (10003534 <fiprintf+0x20>)
1000351e:	f853 2b04 	ldr.w	r2, [r3], #4
10003522:	6800      	ldr	r0, [r0, #0]
10003524:	9301      	str	r3, [sp, #4]
10003526:	f000 f93b 	bl	100037a0 <_vfiprintf_r>
1000352a:	b002      	add	sp, #8
1000352c:	f85d eb04 	ldr.w	lr, [sp], #4
10003530:	b003      	add	sp, #12
10003532:	4770      	bx	lr
10003534:	38000008 	stmdacc	r0, {r3}

10003538 <_fwalk_reent>:
10003538:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
1000353c:	4606      	mov	r6, r0
1000353e:	4688      	mov	r8, r1
10003540:	f100 0448 	add.w	r4, r0, #72	; 0x48
10003544:	2700      	movs	r7, #0
10003546:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
1000354a:	f1b9 0901 	subs.w	r9, r9, #1
1000354e:	d505      	bpl.n	1000355c <_fwalk_reent+0x24>
10003550:	6824      	ldr	r4, [r4, #0]
10003552:	2c00      	cmp	r4, #0
10003554:	d1f7      	bne.n	10003546 <_fwalk_reent+0xe>
10003556:	4638      	mov	r0, r7
10003558:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
1000355c:	89ab      	ldrh	r3, [r5, #12]
1000355e:	2b01      	cmp	r3, #1
10003560:	d907      	bls.n	10003572 <_fwalk_reent+0x3a>
10003562:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
10003566:	3301      	adds	r3, #1
10003568:	d003      	beq.n	10003572 <_fwalk_reent+0x3a>
1000356a:	4629      	mov	r1, r5
1000356c:	4630      	mov	r0, r6
1000356e:	47c0      	blx	r8
10003570:	4307      	orrs	r7, r0
10003572:	3568      	adds	r5, #104	; 0x68
10003574:	e7e9      	b.n	1000354a <_fwalk_reent+0x12>

10003576 <__retarget_lock_init_recursive>:
10003576:	4770      	bx	lr

10003578 <__retarget_lock_acquire_recursive>:
10003578:	4770      	bx	lr

1000357a <__retarget_lock_release_recursive>:
1000357a:	4770      	bx	lr

1000357c <malloc>:
1000357c:	4b02      	ldr	r3, [pc, #8]	; (10003588 <malloc+0xc>)
1000357e:	4601      	mov	r1, r0
10003580:	6818      	ldr	r0, [r3, #0]
10003582:	f000 b86f 	b.w	10003664 <_malloc_r>
10003586:	bf00      	nop
10003588:	38000008 	stmdacc	r0, {r3}

1000358c <_free_r>:
1000358c:	b537      	push	{r0, r1, r2, r4, r5, lr}
1000358e:	2900      	cmp	r1, #0
10003590:	d043      	beq.n	1000361a <_free_r+0x8e>
10003592:	f851 3c04 	ldr.w	r3, [r1, #-4]
10003596:	1f0c      	subs	r4, r1, #4
10003598:	9001      	str	r0, [sp, #4]
1000359a:	2b00      	cmp	r3, #0
1000359c:	bfb8      	it	lt
1000359e:	18e4      	addlt	r4, r4, r3
100035a0:	f000 fe56 	bl	10004250 <__malloc_lock>
100035a4:	4a1e      	ldr	r2, [pc, #120]	; (10003620 <_free_r+0x94>)
100035a6:	9801      	ldr	r0, [sp, #4]
100035a8:	6813      	ldr	r3, [r2, #0]
100035aa:	b933      	cbnz	r3, 100035ba <_free_r+0x2e>
100035ac:	6063      	str	r3, [r4, #4]
100035ae:	6014      	str	r4, [r2, #0]
100035b0:	b003      	add	sp, #12
100035b2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
100035b6:	f000 be51 	b.w	1000425c <__malloc_unlock>
100035ba:	42a3      	cmp	r3, r4
100035bc:	d908      	bls.n	100035d0 <_free_r+0x44>
100035be:	6825      	ldr	r5, [r4, #0]
100035c0:	1961      	adds	r1, r4, r5
100035c2:	428b      	cmp	r3, r1
100035c4:	bf01      	itttt	eq
100035c6:	6819      	ldreq	r1, [r3, #0]
100035c8:	685b      	ldreq	r3, [r3, #4]
100035ca:	1949      	addeq	r1, r1, r5
100035cc:	6021      	streq	r1, [r4, #0]
100035ce:	e7ed      	b.n	100035ac <_free_r+0x20>
100035d0:	461a      	mov	r2, r3
100035d2:	685b      	ldr	r3, [r3, #4]
100035d4:	b10b      	cbz	r3, 100035da <_free_r+0x4e>
100035d6:	42a3      	cmp	r3, r4
100035d8:	d9fa      	bls.n	100035d0 <_free_r+0x44>
100035da:	6811      	ldr	r1, [r2, #0]
100035dc:	1855      	adds	r5, r2, r1
100035de:	42a5      	cmp	r5, r4
100035e0:	d10b      	bne.n	100035fa <_free_r+0x6e>
100035e2:	6824      	ldr	r4, [r4, #0]
100035e4:	4421      	add	r1, r4
100035e6:	1854      	adds	r4, r2, r1
100035e8:	6011      	str	r1, [r2, #0]
100035ea:	42a3      	cmp	r3, r4
100035ec:	d1e0      	bne.n	100035b0 <_free_r+0x24>
100035ee:	681c      	ldr	r4, [r3, #0]
100035f0:	685b      	ldr	r3, [r3, #4]
100035f2:	4421      	add	r1, r4
100035f4:	6053      	str	r3, [r2, #4]
100035f6:	6011      	str	r1, [r2, #0]
100035f8:	e7da      	b.n	100035b0 <_free_r+0x24>
100035fa:	d902      	bls.n	10003602 <_free_r+0x76>
100035fc:	230c      	movs	r3, #12
100035fe:	6003      	str	r3, [r0, #0]
10003600:	e7d6      	b.n	100035b0 <_free_r+0x24>
10003602:	6825      	ldr	r5, [r4, #0]
10003604:	1961      	adds	r1, r4, r5
10003606:	428b      	cmp	r3, r1
10003608:	bf02      	ittt	eq
1000360a:	6819      	ldreq	r1, [r3, #0]
1000360c:	685b      	ldreq	r3, [r3, #4]
1000360e:	1949      	addeq	r1, r1, r5
10003610:	6063      	str	r3, [r4, #4]
10003612:	bf08      	it	eq
10003614:	6021      	streq	r1, [r4, #0]
10003616:	6054      	str	r4, [r2, #4]
10003618:	e7ca      	b.n	100035b0 <_free_r+0x24>
1000361a:	b003      	add	sp, #12
1000361c:	bd30      	pop	{r4, r5, pc}
1000361e:	bf00      	nop
10003620:	38002430 	stmdacc	r0, {r4, r5, sl, sp}

10003624 <sbrk_aligned>:
10003624:	b570      	push	{r4, r5, r6, lr}
10003626:	4e0e      	ldr	r6, [pc, #56]	; (10003660 <sbrk_aligned+0x3c>)
10003628:	460c      	mov	r4, r1
1000362a:	4605      	mov	r5, r0
1000362c:	6831      	ldr	r1, [r6, #0]
1000362e:	b911      	cbnz	r1, 10003636 <sbrk_aligned+0x12>
10003630:	f000 fb7c 	bl	10003d2c <_sbrk_r>
10003634:	6030      	str	r0, [r6, #0]
10003636:	4621      	mov	r1, r4
10003638:	4628      	mov	r0, r5
1000363a:	f000 fb77 	bl	10003d2c <_sbrk_r>
1000363e:	1c43      	adds	r3, r0, #1
10003640:	d00a      	beq.n	10003658 <sbrk_aligned+0x34>
10003642:	1cc4      	adds	r4, r0, #3
10003644:	f024 0403 	bic.w	r4, r4, #3
10003648:	42a0      	cmp	r0, r4
1000364a:	d007      	beq.n	1000365c <sbrk_aligned+0x38>
1000364c:	1a21      	subs	r1, r4, r0
1000364e:	4628      	mov	r0, r5
10003650:	f000 fb6c 	bl	10003d2c <_sbrk_r>
10003654:	3001      	adds	r0, #1
10003656:	d101      	bne.n	1000365c <sbrk_aligned+0x38>
10003658:	f04f 34ff 	mov.w	r4, #4294967295
1000365c:	4620      	mov	r0, r4
1000365e:	bd70      	pop	{r4, r5, r6, pc}
10003660:	38002434 	stmdacc	r0, {r2, r4, r5, sl, sp}

10003664 <_malloc_r>:
10003664:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10003668:	1ccd      	adds	r5, r1, #3
1000366a:	4607      	mov	r7, r0
1000366c:	f025 0503 	bic.w	r5, r5, #3
10003670:	3508      	adds	r5, #8
10003672:	2d0c      	cmp	r5, #12
10003674:	bf38      	it	cc
10003676:	250c      	movcc	r5, #12
10003678:	2d00      	cmp	r5, #0
1000367a:	db01      	blt.n	10003680 <_malloc_r+0x1c>
1000367c:	42a9      	cmp	r1, r5
1000367e:	d905      	bls.n	1000368c <_malloc_r+0x28>
10003680:	230c      	movs	r3, #12
10003682:	2600      	movs	r6, #0
10003684:	603b      	str	r3, [r7, #0]
10003686:	4630      	mov	r0, r6
10003688:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
1000368c:	4e2e      	ldr	r6, [pc, #184]	; (10003748 <_malloc_r+0xe4>)
1000368e:	f000 fddf 	bl	10004250 <__malloc_lock>
10003692:	6833      	ldr	r3, [r6, #0]
10003694:	461c      	mov	r4, r3
10003696:	bb34      	cbnz	r4, 100036e6 <_malloc_r+0x82>
10003698:	4629      	mov	r1, r5
1000369a:	4638      	mov	r0, r7
1000369c:	f7ff ffc2 	bl	10003624 <sbrk_aligned>
100036a0:	1c43      	adds	r3, r0, #1
100036a2:	4604      	mov	r4, r0
100036a4:	d14d      	bne.n	10003742 <_malloc_r+0xde>
100036a6:	6834      	ldr	r4, [r6, #0]
100036a8:	4626      	mov	r6, r4
100036aa:	2e00      	cmp	r6, #0
100036ac:	d140      	bne.n	10003730 <_malloc_r+0xcc>
100036ae:	6823      	ldr	r3, [r4, #0]
100036b0:	4631      	mov	r1, r6
100036b2:	4638      	mov	r0, r7
100036b4:	eb04 0803 	add.w	r8, r4, r3
100036b8:	f000 fb38 	bl	10003d2c <_sbrk_r>
100036bc:	4580      	cmp	r8, r0
100036be:	d13a      	bne.n	10003736 <_malloc_r+0xd2>
100036c0:	6821      	ldr	r1, [r4, #0]
100036c2:	3503      	adds	r5, #3
100036c4:	4638      	mov	r0, r7
100036c6:	1a6d      	subs	r5, r5, r1
100036c8:	f025 0503 	bic.w	r5, r5, #3
100036cc:	3508      	adds	r5, #8
100036ce:	2d0c      	cmp	r5, #12
100036d0:	bf38      	it	cc
100036d2:	250c      	movcc	r5, #12
100036d4:	4629      	mov	r1, r5
100036d6:	f7ff ffa5 	bl	10003624 <sbrk_aligned>
100036da:	3001      	adds	r0, #1
100036dc:	d02b      	beq.n	10003736 <_malloc_r+0xd2>
100036de:	6823      	ldr	r3, [r4, #0]
100036e0:	442b      	add	r3, r5
100036e2:	6023      	str	r3, [r4, #0]
100036e4:	e00e      	b.n	10003704 <_malloc_r+0xa0>
100036e6:	6822      	ldr	r2, [r4, #0]
100036e8:	1b52      	subs	r2, r2, r5
100036ea:	d41e      	bmi.n	1000372a <_malloc_r+0xc6>
100036ec:	2a0b      	cmp	r2, #11
100036ee:	d916      	bls.n	1000371e <_malloc_r+0xba>
100036f0:	1961      	adds	r1, r4, r5
100036f2:	42a3      	cmp	r3, r4
100036f4:	6025      	str	r5, [r4, #0]
100036f6:	bf18      	it	ne
100036f8:	6059      	strne	r1, [r3, #4]
100036fa:	6863      	ldr	r3, [r4, #4]
100036fc:	bf08      	it	eq
100036fe:	6031      	streq	r1, [r6, #0]
10003700:	5162      	str	r2, [r4, r5]
10003702:	604b      	str	r3, [r1, #4]
10003704:	f104 060b 	add.w	r6, r4, #11
10003708:	4638      	mov	r0, r7
1000370a:	f000 fda7 	bl	1000425c <__malloc_unlock>
1000370e:	1d23      	adds	r3, r4, #4
10003710:	f026 0607 	bic.w	r6, r6, #7
10003714:	1af2      	subs	r2, r6, r3
10003716:	d0b6      	beq.n	10003686 <_malloc_r+0x22>
10003718:	1b9b      	subs	r3, r3, r6
1000371a:	50a3      	str	r3, [r4, r2]
1000371c:	e7b3      	b.n	10003686 <_malloc_r+0x22>
1000371e:	6862      	ldr	r2, [r4, #4]
10003720:	42a3      	cmp	r3, r4
10003722:	bf0c      	ite	eq
10003724:	6032      	streq	r2, [r6, #0]
10003726:	605a      	strne	r2, [r3, #4]
10003728:	e7ec      	b.n	10003704 <_malloc_r+0xa0>
1000372a:	4623      	mov	r3, r4
1000372c:	6864      	ldr	r4, [r4, #4]
1000372e:	e7b2      	b.n	10003696 <_malloc_r+0x32>
10003730:	4634      	mov	r4, r6
10003732:	6876      	ldr	r6, [r6, #4]
10003734:	e7b9      	b.n	100036aa <_malloc_r+0x46>
10003736:	230c      	movs	r3, #12
10003738:	4638      	mov	r0, r7
1000373a:	603b      	str	r3, [r7, #0]
1000373c:	f000 fd8e 	bl	1000425c <__malloc_unlock>
10003740:	e7a1      	b.n	10003686 <_malloc_r+0x22>
10003742:	6025      	str	r5, [r4, #0]
10003744:	e7de      	b.n	10003704 <_malloc_r+0xa0>
10003746:	bf00      	nop
10003748:	38002430 	stmdacc	r0, {r4, r5, sl, sp}

1000374c <__sfputc_r>:
1000374c:	6893      	ldr	r3, [r2, #8]
1000374e:	3b01      	subs	r3, #1
10003750:	2b00      	cmp	r3, #0
10003752:	6093      	str	r3, [r2, #8]
10003754:	b410      	push	{r4}
10003756:	da08      	bge.n	1000376a <__sfputc_r+0x1e>
10003758:	6994      	ldr	r4, [r2, #24]
1000375a:	42a3      	cmp	r3, r4
1000375c:	db01      	blt.n	10003762 <__sfputc_r+0x16>
1000375e:	290a      	cmp	r1, #10
10003760:	d103      	bne.n	1000376a <__sfputc_r+0x1e>
10003762:	f85d 4b04 	ldr.w	r4, [sp], #4
10003766:	f000 bb35 	b.w	10003dd4 <__swbuf_r>
1000376a:	6813      	ldr	r3, [r2, #0]
1000376c:	1c58      	adds	r0, r3, #1
1000376e:	6010      	str	r0, [r2, #0]
10003770:	4608      	mov	r0, r1
10003772:	7019      	strb	r1, [r3, #0]
10003774:	f85d 4b04 	ldr.w	r4, [sp], #4
10003778:	4770      	bx	lr

1000377a <__sfputs_r>:
1000377a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
1000377c:	4606      	mov	r6, r0
1000377e:	460f      	mov	r7, r1
10003780:	4614      	mov	r4, r2
10003782:	18d5      	adds	r5, r2, r3
10003784:	42ac      	cmp	r4, r5
10003786:	d101      	bne.n	1000378c <__sfputs_r+0x12>
10003788:	2000      	movs	r0, #0
1000378a:	e007      	b.n	1000379c <__sfputs_r+0x22>
1000378c:	463a      	mov	r2, r7
1000378e:	f814 1b01 	ldrb.w	r1, [r4], #1
10003792:	4630      	mov	r0, r6
10003794:	f7ff ffda 	bl	1000374c <__sfputc_r>
10003798:	1c43      	adds	r3, r0, #1
1000379a:	d1f3      	bne.n	10003784 <__sfputs_r+0xa>
1000379c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

100037a0 <_vfiprintf_r>:
100037a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
100037a4:	460d      	mov	r5, r1
100037a6:	b09d      	sub	sp, #116	; 0x74
100037a8:	4614      	mov	r4, r2
100037aa:	4698      	mov	r8, r3
100037ac:	4606      	mov	r6, r0
100037ae:	b118      	cbz	r0, 100037b8 <_vfiprintf_r+0x18>
100037b0:	6983      	ldr	r3, [r0, #24]
100037b2:	b90b      	cbnz	r3, 100037b8 <_vfiprintf_r+0x18>
100037b4:	f7ff fe30 	bl	10003418 <__sinit>
100037b8:	4b89      	ldr	r3, [pc, #548]	; (100039e0 <_vfiprintf_r+0x240>)
100037ba:	429d      	cmp	r5, r3
100037bc:	d11b      	bne.n	100037f6 <_vfiprintf_r+0x56>
100037be:	6875      	ldr	r5, [r6, #4]
100037c0:	6e6b      	ldr	r3, [r5, #100]	; 0x64
100037c2:	07d9      	lsls	r1, r3, #31
100037c4:	d405      	bmi.n	100037d2 <_vfiprintf_r+0x32>
100037c6:	89ab      	ldrh	r3, [r5, #12]
100037c8:	059a      	lsls	r2, r3, #22
100037ca:	d402      	bmi.n	100037d2 <_vfiprintf_r+0x32>
100037cc:	6da8      	ldr	r0, [r5, #88]	; 0x58
100037ce:	f7ff fed3 	bl	10003578 <__retarget_lock_acquire_recursive>
100037d2:	89ab      	ldrh	r3, [r5, #12]
100037d4:	071b      	lsls	r3, r3, #28
100037d6:	d501      	bpl.n	100037dc <_vfiprintf_r+0x3c>
100037d8:	692b      	ldr	r3, [r5, #16]
100037da:	b9eb      	cbnz	r3, 10003818 <_vfiprintf_r+0x78>
100037dc:	4629      	mov	r1, r5
100037de:	4630      	mov	r0, r6
100037e0:	f000 fb5c 	bl	10003e9c <__swsetup_r>
100037e4:	b1c0      	cbz	r0, 10003818 <_vfiprintf_r+0x78>
100037e6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
100037e8:	07dc      	lsls	r4, r3, #31
100037ea:	d50e      	bpl.n	1000380a <_vfiprintf_r+0x6a>
100037ec:	f04f 30ff 	mov.w	r0, #4294967295
100037f0:	b01d      	add	sp, #116	; 0x74
100037f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100037f6:	4b7b      	ldr	r3, [pc, #492]	; (100039e4 <_vfiprintf_r+0x244>)
100037f8:	429d      	cmp	r5, r3
100037fa:	d101      	bne.n	10003800 <_vfiprintf_r+0x60>
100037fc:	68b5      	ldr	r5, [r6, #8]
100037fe:	e7df      	b.n	100037c0 <_vfiprintf_r+0x20>
10003800:	4b79      	ldr	r3, [pc, #484]	; (100039e8 <_vfiprintf_r+0x248>)
10003802:	429d      	cmp	r5, r3
10003804:	bf08      	it	eq
10003806:	68f5      	ldreq	r5, [r6, #12]
10003808:	e7da      	b.n	100037c0 <_vfiprintf_r+0x20>
1000380a:	89ab      	ldrh	r3, [r5, #12]
1000380c:	0598      	lsls	r0, r3, #22
1000380e:	d4ed      	bmi.n	100037ec <_vfiprintf_r+0x4c>
10003810:	6da8      	ldr	r0, [r5, #88]	; 0x58
10003812:	f7ff feb2 	bl	1000357a <__retarget_lock_release_recursive>
10003816:	e7e9      	b.n	100037ec <_vfiprintf_r+0x4c>
10003818:	2300      	movs	r3, #0
1000381a:	f8cd 800c 	str.w	r8, [sp, #12]
1000381e:	f04f 0901 	mov.w	r9, #1
10003822:	f8df 81c8 	ldr.w	r8, [pc, #456]	; 100039ec <_vfiprintf_r+0x24c>
10003826:	9309      	str	r3, [sp, #36]	; 0x24
10003828:	2320      	movs	r3, #32
1000382a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
1000382e:	2330      	movs	r3, #48	; 0x30
10003830:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
10003834:	4623      	mov	r3, r4
10003836:	469a      	mov	sl, r3
10003838:	f813 2b01 	ldrb.w	r2, [r3], #1
1000383c:	b10a      	cbz	r2, 10003842 <_vfiprintf_r+0xa2>
1000383e:	2a25      	cmp	r2, #37	; 0x25
10003840:	d1f9      	bne.n	10003836 <_vfiprintf_r+0x96>
10003842:	ebba 0b04 	subs.w	fp, sl, r4
10003846:	d00b      	beq.n	10003860 <_vfiprintf_r+0xc0>
10003848:	465b      	mov	r3, fp
1000384a:	4622      	mov	r2, r4
1000384c:	4629      	mov	r1, r5
1000384e:	4630      	mov	r0, r6
10003850:	f7ff ff93 	bl	1000377a <__sfputs_r>
10003854:	3001      	adds	r0, #1
10003856:	f000 80aa 	beq.w	100039ae <_vfiprintf_r+0x20e>
1000385a:	9a09      	ldr	r2, [sp, #36]	; 0x24
1000385c:	445a      	add	r2, fp
1000385e:	9209      	str	r2, [sp, #36]	; 0x24
10003860:	f89a 3000 	ldrb.w	r3, [sl]
10003864:	2b00      	cmp	r3, #0
10003866:	f000 80a2 	beq.w	100039ae <_vfiprintf_r+0x20e>
1000386a:	2300      	movs	r3, #0
1000386c:	f04f 32ff 	mov.w	r2, #4294967295
10003870:	f10a 0a01 	add.w	sl, sl, #1
10003874:	9304      	str	r3, [sp, #16]
10003876:	9307      	str	r3, [sp, #28]
10003878:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
1000387c:	931a      	str	r3, [sp, #104]	; 0x68
1000387e:	e9cd 2305 	strd	r2, r3, [sp, #20]
10003882:	4654      	mov	r4, sl
10003884:	2205      	movs	r2, #5
10003886:	4859      	ldr	r0, [pc, #356]	; (100039ec <_vfiprintf_r+0x24c>)
10003888:	f814 1b01 	ldrb.w	r1, [r4], #1
1000388c:	f000 fcc4 	bl	10004218 <memchr>
10003890:	9a04      	ldr	r2, [sp, #16]
10003892:	b9d8      	cbnz	r0, 100038cc <_vfiprintf_r+0x12c>
10003894:	06d1      	lsls	r1, r2, #27
10003896:	bf44      	itt	mi
10003898:	2320      	movmi	r3, #32
1000389a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
1000389e:	0713      	lsls	r3, r2, #28
100038a0:	bf44      	itt	mi
100038a2:	232b      	movmi	r3, #43	; 0x2b
100038a4:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
100038a8:	f89a 3000 	ldrb.w	r3, [sl]
100038ac:	2b2a      	cmp	r3, #42	; 0x2a
100038ae:	d015      	beq.n	100038dc <_vfiprintf_r+0x13c>
100038b0:	9a07      	ldr	r2, [sp, #28]
100038b2:	4654      	mov	r4, sl
100038b4:	2000      	movs	r0, #0
100038b6:	f04f 0c0a 	mov.w	ip, #10
100038ba:	4621      	mov	r1, r4
100038bc:	f811 3b01 	ldrb.w	r3, [r1], #1
100038c0:	3b30      	subs	r3, #48	; 0x30
100038c2:	2b09      	cmp	r3, #9
100038c4:	d94e      	bls.n	10003964 <_vfiprintf_r+0x1c4>
100038c6:	b1b0      	cbz	r0, 100038f6 <_vfiprintf_r+0x156>
100038c8:	9207      	str	r2, [sp, #28]
100038ca:	e014      	b.n	100038f6 <_vfiprintf_r+0x156>
100038cc:	eba0 0308 	sub.w	r3, r0, r8
100038d0:	46a2      	mov	sl, r4
100038d2:	fa09 f303 	lsl.w	r3, r9, r3
100038d6:	4313      	orrs	r3, r2
100038d8:	9304      	str	r3, [sp, #16]
100038da:	e7d2      	b.n	10003882 <_vfiprintf_r+0xe2>
100038dc:	9b03      	ldr	r3, [sp, #12]
100038de:	1d19      	adds	r1, r3, #4
100038e0:	681b      	ldr	r3, [r3, #0]
100038e2:	2b00      	cmp	r3, #0
100038e4:	9103      	str	r1, [sp, #12]
100038e6:	bfbb      	ittet	lt
100038e8:	425b      	neglt	r3, r3
100038ea:	f042 0202 	orrlt.w	r2, r2, #2
100038ee:	9307      	strge	r3, [sp, #28]
100038f0:	9307      	strlt	r3, [sp, #28]
100038f2:	bfb8      	it	lt
100038f4:	9204      	strlt	r2, [sp, #16]
100038f6:	7823      	ldrb	r3, [r4, #0]
100038f8:	2b2e      	cmp	r3, #46	; 0x2e
100038fa:	d10c      	bne.n	10003916 <_vfiprintf_r+0x176>
100038fc:	7863      	ldrb	r3, [r4, #1]
100038fe:	2b2a      	cmp	r3, #42	; 0x2a
10003900:	d135      	bne.n	1000396e <_vfiprintf_r+0x1ce>
10003902:	9b03      	ldr	r3, [sp, #12]
10003904:	3402      	adds	r4, #2
10003906:	1d1a      	adds	r2, r3, #4
10003908:	681b      	ldr	r3, [r3, #0]
1000390a:	2b00      	cmp	r3, #0
1000390c:	9203      	str	r2, [sp, #12]
1000390e:	bfb8      	it	lt
10003910:	f04f 33ff 	movlt.w	r3, #4294967295
10003914:	9305      	str	r3, [sp, #20]
10003916:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 100039fc <_vfiprintf_r+0x25c>
1000391a:	2203      	movs	r2, #3
1000391c:	7821      	ldrb	r1, [r4, #0]
1000391e:	4650      	mov	r0, sl
10003920:	f000 fc7a 	bl	10004218 <memchr>
10003924:	b140      	cbz	r0, 10003938 <_vfiprintf_r+0x198>
10003926:	2340      	movs	r3, #64	; 0x40
10003928:	eba0 000a 	sub.w	r0, r0, sl
1000392c:	3401      	adds	r4, #1
1000392e:	fa03 f000 	lsl.w	r0, r3, r0
10003932:	9b04      	ldr	r3, [sp, #16]
10003934:	4303      	orrs	r3, r0
10003936:	9304      	str	r3, [sp, #16]
10003938:	f814 1b01 	ldrb.w	r1, [r4], #1
1000393c:	2206      	movs	r2, #6
1000393e:	482c      	ldr	r0, [pc, #176]	; (100039f0 <_vfiprintf_r+0x250>)
10003940:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
10003944:	f000 fc68 	bl	10004218 <memchr>
10003948:	2800      	cmp	r0, #0
1000394a:	d03f      	beq.n	100039cc <_vfiprintf_r+0x22c>
1000394c:	4b29      	ldr	r3, [pc, #164]	; (100039f4 <_vfiprintf_r+0x254>)
1000394e:	bb1b      	cbnz	r3, 10003998 <_vfiprintf_r+0x1f8>
10003950:	9b03      	ldr	r3, [sp, #12]
10003952:	3307      	adds	r3, #7
10003954:	f023 0307 	bic.w	r3, r3, #7
10003958:	3308      	adds	r3, #8
1000395a:	9303      	str	r3, [sp, #12]
1000395c:	9b09      	ldr	r3, [sp, #36]	; 0x24
1000395e:	443b      	add	r3, r7
10003960:	9309      	str	r3, [sp, #36]	; 0x24
10003962:	e767      	b.n	10003834 <_vfiprintf_r+0x94>
10003964:	fb0c 3202 	mla	r2, ip, r2, r3
10003968:	460c      	mov	r4, r1
1000396a:	2001      	movs	r0, #1
1000396c:	e7a5      	b.n	100038ba <_vfiprintf_r+0x11a>
1000396e:	2300      	movs	r3, #0
10003970:	3401      	adds	r4, #1
10003972:	f04f 0c0a 	mov.w	ip, #10
10003976:	4619      	mov	r1, r3
10003978:	9305      	str	r3, [sp, #20]
1000397a:	4620      	mov	r0, r4
1000397c:	f810 2b01 	ldrb.w	r2, [r0], #1
10003980:	3a30      	subs	r2, #48	; 0x30
10003982:	2a09      	cmp	r2, #9
10003984:	d903      	bls.n	1000398e <_vfiprintf_r+0x1ee>
10003986:	2b00      	cmp	r3, #0
10003988:	d0c5      	beq.n	10003916 <_vfiprintf_r+0x176>
1000398a:	9105      	str	r1, [sp, #20]
1000398c:	e7c3      	b.n	10003916 <_vfiprintf_r+0x176>
1000398e:	fb0c 2101 	mla	r1, ip, r1, r2
10003992:	4604      	mov	r4, r0
10003994:	2301      	movs	r3, #1
10003996:	e7f0      	b.n	1000397a <_vfiprintf_r+0x1da>
10003998:	ab03      	add	r3, sp, #12
1000399a:	462a      	mov	r2, r5
1000399c:	a904      	add	r1, sp, #16
1000399e:	4630      	mov	r0, r6
100039a0:	9300      	str	r3, [sp, #0]
100039a2:	4b15      	ldr	r3, [pc, #84]	; (100039f8 <_vfiprintf_r+0x258>)
100039a4:	e000      	b.n	100039a8 <_vfiprintf_r+0x208>
100039a6:	bf00      	nop
100039a8:	4607      	mov	r7, r0
100039aa:	1c78      	adds	r0, r7, #1
100039ac:	d1d6      	bne.n	1000395c <_vfiprintf_r+0x1bc>
100039ae:	6e6b      	ldr	r3, [r5, #100]	; 0x64
100039b0:	07d9      	lsls	r1, r3, #31
100039b2:	d405      	bmi.n	100039c0 <_vfiprintf_r+0x220>
100039b4:	89ab      	ldrh	r3, [r5, #12]
100039b6:	059a      	lsls	r2, r3, #22
100039b8:	d402      	bmi.n	100039c0 <_vfiprintf_r+0x220>
100039ba:	6da8      	ldr	r0, [r5, #88]	; 0x58
100039bc:	f7ff fddd 	bl	1000357a <__retarget_lock_release_recursive>
100039c0:	89ab      	ldrh	r3, [r5, #12]
100039c2:	065b      	lsls	r3, r3, #25
100039c4:	f53f af12 	bmi.w	100037ec <_vfiprintf_r+0x4c>
100039c8:	9809      	ldr	r0, [sp, #36]	; 0x24
100039ca:	e711      	b.n	100037f0 <_vfiprintf_r+0x50>
100039cc:	ab03      	add	r3, sp, #12
100039ce:	462a      	mov	r2, r5
100039d0:	a904      	add	r1, sp, #16
100039d2:	4630      	mov	r0, r6
100039d4:	9300      	str	r3, [sp, #0]
100039d6:	4b08      	ldr	r3, [pc, #32]	; (100039f8 <_vfiprintf_r+0x258>)
100039d8:	f000 f882 	bl	10003ae0 <_printf_i>
100039dc:	e7e4      	b.n	100039a8 <_vfiprintf_r+0x208>
100039de:	bf00      	nop
100039e0:	100060e4 	andne	r6, r0, r4, ror #1
100039e4:	10006104 	andne	r6, r0, r4, lsl #2
100039e8:	100060c4 	andne	r6, r0, r4, asr #1
100039ec:	10006124 	andne	r6, r0, r4, lsr #2
100039f0:	1000612e 	andne	r6, r0, lr, lsr #2
100039f4:	00000000 	andeq	r0, r0, r0
100039f8:	1000377b 	andne	r3, r0, fp, ror r7
100039fc:	1000612a 	andne	r6, r0, sl, lsr #2

10003a00 <_printf_common>:
10003a00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10003a04:	4616      	mov	r6, r2
10003a06:	4699      	mov	r9, r3
10003a08:	688a      	ldr	r2, [r1, #8]
10003a0a:	4607      	mov	r7, r0
10003a0c:	690b      	ldr	r3, [r1, #16]
10003a0e:	460c      	mov	r4, r1
10003a10:	f8dd 8020 	ldr.w	r8, [sp, #32]
10003a14:	4293      	cmp	r3, r2
10003a16:	bfb8      	it	lt
10003a18:	4613      	movlt	r3, r2
10003a1a:	6033      	str	r3, [r6, #0]
10003a1c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
10003a20:	b10a      	cbz	r2, 10003a26 <_printf_common+0x26>
10003a22:	3301      	adds	r3, #1
10003a24:	6033      	str	r3, [r6, #0]
10003a26:	6823      	ldr	r3, [r4, #0]
10003a28:	0699      	lsls	r1, r3, #26
10003a2a:	bf42      	ittt	mi
10003a2c:	6833      	ldrmi	r3, [r6, #0]
10003a2e:	3302      	addmi	r3, #2
10003a30:	6033      	strmi	r3, [r6, #0]
10003a32:	6825      	ldr	r5, [r4, #0]
10003a34:	f015 0506 	ands.w	r5, r5, #6
10003a38:	d106      	bne.n	10003a48 <_printf_common+0x48>
10003a3a:	f104 0a19 	add.w	sl, r4, #25
10003a3e:	68e3      	ldr	r3, [r4, #12]
10003a40:	6832      	ldr	r2, [r6, #0]
10003a42:	1a9b      	subs	r3, r3, r2
10003a44:	42ab      	cmp	r3, r5
10003a46:	dc29      	bgt.n	10003a9c <_printf_common+0x9c>
10003a48:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
10003a4c:	1e13      	subs	r3, r2, #0
10003a4e:	6822      	ldr	r2, [r4, #0]
10003a50:	bf18      	it	ne
10003a52:	2301      	movne	r3, #1
10003a54:	0692      	lsls	r2, r2, #26
10003a56:	d42e      	bmi.n	10003ab6 <_printf_common+0xb6>
10003a58:	f104 0243 	add.w	r2, r4, #67	; 0x43
10003a5c:	4649      	mov	r1, r9
10003a5e:	4638      	mov	r0, r7
10003a60:	47c0      	blx	r8
10003a62:	3001      	adds	r0, #1
10003a64:	d021      	beq.n	10003aaa <_printf_common+0xaa>
10003a66:	6823      	ldr	r3, [r4, #0]
10003a68:	341a      	adds	r4, #26
10003a6a:	f854 5c0e 	ldr.w	r5, [r4, #-14]
10003a6e:	f003 0306 	and.w	r3, r3, #6
10003a72:	6832      	ldr	r2, [r6, #0]
10003a74:	2600      	movs	r6, #0
10003a76:	2b04      	cmp	r3, #4
10003a78:	f854 3c12 	ldr.w	r3, [r4, #-18]
10003a7c:	bf08      	it	eq
10003a7e:	1aad      	subeq	r5, r5, r2
10003a80:	f854 2c0a 	ldr.w	r2, [r4, #-10]
10003a84:	bf14      	ite	ne
10003a86:	2500      	movne	r5, #0
10003a88:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
10003a8c:	4293      	cmp	r3, r2
10003a8e:	bfc4      	itt	gt
10003a90:	1a9b      	subgt	r3, r3, r2
10003a92:	18ed      	addgt	r5, r5, r3
10003a94:	42b5      	cmp	r5, r6
10003a96:	d11a      	bne.n	10003ace <_printf_common+0xce>
10003a98:	2000      	movs	r0, #0
10003a9a:	e008      	b.n	10003aae <_printf_common+0xae>
10003a9c:	2301      	movs	r3, #1
10003a9e:	4652      	mov	r2, sl
10003aa0:	4649      	mov	r1, r9
10003aa2:	4638      	mov	r0, r7
10003aa4:	47c0      	blx	r8
10003aa6:	3001      	adds	r0, #1
10003aa8:	d103      	bne.n	10003ab2 <_printf_common+0xb2>
10003aaa:	f04f 30ff 	mov.w	r0, #4294967295
10003aae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10003ab2:	3501      	adds	r5, #1
10003ab4:	e7c3      	b.n	10003a3e <_printf_common+0x3e>
10003ab6:	18e1      	adds	r1, r4, r3
10003ab8:	1c5a      	adds	r2, r3, #1
10003aba:	2030      	movs	r0, #48	; 0x30
10003abc:	3302      	adds	r3, #2
10003abe:	4422      	add	r2, r4
10003ac0:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
10003ac4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
10003ac8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
10003acc:	e7c4      	b.n	10003a58 <_printf_common+0x58>
10003ace:	2301      	movs	r3, #1
10003ad0:	4622      	mov	r2, r4
10003ad2:	4649      	mov	r1, r9
10003ad4:	4638      	mov	r0, r7
10003ad6:	47c0      	blx	r8
10003ad8:	3001      	adds	r0, #1
10003ada:	d0e6      	beq.n	10003aaa <_printf_common+0xaa>
10003adc:	3601      	adds	r6, #1
10003ade:	e7d9      	b.n	10003a94 <_printf_common+0x94>

10003ae0 <_printf_i>:
10003ae0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
10003ae4:	7e0f      	ldrb	r7, [r1, #24]
10003ae6:	4691      	mov	r9, r2
10003ae8:	4680      	mov	r8, r0
10003aea:	460c      	mov	r4, r1
10003aec:	2f78      	cmp	r7, #120	; 0x78
10003aee:	469a      	mov	sl, r3
10003af0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
10003af2:	f101 0243 	add.w	r2, r1, #67	; 0x43
10003af6:	d807      	bhi.n	10003b08 <_printf_i+0x28>
10003af8:	2f62      	cmp	r7, #98	; 0x62
10003afa:	d80a      	bhi.n	10003b12 <_printf_i+0x32>
10003afc:	2f00      	cmp	r7, #0
10003afe:	f000 80d8 	beq.w	10003cb2 <_printf_i+0x1d2>
10003b02:	2f58      	cmp	r7, #88	; 0x58
10003b04:	f000 80a3 	beq.w	10003c4e <_printf_i+0x16e>
10003b08:	f104 0542 	add.w	r5, r4, #66	; 0x42
10003b0c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
10003b10:	e03a      	b.n	10003b88 <_printf_i+0xa8>
10003b12:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
10003b16:	2b15      	cmp	r3, #21
10003b18:	d8f6      	bhi.n	10003b08 <_printf_i+0x28>
10003b1a:	a101      	add	r1, pc, #4	; (adr r1, 10003b20 <_printf_i+0x40>)
10003b1c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
10003b20:	10003b79 	andne	r3, r0, r9, ror fp
10003b24:	10003b8d 	andne	r3, r0, sp, lsl #23
10003b28:	10003b09 	andne	r3, r0, r9, lsl #22
10003b2c:	10003b09 	andne	r3, r0, r9, lsl #22
10003b30:	10003b09 	andne	r3, r0, r9, lsl #22
10003b34:	10003b09 	andne	r3, r0, r9, lsl #22
10003b38:	10003b8d 	andne	r3, r0, sp, lsl #23
10003b3c:	10003b09 	andne	r3, r0, r9, lsl #22
10003b40:	10003b09 	andne	r3, r0, r9, lsl #22
10003b44:	10003b09 	andne	r3, r0, r9, lsl #22
10003b48:	10003b09 	andne	r3, r0, r9, lsl #22
10003b4c:	10003c99 	mulne	r0, r9, ip
10003b50:	10003bbd 			; <UNDEFINED> instruction: 0x10003bbd
10003b54:	10003c7b 	andne	r3, r0, fp, ror ip
10003b58:	10003b09 	andne	r3, r0, r9, lsl #22
10003b5c:	10003b09 	andne	r3, r0, r9, lsl #22
10003b60:	10003cbb 			; <UNDEFINED> instruction: 0x10003cbb
10003b64:	10003b09 	andne	r3, r0, r9, lsl #22
10003b68:	10003bbd 			; <UNDEFINED> instruction: 0x10003bbd
10003b6c:	10003b09 	andne	r3, r0, r9, lsl #22
10003b70:	10003b09 	andne	r3, r0, r9, lsl #22
10003b74:	10003c83 	andne	r3, r0, r3, lsl #25
10003b78:	682b      	ldr	r3, [r5, #0]
10003b7a:	1d1a      	adds	r2, r3, #4
10003b7c:	681b      	ldr	r3, [r3, #0]
10003b7e:	602a      	str	r2, [r5, #0]
10003b80:	f104 0542 	add.w	r5, r4, #66	; 0x42
10003b84:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
10003b88:	2301      	movs	r3, #1
10003b8a:	e0a3      	b.n	10003cd4 <_printf_i+0x1f4>
10003b8c:	6820      	ldr	r0, [r4, #0]
10003b8e:	6829      	ldr	r1, [r5, #0]
10003b90:	0606      	lsls	r6, r0, #24
10003b92:	f101 0304 	add.w	r3, r1, #4
10003b96:	d50a      	bpl.n	10003bae <_printf_i+0xce>
10003b98:	680e      	ldr	r6, [r1, #0]
10003b9a:	602b      	str	r3, [r5, #0]
10003b9c:	2e00      	cmp	r6, #0
10003b9e:	da03      	bge.n	10003ba8 <_printf_i+0xc8>
10003ba0:	232d      	movs	r3, #45	; 0x2d
10003ba2:	4276      	negs	r6, r6
10003ba4:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
10003ba8:	485e      	ldr	r0, [pc, #376]	; (10003d24 <_printf_i+0x244>)
10003baa:	230a      	movs	r3, #10
10003bac:	e019      	b.n	10003be2 <_printf_i+0x102>
10003bae:	680e      	ldr	r6, [r1, #0]
10003bb0:	f010 0f40 	tst.w	r0, #64	; 0x40
10003bb4:	602b      	str	r3, [r5, #0]
10003bb6:	bf18      	it	ne
10003bb8:	b236      	sxthne	r6, r6
10003bba:	e7ef      	b.n	10003b9c <_printf_i+0xbc>
10003bbc:	682b      	ldr	r3, [r5, #0]
10003bbe:	6820      	ldr	r0, [r4, #0]
10003bc0:	1d19      	adds	r1, r3, #4
10003bc2:	6029      	str	r1, [r5, #0]
10003bc4:	0601      	lsls	r1, r0, #24
10003bc6:	d501      	bpl.n	10003bcc <_printf_i+0xec>
10003bc8:	681e      	ldr	r6, [r3, #0]
10003bca:	e002      	b.n	10003bd2 <_printf_i+0xf2>
10003bcc:	0646      	lsls	r6, r0, #25
10003bce:	d5fb      	bpl.n	10003bc8 <_printf_i+0xe8>
10003bd0:	881e      	ldrh	r6, [r3, #0]
10003bd2:	2f6f      	cmp	r7, #111	; 0x6f
10003bd4:	4853      	ldr	r0, [pc, #332]	; (10003d24 <_printf_i+0x244>)
10003bd6:	bf0c      	ite	eq
10003bd8:	2308      	moveq	r3, #8
10003bda:	230a      	movne	r3, #10
10003bdc:	2100      	movs	r1, #0
10003bde:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
10003be2:	6865      	ldr	r5, [r4, #4]
10003be4:	2d00      	cmp	r5, #0
10003be6:	60a5      	str	r5, [r4, #8]
10003be8:	bfa2      	ittt	ge
10003bea:	6821      	ldrge	r1, [r4, #0]
10003bec:	f021 0104 	bicge.w	r1, r1, #4
10003bf0:	6021      	strge	r1, [r4, #0]
10003bf2:	b90e      	cbnz	r6, 10003bf8 <_printf_i+0x118>
10003bf4:	2d00      	cmp	r5, #0
10003bf6:	d04d      	beq.n	10003c94 <_printf_i+0x1b4>
10003bf8:	4615      	mov	r5, r2
10003bfa:	fbb6 f1f3 	udiv	r1, r6, r3
10003bfe:	fb03 6711 	mls	r7, r3, r1, r6
10003c02:	5dc7      	ldrb	r7, [r0, r7]
10003c04:	f805 7d01 	strb.w	r7, [r5, #-1]!
10003c08:	4637      	mov	r7, r6
10003c0a:	460e      	mov	r6, r1
10003c0c:	42bb      	cmp	r3, r7
10003c0e:	d9f4      	bls.n	10003bfa <_printf_i+0x11a>
10003c10:	2b08      	cmp	r3, #8
10003c12:	d10b      	bne.n	10003c2c <_printf_i+0x14c>
10003c14:	6823      	ldr	r3, [r4, #0]
10003c16:	07de      	lsls	r6, r3, #31
10003c18:	d508      	bpl.n	10003c2c <_printf_i+0x14c>
10003c1a:	6923      	ldr	r3, [r4, #16]
10003c1c:	6861      	ldr	r1, [r4, #4]
10003c1e:	4299      	cmp	r1, r3
10003c20:	bfde      	ittt	le
10003c22:	2330      	movle	r3, #48	; 0x30
10003c24:	f805 3c01 	strble.w	r3, [r5, #-1]
10003c28:	f105 35ff 	addle.w	r5, r5, #4294967295
10003c2c:	1b52      	subs	r2, r2, r5
10003c2e:	6122      	str	r2, [r4, #16]
10003c30:	464b      	mov	r3, r9
10003c32:	aa03      	add	r2, sp, #12
10003c34:	4621      	mov	r1, r4
10003c36:	4640      	mov	r0, r8
10003c38:	f8cd a000 	str.w	sl, [sp]
10003c3c:	f7ff fee0 	bl	10003a00 <_printf_common>
10003c40:	3001      	adds	r0, #1
10003c42:	d14c      	bne.n	10003cde <_printf_i+0x1fe>
10003c44:	f04f 30ff 	mov.w	r0, #4294967295
10003c48:	b004      	add	sp, #16
10003c4a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
10003c4e:	4835      	ldr	r0, [pc, #212]	; (10003d24 <_printf_i+0x244>)
10003c50:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
10003c54:	6829      	ldr	r1, [r5, #0]
10003c56:	6823      	ldr	r3, [r4, #0]
10003c58:	f851 6b04 	ldr.w	r6, [r1], #4
10003c5c:	6029      	str	r1, [r5, #0]
10003c5e:	061d      	lsls	r5, r3, #24
10003c60:	d514      	bpl.n	10003c8c <_printf_i+0x1ac>
10003c62:	07df      	lsls	r7, r3, #31
10003c64:	bf44      	itt	mi
10003c66:	f043 0320 	orrmi.w	r3, r3, #32
10003c6a:	6023      	strmi	r3, [r4, #0]
10003c6c:	b91e      	cbnz	r6, 10003c76 <_printf_i+0x196>
10003c6e:	6823      	ldr	r3, [r4, #0]
10003c70:	f023 0320 	bic.w	r3, r3, #32
10003c74:	6023      	str	r3, [r4, #0]
10003c76:	2310      	movs	r3, #16
10003c78:	e7b0      	b.n	10003bdc <_printf_i+0xfc>
10003c7a:	6823      	ldr	r3, [r4, #0]
10003c7c:	f043 0320 	orr.w	r3, r3, #32
10003c80:	6023      	str	r3, [r4, #0]
10003c82:	2378      	movs	r3, #120	; 0x78
10003c84:	4828      	ldr	r0, [pc, #160]	; (10003d28 <_printf_i+0x248>)
10003c86:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
10003c8a:	e7e3      	b.n	10003c54 <_printf_i+0x174>
10003c8c:	0659      	lsls	r1, r3, #25
10003c8e:	bf48      	it	mi
10003c90:	b2b6      	uxthmi	r6, r6
10003c92:	e7e6      	b.n	10003c62 <_printf_i+0x182>
10003c94:	4615      	mov	r5, r2
10003c96:	e7bb      	b.n	10003c10 <_printf_i+0x130>
10003c98:	682b      	ldr	r3, [r5, #0]
10003c9a:	6826      	ldr	r6, [r4, #0]
10003c9c:	1d18      	adds	r0, r3, #4
10003c9e:	6961      	ldr	r1, [r4, #20]
10003ca0:	6028      	str	r0, [r5, #0]
10003ca2:	0635      	lsls	r5, r6, #24
10003ca4:	681b      	ldr	r3, [r3, #0]
10003ca6:	d501      	bpl.n	10003cac <_printf_i+0x1cc>
10003ca8:	6019      	str	r1, [r3, #0]
10003caa:	e002      	b.n	10003cb2 <_printf_i+0x1d2>
10003cac:	0670      	lsls	r0, r6, #25
10003cae:	d5fb      	bpl.n	10003ca8 <_printf_i+0x1c8>
10003cb0:	8019      	strh	r1, [r3, #0]
10003cb2:	2300      	movs	r3, #0
10003cb4:	4615      	mov	r5, r2
10003cb6:	6123      	str	r3, [r4, #16]
10003cb8:	e7ba      	b.n	10003c30 <_printf_i+0x150>
10003cba:	682b      	ldr	r3, [r5, #0]
10003cbc:	2100      	movs	r1, #0
10003cbe:	1d1a      	adds	r2, r3, #4
10003cc0:	602a      	str	r2, [r5, #0]
10003cc2:	681d      	ldr	r5, [r3, #0]
10003cc4:	6862      	ldr	r2, [r4, #4]
10003cc6:	4628      	mov	r0, r5
10003cc8:	f000 faa6 	bl	10004218 <memchr>
10003ccc:	b108      	cbz	r0, 10003cd2 <_printf_i+0x1f2>
10003cce:	1b40      	subs	r0, r0, r5
10003cd0:	6060      	str	r0, [r4, #4]
10003cd2:	6863      	ldr	r3, [r4, #4]
10003cd4:	6123      	str	r3, [r4, #16]
10003cd6:	2300      	movs	r3, #0
10003cd8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
10003cdc:	e7a8      	b.n	10003c30 <_printf_i+0x150>
10003cde:	6923      	ldr	r3, [r4, #16]
10003ce0:	462a      	mov	r2, r5
10003ce2:	4649      	mov	r1, r9
10003ce4:	4640      	mov	r0, r8
10003ce6:	47d0      	blx	sl
10003ce8:	3001      	adds	r0, #1
10003cea:	d0ab      	beq.n	10003c44 <_printf_i+0x164>
10003cec:	6823      	ldr	r3, [r4, #0]
10003cee:	079b      	lsls	r3, r3, #30
10003cf0:	d413      	bmi.n	10003d1a <_printf_i+0x23a>
10003cf2:	68e0      	ldr	r0, [r4, #12]
10003cf4:	9b03      	ldr	r3, [sp, #12]
10003cf6:	4298      	cmp	r0, r3
10003cf8:	bfb8      	it	lt
10003cfa:	4618      	movlt	r0, r3
10003cfc:	e7a4      	b.n	10003c48 <_printf_i+0x168>
10003cfe:	2301      	movs	r3, #1
10003d00:	4632      	mov	r2, r6
10003d02:	4649      	mov	r1, r9
10003d04:	4640      	mov	r0, r8
10003d06:	47d0      	blx	sl
10003d08:	3001      	adds	r0, #1
10003d0a:	d09b      	beq.n	10003c44 <_printf_i+0x164>
10003d0c:	3501      	adds	r5, #1
10003d0e:	68e3      	ldr	r3, [r4, #12]
10003d10:	9903      	ldr	r1, [sp, #12]
10003d12:	1a5b      	subs	r3, r3, r1
10003d14:	42ab      	cmp	r3, r5
10003d16:	dcf2      	bgt.n	10003cfe <_printf_i+0x21e>
10003d18:	e7eb      	b.n	10003cf2 <_printf_i+0x212>
10003d1a:	2500      	movs	r5, #0
10003d1c:	f104 0619 	add.w	r6, r4, #25
10003d20:	e7f5      	b.n	10003d0e <_printf_i+0x22e>
10003d22:	bf00      	nop
10003d24:	10006135 	andne	r6, r0, r5, lsr r1
10003d28:	10006146 	andne	r6, r0, r6, asr #2

10003d2c <_sbrk_r>:
10003d2c:	b538      	push	{r3, r4, r5, lr}
10003d2e:	2300      	movs	r3, #0
10003d30:	4d05      	ldr	r5, [pc, #20]	; (10003d48 <_sbrk_r+0x1c>)
10003d32:	4604      	mov	r4, r0
10003d34:	4608      	mov	r0, r1
10003d36:	602b      	str	r3, [r5, #0]
10003d38:	f7ff f8c2 	bl	10002ec0 <_sbrk>
10003d3c:	1c43      	adds	r3, r0, #1
10003d3e:	d102      	bne.n	10003d46 <_sbrk_r+0x1a>
10003d40:	682b      	ldr	r3, [r5, #0]
10003d42:	b103      	cbz	r3, 10003d46 <_sbrk_r+0x1a>
10003d44:	6023      	str	r3, [r4, #0]
10003d46:	bd38      	pop	{r3, r4, r5, pc}
10003d48:	38002438 	stmdacc	r0, {r3, r4, r5, sl, sp}

10003d4c <__sread>:
10003d4c:	b510      	push	{r4, lr}
10003d4e:	460c      	mov	r4, r1
10003d50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10003d54:	f000 fa88 	bl	10004268 <_read_r>
10003d58:	2800      	cmp	r0, #0
10003d5a:	bfab      	itete	ge
10003d5c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
10003d5e:	89a3      	ldrhlt	r3, [r4, #12]
10003d60:	181b      	addge	r3, r3, r0
10003d62:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
10003d66:	bfac      	ite	ge
10003d68:	6563      	strge	r3, [r4, #84]	; 0x54
10003d6a:	81a3      	strhlt	r3, [r4, #12]
10003d6c:	bd10      	pop	{r4, pc}

10003d6e <__swrite>:
10003d6e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10003d72:	461f      	mov	r7, r3
10003d74:	898b      	ldrh	r3, [r1, #12]
10003d76:	4605      	mov	r5, r0
10003d78:	460c      	mov	r4, r1
10003d7a:	05db      	lsls	r3, r3, #23
10003d7c:	4616      	mov	r6, r2
10003d7e:	d505      	bpl.n	10003d8c <__swrite+0x1e>
10003d80:	2302      	movs	r3, #2
10003d82:	2200      	movs	r2, #0
10003d84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10003d88:	f000 f9ce 	bl	10004128 <_lseek_r>
10003d8c:	89a3      	ldrh	r3, [r4, #12]
10003d8e:	4632      	mov	r2, r6
10003d90:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
10003d94:	4628      	mov	r0, r5
10003d96:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
10003d9a:	81a3      	strh	r3, [r4, #12]
10003d9c:	463b      	mov	r3, r7
10003d9e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
10003da2:	f000 b869 	b.w	10003e78 <_write_r>

10003da6 <__sseek>:
10003da6:	b510      	push	{r4, lr}
10003da8:	460c      	mov	r4, r1
10003daa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10003dae:	f000 f9bb 	bl	10004128 <_lseek_r>
10003db2:	1c43      	adds	r3, r0, #1
10003db4:	89a3      	ldrh	r3, [r4, #12]
10003db6:	bf15      	itete	ne
10003db8:	6560      	strne	r0, [r4, #84]	; 0x54
10003dba:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
10003dbe:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
10003dc2:	81a3      	strheq	r3, [r4, #12]
10003dc4:	bf18      	it	ne
10003dc6:	81a3      	strhne	r3, [r4, #12]
10003dc8:	bd10      	pop	{r4, pc}

10003dca <__sclose>:
10003dca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10003dce:	f000 b8db 	b.w	10003f88 <_close_r>
	...

10003dd4 <__swbuf_r>:
10003dd4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10003dd6:	460e      	mov	r6, r1
10003dd8:	4614      	mov	r4, r2
10003dda:	4605      	mov	r5, r0
10003ddc:	b118      	cbz	r0, 10003de6 <__swbuf_r+0x12>
10003dde:	6983      	ldr	r3, [r0, #24]
10003de0:	b90b      	cbnz	r3, 10003de6 <__swbuf_r+0x12>
10003de2:	f7ff fb19 	bl	10003418 <__sinit>
10003de6:	4b21      	ldr	r3, [pc, #132]	; (10003e6c <__swbuf_r+0x98>)
10003de8:	429c      	cmp	r4, r3
10003dea:	d12b      	bne.n	10003e44 <__swbuf_r+0x70>
10003dec:	686c      	ldr	r4, [r5, #4]
10003dee:	69a3      	ldr	r3, [r4, #24]
10003df0:	60a3      	str	r3, [r4, #8]
10003df2:	89a3      	ldrh	r3, [r4, #12]
10003df4:	071a      	lsls	r2, r3, #28
10003df6:	d52f      	bpl.n	10003e58 <__swbuf_r+0x84>
10003df8:	6923      	ldr	r3, [r4, #16]
10003dfa:	b36b      	cbz	r3, 10003e58 <__swbuf_r+0x84>
10003dfc:	6923      	ldr	r3, [r4, #16]
10003dfe:	b2f6      	uxtb	r6, r6
10003e00:	6820      	ldr	r0, [r4, #0]
10003e02:	4637      	mov	r7, r6
10003e04:	1ac0      	subs	r0, r0, r3
10003e06:	6963      	ldr	r3, [r4, #20]
10003e08:	4283      	cmp	r3, r0
10003e0a:	dc04      	bgt.n	10003e16 <__swbuf_r+0x42>
10003e0c:	4621      	mov	r1, r4
10003e0e:	4628      	mov	r0, r5
10003e10:	f000 f94e 	bl	100040b0 <_fflush_r>
10003e14:	bb30      	cbnz	r0, 10003e64 <__swbuf_r+0x90>
10003e16:	68a3      	ldr	r3, [r4, #8]
10003e18:	3001      	adds	r0, #1
10003e1a:	3b01      	subs	r3, #1
10003e1c:	60a3      	str	r3, [r4, #8]
10003e1e:	6823      	ldr	r3, [r4, #0]
10003e20:	1c5a      	adds	r2, r3, #1
10003e22:	6022      	str	r2, [r4, #0]
10003e24:	701e      	strb	r6, [r3, #0]
10003e26:	6963      	ldr	r3, [r4, #20]
10003e28:	4283      	cmp	r3, r0
10003e2a:	d004      	beq.n	10003e36 <__swbuf_r+0x62>
10003e2c:	89a3      	ldrh	r3, [r4, #12]
10003e2e:	07db      	lsls	r3, r3, #31
10003e30:	d506      	bpl.n	10003e40 <__swbuf_r+0x6c>
10003e32:	2e0a      	cmp	r6, #10
10003e34:	d104      	bne.n	10003e40 <__swbuf_r+0x6c>
10003e36:	4621      	mov	r1, r4
10003e38:	4628      	mov	r0, r5
10003e3a:	f000 f939 	bl	100040b0 <_fflush_r>
10003e3e:	b988      	cbnz	r0, 10003e64 <__swbuf_r+0x90>
10003e40:	4638      	mov	r0, r7
10003e42:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
10003e44:	4b0a      	ldr	r3, [pc, #40]	; (10003e70 <__swbuf_r+0x9c>)
10003e46:	429c      	cmp	r4, r3
10003e48:	d101      	bne.n	10003e4e <__swbuf_r+0x7a>
10003e4a:	68ac      	ldr	r4, [r5, #8]
10003e4c:	e7cf      	b.n	10003dee <__swbuf_r+0x1a>
10003e4e:	4b09      	ldr	r3, [pc, #36]	; (10003e74 <__swbuf_r+0xa0>)
10003e50:	429c      	cmp	r4, r3
10003e52:	bf08      	it	eq
10003e54:	68ec      	ldreq	r4, [r5, #12]
10003e56:	e7ca      	b.n	10003dee <__swbuf_r+0x1a>
10003e58:	4621      	mov	r1, r4
10003e5a:	4628      	mov	r0, r5
10003e5c:	f000 f81e 	bl	10003e9c <__swsetup_r>
10003e60:	2800      	cmp	r0, #0
10003e62:	d0cb      	beq.n	10003dfc <__swbuf_r+0x28>
10003e64:	f04f 37ff 	mov.w	r7, #4294967295
10003e68:	e7ea      	b.n	10003e40 <__swbuf_r+0x6c>
10003e6a:	bf00      	nop
10003e6c:	100060e4 	andne	r6, r0, r4, ror #1
10003e70:	10006104 	andne	r6, r0, r4, lsl #2
10003e74:	100060c4 	andne	r6, r0, r4, asr #1

10003e78 <_write_r>:
10003e78:	b538      	push	{r3, r4, r5, lr}
10003e7a:	4604      	mov	r4, r0
10003e7c:	4d06      	ldr	r5, [pc, #24]	; (10003e98 <_write_r+0x20>)
10003e7e:	4608      	mov	r0, r1
10003e80:	4611      	mov	r1, r2
10003e82:	2200      	movs	r2, #0
10003e84:	602a      	str	r2, [r5, #0]
10003e86:	461a      	mov	r2, r3
10003e88:	f7ff f85e 	bl	10002f48 <_write>
10003e8c:	1c43      	adds	r3, r0, #1
10003e8e:	d102      	bne.n	10003e96 <_write_r+0x1e>
10003e90:	682b      	ldr	r3, [r5, #0]
10003e92:	b103      	cbz	r3, 10003e96 <_write_r+0x1e>
10003e94:	6023      	str	r3, [r4, #0]
10003e96:	bd38      	pop	{r3, r4, r5, pc}
10003e98:	38002438 	stmdacc	r0, {r3, r4, r5, sl, sp}

10003e9c <__swsetup_r>:
10003e9c:	4b32      	ldr	r3, [pc, #200]	; (10003f68 <__swsetup_r+0xcc>)
10003e9e:	b570      	push	{r4, r5, r6, lr}
10003ea0:	681d      	ldr	r5, [r3, #0]
10003ea2:	4606      	mov	r6, r0
10003ea4:	460c      	mov	r4, r1
10003ea6:	b125      	cbz	r5, 10003eb2 <__swsetup_r+0x16>
10003ea8:	69ab      	ldr	r3, [r5, #24]
10003eaa:	b913      	cbnz	r3, 10003eb2 <__swsetup_r+0x16>
10003eac:	4628      	mov	r0, r5
10003eae:	f7ff fab3 	bl	10003418 <__sinit>
10003eb2:	4b2e      	ldr	r3, [pc, #184]	; (10003f6c <__swsetup_r+0xd0>)
10003eb4:	429c      	cmp	r4, r3
10003eb6:	d10f      	bne.n	10003ed8 <__swsetup_r+0x3c>
10003eb8:	686c      	ldr	r4, [r5, #4]
10003eba:	89a3      	ldrh	r3, [r4, #12]
10003ebc:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10003ec0:	0719      	lsls	r1, r3, #28
10003ec2:	d42c      	bmi.n	10003f1e <__swsetup_r+0x82>
10003ec4:	06dd      	lsls	r5, r3, #27
10003ec6:	d411      	bmi.n	10003eec <__swsetup_r+0x50>
10003ec8:	2309      	movs	r3, #9
10003eca:	6033      	str	r3, [r6, #0]
10003ecc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
10003ed0:	f04f 30ff 	mov.w	r0, #4294967295
10003ed4:	81a3      	strh	r3, [r4, #12]
10003ed6:	e03e      	b.n	10003f56 <__swsetup_r+0xba>
10003ed8:	4b25      	ldr	r3, [pc, #148]	; (10003f70 <__swsetup_r+0xd4>)
10003eda:	429c      	cmp	r4, r3
10003edc:	d101      	bne.n	10003ee2 <__swsetup_r+0x46>
10003ede:	68ac      	ldr	r4, [r5, #8]
10003ee0:	e7eb      	b.n	10003eba <__swsetup_r+0x1e>
10003ee2:	4b24      	ldr	r3, [pc, #144]	; (10003f74 <__swsetup_r+0xd8>)
10003ee4:	429c      	cmp	r4, r3
10003ee6:	bf08      	it	eq
10003ee8:	68ec      	ldreq	r4, [r5, #12]
10003eea:	e7e6      	b.n	10003eba <__swsetup_r+0x1e>
10003eec:	0758      	lsls	r0, r3, #29
10003eee:	d512      	bpl.n	10003f16 <__swsetup_r+0x7a>
10003ef0:	6b61      	ldr	r1, [r4, #52]	; 0x34
10003ef2:	b141      	cbz	r1, 10003f06 <__swsetup_r+0x6a>
10003ef4:	f104 0344 	add.w	r3, r4, #68	; 0x44
10003ef8:	4299      	cmp	r1, r3
10003efa:	d002      	beq.n	10003f02 <__swsetup_r+0x66>
10003efc:	4630      	mov	r0, r6
10003efe:	f7ff fb45 	bl	1000358c <_free_r>
10003f02:	2300      	movs	r3, #0
10003f04:	6363      	str	r3, [r4, #52]	; 0x34
10003f06:	89a3      	ldrh	r3, [r4, #12]
10003f08:	f023 0324 	bic.w	r3, r3, #36	; 0x24
10003f0c:	81a3      	strh	r3, [r4, #12]
10003f0e:	2300      	movs	r3, #0
10003f10:	6063      	str	r3, [r4, #4]
10003f12:	6923      	ldr	r3, [r4, #16]
10003f14:	6023      	str	r3, [r4, #0]
10003f16:	89a3      	ldrh	r3, [r4, #12]
10003f18:	f043 0308 	orr.w	r3, r3, #8
10003f1c:	81a3      	strh	r3, [r4, #12]
10003f1e:	6923      	ldr	r3, [r4, #16]
10003f20:	b94b      	cbnz	r3, 10003f36 <__swsetup_r+0x9a>
10003f22:	89a3      	ldrh	r3, [r4, #12]
10003f24:	f403 7320 	and.w	r3, r3, #640	; 0x280
10003f28:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
10003f2c:	d003      	beq.n	10003f36 <__swsetup_r+0x9a>
10003f2e:	4621      	mov	r1, r4
10003f30:	4630      	mov	r0, r6
10003f32:	f000 f931 	bl	10004198 <__smakebuf_r>
10003f36:	89a0      	ldrh	r0, [r4, #12]
10003f38:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
10003f3c:	f010 0301 	ands.w	r3, r0, #1
10003f40:	d00a      	beq.n	10003f58 <__swsetup_r+0xbc>
10003f42:	2300      	movs	r3, #0
10003f44:	60a3      	str	r3, [r4, #8]
10003f46:	6963      	ldr	r3, [r4, #20]
10003f48:	425b      	negs	r3, r3
10003f4a:	61a3      	str	r3, [r4, #24]
10003f4c:	6923      	ldr	r3, [r4, #16]
10003f4e:	b943      	cbnz	r3, 10003f62 <__swsetup_r+0xc6>
10003f50:	f010 0080 	ands.w	r0, r0, #128	; 0x80
10003f54:	d1ba      	bne.n	10003ecc <__swsetup_r+0x30>
10003f56:	bd70      	pop	{r4, r5, r6, pc}
10003f58:	0781      	lsls	r1, r0, #30
10003f5a:	bf58      	it	pl
10003f5c:	6963      	ldrpl	r3, [r4, #20]
10003f5e:	60a3      	str	r3, [r4, #8]
10003f60:	e7f4      	b.n	10003f4c <__swsetup_r+0xb0>
10003f62:	2000      	movs	r0, #0
10003f64:	e7f7      	b.n	10003f56 <__swsetup_r+0xba>
10003f66:	bf00      	nop
10003f68:	38000008 	stmdacc	r0, {r3}
10003f6c:	100060e4 	andne	r6, r0, r4, ror #1
10003f70:	10006104 	andne	r6, r0, r4, lsl #2
10003f74:	100060c4 	andne	r6, r0, r4, asr #1

10003f78 <abort>:
10003f78:	2006      	movs	r0, #6
10003f7a:	b508      	push	{r3, lr}
10003f7c:	f000 f9ae 	bl	100042dc <raise>
10003f80:	2001      	movs	r0, #1
10003f82:	f7fe ffcb 	bl	10002f1c <_exit>
	...

10003f88 <_close_r>:
10003f88:	b538      	push	{r3, r4, r5, lr}
10003f8a:	2300      	movs	r3, #0
10003f8c:	4d05      	ldr	r5, [pc, #20]	; (10003fa4 <_close_r+0x1c>)
10003f8e:	4604      	mov	r4, r0
10003f90:	4608      	mov	r0, r1
10003f92:	602b      	str	r3, [r5, #0]
10003f94:	f7fe ffe6 	bl	10002f64 <_close>
10003f98:	1c43      	adds	r3, r0, #1
10003f9a:	d102      	bne.n	10003fa2 <_close_r+0x1a>
10003f9c:	682b      	ldr	r3, [r5, #0]
10003f9e:	b103      	cbz	r3, 10003fa2 <_close_r+0x1a>
10003fa0:	6023      	str	r3, [r4, #0]
10003fa2:	bd38      	pop	{r3, r4, r5, pc}
10003fa4:	38002438 	stmdacc	r0, {r3, r4, r5, sl, sp}

10003fa8 <__sflush_r>:
10003fa8:	898a      	ldrh	r2, [r1, #12]
10003faa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
10003fae:	4605      	mov	r5, r0
10003fb0:	0710      	lsls	r0, r2, #28
10003fb2:	460c      	mov	r4, r1
10003fb4:	d458      	bmi.n	10004068 <__sflush_r+0xc0>
10003fb6:	684b      	ldr	r3, [r1, #4]
10003fb8:	2b00      	cmp	r3, #0
10003fba:	dc05      	bgt.n	10003fc8 <__sflush_r+0x20>
10003fbc:	6c0b      	ldr	r3, [r1, #64]	; 0x40
10003fbe:	2b00      	cmp	r3, #0
10003fc0:	dc02      	bgt.n	10003fc8 <__sflush_r+0x20>
10003fc2:	2000      	movs	r0, #0
10003fc4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
10003fc8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
10003fca:	2e00      	cmp	r6, #0
10003fcc:	d0f9      	beq.n	10003fc2 <__sflush_r+0x1a>
10003fce:	2300      	movs	r3, #0
10003fd0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
10003fd4:	682f      	ldr	r7, [r5, #0]
10003fd6:	602b      	str	r3, [r5, #0]
10003fd8:	d032      	beq.n	10004040 <__sflush_r+0x98>
10003fda:	6d60      	ldr	r0, [r4, #84]	; 0x54
10003fdc:	89a3      	ldrh	r3, [r4, #12]
10003fde:	075a      	lsls	r2, r3, #29
10003fe0:	d505      	bpl.n	10003fee <__sflush_r+0x46>
10003fe2:	6863      	ldr	r3, [r4, #4]
10003fe4:	1ac0      	subs	r0, r0, r3
10003fe6:	6b63      	ldr	r3, [r4, #52]	; 0x34
10003fe8:	b10b      	cbz	r3, 10003fee <__sflush_r+0x46>
10003fea:	6c23      	ldr	r3, [r4, #64]	; 0x40
10003fec:	1ac0      	subs	r0, r0, r3
10003fee:	2300      	movs	r3, #0
10003ff0:	4602      	mov	r2, r0
10003ff2:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
10003ff4:	4628      	mov	r0, r5
10003ff6:	6a21      	ldr	r1, [r4, #32]
10003ff8:	47b0      	blx	r6
10003ffa:	1c43      	adds	r3, r0, #1
10003ffc:	89a3      	ldrh	r3, [r4, #12]
10003ffe:	d106      	bne.n	1000400e <__sflush_r+0x66>
10004000:	6829      	ldr	r1, [r5, #0]
10004002:	291d      	cmp	r1, #29
10004004:	d82c      	bhi.n	10004060 <__sflush_r+0xb8>
10004006:	4a29      	ldr	r2, [pc, #164]	; (100040ac <__sflush_r+0x104>)
10004008:	40ca      	lsrs	r2, r1
1000400a:	07d6      	lsls	r6, r2, #31
1000400c:	d528      	bpl.n	10004060 <__sflush_r+0xb8>
1000400e:	2200      	movs	r2, #0
10004010:	04d9      	lsls	r1, r3, #19
10004012:	6062      	str	r2, [r4, #4]
10004014:	6922      	ldr	r2, [r4, #16]
10004016:	6022      	str	r2, [r4, #0]
10004018:	d504      	bpl.n	10004024 <__sflush_r+0x7c>
1000401a:	1c42      	adds	r2, r0, #1
1000401c:	d101      	bne.n	10004022 <__sflush_r+0x7a>
1000401e:	682b      	ldr	r3, [r5, #0]
10004020:	b903      	cbnz	r3, 10004024 <__sflush_r+0x7c>
10004022:	6560      	str	r0, [r4, #84]	; 0x54
10004024:	6b61      	ldr	r1, [r4, #52]	; 0x34
10004026:	602f      	str	r7, [r5, #0]
10004028:	2900      	cmp	r1, #0
1000402a:	d0ca      	beq.n	10003fc2 <__sflush_r+0x1a>
1000402c:	f104 0344 	add.w	r3, r4, #68	; 0x44
10004030:	4299      	cmp	r1, r3
10004032:	d002      	beq.n	1000403a <__sflush_r+0x92>
10004034:	4628      	mov	r0, r5
10004036:	f7ff faa9 	bl	1000358c <_free_r>
1000403a:	2000      	movs	r0, #0
1000403c:	6360      	str	r0, [r4, #52]	; 0x34
1000403e:	e7c1      	b.n	10003fc4 <__sflush_r+0x1c>
10004040:	6a21      	ldr	r1, [r4, #32]
10004042:	2301      	movs	r3, #1
10004044:	4628      	mov	r0, r5
10004046:	47b0      	blx	r6
10004048:	1c41      	adds	r1, r0, #1
1000404a:	d1c7      	bne.n	10003fdc <__sflush_r+0x34>
1000404c:	682b      	ldr	r3, [r5, #0]
1000404e:	2b00      	cmp	r3, #0
10004050:	d0c4      	beq.n	10003fdc <__sflush_r+0x34>
10004052:	2b1d      	cmp	r3, #29
10004054:	d001      	beq.n	1000405a <__sflush_r+0xb2>
10004056:	2b16      	cmp	r3, #22
10004058:	d101      	bne.n	1000405e <__sflush_r+0xb6>
1000405a:	602f      	str	r7, [r5, #0]
1000405c:	e7b1      	b.n	10003fc2 <__sflush_r+0x1a>
1000405e:	89a3      	ldrh	r3, [r4, #12]
10004060:	f043 0340 	orr.w	r3, r3, #64	; 0x40
10004064:	81a3      	strh	r3, [r4, #12]
10004066:	e7ad      	b.n	10003fc4 <__sflush_r+0x1c>
10004068:	690f      	ldr	r7, [r1, #16]
1000406a:	2f00      	cmp	r7, #0
1000406c:	d0a9      	beq.n	10003fc2 <__sflush_r+0x1a>
1000406e:	0793      	lsls	r3, r2, #30
10004070:	680e      	ldr	r6, [r1, #0]
10004072:	600f      	str	r7, [r1, #0]
10004074:	bf0c      	ite	eq
10004076:	694b      	ldreq	r3, [r1, #20]
10004078:	2300      	movne	r3, #0
1000407a:	eba6 0807 	sub.w	r8, r6, r7
1000407e:	608b      	str	r3, [r1, #8]
10004080:	f1b8 0f00 	cmp.w	r8, #0
10004084:	dd9d      	ble.n	10003fc2 <__sflush_r+0x1a>
10004086:	4643      	mov	r3, r8
10004088:	463a      	mov	r2, r7
1000408a:	6a21      	ldr	r1, [r4, #32]
1000408c:	4628      	mov	r0, r5
1000408e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
10004090:	47b0      	blx	r6
10004092:	2800      	cmp	r0, #0
10004094:	dc06      	bgt.n	100040a4 <__sflush_r+0xfc>
10004096:	89a3      	ldrh	r3, [r4, #12]
10004098:	f04f 30ff 	mov.w	r0, #4294967295
1000409c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
100040a0:	81a3      	strh	r3, [r4, #12]
100040a2:	e78f      	b.n	10003fc4 <__sflush_r+0x1c>
100040a4:	4407      	add	r7, r0
100040a6:	eba8 0800 	sub.w	r8, r8, r0
100040aa:	e7e9      	b.n	10004080 <__sflush_r+0xd8>
100040ac:	20400001 	subcs	r0, r0, r1

100040b0 <_fflush_r>:
100040b0:	b538      	push	{r3, r4, r5, lr}
100040b2:	690b      	ldr	r3, [r1, #16]
100040b4:	4605      	mov	r5, r0
100040b6:	460c      	mov	r4, r1
100040b8:	b913      	cbnz	r3, 100040c0 <_fflush_r+0x10>
100040ba:	2500      	movs	r5, #0
100040bc:	4628      	mov	r0, r5
100040be:	bd38      	pop	{r3, r4, r5, pc}
100040c0:	b118      	cbz	r0, 100040ca <_fflush_r+0x1a>
100040c2:	6983      	ldr	r3, [r0, #24]
100040c4:	b90b      	cbnz	r3, 100040ca <_fflush_r+0x1a>
100040c6:	f7ff f9a7 	bl	10003418 <__sinit>
100040ca:	4b14      	ldr	r3, [pc, #80]	; (1000411c <_fflush_r+0x6c>)
100040cc:	429c      	cmp	r4, r3
100040ce:	d11b      	bne.n	10004108 <_fflush_r+0x58>
100040d0:	686c      	ldr	r4, [r5, #4]
100040d2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100040d6:	2b00      	cmp	r3, #0
100040d8:	d0ef      	beq.n	100040ba <_fflush_r+0xa>
100040da:	6e62      	ldr	r2, [r4, #100]	; 0x64
100040dc:	07d0      	lsls	r0, r2, #31
100040de:	d404      	bmi.n	100040ea <_fflush_r+0x3a>
100040e0:	0599      	lsls	r1, r3, #22
100040e2:	d402      	bmi.n	100040ea <_fflush_r+0x3a>
100040e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
100040e6:	f7ff fa47 	bl	10003578 <__retarget_lock_acquire_recursive>
100040ea:	4628      	mov	r0, r5
100040ec:	4621      	mov	r1, r4
100040ee:	f7ff ff5b 	bl	10003fa8 <__sflush_r>
100040f2:	6e63      	ldr	r3, [r4, #100]	; 0x64
100040f4:	4605      	mov	r5, r0
100040f6:	07da      	lsls	r2, r3, #31
100040f8:	d4e0      	bmi.n	100040bc <_fflush_r+0xc>
100040fa:	89a3      	ldrh	r3, [r4, #12]
100040fc:	059b      	lsls	r3, r3, #22
100040fe:	d4dd      	bmi.n	100040bc <_fflush_r+0xc>
10004100:	6da0      	ldr	r0, [r4, #88]	; 0x58
10004102:	f7ff fa3a 	bl	1000357a <__retarget_lock_release_recursive>
10004106:	e7d9      	b.n	100040bc <_fflush_r+0xc>
10004108:	4b05      	ldr	r3, [pc, #20]	; (10004120 <_fflush_r+0x70>)
1000410a:	429c      	cmp	r4, r3
1000410c:	d101      	bne.n	10004112 <_fflush_r+0x62>
1000410e:	68ac      	ldr	r4, [r5, #8]
10004110:	e7df      	b.n	100040d2 <_fflush_r+0x22>
10004112:	4b04      	ldr	r3, [pc, #16]	; (10004124 <_fflush_r+0x74>)
10004114:	429c      	cmp	r4, r3
10004116:	bf08      	it	eq
10004118:	68ec      	ldreq	r4, [r5, #12]
1000411a:	e7da      	b.n	100040d2 <_fflush_r+0x22>
1000411c:	100060e4 	andne	r6, r0, r4, ror #1
10004120:	10006104 	andne	r6, r0, r4, lsl #2
10004124:	100060c4 	andne	r6, r0, r4, asr #1

10004128 <_lseek_r>:
10004128:	b538      	push	{r3, r4, r5, lr}
1000412a:	4604      	mov	r4, r0
1000412c:	4d06      	ldr	r5, [pc, #24]	; (10004148 <_lseek_r+0x20>)
1000412e:	4608      	mov	r0, r1
10004130:	4611      	mov	r1, r2
10004132:	2200      	movs	r2, #0
10004134:	602a      	str	r2, [r5, #0]
10004136:	461a      	mov	r2, r3
10004138:	f7fe ff1e 	bl	10002f78 <_lseek>
1000413c:	1c43      	adds	r3, r0, #1
1000413e:	d102      	bne.n	10004146 <_lseek_r+0x1e>
10004140:	682b      	ldr	r3, [r5, #0]
10004142:	b103      	cbz	r3, 10004146 <_lseek_r+0x1e>
10004144:	6023      	str	r3, [r4, #0]
10004146:	bd38      	pop	{r3, r4, r5, pc}
10004148:	38002438 	stmdacc	r0, {r3, r4, r5, sl, sp}

1000414c <__swhatbuf_r>:
1000414c:	b570      	push	{r4, r5, r6, lr}
1000414e:	460e      	mov	r6, r1
10004150:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
10004154:	b096      	sub	sp, #88	; 0x58
10004156:	4614      	mov	r4, r2
10004158:	2900      	cmp	r1, #0
1000415a:	461d      	mov	r5, r3
1000415c:	da08      	bge.n	10004170 <__swhatbuf_r+0x24>
1000415e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
10004162:	2200      	movs	r2, #0
10004164:	602a      	str	r2, [r5, #0]
10004166:	061a      	lsls	r2, r3, #24
10004168:	d410      	bmi.n	1000418c <__swhatbuf_r+0x40>
1000416a:	f44f 6380 	mov.w	r3, #1024	; 0x400
1000416e:	e00e      	b.n	1000418e <__swhatbuf_r+0x42>
10004170:	466a      	mov	r2, sp
10004172:	f000 f8cf 	bl	10004314 <_fstat_r>
10004176:	2800      	cmp	r0, #0
10004178:	dbf1      	blt.n	1000415e <__swhatbuf_r+0x12>
1000417a:	9a01      	ldr	r2, [sp, #4]
1000417c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
10004180:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
10004184:	425a      	negs	r2, r3
10004186:	415a      	adcs	r2, r3
10004188:	602a      	str	r2, [r5, #0]
1000418a:	e7ee      	b.n	1000416a <__swhatbuf_r+0x1e>
1000418c:	2340      	movs	r3, #64	; 0x40
1000418e:	2000      	movs	r0, #0
10004190:	6023      	str	r3, [r4, #0]
10004192:	b016      	add	sp, #88	; 0x58
10004194:	bd70      	pop	{r4, r5, r6, pc}
	...

10004198 <__smakebuf_r>:
10004198:	898b      	ldrh	r3, [r1, #12]
1000419a:	b573      	push	{r0, r1, r4, r5, r6, lr}
1000419c:	079d      	lsls	r5, r3, #30
1000419e:	4606      	mov	r6, r0
100041a0:	460c      	mov	r4, r1
100041a2:	d507      	bpl.n	100041b4 <__smakebuf_r+0x1c>
100041a4:	f104 0347 	add.w	r3, r4, #71	; 0x47
100041a8:	6023      	str	r3, [r4, #0]
100041aa:	6123      	str	r3, [r4, #16]
100041ac:	2301      	movs	r3, #1
100041ae:	6163      	str	r3, [r4, #20]
100041b0:	b002      	add	sp, #8
100041b2:	bd70      	pop	{r4, r5, r6, pc}
100041b4:	ab01      	add	r3, sp, #4
100041b6:	466a      	mov	r2, sp
100041b8:	f7ff ffc8 	bl	1000414c <__swhatbuf_r>
100041bc:	9900      	ldr	r1, [sp, #0]
100041be:	4605      	mov	r5, r0
100041c0:	4630      	mov	r0, r6
100041c2:	f7ff fa4f 	bl	10003664 <_malloc_r>
100041c6:	b948      	cbnz	r0, 100041dc <__smakebuf_r+0x44>
100041c8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
100041cc:	059a      	lsls	r2, r3, #22
100041ce:	d4ef      	bmi.n	100041b0 <__smakebuf_r+0x18>
100041d0:	f023 0303 	bic.w	r3, r3, #3
100041d4:	f043 0302 	orr.w	r3, r3, #2
100041d8:	81a3      	strh	r3, [r4, #12]
100041da:	e7e3      	b.n	100041a4 <__smakebuf_r+0xc>
100041dc:	4b0d      	ldr	r3, [pc, #52]	; (10004214 <__smakebuf_r+0x7c>)
100041de:	62b3      	str	r3, [r6, #40]	; 0x28
100041e0:	89a3      	ldrh	r3, [r4, #12]
100041e2:	6020      	str	r0, [r4, #0]
100041e4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
100041e8:	6120      	str	r0, [r4, #16]
100041ea:	81a3      	strh	r3, [r4, #12]
100041ec:	9b00      	ldr	r3, [sp, #0]
100041ee:	6163      	str	r3, [r4, #20]
100041f0:	9b01      	ldr	r3, [sp, #4]
100041f2:	b15b      	cbz	r3, 1000420c <__smakebuf_r+0x74>
100041f4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
100041f8:	4630      	mov	r0, r6
100041fa:	f000 f89d 	bl	10004338 <_isatty_r>
100041fe:	b128      	cbz	r0, 1000420c <__smakebuf_r+0x74>
10004200:	89a3      	ldrh	r3, [r4, #12]
10004202:	f023 0303 	bic.w	r3, r3, #3
10004206:	f043 0301 	orr.w	r3, r3, #1
1000420a:	81a3      	strh	r3, [r4, #12]
1000420c:	89a0      	ldrh	r0, [r4, #12]
1000420e:	4305      	orrs	r5, r0
10004210:	81a5      	strh	r5, [r4, #12]
10004212:	e7cd      	b.n	100041b0 <__smakebuf_r+0x18>
10004214:	100033b1 			; <UNDEFINED> instruction: 0x100033b1

10004218 <memchr>:
10004218:	b2c9      	uxtb	r1, r1
1000421a:	4402      	add	r2, r0
1000421c:	b510      	push	{r4, lr}
1000421e:	4290      	cmp	r0, r2
10004220:	4603      	mov	r3, r0
10004222:	d101      	bne.n	10004228 <memchr+0x10>
10004224:	2300      	movs	r3, #0
10004226:	e003      	b.n	10004230 <memchr+0x18>
10004228:	781c      	ldrb	r4, [r3, #0]
1000422a:	3001      	adds	r0, #1
1000422c:	428c      	cmp	r4, r1
1000422e:	d1f6      	bne.n	1000421e <memchr+0x6>
10004230:	4618      	mov	r0, r3
10004232:	bd10      	pop	{r4, pc}

10004234 <memcpy>:
10004234:	440a      	add	r2, r1
10004236:	1e43      	subs	r3, r0, #1
10004238:	4291      	cmp	r1, r2
1000423a:	d100      	bne.n	1000423e <memcpy+0xa>
1000423c:	4770      	bx	lr
1000423e:	b510      	push	{r4, lr}
10004240:	f811 4b01 	ldrb.w	r4, [r1], #1
10004244:	4291      	cmp	r1, r2
10004246:	f803 4f01 	strb.w	r4, [r3, #1]!
1000424a:	d1f9      	bne.n	10004240 <memcpy+0xc>
1000424c:	bd10      	pop	{r4, pc}
	...

10004250 <__malloc_lock>:
10004250:	4801      	ldr	r0, [pc, #4]	; (10004258 <__malloc_lock+0x8>)
10004252:	f7ff b991 	b.w	10003578 <__retarget_lock_acquire_recursive>
10004256:	bf00      	nop
10004258:	3800242c 	stmdacc	r0, {r2, r3, r5, sl, sp}

1000425c <__malloc_unlock>:
1000425c:	4801      	ldr	r0, [pc, #4]	; (10004264 <__malloc_unlock+0x8>)
1000425e:	f7ff b98c 	b.w	1000357a <__retarget_lock_release_recursive>
10004262:	bf00      	nop
10004264:	3800242c 	stmdacc	r0, {r2, r3, r5, sl, sp}

10004268 <_read_r>:
10004268:	b538      	push	{r3, r4, r5, lr}
1000426a:	4604      	mov	r4, r0
1000426c:	4d06      	ldr	r5, [pc, #24]	; (10004288 <_read_r+0x20>)
1000426e:	4608      	mov	r0, r1
10004270:	4611      	mov	r1, r2
10004272:	2200      	movs	r2, #0
10004274:	602a      	str	r2, [r5, #0]
10004276:	461a      	mov	r2, r3
10004278:	f7fe fe56 	bl	10002f28 <_read>
1000427c:	1c43      	adds	r3, r0, #1
1000427e:	d102      	bne.n	10004286 <_read_r+0x1e>
10004280:	682b      	ldr	r3, [r5, #0]
10004282:	b103      	cbz	r3, 10004286 <_read_r+0x1e>
10004284:	6023      	str	r3, [r4, #0]
10004286:	bd38      	pop	{r3, r4, r5, pc}
10004288:	38002438 	stmdacc	r0, {r3, r4, r5, sl, sp}

1000428c <_raise_r>:
1000428c:	291f      	cmp	r1, #31
1000428e:	b538      	push	{r3, r4, r5, lr}
10004290:	4604      	mov	r4, r0
10004292:	460d      	mov	r5, r1
10004294:	d904      	bls.n	100042a0 <_raise_r+0x14>
10004296:	2316      	movs	r3, #22
10004298:	6003      	str	r3, [r0, #0]
1000429a:	f04f 30ff 	mov.w	r0, #4294967295
1000429e:	bd38      	pop	{r3, r4, r5, pc}
100042a0:	6c42      	ldr	r2, [r0, #68]	; 0x44
100042a2:	b112      	cbz	r2, 100042aa <_raise_r+0x1e>
100042a4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
100042a8:	b94b      	cbnz	r3, 100042be <_raise_r+0x32>
100042aa:	4620      	mov	r0, r4
100042ac:	f000 f830 	bl	10004310 <_getpid_r>
100042b0:	462a      	mov	r2, r5
100042b2:	4601      	mov	r1, r0
100042b4:	4620      	mov	r0, r4
100042b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
100042ba:	f000 b817 	b.w	100042ec <_kill_r>
100042be:	2b01      	cmp	r3, #1
100042c0:	d00a      	beq.n	100042d8 <_raise_r+0x4c>
100042c2:	1c59      	adds	r1, r3, #1
100042c4:	d103      	bne.n	100042ce <_raise_r+0x42>
100042c6:	2316      	movs	r3, #22
100042c8:	6003      	str	r3, [r0, #0]
100042ca:	2001      	movs	r0, #1
100042cc:	e7e7      	b.n	1000429e <_raise_r+0x12>
100042ce:	2400      	movs	r4, #0
100042d0:	4628      	mov	r0, r5
100042d2:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
100042d6:	4798      	blx	r3
100042d8:	2000      	movs	r0, #0
100042da:	e7e0      	b.n	1000429e <_raise_r+0x12>

100042dc <raise>:
100042dc:	4b02      	ldr	r3, [pc, #8]	; (100042e8 <raise+0xc>)
100042de:	4601      	mov	r1, r0
100042e0:	6818      	ldr	r0, [r3, #0]
100042e2:	f7ff bfd3 	b.w	1000428c <_raise_r>
100042e6:	bf00      	nop
100042e8:	38000008 	stmdacc	r0, {r3}

100042ec <_kill_r>:
100042ec:	b538      	push	{r3, r4, r5, lr}
100042ee:	2300      	movs	r3, #0
100042f0:	4d06      	ldr	r5, [pc, #24]	; (1000430c <_kill_r+0x20>)
100042f2:	4604      	mov	r4, r0
100042f4:	4608      	mov	r0, r1
100042f6:	4611      	mov	r1, r2
100042f8:	602b      	str	r3, [r5, #0]
100042fa:	f7fe fe07 	bl	10002f0c <_kill>
100042fe:	1c43      	adds	r3, r0, #1
10004300:	d102      	bne.n	10004308 <_kill_r+0x1c>
10004302:	682b      	ldr	r3, [r5, #0]
10004304:	b103      	cbz	r3, 10004308 <_kill_r+0x1c>
10004306:	6023      	str	r3, [r4, #0]
10004308:	bd38      	pop	{r3, r4, r5, pc}
1000430a:	bf00      	nop
1000430c:	38002438 	stmdacc	r0, {r3, r4, r5, sl, sp}

10004310 <_getpid_r>:
10004310:	f7fe bdfa 	b.w	10002f08 <_getpid>

10004314 <_fstat_r>:
10004314:	b538      	push	{r3, r4, r5, lr}
10004316:	2300      	movs	r3, #0
10004318:	4d06      	ldr	r5, [pc, #24]	; (10004334 <_fstat_r+0x20>)
1000431a:	4604      	mov	r4, r0
1000431c:	4608      	mov	r0, r1
1000431e:	4611      	mov	r1, r2
10004320:	602b      	str	r3, [r5, #0]
10004322:	f7fe fe22 	bl	10002f6a <_fstat>
10004326:	1c43      	adds	r3, r0, #1
10004328:	d102      	bne.n	10004330 <_fstat_r+0x1c>
1000432a:	682b      	ldr	r3, [r5, #0]
1000432c:	b103      	cbz	r3, 10004330 <_fstat_r+0x1c>
1000432e:	6023      	str	r3, [r4, #0]
10004330:	bd38      	pop	{r3, r4, r5, pc}
10004332:	bf00      	nop
10004334:	38002438 	stmdacc	r0, {r3, r4, r5, sl, sp}

10004338 <_isatty_r>:
10004338:	b538      	push	{r3, r4, r5, lr}
1000433a:	2300      	movs	r3, #0
1000433c:	4d05      	ldr	r5, [pc, #20]	; (10004354 <_isatty_r+0x1c>)
1000433e:	4604      	mov	r4, r0
10004340:	4608      	mov	r0, r1
10004342:	602b      	str	r3, [r5, #0]
10004344:	f7fe fe16 	bl	10002f74 <_isatty>
10004348:	1c43      	adds	r3, r0, #1
1000434a:	d102      	bne.n	10004352 <_isatty_r+0x1a>
1000434c:	682b      	ldr	r3, [r5, #0]
1000434e:	b103      	cbz	r3, 10004352 <_isatty_r+0x1a>
10004350:	6023      	str	r3, [r4, #0]
10004352:	bd38      	pop	{r3, r4, r5, pc}
10004354:	38002438 	stmdacc	r0, {r3, r4, r5, sl, sp}

10004358 <__aeabi_drsub>:
10004358:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
1000435c:	e002      	b.n	10004364 <__adddf3>
1000435e:	bf00      	nop

10004360 <__aeabi_dsub>:
10004360:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

10004364 <__adddf3>:
10004364:	b530      	push	{r4, r5, lr}
10004366:	ea4f 0441 	mov.w	r4, r1, lsl #1
1000436a:	ea4f 0543 	mov.w	r5, r3, lsl #1
1000436e:	ea94 0f05 	teq	r4, r5
10004372:	bf08      	it	eq
10004374:	ea90 0f02 	teqeq	r0, r2
10004378:	bf1f      	itttt	ne
1000437a:	ea54 0c00 	orrsne.w	ip, r4, r0
1000437e:	ea55 0c02 	orrsne.w	ip, r5, r2
10004382:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
10004386:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1000438a:	f000 80e2 	beq.w	10004552 <__adddf3+0x1ee>
1000438e:	ea4f 5454 	mov.w	r4, r4, lsr #21
10004392:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
10004396:	bfb8      	it	lt
10004398:	426d      	neglt	r5, r5
1000439a:	dd0c      	ble.n	100043b6 <__adddf3+0x52>
1000439c:	442c      	add	r4, r5
1000439e:	ea80 0202 	eor.w	r2, r0, r2
100043a2:	ea81 0303 	eor.w	r3, r1, r3
100043a6:	ea82 0000 	eor.w	r0, r2, r0
100043aa:	ea83 0101 	eor.w	r1, r3, r1
100043ae:	ea80 0202 	eor.w	r2, r0, r2
100043b2:	ea81 0303 	eor.w	r3, r1, r3
100043b6:	2d36      	cmp	r5, #54	; 0x36
100043b8:	bf88      	it	hi
100043ba:	bd30      	pophi	{r4, r5, pc}
100043bc:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
100043c0:	ea4f 3101 	mov.w	r1, r1, lsl #12
100043c4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
100043c8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
100043cc:	d002      	beq.n	100043d4 <__adddf3+0x70>
100043ce:	4240      	negs	r0, r0
100043d0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
100043d4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
100043d8:	ea4f 3303 	mov.w	r3, r3, lsl #12
100043dc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
100043e0:	d002      	beq.n	100043e8 <__adddf3+0x84>
100043e2:	4252      	negs	r2, r2
100043e4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
100043e8:	ea94 0f05 	teq	r4, r5
100043ec:	f000 80a7 	beq.w	1000453e <__adddf3+0x1da>
100043f0:	f1a4 0401 	sub.w	r4, r4, #1
100043f4:	f1d5 0e20 	rsbs	lr, r5, #32
100043f8:	db0d      	blt.n	10004416 <__adddf3+0xb2>
100043fa:	fa02 fc0e 	lsl.w	ip, r2, lr
100043fe:	fa22 f205 	lsr.w	r2, r2, r5
10004402:	1880      	adds	r0, r0, r2
10004404:	f141 0100 	adc.w	r1, r1, #0
10004408:	fa03 f20e 	lsl.w	r2, r3, lr
1000440c:	1880      	adds	r0, r0, r2
1000440e:	fa43 f305 	asr.w	r3, r3, r5
10004412:	4159      	adcs	r1, r3
10004414:	e00e      	b.n	10004434 <__adddf3+0xd0>
10004416:	f1a5 0520 	sub.w	r5, r5, #32
1000441a:	f10e 0e20 	add.w	lr, lr, #32
1000441e:	2a01      	cmp	r2, #1
10004420:	fa03 fc0e 	lsl.w	ip, r3, lr
10004424:	bf28      	it	cs
10004426:	f04c 0c02 	orrcs.w	ip, ip, #2
1000442a:	fa43 f305 	asr.w	r3, r3, r5
1000442e:	18c0      	adds	r0, r0, r3
10004430:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
10004434:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
10004438:	d507      	bpl.n	1000444a <__adddf3+0xe6>
1000443a:	f04f 0e00 	mov.w	lr, #0
1000443e:	f1dc 0c00 	rsbs	ip, ip, #0
10004442:	eb7e 0000 	sbcs.w	r0, lr, r0
10004446:	eb6e 0101 	sbc.w	r1, lr, r1
1000444a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
1000444e:	d31b      	bcc.n	10004488 <__adddf3+0x124>
10004450:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
10004454:	d30c      	bcc.n	10004470 <__adddf3+0x10c>
10004456:	0849      	lsrs	r1, r1, #1
10004458:	ea5f 0030 	movs.w	r0, r0, rrx
1000445c:	ea4f 0c3c 	mov.w	ip, ip, rrx
10004460:	f104 0401 	add.w	r4, r4, #1
10004464:	ea4f 5244 	mov.w	r2, r4, lsl #21
10004468:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
1000446c:	f080 809a 	bcs.w	100045a4 <__adddf3+0x240>
10004470:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
10004474:	bf08      	it	eq
10004476:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
1000447a:	f150 0000 	adcs.w	r0, r0, #0
1000447e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10004482:	ea41 0105 	orr.w	r1, r1, r5
10004486:	bd30      	pop	{r4, r5, pc}
10004488:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
1000448c:	4140      	adcs	r0, r0
1000448e:	eb41 0101 	adc.w	r1, r1, r1
10004492:	3c01      	subs	r4, #1
10004494:	bf28      	it	cs
10004496:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
1000449a:	d2e9      	bcs.n	10004470 <__adddf3+0x10c>
1000449c:	f091 0f00 	teq	r1, #0
100044a0:	bf04      	itt	eq
100044a2:	4601      	moveq	r1, r0
100044a4:	2000      	moveq	r0, #0
100044a6:	fab1 f381 	clz	r3, r1
100044aa:	bf08      	it	eq
100044ac:	3320      	addeq	r3, #32
100044ae:	f1a3 030b 	sub.w	r3, r3, #11
100044b2:	f1b3 0220 	subs.w	r2, r3, #32
100044b6:	da0c      	bge.n	100044d2 <__adddf3+0x16e>
100044b8:	320c      	adds	r2, #12
100044ba:	dd08      	ble.n	100044ce <__adddf3+0x16a>
100044bc:	f102 0c14 	add.w	ip, r2, #20
100044c0:	f1c2 020c 	rsb	r2, r2, #12
100044c4:	fa01 f00c 	lsl.w	r0, r1, ip
100044c8:	fa21 f102 	lsr.w	r1, r1, r2
100044cc:	e00c      	b.n	100044e8 <__adddf3+0x184>
100044ce:	f102 0214 	add.w	r2, r2, #20
100044d2:	bfd8      	it	le
100044d4:	f1c2 0c20 	rsble	ip, r2, #32
100044d8:	fa01 f102 	lsl.w	r1, r1, r2
100044dc:	fa20 fc0c 	lsr.w	ip, r0, ip
100044e0:	bfdc      	itt	le
100044e2:	ea41 010c 	orrle.w	r1, r1, ip
100044e6:	4090      	lslle	r0, r2
100044e8:	1ae4      	subs	r4, r4, r3
100044ea:	bfa2      	ittt	ge
100044ec:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
100044f0:	4329      	orrge	r1, r5
100044f2:	bd30      	popge	{r4, r5, pc}
100044f4:	ea6f 0404 	mvn.w	r4, r4
100044f8:	3c1f      	subs	r4, #31
100044fa:	da1c      	bge.n	10004536 <__adddf3+0x1d2>
100044fc:	340c      	adds	r4, #12
100044fe:	dc0e      	bgt.n	1000451e <__adddf3+0x1ba>
10004500:	f104 0414 	add.w	r4, r4, #20
10004504:	f1c4 0220 	rsb	r2, r4, #32
10004508:	fa20 f004 	lsr.w	r0, r0, r4
1000450c:	fa01 f302 	lsl.w	r3, r1, r2
10004510:	ea40 0003 	orr.w	r0, r0, r3
10004514:	fa21 f304 	lsr.w	r3, r1, r4
10004518:	ea45 0103 	orr.w	r1, r5, r3
1000451c:	bd30      	pop	{r4, r5, pc}
1000451e:	f1c4 040c 	rsb	r4, r4, #12
10004522:	f1c4 0220 	rsb	r2, r4, #32
10004526:	fa20 f002 	lsr.w	r0, r0, r2
1000452a:	fa01 f304 	lsl.w	r3, r1, r4
1000452e:	ea40 0003 	orr.w	r0, r0, r3
10004532:	4629      	mov	r1, r5
10004534:	bd30      	pop	{r4, r5, pc}
10004536:	fa21 f004 	lsr.w	r0, r1, r4
1000453a:	4629      	mov	r1, r5
1000453c:	bd30      	pop	{r4, r5, pc}
1000453e:	f094 0f00 	teq	r4, #0
10004542:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
10004546:	bf06      	itte	eq
10004548:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
1000454c:	3401      	addeq	r4, #1
1000454e:	3d01      	subne	r5, #1
10004550:	e74e      	b.n	100043f0 <__adddf3+0x8c>
10004552:	ea7f 5c64 	mvns.w	ip, r4, asr #21
10004556:	bf18      	it	ne
10004558:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
1000455c:	d029      	beq.n	100045b2 <__adddf3+0x24e>
1000455e:	ea94 0f05 	teq	r4, r5
10004562:	bf08      	it	eq
10004564:	ea90 0f02 	teqeq	r0, r2
10004568:	d005      	beq.n	10004576 <__adddf3+0x212>
1000456a:	ea54 0c00 	orrs.w	ip, r4, r0
1000456e:	bf04      	itt	eq
10004570:	4619      	moveq	r1, r3
10004572:	4610      	moveq	r0, r2
10004574:	bd30      	pop	{r4, r5, pc}
10004576:	ea91 0f03 	teq	r1, r3
1000457a:	bf1e      	ittt	ne
1000457c:	2100      	movne	r1, #0
1000457e:	2000      	movne	r0, #0
10004580:	bd30      	popne	{r4, r5, pc}
10004582:	ea5f 5c54 	movs.w	ip, r4, lsr #21
10004586:	d105      	bne.n	10004594 <__adddf3+0x230>
10004588:	0040      	lsls	r0, r0, #1
1000458a:	4149      	adcs	r1, r1
1000458c:	bf28      	it	cs
1000458e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
10004592:	bd30      	pop	{r4, r5, pc}
10004594:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
10004598:	bf3c      	itt	cc
1000459a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
1000459e:	bd30      	popcc	{r4, r5, pc}
100045a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
100045a4:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
100045a8:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
100045ac:	f04f 0000 	mov.w	r0, #0
100045b0:	bd30      	pop	{r4, r5, pc}
100045b2:	ea7f 5c64 	mvns.w	ip, r4, asr #21
100045b6:	bf1a      	itte	ne
100045b8:	4619      	movne	r1, r3
100045ba:	4610      	movne	r0, r2
100045bc:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
100045c0:	bf1c      	itt	ne
100045c2:	460b      	movne	r3, r1
100045c4:	4602      	movne	r2, r0
100045c6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
100045ca:	bf06      	itte	eq
100045cc:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
100045d0:	ea91 0f03 	teqeq	r1, r3
100045d4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
100045d8:	bd30      	pop	{r4, r5, pc}
100045da:	bf00      	nop

100045dc <__aeabi_ui2d>:
100045dc:	f090 0f00 	teq	r0, #0
100045e0:	bf04      	itt	eq
100045e2:	2100      	moveq	r1, #0
100045e4:	4770      	bxeq	lr
100045e6:	b530      	push	{r4, r5, lr}
100045e8:	f44f 6480 	mov.w	r4, #1024	; 0x400
100045ec:	f104 0432 	add.w	r4, r4, #50	; 0x32
100045f0:	f04f 0500 	mov.w	r5, #0
100045f4:	f04f 0100 	mov.w	r1, #0
100045f8:	e750      	b.n	1000449c <__adddf3+0x138>
100045fa:	bf00      	nop

100045fc <__aeabi_i2d>:
100045fc:	f090 0f00 	teq	r0, #0
10004600:	bf04      	itt	eq
10004602:	2100      	moveq	r1, #0
10004604:	4770      	bxeq	lr
10004606:	b530      	push	{r4, r5, lr}
10004608:	f44f 6480 	mov.w	r4, #1024	; 0x400
1000460c:	f104 0432 	add.w	r4, r4, #50	; 0x32
10004610:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
10004614:	bf48      	it	mi
10004616:	4240      	negmi	r0, r0
10004618:	f04f 0100 	mov.w	r1, #0
1000461c:	e73e      	b.n	1000449c <__adddf3+0x138>
1000461e:	bf00      	nop

10004620 <__aeabi_f2d>:
10004620:	0042      	lsls	r2, r0, #1
10004622:	ea4f 01e2 	mov.w	r1, r2, asr #3
10004626:	ea4f 0131 	mov.w	r1, r1, rrx
1000462a:	ea4f 7002 	mov.w	r0, r2, lsl #28
1000462e:	bf1f      	itttt	ne
10004630:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
10004634:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
10004638:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
1000463c:	4770      	bxne	lr
1000463e:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
10004642:	bf08      	it	eq
10004644:	4770      	bxeq	lr
10004646:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
1000464a:	bf04      	itt	eq
1000464c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
10004650:	4770      	bxeq	lr
10004652:	b530      	push	{r4, r5, lr}
10004654:	f44f 7460 	mov.w	r4, #896	; 0x380
10004658:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
1000465c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
10004660:	e71c      	b.n	1000449c <__adddf3+0x138>
10004662:	bf00      	nop

10004664 <__aeabi_ul2d>:
10004664:	ea50 0201 	orrs.w	r2, r0, r1
10004668:	bf08      	it	eq
1000466a:	4770      	bxeq	lr
1000466c:	b530      	push	{r4, r5, lr}
1000466e:	f04f 0500 	mov.w	r5, #0
10004672:	e00a      	b.n	1000468a <__aeabi_l2d+0x16>

10004674 <__aeabi_l2d>:
10004674:	ea50 0201 	orrs.w	r2, r0, r1
10004678:	bf08      	it	eq
1000467a:	4770      	bxeq	lr
1000467c:	b530      	push	{r4, r5, lr}
1000467e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
10004682:	d502      	bpl.n	1000468a <__aeabi_l2d+0x16>
10004684:	4240      	negs	r0, r0
10004686:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
1000468a:	f44f 6480 	mov.w	r4, #1024	; 0x400
1000468e:	f104 0432 	add.w	r4, r4, #50	; 0x32
10004692:	ea5f 5c91 	movs.w	ip, r1, lsr #22
10004696:	f43f aed8 	beq.w	1000444a <__adddf3+0xe6>
1000469a:	f04f 0203 	mov.w	r2, #3
1000469e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
100046a2:	bf18      	it	ne
100046a4:	3203      	addne	r2, #3
100046a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
100046aa:	bf18      	it	ne
100046ac:	3203      	addne	r2, #3
100046ae:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
100046b2:	f1c2 0320 	rsb	r3, r2, #32
100046b6:	fa00 fc03 	lsl.w	ip, r0, r3
100046ba:	fa20 f002 	lsr.w	r0, r0, r2
100046be:	fa01 fe03 	lsl.w	lr, r1, r3
100046c2:	ea40 000e 	orr.w	r0, r0, lr
100046c6:	fa21 f102 	lsr.w	r1, r1, r2
100046ca:	4414      	add	r4, r2
100046cc:	e6bd      	b.n	1000444a <__adddf3+0xe6>
100046ce:	bf00      	nop

100046d0 <__aeabi_dmul>:
100046d0:	b570      	push	{r4, r5, r6, lr}
100046d2:	f04f 0cff 	mov.w	ip, #255	; 0xff
100046d6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
100046da:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
100046de:	bf1d      	ittte	ne
100046e0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
100046e4:	ea94 0f0c 	teqne	r4, ip
100046e8:	ea95 0f0c 	teqne	r5, ip
100046ec:	f000 f8de 	bleq	100048ac <__aeabi_dmul+0x1dc>
100046f0:	442c      	add	r4, r5
100046f2:	ea81 0603 	eor.w	r6, r1, r3
100046f6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
100046fa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
100046fe:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
10004702:	bf18      	it	ne
10004704:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
10004708:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
1000470c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
10004710:	d038      	beq.n	10004784 <__aeabi_dmul+0xb4>
10004712:	fba0 ce02 	umull	ip, lr, r0, r2
10004716:	f04f 0500 	mov.w	r5, #0
1000471a:	fbe1 e502 	umlal	lr, r5, r1, r2
1000471e:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
10004722:	fbe0 e503 	umlal	lr, r5, r0, r3
10004726:	f04f 0600 	mov.w	r6, #0
1000472a:	fbe1 5603 	umlal	r5, r6, r1, r3
1000472e:	f09c 0f00 	teq	ip, #0
10004732:	bf18      	it	ne
10004734:	f04e 0e01 	orrne.w	lr, lr, #1
10004738:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
1000473c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
10004740:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
10004744:	d204      	bcs.n	10004750 <__aeabi_dmul+0x80>
10004746:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
1000474a:	416d      	adcs	r5, r5
1000474c:	eb46 0606 	adc.w	r6, r6, r6
10004750:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
10004754:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
10004758:	ea4f 20c5 	mov.w	r0, r5, lsl #11
1000475c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
10004760:	ea4f 2ece 	mov.w	lr, lr, lsl #11
10004764:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
10004768:	bf88      	it	hi
1000476a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
1000476e:	d81e      	bhi.n	100047ae <__aeabi_dmul+0xde>
10004770:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
10004774:	bf08      	it	eq
10004776:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
1000477a:	f150 0000 	adcs.w	r0, r0, #0
1000477e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10004782:	bd70      	pop	{r4, r5, r6, pc}
10004784:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
10004788:	ea46 0101 	orr.w	r1, r6, r1
1000478c:	ea40 0002 	orr.w	r0, r0, r2
10004790:	ea81 0103 	eor.w	r1, r1, r3
10004794:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
10004798:	bfc2      	ittt	gt
1000479a:	ebd4 050c 	rsbsgt	r5, r4, ip
1000479e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
100047a2:	bd70      	popgt	{r4, r5, r6, pc}
100047a4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
100047a8:	f04f 0e00 	mov.w	lr, #0
100047ac:	3c01      	subs	r4, #1
100047ae:	f300 80ab 	bgt.w	10004908 <__aeabi_dmul+0x238>
100047b2:	f114 0f36 	cmn.w	r4, #54	; 0x36
100047b6:	bfde      	ittt	le
100047b8:	2000      	movle	r0, #0
100047ba:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
100047be:	bd70      	pople	{r4, r5, r6, pc}
100047c0:	f1c4 0400 	rsb	r4, r4, #0
100047c4:	3c20      	subs	r4, #32
100047c6:	da35      	bge.n	10004834 <__aeabi_dmul+0x164>
100047c8:	340c      	adds	r4, #12
100047ca:	dc1b      	bgt.n	10004804 <__aeabi_dmul+0x134>
100047cc:	f104 0414 	add.w	r4, r4, #20
100047d0:	f1c4 0520 	rsb	r5, r4, #32
100047d4:	fa00 f305 	lsl.w	r3, r0, r5
100047d8:	fa20 f004 	lsr.w	r0, r0, r4
100047dc:	fa01 f205 	lsl.w	r2, r1, r5
100047e0:	ea40 0002 	orr.w	r0, r0, r2
100047e4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
100047e8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
100047ec:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
100047f0:	fa21 f604 	lsr.w	r6, r1, r4
100047f4:	eb42 0106 	adc.w	r1, r2, r6
100047f8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
100047fc:	bf08      	it	eq
100047fe:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10004802:	bd70      	pop	{r4, r5, r6, pc}
10004804:	f1c4 040c 	rsb	r4, r4, #12
10004808:	f1c4 0520 	rsb	r5, r4, #32
1000480c:	fa00 f304 	lsl.w	r3, r0, r4
10004810:	fa20 f005 	lsr.w	r0, r0, r5
10004814:	fa01 f204 	lsl.w	r2, r1, r4
10004818:	ea40 0002 	orr.w	r0, r0, r2
1000481c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10004820:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
10004824:	f141 0100 	adc.w	r1, r1, #0
10004828:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
1000482c:	bf08      	it	eq
1000482e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
10004832:	bd70      	pop	{r4, r5, r6, pc}
10004834:	f1c4 0520 	rsb	r5, r4, #32
10004838:	fa00 f205 	lsl.w	r2, r0, r5
1000483c:	ea4e 0e02 	orr.w	lr, lr, r2
10004840:	fa20 f304 	lsr.w	r3, r0, r4
10004844:	fa01 f205 	lsl.w	r2, r1, r5
10004848:	ea43 0302 	orr.w	r3, r3, r2
1000484c:	fa21 f004 	lsr.w	r0, r1, r4
10004850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
10004854:	fa21 f204 	lsr.w	r2, r1, r4
10004858:	ea20 0002 	bic.w	r0, r0, r2
1000485c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
10004860:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
10004864:	bf08      	it	eq
10004866:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
1000486a:	bd70      	pop	{r4, r5, r6, pc}
1000486c:	f094 0f00 	teq	r4, #0
10004870:	d10f      	bne.n	10004892 <__aeabi_dmul+0x1c2>
10004872:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
10004876:	0040      	lsls	r0, r0, #1
10004878:	eb41 0101 	adc.w	r1, r1, r1
1000487c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10004880:	bf08      	it	eq
10004882:	3c01      	subeq	r4, #1
10004884:	d0f7      	beq.n	10004876 <__aeabi_dmul+0x1a6>
10004886:	ea41 0106 	orr.w	r1, r1, r6
1000488a:	f095 0f00 	teq	r5, #0
1000488e:	bf18      	it	ne
10004890:	4770      	bxne	lr
10004892:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
10004896:	0052      	lsls	r2, r2, #1
10004898:	eb43 0303 	adc.w	r3, r3, r3
1000489c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
100048a0:	bf08      	it	eq
100048a2:	3d01      	subeq	r5, #1
100048a4:	d0f7      	beq.n	10004896 <__aeabi_dmul+0x1c6>
100048a6:	ea43 0306 	orr.w	r3, r3, r6
100048aa:	4770      	bx	lr
100048ac:	ea94 0f0c 	teq	r4, ip
100048b0:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
100048b4:	bf18      	it	ne
100048b6:	ea95 0f0c 	teqne	r5, ip
100048ba:	d00c      	beq.n	100048d6 <__aeabi_dmul+0x206>
100048bc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
100048c0:	bf18      	it	ne
100048c2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
100048c6:	d1d1      	bne.n	1000486c <__aeabi_dmul+0x19c>
100048c8:	ea81 0103 	eor.w	r1, r1, r3
100048cc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
100048d0:	f04f 0000 	mov.w	r0, #0
100048d4:	bd70      	pop	{r4, r5, r6, pc}
100048d6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
100048da:	bf06      	itte	eq
100048dc:	4610      	moveq	r0, r2
100048de:	4619      	moveq	r1, r3
100048e0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
100048e4:	d019      	beq.n	1000491a <__aeabi_dmul+0x24a>
100048e6:	ea94 0f0c 	teq	r4, ip
100048ea:	d102      	bne.n	100048f2 <__aeabi_dmul+0x222>
100048ec:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
100048f0:	d113      	bne.n	1000491a <__aeabi_dmul+0x24a>
100048f2:	ea95 0f0c 	teq	r5, ip
100048f6:	d105      	bne.n	10004904 <__aeabi_dmul+0x234>
100048f8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
100048fc:	bf1c      	itt	ne
100048fe:	4610      	movne	r0, r2
10004900:	4619      	movne	r1, r3
10004902:	d10a      	bne.n	1000491a <__aeabi_dmul+0x24a>
10004904:	ea81 0103 	eor.w	r1, r1, r3
10004908:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
1000490c:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
10004910:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
10004914:	f04f 0000 	mov.w	r0, #0
10004918:	bd70      	pop	{r4, r5, r6, pc}
1000491a:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
1000491e:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
10004922:	bd70      	pop	{r4, r5, r6, pc}

10004924 <__aeabi_ddiv>:
10004924:	b570      	push	{r4, r5, r6, lr}
10004926:	f04f 0cff 	mov.w	ip, #255	; 0xff
1000492a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
1000492e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
10004932:	bf1d      	ittte	ne
10004934:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
10004938:	ea94 0f0c 	teqne	r4, ip
1000493c:	ea95 0f0c 	teqne	r5, ip
10004940:	f000 f8a7 	bleq	10004a92 <__aeabi_ddiv+0x16e>
10004944:	eba4 0405 	sub.w	r4, r4, r5
10004948:	ea81 0e03 	eor.w	lr, r1, r3
1000494c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10004950:	ea4f 3101 	mov.w	r1, r1, lsl #12
10004954:	f000 8088 	beq.w	10004a68 <__aeabi_ddiv+0x144>
10004958:	ea4f 3303 	mov.w	r3, r3, lsl #12
1000495c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
10004960:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
10004964:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
10004968:	ea4f 2202 	mov.w	r2, r2, lsl #8
1000496c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
10004970:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
10004974:	ea4f 2600 	mov.w	r6, r0, lsl #8
10004978:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
1000497c:	429d      	cmp	r5, r3
1000497e:	bf08      	it	eq
10004980:	4296      	cmpeq	r6, r2
10004982:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
10004986:	f504 7440 	add.w	r4, r4, #768	; 0x300
1000498a:	d202      	bcs.n	10004992 <__aeabi_ddiv+0x6e>
1000498c:	085b      	lsrs	r3, r3, #1
1000498e:	ea4f 0232 	mov.w	r2, r2, rrx
10004992:	1ab6      	subs	r6, r6, r2
10004994:	eb65 0503 	sbc.w	r5, r5, r3
10004998:	085b      	lsrs	r3, r3, #1
1000499a:	ea4f 0232 	mov.w	r2, r2, rrx
1000499e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
100049a2:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
100049a6:	ebb6 0e02 	subs.w	lr, r6, r2
100049aa:	eb75 0e03 	sbcs.w	lr, r5, r3
100049ae:	bf22      	ittt	cs
100049b0:	1ab6      	subcs	r6, r6, r2
100049b2:	4675      	movcs	r5, lr
100049b4:	ea40 000c 	orrcs.w	r0, r0, ip
100049b8:	085b      	lsrs	r3, r3, #1
100049ba:	ea4f 0232 	mov.w	r2, r2, rrx
100049be:	ebb6 0e02 	subs.w	lr, r6, r2
100049c2:	eb75 0e03 	sbcs.w	lr, r5, r3
100049c6:	bf22      	ittt	cs
100049c8:	1ab6      	subcs	r6, r6, r2
100049ca:	4675      	movcs	r5, lr
100049cc:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
100049d0:	085b      	lsrs	r3, r3, #1
100049d2:	ea4f 0232 	mov.w	r2, r2, rrx
100049d6:	ebb6 0e02 	subs.w	lr, r6, r2
100049da:	eb75 0e03 	sbcs.w	lr, r5, r3
100049de:	bf22      	ittt	cs
100049e0:	1ab6      	subcs	r6, r6, r2
100049e2:	4675      	movcs	r5, lr
100049e4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
100049e8:	085b      	lsrs	r3, r3, #1
100049ea:	ea4f 0232 	mov.w	r2, r2, rrx
100049ee:	ebb6 0e02 	subs.w	lr, r6, r2
100049f2:	eb75 0e03 	sbcs.w	lr, r5, r3
100049f6:	bf22      	ittt	cs
100049f8:	1ab6      	subcs	r6, r6, r2
100049fa:	4675      	movcs	r5, lr
100049fc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
10004a00:	ea55 0e06 	orrs.w	lr, r5, r6
10004a04:	d018      	beq.n	10004a38 <__aeabi_ddiv+0x114>
10004a06:	ea4f 1505 	mov.w	r5, r5, lsl #4
10004a0a:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
10004a0e:	ea4f 1606 	mov.w	r6, r6, lsl #4
10004a12:	ea4f 03c3 	mov.w	r3, r3, lsl #3
10004a16:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
10004a1a:	ea4f 02c2 	mov.w	r2, r2, lsl #3
10004a1e:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
10004a22:	d1c0      	bne.n	100049a6 <__aeabi_ddiv+0x82>
10004a24:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10004a28:	d10b      	bne.n	10004a42 <__aeabi_ddiv+0x11e>
10004a2a:	ea41 0100 	orr.w	r1, r1, r0
10004a2e:	f04f 0000 	mov.w	r0, #0
10004a32:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
10004a36:	e7b6      	b.n	100049a6 <__aeabi_ddiv+0x82>
10004a38:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
10004a3c:	bf04      	itt	eq
10004a3e:	4301      	orreq	r1, r0
10004a40:	2000      	moveq	r0, #0
10004a42:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
10004a46:	bf88      	it	hi
10004a48:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
10004a4c:	f63f aeaf 	bhi.w	100047ae <__aeabi_dmul+0xde>
10004a50:	ebb5 0c03 	subs.w	ip, r5, r3
10004a54:	bf04      	itt	eq
10004a56:	ebb6 0c02 	subseq.w	ip, r6, r2
10004a5a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
10004a5e:	f150 0000 	adcs.w	r0, r0, #0
10004a62:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
10004a66:	bd70      	pop	{r4, r5, r6, pc}
10004a68:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
10004a6c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
10004a70:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
10004a74:	bfc2      	ittt	gt
10004a76:	ebd4 050c 	rsbsgt	r5, r4, ip
10004a7a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
10004a7e:	bd70      	popgt	{r4, r5, r6, pc}
10004a80:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
10004a84:	f04f 0e00 	mov.w	lr, #0
10004a88:	3c01      	subs	r4, #1
10004a8a:	e690      	b.n	100047ae <__aeabi_dmul+0xde>
10004a8c:	ea45 0e06 	orr.w	lr, r5, r6
10004a90:	e68d      	b.n	100047ae <__aeabi_dmul+0xde>
10004a92:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
10004a96:	ea94 0f0c 	teq	r4, ip
10004a9a:	bf08      	it	eq
10004a9c:	ea95 0f0c 	teqeq	r5, ip
10004aa0:	f43f af3b 	beq.w	1000491a <__aeabi_dmul+0x24a>
10004aa4:	ea94 0f0c 	teq	r4, ip
10004aa8:	d10a      	bne.n	10004ac0 <__aeabi_ddiv+0x19c>
10004aaa:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
10004aae:	f47f af34 	bne.w	1000491a <__aeabi_dmul+0x24a>
10004ab2:	ea95 0f0c 	teq	r5, ip
10004ab6:	f47f af25 	bne.w	10004904 <__aeabi_dmul+0x234>
10004aba:	4610      	mov	r0, r2
10004abc:	4619      	mov	r1, r3
10004abe:	e72c      	b.n	1000491a <__aeabi_dmul+0x24a>
10004ac0:	ea95 0f0c 	teq	r5, ip
10004ac4:	d106      	bne.n	10004ad4 <__aeabi_ddiv+0x1b0>
10004ac6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
10004aca:	f43f aefd 	beq.w	100048c8 <__aeabi_dmul+0x1f8>
10004ace:	4610      	mov	r0, r2
10004ad0:	4619      	mov	r1, r3
10004ad2:	e722      	b.n	1000491a <__aeabi_dmul+0x24a>
10004ad4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
10004ad8:	bf18      	it	ne
10004ada:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
10004ade:	f47f aec5 	bne.w	1000486c <__aeabi_dmul+0x19c>
10004ae2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
10004ae6:	f47f af0d 	bne.w	10004904 <__aeabi_dmul+0x234>
10004aea:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
10004aee:	f47f aeeb 	bne.w	100048c8 <__aeabi_dmul+0x1f8>
10004af2:	e712      	b.n	1000491a <__aeabi_dmul+0x24a>

10004af4 <__gedf2>:
10004af4:	f04f 3cff 	mov.w	ip, #4294967295
10004af8:	e006      	b.n	10004b08 <__cmpdf2+0x4>
10004afa:	bf00      	nop

10004afc <__ledf2>:
10004afc:	f04f 0c01 	mov.w	ip, #1
10004b00:	e002      	b.n	10004b08 <__cmpdf2+0x4>
10004b02:	bf00      	nop

10004b04 <__cmpdf2>:
10004b04:	f04f 0c01 	mov.w	ip, #1
10004b08:	f84d cd04 	str.w	ip, [sp, #-4]!
10004b0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10004b10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10004b14:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10004b18:	bf18      	it	ne
10004b1a:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
10004b1e:	d01b      	beq.n	10004b58 <__cmpdf2+0x54>
10004b20:	b001      	add	sp, #4
10004b22:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
10004b26:	bf0c      	ite	eq
10004b28:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
10004b2c:	ea91 0f03 	teqne	r1, r3
10004b30:	bf02      	ittt	eq
10004b32:	ea90 0f02 	teqeq	r0, r2
10004b36:	2000      	moveq	r0, #0
10004b38:	4770      	bxeq	lr
10004b3a:	f110 0f00 	cmn.w	r0, #0
10004b3e:	ea91 0f03 	teq	r1, r3
10004b42:	bf58      	it	pl
10004b44:	4299      	cmppl	r1, r3
10004b46:	bf08      	it	eq
10004b48:	4290      	cmpeq	r0, r2
10004b4a:	bf2c      	ite	cs
10004b4c:	17d8      	asrcs	r0, r3, #31
10004b4e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
10004b52:	f040 0001 	orr.w	r0, r0, #1
10004b56:	4770      	bx	lr
10004b58:	ea4f 0c41 	mov.w	ip, r1, lsl #1
10004b5c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10004b60:	d102      	bne.n	10004b68 <__cmpdf2+0x64>
10004b62:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
10004b66:	d107      	bne.n	10004b78 <__cmpdf2+0x74>
10004b68:	ea4f 0c43 	mov.w	ip, r3, lsl #1
10004b6c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
10004b70:	d1d6      	bne.n	10004b20 <__cmpdf2+0x1c>
10004b72:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
10004b76:	d0d3      	beq.n	10004b20 <__cmpdf2+0x1c>
10004b78:	f85d 0b04 	ldr.w	r0, [sp], #4
10004b7c:	4770      	bx	lr
10004b7e:	bf00      	nop

10004b80 <__aeabi_cdrcmple>:
10004b80:	4684      	mov	ip, r0
10004b82:	4610      	mov	r0, r2
10004b84:	4662      	mov	r2, ip
10004b86:	468c      	mov	ip, r1
10004b88:	4619      	mov	r1, r3
10004b8a:	4663      	mov	r3, ip
10004b8c:	e000      	b.n	10004b90 <__aeabi_cdcmpeq>
10004b8e:	bf00      	nop

10004b90 <__aeabi_cdcmpeq>:
10004b90:	b501      	push	{r0, lr}
10004b92:	f7ff ffb7 	bl	10004b04 <__cmpdf2>
10004b96:	2800      	cmp	r0, #0
10004b98:	bf48      	it	mi
10004b9a:	f110 0f00 	cmnmi.w	r0, #0
10004b9e:	bd01      	pop	{r0, pc}

10004ba0 <__aeabi_dcmpeq>:
10004ba0:	f84d ed08 	str.w	lr, [sp, #-8]!
10004ba4:	f7ff fff4 	bl	10004b90 <__aeabi_cdcmpeq>
10004ba8:	bf0c      	ite	eq
10004baa:	2001      	moveq	r0, #1
10004bac:	2000      	movne	r0, #0
10004bae:	f85d fb08 	ldr.w	pc, [sp], #8
10004bb2:	bf00      	nop

10004bb4 <__aeabi_dcmplt>:
10004bb4:	f84d ed08 	str.w	lr, [sp, #-8]!
10004bb8:	f7ff ffea 	bl	10004b90 <__aeabi_cdcmpeq>
10004bbc:	bf34      	ite	cc
10004bbe:	2001      	movcc	r0, #1
10004bc0:	2000      	movcs	r0, #0
10004bc2:	f85d fb08 	ldr.w	pc, [sp], #8
10004bc6:	bf00      	nop

10004bc8 <__aeabi_dcmple>:
10004bc8:	f84d ed08 	str.w	lr, [sp, #-8]!
10004bcc:	f7ff ffe0 	bl	10004b90 <__aeabi_cdcmpeq>
10004bd0:	bf94      	ite	ls
10004bd2:	2001      	movls	r0, #1
10004bd4:	2000      	movhi	r0, #0
10004bd6:	f85d fb08 	ldr.w	pc, [sp], #8
10004bda:	bf00      	nop

10004bdc <__aeabi_dcmpge>:
10004bdc:	f84d ed08 	str.w	lr, [sp, #-8]!
10004be0:	f7ff ffce 	bl	10004b80 <__aeabi_cdrcmple>
10004be4:	bf94      	ite	ls
10004be6:	2001      	movls	r0, #1
10004be8:	2000      	movhi	r0, #0
10004bea:	f85d fb08 	ldr.w	pc, [sp], #8
10004bee:	bf00      	nop

10004bf0 <__aeabi_dcmpgt>:
10004bf0:	f84d ed08 	str.w	lr, [sp, #-8]!
10004bf4:	f7ff ffc4 	bl	10004b80 <__aeabi_cdrcmple>
10004bf8:	bf34      	ite	cc
10004bfa:	2001      	movcc	r0, #1
10004bfc:	2000      	movcs	r0, #0
10004bfe:	f85d fb08 	ldr.w	pc, [sp], #8
10004c02:	bf00      	nop

10004c04 <__aeabi_d2iz>:
10004c04:	ea4f 0241 	mov.w	r2, r1, lsl #1
10004c08:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
10004c0c:	d215      	bcs.n	10004c3a <__aeabi_d2iz+0x36>
10004c0e:	d511      	bpl.n	10004c34 <__aeabi_d2iz+0x30>
10004c10:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
10004c14:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10004c18:	d912      	bls.n	10004c40 <__aeabi_d2iz+0x3c>
10004c1a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10004c1e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
10004c22:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10004c26:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
10004c2a:	fa23 f002 	lsr.w	r0, r3, r2
10004c2e:	bf18      	it	ne
10004c30:	4240      	negne	r0, r0
10004c32:	4770      	bx	lr
10004c34:	f04f 0000 	mov.w	r0, #0
10004c38:	4770      	bx	lr
10004c3a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10004c3e:	d105      	bne.n	10004c4c <__aeabi_d2iz+0x48>
10004c40:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
10004c44:	bf08      	it	eq
10004c46:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
10004c4a:	4770      	bx	lr
10004c4c:	f04f 0000 	mov.w	r0, #0
10004c50:	4770      	bx	lr
10004c52:	bf00      	nop

10004c54 <__aeabi_d2uiz>:
10004c54:	004a      	lsls	r2, r1, #1
10004c56:	d211      	bcs.n	10004c7c <__aeabi_d2uiz+0x28>
10004c58:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
10004c5c:	d211      	bcs.n	10004c82 <__aeabi_d2uiz+0x2e>
10004c5e:	d50d      	bpl.n	10004c7c <__aeabi_d2uiz+0x28>
10004c60:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
10004c64:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
10004c68:	d40e      	bmi.n	10004c88 <__aeabi_d2uiz+0x34>
10004c6a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
10004c6e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
10004c72:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
10004c76:	fa23 f002 	lsr.w	r0, r3, r2
10004c7a:	4770      	bx	lr
10004c7c:	f04f 0000 	mov.w	r0, #0
10004c80:	4770      	bx	lr
10004c82:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
10004c86:	d102      	bne.n	10004c8e <__aeabi_d2uiz+0x3a>
10004c88:	f04f 30ff 	mov.w	r0, #4294967295
10004c8c:	4770      	bx	lr
10004c8e:	f04f 0000 	mov.w	r0, #0
10004c92:	4770      	bx	lr

10004c94 <__aeabi_uldivmod>:
10004c94:	b953      	cbnz	r3, 10004cac <__aeabi_uldivmod+0x18>
10004c96:	b94a      	cbnz	r2, 10004cac <__aeabi_uldivmod+0x18>
10004c98:	2900      	cmp	r1, #0
10004c9a:	bf08      	it	eq
10004c9c:	2800      	cmpeq	r0, #0
10004c9e:	bf1c      	itt	ne
10004ca0:	f04f 31ff 	movne.w	r1, #4294967295
10004ca4:	f04f 30ff 	movne.w	r0, #4294967295
10004ca8:	f001 b934 	b.w	10005f14 <__aeabi_idiv0>
10004cac:	f1ad 0c08 	sub.w	ip, sp, #8
10004cb0:	e96d ce04 	strd	ip, lr, [sp, #-16]!
10004cb4:	f000 f806 	bl	10004cc4 <__udivmoddi4>
10004cb8:	f8dd e004 	ldr.w	lr, [sp, #4]
10004cbc:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
10004cc0:	b004      	add	sp, #16
10004cc2:	4770      	bx	lr

10004cc4 <__udivmoddi4>:
10004cc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10004cc8:	9d09      	ldr	r5, [sp, #36]	; 0x24
10004cca:	4604      	mov	r4, r0
10004ccc:	460f      	mov	r7, r1
10004cce:	2b00      	cmp	r3, #0
10004cd0:	d148      	bne.n	10004d64 <__udivmoddi4+0xa0>
10004cd2:	428a      	cmp	r2, r1
10004cd4:	4694      	mov	ip, r2
10004cd6:	d961      	bls.n	10004d9c <__udivmoddi4+0xd8>
10004cd8:	fab2 f382 	clz	r3, r2
10004cdc:	b143      	cbz	r3, 10004cf0 <__udivmoddi4+0x2c>
10004cde:	f1c3 0120 	rsb	r1, r3, #32
10004ce2:	409f      	lsls	r7, r3
10004ce4:	fa02 fc03 	lsl.w	ip, r2, r3
10004ce8:	409c      	lsls	r4, r3
10004cea:	fa20 f101 	lsr.w	r1, r0, r1
10004cee:	430f      	orrs	r7, r1
10004cf0:	ea4f 411c 	mov.w	r1, ip, lsr #16
10004cf4:	fa1f fe8c 	uxth.w	lr, ip
10004cf8:	0c22      	lsrs	r2, r4, #16
10004cfa:	fbb7 f6f1 	udiv	r6, r7, r1
10004cfe:	fb01 7716 	mls	r7, r1, r6, r7
10004d02:	fb06 f00e 	mul.w	r0, r6, lr
10004d06:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
10004d0a:	4290      	cmp	r0, r2
10004d0c:	d908      	bls.n	10004d20 <__udivmoddi4+0x5c>
10004d0e:	eb1c 0202 	adds.w	r2, ip, r2
10004d12:	f106 37ff 	add.w	r7, r6, #4294967295
10004d16:	d202      	bcs.n	10004d1e <__udivmoddi4+0x5a>
10004d18:	4290      	cmp	r0, r2
10004d1a:	f200 8137 	bhi.w	10004f8c <__udivmoddi4+0x2c8>
10004d1e:	463e      	mov	r6, r7
10004d20:	1a12      	subs	r2, r2, r0
10004d22:	b2a4      	uxth	r4, r4
10004d24:	fbb2 f0f1 	udiv	r0, r2, r1
10004d28:	fb01 2210 	mls	r2, r1, r0, r2
10004d2c:	fb00 fe0e 	mul.w	lr, r0, lr
10004d30:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
10004d34:	45a6      	cmp	lr, r4
10004d36:	d908      	bls.n	10004d4a <__udivmoddi4+0x86>
10004d38:	eb1c 0404 	adds.w	r4, ip, r4
10004d3c:	f100 32ff 	add.w	r2, r0, #4294967295
10004d40:	d202      	bcs.n	10004d48 <__udivmoddi4+0x84>
10004d42:	45a6      	cmp	lr, r4
10004d44:	f200 811c 	bhi.w	10004f80 <__udivmoddi4+0x2bc>
10004d48:	4610      	mov	r0, r2
10004d4a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
10004d4e:	eba4 040e 	sub.w	r4, r4, lr
10004d52:	2600      	movs	r6, #0
10004d54:	b11d      	cbz	r5, 10004d5e <__udivmoddi4+0x9a>
10004d56:	40dc      	lsrs	r4, r3
10004d58:	2300      	movs	r3, #0
10004d5a:	e9c5 4300 	strd	r4, r3, [r5]
10004d5e:	4631      	mov	r1, r6
10004d60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004d64:	428b      	cmp	r3, r1
10004d66:	d909      	bls.n	10004d7c <__udivmoddi4+0xb8>
10004d68:	2d00      	cmp	r5, #0
10004d6a:	f000 80fd 	beq.w	10004f68 <__udivmoddi4+0x2a4>
10004d6e:	2600      	movs	r6, #0
10004d70:	e9c5 0100 	strd	r0, r1, [r5]
10004d74:	4630      	mov	r0, r6
10004d76:	4631      	mov	r1, r6
10004d78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10004d7c:	fab3 f683 	clz	r6, r3
10004d80:	2e00      	cmp	r6, #0
10004d82:	d14b      	bne.n	10004e1c <__udivmoddi4+0x158>
10004d84:	428b      	cmp	r3, r1
10004d86:	f0c0 80f2 	bcc.w	10004f6e <__udivmoddi4+0x2aa>
10004d8a:	4282      	cmp	r2, r0
10004d8c:	f240 80ef 	bls.w	10004f6e <__udivmoddi4+0x2aa>
10004d90:	4630      	mov	r0, r6
10004d92:	2d00      	cmp	r5, #0
10004d94:	d0e3      	beq.n	10004d5e <__udivmoddi4+0x9a>
10004d96:	e9c5 4700 	strd	r4, r7, [r5]
10004d9a:	e7e0      	b.n	10004d5e <__udivmoddi4+0x9a>
10004d9c:	b902      	cbnz	r2, 10004da0 <__udivmoddi4+0xdc>
10004d9e:	deff      	udf	#255	; 0xff
10004da0:	fab2 f382 	clz	r3, r2
10004da4:	2b00      	cmp	r3, #0
10004da6:	f040 809d 	bne.w	10004ee4 <__udivmoddi4+0x220>
10004daa:	1a89      	subs	r1, r1, r2
10004dac:	ea4f 4e12 	mov.w	lr, r2, lsr #16
10004db0:	b297      	uxth	r7, r2
10004db2:	2601      	movs	r6, #1
10004db4:	0c20      	lsrs	r0, r4, #16
10004db6:	fbb1 f2fe 	udiv	r2, r1, lr
10004dba:	fb0e 1112 	mls	r1, lr, r2, r1
10004dbe:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
10004dc2:	fb07 f002 	mul.w	r0, r7, r2
10004dc6:	4288      	cmp	r0, r1
10004dc8:	d90f      	bls.n	10004dea <__udivmoddi4+0x126>
10004dca:	eb1c 0101 	adds.w	r1, ip, r1
10004dce:	f102 38ff 	add.w	r8, r2, #4294967295
10004dd2:	bf2c      	ite	cs
10004dd4:	f04f 0901 	movcs.w	r9, #1
10004dd8:	f04f 0900 	movcc.w	r9, #0
10004ddc:	4288      	cmp	r0, r1
10004dde:	d903      	bls.n	10004de8 <__udivmoddi4+0x124>
10004de0:	f1b9 0f00 	cmp.w	r9, #0
10004de4:	f000 80cf 	beq.w	10004f86 <__udivmoddi4+0x2c2>
10004de8:	4642      	mov	r2, r8
10004dea:	1a09      	subs	r1, r1, r0
10004dec:	b2a4      	uxth	r4, r4
10004dee:	fbb1 f0fe 	udiv	r0, r1, lr
10004df2:	fb0e 1110 	mls	r1, lr, r0, r1
10004df6:	fb00 f707 	mul.w	r7, r0, r7
10004dfa:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
10004dfe:	42a7      	cmp	r7, r4
10004e00:	d908      	bls.n	10004e14 <__udivmoddi4+0x150>
10004e02:	eb1c 0404 	adds.w	r4, ip, r4
10004e06:	f100 31ff 	add.w	r1, r0, #4294967295
10004e0a:	d202      	bcs.n	10004e12 <__udivmoddi4+0x14e>
10004e0c:	42a7      	cmp	r7, r4
10004e0e:	f200 80b4 	bhi.w	10004f7a <__udivmoddi4+0x2b6>
10004e12:	4608      	mov	r0, r1
10004e14:	1be4      	subs	r4, r4, r7
10004e16:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
10004e1a:	e79b      	b.n	10004d54 <__udivmoddi4+0x90>
10004e1c:	f1c6 0720 	rsb	r7, r6, #32
10004e20:	40b3      	lsls	r3, r6
10004e22:	fa01 f406 	lsl.w	r4, r1, r6
10004e26:	fa22 fc07 	lsr.w	ip, r2, r7
10004e2a:	40f9      	lsrs	r1, r7
10004e2c:	40b2      	lsls	r2, r6
10004e2e:	ea4c 0c03 	orr.w	ip, ip, r3
10004e32:	fa20 f307 	lsr.w	r3, r0, r7
10004e36:	ea4f 491c 	mov.w	r9, ip, lsr #16
10004e3a:	431c      	orrs	r4, r3
10004e3c:	fa1f fe8c 	uxth.w	lr, ip
10004e40:	fa00 f306 	lsl.w	r3, r0, r6
10004e44:	0c20      	lsrs	r0, r4, #16
10004e46:	fbb1 f8f9 	udiv	r8, r1, r9
10004e4a:	fb09 1118 	mls	r1, r9, r8, r1
10004e4e:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
10004e52:	fb08 f00e 	mul.w	r0, r8, lr
10004e56:	4288      	cmp	r0, r1
10004e58:	d90f      	bls.n	10004e7a <__udivmoddi4+0x1b6>
10004e5a:	eb1c 0101 	adds.w	r1, ip, r1
10004e5e:	f108 3aff 	add.w	sl, r8, #4294967295
10004e62:	bf2c      	ite	cs
10004e64:	f04f 0b01 	movcs.w	fp, #1
10004e68:	f04f 0b00 	movcc.w	fp, #0
10004e6c:	4288      	cmp	r0, r1
10004e6e:	d903      	bls.n	10004e78 <__udivmoddi4+0x1b4>
10004e70:	f1bb 0f00 	cmp.w	fp, #0
10004e74:	f000 808d 	beq.w	10004f92 <__udivmoddi4+0x2ce>
10004e78:	46d0      	mov	r8, sl
10004e7a:	1a09      	subs	r1, r1, r0
10004e7c:	b2a4      	uxth	r4, r4
10004e7e:	fbb1 f0f9 	udiv	r0, r1, r9
10004e82:	fb09 1110 	mls	r1, r9, r0, r1
10004e86:	fb00 fe0e 	mul.w	lr, r0, lr
10004e8a:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
10004e8e:	458e      	cmp	lr, r1
10004e90:	d907      	bls.n	10004ea2 <__udivmoddi4+0x1de>
10004e92:	eb1c 0101 	adds.w	r1, ip, r1
10004e96:	f100 34ff 	add.w	r4, r0, #4294967295
10004e9a:	d201      	bcs.n	10004ea0 <__udivmoddi4+0x1dc>
10004e9c:	458e      	cmp	lr, r1
10004e9e:	d87f      	bhi.n	10004fa0 <__udivmoddi4+0x2dc>
10004ea0:	4620      	mov	r0, r4
10004ea2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
10004ea6:	eba1 010e 	sub.w	r1, r1, lr
10004eaa:	fba0 9802 	umull	r9, r8, r0, r2
10004eae:	4541      	cmp	r1, r8
10004eb0:	464c      	mov	r4, r9
10004eb2:	46c6      	mov	lr, r8
10004eb4:	d302      	bcc.n	10004ebc <__udivmoddi4+0x1f8>
10004eb6:	d106      	bne.n	10004ec6 <__udivmoddi4+0x202>
10004eb8:	454b      	cmp	r3, r9
10004eba:	d204      	bcs.n	10004ec6 <__udivmoddi4+0x202>
10004ebc:	3801      	subs	r0, #1
10004ebe:	ebb9 0402 	subs.w	r4, r9, r2
10004ec2:	eb68 0e0c 	sbc.w	lr, r8, ip
10004ec6:	2d00      	cmp	r5, #0
10004ec8:	d070      	beq.n	10004fac <__udivmoddi4+0x2e8>
10004eca:	1b1a      	subs	r2, r3, r4
10004ecc:	eb61 010e 	sbc.w	r1, r1, lr
10004ed0:	fa22 f306 	lsr.w	r3, r2, r6
10004ed4:	fa01 f707 	lsl.w	r7, r1, r7
10004ed8:	40f1      	lsrs	r1, r6
10004eda:	2600      	movs	r6, #0
10004edc:	431f      	orrs	r7, r3
10004ede:	e9c5 7100 	strd	r7, r1, [r5]
10004ee2:	e73c      	b.n	10004d5e <__udivmoddi4+0x9a>
10004ee4:	fa02 fc03 	lsl.w	ip, r2, r3
10004ee8:	f1c3 0020 	rsb	r0, r3, #32
10004eec:	fa01 f203 	lsl.w	r2, r1, r3
10004ef0:	fa21 f600 	lsr.w	r6, r1, r0
10004ef4:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
10004ef8:	fa24 f100 	lsr.w	r1, r4, r0
10004efc:	fa1f f78c 	uxth.w	r7, ip
10004f00:	409c      	lsls	r4, r3
10004f02:	4311      	orrs	r1, r2
10004f04:	fbb6 f0fe 	udiv	r0, r6, lr
10004f08:	0c0a      	lsrs	r2, r1, #16
10004f0a:	fb0e 6610 	mls	r6, lr, r0, r6
10004f0e:	ea42 4206 	orr.w	r2, r2, r6, lsl #16
10004f12:	fb00 f607 	mul.w	r6, r0, r7
10004f16:	4296      	cmp	r6, r2
10004f18:	d90e      	bls.n	10004f38 <__udivmoddi4+0x274>
10004f1a:	eb1c 0202 	adds.w	r2, ip, r2
10004f1e:	f100 38ff 	add.w	r8, r0, #4294967295
10004f22:	bf2c      	ite	cs
10004f24:	f04f 0901 	movcs.w	r9, #1
10004f28:	f04f 0900 	movcc.w	r9, #0
10004f2c:	4296      	cmp	r6, r2
10004f2e:	d902      	bls.n	10004f36 <__udivmoddi4+0x272>
10004f30:	f1b9 0f00 	cmp.w	r9, #0
10004f34:	d031      	beq.n	10004f9a <__udivmoddi4+0x2d6>
10004f36:	4640      	mov	r0, r8
10004f38:	1b92      	subs	r2, r2, r6
10004f3a:	b289      	uxth	r1, r1
10004f3c:	fbb2 f6fe 	udiv	r6, r2, lr
10004f40:	fb0e 2216 	mls	r2, lr, r6, r2
10004f44:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
10004f48:	fb06 f207 	mul.w	r2, r6, r7
10004f4c:	428a      	cmp	r2, r1
10004f4e:	d907      	bls.n	10004f60 <__udivmoddi4+0x29c>
10004f50:	eb1c 0101 	adds.w	r1, ip, r1
10004f54:	f106 38ff 	add.w	r8, r6, #4294967295
10004f58:	d201      	bcs.n	10004f5e <__udivmoddi4+0x29a>
10004f5a:	428a      	cmp	r2, r1
10004f5c:	d823      	bhi.n	10004fa6 <__udivmoddi4+0x2e2>
10004f5e:	4646      	mov	r6, r8
10004f60:	1a89      	subs	r1, r1, r2
10004f62:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
10004f66:	e725      	b.n	10004db4 <__udivmoddi4+0xf0>
10004f68:	462e      	mov	r6, r5
10004f6a:	4628      	mov	r0, r5
10004f6c:	e6f7      	b.n	10004d5e <__udivmoddi4+0x9a>
10004f6e:	1a84      	subs	r4, r0, r2
10004f70:	eb61 0303 	sbc.w	r3, r1, r3
10004f74:	2001      	movs	r0, #1
10004f76:	461f      	mov	r7, r3
10004f78:	e70b      	b.n	10004d92 <__udivmoddi4+0xce>
10004f7a:	4464      	add	r4, ip
10004f7c:	3802      	subs	r0, #2
10004f7e:	e749      	b.n	10004e14 <__udivmoddi4+0x150>
10004f80:	4464      	add	r4, ip
10004f82:	3802      	subs	r0, #2
10004f84:	e6e1      	b.n	10004d4a <__udivmoddi4+0x86>
10004f86:	3a02      	subs	r2, #2
10004f88:	4461      	add	r1, ip
10004f8a:	e72e      	b.n	10004dea <__udivmoddi4+0x126>
10004f8c:	3e02      	subs	r6, #2
10004f8e:	4462      	add	r2, ip
10004f90:	e6c6      	b.n	10004d20 <__udivmoddi4+0x5c>
10004f92:	f1a8 0802 	sub.w	r8, r8, #2
10004f96:	4461      	add	r1, ip
10004f98:	e76f      	b.n	10004e7a <__udivmoddi4+0x1b6>
10004f9a:	3802      	subs	r0, #2
10004f9c:	4462      	add	r2, ip
10004f9e:	e7cb      	b.n	10004f38 <__udivmoddi4+0x274>
10004fa0:	3802      	subs	r0, #2
10004fa2:	4461      	add	r1, ip
10004fa4:	e77d      	b.n	10004ea2 <__udivmoddi4+0x1de>
10004fa6:	3e02      	subs	r6, #2
10004fa8:	4461      	add	r1, ip
10004faa:	e7d9      	b.n	10004f60 <__udivmoddi4+0x29c>
10004fac:	462e      	mov	r6, r5
10004fae:	e6d6      	b.n	10004d5e <__udivmoddi4+0x9a>

10004fb0 <selfrel_offset31>:
10004fb0:	6803      	ldr	r3, [r0, #0]
10004fb2:	005a      	lsls	r2, r3, #1
10004fb4:	bf4c      	ite	mi
10004fb6:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
10004fba:	f023 4300 	bicpl.w	r3, r3, #2147483648	; 0x80000000
10004fbe:	4418      	add	r0, r3
10004fc0:	4770      	bx	lr
10004fc2:	bf00      	nop

10004fc4 <search_EIT_table>:
10004fc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10004fc8:	b339      	cbz	r1, 1000501a <search_EIT_table+0x56>
10004fca:	f101 38ff 	add.w	r8, r1, #4294967295
10004fce:	4606      	mov	r6, r0
10004fd0:	4617      	mov	r7, r2
10004fd2:	f04f 0900 	mov.w	r9, #0
10004fd6:	4645      	mov	r5, r8
10004fd8:	eb19 0105 	adds.w	r1, r9, r5
10004fdc:	bf48      	it	mi
10004fde:	3101      	addmi	r1, #1
10004fe0:	1049      	asrs	r1, r1, #1
10004fe2:	eb06 0ac1 	add.w	sl, r6, r1, lsl #3
10004fe6:	00cc      	lsls	r4, r1, #3
10004fe8:	4650      	mov	r0, sl
10004fea:	f7ff ffe1 	bl	10004fb0 <selfrel_offset31>
10004fee:	3408      	adds	r4, #8
10004ff0:	4588      	cmp	r8, r1
10004ff2:	4603      	mov	r3, r0
10004ff4:	eb06 0004 	add.w	r0, r6, r4
10004ff8:	d009      	beq.n	1000500e <search_EIT_table+0x4a>
10004ffa:	42bb      	cmp	r3, r7
10004ffc:	d809      	bhi.n	10005012 <search_EIT_table+0x4e>
10004ffe:	f7ff ffd7 	bl	10004fb0 <selfrel_offset31>
10005002:	3801      	subs	r0, #1
10005004:	f101 0901 	add.w	r9, r1, #1
10005008:	42b8      	cmp	r0, r7
1000500a:	d3e5      	bcc.n	10004fd8 <search_EIT_table+0x14>
1000500c:	e007      	b.n	1000501e <search_EIT_table+0x5a>
1000500e:	42bb      	cmp	r3, r7
10005010:	d905      	bls.n	1000501e <search_EIT_table+0x5a>
10005012:	4589      	cmp	r9, r1
10005014:	f101 35ff 	add.w	r5, r1, #4294967295
10005018:	d1de      	bne.n	10004fd8 <search_EIT_table+0x14>
1000501a:	f04f 0a00 	mov.w	sl, #0
1000501e:	4650      	mov	r0, sl
10005020:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

10005024 <__gnu_unwind_get_pr_addr>:
10005024:	2801      	cmp	r0, #1
10005026:	d007      	beq.n	10005038 <__gnu_unwind_get_pr_addr+0x14>
10005028:	2802      	cmp	r0, #2
1000502a:	d007      	beq.n	1000503c <__gnu_unwind_get_pr_addr+0x18>
1000502c:	2800      	cmp	r0, #0
1000502e:	4b04      	ldr	r3, [pc, #16]	; (10005040 <__gnu_unwind_get_pr_addr+0x1c>)
10005030:	bf14      	ite	ne
10005032:	2000      	movne	r0, #0
10005034:	4618      	moveq	r0, r3
10005036:	4770      	bx	lr
10005038:	4802      	ldr	r0, [pc, #8]	; (10005044 <__gnu_unwind_get_pr_addr+0x20>)
1000503a:	4770      	bx	lr
1000503c:	4802      	ldr	r0, [pc, #8]	; (10005048 <__gnu_unwind_get_pr_addr+0x24>)
1000503e:	4770      	bx	lr
10005040:	10005735 	andne	r5, r0, r5, lsr r7
10005044:	10005739 	andne	r5, r0, r9, lsr r7
10005048:	1000573d 	andne	r5, r0, sp, lsr r7

1000504c <get_eit_entry>:
1000504c:	4b23      	ldr	r3, [pc, #140]	; (100050dc <get_eit_entry+0x90>)
1000504e:	b530      	push	{r4, r5, lr}
10005050:	4604      	mov	r4, r0
10005052:	b083      	sub	sp, #12
10005054:	1e8d      	subs	r5, r1, #2
10005056:	b343      	cbz	r3, 100050aa <get_eit_entry+0x5e>
10005058:	a901      	add	r1, sp, #4
1000505a:	4628      	mov	r0, r5
1000505c:	e000      	b.n	10005060 <get_eit_entry+0x14>
1000505e:	bf00      	nop
10005060:	b1f0      	cbz	r0, 100050a0 <get_eit_entry+0x54>
10005062:	9901      	ldr	r1, [sp, #4]
10005064:	462a      	mov	r2, r5
10005066:	f7ff ffad 	bl	10004fc4 <search_EIT_table>
1000506a:	4601      	mov	r1, r0
1000506c:	b1c0      	cbz	r0, 100050a0 <get_eit_entry+0x54>
1000506e:	f7ff ff9f 	bl	10004fb0 <selfrel_offset31>
10005072:	684b      	ldr	r3, [r1, #4]
10005074:	64a0      	str	r0, [r4, #72]	; 0x48
10005076:	2b01      	cmp	r3, #1
10005078:	d02c      	beq.n	100050d4 <get_eit_entry+0x88>
1000507a:	2b00      	cmp	r3, #0
1000507c:	f101 0004 	add.w	r0, r1, #4
10005080:	db24      	blt.n	100050cc <get_eit_entry+0x80>
10005082:	f7ff ff95 	bl	10004fb0 <selfrel_offset31>
10005086:	2300      	movs	r3, #0
10005088:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
1000508c:	6803      	ldr	r3, [r0, #0]
1000508e:	2b00      	cmp	r3, #0
10005090:	db11      	blt.n	100050b6 <get_eit_entry+0x6a>
10005092:	f7ff ff8d 	bl	10004fb0 <selfrel_offset31>
10005096:	4603      	mov	r3, r0
10005098:	2000      	movs	r0, #0
1000509a:	6123      	str	r3, [r4, #16]
1000509c:	b003      	add	sp, #12
1000509e:	bd30      	pop	{r4, r5, pc}
100050a0:	2300      	movs	r3, #0
100050a2:	2009      	movs	r0, #9
100050a4:	6123      	str	r3, [r4, #16]
100050a6:	b003      	add	sp, #12
100050a8:	bd30      	pop	{r4, r5, pc}
100050aa:	480d      	ldr	r0, [pc, #52]	; (100050e0 <get_eit_entry+0x94>)
100050ac:	490d      	ldr	r1, [pc, #52]	; (100050e4 <get_eit_entry+0x98>)
100050ae:	1a09      	subs	r1, r1, r0
100050b0:	10c9      	asrs	r1, r1, #3
100050b2:	9101      	str	r1, [sp, #4]
100050b4:	e7d6      	b.n	10005064 <get_eit_entry+0x18>
100050b6:	f3c3 6003 	ubfx	r0, r3, #24, #4
100050ba:	f7ff ffb3 	bl	10005024 <__gnu_unwind_get_pr_addr>
100050be:	2800      	cmp	r0, #0
100050c0:	6120      	str	r0, [r4, #16]
100050c2:	bf14      	ite	ne
100050c4:	2000      	movne	r0, #0
100050c6:	2009      	moveq	r0, #9
100050c8:	b003      	add	sp, #12
100050ca:	bd30      	pop	{r4, r5, pc}
100050cc:	2301      	movs	r3, #1
100050ce:	e9c4 0313 	strd	r0, r3, [r4, #76]	; 0x4c
100050d2:	e7db      	b.n	1000508c <get_eit_entry+0x40>
100050d4:	2300      	movs	r3, #0
100050d6:	2005      	movs	r0, #5
100050d8:	6123      	str	r3, [r4, #16]
100050da:	e7df      	b.n	1000509c <get_eit_entry+0x50>
100050dc:	00000000 	andeq	r0, r0, r0
100050e0:	10006174 	andne	r6, r0, r4, ror r1
100050e4:	10006234 	andne	r6, r0, r4, lsr r2

100050e8 <restore_non_core_regs>:
100050e8:	6803      	ldr	r3, [r0, #0]
100050ea:	07da      	lsls	r2, r3, #31
100050ec:	b510      	push	{r4, lr}
100050ee:	4604      	mov	r4, r0
100050f0:	d406      	bmi.n	10005100 <restore_non_core_regs+0x18>
100050f2:	079b      	lsls	r3, r3, #30
100050f4:	f100 0048 	add.w	r0, r0, #72	; 0x48
100050f8:	d509      	bpl.n	1000510e <restore_non_core_regs+0x26>
100050fa:	f000 fc8f 	bl	10005a1c <__gnu_Unwind_Restore_VFP_D>
100050fe:	6823      	ldr	r3, [r4, #0]
10005100:	0759      	lsls	r1, r3, #29
10005102:	d509      	bpl.n	10005118 <restore_non_core_regs+0x30>
10005104:	071a      	lsls	r2, r3, #28
10005106:	d50e      	bpl.n	10005126 <restore_non_core_regs+0x3e>
10005108:	06db      	lsls	r3, r3, #27
1000510a:	d513      	bpl.n	10005134 <restore_non_core_regs+0x4c>
1000510c:	bd10      	pop	{r4, pc}
1000510e:	f000 fc7d 	bl	10005a0c <__gnu_Unwind_Restore_VFP>
10005112:	6823      	ldr	r3, [r4, #0]
10005114:	0759      	lsls	r1, r3, #29
10005116:	d4f5      	bmi.n	10005104 <restore_non_core_regs+0x1c>
10005118:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
1000511c:	f000 fc86 	bl	10005a2c <__gnu_Unwind_Restore_VFP_D_16_to_31>
10005120:	6823      	ldr	r3, [r4, #0]
10005122:	071a      	lsls	r2, r3, #28
10005124:	d4f0      	bmi.n	10005108 <restore_non_core_regs+0x20>
10005126:	f504 70a8 	add.w	r0, r4, #336	; 0x150
1000512a:	f000 fc87 	bl	10005a3c <__gnu_Unwind_Restore_WMMXD>
1000512e:	6823      	ldr	r3, [r4, #0]
10005130:	06db      	lsls	r3, r3, #27
10005132:	d4eb      	bmi.n	1000510c <restore_non_core_regs+0x24>
10005134:	f504 70e8 	add.w	r0, r4, #464	; 0x1d0
10005138:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
1000513c:	f000 bcc2 	b.w	10005ac4 <__gnu_Unwind_Restore_WMMXC>

10005140 <__gnu_unwind_24bit.constprop.0>:
10005140:	2009      	movs	r0, #9
10005142:	4770      	bx	lr

10005144 <_Unwind_decode_typeinfo_ptr.constprop.0>:
10005144:	4603      	mov	r3, r0
10005146:	6800      	ldr	r0, [r0, #0]
10005148:	b100      	cbz	r0, 1000514c <_Unwind_decode_typeinfo_ptr.constprop.0+0x8>
1000514a:	4418      	add	r0, r3
1000514c:	4770      	bx	lr
1000514e:	bf00      	nop

10005150 <_Unwind_DebugHook>:
10005150:	4770      	bx	lr
10005152:	bf00      	nop

10005154 <unwind_phase2>:
10005154:	b570      	push	{r4, r5, r6, lr}
10005156:	4604      	mov	r4, r0
10005158:	460e      	mov	r6, r1
1000515a:	6c31      	ldr	r1, [r6, #64]	; 0x40
1000515c:	4620      	mov	r0, r4
1000515e:	f7ff ff75 	bl	1000504c <get_eit_entry>
10005162:	4605      	mov	r5, r0
10005164:	b998      	cbnz	r0, 1000518e <unwind_phase2+0x3a>
10005166:	f8d6 c040 	ldr.w	ip, [r6, #64]	; 0x40
1000516a:	4632      	mov	r2, r6
1000516c:	6923      	ldr	r3, [r4, #16]
1000516e:	4621      	mov	r1, r4
10005170:	2001      	movs	r0, #1
10005172:	f8c4 c014 	str.w	ip, [r4, #20]
10005176:	4798      	blx	r3
10005178:	2808      	cmp	r0, #8
1000517a:	d0ee      	beq.n	1000515a <unwind_phase2+0x6>
1000517c:	2807      	cmp	r0, #7
1000517e:	d106      	bne.n	1000518e <unwind_phase2+0x3a>
10005180:	4628      	mov	r0, r5
10005182:	6c31      	ldr	r1, [r6, #64]	; 0x40
10005184:	f7ff ffe4 	bl	10005150 <_Unwind_DebugHook>
10005188:	1d30      	adds	r0, r6, #4
1000518a:	f000 fc33 	bl	100059f4 <__restore_core_regs>
1000518e:	f7fe fef3 	bl	10003f78 <abort>
10005192:	bf00      	nop

10005194 <unwind_phase2_forced>:
10005194:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
10005198:	f101 0c04 	add.w	ip, r1, #4
1000519c:	f5ad 7d74 	sub.w	sp, sp, #976	; 0x3d0
100051a0:	68c7      	ldr	r7, [r0, #12]
100051a2:	4606      	mov	r6, r0
100051a4:	f8d0 8018 	ldr.w	r8, [r0, #24]
100051a8:	4614      	mov	r4, r2
100051aa:	f10d 0e14 	add.w	lr, sp, #20
100051ae:	ad04      	add	r5, sp, #16
100051b0:	f04f 0900 	mov.w	r9, #0
100051b4:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
100051b8:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
100051bc:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
100051c0:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
100051c4:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
100051c8:	e8ae 000f 	stmia.w	lr!, {r0, r1, r2, r3}
100051cc:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
100051d0:	e88e 000f 	stmia.w	lr, {r0, r1, r2, r3}
100051d4:	f8c5 9000 	str.w	r9, [r5]
100051d8:	e023      	b.n	10005222 <unwind_phase2_forced+0x8e>
100051da:	6c2b      	ldr	r3, [r5, #64]	; 0x40
100051dc:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
100051e0:	4629      	mov	r1, r5
100051e2:	a87c      	add	r0, sp, #496	; 0x1f0
100051e4:	6173      	str	r3, [r6, #20]
100051e6:	f7ff f825 	bl	10004234 <memcpy>
100051ea:	aa7c      	add	r2, sp, #496	; 0x1f0
100051ec:	4631      	mov	r1, r6
100051ee:	6933      	ldr	r3, [r6, #16]
100051f0:	4650      	mov	r0, sl
100051f2:	4798      	blx	r3
100051f4:	9b8a      	ldr	r3, [sp, #552]	; 0x228
100051f6:	4621      	mov	r1, r4
100051f8:	4681      	mov	r9, r0
100051fa:	9303      	str	r3, [sp, #12]
100051fc:	4632      	mov	r2, r6
100051fe:	9c03      	ldr	r4, [sp, #12]
10005200:	4633      	mov	r3, r6
10005202:	2001      	movs	r0, #1
10005204:	646c      	str	r4, [r5, #68]	; 0x44
10005206:	e9cd 5800 	strd	r5, r8, [sp]
1000520a:	47b8      	blx	r7
1000520c:	4604      	mov	r4, r0
1000520e:	b9e8      	cbnz	r0, 1000524c <unwind_phase2_forced+0xb8>
10005210:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
10005214:	a97c      	add	r1, sp, #496	; 0x1f0
10005216:	4628      	mov	r0, r5
10005218:	f7ff f80c 	bl	10004234 <memcpy>
1000521c:	f1b9 0f08 	cmp.w	r9, #8
10005220:	d11b      	bne.n	1000525a <unwind_phase2_forced+0xc6>
10005222:	3409      	adds	r4, #9
10005224:	6c29      	ldr	r1, [r5, #64]	; 0x40
10005226:	4630      	mov	r0, r6
10005228:	f7ff ff10 	bl	1000504c <get_eit_entry>
1000522c:	4681      	mov	r9, r0
1000522e:	fa5f fa84 	uxtb.w	sl, r4
10005232:	2800      	cmp	r0, #0
10005234:	d0d1      	beq.n	100051da <unwind_phase2_forced+0x46>
10005236:	6bac      	ldr	r4, [r5, #56]	; 0x38
10005238:	4633      	mov	r3, r6
1000523a:	4632      	mov	r2, r6
1000523c:	f04a 0110 	orr.w	r1, sl, #16
10005240:	646c      	str	r4, [r5, #68]	; 0x44
10005242:	2001      	movs	r0, #1
10005244:	e9cd 5800 	strd	r5, r8, [sp]
10005248:	47b8      	blx	r7
1000524a:	b108      	cbz	r0, 10005250 <unwind_phase2_forced+0xbc>
1000524c:	f04f 0909 	mov.w	r9, #9
10005250:	4648      	mov	r0, r9
10005252:	f50d 7d74 	add.w	sp, sp, #976	; 0x3d0
10005256:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
1000525a:	f1b9 0f07 	cmp.w	r9, #7
1000525e:	d1f5      	bne.n	1000524c <unwind_phase2_forced+0xb8>
10005260:	4620      	mov	r0, r4
10005262:	6c29      	ldr	r1, [r5, #64]	; 0x40
10005264:	f7ff ff74 	bl	10005150 <_Unwind_DebugHook>
10005268:	a805      	add	r0, sp, #20
1000526a:	f000 fbc3 	bl	100059f4 <__restore_core_regs>
1000526e:	bf00      	nop

10005270 <_Unwind_GetCFA>:
10005270:	6c40      	ldr	r0, [r0, #68]	; 0x44
10005272:	4770      	bx	lr

10005274 <__gnu_Unwind_RaiseException>:
10005274:	b5f0      	push	{r4, r5, r6, r7, lr}
10005276:	6bcb      	ldr	r3, [r1, #60]	; 0x3c
10005278:	b0f9      	sub	sp, #484	; 0x1e4
1000527a:	f101 0c04 	add.w	ip, r1, #4
1000527e:	460e      	mov	r6, r1
10005280:	640b      	str	r3, [r1, #64]	; 0x40
10005282:	ac01      	add	r4, sp, #4
10005284:	4605      	mov	r5, r0
10005286:	f04f 37ff 	mov.w	r7, #4294967295
1000528a:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
1000528e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10005290:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
10005294:	c40f      	stmia	r4!, {r0, r1, r2, r3}
10005296:	e8bc 000f 	ldmia.w	ip!, {r0, r1, r2, r3}
1000529a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
1000529c:	e89c 000f 	ldmia.w	ip, {r0, r1, r2, r3}
100052a0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
100052a4:	9700      	str	r7, [sp, #0]
100052a6:	e006      	b.n	100052b6 <__gnu_Unwind_RaiseException+0x42>
100052a8:	692b      	ldr	r3, [r5, #16]
100052aa:	466a      	mov	r2, sp
100052ac:	4629      	mov	r1, r5
100052ae:	4798      	blx	r3
100052b0:	2808      	cmp	r0, #8
100052b2:	4604      	mov	r4, r0
100052b4:	d108      	bne.n	100052c8 <__gnu_Unwind_RaiseException+0x54>
100052b6:	9910      	ldr	r1, [sp, #64]	; 0x40
100052b8:	4628      	mov	r0, r5
100052ba:	f7ff fec7 	bl	1000504c <get_eit_entry>
100052be:	2800      	cmp	r0, #0
100052c0:	d0f2      	beq.n	100052a8 <__gnu_Unwind_RaiseException+0x34>
100052c2:	2009      	movs	r0, #9
100052c4:	b079      	add	sp, #484	; 0x1e4
100052c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
100052c8:	4668      	mov	r0, sp
100052ca:	f7ff ff0d 	bl	100050e8 <restore_non_core_regs>
100052ce:	2c06      	cmp	r4, #6
100052d0:	d1f7      	bne.n	100052c2 <__gnu_Unwind_RaiseException+0x4e>
100052d2:	4631      	mov	r1, r6
100052d4:	4628      	mov	r0, r5
100052d6:	f7ff ff3d 	bl	10005154 <unwind_phase2>
100052da:	bf00      	nop

100052dc <__gnu_Unwind_ForcedUnwind>:
100052dc:	b410      	push	{r4}
100052de:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
100052e0:	60c1      	str	r1, [r0, #12]
100052e2:	4619      	mov	r1, r3
100052e4:	6182      	str	r2, [r0, #24]
100052e6:	2200      	movs	r2, #0
100052e8:	641c      	str	r4, [r3, #64]	; 0x40
100052ea:	bc10      	pop	{r4}
100052ec:	e752      	b.n	10005194 <unwind_phase2_forced>
100052ee:	bf00      	nop

100052f0 <__gnu_Unwind_Resume>:
100052f0:	b570      	push	{r4, r5, r6, lr}
100052f2:	6943      	ldr	r3, [r0, #20]
100052f4:	68c6      	ldr	r6, [r0, #12]
100052f6:	640b      	str	r3, [r1, #64]	; 0x40
100052f8:	b9ae      	cbnz	r6, 10005326 <__gnu_Unwind_Resume+0x36>
100052fa:	6903      	ldr	r3, [r0, #16]
100052fc:	460a      	mov	r2, r1
100052fe:	4604      	mov	r4, r0
10005300:	460d      	mov	r5, r1
10005302:	4601      	mov	r1, r0
10005304:	2002      	movs	r0, #2
10005306:	4798      	blx	r3
10005308:	2807      	cmp	r0, #7
1000530a:	d005      	beq.n	10005318 <__gnu_Unwind_Resume+0x28>
1000530c:	2808      	cmp	r0, #8
1000530e:	d10f      	bne.n	10005330 <__gnu_Unwind_Resume+0x40>
10005310:	4629      	mov	r1, r5
10005312:	4620      	mov	r0, r4
10005314:	f7ff ff1e 	bl	10005154 <unwind_phase2>
10005318:	4630      	mov	r0, r6
1000531a:	6c29      	ldr	r1, [r5, #64]	; 0x40
1000531c:	f7ff ff18 	bl	10005150 <_Unwind_DebugHook>
10005320:	1d28      	adds	r0, r5, #4
10005322:	f000 fb67 	bl	100059f4 <__restore_core_regs>
10005326:	2201      	movs	r2, #1
10005328:	f7ff ff34 	bl	10005194 <unwind_phase2_forced>
1000532c:	f7fe fe24 	bl	10003f78 <abort>
10005330:	f7fe fe22 	bl	10003f78 <abort>

10005334 <__gnu_Unwind_Resume_or_Rethrow>:
10005334:	68c2      	ldr	r2, [r0, #12]
10005336:	b12a      	cbz	r2, 10005344 <__gnu_Unwind_Resume_or_Rethrow+0x10>
10005338:	f8d1 c03c 	ldr.w	ip, [r1, #60]	; 0x3c
1000533c:	2200      	movs	r2, #0
1000533e:	f8c1 c040 	str.w	ip, [r1, #64]	; 0x40
10005342:	e727      	b.n	10005194 <unwind_phase2_forced>
10005344:	e796      	b.n	10005274 <__gnu_Unwind_RaiseException>
10005346:	bf00      	nop

10005348 <_Unwind_Complete>:
10005348:	4770      	bx	lr
1000534a:	bf00      	nop

1000534c <_Unwind_DeleteException>:
1000534c:	6883      	ldr	r3, [r0, #8]
1000534e:	4601      	mov	r1, r0
10005350:	b10b      	cbz	r3, 10005356 <_Unwind_DeleteException+0xa>
10005352:	2001      	movs	r0, #1
10005354:	4718      	bx	r3
10005356:	4770      	bx	lr

10005358 <_Unwind_VRS_Get>:
10005358:	2901      	cmp	r1, #1
1000535a:	d015      	beq.n	10005388 <_Unwind_VRS_Get+0x30>
1000535c:	d80c      	bhi.n	10005378 <_Unwind_VRS_Get+0x20>
1000535e:	b98b      	cbnz	r3, 10005384 <_Unwind_VRS_Get+0x2c>
10005360:	2a0f      	cmp	r2, #15
10005362:	bf94      	ite	ls
10005364:	2100      	movls	r1, #0
10005366:	2101      	movhi	r1, #1
10005368:	b961      	cbnz	r1, 10005384 <_Unwind_VRS_Get+0x2c>
1000536a:	eb00 0282 	add.w	r2, r0, r2, lsl #2
1000536e:	4608      	mov	r0, r1
10005370:	6853      	ldr	r3, [r2, #4]
10005372:	9a00      	ldr	r2, [sp, #0]
10005374:	6013      	str	r3, [r2, #0]
10005376:	4770      	bx	lr
10005378:	3903      	subs	r1, #3
1000537a:	2901      	cmp	r1, #1
1000537c:	bf94      	ite	ls
1000537e:	2001      	movls	r0, #1
10005380:	2002      	movhi	r0, #2
10005382:	4770      	bx	lr
10005384:	2002      	movs	r0, #2
10005386:	4770      	bx	lr
10005388:	4608      	mov	r0, r1
1000538a:	4770      	bx	lr

1000538c <_Unwind_GetGR>:
1000538c:	b510      	push	{r4, lr}
1000538e:	b084      	sub	sp, #16
10005390:	2300      	movs	r3, #0
10005392:	460a      	mov	r2, r1
10005394:	ac03      	add	r4, sp, #12
10005396:	4619      	mov	r1, r3
10005398:	9400      	str	r4, [sp, #0]
1000539a:	f7ff ffdd 	bl	10005358 <_Unwind_VRS_Get>
1000539e:	9803      	ldr	r0, [sp, #12]
100053a0:	b004      	add	sp, #16
100053a2:	bd10      	pop	{r4, pc}

100053a4 <_Unwind_VRS_Set>:
100053a4:	2901      	cmp	r1, #1
100053a6:	d015      	beq.n	100053d4 <_Unwind_VRS_Set+0x30>
100053a8:	d80c      	bhi.n	100053c4 <_Unwind_VRS_Set+0x20>
100053aa:	b98b      	cbnz	r3, 100053d0 <_Unwind_VRS_Set+0x2c>
100053ac:	2a0f      	cmp	r2, #15
100053ae:	bf94      	ite	ls
100053b0:	2100      	movls	r1, #0
100053b2:	2101      	movhi	r1, #1
100053b4:	b961      	cbnz	r1, 100053d0 <_Unwind_VRS_Set+0x2c>
100053b6:	9b00      	ldr	r3, [sp, #0]
100053b8:	eb00 0282 	add.w	r2, r0, r2, lsl #2
100053bc:	4608      	mov	r0, r1
100053be:	681b      	ldr	r3, [r3, #0]
100053c0:	6053      	str	r3, [r2, #4]
100053c2:	4770      	bx	lr
100053c4:	3903      	subs	r1, #3
100053c6:	2901      	cmp	r1, #1
100053c8:	bf94      	ite	ls
100053ca:	2001      	movls	r0, #1
100053cc:	2002      	movhi	r0, #2
100053ce:	4770      	bx	lr
100053d0:	2002      	movs	r0, #2
100053d2:	4770      	bx	lr
100053d4:	4608      	mov	r0, r1
100053d6:	4770      	bx	lr

100053d8 <_Unwind_SetGR>:
100053d8:	b510      	push	{r4, lr}
100053da:	b084      	sub	sp, #16
100053dc:	2300      	movs	r3, #0
100053de:	ac03      	add	r4, sp, #12
100053e0:	9203      	str	r2, [sp, #12]
100053e2:	460a      	mov	r2, r1
100053e4:	4619      	mov	r1, r3
100053e6:	9400      	str	r4, [sp, #0]
100053e8:	f7ff ffdc 	bl	100053a4 <_Unwind_VRS_Set>
100053ec:	b004      	add	sp, #16
100053ee:	bd10      	pop	{r4, pc}

100053f0 <__gnu_Unwind_Backtrace>:
100053f0:	b5f0      	push	{r4, r5, r6, r7, lr}
100053f2:	6bd3      	ldr	r3, [r2, #60]	; 0x3c
100053f4:	f5ad 7d0f 	sub.w	sp, sp, #572	; 0x23c
100053f8:	1d14      	adds	r4, r2, #4
100053fa:	4606      	mov	r6, r0
100053fc:	6413      	str	r3, [r2, #64]	; 0x40
100053fe:	f10d 0c5c 	add.w	ip, sp, #92	; 0x5c
10005402:	460d      	mov	r5, r1
10005404:	f04f 37ff 	mov.w	r7, #4294967295
10005408:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
1000540a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
1000540e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10005410:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
10005414:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
10005416:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
1000541a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
1000541e:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
10005422:	9716      	str	r7, [sp, #88]	; 0x58
10005424:	e010      	b.n	10005448 <__gnu_Unwind_Backtrace+0x58>
10005426:	f7ff ffd7 	bl	100053d8 <_Unwind_SetGR>
1000542a:	4629      	mov	r1, r5
1000542c:	a816      	add	r0, sp, #88	; 0x58
1000542e:	47b0      	blx	r6
10005430:	4603      	mov	r3, r0
10005432:	aa16      	add	r2, sp, #88	; 0x58
10005434:	4669      	mov	r1, sp
10005436:	2008      	movs	r0, #8
10005438:	b983      	cbnz	r3, 1000545c <__gnu_Unwind_Backtrace+0x6c>
1000543a:	9b04      	ldr	r3, [sp, #16]
1000543c:	4798      	blx	r3
1000543e:	2805      	cmp	r0, #5
10005440:	4604      	mov	r4, r0
10005442:	d00c      	beq.n	1000545e <__gnu_Unwind_Backtrace+0x6e>
10005444:	2809      	cmp	r0, #9
10005446:	d00a      	beq.n	1000545e <__gnu_Unwind_Backtrace+0x6e>
10005448:	9926      	ldr	r1, [sp, #152]	; 0x98
1000544a:	4668      	mov	r0, sp
1000544c:	f7ff fdfe 	bl	1000504c <get_eit_entry>
10005450:	4603      	mov	r3, r0
10005452:	466a      	mov	r2, sp
10005454:	210c      	movs	r1, #12
10005456:	a816      	add	r0, sp, #88	; 0x58
10005458:	2b00      	cmp	r3, #0
1000545a:	d0e4      	beq.n	10005426 <__gnu_Unwind_Backtrace+0x36>
1000545c:	2409      	movs	r4, #9
1000545e:	a816      	add	r0, sp, #88	; 0x58
10005460:	f7ff fe42 	bl	100050e8 <restore_non_core_regs>
10005464:	4620      	mov	r0, r4
10005466:	f50d 7d0f 	add.w	sp, sp, #572	; 0x23c
1000546a:	bdf0      	pop	{r4, r5, r6, r7, pc}

1000546c <__gnu_unwind_pr_common>:
1000546c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
10005470:	6ccc      	ldr	r4, [r1, #76]	; 0x4c
10005472:	b089      	sub	sp, #36	; 0x24
10005474:	461e      	mov	r6, r3
10005476:	460d      	mov	r5, r1
10005478:	f854 3b04 	ldr.w	r3, [r4], #4
1000547c:	4617      	mov	r7, r2
1000547e:	f000 0803 	and.w	r8, r0, #3
10005482:	9406      	str	r4, [sp, #24]
10005484:	2e00      	cmp	r6, #0
10005486:	d07f      	beq.n	10005588 <__gnu_unwind_pr_common+0x11c>
10005488:	0c1a      	lsrs	r2, r3, #16
1000548a:	041b      	lsls	r3, r3, #16
1000548c:	f88d 201d 	strb.w	r2, [sp, #29]
10005490:	b2d2      	uxtb	r2, r2
10005492:	9305      	str	r3, [sp, #20]
10005494:	2302      	movs	r3, #2
10005496:	eb04 0482 	add.w	r4, r4, r2, lsl #2
1000549a:	f88d 301c 	strb.w	r3, [sp, #28]
1000549e:	f1b8 0f02 	cmp.w	r8, #2
100054a2:	6d2b      	ldr	r3, [r5, #80]	; 0x50
100054a4:	bf08      	it	eq
100054a6:	6bac      	ldreq	r4, [r5, #56]	; 0x38
100054a8:	f013 0301 	ands.w	r3, r3, #1
100054ac:	d008      	beq.n	100054c0 <__gnu_unwind_pr_common+0x54>
100054ae:	a905      	add	r1, sp, #20
100054b0:	4638      	mov	r0, r7
100054b2:	f000 fba1 	bl	10005bf8 <__gnu_unwind_execute>
100054b6:	bb90      	cbnz	r0, 1000551e <__gnu_unwind_pr_common+0xb2>
100054b8:	2008      	movs	r0, #8
100054ba:	b009      	add	sp, #36	; 0x24
100054bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
100054c0:	f8d4 a000 	ldr.w	sl, [r4]
100054c4:	f1ba 0f00 	cmp.w	sl, #0
100054c8:	d0f1      	beq.n	100054ae <__gnu_unwind_pr_common+0x42>
100054ca:	9301      	str	r3, [sp, #4]
100054cc:	f000 0308 	and.w	r3, r0, #8
100054d0:	9302      	str	r3, [sp, #8]
100054d2:	2e02      	cmp	r6, #2
100054d4:	d054      	beq.n	10005580 <__gnu_unwind_pr_common+0x114>
100054d6:	f8b4 a000 	ldrh.w	sl, [r4]
100054da:	3404      	adds	r4, #4
100054dc:	f834 9c02 	ldrh.w	r9, [r4, #-2]
100054e0:	6cab      	ldr	r3, [r5, #72]	; 0x48
100054e2:	f029 0b01 	bic.w	fp, r9, #1
100054e6:	210f      	movs	r1, #15
100054e8:	4638      	mov	r0, r7
100054ea:	449b      	add	fp, r3
100054ec:	f7ff ff4e 	bl	1000538c <_Unwind_GetGR>
100054f0:	4583      	cmp	fp, r0
100054f2:	d818      	bhi.n	10005526 <__gnu_unwind_pr_common+0xba>
100054f4:	f02a 0301 	bic.w	r3, sl, #1
100054f8:	449b      	add	fp, r3
100054fa:	4583      	cmp	fp, r0
100054fc:	d913      	bls.n	10005526 <__gnu_unwind_pr_common+0xba>
100054fe:	ea4f 0349 	mov.w	r3, r9, lsl #1
10005502:	f00a 0a01 	and.w	sl, sl, #1
10005506:	f003 0302 	and.w	r3, r3, #2
1000550a:	ea43 030a 	orr.w	r3, r3, sl
1000550e:	2b01      	cmp	r3, #1
10005510:	f000 80bf 	beq.w	10005692 <__gnu_unwind_pr_common+0x226>
10005514:	2b02      	cmp	r3, #2
10005516:	f000 8089 	beq.w	1000562c <__gnu_unwind_pr_common+0x1c0>
1000551a:	2b00      	cmp	r3, #0
1000551c:	d04d      	beq.n	100055ba <__gnu_unwind_pr_common+0x14e>
1000551e:	2009      	movs	r0, #9
10005520:	b009      	add	sp, #36	; 0x24
10005522:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
10005526:	ea4f 0349 	mov.w	r3, r9, lsl #1
1000552a:	f00a 0a01 	and.w	sl, sl, #1
1000552e:	f003 0302 	and.w	r3, r3, #2
10005532:	ea43 030a 	orr.w	r3, r3, sl
10005536:	2b01      	cmp	r3, #1
10005538:	d03a      	beq.n	100055b0 <__gnu_unwind_pr_common+0x144>
1000553a:	2b02      	cmp	r3, #2
1000553c:	d02a      	beq.n	10005594 <__gnu_unwind_pr_common+0x128>
1000553e:	2b00      	cmp	r3, #0
10005540:	d1ed      	bne.n	1000551e <__gnu_unwind_pr_common+0xb2>
10005542:	3404      	adds	r4, #4
10005544:	f8d4 a000 	ldr.w	sl, [r4]
10005548:	f1ba 0f00 	cmp.w	sl, #0
1000554c:	d1c1      	bne.n	100054d2 <__gnu_unwind_pr_common+0x66>
1000554e:	a905      	add	r1, sp, #20
10005550:	4638      	mov	r0, r7
10005552:	f000 fb51 	bl	10005bf8 <__gnu_unwind_execute>
10005556:	2800      	cmp	r0, #0
10005558:	d1e1      	bne.n	1000551e <__gnu_unwind_pr_common+0xb2>
1000555a:	9b01      	ldr	r3, [sp, #4]
1000555c:	2b00      	cmp	r3, #0
1000555e:	d0ab      	beq.n	100054b8 <__gnu_unwind_pr_common+0x4c>
10005560:	210f      	movs	r1, #15
10005562:	4638      	mov	r0, r7
10005564:	f7ff ff12 	bl	1000538c <_Unwind_GetGR>
10005568:	210e      	movs	r1, #14
1000556a:	4602      	mov	r2, r0
1000556c:	4638      	mov	r0, r7
1000556e:	f7ff ff33 	bl	100053d8 <_Unwind_SetGR>
10005572:	4638      	mov	r0, r7
10005574:	4a6e      	ldr	r2, [pc, #440]	; (10005730 <__gnu_unwind_pr_common+0x2c4>)
10005576:	210f      	movs	r1, #15
10005578:	f7ff ff2e 	bl	100053d8 <_Unwind_SetGR>
1000557c:	2007      	movs	r0, #7
1000557e:	e7cf      	b.n	10005520 <__gnu_unwind_pr_common+0xb4>
10005580:	f8d4 9004 	ldr.w	r9, [r4, #4]
10005584:	3408      	adds	r4, #8
10005586:	e7ab      	b.n	100054e0 <__gnu_unwind_pr_common+0x74>
10005588:	021b      	lsls	r3, r3, #8
1000558a:	9305      	str	r3, [sp, #20]
1000558c:	2303      	movs	r3, #3
1000558e:	f8ad 301c 	strh.w	r3, [sp, #28]
10005592:	e784      	b.n	1000549e <__gnu_unwind_pr_common+0x32>
10005594:	6823      	ldr	r3, [r4, #0]
10005596:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
1000559a:	f1b8 0f00 	cmp.w	r8, #0
1000559e:	d121      	bne.n	100055e4 <__gnu_unwind_pr_common+0x178>
100055a0:	2b00      	cmp	r3, #0
100055a2:	da00      	bge.n	100055a6 <__gnu_unwind_pr_common+0x13a>
100055a4:	3404      	adds	r4, #4
100055a6:	f10b 0b01 	add.w	fp, fp, #1
100055aa:	eb04 048b 	add.w	r4, r4, fp, lsl #2
100055ae:	e7c9      	b.n	10005544 <__gnu_unwind_pr_common+0xd8>
100055b0:	f1b8 0f00 	cmp.w	r8, #0
100055b4:	d120      	bne.n	100055f8 <__gnu_unwind_pr_common+0x18c>
100055b6:	3408      	adds	r4, #8
100055b8:	e7c4      	b.n	10005544 <__gnu_unwind_pr_common+0xd8>
100055ba:	f1b8 0f00 	cmp.w	r8, #0
100055be:	d0c0      	beq.n	10005542 <__gnu_unwind_pr_common+0xd6>
100055c0:	4620      	mov	r0, r4
100055c2:	3404      	adds	r4, #4
100055c4:	f7ff fcf4 	bl	10004fb0 <selfrel_offset31>
100055c8:	4606      	mov	r6, r0
100055ca:	63ac      	str	r4, [r5, #56]	; 0x38
100055cc:	4628      	mov	r0, r5
100055ce:	e000      	b.n	100055d2 <__gnu_unwind_pr_common+0x166>
100055d0:	bf00      	nop
100055d2:	2800      	cmp	r0, #0
100055d4:	d0a3      	beq.n	1000551e <__gnu_unwind_pr_common+0xb2>
100055d6:	4638      	mov	r0, r7
100055d8:	4632      	mov	r2, r6
100055da:	210f      	movs	r1, #15
100055dc:	f7ff fefc 	bl	100053d8 <_Unwind_SetGR>
100055e0:	2007      	movs	r0, #7
100055e2:	e79d      	b.n	10005520 <__gnu_unwind_pr_common+0xb4>
100055e4:	f8d5 9020 	ldr.w	r9, [r5, #32]
100055e8:	210d      	movs	r1, #13
100055ea:	4638      	mov	r0, r7
100055ec:	f7ff fece 	bl	1000538c <_Unwind_GetGR>
100055f0:	4581      	cmp	r9, r0
100055f2:	d079      	beq.n	100056e8 <__gnu_unwind_pr_common+0x27c>
100055f4:	6823      	ldr	r3, [r4, #0]
100055f6:	e7d3      	b.n	100055a0 <__gnu_unwind_pr_common+0x134>
100055f8:	f8d5 9020 	ldr.w	r9, [r5, #32]
100055fc:	210d      	movs	r1, #13
100055fe:	4638      	mov	r0, r7
10005600:	f7ff fec4 	bl	1000538c <_Unwind_GetGR>
10005604:	4581      	cmp	r9, r0
10005606:	d1d6      	bne.n	100055b6 <__gnu_unwind_pr_common+0x14a>
10005608:	6aab      	ldr	r3, [r5, #40]	; 0x28
1000560a:	429c      	cmp	r4, r3
1000560c:	d1d3      	bne.n	100055b6 <__gnu_unwind_pr_common+0x14a>
1000560e:	4620      	mov	r0, r4
10005610:	210f      	movs	r1, #15
10005612:	f7ff fccd 	bl	10004fb0 <selfrel_offset31>
10005616:	4602      	mov	r2, r0
10005618:	4638      	mov	r0, r7
1000561a:	f7ff fedd 	bl	100053d8 <_Unwind_SetGR>
1000561e:	4638      	mov	r0, r7
10005620:	462a      	mov	r2, r5
10005622:	2100      	movs	r1, #0
10005624:	f7ff fed8 	bl	100053d8 <_Unwind_SetGR>
10005628:	2007      	movs	r0, #7
1000562a:	e779      	b.n	10005520 <__gnu_unwind_pr_common+0xb4>
1000562c:	6823      	ldr	r3, [r4, #0]
1000562e:	f023 4b00 	bic.w	fp, r3, #2147483648	; 0x80000000
10005632:	f1b8 0f00 	cmp.w	r8, #0
10005636:	d1d5      	bne.n	100055e4 <__gnu_unwind_pr_common+0x178>
10005638:	9a02      	ldr	r2, [sp, #8]
1000563a:	b112      	cbz	r2, 10005642 <__gnu_unwind_pr_common+0x1d6>
1000563c:	f1bb 0f00 	cmp.w	fp, #0
10005640:	d1ae      	bne.n	100055a0 <__gnu_unwind_pr_common+0x134>
10005642:	f105 0358 	add.w	r3, r5, #88	; 0x58
10005646:	f8cd 800c 	str.w	r8, [sp, #12]
1000564a:	f104 0a04 	add.w	sl, r4, #4
1000564e:	46b0      	mov	r8, r6
10005650:	f04f 0900 	mov.w	r9, #0
10005654:	461e      	mov	r6, r3
10005656:	e00d      	b.n	10005674 <__gnu_unwind_pr_common+0x208>
10005658:	4650      	mov	r0, sl
1000565a:	9604      	str	r6, [sp, #16]
1000565c:	2200      	movs	r2, #0
1000565e:	f7ff fd71 	bl	10005144 <_Unwind_decode_typeinfo_ptr.constprop.0>
10005662:	ab04      	add	r3, sp, #16
10005664:	4601      	mov	r1, r0
10005666:	4628      	mov	r0, r5
10005668:	f10a 0a04 	add.w	sl, sl, #4
1000566c:	e000      	b.n	10005670 <__gnu_unwind_pr_common+0x204>
1000566e:	bf00      	nop
10005670:	2800      	cmp	r0, #0
10005672:	d14a      	bne.n	1000570a <__gnu_unwind_pr_common+0x29e>
10005674:	45d9      	cmp	r9, fp
10005676:	f109 0901 	add.w	r9, r9, #1
1000567a:	d1ed      	bne.n	10005658 <__gnu_unwind_pr_common+0x1ec>
1000567c:	210d      	movs	r1, #13
1000567e:	4638      	mov	r0, r7
10005680:	f7ff fe84 	bl	1000538c <_Unwind_GetGR>
10005684:	9b04      	ldr	r3, [sp, #16]
10005686:	4602      	mov	r2, r0
10005688:	2006      	movs	r0, #6
1000568a:	622a      	str	r2, [r5, #32]
1000568c:	e9c5 3409 	strd	r3, r4, [r5, #36]	; 0x24
10005690:	e746      	b.n	10005520 <__gnu_unwind_pr_common+0xb4>
10005692:	f1b8 0f00 	cmp.w	r8, #0
10005696:	d1af      	bne.n	100055f8 <__gnu_unwind_pr_common+0x18c>
10005698:	6863      	ldr	r3, [r4, #4]
1000569a:	6822      	ldr	r2, [r4, #0]
1000569c:	1c99      	adds	r1, r3, #2
1000569e:	ea4f 72d2 	mov.w	r2, r2, lsr #31
100056a2:	f43f af3c 	beq.w	1000551e <__gnu_unwind_pr_common+0xb2>
100056a6:	f105 0158 	add.w	r1, r5, #88	; 0x58
100056aa:	3301      	adds	r3, #1
100056ac:	9104      	str	r1, [sp, #16]
100056ae:	d031      	beq.n	10005714 <__gnu_unwind_pr_common+0x2a8>
100056b0:	1d20      	adds	r0, r4, #4
100056b2:	f7ff fd47 	bl	10005144 <_Unwind_decode_typeinfo_ptr.constprop.0>
100056b6:	ab04      	add	r3, sp, #16
100056b8:	4601      	mov	r1, r0
100056ba:	4628      	mov	r0, r5
100056bc:	e000      	b.n	100056c0 <__gnu_unwind_pr_common+0x254>
100056be:	bf00      	nop
100056c0:	2800      	cmp	r0, #0
100056c2:	f43f af78 	beq.w	100055b6 <__gnu_unwind_pr_common+0x14a>
100056c6:	4681      	mov	r9, r0
100056c8:	210d      	movs	r1, #13
100056ca:	4638      	mov	r0, r7
100056cc:	f7ff fe5e 	bl	1000538c <_Unwind_GetGR>
100056d0:	f1b9 0f02 	cmp.w	r9, #2
100056d4:	6228      	str	r0, [r5, #32]
100056d6:	d122      	bne.n	1000571e <__gnu_unwind_pr_common+0x2b2>
100056d8:	462b      	mov	r3, r5
100056da:	9a04      	ldr	r2, [sp, #16]
100056dc:	f843 2f2c 	str.w	r2, [r3, #44]!
100056e0:	626b      	str	r3, [r5, #36]	; 0x24
100056e2:	2006      	movs	r0, #6
100056e4:	62ac      	str	r4, [r5, #40]	; 0x28
100056e6:	e71b      	b.n	10005520 <__gnu_unwind_pr_common+0xb4>
100056e8:	6aab      	ldr	r3, [r5, #40]	; 0x28
100056ea:	429c      	cmp	r4, r3
100056ec:	d182      	bne.n	100055f4 <__gnu_unwind_pr_common+0x188>
100056ee:	2304      	movs	r3, #4
100056f0:	2200      	movs	r2, #0
100056f2:	f8c5 b028 	str.w	fp, [r5, #40]	; 0x28
100056f6:	e9c5 230b 	strd	r2, r3, [r5, #44]	; 0x2c
100056fa:	18e3      	adds	r3, r4, r3
100056fc:	636b      	str	r3, [r5, #52]	; 0x34
100056fe:	6823      	ldr	r3, [r4, #0]
10005700:	2b00      	cmp	r3, #0
10005702:	db0f      	blt.n	10005724 <__gnu_unwind_pr_common+0x2b8>
10005704:	2301      	movs	r3, #1
10005706:	9301      	str	r3, [sp, #4]
10005708:	e74d      	b.n	100055a6 <__gnu_unwind_pr_common+0x13a>
1000570a:	4646      	mov	r6, r8
1000570c:	6823      	ldr	r3, [r4, #0]
1000570e:	f8dd 800c 	ldr.w	r8, [sp, #12]
10005712:	e745      	b.n	100055a0 <__gnu_unwind_pr_common+0x134>
10005714:	210d      	movs	r1, #13
10005716:	4638      	mov	r0, r7
10005718:	f7ff fe38 	bl	1000538c <_Unwind_GetGR>
1000571c:	6228      	str	r0, [r5, #32]
1000571e:	9b04      	ldr	r3, [sp, #16]
10005720:	626b      	str	r3, [r5, #36]	; 0x24
10005722:	e7de      	b.n	100056e2 <__gnu_unwind_pr_common+0x276>
10005724:	f10b 0001 	add.w	r0, fp, #1
10005728:	210f      	movs	r1, #15
1000572a:	eb04 0080 	add.w	r0, r4, r0, lsl #2
1000572e:	e770      	b.n	10005612 <__gnu_unwind_pr_common+0x1a6>
10005730:	00000000 	andeq	r0, r0, r0

10005734 <__aeabi_unwind_cpp_pr0>:
10005734:	2300      	movs	r3, #0
10005736:	e699      	b.n	1000546c <__gnu_unwind_pr_common>

10005738 <__aeabi_unwind_cpp_pr1>:
10005738:	2301      	movs	r3, #1
1000573a:	e697      	b.n	1000546c <__gnu_unwind_pr_common>

1000573c <__aeabi_unwind_cpp_pr2>:
1000573c:	2302      	movs	r3, #2
1000573e:	e695      	b.n	1000546c <__gnu_unwind_pr_common>

10005740 <_Unwind_VRS_Pop>:
10005740:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10005744:	4606      	mov	r6, r0
10005746:	b0c3      	sub	sp, #268	; 0x10c
10005748:	4615      	mov	r5, r2
1000574a:	461c      	mov	r4, r3
1000574c:	2904      	cmp	r1, #4
1000574e:	f200 80c2 	bhi.w	100058d6 <_Unwind_VRS_Pop+0x196>
10005752:	e8df f001 	tbb	[pc, r1]
10005756:	2cc059a3 			; <UNDEFINED> instruction: 0x2cc059a3
1000575a:	2c000003 	stccs	0, cr0, [r0], {3}
1000575e:	f040 80ba 	bne.w	100058d6 <_Unwind_VRS_Pop+0x196>
10005762:	2a10      	cmp	r2, #16
10005764:	f200 80b7 	bhi.w	100058d6 <_Unwind_VRS_Pop+0x196>
10005768:	6803      	ldr	r3, [r0, #0]
1000576a:	06df      	lsls	r7, r3, #27
1000576c:	f100 80b7 	bmi.w	100058de <_Unwind_VRS_Pop+0x19e>
10005770:	af20      	add	r7, sp, #128	; 0x80
10005772:	4638      	mov	r0, r7
10005774:	f000 f9b0 	bl	10005ad8 <__gnu_Unwind_Save_WMMXC>
10005778:	6bb4      	ldr	r4, [r6, #56]	; 0x38
1000577a:	4639      	mov	r1, r7
1000577c:	2300      	movs	r3, #0
1000577e:	f04f 0c01 	mov.w	ip, #1
10005782:	fa0c f203 	lsl.w	r2, ip, r3
10005786:	4620      	mov	r0, r4
10005788:	3301      	adds	r3, #1
1000578a:	422a      	tst	r2, r5
1000578c:	d003      	beq.n	10005796 <_Unwind_VRS_Pop+0x56>
1000578e:	f850 2b04 	ldr.w	r2, [r0], #4
10005792:	4604      	mov	r4, r0
10005794:	600a      	str	r2, [r1, #0]
10005796:	2b04      	cmp	r3, #4
10005798:	f101 0104 	add.w	r1, r1, #4
1000579c:	d1f1      	bne.n	10005782 <_Unwind_VRS_Pop+0x42>
1000579e:	4638      	mov	r0, r7
100057a0:	63b4      	str	r4, [r6, #56]	; 0x38
100057a2:	f000 f98f 	bl	10005ac4 <__gnu_Unwind_Restore_WMMXC>
100057a6:	2000      	movs	r0, #0
100057a8:	b043      	add	sp, #268	; 0x10c
100057aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
100057ae:	2c03      	cmp	r4, #3
100057b0:	f040 8091 	bne.w	100058d6 <_Unwind_VRS_Pop+0x196>
100057b4:	fa1f f882 	uxth.w	r8, r2
100057b8:	0c14      	lsrs	r4, r2, #16
100057ba:	eb08 4512 	add.w	r5, r8, r2, lsr #16
100057be:	2d10      	cmp	r5, #16
100057c0:	f200 8089 	bhi.w	100058d6 <_Unwind_VRS_Pop+0x196>
100057c4:	6803      	ldr	r3, [r0, #0]
100057c6:	071a      	lsls	r2, r3, #28
100057c8:	f100 80cd 	bmi.w	10005966 <_Unwind_VRS_Pop+0x226>
100057cc:	af20      	add	r7, sp, #128	; 0x80
100057ce:	4638      	mov	r0, r7
100057d0:	f000 f956 	bl	10005a80 <__gnu_Unwind_Save_WMMXD>
100057d4:	6bb5      	ldr	r5, [r6, #56]	; 0x38
100057d6:	eb07 01c4 	add.w	r1, r7, r4, lsl #3
100057da:	f1b8 0f00 	cmp.w	r8, #0
100057de:	d00b      	beq.n	100057f8 <_Unwind_VRS_Pop+0xb8>
100057e0:	460b      	mov	r3, r1
100057e2:	eb01 01c8 	add.w	r1, r1, r8, lsl #3
100057e6:	ea4f 08c8 	mov.w	r8, r8, lsl #3
100057ea:	1ae8      	subs	r0, r5, r3
100057ec:	581a      	ldr	r2, [r3, r0]
100057ee:	f843 2b04 	str.w	r2, [r3], #4
100057f2:	428b      	cmp	r3, r1
100057f4:	d1fa      	bne.n	100057ec <_Unwind_VRS_Pop+0xac>
100057f6:	4445      	add	r5, r8
100057f8:	4638      	mov	r0, r7
100057fa:	63b5      	str	r5, [r6, #56]	; 0x38
100057fc:	f000 f91e 	bl	10005a3c <__gnu_Unwind_Restore_WMMXD>
10005800:	2000      	movs	r0, #0
10005802:	b043      	add	sp, #268	; 0x10c
10005804:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10005808:	f004 03fb 	and.w	r3, r4, #251	; 0xfb
1000580c:	ea4f 4812 	mov.w	r8, r2, lsr #16
10005810:	b295      	uxth	r5, r2
10005812:	2b01      	cmp	r3, #1
10005814:	d15f      	bne.n	100058d6 <_Unwind_VRS_Pop+0x196>
10005816:	2c01      	cmp	r4, #1
10005818:	eb08 0905 	add.w	r9, r8, r5
1000581c:	d058      	beq.n	100058d0 <_Unwind_VRS_Pop+0x190>
1000581e:	f1b9 0f20 	cmp.w	r9, #32
10005822:	d858      	bhi.n	100058d6 <_Unwind_VRS_Pop+0x196>
10005824:	f1b8 0f0f 	cmp.w	r8, #15
10005828:	d975      	bls.n	10005916 <_Unwind_VRS_Pop+0x1d6>
1000582a:	2c05      	cmp	r4, #5
1000582c:	46a9      	mov	r9, r5
1000582e:	f000 80a4 	beq.w	1000597a <_Unwind_VRS_Pop+0x23a>
10005832:	2d00      	cmp	r5, #0
10005834:	d14f      	bne.n	100058d6 <_Unwind_VRS_Pop+0x196>
10005836:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10005838:	b365      	cbz	r5, 10005894 <_Unwind_VRS_Pop+0x154>
1000583a:	af20      	add	r7, sp, #128	; 0x80
1000583c:	f04f 0900 	mov.w	r9, #0
10005840:	eb07 07c8 	add.w	r7, r7, r8, lsl #3
10005844:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
10005848:	3f04      	subs	r7, #4
1000584a:	f853 1b04 	ldr.w	r1, [r3], #4
1000584e:	429d      	cmp	r5, r3
10005850:	f847 1f04 	str.w	r1, [r7, #4]!
10005854:	d1f9      	bne.n	1000584a <_Unwind_VRS_Pop+0x10a>
10005856:	f1b9 0f00 	cmp.w	r9, #0
1000585a:	d00f      	beq.n	1000587c <_Unwind_VRS_Pop+0x13c>
1000585c:	466f      	mov	r7, sp
1000585e:	4641      	mov	r1, r8
10005860:	eb03 05c9 	add.w	r5, r3, r9, lsl #3
10005864:	2910      	cmp	r1, #16
10005866:	bf38      	it	cc
10005868:	2110      	movcc	r1, #16
1000586a:	eb07 01c1 	add.w	r1, r7, r1, lsl #3
1000586e:	3984      	subs	r1, #132	; 0x84
10005870:	f853 0b04 	ldr.w	r0, [r3], #4
10005874:	429d      	cmp	r5, r3
10005876:	f841 0f04 	str.w	r0, [r1, #4]!
1000587a:	d1f9      	bne.n	10005870 <_Unwind_VRS_Pop+0x130>
1000587c:	2c01      	cmp	r4, #1
1000587e:	d07a      	beq.n	10005976 <_Unwind_VRS_Pop+0x236>
10005880:	f1b8 0f0f 	cmp.w	r8, #15
10005884:	63b5      	str	r5, [r6, #56]	; 0x38
10005886:	d96a      	bls.n	1000595e <_Unwind_VRS_Pop+0x21e>
10005888:	f1b9 0f00 	cmp.w	r9, #0
1000588c:	d002      	beq.n	10005894 <_Unwind_VRS_Pop+0x154>
1000588e:	4668      	mov	r0, sp
10005890:	f000 f8cc 	bl	10005a2c <__gnu_Unwind_Restore_VFP_D_16_to_31>
10005894:	2000      	movs	r0, #0
10005896:	b043      	add	sp, #268	; 0x10c
10005898:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
1000589c:	b9dc      	cbnz	r4, 100058d6 <_Unwind_VRS_Pop+0x196>
1000589e:	6b87      	ldr	r7, [r0, #56]	; 0x38
100058a0:	4623      	mov	r3, r4
100058a2:	fa1f fc82 	uxth.w	ip, r2
100058a6:	2001      	movs	r0, #1
100058a8:	1d34      	adds	r4, r6, #4
100058aa:	fa00 f103 	lsl.w	r1, r0, r3
100058ae:	463a      	mov	r2, r7
100058b0:	ea11 0f0c 	tst.w	r1, ip
100058b4:	d004      	beq.n	100058c0 <_Unwind_VRS_Pop+0x180>
100058b6:	f852 1b04 	ldr.w	r1, [r2], #4
100058ba:	4617      	mov	r7, r2
100058bc:	f844 1023 	str.w	r1, [r4, r3, lsl #2]
100058c0:	3301      	adds	r3, #1
100058c2:	2b10      	cmp	r3, #16
100058c4:	d1f1      	bne.n	100058aa <_Unwind_VRS_Pop+0x16a>
100058c6:	f415 5000 	ands.w	r0, r5, #8192	; 0x2000
100058ca:	d1e3      	bne.n	10005894 <_Unwind_VRS_Pop+0x154>
100058cc:	63b7      	str	r7, [r6, #56]	; 0x38
100058ce:	e003      	b.n	100058d8 <_Unwind_VRS_Pop+0x198>
100058d0:	f1b9 0f10 	cmp.w	r9, #16
100058d4:	d90b      	bls.n	100058ee <_Unwind_VRS_Pop+0x1ae>
100058d6:	2002      	movs	r0, #2
100058d8:	b043      	add	sp, #268	; 0x10c
100058da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
100058de:	f023 0310 	bic.w	r3, r3, #16
100058e2:	f500 70e8 	add.w	r0, r0, #464	; 0x1d0
100058e6:	6033      	str	r3, [r6, #0]
100058e8:	f000 f8f6 	bl	10005ad8 <__gnu_Unwind_Save_WMMXC>
100058ec:	e740      	b.n	10005770 <_Unwind_VRS_Pop+0x30>
100058ee:	f1b8 0f0f 	cmp.w	r8, #15
100058f2:	d8f0      	bhi.n	100058d6 <_Unwind_VRS_Pop+0x196>
100058f4:	6803      	ldr	r3, [r0, #0]
100058f6:	07d8      	lsls	r0, r3, #31
100058f8:	d450      	bmi.n	1000599c <_Unwind_VRS_Pop+0x25c>
100058fa:	af20      	add	r7, sp, #128	; 0x80
100058fc:	4638      	mov	r0, r7
100058fe:	f000 f889 	bl	10005a14 <__gnu_Unwind_Save_VFP>
10005902:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10005904:	2d00      	cmp	r5, #0
10005906:	d199      	bne.n	1000583c <_Unwind_VRS_Pop+0xfc>
10005908:	461d      	mov	r5, r3
1000590a:	3504      	adds	r5, #4
1000590c:	4638      	mov	r0, r7
1000590e:	63b5      	str	r5, [r6, #56]	; 0x38
10005910:	f000 f87c 	bl	10005a0c <__gnu_Unwind_Restore_VFP>
10005914:	e7be      	b.n	10005894 <_Unwind_VRS_Pop+0x154>
10005916:	f1b9 0f10 	cmp.w	r9, #16
1000591a:	d958      	bls.n	100059ce <_Unwind_VRS_Pop+0x28e>
1000591c:	2c05      	cmp	r4, #5
1000591e:	d1da      	bne.n	100058d6 <_Unwind_VRS_Pop+0x196>
10005920:	6833      	ldr	r3, [r6, #0]
10005922:	f1a9 0910 	sub.w	r9, r9, #16
10005926:	07dd      	lsls	r5, r3, #31
10005928:	d509      	bpl.n	1000593e <_Unwind_VRS_Pop+0x1fe>
1000592a:	f023 0301 	bic.w	r3, r3, #1
1000592e:	4630      	mov	r0, r6
10005930:	f043 0302 	orr.w	r3, r3, #2
10005934:	f840 3b48 	str.w	r3, [r0], #72
10005938:	f000 f874 	bl	10005a24 <__gnu_Unwind_Save_VFP_D>
1000593c:	6833      	ldr	r3, [r6, #0]
1000593e:	0759      	lsls	r1, r3, #29
10005940:	d421      	bmi.n	10005986 <_Unwind_VRS_Pop+0x246>
10005942:	a820      	add	r0, sp, #128	; 0x80
10005944:	f000 f86e 	bl	10005a24 <__gnu_Unwind_Save_VFP_D>
10005948:	466f      	mov	r7, sp
1000594a:	f1c8 0510 	rsb	r5, r8, #16
1000594e:	4638      	mov	r0, r7
10005950:	f000 f870 	bl	10005a34 <__gnu_Unwind_Save_VFP_D_16_to_31>
10005954:	2d00      	cmp	r5, #0
10005956:	6bb3      	ldr	r3, [r6, #56]	; 0x38
10005958:	dd81      	ble.n	1000585e <_Unwind_VRS_Pop+0x11e>
1000595a:	af20      	add	r7, sp, #128	; 0x80
1000595c:	e770      	b.n	10005840 <_Unwind_VRS_Pop+0x100>
1000595e:	a820      	add	r0, sp, #128	; 0x80
10005960:	f000 f85c 	bl	10005a1c <__gnu_Unwind_Restore_VFP_D>
10005964:	e790      	b.n	10005888 <_Unwind_VRS_Pop+0x148>
10005966:	f023 0308 	bic.w	r3, r3, #8
1000596a:	f500 70a8 	add.w	r0, r0, #336	; 0x150
1000596e:	6033      	str	r3, [r6, #0]
10005970:	f000 f886 	bl	10005a80 <__gnu_Unwind_Save_WMMXD>
10005974:	e72a      	b.n	100057cc <_Unwind_VRS_Pop+0x8c>
10005976:	af20      	add	r7, sp, #128	; 0x80
10005978:	e7c7      	b.n	1000590a <_Unwind_VRS_Pop+0x1ca>
1000597a:	2d00      	cmp	r5, #0
1000597c:	f43f af5b 	beq.w	10005836 <_Unwind_VRS_Pop+0xf6>
10005980:	6833      	ldr	r3, [r6, #0]
10005982:	075a      	lsls	r2, r3, #29
10005984:	d5e0      	bpl.n	10005948 <_Unwind_VRS_Pop+0x208>
10005986:	f023 0304 	bic.w	r3, r3, #4
1000598a:	4630      	mov	r0, r6
1000598c:	f840 3bd0 	str.w	r3, [r0], #208
10005990:	f000 f850 	bl	10005a34 <__gnu_Unwind_Save_VFP_D_16_to_31>
10005994:	f1b8 0f0f 	cmp.w	r8, #15
10005998:	d8d6      	bhi.n	10005948 <_Unwind_VRS_Pop+0x208>
1000599a:	e7d2      	b.n	10005942 <_Unwind_VRS_Pop+0x202>
1000599c:	f023 0303 	bic.w	r3, r3, #3
100059a0:	4630      	mov	r0, r6
100059a2:	f840 3b48 	str.w	r3, [r0], #72
100059a6:	f000 f835 	bl	10005a14 <__gnu_Unwind_Save_VFP>
100059aa:	2c01      	cmp	r4, #1
100059ac:	d0a5      	beq.n	100058fa <_Unwind_VRS_Pop+0x1ba>
100059ae:	f1b8 0f0f 	cmp.w	r8, #15
100059b2:	f63f af40 	bhi.w	10005836 <_Unwind_VRS_Pop+0xf6>
100059b6:	af20      	add	r7, sp, #128	; 0x80
100059b8:	4638      	mov	r0, r7
100059ba:	f000 f833 	bl	10005a24 <__gnu_Unwind_Save_VFP_D>
100059be:	6bb3      	ldr	r3, [r6, #56]	; 0x38
100059c0:	2d00      	cmp	r5, #0
100059c2:	f47f af3b 	bne.w	1000583c <_Unwind_VRS_Pop+0xfc>
100059c6:	4638      	mov	r0, r7
100059c8:	f000 f828 	bl	10005a1c <__gnu_Unwind_Restore_VFP_D>
100059cc:	e762      	b.n	10005894 <_Unwind_VRS_Pop+0x154>
100059ce:	6833      	ldr	r3, [r6, #0]
100059d0:	07d9      	lsls	r1, r3, #31
100059d2:	d5ea      	bpl.n	100059aa <_Unwind_VRS_Pop+0x26a>
100059d4:	2c05      	cmp	r4, #5
100059d6:	d1e1      	bne.n	1000599c <_Unwind_VRS_Pop+0x25c>
100059d8:	f023 0301 	bic.w	r3, r3, #1
100059dc:	4630      	mov	r0, r6
100059de:	af20      	add	r7, sp, #128	; 0x80
100059e0:	f043 0302 	orr.w	r3, r3, #2
100059e4:	f840 3b48 	str.w	r3, [r0], #72
100059e8:	f000 f81c 	bl	10005a24 <__gnu_Unwind_Save_VFP_D>
100059ec:	4638      	mov	r0, r7
100059ee:	f000 f819 	bl	10005a24 <__gnu_Unwind_Save_VFP_D>
100059f2:	e7e4      	b.n	100059be <_Unwind_VRS_Pop+0x27e>

100059f4 <__restore_core_regs>:
100059f4:	f100 0134 	add.w	r1, r0, #52	; 0x34
100059f8:	e891 0038 	ldmia.w	r1, {r3, r4, r5}
100059fc:	469c      	mov	ip, r3
100059fe:	46a6      	mov	lr, r4
10005a00:	f84c 5d04 	str.w	r5, [ip, #-4]!
10005a04:	e890 0fff 	ldmia.w	r0, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp}
10005a08:	46e5      	mov	sp, ip
10005a0a:	bd00      	pop	{pc}

10005a0c <__gnu_Unwind_Restore_VFP>:
10005a0c:	ec90 0b21 	fldmiax	r0, {d0-d15}	;@ Deprecated
10005a10:	4770      	bx	lr
10005a12:	bf00      	nop

10005a14 <__gnu_Unwind_Save_VFP>:
10005a14:	ec80 0b21 	fstmiax	r0, {d0-d15}	;@ Deprecated
10005a18:	4770      	bx	lr
10005a1a:	bf00      	nop

10005a1c <__gnu_Unwind_Restore_VFP_D>:
10005a1c:	ec90 0b20 	vldmia	r0, {d0-d15}
10005a20:	4770      	bx	lr
10005a22:	bf00      	nop

10005a24 <__gnu_Unwind_Save_VFP_D>:
10005a24:	ec80 0b20 	vstmia	r0, {d0-d15}
10005a28:	4770      	bx	lr
10005a2a:	bf00      	nop

10005a2c <__gnu_Unwind_Restore_VFP_D_16_to_31>:
10005a2c:	ecd0 0b20 	vldmia	r0, {d16-d31}
10005a30:	4770      	bx	lr
10005a32:	bf00      	nop

10005a34 <__gnu_Unwind_Save_VFP_D_16_to_31>:
10005a34:	ecc0 0b20 	vstmia	r0, {d16-d31}
10005a38:	4770      	bx	lr
10005a3a:	bf00      	nop

10005a3c <__gnu_Unwind_Restore_WMMXD>:
10005a3c:	ecf0 0102 	ldfe	f0, [r0], #8
10005a40:	ecf0 1102 	ldfe	f1, [r0], #8
10005a44:	ecf0 2102 	ldfe	f2, [r0], #8
10005a48:	ecf0 3102 	ldfe	f3, [r0], #8
10005a4c:	ecf0 4102 	ldfe	f4, [r0], #8
10005a50:	ecf0 5102 	ldfe	f5, [r0], #8
10005a54:	ecf0 6102 	ldfe	f6, [r0], #8
10005a58:	ecf0 7102 	ldfe	f7, [r0], #8
10005a5c:	ecf0 8102 	ldfp	f0, [r0], #8
10005a60:	ecf0 9102 	ldfp	f1, [r0], #8
10005a64:	ecf0 a102 	ldfp	f2, [r0], #8
10005a68:	ecf0 b102 	ldfp	f3, [r0], #8
10005a6c:	ecf0 c102 	ldfp	f4, [r0], #8
10005a70:	ecf0 d102 	ldfp	f5, [r0], #8
10005a74:	ecf0 e102 	ldfp	f6, [r0], #8
10005a78:	ecf0 f102 	ldfp	f7, [r0], #8
10005a7c:	4770      	bx	lr
10005a7e:	bf00      	nop

10005a80 <__gnu_Unwind_Save_WMMXD>:
10005a80:	ece0 0102 	stfe	f0, [r0], #8
10005a84:	ece0 1102 	stfe	f1, [r0], #8
10005a88:	ece0 2102 	stfe	f2, [r0], #8
10005a8c:	ece0 3102 	stfe	f3, [r0], #8
10005a90:	ece0 4102 	stfe	f4, [r0], #8
10005a94:	ece0 5102 	stfe	f5, [r0], #8
10005a98:	ece0 6102 	stfe	f6, [r0], #8
10005a9c:	ece0 7102 	stfe	f7, [r0], #8
10005aa0:	ece0 8102 	stfp	f0, [r0], #8
10005aa4:	ece0 9102 	stfp	f1, [r0], #8
10005aa8:	ece0 a102 	stfp	f2, [r0], #8
10005aac:	ece0 b102 	stfp	f3, [r0], #8
10005ab0:	ece0 c102 	stfp	f4, [r0], #8
10005ab4:	ece0 d102 	stfp	f5, [r0], #8
10005ab8:	ece0 e102 	stfp	f6, [r0], #8
10005abc:	ece0 f102 	stfp	f7, [r0], #8
10005ac0:	4770      	bx	lr
10005ac2:	bf00      	nop

10005ac4 <__gnu_Unwind_Restore_WMMXC>:
10005ac4:	fcb0 8101 	ldc2	1, cr8, [r0], #4
10005ac8:	fcb0 9101 	ldc2	1, cr9, [r0], #4
10005acc:	fcb0 a101 	ldc2	1, cr10, [r0], #4
10005ad0:	fcb0 b101 	ldc2	1, cr11, [r0], #4
10005ad4:	4770      	bx	lr
10005ad6:	bf00      	nop

10005ad8 <__gnu_Unwind_Save_WMMXC>:
10005ad8:	fca0 8101 	stc2	1, cr8, [r0], #4
10005adc:	fca0 9101 	stc2	1, cr9, [r0], #4
10005ae0:	fca0 a101 	stc2	1, cr10, [r0], #4
10005ae4:	fca0 b101 	stc2	1, cr11, [r0], #4
10005ae8:	4770      	bx	lr
10005aea:	bf00      	nop

10005aec <_Unwind_RaiseException>:
10005aec:	46ec      	mov	ip, sp
10005aee:	b500      	push	{lr}
10005af0:	e92d 5000 	stmdb	sp!, {ip, lr}
10005af4:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005af8:	f04f 0300 	mov.w	r3, #0
10005afc:	e92d 000c 	stmdb	sp!, {r2, r3}
10005b00:	a901      	add	r1, sp, #4
10005b02:	f7ff fbb7 	bl	10005274 <__gnu_Unwind_RaiseException>
10005b06:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10005b0a:	b012      	add	sp, #72	; 0x48
10005b0c:	4770      	bx	lr
10005b0e:	bf00      	nop

10005b10 <_Unwind_Resume>:
10005b10:	46ec      	mov	ip, sp
10005b12:	b500      	push	{lr}
10005b14:	e92d 5000 	stmdb	sp!, {ip, lr}
10005b18:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005b1c:	f04f 0300 	mov.w	r3, #0
10005b20:	e92d 000c 	stmdb	sp!, {r2, r3}
10005b24:	a901      	add	r1, sp, #4
10005b26:	f7ff fbe3 	bl	100052f0 <__gnu_Unwind_Resume>
10005b2a:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10005b2e:	b012      	add	sp, #72	; 0x48
10005b30:	4770      	bx	lr
10005b32:	bf00      	nop

10005b34 <_Unwind_Resume_or_Rethrow>:
10005b34:	46ec      	mov	ip, sp
10005b36:	b500      	push	{lr}
10005b38:	e92d 5000 	stmdb	sp!, {ip, lr}
10005b3c:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005b40:	f04f 0300 	mov.w	r3, #0
10005b44:	e92d 000c 	stmdb	sp!, {r2, r3}
10005b48:	a901      	add	r1, sp, #4
10005b4a:	f7ff fbf3 	bl	10005334 <__gnu_Unwind_Resume_or_Rethrow>
10005b4e:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10005b52:	b012      	add	sp, #72	; 0x48
10005b54:	4770      	bx	lr
10005b56:	bf00      	nop

10005b58 <_Unwind_ForcedUnwind>:
10005b58:	46ec      	mov	ip, sp
10005b5a:	b500      	push	{lr}
10005b5c:	e92d 5000 	stmdb	sp!, {ip, lr}
10005b60:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005b64:	f04f 0300 	mov.w	r3, #0
10005b68:	e92d 000c 	stmdb	sp!, {r2, r3}
10005b6c:	ab01      	add	r3, sp, #4
10005b6e:	f7ff fbb5 	bl	100052dc <__gnu_Unwind_ForcedUnwind>
10005b72:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10005b76:	b012      	add	sp, #72	; 0x48
10005b78:	4770      	bx	lr
10005b7a:	bf00      	nop

10005b7c <_Unwind_Backtrace>:
10005b7c:	46ec      	mov	ip, sp
10005b7e:	b500      	push	{lr}
10005b80:	e92d 5000 	stmdb	sp!, {ip, lr}
10005b84:	e92d 1fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip}
10005b88:	f04f 0300 	mov.w	r3, #0
10005b8c:	e92d 000c 	stmdb	sp!, {r2, r3}
10005b90:	aa01      	add	r2, sp, #4
10005b92:	f7ff fc2d 	bl	100053f0 <__gnu_Unwind_Backtrace>
10005b96:	f8dd e040 	ldr.w	lr, [sp, #64]	; 0x40
10005b9a:	b012      	add	sp, #72	; 0x48
10005b9c:	4770      	bx	lr
10005b9e:	bf00      	nop

10005ba0 <next_unwind_byte>:
10005ba0:	7a02      	ldrb	r2, [r0, #8]
10005ba2:	4603      	mov	r3, r0
10005ba4:	b98a      	cbnz	r2, 10005bca <next_unwind_byte+0x2a>
10005ba6:	7a42      	ldrb	r2, [r0, #9]
10005ba8:	b1b2      	cbz	r2, 10005bd8 <next_unwind_byte+0x38>
10005baa:	6841      	ldr	r1, [r0, #4]
10005bac:	3a01      	subs	r2, #1
10005bae:	f04f 0c03 	mov.w	ip, #3
10005bb2:	b410      	push	{r4}
10005bb4:	7242      	strb	r2, [r0, #9]
10005bb6:	1d0c      	adds	r4, r1, #4
10005bb8:	6808      	ldr	r0, [r1, #0]
10005bba:	f883 c008 	strb.w	ip, [r3, #8]
10005bbe:	0202      	lsls	r2, r0, #8
10005bc0:	605c      	str	r4, [r3, #4]
10005bc2:	0e00      	lsrs	r0, r0, #24
10005bc4:	bc10      	pop	{r4}
10005bc6:	601a      	str	r2, [r3, #0]
10005bc8:	4770      	bx	lr
10005bca:	6800      	ldr	r0, [r0, #0]
10005bcc:	3a01      	subs	r2, #1
10005bce:	721a      	strb	r2, [r3, #8]
10005bd0:	0202      	lsls	r2, r0, #8
10005bd2:	0e00      	lsrs	r0, r0, #24
10005bd4:	601a      	str	r2, [r3, #0]
10005bd6:	4770      	bx	lr
10005bd8:	20b0      	movs	r0, #176	; 0xb0
10005bda:	4770      	bx	lr

10005bdc <_Unwind_GetGR.constprop.0>:
10005bdc:	b510      	push	{r4, lr}
10005bde:	b084      	sub	sp, #16
10005be0:	2300      	movs	r3, #0
10005be2:	220c      	movs	r2, #12
10005be4:	ac03      	add	r4, sp, #12
10005be6:	4619      	mov	r1, r3
10005be8:	9400      	str	r4, [sp, #0]
10005bea:	f7ff fbb5 	bl	10005358 <_Unwind_VRS_Get>
10005bee:	9803      	ldr	r0, [sp, #12]
10005bf0:	b004      	add	sp, #16
10005bf2:	bd10      	pop	{r4, pc}

10005bf4 <unwind_UCB_from_context>:
10005bf4:	e7f2      	b.n	10005bdc <_Unwind_GetGR.constprop.0>
10005bf6:	bf00      	nop

10005bf8 <__gnu_unwind_execute>:
10005bf8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
10005bfc:	f04f 0800 	mov.w	r8, #0
10005c00:	b085      	sub	sp, #20
10005c02:	4606      	mov	r6, r0
10005c04:	460d      	mov	r5, r1
10005c06:	4628      	mov	r0, r5
10005c08:	f7ff ffca 	bl	10005ba0 <next_unwind_byte>
10005c0c:	28b0      	cmp	r0, #176	; 0xb0
10005c0e:	4604      	mov	r4, r0
10005c10:	f000 80bc 	beq.w	10005d8c <__gnu_unwind_execute+0x194>
10005c14:	0607      	lsls	r7, r0, #24
10005c16:	d520      	bpl.n	10005c5a <__gnu_unwind_execute+0x62>
10005c18:	f000 03f0 	and.w	r3, r0, #240	; 0xf0
10005c1c:	2b80      	cmp	r3, #128	; 0x80
10005c1e:	d04e      	beq.n	10005cbe <__gnu_unwind_execute+0xc6>
10005c20:	2b90      	cmp	r3, #144	; 0x90
10005c22:	d037      	beq.n	10005c94 <__gnu_unwind_execute+0x9c>
10005c24:	2ba0      	cmp	r3, #160	; 0xa0
10005c26:	d061      	beq.n	10005cec <__gnu_unwind_execute+0xf4>
10005c28:	2bb0      	cmp	r3, #176	; 0xb0
10005c2a:	d076      	beq.n	10005d1a <__gnu_unwind_execute+0x122>
10005c2c:	2bc0      	cmp	r3, #192	; 0xc0
10005c2e:	f000 808d 	beq.w	10005d4c <__gnu_unwind_execute+0x154>
10005c32:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
10005c36:	2bd0      	cmp	r3, #208	; 0xd0
10005c38:	d10b      	bne.n	10005c52 <__gnu_unwind_execute+0x5a>
10005c3a:	f000 0207 	and.w	r2, r0, #7
10005c3e:	2305      	movs	r3, #5
10005c40:	2101      	movs	r1, #1
10005c42:	4630      	mov	r0, r6
10005c44:	3201      	adds	r2, #1
10005c46:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
10005c4a:	f7ff fd79 	bl	10005740 <_Unwind_VRS_Pop>
10005c4e:	2800      	cmp	r0, #0
10005c50:	d0d9      	beq.n	10005c06 <__gnu_unwind_execute+0xe>
10005c52:	2009      	movs	r0, #9
10005c54:	b005      	add	sp, #20
10005c56:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
10005c5a:	0083      	lsls	r3, r0, #2
10005c5c:	f10d 090c 	add.w	r9, sp, #12
10005c60:	220d      	movs	r2, #13
10005c62:	4630      	mov	r0, r6
10005c64:	b2db      	uxtb	r3, r3
10005c66:	f8cd 9000 	str.w	r9, [sp]
10005c6a:	1d1f      	adds	r7, r3, #4
10005c6c:	2300      	movs	r3, #0
10005c6e:	4619      	mov	r1, r3
10005c70:	f7ff fb72 	bl	10005358 <_Unwind_VRS_Get>
10005c74:	9b03      	ldr	r3, [sp, #12]
10005c76:	0660      	lsls	r0, r4, #25
10005c78:	f04f 020d 	mov.w	r2, #13
10005c7c:	4630      	mov	r0, r6
10005c7e:	f8cd 9000 	str.w	r9, [sp]
10005c82:	bf4c      	ite	mi
10005c84:	1bdf      	submi	r7, r3, r7
10005c86:	18ff      	addpl	r7, r7, r3
10005c88:	2300      	movs	r3, #0
10005c8a:	9703      	str	r7, [sp, #12]
10005c8c:	4619      	mov	r1, r3
10005c8e:	f7ff fb89 	bl	100053a4 <_Unwind_VRS_Set>
10005c92:	e7b8      	b.n	10005c06 <__gnu_unwind_execute+0xe>
10005c94:	f000 030d 	and.w	r3, r0, #13
10005c98:	2b0d      	cmp	r3, #13
10005c9a:	d0da      	beq.n	10005c52 <__gnu_unwind_execute+0x5a>
10005c9c:	af03      	add	r7, sp, #12
10005c9e:	2300      	movs	r3, #0
10005ca0:	f000 020f 	and.w	r2, r0, #15
10005ca4:	4630      	mov	r0, r6
10005ca6:	4619      	mov	r1, r3
10005ca8:	9700      	str	r7, [sp, #0]
10005caa:	f7ff fb55 	bl	10005358 <_Unwind_VRS_Get>
10005cae:	2300      	movs	r3, #0
10005cb0:	220d      	movs	r2, #13
10005cb2:	4630      	mov	r0, r6
10005cb4:	4619      	mov	r1, r3
10005cb6:	9700      	str	r7, [sp, #0]
10005cb8:	f7ff fb74 	bl	100053a4 <_Unwind_VRS_Set>
10005cbc:	e7a3      	b.n	10005c06 <__gnu_unwind_execute+0xe>
10005cbe:	0224      	lsls	r4, r4, #8
10005cc0:	4628      	mov	r0, r5
10005cc2:	f7ff ff6d 	bl	10005ba0 <next_unwind_byte>
10005cc6:	4320      	orrs	r0, r4
10005cc8:	f5b0 4f00 	cmp.w	r0, #32768	; 0x8000
10005ccc:	d0c1      	beq.n	10005c52 <__gnu_unwind_execute+0x5a>
10005cce:	0104      	lsls	r4, r0, #4
10005cd0:	2300      	movs	r3, #0
10005cd2:	4630      	mov	r0, r6
10005cd4:	b2a2      	uxth	r2, r4
10005cd6:	4619      	mov	r1, r3
10005cd8:	f7ff fd32 	bl	10005740 <_Unwind_VRS_Pop>
10005cdc:	2800      	cmp	r0, #0
10005cde:	d1b8      	bne.n	10005c52 <__gnu_unwind_execute+0x5a>
10005ce0:	f414 4f00 	tst.w	r4, #32768	; 0x8000
10005ce4:	bf18      	it	ne
10005ce6:	f04f 0801 	movne.w	r8, #1
10005cea:	e78c      	b.n	10005c06 <__gnu_unwind_execute+0xe>
10005cec:	43c2      	mvns	r2, r0
10005cee:	0701      	lsls	r1, r0, #28
10005cf0:	4630      	mov	r0, r6
10005cf2:	f002 0307 	and.w	r3, r2, #7
10005cf6:	f44f 627f 	mov.w	r2, #4080	; 0xff0
10005cfa:	fa42 f203 	asr.w	r2, r2, r3
10005cfe:	f04f 0300 	mov.w	r3, #0
10005d02:	f402 627f 	and.w	r2, r2, #4080	; 0xff0
10005d06:	4619      	mov	r1, r3
10005d08:	bf48      	it	mi
10005d0a:	f442 4280 	orrmi.w	r2, r2, #16384	; 0x4000
10005d0e:	f7ff fd17 	bl	10005740 <_Unwind_VRS_Pop>
10005d12:	2800      	cmp	r0, #0
10005d14:	f43f af77 	beq.w	10005c06 <__gnu_unwind_execute+0xe>
10005d18:	e79b      	b.n	10005c52 <__gnu_unwind_execute+0x5a>
10005d1a:	28b1      	cmp	r0, #177	; 0xb1
10005d1c:	d03b      	beq.n	10005d96 <__gnu_unwind_execute+0x19e>
10005d1e:	28b2      	cmp	r0, #178	; 0xb2
10005d20:	f000 80a1 	beq.w	10005e66 <__gnu_unwind_execute+0x26e>
10005d24:	28b3      	cmp	r0, #179	; 0xb3
10005d26:	d041      	beq.n	10005dac <__gnu_unwind_execute+0x1b4>
10005d28:	f000 03fc 	and.w	r3, r0, #252	; 0xfc
10005d2c:	2bb4      	cmp	r3, #180	; 0xb4
10005d2e:	d090      	beq.n	10005c52 <__gnu_unwind_execute+0x5a>
10005d30:	f000 0207 	and.w	r2, r0, #7
10005d34:	2301      	movs	r3, #1
10005d36:	441a      	add	r2, r3
10005d38:	f442 2200 	orr.w	r2, r2, #524288	; 0x80000
10005d3c:	4619      	mov	r1, r3
10005d3e:	4630      	mov	r0, r6
10005d40:	f7ff fcfe 	bl	10005740 <_Unwind_VRS_Pop>
10005d44:	2800      	cmp	r0, #0
10005d46:	f43f af5e 	beq.w	10005c06 <__gnu_unwind_execute+0xe>
10005d4a:	e782      	b.n	10005c52 <__gnu_unwind_execute+0x5a>
10005d4c:	28c6      	cmp	r0, #198	; 0xc6
10005d4e:	d051      	beq.n	10005df4 <__gnu_unwind_execute+0x1fc>
10005d50:	28c7      	cmp	r0, #199	; 0xc7
10005d52:	d062      	beq.n	10005e1a <__gnu_unwind_execute+0x222>
10005d54:	f000 03f8 	and.w	r3, r0, #248	; 0xf8
10005d58:	2bc0      	cmp	r3, #192	; 0xc0
10005d5a:	d071      	beq.n	10005e40 <__gnu_unwind_execute+0x248>
10005d5c:	28c8      	cmp	r0, #200	; 0xc8
10005d5e:	d076      	beq.n	10005e4e <__gnu_unwind_execute+0x256>
10005d60:	28c9      	cmp	r0, #201	; 0xc9
10005d62:	f47f af76 	bne.w	10005c52 <__gnu_unwind_execute+0x5a>
10005d66:	4628      	mov	r0, r5
10005d68:	f7ff ff1a 	bl	10005ba0 <next_unwind_byte>
10005d6c:	0302      	lsls	r2, r0, #12
10005d6e:	f000 000f 	and.w	r0, r0, #15
10005d72:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10005d76:	3001      	adds	r0, #1
10005d78:	4302      	orrs	r2, r0
10005d7a:	2101      	movs	r1, #1
10005d7c:	2305      	movs	r3, #5
10005d7e:	4630      	mov	r0, r6
10005d80:	f7ff fcde 	bl	10005740 <_Unwind_VRS_Pop>
10005d84:	2800      	cmp	r0, #0
10005d86:	f43f af3e 	beq.w	10005c06 <__gnu_unwind_execute+0xe>
10005d8a:	e762      	b.n	10005c52 <__gnu_unwind_execute+0x5a>
10005d8c:	f1b8 0f00 	cmp.w	r8, #0
10005d90:	d01f      	beq.n	10005dd2 <__gnu_unwind_execute+0x1da>
10005d92:	2000      	movs	r0, #0
10005d94:	e75e      	b.n	10005c54 <__gnu_unwind_execute+0x5c>
10005d96:	4628      	mov	r0, r5
10005d98:	f7ff ff02 	bl	10005ba0 <next_unwind_byte>
10005d9c:	4602      	mov	r2, r0
10005d9e:	2800      	cmp	r0, #0
10005da0:	f43f af57 	beq.w	10005c52 <__gnu_unwind_execute+0x5a>
10005da4:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
10005da8:	d0c8      	beq.n	10005d3c <__gnu_unwind_execute+0x144>
10005daa:	e752      	b.n	10005c52 <__gnu_unwind_execute+0x5a>
10005dac:	4628      	mov	r0, r5
10005dae:	f7ff fef7 	bl	10005ba0 <next_unwind_byte>
10005db2:	f000 030f 	and.w	r3, r0, #15
10005db6:	0302      	lsls	r2, r0, #12
10005db8:	4630      	mov	r0, r6
10005dba:	3301      	adds	r3, #1
10005dbc:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10005dc0:	431a      	orrs	r2, r3
10005dc2:	2301      	movs	r3, #1
10005dc4:	4619      	mov	r1, r3
10005dc6:	f7ff fcbb 	bl	10005740 <_Unwind_VRS_Pop>
10005dca:	2800      	cmp	r0, #0
10005dcc:	f43f af1b 	beq.w	10005c06 <__gnu_unwind_execute+0xe>
10005dd0:	e73f      	b.n	10005c52 <__gnu_unwind_execute+0x5a>
10005dd2:	ac03      	add	r4, sp, #12
10005dd4:	4643      	mov	r3, r8
10005dd6:	220e      	movs	r2, #14
10005dd8:	4641      	mov	r1, r8
10005dda:	4630      	mov	r0, r6
10005ddc:	9400      	str	r4, [sp, #0]
10005dde:	f7ff fabb 	bl	10005358 <_Unwind_VRS_Get>
10005de2:	4643      	mov	r3, r8
10005de4:	220f      	movs	r2, #15
10005de6:	4630      	mov	r0, r6
10005de8:	4641      	mov	r1, r8
10005dea:	9400      	str	r4, [sp, #0]
10005dec:	f7ff fada 	bl	100053a4 <_Unwind_VRS_Set>
10005df0:	4640      	mov	r0, r8
10005df2:	e72f      	b.n	10005c54 <__gnu_unwind_execute+0x5c>
10005df4:	4628      	mov	r0, r5
10005df6:	f7ff fed3 	bl	10005ba0 <next_unwind_byte>
10005dfa:	f000 030f 	and.w	r3, r0, #15
10005dfe:	0302      	lsls	r2, r0, #12
10005e00:	4630      	mov	r0, r6
10005e02:	3301      	adds	r3, #1
10005e04:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
10005e08:	431a      	orrs	r2, r3
10005e0a:	2303      	movs	r3, #3
10005e0c:	4619      	mov	r1, r3
10005e0e:	f7ff fc97 	bl	10005740 <_Unwind_VRS_Pop>
10005e12:	2800      	cmp	r0, #0
10005e14:	f43f aef7 	beq.w	10005c06 <__gnu_unwind_execute+0xe>
10005e18:	e71b      	b.n	10005c52 <__gnu_unwind_execute+0x5a>
10005e1a:	4628      	mov	r0, r5
10005e1c:	f7ff fec0 	bl	10005ba0 <next_unwind_byte>
10005e20:	4602      	mov	r2, r0
10005e22:	2800      	cmp	r0, #0
10005e24:	f43f af15 	beq.w	10005c52 <__gnu_unwind_execute+0x5a>
10005e28:	f010 03f0 	ands.w	r3, r0, #240	; 0xf0
10005e2c:	f47f af11 	bne.w	10005c52 <__gnu_unwind_execute+0x5a>
10005e30:	2104      	movs	r1, #4
10005e32:	4630      	mov	r0, r6
10005e34:	f7ff fc84 	bl	10005740 <_Unwind_VRS_Pop>
10005e38:	2800      	cmp	r0, #0
10005e3a:	f43f aee4 	beq.w	10005c06 <__gnu_unwind_execute+0xe>
10005e3e:	e708      	b.n	10005c52 <__gnu_unwind_execute+0x5a>
10005e40:	f000 020f 	and.w	r2, r0, #15
10005e44:	2303      	movs	r3, #3
10005e46:	3201      	adds	r2, #1
10005e48:	f442 2220 	orr.w	r2, r2, #655360	; 0xa0000
10005e4c:	e776      	b.n	10005d3c <__gnu_unwind_execute+0x144>
10005e4e:	4628      	mov	r0, r5
10005e50:	f7ff fea6 	bl	10005ba0 <next_unwind_byte>
10005e54:	f000 02f0 	and.w	r2, r0, #240	; 0xf0
10005e58:	f000 030f 	and.w	r3, r0, #15
10005e5c:	3210      	adds	r2, #16
10005e5e:	3301      	adds	r3, #1
10005e60:	ea43 3202 	orr.w	r2, r3, r2, lsl #12
10005e64:	e789      	b.n	10005d7a <__gnu_unwind_execute+0x182>
10005e66:	2300      	movs	r3, #0
10005e68:	f10d 090c 	add.w	r9, sp, #12
10005e6c:	220d      	movs	r2, #13
10005e6e:	4630      	mov	r0, r6
10005e70:	4619      	mov	r1, r3
10005e72:	f8cd 9000 	str.w	r9, [sp]
10005e76:	f7ff fa6f 	bl	10005358 <_Unwind_VRS_Get>
10005e7a:	4628      	mov	r0, r5
10005e7c:	f7ff fe90 	bl	10005ba0 <next_unwind_byte>
10005e80:	0602      	lsls	r2, r0, #24
10005e82:	f04f 0402 	mov.w	r4, #2
10005e86:	d50b      	bpl.n	10005ea0 <__gnu_unwind_execute+0x2a8>
10005e88:	f000 007f 	and.w	r0, r0, #127	; 0x7f
10005e8c:	9b03      	ldr	r3, [sp, #12]
10005e8e:	40a0      	lsls	r0, r4
10005e90:	3407      	adds	r4, #7
10005e92:	4418      	add	r0, r3
10005e94:	9003      	str	r0, [sp, #12]
10005e96:	4628      	mov	r0, r5
10005e98:	f7ff fe82 	bl	10005ba0 <next_unwind_byte>
10005e9c:	0603      	lsls	r3, r0, #24
10005e9e:	d4f3      	bmi.n	10005e88 <__gnu_unwind_execute+0x290>
10005ea0:	9b03      	ldr	r3, [sp, #12]
10005ea2:	f000 027f 	and.w	r2, r0, #127	; 0x7f
10005ea6:	f8cd 9000 	str.w	r9, [sp]
10005eaa:	4630      	mov	r0, r6
10005eac:	40a2      	lsls	r2, r4
10005eae:	f503 7301 	add.w	r3, r3, #516	; 0x204
10005eb2:	441a      	add	r2, r3
10005eb4:	2300      	movs	r3, #0
10005eb6:	9203      	str	r2, [sp, #12]
10005eb8:	4619      	mov	r1, r3
10005eba:	220d      	movs	r2, #13
10005ebc:	f7ff fa72 	bl	100053a4 <_Unwind_VRS_Set>
10005ec0:	e6a1      	b.n	10005c06 <__gnu_unwind_execute+0xe>
10005ec2:	bf00      	nop

10005ec4 <__gnu_unwind_frame>:
10005ec4:	6cc2      	ldr	r2, [r0, #76]	; 0x4c
10005ec6:	460b      	mov	r3, r1
10005ec8:	f04f 0c03 	mov.w	ip, #3
10005ecc:	4618      	mov	r0, r3
10005ece:	3208      	adds	r2, #8
10005ed0:	f852 3c04 	ldr.w	r3, [r2, #-4]
10005ed4:	b500      	push	{lr}
10005ed6:	b085      	sub	sp, #20
10005ed8:	9202      	str	r2, [sp, #8]
10005eda:	a901      	add	r1, sp, #4
10005edc:	0e1a      	lsrs	r2, r3, #24
10005ede:	f88d c00c 	strb.w	ip, [sp, #12]
10005ee2:	021b      	lsls	r3, r3, #8
10005ee4:	f88d 200d 	strb.w	r2, [sp, #13]
10005ee8:	9301      	str	r3, [sp, #4]
10005eea:	f7ff fe85 	bl	10005bf8 <__gnu_unwind_execute>
10005eee:	b005      	add	sp, #20
10005ef0:	f85d fb04 	ldr.w	pc, [sp], #4

10005ef4 <_Unwind_GetRegionStart>:
10005ef4:	b508      	push	{r3, lr}
10005ef6:	f7ff fe7d 	bl	10005bf4 <unwind_UCB_from_context>
10005efa:	6c80      	ldr	r0, [r0, #72]	; 0x48
10005efc:	bd08      	pop	{r3, pc}
10005efe:	bf00      	nop

10005f00 <_Unwind_GetLanguageSpecificData>:
10005f00:	b508      	push	{r3, lr}
10005f02:	f7ff fe77 	bl	10005bf4 <unwind_UCB_from_context>
10005f06:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
10005f08:	79c3      	ldrb	r3, [r0, #7]
10005f0a:	3302      	adds	r3, #2
10005f0c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
10005f10:	bd08      	pop	{r3, pc}
10005f12:	bf00      	nop

10005f14 <__aeabi_idiv0>:
10005f14:	4770      	bx	lr
10005f16:	bf00      	nop

10005f18 <_init>:
10005f18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10005f1a:	bf00      	nop
10005f1c:	bcf8      	pop	{r3, r4, r5, r6, r7}
10005f1e:	bc08      	pop	{r3}
10005f20:	469e      	mov	lr, r3
10005f22:	4770      	bx	lr

10005f24 <_fini>:
10005f24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
10005f26:	bf00      	nop
10005f28:	bcf8      	pop	{r3, r4, r5, r6, r7}
10005f2a:	bc08      	pop	{r3}
10005f2c:	469e      	mov	lr, r3
10005f2e:	4770      	bx	lr
10005f30:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
10005f34:	6874206f 	ldmdavs	r4!, {r0, r1, r2, r3, r5, r6, sp}^
10005f38:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
10005f3c:	64252078 	strtvs	r2, [r5], #-120	; 0xffffff88
10005f40:	00000a0d 	andeq	r0, r0, sp, lsl #20
10005f44:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
10005f48:	006c6f6f 	rsbeq	r6, ip, pc, ror #30
10005f4c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 10005f54 <_fini+0x30>
10005f50:	006b7361 	rsbeq	r7, fp, r1, ror #6
10005f54:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
10005f58:	00000d74 	andeq	r0, r0, r4, ror sp
10005f5c:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
10005f60:	6f77206f 	svcvs	0x0077206f
10005f64:	20646c72 	rsbcs	r6, r4, r2, ror ip
10005f68:	6425202d 	strtvs	r2, [r5], #-45	; 0xffffffd3
10005f6c:	000a0d2e 	andeq	r0, sl, lr, lsr #26
10005f70:	00696e66 	rsbeq	r6, r9, r6, ror #28
10005f74:	2b696e66 	blcs	11a61914 <__copy_table_end__+0x1a5b6d4>
10005f78:	00000000 	andeq	r0, r0, r0
10005f7c:	006e616e 	rsbeq	r6, lr, lr, ror #2
10005f80:	2d696e66 	stclcs	14, cr6, [r9, #-408]!	; 0xfffffe68
10005f84:	00000000 	andeq	r0, r0, r0

10005f88 <pow10.0>:
10005f88:	00000000 	andeq	r0, r0, r0
10005f8c:	3ff00000 	svccc	0x00f00000	; IMB
10005f90:	00000000 	andeq	r0, r0, r0
10005f94:	40240000 	eormi	r0, r4, r0
10005f98:	00000000 	andeq	r0, r0, r0
10005f9c:	40590000 	subsmi	r0, r9, r0
10005fa0:	00000000 	andeq	r0, r0, r0
10005fa4:	408f4000 	addmi	r4, pc, r0
10005fa8:	00000000 	andeq	r0, r0, r0
10005fac:	40c38800 	sbcmi	r8, r3, r0, lsl #16
10005fb0:	00000000 	andeq	r0, r0, r0
10005fb4:	40f86a00 	rscsmi	r6, r8, r0, lsl #20
10005fb8:	00000000 	andeq	r0, r0, r0
10005fbc:	412e8480 	smlawbmi	lr, r0, r4, r8
10005fc0:	00000000 	andeq	r0, r0, r0
10005fc4:	416312d0 	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
10005fc8:	00000000 	andeq	r0, r0, r0
10005fcc:	4197d784 	orrsmi	sp, r7, r4, lsl #15
10005fd0:	00000000 	andeq	r0, r0, r0
10005fd4:	41cdcd65 	bicmi	ip, sp, r5, ror #26
10005fd8:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
10005fdc:	54206d65 	strtpl	r6, [r0], #-3429	; 0xfffff29b
10005fe0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
10005fe4:	72685420 	rsbvc	r5, r8, #32, 8	; 0x20000000
10005fe8:	00646165 	rsbeq	r6, r4, r5, ror #2

10005fec <_global_impure_ptr>:
10005fec:	3800000c 	stmdacc	r0, {r2, r3}
10005ff0:	4e454552 	mcrmi	5, 2, r4, cr5, cr2, {2}
10005ff4:	616d2054 	qdsubvs	r2, r4, sp
10005ff8:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
10005ffc:	63757320 	cmnvs	r5, #32, 6	; 0x80000000
10006000:	64656563 	strbtvs	r6, [r5], #-1379	; 0xfffffa9d
10006004:	2f006465 	svccs	0x00006465
10006008:	2f746e6d 	svccs	0x00746e6d
1000600c:	6b726f77 	blvs	11ca1df0 <__copy_table_end__+0x1c9bbb0>
10006010:	63617073 	cmnvs	r1, #115	; 0x73
10006014:	6f772f65 	svcvs	0x00772f65
10006018:	70736b72 	rsbsvc	r6, r3, r2, ror fp
1000601c:	2f656361 	svccs	0x00656361
10006020:	2d434347 	stclcs	3, cr4, [r3, #-284]	; 0xfffffee4
10006024:	702d3031 	eorvc	r3, sp, r1, lsr r0
10006028:	6c657069 	stclvs	0, cr7, [r5], #-420	; 0xfffffe5c
1000602c:	2f656e69 	svccs	0x00656e69
10006030:	6b6e656a 	blvs	11b9f5e0 <__copy_table_end__+0x1b993a0>
10006034:	2d736e69 	ldclcs	14, cr6, [r3, #-420]!	; 0xfffffe5c
10006038:	2d434347 	stclcs	3, cr4, [r3, #-284]	; 0xfffffee4
1000603c:	702d3031 	eorvc	r3, sp, r1, lsr r0
10006040:	6c657069 	stclvs	0, cr7, [r5], #-420	; 0xfffffe5c
10006044:	2d656e69 	stclcs	14, cr6, [r5, #-420]!	; 0xfffffe5c
10006048:	5f383333 	svcpl	0x00383333
1000604c:	31323032 	teqcc	r2, r2, lsr r0
10006050:	38313031 	ldmdacc	r1!, {r0, r4, r5, ip, sp}
10006054:	3336315f 	teqcc	r6, #-1073741801	; 0xc0000017
10006058:	36313534 			; <UNDEFINED> instruction: 0x36313534
1000605c:	2f333032 	svccs	0x00333032
10006060:	2f637273 	svccs	0x00637273
10006064:	6c77656e 	cfldr64vs	mvdx6, [r7], #-440	; 0xfffffe48
10006068:	6e2f6269 	cdpvs	2, 2, cr6, cr15, cr9, {3}
1000606c:	696c7765 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, ip, sp, lr}^
10006070:	696c2f62 	stmdbvs	ip!, {r1, r5, r6, r8, r9, sl, fp, sp}^
10006074:	732f6362 			; <UNDEFINED> instruction: 0x732f6362
10006078:	696c6474 	stmdbvs	ip!, {r2, r4, r5, r6, sl, sp, lr}^
1000607c:	61722f62 	cmnvs	r2, r2, ror #30
10006080:	632e646e 			; <UNDEFINED> instruction: 0x632e646e
10006084:	66202c00 	strtvs	r2, [r0], -r0, lsl #24
10006088:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
1000608c:	3a6e6f69 	bcc	11ba1e38 <__copy_table_end__+0x1b9bbf8>
10006090:	73610020 	cmnvc	r1, #32
10006094:	74726573 	ldrbtvc	r6, [r2], #-1395	; 0xfffffa8d
10006098:	206e6f69 	rsbcs	r6, lr, r9, ror #30
1000609c:	22732522 	rsbscs	r2, r3, #142606336	; 0x8800000
100060a0:	69616620 	stmdbvs	r1!, {r5, r9, sl, sp, lr}^
100060a4:	3a64656c 	bcc	1191f65c <__copy_table_end__+0x191941c>
100060a8:	6c696620 	stclvs	6, cr6, [r9], #-128	; 0xffffff80
100060ac:	25222065 	strcs	r2, [r2, #-101]!	; 0xffffff9b
100060b0:	202c2273 	eorcs	r2, ip, r3, ror r2
100060b4:	656e696c 	strbvs	r6, [lr, #-2412]!	; 0xfffff694
100060b8:	25642520 	strbcs	r2, [r4, #-1312]!	; 0xfffffae0
100060bc:	0a732573 	beq	11ccf690 <__copy_table_end__+0x1cc9450>
100060c0:	00000000 	andeq	r0, r0, r0

100060c4 <__sf_fake_stderr>:
	...

100060e4 <__sf_fake_stdin>:
	...

10006104 <__sf_fake_stdout>:
	...
10006124:	2b302d23 	blcs	10c115b8 <__copy_table_end__+0xc0b378>
10006128:	6c680020 	stclvs	0, cr0, [r8], #-128	; 0xffffff80
1000612c:	6665004c 	strbtvs	r0, [r5], -ip, asr #32
10006130:	47464567 	strbmi	r4, [r6, -r7, ror #10]
10006134:	32313000 	eorscc	r3, r1, #0
10006138:	36353433 			; <UNDEFINED> instruction: 0x36353433
1000613c:	41393837 	teqmi	r9, r7, lsr r8
10006140:	45444342 	strbmi	r4, [r4, #-834]	; 0xfffffcbe
10006144:	31300046 	teqcc	r0, r6, asr #32
10006148:	35343332 	ldrcc	r3, [r4, #-818]!	; 0xfffffcce
1000614c:	39383736 	ldmdbcc	r8!, {r1, r2, r4, r5, r8, r9, sl, ip, sp}
10006150:	64636261 	strbtvs	r6, [r3], #-609	; 0xfffffd9f
10006154:	00006665 	andeq	r6, r0, r5, ror #12

10006158 <__EH_FRAME_BEGIN__>:
10006158:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.extab:

1000615c <__exidx_start-0x18>:
1000615c:	8101b108 	tsthi	r1, r8, lsl #2
10006160:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10006164:	00000000 	andeq	r0, r0, r0
10006168:	8101b108 	tsthi	r1, r8, lsl #2
1000616c:	8400b0b0 	strhi	fp, [r0], #-176	; 0xffffff50
10006170:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.exidx:

10006174 <__exidx_end-0xc0>:
10006174:	7fffce08 	svcvc	0x00ffce08
10006178:	80b0b0b0 	ldrhthi	fp, [r0], r0
1000617c:	7fffce70 	svcvc	0x00ffce70
10006180:	00000001 	andeq	r0, r0, r1
10006184:	7fffeec8 	svcvc	0x00ffeec8
10006188:	8002a9b0 			; <UNDEFINED> instruction: 0x8002a9b0
1000618c:	7fffef5c 	svcvc	0x00ffef5c
10006190:	80a8b0b0 	strhthi	fp, [r8], r0
10006194:	7fffefac 	svcvc	0x00ffefac
10006198:	00000001 	andeq	r0, r0, r1
1000619c:	7fffefb8 	svcvc	0x00ffefb8
100061a0:	80aab0b0 	strhthi	fp, [sl], r0
100061a4:	7fffeff0 	svcvc	0x00ffeff0
100061a8:	80b273ae 	adcshi	r7, r2, lr, lsr #7
100061ac:	7ffff0c4 	svcvc	0x00fff0c4
100061b0:	00000001 	andeq	r0, r0, r1
100061b4:	7ffff0c0 	svcvc	0x00fff0c0
100061b8:	80383fab 	eorshi	r3, r8, fp, lsr #31
100061bc:	7ffff120 	svcvc	0x00fff120
100061c0:	00000001 	andeq	r0, r0, r1
100061c4:	7ffff12c 	svcvc	0x00fff12c
100061c8:	80aab0b0 	strhthi	fp, [sl], r0
100061cc:	7ffff168 	svcvc	0x00fff168
100061d0:	00000001 	andeq	r0, r0, r1
100061d4:	7ffff21c 	svcvc	0x00fff21c
100061d8:	80b20eab 	adcshi	r0, r2, fp, lsr #29
100061dc:	7ffff290 	svcvc	0x00fff290
100061e0:	8008afb0 			; <UNDEFINED> instruction: 0x8008afb0
100061e4:	7ffff550 	svcvc	0x00fff550
100061e8:	00000001 	andeq	r0, r0, r1
100061ec:	7ffff554 	svcvc	0x00fff554
100061f0:	80023fad 	andhi	r3, r2, sp, lsr #31
100061f4:	7ffff800 	svcvc	0x00fff800
100061f8:	00000001 	andeq	r0, r0, r1
100061fc:	7ffff9e0 	svcvc	0x00fff9e0
10006200:	8003a8b0 			; <UNDEFINED> instruction: 0x8003a8b0
10006204:	7ffff9f0 	svcvc	0x00fff9f0
10006208:	00000001 	andeq	r0, r0, r1
1000620c:	7ffff9ec 	svcvc	0x00fff9ec
10006210:	8004adb0 			; <UNDEFINED> instruction: 0x8004adb0
10006214:	7ffffcb0 	svcvc	0x00fffcb0
10006218:	80048400 	andhi	r8, r4, r0, lsl #8
1000621c:	7ffffcd8 	svcvc	0x00fffcd8
10006220:	7fffff3c 	svcvc	0x00ffff3c
10006224:	7ffffcdc 	svcvc	0x00fffcdc
10006228:	7fffff40 	svcvc	0x00ffff40
1000622c:	7ffffce8 	svcvc	0x00fffce8
10006230:	00000001 	andeq	r0, r0, r1

Disassembly of section .copy.table:

10006234 <__copy_table_start__>:
10006234:	10006240 	andne	r6, r0, r0, asr #4
10006238:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
1000623c:	0000001d 	andeq	r0, r0, sp, lsl r0

Disassembly of section .data:

38000000 <SystemCoreClock>:
38000000:	017d7840 	cmneq	sp, r0, asr #16

38000004 <_tx_thread_system_state>:
volatile ULONG  _tx_thread_system_state =  TX_INITIALIZE_IN_PROGRESS;
38000004:	f0f0f0f0 			; <UNDEFINED> instruction: 0xf0f0f0f0

38000008 <_impure_ptr>:
38000008:	3800000c 	stmdacc	r0, {r2, r3}

3800000c <impure_data>:
3800000c:	00000000 	andeq	r0, r0, r0
38000010:	100060e4 	andne	r6, r0, r4, ror #1
38000014:	10006104 	andne	r6, r0, r4, lsl #2
38000018:	100060c4 	andne	r6, r0, r4, asr #1
	...

3800006c <__frame_dummy_init_array_entry>:
3800006c:	100007e5 	andne	r0, r0, r5, ror #15

38000070 <__do_global_dtors_aux_fini_array_entry>:
38000070:	100007c1 	andne	r0, r0, r1, asr #15

Disassembly of section .bss:

38000074 <__bss_start__>:
38000074:	00000000 	andeq	r0, r0, r0

38000078 <object.0>:
	...

38000090 <tx_memory.1>:
	...

38001090 <tx_pool.2>:
	...

380010c4 <tx_task.0>:
	...

3800119c <_tx_byte_pool_created_count>:
BYTE_POOL_DECLARE  TX_BYTE_POOL *   _tx_byte_pool_created_ptr;


/* Define the variable that holds the number of created byte pools. */

BYTE_POOL_DECLARE  ULONG            _tx_byte_pool_created_count;
3800119c:	00000000 	andeq	r0, r0, r0

380011a0 <_tx_byte_pool_created_ptr>:
BYTE_POOL_DECLARE  TX_BYTE_POOL *   _tx_byte_pool_created_ptr;
380011a0:	00000000 	andeq	r0, r0, r0

380011a4 <_tx_initialize_unused_memory>:
VOID     *_tx_initialize_unused_memory;
380011a4:	00000000 	andeq	r0, r0, r0

380011a8 <_tx_build_options>:
ULONG           _tx_build_options;
380011a8:	00000000 	andeq	r0, r0, r0

380011ac <_tx_thread_application_stack_error_handler>:
VOID            (*_tx_thread_application_stack_error_handler)(TX_THREAD *thread_ptr);
380011ac:	00000000 	andeq	r0, r0, r0

380011b0 <_tx_thread_created_count>:
ULONG           _tx_thread_created_count;
380011b0:	00000000 	andeq	r0, r0, r0

380011b4 <_tx_thread_created_ptr>:
TX_THREAD *     _tx_thread_created_ptr;
380011b4:	00000000 	andeq	r0, r0, r0

380011b8 <_tx_thread_current_ptr>:
TX_THREAD *     _tx_thread_current_ptr;
380011b8:	00000000 	andeq	r0, r0, r0

380011bc <_tx_thread_execute_ptr>:
TX_THREAD *     _tx_thread_execute_ptr;
380011bc:	00000000 	andeq	r0, r0, r0

380011c0 <_tx_thread_highest_priority>:
UINT            _tx_thread_highest_priority;
380011c0:	00000000 	andeq	r0, r0, r0

380011c4 <_tx_thread_mutex_release>:
VOID            (*_tx_thread_mutex_release)(TX_THREAD *thread_ptr);
380011c4:	00000000 	andeq	r0, r0, r0

380011c8 <_tx_thread_performance__execute_log_index>:
ULONG           _tx_thread_performance__execute_log_index;
380011c8:	00000000 	andeq	r0, r0, r0

380011cc <_tx_thread_performance_execute_log>:
	...

380011ec <_tx_thread_performance_idle_return_count>:
ULONG           _tx_thread_performance_idle_return_count;
380011ec:	00000000 	andeq	r0, r0, r0

380011f0 <_tx_thread_performance_interrupt_preemption_count>:
ULONG           _tx_thread_performance_interrupt_preemption_count;
380011f0:	00000000 	andeq	r0, r0, r0

380011f4 <_tx_thread_performance_non_idle_return_count>:
ULONG           _tx_thread_performance_non_idle_return_count;
380011f4:	00000000 	andeq	r0, r0, r0

380011f8 <_tx_thread_performance_resume_count>:
ULONG           _tx_thread_performance_resume_count;
380011f8:	00000000 	andeq	r0, r0, r0

380011fc <_tx_thread_performance_solicited_preemption_count>:
ULONG           _tx_thread_performance_solicited_preemption_count;
380011fc:	00000000 	andeq	r0, r0, r0

38001200 <_tx_thread_performance_suspend_count>:
ULONG           _tx_thread_performance_suspend_count;
38001200:	00000000 	andeq	r0, r0, r0

38001204 <_tx_thread_performance_time_slice_count>:
ULONG           _tx_thread_performance_time_slice_count;
38001204:	00000000 	andeq	r0, r0, r0

38001208 <_tx_thread_performance_timeout_count>:
ULONG           _tx_thread_performance_timeout_count;
38001208:	00000000 	andeq	r0, r0, r0

3800120c <_tx_thread_preempt_disable>:
volatile UINT   _tx_thread_preempt_disable;
3800120c:	00000000 	andeq	r0, r0, r0

38001210 <_tx_thread_priority_list>:
	...

38001290 <_tx_thread_priority_maps>:
ULONG           _tx_thread_priority_maps[TX_MAX_PRIORITIES/32];
38001290:	00000000 	andeq	r0, r0, r0

38001294 <_tx_thread_system_stack_ptr>:
VOID *          _tx_thread_system_stack_ptr;
38001294:	00000000 	andeq	r0, r0, r0

38001298 <_tx_timer_current_ptr>:
TX_TIMER_INTERNAL   **_tx_timer_current_ptr;
38001298:	00000000 	andeq	r0, r0, r0

3800129c <_tx_timer_expired>:
UINT                _tx_timer_expired;
3800129c:	00000000 	andeq	r0, r0, r0

380012a0 <_tx_timer_expired_time_slice>:
UINT                _tx_timer_expired_time_slice;
380012a0:	00000000 	andeq	r0, r0, r0

380012a4 <_tx_timer_expired_timer_ptr>:
TX_TIMER_INTERNAL  *_tx_timer_expired_timer_ptr;
380012a4:	00000000 	andeq	r0, r0, r0

380012a8 <_tx_timer_list>:
	...

38001328 <_tx_timer_list_end>:
TX_TIMER_INTERNAL   **_tx_timer_list_end;
38001328:	00000000 	andeq	r0, r0, r0

3800132c <_tx_timer_list_start>:
TX_TIMER_INTERNAL   **_tx_timer_list_start;
3800132c:	00000000 	andeq	r0, r0, r0

38001330 <_tx_timer_performance__expiration_adjust_count>:
ULONG               _tx_timer_performance__expiration_adjust_count;
38001330:	00000000 	andeq	r0, r0, r0

38001334 <_tx_timer_performance_expiration_count>:
ULONG               _tx_timer_performance_expiration_count;
38001334:	00000000 	andeq	r0, r0, r0

38001338 <_tx_timer_performance_reactivate_count>:
ULONG               _tx_timer_performance_reactivate_count;
38001338:	00000000 	andeq	r0, r0, r0

3800133c <_tx_timer_priority>:
UINT                _tx_timer_priority;
3800133c:	00000000 	andeq	r0, r0, r0

38001340 <_tx_timer_stack_size>:
ULONG               _tx_timer_stack_size;
38001340:	00000000 	andeq	r0, r0, r0

38001344 <_tx_timer_stack_start>:
VOID                *_tx_timer_stack_start;
38001344:	00000000 	andeq	r0, r0, r0

38001348 <_tx_timer_system_clock>:
volatile ULONG      _tx_timer_system_clock;
38001348:	00000000 	andeq	r0, r0, r0

3800134c <_tx_timer_thread>:
	...

38001424 <_tx_timer_thread_stack_area>:
	...

38002424 <_tx_timer_time_slice>:
ULONG               _tx_timer_time_slice;
38002424:	00000000 	andeq	r0, r0, r0

38002428 <__sbrk_heap_end>:
static uint8_t *__sbrk_heap_end = NULL;
38002428:	00000000 	andeq	r0, r0, r0

3800242c <__lock___malloc_recursive_mutex>:
	...

3800242d <__lock___sfp_recursive_mutex>:
	...

3800242e <__lock___sinit_recursive_mutex>:
	...

38002430 <__malloc_free_list>:
38002430:	00000000 	andeq	r0, r0, r0

38002434 <__malloc_sbrk_start>:
38002434:	00000000 	andeq	r0, r0, r0

38002438 <errno>:
38002438:	00000000 	andeq	r0, r0, r0

Disassembly of section .heap:

3800243c <__end__-0x4>:
3800243c:	00000000 	andeq	r0, r0, r0

38002440 <__end__>:
	...

Disassembly of section .stack:

380ff000 <__StackLimit>:
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	00003541 	andeq	r3, r0, r1, asr #10
   4:	61656100 	cmnvs	r5, r0, lsl #2
}
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	0000002b 	andeq	r0, r0, fp, lsr #32
}
  10:	4d2d3805 	stcmi	8, cr3, [sp, #-20]!	; 0xffffffec
  14:	49414d2e 	stmdbmi	r1, {r1, r2, r3, r5, r8, sl, fp, lr}^
size_t uart_recv(uint8_t* buffer, size_t size) {
    uint8_t ch = 0;
    size_t it = 0;
    while (1) {
        ch = getchar();
        if(ch == '\n' || it >= size) {
  18:	1106004e 	tstne	r6, lr, asr #32
        }
        buffer[it] = ch;
        it = it + 1;
    }
    return (it + 1);
}
  1c:	03094d07 	movweq	r4, #40199	; 0x9d07
  va_start(va, format);
  const out_fct_wrap_type out_fct_wrap = { out, arg };
  const int ret = _vsnprintf(_out_fct, (char*)(uintptr_t)&out_fct_wrap, (size_t)-1, format, va);
  va_end(va);
  return ret;
}
  20:	0412080a 	ldreq	r0, [r2], #-2058	; 0xfffff7f6
  24:	01150114 	tsteq	r5, r4, lsl r1
  28:	01180317 	tsteq	r8, r7, lsl r3
  2c:	011b011a 	tsteq	fp, sl, lsl r1
                thread_ptr -> tx_thread_performance_resume_count++;
  30:	0122011c 			; <UNDEFINED> instruction: 0x0122011c
  34:	Address 0x00000034 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	3a434347 	bcc	10d0d24 <__RAM_SIZE+0xfd0d24>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
}
   8:	72412055 	subvc	r2, r1, #85	; 0x55
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
        if(ch == '\n' || it >= size) {
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
}
  1c:	6e696168 	powvsez	f6, f1, #0.0
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
        _tx_thread_system_ni_resume(thread_ptr);
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
    __asm__ volatile ("MSR  PRIMASK,%0": : "r" (int_posture): "memory");
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	00000beb 	andeq	r0, r0, fp, ror #23
       4:	00000002 	andeq	r0, r0, r2
}
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	0000003d 	andeq	r0, r0, sp, lsr r0
      10:	0004f60c 	andeq	pc, r4, ip, lsl #12
      14:	00065c00 	andeq	r5, r6, r0, lsl #24
	...
      28:	06010200 	streq	r0, [r1], -r0, lsl #4
      2c:	0000086d 	andeq	r0, r0, sp, ror #16
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	6b080102 	blvs	200440 <__RAM_SIZE+0x100440>
      34:	02000008 	andeq	r0, r0, #8
        _tx_thread_system_ni_resume(thread_ptr);
      38:	06cf0502 	strbeq	r0, [pc], r2, lsl #10
      3c:	02020000 	andeq	r0, r2, #0
}
      40:	00093907 	andeq	r3, r9, r7, lsl #18
      44:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      48:	000004ed 	andeq	r0, r0, sp, ror #9
      4c:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
      50:	02000002 	andeq	r0, r0, #2
      54:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
      58:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      5c:	00022f07 	andeq	r2, r2, r7, lsl #30
      60:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
      64:	00746e69 	rsbseq	r6, r4, r9, ror #28
      68:	39070402 	stmdbcc	r7, {r1, sl}
      6c:	02000002 	andeq	r0, r0, #2
      70:	063e0408 	ldrteq	r0, [lr], -r8, lsl #8
      74:	04040000 	streq	r0, [r4], #-0
      78:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
      7c:	05000008 	streq	r0, [r0, #-8]
      80:	00000078 	andeq	r0, r0, r8, ror r0
      84:	0008fa06 	andeq	pc, r8, r6, lsl #20
      88:	31730200 	cmncc	r3, r0, lsl #4
      8c:	00000078 	andeq	r0, r0, r8, ror r0
      90:	0008f906 	andeq	pc, r8, r6, lsl #18
      94:	31740200 	cmncc	r4, r0, lsl #4
      98:	00000030 	andeq	r0, r0, r0, lsr r0
      9c:	00079a06 	andeq	r9, r7, r6, lsl #20
      a0:	31760200 	cmncc	r6, r0, lsl #4
      a4:	00000068 	andeq	r0, r0, r8, rrx
      a8:	00072c06 	andeq	r2, r7, r6, lsl #24
      ac:	31780200 	cmncc	r8, r0, lsl #4
      b0:	0000004c 	andeq	r0, r0, ip, asr #32
      b4:	00053b07 	andeq	r3, r5, r7, lsl #22
      b8:	82031c00 	andhi	r1, r3, #0, 24
      bc:	01331001 	teqeq	r3, r1
      c0:	2d080000 	stccs	0, cr0, [r8, #-0]
      c4:	03000008 	movweq	r0, #8
      c8:	a8190186 	ldmdage	r9, {r1, r2, r7, r8}
      cc:	02000000 	andeq	r0, r0, #0
      d0:	a0080023 	andge	r0, r8, r3, lsr #32
      d4:	03000003 	movweq	r0, #3
      d8:	a8190187 	ldmdage	r9, {r0, r1, r2, r7, r8}
      dc:	02000000 	andeq	r0, r0, #0
      e0:	3d080423 	cfstrscc	mvf0, [r8, #-140]	; 0xffffff74
      e4:	03000004 	movweq	r0, #4
      e8:	3f1b018a 	svccc	0x001b018a
      ec:	02000001 	andeq	r0, r0, #1
      f0:	f2080823 	vadd.i8	d0, d8, d19
      f4:	03000001 	movweq	r0, #1
      f8:	a819018b 	ldmdage	r9, {r0, r1, r3, r7, r8}
      fc:	02000000 	andeq	r0, r0, #0
     100:	6f080c23 	svcvs	0x00080c23
     104:	03000009 	movweq	r0, #9
     108:	451a0191 	ldrmi	r0, [sl, #-401]	; 0xfffffe6f
     10c:	02000001 	andeq	r0, r0, #1
     110:	1b081023 	blne	2041a4 <__RAM_SIZE+0x1041a4>
     114:	03000000 	movweq	r0, #0
     118:	451a0192 	ldrmi	r0, [sl, #-402]	; 0xfffffe6e
     11c:	02000001 	andeq	r0, r0, #1
     120:	09081423 	stmdbeq	r8, {r0, r1, r5, sl, ip}
     124:	03000006 	movweq	r0, #6
     128:	4b1b0196 	blmi	6c0788 <__RAM_SIZE+0x5c0788>
     12c:	02000001 	andeq	r0, r0, #1
     130:	09001823 	stmdbeq	r0, {r0, r1, r5, fp, ip}
     134:	00013f01 	andeq	r3, r1, r1, lsl #30
     138:	00a80a00 	adceq	r0, r8, r0, lsl #20
     13c:	0b000000 	bleq	144 <__STACKSEAL_SIZE+0x144>
     140:	00013304 	andeq	r3, r1, r4, lsl #6
     144:	b4040b00 	strlt	r0, [r4], #-2816	; 0xfffff500
     148:	0b000000 	bleq	150 <__STACKSEAL_SIZE+0x150>
     14c:	00014504 	andeq	r4, r1, r4, lsl #10
     150:	064a0c00 	strbeq	r0, [sl], -r0, lsl #24
     154:	9b030000 	blls	c015c <SYSTICK_CYCLES+0x9711d>
     158:	00b40301 	adcseq	r0, r4, r1, lsl #6
     15c:	040b0000 	streq	r0, [fp], #-0
     160:	00000084 	andeq	r0, r0, r4, lsl #1
     164:	00034b07 	andeq	r4, r3, r7, lsl #22
     168:	d603d800 	strle	sp, [r3], -r0, lsl #16
     16c:	04891001 	streq	r1, [r9], #1
     170:	2c080000 	stccs	0, cr0, [r8], {-0}
     174:	03000009 	movweq	r0, #9
     178:	a81901dd 	ldmdage	r9, {r0, r2, r3, r4, r6, r7, r8}
     17c:	02000000 	andeq	r0, r0, #0
     180:	9f080023 	svcls	0x00080023
     184:	03000007 	movweq	r0, #7
     188:	a81901de 	ldmdage	r9, {r1, r2, r3, r4, r6, r7, r8}
     18c:	02000000 	andeq	r0, r0, #0
     190:	bc080423 	cfstrslt	mvf0, [r8], {35}	; 0x23
     194:	03000001 	movweq	r0, #1
     198:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
     19c:	02000000 	andeq	r0, r0, #0
     1a0:	16080823 	strne	r0, [r8], -r3, lsr #16
     1a4:	03000009 	movweq	r0, #9
     1a8:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
     1ac:	02000000 	andeq	r0, r0, #0
     1b0:	11080c23 	tstne	r8, r3, lsr #24
     1b4:	03000004 	movweq	r0, #4
     1b8:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
     1bc:	02000000 	andeq	r0, r0, #0
     1c0:	5a081023 	bpl	204254 <__RAM_SIZE+0x104254>
     1c4:	03000009 	movweq	r0, #9
     1c8:	a81901e2 	ldmdage	r9, {r1, r5, r6, r7, r8}
     1cc:	02000000 	andeq	r0, r0, #0
     1d0:	e2081423 	and	r1, r8, #587202560	; 0x23000000
     1d4:	03000021 	movweq	r0, #33	; 0x21
     1d8:	a81901e3 	ldmdage	r9, {r0, r1, r5, r6, r7, r8}
     1dc:	02000000 	andeq	r0, r0, #0
     1e0:	25081823 	strcs	r1, [r8, #-2083]	; 0xfffff7dd
     1e4:	03000006 	movweq	r0, #6
     1e8:	a81901e4 	ldmdage	r9, {r2, r5, r6, r7, r8}
     1ec:	02000000 	andeq	r0, r0, #0
     1f0:	ba081c23 	blt	207284 <__RAM_SIZE+0x107284>
     1f4:	03000006 	movweq	r0, #6
     1f8:	891a01e8 	ldmdbhi	sl, {r3, r5, r6, r7, r8}
     1fc:	02000004 	andeq	r0, r0, #4
     200:	99082023 	stmdbls	r8, {r0, r1, r5, sp}
     204:	03000001 	movweq	r0, #1
     208:	891a01e9 	ldmdbhi	sl, {r0, r3, r5, r6, r7, r8}
     20c:	02000004 	andeq	r0, r0, #4
     210:	b1082423 	tstlt	r8, r3, lsr #8
     214:	03000005 	movweq	r0, #5
     218:	5e1a01f1 	mrcpl	1, 0, r0, cr10, cr1, {7}
     21c:	02000001 	andeq	r0, r0, #1
     220:	d9082823 	stmdble	r8, {r0, r1, r5, fp, sp}
     224:	03000002 	movweq	r0, #2
     228:	9c1901f2 	ldflss	f0, [r9], {242}	; 0xf2
     22c:	02000000 	andeq	r0, r0, #0
     230:	46082c23 	strmi	r2, [r8], -r3, lsr #24
     234:	03000002 	movweq	r0, #2
     238:	9c1901f3 	ldflss	f0, [r9], {243}	; 0xf3
     23c:	02000000 	andeq	r0, r0, #0
     240:	73083023 	movwvc	r3, #32803	; 0x8023
     244:	03000001 	movweq	r0, #1
     248:	9c1901f4 	ldflss	f0, [r9], {244}	; 0xf4
     24c:	02000000 	andeq	r0, r0, #0
     250:	4b083423 	blmi	20d2e4 <__RAM_SIZE+0x10d2e4>
     254:	03000007 	movweq	r0, #7
     258:	9c1901f5 	ldflss	f0, [r9], {245}	; 0xf5
     25c:	02000000 	andeq	r0, r0, #0
     260:	eb083823 	bl	20e2f4 <__RAM_SIZE+0x10e2f4>
     264:	03000000 	movweq	r0, #0
     268:	9c1901f6 	ldflss	f0, [r9], {246}	; 0xf6
     26c:	02000000 	andeq	r0, r0, #0
     270:	5c083c23 	stcpl	12, cr3, [r8], {35}	; 0x23
     274:	03000003 	movweq	r0, #3
     278:	a01b01fb 			; <UNDEFINED> instruction: 0xa01b01fb
     27c:	02000004 	andeq	r0, r0, #4
     280:	52084023 	andpl	r4, r8, #35	; 0x23
     284:	03000001 	movweq	r0, #1
     288:	3f1b0203 	svccc	0x001b0203
     28c:	02000001 	andeq	r0, r0, #1
     290:	07084423 	streq	r4, [r8, -r3, lsr #8]
     294:	03000001 	movweq	r0, #1
     298:	a8190204 	ldmdage	r9, {r2, r9}
     29c:	02000000 	andeq	r0, r0, #0
     2a0:	3b084823 	blcc	212334 <__RAM_SIZE+0x112334>
     2a4:	03000003 	movweq	r0, #3
     2a8:	51190208 	tstpl	r9, r8, lsl #4
     2ac:	02000001 	andeq	r0, r0, #1
     2b0:	ec084c23 	stc	12, cr4, [r8], {35}	; 0x23
     2b4:	03000002 	movweq	r0, #2
     2b8:	a01b020e 	andsge	r0, fp, lr, lsl #4
     2bc:	02000004 	andeq	r0, r0, #4
     2c0:	e9086823 	stmdb	r8, {r0, r1, r5, fp, sp, lr}
     2c4:	03000005 	movweq	r0, #5
     2c8:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
     2cc:	02000000 	andeq	r0, r0, #0
     2d0:	32086c23 	andcc	r6, r8, #8960	; 0x2300
     2d4:	03000007 	movweq	r0, #7
     2d8:	891a0211 	ldmdbhi	sl, {r0, r4, r9}
     2dc:	02000004 	andeq	r0, r0, #4
     2e0:	12087023 	andne	r7, r8, #35	; 0x23
     2e4:	03000002 	movweq	r0, #2
     2e8:	891a0212 	ldmdbhi	sl, {r1, r4, r9}
     2ec:	02000004 	andeq	r0, r0, #4
     2f0:	15087423 	strne	r7, [r8, #-1059]	; 0xfffffbdd
     2f4:	03000007 	movweq	r0, #7
     2f8:	a8190213 	ldmdage	r9, {r0, r1, r4, r9}
     2fc:	02000000 	andeq	r0, r0, #0
     300:	c6087823 	strgt	r7, [r8], -r3, lsr #16
     304:	03000003 	movweq	r0, #3
     308:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
     30c:	02000000 	andeq	r0, r0, #0
     310:	54087c23 	strpl	r7, [r8], #-3107	; 0xfffff3dd
     314:	03000005 	movweq	r0, #5
     318:	9c190215 	lfmls	f0, 4, [r9], {21}
     31c:	03000000 	movweq	r0, #0
     320:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
     324:	000003e8 	andeq	r0, r0, r8, ror #7
     328:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
     32c:	0000009c 	muleq	r0, ip, r0
     330:	01842303 	orreq	r2, r4, r3, lsl #6
     334:	0008ff08 	andeq	pc, r8, r8, lsl #30
     338:	021f0300 	andseq	r0, pc, #0, 6
     33c:	0004891a 	andeq	r8, r4, sl, lsl r9
     340:	88230300 	stmdahi	r3!, {r8, r9}
     344:	07f00801 	ldrbeq	r0, [r0, r1, lsl #16]!
     348:	20030000 	andcs	r0, r3, r0
     34c:	04891a02 	streq	r1, [r9], #2562	; 0xa02
     350:	23030000 	movwcs	r0, #12288	; 0x3000
     354:	c108018c 	smlabbgt	r8, ip, r1, r0
     358:	03000002 	movweq	r0, #2
     35c:	9c19022e 	lfmls	f0, 4, [r9], {46}	; 0x2e
     360:	03000000 	movweq	r0, #0
     364:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
     368:	00000256 	andeq	r0, r0, r6, asr r2
     36c:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
     370:	0000009c 	muleq	r0, ip, r0
     374:	01942303 	orrseq	r2, r4, r3, lsl #6
     378:	00032008 	andeq	r2, r3, r8
     37c:	02300300 	eorseq	r0, r0, #0, 6
     380:	00009c19 	andeq	r9, r0, r9, lsl ip
     384:	98230300 	stmdals	r3!, {r8, r9}
     388:	02770801 	rsbseq	r0, r7, #65536	; 0x10000
     38c:	33030000 	movwcc	r0, #12288	; 0x3000
     390:	009c1902 	addseq	r1, ip, r2, lsl #18
     394:	23030000 	movwcs	r0, #12288	; 0x3000
     398:	0008019c 	muleq	r8, ip, r1
     39c:	03000000 	movweq	r0, #0
     3a0:	851a0235 	ldrhi	r0, [sl, #-565]	; 0xfffffdcb
     3a4:	03000005 	movweq	r0, #5
     3a8:	0801a023 	stmdaeq	r1, {r0, r1, r5, sp, pc}
     3ac:	00001bc8 	andeq	r1, r0, r8, asr #23
     3b0:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
     3b4:	000000a8 	andeq	r0, r0, r8, lsr #1
     3b8:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
     3bc:	001c8808 	andseq	r8, ip, r8, lsl #16
     3c0:	023d0300 	eorseq	r0, sp, #0, 6
     3c4:	0000a819 	andeq	sl, r0, r9, lsl r8
     3c8:	a8230300 	stmdage	r3!, {r8, r9}
     3cc:	1b410801 	blne	10423d8 <__RAM_SIZE+0xf423d8>
     3d0:	41030000 	mrsmi	r0, (UNDEF: 3)
     3d4:	00a81902 	adceq	r1, r8, r2, lsl #18
     3d8:	23030000 	movwcs	r0, #12288	; 0x3000
     3dc:	3f0801ac 	svccc	0x000801ac
     3e0:	0300001d 	movweq	r0, #29
     3e4:	a8190245 	ldmdage	r9, {r0, r2, r6, r9}
     3e8:	03000000 	movweq	r0, #0
     3ec:	0801b023 	stmdaeq	r1, {r0, r1, r5, ip, sp, pc}
     3f0:	00001c58 	andeq	r1, r0, r8, asr ip
     3f4:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
     3f8:	000000a8 	andeq	r0, r0, r8, lsr #1
     3fc:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
     400:	0007c308 	andeq	ip, r7, r8, lsl #6
     404:	024c0300 	subeq	r0, ip, #0, 6
     408:	0004891a 	andeq	r8, r4, sl, lsl r9
     40c:	b8230300 	stmdalt	r3!, {r8, r9}
     410:	1d170801 	ldcne	8, cr0, [r7, #-4]
     414:	4f030000 	svcmi	0x00030000
     418:	00a81902 	adceq	r1, r8, r2, lsl #18
     41c:	23030000 	movwcs	r0, #12288	; 0x3000
     420:	190801bc 	stmdbne	r8, {r2, r3, r4, r5, r7, r8}
     424:	0300001b 	movweq	r0, #27
     428:	a8190252 	ldmdage	r9, {r1, r4, r6, r9}
     42c:	03000000 	movweq	r0, #0
     430:	0801c023 	stmdaeq	r1, {r0, r1, r5, lr, pc}
     434:	00001a96 	muleq	r0, r6, sl
     438:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
     43c:	000000a8 	andeq	r0, r0, r8, lsr #1
     440:	01c42303 	biceq	r2, r4, r3, lsl #6
     444:	001bec08 	andseq	lr, fp, r8, lsl #24
     448:	02590300 	subseq	r0, r9, #0, 6
     44c:	0000a819 	andeq	sl, r0, r9, lsl r8
     450:	c8230300 	stmdagt	r3!, {r8, r9}
     454:	09c40801 	stmibeq	r4, {r0, fp}^
     458:	5d030000 	stcpl	0, cr0, [r3, #-0]
     45c:	00761a02 	rsbseq	r1, r6, r2, lsl #20
     460:	23030000 	movwcs	r0, #12288	; 0x3000
     464:	810801cc 	smlabthi	r8, ip, r1, r0
     468:	03000004 	movweq	r0, #4
     46c:	a8190278 	ldmdage	r9, {r3, r4, r5, r6, r9}
     470:	03000000 	movweq	r0, #0
     474:	0801d023 	stmdaeq	r1, {r0, r1, r5, ip, lr, pc}
     478:	0000056d 	andeq	r0, r0, sp, ror #10
     47c:	19027d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp, lr}
     480:	000000a8 	andeq	r0, r0, r8, lsr #1
     484:	01d42303 	bicseq	r2, r4, r3, lsl #6
     488:	64040b00 	strvs	r0, [r4], #-2816	; 0xfffff500
     48c:	09000001 	stmdbeq	r0, {r0}
     490:	0004a001 	andeq	sl, r4, r1
     494:	04890a00 	streq	r0, [r9], #2560	; 0xa00
     498:	a80a0000 	stmdage	sl, {}	; <UNPREDICTABLE>
     49c:	00000000 	andeq	r0, r0, r0
     4a0:	048f040b 	streq	r0, [pc], #1035	; 4a8 <STACK_SIZE+0xa8>
     4a4:	b3070000 	movwlt	r0, #28672	; 0x7000
     4a8:	34000007 	strcc	r0, [r0], #-7
     4ac:	10037e03 	andne	r7, r3, r3, lsl #28
     4b0:	00000585 	andeq	r0, r0, r5, lsl #11
     4b4:	00018d08 	andeq	r8, r1, r8, lsl #26
     4b8:	03820300 	orreq	r0, r2, #0, 6
     4bc:	0000a819 	andeq	sl, r0, r9, lsl r8
     4c0:	00230200 	eoreq	r0, r3, r0, lsl #4
     4c4:	00089708 	andeq	r9, r8, r8, lsl #14
     4c8:	03850300 	orreq	r0, r5, #0, 6
     4cc:	00015e1a 	andeq	r5, r1, sl, lsl lr
     4d0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     4d4:	0006fc08 	andeq	pc, r6, r8, lsl #24
     4d8:	03880300 	orreq	r0, r8, #0, 6
     4dc:	00009c19 	andeq	r9, r0, r9, lsl ip
     4e0:	08230200 	stmdaeq	r3!, {r9}
     4e4:	0004cb08 	andeq	ip, r4, r8, lsl #22
     4e8:	038c0300 	orreq	r0, ip, #0, 6
     4ec:	0006901a 	andeq	r9, r6, sl, lsl r0
     4f0:	0c230200 	sfmeq	f0, 4, [r3], #-0
     4f4:	00016208 	andeq	r6, r1, r8, lsl #4
     4f8:	03900300 	orrseq	r0, r0, #0, 6
     4fc:	00009c19 	andeq	r9, r0, r9, lsl ip
     500:	10230200 	eorne	r0, r3, r0, lsl #4
     504:	00012108 	andeq	r2, r1, r8, lsl #2
     508:	03930300 	orrseq	r0, r3, #0, 6
     50c:	00009c19 	andeq	r9, r0, r9, lsl ip
     510:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     514:	0008cd08 	andeq	ip, r8, r8, lsl #26
     518:	03980300 	orrseq	r0, r8, #0, 6
     51c:	0004891a 	andeq	r8, r4, sl, lsl r9
     520:	18230200 	stmdane	r3!, {r9}
     524:	0006e308 	andeq	lr, r6, r8, lsl #6
     528:	03990300 	orrseq	r0, r9, #0, 6
     52c:	00009c19 	andeq	r9, r0, r9, lsl ip
     530:	1c230200 	sfmne	f0, 4, [r3], #-0
     534:	0005d308 	andeq	sp, r5, r8, lsl #6
     538:	039d0300 	orrseq	r0, sp, #0, 6
     53c:	0005851a 	andeq	r8, r5, sl, lsl r5
     540:	20230200 	eorcs	r0, r3, r0, lsl #4
     544:	0006a008 	andeq	sl, r6, r8
     548:	039e0300 	orrseq	r0, lr, #0, 6
     54c:	0005851a 	andeq	r8, r5, sl, lsl r5
     550:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     554:	0001d008 	andeq	sp, r1, r8
     558:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
     55c:	00009c19 	andeq	r9, r0, r9, lsl ip
     560:	28230200 	stmdacs	r3!, {r9}
     564:	0009e008 	andeq	lr, r9, r8
     568:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
     56c:	0005851a 	andeq	r8, r5, sl, lsl r5
     570:	2c230200 	sfmcs	f0, 4, [r3], #-0
     574:	00042508 	andeq	r2, r4, r8, lsl #10
     578:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
     57c:	0005851a 	andeq	r8, r5, sl, lsl r5
     580:	30230200 	eorcc	r0, r3, r0, lsl #4
     584:	a6040b00 	strge	r0, [r4], -r0, lsl #22
     588:	0c000004 	stceq	0, cr0, [r0], {4}
     58c:	000008ef 	andeq	r0, r0, pc, ror #17
     590:	03028603 	movweq	r8, #9731	; 0x2603
     594:	00000164 	andeq	r0, r0, r4, ror #2
     598:	0090040b 	addseq	r0, r0, fp, lsl #8
     59c:	60070000 	andvs	r0, r7, r0
     5a0:	34000004 	strcc	r0, [r0], #-4
     5a4:	1002d903 	andne	sp, r2, r3, lsl #18
     5a8:	0000067d 	andeq	r0, r0, sp, ror r6
     5ac:	00040108 	andeq	r0, r4, r8, lsl #2
     5b0:	02dd0300 	sbcseq	r0, sp, #0, 6
     5b4:	0000a819 	andeq	sl, r0, r9, lsl r8
     5b8:	00230200 	eoreq	r0, r3, r0, lsl #4
     5bc:	00037408 	andeq	r7, r3, r8, lsl #8
     5c0:	02e00300 	rsceq	r0, r0, #0, 6
     5c4:	00015e1a 	andeq	r5, r1, sl, lsl lr
     5c8:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     5cc:	00077008 	andeq	r7, r7, r8
     5d0:	02e30300 	rsceq	r0, r3, #0, 6
     5d4:	0000a819 	andeq	sl, r0, r9, lsl r8
     5d8:	08230200 	stmdaeq	r3!, {r9}
     5dc:	0008b608 	andeq	fp, r8, r8, lsl #12
     5e0:	02e60300 	rsceq	r0, r6, #0, 6
     5e4:	00009c19 	andeq	r9, r0, r9, lsl ip
     5e8:	0c230200 	sfmeq	f0, 4, [r3], #-0
     5ec:	00080b08 	andeq	r0, r8, r8, lsl #22
     5f0:	02e90300 	rsceq	r0, r9, #0, 6
     5f4:	0005981a 	andeq	r9, r5, sl, lsl r8
     5f8:	10230200 	eorne	r0, r3, r0, lsl #4
     5fc:	00111308 	andseq	r1, r1, r8, lsl #6
     600:	02ed0300 	rsceq	r0, sp, #0, 6
     604:	0005981a 	andeq	r9, r5, sl, lsl r8
     608:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     60c:	00052808 	andeq	r2, r5, r8, lsl #16
     610:	02f00300 	rscseq	r0, r0, #0, 6
     614:	0005981a 	andeq	r9, r5, sl, lsl r8
     618:	18230200 	stmdane	r3!, {r9}
     61c:	00030608 	andeq	r0, r3, r8, lsl #12
     620:	02f30300 	rscseq	r0, r3, #0, 6
     624:	0000a819 	andeq	sl, r0, r9, lsl r8
     628:	1c230200 	sfmne	f0, 4, [r3], #-0
     62c:	00098d08 	andeq	r8, r9, r8, lsl #26
     630:	02f90300 	rscseq	r0, r9, #0, 6
     634:	0004891a 	andeq	r8, r4, sl, lsl r9
     638:	20230200 	eorcs	r0, r3, r0, lsl #4
     63c:	0004ae08 	andeq	sl, r4, r8, lsl #28
     640:	02fe0300 	rscseq	r0, lr, #0, 6
     644:	0004891a 	andeq	r8, r4, sl, lsl r9
     648:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     64c:	00050b08 	andeq	r0, r5, r8, lsl #22
     650:	02ff0300 	rscseq	r0, pc, #0, 6
     654:	00009c19 	andeq	r9, r0, r9, lsl ip
     658:	28230200 	stmdacs	r3!, {r9}
     65c:	0002a708 	andeq	sl, r2, r8, lsl #14
     660:	03030300 	movweq	r0, #13056	; 0x3300
     664:	00067d1a 	andeq	r7, r6, sl, lsl sp
     668:	2c230200 	sfmcs	f0, 4, [r3], #-0
     66c:	00087908 	andeq	r7, r8, r8, lsl #18
     670:	03040300 	movweq	r0, #17152	; 0x4300
     674:	00067d1a 	andeq	r7, r6, sl, lsl sp
     678:	30230200 	eorcc	r0, r3, r0, lsl #4
     67c:	9e040b00 	vmlals.f64	d0, d4, d0
     680:	0c000005 	stceq	0, cr0, [r0], {5}
     684:	00000474 	andeq	r0, r0, r4, ror r4
     688:	03032303 	movweq	r2, #13059	; 0x3303
     68c:	0000059e 	muleq	r0, lr, r5
     690:	058b040b 	streq	r0, [fp, #1035]	; 0x40b
     694:	010d0000 	mrseq	r0, (UNDEF: 13)
     698:	0000094c 	andeq	r0, r0, ip, asr #18
     69c:	01054101 	tsteq	r5, r1, lsl #2
     6a0:	00000061 	andeq	r0, r0, r1, rrx
     6a4:	10000890 	mulne	r0, r0, r8
     6a8:	100008b8 			; <UNDEFINED> instruction: 0x100008b8
     6ac:	00000000 	andeq	r0, r0, r0
     6b0:	00070c01 	andeq	r0, r7, r1, lsl #24
     6b4:	18c80e00 	stmiane	r8, {r9, sl, fp}^
     6b8:	42010000 	andmi	r0, r1, #0
     6bc:	00006109 	andeq	r6, r0, r9, lsl #2
     6c0:	00002600 	andeq	r2, r0, r0, lsl #12
     6c4:	00002000 	andeq	r2, r0, r0
     6c8:	08960f00 	ldmeq	r6, {r8, r9, sl, fp}
     6cc:	0b6b1000 	bleq	1ac46d4 <__RAM_SIZE+0x19c46d4>
     6d0:	9c100000 	ldcls	0, cr0, [r0], {-0}
     6d4:	79100008 	ldmdbvc	r0, {r3}
     6d8:	e900000b 	stmdb	r0, {r0, r1, r3}
     6dc:	11000006 	tstne	r0, r6
     6e0:	03055001 	movweq	r5, #20481	; 0x5001
     6e4:	10005f54 	andne	r5, r0, r4, asr pc
     6e8:	08a00f00 	stmiaeq	r0!, {r8, r9, sl, fp}
     6ec:	0b861000 	bleq	fe1846f4 <__RAM_segment_used_end__+0xc60846f4>
     6f0:	ac120000 	ldcge	0, cr0, [r2], {-0}
     6f4:	95100008 	ldrls	r0, [r0, #-8]
     6f8:	1100000b 	tstne	r0, fp
     6fc:	03055001 	movweq	r5, #20481	; 0x5001
     700:	10005f5c 	andne	r5, r0, ip, asr pc
     704:	02510111 	subseq	r0, r1, #1073741828	; 0x40000004
     708:	00007f74 	andeq	r7, r0, r4, ror pc
     70c:	013c0113 	teqeq	ip, r3, lsl r1
     710:	35010000 	strcc	r0, [r1, #-0]
     714:	081c0106 	ldmdaeq	ip, {r1, r2, r8}
     718:	08901000 	ldmeq	r0, {ip}
     71c:	00501000 	subseq	r1, r0, r0
     720:	3b010000 	blcc	40728 <SYSTICK_CYCLES+0x176e9>
     724:	14000008 	strne	r0, [r0], #-8
     728:	00000293 	muleq	r0, r3, r2
     72c:	76223501 	strtvc	r3, [r2], -r1, lsl #10
     730:	8c000000 	stchi	0, cr0, [r0], {-0}
     734:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
     738:	15000000 	strne	r0, [r0, #-0]
     73c:	000008e6 	andeq	r0, r0, r6, ror #17
     740:	5e0b3601 	cfmadd32pl	mvax0, mvfx3, mvfx11, mvfx1
     744:	02000001 	andeq	r0, r0, #1
     748:	68156c91 	ldmdavs	r5, {r0, r4, r7, sl, fp, sp, lr}
     74c:	01000007 	tsteq	r0, r7
     750:	058b1637 	streq	r1, [fp, #1591]	; 0x637
     754:	03050000 	movweq	r0, #20480	; 0x5000
     758:	380010c4 	stmdacc	r0, {r2, r6, r7, ip}
     75c:	00076015 	andeq	r6, r7, r5, lsl r0
     760:	19380100 	ldmdbne	r8!, {r8}
     764:	00000683 	andeq	r0, r0, r3, lsl #13
     768:	10900305 	addsne	r0, r0, r5, lsl #6
     76c:	b2153800 	andslt	r3, r5, #0, 16
     770:	01000001 	tsteq	r0, r1
     774:	083b1239 	ldmdaeq	fp!, {r0, r3, r4, r5, r9, ip}
     778:	03050000 	movweq	r0, #20480	; 0x5000
     77c:	38000090 	stmdacc	r0, {r4, r7}
     780:	00083810 	andeq	r3, r8, r0, lsl r8
     784:	000ba310 	andeq	sl, fp, r0, lsl r3
     788:	0007b400 	andeq	fp, r7, r0, lsl #8
     78c:	50011100 	andpl	r1, r1, r0, lsl #2
     790:	11007502 	tstne	r0, r2, lsl #10
     794:	03055101 	movweq	r5, #20737	; 0x5101
     798:	10005f44 	andne	r5, r0, r4, asr #30
     79c:	05520111 	ldrbeq	r0, [r2, #-273]	; 0xfffffeef
     7a0:	00009003 	andeq	r9, r0, r3
     7a4:	53011138 	movwpl	r1, #4408	; 0x1138
     7a8:	10000a03 	andne	r0, r0, r3, lsl #20
     7ac:	007d0211 	rsbseq	r0, sp, r1, lsl r2
     7b0:	00340802 	eorseq	r0, r4, r2, lsl #16
     7b4:	00084610 	andeq	r4, r8, r0, lsl r6
     7b8:	000bb210 	andeq	fp, fp, r0, lsl r2
     7bc:	0007db00 	andeq	sp, r7, r0, lsl #22
     7c0:	50011100 	andpl	r1, r1, r0, lsl #2
     7c4:	11007502 	tstne	r0, r2, lsl #10
     7c8:	91025101 	tstls	r2, r1, lsl #2
     7cc:	5201116c 	andpl	r1, r1, #108, 2
     7d0:	04000a03 	streq	r0, [r0], #-2563	; 0xfffff5fd
     7d4:	02530111 	subseq	r0, r3, #1073741828	; 0x40000004
     7d8:	10000074 	andne	r0, r0, r4, ror r0
     7dc:	1000086c 	andne	r0, r0, ip, ror #16
     7e0:	00000bc1 	andeq	r0, r0, r1, asr #23
     7e4:	00000831 	andeq	r0, r0, r1, lsr r8
     7e8:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
     7ec:	0010c403 	andseq	ip, r0, r3, lsl #8
     7f0:	51011138 	tstpl	r1, r8, lsr r1
     7f4:	5f4c0305 	svcpl	0x004c0305
     7f8:	01111000 	tsteq	r1, r0
     7fc:	01030552 	tsteq	r3, r2, asr r5
     800:	11100008 	tstne	r0, r8
     804:	74025301 	strvc	r5, [r2], #-769	; 0xfffffcff
     808:	7d021100 	stfvcs	f1, [r2, #-0]
     80c:	000a0304 	andeq	r0, sl, r4, lsl #6
     810:	7d021104 	stfvcs	f1, [r2, #-16]
     814:	11310108 	teqne	r1, r8, lsl #2
     818:	010c7d02 	tsteq	ip, r2, lsl #26
     81c:	7d021131 	stfvcs	f1, [r2, #-196]	; 0xffffff3c
     820:	113a0110 	teqne	sl, r0, lsl r1
     824:	01147d02 	tsteq	r4, r2, lsl #26
     828:	7d021131 	stfvcs	f1, [r2, #-196]	; 0xffffff3c
     82c:	d8080218 	stmdale	r8, {r3, r4, r9}
     830:	08720f00 	ldmdaeq	r2!, {r8, r9, sl, fp}^
     834:	0bd01000 	bleq	ff40483c <__RAM_segment_used_end__+0xc730483c>
     838:	16000000 	strne	r0, [r0], -r0
     83c:	00000090 	muleq	r0, r0, r0
     840:	0000084c 	andeq	r0, r0, ip, asr #16
     844:	00006817 	andeq	r6, r0, r7, lsl r8
     848:	000fff00 	andeq	pc, pc, r0, lsl #30
     84c:	0004da18 	andeq	sp, r4, r8, lsl sl
     850:	0d2d0100 	stfeqs	f0, [sp, #-0]
     854:	00080001 	andeq	r0, r8, r1
     858:	00081c10 	andeq	r1, r8, r0, lsl ip
     85c:	0000ad10 	andeq	sl, r0, r0, lsl sp
     860:	08bd0100 	ldmfdeq	sp!, {r8}
     864:	29140000 	ldmdbcs	r4, {}	; <UNPREDICTABLE>
     868:	01000026 	tsteq	r0, r6, lsr #32
     86c:	00a8212d 	adceq	r2, r8, sp, lsr #2
     870:	00d10000 	sbcseq	r0, r1, r0
     874:	00cd0000 	sbceq	r0, sp, r0
     878:	180e0000 	stmdane	lr, {}	; <UNPREDICTABLE>
     87c:	01000003 	tsteq	r0, r3
     880:	0061092e 	rsbeq	r0, r1, lr, lsr #18
     884:	00f80000 	rscseq	r0, r8, r0
     888:	00f20000 	rscseq	r0, r2, r0
     88c:	0c100000 	ldceq	0, cr0, [r0], {-0}
     890:	95100008 	ldrls	r0, [r0, #-8]
     894:	ab00000b 	blge	8c8 <__Vectors_Size+0x108>
     898:	11000008 	tstne	r0, r8
     89c:	03055001 	movweq	r5, #20481	; 0x5001
     8a0:	10005f30 	andne	r5, r0, r0, lsr pc
     8a4:	02510111 	subseq	r0, r1, #1073741828	; 0x40000004
     8a8:	12007f74 	andne	r7, r0, #116, 30	; 0x1d0
     8ac:	10000814 	andne	r0, r0, r4, lsl r8
     8b0:	00000bdf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     8b4:	03500111 	cmpeq	r0, #1073741828	; 0x40000004
     8b8:	0003e80a 	andeq	lr, r3, sl, lsl #16
     8bc:	be011300 	cdplt	3, 0, cr1, cr1, cr0, {0}
     8c0:	01000009 	tsteq	r0, r9
     8c4:	00010628 	andeq	r0, r1, r8, lsr #12
     8c8:	00000000 	andeq	r0, r0, r0
     8cc:	22000000 	andcs	r0, r0, #0
     8d0:	01000001 	tsteq	r0, r1
     8d4:	00000912 	andeq	r0, r0, r2, lsl r9
     8d8:	00095119 	andeq	r5, r9, r9, lsl r1
     8dc:	00092200 	andeq	r2, r9, r0, lsl #4
     8e0:	03050100 	movweq	r0, #20736	; 0x5100
     8e4:	00000000 	andeq	r0, r0, r0
     8e8:	00000010 	andeq	r0, r0, r0, lsl r0
     8ec:	000b9500 	andeq	r9, fp, r0, lsl #10
     8f0:	00090800 	andeq	r0, r9, r0, lsl #16
     8f4:	50011100 	andpl	r1, r1, r0, lsl #2
     8f8:	00000305 	andeq	r0, r0, r5, lsl #6
     8fc:	01110000 	tsteq	r1, r0
     900:	00030551 	andeq	r0, r3, r1, asr r5
     904:	00000000 	andeq	r0, r0, r0
     908:	0000000f 	andeq	r0, r0, pc
     90c:	00092700 	andeq	r2, r9, r0, lsl #14
     910:	7f160000 	svcvc	0x00160000
     914:	22000000 	andcs	r0, r0, #0
     918:	1a000009 	bne	944 <__Vectors_Size+0x184>
     91c:	00000068 	andeq	r0, r0, r8, rrx
     920:	12050005 	andne	r0, r5, #5
     924:	13000009 	movwne	r0, #9
     928:	0009b801 	andeq	fp, r9, r1, lsl #16
     92c:	06230100 	strteq	r0, [r3], -r0, lsl #2
     930:	00000001 	andeq	r0, r0, r1
     934:	00000000 	andeq	r0, r0, r0
     938:	00014200 	andeq	r4, r1, r0, lsl #4
     93c:	097c0100 	ldmdbeq	ip!, {r8}^
     940:	51190000 	tstpl	r9, r0
     944:	22000009 	andcs	r0, r0, #9
     948:	01000009 	tsteq	r0, r9
     94c:	00000305 	andeq	r0, r0, r5, lsl #6
     950:	00100000 	andseq	r0, r0, r0
     954:	95000000 	strls	r0, [r0, #-0]
     958:	7200000b 	andvc	r0, r0, #11
     95c:	11000009 	tstne	r0, r9
     960:	03055001 	movweq	r5, #20481	; 0x5001
     964:	00000000 	andeq	r0, r0, r0
     968:	05510111 	ldrbeq	r0, [r1, #-273]	; 0xfffffeef
     96c:	00000003 	andeq	r0, r0, r3
     970:	000f0000 	andeq	r0, pc, r0
     974:	7c000000 	stcvc	0, cr0, [r0], {-0}
     978:	00000009 	andeq	r0, r0, r9
     97c:	09b20113 	ldmibeq	r2!, {r0, r1, r4, r8}
     980:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
     984:	00000106 	andeq	r0, r0, r6, lsl #2
     988:	00000000 	andeq	r0, r0, r0
     98c:	01620000 	cmneq	r2, r0
     990:	d1010000 	mrsle	r0, (UNDEF: 1)
     994:	19000009 	stmdbne	r0, {r0, r3}
     998:	00000951 	andeq	r0, r0, r1, asr r9
     99c:	00000922 	andeq	r0, r0, r2, lsr #18
     9a0:	00030501 	andeq	r0, r3, r1, lsl #10
     9a4:	10000000 	andne	r0, r0, r0
     9a8:	00000000 	andeq	r0, r0, r0
     9ac:	00000b95 	muleq	r0, r5, fp
     9b0:	000009c7 	andeq	r0, r0, r7, asr #19
     9b4:	05500111 	ldrbeq	r0, [r0, #-273]	; 0xfffffeef
     9b8:	00000003 	andeq	r0, r0, r3
     9bc:	51011100 	mrspl	r1, (UNDEF: 17)
     9c0:	00000305 	andeq	r0, r0, r5, lsl #6
     9c4:	0f000000 	svceq	0x00000000
     9c8:	00000000 	andeq	r0, r0, r0
     9cc:	000009d1 	ldrdeq	r0, [r0], -r1
     9d0:	ac011300 	stcge	3, cr1, [r1], {-0}
     9d4:	01000009 	tsteq	r0, r9
     9d8:	00010619 	andeq	r0, r1, r9, lsl r6
     9dc:	00000000 	andeq	r0, r0, r0
     9e0:	82000000 	andhi	r0, r0, #0
     9e4:	01000001 	tsteq	r0, r1
     9e8:	00000a26 	andeq	r0, r0, r6, lsr #20
     9ec:	00095119 	andeq	r5, r9, r9, lsl r1
     9f0:	00092200 	andeq	r2, r9, r0, lsl #4
     9f4:	03050100 	movweq	r0, #20736	; 0x5100
     9f8:	00000000 	andeq	r0, r0, r0
     9fc:	00000010 	andeq	r0, r0, r0, lsl r0
     a00:	000b9500 	andeq	r9, fp, r0, lsl #10
     a04:	000a1c00 	andeq	r1, sl, r0, lsl #24
     a08:	50011100 	andpl	r1, r1, r0, lsl #2
     a0c:	00000305 	andeq	r0, r0, r5, lsl #6
     a10:	01110000 	tsteq	r1, r0
     a14:	00030551 	andeq	r0, r3, r1, asr r5
     a18:	00000000 	andeq	r0, r0, r0
     a1c:	0000000f 	andeq	r0, r0, pc
     a20:	000a2600 	andeq	r2, sl, r0, lsl #12
     a24:	01130000 	tsteq	r3, r0
     a28:	000009a6 	andeq	r0, r0, r6, lsr #19
     a2c:	01061401 	tsteq	r6, r1, lsl #8
	...
     a38:	000001a2 	andeq	r0, r0, r2, lsr #3
     a3c:	000a7b01 	andeq	r7, sl, r1, lsl #22
     a40:	09511900 	ldmdbeq	r1, {r8, fp, ip}^
     a44:	09220000 	stmdbeq	r2!, {}	; <UNPREDICTABLE>
     a48:	05010000 	streq	r0, [r1, #-0]
     a4c:	00000003 	andeq	r0, r0, r3
     a50:	00001000 	andeq	r1, r0, r0
     a54:	0b950000 	bleq	fe540a5c <__RAM_segment_used_end__+0xc6440a5c>
     a58:	0a710000 	beq	1c40a60 <__RAM_SIZE+0x1b40a60>
     a5c:	01110000 	tsteq	r1, r0
     a60:	00030550 	andeq	r0, r3, r0, asr r5
     a64:	11000000 	mrsne	r0, (UNDEF: 0)
     a68:	03055101 	movweq	r5, #20737	; 0x5101
     a6c:	00000000 	andeq	r0, r0, r0
     a70:	00000f00 	andeq	r0, r0, r0, lsl #30
     a74:	0a7b0000 	beq	1ec0a7c <__RAM_SIZE+0x1dc0a7c>
     a78:	13000000 	movwne	r0, #0
     a7c:	0009a001 	andeq	sl, r9, r1
     a80:	06100100 	ldreq	r0, [r0], -r0, lsl #2
     a84:	00000001 	andeq	r0, r0, r1
     a88:	00000000 	andeq	r0, r0, r0
     a8c:	0001c200 	andeq	ip, r1, r0, lsl #4
     a90:	0ac30100 	beq	ff0c0e98 <__RAM_segment_used_end__+0xc6fc0e98>
     a94:	51190000 	tstpl	r9, r0
     a98:	22000009 	andcs	r0, r0, #9
     a9c:	01000009 	tsteq	r0, r9
     aa0:	00000305 	andeq	r0, r0, r5, lsl #6
     aa4:	00120000 	andseq	r0, r2, r0
     aa8:	95000000 	strls	r0, [r0, #-0]
     aac:	1100000b 	tstne	r0, fp
     ab0:	03055001 	movweq	r5, #20481	; 0x5001
     ab4:	00000000 	andeq	r0, r0, r0
     ab8:	05510111 	ldrbeq	r0, [r1, #-273]	; 0xfffffeef
     abc:	00000003 	andeq	r0, r0, r3
     ac0:	13000000 	movwne	r0, #0
     ac4:	00081d01 	andeq	r1, r8, r1, lsl #26
     ac8:	060c0100 	streq	r0, [ip], -r0, lsl #2
     acc:	00000001 	andeq	r0, r0, r1
     ad0:	00000000 	andeq	r0, r0, r0
     ad4:	0001e200 	andeq	lr, r1, r0, lsl #4
     ad8:	0b020100 	bleq	80ee0 <SYSTICK_CYCLES+0x57ea1>
     adc:	51190000 	tstpl	r9, r0
     ae0:	12000009 	andne	r0, r0, #9
     ae4:	0100000b 	tsteq	r0, fp
     ae8:	00000305 	andeq	r0, r0, r5, lsl #6
     aec:	00120000 	andseq	r0, r2, r0
     af0:	79000000 	stmdbvc	r0, {}	; <UNPREDICTABLE>
     af4:	1100000b 	tstne	r0, fp
     af8:	03055001 	movweq	r5, #20481	; 0x5001
     afc:	00000000 	andeq	r0, r0, r0
     b00:	7f160000 	svcvc	0x00160000
     b04:	12000000 	andne	r0, r0, #0
     b08:	1a00000b 	bne	b3c <__Vectors_Size+0x37c>
     b0c:	00000068 	andeq	r0, r0, r8, rrx
     b10:	0205000f 	andeq	r0, r5, #15
     b14:	1300000b 	movwne	r0, #11
     b18:	00038601 	andeq	r8, r3, r1, lsl #12
     b1c:	06080100 	streq	r0, [r8], -r0, lsl #2
     b20:	00000001 	andeq	r0, r0, r1
     b24:	00000000 	andeq	r0, r0, r0
     b28:	00020200 	andeq	r0, r2, r0, lsl #4
     b2c:	0b560100 	bleq	1580f34 <__RAM_SIZE+0x1480f34>
     b30:	51190000 	tstpl	r9, r0
     b34:	66000009 	strvs	r0, [r0], -r9
     b38:	0100000b 	tsteq	r0, fp
     b3c:	00000305 	andeq	r0, r0, r5, lsl #6
     b40:	00120000 	andseq	r0, r2, r0
     b44:	79000000 	stmdbvc	r0, {}	; <UNPREDICTABLE>
     b48:	1100000b 	tstne	r0, fp
     b4c:	03055001 	movweq	r5, #20481	; 0x5001
     b50:	00000000 	andeq	r0, r0, r0
     b54:	7f160000 	svcvc	0x00160000
     b58:	66000000 	strvs	r0, [r0], -r0
     b5c:	1a00000b 	bne	b90 <__Vectors_Size+0x3d0>
     b60:	00000068 	andeq	r0, r0, r8, rrx
     b64:	56050019 			; <UNDEFINED> instruction: 0x56050019
     b68:	1b00000b 	blne	b9c <__Vectors_Size+0x3dc>
     b6c:	06d90101 	ldrbeq	r0, [r9], r1, lsl #2
     b70:	06d90000 	ldrbeq	r0, [r9], r0
     b74:	07040000 	streq	r0, [r4, -r0]
     b78:	01011c06 	tsteq	r1, r6, lsl #24
     b7c:	000004a9 	andeq	r0, r0, r9, lsr #9
     b80:	0000049f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
     b84:	011d0006 	tsteq	sp, r6
     b88:	00084f01 	andeq	r4, r8, r1, lsl #30
     b8c:	00084f00 	andeq	r4, r8, r0, lsl #30
     b90:	064b0300 	strbeq	r0, [fp], -r0, lsl #6
     b94:	01011b0d 	tsteq	r1, sp, lsl #22
     b98:	00000d45 	andeq	r0, r0, r5, asr #26
     b9c:	00000d45 	andeq	r0, r0, r5, asr #26
     ba0:	1d05c805 	stcne	8, cr12, [r5, #-20]	; 0xffffffec
     ba4:	059b0101 	ldreq	r0, [fp, #257]	; 0x101
     ba8:	059b0000 	ldreq	r0, [fp]
     bac:	06030000 	streq	r0, [r3], -r0
     bb0:	011d0d06 	tsteq	sp, r6, lsl #26
     bb4:	00078701 	andeq	r8, r7, r1, lsl #14
     bb8:	00078700 	andeq	r8, r7, r0, lsl #14
     bbc:	06040300 	streq	r0, [r4], -r0, lsl #6
     bc0:	01011d0d 	tsteq	r1, sp, lsl #26
     bc4:	000005c0 	andeq	r0, r0, r0, asr #11
     bc8:	000005c0 	andeq	r0, r0, r0, asr #11
     bcc:	0d06fa03 	vstreq	s30, [r6, #-12]
     bd0:	8801011d 	stmdahi	r1, {r0, r2, r3, r4, r8}
     bd4:	88000005 	stmdahi	r0, {r0, r2}
     bd8:	03000005 	movweq	r0, #5
     bdc:	1d0d05e1 	cfstr32ne	mvfx0, [sp, #-900]	; 0xfffffc7c
     be0:	08a50101 	stmiaeq	r5!, {r0, r8}
     be4:	08a50000 	stmiaeq	r5!, {}	; <UNPREDICTABLE>
     be8:	ef030000 	svc	0x00030000
     bec:	e5000d06 	str	r0, [r0, #-3334]	; 0xfffff2fa
     bf0:	02000004 	andeq	r0, r0, #4
     bf4:	0001b100 	andeq	fp, r1, r0, lsl #2
     bf8:	3d010400 	cfstrscc	mvf0, [r1, #-0]
     bfc:	0c000000 	stceq	0, cr0, [r0], {-0}
     c00:	000009f4 	strdeq	r0, [r0], -r4
     c04:	0000065c 	andeq	r0, r0, ip, asr r6
     c08:	00000060 	andeq	r0, r0, r0, rrx
	...
     c14:	000002a2 	andeq	r0, r0, r2, lsr #5
     c18:	6d060102 	stfvss	f0, [r6, #-8]
     c1c:	03000008 	movweq	r0, #8
     c20:	00000a13 	andeq	r0, r0, r3, lsl sl
     c24:	3c182b02 			; <UNDEFINED> instruction: 0x3c182b02
     c28:	02000000 	andeq	r0, r0, #0
     c2c:	086b0801 	stmdaeq	fp!, {r0, fp}^
     c30:	02020000 	andeq	r0, r2, #0
     c34:	0006cf05 	andeq	ip, r6, r5, lsl #30
     c38:	07020200 	streq	r0, [r2, -r0, lsl #4]
     c3c:	00000939 	andeq	r0, r0, r9, lsr r9
     c40:	ed050402 	cfstrs	mvf0, [r5, #-8]
     c44:	03000004 	movweq	r0, #4
     c48:	00000a76 	andeq	r0, r0, r6, ror sl
     c4c:	64194f02 	ldrvs	r4, [r9], #-3842	; 0xfffff0fe
     c50:	02000000 	andeq	r0, r0, #0
     c54:	02340704 	eorseq	r0, r4, #4, 14	; 0x100000
     c58:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     c5c:	0004e805 	andeq	lr, r4, r5, lsl #16
     c60:	07080200 	streq	r0, [r8, -r0, lsl #4]
     c64:	0000022f 	andeq	r0, r0, pc, lsr #4
     c68:	69050404 	stmdbvs	r5, {r2, sl}
     c6c:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
     c70:	02390704 	eorseq	r0, r9, #4, 14	; 0x100000
     c74:	15030000 	strne	r0, [r3, #-0]
     c78:	0300000a 	movweq	r0, #10
     c7c:	00301318 	eorseq	r1, r0, r8, lsl r3
     c80:	87050000 	strhi	r0, [r5, -r0]
     c84:	03000000 	movweq	r0, #0
     c88:	00000a78 	andeq	r0, r0, r8, ror sl
     c8c:	58143003 	ldmdapl	r4, {r0, r1, ip, sp}
     c90:	05000000 	streq	r0, [r0, #-0]
     c94:	00000098 	muleq	r0, r8, r0
     c98:	0000a406 	andeq	sl, r0, r6, lsl #8
     c9c:	027c0700 	rsbseq	r0, ip, #0, 14
     ca0:	0901f804 	stmdbeq	r1, {r2, fp, ip, sp, lr, pc}
     ca4:	000003b3 			; <UNDEFINED> instruction: 0x000003b3
     ca8:	000a3008 	andeq	r3, sl, r8
     cac:	01fa0400 	mvnseq	r0, r0, lsl #8
     cb0:	0000a912 	andeq	sl, r0, r2, lsl r9
     cb4:	00230200 	eoreq	r0, r3, r0, lsl #4
     cb8:	000acc08 	andeq	ip, sl, r8, lsl #24
     cbc:	01fb0400 	mvnseq	r0, r0, lsl #8
     cc0:	0000a412 	andeq	sl, r0, r2, lsl r4
     cc4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
     cc8:	000ac208 	andeq	ip, sl, r8, lsl #4
     ccc:	01fc0400 	mvnseq	r0, r0, lsl #8
     cd0:	0000a412 	andeq	sl, r0, r2, lsl r4
     cd4:	08230200 	stmdaeq	r3!, {r9}
     cd8:	000ad108 	andeq	sp, sl, r8, lsl #2
     cdc:	01fd0400 	mvnseq	r0, r0, lsl #8
     ce0:	0000a412 	andeq	sl, r0, r2, lsl r4
     ce4:	0c230200 	sfmeq	f0, 4, [r3], #-0
     ce8:	52435309 	subpl	r5, r3, #603979776	; 0x24000000
     cec:	01fe0400 	mvnseq	r0, r0, lsl #8
     cf0:	0000a412 	andeq	sl, r0, r2, lsl r4
     cf4:	10230200 	eorne	r0, r3, r0, lsl #4
     cf8:	52434309 	subpl	r4, r3, #603979776	; 0x24000000
     cfc:	01ff0400 	mvnseq	r0, r0, lsl #8
     d00:	0000a412 	andeq	sl, r0, r2, lsl r4
     d04:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
     d08:	000b7008 	andeq	r7, fp, r8
     d0c:	02000400 	andeq	r0, r0, #0, 8
     d10:	0003c312 	andeq	ip, r3, r2, lsl r3
     d14:	18230200 	stmdane	r3!, {r9}
     d18:	000b4308 	andeq	r4, fp, r8, lsl #6
     d1c:	02010400 	andeq	r0, r1, #0, 8
     d20:	0000a412 	andeq	sl, r0, r2, lsl r4
     d24:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
     d28:	000ae908 	andeq	lr, sl, r8, lsl #18
     d2c:	02020400 	andeq	r0, r2, #0, 8
     d30:	0000a412 	andeq	sl, r0, r2, lsl r4
     d34:	28230200 	stmdacs	r3!, {r9}
     d38:	000b9c08 	andeq	r9, fp, r8, lsl #24
     d3c:	02030400 	andeq	r0, r3, #0, 8
     d40:	0000a412 	andeq	sl, r0, r2, lsl r4
     d44:	2c230200 	sfmcs	f0, 4, [r3], #-0
     d48:	000ad708 	andeq	sp, sl, r8, lsl #14
     d4c:	02040400 	andeq	r0, r4, #0, 8
     d50:	0000a412 	andeq	sl, r0, r2, lsl r4
     d54:	30230200 	eorcc	r0, r3, r0, lsl #4
     d58:	000adc08 	andeq	sp, sl, r8, lsl #24
     d5c:	02050400 	andeq	r0, r5, #0, 8
     d60:	0000a412 	andeq	sl, r0, r2, lsl r4
     d64:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
     d68:	000a7108 	andeq	r7, sl, r8, lsl #2
     d6c:	02060400 	andeq	r0, r6, #0, 8
     d70:	0000a412 	andeq	sl, r0, r2, lsl r4
     d74:	38230200 	stmdacc	r3!, {r9}
     d78:	000b6008 	andeq	r6, fp, r8
     d7c:	02070400 	andeq	r0, r7, #0, 8
     d80:	0000a412 	andeq	sl, r0, r2, lsl r4
     d84:	3c230200 	sfmcc	f0, 4, [r3], #-0
     d88:	000a3d08 	andeq	r3, sl, r8, lsl #26
     d8c:	02080400 	andeq	r0, r8, #0, 8
     d90:	0003dd12 	andeq	sp, r3, r2, lsl sp
     d94:	40230200 	eormi	r0, r3, r0, lsl #4
     d98:	000a8a08 	andeq	r8, sl, r8, lsl #20
     d9c:	02090400 	andeq	r0, r9, #0, 8
     da0:	0000a912 	andeq	sl, r0, r2, lsl r9
     da4:	48230200 	stmdami	r3!, {r9}
     da8:	000b8708 	andeq	r8, fp, r8, lsl #14
     dac:	020a0400 	andeq	r0, sl, #0, 8
     db0:	0000a912 	andeq	sl, r0, r2, lsl r9
     db4:	4c230200 	sfmmi	f0, 4, [r3], #-0
     db8:	000a6108 	andeq	r6, sl, r8, lsl #2
     dbc:	020b0400 	andeq	r0, fp, #0, 8
     dc0:	0003f712 	andeq	pc, r3, r2, lsl r7	; <UNPREDICTABLE>
     dc4:	50230200 	eorpl	r0, r3, r0, lsl #4
     dc8:	000b8e08 	andeq	r8, fp, r8, lsl #28
     dcc:	020c0400 	andeq	r0, ip, #0, 8
     dd0:	00041112 	andeq	r1, r4, r2, lsl r1
     dd4:	60230200 	eorvs	r0, r3, r0, lsl #4
     dd8:	000a2a08 	andeq	r2, sl, r8, lsl #20
     ddc:	020d0400 	andeq	r0, sp, #0, 8
     de0:	0000a912 	andeq	sl, r0, r2, lsl r9
     de4:	78230200 	stmdavc	r3!, {r9}
     de8:	52544309 	subspl	r4, r4, #603979776	; 0x24000000
     dec:	020e0400 	andeq	r0, lr, #0, 8
     df0:	0000a912 	andeq	sl, r0, r2, lsl r9
     df4:	7c230200 	sfmvc	f0, 4, [r3], #-0
     df8:	000ae208 	andeq	lr, sl, r8, lsl #4
     dfc:	020f0400 	andeq	r0, pc, #0, 8
     e00:	0000a912 	andeq	sl, r0, r2, lsl r9
     e04:	80230300 	eorhi	r0, r3, r0, lsl #6
     e08:	0a990801 	beq	fe642e14 <__RAM_segment_used_end__+0xc6542e14>
     e0c:	10040000 	andne	r0, r4, r0
     e10:	00a41202 	adceq	r1, r4, r2, lsl #4
     e14:	23030000 	movwcs	r0, #12288	; 0x3000
     e18:	96080184 	strls	r0, [r8], -r4, lsl #3
     e1c:	0400000b 	streq	r0, [r0], #-11
     e20:	a4120211 	ldrge	r0, [r2], #-529	; 0xfffffdef
     e24:	03000000 	movweq	r0, #0
     e28:	08018823 	stmdaeq	r1, {r0, r1, r5, fp, pc}
     e2c:	00000aee 	andeq	r0, r0, lr, ror #21
     e30:	12021204 	andne	r1, r2, #4, 4	; 0x40000000
     e34:	000000a4 	andeq	r0, r0, r4, lsr #1
     e38:	018c2303 	orreq	r2, ip, r3, lsl #6
     e3c:	000b2e08 	andeq	r2, fp, r8, lsl #28
     e40:	02130400 	andseq	r0, r3, #0, 8
     e44:	00041612 	andeq	r1, r4, r2, lsl r6
     e48:	90230300 	eorls	r0, r3, r0, lsl #6
     e4c:	0b650801 	bleq	1942e58 <__RAM_SIZE+0x1842e58>
     e50:	14040000 	strne	r0, [r4], #-0
     e54:	00a41202 	adceq	r1, r4, r2, lsl #4
     e58:	23030000 	movwcs	r0, #12288	; 0x3000
     e5c:	c70801e4 	strgt	r0, [r8, -r4, ror #3]
     e60:	0400000a 	streq	r0, [r0], #-10
     e64:	a4120215 	ldrge	r0, [r2], #-533	; 0xfffffdeb
     e68:	03000000 	movweq	r0, #0
     e6c:	0801e823 	stmdaeq	r1, {r0, r1, r5, fp, sp, lr, pc}
     e70:	00000b06 	andeq	r0, r0, r6, lsl #22
     e74:	12021604 	andne	r1, r2, #4, 12	; 0x400000
     e78:	00000426 	andeq	r0, r0, r6, lsr #8
     e7c:	01ec2303 	mvneq	r2, r3, lsl #6
     e80:	000a1d08 	andeq	r1, sl, r8, lsl #26
     e84:	02170400 	andseq	r0, r7, #0, 8
     e88:	0000a412 	andeq	sl, r0, r2, lsl r4
     e8c:	80230300 	eorhi	r0, r3, r0, lsl #6
     e90:	0b100804 	bleq	402ea8 <__RAM_SIZE+0x302ea8>
     e94:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
     e98:	04361202 	ldrteq	r1, [r6], #-514	; 0xfffffdfe
     e9c:	23030000 	movwcs	r0, #12288	; 0x3000
     ea0:	f4080484 	vst3.32	{d0-d2}, [r8], r4
     ea4:	0400000a 	streq	r0, [r0], #-10
     ea8:	a9120219 	ldmdbge	r2, {r0, r3, r4, r9}
     eac:	03000000 	movweq	r0, #0
     eb0:	0804c023 	stmdaeq	r4, {r0, r1, r5, lr, pc}
     eb4:	00000afa 	strdeq	r0, [r0], -sl
     eb8:	12021a04 	andne	r1, r2, #4, 20	; 0x4000
     ebc:	000000a9 	andeq	r0, r0, r9, lsr #1
     ec0:	04c42303 	strbeq	r2, [r4], #771	; 0x303
     ec4:	000b0008 	andeq	r0, fp, r8
     ec8:	021b0400 	andseq	r0, fp, #0, 8
     ecc:	0000a912 	andeq	sl, r0, r2, lsl r9
     ed0:	c8230300 	stmdagt	r3!, {r8, r9}
     ed4:	0b1a0804 	bleq	682eec <__RAM_SIZE+0x582eec>
     ed8:	1c040000 	stcne	0, cr0, [r4], {-0}
     edc:	04461202 	strbeq	r1, [r6], #-514	; 0xfffffdfe
     ee0:	23030000 	movwcs	r0, #12288	; 0x3000
     ee4:	690804cc 	stmdbvs	r8, {r2, r3, r6, r7, sl}
     ee8:	0400000a 	streq	r0, [r0], #-10
     eec:	a412021d 	ldrge	r0, [r2], #-541	; 0xfffffde3
     ef0:	03000000 	movweq	r0, #0
     ef4:	0804d023 	stmdaeq	r4, {r0, r1, r5, ip, lr, pc}
     ef8:	00000b24 	andeq	r0, r0, r4, lsr #22
     efc:	12021e04 	andne	r1, r2, #4, 28	; 0x40
     f00:	00000446 	andeq	r0, r0, r6, asr #8
     f04:	04d42303 	ldrbeq	r2, [r4], #771	; 0x303
     f08:	000b5208 	andeq	r5, fp, r8, lsl #4
     f0c:	021f0400 	andseq	r0, pc, #0, 8
     f10:	0000a412 	andeq	sl, r0, r2, lsl r4
     f14:	d8230300 	stmdale	r3!, {r8, r9}
     f18:	0a220804 	beq	882f30 <__RAM_SIZE+0x782f30>
     f1c:	20040000 	andcs	r0, r4, r0
     f20:	00a41202 	adceq	r1, r4, r2, lsl #4
     f24:	23030000 	movwcs	r0, #12288	; 0x3000
     f28:	5a0804dc 	bpl	2022a0 <__RAM_SIZE+0x1022a0>
     f2c:	0400000b 	streq	r0, [r0], #-11
     f30:	a4120221 	ldrge	r0, [r2], #-545	; 0xfffffddf
     f34:	03000000 	movweq	r0, #0
     f38:	0804e023 	stmdaeq	r4, {r0, r1, r5, sp, lr, pc}
     f3c:	00000ab0 			; <UNDEFINED> instruction: 0x00000ab0
     f40:	12022204 	andne	r2, r2, #4, 4	; 0x40000000
     f44:	000000a4 	andeq	r0, r0, r4, lsr #1
     f48:	04e42303 	strbteq	r2, [r4], #771	; 0x303
     f4c:	000a9108 	andeq	r9, sl, r8, lsl #2
     f50:	02230400 	eoreq	r0, r3, #0, 8
     f54:	0000a412 	andeq	sl, r0, r2, lsl r4
     f58:	e8230300 	stmda	r3!, {r8, r9}
     f5c:	0b6a0804 	bleq	1a82f74 <__RAM_SIZE+0x1982f74>
     f60:	24040000 	strcs	r0, [r4], #-0
     f64:	00a41202 	adceq	r1, r4, r2, lsl #4
     f68:	23030000 	movwcs	r0, #12288	; 0x3000
     f6c:	490804ec 	stmdbmi	r8, {r2, r3, r5, r6, r7, sl}
     f70:	0400000b 	streq	r0, [r0], #-11
     f74:	a4120225 	ldrge	r0, [r2], #-549	; 0xfffffddb
     f78:	03000000 	movweq	r0, #0
     f7c:	0804f023 	stmdaeq	r4, {r0, r1, r5, ip, sp, lr, pc}
     f80:	00000a44 	andeq	r0, r0, r4, asr #20
     f84:	12022604 	andne	r2, r2, #4, 12	; 0x400000
     f88:	000000a4 	andeq	r0, r0, r4, lsr #1
     f8c:	04f42303 	ldrbteq	r2, [r4], #771	; 0x303
     f90:	000a3608 	andeq	r3, sl, r8, lsl #12
     f94:	02270400 	eoreq	r0, r7, #0, 8
     f98:	0000a412 	andeq	sl, r0, r2, lsl r4
     f9c:	f8230300 			; <UNDEFINED> instruction: 0xf8230300
     fa0:	930a0004 	movwls	r0, #40964	; 0xa004
     fa4:	c3000000 	movwgt	r0, #0
     fa8:	0b000003 	bleq	fbc <__Vectors_Size+0x7fc>
     fac:	00000080 	andeq	r0, r0, r0, lsl #1
     fb0:	b305000b 	movwlt	r0, #20491	; 0x500b
     fb4:	0a000003 	beq	fc8 <__Vectors_Size+0x808>
     fb8:	000000a9 	andeq	r0, r0, r9, lsr #1
     fbc:	000003d8 	ldrdeq	r0, [r0], -r8
     fc0:	0000800b 	andeq	r8, r0, fp
     fc4:	06000100 	streq	r0, [r0], -r0, lsl #2
     fc8:	000003c8 	andeq	r0, r0, r8, asr #7
     fcc:	0003d805 	andeq	sp, r3, r5, lsl #16
     fd0:	00a90a00 	adceq	r0, r9, r0, lsl #20
     fd4:	03f20000 	mvnseq	r0, #0
     fd8:	800b0000 	andhi	r0, fp, r0
     fdc:	03000000 	movweq	r0, #0
     fe0:	03e20600 	mvneq	r0, #0, 12
     fe4:	f2050000 	vhadd.s8	d0, d5, d0
     fe8:	0a000003 	beq	ffc <__Vectors_Size+0x83c>
     fec:	000000a9 	andeq	r0, r0, r9, lsr #1
     ff0:	0000040c 	andeq	r0, r0, ip, lsl #8
     ff4:	0000800b 	andeq	r8, r0, fp
     ff8:	06000500 	streq	r0, [r0], -r0, lsl #10
     ffc:	000003fc 	strdeq	r0, [r0], -ip
    1000:	00040c05 	andeq	r0, r4, r5, lsl #24
    1004:	00980a00 	addseq	r0, r8, r0, lsl #20
    1008:	04260000 	strteq	r0, [r6], #-0
    100c:	800b0000 	andhi	r0, fp, r0
    1010:	14000000 	strne	r0, [r0], #-0
    1014:	00980a00 	addseq	r0, r8, r0, lsl #20
    1018:	04360000 	ldrteq	r0, [r6], #-0
    101c:	800b0000 	andhi	r0, fp, r0
    1020:	44000000 	strmi	r0, [r0], #-0
    1024:	00980a00 	addseq	r0, r8, r0, lsl #20
    1028:	04460000 	strbeq	r0, [r6], #-0
    102c:	800b0000 	andhi	r0, fp, r0
    1030:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    1034:	00980a00 	addseq	r0, r8, r0, lsl #20
    1038:	04560000 	ldrbeq	r0, [r6], #-0
    103c:	800b0000 	andhi	r0, fp, r0
    1040:	00000000 	andeq	r0, r0, r0
    1044:	0a810c00 	beq	fe04404c <__RAM_segment_used_end__+0xc5f4404c>
    1048:	28040000 	stmdacs	r4, {}	; <UNPREDICTABLE>
    104c:	00ae0302 	adceq	r0, lr, r2, lsl #6
    1050:	75030000 	strvc	r0, [r3, #-0]
    1054:	0500000b 	streq	r0, [r0, #-11]
    1058:	04740f24 	ldrbteq	r0, [r4], #-3876	; 0xfffff0dc
    105c:	63060000 	movwvs	r0, #24576	; 0x6000
    1060:	0d000004 	stceq	0, cr0, [r0, #-16]
    1064:	00047a04 	andeq	r7, r4, r4, lsl #20
    1068:	0f010e00 	svceq	0x00010e00
    106c:	00000aa0 	andeq	r0, r0, r0, lsr #21
    1070:	98112905 	ldmdals	r1, {r0, r2, r8, fp, sp}
    1074:	01000000 	mrseq	r0, (UNDEF: 0)
    1078:	046f0a01 	strbteq	r0, [pc], #-2561	; 1080 <_Min_Stack_Size+0x80>
    107c:	049b0000 	ldreq	r0, [fp], #0
    1080:	80100000 	andshi	r0, r0, r0
    1084:	ef000000 	svc	0x00000000
    1088:	8a060001 	bhi	181094 <__RAM_SIZE+0x81094>
    108c:	0f000004 	svceq	0x00000004
    1090:	00000ab8 			; <UNDEFINED> instruction: 0x00000ab8
    1094:	9b203801 	blls	80f0a0 <__RAM_SIZE+0x70f0a0>
    1098:	01000004 	tsteq	r0, r4
    109c:	047c1101 	ldrbteq	r1, [ip], #-257	; 0xfffffeff
    10a0:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    10a4:	0003050a 	andeq	r0, r3, sl, lsl #10
    10a8:	12380000 	eorsne	r0, r8, #0
    10ac:	000b3801 	andeq	r3, fp, r1, lsl #16
    10b0:	064c0100 	strbeq	r0, [ip], -r0, lsl #2
    10b4:	0008b801 	andeq	fp, r8, r1, lsl #16
    10b8:	0008e410 	andeq	lr, r8, r0, lsl r4
    10bc:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    10c0:	4b011201 	blmi	458cc <SYSTICK_CYCLES+0x1c88d>
    10c4:	0100000a 	tsteq	r0, sl
    10c8:	00010644 	andeq	r0, r1, r4, asr #12
    10cc:	00000000 	andeq	r0, r0, r0
    10d0:	02000000 	andeq	r0, r0, #0
    10d4:	0001007d 	andeq	r0, r1, sp, ror r0
    10d8:	00001bc1 	andeq	r1, r0, r1, asr #23
    10dc:	02a10002 	adceq	r0, r1, #2
    10e0:	01040000 	mrseq	r0, (UNDEF: 4)
    10e4:	0000003d 	andeq	r0, r0, sp, lsr r0
    10e8:	000c780c 	andeq	r7, ip, ip, lsl #16
    10ec:	00065c00 	andeq	r5, r6, r0, lsl #24
    10f0:	00013000 	andeq	r3, r1, r0
	...
    10fc:	00047700 	andeq	r7, r4, r0, lsl #14
    1100:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    1104:	00000643 	andeq	r0, r0, r3, asr #12
    1108:	39070402 	stmdbcc	r7, {r1, sl}
    110c:	02000002 	andeq	r0, r0, #2
    1110:	086d0601 	stmdaeq	sp!, {r0, r9, sl}^
    1114:	01020000 	mrseq	r0, (UNDEF: 2)
    1118:	00086b08 	andeq	r6, r8, r8, lsl #22
    111c:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    1120:	000006cf 	andeq	r0, r0, pc, asr #13
    1124:	39070202 	stmdbcc	r7, {r1, r9}
    1128:	02000009 	andeq	r0, r0, #9
    112c:	04ed0504 	strbteq	r0, [sp], #1284	; 0x504
    1130:	53030000 	movwpl	r0, #12288	; 0x3000
    1134:	02000000 	andeq	r0, r0, #0
    1138:	02340704 	eorseq	r0, r4, #4, 14	; 0x100000
    113c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1140:	0004e805 	andeq	lr, r4, r5, lsl #16
    1144:	00660300 	rsbeq	r0, r6, r0, lsl #6
    1148:	2c040000 	stccs	0, cr0, [r4], {-0}
    114c:	0200000d 	andeq	r0, r0, #13
    1150:	007e1969 	rsbseq	r1, lr, r9, ror #18
    1154:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1158:	00022f07 	andeq	r2, r2, r7, lsl #30
    115c:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    1160:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1164:	00008503 	andeq	r8, r0, r3, lsl #10
    1168:	0d600400 	cfstrdeq	mvd0, [r0, #-0]
    116c:	e8020000 	stmda	r2, {}	; <UNPREDICTABLE>
    1170:	0000301a 	andeq	r3, r0, sl, lsl r0
    1174:	00300300 	eorseq	r0, r0, r0, lsl #6
    1178:	2e040000 	cdpcs	0, 0, cr0, cr4, cr0, {0}
    117c:	0300000d 	movweq	r0, #13
    1180:	0072143c 	rsbseq	r1, r2, ip, lsr r4
    1184:	62040000 	andvs	r0, r4, #0
    1188:	0300000d 	movweq	r0, #13
    118c:	00911552 	addseq	r1, r1, r2, asr r5
    1190:	ca040000 	bgt	101198 <__RAM_SIZE+0x1198>
    1194:	0400000d 	streq	r0, [r0], #-13
    1198:	00c61b28 	sbceq	r1, r6, r8, lsr #22
    119c:	6e060000 	cdpvs	0, 0, cr0, cr6, cr0, {0}
    11a0:	0400000c 	streq	r0, [r0], #-12
    11a4:	00e00006 	rsceq	r0, r0, r6
    11a8:	14070000 	strne	r0, [r7], #-0
    11ac:	e000000d 	and	r0, r0, sp
    11b0:	02000000 	andeq	r0, r0, #0
    11b4:	00010023 	andeq	r0, r1, r3, lsr #32
    11b8:	70040408 	andvc	r0, r4, r8, lsl #8
    11bc:	0400000c 	streq	r0, [r0], #-12
    11c0:	00ba1863 	adcseq	r1, sl, r3, ror #16
    11c4:	59040000 	stmdbpl	r4, {}	; <UNPREDICTABLE>
    11c8:	05000029 	streq	r0, [r0, #-41]	; 0xffffffd7
    11cc:	003017d1 	ldrsbteq	r1, [r0], -r1
    11d0:	ee030000 	cdp	0, 0, cr0, cr3, cr0, {0}
    11d4:	02000000 	andeq	r0, r0, #0
    11d8:	063e0408 	ldrteq	r0, [lr], -r8, lsl #8
    11dc:	b1040000 	mrslt	r0, (UNDEF: 4)
    11e0:	0100000c 	tsteq	r0, ip
    11e4:	0112107a 	tsteq	r2, sl, ror r0
    11e8:	04090000 	streq	r0, [r9], #-0
    11ec:	00000118 	andeq	r0, r0, r8, lsl r1
    11f0:	0133010a 	teqeq	r3, sl, lsl #2
    11f4:	330b0000 	movwcc	r0, #45056	; 0xb000
    11f8:	0b000001 	bleq	1204 <_Min_Stack_Size+0x204>
    11fc:	000000e0 	andeq	r0, r0, r0, ror #1
    1200:	0000ee0b 	andeq	lr, r0, fp, lsl #28
    1204:	00ee0b00 	rsceq	r0, lr, r0, lsl #22
    1208:	02000000 	andeq	r0, r0, #0
    120c:	08740801 	ldmdaeq	r4!, {r0, fp}^
    1210:	33030000 	movwcc	r0, #12288	; 0x3000
    1214:	0c000001 	stceq	0, cr0, [r0], {1}
    1218:	097e0108 	ldmdbeq	lr!, {r3, r8}^
    121c:	00000167 	andeq	r0, r0, r7, ror #2
    1220:	7463660d 	strbtvc	r6, [r3], #-1549	; 0xfffff9f3
    1224:	0b7f0100 	bleq	1fc162c <__RAM_SIZE+0x1ec162c>
    1228:	00000178 	andeq	r0, r0, r8, ror r1
    122c:	0d002302 	stceq	3, cr2, [r0, #-8]
    1230:	00677261 	rsbeq	r7, r7, r1, ror #4
    1234:	e0098001 	and	r8, r9, r1
    1238:	02000000 	andeq	r0, r0, #0
    123c:	0a000423 	beq	22d0 <_Min_Stack_Size+0x12d0>
    1240:	00017801 	andeq	r7, r1, r1, lsl #16
    1244:	01330b00 	teqeq	r3, r0, lsl #22
    1248:	e00b0000 	and	r0, fp, r0
    124c:	00000000 	andeq	r0, r0, r0
    1250:	01670409 	cmneq	r7, r9, lsl #8
    1254:	ac040000 	stcge	0, cr0, [r4], {-0}
    1258:	0100000d 	tsteq	r0, sp
    125c:	013f0381 	teqeq	pc, r1, lsl #7
    1260:	7e030000 	cdpvc	0, 0, cr0, cr3, cr0, {0}
    1264:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    1268:	000c4e01 	andeq	r4, ip, r1, lsl #28
    126c:	038a0100 	orreq	r0, sl, #0, 2
    1270:	00850105 	addeq	r0, r5, r5, lsl #2
	...
    127c:	02220000 	eoreq	r0, r2, #0
    1280:	4c010000 	stcmi	0, cr0, [r1], {-0}
    1284:	0f000002 	svceq	0x00000002
    1288:	0074756f 	rsbseq	r7, r4, pc, ror #10
    128c:	16038a01 	strne	r8, [r3], -r1, lsl #20
    1290:	00000178 	andeq	r0, r0, r8, ror r1
    1294:	00000284 	andeq	r0, r0, r4, lsl #5
    1298:	0000027e 	andeq	r0, r0, lr, ror r2
    129c:	6772610f 	ldrbvs	r6, [r2, -pc, lsl #2]!
    12a0:	038a0100 	orreq	r0, sl, #0, 2
    12a4:	0000e03d 	andeq	lr, r0, sp, lsr r0
    12a8:	0002b500 	andeq	fp, r2, r0, lsl #10
    12ac:	0002b100 	andeq	fp, r2, r0, lsl #2
    12b0:	0c931000 	ldceq	0, cr1, [r3], {0}
    12b4:	8a010000 	bhi	412bc <SYSTICK_CYCLES+0x1827d>
    12b8:	024c4e03 	subeq	r4, ip, #3, 28	; 0x30
    12bc:	91020000 	mrsls	r0, (UNDEF: 2)
    12c0:	76121178 			; <UNDEFINED> instruction: 0x76121178
    12c4:	8c010061 	stchi	0, cr0, [r1], {97}	; 0x61
    12c8:	00e20b03 	rsceq	r0, r2, r3, lsl #22
    12cc:	91020000 	mrsls	r0, (UNDEF: 2)
    12d0:	0bb8136c 	bleq	fee06088 <__RAM_segment_used_end__+0xc6d06088>
    12d4:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    12d8:	018a1b03 	orreq	r1, sl, r3, lsl #22
    12dc:	91020000 	mrsls	r0, (UNDEF: 2)
    12e0:	65721464 	ldrbvs	r1, [r2, #-1124]!	; 0xfffffb9c
    12e4:	8f010074 	svchi	0x00010074
    12e8:	008c0d03 	addeq	r0, ip, r3, lsl #26
    12ec:	02d80000 	sbcseq	r0, r8, #0
    12f0:	02d60000 	sbcseq	r0, r6, #0
    12f4:	00150000 	andseq	r0, r5, r0
    12f8:	5f000000 	svcpl	0x00000000
    12fc:	16000005 	strne	r0, [r0], -r5
    1300:	03055001 	movweq	r5, #20481	; 0x5001
    1304:	00000000 	andeq	r0, r0, r0
    1308:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    130c:	01165491 			; <UNDEFINED> instruction: 0x01165491
    1310:	ff090252 			; <UNDEFINED> instruction: 0xff090252
    1314:	03530116 	cmpeq	r3, #-2147483643	; 0x80000005
    1318:	16066891 			; <UNDEFINED> instruction: 0x16066891
    131c:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    1320:	00006c91 	muleq	r0, r1, ip
    1324:	013a0409 	teqeq	sl, r9, lsl #8
    1328:	010e0000 	mrseq	r0, (UNDEF: 14)
    132c:	00000d42 	andeq	r0, r0, r2, asr #26
    1330:	05038401 	streq	r8, [r3, #-1025]	; 0xfffffbff
    1334:	00008501 	andeq	r8, r0, r1, lsl #10
	...
    1340:	0002eb00 	andeq	lr, r2, r0, lsl #22
    1344:	02ee0100 	rsceq	r0, lr, #0, 2
    1348:	cf170000 	svcgt	0x00170000
    134c:	0100000b 	tsteq	r0, fp
    1350:	ee150384 	cdp	3, 1, cr0, cr5, cr4, {4}
    1354:	29000002 	stmdbcs	r0, {r1}
    1358:	23000003 	movwcs	r0, #3
    135c:	17000003 	strne	r0, [r0, -r3]
    1360:	000018c8 	andeq	r1, r0, r8, asr #17
    1364:	24038401 	strcs	r8, [r3], #-1025	; 0xfffffbff
    1368:	000000ee 	andeq	r0, r0, lr, ror #1
    136c:	0000035b 	andeq	r0, r0, fp, asr r3
    1370:	00000355 	andeq	r0, r0, r5, asr r3
    1374:	000c9317 	andeq	r9, ip, r7, lsl r3
    1378:	03840100 	orreq	r0, r4, #0, 2
    137c:	00024c37 	andeq	r4, r2, r7, lsr ip
    1380:	00038d00 	andeq	r8, r3, r0, lsl #26
    1384:	00038700 	andeq	r8, r3, r0, lsl #14
    1388:	61760f00 	cmnvs	r6, r0, lsl #30
    138c:	03840100 	orreq	r0, r4, #0, 2
    1390:	0000e247 	andeq	lr, r0, r7, asr #4
    1394:	0003bb00 	andeq	fp, r3, r0, lsl #22
    1398:	0003b900 	andeq	fp, r3, r0, lsl #18
    139c:	00001500 	andeq	r1, r0, r0, lsl #10
    13a0:	055f0000 	ldrbeq	r0, [pc, #-0]	; 13a8 <_Min_Stack_Size+0x3a8>
    13a4:	01160000 	tsteq	r6, r0
    13a8:	00030550 	andeq	r0, r3, r0, asr r5
    13ac:	16000000 	strne	r0, [r0], -r0
    13b0:	f3035101 	vrhadd.u8	d5, d3, d1
    13b4:	01165001 	tsteq	r6, r1
    13b8:	01f30352 	mvnseq	r0, r2, asr r3
    13bc:	53011651 	movwpl	r1, #5713	; 0x1651
    13c0:	5201f303 	andpl	pc, r1, #201326592	; 0xc000000
    13c4:	04090000 	streq	r0, [r9], #-0
    13c8:	00000133 	andeq	r0, r0, r3, lsr r1
    13cc:	0bd6010e 	bleq	ff58180c <__RAM_segment_used_end__+0xc748180c>
    13d0:	7d010000 	stcvc	0, cr0, [r1, #-0]
    13d4:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
	...
    13e0:	ce000000 	cdpgt	0, 0, cr0, cr0, cr0, {0}
    13e4:	01000003 	tsteq	r0, r3
    13e8:	00000374 	andeq	r0, r0, r4, ror r3
    13ec:	000c9317 	andeq	r9, ip, r7, lsl r3
    13f0:	037d0100 	cmneq	sp, #0, 2
    13f4:	00024c19 	andeq	r4, r2, r9, lsl ip
    13f8:	00040c00 	andeq	r0, r4, r0, lsl #24
    13fc:	00040600 	andeq	r0, r4, r0, lsl #12
    1400:	61760f00 	cmnvs	r6, r0, lsl #30
    1404:	037d0100 	cmneq	sp, #0, 2
    1408:	0000e229 	andeq	lr, r0, r9, lsr #4
    140c:	00043a00 	andeq	r3, r4, r0, lsl #20
    1410:	00043800 	andeq	r3, r4, r0, lsl #16
    1414:	0bcf1300 	bleq	ff3c601c <__RAM_segment_used_end__+0xc72c601c>
    1418:	7f010000 	svcvc	0x00010000
    141c:	03740803 	cmneq	r4, #196608	; 0x30000
    1420:	91020000 	mrsls	r0, (UNDEF: 2)
    1424:	00001574 	andeq	r1, r0, r4, ror r5
    1428:	055f0000 	ldrbeq	r0, [pc, #-0]	; 1430 <_Min_Stack_Size+0x430>
    142c:	01160000 	tsteq	r6, r0
    1430:	29030550 	stmdbcs	r3, {r4, r6, r8, sl}
    1434:	1610001a 			; <UNDEFINED> instruction: 0x1610001a
    1438:	91025101 	tstls	r2, r1, lsl #2
    143c:	52011674 	andpl	r1, r1, #116, 12	; 0x7400000
    1440:	16ff0902 	ldrbtne	r0, [pc], r2, lsl #18
    1444:	f3035301 	vcgt.u8	d5, d3, d1
    1448:	00005001 	andeq	r5, r0, r1
    144c:	00013318 	andeq	r3, r1, r8, lsl r3
    1450:	00038400 	andeq	r8, r3, r0, lsl #8
    1454:	00301900 	eorseq	r1, r0, r0, lsl #18
    1458:	00000000 	andeq	r0, r0, r0
    145c:	0d43010e 	stfeqe	f0, [r3, #-56]	; 0xffffffc8
    1460:	73010000 	movwvc	r0, #4096	; 0x1000
    1464:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
	...
    1470:	4d000000 	stcmi	0, cr0, [r0, #-0]
    1474:	01000004 	tsteq	r0, r4
    1478:	00000433 	andeq	r0, r0, r3, lsr r4
    147c:	000bcf17 	andeq	ip, fp, r7, lsl pc
    1480:	03730100 	cmneq	r3, #0, 2
    1484:	0002ee14 	andeq	lr, r2, r4, lsl lr
    1488:	0004af00 	andeq	sl, r4, r0, lsl #30
    148c:	0004a900 	andeq	sl, r4, r0, lsl #18
    1490:	18c81700 	stmiane	r8, {r8, r9, sl, ip}^
    1494:	73010000 	movwvc	r0, #4096	; 0x1000
    1498:	00ee2303 	rsceq	r2, lr, r3, lsl #6
    149c:	04e10000 	strbteq	r0, [r1], #0
    14a0:	04db0000 	ldrbeq	r0, [fp], #0
    14a4:	93100000 	tstls	r0, #0
    14a8:	0100000c 	tsteq	r0, ip
    14ac:	4c360373 	ldcmi	3, cr0, [r6], #-460	; 0xfffffe34
    14b0:	02000002 	andeq	r0, r0, #2
    14b4:	12117891 	andsne	r7, r1, #9502720	; 0x910000
    14b8:	01006176 	tsteq	r0, r6, ror r1
    14bc:	e20b0375 	and	r0, fp, #-738197503	; 0xd4000001
    14c0:	02000000 	andeq	r0, r0, #0
    14c4:	72146c91 	andsvc	r6, r4, #37120	; 0x9100
    14c8:	01007465 	tsteq	r0, r5, ror #8
    14cc:	8c0d0377 	stchi	3, cr0, [sp], {119}	; 0x77
    14d0:	0f000000 	svceq	0x00000000
    14d4:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    14d8:	15000005 	strne	r0, [r0, #-5]
    14dc:	00000000 	andeq	r0, r0, r0
    14e0:	0000055f 	andeq	r0, r0, pc, asr r5
    14e4:	05500116 	ldrbeq	r0, [r0, #-278]	; 0xfffffeea
    14e8:	00000003 	andeq	r0, r0, r3
    14ec:	51011600 	tstpl	r1, r0, lsl #12
    14f0:	5001f303 	andpl	pc, r1, r3, lsl #6
    14f4:	03520116 	cmpeq	r2, #-2147483643	; 0x80000005
    14f8:	165101f3 			; <UNDEFINED> instruction: 0x165101f3
    14fc:	91035301 	tstls	r3, r1, lsl #6
    1500:	02160668 	andseq	r0, r6, #104, 12	; 0x6800000
    1504:	9102007d 	tstls	r2, sp, ror r0
    1508:	0e00006c 	cdpeq	0, 0, cr0, cr0, cr12, {3}
    150c:	000cd801 	andeq	sp, ip, r1, lsl #16
    1510:	03690100 	cmneq	r9, #0, 2
    1514:	00850105 	addeq	r0, r5, r5, lsl #2
	...
    1520:	05220000 	streq	r0, [r2, #-0]!
    1524:	cc010000 	stcgt	0, cr0, [r1], {-0}
    1528:	17000004 	strne	r0, [r0, -r4]
    152c:	00000bcf 	andeq	r0, r0, pc, asr #23
    1530:	13036901 	movwne	r6, #14593	; 0x3901
    1534:	000002ee 	andeq	r0, r0, lr, ror #5
    1538:	00000584 	andeq	r0, r0, r4, lsl #11
    153c:	0000057e 	andeq	r0, r0, lr, ror r5
    1540:	000c9310 	andeq	r9, ip, r0, lsl r3
    1544:	03690100 	cmneq	r9, #0, 2
    1548:	00024c27 	andeq	r4, r2, r7, lsr #24
    154c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
    1550:	61761211 	cmnvs	r6, r1, lsl r2
    1554:	036b0100 	cmneq	fp, #0, 2
    1558:	0000e20b 	andeq	lr, r0, fp, lsl #4
    155c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    1560:	74657214 	strbtvc	r7, [r5], #-532	; 0xfffffdec
    1564:	036d0100 	cmneq	sp, #0, 2
    1568:	00008c0d 	andeq	r8, r0, sp, lsl #24
    156c:	0005b200 	andeq	fp, r5, r0, lsl #4
    1570:	0005b000 	andeq	fp, r5, r0
    1574:	00001500 	andeq	r1, r0, r0, lsl #10
    1578:	055f0000 	ldrbeq	r0, [pc, #-0]	; 1580 <_Min_Stack_Size+0x580>
    157c:	01160000 	tsteq	r6, r0
    1580:	00030550 	andeq	r0, r3, r0, asr r5
    1584:	16000000 	strne	r0, [r0], -r0
    1588:	f3035101 	vrhadd.u8	d5, d3, d1
    158c:	01165001 	tsteq	r6, r1
    1590:	ff090252 			; <UNDEFINED> instruction: 0xff090252
    1594:	03530116 	cmpeq	r3, #-2147483643	; 0x80000005
    1598:	16065c91 			; <UNDEFINED> instruction: 0x16065c91
    159c:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    15a0:	00006091 	muleq	r0, r1, r0
    15a4:	0d45010e 	stfeqe	f0, [r5, #-56]	; 0xffffffc8
    15a8:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
    15ac:	85010503 	strhi	r0, [r1, #-1283]	; 0xfffffafd
    15b0:	34000000 	strcc	r0, [r0], #-0
    15b4:	6010001a 	andsvs	r0, r0, sl, lsl r0
    15b8:	c510001a 	ldrgt	r0, [r0, #-26]	; 0xffffffe6
    15bc:	01000005 	tsteq	r0, r5
    15c0:	0000055f 	andeq	r0, r0, pc, asr r5
    15c4:	000c9310 	andeq	r9, ip, r0, lsl r3
    15c8:	035e0100 	cmpeq	lr, #0, 2
    15cc:	00024c18 	andeq	r4, r2, r8, lsl ip
    15d0:	70910200 	addsvc	r0, r1, r0, lsl #4
    15d4:	61761211 	cmnvs	r6, r1, lsl r2
    15d8:	03600100 	cmneq	r0, #0, 2
    15dc:	0000e20b 	andeq	lr, r0, fp, lsl #4
    15e0:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    15e4:	000bcf13 	andeq	ip, fp, r3, lsl pc
    15e8:	03620100 	cmneq	r2, #0, 2
    15ec:	00037408 	andeq	r7, r3, r8, lsl #8
    15f0:	60910200 	addsvs	r0, r1, r0, lsl #4
    15f4:	74657214 	strbtvc	r7, [r5], #-532	; 0xfffffdec
    15f8:	03630100 	cmneq	r3, #0, 2
    15fc:	00008c0d 	andeq	r8, r0, sp, lsl #24
    1600:	00062300 	andeq	r2, r6, r0, lsl #6
    1604:	00062100 	andeq	r2, r6, r0, lsl #2
    1608:	1a501500 	bne	1406a10 <__RAM_SIZE+0x1306a10>
    160c:	055f1000 	ldrbeq	r1, [pc, #-0]	; 1614 <_Min_Stack_Size+0x614>
    1610:	01160000 	tsteq	r6, r0
    1614:	29030550 	stmdbcs	r3, {r4, r6, r8, sl}
    1618:	1610001a 			; <UNDEFINED> instruction: 0x1610001a
    161c:	91025101 	tstls	r2, r1, lsl #2
    1620:	52011640 	andpl	r1, r1, #64, 12	; 0x4000000
    1624:	16ff0902 	ldrbtne	r0, [pc], r2, lsl #18
    1628:	91035301 	tstls	r3, r1, lsl #6
    162c:	02160650 	andseq	r0, r6, #80, 12	; 0x5000000
    1630:	9102007d 	tstls	r2, sp, ror r0
    1634:	1a000054 	bne	178c <_Min_Stack_Size+0x78c>
    1638:	00000d41 	andeq	r0, r0, r1, asr #26
    163c:	0c024101 	stfeqs	f4, [r2], {1}
    1640:	00008501 	andeq	r8, r0, r1, lsl #10
    1644:	0013a800 	andseq	sl, r3, r0, lsl #16
    1648:	001a2810 	andseq	r2, sl, r0, lsl r8
    164c:	00063610 	andeq	r3, r6, r0, lsl r6
    1650:	0b7d0100 	bleq	1f41a58 <__RAM_SIZE+0x1e41a58>
    1654:	6f0f0000 	svcvs	0x000f0000
    1658:	01007475 	tsteq	r0, r5, ror r4
    165c:	06240241 	strteq	r0, [r4], -r1, asr #4
    1660:	77000001 	strvc	r0, [r0, -r1]
    1664:	6f000006 	svcvs	0x00000006
    1668:	17000006 	strne	r0, [r0, -r6]
    166c:	00000bcf 	andeq	r0, r0, pc, asr #23
    1670:	2f024101 	svccs	0x00024101
    1674:	000002ee 	andeq	r0, r0, lr, ror #5
    1678:	000006b5 			; <UNDEFINED> instruction: 0x000006b5
    167c:	000006ab 	andeq	r0, r0, fp, lsr #13
    1680:	000cfc17 	andeq	pc, ip, r7, lsl ip	; <UNPREDICTABLE>
    1684:	02410100 	subeq	r0, r1, #0, 2
    1688:	0000fa44 	andeq	pc, r0, r4, asr #20
    168c:	00070900 	andeq	r0, r7, r0, lsl #18
    1690:	0006f700 	andeq	pc, r6, r0, lsl #14
    1694:	0c931700 	ldceq	7, cr1, [r3], {0}
    1698:	41010000 	mrsmi	r0, (UNDEF: 1)
    169c:	024c5802 	subeq	r5, ip, #131072	; 0x20000
    16a0:	077b0000 	ldrbeq	r0, [fp, -r0]!
    16a4:	07770000 	ldrbeq	r0, [r7, -r0]!
    16a8:	761b0000 	ldrvc	r0, [fp], -r0
    16ac:	41010061 	tstmi	r1, r1, rrx
    16b0:	00e26802 	rsceq	r6, r2, r2, lsl #16
    16b4:	91020000 	mrsls	r0, (UNDEF: 2)
    16b8:	203e1c00 	eorscs	r1, lr, r0, lsl #24
    16bc:	43010000 	movwmi	r0, #4096	; 0x1000
    16c0:	00301002 	eorseq	r1, r0, r2
    16c4:	07b10000 	ldreq	r0, [r1, r0]!
    16c8:	07990000 	ldreq	r0, [r9, r0]
    16cc:	c41c0000 	ldrgt	r0, [ip], #-0
    16d0:	0100000d 	tsteq	r0, sp
    16d4:	30170243 	andscc	r0, r7, r3, asr #4
    16d8:	55000000 	strpl	r0, [r0, #-0]
    16dc:	3f000008 	svccc	0x00000008
    16e0:	1c000008 	stcne	0, cr0, [r0], {8}
    16e4:	00000e03 	andeq	r0, r0, r3, lsl #28
    16e8:	1e024301 	cdpne	3, 0, cr4, cr2, cr1, {0}
    16ec:	00000030 	andeq	r0, r0, r0, lsr r0
    16f0:	000008fd 	strdeq	r0, [r0], -sp
    16f4:	000008df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    16f8:	01006e14 	tsteq	r0, r4, lsl lr
    16fc:	30290243 	eorcc	r0, r9, r3, asr #4
    1700:	bb000000 	bllt	1708 <_Min_Stack_Size+0x708>
    1704:	ad000009 	stcge	0, cr0, [r0, #-36]	; 0xffffffdc
    1708:	14000009 	strne	r0, [r0], #-9
    170c:	00786469 	rsbseq	r6, r8, r9, ror #8
    1710:	0a024401 	beq	9271c <SYSTICK_CYCLES+0x696dd>
    1714:	000000ee 	andeq	r0, r0, lr, ror #1
    1718:	00000a77 	andeq	r0, r0, r7, ror sl
    171c:	00000a17 	andeq	r0, r0, r7, lsl sl
    1720:	0014841d 	andseq	r8, r4, sp, lsl r4
    1724:	0014a410 	andseq	sl, r4, r0, lsl r4
    1728:	00066310 	andeq	r6, r6, r0, lsl r3
    172c:	00771200 	rsbseq	r1, r7, r0, lsl #4
    1730:	11026c01 	tstne	r2, r1, lsl #24
    1734:	0000008c 	andeq	r0, r0, ip, lsl #1
    1738:	1d005001 	stcne	0, cr5, [r0, #-4]
    173c:	100014cc 	andne	r1, r0, ip, asr #9
    1740:	100014e0 	andne	r1, r0, r0, ror #9
    1744:	00000680 	andeq	r0, r0, r0, lsl #13
    1748:	000dbe13 	andeq	fp, sp, r3, lsl lr
    174c:	02800100 	addeq	r0, r0, #0, 2
    1750:	00008c13 	andeq	r8, r0, r3, lsl ip
    1754:	00530100 	subseq	r0, r3, r0, lsl #2
    1758:	0015ee1d 	andseq	lr, r5, sp, lsl lr
    175c:	0017da10 	andseq	sp, r7, r0, lsl sl
    1760:	00087310 	andeq	r7, r8, r0, lsl r3
    1764:	0dfe1c00 	ldcleq	12, cr1, [lr]
    1768:	b4010000 	strlt	r0, [r1], #-0
    176c:	00301602 	eorseq	r1, r0, r2, lsl #12
    1770:	0cad0000 	stceq	0, cr0, [sp]
    1774:	0c910000 	ldceq	0, cr0, [r1], {0}
    1778:	181e0000 	ldmdane	lr, {}	; <UNPREDICTABLE>
    177c:	e9000001 	stmdb	r0, {r0}
    1780:	1f000006 	svcne	0x00000006
    1784:	00000582 	andeq	r0, r0, r2, lsl #11
    1788:	1d02d601 	stcne	6, cr13, [r2, #-4]
    178c:	0000006d 	andeq	r0, r0, sp, rrx
    1790:	00170415 	andseq	r0, r7, r5, lsl r4
    1794:	00137c10 	andseq	r7, r3, r0, lsl ip
    1798:	50011600 	andpl	r1, r1, r0, lsl #12
    179c:	16007702 	strne	r7, [r0], -r2, lsl #14
    17a0:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    17a4:	52011600 	andpl	r1, r1, #0, 12
    17a8:	16007402 	strne	r7, [r0], -r2, lsl #8
    17ac:	76025301 	strvc	r5, [r2], -r1, lsl #6
    17b0:	7d021600 	stcvc	6, cr1, [r2, #-0]
    17b4:	007b0218 	rsbseq	r0, fp, r8, lsl r2
    17b8:	1c7d0216 	lfmne	f0, 2, [sp], #-88	; 0xffffffa8
    17bc:	00007502 	andeq	r7, r0, r2, lsl #10
    17c0:	17101d00 	ldrne	r1, [r0, -r0, lsl #26]
    17c4:	17401000 	strbne	r1, [r0, -r0]
    17c8:	073e1000 	ldreq	r1, [lr, -r0]!
    17cc:	82130000 	andshi	r0, r3, #0
    17d0:	01000005 	tsteq	r0, r5
    17d4:	5a1802db 	bpl	602348 <__RAM_SIZE+0x502348>
    17d8:	01000000 	mrseq	r0, (UNDEF: 0)
    17dc:	173e1552 			; <UNDEFINED> instruction: 0x173e1552
    17e0:	150f1000 	strne	r1, [pc, #-0]	; 17e8 <_Min_Stack_Size+0x7e8>
    17e4:	01160000 	tsteq	r6, r0
    17e8:	00770250 	rsbseq	r0, r7, r0, asr r2
    17ec:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    17f0:	01160078 	tsteq	r6, r8, ror r0
    17f4:	00740252 	rsbseq	r0, r4, r2, asr r2
    17f8:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    17fc:	02160076 	andseq	r0, r6, #118	; 0x76
    1800:	7b020c7d 	blvc	849fc <SYSTICK_CYCLES+0x5b9bd>
    1804:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1808:	48910310 	ldmmi	r1, {r4, r8, r9}
    180c:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1810:	00750214 	rsbseq	r0, r5, r4, lsl r2
    1814:	001e0000 	andseq	r0, lr, r0
    1818:	95000001 	strls	r0, [r0, #-1]
    181c:	1c000007 	stcne	0, cr0, [r0], {7}
    1820:	00000582 	andeq	r0, r0, r2, lsl #11
    1824:	1702df01 	strne	sp, [r2, -r1, lsl #30]
    1828:	0000008c 	andeq	r0, r0, ip, lsl #1
    182c:	00000d5e 	andeq	r0, r0, lr, asr sp
    1830:	00000d5c 	andeq	r0, r0, ip, asr sp
    1834:	0016be15 	andseq	fp, r6, r5, lsl lr
    1838:	00150f10 	andseq	r0, r5, r0, lsl pc
    183c:	50011600 	andpl	r1, r1, r0, lsl #12
    1840:	16007702 	strne	r7, [r0], -r2, lsl #14
    1844:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1848:	52011600 	andpl	r1, r1, #0, 12
    184c:	16007402 	strne	r7, [r0], -r2, lsl #8
    1850:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1854:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1858:	007b020c 	rsbseq	r0, fp, ip, lsl #4
    185c:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    1860:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    1864:	147d0216 	ldrbtne	r0, [sp], #-534	; 0xfffffdea
    1868:	00007502 	andeq	r7, r0, r2, lsl #10
    186c:	00e81e00 	rsceq	r1, r8, r0, lsl #28
    1870:	07f20000 	ldrbeq	r0, [r2, r0]!
    1874:	821c0000 	andshi	r0, ip, #0
    1878:	01000005 	tsteq	r0, r5
    187c:	9d2002ee 	sfmls	f0, 4, [r0, #-952]!	; 0xfffffc48
    1880:	75000000 	strvc	r0, [r0, #-0]
    1884:	7100000d 	tstvc	r0, sp
    1888:	1500000d 	strne	r0, [r0, #-13]
    188c:	10001668 	andne	r1, r0, r8, ror #12
    1890:	0000150f 	andeq	r1, r0, pc, lsl #10
    1894:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1898:	01160077 	tsteq	r6, r7, ror r0
    189c:	00780251 	rsbseq	r0, r8, r1, asr r2
    18a0:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    18a4:	01160074 	tsteq	r6, r4, ror r0
    18a8:	00760253 	rsbseq	r0, r6, r3, asr r2
    18ac:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    18b0:	02163001 	andseq	r3, r6, #1
    18b4:	7b020c7d 	blvc	84ab0 <SYSTICK_CYCLES+0x5ba71>
    18b8:	7d021600 	stcvc	6, cr1, [r2, #-0]
    18bc:	48910310 	ldmmi	r1, {r4, r8, r9}
    18c0:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    18c4:	00750214 	rsbseq	r0, r5, r4, lsl r2
    18c8:	92200000 	eorls	r0, r0, #0
    18cc:	7c100017 	ldcvc	0, cr0, [r0], {23}
    18d0:	34000013 	strcc	r0, [r0], #-19	; 0xffffffed
    18d4:	16000008 	strne	r0, [r0], -r8
    18d8:	77025001 	strvc	r5, [r2, -r1]
    18dc:	51011600 	tstpl	r1, r0, lsl #12
    18e0:	16007802 	strne	r7, [r0], -r2, lsl #16
    18e4:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    18e8:	53011600 	movwpl	r1, #5632	; 0x1600
    18ec:	16007602 	strne	r7, [r0], -r2, lsl #12
    18f0:	01087d02 	tsteq	r8, r2, lsl #26
    18f4:	7d021630 	stcvc	6, cr1, [r2, #-192]	; 0xffffff40
    18f8:	007b0218 	rsbseq	r0, fp, r8, lsl r2
    18fc:	1c7d0216 	lfmne	f0, 2, [sp], #-88	; 0xffffffa8
    1900:	06489103 	strbeq	r9, [r8], -r3, lsl #2
    1904:	207d0216 	rsbscs	r0, sp, r6, lsl r2
    1908:	00007502 	andeq	r7, r0, r2, lsl #10
    190c:	0017bc15 	andseq	fp, r7, r5, lsl ip
    1910:	00150f10 	andseq	r0, r5, r0, lsl pc
    1914:	50011600 	andpl	r1, r1, r0, lsl #12
    1918:	16007702 	strne	r7, [r0], -r2, lsl #14
    191c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1920:	52011600 	andpl	r1, r1, #0, 12
    1924:	16007402 	strne	r7, [r0], -r2, lsl #8
    1928:	76025301 	strvc	r5, [r2], -r1, lsl #6
    192c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1930:	16300104 	ldrtne	r0, [r0], -r4, lsl #2
    1934:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    1938:	0216007b 	andseq	r0, r6, #123	; 0x7b
    193c:	9103107d 	tstls	r3, sp, ror r0
    1940:	02160648 	andseq	r0, r6, #72, 12	; 0x4800000
    1944:	7502147d 	strvc	r1, [r2, #-1149]	; 0xfffffb83
    1948:	1e000000 	cdpne	0, 0, cr0, cr0, cr0, {0}
    194c:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1950:	000008ec 	andeq	r0, r0, ip, ror #17
    1954:	01006c14 	tsteq	r0, r4, lsl ip
    1958:	30160309 	andscc	r0, r6, r9, lsl #6
    195c:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
    1960:	9400000d 	strls	r0, [r0], #-13
    1964:	2100000d 	tstcs	r0, sp
    1968:	10001886 	andne	r1, r0, r6, lsl #17
    196c:	000008ab 	andeq	r0, r0, fp, lsr #17
    1970:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1974:	01160078 	tsteq	r6, r8, ror r0
    1978:	00740252 	rsbseq	r0, r4, r2, asr r2
    197c:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1980:	21000076 	tstcs	r0, r6, ror r0
    1984:	1000189e 	mulne	r0, lr, r8
    1988:	000008cd 	andeq	r0, r0, sp, asr #17
    198c:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1990:	01162008 	tsteq	r6, r8
    1994:	00780251 	rsbseq	r0, r8, r1, asr r2
    1998:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    199c:	01167f7a 	tsteq	r6, sl, ror pc
    19a0:	00760253 	rsbseq	r0, r6, r3, asr r2
    19a4:	18ca2200 	stmiane	sl, {r9, sp}^
    19a8:	01161000 	tsteq	r6, r0
    19ac:	20080250 	andcs	r0, r8, r0, asr r2
    19b0:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    19b4:	01160078 	tsteq	r6, r8, ror r0
    19b8:	7f750252 	svcvc	0x00750252
    19bc:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    19c0:	00000076 	andeq	r0, r0, r6, ror r0
    19c4:	0018da1d 	andseq	sp, r8, sp, lsl sl
    19c8:	0019a410 	andseq	sl, r9, r0, lsl r4
    19cc:	0009b110 	andeq	fp, r9, r0, lsl r1
    19d0:	00701400 	rsbseq	r1, r0, r0, lsl #8
    19d4:	15031d01 	strne	r1, [r3, #-3329]	; 0xfffff2ff
    19d8:	0000024c 	andeq	r0, r0, ip, asr #4
    19dc:	00000e24 	andeq	r0, r0, r4, lsr #28
    19e0:	00000e20 	andeq	r0, r0, r0, lsr #28
    19e4:	01006c14 	tsteq	r0, r4, lsl ip
    19e8:	3016031e 	andscc	r0, r6, lr, lsl r3
    19ec:	58000000 	stmdapl	r0, {}	; <UNPREDICTABLE>
    19f0:	4200000e 	andmi	r0, r0, #14
    19f4:	2300000e 	movwcs	r0, #14
    19f8:	00001964 	andeq	r1, r0, r4, ror #18
    19fc:	100018f2 	strdne	r1, [r0], -r2
    1a00:	10001908 	andne	r1, r0, r8, lsl #18
    1a04:	1a031e01 	bne	c9210 <SYSTICK_CYCLES+0xa01d1>
    1a08:	00000954 	andeq	r0, r0, r4, asr r9
    1a0c:	00198224 	andseq	r8, r9, r4, lsr #4
    1a10:	000ee100 	andeq	lr, lr, r0, lsl #2
    1a14:	000edb00 	andeq	sp, lr, r0, lsl #22
    1a18:	19762500 	ldmdbne	r6!, {r8, sl, sp}^
    1a1c:	8e260000 	cdphi	0, 2, cr0, cr6, cr0, {0}
    1a20:	0c000019 	stceq	0, cr0, [r0], {25}
    1a24:	0a00000f 	beq	1a68 <_Min_Stack_Size+0xa68>
    1a28:	0000000f 	andeq	r0, r0, pc
    1a2c:	00194021 	andseq	r4, r9, r1, lsr #32
    1a30:	00097610 	andeq	r7, r9, r0, lsl r6
    1a34:	50011600 	andpl	r1, r1, r0, lsl #12
    1a38:	16200802 	strtne	r0, [r0], -r2, lsl #16
    1a3c:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1a40:	52011600 	andpl	r1, r1, #0, 12
    1a44:	167f7902 	ldrbtne	r7, [pc], -r2, lsl #18
    1a48:	76025301 	strvc	r5, [r2], -r1, lsl #6
    1a4c:	62210000 	eorvs	r0, r1, #0
    1a50:	92100019 	andsls	r0, r0, #25
    1a54:	16000009 	strne	r0, [r0], -r9
    1a58:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1a5c:	52011600 	andpl	r1, r1, #0, 12
    1a60:	167f7502 	ldrbtne	r7, [pc], -r2, lsl #10
    1a64:	7b025301 	blvc	96670 <SYSTICK_CYCLES+0x6d631>
    1a68:	94220000 	strtls	r0, [r2], #-0
    1a6c:	16100019 			; <UNDEFINED> instruction: 0x16100019
    1a70:	08025001 	stmdaeq	r2, {r0, ip, lr}
    1a74:	51011620 	tstpl	r1, r0, lsr #12
    1a78:	16007802 	strne	r7, [r0], -r2, lsl #16
    1a7c:	75025201 	strvc	r5, [r2, #-513]	; 0xfffffdff
    1a80:	5301167f 	movwpl	r1, #5759	; 0x167f
    1a84:	00007602 	andeq	r7, r0, r2, lsl #12
    1a88:	19a41d00 	stmibne	r4!, {r8, sl, fp, ip}
    1a8c:	19da1000 	ldmibne	sl, {ip}^
    1a90:	0a161000 	beq	585a98 <__RAM_SIZE+0x485a98>
    1a94:	f81c0000 			; <UNDEFINED> instruction: 0xf81c0000
    1a98:	0100000d 	tsteq	r0, sp
    1a9c:	8414033a 	ldrhi	r0, [r4], #-826	; 0xfffffcc6
    1aa0:	2100000b 	tstcs	r0, fp
    1aa4:	1f00000f 	svcne	0x0000000f
    1aa8:	1500000f 	strne	r0, [r0, #-15]
    1aac:	100019d0 	ldrdne	r1, [r0], -r0
    1ab0:	0000150f 	andeq	r1, r0, pc, lsl #10
    1ab4:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1ab8:	01160077 	tsteq	r6, r7, ror r0
    1abc:	00780251 	rsbseq	r0, r8, r1, asr r2
    1ac0:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1ac4:	01160074 	tsteq	r6, r4, ror r0
    1ac8:	00760253 	rsbseq	r0, r6, r3, asr r2
    1acc:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    1ad0:	02163001 	andseq	r3, r6, #1
    1ad4:	4001087d 	andmi	r0, r1, sp, ror r8
    1ad8:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1adc:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1ae0:	01107d02 	tsteq	r0, r2, lsl #26
    1ae4:	7d021638 	stcvc	6, cr1, [r2, #-224]	; 0xffffff20
    1ae8:	00750214 	rsbseq	r0, r5, r4, lsl r2
    1aec:	46270000 	strtmi	r0, [r7], -r0
    1af0:	08000019 	stmdaeq	r0, {r0, r3, r4}
    1af4:	03100014 	tsteq	r0, #20
    1af8:	00140800 	andseq	r0, r4, r0, lsl #16
    1afc:	00140e10 	andseq	r0, r4, r0, lsl lr
    1b00:	02680110 	rsbeq	r0, r8, #16, 2
    1b04:	000a3f09 	andeq	r3, sl, r9, lsl #30
    1b08:	19582400 	ldmdbne	r8, {sl, sp}^
    1b0c:	0f370000 	svceq	0x00370000
    1b10:	0f350000 	svceq	0x00350000
    1b14:	27000000 	strcs	r0, [r0, -r0]
    1b18:	00001946 	andeq	r1, r0, r6, asr #18
    1b1c:	100014ae 	andne	r1, r0, lr, lsr #9
    1b20:	14ae0000 	strtne	r0, [lr], #0
    1b24:	14b41000 	ldrtne	r1, [r4], #0
    1b28:	7c011000 	stcvc	0, cr1, [r1], {-0}
    1b2c:	0a680b02 	beq	1a0473c <__RAM_SIZE+0x190473c>
    1b30:	58240000 	stmdapl	r4!, {}	; <UNPREDICTABLE>
    1b34:	4c000019 	stcmi	0, cr0, [r0], {25}
    1b38:	4a00000f 	bmi	1b7c <_Min_Stack_Size+0xb7c>
    1b3c:	0000000f 	andeq	r0, r0, pc
    1b40:	0013d628 	andseq	sp, r3, r8, lsr #12
    1b44:	00770210 	rsbseq	r0, r7, r0, lsl r2
    1b48:	00000a87 	andeq	r0, r0, r7, lsl #21
    1b4c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    1b50:	01160078 	tsteq	r6, r8, ror r0
    1b54:	00740252 	rsbseq	r0, r4, r2, asr r2
    1b58:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    1b5c:	20000076 	andcs	r0, r0, r6, ror r0
    1b60:	10001480 	andne	r1, r0, r0, lsl #9
    1b64:	000018d8 	ldrdeq	r1, [r0], -r8
    1b68:	00000a9b 	muleq	r0, fp, sl
    1b6c:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1b70:	20005491 	mulcs	r0, r1, r4
    1b74:	100014c8 	andne	r1, r0, r8, asr #9
    1b78:	000018d8 	ldrdeq	r1, [r0], -r8
    1b7c:	00000aaf 	andeq	r0, r0, pc, lsr #21
    1b80:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1b84:	20005491 	mulcs	r0, r1, r4
    1b88:	1000180a 	andne	r1, r0, sl, lsl #16
    1b8c:	00000fa8 	andeq	r0, r0, r8, lsr #31
    1b90:	00000aeb 	andeq	r0, r0, fp, ror #21
    1b94:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1b98:	01160077 	tsteq	r6, r7, ror r0
    1b9c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1ba0:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1ba4:	01160074 	tsteq	r6, r4, ror r0
    1ba8:	00760253 	rsbseq	r0, r6, r3, asr r2
    1bac:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1bb0:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1bb4:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1bb8:	16064891 			; <UNDEFINED> instruction: 0x16064891
    1bbc:	02107d02 	andseq	r7, r0, #2, 26	; 0x80
    1bc0:	20000075 	andcs	r0, r0, r5, ror r0
    1bc4:	1000185e 	andne	r1, r0, lr, asr r8
    1bc8:	00000b89 	andeq	r0, r0, r9, lsl #23
    1bcc:	00000b27 	andeq	r0, r0, r7, lsr #22
    1bd0:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1bd4:	01160077 	tsteq	r6, r7, ror r0
    1bd8:	00780251 	rsbseq	r0, r8, r1, asr r2
    1bdc:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1be0:	01160074 	tsteq	r6, r4, ror r0
    1be4:	00760253 	rsbseq	r0, r6, r3, asr r2
    1be8:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1bec:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1bf0:	030c7d02 	movweq	r7, #52482	; 0xcd02
    1bf4:	16064891 			; <UNDEFINED> instruction: 0x16064891
    1bf8:	02107d02 	andseq	r7, r0, #2, 26	; 0x80
    1bfc:	21000075 	tstcs	r0, r5, ror r0
    1c00:	100019e6 	andne	r1, r0, r6, ror #19
    1c04:	00000b49 	andeq	r0, r0, r9, asr #22
    1c08:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    1c0c:	01162508 	tsteq	r6, r8, lsl #10
    1c10:	00780251 	rsbseq	r0, r8, r1, asr r2
    1c14:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1c18:	01160074 	tsteq	r6, r4, ror r0
    1c1c:	00760253 	rsbseq	r0, r6, r3, asr r2
    1c20:	19fa2100 	ldmibne	sl!, {r8, sp}^
    1c24:	0b651000 	bleq	1945c2c <__RAM_SIZE+0x1845c2c>
    1c28:	01160000 	tsteq	r6, r0
    1c2c:	00780251 	rsbseq	r0, r8, r1, asr r2
    1c30:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    1c34:	01160074 	tsteq	r6, r4, ror r0
    1c38:	00760253 	rsbseq	r0, r6, r3, asr r2
    1c3c:	1a1a2200 	bne	68a444 <__RAM_SIZE+0x58a444>
    1c40:	01161000 	tsteq	r6, r0
    1c44:	16300150 			; <UNDEFINED> instruction: 0x16300150
    1c48:	78025101 	stmdavc	r2, {r0, r8, ip, lr}
    1c4c:	53011600 	movwpl	r1, #5632	; 0x1600
    1c50:	00007602 	andeq	r7, r0, r2, lsl #12
    1c54:	02010200 	andeq	r0, r1, #0, 4
    1c58:	00000d26 	andeq	r0, r0, r6, lsr #26
    1c5c:	000b7d03 	andeq	r7, fp, r3, lsl #26
    1c60:	0bf41a00 	bleq	ffd08468 <__RAM_segment_used_end__+0xc7c08468>
    1c64:	d3010000 	movwle	r0, #4096	; 0x1000
    1c68:	ee010f01 	cdp	15, 0, cr0, cr1, cr1, {0}
    1c6c:	20000000 	andcs	r0, r0, r0
    1c70:	0a10000c 	beq	401ca8 <__RAM_SIZE+0x301ca8>
    1c74:	5f100010 	svcpl	0x00100010
    1c78:	0100000f 	tsteq	r0, pc
    1c7c:	00000fa3 	andeq	r0, r0, r3, lsr #31
    1c80:	74756f0f 	ldrbtvc	r6, [r5], #-3855	; 0xfffff0f1
    1c84:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1c88:	00010622 	andeq	r0, r1, r2, lsr #12
    1c8c:	000fc100 	andeq	ip, pc, r0, lsl #2
    1c90:	000fbd00 	andeq	fp, pc, r0, lsl #26
    1c94:	0bcf1700 	bleq	ff3c789c <__RAM_segment_used_end__+0xc72c789c>
    1c98:	d3010000 	movwle	r0, #4096	; 0x1000
    1c9c:	02ee2d01 	rsceq	r2, lr, #1, 26	; 0x40
    1ca0:	0fe30000 	svceq	0x00e30000
    1ca4:	0fdf0000 	svceq	0x00df0000
    1ca8:	690f0000 	stmdbvs	pc, {}	; <UNPREDICTABLE>
    1cac:	01007864 	tsteq	r0, r4, ror #16
    1cb0:	ee3c01d3 	mrc	1, 1, r0, cr12, cr3, {6}
    1cb4:	17000000 	strne	r0, [r0, -r0]
    1cb8:	01000010 	tsteq	r0, r0, lsl r0
    1cbc:	17000010 	smladne	r0, r0, r0, r0
    1cc0:	00000cfc 	strdeq	r0, [r0], -ip
    1cc4:	4801d301 	stmdami	r1, {r0, r8, r9, ip, lr, pc}
    1cc8:	000000ee 	andeq	r0, r0, lr, ror #1
    1ccc:	0000109c 	muleq	r0, ip, r0
    1cd0:	00001098 	muleq	r0, r8, r0
    1cd4:	00058217 	andeq	r8, r5, r7, lsl r2
    1cd8:	01d30100 	bicseq	r0, r3, r0, lsl #2
    1cdc:	00002957 	andeq	r2, r0, r7, asr r9
    1ce0:	0010c600 	andseq	ip, r0, r0, lsl #12
    1ce4:	0010ba00 	andseq	fp, r0, r0, lsl #20
    1ce8:	0dbe1700 	ldceq	7, cr1, [lr]
    1cec:	d3010000 	movwle	r0, #4096	; 0x1000
    1cf0:	00306b01 	eorseq	r6, r0, r1, lsl #22
    1cf4:	11250000 			; <UNDEFINED> instruction: 0x11250000
    1cf8:	11190000 	tstne	r9, r0
    1cfc:	c4170000 	ldrgt	r0, [r7], #-0
    1d00:	0100000d 	tsteq	r0, sp
    1d04:	307e01d3 	ldrsbtcc	r0, [lr], #-19	; 0xffffffed
    1d08:	77000000 	strvc	r0, [r0, -r0]
    1d0c:	73000011 	movwvc	r0, #17
    1d10:	17000011 	smladne	r0, r1, r0, r0
    1d14:	0000203e 	andeq	r2, r0, lr, lsr r0
    1d18:	9201d301 	andls	sp, r1, #67108864	; 0x4000000
    1d1c:	00000030 	andeq	r0, r0, r0, lsr r0
    1d20:	0000119f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
    1d24:	00001197 	muleq	r0, r7, r1
    1d28:	000c581c 	andeq	r5, ip, ip, lsl r8
    1d2c:	01db0100 	bicseq	r0, fp, r0, lsl #2
    1d30:	000b840e 	andeq	r8, fp, lr, lsl #8
    1d34:	0011da00 	andseq	sp, r1, r0, lsl #20
    1d38:	0011d600 	andseq	sp, r1, r0, lsl #12
    1d3c:	01082900 	tsteq	r8, r0, lsl #18
    1d40:	860301e7 	strhi	r0, [r3], -r7, ror #3
    1d44:	2a00000c 	bcs	1d7c <_Min_Stack_Size+0xd7c>
    1d48:	e8010055 	stmda	r1, {r0, r2, r4, r6}
    1d4c:	00a20e01 	adceq	r0, r2, r1, lsl #28
    1d50:	462a0000 	strtmi	r0, [sl], -r0
    1d54:	01e90100 	mvneq	r0, r0, lsl #2
    1d58:	0000290e 	andeq	r2, r0, lr, lsl #18
    1d5c:	4c1c0000 	ldcmi	0, cr0, [ip], {-0}
    1d60:	0100000d 	tsteq	r0, sp
    1d64:	650501ea 	strvs	r0, [r5, #-490]	; 0xfffffe16
    1d68:	1e00000c 	cdpne	0, 0, cr0, cr0, cr12, {0}
    1d6c:	1a000012 	bne	1dbc <_Min_Stack_Size+0xdbc>
    1d70:	1c000012 	stcne	0, cr0, [r0], {18}
    1d74:	00000bb3 			; <UNDEFINED> instruction: 0x00000bb3
    1d78:	0701ed01 	streq	lr, [r1, -r1, lsl #26]
    1d7c:	00000085 	andeq	r0, r0, r5, lsl #1
    1d80:	00001256 	andeq	r1, r0, r6, asr r2
    1d84:	0000124a 	andeq	r1, r0, sl, asr #4
    1d88:	000caa1c 	andeq	sl, ip, ip, lsl sl
    1d8c:	01f00100 	mvnseq	r0, r0, lsl #2
    1d90:	00008507 	andeq	r8, r0, r7, lsl #10
    1d94:	0012b300 	andseq	fp, r2, r0, lsl #6
    1d98:	0012a900 	andseq	sl, r2, r0, lsl #18
    1d9c:	007a1400 	rsbseq	r1, sl, r0, lsl #8
    1da0:	1001f301 	andne	pc, r1, r1, lsl #6
    1da4:	00000fa3 	andeq	r0, r0, r3, lsr #31
    1da8:	000012f5 	strdeq	r1, [r0], -r5
    1dac:	000012f3 	strdeq	r1, [r0], -r3
    1db0:	00327a14 	eorseq	r7, r2, r4, lsl sl
    1db4:	1001f401 	andne	pc, r1, r1, lsl #8
    1db8:	00000fa3 	andeq	r0, r0, r3, lsr #31
    1dbc:	00001313 	andeq	r1, r0, r3, lsl r3
    1dc0:	0000130d 	andeq	r1, r0, sp, lsl #6
    1dc4:	000bde1c 	andeq	sp, fp, ip, lsl lr
    1dc8:	01ff0100 	mvnseq	r0, r0, lsl #2
    1dcc:	00003010 	andeq	r3, r0, r0, lsl r0
    1dd0:	00135100 	andseq	r5, r3, r0, lsl #2
    1dd4:	00134500 	andseq	r4, r3, r0, lsl #10
    1dd8:	0dc31c00 	stcleq	12, cr1, [r3]
    1ddc:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    1de0:	00301002 	eorseq	r1, r0, r2
    1de4:	13a80000 			; <UNDEFINED> instruction: 0x13a80000
    1de8:	139e0000 	orrsne	r0, lr, #0
    1dec:	441c0000 	ldrmi	r0, [ip], #-0
    1df0:	0100000c 	tsteq	r0, ip
    1df4:	fa10022c 	blx	4026ac <__RAM_SIZE+0x3026ac>
    1df8:	ea000000 	b	1e00 <_Min_Stack_Size+0xe00>
    1dfc:	e8000013 	stmda	r0, {r0, r1, r4}
    1e00:	2b000013 	blcs	1e54 <_Min_Stack_Size+0xe54>
    1e04:	10000c3e 	andne	r0, r0, lr, lsr ip
    1e08:	00001b1c 	andeq	r1, r0, ip, lsl fp
    1e0c:	000c522b 	andeq	r5, ip, fp, lsr #4
    1e10:	001b2710 	andseq	r2, fp, r0, lsl r7
    1e14:	0c682b00 			; <UNDEFINED> instruction: 0x0c682b00
    1e18:	1b321000 	blne	c85e20 <__RAM_SIZE+0xb85e20>
    1e1c:	7a2b0000 	bvc	ac1e24 <__RAM_SIZE+0x9c1e24>
    1e20:	3210000c 	andscc	r0, r0, #12
    1e24:	2b00001b 	blcs	1e98 <_Min_Stack_Size+0xe98>
    1e28:	10000cb6 			; <UNDEFINED> instruction: 0x10000cb6
    1e2c:	00001b3d 	andeq	r1, r0, sp, lsr fp
    1e30:	000cc02b 	andeq	ip, ip, fp, lsr #32
    1e34:	001b4810 	andseq	r4, fp, r0, lsl r8
    1e38:	0cca2b00 	vstmiaeq	sl, {d18-d17}
    1e3c:	1b531000 	blne	14c5e44 <__RAM_SIZE+0x13c5e44>
    1e40:	da2b0000 	ble	ac1e48 <__RAM_SIZE+0x9c1e48>
    1e44:	5e10000c 	cdppl	0, 1, cr0, cr0, cr12, {0}
    1e48:	2b00001b 	blcs	1ebc <_Min_Stack_Size+0xebc>
    1e4c:	10000ce4 	andne	r0, r0, r4, ror #25
    1e50:	00001b48 	andeq	r1, r0, r8, asr #22
    1e54:	000cf02b 	andeq	pc, ip, fp, lsr #32
    1e58:	001b5310 	andseq	r5, fp, r0, lsl r3
    1e5c:	0cf42b00 	vldmiaeq	r4!, {d18-d17}
    1e60:	1b691000 	blne	1a45e68 <__RAM_SIZE+0x1945e68>
    1e64:	fa2b0000 	blx	ac1e6c <__RAM_SIZE+0x9c1e6c>
    1e68:	3d10000c 	ldccc	0, cr0, [r0, #-48]	; 0xffffffd0
    1e6c:	2b00001b 	blcs	1ee0 <_Min_Stack_Size+0xee0>
    1e70:	10000d08 	andne	r0, r0, r8, lsl #26
    1e74:	00001b48 	andeq	r1, r0, r8, asr #22
    1e78:	000d102b 	andeq	r1, sp, fp, lsr #32
    1e7c:	001b5310 	andseq	r5, fp, r0, lsl r3
    1e80:	0d142b00 	vldreq	d2, [r4, #-0]
    1e84:	1b691000 	blne	1a45e8c <__RAM_SIZE+0x1945e8c>
    1e88:	242b0000 	strtcs	r0, [fp], #-0
    1e8c:	4810000d 	ldmdami	r0, {r0, r2, r3}
    1e90:	2b00001b 	blcs	1f04 <_Min_Stack_Size+0xf04>
    1e94:	10000d2e 	andne	r0, r0, lr, lsr #26
    1e98:	00001b3d 	andeq	r1, r0, sp, lsr fp
    1e9c:	000d382b 	andeq	r3, sp, fp, lsr #16
    1ea0:	001b4810 	andseq	r4, fp, r0, lsl r8
    1ea4:	0d442b00 	vstreq	d18, [r4, #-0]
    1ea8:	1b5e1000 	blne	1785eb0 <__RAM_SIZE+0x1685eb0>
    1eac:	502b0000 	eorpl	r0, fp, r0
    1eb0:	4810000d 	ldmdami	r0, {r0, r2, r3}
    1eb4:	2b00001b 	blcs	1f28 <_Min_Stack_Size+0xf28>
    1eb8:	10000d74 	andne	r0, r0, r4, ror sp
    1ebc:	00001b53 	andeq	r1, r0, r3, asr fp
    1ec0:	000d862b 	andeq	r8, sp, fp, lsr #12
    1ec4:	001b5e10 	andseq	r5, fp, r0, lsl lr
    1ec8:	0d962b00 	vldreq	d2, [r6]
    1ecc:	1b741000 	blne	1d05ed4 <__RAM_SIZE+0x1c05ed4>
    1ed0:	9e2b0000 	cdpls	0, 2, cr0, cr11, cr0, {0}
    1ed4:	5310000d 	tstpl	r0, #13
    1ed8:	2b00001b 	blcs	1f4c <_Min_Stack_Size+0xf4c>
    1edc:	10000daa 	andne	r0, r0, sl, lsr #27
    1ee0:	00001b74 	andeq	r1, r0, r4, ror fp
    1ee4:	000db22b 	andeq	fp, sp, fp, lsr #4
    1ee8:	001b5310 	andseq	r5, fp, r0, lsl r3
    1eec:	0dbe2b00 			; <UNDEFINED> instruction: 0x0dbe2b00
    1ef0:	1b741000 	blne	1d05ef8 <__RAM_SIZE+0x1c05ef8>
    1ef4:	ca2b0000 	bgt	ac1efc <__RAM_SIZE+0x9c1efc>
    1ef8:	5310000d 	tstpl	r0, #13
    1efc:	2b00001b 	blcs	1f70 <_Min_Stack_Size+0xf70>
    1f00:	10000dd6 	ldrdne	r0, [r0], -r6
    1f04:	00001b74 	andeq	r1, r0, r4, ror fp
    1f08:	000dde2b 	andeq	sp, sp, fp, lsr #28
    1f0c:	001b5310 	andseq	r5, fp, r0, lsl r3
    1f10:	0de62b00 			; <UNDEFINED> instruction: 0x0de62b00
    1f14:	1b481000 	blne	1205f1c <__RAM_SIZE+0x1105f1c>
    1f18:	f62b0000 			; <UNDEFINED> instruction: 0xf62b0000
    1f1c:	2710000d 	ldrcs	r0, [r0, -sp]
    1f20:	2b00001b 	blcs	1f94 <_Min_Stack_Size+0xf94>
    1f24:	10000e06 	andne	r0, r0, r6, lsl #28
    1f28:	00001b74 	andeq	r1, r0, r4, ror fp
    1f2c:	000e2e2b 	andeq	r2, lr, fp, lsr #28
    1f30:	001b7f10 	andseq	r7, fp, r0, lsl pc
    1f34:	0e402b00 	vmlaeq.f64	d18, d0, d0
    1f38:	1b321000 	blne	c85f40 <__RAM_SIZE+0xb85f40>
    1f3c:	72200000 	eorvc	r0, r0, #0
    1f40:	a810000e 	ldmdage	r0, {r1, r2, r3}
    1f44:	ae00000f 	cdpge	0, 0, cr0, cr0, cr15, {0}
    1f48:	1600000e 	strne	r0, [r0], -lr
    1f4c:	7a025001 	bvc	95f58 <SYSTICK_CYCLES+0x6cf19>
    1f50:	51011600 	tstpl	r1, r0, lsl #12
    1f54:	16007402 	strne	r7, [r0], -r2, lsl #8
    1f58:	7b025201 	blvc	96764 <SYSTICK_CYCLES+0x6d725>
    1f5c:	53011600 	movwpl	r1, #5632	; 0x1600
    1f60:	16007502 	strne	r7, [r0], -r2, lsl #10
    1f64:	05007d02 	streq	r7, [r0, #-3330]	; 0xfffff2fe
    1f68:	08f60091 	ldmeq	r6!, {r0, r4, r7}^
    1f6c:	7d021629 	stcvc	6, cr1, [r2, #-164]	; 0xffffff5c
    1f70:	08910308 	ldmeq	r1, {r3, r8, r9}
    1f74:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1f78:	0c91030c 	ldceq	3, cr0, [r1], {12}
    1f7c:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    1f80:	10910310 	addsne	r0, r1, r0, lsl r3
    1f84:	4c2b0006 	stcmi	0, cr0, [fp], #-24	; 0xffffffe8
    1f88:	7410000f 	ldrvc	r0, [r0], #-15
    1f8c:	2b00001b 	blcs	2000 <_Min_Stack_Size+0x1000>
    1f90:	10000f5c 	andne	r0, r0, ip, asr pc
    1f94:	00001b32 	andeq	r1, r0, r2, lsr fp
    1f98:	000f8420 	andeq	r8, pc, r0, lsr #8
    1f9c:	000fa810 	andeq	sl, pc, r0, lsl r8	; <UNPREDICTABLE>
    1fa0:	000f0c00 	andeq	r0, pc, r0, lsl #24
    1fa4:	50011600 	andpl	r1, r1, r0, lsl #12
    1fa8:	16007a02 	strne	r7, [r0], -r2, lsl #20
    1fac:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    1fb0:	52011600 	andpl	r1, r1, #0, 12
    1fb4:	16007b02 	strne	r7, [r0], -r2, lsl #22
    1fb8:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    1fbc:	7d021600 	stcvc	6, cr1, [r2, #-0]
    1fc0:	a8910600 	ldmge	r1, {r9, sl}
    1fc4:	2908f67f 	stmdbcs	r8, {r0, r1, r2, r3, r4, r5, r6, r9, sl, ip, sp, lr, pc}
    1fc8:	087d0216 	ldmdaeq	sp!, {r1, r2, r4, r9}^
    1fcc:	06089103 	streq	r9, [r8], -r3, lsl #2
    1fd0:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    1fd4:	16007802 	strne	r7, [r0], -r2, lsl #16
    1fd8:	07107d02 	ldreq	r7, [r0, -r2, lsl #26]
    1fdc:	0b061091 	bleq	186228 <__RAM_SIZE+0x86228>
    1fe0:	001af7ff 			; <UNDEFINED> instruction: 0x001af7ff
    1fe4:	000fa421 	andeq	sl, pc, r1, lsr #8
    1fe8:	000f2810 	andeq	r2, pc, r0, lsl r8	; <UNPREDICTABLE>
    1fec:	51011600 	tstpl	r1, r0, lsl #12
    1ff0:	16007402 	strne	r7, [r0], -r2, lsl #8
    1ff4:	78025201 	stmdavc	r2, {r0, r9, ip, lr}
    1ff8:	5301167f 	movwpl	r1, #5759	; 0x167f
    1ffc:	00007502 	andeq	r7, r0, r2, lsl #10
    2000:	000fce20 	andeq	ip, pc, r0, lsr #28
    2004:	00150f10 	andseq	r0, r5, r0, lsl pc
    2008:	000f8400 	andeq	r8, pc, r0, lsl #8
    200c:	50011600 	andpl	r1, r1, r0, lsl #12
    2010:	16007a02 	strne	r7, [r0], -r2, lsl #20
    2014:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    2018:	52011600 	andpl	r1, r1, #0, 12
    201c:	16007802 	strne	r7, [r0], -r2, lsl #16
    2020:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    2024:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2028:	00760c00 	rsbseq	r0, r6, r0, lsl #24
    202c:	0076264f 	rsbseq	r2, r6, pc, asr #12
    2030:	4f007627 	svcmi	0x00007627
    2034:	02161c26 	andseq	r1, r6, #9728	; 0x2600
    2038:	7604047d 			; <UNDEFINED> instruction: 0x7604047d
    203c:	16254f00 	strtne	r4, [r5], -r0, lsl #30
    2040:	01087d02 	tsteq	r8, r2, lsl #26
    2044:	7d02163a 	stcvc	6, cr1, [r2, #-232]	; 0xffffff18
    2048:	b091040c 	addslt	r0, r1, ip, lsl #8
    204c:	0216067f 	andseq	r0, r6, #133169152	; 0x7f00000
    2050:	7702107d 	smlsdxvc	r2, sp, r0, r1
    2054:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2058:	00350114 	eorseq	r0, r5, r4, lsl r1
    205c:	000ffc22 	andeq	pc, pc, r2, lsr #24
    2060:	50011610 	andpl	r1, r1, r0, lsl r6
    2064:	16200802 	strtne	r0, [r0], -r2, lsl #16
    2068:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    206c:	52011600 	andpl	r1, r1, #0, 12
    2070:	167f7602 	ldrbtne	r7, [pc], -r2, lsl #12
    2074:	75025301 	strvc	r5, [r2, #-769]	; 0xfffffcff
    2078:	03000000 	movweq	r0, #0
    207c:	00000029 	andeq	r0, r0, r9, lsr #32
    2080:	000c9a1a 	andeq	r9, ip, sl, lsl sl
    2084:	01530100 	cmpeq	r3, r0, lsl #2
    2088:	00ee010f 	rsceq	r0, lr, pc, lsl #2
    208c:	10100000 	andsne	r0, r0, r0
    2090:	13a61000 			; <UNDEFINED> instruction: 0x13a61000
    2094:	13fd1000 	mvnsne	r1, #0
    2098:	57010000 	strpl	r0, [r1, -r0]
    209c:	0f000013 	svceq	0x00000013
    20a0:	0074756f 	rsbseq	r7, r4, pc, ror #10
    20a4:	22015301 	andcs	r5, r1, #67108864	; 0x4000000
    20a8:	00000106 	andeq	r0, r0, r6, lsl #2
    20ac:	0000145f 	andeq	r1, r0, pc, asr r4
    20b0:	0000145b 	andeq	r1, r0, fp, asr r4
    20b4:	000bcf17 	andeq	ip, fp, r7, lsl pc
    20b8:	01530100 	cmpeq	r3, r0, lsl #2
    20bc:	0002ee2d 	andeq	lr, r2, sp, lsr #28
    20c0:	00148300 	andseq	r8, r4, r0, lsl #6
    20c4:	00147f00 	andseq	r7, r4, r0, lsl #30
    20c8:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    20cc:	53010078 	movwpl	r0, #4216	; 0x1078
    20d0:	00ee3c01 	rsceq	r3, lr, r1, lsl #24
    20d4:	14a70000 	strtne	r0, [r7], #0
    20d8:	14a30000 	strtne	r0, [r3], #0
    20dc:	fc170000 	ldc2	0, cr0, [r7], {-0}
    20e0:	0100000c 	tsteq	r0, ip
    20e4:	ee480153 	mcr	1, 2, r0, cr8, cr3, {2}
    20e8:	c9000000 	stmdbgt	r0, {}	; <UNPREDICTABLE>
    20ec:	c5000014 	strgt	r0, [r0, #-20]	; 0xffffffec
    20f0:	17000014 	smladne	r0, r4, r0, r0
    20f4:	00000582 	andeq	r0, r0, r2, lsl #11
    20f8:	57015301 	strpl	r5, [r1, -r1, lsl #6]
    20fc:	00000029 	andeq	r0, r0, r9, lsr #32
    2100:	000014f1 	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
    2104:	000014e7 	andeq	r1, r0, r7, ror #9
    2108:	000dbe17 	andeq	fp, sp, r7, lsl lr
    210c:	01530100 	cmpeq	r3, r0, lsl #2
    2110:	0000306b 	andeq	r3, r0, fp, rrx
    2114:	00154900 	andseq	r4, r5, r0, lsl #18
    2118:	00154100 	andseq	r4, r5, r0, lsl #2
    211c:	0dc41700 	stcleq	7, cr1, [r4]
    2120:	53010000 	movwpl	r0, #4096	; 0x1000
    2124:	00307e01 	eorseq	r7, r0, r1, lsl #28
    2128:	15890000 	strne	r0, [r9]
    212c:	157f0000 	ldrbne	r0, [pc, #-0]!	; 2134 <_Min_Stack_Size+0x1134>
    2130:	3e170000 	cdpcc	0, 1, cr0, cr7, cr0, {0}
    2134:	01000020 	tsteq	r0, r0, lsr #32
    2138:	30920153 	addscc	r0, r2, r3, asr r1
    213c:	cf000000 	svcgt	0x00000000
    2140:	cb000015 	blgt	219c <_Min_Stack_Size+0x119c>
    2144:	12000015 	andne	r0, r0, #21
    2148:	00667562 	rsbeq	r7, r6, r2, ror #10
    214c:	08015501 	stmdaeq	r1, {r0, r8, sl, ip, lr}
    2150:	00001357 	andeq	r1, r0, r7, asr r3
    2154:	7fb09103 	svcvc	0x00b09103
    2158:	6e656c14 	mcrvs	12, 3, r6, cr5, cr4, {0}
    215c:	01560100 	cmpeq	r6, r0, lsl #2
    2160:	0000ee0a 	andeq	lr, r0, sl, lsl #28
    2164:	00161d00 	andseq	r1, r6, r0, lsl #26
    2168:	0015ef00 	andseq	lr, r5, r0, lsl #30
    216c:	0bc51c00 	bleq	ff149174 <__RAM_segment_used_end__+0xc7049174>
    2170:	57010000 	strpl	r0, [r1, -r0]
    2174:	00290a01 	eoreq	r0, r9, r1, lsl #20
    2178:	173c0000 	ldrne	r0, [ip, -r0]!
    217c:	17320000 	ldrne	r0, [r2, -r0]!
    2180:	ad130000 	ldcge	0, cr0, [r3, #-0]
    2184:	0100000b 	tsteq	r0, fp
    2188:	7717015a 			; <UNDEFINED> instruction: 0x7717015a
    218c:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    2190:	005f8803 	subseq	r8, pc, r3, lsl #16
    2194:	0c581c10 	mrrceq	12, 1, r1, r8, cr0
    2198:	6f010000 	svcvs	0x00010000
    219c:	0b7d0801 	bleq	1f441a8 <__RAM_SIZE+0x1e441a8>
    21a0:	179e0000 	ldrne	r0, [lr, r0]
    21a4:	17920000 	ldrne	r0, [r2, r0]
    21a8:	151c0000 	ldrne	r0, [ip, #-0]
    21ac:	0100000c 	tsteq	r0, ip
    21b0:	8507017f 	strhi	r0, [r7, #-383]	; 0xfffffe81
    21b4:	fb000000 	blx	21be <_Min_Stack_Size+0x11be>
    21b8:	f1000017 	cps	#23
    21bc:	14000017 	strne	r0, [r0], #-23	; 0xffffffe9
    21c0:	00706d74 	rsbseq	r6, r0, r4, ror sp
    21c4:	0a018001 	beq	621d0 <SYSTICK_CYCLES+0x39191>
    21c8:	00000029 	andeq	r0, r0, r9, lsr #32
    21cc:	0000183e 	andeq	r1, r0, lr, lsr r8
    21d0:	0000183a 	andeq	r1, r0, sl, lsr r8
    21d4:	000c281c 	andeq	r2, ip, ip, lsl r8
    21d8:	01810100 	orreq	r0, r1, r0, lsl #2
    21dc:	00005f11 	andeq	r5, r0, r1, lsl pc
    21e0:	00186f00 	andseq	r6, r8, r0, lsl #30
    21e4:	00186300 	andseq	r6, r8, r0, lsl #6
    21e8:	122a1d00 	eorne	r1, sl, #0, 26
    21ec:	128a1000 	addne	r1, sl, #0
    21f0:	11341000 	teqne	r4, r0
    21f4:	c81c0000 	ldmdagt	ip, {}	; <UNPREDICTABLE>
    21f8:	01000018 	tsteq	r0, r8, lsl r0
    21fc:	3012019c 	mulscc	r2, ip, r1
    2200:	be000000 	cdplt	0, 0, cr0, cr0, cr0, {0}
    2204:	ba000018 	blt	226c <_Min_Stack_Size+0x126c>
    2208:	00000018 	andeq	r0, r0, r8, lsl r0
    220c:	0010342b 	andseq	r3, r0, fp, lsr #8
    2210:	001b1c10 	andseq	r1, fp, r0, lsl ip
    2214:	10482b00 	subne	r2, r8, r0, lsl #22
    2218:	1b321000 	blne	c86220 <__RAM_SIZE+0xb86220>
    221c:	5a2b0000 	bpl	ac2224 <__RAM_SIZE+0x9c2224>
    2220:	27100010 			; <UNDEFINED> instruction: 0x27100010
    2224:	2b00001b 	blcs	2298 <_Min_Stack_Size+0x1298>
    2228:	1000106c 	andne	r1, r0, ip, rrx
    222c:	00001b27 	andeq	r1, r0, r7, lsr #22
    2230:	00107e2b 	andseq	r7, r0, fp, lsr #28
    2234:	001b3210 	andseq	r3, fp, r0, lsl r2
    2238:	108e2b00 	addne	r2, lr, r0, lsl #22
    223c:	1b321000 	blne	c86244 <__RAM_SIZE+0xb86244>
    2240:	d6200000 	strtle	r0, [r0], -r0
    2244:	91100010 	tstls	r0, r0, lsl r0
    2248:	b4000017 	strlt	r0, [r0], #-23	; 0xffffffe9
    224c:	16000011 			; <UNDEFINED> instruction: 0x16000011
    2250:	91045001 	tstls	r4, r1
    2254:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    2258:	91045101 	tstls	r4, r1, lsl #2
    225c:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    2260:	7a025201 	bvc	96a6c <SYSTICK_CYCLES+0x6da2d>
    2264:	53011600 	movwpl	r1, #5632	; 0x1600
    2268:	16007b02 	strne	r7, [r0], -r2, lsl #22
    226c:	05007d02 	streq	r7, [r0, #-3330]	; 0xfffff2fe
    2270:	005f7c03 	subseq	r7, pc, r3, lsl #24
    2274:	7d021610 	stcvc	6, cr1, [r2, #-64]	; 0xffffffc0
    2278:	16330104 	ldrtne	r0, [r3], -r4, lsl #2
    227c:	03087d02 	movweq	r7, #36098	; 0x8d02
    2280:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    2284:	030c7d02 	movweq	r7, #52482	; 0xcd02
    2288:	00061091 	muleq	r6, r1, r0
    228c:	0010f420 	andseq	pc, r0, r0, lsr #8
    2290:	00179110 	andseq	r9, r7, r0, lsl r1
    2294:	0011fe00 	andseq	pc, r1, r0, lsl #28
    2298:	50011600 	andpl	r1, r1, r0, lsl #12
    229c:	7f9c9104 	svcvc	0x009c9104
    22a0:	51011606 	tstpl	r1, r6, lsl #12
    22a4:	7fa89104 	svcvc	0x00a89104
    22a8:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    22ac:	16007a02 	strne	r7, [r0], -r2, lsl #20
    22b0:	7b025301 	blvc	96ebc <SYSTICK_CYCLES+0x6de7d>
    22b4:	7d021600 	stcvc	6, cr1, [r2, #-0]
    22b8:	80030500 	andhi	r0, r3, r0, lsl #10
    22bc:	1610005f 			; <UNDEFINED> instruction: 0x1610005f
    22c0:	01047d02 	tsteq	r4, r2, lsl #26
    22c4:	7d021634 	stcvc	6, cr1, [r2, #-208]	; 0xffffff30
    22c8:	0c910308 	ldceq	3, cr0, [r1], {8}
    22cc:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    22d0:	1091030c 	addsne	r0, r1, ip, lsl #6
    22d4:	1c200006 	stcne	0, cr0, [r0], #-24	; 0xffffffe8
    22d8:	91100011 	tstls	r0, r1, lsl r0
    22dc:	38000017 	stmdacc	r0, {r0, r1, r2, r4}
    22e0:	16000012 			; <UNDEFINED> instruction: 0x16000012
    22e4:	91045001 	tstls	r4, r1
    22e8:	16067f9c 			; <UNDEFINED> instruction: 0x16067f9c
    22ec:	91045101 	tstls	r4, r1, lsl #2
    22f0:	16067fa8 	strne	r7, [r6], -r8, lsr #31
    22f4:	7a025201 	bvc	96b00 <SYSTICK_CYCLES+0x6dac1>
    22f8:	53011600 	movwpl	r1, #5632	; 0x1600
    22fc:	16007b02 	strne	r7, [r0], -r2, lsl #22
    2300:	03087d02 	movweq	r7, #36098	; 0x8d02
    2304:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    2308:	030c7d02 	movweq	r7, #52482	; 0xcd02
    230c:	00061091 	muleq	r6, r1, r0
    2310:	00114020 	andseq	r4, r1, r0, lsr #32
    2314:	000b8910 	andeq	r8, fp, r0, lsl r9
    2318:	00128100 	andseq	r8, r2, r0, lsl #2
    231c:	50011600 	andpl	r1, r1, r0, lsl #12
    2320:	7f9c9104 	svcvc	0x009c9104
    2324:	51011606 	tstpl	r1, r6, lsl #12
    2328:	7fa89104 	svcvc	0x00a89104
    232c:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    2330:	16007a02 	strne	r7, [r0], -r2, lsl #20
    2334:	7b025301 	blvc	96f40 <SYSTICK_CYCLES+0x6df01>
    2338:	7d021600 	stcvc	6, cr1, [r2, #-0]
    233c:	08f50300 	ldmeq	r5!, {r8, r9}^
    2340:	7d021629 	stcvc	6, cr1, [r2, #-164]	; 0xffffff5c
    2344:	00750208 	rsbseq	r0, r5, r8, lsl #4
    2348:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    234c:	060c9103 	streq	r9, [ip], -r3, lsl #2
    2350:	107d0216 	rsbsne	r0, sp, r6, lsl r2
    2354:	06109103 	ldreq	r9, [r0], -r3, lsl #2
    2358:	114e2b00 	cmpne	lr, r0, lsl #22
    235c:	1b5e1000 	blne	1786364 <__RAM_SIZE+0x1686364>
    2360:	642b0000 	strtvs	r0, [fp], #-0
    2364:	69100011 	ldmdbvs	r0, {r0, r4}
    2368:	2b00001b 	blcs	23dc <_Min_Stack_Size+0x13dc>
    236c:	1000116a 	andne	r1, r0, sl, ror #2
    2370:	00001b3d 	andeq	r1, r0, sp, lsr fp
    2374:	0011762b 	andseq	r7, r1, fp, lsr #12
    2378:	001b5e10 	andseq	r5, fp, r0, lsl lr
    237c:	11882b00 	orrne	r2, r8, r0, lsl #22
    2380:	1b481000 	blne	1206388 <__RAM_SIZE+0x1106388>
    2384:	942b0000 	strtls	r0, [fp], #-0
    2388:	8a100011 	bhi	4023d4 <__RAM_SIZE+0x3023d4>
    238c:	2b00001b 	blcs	2400 <_Min_Stack_Size+0x1400>
    2390:	1000119a 	mulne	r0, sl, r1
    2394:	00001b95 	muleq	r0, r5, fp
    2398:	0011a62b 	andseq	sl, r1, fp, lsr #12
    239c:	001b5e10 	andseq	r5, fp, r0, lsl lr
    23a0:	11b62b00 			; <UNDEFINED> instruction: 0x11b62b00
    23a4:	1b271000 	blne	9c63ac <__RAM_SIZE+0x8c63ac>
    23a8:	c02b0000 	eorgt	r0, fp, r0
    23ac:	95100011 	ldrls	r0, [r0, #-17]	; 0xffffffef
    23b0:	2b00001b 	blcs	2424 <_Min_Stack_Size+0x1424>
    23b4:	100011cc 	andne	r1, r0, ip, asr #3
    23b8:	00001ba0 	andeq	r1, r0, r0, lsr #23
    23bc:	0011da2b 	andseq	sp, r1, fp, lsr #20
    23c0:	001b3d10 	andseq	r3, fp, r0, lsl sp
    23c4:	11e62b00 	mvnne	r2, r0, lsl #22
    23c8:	1b5e1000 	blne	17863d0 <__RAM_SIZE+0x16863d0>
    23cc:	f22b0000 	vhadd.s32	d0, d11, d0
    23d0:	32100011 	andscc	r0, r0, #17
    23d4:	2b00001b 	blcs	2448 <_Min_Stack_Size+0x1448>
    23d8:	10001200 	andne	r1, r0, r0, lsl #4
    23dc:	00001b27 	andeq	r1, r0, r7, lsr #22
    23e0:	00121a2b 	andseq	r1, r2, fp, lsr #20
    23e4:	001b3210 	andseq	r3, fp, r0, lsl r2
    23e8:	13321500 	teqne	r2, #0, 10
    23ec:	17911000 	ldrne	r1, [r1, r0]
    23f0:	01160000 	tsteq	r6, r0
    23f4:	9c910450 	cfldrsls	mvf0, [r1], {80}	; 0x50
    23f8:	0116067f 	tsteq	r6, pc, ror r6
    23fc:	a8910451 	ldmge	r1, {r0, r4, r6, sl}
    2400:	0116067f 	tsteq	r6, pc, ror r6
    2404:	007a0252 	rsbseq	r0, sl, r2, asr r2
    2408:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    240c:	0216007b 	andseq	r0, r6, #123	; 0x7b
    2410:	9103007d 	tstls	r3, sp, ror r0
    2414:	02167fb0 	andseq	r7, r6, #176, 30	; 0x2c0
    2418:	7402047d 	strvc	r0, [r2], #-1149	; 0xfffffb83
    241c:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2420:	0c910308 	ldceq	3, cr0, [r1], {8}
    2424:	7d021606 	stcvc	6, cr1, [r2, #-24]	; 0xffffffe8
    2428:	1091030c 	addsne	r0, r1, ip, lsl #6
    242c:	18000006 	stmdane	r0, {r1, r2}
    2430:	00000133 	andeq	r0, r0, r3, lsr r1
    2434:	00001367 	andeq	r1, r0, r7, ror #6
    2438:	00003019 	andeq	r3, r0, r9, lsl r0
    243c:	18001f00 	stmdane	r0, {r8, r9, sl, fp, ip}
    2440:	00000fa3 	andeq	r0, r0, r3, lsr #31
    2444:	00001377 	andeq	r1, r0, r7, ror r3
    2448:	00003019 	andeq	r3, r0, r9, lsl r0
    244c:	03000900 	movweq	r0, #2304	; 0x900
    2450:	00001367 	andeq	r1, r0, r7, ror #6
    2454:	000de81a 	andeq	lr, sp, sl, lsl r8
    2458:	01320100 	teqeq	r2, r0, lsl #2
    245c:	00ee010f 	rsceq	r0, lr, pc, lsl #2
    2460:	0b540000 	bleq	1502468 <__RAM_SIZE+0x1402468>
    2464:	0c1a1000 	ldceq	0, cr1, [sl], {-0}
    2468:	18dc1000 	ldmne	ip, {ip}^
    246c:	0f010000 	svceq	0x00010000
    2470:	0f000015 	svceq	0x00000015
    2474:	0074756f 	rsbseq	r7, r4, pc, ror #10
    2478:	2c013201 	sfmcs	f3, 4, [r1], {1}
    247c:	00000106 	andeq	r0, r0, r6, lsl #2
    2480:	0000191d 	andeq	r1, r0, sp, lsl r9
    2484:	00001915 	andeq	r1, r0, r5, lsl r9
    2488:	000bcf17 	andeq	ip, fp, r7, lsl pc
    248c:	01320100 	teqeq	r2, r0, lsl #2
    2490:	0002ee37 	andeq	lr, r2, r7, lsr lr
    2494:	00195d00 	andseq	r5, r9, r0, lsl #26
    2498:	00195500 	andseq	r5, r9, r0, lsl #10
    249c:	64690f00 	strbtvs	r0, [r9], #-3840	; 0xfffff100
    24a0:	32010078 	andcc	r0, r1, #120	; 0x78
    24a4:	00ee4601 	rsceq	r4, lr, r1, lsl #12
    24a8:	199d0000 	ldmibne	sp, {}	; <UNPREDICTABLE>
    24ac:	19950000 	ldmibne	r5, {}	; <UNPREDICTABLE>
    24b0:	fc170000 	ldc2	0, cr0, [r7], {-0}
    24b4:	0100000c 	tsteq	r0, ip
    24b8:	ee520132 	mrc	1, 2, r0, cr2, cr2, {1}
    24bc:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
    24c0:	d5000019 	strle	r0, [r0, #-25]	; 0xffffffe7
    24c4:	17000019 	smladne	r0, r9, r0, r0
    24c8:	00000582 	andeq	r0, r0, r2, lsl #11
    24cc:	6d013201 	sfmvs	f3, 4, [r1, #-4]
    24d0:	0000007e 	andeq	r0, r0, lr, ror r0
    24d4:	00001a01 	andeq	r1, r0, r1, lsl #20
    24d8:	000019f7 	strdeq	r1, [r0], -r7
    24dc:	000c5810 	andeq	r5, ip, r0, lsl r8
    24e0:	01320100 	teqeq	r2, r0, lsl #2
    24e4:	000b7d79 	andeq	r7, fp, r9, ror sp
    24e8:	08910200 	ldmeq	r1, {r9}
    24ec:	000dfe10 	andeq	pc, sp, r0, lsl lr	; <UNPREDICTABLE>
    24f0:	01320100 	teqeq	r2, r0, lsl #2
    24f4:	00007e96 	muleq	r0, r6, lr
    24f8:	10910200 	addsne	r0, r1, r0, lsl #4
    24fc:	000dbe10 	andeq	fp, sp, r0, lsl lr
    2500:	01320100 	teqeq	r2, r0, lsl #2
    2504:	000030a9 	andeq	r3, r0, r9, lsr #1
    2508:	18910200 	ldmne	r1, {r9}
    250c:	000dc410 	andeq	ip, sp, r0, lsl r4
    2510:	01320100 	teqeq	r2, r0, lsl #2
    2514:	000030bc 	strheq	r3, [r0], -ip
    2518:	1c910200 	lfmne	f0, 4, [r1], {0}
    251c:	00203e17 	eoreq	r3, r0, r7, lsl lr
    2520:	01320100 	teqeq	r2, r0, lsl #2
    2524:	000030d0 	ldrdeq	r3, [r0], -r0
    2528:	001a5500 	andseq	r5, sl, r0, lsl #10
    252c:	001a5100 	andseq	r5, sl, r0, lsl #2
    2530:	75621200 	strbvc	r1, [r2, #-512]!	; 0xfffffe00
    2534:	34010066 	strcc	r0, [r1], #-102	; 0xffffff9a
    2538:	13570801 	cmpne	r7, #65536	; 0x10000
    253c:	91030000 	mrsls	r0, (UNDEF: 3)
    2540:	6c147fb8 	ldcvs	15, cr7, [r4], {184}	; 0xb8
    2544:	01006e65 	tsteq	r0, r5, ror #28
    2548:	ee0a0135 	mcr	1, 0, r0, cr10, cr5, {1}
    254c:	80000000 	andhi	r0, r0, r0
    2550:	7400001a 	strvc	r0, [r0], #-26	; 0xffffffe6
    2554:	1e00001a 	mcrne	0, 0, r0, cr0, cr10, {0}
    2558:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
    255c:	000014b0 			; <UNDEFINED> instruction: 0x000014b0
    2560:	000d3b1c 	andeq	r3, sp, ip, lsl fp
    2564:	013f0100 	teqeq	pc, r0, lsl #2
    2568:	00013a12 	andeq	r3, r1, r2, lsl sl
    256c:	001ad000 	andseq	sp, sl, r0
    2570:	001acc00 	andseq	ip, sl, r0, lsl #24
    2574:	0bac2b00 	bleq	feb0d17c <__RAM_segment_used_end__+0xc6a0d17c>
    2578:	1bab1000 	blne	feac6580 <__RAM_segment_used_end__+0xc69c6580>
    257c:	cc2b0000 	stcgt	0, cr0, [fp], #-0
    2580:	ab10000b 	blge	4025b4 <__RAM_SIZE+0x3025b4>
    2584:	0000001b 	andeq	r0, r0, fp, lsl r0
    2588:	000c1415 	andeq	r1, ip, r5, lsl r4
    258c:	00167010 	andseq	r7, r6, r0, lsl r0
    2590:	50011600 	andpl	r1, r1, r0, lsl #12
    2594:	7fac9104 	svcvc	0x00ac9104
    2598:	51011606 	tstpl	r1, r6, lsl #12
    259c:	7fb09104 	svcvc	0x00b09104
    25a0:	52011606 	andpl	r1, r1, #6291456	; 0x600000
    25a4:	7fb49104 	svcvc	0x00b49104
    25a8:	53011606 	movwpl	r1, #5638	; 0x1606
    25ac:	16007b02 	strne	r7, [r0], -r2, lsl #22
    25b0:	03007d02 	movweq	r7, #3330	; 0xd02
    25b4:	167fb891 			; <UNDEFINED> instruction: 0x167fb891
    25b8:	02047d02 	andeq	r7, r4, #2, 26	; 0x80
    25bc:	02160079 	andseq	r0, r6, #121	; 0x79
    25c0:	9104087d 	tstls	r4, sp, ror r8
    25c4:	16019408 	strne	r9, [r1], -r8, lsl #8
    25c8:	020c7d02 	andeq	r7, ip, #2, 26	; 0x80
    25cc:	02160077 	andseq	r0, r6, #119	; 0x77
    25d0:	9103107d 	tstls	r3, sp, ror r0
    25d4:	02160618 	andseq	r0, r6, #24, 12	; 0x1800000
    25d8:	9103147d 	tstls	r3, sp, ror r4
    25dc:	0216061c 	andseq	r0, r6, #28, 12	; 0x1c00000
    25e0:	7a02187d 	bvc	887dc <SYSTICK_CYCLES+0x5f79d>
    25e4:	1a000000 	bne	25ec <_Min_Stack_Size+0x15ec>
    25e8:	00000ccd 	andeq	r0, r0, sp, asr #25
    25ec:	0f011901 	svceq	0x00011901
    25f0:	0000ee01 	andeq	lr, r0, r1, lsl #28
    25f4:	000ac000 	andeq	ip, sl, r0
    25f8:	000b5410 	andeq	r5, fp, r0, lsl r4
    25fc:	001aee10 	andseq	lr, sl, r0, lsl lr
    2600:	16700100 	ldrbtne	r0, [r0], -r0, lsl #2
    2604:	6f0f0000 	svcvs	0x000f0000
    2608:	01007475 	tsteq	r0, r5, ror r4
    260c:	06270119 			; <UNDEFINED> instruction: 0x06270119
    2610:	2b000001 	blcs	261c <_Min_Stack_Size+0x161c>
    2614:	2700001b 	smladcs	r0, fp, r0, r0
    2618:	1700001b 	smladne	r0, fp, r0, r0
    261c:	00000bcf 	andeq	r0, r0, pc, asr #23
    2620:	32011901 	andcc	r1, r1, #16384	; 0x4000
    2624:	000002ee 	andeq	r0, r0, lr, ror #5
    2628:	00001b50 	andeq	r1, r0, r0, asr fp
    262c:	00001b4c 	andeq	r1, r0, ip, asr #22
    2630:	7864690f 	stmdavc	r4!, {r0, r1, r2, r3, r8, fp, sp, lr}^
    2634:	01190100 	tsteq	r9, r0, lsl #2
    2638:	0000ee41 	andeq	lr, r0, r1, asr #28
    263c:	001b7500 	andseq	r7, fp, r0, lsl #10
    2640:	001b7100 	andseq	r7, fp, r0, lsl #2
    2644:	0cfc1700 	ldcleq	7, cr1, [ip]
    2648:	19010000 	stmdbne	r1, {}	; <UNPREDICTABLE>
    264c:	00ee4d01 	rsceq	r4, lr, r1, lsl #26
    2650:	1b9a0000 	blne	fe682658 <__RAM_segment_used_end__+0xc6582658>
    2654:	1b960000 	blne	fe58265c <__RAM_segment_used_end__+0xc648265c>
    2658:	82170000 	andshi	r0, r7, #0
    265c:	01000005 	tsteq	r0, r5
    2660:	5f630119 	svcpl	0x00630119
    2664:	c5000000 	strgt	r0, [r0, #-0]
    2668:	bb00001b 	bllt	26dc <_Min_Stack_Size+0x16dc>
    266c:	1000001b 	andne	r0, r0, fp, lsl r0
    2670:	00000c58 	andeq	r0, r0, r8, asr ip
    2674:	6f011901 	svcvs	0x00011901
    2678:	00000b7d 	andeq	r0, r0, sp, ror fp
    267c:	10049102 	andne	r9, r4, r2, lsl #2
    2680:	00000dfe 	strdeq	r0, [r0], -lr
    2684:	87011901 	strhi	r1, [r1, -r1, lsl #18]
    2688:	0000005f 	andeq	r0, r0, pc, asr r0
    268c:	10089102 	andne	r9, r8, r2, lsl #2
    2690:	00000dbe 			; <UNDEFINED> instruction: 0x00000dbe
    2694:	9a011901 	bls	48aa0 <SYSTICK_CYCLES+0x1fa61>
    2698:	00000030 	andeq	r0, r0, r0, lsr r0
    269c:	100c9102 	andne	r9, ip, r2, lsl #2
    26a0:	00000dc4 	andeq	r0, r0, r4, asr #27
    26a4:	ad011901 	vstrge.16	s2, [r1, #-2]	; <UNPREDICTABLE>
    26a8:	00000030 	andeq	r0, r0, r0, lsr r0
    26ac:	17109102 	ldrne	r9, [r0, -r2, lsl #2]
    26b0:	0000203e 	andeq	r2, r0, lr, lsr r0
    26b4:	c1011901 	tstgt	r1, r1, lsl #18
    26b8:	00000030 	andeq	r0, r0, r0, lsr r0
    26bc:	00001c0a 	andeq	r1, r0, sl, lsl #24
    26c0:	00001c06 	andeq	r1, r0, r6, lsl #24
    26c4:	66756212 			; <UNDEFINED> instruction: 0x66756212
    26c8:	011b0100 	tsteq	fp, r0, lsl #2
    26cc:	00135708 	andseq	r5, r3, r8, lsl #14
    26d0:	48910200 	ldmmi	r1, {r9}
    26d4:	6e656c14 	mcrvs	12, 3, r6, cr5, cr4, {0}
    26d8:	011c0100 	tsteq	ip, r0, lsl #2
    26dc:	0000ee0a 	andeq	lr, r0, sl, lsl #28
    26e0:	001c3500 	andseq	r3, ip, r0, lsl #10
    26e4:	001c2900 	andseq	r2, ip, r0, lsl #18
    26e8:	00901e00 	addseq	r1, r0, r0, lsl #28
    26ec:	16300000 	ldrtne	r0, [r0], -r0
    26f0:	3b1c0000 	blcc	7026f8 <__RAM_SIZE+0x6026f8>
    26f4:	0100000d 	tsteq	r0, sp
    26f8:	3a120126 	bcc	482b98 <__RAM_SIZE+0x382b98>
    26fc:	8d000001 	stchi	0, cr0, [r0, #-4]
    2700:	8100001c 	tsthi	r0, ip, lsl r0
    2704:	0000001c 	andeq	r0, r0, ip, lsl r0
    2708:	000b5015 	andeq	r5, fp, r5, lsl r0
    270c:	00167010 	andseq	r7, r6, r0, lsl r0
    2710:	7d021600 	stcvc	6, cr1, [r2, #-0]
    2714:	00740200 	rsbseq	r0, r4, r0, lsl #4
    2718:	047d0216 	ldrbteq	r0, [sp], #-534	; 0xfffffdea
    271c:	16007702 	strne	r7, [r0], -r2, lsl #14
    2720:	04087d02 	streq	r7, [r8], #-3330	; 0xfffff2fe
    2724:	01940491 			; <UNDEFINED> instruction: 0x01940491
    2728:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    272c:	16007502 	strne	r7, [r0], -r2, lsl #10
    2730:	03107d02 	tsteq	r0, #2, 26	; 0x80
    2734:	16060c91 			; <UNDEFINED> instruction: 0x16060c91
    2738:	03147d02 	tsteq	r4, #2, 26	; 0x80
    273c:	16061091 			; <UNDEFINED> instruction: 0x16061091
    2740:	02187d02 	andseq	r7, r8, #2, 26	; 0x80
    2744:	00000076 	andeq	r0, r0, r6, ror r0
    2748:	000c8d2c 	andeq	r8, ip, ip, lsr #26
    274c:	0fe30100 	svceq	0x00e30100
    2750:	0000ee01 	andeq	lr, r0, r1, lsl #28
    2754:	00098800 	andeq	r8, r9, r0, lsl #16
    2758:	000ac010 	andeq	ip, sl, r0, lsl r0
    275c:	001cfb10 	andseq	pc, ip, r0, lsl fp	; <UNPREDICTABLE>
    2760:	17910100 	ldrne	r0, [r1, r0, lsl #2]
    2764:	6f2d0000 	svcvs	0x002d0000
    2768:	01007475 	tsteq	r0, r5, ror r4
    276c:	010629e3 	smlatteq	r6, r3, r9, r2
    2770:	1d450000 	stclne	0, cr0, [r5, #-0]
    2774:	1d3f0000 	ldcne	0, cr0, [pc, #-0]	; 277c <_Min_Stack_Size+0x177c>
    2778:	cf2e0000 	svcgt	0x002e0000
    277c:	0100000b 	tsteq	r0, fp
    2780:	02ee34e3 	rsceq	r3, lr, #-486539264	; 0xe3000000
    2784:	1d770000 	ldclne	0, cr0, [r7, #-0]
    2788:	1d710000 	ldclne	0, cr0, [r1, #-0]
    278c:	692d0000 	pushvs	{}	; <UNPREDICTABLE>
    2790:	01007864 	tsteq	r0, r4, ror #16
    2794:	00ee43e3 	rsceq	r4, lr, r3, ror #7
    2798:	1da90000 	stcne	0, cr0, [r9]
    279c:	1da30000 	stcne	0, cr0, [r3]
    27a0:	fc2e0000 	stc2	0, cr0, [lr], #-0
    27a4:	0100000c 	tsteq	r0, ip
    27a8:	00ee4fe3 	rsceq	r4, lr, r3, ror #31
    27ac:	1ddb0000 	ldclne	0, cr0, [fp]
    27b0:	1dd50000 	ldclne	0, cr0, [r5]
    27b4:	622d0000 	eorvs	r0, sp, #0
    27b8:	01006675 	tsteq	r0, r5, ror r6
    27bc:	02ee5de3 	rsceq	r5, lr, #14528	; 0x38c0
    27c0:	1e0b0000 	cdpne	0, 0, cr0, cr11, cr0, {0}
    27c4:	1e070000 	cdpne	0, 0, cr0, cr7, cr0, {0}
    27c8:	6c2d0000 	stcvs	0, cr0, [sp], #-0
    27cc:	01006e65 	tsteq	r0, r5, ror #28
    27d0:	00ee69e3 	rsceq	r6, lr, r3, ror #19
    27d4:	1e5d0000 	cdpne	0, 5, cr0, cr13, cr0, {0}
    27d8:	1e2b0000 	cdpne	0, 2, cr0, cr11, cr0, {0}
    27dc:	582e0000 	stmdapl	lr!, {}	; <UNPREDICTABLE>
    27e0:	0100000c 	tsteq	r0, ip
    27e4:	0b7d73e3 	bleq	1f5f778 <__RAM_SIZE+0x1e5f778>
    27e8:	1f910000 	svcne	0x00910000
    27ec:	1f8d0000 	svcne	0x008d0000
    27f0:	fe2e0000 	cdp2	0, 2, cr0, cr14, cr0, {0}
    27f4:	0100000d 	tsteq	r0, sp
    27f8:	00308ae3 	eorseq	r8, r0, r3, ror #21
    27fc:	1fb50000 	svcne	0x00b50000
    2800:	1fb10000 	svcne	0x00b10000
    2804:	be2e0000 	cdplt	0, 2, cr0, cr14, cr0, {0}
    2808:	0100000d 	tsteq	r0, sp
    280c:	00309de3 	eorseq	r9, r0, r3, ror #27
    2810:	1fd90000 	svcne	0x00d90000
    2814:	1fd50000 	svcne	0x00d50000
    2818:	c42e0000 	strtgt	r0, [lr], #-0
    281c:	0100000d 	tsteq	r0, sp
    2820:	0030b0e3 	eorseq	fp, r0, r3, ror #1
    2824:	1ffd0000 	svcne	0x00fd0000
    2828:	1ff90000 	svcne	0x00f90000
    282c:	3e2e0000 	cdpcc	0, 2, cr0, cr14, cr0, {0}
    2830:	01000020 	tsteq	r0, r0, lsr #32
    2834:	0030c4e3 	eorseq	ip, r0, r3, ror #9
    2838:	20200000 	eorcs	r0, r0, r0
    283c:	201c0000 	andscs	r0, ip, r0
    2840:	42150000 	andsmi	r0, r5, #0
    2844:	9110000a 	tstls	r0, sl
    2848:	16000017 			; <UNDEFINED> instruction: 0x16000017
    284c:	02007d02 	andeq	r7, r0, #2, 26	; 0x80
    2850:	02160075 	andseq	r0, r6, #117	; 0x75
    2854:	7402047d 	strvc	r0, [r2], #-1149	; 0xfffffb83
    2858:	7d021600 	stcvc	6, cr1, [r2, #-0]
    285c:	00770208 	rsbseq	r0, r7, r8, lsl #4
    2860:	0c7d0216 	lfmeq	f0, 2, [sp], #-88	; 0xffffffa8
    2864:	00007602 	andeq	r7, r0, r2, lsl #12
    2868:	0d762c00 	ldcleq	12, cr2, [r6, #-0]
    286c:	c7010000 	strgt	r0, [r1, -r0]
    2870:	00ee010f 	rsceq	r0, lr, pc, lsl #2
    2874:	090a0000 	stmdbeq	sl, {}	; <UNPREDICTABLE>
    2878:	09881000 	stmibeq	r8, {ip}
    287c:	20401000 	subcs	r1, r0, r0
    2880:	d8010000 	stmdale	r1, {}	; <UNPREDICTABLE>
    2884:	2d000018 	stccs	0, cr0, [r0, #-96]	; 0xffffffa0
    2888:	0074756f 	rsbseq	r7, r4, pc, ror #10
    288c:	0625c701 	strteq	ip, [r5], -r1, lsl #14
    2890:	88000001 	stmdahi	r0, {r0}
    2894:	84000020 	strhi	r0, [r0], #-32	; 0xffffffe0
    2898:	2e000020 	cdpcs	0, 0, cr0, cr0, cr0, {1}
    289c:	00000bcf 	andeq	r0, r0, pc, asr #23
    28a0:	ee30c701 	cdp	7, 3, cr12, cr0, cr1, {0}
    28a4:	aa000002 	bge	28b4 <_Min_Stack_Size+0x18b4>
    28a8:	a6000020 	strge	r0, [r0], -r0, lsr #32
    28ac:	2d000020 	stccs	0, cr0, [r0, #-128]	; 0xffffff80
    28b0:	00786469 	rsbseq	r6, r8, r9, ror #8
    28b4:	ee3fc701 	cdp	7, 3, cr12, cr15, cr1, {0}
    28b8:	d4000000 	strle	r0, [r0], #-0
    28bc:	c8000020 	stmdagt	r0, {r5}
    28c0:	2e000020 	cdpcs	0, 0, cr0, cr0, cr0, {1}
    28c4:	00000cfc 	strdeq	r0, [r0], -ip
    28c8:	ee4bc701 	cdp	7, 4, cr12, cr11, cr1, {0}
    28cc:	22000000 	andcs	r0, r0, #0
    28d0:	1e000021 	cdpne	0, 0, cr0, cr0, cr1, {1}
    28d4:	2d000021 	stccs	0, cr0, [r0, #-132]	; 0xffffff7c
    28d8:	00667562 	rsbeq	r7, r6, r2, ror #10
    28dc:	4c5fc701 	mrrcmi	7, 0, ip, pc, cr1	; <UNPREDICTABLE>
    28e0:	44000002 	strmi	r0, [r0], #-2
    28e4:	40000021 	andmi	r0, r0, r1, lsr #32
    28e8:	2d000021 	stccs	0, cr0, [r0, #-132]	; 0xffffff7c
    28ec:	006e656c 	rsbeq	r6, lr, ip, ror #10
    28f0:	ee6bc701 	cdp	7, 6, cr12, cr11, cr1, {0}
    28f4:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
    28f8:	64000021 	strvs	r0, [r0], #-33	; 0xffffffdf
    28fc:	2e000021 	cdpcs	0, 0, cr0, cr0, cr1, {1}
    2900:	00000dc4 	andeq	r0, r0, r4, asr #27
    2904:	307dc701 	rsbscc	ip, sp, r1, lsl #14
    2908:	8b000000 	blhi	2910 <_Min_Stack_Size+0x1910>
    290c:	87000021 	strhi	r0, [r0, -r1, lsr #32]
    2910:	2e000021 	cdpcs	0, 0, cr0, cr0, cr1, {1}
    2914:	0000203e 	andeq	r2, r0, lr, lsr r0
    2918:	3091c701 	addscc	ip, r1, r1, lsl #14
    291c:	af000000 	svcge	0x00000000
    2920:	ab000021 	blge	29ac <_Min_Stack_Size+0x19ac>
    2924:	2f000021 	svccs	0x00000021
    2928:	00000c44 	andeq	r0, r0, r4, asr #24
    292c:	fa10c901 	blx	434d38 <__RAM_SIZE+0x334d38>
    2930:	d5000000 	strle	r0, [r0, #-0]
    2934:	cf000021 	svcgt	0x00000021
    2938:	1e000021 	cdpne	0, 0, cr0, cr0, cr1, {1}
    293c:	00000078 	andeq	r0, r0, r8, ror r0
    2940:	0000189d 	muleq	r0, sp, r8
    2944:	01006930 	tsteq	r0, r0, lsr r9
    2948:	00ee11cd 	rsceq	r1, lr, sp, asr #3
    294c:	22040000 	andcs	r0, r4, #0
    2950:	22020000 	andcs	r0, r2, #0
    2954:	3e220000 	cdpcc	0, 2, cr0, cr2, cr0, {0}
    2958:	16100009 	ldrne	r0, [r0], -r9
    295c:	08025001 	stmdaeq	r2, {r0, ip, lr}
    2960:	51011620 	tstpl	r1, r0, lsr #12
    2964:	16007602 	strne	r7, [r0], -r2, lsl #12
    2968:	7b025201 	blvc	97174 <SYSTICK_CYCLES+0x6e135>
    296c:	5301167f 	movwpl	r1, #5759	; 0x167f
    2970:	00007702 	andeq	r7, r0, r2, lsl #14
    2974:	095c2100 	ldmdbeq	ip, {r8, sp}^
    2978:	18b91000 	ldmne	r9!, {ip}
    297c:	01160000 	tsteq	r6, r0
    2980:	00760251 	rsbseq	r0, r6, r1, asr r2
    2984:	02520116 	subseq	r0, r2, #-2147483643	; 0x80000005
    2988:	01167f78 	tsteq	r6, r8, ror pc
    298c:	00770253 	rsbseq	r0, r7, r3, asr r2
    2990:	09842200 	stmibeq	r4, {r9, sp}
    2994:	01161000 	tsteq	r6, r0
    2998:	20080250 	andcs	r0, r8, r0, asr r2
    299c:	02510116 	subseq	r0, r1, #-2147483643	; 0x80000005
    29a0:	01160076 	tsteq	r6, r6, ror r0
    29a4:	7f740252 	svcvc	0x00740252
    29a8:	02530116 	subseq	r0, r3, #-2147483643	; 0x80000005
    29ac:	00000077 	andeq	r0, r0, r7, ror r0
    29b0:	000d0331 	andeq	r0, sp, r1, lsr r3
    29b4:	15bc0100 	ldrne	r0, [ip, #256]!	; 0x100
    29b8:	00003001 	andeq	r3, r0, r1
    29bc:	0008e600 	andeq	lr, r8, r0, lsl #12
    29c0:	00090a10 	andeq	r0, r9, r0, lsl sl
    29c4:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    29c8:	00194001 	andseq	r4, r9, r1
    29cc:	74732d00 	ldrbtvc	r2, [r3], #-3328	; 0xfffff300
    29d0:	bc010072 	stclt	0, cr0, [r1], {114}	; 0x72
    29d4:	00194028 	andseq	r4, r9, r8, lsr #32
    29d8:	00221b00 	eoreq	r1, r2, r0, lsl #22
    29dc:	00221700 	eoreq	r1, r2, r0, lsl #14
    29e0:	00693000 	rsbeq	r3, r9, r0
    29e4:	3010be01 	andscc	fp, r0, r1, lsl #28
    29e8:	3f000000 	svccc	0x00000000
    29ec:	39000022 	stmdbcc	r0, {r1, r5}
    29f0:	32000022 	andcc	r0, r0, #34	; 0x22
    29f4:	00001946 	andeq	r1, r0, r6, asr #18
    29f8:	10000900 	andne	r0, r0, r0, lsl #18
    29fc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    2a00:	09041000 	stmdbeq	r4, {ip}
    2a04:	bf011000 	svclt	0x00011000
    2a08:	1958240a 	ldmdbne	r8, {r1, r3, sl, sp}^
    2a0c:	226d0000 	rsbcs	r0, sp, #0
    2a10:	22690000 	rsbcs	r0, r9, #0
    2a14:	00000000 	andeq	r0, r0, r0
    2a18:	024c0409 	subeq	r0, ip, #150994944	; 0x9000000
    2a1c:	37330000 	ldrcc	r0, [r3, -r0]!
    2a20:	0100000d 	tsteq	r0, sp
    2a24:	7d0114b5 	cfstrsvc	mvf1, [r1, #-724]	; 0xfffffd2c
    2a28:	0300000b 	movweq	r0, #11
    2a2c:	00001964 	andeq	r1, r0, r4, ror #18
    2a30:	00686334 	rsbeq	r6, r8, r4, lsr r3
    2a34:	3323b501 			; <UNDEFINED> instruction: 0x3323b501
    2a38:	00000001 	andeq	r0, r0, r1
    2a3c:	000d0933 	andeq	r0, sp, r3, lsr r9
    2a40:	1cab0100 	stfnes	f0, [fp]
    2a44:	00003001 	andeq	r3, r0, r1
    2a48:	19990300 	ldmibne	r9, {r8, r9}
    2a4c:	73340000 	teqvc	r4, #0
    2a50:	01007274 	tsteq	r0, r4, ror r2
    2a54:	024c33ab 	subeq	r3, ip, #-1409286142	; 0xac000002
    2a58:	0d350000 	ldceq	0, cr0, [r5, #-0]
    2a5c:	0100000c 	tsteq	r0, ip
    2a60:	00ee3fab 	rsceq	r3, lr, fp, lsr #31
    2a64:	73360000 	teqvc	r6, #0
    2a68:	0fad0100 	svceq	0x00ad0100
    2a6c:	0000024c 	andeq	r0, r0, ip, asr #4
    2a70:	0c2d3700 	stceq	7, cr3, [sp], #-0
    2a74:	9f010000 	svcls	0x00010000
    2a78:	00000114 	andeq	r0, r0, r4, lsl r1
    2a7c:	00000000 	andeq	r0, r0, r0
    2a80:	228d0000 	addcs	r0, sp, #0
    2a84:	04010000 	streq	r0, [r1], #-0
    2a88:	2e00001a 	mcrcs	0, 0, r0, cr0, cr10, {0}
    2a8c:	00000d6c 	andeq	r0, r0, ip, ror #26
    2a90:	33229f01 			; <UNDEFINED> instruction: 0x33229f01
    2a94:	bf000001 	svclt	0x00000001
    2a98:	b9000022 	stmdblt	r0, {r1, r5}
    2a9c:	2e000022 	cdpcs	0, 0, cr0, cr0, cr2, {1}
    2aa0:	00000bcf 	andeq	r0, r0, pc, asr #23
    2aa4:	e0339f01 	eors	r9, r3, r1, lsl #30
    2aa8:	f1000000 	cps	#0
    2aac:	eb000022 	bl	2b3c <_Min_Stack_Size+0x1b3c>
    2ab0:	2d000022 	stccs	0, cr0, [r0, #-136]	; 0xffffff78
    2ab4:	00786469 	rsbseq	r6, r8, r9, ror #8
    2ab8:	ee429f01 	cdp	15, 4, cr9, cr2, cr1, {0}
    2abc:	23000000 	movwcs	r0, #0
    2ac0:	1d000023 	stcne	0, cr0, [r0, #-140]	; 0xffffff74
    2ac4:	2e000023 	cdpcs	0, 0, cr0, cr0, cr3, {1}
    2ac8:	00000cfc 	strdeq	r0, [r0], -ip
    2acc:	ee4e9f01 	cdp	15, 4, cr9, cr14, cr1, {0}
    2ad0:	55000000 	strpl	r0, [r0, #-0]
    2ad4:	4f000023 	svcmi	0x00000023
    2ad8:	00000023 	andeq	r0, r0, r3, lsr #32
    2adc:	000c0338 	andeq	r0, ip, r8, lsr r3
    2ae0:	14950100 	ldrne	r0, [r5], #256	; 0x100
    2ae4:	001a2801 	andseq	r2, sl, r1, lsl #16
    2ae8:	001a3410 	andseq	r3, sl, r0, lsl r4
    2aec:	00238110 	eoreq	r8, r3, r0, lsl r1
    2af0:	1a780100 	bne	1e02ef8 <__RAM_SIZE+0x1d02ef8>
    2af4:	6c2e0000 	stcvs	0, cr0, [lr], #-0
    2af8:	0100000d 	tsteq	r0, sp
    2afc:	01332395 	teqeq	r3, r5	; <illegal shifter operand>
    2b00:	23a50000 			; <UNDEFINED> instruction: 0x23a50000
    2b04:	23a10000 			; <UNDEFINED> instruction: 0x23a10000
    2b08:	cf2e0000 	svcgt	0x002e0000
    2b0c:	0100000b 	tsteq	r0, fp
    2b10:	00e03495 	smlaleq	r3, r0, r5, r4
    2b14:	23ca0000 	biccs	r0, sl, #0
    2b18:	23c60000 	biccs	r0, r6, #0
    2b1c:	692d0000 	pushvs	{}	; <UNPREDICTABLE>
    2b20:	01007864 	tsteq	r0, r4, ror #16
    2b24:	00ee4395 	smlaleq	r4, lr, r5, r3
    2b28:	23ef0000 	mvncs	r0, #0
    2b2c:	23eb0000 	mvncs	r0, #0
    2b30:	fc2e0000 	stc2	0, cr0, [lr], #-0
    2b34:	0100000c 	tsteq	r0, ip
    2b38:	00ee4f95 	smlaleq	r4, lr, r5, pc	; <UNPREDICTABLE>
    2b3c:	24140000 	ldrcs	r0, [r4], #-0
    2b40:	24100000 	ldrcs	r0, [r0], #-0
    2b44:	322b0000 	eorcc	r0, fp, #0
    2b48:	b610001a 			; <UNDEFINED> instruction: 0xb610001a
    2b4c:	0000001b 	andeq	r0, r0, fp, lsl r0
    2b50:	000ca039 	andeq	sl, ip, r9, lsr r0
    2b54:	148e0100 	strne	r0, [lr], #256	; 0x100
    2b58:	0008e401 	andeq	lr, r8, r1, lsl #8
    2b5c:	0008e610 	andeq	lr, r8, r0, lsl r6
    2b60:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    2b64:	001aca01 	andseq	ip, sl, r1, lsl #20
    2b68:	0d6c3a00 	vstmdbeq	ip!, {s7-s6}
    2b6c:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    2b70:	00013323 	andeq	r3, r1, r3, lsr #6
    2b74:	3a500100 	bcc	1402f7c <__RAM_SIZE+0x1302f7c>
    2b78:	00000bcf 	andeq	r0, r0, pc, asr #23
    2b7c:	e0348e01 	eors	r8, r4, r1, lsl #28
    2b80:	01000000 	mrseq	r0, (UNDEF: 0)
    2b84:	64693b51 	strbtvs	r3, [r9], #-2897	; 0xfffff4af
    2b88:	8e010078 	mcrhi	0, 0, r0, cr1, cr8, {3}
    2b8c:	0000ee43 	andeq	lr, r0, r3, asr #28
    2b90:	3a520100 	bcc	1482f98 <__RAM_SIZE+0x1382f98>
    2b94:	00000cfc 	strdeq	r0, [r0], -ip
    2b98:	ee4f8e01 	cdp	14, 4, cr8, cr15, cr1, {0}
    2b9c:	01000000 	mrseq	r0, (UNDEF: 0)
    2ba0:	ca390053 	bgt	e42cf4 <__RAM_SIZE+0xd42cf4>
    2ba4:	0100000b 	tsteq	r0, fp
    2ba8:	00011485 	andeq	r1, r1, r5, lsl #9
    2bac:	00000000 	andeq	r0, r0, r0
    2bb0:	02000000 	andeq	r0, r0, #0
    2bb4:	1c01007d 	stcne	0, cr0, [r1], {125}	; 0x7d
    2bb8:	3a00001b 	bcc	2c2c <_Min_Stack_Size+0x1c2c>
    2bbc:	00000d6c 	andeq	r0, r0, ip, ror #26
    2bc0:	33258501 			; <UNDEFINED> instruction: 0x33258501
    2bc4:	01000001 	tsteq	r0, r1
    2bc8:	0bcf3a50 	bleq	ff3d1510 <__RAM_segment_used_end__+0xc72d1510>
    2bcc:	85010000 	strhi	r0, [r1, #-0]
    2bd0:	0000e036 	andeq	lr, r0, r6, lsr r0
    2bd4:	3b510100 	blcc	1442fdc <__RAM_SIZE+0x1342fdc>
    2bd8:	00786469 	rsbseq	r6, r8, r9, ror #8
    2bdc:	ee458501 	cdp	5, 4, cr8, cr5, cr1, {0}
    2be0:	01000000 	mrseq	r0, (UNDEF: 0)
    2be4:	0cfc3a52 	vldmiaeq	ip!, {s7-s88}
    2be8:	85010000 	strhi	r0, [r1, #-0]
    2bec:	0000ee51 	andeq	lr, r0, r1, asr lr
    2bf0:	00530100 	subseq	r0, r3, r0, lsl #2
    2bf4:	5101013c 	tstpl	r1, ip, lsr r1
    2bf8:	5100000d 	tstpl	r0, sp
    2bfc:	3c00000d 	stccc	0, cr0, [r0], {13}
    2c00:	0ced0101 	stfeqe	f0, [sp], #4
    2c04:	0ced0000 	stcleq	0, cr0, [sp]
    2c08:	013c0000 	teqeq	ip, r0
    2c0c:	000dd901 	andeq	sp, sp, r1, lsl #18
    2c10:	000dd900 	andeq	sp, sp, r0, lsl #18
    2c14:	01013c00 	tsteq	r1, r0, lsl #24
    2c18:	00000ba1 	andeq	r0, r0, r1, lsr #23
    2c1c:	00000ba1 	andeq	r0, r0, r1, lsr #23
    2c20:	1901013c 	stmdbne	r1, {r2, r3, r4, r5, r8}
    2c24:	1900000d 	stmdbne	r0, {r0, r2, r3}
    2c28:	3c00000d 	stccc	0, cr0, [r0], {13}
    2c2c:	0c610101 	stfeqe	f0, [r1], #-4
    2c30:	0c610000 	stcleq	0, cr0, [r1], #-0
    2c34:	013c0000 	teqeq	ip, r0
    2c38:	000d7f01 	andeq	r7, sp, r1, lsl #30
    2c3c:	000d7f00 	andeq	r7, sp, r0, lsl #30
    2c40:	01013c00 	tsteq	r1, r0, lsl #24
    2c44:	00000c1b 	andeq	r0, r0, fp, lsl ip
    2c48:	00000c1b 	andeq	r0, r0, fp, lsl ip
    2c4c:	e701013c 	smladx	r1, ip, r1, r0
    2c50:	e700000b 	str	r0, [r0, -fp]
    2c54:	3c00000b 	stccc	0, cr0, [r0], {11}
    2c58:	0cbe0101 	ldfeqs	f0, [lr], #4
    2c5c:	0cbe0000 	ldceq	0, cr0, [lr]
    2c60:	013c0000 	teqeq	ip, r0
    2c64:	000c3601 	andeq	r3, ip, r1, lsl #12
    2c68:	000c3600 	andeq	r3, ip, r0, lsl #12
    2c6c:	01013c00 	tsteq	r1, r0, lsl #24
    2c70:	00000ce0 	andeq	r0, r0, r0, ror #25
    2c74:	00000ce0 	andeq	r0, r0, r0, ror #25
    2c78:	9d01013c 	stflss	f0, [r1, #-240]	; 0xffffff10
    2c7c:	9d00000d 	stcls	0, cr0, [r0, #-52]	; 0xffffffcc
    2c80:	3c00000d 	stccc	0, cr0, [r0], {13}
    2c84:	0d8c0101 	stfeqs	f0, [ip, #4]
    2c88:	0d8c0000 	stceq	0, cr0, [ip]
    2c8c:	013d0000 	teqeq	sp, r0
    2c90:	000bfa01 	andeq	pc, fp, r1, lsl #20
    2c94:	000bfa00 	andeq	pc, fp, r0, lsl #20
    2c98:	05310700 	ldreq	r0, [r1, #-1792]!	; 0xfffff900
    2c9c:	00024f00 	andeq	r4, r2, r0, lsl #30
    2ca0:	72000200 	andvc	r0, r0, #0, 4
    2ca4:	04000006 	streq	r0, [r0], #-6
    2ca8:	00003d01 	andeq	r3, r0, r1, lsl #26
    2cac:	0e0d0c00 	cdpeq	12, 0, cr0, cr13, cr0, {0}
    2cb0:	065c0000 	ldrbeq	r0, [ip], -r0
    2cb4:	01c80000 	biceq	r0, r8, r0
	...
    2cc0:	16880000 	strne	r0, [r8], r0
    2cc4:	01020000 	mrseq	r0, (UNDEF: 2)
    2cc8:	00086d06 	andeq	r6, r8, r6, lsl #26
    2ccc:	0a130300 	beq	4c38d4 <__RAM_SIZE+0x3c38d4>
    2cd0:	2b020000 	blcs	82cd8 <SYSTICK_CYCLES+0x59c99>
    2cd4:	00003c18 	andeq	r3, r0, r8, lsl ip
    2cd8:	08010200 	stmdaeq	r1, {r9}
    2cdc:	0000086b 	andeq	r0, r0, fp, ror #16
    2ce0:	cf050202 	svcgt	0x00050202
    2ce4:	02000006 	andeq	r0, r0, #6
    2ce8:	09390702 	ldmdbeq	r9!, {r1, r8, r9, sl}
    2cec:	04020000 	streq	r0, [r2], #-0
    2cf0:	0004ed05 	andeq	lr, r4, r5, lsl #26
    2cf4:	0a760300 	beq	1d838fc <__RAM_SIZE+0x1c838fc>
    2cf8:	4f020000 	svcmi	0x00020000
    2cfc:	00006419 	andeq	r6, r0, r9, lsl r4
    2d00:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2d04:	00000234 	andeq	r0, r0, r4, lsr r2
    2d08:	e8050802 	stmda	r5, {r1, fp}
    2d0c:	02000004 	andeq	r0, r0, #4
    2d10:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    2d14:	04040000 	streq	r0, [r4], #-0
    2d18:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    2d1c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2d20:	00000239 	andeq	r0, r0, r9, lsr r2
    2d24:	00295903 	eoreq	r5, r9, r3, lsl #18
    2d28:	17d10300 	ldrbne	r0, [r1, r0, lsl #6]
    2d2c:	00000080 	andeq	r0, r0, r0, lsl #1
    2d30:	3e040802 	cdpcc	8, 0, cr0, cr4, cr2, {0}
    2d34:	02000006 	andeq	r0, r0, #6
    2d38:	08740801 	ldmdaeq	r4!, {r0, fp}^
    2d3c:	9a050000 	bls	142d44 <__RAM_SIZE+0x42d44>
    2d40:	06000000 	streq	r0, [r0], -r0
    2d44:	0000a104 	andeq	sl, r0, r4, lsl #2
    2d48:	0a150300 	beq	543950 <__RAM_SIZE+0x443950>
    2d4c:	18040000 	stmdane	r4, {}	; <UNPREDICTABLE>
    2d50:	00003013 	andeq	r3, r0, r3, lsl r0
    2d54:	0a780300 	beq	1e0395c <__RAM_SIZE+0x1d0395c>
    2d58:	30040000 	andcc	r0, r4, r0
    2d5c:	00005814 	andeq	r5, r0, r4, lsl r8
    2d60:	20010700 	andcs	r0, r1, r0, lsl #14
    2d64:	0100000e 	tsteq	r0, lr
    2d68:	8701083f 	smladxhi	r1, pc, r8, r0	; <UNPREDICTABLE>
	...
    2d74:	35000000 	strcc	r0, [r0, #-0]
    2d78:	01000024 	tsteq	r0, r4, lsr #32
    2d7c:	0000013b 	andeq	r0, r0, fp, lsr r1
    2d80:	000bcf08 	andeq	ip, fp, r8, lsl #30
    2d84:	1b3f0100 	blne	fc318c <__RAM_SIZE+0xec318c>
    2d88:	0000013b 	andeq	r0, r0, fp, lsr r1
    2d8c:	00002459 	andeq	r2, r0, r9, asr r4
    2d90:	00002455 	andeq	r2, r0, r5, asr r4
    2d94:	00178708 	andseq	r8, r7, r8, lsl #14
    2d98:	2a3f0100 	bcs	fc31a0 <__RAM_SIZE+0xec31a0>
    2d9c:	00000087 	andeq	r0, r0, r7, lsl #1
    2da0:	0000247b 	andeq	r2, r0, fp, ror r4
    2da4:	00002477 	andeq	r2, r0, r7, ror r4
    2da8:	00686309 	rsbeq	r6, r8, r9, lsl #6
    2dac:	ac0d4001 	stcge	0, cr4, [sp], {1}
    2db0:	9f000000 	svcls	0x00000000
    2db4:	99000024 	stmdbls	r0, {r2, r5}
    2db8:	09000024 	stmdbeq	r0, {r2, r5}
    2dbc:	01007469 	tsteq	r0, r9, ror #8
    2dc0:	00870c41 	addeq	r0, r7, r1, asr #24
    2dc4:	24cd0000 	strbcs	r0, [sp], #0
    2dc8:	24c90000 	strbcs	r0, [r9], #0
    2dcc:	000a0000 	andeq	r0, sl, r0
    2dd0:	44000000 	strmi	r0, [r0], #-0
    2dd4:	00000002 	andeq	r0, r0, r2
    2dd8:	00ac0406 	adceq	r0, ip, r6, lsl #8
    2ddc:	010b0000 	mrseq	r0, (UNDEF: 11)
    2de0:	00000e2a 	andeq	r0, r0, sl, lsr #28
    2de4:	01063b01 	tsteq	r6, r1, lsl #22
	...
    2df0:	000024ec 	andeq	r2, r0, ip, ror #9
    2df4:	00018201 	andeq	r8, r1, r1, lsl #4
    2df8:	1cbf0800 	ldcne	8, cr0, [pc]	; 2e00 <_Min_Stack_Size+0x1e00>
    2dfc:	3b010000 	blcc	42e04 <SYSTICK_CYCLES+0x19dc5>
    2e00:	0000a61c 	andeq	sl, r0, ip, lsl r6
    2e04:	00251000 	eoreq	r1, r5, r0
    2e08:	00250c00 	eoreq	r0, r5, r0, lsl #24
    2e0c:	00000c00 	andeq	r0, r0, r0, lsl #24
    2e10:	01980000 	orrseq	r0, r8, r0
    2e14:	010d0000 	mrseq	r0, (UNDEF: 13)
    2e18:	01f30350 	mvnseq	r0, r0, asr r3
    2e1c:	0e000050 	mcreq	0, 0, r0, cr0, cr0, {2}
    2e20:	0006d901 	andeq	sp, r6, r1, lsl #18
    2e24:	06320100 	ldrteq	r0, [r2], -r0, lsl #2
    2e28:	001a9401 	andseq	r9, sl, r1, lsl #8
    2e2c:	001ab810 	andseq	fp, sl, r0, lsl r8
    2e30:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    2e34:	a9010701 	stmdbge	r1, {r0, r8, r9, sl}
    2e38:	05000004 	streq	r0, [r0, #-4]
    2e3c:	790105dd 	stmdbvc	r1, {r0, r2, r3, r4, r6, r7, r8, sl}
    2e40:	74000000 	strvc	r0, [r0], #-0
    2e44:	9210001a 	andsls	r0, r0, #26
    2e48:	3110001a 	tstcc	r0, sl, lsl r0
    2e4c:	01000025 	tsteq	r0, r5, lsr #32
    2e50:	000001f8 	strdeq	r0, [r0], -r8
    2e54:	001cbf08 	andseq	fp, ip, r8, lsl #30
    2e58:	16280100 	strtne	r0, [r8], -r0, lsl #2
    2e5c:	000000a6 	andeq	r0, r0, r6, lsr #1
    2e60:	00002555 	andeq	r2, r0, r5, asr r5
    2e64:	00002551 	andeq	r2, r0, r1, asr r5
    2e68:	001bc10f 	andseq	ip, fp, pc, lsl #2
    2e6c:	09290100 	stmdbeq	r9!, {r8}
    2e70:	00000079 	andeq	r0, r0, r9, ror r0
    2e74:	00002577 	andeq	r2, r0, r7, ror r5
    2e78:	00002573 	andeq	r2, r0, r3, ror r5
    2e7c:	001a800a 	andseq	r8, sl, sl
    2e80:	00021210 	andeq	r1, r2, r0, lsl r2
    2e84:	1a8e0c00 	bne	fe385e8c <__RAM_segment_used_end__+0xc6285e8c>
    2e88:	02121000 	andseq	r1, r2, #0
    2e8c:	010d0000 	mrseq	r0, (UNDEF: 13)
    2e90:	003a0150 	eorseq	r0, sl, r0, asr r1
    2e94:	34011000 	strcc	r1, [r1], #-0
    2e98:	0100000e 	tsteq	r0, lr
    2e9c:	79010523 	stmdbvc	r1, {r0, r1, r5, r8, sl}
	...
    2ea8:	02000000 	andeq	r0, r0, #0
    2eac:	1101007d 	tstne	r1, sp, ror r0
    2eb0:	000bfa01 	andeq	pc, fp, r1, lsl #20
    2eb4:	051d0100 	ldreq	r0, [sp, #-256]	; 0xffffff00
    2eb8:	00007901 	andeq	r7, r0, r1, lsl #18
    2ebc:	001a6000 	andseq	r6, sl, r0
    2ec0:	001a7410 	andseq	r7, sl, r0, lsl r4
    2ec4:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    2ec8:	00024401 	andeq	r4, r2, r1, lsl #8
    2ecc:	68631200 	stmdavs	r3!, {r9, ip}^
    2ed0:	121d0100 	andsne	r0, sp, #0, 2
    2ed4:	00000079 	andeq	r0, r0, r9, ror r0
    2ed8:	00002598 	muleq	r0, r8, r5
    2edc:	00002596 	muleq	r0, r6, r5
    2ee0:	01011300 	mrseq	r1, SP_irq
    2ee4:	00002927 	andeq	r2, r0, r7, lsr #18
    2ee8:	00002927 	andeq	r2, r0, r7, lsr #18
    2eec:	0005d905 	andeq	sp, r5, r5, lsl #18
    2ef0:	00000882 	andeq	r0, r0, r2, lsl #17
    2ef4:	07d10002 	ldrbeq	r0, [r1, r2]
    2ef8:	01040000 	mrseq	r0, (UNDEF: 4)
    2efc:	0000003d 	andeq	r0, r0, sp, lsr r0
    2f00:	000e620c 	andeq	r6, lr, ip, lsl #4
    2f04:	00065c00 	andeq	r5, r6, r0, lsl #24
    2f08:	00020000 	andeq	r0, r2, r0
	...
    2f14:	0019c400 	andseq	ip, r9, r0, lsl #8
    2f18:	07040200 	streq	r0, [r4, -r0, lsl #4]
    2f1c:	00000239 	andeq	r0, r0, r9, lsr r2
    2f20:	69050403 	stmdbvs	r5, {r0, r1, sl}
    2f24:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    2f28:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    2f2c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    2f30:	00063e04 	andeq	r3, r6, r4, lsl #28
    2f34:	06010200 	streq	r0, [r1], -r0, lsl #4
    2f38:	0000086d 	andeq	r0, r0, sp, ror #16
    2f3c:	6b080102 	blvs	20334c <__RAM_SIZE+0x10334c>
    2f40:	02000008 	andeq	r0, r0, #8
    2f44:	06cf0502 	strbeq	r0, [pc], r2, lsl #10
    2f48:	02020000 	andeq	r0, r2, #0
    2f4c:	00093907 	andeq	r3, r9, r7, lsl #18
    2f50:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    2f54:	000004ed 	andeq	r0, r0, sp, ror #9
    2f58:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    2f5c:	02000002 	andeq	r0, r0, #2
    2f60:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    2f64:	04040000 	streq	r0, [r4], #-0
    2f68:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    2f6c:	05000008 	streq	r0, [r0, #-8]
    2f70:	000008fa 	strdeq	r0, [r0], -sl
    2f74:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    2f78:	05000000 	streq	r0, [r0, #-0]
    2f7c:	000008f9 	strdeq	r0, [r0], -r9
    2f80:	4c317402 	cfldrsmi	mvf7, [r1], #-8
    2f84:	05000000 	streq	r0, [r0, #-0]
    2f88:	0000079a 	muleq	r0, sl, r7
    2f8c:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    2f90:	05000000 	streq	r0, [r0, #-0]
    2f94:	0000072c 	andeq	r0, r0, ip, lsr #14
    2f98:	68317802 	ldmdavs	r1!, {r1, fp, ip, sp, lr}
    2f9c:	06000000 	streq	r0, [r0], -r0
    2fa0:	0000053b 	andeq	r0, r0, fp, lsr r5
    2fa4:	0182031c 	orreq	r0, r2, ip, lsl r3
    2fa8:	00012e10 	andeq	r2, r1, r0, lsl lr
    2fac:	082d0700 	stmdaeq	sp!, {r8, r9, sl}
    2fb0:	86030000 	strhi	r0, [r3], -r0
    2fb4:	00a31901 	adceq	r1, r3, r1, lsl #18
    2fb8:	23020000 	movwcs	r0, #8192	; 0x2000
    2fbc:	03a00700 	moveq	r0, #0, 14
    2fc0:	87030000 	strhi	r0, [r3, -r0]
    2fc4:	00a31901 	adceq	r1, r3, r1, lsl #18
    2fc8:	23020000 	movwcs	r0, #8192	; 0x2000
    2fcc:	043d0704 	ldrteq	r0, [sp], #-1796	; 0xfffff8fc
    2fd0:	8a030000 	bhi	c2fd8 <SYSTICK_CYCLES+0x99f99>
    2fd4:	013a1b01 	teqeq	sl, r1, lsl #22
    2fd8:	23020000 	movwcs	r0, #8192	; 0x2000
    2fdc:	01f20708 	mvnseq	r0, r8, lsl #14
    2fe0:	8b030000 	blhi	c2fe8 <SYSTICK_CYCLES+0x99fa9>
    2fe4:	00a31901 	adceq	r1, r3, r1, lsl #18
    2fe8:	23020000 	movwcs	r0, #8192	; 0x2000
    2fec:	096f070c 	stmdbeq	pc!, {r2, r3, r8, r9, sl}^	; <UNPREDICTABLE>
    2ff0:	91030000 	mrsls	r0, (UNDEF: 3)
    2ff4:	01401a01 	cmpeq	r0, r1, lsl #20
    2ff8:	23020000 	movwcs	r0, #8192	; 0x2000
    2ffc:	001b0710 	andseq	r0, fp, r0, lsl r7
    3000:	92030000 	andls	r0, r3, #0
    3004:	01401a01 	cmpeq	r0, r1, lsl #20
    3008:	23020000 	movwcs	r0, #8192	; 0x2000
    300c:	06090714 			; <UNDEFINED> instruction: 0x06090714
    3010:	96030000 	strls	r0, [r3], -r0
    3014:	01461b01 	cmpeq	r6, r1, lsl #22
    3018:	23020000 	movwcs	r0, #8192	; 0x2000
    301c:	01080018 	tsteq	r8, r8, lsl r0
    3020:	0000013a 	andeq	r0, r0, sl, lsr r1
    3024:	0000a309 	andeq	sl, r0, r9, lsl #6
    3028:	040a0000 	streq	r0, [sl], #-0
    302c:	0000012e 	andeq	r0, r0, lr, lsr #2
    3030:	00af040a 	adceq	r0, pc, sl, lsl #8
    3034:	040a0000 	streq	r0, [sl], #-0
    3038:	00000140 	andeq	r0, r0, r0, asr #2
    303c:	00064a0b 	andeq	r4, r6, fp, lsl #20
    3040:	019b0300 	orrseq	r0, fp, r0, lsl #6
    3044:	0000af03 	andeq	sl, r0, r3, lsl #30
    3048:	7f040a00 	svcvc	0x00040a00
    304c:	06000000 	streq	r0, [r0], -r0
    3050:	0000034b 	andeq	r0, r0, fp, asr #6
    3054:	01d603d8 	ldrsbeq	r0, [r6, #56]	; 0x38
    3058:	00048410 	andeq	r8, r4, r0, lsl r4
    305c:	092c0700 	stmdbeq	ip!, {r8, r9, sl}
    3060:	dd030000 	stcle	0, cr0, [r3, #-0]
    3064:	00a31901 	adceq	r1, r3, r1, lsl #18
    3068:	23020000 	movwcs	r0, #8192	; 0x2000
    306c:	079f0700 	ldreq	r0, [pc, r0, lsl #14]
    3070:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    3074:	00a31901 	adceq	r1, r3, r1, lsl #18
    3078:	23020000 	movwcs	r0, #8192	; 0x2000
    307c:	01bc0704 			; <UNDEFINED> instruction: 0x01bc0704
    3080:	df030000 	svcle	0x00030000
    3084:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    3088:	23020000 	movwcs	r0, #8192	; 0x2000
    308c:	09160708 	ldmdbeq	r6, {r3, r8, r9, sl}
    3090:	e0030000 	and	r0, r3, r0
    3094:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    3098:	23020000 	movwcs	r0, #8192	; 0x2000
    309c:	0411070c 	ldreq	r0, [r1], #-1804	; 0xfffff8f4
    30a0:	e1030000 	mrs	r0, (UNDEF: 3)
    30a4:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    30a8:	23020000 	movwcs	r0, #8192	; 0x2000
    30ac:	095a0710 	ldmdbeq	sl, {r4, r8, r9, sl}^
    30b0:	e2030000 	and	r0, r3, #0
    30b4:	00a31901 	adceq	r1, r3, r1, lsl #18
    30b8:	23020000 	movwcs	r0, #8192	; 0x2000
    30bc:	21e20714 	mvncs	r0, r4, lsl r7
    30c0:	e3030000 	movw	r0, #12288	; 0x3000
    30c4:	00a31901 	adceq	r1, r3, r1, lsl #18
    30c8:	23020000 	movwcs	r0, #8192	; 0x2000
    30cc:	06250718 			; <UNDEFINED> instruction: 0x06250718
    30d0:	e4030000 	str	r0, [r3], #-0
    30d4:	00a31901 	adceq	r1, r3, r1, lsl #18
    30d8:	23020000 	movwcs	r0, #8192	; 0x2000
    30dc:	06ba071c 	ssateq	r0, #27, ip, lsl #14
    30e0:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    30e4:	04841a01 	streq	r1, [r4], #2561	; 0xa01
    30e8:	23020000 	movwcs	r0, #8192	; 0x2000
    30ec:	01990720 	orrseq	r0, r9, r0, lsr #14
    30f0:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    30f4:	04841a01 	streq	r1, [r4], #2561	; 0xa01
    30f8:	23020000 	movwcs	r0, #8192	; 0x2000
    30fc:	05b10724 	ldreq	r0, [r1, #1828]!	; 0x724
    3100:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    3104:	01591a01 	cmpeq	r9, r1, lsl #20
    3108:	23020000 	movwcs	r0, #8192	; 0x2000
    310c:	02d90728 	sbcseq	r0, r9, #40, 14	; 0xa00000
    3110:	f2030000 	vhadd.s8	d0, d3, d0
    3114:	00971901 	addseq	r1, r7, r1, lsl #18
    3118:	23020000 	movwcs	r0, #8192	; 0x2000
    311c:	0246072c 	subeq	r0, r6, #44, 14	; 0xb00000
    3120:	f3030000 	vhadd.u8	d0, d3, d0
    3124:	00971901 	addseq	r1, r7, r1, lsl #18
    3128:	23020000 	movwcs	r0, #8192	; 0x2000
    312c:	01730730 	cmneq	r3, r0, lsr r7
    3130:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    3134:	00971901 	addseq	r1, r7, r1, lsl #18
    3138:	23020000 	movwcs	r0, #8192	; 0x2000
    313c:	074b0734 	smlaldxeq	r0, fp, r4, r7
    3140:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    3144:	00971901 	addseq	r1, r7, r1, lsl #18
    3148:	23020000 	movwcs	r0, #8192	; 0x2000
    314c:	00eb0738 	rsceq	r0, fp, r8, lsr r7
    3150:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    3154:	00971901 	addseq	r1, r7, r1, lsl #18
    3158:	23020000 	movwcs	r0, #8192	; 0x2000
    315c:	035c073c 	cmpeq	ip, #60, 14	; 0xf00000
    3160:	fb030000 	blx	c316a <SYSTICK_CYCLES+0x9a12b>
    3164:	049b1b01 	ldreq	r1, [fp], #2817	; 0xb01
    3168:	23020000 	movwcs	r0, #8192	; 0x2000
    316c:	01520740 	cmpeq	r2, r0, asr #14
    3170:	03030000 	movweq	r0, #12288	; 0x3000
    3174:	013a1b02 	teqeq	sl, r2, lsl #22
    3178:	23020000 	movwcs	r0, #8192	; 0x2000
    317c:	01070744 	tsteq	r7, r4, asr #14
    3180:	04030000 	streq	r0, [r3], #-0
    3184:	00a31902 	adceq	r1, r3, r2, lsl #18
    3188:	23020000 	movwcs	r0, #8192	; 0x2000
    318c:	033b0748 	teqeq	fp, #72, 14	; 0x1200000
    3190:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    3194:	014c1902 	cmpeq	ip, r2, lsl #18
    3198:	23020000 	movwcs	r0, #8192	; 0x2000
    319c:	02ec074c 	rsceq	r0, ip, #76, 14	; 0x1300000
    31a0:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    31a4:	049b1b02 	ldreq	r1, [fp], #2818	; 0xb02
    31a8:	23020000 	movwcs	r0, #8192	; 0x2000
    31ac:	05e90768 	strbeq	r0, [r9, #1896]!	; 0x768
    31b0:	0f030000 	svceq	0x00030000
    31b4:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    31b8:	23020000 	movwcs	r0, #8192	; 0x2000
    31bc:	0732076c 	ldreq	r0, [r2, -ip, ror #14]!
    31c0:	11030000 	mrsne	r0, (UNDEF: 3)
    31c4:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    31c8:	23020000 	movwcs	r0, #8192	; 0x2000
    31cc:	02120770 	andseq	r0, r2, #112, 14	; 0x1c00000
    31d0:	12030000 	andne	r0, r3, #0
    31d4:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    31d8:	23020000 	movwcs	r0, #8192	; 0x2000
    31dc:	07150774 			; <UNDEFINED> instruction: 0x07150774
    31e0:	13030000 	movwne	r0, #12288	; 0x3000
    31e4:	00a31902 	adceq	r1, r3, r2, lsl #18
    31e8:	23020000 	movwcs	r0, #8192	; 0x2000
    31ec:	03c60778 	biceq	r0, r6, #120, 14	; 0x1e00000
    31f0:	14030000 	strne	r0, [r3], #-0
    31f4:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    31f8:	23020000 	movwcs	r0, #8192	; 0x2000
    31fc:	0554077c 	ldrbeq	r0, [r4, #-1916]	; 0xfffff884
    3200:	15030000 	strne	r0, [r3, #-0]
    3204:	00971902 	addseq	r1, r7, r2, lsl #18
    3208:	23030000 	movwcs	r0, #12288	; 0x3000
    320c:	e8070180 	stmda	r7, {r7, r8}
    3210:	03000003 	movweq	r0, #3
    3214:	97190216 			; <UNDEFINED> instruction: 0x97190216
    3218:	03000000 	movweq	r0, #0
    321c:	07018423 	streq	r8, [r1, -r3, lsr #8]
    3220:	000008ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    3224:	1a021f03 	bne	8ae38 <SYSTICK_CYCLES+0x61df9>
    3228:	00000484 	andeq	r0, r0, r4, lsl #9
    322c:	01882303 	orreq	r2, r8, r3, lsl #6
    3230:	0007f007 	andeq	pc, r7, r7
    3234:	02200300 	eoreq	r0, r0, #0, 6
    3238:	0004841a 	andeq	r8, r4, sl, lsl r4
    323c:	8c230300 	stchi	3, cr0, [r3], #-0
    3240:	02c10701 	sbceq	r0, r1, #262144	; 0x40000
    3244:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    3248:	00971902 	addseq	r1, r7, r2, lsl #18
    324c:	23030000 	movwcs	r0, #12288	; 0x3000
    3250:	56070190 			; <UNDEFINED> instruction: 0x56070190
    3254:	03000002 	movweq	r0, #2
    3258:	9719022f 	ldrls	r0, [r9, -pc, lsr #4]
    325c:	03000000 	movweq	r0, #0
    3260:	07019423 	streq	r9, [r1, -r3, lsr #8]
    3264:	00000320 	andeq	r0, r0, r0, lsr #6
    3268:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    326c:	00000097 	muleq	r0, r7, r0
    3270:	01982303 	orrseq	r2, r8, r3, lsl #6
    3274:	00027707 	andeq	r7, r2, r7, lsl #14
    3278:	02330300 	eorseq	r0, r3, #0, 6
    327c:	00009719 	andeq	r9, r0, r9, lsl r7
    3280:	9c230300 	stcls	3, cr0, [r3], #-0
    3284:	00000701 	andeq	r0, r0, r1, lsl #14
    3288:	35030000 	strcc	r0, [r3, #-0]
    328c:	05801a02 	streq	r1, [r0, #2562]	; 0xa02
    3290:	23030000 	movwcs	r0, #12288	; 0x3000
    3294:	c80701a0 	stmdagt	r7, {r5, r7, r8}
    3298:	0300001b 	movweq	r0, #27
    329c:	a319023a 	tstge	r9, #-1610612733	; 0xa0000003
    32a0:	03000000 	movweq	r0, #0
    32a4:	0701a423 	streq	sl, [r1, -r3, lsr #8]
    32a8:	00001c88 	andeq	r1, r0, r8, lsl #25
    32ac:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    32b0:	000000a3 	andeq	r0, r0, r3, lsr #1
    32b4:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    32b8:	001b4107 	andseq	r4, fp, r7, lsl #2
    32bc:	02410300 	subeq	r0, r1, #0, 6
    32c0:	0000a319 	andeq	sl, r0, r9, lsl r3
    32c4:	ac230300 	stcge	3, cr0, [r3], #-0
    32c8:	1d3f0701 	ldcne	7, cr0, [pc, #-4]!	; 32cc <_Min_Stack_Size+0x22cc>
    32cc:	45030000 	strmi	r0, [r3, #-0]
    32d0:	00a31902 	adceq	r1, r3, r2, lsl #18
    32d4:	23030000 	movwcs	r0, #12288	; 0x3000
    32d8:	580701b0 	stmdapl	r7, {r4, r5, r7, r8}
    32dc:	0300001c 	movweq	r0, #28
    32e0:	a3190248 	tstge	r9, #72, 4	; 0x80000004
    32e4:	03000000 	movweq	r0, #0
    32e8:	0701b423 	streq	fp, [r1, -r3, lsr #8]
    32ec:	000007c3 	andeq	r0, r0, r3, asr #15
    32f0:	1a024c03 	bne	96304 <SYSTICK_CYCLES+0x6d2c5>
    32f4:	00000484 	andeq	r0, r0, r4, lsl #9
    32f8:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    32fc:	001d1707 	andseq	r1, sp, r7, lsl #14
    3300:	024f0300 	subeq	r0, pc, #0, 6
    3304:	0000a319 	andeq	sl, r0, r9, lsl r3
    3308:	bc230300 	stclt	3, cr0, [r3], #-0
    330c:	1b190701 	blne	644f18 <__RAM_SIZE+0x544f18>
    3310:	52030000 	andpl	r0, r3, #0
    3314:	00a31902 	adceq	r1, r3, r2, lsl #18
    3318:	23030000 	movwcs	r0, #12288	; 0x3000
    331c:	960701c0 	strls	r0, [r7], -r0, asr #3
    3320:	0300001a 	movweq	r0, #26
    3324:	a3190255 	tstge	r9, #1342177285	; 0x50000005
    3328:	03000000 	movweq	r0, #0
    332c:	0701c423 	streq	ip, [r1, -r3, lsr #8]
    3330:	00001bec 	andeq	r1, r0, ip, ror #23
    3334:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    3338:	000000a3 	andeq	r0, r0, r3, lsr #1
    333c:	01c82303 	biceq	r2, r8, r3, lsl #6
    3340:	0009c407 	andeq	ip, r9, r7, lsl #8
    3344:	025d0300 	subseq	r0, sp, #0, 6
    3348:	0000761a 	andeq	r7, r0, sl, lsl r6
    334c:	cc230300 	stcgt	3, cr0, [r3], #-0
    3350:	04810701 	streq	r0, [r1], #1793	; 0x701
    3354:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    3358:	00a31902 	adceq	r1, r3, r2, lsl #18
    335c:	23030000 	movwcs	r0, #12288	; 0x3000
    3360:	6d0701d0 	stfvss	f0, [r7, #-832]	; 0xfffffcc0
    3364:	03000005 	movweq	r0, #5
    3368:	a319027d 	tstge	r9, #-805306361	; 0xd0000007
    336c:	03000000 	movweq	r0, #0
    3370:	0001d423 	andeq	sp, r1, r3, lsr #8
    3374:	015f040a 	cmpeq	pc, sl, lsl #8
    3378:	01080000 	mrseq	r0, (UNDEF: 8)
    337c:	0000049b 	muleq	r0, fp, r4
    3380:	00048409 	andeq	r8, r4, r9, lsl #8
    3384:	00a30900 	adceq	r0, r3, r0, lsl #18
    3388:	0a000000 	beq	3390 <_Min_Stack_Size+0x2390>
    338c:	00048a04 	andeq	r8, r4, r4, lsl #20
    3390:	07b30600 	ldreq	r0, [r3, r0, lsl #12]!
    3394:	03340000 	teqeq	r4, #0
    3398:	8010037e 	andshi	r0, r0, lr, ror r3
    339c:	07000005 	streq	r0, [r0, -r5]
    33a0:	0000018d 	andeq	r0, r0, sp, lsl #3
    33a4:	19038203 	stmdbne	r3, {r0, r1, r9, pc}
    33a8:	000000a3 	andeq	r0, r0, r3, lsr #1
    33ac:	07002302 	streq	r2, [r0, -r2, lsl #6]
    33b0:	00000897 	muleq	r0, r7, r8
    33b4:	1a038503 	bne	e47c8 <SYSTICK_CYCLES+0xbb789>
    33b8:	00000159 	andeq	r0, r0, r9, asr r1
    33bc:	07042302 	streq	r2, [r4, -r2, lsl #6]
    33c0:	000006fc 	strdeq	r0, [r0], -ip
    33c4:	19038803 	stmdbne	r3, {r0, r1, fp, pc}
    33c8:	00000097 	muleq	r0, r7, r0
    33cc:	07082302 	streq	r2, [r8, -r2, lsl #6]
    33d0:	000004cb 	andeq	r0, r0, fp, asr #9
    33d4:	1a038c03 	bne	e63e8 <SYSTICK_CYCLES+0xbd3a9>
    33d8:	0000067b 	andeq	r0, r0, fp, ror r6
    33dc:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    33e0:	00000162 	andeq	r0, r0, r2, ror #2
    33e4:	19039003 	stmdbne	r3, {r0, r1, ip, pc}
    33e8:	00000097 	muleq	r0, r7, r0
    33ec:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    33f0:	00000121 	andeq	r0, r0, r1, lsr #2
    33f4:	19039303 	stmdbne	r3, {r0, r1, r8, r9, ip, pc}
    33f8:	00000097 	muleq	r0, r7, r0
    33fc:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    3400:	000008cd 	andeq	r0, r0, sp, asr #17
    3404:	1a039803 	bne	e9418 <SYSTICK_CYCLES+0xc03d9>
    3408:	00000484 	andeq	r0, r0, r4, lsl #9
    340c:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    3410:	000006e3 	andeq	r0, r0, r3, ror #13
    3414:	19039903 	stmdbne	r3, {r0, r1, r8, fp, ip, pc}
    3418:	00000097 	muleq	r0, r7, r0
    341c:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    3420:	000005d3 	ldrdeq	r0, [r0], -r3
    3424:	1a039d03 	bne	ea838 <SYSTICK_CYCLES+0xc17f9>
    3428:	00000580 	andeq	r0, r0, r0, lsl #11
    342c:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    3430:	000006a0 	andeq	r0, r0, r0, lsr #13
    3434:	1a039e03 	bne	eac48 <SYSTICK_CYCLES+0xc1c09>
    3438:	00000580 	andeq	r0, r0, r0, lsl #11
    343c:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    3440:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3444:	1903a203 	stmdbne	r3, {r0, r1, r9, sp, pc}
    3448:	00000097 	muleq	r0, r7, r0
    344c:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    3450:	000009e0 	andeq	r0, r0, r0, ror #19
    3454:	1a03a603 	bne	ecc68 <SYSTICK_CYCLES+0xc3c29>
    3458:	00000580 	andeq	r0, r0, r0, lsl #11
    345c:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    3460:	00000425 	andeq	r0, r0, r5, lsr #8
    3464:	1a03a703 	bne	ed078 <SYSTICK_CYCLES+0xc4039>
    3468:	00000580 	andeq	r0, r0, r0, lsl #11
    346c:	00302302 	eorseq	r2, r0, r2, lsl #6
    3470:	04a1040a 	strteq	r0, [r1], #1034	; 0x40a
    3474:	ef0b0000 	svc	0x000b0000
    3478:	03000008 	movweq	r0, #8
    347c:	5f030286 	svcpl	0x00030286
    3480:	06000001 	streq	r0, [r0], -r1
    3484:	0000104f 	andeq	r1, r0, pc, asr #32
    3488:	028b0330 	addeq	r0, fp, #48, 6	; 0xc0000000
    348c:	00066210 	andeq	r6, r6, r0, lsl r2
    3490:	0e510700 	cdpeq	7, 5, cr0, cr1, cr0, {0}
    3494:	8f030000 	svchi	0x00030000
    3498:	00a31902 	adceq	r1, r3, r2, lsl #18
    349c:	23020000 	movwcs	r0, #8192	; 0x2000
    34a0:	0fe30700 	svceq	0x00e30700
    34a4:	92030000 	andls	r0, r3, #0
    34a8:	01591a02 	cmpeq	r9, r2, lsl #20
    34ac:	23020000 	movwcs	r0, #8192	; 0x2000
    34b0:	0f850704 	svceq	0x00850704
    34b4:	95030000 	strls	r0, [r3, #-0]
    34b8:	00971902 	addseq	r1, r7, r2, lsl #18
    34bc:	23020000 	movwcs	r0, #8192	; 0x2000
    34c0:	0eda0708 	cdpeq	7, 13, cr0, cr10, cr8, {0}
    34c4:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    34c8:	00971902 	addseq	r1, r7, r2, lsl #18
    34cc:	23020000 	movwcs	r0, #8192	; 0x2000
    34d0:	1023070c 	eorne	r0, r3, ip, lsl #14
    34d4:	9b030000 	blls	c34dc <SYSTICK_CYCLES+0x9a49d>
    34d8:	06621a02 	strbteq	r1, [r2], -r2, lsl #20
    34dc:	23020000 	movwcs	r0, #8192	; 0x2000
    34e0:	0e3d0710 	mrceq	7, 1, r0, cr13, cr0, {0}
    34e4:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    34e8:	06621a02 	strbteq	r1, [r2], -r2, lsl #20
    34ec:	23020000 	movwcs	r0, #8192	; 0x2000
    34f0:	0f390714 	svceq	0x00390714
    34f4:	a1030000 	mrsge	r0, (UNDEF: 3)
    34f8:	00a31902 	adceq	r1, r3, r2, lsl #18
    34fc:	23020000 	movwcs	r0, #8192	; 0x2000
    3500:	0fab0718 	svceq	0x00ab0718
    3504:	a4030000 	strge	r0, [r3], #-0
    3508:	00971902 	addseq	r1, r7, r2, lsl #18
    350c:	23020000 	movwcs	r0, #8192	; 0x2000
    3510:	0f06071c 	svceq	0x0006071c
    3514:	a9030000 	stmdbge	r3, {}	; <UNPREDICTABLE>
    3518:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    351c:	23020000 	movwcs	r0, #8192	; 0x2000
    3520:	0f670720 	svceq	0x00670720
    3524:	aa030000 	bge	c352c <SYSTICK_CYCLES+0x9a4ed>
    3528:	00971902 	addseq	r1, r7, r2, lsl #18
    352c:	23020000 	movwcs	r0, #8192	; 0x2000
    3530:	0f4c0724 	svceq	0x004c0724
    3534:	ae030000 	cdpge	0, 0, cr0, cr3, cr0, {0}
    3538:	06681a02 	strbteq	r1, [r8], -r2, lsl #20
    353c:	23020000 	movwcs	r0, #8192	; 0x2000
    3540:	0fc40728 	svceq	0x00c40728
    3544:	af030000 	svcge	0x00030000
    3548:	06681a02 	strbteq	r1, [r8], -r2, lsl #20
    354c:	23020000 	movwcs	r0, #8192	; 0x2000
    3550:	040a002c 	streq	r0, [sl], #-44	; 0xffffffd4
    3554:	0000008b 	andeq	r0, r0, fp, lsl #1
    3558:	0593040a 	ldreq	r0, [r3, #1034]	; 0x40a
    355c:	9d0b0000 	stcls	0, cr0, [fp, #-0]
    3560:	0300000f 	movweq	r0, #15
    3564:	930302c4 	movwls	r0, #12996	; 0x32c4
    3568:	0a000005 	beq	3584 <_Min_Stack_Size+0x2584>
    356c:	00058604 	andeq	r8, r5, r4, lsl #12
    3570:	6e040a00 	vmlavs.f32	s0, s8, s0
    3574:	0c000006 	stceq	0, cr0, [r0], {6}
    3578:	00108001 	andseq	r8, r0, r1
    357c:	074a0100 	strbeq	r0, [sl, -r0, lsl #2]
    3580:	00009701 	andeq	r9, r0, r1, lsl #14
    3584:	001ab800 	andseq	fp, sl, r0, lsl #16
    3588:	001b0e10 	andseq	r0, fp, r0, lsl lr
    358c:	0025ab10 	eoreq	sl, r5, r0, lsl fp
    3590:	08110100 	ldmdaeq	r1, {r8}
    3594:	fd0d0000 	stc2	0, cr0, [sp, #-0]
    3598:	0100000f 	tsteq	r0, pc
    359c:	00761f4a 	rsbseq	r1, r6, sl, asr #30
    35a0:	25d50000 	ldrbcs	r0, [r5]
    35a4:	25cb0000 	strbcs	r0, [fp]
    35a8:	ee0e0000 	cdp	0, 0, cr0, cr14, cr0, {0}
    35ac:	0100000e 	tsteq	r0, lr
    35b0:	0097014d 	addseq	r0, r7, sp, asr #2
    35b4:	261b0000 	ldrcs	r0, [fp], -r0
    35b8:	26190000 	ldrcs	r0, [r9], -r0
    35bc:	fd0e0000 	stc2	0, cr0, [lr, #-0]
    35c0:	0100000e 	tsteq	r0, lr
    35c4:	0681164f 	streq	r1, [r1], pc, asr #12
    35c8:	26340000 	ldrtcs	r0, [r4], -r0
    35cc:	262e0000 	strtcs	r0, [lr], -r0
    35d0:	790e0000 	stmdbvc	lr, {}	; <UNPREDICTABLE>
    35d4:	01000019 	tsteq	r0, r9, lsl r0
    35d8:	067b1650 			; <UNDEFINED> instruction: 0x067b1650
    35dc:	26630000 	strbtcs	r0, [r3], -r0
    35e0:	265d0000 	ldrbcs	r0, [sp], -r0
    35e4:	b90e0000 	stmdblt	lr, {}	; <UNPREDICTABLE>
    35e8:	0100000e 	tsteq	r0, lr
    35ec:	06621651 			; <UNDEFINED> instruction: 0x06621651
    35f0:	269b0000 	ldrcs	r0, [fp], r0
    35f4:	268d0000 	strcs	r0, [sp], r0
    35f8:	f60e0000 			; <UNDEFINED> instruction: 0xf60e0000
    35fc:	0100000f 	tsteq	r0, pc
    3600:	08111752 	ldmdaeq	r1, {r1, r4, r6, r8, r9, sl, ip}
    3604:	26f90000 	ldrbtcs	r0, [r9], r0
    3608:	26f70000 	ldrbtcs	r0, [r7], r0
    360c:	400e0000 	andmi	r0, lr, r0
    3610:	01000010 	tsteq	r0, r0, lsl r0
    3614:	08111753 	ldmdaeq	r1, {r0, r1, r4, r6, r8, r9, sl, ip}
    3618:	27160000 	ldrcs	r0, [r6, -r0]
    361c:	270c0000 	strcs	r0, [ip, -r0]
    3620:	be0e0000 	cdplt	0, 0, cr0, cr14, cr0, {0}
    3624:	01000018 	tsteq	r0, r8, lsl r0
    3628:	00971554 	addseq	r1, r7, r4, asr r5
    362c:	27640000 	strbcs	r0, [r4, -r0]!
    3630:	275e0000 	ldrbcs	r0, [lr, -r0]
    3634:	070e0000 	streq	r0, [lr, -r0]
    3638:	01000010 	tsteq	r0, r0, lsl r0
    363c:	067b1655 			; <UNDEFINED> instruction: 0x067b1655
    3640:	27900000 	ldrcs	r0, [r0, r0]
    3644:	278e0000 	strcs	r0, [lr, r0]
    3648:	130e0000 	movwne	r0, #57344	; 0xe000
    364c:	01000010 	tsteq	r0, r0, lsl r0
    3650:	067b1656 			; <UNDEFINED> instruction: 0x067b1656
    3654:	27a50000 	strcs	r0, [r5, r0]!
    3658:	27a30000 	strcs	r0, [r3, r0]!
    365c:	170f0000 	strne	r0, [pc, -r0]
    3660:	bc000008 	stclt	0, cr0, [r0], {8}
    3664:	0a10001a 	beq	4036d4 <__RAM_SIZE+0x3036d4>
    3668:	10001abc 			; <UNDEFINED> instruction: 0x10001abc
    366c:	10001ac2 	andne	r1, r0, r2, asr #21
    3670:	b9055a01 	stmdblt	r5, {r0, r9, fp, ip, lr}
    3674:	10000007 	andne	r0, r0, r7
    3678:	0000082a 	andeq	r0, r0, sl, lsr #16
    367c:	000027ba 			; <UNDEFINED> instruction: 0x000027ba
    3680:	000027b8 			; <UNDEFINED> instruction: 0x000027b8
    3684:	00085511 	andeq	r5, r8, r1, lsl r5
    3688:	001abc00 	andseq	fp, sl, r0, lsl #24
    368c:	1abc0d10 	bne	fef06ad4 <__RAM_segment_used_end__+0xc6e06ad4>
    3690:	1ac01000 	bne	ff007698 <__RAM_segment_used_end__+0xc6f07698>
    3694:	56021000 	strpl	r1, [r2], -r0
    3698:	68101302 	ldmdavs	r0, {r1, r8, r9, ip}
    369c:	cf000008 	svcgt	0x00000008
    36a0:	cd000027 	stcgt	0, cr0, [r0, #-156]	; 0xffffff64
    36a4:	00000027 	andeq	r0, r0, r7, lsr #32
    36a8:	08380f00 	ldmdaeq	r8!, {r8, r9, sl, fp}
    36ac:	1ae60000 	bne	ff9836b4 <__RAM_segment_used_end__+0xc78836b4>
    36b0:	e6011000 	str	r1, [r1], -r0
    36b4:	ea10001a 	b	403724 <__RAM_SIZE+0x303724>
    36b8:	0110001a 	tsteq	r0, sl, lsl r0
    36bc:	07e009ab 	strbeq	r0, [r0, fp, lsr #19]!
    36c0:	47120000 	ldrmi	r0, [r2, -r0]
    36c4:	e4000008 	str	r0, [r0], #-8
    36c8:	e2000027 	and	r0, r0, #39	; 0x27
    36cc:	00000027 	andeq	r0, r0, r7, lsr #32
    36d0:	0008380f 	andeq	r3, r8, pc, lsl #16
    36d4:	001b0800 	andseq	r0, fp, r0, lsl #16
    36d8:	1b080110 	blne	203b20 <__RAM_SIZE+0x103b20>
    36dc:	1b0e1000 	blne	3876e4 <__RAM_SIZE+0x2876e4>
    36e0:	c7011000 	strgt	r1, [r1, -r0]
    36e4:	00080709 	andeq	r0, r8, r9, lsl #14
    36e8:	08471200 	stmdaeq	r7, {r9, ip}^
    36ec:	27f90000 	ldrbcs	r0, [r9, r0]!
    36f0:	27f70000 	ldrbcs	r0, [r7, r0]!
    36f4:	13000000 	movwne	r0, #0
    36f8:	10001ae6 	andne	r1, r0, r6, ror #21
    36fc:	00000876 	andeq	r0, r0, r6, ror r8
    3700:	62040a00 	andvs	r0, r4, #0, 20
    3704:	14000006 	strne	r0, [r0], #-6
    3708:	00000f24 	andeq	r0, r0, r4, lsr #30
    370c:	37025202 	strcc	r5, [r2, -r2, lsl #4]
    3710:	00009701 	andeq	r9, r0, r1, lsl #14
    3714:	08380300 	ldmdaeq	r8!, {r8, r9}
    3718:	ad150000 	ldcge	0, cr0, [r5, #-0]
    371c:	0200000e 	andeq	r0, r0, #14
    3720:	97060254 	smlsdls	r6, r4, r2, r0
    3724:	00000000 	andeq	r0, r0, r0
    3728:	000e9916 	andeq	r9, lr, r6, lsl r9
    372c:	02490200 	subeq	r0, r9, #0, 4
    3730:	55030137 	strpl	r0, [r3, #-311]	; 0xfffffec9
    3734:	17000008 	strne	r0, [r0, -r8]
    3738:	00000ead 	andeq	r0, r0, sp, lsr #29
    373c:	50024902 	andpl	r4, r2, r2, lsl #18
    3740:	00000097 	muleq	r0, r7, r0
    3744:	0ec21400 	cdpeq	4, 12, cr1, cr2, cr0, {0}
    3748:	32020000 	andcc	r0, r2, #0
    374c:	97013702 	strls	r3, [r1, -r2, lsl #14]
    3750:	03000000 	movweq	r0, #0
    3754:	00000876 	andeq	r0, r0, r6, ror r8
    3758:	000eb115 	andeq	fp, lr, r5, lsl r1
    375c:	02340200 	eorseq	r0, r4, #0, 4
    3760:	00009706 	andeq	r9, r0, r6, lsl #14
    3764:	01180000 	tsteq	r8, r0
    3768:	00106401 	andseq	r6, r0, r1, lsl #8
    376c:	00106400 	andseq	r6, r0, r0, lsl #8
    3770:	011e0400 	tsteq	lr, r0, lsl #8
    3774:	09d1000d 	ldmibeq	r1, {r0, r2, r3}^
    3778:	00020000 	andeq	r0, r2, r0
    377c:	0000094e 	andeq	r0, r0, lr, asr #18
    3780:	003d0104 	eorseq	r0, sp, r4, lsl #2
    3784:	920c0000 	andls	r0, ip, #0
    3788:	5c000010 	stcpl	0, cr0, [r0], {16}
    378c:	28000006 	stmdacs	r0, {r1, r2}
    3790:	00000002 	andeq	r0, r0, r2
    3794:	00000000 	andeq	r0, r0, r0
    3798:	bd000000 	stclt	0, cr0, [r0, #-0]
    379c:	0200001b 	andeq	r0, r0, #27
    37a0:	02390704 	eorseq	r0, r9, #4, 14	; 0x100000
    37a4:	04030000 	streq	r0, [r3], #-0
    37a8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    37ac:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    37b0:	000004e8 	andeq	r0, r0, r8, ror #9
    37b4:	3e040802 	cdpcc	8, 0, cr0, cr4, cr2, {0}
    37b8:	02000006 	andeq	r0, r0, #6
    37bc:	086d0601 	stmdaeq	sp!, {r0, r9, sl}^
    37c0:	01020000 	mrseq	r0, (UNDEF: 2)
    37c4:	00086b08 	andeq	r6, r8, r8, lsl #22
    37c8:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    37cc:	000006cf 	andeq	r0, r0, pc, asr #13
    37d0:	39070202 	stmdbcc	r7, {r1, r9}
    37d4:	02000009 	andeq	r0, r0, #9
    37d8:	04ed0504 	strbteq	r0, [sp], #1284	; 0x504
    37dc:	04020000 	streq	r0, [r2], #-0
    37e0:	00023407 	andeq	r3, r2, r7, lsl #8
    37e4:	07080200 	streq	r0, [r8, -r0, lsl #4]
    37e8:	0000022f 	andeq	r0, r0, pc, lsr #4
    37ec:	01020404 	tsteq	r2, r4, lsl #8
    37f0:	00087408 	andeq	r7, r8, r8, lsl #8
    37f4:	08fa0500 	ldmeq	sl!, {r8, sl}^
    37f8:	73020000 	movwvc	r0, #8192	; 0x2000
    37fc:	00007831 	andeq	r7, r0, r1, lsr r8
    3800:	08f90500 	ldmeq	r9!, {r8, sl}^
    3804:	74020000 	strvc	r0, [r2], #-0
    3808:	00004c31 	andeq	r4, r0, r1, lsr ip
    380c:	079a0500 	ldreq	r0, [sl, r0, lsl #10]
    3810:	76020000 	strvc	r0, [r2], -r0
    3814:	00002931 	andeq	r2, r0, r1, lsr r9
    3818:	00970600 	addseq	r0, r7, r0, lsl #12
    381c:	2c050000 	stccs	0, cr0, [r5], {-0}
    3820:	02000007 	andeq	r0, r0, #7
    3824:	00683178 	rsbeq	r3, r8, r8, ror r1
    3828:	3b070000 	blcc	1c3830 <__RAM_SIZE+0xc3830>
    382c:	1c000005 	stcne	0, cr0, [r0], {5}
    3830:	10018203 	andne	r8, r1, r3, lsl #4
    3834:	00000133 	andeq	r0, r0, r3, lsr r1
    3838:	00082d08 	andeq	r2, r8, r8, lsl #26
    383c:	01860300 	orreq	r0, r6, r0, lsl #6
    3840:	0000a819 	andeq	sl, r0, r9, lsl r8
    3844:	00230200 	eoreq	r0, r3, r0, lsl #4
    3848:	0003a008 	andeq	sl, r3, r8
    384c:	01870300 	orreq	r0, r7, r0, lsl #6
    3850:	0000a819 	andeq	sl, r0, r9, lsl r8
    3854:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    3858:	00043d08 	andeq	r3, r4, r8, lsl #26
    385c:	018a0300 	orreq	r0, sl, r0, lsl #6
    3860:	00013f1b 	andeq	r3, r1, fp, lsl pc
    3864:	08230200 	stmdaeq	r3!, {r9}
    3868:	0001f208 	andeq	pc, r1, r8, lsl #4
    386c:	018b0300 	orreq	r0, fp, r0, lsl #6
    3870:	0000a819 	andeq	sl, r0, r9, lsl r8
    3874:	0c230200 	sfmeq	f0, 4, [r3], #-0
    3878:	00096f08 	andeq	r6, r9, r8, lsl #30
    387c:	01910300 	orrseq	r0, r1, r0, lsl #6
    3880:	0001451a 	andeq	r4, r1, sl, lsl r5
    3884:	10230200 	eorne	r0, r3, r0, lsl #4
    3888:	00001b08 	andeq	r1, r0, r8, lsl #22
    388c:	01920300 	orrseq	r0, r2, r0, lsl #6
    3890:	0001451a 	andeq	r4, r1, sl, lsl r5
    3894:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    3898:	00060908 	andeq	r0, r6, r8, lsl #18
    389c:	01960300 	orrseq	r0, r6, r0, lsl #6
    38a0:	00014b1b 	andeq	r4, r1, fp, lsl fp
    38a4:	18230200 	stmdane	r3!, {r9}
    38a8:	3f010900 	svccc	0x00010900
    38ac:	0a000001 	beq	38b8 <_Min_Stack_Size+0x28b8>
    38b0:	000000a8 	andeq	r0, r0, r8, lsr #1
    38b4:	33040b00 	movwcc	r0, #19200	; 0x4b00
    38b8:	0b000001 	bleq	38c4 <_Min_Stack_Size+0x28c4>
    38bc:	0000b404 	andeq	fp, r0, r4, lsl #8
    38c0:	45040b00 	strmi	r0, [r4, #-2816]	; 0xfffff500
    38c4:	0c000001 	stceq	0, cr0, [r0], {1}
    38c8:	0000064a 	andeq	r0, r0, sl, asr #12
    38cc:	03019b03 	movweq	r9, #6915	; 0x1b03
    38d0:	000000b4 	strheq	r0, [r0], -r4
    38d4:	007f040b 	rsbseq	r0, pc, fp, lsl #8
    38d8:	4b070000 	blmi	1c38e0 <__RAM_SIZE+0xc38e0>
    38dc:	d8000003 	stmdale	r0, {r0, r1}
    38e0:	1001d603 	andne	sp, r1, r3, lsl #12
    38e4:	00000489 	andeq	r0, r0, r9, lsl #9
    38e8:	00092c08 	andeq	r2, r9, r8, lsl #24
    38ec:	01dd0300 	bicseq	r0, sp, r0, lsl #6
    38f0:	0000a819 	andeq	sl, r0, r9, lsl r8
    38f4:	00230200 	eoreq	r0, r3, r0, lsl #4
    38f8:	00079f08 	andeq	r9, r7, r8, lsl #30
    38fc:	01de0300 	bicseq	r0, lr, r0, lsl #6
    3900:	0000a819 	andeq	sl, r0, r9, lsl r8
    3904:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    3908:	0001bc08 	andeq	fp, r1, r8, lsl #24
    390c:	01df0300 	bicseq	r0, pc, r0, lsl #6
    3910:	0000761a 	andeq	r7, r0, sl, lsl r6
    3914:	08230200 	stmdaeq	r3!, {r9}
    3918:	00091608 	andeq	r1, r9, r8, lsl #12
    391c:	01e00300 	mvneq	r0, r0, lsl #6
    3920:	0000761a 	andeq	r7, r0, sl, lsl r6
    3924:	0c230200 	sfmeq	f0, 4, [r3], #-0
    3928:	00041108 	andeq	r1, r4, r8, lsl #2
    392c:	01e10300 	mvneq	r0, r0, lsl #6
    3930:	0000761a 	andeq	r7, r0, sl, lsl r6
    3934:	10230200 	eorne	r0, r3, r0, lsl #4
    3938:	00095a08 	andeq	r5, r9, r8, lsl #20
    393c:	01e20300 	mvneq	r0, r0, lsl #6
    3940:	0000a819 	andeq	sl, r0, r9, lsl r8
    3944:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    3948:	0021e208 	eoreq	lr, r1, r8, lsl #4
    394c:	01e30300 	mvneq	r0, r0, lsl #6
    3950:	0000a819 	andeq	sl, r0, r9, lsl r8
    3954:	18230200 	stmdane	r3!, {r9}
    3958:	00062508 	andeq	r2, r6, r8, lsl #10
    395c:	01e40300 	mvneq	r0, r0, lsl #6
    3960:	0000a819 	andeq	sl, r0, r9, lsl r8
    3964:	1c230200 	sfmne	f0, 4, [r3], #-0
    3968:	0006ba08 	andeq	fp, r6, r8, lsl #20
    396c:	01e80300 	mvneq	r0, r0, lsl #6
    3970:	0004891a 	andeq	r8, r4, sl, lsl r9
    3974:	20230200 	eorcs	r0, r3, r0, lsl #4
    3978:	00019908 	andeq	r9, r1, r8, lsl #18
    397c:	01e90300 	mvneq	r0, r0, lsl #6
    3980:	0004891a 	andeq	r8, r4, sl, lsl r9
    3984:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    3988:	0005b108 	andeq	fp, r5, r8, lsl #2
    398c:	01f10300 	mvnseq	r0, r0, lsl #6
    3990:	00015e1a 	andeq	r5, r1, sl, lsl lr
    3994:	28230200 	stmdacs	r3!, {r9}
    3998:	0002d908 	andeq	sp, r2, r8, lsl #18
    399c:	01f20300 	mvnseq	r0, r0, lsl #6
    39a0:	00009719 	andeq	r9, r0, r9, lsl r7
    39a4:	2c230200 	sfmcs	f0, 4, [r3], #-0
    39a8:	00024608 	andeq	r4, r2, r8, lsl #12
    39ac:	01f30300 	mvnseq	r0, r0, lsl #6
    39b0:	00009719 	andeq	r9, r0, r9, lsl r7
    39b4:	30230200 	eorcc	r0, r3, r0, lsl #4
    39b8:	00017308 	andeq	r7, r1, r8, lsl #6
    39bc:	01f40300 	mvnseq	r0, r0, lsl #6
    39c0:	00009719 	andeq	r9, r0, r9, lsl r7
    39c4:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    39c8:	00074b08 	andeq	r4, r7, r8, lsl #22
    39cc:	01f50300 	mvnseq	r0, r0, lsl #6
    39d0:	00009719 	andeq	r9, r0, r9, lsl r7
    39d4:	38230200 	stmdacc	r3!, {r9}
    39d8:	0000eb08 	andeq	lr, r0, r8, lsl #22
    39dc:	01f60300 	mvnseq	r0, r0, lsl #6
    39e0:	00009719 	andeq	r9, r0, r9, lsl r7
    39e4:	3c230200 	sfmcc	f0, 4, [r3], #-0
    39e8:	00035c08 	andeq	r5, r3, r8, lsl #24
    39ec:	01fb0300 	mvnseq	r0, r0, lsl #6
    39f0:	0004a01b 	andeq	sl, r4, fp, lsl r0
    39f4:	40230200 	eormi	r0, r3, r0, lsl #4
    39f8:	00015208 	andeq	r5, r1, r8, lsl #4
    39fc:	02030300 	andeq	r0, r3, #0, 6
    3a00:	00013f1b 	andeq	r3, r1, fp, lsl pc
    3a04:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    3a08:	00010708 	andeq	r0, r1, r8, lsl #14
    3a0c:	02040300 	andeq	r0, r4, #0, 6
    3a10:	0000a819 	andeq	sl, r0, r9, lsl r8
    3a14:	48230200 	stmdami	r3!, {r9}
    3a18:	00033b08 	andeq	r3, r3, r8, lsl #22
    3a1c:	02080300 	andeq	r0, r8, #0, 6
    3a20:	00015119 	andeq	r5, r1, r9, lsl r1
    3a24:	4c230200 	sfmmi	f0, 4, [r3], #-0
    3a28:	0002ec08 	andeq	lr, r2, r8, lsl #24
    3a2c:	020e0300 	andeq	r0, lr, #0, 6
    3a30:	0004a01b 	andeq	sl, r4, fp, lsl r0
    3a34:	68230200 	stmdavs	r3!, {r9}
    3a38:	0005e908 	andeq	lr, r5, r8, lsl #18
    3a3c:	020f0300 	andeq	r0, pc, #0, 6
    3a40:	0000761a 	andeq	r7, r0, sl, lsl r6
    3a44:	6c230200 	sfmvs	f0, 4, [r3], #-0
    3a48:	00073208 	andeq	r3, r7, r8, lsl #4
    3a4c:	02110300 	andseq	r0, r1, #0, 6
    3a50:	0004891a 	andeq	r8, r4, sl, lsl r9
    3a54:	70230200 	eorvc	r0, r3, r0, lsl #4
    3a58:	00021208 	andeq	r1, r2, r8, lsl #4
    3a5c:	02120300 	andseq	r0, r2, #0, 6
    3a60:	0004891a 	andeq	r8, r4, sl, lsl r9
    3a64:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    3a68:	00071508 	andeq	r1, r7, r8, lsl #10
    3a6c:	02130300 	andseq	r0, r3, #0, 6
    3a70:	0000a819 	andeq	sl, r0, r9, lsl r8
    3a74:	78230200 	stmdavc	r3!, {r9}
    3a78:	0003c608 	andeq	ip, r3, r8, lsl #12
    3a7c:	02140300 	andseq	r0, r4, #0, 6
    3a80:	0000761a 	andeq	r7, r0, sl, lsl r6
    3a84:	7c230200 	sfmvc	f0, 4, [r3], #-0
    3a88:	00055408 	andeq	r5, r5, r8, lsl #8
    3a8c:	02150300 	andseq	r0, r5, #0, 6
    3a90:	00009719 	andeq	r9, r0, r9, lsl r7
    3a94:	80230300 	eorhi	r0, r3, r0, lsl #6
    3a98:	03e80801 	mvneq	r0, #65536	; 0x10000
    3a9c:	16030000 	strne	r0, [r3], -r0
    3aa0:	00971902 	addseq	r1, r7, r2, lsl #18
    3aa4:	23030000 	movwcs	r0, #12288	; 0x3000
    3aa8:	ff080184 			; <UNDEFINED> instruction: 0xff080184
    3aac:	03000008 	movweq	r0, #8
    3ab0:	891a021f 	ldmdbhi	sl, {r0, r1, r2, r3, r4, r9}
    3ab4:	03000004 	movweq	r0, #4
    3ab8:	08018823 	stmdaeq	r1, {r0, r1, r5, fp, pc}
    3abc:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3ac0:	1a022003 	bne	8bad4 <SYSTICK_CYCLES+0x62a95>
    3ac4:	00000489 	andeq	r0, r0, r9, lsl #9
    3ac8:	018c2303 	orreq	r2, ip, r3, lsl #6
    3acc:	0002c108 	andeq	ip, r2, r8, lsl #2
    3ad0:	022e0300 	eoreq	r0, lr, #0, 6
    3ad4:	00009719 	andeq	r9, r0, r9, lsl r7
    3ad8:	90230300 	eorls	r0, r3, r0, lsl #6
    3adc:	02560801 	subseq	r0, r6, #65536	; 0x10000
    3ae0:	2f030000 	svccs	0x00030000
    3ae4:	00971902 	addseq	r1, r7, r2, lsl #18
    3ae8:	23030000 	movwcs	r0, #12288	; 0x3000
    3aec:	20080194 	mulcs	r8, r4, r1
    3af0:	03000003 	movweq	r0, #3
    3af4:	97190230 			; <UNDEFINED> instruction: 0x97190230
    3af8:	03000000 	movweq	r0, #0
    3afc:	08019823 	stmdaeq	r1, {r0, r1, r5, fp, ip, pc}
    3b00:	00000277 	andeq	r0, r0, r7, ror r2
    3b04:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
    3b08:	00000097 	muleq	r0, r7, r0
    3b0c:	019c2303 	orrseq	r2, ip, r3, lsl #6
    3b10:	00000008 	andeq	r0, r0, r8
    3b14:	02350300 	eorseq	r0, r5, #0, 6
    3b18:	0005851a 	andeq	r8, r5, sl, lsl r5
    3b1c:	a0230300 	eorge	r0, r3, r0, lsl #6
    3b20:	1bc80801 	blne	ff205b2c <__RAM_segment_used_end__+0xc7105b2c>
    3b24:	3a030000 	bcc	c3b2c <SYSTICK_CYCLES+0x9aaed>
    3b28:	00a81902 	adceq	r1, r8, r2, lsl #18
    3b2c:	23030000 	movwcs	r0, #12288	; 0x3000
    3b30:	880801a4 	stmdahi	r8, {r2, r5, r7, r8}
    3b34:	0300001c 	movweq	r0, #28
    3b38:	a819023d 	ldmdage	r9, {r0, r2, r3, r4, r5, r9}
    3b3c:	03000000 	movweq	r0, #0
    3b40:	0801a823 	stmdaeq	r1, {r0, r1, r5, fp, sp, pc}
    3b44:	00001b41 	andeq	r1, r0, r1, asr #22
    3b48:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
    3b4c:	000000a8 	andeq	r0, r0, r8, lsr #1
    3b50:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    3b54:	001d3f08 	andseq	r3, sp, r8, lsl #30
    3b58:	02450300 	subeq	r0, r5, #0, 6
    3b5c:	0000a819 	andeq	sl, r0, r9, lsl r8
    3b60:	b0230300 	eorlt	r0, r3, r0, lsl #6
    3b64:	1c580801 	mrrcne	8, 0, r0, r8, cr1
    3b68:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    3b6c:	00a81902 	adceq	r1, r8, r2, lsl #18
    3b70:	23030000 	movwcs	r0, #12288	; 0x3000
    3b74:	c30801b4 	movwgt	r0, #33204	; 0x81b4
    3b78:	03000007 	movweq	r0, #7
    3b7c:	891a024c 	ldmdbhi	sl, {r2, r3, r6, r9}
    3b80:	03000004 	movweq	r0, #4
    3b84:	0801b823 	stmdaeq	r1, {r0, r1, r5, fp, ip, sp, pc}
    3b88:	00001d17 	andeq	r1, r0, r7, lsl sp
    3b8c:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
    3b90:	000000a8 	andeq	r0, r0, r8, lsr #1
    3b94:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    3b98:	001b1908 	andseq	r1, fp, r8, lsl #18
    3b9c:	02520300 	subseq	r0, r2, #0, 6
    3ba0:	0000a819 	andeq	sl, r0, r9, lsl r8
    3ba4:	c0230300 	eorgt	r0, r3, r0, lsl #6
    3ba8:	1a960801 	bne	fe585bb4 <__RAM_segment_used_end__+0xc6485bb4>
    3bac:	55030000 	strpl	r0, [r3, #-0]
    3bb0:	00a81902 	adceq	r1, r8, r2, lsl #18
    3bb4:	23030000 	movwcs	r0, #12288	; 0x3000
    3bb8:	ec0801c4 	stfs	f0, [r8], {196}	; 0xc4
    3bbc:	0300001b 	movweq	r0, #27
    3bc0:	a8190259 	ldmdage	r9, {r0, r3, r4, r6, r9}
    3bc4:	03000000 	movweq	r0, #0
    3bc8:	0801c823 	stmdaeq	r1, {r0, r1, r5, fp, lr, pc}
    3bcc:	000009c4 	andeq	r0, r0, r4, asr #19
    3bd0:	1a025d03 	bne	9afe4 <SYSTICK_CYCLES+0x71fa5>
    3bd4:	00000076 	andeq	r0, r0, r6, ror r0
    3bd8:	01cc2303 	biceq	r2, ip, r3, lsl #6
    3bdc:	00048108 	andeq	r8, r4, r8, lsl #2
    3be0:	02780300 	rsbseq	r0, r8, #0, 6
    3be4:	0000a819 	andeq	sl, r0, r9, lsl r8
    3be8:	d0230300 	eorle	r0, r3, r0, lsl #6
    3bec:	056d0801 	strbeq	r0, [sp, #-2049]!	; 0xfffff7ff
    3bf0:	7d030000 	stcvc	0, cr0, [r3, #-0]
    3bf4:	00a81902 	adceq	r1, r8, r2, lsl #18
    3bf8:	23030000 	movwcs	r0, #12288	; 0x3000
    3bfc:	0b0001d4 	bleq	4354 <_Min_Stack_Size+0x3354>
    3c00:	00016404 	andeq	r6, r1, r4, lsl #8
    3c04:	a0010900 	andge	r0, r1, r0, lsl #18
    3c08:	0a000004 	beq	3c20 <_Min_Stack_Size+0x2c20>
    3c0c:	00000489 	andeq	r0, r0, r9, lsl #9
    3c10:	0000a80a 	andeq	sl, r0, sl, lsl #16
    3c14:	040b0000 	streq	r0, [fp], #-0
    3c18:	0000048f 	andeq	r0, r0, pc, lsl #9
    3c1c:	0007b307 	andeq	fp, r7, r7, lsl #6
    3c20:	7e033400 	cfcpysvc	mvf3, mvf3
    3c24:	05851003 	streq	r1, [r5, #3]
    3c28:	8d080000 	stchi	0, cr0, [r8, #-0]
    3c2c:	03000001 	movweq	r0, #1
    3c30:	a8190382 	ldmdage	r9, {r1, r7, r8, r9}
    3c34:	02000000 	andeq	r0, r0, #0
    3c38:	97080023 	strls	r0, [r8, -r3, lsr #32]
    3c3c:	03000008 	movweq	r0, #8
    3c40:	5e1a0385 	cdppl	3, 1, cr0, cr10, cr5, {4}
    3c44:	02000001 	andeq	r0, r0, #1
    3c48:	fc080423 	stc2	4, cr0, [r8], {35}	; 0x23
    3c4c:	03000006 	movweq	r0, #6
    3c50:	97190388 	ldrls	r0, [r9, -r8, lsl #7]
    3c54:	02000000 	andeq	r0, r0, #0
    3c58:	cb080823 	blgt	205cec <__RAM_SIZE+0x105cec>
    3c5c:	03000004 	movweq	r0, #4
    3c60:	901a038c 	andsls	r0, sl, ip, lsl #7
    3c64:	02000006 	andeq	r0, r0, #6
    3c68:	62080c23 	andvs	r0, r8, #8960	; 0x2300
    3c6c:	03000001 	movweq	r0, #1
    3c70:	97190390 			; <UNDEFINED> instruction: 0x97190390
    3c74:	02000000 	andeq	r0, r0, #0
    3c78:	21081023 	tstcs	r8, r3, lsr #32
    3c7c:	03000001 	movweq	r0, #1
    3c80:	97190393 			; <UNDEFINED> instruction: 0x97190393
    3c84:	02000000 	andeq	r0, r0, #0
    3c88:	cd081423 	cfstrsgt	mvf1, [r8, #-140]	; 0xffffff74
    3c8c:	03000008 	movweq	r0, #8
    3c90:	891a0398 	ldmdbhi	sl, {r3, r4, r7, r8, r9}
    3c94:	02000004 	andeq	r0, r0, #4
    3c98:	e3081823 	movw	r1, #34851	; 0x8823
    3c9c:	03000006 	movweq	r0, #6
    3ca0:	97190399 			; <UNDEFINED> instruction: 0x97190399
    3ca4:	02000000 	andeq	r0, r0, #0
    3ca8:	d3081c23 	movwle	r1, #35875	; 0x8c23
    3cac:	03000005 	movweq	r0, #5
    3cb0:	851a039d 	ldrhi	r0, [sl, #-925]	; 0xfffffc63
    3cb4:	02000005 	andeq	r0, r0, #5
    3cb8:	a0082023 	andge	r2, r8, r3, lsr #32
    3cbc:	03000006 	movweq	r0, #6
    3cc0:	851a039e 	ldrhi	r0, [sl, #-926]	; 0xfffffc62
    3cc4:	02000005 	andeq	r0, r0, #5
    3cc8:	d0082423 	andle	r2, r8, r3, lsr #8
    3ccc:	03000001 	movweq	r0, #1
    3cd0:	971903a2 	ldrls	r0, [r9, -r2, lsr #7]
    3cd4:	02000000 	andeq	r0, r0, #0
    3cd8:	e0082823 	and	r2, r8, r3, lsr #16
    3cdc:	03000009 	movweq	r0, #9
    3ce0:	851a03a6 	ldrhi	r0, [sl, #-934]	; 0xfffffc5a
    3ce4:	02000005 	andeq	r0, r0, #5
    3ce8:	25082c23 	strcs	r2, [r8, #-3107]	; 0xfffff3dd
    3cec:	03000004 	movweq	r0, #4
    3cf0:	851a03a7 	ldrhi	r0, [sl, #-935]	; 0xfffffc59
    3cf4:	02000005 	andeq	r0, r0, #5
    3cf8:	0b003023 	bleq	fd8c <_Min_Stack_Size+0xed8c>
    3cfc:	0004a604 	andeq	sl, r4, r4, lsl #12
    3d00:	08ef0c00 	stmiaeq	pc!, {sl, fp}^	; <UNPREDICTABLE>
    3d04:	86030000 	strhi	r0, [r3], -r0
    3d08:	01640302 	cmneq	r4, r2, lsl #6
    3d0c:	040b0000 	streq	r0, [fp], #-0
    3d10:	0000008b 	andeq	r0, r0, fp, lsl #1
    3d14:	00046007 	andeq	r6, r4, r7
    3d18:	d9033400 	stmdble	r3, {sl, ip, sp}
    3d1c:	067d1002 	ldrbteq	r1, [sp], -r2
    3d20:	01080000 	mrseq	r0, (UNDEF: 8)
    3d24:	03000004 	movweq	r0, #4
    3d28:	a81902dd 	ldmdage	r9, {r0, r2, r3, r4, r6, r7, r9}
    3d2c:	02000000 	andeq	r0, r0, #0
    3d30:	74080023 	strvc	r0, [r8], #-35	; 0xffffffdd
    3d34:	03000003 	movweq	r0, #3
    3d38:	5e1a02e0 	cdppl	2, 1, cr0, cr10, cr0, {7}
    3d3c:	02000001 	andeq	r0, r0, #1
    3d40:	70080423 	andvc	r0, r8, r3, lsr #8
    3d44:	03000007 	movweq	r0, #7
    3d48:	a81902e3 	ldmdage	r9, {r0, r1, r5, r6, r7, r9}
    3d4c:	02000000 	andeq	r0, r0, #0
    3d50:	b6080823 	strlt	r0, [r8], -r3, lsr #16
    3d54:	03000008 	movweq	r0, #8
    3d58:	971902e6 	ldrls	r0, [r9, -r6, ror #5]
    3d5c:	02000000 	andeq	r0, r0, #0
    3d60:	0b080c23 	bleq	206df4 <__RAM_SIZE+0x106df4>
    3d64:	03000008 	movweq	r0, #8
    3d68:	981a02e9 	ldmdals	sl, {r0, r3, r5, r6, r7, r9}
    3d6c:	02000005 	andeq	r0, r0, #5
    3d70:	13081023 	movwne	r1, #32803	; 0x8023
    3d74:	03000011 	movweq	r0, #17
    3d78:	981a02ed 	ldmdals	sl, {r0, r2, r3, r5, r6, r7, r9}
    3d7c:	02000005 	andeq	r0, r0, #5
    3d80:	28081423 	stmdacs	r8, {r0, r1, r5, sl, ip}
    3d84:	03000005 	movweq	r0, #5
    3d88:	981a02f0 	ldmdals	sl, {r4, r5, r6, r7, r9}
    3d8c:	02000005 	andeq	r0, r0, #5
    3d90:	06081823 	streq	r1, [r8], -r3, lsr #16
    3d94:	03000003 	movweq	r0, #3
    3d98:	a81902f3 	ldmdage	r9, {r0, r1, r4, r5, r6, r7, r9}
    3d9c:	02000000 	andeq	r0, r0, #0
    3da0:	8d081c23 	stchi	12, cr1, [r8, #-140]	; 0xffffff74
    3da4:	03000009 	movweq	r0, #9
    3da8:	891a02f9 	ldmdbhi	sl, {r0, r3, r4, r5, r6, r7, r9}
    3dac:	02000004 	andeq	r0, r0, #4
    3db0:	ae082023 	cdpge	0, 0, cr2, cr8, cr3, {1}
    3db4:	03000004 	movweq	r0, #4
    3db8:	891a02fe 	ldmdbhi	sl, {r1, r2, r3, r4, r5, r6, r7, r9}
    3dbc:	02000004 	andeq	r0, r0, #4
    3dc0:	0b082423 	bleq	20ce54 <__RAM_SIZE+0x10ce54>
    3dc4:	03000005 	movweq	r0, #5
    3dc8:	971902ff 			; <UNDEFINED> instruction: 0x971902ff
    3dcc:	02000000 	andeq	r0, r0, #0
    3dd0:	a7082823 	strge	r2, [r8, -r3, lsr #16]
    3dd4:	03000002 	movweq	r0, #2
    3dd8:	7d1a0303 	ldcvc	3, cr0, [sl, #-12]
    3ddc:	02000006 	andeq	r0, r0, #6
    3de0:	79082c23 	stmdbvc	r8, {r0, r1, r5, sl, fp, sp}
    3de4:	03000008 	movweq	r0, #8
    3de8:	7d1a0304 	ldcvc	3, cr0, [sl, #-16]
    3dec:	02000006 	andeq	r0, r0, #6
    3df0:	0b003023 	bleq	fe84 <_Min_Stack_Size+0xee84>
    3df4:	00059e04 	andeq	r9, r5, r4, lsl #28
    3df8:	04740c00 	ldrbteq	r0, [r4], #-3072	; 0xfffff400
    3dfc:	23030000 	movwcs	r0, #12288	; 0x3000
    3e00:	059e0303 	ldreq	r0, [lr, #771]	; 0x303
    3e04:	040b0000 	streq	r0, [fp], #-0
    3e08:	0000058b 	andeq	r0, r0, fp, lsl #11
    3e0c:	0011270d 	andseq	r2, r1, sp, lsl #14
    3e10:	01390400 	teqeq	r9, r0, lsl #8
    3e14:	00069021 	andeq	r9, r6, r1, lsr #32
    3e18:	0d010100 	stfeqs	f0, [r1, #-0]
    3e1c:	0000113e 	andeq	r1, r0, lr, lsr r1
    3e20:	21018e04 	tstcs	r1, r4, lsl #28
    3e24:	000000a3 	andeq	r0, r0, r3, lsr #1
    3e28:	040b0101 	streq	r0, [fp], #-257	; 0xfffffeff
    3e2c:	00000683 	andeq	r0, r0, r3, lsl #13
    3e30:	1159010e 	cmpne	r9, lr, lsl #2
    3e34:	51010000 	mrspl	r0, (UNDEF: 1)
    3e38:	00970107 	addseq	r0, r7, r7, lsl #2
    3e3c:	1b100000 	blne	403e44 <__RAM_SIZE+0x303e44>
    3e40:	1bbc1000 	blne	fef07e48 <__RAM_segment_used_end__+0xc6e07e48>
    3e44:	280c1000 	stmdacs	ip, {ip}
    3e48:	52010000 	andpl	r0, r1, #0
    3e4c:	0f000009 	svceq	0x00000009
    3e50:	00000efd 	strdeq	r0, [r0], -sp
    3e54:	b4275101 	strtlt	r5, [r7], #-257	; 0xfffffeff
    3e58:	30000006 	andcc	r0, r0, r6
    3e5c:	2c000028 	stccs	0, cr0, [r0], {40}	; 0x28
    3e60:	0f000028 	svceq	0x00000028
    3e64:	000010f2 	strdeq	r1, [r0], -r2
    3e68:	52385101 	eorspl	r5, r8, #1073741824	; 0x40000000
    3e6c:	52000009 	andpl	r0, r0, #9
    3e70:	4e000028 	cdpmi	0, 0, cr0, cr0, cr8, {1}
    3e74:	0f000028 	svceq	0x00000028
    3e78:	000010e6 	andeq	r1, r0, r6, ror #1
    3e7c:	a84a5101 	stmdage	sl, {r0, r8, ip, lr}^
    3e80:	76000000 	strvc	r0, [r0], -r0
    3e84:	70000028 	andvc	r0, r0, r8, lsr #32
    3e88:	0f000028 	svceq	0x00000028
    3e8c:	00001106 	andeq	r1, r0, r6, lsl #2
    3e90:	a85e5101 	ldmdage	lr, {r0, r8, ip, lr}^
    3e94:	a5000000 	strge	r0, [r0, #-0]
    3e98:	a1000028 	tstge	r0, r8, lsr #32
    3e9c:	10000028 	andne	r0, r0, r8, lsr #32
    3ea0:	00000eee 	andeq	r0, r0, lr, ror #29
    3ea4:	97015401 	strls	r5, [r1, -r1, lsl #8]
    3ea8:	c7000000 	strgt	r0, [r0, -r0]
    3eac:	c3000028 	movwgt	r0, #40	; 0x28
    3eb0:	10000028 	andne	r0, r0, r8, lsr #32
    3eb4:	000003fa 	strdeq	r0, [r0], -sl
    3eb8:	971d5601 	ldrls	r5, [sp, -r1, lsl #12]
    3ebc:	ed000000 	stc	0, cr0, [r0, #-0]
    3ec0:	e5000028 	str	r0, [r0, #-40]	; 0xffffffd8
    3ec4:	10000028 	andne	r0, r0, r8, lsr #32
    3ec8:	00001979 	andeq	r1, r0, r9, ror r9
    3ecc:	901e5701 	andsls	r5, lr, r1, lsl #14
    3ed0:	26000006 	strcs	r0, [r0], -r6
    3ed4:	24000029 	strcs	r0, [r0], #-41	; 0xffffffd7
    3ed8:	10000029 	andne	r0, r0, r9, lsr #32
    3edc:	00000eb9 			; <UNDEFINED> instruction: 0x00000eb9
    3ee0:	981e5801 	ldmdals	lr, {r0, fp, ip, lr}
    3ee4:	45000005 	strmi	r0, [r0, #-5]
    3ee8:	39000029 	stmdbcc	r0, {r0, r3, r5}
    3eec:	10000029 	andne	r0, r0, r9, lsr #32
    3ef0:	000018be 			; <UNDEFINED> instruction: 0x000018be
    3ef4:	971d5901 	ldrls	r5, [sp, -r1, lsl #18]
    3ef8:	97000000 	strls	r0, [r0, -r0]
    3efc:	91000029 	tstls	r0, r9, lsr #32
    3f00:	10000029 	andne	r0, r0, r9, lsr #32
    3f04:	00001007 	andeq	r1, r0, r7
    3f08:	901e5a01 	andsls	r5, lr, r1, lsl #20
    3f0c:	c4000006 	strgt	r0, [r0], #-6
    3f10:	c2000029 	andgt	r0, r0, #41	; 0x29
    3f14:	10000029 	andne	r0, r0, r9, lsr #32
    3f18:	00001013 	andeq	r1, r0, r3, lsl r0
    3f1c:	901e5b01 	andsls	r5, lr, r1, lsl #22
    3f20:	d9000006 	stmdble	r0, {r1, r2}
    3f24:	d7000029 	strle	r0, [r0, -r9, lsr #32]
    3f28:	10000029 	andne	r0, r0, r9, lsr #32
    3f2c:	000010fd 	strdeq	r1, [r0], -sp
    3f30:	971d5c01 	ldrls	r5, [sp, -r1, lsl #24]
    3f34:	ee000000 	cdp	0, 0, cr0, cr0, cr0, {0}
    3f38:	ec000029 	stc	0, cr0, [r0], {41}	; 0x29
    3f3c:	11000029 	tstne	r0, r9, lsr #32
    3f40:	00000958 	andeq	r0, r0, r8, asr r9
    3f44:	10001b20 	andne	r1, r0, r0, lsr #22
    3f48:	001b2001 	andseq	r2, fp, r1
    3f4c:	001b2610 	andseq	r2, fp, r0, lsl r6
    3f50:	056d0110 	strbeq	r0, [sp, #-272]!	; 0xfffffef0
    3f54:	00000814 	andeq	r0, r0, r4, lsl r8
    3f58:	00096b12 	andeq	r6, r9, r2, lsl fp
    3f5c:	002a0400 	eoreq	r0, sl, r0, lsl #8
    3f60:	002a0200 	eoreq	r0, sl, r0, lsl #4
    3f64:	09961300 	ldmibeq	r6, {r8, r9, ip}
    3f68:	1b200000 	blne	803f70 <__RAM_SIZE+0x703f70>
    3f6c:	20041000 	andcs	r1, r4, r0
    3f70:	2410001b 	ldrcs	r0, [r0], #-27	; 0xffffffe5
    3f74:	0210001b 	andseq	r0, r0, #27
    3f78:	12130256 	andsne	r0, r3, #1610612741	; 0x60000005
    3f7c:	000009a9 	andeq	r0, r0, r9, lsr #19
    3f80:	00002a19 	andeq	r2, r0, r9, lsl sl
    3f84:	00002a17 	andeq	r2, r0, r7, lsl sl
    3f88:	79110000 	ldmdbvc	r1, {}	; <UNPREDICTABLE>
    3f8c:	2c000009 	stccs	0, cr0, [r0], {9}
    3f90:	0110001b 	tsteq	r0, fp, lsl r0
    3f94:	10001b2c 	andne	r1, r0, ip, lsr #22
    3f98:	10001b30 	andne	r1, r0, r0, lsr fp
    3f9c:	3b09a801 	blcc	26dfa8 <__RAM_SIZE+0x16dfa8>
    3fa0:	14000008 	strne	r0, [r0], #-8
    3fa4:	00000988 	andeq	r0, r0, r8, lsl #19
    3fa8:	00002a2e 	andeq	r2, r0, lr, lsr #20
    3fac:	00002a2c 	andeq	r2, r0, ip, lsr #20
    3fb0:	09581100 	ldmdbeq	r8, {r8, ip}^
    3fb4:	1b380000 	blne	e03fbc <__RAM_SIZE+0xd03fbc>
    3fb8:	38011000 	stmdacc	r1, {ip}
    3fbc:	3e10001b 	mrccc	0, 0, r0, cr0, cr11, {0}
    3fc0:	0110001b 	tsteq	r0, fp, lsl r0
    3fc4:	088609b2 	stmeq	r6, {r1, r4, r5, r7, r8, fp}
    3fc8:	6b120000 	blvs	483fd0 <__RAM_SIZE+0x383fd0>
    3fcc:	43000009 	movwmi	r0, #9
    3fd0:	4100002a 	tstmi	r0, sl, lsr #32
    3fd4:	1300002a 	movwne	r0, #42	; 0x2a
    3fd8:	00000996 	muleq	r0, r6, r9
    3fdc:	10001b38 	andne	r1, r0, r8, lsr fp
    3fe0:	001b3804 	andseq	r3, fp, r4, lsl #16
    3fe4:	001b3c10 	andseq	r3, fp, r0, lsl ip
    3fe8:	02560210 	subseq	r0, r6, #16, 4
    3fec:	09a91213 	stmibeq	r9!, {r0, r1, r4, r9, ip}
    3ff0:	2a580000 	bcs	1603ff8 <__RAM_SIZE+0x1503ff8>
    3ff4:	2a560000 	bcs	1583ffc <__RAM_SIZE+0x1483ffc>
    3ff8:	00000000 	andeq	r0, r0, r0
    3ffc:	00097911 	andeq	r7, r9, r1, lsl r9
    4000:	001b4c00 	andseq	r4, fp, r0, lsl #24
    4004:	1b4c0110 	blne	130444c <__RAM_SIZE+0x120444c>
    4008:	1b501000 	blne	1408010 <__RAM_SIZE+0x1308010>
    400c:	f3011000 	vhadd.u8	d1, d1, d0
    4010:	0008ad09 	andeq	sl, r8, r9, lsl #26
    4014:	09881400 	stmibeq	r8, {sl, ip}
    4018:	2a6d0000 	bcs	1b44020 <__RAM_SIZE+0x1a44020>
    401c:	2a6b0000 	bcs	1ac4024 <__RAM_SIZE+0x19c4024>
    4020:	15000000 	strne	r0, [r0, #-0]
    4024:	00000979 	andeq	r0, r0, r9, ror r9
    4028:	10001b88 	andne	r1, r0, r8, lsl #23
    402c:	001b8801 	andseq	r8, fp, r1, lsl #16
    4030:	001b8c10 	andseq	r8, fp, r0, lsl ip
    4034:	01520110 	cmpeq	r2, r0, lsl r1
    4038:	0008d511 	andeq	sp, r8, r1, lsl r5
    403c:	09881400 	stmibeq	r8, {sl, ip}
    4040:	2a820000 	bcs	fe084048 <__RAM_segment_used_end__+0xc5f84048>
    4044:	2a800000 	bcs	fe00404c <__RAM_segment_used_end__+0xc5f0404c>
    4048:	16000000 	strne	r0, [r0], -r0
    404c:	00000979 	andeq	r0, r0, r9, ror r9
    4050:	10001b92 	mulne	r0, r2, fp
    4054:	00021002 	andeq	r1, r2, r2
    4058:	01090100 	mrseq	r0, (UNDEF: 25)
    405c:	0008f911 	andeq	pc, r8, r1, lsl r9	; <UNPREDICTABLE>
    4060:	09881400 	stmibeq	r8, {sl, ip}
    4064:	2a970000 	bcs	fe5c406c <__RAM_segment_used_end__+0xc64c406c>
    4068:	2a950000 	bcs	fe544070 <__RAM_segment_used_end__+0xc6444070>
    406c:	15000000 	strne	r0, [r0, #-0]
    4070:	00000979 	andeq	r0, r0, r9, ror r9
    4074:	10001ba8 	andne	r1, r0, r8, lsr #23
    4078:	001ba801 	andseq	sl, fp, r1, lsl #16
    407c:	001bac10 	andseq	sl, fp, r0, lsl ip
    4080:	01900110 	orrseq	r0, r0, r0, lsl r1
    4084:	0009210d 	andeq	r2, r9, sp, lsl #2
    4088:	09881400 	stmibeq	r8, {sl, ip}
    408c:	2aac0000 	bcs	feb04094 <__RAM_segment_used_end__+0xc6a04094>
    4090:	2aaa0000 	bcs	fea84098 <__RAM_segment_used_end__+0xc6984098>
    4094:	17000000 	strne	r0, [r0, -r0]
    4098:	10001b38 	andne	r1, r0, r8, lsr fp
    409c:	000009b7 			; <UNDEFINED> instruction: 0x000009b7
    40a0:	0000093b 	andeq	r0, r0, fp, lsr r9
    40a4:	02500118 	subseq	r0, r0, #24, 2
    40a8:	01180074 	tsteq	r8, r4, ror r0
    40ac:	00770251 	rsbseq	r0, r7, r1, asr r2
    40b0:	1b881900 	blne	fe20a4b8 <__RAM_segment_used_end__+0xc610a4b8>
    40b4:	09c51000 	stmibeq	r5, {ip}^
    40b8:	01180000 	tsteq	r8, r0
    40bc:	00760250 	rsbseq	r0, r6, r0, asr r2
    40c0:	02510118 	subseq	r0, r1, #24, 2
    40c4:	00000079 	andeq	r0, r0, r9, ror r0
    40c8:	0076040b 	rsbseq	r0, r6, fp, lsl #8
    40cc:	241a0000 	ldrcs	r0, [sl], #-0
    40d0:	0200000f 	andeq	r0, r0, #15
    40d4:	01370252 	teqeq	r7, r2, asr r2
    40d8:	00000097 	muleq	r0, r7, r0
    40dc:	00097903 	andeq	r7, r9, r3, lsl #18
    40e0:	0ead1b00 	vfmaeq.f64	d1, d13, d0
    40e4:	54020000 	strpl	r0, [r2], #-0
    40e8:	00970602 	addseq	r0, r7, r2, lsl #12
    40ec:	1c000000 	stcne	0, cr0, [r0], {-0}
    40f0:	00000e99 	muleq	r0, r9, lr
    40f4:	37024902 	strcc	r4, [r2, -r2, lsl #18]
    40f8:	09960301 	ldmibeq	r6, {r0, r8, r9}
    40fc:	ad1d0000 	ldcge	0, cr0, [sp, #-0]
    4100:	0200000e 	andeq	r0, r0, #14
    4104:	97500249 	ldrbls	r0, [r0, -r9, asr #4]
    4108:	00000000 	andeq	r0, r0, r0
    410c:	000ec21a 	andeq	ip, lr, sl, lsl r2
    4110:	02320200 	eorseq	r0, r2, #0, 4
    4114:	00970137 	addseq	r0, r7, r7, lsr r1
    4118:	b7030000 	strlt	r0, [r3, -r0]
    411c:	1b000009 	blne	4148 <_Min_Stack_Size+0x3148>
    4120:	00000eb1 			; <UNDEFINED> instruction: 0x00000eb1
    4124:	06023402 	streq	r3, [r2], -r2, lsl #8
    4128:	00000097 	muleq	r0, r7, r0
    412c:	01011e00 	tsteq	r1, r0, lsl #28
    4130:	00001112 	andeq	r1, r0, r2, lsl r1
    4134:	00001112 	andeq	r1, r0, r2, lsl r1
    4138:	1f0e6805 	svcne	0x000e6805
    413c:	10c90101 	sbcne	r0, r9, r1, lsl #2
    4140:	10c90000 	sbcne	r0, r9, r0
    4144:	21040000 	mrscs	r0, (UNDEF: 4)
    4148:	48000d01 	stmdami	r0, {r0, r8, sl, fp}
    414c:	02000007 	andeq	r0, r0, #7
    4150:	000b4000 	andeq	r4, fp, r0
    4154:	3d010400 	cfstrscc	mvf0, [r1, #-0]
    4158:	0c000000 	stceq	0, cr0, [r0], {-0}
    415c:	0000116b 	andeq	r1, r0, fp, ror #2
    4160:	0000065c 	andeq	r0, r0, ip, asr r6
    4164:	00000238 	andeq	r0, r0, r8, lsr r2
	...
    4170:	00001eba 			; <UNDEFINED> instruction: 0x00001eba
    4174:	39070402 	stmdbcc	r7, {r1, sl}
    4178:	03000002 	movweq	r0, #2
    417c:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    4180:	08020074 	stmdaeq	r2, {r2, r4, r5, r6}
    4184:	0004e805 	andeq	lr, r4, r5, lsl #16
    4188:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    418c:	0000063e 	andeq	r0, r0, lr, lsr r6
    4190:	6d060102 	stfvss	f0, [r6, #-8]
    4194:	02000008 	andeq	r0, r0, #8
    4198:	086b0801 	stmdaeq	fp!, {r0, fp}^
    419c:	02020000 	andeq	r0, r2, #0
    41a0:	0006cf05 	andeq	ip, r6, r5, lsl #30
    41a4:	07020200 	streq	r0, [r2, -r0, lsl #4]
    41a8:	00000939 	andeq	r0, r0, r9, lsr r9
    41ac:	ed050402 	cfstrs	mvf0, [r5, #-8]
    41b0:	02000004 	andeq	r0, r0, #4
    41b4:	02340704 	eorseq	r0, r4, #4, 14	; 0x100000
    41b8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    41bc:	00022f07 	andeq	r2, r2, r7, lsl #30
    41c0:	02040400 	andeq	r0, r4, #0, 8
    41c4:	08740801 	ldmdaeq	r4!, {r0, fp}^
    41c8:	fa050000 	blx	1441d0 <__RAM_SIZE+0x441d0>
    41cc:	02000008 	andeq	r0, r0, #8
    41d0:	00783173 	rsbseq	r3, r8, r3, ror r1
    41d4:	f9050000 			; <UNDEFINED> instruction: 0xf9050000
    41d8:	02000008 	andeq	r0, r0, #8
    41dc:	004c3174 	subeq	r3, ip, r4, ror r1
    41e0:	9a050000 	bls	1441e8 <__RAM_SIZE+0x441e8>
    41e4:	02000007 	andeq	r0, r0, #7
    41e8:	00293176 	eoreq	r3, r9, r6, ror r1
    41ec:	2c050000 	stccs	0, cr0, [r5], {-0}
    41f0:	02000007 	andeq	r0, r0, #7
    41f4:	00683178 	rsbeq	r3, r8, r8, ror r1
    41f8:	3b060000 	blcc	184200 <__RAM_SIZE+0x84200>
    41fc:	1c000005 	stcne	0, cr0, [r0], {5}
    4200:	10018203 	andne	r8, r1, r3, lsl #4
    4204:	0000012e 	andeq	r0, r0, lr, lsr #2
    4208:	00082d07 	andeq	r2, r8, r7, lsl #26
    420c:	01860300 	orreq	r0, r6, r0, lsl #6
    4210:	0000a319 	andeq	sl, r0, r9, lsl r3
    4214:	00230200 	eoreq	r0, r3, r0, lsl #4
    4218:	0003a007 	andeq	sl, r3, r7
    421c:	01870300 	orreq	r0, r7, r0, lsl #6
    4220:	0000a319 	andeq	sl, r0, r9, lsl r3
    4224:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    4228:	00043d07 	andeq	r3, r4, r7, lsl #26
    422c:	018a0300 	orreq	r0, sl, r0, lsl #6
    4230:	00013a1b 	andeq	r3, r1, fp, lsl sl
    4234:	08230200 	stmdaeq	r3!, {r9}
    4238:	0001f207 	andeq	pc, r1, r7, lsl #4
    423c:	018b0300 	orreq	r0, fp, r0, lsl #6
    4240:	0000a319 	andeq	sl, r0, r9, lsl r3
    4244:	0c230200 	sfmeq	f0, 4, [r3], #-0
    4248:	00096f07 	andeq	r6, r9, r7, lsl #30
    424c:	01910300 	orrseq	r0, r1, r0, lsl #6
    4250:	0001401a 	andeq	r4, r1, sl, lsl r0
    4254:	10230200 	eorne	r0, r3, r0, lsl #4
    4258:	00001b07 	andeq	r1, r0, r7, lsl #22
    425c:	01920300 	orrseq	r0, r2, r0, lsl #6
    4260:	0001401a 	andeq	r4, r1, sl, lsl r0
    4264:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    4268:	00060907 	andeq	r0, r6, r7, lsl #18
    426c:	01960300 	orrseq	r0, r6, r0, lsl #6
    4270:	0001461b 	andeq	r4, r1, fp, lsl r6
    4274:	18230200 	stmdane	r3!, {r9}
    4278:	3a010800 	bcc	46280 <SYSTICK_CYCLES+0x1d241>
    427c:	09000001 	stmdbeq	r0, {r0}
    4280:	000000a3 	andeq	r0, r0, r3, lsr #1
    4284:	2e040a00 	vmlacs.f32	s0, s8, s0
    4288:	0a000001 	beq	4294 <_Min_Stack_Size+0x3294>
    428c:	0000af04 	andeq	sl, r0, r4, lsl #30
    4290:	40040a00 	andmi	r0, r4, r0, lsl #20
    4294:	0b000001 	bleq	42a0 <_Min_Stack_Size+0x32a0>
    4298:	0000064a 	andeq	r0, r0, sl, asr #12
    429c:	03019b03 	movweq	r9, #6915	; 0x1b03
    42a0:	000000af 	andeq	r0, r0, pc, lsr #1
    42a4:	007f040a 	rsbseq	r0, pc, sl, lsl #8
    42a8:	4b060000 	blmi	1842b0 <__RAM_SIZE+0x842b0>
    42ac:	d8000003 	stmdale	r0, {r0, r1}
    42b0:	1001d603 	andne	sp, r1, r3, lsl #12
    42b4:	00000484 	andeq	r0, r0, r4, lsl #9
    42b8:	00092c07 	andeq	r2, r9, r7, lsl #24
    42bc:	01dd0300 	bicseq	r0, sp, r0, lsl #6
    42c0:	0000a319 	andeq	sl, r0, r9, lsl r3
    42c4:	00230200 	eoreq	r0, r3, r0, lsl #4
    42c8:	00079f07 	andeq	r9, r7, r7, lsl #30
    42cc:	01de0300 	bicseq	r0, lr, r0, lsl #6
    42d0:	0000a319 	andeq	sl, r0, r9, lsl r3
    42d4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    42d8:	0001bc07 	andeq	fp, r1, r7, lsl #24
    42dc:	01df0300 	bicseq	r0, pc, r0, lsl #6
    42e0:	0000761a 	andeq	r7, r0, sl, lsl r6
    42e4:	08230200 	stmdaeq	r3!, {r9}
    42e8:	00091607 	andeq	r1, r9, r7, lsl #12
    42ec:	01e00300 	mvneq	r0, r0, lsl #6
    42f0:	0000761a 	andeq	r7, r0, sl, lsl r6
    42f4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    42f8:	00041107 	andeq	r1, r4, r7, lsl #2
    42fc:	01e10300 	mvneq	r0, r0, lsl #6
    4300:	0000761a 	andeq	r7, r0, sl, lsl r6
    4304:	10230200 	eorne	r0, r3, r0, lsl #4
    4308:	00095a07 	andeq	r5, r9, r7, lsl #20
    430c:	01e20300 	mvneq	r0, r0, lsl #6
    4310:	0000a319 	andeq	sl, r0, r9, lsl r3
    4314:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    4318:	0021e207 	eoreq	lr, r1, r7, lsl #4
    431c:	01e30300 	mvneq	r0, r0, lsl #6
    4320:	0000a319 	andeq	sl, r0, r9, lsl r3
    4324:	18230200 	stmdane	r3!, {r9}
    4328:	00062507 	andeq	r2, r6, r7, lsl #10
    432c:	01e40300 	mvneq	r0, r0, lsl #6
    4330:	0000a319 	andeq	sl, r0, r9, lsl r3
    4334:	1c230200 	sfmne	f0, 4, [r3], #-0
    4338:	0006ba07 	andeq	fp, r6, r7, lsl #20
    433c:	01e80300 	mvneq	r0, r0, lsl #6
    4340:	0004841a 	andeq	r8, r4, sl, lsl r4
    4344:	20230200 	eorcs	r0, r3, r0, lsl #4
    4348:	00019907 	andeq	r9, r1, r7, lsl #18
    434c:	01e90300 	mvneq	r0, r0, lsl #6
    4350:	0004841a 	andeq	r8, r4, sl, lsl r4
    4354:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    4358:	0005b107 	andeq	fp, r5, r7, lsl #2
    435c:	01f10300 	mvnseq	r0, r0, lsl #6
    4360:	0001591a 	andeq	r5, r1, sl, lsl r9
    4364:	28230200 	stmdacs	r3!, {r9}
    4368:	0002d907 	andeq	sp, r2, r7, lsl #18
    436c:	01f20300 	mvnseq	r0, r0, lsl #6
    4370:	00009719 	andeq	r9, r0, r9, lsl r7
    4374:	2c230200 	sfmcs	f0, 4, [r3], #-0
    4378:	00024607 	andeq	r4, r2, r7, lsl #12
    437c:	01f30300 	mvnseq	r0, r0, lsl #6
    4380:	00009719 	andeq	r9, r0, r9, lsl r7
    4384:	30230200 	eorcc	r0, r3, r0, lsl #4
    4388:	00017307 	andeq	r7, r1, r7, lsl #6
    438c:	01f40300 	mvnseq	r0, r0, lsl #6
    4390:	00009719 	andeq	r9, r0, r9, lsl r7
    4394:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    4398:	00074b07 	andeq	r4, r7, r7, lsl #22
    439c:	01f50300 	mvnseq	r0, r0, lsl #6
    43a0:	00009719 	andeq	r9, r0, r9, lsl r7
    43a4:	38230200 	stmdacc	r3!, {r9}
    43a8:	0000eb07 	andeq	lr, r0, r7, lsl #22
    43ac:	01f60300 	mvnseq	r0, r0, lsl #6
    43b0:	00009719 	andeq	r9, r0, r9, lsl r7
    43b4:	3c230200 	sfmcc	f0, 4, [r3], #-0
    43b8:	00035c07 	andeq	r5, r3, r7, lsl #24
    43bc:	01fb0300 	mvnseq	r0, r0, lsl #6
    43c0:	00049b1b 	andeq	r9, r4, fp, lsl fp
    43c4:	40230200 	eormi	r0, r3, r0, lsl #4
    43c8:	00015207 	andeq	r5, r1, r7, lsl #4
    43cc:	02030300 	andeq	r0, r3, #0, 6
    43d0:	00013a1b 	andeq	r3, r1, fp, lsl sl
    43d4:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    43d8:	00010707 	andeq	r0, r1, r7, lsl #14
    43dc:	02040300 	andeq	r0, r4, #0, 6
    43e0:	0000a319 	andeq	sl, r0, r9, lsl r3
    43e4:	48230200 	stmdami	r3!, {r9}
    43e8:	00033b07 	andeq	r3, r3, r7, lsl #22
    43ec:	02080300 	andeq	r0, r8, #0, 6
    43f0:	00014c19 	andeq	r4, r1, r9, lsl ip
    43f4:	4c230200 	sfmmi	f0, 4, [r3], #-0
    43f8:	0002ec07 	andeq	lr, r2, r7, lsl #24
    43fc:	020e0300 	andeq	r0, lr, #0, 6
    4400:	00049b1b 	andeq	r9, r4, fp, lsl fp
    4404:	68230200 	stmdavs	r3!, {r9}
    4408:	0005e907 	andeq	lr, r5, r7, lsl #18
    440c:	020f0300 	andeq	r0, pc, #0, 6
    4410:	0000761a 	andeq	r7, r0, sl, lsl r6
    4414:	6c230200 	sfmvs	f0, 4, [r3], #-0
    4418:	00073207 	andeq	r3, r7, r7, lsl #4
    441c:	02110300 	andseq	r0, r1, #0, 6
    4420:	0004841a 	andeq	r8, r4, sl, lsl r4
    4424:	70230200 	eorvc	r0, r3, r0, lsl #4
    4428:	00021207 	andeq	r1, r2, r7, lsl #4
    442c:	02120300 	andseq	r0, r2, #0, 6
    4430:	0004841a 	andeq	r8, r4, sl, lsl r4
    4434:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    4438:	00071507 	andeq	r1, r7, r7, lsl #10
    443c:	02130300 	andseq	r0, r3, #0, 6
    4440:	0000a319 	andeq	sl, r0, r9, lsl r3
    4444:	78230200 	stmdavc	r3!, {r9}
    4448:	0003c607 	andeq	ip, r3, r7, lsl #12
    444c:	02140300 	andseq	r0, r4, #0, 6
    4450:	0000761a 	andeq	r7, r0, sl, lsl r6
    4454:	7c230200 	sfmvc	f0, 4, [r3], #-0
    4458:	00055407 	andeq	r5, r5, r7, lsl #8
    445c:	02150300 	andseq	r0, r5, #0, 6
    4460:	00009719 	andeq	r9, r0, r9, lsl r7
    4464:	80230300 	eorhi	r0, r3, r0, lsl #6
    4468:	03e80701 	mvneq	r0, #262144	; 0x40000
    446c:	16030000 	strne	r0, [r3], -r0
    4470:	00971902 	addseq	r1, r7, r2, lsl #18
    4474:	23030000 	movwcs	r0, #12288	; 0x3000
    4478:	ff070184 			; <UNDEFINED> instruction: 0xff070184
    447c:	03000008 	movweq	r0, #8
    4480:	841a021f 	ldrhi	r0, [sl], #-543	; 0xfffffde1
    4484:	03000004 	movweq	r0, #4
    4488:	07018823 	streq	r8, [r1, -r3, lsr #16]
    448c:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    4490:	1a022003 	bne	8c4a4 <SYSTICK_CYCLES+0x63465>
    4494:	00000484 	andeq	r0, r0, r4, lsl #9
    4498:	018c2303 	orreq	r2, ip, r3, lsl #6
    449c:	0002c107 	andeq	ip, r2, r7, lsl #2
    44a0:	022e0300 	eoreq	r0, lr, #0, 6
    44a4:	00009719 	andeq	r9, r0, r9, lsl r7
    44a8:	90230300 	eorls	r0, r3, r0, lsl #6
    44ac:	02560701 	subseq	r0, r6, #262144	; 0x40000
    44b0:	2f030000 	svccs	0x00030000
    44b4:	00971902 	addseq	r1, r7, r2, lsl #18
    44b8:	23030000 	movwcs	r0, #12288	; 0x3000
    44bc:	20070194 	mulcs	r7, r4, r1
    44c0:	03000003 	movweq	r0, #3
    44c4:	97190230 			; <UNDEFINED> instruction: 0x97190230
    44c8:	03000000 	movweq	r0, #0
    44cc:	07019823 	streq	r9, [r1, -r3, lsr #16]
    44d0:	00000277 	andeq	r0, r0, r7, ror r2
    44d4:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
    44d8:	00000097 	muleq	r0, r7, r0
    44dc:	019c2303 	orrseq	r2, ip, r3, lsl #6
    44e0:	00000007 	andeq	r0, r0, r7
    44e4:	02350300 	eorseq	r0, r5, #0, 6
    44e8:	0005801a 	andeq	r8, r5, sl, lsl r0
    44ec:	a0230300 	eorge	r0, r3, r0, lsl #6
    44f0:	1bc80701 	blne	ff2060fc <__RAM_segment_used_end__+0xc71060fc>
    44f4:	3a030000 	bcc	c44fc <SYSTICK_CYCLES+0x9b4bd>
    44f8:	00a31902 	adceq	r1, r3, r2, lsl #18
    44fc:	23030000 	movwcs	r0, #12288	; 0x3000
    4500:	880701a4 	stmdahi	r7, {r2, r5, r7, r8}
    4504:	0300001c 	movweq	r0, #28
    4508:	a319023d 	tstge	r9, #-805306365	; 0xd0000003
    450c:	03000000 	movweq	r0, #0
    4510:	0701a823 	streq	sl, [r1, -r3, lsr #16]
    4514:	00001b41 	andeq	r1, r0, r1, asr #22
    4518:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
    451c:	000000a3 	andeq	r0, r0, r3, lsr #1
    4520:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    4524:	001d3f07 	andseq	r3, sp, r7, lsl #30
    4528:	02450300 	subeq	r0, r5, #0, 6
    452c:	0000a319 	andeq	sl, r0, r9, lsl r3
    4530:	b0230300 	eorlt	r0, r3, r0, lsl #6
    4534:	1c580701 	mrrcne	7, 0, r0, r8, cr1
    4538:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    453c:	00a31902 	adceq	r1, r3, r2, lsl #18
    4540:	23030000 	movwcs	r0, #12288	; 0x3000
    4544:	c30701b4 	movwgt	r0, #29108	; 0x71b4
    4548:	03000007 	movweq	r0, #7
    454c:	841a024c 	ldrhi	r0, [sl], #-588	; 0xfffffdb4
    4550:	03000004 	movweq	r0, #4
    4554:	0701b823 	streq	fp, [r1, -r3, lsr #16]
    4558:	00001d17 	andeq	r1, r0, r7, lsl sp
    455c:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
    4560:	000000a3 	andeq	r0, r0, r3, lsr #1
    4564:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    4568:	001b1907 	andseq	r1, fp, r7, lsl #18
    456c:	02520300 	subseq	r0, r2, #0, 6
    4570:	0000a319 	andeq	sl, r0, r9, lsl r3
    4574:	c0230300 	eorgt	r0, r3, r0, lsl #6
    4578:	1a960701 	bne	fe586184 <__RAM_segment_used_end__+0xc6486184>
    457c:	55030000 	strpl	r0, [r3, #-0]
    4580:	00a31902 	adceq	r1, r3, r2, lsl #18
    4584:	23030000 	movwcs	r0, #12288	; 0x3000
    4588:	ec0701c4 	stfs	f0, [r7], {196}	; 0xc4
    458c:	0300001b 	movweq	r0, #27
    4590:	a3190259 	tstge	r9, #-1879048187	; 0x90000005
    4594:	03000000 	movweq	r0, #0
    4598:	0701c823 	streq	ip, [r1, -r3, lsr #16]
    459c:	000009c4 	andeq	r0, r0, r4, asr #19
    45a0:	1a025d03 	bne	9b9b4 <SYSTICK_CYCLES+0x72975>
    45a4:	00000076 	andeq	r0, r0, r6, ror r0
    45a8:	01cc2303 	biceq	r2, ip, r3, lsl #6
    45ac:	00048107 	andeq	r8, r4, r7, lsl #2
    45b0:	02780300 	rsbseq	r0, r8, #0, 6
    45b4:	0000a319 	andeq	sl, r0, r9, lsl r3
    45b8:	d0230300 	eorle	r0, r3, r0, lsl #6
    45bc:	056d0701 	strbeq	r0, [sp, #-1793]!	; 0xfffff8ff
    45c0:	7d030000 	stcvc	0, cr0, [r3, #-0]
    45c4:	00a31902 	adceq	r1, r3, r2, lsl #18
    45c8:	23030000 	movwcs	r0, #12288	; 0x3000
    45cc:	0a0001d4 	beq	4d24 <_Min_Stack_Size+0x3d24>
    45d0:	00015f04 	andeq	r5, r1, r4, lsl #30
    45d4:	9b010800 	blls	465dc <SYSTICK_CYCLES+0x1d59d>
    45d8:	09000004 	stmdbeq	r0, {r2}
    45dc:	00000484 	andeq	r0, r0, r4, lsl #9
    45e0:	0000a309 	andeq	sl, r0, r9, lsl #6
    45e4:	040a0000 	streq	r0, [sl], #-0
    45e8:	0000048a 	andeq	r0, r0, sl, lsl #9
    45ec:	0007b306 	andeq	fp, r7, r6, lsl #6
    45f0:	7e033400 	cfcpysvc	mvf3, mvf3
    45f4:	05801003 	streq	r1, [r0, #3]
    45f8:	8d070000 	stchi	0, cr0, [r7, #-0]
    45fc:	03000001 	movweq	r0, #1
    4600:	a3190382 	tstge	r9, #134217730	; 0x8000002
    4604:	02000000 	andeq	r0, r0, #0
    4608:	97070023 	strls	r0, [r7, -r3, lsr #32]
    460c:	03000008 	movweq	r0, #8
    4610:	591a0385 	ldmdbpl	sl, {r0, r2, r7, r8, r9}
    4614:	02000001 	andeq	r0, r0, #1
    4618:	fc070423 	stc2	4, cr0, [r7], {35}	; 0x23
    461c:	03000006 	movweq	r0, #6
    4620:	97190388 	ldrls	r0, [r9, -r8, lsl #7]
    4624:	02000000 	andeq	r0, r0, #0
    4628:	cb070823 	blgt	1c66bc <__RAM_SIZE+0xc66bc>
    462c:	03000004 	movweq	r0, #4
    4630:	8b1a038c 	blhi	685468 <__RAM_SIZE+0x585468>
    4634:	02000006 	andeq	r0, r0, #6
    4638:	62070c23 	andvs	r0, r7, #8960	; 0x2300
    463c:	03000001 	movweq	r0, #1
    4640:	97190390 			; <UNDEFINED> instruction: 0x97190390
    4644:	02000000 	andeq	r0, r0, #0
    4648:	21071023 	tstcs	r7, r3, lsr #32
    464c:	03000001 	movweq	r0, #1
    4650:	97190393 			; <UNDEFINED> instruction: 0x97190393
    4654:	02000000 	andeq	r0, r0, #0
    4658:	cd071423 	cfstrsgt	mvf1, [r7, #-140]	; 0xffffff74
    465c:	03000008 	movweq	r0, #8
    4660:	841a0398 	ldrhi	r0, [sl], #-920	; 0xfffffc68
    4664:	02000004 	andeq	r0, r0, #4
    4668:	e3071823 	movw	r1, #30755	; 0x7823
    466c:	03000006 	movweq	r0, #6
    4670:	97190399 			; <UNDEFINED> instruction: 0x97190399
    4674:	02000000 	andeq	r0, r0, #0
    4678:	d3071c23 	movwle	r1, #31779	; 0x7c23
    467c:	03000005 	movweq	r0, #5
    4680:	801a039d 	mulshi	sl, sp, r3
    4684:	02000005 	andeq	r0, r0, #5
    4688:	a0072023 	andge	r2, r7, r3, lsr #32
    468c:	03000006 	movweq	r0, #6
    4690:	801a039e 	mulshi	sl, lr, r3
    4694:	02000005 	andeq	r0, r0, #5
    4698:	d0072423 	andle	r2, r7, r3, lsr #8
    469c:	03000001 	movweq	r0, #1
    46a0:	971903a2 	ldrls	r0, [r9, -r2, lsr #7]
    46a4:	02000000 	andeq	r0, r0, #0
    46a8:	e0072823 	and	r2, r7, r3, lsr #16
    46ac:	03000009 	movweq	r0, #9
    46b0:	801a03a6 	andshi	r0, sl, r6, lsr #7
    46b4:	02000005 	andeq	r0, r0, #5
    46b8:	25072c23 	strcs	r2, [r7, #-3107]	; 0xfffff3dd
    46bc:	03000004 	movweq	r0, #4
    46c0:	801a03a7 	andshi	r0, sl, r7, lsr #7
    46c4:	02000005 	andeq	r0, r0, #5
    46c8:	0a003023 	beq	1075c <_Min_Stack_Size+0xf75c>
    46cc:	0004a104 	andeq	sl, r4, r4, lsl #2
    46d0:	08ef0b00 	stmiaeq	pc!, {r8, r9, fp}^	; <UNPREDICTABLE>
    46d4:	86030000 	strhi	r0, [r3], -r0
    46d8:	015f0302 	cmpeq	pc, r2, lsl #6
    46dc:	040a0000 	streq	r0, [sl], #-0
    46e0:	0000008b 	andeq	r0, r0, fp, lsl #1
    46e4:	00046006 	andeq	r6, r4, r6
    46e8:	d9033400 	stmdble	r3, {sl, ip, sp}
    46ec:	06781002 	ldrbteq	r1, [r8], -r2
    46f0:	01070000 	mrseq	r0, (UNDEF: 7)
    46f4:	03000004 	movweq	r0, #4
    46f8:	a31902dd 	tstge	r9, #-805306355	; 0xd000000d
    46fc:	02000000 	andeq	r0, r0, #0
    4700:	74070023 	strvc	r0, [r7], #-35	; 0xffffffdd
    4704:	03000003 	movweq	r0, #3
    4708:	591a02e0 	ldmdbpl	sl, {r5, r6, r7, r9}
    470c:	02000001 	andeq	r0, r0, #1
    4710:	70070423 	andvc	r0, r7, r3, lsr #8
    4714:	03000007 	movweq	r0, #7
    4718:	a31902e3 	tstge	r9, #805306382	; 0x3000000e
    471c:	02000000 	andeq	r0, r0, #0
    4720:	b6070823 	strlt	r0, [r7], -r3, lsr #16
    4724:	03000008 	movweq	r0, #8
    4728:	971902e6 	ldrls	r0, [r9, -r6, ror #5]
    472c:	02000000 	andeq	r0, r0, #0
    4730:	0b070c23 	bleq	1c77c4 <__RAM_SIZE+0xc77c4>
    4734:	03000008 	movweq	r0, #8
    4738:	931a02e9 	tstls	sl, #-1879048178	; 0x9000000e
    473c:	02000005 	andeq	r0, r0, #5
    4740:	13071023 	movwne	r1, #28707	; 0x7023
    4744:	03000011 	movweq	r0, #17
    4748:	931a02ed 	tstls	sl, #-805306354	; 0xd000000e
    474c:	02000005 	andeq	r0, r0, #5
    4750:	28071423 	stmdacs	r7, {r0, r1, r5, sl, ip}
    4754:	03000005 	movweq	r0, #5
    4758:	931a02f0 	tstls	sl, #240, 4
    475c:	02000005 	andeq	r0, r0, #5
    4760:	06071823 	streq	r1, [r7], -r3, lsr #16
    4764:	03000003 	movweq	r0, #3
    4768:	a31902f3 	tstge	r9, #805306383	; 0x3000000f
    476c:	02000000 	andeq	r0, r0, #0
    4770:	8d071c23 	stchi	12, cr1, [r7, #-140]	; 0xffffff74
    4774:	03000009 	movweq	r0, #9
    4778:	841a02f9 	ldrhi	r0, [sl], #-761	; 0xfffffd07
    477c:	02000004 	andeq	r0, r0, #4
    4780:	ae072023 	cdpge	0, 0, cr2, cr7, cr3, {1}
    4784:	03000004 	movweq	r0, #4
    4788:	841a02fe 	ldrhi	r0, [sl], #-766	; 0xfffffd02
    478c:	02000004 	andeq	r0, r0, #4
    4790:	0b072423 	bleq	1cd824 <__RAM_SIZE+0xcd824>
    4794:	03000005 	movweq	r0, #5
    4798:	971902ff 			; <UNDEFINED> instruction: 0x971902ff
    479c:	02000000 	andeq	r0, r0, #0
    47a0:	a7072823 	strge	r2, [r7, -r3, lsr #16]
    47a4:	03000002 	movweq	r0, #2
    47a8:	781a0303 	ldmdavc	sl, {r0, r1, r8, r9}
    47ac:	02000006 	andeq	r0, r0, #6
    47b0:	79072c23 	stmdbvc	r7, {r0, r1, r5, sl, fp, sp}
    47b4:	03000008 	movweq	r0, #8
    47b8:	781a0304 	ldmdavc	sl, {r2, r8, r9}
    47bc:	02000006 	andeq	r0, r0, #6
    47c0:	0a003023 	beq	10854 <_Min_Stack_Size+0xf854>
    47c4:	00059904 	andeq	r9, r5, r4, lsl #18
    47c8:	04740b00 	ldrbteq	r0, [r4], #-2816	; 0xfffff500
    47cc:	23030000 	movwcs	r0, #12288	; 0x3000
    47d0:	05990303 	ldreq	r0, [r9, #771]	; 0x303
    47d4:	040a0000 	streq	r0, [sl], #-0
    47d8:	00000586 	andeq	r0, r0, r6, lsl #11
    47dc:	067e040a 	ldrbteq	r0, [lr], -sl, lsl #8
    47e0:	010c0000 	mrseq	r0, (UNDEF: 12)
    47e4:	000011a6 	andeq	r1, r0, r6, lsr #3
    47e8:	01074d01 	tsteq	r7, r1, lsl #26
    47ec:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    47f0:	10001bf4 	strdne	r1, [r0], -r4
    47f4:	00002abf 			; <UNDEFINED> instruction: 0x00002abf
    47f8:	00073c01 	andeq	r3, r7, r1, lsl #24
    47fc:	19790d00 	ldmdbne	r9!, {r8, sl, fp}^
    4800:	4d010000 	stcmi	0, cr0, [r1, #-0]
    4804:	00068b28 	andeq	r8, r6, r8, lsr #22
    4808:	002ae700 	eoreq	lr, sl, r0, lsl #14
    480c:	002adf00 	eoreq	sp, sl, r0, lsl #30
    4810:	048b0d00 	streq	r0, [fp], #3328	; 0xd00
    4814:	4d010000 	stcmi	0, cr0, [r1, #-0]
    4818:	0000a33a 	andeq	sl, r0, sl, lsr r3
    481c:	002b2900 	eoreq	r2, fp, r0, lsl #18
    4820:	002b2100 	eoreq	r2, fp, r0, lsl #2
    4824:	0efd0e00 	cdpeq	14, 15, cr0, cr13, cr0, {0}
    4828:	54010000 	strpl	r0, [r1], #-0
    482c:	00069116 	andeq	r9, r6, r6, lsl r1
    4830:	002b6700 	eoreq	r6, fp, r0, lsl #14
    4834:	002b6300 	eoreq	r6, fp, r0, lsl #6
    4838:	18be0e00 	ldmne	lr!, {r9, sl, fp}
    483c:	55010000 	strpl	r0, [r1, #-0]
    4840:	00009715 	andeq	r9, r0, r5, lsl r7
    4844:	002b8b00 	eoreq	r8, fp, r0, lsl #22
    4848:	002b8500 	eoreq	r8, fp, r0, lsl #10
    484c:	10070e00 	andne	r0, r7, r0, lsl #28
    4850:	56010000 	strpl	r0, [r1], -r0
    4854:	00068b16 	andeq	r8, r6, r6, lsl fp
    4858:	002bb700 	eoreq	fp, fp, r0, lsl #14
    485c:	002bb500 	eoreq	fp, fp, r0, lsl #10
    4860:	10130e00 	andsne	r0, r3, r0, lsl #28
    4864:	57010000 	strpl	r0, [r1, -r0]
    4868:	00068b16 	andeq	r8, r6, r6, lsl fp
    486c:	002bcc00 	eoreq	ip, fp, r0, lsl #24
    4870:	002bca00 	eoreq	ip, fp, r0, lsl #20
    4874:	1bf20f00 	blne	ffc8847c <__RAM_segment_used_end__+0xc7b8847c>
    4878:	073c1000 	ldreq	r1, [ip, -r0]!
    487c:	01100000 	tsteq	r0, r0
    4880:	01f30350 	mvnseq	r0, r0, asr r3
    4884:	11000050 	qaddne	r0, r0, r0
    4888:	10640101 	rsbne	r0, r4, r1, lsl #2
    488c:	10640000 	rsbne	r0, r4, r0
    4890:	1e040000 	cdpne	0, 0, cr0, cr4, cr0, {0}
    4894:	b1000d01 	tstlt	r0, r1, lsl #26
    4898:	02000008 	andeq	r0, r0, #8
    489c:	000c3b00 	andeq	r3, ip, r0, lsl #22
    48a0:	3d010400 	cfstrscc	mvf0, [r1, #-0]
    48a4:	0c000000 	stceq	0, cr0, [r0], {-0}
    48a8:	000011c5 	andeq	r1, r0, r5, asr #3
    48ac:	0000065c 	andeq	r0, r0, ip, asr r6
    48b0:	00000248 	andeq	r0, r0, r8, asr #4
	...
    48bc:	00002034 	andeq	r2, r0, r4, lsr r0
    48c0:	39070402 	stmdbcc	r7, {r1, sl}
    48c4:	03000002 	movweq	r0, #2
    48c8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    48cc:	08020074 	stmdaeq	r2, {r2, r4, r5, r6}
    48d0:	0004e805 	andeq	lr, r4, r5, lsl #16
    48d4:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    48d8:	0000063e 	andeq	r0, r0, lr, lsr r6
    48dc:	6d060102 	stfvss	f0, [r6, #-8]
    48e0:	02000008 	andeq	r0, r0, #8
    48e4:	086b0801 	stmdaeq	fp!, {r0, fp}^
    48e8:	02020000 	andeq	r0, r2, #0
    48ec:	0006cf05 	andeq	ip, r6, r5, lsl #30
    48f0:	07020200 	streq	r0, [r2, -r0, lsl #4]
    48f4:	00000939 	andeq	r0, r0, r9, lsr r9
    48f8:	ed050402 	cfstrs	mvf0, [r5, #-8]
    48fc:	02000004 	andeq	r0, r0, #4
    4900:	02340704 	eorseq	r0, r4, #4, 14	; 0x100000
    4904:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    4908:	00022f07 	andeq	r2, r2, r7, lsl #30
    490c:	02040400 	andeq	r0, r4, #0, 8
    4910:	08740801 	ldmdaeq	r4!, {r0, fp}^
    4914:	fa050000 	blx	14491c <__RAM_SIZE+0x4491c>
    4918:	02000008 	andeq	r0, r0, #8
    491c:	00783173 	rsbseq	r3, r8, r3, ror r1
    4920:	f9050000 			; <UNDEFINED> instruction: 0xf9050000
    4924:	02000008 	andeq	r0, r0, #8
    4928:	004c3174 	subeq	r3, ip, r4, ror r1
    492c:	9a050000 	bls	144934 <__RAM_SIZE+0x44934>
    4930:	02000007 	andeq	r0, r0, #7
    4934:	00293176 	eoreq	r3, r9, r6, ror r1
    4938:	2c050000 	stccs	0, cr0, [r5], {-0}
    493c:	02000007 	andeq	r0, r0, #7
    4940:	00683178 	rsbeq	r3, r8, r8, ror r1
    4944:	3b060000 	blcc	18494c <__RAM_SIZE+0x8494c>
    4948:	1c000005 	stcne	0, cr0, [r0], {5}
    494c:	10018203 	andne	r8, r1, r3, lsl #4
    4950:	0000012e 	andeq	r0, r0, lr, lsr #2
    4954:	00082d07 	andeq	r2, r8, r7, lsl #26
    4958:	01860300 	orreq	r0, r6, r0, lsl #6
    495c:	0000a319 	andeq	sl, r0, r9, lsl r3
    4960:	00230200 	eoreq	r0, r3, r0, lsl #4
    4964:	0003a007 	andeq	sl, r3, r7
    4968:	01870300 	orreq	r0, r7, r0, lsl #6
    496c:	0000a319 	andeq	sl, r0, r9, lsl r3
    4970:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    4974:	00043d07 	andeq	r3, r4, r7, lsl #26
    4978:	018a0300 	orreq	r0, sl, r0, lsl #6
    497c:	00013a1b 	andeq	r3, r1, fp, lsl sl
    4980:	08230200 	stmdaeq	r3!, {r9}
    4984:	0001f207 	andeq	pc, r1, r7, lsl #4
    4988:	018b0300 	orreq	r0, fp, r0, lsl #6
    498c:	0000a319 	andeq	sl, r0, r9, lsl r3
    4990:	0c230200 	sfmeq	f0, 4, [r3], #-0
    4994:	00096f07 	andeq	r6, r9, r7, lsl #30
    4998:	01910300 	orrseq	r0, r1, r0, lsl #6
    499c:	0001401a 	andeq	r4, r1, sl, lsl r0
    49a0:	10230200 	eorne	r0, r3, r0, lsl #4
    49a4:	00001b07 	andeq	r1, r0, r7, lsl #22
    49a8:	01920300 	orrseq	r0, r2, r0, lsl #6
    49ac:	0001401a 	andeq	r4, r1, sl, lsl r0
    49b0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    49b4:	00060907 	andeq	r0, r6, r7, lsl #18
    49b8:	01960300 	orrseq	r0, r6, r0, lsl #6
    49bc:	0001461b 	andeq	r4, r1, fp, lsl r6
    49c0:	18230200 	stmdane	r3!, {r9}
    49c4:	3a010800 	bcc	469cc <SYSTICK_CYCLES+0x1d98d>
    49c8:	09000001 	stmdbeq	r0, {r0}
    49cc:	000000a3 	andeq	r0, r0, r3, lsr #1
    49d0:	2e040a00 	vmlacs.f32	s0, s8, s0
    49d4:	0a000001 	beq	49e0 <_Min_Stack_Size+0x39e0>
    49d8:	0000af04 	andeq	sl, r0, r4, lsl #30
    49dc:	40040a00 	andmi	r0, r4, r0, lsl #20
    49e0:	0b000001 	bleq	49ec <_Min_Stack_Size+0x39ec>
    49e4:	0000064a 	andeq	r0, r0, sl, asr #12
    49e8:	03019b03 	movweq	r9, #6915	; 0x1b03
    49ec:	000000af 	andeq	r0, r0, pc, lsr #1
    49f0:	007f040a 	rsbseq	r0, pc, sl, lsl #8
    49f4:	4b060000 	blmi	1849fc <__RAM_SIZE+0x849fc>
    49f8:	d8000003 	stmdale	r0, {r0, r1}
    49fc:	1001d603 	andne	sp, r1, r3, lsl #12
    4a00:	00000484 	andeq	r0, r0, r4, lsl #9
    4a04:	00092c07 	andeq	r2, r9, r7, lsl #24
    4a08:	01dd0300 	bicseq	r0, sp, r0, lsl #6
    4a0c:	0000a319 	andeq	sl, r0, r9, lsl r3
    4a10:	00230200 	eoreq	r0, r3, r0, lsl #4
    4a14:	00079f07 	andeq	r9, r7, r7, lsl #30
    4a18:	01de0300 	bicseq	r0, lr, r0, lsl #6
    4a1c:	0000a319 	andeq	sl, r0, r9, lsl r3
    4a20:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    4a24:	0001bc07 	andeq	fp, r1, r7, lsl #24
    4a28:	01df0300 	bicseq	r0, pc, r0, lsl #6
    4a2c:	0000761a 	andeq	r7, r0, sl, lsl r6
    4a30:	08230200 	stmdaeq	r3!, {r9}
    4a34:	00091607 	andeq	r1, r9, r7, lsl #12
    4a38:	01e00300 	mvneq	r0, r0, lsl #6
    4a3c:	0000761a 	andeq	r7, r0, sl, lsl r6
    4a40:	0c230200 	sfmeq	f0, 4, [r3], #-0
    4a44:	00041107 	andeq	r1, r4, r7, lsl #2
    4a48:	01e10300 	mvneq	r0, r0, lsl #6
    4a4c:	0000761a 	andeq	r7, r0, sl, lsl r6
    4a50:	10230200 	eorne	r0, r3, r0, lsl #4
    4a54:	00095a07 	andeq	r5, r9, r7, lsl #20
    4a58:	01e20300 	mvneq	r0, r0, lsl #6
    4a5c:	0000a319 	andeq	sl, r0, r9, lsl r3
    4a60:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    4a64:	0021e207 	eoreq	lr, r1, r7, lsl #4
    4a68:	01e30300 	mvneq	r0, r0, lsl #6
    4a6c:	0000a319 	andeq	sl, r0, r9, lsl r3
    4a70:	18230200 	stmdane	r3!, {r9}
    4a74:	00062507 	andeq	r2, r6, r7, lsl #10
    4a78:	01e40300 	mvneq	r0, r0, lsl #6
    4a7c:	0000a319 	andeq	sl, r0, r9, lsl r3
    4a80:	1c230200 	sfmne	f0, 4, [r3], #-0
    4a84:	0006ba07 	andeq	fp, r6, r7, lsl #20
    4a88:	01e80300 	mvneq	r0, r0, lsl #6
    4a8c:	0004841a 	andeq	r8, r4, sl, lsl r4
    4a90:	20230200 	eorcs	r0, r3, r0, lsl #4
    4a94:	00019907 	andeq	r9, r1, r7, lsl #18
    4a98:	01e90300 	mvneq	r0, r0, lsl #6
    4a9c:	0004841a 	andeq	r8, r4, sl, lsl r4
    4aa0:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    4aa4:	0005b107 	andeq	fp, r5, r7, lsl #2
    4aa8:	01f10300 	mvnseq	r0, r0, lsl #6
    4aac:	0001591a 	andeq	r5, r1, sl, lsl r9
    4ab0:	28230200 	stmdacs	r3!, {r9}
    4ab4:	0002d907 	andeq	sp, r2, r7, lsl #18
    4ab8:	01f20300 	mvnseq	r0, r0, lsl #6
    4abc:	00009719 	andeq	r9, r0, r9, lsl r7
    4ac0:	2c230200 	sfmcs	f0, 4, [r3], #-0
    4ac4:	00024607 	andeq	r4, r2, r7, lsl #12
    4ac8:	01f30300 	mvnseq	r0, r0, lsl #6
    4acc:	00009719 	andeq	r9, r0, r9, lsl r7
    4ad0:	30230200 	eorcc	r0, r3, r0, lsl #4
    4ad4:	00017307 	andeq	r7, r1, r7, lsl #6
    4ad8:	01f40300 	mvnseq	r0, r0, lsl #6
    4adc:	00009719 	andeq	r9, r0, r9, lsl r7
    4ae0:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    4ae4:	00074b07 	andeq	r4, r7, r7, lsl #22
    4ae8:	01f50300 	mvnseq	r0, r0, lsl #6
    4aec:	00009719 	andeq	r9, r0, r9, lsl r7
    4af0:	38230200 	stmdacc	r3!, {r9}
    4af4:	0000eb07 	andeq	lr, r0, r7, lsl #22
    4af8:	01f60300 	mvnseq	r0, r0, lsl #6
    4afc:	00009719 	andeq	r9, r0, r9, lsl r7
    4b00:	3c230200 	sfmcc	f0, 4, [r3], #-0
    4b04:	00035c07 	andeq	r5, r3, r7, lsl #24
    4b08:	01fb0300 	mvnseq	r0, r0, lsl #6
    4b0c:	00049b1b 	andeq	r9, r4, fp, lsl fp
    4b10:	40230200 	eormi	r0, r3, r0, lsl #4
    4b14:	00015207 	andeq	r5, r1, r7, lsl #4
    4b18:	02030300 	andeq	r0, r3, #0, 6
    4b1c:	00013a1b 	andeq	r3, r1, fp, lsl sl
    4b20:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    4b24:	00010707 	andeq	r0, r1, r7, lsl #14
    4b28:	02040300 	andeq	r0, r4, #0, 6
    4b2c:	0000a319 	andeq	sl, r0, r9, lsl r3
    4b30:	48230200 	stmdami	r3!, {r9}
    4b34:	00033b07 	andeq	r3, r3, r7, lsl #22
    4b38:	02080300 	andeq	r0, r8, #0, 6
    4b3c:	00014c19 	andeq	r4, r1, r9, lsl ip
    4b40:	4c230200 	sfmmi	f0, 4, [r3], #-0
    4b44:	0002ec07 	andeq	lr, r2, r7, lsl #24
    4b48:	020e0300 	andeq	r0, lr, #0, 6
    4b4c:	00049b1b 	andeq	r9, r4, fp, lsl fp
    4b50:	68230200 	stmdavs	r3!, {r9}
    4b54:	0005e907 	andeq	lr, r5, r7, lsl #18
    4b58:	020f0300 	andeq	r0, pc, #0, 6
    4b5c:	0000761a 	andeq	r7, r0, sl, lsl r6
    4b60:	6c230200 	sfmvs	f0, 4, [r3], #-0
    4b64:	00073207 	andeq	r3, r7, r7, lsl #4
    4b68:	02110300 	andseq	r0, r1, #0, 6
    4b6c:	0004841a 	andeq	r8, r4, sl, lsl r4
    4b70:	70230200 	eorvc	r0, r3, r0, lsl #4
    4b74:	00021207 	andeq	r1, r2, r7, lsl #4
    4b78:	02120300 	andseq	r0, r2, #0, 6
    4b7c:	0004841a 	andeq	r8, r4, sl, lsl r4
    4b80:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    4b84:	00071507 	andeq	r1, r7, r7, lsl #10
    4b88:	02130300 	andseq	r0, r3, #0, 6
    4b8c:	0000a319 	andeq	sl, r0, r9, lsl r3
    4b90:	78230200 	stmdavc	r3!, {r9}
    4b94:	0003c607 	andeq	ip, r3, r7, lsl #12
    4b98:	02140300 	andseq	r0, r4, #0, 6
    4b9c:	0000761a 	andeq	r7, r0, sl, lsl r6
    4ba0:	7c230200 	sfmvc	f0, 4, [r3], #-0
    4ba4:	00055407 	andeq	r5, r5, r7, lsl #8
    4ba8:	02150300 	andseq	r0, r5, #0, 6
    4bac:	00009719 	andeq	r9, r0, r9, lsl r7
    4bb0:	80230300 	eorhi	r0, r3, r0, lsl #6
    4bb4:	03e80701 	mvneq	r0, #262144	; 0x40000
    4bb8:	16030000 	strne	r0, [r3], -r0
    4bbc:	00971902 	addseq	r1, r7, r2, lsl #18
    4bc0:	23030000 	movwcs	r0, #12288	; 0x3000
    4bc4:	ff070184 			; <UNDEFINED> instruction: 0xff070184
    4bc8:	03000008 	movweq	r0, #8
    4bcc:	841a021f 	ldrhi	r0, [sl], #-543	; 0xfffffde1
    4bd0:	03000004 	movweq	r0, #4
    4bd4:	07018823 	streq	r8, [r1, -r3, lsr #16]
    4bd8:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    4bdc:	1a022003 	bne	8cbf0 <SYSTICK_CYCLES+0x63bb1>
    4be0:	00000484 	andeq	r0, r0, r4, lsl #9
    4be4:	018c2303 	orreq	r2, ip, r3, lsl #6
    4be8:	0002c107 	andeq	ip, r2, r7, lsl #2
    4bec:	022e0300 	eoreq	r0, lr, #0, 6
    4bf0:	00009719 	andeq	r9, r0, r9, lsl r7
    4bf4:	90230300 	eorls	r0, r3, r0, lsl #6
    4bf8:	02560701 	subseq	r0, r6, #262144	; 0x40000
    4bfc:	2f030000 	svccs	0x00030000
    4c00:	00971902 	addseq	r1, r7, r2, lsl #18
    4c04:	23030000 	movwcs	r0, #12288	; 0x3000
    4c08:	20070194 	mulcs	r7, r4, r1
    4c0c:	03000003 	movweq	r0, #3
    4c10:	97190230 			; <UNDEFINED> instruction: 0x97190230
    4c14:	03000000 	movweq	r0, #0
    4c18:	07019823 	streq	r9, [r1, -r3, lsr #16]
    4c1c:	00000277 	andeq	r0, r0, r7, ror r2
    4c20:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
    4c24:	00000097 	muleq	r0, r7, r0
    4c28:	019c2303 	orrseq	r2, ip, r3, lsl #6
    4c2c:	00000007 	andeq	r0, r0, r7
    4c30:	02350300 	eorseq	r0, r5, #0, 6
    4c34:	0005801a 	andeq	r8, r5, sl, lsl r0
    4c38:	a0230300 	eorge	r0, r3, r0, lsl #6
    4c3c:	1bc80701 	blne	ff206848 <__RAM_segment_used_end__+0xc7106848>
    4c40:	3a030000 	bcc	c4c48 <SYSTICK_CYCLES+0x9bc09>
    4c44:	00a31902 	adceq	r1, r3, r2, lsl #18
    4c48:	23030000 	movwcs	r0, #12288	; 0x3000
    4c4c:	880701a4 	stmdahi	r7, {r2, r5, r7, r8}
    4c50:	0300001c 	movweq	r0, #28
    4c54:	a319023d 	tstge	r9, #-805306365	; 0xd0000003
    4c58:	03000000 	movweq	r0, #0
    4c5c:	0701a823 	streq	sl, [r1, -r3, lsr #16]
    4c60:	00001b41 	andeq	r1, r0, r1, asr #22
    4c64:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
    4c68:	000000a3 	andeq	r0, r0, r3, lsr #1
    4c6c:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    4c70:	001d3f07 	andseq	r3, sp, r7, lsl #30
    4c74:	02450300 	subeq	r0, r5, #0, 6
    4c78:	0000a319 	andeq	sl, r0, r9, lsl r3
    4c7c:	b0230300 	eorlt	r0, r3, r0, lsl #6
    4c80:	1c580701 	mrrcne	7, 0, r0, r8, cr1
    4c84:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    4c88:	00a31902 	adceq	r1, r3, r2, lsl #18
    4c8c:	23030000 	movwcs	r0, #12288	; 0x3000
    4c90:	c30701b4 	movwgt	r0, #29108	; 0x71b4
    4c94:	03000007 	movweq	r0, #7
    4c98:	841a024c 	ldrhi	r0, [sl], #-588	; 0xfffffdb4
    4c9c:	03000004 	movweq	r0, #4
    4ca0:	0701b823 	streq	fp, [r1, -r3, lsr #16]
    4ca4:	00001d17 	andeq	r1, r0, r7, lsl sp
    4ca8:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
    4cac:	000000a3 	andeq	r0, r0, r3, lsr #1
    4cb0:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    4cb4:	001b1907 	andseq	r1, fp, r7, lsl #18
    4cb8:	02520300 	subseq	r0, r2, #0, 6
    4cbc:	0000a319 	andeq	sl, r0, r9, lsl r3
    4cc0:	c0230300 	eorgt	r0, r3, r0, lsl #6
    4cc4:	1a960701 	bne	fe5868d0 <__RAM_segment_used_end__+0xc64868d0>
    4cc8:	55030000 	strpl	r0, [r3, #-0]
    4ccc:	00a31902 	adceq	r1, r3, r2, lsl #18
    4cd0:	23030000 	movwcs	r0, #12288	; 0x3000
    4cd4:	ec0701c4 	stfs	f0, [r7], {196}	; 0xc4
    4cd8:	0300001b 	movweq	r0, #27
    4cdc:	a3190259 	tstge	r9, #-1879048187	; 0x90000005
    4ce0:	03000000 	movweq	r0, #0
    4ce4:	0701c823 	streq	ip, [r1, -r3, lsr #16]
    4ce8:	000009c4 	andeq	r0, r0, r4, asr #19
    4cec:	1a025d03 	bne	9c100 <SYSTICK_CYCLES+0x730c1>
    4cf0:	00000076 	andeq	r0, r0, r6, ror r0
    4cf4:	01cc2303 	biceq	r2, ip, r3, lsl #6
    4cf8:	00048107 	andeq	r8, r4, r7, lsl #2
    4cfc:	02780300 	rsbseq	r0, r8, #0, 6
    4d00:	0000a319 	andeq	sl, r0, r9, lsl r3
    4d04:	d0230300 	eorle	r0, r3, r0, lsl #6
    4d08:	056d0701 	strbeq	r0, [sp, #-1793]!	; 0xfffff8ff
    4d0c:	7d030000 	stcvc	0, cr0, [r3, #-0]
    4d10:	00a31902 	adceq	r1, r3, r2, lsl #18
    4d14:	23030000 	movwcs	r0, #12288	; 0x3000
    4d18:	0a0001d4 	beq	5470 <_Min_Stack_Size+0x4470>
    4d1c:	00015f04 	andeq	r5, r1, r4, lsl #30
    4d20:	9b010800 	blls	46d28 <SYSTICK_CYCLES+0x1dce9>
    4d24:	09000004 	stmdbeq	r0, {r2}
    4d28:	00000484 	andeq	r0, r0, r4, lsl #9
    4d2c:	0000a309 	andeq	sl, r0, r9, lsl #6
    4d30:	040a0000 	streq	r0, [sl], #-0
    4d34:	0000048a 	andeq	r0, r0, sl, lsl #9
    4d38:	0007b306 	andeq	fp, r7, r6, lsl #6
    4d3c:	7e033400 	cfcpysvc	mvf3, mvf3
    4d40:	05801003 	streq	r1, [r0, #3]
    4d44:	8d070000 	stchi	0, cr0, [r7, #-0]
    4d48:	03000001 	movweq	r0, #1
    4d4c:	a3190382 	tstge	r9, #134217730	; 0x8000002
    4d50:	02000000 	andeq	r0, r0, #0
    4d54:	97070023 	strls	r0, [r7, -r3, lsr #32]
    4d58:	03000008 	movweq	r0, #8
    4d5c:	591a0385 	ldmdbpl	sl, {r0, r2, r7, r8, r9}
    4d60:	02000001 	andeq	r0, r0, #1
    4d64:	fc070423 	stc2	4, cr0, [r7], {35}	; 0x23
    4d68:	03000006 	movweq	r0, #6
    4d6c:	97190388 	ldrls	r0, [r9, -r8, lsl #7]
    4d70:	02000000 	andeq	r0, r0, #0
    4d74:	cb070823 	blgt	1c6e08 <__RAM_SIZE+0xc6e08>
    4d78:	03000004 	movweq	r0, #4
    4d7c:	8b1a038c 	blhi	685bb4 <__RAM_SIZE+0x585bb4>
    4d80:	02000006 	andeq	r0, r0, #6
    4d84:	62070c23 	andvs	r0, r7, #8960	; 0x2300
    4d88:	03000001 	movweq	r0, #1
    4d8c:	97190390 			; <UNDEFINED> instruction: 0x97190390
    4d90:	02000000 	andeq	r0, r0, #0
    4d94:	21071023 	tstcs	r7, r3, lsr #32
    4d98:	03000001 	movweq	r0, #1
    4d9c:	97190393 			; <UNDEFINED> instruction: 0x97190393
    4da0:	02000000 	andeq	r0, r0, #0
    4da4:	cd071423 	cfstrsgt	mvf1, [r7, #-140]	; 0xffffff74
    4da8:	03000008 	movweq	r0, #8
    4dac:	841a0398 	ldrhi	r0, [sl], #-920	; 0xfffffc68
    4db0:	02000004 	andeq	r0, r0, #4
    4db4:	e3071823 	movw	r1, #30755	; 0x7823
    4db8:	03000006 	movweq	r0, #6
    4dbc:	97190399 			; <UNDEFINED> instruction: 0x97190399
    4dc0:	02000000 	andeq	r0, r0, #0
    4dc4:	d3071c23 	movwle	r1, #31779	; 0x7c23
    4dc8:	03000005 	movweq	r0, #5
    4dcc:	801a039d 	mulshi	sl, sp, r3
    4dd0:	02000005 	andeq	r0, r0, #5
    4dd4:	a0072023 	andge	r2, r7, r3, lsr #32
    4dd8:	03000006 	movweq	r0, #6
    4ddc:	801a039e 	mulshi	sl, lr, r3
    4de0:	02000005 	andeq	r0, r0, #5
    4de4:	d0072423 	andle	r2, r7, r3, lsr #8
    4de8:	03000001 	movweq	r0, #1
    4dec:	971903a2 	ldrls	r0, [r9, -r2, lsr #7]
    4df0:	02000000 	andeq	r0, r0, #0
    4df4:	e0072823 	and	r2, r7, r3, lsr #16
    4df8:	03000009 	movweq	r0, #9
    4dfc:	801a03a6 	andshi	r0, sl, r6, lsr #7
    4e00:	02000005 	andeq	r0, r0, #5
    4e04:	25072c23 	strcs	r2, [r7, #-3107]	; 0xfffff3dd
    4e08:	03000004 	movweq	r0, #4
    4e0c:	801a03a7 	andshi	r0, sl, r7, lsr #7
    4e10:	02000005 	andeq	r0, r0, #5
    4e14:	0a003023 	beq	10ea8 <_Min_Stack_Size+0xfea8>
    4e18:	0004a104 	andeq	sl, r4, r4, lsl #2
    4e1c:	08ef0b00 	stmiaeq	pc!, {r8, r9, fp}^	; <UNPREDICTABLE>
    4e20:	86030000 	strhi	r0, [r3], -r0
    4e24:	015f0302 	cmpeq	pc, r2, lsl #6
    4e28:	040a0000 	streq	r0, [sl], #-0
    4e2c:	0000008b 	andeq	r0, r0, fp, lsl #1
    4e30:	00046006 	andeq	r6, r4, r6
    4e34:	d9033400 	stmdble	r3, {sl, ip, sp}
    4e38:	06781002 	ldrbteq	r1, [r8], -r2
    4e3c:	01070000 	mrseq	r0, (UNDEF: 7)
    4e40:	03000004 	movweq	r0, #4
    4e44:	a31902dd 	tstge	r9, #-805306355	; 0xd000000d
    4e48:	02000000 	andeq	r0, r0, #0
    4e4c:	74070023 	strvc	r0, [r7], #-35	; 0xffffffdd
    4e50:	03000003 	movweq	r0, #3
    4e54:	591a02e0 	ldmdbpl	sl, {r5, r6, r7, r9}
    4e58:	02000001 	andeq	r0, r0, #1
    4e5c:	70070423 	andvc	r0, r7, r3, lsr #8
    4e60:	03000007 	movweq	r0, #7
    4e64:	a31902e3 	tstge	r9, #805306382	; 0x3000000e
    4e68:	02000000 	andeq	r0, r0, #0
    4e6c:	b6070823 	strlt	r0, [r7], -r3, lsr #16
    4e70:	03000008 	movweq	r0, #8
    4e74:	971902e6 	ldrls	r0, [r9, -r6, ror #5]
    4e78:	02000000 	andeq	r0, r0, #0
    4e7c:	0b070c23 	bleq	1c7f10 <__RAM_SIZE+0xc7f10>
    4e80:	03000008 	movweq	r0, #8
    4e84:	931a02e9 	tstls	sl, #-1879048178	; 0x9000000e
    4e88:	02000005 	andeq	r0, r0, #5
    4e8c:	13071023 	movwne	r1, #28707	; 0x7023
    4e90:	03000011 	movweq	r0, #17
    4e94:	931a02ed 	tstls	sl, #-805306354	; 0xd000000e
    4e98:	02000005 	andeq	r0, r0, #5
    4e9c:	28071423 	stmdacs	r7, {r0, r1, r5, sl, ip}
    4ea0:	03000005 	movweq	r0, #5
    4ea4:	931a02f0 	tstls	sl, #240, 4
    4ea8:	02000005 	andeq	r0, r0, #5
    4eac:	06071823 	streq	r1, [r7], -r3, lsr #16
    4eb0:	03000003 	movweq	r0, #3
    4eb4:	a31902f3 	tstge	r9, #805306383	; 0x3000000f
    4eb8:	02000000 	andeq	r0, r0, #0
    4ebc:	8d071c23 	stchi	12, cr1, [r7, #-140]	; 0xffffff74
    4ec0:	03000009 	movweq	r0, #9
    4ec4:	841a02f9 	ldrhi	r0, [sl], #-761	; 0xfffffd07
    4ec8:	02000004 	andeq	r0, r0, #4
    4ecc:	ae072023 	cdpge	0, 0, cr2, cr7, cr3, {1}
    4ed0:	03000004 	movweq	r0, #4
    4ed4:	841a02fe 	ldrhi	r0, [sl], #-766	; 0xfffffd02
    4ed8:	02000004 	andeq	r0, r0, #4
    4edc:	0b072423 	bleq	1cdf70 <__RAM_SIZE+0xcdf70>
    4ee0:	03000005 	movweq	r0, #5
    4ee4:	971902ff 			; <UNDEFINED> instruction: 0x971902ff
    4ee8:	02000000 	andeq	r0, r0, #0
    4eec:	a7072823 	strge	r2, [r7, -r3, lsr #16]
    4ef0:	03000002 	movweq	r0, #2
    4ef4:	781a0303 	ldmdavc	sl, {r0, r1, r8, r9}
    4ef8:	02000006 	andeq	r0, r0, #6
    4efc:	79072c23 	stmdbvc	r7, {r0, r1, r5, sl, fp, sp}
    4f00:	03000008 	movweq	r0, #8
    4f04:	781a0304 	ldmdavc	sl, {r2, r8, r9}
    4f08:	02000006 	andeq	r0, r0, #6
    4f0c:	0a003023 	beq	10fa0 <_Min_Stack_Size+0xffa0>
    4f10:	00059904 	andeq	r9, r5, r4, lsl #18
    4f14:	04740b00 	ldrbteq	r0, [r4], #-2816	; 0xfffff500
    4f18:	23030000 	movwcs	r0, #12288	; 0x3000
    4f1c:	05990303 	ldreq	r0, [r9, #771]	; 0x303
    4f20:	040a0000 	streq	r0, [sl], #-0
    4f24:	00000586 	andeq	r0, r0, r6, lsl #11
    4f28:	00a3040a 	adceq	r0, r3, sl, lsl #8
    4f2c:	ff0c0000 			; <UNDEFINED> instruction: 0xff0c0000
    4f30:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    4f34:	06a5257b 			; <UNDEFINED> instruction: 0x06a5257b
    4f38:	01010000 	mrseq	r0, (UNDEF: 1)
    4f3c:	067e040a 	ldrbteq	r0, [lr], -sl, lsl #8
    4f40:	3f0c0000 	svccc	0x000c0000
    4f44:	04000012 	streq	r0, [r0], #-18	; 0xffffffee
    4f48:	00a32580 	adceq	r2, r3, r0, lsl #11
    4f4c:	01010000 	mrseq	r0, (UNDEF: 1)
    4f50:	125b010d 	subsne	r0, fp, #1073741827	; 0x40000003
    4f54:	4b010000 	blmi	44f5c <SYSTICK_CYCLES+0x1bf1d>
    4f58:	00970107 	addseq	r0, r7, r7, lsl #2
    4f5c:	1bf40000 	blne	ffd04f64 <__RAM_segment_used_end__+0xc7c04f64>
    4f60:	1c7c1000 	ldclne	0, cr1, [ip], #-0
    4f64:	2bdf1000 	blcs	ff7c8f6c <__RAM_segment_used_end__+0xc76c8f6c>
    4f68:	42010000 	andmi	r0, r1, #0
    4f6c:	0e000008 	cdpeq	0, 0, cr0, cr0, cr8, {0}
    4f70:	00000efd 	strdeq	r0, [r0], -sp
    4f74:	a52a4b01 	strge	r4, [sl, #-2817]!	; 0xfffff4ff
    4f78:	03000006 	movweq	r0, #6
    4f7c:	ff00002c 			; <UNDEFINED> instruction: 0xff00002c
    4f80:	0e00002b 	cdpeq	0, 0, cr0, cr0, cr11, {1}
    4f84:	0000122c 	andeq	r1, r0, ip, lsr #4
    4f88:	593a4b01 	ldmdbpl	sl!, {r0, r8, r9, fp, lr}
    4f8c:	25000001 	strcs	r0, [r0, #-1]
    4f90:	2100002c 	tstcs	r0, ip, lsr #32
    4f94:	0e00002c 	cdpeq	0, 0, cr0, cr0, cr12, {1}
    4f98:	00000530 	andeq	r0, r0, r0, lsr r5
    4f9c:	764a4b01 	strbvc	r4, [sl], -r1, lsl #22
    4fa0:	47000000 	strmi	r0, [r0, -r0]
    4fa4:	4300002c 	movwmi	r0, #44	; 0x2c
    4fa8:	0e00002c 	cdpeq	0, 0, cr0, cr0, cr12, {1}
    4fac:	0000030e 	andeq	r0, r0, lr, lsl #6
    4fb0:	a35c4b01 	cmpge	ip, #1024	; 0x400
    4fb4:	6f000000 	svcvs	0x00000000
    4fb8:	6500002c 	strvs	r0, [r0, #-44]	; 0xffffffd4
    4fbc:	0f00002c 	svceq	0x0000002c
    4fc0:	00000eee 	andeq	r0, r0, lr, ror #29
    4fc4:	97014e01 	strls	r4, [r1, -r1, lsl #28]
    4fc8:	b6000000 	strlt	r0, [r0], -r0
    4fcc:	b400002c 	strlt	r0, [r0], #-44	; 0xffffffd4
    4fd0:	0f00002c 	svceq	0x0000002c
    4fd4:	00000ffd 	strdeq	r0, [r0], -sp
    4fd8:	93165001 	tstls	r6, #1
    4fdc:	d5000005 	strle	r0, [r0, #-5]
    4fe0:	c900002c 	stmdbgt	r0, {r2, r3, r5}
    4fe4:	0f00002c 	svceq	0x0000002c
    4fe8:	00001219 	andeq	r1, r0, r9, lsl r2
    4fec:	42175101 	andsmi	r5, r7, #1073741824	; 0x40000000
    4ff0:	29000008 	stmdbcs	r0, {r3}
    4ff4:	2300002d 	movwcs	r0, #45	; 0x2d
    4ff8:	0f00002d 	svceq	0x0000002d
    4ffc:	0000128f 	andeq	r1, r0, pc, lsl #5
    5000:	93165201 	tstls	r6, #268435456	; 0x10000000
    5004:	58000005 	stmdapl	r0, {r0, r2}
    5008:	5400002d 	strpl	r0, [r0], #-45	; 0xffffffd3
    500c:	0f00002d 	svceq	0x0000002d
    5010:	00001235 	andeq	r1, r0, r5, lsr r2
    5014:	a5165301 	ldrge	r5, [r6, #-769]	; 0xfffffcff
    5018:	78000006 	stmdavc	r0, {r1, r2}
    501c:	7600002d 	strvc	r0, [r0], -sp, lsr #32
    5020:	0f00002d 	svceq	0x0000002d
    5024:	00001270 	andeq	r1, r0, r0, ror r2
    5028:	a5165401 	ldrge	r5, [r6, #-1025]	; 0xfffffbff
    502c:	8d000006 	stchi	0, cr0, [r0, #-24]	; 0xffffffe8
    5030:	8b00002d 	blhi	50ec <_Min_Stack_Size+0x40ec>
    5034:	0f00002d 	svceq	0x0000002d
    5038:	000011bc 			; <UNDEFINED> instruction: 0x000011bc
    503c:	91165501 	tstls	r6, r1, lsl #10
    5040:	a2000006 	andge	r0, r0, #6
    5044:	a000002d 	andge	r0, r0, sp, lsr #32
    5048:	1000002d 	andne	r0, r0, sp, lsr #32
    504c:	00000848 	andeq	r0, r0, r8, asr #16
    5050:	10001c36 	andne	r1, r0, r6, lsr ip
    5054:	001c3601 	andseq	r3, ip, r1, lsl #12
    5058:	001c3c10 	andseq	r3, ip, r0, lsl ip
    505c:	05920110 	ldreq	r0, [r2, #272]	; 0x110
    5060:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    5064:	00085b11 	andeq	r5, r8, r1, lsl fp
    5068:	002db900 	eoreq	fp, sp, r0, lsl #18
    506c:	002db700 	eoreq	fp, sp, r0, lsl #14
    5070:	08861200 	stmeq	r6, {r9, ip}
    5074:	1c360000 	ldcne	0, cr0, [r6], #-0
    5078:	36041000 	strcc	r1, [r4], -r0
    507c:	3a10001c 	bcc	4050f4 <__RAM_SIZE+0x3050f4>
    5080:	0210001c 	andseq	r0, r0, #28
    5084:	11130256 	tstne	r3, r6, asr r2
    5088:	00000899 	muleq	r0, r9, r8
    508c:	00002dce 	andeq	r2, r0, lr, asr #27
    5090:	00002dcc 	andeq	r2, r0, ip, asr #27
    5094:	69100000 	ldmdbvs	r0, {}	; <UNPREDICTABLE>
    5098:	54000008 	strpl	r0, [r0], #-8
    509c:	0110001c 	tsteq	r0, ip, lsl r0
    50a0:	10001c54 	andne	r1, r0, r4, asr ip
    50a4:	10001c58 	andne	r1, r0, r8, asr ip
    50a8:	2605c101 	strcs	ip, [r5], -r1, lsl #2
    50ac:	13000008 	movwne	r0, #8
    50b0:	00000878 	andeq	r0, r0, r8, ror r8
    50b4:	00002de3 	andeq	r2, r0, r3, ror #27
    50b8:	00002de1 	andeq	r2, r0, r1, ror #27
    50bc:	1c061400 	cfstrsne	mvf1, [r6], {-0}
    50c0:	08a71000 	stmiaeq	r7!, {ip}
    50c4:	01150000 	tsteq	r5, r0
    50c8:	00740250 	rsbseq	r0, r4, r0, asr r2
    50cc:	01510115 	cmpeq	r1, r5, lsl r1
    50d0:	52011530 	andpl	r1, r1, #48, 10	; 0xc000000
    50d4:	00340802 	eorseq	r0, r4, r2, lsl #16
    50d8:	93040a00 	movwls	r0, #18944	; 0x4a00
    50dc:	16000005 	strne	r0, [r0], -r5
    50e0:	00000f24 	andeq	r0, r0, r4, lsr #30
    50e4:	37025202 	strcc	r5, [r2, -r2, lsl #4]
    50e8:	00009701 	andeq	r9, r0, r1, lsl #14
    50ec:	08690300 	stmdaeq	r9!, {r8, r9}^
    50f0:	ad170000 	ldcge	0, cr0, [r7, #-0]
    50f4:	0200000e 	andeq	r0, r0, #14
    50f8:	97060254 	smlsdls	r6, r4, r2, r0
    50fc:	00000000 	andeq	r0, r0, r0
    5100:	000e9918 	andeq	r9, lr, r8, lsl r9
    5104:	02490200 	subeq	r0, r9, #0, 4
    5108:	86030137 			; <UNDEFINED> instruction: 0x86030137
    510c:	19000008 	stmdbne	r0, {r3}
    5110:	00000ead 	andeq	r0, r0, sp, lsr #29
    5114:	50024902 	andpl	r4, r2, r2, lsl #18
    5118:	00000097 	muleq	r0, r7, r0
    511c:	0ec21600 	cdpeq	6, 12, cr1, cr2, cr0, {0}
    5120:	32020000 	andcc	r0, r2, #0
    5124:	97013702 	strls	r3, [r1, -r2, lsl #14]
    5128:	03000000 	movweq	r0, #0
    512c:	000008a7 	andeq	r0, r0, r7, lsr #17
    5130:	000eb117 	andeq	fp, lr, r7, lsl r1
    5134:	02340200 	eorseq	r0, r4, #0, 4
    5138:	00009706 	andeq	r9, r0, r6, lsl #14
    513c:	011a0000 	tsteq	sl, r0
    5140:	00128801 	andseq	r8, r2, r1, lsl #16
    5144:	00127e00 	andseq	r7, r2, r0, lsl #28
    5148:	00000500 	andeq	r0, r0, r0, lsl #10
    514c:	00000974 	andeq	r0, r0, r4, ror r9
    5150:	0dd50002 	ldcleq	0, cr0, [r5, #8]
    5154:	01040000 	mrseq	r0, (UNDEF: 4)
    5158:	0000003d 	andeq	r0, r0, sp, lsr r0
    515c:	0012ee0c 	andseq	lr, r2, ip, lsl #28
    5160:	00065c00 	andeq	r5, r6, r0, lsl #24
    5164:	00025800 	andeq	r5, r2, r0, lsl #16
	...
    5170:	00227100 	eoreq	r7, r2, r0, lsl #2
    5174:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5178:	00000239 	andeq	r0, r0, r9, lsr r2
    517c:	69050403 	stmdbvs	r5, {r0, r1, sl}
    5180:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    5184:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    5188:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    518c:	00063e04 	andeq	r3, r6, r4, lsl #28
    5190:	06010200 	streq	r0, [r1], -r0, lsl #4
    5194:	0000086d 	andeq	r0, r0, sp, ror #16
    5198:	6b080102 	blvs	2055a8 <__RAM_SIZE+0x1055a8>
    519c:	02000008 	andeq	r0, r0, #8
    51a0:	06cf0502 	strbeq	r0, [pc], r2, lsl #10
    51a4:	02020000 	andeq	r0, r2, #0
    51a8:	00093907 	andeq	r3, r9, r7, lsl #18
    51ac:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    51b0:	000004ed 	andeq	r0, r0, sp, ror #9
    51b4:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    51b8:	02000002 	andeq	r0, r0, #2
    51bc:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    51c0:	04040000 	streq	r0, [r4], #-0
    51c4:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    51c8:	05000008 	streq	r0, [r0, #-8]
    51cc:	000008fa 	strdeq	r0, [r0], -sl
    51d0:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    51d4:	05000000 	streq	r0, [r0, #-0]
    51d8:	000008f9 	strdeq	r0, [r0], -r9
    51dc:	4c317402 	cfldrsmi	mvf7, [r1], #-8
    51e0:	05000000 	streq	r0, [r0, #-0]
    51e4:	0000079a 	muleq	r0, sl, r7
    51e8:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    51ec:	05000000 	streq	r0, [r0, #-0]
    51f0:	0000072c 	andeq	r0, r0, ip, lsr #14
    51f4:	68317802 	ldmdavs	r1!, {r1, fp, ip, sp, lr}
    51f8:	06000000 	streq	r0, [r0], -r0
    51fc:	0000053b 	andeq	r0, r0, fp, lsr r5
    5200:	0182031c 	orreq	r0, r2, ip, lsl r3
    5204:	00012e10 	andeq	r2, r1, r0, lsl lr
    5208:	082d0700 	stmdaeq	sp!, {r8, r9, sl}
    520c:	86030000 	strhi	r0, [r3], -r0
    5210:	00a31901 	adceq	r1, r3, r1, lsl #18
    5214:	23020000 	movwcs	r0, #8192	; 0x2000
    5218:	03a00700 	moveq	r0, #0, 14
    521c:	87030000 	strhi	r0, [r3, -r0]
    5220:	00a31901 	adceq	r1, r3, r1, lsl #18
    5224:	23020000 	movwcs	r0, #8192	; 0x2000
    5228:	043d0704 	ldrteq	r0, [sp], #-1796	; 0xfffff8fc
    522c:	8a030000 	bhi	c5234 <SYSTICK_CYCLES+0x9c1f5>
    5230:	013a1b01 	teqeq	sl, r1, lsl #22
    5234:	23020000 	movwcs	r0, #8192	; 0x2000
    5238:	01f20708 	mvnseq	r0, r8, lsl #14
    523c:	8b030000 	blhi	c5244 <SYSTICK_CYCLES+0x9c205>
    5240:	00a31901 	adceq	r1, r3, r1, lsl #18
    5244:	23020000 	movwcs	r0, #8192	; 0x2000
    5248:	096f070c 	stmdbeq	pc!, {r2, r3, r8, r9, sl}^	; <UNPREDICTABLE>
    524c:	91030000 	mrsls	r0, (UNDEF: 3)
    5250:	01401a01 	cmpeq	r0, r1, lsl #20
    5254:	23020000 	movwcs	r0, #8192	; 0x2000
    5258:	001b0710 	andseq	r0, fp, r0, lsl r7
    525c:	92030000 	andls	r0, r3, #0
    5260:	01401a01 	cmpeq	r0, r1, lsl #20
    5264:	23020000 	movwcs	r0, #8192	; 0x2000
    5268:	06090714 			; <UNDEFINED> instruction: 0x06090714
    526c:	96030000 	strls	r0, [r3], -r0
    5270:	01461b01 	cmpeq	r6, r1, lsl #22
    5274:	23020000 	movwcs	r0, #8192	; 0x2000
    5278:	01080018 	tsteq	r8, r8, lsl r0
    527c:	0000013a 	andeq	r0, r0, sl, lsr r1
    5280:	0000a309 	andeq	sl, r0, r9, lsl #6
    5284:	040a0000 	streq	r0, [sl], #-0
    5288:	0000012e 	andeq	r0, r0, lr, lsr #2
    528c:	00af040a 	adceq	r0, pc, sl, lsl #8
    5290:	040a0000 	streq	r0, [sl], #-0
    5294:	00000140 	andeq	r0, r0, r0, asr #2
    5298:	00064a0b 	andeq	r4, r6, fp, lsl #20
    529c:	019b0300 	orrseq	r0, fp, r0, lsl #6
    52a0:	0000af03 	andeq	sl, r0, r3, lsl #30
    52a4:	7f040a00 	svcvc	0x00040a00
    52a8:	06000000 	streq	r0, [r0], -r0
    52ac:	0000034b 	andeq	r0, r0, fp, asr #6
    52b0:	01d603d8 	ldrsbeq	r0, [r6, #56]	; 0x38
    52b4:	00048410 	andeq	r8, r4, r0, lsl r4
    52b8:	092c0700 	stmdbeq	ip!, {r8, r9, sl}
    52bc:	dd030000 	stcle	0, cr0, [r3, #-0]
    52c0:	00a31901 	adceq	r1, r3, r1, lsl #18
    52c4:	23020000 	movwcs	r0, #8192	; 0x2000
    52c8:	079f0700 	ldreq	r0, [pc, r0, lsl #14]
    52cc:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    52d0:	00a31901 	adceq	r1, r3, r1, lsl #18
    52d4:	23020000 	movwcs	r0, #8192	; 0x2000
    52d8:	01bc0704 			; <UNDEFINED> instruction: 0x01bc0704
    52dc:	df030000 	svcle	0x00030000
    52e0:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    52e4:	23020000 	movwcs	r0, #8192	; 0x2000
    52e8:	09160708 	ldmdbeq	r6, {r3, r8, r9, sl}
    52ec:	e0030000 	and	r0, r3, r0
    52f0:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    52f4:	23020000 	movwcs	r0, #8192	; 0x2000
    52f8:	0411070c 	ldreq	r0, [r1], #-1804	; 0xfffff8f4
    52fc:	e1030000 	mrs	r0, (UNDEF: 3)
    5300:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    5304:	23020000 	movwcs	r0, #8192	; 0x2000
    5308:	095a0710 	ldmdbeq	sl, {r4, r8, r9, sl}^
    530c:	e2030000 	and	r0, r3, #0
    5310:	00a31901 	adceq	r1, r3, r1, lsl #18
    5314:	23020000 	movwcs	r0, #8192	; 0x2000
    5318:	21e20714 	mvncs	r0, r4, lsl r7
    531c:	e3030000 	movw	r0, #12288	; 0x3000
    5320:	00a31901 	adceq	r1, r3, r1, lsl #18
    5324:	23020000 	movwcs	r0, #8192	; 0x2000
    5328:	06250718 			; <UNDEFINED> instruction: 0x06250718
    532c:	e4030000 	str	r0, [r3], #-0
    5330:	00a31901 	adceq	r1, r3, r1, lsl #18
    5334:	23020000 	movwcs	r0, #8192	; 0x2000
    5338:	06ba071c 	ssateq	r0, #27, ip, lsl #14
    533c:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    5340:	04841a01 	streq	r1, [r4], #2561	; 0xa01
    5344:	23020000 	movwcs	r0, #8192	; 0x2000
    5348:	01990720 	orrseq	r0, r9, r0, lsr #14
    534c:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    5350:	04841a01 	streq	r1, [r4], #2561	; 0xa01
    5354:	23020000 	movwcs	r0, #8192	; 0x2000
    5358:	05b10724 	ldreq	r0, [r1, #1828]!	; 0x724
    535c:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    5360:	01591a01 	cmpeq	r9, r1, lsl #20
    5364:	23020000 	movwcs	r0, #8192	; 0x2000
    5368:	02d90728 	sbcseq	r0, r9, #40, 14	; 0xa00000
    536c:	f2030000 	vhadd.s8	d0, d3, d0
    5370:	00971901 	addseq	r1, r7, r1, lsl #18
    5374:	23020000 	movwcs	r0, #8192	; 0x2000
    5378:	0246072c 	subeq	r0, r6, #44, 14	; 0xb00000
    537c:	f3030000 	vhadd.u8	d0, d3, d0
    5380:	00971901 	addseq	r1, r7, r1, lsl #18
    5384:	23020000 	movwcs	r0, #8192	; 0x2000
    5388:	01730730 	cmneq	r3, r0, lsr r7
    538c:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    5390:	00971901 	addseq	r1, r7, r1, lsl #18
    5394:	23020000 	movwcs	r0, #8192	; 0x2000
    5398:	074b0734 	smlaldxeq	r0, fp, r4, r7
    539c:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    53a0:	00971901 	addseq	r1, r7, r1, lsl #18
    53a4:	23020000 	movwcs	r0, #8192	; 0x2000
    53a8:	00eb0738 	rsceq	r0, fp, r8, lsr r7
    53ac:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    53b0:	00971901 	addseq	r1, r7, r1, lsl #18
    53b4:	23020000 	movwcs	r0, #8192	; 0x2000
    53b8:	035c073c 	cmpeq	ip, #60, 14	; 0xf00000
    53bc:	fb030000 	blx	c53c6 <SYSTICK_CYCLES+0x9c387>
    53c0:	049b1b01 	ldreq	r1, [fp], #2817	; 0xb01
    53c4:	23020000 	movwcs	r0, #8192	; 0x2000
    53c8:	01520740 	cmpeq	r2, r0, asr #14
    53cc:	03030000 	movweq	r0, #12288	; 0x3000
    53d0:	013a1b02 	teqeq	sl, r2, lsl #22
    53d4:	23020000 	movwcs	r0, #8192	; 0x2000
    53d8:	01070744 	tsteq	r7, r4, asr #14
    53dc:	04030000 	streq	r0, [r3], #-0
    53e0:	00a31902 	adceq	r1, r3, r2, lsl #18
    53e4:	23020000 	movwcs	r0, #8192	; 0x2000
    53e8:	033b0748 	teqeq	fp, #72, 14	; 0x1200000
    53ec:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    53f0:	014c1902 	cmpeq	ip, r2, lsl #18
    53f4:	23020000 	movwcs	r0, #8192	; 0x2000
    53f8:	02ec074c 	rsceq	r0, ip, #76, 14	; 0x1300000
    53fc:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    5400:	049b1b02 	ldreq	r1, [fp], #2818	; 0xb02
    5404:	23020000 	movwcs	r0, #8192	; 0x2000
    5408:	05e90768 	strbeq	r0, [r9, #1896]!	; 0x768
    540c:	0f030000 	svceq	0x00030000
    5410:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    5414:	23020000 	movwcs	r0, #8192	; 0x2000
    5418:	0732076c 	ldreq	r0, [r2, -ip, ror #14]!
    541c:	11030000 	mrsne	r0, (UNDEF: 3)
    5420:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    5424:	23020000 	movwcs	r0, #8192	; 0x2000
    5428:	02120770 	andseq	r0, r2, #112, 14	; 0x1c00000
    542c:	12030000 	andne	r0, r3, #0
    5430:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    5434:	23020000 	movwcs	r0, #8192	; 0x2000
    5438:	07150774 			; <UNDEFINED> instruction: 0x07150774
    543c:	13030000 	movwne	r0, #12288	; 0x3000
    5440:	00a31902 	adceq	r1, r3, r2, lsl #18
    5444:	23020000 	movwcs	r0, #8192	; 0x2000
    5448:	03c60778 	biceq	r0, r6, #120, 14	; 0x1e00000
    544c:	14030000 	strne	r0, [r3], #-0
    5450:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    5454:	23020000 	movwcs	r0, #8192	; 0x2000
    5458:	0554077c 	ldrbeq	r0, [r4, #-1916]	; 0xfffff884
    545c:	15030000 	strne	r0, [r3, #-0]
    5460:	00971902 	addseq	r1, r7, r2, lsl #18
    5464:	23030000 	movwcs	r0, #12288	; 0x3000
    5468:	e8070180 	stmda	r7, {r7, r8}
    546c:	03000003 	movweq	r0, #3
    5470:	97190216 			; <UNDEFINED> instruction: 0x97190216
    5474:	03000000 	movweq	r0, #0
    5478:	07018423 	streq	r8, [r1, -r3, lsr #8]
    547c:	000008ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    5480:	1a021f03 	bne	8d094 <SYSTICK_CYCLES+0x64055>
    5484:	00000484 	andeq	r0, r0, r4, lsl #9
    5488:	01882303 	orreq	r2, r8, r3, lsl #6
    548c:	0007f007 	andeq	pc, r7, r7
    5490:	02200300 	eoreq	r0, r0, #0, 6
    5494:	0004841a 	andeq	r8, r4, sl, lsl r4
    5498:	8c230300 	stchi	3, cr0, [r3], #-0
    549c:	02c10701 	sbceq	r0, r1, #262144	; 0x40000
    54a0:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    54a4:	00971902 	addseq	r1, r7, r2, lsl #18
    54a8:	23030000 	movwcs	r0, #12288	; 0x3000
    54ac:	56070190 			; <UNDEFINED> instruction: 0x56070190
    54b0:	03000002 	movweq	r0, #2
    54b4:	9719022f 	ldrls	r0, [r9, -pc, lsr #4]
    54b8:	03000000 	movweq	r0, #0
    54bc:	07019423 	streq	r9, [r1, -r3, lsr #8]
    54c0:	00000320 	andeq	r0, r0, r0, lsr #6
    54c4:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    54c8:	00000097 	muleq	r0, r7, r0
    54cc:	01982303 	orrseq	r2, r8, r3, lsl #6
    54d0:	00027707 	andeq	r7, r2, r7, lsl #14
    54d4:	02330300 	eorseq	r0, r3, #0, 6
    54d8:	00009719 	andeq	r9, r0, r9, lsl r7
    54dc:	9c230300 	stcls	3, cr0, [r3], #-0
    54e0:	00000701 	andeq	r0, r0, r1, lsl #14
    54e4:	35030000 	strcc	r0, [r3, #-0]
    54e8:	05801a02 	streq	r1, [r0, #2562]	; 0xa02
    54ec:	23030000 	movwcs	r0, #12288	; 0x3000
    54f0:	c80701a0 	stmdagt	r7, {r5, r7, r8}
    54f4:	0300001b 	movweq	r0, #27
    54f8:	a319023a 	tstge	r9, #-1610612733	; 0xa0000003
    54fc:	03000000 	movweq	r0, #0
    5500:	0701a423 	streq	sl, [r1, -r3, lsr #8]
    5504:	00001c88 	andeq	r1, r0, r8, lsl #25
    5508:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    550c:	000000a3 	andeq	r0, r0, r3, lsr #1
    5510:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    5514:	001b4107 	andseq	r4, fp, r7, lsl #2
    5518:	02410300 	subeq	r0, r1, #0, 6
    551c:	0000a319 	andeq	sl, r0, r9, lsl r3
    5520:	ac230300 	stcge	3, cr0, [r3], #-0
    5524:	1d3f0701 	ldcne	7, cr0, [pc, #-4]!	; 5528 <_Min_Stack_Size+0x4528>
    5528:	45030000 	strmi	r0, [r3, #-0]
    552c:	00a31902 	adceq	r1, r3, r2, lsl #18
    5530:	23030000 	movwcs	r0, #12288	; 0x3000
    5534:	580701b0 	stmdapl	r7, {r4, r5, r7, r8}
    5538:	0300001c 	movweq	r0, #28
    553c:	a3190248 	tstge	r9, #72, 4	; 0x80000004
    5540:	03000000 	movweq	r0, #0
    5544:	0701b423 	streq	fp, [r1, -r3, lsr #8]
    5548:	000007c3 	andeq	r0, r0, r3, asr #15
    554c:	1a024c03 	bne	98560 <SYSTICK_CYCLES+0x6f521>
    5550:	00000484 	andeq	r0, r0, r4, lsl #9
    5554:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    5558:	001d1707 	andseq	r1, sp, r7, lsl #14
    555c:	024f0300 	subeq	r0, pc, #0, 6
    5560:	0000a319 	andeq	sl, r0, r9, lsl r3
    5564:	bc230300 	stclt	3, cr0, [r3], #-0
    5568:	1b190701 	blne	647174 <__RAM_SIZE+0x547174>
    556c:	52030000 	andpl	r0, r3, #0
    5570:	00a31902 	adceq	r1, r3, r2, lsl #18
    5574:	23030000 	movwcs	r0, #12288	; 0x3000
    5578:	960701c0 	strls	r0, [r7], -r0, asr #3
    557c:	0300001a 	movweq	r0, #26
    5580:	a3190255 	tstge	r9, #1342177285	; 0x50000005
    5584:	03000000 	movweq	r0, #0
    5588:	0701c423 	streq	ip, [r1, -r3, lsr #8]
    558c:	00001bec 	andeq	r1, r0, ip, ror #23
    5590:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    5594:	000000a3 	andeq	r0, r0, r3, lsr #1
    5598:	01c82303 	biceq	r2, r8, r3, lsl #6
    559c:	0009c407 	andeq	ip, r9, r7, lsl #8
    55a0:	025d0300 	subseq	r0, sp, #0, 6
    55a4:	0000761a 	andeq	r7, r0, sl, lsl r6
    55a8:	cc230300 	stcgt	3, cr0, [r3], #-0
    55ac:	04810701 	streq	r0, [r1], #1793	; 0x701
    55b0:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    55b4:	00a31902 	adceq	r1, r3, r2, lsl #18
    55b8:	23030000 	movwcs	r0, #12288	; 0x3000
    55bc:	6d0701d0 	stfvss	f0, [r7, #-832]	; 0xfffffcc0
    55c0:	03000005 	movweq	r0, #5
    55c4:	a319027d 	tstge	r9, #-805306361	; 0xd0000007
    55c8:	03000000 	movweq	r0, #0
    55cc:	0001d423 	andeq	sp, r1, r3, lsr #8
    55d0:	015f040a 	cmpeq	pc, sl, lsl #8
    55d4:	01080000 	mrseq	r0, (UNDEF: 8)
    55d8:	0000049b 	muleq	r0, fp, r4
    55dc:	00048409 	andeq	r8, r4, r9, lsl #8
    55e0:	00a30900 	adceq	r0, r3, r0, lsl #18
    55e4:	0a000000 	beq	55ec <_Min_Stack_Size+0x45ec>
    55e8:	00048a04 	andeq	r8, r4, r4, lsl #20
    55ec:	07b30600 	ldreq	r0, [r3, r0, lsl #12]!
    55f0:	03340000 	teqeq	r4, #0
    55f4:	8010037e 	andshi	r0, r0, lr, ror r3
    55f8:	07000005 	streq	r0, [r0, -r5]
    55fc:	0000018d 	andeq	r0, r0, sp, lsl #3
    5600:	19038203 	stmdbne	r3, {r0, r1, r9, pc}
    5604:	000000a3 	andeq	r0, r0, r3, lsr #1
    5608:	07002302 	streq	r2, [r0, -r2, lsl #6]
    560c:	00000897 	muleq	r0, r7, r8
    5610:	1a038503 	bne	e6a24 <SYSTICK_CYCLES+0xbd9e5>
    5614:	00000159 	andeq	r0, r0, r9, asr r1
    5618:	07042302 	streq	r2, [r4, -r2, lsl #6]
    561c:	000006fc 	strdeq	r0, [r0], -ip
    5620:	19038803 	stmdbne	r3, {r0, r1, fp, pc}
    5624:	00000097 	muleq	r0, r7, r0
    5628:	07082302 	streq	r2, [r8, -r2, lsl #6]
    562c:	000004cb 	andeq	r0, r0, fp, asr #9
    5630:	1a038c03 	bne	e8644 <SYSTICK_CYCLES+0xbf605>
    5634:	0000068b 	andeq	r0, r0, fp, lsl #13
    5638:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    563c:	00000162 	andeq	r0, r0, r2, ror #2
    5640:	19039003 	stmdbne	r3, {r0, r1, ip, pc}
    5644:	00000097 	muleq	r0, r7, r0
    5648:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    564c:	00000121 	andeq	r0, r0, r1, lsr #2
    5650:	19039303 	stmdbne	r3, {r0, r1, r8, r9, ip, pc}
    5654:	00000097 	muleq	r0, r7, r0
    5658:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    565c:	000008cd 	andeq	r0, r0, sp, asr #17
    5660:	1a039803 	bne	eb674 <SYSTICK_CYCLES+0xc2635>
    5664:	00000484 	andeq	r0, r0, r4, lsl #9
    5668:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    566c:	000006e3 	andeq	r0, r0, r3, ror #13
    5670:	19039903 	stmdbne	r3, {r0, r1, r8, fp, ip, pc}
    5674:	00000097 	muleq	r0, r7, r0
    5678:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    567c:	000005d3 	ldrdeq	r0, [r0], -r3
    5680:	1a039d03 	bne	eca94 <SYSTICK_CYCLES+0xc3a55>
    5684:	00000580 	andeq	r0, r0, r0, lsl #11
    5688:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    568c:	000006a0 	andeq	r0, r0, r0, lsr #13
    5690:	1a039e03 	bne	ecea4 <SYSTICK_CYCLES+0xc3e65>
    5694:	00000580 	andeq	r0, r0, r0, lsl #11
    5698:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    569c:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    56a0:	1903a203 	stmdbne	r3, {r0, r1, r9, sp, pc}
    56a4:	00000097 	muleq	r0, r7, r0
    56a8:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    56ac:	000009e0 	andeq	r0, r0, r0, ror #19
    56b0:	1a03a603 	bne	eeec4 <SYSTICK_CYCLES+0xc5e85>
    56b4:	00000580 	andeq	r0, r0, r0, lsl #11
    56b8:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    56bc:	00000425 	andeq	r0, r0, r5, lsr #8
    56c0:	1a03a703 	bne	ef2d4 <SYSTICK_CYCLES+0xc6295>
    56c4:	00000580 	andeq	r0, r0, r0, lsl #11
    56c8:	00302302 	eorseq	r2, r0, r2, lsl #6
    56cc:	04a1040a 	strteq	r0, [r1], #1034	; 0x40a
    56d0:	ef0b0000 	svc	0x000b0000
    56d4:	03000008 	movweq	r0, #8
    56d8:	5f030286 	svcpl	0x00030286
    56dc:	0a000001 	beq	56e8 <_Min_Stack_Size+0x46e8>
    56e0:	00008b04 	andeq	r8, r0, r4, lsl #22
    56e4:	04600600 	strbteq	r0, [r0], #-1536	; 0xfffffa00
    56e8:	03340000 	teqeq	r4, #0
    56ec:	781002d9 	ldmdavc	r0, {r0, r3, r4, r6, r7, r9}
    56f0:	07000006 	streq	r0, [r0, -r6]
    56f4:	00000401 	andeq	r0, r0, r1, lsl #8
    56f8:	1902dd03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, lr, pc}
    56fc:	000000a3 	andeq	r0, r0, r3, lsr #1
    5700:	07002302 	streq	r2, [r0, -r2, lsl #6]
    5704:	00000374 	andeq	r0, r0, r4, ror r3
    5708:	1a02e003 	bne	bd71c <SYSTICK_CYCLES+0x946dd>
    570c:	00000159 	andeq	r0, r0, r9, asr r1
    5710:	07042302 	streq	r2, [r4, -r2, lsl #6]
    5714:	00000770 	andeq	r0, r0, r0, ror r7
    5718:	1902e303 	stmdbne	r2, {r0, r1, r8, r9, sp, lr, pc}
    571c:	000000a3 	andeq	r0, r0, r3, lsr #1
    5720:	07082302 	streq	r2, [r8, -r2, lsl #6]
    5724:	000008b6 			; <UNDEFINED> instruction: 0x000008b6
    5728:	1902e603 	stmdbne	r2, {r0, r1, r9, sl, sp, lr, pc}
    572c:	00000097 	muleq	r0, r7, r0
    5730:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    5734:	0000080b 	andeq	r0, r0, fp, lsl #16
    5738:	1a02e903 	bne	bfb4c <SYSTICK_CYCLES+0x96b0d>
    573c:	00000593 	muleq	r0, r3, r5
    5740:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    5744:	00001113 	andeq	r1, r0, r3, lsl r1
    5748:	1a02ed03 	bne	c0b5c <SYSTICK_CYCLES+0x97b1d>
    574c:	00000593 	muleq	r0, r3, r5
    5750:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    5754:	00000528 	andeq	r0, r0, r8, lsr #10
    5758:	1a02f003 	bne	c176c <SYSTICK_CYCLES+0x9872d>
    575c:	00000593 	muleq	r0, r3, r5
    5760:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    5764:	00000306 	andeq	r0, r0, r6, lsl #6
    5768:	1902f303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp, lr, pc}
    576c:	000000a3 	andeq	r0, r0, r3, lsr #1
    5770:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    5774:	0000098d 	andeq	r0, r0, sp, lsl #19
    5778:	1a02f903 	bne	c3b8c <SYSTICK_CYCLES+0x9ab4d>
    577c:	00000484 	andeq	r0, r0, r4, lsl #9
    5780:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    5784:	000004ae 	andeq	r0, r0, lr, lsr #9
    5788:	1a02fe03 	bne	c4f9c <SYSTICK_CYCLES+0x9bf5d>
    578c:	00000484 	andeq	r0, r0, r4, lsl #9
    5790:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    5794:	0000050b 	andeq	r0, r0, fp, lsl #10
    5798:	1902ff03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, ip, sp, lr, pc}
    579c:	00000097 	muleq	r0, r7, r0
    57a0:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    57a4:	000002a7 	andeq	r0, r0, r7, lsr #5
    57a8:	1a030303 	bne	c63bc <SYSTICK_CYCLES+0x9d37d>
    57ac:	00000678 	andeq	r0, r0, r8, ror r6
    57b0:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    57b4:	00000879 	andeq	r0, r0, r9, ror r8
    57b8:	1a030403 	bne	c67cc <SYSTICK_CYCLES+0x9d78d>
    57bc:	00000678 	andeq	r0, r0, r8, ror r6
    57c0:	00302302 	eorseq	r2, r0, r2, lsl #6
    57c4:	0599040a 	ldreq	r0, [r9, #1034]	; 0x40a
    57c8:	740b0000 	strvc	r0, [fp], #-0
    57cc:	03000004 	movweq	r0, #4
    57d0:	99030323 	stmdbls	r3, {r0, r1, r5, r8, r9}
    57d4:	0a000005 	beq	57f0 <_Min_Stack_Size+0x47f0>
    57d8:	00058604 	andeq	r8, r5, r4, lsl #12
    57dc:	a3040a00 	movwge	r0, #18944	; 0x4a00
    57e0:	0c000000 	stceq	0, cr0, [r0], {-0}
    57e4:	00001127 	andeq	r1, r0, r7, lsr #2
    57e8:	21013904 	tstcs	r1, r4, lsl #18
    57ec:	0000068b 	andeq	r0, r0, fp, lsl #13
    57f0:	040a0101 	streq	r0, [sl], #-257	; 0xfffffeff
    57f4:	0000067e 	andeq	r0, r0, lr, ror r6
    57f8:	1112010d 	tstne	r2, sp, lsl #2
    57fc:	56010000 	strpl	r0, [r1], -r0
    5800:	05930109 	ldreq	r0, [r3, #265]	; 0x109
    5804:	1c7c0000 	ldclne	0, cr0, [ip], #-0
    5808:	1d641000 	stclne	0, cr1, [r4, #-0]
    580c:	2df61000 	ldclcs	0, cr1, [r6]
    5810:	16010000 	strne	r0, [r1], -r0
    5814:	0e000009 	cdpeq	0, 0, cr0, cr0, cr9, {0}
    5818:	00000efd 	strdeq	r0, [r0], -sp
    581c:	a62c5601 	strtge	r5, [ip], -r1, lsl #12
    5820:	22000006 	andcs	r0, r0, #6
    5824:	1600002e 	strne	r0, [r0], -lr, lsr #32
    5828:	0e00002e 	cdpeq	0, 0, cr0, cr0, cr14, {1}
    582c:	000010e6 	andeq	r1, r0, r6, ror #1
    5830:	a33c5601 	teqge	ip, #1048576	; 0x100000
    5834:	7b000000 	blvc	583c <_Min_Stack_Size+0x483c>
    5838:	7500002e 	strvc	r0, [r0, #-46]	; 0xffffffd2
    583c:	0f00002e 	svceq	0x0000002e
    5840:	00000eee 	andeq	r0, r0, lr, ror #29
    5844:	97015901 	strls	r5, [r1, -r1, lsl #18]
    5848:	ab000000 	blge	5850 <_Min_Stack_Size+0x4850>
    584c:	a700002e 	strge	r0, [r0, -lr, lsr #32]
    5850:	0f00002e 	svceq	0x0000002e
    5854:	00001132 	andeq	r1, r0, r2, lsr r1
    5858:	93125b01 	tstls	r2, #1024	; 0x400
    585c:	d3000005 	movwle	r0, #5
    5860:	c900002e 	stmdbgt	r0, {r1, r2, r3, r5}
    5864:	0f00002e 	svceq	0x0000002e
    5868:	0000134c 	andeq	r1, r0, ip, asr #6
    586c:	93125c01 	tstls	r2, #256	; 0x100
    5870:	1a000005 	bne	588c <_Min_Stack_Size+0x488c>
    5874:	1400002f 	strne	r0, [r0], #-47	; 0xffffffd1
    5878:	0f00002f 	svceq	0x0000002f
    587c:	000012c3 	andeq	r1, r0, r3, asr #5
    5880:	16135d01 	ldrne	r5, [r3], -r1, lsl #26
    5884:	53000009 	movwpl	r0, #9
    5888:	4300002f 	movwmi	r0, #47	; 0x2f
    588c:	0f00002f 	svceq	0x0000002f
    5890:	00001328 	andeq	r1, r0, r8, lsr #6
    5894:	16135e01 	ldrne	r5, [r3], -r1, lsl #28
    5898:	bd000009 	stclt	0, cr0, [r0, #-36]	; 0xffffffdc
    589c:	b700002f 	strlt	r0, [r0, -pc, lsr #32]
    58a0:	0f00002f 	svceq	0x0000002f
    58a4:	0000133c 	andeq	r1, r0, ip, lsr r3
    58a8:	a3115f01 	tstge	r1, #1, 30
    58ac:	f8000000 			; <UNDEFINED> instruction: 0xf8000000
    58b0:	e600002f 	str	r0, [r0], -pc, lsr #32
    58b4:	0f00002f 	svceq	0x0000002f
    58b8:	00001298 	muleq	r0, r8, r2
    58bc:	97116001 	ldrls	r6, [r1, -r1]
    58c0:	6c000000 	stcvs	0, cr0, [r0], {-0}
    58c4:	66000030 			; <UNDEFINED> instruction: 0x66000030
    58c8:	0f000030 	svceq	0x00000030
    58cc:	000012d7 	ldrdeq	r1, [r0], -r7
    58d0:	97116101 	ldrls	r6, [r1, -r1, lsl #2]
    58d4:	9f000000 	svcls	0x00000000
    58d8:	95000030 	strls	r0, [r0, #-48]	; 0xffffffd0
    58dc:	0f000030 	svceq	0x00000030
    58e0:	00001979 	andeq	r1, r0, r9, ror r9
    58e4:	8b126201 	blhi	49e0f0 <__RAM_SIZE+0x39e0f0>
    58e8:	e6000006 	str	r0, [r0], -r6
    58ec:	e0000030 	and	r0, r0, r0, lsr r0
    58f0:	0f000030 	svceq	0x00000030
    58f4:	000011bc 			; <UNDEFINED> instruction: 0x000011bc
    58f8:	91126301 	tstls	r2, r1, lsl #6
    58fc:	19000006 	stmdbne	r0, {r1, r2}
    5900:	0f000031 	svceq	0x00000031
    5904:	0f000031 	svceq	0x00000031
    5908:	00000eb9 			; <UNDEFINED> instruction: 0x00000eb9
    590c:	93126401 	tstls	r2, #16777216	; 0x1000000
    5910:	70000005 	andvc	r0, r0, r5
    5914:	62000031 	andvs	r0, r0, #49	; 0x31
    5918:	0f000031 	svceq	0x00000031
    591c:	000012a7 	andeq	r1, r0, r7, lsr #5
    5920:	a3116501 	tstge	r1, #4194304	; 0x400000
    5924:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
    5928:	d3000031 	movwle	r0, #49	; 0x31
    592c:	10000031 	andne	r0, r0, r1, lsr r0
    5930:	0000091c 	andeq	r0, r0, ip, lsl r9
    5934:	10001c7e 	andne	r1, r0, lr, ror ip
    5938:	001c7e0d 	andseq	r7, ip, sp, lsl #28
    593c:	001c8410 	andseq	r8, ip, r0, lsl r4
    5940:	05690110 	strbeq	r0, [r9, #-272]!	; 0xfffffef0
    5944:	0000082e 	andeq	r0, r0, lr, lsr #16
    5948:	00092f11 	andeq	r2, r9, r1, lsl pc
    594c:	00320c00 	eorseq	r0, r2, r0, lsl #24
    5950:	00320a00 	eorseq	r0, r2, r0, lsl #20
    5954:	095a1200 	ldmdbeq	sl, {r9, ip}^
    5958:	1c7e0000 	ldclne	0, cr0, [lr], #-0
    595c:	7e101000 	cdpvc	0, 1, cr1, cr0, cr0, {0}
    5960:	8210001c 	andshi	r0, r0, #28
    5964:	0210001c 	andseq	r0, r0, #28
    5968:	11130256 	tstne	r3, r6, asr r2
    596c:	00000969 	andeq	r0, r0, r9, ror #18
    5970:	00003221 	andeq	r3, r0, r1, lsr #4
    5974:	0000321f 	andeq	r3, r0, pc, lsl r2
    5978:	3d100000 	ldccc	0, cr0, [r0, #-0]
    597c:	a2000009 	andge	r0, r0, #9
    5980:	0110001c 	tsteq	r0, ip, lsl r0
    5984:	10001ca2 	andne	r1, r0, r2, lsr #25
    5988:	10001ca6 	andne	r1, r0, r6, lsr #25
    598c:	55097201 	strpl	r7, [r9, #-513]	; 0xfffffdff
    5990:	13000008 	movwne	r0, #8
    5994:	0000094c 	andeq	r0, r0, ip, asr #18
    5998:	00003236 	andeq	r3, r0, r6, lsr r2
    599c:	00003234 	andeq	r3, r0, r4, lsr r2
    59a0:	093d1400 	ldmdbeq	sp!, {sl, ip}
    59a4:	1ce40000 	stclne	0, cr0, [r4]
    59a8:	e4011000 	str	r1, [r1], #-0
    59ac:	e810001c 	ldmda	r0, {r2, r3, r4}
    59b0:	0110001c 	tsteq	r0, ip, lsl r0
    59b4:	7d0d0101 	stfvcs	f0, [sp, #-4]
    59b8:	13000008 	movwne	r0, #8
    59bc:	0000094c 	andeq	r0, r0, ip, asr #18
    59c0:	0000324b 	andeq	r3, r0, fp, asr #4
    59c4:	00003249 	andeq	r3, r0, r9, asr #4
    59c8:	091c1400 	ldmdbeq	ip, {sl, ip}
    59cc:	1ce80000 	stclne	0, cr0, [r8]
    59d0:	e8021000 	stmda	r2, {ip}
    59d4:	ee10001c 	mrc	0, 0, r0, cr0, cr12, {0}
    59d8:	0110001c 	tsteq	r0, ip, lsl r0
    59dc:	c90d0104 	stmdbgt	sp, {r2, r8}
    59e0:	11000008 	tstne	r0, r8
    59e4:	0000092f 	andeq	r0, r0, pc, lsr #18
    59e8:	00003260 	andeq	r3, r0, r0, ror #4
    59ec:	0000325e 	andeq	r3, r0, lr, asr r2
    59f0:	00095a12 	andeq	r5, r9, r2, lsl sl
    59f4:	001ce800 	andseq	lr, ip, r0, lsl #16
    59f8:	1ce80510 	cfstr64ne	mvdx0, [r8], #64	; 0x40
    59fc:	1cec1000 	stclne	0, cr1, [ip]
    5a00:	56021000 	strpl	r1, [r2], -r0
    5a04:	69111302 	ldmdbvs	r1, {r1, r8, r9, ip}
    5a08:	75000009 	strvc	r0, [r0, #-9]
    5a0c:	73000032 	movwvc	r0, #50	; 0x32
    5a10:	00000032 	andeq	r0, r0, r2, lsr r0
    5a14:	093d1400 	ldmdbeq	sp!, {sl, ip}
    5a18:	1d420000 	stclne	0, cr0, [r2, #-0]
    5a1c:	42011000 	andmi	r1, r1, #0
    5a20:	4610001d 			; <UNDEFINED> instruction: 0x4610001d
    5a24:	0110001d 	tsteq	r0, sp, lsl r0
    5a28:	f10d014e 			; <UNDEFINED> instruction: 0xf10d014e
    5a2c:	13000008 	movwne	r0, #8
    5a30:	0000094c 	andeq	r0, r0, ip, asr #18
    5a34:	0000328a 	andeq	r3, r0, sl, lsl #5
    5a38:	00003288 	andeq	r3, r0, r8, lsl #5
    5a3c:	093d1200 	ldmdbeq	sp!, {r9, ip}
    5a40:	1d520000 	ldclne	0, cr0, [r2, #-0]
    5a44:	52011000 	andpl	r1, r1, #0
    5a48:	5610001d 			; <UNDEFINED> instruction: 0x5610001d
    5a4c:	0110001d 	tsteq	r0, sp, lsl r0
    5a50:	130d0157 	movwne	r0, #53591	; 0xd157
    5a54:	0000094c 	andeq	r0, r0, ip, asr #18
    5a58:	0000329f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
    5a5c:	0000329d 	muleq	r0, sp, r2
    5a60:	040a0000 	streq	r0, [sl], #-0
    5a64:	00000593 	muleq	r0, r3, r5
    5a68:	000f2415 	andeq	r2, pc, r5, lsl r4	; <UNPREDICTABLE>
    5a6c:	02520200 	subseq	r0, r2, #0, 4
    5a70:	00970137 	addseq	r0, r7, r7, lsr r1
    5a74:	3d030000 	stccc	0, cr0, [r3, #-0]
    5a78:	16000009 	strne	r0, [r0], -r9
    5a7c:	00000ead 	andeq	r0, r0, sp, lsr #29
    5a80:	06025402 	streq	r5, [r2], -r2, lsl #8
    5a84:	00000097 	muleq	r0, r7, r0
    5a88:	0e991700 	cdpeq	7, 9, cr1, cr9, cr0, {0}
    5a8c:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    5a90:	03013702 	movweq	r3, #5890	; 0x1702
    5a94:	0000095a 	andeq	r0, r0, sl, asr r9
    5a98:	000ead18 	andeq	sl, lr, r8, lsl sp
    5a9c:	02490200 	subeq	r0, r9, #0, 4
    5aa0:	00009750 	andeq	r9, r0, r0, asr r7
    5aa4:	c2190000 	andsgt	r0, r9, #0
    5aa8:	0200000e 	andeq	r0, r0, #14
    5aac:	01370232 	teqeq	r7, r2, lsr r2
    5ab0:	00000097 	muleq	r0, r7, r0
    5ab4:	0eb11603 	cdpeq	6, 11, cr1, cr1, cr3, {0}
    5ab8:	34020000 	strcc	r0, [r2], #-0
    5abc:	00970602 	addseq	r0, r7, r2, lsl #12
    5ac0:	00000000 	andeq	r0, r0, r0
    5ac4:	00000bc4 	andeq	r0, r0, r4, asr #23
    5ac8:	0f710002 	svceq	0x00710002
    5acc:	01040000 	mrseq	r0, (UNDEF: 4)
    5ad0:	0000003d 	andeq	r0, r0, sp, lsr r0
    5ad4:	00179a0c 	andseq	r9, r7, ip, lsl #20
    5ad8:	00065c00 	andeq	r5, r6, r0, lsl #24
    5adc:	00026800 	andeq	r6, r2, r0, lsl #16
	...
    5ae8:	00260200 	eoreq	r0, r6, r0, lsl #4
    5aec:	07040200 	streq	r0, [r4, -r0, lsl #4]
    5af0:	00000239 	andeq	r0, r0, r9, lsr r2
    5af4:	69050403 	stmdbvs	r5, {r0, r1, sl}
    5af8:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    5afc:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    5b00:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    5b04:	00063e04 	andeq	r3, r6, r4, lsl #28
    5b08:	06010200 	streq	r0, [r1], -r0, lsl #4
    5b0c:	0000086d 	andeq	r0, r0, sp, ror #16
    5b10:	6b080102 	blvs	205f20 <__RAM_SIZE+0x105f20>
    5b14:	02000008 	andeq	r0, r0, #8
    5b18:	06cf0502 	strbeq	r0, [pc], r2, lsl #10
    5b1c:	02020000 	andeq	r0, r2, #0
    5b20:	00093907 	andeq	r3, r9, r7, lsl #18
    5b24:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    5b28:	000004ed 	andeq	r0, r0, sp, ror #9
    5b2c:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    5b30:	02000002 	andeq	r0, r0, #2
    5b34:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    5b38:	04040000 	streq	r0, [r4], #-0
    5b3c:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    5b40:	05000008 	streq	r0, [r0, #-8]
    5b44:	000008fa 	strdeq	r0, [r0], -sl
    5b48:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    5b4c:	05000000 	streq	r0, [r0, #-0]
    5b50:	000008f9 	strdeq	r0, [r0], -r9
    5b54:	4c317402 	cfldrsmi	mvf7, [r1], #-8
    5b58:	05000000 	streq	r0, [r0, #-0]
    5b5c:	0000079a 	muleq	r0, sl, r7
    5b60:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    5b64:	05000000 	streq	r0, [r0, #-0]
    5b68:	0000072c 	andeq	r0, r0, ip, lsr #14
    5b6c:	68317802 	ldmdavs	r1!, {r1, fp, ip, sp, lr}
    5b70:	06000000 	streq	r0, [r0], -r0
    5b74:	0000053b 	andeq	r0, r0, fp, lsr r5
    5b78:	0182031c 	orreq	r0, r2, ip, lsl r3
    5b7c:	00012e10 	andeq	r2, r1, r0, lsl lr
    5b80:	082d0700 	stmdaeq	sp!, {r8, r9, sl}
    5b84:	86030000 	strhi	r0, [r3], -r0
    5b88:	00a31901 	adceq	r1, r3, r1, lsl #18
    5b8c:	23020000 	movwcs	r0, #8192	; 0x2000
    5b90:	03a00700 	moveq	r0, #0, 14
    5b94:	87030000 	strhi	r0, [r3, -r0]
    5b98:	00a31901 	adceq	r1, r3, r1, lsl #18
    5b9c:	23020000 	movwcs	r0, #8192	; 0x2000
    5ba0:	043d0704 	ldrteq	r0, [sp], #-1796	; 0xfffff8fc
    5ba4:	8a030000 	bhi	c5bac <SYSTICK_CYCLES+0x9cb6d>
    5ba8:	013a1b01 	teqeq	sl, r1, lsl #22
    5bac:	23020000 	movwcs	r0, #8192	; 0x2000
    5bb0:	01f20708 	mvnseq	r0, r8, lsl #14
    5bb4:	8b030000 	blhi	c5bbc <SYSTICK_CYCLES+0x9cb7d>
    5bb8:	00a31901 	adceq	r1, r3, r1, lsl #18
    5bbc:	23020000 	movwcs	r0, #8192	; 0x2000
    5bc0:	096f070c 	stmdbeq	pc!, {r2, r3, r8, r9, sl}^	; <UNPREDICTABLE>
    5bc4:	91030000 	mrsls	r0, (UNDEF: 3)
    5bc8:	01401a01 	cmpeq	r0, r1, lsl #20
    5bcc:	23020000 	movwcs	r0, #8192	; 0x2000
    5bd0:	001b0710 	andseq	r0, fp, r0, lsl r7
    5bd4:	92030000 	andls	r0, r3, #0
    5bd8:	01401a01 	cmpeq	r0, r1, lsl #20
    5bdc:	23020000 	movwcs	r0, #8192	; 0x2000
    5be0:	06090714 			; <UNDEFINED> instruction: 0x06090714
    5be4:	96030000 	strls	r0, [r3], -r0
    5be8:	01461b01 	cmpeq	r6, r1, lsl #22
    5bec:	23020000 	movwcs	r0, #8192	; 0x2000
    5bf0:	01080018 	tsteq	r8, r8, lsl r0
    5bf4:	0000013a 	andeq	r0, r0, sl, lsr r1
    5bf8:	0000a309 	andeq	sl, r0, r9, lsl #6
    5bfc:	040a0000 	streq	r0, [sl], #-0
    5c00:	0000012e 	andeq	r0, r0, lr, lsr #2
    5c04:	00af040a 	adceq	r0, pc, sl, lsl #8
    5c08:	040a0000 	streq	r0, [sl], #-0
    5c0c:	00000140 	andeq	r0, r0, r0, asr #2
    5c10:	00064a0b 	andeq	r4, r6, fp, lsl #20
    5c14:	019b0300 	orrseq	r0, fp, r0, lsl #6
    5c18:	0000af03 	andeq	sl, r0, r3, lsl #30
    5c1c:	7f040a00 	svcvc	0x00040a00
    5c20:	06000000 	streq	r0, [r0], -r0
    5c24:	0000034b 	andeq	r0, r0, fp, asr #6
    5c28:	01d603d8 	ldrsbeq	r0, [r6, #56]	; 0x38
    5c2c:	00048410 	andeq	r8, r4, r0, lsl r4
    5c30:	092c0700 	stmdbeq	ip!, {r8, r9, sl}
    5c34:	dd030000 	stcle	0, cr0, [r3, #-0]
    5c38:	00a31901 	adceq	r1, r3, r1, lsl #18
    5c3c:	23020000 	movwcs	r0, #8192	; 0x2000
    5c40:	079f0700 	ldreq	r0, [pc, r0, lsl #14]
    5c44:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    5c48:	00a31901 	adceq	r1, r3, r1, lsl #18
    5c4c:	23020000 	movwcs	r0, #8192	; 0x2000
    5c50:	01bc0704 			; <UNDEFINED> instruction: 0x01bc0704
    5c54:	df030000 	svcle	0x00030000
    5c58:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    5c5c:	23020000 	movwcs	r0, #8192	; 0x2000
    5c60:	09160708 	ldmdbeq	r6, {r3, r8, r9, sl}
    5c64:	e0030000 	and	r0, r3, r0
    5c68:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    5c6c:	23020000 	movwcs	r0, #8192	; 0x2000
    5c70:	0411070c 	ldreq	r0, [r1], #-1804	; 0xfffff8f4
    5c74:	e1030000 	mrs	r0, (UNDEF: 3)
    5c78:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    5c7c:	23020000 	movwcs	r0, #8192	; 0x2000
    5c80:	095a0710 	ldmdbeq	sl, {r4, r8, r9, sl}^
    5c84:	e2030000 	and	r0, r3, #0
    5c88:	00a31901 	adceq	r1, r3, r1, lsl #18
    5c8c:	23020000 	movwcs	r0, #8192	; 0x2000
    5c90:	21e20714 	mvncs	r0, r4, lsl r7
    5c94:	e3030000 	movw	r0, #12288	; 0x3000
    5c98:	00a31901 	adceq	r1, r3, r1, lsl #18
    5c9c:	23020000 	movwcs	r0, #8192	; 0x2000
    5ca0:	06250718 			; <UNDEFINED> instruction: 0x06250718
    5ca4:	e4030000 	str	r0, [r3], #-0
    5ca8:	00a31901 	adceq	r1, r3, r1, lsl #18
    5cac:	23020000 	movwcs	r0, #8192	; 0x2000
    5cb0:	06ba071c 	ssateq	r0, #27, ip, lsl #14
    5cb4:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    5cb8:	04841a01 	streq	r1, [r4], #2561	; 0xa01
    5cbc:	23020000 	movwcs	r0, #8192	; 0x2000
    5cc0:	01990720 	orrseq	r0, r9, r0, lsr #14
    5cc4:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    5cc8:	04841a01 	streq	r1, [r4], #2561	; 0xa01
    5ccc:	23020000 	movwcs	r0, #8192	; 0x2000
    5cd0:	05b10724 	ldreq	r0, [r1, #1828]!	; 0x724
    5cd4:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    5cd8:	01591a01 	cmpeq	r9, r1, lsl #20
    5cdc:	23020000 	movwcs	r0, #8192	; 0x2000
    5ce0:	02d90728 	sbcseq	r0, r9, #40, 14	; 0xa00000
    5ce4:	f2030000 	vhadd.s8	d0, d3, d0
    5ce8:	00971901 	addseq	r1, r7, r1, lsl #18
    5cec:	23020000 	movwcs	r0, #8192	; 0x2000
    5cf0:	0246072c 	subeq	r0, r6, #44, 14	; 0xb00000
    5cf4:	f3030000 	vhadd.u8	d0, d3, d0
    5cf8:	00971901 	addseq	r1, r7, r1, lsl #18
    5cfc:	23020000 	movwcs	r0, #8192	; 0x2000
    5d00:	01730730 	cmneq	r3, r0, lsr r7
    5d04:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    5d08:	00971901 	addseq	r1, r7, r1, lsl #18
    5d0c:	23020000 	movwcs	r0, #8192	; 0x2000
    5d10:	074b0734 	smlaldxeq	r0, fp, r4, r7
    5d14:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    5d18:	00971901 	addseq	r1, r7, r1, lsl #18
    5d1c:	23020000 	movwcs	r0, #8192	; 0x2000
    5d20:	00eb0738 	rsceq	r0, fp, r8, lsr r7
    5d24:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    5d28:	00971901 	addseq	r1, r7, r1, lsl #18
    5d2c:	23020000 	movwcs	r0, #8192	; 0x2000
    5d30:	035c073c 	cmpeq	ip, #60, 14	; 0xf00000
    5d34:	fb030000 	blx	c5d3e <SYSTICK_CYCLES+0x9ccff>
    5d38:	049b1b01 	ldreq	r1, [fp], #2817	; 0xb01
    5d3c:	23020000 	movwcs	r0, #8192	; 0x2000
    5d40:	01520740 	cmpeq	r2, r0, asr #14
    5d44:	03030000 	movweq	r0, #12288	; 0x3000
    5d48:	013a1b02 	teqeq	sl, r2, lsl #22
    5d4c:	23020000 	movwcs	r0, #8192	; 0x2000
    5d50:	01070744 	tsteq	r7, r4, asr #14
    5d54:	04030000 	streq	r0, [r3], #-0
    5d58:	00a31902 	adceq	r1, r3, r2, lsl #18
    5d5c:	23020000 	movwcs	r0, #8192	; 0x2000
    5d60:	033b0748 	teqeq	fp, #72, 14	; 0x1200000
    5d64:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    5d68:	014c1902 	cmpeq	ip, r2, lsl #18
    5d6c:	23020000 	movwcs	r0, #8192	; 0x2000
    5d70:	02ec074c 	rsceq	r0, ip, #76, 14	; 0x1300000
    5d74:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    5d78:	049b1b02 	ldreq	r1, [fp], #2818	; 0xb02
    5d7c:	23020000 	movwcs	r0, #8192	; 0x2000
    5d80:	05e90768 	strbeq	r0, [r9, #1896]!	; 0x768
    5d84:	0f030000 	svceq	0x00030000
    5d88:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    5d8c:	23020000 	movwcs	r0, #8192	; 0x2000
    5d90:	0732076c 	ldreq	r0, [r2, -ip, ror #14]!
    5d94:	11030000 	mrsne	r0, (UNDEF: 3)
    5d98:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    5d9c:	23020000 	movwcs	r0, #8192	; 0x2000
    5da0:	02120770 	andseq	r0, r2, #112, 14	; 0x1c00000
    5da4:	12030000 	andne	r0, r3, #0
    5da8:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    5dac:	23020000 	movwcs	r0, #8192	; 0x2000
    5db0:	07150774 			; <UNDEFINED> instruction: 0x07150774
    5db4:	13030000 	movwne	r0, #12288	; 0x3000
    5db8:	00a31902 	adceq	r1, r3, r2, lsl #18
    5dbc:	23020000 	movwcs	r0, #8192	; 0x2000
    5dc0:	03c60778 	biceq	r0, r6, #120, 14	; 0x1e00000
    5dc4:	14030000 	strne	r0, [r3], #-0
    5dc8:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    5dcc:	23020000 	movwcs	r0, #8192	; 0x2000
    5dd0:	0554077c 	ldrbeq	r0, [r4, #-1916]	; 0xfffff884
    5dd4:	15030000 	strne	r0, [r3, #-0]
    5dd8:	00971902 	addseq	r1, r7, r2, lsl #18
    5ddc:	23030000 	movwcs	r0, #12288	; 0x3000
    5de0:	e8070180 	stmda	r7, {r7, r8}
    5de4:	03000003 	movweq	r0, #3
    5de8:	97190216 			; <UNDEFINED> instruction: 0x97190216
    5dec:	03000000 	movweq	r0, #0
    5df0:	07018423 	streq	r8, [r1, -r3, lsr #8]
    5df4:	000008ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    5df8:	1a021f03 	bne	8da0c <SYSTICK_CYCLES+0x649cd>
    5dfc:	00000484 	andeq	r0, r0, r4, lsl #9
    5e00:	01882303 	orreq	r2, r8, r3, lsl #6
    5e04:	0007f007 	andeq	pc, r7, r7
    5e08:	02200300 	eoreq	r0, r0, #0, 6
    5e0c:	0004841a 	andeq	r8, r4, sl, lsl r4
    5e10:	8c230300 	stchi	3, cr0, [r3], #-0
    5e14:	02c10701 	sbceq	r0, r1, #262144	; 0x40000
    5e18:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    5e1c:	00971902 	addseq	r1, r7, r2, lsl #18
    5e20:	23030000 	movwcs	r0, #12288	; 0x3000
    5e24:	56070190 			; <UNDEFINED> instruction: 0x56070190
    5e28:	03000002 	movweq	r0, #2
    5e2c:	9719022f 	ldrls	r0, [r9, -pc, lsr #4]
    5e30:	03000000 	movweq	r0, #0
    5e34:	07019423 	streq	r9, [r1, -r3, lsr #8]
    5e38:	00000320 	andeq	r0, r0, r0, lsr #6
    5e3c:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    5e40:	00000097 	muleq	r0, r7, r0
    5e44:	01982303 	orrseq	r2, r8, r3, lsl #6
    5e48:	00027707 	andeq	r7, r2, r7, lsl #14
    5e4c:	02330300 	eorseq	r0, r3, #0, 6
    5e50:	00009719 	andeq	r9, r0, r9, lsl r7
    5e54:	9c230300 	stcls	3, cr0, [r3], #-0
    5e58:	00000701 	andeq	r0, r0, r1, lsl #14
    5e5c:	35030000 	strcc	r0, [r3, #-0]
    5e60:	05801a02 	streq	r1, [r0, #2562]	; 0xa02
    5e64:	23030000 	movwcs	r0, #12288	; 0x3000
    5e68:	c80701a0 	stmdagt	r7, {r5, r7, r8}
    5e6c:	0300001b 	movweq	r0, #27
    5e70:	a319023a 	tstge	r9, #-1610612733	; 0xa0000003
    5e74:	03000000 	movweq	r0, #0
    5e78:	0701a423 	streq	sl, [r1, -r3, lsr #8]
    5e7c:	00001c88 	andeq	r1, r0, r8, lsl #25
    5e80:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    5e84:	000000a3 	andeq	r0, r0, r3, lsr #1
    5e88:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    5e8c:	001b4107 	andseq	r4, fp, r7, lsl #2
    5e90:	02410300 	subeq	r0, r1, #0, 6
    5e94:	0000a319 	andeq	sl, r0, r9, lsl r3
    5e98:	ac230300 	stcge	3, cr0, [r3], #-0
    5e9c:	1d3f0701 	ldcne	7, cr0, [pc, #-4]!	; 5ea0 <_Min_Stack_Size+0x4ea0>
    5ea0:	45030000 	strmi	r0, [r3, #-0]
    5ea4:	00a31902 	adceq	r1, r3, r2, lsl #18
    5ea8:	23030000 	movwcs	r0, #12288	; 0x3000
    5eac:	580701b0 	stmdapl	r7, {r4, r5, r7, r8}
    5eb0:	0300001c 	movweq	r0, #28
    5eb4:	a3190248 	tstge	r9, #72, 4	; 0x80000004
    5eb8:	03000000 	movweq	r0, #0
    5ebc:	0701b423 	streq	fp, [r1, -r3, lsr #8]
    5ec0:	000007c3 	andeq	r0, r0, r3, asr #15
    5ec4:	1a024c03 	bne	98ed8 <SYSTICK_CYCLES+0x6fe99>
    5ec8:	00000484 	andeq	r0, r0, r4, lsl #9
    5ecc:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    5ed0:	001d1707 	andseq	r1, sp, r7, lsl #14
    5ed4:	024f0300 	subeq	r0, pc, #0, 6
    5ed8:	0000a319 	andeq	sl, r0, r9, lsl r3
    5edc:	bc230300 	stclt	3, cr0, [r3], #-0
    5ee0:	1b190701 	blne	647aec <__RAM_SIZE+0x547aec>
    5ee4:	52030000 	andpl	r0, r3, #0
    5ee8:	00a31902 	adceq	r1, r3, r2, lsl #18
    5eec:	23030000 	movwcs	r0, #12288	; 0x3000
    5ef0:	960701c0 	strls	r0, [r7], -r0, asr #3
    5ef4:	0300001a 	movweq	r0, #26
    5ef8:	a3190255 	tstge	r9, #1342177285	; 0x50000005
    5efc:	03000000 	movweq	r0, #0
    5f00:	0701c423 	streq	ip, [r1, -r3, lsr #8]
    5f04:	00001bec 	andeq	r1, r0, ip, ror #23
    5f08:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    5f0c:	000000a3 	andeq	r0, r0, r3, lsr #1
    5f10:	01c82303 	biceq	r2, r8, r3, lsl #6
    5f14:	0009c407 	andeq	ip, r9, r7, lsl #8
    5f18:	025d0300 	subseq	r0, sp, #0, 6
    5f1c:	0000761a 	andeq	r7, r0, sl, lsl r6
    5f20:	cc230300 	stcgt	3, cr0, [r3], #-0
    5f24:	04810701 	streq	r0, [r1], #1793	; 0x701
    5f28:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    5f2c:	00a31902 	adceq	r1, r3, r2, lsl #18
    5f30:	23030000 	movwcs	r0, #12288	; 0x3000
    5f34:	6d0701d0 	stfvss	f0, [r7, #-832]	; 0xfffffcc0
    5f38:	03000005 	movweq	r0, #5
    5f3c:	a319027d 	tstge	r9, #-805306361	; 0xd0000007
    5f40:	03000000 	movweq	r0, #0
    5f44:	0001d423 	andeq	sp, r1, r3, lsr #8
    5f48:	015f040a 	cmpeq	pc, sl, lsl #8
    5f4c:	01080000 	mrseq	r0, (UNDEF: 8)
    5f50:	0000049b 	muleq	r0, fp, r4
    5f54:	00048409 	andeq	r8, r4, r9, lsl #8
    5f58:	00a30900 	adceq	r0, r3, r0, lsl #18
    5f5c:	0a000000 	beq	5f64 <_Min_Stack_Size+0x4f64>
    5f60:	00048a04 	andeq	r8, r4, r4, lsl #20
    5f64:	07b30600 	ldreq	r0, [r3, r0, lsl #12]!
    5f68:	03340000 	teqeq	r4, #0
    5f6c:	8010037e 	andshi	r0, r0, lr, ror r3
    5f70:	07000005 	streq	r0, [r0, -r5]
    5f74:	0000018d 	andeq	r0, r0, sp, lsl #3
    5f78:	19038203 	stmdbne	r3, {r0, r1, r9, pc}
    5f7c:	000000a3 	andeq	r0, r0, r3, lsr #1
    5f80:	07002302 	streq	r2, [r0, -r2, lsl #6]
    5f84:	00000897 	muleq	r0, r7, r8
    5f88:	1a038503 	bne	e739c <SYSTICK_CYCLES+0xbe35d>
    5f8c:	00000159 	andeq	r0, r0, r9, asr r1
    5f90:	07042302 	streq	r2, [r4, -r2, lsl #6]
    5f94:	000006fc 	strdeq	r0, [r0], -ip
    5f98:	19038803 	stmdbne	r3, {r0, r1, fp, pc}
    5f9c:	00000097 	muleq	r0, r7, r0
    5fa0:	07082302 	streq	r2, [r8, -r2, lsl #6]
    5fa4:	000004cb 	andeq	r0, r0, fp, asr #9
    5fa8:	1a038c03 	bne	e8fbc <SYSTICK_CYCLES+0xbff7d>
    5fac:	0000081f 	andeq	r0, r0, pc, lsl r8
    5fb0:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    5fb4:	00000162 	andeq	r0, r0, r2, ror #2
    5fb8:	19039003 	stmdbne	r3, {r0, r1, ip, pc}
    5fbc:	00000097 	muleq	r0, r7, r0
    5fc0:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    5fc4:	00000121 	andeq	r0, r0, r1, lsr #2
    5fc8:	19039303 	stmdbne	r3, {r0, r1, r8, r9, ip, pc}
    5fcc:	00000097 	muleq	r0, r7, r0
    5fd0:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    5fd4:	000008cd 	andeq	r0, r0, sp, asr #17
    5fd8:	1a039803 	bne	ebfec <SYSTICK_CYCLES+0xc2fad>
    5fdc:	00000484 	andeq	r0, r0, r4, lsl #9
    5fe0:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    5fe4:	000006e3 	andeq	r0, r0, r3, ror #13
    5fe8:	19039903 	stmdbne	r3, {r0, r1, r8, fp, ip, pc}
    5fec:	00000097 	muleq	r0, r7, r0
    5ff0:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    5ff4:	000005d3 	ldrdeq	r0, [r0], -r3
    5ff8:	1a039d03 	bne	ed40c <SYSTICK_CYCLES+0xc43cd>
    5ffc:	00000580 	andeq	r0, r0, r0, lsl #11
    6000:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    6004:	000006a0 	andeq	r0, r0, r0, lsr #13
    6008:	1a039e03 	bne	ed81c <SYSTICK_CYCLES+0xc47dd>
    600c:	00000580 	andeq	r0, r0, r0, lsl #11
    6010:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    6014:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    6018:	1903a203 	stmdbne	r3, {r0, r1, r9, sp, pc}
    601c:	00000097 	muleq	r0, r7, r0
    6020:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    6024:	000009e0 	andeq	r0, r0, r0, ror #19
    6028:	1a03a603 	bne	ef83c <SYSTICK_CYCLES+0xc67fd>
    602c:	00000580 	andeq	r0, r0, r0, lsl #11
    6030:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    6034:	00000425 	andeq	r0, r0, r5, lsr #8
    6038:	1a03a703 	bne	efc4c <SYSTICK_CYCLES+0xc6c0d>
    603c:	00000580 	andeq	r0, r0, r0, lsl #11
    6040:	00302302 	eorseq	r2, r0, r2, lsl #6
    6044:	04a1040a 	strteq	r0, [r1], #1034	; 0x40a
    6048:	ef0b0000 	svc	0x000b0000
    604c:	03000008 	movweq	r0, #8
    6050:	5f030286 	svcpl	0x00030286
    6054:	06000001 	streq	r0, [r0], -r1
    6058:	0000104f 	andeq	r1, r0, pc, asr #32
    605c:	028b0330 	addeq	r0, fp, #48, 6	; 0xc0000000
    6060:	00066210 	andeq	r6, r6, r0, lsl r2
    6064:	0e510700 	cdpeq	7, 5, cr0, cr1, cr0, {0}
    6068:	8f030000 	svchi	0x00030000
    606c:	00a31902 	adceq	r1, r3, r2, lsl #18
    6070:	23020000 	movwcs	r0, #8192	; 0x2000
    6074:	0fe30700 	svceq	0x00e30700
    6078:	92030000 	andls	r0, r3, #0
    607c:	01591a02 	cmpeq	r9, r2, lsl #20
    6080:	23020000 	movwcs	r0, #8192	; 0x2000
    6084:	0f850704 	svceq	0x00850704
    6088:	95030000 	strls	r0, [r3, #-0]
    608c:	00971902 	addseq	r1, r7, r2, lsl #18
    6090:	23020000 	movwcs	r0, #8192	; 0x2000
    6094:	0eda0708 	cdpeq	7, 13, cr0, cr10, cr8, {0}
    6098:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    609c:	00971902 	addseq	r1, r7, r2, lsl #18
    60a0:	23020000 	movwcs	r0, #8192	; 0x2000
    60a4:	1023070c 	eorne	r0, r3, ip, lsl #14
    60a8:	9b030000 	blls	c60b0 <SYSTICK_CYCLES+0x9d071>
    60ac:	06621a02 	strbteq	r1, [r2], -r2, lsl #20
    60b0:	23020000 	movwcs	r0, #8192	; 0x2000
    60b4:	0e3d0710 	mrceq	7, 1, r0, cr13, cr0, {0}
    60b8:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    60bc:	06621a02 	strbteq	r1, [r2], -r2, lsl #20
    60c0:	23020000 	movwcs	r0, #8192	; 0x2000
    60c4:	0f390714 	svceq	0x00390714
    60c8:	a1030000 	mrsge	r0, (UNDEF: 3)
    60cc:	00a31902 	adceq	r1, r3, r2, lsl #18
    60d0:	23020000 	movwcs	r0, #8192	; 0x2000
    60d4:	0fab0718 	svceq	0x00ab0718
    60d8:	a4030000 	strge	r0, [r3], #-0
    60dc:	00971902 	addseq	r1, r7, r2, lsl #18
    60e0:	23020000 	movwcs	r0, #8192	; 0x2000
    60e4:	0f06071c 	svceq	0x0006071c
    60e8:	a9030000 	stmdbge	r3, {}	; <UNPREDICTABLE>
    60ec:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    60f0:	23020000 	movwcs	r0, #8192	; 0x2000
    60f4:	0f670720 	svceq	0x00670720
    60f8:	aa030000 	bge	c6100 <SYSTICK_CYCLES+0x9d0c1>
    60fc:	00971902 	addseq	r1, r7, r2, lsl #18
    6100:	23020000 	movwcs	r0, #8192	; 0x2000
    6104:	0f4c0724 	svceq	0x004c0724
    6108:	ae030000 	cdpge	0, 0, cr0, cr3, cr0, {0}
    610c:	06681a02 	strbteq	r1, [r8], -r2, lsl #20
    6110:	23020000 	movwcs	r0, #8192	; 0x2000
    6114:	0fc40728 	svceq	0x00c40728
    6118:	af030000 	svcge	0x00030000
    611c:	06681a02 	strbteq	r1, [r8], -r2, lsl #20
    6120:	23020000 	movwcs	r0, #8192	; 0x2000
    6124:	040a002c 	streq	r0, [sl], #-44	; 0xffffffd4
    6128:	0000008b 	andeq	r0, r0, fp, lsl #1
    612c:	0593040a 	ldreq	r0, [r3, #1034]	; 0x40a
    6130:	9d0b0000 	stcls	0, cr0, [fp, #-0]
    6134:	0300000f 	movweq	r0, #15
    6138:	930302c4 	movwls	r0, #12996	; 0x32c4
    613c:	06000005 	streq	r0, [r0], -r5
    6140:	00000460 	andeq	r0, r0, r0, ror #8
    6144:	02d90334 	sbcseq	r0, r9, #52, 6	; 0xd0000000
    6148:	00075a10 	andeq	r5, r7, r0, lsl sl
    614c:	04010700 	streq	r0, [r1], #-1792	; 0xfffff900
    6150:	dd030000 	stcle	0, cr0, [r3, #-0]
    6154:	00a31902 	adceq	r1, r3, r2, lsl #18
    6158:	23020000 	movwcs	r0, #8192	; 0x2000
    615c:	03740700 	cmneq	r4, #0, 14
    6160:	e0030000 	and	r0, r3, r0
    6164:	01591a02 	cmpeq	r9, r2, lsl #20
    6168:	23020000 	movwcs	r0, #8192	; 0x2000
    616c:	07700704 	ldrbeq	r0, [r0, -r4, lsl #14]!
    6170:	e3030000 	movw	r0, #12288	; 0x3000
    6174:	00a31902 	adceq	r1, r3, r2, lsl #18
    6178:	23020000 	movwcs	r0, #8192	; 0x2000
    617c:	08b60708 	ldmeq	r6!, {r3, r8, r9, sl}
    6180:	e6030000 	str	r0, [r3], -r0
    6184:	00971902 	addseq	r1, r7, r2, lsl #18
    6188:	23020000 	movwcs	r0, #8192	; 0x2000
    618c:	080b070c 	stmdaeq	fp, {r2, r3, r8, r9, sl}
    6190:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    6194:	06621a02 	strbteq	r1, [r2], -r2, lsl #20
    6198:	23020000 	movwcs	r0, #8192	; 0x2000
    619c:	11130710 	tstne	r3, r0, lsl r7
    61a0:	ed030000 	stc	0, cr0, [r3, #-0]
    61a4:	06621a02 	strbteq	r1, [r2], -r2, lsl #20
    61a8:	23020000 	movwcs	r0, #8192	; 0x2000
    61ac:	05280714 	streq	r0, [r8, #-1812]!	; 0xfffff8ec
    61b0:	f0030000 			; <UNDEFINED> instruction: 0xf0030000
    61b4:	06621a02 	strbteq	r1, [r2], -r2, lsl #20
    61b8:	23020000 	movwcs	r0, #8192	; 0x2000
    61bc:	03060718 	movweq	r0, #26392	; 0x6718
    61c0:	f3030000 	vhadd.u8	d0, d3, d0
    61c4:	00a31902 	adceq	r1, r3, r2, lsl #18
    61c8:	23020000 	movwcs	r0, #8192	; 0x2000
    61cc:	098d071c 	stmibeq	sp, {r2, r3, r4, r8, r9, sl}
    61d0:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
    61d4:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    61d8:	23020000 	movwcs	r0, #8192	; 0x2000
    61dc:	04ae0720 	strteq	r0, [lr], #1824	; 0x720
    61e0:	fe030000 	cdp2	0, 0, cr0, cr3, cr0, {0}
    61e4:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    61e8:	23020000 	movwcs	r0, #8192	; 0x2000
    61ec:	050b0724 	streq	r0, [fp, #-1828]	; 0xfffff8dc
    61f0:	ff030000 			; <UNDEFINED> instruction: 0xff030000
    61f4:	00971902 	addseq	r1, r7, r2, lsl #18
    61f8:	23020000 	movwcs	r0, #8192	; 0x2000
    61fc:	02a70728 	adceq	r0, r7, #40, 14	; 0xa00000
    6200:	03030000 	movweq	r0, #12288	; 0x3000
    6204:	075a1a03 	ldrbeq	r1, [sl, -r3, lsl #20]
    6208:	23020000 	movwcs	r0, #8192	; 0x2000
    620c:	0879072c 	ldmdaeq	r9!, {r2, r3, r5, r8, r9, sl}^
    6210:	04030000 	streq	r0, [r3], #-0
    6214:	075a1a03 	ldrbeq	r1, [sl, -r3, lsl #20]
    6218:	23020000 	movwcs	r0, #8192	; 0x2000
    621c:	040a0030 	streq	r0, [sl], #-48	; 0xffffffd0
    6220:	0000067b 	andeq	r0, r0, fp, ror r6
    6224:	0004740b 	andeq	r7, r4, fp, lsl #8
    6228:	03230300 			; <UNDEFINED> instruction: 0x03230300
    622c:	00067b03 	andeq	r7, r6, r3, lsl #22
    6230:	14920600 	ldrne	r0, [r2], #1536	; 0x600
    6234:	03240000 			; <UNDEFINED> instruction: 0x03240000
    6238:	0c100328 	ldceq	3, cr0, [r0], {40}	; 0x28
    623c:	07000008 	streq	r0, [r0, -r8]
    6240:	00001355 	andeq	r1, r0, r5, asr r3
    6244:	19032c03 	stmdbne	r3, {r0, r1, sl, fp, sp}
    6248:	000000a3 	andeq	r0, r0, r3, lsr #1
    624c:	07002302 	streq	r2, [r0, -r2, lsl #6]
    6250:	000014c3 	andeq	r1, r0, r3, asr #9
    6254:	1a032f03 	bne	d1e68 <SYSTICK_CYCLES+0xa8e29>
    6258:	00000159 	andeq	r0, r0, r9, asr r1
    625c:	07042302 	streq	r2, [r4, -r2, lsl #6]
    6260:	00001475 	andeq	r1, r0, r5, ror r4
    6264:	19033303 	stmdbne	r3, {r0, r1, r8, r9, ip, sp}
    6268:	000000a3 	andeq	r0, r0, r3, lsr #1
    626c:	07082302 	streq	r2, [r8, -r2, lsl #6]
    6270:	00001588 	andeq	r1, r0, r8, lsl #11
    6274:	19033703 	stmdbne	r3, {r0, r1, r8, r9, sl, ip, sp}
    6278:	00000097 	muleq	r0, r7, r0
    627c:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    6280:	000015f2 	strdeq	r1, [r0], -r2
    6284:	1a033c03 	bne	d5298 <SYSTICK_CYCLES+0xac259>
    6288:	00000484 	andeq	r0, r0, r4, lsl #9
    628c:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    6290:	00001441 	andeq	r1, r0, r1, asr #8
    6294:	19033d03 	stmdbne	r3, {r0, r1, r8, sl, fp, ip, sp}
    6298:	00000097 	muleq	r0, r7, r0
    629c:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    62a0:	00001642 	andeq	r1, r0, r2, asr #12
    62a4:	1a034103 	bne	d66b8 <SYSTICK_CYCLES+0xad679>
    62a8:	0000080c 	andeq	r0, r0, ip, lsl #16
    62ac:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    62b0:	00001562 	andeq	r1, r0, r2, ror #10
    62b4:	1a034203 	bne	d6ac8 <SYSTICK_CYCLES+0xada89>
    62b8:	0000080c 	andeq	r0, r0, ip, lsl #16
    62bc:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    62c0:	000017ec 	andeq	r1, r0, ip, ror #15
    62c4:	19034503 	stmdbne	r3, {r0, r1, r8, sl, lr}
    62c8:	000000a3 	andeq	r0, r0, r3, lsr #1
    62cc:	00202302 	eoreq	r2, r0, r2, lsl #6
    62d0:	076d040a 	strbeq	r0, [sp, -sl, lsl #8]!
    62d4:	ae0b0000 	cdpge	0, 0, cr0, cr11, cr0, {0}
    62d8:	03000014 	movweq	r0, #20
    62dc:	6d030361 	stcvs	3, cr0, [r3, #-388]	; 0xfffffe7c
    62e0:	0a000007 	beq	6304 <_Min_Stack_Size+0x5304>
    62e4:	00058604 	andeq	r8, r5, r4, lsl #12
    62e8:	16f50b00 	ldrbtne	r0, [r5], r0, lsl #22
    62ec:	c2030000 	andgt	r0, r3, #0
    62f0:	04a10303 	strteq	r0, [r1], #771	; 0x303
    62f4:	14060000 	strne	r0, [r6], #-0
    62f8:	38000015 	stmdacc	r0, {r0, r2, r4}
    62fc:	1003c703 	andne	ip, r3, r3, lsl #14
    6300:	00000921 	andeq	r0, r0, r1, lsr #18
    6304:	00136d07 	andseq	r6, r3, r7, lsl #26
    6308:	03cb0300 	biceq	r0, fp, #0, 6
    630c:	0000a319 	andeq	sl, r0, r9, lsl r3
    6310:	00230200 	eoreq	r0, r3, r0, lsl #4
    6314:	00178c07 	andseq	r8, r7, r7, lsl #24
    6318:	03ce0300 	biceq	r0, lr, #0, 6
    631c:	0001591a 	andeq	r5, r1, sl, lsl r9
    6320:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    6324:	00177607 	andseq	r7, r7, r7, lsl #12
    6328:	03d10300 	bicseq	r0, r1, #0, 6
    632c:	00009719 	andeq	r9, r0, r9, lsl r7
    6330:	08230200 	stmdaeq	r3!, {r9}
    6334:	00161707 	andseq	r1, r6, r7, lsl #14
    6338:	03d40300 	bicseq	r0, r4, #0, 6
    633c:	00009719 	andeq	r9, r0, r9, lsl r7
    6340:	0c230200 	sfmeq	f0, 4, [r3], #-0
    6344:	0018ce07 	andseq	ip, r8, r7, lsl #28
    6348:	03d80300 	bicseq	r0, r8, #0, 6
    634c:	00009719 	andeq	r9, r0, r9, lsl r7
    6350:	10230200 	eorne	r0, r3, r0, lsl #4
    6354:	0016b307 	andseq	fp, r6, r7, lsl #6
    6358:	03d90300 	bicseq	r0, r9, #0, 6
    635c:	00009719 	andeq	r9, r0, r9, lsl r7
    6360:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    6364:	00146607 	andseq	r6, r4, r7, lsl #12
    6368:	03dd0300 	bicseq	r0, sp, #0, 6
    636c:	0009211a 	andeq	r2, r9, sl, lsl r1
    6370:	18230200 	stmdane	r3!, {r9}
    6374:	00169607 	andseq	r9, r6, r7, lsl #12
    6378:	03de0300 	bicseq	r0, lr, #0, 6
    637c:	0009211a 	andeq	r2, r9, sl, lsl r1
    6380:	1c230200 	sfmne	f0, 4, [r3], #-0
    6384:	00168807 	andseq	r8, r6, r7, lsl #16
    6388:	03e20300 	mvneq	r0, #0, 6
    638c:	0009211a 	andeq	r2, r9, sl, lsl r1
    6390:	20230200 	eorcs	r0, r3, r0, lsl #4
    6394:	0018a207 	andseq	sl, r8, r7, lsl #4
    6398:	03e30300 	mvneq	r0, #0, 6
    639c:	0009211a 	andeq	r2, r9, sl, lsl r1
    63a0:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    63a4:	00175d07 	andseq	r5, r7, r7, lsl #26
    63a8:	03e80300 	mvneq	r0, #0, 6
    63ac:	0004841a 	andeq	r8, r4, sl, lsl r4
    63b0:	28230200 	stmdacs	r3!, {r9}
    63b4:	00162907 	andseq	r2, r6, r7, lsl #18
    63b8:	03e90300 	mvneq	r0, #0, 6
    63bc:	00009719 	andeq	r9, r0, r9, lsl r7
    63c0:	2c230200 	sfmcs	f0, 4, [r3], #-0
    63c4:	00154c07 	andseq	r4, r5, r7, lsl #24
    63c8:	03ed0300 	mvneq	r0, #0, 6
    63cc:	0009271a 	andeq	r2, r9, sl, lsl r7
    63d0:	30230200 	eorcc	r0, r3, r0, lsl #4
    63d4:	00174307 	andseq	r4, r7, r7, lsl #6
    63d8:	03ee0300 	mvneq	r0, #0, 6
    63dc:	0009271a 	andeq	r2, r9, sl, lsl r7
    63e0:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    63e4:	a3040a00 	movwge	r0, #18944	; 0x4a00
    63e8:	0a000000 	beq	63f0 <_Min_Stack_Size+0x53f0>
    63ec:	00083204 	andeq	r3, r8, r4, lsl #4
    63f0:	150b0b00 	strne	r0, [fp, #-2816]	; 0xfffff500
    63f4:	11030000 	mrsne	r0, (UNDEF: 3)
    63f8:	08320304 	ldmdaeq	r2!, {r2, r8, r9}
    63fc:	f7060000 			; <UNDEFINED> instruction: 0xf7060000
    6400:	2c000014 	stccs	0, cr0, [r0], {20}
    6404:	10041603 	andne	r1, r4, r3, lsl #12
    6408:	000009f9 	strdeq	r0, [r0], -r9
    640c:	0016a307 	andseq	sl, r6, r7, lsl #6
    6410:	041a0300 	ldreq	r0, [sl], #-768	; 0xfffffd00
    6414:	0000a319 	andeq	sl, r0, r9, lsl r3
    6418:	00230200 	eoreq	r0, r3, r0, lsl #4
    641c:	00171b07 	andseq	r1, r7, r7, lsl #22
    6420:	041d0300 	ldreq	r0, [sp], #-768	; 0xfffffd00
    6424:	0001591a 	andeq	r5, r1, sl, lsl r9
    6428:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    642c:	0017d907 	andseq	sp, r7, r7, lsl #18
    6430:	04210300 	strteq	r0, [r1], #-768	; 0xfffffd00
    6434:	0000a319 	andeq	sl, r0, r9, lsl r3
    6438:	08230200 	stmdaeq	r3!, {r9}
    643c:	00140007 	andseq	r0, r4, r7
    6440:	04260300 	strteq	r0, [r6], #-768	; 0xfffffd00
    6444:	0004841a 	andeq	r8, r4, sl, lsl r4
    6448:	0c230200 	sfmeq	f0, 4, [r3], #-0
    644c:	0018b107 	andseq	fp, r8, r7, lsl #2
    6450:	04270300 	strteq	r0, [r7], #-768	; 0xfffffd00
    6454:	00009719 	andeq	r9, r0, r9, lsl r7
    6458:	10230200 	eorne	r0, r3, r0, lsl #4
    645c:	0014dd07 	andseq	sp, r4, r7, lsl #26
    6460:	042b0300 	strteq	r0, [fp], #-768	; 0xfffffd00
    6464:	0009f91a 	andeq	pc, r9, sl, lsl r9	; <UNPREDICTABLE>
    6468:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    646c:	00137907 	andseq	r7, r3, r7, lsl #18
    6470:	042c0300 	strteq	r0, [ip], #-768	; 0xfffffd00
    6474:	0009f91a 	andeq	pc, r9, sl, lsl r9	; <UNPREDICTABLE>
    6478:	18230200 	stmdane	r3!, {r9}
    647c:	00166507 	andseq	r6, r6, r7, lsl #10
    6480:	04310300 	ldrteq	r0, [r1], #-768	; 0xfffffd00
    6484:	0000a319 	andeq	sl, r0, r9, lsl r3
    6488:	1c230200 	sfmne	f0, 4, [r3], #-0
    648c:	00141e07 	andseq	r1, r4, r7, lsl #28
    6490:	04340300 	ldrteq	r0, [r4], #-768	; 0xfffffd00
    6494:	0000a319 	andeq	sl, r0, r9, lsl r3
    6498:	20230200 	eorcs	r0, r3, r0, lsl #4
    649c:	00185c07 	andseq	r5, r8, r7, lsl #24
    64a0:	04370300 	ldrteq	r0, [r7], #-768	; 0xfffffd00
    64a4:	0000a319 	andeq	sl, r0, r9, lsl r3
    64a8:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    64ac:	00152507 	andseq	r2, r5, r7, lsl #10
    64b0:	043a0300 	ldrteq	r0, [sl], #-768	; 0xfffffd00
    64b4:	0000a319 	andeq	sl, r0, r9, lsl r3
    64b8:	28230200 	stmdacs	r3!, {r9}
    64bc:	3a040a00 	bcc	108cc4 <__RAM_SIZE+0x8cc4>
    64c0:	0b000009 	bleq	64ec <_Min_Stack_Size+0x54ec>
    64c4:	000016e8 	andeq	r1, r0, r8, ror #13
    64c8:	03044803 	movweq	r4, #18435	; 0x4803
    64cc:	0000093a 	andeq	r0, r0, sl, lsr r9
    64d0:	0013ad0c 	andseq	sl, r3, ip, lsl #26
    64d4:	1e6d0400 	cdpne	4, 6, cr0, cr13, cr0, {0}
    64d8:	00000076 	andeq	r0, r0, r6, ror r0
    64dc:	ce0d0101 	adfgte	f0, f5, f1
    64e0:	05000016 	streq	r0, [r0, #-22]	; 0xffffffea
    64e4:	0a2d2568 	beq	b4fa8c <__RAM_SIZE+0xa4fa8c>
    64e8:	05010000 	streq	r0, [r1, #-0]
    64ec:	00000003 	andeq	r0, r0, r3
    64f0:	ff040a00 			; <UNDEFINED> instruction: 0xff040a00
    64f4:	0d000009 	stceq	0, cr0, [r0, #-36]	; 0xffffffdc
    64f8:	0000180f 	andeq	r1, r0, pc, lsl #16
    64fc:	a3256d05 			; <UNDEFINED> instruction: 0xa3256d05
    6500:	01000000 	mrseq	r0, (UNDEF: 0)
    6504:	00000305 	andeq	r0, r0, r5, lsl #6
    6508:	640d0000 	strvs	r0, [sp], #-0
    650c:	05000016 	streq	r0, [r0, #-22]	; 0xffffffea
    6510:	00a32574 	adceq	r2, r3, r4, ror r5
    6514:	05010000 	streq	r0, [r1, #-0]
    6518:	00000003 	andeq	r0, r0, r3
    651c:	141d0d00 	ldrne	r0, [sp], #-3328	; 0xfffff300
    6520:	79050000 	stmdbvc	r5, {}	; <UNPREDICTABLE>
    6524:	0000a325 	andeq	sl, r0, r5, lsr #6
    6528:	03050100 	movweq	r0, #20736	; 0x5100
    652c:	00000000 	andeq	r0, r0, r0
    6530:	00185b0d 	andseq	r5, r8, sp, lsl #22
    6534:	257e0500 	ldrbcs	r0, [lr, #-1280]!	; 0xfffffb00
    6538:	000000a3 	andeq	r0, r0, r3, lsr #1
    653c:	00030501 	andeq	r0, r3, r1, lsl #10
    6540:	0d000000 	stceq	0, cr0, [r0, #-0]
    6544:	00001524 	andeq	r1, r0, r4, lsr #10
    6548:	a3258305 			; <UNDEFINED> instruction: 0xa3258305
    654c:	01000000 	mrseq	r0, (UNDEF: 0)
    6550:	00000305 	andeq	r0, r0, r5, lsl #6
    6554:	970d0000 	strls	r0, [sp, -r0]
    6558:	06000013 			; <UNDEFINED> instruction: 0x06000013
    655c:	0aa51d7b 	beq	fe94db50 <__RAM_segment_used_end__+0xc684db50>
    6560:	05010000 	streq	r0, [r1, #-0]
    6564:	00000003 	andeq	r0, r0, r3
    6568:	2d040a00 	vstrcs	s0, [r4, #-0]
    656c:	0d000009 	stceq	0, cr0, [r0, #-36]	; 0xffffffdc
    6570:	000013ca 	andeq	r1, r0, sl, asr #7
    6574:	a31d8006 	tstge	sp, #6
    6578:	01000000 	mrseq	r0, (UNDEF: 0)
    657c:	00000305 	andeq	r0, r0, r5, lsl #6
    6580:	860d0000 	strhi	r0, [sp], -r0
    6584:	07000018 	smladeq	r0, r8, r0, r0
    6588:	0ad12d6c 	beq	ff451b40 <__RAM_segment_used_end__+0xc7351b40>
    658c:	05010000 	streq	r0, [r1, #-0]
    6590:	00000003 	andeq	r0, r0, r3
    6594:	12040a00 	andne	r0, r4, #0, 20
    6598:	0d000008 	stceq	0, cr0, [r0, #-32]	; 0xffffffe0
    659c:	000013e2 	andeq	r1, r0, r2, ror #7
    65a0:	a32d7107 			; <UNDEFINED> instruction: 0xa32d7107
    65a4:	01000000 	mrseq	r0, (UNDEF: 0)
    65a8:	00000305 	andeq	r0, r0, r5, lsl #6
    65ac:	2b0d0000 	blcs	3465b4 <__RAM_SIZE+0x2465b4>
    65b0:	08000018 	stmdaeq	r0, {r3, r4}
    65b4:	0afd1d6f 	beq	fff4db78 <__RAM_segment_used_end__+0xc7e4db78>
    65b8:	05010000 	streq	r0, [r1, #-0]
    65bc:	00000003 	andeq	r0, r0, r3
    65c0:	25040a00 	strcs	r0, [r4, #-2560]	; 0xfffff600
    65c4:	0d000008 	stceq	0, cr0, [r0, #-32]	; 0xffffffe0
    65c8:	000015c5 	andeq	r1, r0, r5, asr #11
    65cc:	a31d7408 	tstge	sp, #8, 8	; 0x8000000
    65d0:	01000000 	mrseq	r0, (UNDEF: 0)
    65d4:	00000305 	andeq	r0, r0, r5, lsl #6
    65d8:	aa0d0000 	bge	3465e0 <__RAM_SIZE+0x2465e0>
    65dc:	09000015 	stmdbeq	r0, {r0, r2, r4}
    65e0:	0b292d6b 	bleq	a51b94 <__RAM_SIZE+0x951b94>
    65e4:	05010000 	streq	r0, [r1, #-0]
    65e8:	00000003 	andeq	r0, r0, r3
    65ec:	6e040a00 	vmlavs.f32	s0, s8, s0
    65f0:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    65f4:	000016fe 	strdeq	r1, [r0], -lr
    65f8:	a32d7009 			; <UNDEFINED> instruction: 0xa32d7009
    65fc:	01000000 	mrseq	r0, (UNDEF: 0)
    6600:	00000305 	andeq	r0, r0, r5, lsl #6
    6604:	ff0d0000 			; <UNDEFINED> instruction: 0xff0d0000
    6608:	0a000011 	beq	6654 <_Min_Stack_Size+0x5654>
    660c:	0b55257b 	bleq	154fc00 <__RAM_SIZE+0x144fc00>
    6610:	05010000 	streq	r0, [r1, #-0]
    6614:	0011a003 	andseq	sl, r1, r3
    6618:	60040a38 	andvs	r0, r4, r8, lsr sl
    661c:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
    6620:	0000123f 	andeq	r1, r0, pc, lsr r2
    6624:	a325800a 			; <UNDEFINED> instruction: 0xa325800a
    6628:	01000000 	mrseq	r0, (UNDEF: 0)
    662c:	119c0305 	orrsne	r0, ip, r5, lsl #6
    6630:	0c0e3800 	stceq	8, cr3, [lr], {-0}
    6634:	0100000a 	tsteq	r0, sl
    6638:	03050b33 	movweq	r0, #23347	; 0x5b33
    663c:	380011a4 	stmdacc	r0, {r2, r5, r7, r8, ip}
    6640:	1841010f 	stmdane	r1, {r0, r1, r2, r3, r8}^
    6644:	70010000 	andvc	r0, r1, r0
    6648:	1d640109 	stfnee	f0, [r4, #-36]!	; 0xffffffdc
    664c:	1d701000 	ldclne	0, cr1, [r0, #-0]
    6650:	32b21000 	adcscc	r1, r2, #0
    6654:	aa010000 	bge	4665c <SYSTICK_CYCLES+0x1d61d>
    6658:	1000000b 	andne	r0, r0, fp
    665c:	10001d6a 	andne	r1, r0, sl, ror #26
    6660:	00000baa 	andeq	r0, r0, sl, lsr #23
    6664:	001d6e10 	andseq	r6, sp, r0, lsl lr
    6668:	000bb910 	andeq	fp, fp, r0, lsl r9
    666c:	01110000 	tsteq	r1, r0
    6670:	00172d01 	andseq	r2, r7, r1, lsl #26
    6674:	00172d00 	andseq	r2, r7, r0, lsl #26
    6678:	01150b00 	tsteq	r5, r0, lsl #22
    667c:	0101120d 	tsteq	r1, sp, lsl #4
    6680:	000015dd 	ldrdeq	r1, [r0], -sp
    6684:	000015dd 	ldrdeq	r1, [r0], -sp
    6688:	000d3e0c 	andeq	r3, sp, ip, lsl #28
    668c:	00000144 	andeq	r0, r0, r4, asr #2
    6690:	10810002 	addne	r0, r1, r2
    6694:	01040000 	mrseq	r0, (UNDEF: 4)
    6698:	0000003d 	andeq	r0, r0, sp, lsr r0
    669c:	00190c0c 	andseq	r0, r9, ip, lsl #24
    66a0:	00065c00 	andeq	r5, r6, r0, lsl #24
    66a4:	00027800 	andeq	r7, r2, r0, lsl #16
	...
    66b0:	00278500 	eoreq	r8, r7, r0, lsl #10
    66b4:	07040200 	streq	r0, [r4, -r0, lsl #4]
    66b8:	00000239 	andeq	r0, r0, r9, lsr r2
    66bc:	69050403 	stmdbvs	r5, {r0, r1, sl}
    66c0:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    66c4:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    66c8:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    66cc:	00063e04 	andeq	r3, r6, r4, lsl #28
    66d0:	06010200 	streq	r0, [r1], -r0, lsl #4
    66d4:	0000086d 	andeq	r0, r0, sp, ror #16
    66d8:	6b080102 	blvs	206ae8 <__RAM_SIZE+0x106ae8>
    66dc:	02000008 	andeq	r0, r0, #8
    66e0:	06cf0502 	strbeq	r0, [pc], r2, lsl #10
    66e4:	02020000 	andeq	r0, r2, #0
    66e8:	00093907 	andeq	r3, r9, r7, lsl #18
    66ec:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    66f0:	000004ed 	andeq	r0, r0, sp, ror #9
    66f4:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    66f8:	02000002 	andeq	r0, r0, #2
    66fc:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    6700:	04040000 	streq	r0, [r4], #-0
    6704:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    6708:	05000008 	streq	r0, [r0, #-8]
    670c:	0000079a 	muleq	r0, sl, r7
    6710:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    6714:	06000000 	streq	r0, [r0], -r0
    6718:	0000007f 	andeq	r0, r0, pc, ror r0
    671c:	00072c05 	andeq	r2, r7, r5, lsl #24
    6720:	31780200 	cmncc	r8, r0, lsl #4
    6724:	00000068 	andeq	r0, r0, r8, rrx
    6728:	00009006 	andeq	r9, r0, r6
    672c:	13ad0700 			; <UNDEFINED> instruction: 0x13ad0700
    6730:	6d030000 	stcvs	0, cr0, [r3, #-0]
    6734:	0000761e 	andeq	r7, r0, lr, lsl r6
    6738:	08010100 	stmdaeq	r1, {r8}
    673c:	000018f4 	strdeq	r1, [r0], -r4
    6740:	21015304 	tstcs	r1, r4, lsl #6
    6744:	0000009c 	muleq	r0, ip, r0
    6748:	3e080101 	adfcce	f0, f0, f1
    674c:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    6750:	8b21018e 	blhi	846d90 <__RAM_SIZE+0x746d90>
    6754:	01000000 	mrseq	r0, (UNDEF: 0)
    6758:	4f010901 	svcmi	0x00010901
    675c:	01000008 	tsteq	r0, r8
    6760:	70010765 	andvc	r0, r1, r5, ror #14
    6764:	bc10001d 	ldclt	0, cr0, [r0], {29}
    6768:	d210001d 	andsle	r0, r0, #29
    676c:	01000032 	tsteq	r0, r2, lsr r0
    6770:	0000010d 	andeq	r0, r0, sp, lsl #2
    6774:	001d8c0a 	andseq	r8, sp, sl, lsl #24
    6778:	00010d10 	andeq	r0, r1, r0, lsl sp
    677c:	1d940a00 	vldrne	s0, [r4]
    6780:	011c1000 	tsteq	ip, r0
    6784:	a20a0000 	andge	r0, sl, #0
    6788:	2b10001d 	blcs	406804 <__RAM_SIZE+0x306804>
    678c:	0a000001 	beq	6798 <_Min_Stack_Size+0x5798>
    6790:	10001da6 	andne	r1, r0, r6, lsr #27
    6794:	00000139 	andeq	r0, r0, r9, lsr r1
    6798:	01010b00 	tsteq	r1, r0, lsl #22
    679c:	0000013c 	andeq	r0, r0, ip, lsr r1
    67a0:	0000013c 	andeq	r0, r0, ip, lsr r1
    67a4:	0d05bf05 	stceq	15, cr11, [r5, #-20]	; 0xffffffec
    67a8:	e001010b 	and	r0, r1, fp, lsl #2
    67ac:	e0000018 	and	r0, r0, r8, lsl r0
    67b0:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
    67b4:	0c0d0116 	stfeqs	f0, [sp], {22}
    67b8:	194d0101 	stmdbne	sp, {r0, r8}^
    67bc:	194d0000 	stmdbne	sp, {}^	; <UNPREDICTABLE>
    67c0:	40030000 	andmi	r0, r3, r0
    67c4:	01010c0d 	tsteq	r1, sp, lsl #24
    67c8:	00001841 	andeq	r1, r0, r1, asr #16
    67cc:	00001841 	andeq	r1, r0, r1, asr #16
    67d0:	000d3e03 	andeq	r3, sp, r3, lsl #28
    67d4:	00000955 	andeq	r0, r0, r5, asr r9
    67d8:	113f0002 	teqne	pc, r2
    67dc:	01040000 	mrseq	r0, (UNDEF: 4)
    67e0:	0000003d 	andeq	r0, r0, sp, lsr r0
    67e4:	001a530c 	andseq	r5, sl, ip, lsl #6
    67e8:	00065c00 	andeq	r5, r6, r0, lsl #24
    67ec:	00028800 	andeq	r8, r2, r0, lsl #16
	...
    67f8:	0028c000 	eoreq	ip, r8, r0
    67fc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    6800:	00000239 	andeq	r0, r0, r9, lsr r2
    6804:	69050403 	stmdbvs	r5, {r0, r1, sl}
    6808:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    680c:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    6810:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    6814:	00063e04 	andeq	r3, r6, r4, lsl #28
    6818:	06010200 	streq	r0, [r1], -r0, lsl #4
    681c:	0000086d 	andeq	r0, r0, sp, ror #16
    6820:	6b080102 	blvs	206c30 <__RAM_SIZE+0x106c30>
    6824:	02000008 	andeq	r0, r0, #8
    6828:	06cf0502 	strbeq	r0, [pc], r2, lsl #10
    682c:	02020000 	andeq	r0, r2, #0
    6830:	00093907 	andeq	r3, r9, r7, lsl #18
    6834:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    6838:	000004ed 	andeq	r0, r0, sp, ror #9
    683c:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    6840:	02000002 	andeq	r0, r0, #2
    6844:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    6848:	04040000 	streq	r0, [r4], #-0
    684c:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    6850:	05000008 	streq	r0, [r0, #-8]
    6854:	000008fa 	strdeq	r0, [r0], -sl
    6858:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    685c:	05000000 	streq	r0, [r0, #-0]
    6860:	000008f9 	strdeq	r0, [r0], -r9
    6864:	4c317402 	cfldrsmi	mvf7, [r1], #-8
    6868:	05000000 	streq	r0, [r0, #-0]
    686c:	0000079a 	muleq	r0, sl, r7
    6870:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    6874:	05000000 	streq	r0, [r0, #-0]
    6878:	0000072c 	andeq	r0, r0, ip, lsr #14
    687c:	68317802 	ldmdavs	r1!, {r1, fp, ip, sp, lr}
    6880:	06000000 	streq	r0, [r0], -r0
    6884:	000000a3 	andeq	r0, r0, r3, lsr #1
    6888:	00053b07 	andeq	r3, r5, r7, lsl #22
    688c:	82031c00 	andhi	r1, r3, #0, 24
    6890:	01331001 	teqeq	r3, r1
    6894:	2d080000 	stccs	0, cr0, [r8, #-0]
    6898:	03000008 	movweq	r0, #8
    689c:	a3190186 	tstge	r9, #-2147483615	; 0x80000021
    68a0:	02000000 	andeq	r0, r0, #0
    68a4:	a0080023 	andge	r0, r8, r3, lsr #32
    68a8:	03000003 	movweq	r0, #3
    68ac:	a3190187 	tstge	r9, #-1073741791	; 0xc0000021
    68b0:	02000000 	andeq	r0, r0, #0
    68b4:	3d080423 	cfstrscc	mvf0, [r8, #-140]	; 0xffffff74
    68b8:	03000004 	movweq	r0, #4
    68bc:	3f1b018a 	svccc	0x001b018a
    68c0:	02000001 	andeq	r0, r0, #1
    68c4:	f2080823 	vadd.i8	d0, d8, d19
    68c8:	03000001 	movweq	r0, #1
    68cc:	a319018b 	tstge	r9, #-1073741790	; 0xc0000022
    68d0:	02000000 	andeq	r0, r0, #0
    68d4:	6f080c23 	svcvs	0x00080c23
    68d8:	03000009 	movweq	r0, #9
    68dc:	451a0191 	ldrmi	r0, [sl, #-401]	; 0xfffffe6f
    68e0:	02000001 	andeq	r0, r0, #1
    68e4:	1b081023 	blne	20a978 <__RAM_SIZE+0x10a978>
    68e8:	03000000 	movweq	r0, #0
    68ec:	451a0192 	ldrmi	r0, [sl, #-402]	; 0xfffffe6e
    68f0:	02000001 	andeq	r0, r0, #1
    68f4:	09081423 	stmdbeq	r8, {r0, r1, r5, sl, ip}
    68f8:	03000006 	movweq	r0, #6
    68fc:	4b1b0196 	blmi	6c6f5c <__RAM_SIZE+0x5c6f5c>
    6900:	02000001 	andeq	r0, r0, #1
    6904:	09001823 	stmdbeq	r0, {r0, r1, r5, fp, ip}
    6908:	00013f01 	andeq	r3, r1, r1, lsl #30
    690c:	00a30a00 	adceq	r0, r3, r0, lsl #20
    6910:	0b000000 	bleq	6918 <_Min_Stack_Size+0x5918>
    6914:	00013304 	andeq	r3, r1, r4, lsl #6
    6918:	b4040b00 	strlt	r0, [r4], #-2816	; 0xfffff500
    691c:	0b000000 	bleq	6924 <_Min_Stack_Size+0x5924>
    6920:	00014504 	andeq	r4, r1, r4, lsl #10
    6924:	064a0c00 	strbeq	r0, [sl], -r0, lsl #24
    6928:	9b030000 	blls	c6930 <SYSTICK_CYCLES+0x9d8f1>
    692c:	00b40301 	adcseq	r0, r4, r1, lsl #6
    6930:	040b0000 	streq	r0, [fp], #-0
    6934:	0000007f 	andeq	r0, r0, pc, ror r0
    6938:	00034b07 	andeq	r4, r3, r7, lsl #22
    693c:	d603d800 	strle	sp, [r3], -r0, lsl #16
    6940:	04891001 	streq	r1, [r9], #1
    6944:	2c080000 	stccs	0, cr0, [r8], {-0}
    6948:	03000009 	movweq	r0, #9
    694c:	a31901dd 	tstge	r9, #1073741879	; 0x40000037
    6950:	02000000 	andeq	r0, r0, #0
    6954:	9f080023 	svcls	0x00080023
    6958:	03000007 	movweq	r0, #7
    695c:	a31901de 	tstge	r9, #-2147483593	; 0x80000037
    6960:	02000000 	andeq	r0, r0, #0
    6964:	bc080423 	cfstrslt	mvf0, [r8], {35}	; 0x23
    6968:	03000001 	movweq	r0, #1
    696c:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
    6970:	02000000 	andeq	r0, r0, #0
    6974:	16080823 	strne	r0, [r8], -r3, lsr #16
    6978:	03000009 	movweq	r0, #9
    697c:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
    6980:	02000000 	andeq	r0, r0, #0
    6984:	11080c23 	tstne	r8, r3, lsr #24
    6988:	03000004 	movweq	r0, #4
    698c:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
    6990:	02000000 	andeq	r0, r0, #0
    6994:	5a081023 	bpl	20aa28 <__RAM_SIZE+0x10aa28>
    6998:	03000009 	movweq	r0, #9
    699c:	a31901e2 	tstge	r9, #-2147483592	; 0x80000038
    69a0:	02000000 	andeq	r0, r0, #0
    69a4:	e2081423 	and	r1, r8, #587202560	; 0x23000000
    69a8:	03000021 	movweq	r0, #33	; 0x21
    69ac:	a31901e3 	tstge	r9, #-1073741768	; 0xc0000038
    69b0:	02000000 	andeq	r0, r0, #0
    69b4:	25081823 	strcs	r1, [r8, #-2083]	; 0xfffff7dd
    69b8:	03000006 	movweq	r0, #6
    69bc:	a31901e4 	tstge	r9, #228, 2	; 0x39
    69c0:	02000000 	andeq	r0, r0, #0
    69c4:	ba081c23 	blt	20da58 <__RAM_SIZE+0x10da58>
    69c8:	03000006 	movweq	r0, #6
    69cc:	891a01e8 	ldmdbhi	sl, {r3, r5, r6, r7, r8}
    69d0:	02000004 	andeq	r0, r0, #4
    69d4:	99082023 	stmdbls	r8, {r0, r1, r5, sp}
    69d8:	03000001 	movweq	r0, #1
    69dc:	891a01e9 	ldmdbhi	sl, {r0, r3, r5, r6, r7, r8}
    69e0:	02000004 	andeq	r0, r0, #4
    69e4:	b1082423 	tstlt	r8, r3, lsr #8
    69e8:	03000005 	movweq	r0, #5
    69ec:	5e1a01f1 	mrcpl	1, 0, r0, cr10, cr1, {7}
    69f0:	02000001 	andeq	r0, r0, #1
    69f4:	d9082823 	stmdble	r8, {r0, r1, r5, fp, sp}
    69f8:	03000002 	movweq	r0, #2
    69fc:	971901f2 			; <UNDEFINED> instruction: 0x971901f2
    6a00:	02000000 	andeq	r0, r0, #0
    6a04:	46082c23 	strmi	r2, [r8], -r3, lsr #24
    6a08:	03000002 	movweq	r0, #2
    6a0c:	971901f3 			; <UNDEFINED> instruction: 0x971901f3
    6a10:	02000000 	andeq	r0, r0, #0
    6a14:	73083023 	movwvc	r3, #32803	; 0x8023
    6a18:	03000001 	movweq	r0, #1
    6a1c:	971901f4 			; <UNDEFINED> instruction: 0x971901f4
    6a20:	02000000 	andeq	r0, r0, #0
    6a24:	4b083423 	blmi	213ab8 <__RAM_SIZE+0x113ab8>
    6a28:	03000007 	movweq	r0, #7
    6a2c:	971901f5 			; <UNDEFINED> instruction: 0x971901f5
    6a30:	02000000 	andeq	r0, r0, #0
    6a34:	eb083823 	bl	214ac8 <__RAM_SIZE+0x114ac8>
    6a38:	03000000 	movweq	r0, #0
    6a3c:	971901f6 			; <UNDEFINED> instruction: 0x971901f6
    6a40:	02000000 	andeq	r0, r0, #0
    6a44:	5c083c23 	stcpl	12, cr3, [r8], {35}	; 0x23
    6a48:	03000003 	movweq	r0, #3
    6a4c:	a01b01fb 			; <UNDEFINED> instruction: 0xa01b01fb
    6a50:	02000004 	andeq	r0, r0, #4
    6a54:	52084023 	andpl	r4, r8, #35	; 0x23
    6a58:	03000001 	movweq	r0, #1
    6a5c:	3f1b0203 	svccc	0x001b0203
    6a60:	02000001 	andeq	r0, r0, #1
    6a64:	07084423 	streq	r4, [r8, -r3, lsr #8]
    6a68:	03000001 	movweq	r0, #1
    6a6c:	a3190204 	tstge	r9, #4, 4	; 0x40000000
    6a70:	02000000 	andeq	r0, r0, #0
    6a74:	3b084823 	blcc	218b08 <__RAM_SIZE+0x118b08>
    6a78:	03000003 	movweq	r0, #3
    6a7c:	51190208 	tstpl	r9, r8, lsl #4
    6a80:	02000001 	andeq	r0, r0, #1
    6a84:	ec084c23 	stc	12, cr4, [r8], {35}	; 0x23
    6a88:	03000002 	movweq	r0, #2
    6a8c:	a01b020e 	andsge	r0, fp, lr, lsl #4
    6a90:	02000004 	andeq	r0, r0, #4
    6a94:	e9086823 	stmdb	r8, {r0, r1, r5, fp, sp, lr}
    6a98:	03000005 	movweq	r0, #5
    6a9c:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
    6aa0:	02000000 	andeq	r0, r0, #0
    6aa4:	32086c23 	andcc	r6, r8, #8960	; 0x2300
    6aa8:	03000007 	movweq	r0, #7
    6aac:	891a0211 	ldmdbhi	sl, {r0, r4, r9}
    6ab0:	02000004 	andeq	r0, r0, #4
    6ab4:	12087023 	andne	r7, r8, #35	; 0x23
    6ab8:	03000002 	movweq	r0, #2
    6abc:	891a0212 	ldmdbhi	sl, {r1, r4, r9}
    6ac0:	02000004 	andeq	r0, r0, #4
    6ac4:	15087423 	strne	r7, [r8, #-1059]	; 0xfffffbdd
    6ac8:	03000007 	movweq	r0, #7
    6acc:	a3190213 	tstge	r9, #805306369	; 0x30000001
    6ad0:	02000000 	andeq	r0, r0, #0
    6ad4:	c6087823 	strgt	r7, [r8], -r3, lsr #16
    6ad8:	03000003 	movweq	r0, #3
    6adc:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
    6ae0:	02000000 	andeq	r0, r0, #0
    6ae4:	54087c23 	strpl	r7, [r8], #-3107	; 0xfffff3dd
    6ae8:	03000005 	movweq	r0, #5
    6aec:	97190215 			; <UNDEFINED> instruction: 0x97190215
    6af0:	03000000 	movweq	r0, #0
    6af4:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
    6af8:	000003e8 	andeq	r0, r0, r8, ror #7
    6afc:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
    6b00:	00000097 	muleq	r0, r7, r0
    6b04:	01842303 	orreq	r2, r4, r3, lsl #6
    6b08:	0008ff08 	andeq	pc, r8, r8, lsl #30
    6b0c:	021f0300 	andseq	r0, pc, #0, 6
    6b10:	0004891a 	andeq	r8, r4, sl, lsl r9
    6b14:	88230300 	stmdahi	r3!, {r8, r9}
    6b18:	07f00801 	ldrbeq	r0, [r0, r1, lsl #16]!
    6b1c:	20030000 	andcs	r0, r3, r0
    6b20:	04891a02 	streq	r1, [r9], #2562	; 0xa02
    6b24:	23030000 	movwcs	r0, #12288	; 0x3000
    6b28:	c108018c 	smlabbgt	r8, ip, r1, r0
    6b2c:	03000002 	movweq	r0, #2
    6b30:	9719022e 	ldrls	r0, [r9, -lr, lsr #4]
    6b34:	03000000 	movweq	r0, #0
    6b38:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
    6b3c:	00000256 	andeq	r0, r0, r6, asr r2
    6b40:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
    6b44:	00000097 	muleq	r0, r7, r0
    6b48:	01942303 	orrseq	r2, r4, r3, lsl #6
    6b4c:	00032008 	andeq	r2, r3, r8
    6b50:	02300300 	eorseq	r0, r0, #0, 6
    6b54:	00009719 	andeq	r9, r0, r9, lsl r7
    6b58:	98230300 	stmdals	r3!, {r8, r9}
    6b5c:	02770801 	rsbseq	r0, r7, #65536	; 0x10000
    6b60:	33030000 	movwcc	r0, #12288	; 0x3000
    6b64:	00971902 	addseq	r1, r7, r2, lsl #18
    6b68:	23030000 	movwcs	r0, #12288	; 0x3000
    6b6c:	0008019c 	muleq	r8, ip, r1
    6b70:	03000000 	movweq	r0, #0
    6b74:	851a0235 	ldrhi	r0, [sl, #-565]	; 0xfffffdcb
    6b78:	03000005 	movweq	r0, #5
    6b7c:	0801a023 	stmdaeq	r1, {r0, r1, r5, sp, pc}
    6b80:	00001bc8 	andeq	r1, r0, r8, asr #23
    6b84:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
    6b88:	000000a3 	andeq	r0, r0, r3, lsr #1
    6b8c:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    6b90:	001c8808 	andseq	r8, ip, r8, lsl #16
    6b94:	023d0300 	eorseq	r0, sp, #0, 6
    6b98:	0000a319 	andeq	sl, r0, r9, lsl r3
    6b9c:	a8230300 	stmdage	r3!, {r8, r9}
    6ba0:	1b410801 	blne	1048bac <__RAM_SIZE+0xf48bac>
    6ba4:	41030000 	mrsmi	r0, (UNDEF: 3)
    6ba8:	00a31902 	adceq	r1, r3, r2, lsl #18
    6bac:	23030000 	movwcs	r0, #12288	; 0x3000
    6bb0:	3f0801ac 	svccc	0x000801ac
    6bb4:	0300001d 	movweq	r0, #29
    6bb8:	a3190245 	tstge	r9, #1342177284	; 0x50000004
    6bbc:	03000000 	movweq	r0, #0
    6bc0:	0801b023 	stmdaeq	r1, {r0, r1, r5, ip, sp, pc}
    6bc4:	00001c58 	andeq	r1, r0, r8, asr ip
    6bc8:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
    6bcc:	000000a3 	andeq	r0, r0, r3, lsr #1
    6bd0:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
    6bd4:	0007c308 	andeq	ip, r7, r8, lsl #6
    6bd8:	024c0300 	subeq	r0, ip, #0, 6
    6bdc:	0004891a 	andeq	r8, r4, sl, lsl r9
    6be0:	b8230300 	stmdalt	r3!, {r8, r9}
    6be4:	1d170801 	ldcne	8, cr0, [r7, #-4]
    6be8:	4f030000 	svcmi	0x00030000
    6bec:	00a31902 	adceq	r1, r3, r2, lsl #18
    6bf0:	23030000 	movwcs	r0, #12288	; 0x3000
    6bf4:	190801bc 	stmdbne	r8, {r2, r3, r4, r5, r7, r8}
    6bf8:	0300001b 	movweq	r0, #27
    6bfc:	a3190252 	tstge	r9, #536870917	; 0x20000005
    6c00:	03000000 	movweq	r0, #0
    6c04:	0801c023 	stmdaeq	r1, {r0, r1, r5, lr, pc}
    6c08:	00001a96 	muleq	r0, r6, sl
    6c0c:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
    6c10:	000000a3 	andeq	r0, r0, r3, lsr #1
    6c14:	01c42303 	biceq	r2, r4, r3, lsl #6
    6c18:	001bec08 	andseq	lr, fp, r8, lsl #24
    6c1c:	02590300 	subseq	r0, r9, #0, 6
    6c20:	0000a319 	andeq	sl, r0, r9, lsl r3
    6c24:	c8230300 	stmdagt	r3!, {r8, r9}
    6c28:	09c40801 	stmibeq	r4, {r0, fp}^
    6c2c:	5d030000 	stcpl	0, cr0, [r3, #-0]
    6c30:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    6c34:	23030000 	movwcs	r0, #12288	; 0x3000
    6c38:	810801cc 	smlabthi	r8, ip, r1, r0
    6c3c:	03000004 	movweq	r0, #4
    6c40:	a3190278 	tstge	r9, #120, 4	; 0x80000007
    6c44:	03000000 	movweq	r0, #0
    6c48:	0801d023 	stmdaeq	r1, {r0, r1, r5, ip, lr, pc}
    6c4c:	0000056d 	andeq	r0, r0, sp, ror #10
    6c50:	19027d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp, lr}
    6c54:	000000a3 	andeq	r0, r0, r3, lsr #1
    6c58:	01d42303 	bicseq	r2, r4, r3, lsl #6
    6c5c:	64040b00 	strvs	r0, [r4], #-2816	; 0xfffff500
    6c60:	09000001 	stmdbeq	r0, {r0}
    6c64:	0004a001 	andeq	sl, r4, r1
    6c68:	04890a00 	streq	r0, [r9], #2560	; 0xa00
    6c6c:	a30a0000 	movwge	r0, #40960	; 0xa000
    6c70:	00000000 	andeq	r0, r0, r0
    6c74:	048f040b 	streq	r0, [pc], #1035	; 6c7c <_Min_Stack_Size+0x5c7c>
    6c78:	b3070000 	movwlt	r0, #28672	; 0x7000
    6c7c:	34000007 	strcc	r0, [r0], #-7
    6c80:	10037e03 	andne	r7, r3, r3, lsl #28
    6c84:	00000585 	andeq	r0, r0, r5, lsl #11
    6c88:	00018d08 	andeq	r8, r1, r8, lsl #26
    6c8c:	03820300 	orreq	r0, r2, #0, 6
    6c90:	0000a319 	andeq	sl, r0, r9, lsl r3
    6c94:	00230200 	eoreq	r0, r3, r0, lsl #4
    6c98:	00089708 	andeq	r9, r8, r8, lsl #14
    6c9c:	03850300 	orreq	r0, r5, #0, 6
    6ca0:	00015e1a 	andeq	r5, r1, sl, lsl lr
    6ca4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    6ca8:	0006fc08 	andeq	pc, r6, r8, lsl #24
    6cac:	03880300 	orreq	r0, r8, #0, 6
    6cb0:	00009719 	andeq	r9, r0, r9, lsl r7
    6cb4:	08230200 	stmdaeq	r3!, {r9}
    6cb8:	0004cb08 	andeq	ip, r4, r8, lsl #22
    6cbc:	038c0300 	orreq	r0, ip, #0, 6
    6cc0:	00059e1a 	andeq	r9, r5, sl, lsl lr
    6cc4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    6cc8:	00016208 	andeq	r6, r1, r8, lsl #4
    6ccc:	03900300 	orrseq	r0, r0, #0, 6
    6cd0:	00009719 	andeq	r9, r0, r9, lsl r7
    6cd4:	10230200 	eorne	r0, r3, r0, lsl #4
    6cd8:	00012108 	andeq	r2, r1, r8, lsl #2
    6cdc:	03930300 	orrseq	r0, r3, #0, 6
    6ce0:	00009719 	andeq	r9, r0, r9, lsl r7
    6ce4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    6ce8:	0008cd08 	andeq	ip, r8, r8, lsl #26
    6cec:	03980300 	orrseq	r0, r8, #0, 6
    6cf0:	0004891a 	andeq	r8, r4, sl, lsl r9
    6cf4:	18230200 	stmdane	r3!, {r9}
    6cf8:	0006e308 	andeq	lr, r6, r8, lsl #6
    6cfc:	03990300 	orrseq	r0, r9, #0, 6
    6d00:	00009719 	andeq	r9, r0, r9, lsl r7
    6d04:	1c230200 	sfmne	f0, 4, [r3], #-0
    6d08:	0005d308 	andeq	sp, r5, r8, lsl #6
    6d0c:	039d0300 	orrseq	r0, sp, #0, 6
    6d10:	0005851a 	andeq	r8, r5, sl, lsl r5
    6d14:	20230200 	eorcs	r0, r3, r0, lsl #4
    6d18:	0006a008 	andeq	sl, r6, r8
    6d1c:	039e0300 	orrseq	r0, lr, #0, 6
    6d20:	0005851a 	andeq	r8, r5, sl, lsl r5
    6d24:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    6d28:	0001d008 	andeq	sp, r1, r8
    6d2c:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    6d30:	00009719 	andeq	r9, r0, r9, lsl r7
    6d34:	28230200 	stmdacs	r3!, {r9}
    6d38:	0009e008 	andeq	lr, r9, r8
    6d3c:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    6d40:	0005851a 	andeq	r8, r5, sl, lsl r5
    6d44:	2c230200 	sfmcs	f0, 4, [r3], #-0
    6d48:	00042508 	andeq	r2, r4, r8, lsl #10
    6d4c:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    6d50:	0005851a 	andeq	r8, r5, sl, lsl r5
    6d54:	30230200 	eorcc	r0, r3, r0, lsl #4
    6d58:	a6040b00 	strge	r0, [r4], -r0, lsl #22
    6d5c:	0c000004 	stceq	0, cr0, [r0], {4}
    6d60:	000008ef 	andeq	r0, r0, pc, ror #17
    6d64:	03028603 	movweq	r8, #9731	; 0x2603
    6d68:	00000164 	andeq	r0, r0, r4, ror #2
    6d6c:	008b040b 	addeq	r0, fp, fp, lsl #8
    6d70:	040b0000 	streq	r0, [fp], #-0
    6d74:	0000058b 	andeq	r0, r0, fp, lsl #11
    6d78:	0019d90d 	andseq	sp, r9, sp, lsl #18
    6d7c:	01400400 	cmpeq	r0, r0, lsl #8
    6d80:	00059e21 	andeq	r9, r5, r1, lsr #28
    6d84:	0d010100 	stfeqs	f0, [r1, #-0]
    6d88:	00001a25 	andeq	r1, r0, r5, lsr #20
    6d8c:	21014504 	tstcs	r1, r4, lsl #10
    6d90:	0000059e 	muleq	r0, lr, r5
    6d94:	0c0d0101 	stfeqs	f0, [sp], {1}
    6d98:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    6d9c:	a321014a 			; <UNDEFINED> instruction: 0xa321014a
    6da0:	01000000 	mrseq	r0, (UNDEF: 0)
    6da4:	18f40d01 	ldmne	r4!, {r0, r8, sl, fp}^
    6da8:	53040000 	movwpl	r0, #16384	; 0x4000
    6dac:	00af2101 	adceq	r2, pc, r1, lsl #2
    6db0:	01010000 	mrseq	r0, (UNDEF: 1)
    6db4:	1984010e 	stmibne	r4, {r1, r2, r3, r8}
    6db8:	60010000 	andvs	r0, r1, r0
    6dbc:	00970107 	addseq	r0, r7, r7, lsl #2
    6dc0:	1dbc0000 	ldcne	0, cr0, [ip]
    6dc4:	1f041000 	svcne	0x00041000
    6dc8:	32f21000 	rscscc	r1, r2, #0
    6dcc:	91010000 	mrsls	r0, (UNDEF: 1)
    6dd0:	0f000008 	svceq	0x00000008
    6dd4:	00001979 	andeq	r1, r0, r9, ror r9
    6dd8:	9e246001 	cdpls	0, 2, cr6, cr4, cr1, {0}
    6ddc:	16000005 	strne	r0, [r0], -r5
    6de0:	12000033 	andne	r0, r0, #51	; 0x33
    6de4:	0f000033 	svceq	0x00000033
    6de8:	0000122c 	andeq	r1, r0, ip, lsr #4
    6dec:	5e366001 	cdppl	0, 3, cr6, cr6, cr1, {0}
    6df0:	38000001 	stmdacc	r0, {r0}
    6df4:	34000033 	strcc	r0, [r0], #-51	; 0xffffffcd
    6df8:	0f000033 	svceq	0x00000033
    6dfc:	000019ca 	andeq	r1, r0, sl, asr #19
    6e00:	3f476001 	svccc	0x00476001
    6e04:	5a000001 	bpl	6e10 <_Min_Stack_Size+0x5e10>
    6e08:	56000033 			; <UNDEFINED> instruction: 0x56000033
    6e0c:	0f000033 	svceq	0x00000033
    6e10:	00001a00 	andeq	r1, r0, r0, lsl #20
    6e14:	a3686001 	cmnge	r8, #1
    6e18:	7c000000 	stcvc	0, cr0, [r0], {-0}
    6e1c:	78000033 	stmdavc	r0, {r0, r1, r4, r5}
    6e20:	0f000033 	svceq	0x00000033
    6e24:	00000920 	andeq	r0, r0, r0, lsr #18
    6e28:	76236101 	strtvc	r6, [r3], -r1, lsl #2
    6e2c:	a6000000 	strge	r0, [r0], -r0
    6e30:	9a000033 	bls	6f04 <_Min_Stack_Size+0x5f04>
    6e34:	0f000033 	svceq	0x00000033
    6e38:	00000964 	andeq	r0, r0, r4, ror #18
    6e3c:	a3366101 	teqge	r6, #1073741824	; 0x40000000
    6e40:	0b000000 	bleq	6e48 <_Min_Stack_Size+0x5e48>
    6e44:	fd000034 	stc2	0, cr0, [r0, #-208]	; 0xffffff30
    6e48:	0f000033 	svceq	0x00000033
    6e4c:	000002e3 	andeq	r0, r0, r3, ror #5
    6e50:	97476101 	strbls	r6, [r7, -r1, lsl #2]
    6e54:	6d000000 	stcvs	0, cr0, [r0, #-0]
    6e58:	69000034 	stmdbvs	r0, {r2, r4, r5}
    6e5c:	0f000034 	svceq	0x00000034
    6e60:	000000f5 	strdeq	r0, [r0], -r5
    6e64:	97566101 	ldrbls	r6, [r6, -r1, lsl #2]
    6e68:	91000000 	mrsls	r0, (UNDEF: 0)
    6e6c:	8d000034 	stchi	0, cr0, [r0, #-208]	; 0xffffff30
    6e70:	0f000034 	svceq	0x00000034
    6e74:	000021ec 	andeq	r2, r0, ip, ror #3
    6e78:	a3236201 			; <UNDEFINED> instruction: 0xa3236201
    6e7c:	b5000000 	strlt	r0, [r0, #-0]
    6e80:	b1000034 	tstlt	r0, r4, lsr r0
    6e84:	0f000034 	svceq	0x00000034
    6e88:	00001a8a 	andeq	r1, r0, sl, lsl #21
    6e8c:	97346201 	ldrls	r6, [r4, -r1, lsl #4]!
    6e90:	d9000000 	stmdble	r0, {}	; <UNPREDICTABLE>
    6e94:	d5000034 	strle	r0, [r0, #-52]	; 0xffffffcc
    6e98:	10000034 	andne	r0, r0, r4, lsr r0
    6e9c:	00000eee 	andeq	r0, r0, lr, ror #29
    6ea0:	97016501 	strls	r6, [r1, -r1, lsl #10]
    6ea4:	fd000000 	stc2	0, cr0, [r0, #-0]
    6ea8:	f9000034 			; <UNDEFINED> instruction: 0xf9000034
    6eac:	10000034 	andne	r0, r0, r4, lsr r0
    6eb0:	00001007 	andeq	r1, r0, r7
    6eb4:	9e1a6701 	cdpls	7, 1, cr6, cr10, cr1, {0}
    6eb8:	1d000005 	stcne	0, cr0, [r0, #-20]	; 0xffffffec
    6ebc:	1b000035 	blne	6f98 <_Min_Stack_Size+0x5f98>
    6ec0:	10000035 	andne	r0, r0, r5, lsr r0
    6ec4:	00001013 	andeq	r1, r0, r3, lsl r0
    6ec8:	9e1a6801 	cdpls	8, 1, cr6, cr10, cr1, {0}
    6ecc:	32000005 	andcc	r0, r0, #5
    6ed0:	30000035 	andcc	r0, r0, r5, lsr r0
    6ed4:	10000035 	andne	r0, r0, r5, lsr r0
    6ed8:	00001973 	andeq	r1, r0, r3, ror r9
    6edc:	9e1a6901 	vnmlsls.f16	s12, s20, s2	; <UNPREDICTABLE>
    6ee0:	49000005 	stmdbmi	r0, {r0, r2}
    6ee4:	45000035 	strmi	r0, [r0, #-53]	; 0xffffffcb
    6ee8:	10000035 	andne	r0, r0, r5, lsr r0
    6eec:	000019f0 	strdeq	r1, [r0], -r0
    6ef0:	97196a01 	ldrls	r6, [r9, -r1, lsl #20]
    6ef4:	73000000 	movwvc	r0, #0
    6ef8:	67000035 	smladxvs	r0, r5, r0, r0
    6efc:	10000035 	andne	r0, r0, r5, lsr r0
    6f00:	0000128f 	andeq	r1, r0, pc, lsl #5
    6f04:	981a6b01 	ldmdals	sl, {r0, r8, r9, fp, sp, lr}
    6f08:	cb000005 	blgt	6f24 <_Min_Stack_Size+0x5f24>
    6f0c:	c1000035 	tstgt	r0, r5, lsr r0
    6f10:	10000035 	andne	r0, r0, r5, lsr r0
    6f14:	000019ba 			; <UNDEFINED> instruction: 0x000019ba
    6f18:	a3196e01 	tstge	r9, #1, 28
    6f1c:	24000000 	strcs	r0, [r0], #-0
    6f20:	22000036 	andcs	r0, r0, #54	; 0x36
    6f24:	10000036 	andne	r0, r0, r6, lsr r0
    6f28:	00001996 	muleq	r0, r6, r9
    6f2c:	a3196f01 	tstge	r9, #1, 30
    6f30:	41000000 	mrsmi	r0, (UNDEF: 0)
    6f34:	37000036 	smladxcc	r0, r6, r0, r0
    6f38:	11000036 	tstne	r0, r6, lsr r0
    6f3c:	00000891 	muleq	r0, r1, r8
    6f40:	10001e5a 	andne	r1, r0, sl, asr lr
    6f44:	001e5a01 	andseq	r5, lr, r1, lsl #20
    6f48:	001e6010 	andseq	r6, lr, r0, lsl r0
    6f4c:	05e90110 	strbeq	r0, [r9, #272]!	; 0x110
    6f50:	000007b2 			; <UNDEFINED> instruction: 0x000007b2
    6f54:	0008a412 	andeq	sl, r8, r2, lsl r4
    6f58:	00369000 	eorseq	r9, r6, r0
    6f5c:	00368c00 	eorseq	r8, r6, r0, lsl #24
    6f60:	08cf1300 	stmiaeq	pc, {r8, r9, ip}^	; <UNPREDICTABLE>
    6f64:	1e5a0000 	cdpne	0, 5, cr0, cr10, cr0, {0}
    6f68:	5a041000 	bpl	10af70 <__RAM_SIZE+0xaf70>
    6f6c:	5e10001e 	mrcpl	0, 0, r0, cr0, cr14, {0}
    6f70:	0210001e 	andseq	r0, r0, #30
    6f74:	12130256 	andsne	r0, r3, #1610612741	; 0x60000005
    6f78:	000008e2 	andeq	r0, r0, r2, ror #17
    6f7c:	000036b0 			; <UNDEFINED> instruction: 0x000036b0
    6f80:	000036ae 	andeq	r3, r0, lr, lsr #13
    6f84:	b2140000 	andslt	r0, r4, #0
    6f88:	82000008 	andhi	r0, r0, #8
    6f8c:	0110001e 	tsteq	r0, lr, lsl r0
    6f90:	10001e82 	andne	r1, r0, r2, lsl #29
    6f94:	10001e86 	andne	r1, r0, r6, lsl #29
    6f98:	09016c01 	stmdbeq	r1, {r0, sl, fp, sp, lr}
    6f9c:	000007da 	ldrdeq	r0, [r0], -sl
    6fa0:	0008c115 	andeq	ip, r8, r5, lsl r1
    6fa4:	0036c500 	eorseq	ip, r6, r0, lsl #10
    6fa8:	0036c300 	eorseq	ip, r6, r0, lsl #6
    6fac:	f0140000 			; <UNDEFINED> instruction: 0xf0140000
    6fb0:	ae000008 	cdpge	0, 0, cr0, cr0, cr8, {0}
    6fb4:	0110001e 	tsteq	r0, lr, lsl r0
    6fb8:	10001eae 	andne	r1, r0, lr, lsr #29
    6fbc:	10001eb2 			; <UNDEFINED> instruction: 0x10001eb2
    6fc0:	0d012301 	stceq	3, cr2, [r1, #-4]
    6fc4:	00000802 	andeq	r0, r0, r2, lsl #16
    6fc8:	00090312 	andeq	r0, r9, r2, lsl r3
    6fcc:	0036da00 	eorseq	sp, r6, r0, lsl #20
    6fd0:	0036d800 	eorseq	sp, r6, r0, lsl #16
    6fd4:	b2140000 	andslt	r0, r4, #0
    6fd8:	d6000008 	strle	r0, [r0], -r8
    6fdc:	0110001e 	tsteq	r0, lr, lsl r0
    6fe0:	10001ed6 	ldrdne	r1, [r0], -r6
    6fe4:	10001eda 	ldrdne	r1, [r0], -sl
    6fe8:	09014d01 	stmdbeq	r1, {r0, r8, sl, fp, lr}
    6fec:	0000082a 	andeq	r0, r0, sl, lsr #16
    6ff0:	0008c115 	andeq	ip, r8, r5, lsl r1
    6ff4:	0036ef00 	eorseq	lr, r6, r0, lsl #30
    6ff8:	0036ed00 	eorseq	lr, r6, r0, lsl #26
    6ffc:	d4160000 	ldrle	r0, [r6], #-0
    7000:	1110001d 	tstne	r0, sp, lsl r0
    7004:	17000009 	strne	r0, [r0, -r9]
    7008:	10001df4 	strdne	r1, [r0], -r4
    700c:	0000091f 	andeq	r0, r0, pc, lsl r9
    7010:	0000084d 	andeq	r0, r0, sp, asr #16
    7014:	02500118 	subseq	r0, r0, #24, 2
    7018:	0118007b 	tsteq	r8, fp, ror r0
    701c:	00750252 	rsbseq	r0, r5, r2, asr r2
    7020:	1e141700 	cdpne	7, 1, cr1, cr4, cr0, {0}
    7024:	092d1000 	stmfdeq	sp!, {ip}
    7028:	086c0000 	stmdaeq	ip!, {}^	; <UNPREDICTABLE>
    702c:	01180000 	tsteq	r8, r0
    7030:	00740250 	rsbseq	r0, r4, r0, asr r2
    7034:	01510118 	cmpeq	r1, r8, lsl r1
    7038:	52011830 	andpl	r1, r1, #48, 16	; 0x300000
    703c:	00d80802 	sbcseq	r0, r8, r2, lsl #16
    7040:	001e5417 	andseq	r5, lr, r7, lsl r4
    7044:	00093a10 	andeq	r3, r9, r0, lsl sl
    7048:	00088000 	andeq	r8, r8, r0
    704c:	50011800 	andpl	r1, r1, r0, lsl #16
    7050:	00007402 	andeq	r7, r0, r2, lsl #8
    7054:	001ed619 	andseq	sp, lr, r9, lsl r6
    7058:	00094910 	andeq	r4, r9, r0, lsl r9
    705c:	50011800 	andpl	r1, r1, r0, lsl #16
    7060:	00007402 	andeq	r7, r0, r2, lsl #8
    7064:	0f241a00 	svceq	0x00241a00
    7068:	52020000 	andpl	r0, r2, #0
    706c:	97013702 	strls	r3, [r1, -r2, lsl #14]
    7070:	03000000 	movweq	r0, #0
    7074:	000008b2 			; <UNDEFINED> instruction: 0x000008b2
    7078:	000ead1b 	andeq	sl, lr, fp, lsl sp
    707c:	02540200 	subseq	r0, r4, #0, 4
    7080:	00009706 	andeq	r9, r0, r6, lsl #14
    7084:	991c0000 	ldmdbls	ip, {}	; <UNPREDICTABLE>
    7088:	0200000e 	andeq	r0, r0, #14
    708c:	01370249 	teqeq	r7, r9, asr #4
    7090:	0008cf03 	andeq	ip, r8, r3, lsl #30
    7094:	0ead1d00 	cdpeq	13, 10, cr1, cr13, cr0, {0}
    7098:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    709c:	00975002 	addseq	r5, r7, r2
    70a0:	1a000000 	bne	70a8 <_Min_Stack_Size+0x60a8>
    70a4:	00000ec2 	andeq	r0, r0, r2, asr #29
    70a8:	37023202 	strcc	r3, [r2, -r2, lsl #4]
    70ac:	00009701 	andeq	r9, r0, r1, lsl #14
    70b0:	08f00300 	ldmeq	r0!, {r8, r9}^
    70b4:	b11b0000 	tstlt	fp, r0
    70b8:	0200000e 	andeq	r0, r0, #14
    70bc:	97060234 	smladxls	r6, r4, r2, r0
    70c0:	00000000 	andeq	r0, r0, r0
    70c4:	0019661a 	andseq	r6, r9, sl, lsl r6
    70c8:	01fa0200 	mvnseq	r0, r0, lsl #4
    70cc:	00970137 	addseq	r0, r7, r7, lsr r1
    70d0:	11030000 	mrsne	r0, (UNDEF: 3)
    70d4:	1b000009 	blne	7100 <_Min_Stack_Size+0x6100>
    70d8:	000019aa 	andeq	r1, r0, sl, lsr #19
    70dc:	0601fc02 	streq	pc, [r1], -r2, lsl #24
    70e0:	00000097 	muleq	r0, r7, r0
    70e4:	01011e00 	tsteq	r1, r0, lsl #28
    70e8:	000019b5 			; <UNDEFINED> instruction: 0x000019b5
    70ec:	000019b5 			; <UNDEFINED> instruction: 0x000019b5
    70f0:	1e059005 	cdpne	0, 0, cr9, cr5, cr5, {0}
    70f4:	12880101 	addne	r0, r8, #1073741824	; 0x40000000
    70f8:	12880000 	addne	r0, r8, #0
    70fc:	21060000 	mrscs	r0, (UNDEF: 6)
    7100:	01011f09 	tsteq	r1, r9, lsl #30
    7104:	00001288 	andeq	r1, r0, r8, lsl #5
    7108:	0000127e 	andeq	r1, r0, lr, ror r2
    710c:	01200007 			; <UNDEFINED> instruction: 0x01200007
    7110:	001a3c01 	andseq	r3, sl, r1, lsl #24
    7114:	001a3c00 	andseq	r3, sl, r0, lsl #24
    7118:	01190400 	tsteq	r9, r0, lsl #8
    711c:	0101200d 	tsteq	r1, sp
    7120:	00001064 	andeq	r1, r0, r4, rrx
    7124:	00001064 	andeq	r1, r0, r4, rrx
    7128:	0d011e04 	stceq	14, cr1, [r1, #-16]
    712c:	00093300 	andeq	r3, r9, r0, lsl #6
    7130:	38000200 	stmdacc	r0, {r9}
    7134:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    7138:	00003d01 	andeq	r3, r0, r1, lsl #26
    713c:	1d700c00 	ldclne	12, cr0, [r0, #-0]
    7140:	065c0000 	ldrbeq	r0, [ip], -r0
    7144:	02980000 	addseq	r0, r8, #0
	...
    7150:	2c4a0000 	marcs	acc0, r0, sl
    7154:	04020000 	streq	r0, [r2], #-0
    7158:	00023907 	andeq	r3, r2, r7, lsl #18
    715c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    7160:	00746e69 	rsbseq	r6, r4, r9, ror #28
    7164:	e8050802 	stmda	r5, {r1, fp}
    7168:	02000004 	andeq	r0, r0, #4
    716c:	063e0408 	ldrteq	r0, [lr], -r8, lsl #8
    7170:	01020000 	mrseq	r0, (UNDEF: 2)
    7174:	00086d06 	andeq	r6, r8, r6, lsl #26
    7178:	08010200 	stmdaeq	r1, {r9}
    717c:	0000086b 	andeq	r0, r0, fp, ror #16
    7180:	cf050202 	svcgt	0x00050202
    7184:	02000006 	andeq	r0, r0, #6
    7188:	09390702 	ldmdbeq	r9!, {r1, r8, r9, sl}
    718c:	04020000 	streq	r0, [r2], #-0
    7190:	0004ed05 	andeq	lr, r4, r5, lsl #26
    7194:	07040200 	streq	r0, [r4, -r0, lsl #4]
    7198:	00000234 	andeq	r0, r0, r4, lsr r2
    719c:	2f070802 	svccs	0x00070802
    71a0:	04000002 	streq	r0, [r0], #-2
    71a4:	08010204 	stmdaeq	r1, {r2, r9}
    71a8:	00000874 	andeq	r0, r0, r4, ror r8
    71ac:	0008fa05 	andeq	pc, r8, r5, lsl #20
    71b0:	31730200 	cmncc	r3, r0, lsl #4
    71b4:	00000078 	andeq	r0, r0, r8, ror r0
    71b8:	00007f06 	andeq	r7, r0, r6, lsl #30
    71bc:	079a0500 	ldreq	r0, [sl, r0, lsl #10]
    71c0:	76020000 	strvc	r0, [r2], -r0
    71c4:	00002931 	andeq	r2, r0, r1, lsr r9
    71c8:	00900700 	addseq	r0, r0, r0, lsl #14
    71cc:	2c050000 	stccs	0, cr0, [r5], {-0}
    71d0:	02000007 	andeq	r0, r0, #7
    71d4:	00683178 	rsbeq	r3, r8, r8, ror r1
    71d8:	a1070000 	mrsge	r0, (UNDEF: 7)
    71dc:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    71e0:	0000007f 	andeq	r0, r0, pc, ror r0
    71e4:	000000c2 	andeq	r0, r0, r2, asr #1
    71e8:	00002909 	andeq	r2, r0, r9, lsl #18
    71ec:	0a005200 	beq	1b9f4 <_Min_Stack_Size+0x1a9f4>
    71f0:	00001c2c 	andeq	r1, r0, ip, lsr #24
    71f4:	21028702 	tstcs	r2, r2, lsl #14
    71f8:	000000b2 	strheq	r0, [r0], -r2
    71fc:	00030501 	andeq	r0, r3, r1, lsl #10
    7200:	0b000000 	bleq	7208 <_Min_Stack_Size+0x6208>
    7204:	0000053b 	andeq	r0, r0, fp, lsr r5
    7208:	0182031c 	orreq	r0, r2, ip, lsl r3
    720c:	00015510 	andeq	r5, r1, r0, lsl r5
    7210:	082d0c00 	stmdaeq	sp!, {sl, fp}
    7214:	86030000 	strhi	r0, [r3], -r0
    7218:	00a11901 	adceq	r1, r1, r1, lsl #18
    721c:	23020000 	movwcs	r0, #8192	; 0x2000
    7220:	03a00c00 	moveq	r0, #0, 24
    7224:	87030000 	strhi	r0, [r3, -r0]
    7228:	00a11901 	adceq	r1, r1, r1, lsl #18
    722c:	23020000 	movwcs	r0, #8192	; 0x2000
    7230:	043d0c04 	ldrteq	r0, [sp], #-3076	; 0xfffff3fc
    7234:	8a030000 	bhi	c723c <SYSTICK_CYCLES+0x9e1fd>
    7238:	01611b01 	cmneq	r1, r1, lsl #22
    723c:	23020000 	movwcs	r0, #8192	; 0x2000
    7240:	01f20c08 	mvnseq	r0, r8, lsl #24
    7244:	8b030000 	blhi	c724c <SYSTICK_CYCLES+0x9e20d>
    7248:	00a11901 	adceq	r1, r1, r1, lsl #18
    724c:	23020000 	movwcs	r0, #8192	; 0x2000
    7250:	096f0c0c 	stmdbeq	pc!, {r2, r3, sl, fp}^	; <UNPREDICTABLE>
    7254:	91030000 	mrsls	r0, (UNDEF: 3)
    7258:	01671a01 	cmneq	r7, r1, lsl #20
    725c:	23020000 	movwcs	r0, #8192	; 0x2000
    7260:	001b0c10 	andseq	r0, fp, r0, lsl ip
    7264:	92030000 	andls	r0, r3, #0
    7268:	01671a01 	cmneq	r7, r1, lsl #20
    726c:	23020000 	movwcs	r0, #8192	; 0x2000
    7270:	06090c14 			; <UNDEFINED> instruction: 0x06090c14
    7274:	96030000 	strls	r0, [r3], -r0
    7278:	016d1b01 	cmneq	sp, r1, lsl #22
    727c:	23020000 	movwcs	r0, #8192	; 0x2000
    7280:	010d0018 	tsteq	sp, r8, lsl r0
    7284:	00000161 	andeq	r0, r0, r1, ror #2
    7288:	0000a10e 	andeq	sl, r0, lr, lsl #2
    728c:	040f0000 	streq	r0, [pc], #-0	; 7294 <_Min_Stack_Size+0x6294>
    7290:	00000155 	andeq	r0, r0, r5, asr r1
    7294:	00d6040f 	sbcseq	r0, r6, pc, lsl #8
    7298:	040f0000 	streq	r0, [pc], #-0	; 72a0 <_Min_Stack_Size+0x62a0>
    729c:	00000167 	andeq	r0, r0, r7, ror #2
    72a0:	00064a10 	andeq	r4, r6, r0, lsl sl
    72a4:	019b0300 	orrseq	r0, fp, r0, lsl #6
    72a8:	0000d603 	andeq	sp, r0, r3, lsl #12
    72ac:	7f040f00 	svcvc	0x00040f00
    72b0:	0b000000 	bleq	72b8 <_Min_Stack_Size+0x62b8>
    72b4:	0000034b 	andeq	r0, r0, fp, asr #6
    72b8:	01d603d8 	ldrsbeq	r0, [r6, #56]	; 0x38
    72bc:	0004ab10 	andeq	sl, r4, r0, lsl fp
    72c0:	092c0c00 	stmdbeq	ip!, {sl, fp}
    72c4:	dd030000 	stcle	0, cr0, [r3, #-0]
    72c8:	00a11901 	adceq	r1, r1, r1, lsl #18
    72cc:	23020000 	movwcs	r0, #8192	; 0x2000
    72d0:	079f0c00 	ldreq	r0, [pc, r0, lsl #24]
    72d4:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    72d8:	00a11901 	adceq	r1, r1, r1, lsl #18
    72dc:	23020000 	movwcs	r0, #8192	; 0x2000
    72e0:	01bc0c04 			; <UNDEFINED> instruction: 0x01bc0c04
    72e4:	df030000 	svcle	0x00030000
    72e8:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    72ec:	23020000 	movwcs	r0, #8192	; 0x2000
    72f0:	09160c08 	ldmdbeq	r6, {r3, sl, fp}
    72f4:	e0030000 	and	r0, r3, r0
    72f8:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    72fc:	23020000 	movwcs	r0, #8192	; 0x2000
    7300:	04110c0c 	ldreq	r0, [r1], #-3084	; 0xfffff3f4
    7304:	e1030000 	mrs	r0, (UNDEF: 3)
    7308:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    730c:	23020000 	movwcs	r0, #8192	; 0x2000
    7310:	095a0c10 	ldmdbeq	sl, {r4, sl, fp}^
    7314:	e2030000 	and	r0, r3, #0
    7318:	00a11901 	adceq	r1, r1, r1, lsl #18
    731c:	23020000 	movwcs	r0, #8192	; 0x2000
    7320:	21e20c14 	mvncs	r0, r4, lsl ip
    7324:	e3030000 	movw	r0, #12288	; 0x3000
    7328:	00a11901 	adceq	r1, r1, r1, lsl #18
    732c:	23020000 	movwcs	r0, #8192	; 0x2000
    7330:	06250c18 			; <UNDEFINED> instruction: 0x06250c18
    7334:	e4030000 	str	r0, [r3], #-0
    7338:	00a11901 	adceq	r1, r1, r1, lsl #18
    733c:	23020000 	movwcs	r0, #8192	; 0x2000
    7340:	06ba0c1c 	ssateq	r0, #27, ip, lsl #24
    7344:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    7348:	04ab1a01 	strteq	r1, [fp], #2561	; 0xa01
    734c:	23020000 	movwcs	r0, #8192	; 0x2000
    7350:	01990c20 	orrseq	r0, r9, r0, lsr #24
    7354:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    7358:	04ab1a01 	strteq	r1, [fp], #2561	; 0xa01
    735c:	23020000 	movwcs	r0, #8192	; 0x2000
    7360:	05b10c24 	ldreq	r0, [r1, #3108]!	; 0xc24
    7364:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    7368:	01801a01 	orreq	r1, r0, r1, lsl #20
    736c:	23020000 	movwcs	r0, #8192	; 0x2000
    7370:	02d90c28 	sbcseq	r0, r9, #40, 24	; 0x2800
    7374:	f2030000 	vhadd.s8	d0, d3, d0
    7378:	00901901 	addseq	r1, r0, r1, lsl #18
    737c:	23020000 	movwcs	r0, #8192	; 0x2000
    7380:	02460c2c 	subeq	r0, r6, #44, 24	; 0x2c00
    7384:	f3030000 	vhadd.u8	d0, d3, d0
    7388:	00901901 	addseq	r1, r0, r1, lsl #18
    738c:	23020000 	movwcs	r0, #8192	; 0x2000
    7390:	01730c30 	cmneq	r3, r0, lsr ip
    7394:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    7398:	00901901 	addseq	r1, r0, r1, lsl #18
    739c:	23020000 	movwcs	r0, #8192	; 0x2000
    73a0:	074b0c34 	smlaldxeq	r0, fp, r4, ip
    73a4:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    73a8:	00901901 	addseq	r1, r0, r1, lsl #18
    73ac:	23020000 	movwcs	r0, #8192	; 0x2000
    73b0:	00eb0c38 	rsceq	r0, fp, r8, lsr ip
    73b4:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    73b8:	00901901 	addseq	r1, r0, r1, lsl #18
    73bc:	23020000 	movwcs	r0, #8192	; 0x2000
    73c0:	035c0c3c 	cmpeq	ip, #60, 24	; 0x3c00
    73c4:	fb030000 	blx	c73ce <SYSTICK_CYCLES+0x9e38f>
    73c8:	04c21b01 	strbeq	r1, [r2], #2817	; 0xb01
    73cc:	23020000 	movwcs	r0, #8192	; 0x2000
    73d0:	01520c40 	cmpeq	r2, r0, asr #24
    73d4:	03030000 	movweq	r0, #12288	; 0x3000
    73d8:	01611b02 	cmneq	r1, r2, lsl #22
    73dc:	23020000 	movwcs	r0, #8192	; 0x2000
    73e0:	01070c44 	tsteq	r7, r4, asr #24
    73e4:	04030000 	streq	r0, [r3], #-0
    73e8:	00a11902 	adceq	r1, r1, r2, lsl #18
    73ec:	23020000 	movwcs	r0, #8192	; 0x2000
    73f0:	033b0c48 	teqeq	fp, #72, 24	; 0x4800
    73f4:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    73f8:	01731902 	cmneq	r3, r2, lsl #18
    73fc:	23020000 	movwcs	r0, #8192	; 0x2000
    7400:	02ec0c4c 	rsceq	r0, ip, #76, 24	; 0x4c00
    7404:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    7408:	04c21b02 	strbeq	r1, [r2], #2818	; 0xb02
    740c:	23020000 	movwcs	r0, #8192	; 0x2000
    7410:	05e90c68 	strbeq	r0, [r9, #3176]!	; 0xc68
    7414:	0f030000 	svceq	0x00030000
    7418:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    741c:	23020000 	movwcs	r0, #8192	; 0x2000
    7420:	07320c6c 	ldreq	r0, [r2, -ip, ror #24]!
    7424:	11030000 	mrsne	r0, (UNDEF: 3)
    7428:	04ab1a02 	strteq	r1, [fp], #2562	; 0xa02
    742c:	23020000 	movwcs	r0, #8192	; 0x2000
    7430:	02120c70 	andseq	r0, r2, #112, 24	; 0x7000
    7434:	12030000 	andne	r0, r3, #0
    7438:	04ab1a02 	strteq	r1, [fp], #2562	; 0xa02
    743c:	23020000 	movwcs	r0, #8192	; 0x2000
    7440:	07150c74 			; <UNDEFINED> instruction: 0x07150c74
    7444:	13030000 	movwne	r0, #12288	; 0x3000
    7448:	00a11902 	adceq	r1, r1, r2, lsl #18
    744c:	23020000 	movwcs	r0, #8192	; 0x2000
    7450:	03c60c78 	biceq	r0, r6, #120, 24	; 0x7800
    7454:	14030000 	strne	r0, [r3], #-0
    7458:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    745c:	23020000 	movwcs	r0, #8192	; 0x2000
    7460:	05540c7c 	ldrbeq	r0, [r4, #-3196]	; 0xfffff384
    7464:	15030000 	strne	r0, [r3, #-0]
    7468:	00901902 	addseq	r1, r0, r2, lsl #18
    746c:	23030000 	movwcs	r0, #12288	; 0x3000
    7470:	e80c0180 	stmda	ip, {r7, r8}
    7474:	03000003 	movweq	r0, #3
    7478:	90190216 	andsls	r0, r9, r6, lsl r2
    747c:	03000000 	movweq	r0, #0
    7480:	0c018423 	cfstrseq	mvf8, [r1], {35}	; 0x23
    7484:	000008ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    7488:	1a021f03 	bne	8f09c <SYSTICK_CYCLES+0x6605d>
    748c:	000004ab 	andeq	r0, r0, fp, lsr #9
    7490:	01882303 	orreq	r2, r8, r3, lsl #6
    7494:	0007f00c 	andeq	pc, r7, ip
    7498:	02200300 	eoreq	r0, r0, #0, 6
    749c:	0004ab1a 	andeq	sl, r4, sl, lsl fp
    74a0:	8c230300 	stchi	3, cr0, [r3], #-0
    74a4:	02c10c01 	sbceq	r0, r1, #256	; 0x100
    74a8:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    74ac:	00901902 	addseq	r1, r0, r2, lsl #18
    74b0:	23030000 	movwcs	r0, #12288	; 0x3000
    74b4:	560c0190 			; <UNDEFINED> instruction: 0x560c0190
    74b8:	03000002 	movweq	r0, #2
    74bc:	9019022f 	andsls	r0, r9, pc, lsr #4
    74c0:	03000000 	movweq	r0, #0
    74c4:	0c019423 	cfstrseq	mvf9, [r1], {35}	; 0x23
    74c8:	00000320 	andeq	r0, r0, r0, lsr #6
    74cc:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    74d0:	00000090 	muleq	r0, r0, r0
    74d4:	01982303 	orrseq	r2, r8, r3, lsl #6
    74d8:	0002770c 	andeq	r7, r2, ip, lsl #14
    74dc:	02330300 	eorseq	r0, r3, #0, 6
    74e0:	00009019 	andeq	r9, r0, r9, lsl r0
    74e4:	9c230300 	stcls	3, cr0, [r3], #-0
    74e8:	00000c01 	andeq	r0, r0, r1, lsl #24
    74ec:	35030000 	strcc	r0, [r3, #-0]
    74f0:	05a71a02 	streq	r1, [r7, #2562]!	; 0xa02
    74f4:	23030000 	movwcs	r0, #12288	; 0x3000
    74f8:	c80c01a0 	stmdagt	ip, {r5, r7, r8}
    74fc:	0300001b 	movweq	r0, #27
    7500:	a119023a 	tstge	r9, sl, lsr r2
    7504:	03000000 	movweq	r0, #0
    7508:	0c01a423 	cfstrseq	mvf10, [r1], {35}	; 0x23
    750c:	00001c88 	andeq	r1, r0, r8, lsl #25
    7510:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    7514:	000000a1 	andeq	r0, r0, r1, lsr #1
    7518:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    751c:	001b410c 	andseq	r4, fp, ip, lsl #2
    7520:	02410300 	subeq	r0, r1, #0, 6
    7524:	0000a119 	andeq	sl, r0, r9, lsl r1
    7528:	ac230300 	stcge	3, cr0, [r3], #-0
    752c:	1d3f0c01 	ldcne	12, cr0, [pc, #-4]!	; 7530 <_Min_Stack_Size+0x6530>
    7530:	45030000 	strmi	r0, [r3, #-0]
    7534:	00a11902 	adceq	r1, r1, r2, lsl #18
    7538:	23030000 	movwcs	r0, #12288	; 0x3000
    753c:	580c01b0 	stmdapl	ip, {r4, r5, r7, r8}
    7540:	0300001c 	movweq	r0, #28
    7544:	a1190248 	tstge	r9, r8, asr #4
    7548:	03000000 	movweq	r0, #0
    754c:	0c01b423 	cfstrseq	mvf11, [r1], {35}	; 0x23
    7550:	000007c3 	andeq	r0, r0, r3, asr #15
    7554:	1a024c03 	bne	9a568 <SYSTICK_CYCLES+0x71529>
    7558:	000004ab 	andeq	r0, r0, fp, lsr #9
    755c:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    7560:	001d170c 	andseq	r1, sp, ip, lsl #14
    7564:	024f0300 	subeq	r0, pc, #0, 6
    7568:	0000a119 	andeq	sl, r0, r9, lsl r1
    756c:	bc230300 	stclt	3, cr0, [r3], #-0
    7570:	1b190c01 	blne	64a57c <__RAM_SIZE+0x54a57c>
    7574:	52030000 	andpl	r0, r3, #0
    7578:	00a11902 	adceq	r1, r1, r2, lsl #18
    757c:	23030000 	movwcs	r0, #12288	; 0x3000
    7580:	960c01c0 	strls	r0, [ip], -r0, asr #3
    7584:	0300001a 	movweq	r0, #26
    7588:	a1190255 	tstge	r9, r5, asr r2
    758c:	03000000 	movweq	r0, #0
    7590:	0c01c423 	cfstrseq	mvf12, [r1], {35}	; 0x23
    7594:	00001bec 	andeq	r1, r0, ip, ror #23
    7598:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    759c:	000000a1 	andeq	r0, r0, r1, lsr #1
    75a0:	01c82303 	biceq	r2, r8, r3, lsl #6
    75a4:	0009c40c 	andeq	ip, r9, ip, lsl #8
    75a8:	025d0300 	subseq	r0, sp, #0, 6
    75ac:	0000761a 	andeq	r7, r0, sl, lsl r6
    75b0:	cc230300 	stcgt	3, cr0, [r3], #-0
    75b4:	04810c01 	streq	r0, [r1], #3073	; 0xc01
    75b8:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    75bc:	00a11902 	adceq	r1, r1, r2, lsl #18
    75c0:	23030000 	movwcs	r0, #12288	; 0x3000
    75c4:	6d0c01d0 	stfvss	f0, [ip, #-832]	; 0xfffffcc0
    75c8:	03000005 	movweq	r0, #5
    75cc:	a119027d 	tstge	r9, sp, ror r2
    75d0:	03000000 	movweq	r0, #0
    75d4:	0001d423 	andeq	sp, r1, r3, lsr #8
    75d8:	0186040f 	orreq	r0, r6, pc, lsl #8
    75dc:	010d0000 	mrseq	r0, (UNDEF: 13)
    75e0:	000004c2 	andeq	r0, r0, r2, asr #9
    75e4:	0004ab0e 	andeq	sl, r4, lr, lsl #22
    75e8:	00a10e00 	adceq	r0, r1, r0, lsl #28
    75ec:	0f000000 	svceq	0x00000000
    75f0:	0004b104 	andeq	fp, r4, r4, lsl #2
    75f4:	07b30b00 	ldreq	r0, [r3, r0, lsl #22]!
    75f8:	03340000 	teqeq	r4, #0
    75fc:	a710037e 			; <UNDEFINED> instruction: 0xa710037e
    7600:	0c000005 	stceq	0, cr0, [r0], {5}
    7604:	0000018d 	andeq	r0, r0, sp, lsl #3
    7608:	19038203 	stmdbne	r3, {r0, r1, r9, pc}
    760c:	000000a1 	andeq	r0, r0, r1, lsr #1
    7610:	0c002302 	stceq	3, cr2, [r0], {2}
    7614:	00000897 	muleq	r0, r7, r8
    7618:	1a038503 	bne	e8a2c <SYSTICK_CYCLES+0xbf9ed>
    761c:	00000180 	andeq	r0, r0, r0, lsl #3
    7620:	0c042302 	stceq	3, cr2, [r4], {2}
    7624:	000006fc 	strdeq	r0, [r0], -ip
    7628:	19038803 	stmdbne	r3, {r0, r1, fp, pc}
    762c:	00000090 	muleq	r0, r0, r0
    7630:	0c082302 	stceq	3, cr2, [r8], {2}
    7634:	000004cb 	andeq	r0, r0, fp, asr #9
    7638:	1a038c03 	bne	ea64c <SYSTICK_CYCLES+0xc160d>
    763c:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
    7640:	0c0c2302 	stceq	3, cr2, [ip], {2}
    7644:	00000162 	andeq	r0, r0, r2, ror #2
    7648:	19039003 	stmdbne	r3, {r0, r1, ip, pc}
    764c:	00000090 	muleq	r0, r0, r0
    7650:	0c102302 	ldceq	3, cr2, [r0], {2}
    7654:	00000121 	andeq	r0, r0, r1, lsr #2
    7658:	19039303 	stmdbne	r3, {r0, r1, r8, r9, ip, pc}
    765c:	00000090 	muleq	r0, r0, r0
    7660:	0c142302 	ldceq	3, cr2, [r4], {2}
    7664:	000008cd 	andeq	r0, r0, sp, asr #17
    7668:	1a039803 	bne	ed67c <SYSTICK_CYCLES+0xc463d>
    766c:	000004ab 	andeq	r0, r0, fp, lsr #9
    7670:	0c182302 	ldceq	3, cr2, [r8], {2}
    7674:	000006e3 	andeq	r0, r0, r3, ror #13
    7678:	19039903 	stmdbne	r3, {r0, r1, r8, fp, ip, pc}
    767c:	00000090 	muleq	r0, r0, r0
    7680:	0c1c2302 	ldceq	3, cr2, [ip], {2}
    7684:	000005d3 	ldrdeq	r0, [r0], -r3
    7688:	1a039d03 	bne	eea9c <SYSTICK_CYCLES+0xc5a5d>
    768c:	000005a7 	andeq	r0, r0, r7, lsr #11
    7690:	0c202302 	stceq	3, cr2, [r0], #-8
    7694:	000006a0 	andeq	r0, r0, r0, lsr #13
    7698:	1a039e03 	bne	eeeac <SYSTICK_CYCLES+0xc5e6d>
    769c:	000005a7 	andeq	r0, r0, r7, lsr #11
    76a0:	0c242302 	stceq	3, cr2, [r4], #-8
    76a4:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    76a8:	1903a203 	stmdbne	r3, {r0, r1, r9, sp, pc}
    76ac:	00000090 	muleq	r0, r0, r0
    76b0:	0c282302 	stceq	3, cr2, [r8], #-8
    76b4:	000009e0 	andeq	r0, r0, r0, ror #19
    76b8:	1a03a603 	bne	f0ecc <SYSTICK_CYCLES+0xc7e8d>
    76bc:	000005a7 	andeq	r0, r0, r7, lsr #11
    76c0:	0c2c2302 	stceq	3, cr2, [ip], #-8
    76c4:	00000425 	andeq	r0, r0, r5, lsr #8
    76c8:	1a03a703 	bne	f12dc <SYSTICK_CYCLES+0xc829d>
    76cc:	000005a7 	andeq	r0, r0, r7, lsr #11
    76d0:	00302302 	eorseq	r2, r0, r2, lsl #6
    76d4:	04c8040f 	strbeq	r0, [r8], #1039	; 0x40f
    76d8:	ef100000 	svc	0x00100000
    76dc:	03000008 	movweq	r0, #8
    76e0:	86030286 	strhi	r0, [r3], -r6, lsl #5
    76e4:	0f000001 	svceq	0x00000001
    76e8:	0005ad04 	andeq	sl, r5, r4, lsl #26
    76ec:	1c3b1100 	ldfnes	f1, [fp], #-0
    76f0:	33040000 	movwcc	r0, #16384	; 0x4000
    76f4:	00762101 	rsbseq	r2, r6, r1, lsl #2
    76f8:	01010000 	mrseq	r0, (UNDEF: 1)
    76fc:	00112711 	andseq	r2, r1, r1, lsl r7
    7700:	01390400 	teqeq	r9, r0, lsl #8
    7704:	0005ba21 	andeq	fp, r5, r1, lsr #20
    7708:	11010100 	mrsne	r0, (UNDEF: 17)
    770c:	000019d9 	ldrdeq	r1, [r0], -r9
    7710:	21014004 	tstcs	r1, r4
    7714:	000005ba 			; <UNDEFINED> instruction: 0x000005ba
    7718:	25110101 	ldrcs	r0, [r1, #-257]	; 0xfffffeff
    771c:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    7720:	ba210145 	blt	847c3c <__RAM_SIZE+0x747c3c>
    7724:	01000005 	tsteq	r0, r5
    7728:	1a0c1101 	bne	30bb34 <__RAM_SIZE+0x20bb34>
    772c:	4a040000 	bmi	107734 <__RAM_SIZE+0x7734>
    7730:	00a12101 	adceq	r2, r1, r1, lsl #2
    7734:	01010000 	mrseq	r0, (UNDEF: 1)
    7738:	0018f411 	andseq	pc, r8, r1, lsl r4	; <UNPREDICTABLE>
    773c:	01530400 	cmpeq	r3, r0, lsl #8
    7740:	0000ad21 	andeq	sl, r0, r1, lsr #26
    7744:	08010100 	stmdaeq	r1, {r8}
    7748:	000000a1 	andeq	r0, r0, r1, lsr #1
    774c:	0000062a 	andeq	r0, r0, sl, lsr #12
    7750:	00002909 	andeq	r2, r0, r9, lsl #18
    7754:	11000000 	mrsne	r0, (UNDEF: 0)
    7758:	00001c13 	andeq	r1, r0, r3, lsl ip
    775c:	21015b04 	tstcs	r1, r4, lsl #22
    7760:	0000061a 	andeq	r0, r0, sl, lsl r6
    7764:	ba110101 	blt	447b70 <__RAM_SIZE+0x347b70>
    7768:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    776c:	9021017f 	eorls	r0, r1, pc, ror r1
    7770:	01000000 	mrseq	r0, (UNDEF: 0)
    7774:	05ba0801 	ldreq	r0, [sl, #2049]!	; 0x801
    7778:	06580000 	ldrbeq	r0, [r8], -r0
    777c:	29090000 	stmdbcs	r9, {}	; <UNPREDICTABLE>
    7780:	1f000000 	svcne	0x00000000
    7784:	1dab1100 	stfnes	f1, [fp]
    7788:	87040000 	strhi	r0, [r4, -r0]
    778c:	06482101 	strbeq	r2, [r8], -r1, lsl #2
    7790:	01010000 	mrseq	r0, (UNDEF: 1)
    7794:	00113e11 	andseq	r3, r1, r1, lsl lr
    7798:	018e0400 	orreq	r0, lr, r0, lsl #8
    779c:	00009c21 	andeq	r9, r0, r1, lsr #24
    77a0:	0d010100 	stfeqs	f0, [r1, #-0]
    77a4:	00068201 	andeq	r8, r6, r1, lsl #4
    77a8:	05ba0e00 	ldreq	r0, [sl, #3584]!	; 0xe00
    77ac:	11000000 	mrsne	r0, (UNDEF: 0)
    77b0:	00001aff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    77b4:	23019404 	movwcs	r9, #5124	; 0x1404
    77b8:	00000691 	muleq	r0, r1, r6
    77bc:	040f0101 	streq	r0, [pc], #-257	; 77c4 <_Min_Stack_Size+0x67c4>
    77c0:	00000676 	andeq	r0, r0, r6, ror r6
    77c4:	001dc411 	andseq	ip, sp, r1, lsl r4
    77c8:	01b80400 			; <UNDEFINED> instruction: 0x01b80400
    77cc:	0000a121 	andeq	sl, r0, r1, lsr #2
    77d0:	11010100 	mrsne	r0, (UNDEF: 17)
    77d4:	00001b72 	andeq	r1, r0, r2, ror fp
    77d8:	2301c104 	movwcs	ip, #4356	; 0x1104
    77dc:	00000691 	muleq	r0, r1, r6
    77e0:	c7110101 	ldrgt	r0, [r1, -r1, lsl #2]
    77e4:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    77e8:	a12101ca 	smlawtge	r1, sl, r1, r0
    77ec:	01000000 	mrseq	r0, (UNDEF: 0)
    77f0:	1c871101 	stfnes	f1, [r7], {1}
    77f4:	d0040000 	andle	r0, r4, r0
    77f8:	00a12101 	adceq	r2, r1, r1, lsl #2
    77fc:	01010000 	mrseq	r0, (UNDEF: 1)
    7800:	001b4011 	andseq	r4, fp, r1, lsl r0
    7804:	01d60400 	bicseq	r0, r6, r0, lsl #8
    7808:	0000a121 	andeq	sl, r0, r1, lsr #2
    780c:	11010100 	mrsne	r0, (UNDEF: 17)
    7810:	00001d3e 	andeq	r1, r0, lr, lsr sp
    7814:	2101dd04 	tstcs	r1, r4, lsl #26
    7818:	000000a1 	andeq	r0, r0, r1, lsr #1
    781c:	57110101 	ldrpl	r0, [r1, -r1, lsl #2]
    7820:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    7824:	a12101e3 	smulwtge	r1, r3, r1
    7828:	01000000 	mrseq	r0, (UNDEF: 0)
    782c:	1d161101 	ldfnes	f1, [r6, #-4]
    7830:	ea040000 	b	107838 <__RAM_SIZE+0x7838>
    7834:	00a12101 	adceq	r2, r1, r1, lsl #2
    7838:	01010000 	mrseq	r0, (UNDEF: 1)
    783c:	001b1811 	andseq	r1, fp, r1, lsl r8
    7840:	01f10400 	mvnseq	r0, r0, lsl #8
    7844:	0000a121 	andeq	sl, r0, r1, lsr #2
    7848:	11010100 	mrsne	r0, (UNDEF: 17)
    784c:	00001a95 	muleq	r0, r5, sl
    7850:	2101f704 	tstcs	r1, r4, lsl #14	; <UNPREDICTABLE>
    7854:	000000a1 	andeq	r0, r0, r1, lsr #1
    7858:	eb110101 	bl	447c64 <__RAM_SIZE+0x347c64>
    785c:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    7860:	a12101fd 	strdge	r0, [r1, -sp]!
    7864:	01000000 	mrseq	r0, (UNDEF: 0)
    7868:	1ad61101 	bne	ff58bc74 <__RAM_segment_used_end__+0xc748bc74>
    786c:	03040000 	movweq	r0, #16384	; 0x4000
    7870:	00a12102 	adceq	r2, r1, r2, lsl #2
    7874:	01010000 	mrseq	r0, (UNDEF: 1)
    7878:	001ce911 	andseq	lr, ip, r1, lsl r9
    787c:	02090400 	andeq	r0, r9, #0, 8
    7880:	0000a121 	andeq	sl, r0, r1, lsr #2
    7884:	11010100 	mrsne	r0, (UNDEF: 17)
    7888:	00001b9d 	muleq	r0, sp, fp
    788c:	21020f04 	tstcs	r2, r4, lsl #30
    7890:	000000a1 	andeq	r0, r0, r1, lsr #1
    7894:	ba080101 	blt	207ca0 <__RAM_SIZE+0x107ca0>
    7898:	79000005 	stmdbvc	r0, {r0, r2}
    789c:	09000007 	stmdbeq	r0, {r0, r1, r2}
    78a0:	00000029 	andeq	r0, r0, r9, lsr #32
    78a4:	c6110007 	ldrgt	r0, [r1], -r7
    78a8:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    78ac:	69210210 	stmdbvs	r1!, {r4, r9}
    78b0:	01000007 	tsteq	r0, r7
    78b4:	05c01201 	strbeq	r1, [r0, #513]	; 0x201
    78b8:	29010000 	stmdbcs	r1, {}	; <UNPREDICTABLE>
    78bc:	94030511 	strls	r0, [r3], #-1297	; 0xfffffaef
    78c0:	12380012 	eorsne	r0, r8, #18
    78c4:	000005cf 	andeq	r0, r0, pc, asr #11
    78c8:	05112f01 	ldreq	r2, [r1, #-3841]	; 0xfffff0ff
    78cc:	0011b803 	andseq	fp, r1, r3, lsl #16
    78d0:	05de1238 	ldrbeq	r1, [lr, #568]	; 0x238
    78d4:	36010000 	strcc	r0, [r1], -r0
    78d8:	bc030511 	cfstr32lt	mvfx0, [r3], {17}
    78dc:	12380011 	eorsne	r0, r8, #17
    78e0:	000005ed 	andeq	r0, r0, sp, ror #11
    78e4:	05113b01 	ldreq	r3, [r1, #-2817]	; 0xfffff4ff
    78e8:	0011b403 	andseq	fp, r1, r3, lsl #8
    78ec:	05fc1238 	ldrbeq	r1, [ip, #568]!	; 0x238
    78f0:	40010000 	andmi	r0, r1, r0
    78f4:	b0030511 	andlt	r0, r3, r1, lsl r5
    78f8:	12380011 	eorsne	r0, r8, #17
    78fc:	0000060b 	andeq	r0, r0, fp, lsl #12
    7900:	05114901 	ldreq	r4, [r1, #-2305]	; 0xfffff6ff
    7904:	00000403 	andeq	r0, r0, r3, lsl #8
    7908:	062a1238 			; <UNDEFINED> instruction: 0x062a1238
    790c:	51010000 	mrspl	r0, (UNDEF: 1)
    7910:	90030511 	andls	r0, r3, r1, lsl r5
    7914:	12380012 	eorsne	r0, r8, #18
    7918:	00000639 	andeq	r0, r0, r9, lsr r6
    791c:	05117501 	ldreq	r7, [r1, #-1281]	; 0xfffffaff
    7920:	0011c003 	andseq	ip, r1, r3
    7924:	06581238 			; <UNDEFINED> instruction: 0x06581238
    7928:	7d010000 	stcvc	0, cr0, [r1, #-0]
    792c:	10030511 	andne	r0, r3, r1, lsl r5
    7930:	12380012 	eorsne	r0, r8, #18
    7934:	00000667 	andeq	r0, r0, r7, ror #12
    7938:	05118401 	ldreq	r8, [r1, #-1025]	; 0xfffffbff
    793c:	00120c03 	andseq	r0, r2, r3, lsl #24
    7940:	06821238 			; <UNDEFINED> instruction: 0x06821238
    7944:	8a010000 	bhi	4794c <SYSTICK_CYCLES+0x1e90d>
    7948:	c4030513 	strgt	r0, [r3], #-1299	; 0xfffffaed
    794c:	12380011 	eorsne	r0, r8, #17
    7950:	00000697 	muleq	r0, r7, r6
    7954:	0511ae01 	ldreq	sl, [r1, #-3585]	; 0xfffff1ff
    7958:	0011a803 	andseq	sl, r1, r3, lsl #16
    795c:	06a61238 			; <UNDEFINED> instruction: 0x06a61238
    7960:	b7010000 	strlt	r0, [r1, -r0]
    7964:	ac030513 	cfstr32ge	mvfx0, [r3], {19}
    7968:	12380011 	eorsne	r0, r8, #17
    796c:	000006b5 			; <UNDEFINED> instruction: 0x000006b5
    7970:	0511c001 	ldreq	ip, [r1, #-1]
    7974:	0011f803 	andseq	pc, r1, r3, lsl #16
    7978:	06c41238 			; <UNDEFINED> instruction: 0x06c41238
    797c:	c6010000 	strgt	r0, [r1], -r0
    7980:	00030511 	andeq	r0, r3, r1, lsl r5
    7984:	12380012 	eorsne	r0, r8, #18
    7988:	000006d3 	ldrdeq	r0, [r0], -r3
    798c:	0511cc01 	ldreq	ip, [r1, #-3073]	; 0xfffff3ff
    7990:	0011fc03 	andseq	pc, r1, r3, lsl #24
    7994:	06e21238 			; <UNDEFINED> instruction: 0x06e21238
    7998:	d3010000 	movwle	r0, #4096	; 0x1000
    799c:	f0030511 			; <UNDEFINED> instruction: 0xf0030511
    79a0:	12380011 	eorsne	r0, r8, #17
    79a4:	000006f1 	strdeq	r0, [r0], -r1
    79a8:	0511d901 	ldreq	sp, [r1, #-2305]	; 0xfffff6ff
    79ac:	00000003 	andeq	r0, r0, r3
    79b0:	07001200 	streq	r1, [r0, -r0, lsl #4]
    79b4:	e0010000 	and	r0, r1, r0
    79b8:	04030511 	streq	r0, [r3], #-1297	; 0xfffffaef
    79bc:	12380012 	eorsne	r0, r8, #18
    79c0:	0000070f 	andeq	r0, r0, pc, lsl #14
    79c4:	0511e701 	ldreq	lr, [r1, #-1793]	; 0xfffff8ff
    79c8:	00000003 	andeq	r0, r0, r3
    79cc:	071e1200 	ldreq	r1, [lr, -r0, lsl #4]
    79d0:	ed010000 	stc	0, cr0, [r1, #-0]
    79d4:	08030511 	stmdaeq	r3, {r0, r4, r8, sl}
    79d8:	12380012 	eorsne	r0, r8, #18
    79dc:	0000072d 	andeq	r0, r0, sp, lsr #14
    79e0:	0511f301 	ldreq	pc, [r1, #-769]	; 0xfffffcff
    79e4:	00000003 	andeq	r0, r0, r3
    79e8:	073c1200 	ldreq	r1, [ip, -r0, lsl #4]!
    79ec:	f9010000 			; <UNDEFINED> instruction: 0xf9010000
    79f0:	ec030511 	cfstr32	mvfx0, [r3], {17}
    79f4:	12380011 	eorsne	r0, r8, #17
    79f8:	0000074b 	andeq	r0, r0, fp, asr #14
    79fc:	0511ff01 	ldreq	pc, [r1, #-3841]	; 0xfffff0ff
    7a00:	0011f403 	andseq	pc, r1, r3, lsl #8
    7a04:	075a1338 	smmlareq	sl, r8, r3, r1
    7a08:	05010000 	streq	r0, [r1, #-0]
    7a0c:	03051101 	movweq	r1, #20737	; 0x5101
    7a10:	380011c8 	stmdacc	r0, {r3, r6, r7, r8, ip}
    7a14:	00077913 	andeq	r7, r7, r3, lsl r9
    7a18:	01060100 	mrseq	r0, (UNDEF: 22)
    7a1c:	cc030511 	cfstr32gt	mvfx0, [r3], {17}
    7a20:	08380011 	ldmdaeq	r8!, {r0, r4}
    7a24:	0000008b 	andeq	r0, r0, fp, lsl #1
    7a28:	00000906 	andeq	r0, r0, r6, lsl #18
    7a2c:	00002909 	andeq	r2, r0, r9, lsl #18
    7a30:	06005600 	streq	r5, [r0], -r0, lsl #12
    7a34:	000008f6 	strdeq	r0, [r0], -r6
    7a38:	001cac0a 	andseq	sl, ip, sl, lsl #24
    7a3c:	010d0100 	mrseq	r0, (UNDEF: 29)
    7a40:	0009060c 	andeq	r0, r9, ip, lsl #12
    7a44:	03050100 	movweq	r0, #20736	; 0x5100
    7a48:	00000000 	andeq	r0, r0, r0
    7a4c:	172d0114 			; <UNDEFINED> instruction: 0x172d0114
    7a50:	40010000 	andmi	r0, r1, r0
    7a54:	04010701 	streq	r0, [r1], #-1793	; 0xfffff8ff
    7a58:	2410001f 	ldrcs	r0, [r0], #-31	; 0xffffffe1
    7a5c:	0210001f 	andseq	r0, r0, #31
    7a60:	0001007d 	andeq	r0, r1, sp, ror r0
    7a64:	000007ad 	andeq	r0, r0, sp, lsr #15
    7a68:	14420002 	strbne	r0, [r2], #-2
    7a6c:	01040000 	mrseq	r0, (UNDEF: 4)
    7a70:	0000003d 	andeq	r0, r0, sp, lsr r0
    7a74:	001ded0c 	andseq	lr, sp, ip, lsl #26
    7a78:	00065c00 	andeq	r5, r6, r0, lsl #24
    7a7c:	0002a800 	andeq	sl, r2, r0, lsl #16
	...
    7a88:	002d5400 	eoreq	r5, sp, r0, lsl #8
    7a8c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    7a90:	00000239 	andeq	r0, r0, r9, lsr r2
    7a94:	69050403 	stmdbvs	r5, {r0, r1, sl}
    7a98:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    7a9c:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    7aa0:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    7aa4:	00063e04 	andeq	r3, r6, r4, lsl #28
    7aa8:	06010200 	streq	r0, [r1], -r0, lsl #4
    7aac:	0000086d 	andeq	r0, r0, sp, ror #16
    7ab0:	6b080102 	blvs	207ec0 <__RAM_SIZE+0x107ec0>
    7ab4:	02000008 	andeq	r0, r0, #8
    7ab8:	06cf0502 	strbeq	r0, [pc], r2, lsl #10
    7abc:	02020000 	andeq	r0, r2, #0
    7ac0:	00093907 	andeq	r3, r9, r7, lsl #18
    7ac4:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    7ac8:	000004ed 	andeq	r0, r0, sp, ror #9
    7acc:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    7ad0:	02000002 	andeq	r0, r0, #2
    7ad4:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    7ad8:	04040000 	streq	r0, [r4], #-0
    7adc:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    7ae0:	05000008 	streq	r0, [r0, #-8]
    7ae4:	000008fa 	strdeq	r0, [r0], -sl
    7ae8:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    7aec:	05000000 	streq	r0, [r0, #-0]
    7af0:	0000079a 	muleq	r0, sl, r7
    7af4:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    7af8:	05000000 	streq	r0, [r0, #-0]
    7afc:	0000072c 	andeq	r0, r0, ip, lsr #14
    7b00:	68317802 	ldmdavs	r1!, {r1, fp, ip, sp, lr}
    7b04:	06000000 	streq	r0, [r0], -r0
    7b08:	0000053b 	andeq	r0, r0, fp, lsr r5
    7b0c:	0182031c 	orreq	r0, r2, ip, lsl r3
    7b10:	00012210 	andeq	r2, r1, r0, lsl r2
    7b14:	082d0700 	stmdaeq	sp!, {r8, r9, sl}
    7b18:	86030000 	strhi	r0, [r3], -r0
    7b1c:	00971901 	addseq	r1, r7, r1, lsl #18
    7b20:	23020000 	movwcs	r0, #8192	; 0x2000
    7b24:	03a00700 	moveq	r0, #0, 14
    7b28:	87030000 	strhi	r0, [r3, -r0]
    7b2c:	00971901 	addseq	r1, r7, r1, lsl #18
    7b30:	23020000 	movwcs	r0, #8192	; 0x2000
    7b34:	043d0704 	ldrteq	r0, [sp], #-1796	; 0xfffff8fc
    7b38:	8a030000 	bhi	c7b40 <SYSTICK_CYCLES+0x9eb01>
    7b3c:	012e1b01 			; <UNDEFINED> instruction: 0x012e1b01
    7b40:	23020000 	movwcs	r0, #8192	; 0x2000
    7b44:	01f20708 	mvnseq	r0, r8, lsl #14
    7b48:	8b030000 	blhi	c7b50 <SYSTICK_CYCLES+0x9eb11>
    7b4c:	00971901 	addseq	r1, r7, r1, lsl #18
    7b50:	23020000 	movwcs	r0, #8192	; 0x2000
    7b54:	096f070c 	stmdbeq	pc!, {r2, r3, r8, r9, sl}^	; <UNPREDICTABLE>
    7b58:	91030000 	mrsls	r0, (UNDEF: 3)
    7b5c:	01341a01 	teqeq	r4, r1, lsl #20
    7b60:	23020000 	movwcs	r0, #8192	; 0x2000
    7b64:	001b0710 	andseq	r0, fp, r0, lsl r7
    7b68:	92030000 	andls	r0, r3, #0
    7b6c:	01341a01 	teqeq	r4, r1, lsl #20
    7b70:	23020000 	movwcs	r0, #8192	; 0x2000
    7b74:	06090714 			; <UNDEFINED> instruction: 0x06090714
    7b78:	96030000 	strls	r0, [r3], -r0
    7b7c:	013a1b01 	teqeq	sl, r1, lsl #22
    7b80:	23020000 	movwcs	r0, #8192	; 0x2000
    7b84:	01080018 	tsteq	r8, r8, lsl r0
    7b88:	0000012e 	andeq	r0, r0, lr, lsr #2
    7b8c:	00009709 	andeq	r9, r0, r9, lsl #14
    7b90:	040a0000 	streq	r0, [sl], #-0
    7b94:	00000122 	andeq	r0, r0, r2, lsr #2
    7b98:	00a3040a 	adceq	r0, r3, sl, lsl #8
    7b9c:	040a0000 	streq	r0, [sl], #-0
    7ba0:	00000134 	andeq	r0, r0, r4, lsr r1
    7ba4:	00064a0b 	andeq	r4, r6, fp, lsl #20
    7ba8:	019b0300 	orrseq	r0, fp, r0, lsl #6
    7bac:	0000a303 	andeq	sl, r0, r3, lsl #6
    7bb0:	7f040a00 	svcvc	0x00040a00
    7bb4:	06000000 	streq	r0, [r0], -r0
    7bb8:	0000034b 	andeq	r0, r0, fp, asr #6
    7bbc:	01d603d8 	ldrsbeq	r0, [r6, #56]	; 0x38
    7bc0:	00047810 	andeq	r7, r4, r0, lsl r8
    7bc4:	092c0700 	stmdbeq	ip!, {r8, r9, sl}
    7bc8:	dd030000 	stcle	0, cr0, [r3, #-0]
    7bcc:	00971901 	addseq	r1, r7, r1, lsl #18
    7bd0:	23020000 	movwcs	r0, #8192	; 0x2000
    7bd4:	079f0700 	ldreq	r0, [pc, r0, lsl #14]
    7bd8:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    7bdc:	00971901 	addseq	r1, r7, r1, lsl #18
    7be0:	23020000 	movwcs	r0, #8192	; 0x2000
    7be4:	01bc0704 			; <UNDEFINED> instruction: 0x01bc0704
    7be8:	df030000 	svcle	0x00030000
    7bec:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    7bf0:	23020000 	movwcs	r0, #8192	; 0x2000
    7bf4:	09160708 	ldmdbeq	r6, {r3, r8, r9, sl}
    7bf8:	e0030000 	and	r0, r3, r0
    7bfc:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    7c00:	23020000 	movwcs	r0, #8192	; 0x2000
    7c04:	0411070c 	ldreq	r0, [r1], #-1804	; 0xfffff8f4
    7c08:	e1030000 	mrs	r0, (UNDEF: 3)
    7c0c:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    7c10:	23020000 	movwcs	r0, #8192	; 0x2000
    7c14:	095a0710 	ldmdbeq	sl, {r4, r8, r9, sl}^
    7c18:	e2030000 	and	r0, r3, #0
    7c1c:	00971901 	addseq	r1, r7, r1, lsl #18
    7c20:	23020000 	movwcs	r0, #8192	; 0x2000
    7c24:	21e20714 	mvncs	r0, r4, lsl r7
    7c28:	e3030000 	movw	r0, #12288	; 0x3000
    7c2c:	00971901 	addseq	r1, r7, r1, lsl #18
    7c30:	23020000 	movwcs	r0, #8192	; 0x2000
    7c34:	06250718 			; <UNDEFINED> instruction: 0x06250718
    7c38:	e4030000 	str	r0, [r3], #-0
    7c3c:	00971901 	addseq	r1, r7, r1, lsl #18
    7c40:	23020000 	movwcs	r0, #8192	; 0x2000
    7c44:	06ba071c 	ssateq	r0, #27, ip, lsl #14
    7c48:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    7c4c:	04781a01 	ldrbteq	r1, [r8], #-2561	; 0xfffff5ff
    7c50:	23020000 	movwcs	r0, #8192	; 0x2000
    7c54:	01990720 	orrseq	r0, r9, r0, lsr #14
    7c58:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    7c5c:	04781a01 	ldrbteq	r1, [r8], #-2561	; 0xfffff5ff
    7c60:	23020000 	movwcs	r0, #8192	; 0x2000
    7c64:	05b10724 	ldreq	r0, [r1, #1828]!	; 0x724
    7c68:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    7c6c:	014d1a01 	cmpeq	sp, r1, lsl #20
    7c70:	23020000 	movwcs	r0, #8192	; 0x2000
    7c74:	02d90728 	sbcseq	r0, r9, #40, 14	; 0xa00000
    7c78:	f2030000 	vhadd.s8	d0, d3, d0
    7c7c:	008b1901 	addeq	r1, fp, r1, lsl #18
    7c80:	23020000 	movwcs	r0, #8192	; 0x2000
    7c84:	0246072c 	subeq	r0, r6, #44, 14	; 0xb00000
    7c88:	f3030000 	vhadd.u8	d0, d3, d0
    7c8c:	008b1901 	addeq	r1, fp, r1, lsl #18
    7c90:	23020000 	movwcs	r0, #8192	; 0x2000
    7c94:	01730730 	cmneq	r3, r0, lsr r7
    7c98:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    7c9c:	008b1901 	addeq	r1, fp, r1, lsl #18
    7ca0:	23020000 	movwcs	r0, #8192	; 0x2000
    7ca4:	074b0734 	smlaldxeq	r0, fp, r4, r7
    7ca8:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    7cac:	008b1901 	addeq	r1, fp, r1, lsl #18
    7cb0:	23020000 	movwcs	r0, #8192	; 0x2000
    7cb4:	00eb0738 	rsceq	r0, fp, r8, lsr r7
    7cb8:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    7cbc:	008b1901 	addeq	r1, fp, r1, lsl #18
    7cc0:	23020000 	movwcs	r0, #8192	; 0x2000
    7cc4:	035c073c 	cmpeq	ip, #60, 14	; 0xf00000
    7cc8:	fb030000 	blx	c7cd2 <SYSTICK_CYCLES+0x9ec93>
    7ccc:	048f1b01 	streq	r1, [pc], #2817	; 7cd4 <_Min_Stack_Size+0x6cd4>
    7cd0:	23020000 	movwcs	r0, #8192	; 0x2000
    7cd4:	01520740 	cmpeq	r2, r0, asr #14
    7cd8:	03030000 	movweq	r0, #12288	; 0x3000
    7cdc:	012e1b02 			; <UNDEFINED> instruction: 0x012e1b02
    7ce0:	23020000 	movwcs	r0, #8192	; 0x2000
    7ce4:	01070744 	tsteq	r7, r4, asr #14
    7ce8:	04030000 	streq	r0, [r3], #-0
    7cec:	00971902 	addseq	r1, r7, r2, lsl #18
    7cf0:	23020000 	movwcs	r0, #8192	; 0x2000
    7cf4:	033b0748 	teqeq	fp, #72, 14	; 0x1200000
    7cf8:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    7cfc:	01401902 	cmpeq	r0, r2, lsl #18
    7d00:	23020000 	movwcs	r0, #8192	; 0x2000
    7d04:	02ec074c 	rsceq	r0, ip, #76, 14	; 0x1300000
    7d08:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    7d0c:	048f1b02 	streq	r1, [pc], #2818	; 7d14 <_Min_Stack_Size+0x6d14>
    7d10:	23020000 	movwcs	r0, #8192	; 0x2000
    7d14:	05e90768 	strbeq	r0, [r9, #1896]!	; 0x768
    7d18:	0f030000 	svceq	0x00030000
    7d1c:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    7d20:	23020000 	movwcs	r0, #8192	; 0x2000
    7d24:	0732076c 	ldreq	r0, [r2, -ip, ror #14]!
    7d28:	11030000 	mrsne	r0, (UNDEF: 3)
    7d2c:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    7d30:	23020000 	movwcs	r0, #8192	; 0x2000
    7d34:	02120770 	andseq	r0, r2, #112, 14	; 0x1c00000
    7d38:	12030000 	andne	r0, r3, #0
    7d3c:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    7d40:	23020000 	movwcs	r0, #8192	; 0x2000
    7d44:	07150774 			; <UNDEFINED> instruction: 0x07150774
    7d48:	13030000 	movwne	r0, #12288	; 0x3000
    7d4c:	00971902 	addseq	r1, r7, r2, lsl #18
    7d50:	23020000 	movwcs	r0, #8192	; 0x2000
    7d54:	03c60778 	biceq	r0, r6, #120, 14	; 0x1e00000
    7d58:	14030000 	strne	r0, [r3], #-0
    7d5c:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    7d60:	23020000 	movwcs	r0, #8192	; 0x2000
    7d64:	0554077c 	ldrbeq	r0, [r4, #-1916]	; 0xfffff884
    7d68:	15030000 	strne	r0, [r3, #-0]
    7d6c:	008b1902 	addeq	r1, fp, r2, lsl #18
    7d70:	23030000 	movwcs	r0, #12288	; 0x3000
    7d74:	e8070180 	stmda	r7, {r7, r8}
    7d78:	03000003 	movweq	r0, #3
    7d7c:	8b190216 	blhi	6485dc <__RAM_SIZE+0x5485dc>
    7d80:	03000000 	movweq	r0, #0
    7d84:	07018423 	streq	r8, [r1, -r3, lsr #8]
    7d88:	000008ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    7d8c:	1a021f03 	bne	8f9a0 <SYSTICK_CYCLES+0x66961>
    7d90:	00000478 	andeq	r0, r0, r8, ror r4
    7d94:	01882303 	orreq	r2, r8, r3, lsl #6
    7d98:	0007f007 	andeq	pc, r7, r7
    7d9c:	02200300 	eoreq	r0, r0, #0, 6
    7da0:	0004781a 	andeq	r7, r4, sl, lsl r8
    7da4:	8c230300 	stchi	3, cr0, [r3], #-0
    7da8:	02c10701 	sbceq	r0, r1, #262144	; 0x40000
    7dac:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    7db0:	008b1902 	addeq	r1, fp, r2, lsl #18
    7db4:	23030000 	movwcs	r0, #12288	; 0x3000
    7db8:	56070190 			; <UNDEFINED> instruction: 0x56070190
    7dbc:	03000002 	movweq	r0, #2
    7dc0:	8b19022f 	blhi	648684 <__RAM_SIZE+0x548684>
    7dc4:	03000000 	movweq	r0, #0
    7dc8:	07019423 	streq	r9, [r1, -r3, lsr #8]
    7dcc:	00000320 	andeq	r0, r0, r0, lsr #6
    7dd0:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    7dd4:	0000008b 	andeq	r0, r0, fp, lsl #1
    7dd8:	01982303 	orrseq	r2, r8, r3, lsl #6
    7ddc:	00027707 	andeq	r7, r2, r7, lsl #14
    7de0:	02330300 	eorseq	r0, r3, #0, 6
    7de4:	00008b19 	andeq	r8, r0, r9, lsl fp
    7de8:	9c230300 	stcls	3, cr0, [r3], #-0
    7dec:	00000701 	andeq	r0, r0, r1, lsl #14
    7df0:	35030000 	strcc	r0, [r3, #-0]
    7df4:	05741a02 	ldrbeq	r1, [r4, #-2562]!	; 0xfffff5fe
    7df8:	23030000 	movwcs	r0, #12288	; 0x3000
    7dfc:	c80701a0 	stmdagt	r7, {r5, r7, r8}
    7e00:	0300001b 	movweq	r0, #27
    7e04:	9719023a 			; <UNDEFINED> instruction: 0x9719023a
    7e08:	03000000 	movweq	r0, #0
    7e0c:	0701a423 	streq	sl, [r1, -r3, lsr #8]
    7e10:	00001c88 	andeq	r1, r0, r8, lsl #25
    7e14:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    7e18:	00000097 	muleq	r0, r7, r0
    7e1c:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    7e20:	001b4107 	andseq	r4, fp, r7, lsl #2
    7e24:	02410300 	subeq	r0, r1, #0, 6
    7e28:	00009719 	andeq	r9, r0, r9, lsl r7
    7e2c:	ac230300 	stcge	3, cr0, [r3], #-0
    7e30:	1d3f0701 	ldcne	7, cr0, [pc, #-4]!	; 7e34 <_Min_Stack_Size+0x6e34>
    7e34:	45030000 	strmi	r0, [r3, #-0]
    7e38:	00971902 	addseq	r1, r7, r2, lsl #18
    7e3c:	23030000 	movwcs	r0, #12288	; 0x3000
    7e40:	580701b0 	stmdapl	r7, {r4, r5, r7, r8}
    7e44:	0300001c 	movweq	r0, #28
    7e48:	97190248 	ldrls	r0, [r9, -r8, asr #4]
    7e4c:	03000000 	movweq	r0, #0
    7e50:	0701b423 	streq	fp, [r1, -r3, lsr #8]
    7e54:	000007c3 	andeq	r0, r0, r3, asr #15
    7e58:	1a024c03 	bne	9ae6c <SYSTICK_CYCLES+0x71e2d>
    7e5c:	00000478 	andeq	r0, r0, r8, ror r4
    7e60:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    7e64:	001d1707 	andseq	r1, sp, r7, lsl #14
    7e68:	024f0300 	subeq	r0, pc, #0, 6
    7e6c:	00009719 	andeq	r9, r0, r9, lsl r7
    7e70:	bc230300 	stclt	3, cr0, [r3], #-0
    7e74:	1b190701 	blne	649a80 <__RAM_SIZE+0x549a80>
    7e78:	52030000 	andpl	r0, r3, #0
    7e7c:	00971902 	addseq	r1, r7, r2, lsl #18
    7e80:	23030000 	movwcs	r0, #12288	; 0x3000
    7e84:	960701c0 	strls	r0, [r7], -r0, asr #3
    7e88:	0300001a 	movweq	r0, #26
    7e8c:	97190255 			; <UNDEFINED> instruction: 0x97190255
    7e90:	03000000 	movweq	r0, #0
    7e94:	0701c423 	streq	ip, [r1, -r3, lsr #8]
    7e98:	00001bec 	andeq	r1, r0, ip, ror #23
    7e9c:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    7ea0:	00000097 	muleq	r0, r7, r0
    7ea4:	01c82303 	biceq	r2, r8, r3, lsl #6
    7ea8:	0009c407 	andeq	ip, r9, r7, lsl #8
    7eac:	025d0300 	subseq	r0, sp, #0, 6
    7eb0:	0000761a 	andeq	r7, r0, sl, lsl r6
    7eb4:	cc230300 	stcgt	3, cr0, [r3], #-0
    7eb8:	04810701 	streq	r0, [r1], #1793	; 0x701
    7ebc:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    7ec0:	00971902 	addseq	r1, r7, r2, lsl #18
    7ec4:	23030000 	movwcs	r0, #12288	; 0x3000
    7ec8:	6d0701d0 	stfvss	f0, [r7, #-832]	; 0xfffffcc0
    7ecc:	03000005 	movweq	r0, #5
    7ed0:	9719027d 			; <UNDEFINED> instruction: 0x9719027d
    7ed4:	03000000 	movweq	r0, #0
    7ed8:	0001d423 	andeq	sp, r1, r3, lsr #8
    7edc:	0153040a 	cmpeq	r3, sl, lsl #8
    7ee0:	01080000 	mrseq	r0, (UNDEF: 8)
    7ee4:	0000048f 	andeq	r0, r0, pc, lsl #9
    7ee8:	00047809 	andeq	r7, r4, r9, lsl #16
    7eec:	00970900 	addseq	r0, r7, r0, lsl #18
    7ef0:	0a000000 	beq	7ef8 <_Min_Stack_Size+0x6ef8>
    7ef4:	00047e04 	andeq	r7, r4, r4, lsl #28
    7ef8:	07b30600 	ldreq	r0, [r3, r0, lsl #12]!
    7efc:	03340000 	teqeq	r4, #0
    7f00:	7410037e 	ldrvc	r0, [r0], #-894	; 0xfffffc82
    7f04:	07000005 	streq	r0, [r0, -r5]
    7f08:	0000018d 	andeq	r0, r0, sp, lsl #3
    7f0c:	19038203 	stmdbne	r3, {r0, r1, r9, pc}
    7f10:	00000097 	muleq	r0, r7, r0
    7f14:	07002302 	streq	r2, [r0, -r2, lsl #6]
    7f18:	00000897 	muleq	r0, r7, r8
    7f1c:	1a038503 	bne	e9330 <SYSTICK_CYCLES+0xc02f1>
    7f20:	0000014d 	andeq	r0, r0, sp, asr #2
    7f24:	07042302 	streq	r2, [r4, -r2, lsl #6]
    7f28:	000006fc 	strdeq	r0, [r0], -ip
    7f2c:	19038803 	stmdbne	r3, {r0, r1, fp, pc}
    7f30:	0000008b 	andeq	r0, r0, fp, lsl #1
    7f34:	07082302 	streq	r2, [r8, -r2, lsl #6]
    7f38:	000004cb 	andeq	r0, r0, fp, asr #9
    7f3c:	1a038c03 	bne	eaf50 <SYSTICK_CYCLES+0xc1f11>
    7f40:	00000587 	andeq	r0, r0, r7, lsl #11
    7f44:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    7f48:	00000162 	andeq	r0, r0, r2, ror #2
    7f4c:	19039003 	stmdbne	r3, {r0, r1, ip, pc}
    7f50:	0000008b 	andeq	r0, r0, fp, lsl #1
    7f54:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    7f58:	00000121 	andeq	r0, r0, r1, lsr #2
    7f5c:	19039303 	stmdbne	r3, {r0, r1, r8, r9, ip, pc}
    7f60:	0000008b 	andeq	r0, r0, fp, lsl #1
    7f64:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    7f68:	000008cd 	andeq	r0, r0, sp, asr #17
    7f6c:	1a039803 	bne	edf80 <SYSTICK_CYCLES+0xc4f41>
    7f70:	00000478 	andeq	r0, r0, r8, ror r4
    7f74:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    7f78:	000006e3 	andeq	r0, r0, r3, ror #13
    7f7c:	19039903 	stmdbne	r3, {r0, r1, r8, fp, ip, pc}
    7f80:	0000008b 	andeq	r0, r0, fp, lsl #1
    7f84:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    7f88:	000005d3 	ldrdeq	r0, [r0], -r3
    7f8c:	1a039d03 	bne	ef3a0 <SYSTICK_CYCLES+0xc6361>
    7f90:	00000574 	andeq	r0, r0, r4, ror r5
    7f94:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    7f98:	000006a0 	andeq	r0, r0, r0, lsr #13
    7f9c:	1a039e03 	bne	ef7b0 <SYSTICK_CYCLES+0xc6771>
    7fa0:	00000574 	andeq	r0, r0, r4, ror r5
    7fa4:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    7fa8:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    7fac:	1903a203 	stmdbne	r3, {r0, r1, r9, sp, pc}
    7fb0:	0000008b 	andeq	r0, r0, fp, lsl #1
    7fb4:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    7fb8:	000009e0 	andeq	r0, r0, r0, ror #19
    7fbc:	1a03a603 	bne	f17d0 <SYSTICK_CYCLES+0xc8791>
    7fc0:	00000574 	andeq	r0, r0, r4, ror r5
    7fc4:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    7fc8:	00000425 	andeq	r0, r0, r5, lsr #8
    7fcc:	1a03a703 	bne	f1be0 <SYSTICK_CYCLES+0xc8ba1>
    7fd0:	00000574 	andeq	r0, r0, r4, ror r5
    7fd4:	00302302 	eorseq	r2, r0, r2, lsl #6
    7fd8:	0495040a 	ldreq	r0, [r5], #1034	; 0x40a
    7fdc:	ef0b0000 	svc	0x000b0000
    7fe0:	03000008 	movweq	r0, #8
    7fe4:	53030286 	movwpl	r0, #12934	; 0x3286
    7fe8:	0a000001 	beq	7ff4 <_Min_Stack_Size+0x6ff4>
    7fec:	00057a04 	andeq	r7, r5, r4, lsl #20
    7ff0:	11270c00 			; <UNDEFINED> instruction: 0x11270c00
    7ff4:	39040000 	stmdbcc	r4, {}	; <UNPREDICTABLE>
    7ff8:	05872101 	streq	r2, [r7, #257]	; 0x101
    7ffc:	01010000 	mrseq	r0, (UNDEF: 1)
    8000:	05a80108 	streq	r0, [r8, #264]!	; 0x108
    8004:	87090000 	strhi	r0, [r9, -r0]
    8008:	00000005 	andeq	r0, r0, r5
    800c:	001aff0c 	andseq	pc, sl, ip, lsl #30
    8010:	01940400 	orrseq	r0, r4, r0, lsl #8
    8014:	0005b723 	andeq	fp, r5, r3, lsr #14
    8018:	0a010100 	beq	48420 <SYSTICK_CYCLES+0x1f3e1>
    801c:	00059c04 	andeq	r9, r5, r4, lsl #24
    8020:	d6010d00 	strle	r0, [r1], -r0, lsl #26
    8024:	0100001d 	tsteq	r0, sp, lsl r0
    8028:	2401074b 	strcs	r0, [r1], #-1867	; 0xfffff8b5
    802c:	6810001f 	ldmdavs	r0, {r0, r1, r2, r3, r4}
    8030:	0210001f 	andseq	r0, r0, #31
    8034:	01000037 	tsteq	r0, r7, lsr r0
    8038:	00000704 	andeq	r0, r0, r4, lsl #14
    803c:	000eee0e 	andeq	lr, lr, lr, lsl #28
    8040:	014e0100 	mrseq	r0, (UNDEF: 94)
    8044:	0000008b 	andeq	r0, r0, fp, lsl #1
    8048:	00003724 	andeq	r3, r0, r4, lsr #14
    804c:	00003722 	andeq	r3, r0, r2, lsr #14
    8050:	0019790e 	andseq	r7, r9, lr, lsl #18
    8054:	12500100 	subsne	r0, r0, #0, 2
    8058:	00000587 	andeq	r0, r0, r7, lsl #11
    805c:	00003739 	andeq	r3, r0, r9, lsr r7
    8060:	00003737 	andeq	r3, r0, r7, lsr r7
    8064:	001f440f 	andseq	r4, pc, pc, lsl #8
    8068:	001f5010 	andseq	r5, pc, r0, lsl r0	; <UNPREDICTABLE>
    806c:	00066c10 	andeq	r6, r6, r0, lsl ip
    8070:	1e570e00 	cdpne	14, 5, cr0, cr7, cr0, {0}
    8074:	9c010000 	stcls	0, cr0, [r1], {-0}
    8078:	00009705 	andeq	r9, r0, r5, lsl #14
    807c:	00374e00 	eorseq	r4, r7, r0, lsl #28
    8080:	00374c00 	eorseq	r4, r7, r0, lsl #24
    8084:	07801000 	streq	r1, [r0, r0]
    8088:	1f440000 	svcne	0x00440000
    808c:	44021000 	strmi	r1, [r2], #-0
    8090:	4810001f 	ldmdami	r0, {r0, r1, r2, r3, r4}
    8094:	0110001f 	tsteq	r0, pc, lsl r0
    8098:	0648059c 			; <UNDEFINED> instruction: 0x0648059c
    809c:	93110000 	tstls	r1, #0
    80a0:	63000007 	movwvs	r0, #7
    80a4:	61000037 	tstvs	r0, r7, lsr r0
    80a8:	00000037 	andeq	r0, r0, r7, lsr r0
    80ac:	00076312 	andeq	r6, r7, r2, lsl r3
    80b0:	001f4c00 	andseq	r4, pc, r0, lsl #24
    80b4:	1f4c0110 	svcne	0x004c0110
    80b8:	1f501000 	svcne	0x00501000
    80bc:	9c011000 	stcls	0, cr1, [r1], {-0}
    80c0:	07721305 	ldrbeq	r1, [r2, -r5, lsl #6]!
    80c4:	37780000 	ldrbcc	r0, [r8, -r0]!
    80c8:	37760000 	ldrbcc	r0, [r6, -r0]!
    80cc:	00000000 	andeq	r0, r0, r0
    80d0:	00070410 	andeq	r0, r7, r0, lsl r4
    80d4:	001f3a00 	andseq	r3, pc, r0, lsl #20
    80d8:	1f3a0110 	svcne	0x003a0110
    80dc:	1f401000 	svcne	0x00401000
    80e0:	7f011000 	svcvc	0x00011000
    80e4:	0006b705 	andeq	fp, r6, r5, lsl #14
    80e8:	07171100 	ldreq	r1, [r7, -r0, lsl #2]
    80ec:	378d0000 	strcc	r0, [sp, r0]
    80f0:	378b0000 	strcc	r0, [fp, r0]
    80f4:	42140000 	andsmi	r0, r4, #0
    80f8:	3a000007 	bcc	811c <_Min_Stack_Size+0x711c>
    80fc:	0410001f 	ldreq	r0, [r0], #-31	; 0xffffffe1
    8100:	10001f3a 	andne	r1, r0, sl, lsr pc
    8104:	10001f3e 	andne	r1, r0, lr, lsr pc
    8108:	13025602 	movwne	r5, #9730	; 0x2602
    810c:	00075511 	andeq	r5, r7, r1, lsl r5
    8110:	0037a200 	eorseq	sl, r7, r0, lsl #4
    8114:	0037a000 	eorseq	sl, r7, r0
    8118:	10000000 	andne	r0, r0, r0
    811c:	00000725 	andeq	r0, r0, r5, lsr #14
    8120:	10001f58 	andne	r1, r0, r8, asr pc
    8124:	001f5801 	andseq	r5, pc, r1, lsl #16
    8128:	001f5c10 	andseq	r5, pc, r0, lsl ip	; <UNPREDICTABLE>
    812c:	05a20110 	streq	r0, [r2, #272]!	; 0x110
    8130:	000006de 	ldrdeq	r0, [r0], -lr
    8134:	00073413 	andeq	r3, r7, r3, lsl r4
    8138:	0037b700 	eorseq	fp, r7, r0, lsl #14
    813c:	0037b500 	eorseq	fp, r7, r0, lsl #10
    8140:	3a150000 	bcc	548148 <__RAM_SIZE+0x448148>
    8144:	ee10001f 	mrc	0, 0, r0, cr0, cr15, {0}
    8148:	16000006 	strne	r0, [r0], -r6
    814c:	74025001 	strvc	r5, [r2], #-1
    8150:	58170000 	ldmdapl	r7, {}	; <UNPREDICTABLE>
    8154:	a110001f 	tstge	r0, pc, lsl r0
    8158:	16000007 	strne	r0, [r0], -r7
    815c:	74025001 	strvc	r5, [r2], #-1
    8160:	51011600 	tstpl	r1, r0, lsl #12
    8164:	00003001 	andeq	r3, r0, r1
    8168:	000f2418 	andeq	r2, pc, r8, lsl r4	; <UNPREDICTABLE>
    816c:	02520200 	subseq	r0, r2, #0, 4
    8170:	008b0137 	addeq	r0, fp, r7, lsr r1
    8174:	25030000 	strcs	r0, [r3, #-0]
    8178:	19000007 	stmdbne	r0, {r0, r1, r2}
    817c:	00000ead 	andeq	r0, r0, sp, lsr #29
    8180:	06025402 	streq	r5, [r2], -r2, lsl #8
    8184:	0000008b 	andeq	r0, r0, fp, lsl #1
    8188:	0e991a00 	vfnmseq.f32	s2, s18, s0
    818c:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    8190:	03013702 	movweq	r3, #5890	; 0x1702
    8194:	00000742 	andeq	r0, r0, r2, asr #14
    8198:	000ead1b 	andeq	sl, lr, fp, lsl sp
    819c:	02490200 	subeq	r0, r9, #0, 4
    81a0:	00008b50 	andeq	r8, r0, r0, asr fp
    81a4:	c2180000 	andsgt	r0, r8, #0
    81a8:	0200000e 	andeq	r0, r0, #14
    81ac:	01370232 	teqeq	r7, r2, lsr r2
    81b0:	0000008b 	andeq	r0, r0, fp, lsl #1
    81b4:	00076303 	andeq	r6, r7, r3, lsl #6
    81b8:	0eb11900 	vmoveq.f16	s2, #16	; 0x40800000  4.0	; <UNPREDICTABLE>
    81bc:	34020000 	strcc	r0, [r2], #-0
    81c0:	008b0602 	addeq	r0, fp, r2, lsl #12
    81c4:	1a000000 	bne	81cc <_Min_Stack_Size+0x71cc>
    81c8:	00001e47 	andeq	r1, r0, r7, asr #28
    81cc:	37016e02 	strcc	r6, [r1, -r2, lsl #28]
    81d0:	07800301 	streq	r0, [r0, r1, lsl #6]
    81d4:	391b0000 	ldmdbcc	fp, {}	; <UNPREDICTABLE>
    81d8:	0200001e 	andeq	r0, r0, #30
    81dc:	974d016e 	strbls	r0, [sp, -lr, ror #2]
    81e0:	00000000 	andeq	r0, r0, r0
    81e4:	001e2918 	andseq	r2, lr, r8, lsl r9
    81e8:	01660200 	cmneq	r6, r0, lsl #4
    81ec:	00970138 	addseq	r0, r7, r8, lsr r1
    81f0:	a1030000 	mrsge	r0, (UNDEF: 3)
    81f4:	19000007 	stmdbne	r0, {r0, r1, r2}
    81f8:	00001e39 	andeq	r1, r0, r9, lsr lr
    81fc:	08016802 	stmdaeq	r1, {r1, fp, sp, lr}
    8200:	00000097 	muleq	r0, r7, r0
    8204:	01011c00 	tsteq	r1, r0, lsl #24
    8208:	000010c9 	andeq	r1, r0, r9, asr #1
    820c:	000010c9 	andeq	r1, r0, r9, asr #1
    8210:	0d012104 	stfeqs	f2, [r1, #-16]
    8214:	00084100 	andeq	r4, r8, r0, lsl #2
    8218:	f4000200 	vst1.8	{d0-d3}, [r0], r0
    821c:	04000015 	streq	r0, [r0], #-21	; 0xffffffeb
    8220:	00003d01 	andeq	r3, r0, r1, lsl #26
    8224:	1e650c00 	cdpne	12, 6, cr0, cr5, cr0, {0}
    8228:	065c0000 	ldrbeq	r0, [ip], -r0
    822c:	02b80000 	adcseq	r0, r8, #0
	...
    8238:	2ed70000 	cdpcs	0, 13, cr0, cr7, cr0, {0}
    823c:	04020000 	streq	r0, [r2], #-0
    8240:	00023907 	andeq	r3, r2, r7, lsl #18
    8244:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    8248:	00746e69 	rsbseq	r6, r4, r9, ror #28
    824c:	e8050802 	stmda	r5, {r1, fp}
    8250:	02000004 	andeq	r0, r0, #4
    8254:	063e0408 	ldrteq	r0, [lr], -r8, lsl #8
    8258:	01020000 	mrseq	r0, (UNDEF: 2)
    825c:	00086d06 	andeq	r6, r8, r6, lsl #26
    8260:	08010200 	stmdaeq	r1, {r9}
    8264:	0000086b 	andeq	r0, r0, fp, ror #16
    8268:	cf050202 	svcgt	0x00050202
    826c:	02000006 	andeq	r0, r0, #6
    8270:	09390702 	ldmdbeq	r9!, {r1, r8, r9, sl}
    8274:	04020000 	streq	r0, [r2], #-0
    8278:	0004ed05 	andeq	lr, r4, r5, lsl #26
    827c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    8280:	00000234 	andeq	r0, r0, r4, lsr r2
    8284:	2f070802 	svccs	0x00070802
    8288:	04000002 	streq	r0, [r0], #-2
    828c:	08010204 	stmdaeq	r1, {r2, r9}
    8290:	00000874 	andeq	r0, r0, r4, ror r8
    8294:	0008fa05 	andeq	pc, r8, r5, lsl #20
    8298:	31730200 	cmncc	r3, r0, lsl #4
    829c:	00000078 	andeq	r0, r0, r8, ror r0
    82a0:	00079a05 	andeq	r9, r7, r5, lsl #20
    82a4:	31760200 	cmncc	r6, r0, lsl #4
    82a8:	00000029 	andeq	r0, r0, r9, lsr #32
    82ac:	00008b06 	andeq	r8, r0, r6, lsl #22
    82b0:	072c0500 	streq	r0, [ip, -r0, lsl #10]!
    82b4:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    82b8:	00006831 	andeq	r6, r0, r1, lsr r8
    82bc:	009c0600 	addseq	r0, ip, r0, lsl #12
    82c0:	3b070000 	blcc	1c82c8 <__RAM_SIZE+0xc82c8>
    82c4:	1c000005 	stcne	0, cr0, [r0], {5}
    82c8:	10018203 	andne	r8, r1, r3, lsl #4
    82cc:	0000012c 	andeq	r0, r0, ip, lsr #2
    82d0:	00082d08 	andeq	r2, r8, r8, lsl #26
    82d4:	01860300 	orreq	r0, r6, r0, lsl #6
    82d8:	00009c19 	andeq	r9, r0, r9, lsl ip
    82dc:	00230200 	eoreq	r0, r3, r0, lsl #4
    82e0:	0003a008 	andeq	sl, r3, r8
    82e4:	01870300 	orreq	r0, r7, r0, lsl #6
    82e8:	00009c19 	andeq	r9, r0, r9, lsl ip
    82ec:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    82f0:	00043d08 	andeq	r3, r4, r8, lsl #26
    82f4:	018a0300 	orreq	r0, sl, r0, lsl #6
    82f8:	0001381b 	andeq	r3, r1, fp, lsl r8
    82fc:	08230200 	stmdaeq	r3!, {r9}
    8300:	0001f208 	andeq	pc, r1, r8, lsl #4
    8304:	018b0300 	orreq	r0, fp, r0, lsl #6
    8308:	00009c19 	andeq	r9, r0, r9, lsl ip
    830c:	0c230200 	sfmeq	f0, 4, [r3], #-0
    8310:	00096f08 	andeq	r6, r9, r8, lsl #30
    8314:	01910300 	orrseq	r0, r1, r0, lsl #6
    8318:	00013e1a 	andeq	r3, r1, sl, lsl lr
    831c:	10230200 	eorne	r0, r3, r0, lsl #4
    8320:	00001b08 	andeq	r1, r0, r8, lsl #22
    8324:	01920300 	orrseq	r0, r2, r0, lsl #6
    8328:	00013e1a 	andeq	r3, r1, sl, lsl lr
    832c:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    8330:	00060908 	andeq	r0, r6, r8, lsl #18
    8334:	01960300 	orrseq	r0, r6, r0, lsl #6
    8338:	0001441b 	andeq	r4, r1, fp, lsl r4
    833c:	18230200 	stmdane	r3!, {r9}
    8340:	38010900 	stmdacc	r1, {r8, fp}
    8344:	0a000001 	beq	8350 <_Min_Stack_Size+0x7350>
    8348:	0000009c 	muleq	r0, ip, r0
    834c:	2c040b00 			; <UNDEFINED> instruction: 0x2c040b00
    8350:	0b000001 	bleq	835c <_Min_Stack_Size+0x735c>
    8354:	0000ad04 	andeq	sl, r0, r4, lsl #26
    8358:	3e040b00 	vmlacc.f64	d0, d4, d0
    835c:	0c000001 	stceq	0, cr0, [r0], {1}
    8360:	0000064a 	andeq	r0, r0, sl, asr #12
    8364:	03019b03 	movweq	r9, #6915	; 0x1b03
    8368:	000000ad 	andeq	r0, r0, sp, lsr #1
    836c:	007f040b 	rsbseq	r0, pc, fp, lsl #8
    8370:	4b070000 	blmi	1c8378 <__RAM_SIZE+0xc8378>
    8374:	d8000003 	stmdale	r0, {r0, r1}
    8378:	1001d603 	andne	sp, r1, r3, lsl #12
    837c:	00000482 	andeq	r0, r0, r2, lsl #9
    8380:	00092c08 	andeq	r2, r9, r8, lsl #24
    8384:	01dd0300 	bicseq	r0, sp, r0, lsl #6
    8388:	00009c19 	andeq	r9, r0, r9, lsl ip
    838c:	00230200 	eoreq	r0, r3, r0, lsl #4
    8390:	00079f08 	andeq	r9, r7, r8, lsl #30
    8394:	01de0300 	bicseq	r0, lr, r0, lsl #6
    8398:	00009c19 	andeq	r9, r0, r9, lsl ip
    839c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    83a0:	0001bc08 	andeq	fp, r1, r8, lsl #24
    83a4:	01df0300 	bicseq	r0, pc, r0, lsl #6
    83a8:	0000761a 	andeq	r7, r0, sl, lsl r6
    83ac:	08230200 	stmdaeq	r3!, {r9}
    83b0:	00091608 	andeq	r1, r9, r8, lsl #12
    83b4:	01e00300 	mvneq	r0, r0, lsl #6
    83b8:	0000761a 	andeq	r7, r0, sl, lsl r6
    83bc:	0c230200 	sfmeq	f0, 4, [r3], #-0
    83c0:	00041108 	andeq	r1, r4, r8, lsl #2
    83c4:	01e10300 	mvneq	r0, r0, lsl #6
    83c8:	0000761a 	andeq	r7, r0, sl, lsl r6
    83cc:	10230200 	eorne	r0, r3, r0, lsl #4
    83d0:	00095a08 	andeq	r5, r9, r8, lsl #20
    83d4:	01e20300 	mvneq	r0, r0, lsl #6
    83d8:	00009c19 	andeq	r9, r0, r9, lsl ip
    83dc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    83e0:	0021e208 	eoreq	lr, r1, r8, lsl #4
    83e4:	01e30300 	mvneq	r0, r0, lsl #6
    83e8:	00009c19 	andeq	r9, r0, r9, lsl ip
    83ec:	18230200 	stmdane	r3!, {r9}
    83f0:	00062508 	andeq	r2, r6, r8, lsl #10
    83f4:	01e40300 	mvneq	r0, r0, lsl #6
    83f8:	00009c19 	andeq	r9, r0, r9, lsl ip
    83fc:	1c230200 	sfmne	f0, 4, [r3], #-0
    8400:	0006ba08 	andeq	fp, r6, r8, lsl #20
    8404:	01e80300 	mvneq	r0, r0, lsl #6
    8408:	0004821a 	andeq	r8, r4, sl, lsl r2
    840c:	20230200 	eorcs	r0, r3, r0, lsl #4
    8410:	00019908 	andeq	r9, r1, r8, lsl #18
    8414:	01e90300 	mvneq	r0, r0, lsl #6
    8418:	0004821a 	andeq	r8, r4, sl, lsl r2
    841c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    8420:	0005b108 	andeq	fp, r5, r8, lsl #2
    8424:	01f10300 	mvnseq	r0, r0, lsl #6
    8428:	0001571a 	andeq	r5, r1, sl, lsl r7
    842c:	28230200 	stmdacs	r3!, {r9}
    8430:	0002d908 	andeq	sp, r2, r8, lsl #18
    8434:	01f20300 	mvnseq	r0, r0, lsl #6
    8438:	00008b19 	andeq	r8, r0, r9, lsl fp
    843c:	2c230200 	sfmcs	f0, 4, [r3], #-0
    8440:	00024608 	andeq	r4, r2, r8, lsl #12
    8444:	01f30300 	mvnseq	r0, r0, lsl #6
    8448:	00008b19 	andeq	r8, r0, r9, lsl fp
    844c:	30230200 	eorcc	r0, r3, r0, lsl #4
    8450:	00017308 	andeq	r7, r1, r8, lsl #6
    8454:	01f40300 	mvnseq	r0, r0, lsl #6
    8458:	00008b19 	andeq	r8, r0, r9, lsl fp
    845c:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    8460:	00074b08 	andeq	r4, r7, r8, lsl #22
    8464:	01f50300 	mvnseq	r0, r0, lsl #6
    8468:	00008b19 	andeq	r8, r0, r9, lsl fp
    846c:	38230200 	stmdacc	r3!, {r9}
    8470:	0000eb08 	andeq	lr, r0, r8, lsl #22
    8474:	01f60300 	mvnseq	r0, r0, lsl #6
    8478:	00008b19 	andeq	r8, r0, r9, lsl fp
    847c:	3c230200 	sfmcc	f0, 4, [r3], #-0
    8480:	00035c08 	andeq	r5, r3, r8, lsl #24
    8484:	01fb0300 	mvnseq	r0, r0, lsl #6
    8488:	0004991b 	andeq	r9, r4, fp, lsl r9
    848c:	40230200 	eormi	r0, r3, r0, lsl #4
    8490:	00015208 	andeq	r5, r1, r8, lsl #4
    8494:	02030300 	andeq	r0, r3, #0, 6
    8498:	0001381b 	andeq	r3, r1, fp, lsl r8
    849c:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    84a0:	00010708 	andeq	r0, r1, r8, lsl #14
    84a4:	02040300 	andeq	r0, r4, #0, 6
    84a8:	00009c19 	andeq	r9, r0, r9, lsl ip
    84ac:	48230200 	stmdami	r3!, {r9}
    84b0:	00033b08 	andeq	r3, r3, r8, lsl #22
    84b4:	02080300 	andeq	r0, r8, #0, 6
    84b8:	00014a19 	andeq	r4, r1, r9, lsl sl
    84bc:	4c230200 	sfmmi	f0, 4, [r3], #-0
    84c0:	0002ec08 	andeq	lr, r2, r8, lsl #24
    84c4:	020e0300 	andeq	r0, lr, #0, 6
    84c8:	0004991b 	andeq	r9, r4, fp, lsl r9
    84cc:	68230200 	stmdavs	r3!, {r9}
    84d0:	0005e908 	andeq	lr, r5, r8, lsl #18
    84d4:	020f0300 	andeq	r0, pc, #0, 6
    84d8:	0000761a 	andeq	r7, r0, sl, lsl r6
    84dc:	6c230200 	sfmvs	f0, 4, [r3], #-0
    84e0:	00073208 	andeq	r3, r7, r8, lsl #4
    84e4:	02110300 	andseq	r0, r1, #0, 6
    84e8:	0004821a 	andeq	r8, r4, sl, lsl r2
    84ec:	70230200 	eorvc	r0, r3, r0, lsl #4
    84f0:	00021208 	andeq	r1, r2, r8, lsl #4
    84f4:	02120300 	andseq	r0, r2, #0, 6
    84f8:	0004821a 	andeq	r8, r4, sl, lsl r2
    84fc:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    8500:	00071508 	andeq	r1, r7, r8, lsl #10
    8504:	02130300 	andseq	r0, r3, #0, 6
    8508:	00009c19 	andeq	r9, r0, r9, lsl ip
    850c:	78230200 	stmdavc	r3!, {r9}
    8510:	0003c608 	andeq	ip, r3, r8, lsl #12
    8514:	02140300 	andseq	r0, r4, #0, 6
    8518:	0000761a 	andeq	r7, r0, sl, lsl r6
    851c:	7c230200 	sfmvc	f0, 4, [r3], #-0
    8520:	00055408 	andeq	r5, r5, r8, lsl #8
    8524:	02150300 	andseq	r0, r5, #0, 6
    8528:	00008b19 	andeq	r8, r0, r9, lsl fp
    852c:	80230300 	eorhi	r0, r3, r0, lsl #6
    8530:	03e80801 	mvneq	r0, #65536	; 0x10000
    8534:	16030000 	strne	r0, [r3], -r0
    8538:	008b1902 	addeq	r1, fp, r2, lsl #18
    853c:	23030000 	movwcs	r0, #12288	; 0x3000
    8540:	ff080184 			; <UNDEFINED> instruction: 0xff080184
    8544:	03000008 	movweq	r0, #8
    8548:	821a021f 	andshi	r0, sl, #-268435455	; 0xf0000001
    854c:	03000004 	movweq	r0, #4
    8550:	08018823 	stmdaeq	r1, {r0, r1, r5, fp, pc}
    8554:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    8558:	1a022003 	bne	9056c <SYSTICK_CYCLES+0x6752d>
    855c:	00000482 	andeq	r0, r0, r2, lsl #9
    8560:	018c2303 	orreq	r2, ip, r3, lsl #6
    8564:	0002c108 	andeq	ip, r2, r8, lsl #2
    8568:	022e0300 	eoreq	r0, lr, #0, 6
    856c:	00008b19 	andeq	r8, r0, r9, lsl fp
    8570:	90230300 	eorls	r0, r3, r0, lsl #6
    8574:	02560801 	subseq	r0, r6, #65536	; 0x10000
    8578:	2f030000 	svccs	0x00030000
    857c:	008b1902 	addeq	r1, fp, r2, lsl #18
    8580:	23030000 	movwcs	r0, #12288	; 0x3000
    8584:	20080194 	mulcs	r8, r4, r1
    8588:	03000003 	movweq	r0, #3
    858c:	8b190230 	blhi	648e54 <__RAM_SIZE+0x548e54>
    8590:	03000000 	movweq	r0, #0
    8594:	08019823 	stmdaeq	r1, {r0, r1, r5, fp, ip, pc}
    8598:	00000277 	andeq	r0, r0, r7, ror r2
    859c:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
    85a0:	0000008b 	andeq	r0, r0, fp, lsl #1
    85a4:	019c2303 	orrseq	r2, ip, r3, lsl #6
    85a8:	00000008 	andeq	r0, r0, r8
    85ac:	02350300 	eorseq	r0, r5, #0, 6
    85b0:	00057e1a 	andeq	r7, r5, sl, lsl lr
    85b4:	a0230300 	eorge	r0, r3, r0, lsl #6
    85b8:	1bc80801 	blne	ff20a5c4 <__RAM_segment_used_end__+0xc710a5c4>
    85bc:	3a030000 	bcc	c85c4 <SYSTICK_CYCLES+0x9f585>
    85c0:	009c1902 	addseq	r1, ip, r2, lsl #18
    85c4:	23030000 	movwcs	r0, #12288	; 0x3000
    85c8:	880801a4 	stmdahi	r8, {r2, r5, r7, r8}
    85cc:	0300001c 	movweq	r0, #28
    85d0:	9c19023d 	lfmls	f0, 4, [r9], {61}	; 0x3d
    85d4:	03000000 	movweq	r0, #0
    85d8:	0801a823 	stmdaeq	r1, {r0, r1, r5, fp, sp, pc}
    85dc:	00001b41 	andeq	r1, r0, r1, asr #22
    85e0:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
    85e4:	0000009c 	muleq	r0, ip, r0
    85e8:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    85ec:	001d3f08 	andseq	r3, sp, r8, lsl #30
    85f0:	02450300 	subeq	r0, r5, #0, 6
    85f4:	00009c19 	andeq	r9, r0, r9, lsl ip
    85f8:	b0230300 	eorlt	r0, r3, r0, lsl #6
    85fc:	1c580801 	mrrcne	8, 0, r0, r8, cr1
    8600:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    8604:	009c1902 	addseq	r1, ip, r2, lsl #18
    8608:	23030000 	movwcs	r0, #12288	; 0x3000
    860c:	c30801b4 	movwgt	r0, #33204	; 0x81b4
    8610:	03000007 	movweq	r0, #7
    8614:	821a024c 	andshi	r0, sl, #76, 4	; 0xc0000004
    8618:	03000004 	movweq	r0, #4
    861c:	0801b823 	stmdaeq	r1, {r0, r1, r5, fp, ip, sp, pc}
    8620:	00001d17 	andeq	r1, r0, r7, lsl sp
    8624:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
    8628:	0000009c 	muleq	r0, ip, r0
    862c:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    8630:	001b1908 	andseq	r1, fp, r8, lsl #18
    8634:	02520300 	subseq	r0, r2, #0, 6
    8638:	00009c19 	andeq	r9, r0, r9, lsl ip
    863c:	c0230300 	eorgt	r0, r3, r0, lsl #6
    8640:	1a960801 	bne	fe58a64c <__RAM_segment_used_end__+0xc648a64c>
    8644:	55030000 	strpl	r0, [r3, #-0]
    8648:	009c1902 	addseq	r1, ip, r2, lsl #18
    864c:	23030000 	movwcs	r0, #12288	; 0x3000
    8650:	ec0801c4 	stfs	f0, [r8], {196}	; 0xc4
    8654:	0300001b 	movweq	r0, #27
    8658:	9c190259 	lfmls	f0, 4, [r9], {89}	; 0x59
    865c:	03000000 	movweq	r0, #0
    8660:	0801c823 	stmdaeq	r1, {r0, r1, r5, fp, lr, pc}
    8664:	000009c4 	andeq	r0, r0, r4, asr #19
    8668:	1a025d03 	bne	9fa7c <SYSTICK_CYCLES+0x76a3d>
    866c:	00000076 	andeq	r0, r0, r6, ror r0
    8670:	01cc2303 	biceq	r2, ip, r3, lsl #6
    8674:	00048108 	andeq	r8, r4, r8, lsl #2
    8678:	02780300 	rsbseq	r0, r8, #0, 6
    867c:	00009c19 	andeq	r9, r0, r9, lsl ip
    8680:	d0230300 	eorle	r0, r3, r0, lsl #6
    8684:	056d0801 	strbeq	r0, [sp, #-2049]!	; 0xfffff7ff
    8688:	7d030000 	stcvc	0, cr0, [r3, #-0]
    868c:	009c1902 	addseq	r1, ip, r2, lsl #18
    8690:	23030000 	movwcs	r0, #12288	; 0x3000
    8694:	0b0001d4 	bleq	8dec <_Min_Stack_Size+0x7dec>
    8698:	00015d04 	andeq	r5, r1, r4, lsl #26
    869c:	99010900 	stmdbls	r1, {r8, fp}
    86a0:	0a000004 	beq	86b8 <_Min_Stack_Size+0x76b8>
    86a4:	00000482 	andeq	r0, r0, r2, lsl #9
    86a8:	00009c0a 	andeq	r9, r0, sl, lsl #24
    86ac:	040b0000 	streq	r0, [fp], #-0
    86b0:	00000488 	andeq	r0, r0, r8, lsl #9
    86b4:	0007b307 	andeq	fp, r7, r7, lsl #6
    86b8:	7e033400 	cfcpysvc	mvf3, mvf3
    86bc:	057e1003 	ldrbeq	r1, [lr, #-3]!
    86c0:	8d080000 	stchi	0, cr0, [r8, #-0]
    86c4:	03000001 	movweq	r0, #1
    86c8:	9c190382 	ldcls	3, cr0, [r9], {130}	; 0x82
    86cc:	02000000 	andeq	r0, r0, #0
    86d0:	97080023 	strls	r0, [r8, -r3, lsr #32]
    86d4:	03000008 	movweq	r0, #8
    86d8:	571a0385 	ldrpl	r0, [sl, -r5, lsl #7]
    86dc:	02000001 	andeq	r0, r0, #1
    86e0:	fc080423 	stc2	4, cr0, [r8], {35}	; 0x23
    86e4:	03000006 	movweq	r0, #6
    86e8:	8b190388 	blhi	649510 <__RAM_SIZE+0x549510>
    86ec:	02000000 	andeq	r0, r0, #0
    86f0:	cb080823 	blgt	20a784 <__RAM_SIZE+0x10a784>
    86f4:	03000004 	movweq	r0, #4
    86f8:	911a038c 	tstls	sl, ip, lsl #7
    86fc:	02000005 	andeq	r0, r0, #5
    8700:	62080c23 	andvs	r0, r8, #8960	; 0x2300
    8704:	03000001 	movweq	r0, #1
    8708:	8b190390 	blhi	649550 <__RAM_SIZE+0x549550>
    870c:	02000000 	andeq	r0, r0, #0
    8710:	21081023 	tstcs	r8, r3, lsr #32
    8714:	03000001 	movweq	r0, #1
    8718:	8b190393 	blhi	64956c <__RAM_SIZE+0x54956c>
    871c:	02000000 	andeq	r0, r0, #0
    8720:	cd081423 	cfstrsgt	mvf1, [r8, #-140]	; 0xffffff74
    8724:	03000008 	movweq	r0, #8
    8728:	821a0398 	andshi	r0, sl, #152, 6	; 0x60000002
    872c:	02000004 	andeq	r0, r0, #4
    8730:	e3081823 	movw	r1, #34851	; 0x8823
    8734:	03000006 	movweq	r0, #6
    8738:	8b190399 	blhi	6495a4 <__RAM_SIZE+0x5495a4>
    873c:	02000000 	andeq	r0, r0, #0
    8740:	d3081c23 	movwle	r1, #35875	; 0x8c23
    8744:	03000005 	movweq	r0, #5
    8748:	7e1a039d 	mrcvc	3, 0, r0, cr10, cr13, {4}
    874c:	02000005 	andeq	r0, r0, #5
    8750:	a0082023 	andge	r2, r8, r3, lsr #32
    8754:	03000006 	movweq	r0, #6
    8758:	7e1a039e 	mrcvc	3, 0, r0, cr10, cr14, {4}
    875c:	02000005 	andeq	r0, r0, #5
    8760:	d0082423 	andle	r2, r8, r3, lsr #8
    8764:	03000001 	movweq	r0, #1
    8768:	8b1903a2 	blhi	6495f8 <__RAM_SIZE+0x5495f8>
    876c:	02000000 	andeq	r0, r0, #0
    8770:	e0082823 	and	r2, r8, r3, lsr #16
    8774:	03000009 	movweq	r0, #9
    8778:	7e1a03a6 	cdpvc	3, 1, cr0, cr10, cr6, {5}
    877c:	02000005 	andeq	r0, r0, #5
    8780:	25082c23 	strcs	r2, [r8, #-3107]	; 0xfffff3dd
    8784:	03000004 	movweq	r0, #4
    8788:	7e1a03a7 	cdpvc	3, 1, cr0, cr10, cr7, {5}
    878c:	02000005 	andeq	r0, r0, #5
    8790:	0b003023 	bleq	14824 <_Min_Stack_Size+0x13824>
    8794:	00049f04 	andeq	r9, r4, r4, lsl #30
    8798:	08ef0c00 	stmiaeq	pc!, {sl, fp}^	; <UNPREDICTABLE>
    879c:	86030000 	strhi	r0, [r3], -r0
    87a0:	015d0302 	cmpeq	sp, r2, lsl #6
    87a4:	040b0000 	streq	r0, [fp], #-0
    87a8:	00000584 	andeq	r0, r0, r4, lsl #11
    87ac:	0011270d 	andseq	r2, r1, sp, lsl #14
    87b0:	01390400 	teqeq	r9, r0, lsl #8
    87b4:	00059121 	andeq	r9, r5, r1, lsr #2
    87b8:	0d010100 	stfeqs	f0, [r1, #-0]
    87bc:	000018f4 	strdeq	r1, [r0], -r4
    87c0:	21015304 	tstcs	r1, r4, lsl #6
    87c4:	000000a8 	andeq	r0, r0, r8, lsr #1
    87c8:	3e0d0101 	adfcce	f0, f5, f1
    87cc:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    87d0:	9721018e 	strls	r0, [r1, -lr, lsl #3]!
    87d4:	01000000 	mrseq	r0, (UNDEF: 0)
    87d8:	1e9b0e01 	cdpne	14, 9, cr0, cr11, cr1, {0}
    87dc:	8f050000 	svchi	0x00050000
    87e0:	00058421 	andeq	r8, r5, r1, lsr #8
    87e4:	0f010100 	svceq	0x00010100
    87e8:	0008a501 	andeq	sl, r8, r1, lsl #10
    87ec:	07490100 	strbeq	r0, [r9, -r0, lsl #2]
    87f0:	00008b01 	andeq	r8, r0, r1, lsl #22
    87f4:	001f6800 	andseq	r6, pc, r0, lsl #16
    87f8:	001fdc10 	andseq	sp, pc, r0, lsl ip	; <UNPREDICTABLE>
    87fc:	0037ca10 	eorseq	ip, r7, r0, lsl sl
    8800:	07b50100 	ldreq	r0, [r5, r0, lsl #2]!
    8804:	ac100000 	ldcge	0, cr0, [r0], {-0}
    8808:	0100001e 	tsteq	r0, lr, lsl r0
    880c:	009c1e49 	addseq	r1, ip, r9, asr #28
    8810:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    8814:	37ea0000 	strbcc	r0, [sl, r0]!
    8818:	ee110000 	cdp	0, 1, cr0, cr1, cr0, {0}
    881c:	0100000e 	tsteq	r0, lr
    8820:	008b014c 	addeq	r0, fp, ip, asr #2
    8824:	38920000 	ldmcc	r2, {}	; <UNPREDICTABLE>
    8828:	38900000 	ldmcc	r0, {}	; <UNPREDICTABLE>
    882c:	fa110000 	blx	448834 <__RAM_SIZE+0x348834>
    8830:	01000003 	tsteq	r0, r3
    8834:	008b114e 	addeq	r1, fp, lr, asr #2
    8838:	38b10000 	ldmcc	r1!, {}	; <UNPREDICTABLE>
    883c:	38a50000 	stmiacc	r5!, {}	; <UNPREDICTABLE>
    8840:	79110000 	ldmdbvc	r1, {}	; <UNPREDICTABLE>
    8844:	01000019 	tsteq	r0, r9, lsl r0
    8848:	0591124f 	ldreq	r1, [r1, #591]	; 0x24f
    884c:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
    8850:	39000000 	stmdbcc	r0, {}	; <UNPREDICTABLE>
    8854:	b5120000 	ldrlt	r0, [r2, #-0]
    8858:	6a000007 	bvs	887c <_Min_Stack_Size+0x787c>
    885c:	0410001f 	ldreq	r0, [r0], #-31	; 0xffffffe1
    8860:	10001f6a 	andne	r1, r0, sl, ror #30
    8864:	10001f70 	andne	r1, r0, r0, ror pc
    8868:	8c055301 	stchi	3, cr5, [r5], {1}
    886c:	13000006 	movwne	r0, #6
    8870:	000007c8 	andeq	r0, r0, r8, asr #15
    8874:	00003917 	andeq	r3, r0, r7, lsl r9
    8878:	00003915 	andeq	r3, r0, r5, lsl r9
    887c:	0007f314 	andeq	pc, r7, r4, lsl r3	; <UNPREDICTABLE>
    8880:	001f6a00 	andseq	r6, pc, r0, lsl #20
    8884:	1f6a0710 	svcne	0x006a0710
    8888:	1f6e1000 	svcne	0x006e1000
    888c:	56021000 	strpl	r1, [r2], -r0
    8890:	06131302 	ldreq	r1, [r3], -r2, lsl #6
    8894:	2c000008 	stccs	0, cr0, [r0], {8}
    8898:	2a000039 	bcs	8984 <_Min_Stack_Size+0x7984>
    889c:	00000039 	andeq	r0, r0, r9, lsr r0
    88a0:	08141200 	ldmdaeq	r4, {r9, ip}
    88a4:	1f760000 	svcne	0x00760000
    88a8:	76011000 	strvc	r1, [r1], -r0
    88ac:	7a10001f 	bvc	408930 <__RAM_SIZE+0x308930>
    88b0:	0110001f 	tsteq	r0, pc, lsl r0
    88b4:	06b30e66 	ldrteq	r0, [r3], r6, ror #28
    88b8:	27130000 	ldrcs	r0, [r3, -r0]
    88bc:	41000008 	tstmi	r0, r8
    88c0:	3f000039 	svccc	0x00000039
    88c4:	00000039 	andeq	r0, r0, r9, lsr r0
    88c8:	0007d612 	andeq	sp, r7, r2, lsl r6
    88cc:	001f8a00 	andseq	r8, pc, r0, lsl #20
    88d0:	1f8a0110 	svcne	0x008a0110
    88d4:	1f8e1000 	svcne	0x008e1000
    88d8:	83011000 	movwhi	r1, #4096	; 0x1000
    88dc:	0006da09 	andeq	sp, r6, r9, lsl #20
    88e0:	07e51500 	strbeq	r1, [r5, r0, lsl #10]!
    88e4:	39560000 	ldmdbcc	r6, {}^	; <UNPREDICTABLE>
    88e8:	39540000 	ldmdbcc	r4, {}^	; <UNPREDICTABLE>
    88ec:	12000000 	andne	r0, r0, #0
    88f0:	000007d6 	ldrdeq	r0, [r0], -r6
    88f4:	10001f90 	mulne	r0, r0, pc	; <UNPREDICTABLE>
    88f8:	001f9001 	andseq	r9, pc, r1
    88fc:	001f9410 	andseq	r9, pc, r0, lsl r4	; <UNPREDICTABLE>
    8900:	095f0110 	ldmdbeq	pc, {r4, r8}^	; <UNPREDICTABLE>
    8904:	00000701 	andeq	r0, r0, r1, lsl #14
    8908:	0007e515 	andeq	lr, r7, r5, lsl r5
    890c:	00396b00 	eorseq	r6, r9, r0, lsl #22
    8910:	00396900 	eorseq	r6, r9, r0, lsl #18
    8914:	d6120000 	ldrle	r0, [r2], -r0
    8918:	98000007 	stmdals	r0, {r0, r1, r2}
    891c:	0110001f 	tsteq	r0, pc, lsl r0
    8920:	10001f98 	mulne	r0, r8, pc	; <UNPREDICTABLE>
    8924:	10001f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    8928:	28096a01 	stmdacs	r9, {r0, r9, fp, sp, lr}
    892c:	15000007 	strne	r0, [r0, #-7]
    8930:	000007e5 	andeq	r0, r0, r5, ror #15
    8934:	00003980 	andeq	r3, r0, r0, lsl #19
    8938:	0000397e 	andeq	r3, r0, lr, ror r9
    893c:	07d61200 	ldrbeq	r1, [r6, r0, lsl #4]
    8940:	1fa00000 	svcne	0x00a00000
    8944:	a0011000 	andge	r1, r1, r0
    8948:	a410001f 	ldrge	r0, [r0], #-31	; 0xffffffe1
    894c:	0110001f 	tsteq	r0, pc, lsl r0
    8950:	074f0977 	smlsldxeq	r0, pc, r7, r9	; <UNPREDICTABLE>
    8954:	e5150000 	ldr	r0, [r5, #-0]
    8958:	95000007 	strls	r0, [r0, #-7]
    895c:	93000039 	movwls	r0, #57	; 0x39
    8960:	00000039 	andeq	r0, r0, r9, lsr r0
    8964:	0007d612 	andeq	sp, r7, r2, lsl r6
    8968:	001fae00 	andseq	sl, pc, r0, lsl #28
    896c:	1fae0110 	svcne	0x00ae0110
    8970:	1fb21000 	svcne	0x00b21000
    8974:	90011000 	andls	r1, r1, r0
    8978:	0007760d 	andeq	r7, r7, sp, lsl #12
    897c:	07e51500 	strbeq	r1, [r5, r0, lsl #10]!
    8980:	39aa0000 	stmibcc	sl!, {}	; <UNPREDICTABLE>
    8984:	39a80000 	stmibcc	r8!, {}	; <UNPREDICTABLE>
    8988:	12000000 	andne	r0, r0, #0
    898c:	000007d6 	ldrdeq	r0, [r0], -r6
    8990:	10001fc2 	andne	r1, r0, r2, asr #31
    8994:	001fc201 	andseq	ip, pc, r1, lsl #4
    8998:	001fc610 	andseq	ip, pc, r0, lsl r6	; <UNPREDICTABLE>
    899c:	0da90110 	stfeqs	f0, [r9, #64]!	; 0x40
    89a0:	0000079d 	muleq	r0, sp, r7
    89a4:	0007e515 	andeq	lr, r7, r5, lsl r5
    89a8:	0039bf00 	eorseq	fp, r9, r0, lsl #30
    89ac:	0039bd00 	eorseq	fp, r9, r0, lsl #26
    89b0:	c2160000 	andsgt	r0, r6, #0
    89b4:	3510001f 	ldrcc	r0, [r0, #-31]	; 0xffffffe1
    89b8:	17000008 	strne	r0, [r0, -r8]
    89bc:	74025001 	strvc	r5, [r2], #-1
    89c0:	51011700 	tstpl	r1, r0, lsl #14
    89c4:	5001f303 	andpl	pc, r1, r3, lsl #6
    89c8:	24180000 	ldrcs	r0, [r8], #-0
    89cc:	0200000f 	andeq	r0, r0, #15
    89d0:	01370252 	teqeq	r7, r2, asr r2
    89d4:	0000008b 	andeq	r0, r0, fp, lsl #1
    89d8:	0007d603 	andeq	sp, r7, r3, lsl #12
    89dc:	0ead1900 	vfmaeq.f16	s2, s26, s0	; <UNPREDICTABLE>
    89e0:	54020000 	strpl	r0, [r2], #-0
    89e4:	008b0602 	addeq	r0, fp, r2, lsl #12
    89e8:	1a000000 	bne	89f0 <_Min_Stack_Size+0x79f0>
    89ec:	00000e99 	muleq	r0, r9, lr
    89f0:	37024902 	strcc	r4, [r2, -r2, lsl #18]
    89f4:	07f30301 	ldrbeq	r0, [r3, r1, lsl #6]!
    89f8:	ad1b0000 	ldcge	0, cr0, [fp, #-0]
    89fc:	0200000e 	andeq	r0, r0, #14
    8a00:	8b500249 	blhi	140932c <__RAM_SIZE+0x130932c>
    8a04:	00000000 	andeq	r0, r0, r0
    8a08:	000ec218 	andeq	ip, lr, r8, lsl r2
    8a0c:	02320200 	eorseq	r0, r2, #0, 4
    8a10:	008b0137 	addeq	r0, fp, r7, lsr r1
    8a14:	14030000 	strne	r0, [r3], #-0
    8a18:	19000008 	stmdbne	r0, {r3}
    8a1c:	00000eb1 			; <UNDEFINED> instruction: 0x00000eb1
    8a20:	06023402 	streq	r3, [r2], -r2, lsl #8
    8a24:	0000008b 	andeq	r0, r0, fp, lsl #1
    8a28:	19661800 	stmdbne	r6!, {fp, ip}^
    8a2c:	fa020000 	blx	88a34 <SYSTICK_CYCLES+0x5f9f5>
    8a30:	8b013701 	blhi	5663c <SYSTICK_CYCLES+0x2d5fd>
    8a34:	03000000 	movweq	r0, #0
    8a38:	00000835 	andeq	r0, r0, r5, lsr r8
    8a3c:	0019aa19 	andseq	sl, r9, r9, lsl sl
    8a40:	01fc0200 	mvnseq	r0, r0, lsl #4
    8a44:	00008b06 	andeq	r8, r0, r6, lsl #22
    8a48:	011c0000 	tsteq	ip, r0
    8a4c:	0010c901 	andseq	ip, r0, r1, lsl #18
    8a50:	0010c900 	andseq	ip, r0, r0, lsl #18
    8a54:	01210400 			; <UNDEFINED> instruction: 0x01210400
    8a58:	0755000d 	ldrbeq	r0, [r5, -sp]
    8a5c:	00020000 	andeq	r0, r2, r0
    8a60:	000017aa 	andeq	r1, r0, sl, lsr #15
    8a64:	003d0104 	eorseq	r0, sp, r4, lsl #2
    8a68:	de0c0000 	cdple	0, 0, cr0, cr12, cr0, {0}
    8a6c:	5c00001e 	stcpl	0, cr0, [r0], {30}
    8a70:	e0000006 	and	r0, r0, r6
    8a74:	00000002 	andeq	r0, r0, r2
    8a78:	00000000 	andeq	r0, r0, r0
    8a7c:	1a000000 	bne	8a84 <_Min_Stack_Size+0x7a84>
    8a80:	02000031 	andeq	r0, r0, #49	; 0x31
    8a84:	02390704 	eorseq	r0, r9, #4, 14	; 0x100000
    8a88:	04030000 	streq	r0, [r3], #-0
    8a8c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    8a90:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    8a94:	000004e8 	andeq	r0, r0, r8, ror #9
    8a98:	3e040802 	cdpcc	8, 0, cr0, cr4, cr2, {0}
    8a9c:	02000006 	andeq	r0, r0, #6
    8aa0:	086d0601 	stmdaeq	sp!, {r0, r9, sl}^
    8aa4:	01020000 	mrseq	r0, (UNDEF: 2)
    8aa8:	00086b08 	andeq	r6, r8, r8, lsl #22
    8aac:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    8ab0:	000006cf 	andeq	r0, r0, pc, asr #13
    8ab4:	39070202 	stmdbcc	r7, {r1, r9}
    8ab8:	02000009 	andeq	r0, r0, #9
    8abc:	04ed0504 	strbteq	r0, [sp], #1284	; 0x504
    8ac0:	04020000 	streq	r0, [r2], #-0
    8ac4:	00023407 	andeq	r3, r2, r7, lsl #8
    8ac8:	07080200 	streq	r0, [r8, -r0, lsl #4]
    8acc:	0000022f 	andeq	r0, r0, pc, lsr #4
    8ad0:	01020404 	tsteq	r2, r4, lsl #8
    8ad4:	00087408 	andeq	r7, r8, r8, lsl #8
    8ad8:	08fa0500 	ldmeq	sl!, {r8, sl}^
    8adc:	73020000 	movwvc	r0, #8192	; 0x2000
    8ae0:	00007831 	andeq	r7, r0, r1, lsr r8
    8ae4:	079a0500 	ldreq	r0, [sl, r0, lsl #10]
    8ae8:	76020000 	strvc	r0, [r2], -r0
    8aec:	00002931 	andeq	r2, r0, r1, lsr r9
    8af0:	072c0500 	streq	r0, [ip, -r0, lsl #10]!
    8af4:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    8af8:	00006831 	andeq	r6, r0, r1, lsr r8
    8afc:	053b0600 	ldreq	r0, [fp, #-1536]!	; 0xfffffa00
    8b00:	031c0000 	tsteq	ip, #0
    8b04:	22100182 	andscs	r0, r0, #-2147483616	; 0x80000020
    8b08:	07000001 	streq	r0, [r0, -r1]
    8b0c:	0000082d 	andeq	r0, r0, sp, lsr #16
    8b10:	19018603 	stmdbne	r1, {r0, r1, r9, sl, pc}
    8b14:	00000097 	muleq	r0, r7, r0
    8b18:	07002302 	streq	r2, [r0, -r2, lsl #6]
    8b1c:	000003a0 	andeq	r0, r0, r0, lsr #7
    8b20:	19018703 	stmdbne	r1, {r0, r1, r8, r9, sl, pc}
    8b24:	00000097 	muleq	r0, r7, r0
    8b28:	07042302 	streq	r2, [r4, -r2, lsl #6]
    8b2c:	0000043d 	andeq	r0, r0, sp, lsr r4
    8b30:	1b018a03 	blne	6b344 <SYSTICK_CYCLES+0x42305>
    8b34:	0000012e 	andeq	r0, r0, lr, lsr #2
    8b38:	07082302 	streq	r2, [r8, -r2, lsl #6]
    8b3c:	000001f2 	strdeq	r0, [r0], -r2
    8b40:	19018b03 	stmdbne	r1, {r0, r1, r8, r9, fp, pc}
    8b44:	00000097 	muleq	r0, r7, r0
    8b48:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    8b4c:	0000096f 	andeq	r0, r0, pc, ror #18
    8b50:	1a019103 	bne	6cf64 <SYSTICK_CYCLES+0x43f25>
    8b54:	00000134 	andeq	r0, r0, r4, lsr r1
    8b58:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    8b5c:	0000001b 	andeq	r0, r0, fp, lsl r0
    8b60:	1a019203 	bne	6d374 <SYSTICK_CYCLES+0x44335>
    8b64:	00000134 	andeq	r0, r0, r4, lsr r1
    8b68:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    8b6c:	00000609 	andeq	r0, r0, r9, lsl #12
    8b70:	1b019603 	blne	6e384 <SYSTICK_CYCLES+0x45345>
    8b74:	0000013a 	andeq	r0, r0, sl, lsr r1
    8b78:	00182302 	andseq	r2, r8, r2, lsl #6
    8b7c:	012e0108 			; <UNDEFINED> instruction: 0x012e0108
    8b80:	97090000 	strls	r0, [r9, -r0]
    8b84:	00000000 	andeq	r0, r0, r0
    8b88:	0122040a 			; <UNDEFINED> instruction: 0x0122040a
    8b8c:	040a0000 	streq	r0, [sl], #-0
    8b90:	000000a3 	andeq	r0, r0, r3, lsr #1
    8b94:	0134040a 	teqeq	r4, sl, lsl #8
    8b98:	4a0b0000 	bmi	2c8ba0 <__RAM_SIZE+0x1c8ba0>
    8b9c:	03000006 	movweq	r0, #6
    8ba0:	a303019b 	movwge	r0, #12699	; 0x319b
    8ba4:	0a000000 	beq	8bac <_Min_Stack_Size+0x7bac>
    8ba8:	00007f04 	andeq	r7, r0, r4, lsl #30
    8bac:	034b0600 	movteq	r0, #46592	; 0xb600
    8bb0:	03d80000 	bicseq	r0, r8, #0
    8bb4:	781001d6 	ldmdavc	r0, {r1, r2, r4, r6, r7, r8}
    8bb8:	07000004 	streq	r0, [r0, -r4]
    8bbc:	0000092c 	andeq	r0, r0, ip, lsr #18
    8bc0:	1901dd03 	stmdbne	r1, {r0, r1, r8, sl, fp, ip, lr, pc}
    8bc4:	00000097 	muleq	r0, r7, r0
    8bc8:	07002302 	streq	r2, [r0, -r2, lsl #6]
    8bcc:	0000079f 	muleq	r0, pc, r7	; <UNPREDICTABLE>
    8bd0:	1901de03 	stmdbne	r1, {r0, r1, r9, sl, fp, ip, lr, pc}
    8bd4:	00000097 	muleq	r0, r7, r0
    8bd8:	07042302 	streq	r2, [r4, -r2, lsl #6]
    8bdc:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    8be0:	1a01df03 	bne	807f4 <SYSTICK_CYCLES+0x577b5>
    8be4:	00000076 	andeq	r0, r0, r6, ror r0
    8be8:	07082302 	streq	r2, [r8, -r2, lsl #6]
    8bec:	00000916 	andeq	r0, r0, r6, lsl r9
    8bf0:	1a01e003 	bne	80c04 <SYSTICK_CYCLES+0x57bc5>
    8bf4:	00000076 	andeq	r0, r0, r6, ror r0
    8bf8:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    8bfc:	00000411 	andeq	r0, r0, r1, lsl r4
    8c00:	1a01e103 	bne	81014 <SYSTICK_CYCLES+0x57fd5>
    8c04:	00000076 	andeq	r0, r0, r6, ror r0
    8c08:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    8c0c:	0000095a 	andeq	r0, r0, sl, asr r9
    8c10:	1901e203 	stmdbne	r1, {r0, r1, r9, sp, lr, pc}
    8c14:	00000097 	muleq	r0, r7, r0
    8c18:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    8c1c:	000021e2 	andeq	r2, r0, r2, ror #3
    8c20:	1901e303 	stmdbne	r1, {r0, r1, r8, r9, sp, lr, pc}
    8c24:	00000097 	muleq	r0, r7, r0
    8c28:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    8c2c:	00000625 	andeq	r0, r0, r5, lsr #12
    8c30:	1901e403 	stmdbne	r1, {r0, r1, sl, sp, lr, pc}
    8c34:	00000097 	muleq	r0, r7, r0
    8c38:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    8c3c:	000006ba 			; <UNDEFINED> instruction: 0x000006ba
    8c40:	1a01e803 	bne	82c54 <SYSTICK_CYCLES+0x59c15>
    8c44:	00000478 	andeq	r0, r0, r8, ror r4
    8c48:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    8c4c:	00000199 	muleq	r0, r9, r1
    8c50:	1a01e903 	bne	83064 <SYSTICK_CYCLES+0x5a025>
    8c54:	00000478 	andeq	r0, r0, r8, ror r4
    8c58:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    8c5c:	000005b1 			; <UNDEFINED> instruction: 0x000005b1
    8c60:	1a01f103 	bne	85074 <SYSTICK_CYCLES+0x5c035>
    8c64:	0000014d 	andeq	r0, r0, sp, asr #2
    8c68:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    8c6c:	000002d9 	ldrdeq	r0, [r0], -r9
    8c70:	1901f203 	stmdbne	r1, {r0, r1, r9, ip, sp, lr, pc}
    8c74:	0000008b 	andeq	r0, r0, fp, lsl #1
    8c78:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    8c7c:	00000246 	andeq	r0, r0, r6, asr #4
    8c80:	1901f303 	stmdbne	r1, {r0, r1, r8, r9, ip, sp, lr, pc}
    8c84:	0000008b 	andeq	r0, r0, fp, lsl #1
    8c88:	07302302 	ldreq	r2, [r0, -r2, lsl #6]!
    8c8c:	00000173 	andeq	r0, r0, r3, ror r1
    8c90:	1901f403 	stmdbne	r1, {r0, r1, sl, ip, sp, lr, pc}
    8c94:	0000008b 	andeq	r0, r0, fp, lsl #1
    8c98:	07342302 	ldreq	r2, [r4, -r2, lsl #6]!
    8c9c:	0000074b 	andeq	r0, r0, fp, asr #14
    8ca0:	1901f503 	stmdbne	r1, {r0, r1, r8, sl, ip, sp, lr, pc}
    8ca4:	0000008b 	andeq	r0, r0, fp, lsl #1
    8ca8:	07382302 	ldreq	r2, [r8, -r2, lsl #6]!
    8cac:	000000eb 	andeq	r0, r0, fp, ror #1
    8cb0:	1901f603 	stmdbne	r1, {r0, r1, r9, sl, ip, sp, lr, pc}
    8cb4:	0000008b 	andeq	r0, r0, fp, lsl #1
    8cb8:	073c2302 	ldreq	r2, [ip, -r2, lsl #6]!
    8cbc:	0000035c 	andeq	r0, r0, ip, asr r3
    8cc0:	1b01fb03 	blne	878d4 <SYSTICK_CYCLES+0x5e895>
    8cc4:	0000048f 	andeq	r0, r0, pc, lsl #9
    8cc8:	07402302 	strbeq	r2, [r0, -r2, lsl #6]
    8ccc:	00000152 	andeq	r0, r0, r2, asr r1
    8cd0:	1b020303 	blne	898e4 <SYSTICK_CYCLES+0x608a5>
    8cd4:	0000012e 	andeq	r0, r0, lr, lsr #2
    8cd8:	07442302 	strbeq	r2, [r4, -r2, lsl #6]
    8cdc:	00000107 	andeq	r0, r0, r7, lsl #2
    8ce0:	19020403 	stmdbne	r2, {r0, r1, sl}
    8ce4:	00000097 	muleq	r0, r7, r0
    8ce8:	07482302 	strbeq	r2, [r8, -r2, lsl #6]
    8cec:	0000033b 	andeq	r0, r0, fp, lsr r3
    8cf0:	19020803 	stmdbne	r2, {r0, r1, fp}
    8cf4:	00000140 	andeq	r0, r0, r0, asr #2
    8cf8:	074c2302 	strbeq	r2, [ip, -r2, lsl #6]
    8cfc:	000002ec 	andeq	r0, r0, ip, ror #5
    8d00:	1b020e03 	blne	8c514 <SYSTICK_CYCLES+0x634d5>
    8d04:	0000048f 	andeq	r0, r0, pc, lsl #9
    8d08:	07682302 	strbeq	r2, [r8, -r2, lsl #6]!
    8d0c:	000005e9 	andeq	r0, r0, r9, ror #11
    8d10:	1a020f03 	bne	8c924 <SYSTICK_CYCLES+0x638e5>
    8d14:	00000076 	andeq	r0, r0, r6, ror r0
    8d18:	076c2302 	strbeq	r2, [ip, -r2, lsl #6]!
    8d1c:	00000732 	andeq	r0, r0, r2, lsr r7
    8d20:	1a021103 	bne	8d134 <SYSTICK_CYCLES+0x640f5>
    8d24:	00000478 	andeq	r0, r0, r8, ror r4
    8d28:	07702302 	ldrbeq	r2, [r0, -r2, lsl #6]!
    8d2c:	00000212 	andeq	r0, r0, r2, lsl r2
    8d30:	1a021203 	bne	8d544 <SYSTICK_CYCLES+0x64505>
    8d34:	00000478 	andeq	r0, r0, r8, ror r4
    8d38:	07742302 	ldrbeq	r2, [r4, -r2, lsl #6]!
    8d3c:	00000715 	andeq	r0, r0, r5, lsl r7
    8d40:	19021303 	stmdbne	r2, {r0, r1, r8, r9, ip}
    8d44:	00000097 	muleq	r0, r7, r0
    8d48:	07782302 	ldrbeq	r2, [r8, -r2, lsl #6]!
    8d4c:	000003c6 	andeq	r0, r0, r6, asr #7
    8d50:	1a021403 	bne	8dd64 <SYSTICK_CYCLES+0x64d25>
    8d54:	00000076 	andeq	r0, r0, r6, ror r0
    8d58:	077c2302 	ldrbeq	r2, [ip, -r2, lsl #6]!
    8d5c:	00000554 	andeq	r0, r0, r4, asr r5
    8d60:	19021503 	stmdbne	r2, {r0, r1, r8, sl, ip}
    8d64:	0000008b 	andeq	r0, r0, fp, lsl #1
    8d68:	01802303 	orreq	r2, r0, r3, lsl #6
    8d6c:	0003e807 	andeq	lr, r3, r7, lsl #16
    8d70:	02160300 	andseq	r0, r6, #0, 6
    8d74:	00008b19 	andeq	r8, r0, r9, lsl fp
    8d78:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    8d7c:	08ff0701 	ldmeq	pc!, {r0, r8, r9, sl}^	; <UNPREDICTABLE>
    8d80:	1f030000 	svcne	0x00030000
    8d84:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    8d88:	23030000 	movwcs	r0, #12288	; 0x3000
    8d8c:	f0070188 			; <UNDEFINED> instruction: 0xf0070188
    8d90:	03000007 	movweq	r0, #7
    8d94:	781a0220 	ldmdavc	sl, {r5, r9}
    8d98:	03000004 	movweq	r0, #4
    8d9c:	07018c23 	streq	r8, [r1, -r3, lsr #24]
    8da0:	000002c1 	andeq	r0, r0, r1, asr #5
    8da4:	19022e03 	stmdbne	r2, {r0, r1, r9, sl, fp, sp}
    8da8:	0000008b 	andeq	r0, r0, fp, lsl #1
    8dac:	01902303 	orrseq	r2, r0, r3, lsl #6
    8db0:	00025607 	andeq	r5, r2, r7, lsl #12
    8db4:	022f0300 	eoreq	r0, pc, #0, 6
    8db8:	00008b19 	andeq	r8, r0, r9, lsl fp
    8dbc:	94230300 	strtls	r0, [r3], #-768	; 0xfffffd00
    8dc0:	03200701 			; <UNDEFINED> instruction: 0x03200701
    8dc4:	30030000 	andcc	r0, r3, r0
    8dc8:	008b1902 	addeq	r1, fp, r2, lsl #18
    8dcc:	23030000 	movwcs	r0, #12288	; 0x3000
    8dd0:	77070198 			; <UNDEFINED> instruction: 0x77070198
    8dd4:	03000002 	movweq	r0, #2
    8dd8:	8b190233 	blhi	6496ac <__RAM_SIZE+0x5496ac>
    8ddc:	03000000 	movweq	r0, #0
    8de0:	07019c23 	streq	r9, [r1, -r3, lsr #24]
    8de4:	00000000 	andeq	r0, r0, r0
    8de8:	1a023503 	bne	961fc <SYSTICK_CYCLES+0x6d1bd>
    8dec:	00000574 	andeq	r0, r0, r4, ror r5
    8df0:	01a02303 	lsleq	r2, r3, #6
    8df4:	001bc807 	andseq	ip, fp, r7, lsl #16
    8df8:	023a0300 	eorseq	r0, sl, #0, 6
    8dfc:	00009719 	andeq	r9, r0, r9, lsl r7
    8e00:	a4230300 	strtge	r0, [r3], #-768	; 0xfffffd00
    8e04:	1c880701 	stcne	7, cr0, [r8], {1}
    8e08:	3d030000 	stccc	0, cr0, [r3, #-0]
    8e0c:	00971902 	addseq	r1, r7, r2, lsl #18
    8e10:	23030000 	movwcs	r0, #12288	; 0x3000
    8e14:	410701a8 	smlatbmi	r7, r8, r1, r0
    8e18:	0300001b 	movweq	r0, #27
    8e1c:	97190241 	ldrls	r0, [r9, -r1, asr #4]
    8e20:	03000000 	movweq	r0, #0
    8e24:	0701ac23 	streq	sl, [r1, -r3, lsr #24]
    8e28:	00001d3f 	andeq	r1, r0, pc, lsr sp
    8e2c:	19024503 	stmdbne	r2, {r0, r1, r8, sl, lr}
    8e30:	00000097 	muleq	r0, r7, r0
    8e34:	01b02303 	lslseq	r2, r3, #6
    8e38:	001c5807 	andseq	r5, ip, r7, lsl #16
    8e3c:	02480300 	subeq	r0, r8, #0, 6
    8e40:	00009719 	andeq	r9, r0, r9, lsl r7
    8e44:	b4230300 	strtlt	r0, [r3], #-768	; 0xfffffd00
    8e48:	07c30701 	strbeq	r0, [r3, r1, lsl #14]
    8e4c:	4c030000 	stcmi	0, cr0, [r3], {-0}
    8e50:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    8e54:	23030000 	movwcs	r0, #12288	; 0x3000
    8e58:	170701b8 			; <UNDEFINED> instruction: 0x170701b8
    8e5c:	0300001d 	movweq	r0, #29
    8e60:	9719024f 	ldrls	r0, [r9, -pc, asr #4]
    8e64:	03000000 	movweq	r0, #0
    8e68:	0701bc23 	streq	fp, [r1, -r3, lsr #24]
    8e6c:	00001b19 	andeq	r1, r0, r9, lsl fp
    8e70:	19025203 	stmdbne	r2, {r0, r1, r9, ip, lr}
    8e74:	00000097 	muleq	r0, r7, r0
    8e78:	01c02303 	biceq	r2, r0, r3, lsl #6
    8e7c:	001a9607 	andseq	r9, sl, r7, lsl #12
    8e80:	02550300 	subseq	r0, r5, #0, 6
    8e84:	00009719 	andeq	r9, r0, r9, lsl r7
    8e88:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    8e8c:	1bec0701 	blne	ffb0aa98 <__RAM_segment_used_end__+0xc7a0aa98>
    8e90:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>
    8e94:	00971902 	addseq	r1, r7, r2, lsl #18
    8e98:	23030000 	movwcs	r0, #12288	; 0x3000
    8e9c:	c40701c8 	strgt	r0, [r7], #-456	; 0xfffffe38
    8ea0:	03000009 	movweq	r0, #9
    8ea4:	761a025d 			; <UNDEFINED> instruction: 0x761a025d
    8ea8:	03000000 	movweq	r0, #0
    8eac:	0701cc23 	streq	ip, [r1, -r3, lsr #24]
    8eb0:	00000481 	andeq	r0, r0, r1, lsl #9
    8eb4:	19027803 	stmdbne	r2, {r0, r1, fp, ip, sp, lr}
    8eb8:	00000097 	muleq	r0, r7, r0
    8ebc:	01d02303 	bicseq	r2, r0, r3, lsl #6
    8ec0:	00056d07 	andeq	r6, r5, r7, lsl #26
    8ec4:	027d0300 	rsbseq	r0, sp, #0, 6
    8ec8:	00009719 	andeq	r9, r0, r9, lsl r7
    8ecc:	d4230300 	strtle	r0, [r3], #-768	; 0xfffffd00
    8ed0:	040a0001 	streq	r0, [sl], #-1
    8ed4:	00000153 	andeq	r0, r0, r3, asr r1
    8ed8:	048f0108 	streq	r0, [pc], #264	; 8ee0 <_Min_Stack_Size+0x7ee0>
    8edc:	78090000 	stmdavc	r9, {}	; <UNPREDICTABLE>
    8ee0:	09000004 	stmdbeq	r0, {r2}
    8ee4:	00000097 	muleq	r0, r7, r0
    8ee8:	7e040a00 	vmlavc.f32	s0, s8, s0
    8eec:	06000004 	streq	r0, [r0], -r4
    8ef0:	000007b3 			; <UNDEFINED> instruction: 0x000007b3
    8ef4:	037e0334 	cmneq	lr, #52, 6	; 0xd0000000
    8ef8:	00057410 	andeq	r7, r5, r0, lsl r4
    8efc:	018d0700 	orreq	r0, sp, r0, lsl #14
    8f00:	82030000 	andhi	r0, r3, #0
    8f04:	00971903 	addseq	r1, r7, r3, lsl #18
    8f08:	23020000 	movwcs	r0, #8192	; 0x2000
    8f0c:	08970700 	ldmeq	r7, {r8, r9, sl}
    8f10:	85030000 	strhi	r0, [r3, #-0]
    8f14:	014d1a03 	cmpeq	sp, r3, lsl #20
    8f18:	23020000 	movwcs	r0, #8192	; 0x2000
    8f1c:	06fc0704 	ldrbteq	r0, [ip], r4, lsl #14
    8f20:	88030000 	stmdahi	r3, {}	; <UNPREDICTABLE>
    8f24:	008b1903 	addeq	r1, fp, r3, lsl #18
    8f28:	23020000 	movwcs	r0, #8192	; 0x2000
    8f2c:	04cb0708 	strbeq	r0, [fp], #1800	; 0x708
    8f30:	8c030000 	stchi	0, cr0, [r3], {-0}
    8f34:	05871a03 	streq	r1, [r7, #2563]	; 0xa03
    8f38:	23020000 	movwcs	r0, #8192	; 0x2000
    8f3c:	0162070c 	cmneq	r2, ip, lsl #14
    8f40:	90030000 	andls	r0, r3, r0
    8f44:	008b1903 	addeq	r1, fp, r3, lsl #18
    8f48:	23020000 	movwcs	r0, #8192	; 0x2000
    8f4c:	01210710 			; <UNDEFINED> instruction: 0x01210710
    8f50:	93030000 	movwls	r0, #12288	; 0x3000
    8f54:	008b1903 	addeq	r1, fp, r3, lsl #18
    8f58:	23020000 	movwcs	r0, #8192	; 0x2000
    8f5c:	08cd0714 	stmiaeq	sp, {r2, r4, r8, r9, sl}^
    8f60:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    8f64:	04781a03 	ldrbteq	r1, [r8], #-2563	; 0xfffff5fd
    8f68:	23020000 	movwcs	r0, #8192	; 0x2000
    8f6c:	06e30718 	usateq	r0, #3, r8, lsl #14
    8f70:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    8f74:	008b1903 	addeq	r1, fp, r3, lsl #18
    8f78:	23020000 	movwcs	r0, #8192	; 0x2000
    8f7c:	05d3071c 	ldrbeq	r0, [r3, #1820]	; 0x71c
    8f80:	9d030000 	stcls	0, cr0, [r3, #-0]
    8f84:	05741a03 	ldrbeq	r1, [r4, #-2563]!	; 0xfffff5fd
    8f88:	23020000 	movwcs	r0, #8192	; 0x2000
    8f8c:	06a00720 	strteq	r0, [r0], r0, lsr #14
    8f90:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    8f94:	05741a03 	ldrbeq	r1, [r4, #-2563]!	; 0xfffff5fd
    8f98:	23020000 	movwcs	r0, #8192	; 0x2000
    8f9c:	01d00724 	bicseq	r0, r0, r4, lsr #14
    8fa0:	a2030000 	andge	r0, r3, #0
    8fa4:	008b1903 	addeq	r1, fp, r3, lsl #18
    8fa8:	23020000 	movwcs	r0, #8192	; 0x2000
    8fac:	09e00728 	stmibeq	r0!, {r3, r5, r8, r9, sl}^
    8fb0:	a6030000 	strge	r0, [r3], -r0
    8fb4:	05741a03 	ldrbeq	r1, [r4, #-2563]!	; 0xfffff5fd
    8fb8:	23020000 	movwcs	r0, #8192	; 0x2000
    8fbc:	0425072c 	strteq	r0, [r5], #-1836	; 0xfffff8d4
    8fc0:	a7030000 	strge	r0, [r3, -r0]
    8fc4:	05741a03 	ldrbeq	r1, [r4, #-2563]!	; 0xfffff5fd
    8fc8:	23020000 	movwcs	r0, #8192	; 0x2000
    8fcc:	040a0030 	streq	r0, [sl], #-48	; 0xffffffd0
    8fd0:	00000495 	muleq	r0, r5, r4
    8fd4:	0008ef0b 	andeq	lr, r8, fp, lsl #30
    8fd8:	02860300 	addeq	r0, r6, #0, 6
    8fdc:	00015303 	andeq	r5, r1, r3, lsl #6
    8fe0:	7a040a00 	bvc	10b7e8 <__RAM_SIZE+0xb7e8>
    8fe4:	0a000005 	beq	9000 <_Min_Stack_Size+0x8000>
    8fe8:	00009704 	andeq	r9, r0, r4, lsl #14
    8fec:	c5010c00 	strgt	r0, [r1, #-3072]	; 0xfffff400
    8ff0:	0100001e 	tsteq	r0, lr, lsl r0
    8ff4:	dc010748 	stcle	7, cr0, [r1], {72}	; 0x48
    8ff8:	6810001f 	ldmdavs	r0, {r0, r1, r2, r3, r4}
    8ffc:	d2100020 	andsle	r0, r0, #32
    9000:	01000039 	tsteq	r0, r9, lsr r0
    9004:	000006fd 	strdeq	r0, [r0], -sp
    9008:	0019790d 	andseq	r7, r9, sp, lsl #18
    900c:	2b480100 	blcs	1209414 <__RAM_SIZE+0x1109414>
    9010:	00000587 	andeq	r0, r0, r7, lsl #11
    9014:	ee0e5001 	cdp	0, 0, cr5, cr14, cr1, {0}
    9018:	0100000e 	tsteq	r0, lr
    901c:	008b014b 	addeq	r0, fp, fp, asr #2
    9020:	3a0e0000 	bcc	389028 <__RAM_SIZE+0x289028>
    9024:	3a0a0000 	bcc	28902c <__RAM_SIZE+0x18902c>
    9028:	c60e0000 	strgt	r0, [lr], -r0
    902c:	01000001 	tsteq	r0, r1
    9030:	058d0e4d 	streq	r0, [sp, #3661]	; 0xe4d
    9034:	3a320000 	bcc	c8903c <__RAM_SIZE+0xb8903c>
    9038:	3a2c0000 	bcc	b09040 <__RAM_SIZE+0xa09040>
    903c:	b80e0000 	stmdalt	lr, {}	; <UNPREDICTABLE>
    9040:	0100001e 	tsteq	r0, lr, lsl r0
    9044:	058d0e4e 	streq	r0, [sp, #3662]	; 0xe4e
    9048:	3a5d0000 	bcc	1749050 <__RAM_SIZE+0x1649050>
    904c:	3a5b0000 	bcc	16c9054 <__RAM_SIZE+0x15c9054>
    9050:	1c0e0000 	stcne	0, cr0, [lr], {-0}
    9054:	0100001f 	tsteq	r0, pc, lsl r0
    9058:	058d0e4f 	streq	r0, [sp, #3663]	; 0xe4f
    905c:	3a760000 	bcc	1d89064 <__RAM_SIZE+0x1c89064>
    9060:	3a700000 	bcc	1c09068 <__RAM_SIZE+0x1b09068>
    9064:	870e0000 	strhi	r0, [lr, -r0]
    9068:	01000017 	tsteq	r0, r7, lsl r0
    906c:	00970d50 	addseq	r0, r7, r0, asr sp
    9070:	3aa50000 	bcc	fe949078 <__RAM_segment_used_end__+0xc6849078>
    9074:	3a9f0000 	bcc	fe7c907c <__RAM_segment_used_end__+0xc66c907c>
    9078:	fd0f0000 	stc2	0, cr0, [pc, #-0]	; 9080 <_Min_Stack_Size+0x8080>
    907c:	dc000006 	stcle	0, cr0, [r0], {6}
    9080:	0710001f 			; <UNDEFINED> instruction: 0x0710001f
    9084:	10001fdc 	ldrdne	r1, [r0], -ip
    9088:	10001fe2 	andne	r1, r0, r2, ror #31
    908c:	6b055401 	blvs	15e098 <__RAM_SIZE+0x5e098>
    9090:	10000006 	andne	r0, r0, r6
    9094:	00000710 	andeq	r0, r0, r0, lsl r7
    9098:	00003ad8 	ldrdeq	r3, [r0], -r8
    909c:	00003ad6 	ldrdeq	r3, [r0], -r6
    90a0:	00073b11 	andeq	r3, r7, r1, lsl fp
    90a4:	001fdc00 	andseq	sp, pc, r0, lsl #24
    90a8:	1fdc0a10 	svcne	0x00dc0a10
    90ac:	1fe01000 	svcne	0x00e01000
    90b0:	56021000 	strpl	r1, [r2], -r0
    90b4:	4a101302 	bmi	40dcc4 <__RAM_SIZE+0x30dcc4>
    90b8:	ed000007 	stc	0, cr0, [r0, #-28]	; 0xffffffe4
    90bc:	eb00003a 	bl	91ac <_Min_Stack_Size+0x81ac>
    90c0:	0000003a 	andeq	r0, r0, sl, lsr r0
    90c4:	071e1200 	ldreq	r1, [lr, -r0, lsl #4]
    90c8:	1fec0000 	svcne	0x00ec0000
    90cc:	c8011000 	stmdagt	r1, {ip}
    90d0:	01000002 	tsteq	r0, r2
    90d4:	068e05b4 			; <UNDEFINED> instruction: 0x068e05b4
    90d8:	2d130000 	ldccs	0, cr0, [r3, #-0]
    90dc:	04000007 	streq	r0, [r0], #-7
    90e0:	0000003b 	andeq	r0, r0, fp, lsr r0
    90e4:	0000003b 	andeq	r0, r0, fp, lsr r0
    90e8:	00071e0f 	andeq	r1, r7, pc, lsl #28
    90ec:	00200000 	eoreq	r0, r0, r0
    90f0:	20000110 	andcs	r0, r0, r0, lsl r1
    90f4:	20061000 	andcs	r1, r6, r0
    90f8:	6d011000 	stcvs	0, cr1, [r1, #-0]
    90fc:	0006b515 	andeq	fp, r6, r5, lsl r5
    9100:	072d1300 	streq	r1, [sp, -r0, lsl #6]!
    9104:	3b240000 	blcc	90910c <__RAM_SIZE+0x80910c>
    9108:	3b220000 	blcc	889110 <__RAM_SIZE+0x789110>
    910c:	14000000 	strne	r0, [r0], #-0
    9110:	000006fd 	strdeq	r0, [r0], -sp
    9114:	1000202e 	andne	r2, r0, lr, lsr #32
    9118:	00202e01 	eoreq	r2, r0, r1, lsl #28
    911c:	00203410 	eoreq	r3, r0, r0, lsl r4
    9120:	15940110 	ldrne	r0, [r4, #272]	; 0x110
    9124:	00071010 	andeq	r1, r7, r0, lsl r0
    9128:	003b3b00 	eorseq	r3, fp, r0, lsl #22
    912c:	003b3700 	eorseq	r3, fp, r0, lsl #14
    9130:	073b1100 	ldreq	r1, [fp, -r0, lsl #2]!
    9134:	202e0000 	eorcs	r0, lr, r0
    9138:	2e041000 	cdpcs	0, 0, cr1, cr4, cr0, {0}
    913c:	32100020 	andscc	r0, r0, #32
    9140:	02100020 	andseq	r0, r0, #32
    9144:	10130256 	andsne	r0, r3, r6, asr r2
    9148:	0000074a 	andeq	r0, r0, sl, asr #14
    914c:	00003b5b 	andeq	r3, r0, fp, asr fp
    9150:	00003b59 	andeq	r3, r0, r9, asr fp
    9154:	15000000 	strne	r0, [r0, #-0]
    9158:	00000f24 	andeq	r0, r0, r4, lsr #30
    915c:	37025202 	strcc	r5, [r2, -r2, lsl #4]
    9160:	00008b01 	andeq	r8, r0, r1, lsl #22
    9164:	071e0300 	ldreq	r0, [lr, -r0, lsl #6]
    9168:	ad160000 	ldcge	0, cr0, [r6, #-0]
    916c:	0200000e 	andeq	r0, r0, #14
    9170:	8b060254 	blhi	189ac8 <__RAM_SIZE+0x89ac8>
    9174:	00000000 	andeq	r0, r0, r0
    9178:	000e9917 	andeq	r9, lr, r7, lsl r9
    917c:	02490200 	subeq	r0, r9, #0, 4
    9180:	3b030137 	blcc	c9664 <SYSTICK_CYCLES+0xa0625>
    9184:	18000007 	stmdane	r0, {r0, r1, r2}
    9188:	00000ead 	andeq	r0, r0, sp, lsr #29
    918c:	50024902 	andpl	r4, r2, r2, lsl #18
    9190:	0000008b 	andeq	r0, r0, fp, lsl #1
    9194:	0ec21900 	vdiveq.f16	s3, s4, s0	; <UNPREDICTABLE>
    9198:	32020000 	andcc	r0, r2, #0
    919c:	8b013702 	blhi	56dac <SYSTICK_CYCLES+0x2dd6d>
    91a0:	03000000 	movweq	r0, #0
    91a4:	000eb116 	andeq	fp, lr, r6, lsl r1
    91a8:	02340200 	eorseq	r0, r4, #0, 4
    91ac:	00008b06 	andeq	r8, r0, r6, lsl #22
    91b0:	c9000000 	stmdbgt	r0, {}	; <UNPREDICTABLE>
    91b4:	02000006 	andeq	r0, r0, #6
    91b8:	00194200 	andseq	r4, r9, r0, lsl #4
    91bc:	3d010400 	cfstrscc	mvf0, [r1, #-0]
    91c0:	0c000000 	stceq	0, cr0, [r0], {-0}
    91c4:	00001f2a 	andeq	r1, r0, sl, lsr #30
    91c8:	0000065c 	andeq	r0, r0, ip, asr r6
    91cc:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
    91d8:	00003360 	andeq	r3, r0, r0, ror #6
    91dc:	39070402 	stmdbcc	r7, {r1, sl}
    91e0:	03000002 	movweq	r0, #2
    91e4:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    91e8:	08020074 	stmdaeq	r2, {r2, r4, r5, r6}
    91ec:	0004e805 	andeq	lr, r4, r5, lsl #16
    91f0:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
    91f4:	0000063e 	andeq	r0, r0, lr, lsr r6
    91f8:	6d060102 	stfvss	f0, [r6, #-8]
    91fc:	02000008 	andeq	r0, r0, #8
    9200:	086b0801 	stmdaeq	fp!, {r0, fp}^
    9204:	02020000 	andeq	r0, r2, #0
    9208:	0006cf05 	andeq	ip, r6, r5, lsl #30
    920c:	07020200 	streq	r0, [r2, -r0, lsl #4]
    9210:	00000939 	andeq	r0, r0, r9, lsr r9
    9214:	ed050402 	cfstrs	mvf0, [r5, #-8]
    9218:	02000004 	andeq	r0, r0, #4
    921c:	02340704 	eorseq	r0, r4, #4, 14	; 0x100000
    9220:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    9224:	00022f07 	andeq	r2, r2, r7, lsl #30
    9228:	02040400 	andeq	r0, r4, #0, 8
    922c:	08740801 	ldmdaeq	r4!, {r0, fp}^
    9230:	fa050000 	blx	149238 <__RAM_SIZE+0x49238>
    9234:	02000008 	andeq	r0, r0, #8
    9238:	00783173 	rsbseq	r3, r8, r3, ror r1
    923c:	9a050000 	bls	149244 <__RAM_SIZE+0x49244>
    9240:	02000007 	andeq	r0, r0, #7
    9244:	00293176 	eoreq	r3, r9, r6, ror r1
    9248:	2c050000 	stccs	0, cr0, [r5], {-0}
    924c:	02000007 	andeq	r0, r0, #7
    9250:	00683178 	rsbeq	r3, r8, r8, ror r1
    9254:	3b060000 	blcc	18925c <__RAM_SIZE+0x8925c>
    9258:	1c000005 	stcne	0, cr0, [r0], {5}
    925c:	10018203 	andne	r8, r1, r3, lsl #4
    9260:	00000122 	andeq	r0, r0, r2, lsr #2
    9264:	00082d07 	andeq	r2, r8, r7, lsl #26
    9268:	01860300 	orreq	r0, r6, r0, lsl #6
    926c:	00009719 	andeq	r9, r0, r9, lsl r7
    9270:	00230200 	eoreq	r0, r3, r0, lsl #4
    9274:	0003a007 	andeq	sl, r3, r7
    9278:	01870300 	orreq	r0, r7, r0, lsl #6
    927c:	00009719 	andeq	r9, r0, r9, lsl r7
    9280:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9284:	00043d07 	andeq	r3, r4, r7, lsl #26
    9288:	018a0300 	orreq	r0, sl, r0, lsl #6
    928c:	00012e1b 	andeq	r2, r1, fp, lsl lr
    9290:	08230200 	stmdaeq	r3!, {r9}
    9294:	0001f207 	andeq	pc, r1, r7, lsl #4
    9298:	018b0300 	orreq	r0, fp, r0, lsl #6
    929c:	00009719 	andeq	r9, r0, r9, lsl r7
    92a0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    92a4:	00096f07 	andeq	r6, r9, r7, lsl #30
    92a8:	01910300 	orrseq	r0, r1, r0, lsl #6
    92ac:	0001341a 	andeq	r3, r1, sl, lsl r4
    92b0:	10230200 	eorne	r0, r3, r0, lsl #4
    92b4:	00001b07 	andeq	r1, r0, r7, lsl #22
    92b8:	01920300 	orrseq	r0, r2, r0, lsl #6
    92bc:	0001341a 	andeq	r3, r1, sl, lsl r4
    92c0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    92c4:	00060907 	andeq	r0, r6, r7, lsl #18
    92c8:	01960300 	orrseq	r0, r6, r0, lsl #6
    92cc:	00013a1b 	andeq	r3, r1, fp, lsl sl
    92d0:	18230200 	stmdane	r3!, {r9}
    92d4:	2e010800 	cdpcs	8, 0, cr0, cr1, cr0, {0}
    92d8:	09000001 	stmdbeq	r0, {r0}
    92dc:	00000097 	muleq	r0, r7, r0
    92e0:	22040a00 	andcs	r0, r4, #0, 20
    92e4:	0a000001 	beq	92f0 <_Min_Stack_Size+0x82f0>
    92e8:	0000a304 	andeq	sl, r0, r4, lsl #6
    92ec:	34040a00 	strcc	r0, [r4], #-2560	; 0xfffff600
    92f0:	0b000001 	bleq	92fc <_Min_Stack_Size+0x82fc>
    92f4:	0000064a 	andeq	r0, r0, sl, asr #12
    92f8:	03019b03 	movweq	r9, #6915	; 0x1b03
    92fc:	000000a3 	andeq	r0, r0, r3, lsr #1
    9300:	007f040a 	rsbseq	r0, pc, sl, lsl #8
    9304:	4b060000 	blmi	18930c <__RAM_SIZE+0x8930c>
    9308:	d8000003 	stmdale	r0, {r0, r1}
    930c:	1001d603 	andne	sp, r1, r3, lsl #12
    9310:	00000478 	andeq	r0, r0, r8, ror r4
    9314:	00092c07 	andeq	r2, r9, r7, lsl #24
    9318:	01dd0300 	bicseq	r0, sp, r0, lsl #6
    931c:	00009719 	andeq	r9, r0, r9, lsl r7
    9320:	00230200 	eoreq	r0, r3, r0, lsl #4
    9324:	00079f07 	andeq	r9, r7, r7, lsl #30
    9328:	01de0300 	bicseq	r0, lr, r0, lsl #6
    932c:	00009719 	andeq	r9, r0, r9, lsl r7
    9330:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9334:	0001bc07 	andeq	fp, r1, r7, lsl #24
    9338:	01df0300 	bicseq	r0, pc, r0, lsl #6
    933c:	0000761a 	andeq	r7, r0, sl, lsl r6
    9340:	08230200 	stmdaeq	r3!, {r9}
    9344:	00091607 	andeq	r1, r9, r7, lsl #12
    9348:	01e00300 	mvneq	r0, r0, lsl #6
    934c:	0000761a 	andeq	r7, r0, sl, lsl r6
    9350:	0c230200 	sfmeq	f0, 4, [r3], #-0
    9354:	00041107 	andeq	r1, r4, r7, lsl #2
    9358:	01e10300 	mvneq	r0, r0, lsl #6
    935c:	0000761a 	andeq	r7, r0, sl, lsl r6
    9360:	10230200 	eorne	r0, r3, r0, lsl #4
    9364:	00095a07 	andeq	r5, r9, r7, lsl #20
    9368:	01e20300 	mvneq	r0, r0, lsl #6
    936c:	00009719 	andeq	r9, r0, r9, lsl r7
    9370:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    9374:	0021e207 	eoreq	lr, r1, r7, lsl #4
    9378:	01e30300 	mvneq	r0, r0, lsl #6
    937c:	00009719 	andeq	r9, r0, r9, lsl r7
    9380:	18230200 	stmdane	r3!, {r9}
    9384:	00062507 	andeq	r2, r6, r7, lsl #10
    9388:	01e40300 	mvneq	r0, r0, lsl #6
    938c:	00009719 	andeq	r9, r0, r9, lsl r7
    9390:	1c230200 	sfmne	f0, 4, [r3], #-0
    9394:	0006ba07 	andeq	fp, r6, r7, lsl #20
    9398:	01e80300 	mvneq	r0, r0, lsl #6
    939c:	0004781a 	andeq	r7, r4, sl, lsl r8
    93a0:	20230200 	eorcs	r0, r3, r0, lsl #4
    93a4:	00019907 	andeq	r9, r1, r7, lsl #18
    93a8:	01e90300 	mvneq	r0, r0, lsl #6
    93ac:	0004781a 	andeq	r7, r4, sl, lsl r8
    93b0:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    93b4:	0005b107 	andeq	fp, r5, r7, lsl #2
    93b8:	01f10300 	mvnseq	r0, r0, lsl #6
    93bc:	00014d1a 	andeq	r4, r1, sl, lsl sp
    93c0:	28230200 	stmdacs	r3!, {r9}
    93c4:	0002d907 	andeq	sp, r2, r7, lsl #18
    93c8:	01f20300 	mvnseq	r0, r0, lsl #6
    93cc:	00008b19 	andeq	r8, r0, r9, lsl fp
    93d0:	2c230200 	sfmcs	f0, 4, [r3], #-0
    93d4:	00024607 	andeq	r4, r2, r7, lsl #12
    93d8:	01f30300 	mvnseq	r0, r0, lsl #6
    93dc:	00008b19 	andeq	r8, r0, r9, lsl fp
    93e0:	30230200 	eorcc	r0, r3, r0, lsl #4
    93e4:	00017307 	andeq	r7, r1, r7, lsl #6
    93e8:	01f40300 	mvnseq	r0, r0, lsl #6
    93ec:	00008b19 	andeq	r8, r0, r9, lsl fp
    93f0:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    93f4:	00074b07 	andeq	r4, r7, r7, lsl #22
    93f8:	01f50300 	mvnseq	r0, r0, lsl #6
    93fc:	00008b19 	andeq	r8, r0, r9, lsl fp
    9400:	38230200 	stmdacc	r3!, {r9}
    9404:	0000eb07 	andeq	lr, r0, r7, lsl #22
    9408:	01f60300 	mvnseq	r0, r0, lsl #6
    940c:	00008b19 	andeq	r8, r0, r9, lsl fp
    9410:	3c230200 	sfmcc	f0, 4, [r3], #-0
    9414:	00035c07 	andeq	r5, r3, r7, lsl #24
    9418:	01fb0300 	mvnseq	r0, r0, lsl #6
    941c:	00048f1b 	andeq	r8, r4, fp, lsl pc
    9420:	40230200 	eormi	r0, r3, r0, lsl #4
    9424:	00015207 	andeq	r5, r1, r7, lsl #4
    9428:	02030300 	andeq	r0, r3, #0, 6
    942c:	00012e1b 	andeq	r2, r1, fp, lsl lr
    9430:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    9434:	00010707 	andeq	r0, r1, r7, lsl #14
    9438:	02040300 	andeq	r0, r4, #0, 6
    943c:	00009719 	andeq	r9, r0, r9, lsl r7
    9440:	48230200 	stmdami	r3!, {r9}
    9444:	00033b07 	andeq	r3, r3, r7, lsl #22
    9448:	02080300 	andeq	r0, r8, #0, 6
    944c:	00014019 	andeq	r4, r1, r9, lsl r0
    9450:	4c230200 	sfmmi	f0, 4, [r3], #-0
    9454:	0002ec07 	andeq	lr, r2, r7, lsl #24
    9458:	020e0300 	andeq	r0, lr, #0, 6
    945c:	00048f1b 	andeq	r8, r4, fp, lsl pc
    9460:	68230200 	stmdavs	r3!, {r9}
    9464:	0005e907 	andeq	lr, r5, r7, lsl #18
    9468:	020f0300 	andeq	r0, pc, #0, 6
    946c:	0000761a 	andeq	r7, r0, sl, lsl r6
    9470:	6c230200 	sfmvs	f0, 4, [r3], #-0
    9474:	00073207 	andeq	r3, r7, r7, lsl #4
    9478:	02110300 	andseq	r0, r1, #0, 6
    947c:	0004781a 	andeq	r7, r4, sl, lsl r8
    9480:	70230200 	eorvc	r0, r3, r0, lsl #4
    9484:	00021207 	andeq	r1, r2, r7, lsl #4
    9488:	02120300 	andseq	r0, r2, #0, 6
    948c:	0004781a 	andeq	r7, r4, sl, lsl r8
    9490:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    9494:	00071507 	andeq	r1, r7, r7, lsl #10
    9498:	02130300 	andseq	r0, r3, #0, 6
    949c:	00009719 	andeq	r9, r0, r9, lsl r7
    94a0:	78230200 	stmdavc	r3!, {r9}
    94a4:	0003c607 	andeq	ip, r3, r7, lsl #12
    94a8:	02140300 	andseq	r0, r4, #0, 6
    94ac:	0000761a 	andeq	r7, r0, sl, lsl r6
    94b0:	7c230200 	sfmvc	f0, 4, [r3], #-0
    94b4:	00055407 	andeq	r5, r5, r7, lsl #8
    94b8:	02150300 	andseq	r0, r5, #0, 6
    94bc:	00008b19 	andeq	r8, r0, r9, lsl fp
    94c0:	80230300 	eorhi	r0, r3, r0, lsl #6
    94c4:	03e80701 	mvneq	r0, #262144	; 0x40000
    94c8:	16030000 	strne	r0, [r3], -r0
    94cc:	008b1902 	addeq	r1, fp, r2, lsl #18
    94d0:	23030000 	movwcs	r0, #12288	; 0x3000
    94d4:	ff070184 			; <UNDEFINED> instruction: 0xff070184
    94d8:	03000008 	movweq	r0, #8
    94dc:	781a021f 	ldmdavc	sl, {r0, r1, r2, r3, r4, r9}
    94e0:	03000004 	movweq	r0, #4
    94e4:	07018823 	streq	r8, [r1, -r3, lsr #16]
    94e8:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    94ec:	1a022003 	bne	91500 <SYSTICK_CYCLES+0x684c1>
    94f0:	00000478 	andeq	r0, r0, r8, ror r4
    94f4:	018c2303 	orreq	r2, ip, r3, lsl #6
    94f8:	0002c107 	andeq	ip, r2, r7, lsl #2
    94fc:	022e0300 	eoreq	r0, lr, #0, 6
    9500:	00008b19 	andeq	r8, r0, r9, lsl fp
    9504:	90230300 	eorls	r0, r3, r0, lsl #6
    9508:	02560701 	subseq	r0, r6, #262144	; 0x40000
    950c:	2f030000 	svccs	0x00030000
    9510:	008b1902 	addeq	r1, fp, r2, lsl #18
    9514:	23030000 	movwcs	r0, #12288	; 0x3000
    9518:	20070194 	mulcs	r7, r4, r1
    951c:	03000003 	movweq	r0, #3
    9520:	8b190230 	blhi	649de8 <__RAM_SIZE+0x549de8>
    9524:	03000000 	movweq	r0, #0
    9528:	07019823 	streq	r9, [r1, -r3, lsr #16]
    952c:	00000277 	andeq	r0, r0, r7, ror r2
    9530:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
    9534:	0000008b 	andeq	r0, r0, fp, lsl #1
    9538:	019c2303 	orrseq	r2, ip, r3, lsl #6
    953c:	00000007 	andeq	r0, r0, r7
    9540:	02350300 	eorseq	r0, r5, #0, 6
    9544:	0005741a 	andeq	r7, r5, sl, lsl r4
    9548:	a0230300 	eorge	r0, r3, r0, lsl #6
    954c:	1bc80701 	blne	ff20b158 <__RAM_segment_used_end__+0xc710b158>
    9550:	3a030000 	bcc	c9558 <SYSTICK_CYCLES+0xa0519>
    9554:	00971902 	addseq	r1, r7, r2, lsl #18
    9558:	23030000 	movwcs	r0, #12288	; 0x3000
    955c:	880701a4 	stmdahi	r7, {r2, r5, r7, r8}
    9560:	0300001c 	movweq	r0, #28
    9564:	9719023d 			; <UNDEFINED> instruction: 0x9719023d
    9568:	03000000 	movweq	r0, #0
    956c:	0701a823 	streq	sl, [r1, -r3, lsr #16]
    9570:	00001b41 	andeq	r1, r0, r1, asr #22
    9574:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
    9578:	00000097 	muleq	r0, r7, r0
    957c:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    9580:	001d3f07 	andseq	r3, sp, r7, lsl #30
    9584:	02450300 	subeq	r0, r5, #0, 6
    9588:	00009719 	andeq	r9, r0, r9, lsl r7
    958c:	b0230300 	eorlt	r0, r3, r0, lsl #6
    9590:	1c580701 	mrrcne	7, 0, r0, r8, cr1
    9594:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    9598:	00971902 	addseq	r1, r7, r2, lsl #18
    959c:	23030000 	movwcs	r0, #12288	; 0x3000
    95a0:	c30701b4 	movwgt	r0, #29108	; 0x71b4
    95a4:	03000007 	movweq	r0, #7
    95a8:	781a024c 	ldmdavc	sl, {r2, r3, r6, r9}
    95ac:	03000004 	movweq	r0, #4
    95b0:	0701b823 	streq	fp, [r1, -r3, lsr #16]
    95b4:	00001d17 	andeq	r1, r0, r7, lsl sp
    95b8:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
    95bc:	00000097 	muleq	r0, r7, r0
    95c0:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    95c4:	001b1907 	andseq	r1, fp, r7, lsl #18
    95c8:	02520300 	subseq	r0, r2, #0, 6
    95cc:	00009719 	andeq	r9, r0, r9, lsl r7
    95d0:	c0230300 	eorgt	r0, r3, r0, lsl #6
    95d4:	1a960701 	bne	fe58b1e0 <__RAM_segment_used_end__+0xc648b1e0>
    95d8:	55030000 	strpl	r0, [r3, #-0]
    95dc:	00971902 	addseq	r1, r7, r2, lsl #18
    95e0:	23030000 	movwcs	r0, #12288	; 0x3000
    95e4:	ec0701c4 	stfs	f0, [r7], {196}	; 0xc4
    95e8:	0300001b 	movweq	r0, #27
    95ec:	97190259 			; <UNDEFINED> instruction: 0x97190259
    95f0:	03000000 	movweq	r0, #0
    95f4:	0701c823 	streq	ip, [r1, -r3, lsr #16]
    95f8:	000009c4 	andeq	r0, r0, r4, asr #19
    95fc:	1a025d03 	bne	a0a10 <SYSTICK_CYCLES+0x779d1>
    9600:	00000076 	andeq	r0, r0, r6, ror r0
    9604:	01cc2303 	biceq	r2, ip, r3, lsl #6
    9608:	00048107 	andeq	r8, r4, r7, lsl #2
    960c:	02780300 	rsbseq	r0, r8, #0, 6
    9610:	00009719 	andeq	r9, r0, r9, lsl r7
    9614:	d0230300 	eorle	r0, r3, r0, lsl #6
    9618:	056d0701 	strbeq	r0, [sp, #-1793]!	; 0xfffff8ff
    961c:	7d030000 	stcvc	0, cr0, [r3, #-0]
    9620:	00971902 	addseq	r1, r7, r2, lsl #18
    9624:	23030000 	movwcs	r0, #12288	; 0x3000
    9628:	0a0001d4 	beq	9d80 <_Min_Stack_Size+0x8d80>
    962c:	00015304 	andeq	r5, r1, r4, lsl #6
    9630:	8f010800 	svchi	0x00010800
    9634:	09000004 	stmdbeq	r0, {r2}
    9638:	00000478 	andeq	r0, r0, r8, ror r4
    963c:	00009709 	andeq	r9, r0, r9, lsl #14
    9640:	040a0000 	streq	r0, [sl], #-0
    9644:	0000047e 	andeq	r0, r0, lr, ror r4
    9648:	0007b306 	andeq	fp, r7, r6, lsl #6
    964c:	7e033400 	cfcpysvc	mvf3, mvf3
    9650:	05741003 	ldrbeq	r1, [r4, #-3]!
    9654:	8d070000 	stchi	0, cr0, [r7, #-0]
    9658:	03000001 	movweq	r0, #1
    965c:	97190382 	ldrls	r0, [r9, -r2, lsl #7]
    9660:	02000000 	andeq	r0, r0, #0
    9664:	97070023 	strls	r0, [r7, -r3, lsr #32]
    9668:	03000008 	movweq	r0, #8
    966c:	4d1a0385 	ldcmi	3, cr0, [sl, #-532]	; 0xfffffdec
    9670:	02000001 	andeq	r0, r0, #1
    9674:	fc070423 	stc2	4, cr0, [r7], {35}	; 0x23
    9678:	03000006 	movweq	r0, #6
    967c:	8b190388 	blhi	64a4a4 <__RAM_SIZE+0x54a4a4>
    9680:	02000000 	andeq	r0, r0, #0
    9684:	cb070823 	blgt	1cb718 <__RAM_SIZE+0xcb718>
    9688:	03000004 	movweq	r0, #4
    968c:	871a038c 	ldrhi	r0, [sl, -ip, lsl #7]
    9690:	02000005 	andeq	r0, r0, #5
    9694:	62070c23 	andvs	r0, r7, #8960	; 0x2300
    9698:	03000001 	movweq	r0, #1
    969c:	8b190390 	blhi	64a4e4 <__RAM_SIZE+0x54a4e4>
    96a0:	02000000 	andeq	r0, r0, #0
    96a4:	21071023 	tstcs	r7, r3, lsr #32
    96a8:	03000001 	movweq	r0, #1
    96ac:	8b190393 	blhi	64a500 <__RAM_SIZE+0x54a500>
    96b0:	02000000 	andeq	r0, r0, #0
    96b4:	cd071423 	cfstrsgt	mvf1, [r7, #-140]	; 0xffffff74
    96b8:	03000008 	movweq	r0, #8
    96bc:	781a0398 	ldmdavc	sl, {r3, r4, r7, r8, r9}
    96c0:	02000004 	andeq	r0, r0, #4
    96c4:	e3071823 	movw	r1, #30755	; 0x7823
    96c8:	03000006 	movweq	r0, #6
    96cc:	8b190399 	blhi	64a538 <__RAM_SIZE+0x54a538>
    96d0:	02000000 	andeq	r0, r0, #0
    96d4:	d3071c23 	movwle	r1, #31779	; 0x7c23
    96d8:	03000005 	movweq	r0, #5
    96dc:	741a039d 	ldrvc	r0, [sl], #-925	; 0xfffffc63
    96e0:	02000005 	andeq	r0, r0, #5
    96e4:	a0072023 	andge	r2, r7, r3, lsr #32
    96e8:	03000006 	movweq	r0, #6
    96ec:	741a039e 	ldrvc	r0, [sl], #-926	; 0xfffffc62
    96f0:	02000005 	andeq	r0, r0, #5
    96f4:	d0072423 	andle	r2, r7, r3, lsr #8
    96f8:	03000001 	movweq	r0, #1
    96fc:	8b1903a2 	blhi	64a58c <__RAM_SIZE+0x54a58c>
    9700:	02000000 	andeq	r0, r0, #0
    9704:	e0072823 	and	r2, r7, r3, lsr #16
    9708:	03000009 	movweq	r0, #9
    970c:	741a03a6 	ldrvc	r0, [sl], #-934	; 0xfffffc5a
    9710:	02000005 	andeq	r0, r0, #5
    9714:	25072c23 	strcs	r2, [r7, #-3107]	; 0xfffff3dd
    9718:	03000004 	movweq	r0, #4
    971c:	741a03a7 	ldrvc	r0, [sl], #-935	; 0xfffffc59
    9720:	02000005 	andeq	r0, r0, #5
    9724:	0a003023 	beq	157b8 <_Min_Stack_Size+0x147b8>
    9728:	00049504 	andeq	r9, r4, r4, lsl #10
    972c:	08ef0b00 	stmiaeq	pc!, {r8, r9, fp}^	; <UNPREDICTABLE>
    9730:	86030000 	strhi	r0, [r3], -r0
    9734:	01530302 	cmpeq	r3, r2, lsl #6
    9738:	040a0000 	streq	r0, [sl], #-0
    973c:	0000057a 	andeq	r0, r0, sl, ror r5
    9740:	05990108 	ldreq	r0, [r9, #264]	; 0x108
    9744:	87090000 	strhi	r0, [r9, -r0]
    9748:	00000005 	andeq	r0, r0, r5
    974c:	058d040a 	streq	r0, [sp, #1034]	; 0x40a
    9750:	720c0000 	andvc	r0, ip, #0
    9754:	0400001b 	streq	r0, [r0], #-27	; 0xffffffe5
    9758:	992301c1 	stmdbls	r3!, {r0, r6, r7, r8}
    975c:	01000005 	tsteq	r0, r5
    9760:	6e010d01 	cdpvs	13, 0, cr0, cr1, cr1, {0}
    9764:	0100001f 	tsteq	r0, pc, lsl r0
    9768:	68010754 	stmdavs	r1, {r2, r4, r6, r8, r9, sl}
    976c:	84100020 	ldrhi	r0, [r0], #-32	; 0xffffffe0
    9770:	6e100020 	cdpvs	0, 1, cr0, cr0, cr0, {1}
    9774:	0100003b 	tsteq	r0, fp, lsr r0
    9778:	00000671 	andeq	r0, r0, r1, ror r6
    977c:	0019790e 	andseq	r7, r9, lr, lsl #18
    9780:	31540100 	cmpcc	r4, r0, lsl #2
    9784:	00000587 	andeq	r0, r0, r7, lsl #11
    9788:	00003b92 	muleq	r0, r2, fp
    978c:	00003b8e 	andeq	r3, r0, lr, lsl #23
    9790:	000eee0f 	andeq	lr, lr, pc, lsl #28
    9794:	01570100 	cmpeq	r7, r0, lsl #2
    9798:	0000008b 	andeq	r0, r0, fp, lsl #1
    979c:	00003bb5 			; <UNDEFINED> instruction: 0x00003bb5
    97a0:	00003bb3 			; <UNDEFINED> instruction: 0x00003bb3
    97a4:	00067110 	andeq	r7, r6, r0, lsl r1
    97a8:	00206a00 	eoreq	r6, r0, r0, lsl #20
    97ac:	206a0210 	rsbcs	r0, sl, r0, lsl r2
    97b0:	20701000 	rsbscs	r1, r0, r0
    97b4:	5c011000 	stcpl	0, cr1, [r1], {-0}
    97b8:	00063c05 	andeq	r3, r6, r5, lsl #24
    97bc:	06841100 	streq	r1, [r4], r0, lsl #2
    97c0:	3bca0000 	blcc	ff2897c8 <__RAM_segment_used_end__+0xc71897c8>
    97c4:	3bc80000 	blcc	ff2097cc <__RAM_segment_used_end__+0xc71097cc>
    97c8:	af120000 	svcge	0x00120000
    97cc:	6a000006 	bvs	97ec <_Min_Stack_Size+0x87ec>
    97d0:	05100020 	ldreq	r0, [r0, #-32]	; 0xffffffe0
    97d4:	1000206a 	andne	r2, r0, sl, rrx
    97d8:	1000206e 	andne	r2, r0, lr, rrx
    97dc:	13025602 	movwne	r5, #9730	; 0x2602
    97e0:	0006be11 	andeq	fp, r6, r1, lsl lr
    97e4:	003bdf00 	eorseq	sp, fp, r0, lsl #30
    97e8:	003bdd00 	eorseq	sp, fp, r0, lsl #26
    97ec:	10000000 	andne	r0, r0, r0
    97f0:	00000692 	muleq	r0, r2, r6
    97f4:	10002078 	andne	r2, r0, r8, ror r0
    97f8:	00207801 	eoreq	r7, r0, r1, lsl #16
    97fc:	00207c10 	eoreq	r7, r0, r0, lsl ip
    9800:	05670110 	strbeq	r0, [r7, #-272]!	; 0xfffffef0
    9804:	00000663 	andeq	r0, r0, r3, ror #12
    9808:	0006a113 	andeq	sl, r6, r3, lsl r1
    980c:	003bf400 	eorseq	pc, fp, r0, lsl #8
    9810:	003bf200 	eorseq	pc, fp, r0, lsl #4
    9814:	78140000 	ldmdavc	r4, {}	; <UNPREDICTABLE>
    9818:	15100020 	ldrne	r0, [r0, #-32]	; 0xffffffe0
    981c:	f3035001 	vhadd.u8	d5, d3, d1
    9820:	00005001 	andeq	r5, r0, r1
    9824:	000f2416 	andeq	r2, pc, r6, lsl r4	; <UNPREDICTABLE>
    9828:	02520200 	subseq	r0, r2, #0, 4
    982c:	008b0137 	addeq	r0, fp, r7, lsr r1
    9830:	92030000 	andls	r0, r3, #0
    9834:	17000006 	strne	r0, [r0, -r6]
    9838:	00000ead 	andeq	r0, r0, sp, lsr #29
    983c:	06025402 	streq	r5, [r2], -r2, lsl #8
    9840:	0000008b 	andeq	r0, r0, fp, lsl #1
    9844:	0e991800 	cdpeq	8, 9, cr1, cr9, cr0, {0}
    9848:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    984c:	03013702 	movweq	r3, #5890	; 0x1702
    9850:	000006af 	andeq	r0, r0, pc, lsr #13
    9854:	000ead19 	andeq	sl, lr, r9, lsl sp
    9858:	02490200 	subeq	r0, r9, #0, 4
    985c:	00008b50 	andeq	r8, r0, r0, asr fp
    9860:	c21a0000 	andsgt	r0, sl, #0
    9864:	0200000e 	andeq	r0, r0, #14
    9868:	01370232 	teqeq	r7, r2, lsr r2
    986c:	0000008b 	andeq	r0, r0, fp, lsl #1
    9870:	0eb11703 	cdpeq	7, 11, cr1, cr1, cr3, {0}
    9874:	34020000 	strcc	r0, [r2], #-0
    9878:	008b0602 	addeq	r0, fp, r2, lsl #12
    987c:	00000000 	andeq	r0, r0, r0
    9880:	00000949 	andeq	r0, r0, r9, asr #18
    9884:	1ad90002 	bne	ff649894 <__RAM_segment_used_end__+0xc7549894>
    9888:	01040000 	mrseq	r0, (UNDEF: 4)
    988c:	0000003d 	andeq	r0, r0, sp, lsr r0
    9890:	001ff00c 	andseq	pc, pc, ip
    9894:	00065c00 	andeq	r5, r6, r0, lsl #24
    9898:	00031800 	andeq	r1, r3, r0, lsl #16
	...
    98a4:	0034a900 	eorseq	sl, r4, r0, lsl #18
    98a8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    98ac:	00000239 	andeq	r0, r0, r9, lsr r2
    98b0:	69050403 	stmdbvs	r5, {r0, r1, sl}
    98b4:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    98b8:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    98bc:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    98c0:	00063e04 	andeq	r3, r6, r4, lsl #28
    98c4:	06010200 	streq	r0, [r1], -r0, lsl #4
    98c8:	0000086d 	andeq	r0, r0, sp, ror #16
    98cc:	6b080102 	blvs	209cdc <__RAM_SIZE+0x109cdc>
    98d0:	02000008 	andeq	r0, r0, #8
    98d4:	06cf0502 	strbeq	r0, [pc], r2, lsl #10
    98d8:	02020000 	andeq	r0, r2, #0
    98dc:	00093907 	andeq	r3, r9, r7, lsl #18
    98e0:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    98e4:	000004ed 	andeq	r0, r0, sp, ror #9
    98e8:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    98ec:	02000002 	andeq	r0, r0, #2
    98f0:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    98f4:	04040000 	streq	r0, [r4], #-0
    98f8:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    98fc:	05000008 	streq	r0, [r0, #-8]
    9900:	000008fa 	strdeq	r0, [r0], -sl
    9904:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    9908:	05000000 	streq	r0, [r0, #-0]
    990c:	000008f9 	strdeq	r0, [r0], -r9
    9910:	4c317402 	cfldrsmi	mvf7, [r1], #-8
    9914:	05000000 	streq	r0, [r0, #-0]
    9918:	0000079a 	muleq	r0, sl, r7
    991c:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    9920:	06000000 	streq	r0, [r0], -r0
    9924:	00000097 	muleq	r0, r7, r0
    9928:	00072c05 	andeq	r2, r7, r5, lsl #24
    992c:	31780200 	cmncc	r8, r0, lsl #4
    9930:	00000068 	andeq	r0, r0, r8, rrx
    9934:	00053b07 	andeq	r3, r5, r7, lsl #22
    9938:	82031c00 	andhi	r1, r3, #0, 24
    993c:	01331001 	teqeq	r3, r1
    9940:	2d080000 	stccs	0, cr0, [r8, #-0]
    9944:	03000008 	movweq	r0, #8
    9948:	a8190186 	ldmdage	r9, {r1, r2, r7, r8}
    994c:	02000000 	andeq	r0, r0, #0
    9950:	a0080023 	andge	r0, r8, r3, lsr #32
    9954:	03000003 	movweq	r0, #3
    9958:	a8190187 	ldmdage	r9, {r0, r1, r2, r7, r8}
    995c:	02000000 	andeq	r0, r0, #0
    9960:	3d080423 	cfstrscc	mvf0, [r8, #-140]	; 0xffffff74
    9964:	03000004 	movweq	r0, #4
    9968:	3f1b018a 	svccc	0x001b018a
    996c:	02000001 	andeq	r0, r0, #1
    9970:	f2080823 	vadd.i8	d0, d8, d19
    9974:	03000001 	movweq	r0, #1
    9978:	a819018b 	ldmdage	r9, {r0, r1, r3, r7, r8}
    997c:	02000000 	andeq	r0, r0, #0
    9980:	6f080c23 	svcvs	0x00080c23
    9984:	03000009 	movweq	r0, #9
    9988:	451a0191 	ldrmi	r0, [sl, #-401]	; 0xfffffe6f
    998c:	02000001 	andeq	r0, r0, #1
    9990:	1b081023 	blne	20da24 <__RAM_SIZE+0x10da24>
    9994:	03000000 	movweq	r0, #0
    9998:	451a0192 	ldrmi	r0, [sl, #-402]	; 0xfffffe6e
    999c:	02000001 	andeq	r0, r0, #1
    99a0:	09081423 	stmdbeq	r8, {r0, r1, r5, sl, ip}
    99a4:	03000006 	movweq	r0, #6
    99a8:	4b1b0196 	blmi	6ca008 <__RAM_SIZE+0x5ca008>
    99ac:	02000001 	andeq	r0, r0, #1
    99b0:	09001823 	stmdbeq	r0, {r0, r1, r5, fp, ip}
    99b4:	00013f01 	andeq	r3, r1, r1, lsl #30
    99b8:	00a80a00 	adceq	r0, r8, r0, lsl #20
    99bc:	0b000000 	bleq	99c4 <_Min_Stack_Size+0x89c4>
    99c0:	00013304 	andeq	r3, r1, r4, lsl #6
    99c4:	b4040b00 	strlt	r0, [r4], #-2816	; 0xfffff500
    99c8:	0b000000 	bleq	99d0 <_Min_Stack_Size+0x89d0>
    99cc:	00014504 	andeq	r4, r1, r4, lsl #10
    99d0:	064a0c00 	strbeq	r0, [sl], -r0, lsl #24
    99d4:	9b030000 	blls	c99dc <SYSTICK_CYCLES+0xa099d>
    99d8:	00b40301 	adcseq	r0, r4, r1, lsl #6
    99dc:	040b0000 	streq	r0, [fp], #-0
    99e0:	0000007f 	andeq	r0, r0, pc, ror r0
    99e4:	00034b07 	andeq	r4, r3, r7, lsl #22
    99e8:	d603d800 	strle	sp, [r3], -r0, lsl #16
    99ec:	04891001 	streq	r1, [r9], #1
    99f0:	2c080000 	stccs	0, cr0, [r8], {-0}
    99f4:	03000009 	movweq	r0, #9
    99f8:	a81901dd 	ldmdage	r9, {r0, r2, r3, r4, r6, r7, r8}
    99fc:	02000000 	andeq	r0, r0, #0
    9a00:	9f080023 	svcls	0x00080023
    9a04:	03000007 	movweq	r0, #7
    9a08:	a81901de 	ldmdage	r9, {r1, r2, r3, r4, r6, r7, r8}
    9a0c:	02000000 	andeq	r0, r0, #0
    9a10:	bc080423 	cfstrslt	mvf0, [r8], {35}	; 0x23
    9a14:	03000001 	movweq	r0, #1
    9a18:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
    9a1c:	02000000 	andeq	r0, r0, #0
    9a20:	16080823 	strne	r0, [r8], -r3, lsr #16
    9a24:	03000009 	movweq	r0, #9
    9a28:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
    9a2c:	02000000 	andeq	r0, r0, #0
    9a30:	11080c23 	tstne	r8, r3, lsr #24
    9a34:	03000004 	movweq	r0, #4
    9a38:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
    9a3c:	02000000 	andeq	r0, r0, #0
    9a40:	5a081023 	bpl	20dad4 <__RAM_SIZE+0x10dad4>
    9a44:	03000009 	movweq	r0, #9
    9a48:	a81901e2 	ldmdage	r9, {r1, r5, r6, r7, r8}
    9a4c:	02000000 	andeq	r0, r0, #0
    9a50:	e2081423 	and	r1, r8, #587202560	; 0x23000000
    9a54:	03000021 	movweq	r0, #33	; 0x21
    9a58:	a81901e3 	ldmdage	r9, {r0, r1, r5, r6, r7, r8}
    9a5c:	02000000 	andeq	r0, r0, #0
    9a60:	25081823 	strcs	r1, [r8, #-2083]	; 0xfffff7dd
    9a64:	03000006 	movweq	r0, #6
    9a68:	a81901e4 	ldmdage	r9, {r2, r5, r6, r7, r8}
    9a6c:	02000000 	andeq	r0, r0, #0
    9a70:	ba081c23 	blt	210b04 <__RAM_SIZE+0x110b04>
    9a74:	03000006 	movweq	r0, #6
    9a78:	891a01e8 	ldmdbhi	sl, {r3, r5, r6, r7, r8}
    9a7c:	02000004 	andeq	r0, r0, #4
    9a80:	99082023 	stmdbls	r8, {r0, r1, r5, sp}
    9a84:	03000001 	movweq	r0, #1
    9a88:	891a01e9 	ldmdbhi	sl, {r0, r3, r5, r6, r7, r8}
    9a8c:	02000004 	andeq	r0, r0, #4
    9a90:	b1082423 	tstlt	r8, r3, lsr #8
    9a94:	03000005 	movweq	r0, #5
    9a98:	5e1a01f1 	mrcpl	1, 0, r0, cr10, cr1, {7}
    9a9c:	02000001 	andeq	r0, r0, #1
    9aa0:	d9082823 	stmdble	r8, {r0, r1, r5, fp, sp}
    9aa4:	03000002 	movweq	r0, #2
    9aa8:	971901f2 			; <UNDEFINED> instruction: 0x971901f2
    9aac:	02000000 	andeq	r0, r0, #0
    9ab0:	46082c23 	strmi	r2, [r8], -r3, lsr #24
    9ab4:	03000002 	movweq	r0, #2
    9ab8:	971901f3 			; <UNDEFINED> instruction: 0x971901f3
    9abc:	02000000 	andeq	r0, r0, #0
    9ac0:	73083023 	movwvc	r3, #32803	; 0x8023
    9ac4:	03000001 	movweq	r0, #1
    9ac8:	971901f4 			; <UNDEFINED> instruction: 0x971901f4
    9acc:	02000000 	andeq	r0, r0, #0
    9ad0:	4b083423 	blmi	216b64 <__RAM_SIZE+0x116b64>
    9ad4:	03000007 	movweq	r0, #7
    9ad8:	971901f5 			; <UNDEFINED> instruction: 0x971901f5
    9adc:	02000000 	andeq	r0, r0, #0
    9ae0:	eb083823 	bl	217b74 <__RAM_SIZE+0x117b74>
    9ae4:	03000000 	movweq	r0, #0
    9ae8:	971901f6 			; <UNDEFINED> instruction: 0x971901f6
    9aec:	02000000 	andeq	r0, r0, #0
    9af0:	5c083c23 	stcpl	12, cr3, [r8], {35}	; 0x23
    9af4:	03000003 	movweq	r0, #3
    9af8:	a01b01fb 			; <UNDEFINED> instruction: 0xa01b01fb
    9afc:	02000004 	andeq	r0, r0, #4
    9b00:	52084023 	andpl	r4, r8, #35	; 0x23
    9b04:	03000001 	movweq	r0, #1
    9b08:	3f1b0203 	svccc	0x001b0203
    9b0c:	02000001 	andeq	r0, r0, #1
    9b10:	07084423 	streq	r4, [r8, -r3, lsr #8]
    9b14:	03000001 	movweq	r0, #1
    9b18:	a8190204 	ldmdage	r9, {r2, r9}
    9b1c:	02000000 	andeq	r0, r0, #0
    9b20:	3b084823 	blcc	21bbb4 <__RAM_SIZE+0x11bbb4>
    9b24:	03000003 	movweq	r0, #3
    9b28:	51190208 	tstpl	r9, r8, lsl #4
    9b2c:	02000001 	andeq	r0, r0, #1
    9b30:	ec084c23 	stc	12, cr4, [r8], {35}	; 0x23
    9b34:	03000002 	movweq	r0, #2
    9b38:	a01b020e 	andsge	r0, fp, lr, lsl #4
    9b3c:	02000004 	andeq	r0, r0, #4
    9b40:	e9086823 	stmdb	r8, {r0, r1, r5, fp, sp, lr}
    9b44:	03000005 	movweq	r0, #5
    9b48:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
    9b4c:	02000000 	andeq	r0, r0, #0
    9b50:	32086c23 	andcc	r6, r8, #8960	; 0x2300
    9b54:	03000007 	movweq	r0, #7
    9b58:	891a0211 	ldmdbhi	sl, {r0, r4, r9}
    9b5c:	02000004 	andeq	r0, r0, #4
    9b60:	12087023 	andne	r7, r8, #35	; 0x23
    9b64:	03000002 	movweq	r0, #2
    9b68:	891a0212 	ldmdbhi	sl, {r1, r4, r9}
    9b6c:	02000004 	andeq	r0, r0, #4
    9b70:	15087423 	strne	r7, [r8, #-1059]	; 0xfffffbdd
    9b74:	03000007 	movweq	r0, #7
    9b78:	a8190213 	ldmdage	r9, {r0, r1, r4, r9}
    9b7c:	02000000 	andeq	r0, r0, #0
    9b80:	c6087823 	strgt	r7, [r8], -r3, lsr #16
    9b84:	03000003 	movweq	r0, #3
    9b88:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
    9b8c:	02000000 	andeq	r0, r0, #0
    9b90:	54087c23 	strpl	r7, [r8], #-3107	; 0xfffff3dd
    9b94:	03000005 	movweq	r0, #5
    9b98:	97190215 			; <UNDEFINED> instruction: 0x97190215
    9b9c:	03000000 	movweq	r0, #0
    9ba0:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
    9ba4:	000003e8 	andeq	r0, r0, r8, ror #7
    9ba8:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
    9bac:	00000097 	muleq	r0, r7, r0
    9bb0:	01842303 	orreq	r2, r4, r3, lsl #6
    9bb4:	0008ff08 	andeq	pc, r8, r8, lsl #30
    9bb8:	021f0300 	andseq	r0, pc, #0, 6
    9bbc:	0004891a 	andeq	r8, r4, sl, lsl r9
    9bc0:	88230300 	stmdahi	r3!, {r8, r9}
    9bc4:	07f00801 	ldrbeq	r0, [r0, r1, lsl #16]!
    9bc8:	20030000 	andcs	r0, r3, r0
    9bcc:	04891a02 	streq	r1, [r9], #2562	; 0xa02
    9bd0:	23030000 	movwcs	r0, #12288	; 0x3000
    9bd4:	c108018c 	smlabbgt	r8, ip, r1, r0
    9bd8:	03000002 	movweq	r0, #2
    9bdc:	9719022e 	ldrls	r0, [r9, -lr, lsr #4]
    9be0:	03000000 	movweq	r0, #0
    9be4:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
    9be8:	00000256 	andeq	r0, r0, r6, asr r2
    9bec:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
    9bf0:	00000097 	muleq	r0, r7, r0
    9bf4:	01942303 	orrseq	r2, r4, r3, lsl #6
    9bf8:	00032008 	andeq	r2, r3, r8
    9bfc:	02300300 	eorseq	r0, r0, #0, 6
    9c00:	00009719 	andeq	r9, r0, r9, lsl r7
    9c04:	98230300 	stmdals	r3!, {r8, r9}
    9c08:	02770801 	rsbseq	r0, r7, #65536	; 0x10000
    9c0c:	33030000 	movwcc	r0, #12288	; 0x3000
    9c10:	00971902 	addseq	r1, r7, r2, lsl #18
    9c14:	23030000 	movwcs	r0, #12288	; 0x3000
    9c18:	0008019c 	muleq	r8, ip, r1
    9c1c:	03000000 	movweq	r0, #0
    9c20:	851a0235 	ldrhi	r0, [sl, #-565]	; 0xfffffdcb
    9c24:	03000005 	movweq	r0, #5
    9c28:	0801a023 	stmdaeq	r1, {r0, r1, r5, sp, pc}
    9c2c:	00001bc8 	andeq	r1, r0, r8, asr #23
    9c30:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
    9c34:	000000a8 	andeq	r0, r0, r8, lsr #1
    9c38:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    9c3c:	001c8808 	andseq	r8, ip, r8, lsl #16
    9c40:	023d0300 	eorseq	r0, sp, #0, 6
    9c44:	0000a819 	andeq	sl, r0, r9, lsl r8
    9c48:	a8230300 	stmdage	r3!, {r8, r9}
    9c4c:	1b410801 	blne	104bc58 <__RAM_SIZE+0xf4bc58>
    9c50:	41030000 	mrsmi	r0, (UNDEF: 3)
    9c54:	00a81902 	adceq	r1, r8, r2, lsl #18
    9c58:	23030000 	movwcs	r0, #12288	; 0x3000
    9c5c:	3f0801ac 	svccc	0x000801ac
    9c60:	0300001d 	movweq	r0, #29
    9c64:	a8190245 	ldmdage	r9, {r0, r2, r6, r9}
    9c68:	03000000 	movweq	r0, #0
    9c6c:	0801b023 	stmdaeq	r1, {r0, r1, r5, ip, sp, pc}
    9c70:	00001c58 	andeq	r1, r0, r8, asr ip
    9c74:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
    9c78:	000000a8 	andeq	r0, r0, r8, lsr #1
    9c7c:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
    9c80:	0007c308 	andeq	ip, r7, r8, lsl #6
    9c84:	024c0300 	subeq	r0, ip, #0, 6
    9c88:	0004891a 	andeq	r8, r4, sl, lsl r9
    9c8c:	b8230300 	stmdalt	r3!, {r8, r9}
    9c90:	1d170801 	ldcne	8, cr0, [r7, #-4]
    9c94:	4f030000 	svcmi	0x00030000
    9c98:	00a81902 	adceq	r1, r8, r2, lsl #18
    9c9c:	23030000 	movwcs	r0, #12288	; 0x3000
    9ca0:	190801bc 	stmdbne	r8, {r2, r3, r4, r5, r7, r8}
    9ca4:	0300001b 	movweq	r0, #27
    9ca8:	a8190252 	ldmdage	r9, {r1, r4, r6, r9}
    9cac:	03000000 	movweq	r0, #0
    9cb0:	0801c023 	stmdaeq	r1, {r0, r1, r5, lr, pc}
    9cb4:	00001a96 	muleq	r0, r6, sl
    9cb8:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
    9cbc:	000000a8 	andeq	r0, r0, r8, lsr #1
    9cc0:	01c42303 	biceq	r2, r4, r3, lsl #6
    9cc4:	001bec08 	andseq	lr, fp, r8, lsl #24
    9cc8:	02590300 	subseq	r0, r9, #0, 6
    9ccc:	0000a819 	andeq	sl, r0, r9, lsl r8
    9cd0:	c8230300 	stmdagt	r3!, {r8, r9}
    9cd4:	09c40801 	stmibeq	r4, {r0, fp}^
    9cd8:	5d030000 	stcpl	0, cr0, [r3, #-0]
    9cdc:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    9ce0:	23030000 	movwcs	r0, #12288	; 0x3000
    9ce4:	810801cc 	smlabthi	r8, ip, r1, r0
    9ce8:	03000004 	movweq	r0, #4
    9cec:	a8190278 	ldmdage	r9, {r3, r4, r5, r6, r9}
    9cf0:	03000000 	movweq	r0, #0
    9cf4:	0801d023 	stmdaeq	r1, {r0, r1, r5, ip, lr, pc}
    9cf8:	0000056d 	andeq	r0, r0, sp, ror #10
    9cfc:	19027d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp, lr}
    9d00:	000000a8 	andeq	r0, r0, r8, lsr #1
    9d04:	01d42303 	bicseq	r2, r4, r3, lsl #6
    9d08:	64040b00 	strvs	r0, [r4], #-2816	; 0xfffff500
    9d0c:	09000001 	stmdbeq	r0, {r0}
    9d10:	0004a001 	andeq	sl, r4, r1
    9d14:	04890a00 	streq	r0, [r9], #2560	; 0xa00
    9d18:	a80a0000 	stmdage	sl, {}	; <UNPREDICTABLE>
    9d1c:	00000000 	andeq	r0, r0, r0
    9d20:	048f040b 	streq	r0, [pc], #1035	; 9d28 <_Min_Stack_Size+0x8d28>
    9d24:	b3070000 	movwlt	r0, #28672	; 0x7000
    9d28:	34000007 	strcc	r0, [r0], #-7
    9d2c:	10037e03 	andne	r7, r3, r3, lsl #28
    9d30:	00000585 	andeq	r0, r0, r5, lsl #11
    9d34:	00018d08 	andeq	r8, r1, r8, lsl #26
    9d38:	03820300 	orreq	r0, r2, #0, 6
    9d3c:	0000a819 	andeq	sl, r0, r9, lsl r8
    9d40:	00230200 	eoreq	r0, r3, r0, lsl #4
    9d44:	00089708 	andeq	r9, r8, r8, lsl #14
    9d48:	03850300 	orreq	r0, r5, #0, 6
    9d4c:	00015e1a 	andeq	r5, r1, sl, lsl lr
    9d50:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    9d54:	0006fc08 	andeq	pc, r6, r8, lsl #24
    9d58:	03880300 	orreq	r0, r8, #0, 6
    9d5c:	00009719 	andeq	r9, r0, r9, lsl r7
    9d60:	08230200 	stmdaeq	r3!, {r9}
    9d64:	0004cb08 	andeq	ip, r4, r8, lsl #22
    9d68:	038c0300 	orreq	r0, ip, #0, 6
    9d6c:	0005981a 	andeq	r9, r5, sl, lsl r8
    9d70:	0c230200 	sfmeq	f0, 4, [r3], #-0
    9d74:	00016208 	andeq	r6, r1, r8, lsl #4
    9d78:	03900300 	orrseq	r0, r0, #0, 6
    9d7c:	00009719 	andeq	r9, r0, r9, lsl r7
    9d80:	10230200 	eorne	r0, r3, r0, lsl #4
    9d84:	00012108 	andeq	r2, r1, r8, lsl #2
    9d88:	03930300 	orrseq	r0, r3, #0, 6
    9d8c:	00009719 	andeq	r9, r0, r9, lsl r7
    9d90:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    9d94:	0008cd08 	andeq	ip, r8, r8, lsl #26
    9d98:	03980300 	orrseq	r0, r8, #0, 6
    9d9c:	0004891a 	andeq	r8, r4, sl, lsl r9
    9da0:	18230200 	stmdane	r3!, {r9}
    9da4:	0006e308 	andeq	lr, r6, r8, lsl #6
    9da8:	03990300 	orrseq	r0, r9, #0, 6
    9dac:	00009719 	andeq	r9, r0, r9, lsl r7
    9db0:	1c230200 	sfmne	f0, 4, [r3], #-0
    9db4:	0005d308 	andeq	sp, r5, r8, lsl #6
    9db8:	039d0300 	orrseq	r0, sp, #0, 6
    9dbc:	0005851a 	andeq	r8, r5, sl, lsl r5
    9dc0:	20230200 	eorcs	r0, r3, r0, lsl #4
    9dc4:	0006a008 	andeq	sl, r6, r8
    9dc8:	039e0300 	orrseq	r0, lr, #0, 6
    9dcc:	0005851a 	andeq	r8, r5, sl, lsl r5
    9dd0:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    9dd4:	0001d008 	andeq	sp, r1, r8
    9dd8:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    9ddc:	00009719 	andeq	r9, r0, r9, lsl r7
    9de0:	28230200 	stmdacs	r3!, {r9}
    9de4:	0009e008 	andeq	lr, r9, r8
    9de8:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    9dec:	0005851a 	andeq	r8, r5, sl, lsl r5
    9df0:	2c230200 	sfmcs	f0, 4, [r3], #-0
    9df4:	00042508 	andeq	r2, r4, r8, lsl #10
    9df8:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    9dfc:	0005851a 	andeq	r8, r5, sl, lsl r5
    9e00:	30230200 	eorcc	r0, r3, r0, lsl #4
    9e04:	a6040b00 	strge	r0, [r4], -r0, lsl #22
    9e08:	0c000004 	stceq	0, cr0, [r0], {4}
    9e0c:	000008ef 	andeq	r0, r0, pc, ror #17
    9e10:	03028603 	movweq	r8, #9731	; 0x2603
    9e14:	00000164 	andeq	r0, r0, r4, ror #2
    9e18:	058b040b 	streq	r0, [fp, #1035]	; 0x40b
    9e1c:	270d0000 	strcs	r0, [sp, -r0]
    9e20:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    9e24:	98210139 	stmdals	r1!, {r0, r3, r4, r5, r8}
    9e28:	01000005 	tsteq	r0, r5
    9e2c:	19d90d01 	ldmibne	r9, {r0, r8, sl, fp}^
    9e30:	40040000 	andmi	r0, r4, r0
    9e34:	05982101 	ldreq	r2, [r8, #257]	; 0x101
    9e38:	01010000 	mrseq	r0, (UNDEF: 1)
    9e3c:	00113e0d 	andseq	r3, r1, sp, lsl #28
    9e40:	018e0400 	orreq	r0, lr, r0, lsl #8
    9e44:	0000a321 	andeq	sl, r0, r1, lsr #6
    9e48:	0d010100 	stfeqs	f0, [r1, #-0]
    9e4c:	00001ad6 	ldrdeq	r1, [r0], -r6
    9e50:	21020304 	tstcs	r2, r4, lsl #6
    9e54:	000000a8 	andeq	r0, r0, r8, lsr #1
    9e58:	e90d0101 	stmdb	sp, {r0, r8}
    9e5c:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    9e60:	a8210209 	stmdage	r1!, {r0, r3, r9}
    9e64:	01000000 	mrseq	r0, (UNDEF: 0)
    9e68:	8d010e01 	stchi	14, cr0, [r1, #-4]
    9e6c:	0100001f 	tsteq	r0, pc, lsl r0
    9e70:	84010748 	strhi	r0, [r1], #-1864	; 0xfffff8b8
    9e74:	5c100020 	ldcpl	0, cr0, [r0], {32}
    9e78:	07100021 	ldreq	r0, [r0, -r1, lsr #32]
    9e7c:	0100003c 	tsteq	r0, ip, lsr r0
    9e80:	00000886 	andeq	r0, r0, r6, lsl #17
    9e84:	0020350f 	eoreq	r3, r0, pc, lsl #10
    9e88:	114b0100 	mrsne	r0, (UNDEF: 91)
    9e8c:	000000a8 	andeq	r0, r0, r8, lsr #1
    9e90:	00003c37 	andeq	r3, r0, r7, lsr ip
    9e94:	00003c33 	andeq	r3, r0, r3, lsr ip
    9e98:	001fc10f 	andseq	ip, pc, pc, lsl #2
    9e9c:	124c0100 	subne	r0, ip, #0, 2
    9ea0:	00000598 	muleq	r0, r8, r5
    9ea4:	00003c57 	andeq	r3, r0, r7, asr ip
    9ea8:	00003c55 	andeq	r3, r0, r5, asr ip
    9eac:	0019790f 	andseq	r7, r9, pc, lsl #18
    9eb0:	124d0100 	subne	r0, sp, #0, 2
    9eb4:	00000598 	muleq	r0, r8, r5
    9eb8:	00003c6c 	andeq	r3, r0, ip, ror #24
    9ebc:	00003c6a 	andeq	r3, r0, sl, ror #24
    9ec0:	00030010 	andeq	r0, r3, r0, lsl r0
    9ec4:	0007d800 	andeq	sp, r7, r0, lsl #16
    9ec8:	0eee0f00 	cdpeq	15, 14, cr0, cr14, cr0, {0}
    9ecc:	66010000 	strvs	r0, [r1], -r0
    9ed0:	0000970d 	andeq	r9, r0, sp, lsl #14
    9ed4:	003c8700 	eorseq	r8, ip, r0, lsl #14
    9ed8:	003c7f00 	eorseq	r7, ip, r0, lsl #30
    9edc:	08a31100 	stmiaeq	r3!, {r8, ip}
    9ee0:	209a0000 	addscs	r0, sl, r0
    9ee4:	9a021000 	bls	8deec <SYSTICK_CYCLES+0x64ead>
    9ee8:	a0100020 	andsge	r0, r0, r0, lsr #32
    9eec:	01100020 	tsteq	r0, r0, lsr #32
    9ef0:	06a80d66 	strteq	r0, [r8], r6, ror #26
    9ef4:	b6120000 	ldrlt	r0, [r2], -r0
    9ef8:	c1000008 	tstgt	r0, r8
    9efc:	bb00003c 	bllt	9ff4 <_Min_Stack_Size+0x8ff4>
    9f00:	1300003c 	movwne	r0, #60	; 0x3c
    9f04:	000008ec 	andeq	r0, r0, ip, ror #17
    9f08:	1000209a 	mulne	r0, sl, r0
    9f0c:	00209a05 	eoreq	r9, r0, r5, lsl #20
    9f10:	00209e10 	eoreq	r9, r0, r0, lsl lr
    9f14:	02560210 	subseq	r0, r6, #16, 4
    9f18:	08ff1213 	ldmeq	pc!, {r0, r1, r4, r9, ip}^	; <UNPREDICTABLE>
    9f1c:	3cec0000 	stclcc	0, cr0, [ip]
    9f20:	3cea0000 	stclcc	0, cr0, [sl]
    9f24:	00000000 	andeq	r0, r0, r0
    9f28:	0008c411 	andeq	ip, r8, r1, lsl r4
    9f2c:	0020aa00 	eoreq	sl, r0, r0, lsl #20
    9f30:	20aa0110 	adccs	r0, sl, r0, lsl r1
    9f34:	20ae1000 	adccs	r1, lr, r0
    9f38:	66011000 	strvs	r1, [r1], -r0
    9f3c:	0006cf0d 	andeq	ip, r6, sp, lsl #30
    9f40:	08d31400 	ldmeq	r3, {sl, ip}^
    9f44:	3d010000 	stccc	0, cr0, [r1, #-0]
    9f48:	3cff0000 	ldclcc	0, cr0, [pc]	; 9f50 <_Min_Stack_Size+0x8f50>
    9f4c:	11000000 	mrsne	r0, (UNDEF: 0)
    9f50:	000008c4 	andeq	r0, r0, r4, asr #17
    9f54:	100020fc 	strdne	r2, [r0], -ip
    9f58:	0020fc01 	eoreq	pc, r0, r1, lsl #24
    9f5c:	00210010 	eoreq	r0, r1, r0, lsl r0
    9f60:	0d660110 	stfeqe	f0, [r6, #-64]!	; 0xffffffc0
    9f64:	000006f6 	strdeq	r0, [r0], -r6
    9f68:	0008d314 	andeq	sp, r8, r4, lsl r3
    9f6c:	003d1600 	eorseq	r1, sp, r0, lsl #12
    9f70:	003d1400 	eorseq	r1, sp, r0, lsl #8
    9f74:	a3110000 	tstge	r1, #0
    9f78:	06000008 	streq	r0, [r0], -r8
    9f7c:	01100021 	tsteq	r0, r1, lsr #32
    9f80:	10002106 	andne	r2, r0, r6, lsl #2
    9f84:	1000210c 	andne	r2, r0, ip, lsl #2
    9f88:	410d6601 	tstmi	sp, r1, lsl #12
    9f8c:	12000007 	andne	r0, r0, #7
    9f90:	000008b6 			; <UNDEFINED> instruction: 0x000008b6
    9f94:	00003d2b 	andeq	r3, r0, fp, lsr #26
    9f98:	00003d29 	andeq	r3, r0, r9, lsr #26
    9f9c:	0008ec13 	andeq	lr, r8, r3, lsl ip
    9fa0:	00210600 	eoreq	r0, r1, r0, lsl #12
    9fa4:	21060410 	tstcs	r6, r0, lsl r4
    9fa8:	210a1000 	mrscs	r1, (UNDEF: 10)
    9fac:	56021000 	strpl	r1, [r2], -r0
    9fb0:	ff121302 			; <UNDEFINED> instruction: 0xff121302
    9fb4:	40000008 	andmi	r0, r0, r8
    9fb8:	3e00003d 	mcrcc	0, 0, r0, cr0, cr13, {1}
    9fbc:	0000003d 	andeq	r0, r0, sp, lsr r0
    9fc0:	08c41100 	stmiaeq	r4, {r8, ip}^
    9fc4:	211c0000 	tstcs	ip, r0
    9fc8:	1c011000 	stcne	0, cr1, [r1], {-0}
    9fcc:	20100021 	andscs	r0, r0, r1, lsr #32
    9fd0:	01100021 	tsteq	r0, r1, lsr #32
    9fd4:	07680d66 	strbeq	r0, [r8, -r6, ror #26]!
    9fd8:	d3140000 	tstle	r4, #0
    9fdc:	55000008 	strpl	r0, [r0, #-8]
    9fe0:	5300003d 	movwpl	r0, #61	; 0x3d
    9fe4:	0000003d 	andeq	r0, r0, sp, lsr r0
    9fe8:	0008a311 	andeq	sl, r8, r1, lsl r3
    9fec:	00212600 	eoreq	r2, r1, r0, lsl #12
    9ff0:	21260110 			; <UNDEFINED> instruction: 0x21260110
    9ff4:	212e1000 			; <UNDEFINED> instruction: 0x212e1000
    9ff8:	66011000 	strvs	r1, [r1], -r0
    9ffc:	0007b30d 	andeq	fp, r7, sp, lsl #6
    a000:	08b61200 	ldmeq	r6!, {r9, ip}
    a004:	3d6a0000 	stclcc	0, cr0, [sl, #-0]
    a008:	3d680000 	stclcc	0, cr0, [r8, #-0]
    a00c:	ec130000 	ldc	0, cr0, [r3], {-0}
    a010:	26000008 	strcs	r0, [r0], -r8
    a014:	04100021 	ldreq	r0, [r0], #-33	; 0xffffffdf
    a018:	10002126 	andne	r2, r0, r6, lsr #2
    a01c:	1000212a 	andne	r2, r0, sl, lsr #2
    a020:	13025602 	movwne	r5, #9730	; 0x2602
    a024:	0008ff12 	andeq	pc, r8, r2, lsl pc	; <UNPREDICTABLE>
    a028:	003d7f00 	eorseq	r7, sp, r0, lsl #30
    a02c:	003d7d00 	eorseq	r7, sp, r0, lsl #26
    a030:	15000000 	strne	r0, [r0, #-0]
    a034:	10002106 	andne	r2, r0, r6, lsl #2
    a038:	0000092e 	andeq	r0, r0, lr, lsr #18
    a03c:	000007c7 	andeq	r0, r0, r7, asr #15
    a040:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    a044:	17000074 	smlsdxne	r0, r4, r0, r0
    a048:	10002126 	andne	r2, r0, r6, lsr #2
    a04c:	0000093d 	andeq	r0, r0, sp, lsr r9
    a050:	02500116 	subseq	r0, r0, #-2147483643	; 0x80000005
    a054:	00000074 	andeq	r0, r0, r4, ror r0
    a058:	00088618 	andeq	r8, r8, r8, lsl r6
    a05c:	0020ba00 	eoreq	fp, r0, r0, lsl #20
    a060:	20ba0110 	adcscs	r0, sl, r0, lsl r1
    a064:	20d61000 	sbcscs	r1, r6, r0
    a068:	7c011000 	stcvc	0, cr1, [r1], {-0}
    a06c:	0895120d 	ldmeq	r5, {r0, r2, r3, r9, ip}
    a070:	3d940000 	ldccc	0, cr0, [r4]
    a074:	3d920000 	ldccc	0, cr0, [r2]
    a078:	0d190000 	ldceq	0, cr0, [r9, #-0]
    a07c:	c6000009 	strgt	r0, [r0], -r9
    a080:	01100020 	tsteq	r0, r0, lsr #32
    a084:	100020c6 	andne	r2, r0, r6, asr #1
    a088:	100020ca 	andne	r2, r0, sl, asr #1
    a08c:	09026602 	stmdbeq	r2, {r1, r9, sl, sp, lr}
    a090:	00000822 	andeq	r0, r0, r2, lsr #16
    a094:	00092012 	andeq	r2, r9, r2, lsl r0
    a098:	003da900 	eorseq	sl, sp, r0, lsl #18
    a09c:	003da700 	eorseq	sl, sp, r0, lsl #14
    a0a0:	ec190000 	ldc	0, cr0, [r9], {-0}
    a0a4:	cc000008 	stcgt	0, cr0, [r0], {8}
    a0a8:	01100020 	tsteq	r0, r0, lsr #32
    a0ac:	100020cc 	andne	r2, r0, ip, asr #1
    a0b0:	100020d0 	ldrdne	r2, [r0], -r0
    a0b4:	1a026802 	bne	a40c4 <SYSTICK_CYCLES+0x7b085>
    a0b8:	0000084a 	andeq	r0, r0, sl, asr #16
    a0bc:	0008ff12 	andeq	pc, r8, r2, lsl pc	; <UNPREDICTABLE>
    a0c0:	003dbe00 	eorseq	fp, sp, r0, lsl #28
    a0c4:	003dbc00 	eorseq	fp, sp, r0, lsl #24
    a0c8:	e11a0000 	tst	sl, r0
    a0cc:	d0000008 	andle	r0, r0, r8
    a0d0:	03100020 	tsteq	r0, #32
    a0d4:	100020d0 	ldrdne	r2, [r0], -r0
    a0d8:	100020d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
    a0dc:	09026c02 	stmdbeq	r2, {r1, sl, fp, sp, lr}
    a0e0:	0008c413 	andeq	ip, r8, r3, lsl r4
    a0e4:	0020d200 	eoreq	sp, r0, r0, lsl #4
    a0e8:	20d20110 	sbcscs	r0, r2, r0, lsl r1
    a0ec:	20d61000 	sbcscs	r1, r6, r0
    a0f0:	6e021000 	cdpvs	0, 0, cr1, cr2, cr0, {0}
    a0f4:	d3140902 	tstle	r4, #32768	; 0x8000
    a0f8:	d3000008 	movwle	r0, #8
    a0fc:	d100003d 	tstle	r0, sp, lsr r0
    a100:	0000003d 	andeq	r0, r0, sp, lsr r0
    a104:	d01b0000 	andsle	r0, fp, r0
    a108:	0200001f 	andeq	r0, r0, #31
    a10c:	01370260 	teqeq	r7, r0, ror #4
    a110:	0008a303 	andeq	sl, r8, r3, lsl #6
    a114:	0eee1c00 	cdpeq	12, 14, cr1, cr14, cr0, {0}
    a118:	62020000 	andvs	r0, r2, #0
    a11c:	00970602 	addseq	r0, r7, r2, lsl #12
    a120:	1d000000 	stcne	0, cr0, [r0, #-0]
    a124:	00000f24 	andeq	r0, r0, r4, lsr #30
    a128:	37025202 	strcc	r5, [r2, -r2, lsl #4]
    a12c:	00009701 	andeq	r9, r0, r1, lsl #14
    a130:	08c40300 	stmiaeq	r4, {r8, r9}^
    a134:	ad1c0000 	ldcge	0, cr0, [ip, #-0]
    a138:	0200000e 	andeq	r0, r0, #14
    a13c:	97060254 	smlsdls	r6, r4, r2, r0
    a140:	00000000 	andeq	r0, r0, r0
    a144:	000e991b 	andeq	r9, lr, fp, lsl r9
    a148:	02490200 	subeq	r0, r9, #0, 4
    a14c:	e1030137 	tst	r3, r7, lsr r1
    a150:	1e000008 	cdpne	0, 0, cr0, cr0, cr8, {0}
    a154:	00000ead 	andeq	r0, r0, sp, lsr #29
    a158:	50024902 	andpl	r4, r2, r2, lsl #18
    a15c:	00000097 	muleq	r0, r7, r0
    a160:	1fad1f00 	svcne	0x00ad1f00
    a164:	43020000 	movwmi	r0, #8192	; 0x2000
    a168:	03013702 	movweq	r3, #5890	; 0x1702
    a16c:	000ec21d 	andeq	ip, lr, sp, lsl r2
    a170:	02320200 	eorseq	r0, r2, #0, 4
    a174:	00970137 	addseq	r0, r7, r7, lsr r1
    a178:	0d030000 	stceq	0, cr0, [r3, #-0]
    a17c:	1c000009 	stcne	0, cr0, [r0], {9}
    a180:	00000eb1 			; <UNDEFINED> instruction: 0x00000eb1
    a184:	06023402 	streq	r3, [r2], -r2, lsl #8
    a188:	00000097 	muleq	r0, r7, r0
    a18c:	19661d00 	stmdbne	r6!, {r8, sl, fp, ip}^
    a190:	fa020000 	blx	8a198 <SYSTICK_CYCLES+0x61159>
    a194:	97013701 	strls	r3, [r1, -r1, lsl #14]
    a198:	03000000 	movweq	r0, #0
    a19c:	0000092e 	andeq	r0, r0, lr, lsr #18
    a1a0:	0019aa1c 	andseq	sl, r9, ip, lsl sl
    a1a4:	01fc0200 	mvnseq	r0, r0, lsl #4
    a1a8:	00009706 	andeq	r9, r0, r6, lsl #14
    a1ac:	01200000 			; <UNDEFINED> instruction: 0x01200000
    a1b0:	001f6e01 	andseq	r6, pc, r1, lsl #28
    a1b4:	001f6e00 	andseq	r6, pc, r0, lsl #28
    a1b8:	011b0400 	tsteq	fp, r0, lsl #8
    a1bc:	0101200d 	tsteq	r1, sp
    a1c0:	00001ec5 	andeq	r1, r0, r5, asr #29
    a1c4:	00001ec5 	andeq	r1, r0, r5, asr #29
    a1c8:	0d011804 	stceq	8, cr1, [r1, #-16]
    a1cc:	000fcf00 	andeq	ip, pc, r0, lsl #30
    a1d0:	d1000200 	mrsle	r0, R8_usr
    a1d4:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    a1d8:	00003d01 	andeq	r3, r0, r1, lsl #26
    a1dc:	20980c00 	addscs	r0, r8, r0, lsl #24
    a1e0:	065c0000 	ldrbeq	r0, [ip], -r0
    a1e4:	03700000 	cmneq	r0, #0
	...
    a1f0:	375c0000 	ldrbcc	r0, [ip, -r0]
    a1f4:	04020000 	streq	r0, [r2], #-0
    a1f8:	00023907 	andeq	r3, r2, r7, lsl #18
    a1fc:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    a200:	00746e69 	rsbseq	r6, r4, r9, ror #28
    a204:	e8050802 	stmda	r5, {r1, fp}
    a208:	02000004 	andeq	r0, r0, #4
    a20c:	063e0408 	ldrteq	r0, [lr], -r8, lsl #8
    a210:	01020000 	mrseq	r0, (UNDEF: 2)
    a214:	00086d06 	andeq	r6, r8, r6, lsl #26
    a218:	08010200 	stmdaeq	r1, {r9}
    a21c:	0000086b 	andeq	r0, r0, fp, ror #16
    a220:	cf050202 	svcgt	0x00050202
    a224:	02000006 	andeq	r0, r0, #6
    a228:	09390702 	ldmdbeq	r9!, {r1, r8, r9, sl}
    a22c:	04020000 	streq	r0, [r2], #-0
    a230:	0004ed05 	andeq	lr, r4, r5, lsl #26
    a234:	07040200 	streq	r0, [r4, -r0, lsl #4]
    a238:	00000234 	andeq	r0, r0, r4, lsr r2
    a23c:	2f070802 	svccs	0x00070802
    a240:	04000002 	streq	r0, [r0], #-2
    a244:	08010204 	stmdaeq	r1, {r2, r9}
    a248:	00000874 	andeq	r0, r0, r4, ror r8
    a24c:	0008fa05 	andeq	pc, r8, r5, lsl #20
    a250:	31730200 	cmncc	r3, r0, lsl #4
    a254:	00000078 	andeq	r0, r0, r8, ror r0
    a258:	0008f905 	andeq	pc, r8, r5, lsl #18
    a25c:	31740200 	cmncc	r4, r0, lsl #4
    a260:	0000004c 	andeq	r0, r0, ip, asr #32
    a264:	00079a05 	andeq	r9, r7, r5, lsl #20
    a268:	31760200 	cmncc	r6, r0, lsl #4
    a26c:	00000029 	andeq	r0, r0, r9, lsr #32
    a270:	00009706 	andeq	r9, r0, r6, lsl #14
    a274:	072c0500 	streq	r0, [ip, -r0, lsl #10]!
    a278:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    a27c:	00006831 	andeq	r6, r0, r1, lsr r8
    a280:	00a80600 	adceq	r0, r8, r0, lsl #12
    a284:	3b070000 	blcc	1ca28c <__RAM_SIZE+0xca28c>
    a288:	1c000005 	stcne	0, cr0, [r0], {5}
    a28c:	10018203 	andne	r8, r1, r3, lsl #4
    a290:	00000138 	andeq	r0, r0, r8, lsr r1
    a294:	00082d08 	andeq	r2, r8, r8, lsl #26
    a298:	01860300 	orreq	r0, r6, r0, lsl #6
    a29c:	0000a819 	andeq	sl, r0, r9, lsl r8
    a2a0:	00230200 	eoreq	r0, r3, r0, lsl #4
    a2a4:	0003a008 	andeq	sl, r3, r8
    a2a8:	01870300 	orreq	r0, r7, r0, lsl #6
    a2ac:	0000a819 	andeq	sl, r0, r9, lsl r8
    a2b0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a2b4:	00043d08 	andeq	r3, r4, r8, lsl #26
    a2b8:	018a0300 	orreq	r0, sl, r0, lsl #6
    a2bc:	0001441b 	andeq	r4, r1, fp, lsl r4
    a2c0:	08230200 	stmdaeq	r3!, {r9}
    a2c4:	0001f208 	andeq	pc, r1, r8, lsl #4
    a2c8:	018b0300 	orreq	r0, fp, r0, lsl #6
    a2cc:	0000a819 	andeq	sl, r0, r9, lsl r8
    a2d0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    a2d4:	00096f08 	andeq	r6, r9, r8, lsl #30
    a2d8:	01910300 	orrseq	r0, r1, r0, lsl #6
    a2dc:	00014a1a 	andeq	r4, r1, sl, lsl sl
    a2e0:	10230200 	eorne	r0, r3, r0, lsl #4
    a2e4:	00001b08 	andeq	r1, r0, r8, lsl #22
    a2e8:	01920300 	orrseq	r0, r2, r0, lsl #6
    a2ec:	00014a1a 	andeq	r4, r1, sl, lsl sl
    a2f0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    a2f4:	00060908 	andeq	r0, r6, r8, lsl #18
    a2f8:	01960300 	orrseq	r0, r6, r0, lsl #6
    a2fc:	0001501b 	andeq	r5, r1, fp, lsl r0
    a300:	18230200 	stmdane	r3!, {r9}
    a304:	44010900 	strmi	r0, [r1], #-2304	; 0xfffff700
    a308:	0a000001 	beq	a314 <_Min_Stack_Size+0x9314>
    a30c:	000000a8 	andeq	r0, r0, r8, lsr #1
    a310:	38040b00 	stmdacc	r4, {r8, r9, fp}
    a314:	0b000001 	bleq	a320 <_Min_Stack_Size+0x9320>
    a318:	0000b904 	andeq	fp, r0, r4, lsl #18
    a31c:	4a040b00 	bmi	10cf24 <__RAM_SIZE+0xcf24>
    a320:	0c000001 	stceq	0, cr0, [r0], {1}
    a324:	0000064a 	andeq	r0, r0, sl, asr #12
    a328:	03019b03 	movweq	r9, #6915	; 0x1b03
    a32c:	000000b9 	strheq	r0, [r0], -r9
    a330:	007f040b 	rsbseq	r0, pc, fp, lsl #8
    a334:	4b070000 	blmi	1ca33c <__RAM_SIZE+0xca33c>
    a338:	d8000003 	stmdale	r0, {r0, r1}
    a33c:	1001d603 	andne	sp, r1, r3, lsl #12
    a340:	0000048e 	andeq	r0, r0, lr, lsl #9
    a344:	00092c08 	andeq	r2, r9, r8, lsl #24
    a348:	01dd0300 	bicseq	r0, sp, r0, lsl #6
    a34c:	0000a819 	andeq	sl, r0, r9, lsl r8
    a350:	00230200 	eoreq	r0, r3, r0, lsl #4
    a354:	00079f08 	andeq	r9, r7, r8, lsl #30
    a358:	01de0300 	bicseq	r0, lr, r0, lsl #6
    a35c:	0000a819 	andeq	sl, r0, r9, lsl r8
    a360:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    a364:	0001bc08 	andeq	fp, r1, r8, lsl #24
    a368:	01df0300 	bicseq	r0, pc, r0, lsl #6
    a36c:	0000761a 	andeq	r7, r0, sl, lsl r6
    a370:	08230200 	stmdaeq	r3!, {r9}
    a374:	00091608 	andeq	r1, r9, r8, lsl #12
    a378:	01e00300 	mvneq	r0, r0, lsl #6
    a37c:	0000761a 	andeq	r7, r0, sl, lsl r6
    a380:	0c230200 	sfmeq	f0, 4, [r3], #-0
    a384:	00041108 	andeq	r1, r4, r8, lsl #2
    a388:	01e10300 	mvneq	r0, r0, lsl #6
    a38c:	0000761a 	andeq	r7, r0, sl, lsl r6
    a390:	10230200 	eorne	r0, r3, r0, lsl #4
    a394:	00095a08 	andeq	r5, r9, r8, lsl #20
    a398:	01e20300 	mvneq	r0, r0, lsl #6
    a39c:	0000a819 	andeq	sl, r0, r9, lsl r8
    a3a0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    a3a4:	0021e208 	eoreq	lr, r1, r8, lsl #4
    a3a8:	01e30300 	mvneq	r0, r0, lsl #6
    a3ac:	0000a819 	andeq	sl, r0, r9, lsl r8
    a3b0:	18230200 	stmdane	r3!, {r9}
    a3b4:	00062508 	andeq	r2, r6, r8, lsl #10
    a3b8:	01e40300 	mvneq	r0, r0, lsl #6
    a3bc:	0000a819 	andeq	sl, r0, r9, lsl r8
    a3c0:	1c230200 	sfmne	f0, 4, [r3], #-0
    a3c4:	0006ba08 	andeq	fp, r6, r8, lsl #20
    a3c8:	01e80300 	mvneq	r0, r0, lsl #6
    a3cc:	00048e1a 	andeq	r8, r4, sl, lsl lr
    a3d0:	20230200 	eorcs	r0, r3, r0, lsl #4
    a3d4:	00019908 	andeq	r9, r1, r8, lsl #18
    a3d8:	01e90300 	mvneq	r0, r0, lsl #6
    a3dc:	00048e1a 	andeq	r8, r4, sl, lsl lr
    a3e0:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    a3e4:	0005b108 	andeq	fp, r5, r8, lsl #2
    a3e8:	01f10300 	mvnseq	r0, r0, lsl #6
    a3ec:	0001631a 	andeq	r6, r1, sl, lsl r3
    a3f0:	28230200 	stmdacs	r3!, {r9}
    a3f4:	0002d908 	andeq	sp, r2, r8, lsl #18
    a3f8:	01f20300 	mvnseq	r0, r0, lsl #6
    a3fc:	00009719 	andeq	r9, r0, r9, lsl r7
    a400:	2c230200 	sfmcs	f0, 4, [r3], #-0
    a404:	00024608 	andeq	r4, r2, r8, lsl #12
    a408:	01f30300 	mvnseq	r0, r0, lsl #6
    a40c:	00009719 	andeq	r9, r0, r9, lsl r7
    a410:	30230200 	eorcc	r0, r3, r0, lsl #4
    a414:	00017308 	andeq	r7, r1, r8, lsl #6
    a418:	01f40300 	mvnseq	r0, r0, lsl #6
    a41c:	00009719 	andeq	r9, r0, r9, lsl r7
    a420:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    a424:	00074b08 	andeq	r4, r7, r8, lsl #22
    a428:	01f50300 	mvnseq	r0, r0, lsl #6
    a42c:	00009719 	andeq	r9, r0, r9, lsl r7
    a430:	38230200 	stmdacc	r3!, {r9}
    a434:	0000eb08 	andeq	lr, r0, r8, lsl #22
    a438:	01f60300 	mvnseq	r0, r0, lsl #6
    a43c:	00009719 	andeq	r9, r0, r9, lsl r7
    a440:	3c230200 	sfmcc	f0, 4, [r3], #-0
    a444:	00035c08 	andeq	r5, r3, r8, lsl #24
    a448:	01fb0300 	mvnseq	r0, r0, lsl #6
    a44c:	0004a51b 	andeq	sl, r4, fp, lsl r5
    a450:	40230200 	eormi	r0, r3, r0, lsl #4
    a454:	00015208 	andeq	r5, r1, r8, lsl #4
    a458:	02030300 	andeq	r0, r3, #0, 6
    a45c:	0001441b 	andeq	r4, r1, fp, lsl r4
    a460:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    a464:	00010708 	andeq	r0, r1, r8, lsl #14
    a468:	02040300 	andeq	r0, r4, #0, 6
    a46c:	0000a819 	andeq	sl, r0, r9, lsl r8
    a470:	48230200 	stmdami	r3!, {r9}
    a474:	00033b08 	andeq	r3, r3, r8, lsl #22
    a478:	02080300 	andeq	r0, r8, #0, 6
    a47c:	00015619 	andeq	r5, r1, r9, lsl r6
    a480:	4c230200 	sfmmi	f0, 4, [r3], #-0
    a484:	0002ec08 	andeq	lr, r2, r8, lsl #24
    a488:	020e0300 	andeq	r0, lr, #0, 6
    a48c:	0004a51b 	andeq	sl, r4, fp, lsl r5
    a490:	68230200 	stmdavs	r3!, {r9}
    a494:	0005e908 	andeq	lr, r5, r8, lsl #18
    a498:	020f0300 	andeq	r0, pc, #0, 6
    a49c:	0000761a 	andeq	r7, r0, sl, lsl r6
    a4a0:	6c230200 	sfmvs	f0, 4, [r3], #-0
    a4a4:	00073208 	andeq	r3, r7, r8, lsl #4
    a4a8:	02110300 	andseq	r0, r1, #0, 6
    a4ac:	00048e1a 	andeq	r8, r4, sl, lsl lr
    a4b0:	70230200 	eorvc	r0, r3, r0, lsl #4
    a4b4:	00021208 	andeq	r1, r2, r8, lsl #4
    a4b8:	02120300 	andseq	r0, r2, #0, 6
    a4bc:	00048e1a 	andeq	r8, r4, sl, lsl lr
    a4c0:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    a4c4:	00071508 	andeq	r1, r7, r8, lsl #10
    a4c8:	02130300 	andseq	r0, r3, #0, 6
    a4cc:	0000a819 	andeq	sl, r0, r9, lsl r8
    a4d0:	78230200 	stmdavc	r3!, {r9}
    a4d4:	0003c608 	andeq	ip, r3, r8, lsl #12
    a4d8:	02140300 	andseq	r0, r4, #0, 6
    a4dc:	0000761a 	andeq	r7, r0, sl, lsl r6
    a4e0:	7c230200 	sfmvc	f0, 4, [r3], #-0
    a4e4:	00055408 	andeq	r5, r5, r8, lsl #8
    a4e8:	02150300 	andseq	r0, r5, #0, 6
    a4ec:	00009719 	andeq	r9, r0, r9, lsl r7
    a4f0:	80230300 	eorhi	r0, r3, r0, lsl #6
    a4f4:	03e80801 	mvneq	r0, #65536	; 0x10000
    a4f8:	16030000 	strne	r0, [r3], -r0
    a4fc:	00971902 	addseq	r1, r7, r2, lsl #18
    a500:	23030000 	movwcs	r0, #12288	; 0x3000
    a504:	ff080184 			; <UNDEFINED> instruction: 0xff080184
    a508:	03000008 	movweq	r0, #8
    a50c:	8e1a021f 	mrchi	2, 0, r0, cr10, cr15, {0}
    a510:	03000004 	movweq	r0, #4
    a514:	08018823 	stmdaeq	r1, {r0, r1, r5, fp, pc}
    a518:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    a51c:	1a022003 	bne	92530 <SYSTICK_CYCLES+0x694f1>
    a520:	0000048e 	andeq	r0, r0, lr, lsl #9
    a524:	018c2303 	orreq	r2, ip, r3, lsl #6
    a528:	0002c108 	andeq	ip, r2, r8, lsl #2
    a52c:	022e0300 	eoreq	r0, lr, #0, 6
    a530:	00009719 	andeq	r9, r0, r9, lsl r7
    a534:	90230300 	eorls	r0, r3, r0, lsl #6
    a538:	02560801 	subseq	r0, r6, #65536	; 0x10000
    a53c:	2f030000 	svccs	0x00030000
    a540:	00971902 	addseq	r1, r7, r2, lsl #18
    a544:	23030000 	movwcs	r0, #12288	; 0x3000
    a548:	20080194 	mulcs	r8, r4, r1
    a54c:	03000003 	movweq	r0, #3
    a550:	97190230 			; <UNDEFINED> instruction: 0x97190230
    a554:	03000000 	movweq	r0, #0
    a558:	08019823 	stmdaeq	r1, {r0, r1, r5, fp, ip, pc}
    a55c:	00000277 	andeq	r0, r0, r7, ror r2
    a560:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
    a564:	00000097 	muleq	r0, r7, r0
    a568:	019c2303 	orrseq	r2, ip, r3, lsl #6
    a56c:	00000008 	andeq	r0, r0, r8
    a570:	02350300 	eorseq	r0, r5, #0, 6
    a574:	00058a1a 	andeq	r8, r5, sl, lsl sl
    a578:	a0230300 	eorge	r0, r3, r0, lsl #6
    a57c:	1bc80801 	blne	ff20c588 <__RAM_segment_used_end__+0xc710c588>
    a580:	3a030000 	bcc	ca588 <SYSTICK_CYCLES+0xa1549>
    a584:	00a81902 	adceq	r1, r8, r2, lsl #18
    a588:	23030000 	movwcs	r0, #12288	; 0x3000
    a58c:	880801a4 	stmdahi	r8, {r2, r5, r7, r8}
    a590:	0300001c 	movweq	r0, #28
    a594:	a819023d 	ldmdage	r9, {r0, r2, r3, r4, r5, r9}
    a598:	03000000 	movweq	r0, #0
    a59c:	0801a823 	stmdaeq	r1, {r0, r1, r5, fp, sp, pc}
    a5a0:	00001b41 	andeq	r1, r0, r1, asr #22
    a5a4:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
    a5a8:	000000a8 	andeq	r0, r0, r8, lsr #1
    a5ac:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    a5b0:	001d3f08 	andseq	r3, sp, r8, lsl #30
    a5b4:	02450300 	subeq	r0, r5, #0, 6
    a5b8:	0000a819 	andeq	sl, r0, r9, lsl r8
    a5bc:	b0230300 	eorlt	r0, r3, r0, lsl #6
    a5c0:	1c580801 	mrrcne	8, 0, r0, r8, cr1
    a5c4:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    a5c8:	00a81902 	adceq	r1, r8, r2, lsl #18
    a5cc:	23030000 	movwcs	r0, #12288	; 0x3000
    a5d0:	c30801b4 	movwgt	r0, #33204	; 0x81b4
    a5d4:	03000007 	movweq	r0, #7
    a5d8:	8e1a024c 	cdphi	2, 1, cr0, cr10, cr12, {2}
    a5dc:	03000004 	movweq	r0, #4
    a5e0:	0801b823 	stmdaeq	r1, {r0, r1, r5, fp, ip, sp, pc}
    a5e4:	00001d17 	andeq	r1, r0, r7, lsl sp
    a5e8:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
    a5ec:	000000a8 	andeq	r0, r0, r8, lsr #1
    a5f0:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    a5f4:	001b1908 	andseq	r1, fp, r8, lsl #18
    a5f8:	02520300 	subseq	r0, r2, #0, 6
    a5fc:	0000a819 	andeq	sl, r0, r9, lsl r8
    a600:	c0230300 	eorgt	r0, r3, r0, lsl #6
    a604:	1a960801 	bne	fe58c610 <__RAM_segment_used_end__+0xc648c610>
    a608:	55030000 	strpl	r0, [r3, #-0]
    a60c:	00a81902 	adceq	r1, r8, r2, lsl #18
    a610:	23030000 	movwcs	r0, #12288	; 0x3000
    a614:	ec0801c4 	stfs	f0, [r8], {196}	; 0xc4
    a618:	0300001b 	movweq	r0, #27
    a61c:	a8190259 	ldmdage	r9, {r0, r3, r4, r6, r9}
    a620:	03000000 	movweq	r0, #0
    a624:	0801c823 	stmdaeq	r1, {r0, r1, r5, fp, lr, pc}
    a628:	000009c4 	andeq	r0, r0, r4, asr #19
    a62c:	1a025d03 	bne	a1a40 <SYSTICK_CYCLES+0x78a01>
    a630:	00000076 	andeq	r0, r0, r6, ror r0
    a634:	01cc2303 	biceq	r2, ip, r3, lsl #6
    a638:	00048108 	andeq	r8, r4, r8, lsl #2
    a63c:	02780300 	rsbseq	r0, r8, #0, 6
    a640:	0000a819 	andeq	sl, r0, r9, lsl r8
    a644:	d0230300 	eorle	r0, r3, r0, lsl #6
    a648:	056d0801 	strbeq	r0, [sp, #-2049]!	; 0xfffff7ff
    a64c:	7d030000 	stcvc	0, cr0, [r3, #-0]
    a650:	00a81902 	adceq	r1, r8, r2, lsl #18
    a654:	23030000 	movwcs	r0, #12288	; 0x3000
    a658:	0b0001d4 	bleq	adb0 <_Min_Stack_Size+0x9db0>
    a65c:	00016904 	andeq	r6, r1, r4, lsl #18
    a660:	a5010900 	strge	r0, [r1, #-2304]	; 0xfffff700
    a664:	0a000004 	beq	a67c <_Min_Stack_Size+0x967c>
    a668:	0000048e 	andeq	r0, r0, lr, lsl #9
    a66c:	0000a80a 	andeq	sl, r0, sl, lsl #16
    a670:	040b0000 	streq	r0, [fp], #-0
    a674:	00000494 	muleq	r0, r4, r4
    a678:	0007b307 	andeq	fp, r7, r7, lsl #6
    a67c:	7e033400 	cfcpysvc	mvf3, mvf3
    a680:	058a1003 	streq	r1, [sl, #3]
    a684:	8d080000 	stchi	0, cr0, [r8, #-0]
    a688:	03000001 	movweq	r0, #1
    a68c:	a8190382 	ldmdage	r9, {r1, r7, r8, r9}
    a690:	02000000 	andeq	r0, r0, #0
    a694:	97080023 	strls	r0, [r8, -r3, lsr #32]
    a698:	03000008 	movweq	r0, #8
    a69c:	631a0385 	tstvs	sl, #335544322	; 0x14000002
    a6a0:	02000001 	andeq	r0, r0, #1
    a6a4:	fc080423 	stc2	4, cr0, [r8], {35}	; 0x23
    a6a8:	03000006 	movweq	r0, #6
    a6ac:	97190388 	ldrls	r0, [r9, -r8, lsl #7]
    a6b0:	02000000 	andeq	r0, r0, #0
    a6b4:	cb080823 	blgt	20c748 <__RAM_SIZE+0x10c748>
    a6b8:	03000004 	movweq	r0, #4
    a6bc:	9d1a038c 	ldcls	3, cr0, [sl, #-560]	; 0xfffffdd0
    a6c0:	02000005 	andeq	r0, r0, #5
    a6c4:	62080c23 	andvs	r0, r8, #8960	; 0x2300
    a6c8:	03000001 	movweq	r0, #1
    a6cc:	97190390 			; <UNDEFINED> instruction: 0x97190390
    a6d0:	02000000 	andeq	r0, r0, #0
    a6d4:	21081023 	tstcs	r8, r3, lsr #32
    a6d8:	03000001 	movweq	r0, #1
    a6dc:	97190393 			; <UNDEFINED> instruction: 0x97190393
    a6e0:	02000000 	andeq	r0, r0, #0
    a6e4:	cd081423 	cfstrsgt	mvf1, [r8, #-140]	; 0xffffff74
    a6e8:	03000008 	movweq	r0, #8
    a6ec:	8e1a0398 	mrchi	3, 0, r0, cr10, cr8, {4}
    a6f0:	02000004 	andeq	r0, r0, #4
    a6f4:	e3081823 	movw	r1, #34851	; 0x8823
    a6f8:	03000006 	movweq	r0, #6
    a6fc:	97190399 			; <UNDEFINED> instruction: 0x97190399
    a700:	02000000 	andeq	r0, r0, #0
    a704:	d3081c23 	movwle	r1, #35875	; 0x8c23
    a708:	03000005 	movweq	r0, #5
    a70c:	8a1a039d 	bhi	68b588 <__RAM_SIZE+0x58b588>
    a710:	02000005 	andeq	r0, r0, #5
    a714:	a0082023 	andge	r2, r8, r3, lsr #32
    a718:	03000006 	movweq	r0, #6
    a71c:	8a1a039e 	bhi	68b59c <__RAM_SIZE+0x58b59c>
    a720:	02000005 	andeq	r0, r0, #5
    a724:	d0082423 	andle	r2, r8, r3, lsr #8
    a728:	03000001 	movweq	r0, #1
    a72c:	971903a2 	ldrls	r0, [r9, -r2, lsr #7]
    a730:	02000000 	andeq	r0, r0, #0
    a734:	e0082823 	and	r2, r8, r3, lsr #16
    a738:	03000009 	movweq	r0, #9
    a73c:	8a1a03a6 	bhi	68b5dc <__RAM_SIZE+0x58b5dc>
    a740:	02000005 	andeq	r0, r0, #5
    a744:	25082c23 	strcs	r2, [r8, #-3107]	; 0xfffff3dd
    a748:	03000004 	movweq	r0, #4
    a74c:	8a1a03a7 	bhi	68b5f0 <__RAM_SIZE+0x58b5f0>
    a750:	02000005 	andeq	r0, r0, #5
    a754:	0b003023 	bleq	167e8 <_Min_Stack_Size+0x157e8>
    a758:	0004ab04 	andeq	sl, r4, r4, lsl #22
    a75c:	08ef0c00 	stmiaeq	pc!, {sl, fp}^	; <UNPREDICTABLE>
    a760:	86030000 	strhi	r0, [r3], -r0
    a764:	01690302 	cmneq	r9, r2, lsl #6
    a768:	040b0000 	streq	r0, [fp], #-0
    a76c:	00000590 	muleq	r0, r0, r5
    a770:	0011270d 	andseq	r2, r1, sp, lsl #14
    a774:	01390400 	teqeq	r9, r0, lsl #8
    a778:	00059d21 	andeq	r9, r5, r1, lsr #26
    a77c:	0d010100 	stfeqs	f0, [r1, #-0]
    a780:	000019d9 	ldrdeq	r1, [r0], -r9
    a784:	21014004 	tstcs	r1, r4
    a788:	0000059d 	muleq	r0, sp, r5
    a78c:	f40d0101 	vst4.8	{d0,d2,d4,d6}, [sp], r1
    a790:	04000018 	streq	r0, [r0], #-24	; 0xffffffe8
    a794:	b4210153 	strtlt	r0, [r1], #-339	; 0xfffffead
    a798:	01000000 	mrseq	r0, (UNDEF: 0)
    a79c:	00a80e01 	adceq	r0, r8, r1, lsl #28
    a7a0:	05e00000 	strbeq	r0, [r0, #0]!
    a7a4:	290f0000 	stmdbcs	pc, {}	; <UNPREDICTABLE>
    a7a8:	00000000 	andeq	r0, r0, r0
    a7ac:	1c130d00 	ldcne	13, cr0, [r3], {-0}
    a7b0:	5b040000 	blpl	10a7b8 <__RAM_SIZE+0xa7b8>
    a7b4:	05d02101 	ldrbeq	r2, [r0, #257]	; 0x101
    a7b8:	01010000 	mrseq	r0, (UNDEF: 1)
    a7bc:	001aba0d 	andseq	fp, sl, sp, lsl #20
    a7c0:	017f0400 	cmneq	pc, r0, lsl #8
    a7c4:	00009721 	andeq	r9, r0, r1, lsr #14
    a7c8:	0e010100 	adfeqs	f0, f1, f0
    a7cc:	0000059d 	muleq	r0, sp, r5
    a7d0:	0000060e 	andeq	r0, r0, lr, lsl #12
    a7d4:	0000290f 	andeq	r2, r0, pc, lsl #18
    a7d8:	0d001f00 	stceq	15, cr1, [r0, #-0]
    a7dc:	00001dab 	andeq	r1, r0, fp, lsr #27
    a7e0:	21018704 	tstcs	r1, r4, lsl #14
    a7e4:	000005fe 	strdeq	r0, [r0], -lr
    a7e8:	3e0d0101 	adfcce	f0, f5, f1
    a7ec:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    a7f0:	a321018e 			; <UNDEFINED> instruction: 0xa321018e
    a7f4:	01000000 	mrseq	r0, (UNDEF: 0)
    a7f8:	1bc70d01 	blne	ff1cdc04 <__RAM_segment_used_end__+0xc70cdc04>
    a7fc:	ca040000 	bgt	10a804 <__RAM_SIZE+0xa804>
    a800:	00a82101 	adceq	r2, r8, r1, lsl #2
    a804:	01010000 	mrseq	r0, (UNDEF: 1)
    a808:	001b400d 	andseq	r4, fp, sp
    a80c:	01d60400 	bicseq	r0, r6, r0, lsl #8
    a810:	0000a821 	andeq	sl, r0, r1, lsr #16
    a814:	0d010100 	stfeqs	f0, [r1, #-0]
    a818:	00001d3e 	andeq	r1, r0, lr, lsr sp
    a81c:	2101dd04 	tstcs	r1, r4, lsl #26
    a820:	000000a8 	andeq	r0, r0, r8, lsr #1
    a824:	e90d0101 	stmdb	sp, {r0, r8}
    a828:	0400001c 	streq	r0, [r0], #-28	; 0xffffffe4
    a82c:	a8210209 	stmdage	r1!, {r0, r3, r9}
    a830:	01000000 	mrseq	r0, (UNDEF: 0)
    a834:	1b9d0d01 	blne	fe74dc40 <__RAM_segment_used_end__+0xc664dc40>
    a838:	0f040000 	svceq	0x00040000
    a83c:	00a82102 	adceq	r2, r8, r2, lsl #2
    a840:	01010000 	mrseq	r0, (UNDEF: 1)
    a844:	00059d0e 	andeq	r9, r5, lr, lsl #26
    a848:	00068700 	andeq	r8, r6, r0, lsl #14
    a84c:	00290f00 	eoreq	r0, r9, r0, lsl #30
    a850:	00070000 	andeq	r0, r7, r0
    a854:	001cc60d 	andseq	ip, ip, sp, lsl #12
    a858:	02100400 	andseq	r0, r0, #0, 8
    a85c:	00067721 	andeq	r7, r6, r1, lsr #14
    a860:	10010100 	andne	r0, r1, r0, lsl #2
    a864:	00106401 	andseq	r6, r0, r1, lsl #8
    a868:	026e0100 	rsbeq	r0, lr, #0, 2
    a86c:	215c0107 	cmpcs	ip, r7, lsl #2
    a870:	24841000 	strcs	r1, [r4], #0
    a874:	3de61000 	stclcc	0, cr1, [r6]
    a878:	24010000 	strcs	r0, [r1], #-0
    a87c:	1100000e 	tstne	r0, lr
    a880:	00001979 	andeq	r1, r0, r9, ror r9
    a884:	2e026e01 	cdpcs	14, 0, cr6, cr2, cr1, {0}
    a888:	0000059d 	muleq	r0, sp, r5
    a88c:	00003e10 	andeq	r3, r0, r0, lsl lr
    a890:	00003e06 	andeq	r3, r0, r6, lsl #28
    a894:	0002e312 	andeq	lr, r2, r2, lsl r3
    a898:	02710100 	rsbseq	r0, r1, #0, 2
    a89c:	00009711 	andeq	r9, r0, r1, lsl r7
    a8a0:	003e5a00 	eorseq	r5, lr, r0, lsl #20
    a8a4:	003e5200 	eorseq	r5, lr, r0, lsl #4
    a8a8:	20791200 	rsbscs	r1, r9, r0, lsl #4
    a8ac:	72010000 	andvc	r0, r1, #0
    a8b0:	00a81102 	adceq	r1, r8, r2, lsl #2
    a8b4:	3e950000 	cdpcc	0, 9, cr0, cr5, cr0, {0}
    a8b8:	3e8f0000 	cdpcc	0, 8, cr0, cr15, cr0, {0}
    a8bc:	86120000 	ldrhi	r0, [r2], -r0
    a8c0:	01000020 	tsteq	r0, r0, lsr #32
    a8c4:	9d120273 	lfmls	f0, 4, [r2, #-460]	; 0xfffffe34
    a8c8:	c8000005 	stmdagt	r0, {r0, r2}
    a8cc:	c200003e 	andgt	r0, r0, #62	; 0x3e
    a8d0:	1200003e 	andne	r0, r0, #62	; 0x3e
    a8d4:	0000208f 	andeq	r2, r0, pc, lsl #1
    a8d8:	12027401 	andne	r7, r2, #16777216	; 0x1000000
    a8dc:	0000059d 	muleq	r0, sp, r5
    a8e0:	00003ef9 	strdeq	r3, [r0], -r9
    a8e4:	00003ef7 	strdeq	r3, [r0], -r7
    a8e8:	0019e412 	andseq	lr, r9, r2, lsl r4
    a8ec:	02750100 	rsbseq	r0, r5, #0, 2
    a8f0:	00059d12 	andeq	r9, r5, r2, lsl sp
    a8f4:	003f1600 	eorseq	r1, pc, r0, lsl #12
    a8f8:	003f0c00 	eorseq	r0, pc, r0, lsl #24
    a8fc:	1fc11200 	svcne	0x00c11200
    a900:	76010000 	strvc	r0, [r1], -r0
    a904:	059d1202 	ldreq	r1, [sp, #514]	; 0x202
    a908:	3f590000 	svccc	0x00590000
    a90c:	3f570000 	svccc	0x00570000
    a910:	35120000 	ldrcc	r0, [r2, #-0]
    a914:	01000020 	tsteq	r0, r0, lsr #32
    a918:	a8110277 	ldmdage	r1, {r0, r1, r2, r4, r5, r6, r9}
    a91c:	70000000 	andvc	r0, r0, r0
    a920:	6c00003f 	stcvs	0, cr0, [r0], {63}	; 0x3f
    a924:	1300003f 	movwne	r0, #63	; 0x3f
    a928:	00000328 	andeq	r0, r0, r8, lsr #6
    a92c:	00000902 	andeq	r0, r0, r2, lsl #18
    a930:	000eee12 	andeq	lr, lr, r2, lsl lr
    a934:	02a80100 	adceq	r0, r8, #0, 2
    a938:	00009705 	andeq	r9, r0, r5, lsl #14
    a93c:	003f9600 	eorseq	r9, pc, r0, lsl #12
    a940:	003f8e00 	eorseq	r8, pc, r0, lsl #28
    a944:	0f1b1400 	svceq	0x001b1400
    a948:	216a0000 	cmncs	sl, r0
    a94c:	00021000 	andeq	r1, r2, r0
    a950:	1000216a 	andne	r2, r0, sl, ror #2
    a954:	10002170 	andne	r2, r0, r0, ror r1
    a958:	0502a801 	streq	sl, [r2, #-2049]	; 0xfffff7ff
    a95c:	000007c6 	andeq	r0, r0, r6, asr #15
    a960:	000f2e15 	andeq	r2, pc, r5, lsl lr	; <UNPREDICTABLE>
    a964:	003fd000 	eorseq	sp, pc, r0
    a968:	003fca00 	eorseq	ip, pc, r0, lsl #20
    a96c:	0f641600 	svceq	0x00641600
    a970:	216a0000 	cmncs	sl, r0
    a974:	00051000 	andeq	r1, r5, r0
    a978:	1000216a 	andne	r2, r0, sl, ror #2
    a97c:	1000216e 	andne	r2, r0, lr, ror #2
    a980:	13025602 	movwne	r5, #9730	; 0x2602
    a984:	000f7715 	andeq	r7, pc, r5, lsl r7	; <UNPREDICTABLE>
    a988:	003ffb00 	eorseq	pc, pc, r0, lsl #22
    a98c:	003ff900 	eorseq	pc, pc, r0, lsl #18
    a990:	14000000 	strne	r0, [r0], #-0
    a994:	00000f3c 	andeq	r0, r0, ip, lsr pc
    a998:	1000217a 	andne	r2, r0, sl, ror r1
    a99c:	217a0001 	cmncs	sl, r1
    a9a0:	217e1000 	cmncs	lr, r0
    a9a4:	a8011000 	stmdage	r1, {ip}
    a9a8:	07ef0502 	strbeq	r0, [pc, r2, lsl #10]!
    a9ac:	4b170000 	blmi	5ca9b4 <__RAM_SIZE+0x4ca9b4>
    a9b0:	1000000f 	andne	r0, r0, pc
    a9b4:	0e000040 	cdpeq	0, 0, cr0, cr0, cr0, {2}
    a9b8:	00000040 	andeq	r0, r0, r0, asr #32
    a9bc:	000f3c14 	andeq	r3, pc, r4, lsl ip	; <UNPREDICTABLE>
    a9c0:	0021de00 	eoreq	sp, r1, r0, lsl #28
    a9c4:	de000110 	fltles	f0, r0
    a9c8:	e2100021 	ands	r0, r0, #33	; 0x21
    a9cc:	01100021 	tsteq	r0, r1, lsr #32
    a9d0:	180502a8 	stmdane	r5, {r3, r5, r7, r9}
    a9d4:	17000008 	strne	r0, [r0, -r8]
    a9d8:	00000f4b 	andeq	r0, r0, fp, asr #30
    a9dc:	00004025 	andeq	r4, r0, r5, lsr #32
    a9e0:	00004023 	andeq	r4, r0, r3, lsr #32
    a9e4:	0f1b1400 	svceq	0x001b1400
    a9e8:	21e80000 	mvncs	r0, r0
    a9ec:	00011000 	andeq	r1, r1, r0
    a9f0:	100021e8 	andne	r2, r0, r8, ror #3
    a9f4:	100021ee 	andne	r2, r0, lr, ror #3
    a9f8:	0502a801 	streq	sl, [r2, #-2049]	; 0xfffff7ff
    a9fc:	00000866 	andeq	r0, r0, r6, ror #16
    aa00:	000f2e15 	andeq	r2, pc, r5, lsl lr	; <UNPREDICTABLE>
    aa04:	00403a00 	subeq	r3, r0, r0, lsl #20
    aa08:	00403800 	subeq	r3, r0, r0, lsl #16
    aa0c:	0f641600 	svceq	0x00641600
    aa10:	21e80000 	mvncs	r0, r0
    aa14:	00041000 	andeq	r1, r4, r0
    aa18:	100021e8 	andne	r2, r0, r8, ror #3
    aa1c:	100021ec 	andne	r2, r0, ip, ror #3
    aa20:	13025602 	movwne	r5, #9730	; 0x2602
    aa24:	000f7715 	andeq	r7, pc, r5, lsl r7	; <UNPREDICTABLE>
    aa28:	00404f00 	subeq	r4, r0, r0, lsl #30
    aa2c:	00404d00 	subeq	r4, r0, r0, lsl #26
    aa30:	14000000 	strne	r0, [r0], #-0
    aa34:	00000f3c 	andeq	r0, r0, ip, lsr pc
    aa38:	100021fe 	strdne	r2, [r0], -lr
    aa3c:	21fe0001 	mvnscs	r0, r1
    aa40:	22021000 	andcs	r1, r2, #0
    aa44:	a8011000 	stmdage	r1, {ip}
    aa48:	088f0502 	stmeq	pc, {r1, r8, sl}	; <UNPREDICTABLE>
    aa4c:	4b170000 	blmi	5caa54 <__RAM_SIZE+0x4caa54>
    aa50:	6400000f 	strvs	r0, [r0], #-15
    aa54:	62000040 	andvs	r0, r0, #64	; 0x40
    aa58:	00000040 	andeq	r0, r0, r0, asr #32
    aa5c:	000f1b14 	andeq	r1, pc, r4, lsl fp	; <UNPREDICTABLE>
    aa60:	00220800 	eoreq	r0, r2, r0, lsl #16
    aa64:	08000110 	stmdaeq	r0, {r4, r8}
    aa68:	10100022 	andsne	r0, r0, r2, lsr #32
    aa6c:	01100022 	tsteq	r0, r2, lsr #32
    aa70:	dd0502a8 	sfmle	f0, 4, [r5, #-672]	; 0xfffffd60
    aa74:	15000008 	strne	r0, [r0, #-8]
    aa78:	00000f2e 	andeq	r0, r0, lr, lsr #30
    aa7c:	00004079 	andeq	r4, r0, r9, ror r0
    aa80:	00004077 	andeq	r4, r0, r7, ror r0
    aa84:	000f6416 	andeq	r6, pc, r6, lsl r4	; <UNPREDICTABLE>
    aa88:	00220800 	eoreq	r0, r2, r0, lsl #16
    aa8c:	08000410 	stmdaeq	r0, {r4, sl}
    aa90:	0c100022 	ldceq	0, cr0, [r0], {34}	; 0x22
    aa94:	02100022 	andseq	r0, r0, #34	; 0x22
    aa98:	15130256 	ldrne	r0, [r3, #-598]	; 0xfffffdaa
    aa9c:	00000f77 	andeq	r0, r0, r7, ror pc
    aaa0:	0000408e 	andeq	r4, r0, lr, lsl #1
    aaa4:	0000408c 	andeq	r4, r0, ip, lsl #1
    aaa8:	e8180000 	ldmda	r8, {}	; <UNPREDICTABLE>
    aaac:	a6100021 	ldrge	r0, [r0], -r1, lsr #32
    aab0:	f100000f 	cps	#15
    aab4:	19000008 	stmdbne	r0, {r3}
    aab8:	74025001 	strvc	r5, [r2], #-1
    aabc:	081a0000 	ldmdaeq	sl, {}	; <UNPREDICTABLE>
    aac0:	b5100022 	ldrlt	r0, [r0, #-34]	; 0xffffffde
    aac4:	1900000f 	stmdbne	r0, {r0, r1, r2, r3}
    aac8:	74025001 	strvc	r5, [r2], #-1
    aacc:	13000000 	movwne	r0, #0
    aad0:	00000340 	andeq	r0, r0, r0, asr #6
    aad4:	00000aaa 	andeq	r0, r0, sl, lsr #21
    aad8:	000eee12 	andeq	lr, lr, r2, lsl lr
    aadc:	036b0100 	cmneq	fp, #0, 2
    aae0:	0000971d 	andeq	r9, r0, sp, lsl r7
    aae4:	0040a900 	subeq	sl, r0, r0, lsl #18
    aae8:	0040a100 	subeq	sl, r0, r0, lsl #2
    aaec:	0f1b1400 	svceq	0x001b1400
    aaf0:	229e0000 	addscs	r0, lr, #0
    aaf4:	00031000 	andeq	r1, r3, r0
    aaf8:	1000229e 	mulne	r0, lr, r2
    aafc:	100022a4 	andne	r2, r0, r4, lsr #5
    ab00:	1d036b01 	vstrne	d6, [r3, #-4]
    ab04:	0000096e 	andeq	r0, r0, lr, ror #18
    ab08:	000f2e15 	andeq	r2, pc, r5, lsl lr	; <UNPREDICTABLE>
    ab0c:	0040e300 	subeq	lr, r0, r0, lsl #6
    ab10:	0040dd00 	subeq	sp, r0, r0, lsl #26
    ab14:	0f641600 	svceq	0x00641600
    ab18:	229e0000 	addscs	r0, lr, #0
    ab1c:	00061000 	andeq	r1, r6, r0
    ab20:	1000229e 	mulne	r0, lr, r2
    ab24:	100022a2 	andne	r2, r0, r2, lsr #5
    ab28:	13025602 	movwne	r5, #9730	; 0x2602
    ab2c:	000f7715 	andeq	r7, pc, r5, lsl r7	; <UNPREDICTABLE>
    ab30:	00410e00 	subeq	r0, r1, r0, lsl #28
    ab34:	00410c00 	subeq	r0, r1, r0, lsl #24
    ab38:	14000000 	strne	r0, [r0], #-0
    ab3c:	00000f3c 	andeq	r0, r0, ip, lsr pc
    ab40:	100022ae 	andne	r2, r0, lr, lsr #5
    ab44:	22ae0001 	adccs	r0, lr, #1
    ab48:	22b21000 	adcscs	r1, r2, #0
    ab4c:	6b011000 	blvs	4eb54 <SYSTICK_CYCLES+0x25b15>
    ab50:	09971d03 	ldmibeq	r7, {r0, r1, r8, sl, fp, ip}
    ab54:	4b170000 	blmi	5cab5c <__RAM_SIZE+0x4cab5c>
    ab58:	2300000f 	movwcs	r0, #15
    ab5c:	21000041 	tstcs	r0, r1, asr #32
    ab60:	00000041 	andeq	r0, r0, r1, asr #32
    ab64:	000f3c14 	andeq	r3, pc, r4, lsl ip	; <UNPREDICTABLE>
    ab68:	00233400 	eoreq	r3, r3, r0, lsl #8
    ab6c:	34000110 	strcc	r0, [r0], #-272	; 0xfffffef0
    ab70:	38100023 	ldmdacc	r0, {r0, r1, r5}
    ab74:	01100023 	tsteq	r0, r3, lsr #32
    ab78:	c01d036b 	andsgt	r0, sp, fp, ror #6
    ab7c:	17000009 	strne	r0, [r0, -r9]
    ab80:	00000f4b 	andeq	r0, r0, fp, asr #30
    ab84:	00004138 	andeq	r4, r0, r8, lsr r1
    ab88:	00004136 	andeq	r4, r0, r6, lsr r1
    ab8c:	0f1b1400 	svceq	0x001b1400
    ab90:	233e0000 	teqcs	lr, #0
    ab94:	00011000 	andeq	r1, r1, r0
    ab98:	1000233e 	andne	r2, r0, lr, lsr r3
    ab9c:	10002344 	andne	r2, r0, r4, asr #6
    aba0:	1d036b01 	vstrne	d6, [r3, #-4]
    aba4:	00000a0e 	andeq	r0, r0, lr, lsl #20
    aba8:	000f2e15 	andeq	r2, pc, r5, lsl lr	; <UNPREDICTABLE>
    abac:	00414d00 	subeq	r4, r1, r0, lsl #26
    abb0:	00414b00 	subeq	r4, r1, r0, lsl #22
    abb4:	0f641600 	svceq	0x00641600
    abb8:	233e0000 	teqcs	lr, #0
    abbc:	00041000 	andeq	r1, r4, r0
    abc0:	1000233e 	andne	r2, r0, lr, lsr r3
    abc4:	10002342 	andne	r2, r0, r2, asr #6
    abc8:	13025602 	movwne	r5, #9730	; 0x2602
    abcc:	000f7715 	andeq	r7, pc, r5, lsl r7	; <UNPREDICTABLE>
    abd0:	00416200 	subeq	r6, r1, r0, lsl #4
    abd4:	00416000 	subeq	r6, r1, r0
    abd8:	14000000 	strne	r0, [r0], #-0
    abdc:	00000f3c 	andeq	r0, r0, ip, lsr pc
    abe0:	10002354 	andne	r2, r0, r4, asr r3
    abe4:	23540001 	cmpcs	r4, #1
    abe8:	23581000 	cmpcs	r8, #0
    abec:	6b011000 	blvs	4ebf4 <SYSTICK_CYCLES+0x25bb5>
    abf0:	0a371d03 	beq	dd2004 <__RAM_SIZE+0xcd2004>
    abf4:	4b170000 	blmi	5cabfc <__RAM_SIZE+0x4cabfc>
    abf8:	7700000f 	strvc	r0, [r0, -pc]
    abfc:	75000041 	strvc	r0, [r0, #-65]	; 0xffffffbf
    ac00:	00000041 	andeq	r0, r0, r1, asr #32
    ac04:	000f1b14 	andeq	r1, pc, r4, lsl fp	; <UNPREDICTABLE>
    ac08:	00235e00 	eoreq	r5, r3, r0, lsl #28
    ac0c:	5e000110 	fltpls	f0, r0
    ac10:	66100023 	ldrvs	r0, [r0], -r3, lsr #32
    ac14:	01100023 	tsteq	r0, r3, lsr #32
    ac18:	851d036b 	ldrhi	r0, [sp, #-875]	; 0xfffffc95
    ac1c:	1500000a 	strne	r0, [r0, #-10]
    ac20:	00000f2e 	andeq	r0, r0, lr, lsr #30
    ac24:	0000418c 	andeq	r4, r0, ip, lsl #3
    ac28:	0000418a 	andeq	r4, r0, sl, lsl #3
    ac2c:	000f6416 	andeq	r6, pc, r6, lsl r4	; <UNPREDICTABLE>
    ac30:	00235e00 	eoreq	r5, r3, r0, lsl #28
    ac34:	5e000410 	cfmvdlrpl	mvd0, r0
    ac38:	62100023 	andsvs	r0, r0, #35	; 0x23
    ac3c:	02100023 	andseq	r0, r0, #35	; 0x23
    ac40:	15130256 	ldrne	r0, [r3, #-598]	; 0xfffffdaa
    ac44:	00000f77 	andeq	r0, r0, r7, ror pc
    ac48:	000041a1 	andeq	r4, r0, r1, lsr #3
    ac4c:	0000419f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
    ac50:	3e180000 	cdpcc	0, 1, cr0, cr8, cr0, {0}
    ac54:	a6100023 	ldrge	r0, [r0], -r3, lsr #32
    ac58:	9900000f 	stmdbls	r0, {r0, r1, r2, r3}
    ac5c:	1900000a 	stmdbne	r0, {r1, r3}
    ac60:	74025001 	strvc	r5, [r2], #-1
    ac64:	5e1a0000 	cdppl	0, 1, cr0, cr10, cr0, {0}
    ac68:	b5100023 	ldrlt	r0, [r0, #-35]	; 0xffffffdd
    ac6c:	1900000f 	stmdbne	r0, {r0, r1, r2, r3}
    ac70:	74025001 	strvc	r5, [r2], #-1
    ac74:	13000000 	movwne	r0, #0
    ac78:	00000358 	andeq	r0, r0, r8, asr r3
    ac7c:	00000c52 	andeq	r0, r0, r2, asr ip
    ac80:	000eee12 	andeq	lr, lr, r2, lsl lr
    ac84:	03d70100 	bicseq	r0, r7, #0, 2
    ac88:	00009709 	andeq	r9, r0, r9, lsl #14
    ac8c:	0041bc00 	subeq	fp, r1, r0, lsl #24
    ac90:	0041b400 	subeq	fp, r1, r0, lsl #8
    ac94:	0f1b1400 	svceq	0x001b1400
    ac98:	23ac0000 			; <UNDEFINED> instruction: 0x23ac0000
    ac9c:	00031000 	andeq	r1, r3, r0
    aca0:	100023ac 	andne	r2, r0, ip, lsr #7
    aca4:	100023b2 			; <UNDEFINED> instruction: 0x100023b2
    aca8:	0903d701 	stmdbeq	r3, {r0, r8, r9, sl, ip, lr, pc}
    acac:	00000b16 	andeq	r0, r0, r6, lsl fp
    acb0:	000f2e15 	andeq	r2, pc, r5, lsl lr	; <UNPREDICTABLE>
    acb4:	0041f600 	subeq	pc, r1, r0, lsl #12
    acb8:	0041f000 	subeq	pc, r1, r0
    acbc:	0f641600 	svceq	0x00641600
    acc0:	23ac0000 			; <UNDEFINED> instruction: 0x23ac0000
    acc4:	00061000 	andeq	r1, r6, r0
    acc8:	100023ac 	andne	r2, r0, ip, lsr #7
    accc:	100023b0 			; <UNDEFINED> instruction: 0x100023b0
    acd0:	13025602 	movwne	r5, #9730	; 0x2602
    acd4:	000f7715 	andeq	r7, pc, r5, lsl r7	; <UNPREDICTABLE>
    acd8:	00422100 	subeq	r2, r2, r0, lsl #2
    acdc:	00421f00 	subeq	r1, r2, r0, lsl #30
    ace0:	14000000 	strne	r0, [r0], #-0
    ace4:	00000f3c 	andeq	r0, r0, ip, lsr pc
    ace8:	100023bc 			; <UNDEFINED> instruction: 0x100023bc
    acec:	23bc0001 			; <UNDEFINED> instruction: 0x23bc0001
    acf0:	23c01000 	biccs	r1, r0, #0
    acf4:	d7011000 	strle	r1, [r1, -r0]
    acf8:	0b3f0903 	bleq	fcd10c <__RAM_SIZE+0xecd10c>
    acfc:	4b170000 	blmi	5cad04 <__RAM_SIZE+0x4cad04>
    ad00:	3600000f 	strcc	r0, [r0], -pc
    ad04:	34000042 	strcc	r0, [r0], #-66	; 0xffffffbe
    ad08:	00000042 	andeq	r0, r0, r2, asr #32
    ad0c:	000f3c14 	andeq	r3, pc, r4, lsl ip	; <UNPREDICTABLE>
    ad10:	00244800 	eoreq	r4, r4, r0, lsl #16
    ad14:	48000110 	stmdami	r0, {r4, r8}
    ad18:	4c100024 	ldcmi	0, cr0, [r0], {36}	; 0x24
    ad1c:	01100024 	tsteq	r0, r4, lsr #32
    ad20:	680903d7 	stmdavs	r9, {r0, r1, r2, r4, r6, r7, r8, r9}
    ad24:	1700000b 	strne	r0, [r0, -fp]
    ad28:	00000f4b 	andeq	r0, r0, fp, asr #30
    ad2c:	0000424b 	andeq	r4, r0, fp, asr #4
    ad30:	00004249 	andeq	r4, r0, r9, asr #4
    ad34:	0f1b1400 	svceq	0x001b1400
    ad38:	24520000 	ldrbcs	r0, [r2], #-0
    ad3c:	00011000 	andeq	r1, r1, r0
    ad40:	10002452 	andne	r2, r0, r2, asr r4
    ad44:	10002458 	andne	r2, r0, r8, asr r4
    ad48:	0903d701 	stmdbeq	r3, {r0, r8, r9, sl, ip, lr, pc}
    ad4c:	00000bb6 			; <UNDEFINED> instruction: 0x00000bb6
    ad50:	000f2e15 	andeq	r2, pc, r5, lsl lr	; <UNPREDICTABLE>
    ad54:	00426000 	subeq	r6, r2, r0
    ad58:	00425e00 	subeq	r5, r2, r0, lsl #28
    ad5c:	0f641600 	svceq	0x00641600
    ad60:	24520000 	ldrbcs	r0, [r2], #-0
    ad64:	00041000 	andeq	r1, r4, r0
    ad68:	10002452 	andne	r2, r0, r2, asr r4
    ad6c:	10002456 	andne	r2, r0, r6, asr r4
    ad70:	13025602 	movwne	r5, #9730	; 0x2602
    ad74:	000f7715 	andeq	r7, pc, r5, lsl r7	; <UNPREDICTABLE>
    ad78:	00427500 	subeq	r7, r2, r0, lsl #10
    ad7c:	00427300 	subeq	r7, r2, r0, lsl #6
    ad80:	14000000 	strne	r0, [r0], #-0
    ad84:	00000f3c 	andeq	r0, r0, ip, lsr pc
    ad88:	10002468 	andne	r2, r0, r8, ror #8
    ad8c:	24680001 	strbtcs	r0, [r8], #-1
    ad90:	246c1000 	strbtcs	r1, [ip], #-0
    ad94:	d7011000 	strle	r1, [r1, -r0]
    ad98:	0bdf0903 	bleq	ff7cd1ac <__RAM_segment_used_end__+0xc76cd1ac>
    ad9c:	4b170000 	blmi	5cada4 <__RAM_SIZE+0x4cada4>
    ada0:	8a00000f 	bhi	ade4 <_Min_Stack_Size+0x9de4>
    ada4:	88000042 	stmdahi	r0, {r1, r6}
    ada8:	00000042 	andeq	r0, r0, r2, asr #32
    adac:	000f1b14 	andeq	r1, pc, r4, lsl fp	; <UNPREDICTABLE>
    adb0:	00247200 	eoreq	r7, r4, r0, lsl #4
    adb4:	72000110 	andvc	r0, r0, #16, 2
    adb8:	7a100024 	bvc	40ae50 <__RAM_SIZE+0x30ae50>
    adbc:	01100024 	tsteq	r0, r4, lsr #32
    adc0:	2d0903d7 	stccs	3, cr0, [r9, #-860]	; 0xfffffca4
    adc4:	1500000c 	strne	r0, [r0, #-12]
    adc8:	00000f2e 	andeq	r0, r0, lr, lsr #30
    adcc:	0000429f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
    add0:	0000429d 	muleq	r0, sp, r2
    add4:	000f6416 	andeq	r6, pc, r6, lsl r4	; <UNPREDICTABLE>
    add8:	00247200 	eoreq	r7, r4, r0, lsl #4
    addc:	72000410 	andvc	r0, r0, #16, 8	; 0x10000000
    ade0:	76100024 	ldrvc	r0, [r0], -r4, lsr #32
    ade4:	02100024 	andseq	r0, r0, #36	; 0x24
    ade8:	15130256 	ldrne	r0, [r3, #-598]	; 0xfffffdaa
    adec:	00000f77 	andeq	r0, r0, r7, ror pc
    adf0:	000042b4 			; <UNDEFINED> instruction: 0x000042b4
    adf4:	000042b2 			; <UNDEFINED> instruction: 0x000042b2
    adf8:	52180000 	andspl	r0, r8, #0
    adfc:	a6100024 	ldrge	r0, [r0], -r4, lsr #32
    ae00:	4100000f 	tstmi	r0, pc
    ae04:	1900000c 	stmdbne	r0, {r2, r3}
    ae08:	74025001 	strvc	r5, [r2], #-1
    ae0c:	721a0000 	andsvc	r0, sl, #0
    ae10:	b5100024 	ldrlt	r0, [r0, #-36]	; 0xffffffdc
    ae14:	1900000f 	stmdbne	r0, {r0, r1, r2, r3}
    ae18:	74025001 	strvc	r5, [r2], #-1
    ae1c:	14000000 	strne	r0, [r0], #-0
    ae20:	00000f85 	andeq	r0, r0, r5, lsl #31
    ae24:	10002250 	andne	r2, r0, r0, asr r2
    ae28:	22500001 	subscs	r0, r0, #1
    ae2c:	22541000 	subscs	r1, r4, #0
    ae30:	1a011000 	bne	4ee38 <SYSTICK_CYCLES+0x25df9>
    ae34:	0c7b2103 	ldfeqe	f2, [fp], #-12
    ae38:	98150000 	ldmdals	r5, {}	; <UNPREDICTABLE>
    ae3c:	c900000f 	stmdbgt	r0, {r0, r1, r2, r3}
    ae40:	c7000042 	strgt	r0, [r0, -r2, asr #32]
    ae44:	00000042 	andeq	r0, r0, r2, asr #32
    ae48:	000efe14 	andeq	pc, lr, r4, lsl lr	; <UNPREDICTABLE>
    ae4c:	0022c400 	eoreq	ip, r2, r0, lsl #8
    ae50:	c4000110 	strgt	r0, [r0], #-272	; 0xfffffef0
    ae54:	e4100022 	ldr	r0, [r0], #-34	; 0xffffffde
    ae58:	01100022 	tsteq	r0, r2, lsr #32
    ae5c:	3221037b 	eorcc	r0, r1, #-335544319	; 0xec000001
    ae60:	1500000d 	strne	r0, [r0, #-13]
    ae64:	00000f0d 	andeq	r0, r0, sp, lsl #30
    ae68:	000042de 	ldrdeq	r4, [r0], -lr
    ae6c:	000042dc 	ldrdeq	r4, [r0], -ip
    ae70:	000f8514 	andeq	r8, pc, r4, lsl r5	; <UNPREDICTABLE>
    ae74:	0022d000 	eoreq	sp, r2, r0
    ae78:	d0000110 	andle	r0, r0, r0, lsl r1
    ae7c:	d4100022 	ldrle	r0, [r0], #-34	; 0xffffffde
    ae80:	02100022 	andseq	r0, r0, #34	; 0x22
    ae84:	cc090266 	sfmgt	f0, 4, [r9], {102}	; 0x66
    ae88:	1500000c 	strne	r0, [r0, #-12]
    ae8c:	00000f98 	muleq	r0, r8, pc	; <UNPREDICTABLE>
    ae90:	000042f3 	strdeq	r4, [r0], -r3
    ae94:	000042f1 	strdeq	r4, [r0], -r1
    ae98:	0f641400 	svceq	0x00641400
    ae9c:	22da0000 	sbcscs	r0, sl, #0
    aea0:	00011000 	andeq	r1, r1, r0
    aea4:	100022da 	ldrdne	r2, [r0], -sl
    aea8:	100022de 	ldrdne	r2, [r0], -lr
    aeac:	1a026802 	bne	a4ebc <SYSTICK_CYCLES+0x7be7d>
    aeb0:	00000cf5 	strdeq	r0, [r0], -r5
    aeb4:	000f7715 	andeq	r7, pc, r5, lsl r7	; <UNPREDICTABLE>
    aeb8:	00430800 	subeq	r0, r3, r0, lsl #16
    aebc:	00430600 	subeq	r0, r3, r0, lsl #12
    aec0:	591b0000 	ldmdbpl	fp, {}	; <UNPREDICTABLE>
    aec4:	de00000f 	cdple	0, 0, cr0, cr0, cr15, {0}
    aec8:	03100022 	tsteq	r0, #34	; 0x22
    aecc:	0022de00 	eoreq	sp, r2, r0, lsl #28
    aed0:	0022e010 	eoreq	lr, r2, r0, lsl r0
    aed4:	026c0210 	rsbeq	r0, ip, #16, 4
    aed8:	0f3c1609 	svceq	0x003c1609
    aedc:	22e00000 	rsccs	r0, r0, #0
    aee0:	00011000 	andeq	r1, r1, r0
    aee4:	100022e0 	andne	r2, r0, r0, ror #5
    aee8:	100022e4 	andne	r2, r0, r4, ror #5
    aeec:	09026e02 	stmdbeq	r2, {r1, r9, sl, fp, sp, lr}
    aef0:	000f4b17 	andeq	r4, pc, r7, lsl fp	; <UNPREDICTABLE>
    aef4:	00431d00 	subeq	r1, r3, r0, lsl #26
    aef8:	00431b00 	subeq	r1, r3, r0, lsl #22
    aefc:	14000000 	strne	r0, [r0], #-0
    af00:	00000f85 	andeq	r0, r0, r5, lsl #31
    af04:	100022ec 	andne	r2, r0, ip, ror #5
    af08:	22ec0001 	rsccs	r0, ip, #1
    af0c:	22f01000 	rscscs	r1, r0, #0
    af10:	26011000 	strcs	r1, [r1], -r0
    af14:	0d5b2503 	cfldr64eq	mvdx2, [fp, #-12]
    af18:	98150000 	ldmdals	r5, {}	; <UNPREDICTABLE>
    af1c:	3200000f 	andcc	r0, r0, #15
    af20:	30000043 	andcc	r0, r0, r3, asr #32
    af24:	00000043 	andeq	r0, r0, r3, asr #32
    af28:	000efe14 	andeq	pc, lr, r4, lsl lr	; <UNPREDICTABLE>
    af2c:	0023ce00 	eoreq	ip, r3, r0, lsl #28
    af30:	ce000110 	fltgts	f0, r0
    af34:	ea100023 	b	40afc8 <__RAM_SIZE+0x30afc8>
    af38:	01100023 	tsteq	r0, r3, lsr #32
    af3c:	120d03e7 	andne	r0, sp, #-1677721597	; 0x9c000003
    af40:	1500000e 	strne	r0, [r0, #-14]
    af44:	00000f0d 	andeq	r0, r0, sp, lsl #30
    af48:	00004347 	andeq	r4, r0, r7, asr #6
    af4c:	00004345 	andeq	r4, r0, r5, asr #6
    af50:	000f8514 	andeq	r8, pc, r4, lsl r5	; <UNPREDICTABLE>
    af54:	0023da00 	eoreq	sp, r3, r0, lsl #20
    af58:	da000110 	ble	b3a0 <_Min_Stack_Size+0xa3a0>
    af5c:	de100023 	cdple	0, 1, cr0, cr0, cr3, {1}
    af60:	02100023 	andseq	r0, r0, #35	; 0x23
    af64:	ac090266 	sfmge	f0, 4, [r9], {102}	; 0x66
    af68:	1500000d 	strne	r0, [r0, #-13]
    af6c:	00000f98 	muleq	r0, r8, pc	; <UNPREDICTABLE>
    af70:	0000435c 	andeq	r4, r0, ip, asr r3
    af74:	0000435a 	andeq	r4, r0, sl, asr r3
    af78:	0f641400 	svceq	0x00641400
    af7c:	23e00000 	mvncs	r0, #0
    af80:	00011000 	andeq	r1, r1, r0
    af84:	100023e0 	andne	r2, r0, r0, ror #7
    af88:	100023e4 	andne	r2, r0, r4, ror #7
    af8c:	1a026802 	bne	a4f9c <SYSTICK_CYCLES+0x7bf5d>
    af90:	00000dd5 	ldrdeq	r0, [r0], -r5
    af94:	000f7715 	andeq	r7, pc, r5, lsl r7	; <UNPREDICTABLE>
    af98:	00437100 	subeq	r7, r3, r0, lsl #2
    af9c:	00436f00 	subeq	r6, r3, r0, lsl #30
    afa0:	591b0000 	ldmdbpl	fp, {}	; <UNPREDICTABLE>
    afa4:	e400000f 	str	r0, [r0], #-15
    afa8:	03100023 	tsteq	r0, #35	; 0x23
    afac:	0023e400 	eoreq	lr, r3, r0, lsl #8
    afb0:	0023e610 	eoreq	lr, r3, r0, lsl r6
    afb4:	026c0210 	rsbeq	r0, ip, #16, 4
    afb8:	0f3c1609 	svceq	0x003c1609
    afbc:	23e60000 	mvncs	r0, #0
    afc0:	00011000 	andeq	r1, r1, r0
    afc4:	100023e6 	andne	r2, r0, r6, ror #7
    afc8:	100023ea 	andne	r2, r0, sl, ror #7
    afcc:	09026e02 	stmdbeq	r2, {r1, r9, sl, fp, sp, lr}
    afd0:	000f4b17 	andeq	r4, pc, r7, lsl fp	; <UNPREDICTABLE>
    afd4:	00438600 	subeq	r8, r3, r0, lsl #12
    afd8:	00438400 	subeq	r8, r3, r0, lsl #8
    afdc:	1a000000 	bne	afe4 <_Min_Stack_Size+0x9fe4>
    afe0:	1000216a 	andne	r2, r0, sl, ror #2
    afe4:	00000fc4 	andeq	r0, r0, r4, asr #31
    afe8:	03500119 	cmpeq	r0, #1073741830	; 0x40000006
    afec:	0000cc74 	andeq	ip, r0, r4, ror ip
    aff0:	60011c00 	andvs	r1, r1, r0, lsl #24
    aff4:	01000020 	tsteq	r0, r0, lsr #32
    aff8:	00010750 	andeq	r0, r1, r0, asr r7
    affc:	00000000 	andeq	r0, r0, r0
    b000:	99000000 	stmdbls	r0, {}	; <UNPREDICTABLE>
    b004:	01000043 	tsteq	r0, r3, asr #32
    b008:	00000efe 	strdeq	r0, [r0], -lr
    b00c:	0019791d 	andseq	r7, r9, sp, lsl r9
    b010:	2b500100 	blcs	140b418 <__RAM_SIZE+0x130b418>
    b014:	0000059d 	muleq	r0, sp, r5
    b018:	000043bd 			; <UNDEFINED> instruction: 0x000043bd
    b01c:	000043b9 			; <UNDEFINED> instruction: 0x000043b9
    b020:	000eee12 	andeq	lr, lr, r2, lsl lr
    b024:	021f0100 	andseq	r0, pc, #0, 2
    b028:	00009701 	andeq	r9, r0, r1, lsl #14
    b02c:	0043e000 	subeq	lr, r3, r0
    b030:	0043de00 	subeq	sp, r3, r0, lsl #28
    b034:	02501200 	subseq	r1, r0, #0, 4
    b038:	23010000 	movwcs	r0, #4096	; 0x1000
    b03c:	00971102 	addseq	r1, r7, r2, lsl #2
    b040:	43f70000 	mvnsmi	r0, #0
    b044:	43f30000 	mvnsmi	r0, #0
    b048:	1b140000 	blne	50b050 <__RAM_SIZE+0x40b050>
    b04c:	0000000f 	andeq	r0, r0, pc
    b050:	03000000 	movweq	r0, #0
	...
    b05c:	02270100 	eoreq	r0, r7, #0, 2
    b060:	000ecb05 	andeq	ip, lr, r5, lsl #22
    b064:	0f2e1500 	svceq	0x002e1500
    b068:	44180000 	ldrmi	r0, [r8], #-0
    b06c:	44160000 	ldrmi	r0, [r6], #-0
    b070:	64160000 	ldrvs	r0, [r6], #-0
    b074:	0000000f 	andeq	r0, r0, pc
    b078:	06000000 	streq	r0, [r0], -r0
	...
    b084:	02560200 	subseq	r0, r6, #0, 4
    b088:	0f771513 	svceq	0x00771513
    b08c:	442d0000 	strtmi	r0, [sp], #-0
    b090:	442b0000 	strtmi	r0, [fp], #-0
    b094:	00000000 	andeq	r0, r0, r0
    b098:	000f3c14 	andeq	r3, pc, r4, lsl ip	; <UNPREDICTABLE>
    b09c:	00000000 	andeq	r0, r0, r0
    b0a0:	00000100 	andeq	r0, r0, r0, lsl #2
    b0a4:	00000000 	andeq	r0, r0, r0
    b0a8:	01000000 	mrseq	r0, (UNDEF: 0)
    b0ac:	f4050268 	vst1.16	{d0-d3}, [r5 :128], r8
    b0b0:	1700000e 	strne	r0, [r0, -lr]
    b0b4:	00000f4b 	andeq	r0, r0, fp, asr #30
    b0b8:	00004442 	andeq	r4, r0, r2, asr #8
    b0bc:	00004440 	andeq	r4, r0, r0, asr #8
    b0c0:	00001e00 	andeq	r1, r0, r0, lsl #28
    b0c4:	06960000 	ldreq	r0, [r6], r0
    b0c8:	1f000000 	svcne	0x00000000
    b0cc:	00001fd0 	ldrdeq	r1, [r0], -r0
    b0d0:	37026002 	strcc	r6, [r2, -r2]
    b0d4:	0f1b0301 	svceq	0x001b0301
    b0d8:	ee200000 	cdp	0, 2, cr0, cr0, cr0, {0}
    b0dc:	0200000e 	andeq	r0, r0, #14
    b0e0:	97060262 	strls	r0, [r6, -r2, ror #4]
    b0e4:	00000000 	andeq	r0, r0, r0
    b0e8:	000f2421 	andeq	r2, pc, r1, lsr #8
    b0ec:	02520200 	subseq	r0, r2, #0, 4
    b0f0:	00970137 	addseq	r0, r7, r7, lsr r1
    b0f4:	3c030000 	stccc	0, cr0, [r3], {-0}
    b0f8:	2000000f 	andcs	r0, r0, pc
    b0fc:	00000ead 	andeq	r0, r0, sp, lsr #29
    b100:	06025402 	streq	r5, [r2], -r2, lsl #8
    b104:	00000097 	muleq	r0, r7, r0
    b108:	0e991f00 	cdpeq	15, 9, cr1, cr9, cr0, {0}
    b10c:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    b110:	03013702 	movweq	r3, #5890	; 0x1702
    b114:	00000f59 	andeq	r0, r0, r9, asr pc
    b118:	000ead22 	andeq	sl, lr, r2, lsr #26
    b11c:	02490200 	subeq	r0, r9, #0, 4
    b120:	00009750 	andeq	r9, r0, r0, asr r7
    b124:	ad230000 	stcge	0, cr0, [r3, #-0]
    b128:	0200001f 	andeq	r0, r0, #31
    b12c:	01370243 	teqeq	r7, r3, asr #4
    b130:	0ec22103 	poleqs	f2, f2, f3
    b134:	32020000 	andcc	r0, r2, #0
    b138:	97013702 	strls	r3, [r1, -r2, lsl #14]
    b13c:	03000000 	movweq	r0, #0
    b140:	00000f85 	andeq	r0, r0, r5, lsl #31
    b144:	000eb120 	andeq	fp, lr, r0, lsr #2
    b148:	02340200 	eorseq	r0, r4, #0, 4
    b14c:	00009706 	andeq	r9, r0, r6, lsl #14
    b150:	66210000 	strtvs	r0, [r1], -r0
    b154:	02000019 	andeq	r0, r0, #25
    b158:	013701fa 	teqeq	r7, sl	; <illegal shifter operand>
    b15c:	00000097 	muleq	r0, r7, r0
    b160:	000fa603 	andeq	sl, pc, r3, lsl #12
    b164:	19aa2000 	stmibne	sl!, {sp}
    b168:	fc020000 	stc2	0, cr0, [r2], {-0}
    b16c:	00970601 	addseq	r0, r7, r1, lsl #12
    b170:	24000000 	strcs	r0, [r0], #-0
    b174:	1f6e0101 	svcne	0x006e0101
    b178:	1f6e0000 	svcne	0x006e0000
    b17c:	1b040000 	blne	10b184 <__RAM_SIZE+0xb184>
    b180:	01240d01 			; <UNDEFINED> instruction: 0x01240d01
    b184:	001ec501 	andseq	ip, lr, r1, lsl #10
    b188:	001ec500 	andseq	ip, lr, r0, lsl #10
    b18c:	01180400 	tsteq	r8, r0, lsl #8
    b190:	0101250d 	tsteq	r1, sp, lsl #10
    b194:	00002044 	andeq	r2, r0, r4, asr #32
    b198:	00002044 	andeq	r2, r0, r4, asr #32
    b19c:	000d4005 	andeq	r4, sp, r5
    b1a0:	00000ec1 	andeq	r0, r0, r1, asr #29
    b1a4:	1f100002 	svcne	0x00100002
    b1a8:	01040000 	mrseq	r0, (UNDEF: 4)
    b1ac:	0000003d 	andeq	r0, r0, sp, lsr r0
    b1b0:	0020f00c 	eoreq	pc, r0, ip
    b1b4:	00065c00 	andeq	r5, r6, r0, lsl #24
    b1b8:	0003b800 	andeq	fp, r3, r0, lsl #16
	...
    b1c4:	003f3800 	eorseq	r3, pc, r0, lsl #16
    b1c8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    b1cc:	00000239 	andeq	r0, r0, r9, lsr r2
    b1d0:	69050403 	stmdbvs	r5, {r0, r1, sl}
    b1d4:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    b1d8:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    b1dc:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    b1e0:	00063e04 	andeq	r3, r6, r4, lsl #28
    b1e4:	06010200 	streq	r0, [r1], -r0, lsl #4
    b1e8:	0000086d 	andeq	r0, r0, sp, ror #16
    b1ec:	6b080102 	blvs	20b5fc <__RAM_SIZE+0x10b5fc>
    b1f0:	02000008 	andeq	r0, r0, #8
    b1f4:	06cf0502 	strbeq	r0, [pc], r2, lsl #10
    b1f8:	02020000 	andeq	r0, r2, #0
    b1fc:	00093907 	andeq	r3, r9, r7, lsl #18
    b200:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    b204:	000004ed 	andeq	r0, r0, sp, ror #9
    b208:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    b20c:	02000002 	andeq	r0, r0, #2
    b210:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    b214:	04040000 	streq	r0, [r4], #-0
    b218:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    b21c:	05000008 	streq	r0, [r0, #-8]
    b220:	000008fa 	strdeq	r0, [r0], -sl
    b224:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    b228:	05000000 	streq	r0, [r0, #-0]
    b22c:	000008f9 	strdeq	r0, [r0], -r9
    b230:	4c317402 	cfldrsmi	mvf7, [r1], #-8
    b234:	05000000 	streq	r0, [r0, #-0]
    b238:	0000079a 	muleq	r0, sl, r7
    b23c:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    b240:	06000000 	streq	r0, [r0], -r0
    b244:	00000097 	muleq	r0, r7, r0
    b248:	00072c05 	andeq	r2, r7, r5, lsl #24
    b24c:	31780200 	cmncc	r8, r0, lsl #4
    b250:	00000068 	andeq	r0, r0, r8, rrx
    b254:	00053b07 	andeq	r3, r5, r7, lsl #22
    b258:	82031c00 	andhi	r1, r3, #0, 24
    b25c:	01331001 	teqeq	r3, r1
    b260:	2d080000 	stccs	0, cr0, [r8, #-0]
    b264:	03000008 	movweq	r0, #8
    b268:	a8190186 	ldmdage	r9, {r1, r2, r7, r8}
    b26c:	02000000 	andeq	r0, r0, #0
    b270:	a0080023 	andge	r0, r8, r3, lsr #32
    b274:	03000003 	movweq	r0, #3
    b278:	a8190187 	ldmdage	r9, {r0, r1, r2, r7, r8}
    b27c:	02000000 	andeq	r0, r0, #0
    b280:	3d080423 	cfstrscc	mvf0, [r8, #-140]	; 0xffffff74
    b284:	03000004 	movweq	r0, #4
    b288:	3f1b018a 	svccc	0x001b018a
    b28c:	02000001 	andeq	r0, r0, #1
    b290:	f2080823 	vadd.i8	d0, d8, d19
    b294:	03000001 	movweq	r0, #1
    b298:	a819018b 	ldmdage	r9, {r0, r1, r3, r7, r8}
    b29c:	02000000 	andeq	r0, r0, #0
    b2a0:	6f080c23 	svcvs	0x00080c23
    b2a4:	03000009 	movweq	r0, #9
    b2a8:	451a0191 	ldrmi	r0, [sl, #-401]	; 0xfffffe6f
    b2ac:	02000001 	andeq	r0, r0, #1
    b2b0:	1b081023 	blne	20f344 <__RAM_SIZE+0x10f344>
    b2b4:	03000000 	movweq	r0, #0
    b2b8:	451a0192 	ldrmi	r0, [sl, #-402]	; 0xfffffe6e
    b2bc:	02000001 	andeq	r0, r0, #1
    b2c0:	09081423 	stmdbeq	r8, {r0, r1, r5, sl, ip}
    b2c4:	03000006 	movweq	r0, #6
    b2c8:	4b1b0196 	blmi	6cb928 <__RAM_SIZE+0x5cb928>
    b2cc:	02000001 	andeq	r0, r0, #1
    b2d0:	09001823 	stmdbeq	r0, {r0, r1, r5, fp, ip}
    b2d4:	00013f01 	andeq	r3, r1, r1, lsl #30
    b2d8:	00a80a00 	adceq	r0, r8, r0, lsl #20
    b2dc:	0b000000 	bleq	b2e4 <_Min_Stack_Size+0xa2e4>
    b2e0:	00013304 	andeq	r3, r1, r4, lsl #6
    b2e4:	b4040b00 	strlt	r0, [r4], #-2816	; 0xfffff500
    b2e8:	0b000000 	bleq	b2f0 <_Min_Stack_Size+0xa2f0>
    b2ec:	00014504 	andeq	r4, r1, r4, lsl #10
    b2f0:	064a0c00 	strbeq	r0, [sl], -r0, lsl #24
    b2f4:	9b030000 	blls	cb2fc <SYSTICK_CYCLES+0xa22bd>
    b2f8:	00b40301 	adcseq	r0, r4, r1, lsl #6
    b2fc:	040b0000 	streq	r0, [fp], #-0
    b300:	0000007f 	andeq	r0, r0, pc, ror r0
    b304:	00034b07 	andeq	r4, r3, r7, lsl #22
    b308:	d603d800 	strle	sp, [r3], -r0, lsl #16
    b30c:	04891001 	streq	r1, [r9], #1
    b310:	2c080000 	stccs	0, cr0, [r8], {-0}
    b314:	03000009 	movweq	r0, #9
    b318:	a81901dd 	ldmdage	r9, {r0, r2, r3, r4, r6, r7, r8}
    b31c:	02000000 	andeq	r0, r0, #0
    b320:	9f080023 	svcls	0x00080023
    b324:	03000007 	movweq	r0, #7
    b328:	a81901de 	ldmdage	r9, {r1, r2, r3, r4, r6, r7, r8}
    b32c:	02000000 	andeq	r0, r0, #0
    b330:	bc080423 	cfstrslt	mvf0, [r8], {35}	; 0x23
    b334:	03000001 	movweq	r0, #1
    b338:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
    b33c:	02000000 	andeq	r0, r0, #0
    b340:	16080823 	strne	r0, [r8], -r3, lsr #16
    b344:	03000009 	movweq	r0, #9
    b348:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
    b34c:	02000000 	andeq	r0, r0, #0
    b350:	11080c23 	tstne	r8, r3, lsr #24
    b354:	03000004 	movweq	r0, #4
    b358:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
    b35c:	02000000 	andeq	r0, r0, #0
    b360:	5a081023 	bpl	20f3f4 <__RAM_SIZE+0x10f3f4>
    b364:	03000009 	movweq	r0, #9
    b368:	a81901e2 	ldmdage	r9, {r1, r5, r6, r7, r8}
    b36c:	02000000 	andeq	r0, r0, #0
    b370:	e2081423 	and	r1, r8, #587202560	; 0x23000000
    b374:	03000021 	movweq	r0, #33	; 0x21
    b378:	a81901e3 	ldmdage	r9, {r0, r1, r5, r6, r7, r8}
    b37c:	02000000 	andeq	r0, r0, #0
    b380:	25081823 	strcs	r1, [r8, #-2083]	; 0xfffff7dd
    b384:	03000006 	movweq	r0, #6
    b388:	a81901e4 	ldmdage	r9, {r2, r5, r6, r7, r8}
    b38c:	02000000 	andeq	r0, r0, #0
    b390:	ba081c23 	blt	212424 <__RAM_SIZE+0x112424>
    b394:	03000006 	movweq	r0, #6
    b398:	891a01e8 	ldmdbhi	sl, {r3, r5, r6, r7, r8}
    b39c:	02000004 	andeq	r0, r0, #4
    b3a0:	99082023 	stmdbls	r8, {r0, r1, r5, sp}
    b3a4:	03000001 	movweq	r0, #1
    b3a8:	891a01e9 	ldmdbhi	sl, {r0, r3, r5, r6, r7, r8}
    b3ac:	02000004 	andeq	r0, r0, #4
    b3b0:	b1082423 	tstlt	r8, r3, lsr #8
    b3b4:	03000005 	movweq	r0, #5
    b3b8:	5e1a01f1 	mrcpl	1, 0, r0, cr10, cr1, {7}
    b3bc:	02000001 	andeq	r0, r0, #1
    b3c0:	d9082823 	stmdble	r8, {r0, r1, r5, fp, sp}
    b3c4:	03000002 	movweq	r0, #2
    b3c8:	971901f2 			; <UNDEFINED> instruction: 0x971901f2
    b3cc:	02000000 	andeq	r0, r0, #0
    b3d0:	46082c23 	strmi	r2, [r8], -r3, lsr #24
    b3d4:	03000002 	movweq	r0, #2
    b3d8:	971901f3 			; <UNDEFINED> instruction: 0x971901f3
    b3dc:	02000000 	andeq	r0, r0, #0
    b3e0:	73083023 	movwvc	r3, #32803	; 0x8023
    b3e4:	03000001 	movweq	r0, #1
    b3e8:	971901f4 			; <UNDEFINED> instruction: 0x971901f4
    b3ec:	02000000 	andeq	r0, r0, #0
    b3f0:	4b083423 	blmi	218484 <__RAM_SIZE+0x118484>
    b3f4:	03000007 	movweq	r0, #7
    b3f8:	971901f5 			; <UNDEFINED> instruction: 0x971901f5
    b3fc:	02000000 	andeq	r0, r0, #0
    b400:	eb083823 	bl	219494 <__RAM_SIZE+0x119494>
    b404:	03000000 	movweq	r0, #0
    b408:	971901f6 			; <UNDEFINED> instruction: 0x971901f6
    b40c:	02000000 	andeq	r0, r0, #0
    b410:	5c083c23 	stcpl	12, cr3, [r8], {35}	; 0x23
    b414:	03000003 	movweq	r0, #3
    b418:	a01b01fb 			; <UNDEFINED> instruction: 0xa01b01fb
    b41c:	02000004 	andeq	r0, r0, #4
    b420:	52084023 	andpl	r4, r8, #35	; 0x23
    b424:	03000001 	movweq	r0, #1
    b428:	3f1b0203 	svccc	0x001b0203
    b42c:	02000001 	andeq	r0, r0, #1
    b430:	07084423 	streq	r4, [r8, -r3, lsr #8]
    b434:	03000001 	movweq	r0, #1
    b438:	a8190204 	ldmdage	r9, {r2, r9}
    b43c:	02000000 	andeq	r0, r0, #0
    b440:	3b084823 	blcc	21d4d4 <__RAM_SIZE+0x11d4d4>
    b444:	03000003 	movweq	r0, #3
    b448:	51190208 	tstpl	r9, r8, lsl #4
    b44c:	02000001 	andeq	r0, r0, #1
    b450:	ec084c23 	stc	12, cr4, [r8], {35}	; 0x23
    b454:	03000002 	movweq	r0, #2
    b458:	a01b020e 	andsge	r0, fp, lr, lsl #4
    b45c:	02000004 	andeq	r0, r0, #4
    b460:	e9086823 	stmdb	r8, {r0, r1, r5, fp, sp, lr}
    b464:	03000005 	movweq	r0, #5
    b468:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
    b46c:	02000000 	andeq	r0, r0, #0
    b470:	32086c23 	andcc	r6, r8, #8960	; 0x2300
    b474:	03000007 	movweq	r0, #7
    b478:	891a0211 	ldmdbhi	sl, {r0, r4, r9}
    b47c:	02000004 	andeq	r0, r0, #4
    b480:	12087023 	andne	r7, r8, #35	; 0x23
    b484:	03000002 	movweq	r0, #2
    b488:	891a0212 	ldmdbhi	sl, {r1, r4, r9}
    b48c:	02000004 	andeq	r0, r0, #4
    b490:	15087423 	strne	r7, [r8, #-1059]	; 0xfffffbdd
    b494:	03000007 	movweq	r0, #7
    b498:	a8190213 	ldmdage	r9, {r0, r1, r4, r9}
    b49c:	02000000 	andeq	r0, r0, #0
    b4a0:	c6087823 	strgt	r7, [r8], -r3, lsr #16
    b4a4:	03000003 	movweq	r0, #3
    b4a8:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
    b4ac:	02000000 	andeq	r0, r0, #0
    b4b0:	54087c23 	strpl	r7, [r8], #-3107	; 0xfffff3dd
    b4b4:	03000005 	movweq	r0, #5
    b4b8:	97190215 			; <UNDEFINED> instruction: 0x97190215
    b4bc:	03000000 	movweq	r0, #0
    b4c0:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
    b4c4:	000003e8 	andeq	r0, r0, r8, ror #7
    b4c8:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
    b4cc:	00000097 	muleq	r0, r7, r0
    b4d0:	01842303 	orreq	r2, r4, r3, lsl #6
    b4d4:	0008ff08 	andeq	pc, r8, r8, lsl #30
    b4d8:	021f0300 	andseq	r0, pc, #0, 6
    b4dc:	0004891a 	andeq	r8, r4, sl, lsl r9
    b4e0:	88230300 	stmdahi	r3!, {r8, r9}
    b4e4:	07f00801 	ldrbeq	r0, [r0, r1, lsl #16]!
    b4e8:	20030000 	andcs	r0, r3, r0
    b4ec:	04891a02 	streq	r1, [r9], #2562	; 0xa02
    b4f0:	23030000 	movwcs	r0, #12288	; 0x3000
    b4f4:	c108018c 	smlabbgt	r8, ip, r1, r0
    b4f8:	03000002 	movweq	r0, #2
    b4fc:	9719022e 	ldrls	r0, [r9, -lr, lsr #4]
    b500:	03000000 	movweq	r0, #0
    b504:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
    b508:	00000256 	andeq	r0, r0, r6, asr r2
    b50c:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
    b510:	00000097 	muleq	r0, r7, r0
    b514:	01942303 	orrseq	r2, r4, r3, lsl #6
    b518:	00032008 	andeq	r2, r3, r8
    b51c:	02300300 	eorseq	r0, r0, #0, 6
    b520:	00009719 	andeq	r9, r0, r9, lsl r7
    b524:	98230300 	stmdals	r3!, {r8, r9}
    b528:	02770801 	rsbseq	r0, r7, #65536	; 0x10000
    b52c:	33030000 	movwcc	r0, #12288	; 0x3000
    b530:	00971902 	addseq	r1, r7, r2, lsl #18
    b534:	23030000 	movwcs	r0, #12288	; 0x3000
    b538:	0008019c 	muleq	r8, ip, r1
    b53c:	03000000 	movweq	r0, #0
    b540:	851a0235 	ldrhi	r0, [sl, #-565]	; 0xfffffdcb
    b544:	03000005 	movweq	r0, #5
    b548:	0801a023 	stmdaeq	r1, {r0, r1, r5, sp, pc}
    b54c:	00001bc8 	andeq	r1, r0, r8, asr #23
    b550:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
    b554:	000000a8 	andeq	r0, r0, r8, lsr #1
    b558:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    b55c:	001c8808 	andseq	r8, ip, r8, lsl #16
    b560:	023d0300 	eorseq	r0, sp, #0, 6
    b564:	0000a819 	andeq	sl, r0, r9, lsl r8
    b568:	a8230300 	stmdage	r3!, {r8, r9}
    b56c:	1b410801 	blne	104d578 <__RAM_SIZE+0xf4d578>
    b570:	41030000 	mrsmi	r0, (UNDEF: 3)
    b574:	00a81902 	adceq	r1, r8, r2, lsl #18
    b578:	23030000 	movwcs	r0, #12288	; 0x3000
    b57c:	3f0801ac 	svccc	0x000801ac
    b580:	0300001d 	movweq	r0, #29
    b584:	a8190245 	ldmdage	r9, {r0, r2, r6, r9}
    b588:	03000000 	movweq	r0, #0
    b58c:	0801b023 	stmdaeq	r1, {r0, r1, r5, ip, sp, pc}
    b590:	00001c58 	andeq	r1, r0, r8, asr ip
    b594:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
    b598:	000000a8 	andeq	r0, r0, r8, lsr #1
    b59c:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
    b5a0:	0007c308 	andeq	ip, r7, r8, lsl #6
    b5a4:	024c0300 	subeq	r0, ip, #0, 6
    b5a8:	0004891a 	andeq	r8, r4, sl, lsl r9
    b5ac:	b8230300 	stmdalt	r3!, {r8, r9}
    b5b0:	1d170801 	ldcne	8, cr0, [r7, #-4]
    b5b4:	4f030000 	svcmi	0x00030000
    b5b8:	00a81902 	adceq	r1, r8, r2, lsl #18
    b5bc:	23030000 	movwcs	r0, #12288	; 0x3000
    b5c0:	190801bc 	stmdbne	r8, {r2, r3, r4, r5, r7, r8}
    b5c4:	0300001b 	movweq	r0, #27
    b5c8:	a8190252 	ldmdage	r9, {r1, r4, r6, r9}
    b5cc:	03000000 	movweq	r0, #0
    b5d0:	0801c023 	stmdaeq	r1, {r0, r1, r5, lr, pc}
    b5d4:	00001a96 	muleq	r0, r6, sl
    b5d8:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
    b5dc:	000000a8 	andeq	r0, r0, r8, lsr #1
    b5e0:	01c42303 	biceq	r2, r4, r3, lsl #6
    b5e4:	001bec08 	andseq	lr, fp, r8, lsl #24
    b5e8:	02590300 	subseq	r0, r9, #0, 6
    b5ec:	0000a819 	andeq	sl, r0, r9, lsl r8
    b5f0:	c8230300 	stmdagt	r3!, {r8, r9}
    b5f4:	09c40801 	stmibeq	r4, {r0, fp}^
    b5f8:	5d030000 	stcpl	0, cr0, [r3, #-0]
    b5fc:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    b600:	23030000 	movwcs	r0, #12288	; 0x3000
    b604:	810801cc 	smlabthi	r8, ip, r1, r0
    b608:	03000004 	movweq	r0, #4
    b60c:	a8190278 	ldmdage	r9, {r3, r4, r5, r6, r9}
    b610:	03000000 	movweq	r0, #0
    b614:	0801d023 	stmdaeq	r1, {r0, r1, r5, ip, lr, pc}
    b618:	0000056d 	andeq	r0, r0, sp, ror #10
    b61c:	19027d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp, lr}
    b620:	000000a8 	andeq	r0, r0, r8, lsr #1
    b624:	01d42303 	bicseq	r2, r4, r3, lsl #6
    b628:	64040b00 	strvs	r0, [r4], #-2816	; 0xfffff500
    b62c:	09000001 	stmdbeq	r0, {r0}
    b630:	0004a001 	andeq	sl, r4, r1
    b634:	04890a00 	streq	r0, [r9], #2560	; 0xa00
    b638:	a80a0000 	stmdage	sl, {}	; <UNPREDICTABLE>
    b63c:	00000000 	andeq	r0, r0, r0
    b640:	048f040b 	streq	r0, [pc], #1035	; b648 <_Min_Stack_Size+0xa648>
    b644:	b3070000 	movwlt	r0, #28672	; 0x7000
    b648:	34000007 	strcc	r0, [r0], #-7
    b64c:	10037e03 	andne	r7, r3, r3, lsl #28
    b650:	00000585 	andeq	r0, r0, r5, lsl #11
    b654:	00018d08 	andeq	r8, r1, r8, lsl #26
    b658:	03820300 	orreq	r0, r2, #0, 6
    b65c:	0000a819 	andeq	sl, r0, r9, lsl r8
    b660:	00230200 	eoreq	r0, r3, r0, lsl #4
    b664:	00089708 	andeq	r9, r8, r8, lsl #14
    b668:	03850300 	orreq	r0, r5, #0, 6
    b66c:	00015e1a 	andeq	r5, r1, sl, lsl lr
    b670:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    b674:	0006fc08 	andeq	pc, r6, r8, lsl #24
    b678:	03880300 	orreq	r0, r8, #0, 6
    b67c:	00009719 	andeq	r9, r0, r9, lsl r7
    b680:	08230200 	stmdaeq	r3!, {r9}
    b684:	0004cb08 	andeq	ip, r4, r8, lsl #22
    b688:	038c0300 	orreq	r0, ip, #0, 6
    b68c:	0005981a 	andeq	r9, r5, sl, lsl r8
    b690:	0c230200 	sfmeq	f0, 4, [r3], #-0
    b694:	00016208 	andeq	r6, r1, r8, lsl #4
    b698:	03900300 	orrseq	r0, r0, #0, 6
    b69c:	00009719 	andeq	r9, r0, r9, lsl r7
    b6a0:	10230200 	eorne	r0, r3, r0, lsl #4
    b6a4:	00012108 	andeq	r2, r1, r8, lsl #2
    b6a8:	03930300 	orrseq	r0, r3, #0, 6
    b6ac:	00009719 	andeq	r9, r0, r9, lsl r7
    b6b0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    b6b4:	0008cd08 	andeq	ip, r8, r8, lsl #26
    b6b8:	03980300 	orrseq	r0, r8, #0, 6
    b6bc:	0004891a 	andeq	r8, r4, sl, lsl r9
    b6c0:	18230200 	stmdane	r3!, {r9}
    b6c4:	0006e308 	andeq	lr, r6, r8, lsl #6
    b6c8:	03990300 	orrseq	r0, r9, #0, 6
    b6cc:	00009719 	andeq	r9, r0, r9, lsl r7
    b6d0:	1c230200 	sfmne	f0, 4, [r3], #-0
    b6d4:	0005d308 	andeq	sp, r5, r8, lsl #6
    b6d8:	039d0300 	orrseq	r0, sp, #0, 6
    b6dc:	0005851a 	andeq	r8, r5, sl, lsl r5
    b6e0:	20230200 	eorcs	r0, r3, r0, lsl #4
    b6e4:	0006a008 	andeq	sl, r6, r8
    b6e8:	039e0300 	orrseq	r0, lr, #0, 6
    b6ec:	0005851a 	andeq	r8, r5, sl, lsl r5
    b6f0:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    b6f4:	0001d008 	andeq	sp, r1, r8
    b6f8:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    b6fc:	00009719 	andeq	r9, r0, r9, lsl r7
    b700:	28230200 	stmdacs	r3!, {r9}
    b704:	0009e008 	andeq	lr, r9, r8
    b708:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    b70c:	0005851a 	andeq	r8, r5, sl, lsl r5
    b710:	2c230200 	sfmcs	f0, 4, [r3], #-0
    b714:	00042508 	andeq	r2, r4, r8, lsl #10
    b718:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    b71c:	0005851a 	andeq	r8, r5, sl, lsl r5
    b720:	30230200 	eorcc	r0, r3, r0, lsl #4
    b724:	a6040b00 	strge	r0, [r4], -r0, lsl #22
    b728:	0c000004 	stceq	0, cr0, [r0], {4}
    b72c:	000008ef 	andeq	r0, r0, pc, ror #17
    b730:	03028603 	movweq	r8, #9731	; 0x2603
    b734:	00000164 	andeq	r0, r0, r4, ror #2
    b738:	058b040b 	streq	r0, [fp, #1035]	; 0x40b
    b73c:	570d0000 	strpl	r0, [sp, -r0]
    b740:	04000021 	streq	r0, [r0], #-33	; 0xffffffdf
    b744:	00a8215a 	adceq	r2, r8, sl, asr r1
    b748:	01010000 	mrseq	r0, (UNDEF: 1)
    b74c:	0011270e 	andseq	r2, r1, lr, lsl #14
    b750:	01390500 	teqeq	r9, r0, lsl #10
    b754:	00059821 	andeq	r9, r5, r1, lsr #16
    b758:	0e010100 	adfeqs	f0, f1, f0
    b75c:	000019d9 	ldrdeq	r1, [r0], -r9
    b760:	21014005 	tstcs	r1, r5
    b764:	00000598 	muleq	r0, r8, r5
    b768:	a80f0101 	stmdage	pc, {r0, r8}	; <UNPREDICTABLE>
    b76c:	da000000 	ble	b774 <_Min_Stack_Size+0xa774>
    b770:	10000005 	andne	r0, r0, r5
    b774:	00000029 	andeq	r0, r0, r9, lsr #32
    b778:	130e0000 	movwne	r0, #57344	; 0xe000
    b77c:	0500001c 	streq	r0, [r0, #-28]	; 0xffffffe4
    b780:	ca21015b 	bgt	84bcf4 <__RAM_SIZE+0x74bcf4>
    b784:	01000005 	tsteq	r0, r5
    b788:	1aba0e01 	bne	fee8ef94 <__RAM_segment_used_end__+0xc6d8ef94>
    b78c:	7f050000 	svcvc	0x00050000
    b790:	00972101 	addseq	r2, r7, r1, lsl #2
    b794:	01010000 	mrseq	r0, (UNDEF: 1)
    b798:	0005980f 	andeq	r9, r5, pc, lsl #16
    b79c:	00060800 	andeq	r0, r6, r0, lsl #16
    b7a0:	00291000 	eoreq	r1, r9, r0
    b7a4:	001f0000 	andseq	r0, pc, r0
    b7a8:	001dab0e 	andseq	sl, sp, lr, lsl #22
    b7ac:	01870500 	orreq	r0, r7, r0, lsl #10
    b7b0:	0005f821 	andeq	pc, r5, r1, lsr #16
    b7b4:	0e010100 	adfeqs	f0, f1, f0
    b7b8:	0000113e 	andeq	r1, r0, lr, lsr r1
    b7bc:	21018e05 	tstcs	r1, r5, lsl #28
    b7c0:	000000a3 	andeq	r0, r0, r3, lsr #1
    b7c4:	870e0101 	strhi	r0, [lr, -r1, lsl #2]
    b7c8:	0500001c 	streq	r0, [r0, #-28]	; 0xffffffe4
    b7cc:	a82101d0 	stmdage	r1!, {r4, r6, r7, r8}
    b7d0:	01000000 	mrseq	r0, (UNDEF: 0)
    b7d4:	1ad60e01 	bne	ff58efe0 <__RAM_segment_used_end__+0xc748efe0>
    b7d8:	03050000 	movweq	r0, #20480	; 0x5000
    b7dc:	00a82102 	adceq	r2, r8, r2, lsl #2
    b7e0:	01010000 	mrseq	r0, (UNDEF: 1)
    b7e4:	001ce90e 	andseq	lr, ip, lr, lsl #18
    b7e8:	02090500 	andeq	r0, r9, #0, 10
    b7ec:	0000a821 	andeq	sl, r0, r1, lsr #16
    b7f0:	0e010100 	adfeqs	f0, f1, f0
    b7f4:	00001b9d 	muleq	r0, sp, fp
    b7f8:	21020f05 	tstcs	r2, r5, lsl #30
    b7fc:	000000a8 	andeq	r0, r0, r8, lsr #1
    b800:	980f0101 	stmdals	pc, {r0, r8}	; <UNPREDICTABLE>
    b804:	72000005 	andvc	r0, r0, #5
    b808:	10000006 	andne	r0, r0, r6
    b80c:	00000029 	andeq	r0, r0, r9, lsr #32
    b810:	c60e0007 	strgt	r0, [lr], -r7
    b814:	0500001c 	streq	r0, [r0, #-28]	; 0xffffffe4
    b818:	62210210 	eorvs	r0, r1, #16, 4
    b81c:	01000006 	tsteq	r0, r6
    b820:	c9011101 	stmdbgt	r1, {r0, r8, ip}
    b824:	01000010 	tsteq	r0, r0, lsl r0
    b828:	010702b2 			; <UNDEFINED> instruction: 0x010702b2
    b82c:	10002484 	andne	r2, r0, r4, lsl #9
    b830:	10002744 	andne	r2, r0, r4, asr #14
    b834:	00004455 	andeq	r4, r0, r5, asr r4
    b838:	000cf601 	andeq	pc, ip, r1, lsl #12
    b83c:	19791200 	ldmdbne	r9!, {r9, ip}^
    b840:	b2010000 	andlt	r0, r1, #0
    b844:	05982f02 	ldreq	r2, [r8, #3842]	; 0xf02
    b848:	44850000 	strmi	r0, [r5], #0
    b84c:	44750000 	ldrbtmi	r0, [r5], #-0
    b850:	06120000 	ldreq	r0, [r2], -r0
    b854:	01000011 	tsteq	r0, r1, lsl r0
    b858:	a84102b2 	stmdage	r1, {r1, r4, r5, r7, r9}^
    b85c:	f1000000 	cps	#0
    b860:	e5000044 	str	r0, [r0, #-68]	; 0xffffffbc
    b864:	13000044 	movwne	r0, #68	; 0x44
    b868:	000002e3 	andeq	r0, r0, r3, ror #5
    b86c:	1102b501 	tstne	r2, r1, lsl #10
    b870:	00000097 	muleq	r0, r7, r0
    b874:	00004548 	andeq	r4, r0, r8, asr #10
    b878:	00004544 	andeq	r4, r0, r4, asr #10
    b87c:	00214913 	eoreq	r4, r1, r3, lsl r9
    b880:	02b60100 	adcseq	r0, r6, #0, 2
    b884:	00009711 	andeq	r9, r0, r1, lsl r7
    b888:	00456800 	subeq	r6, r5, r0, lsl #16
    b88c:	00456600 	subeq	r6, r5, r0, lsl #12
    b890:	216c1300 	cmncs	ip, r0, lsl #6
    b894:	b7010000 	strlt	r0, [r1, -r0]
    b898:	00a81102 	adceq	r1, r8, r2, lsl #2
    b89c:	45820000 	strmi	r0, [r2]
    b8a0:	457c0000 	ldrbmi	r0, [ip, #-0]!
    b8a4:	79130000 	ldmdbvc	r3, {}	; <UNPREDICTABLE>
    b8a8:	01000020 	tsteq	r0, r0, lsr #32
    b8ac:	a81102b8 	ldmdage	r1, {r3, r4, r5, r7, r9}
    b8b0:	b2000000 	andlt	r0, r0, #0
    b8b4:	ac000045 	stcge	0, cr0, [r0], {69}	; 0x45
    b8b8:	13000045 	movwne	r0, #69	; 0x45
    b8bc:	00002035 	andeq	r2, r0, r5, lsr r0
    b8c0:	1102b901 	tstne	r2, r1, lsl #18
    b8c4:	000000a8 	andeq	r0, r0, r8, lsr #1
    b8c8:	000045e1 	andeq	r4, r0, r1, ror #11
    b8cc:	000045db 	ldrdeq	r4, [r0], -fp
    b8d0:	0006c413 	andeq	ip, r6, r3, lsl r4
    b8d4:	02ba0100 	adcseq	r0, sl, #0, 2
    b8d8:	00059812 	andeq	r9, r5, r2, lsl r8
    b8dc:	00461000 	subeq	r1, r6, r0
    b8e0:	00460a00 	subeq	r0, r6, r0, lsl #20
    b8e4:	01a31300 			; <UNDEFINED> instruction: 0x01a31300
    b8e8:	bb010000 	bllt	4b8f0 <SYSTICK_CYCLES+0x228b1>
    b8ec:	05981202 	ldreq	r1, [r8, #514]	; 0x202
    b8f0:	463c0000 	ldrtmi	r0, [ip], -r0
    b8f4:	463a0000 	ldrtmi	r0, [sl], -r0
    b8f8:	c1130000 	tstgt	r3, r0
    b8fc:	0100001f 	tsteq	r0, pc, lsl r0
    b900:	981202bc 	ldmdals	r2, {r2, r3, r4, r5, r7, r9}
    b904:	51000005 	tstpl	r0, r5
    b908:	4f000046 	svcmi	0x00000046
    b90c:	14000046 	strne	r0, [r0], #-70	; 0xffffffba
    b910:	00000388 	andeq	r0, r0, r8, lsl #7
    b914:	00000917 	andeq	r0, r0, r7, lsl r9
    b918:	000eee13 	andeq	lr, lr, r3, lsl lr
    b91c:	02ea0100 	rsceq	r0, sl, #0, 2
    b920:	00009705 	andeq	r9, r0, r5, lsl #14
    b924:	00466c00 	subeq	r6, r6, r0, lsl #24
    b928:	00466400 	subeq	r6, r6, r0, lsl #8
    b92c:	0dfe1500 	cfldr64eq	mvdx1, [lr]
    b930:	24900000 	ldrcs	r0, [r0], #0
    b934:	00021000 	andeq	r1, r2, r0
    b938:	10002490 	mulne	r0, r0, r4
    b93c:	10002496 	mulne	r0, r6, r4
    b940:	0502ea01 	streq	lr, [r2, #-2561]	; 0xfffff5ff
    b944:	000007db 	ldrdeq	r0, [r0], -fp
    b948:	000e1116 	andeq	r1, lr, r6, lsl r1
    b94c:	0046a600 	subeq	sl, r6, r0, lsl #12
    b950:	0046a000 	subeq	sl, r6, r0
    b954:	0e471700 	cdpeq	7, 4, cr1, cr7, cr0, {0}
    b958:	24900000 	ldrcs	r0, [r0], #0
    b95c:	00051000 	andeq	r1, r5, r0
    b960:	10002490 	mulne	r0, r0, r4
    b964:	10002494 	mulne	r0, r4, r4
    b968:	13025602 	movwne	r5, #9730	; 0x2602
    b96c:	000e5a16 	andeq	r5, lr, r6, lsl sl
    b970:	0046d100 	subeq	sp, r6, r0, lsl #2
    b974:	0046cf00 	subeq	ip, r6, r0, lsl #30
    b978:	15000000 	strne	r0, [r0, #-0]
    b97c:	00000e1f 	andeq	r0, r0, pc, lsl lr
    b980:	100024a0 	andne	r2, r0, r0, lsr #9
    b984:	24a00001 	strtcs	r0, [r0], #1
    b988:	24a41000 	strtcs	r1, [r4], #0
    b98c:	ea011000 	b	4f994 <SYSTICK_CYCLES+0x26955>
    b990:	08040502 	stmdaeq	r4, {r1, r8, sl}
    b994:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    b998:	e600000e 	str	r0, [r0], -lr
    b99c:	e4000046 	str	r0, [r0], #-70	; 0xffffffba
    b9a0:	00000046 	andeq	r0, r0, r6, asr #32
    b9a4:	000e1f15 	andeq	r1, lr, r5, lsl pc
    b9a8:	00259000 	eoreq	r9, r5, r0
    b9ac:	90000110 	andls	r0, r0, r0, lsl r1
    b9b0:	94100025 	ldrls	r0, [r0], #-37	; 0xffffffdb
    b9b4:	01100025 	tsteq	r0, r5, lsr #32
    b9b8:	2d0502ea 	sfmcs	f0, 4, [r5, #-936]	; 0xfffffc58
    b9bc:	18000008 	stmdane	r0, {r3}
    b9c0:	00000e2e 	andeq	r0, r0, lr, lsr #28
    b9c4:	000046fb 	strdeq	r4, [r0], -fp
    b9c8:	000046f9 	strdeq	r4, [r0], -r9
    b9cc:	0dfe1500 	cfldr64eq	mvdx1, [lr]
    b9d0:	259a0000 	ldrcs	r0, [sl]
    b9d4:	00011000 	andeq	r1, r1, r0
    b9d8:	1000259a 	mulne	r0, sl, r5
    b9dc:	100025a0 	andne	r2, r0, r0, lsr #11
    b9e0:	0502ea01 	streq	lr, [r2, #-2561]	; 0xfffff5ff
    b9e4:	0000087b 	andeq	r0, r0, fp, ror r8
    b9e8:	000e1116 	andeq	r1, lr, r6, lsl r1
    b9ec:	00471000 	subeq	r1, r7, r0
    b9f0:	00470e00 	subeq	r0, r7, r0, lsl #28
    b9f4:	0e471700 	cdpeq	7, 4, cr1, cr7, cr0, {0}
    b9f8:	259a0000 	ldrcs	r0, [sl]
    b9fc:	00041000 	andeq	r1, r4, r0
    ba00:	1000259a 	mulne	r0, sl, r5
    ba04:	1000259e 	mulne	r0, lr, r5
    ba08:	13025602 	movwne	r5, #9730	; 0x2602
    ba0c:	000e5a16 	andeq	r5, lr, r6, lsl sl
    ba10:	00472500 	subeq	r2, r7, r0, lsl #10
    ba14:	00472300 	subeq	r2, r7, r0, lsl #6
    ba18:	15000000 	strne	r0, [r0, #-0]
    ba1c:	00000e1f 	andeq	r0, r0, pc, lsl lr
    ba20:	100025b2 			; <UNDEFINED> instruction: 0x100025b2
    ba24:	25b20001 	ldrcs	r0, [r2, #1]!
    ba28:	25b61000 	ldrcs	r1, [r6, #0]!
    ba2c:	ea011000 	b	4fa34 <SYSTICK_CYCLES+0x269f5>
    ba30:	08a40502 	stmiaeq	r4!, {r1, r8, sl}
    ba34:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    ba38:	3a00000e 	bcc	ba78 <_Min_Stack_Size+0xaa78>
    ba3c:	38000047 	stmdacc	r0, {r0, r1, r2, r6}
    ba40:	00000047 	andeq	r0, r0, r7, asr #32
    ba44:	000dfe15 	andeq	pc, sp, r5, lsl lr	; <UNPREDICTABLE>
    ba48:	0025bc00 	eoreq	fp, r5, r0, lsl #24
    ba4c:	bc000110 	stflts	f0, [r0], {16}
    ba50:	c4100025 	ldrgt	r0, [r0], #-37	; 0xffffffdb
    ba54:	01100025 	tsteq	r0, r5, lsr #32
    ba58:	f20502ea 	vhsub.s8	q0, <illegal reg q10.5>, q13
    ba5c:	16000008 	strne	r0, [r0], -r8
    ba60:	00000e11 	andeq	r0, r0, r1, lsl lr
    ba64:	0000474f 	andeq	r4, r0, pc, asr #14
    ba68:	0000474d 	andeq	r4, r0, sp, asr #14
    ba6c:	000e4717 	andeq	r4, lr, r7, lsl r7
    ba70:	0025bc00 	eoreq	fp, r5, r0, lsl #24
    ba74:	bc000410 	cfstrslt	mvf0, [r0], {16}
    ba78:	c0100025 	andsgt	r0, r0, r5, lsr #32
    ba7c:	02100025 	andseq	r0, r0, #37	; 0x25
    ba80:	16130256 			; <UNDEFINED> instruction: 0x16130256
    ba84:	00000e5a 	andeq	r0, r0, sl, asr lr
    ba88:	00004764 	andeq	r4, r0, r4, ror #14
    ba8c:	00004762 	andeq	r4, r0, r2, ror #14
    ba90:	9a190000 	bls	64ba98 <__RAM_SIZE+0x54ba98>
    ba94:	89100025 	ldmdbhi	r0, {r0, r2, r5}
    ba98:	0600000e 	streq	r0, [r0], -lr
    ba9c:	1a000009 	bne	bac8 <_Min_Stack_Size+0xaac8>
    baa0:	74025001 	strvc	r5, [r2], #-1
    baa4:	bc1b0000 	ldclt	0, cr0, [fp], {-0}
    baa8:	98100025 	ldmdals	r0, {r0, r2, r5}
    baac:	1a00000e 	bne	baec <_Min_Stack_Size+0xaaec>
    bab0:	74025001 	strvc	r5, [r2], #-1
    bab4:	14000000 	strne	r0, [r0], #-0
    bab8:	000003a0 	andeq	r0, r0, r0, lsr #7
    babc:	00000abf 			; <UNDEFINED> instruction: 0x00000abf
    bac0:	000eee13 	andeq	lr, lr, r3, lsl lr
    bac4:	04a00100 	strteq	r0, [r0], #256	; 0x100
    bac8:	00009709 	andeq	r9, r0, r9, lsl #14
    bacc:	00477f00 	subeq	r7, r7, r0, lsl #30
    bad0:	00477700 	subeq	r7, r7, r0, lsl #14
    bad4:	0dfe1500 	cfldr64eq	mvdx1, [lr]
    bad8:	25060000 	strcs	r0, [r6, #-0]
    badc:	00031000 	andeq	r1, r3, r0
    bae0:	10002506 	andne	r2, r0, r6, lsl #10
    bae4:	1000250c 	andne	r2, r0, ip, lsl #10
    bae8:	0904a001 	stmdbeq	r4, {r0, sp, pc}
    baec:	00000983 	andeq	r0, r0, r3, lsl #19
    baf0:	000e1116 	andeq	r1, lr, r6, lsl r1
    baf4:	0047b900 	subeq	fp, r7, r0, lsl #18
    baf8:	0047b300 	subeq	fp, r7, r0, lsl #6
    bafc:	0e471700 	cdpeq	7, 4, cr1, cr7, cr0, {0}
    bb00:	25060000 	strcs	r0, [r6, #-0]
    bb04:	00061000 	andeq	r1, r6, r0
    bb08:	10002506 	andne	r2, r0, r6, lsl #10
    bb0c:	1000250a 	andne	r2, r0, sl, lsl #10
    bb10:	13025602 	movwne	r5, #9730	; 0x2602
    bb14:	000e5a16 	andeq	r5, lr, r6, lsl sl
    bb18:	0047e400 	subeq	lr, r7, r0, lsl #8
    bb1c:	0047e200 	subeq	lr, r7, r0, lsl #4
    bb20:	15000000 	strne	r0, [r0, #-0]
    bb24:	00000e1f 	andeq	r0, r0, pc, lsl lr
    bb28:	10002518 	andne	r2, r0, r8, lsl r5
    bb2c:	25180001 	ldrcs	r0, [r8, #-1]
    bb30:	251c1000 	ldrcs	r1, [ip, #-0]
    bb34:	a0011000 	andge	r1, r1, r0
    bb38:	09ac0904 	stmibeq	ip!, {r2, r8, fp}
    bb3c:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    bb40:	f900000e 			; <UNDEFINED> instruction: 0xf900000e
    bb44:	f7000047 			; <UNDEFINED> instruction: 0xf7000047
    bb48:	00000047 	andeq	r0, r0, r7, asr #32
    bb4c:	000e1f15 	andeq	r1, lr, r5, lsl pc
    bb50:	0026c600 	eoreq	ip, r6, r0, lsl #12
    bb54:	c6000110 			; <UNDEFINED> instruction: 0xc6000110
    bb58:	ca100026 	bgt	40bbf8 <__RAM_SIZE+0x30bbf8>
    bb5c:	01100026 	tsteq	r0, r6, lsr #32
    bb60:	d50904a0 	strle	r0, [r9, #-1184]	; 0xfffffb60
    bb64:	18000009 	stmdane	r0, {r0, r3}
    bb68:	00000e2e 	andeq	r0, r0, lr, lsr #28
    bb6c:	0000480e 	andeq	r4, r0, lr, lsl #16
    bb70:	0000480c 	andeq	r4, r0, ip, lsl #16
    bb74:	0dfe1500 	cfldr64eq	mvdx1, [lr]
    bb78:	26d00000 	ldrbcs	r0, [r0], r0
    bb7c:	00011000 	andeq	r1, r1, r0
    bb80:	100026d0 	ldrdne	r2, [r0], -r0
    bb84:	100026d6 	ldrdne	r2, [r0], -r6
    bb88:	0904a001 	stmdbeq	r4, {r0, sp, pc}
    bb8c:	00000a23 	andeq	r0, r0, r3, lsr #20
    bb90:	000e1116 	andeq	r1, lr, r6, lsl r1
    bb94:	00482300 	subeq	r2, r8, r0, lsl #6
    bb98:	00482100 	subeq	r2, r8, r0, lsl #2
    bb9c:	0e471700 	cdpeq	7, 4, cr1, cr7, cr0, {0}
    bba0:	26d00000 	ldrbcs	r0, [r0], r0
    bba4:	00041000 	andeq	r1, r4, r0
    bba8:	100026d0 	ldrdne	r2, [r0], -r0
    bbac:	100026d4 	ldrdne	r2, [r0], -r4
    bbb0:	13025602 	movwne	r5, #9730	; 0x2602
    bbb4:	000e5a16 	andeq	r5, lr, r6, lsl sl
    bbb8:	00483800 	subeq	r3, r8, r0, lsl #16
    bbbc:	00483600 	subeq	r3, r8, r0, lsl #12
    bbc0:	15000000 	strne	r0, [r0, #-0]
    bbc4:	00000e1f 	andeq	r0, r0, pc, lsl lr
    bbc8:	100026e8 	andne	r2, r0, r8, ror #13
    bbcc:	26e80001 	strbtcs	r0, [r8], r1
    bbd0:	26ec1000 	strbtcs	r1, [ip], r0
    bbd4:	a0011000 	andge	r1, r1, r0
    bbd8:	0a4c0904 	beq	130dff0 <__RAM_SIZE+0x120dff0>
    bbdc:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    bbe0:	4d00000e 	stcmi	0, cr0, [r0, #-56]	; 0xffffffc8
    bbe4:	4b000048 	blmi	bd0c <_Min_Stack_Size+0xad0c>
    bbe8:	00000048 	andeq	r0, r0, r8, asr #32
    bbec:	000dfe15 	andeq	pc, sp, r5, lsl lr	; <UNPREDICTABLE>
    bbf0:	0026f200 	eoreq	pc, r6, r0, lsl #4
    bbf4:	f2000110 	vand	d0, d0, d0
    bbf8:	fa100026 	blx	40bc98 <__RAM_SIZE+0x30bc98>
    bbfc:	01100026 	tsteq	r0, r6, lsr #32
    bc00:	9a0904a0 	bls	24ce88 <__RAM_SIZE+0x14ce88>
    bc04:	1600000a 	strne	r0, [r0], -sl
    bc08:	00000e11 	andeq	r0, r0, r1, lsl lr
    bc0c:	00004862 	andeq	r4, r0, r2, ror #16
    bc10:	00004860 	andeq	r4, r0, r0, ror #16
    bc14:	000e4717 	andeq	r4, lr, r7, lsl r7
    bc18:	0026f200 	eoreq	pc, r6, r0, lsl #4
    bc1c:	f2000410 	vqshl.s8	d0, d0, d0
    bc20:	f6100026 			; <UNDEFINED> instruction: 0xf6100026
    bc24:	02100026 	andseq	r0, r0, #38	; 0x26
    bc28:	16130256 			; <UNDEFINED> instruction: 0x16130256
    bc2c:	00000e5a 	andeq	r0, r0, sl, asr lr
    bc30:	00004877 	andeq	r4, r0, r7, ror r8
    bc34:	00004875 	andeq	r4, r0, r5, ror r8
    bc38:	d0190000 	andsle	r0, r9, r0
    bc3c:	89100026 	ldmdbhi	r0, {r1, r2, r5}
    bc40:	ae00000e 	cdpge	0, 0, cr0, cr0, cr14, {0}
    bc44:	1a00000a 	bne	bc74 <_Min_Stack_Size+0xac74>
    bc48:	75025001 	strvc	r5, [r2, #-1]
    bc4c:	f21b0000 	vhadd.s16	d0, d11, d0
    bc50:	98100026 	ldmdals	r0, {r1, r2, r5}
    bc54:	1a00000e 	bne	bc94 <_Min_Stack_Size+0xac94>
    bc58:	75025001 	strvc	r5, [r2, #-1]
    bc5c:	15000000 	strne	r0, [r0, #-0]
    bc60:	00000de1 	andeq	r0, r0, r1, ror #27
    bc64:	10002534 	andne	r2, r0, r4, lsr r5
    bc68:	25340001 	ldrcs	r0, [r4, #-1]!
    bc6c:	25501000 	ldrbcs	r1, [r0, #-0]
    bc70:	bb011000 	bllt	4fc78 <SYSTICK_CYCLES+0x26c39>
    bc74:	0b760d04 	bleq	1d8f08c <__RAM_SIZE+0x1c8f08c>
    bc78:	f0160000 			; <UNDEFINED> instruction: 0xf0160000
    bc7c:	8c00000d 	stchi	0, cr0, [r0], {13}
    bc80:	8a000048 	bhi	bda8 <_Min_Stack_Size+0xada8>
    bc84:	15000048 	strne	r0, [r0, #-72]	; 0xffffffb8
    bc88:	00000e68 	andeq	r0, r0, r8, ror #28
    bc8c:	10002540 	andne	r2, r0, r0, asr #10
    bc90:	25400001 	strbcs	r0, [r0, #-1]
    bc94:	25441000 	strbcs	r1, [r4, #-0]
    bc98:	66021000 	strvs	r1, [r2], -r0
    bc9c:	0b100902 	bleq	40e0ac <__RAM_SIZE+0x30e0ac>
    bca0:	7b160000 	blvc	58bca8 <__RAM_SIZE+0x48bca8>
    bca4:	a100000e 	tstge	r0, lr
    bca8:	9f000048 	svcls	0x00000048
    bcac:	00000048 	andeq	r0, r0, r8, asr #32
    bcb0:	000e4715 	andeq	r4, lr, r5, lsl r7
    bcb4:	00254600 	eoreq	r4, r5, r0, lsl #12
    bcb8:	46000110 			; <UNDEFINED> instruction: 0x46000110
    bcbc:	4a100025 	bmi	40bd58 <__RAM_SIZE+0x30bd58>
    bcc0:	02100025 	andseq	r0, r0, #37	; 0x25
    bcc4:	391a0268 	ldmdbcc	sl, {r3, r5, r6, r9}
    bcc8:	1600000b 	strne	r0, [r0], -fp
    bccc:	00000e5a 	andeq	r0, r0, sl, asr lr
    bcd0:	000048b6 			; <UNDEFINED> instruction: 0x000048b6
    bcd4:	000048b4 			; <UNDEFINED> instruction: 0x000048b4
    bcd8:	0e3c1c00 	cdpeq	12, 3, cr1, cr12, cr0, {0}
    bcdc:	254a0000 	strbcs	r0, [sl, #-0]
    bce0:	00031000 	andeq	r1, r3, r0
    bce4:	1000254a 	andne	r2, r0, sl, asr #10
    bce8:	1000254c 	andne	r2, r0, ip, asr #10
    bcec:	09026c02 	stmdbeq	r2, {r1, sl, fp, sp, lr}
    bcf0:	000e1f17 	andeq	r1, lr, r7, lsl pc
    bcf4:	00254c00 	eoreq	r4, r5, r0, lsl #24
    bcf8:	4c000110 	stfmis	f0, [r0], {16}
    bcfc:	50100025 	andspl	r0, r0, r5, lsr #32
    bd00:	02100025 	andseq	r0, r0, #37	; 0x25
    bd04:	1809026e 	stmdane	r9, {r1, r2, r3, r5, r6, r9}
    bd08:	00000e2e 	andeq	r0, r0, lr, lsr #28
    bd0c:	000048cb 	andeq	r4, r0, fp, asr #17
    bd10:	000048c9 	andeq	r4, r0, r9, asr #17
    bd14:	e1150000 	tst	r5, r0
    bd18:	1800000d 	stmdane	r0, {r0, r2, r3}
    bd1c:	01100026 	tsteq	r0, r6, lsr #32
    bd20:	00261800 	eoreq	r1, r6, r0, lsl #16
    bd24:	00263610 	eoreq	r3, r6, r0, lsl r6
    bd28:	03c50110 	biceq	r0, r5, #16, 2
    bd2c:	000c2d11 	andeq	r2, ip, r1, lsl sp
    bd30:	0df01600 	ldcleq	6, cr1, [r0]
    bd34:	48e00000 	stmiami	r0!, {}^	; <UNPREDICTABLE>
    bd38:	48de0000 	ldmmi	lr, {}^	; <UNPREDICTABLE>
    bd3c:	68150000 	ldmdavs	r5, {}	; <UNPREDICTABLE>
    bd40:	2400000e 	strcs	r0, [r0], #-14
    bd44:	01100026 	tsteq	r0, r6, lsr #32
    bd48:	00262400 	eoreq	r2, r6, r0, lsl #8
    bd4c:	00262810 	eoreq	r2, r6, r0, lsl r8
    bd50:	02660210 	rsbeq	r0, r6, #16, 4
    bd54:	000bc709 	andeq	ip, fp, r9, lsl #14
    bd58:	0e7b1600 	cdpeq	6, 7, cr1, cr11, cr0, {0}
    bd5c:	48f50000 	ldmmi	r5!, {}^	; <UNPREDICTABLE>
    bd60:	48f30000 	ldmmi	r3!, {}^	; <UNPREDICTABLE>
    bd64:	15000000 	strne	r0, [r0, #-0]
    bd68:	00000e47 	andeq	r0, r0, r7, asr #28
    bd6c:	1000262c 	andne	r2, r0, ip, lsr #12
    bd70:	262c0001 	strtcs	r0, [ip], -r1
    bd74:	26301000 	ldrtcs	r1, [r0], -r0
    bd78:	68021000 	stmdavs	r2, {ip}
    bd7c:	0bf01a02 	bleq	ffc1258c <__RAM_segment_used_end__+0xc7b1258c>
    bd80:	5a160000 	bpl	58bd88 <__RAM_SIZE+0x48bd88>
    bd84:	0a00000e 	beq	bdc4 <_Min_Stack_Size+0xadc4>
    bd88:	08000049 	stmdaeq	r0, {r0, r3, r6}
    bd8c:	00000049 	andeq	r0, r0, r9, asr #32
    bd90:	000e3c1c 	andeq	r3, lr, ip, lsl ip
    bd94:	00263000 	eoreq	r3, r6, r0
    bd98:	30000310 	andcc	r0, r0, r0, lsl r3
    bd9c:	32100026 	andscc	r0, r0, #38	; 0x26
    bda0:	02100026 	andseq	r0, r0, #38	; 0x26
    bda4:	1709026c 	strne	r0, [r9, -ip, ror #4]
    bda8:	00000e1f 	andeq	r0, r0, pc, lsl lr
    bdac:	10002632 	andne	r2, r0, r2, lsr r6
    bdb0:	26320001 	ldrtcs	r0, [r2], -r1
    bdb4:	26361000 	ldrtcs	r1, [r6], -r0
    bdb8:	6e021000 	cdpvs	0, 0, cr1, cr2, cr0, {0}
    bdbc:	2e180902 	vnmlscs.f16	s0, s16, s4	; <UNPREDICTABLE>
    bdc0:	1f00000e 	svcne	0x0000000e
    bdc4:	1d000049 	stcne	0, cr0, [r0, #-292]	; 0xfffffedc
    bdc8:	00000049 	andeq	r0, r0, r9, asr #32
    bdcc:	0de11500 	cfstr64eq	mvdx1, [r1]
    bdd0:	26800000 	strcs	r0, [r0], r0
    bdd4:	00011000 	andeq	r1, r1, r0
    bdd8:	10002680 	andne	r2, r0, r0, lsl #13
    bddc:	100026a0 	andne	r2, r0, r0, lsr #13
    bde0:	0d046001 	stceq	0, cr6, [r4, #-4]
    bde4:	00000ce4 	andeq	r0, r0, r4, ror #25
    bde8:	000df016 	andeq	pc, sp, r6, lsl r0	; <UNPREDICTABLE>
    bdec:	00493400 	subeq	r3, r9, r0, lsl #8
    bdf0:	00493200 	subeq	r3, r9, r0, lsl #4
    bdf4:	0e681500 	cdpeq	5, 6, cr1, cr8, cr0, {0}
    bdf8:	268c0000 	strcs	r0, [ip], r0
    bdfc:	00011000 	andeq	r1, r1, r0
    be00:	1000268c 	andne	r2, r0, ip, lsl #13
    be04:	10002690 	mulne	r0, r0, r6
    be08:	09026602 	stmdbeq	r2, {r1, r9, sl, sp, lr}
    be0c:	00000c7e 	andeq	r0, r0, lr, ror ip
    be10:	000e7b16 	andeq	r7, lr, r6, lsl fp
    be14:	00494900 	subeq	r4, r9, r0, lsl #18
    be18:	00494700 	subeq	r4, r9, r0, lsl #14
    be1c:	47150000 	ldrmi	r0, [r5, -r0]
    be20:	9600000e 	strls	r0, [r0], -lr
    be24:	01100026 	tsteq	r0, r6, lsr #32
    be28:	00269600 	eoreq	r9, r6, r0, lsl #12
    be2c:	00269a10 	eoreq	r9, r6, r0, lsl sl
    be30:	02680210 	rsbeq	r0, r8, #16, 4
    be34:	000ca71a 	andeq	sl, ip, sl, lsl r7
    be38:	0e5a1600 	cdpeq	6, 5, cr1, cr10, cr0, {0}
    be3c:	495e0000 	ldmdbmi	lr, {}^	; <UNPREDICTABLE>
    be40:	495c0000 	ldmdbmi	ip, {}^	; <UNPREDICTABLE>
    be44:	1c000000 	stcne	0, cr0, [r0], {-0}
    be48:	00000e3c 	andeq	r0, r0, ip, lsr lr
    be4c:	1000269a 	mulne	r0, sl, r6
    be50:	269a0003 	ldrcs	r0, [sl], r3
    be54:	269c1000 	ldrcs	r1, [ip], r0
    be58:	6c021000 	stcvs	0, cr1, [r2], {-0}
    be5c:	1f170902 	svcne	0x00170902
    be60:	9c00000e 	stcls	0, cr0, [r0], {14}
    be64:	01100026 	tsteq	r0, r6, lsr #32
    be68:	00269c00 	eoreq	r9, r6, r0, lsl #24
    be6c:	0026a010 	eoreq	sl, r6, r0, lsl r0
    be70:	026e0210 	rsbeq	r0, lr, #16, 4
    be74:	0e2e1809 	cdpeq	8, 2, cr1, cr14, cr9, {0}
    be78:	49730000 	ldmdbmi	r3!, {}^	; <UNPREDICTABLE>
    be7c:	49710000 	ldmdbmi	r1!, {}^	; <UNPREDICTABLE>
    be80:	00000000 	andeq	r0, r0, r0
    be84:	00256a1b 	eoreq	r6, r5, fp, lsl sl
    be88:	000ea710 	andeq	sl, lr, r0, lsl r7
    be8c:	50011a00 	andpl	r1, r1, r0, lsl #20
    be90:	00cc7403 	sbceq	r7, ip, r3, lsl #8
    be94:	011d0000 	tsteq	sp, r0
    be98:	0000212f 	andeq	r2, r0, pc, lsr #2
    be9c:	01075201 	tsteq	r7, r1, lsl #4
	...
    bea8:	00004986 	andeq	r4, r0, r6, lsl #19
    beac:	000de101 	andeq	lr, sp, r1, lsl #2
    beb0:	19791e00 	ldmdbne	r9!, {r9, sl, fp, ip}^
    beb4:	52010000 	andpl	r0, r1, #0
    beb8:	0005982c 	andeq	r9, r5, ip, lsr #16
    bebc:	0049ae00 	subeq	sl, r9, r0, lsl #28
    bec0:	0049a600 	subeq	sl, r9, r0, lsl #12
    bec4:	0eee1300 	cdpeq	3, 14, cr1, cr14, cr0, {0}
    bec8:	8e010000 	cdphi	0, 0, cr0, cr1, cr0, {0}
    becc:	00970102 	addseq	r0, r7, r2, lsl #2
    bed0:	49ea0000 	stmibmi	sl!, {}^	; <UNPREDICTABLE>
    bed4:	49e80000 	stmibmi	r8!, {}^	; <UNPREDICTABLE>
    bed8:	06130000 	ldreq	r0, [r3], -r0
    bedc:	01000011 	tsteq	r0, r1, lsl r0
    bee0:	a80d0290 	stmdage	sp, {r4, r7, r9}
    bee4:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    bee8:	fd000049 	stc2	0, cr0, [r0, #-292]	; 0xfffffedc
    beec:	15000049 	strne	r0, [r0, #-73]	; 0xffffffb7
    bef0:	00000dfe 	strdeq	r0, [r0], -lr
    bef4:	00000000 	andeq	r0, r0, r0
    bef8:	00000003 	andeq	r0, r0, r3
    befc:	00000000 	andeq	r0, r0, r0
    bf00:	93010000 	movwls	r0, #4096	; 0x1000
    bf04:	0d9d0502 	cfldr32eq	mvfx0, [sp, #8]
    bf08:	11160000 	tstne	r6, r0
    bf0c:	1600000e 	strne	r0, [r0], -lr
    bf10:	1400004a 	strne	r0, [r0], #-74	; 0xffffffb6
    bf14:	1700004a 	strne	r0, [r0, -sl, asr #32]
    bf18:	00000e47 	andeq	r0, r0, r7, asr #28
    bf1c:	00000000 	andeq	r0, r0, r0
    bf20:	00000006 	andeq	r0, r0, r6
    bf24:	00000000 	andeq	r0, r0, r0
    bf28:	56020000 	strpl	r0, [r2], -r0
    bf2c:	5a161302 	bpl	590b3c <__RAM_SIZE+0x490b3c>
    bf30:	2b00000e 	blcs	bf70 <_Min_Stack_Size+0xaf70>
    bf34:	2900004a 	stmdbcs	r0, {r1, r3, r6}
    bf38:	0000004a 	andeq	r0, r0, sl, asr #32
    bf3c:	0e1f1500 	cfmul32eq	mvfx1, mvfx15, mvfx0
    bf40:	00000000 	andeq	r0, r0, r0
    bf44:	00010000 	andeq	r0, r1, r0
	...
    bf50:	0502a901 	streq	sl, [r2, #-2305]	; 0xfffff6ff
    bf54:	00000dc6 	andeq	r0, r0, r6, asr #27
    bf58:	000e2e18 	andeq	r2, lr, r8, lsl lr
    bf5c:	004a4000 	subeq	r4, sl, r0
    bf60:	004a3e00 	subeq	r3, sl, r0, lsl #28
    bf64:	001f0000 	andseq	r0, pc, r0
    bf68:	b5000000 	strlt	r0, [r0, #-0]
    bf6c:	1b00000e 	blne	bfac <_Min_Stack_Size+0xafac>
    bf70:	00000000 	andeq	r0, r0, r0
    bf74:	00000681 	andeq	r0, r0, r1, lsl #13
    bf78:	0350011a 	cmpeq	r0, #-2147483642	; 0x80000006
    bf7c:	005001f3 	ldrsheq	r0, [r0], #-19	; 0xffffffed
    bf80:	1fd02000 	svcne	0x00d02000
    bf84:	60020000 	andvs	r0, r2, r0
    bf88:	03013702 	movweq	r3, #5890	; 0x1702
    bf8c:	00000dfe 	strdeq	r0, [r0], -lr
    bf90:	000eee21 	andeq	lr, lr, r1, lsr #28
    bf94:	02620200 	rsbeq	r0, r2, #0, 4
    bf98:	00009706 	andeq	r9, r0, r6, lsl #14
    bf9c:	24220000 	strtcs	r0, [r2], #-0
    bfa0:	0200000f 	andeq	r0, r0, #15
    bfa4:	01370252 	teqeq	r7, r2, asr r2
    bfa8:	00000097 	muleq	r0, r7, r0
    bfac:	000e1f03 	andeq	r1, lr, r3, lsl #30
    bfb0:	0ead2100 	fdveqe	f2, f5, f0
    bfb4:	54020000 	strpl	r0, [r2], #-0
    bfb8:	00970602 	addseq	r0, r7, r2, lsl #12
    bfbc:	20000000 	andcs	r0, r0, r0
    bfc0:	00000e99 	muleq	r0, r9, lr
    bfc4:	37024902 	strcc	r4, [r2, -r2, lsl #18]
    bfc8:	0e3c0301 	cdpeq	3, 3, cr0, cr12, cr1, {0}
    bfcc:	ad230000 	stcge	0, cr0, [r3, #-0]
    bfd0:	0200000e 	andeq	r0, r0, #14
    bfd4:	97500249 	ldrbls	r0, [r0, -r9, asr #4]
    bfd8:	00000000 	andeq	r0, r0, r0
    bfdc:	001fad24 	andseq	sl, pc, r4, lsr #26
    bfe0:	02430200 	subeq	r0, r3, #0, 4
    bfe4:	22030137 	andcs	r0, r3, #-1073741811	; 0xc000000d
    bfe8:	00000ec2 	andeq	r0, r0, r2, asr #29
    bfec:	37023202 	strcc	r3, [r2, -r2, lsl #4]
    bff0:	00009701 	andeq	r9, r0, r1, lsl #14
    bff4:	0e680300 	cdpeq	3, 6, cr0, cr8, cr0, {0}
    bff8:	b1210000 			; <UNDEFINED> instruction: 0xb1210000
    bffc:	0200000e 	andeq	r0, r0, #14
    c000:	97060234 	smladxls	r6, r4, r2, r0
    c004:	00000000 	andeq	r0, r0, r0
    c008:	00196622 	andseq	r6, r9, r2, lsr #12
    c00c:	01fa0200 	mvnseq	r0, r0, lsl #4
    c010:	00970137 	addseq	r0, r7, r7, lsr r1
    c014:	89030000 	stmdbhi	r3, {}	; <UNPREDICTABLE>
    c018:	2100000e 	tstcs	r0, lr
    c01c:	000019aa 	andeq	r1, r0, sl, lsr #19
    c020:	0601fc02 	streq	pc, [r1], -r2, lsl #24
    c024:	00000097 	muleq	r0, r7, r0
    c028:	01012500 	tsteq	r1, r0, lsl #10
    c02c:	00001f6e 	andeq	r1, r0, lr, ror #30
    c030:	00001f6e 	andeq	r1, r0, lr, ror #30
    c034:	0d011b05 	vstreq	d1, [r1, #-20]	; 0xffffffec
    c038:	c5010125 	strgt	r0, [r1, #-293]	; 0xfffffedb
    c03c:	c500001e 	strgt	r0, [r0, #-30]	; 0xffffffe2
    c040:	0500001e 	streq	r0, [r0, #-30]	; 0xffffffe2
    c044:	260d0118 			; <UNDEFINED> instruction: 0x260d0118
    c048:	20d60101 	sbcscs	r0, r6, r1, lsl #2
    c04c:	20d60000 	sbcscs	r0, r6, r0
    c050:	3f040000 	svccc	0x00040000
    c054:	0101250d 	tsteq	r1, sp, lsl #10
    c058:	00001f8d 	andeq	r1, r0, sp, lsl #31
    c05c:	00001f8d 	andeq	r1, r0, sp, lsl #31
    c060:	0d011c05 	stceq	12, cr1, [r1, #-20]	; 0xffffffec
    c064:	000a7c00 	andeq	r7, sl, r0, lsl #24
    c068:	62000200 	andvs	r0, r0, #0, 4
    c06c:	04000021 	streq	r0, [r0], #-33	; 0xffffffdf
    c070:	00003d01 	andeq	r3, r0, r1, lsl #26
    c074:	21790c00 	cmncs	r9, r0, lsl #24
    c078:	065c0000 	ldrbeq	r0, [ip], -r0
    c07c:	04300000 	ldrteq	r0, [r0], #-0
	...
    c088:	45f30000 	ldrbmi	r0, [r3, #0]!
    c08c:	04020000 	streq	r0, [r2], #-0
    c090:	00023907 	andeq	r3, r2, r7, lsl #18
    c094:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    c098:	00746e69 	rsbseq	r6, r4, r9, ror #28
    c09c:	e8050802 	stmda	r5, {r1, fp}
    c0a0:	02000004 	andeq	r0, r0, #4
    c0a4:	063e0408 	ldrteq	r0, [lr], -r8, lsl #8
    c0a8:	01020000 	mrseq	r0, (UNDEF: 2)
    c0ac:	00086d06 	andeq	r6, r8, r6, lsl #26
    c0b0:	08010200 	stmdaeq	r1, {r9}
    c0b4:	0000086b 	andeq	r0, r0, fp, ror #16
    c0b8:	cf050202 	svcgt	0x00050202
    c0bc:	02000006 	andeq	r0, r0, #6
    c0c0:	09390702 	ldmdbeq	r9!, {r1, r8, r9, sl}
    c0c4:	04020000 	streq	r0, [r2], #-0
    c0c8:	0004ed05 	andeq	lr, r4, r5, lsl #26
    c0cc:	07040200 	streq	r0, [r4, -r0, lsl #4]
    c0d0:	00000234 	andeq	r0, r0, r4, lsr r2
    c0d4:	2f070802 	svccs	0x00070802
    c0d8:	04000002 	streq	r0, [r0], #-2
    c0dc:	08010204 	stmdaeq	r1, {r2, r9}
    c0e0:	00000874 	andeq	r0, r0, r4, ror r8
    c0e4:	0008fa05 	andeq	pc, r8, r5, lsl #20
    c0e8:	31730200 	cmncc	r3, r0, lsl #4
    c0ec:	00000078 	andeq	r0, r0, r8, ror r0
    c0f0:	0008f905 	andeq	pc, r8, r5, lsl #18
    c0f4:	31740200 	cmncc	r4, r0, lsl #4
    c0f8:	0000004c 	andeq	r0, r0, ip, asr #32
    c0fc:	00079a05 	andeq	r9, r7, r5, lsl #20
    c100:	31760200 	cmncc	r6, r0, lsl #4
    c104:	00000029 	andeq	r0, r0, r9, lsr #32
    c108:	00072c05 	andeq	r2, r7, r5, lsl #24
    c10c:	31780200 	cmncc	r8, r0, lsl #4
    c110:	00000068 	andeq	r0, r0, r8, rrx
    c114:	00053b06 	andeq	r3, r5, r6, lsl #22
    c118:	82031c00 	andhi	r1, r3, #0, 24
    c11c:	012e1001 			; <UNDEFINED> instruction: 0x012e1001
    c120:	2d070000 	stccs	0, cr0, [r7, #-0]
    c124:	03000008 	movweq	r0, #8
    c128:	a3190186 	tstge	r9, #-2147483615	; 0x80000021
    c12c:	02000000 	andeq	r0, r0, #0
    c130:	a0070023 	andge	r0, r7, r3, lsr #32
    c134:	03000003 	movweq	r0, #3
    c138:	a3190187 	tstge	r9, #-1073741791	; 0xc0000021
    c13c:	02000000 	andeq	r0, r0, #0
    c140:	3d070423 	cfstrscc	mvf0, [r7, #-140]	; 0xffffff74
    c144:	03000004 	movweq	r0, #4
    c148:	3a1b018a 	bcc	6cc778 <__RAM_SIZE+0x5cc778>
    c14c:	02000001 	andeq	r0, r0, #1
    c150:	f2070823 	vadd.i8	d0, d7, d19
    c154:	03000001 	movweq	r0, #1
    c158:	a319018b 	tstge	r9, #-1073741790	; 0xc0000022
    c15c:	02000000 	andeq	r0, r0, #0
    c160:	6f070c23 	svcvs	0x00070c23
    c164:	03000009 	movweq	r0, #9
    c168:	401a0191 	mulsmi	sl, r1, r1
    c16c:	02000001 	andeq	r0, r0, #1
    c170:	1b071023 	blne	1d0204 <__RAM_SIZE+0xd0204>
    c174:	03000000 	movweq	r0, #0
    c178:	401a0192 	mulsmi	sl, r2, r1
    c17c:	02000001 	andeq	r0, r0, #1
    c180:	09071423 	stmdbeq	r7, {r0, r1, r5, sl, ip}
    c184:	03000006 	movweq	r0, #6
    c188:	461b0196 			; <UNDEFINED> instruction: 0x461b0196
    c18c:	02000001 	andeq	r0, r0, #1
    c190:	08001823 	stmdaeq	r0, {r0, r1, r5, fp, ip}
    c194:	00013a01 	andeq	r3, r1, r1, lsl #20
    c198:	00a30900 	adceq	r0, r3, r0, lsl #18
    c19c:	0a000000 	beq	c1a4 <_Min_Stack_Size+0xb1a4>
    c1a0:	00012e04 	andeq	r2, r1, r4, lsl #28
    c1a4:	af040a00 	svcge	0x00040a00
    c1a8:	0a000000 	beq	c1b0 <_Min_Stack_Size+0xb1b0>
    c1ac:	00014004 	andeq	r4, r1, r4
    c1b0:	064a0b00 	strbeq	r0, [sl], -r0, lsl #22
    c1b4:	9b030000 	blls	cc1bc <SYSTICK_CYCLES+0xa317d>
    c1b8:	00af0301 	adceq	r0, pc, r1, lsl #6
    c1bc:	040a0000 	streq	r0, [sl], #-0
    c1c0:	0000007f 	andeq	r0, r0, pc, ror r0
    c1c4:	00034b06 	andeq	r4, r3, r6, lsl #22
    c1c8:	d603d800 	strle	sp, [r3], -r0, lsl #16
    c1cc:	04841001 	streq	r1, [r4], #1
    c1d0:	2c070000 	stccs	0, cr0, [r7], {-0}
    c1d4:	03000009 	movweq	r0, #9
    c1d8:	a31901dd 	tstge	r9, #1073741879	; 0x40000037
    c1dc:	02000000 	andeq	r0, r0, #0
    c1e0:	9f070023 	svcls	0x00070023
    c1e4:	03000007 	movweq	r0, #7
    c1e8:	a31901de 	tstge	r9, #-2147483593	; 0x80000037
    c1ec:	02000000 	andeq	r0, r0, #0
    c1f0:	bc070423 	cfstrslt	mvf0, [r7], {35}	; 0x23
    c1f4:	03000001 	movweq	r0, #1
    c1f8:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
    c1fc:	02000000 	andeq	r0, r0, #0
    c200:	16070823 	strne	r0, [r7], -r3, lsr #16
    c204:	03000009 	movweq	r0, #9
    c208:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
    c20c:	02000000 	andeq	r0, r0, #0
    c210:	11070c23 	tstne	r7, r3, lsr #24
    c214:	03000004 	movweq	r0, #4
    c218:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
    c21c:	02000000 	andeq	r0, r0, #0
    c220:	5a071023 	bpl	1d02b4 <__RAM_SIZE+0xd02b4>
    c224:	03000009 	movweq	r0, #9
    c228:	a31901e2 	tstge	r9, #-2147483592	; 0x80000038
    c22c:	02000000 	andeq	r0, r0, #0
    c230:	e2071423 	and	r1, r7, #587202560	; 0x23000000
    c234:	03000021 	movweq	r0, #33	; 0x21
    c238:	a31901e3 	tstge	r9, #-1073741768	; 0xc0000038
    c23c:	02000000 	andeq	r0, r0, #0
    c240:	25071823 	strcs	r1, [r7, #-2083]	; 0xfffff7dd
    c244:	03000006 	movweq	r0, #6
    c248:	a31901e4 	tstge	r9, #228, 2	; 0x39
    c24c:	02000000 	andeq	r0, r0, #0
    c250:	ba071c23 	blt	1d32e4 <__RAM_SIZE+0xd32e4>
    c254:	03000006 	movweq	r0, #6
    c258:	841a01e8 	ldrhi	r0, [sl], #-488	; 0xfffffe18
    c25c:	02000004 	andeq	r0, r0, #4
    c260:	99072023 	stmdbls	r7, {r0, r1, r5, sp}
    c264:	03000001 	movweq	r0, #1
    c268:	841a01e9 	ldrhi	r0, [sl], #-489	; 0xfffffe17
    c26c:	02000004 	andeq	r0, r0, #4
    c270:	b1072423 	tstlt	r7, r3, lsr #8
    c274:	03000005 	movweq	r0, #5
    c278:	591a01f1 	ldmdbpl	sl, {r0, r4, r5, r6, r7, r8}
    c27c:	02000001 	andeq	r0, r0, #1
    c280:	d9072823 	stmdble	r7, {r0, r1, r5, fp, sp}
    c284:	03000002 	movweq	r0, #2
    c288:	971901f2 			; <UNDEFINED> instruction: 0x971901f2
    c28c:	02000000 	andeq	r0, r0, #0
    c290:	46072c23 	strmi	r2, [r7], -r3, lsr #24
    c294:	03000002 	movweq	r0, #2
    c298:	971901f3 			; <UNDEFINED> instruction: 0x971901f3
    c29c:	02000000 	andeq	r0, r0, #0
    c2a0:	73073023 	movwvc	r3, #28707	; 0x7023
    c2a4:	03000001 	movweq	r0, #1
    c2a8:	971901f4 			; <UNDEFINED> instruction: 0x971901f4
    c2ac:	02000000 	andeq	r0, r0, #0
    c2b0:	4b073423 	blmi	1d9344 <__RAM_SIZE+0xd9344>
    c2b4:	03000007 	movweq	r0, #7
    c2b8:	971901f5 			; <UNDEFINED> instruction: 0x971901f5
    c2bc:	02000000 	andeq	r0, r0, #0
    c2c0:	eb073823 	bl	1da354 <__RAM_SIZE+0xda354>
    c2c4:	03000000 	movweq	r0, #0
    c2c8:	971901f6 			; <UNDEFINED> instruction: 0x971901f6
    c2cc:	02000000 	andeq	r0, r0, #0
    c2d0:	5c073c23 	stcpl	12, cr3, [r7], {35}	; 0x23
    c2d4:	03000003 	movweq	r0, #3
    c2d8:	9b1b01fb 	blls	6ccacc <__RAM_SIZE+0x5ccacc>
    c2dc:	02000004 	andeq	r0, r0, #4
    c2e0:	52074023 	andpl	r4, r7, #35	; 0x23
    c2e4:	03000001 	movweq	r0, #1
    c2e8:	3a1b0203 	bcc	6ccafc <__RAM_SIZE+0x5ccafc>
    c2ec:	02000001 	andeq	r0, r0, #1
    c2f0:	07074423 	streq	r4, [r7, -r3, lsr #8]
    c2f4:	03000001 	movweq	r0, #1
    c2f8:	a3190204 	tstge	r9, #4, 4	; 0x40000000
    c2fc:	02000000 	andeq	r0, r0, #0
    c300:	3b074823 	blcc	1de394 <__RAM_SIZE+0xde394>
    c304:	03000003 	movweq	r0, #3
    c308:	4c190208 	lfmmi	f0, 4, [r9], {8}
    c30c:	02000001 	andeq	r0, r0, #1
    c310:	ec074c23 	stc	12, cr4, [r7], {35}	; 0x23
    c314:	03000002 	movweq	r0, #2
    c318:	9b1b020e 	blls	6ccb58 <__RAM_SIZE+0x5ccb58>
    c31c:	02000004 	andeq	r0, r0, #4
    c320:	e9076823 	stmdb	r7, {r0, r1, r5, fp, sp, lr}
    c324:	03000005 	movweq	r0, #5
    c328:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
    c32c:	02000000 	andeq	r0, r0, #0
    c330:	32076c23 	andcc	r6, r7, #8960	; 0x2300
    c334:	03000007 	movweq	r0, #7
    c338:	841a0211 	ldrhi	r0, [sl], #-529	; 0xfffffdef
    c33c:	02000004 	andeq	r0, r0, #4
    c340:	12077023 	andne	r7, r7, #35	; 0x23
    c344:	03000002 	movweq	r0, #2
    c348:	841a0212 	ldrhi	r0, [sl], #-530	; 0xfffffdee
    c34c:	02000004 	andeq	r0, r0, #4
    c350:	15077423 	strne	r7, [r7, #-1059]	; 0xfffffbdd
    c354:	03000007 	movweq	r0, #7
    c358:	a3190213 	tstge	r9, #805306369	; 0x30000001
    c35c:	02000000 	andeq	r0, r0, #0
    c360:	c6077823 	strgt	r7, [r7], -r3, lsr #16
    c364:	03000003 	movweq	r0, #3
    c368:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
    c36c:	02000000 	andeq	r0, r0, #0
    c370:	54077c23 	strpl	r7, [r7], #-3107	; 0xfffff3dd
    c374:	03000005 	movweq	r0, #5
    c378:	97190215 			; <UNDEFINED> instruction: 0x97190215
    c37c:	03000000 	movweq	r0, #0
    c380:	07018023 	streq	r8, [r1, -r3, lsr #32]
    c384:	000003e8 	andeq	r0, r0, r8, ror #7
    c388:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
    c38c:	00000097 	muleq	r0, r7, r0
    c390:	01842303 	orreq	r2, r4, r3, lsl #6
    c394:	0008ff07 	andeq	pc, r8, r7, lsl #30
    c398:	021f0300 	andseq	r0, pc, #0, 6
    c39c:	0004841a 	andeq	r8, r4, sl, lsl r4
    c3a0:	88230300 	stmdahi	r3!, {r8, r9}
    c3a4:	07f00701 	ldrbeq	r0, [r0, r1, lsl #14]!
    c3a8:	20030000 	andcs	r0, r3, r0
    c3ac:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    c3b0:	23030000 	movwcs	r0, #12288	; 0x3000
    c3b4:	c107018c 	smlabbgt	r7, ip, r1, r0
    c3b8:	03000002 	movweq	r0, #2
    c3bc:	9719022e 	ldrls	r0, [r9, -lr, lsr #4]
    c3c0:	03000000 	movweq	r0, #0
    c3c4:	07019023 	streq	r9, [r1, -r3, lsr #32]
    c3c8:	00000256 	andeq	r0, r0, r6, asr r2
    c3cc:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
    c3d0:	00000097 	muleq	r0, r7, r0
    c3d4:	01942303 	orrseq	r2, r4, r3, lsl #6
    c3d8:	00032007 	andeq	r2, r3, r7
    c3dc:	02300300 	eorseq	r0, r0, #0, 6
    c3e0:	00009719 	andeq	r9, r0, r9, lsl r7
    c3e4:	98230300 	stmdals	r3!, {r8, r9}
    c3e8:	02770701 	rsbseq	r0, r7, #262144	; 0x40000
    c3ec:	33030000 	movwcc	r0, #12288	; 0x3000
    c3f0:	00971902 	addseq	r1, r7, r2, lsl #18
    c3f4:	23030000 	movwcs	r0, #12288	; 0x3000
    c3f8:	0007019c 	muleq	r7, ip, r1
    c3fc:	03000000 	movweq	r0, #0
    c400:	801a0235 	andshi	r0, sl, r5, lsr r2
    c404:	03000005 	movweq	r0, #5
    c408:	0701a023 	streq	sl, [r1, -r3, lsr #32]
    c40c:	00001bc8 	andeq	r1, r0, r8, asr #23
    c410:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
    c414:	000000a3 	andeq	r0, r0, r3, lsr #1
    c418:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    c41c:	001c8807 	andseq	r8, ip, r7, lsl #16
    c420:	023d0300 	eorseq	r0, sp, #0, 6
    c424:	0000a319 	andeq	sl, r0, r9, lsl r3
    c428:	a8230300 	stmdage	r3!, {r8, r9}
    c42c:	1b410701 	blne	104e038 <__RAM_SIZE+0xf4e038>
    c430:	41030000 	mrsmi	r0, (UNDEF: 3)
    c434:	00a31902 	adceq	r1, r3, r2, lsl #18
    c438:	23030000 	movwcs	r0, #12288	; 0x3000
    c43c:	3f0701ac 	svccc	0x000701ac
    c440:	0300001d 	movweq	r0, #29
    c444:	a3190245 	tstge	r9, #1342177284	; 0x50000004
    c448:	03000000 	movweq	r0, #0
    c44c:	0701b023 	streq	fp, [r1, -r3, lsr #32]
    c450:	00001c58 	andeq	r1, r0, r8, asr ip
    c454:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
    c458:	000000a3 	andeq	r0, r0, r3, lsr #1
    c45c:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
    c460:	0007c307 	andeq	ip, r7, r7, lsl #6
    c464:	024c0300 	subeq	r0, ip, #0, 6
    c468:	0004841a 	andeq	r8, r4, sl, lsl r4
    c46c:	b8230300 	stmdalt	r3!, {r8, r9}
    c470:	1d170701 	ldcne	7, cr0, [r7, #-4]
    c474:	4f030000 	svcmi	0x00030000
    c478:	00a31902 	adceq	r1, r3, r2, lsl #18
    c47c:	23030000 	movwcs	r0, #12288	; 0x3000
    c480:	190701bc 	stmdbne	r7, {r2, r3, r4, r5, r7, r8}
    c484:	0300001b 	movweq	r0, #27
    c488:	a3190252 	tstge	r9, #536870917	; 0x20000005
    c48c:	03000000 	movweq	r0, #0
    c490:	0701c023 	streq	ip, [r1, -r3, lsr #32]
    c494:	00001a96 	muleq	r0, r6, sl
    c498:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
    c49c:	000000a3 	andeq	r0, r0, r3, lsr #1
    c4a0:	01c42303 	biceq	r2, r4, r3, lsl #6
    c4a4:	001bec07 	andseq	lr, fp, r7, lsl #24
    c4a8:	02590300 	subseq	r0, r9, #0, 6
    c4ac:	0000a319 	andeq	sl, r0, r9, lsl r3
    c4b0:	c8230300 	stmdagt	r3!, {r8, r9}
    c4b4:	09c40701 	stmibeq	r4, {r0, r8, r9, sl}^
    c4b8:	5d030000 	stcpl	0, cr0, [r3, #-0]
    c4bc:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    c4c0:	23030000 	movwcs	r0, #12288	; 0x3000
    c4c4:	810701cc 	smlabthi	r7, ip, r1, r0
    c4c8:	03000004 	movweq	r0, #4
    c4cc:	a3190278 	tstge	r9, #120, 4	; 0x80000007
    c4d0:	03000000 	movweq	r0, #0
    c4d4:	0701d023 	streq	sp, [r1, -r3, lsr #32]
    c4d8:	0000056d 	andeq	r0, r0, sp, ror #10
    c4dc:	19027d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp, lr}
    c4e0:	000000a3 	andeq	r0, r0, r3, lsr #1
    c4e4:	01d42303 	bicseq	r2, r4, r3, lsl #6
    c4e8:	5f040a00 	svcpl	0x00040a00
    c4ec:	08000001 	stmdaeq	r0, {r0}
    c4f0:	00049b01 	andeq	r9, r4, r1, lsl #22
    c4f4:	04840900 	streq	r0, [r4], #2304	; 0x900
    c4f8:	a3090000 	movwge	r0, #36864	; 0x9000
    c4fc:	00000000 	andeq	r0, r0, r0
    c500:	048a040a 	streq	r0, [sl], #1034	; 0x40a
    c504:	b3060000 	movwlt	r0, #24576	; 0x6000
    c508:	34000007 	strcc	r0, [r0], #-7
    c50c:	10037e03 	andne	r7, r3, r3, lsl #28
    c510:	00000580 	andeq	r0, r0, r0, lsl #11
    c514:	00018d07 	andeq	r8, r1, r7, lsl #26
    c518:	03820300 	orreq	r0, r2, #0, 6
    c51c:	0000a319 	andeq	sl, r0, r9, lsl r3
    c520:	00230200 	eoreq	r0, r3, r0, lsl #4
    c524:	00089707 	andeq	r9, r8, r7, lsl #14
    c528:	03850300 	orreq	r0, r5, #0, 6
    c52c:	0001591a 	andeq	r5, r1, sl, lsl r9
    c530:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    c534:	0006fc07 	andeq	pc, r6, r7, lsl #24
    c538:	03880300 	orreq	r0, r8, #0, 6
    c53c:	00009719 	andeq	r9, r0, r9, lsl r7
    c540:	08230200 	stmdaeq	r3!, {r9}
    c544:	0004cb07 	andeq	ip, r4, r7, lsl #22
    c548:	038c0300 	orreq	r0, ip, #0, 6
    c54c:	0005931a 	andeq	r9, r5, sl, lsl r3
    c550:	0c230200 	sfmeq	f0, 4, [r3], #-0
    c554:	00016207 	andeq	r6, r1, r7, lsl #4
    c558:	03900300 	orrseq	r0, r0, #0, 6
    c55c:	00009719 	andeq	r9, r0, r9, lsl r7
    c560:	10230200 	eorne	r0, r3, r0, lsl #4
    c564:	00012107 	andeq	r2, r1, r7, lsl #2
    c568:	03930300 	orrseq	r0, r3, #0, 6
    c56c:	00009719 	andeq	r9, r0, r9, lsl r7
    c570:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    c574:	0008cd07 	andeq	ip, r8, r7, lsl #26
    c578:	03980300 	orrseq	r0, r8, #0, 6
    c57c:	0004841a 	andeq	r8, r4, sl, lsl r4
    c580:	18230200 	stmdane	r3!, {r9}
    c584:	0006e307 	andeq	lr, r6, r7, lsl #6
    c588:	03990300 	orrseq	r0, r9, #0, 6
    c58c:	00009719 	andeq	r9, r0, r9, lsl r7
    c590:	1c230200 	sfmne	f0, 4, [r3], #-0
    c594:	0005d307 	andeq	sp, r5, r7, lsl #6
    c598:	039d0300 	orrseq	r0, sp, #0, 6
    c59c:	0005801a 	andeq	r8, r5, sl, lsl r0
    c5a0:	20230200 	eorcs	r0, r3, r0, lsl #4
    c5a4:	0006a007 	andeq	sl, r6, r7
    c5a8:	039e0300 	orrseq	r0, lr, #0, 6
    c5ac:	0005801a 	andeq	r8, r5, sl, lsl r0
    c5b0:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    c5b4:	0001d007 	andeq	sp, r1, r7
    c5b8:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    c5bc:	00009719 	andeq	r9, r0, r9, lsl r7
    c5c0:	28230200 	stmdacs	r3!, {r9}
    c5c4:	0009e007 	andeq	lr, r9, r7
    c5c8:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    c5cc:	0005801a 	andeq	r8, r5, sl, lsl r0
    c5d0:	2c230200 	sfmcs	f0, 4, [r3], #-0
    c5d4:	00042507 	andeq	r2, r4, r7, lsl #10
    c5d8:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    c5dc:	0005801a 	andeq	r8, r5, sl, lsl r0
    c5e0:	30230200 	eorcc	r0, r3, r0, lsl #4
    c5e4:	a1040a00 	tstge	r4, r0, lsl #20
    c5e8:	0b000004 	bleq	c600 <_Min_Stack_Size+0xb600>
    c5ec:	000008ef 	andeq	r0, r0, pc, ror #17
    c5f0:	03028603 	movweq	r8, #9731	; 0x2603
    c5f4:	0000015f 	andeq	r0, r0, pc, asr r1
    c5f8:	0586040a 	streq	r0, [r6, #1034]	; 0x40a
    c5fc:	570c0000 	strpl	r0, [ip, -r0]
    c600:	04000021 	streq	r0, [r0], #-33	; 0xffffffdf
    c604:	00a3215a 	adceq	r2, r3, sl, asr r1
    c608:	01010000 	mrseq	r0, (UNDEF: 1)
    c60c:	0021b40c 	eoreq	fp, r1, ip, lsl #8
    c610:	21600400 	cmncs	r0, r0, lsl #8
    c614:	00000097 	muleq	r0, r7, r0
    c618:	270d0101 	strcs	r0, [sp, -r1, lsl #2]
    c61c:	05000011 	streq	r0, [r0, #-17]	; 0xffffffef
    c620:	93210139 			; <UNDEFINED> instruction: 0x93210139
    c624:	01000005 	tsteq	r0, r5
    c628:	19d90d01 	ldmibne	r9, {r0, r8, sl, fp}^
    c62c:	40050000 	andmi	r0, r5, r0
    c630:	05932101 	ldreq	r2, [r3, #257]	; 0x101
    c634:	01010000 	mrseq	r0, (UNDEF: 1)
    c638:	001aba0d 	andseq	fp, sl, sp, lsl #20
    c63c:	017f0500 	cmneq	pc, r0, lsl #10
    c640:	00009721 	andeq	r9, r0, r1, lsr #14
    c644:	0e010100 	adfeqs	f0, f1, f0
    c648:	00000593 	muleq	r0, r3, r5
    c64c:	000005f2 	strdeq	r0, [r0], -r2
    c650:	0000290f 	andeq	r2, r0, pc, lsl #18
    c654:	0d001f00 	stceq	15, cr1, [r0, #-0]
    c658:	00001dab 	andeq	r1, r0, fp, lsr #27
    c65c:	21018705 	tstcs	r1, r5, lsl #14
    c660:	000005e2 	andeq	r0, r0, r2, ror #11
    c664:	160d0101 	strne	r0, [sp], -r1, lsl #2
    c668:	0500001d 	streq	r0, [r0, #-29]	; 0xffffffe3
    c66c:	a32101ea 			; <UNDEFINED> instruction: 0xa32101ea
    c670:	01000000 	mrseq	r0, (UNDEF: 0)
    c674:	e1011001 	tst	r1, r1
    c678:	01000021 	tsteq	r0, r1, lsr #32
    c67c:	4401074e 	strmi	r0, [r1], #-1870	; 0xfffff8b2
    c680:	c0100027 	andsgt	r0, r0, r7, lsr #32
    c684:	53100028 	tstpl	r0, #40	; 0x28
    c688:	0100004a 	tsteq	r0, sl, asr #32
    c68c:	00000a02 	andeq	r0, r0, r2, lsl #20
    c690:	000eee11 	andeq	lr, lr, r1, lsl lr
    c694:	01510100 	cmpeq	r1, r0, lsl #2
    c698:	00000097 	muleq	r0, r7, r0
    c69c:	00004a77 	andeq	r4, r0, r7, ror sl
    c6a0:	00004a73 	andeq	r4, r0, r3, ror sl
    c6a4:	00197911 	andseq	r7, r9, r1, lsl r9
    c6a8:	12530100 	subsne	r0, r3, #0, 2
    c6ac:	00000593 	muleq	r0, r3, r5
    c6b0:	00004a97 	muleq	r0, r7, sl
    c6b4:	00004a95 	muleq	r0, r5, sl
    c6b8:	0021d111 	eoreq	sp, r1, r1, lsl r1
    c6bc:	12550100 	subsne	r0, r5, #0, 2
    c6c0:	00000593 	muleq	r0, r3, r5
    c6c4:	00004ab0 			; <UNDEFINED> instruction: 0x00004ab0
    c6c8:	00004aaa 	andeq	r4, r0, sl, lsr #21
    c6cc:	0003d012 	andeq	sp, r3, r2, lsl r0
    c6d0:	0007ff00 	andeq	pc, r7, r0, lsl #30
    c6d4:	0eee1100 	cdpeq	1, 14, cr1, cr14, cr0, {0}
    c6d8:	62010000 	andvs	r0, r1, #0
    c6dc:	00009705 	andeq	r9, r0, r5, lsl #14
    c6e0:	004ae300 	subeq	lr, sl, r0, lsl #6
    c6e4:	004adb00 	subeq	sp, sl, r0, lsl #22
    c6e8:	0a021300 	beq	912f0 <SYSTICK_CYCLES+0x682b1>
    c6ec:	274a0000 	strbcs	r0, [sl, -r0]
    c6f0:	4a021000 	bmi	906f8 <SYSTICK_CYCLES+0x676b9>
    c6f4:	50100027 	andspl	r0, r0, r7, lsr #32
    c6f8:	01100027 	tsteq	r0, r7, lsr #32
    c6fc:	06cf0562 	strbeq	r0, [pc], r2, ror #10
    c700:	15140000 	ldrne	r0, [r4, #-0]
    c704:	1d00000a 	stcne	0, cr0, [r0, #-40]	; 0xffffffd8
    c708:	1700004b 	strne	r0, [r0, -fp, asr #32]
    c70c:	1500004b 	strne	r0, [r0, #-75]	; 0xffffffb5
    c710:	00000a40 	andeq	r0, r0, r0, asr #20
    c714:	1000274a 	andne	r2, r0, sl, asr #14
    c718:	00274a05 	eoreq	r4, r7, r5, lsl #20
    c71c:	00274e10 	eoreq	r4, r7, r0, lsl lr
    c720:	02560210 	subseq	r0, r6, #16, 4
    c724:	0a531413 	beq	14d1778 <__RAM_SIZE+0x13d1778>
    c728:	4b480000 	blmi	120c730 <__RAM_SIZE+0x110c730>
    c72c:	4b460000 	blmi	118c734 <__RAM_SIZE+0x108c734>
    c730:	00000000 	andeq	r0, r0, r0
    c734:	000a2313 	andeq	r2, sl, r3, lsl r3
    c738:	00275a00 	eoreq	r5, r7, r0, lsl #20
    c73c:	275a0110 	smmlacs	sl, r0, r1, r0
    c740:	275e1000 	ldrbcs	r1, [lr, -r0]
    c744:	62011000 	andvs	r1, r1, #0
    c748:	0006f605 	andeq	pc, r6, r5, lsl #12
    c74c:	0a321600 	beq	c91f54 <__RAM_SIZE+0xb91f54>
    c750:	4b5d0000 	blmi	174c758 <__RAM_SIZE+0x164c758>
    c754:	4b5b0000 	blmi	16cc75c <__RAM_SIZE+0x15cc75c>
    c758:	13000000 	movwne	r0, #0
    c75c:	00000a23 	andeq	r0, r0, r3, lsr #20
    c760:	1000279a 	mulne	r0, sl, r7
    c764:	00279a01 	eoreq	r9, r7, r1, lsl #20
    c768:	00279e10 	eoreq	r9, r7, r0, lsl lr
    c76c:	05620110 	strbeq	r0, [r2, #-272]!	; 0xfffffef0
    c770:	0000071d 	andeq	r0, r0, sp, lsl r7
    c774:	000a3216 	andeq	r3, sl, r6, lsl r2
    c778:	004b7200 	subeq	r7, fp, r0, lsl #4
    c77c:	004b7000 	subeq	r7, fp, r0
    c780:	02130000 	andseq	r0, r3, #0
    c784:	a400000a 	strge	r0, [r0], #-10
    c788:	01100027 	tsteq	r0, r7, lsr #32
    c78c:	100027a4 	andne	r2, r0, r4, lsr #15
    c790:	100027aa 	andne	r2, r0, sl, lsr #15
    c794:	68056201 	stmdavs	r5, {r0, r9, sp, lr}
    c798:	14000007 	strne	r0, [r0], #-7
    c79c:	00000a15 	andeq	r0, r0, r5, lsl sl
    c7a0:	00004b87 	andeq	r4, r0, r7, lsl #23
    c7a4:	00004b85 	andeq	r4, r0, r5, lsl #23
    c7a8:	000a4015 	andeq	r4, sl, r5, lsl r0
    c7ac:	0027a400 	eoreq	sl, r7, r0, lsl #8
    c7b0:	27a40410 			; <UNDEFINED> instruction: 0x27a40410
    c7b4:	27a81000 	strcs	r1, [r8, r0]!
    c7b8:	56021000 	strpl	r1, [r2], -r0
    c7bc:	53141302 	tstpl	r4, #134217728	; 0x8000000
    c7c0:	9c00000a 	stcls	0, cr0, [r0], {10}
    c7c4:	9a00004b 	bls	c8f8 <_Min_Stack_Size+0xb8f8>
    c7c8:	0000004b 	andeq	r0, r0, fp, asr #32
    c7cc:	0a231300 	beq	8d13d4 <__RAM_SIZE+0x7d13d4>
    c7d0:	27ba0000 	ldrcs	r0, [sl, r0]!
    c7d4:	ba011000 	blt	507dc <SYSTICK_CYCLES+0x2779d>
    c7d8:	be100027 	cdplt	0, 1, cr0, cr0, cr7, {1}
    c7dc:	01100027 	tsteq	r0, r7, lsr #32
    c7e0:	078f0562 	streq	r0, [pc, r2, ror #10]
    c7e4:	32160000 	andscc	r0, r6, #0
    c7e8:	b100000a 	tstlt	r0, sl
    c7ec:	af00004b 	svcge	0x0000004b
    c7f0:	0000004b 	andeq	r0, r0, fp, asr #32
    c7f4:	000a0213 	andeq	r0, sl, r3, lsl r2
    c7f8:	0027c400 	eoreq	ip, r7, r0, lsl #8
    c7fc:	27c40110 	bfics	r0, r0, #2, #3
    c800:	27cc1000 	strbcs	r1, [ip, r0]
    c804:	62011000 	andvs	r1, r1, #0
    c808:	0007da05 	andeq	sp, r7, r5, lsl #20
    c80c:	0a151400 	beq	551814 <__RAM_SIZE+0x451814>
    c810:	4bc60000 	blmi	ff18c818 <__RAM_segment_used_end__+0xc708c818>
    c814:	4bc40000 	blmi	ff10c81c <__RAM_segment_used_end__+0xc700c81c>
    c818:	40150000 	andsmi	r0, r5, r0
    c81c:	c400000a 	strgt	r0, [r0], #-10
    c820:	04100027 	ldreq	r0, [r0], #-39	; 0xffffffd9
    c824:	100027c4 	andne	r2, r0, r4, asr #15
    c828:	100027c8 	andne	r2, r0, r8, asr #15
    c82c:	13025602 	movwne	r5, #9730	; 0x2602
    c830:	000a5314 	andeq	r5, sl, r4, lsl r3
    c834:	004bdb00 	subeq	sp, fp, r0, lsl #22
    c838:	004bd900 	subeq	sp, fp, r0, lsl #18
    c83c:	17000000 	strne	r0, [r0, -r0]
    c840:	100027a4 	andne	r2, r0, r4, lsr #15
    c844:	00000a61 	andeq	r0, r0, r1, ror #20
    c848:	000007ee 	andeq	r0, r0, lr, ror #15
    c84c:	02500118 	subseq	r0, r0, #24, 2
    c850:	19000074 	stmdbne	r0, {r2, r4, r5, r6}
    c854:	100027c4 	andne	r2, r0, r4, asr #15
    c858:	00000a70 	andeq	r0, r0, r0, ror sl
    c85c:	02500118 	subseq	r0, r0, #24, 2
    c860:	00000074 	andeq	r0, r0, r4, ror r0
    c864:	00041812 	andeq	r1, r4, r2, lsl r8
    c868:	00099700 	andeq	r9, r9, r0, lsl #14
    c86c:	0eee1100 	cdpeq	1, 14, cr1, cr14, cr0, {0}
    c870:	b8010000 	stmdalt	r1, {}	; <UNPREDICTABLE>
    c874:	00009709 	andeq	r9, r0, r9, lsl #14
    c878:	004bf400 	subeq	pc, fp, r0, lsl #8
    c87c:	004bee00 	subeq	lr, fp, r0, lsl #28
    c880:	0a021300 	beq	91488 <SYSTICK_CYCLES+0x68449>
    c884:	282a0000 	stmdacs	sl!, {}	; <UNPREDICTABLE>
    c888:	2a021000 	bcs	90890 <SYSTICK_CYCLES+0x67851>
    c88c:	30100028 	andscc	r0, r0, r8, lsr #32
    c890:	01100028 	tsteq	r0, r8, lsr #32
    c894:	086709b8 	stmdaeq	r7!, {r3, r4, r5, r7, r8, fp}^
    c898:	15140000 	ldrne	r0, [r4, #-0]
    c89c:	2300000a 	movwcs	r0, #10
    c8a0:	1d00004c 	stcne	0, cr0, [r0, #-304]	; 0xfffffed0
    c8a4:	1500004c 	strne	r0, [r0, #-76]	; 0xffffffb4
    c8a8:	00000a40 	andeq	r0, r0, r0, asr #20
    c8ac:	1000282a 	andne	r2, r0, sl, lsr #16
    c8b0:	00282a05 	eoreq	r2, r8, r5, lsl #20
    c8b4:	00282e10 	eoreq	r2, r8, r0, lsl lr
    c8b8:	02560210 	subseq	r0, r6, #16, 4
    c8bc:	0a531413 	beq	14d1910 <__RAM_SIZE+0x13d1910>
    c8c0:	4c4e0000 	marmi	acc0, r0, lr
    c8c4:	4c4c0000 	marmi	acc0, r0, ip
    c8c8:	00000000 	andeq	r0, r0, r0
    c8cc:	000a2313 	andeq	r2, sl, r3, lsl r3
    c8d0:	00283800 	eoreq	r3, r8, r0, lsl #16
    c8d4:	28380110 	ldmdacs	r8!, {r4, r8}
    c8d8:	283c1000 	ldmdacs	ip!, {ip}
    c8dc:	b8011000 	stmdalt	r1, {ip}
    c8e0:	00088e09 	andeq	r8, r8, r9, lsl #28
    c8e4:	0a321600 	beq	c920ec <__RAM_SIZE+0xb920ec>
    c8e8:	4c630000 	stclmi	0, cr0, [r3], #-0
    c8ec:	4c610000 	stclmi	0, cr0, [r1], #-0
    c8f0:	13000000 	movwne	r0, #0
    c8f4:	00000a23 	andeq	r0, r0, r3, lsr #20
    c8f8:	10002862 	andne	r2, r0, r2, ror #16
    c8fc:	00286201 	eoreq	r6, r8, r1, lsl #4
    c900:	00286610 	eoreq	r6, r8, r0, lsl r6
    c904:	09b80110 	ldmibeq	r8!, {r4, r8}
    c908:	000008b5 			; <UNDEFINED> instruction: 0x000008b5
    c90c:	000a3216 	andeq	r3, sl, r6, lsl r2
    c910:	004c7800 	subeq	r7, ip, r0, lsl #16
    c914:	004c7600 	subeq	r7, ip, r0, lsl #12
    c918:	02130000 	andseq	r0, r3, #0
    c91c:	6c00000a 	stcvs	0, cr0, [r0], {10}
    c920:	01100028 	tsteq	r0, r8, lsr #32
    c924:	1000286c 	andne	r2, r0, ip, ror #16
    c928:	10002872 	andne	r2, r0, r2, ror r8
    c92c:	0009b801 	andeq	fp, r9, r1, lsl #16
    c930:	14000009 	strne	r0, [r0], #-9
    c934:	00000a15 	andeq	r0, r0, r5, lsl sl
    c938:	00004c8d 	andeq	r4, r0, sp, lsl #25
    c93c:	00004c8b 	andeq	r4, r0, fp, lsl #25
    c940:	000a4015 	andeq	r4, sl, r5, lsl r0
    c944:	00286c00 	eoreq	r6, r8, r0, lsl #24
    c948:	286c0410 	stmdacs	ip!, {r4, sl}^
    c94c:	28701000 	ldmdacs	r0!, {ip}^
    c950:	56021000 	strpl	r1, [r2], -r0
    c954:	53141302 	tstpl	r4, #134217728	; 0x8000000
    c958:	a200000a 	andge	r0, r0, #10
    c95c:	a000004c 	andge	r0, r0, ip, asr #32
    c960:	0000004c 	andeq	r0, r0, ip, asr #32
    c964:	0a231300 	beq	8d156c <__RAM_SIZE+0x7d156c>
    c968:	28820000 	stmcs	r2, {}	; <UNPREDICTABLE>
    c96c:	82011000 	andhi	r1, r1, #0
    c970:	86100028 	ldrhi	r0, [r0], -r8, lsr #32
    c974:	01100028 	tsteq	r0, r8, lsr #32
    c978:	092709b8 	stmdbeq	r7!, {r3, r4, r5, r7, r8, fp}
    c97c:	32160000 	andscc	r0, r6, #0
    c980:	b700000a 	strlt	r0, [r0, -sl]
    c984:	b500004c 	strlt	r0, [r0, #-76]	; 0xffffffb4
    c988:	0000004c 	andeq	r0, r0, ip, asr #32
    c98c:	000a0213 	andeq	r0, sl, r3, lsl r2
    c990:	00288c00 	eoreq	r8, r8, r0, lsl #24
    c994:	288c0110 	stmcs	ip, {r4, r8}
    c998:	28941000 	ldmcs	r4, {ip}
    c99c:	b8011000 	stmdalt	r1, {ip}
    c9a0:	00097209 	andeq	r7, r9, r9, lsl #4
    c9a4:	0a151400 	beq	5519ac <__RAM_SIZE+0x4519ac>
    c9a8:	4ccc0000 	stclmi	0, cr0, [ip], {0}
    c9ac:	4cca0000 	stclmi	0, cr0, [sl], {0}
    c9b0:	40150000 	andsmi	r0, r5, r0
    c9b4:	8c00000a 	stchi	0, cr0, [r0], {10}
    c9b8:	04100028 	ldreq	r0, [r0], #-40	; 0xffffffd8
    c9bc:	1000288c 	andne	r2, r0, ip, lsl #17
    c9c0:	10002890 	mulne	r0, r0, r8
    c9c4:	13025602 	movwne	r5, #9730	; 0x2602
    c9c8:	000a5314 	andeq	r5, sl, r4, lsl r3
    c9cc:	004ce100 	subeq	lr, ip, r0, lsl #2
    c9d0:	004cdf00 	subeq	sp, ip, r0, lsl #30
    c9d4:	17000000 	strne	r0, [r0, -r0]
    c9d8:	1000286c 	andne	r2, r0, ip, ror #16
    c9dc:	00000a61 	andeq	r0, r0, r1, ror #20
    c9e0:	00000986 	andeq	r0, r0, r6, lsl #19
    c9e4:	02500118 	subseq	r0, r0, #24, 2
    c9e8:	19000075 	stmdbne	r0, {r0, r2, r4, r5, r6}
    c9ec:	1000288c 	andne	r2, r0, ip, lsl #17
    c9f0:	00000a70 	andeq	r0, r0, r0, ror sl
    c9f4:	02500118 	subseq	r0, r0, #24, 2
    c9f8:	00000075 	andeq	r0, r0, r5, ror r0
    c9fc:	000a0213 	andeq	r0, sl, r3, lsl r2
    ca00:	00275e00 	eoreq	r5, r7, r0, lsl #28
    ca04:	275e0310 	smmlacs	lr, r0, r3, r0
    ca08:	27641000 	strbcs	r1, [r4, -r0]!
    ca0c:	69011000 	stmdbvs	r1, {ip}
    ca10:	0009e205 	andeq	lr, r9, r5, lsl #4
    ca14:	0a151400 	beq	551a1c <__RAM_SIZE+0x451a1c>
    ca18:	4cf80000 	ldclmi	0, cr0, [r8]
    ca1c:	4cf40000 	ldclmi	0, cr0, [r4]
    ca20:	40150000 	andsmi	r0, r5, r0
    ca24:	5e00000a 	cdppl	0, 0, cr0, cr0, cr10, {0}
    ca28:	06100027 	ldreq	r0, [r0], -r7, lsr #32
    ca2c:	1000275e 	andne	r2, r0, lr, asr r7
    ca30:	10002762 	andne	r2, r0, r2, ror #14
    ca34:	13025602 	movwne	r5, #9730	; 0x2602
    ca38:	000a5314 	andeq	r5, sl, r4, lsl r3
    ca3c:	004d1800 	subeq	r1, sp, r0, lsl #16
    ca40:	004d1600 	subeq	r1, sp, r0, lsl #12
    ca44:	1a000000 	bne	ca4c <_Min_Stack_Size+0xba4c>
    ca48:	00000a23 	andeq	r0, r0, r3, lsr #20
    ca4c:	10002770 	andne	r2, r0, r0, ror r7
    ca50:	0003e801 	andeq	lr, r3, r1, lsl #16
    ca54:	05af0100 	streq	r0, [pc, #256]!	; cb5c <_Min_Stack_Size+0xbb5c>
    ca58:	000a3216 	andeq	r3, sl, r6, lsl r2
    ca5c:	004d3500 	subeq	r3, sp, r0, lsl #10
    ca60:	004d2b00 	subeq	r2, sp, r0, lsl #22
    ca64:	1b000000 	blne	ca6c <_Min_Stack_Size+0xba6c>
    ca68:	00000f24 	andeq	r0, r0, r4, lsr #30
    ca6c:	37025202 	strcc	r5, [r2, -r2, lsl #4]
    ca70:	00009701 	andeq	r9, r0, r1, lsl #14
    ca74:	0a230300 	beq	8cd67c <__RAM_SIZE+0x7cd67c>
    ca78:	ad1c0000 	ldcge	0, cr0, [ip, #-0]
    ca7c:	0200000e 	andeq	r0, r0, #14
    ca80:	97060254 	smlsdls	r6, r4, r2, r0
    ca84:	00000000 	andeq	r0, r0, r0
    ca88:	000e991d 	andeq	r9, lr, sp, lsl r9
    ca8c:	02490200 	subeq	r0, r9, #0, 4
    ca90:	40030137 	andmi	r0, r3, r7, lsr r1
    ca94:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
    ca98:	00000ead 	andeq	r0, r0, sp, lsr #29
    ca9c:	50024902 	andpl	r4, r2, r2, lsl #18
    caa0:	00000097 	muleq	r0, r7, r0
    caa4:	0ec21b00 	vdiveq.f64	d17, d2, d0
    caa8:	32020000 	andcc	r0, r2, #0
    caac:	97013702 	strls	r3, [r1, -r2, lsl #14]
    cab0:	03000000 	movweq	r0, #0
    cab4:	00000a61 	andeq	r0, r0, r1, ror #20
    cab8:	000eb11c 	andeq	fp, lr, ip, lsl r1
    cabc:	02340200 	eorseq	r0, r4, #0, 4
    cac0:	00009706 	andeq	r9, r0, r6, lsl #14
    cac4:	011f0000 	tsteq	pc, r0
    cac8:	001f6e01 	andseq	r6, pc, r1, lsl #28
    cacc:	001f6e00 	andseq	r6, pc, r0, lsl #28
    cad0:	011b0500 	tsteq	fp, r0, lsl #10
    cad4:	01011f0d 	tsteq	r1, sp, lsl #30
    cad8:	00001ec5 	andeq	r1, r0, r5, asr #29
    cadc:	00001ec5 	andeq	r1, r0, r5, asr #29
    cae0:	0d011805 	stceq	8, cr1, [r1, #-20]	; 0xffffffec
    cae4:	00073f00 	andeq	r3, r7, r0, lsl #30
    cae8:	37000200 	strcc	r0, [r0, -r0, lsl #4]
    caec:	04000023 	streq	r0, [r0], #-35	; 0xffffffdd
    caf0:	00003d01 	andeq	r3, r0, r1, lsl #26
    caf4:	22180c00 	andscs	r0, r8, #0, 24
    caf8:	065c0000 	ldrbeq	r0, [ip], -r0
    cafc:	04400000 	strbeq	r0, [r0], #-0
	...
    cb08:	4a600000 	bmi	180cb10 <__RAM_SIZE+0x170cb10>
    cb0c:	04020000 	streq	r0, [r2], #-0
    cb10:	00023907 	andeq	r3, r2, r7, lsl #18
    cb14:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    cb18:	00746e69 	rsbseq	r6, r4, r9, ror #28
    cb1c:	e8050802 	stmda	r5, {r1, fp}
    cb20:	02000004 	andeq	r0, r0, #4
    cb24:	063e0408 	ldrteq	r0, [lr], -r8, lsl #8
    cb28:	01020000 	mrseq	r0, (UNDEF: 2)
    cb2c:	00086d06 	andeq	r6, r8, r6, lsl #26
    cb30:	08010200 	stmdaeq	r1, {r9}
    cb34:	0000086b 	andeq	r0, r0, fp, ror #16
    cb38:	cf050202 	svcgt	0x00050202
    cb3c:	02000006 	andeq	r0, r0, #6
    cb40:	09390702 	ldmdbeq	r9!, {r1, r8, r9, sl}
    cb44:	04020000 	streq	r0, [r2], #-0
    cb48:	0004ed05 	andeq	lr, r4, r5, lsl #26
    cb4c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    cb50:	00000234 	andeq	r0, r0, r4, lsr r2
    cb54:	2f070802 	svccs	0x00070802
    cb58:	04000002 	streq	r0, [r0], #-2
    cb5c:	08010204 	stmdaeq	r1, {r2, r9}
    cb60:	00000874 	andeq	r0, r0, r4, ror r8
    cb64:	0008fa05 	andeq	pc, r8, r5, lsl #20
    cb68:	31730200 	cmncc	r3, r0, lsl #4
    cb6c:	00000078 	andeq	r0, r0, r8, ror r0
    cb70:	00079a05 	andeq	r9, r7, r5, lsl #20
    cb74:	31760200 	cmncc	r6, r0, lsl #4
    cb78:	00000029 	andeq	r0, r0, r9, lsr #32
    cb7c:	00072c05 	andeq	r2, r7, r5, lsl #24
    cb80:	31780200 	cmncc	r8, r0, lsl #4
    cb84:	00000068 	andeq	r0, r0, r8, rrx
    cb88:	00053b06 	andeq	r3, r5, r6, lsl #22
    cb8c:	82031c00 	andhi	r1, r3, #0, 24
    cb90:	01221001 			; <UNDEFINED> instruction: 0x01221001
    cb94:	2d070000 	stccs	0, cr0, [r7, #-0]
    cb98:	03000008 	movweq	r0, #8
    cb9c:	97190186 	ldrls	r0, [r9, -r6, lsl #3]
    cba0:	02000000 	andeq	r0, r0, #0
    cba4:	a0070023 	andge	r0, r7, r3, lsr #32
    cba8:	03000003 	movweq	r0, #3
    cbac:	97190187 	ldrls	r0, [r9, -r7, lsl #3]
    cbb0:	02000000 	andeq	r0, r0, #0
    cbb4:	3d070423 	cfstrscc	mvf0, [r7, #-140]	; 0xffffff74
    cbb8:	03000004 	movweq	r0, #4
    cbbc:	2e1b018a 	mufcs<illegal precision>	f0, f3, #2.0
    cbc0:	02000001 	andeq	r0, r0, #1
    cbc4:	f2070823 	vadd.i8	d0, d7, d19
    cbc8:	03000001 	movweq	r0, #1
    cbcc:	9719018b 	ldrls	r0, [r9, -fp, lsl #3]
    cbd0:	02000000 	andeq	r0, r0, #0
    cbd4:	6f070c23 	svcvs	0x00070c23
    cbd8:	03000009 	movweq	r0, #9
    cbdc:	341a0191 	ldrcc	r0, [sl], #-401	; 0xfffffe6f
    cbe0:	02000001 	andeq	r0, r0, #1
    cbe4:	1b071023 	blne	1d0c78 <__RAM_SIZE+0xd0c78>
    cbe8:	03000000 	movweq	r0, #0
    cbec:	341a0192 	ldrcc	r0, [sl], #-402	; 0xfffffe6e
    cbf0:	02000001 	andeq	r0, r0, #1
    cbf4:	09071423 	stmdbeq	r7, {r0, r1, r5, sl, ip}
    cbf8:	03000006 	movweq	r0, #6
    cbfc:	3a1b0196 	bcc	6cd25c <__RAM_SIZE+0x5cd25c>
    cc00:	02000001 	andeq	r0, r0, #1
    cc04:	08001823 	stmdaeq	r0, {r0, r1, r5, fp, ip}
    cc08:	00012e01 	andeq	r2, r1, r1, lsl #28
    cc0c:	00970900 	addseq	r0, r7, r0, lsl #18
    cc10:	0a000000 	beq	cc18 <_Min_Stack_Size+0xbc18>
    cc14:	00012204 	andeq	r2, r1, r4, lsl #4
    cc18:	a3040a00 	movwge	r0, #18944	; 0x4a00
    cc1c:	0a000000 	beq	cc24 <_Min_Stack_Size+0xbc24>
    cc20:	00013404 	andeq	r3, r1, r4, lsl #8
    cc24:	064a0b00 	strbeq	r0, [sl], -r0, lsl #22
    cc28:	9b030000 	blls	ccc30 <SYSTICK_CYCLES+0xa3bf1>
    cc2c:	00a30301 	adceq	r0, r3, r1, lsl #6
    cc30:	040a0000 	streq	r0, [sl], #-0
    cc34:	0000007f 	andeq	r0, r0, pc, ror r0
    cc38:	00034b06 	andeq	r4, r3, r6, lsl #22
    cc3c:	d603d800 	strle	sp, [r3], -r0, lsl #16
    cc40:	04781001 	ldrbteq	r1, [r8], #-1
    cc44:	2c070000 	stccs	0, cr0, [r7], {-0}
    cc48:	03000009 	movweq	r0, #9
    cc4c:	971901dd 			; <UNDEFINED> instruction: 0x971901dd
    cc50:	02000000 	andeq	r0, r0, #0
    cc54:	9f070023 	svcls	0x00070023
    cc58:	03000007 	movweq	r0, #7
    cc5c:	971901de 			; <UNDEFINED> instruction: 0x971901de
    cc60:	02000000 	andeq	r0, r0, #0
    cc64:	bc070423 	cfstrslt	mvf0, [r7], {35}	; 0x23
    cc68:	03000001 	movweq	r0, #1
    cc6c:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
    cc70:	02000000 	andeq	r0, r0, #0
    cc74:	16070823 	strne	r0, [r7], -r3, lsr #16
    cc78:	03000009 	movweq	r0, #9
    cc7c:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
    cc80:	02000000 	andeq	r0, r0, #0
    cc84:	11070c23 	tstne	r7, r3, lsr #24
    cc88:	03000004 	movweq	r0, #4
    cc8c:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
    cc90:	02000000 	andeq	r0, r0, #0
    cc94:	5a071023 	bpl	1d0d28 <__RAM_SIZE+0xd0d28>
    cc98:	03000009 	movweq	r0, #9
    cc9c:	971901e2 	ldrls	r0, [r9, -r2, ror #3]
    cca0:	02000000 	andeq	r0, r0, #0
    cca4:	e2071423 	and	r1, r7, #587202560	; 0x23000000
    cca8:	03000021 	movweq	r0, #33	; 0x21
    ccac:	971901e3 	ldrls	r0, [r9, -r3, ror #3]
    ccb0:	02000000 	andeq	r0, r0, #0
    ccb4:	25071823 	strcs	r1, [r7, #-2083]	; 0xfffff7dd
    ccb8:	03000006 	movweq	r0, #6
    ccbc:	971901e4 	ldrls	r0, [r9, -r4, ror #3]
    ccc0:	02000000 	andeq	r0, r0, #0
    ccc4:	ba071c23 	blt	1d3d58 <__RAM_SIZE+0xd3d58>
    ccc8:	03000006 	movweq	r0, #6
    cccc:	781a01e8 	ldmdavc	sl, {r3, r5, r6, r7, r8}
    ccd0:	02000004 	andeq	r0, r0, #4
    ccd4:	99072023 	stmdbls	r7, {r0, r1, r5, sp}
    ccd8:	03000001 	movweq	r0, #1
    ccdc:	781a01e9 	ldmdavc	sl, {r0, r3, r5, r6, r7, r8}
    cce0:	02000004 	andeq	r0, r0, #4
    cce4:	b1072423 	tstlt	r7, r3, lsr #8
    cce8:	03000005 	movweq	r0, #5
    ccec:	4d1a01f1 	ldfmis	f0, [sl, #-964]	; 0xfffffc3c
    ccf0:	02000001 	andeq	r0, r0, #1
    ccf4:	d9072823 	stmdble	r7, {r0, r1, r5, fp, sp}
    ccf8:	03000002 	movweq	r0, #2
    ccfc:	8b1901f2 	blhi	64d4cc <__RAM_SIZE+0x54d4cc>
    cd00:	02000000 	andeq	r0, r0, #0
    cd04:	46072c23 	strmi	r2, [r7], -r3, lsr #24
    cd08:	03000002 	movweq	r0, #2
    cd0c:	8b1901f3 	blhi	64d4e0 <__RAM_SIZE+0x54d4e0>
    cd10:	02000000 	andeq	r0, r0, #0
    cd14:	73073023 	movwvc	r3, #28707	; 0x7023
    cd18:	03000001 	movweq	r0, #1
    cd1c:	8b1901f4 	blhi	64d4f4 <__RAM_SIZE+0x54d4f4>
    cd20:	02000000 	andeq	r0, r0, #0
    cd24:	4b073423 	blmi	1d9db8 <__RAM_SIZE+0xd9db8>
    cd28:	03000007 	movweq	r0, #7
    cd2c:	8b1901f5 	blhi	64d508 <__RAM_SIZE+0x54d508>
    cd30:	02000000 	andeq	r0, r0, #0
    cd34:	eb073823 	bl	1dadc8 <__RAM_SIZE+0xdadc8>
    cd38:	03000000 	movweq	r0, #0
    cd3c:	8b1901f6 	blhi	64d51c <__RAM_SIZE+0x54d51c>
    cd40:	02000000 	andeq	r0, r0, #0
    cd44:	5c073c23 	stcpl	12, cr3, [r7], {35}	; 0x23
    cd48:	03000003 	movweq	r0, #3
    cd4c:	8f1b01fb 	svchi	0x001b01fb
    cd50:	02000004 	andeq	r0, r0, #4
    cd54:	52074023 	andpl	r4, r7, #35	; 0x23
    cd58:	03000001 	movweq	r0, #1
    cd5c:	2e1b0203 	cdpcs	2, 1, cr0, cr11, cr3, {0}
    cd60:	02000001 	andeq	r0, r0, #1
    cd64:	07074423 	streq	r4, [r7, -r3, lsr #8]
    cd68:	03000001 	movweq	r0, #1
    cd6c:	97190204 	ldrls	r0, [r9, -r4, lsl #4]
    cd70:	02000000 	andeq	r0, r0, #0
    cd74:	3b074823 	blcc	1dee08 <__RAM_SIZE+0xdee08>
    cd78:	03000003 	movweq	r0, #3
    cd7c:	40190208 	andsmi	r0, r9, r8, lsl #4
    cd80:	02000001 	andeq	r0, r0, #1
    cd84:	ec074c23 	stc	12, cr4, [r7], {35}	; 0x23
    cd88:	03000002 	movweq	r0, #2
    cd8c:	8f1b020e 	svchi	0x001b020e
    cd90:	02000004 	andeq	r0, r0, #4
    cd94:	e9076823 	stmdb	r7, {r0, r1, r5, fp, sp, lr}
    cd98:	03000005 	movweq	r0, #5
    cd9c:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
    cda0:	02000000 	andeq	r0, r0, #0
    cda4:	32076c23 	andcc	r6, r7, #8960	; 0x2300
    cda8:	03000007 	movweq	r0, #7
    cdac:	781a0211 	ldmdavc	sl, {r0, r4, r9}
    cdb0:	02000004 	andeq	r0, r0, #4
    cdb4:	12077023 	andne	r7, r7, #35	; 0x23
    cdb8:	03000002 	movweq	r0, #2
    cdbc:	781a0212 	ldmdavc	sl, {r1, r4, r9}
    cdc0:	02000004 	andeq	r0, r0, #4
    cdc4:	15077423 	strne	r7, [r7, #-1059]	; 0xfffffbdd
    cdc8:	03000007 	movweq	r0, #7
    cdcc:	97190213 			; <UNDEFINED> instruction: 0x97190213
    cdd0:	02000000 	andeq	r0, r0, #0
    cdd4:	c6077823 	strgt	r7, [r7], -r3, lsr #16
    cdd8:	03000003 	movweq	r0, #3
    cddc:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
    cde0:	02000000 	andeq	r0, r0, #0
    cde4:	54077c23 	strpl	r7, [r7], #-3107	; 0xfffff3dd
    cde8:	03000005 	movweq	r0, #5
    cdec:	8b190215 	blhi	64d648 <__RAM_SIZE+0x54d648>
    cdf0:	03000000 	movweq	r0, #0
    cdf4:	07018023 	streq	r8, [r1, -r3, lsr #32]
    cdf8:	000003e8 	andeq	r0, r0, r8, ror #7
    cdfc:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
    ce00:	0000008b 	andeq	r0, r0, fp, lsl #1
    ce04:	01842303 	orreq	r2, r4, r3, lsl #6
    ce08:	0008ff07 	andeq	pc, r8, r7, lsl #30
    ce0c:	021f0300 	andseq	r0, pc, #0, 6
    ce10:	0004781a 	andeq	r7, r4, sl, lsl r8
    ce14:	88230300 	stmdahi	r3!, {r8, r9}
    ce18:	07f00701 	ldrbeq	r0, [r0, r1, lsl #14]!
    ce1c:	20030000 	andcs	r0, r3, r0
    ce20:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    ce24:	23030000 	movwcs	r0, #12288	; 0x3000
    ce28:	c107018c 	smlabbgt	r7, ip, r1, r0
    ce2c:	03000002 	movweq	r0, #2
    ce30:	8b19022e 	blhi	64d6f0 <__RAM_SIZE+0x54d6f0>
    ce34:	03000000 	movweq	r0, #0
    ce38:	07019023 	streq	r9, [r1, -r3, lsr #32]
    ce3c:	00000256 	andeq	r0, r0, r6, asr r2
    ce40:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
    ce44:	0000008b 	andeq	r0, r0, fp, lsl #1
    ce48:	01942303 	orrseq	r2, r4, r3, lsl #6
    ce4c:	00032007 	andeq	r2, r3, r7
    ce50:	02300300 	eorseq	r0, r0, #0, 6
    ce54:	00008b19 	andeq	r8, r0, r9, lsl fp
    ce58:	98230300 	stmdals	r3!, {r8, r9}
    ce5c:	02770701 	rsbseq	r0, r7, #262144	; 0x40000
    ce60:	33030000 	movwcc	r0, #12288	; 0x3000
    ce64:	008b1902 	addeq	r1, fp, r2, lsl #18
    ce68:	23030000 	movwcs	r0, #12288	; 0x3000
    ce6c:	0007019c 	muleq	r7, ip, r1
    ce70:	03000000 	movweq	r0, #0
    ce74:	741a0235 	ldrvc	r0, [sl], #-565	; 0xfffffdcb
    ce78:	03000005 	movweq	r0, #5
    ce7c:	0701a023 	streq	sl, [r1, -r3, lsr #32]
    ce80:	00001bc8 	andeq	r1, r0, r8, asr #23
    ce84:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
    ce88:	00000097 	muleq	r0, r7, r0
    ce8c:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    ce90:	001c8807 	andseq	r8, ip, r7, lsl #16
    ce94:	023d0300 	eorseq	r0, sp, #0, 6
    ce98:	00009719 	andeq	r9, r0, r9, lsl r7
    ce9c:	a8230300 	stmdage	r3!, {r8, r9}
    cea0:	1b410701 	blne	104eaac <__RAM_SIZE+0xf4eaac>
    cea4:	41030000 	mrsmi	r0, (UNDEF: 3)
    cea8:	00971902 	addseq	r1, r7, r2, lsl #18
    ceac:	23030000 	movwcs	r0, #12288	; 0x3000
    ceb0:	3f0701ac 	svccc	0x000701ac
    ceb4:	0300001d 	movweq	r0, #29
    ceb8:	97190245 	ldrls	r0, [r9, -r5, asr #4]
    cebc:	03000000 	movweq	r0, #0
    cec0:	0701b023 	streq	fp, [r1, -r3, lsr #32]
    cec4:	00001c58 	andeq	r1, r0, r8, asr ip
    cec8:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
    cecc:	00000097 	muleq	r0, r7, r0
    ced0:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
    ced4:	0007c307 	andeq	ip, r7, r7, lsl #6
    ced8:	024c0300 	subeq	r0, ip, #0, 6
    cedc:	0004781a 	andeq	r7, r4, sl, lsl r8
    cee0:	b8230300 	stmdalt	r3!, {r8, r9}
    cee4:	1d170701 	ldcne	7, cr0, [r7, #-4]
    cee8:	4f030000 	svcmi	0x00030000
    ceec:	00971902 	addseq	r1, r7, r2, lsl #18
    cef0:	23030000 	movwcs	r0, #12288	; 0x3000
    cef4:	190701bc 	stmdbne	r7, {r2, r3, r4, r5, r7, r8}
    cef8:	0300001b 	movweq	r0, #27
    cefc:	97190252 			; <UNDEFINED> instruction: 0x97190252
    cf00:	03000000 	movweq	r0, #0
    cf04:	0701c023 	streq	ip, [r1, -r3, lsr #32]
    cf08:	00001a96 	muleq	r0, r6, sl
    cf0c:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
    cf10:	00000097 	muleq	r0, r7, r0
    cf14:	01c42303 	biceq	r2, r4, r3, lsl #6
    cf18:	001bec07 	andseq	lr, fp, r7, lsl #24
    cf1c:	02590300 	subseq	r0, r9, #0, 6
    cf20:	00009719 	andeq	r9, r0, r9, lsl r7
    cf24:	c8230300 	stmdagt	r3!, {r8, r9}
    cf28:	09c40701 	stmibeq	r4, {r0, r8, r9, sl}^
    cf2c:	5d030000 	stcpl	0, cr0, [r3, #-0]
    cf30:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    cf34:	23030000 	movwcs	r0, #12288	; 0x3000
    cf38:	810701cc 	smlabthi	r7, ip, r1, r0
    cf3c:	03000004 	movweq	r0, #4
    cf40:	97190278 			; <UNDEFINED> instruction: 0x97190278
    cf44:	03000000 	movweq	r0, #0
    cf48:	0701d023 	streq	sp, [r1, -r3, lsr #32]
    cf4c:	0000056d 	andeq	r0, r0, sp, ror #10
    cf50:	19027d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp, lr}
    cf54:	00000097 	muleq	r0, r7, r0
    cf58:	01d42303 	bicseq	r2, r4, r3, lsl #6
    cf5c:	53040a00 	movwpl	r0, #18944	; 0x4a00
    cf60:	08000001 	stmdaeq	r0, {r0}
    cf64:	00048f01 	andeq	r8, r4, r1, lsl #30
    cf68:	04780900 	ldrbteq	r0, [r8], #-2304	; 0xfffff700
    cf6c:	97090000 	strls	r0, [r9, -r0]
    cf70:	00000000 	andeq	r0, r0, r0
    cf74:	047e040a 	ldrbteq	r0, [lr], #-1034	; 0xfffffbf6
    cf78:	b3060000 	movwlt	r0, #24576	; 0x6000
    cf7c:	34000007 	strcc	r0, [r0], #-7
    cf80:	10037e03 	andne	r7, r3, r3, lsl #28
    cf84:	00000574 	andeq	r0, r0, r4, ror r5
    cf88:	00018d07 	andeq	r8, r1, r7, lsl #26
    cf8c:	03820300 	orreq	r0, r2, #0, 6
    cf90:	00009719 	andeq	r9, r0, r9, lsl r7
    cf94:	00230200 	eoreq	r0, r3, r0, lsl #4
    cf98:	00089707 	andeq	r9, r8, r7, lsl #14
    cf9c:	03850300 	orreq	r0, r5, #0, 6
    cfa0:	00014d1a 	andeq	r4, r1, sl, lsl sp
    cfa4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    cfa8:	0006fc07 	andeq	pc, r6, r7, lsl #24
    cfac:	03880300 	orreq	r0, r8, #0, 6
    cfb0:	00008b19 	andeq	r8, r0, r9, lsl fp
    cfb4:	08230200 	stmdaeq	r3!, {r9}
    cfb8:	0004cb07 	andeq	ip, r4, r7, lsl #22
    cfbc:	038c0300 	orreq	r0, ip, #0, 6
    cfc0:	0005871a 	andeq	r8, r5, sl, lsl r7
    cfc4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    cfc8:	00016207 	andeq	r6, r1, r7, lsl #4
    cfcc:	03900300 	orrseq	r0, r0, #0, 6
    cfd0:	00008b19 	andeq	r8, r0, r9, lsl fp
    cfd4:	10230200 	eorne	r0, r3, r0, lsl #4
    cfd8:	00012107 	andeq	r2, r1, r7, lsl #2
    cfdc:	03930300 	orrseq	r0, r3, #0, 6
    cfe0:	00008b19 	andeq	r8, r0, r9, lsl fp
    cfe4:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    cfe8:	0008cd07 	andeq	ip, r8, r7, lsl #26
    cfec:	03980300 	orrseq	r0, r8, #0, 6
    cff0:	0004781a 	andeq	r7, r4, sl, lsl r8
    cff4:	18230200 	stmdane	r3!, {r9}
    cff8:	0006e307 	andeq	lr, r6, r7, lsl #6
    cffc:	03990300 	orrseq	r0, r9, #0, 6
    d000:	00008b19 	andeq	r8, r0, r9, lsl fp
    d004:	1c230200 	sfmne	f0, 4, [r3], #-0
    d008:	0005d307 	andeq	sp, r5, r7, lsl #6
    d00c:	039d0300 	orrseq	r0, sp, #0, 6
    d010:	0005741a 	andeq	r7, r5, sl, lsl r4
    d014:	20230200 	eorcs	r0, r3, r0, lsl #4
    d018:	0006a007 	andeq	sl, r6, r7
    d01c:	039e0300 	orrseq	r0, lr, #0, 6
    d020:	0005741a 	andeq	r7, r5, sl, lsl r4
    d024:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    d028:	0001d007 	andeq	sp, r1, r7
    d02c:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    d030:	00008b19 	andeq	r8, r0, r9, lsl fp
    d034:	28230200 	stmdacs	r3!, {r9}
    d038:	0009e007 	andeq	lr, r9, r7
    d03c:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    d040:	0005741a 	andeq	r7, r5, sl, lsl r4
    d044:	2c230200 	sfmcs	f0, 4, [r3], #-0
    d048:	00042507 	andeq	r2, r4, r7, lsl #10
    d04c:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    d050:	0005741a 	andeq	r7, r5, sl, lsl r4
    d054:	30230200 	eorcc	r0, r3, r0, lsl #4
    d058:	95040a00 	strls	r0, [r4, #-2560]	; 0xfffff600
    d05c:	0b000004 	bleq	d074 <_Min_Stack_Size+0xc074>
    d060:	000008ef 	andeq	r0, r0, pc, ror #17
    d064:	03028603 	movweq	r8, #9731	; 0x2603
    d068:	00000153 	andeq	r0, r0, r3, asr r1
    d06c:	057a040a 	ldrbeq	r0, [sl, #-1034]!	; 0xfffffbf6
    d070:	950c0000 	strls	r0, [ip, #-0]
    d074:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
    d078:	972101f7 			; <UNDEFINED> instruction: 0x972101f7
    d07c:	01000000 	mrseq	r0, (UNDEF: 0)
    d080:	f7010d01 			; <UNDEFINED> instruction: 0xf7010d01
    d084:	01000021 	tsteq	r0, r1, lsr #32
    d088:	c001074e 	andgt	r0, r1, lr, asr #14
    d08c:	fc100028 	ldc2	0, cr0, [r0], {40}	; 0x28
    d090:	74100028 	ldrvc	r0, [r0], #-40	; 0xffffffd8
    d094:	0100004d 	tsteq	r0, sp, asr #32
    d098:	000006d4 	ldrdeq	r0, [r0], -r4
    d09c:	00220a0e 	eoreq	r0, r2, lr, lsl #20
    d0a0:	204e0100 	subcs	r0, lr, r0, lsl #2
    d0a4:	00000097 	muleq	r0, r7, r0
    d0a8:	00004d9c 	muleq	r0, ip, sp
    d0ac:	00004d94 	muleq	r0, r4, sp
    d0b0:	000eee0f 	andeq	lr, lr, pc, lsl #28
    d0b4:	01510100 	cmpeq	r1, r0, lsl #2
    d0b8:	0000008b 	andeq	r0, r0, fp, lsl #1
    d0bc:	00004dd8 	ldrdeq	r4, [r0], -r8
    d0c0:	00004dd6 	ldrdeq	r4, [r0], -r6
    d0c4:	0019790f 	andseq	r7, r9, pc, lsl #18
    d0c8:	12530100 	subsne	r0, r3, #0, 2
    d0cc:	00000587 	andeq	r0, r0, r7, lsl #11
    d0d0:	00004df3 	strdeq	r4, [r0], -r3
    d0d4:	00004deb 	andeq	r4, r0, fp, ror #27
    d0d8:	0002f60f 	andeq	pc, r2, pc, lsl #12
    d0dc:	13540100 	cmpne	r4, #0, 2
    d0e0:	0000048f 	andeq	r0, r0, pc, lsl #9
    d0e4:	00004e2f 	andeq	r4, r0, pc, lsr #28
    d0e8:	00004e2d 	andeq	r4, r0, sp, lsr #28
    d0ec:	00048b0f 	andeq	r8, r4, pc, lsl #22
    d0f0:	11550100 	cmpne	r5, r0, lsl #2
    d0f4:	00000097 	muleq	r0, r7, r0
    d0f8:	00004e44 	andeq	r4, r0, r4, asr #28
    d0fc:	00004e42 	andeq	r4, r0, r2, asr #28
    d100:	0006d410 	andeq	sp, r6, r0, lsl r4
    d104:	0028c200 	eoreq	ip, r8, r0, lsl #4
    d108:	28c20610 	stmiacs	r2, {r4, r9, sl}^
    d10c:	28c81000 	stmiacs	r8, {ip}^
    d110:	5c011000 	stcpl	0, cr1, [r1], {-0}
    d114:	00066605 	andeq	r6, r6, r5, lsl #12
    d118:	06e71100 	strbteq	r1, [r7], r0, lsl #2
    d11c:	4e5a0000 	cdpmi	0, 5, cr0, cr10, cr0, {0}
    d120:	4e580000 	cdpmi	0, 5, cr0, cr8, cr0, {0}
    d124:	12120000 	andsne	r0, r2, #0
    d128:	c2000007 	andgt	r0, r0, #7
    d12c:	09100028 	ldmdbeq	r0, {r3, r5}
    d130:	100028c2 	andne	r2, r0, r2, asr #17
    d134:	100028c6 	andne	r2, r0, r6, asr #17
    d138:	13025602 	movwne	r5, #9730	; 0x2602
    d13c:	00072511 	andeq	r2, r7, r1, lsl r5
    d140:	004e6f00 	subeq	r6, lr, r0, lsl #30
    d144:	004e6d00 	subeq	r6, lr, r0, lsl #26
    d148:	10000000 	andne	r0, r0, r0
    d14c:	000006f5 	strdeq	r0, [r0], -r5
    d150:	100028e8 	andne	r2, r0, r8, ror #17
    d154:	0028e801 	eoreq	lr, r8, r1, lsl #16
    d158:	0028ec10 	eoreq	lr, r8, r0, lsl ip
    d15c:	09a20110 	stmibeq	r2!, {r4, r8}
    d160:	0000068d 	andeq	r0, r0, sp, lsl #13
    d164:	00070413 	andeq	r0, r7, r3, lsl r4
    d168:	004e8400 	subeq	r8, lr, r0, lsl #8
    d16c:	004e8200 	subeq	r8, lr, r0, lsl #4
    d170:	f5100000 			; <UNDEFINED> instruction: 0xf5100000
    d174:	f2000006 	vhadd.s8	d0, d0, d6
    d178:	01100028 	tsteq	r0, r8, lsr #32
    d17c:	100028f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    d180:	100028fc 	strdne	r2, [r0], -ip
    d184:	b4096801 	strlt	r6, [r9], #-2049	; 0xfffff7ff
    d188:	13000006 	movwne	r0, #6
    d18c:	00000704 	andeq	r0, r0, r4, lsl #14
    d190:	00004e99 	muleq	r0, r9, lr
    d194:	00004e97 	muleq	r0, r7, lr
    d198:	28e81400 	stmiacs	r8!, {sl, ip}^
    d19c:	06ca1000 	strbeq	r1, [sl], r0
    d1a0:	01150000 	tsteq	r5, r0
    d1a4:	01f30350 	mvnseq	r0, r0, asr r3
    d1a8:	51011550 	tstpl	r1, r0, asr r5
    d1ac:	16003001 	strne	r3, [r0], -r1
    d1b0:	100028f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
    d1b4:	00000733 	andeq	r0, r0, r3, lsr r7
    d1b8:	0f241700 	svceq	0x00241700
    d1bc:	52020000 	andpl	r0, r2, #0
    d1c0:	8b013702 	blhi	5add0 <SYSTICK_CYCLES+0x31d91>
    d1c4:	03000000 	movweq	r0, #0
    d1c8:	000006f5 	strdeq	r0, [r0], -r5
    d1cc:	000ead18 	andeq	sl, lr, r8, lsl sp
    d1d0:	02540200 	subseq	r0, r4, #0, 4
    d1d4:	00008b06 	andeq	r8, r0, r6, lsl #22
    d1d8:	99190000 	ldmdbls	r9, {}	; <UNPREDICTABLE>
    d1dc:	0200000e 	andeq	r0, r0, #14
    d1e0:	01370249 	teqeq	r7, r9, asr #4
    d1e4:	00071203 	andeq	r1, r7, r3, lsl #4
    d1e8:	0ead1a00 	vfmaeq.f32	s2, s26, s0
    d1ec:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    d1f0:	008b5002 	addeq	r5, fp, r2
    d1f4:	17000000 	strne	r0, [r0, -r0]
    d1f8:	00000ec2 	andeq	r0, r0, r2, asr #29
    d1fc:	37023202 	strcc	r3, [r2, -r2, lsl #4]
    d200:	00008b01 	andeq	r8, r0, r1, lsl #22
    d204:	07330300 	ldreq	r0, [r3, -r0, lsl #6]!
    d208:	b1180000 	tstlt	r8, r0
    d20c:	0200000e 	andeq	r0, r0, #14
    d210:	8b060234 	blhi	18dae8 <__RAM_SIZE+0x8dae8>
    d214:	00000000 	andeq	r0, r0, r0
    d218:	6401011b 	strvs	r0, [r1], #-283	; 0xfffffee5
    d21c:	64000010 	strvs	r0, [r0], #-16
    d220:	04000010 	streq	r0, [r0], #-16
    d224:	000d011e 	andeq	r0, sp, lr, lsl r1
    d228:	000006b1 			; <UNDEFINED> instruction: 0x000006b1
    d22c:	24dc0002 	ldrbcs	r0, [ip], #2
    d230:	01040000 	mrseq	r0, (UNDEF: 4)
    d234:	0000003d 	andeq	r0, r0, sp, lsr r0
    d238:	0022500c 	eoreq	r5, r2, ip
    d23c:	00065c00 	andeq	r5, r6, r0, lsl #24
    d240:	00045000 	andeq	r5, r4, r0
	...
    d24c:	004be000 	subeq	lr, fp, r0
    d250:	07040200 	streq	r0, [r4, -r0, lsl #4]
    d254:	00000239 	andeq	r0, r0, r9, lsr r2
    d258:	69050403 	stmdbvs	r5, {r0, r1, sl}
    d25c:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    d260:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    d264:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    d268:	00063e04 	andeq	r3, r6, r4, lsl #28
    d26c:	06010200 	streq	r0, [r1], -r0, lsl #4
    d270:	0000086d 	andeq	r0, r0, sp, ror #16
    d274:	6b080102 	blvs	20d684 <__RAM_SIZE+0x10d684>
    d278:	02000008 	andeq	r0, r0, #8
    d27c:	06cf0502 	strbeq	r0, [pc], r2, lsl #10
    d280:	02020000 	andeq	r0, r2, #0
    d284:	00093907 	andeq	r3, r9, r7, lsl #18
    d288:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    d28c:	000004ed 	andeq	r0, r0, sp, ror #9
    d290:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    d294:	02000002 	andeq	r0, r0, #2
    d298:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    d29c:	04040000 	streq	r0, [r4], #-0
    d2a0:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    d2a4:	05000008 	streq	r0, [r0, #-8]
    d2a8:	000008fa 	strdeq	r0, [r0], -sl
    d2ac:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    d2b0:	05000000 	streq	r0, [r0, #-0]
    d2b4:	0000079a 	muleq	r0, sl, r7
    d2b8:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    d2bc:	05000000 	streq	r0, [r0, #-0]
    d2c0:	0000072c 	andeq	r0, r0, ip, lsr #14
    d2c4:	68317802 	ldmdavs	r1!, {r1, fp, ip, sp, lr}
    d2c8:	06000000 	streq	r0, [r0], -r0
    d2cc:	0000053b 	andeq	r0, r0, fp, lsr r5
    d2d0:	0182031c 	orreq	r0, r2, ip, lsl r3
    d2d4:	00012210 	andeq	r2, r1, r0, lsl r2
    d2d8:	082d0700 	stmdaeq	sp!, {r8, r9, sl}
    d2dc:	86030000 	strhi	r0, [r3], -r0
    d2e0:	00971901 	addseq	r1, r7, r1, lsl #18
    d2e4:	23020000 	movwcs	r0, #8192	; 0x2000
    d2e8:	03a00700 	moveq	r0, #0, 14
    d2ec:	87030000 	strhi	r0, [r3, -r0]
    d2f0:	00971901 	addseq	r1, r7, r1, lsl #18
    d2f4:	23020000 	movwcs	r0, #8192	; 0x2000
    d2f8:	043d0704 	ldrteq	r0, [sp], #-1796	; 0xfffff8fc
    d2fc:	8a030000 	bhi	cd304 <SYSTICK_CYCLES+0xa42c5>
    d300:	012e1b01 			; <UNDEFINED> instruction: 0x012e1b01
    d304:	23020000 	movwcs	r0, #8192	; 0x2000
    d308:	01f20708 	mvnseq	r0, r8, lsl #14
    d30c:	8b030000 	blhi	cd314 <SYSTICK_CYCLES+0xa42d5>
    d310:	00971901 	addseq	r1, r7, r1, lsl #18
    d314:	23020000 	movwcs	r0, #8192	; 0x2000
    d318:	096f070c 	stmdbeq	pc!, {r2, r3, r8, r9, sl}^	; <UNPREDICTABLE>
    d31c:	91030000 	mrsls	r0, (UNDEF: 3)
    d320:	01341a01 	teqeq	r4, r1, lsl #20
    d324:	23020000 	movwcs	r0, #8192	; 0x2000
    d328:	001b0710 	andseq	r0, fp, r0, lsl r7
    d32c:	92030000 	andls	r0, r3, #0
    d330:	01341a01 	teqeq	r4, r1, lsl #20
    d334:	23020000 	movwcs	r0, #8192	; 0x2000
    d338:	06090714 			; <UNDEFINED> instruction: 0x06090714
    d33c:	96030000 	strls	r0, [r3], -r0
    d340:	013a1b01 	teqeq	sl, r1, lsl #22
    d344:	23020000 	movwcs	r0, #8192	; 0x2000
    d348:	01080018 	tsteq	r8, r8, lsl r0
    d34c:	0000012e 	andeq	r0, r0, lr, lsr #2
    d350:	00009709 	andeq	r9, r0, r9, lsl #14
    d354:	040a0000 	streq	r0, [sl], #-0
    d358:	00000122 	andeq	r0, r0, r2, lsr #2
    d35c:	00a3040a 	adceq	r0, r3, sl, lsl #8
    d360:	040a0000 	streq	r0, [sl], #-0
    d364:	00000134 	andeq	r0, r0, r4, lsr r1
    d368:	00064a0b 	andeq	r4, r6, fp, lsl #20
    d36c:	019b0300 	orrseq	r0, fp, r0, lsl #6
    d370:	0000a303 	andeq	sl, r0, r3, lsl #6
    d374:	7f040a00 	svcvc	0x00040a00
    d378:	06000000 	streq	r0, [r0], -r0
    d37c:	0000034b 	andeq	r0, r0, fp, asr #6
    d380:	01d603d8 	ldrsbeq	r0, [r6, #56]	; 0x38
    d384:	00047810 	andeq	r7, r4, r0, lsl r8
    d388:	092c0700 	stmdbeq	ip!, {r8, r9, sl}
    d38c:	dd030000 	stcle	0, cr0, [r3, #-0]
    d390:	00971901 	addseq	r1, r7, r1, lsl #18
    d394:	23020000 	movwcs	r0, #8192	; 0x2000
    d398:	079f0700 	ldreq	r0, [pc, r0, lsl #14]
    d39c:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    d3a0:	00971901 	addseq	r1, r7, r1, lsl #18
    d3a4:	23020000 	movwcs	r0, #8192	; 0x2000
    d3a8:	01bc0704 			; <UNDEFINED> instruction: 0x01bc0704
    d3ac:	df030000 	svcle	0x00030000
    d3b0:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    d3b4:	23020000 	movwcs	r0, #8192	; 0x2000
    d3b8:	09160708 	ldmdbeq	r6, {r3, r8, r9, sl}
    d3bc:	e0030000 	and	r0, r3, r0
    d3c0:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    d3c4:	23020000 	movwcs	r0, #8192	; 0x2000
    d3c8:	0411070c 	ldreq	r0, [r1], #-1804	; 0xfffff8f4
    d3cc:	e1030000 	mrs	r0, (UNDEF: 3)
    d3d0:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    d3d4:	23020000 	movwcs	r0, #8192	; 0x2000
    d3d8:	095a0710 	ldmdbeq	sl, {r4, r8, r9, sl}^
    d3dc:	e2030000 	and	r0, r3, #0
    d3e0:	00971901 	addseq	r1, r7, r1, lsl #18
    d3e4:	23020000 	movwcs	r0, #8192	; 0x2000
    d3e8:	21e20714 	mvncs	r0, r4, lsl r7
    d3ec:	e3030000 	movw	r0, #12288	; 0x3000
    d3f0:	00971901 	addseq	r1, r7, r1, lsl #18
    d3f4:	23020000 	movwcs	r0, #8192	; 0x2000
    d3f8:	06250718 			; <UNDEFINED> instruction: 0x06250718
    d3fc:	e4030000 	str	r0, [r3], #-0
    d400:	00971901 	addseq	r1, r7, r1, lsl #18
    d404:	23020000 	movwcs	r0, #8192	; 0x2000
    d408:	06ba071c 	ssateq	r0, #27, ip, lsl #14
    d40c:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    d410:	04781a01 	ldrbteq	r1, [r8], #-2561	; 0xfffff5ff
    d414:	23020000 	movwcs	r0, #8192	; 0x2000
    d418:	01990720 	orrseq	r0, r9, r0, lsr #14
    d41c:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    d420:	04781a01 	ldrbteq	r1, [r8], #-2561	; 0xfffff5ff
    d424:	23020000 	movwcs	r0, #8192	; 0x2000
    d428:	05b10724 	ldreq	r0, [r1, #1828]!	; 0x724
    d42c:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    d430:	014d1a01 	cmpeq	sp, r1, lsl #20
    d434:	23020000 	movwcs	r0, #8192	; 0x2000
    d438:	02d90728 	sbcseq	r0, r9, #40, 14	; 0xa00000
    d43c:	f2030000 	vhadd.s8	d0, d3, d0
    d440:	008b1901 	addeq	r1, fp, r1, lsl #18
    d444:	23020000 	movwcs	r0, #8192	; 0x2000
    d448:	0246072c 	subeq	r0, r6, #44, 14	; 0xb00000
    d44c:	f3030000 	vhadd.u8	d0, d3, d0
    d450:	008b1901 	addeq	r1, fp, r1, lsl #18
    d454:	23020000 	movwcs	r0, #8192	; 0x2000
    d458:	01730730 	cmneq	r3, r0, lsr r7
    d45c:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    d460:	008b1901 	addeq	r1, fp, r1, lsl #18
    d464:	23020000 	movwcs	r0, #8192	; 0x2000
    d468:	074b0734 	smlaldxeq	r0, fp, r4, r7
    d46c:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    d470:	008b1901 	addeq	r1, fp, r1, lsl #18
    d474:	23020000 	movwcs	r0, #8192	; 0x2000
    d478:	00eb0738 	rsceq	r0, fp, r8, lsr r7
    d47c:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    d480:	008b1901 	addeq	r1, fp, r1, lsl #18
    d484:	23020000 	movwcs	r0, #8192	; 0x2000
    d488:	035c073c 	cmpeq	ip, #60, 14	; 0xf00000
    d48c:	fb030000 	blx	cd496 <SYSTICK_CYCLES+0xa4457>
    d490:	048f1b01 	streq	r1, [pc], #2817	; d498 <_Min_Stack_Size+0xc498>
    d494:	23020000 	movwcs	r0, #8192	; 0x2000
    d498:	01520740 	cmpeq	r2, r0, asr #14
    d49c:	03030000 	movweq	r0, #12288	; 0x3000
    d4a0:	012e1b02 			; <UNDEFINED> instruction: 0x012e1b02
    d4a4:	23020000 	movwcs	r0, #8192	; 0x2000
    d4a8:	01070744 	tsteq	r7, r4, asr #14
    d4ac:	04030000 	streq	r0, [r3], #-0
    d4b0:	00971902 	addseq	r1, r7, r2, lsl #18
    d4b4:	23020000 	movwcs	r0, #8192	; 0x2000
    d4b8:	033b0748 	teqeq	fp, #72, 14	; 0x1200000
    d4bc:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    d4c0:	01401902 	cmpeq	r0, r2, lsl #18
    d4c4:	23020000 	movwcs	r0, #8192	; 0x2000
    d4c8:	02ec074c 	rsceq	r0, ip, #76, 14	; 0x1300000
    d4cc:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    d4d0:	048f1b02 	streq	r1, [pc], #2818	; d4d8 <_Min_Stack_Size+0xc4d8>
    d4d4:	23020000 	movwcs	r0, #8192	; 0x2000
    d4d8:	05e90768 	strbeq	r0, [r9, #1896]!	; 0x768
    d4dc:	0f030000 	svceq	0x00030000
    d4e0:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    d4e4:	23020000 	movwcs	r0, #8192	; 0x2000
    d4e8:	0732076c 	ldreq	r0, [r2, -ip, ror #14]!
    d4ec:	11030000 	mrsne	r0, (UNDEF: 3)
    d4f0:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    d4f4:	23020000 	movwcs	r0, #8192	; 0x2000
    d4f8:	02120770 	andseq	r0, r2, #112, 14	; 0x1c00000
    d4fc:	12030000 	andne	r0, r3, #0
    d500:	04781a02 	ldrbteq	r1, [r8], #-2562	; 0xfffff5fe
    d504:	23020000 	movwcs	r0, #8192	; 0x2000
    d508:	07150774 			; <UNDEFINED> instruction: 0x07150774
    d50c:	13030000 	movwne	r0, #12288	; 0x3000
    d510:	00971902 	addseq	r1, r7, r2, lsl #18
    d514:	23020000 	movwcs	r0, #8192	; 0x2000
    d518:	03c60778 	biceq	r0, r6, #120, 14	; 0x1e00000
    d51c:	14030000 	strne	r0, [r3], #-0
    d520:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    d524:	23020000 	movwcs	r0, #8192	; 0x2000
    d528:	0554077c 	ldrbeq	r0, [r4, #-1916]	; 0xfffff884
    d52c:	15030000 	strne	r0, [r3, #-0]
    d530:	008b1902 	addeq	r1, fp, r2, lsl #18
    d534:	23030000 	movwcs	r0, #12288	; 0x3000
    d538:	e8070180 	stmda	r7, {r7, r8}
    d53c:	03000003 	movweq	r0, #3
    d540:	8b190216 	blhi	64dda0 <__RAM_SIZE+0x54dda0>
    d544:	03000000 	movweq	r0, #0
    d548:	07018423 	streq	r8, [r1, -r3, lsr #8]
    d54c:	000008ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    d550:	1a021f03 	bne	95164 <SYSTICK_CYCLES+0x6c125>
    d554:	00000478 	andeq	r0, r0, r8, ror r4
    d558:	01882303 	orreq	r2, r8, r3, lsl #6
    d55c:	0007f007 	andeq	pc, r7, r7
    d560:	02200300 	eoreq	r0, r0, #0, 6
    d564:	0004781a 	andeq	r7, r4, sl, lsl r8
    d568:	8c230300 	stchi	3, cr0, [r3], #-0
    d56c:	02c10701 	sbceq	r0, r1, #262144	; 0x40000
    d570:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    d574:	008b1902 	addeq	r1, fp, r2, lsl #18
    d578:	23030000 	movwcs	r0, #12288	; 0x3000
    d57c:	56070190 			; <UNDEFINED> instruction: 0x56070190
    d580:	03000002 	movweq	r0, #2
    d584:	8b19022f 	blhi	64de48 <__RAM_SIZE+0x54de48>
    d588:	03000000 	movweq	r0, #0
    d58c:	07019423 	streq	r9, [r1, -r3, lsr #8]
    d590:	00000320 	andeq	r0, r0, r0, lsr #6
    d594:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    d598:	0000008b 	andeq	r0, r0, fp, lsl #1
    d59c:	01982303 	orrseq	r2, r8, r3, lsl #6
    d5a0:	00027707 	andeq	r7, r2, r7, lsl #14
    d5a4:	02330300 	eorseq	r0, r3, #0, 6
    d5a8:	00008b19 	andeq	r8, r0, r9, lsl fp
    d5ac:	9c230300 	stcls	3, cr0, [r3], #-0
    d5b0:	00000701 	andeq	r0, r0, r1, lsl #14
    d5b4:	35030000 	strcc	r0, [r3, #-0]
    d5b8:	05741a02 	ldrbeq	r1, [r4, #-2562]!	; 0xfffff5fe
    d5bc:	23030000 	movwcs	r0, #12288	; 0x3000
    d5c0:	c80701a0 	stmdagt	r7, {r5, r7, r8}
    d5c4:	0300001b 	movweq	r0, #27
    d5c8:	9719023a 			; <UNDEFINED> instruction: 0x9719023a
    d5cc:	03000000 	movweq	r0, #0
    d5d0:	0701a423 	streq	sl, [r1, -r3, lsr #8]
    d5d4:	00001c88 	andeq	r1, r0, r8, lsl #25
    d5d8:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    d5dc:	00000097 	muleq	r0, r7, r0
    d5e0:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    d5e4:	001b4107 	andseq	r4, fp, r7, lsl #2
    d5e8:	02410300 	subeq	r0, r1, #0, 6
    d5ec:	00009719 	andeq	r9, r0, r9, lsl r7
    d5f0:	ac230300 	stcge	3, cr0, [r3], #-0
    d5f4:	1d3f0701 	ldcne	7, cr0, [pc, #-4]!	; d5f8 <_Min_Stack_Size+0xc5f8>
    d5f8:	45030000 	strmi	r0, [r3, #-0]
    d5fc:	00971902 	addseq	r1, r7, r2, lsl #18
    d600:	23030000 	movwcs	r0, #12288	; 0x3000
    d604:	580701b0 	stmdapl	r7, {r4, r5, r7, r8}
    d608:	0300001c 	movweq	r0, #28
    d60c:	97190248 	ldrls	r0, [r9, -r8, asr #4]
    d610:	03000000 	movweq	r0, #0
    d614:	0701b423 	streq	fp, [r1, -r3, lsr #8]
    d618:	000007c3 	andeq	r0, r0, r3, asr #15
    d61c:	1a024c03 	bne	a0630 <SYSTICK_CYCLES+0x775f1>
    d620:	00000478 	andeq	r0, r0, r8, ror r4
    d624:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    d628:	001d1707 	andseq	r1, sp, r7, lsl #14
    d62c:	024f0300 	subeq	r0, pc, #0, 6
    d630:	00009719 	andeq	r9, r0, r9, lsl r7
    d634:	bc230300 	stclt	3, cr0, [r3], #-0
    d638:	1b190701 	blne	64f244 <__RAM_SIZE+0x54f244>
    d63c:	52030000 	andpl	r0, r3, #0
    d640:	00971902 	addseq	r1, r7, r2, lsl #18
    d644:	23030000 	movwcs	r0, #12288	; 0x3000
    d648:	960701c0 	strls	r0, [r7], -r0, asr #3
    d64c:	0300001a 	movweq	r0, #26
    d650:	97190255 			; <UNDEFINED> instruction: 0x97190255
    d654:	03000000 	movweq	r0, #0
    d658:	0701c423 	streq	ip, [r1, -r3, lsr #8]
    d65c:	00001bec 	andeq	r1, r0, ip, ror #23
    d660:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    d664:	00000097 	muleq	r0, r7, r0
    d668:	01c82303 	biceq	r2, r8, r3, lsl #6
    d66c:	0009c407 	andeq	ip, r9, r7, lsl #8
    d670:	025d0300 	subseq	r0, sp, #0, 6
    d674:	0000761a 	andeq	r7, r0, sl, lsl r6
    d678:	cc230300 	stcgt	3, cr0, [r3], #-0
    d67c:	04810701 	streq	r0, [r1], #1793	; 0x701
    d680:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    d684:	00971902 	addseq	r1, r7, r2, lsl #18
    d688:	23030000 	movwcs	r0, #12288	; 0x3000
    d68c:	6d0701d0 	stfvss	f0, [r7, #-832]	; 0xfffffcc0
    d690:	03000005 	movweq	r0, #5
    d694:	9719027d 			; <UNDEFINED> instruction: 0x9719027d
    d698:	03000000 	movweq	r0, #0
    d69c:	0001d423 	andeq	sp, r1, r3, lsr #8
    d6a0:	0153040a 	cmpeq	r3, sl, lsl #8
    d6a4:	01080000 	mrseq	r0, (UNDEF: 8)
    d6a8:	0000048f 	andeq	r0, r0, pc, lsl #9
    d6ac:	00047809 	andeq	r7, r4, r9, lsl #16
    d6b0:	00970900 	addseq	r0, r7, r0, lsl #18
    d6b4:	0a000000 	beq	d6bc <_Min_Stack_Size+0xc6bc>
    d6b8:	00047e04 	andeq	r7, r4, r4, lsl #28
    d6bc:	07b30600 	ldreq	r0, [r3, r0, lsl #12]!
    d6c0:	03340000 	teqeq	r4, #0
    d6c4:	7410037e 	ldrvc	r0, [r0], #-894	; 0xfffffc82
    d6c8:	07000005 	streq	r0, [r0, -r5]
    d6cc:	0000018d 	andeq	r0, r0, sp, lsl #3
    d6d0:	19038203 	stmdbne	r3, {r0, r1, r9, pc}
    d6d4:	00000097 	muleq	r0, r7, r0
    d6d8:	07002302 	streq	r2, [r0, -r2, lsl #6]
    d6dc:	00000897 	muleq	r0, r7, r8
    d6e0:	1a038503 	bne	eeaf4 <SYSTICK_CYCLES+0xc5ab5>
    d6e4:	0000014d 	andeq	r0, r0, sp, asr #2
    d6e8:	07042302 	streq	r2, [r4, -r2, lsl #6]
    d6ec:	000006fc 	strdeq	r0, [r0], -ip
    d6f0:	19038803 	stmdbne	r3, {r0, r1, fp, pc}
    d6f4:	0000008b 	andeq	r0, r0, fp, lsl #1
    d6f8:	07082302 	streq	r2, [r8, -r2, lsl #6]
    d6fc:	000004cb 	andeq	r0, r0, fp, asr #9
    d700:	1a038c03 	bne	f0714 <SYSTICK_CYCLES+0xc76d5>
    d704:	00000587 	andeq	r0, r0, r7, lsl #11
    d708:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    d70c:	00000162 	andeq	r0, r0, r2, ror #2
    d710:	19039003 	stmdbne	r3, {r0, r1, ip, pc}
    d714:	0000008b 	andeq	r0, r0, fp, lsl #1
    d718:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    d71c:	00000121 	andeq	r0, r0, r1, lsr #2
    d720:	19039303 	stmdbne	r3, {r0, r1, r8, r9, ip, pc}
    d724:	0000008b 	andeq	r0, r0, fp, lsl #1
    d728:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    d72c:	000008cd 	andeq	r0, r0, sp, asr #17
    d730:	1a039803 	bne	f3744 <SYSTICK_CYCLES+0xca705>
    d734:	00000478 	andeq	r0, r0, r8, ror r4
    d738:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    d73c:	000006e3 	andeq	r0, r0, r3, ror #13
    d740:	19039903 	stmdbne	r3, {r0, r1, r8, fp, ip, pc}
    d744:	0000008b 	andeq	r0, r0, fp, lsl #1
    d748:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    d74c:	000005d3 	ldrdeq	r0, [r0], -r3
    d750:	1a039d03 	bne	f4b64 <SYSTICK_CYCLES+0xcbb25>
    d754:	00000574 	andeq	r0, r0, r4, ror r5
    d758:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    d75c:	000006a0 	andeq	r0, r0, r0, lsr #13
    d760:	1a039e03 	bne	f4f74 <SYSTICK_CYCLES+0xcbf35>
    d764:	00000574 	andeq	r0, r0, r4, ror r5
    d768:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    d76c:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    d770:	1903a203 	stmdbne	r3, {r0, r1, r9, sp, pc}
    d774:	0000008b 	andeq	r0, r0, fp, lsl #1
    d778:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    d77c:	000009e0 	andeq	r0, r0, r0, ror #19
    d780:	1a03a603 	bne	f6f94 <SYSTICK_CYCLES+0xcdf55>
    d784:	00000574 	andeq	r0, r0, r4, ror r5
    d788:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    d78c:	00000425 	andeq	r0, r0, r5, lsr #8
    d790:	1a03a703 	bne	f73a4 <SYSTICK_CYCLES+0xce365>
    d794:	00000574 	andeq	r0, r0, r4, ror r5
    d798:	00302302 	eorseq	r2, r0, r2, lsl #6
    d79c:	0495040a 	ldreq	r0, [r5], #1034	; 0x40a
    d7a0:	ef0b0000 	svc	0x000b0000
    d7a4:	03000008 	movweq	r0, #8
    d7a8:	53030286 	movwpl	r0, #12934	; 0x3286
    d7ac:	0a000001 	beq	d7b8 <_Min_Stack_Size+0xc7b8>
    d7b0:	00057a04 	andeq	r7, r5, r4, lsl #20
    d7b4:	1e9b0c00 	cdpne	12, 9, cr0, cr11, cr0, {0}
    d7b8:	8f040000 	svchi	0x00040000
    d7bc:	00057a21 	andeq	r7, r5, r1, lsr #20
    d7c0:	0d010100 	stfeqs	f0, [r1, #-0]
    d7c4:	00229201 	eoreq	r9, r2, r1, lsl #4
    d7c8:	07510100 	ldrbeq	r0, [r1, -r0, lsl #2]
    d7cc:	0028fc01 	eoreq	pc, r8, r1, lsl #24
    d7d0:	00291410 	eoreq	r1, r9, r0, lsl r4
    d7d4:	004eac10 	subeq	sl, lr, r0, lsl ip
    d7d8:	06460100 	strbeq	r0, [r6], -r0, lsl #2
    d7dc:	ee0e0000 	cdp	0, 0, cr0, cr14, cr0, {0}
    d7e0:	0100000e 	tsteq	r0, lr
    d7e4:	008b0154 	addeq	r0, fp, r4, asr r1
    d7e8:	4ece0000 	cdpmi	0, 12, cr0, cr14, cr0, {0}
    d7ec:	4ecc0000 	cdpmi	0, 12, cr0, cr12, cr0, {0}
    d7f0:	460f0000 	strmi	r0, [pc], -r0
    d7f4:	fe000006 	cdp2	0, 0, cr0, cr0, cr6, {0}
    d7f8:	02100028 	andseq	r0, r0, #40	; 0x28
    d7fc:	100028fe 	strdne	r2, [r0], -lr
    d800:	10002904 	andne	r2, r0, r4, lsl #18
    d804:	15056f01 	strne	r6, [r5, #-3841]	; 0xfffff0ff
    d808:	10000006 	andne	r0, r0, r6
    d80c:	00000659 	andeq	r0, r0, r9, asr r6
    d810:	00004ee3 	andeq	r4, r0, r3, ror #29
    d814:	00004ee1 	andeq	r4, r0, r1, ror #29
    d818:	00068411 	andeq	r8, r6, r1, lsl r4
    d81c:	0028fe00 	eoreq	pc, r8, r0, lsl #28
    d820:	28fe0510 	ldmcs	lr!, {r4, r8, sl}^
    d824:	29021000 	stmdbcs	r2, {ip}
    d828:	56021000 	strpl	r1, [r2], -r0
    d82c:	97101302 	ldrls	r1, [r0, -r2, lsl #6]
    d830:	f8000006 			; <UNDEFINED> instruction: 0xf8000006
    d834:	f600004e 			; <UNDEFINED> instruction: 0xf600004e
    d838:	0000004e 	andeq	r0, r0, lr, asr #32
    d83c:	06670f00 	strbteq	r0, [r7], -r0, lsl #30
    d840:	290a0000 	stmdbcs	sl, {}	; <UNPREDICTABLE>
    d844:	0a011000 	beq	5184c <SYSTICK_CYCLES+0x2880d>
    d848:	0e100029 	cdpeq	0, 1, cr0, cr0, cr9, {1}
    d84c:	01100029 	tsteq	r0, r9, lsr #32
    d850:	063c0577 			; <UNDEFINED> instruction: 0x063c0577
    d854:	76120000 	ldrvc	r0, [r2], -r0
    d858:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    d85c:	0b00004f 	bleq	d9a0 <_Min_Stack_Size+0xc9a0>
    d860:	0000004f 	andeq	r0, r0, pc, asr #32
    d864:	00290a13 	eoreq	r0, r9, r3, lsl sl
    d868:	0006a510 	andeq	sl, r6, r0, lsl r5
    d86c:	24140000 	ldrcs	r0, [r4], #-0
    d870:	0200000f 	andeq	r0, r0, #15
    d874:	01370252 	teqeq	r7, r2, asr r2
    d878:	0000008b 	andeq	r0, r0, fp, lsl #1
    d87c:	00066703 	andeq	r6, r6, r3, lsl #14
    d880:	0ead1500 	cdpeq	5, 10, cr1, cr13, cr0, {0}
    d884:	54020000 	strpl	r0, [r2], #-0
    d888:	008b0602 	addeq	r0, fp, r2, lsl #12
    d88c:	16000000 	strne	r0, [r0], -r0
    d890:	00000e99 	muleq	r0, r9, lr
    d894:	37024902 	strcc	r4, [r2, -r2, lsl #18]
    d898:	06840301 	streq	r0, [r4], r1, lsl #6
    d89c:	ad170000 	ldcge	0, cr0, [r7, #-0]
    d8a0:	0200000e 	andeq	r0, r0, #14
    d8a4:	8b500249 	blhi	140e1d0 <__RAM_SIZE+0x130e1d0>
    d8a8:	00000000 	andeq	r0, r0, r0
    d8ac:	000ec214 	andeq	ip, lr, r4, lsl r2
    d8b0:	02320200 	eorseq	r0, r2, #0, 4
    d8b4:	008b0137 	addeq	r0, fp, r7, lsr r1
    d8b8:	a5030000 	strge	r0, [r3, #-0]
    d8bc:	15000006 	strne	r0, [r0, #-6]
    d8c0:	00000eb1 			; <UNDEFINED> instruction: 0x00000eb1
    d8c4:	06023402 	streq	r3, [r2], -r2, lsl #8
    d8c8:	0000008b 	andeq	r0, r0, fp, lsl #1
    d8cc:	01011800 	tsteq	r1, r0, lsl #16
    d8d0:	00001064 	andeq	r1, r0, r4, rrx
    d8d4:	00001064 	andeq	r1, r0, r4, rrx
    d8d8:	0d011e05 	stceq	14, cr1, [r1, #-20]	; 0xffffffec
    d8dc:	00094000 	andeq	r4, r9, r0
    d8e0:	56000200 	strpl	r0, [r0], -r0, lsl #4
    d8e4:	04000026 	streq	r0, [r0], #-38	; 0xffffffda
    d8e8:	00003d01 	andeq	r3, r0, r1, lsl #26
    d8ec:	24f10c00 	ldrbtcs	r0, [r1], #3072	; 0xc00
    d8f0:	065c0000 	ldrbeq	r0, [ip], -r0
    d8f4:	04600000 	strbteq	r0, [r0], #-0
	...
    d900:	4d270000 	stcmi	0, cr0, [r7, #-0]
    d904:	04020000 	streq	r0, [r2], #-0
    d908:	00023907 	andeq	r3, r2, r7, lsl #18
    d90c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    d910:	00746e69 	rsbseq	r6, r4, r9, ror #28
    d914:	e8050802 	stmda	r5, {r1, fp}
    d918:	02000004 	andeq	r0, r0, #4
    d91c:	063e0408 	ldrteq	r0, [lr], -r8, lsl #8
    d920:	01020000 	mrseq	r0, (UNDEF: 2)
    d924:	00086d06 	andeq	r6, r8, r6, lsl #26
    d928:	08010200 	stmdaeq	r1, {r9}
    d92c:	0000086b 	andeq	r0, r0, fp, ror #16
    d930:	cf050202 	svcgt	0x00050202
    d934:	02000006 	andeq	r0, r0, #6
    d938:	09390702 	ldmdbeq	r9!, {r1, r8, r9, sl}
    d93c:	04020000 	streq	r0, [r2], #-0
    d940:	0004ed05 	andeq	lr, r4, r5, lsl #26
    d944:	07040200 	streq	r0, [r4, -r0, lsl #4]
    d948:	00000234 	andeq	r0, r0, r4, lsr r2
    d94c:	2f070802 	svccs	0x00070802
    d950:	04000002 	streq	r0, [r0], #-2
    d954:	08010204 	stmdaeq	r1, {r2, r9}
    d958:	00000874 	andeq	r0, r0, r4, ror r8
    d95c:	0008fa05 	andeq	pc, r8, r5, lsl #20
    d960:	31730200 	cmncc	r3, r0, lsl #4
    d964:	00000078 	andeq	r0, r0, r8, ror r0
    d968:	00079a05 	andeq	r9, r7, r5, lsl #20
    d96c:	31760200 	cmncc	r6, r0, lsl #4
    d970:	00000029 	andeq	r0, r0, r9, lsr #32
    d974:	00072c05 	andeq	r2, r7, r5, lsl #24
    d978:	31780200 	cmncc	r8, r0, lsl #4
    d97c:	00000068 	andeq	r0, r0, r8, rrx
    d980:	00009706 	andeq	r9, r0, r6, lsl #14
    d984:	053b0700 	ldreq	r0, [fp, #-1792]!	; 0xfffff900
    d988:	031c0000 	tsteq	ip, #0
    d98c:	27100182 	ldrcs	r0, [r0, -r2, lsl #3]
    d990:	08000001 	stmdaeq	r0, {r0}
    d994:	0000082d 	andeq	r0, r0, sp, lsr #16
    d998:	19018603 	stmdbne	r1, {r0, r1, r9, sl, pc}
    d99c:	00000097 	muleq	r0, r7, r0
    d9a0:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    d9a4:	000003a0 	andeq	r0, r0, r0, lsr #7
    d9a8:	19018703 	stmdbne	r1, {r0, r1, r8, r9, sl, pc}
    d9ac:	00000097 	muleq	r0, r7, r0
    d9b0:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    d9b4:	0000043d 	andeq	r0, r0, sp, lsr r4
    d9b8:	1b018a03 	blne	701cc <SYSTICK_CYCLES+0x4718d>
    d9bc:	00000133 	andeq	r0, r0, r3, lsr r1
    d9c0:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    d9c4:	000001f2 	strdeq	r0, [r0], -r2
    d9c8:	19018b03 	stmdbne	r1, {r0, r1, r8, r9, fp, pc}
    d9cc:	00000097 	muleq	r0, r7, r0
    d9d0:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    d9d4:	0000096f 	andeq	r0, r0, pc, ror #18
    d9d8:	1a019103 	bne	71dec <SYSTICK_CYCLES+0x48dad>
    d9dc:	00000139 	andeq	r0, r0, r9, lsr r1
    d9e0:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    d9e4:	0000001b 	andeq	r0, r0, fp, lsl r0
    d9e8:	1a019203 	bne	721fc <SYSTICK_CYCLES+0x491bd>
    d9ec:	00000139 	andeq	r0, r0, r9, lsr r1
    d9f0:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    d9f4:	00000609 	andeq	r0, r0, r9, lsl #12
    d9f8:	1b019603 	blne	7320c <SYSTICK_CYCLES+0x4a1cd>
    d9fc:	0000013f 	andeq	r0, r0, pc, lsr r1
    da00:	00182302 	andseq	r2, r8, r2, lsl #6
    da04:	01330109 	teqeq	r3, r9, lsl #2
    da08:	970a0000 	strls	r0, [sl, -r0]
    da0c:	00000000 	andeq	r0, r0, r0
    da10:	0127040b 			; <UNDEFINED> instruction: 0x0127040b
    da14:	040b0000 	streq	r0, [fp], #-0
    da18:	000000a8 	andeq	r0, r0, r8, lsr #1
    da1c:	0139040b 	teqeq	r9, fp, lsl #8
    da20:	4a0c0000 	bmi	30da28 <__RAM_SIZE+0x20da28>
    da24:	03000006 	movweq	r0, #6
    da28:	a803019b 	stmdage	r3, {r0, r1, r3, r4, r7, r8}
    da2c:	07000000 	streq	r0, [r0, -r0]
    da30:	000024e1 	andeq	r2, r0, r1, ror #9
    da34:	01a80340 			; <UNDEFINED> instruction: 0x01a80340
    da38:	00020110 	andeq	r0, r2, r0, lsl r1
    da3c:	22da0800 	sbcscs	r0, sl, #0, 16
    da40:	ac030000 	stcge	0, cr0, [r3], {-0}
    da44:	00971901 	addseq	r1, r7, r1, lsl #18
    da48:	23020000 	movwcs	r0, #8192	; 0x2000
    da4c:	24580800 	ldrbcs	r0, [r8], #-2048	; 0xfffff800
    da50:	af030000 	svcge	0x00030000
    da54:	02011a01 	andeq	r1, r1, #4096	; 0x1000
    da58:	23020000 	movwcs	r0, #8192	; 0x2000
    da5c:	248b0804 	strcs	r0, [fp], #2052	; 0x804
    da60:	b3030000 	movwlt	r0, #12288	; 0x3000
    da64:	01451901 	cmpeq	r5, r1, lsl #18
    da68:	23020000 	movwcs	r0, #8192	; 0x2000
    da6c:	24660808 	strbtcs	r0, [r6], #-2056	; 0xfffff7f8
    da70:	b7030000 	strlt	r0, [r3, -r0]
    da74:	02071a01 	andeq	r1, r7, #4096	; 0x1000
    da78:	23020000 	movwcs	r0, #8192	; 0x2000
    da7c:	23c80824 	biccs	r0, r8, #36, 16	; 0x240000
    da80:	b8030000 	stmdalt	r3, {}	; <UNPREDICTABLE>
    da84:	02071a01 	andeq	r1, r7, #4096	; 0x1000
    da88:	23020000 	movwcs	r0, #8192	; 0x2000
    da8c:	238e0828 	orrcs	r0, lr, #40, 16	; 0x280000
    da90:	c0030000 	andgt	r0, r3, r0
    da94:	00971901 	addseq	r1, r7, r1, lsl #18
    da98:	23020000 	movwcs	r0, #8192	; 0x2000
    da9c:	2367082c 	cmncs	r7, #44, 16	; 0x2c0000
    daa0:	c3030000 	movwgt	r0, #12288	; 0x3000
    daa4:	00971901 	addseq	r1, r7, r1, lsl #18
    daa8:	23020000 	movwcs	r0, #8192	; 0x2000
    daac:	23e30830 	mvncs	r0, #48, 16	; 0x300000
    dab0:	c6030000 	strgt	r0, [r3], -r0
    dab4:	00971901 	addseq	r1, r7, r1, lsl #18
    dab8:	23020000 	movwcs	r0, #8192	; 0x2000
    dabc:	241d0834 	ldrcs	r0, [sp], #-2100	; 0xfffff7cc
    dac0:	c9030000 	stmdbgt	r3, {}	; <UNPREDICTABLE>
    dac4:	00971901 	addseq	r1, r7, r1, lsl #18
    dac8:	23020000 	movwcs	r0, #8192	; 0x2000
    dacc:	232f0838 			; <UNDEFINED> instruction: 0x232f0838
    dad0:	cc030000 	stcgt	0, cr0, [r3], {-0}
    dad4:	00971901 	addseq	r1, r7, r1, lsl #18
    dad8:	23020000 	movwcs	r0, #8192	; 0x2000
    dadc:	040b003c 	streq	r0, [fp], #-60	; 0xffffffc4
    dae0:	0000007f 	andeq	r0, r0, pc, ror r0
    dae4:	0152040b 	cmpeq	r2, fp, lsl #8
    dae8:	5d0c0000 	stcpl	0, cr0, [ip, #-0]
    daec:	03000023 	movweq	r0, #35	; 0x23
    daf0:	520301cf 	andpl	r0, r3, #-1073741773	; 0xc0000033
    daf4:	07000001 	streq	r0, [r0, -r1]
    daf8:	0000034b 	andeq	r0, r0, fp, asr #6
    dafc:	01d603d8 	ldrsbeq	r0, [r6, #56]	; 0x38
    db00:	00053f10 	andeq	r3, r5, r0, lsl pc
    db04:	092c0800 	stmdbeq	ip!, {fp}
    db08:	dd030000 	stcle	0, cr0, [r3, #-0]
    db0c:	00971901 	addseq	r1, r7, r1, lsl #18
    db10:	23020000 	movwcs	r0, #8192	; 0x2000
    db14:	079f0800 	ldreq	r0, [pc, r0, lsl #16]
    db18:	de030000 	cdple	0, 0, cr0, cr3, cr0, {0}
    db1c:	00971901 	addseq	r1, r7, r1, lsl #18
    db20:	23020000 	movwcs	r0, #8192	; 0x2000
    db24:	01bc0804 			; <UNDEFINED> instruction: 0x01bc0804
    db28:	df030000 	svcle	0x00030000
    db2c:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    db30:	23020000 	movwcs	r0, #8192	; 0x2000
    db34:	09160808 	ldmdbeq	r6, {r3, fp}
    db38:	e0030000 	and	r0, r3, r0
    db3c:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    db40:	23020000 	movwcs	r0, #8192	; 0x2000
    db44:	0411080c 	ldreq	r0, [r1], #-2060	; 0xfffff7f4
    db48:	e1030000 	mrs	r0, (UNDEF: 3)
    db4c:	00761a01 	rsbseq	r1, r6, r1, lsl #20
    db50:	23020000 	movwcs	r0, #8192	; 0x2000
    db54:	095a0810 	ldmdbeq	sl, {r4, fp}^
    db58:	e2030000 	and	r0, r3, #0
    db5c:	00971901 	addseq	r1, r7, r1, lsl #18
    db60:	23020000 	movwcs	r0, #8192	; 0x2000
    db64:	21e20814 	mvncs	r0, r4, lsl r8
    db68:	e3030000 	movw	r0, #12288	; 0x3000
    db6c:	00971901 	addseq	r1, r7, r1, lsl #18
    db70:	23020000 	movwcs	r0, #8192	; 0x2000
    db74:	06250818 			; <UNDEFINED> instruction: 0x06250818
    db78:	e4030000 	str	r0, [r3], #-0
    db7c:	00971901 	addseq	r1, r7, r1, lsl #18
    db80:	23020000 	movwcs	r0, #8192	; 0x2000
    db84:	06ba081c 	ssateq	r0, #27, ip, lsl #16
    db88:	e8030000 	stmda	r3, {}	; <UNPREDICTABLE>
    db8c:	053f1a01 	ldreq	r1, [pc, #-2561]!	; d193 <_Min_Stack_Size+0xc193>
    db90:	23020000 	movwcs	r0, #8192	; 0x2000
    db94:	01990820 	orrseq	r0, r9, r0, lsr #16
    db98:	e9030000 	stmdb	r3, {}	; <UNPREDICTABLE>
    db9c:	053f1a01 	ldreq	r1, [pc, #-2561]!	; d1a3 <_Min_Stack_Size+0xc1a3>
    dba0:	23020000 	movwcs	r0, #8192	; 0x2000
    dba4:	05b10824 	ldreq	r0, [r1, #2084]!	; 0x824
    dba8:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    dbac:	02011a01 	andeq	r1, r1, #4096	; 0x1000
    dbb0:	23020000 	movwcs	r0, #8192	; 0x2000
    dbb4:	02d90828 	sbcseq	r0, r9, #40, 16	; 0x280000
    dbb8:	f2030000 	vhadd.s8	d0, d3, d0
    dbbc:	008b1901 	addeq	r1, fp, r1, lsl #18
    dbc0:	23020000 	movwcs	r0, #8192	; 0x2000
    dbc4:	0246082c 	subeq	r0, r6, #44, 16	; 0x2c0000
    dbc8:	f3030000 	vhadd.u8	d0, d3, d0
    dbcc:	008b1901 	addeq	r1, fp, r1, lsl #18
    dbd0:	23020000 	movwcs	r0, #8192	; 0x2000
    dbd4:	01730830 	cmneq	r3, r0, lsr r8
    dbd8:	f4030000 	vst4.8	{d0-d3}, [r3], r0
    dbdc:	008b1901 	addeq	r1, fp, r1, lsl #18
    dbe0:	23020000 	movwcs	r0, #8192	; 0x2000
    dbe4:	074b0834 	smlaldxeq	r0, fp, r4, r8
    dbe8:	f5030000 			; <UNDEFINED> instruction: 0xf5030000
    dbec:	008b1901 	addeq	r1, fp, r1, lsl #18
    dbf0:	23020000 	movwcs	r0, #8192	; 0x2000
    dbf4:	00eb0838 	rsceq	r0, fp, r8, lsr r8
    dbf8:	f6030000 			; <UNDEFINED> instruction: 0xf6030000
    dbfc:	008b1901 	addeq	r1, fp, r1, lsl #18
    dc00:	23020000 	movwcs	r0, #8192	; 0x2000
    dc04:	035c083c 	cmpeq	ip, #60, 16	; 0x3c0000
    dc08:	fb030000 	blx	cdc12 <SYSTICK_CYCLES+0xa4bd3>
    dc0c:	05561b01 	ldrbeq	r1, [r6, #-2817]	; 0xfffff4ff
    dc10:	23020000 	movwcs	r0, #8192	; 0x2000
    dc14:	01520840 	cmpeq	r2, r0, asr #16
    dc18:	03030000 	movweq	r0, #12288	; 0x3000
    dc1c:	01331b02 	teqeq	r3, r2, lsl #22
    dc20:	23020000 	movwcs	r0, #8192	; 0x2000
    dc24:	01070844 	tsteq	r7, r4, asr #16
    dc28:	04030000 	streq	r0, [r3], #-0
    dc2c:	00971902 	addseq	r1, r7, r2, lsl #18
    dc30:	23020000 	movwcs	r0, #8192	; 0x2000
    dc34:	033b0848 	teqeq	fp, #72, 16	; 0x480000
    dc38:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    dc3c:	01451902 	cmpeq	r5, r2, lsl #18
    dc40:	23020000 	movwcs	r0, #8192	; 0x2000
    dc44:	02ec084c 	rsceq	r0, ip, #76, 16	; 0x4c0000
    dc48:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
    dc4c:	05561b02 	ldrbeq	r1, [r6, #-2818]	; 0xfffff4fe
    dc50:	23020000 	movwcs	r0, #8192	; 0x2000
    dc54:	05e90868 	strbeq	r0, [r9, #2152]!	; 0x868
    dc58:	0f030000 	svceq	0x00030000
    dc5c:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    dc60:	23020000 	movwcs	r0, #8192	; 0x2000
    dc64:	0732086c 	ldreq	r0, [r2, -ip, ror #16]!
    dc68:	11030000 	mrsne	r0, (UNDEF: 3)
    dc6c:	053f1a02 	ldreq	r1, [pc, #-2562]!	; d272 <_Min_Stack_Size+0xc272>
    dc70:	23020000 	movwcs	r0, #8192	; 0x2000
    dc74:	02120870 	andseq	r0, r2, #112, 16	; 0x700000
    dc78:	12030000 	andne	r0, r3, #0
    dc7c:	053f1a02 	ldreq	r1, [pc, #-2562]!	; d282 <_Min_Stack_Size+0xc282>
    dc80:	23020000 	movwcs	r0, #8192	; 0x2000
    dc84:	07150874 			; <UNDEFINED> instruction: 0x07150874
    dc88:	13030000 	movwne	r0, #12288	; 0x3000
    dc8c:	00971902 	addseq	r1, r7, r2, lsl #18
    dc90:	23020000 	movwcs	r0, #8192	; 0x2000
    dc94:	03c60878 	biceq	r0, r6, #120, 16	; 0x780000
    dc98:	14030000 	strne	r0, [r3], #-0
    dc9c:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    dca0:	23020000 	movwcs	r0, #8192	; 0x2000
    dca4:	0554087c 	ldrbeq	r0, [r4, #-2172]	; 0xfffff784
    dca8:	15030000 	strne	r0, [r3, #-0]
    dcac:	008b1902 	addeq	r1, fp, r2, lsl #18
    dcb0:	23030000 	movwcs	r0, #12288	; 0x3000
    dcb4:	e8080180 	stmda	r8, {r7, r8}
    dcb8:	03000003 	movweq	r0, #3
    dcbc:	8b190216 	blhi	64e51c <__RAM_SIZE+0x54e51c>
    dcc0:	03000000 	movweq	r0, #0
    dcc4:	08018423 	stmdaeq	r1, {r0, r1, r5, sl, pc}
    dcc8:	000008ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    dccc:	1a021f03 	bne	958e0 <SYSTICK_CYCLES+0x6c8a1>
    dcd0:	0000053f 	andeq	r0, r0, pc, lsr r5
    dcd4:	01882303 	orreq	r2, r8, r3, lsl #6
    dcd8:	0007f008 	andeq	pc, r7, r8
    dcdc:	02200300 	eoreq	r0, r0, #0, 6
    dce0:	00053f1a 	andeq	r3, r5, sl, lsl pc
    dce4:	8c230300 	stchi	3, cr0, [r3], #-0
    dce8:	02c10801 	sbceq	r0, r1, #65536	; 0x10000
    dcec:	2e030000 	cdpcs	0, 0, cr0, cr3, cr0, {0}
    dcf0:	008b1902 	addeq	r1, fp, r2, lsl #18
    dcf4:	23030000 	movwcs	r0, #12288	; 0x3000
    dcf8:	56080190 			; <UNDEFINED> instruction: 0x56080190
    dcfc:	03000002 	movweq	r0, #2
    dd00:	8b19022f 	blhi	64e5c4 <__RAM_SIZE+0x54e5c4>
    dd04:	03000000 	movweq	r0, #0
    dd08:	08019423 	stmdaeq	r1, {r0, r1, r5, sl, ip, pc}
    dd0c:	00000320 	andeq	r0, r0, r0, lsr #6
    dd10:	19023003 	stmdbne	r2, {r0, r1, ip, sp}
    dd14:	0000008b 	andeq	r0, r0, fp, lsl #1
    dd18:	01982303 	orrseq	r2, r8, r3, lsl #6
    dd1c:	00027708 	andeq	r7, r2, r8, lsl #14
    dd20:	02330300 	eorseq	r0, r3, #0, 6
    dd24:	00008b19 	andeq	r8, r0, r9, lsl fp
    dd28:	9c230300 	stcls	3, cr0, [r3], #-0
    dd2c:	00000801 	andeq	r0, r0, r1, lsl #16
    dd30:	35030000 	strcc	r0, [r3, #-0]
    dd34:	063b1a02 	ldrteq	r1, [fp], -r2, lsl #20
    dd38:	23030000 	movwcs	r0, #12288	; 0x3000
    dd3c:	c80801a0 	stmdagt	r8, {r5, r7, r8}
    dd40:	0300001b 	movweq	r0, #27
    dd44:	9719023a 			; <UNDEFINED> instruction: 0x9719023a
    dd48:	03000000 	movweq	r0, #0
    dd4c:	0801a423 	stmdaeq	r1, {r0, r1, r5, sl, sp, pc}
    dd50:	00001c88 	andeq	r1, r0, r8, lsl #25
    dd54:	19023d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp}
    dd58:	00000097 	muleq	r0, r7, r0
    dd5c:	01a82303 			; <UNDEFINED> instruction: 0x01a82303
    dd60:	001b4108 	andseq	r4, fp, r8, lsl #2
    dd64:	02410300 	subeq	r0, r1, #0, 6
    dd68:	00009719 	andeq	r9, r0, r9, lsl r7
    dd6c:	ac230300 	stcge	3, cr0, [r3], #-0
    dd70:	1d3f0801 	ldcne	8, cr0, [pc, #-4]!	; dd74 <_Min_Stack_Size+0xcd74>
    dd74:	45030000 	strmi	r0, [r3, #-0]
    dd78:	00971902 	addseq	r1, r7, r2, lsl #18
    dd7c:	23030000 	movwcs	r0, #12288	; 0x3000
    dd80:	580801b0 	stmdapl	r8, {r4, r5, r7, r8}
    dd84:	0300001c 	movweq	r0, #28
    dd88:	97190248 	ldrls	r0, [r9, -r8, asr #4]
    dd8c:	03000000 	movweq	r0, #0
    dd90:	0801b423 	stmdaeq	r1, {r0, r1, r5, sl, ip, sp, pc}
    dd94:	000007c3 	andeq	r0, r0, r3, asr #15
    dd98:	1a024c03 	bne	a0dac <SYSTICK_CYCLES+0x77d6d>
    dd9c:	0000053f 	andeq	r0, r0, pc, lsr r5
    dda0:	01b82303 			; <UNDEFINED> instruction: 0x01b82303
    dda4:	001d1708 	andseq	r1, sp, r8, lsl #14
    dda8:	024f0300 	subeq	r0, pc, #0, 6
    ddac:	00009719 	andeq	r9, r0, r9, lsl r7
    ddb0:	bc230300 	stclt	3, cr0, [r3], #-0
    ddb4:	1b190801 	blne	64fdc0 <__RAM_SIZE+0x54fdc0>
    ddb8:	52030000 	andpl	r0, r3, #0
    ddbc:	00971902 	addseq	r1, r7, r2, lsl #18
    ddc0:	23030000 	movwcs	r0, #12288	; 0x3000
    ddc4:	960801c0 	strls	r0, [r8], -r0, asr #3
    ddc8:	0300001a 	movweq	r0, #26
    ddcc:	97190255 			; <UNDEFINED> instruction: 0x97190255
    ddd0:	03000000 	movweq	r0, #0
    ddd4:	0801c423 	stmdaeq	r1, {r0, r1, r5, sl, lr, pc}
    ddd8:	00001bec 	andeq	r1, r0, ip, ror #23
    dddc:	19025903 	stmdbne	r2, {r0, r1, r8, fp, ip, lr}
    dde0:	00000097 	muleq	r0, r7, r0
    dde4:	01c82303 	biceq	r2, r8, r3, lsl #6
    dde8:	0009c408 	andeq	ip, r9, r8, lsl #8
    ddec:	025d0300 	subseq	r0, sp, #0, 6
    ddf0:	0000761a 	andeq	r7, r0, sl, lsl r6
    ddf4:	cc230300 	stcgt	3, cr0, [r3], #-0
    ddf8:	04810801 	streq	r0, [r1], #2049	; 0x801
    ddfc:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    de00:	00971902 	addseq	r1, r7, r2, lsl #18
    de04:	23030000 	movwcs	r0, #12288	; 0x3000
    de08:	6d0801d0 	stfvss	f0, [r8, #-832]	; 0xfffffcc0
    de0c:	03000005 	movweq	r0, #5
    de10:	9719027d 			; <UNDEFINED> instruction: 0x9719027d
    de14:	03000000 	movweq	r0, #0
    de18:	0001d423 	andeq	sp, r1, r3, lsr #8
    de1c:	021a040b 	andseq	r0, sl, #184549376	; 0xb000000
    de20:	01090000 	mrseq	r0, (UNDEF: 9)
    de24:	00000556 	andeq	r0, r0, r6, asr r5
    de28:	00053f0a 	andeq	r3, r5, sl, lsl #30
    de2c:	00970a00 	addseq	r0, r7, r0, lsl #20
    de30:	0b000000 	bleq	de38 <_Min_Stack_Size+0xce38>
    de34:	00054504 	andeq	r4, r5, r4, lsl #10
    de38:	07b30700 	ldreq	r0, [r3, r0, lsl #14]!
    de3c:	03340000 	teqeq	r4, #0
    de40:	3b10037e 	blcc	40ec40 <__RAM_SIZE+0x30ec40>
    de44:	08000006 	stmdaeq	r0, {r1, r2}
    de48:	0000018d 	andeq	r0, r0, sp, lsl #3
    de4c:	19038203 	stmdbne	r3, {r0, r1, r9, pc}
    de50:	00000097 	muleq	r0, r7, r0
    de54:	08002302 	stmdaeq	r0, {r1, r8, r9, sp}
    de58:	00000897 	muleq	r0, r7, r8
    de5c:	1a038503 	bne	ef270 <SYSTICK_CYCLES+0xc6231>
    de60:	00000201 	andeq	r0, r0, r1, lsl #4
    de64:	08042302 	stmdaeq	r4, {r1, r8, r9, sp}
    de68:	000006fc 	strdeq	r0, [r0], -ip
    de6c:	19038803 	stmdbne	r3, {r0, r1, fp, pc}
    de70:	0000008b 	andeq	r0, r0, fp, lsl #1
    de74:	08082302 	stmdaeq	r8, {r1, r8, r9, sp}
    de78:	000004cb 	andeq	r0, r0, fp, asr #9
    de7c:	1a038c03 	bne	f0e90 <SYSTICK_CYCLES+0xc7e51>
    de80:	0000064e 	andeq	r0, r0, lr, asr #12
    de84:	080c2302 	stmdaeq	ip, {r1, r8, r9, sp}
    de88:	00000162 	andeq	r0, r0, r2, ror #2
    de8c:	19039003 	stmdbne	r3, {r0, r1, ip, pc}
    de90:	0000008b 	andeq	r0, r0, fp, lsl #1
    de94:	08102302 	ldmdaeq	r0, {r1, r8, r9, sp}
    de98:	00000121 	andeq	r0, r0, r1, lsr #2
    de9c:	19039303 	stmdbne	r3, {r0, r1, r8, r9, ip, pc}
    dea0:	0000008b 	andeq	r0, r0, fp, lsl #1
    dea4:	08142302 	ldmdaeq	r4, {r1, r8, r9, sp}
    dea8:	000008cd 	andeq	r0, r0, sp, asr #17
    deac:	1a039803 	bne	f3ec0 <SYSTICK_CYCLES+0xcae81>
    deb0:	0000053f 	andeq	r0, r0, pc, lsr r5
    deb4:	08182302 	ldmdaeq	r8, {r1, r8, r9, sp}
    deb8:	000006e3 	andeq	r0, r0, r3, ror #13
    debc:	19039903 	stmdbne	r3, {r0, r1, r8, fp, ip, pc}
    dec0:	0000008b 	andeq	r0, r0, fp, lsl #1
    dec4:	081c2302 	ldmdaeq	ip, {r1, r8, r9, sp}
    dec8:	000005d3 	ldrdeq	r0, [r0], -r3
    decc:	1a039d03 	bne	f52e0 <SYSTICK_CYCLES+0xcc2a1>
    ded0:	0000063b 	andeq	r0, r0, fp, lsr r6
    ded4:	08202302 	stmdaeq	r0!, {r1, r8, r9, sp}
    ded8:	000006a0 	andeq	r0, r0, r0, lsr #13
    dedc:	1a039e03 	bne	f56f0 <SYSTICK_CYCLES+0xcc6b1>
    dee0:	0000063b 	andeq	r0, r0, fp, lsr r6
    dee4:	08242302 	stmdaeq	r4!, {r1, r8, r9, sp}
    dee8:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    deec:	1903a203 	stmdbne	r3, {r0, r1, r9, sp, pc}
    def0:	0000008b 	andeq	r0, r0, fp, lsl #1
    def4:	08282302 	stmdaeq	r8!, {r1, r8, r9, sp}
    def8:	000009e0 	andeq	r0, r0, r0, ror #19
    defc:	1a03a603 	bne	f7710 <SYSTICK_CYCLES+0xce6d1>
    df00:	0000063b 	andeq	r0, r0, fp, lsr r6
    df04:	082c2302 	stmdaeq	ip!, {r1, r8, r9, sp}
    df08:	00000425 	andeq	r0, r0, r5, lsr #8
    df0c:	1a03a703 	bne	f7b20 <SYSTICK_CYCLES+0xceae1>
    df10:	0000063b 	andeq	r0, r0, fp, lsr r6
    df14:	00302302 	eorseq	r2, r0, r2, lsl #6
    df18:	055c040b 	ldrbeq	r0, [ip, #-1035]	; 0xfffffbf5
    df1c:	ef0c0000 	svc	0x000c0000
    df20:	03000008 	movweq	r0, #8
    df24:	1a030286 	bne	ce944 <SYSTICK_CYCLES+0xa5905>
    df28:	0b000002 	bleq	df38 <_Min_Stack_Size+0xcf38>
    df2c:	00064104 	andeq	r4, r6, r4, lsl #2
    df30:	22fb0d00 	rscscs	r0, fp, #0, 26
    df34:	54040000 	strpl	r0, [r4], #-0
    df38:	0000a321 	andeq	sl, r0, r1, lsr #6
    df3c:	0d010100 	stfeqs	f0, [r1, #-0]
    df40:	00002157 	andeq	r2, r0, r7, asr r1
    df44:	97215a04 	strls	r5, [r1, -r4, lsl #20]!
    df48:	01000000 	mrseq	r0, (UNDEF: 0)
    df4c:	21b40d01 			; <UNDEFINED> instruction: 0x21b40d01
    df50:	60040000 	andvs	r0, r4, r0
    df54:	00008b21 	andeq	r8, r0, r1, lsr #22
    df58:	0e010100 	adfeqs	f0, f1, f0
    df5c:	0000068e 	andeq	r0, r0, lr, lsl #13
    df60:	0000068e 	andeq	r0, r0, lr, lsl #13
    df64:	0000290f 	andeq	r2, r0, pc, lsl #18
    df68:	0b001f00 	bleq	15b70 <_Min_Stack_Size+0x14b70>
    df6c:	00014504 	andeq	r4, r1, r4, lsl #10
    df70:	247c0d00 	ldrbtcs	r0, [ip], #-3328	; 0xfffff300
    df74:	66040000 	strvs	r0, [r4], -r0
    df78:	00067e22 	andeq	r7, r6, r2, lsr #28
    df7c:	0d010100 	stfeqs	f0, [r1, #-0]
    df80:	000022e6 	andeq	r2, r0, r6, ror #5
    df84:	b0236c04 	eorlt	r6, r3, r4, lsl #24
    df88:	01000006 	tsteq	r0, r6
    df8c:	8e040b01 	vmlahi.f64	d0, d4, d1
    df90:	0d000006 	stceq	0, cr0, [r0, #-24]	; 0xffffffe8
    df94:	000022c7 	andeq	r2, r0, r7, asr #5
    df98:	b0236d04 	eorlt	r6, r3, r4, lsl #26
    df9c:	01000006 	tsteq	r0, r6
    dfa0:	23b20d01 			; <UNDEFINED> instruction: 0x23b20d01
    dfa4:	73040000 	movwvc	r0, #16384	; 0x4000
    dfa8:	0006b023 	andeq	fp, r6, r3, lsr #32
    dfac:	0d010100 	stfeqs	f0, [r1, #-0]
    dfb0:	0000249d 	muleq	r0, sp, r4
    dfb4:	8b217904 	blhi	86c3cc <__RAM_SIZE+0x76c3cc>
    dfb8:	01000000 	mrseq	r0, (UNDEF: 0)
    dfbc:	24cb0d01 	strbcs	r0, [fp], #3329	; 0xd01
    dfc0:	7e040000 	cdpvc	0, 0, cr0, cr4, cr0, {0}
    dfc4:	0006ee22 	andeq	lr, r6, r2, lsr #28
    dfc8:	0b010100 	bleq	4e3d0 <SYSTICK_CYCLES+0x25391>
    dfcc:	00020d04 	andeq	r0, r2, r4, lsl #26
    dfd0:	22af0d00 	adccs	r0, pc, #0, 26
    dfd4:	83040000 	movwhi	r0, #16384	; 0x4000
    dfd8:	00009721 	andeq	r9, r0, r1, lsr #14
    dfdc:	0d010100 	stfeqs	f0, [r1, #-0]
    dfe0:	000024af 	andeq	r2, r0, pc, lsr #9
    dfe4:	8e228804 	cdphi	8, 2, cr8, cr2, cr4, {0}
    dfe8:	01000006 	tsteq	r0, r6
    dfec:	1e9b0d01 	cdpne	13, 9, cr0, cr11, cr1, {0}
    dff0:	8f040000 	svchi	0x00040000
    dff4:	00064121 	andeq	r4, r6, r1, lsr #2
    dff8:	0d010100 	stfeqs	f0, [r1, #-0]
    dffc:	0000252b 	andeq	r2, r0, fp, lsr #10
    e000:	76229404 	strtvc	r9, [r2], -r4, lsl #8
    e004:	01000000 	mrseq	r0, (UNDEF: 0)
    e008:	24430d01 	strbcs	r0, [r3], #-3329	; 0xfffff2ff
    e00c:	99040000 	stmdbls	r4, {}	; <UNPREDICTABLE>
    e010:	00009721 	andeq	r9, r0, r1, lsr #14
    e014:	0d010100 	stfeqs	f0, [r1, #-0]
    e018:	00002409 	andeq	r2, r0, r9, lsl #8
    e01c:	8b219e04 	blhi	875834 <__RAM_SIZE+0x775834>
    e020:	01000000 	mrseq	r0, (UNDEF: 0)
    e024:	00970e01 	addseq	r0, r7, r1, lsl #28
    e028:	07590000 	ldrbeq	r0, [r9, -r0]
    e02c:	29100000 	ldmdbcs	r0, {}	; <UNPREDICTABLE>
    e030:	ff000000 			; <UNDEFINED> instruction: 0xff000000
    e034:	120d0003 	andne	r0, sp, #3
    e038:	04000023 	streq	r0, [r0], #-35	; 0xffffffdd
    e03c:	074821a3 	strbeq	r2, [r8, -r3, lsr #3]
    e040:	01010000 	mrseq	r0, (UNDEF: 1)
    e044:	00238d0d 	eoreq	r8, r3, sp, lsl #26
    e048:	21b20400 			; <UNDEFINED> instruction: 0x21b20400
    e04c:	00000097 	muleq	r0, r7, r0
    e050:	660d0101 	strvs	r0, [sp], -r1, lsl #2
    e054:	04000023 	streq	r0, [r0], #-35	; 0xffffffdd
    e058:	009721b7 			; <UNDEFINED> instruction: 0x009721b7
    e05c:	01010000 	mrseq	r0, (UNDEF: 1)
    e060:	0023e20d 	eoreq	lr, r3, sp, lsl #4
    e064:	21bc0400 			; <UNDEFINED> instruction: 0x21bc0400
    e068:	00000097 	muleq	r0, r7, r0
    e06c:	1c0d0101 	stfnes	f0, [sp], {1}
    e070:	04000024 	streq	r0, [r0], #-36	; 0xffffffdc
    e074:	009721c1 	addseq	r2, r7, r1, asr #3
    e078:	01010000 	mrseq	r0, (UNDEF: 1)
    e07c:	00232e0d 	eoreq	r2, r3, sp, lsl #28
    e080:	21c90400 	biccs	r0, r9, r0, lsl #8
    e084:	00000097 	muleq	r0, r7, r0
    e088:	54110101 	ldrpl	r0, [r1], #-257	; 0xfffffeff
    e08c:	01000006 	tsteq	r0, r6
    e090:	03051529 	movweq	r1, #21801	; 0x5529
    e094:	38001348 	stmdacc	r0, {r3, r6, r8, r9, ip}
    e098:	00067011 	andeq	r7, r6, r1, lsl r0
    e09c:	152f0100 	strne	r0, [pc, #-256]!	; dfa4 <_Min_Stack_Size+0xcfa4>
    e0a0:	12a00305 	adcne	r0, r0, #335544320	; 0x14000000
    e0a4:	94113800 	ldrls	r3, [r1], #-2048	; 0xfffff800
    e0a8:	01000006 	tsteq	r0, r6
    e0ac:	03051635 	movweq	r1, #22069	; 0x5635
    e0b0:	380012a8 	stmdacc	r0, {r3, r5, r7, r9, ip}
    e0b4:	0006a211 	andeq	sl, r6, r1, lsl r2
    e0b8:	173b0100 	ldrne	r0, [fp, -r0, lsl #2]!
    e0bc:	132c0305 			; <UNDEFINED> instruction: 0x132c0305
    e0c0:	b6113800 	ldrlt	r3, [r1], -r0, lsl #16
    e0c4:	01000006 	tsteq	r0, r6
    e0c8:	0305173c 	movweq	r1, #22332	; 0x573c
    e0cc:	38001328 	stmdacc	r0, {r3, r5, r8, r9, ip}
    e0d0:	0006c411 	andeq	ip, r6, r1, lsl r4
    e0d4:	17420100 	strbne	r0, [r2, -r0, lsl #2]
    e0d8:	12980305 	addsne	r0, r8, #335544320	; 0x14000000
    e0dc:	d2113800 	andsle	r3, r1, #0, 16
    e0e0:	01000006 	tsteq	r0, r6
    e0e4:	03051548 	movweq	r1, #21832	; 0x5548
    e0e8:	3800129c 	stmdacc	r0, {r2, r3, r4, r7, r9, ip}
    e0ec:	0006e011 	andeq	lr, r6, r1, lsl r0
    e0f0:	164d0100 	strbne	r0, [sp], -r0, lsl #2
    e0f4:	00000305 	andeq	r0, r0, r5, lsl #6
    e0f8:	f4110000 			; <UNDEFINED> instruction: 0xf4110000
    e0fc:	01000006 	tsteq	r0, r6
    e100:	03051552 	movweq	r1, #21842	; 0x5552
    e104:	00000000 	andeq	r0, r0, r0
    e108:	00070211 	andeq	r0, r7, r1, lsl r2
    e10c:	15570100 	ldrbne	r0, [r7, #-256]	; 0xffffff00
    e110:	12a40305 	adcne	r0, r4, #335544320	; 0x14000000
    e114:	10113800 	andsne	r3, r1, r0, lsl #16
    e118:	01000007 	tsteq	r0, r7
    e11c:	0305155e 	movweq	r1, #21854	; 0x555e
    e120:	3800134c 	stmdacc	r0, {r2, r3, r6, r8, r9, ip}
    e124:	00071e11 	andeq	r1, r7, r1, lsl lr
    e128:	16630100 	strbtne	r0, [r3], -r0, lsl #2
    e12c:	13440305 	movtne	r0, #17157	; 0x4305
    e130:	2c113800 	ldccs	8, cr3, [r1], {-0}
    e134:	01000007 	tsteq	r0, r7
    e138:	03051568 	movweq	r1, #21864	; 0x5568
    e13c:	38001340 	stmdacc	r0, {r6, r8, r9, ip}
    e140:	00073a11 	andeq	r3, r7, r1, lsl sl
    e144:	156d0100 	strbne	r0, [sp, #-256]!	; 0xffffff00
    e148:	133c0305 	teqne	ip, #335544320	; 0x14000000
    e14c:	59113800 	ldmdbpl	r1, {fp, ip, sp}
    e150:	01000007 	tsteq	r0, r7
    e154:	03051572 	movweq	r1, #21874	; 0x5572
    e158:	38001424 	stmdacc	r0, {r2, r5, sl, ip}
    e15c:	00076711 	andeq	r6, r7, r1, lsl r7
    e160:	15810100 	strne	r0, [r1, #256]	; 0x100
    e164:	00000305 	andeq	r0, r0, r5, lsl #6
    e168:	75110000 	ldrvc	r0, [r1, #-0]
    e16c:	01000007 	tsteq	r0, r7
    e170:	03051586 	movweq	r1, #21894	; 0x5586
    e174:	38001338 	stmdacc	r0, {r3, r4, r5, r8, r9, ip}
    e178:	00078311 	andeq	r8, r7, r1, lsl r3
    e17c:	158b0100 	strne	r0, [fp, #256]	; 0x100
    e180:	00000305 	andeq	r0, r0, r5, lsl #6
    e184:	91110000 	tstls	r1, r0
    e188:	01000007 	tsteq	r0, r7
    e18c:	03051590 	movweq	r1, #21904	; 0x5590
    e190:	38001334 	stmdacc	r0, {r2, r4, r5, r8, r9, ip}
    e194:	00079f11 	andeq	r9, r7, r1, lsl pc
    e198:	15980100 	ldrne	r0, [r8, #256]	; 0x100
    e19c:	13300305 	teqne	r0, #335544320	; 0x14000000
    e1a0:	62113800 	andsvs	r3, r1, #0, 16
    e1a4:	01000006 	tsteq	r0, r6
    e1a8:	030515a1 	movweq	r1, #21921	; 0x55a1
    e1ac:	38002424 	stmdacc	r0, {r2, r5, sl, sp}
    e1b0:	15dd0112 	ldrbne	r0, [sp, #274]	; 0x112
    e1b4:	cc010000 	stcgt	0, cr0, [r1], {-0}
    e1b8:	29140107 	ldmdbcs	r4, {r0, r1, r2, r8}
    e1bc:	29a41000 	stmibcs	r4!, {ip}
    e1c0:	4f201000 	svcmi	0x00201000
    e1c4:	34010000 	strcc	r0, [r1], #-0
    e1c8:	13000009 	movwne	r0, #9
    e1cc:	000003fa 	strdeq	r0, [r0], -sl
    e1d0:	8b09d001 	blhi	2821dc <__RAM_SIZE+0x1821dc>
    e1d4:	5a000000 	bpl	e1dc <_Min_Stack_Size+0xd1dc>
    e1d8:	5800004f 	stmdapl	r0, {r0, r1, r2, r3, r6}
    e1dc:	1400004f 	strne	r0, [r0], #-79	; 0xffffffb1
    e1e0:	10002968 	andne	r2, r0, r8, ror #18
    e1e4:	00000934 	andeq	r0, r0, r4, lsr r9
    e1e8:	05500115 	ldrbeq	r0, [r0, #-277]	; 0xfffffeeb
    e1ec:	00134c03 	andseq	r4, r3, r3, lsl #24
    e1f0:	51011538 	tstpl	r1, r8, lsr r5
    e1f4:	5fd80305 	svcpl	0x00d80305
    e1f8:	01151000 	tsteq	r5, r0
    e1fc:	4d0c0553 	cfstr32mi	mvfx0, [ip, #-332]	; 0xfffffeb4
    e200:	15415449 	strbne	r5, [r1, #-1097]	; 0xfffffbb7
    e204:	01107d02 	tsteq	r0, r2, lsl #26
    e208:	7d021530 	cfstr32vc	mvfx1, [r2, #-192]	; 0xffffff40
    e20c:	00300114 	eorseq	r0, r0, r4, lsl r1
    e210:	01011600 	tsteq	r1, r0, lsl #12
    e214:	00001984 	andeq	r1, r0, r4, lsl #19
    e218:	00001984 	andeq	r1, r0, r4, lsl #19
    e21c:	0d06d503 	cfstr32eq	mvfx13, [r6, #-12]
    e220:	00020300 	andeq	r0, r2, r0, lsl #6
    e224:	81000200 	mrshi	r0, R8_usr
    e228:	04000027 	streq	r0, [r0], #-39	; 0xffffffd9
    e22c:	00003d01 	andeq	r3, r0, r1, lsl #26
    e230:	25410c00 	strbcs	r0, [r1, #-3072]	; 0xfffff400
    e234:	065c0000 	ldrbeq	r0, [ip], -r0
    e238:	04700000 	ldrbteq	r0, [r0], #-0
	...
    e244:	4e790000 	cdpmi	0, 7, cr0, cr9, cr0, {0}
    e248:	04020000 	streq	r0, [r2], #-0
    e24c:	00023907 	andeq	r3, r2, r7, lsl #18
    e250:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    e254:	00746e69 	rsbseq	r6, r4, r9, ror #28
    e258:	e8050802 	stmda	r5, {r1, fp}
    e25c:	02000004 	andeq	r0, r0, #4
    e260:	063e0408 	ldrteq	r0, [lr], -r8, lsl #8
    e264:	01020000 	mrseq	r0, (UNDEF: 2)
    e268:	00086d06 	andeq	r6, r8, r6, lsl #26
    e26c:	08010200 	stmdaeq	r1, {r9}
    e270:	0000086b 	andeq	r0, r0, fp, ror #16
    e274:	cf050202 	svcgt	0x00050202
    e278:	02000006 	andeq	r0, r0, #6
    e27c:	09390702 	ldmdbeq	r9!, {r1, r8, r9, sl}
    e280:	04020000 	streq	r0, [r2], #-0
    e284:	0004ed05 	andeq	lr, r4, r5, lsl #26
    e288:	07040200 	streq	r0, [r4, -r0, lsl #4]
    e28c:	00000234 	andeq	r0, r0, r4, lsr r2
    e290:	2f070802 	svccs	0x00070802
    e294:	02000002 	andeq	r0, r0, #2
    e298:	08740801 	ldmdaeq	r4!, {r0, fp}^
    e29c:	2c040000 	stccs	0, cr0, [r4], {-0}
    e2a0:	03000007 	movweq	r0, #7
    e2a4:	00683178 	rsbeq	r3, r8, r8, ror r1
    e2a8:	3b050000 	blcc	14e2b0 <__RAM_SIZE+0x4e2b0>
    e2ac:	1c000005 	stcne	0, cr0, [r0], {5}
    e2b0:	10018202 	andne	r8, r1, r2, lsl #4
    e2b4:	00000108 	andeq	r0, r0, r8, lsl #2
    e2b8:	00082d06 	andeq	r2, r8, r6, lsl #26
    e2bc:	01860200 	orreq	r0, r6, r0, lsl #4
    e2c0:	00007d19 	andeq	r7, r0, r9, lsl sp
    e2c4:	00230200 	eoreq	r0, r3, r0, lsl #4
    e2c8:	0003a006 	andeq	sl, r3, r6
    e2cc:	01870200 	orreq	r0, r7, r0, lsl #4
    e2d0:	00007d19 	andeq	r7, r0, r9, lsl sp
    e2d4:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    e2d8:	00043d06 	andeq	r3, r4, r6, lsl #26
    e2dc:	018a0200 	orreq	r0, sl, r0, lsl #4
    e2e0:	0001141b 	andeq	r1, r1, fp, lsl r4
    e2e4:	08230200 	stmdaeq	r3!, {r9}
    e2e8:	0001f206 	andeq	pc, r1, r6, lsl #4
    e2ec:	018b0200 	orreq	r0, fp, r0, lsl #4
    e2f0:	00007d19 	andeq	r7, r0, r9, lsl sp
    e2f4:	0c230200 	sfmeq	f0, 4, [r3], #-0
    e2f8:	00096f06 	andeq	r6, r9, r6, lsl #30
    e2fc:	01910200 	orrseq	r0, r1, r0, lsl #4
    e300:	00011a1a 	andeq	r1, r1, sl, lsl sl
    e304:	10230200 	eorne	r0, r3, r0, lsl #4
    e308:	00001b06 	andeq	r1, r0, r6, lsl #22
    e30c:	01920200 	orrseq	r0, r2, r0, lsl #4
    e310:	00011a1a 	andeq	r1, r1, sl, lsl sl
    e314:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    e318:	00060906 	andeq	r0, r6, r6, lsl #18
    e31c:	01960200 	orrseq	r0, r6, r0, lsl #4
    e320:	0001201b 	andeq	r2, r1, fp, lsl r0
    e324:	18230200 	stmdane	r3!, {r9}
    e328:	14010700 	strne	r0, [r1], #-1792	; 0xfffff900
    e32c:	08000001 	stmdaeq	r0, {r0}
    e330:	0000007d 	andeq	r0, r0, sp, ror r0
    e334:	08040900 	stmdaeq	r4, {r8, fp}
    e338:	09000001 	stmdbeq	r0, {r0}
    e33c:	00008904 	andeq	r8, r0, r4, lsl #18
    e340:	1a040900 	bne	110748 <__RAM_SIZE+0x10748>
    e344:	0a000001 	beq	e350 <_Min_Stack_Size+0xd350>
    e348:	0000064a 	andeq	r0, r0, sl, asr #12
    e34c:	03019b02 	movweq	r9, #6914	; 0x1b02
    e350:	00000089 	andeq	r0, r0, r9, lsl #1
    e354:	01260409 			; <UNDEFINED> instruction: 0x01260409
    e358:	e60b0000 	str	r0, [fp], -r0
    e35c:	04000022 	streq	r0, [r0], #-34	; 0xffffffde
    e360:	0147236c 	cmpeq	r7, ip, ror #6
    e364:	01010000 	mrseq	r0, (UNDEF: 1)
    e368:	01330409 	teqeq	r3, r9, lsl #8
    e36c:	c70b0000 	strgt	r0, [fp, -r0]
    e370:	04000022 	streq	r0, [r0], #-34	; 0xffffffde
    e374:	0147236d 	cmpeq	r7, sp, ror #6
    e378:	01010000 	mrseq	r0, (UNDEF: 1)
    e37c:	0023b20b 	eoreq	fp, r3, fp, lsl #4
    e380:	23730400 	cmncs	r3, #0, 8
    e384:	00000147 	andeq	r0, r0, r7, asr #2
    e388:	010c0101 	tsteq	ip, r1, lsl #2
    e38c:	000020d6 	ldrdeq	r2, [r0], -r6
    e390:	01074e01 	tsteq	r7, r1, lsl #28
    e394:	100029a4 	andne	r2, r0, r4, lsr #19
    e398:	100029fc 	strdne	r2, [r0], -ip
    e39c:	01007d02 	tsteq	r0, r2, lsl #26
    e3a0:	0024c10d 	eoreq	ip, r4, sp, lsl #2
    e3a4:	344e0100 	strbcc	r0, [lr], #-256	; 0xffffff00
    e3a8:	00000133 	andeq	r0, r0, r3, lsr r1
    e3ac:	800e5001 	andhi	r5, lr, r1
    e3b0:	01000024 	tsteq	r0, r4, lsr #32
    e3b4:	01471f51 	cmpeq	r7, r1, asr pc
    e3b8:	4f730000 	svcmi	0x00730000
    e3bc:	4f6d0000 	svcmi	0x006d0000
    e3c0:	900e0000 	andls	r0, lr, r0
    e3c4:	01000025 	tsteq	r0, r5, lsr #32
    e3c8:	01331e52 	teqeq	r3, r2, asr lr
    e3cc:	4f9e0000 	svcmi	0x009e0000
    e3d0:	4f9c0000 	svcmi	0x009c0000
    e3d4:	a10e0000 	mrsge	r0, (UNDEF: 14)
    e3d8:	01000025 	tsteq	r0, r5, lsr #32
    e3dc:	01331e53 	teqeq	r3, r3, asr lr
    e3e0:	4fb30000 	svcmi	0x00b30000
    e3e4:	4fb10000 	svcmi	0x00b10000
    e3e8:	9b0e0000 	blls	38e3f0 <__RAM_SIZE+0x28e3f0>
    e3ec:	01000025 	tsteq	r0, r5, lsr #32
    e3f0:	007d1d54 	rsbseq	r1, sp, r4, asr sp
    e3f4:	4fc80000 	svcmi	0x00c80000
    e3f8:	4fc60000 	svcmi	0x00c60000
    e3fc:	3f0e0000 	svccc	0x000e0000
    e400:	01000008 	tsteq	r0, r8
    e404:	007d1d55 	rsbseq	r1, sp, r5, asr sp
    e408:	4fe90000 	svcmi	0x00e90000
    e40c:	4fdf0000 	svcmi	0x00df0000
    e410:	800e0000 	andhi	r0, lr, r0
    e414:	01000025 	tsteq	r0, r5, lsr #32
    e418:	007d1d56 	rsbseq	r1, sp, r6, asr sp
    e41c:	502c0000 	eorpl	r0, ip, r0
    e420:	502a0000 	eorpl	r0, sl, r0
    e424:	00000000 	andeq	r0, r0, r0
    e428:	0000019d 	muleq	r0, sp, r1
    e42c:	28580002 	ldmdacs	r8, {r1}^
    e430:	01040000 	mrseq	r0, (UNDEF: 4)
    e434:	0000003d 	andeq	r0, r0, sp, lsr r0
    e438:	0025b00c 	eoreq	fp, r5, ip
    e43c:	00065c00 	andeq	r5, r6, r0, lsl #24
    e440:	00048000 	andeq	r8, r4, r0
	...
    e44c:	00503400 	subseq	r3, r0, r0, lsl #8
    e450:	07040200 	streq	r0, [r4, -r0, lsl #4]
    e454:	00000239 	andeq	r0, r0, r9, lsr r2
    e458:	69050403 	stmdbvs	r5, {r0, r1, sl}
    e45c:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    e460:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    e464:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    e468:	00063e04 	andeq	r3, r6, r4, lsl #28
    e46c:	06010200 	streq	r0, [r1], -r0, lsl #4
    e470:	0000086d 	andeq	r0, r0, sp, ror #16
    e474:	6b080102 	blvs	20e884 <__RAM_SIZE+0x10e884>
    e478:	02000008 	andeq	r0, r0, #8
    e47c:	06cf0502 	strbeq	r0, [pc], r2, lsl #10
    e480:	02020000 	andeq	r0, r2, #0
    e484:	00093907 	andeq	r3, r9, r7, lsl #18
    e488:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    e48c:	000004ed 	andeq	r0, r0, sp, ror #9
    e490:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    e494:	02000002 	andeq	r0, r0, #2
    e498:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    e49c:	01020000 	mrseq	r0, (UNDEF: 2)
    e4a0:	00087408 	andeq	r7, r8, r8, lsl #8
    e4a4:	072c0400 	streq	r0, [ip, -r0, lsl #8]!
    e4a8:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
    e4ac:	00006831 	andeq	r6, r0, r1, lsr r8
    e4b0:	053b0500 	ldreq	r0, [fp, #-1280]!	; 0xfffffb00
    e4b4:	021c0000 	andseq	r0, ip, #0
    e4b8:	08100182 	ldmdaeq	r0, {r1, r7, r8}
    e4bc:	06000001 	streq	r0, [r0], -r1
    e4c0:	0000082d 	andeq	r0, r0, sp, lsr #16
    e4c4:	19018602 	stmdbne	r1, {r1, r9, sl, pc}
    e4c8:	0000007d 	andeq	r0, r0, sp, ror r0
    e4cc:	06002302 	streq	r2, [r0], -r2, lsl #6
    e4d0:	000003a0 	andeq	r0, r0, r0, lsr #7
    e4d4:	19018702 	stmdbne	r1, {r1, r8, r9, sl, pc}
    e4d8:	0000007d 	andeq	r0, r0, sp, ror r0
    e4dc:	06042302 	streq	r2, [r4], -r2, lsl #6
    e4e0:	0000043d 	andeq	r0, r0, sp, lsr r4
    e4e4:	1b018a02 	blne	70cf4 <SYSTICK_CYCLES+0x47cb5>
    e4e8:	00000114 	andeq	r0, r0, r4, lsl r1
    e4ec:	06082302 	streq	r2, [r8], -r2, lsl #6
    e4f0:	000001f2 	strdeq	r0, [r0], -r2
    e4f4:	19018b02 	stmdbne	r1, {r1, r8, r9, fp, pc}
    e4f8:	0000007d 	andeq	r0, r0, sp, ror r0
    e4fc:	060c2302 	streq	r2, [ip], -r2, lsl #6
    e500:	0000096f 	andeq	r0, r0, pc, ror #18
    e504:	1a019102 	bne	72914 <SYSTICK_CYCLES+0x498d5>
    e508:	0000011a 	andeq	r0, r0, sl, lsl r1
    e50c:	06102302 	ldreq	r2, [r0], -r2, lsl #6
    e510:	0000001b 	andeq	r0, r0, fp, lsl r0
    e514:	1a019202 	bne	72d24 <SYSTICK_CYCLES+0x49ce5>
    e518:	0000011a 	andeq	r0, r0, sl, lsl r1
    e51c:	06142302 	ldreq	r2, [r4], -r2, lsl #6
    e520:	00000609 	andeq	r0, r0, r9, lsl #12
    e524:	1b019602 	blne	73d34 <SYSTICK_CYCLES+0x4acf5>
    e528:	00000120 	andeq	r0, r0, r0, lsr #2
    e52c:	00182302 	andseq	r2, r8, r2, lsl #6
    e530:	01140107 	tsteq	r4, r7, lsl #2
    e534:	7d080000 	stcvc	0, cr0, [r8, #-0]
    e538:	00000000 	andeq	r0, r0, r0
    e53c:	01080409 	tsteq	r8, r9, lsl #8
    e540:	04090000 	streq	r0, [r9], #-0
    e544:	00000089 	andeq	r0, r0, r9, lsl #1
    e548:	011a0409 	tsteq	sl, r9, lsl #8
    e54c:	4a0a0000 	bmi	28e554 <__RAM_SIZE+0x18e554>
    e550:	02000006 	andeq	r0, r0, #6
    e554:	8903019b 	stmdbhi	r3, {r0, r1, r3, r4, r7, r8}
    e558:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    e55c:	00012604 	andeq	r2, r1, r4, lsl #12
    e560:	33040900 	movwcc	r0, #18688	; 0x4900
    e564:	0b000001 	bleq	e570 <_Min_Stack_Size+0xd570>
    e568:	00204401 	eoreq	r4, r0, r1, lsl #8
    e56c:	07490100 	strbeq	r0, [r9, -r0, lsl #2]
    e570:	0029fc01 	eoreq	pc, r9, r1, lsl #24
    e574:	002a2a10 	eoreq	r2, sl, r0, lsl sl
    e578:	007d0210 	rsbseq	r0, sp, r0, lsl r2
    e57c:	24c10c01 	strbcs	r0, [r1], #3073	; 0xc01
    e580:	49010000 	stmdbmi	r1, {}	; <UNPREDICTABLE>
    e584:	00013336 	andeq	r3, r1, r6, lsr r3
    e588:	0d500100 	ldfeqe	f0, [r0, #-0]
    e58c:	0000061b 	andeq	r0, r0, fp, lsl r6
    e590:	39174c01 	ldmdbcc	r7, {r0, sl, fp, lr}
    e594:	43000001 	movwmi	r0, #1
    e598:	3f000050 	svccc	0x00000050
    e59c:	0d000050 	stceq	0, cr0, [r0, #-320]	; 0xfffffec0
    e5a0:	00002590 	muleq	r0, r0, r5
    e5a4:	33164d01 	tstcc	r6, #1, 26	; 0x40
    e5a8:	69000001 	stmdbvs	r0, {r0}
    e5ac:	61000050 	qaddvs	r0, r0, r0
    e5b0:	0d000050 	stceq	0, cr0, [r0, #-320]	; 0xfffffec0
    e5b4:	000025a1 	andeq	r2, r0, r1, lsr #11
    e5b8:	33164e01 	tstcc	r6, #1, 28
    e5bc:	a0000001 	andge	r0, r0, r1
    e5c0:	9e000050 	mcrls	0, 0, r0, cr0, cr0, {2}
    e5c4:	00000050 	andeq	r0, r0, r0, asr r0
    e5c8:	000ad900 	andeq	sp, sl, r0, lsl #18
    e5cc:	1c000200 	sfmne	f0, 4, [r0], {-0}
    e5d0:	04000029 	streq	r0, [r0], #-41	; 0xffffffd7
    e5d4:	00003d01 	andeq	r3, r0, r1, lsl #26
    e5d8:	26360c00 	ldrtcs	r0, [r6], -r0, lsl #24
    e5dc:	065c0000 	ldrbeq	r0, [ip], -r0
    e5e0:	04900000 	ldreq	r0, [r0], #0
	...
    e5ec:	51930000 	orrspl	r0, r3, r0
    e5f0:	04020000 	streq	r0, [r2], #-0
    e5f4:	00023907 	andeq	r3, r2, r7, lsl #18
    e5f8:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    e5fc:	00746e69 	rsbseq	r6, r4, r9, ror #28
    e600:	e8050802 	stmda	r5, {r1, fp}
    e604:	02000004 	andeq	r0, r0, #4
    e608:	063e0408 	ldrteq	r0, [lr], -r8, lsl #8
    e60c:	01020000 	mrseq	r0, (UNDEF: 2)
    e610:	00086d06 	andeq	r6, r8, r6, lsl #26
    e614:	08010200 	stmdaeq	r1, {r9}
    e618:	0000086b 	andeq	r0, r0, fp, ror #16
    e61c:	cf050202 	svcgt	0x00050202
    e620:	02000006 	andeq	r0, r0, #6
    e624:	09390702 	ldmdbeq	r9!, {r1, r8, r9, sl}
    e628:	04020000 	streq	r0, [r2], #-0
    e62c:	0004ed05 	andeq	lr, r4, r5, lsl #26
    e630:	07040200 	streq	r0, [r4, -r0, lsl #4]
    e634:	00000234 	andeq	r0, r0, r4, lsr r2
    e638:	2f070802 	svccs	0x00070802
    e63c:	04000002 	streq	r0, [r0], #-2
    e640:	08010204 	stmdaeq	r1, {r2, r9}
    e644:	00000874 	andeq	r0, r0, r4, ror r8
    e648:	0008fa05 	andeq	pc, r8, r5, lsl #20
    e64c:	31730200 	cmncc	r3, r0, lsl #4
    e650:	00000078 	andeq	r0, r0, r8, ror r0
    e654:	0008f905 	andeq	pc, r8, r5, lsl #18
    e658:	31740200 	cmncc	r4, r0, lsl #4
    e65c:	0000004c 	andeq	r0, r0, ip, asr #32
    e660:	00079a05 	andeq	r9, r7, r5, lsl #20
    e664:	31760200 	cmncc	r6, r0, lsl #4
    e668:	00000029 	andeq	r0, r0, r9, lsr #32
    e66c:	00072c05 	andeq	r2, r7, r5, lsl #24
    e670:	31780200 	cmncc	r8, r0, lsl #4
    e674:	00000068 	andeq	r0, r0, r8, rrx
    e678:	00053b06 	andeq	r3, r5, r6, lsl #22
    e67c:	82031c00 	andhi	r1, r3, #0, 24
    e680:	012e1001 			; <UNDEFINED> instruction: 0x012e1001
    e684:	2d070000 	stccs	0, cr0, [r7, #-0]
    e688:	03000008 	movweq	r0, #8
    e68c:	a3190186 	tstge	r9, #-2147483615	; 0x80000021
    e690:	02000000 	andeq	r0, r0, #0
    e694:	a0070023 	andge	r0, r7, r3, lsr #32
    e698:	03000003 	movweq	r0, #3
    e69c:	a3190187 	tstge	r9, #-1073741791	; 0xc0000021
    e6a0:	02000000 	andeq	r0, r0, #0
    e6a4:	3d070423 	cfstrscc	mvf0, [r7, #-140]	; 0xffffff74
    e6a8:	03000004 	movweq	r0, #4
    e6ac:	3a1b018a 	bcc	6cecdc <__RAM_SIZE+0x5cecdc>
    e6b0:	02000001 	andeq	r0, r0, #1
    e6b4:	f2070823 	vadd.i8	d0, d7, d19
    e6b8:	03000001 	movweq	r0, #1
    e6bc:	a319018b 	tstge	r9, #-1073741790	; 0xc0000022
    e6c0:	02000000 	andeq	r0, r0, #0
    e6c4:	6f070c23 	svcvs	0x00070c23
    e6c8:	03000009 	movweq	r0, #9
    e6cc:	401a0191 	mulsmi	sl, r1, r1
    e6d0:	02000001 	andeq	r0, r0, #1
    e6d4:	1b071023 	blne	1d2768 <__RAM_SIZE+0xd2768>
    e6d8:	03000000 	movweq	r0, #0
    e6dc:	401a0192 	mulsmi	sl, r2, r1
    e6e0:	02000001 	andeq	r0, r0, #1
    e6e4:	09071423 	stmdbeq	r7, {r0, r1, r5, sl, ip}
    e6e8:	03000006 	movweq	r0, #6
    e6ec:	461b0196 			; <UNDEFINED> instruction: 0x461b0196
    e6f0:	02000001 	andeq	r0, r0, #1
    e6f4:	08001823 	stmdaeq	r0, {r0, r1, r5, fp, ip}
    e6f8:	00013a01 	andeq	r3, r1, r1, lsl #20
    e6fc:	00a30900 	adceq	r0, r3, r0, lsl #18
    e700:	0a000000 	beq	e708 <_Min_Stack_Size+0xd708>
    e704:	00012e04 	andeq	r2, r1, r4, lsl #28
    e708:	af040a00 	svcge	0x00040a00
    e70c:	0a000000 	beq	e714 <_Min_Stack_Size+0xd714>
    e710:	00014004 	andeq	r4, r1, r4
    e714:	064a0b00 	strbeq	r0, [sl], -r0, lsl #22
    e718:	9b030000 	blls	ce720 <SYSTICK_CYCLES+0xa56e1>
    e71c:	00af0301 	adceq	r0, pc, r1, lsl #6
    e720:	e1060000 	mrs	r0, (UNDEF: 6)
    e724:	40000024 	andmi	r0, r0, r4, lsr #32
    e728:	1001a803 	andne	sl, r1, r3, lsl #16
    e72c:	00000208 	andeq	r0, r0, r8, lsl #4
    e730:	0022da07 	eoreq	sp, r2, r7, lsl #20
    e734:	01ac0300 			; <UNDEFINED> instruction: 0x01ac0300
    e738:	0000a319 	andeq	sl, r0, r9, lsl r3
    e73c:	00230200 	eoreq	r0, r3, r0, lsl #4
    e740:	00245807 	eoreq	r5, r4, r7, lsl #16
    e744:	01af0300 			; <UNDEFINED> instruction: 0x01af0300
    e748:	0002081a 	andeq	r0, r2, sl, lsl r8
    e74c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    e750:	00248b07 	eoreq	r8, r4, r7, lsl #22
    e754:	01b30300 			; <UNDEFINED> instruction: 0x01b30300
    e758:	00014c19 	andeq	r4, r1, r9, lsl ip
    e75c:	08230200 	stmdaeq	r3!, {r9}
    e760:	00246607 	eoreq	r6, r4, r7, lsl #12
    e764:	01b70300 			; <UNDEFINED> instruction: 0x01b70300
    e768:	00020e1a 	andeq	r0, r2, sl, lsl lr
    e76c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    e770:	0023c807 	eoreq	ip, r3, r7, lsl #16
    e774:	01b80300 			; <UNDEFINED> instruction: 0x01b80300
    e778:	00020e1a 	andeq	r0, r2, sl, lsl lr
    e77c:	28230200 	stmdacs	r3!, {r9}
    e780:	00238e07 	eoreq	r8, r3, r7, lsl #28
    e784:	01c00300 	biceq	r0, r0, r0, lsl #6
    e788:	0000a319 	andeq	sl, r0, r9, lsl r3
    e78c:	2c230200 	sfmcs	f0, 4, [r3], #-0
    e790:	00236707 	eoreq	r6, r3, r7, lsl #14
    e794:	01c30300 	biceq	r0, r3, r0, lsl #6
    e798:	0000a319 	andeq	sl, r0, r9, lsl r3
    e79c:	30230200 	eorcc	r0, r3, r0, lsl #4
    e7a0:	0023e307 	eoreq	lr, r3, r7, lsl #6
    e7a4:	01c60300 	biceq	r0, r6, r0, lsl #6
    e7a8:	0000a319 	andeq	sl, r0, r9, lsl r3
    e7ac:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    e7b0:	00241d07 	eoreq	r1, r4, r7, lsl #26
    e7b4:	01c90300 	biceq	r0, r9, r0, lsl #6
    e7b8:	0000a319 	andeq	sl, r0, r9, lsl r3
    e7bc:	38230200 	stmdacc	r3!, {r9}
    e7c0:	00232f07 	eoreq	r2, r3, r7, lsl #30
    e7c4:	01cc0300 	biceq	r0, ip, r0, lsl #6
    e7c8:	0000a319 	andeq	sl, r0, r9, lsl r3
    e7cc:	3c230200 	sfmcc	f0, 4, [r3], #-0
    e7d0:	7f040a00 	svcvc	0x00040a00
    e7d4:	0a000000 	beq	e7dc <_Min_Stack_Size+0xd7dc>
    e7d8:	00015904 	andeq	r5, r1, r4, lsl #18
    e7dc:	235d0b00 	cmpcs	sp, #0, 22
    e7e0:	cf030000 	svcgt	0x00030000
    e7e4:	01590301 	cmpeq	r9, r1, lsl #6
    e7e8:	4b060000 	blmi	18e7f0 <__RAM_SIZE+0x8e7f0>
    e7ec:	d8000003 	stmdale	r0, {r0, r1}
    e7f0:	1001d603 	andne	sp, r1, r3, lsl #12
    e7f4:	00000546 	andeq	r0, r0, r6, asr #10
    e7f8:	00092c07 	andeq	r2, r9, r7, lsl #24
    e7fc:	01dd0300 	bicseq	r0, sp, r0, lsl #6
    e800:	0000a319 	andeq	sl, r0, r9, lsl r3
    e804:	00230200 	eoreq	r0, r3, r0, lsl #4
    e808:	00079f07 	andeq	r9, r7, r7, lsl #30
    e80c:	01de0300 	bicseq	r0, lr, r0, lsl #6
    e810:	0000a319 	andeq	sl, r0, r9, lsl r3
    e814:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    e818:	0001bc07 	andeq	fp, r1, r7, lsl #24
    e81c:	01df0300 	bicseq	r0, pc, r0, lsl #6
    e820:	0000761a 	andeq	r7, r0, sl, lsl r6
    e824:	08230200 	stmdaeq	r3!, {r9}
    e828:	00091607 	andeq	r1, r9, r7, lsl #12
    e82c:	01e00300 	mvneq	r0, r0, lsl #6
    e830:	0000761a 	andeq	r7, r0, sl, lsl r6
    e834:	0c230200 	sfmeq	f0, 4, [r3], #-0
    e838:	00041107 	andeq	r1, r4, r7, lsl #2
    e83c:	01e10300 	mvneq	r0, r0, lsl #6
    e840:	0000761a 	andeq	r7, r0, sl, lsl r6
    e844:	10230200 	eorne	r0, r3, r0, lsl #4
    e848:	00095a07 	andeq	r5, r9, r7, lsl #20
    e84c:	01e20300 	mvneq	r0, r0, lsl #6
    e850:	0000a319 	andeq	sl, r0, r9, lsl r3
    e854:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    e858:	0021e207 	eoreq	lr, r1, r7, lsl #4
    e85c:	01e30300 	mvneq	r0, r0, lsl #6
    e860:	0000a319 	andeq	sl, r0, r9, lsl r3
    e864:	18230200 	stmdane	r3!, {r9}
    e868:	00062507 	andeq	r2, r6, r7, lsl #10
    e86c:	01e40300 	mvneq	r0, r0, lsl #6
    e870:	0000a319 	andeq	sl, r0, r9, lsl r3
    e874:	1c230200 	sfmne	f0, 4, [r3], #-0
    e878:	0006ba07 	andeq	fp, r6, r7, lsl #20
    e87c:	01e80300 	mvneq	r0, r0, lsl #6
    e880:	0005461a 	andeq	r4, r5, sl, lsl r6
    e884:	20230200 	eorcs	r0, r3, r0, lsl #4
    e888:	00019907 	andeq	r9, r1, r7, lsl #18
    e88c:	01e90300 	mvneq	r0, r0, lsl #6
    e890:	0005461a 	andeq	r4, r5, sl, lsl r6
    e894:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    e898:	0005b107 	andeq	fp, r5, r7, lsl #2
    e89c:	01f10300 	mvnseq	r0, r0, lsl #6
    e8a0:	0002081a 	andeq	r0, r2, sl, lsl r8
    e8a4:	28230200 	stmdacs	r3!, {r9}
    e8a8:	0002d907 	andeq	sp, r2, r7, lsl #18
    e8ac:	01f20300 	mvnseq	r0, r0, lsl #6
    e8b0:	00009719 	andeq	r9, r0, r9, lsl r7
    e8b4:	2c230200 	sfmcs	f0, 4, [r3], #-0
    e8b8:	00024607 	andeq	r4, r2, r7, lsl #12
    e8bc:	01f30300 	mvnseq	r0, r0, lsl #6
    e8c0:	00009719 	andeq	r9, r0, r9, lsl r7
    e8c4:	30230200 	eorcc	r0, r3, r0, lsl #4
    e8c8:	00017307 	andeq	r7, r1, r7, lsl #6
    e8cc:	01f40300 	mvnseq	r0, r0, lsl #6
    e8d0:	00009719 	andeq	r9, r0, r9, lsl r7
    e8d4:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
    e8d8:	00074b07 	andeq	r4, r7, r7, lsl #22
    e8dc:	01f50300 	mvnseq	r0, r0, lsl #6
    e8e0:	00009719 	andeq	r9, r0, r9, lsl r7
    e8e4:	38230200 	stmdacc	r3!, {r9}
    e8e8:	0000eb07 	andeq	lr, r0, r7, lsl #22
    e8ec:	01f60300 	mvnseq	r0, r0, lsl #6
    e8f0:	00009719 	andeq	r9, r0, r9, lsl r7
    e8f4:	3c230200 	sfmcc	f0, 4, [r3], #-0
    e8f8:	00035c07 	andeq	r5, r3, r7, lsl #24
    e8fc:	01fb0300 	mvnseq	r0, r0, lsl #6
    e900:	00055d1b 	andeq	r5, r5, fp, lsl sp
    e904:	40230200 	eormi	r0, r3, r0, lsl #4
    e908:	00015207 	andeq	r5, r1, r7, lsl #4
    e90c:	02030300 	andeq	r0, r3, #0, 6
    e910:	00013a1b 	andeq	r3, r1, fp, lsl sl
    e914:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
    e918:	00010707 	andeq	r0, r1, r7, lsl #14
    e91c:	02040300 	andeq	r0, r4, #0, 6
    e920:	0000a319 	andeq	sl, r0, r9, lsl r3
    e924:	48230200 	stmdami	r3!, {r9}
    e928:	00033b07 	andeq	r3, r3, r7, lsl #22
    e92c:	02080300 	andeq	r0, r8, #0, 6
    e930:	00014c19 	andeq	r4, r1, r9, lsl ip
    e934:	4c230200 	sfmmi	f0, 4, [r3], #-0
    e938:	0002ec07 	andeq	lr, r2, r7, lsl #24
    e93c:	020e0300 	andeq	r0, lr, #0, 6
    e940:	00055d1b 	andeq	r5, r5, fp, lsl sp
    e944:	68230200 	stmdavs	r3!, {r9}
    e948:	0005e907 	andeq	lr, r5, r7, lsl #18
    e94c:	020f0300 	andeq	r0, pc, #0, 6
    e950:	0000761a 	andeq	r7, r0, sl, lsl r6
    e954:	6c230200 	sfmvs	f0, 4, [r3], #-0
    e958:	00073207 	andeq	r3, r7, r7, lsl #4
    e95c:	02110300 	andseq	r0, r1, #0, 6
    e960:	0005461a 	andeq	r4, r5, sl, lsl r6
    e964:	70230200 	eorvc	r0, r3, r0, lsl #4
    e968:	00021207 	andeq	r1, r2, r7, lsl #4
    e96c:	02120300 	andseq	r0, r2, #0, 6
    e970:	0005461a 	andeq	r4, r5, sl, lsl r6
    e974:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
    e978:	00071507 	andeq	r1, r7, r7, lsl #10
    e97c:	02130300 	andseq	r0, r3, #0, 6
    e980:	0000a319 	andeq	sl, r0, r9, lsl r3
    e984:	78230200 	stmdavc	r3!, {r9}
    e988:	0003c607 	andeq	ip, r3, r7, lsl #12
    e98c:	02140300 	andseq	r0, r4, #0, 6
    e990:	0000761a 	andeq	r7, r0, sl, lsl r6
    e994:	7c230200 	sfmvc	f0, 4, [r3], #-0
    e998:	00055407 	andeq	r5, r5, r7, lsl #8
    e99c:	02150300 	andseq	r0, r5, #0, 6
    e9a0:	00009719 	andeq	r9, r0, r9, lsl r7
    e9a4:	80230300 	eorhi	r0, r3, r0, lsl #6
    e9a8:	03e80701 	mvneq	r0, #262144	; 0x40000
    e9ac:	16030000 	strne	r0, [r3], -r0
    e9b0:	00971902 	addseq	r1, r7, r2, lsl #18
    e9b4:	23030000 	movwcs	r0, #12288	; 0x3000
    e9b8:	ff070184 			; <UNDEFINED> instruction: 0xff070184
    e9bc:	03000008 	movweq	r0, #8
    e9c0:	461a021f 			; <UNDEFINED> instruction: 0x461a021f
    e9c4:	03000005 	movweq	r0, #5
    e9c8:	07018823 	streq	r8, [r1, -r3, lsr #16]
    e9cc:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    e9d0:	1a022003 	bne	969e4 <SYSTICK_CYCLES+0x6d9a5>
    e9d4:	00000546 	andeq	r0, r0, r6, asr #10
    e9d8:	018c2303 	orreq	r2, ip, r3, lsl #6
    e9dc:	0002c107 	andeq	ip, r2, r7, lsl #2
    e9e0:	022e0300 	eoreq	r0, lr, #0, 6
    e9e4:	00009719 	andeq	r9, r0, r9, lsl r7
    e9e8:	90230300 	eorls	r0, r3, r0, lsl #6
    e9ec:	02560701 	subseq	r0, r6, #262144	; 0x40000
    e9f0:	2f030000 	svccs	0x00030000
    e9f4:	00971902 	addseq	r1, r7, r2, lsl #18
    e9f8:	23030000 	movwcs	r0, #12288	; 0x3000
    e9fc:	20070194 	mulcs	r7, r4, r1
    ea00:	03000003 	movweq	r0, #3
    ea04:	97190230 			; <UNDEFINED> instruction: 0x97190230
    ea08:	03000000 	movweq	r0, #0
    ea0c:	07019823 	streq	r9, [r1, -r3, lsr #16]
    ea10:	00000277 	andeq	r0, r0, r7, ror r2
    ea14:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
    ea18:	00000097 	muleq	r0, r7, r0
    ea1c:	019c2303 	orrseq	r2, ip, r3, lsl #6
    ea20:	00000007 	andeq	r0, r0, r7
    ea24:	02350300 	eorseq	r0, r5, #0, 6
    ea28:	0006421a 	andeq	r4, r6, sl, lsl r2
    ea2c:	a0230300 	eorge	r0, r3, r0, lsl #6
    ea30:	1bc80701 	blne	ff21063c <__RAM_segment_used_end__+0xc711063c>
    ea34:	3a030000 	bcc	cea3c <SYSTICK_CYCLES+0xa59fd>
    ea38:	00a31902 	adceq	r1, r3, r2, lsl #18
    ea3c:	23030000 	movwcs	r0, #12288	; 0x3000
    ea40:	880701a4 	stmdahi	r7, {r2, r5, r7, r8}
    ea44:	0300001c 	movweq	r0, #28
    ea48:	a319023d 	tstge	r9, #-805306365	; 0xd0000003
    ea4c:	03000000 	movweq	r0, #0
    ea50:	0701a823 	streq	sl, [r1, -r3, lsr #16]
    ea54:	00001b41 	andeq	r1, r0, r1, asr #22
    ea58:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
    ea5c:	000000a3 	andeq	r0, r0, r3, lsr #1
    ea60:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
    ea64:	001d3f07 	andseq	r3, sp, r7, lsl #30
    ea68:	02450300 	subeq	r0, r5, #0, 6
    ea6c:	0000a319 	andeq	sl, r0, r9, lsl r3
    ea70:	b0230300 	eorlt	r0, r3, r0, lsl #6
    ea74:	1c580701 	mrrcne	7, 0, r0, r8, cr1
    ea78:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
    ea7c:	00a31902 	adceq	r1, r3, r2, lsl #18
    ea80:	23030000 	movwcs	r0, #12288	; 0x3000
    ea84:	c30701b4 	movwgt	r0, #29108	; 0x71b4
    ea88:	03000007 	movweq	r0, #7
    ea8c:	461a024c 	ldrmi	r0, [sl], -ip, asr #4
    ea90:	03000005 	movweq	r0, #5
    ea94:	0701b823 	streq	fp, [r1, -r3, lsr #16]
    ea98:	00001d17 	andeq	r1, r0, r7, lsl sp
    ea9c:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
    eaa0:	000000a3 	andeq	r0, r0, r3, lsr #1
    eaa4:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
    eaa8:	001b1907 	andseq	r1, fp, r7, lsl #18
    eaac:	02520300 	subseq	r0, r2, #0, 6
    eab0:	0000a319 	andeq	sl, r0, r9, lsl r3
    eab4:	c0230300 	eorgt	r0, r3, r0, lsl #6
    eab8:	1a960701 	bne	fe5906c4 <__RAM_segment_used_end__+0xc64906c4>
    eabc:	55030000 	strpl	r0, [r3, #-0]
    eac0:	00a31902 	adceq	r1, r3, r2, lsl #18
    eac4:	23030000 	movwcs	r0, #12288	; 0x3000
    eac8:	ec0701c4 	stfs	f0, [r7], {196}	; 0xc4
    eacc:	0300001b 	movweq	r0, #27
    ead0:	a3190259 	tstge	r9, #-1879048187	; 0x90000005
    ead4:	03000000 	movweq	r0, #0
    ead8:	0701c823 	streq	ip, [r1, -r3, lsr #16]
    eadc:	000009c4 	andeq	r0, r0, r4, asr #19
    eae0:	1a025d03 	bne	a5ef4 <SYSTICK_CYCLES+0x7ceb5>
    eae4:	00000076 	andeq	r0, r0, r6, ror r0
    eae8:	01cc2303 	biceq	r2, ip, r3, lsl #6
    eaec:	00048107 	andeq	r8, r4, r7, lsl #2
    eaf0:	02780300 	rsbseq	r0, r8, #0, 6
    eaf4:	0000a319 	andeq	sl, r0, r9, lsl r3
    eaf8:	d0230300 	eorle	r0, r3, r0, lsl #6
    eafc:	056d0701 	strbeq	r0, [sp, #-1793]!	; 0xfffff8ff
    eb00:	7d030000 	stcvc	0, cr0, [r3, #-0]
    eb04:	00a31902 	adceq	r1, r3, r2, lsl #18
    eb08:	23030000 	movwcs	r0, #12288	; 0x3000
    eb0c:	0a0001d4 	beq	f264 <_Min_Stack_Size+0xe264>
    eb10:	00022104 	andeq	r2, r2, r4, lsl #2
    eb14:	5d010800 	stcpl	8, cr0, [r1, #-0]
    eb18:	09000005 	stmdbeq	r0, {r0, r2}
    eb1c:	00000546 	andeq	r0, r0, r6, asr #10
    eb20:	0000a309 	andeq	sl, r0, r9, lsl #6
    eb24:	040a0000 	streq	r0, [sl], #-0
    eb28:	0000054c 	andeq	r0, r0, ip, asr #10
    eb2c:	0007b306 	andeq	fp, r7, r6, lsl #6
    eb30:	7e033400 	cfcpysvc	mvf3, mvf3
    eb34:	06421003 	strbeq	r1, [r2], -r3
    eb38:	8d070000 	stchi	0, cr0, [r7, #-0]
    eb3c:	03000001 	movweq	r0, #1
    eb40:	a3190382 	tstge	r9, #134217730	; 0x8000002
    eb44:	02000000 	andeq	r0, r0, #0
    eb48:	97070023 	strls	r0, [r7, -r3, lsr #32]
    eb4c:	03000008 	movweq	r0, #8
    eb50:	081a0385 	ldmdaeq	sl, {r0, r2, r7, r8, r9}
    eb54:	02000002 	andeq	r0, r0, #2
    eb58:	fc070423 	stc2	4, cr0, [r7], {35}	; 0x23
    eb5c:	03000006 	movweq	r0, #6
    eb60:	97190388 	ldrls	r0, [r9, -r8, lsl #7]
    eb64:	02000000 	andeq	r0, r0, #0
    eb68:	cb070823 	blgt	1d0bfc <__RAM_SIZE+0xd0bfc>
    eb6c:	03000004 	movweq	r0, #4
    eb70:	5b1a038c 	blpl	68f9a8 <__RAM_SIZE+0x58f9a8>
    eb74:	02000006 	andeq	r0, r0, #6
    eb78:	62070c23 	andvs	r0, r7, #8960	; 0x2300
    eb7c:	03000001 	movweq	r0, #1
    eb80:	97190390 			; <UNDEFINED> instruction: 0x97190390
    eb84:	02000000 	andeq	r0, r0, #0
    eb88:	21071023 	tstcs	r7, r3, lsr #32
    eb8c:	03000001 	movweq	r0, #1
    eb90:	97190393 			; <UNDEFINED> instruction: 0x97190393
    eb94:	02000000 	andeq	r0, r0, #0
    eb98:	cd071423 	cfstrsgt	mvf1, [r7, #-140]	; 0xffffff74
    eb9c:	03000008 	movweq	r0, #8
    eba0:	461a0398 			; <UNDEFINED> instruction: 0x461a0398
    eba4:	02000005 	andeq	r0, r0, #5
    eba8:	e3071823 	movw	r1, #30755	; 0x7823
    ebac:	03000006 	movweq	r0, #6
    ebb0:	97190399 			; <UNDEFINED> instruction: 0x97190399
    ebb4:	02000000 	andeq	r0, r0, #0
    ebb8:	d3071c23 	movwle	r1, #31779	; 0x7c23
    ebbc:	03000005 	movweq	r0, #5
    ebc0:	421a039d 	andsmi	r0, sl, #1946157058	; 0x74000002
    ebc4:	02000006 	andeq	r0, r0, #6
    ebc8:	a0072023 	andge	r2, r7, r3, lsr #32
    ebcc:	03000006 	movweq	r0, #6
    ebd0:	421a039e 	andsmi	r0, sl, #2013265922	; 0x78000002
    ebd4:	02000006 	andeq	r0, r0, #6
    ebd8:	d0072423 	andle	r2, r7, r3, lsr #8
    ebdc:	03000001 	movweq	r0, #1
    ebe0:	971903a2 	ldrls	r0, [r9, -r2, lsr #7]
    ebe4:	02000000 	andeq	r0, r0, #0
    ebe8:	e0072823 	and	r2, r7, r3, lsr #16
    ebec:	03000009 	movweq	r0, #9
    ebf0:	421a03a6 	andsmi	r0, sl, #-1744830462	; 0x98000002
    ebf4:	02000006 	andeq	r0, r0, #6
    ebf8:	25072c23 	strcs	r2, [r7, #-3107]	; 0xfffff3dd
    ebfc:	03000004 	movweq	r0, #4
    ec00:	421a03a7 	andsmi	r0, sl, #-1677721598	; 0x9c000002
    ec04:	02000006 	andeq	r0, r0, #6
    ec08:	0a003023 	beq	1ac9c <_Min_Stack_Size+0x19c9c>
    ec0c:	00056304 	andeq	r6, r5, r4, lsl #6
    ec10:	08ef0b00 	stmiaeq	pc!, {r8, r9, fp}^	; <UNPREDICTABLE>
    ec14:	86030000 	strhi	r0, [r3], -r0
    ec18:	02210302 	eoreq	r0, r1, #134217728	; 0x8000000
    ec1c:	040a0000 	streq	r0, [sl], #-0
    ec20:	0000008b 	andeq	r0, r0, fp, lsl #1
    ec24:	0648040a 	strbeq	r0, [r8], -sl, lsl #8
    ec28:	040a0000 	streq	r0, [sl], #-0
    ec2c:	0000014c 	andeq	r0, r0, ip, asr #2
    ec30:	0022e60c 	eoreq	lr, r2, ip, lsl #12
    ec34:	236c0400 	cmncs	ip, #0, 8
    ec38:	00000675 	andeq	r0, r0, r5, ror r6
    ec3c:	040a0101 	streq	r0, [sl], #-257	; 0xfffffeff
    ec40:	00000661 	andeq	r0, r0, r1, ror #12
    ec44:	0022c70c 	eoreq	ip, r2, ip, lsl #14
    ec48:	236d0400 	cmncs	sp, #0, 8
    ec4c:	00000675 	andeq	r0, r0, r5, ror r6
    ec50:	b20c0101 	andlt	r0, ip, #1073741824	; 0x40000000
    ec54:	04000023 	streq	r0, [r0], #-35	; 0xffffffdd
    ec58:	06752373 			; <UNDEFINED> instruction: 0x06752373
    ec5c:	01010000 	mrseq	r0, (UNDEF: 1)
    ec60:	00249d0c 	eoreq	r9, r4, ip, lsl #26
    ec64:	21790400 	cmncs	r9, r0, lsl #8
    ec68:	00000097 	muleq	r0, r7, r0
    ec6c:	040a0101 	streq	r0, [sl], #-257	; 0xfffffeff
    ec70:	00000214 	andeq	r0, r0, r4, lsl r2
    ec74:	0024af0c 	eoreq	sl, r4, ip, lsl #30
    ec78:	22880400 	addcs	r0, r8, #0, 8
    ec7c:	00000661 	andeq	r0, r0, r1, ror #12
    ec80:	9b0c0101 	blls	30f08c <__RAM_SIZE+0x20f08c>
    ec84:	0400001e 	streq	r0, [r0], #-30	; 0xffffffe2
    ec88:	0648218f 	strbeq	r2, [r8], -pc, lsl #3
    ec8c:	01010000 	mrseq	r0, (UNDEF: 1)
    ec90:	0023660c 	eoreq	r6, r3, ip, lsl #12
    ec94:	21b70400 			; <UNDEFINED> instruction: 0x21b70400
    ec98:	000000a3 	andeq	r0, r0, r3, lsr #1
    ec9c:	1c0c0101 	stfnes	f0, [ip], {1}
    eca0:	04000024 	streq	r0, [r0], #-36	; 0xffffffdc
    eca4:	00a321c1 	adceq	r2, r3, r1, asr #3
    eca8:	01010000 	mrseq	r0, (UNDEF: 1)
    ecac:	00232e0c 	eoreq	r2, r3, ip, lsl #28
    ecb0:	21c90400 	biccs	r0, r9, r0, lsl #8
    ecb4:	000000a3 	andeq	r0, r0, r3, lsr #1
    ecb8:	010d0101 	tsteq	sp, r1, lsl #2
    ecbc:	000025f1 	strdeq	r2, [r0], -r1
    ecc0:	01074c01 	tsteq	r7, r1, lsl #24
    ecc4:	10002a2c 	andne	r2, r0, ip, lsr #20
    ecc8:	10002be8 	andne	r2, r0, r8, ror #23
    eccc:	000050b3 	strheq	r5, [r0], -r3
    ecd0:	000a6e01 	andeq	r6, sl, r1, lsl #28
    ecd4:	26230e00 	strtcs	r0, [r3], -r0, lsl #28
    ecd8:	4c010000 	stcmi	0, cr0, [r1], {-0}
    ecdc:	0000a324 	andeq	sl, r0, r4, lsr #6
    ece0:	0050e300 	subseq	lr, r0, r0, lsl #6
    ece4:	0050df00 	subseq	sp, r0, r0, lsl #30
    ece8:	0eee0f00 	cdpeq	15, 14, cr0, cr14, cr0, {0}
    ecec:	4f010000 	svcmi	0x00010000
    ecf0:	00009701 	andeq	r9, r0, r1, lsl #14
    ecf4:	00511400 	subseq	r1, r1, r0, lsl #8
    ecf8:	00510400 	subseq	r0, r1, r0, lsl #8
    ecfc:	26141000 	ldrcs	r1, [r4], -r0
    ed00:	51010000 	mrspl	r0, (UNDEF: 1)
    ed04:	0006611e 	andeq	r6, r6, lr, lsl r1
    ed08:	64910200 	ldrvs	r0, [r1], #512	; 0x200
    ed0c:	00267210 	eoreq	r7, r6, r0, lsl r2
    ed10:	1e520100 	rdfnes	f0, f2, f0
    ed14:	00000661 	andeq	r0, r0, r1, ror #12
    ed18:	0f609102 	svceq	0x00609102
    ed1c:	00002590 	muleq	r0, r0, r5
    ed20:	611e5301 	tstvs	lr, r1, lsl #6
    ed24:	7a000006 	bvc	ed44 <_Min_Stack_Size+0xdd44>
    ed28:	74000051 	strvc	r0, [r0], #-81	; 0xffffffaf
    ed2c:	0f000051 	svceq	0x00000051
    ed30:	000025a1 	andeq	r2, r0, r1, lsr #11
    ed34:	611e5401 	tstvs	lr, r1, lsl #8
    ed38:	a7000006 	strge	r0, [r0, -r6]
    ed3c:	a3000051 	movwge	r0, #81	; 0x51
    ed40:	0f000051 	svceq	0x00000051
    ed44:	00002683 	andeq	r2, r0, r3, lsl #13
    ed48:	611e5501 	tstvs	lr, r1, lsl #10
    ed4c:	c9000006 	stmdbgt	r0, {r1, r2}
    ed50:	c5000051 	strgt	r0, [r0, #-81]	; 0xffffffaf
    ed54:	0f000051 	svceq	0x00000051
    ed58:	0000044f 	andeq	r0, r0, pc, asr #8
    ed5c:	3a1f5601 	bcc	7e4568 <__RAM_SIZE+0x6e4568>
    ed60:	ef000001 	svc	0x00000001
    ed64:	e7000051 	smlsd	r0, r1, r0, r0
    ed68:	0f000051 	svceq	0x00000051
    ed6c:	00000204 	andeq	r0, r0, r4, lsl #4
    ed70:	a31d5701 	tstge	sp, #262144	; 0x40000
    ed74:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    ed78:	24000052 	strcs	r0, [r0], #-82	; 0xffffffae
    ed7c:	11000052 	qaddne	r0, r2, r0
    ed80:	00001979 	andeq	r1, r0, r9, ror r9
    ed84:	5b1e5801 	blpl	7a4d90 <__RAM_SIZE+0x6a4d90>
    ed88:	0f000006 	svceq	0x00000006
    ed8c:	00002480 	andeq	r2, r0, r0, lsl #9
    ed90:	751f5a01 	ldrvc	r5, [pc, #-2561]	; e397 <_Min_Stack_Size+0xd397>
    ed94:	4d000006 	stcmi	0, cr0, [r0, #-24]	; 0xffffffe8
    ed98:	47000052 	smlsdmi	r0, r2, r0, r0
    ed9c:	0f000052 	svceq	0x00000052
    eda0:	00002580 	andeq	r2, r0, r0, lsl #11
    eda4:	971d5b01 	ldrls	r5, [sp, -r1, lsl #22]
    eda8:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    edac:	76000052 			; <UNDEFINED> instruction: 0x76000052
    edb0:	0f000052 	svceq	0x00000052
    edb4:	0000259b 	muleq	r0, fp, r5
    edb8:	a31d5c01 	tstge	sp, #256	; 0x100
    edbc:	8d000000 	stchi	0, cr0, [r0, #-0]
    edc0:	8b000052 	blhi	ef10 <_Min_Stack_Size+0xdf10>
    edc4:	0f000052 	svceq	0x00000052
    edc8:	000024c1 	andeq	r2, r0, r1, asr #9
    edcc:	a51e5f01 	ldrge	r5, [lr, #-3841]	; 0xfffff0ff
    edd0:	b4000006 	strlt	r0, [r0], #-6
    edd4:	a4000052 	strge	r0, [r0], #-82	; 0xffffffae
    edd8:	12000052 	andne	r0, r0, #82	; 0x52
    eddc:	00000824 	andeq	r0, r0, r4, lsr #16
    ede0:	00260811 	eoreq	r0, r6, r1, lsl r8
    ede4:	19d10100 	ldmibne	r1, {r8}^
    ede8:	00000655 	andeq	r0, r0, r5, asr r6
    edec:	08361200 	ldmdaeq	r6!, {r9, ip}
    edf0:	08110000 	ldmdaeq	r1, {}	; <UNPREDICTABLE>
    edf4:	01000026 	tsteq	r0, r6, lsr #32
    edf8:	065519fe 			; <UNDEFINED> instruction: 0x065519fe
    edfc:	12000000 	andne	r0, r0, #0
    ee00:	00000849 	andeq	r0, r0, r9, asr #16
    ee04:	00260813 	eoreq	r0, r6, r3, lsl r8
    ee08:	01510100 	cmpeq	r1, r0, lsl #2
    ee0c:	0006551d 	andeq	r5, r6, sp, lsl r5
    ee10:	8f140000 	svchi	0x00140000
    ee14:	5e00000a 	cdppl	0, 0, cr0, cr0, cr10, {0}
    ee18:	0110002a 	tsteq	r0, sl, lsr #32
    ee1c:	002a5e00 	eoreq	r5, sl, r0, lsl #28
    ee20:	002a6210 	eoreq	r6, sl, r0, lsl r2
    ee24:	012c0110 			; <UNDEFINED> instruction: 0x012c0110
    ee28:	00087211 	andeq	r7, r8, r1, lsl r2
    ee2c:	0a9e1500 	beq	fe794234 <__RAM_segment_used_end__+0xc6694234>
    ee30:	53200000 	noppl	{0}	; <UNPREDICTABLE>
    ee34:	531e0000 	tstpl	lr, #0
    ee38:	14000000 	strne	r0, [r0], #-0
    ee3c:	00000a6e 	andeq	r0, r0, lr, ror #20
    ee40:	10002a68 	andne	r2, r0, r8, ror #20
    ee44:	2a680001 	bcs	1a0ee50 <__RAM_SIZE+0x190ee50>
    ee48:	2a6e1000 	bcs	1b92e50 <__RAM_SIZE+0x1a92e50>
    ee4c:	36011000 	strcc	r1, [r1], -r0
    ee50:	08c01101 	stmiaeq	r0, {r0, r8, ip}^
    ee54:	81160000 	tsthi	r6, r0
    ee58:	3700000a 	strcc	r0, [r0, -sl]
    ee5c:	33000053 	movwcc	r0, #83	; 0x53
    ee60:	17000053 	smlsdne	r0, r3, r0, r0
    ee64:	00000aac 	andeq	r0, r0, ip, lsr #21
    ee68:	10002a68 	andne	r2, r0, r8, ror #20
    ee6c:	2a680004 	bcs	1a0ee84 <__RAM_SIZE+0x190ee84>
    ee70:	2a6c1000 	bcs	1b12e78 <__RAM_SIZE+0x1a12e78>
    ee74:	56021000 	strpl	r1, [r2], -r0
    ee78:	bf161302 	svclt	0x00161302
    ee7c:	5700000a 	strpl	r0, [r0, -sl]
    ee80:	55000053 	strpl	r0, [r0, #-83]	; 0xffffffad
    ee84:	00000053 	andeq	r0, r0, r3, asr r0
    ee88:	0a8f1400 	beq	fe3d3e90 <__RAM_segment_used_end__+0xc62d3e90>
    ee8c:	2a7a0000 	bcs	1e8ee94 <__RAM_SIZE+0x1d8ee94>
    ee90:	00011000 	andeq	r1, r1, r0
    ee94:	10002a7a 	andne	r2, r0, sl, ror sl
    ee98:	10002a7e 	andne	r2, r0, lr, ror sl
    ee9c:	1101a401 	tstne	r1, r1, lsl #8
    eea0:	000008e9 	andeq	r0, r0, r9, ror #17
    eea4:	000a9e15 	andeq	r9, sl, r5, lsl lr
    eea8:	00536c00 	subseq	r6, r3, r0, lsl #24
    eeac:	00536a00 	subseq	r6, r3, r0, lsl #20
    eeb0:	6e140000 	cdpvs	0, 1, cr0, cr4, cr0, {0}
    eeb4:	7e00000a 	cdpvc	0, 0, cr0, cr0, cr10, {0}
    eeb8:	0210002a 	andseq	r0, r0, #42	; 0x2a
    eebc:	002a7e00 	eoreq	r7, sl, r0, lsl #28
    eec0:	002a8410 	eoreq	r8, sl, r0, lsl r4
    eec4:	01a70110 			; <UNDEFINED> instruction: 0x01a70110
    eec8:	00093711 	andeq	r3, r9, r1, lsl r7
    eecc:	0a811600 	beq	fe0546d4 <__RAM_segment_used_end__+0xc5f546d4>
    eed0:	53810000 	orrpl	r0, r1, #0
    eed4:	537f0000 	cmnpl	pc, #0
    eed8:	ac170000 	ldcge	0, cr0, [r7], {-0}
    eedc:	7e00000a 	cdpvc	0, 0, cr0, cr0, cr10, {0}
    eee0:	0510002a 	ldreq	r0, [r0, #-42]	; 0xffffffd6
    eee4:	002a7e00 	eoreq	r7, sl, r0, lsl #28
    eee8:	002a8210 	eoreq	r8, sl, r0, lsl r2
    eeec:	02560210 	subseq	r0, r6, #16, 4
    eef0:	0abf1613 	beq	fefd4744 <__RAM_segment_used_end__+0xc6ed4744>
    eef4:	53960000 	orrspl	r0, r6, #0
    eef8:	53940000 	orrspl	r0, r4, #0
    eefc:	00000000 	andeq	r0, r0, r0
    ef00:	000a8f14 	andeq	r8, sl, r4, lsl pc
    ef04:	002b7600 	eoreq	r7, fp, r0, lsl #12
    ef08:	76000110 			; <UNDEFINED> instruction: 0x76000110
    ef0c:	7a10002b 	bvc	40efc0 <__RAM_SIZE+0x30efc0>
    ef10:	0110002b 	tsteq	r0, fp, lsr #32
    ef14:	601101c0 	andsvs	r0, r1, r0, asr #3
    ef18:	15000009 	strne	r0, [r0, #-9]
    ef1c:	00000a9e 	muleq	r0, lr, sl
    ef20:	000053ab 	andeq	r5, r0, fp, lsr #7
    ef24:	000053a9 	andeq	r5, r0, r9, lsr #7
    ef28:	0a6e1800 	beq	1b94f30 <__RAM_SIZE+0x1a94f30>
    ef2c:	2b7a0000 	blcs	1e8ef34 <__RAM_SIZE+0x1d8ef34>
    ef30:	00031000 	andeq	r1, r3, r0
    ef34:	10002b7a 	andne	r2, r0, sl, ror fp
    ef38:	10002b80 	andne	r2, r0, r0, lsl #23
    ef3c:	ad0d7101 	stfges	f7, [sp, #-4]
    ef40:	16000009 	strne	r0, [r0], -r9
    ef44:	00000a81 	andeq	r0, r0, r1, lsl #21
    ef48:	000053c2 	andeq	r5, r0, r2, asr #7
    ef4c:	000053be 			; <UNDEFINED> instruction: 0x000053be
    ef50:	000aac17 	andeq	sl, sl, r7, lsl ip
    ef54:	002b7a00 	eoreq	r7, fp, r0, lsl #20
    ef58:	7a000610 	bvc	107a0 <_Min_Stack_Size+0xf7a0>
    ef5c:	7e10002b 	cdpvc	0, 1, cr0, cr0, cr11, {1}
    ef60:	0210002b 	andseq	r0, r0, #43	; 0x2b
    ef64:	16130256 			; <UNDEFINED> instruction: 0x16130256
    ef68:	00000abf 			; <UNDEFINED> instruction: 0x00000abf
    ef6c:	000053e2 	andeq	r5, r0, r2, ror #7
    ef70:	000053e0 	andeq	r5, r0, r0, ror #7
    ef74:	8f180000 	svchi	0x00180000
    ef78:	aa00000a 	bge	efa8 <_Min_Stack_Size+0xdfa8>
    ef7c:	0110002b 	tsteq	r0, fp, lsr #32
    ef80:	002baa00 	eoreq	sl, fp, r0, lsl #20
    ef84:	002bae10 	eoreq	sl, fp, r0, lsl lr
    ef88:	0d8e0110 	stfeqs	f0, [lr, #64]	; 0x40
    ef8c:	000009d5 	ldrdeq	r0, [r0], -r5
    ef90:	000a9e15 	andeq	r9, sl, r5, lsl lr
    ef94:	0053f700 	subseq	pc, r3, r0, lsl #14
    ef98:	0053f500 	subseq	pc, r3, r0, lsl #10
    ef9c:	6e180000 	cdpvs	0, 1, cr0, cr8, cr0, {0}
    efa0:	ae00000a 	cdpge	0, 0, cr0, cr0, cr10, {0}
    efa4:	0210002b 	andseq	r0, r0, #43	; 0x2b
    efa8:	002bae00 	eoreq	sl, fp, r0, lsl #28
    efac:	002bb410 	eoreq	fp, fp, r0, lsl r4
    efb0:	0d910110 	ldfeqs	f0, [r1, #64]	; 0x40
    efb4:	00000a22 	andeq	r0, r0, r2, lsr #20
    efb8:	000a8116 	andeq	r8, sl, r6, lsl r1
    efbc:	00540c00 	subseq	r0, r4, r0, lsl #24
    efc0:	00540a00 	subseq	r0, r4, r0, lsl #20
    efc4:	0aac1700 	beq	feb14bcc <__RAM_segment_used_end__+0xc6a14bcc>
    efc8:	2bae0000 	blcs	feb8efd0 <__RAM_segment_used_end__+0xc6a8efd0>
    efcc:	00051000 	andeq	r1, r5, r0
    efd0:	10002bae 	andne	r2, r0, lr, lsr #23
    efd4:	10002bb2 			; <UNDEFINED> instruction: 0x10002bb2
    efd8:	13025602 	movwne	r5, #9730	; 0x2602
    efdc:	000abf16 	andeq	fp, sl, r6, lsl pc
    efe0:	00542100 	subseq	r2, r4, r0, lsl #2
    efe4:	00541f00 	subseq	r1, r4, r0, lsl #30
    efe8:	14000000 	strne	r0, [r0], #-0
    efec:	00000a8f 	andeq	r0, r0, pc, lsl #21
    eff0:	10002bb6 			; <UNDEFINED> instruction: 0x10002bb6
    eff4:	2bb60001 	blcs	fed8f000 <__RAM_segment_used_end__+0xc6c8f000>
    eff8:	2be81000 	blcs	ffa13000 <__RAM_segment_used_end__+0xc7913000>
    effc:	d4011000 	strle	r1, [r1], #-0
    f000:	0a4b1101 	beq	12d340c <__RAM_SIZE+0x11d340c>
    f004:	9e150000 	cdpls	0, 1, cr0, cr5, cr0, {0}
    f008:	3600000a 	strcc	r0, [r0], -sl
    f00c:	34000054 	strcc	r0, [r0], #-84	; 0xffffffac
    f010:	00000054 	andeq	r0, r0, r4, asr r0
    f014:	002a6819 	eoreq	r6, sl, r9, lsl r8
    f018:	00750210 	rsbseq	r0, r5, r0, lsl r2
    f01c:	00000a5e 	andeq	r0, r0, lr, asr sl
    f020:	0250011a 	subseq	r0, r0, #-2147483642	; 0x80000006
    f024:	1b000077 	blne	f208 <_Min_Stack_Size+0xe208>
    f028:	10002b76 	andne	r2, r0, r6, ror fp
    f02c:	00000acd 	andeq	r0, r0, sp, asr #21
    f030:	0151011a 	cmpeq	r1, sl, lsl r1
    f034:	1c000030 	stcne	0, cr0, [r0], {48}	; 0x30
    f038:	00000f24 	andeq	r0, r0, r4, lsr #30
    f03c:	37025202 	strcc	r5, [r2, -r2, lsl #4]
    f040:	00009701 	andeq	r9, r0, r1, lsl #14
    f044:	0a8f0300 	beq	fe3cfc4c <__RAM_segment_used_end__+0xc62cfc4c>
    f048:	ad130000 	ldcge	0, cr0, [r3, #-0]
    f04c:	0200000e 	andeq	r0, r0, #14
    f050:	97060254 	smlsdls	r6, r4, r2, r0
    f054:	00000000 	andeq	r0, r0, r0
    f058:	000e991d 	andeq	r9, lr, sp, lsl r9
    f05c:	02490200 	subeq	r0, r9, #0, 4
    f060:	ac030137 	stfges	f0, [r3], {55}	; 0x37
    f064:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
    f068:	00000ead 	andeq	r0, r0, sp, lsr #29
    f06c:	50024902 	andpl	r4, r2, r2, lsl #18
    f070:	00000097 	muleq	r0, r7, r0
    f074:	0ec21c00 	cdpeq	12, 12, cr1, cr2, cr0, {0}
    f078:	32020000 	andcc	r0, r2, #0
    f07c:	97013702 	strls	r3, [r1, -r2, lsl #14]
    f080:	03000000 	movweq	r0, #0
    f084:	00000acd 	andeq	r0, r0, sp, asr #21
    f088:	000eb113 	andeq	fp, lr, r3, lsl r1
    f08c:	02340200 	eorseq	r0, r4, #0, 4
    f090:	00009706 	andeq	r9, r0, r6, lsl #14
    f094:	011f0000 	tsteq	pc, r0
    f098:	0010c901 	andseq	ip, r0, r1, lsl #18
    f09c:	0010c900 	andseq	ip, r0, r0, lsl #18
    f0a0:	01210500 			; <UNDEFINED> instruction: 0x01210500
    f0a4:	0726000d 	streq	r0, [r6, -sp]!
    f0a8:	00020000 	andeq	r0, r2, r0
    f0ac:	00002b03 	andeq	r2, r0, r3, lsl #22
    f0b0:	003d0104 	eorseq	r0, sp, r4, lsl #2
    f0b4:	910c0000 	mrsls	r0, (UNDEF: 12)
    f0b8:	5c000026 	stcpl	0, cr0, [r0], {38}	; 0x26
    f0bc:	a0000006 	andge	r0, r0, r6
    f0c0:	00000004 	andeq	r0, r0, r4
    f0c4:	00000000 	andeq	r0, r0, r0
    f0c8:	6c000000 	stcvs	0, cr0, [r0], {-0}
    f0cc:	02000056 	andeq	r0, r0, #86	; 0x56
    f0d0:	02390704 	eorseq	r0, r9, #4, 14	; 0x100000
    f0d4:	04030000 	streq	r0, [r3], #-0
    f0d8:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    f0dc:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
    f0e0:	000004e8 	andeq	r0, r0, r8, ror #9
    f0e4:	3e040802 	cdpcc	8, 0, cr0, cr4, cr2, {0}
    f0e8:	02000006 	andeq	r0, r0, #6
    f0ec:	086d0601 	stmdaeq	sp!, {r0, r9, sl}^
    f0f0:	01020000 	mrseq	r0, (UNDEF: 2)
    f0f4:	00086b08 	andeq	r6, r8, r8, lsl #22
    f0f8:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    f0fc:	000006cf 	andeq	r0, r0, pc, asr #13
    f100:	39070202 	stmdbcc	r7, {r1, r9}
    f104:	02000009 	andeq	r0, r0, #9
    f108:	04ed0504 	strbteq	r0, [sp], #1284	; 0x504
    f10c:	04020000 	streq	r0, [r2], #-0
    f110:	00023407 	andeq	r3, r2, r7, lsl #8
    f114:	07080200 	streq	r0, [r8, -r0, lsl #4]
    f118:	0000022f 	andeq	r0, r0, pc, lsr #4
    f11c:	01020404 	tsteq	r2, r4, lsl #8
    f120:	00087408 	andeq	r7, r8, r8, lsl #8
    f124:	08fa0500 	ldmeq	sl!, {r8, sl}^
    f128:	73020000 	movwvc	r0, #8192	; 0x2000
    f12c:	00007831 	andeq	r7, r0, r1, lsr r8
    f130:	08f90500 	ldmeq	r9!, {r8, sl}^
    f134:	74020000 	strvc	r0, [r2], #-0
    f138:	00004c31 	andeq	r4, r0, r1, lsr ip
    f13c:	079a0500 	ldreq	r0, [sl, r0, lsl #10]
    f140:	76020000 	strvc	r0, [r2], -r0
    f144:	00002931 	andeq	r2, r0, r1, lsr r9
    f148:	072c0500 	streq	r0, [ip, -r0, lsl #10]!
    f14c:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    f150:	00006831 	andeq	r6, r0, r1, lsr r8
    f154:	053b0600 	ldreq	r0, [fp, #-1536]!	; 0xfffffa00
    f158:	031c0000 	tsteq	ip, #0
    f15c:	2e100182 	mufcsd	f0, f0, f2
    f160:	07000001 	streq	r0, [r0, -r1]
    f164:	0000082d 	andeq	r0, r0, sp, lsr #16
    f168:	19018603 	stmdbne	r1, {r0, r1, r9, sl, pc}
    f16c:	000000a3 	andeq	r0, r0, r3, lsr #1
    f170:	07002302 	streq	r2, [r0, -r2, lsl #6]
    f174:	000003a0 	andeq	r0, r0, r0, lsr #7
    f178:	19018703 	stmdbne	r1, {r0, r1, r8, r9, sl, pc}
    f17c:	000000a3 	andeq	r0, r0, r3, lsr #1
    f180:	07042302 	streq	r2, [r4, -r2, lsl #6]
    f184:	0000043d 	andeq	r0, r0, sp, lsr r4
    f188:	1b018a03 	blne	7199c <SYSTICK_CYCLES+0x4895d>
    f18c:	0000013a 	andeq	r0, r0, sl, lsr r1
    f190:	07082302 	streq	r2, [r8, -r2, lsl #6]
    f194:	000001f2 	strdeq	r0, [r0], -r2
    f198:	19018b03 	stmdbne	r1, {r0, r1, r8, r9, fp, pc}
    f19c:	000000a3 	andeq	r0, r0, r3, lsr #1
    f1a0:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    f1a4:	0000096f 	andeq	r0, r0, pc, ror #18
    f1a8:	1a019103 	bne	735bc <SYSTICK_CYCLES+0x4a57d>
    f1ac:	00000140 	andeq	r0, r0, r0, asr #2
    f1b0:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    f1b4:	0000001b 	andeq	r0, r0, fp, lsl r0
    f1b8:	1a019203 	bne	739cc <SYSTICK_CYCLES+0x4a98d>
    f1bc:	00000140 	andeq	r0, r0, r0, asr #2
    f1c0:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    f1c4:	00000609 	andeq	r0, r0, r9, lsl #12
    f1c8:	1b019603 	blne	749dc <SYSTICK_CYCLES+0x4b99d>
    f1cc:	00000146 	andeq	r0, r0, r6, asr #2
    f1d0:	00182302 	andseq	r2, r8, r2, lsl #6
    f1d4:	013a0108 	teqeq	sl, r8, lsl #2
    f1d8:	a3090000 	movwge	r0, #36864	; 0x9000
    f1dc:	00000000 	andeq	r0, r0, r0
    f1e0:	012e040a 			; <UNDEFINED> instruction: 0x012e040a
    f1e4:	040a0000 	streq	r0, [sl], #-0
    f1e8:	000000af 	andeq	r0, r0, pc, lsr #1
    f1ec:	0140040a 	cmpeq	r0, sl, lsl #8
    f1f0:	4a0b0000 	bmi	2cf1f8 <__RAM_SIZE+0x1cf1f8>
    f1f4:	03000006 	movweq	r0, #6
    f1f8:	af03019b 	svcge	0x0003019b
    f1fc:	0a000000 	beq	f204 <_Min_Stack_Size+0xe204>
    f200:	00007f04 	andeq	r7, r0, r4, lsl #30
    f204:	034b0600 	movteq	r0, #46592	; 0xb600
    f208:	03d80000 	bicseq	r0, r8, #0
    f20c:	841001d6 	ldrhi	r0, [r0], #-470	; 0xfffffe2a
    f210:	07000004 	streq	r0, [r0, -r4]
    f214:	0000092c 	andeq	r0, r0, ip, lsr #18
    f218:	1901dd03 	stmdbne	r1, {r0, r1, r8, sl, fp, ip, lr, pc}
    f21c:	000000a3 	andeq	r0, r0, r3, lsr #1
    f220:	07002302 	streq	r2, [r0, -r2, lsl #6]
    f224:	0000079f 	muleq	r0, pc, r7	; <UNPREDICTABLE>
    f228:	1901de03 	stmdbne	r1, {r0, r1, r9, sl, fp, ip, lr, pc}
    f22c:	000000a3 	andeq	r0, r0, r3, lsr #1
    f230:	07042302 	streq	r2, [r4, -r2, lsl #6]
    f234:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
    f238:	1a01df03 	bne	86e4c <SYSTICK_CYCLES+0x5de0d>
    f23c:	00000076 	andeq	r0, r0, r6, ror r0
    f240:	07082302 	streq	r2, [r8, -r2, lsl #6]
    f244:	00000916 	andeq	r0, r0, r6, lsl r9
    f248:	1a01e003 	bne	8725c <SYSTICK_CYCLES+0x5e21d>
    f24c:	00000076 	andeq	r0, r0, r6, ror r0
    f250:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    f254:	00000411 	andeq	r0, r0, r1, lsl r4
    f258:	1a01e103 	bne	8766c <SYSTICK_CYCLES+0x5e62d>
    f25c:	00000076 	andeq	r0, r0, r6, ror r0
    f260:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    f264:	0000095a 	andeq	r0, r0, sl, asr r9
    f268:	1901e203 	stmdbne	r1, {r0, r1, r9, sp, lr, pc}
    f26c:	000000a3 	andeq	r0, r0, r3, lsr #1
    f270:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    f274:	000021e2 	andeq	r2, r0, r2, ror #3
    f278:	1901e303 	stmdbne	r1, {r0, r1, r8, r9, sp, lr, pc}
    f27c:	000000a3 	andeq	r0, r0, r3, lsr #1
    f280:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    f284:	00000625 	andeq	r0, r0, r5, lsr #12
    f288:	1901e403 	stmdbne	r1, {r0, r1, sl, sp, lr, pc}
    f28c:	000000a3 	andeq	r0, r0, r3, lsr #1
    f290:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    f294:	000006ba 			; <UNDEFINED> instruction: 0x000006ba
    f298:	1a01e803 	bne	892ac <SYSTICK_CYCLES+0x6026d>
    f29c:	00000484 	andeq	r0, r0, r4, lsl #9
    f2a0:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    f2a4:	00000199 	muleq	r0, r9, r1
    f2a8:	1a01e903 	bne	896bc <SYSTICK_CYCLES+0x6067d>
    f2ac:	00000484 	andeq	r0, r0, r4, lsl #9
    f2b0:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    f2b4:	000005b1 			; <UNDEFINED> instruction: 0x000005b1
    f2b8:	1a01f103 	bne	8b6cc <SYSTICK_CYCLES+0x6268d>
    f2bc:	00000159 	andeq	r0, r0, r9, asr r1
    f2c0:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    f2c4:	000002d9 	ldrdeq	r0, [r0], -r9
    f2c8:	1901f203 	stmdbne	r1, {r0, r1, r9, ip, sp, lr, pc}
    f2cc:	00000097 	muleq	r0, r7, r0
    f2d0:	072c2302 	streq	r2, [ip, -r2, lsl #6]!
    f2d4:	00000246 	andeq	r0, r0, r6, asr #4
    f2d8:	1901f303 	stmdbne	r1, {r0, r1, r8, r9, ip, sp, lr, pc}
    f2dc:	00000097 	muleq	r0, r7, r0
    f2e0:	07302302 	ldreq	r2, [r0, -r2, lsl #6]!
    f2e4:	00000173 	andeq	r0, r0, r3, ror r1
    f2e8:	1901f403 	stmdbne	r1, {r0, r1, sl, ip, sp, lr, pc}
    f2ec:	00000097 	muleq	r0, r7, r0
    f2f0:	07342302 	ldreq	r2, [r4, -r2, lsl #6]!
    f2f4:	0000074b 	andeq	r0, r0, fp, asr #14
    f2f8:	1901f503 	stmdbne	r1, {r0, r1, r8, sl, ip, sp, lr, pc}
    f2fc:	00000097 	muleq	r0, r7, r0
    f300:	07382302 	ldreq	r2, [r8, -r2, lsl #6]!
    f304:	000000eb 	andeq	r0, r0, fp, ror #1
    f308:	1901f603 	stmdbne	r1, {r0, r1, r9, sl, ip, sp, lr, pc}
    f30c:	00000097 	muleq	r0, r7, r0
    f310:	073c2302 	ldreq	r2, [ip, -r2, lsl #6]!
    f314:	0000035c 	andeq	r0, r0, ip, asr r3
    f318:	1b01fb03 	blne	8df2c <SYSTICK_CYCLES+0x64eed>
    f31c:	0000049b 	muleq	r0, fp, r4
    f320:	07402302 	strbeq	r2, [r0, -r2, lsl #6]
    f324:	00000152 	andeq	r0, r0, r2, asr r1
    f328:	1b020303 	blne	8ff3c <SYSTICK_CYCLES+0x66efd>
    f32c:	0000013a 	andeq	r0, r0, sl, lsr r1
    f330:	07442302 	strbeq	r2, [r4, -r2, lsl #6]
    f334:	00000107 	andeq	r0, r0, r7, lsl #2
    f338:	19020403 	stmdbne	r2, {r0, r1, sl}
    f33c:	000000a3 	andeq	r0, r0, r3, lsr #1
    f340:	07482302 	strbeq	r2, [r8, -r2, lsl #6]
    f344:	0000033b 	andeq	r0, r0, fp, lsr r3
    f348:	19020803 	stmdbne	r2, {r0, r1, fp}
    f34c:	0000014c 	andeq	r0, r0, ip, asr #2
    f350:	074c2302 	strbeq	r2, [ip, -r2, lsl #6]
    f354:	000002ec 	andeq	r0, r0, ip, ror #5
    f358:	1b020e03 	blne	92b6c <SYSTICK_CYCLES+0x69b2d>
    f35c:	0000049b 	muleq	r0, fp, r4
    f360:	07682302 	strbeq	r2, [r8, -r2, lsl #6]!
    f364:	000005e9 	andeq	r0, r0, r9, ror #11
    f368:	1a020f03 	bne	92f7c <SYSTICK_CYCLES+0x69f3d>
    f36c:	00000076 	andeq	r0, r0, r6, ror r0
    f370:	076c2302 	strbeq	r2, [ip, -r2, lsl #6]!
    f374:	00000732 	andeq	r0, r0, r2, lsr r7
    f378:	1a021103 	bne	9378c <SYSTICK_CYCLES+0x6a74d>
    f37c:	00000484 	andeq	r0, r0, r4, lsl #9
    f380:	07702302 	ldrbeq	r2, [r0, -r2, lsl #6]!
    f384:	00000212 	andeq	r0, r0, r2, lsl r2
    f388:	1a021203 	bne	93b9c <SYSTICK_CYCLES+0x6ab5d>
    f38c:	00000484 	andeq	r0, r0, r4, lsl #9
    f390:	07742302 	ldrbeq	r2, [r4, -r2, lsl #6]!
    f394:	00000715 	andeq	r0, r0, r5, lsl r7
    f398:	19021303 	stmdbne	r2, {r0, r1, r8, r9, ip}
    f39c:	000000a3 	andeq	r0, r0, r3, lsr #1
    f3a0:	07782302 	ldrbeq	r2, [r8, -r2, lsl #6]!
    f3a4:	000003c6 	andeq	r0, r0, r6, asr #7
    f3a8:	1a021403 	bne	943bc <SYSTICK_CYCLES+0x6b37d>
    f3ac:	00000076 	andeq	r0, r0, r6, ror r0
    f3b0:	077c2302 	ldrbeq	r2, [ip, -r2, lsl #6]!
    f3b4:	00000554 	andeq	r0, r0, r4, asr r5
    f3b8:	19021503 	stmdbne	r2, {r0, r1, r8, sl, ip}
    f3bc:	00000097 	muleq	r0, r7, r0
    f3c0:	01802303 	orreq	r2, r0, r3, lsl #6
    f3c4:	0003e807 	andeq	lr, r3, r7, lsl #16
    f3c8:	02160300 	andseq	r0, r6, #0, 6
    f3cc:	00009719 	andeq	r9, r0, r9, lsl r7
    f3d0:	84230300 	strthi	r0, [r3], #-768	; 0xfffffd00
    f3d4:	08ff0701 	ldmeq	pc!, {r0, r8, r9, sl}^	; <UNPREDICTABLE>
    f3d8:	1f030000 	svcne	0x00030000
    f3dc:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    f3e0:	23030000 	movwcs	r0, #12288	; 0x3000
    f3e4:	f0070188 			; <UNDEFINED> instruction: 0xf0070188
    f3e8:	03000007 	movweq	r0, #7
    f3ec:	841a0220 	ldrhi	r0, [sl], #-544	; 0xfffffde0
    f3f0:	03000004 	movweq	r0, #4
    f3f4:	07018c23 	streq	r8, [r1, -r3, lsr #24]
    f3f8:	000002c1 	andeq	r0, r0, r1, asr #5
    f3fc:	19022e03 	stmdbne	r2, {r0, r1, r9, sl, fp, sp}
    f400:	00000097 	muleq	r0, r7, r0
    f404:	01902303 	orrseq	r2, r0, r3, lsl #6
    f408:	00025607 	andeq	r5, r2, r7, lsl #12
    f40c:	022f0300 	eoreq	r0, pc, #0, 6
    f410:	00009719 	andeq	r9, r0, r9, lsl r7
    f414:	94230300 	strtls	r0, [r3], #-768	; 0xfffffd00
    f418:	03200701 			; <UNDEFINED> instruction: 0x03200701
    f41c:	30030000 	andcc	r0, r3, r0
    f420:	00971902 	addseq	r1, r7, r2, lsl #18
    f424:	23030000 	movwcs	r0, #12288	; 0x3000
    f428:	77070198 			; <UNDEFINED> instruction: 0x77070198
    f42c:	03000002 	movweq	r0, #2
    f430:	97190233 			; <UNDEFINED> instruction: 0x97190233
    f434:	03000000 	movweq	r0, #0
    f438:	07019c23 	streq	r9, [r1, -r3, lsr #24]
    f43c:	00000000 	andeq	r0, r0, r0
    f440:	1a023503 	bne	9c854 <SYSTICK_CYCLES+0x73815>
    f444:	00000580 	andeq	r0, r0, r0, lsl #11
    f448:	01a02303 	lsleq	r2, r3, #6
    f44c:	001bc807 	andseq	ip, fp, r7, lsl #16
    f450:	023a0300 	eorseq	r0, sl, #0, 6
    f454:	0000a319 	andeq	sl, r0, r9, lsl r3
    f458:	a4230300 	strtge	r0, [r3], #-768	; 0xfffffd00
    f45c:	1c880701 	stcne	7, cr0, [r8], {1}
    f460:	3d030000 	stccc	0, cr0, [r3, #-0]
    f464:	00a31902 	adceq	r1, r3, r2, lsl #18
    f468:	23030000 	movwcs	r0, #12288	; 0x3000
    f46c:	410701a8 	smlatbmi	r7, r8, r1, r0
    f470:	0300001b 	movweq	r0, #27
    f474:	a3190241 	tstge	r9, #268435460	; 0x10000004
    f478:	03000000 	movweq	r0, #0
    f47c:	0701ac23 	streq	sl, [r1, -r3, lsr #24]
    f480:	00001d3f 	andeq	r1, r0, pc, lsr sp
    f484:	19024503 	stmdbne	r2, {r0, r1, r8, sl, lr}
    f488:	000000a3 	andeq	r0, r0, r3, lsr #1
    f48c:	01b02303 	lslseq	r2, r3, #6
    f490:	001c5807 	andseq	r5, ip, r7, lsl #16
    f494:	02480300 	subeq	r0, r8, #0, 6
    f498:	0000a319 	andeq	sl, r0, r9, lsl r3
    f49c:	b4230300 	strtlt	r0, [r3], #-768	; 0xfffffd00
    f4a0:	07c30701 	strbeq	r0, [r3, r1, lsl #14]
    f4a4:	4c030000 	stcmi	0, cr0, [r3], {-0}
    f4a8:	04841a02 	streq	r1, [r4], #2562	; 0xa02
    f4ac:	23030000 	movwcs	r0, #12288	; 0x3000
    f4b0:	170701b8 			; <UNDEFINED> instruction: 0x170701b8
    f4b4:	0300001d 	movweq	r0, #29
    f4b8:	a319024f 	tstge	r9, #-268435452	; 0xf0000004
    f4bc:	03000000 	movweq	r0, #0
    f4c0:	0701bc23 	streq	fp, [r1, -r3, lsr #24]
    f4c4:	00001b19 	andeq	r1, r0, r9, lsl fp
    f4c8:	19025203 	stmdbne	r2, {r0, r1, r9, ip, lr}
    f4cc:	000000a3 	andeq	r0, r0, r3, lsr #1
    f4d0:	01c02303 	biceq	r2, r0, r3, lsl #6
    f4d4:	001a9607 	andseq	r9, sl, r7, lsl #12
    f4d8:	02550300 	subseq	r0, r5, #0, 6
    f4dc:	0000a319 	andeq	sl, r0, r9, lsl r3
    f4e0:	c4230300 	strtgt	r0, [r3], #-768	; 0xfffffd00
    f4e4:	1bec0701 	blne	ffb110f0 <__RAM_segment_used_end__+0xc7a110f0>
    f4e8:	59030000 	stmdbpl	r3, {}	; <UNPREDICTABLE>
    f4ec:	00a31902 	adceq	r1, r3, r2, lsl #18
    f4f0:	23030000 	movwcs	r0, #12288	; 0x3000
    f4f4:	c40701c8 	strgt	r0, [r7], #-456	; 0xfffffe38
    f4f8:	03000009 	movweq	r0, #9
    f4fc:	761a025d 			; <UNDEFINED> instruction: 0x761a025d
    f500:	03000000 	movweq	r0, #0
    f504:	0701cc23 	streq	ip, [r1, -r3, lsr #24]
    f508:	00000481 	andeq	r0, r0, r1, lsl #9
    f50c:	19027803 	stmdbne	r2, {r0, r1, fp, ip, sp, lr}
    f510:	000000a3 	andeq	r0, r0, r3, lsr #1
    f514:	01d02303 	bicseq	r2, r0, r3, lsl #6
    f518:	00056d07 	andeq	r6, r5, r7, lsl #26
    f51c:	027d0300 	rsbseq	r0, sp, #0, 6
    f520:	0000a319 	andeq	sl, r0, r9, lsl r3
    f524:	d4230300 	strtle	r0, [r3], #-768	; 0xfffffd00
    f528:	040a0001 	streq	r0, [sl], #-1
    f52c:	0000015f 	andeq	r0, r0, pc, asr r1
    f530:	049b0108 	ldreq	r0, [fp], #264	; 0x108
    f534:	84090000 	strhi	r0, [r9], #-0
    f538:	09000004 	stmdbeq	r0, {r2}
    f53c:	000000a3 	andeq	r0, r0, r3, lsr #1
    f540:	8a040a00 	bhi	111d48 <__RAM_SIZE+0x11d48>
    f544:	06000004 	streq	r0, [r0], -r4
    f548:	000007b3 			; <UNDEFINED> instruction: 0x000007b3
    f54c:	037e0334 	cmneq	lr, #52, 6	; 0xd0000000
    f550:	00058010 	andeq	r8, r5, r0, lsl r0
    f554:	018d0700 	orreq	r0, sp, r0, lsl #14
    f558:	82030000 	andhi	r0, r3, #0
    f55c:	00a31903 	adceq	r1, r3, r3, lsl #18
    f560:	23020000 	movwcs	r0, #8192	; 0x2000
    f564:	08970700 	ldmeq	r7, {r8, r9, sl}
    f568:	85030000 	strhi	r0, [r3, #-0]
    f56c:	01591a03 	cmpeq	r9, r3, lsl #20
    f570:	23020000 	movwcs	r0, #8192	; 0x2000
    f574:	06fc0704 	ldrbteq	r0, [ip], r4, lsl #14
    f578:	88030000 	stmdahi	r3, {}	; <UNPREDICTABLE>
    f57c:	00971903 	addseq	r1, r7, r3, lsl #18
    f580:	23020000 	movwcs	r0, #8192	; 0x2000
    f584:	04cb0708 	strbeq	r0, [fp], #1800	; 0x708
    f588:	8c030000 	stchi	0, cr0, [r3], {-0}
    f58c:	067b1a03 	ldrbteq	r1, [fp], -r3, lsl #20
    f590:	23020000 	movwcs	r0, #8192	; 0x2000
    f594:	0162070c 	cmneq	r2, ip, lsl #14
    f598:	90030000 	andls	r0, r3, r0
    f59c:	00971903 	addseq	r1, r7, r3, lsl #18
    f5a0:	23020000 	movwcs	r0, #8192	; 0x2000
    f5a4:	01210710 			; <UNDEFINED> instruction: 0x01210710
    f5a8:	93030000 	movwls	r0, #12288	; 0x3000
    f5ac:	00971903 	addseq	r1, r7, r3, lsl #18
    f5b0:	23020000 	movwcs	r0, #8192	; 0x2000
    f5b4:	08cd0714 	stmiaeq	sp, {r2, r4, r8, r9, sl}^
    f5b8:	98030000 	stmdals	r3, {}	; <UNPREDICTABLE>
    f5bc:	04841a03 	streq	r1, [r4], #2563	; 0xa03
    f5c0:	23020000 	movwcs	r0, #8192	; 0x2000
    f5c4:	06e30718 	usateq	r0, #3, r8, lsl #14
    f5c8:	99030000 	stmdbls	r3, {}	; <UNPREDICTABLE>
    f5cc:	00971903 	addseq	r1, r7, r3, lsl #18
    f5d0:	23020000 	movwcs	r0, #8192	; 0x2000
    f5d4:	05d3071c 	ldrbeq	r0, [r3, #1820]	; 0x71c
    f5d8:	9d030000 	stcls	0, cr0, [r3, #-0]
    f5dc:	05801a03 	streq	r1, [r0, #2563]	; 0xa03
    f5e0:	23020000 	movwcs	r0, #8192	; 0x2000
    f5e4:	06a00720 	strteq	r0, [r0], r0, lsr #14
    f5e8:	9e030000 	cdpls	0, 0, cr0, cr3, cr0, {0}
    f5ec:	05801a03 	streq	r1, [r0, #2563]	; 0xa03
    f5f0:	23020000 	movwcs	r0, #8192	; 0x2000
    f5f4:	01d00724 	bicseq	r0, r0, r4, lsr #14
    f5f8:	a2030000 	andge	r0, r3, #0
    f5fc:	00971903 	addseq	r1, r7, r3, lsl #18
    f600:	23020000 	movwcs	r0, #8192	; 0x2000
    f604:	09e00728 	stmibeq	r0!, {r3, r5, r8, r9, sl}^
    f608:	a6030000 	strge	r0, [r3], -r0
    f60c:	05801a03 	streq	r1, [r0, #2563]	; 0xa03
    f610:	23020000 	movwcs	r0, #8192	; 0x2000
    f614:	0425072c 	strteq	r0, [r5], #-1836	; 0xfffff8d4
    f618:	a7030000 	strge	r0, [r3, -r0]
    f61c:	05801a03 	streq	r1, [r0, #2563]	; 0xa03
    f620:	23020000 	movwcs	r0, #8192	; 0x2000
    f624:	040a0030 	streq	r0, [sl], #-48	; 0xffffffd0
    f628:	000004a1 	andeq	r0, r0, r1, lsr #9
    f62c:	0008ef0b 	andeq	lr, r8, fp, lsl #30
    f630:	02860300 	addeq	r0, r6, #0, 6
    f634:	00015f03 	andeq	r5, r1, r3, lsl #30
    f638:	104f0600 	subne	r0, pc, r0, lsl #12
    f63c:	03300000 	teqeq	r0, #0
    f640:	6210028b 	andsvs	r0, r0, #-1342177272	; 0xb0000008
    f644:	07000006 	streq	r0, [r0, -r6]
    f648:	00000e51 	andeq	r0, r0, r1, asr lr
    f64c:	19028f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, pc}
    f650:	000000a3 	andeq	r0, r0, r3, lsr #1
    f654:	07002302 	streq	r2, [r0, -r2, lsl #6]
    f658:	00000fe3 	andeq	r0, r0, r3, ror #31
    f65c:	1a029203 	bne	b3e70 <SYSTICK_CYCLES+0x8ae31>
    f660:	00000159 	andeq	r0, r0, r9, asr r1
    f664:	07042302 	streq	r2, [r4, -r2, lsl #6]
    f668:	00000f85 	andeq	r0, r0, r5, lsl #31
    f66c:	19029503 	stmdbne	r2, {r0, r1, r8, sl, ip, pc}
    f670:	00000097 	muleq	r0, r7, r0
    f674:	07082302 	streq	r2, [r8, -r2, lsl #6]
    f678:	00000eda 	ldrdeq	r0, [r0], -sl
    f67c:	19029803 	stmdbne	r2, {r0, r1, fp, ip, pc}
    f680:	00000097 	muleq	r0, r7, r0
    f684:	070c2302 	streq	r2, [ip, -r2, lsl #6]
    f688:	00001023 	andeq	r1, r0, r3, lsr #32
    f68c:	1a029b03 	bne	b62a0 <SYSTICK_CYCLES+0x8d261>
    f690:	00000662 	andeq	r0, r0, r2, ror #12
    f694:	07102302 	ldreq	r2, [r0, -r2, lsl #6]
    f698:	00000e3d 	andeq	r0, r0, sp, lsr lr
    f69c:	1a029e03 	bne	b6eb0 <SYSTICK_CYCLES+0x8de71>
    f6a0:	00000662 	andeq	r0, r0, r2, ror #12
    f6a4:	07142302 	ldreq	r2, [r4, -r2, lsl #6]
    f6a8:	00000f39 	andeq	r0, r0, r9, lsr pc
    f6ac:	1902a103 	stmdbne	r2, {r0, r1, r8, sp, pc}
    f6b0:	000000a3 	andeq	r0, r0, r3, lsr #1
    f6b4:	07182302 	ldreq	r2, [r8, -r2, lsl #6]
    f6b8:	00000fab 	andeq	r0, r0, fp, lsr #31
    f6bc:	1902a403 	stmdbne	r2, {r0, r1, sl, sp, pc}
    f6c0:	00000097 	muleq	r0, r7, r0
    f6c4:	071c2302 	ldreq	r2, [ip, -r2, lsl #6]
    f6c8:	00000f06 	andeq	r0, r0, r6, lsl #30
    f6cc:	1a02a903 	bne	b9ae0 <SYSTICK_CYCLES+0x90aa1>
    f6d0:	00000484 	andeq	r0, r0, r4, lsl #9
    f6d4:	07202302 	streq	r2, [r0, -r2, lsl #6]!
    f6d8:	00000f67 	andeq	r0, r0, r7, ror #30
    f6dc:	1902aa03 	stmdbne	r2, {r0, r1, r9, fp, sp, pc}
    f6e0:	00000097 	muleq	r0, r7, r0
    f6e4:	07242302 	streq	r2, [r4, -r2, lsl #6]!
    f6e8:	00000f4c 	andeq	r0, r0, ip, asr #30
    f6ec:	1a02ae03 	bne	baf00 <SYSTICK_CYCLES+0x91ec1>
    f6f0:	00000668 	andeq	r0, r0, r8, ror #12
    f6f4:	07282302 	streq	r2, [r8, -r2, lsl #6]!
    f6f8:	00000fc4 	andeq	r0, r0, r4, asr #31
    f6fc:	1a02af03 	bne	bb310 <SYSTICK_CYCLES+0x922d1>
    f700:	00000668 	andeq	r0, r0, r8, ror #12
    f704:	002c2302 	eoreq	r2, ip, r2, lsl #6
    f708:	008b040a 	addeq	r0, fp, sl, lsl #8
    f70c:	040a0000 	streq	r0, [sl], #-0
    f710:	00000593 	muleq	r0, r3, r5
    f714:	000f9d0b 	andeq	r9, pc, fp, lsl #26
    f718:	02c40300 	sbceq	r0, r4, #0, 6
    f71c:	00059303 	andeq	r9, r5, r3, lsl #6
    f720:	86040a00 	strhi	r0, [r4], -r0, lsl #20
    f724:	0a000005 	beq	f740 <_Min_Stack_Size+0xe740>
    f728:	00066e04 	andeq	r6, r6, r4, lsl #28
    f72c:	88010c00 	stmdahi	r1, {sl, fp}
    f730:	01000005 	tsteq	r0, r5
    f734:	97010747 	strls	r0, [r1, -r7, asr #14]
    f738:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    f73c:	1010002b 	andsne	r0, r0, fp, lsr #32
    f740:	4910002c 	ldmdbmi	r0, {r2, r3, r5}
    f744:	01000054 	qaddeq	r0, r4, r0
    f748:	00000714 	andeq	r0, r0, r4, lsl r7
    f74c:	000ffd0d 	andeq	pc, pc, sp, lsl #26
    f750:	20470100 	subcs	r0, r7, r0, lsl #2
    f754:	00000076 	andeq	r0, r0, r6, ror r0
    f758:	00005491 	muleq	r0, r1, r4
    f75c:	00005481 	andeq	r5, r0, r1, lsl #9
    f760:	0003fa0e 	andeq	pc, r3, lr, lsl #20
    f764:	154a0100 	strbne	r0, [sl, #-256]	; 0xffffff00
    f768:	00000097 	muleq	r0, r7, r0
    f76c:	00005501 	andeq	r5, r0, r1, lsl #10
    f770:	000054fd 	strdeq	r5, [r0], -sp
    f774:	000efd0e 	andeq	pc, lr, lr, lsl #26
    f778:	164b0100 	strbne	r0, [fp], -r0, lsl #2
    f77c:	00000681 	andeq	r0, r0, r1, lsl #13
    f780:	0000552a 	andeq	r5, r0, sl, lsr #10
    f784:	00005520 	andeq	r5, r0, r0, lsr #10
    f788:	00121f0e 	andseq	r1, r2, lr, lsl #30
    f78c:	174c0100 	strbne	r0, [ip, -r0, lsl #2]
    f790:	00000714 	andeq	r0, r0, r4, lsl r7
    f794:	0000557b 	andeq	r5, r0, fp, ror r5
    f798:	0000556f 	andeq	r5, r0, pc, ror #10
    f79c:	000eb90e 	andeq	fp, lr, lr, lsl #18
    f7a0:	164d0100 	strbne	r0, [sp], -r0, lsl #2
    f7a4:	00000662 	andeq	r0, r0, r2, ror #12
    f7a8:	000055e8 	andeq	r5, r0, r8, ror #11
    f7ac:	000055da 	ldrdeq	r5, [r0], -sl
    f7b0:	002c020f 	eoreq	r0, ip, pc, lsl #4
    f7b4:	00071a10 	andeq	r1, r7, r0, lsl sl
    f7b8:	040a0000 	streq	r0, [sl], #-0
    f7bc:	00000662 	andeq	r0, r0, r2, ror #12
    f7c0:	80010110 	andhi	r0, r1, r0, lsl r1
    f7c4:	80000010 	andhi	r0, r0, r0, lsl r0
    f7c8:	03000010 	movweq	r0, #16
    f7cc:	000d05d3 	ldrdeq	r0, [sp], -r3
    f7d0:	00000819 	andeq	r0, r0, r9, lsl r8
    f7d4:	2bf40002 	blcs	ffd0f7e4 <__RAM_segment_used_end__+0xc7c0f7e4>
    f7d8:	01040000 	mrseq	r0, (UNDEF: 4)
    f7dc:	0000003d 	andeq	r0, r0, sp, lsr r0
    f7e0:	0026c90c 	eoreq	ip, r6, ip, lsl #18
    f7e4:	00065c00 	andeq	r5, r6, r0, lsl #24
    f7e8:	0004b000 	andeq	fp, r4, r0
	...
    f7f4:	00579f00 	subseq	r9, r7, r0, lsl #30
    f7f8:	07040200 	streq	r0, [r4, -r0, lsl #4]
    f7fc:	00000239 	andeq	r0, r0, r9, lsr r2
    f800:	69050403 	stmdbvs	r5, {r0, r1, sl}
    f804:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    f808:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
    f80c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    f810:	00063e04 	andeq	r3, r6, r4, lsl #28
    f814:	06010200 	streq	r0, [r1], -r0, lsl #4
    f818:	0000086d 	andeq	r0, r0, sp, ror #16
    f81c:	6b080102 	blvs	20fc2c <__RAM_SIZE+0x10fc2c>
    f820:	02000008 	andeq	r0, r0, #8
    f824:	06cf0502 	strbeq	r0, [pc], r2, lsl #10
    f828:	02020000 	andeq	r0, r2, #0
    f82c:	00093907 	andeq	r3, r9, r7, lsl #18
    f830:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    f834:	000004ed 	andeq	r0, r0, sp, ror #9
    f838:	34070402 	strcc	r0, [r7], #-1026	; 0xfffffbfe
    f83c:	02000002 	andeq	r0, r0, #2
    f840:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
    f844:	04040000 	streq	r0, [r4], #-0
    f848:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    f84c:	05000008 	streq	r0, [r0, #-8]
    f850:	000008fa 	strdeq	r0, [r0], -sl
    f854:	78317302 	ldmdavc	r1!, {r1, r8, r9, ip, sp, lr}
    f858:	05000000 	streq	r0, [r0, #-0]
    f85c:	000008f9 	strdeq	r0, [r0], -r9
    f860:	4c317402 	cfldrsmi	mvf7, [r1], #-8
    f864:	05000000 	streq	r0, [r0, #-0]
    f868:	0000079a 	muleq	r0, sl, r7
    f86c:	29317602 	ldmdbcs	r1!, {r1, r9, sl, ip, sp, lr}
    f870:	05000000 	streq	r0, [r0, #-0]
    f874:	0000072c 	andeq	r0, r0, ip, lsr #14
    f878:	68317802 	ldmdavs	r1!, {r1, fp, ip, sp, lr}
    f87c:	06000000 	streq	r0, [r0], -r0
    f880:	000000a3 	andeq	r0, r0, r3, lsr #1
    f884:	00053b07 	andeq	r3, r5, r7, lsl #22
    f888:	82031c00 	andhi	r1, r3, #0, 24
    f88c:	01331001 	teqeq	r3, r1
    f890:	2d080000 	stccs	0, cr0, [r8, #-0]
    f894:	03000008 	movweq	r0, #8
    f898:	a3190186 	tstge	r9, #-2147483615	; 0x80000021
    f89c:	02000000 	andeq	r0, r0, #0
    f8a0:	a0080023 	andge	r0, r8, r3, lsr #32
    f8a4:	03000003 	movweq	r0, #3
    f8a8:	a3190187 	tstge	r9, #-1073741791	; 0xc0000021
    f8ac:	02000000 	andeq	r0, r0, #0
    f8b0:	3d080423 	cfstrscc	mvf0, [r8, #-140]	; 0xffffff74
    f8b4:	03000004 	movweq	r0, #4
    f8b8:	3f1b018a 	svccc	0x001b018a
    f8bc:	02000001 	andeq	r0, r0, #1
    f8c0:	f2080823 	vadd.i8	d0, d8, d19
    f8c4:	03000001 	movweq	r0, #1
    f8c8:	a319018b 	tstge	r9, #-1073741790	; 0xc0000022
    f8cc:	02000000 	andeq	r0, r0, #0
    f8d0:	6f080c23 	svcvs	0x00080c23
    f8d4:	03000009 	movweq	r0, #9
    f8d8:	451a0191 	ldrmi	r0, [sl, #-401]	; 0xfffffe6f
    f8dc:	02000001 	andeq	r0, r0, #1
    f8e0:	1b081023 	blne	213974 <__RAM_SIZE+0x113974>
    f8e4:	03000000 	movweq	r0, #0
    f8e8:	451a0192 	ldrmi	r0, [sl, #-402]	; 0xfffffe6e
    f8ec:	02000001 	andeq	r0, r0, #1
    f8f0:	09081423 	stmdbeq	r8, {r0, r1, r5, sl, ip}
    f8f4:	03000006 	movweq	r0, #6
    f8f8:	4b1b0196 	blmi	6cff58 <__RAM_SIZE+0x5cff58>
    f8fc:	02000001 	andeq	r0, r0, #1
    f900:	09001823 	stmdbeq	r0, {r0, r1, r5, fp, ip}
    f904:	00013f01 	andeq	r3, r1, r1, lsl #30
    f908:	00a30a00 	adceq	r0, r3, r0, lsl #20
    f90c:	0b000000 	bleq	f914 <_Min_Stack_Size+0xe914>
    f910:	00013304 	andeq	r3, r1, r4, lsl #6
    f914:	b4040b00 	strlt	r0, [r4], #-2816	; 0xfffff500
    f918:	0b000000 	bleq	f920 <_Min_Stack_Size+0xe920>
    f91c:	00014504 	andeq	r4, r1, r4, lsl #10
    f920:	064a0c00 	strbeq	r0, [sl], -r0, lsl #24
    f924:	9b030000 	blls	cf92c <SYSTICK_CYCLES+0xa68ed>
    f928:	00b40301 	adcseq	r0, r4, r1, lsl #6
    f92c:	040b0000 	streq	r0, [fp], #-0
    f930:	0000007f 	andeq	r0, r0, pc, ror r0
    f934:	00034b07 	andeq	r4, r3, r7, lsl #22
    f938:	d603d800 	strle	sp, [r3], -r0, lsl #16
    f93c:	04891001 	streq	r1, [r9], #1
    f940:	2c080000 	stccs	0, cr0, [r8], {-0}
    f944:	03000009 	movweq	r0, #9
    f948:	a31901dd 	tstge	r9, #1073741879	; 0x40000037
    f94c:	02000000 	andeq	r0, r0, #0
    f950:	9f080023 	svcls	0x00080023
    f954:	03000007 	movweq	r0, #7
    f958:	a31901de 	tstge	r9, #-2147483593	; 0x80000037
    f95c:	02000000 	andeq	r0, r0, #0
    f960:	bc080423 	cfstrslt	mvf0, [r8], {35}	; 0x23
    f964:	03000001 	movweq	r0, #1
    f968:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
    f96c:	02000000 	andeq	r0, r0, #0
    f970:	16080823 	strne	r0, [r8], -r3, lsr #16
    f974:	03000009 	movweq	r0, #9
    f978:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
    f97c:	02000000 	andeq	r0, r0, #0
    f980:	11080c23 	tstne	r8, r3, lsr #24
    f984:	03000004 	movweq	r0, #4
    f988:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
    f98c:	02000000 	andeq	r0, r0, #0
    f990:	5a081023 	bpl	213a24 <__RAM_SIZE+0x113a24>
    f994:	03000009 	movweq	r0, #9
    f998:	a31901e2 	tstge	r9, #-2147483592	; 0x80000038
    f99c:	02000000 	andeq	r0, r0, #0
    f9a0:	e2081423 	and	r1, r8, #587202560	; 0x23000000
    f9a4:	03000021 	movweq	r0, #33	; 0x21
    f9a8:	a31901e3 	tstge	r9, #-1073741768	; 0xc0000038
    f9ac:	02000000 	andeq	r0, r0, #0
    f9b0:	25081823 	strcs	r1, [r8, #-2083]	; 0xfffff7dd
    f9b4:	03000006 	movweq	r0, #6
    f9b8:	a31901e4 	tstge	r9, #228, 2	; 0x39
    f9bc:	02000000 	andeq	r0, r0, #0
    f9c0:	ba081c23 	blt	216a54 <__RAM_SIZE+0x116a54>
    f9c4:	03000006 	movweq	r0, #6
    f9c8:	891a01e8 	ldmdbhi	sl, {r3, r5, r6, r7, r8}
    f9cc:	02000004 	andeq	r0, r0, #4
    f9d0:	99082023 	stmdbls	r8, {r0, r1, r5, sp}
    f9d4:	03000001 	movweq	r0, #1
    f9d8:	891a01e9 	ldmdbhi	sl, {r0, r3, r5, r6, r7, r8}
    f9dc:	02000004 	andeq	r0, r0, #4
    f9e0:	b1082423 	tstlt	r8, r3, lsr #8
    f9e4:	03000005 	movweq	r0, #5
    f9e8:	5e1a01f1 	mrcpl	1, 0, r0, cr10, cr1, {7}
    f9ec:	02000001 	andeq	r0, r0, #1
    f9f0:	d9082823 	stmdble	r8, {r0, r1, r5, fp, sp}
    f9f4:	03000002 	movweq	r0, #2
    f9f8:	971901f2 			; <UNDEFINED> instruction: 0x971901f2
    f9fc:	02000000 	andeq	r0, r0, #0
    fa00:	46082c23 	strmi	r2, [r8], -r3, lsr #24
    fa04:	03000002 	movweq	r0, #2
    fa08:	971901f3 			; <UNDEFINED> instruction: 0x971901f3
    fa0c:	02000000 	andeq	r0, r0, #0
    fa10:	73083023 	movwvc	r3, #32803	; 0x8023
    fa14:	03000001 	movweq	r0, #1
    fa18:	971901f4 			; <UNDEFINED> instruction: 0x971901f4
    fa1c:	02000000 	andeq	r0, r0, #0
    fa20:	4b083423 	blmi	21cab4 <__RAM_SIZE+0x11cab4>
    fa24:	03000007 	movweq	r0, #7
    fa28:	971901f5 			; <UNDEFINED> instruction: 0x971901f5
    fa2c:	02000000 	andeq	r0, r0, #0
    fa30:	eb083823 	bl	21dac4 <__RAM_SIZE+0x11dac4>
    fa34:	03000000 	movweq	r0, #0
    fa38:	971901f6 			; <UNDEFINED> instruction: 0x971901f6
    fa3c:	02000000 	andeq	r0, r0, #0
    fa40:	5c083c23 	stcpl	12, cr3, [r8], {35}	; 0x23
    fa44:	03000003 	movweq	r0, #3
    fa48:	a01b01fb 			; <UNDEFINED> instruction: 0xa01b01fb
    fa4c:	02000004 	andeq	r0, r0, #4
    fa50:	52084023 	andpl	r4, r8, #35	; 0x23
    fa54:	03000001 	movweq	r0, #1
    fa58:	3f1b0203 	svccc	0x001b0203
    fa5c:	02000001 	andeq	r0, r0, #1
    fa60:	07084423 	streq	r4, [r8, -r3, lsr #8]
    fa64:	03000001 	movweq	r0, #1
    fa68:	a3190204 	tstge	r9, #4, 4	; 0x40000000
    fa6c:	02000000 	andeq	r0, r0, #0
    fa70:	3b084823 	blcc	221b04 <__RAM_SIZE+0x121b04>
    fa74:	03000003 	movweq	r0, #3
    fa78:	51190208 	tstpl	r9, r8, lsl #4
    fa7c:	02000001 	andeq	r0, r0, #1
    fa80:	ec084c23 	stc	12, cr4, [r8], {35}	; 0x23
    fa84:	03000002 	movweq	r0, #2
    fa88:	a01b020e 	andsge	r0, fp, lr, lsl #4
    fa8c:	02000004 	andeq	r0, r0, #4
    fa90:	e9086823 	stmdb	r8, {r0, r1, r5, fp, sp, lr}
    fa94:	03000005 	movweq	r0, #5
    fa98:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
    fa9c:	02000000 	andeq	r0, r0, #0
    faa0:	32086c23 	andcc	r6, r8, #8960	; 0x2300
    faa4:	03000007 	movweq	r0, #7
    faa8:	891a0211 	ldmdbhi	sl, {r0, r4, r9}
    faac:	02000004 	andeq	r0, r0, #4
    fab0:	12087023 	andne	r7, r8, #35	; 0x23
    fab4:	03000002 	movweq	r0, #2
    fab8:	891a0212 	ldmdbhi	sl, {r1, r4, r9}
    fabc:	02000004 	andeq	r0, r0, #4
    fac0:	15087423 	strne	r7, [r8, #-1059]	; 0xfffffbdd
    fac4:	03000007 	movweq	r0, #7
    fac8:	a3190213 	tstge	r9, #805306369	; 0x30000001
    facc:	02000000 	andeq	r0, r0, #0
    fad0:	c6087823 	strgt	r7, [r8], -r3, lsr #16
    fad4:	03000003 	movweq	r0, #3
    fad8:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
    fadc:	02000000 	andeq	r0, r0, #0
    fae0:	54087c23 	strpl	r7, [r8], #-3107	; 0xfffff3dd
    fae4:	03000005 	movweq	r0, #5
    fae8:	97190215 			; <UNDEFINED> instruction: 0x97190215
    faec:	03000000 	movweq	r0, #0
    faf0:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
    faf4:	000003e8 	andeq	r0, r0, r8, ror #7
    faf8:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
    fafc:	00000097 	muleq	r0, r7, r0
    fb00:	01842303 	orreq	r2, r4, r3, lsl #6
    fb04:	0008ff08 	andeq	pc, r8, r8, lsl #30
    fb08:	021f0300 	andseq	r0, pc, #0, 6
    fb0c:	0004891a 	andeq	r8, r4, sl, lsl r9
    fb10:	88230300 	stmdahi	r3!, {r8, r9}
    fb14:	07f00801 	ldrbeq	r0, [r0, r1, lsl #16]!
    fb18:	20030000 	andcs	r0, r3, r0
    fb1c:	04891a02 	streq	r1, [r9], #2562	; 0xa02
    fb20:	23030000 	movwcs	r0, #12288	; 0x3000
    fb24:	c108018c 	smlabbgt	r8, ip, r1, r0
    fb28:	03000002 	movweq	r0, #2
    fb2c:	9719022e 	ldrls	r0, [r9, -lr, lsr #4]
    fb30:	03000000 	movweq	r0, #0
    fb34:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
    fb38:	00000256 	andeq	r0, r0, r6, asr r2
    fb3c:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
    fb40:	00000097 	muleq	r0, r7, r0
    fb44:	01942303 	orrseq	r2, r4, r3, lsl #6
    fb48:	00032008 	andeq	r2, r3, r8
    fb4c:	02300300 	eorseq	r0, r0, #0, 6
    fb50:	00009719 	andeq	r9, r0, r9, lsl r7
    fb54:	98230300 	stmdals	r3!, {r8, r9}
    fb58:	02770801 	rsbseq	r0, r7, #65536	; 0x10000
    fb5c:	33030000 	movwcc	r0, #12288	; 0x3000
    fb60:	00971902 	addseq	r1, r7, r2, lsl #18
    fb64:	23030000 	movwcs	r0, #12288	; 0x3000
    fb68:	0008019c 	muleq	r8, ip, r1
    fb6c:	03000000 	movweq	r0, #0
    fb70:	851a0235 	ldrhi	r0, [sl, #-565]	; 0xfffffdcb
    fb74:	03000005 	movweq	r0, #5
    fb78:	0801a023 	stmdaeq	r1, {r0, r1, r5, sp, pc}
    fb7c:	00001bc8 	andeq	r1, r0, r8, asr #23
    fb80:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
    fb84:	000000a3 	andeq	r0, r0, r3, lsr #1
    fb88:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
    fb8c:	001c8808 	andseq	r8, ip, r8, lsl #16
    fb90:	023d0300 	eorseq	r0, sp, #0, 6
    fb94:	0000a319 	andeq	sl, r0, r9, lsl r3
    fb98:	a8230300 	stmdage	r3!, {r8, r9}
    fb9c:	1b410801 	blne	1051ba8 <__RAM_SIZE+0xf51ba8>
    fba0:	41030000 	mrsmi	r0, (UNDEF: 3)
    fba4:	00a31902 	adceq	r1, r3, r2, lsl #18
    fba8:	23030000 	movwcs	r0, #12288	; 0x3000
    fbac:	3f0801ac 	svccc	0x000801ac
    fbb0:	0300001d 	movweq	r0, #29
    fbb4:	a3190245 	tstge	r9, #1342177284	; 0x50000004
    fbb8:	03000000 	movweq	r0, #0
    fbbc:	0801b023 	stmdaeq	r1, {r0, r1, r5, ip, sp, pc}
    fbc0:	00001c58 	andeq	r1, r0, r8, asr ip
    fbc4:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
    fbc8:	000000a3 	andeq	r0, r0, r3, lsr #1
    fbcc:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
    fbd0:	0007c308 	andeq	ip, r7, r8, lsl #6
    fbd4:	024c0300 	subeq	r0, ip, #0, 6
    fbd8:	0004891a 	andeq	r8, r4, sl, lsl r9
    fbdc:	b8230300 	stmdalt	r3!, {r8, r9}
    fbe0:	1d170801 	ldcne	8, cr0, [r7, #-4]
    fbe4:	4f030000 	svcmi	0x00030000
    fbe8:	00a31902 	adceq	r1, r3, r2, lsl #18
    fbec:	23030000 	movwcs	r0, #12288	; 0x3000
    fbf0:	190801bc 	stmdbne	r8, {r2, r3, r4, r5, r7, r8}
    fbf4:	0300001b 	movweq	r0, #27
    fbf8:	a3190252 	tstge	r9, #536870917	; 0x20000005
    fbfc:	03000000 	movweq	r0, #0
    fc00:	0801c023 	stmdaeq	r1, {r0, r1, r5, lr, pc}
    fc04:	00001a96 	muleq	r0, r6, sl
    fc08:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
    fc0c:	000000a3 	andeq	r0, r0, r3, lsr #1
    fc10:	01c42303 	biceq	r2, r4, r3, lsl #6
    fc14:	001bec08 	andseq	lr, fp, r8, lsl #24
    fc18:	02590300 	subseq	r0, r9, #0, 6
    fc1c:	0000a319 	andeq	sl, r0, r9, lsl r3
    fc20:	c8230300 	stmdagt	r3!, {r8, r9}
    fc24:	09c40801 	stmibeq	r4, {r0, fp}^
    fc28:	5d030000 	stcpl	0, cr0, [r3, #-0]
    fc2c:	00761a02 	rsbseq	r1, r6, r2, lsl #20
    fc30:	23030000 	movwcs	r0, #12288	; 0x3000
    fc34:	810801cc 	smlabthi	r8, ip, r1, r0
    fc38:	03000004 	movweq	r0, #4
    fc3c:	a3190278 	tstge	r9, #120, 4	; 0x80000007
    fc40:	03000000 	movweq	r0, #0
    fc44:	0801d023 	stmdaeq	r1, {r0, r1, r5, ip, lr, pc}
    fc48:	0000056d 	andeq	r0, r0, sp, ror #10
    fc4c:	19027d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp, lr}
    fc50:	000000a3 	andeq	r0, r0, r3, lsr #1
    fc54:	01d42303 	bicseq	r2, r4, r3, lsl #6
    fc58:	64040b00 	strvs	r0, [r4], #-2816	; 0xfffff500
    fc5c:	09000001 	stmdbeq	r0, {r0}
    fc60:	0004a001 	andeq	sl, r4, r1
    fc64:	04890a00 	streq	r0, [r9], #2560	; 0xa00
    fc68:	a30a0000 	movwge	r0, #40960	; 0xa000
    fc6c:	00000000 	andeq	r0, r0, r0
    fc70:	048f040b 	streq	r0, [pc], #1035	; fc78 <_Min_Stack_Size+0xec78>
    fc74:	b3070000 	movwlt	r0, #28672	; 0x7000
    fc78:	34000007 	strcc	r0, [r0], #-7
    fc7c:	10037e03 	andne	r7, r3, r3, lsl #28
    fc80:	00000585 	andeq	r0, r0, r5, lsl #11
    fc84:	00018d08 	andeq	r8, r1, r8, lsl #26
    fc88:	03820300 	orreq	r0, r2, #0, 6
    fc8c:	0000a319 	andeq	sl, r0, r9, lsl r3
    fc90:	00230200 	eoreq	r0, r3, r0, lsl #4
    fc94:	00089708 	andeq	r9, r8, r8, lsl #14
    fc98:	03850300 	orreq	r0, r5, #0, 6
    fc9c:	00015e1a 	andeq	r5, r1, sl, lsl lr
    fca0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    fca4:	0006fc08 	andeq	pc, r6, r8, lsl #24
    fca8:	03880300 	orreq	r0, r8, #0, 6
    fcac:	00009719 	andeq	r9, r0, r9, lsl r7
    fcb0:	08230200 	stmdaeq	r3!, {r9}
    fcb4:	0004cb08 	andeq	ip, r4, r8, lsl #22
    fcb8:	038c0300 	orreq	r0, ip, #0, 6
    fcbc:	0006901a 	andeq	r9, r6, sl, lsl r0
    fcc0:	0c230200 	sfmeq	f0, 4, [r3], #-0
    fcc4:	00016208 	andeq	r6, r1, r8, lsl #4
    fcc8:	03900300 	orrseq	r0, r0, #0, 6
    fccc:	00009719 	andeq	r9, r0, r9, lsl r7
    fcd0:	10230200 	eorne	r0, r3, r0, lsl #4
    fcd4:	00012108 	andeq	r2, r1, r8, lsl #2
    fcd8:	03930300 	orrseq	r0, r3, #0, 6
    fcdc:	00009719 	andeq	r9, r0, r9, lsl r7
    fce0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    fce4:	0008cd08 	andeq	ip, r8, r8, lsl #26
    fce8:	03980300 	orrseq	r0, r8, #0, 6
    fcec:	0004891a 	andeq	r8, r4, sl, lsl r9
    fcf0:	18230200 	stmdane	r3!, {r9}
    fcf4:	0006e308 	andeq	lr, r6, r8, lsl #6
    fcf8:	03990300 	orrseq	r0, r9, #0, 6
    fcfc:	00009719 	andeq	r9, r0, r9, lsl r7
    fd00:	1c230200 	sfmne	f0, 4, [r3], #-0
    fd04:	0005d308 	andeq	sp, r5, r8, lsl #6
    fd08:	039d0300 	orrseq	r0, sp, #0, 6
    fd0c:	0005851a 	andeq	r8, r5, sl, lsl r5
    fd10:	20230200 	eorcs	r0, r3, r0, lsl #4
    fd14:	0006a008 	andeq	sl, r6, r8
    fd18:	039e0300 	orrseq	r0, lr, #0, 6
    fd1c:	0005851a 	andeq	r8, r5, sl, lsl r5
    fd20:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    fd24:	0001d008 	andeq	sp, r1, r8
    fd28:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
    fd2c:	00009719 	andeq	r9, r0, r9, lsl r7
    fd30:	28230200 	stmdacs	r3!, {r9}
    fd34:	0009e008 	andeq	lr, r9, r8
    fd38:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
    fd3c:	0005851a 	andeq	r8, r5, sl, lsl r5
    fd40:	2c230200 	sfmcs	f0, 4, [r3], #-0
    fd44:	00042508 	andeq	r2, r4, r8, lsl #10
    fd48:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
    fd4c:	0005851a 	andeq	r8, r5, sl, lsl r5
    fd50:	30230200 	eorcc	r0, r3, r0, lsl #4
    fd54:	a6040b00 	strge	r0, [r4], -r0, lsl #22
    fd58:	0c000004 	stceq	0, cr0, [r0], {4}
    fd5c:	000008ef 	andeq	r0, r0, pc, ror #17
    fd60:	03028603 	movweq	r8, #9731	; 0x2603
    fd64:	00000164 	andeq	r0, r0, r4, ror #2
    fd68:	008b040b 	addeq	r0, fp, fp, lsl #8
    fd6c:	60070000 	andvs	r0, r7, r0
    fd70:	34000004 	strcc	r0, [r0], #-4
    fd74:	1002d903 	andne	sp, r2, r3, lsl #18
    fd78:	0000067d 	andeq	r0, r0, sp, ror r6
    fd7c:	00040108 	andeq	r0, r4, r8, lsl #2
    fd80:	02dd0300 	sbcseq	r0, sp, #0, 6
    fd84:	0000a319 	andeq	sl, r0, r9, lsl r3
    fd88:	00230200 	eoreq	r0, r3, r0, lsl #4
    fd8c:	00037408 	andeq	r7, r3, r8, lsl #8
    fd90:	02e00300 	rsceq	r0, r0, #0, 6
    fd94:	00015e1a 	andeq	r5, r1, sl, lsl lr
    fd98:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
    fd9c:	00077008 	andeq	r7, r7, r8
    fda0:	02e30300 	rsceq	r0, r3, #0, 6
    fda4:	0000a319 	andeq	sl, r0, r9, lsl r3
    fda8:	08230200 	stmdaeq	r3!, {r9}
    fdac:	0008b608 	andeq	fp, r8, r8, lsl #12
    fdb0:	02e60300 	rsceq	r0, r6, #0, 6
    fdb4:	00009719 	andeq	r9, r0, r9, lsl r7
    fdb8:	0c230200 	sfmeq	f0, 4, [r3], #-0
    fdbc:	00080b08 	andeq	r0, r8, r8, lsl #22
    fdc0:	02e90300 	rsceq	r0, r9, #0, 6
    fdc4:	0005981a 	andeq	r9, r5, sl, lsl r8
    fdc8:	10230200 	eorne	r0, r3, r0, lsl #4
    fdcc:	00111308 	andseq	r1, r1, r8, lsl #6
    fdd0:	02ed0300 	rsceq	r0, sp, #0, 6
    fdd4:	0005981a 	andeq	r9, r5, sl, lsl r8
    fdd8:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
    fddc:	00052808 	andeq	r2, r5, r8, lsl #16
    fde0:	02f00300 	rscseq	r0, r0, #0, 6
    fde4:	0005981a 	andeq	r9, r5, sl, lsl r8
    fde8:	18230200 	stmdane	r3!, {r9}
    fdec:	00030608 	andeq	r0, r3, r8, lsl #12
    fdf0:	02f30300 	rscseq	r0, r3, #0, 6
    fdf4:	0000a319 	andeq	sl, r0, r9, lsl r3
    fdf8:	1c230200 	sfmne	f0, 4, [r3], #-0
    fdfc:	00098d08 	andeq	r8, r9, r8, lsl #26
    fe00:	02f90300 	rscseq	r0, r9, #0, 6
    fe04:	0004891a 	andeq	r8, r4, sl, lsl r9
    fe08:	20230200 	eorcs	r0, r3, r0, lsl #4
    fe0c:	0004ae08 	andeq	sl, r4, r8, lsl #28
    fe10:	02fe0300 	rscseq	r0, lr, #0, 6
    fe14:	0004891a 	andeq	r8, r4, sl, lsl r9
    fe18:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
    fe1c:	00050b08 	andeq	r0, r5, r8, lsl #22
    fe20:	02ff0300 	rscseq	r0, pc, #0, 6
    fe24:	00009719 	andeq	r9, r0, r9, lsl r7
    fe28:	28230200 	stmdacs	r3!, {r9}
    fe2c:	0002a708 	andeq	sl, r2, r8, lsl #14
    fe30:	03030300 	movweq	r0, #13056	; 0x3300
    fe34:	00067d1a 	andeq	r7, r6, sl, lsl sp
    fe38:	2c230200 	sfmcs	f0, 4, [r3], #-0
    fe3c:	00087908 	andeq	r7, r8, r8, lsl #18
    fe40:	03040300 	movweq	r0, #17152	; 0x4300
    fe44:	00067d1a 	andeq	r7, r6, sl, lsl sp
    fe48:	30230200 	eorcc	r0, r3, r0, lsl #4
    fe4c:	9e040b00 	vmlals.f64	d0, d4, d0
    fe50:	0c000005 	stceq	0, cr0, [r0], {5}
    fe54:	00000474 	andeq	r0, r0, r4, ror r4
    fe58:	03032303 	movweq	r2, #13059	; 0x3303
    fe5c:	0000059e 	muleq	r0, lr, r5
    fe60:	058b040b 	streq	r0, [fp, #1035]	; 0x40b
    fe64:	270d0000 	strcs	r0, [sp, -r0]
    fe68:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
    fe6c:	90210139 	eorls	r0, r1, r9, lsr r1
    fe70:	01000006 	tsteq	r0, r6
    fe74:	18f40d01 	ldmne	r4!, {r0, r8, sl, fp}^
    fe78:	53040000 	movwpl	r0, #16384	; 0x4000
    fe7c:	00af2101 	adceq	r2, pc, r1, lsl #2
    fe80:	01010000 	mrseq	r0, (UNDEF: 1)
    fe84:	001e9b0e 	andseq	r9, lr, lr, lsl #22
    fe88:	218f0500 	orrcs	r0, pc, r0, lsl #10
    fe8c:	0000058b 	andeq	r0, r0, fp, lsl #11
    fe90:	040b0101 	streq	r0, [fp], #-257	; 0xfffffeff
    fe94:	00000683 	andeq	r0, r0, r3, lsl #13
    fe98:	0787010f 	streq	r0, [r7, pc, lsl #2]
    fe9c:	52010000 	andpl	r0, r1, #0
    fea0:	00970107 	addseq	r0, r7, r7, lsl #2
    fea4:	2c100000 	ldccs	0, cr0, [r0], {-0}
    fea8:	2ca41000 	stccs	0, cr1, [r4]
    feac:	56451000 	strbpl	r1, [r5], -r0
    feb0:	e6010000 	str	r0, [r1], -r0
    feb4:	10000007 	andne	r0, r0, r7
    feb8:	00000efd 	strdeq	r0, [r0], -sp
    febc:	c2285201 	eorgt	r5, r8, #268435456	; 0x10000000
    fec0:	75000006 	strvc	r0, [r0, #-6]
    fec4:	65000056 	strvs	r0, [r0, #-86]	; 0xffffffaa
    fec8:	10000056 	andne	r0, r0, r6, asr r0
    fecc:	000010f2 	strdeq	r1, [r0], -r2
    fed0:	e6395201 	ldrt	r5, [r9], -r1, lsl #4
    fed4:	e5000007 	str	r0, [r0, #-7]
    fed8:	db000056 	blle	10038 <_Min_Stack_Size+0xf038>
    fedc:	10000056 	andne	r0, r0, r6, asr r0
    fee0:	000010e6 	andeq	r1, r0, r6, ror #1
    fee4:	a32b5301 			; <UNDEFINED> instruction: 0xa32b5301
    fee8:	34000000 	strcc	r0, [r0], #-0
    feec:	2a000057 	bcs	10050 <_Min_Stack_Size+0xf050>
    fef0:	10000057 	andne	r0, r0, r7, asr r0
    fef4:	00001106 	andeq	r1, r0, r6, lsl #2
    fef8:	a33f5301 	teqge	pc, #67108864	; 0x4000000
    fefc:	83000000 	movwhi	r0, #0
    ff00:	79000057 	stmdbvc	r0, {r0, r1, r2, r4, r6}
    ff04:	11000057 	qaddne	r0, r7, r0
    ff08:	000003fa 	strdeq	r0, [r0], -sl
    ff0c:	97115601 	ldrls	r5, [r1, -r1, lsl #12]
    ff10:	d6000000 	strle	r0, [r0], -r0
    ff14:	c8000057 	stmdagt	r0, {r0, r1, r2, r4, r6}
    ff18:	11000057 	qaddne	r0, r7, r0
    ff1c:	00001979 	andeq	r1, r0, r9, ror r9
    ff20:	90125801 	andsls	r5, r2, r1, lsl #16
    ff24:	33000006 	movwcc	r0, #6
    ff28:	2f000058 	svccs	0x00000058
    ff2c:	12000058 	andne	r0, r0, #88	; 0x58
    ff30:	000007ec 	andeq	r0, r0, ip, ror #15
    ff34:	10002c24 	andne	r2, r0, r4, lsr #24
    ff38:	002c2401 	eoreq	r2, ip, r1, lsl #8
    ff3c:	002c2810 	eoreq	r2, ip, r0, lsl r8
    ff40:	0db00110 	ldfeqs	f0, [r0, #64]!	; 0x40
    ff44:	00000786 	andeq	r0, r0, r6, lsl #15
    ff48:	0007ff13 	andeq	pc, r7, r3, lsl pc	; <UNPREDICTABLE>
    ff4c:	00585300 	subseq	r5, r8, r0, lsl #6
    ff50:	00585100 	subseq	r5, r8, r0, lsl #2
    ff54:	ec120000 	ldc	0, cr0, [r2], {-0}
    ff58:	32000007 	andcc	r0, r0, #7
    ff5c:	0110002c 	tsteq	r0, ip, lsr #32
    ff60:	10002c32 	andne	r2, r0, r2, lsr ip
    ff64:	10002c36 	andne	r2, r0, r6, lsr ip
    ff68:	ad11b401 	cfldrsge	mvf11, [r1, #-4]
    ff6c:	13000007 	movwne	r0, #7
    ff70:	000007ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    ff74:	00005868 	andeq	r5, r0, r8, ror #16
    ff78:	00005866 	andeq	r5, r0, r6, ror #16
    ff7c:	07ec1200 	strbeq	r1, [ip, r0, lsl #4]!
    ff80:	2c560000 	mracs	r0, r6, acc0
    ff84:	56011000 	strpl	r1, [r1], -r0
    ff88:	5a10002c 	bpl	410040 <__RAM_SIZE+0x310040>
    ff8c:	0110002c 	tsteq	r0, ip, lsr #32
    ff90:	07d41190 	bfieq	r1, r0, #3, #18
    ff94:	ff130000 			; <UNDEFINED> instruction: 0xff130000
    ff98:	7d000007 	stcvc	0, cr0, [r0, #-28]	; 0xffffffe4
    ff9c:	7b000058 	blvc	10104 <_Min_Stack_Size+0xf104>
    ffa0:	00000058 	andeq	r0, r0, r8, asr r0
    ffa4:	002c8e14 	eoreq	r8, ip, r4, lsl lr
    ffa8:	00080d10 	andeq	r0, r8, r0, lsl sp
    ffac:	50011500 	andpl	r1, r1, r0, lsl #10
    ffb0:	5001f303 	andpl	pc, r1, r3, lsl #6
    ffb4:	040b0000 	streq	r0, [fp], #-0
    ffb8:	00000076 	andeq	r0, r0, r6, ror r0
    ffbc:	00196616 	andseq	r6, r9, r6, lsl r6
    ffc0:	01fa0200 	mvnseq	r0, r0, lsl #4
    ffc4:	00970137 	addseq	r0, r7, r7, lsr r1
    ffc8:	0d030000 	stceq	0, cr0, [r3, #-0]
    ffcc:	17000008 	strne	r0, [r0, -r8]
    ffd0:	000019aa 	andeq	r1, r0, sl, lsr #19
    ffd4:	0601fc02 	streq	pc, [r1], -r2, lsl #24
    ffd8:	00000097 	muleq	r0, r7, r0
    ffdc:	01011800 	tsteq	r1, r0, lsl #16
    ffe0:	00001159 	andeq	r1, r0, r9, asr r1
    ffe4:	00001159 	andeq	r1, r0, r9, asr r1
    ffe8:	0d05f103 	stfeqd	f7, [r5, #-12]
    ffec:	0009d600 	andeq	sp, r9, r0, lsl #12
    fff0:	66000200 	strvs	r0, [r0], -r0, lsl #4
    fff4:	0400002d 	streq	r0, [r0], #-45	; 0xffffffd3
    fff8:	00003d01 	andeq	r3, r0, r1, lsl #26
    fffc:	27190c00 	ldrcs	r0, [r9, -r0, lsl #24]
   10000:	065c0000 	ldrbeq	r0, [ip], -r0
   10004:	04c00000 	strbeq	r0, [r0], #0
	...
   10010:	598b0000 	stmibpl	fp, {}	; <UNPREDICTABLE>
   10014:	04020000 	streq	r0, [r2], #-0
   10018:	00023907 	andeq	r3, r2, r7, lsl #18
   1001c:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
   10020:	00746e69 	rsbseq	r6, r4, r9, ror #28
   10024:	e8050802 	stmda	r5, {r1, fp}
   10028:	02000004 	andeq	r0, r0, #4
   1002c:	063e0408 	ldrteq	r0, [lr], -r8, lsl #8
   10030:	01020000 	mrseq	r0, (UNDEF: 2)
   10034:	00086d06 	andeq	r6, r8, r6, lsl #26
   10038:	08010200 	stmdaeq	r1, {r9}
   1003c:	0000086b 	andeq	r0, r0, fp, ror #16
   10040:	cf050202 	svcgt	0x00050202
   10044:	02000006 	andeq	r0, r0, #6
   10048:	09390702 	ldmdbeq	r9!, {r1, r8, r9, sl}
   1004c:	04020000 	streq	r0, [r2], #-0
   10050:	0004ed05 	andeq	lr, r4, r5, lsl #26
   10054:	07040200 	streq	r0, [r4, -r0, lsl #4]
   10058:	00000234 	andeq	r0, r0, r4, lsr r2
   1005c:	2f070802 	svccs	0x00070802
   10060:	04000002 	streq	r0, [r0], #-2
   10064:	08010204 	stmdaeq	r1, {r2, r9}
   10068:	00000874 	andeq	r0, r0, r4, ror r8
   1006c:	0008fa05 	andeq	pc, r8, r5, lsl #20
   10070:	31730200 	cmncc	r3, r0, lsl #4
   10074:	00000078 	andeq	r0, r0, r8, ror r0
   10078:	0008f905 	andeq	pc, r8, r5, lsl #18
   1007c:	31740200 	cmncc	r4, r0, lsl #4
   10080:	0000004c 	andeq	r0, r0, ip, asr #32
   10084:	00079a05 	andeq	r9, r7, r5, lsl #20
   10088:	31760200 	cmncc	r6, r0, lsl #4
   1008c:	00000029 	andeq	r0, r0, r9, lsr #32
   10090:	00009706 	andeq	r9, r0, r6, lsl #14
   10094:	072c0500 	streq	r0, [ip, -r0, lsl #10]!
   10098:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
   1009c:	00006831 	andeq	r6, r0, r1, lsr r8
   100a0:	00a80600 	adceq	r0, r8, r0, lsl #12
   100a4:	3b070000 	blcc	1d00ac <__RAM_SIZE+0xd00ac>
   100a8:	1c000005 	stcne	0, cr0, [r0], {5}
   100ac:	10018203 	andne	r8, r1, r3, lsl #4
   100b0:	00000138 	andeq	r0, r0, r8, lsr r1
   100b4:	00082d08 	andeq	r2, r8, r8, lsl #26
   100b8:	01860300 	orreq	r0, r6, r0, lsl #6
   100bc:	0000a819 	andeq	sl, r0, r9, lsl r8
   100c0:	00230200 	eoreq	r0, r3, r0, lsl #4
   100c4:	0003a008 	andeq	sl, r3, r8
   100c8:	01870300 	orreq	r0, r7, r0, lsl #6
   100cc:	0000a819 	andeq	sl, r0, r9, lsl r8
   100d0:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
   100d4:	00043d08 	andeq	r3, r4, r8, lsl #26
   100d8:	018a0300 	orreq	r0, sl, r0, lsl #6
   100dc:	0001441b 	andeq	r4, r1, fp, lsl r4
   100e0:	08230200 	stmdaeq	r3!, {r9}
   100e4:	0001f208 	andeq	pc, r1, r8, lsl #4
   100e8:	018b0300 	orreq	r0, fp, r0, lsl #6
   100ec:	0000a819 	andeq	sl, r0, r9, lsl r8
   100f0:	0c230200 	sfmeq	f0, 4, [r3], #-0
   100f4:	00096f08 	andeq	r6, r9, r8, lsl #30
   100f8:	01910300 	orrseq	r0, r1, r0, lsl #6
   100fc:	00014a1a 	andeq	r4, r1, sl, lsl sl
   10100:	10230200 	eorne	r0, r3, r0, lsl #4
   10104:	00001b08 	andeq	r1, r0, r8, lsl #22
   10108:	01920300 	orrseq	r0, r2, r0, lsl #6
   1010c:	00014a1a 	andeq	r4, r1, sl, lsl sl
   10110:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
   10114:	00060908 	andeq	r0, r6, r8, lsl #18
   10118:	01960300 	orrseq	r0, r6, r0, lsl #6
   1011c:	0001501b 	andeq	r5, r1, fp, lsl r0
   10120:	18230200 	stmdane	r3!, {r9}
   10124:	44010900 	strmi	r0, [r1], #-2304	; 0xfffff700
   10128:	0a000001 	beq	10134 <_Min_Stack_Size+0xf134>
   1012c:	000000a8 	andeq	r0, r0, r8, lsr #1
   10130:	38040b00 	stmdacc	r4, {r8, r9, fp}
   10134:	0b000001 	bleq	10140 <_Min_Stack_Size+0xf140>
   10138:	0000b904 	andeq	fp, r0, r4, lsl #18
   1013c:	4a040b00 	bmi	112d44 <__RAM_SIZE+0x12d44>
   10140:	0c000001 	stceq	0, cr0, [r0], {1}
   10144:	0000064a 	andeq	r0, r0, sl, asr #12
   10148:	03019b03 	movweq	r9, #6915	; 0x1b03
   1014c:	000000b9 	strheq	r0, [r0], -r9
   10150:	007f040b 	rsbseq	r0, pc, fp, lsl #8
   10154:	4b070000 	blmi	1d015c <__RAM_SIZE+0xd015c>
   10158:	d8000003 	stmdale	r0, {r0, r1}
   1015c:	1001d603 	andne	sp, r1, r3, lsl #12
   10160:	0000048e 	andeq	r0, r0, lr, lsl #9
   10164:	00092c08 	andeq	r2, r9, r8, lsl #24
   10168:	01dd0300 	bicseq	r0, sp, r0, lsl #6
   1016c:	0000a819 	andeq	sl, r0, r9, lsl r8
   10170:	00230200 	eoreq	r0, r3, r0, lsl #4
   10174:	00079f08 	andeq	r9, r7, r8, lsl #30
   10178:	01de0300 	bicseq	r0, lr, r0, lsl #6
   1017c:	0000a819 	andeq	sl, r0, r9, lsl r8
   10180:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
   10184:	0001bc08 	andeq	fp, r1, r8, lsl #24
   10188:	01df0300 	bicseq	r0, pc, r0, lsl #6
   1018c:	0000761a 	andeq	r7, r0, sl, lsl r6
   10190:	08230200 	stmdaeq	r3!, {r9}
   10194:	00091608 	andeq	r1, r9, r8, lsl #12
   10198:	01e00300 	mvneq	r0, r0, lsl #6
   1019c:	0000761a 	andeq	r7, r0, sl, lsl r6
   101a0:	0c230200 	sfmeq	f0, 4, [r3], #-0
   101a4:	00041108 	andeq	r1, r4, r8, lsl #2
   101a8:	01e10300 	mvneq	r0, r0, lsl #6
   101ac:	0000761a 	andeq	r7, r0, sl, lsl r6
   101b0:	10230200 	eorne	r0, r3, r0, lsl #4
   101b4:	00095a08 	andeq	r5, r9, r8, lsl #20
   101b8:	01e20300 	mvneq	r0, r0, lsl #6
   101bc:	0000a819 	andeq	sl, r0, r9, lsl r8
   101c0:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
   101c4:	0021e208 	eoreq	lr, r1, r8, lsl #4
   101c8:	01e30300 	mvneq	r0, r0, lsl #6
   101cc:	0000a819 	andeq	sl, r0, r9, lsl r8
   101d0:	18230200 	stmdane	r3!, {r9}
   101d4:	00062508 	andeq	r2, r6, r8, lsl #10
   101d8:	01e40300 	mvneq	r0, r0, lsl #6
   101dc:	0000a819 	andeq	sl, r0, r9, lsl r8
   101e0:	1c230200 	sfmne	f0, 4, [r3], #-0
   101e4:	0006ba08 	andeq	fp, r6, r8, lsl #20
   101e8:	01e80300 	mvneq	r0, r0, lsl #6
   101ec:	00048e1a 	andeq	r8, r4, sl, lsl lr
   101f0:	20230200 	eorcs	r0, r3, r0, lsl #4
   101f4:	00019908 	andeq	r9, r1, r8, lsl #18
   101f8:	01e90300 	mvneq	r0, r0, lsl #6
   101fc:	00048e1a 	andeq	r8, r4, sl, lsl lr
   10200:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
   10204:	0005b108 	andeq	fp, r5, r8, lsl #2
   10208:	01f10300 	mvnseq	r0, r0, lsl #6
   1020c:	0001631a 	andeq	r6, r1, sl, lsl r3
   10210:	28230200 	stmdacs	r3!, {r9}
   10214:	0002d908 	andeq	sp, r2, r8, lsl #18
   10218:	01f20300 	mvnseq	r0, r0, lsl #6
   1021c:	00009719 	andeq	r9, r0, r9, lsl r7
   10220:	2c230200 	sfmcs	f0, 4, [r3], #-0
   10224:	00024608 	andeq	r4, r2, r8, lsl #12
   10228:	01f30300 	mvnseq	r0, r0, lsl #6
   1022c:	00009719 	andeq	r9, r0, r9, lsl r7
   10230:	30230200 	eorcc	r0, r3, r0, lsl #4
   10234:	00017308 	andeq	r7, r1, r8, lsl #6
   10238:	01f40300 	mvnseq	r0, r0, lsl #6
   1023c:	00009719 	andeq	r9, r0, r9, lsl r7
   10240:	34230200 	strtcc	r0, [r3], #-512	; 0xfffffe00
   10244:	00074b08 	andeq	r4, r7, r8, lsl #22
   10248:	01f50300 	mvnseq	r0, r0, lsl #6
   1024c:	00009719 	andeq	r9, r0, r9, lsl r7
   10250:	38230200 	stmdacc	r3!, {r9}
   10254:	0000eb08 	andeq	lr, r0, r8, lsl #22
   10258:	01f60300 	mvnseq	r0, r0, lsl #6
   1025c:	00009719 	andeq	r9, r0, r9, lsl r7
   10260:	3c230200 	sfmcc	f0, 4, [r3], #-0
   10264:	00035c08 	andeq	r5, r3, r8, lsl #24
   10268:	01fb0300 	mvnseq	r0, r0, lsl #6
   1026c:	0004a51b 	andeq	sl, r4, fp, lsl r5
   10270:	40230200 	eormi	r0, r3, r0, lsl #4
   10274:	00015208 	andeq	r5, r1, r8, lsl #4
   10278:	02030300 	andeq	r0, r3, #0, 6
   1027c:	0001441b 	andeq	r4, r1, fp, lsl r4
   10280:	44230200 	strtmi	r0, [r3], #-512	; 0xfffffe00
   10284:	00010708 	andeq	r0, r1, r8, lsl #14
   10288:	02040300 	andeq	r0, r4, #0, 6
   1028c:	0000a819 	andeq	sl, r0, r9, lsl r8
   10290:	48230200 	stmdami	r3!, {r9}
   10294:	00033b08 	andeq	r3, r3, r8, lsl #22
   10298:	02080300 	andeq	r0, r8, #0, 6
   1029c:	00015619 	andeq	r5, r1, r9, lsl r6
   102a0:	4c230200 	sfmmi	f0, 4, [r3], #-0
   102a4:	0002ec08 	andeq	lr, r2, r8, lsl #24
   102a8:	020e0300 	andeq	r0, lr, #0, 6
   102ac:	0004a51b 	andeq	sl, r4, fp, lsl r5
   102b0:	68230200 	stmdavs	r3!, {r9}
   102b4:	0005e908 	andeq	lr, r5, r8, lsl #18
   102b8:	020f0300 	andeq	r0, pc, #0, 6
   102bc:	0000761a 	andeq	r7, r0, sl, lsl r6
   102c0:	6c230200 	sfmvs	f0, 4, [r3], #-0
   102c4:	00073208 	andeq	r3, r7, r8, lsl #4
   102c8:	02110300 	andseq	r0, r1, #0, 6
   102cc:	00048e1a 	andeq	r8, r4, sl, lsl lr
   102d0:	70230200 	eorvc	r0, r3, r0, lsl #4
   102d4:	00021208 	andeq	r1, r2, r8, lsl #4
   102d8:	02120300 	andseq	r0, r2, #0, 6
   102dc:	00048e1a 	andeq	r8, r4, sl, lsl lr
   102e0:	74230200 	strtvc	r0, [r3], #-512	; 0xfffffe00
   102e4:	00071508 	andeq	r1, r7, r8, lsl #10
   102e8:	02130300 	andseq	r0, r3, #0, 6
   102ec:	0000a819 	andeq	sl, r0, r9, lsl r8
   102f0:	78230200 	stmdavc	r3!, {r9}
   102f4:	0003c608 	andeq	ip, r3, r8, lsl #12
   102f8:	02140300 	andseq	r0, r4, #0, 6
   102fc:	0000761a 	andeq	r7, r0, sl, lsl r6
   10300:	7c230200 	sfmvc	f0, 4, [r3], #-0
   10304:	00055408 	andeq	r5, r5, r8, lsl #8
   10308:	02150300 	andseq	r0, r5, #0, 6
   1030c:	00009719 	andeq	r9, r0, r9, lsl r7
   10310:	80230300 	eorhi	r0, r3, r0, lsl #6
   10314:	03e80801 	mvneq	r0, #65536	; 0x10000
   10318:	16030000 	strne	r0, [r3], -r0
   1031c:	00971902 	addseq	r1, r7, r2, lsl #18
   10320:	23030000 	movwcs	r0, #12288	; 0x3000
   10324:	ff080184 			; <UNDEFINED> instruction: 0xff080184
   10328:	03000008 	movweq	r0, #8
   1032c:	8e1a021f 	mrchi	2, 0, r0, cr10, cr15, {0}
   10330:	03000004 	movweq	r0, #4
   10334:	08018823 	stmdaeq	r1, {r0, r1, r5, fp, pc}
   10338:	000007f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1033c:	1a022003 	bne	98350 <SYSTICK_CYCLES+0x6f311>
   10340:	0000048e 	andeq	r0, r0, lr, lsl #9
   10344:	018c2303 	orreq	r2, ip, r3, lsl #6
   10348:	0002c108 	andeq	ip, r2, r8, lsl #2
   1034c:	022e0300 	eoreq	r0, lr, #0, 6
   10350:	00009719 	andeq	r9, r0, r9, lsl r7
   10354:	90230300 	eorls	r0, r3, r0, lsl #6
   10358:	02560801 	subseq	r0, r6, #65536	; 0x10000
   1035c:	2f030000 	svccs	0x00030000
   10360:	00971902 	addseq	r1, r7, r2, lsl #18
   10364:	23030000 	movwcs	r0, #12288	; 0x3000
   10368:	20080194 	mulcs	r8, r4, r1
   1036c:	03000003 	movweq	r0, #3
   10370:	97190230 			; <UNDEFINED> instruction: 0x97190230
   10374:	03000000 	movweq	r0, #0
   10378:	08019823 	stmdaeq	r1, {r0, r1, r5, fp, ip, pc}
   1037c:	00000277 	andeq	r0, r0, r7, ror r2
   10380:	19023303 	stmdbne	r2, {r0, r1, r8, r9, ip, sp}
   10384:	00000097 	muleq	r0, r7, r0
   10388:	019c2303 	orrseq	r2, ip, r3, lsl #6
   1038c:	00000008 	andeq	r0, r0, r8
   10390:	02350300 	eorseq	r0, r5, #0, 6
   10394:	00058a1a 	andeq	r8, r5, sl, lsl sl
   10398:	a0230300 	eorge	r0, r3, r0, lsl #6
   1039c:	1bc80801 	blne	ff2123a8 <__RAM_segment_used_end__+0xc71123a8>
   103a0:	3a030000 	bcc	d03a8 <SYSTICK_CYCLES+0xa7369>
   103a4:	00a81902 	adceq	r1, r8, r2, lsl #18
   103a8:	23030000 	movwcs	r0, #12288	; 0x3000
   103ac:	880801a4 	stmdahi	r8, {r2, r5, r7, r8}
   103b0:	0300001c 	movweq	r0, #28
   103b4:	a819023d 	ldmdage	r9, {r0, r2, r3, r4, r5, r9}
   103b8:	03000000 	movweq	r0, #0
   103bc:	0801a823 	stmdaeq	r1, {r0, r1, r5, fp, sp, pc}
   103c0:	00001b41 	andeq	r1, r0, r1, asr #22
   103c4:	19024103 	stmdbne	r2, {r0, r1, r8, lr}
   103c8:	000000a8 	andeq	r0, r0, r8, lsr #1
   103cc:	01ac2303 			; <UNDEFINED> instruction: 0x01ac2303
   103d0:	001d3f08 	andseq	r3, sp, r8, lsl #30
   103d4:	02450300 	subeq	r0, r5, #0, 6
   103d8:	0000a819 	andeq	sl, r0, r9, lsl r8
   103dc:	b0230300 	eorlt	r0, r3, r0, lsl #6
   103e0:	1c580801 	mrrcne	8, 0, r0, r8, cr1
   103e4:	48030000 	stmdami	r3, {}	; <UNPREDICTABLE>
   103e8:	00a81902 	adceq	r1, r8, r2, lsl #18
   103ec:	23030000 	movwcs	r0, #12288	; 0x3000
   103f0:	c30801b4 	movwgt	r0, #33204	; 0x81b4
   103f4:	03000007 	movweq	r0, #7
   103f8:	8e1a024c 	cdphi	2, 1, cr0, cr10, cr12, {2}
   103fc:	03000004 	movweq	r0, #4
   10400:	0801b823 	stmdaeq	r1, {r0, r1, r5, fp, ip, sp, pc}
   10404:	00001d17 	andeq	r1, r0, r7, lsl sp
   10408:	19024f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, lr}
   1040c:	000000a8 	andeq	r0, r0, r8, lsr #1
   10410:	01bc2303 			; <UNDEFINED> instruction: 0x01bc2303
   10414:	001b1908 	andseq	r1, fp, r8, lsl #18
   10418:	02520300 	subseq	r0, r2, #0, 6
   1041c:	0000a819 	andeq	sl, r0, r9, lsl r8
   10420:	c0230300 	eorgt	r0, r3, r0, lsl #6
   10424:	1a960801 	bne	fe592430 <__RAM_segment_used_end__+0xc6492430>
   10428:	55030000 	strpl	r0, [r3, #-0]
   1042c:	00a81902 	adceq	r1, r8, r2, lsl #18
   10430:	23030000 	movwcs	r0, #12288	; 0x3000
   10434:	ec0801c4 	stfs	f0, [r8], {196}	; 0xc4
   10438:	0300001b 	movweq	r0, #27
   1043c:	a8190259 	ldmdage	r9, {r0, r3, r4, r6, r9}
   10440:	03000000 	movweq	r0, #0
   10444:	0801c823 	stmdaeq	r1, {r0, r1, r5, fp, lr, pc}
   10448:	000009c4 	andeq	r0, r0, r4, asr #19
   1044c:	1a025d03 	bne	a7860 <SYSTICK_CYCLES+0x7e821>
   10450:	00000076 	andeq	r0, r0, r6, ror r0
   10454:	01cc2303 	biceq	r2, ip, r3, lsl #6
   10458:	00048108 	andeq	r8, r4, r8, lsl #2
   1045c:	02780300 	rsbseq	r0, r8, #0, 6
   10460:	0000a819 	andeq	sl, r0, r9, lsl r8
   10464:	d0230300 	eorle	r0, r3, r0, lsl #6
   10468:	056d0801 	strbeq	r0, [sp, #-2049]!	; 0xfffff7ff
   1046c:	7d030000 	stcvc	0, cr0, [r3, #-0]
   10470:	00a81902 	adceq	r1, r8, r2, lsl #18
   10474:	23030000 	movwcs	r0, #12288	; 0x3000
   10478:	0b0001d4 	bleq	10bd0 <_Min_Stack_Size+0xfbd0>
   1047c:	00016904 	andeq	r6, r1, r4, lsl #18
   10480:	a5010900 	strge	r0, [r1, #-2304]	; 0xfffff700
   10484:	0a000004 	beq	1049c <_Min_Stack_Size+0xf49c>
   10488:	0000048e 	andeq	r0, r0, lr, lsl #9
   1048c:	0000a80a 	andeq	sl, r0, sl, lsl #16
   10490:	040b0000 	streq	r0, [fp], #-0
   10494:	00000494 	muleq	r0, r4, r4
   10498:	0007b307 	andeq	fp, r7, r7, lsl #6
   1049c:	7e033400 	cfcpysvc	mvf3, mvf3
   104a0:	058a1003 	streq	r1, [sl, #3]
   104a4:	8d080000 	stchi	0, cr0, [r8, #-0]
   104a8:	03000001 	movweq	r0, #1
   104ac:	a8190382 	ldmdage	r9, {r1, r7, r8, r9}
   104b0:	02000000 	andeq	r0, r0, #0
   104b4:	97080023 	strls	r0, [r8, -r3, lsr #32]
   104b8:	03000008 	movweq	r0, #8
   104bc:	631a0385 	tstvs	sl, #335544322	; 0x14000002
   104c0:	02000001 	andeq	r0, r0, #1
   104c4:	fc080423 	stc2	4, cr0, [r8], {35}	; 0x23
   104c8:	03000006 	movweq	r0, #6
   104cc:	97190388 	ldrls	r0, [r9, -r8, lsl #7]
   104d0:	02000000 	andeq	r0, r0, #0
   104d4:	cb080823 	blgt	212568 <__RAM_SIZE+0x112568>
   104d8:	03000004 	movweq	r0, #4
   104dc:	951a038c 	ldrls	r0, [sl, #-908]	; 0xfffffc74
   104e0:	02000006 	andeq	r0, r0, #6
   104e4:	62080c23 	andvs	r0, r8, #8960	; 0x2300
   104e8:	03000001 	movweq	r0, #1
   104ec:	97190390 			; <UNDEFINED> instruction: 0x97190390
   104f0:	02000000 	andeq	r0, r0, #0
   104f4:	21081023 	tstcs	r8, r3, lsr #32
   104f8:	03000001 	movweq	r0, #1
   104fc:	97190393 			; <UNDEFINED> instruction: 0x97190393
   10500:	02000000 	andeq	r0, r0, #0
   10504:	cd081423 	cfstrsgt	mvf1, [r8, #-140]	; 0xffffff74
   10508:	03000008 	movweq	r0, #8
   1050c:	8e1a0398 	mrchi	3, 0, r0, cr10, cr8, {4}
   10510:	02000004 	andeq	r0, r0, #4
   10514:	e3081823 	movw	r1, #34851	; 0x8823
   10518:	03000006 	movweq	r0, #6
   1051c:	97190399 			; <UNDEFINED> instruction: 0x97190399
   10520:	02000000 	andeq	r0, r0, #0
   10524:	d3081c23 	movwle	r1, #35875	; 0x8c23
   10528:	03000005 	movweq	r0, #5
   1052c:	8a1a039d 	bhi	6913a8 <__RAM_SIZE+0x5913a8>
   10530:	02000005 	andeq	r0, r0, #5
   10534:	a0082023 	andge	r2, r8, r3, lsr #32
   10538:	03000006 	movweq	r0, #6
   1053c:	8a1a039e 	bhi	6913bc <__RAM_SIZE+0x5913bc>
   10540:	02000005 	andeq	r0, r0, #5
   10544:	d0082423 	andle	r2, r8, r3, lsr #8
   10548:	03000001 	movweq	r0, #1
   1054c:	971903a2 	ldrls	r0, [r9, -r2, lsr #7]
   10550:	02000000 	andeq	r0, r0, #0
   10554:	e0082823 	and	r2, r8, r3, lsr #16
   10558:	03000009 	movweq	r0, #9
   1055c:	8a1a03a6 	bhi	6913fc <__RAM_SIZE+0x5913fc>
   10560:	02000005 	andeq	r0, r0, #5
   10564:	25082c23 	strcs	r2, [r8, #-3107]	; 0xfffff3dd
   10568:	03000004 	movweq	r0, #4
   1056c:	8a1a03a7 	bhi	691410 <__RAM_SIZE+0x591410>
   10570:	02000005 	andeq	r0, r0, #5
   10574:	0b003023 	bleq	1c608 <_Min_Stack_Size+0x1b608>
   10578:	0004ab04 	andeq	sl, r4, r4, lsl #22
   1057c:	08ef0c00 	stmiaeq	pc!, {sl, fp}^	; <UNPREDICTABLE>
   10580:	86030000 	strhi	r0, [r3], -r0
   10584:	01690302 	cmneq	r9, r2, lsl #6
   10588:	040b0000 	streq	r0, [fp], #-0
   1058c:	0000008b 	andeq	r0, r0, fp, lsl #1
   10590:	00046007 	andeq	r6, r4, r7
   10594:	d9033400 	stmdble	r3, {sl, ip, sp}
   10598:	06821002 	streq	r1, [r2], r2
   1059c:	01080000 	mrseq	r0, (UNDEF: 8)
   105a0:	03000004 	movweq	r0, #4
   105a4:	a81902dd 	ldmdage	r9, {r0, r2, r3, r4, r6, r7, r9}
   105a8:	02000000 	andeq	r0, r0, #0
   105ac:	74080023 	strvc	r0, [r8], #-35	; 0xffffffdd
   105b0:	03000003 	movweq	r0, #3
   105b4:	631a02e0 	tstvs	sl, #224, 4
   105b8:	02000001 	andeq	r0, r0, #1
   105bc:	70080423 	andvc	r0, r8, r3, lsr #8
   105c0:	03000007 	movweq	r0, #7
   105c4:	a81902e3 	ldmdage	r9, {r0, r1, r5, r6, r7, r9}
   105c8:	02000000 	andeq	r0, r0, #0
   105cc:	b6080823 	strlt	r0, [r8], -r3, lsr #16
   105d0:	03000008 	movweq	r0, #8
   105d4:	971902e6 	ldrls	r0, [r9, -r6, ror #5]
   105d8:	02000000 	andeq	r0, r0, #0
   105dc:	0b080c23 	bleq	213670 <__RAM_SIZE+0x113670>
   105e0:	03000008 	movweq	r0, #8
   105e4:	9d1a02e9 	lfmls	f0, 4, [sl, #-932]	; 0xfffffc5c
   105e8:	02000005 	andeq	r0, r0, #5
   105ec:	13081023 	movwne	r1, #32803	; 0x8023
   105f0:	03000011 	movweq	r0, #17
   105f4:	9d1a02ed 	lfmls	f0, 4, [sl, #-948]	; 0xfffffc4c
   105f8:	02000005 	andeq	r0, r0, #5
   105fc:	28081423 	stmdacs	r8, {r0, r1, r5, sl, ip}
   10600:	03000005 	movweq	r0, #5
   10604:	9d1a02f0 	lfmls	f0, 4, [sl, #-960]	; 0xfffffc40
   10608:	02000005 	andeq	r0, r0, #5
   1060c:	06081823 	streq	r1, [r8], -r3, lsr #16
   10610:	03000003 	movweq	r0, #3
   10614:	a81902f3 	ldmdage	r9, {r0, r1, r4, r5, r6, r7, r9}
   10618:	02000000 	andeq	r0, r0, #0
   1061c:	8d081c23 	stchi	12, cr1, [r8, #-140]	; 0xffffff74
   10620:	03000009 	movweq	r0, #9
   10624:	8e1a02f9 	mrchi	2, 0, r0, cr10, cr9, {7}
   10628:	02000004 	andeq	r0, r0, #4
   1062c:	ae082023 	cdpge	0, 0, cr2, cr8, cr3, {1}
   10630:	03000004 	movweq	r0, #4
   10634:	8e1a02fe 	mrchi	2, 0, r0, cr10, cr14, {7}
   10638:	02000004 	andeq	r0, r0, #4
   1063c:	0b082423 	bleq	2196d0 <__RAM_SIZE+0x1196d0>
   10640:	03000005 	movweq	r0, #5
   10644:	971902ff 			; <UNDEFINED> instruction: 0x971902ff
   10648:	02000000 	andeq	r0, r0, #0
   1064c:	a7082823 	strge	r2, [r8, -r3, lsr #16]
   10650:	03000002 	movweq	r0, #2
   10654:	821a0303 	andshi	r0, sl, #201326592	; 0xc000000
   10658:	02000006 	andeq	r0, r0, #6
   1065c:	79082c23 	stmdbvc	r8, {r0, r1, r5, sl, fp, sp}
   10660:	03000008 	movweq	r0, #8
   10664:	821a0304 	andshi	r0, sl, #4, 6	; 0x10000000
   10668:	02000006 	andeq	r0, r0, #6
   1066c:	0b003023 	bleq	1c700 <_Min_Stack_Size+0x1b700>
   10670:	0005a304 	andeq	sl, r5, r4, lsl #6
   10674:	04740c00 	ldrbteq	r0, [r4], #-3072	; 0xfffff400
   10678:	23030000 	movwcs	r0, #12288	; 0x3000
   1067c:	05a30303 	streq	r0, [r3, #771]!	; 0x303
   10680:	040b0000 	streq	r0, [fp], #-0
   10684:	00000590 	muleq	r0, r0, r5
   10688:	0011270d 	andseq	r2, r1, sp, lsl #14
   1068c:	01390400 	teqeq	r9, r0, lsl #8
   10690:	00069521 	andeq	r9, r6, r1, lsr #10
   10694:	0d010100 	stfeqs	f0, [r1, #-0]
   10698:	000018f4 	strdeq	r1, [r0], -r4
   1069c:	21015304 	tstcs	r1, r4, lsl #6
   106a0:	000000b4 	strheq	r0, [r0], -r4
   106a4:	3e0d0101 	adfcce	f0, f5, f1
   106a8:	04000011 	streq	r0, [r0], #-17	; 0xffffffef
   106ac:	a321018e 			; <UNDEFINED> instruction: 0xa321018e
   106b0:	01000000 	mrseq	r0, (UNDEF: 0)
   106b4:	1e9b0e01 	cdpne	14, 9, cr0, cr11, cr1, {0}
   106b8:	8f050000 	svchi	0x00050000
   106bc:	00059021 	andeq	r9, r5, r1, lsr #32
   106c0:	0e010100 	adfeqs	f0, f1, f0
   106c4:	000011ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   106c8:	e4257b06 	strt	r7, [r5], #-2822	; 0xfffff4fa
   106cc:	01000006 	tsteq	r0, r6
   106d0:	88040b01 	stmdahi	r4, {r0, r8, r9, fp}
   106d4:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
   106d8:	0000123f 	andeq	r1, r0, pc, lsr r2
   106dc:	a8258006 	stmdage	r5!, {r1, r2, pc}
   106e0:	01000000 	mrseq	r0, (UNDEF: 0)
   106e4:	9b010f01 	blls	542f0 <SYSTICK_CYCLES+0x2b2b1>
   106e8:	01000005 	tsteq	r0, r5
   106ec:	97010753 	smlsdls	r1, r3, r7, r0
   106f0:	a4000000 	strge	r0, [r0], #-0
   106f4:	7810002c 	ldmdavc	r0, {r2, r3, r5}
   106f8:	9010002d 	andsls	r0, r0, sp, lsr #32
   106fc:	01000058 	qaddeq	r0, r8, r0
   10700:	0000093b 	andeq	r0, r0, fp, lsr r9
   10704:	000efd10 	andeq	pc, lr, r0, lsl sp	; <UNPREDICTABLE>
   10708:	2b530100 	blcs	14d0b10 <__RAM_SIZE+0x13d0b10>
   1070c:	000006e4 	andeq	r0, r0, r4, ror #13
   10710:	000058d6 	ldrdeq	r5, [r0], -r6
   10714:	000058c8 	andeq	r5, r0, r8, asr #17
   10718:	00122c10 	andseq	r2, r2, r0, lsl ip
   1071c:	3b530100 	blcc	14d0b24 <__RAM_SIZE+0x13d0b24>
   10720:	00000163 	andeq	r0, r0, r3, ror #2
   10724:	0000593a 	andeq	r5, r0, sl, lsr r9
   10728:	0000592e 	andeq	r5, r0, lr, lsr #18
   1072c:	00053010 	andeq	r3, r5, r0, lsl r0
   10730:	4b530100 	blmi	14d0b38 <__RAM_SIZE+0x13d0b38>
   10734:	00000076 	andeq	r0, r0, r6, ror r0
   10738:	00005990 	muleq	r0, r0, r9
   1073c:	00005984 	andeq	r5, r0, r4, lsl #19
   10740:	00030e10 	andeq	r0, r3, r0, lsl lr
   10744:	5d530100 	ldfple	f0, [r3, #-0]
   10748:	000000a8 	andeq	r0, r0, r8, lsr #1
   1074c:	000059e2 	andeq	r5, r0, r2, ror #19
   10750:	000059da 	ldrdeq	r5, [r0], -sl
   10754:	00270110 	eoreq	r0, r7, r0, lsl r1
   10758:	6d530100 	ldfvse	f0, [r3, #-0]
   1075c:	00000097 	muleq	r0, r7, r0
   10760:	00005a1a 	andeq	r5, r0, sl, lsl sl
   10764:	00005a16 	andeq	r5, r0, r6, lsl sl
   10768:	000eee11 	andeq	lr, lr, r1, lsl lr
   1076c:	01560100 	cmpeq	r6, r0, lsl #2
   10770:	00000097 	muleq	r0, r7, r0
   10774:	00005a3e 	andeq	r5, r0, lr, lsr sl
   10778:	00005a3a 	andeq	r5, r0, sl, lsr sl
   1077c:	0003fa11 	andeq	pc, r3, r1, lsl sl	; <UNPREDICTABLE>
   10780:	11580100 	cmpne	r8, r0, lsl #2
   10784:	00000097 	muleq	r0, r7, r0
   10788:	00005a6a 	andeq	r5, r0, sl, ror #20
   1078c:	00005a5c 	andeq	r5, r0, ip, asr sl
   10790:	01006912 	tsteq	r0, r2, lsl r9
   10794:	00a81159 	adceq	r1, r8, r9, asr r1
   10798:	5ac70000 	bpl	ff1d07a0 <__RAM_segment_used_end__+0xc70d07a0>
   1079c:	5ac30000 	bpl	ff0d07a4 <__RAM_segment_used_end__+0xc6fd07a4>
   107a0:	35110000 	ldrcc	r0, [r1, #-0]
   107a4:	01000012 	tsteq	r0, r2, lsl r0
   107a8:	06e4125a 	usateq	r1, #4, sl, asr #4
   107ac:	5aea0000 	bpl	ffa907b4 <__RAM_segment_used_end__+0xc79907b4>
   107b0:	5ae60000 	bpl	ff9907b8 <__RAM_segment_used_end__+0xc78907b8>
   107b4:	79110000 	ldmdbvc	r1, {}	; <UNPREDICTABLE>
   107b8:	01000019 	tsteq	r0, r9, lsl r0
   107bc:	0695125c 			; <UNDEFINED> instruction: 0x0695125c
   107c0:	5b0c0000 	blpl	3107c8 <__RAM_SIZE+0x2107c8>
   107c4:	5b080000 	blpl	2107cc <__RAM_SIZE+0x1107cc>
   107c8:	3b130000 	blcc	4d07d0 <__RAM_SIZE+0x3d07d0>
   107cc:	c0000009 	andgt	r0, r0, r9
   107d0:	0110002c 	tsteq	r0, ip, lsr #32
   107d4:	10002cc0 	andne	r2, r0, r0, asr #25
   107d8:	10002cc6 	andne	r2, r0, r6, asr #25
   107dc:	28097601 	stmdacs	r9, {r0, r9, sl, ip, sp, lr}
   107e0:	14000008 	strne	r0, [r0], #-8
   107e4:	0000094e 	andeq	r0, r0, lr, asr #18
   107e8:	00005b2c 	andeq	r5, r0, ip, lsr #22
   107ec:	00005b2a 	andeq	r5, r0, sl, lsr #22
   107f0:	00097915 	andeq	r7, r9, r5, lsl r9
   107f4:	002cc000 	eoreq	ip, ip, r0
   107f8:	2cc00410 	cfstrdcs	mvd0, [r0], {16}
   107fc:	2cc41000 	stclcs	0, cr1, [r4], {0}
   10800:	56021000 	strpl	r1, [r2], -r0
   10804:	8c141302 	ldchi	3, cr1, [r4], {2}
   10808:	41000009 	tstmi	r0, r9
   1080c:	3f00005b 	svccc	0x0000005b
   10810:	0000005b 	andeq	r0, r0, fp, asr r0
   10814:	095c1300 	ldmdbeq	ip, {r8, r9, ip}^
   10818:	2cce0000 	stclcs	0, cr0, [lr], {0}
   1081c:	ce011000 	cdpgt	0, 0, cr1, cr1, cr0, {0}
   10820:	d210002c 	andsle	r0, r0, #44	; 0x2c
   10824:	0110002c 	tsteq	r0, ip, lsr #32
   10828:	084f097c 	stmdaeq	pc, {r2, r3, r4, r5, r6, r8, fp}^	; <UNPREDICTABLE>
   1082c:	6b160000 	blvs	590834 <__RAM_SIZE+0x490834>
   10830:	56000009 	strpl	r0, [r0], -r9
   10834:	5400005b 	strpl	r0, [r0], #-91	; 0xffffffa5
   10838:	0000005b 	andeq	r0, r0, fp, asr r0
   1083c:	00093b13 	andeq	r3, r9, r3, lsl fp
   10840:	002cea00 	eoreq	lr, ip, r0, lsl #20
   10844:	2cea0110 	stfcse	f0, [sl], #64	; 0x40
   10848:	2cf01000 	ldclcs	0, cr1, [r0]
   1084c:	92011000 	andls	r1, r1, #0
   10850:	00089a09 	andeq	r9, r8, r9, lsl #20
   10854:	094e1400 	stmdbeq	lr, {sl, ip}^
   10858:	5b6b0000 	blpl	1ad0860 <__RAM_SIZE+0x19d0860>
   1085c:	5b690000 	blpl	1a50864 <__RAM_SIZE+0x1950864>
   10860:	79150000 	ldmdbvc	r5, {}	; <UNPREDICTABLE>
   10864:	ea000009 	b	10890 <_Min_Stack_Size+0xf890>
   10868:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
   1086c:	10002cea 	andne	r2, r0, sl, ror #25
   10870:	10002cee 	andne	r2, r0, lr, ror #25
   10874:	13025602 	movwne	r5, #9730	; 0x2602
   10878:	00098c14 	andeq	r8, r9, r4, lsl ip
   1087c:	005b8000 	subseq	r8, fp, r0
   10880:	005b7e00 	subseq	r7, fp, r0, lsl #28
   10884:	13000000 	movwne	r0, #0
   10888:	0000095c 	andeq	r0, r0, ip, asr r9
   1088c:	10002cf8 	strdne	r2, [r0], -r8
   10890:	002cf801 	eoreq	pc, ip, r1, lsl #16
   10894:	002cfc10 	eoreq	pc, ip, r0, lsl ip	; <UNPREDICTABLE>
   10898:	09980110 	ldmibeq	r8, {r4, r8}
   1089c:	000008c1 	andeq	r0, r0, r1, asr #17
   108a0:	00096b16 	andeq	r6, r9, r6, lsl fp
   108a4:	005b9500 	subseq	r9, fp, r0, lsl #10
   108a8:	005b9300 	subseq	r9, fp, r0, lsl #6
   108ac:	9a130000 	bls	4d08b4 <__RAM_SIZE+0x3d08b4>
   108b0:	18000009 	stmdane	r0, {r0, r3}
   108b4:	0110002d 	tsteq	r0, sp, lsr #32
   108b8:	10002d18 	andne	r2, r0, r8, lsl sp
   108bc:	10002d1c 	andne	r2, r0, ip, lsl sp
   108c0:	e811c601 	ldmda	r1, {r0, r9, sl, lr, pc}
   108c4:	14000008 	strne	r0, [r0], #-8
   108c8:	000009ad 	andeq	r0, r0, sp, lsr #19
   108cc:	00005baa 	andeq	r5, r0, sl, lsr #23
   108d0:	00005ba8 	andeq	r5, r0, r8, lsr #23
   108d4:	099a1300 	ldmibeq	sl, {r8, r9, ip}
   108d8:	2d240000 	stccs	0, cr0, [r4, #-0]
   108dc:	24011000 	strcs	r1, [r1], #-0
   108e0:	2810002d 	ldmdacs	r0, {r0, r2, r3, r5}
   108e4:	0110002d 	tsteq	r0, sp, lsr #32
   108e8:	090f15ca 	stmdbeq	pc, {r1, r3, r6, r7, r8, sl, ip}	; <UNPREDICTABLE>
   108ec:	ad140000 	ldcge	0, cr0, [r4, #-0]
   108f0:	bf000009 	svclt	0x00000009
   108f4:	bd00005b 	stclt	0, cr0, [r0, #-364]	; 0xfffffe94
   108f8:	0000005b 	andeq	r0, r0, fp, asr r0
   108fc:	002d0017 	eoreq	r0, sp, r7, lsl r0
   10900:	0009bb10 	andeq	fp, r9, r0, lsl fp
   10904:	2d441800 	stclcs	8, cr1, [r4, #-0]
   10908:	09ca1000 	stmibeq	sl, {ip}^
   1090c:	01190000 	tsteq	r9, r0
   10910:	00760250 	rsbseq	r0, r6, r0, asr r2
   10914:	02510119 	subseq	r0, r1, #1073741830	; 0x40000006
   10918:	01190079 	tsteq	r9, r9, ror r0
   1091c:	00770252 	rsbseq	r0, r7, r2, asr r2
   10920:	02530119 	subseq	r0, r3, #1073741830	; 0x40000006
   10924:	00000078 	andeq	r0, r0, r8, ror r0
   10928:	000f241a 	andeq	r2, pc, sl, lsl r4	; <UNPREDICTABLE>
   1092c:	02520200 	subseq	r0, r2, #0, 4
   10930:	00970137 	addseq	r0, r7, r7, lsr r1
   10934:	5c030000 	stcpl	0, cr0, [r3], {-0}
   10938:	1b000009 	blne	10964 <_Min_Stack_Size+0xf964>
   1093c:	00000ead 	andeq	r0, r0, sp, lsr #29
   10940:	06025402 	streq	r5, [r2], -r2, lsl #8
   10944:	00000097 	muleq	r0, r7, r0
   10948:	0e991c00 	cdpeq	12, 9, cr1, cr9, cr0, {0}
   1094c:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
   10950:	03013702 	movweq	r3, #5890	; 0x1702
   10954:	00000979 	andeq	r0, r0, r9, ror r9
   10958:	000ead1d 	andeq	sl, lr, sp, lsl sp
   1095c:	02490200 	subeq	r0, r9, #0, 4
   10960:	00009750 	andeq	r9, r0, r0, asr r7
   10964:	c21a0000 	andsgt	r0, sl, #0
   10968:	0200000e 	andeq	r0, r0, #14
   1096c:	01370232 	teqeq	r7, r2, lsr r2
   10970:	00000097 	muleq	r0, r7, r0
   10974:	00099a03 	andeq	r9, r9, r3, lsl #20
   10978:	0eb11b00 	vmoveq.f64	d1, #16	; 0x40800000  4.0
   1097c:	34020000 	strcc	r0, [r2], #-0
   10980:	00970602 	addseq	r0, r7, r2, lsl #12
   10984:	1a000000 	bne	1098c <_Min_Stack_Size+0xf98c>
   10988:	00001966 	andeq	r1, r0, r6, ror #18
   1098c:	3701fa02 	strcc	pc, [r1, -r2, lsl #20]
   10990:	00009701 	andeq	r9, r0, r1, lsl #14
   10994:	09bb0300 	ldmibeq	fp!, {r8, r9}
   10998:	aa1b0000 	bge	6d09a0 <__RAM_SIZE+0x5d09a0>
   1099c:	02000019 	andeq	r0, r0, #25
   109a0:	970601fc 			; <UNDEFINED> instruction: 0x970601fc
   109a4:	00000000 	andeq	r0, r0, r0
   109a8:	8d01011e 	stfhis	f0, [r1, #-120]	; 0xffffff88
   109ac:	8d00001f 	stchi	0, cr0, [r0, #-124]	; 0xffffff84
   109b0:	0400001f 	streq	r0, [r0], #-31	; 0xffffffe1
   109b4:	1e0d011c 	mcrne	1, 0, r0, cr13, cr12, {0}
   109b8:	125b0101 	subsne	r0, fp, #1073741824	; 0x40000000
   109bc:	125b0000 	subsne	r0, fp, #0
   109c0:	f3030000 	vhadd.u8	d0, d3, d0
   109c4:	c5000d05 	strgt	r0, [r0, #-3333]	; 0xfffff2fb
   109c8:	02000009 	andeq	r0, r0, #9
   109cc:	002f3b00 	eoreq	r3, pc, r0, lsl #22
   109d0:	3d010400 	cfstrscc	mvf0, [r1, #-0]
   109d4:	0c000000 	stceq	0, cr0, [r0], {-0}
   109d8:	00002779 	andeq	r2, r0, r9, ror r7
   109dc:	0000065c 	andeq	r0, r0, ip, asr r6
   109e0:	000004d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
   109ec:	00005c57 	andeq	r5, r0, r7, asr ip
   109f0:	39070402 	stmdbcc	r7, {r1, sl}
   109f4:	03000002 	movweq	r0, #2
   109f8:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
   109fc:	08020074 	stmdaeq	r2, {r2, r4, r5, r6}
   10a00:	0004e805 	andeq	lr, r4, r5, lsl #16
   10a04:	04080200 	streq	r0, [r8], #-512	; 0xfffffe00
   10a08:	0000063e 	andeq	r0, r0, lr, lsr r6
   10a0c:	6d060102 	stfvss	f0, [r6, #-8]
   10a10:	02000008 	andeq	r0, r0, #8
   10a14:	086b0801 	stmdaeq	fp!, {r0, fp}^
   10a18:	02020000 	andeq	r0, r2, #0
   10a1c:	0006cf05 	andeq	ip, r6, r5, lsl #30
   10a20:	07020200 	streq	r0, [r2, -r0, lsl #4]
   10a24:	00000939 	andeq	r0, r0, r9, lsr r9
   10a28:	ed050402 	cfstrs	mvf0, [r5, #-8]
   10a2c:	02000004 	andeq	r0, r0, #4
   10a30:	02340704 	eorseq	r0, r4, #4, 14	; 0x100000
   10a34:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
   10a38:	00022f07 	andeq	r2, r2, r7, lsl #30
   10a3c:	02040400 	andeq	r0, r4, #0, 8
   10a40:	08740801 	ldmdaeq	r4!, {r0, fp}^
   10a44:	fa050000 	blx	150a4c <__RAM_SIZE+0x50a4c>
   10a48:	02000008 	andeq	r0, r0, #8
   10a4c:	00783173 	rsbseq	r3, r8, r3, ror r1
   10a50:	f9050000 			; <UNDEFINED> instruction: 0xf9050000
   10a54:	02000008 	andeq	r0, r0, #8
   10a58:	004c3174 	subeq	r3, ip, r4, ror r1
   10a5c:	9a050000 	bls	150a64 <__RAM_SIZE+0x50a64>
   10a60:	02000007 	andeq	r0, r0, #7
   10a64:	00293176 	eoreq	r3, r9, r6, ror r1
   10a68:	97060000 	strls	r0, [r6, -r0]
   10a6c:	05000000 	streq	r0, [r0, #-0]
   10a70:	0000072c 	andeq	r0, r0, ip, lsr #14
   10a74:	68317802 	ldmdavs	r1!, {r1, fp, ip, sp, lr}
   10a78:	06000000 	streq	r0, [r0], -r0
   10a7c:	000000a8 	andeq	r0, r0, r8, lsr #1
   10a80:	00053b07 	andeq	r3, r5, r7, lsl #22
   10a84:	82031c00 	andhi	r1, r3, #0, 24
   10a88:	01381001 	teqeq	r8, r1
   10a8c:	2d080000 	stccs	0, cr0, [r8, #-0]
   10a90:	03000008 	movweq	r0, #8
   10a94:	a8190186 	ldmdage	r9, {r1, r2, r7, r8}
   10a98:	02000000 	andeq	r0, r0, #0
   10a9c:	a0080023 	andge	r0, r8, r3, lsr #32
   10aa0:	03000003 	movweq	r0, #3
   10aa4:	a8190187 	ldmdage	r9, {r0, r1, r2, r7, r8}
   10aa8:	02000000 	andeq	r0, r0, #0
   10aac:	3d080423 	cfstrscc	mvf0, [r8, #-140]	; 0xffffff74
   10ab0:	03000004 	movweq	r0, #4
   10ab4:	441b018a 	ldrmi	r0, [fp], #-394	; 0xfffffe76
   10ab8:	02000001 	andeq	r0, r0, #1
   10abc:	f2080823 	vadd.i8	d0, d8, d19
   10ac0:	03000001 	movweq	r0, #1
   10ac4:	a819018b 	ldmdage	r9, {r0, r1, r3, r7, r8}
   10ac8:	02000000 	andeq	r0, r0, #0
   10acc:	6f080c23 	svcvs	0x00080c23
   10ad0:	03000009 	movweq	r0, #9
   10ad4:	4a1a0191 	bmi	691120 <__RAM_SIZE+0x591120>
   10ad8:	02000001 	andeq	r0, r0, #1
   10adc:	1b081023 	blne	214b70 <__RAM_SIZE+0x114b70>
   10ae0:	03000000 	movweq	r0, #0
   10ae4:	4a1a0192 	bmi	691134 <__RAM_SIZE+0x591134>
   10ae8:	02000001 	andeq	r0, r0, #1
   10aec:	09081423 	stmdbeq	r8, {r0, r1, r5, sl, ip}
   10af0:	03000006 	movweq	r0, #6
   10af4:	501b0196 	mulspl	fp, r6, r1
   10af8:	02000001 	andeq	r0, r0, #1
   10afc:	09001823 	stmdbeq	r0, {r0, r1, r5, fp, ip}
   10b00:	00014401 	andeq	r4, r1, r1, lsl #8
   10b04:	00a80a00 	adceq	r0, r8, r0, lsl #20
   10b08:	0b000000 	bleq	10b10 <_Min_Stack_Size+0xfb10>
   10b0c:	00013804 	andeq	r3, r1, r4, lsl #16
   10b10:	b9040b00 	stmdblt	r4, {r8, r9, fp}
   10b14:	0b000000 	bleq	10b1c <_Min_Stack_Size+0xfb1c>
   10b18:	00014a04 	andeq	r4, r1, r4, lsl #20
   10b1c:	064a0c00 	strbeq	r0, [sl], -r0, lsl #24
   10b20:	9b030000 	blls	d0b28 <SYSTICK_CYCLES+0xa7ae9>
   10b24:	00b90301 	adcseq	r0, r9, r1, lsl #6
   10b28:	040b0000 	streq	r0, [fp], #-0
   10b2c:	0000007f 	andeq	r0, r0, pc, ror r0
   10b30:	00034b07 	andeq	r4, r3, r7, lsl #22
   10b34:	d603d800 	strle	sp, [r3], -r0, lsl #16
   10b38:	048e1001 	streq	r1, [lr], #1
   10b3c:	2c080000 	stccs	0, cr0, [r8], {-0}
   10b40:	03000009 	movweq	r0, #9
   10b44:	a81901dd 	ldmdage	r9, {r0, r2, r3, r4, r6, r7, r8}
   10b48:	02000000 	andeq	r0, r0, #0
   10b4c:	9f080023 	svcls	0x00080023
   10b50:	03000007 	movweq	r0, #7
   10b54:	a81901de 	ldmdage	r9, {r1, r2, r3, r4, r6, r7, r8}
   10b58:	02000000 	andeq	r0, r0, #0
   10b5c:	bc080423 	cfstrslt	mvf0, [r8], {35}	; 0x23
   10b60:	03000001 	movweq	r0, #1
   10b64:	761a01df 			; <UNDEFINED> instruction: 0x761a01df
   10b68:	02000000 	andeq	r0, r0, #0
   10b6c:	16080823 	strne	r0, [r8], -r3, lsr #16
   10b70:	03000009 	movweq	r0, #9
   10b74:	761a01e0 	ldrvc	r0, [sl], -r0, ror #3
   10b78:	02000000 	andeq	r0, r0, #0
   10b7c:	11080c23 	tstne	r8, r3, lsr #24
   10b80:	03000004 	movweq	r0, #4
   10b84:	761a01e1 	ldrvc	r0, [sl], -r1, ror #3
   10b88:	02000000 	andeq	r0, r0, #0
   10b8c:	5a081023 	bpl	214c20 <__RAM_SIZE+0x114c20>
   10b90:	03000009 	movweq	r0, #9
   10b94:	a81901e2 	ldmdage	r9, {r1, r5, r6, r7, r8}
   10b98:	02000000 	andeq	r0, r0, #0
   10b9c:	e2081423 	and	r1, r8, #587202560	; 0x23000000
   10ba0:	03000021 	movweq	r0, #33	; 0x21
   10ba4:	a81901e3 	ldmdage	r9, {r0, r1, r5, r6, r7, r8}
   10ba8:	02000000 	andeq	r0, r0, #0
   10bac:	25081823 	strcs	r1, [r8, #-2083]	; 0xfffff7dd
   10bb0:	03000006 	movweq	r0, #6
   10bb4:	a81901e4 	ldmdage	r9, {r2, r5, r6, r7, r8}
   10bb8:	02000000 	andeq	r0, r0, #0
   10bbc:	ba081c23 	blt	217c50 <__RAM_SIZE+0x117c50>
   10bc0:	03000006 	movweq	r0, #6
   10bc4:	8e1a01e8 	mufhi<illegal precision>z	f0, f2, #0.0
   10bc8:	02000004 	andeq	r0, r0, #4
   10bcc:	99082023 	stmdbls	r8, {r0, r1, r5, sp}
   10bd0:	03000001 	movweq	r0, #1
   10bd4:	8e1a01e9 	mufhi<illegal precision>z	f0, f2, #1.0
   10bd8:	02000004 	andeq	r0, r0, #4
   10bdc:	b1082423 	tstlt	r8, r3, lsr #8
   10be0:	03000005 	movweq	r0, #5
   10be4:	631a01f1 	tstvs	sl, #1073741884	; 0x4000003c
   10be8:	02000001 	andeq	r0, r0, #1
   10bec:	d9082823 	stmdble	r8, {r0, r1, r5, fp, sp}
   10bf0:	03000002 	movweq	r0, #2
   10bf4:	971901f2 			; <UNDEFINED> instruction: 0x971901f2
   10bf8:	02000000 	andeq	r0, r0, #0
   10bfc:	46082c23 	strmi	r2, [r8], -r3, lsr #24
   10c00:	03000002 	movweq	r0, #2
   10c04:	971901f3 			; <UNDEFINED> instruction: 0x971901f3
   10c08:	02000000 	andeq	r0, r0, #0
   10c0c:	73083023 	movwvc	r3, #32803	; 0x8023
   10c10:	03000001 	movweq	r0, #1
   10c14:	971901f4 			; <UNDEFINED> instruction: 0x971901f4
   10c18:	02000000 	andeq	r0, r0, #0
   10c1c:	4b083423 	blmi	21dcb0 <__RAM_SIZE+0x11dcb0>
   10c20:	03000007 	movweq	r0, #7
   10c24:	971901f5 			; <UNDEFINED> instruction: 0x971901f5
   10c28:	02000000 	andeq	r0, r0, #0
   10c2c:	eb083823 	bl	21ecc0 <__RAM_SIZE+0x11ecc0>
   10c30:	03000000 	movweq	r0, #0
   10c34:	971901f6 			; <UNDEFINED> instruction: 0x971901f6
   10c38:	02000000 	andeq	r0, r0, #0
   10c3c:	5c083c23 	stcpl	12, cr3, [r8], {35}	; 0x23
   10c40:	03000003 	movweq	r0, #3
   10c44:	a51b01fb 	ldrge	r0, [fp, #-507]	; 0xfffffe05
   10c48:	02000004 	andeq	r0, r0, #4
   10c4c:	52084023 	andpl	r4, r8, #35	; 0x23
   10c50:	03000001 	movweq	r0, #1
   10c54:	441b0203 	ldrmi	r0, [fp], #-515	; 0xfffffdfd
   10c58:	02000001 	andeq	r0, r0, #1
   10c5c:	07084423 	streq	r4, [r8, -r3, lsr #8]
   10c60:	03000001 	movweq	r0, #1
   10c64:	a8190204 	ldmdage	r9, {r2, r9}
   10c68:	02000000 	andeq	r0, r0, #0
   10c6c:	3b084823 	blcc	222d00 <__RAM_SIZE+0x122d00>
   10c70:	03000003 	movweq	r0, #3
   10c74:	56190208 	ldrpl	r0, [r9], -r8, lsl #4
   10c78:	02000001 	andeq	r0, r0, #1
   10c7c:	ec084c23 	stc	12, cr4, [r8], {35}	; 0x23
   10c80:	03000002 	movweq	r0, #2
   10c84:	a51b020e 	ldrge	r0, [fp, #-526]	; 0xfffffdf2
   10c88:	02000004 	andeq	r0, r0, #4
   10c8c:	e9086823 	stmdb	r8, {r0, r1, r5, fp, sp, lr}
   10c90:	03000005 	movweq	r0, #5
   10c94:	761a020f 	ldrvc	r0, [sl], -pc, lsl #4
   10c98:	02000000 	andeq	r0, r0, #0
   10c9c:	32086c23 	andcc	r6, r8, #8960	; 0x2300
   10ca0:	03000007 	movweq	r0, #7
   10ca4:	8e1a0211 	mrchi	2, 0, r0, cr10, cr1, {0}
   10ca8:	02000004 	andeq	r0, r0, #4
   10cac:	12087023 	andne	r7, r8, #35	; 0x23
   10cb0:	03000002 	movweq	r0, #2
   10cb4:	8e1a0212 	mrchi	2, 0, r0, cr10, cr2, {0}
   10cb8:	02000004 	andeq	r0, r0, #4
   10cbc:	15087423 	strne	r7, [r8, #-1059]	; 0xfffffbdd
   10cc0:	03000007 	movweq	r0, #7
   10cc4:	a8190213 	ldmdage	r9, {r0, r1, r4, r9}
   10cc8:	02000000 	andeq	r0, r0, #0
   10ccc:	c6087823 	strgt	r7, [r8], -r3, lsr #16
   10cd0:	03000003 	movweq	r0, #3
   10cd4:	761a0214 			; <UNDEFINED> instruction: 0x761a0214
   10cd8:	02000000 	andeq	r0, r0, #0
   10cdc:	54087c23 	strpl	r7, [r8], #-3107	; 0xfffff3dd
   10ce0:	03000005 	movweq	r0, #5
   10ce4:	97190215 			; <UNDEFINED> instruction: 0x97190215
   10ce8:	03000000 	movweq	r0, #0
   10cec:	08018023 	stmdaeq	r1, {r0, r1, r5, pc}
   10cf0:	000003e8 	andeq	r0, r0, r8, ror #7
   10cf4:	19021603 	stmdbne	r2, {r0, r1, r9, sl, ip}
   10cf8:	00000097 	muleq	r0, r7, r0
   10cfc:	01842303 	orreq	r2, r4, r3, lsl #6
   10d00:	0008ff08 	andeq	pc, r8, r8, lsl #30
   10d04:	021f0300 	andseq	r0, pc, #0, 6
   10d08:	00048e1a 	andeq	r8, r4, sl, lsl lr
   10d0c:	88230300 	stmdahi	r3!, {r8, r9}
   10d10:	07f00801 	ldrbeq	r0, [r0, r1, lsl #16]!
   10d14:	20030000 	andcs	r0, r3, r0
   10d18:	048e1a02 	streq	r1, [lr], #2562	; 0xa02
   10d1c:	23030000 	movwcs	r0, #12288	; 0x3000
   10d20:	c108018c 	smlabbgt	r8, ip, r1, r0
   10d24:	03000002 	movweq	r0, #2
   10d28:	9719022e 	ldrls	r0, [r9, -lr, lsr #4]
   10d2c:	03000000 	movweq	r0, #0
   10d30:	08019023 	stmdaeq	r1, {r0, r1, r5, ip, pc}
   10d34:	00000256 	andeq	r0, r0, r6, asr r2
   10d38:	19022f03 	stmdbne	r2, {r0, r1, r8, r9, sl, fp, sp}
   10d3c:	00000097 	muleq	r0, r7, r0
   10d40:	01942303 	orrseq	r2, r4, r3, lsl #6
   10d44:	00032008 	andeq	r2, r3, r8
   10d48:	02300300 	eorseq	r0, r0, #0, 6
   10d4c:	00009719 	andeq	r9, r0, r9, lsl r7
   10d50:	98230300 	stmdals	r3!, {r8, r9}
   10d54:	02770801 	rsbseq	r0, r7, #65536	; 0x10000
   10d58:	33030000 	movwcc	r0, #12288	; 0x3000
   10d5c:	00971902 	addseq	r1, r7, r2, lsl #18
   10d60:	23030000 	movwcs	r0, #12288	; 0x3000
   10d64:	0008019c 	muleq	r8, ip, r1
   10d68:	03000000 	movweq	r0, #0
   10d6c:	8a1a0235 	bhi	691648 <__RAM_SIZE+0x591648>
   10d70:	03000005 	movweq	r0, #5
   10d74:	0801a023 	stmdaeq	r1, {r0, r1, r5, sp, pc}
   10d78:	00001bc8 	andeq	r1, r0, r8, asr #23
   10d7c:	19023a03 	stmdbne	r2, {r0, r1, r9, fp, ip, sp}
   10d80:	000000a8 	andeq	r0, r0, r8, lsr #1
   10d84:	01a42303 			; <UNDEFINED> instruction: 0x01a42303
   10d88:	001c8808 	andseq	r8, ip, r8, lsl #16
   10d8c:	023d0300 	eorseq	r0, sp, #0, 6
   10d90:	0000a819 	andeq	sl, r0, r9, lsl r8
   10d94:	a8230300 	stmdage	r3!, {r8, r9}
   10d98:	1b410801 	blne	1052da4 <__RAM_SIZE+0xf52da4>
   10d9c:	41030000 	mrsmi	r0, (UNDEF: 3)
   10da0:	00a81902 	adceq	r1, r8, r2, lsl #18
   10da4:	23030000 	movwcs	r0, #12288	; 0x3000
   10da8:	3f0801ac 	svccc	0x000801ac
   10dac:	0300001d 	movweq	r0, #29
   10db0:	a8190245 	ldmdage	r9, {r0, r2, r6, r9}
   10db4:	03000000 	movweq	r0, #0
   10db8:	0801b023 	stmdaeq	r1, {r0, r1, r5, ip, sp, pc}
   10dbc:	00001c58 	andeq	r1, r0, r8, asr ip
   10dc0:	19024803 	stmdbne	r2, {r0, r1, fp, lr}
   10dc4:	000000a8 	andeq	r0, r0, r8, lsr #1
   10dc8:	01b42303 			; <UNDEFINED> instruction: 0x01b42303
   10dcc:	0007c308 	andeq	ip, r7, r8, lsl #6
   10dd0:	024c0300 	subeq	r0, ip, #0, 6
   10dd4:	00048e1a 	andeq	r8, r4, sl, lsl lr
   10dd8:	b8230300 	stmdalt	r3!, {r8, r9}
   10ddc:	1d170801 	ldcne	8, cr0, [r7, #-4]
   10de0:	4f030000 	svcmi	0x00030000
   10de4:	00a81902 	adceq	r1, r8, r2, lsl #18
   10de8:	23030000 	movwcs	r0, #12288	; 0x3000
   10dec:	190801bc 	stmdbne	r8, {r2, r3, r4, r5, r7, r8}
   10df0:	0300001b 	movweq	r0, #27
   10df4:	a8190252 	ldmdage	r9, {r1, r4, r6, r9}
   10df8:	03000000 	movweq	r0, #0
   10dfc:	0801c023 	stmdaeq	r1, {r0, r1, r5, lr, pc}
   10e00:	00001a96 	muleq	r0, r6, sl
   10e04:	19025503 	stmdbne	r2, {r0, r1, r8, sl, ip, lr}
   10e08:	000000a8 	andeq	r0, r0, r8, lsr #1
   10e0c:	01c42303 	biceq	r2, r4, r3, lsl #6
   10e10:	001bec08 	andseq	lr, fp, r8, lsl #24
   10e14:	02590300 	subseq	r0, r9, #0, 6
   10e18:	0000a819 	andeq	sl, r0, r9, lsl r8
   10e1c:	c8230300 	stmdagt	r3!, {r8, r9}
   10e20:	09c40801 	stmibeq	r4, {r0, fp}^
   10e24:	5d030000 	stcpl	0, cr0, [r3, #-0]
   10e28:	00761a02 	rsbseq	r1, r6, r2, lsl #20
   10e2c:	23030000 	movwcs	r0, #12288	; 0x3000
   10e30:	810801cc 	smlabthi	r8, ip, r1, r0
   10e34:	03000004 	movweq	r0, #4
   10e38:	a8190278 	ldmdage	r9, {r3, r4, r5, r6, r9}
   10e3c:	03000000 	movweq	r0, #0
   10e40:	0801d023 	stmdaeq	r1, {r0, r1, r5, ip, lr, pc}
   10e44:	0000056d 	andeq	r0, r0, sp, ror #10
   10e48:	19027d03 	stmdbne	r2, {r0, r1, r8, sl, fp, ip, sp, lr}
   10e4c:	000000a8 	andeq	r0, r0, r8, lsr #1
   10e50:	01d42303 	bicseq	r2, r4, r3, lsl #6
   10e54:	69040b00 	stmdbvs	r4, {r8, r9, fp}
   10e58:	09000001 	stmdbeq	r0, {r0}
   10e5c:	0004a501 	andeq	sl, r4, r1, lsl #10
   10e60:	048e0a00 	streq	r0, [lr], #2560	; 0xa00
   10e64:	a80a0000 	stmdage	sl, {}	; <UNPREDICTABLE>
   10e68:	00000000 	andeq	r0, r0, r0
   10e6c:	0494040b 	ldreq	r0, [r4], #1035	; 0x40b
   10e70:	b3070000 	movwlt	r0, #28672	; 0x7000
   10e74:	34000007 	strcc	r0, [r0], #-7
   10e78:	10037e03 	andne	r7, r3, r3, lsl #28
   10e7c:	0000058a 	andeq	r0, r0, sl, lsl #11
   10e80:	00018d08 	andeq	r8, r1, r8, lsl #26
   10e84:	03820300 	orreq	r0, r2, #0, 6
   10e88:	0000a819 	andeq	sl, r0, r9, lsl r8
   10e8c:	00230200 	eoreq	r0, r3, r0, lsl #4
   10e90:	00089708 	andeq	r9, r8, r8, lsl #14
   10e94:	03850300 	orreq	r0, r5, #0, 6
   10e98:	0001631a 	andeq	r6, r1, sl, lsl r3
   10e9c:	04230200 	strteq	r0, [r3], #-512	; 0xfffffe00
   10ea0:	0006fc08 	andeq	pc, r6, r8, lsl #24
   10ea4:	03880300 	orreq	r0, r8, #0, 6
   10ea8:	00009719 	andeq	r9, r0, r9, lsl r7
   10eac:	08230200 	stmdaeq	r3!, {r9}
   10eb0:	0004cb08 	andeq	ip, r4, r8, lsl #22
   10eb4:	038c0300 	orreq	r0, ip, #0, 6
   10eb8:	0005a31a 	andeq	sl, r5, sl, lsl r3
   10ebc:	0c230200 	sfmeq	f0, 4, [r3], #-0
   10ec0:	00016208 	andeq	r6, r1, r8, lsl #4
   10ec4:	03900300 	orrseq	r0, r0, #0, 6
   10ec8:	00009719 	andeq	r9, r0, r9, lsl r7
   10ecc:	10230200 	eorne	r0, r3, r0, lsl #4
   10ed0:	00012108 	andeq	r2, r1, r8, lsl #2
   10ed4:	03930300 	orrseq	r0, r3, #0, 6
   10ed8:	00009719 	andeq	r9, r0, r9, lsl r7
   10edc:	14230200 	strtne	r0, [r3], #-512	; 0xfffffe00
   10ee0:	0008cd08 	andeq	ip, r8, r8, lsl #26
   10ee4:	03980300 	orrseq	r0, r8, #0, 6
   10ee8:	00048e1a 	andeq	r8, r4, sl, lsl lr
   10eec:	18230200 	stmdane	r3!, {r9}
   10ef0:	0006e308 	andeq	lr, r6, r8, lsl #6
   10ef4:	03990300 	orrseq	r0, r9, #0, 6
   10ef8:	00009719 	andeq	r9, r0, r9, lsl r7
   10efc:	1c230200 	sfmne	f0, 4, [r3], #-0
   10f00:	0005d308 	andeq	sp, r5, r8, lsl #6
   10f04:	039d0300 	orrseq	r0, sp, #0, 6
   10f08:	00058a1a 	andeq	r8, r5, sl, lsl sl
   10f0c:	20230200 	eorcs	r0, r3, r0, lsl #4
   10f10:	0006a008 	andeq	sl, r6, r8
   10f14:	039e0300 	orrseq	r0, lr, #0, 6
   10f18:	00058a1a 	andeq	r8, r5, sl, lsl sl
   10f1c:	24230200 	strtcs	r0, [r3], #-512	; 0xfffffe00
   10f20:	0001d008 	andeq	sp, r1, r8
   10f24:	03a20300 			; <UNDEFINED> instruction: 0x03a20300
   10f28:	00009719 	andeq	r9, r0, r9, lsl r7
   10f2c:	28230200 	stmdacs	r3!, {r9}
   10f30:	0009e008 	andeq	lr, r9, r8
   10f34:	03a60300 			; <UNDEFINED> instruction: 0x03a60300
   10f38:	00058a1a 	andeq	r8, r5, sl, lsl sl
   10f3c:	2c230200 	sfmcs	f0, 4, [r3], #-0
   10f40:	00042508 	andeq	r2, r4, r8, lsl #10
   10f44:	03a70300 			; <UNDEFINED> instruction: 0x03a70300
   10f48:	00058a1a 	andeq	r8, r5, sl, lsl sl
   10f4c:	30230200 	eorcc	r0, r3, r0, lsl #4
   10f50:	ab040b00 	blge	113b58 <__RAM_SIZE+0x13b58>
   10f54:	0c000004 	stceq	0, cr0, [r0], {4}
   10f58:	000008ef 	andeq	r0, r0, pc, ror #17
   10f5c:	03028603 	movweq	r8, #9731	; 0x2603
   10f60:	00000169 	andeq	r0, r0, r9, ror #2
   10f64:	008b040b 	addeq	r0, fp, fp, lsl #8
   10f68:	040b0000 	streq	r0, [fp], #-0
   10f6c:	00000590 	muleq	r0, r0, r5
   10f70:	0011270d 	andseq	r2, r1, sp, lsl #14
   10f74:	01390400 	teqeq	r9, r0, lsl #8
   10f78:	0005a321 	andeq	sl, r5, r1, lsr #6
   10f7c:	0d010100 	stfeqs	f0, [r1, #-0]
   10f80:	00001a25 	andeq	r1, r0, r5, lsr #20
   10f84:	21014504 	tstcs	r1, r4, lsl #10
   10f88:	000005a3 	andeq	r0, r0, r3, lsr #11
   10f8c:	0c0d0101 	stfeqs	f0, [sp], {1}
   10f90:	0400001a 	streq	r0, [r0], #-26	; 0xffffffe6
   10f94:	a821014a 	stmdage	r1!, {r1, r3, r6, r8}
   10f98:	01000000 	mrseq	r0, (UNDEF: 0)
   10f9c:	18f40d01 	ldmne	r4!, {r0, r8, sl, fp}^
   10fa0:	53040000 	movwpl	r0, #16384	; 0x4000
   10fa4:	00b42101 	adcseq	r2, r4, r1, lsl #2
   10fa8:	01010000 	mrseq	r0, (UNDEF: 1)
   10fac:	00113e0d 	andseq	r3, r1, sp, lsl #28
   10fb0:	018e0400 	orreq	r0, lr, r0, lsl #8
   10fb4:	0000a321 	andeq	sl, r0, r1, lsr #6
   10fb8:	0e010100 	adfeqs	f0, f1, f0
   10fbc:	00001e9b 	muleq	r0, fp, lr
   10fc0:	90218f05 	eorls	r8, r1, r5, lsl #30
   10fc4:	01000005 	tsteq	r0, r5
   10fc8:	c0010f01 	andgt	r0, r1, r1, lsl #30
   10fcc:	01000005 	tsteq	r0, r5
   10fd0:	97010959 	smlsdls	r1, r9, r9, r0
   10fd4:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
   10fd8:	c010002d 	andsgt	r0, r0, sp, lsr #32
   10fdc:	d210002e 	andsle	r0, r0, #46	; 0x2e
   10fe0:	0100005b 	qaddeq	r0, fp, r0
   10fe4:	0000092a 	andeq	r0, r0, sl, lsr #18
   10fe8:	00197910 	andseq	r7, r9, r0, lsl r9
   10fec:	27590100 	ldrbcs	r0, [r9, -r0, lsl #2]
   10ff0:	000005a3 	andeq	r0, r0, r3, lsr #11
   10ff4:	00005c24 	andeq	r5, r0, r4, lsr #24
   10ff8:	00005c16 	andeq	r5, r0, r6, lsl ip
   10ffc:	00122c10 	andseq	r2, r2, r0, lsl ip
   11000:	39590100 	ldmdbcc	r9, {r8}^
   11004:	00000163 	andeq	r0, r0, r3, ror #2
   11008:	00005c8b 	andeq	r5, r0, fp, lsl #25
   1100c:	00005c7f 	andeq	r5, r0, pc, ror ip
   11010:	0019ca10 	andseq	ip, r9, r0, lsl sl
   11014:	185a0100 	ldmdane	sl, {r8}^
   11018:	00000144 	andeq	r0, r0, r4, asr #2
   1101c:	00005ce4 	andeq	r5, r0, r4, ror #25
   11020:	00005cd8 	ldrdeq	r5, [r0], -r8
   11024:	001a0010 	andseq	r0, sl, r0, lsl r0
   11028:	395a0100 	ldmdbcc	sl, {r8}^
   1102c:	000000a8 	andeq	r0, r0, r8, lsr #1
   11030:	00005d3d 	andeq	r5, r0, sp, lsr sp
   11034:	00005d31 	andeq	r5, r0, r1, lsr sp
   11038:	00092010 	andeq	r2, r9, r0, lsl r0
   1103c:	175b0100 	ldrbne	r0, [fp, -r0, lsl #2]
   11040:	00000076 	andeq	r0, r0, r6, ror r0
   11044:	00005d96 	muleq	r0, r6, sp
   11048:	00005d8a 	andeq	r5, r0, sl, lsl #27
   1104c:	00096410 	andeq	r6, r9, r0, lsl r4
   11050:	2a5b0100 	bcs	16d1458 <__RAM_SIZE+0x15d1458>
   11054:	000000a8 	andeq	r0, r0, r8, lsr #1
   11058:	00005de7 	andeq	r5, r0, r7, ror #27
   1105c:	00005de3 	andeq	r5, r0, r3, ror #27
   11060:	0002e310 	andeq	lr, r2, r0, lsl r3
   11064:	165c0100 	ldrbne	r0, [ip], -r0, lsl #2
   11068:	00000097 	muleq	r0, r7, r0
   1106c:	00005e0b 	andeq	r5, r0, fp, lsl #28
   11070:	00005e07 	andeq	r5, r0, r7, lsl #28
   11074:	0000f510 	andeq	pc, r0, r0, lsl r5	; <UNPREDICTABLE>
   11078:	255c0100 	ldrbcs	r0, [ip, #-256]	; 0xffffff00
   1107c:	00000097 	muleq	r0, r7, r0
   11080:	00005e2f 	andeq	r5, r0, pc, lsr #28
   11084:	00005e2b 	andeq	r5, r0, fp, lsr #28
   11088:	0021ec10 	eoreq	lr, r1, r0, lsl ip
   1108c:	175d0100 	ldrbne	r0, [sp, -r0, lsl #2]
   11090:	000000a8 	andeq	r0, r0, r8, lsr #1
   11094:	00005e53 	andeq	r5, r0, r3, asr lr
   11098:	00005e4f 	andeq	r5, r0, pc, asr #28
   1109c:	001a8a10 	andseq	r8, sl, r0, lsl sl
   110a0:	285d0100 	ldmdacs	sp, {r8}^
   110a4:	00000097 	muleq	r0, r7, r0
   110a8:	00005e77 	andeq	r5, r0, r7, ror lr
   110ac:	00005e73 	andeq	r5, r0, r3, ror lr
   110b0:	00275410 	eoreq	r5, r7, r0, lsl r4
   110b4:	395d0100 	ldmdbcc	sp, {r8}^
   110b8:	00000097 	muleq	r0, r7, r0
   110bc:	00005e9b 	muleq	r0, fp, lr
   110c0:	00005e97 	muleq	r0, r7, lr
   110c4:	000eee11 	andeq	lr, lr, r1, lsl lr
   110c8:	01600100 	cmneq	r0, r0, lsl #2
   110cc:	00000097 	muleq	r0, r7, r0
   110d0:	00005ebf 			; <UNDEFINED> instruction: 0x00005ebf
   110d4:	00005ebb 			; <UNDEFINED> instruction: 0x00005ebb
   110d8:	0003fa11 	andeq	pc, r3, r1, lsl sl	; <UNPREDICTABLE>
   110dc:	11620100 	cmnne	r2, r0, lsl #2
   110e0:	00000097 	muleq	r0, r7, r0
   110e4:	00005eeb 	andeq	r5, r0, fp, ror #29
   110e8:	00005edd 	ldrdeq	r5, [r0], -sp
   110ec:	00276e11 	eoreq	r6, r7, r1, lsl lr
   110f0:	11630100 	cmnne	r3, r0, lsl #2
   110f4:	00000097 	muleq	r0, r7, r0
   110f8:	00005f4a 	andeq	r5, r0, sl, asr #30
   110fc:	00005f44 	andeq	r5, r0, r4, asr #30
   11100:	01006912 	tsteq	r0, r2, lsl r9
   11104:	00a81164 	adceq	r1, r8, r4, ror #2
   11108:	5f780000 	svcpl	0x00780000
   1110c:	5f740000 	svcpl	0x00740000
   11110:	07110000 	ldreq	r0, [r1, -r0]
   11114:	01000010 	tsteq	r0, r0, lsl r0
   11118:	05a31265 	streq	r1, [r3, #613]!	; 0x265
   1111c:	5f9b0000 	svcpl	0x009b0000
   11120:	5f970000 	svcpl	0x00970000
   11124:	1b110000 	blne	45112c <__RAM_SIZE+0x35112c>
   11128:	01000004 	tsteq	r0, r4
   1112c:	00761266 	rsbseq	r1, r6, r6, ror #4
   11130:	5fbf0000 	svcpl	0x00bf0000
   11134:	5fb90000 	svcpl	0x00b90000
   11138:	b9110000 	ldmdblt	r1, {}	; <UNPREDICTABLE>
   1113c:	0100000e 	tsteq	r0, lr
   11140:	059d1267 	ldreq	r1, [sp, #615]	; 0x267
   11144:	60020000 	andvs	r0, r2, r0
   11148:	5ffa0000 	svcpl	0x00fa0000
   1114c:	c1110000 	tstgt	r1, r0
   11150:	0100001f 	tsteq	r0, pc, lsl r0
   11154:	05a31269 	streq	r1, [r3, #617]!	; 0x269
   11158:	604c0000 	subvs	r0, ip, r0
   1115c:	60480000 	subvs	r0, r8, r0
   11160:	2a130000 	bcs	4d1168 <__RAM_SIZE+0x3d1168>
   11164:	9a000009 	bls	11190 <_Min_Stack_Size+0x10190>
   11168:	0110002d 	tsteq	r0, sp, lsr #32
   1116c:	10002d9a 	mulne	r0, sl, sp
   11170:	10002da0 	andne	r2, r0, r0, lsr #27
   11174:	e6098301 	str	r8, [r9], -r1, lsl #6
   11178:	14000007 	strne	r0, [r0], #-7
   1117c:	0000093d 	andeq	r0, r0, sp, lsr r9
   11180:	0000606c 	andeq	r6, r0, ip, rrx
   11184:	0000606a 	andeq	r6, r0, sl, rrx
   11188:	00096815 	andeq	r6, r9, r5, lsl r8
   1118c:	002d9a00 	eoreq	r9, sp, r0, lsl #20
   11190:	2d9a0410 	cfldrscs	mvf0, [sl, #64]	; 0x40
   11194:	2d9e1000 	ldccs	0, cr1, [lr]
   11198:	56021000 	strpl	r1, [r2], -r0
   1119c:	7b141302 	blvc	515dac <__RAM_SIZE+0x415dac>
   111a0:	81000009 	tsthi	r0, r9
   111a4:	7f000060 	svcvc	0x00000060
   111a8:	00000060 	andeq	r0, r0, r0, rrx
   111ac:	094b1300 	stmdbeq	fp, {r8, r9, ip}^
   111b0:	2da80000 	stccs	0, cr0, [r8]
   111b4:	a8011000 	stmdage	r1, {ip}
   111b8:	ac10002d 	ldcge	0, cr0, [r0], {45}	; 0x2d
   111bc:	0110002d 	tsteq	r0, sp, lsr #32
   111c0:	080d0989 	stmdaeq	sp, {r0, r3, r7, r8, fp}
   111c4:	5a160000 	bpl	5911cc <__RAM_SIZE+0x4911cc>
   111c8:	96000009 	strls	r0, [r0], -r9
   111cc:	94000060 	strls	r0, [r0], #-96	; 0xffffffa0
   111d0:	00000060 	andeq	r0, r0, r0, rrx
   111d4:	00092a13 	andeq	r2, r9, r3, lsl sl
   111d8:	002df000 	eoreq	pc, sp, r0
   111dc:	2df00110 	ldfcse	f0, [r0, #64]!	; 0x40
   111e0:	2df61000 	ldclcs	0, cr1, [r6]
   111e4:	c9011000 	stmdbgt	r1, {ip}
   111e8:	00085809 	andeq	r5, r8, r9, lsl #16
   111ec:	093d1400 	ldmdbeq	sp!, {sl, ip}
   111f0:	60ab0000 	adcvs	r0, fp, r0
   111f4:	60a90000 	adcvs	r0, r9, r0
   111f8:	68150000 	ldmdavs	r5, {}	; <UNPREDICTABLE>
   111fc:	f0000009 			; <UNDEFINED> instruction: 0xf0000009
   11200:	0410002d 	ldreq	r0, [r0], #-45	; 0xffffffd3
   11204:	10002df0 	strdne	r2, [r0], -r0
   11208:	10002df4 	strdne	r2, [r0], -r4
   1120c:	13025602 	movwne	r5, #9730	; 0x2602
   11210:	00097b14 	andeq	r7, r9, r4, lsl fp
   11214:	0060c000 	rsbeq	ip, r0, r0
   11218:	0060be00 	rsbeq	fp, r0, r0, lsl #28
   1121c:	13000000 	movwne	r0, #0
   11220:	0000094b 	andeq	r0, r0, fp, asr #18
   11224:	10002dfe 	strdne	r2, [r0], -lr
   11228:	002dfe01 	eoreq	pc, sp, r1, lsl #28
   1122c:	002e0210 	eoreq	r0, lr, r0, lsl r2
   11230:	09cf0110 	stmibeq	pc, {r4, r8}^	; <UNPREDICTABLE>
   11234:	0000087f 	andeq	r0, r0, pc, ror r8
   11238:	00095a16 	andeq	r5, r9, r6, lsl sl
   1123c:	0060d500 	rsbeq	sp, r0, r0, lsl #10
   11240:	0060d300 	rsbeq	sp, r0, r0, lsl #6
   11244:	89170000 	ldmdbhi	r7, {}	; <UNPREDICTABLE>
   11248:	3a000009 	bcc	11274 <_Min_Stack_Size+0x10274>
   1124c:	0110002e 	tsteq	r0, lr, lsr #32
   11250:	10002e3a 	andne	r2, r0, sl, lsr lr
   11254:	10002e3e 	andne	r2, r0, lr, lsr lr
   11258:	11011d01 	tstne	r1, r1, lsl #26
   1125c:	000008a7 	andeq	r0, r0, r7, lsr #17
   11260:	00099c14 	andeq	r9, r9, r4, lsl ip
   11264:	0060ea00 	rsbeq	lr, r0, r0, lsl #20
   11268:	0060e800 	rsbeq	lr, r0, r0, lsl #16
   1126c:	89170000 	ldmdbhi	r7, {}	; <UNPREDICTABLE>
   11270:	46000009 	strmi	r0, [r0], -r9
   11274:	0110002e 	tsteq	r0, lr, lsr #32
   11278:	10002e46 	andne	r2, r0, r6, asr #28
   1127c:	10002e4a 	andne	r2, r0, sl, asr #28
   11280:	15012101 	strne	r2, [r1, #-257]	; 0xfffffeff
   11284:	000008cf 	andeq	r0, r0, pc, asr #17
   11288:	00099c14 	andeq	r9, r9, r4, lsl ip
   1128c:	0060ff00 	rsbeq	pc, r0, r0, lsl #30
   11290:	0060fd00 	rsbeq	pc, r0, r0, lsl #26
   11294:	06180000 	ldreq	r0, [r8], -r0
   11298:	aa10002e 	bge	411358 <__RAM_SIZE+0x311358>
   1129c:	19000009 	stmdbne	r0, {r0, r3}
   112a0:	10002e7c 	andne	r2, r0, ip, ror lr
   112a4:	000009b9 			; <UNDEFINED> instruction: 0x000009b9
   112a8:	0250011a 	subseq	r0, r0, #-2147483642	; 0x80000006
   112ac:	011a0077 	tsteq	sl, r7, ror r0
   112b0:	00790251 	rsbseq	r0, r9, r1, asr r2
   112b4:	0252011a 	subseq	r0, r2, #-2147483642	; 0x80000006
   112b8:	011a0078 	tsteq	sl, r8, ror r0
   112bc:	007a0253 	rsbseq	r0, sl, r3, asr r2
   112c0:	007d021a 	rsbseq	r0, sp, sl, lsl r2
   112c4:	1a007602 	bne	2ead4 <SYSTICK_CYCLES+0x5a95>
   112c8:	03047d02 	movweq	r7, #19714	; 0x4d02
   112cc:	1a060491 	bne	192518 <__RAM_SIZE+0x92518>
   112d0:	03087d02 	movweq	r7, #36098	; 0x8d02
   112d4:	1a060891 	bne	193520 <__RAM_SIZE+0x93520>
   112d8:	030c7d02 	movweq	r7, #52482	; 0xcd02
   112dc:	1a060c91 	bne	194528 <__RAM_SIZE+0x94528>
   112e0:	03107d02 	tsteq	r0, #2, 26	; 0x80
   112e4:	1a061091 	bne	195530 <__RAM_SIZE+0x95530>
   112e8:	03147d02 	tsteq	r4, #2, 26	; 0x80
   112ec:	00061491 	muleq	r6, r1, r4
   112f0:	0f241b00 	svceq	0x00241b00
   112f4:	52020000 	andpl	r0, r2, #0
   112f8:	97013702 	strls	r3, [r1, -r2, lsl #14]
   112fc:	03000000 	movweq	r0, #0
   11300:	0000094b 	andeq	r0, r0, fp, asr #18
   11304:	000ead1c 	andeq	sl, lr, ip, lsl sp
   11308:	02540200 	subseq	r0, r4, #0, 4
   1130c:	00009706 	andeq	r9, r0, r6, lsl #14
   11310:	991d0000 	ldmdbls	sp, {}	; <UNPREDICTABLE>
   11314:	0200000e 	andeq	r0, r0, #14
   11318:	01370249 	teqeq	r7, r9, asr #4
   1131c:	00096803 	andeq	r6, r9, r3, lsl #16
   11320:	0ead1e00 	cdpeq	14, 10, cr1, cr13, cr0, {0}
   11324:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
   11328:	00975002 	addseq	r5, r7, r2
   1132c:	1b000000 	blne	11334 <_Min_Stack_Size+0x10334>
   11330:	00000ec2 	andeq	r0, r0, r2, asr #29
   11334:	37023202 	strcc	r3, [r2, -r2, lsl #4]
   11338:	00009701 	andeq	r9, r0, r1, lsl #14
   1133c:	09890300 	stmibeq	r9, {r8, r9}
   11340:	b11c0000 	tstlt	ip, r0
   11344:	0200000e 	andeq	r0, r0, #14
   11348:	97060234 	smladxls	r6, r4, r2, r0
   1134c:	00000000 	andeq	r0, r0, r0
   11350:	0019661b 	andseq	r6, r9, fp, lsl r6
   11354:	01fa0200 	mvnseq	r0, r0, lsl #4
   11358:	00970137 	addseq	r0, r7, r7, lsr r1
   1135c:	aa030000 	bge	d1364 <SYSTICK_CYCLES+0xa8325>
   11360:	1c000009 	stcne	0, cr0, [r0], {9}
   11364:	000019aa 	andeq	r1, r0, sl, lsr #19
   11368:	0601fc02 	streq	pc, [r1], -r2, lsl #24
   1136c:	00000097 	muleq	r0, r7, r0
   11370:	01011f00 	tsteq	r1, r0, lsl #30
   11374:	00001f8d 	andeq	r1, r0, sp, lsl #31
   11378:	00001f8d 	andeq	r1, r0, sp, lsl #31
   1137c:	0d011c04 	stceq	12, cr1, [r1, #-16]
   11380:	8401011f 	strhi	r0, [r1], #-287	; 0xfffffee1
   11384:	84000019 	strhi	r0, [r0], #-25	; 0xffffffe7
   11388:	03000019 	movweq	r0, #25
   1138c:	000d06d5 	ldrdeq	r0, [sp], -r5
   11390:	00000181 	andeq	r0, r0, r1, lsl #3
   11394:	31280002 			; <UNDEFINED> instruction: 0x31280002
   11398:	01040000 	mrseq	r0, (UNDEF: 4)
   1139c:	0000003d 	andeq	r0, r0, sp, lsr r0
   113a0:	0027da0c 	eoreq	sp, r7, ip, lsl #20
   113a4:	00065c00 	andeq	r5, r6, r0, lsl #24
   113a8:	0004e000 	andeq	lr, r4, r0
	...
   113b4:	005f7b00 	subseq	r7, pc, r0, lsl #22
   113b8:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
   113bc:	00746e69 	rsbseq	r6, r4, r9, ror #28
   113c0:	0027d003 	eoreq	sp, r7, r3
   113c4:	1a8f0200 	bne	fe3d1bcc <__RAM_segment_used_end__+0xc62d1bcc>
   113c8:	00000029 	andeq	r0, r0, r9, lsr #32
   113cc:	39070404 	stmdbcc	r7, {r2, sl}
   113d0:	04000002 	streq	r0, [r0], #-2
   113d4:	04e80508 	strbteq	r0, [r8], #1288	; 0x508
   113d8:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
   113dc:	00063e04 	andeq	r3, r6, r4, lsl #28
   113e0:	06010400 	streq	r0, [r1], -r0, lsl #8
   113e4:	0000086d 	andeq	r0, r0, sp, ror #16
   113e8:	000a1303 	andeq	r1, sl, r3, lsl #6
   113ec:	182b0300 	stmdane	fp!, {r8, r9}
   113f0:	00000064 	andeq	r0, r0, r4, rrx
   113f4:	6b080104 	blvs	21180c <__RAM_SIZE+0x11180c>
   113f8:	04000008 	streq	r0, [r0], #-8
   113fc:	06cf0502 	strbeq	r0, [pc], r2, lsl #10
   11400:	02040000 	andeq	r0, r4, #0
   11404:	00093907 	andeq	r3, r9, r7, lsl #18
   11408:	05040400 	streq	r0, [r4, #-1024]	; 0xfffffc00
   1140c:	000004ed 	andeq	r0, r0, sp, ror #9
   11410:	000a7603 	andeq	r7, sl, r3, lsl #12
   11414:	194f0300 	stmdbne	pc, {r8, r9}^	; <UNPREDICTABLE>
   11418:	0000008c 	andeq	r0, r0, ip, lsl #1
   1141c:	34070404 	strcc	r0, [r7], #-1028	; 0xfffffbfc
   11420:	04000002 	streq	r0, [r0], #-2
   11424:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
   11428:	04050000 	streq	r0, [r5], #-0
   1142c:	74080104 	strvc	r0, [r8], #-260	; 0xfffffefc
   11430:	03000008 	movweq	r0, #8
   11434:	00000a15 	andeq	r0, r0, r5, lsl sl
   11438:	58131804 	ldmdapl	r3, {r2, fp, ip}
   1143c:	06000000 	streq	r0, [r0], -r0
   11440:	000000a3 	andeq	r0, r0, r3, lsr #1
   11444:	000a7803 	andeq	r7, sl, r3, lsl #16
   11448:	14300400 	ldrtne	r0, [r0], #-1024	; 0xfffffc00
   1144c:	00000080 	andeq	r0, r0, r0, lsl #1
   11450:	0000b406 	andeq	fp, r0, r6, lsl #8
   11454:	28060700 	stmdacs	r6, {r8, r9, sl}
   11458:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
   1145c:	0000d711 	andeq	sp, r0, r1, lsl r7
   11460:	28030500 	stmdacs	r3, {r8, sl}
   11464:	08380024 	ldmdaeq	r8!, {r2, r5}
   11468:	0000a304 	andeq	sl, r0, r4, lsl #6
   1146c:	1e010900 	vmlane.f16	s0, s2, s0	; <UNPREDICTABLE>
   11470:	01000028 	tsteq	r0, r8, lsr #32
   11474:	9a010735 	bls	53150 <SYSTICK_CYCLES+0x2a111>
   11478:	c0000000 	andgt	r0, r0, r0
   1147c:	0810002e 	ldmdaeq	r0, {r1, r2, r3, r5}
   11480:	1210002f 	andsne	r0, r0, #47	; 0x2f
   11484:	01000061 	tsteq	r0, r1, rrx
   11488:	00000170 	andeq	r0, r0, r0, ror r1
   1148c:	0028010a 	eoreq	r0, r8, sl, lsl #2
   11490:	17350100 	ldrne	r0, [r5, -r0, lsl #2]!
   11494:	00000030 	andeq	r0, r0, r0, lsr r0
   11498:	0000613c 	andeq	r6, r0, ip, lsr r1
   1149c:	00006132 	andeq	r6, r0, r2, lsr r1
   114a0:	00169e0b 	andseq	r9, r6, fp, lsl #28
   114a4:	12370100 	eorsne	r0, r7, #0, 2
   114a8:	000000a3 	andeq	r0, r0, r3, lsr #1
   114ac:	b10b0101 	tstlt	fp, r1, lsl #2
   114b0:	01000027 	tsteq	r0, r7, lsr #32
   114b4:	00a31238 	adceq	r1, r3, r8, lsr r2
   114b8:	01010000 	mrseq	r0, (UNDEF: 1)
   114bc:	0027f10b 	eoreq	pc, r7, fp, lsl #2
   114c0:	13390100 	teqne	r9, #0, 2
   114c4:	000000b4 	strheq	r0, [r0], -r4
   114c8:	240c0101 	strcs	r0, [ip], #-257	; 0xfffffeff
   114cc:	01000028 	tsteq	r0, r8, lsr #32
   114d0:	00c0123a 	sbceq	r1, r0, sl, lsr r2
   114d4:	c70c0000 	strgt	r0, [ip, -r0]
   114d8:	01000027 	tsteq	r0, r7, lsr #32
   114dc:	0170123b 	cmneq	r0, fp, lsr r2
   114e0:	b90d0000 	stmdblt	sp, {}	; <UNPREDICTABLE>
   114e4:	01000027 	tsteq	r0, r7, lsr #32
   114e8:	00d70c3c 	sbcseq	r0, r7, ip, lsr ip
   114ec:	61830000 	orrvs	r0, r3, r0
   114f0:	61810000 	orrvs	r0, r1, r0
   114f4:	ec0e0000 	stc	0, cr0, [lr], {-0}
   114f8:	7610002e 	ldrvc	r0, [r0], -lr, lsr #32
   114fc:	00000001 	andeq	r0, r0, r1
   11500:	00af0408 	adceq	r0, pc, r8, lsl #8
   11504:	010f0000 	mrseq	r0, CPSR
   11508:	00281601 	eoreq	r1, r8, r1, lsl #12
   1150c:	00281600 	eoreq	r1, r8, r0, lsl #12
   11510:	0d0f0500 	cfstr32eq	mvfx0, [pc, #-0]	; 11518 <_Min_Stack_Size+0x10518>
   11514:	00083100 	andeq	r3, r8, r0, lsl #2
   11518:	12000200 	andne	r0, r0, #0, 4
   1151c:	04000032 	streq	r0, [r0], #-50	; 0xffffffce
   11520:	00003d01 	andeq	r3, r0, r1, lsl #26
   11524:	28e00c00 	stmiacs	r0!, {sl, fp}^
   11528:	065c0000 	ldrbeq	r0, [ip], -r0
   1152c:	04f00000 	ldrbteq	r0, [r0], #0
	...
   11538:	61630000 	cmnvs	r3, r0
   1153c:	01020000 	mrseq	r0, (UNDEF: 2)
   11540:	00086d06 	andeq	r6, r8, r6, lsl #26
   11544:	08010200 	stmdaeq	r1, {r9}
   11548:	0000086b 	andeq	r0, r0, fp, ror #16
   1154c:	cf050202 	svcgt	0x00050202
   11550:	02000006 	andeq	r0, r0, #6
   11554:	09390702 	ldmdbeq	r9!, {r1, r8, r9, sl}
   11558:	04020000 	streq	r0, [r2], #-0
   1155c:	0004ed05 	andeq	lr, r4, r5, lsl #26
   11560:	0a760300 	beq	1d92168 <__RAM_SIZE+0x1c92168>
   11564:	4f020000 	svcmi	0x00020000
   11568:	00005819 	andeq	r5, r0, r9, lsl r8
   1156c:	07040200 	streq	r0, [r4, -r0, lsl #4]
   11570:	00000234 	andeq	r0, r0, r4, lsr r2
   11574:	e8050802 	stmda	r5, {r1, fp}
   11578:	02000004 	andeq	r0, r0, #4
   1157c:	022f0708 	eoreq	r0, pc, #8, 14	; 0x200000
   11580:	a3030000 	movwge	r0, #12288	; 0x3000
   11584:	02000028 	andeq	r0, r0, #40	; 0x28
   11588:	005f1ec8 	subseq	r1, pc, r8, asr #29
   1158c:	04040000 	streq	r0, [r4], #-0
   11590:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
   11594:	07040200 	streq	r0, [r4, -r0, lsl #4]
   11598:	00000239 	andeq	r0, r0, r9, lsr r2
   1159c:	3e040802 	cdpcc	8, 0, cr0, cr4, cr2, {0}
   115a0:	03000006 	movweq	r0, #6
   115a4:	00002a1d 	andeq	r2, r0, sp, lsl sl
   115a8:	450e1e03 	strmi	r1, [lr, #-3587]	; 0xfffff1fd
   115ac:	03000000 	movweq	r0, #0
   115b0:	00002954 	andeq	r2, r0, r4, asr r9
   115b4:	450e2203 	strmi	r2, [lr, #-515]	; 0xfffffdfd
   115b8:	03000000 	movweq	r0, #0
   115bc:	000029e6 	andeq	r2, r0, r6, ror #19
   115c0:	450e2e03 	strmi	r2, [lr, #-3587]	; 0xfffff1fd
   115c4:	03000000 	movweq	r0, #0
   115c8:	000029dd 	ldrdeq	r2, [r0], -sp
   115cc:	370f3803 	strcc	r3, [pc, -r3, lsl #16]
   115d0:	03000000 	movweq	r0, #0
   115d4:	000029fb 	strdeq	r2, [r0], -fp
   115d8:	3e183c03 	cdpcc	12, 1, cr3, cr8, cr3, {0}
   115dc:	03000000 	movweq	r0, #0
   115e0:	00002a28 	andeq	r2, r0, r8, lsr #20
   115e4:	3e183f03 	cdpcc	15, 1, cr3, cr8, cr3, {0}
   115e8:	03000000 	movweq	r0, #0
   115ec:	0000298f 	andeq	r2, r0, pc, lsl #19
   115f0:	3e184b03 	vnmlscc.f64	d4, d8, d3
   115f4:	03000000 	movweq	r0, #0
   115f8:	0000294b 	andeq	r2, r0, fp, asr #18
   115fc:	4c145a03 			; <UNDEFINED> instruction: 0x4c145a03
   11600:	03000000 	movweq	r0, #0
   11604:	000029e5 	andeq	r2, r0, r5, ror #19
   11608:	a6106603 	ldrge	r6, [r0], -r3, lsl #12
   1160c:	03000000 	movweq	r0, #0
   11610:	0000290b 	andeq	r2, r0, fp, lsl #18
   11614:	3e18d103 	mnfcce	f5, f3
   11618:	05000000 	streq	r0, [r0, #-0]
   1161c:	00010c04 	andeq	r0, r1, r4, lsl #24
   11620:	08010200 	stmdaeq	r1, {r9}
   11624:	00000874 	andeq	r0, r0, r4, ror r8
   11628:	00289c03 	eoreq	r9, r8, r3, lsl #24
   1162c:	122a0400 	eorne	r0, sl, #0, 8
   11630:	0000006d 	andeq	r0, r0, sp, rrx
   11634:	0029f206 	eoreq	pc, r9, r6, lsl #4
   11638:	2f051000 	svccs	0x00051000
   1163c:	00014b08 	andeq	r4, r1, r8, lsl #22
   11640:	28620700 	stmdacs	r2!, {r8, r9, sl}^
   11644:	30050000 	andcc	r0, r5, r0
   11648:	00011309 	andeq	r1, r1, r9, lsl #6
   1164c:	00230200 	eoreq	r0, r3, r0, lsl #4
   11650:	00292f07 	eoreq	r2, r9, r7, lsl #30
   11654:	07310500 	ldreq	r0, [r1, -r0, lsl #10]!
   11658:	00000045 	andeq	r0, r0, r5, asr #32
   1165c:	00082302 	andeq	r2, r8, r2, lsl #6
   11660:	002a1f03 	eoreq	r1, sl, r3, lsl #30
   11664:	14610600 	strbtne	r0, [r1], #-1536	; 0xfffffa00
   11668:	0000008e 	andeq	r0, r0, lr, lsl #1
   1166c:	00295603 	eoreq	r5, r9, r3, lsl #12
   11670:	15660600 	strbne	r0, [r6, #-1536]!	; 0xfffffa00
   11674:	0000009a 	muleq	r0, sl, r0
   11678:	00283803 	eoreq	r3, r8, r3, lsl #16
   1167c:	136b0600 	cmnne	fp, #0, 12
   11680:	00000058 	andeq	r0, r0, r8, asr r0
   11684:	00299103 	eoreq	r9, r9, r3, lsl #2
   11688:	128b0600 	addne	r0, fp, #0, 12
   1168c:	000000d6 	ldrdeq	r0, [r0], -r6
   11690:	0029e703 	eoreq	lr, r9, r3, lsl #14
   11694:	129d0600 	addsne	r0, sp, #0, 12
   11698:	000000ee 	andeq	r0, r0, lr, ror #1
   1169c:	0029df03 	eoreq	sp, r9, r3, lsl #30
   116a0:	12a10600 	adcne	r0, r1, #0, 12
   116a4:	000000b2 	strheq	r0, [r0], -r2
   116a8:	0029fd03 	eoreq	pc, r9, r3, lsl #26
   116ac:	12a50600 	adcne	r0, r5, #0, 12
   116b0:	000000be 	strheq	r0, [r0], -lr
   116b4:	002a2a03 	eoreq	r2, sl, r3, lsl #20
   116b8:	12a90600 	adcne	r0, r9, #0, 12
   116bc:	000000ca 	andeq	r0, r0, sl, asr #1
   116c0:	00294d03 	eoreq	r4, r9, r3, lsl #26
   116c4:	12bd0600 	adcsne	r0, sp, #0, 12
   116c8:	000000e2 	andeq	r0, r0, r2, ror #1
   116cc:	00290d03 	eoreq	r0, r9, r3, lsl #26
   116d0:	13c20600 	bicne	r0, r2, #0, 12
   116d4:	000000fa 	strdeq	r0, [r0], -sl
   116d8:	00286a06 	eoreq	r6, r8, r6, lsl #20
   116dc:	1b075800 	blne	1e76e4 <__RAM_SIZE+0xe76e4>
   116e0:	0002a308 	andeq	sl, r2, r8, lsl #6
   116e4:	28830700 	stmcs	r3, {r8, r9, sl}
   116e8:	1d070000 	stcne	0, cr0, [r7, #-0]
   116ec:	0001870a 	andeq	r8, r1, sl, lsl #14
   116f0:	00230200 	eoreq	r0, r3, r0, lsl #4
   116f4:	00291b07 	eoreq	r1, r9, r7, lsl #22
   116f8:	0a1e0700 	beq	793300 <__RAM_SIZE+0x693300>
   116fc:	0000016f 	andeq	r0, r0, pc, ror #2
   11700:	07022302 	streq	r2, [r2, -r2, lsl #6]
   11704:	00002a03 	andeq	r2, r0, r3, lsl #20
   11708:	ab0a1f07 	blge	29932c <__RAM_SIZE+0x19932c>
   1170c:	02000001 	andeq	r0, r0, #1
   11710:	37070423 	strcc	r0, [r7, -r3, lsr #8]
   11714:	07000029 	streq	r0, [r0, -r9, lsr #32]
   11718:	01b70b20 			; <UNDEFINED> instruction: 0x01b70b20
   1171c:	23020000 	movwcs	r0, #8192	; 0x2000
   11720:	29a10708 	stmibcs	r1!, {r3, r8, r9, sl}
   11724:	21070000 	mrscs	r0, (UNDEF: 7)
   11728:	0001930a 	andeq	r9, r1, sl, lsl #6
   1172c:	0a230200 	beq	8d1f34 <__RAM_SIZE+0x7d1f34>
   11730:	0028d907 	eoreq	sp, r8, r7, lsl #18
   11734:	0a220700 	beq	89333c <__RAM_SIZE+0x79333c>
   11738:	0000019f 	muleq	r0, pc, r1	; <UNPREDICTABLE>
   1173c:	070c2302 	streq	r2, [ip, -r2, lsl #6]
   11740:	00002830 	andeq	r2, r0, r0, lsr r8
   11744:	870a2307 	strhi	r2, [sl, -r7, lsl #6]
   11748:	02000001 	andeq	r0, r0, #1
   1174c:	a8070e23 	stmdage	r7, {r0, r1, r5, r9, sl, fp}
   11750:	07000029 	streq	r0, [r0, -r9, lsr #32]
   11754:	017b0a24 	cmneq	fp, r4, lsr #20
   11758:	23020000 	movwcs	r0, #8192	; 0x2000
   1175c:	29600710 	stmdbcs	r0!, {r4, r8, r9, sl}^
   11760:	2a070000 	bcs	1d1768 <__RAM_SIZE+0xd1768>
   11764:	00011f13 	andeq	r1, r1, r3, lsl pc
   11768:	18230200 	stmdane	r3!, {r9}
   1176c:	00298707 	eoreq	r8, r9, r7, lsl #14
   11770:	132b0700 			; <UNDEFINED> instruction: 0x132b0700
   11774:	0000011f 	andeq	r0, r0, pc, lsl r1
   11778:	07282302 	streq	r2, [r8, -r2, lsl #6]!
   1177c:	0000286f 	andeq	r2, r0, pc, ror #16
   11780:	1f132c07 	svcne	0x00132c07
   11784:	02000001 	andeq	r0, r0, #1
   11788:	b3073823 	movwlt	r3, #30755	; 0x7823
   1178c:	07000028 	streq	r0, [r0, -r8, lsr #32]
   11790:	0157112d 	cmpeq	r7, sp, lsr #2
   11794:	23020000 	movwcs	r0, #8192	; 0x2000
   11798:	29750748 	ldmdbcs	r5!, {r3, r6, r8, r9, sl}^
   1179c:	2e070000 	cdpcs	0, 0, cr0, cr7, cr0, {0}
   117a0:	00014b0c 	andeq	r4, r1, ip, lsl #22
   117a4:	4c230200 	sfmmi	f0, 4, [r3], #-0
   117a8:	0029b007 	eoreq	fp, r9, r7
   117ac:	09300700 	ldmdbeq	r0!, {r8, r9, sl}
   117b0:	000002a3 	andeq	r0, r0, r3, lsr #5
   117b4:	00502302 	subseq	r2, r0, r2, lsl #6
   117b8:	00004508 	andeq	r4, r0, r8, lsl #10
   117bc:	0002b300 	andeq	fp, r2, r0, lsl #6
   117c0:	00800900 	addeq	r0, r0, r0, lsl #18
   117c4:	00010000 	andeq	r0, r1, r0
   117c8:	736d740a 	cmnvc	sp, #167772160	; 0xa000000
   117cc:	11081000 	mrsne	r1, (UNDEF: 8)
   117d0:	0002fd08 	andeq	pc, r2, r8, lsl #26
   117d4:	2a0b0700 	bcs	2d33dc <__RAM_SIZE+0x1d33dc>
   117d8:	12080000 	andne	r0, r8, #0
   117dc:	0001630a 	andeq	r6, r1, sl, lsl #6
   117e0:	00230200 	eoreq	r0, r3, r0, lsl #4
   117e4:	00299707 	eoreq	r9, r9, r7, lsl #14
   117e8:	0a130800 	beq	4d37f0 <__RAM_SIZE+0x3d37f0>
   117ec:	00000163 	andeq	r0, r0, r3, ror #2
   117f0:	07042302 	streq	r2, [r4, -r2, lsl #6]
   117f4:	0000284f 	andeq	r2, r0, pc, asr #16
   117f8:	630a1408 	movwvs	r1, #41992	; 0xa408
   117fc:	02000001 	andeq	r0, r0, #1
   11800:	f9070823 			; <UNDEFINED> instruction: 0xf9070823
   11804:	08000028 	stmdaeq	r0, {r3, r5}
   11808:	01630a15 	cmneq	r3, r5, lsl sl
   1180c:	23020000 	movwcs	r0, #8192	; 0x2000
   11810:	0608000c 	streq	r0, [r8], -ip
   11814:	0d000001 	stceq	0, cr0, [r0, #-4]
   11818:	09000003 	stmdbeq	r0, {r0, r1}
   1181c:	00000080 	andeq	r0, r0, r0, lsl #1
   11820:	770b0000 	strvc	r0, [fp, -r0]
   11824:	01000028 	tsteq	r0, r8, lsr #32
   11828:	02fd0727 	rscseq	r0, sp, #10223616	; 0x9c0000
   1182c:	05010000 	streq	r0, [r1, #-0]
   11830:	00000003 	andeq	r0, r0, r3
   11834:	28400b00 	stmdacs	r0, {r8, r9, fp}^
   11838:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
   1183c:	00033308 	andeq	r3, r3, r8, lsl #6
   11840:	03050100 	movweq	r0, #20736	; 0x5100
   11844:	00000000 	andeq	r0, r0, r0
   11848:	01060405 	tsteq	r6, r5, lsl #8
   1184c:	010c0000 	mrseq	r0, (UNDEF: 12)
   11850:	0000285a 	andeq	r2, r0, sl, asr r8
   11854:	0105a901 	tsteq	r5, r1, lsl #18
   11858:	00000079 	andeq	r0, r0, r9, ror r0
	...
   11864:	00006196 	muleq	r0, r6, r1
   11868:	00039e01 	andeq	r9, r3, r1, lsl #28
   1186c:	05bb0d00 	ldreq	r0, [fp, #3328]!	; 0xd00
   11870:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
   11874:	00010613 	andeq	r0, r1, r3, lsl r6
   11878:	0061ba00 	rsbeq	fp, r1, r0, lsl #20
   1187c:	0061b600 	rsbeq	fp, r1, r0, lsl #12
   11880:	29460d00 	stmdbcs	r6, {r8, sl, fp}^
   11884:	a9010000 	stmdbge	r1, {}	; <UNPREDICTABLE>
   11888:	00033320 	andeq	r3, r3, r0, lsr #6
   1188c:	0061df00 	rsbeq	sp, r1, r0, lsl #30
   11890:	0061db00 	rsbeq	sp, r1, r0, lsl #22
   11894:	6e650e00 	cdpvs	14, 6, cr0, cr5, cr0, {0}
   11898:	a9010076 	stmdbge	r1, {r1, r2, r4, r5, r6}
   1189c:	0003332d 	andeq	r3, r3, sp, lsr #6
   118a0:	00620400 	rsbeq	r0, r2, r0, lsl #8
   118a4:	00620000 	rsbeq	r0, r2, r0
   118a8:	00000f00 	andeq	r0, r0, r0, lsl #30
   118ac:	080a0000 	stmdaeq	sl, {}	; <UNPREDICTABLE>
   118b0:	0c000000 	stceq	0, cr0, [r0], {-0}
   118b4:	0029cf01 	eoreq	ip, r9, r1, lsl #30
   118b8:	05a30100 	streq	r0, [r3, #256]!	; 0x100
   118bc:	00007901 	andeq	r7, r0, r1, lsl #18
	...
   118c8:	00622500 	rsbeq	r2, r2, r0, lsl #10
   118cc:	03c70100 	biceq	r0, r7, #0, 2
   118d0:	000f0000 	andeq	r0, pc, r0
   118d4:	0a000000 	beq	118dc <_Min_Stack_Size+0x108dc>
   118d8:	00000008 	andeq	r0, r0, r8
   118dc:	2968010c 	stmdbcs	r8!, {r2, r3, r8}^
   118e0:	9b010000 	blls	518e8 <SYSTICK_CYCLES+0x288a9>
   118e4:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
   118f0:	62450000 	subvs	r0, r5, #0
   118f4:	18010000 	stmdane	r1, {}	; <UNPREDICTABLE>
   118f8:	0e000004 	cdpeq	0, 0, cr0, cr0, cr4, {0}
   118fc:	00646c6f 	rsbeq	r6, r4, pc, ror #24
   11900:	06119b01 	ldreq	r9, [r1], -r1, lsl #22
   11904:	69000001 	stmdbvs	r0, {r0}
   11908:	65000062 	strvs	r0, [r0, #-98]	; 0xffffff9e
   1190c:	0e000062 	cdpeq	0, 0, cr0, cr0, cr2, {3}
   11910:	0077656e 	rsbseq	r6, r7, lr, ror #10
   11914:	061c9b01 	ldreq	r9, [ip], -r1, lsl #22
   11918:	8e000001 	cdphi	0, 0, cr0, cr0, cr1, {0}
   1191c:	8a000062 	bhi	11aac <_Min_Stack_Size+0x10aac>
   11920:	0f000062 	svceq	0x00000062
   11924:	00000000 	andeq	r0, r0, r0
   11928:	0000080a 	andeq	r0, r0, sl, lsl #16
   1192c:	69011000 	stmdbvs	r1, {ip}
   11930:	01000028 	tsteq	r0, r8, lsr #32
   11934:	79010594 	stmdbvc	r1, {r2, r4, r7, r8, sl}
	...
   11940:	02000000 	andeq	r0, r0, #0
   11944:	5801007d 	stmdapl	r1, {r0, r2, r3, r4, r5, r6}
   11948:	0d000004 	stceq	0, cr0, [r0, #-16]
   1194c:	00002891 	muleq	r0, r1, r8
   11950:	06119401 	ldreq	r9, [r1], -r1, lsl #8
   11954:	b3000001 	movwlt	r0, #1
   11958:	af000062 	svcge	0x00000062
   1195c:	11000062 	tstne	r0, r2, rrx
   11960:	01007473 	tsteq	r0, r3, ror r4
   11964:	04582494 	ldrbeq	r2, [r8], #-1172	; 0xfffffb6c
   11968:	51010000 	mrspl	r0, (UNDEF: 1)
   1196c:	c3040500 	movwgt	r0, #17664	; 0x4500
   11970:	10000001 	andne	r0, r0, r1
   11974:	00290401 	eoreq	r0, r9, r1, lsl #8
   11978:	058e0100 	streq	r0, [lr, #256]	; 0x100
   1197c:	00007901 	andeq	r7, r0, r1, lsl #18
	...
   11988:	007d0200 	rsbseq	r0, sp, r0, lsl #4
   1198c:	00049101 	andeq	r9, r4, r1, lsl #2
   11990:	75620e00 	strbvc	r0, [r2, #-3584]!	; 0xfffff200
   11994:	8e010066 	cdphi	0, 0, cr0, cr1, cr6, {3}
   11998:	00049118 	andeq	r9, r4, r8, lsl r1
   1199c:	0062d800 	rsbeq	sp, r2, r0, lsl #16
   119a0:	0062d400 	rsbeq	sp, r2, r0, lsl #8
   119a4:	04050000 	streq	r0, [r5], #-0
   119a8:	000002b3 			; <UNDEFINED> instruction: 0x000002b3
   119ac:	2a15010c 	bcs	551de4 <__RAM_SIZE+0x451de4>
   119b0:	87010000 	strhi	r0, [r1, -r0]
   119b4:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
   119c0:	62f90000 	rscsvs	r0, r9, #0
   119c4:	d4010000 	strle	r0, [r1], #-0
   119c8:	0d000004 	stceq	0, cr0, [r0, #-16]
   119cc:	000005bb 			; <UNDEFINED> instruction: 0x000005bb
   119d0:	06138701 	ldreq	r8, [r3], -r1, lsl #14
   119d4:	1d000001 	stcne	0, cr0, [r0, #-4]
   119d8:	19000063 	stmdbne	r0, {r0, r1, r5, r6}
   119dc:	0f000063 	svceq	0x00000063
   119e0:	00000000 	andeq	r0, r0, r0
   119e4:	0000080a 	andeq	r0, r0, sl, lsl #16
   119e8:	15010c00 	strne	r0, [r1, #-3072]	; 0xfffff400
   119ec:	01000029 	tsteq	r0, r9, lsr #32
   119f0:	79010580 	stmdbvc	r1, {r7, r8, sl}
	...
   119fc:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
   11a00:	01000063 	tsteq	r0, r3, rrx
   11a04:	00000511 	andeq	r0, r0, r1, lsl r5
   11a08:	0003fa0d 	andeq	pc, r3, sp, lsl #20
   11a0c:	10800100 	addne	r0, r0, r0, lsl #2
   11a10:	00000511 	andeq	r0, r0, r1, lsl r5
   11a14:	00006362 	andeq	r6, r0, r2, ror #6
   11a18:	0000635e 	andeq	r6, r0, lr, asr r3
   11a1c:	0000000f 	andeq	r0, r0, pc
   11a20:	00080a00 	andeq	r0, r8, r0, lsl #20
   11a24:	04050000 	streq	r0, [r5], #-0
   11a28:	00000079 	andeq	r0, r0, r9, ror r0
   11a2c:	2940010c 	stmdbcs	r0, {r2, r3, r8}^
   11a30:	78010000 	stmdavc	r1, {}	; <UNPREDICTABLE>
   11a34:	00790105 	rsbseq	r0, r9, r5, lsl #2
	...
   11a40:	63830000 	orrvs	r0, r3, #0
   11a44:	5b010000 	blpl	51a4c <SYSTICK_CYCLES+0x28a0d>
   11a48:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
   11a4c:	000029ed 	andeq	r2, r0, sp, ror #19
   11a50:	06117801 	ldreq	r7, [r1], -r1, lsl #16
   11a54:	b3000001 	movwlt	r0, #1
   11a58:	af000063 	svcge	0x00000063
   11a5c:	12000063 	andne	r0, r0, #99	; 0x63
   11a60:	0000203e 	andeq	r2, r0, lr, lsr r0
   11a64:	791b7801 	ldmdbvc	fp, {r0, fp, ip, sp, lr}
   11a68:	02000000 	andeq	r0, r0, #0
   11a6c:	00137491 	mulseq	r3, r1, r4
   11a70:	28480110 	stmdacs	r8, {r4, r8}^
   11a74:	70010000 	andvc	r0, r1, r0
   11a78:	00790105 	rsbseq	r0, r9, r5, lsl #2
   11a7c:	2f780000 	svccs	0x00780000
   11a80:	2f7c1000 	svccs	0x007c1000
   11a84:	7d021000 	stcvc	0, cr1, [r2, #-0]
   11a88:	05aa0100 	streq	r0, [sl, #256]!	; 0x100
   11a8c:	910d0000 	mrsls	r0, (UNDEF: 13)
   11a90:	01000028 	tsteq	r0, r8, lsr #32
   11a94:	00791070 	rsbseq	r1, r9, r0, ror r0
   11a98:	63d80000 	bicsvs	r0, r8, #0
   11a9c:	63d40000 	bicsvs	r0, r4, #0
   11aa0:	70110000 	andsvc	r0, r1, r0
   11aa4:	01007274 	tsteq	r0, r4, ror r2
   11aa8:	00791a70 	rsbseq	r1, r9, r0, ror sl
   11aac:	51010000 	mrspl	r0, (UNDEF: 1)
   11ab0:	72696411 	rsbvc	r6, r9, #285212672	; 0x11000000
   11ab4:	23700100 	cmncs	r0, #0, 2
   11ab8:	00000079 	andeq	r0, r0, r9, ror r0
   11abc:	10005201 	andne	r5, r0, r1, lsl #4
   11ac0:	00297f01 	eoreq	r7, r9, r1, lsl #30
   11ac4:	056a0100 	strbeq	r0, [sl, #-256]!	; 0xffffff00
   11ac8:	00007901 	andeq	r7, r0, r1, lsl #18
   11acc:	002f7400 	eoreq	r7, pc, r0, lsl #8
   11ad0:	002f7810 	eoreq	r7, pc, r0, lsl r8	; <UNPREDICTABLE>
   11ad4:	007d0210 	rsbseq	r0, sp, r0, lsl r2
   11ad8:	0005dd01 	andeq	sp, r5, r1, lsl #26
   11adc:	28910d00 	ldmcs	r1, {r8, sl, fp}
   11ae0:	6a010000 	bvs	51ae8 <SYSTICK_CYCLES+0x28aa9>
   11ae4:	00007911 	andeq	r7, r0, r1, lsl r9
   11ae8:	0063fd00 	rsbeq	pc, r3, r0, lsl #26
   11aec:	0063f900 	rsbeq	pc, r3, r0, lsl #18
   11af0:	01100000 	tsteq	r0, r0
   11af4:	0000288a 	andeq	r2, r0, sl, lsl #17
   11af8:	01056301 	tsteq	r5, r1, lsl #6
   11afc:	00000079 	andeq	r0, r0, r9, ror r0
   11b00:	10002f6a 	andne	r2, r0, sl, ror #30
   11b04:	10002f74 	andne	r2, r0, r4, ror pc
   11b08:	01007d02 	tsteq	r0, r2, lsl #26
   11b0c:	0000061d 	andeq	r0, r0, sp, lsl r6
   11b10:	0028910d 	eoreq	r9, r8, sp, lsl #2
   11b14:	10630100 	rsbne	r0, r3, r0, lsl #2
   11b18:	00000079 	andeq	r0, r0, r9, ror r0
   11b1c:	00006422 	andeq	r6, r0, r2, lsr #8
   11b20:	0000641e 	andeq	r6, r0, lr, lsl r4
   11b24:	00747311 	rsbseq	r7, r4, r1, lsl r3
   11b28:	58236301 	stmdapl	r3!, {r0, r8, r9, sp, lr}
   11b2c:	01000004 	tsteq	r0, r4
   11b30:	01100051 	tsteq	r0, r1, asr r0
   11b34:	0000296e 	andeq	r2, r0, lr, ror #18
   11b38:	01055c01 	tsteq	r5, r1, lsl #24
   11b3c:	00000079 	andeq	r0, r0, r9, ror r0
   11b40:	10002f64 	andne	r2, r0, r4, ror #30
   11b44:	10002f6a 	andne	r2, r0, sl, ror #30
   11b48:	01007d02 	tsteq	r0, r2, lsl #26
   11b4c:	00000650 	andeq	r0, r0, r0, asr r6
   11b50:	0028910d 	eoreq	r9, r8, sp, lsl #2
   11b54:	105c0100 	subsne	r0, ip, r0, lsl #2
   11b58:	00000079 	andeq	r0, r0, r9, ror r0
   11b5c:	00006447 	andeq	r6, r0, r7, asr #8
   11b60:	00006443 	andeq	r6, r0, r3, asr #8
   11b64:	aa010c00 	bge	54b6c <SYSTICK_CYCLES+0x2bb2d>
   11b68:	01000018 	tsteq	r0, r8, lsl r0
   11b6c:	79011b50 	stmdbvc	r1, {r4, r6, r8, r9, fp, ip}
   11b70:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
   11b74:	6410002f 	ldrvs	r0, [r0], #-47	; 0xffffffd1
   11b78:	6810002f 	ldmdavs	r0, {r0, r1, r2, r3, r5}
   11b7c:	01000064 	tsteq	r0, r4, rrx
   11b80:	000006c9 	andeq	r0, r0, r9, asr #13
   11b84:	0028910d 	eoreq	r9, r8, sp, lsl #2
   11b88:	26500100 	ldrbcs	r0, [r0], -r0, lsl #2
   11b8c:	00000079 	andeq	r0, r0, r9, ror r0
   11b90:	0000648c 	andeq	r6, r0, ip, lsl #9
   11b94:	00006488 	andeq	r6, r0, r8, lsl #9
   11b98:	7274700e 	rsbsvc	r7, r4, #14
   11b9c:	32500100 	subscc	r0, r0, #0, 2
   11ba0:	00000106 	andeq	r0, r0, r6, lsl #2
   11ba4:	000064b5 			; <UNDEFINED> instruction: 0x000064b5
   11ba8:	000064ad 	andeq	r6, r0, sp, lsr #9
   11bac:	6e656c0e 	cdpvs	12, 6, cr6, cr5, cr14, {0}
   11bb0:	3b500100 	blcc	1411fb8 <__RAM_SIZE+0x1311fb8>
   11bb4:	00000079 	andeq	r0, r0, r9, ror r0
   11bb8:	000064ef 	andeq	r6, r0, pc, ror #9
   11bbc:	000064eb 	andeq	r6, r0, fp, ror #9
   11bc0:	0029c714 	eoreq	ip, r9, r4, lsl r7
   11bc4:	07530100 	ldrbeq	r0, [r3, -r0, lsl #2]
   11bc8:	00000079 	andeq	r0, r0, r9, ror r0
   11bcc:	00006511 	andeq	r6, r0, r1, lsl r5
   11bd0:	0000650d 	andeq	r6, r0, sp, lsl #10
   11bd4:	002f5a0f 	eoreq	r5, pc, pc, lsl #20
   11bd8:	00081810 	andeq	r1, r8, r0, lsl r8
   11bdc:	010c0000 	mrseq	r0, (UNDEF: 12)
   11be0:	00001690 	muleq	r0, r0, r6
   11be4:	011b4301 	tsteq	fp, r1, lsl #6
   11be8:	00000079 	andeq	r0, r0, r9, ror r0
   11bec:	10002f28 	andne	r2, r0, r8, lsr #30
   11bf0:	10002f48 	andne	r2, r0, r8, asr #30
   11bf4:	00006530 	andeq	r6, r0, r0, lsr r5
   11bf8:	00074201 	andeq	r4, r7, r1, lsl #4
   11bfc:	28910d00 	ldmcs	r1, {r8, sl, fp}
   11c00:	43010000 	movwmi	r0, #4096	; 0x1000
   11c04:	00007925 	andeq	r7, r0, r5, lsr #18
   11c08:	00655400 	rsbeq	r5, r5, r0, lsl #8
   11c0c:	00655000 	rsbeq	r5, r5, r0
   11c10:	74700e00 	ldrbtvc	r0, [r0], #-3584	; 0xfffff200
   11c14:	43010072 	movwmi	r0, #4210	; 0x1072
   11c18:	00010631 	andeq	r0, r1, r1, lsr r6
   11c1c:	00657d00 	rsbeq	r7, r5, r0, lsl #26
   11c20:	00657500 	rsbeq	r7, r5, r0, lsl #10
   11c24:	656c0e00 	strbvs	r0, [ip, #-3584]!	; 0xfffff200
   11c28:	4301006e 	movwmi	r0, #4206	; 0x106e
   11c2c:	0000793a 	andeq	r7, r0, sl, lsr r9
   11c30:	0065b700 	rsbeq	fp, r5, r0, lsl #14
   11c34:	0065b300 	rsbeq	fp, r5, r0, lsl #6
   11c38:	29c71400 	stmibcs	r7, {sl, ip}^
   11c3c:	46010000 	strmi	r0, [r1], -r0
   11c40:	00007907 	andeq	r7, r0, r7, lsl #18
   11c44:	0065d900 	rsbeq	sp, r5, r0, lsl #18
   11c48:	0065d500 	rsbeq	sp, r5, r0, lsl #10
   11c4c:	2f360f00 	svccs	0x00360f00
   11c50:	08261000 	stmdaeq	r6!, {ip}
   11c54:	15000000 	strne	r0, [r0, #-0]
   11c58:	00287d01 	eoreq	r7, r8, r1, lsl #26
   11c5c:	063d0100 	ldrteq	r0, [sp], -r0, lsl #2
   11c60:	2f1c0101 	svccs	0x001c0101
   11c64:	2f281000 	svccs	0x00281000
   11c68:	65f81000 	ldrbvs	r1, [r8, #0]!
   11c6c:	8a010000 	bhi	51c74 <SYSTICK_CYCLES+0x28c35>
   11c70:	0d000007 	stceq	0, cr0, [r0, #-28]	; 0xffffffe4
   11c74:	000003fa 	strdeq	r0, [r0], -sl
   11c78:	79113d01 	ldmdbvc	r1, {r0, r8, sl, fp, ip, sp}
   11c7c:	1c000000 	stcne	0, cr0, [r0], {-0}
   11c80:	18000066 	stmdane	r0, {r1, r2, r5, r6}
   11c84:	16000066 	strne	r0, [r0], -r6, rrx
   11c88:	10002f26 	andne	r2, r0, r6, lsr #30
   11c8c:	0000078a 	andeq	r0, r0, sl, lsl #15
   11c90:	03500117 	cmpeq	r0, #-1073741819	; 0xc0000005
   11c94:	175001f3 	smmlsrne	r0, r3, r1, r0
   11c98:	09025101 	stmdbeq	r2, {r0, r8, ip, lr}
   11c9c:	0c0000ff 	stceq	0, cr0, [r0], {255}	; 0xff
   11ca0:	00289601 	eoreq	r9, r8, r1, lsl #12
   11ca4:	05350100 	ldreq	r0, [r5, #-256]!	; 0xffffff00
   11ca8:	00007901 	andeq	r7, r0, r1, lsl #18
   11cac:	002f0c00 	eoreq	r0, pc, r0, lsl #24
   11cb0:	002f1c10 	eoreq	r1, pc, r0, lsl ip	; <UNPREDICTABLE>
   11cb4:	00663d10 	rsbeq	r3, r6, r0, lsl sp
   11cb8:	07db0100 	ldrbeq	r0, [fp, r0, lsl #2]
   11cbc:	700e0000 	andvc	r0, lr, r0
   11cc0:	01006469 	tsteq	r0, r9, ror #8
   11cc4:	00790f35 	rsbseq	r0, r9, r5, lsr pc
   11cc8:	66610000 	strbtvs	r0, [r1], -r0
   11ccc:	665d0000 	ldrbvs	r0, [sp], -r0
   11cd0:	730e0000 	movwvc	r0, #57344	; 0xe000
   11cd4:	01006769 	tsteq	r0, r9, ror #14
   11cd8:	00791835 	rsbseq	r1, r9, r5, lsr r8
   11cdc:	66860000 	strvs	r0, [r6], r0
   11ce0:	66820000 	strvs	r0, [r2], r0
   11ce4:	120f0000 	andne	r0, pc, #0
   11ce8:	0a10002f 	beq	411dac <__RAM_SIZE+0x311dac>
   11cec:	00000008 	andeq	r0, r0, r8
   11cf0:	29d50118 	ldmibcs	r5, {r3, r4, r8}^
   11cf4:	30010000 	andcc	r0, r1, r0
   11cf8:	00790105 	rsbseq	r0, r9, r5, lsl #2
   11cfc:	2f080000 	svccs	0x00080000
   11d00:	2f0c1000 	svccs	0x000c1000
   11d04:	7d021000 	stcvc	0, cr1, [r2, #-0]
   11d08:	01190100 	tsteq	r9, r0, lsl #2
   11d0c:	000028be 			; <UNDEFINED> instruction: 0x000028be
   11d10:	00062c01 	andeq	r2, r6, r1, lsl #24
   11d14:	00000000 	andeq	r0, r0, r0
   11d18:	02000000 	andeq	r0, r0, #0
   11d1c:	1a01007d 	bne	51f18 <SYSTICK_CYCLES+0x28ed9>
   11d20:	28160101 	ldmdacs	r6, {r0, r8}
   11d24:	28160000 	ldmdacs	r6, {}	; <UNPREDICTABLE>
   11d28:	0f090000 	svceq	0x00090000
   11d2c:	01011a0d 	tsteq	r1, sp, lsl #20
   11d30:	000029ba 			; <UNDEFINED> instruction: 0x000029ba
   11d34:	000029ba 			; <UNDEFINED> instruction: 0x000029ba
   11d38:	1a0c2301 	bne	31a944 <__RAM_SIZE+0x21a944>
   11d3c:	29220101 	stmdbcs	r2!, {r0, r8}
   11d40:	29220000 	stmdbcs	r2!, {}	; <UNPREDICTABLE>
   11d44:	24010000 	strcs	r0, [r1], #-0
   11d48:	0022000c 	eoreq	r0, r2, ip
   11d4c:	00020000 	andeq	r0, r2, r0
   11d50:	000033d6 	ldrdeq	r3, [r0], -r6
   11d54:	65800104 	strvs	r0, [r0, #260]	; 0x104
   11d58:	2f7c0000 	svccs	0x007c0000
   11d5c:	2fec1000 	svccs	0x00ec1000
   11d60:	2a301000 	bcs	c15d68 <__RAM_SIZE+0xb15d68>
   11d64:	065c0000 	ldrbeq	r0, [ip], -r0
   11d68:	2a500000 	bcs	1411d70 <__RAM_SIZE+0x1311d70>
   11d6c:	80010000 	andhi	r0, r1, r0
   11d70:	00000022 	andeq	r0, r0, r2, lsr #32
   11d74:	33ea0002 	mvncc	r0, #2
   11d78:	01040000 	mrseq	r0, (UNDEF: 4)
   11d7c:	00006606 	andeq	r6, r0, r6, lsl #12
   11d80:	10002fec 	andne	r2, r0, ip, ror #31
   11d84:	100030cc 	andne	r3, r0, ip, asr #1
   11d88:	00002a5e 	andeq	r2, r0, lr, asr sl
   11d8c:	0000065c 	andeq	r0, r0, ip, asr r6
   11d90:	00002a50 	andeq	r2, r0, r0, asr sl
   11d94:	00228001 	eoreq	r8, r2, r1
   11d98:	00020000 	andeq	r0, r2, r0
   11d9c:	000033fe 	strdeq	r3, [r0], -lr
   11da0:	66c50104 	strbvs	r0, [r5], r4, lsl #2
   11da4:	30cc0000 	sbccc	r0, ip, r0
   11da8:	319c1000 	orrscc	r1, ip, r0
   11dac:	2a861000 	bcs	fe195db4 <__RAM_segment_used_end__+0xc6095db4>
   11db0:	065c0000 	ldrbeq	r0, [ip], -r0
   11db4:	2a500000 	bcs	1411dbc <__RAM_SIZE+0x1311dbc>
   11db8:	80010000 	andhi	r0, r1, r0
   11dbc:	00000022 	andeq	r0, r0, r2, lsr #32
   11dc0:	34120002 	ldrcc	r0, [r2], #-2
   11dc4:	01040000 	mrseq	r0, (UNDEF: 4)
   11dc8:	00006796 	muleq	r0, r6, r7
   11dcc:	1000319c 	mulne	r0, ip, r1
   11dd0:	100031dc 	ldrdne	r3, [r0], -ip
   11dd4:	00002acd 	andeq	r2, r0, sp, asr #21
   11dd8:	0000065c 	andeq	r0, r0, ip, asr r6
   11ddc:	00002a50 	andeq	r2, r0, r0, asr sl
   11de0:	00228001 	eoreq	r8, r2, r1
   11de4:	00020000 	andeq	r0, r2, r0
   11de8:	00003426 	andeq	r3, r0, r6, lsr #8
   11dec:	68290104 	stmdavs	r9!, {r2, r8}
   11df0:	31dc0000 	bicscc	r0, ip, r0
   11df4:	32941000 	addscc	r1, r4, #0
   11df8:	2b171000 	blcs	5d5e00 <__RAM_SIZE+0x4d5e00>
   11dfc:	065c0000 	ldrbeq	r0, [ip], -r0
   11e00:	2a500000 	bcs	1411e08 <__RAM_SIZE+0x1311e08>
   11e04:	80010000 	andhi	r0, r1, r0

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
}
       8:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
       c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
      10:	00061001 	andeq	r1, r6, r1
      14:	00240200 	eoreq	r0, r4, r0, lsl #4
        if(ch == '\n' || it >= size) {
      18:	0b3e0b0b 	bleq	f82c4c <__RAM_SIZE+0xe82c4c>
}
      1c:	00000e03 	andeq	r0, r0, r3, lsl #28
      20:	0b002403 	bleq	9034 <_Min_Stack_Size+0x8034>
      24:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
      28:	04000008 	streq	r0, [r0], #-8
      2c:	0b0b000f 	bleq	2c0070 <__RAM_SIZE+0x1c0070>
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	26050000 	strcs	r0, [r5], -r0
      34:	00134900 	andseq	r4, r3, r0, lsl #18
        _tx_thread_system_ni_resume(thread_ptr);
      38:	00160600 	andseq	r0, r6, r0, lsl #12
      3c:	0b3a0e03 	bleq	e83850 <__RAM_SIZE+0xd83850>
}
      40:	0b390b3b 	bleq	e42d34 <__RAM_SIZE+0xd42d34>
      44:	00001349 	andeq	r1, r0, r9, asr #6
      48:	03011307 	movweq	r1, #4871	; 0x1307
      4c:	3a0b0b0e 	bcc	2c2c8c <__RAM_SIZE+0x1c2c8c>
      50:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      54:	0013010b 	andseq	r0, r3, fp, lsl #2
      58:	000d0800 	andeq	r0, sp, r0, lsl #16
      5c:	0b3a0e03 	bleq	e83870 <__RAM_SIZE+0xd83870>
      60:	0b39053b 	bleq	e41554 <__RAM_SIZE+0xd41554>
      64:	0a381349 	beq	e04d90 <__RAM_SIZE+0xd04d90>
      68:	15090000 	strne	r0, [r9, #-0]
      6c:	010c2701 	tsteq	ip, r1, lsl #14
      70:	0a000013 	beq	c4 <__STACKSEAL_SIZE+0xc4>
      74:	13490005 	movtne	r0, #36869	; 0x9005
      78:	0f0b0000 	svceq	0x000b0000
      7c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
      80:	0c000013 	stceq	0, cr0, [r0], {19}
      84:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
      88:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      8c:	13490b39 	movtne	r0, #39737	; 0x9b39
      90:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
      94:	030c3f01 	movweq	r3, #52993	; 0xcf01
      98:	3b0b3a0e 	blcc	2ce8d8 <__RAM_SIZE+0x1ce8d8>
      9c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
      a0:	1113490c 	tstne	r3, ip, lsl #18
      a4:	40011201 	andmi	r1, r1, r1, lsl #4
      a8:	0c429706 	mcrreq	7, 0, r9, r2, cr6
      ac:	00001301 	andeq	r1, r0, r1, lsl #6
      b0:	0300340e 	movweq	r3, #1038	; 0x40e
      b4:	3b0b3a0e 	blcc	2ce8f4 <__RAM_SIZE+0x1ce8f4>
      b8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
      bc:	b7060213 	smladlt	r6, r3, r2, r0
      c0:	00000642 	andeq	r0, r0, r2, asr #12
      c4:	0182890f 	orreq	r8, r2, pc, lsl #18
      c8:	31011100 	mrscc	r1, (UNDEF: 17)
      cc:	10000013 	andne	r0, r0, r3, lsl r0
      d0:	01018289 	smlabbeq	r1, r9, r2, r8
      d4:	13310111 	teqne	r1, #1073741828	; 0x40000004
      d8:	00001301 	andeq	r1, r0, r1, lsl #6
      dc:	01828a11 	orreq	r8, r2, r1, lsl sl
      e0:	910a0200 	mrsls	r0, R10_fiq
      e4:	00000a42 	andeq	r0, r0, r2, asr #20
      e8:	01828912 	orreq	r8, r2, r2, lsl r9
      ec:	31011101 	tstcc	r1, r1, lsl #2
      f0:	13000013 	movwne	r0, #19
      f4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 44 <__STACKSEAL_SIZE+0x44>
      f8:	0b3a0e03 	bleq	e8390c <__RAM_SIZE+0xd8390c>
      fc:	0b390b3b 	bleq	e42df0 <__RAM_SIZE+0xd42df0>
     100:	01110c27 	tsteq	r1, r7, lsr #24
     104:	06400112 			; <UNDEFINED> instruction: 0x06400112
     108:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     10c:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     110:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     114:	0b3b0b3a 	bleq	ec2e04 <__RAM_SIZE+0xdc2e04>
     118:	13490b39 	movtne	r0, #39737	; 0x9b39
     11c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     120:	15000006 	strne	r0, [r0, #-6]
     124:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     128:	0b3b0b3a 	bleq	ec2e18 <__RAM_SIZE+0xdc2e18>
     12c:	13490b39 	movtne	r0, #39737	; 0x9b39
     130:	00000a02 	andeq	r0, r0, r2, lsl #20
     134:	49010116 	stmdbmi	r1, {r1, r2, r4, r8}
     138:	00130113 	andseq	r0, r3, r3, lsl r1
     13c:	00211700 	eoreq	r1, r1, r0, lsl #14
     140:	052f1349 	streq	r1, [pc, #-841]!	; fffffdff <__RAM_segment_used_end__+0xc7effdff>
     144:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
     148:	3a0e0301 	bcc	380d54 <__RAM_SIZE+0x280d54>
     14c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     150:	110c270b 	tstne	ip, fp, lsl #14
     154:	40011201 	andmi	r1, r1, r1, lsl #4
     158:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     15c:	00001301 	andeq	r1, r0, r1, lsl #6
     160:	03003419 	movweq	r3, #1049	; 0x419
     164:	3413490e 	ldrcc	r4, [r3], #-2318	; 0xfffff6f2
     168:	000a020c 	andeq	r0, sl, ip, lsl #4
     16c:	00211a00 	eoreq	r1, r1, r0, lsl #20
     170:	0b2f1349 	bleq	bc4e9c <__RAM_SIZE+0xac4e9c>
     174:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
     178:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     17c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     180:	0b3a0e03 	bleq	e83994 <__RAM_SIZE+0xd83994>
     184:	0b390b3b 	bleq	e42e78 <__RAM_SIZE+0xd42e78>
     188:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
     18c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     190:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     194:	0b3a0e03 	bleq	e839a8 <__RAM_SIZE+0xd839a8>
     198:	00000b3b 	andeq	r0, r0, fp, lsr fp
     19c:	3f002e1d 	svccc	0x00002e1d
     1a0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     1a4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     1a8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     1ac:	00000b39 	andeq	r0, r0, r9, lsr fp
     1b0:	01110100 	tsteq	r1, r0, lsl #2
     1b4:	0b130e25 	bleq	4c3a50 <__RAM_SIZE+0x3c3a50>
     1b8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     1bc:	01110655 	tsteq	r1, r5, asr r6
     1c0:	06100152 			; <UNDEFINED> instruction: 0x06100152
     1c4:	24020000 	strcs	r0, [r2], #-0
     1c8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     1cc:	000e030b 	andeq	r0, lr, fp, lsl #6
     1d0:	00160300 	andseq	r0, r6, r0, lsl #6
     1d4:	0b3a0e03 	bleq	e839e8 <__RAM_SIZE+0xd839e8>
     1d8:	0b390b3b 	bleq	e42ecc <__RAM_SIZE+0xd42ecc>
     1dc:	00001349 	andeq	r1, r0, r9, asr #6
     1e0:	0b002404 	bleq	91f8 <_Min_Stack_Size+0x81f8>
     1e4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     1e8:	05000008 	streq	r0, [r0, #-8]
     1ec:	13490035 	movtne	r0, #36917	; 0x9035
     1f0:	26060000 	strcs	r0, [r6], -r0
     1f4:	00134900 	andseq	r4, r3, r0, lsl #18
     1f8:	01130700 	tsteq	r3, r0, lsl #14
     1fc:	0b3a050b 	bleq	e81630 <__RAM_SIZE+0xd81630>
     200:	0b39053b 	bleq	e416f4 <__RAM_SIZE+0xd416f4>
     204:	00001301 	andeq	r1, r0, r1, lsl #6
     208:	03000d08 	movweq	r0, #3336	; 0xd08
     20c:	3b0b3a0e 	blcc	2cea4c <__RAM_SIZE+0x1cea4c>
     210:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     214:	000a3813 	andeq	r3, sl, r3, lsl r8
     218:	000d0900 	andeq	r0, sp, r0, lsl #18
     21c:	0b3a0803 	bleq	e82230 <__RAM_SIZE+0xd82230>
     220:	0b39053b 	bleq	e41714 <__RAM_SIZE+0xd41714>
     224:	0a381349 	beq	e04f50 <__RAM_SIZE+0xd04f50>
     228:	010a0000 	mrseq	r0, (UNDEF: 10)
     22c:	01134901 	tsteq	r3, r1, lsl #18
     230:	0b000013 	bleq	284 <__STACKSEAL_SIZE+0x284>
     234:	13490021 	movtne	r0, #36897	; 0x9021
     238:	00000b2f 	andeq	r0, r0, pc, lsr #22
     23c:	0300160c 	movweq	r1, #1548	; 0x60c
     240:	3b0b3a0e 	blcc	2cea80 <__RAM_SIZE+0x1cea80>
     244:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     248:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     24c:	0b0b000f 	bleq	2c0290 <__RAM_SIZE+0x1c0290>
     250:	00001349 	andeq	r1, r0, r9, asr #6
     254:	2700150e 	strcs	r1, [r0, -lr, lsl #10]
     258:	0f00000c 	svceq	0x0000000c
     25c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     260:	0b3b0b3a 	bleq	ec2f50 <__RAM_SIZE+0xdc2f50>
     264:	13490b39 	movtne	r0, #39737	; 0x9b39
     268:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     26c:	21100000 	tstcs	r0, r0
     270:	2f134900 	svccs	0x00134900
     274:	11000005 	tstne	r0, r5
     278:	13470034 	movtne	r0, #28724	; 0x7034
     27c:	0b3b0b3a 	bleq	ec2f6c <__RAM_SIZE+0xdc2f6c>
     280:	0a020b39 	beq	82f6c <SYSTICK_CYCLES+0x59f2d>
     284:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
     288:	030c3f00 	movweq	r3, #52992	; 0xcf00
     28c:	3b0b3a0e 	blcc	2ceacc <__RAM_SIZE+0x1ceacc>
     290:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     294:	1201110c 	andne	r1, r1, #12, 2
     298:	970a4001 	strls	r4, [sl, -r1]
     29c:	00000c42 	andeq	r0, r0, r2, asr #24
     2a0:	01110100 	tsteq	r1, r0, lsl #2
     2a4:	0b130e25 	bleq	4c3b40 <__RAM_SIZE+0x3c3b40>
     2a8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     2ac:	01110655 	tsteq	r1, r5, asr r6
     2b0:	06100152 			; <UNDEFINED> instruction: 0x06100152
     2b4:	24020000 	strcs	r0, [r2], #-0
     2b8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     2bc:	000e030b 	andeq	r0, lr, fp, lsl #6
     2c0:	00260300 	eoreq	r0, r6, r0, lsl #6
     2c4:	00001349 	andeq	r1, r0, r9, asr #6
     2c8:	03001604 	movweq	r1, #1540	; 0x604
     2cc:	3b0b3a0e 	blcc	2ceb0c <__RAM_SIZE+0x1ceb0c>
     2d0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     2d4:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     2d8:	0b0b0024 	bleq	2c0370 <__RAM_SIZE+0x1c0370>
     2dc:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     2e0:	13060000 	movwne	r0, #24576	; 0x6000
     2e4:	0b0e0301 	bleq	380ef0 <__RAM_SIZE+0x280ef0>
     2e8:	3b0b3a0b 	blcc	2ceb1c <__RAM_SIZE+0x1ceb1c>
     2ec:	0013010b 	andseq	r0, r3, fp, lsl #2
     2f0:	000d0700 	andeq	r0, sp, r0, lsl #14
     2f4:	13490e03 	movtne	r0, #40451	; 0x9e03
     2f8:	0c340a38 			; <UNDEFINED> instruction: 0x0c340a38
     2fc:	0f080000 	svceq	0x00080000
     300:	000b0b00 	andeq	r0, fp, r0, lsl #22
     304:	000f0900 	andeq	r0, pc, r0, lsl #18
     308:	13490b0b 	movtne	r0, #39691	; 0x9b0b
     30c:	150a0000 	strne	r0, [sl, #-0]
     310:	010c2701 	tsteq	ip, r1, lsl #14
     314:	0b000013 	bleq	368 <__STACKSEAL_SIZE+0x368>
     318:	13490005 	movtne	r0, #36869	; 0x9005
     31c:	130c0000 	movwne	r0, #49152	; 0xc000
     320:	3a0b0b01 	bcc	2c2f2c <__RAM_SIZE+0x1c2f2c>
     324:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     328:	0013010b 	andseq	r0, r3, fp, lsl #2
     32c:	000d0d00 	andeq	r0, sp, r0, lsl #26
     330:	0b3a0803 	bleq	e82344 <__RAM_SIZE+0xd82344>
     334:	0b390b3b 	bleq	e43028 <__RAM_SIZE+0xd43028>
     338:	0a381349 	beq	e05064 <__RAM_SIZE+0xd05064>
     33c:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
     340:	030c3f01 	movweq	r3, #52993	; 0xcf01
     344:	3b0b3a0e 	blcc	2ceb84 <__RAM_SIZE+0x1ceb84>
     348:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     34c:	1113490c 	tstne	r3, ip, lsl #18
     350:	40011201 	andmi	r1, r1, r1, lsl #4
     354:	0c429706 	mcrreq	7, 0, r9, r2, cr6
     358:	00001301 	andeq	r1, r0, r1, lsl #6
     35c:	0300050f 	movweq	r0, #1295	; 0x50f
     360:	3b0b3a08 	blcc	2ceb88 <__RAM_SIZE+0x1ceb88>
     364:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     368:	b7060213 	smladlt	r6, r3, r2, r0
     36c:	00000642 	andeq	r0, r0, r2, asr #12
     370:	03000510 	movweq	r0, #1296	; 0x510
     374:	3b0b3a0e 	blcc	2cebb4 <__RAM_SIZE+0x1cebb4>
     378:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     37c:	000a0213 	andeq	r0, sl, r3, lsl r2
     380:	00181100 	andseq	r1, r8, r0, lsl #2
     384:	34120000 	ldrcc	r0, [r2], #-0
     388:	3a080300 	bcc	200f90 <__RAM_SIZE+0x100f90>
     38c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     390:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     394:	1300000a 	movwne	r0, #10
     398:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     39c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     3a0:	13490b39 	movtne	r0, #39737	; 0x9b39
     3a4:	00000a02 	andeq	r0, r0, r2, lsl #20
     3a8:	03003414 	movweq	r3, #1044	; 0x414
     3ac:	3b0b3a08 	blcc	2cebd4 <__RAM_SIZE+0x1cebd4>
     3b0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     3b4:	b7060213 	smladlt	r6, r3, r2, r0
     3b8:	00000642 	andeq	r0, r0, r2, asr #12
     3bc:	01828915 	orreq	r8, r2, r5, lsl r9
     3c0:	31011101 	tstcc	r1, r1, lsl #2
     3c4:	16000013 			; <UNDEFINED> instruction: 0x16000013
     3c8:	0001828a 	andeq	r8, r1, sl, lsl #5
     3cc:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
     3d0:	1700000a 	strne	r0, [r0, -sl]
     3d4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     3d8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     3dc:	13490b39 	movtne	r0, #39737	; 0x9b39
     3e0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     3e4:	18000006 	stmdane	r0, {r1, r2}
     3e8:	13490101 	movtne	r0, #37121	; 0x9101
     3ec:	00001301 	andeq	r1, r0, r1, lsl #6
     3f0:	49002119 	stmdbmi	r0, {r0, r3, r4, r8, sp}
     3f4:	000b2f13 	andeq	r2, fp, r3, lsl pc
     3f8:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     3fc:	0b3a0e03 	bleq	e83c10 <__RAM_SIZE+0xd83c10>
     400:	0b39053b 	bleq	e418f4 <__RAM_SIZE+0xd418f4>
     404:	13490c27 	movtne	r0, #39975	; 0x9c27
     408:	01120111 	tsteq	r2, r1, lsl r1
     40c:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     410:	0013010c 	andseq	r0, r3, ip, lsl #2
     414:	00051b00 	andeq	r1, r5, r0, lsl #22
     418:	0b3a0803 	bleq	e8242c <__RAM_SIZE+0xd8242c>
     41c:	0b39053b 	bleq	e41910 <__RAM_SIZE+0xd41910>
     420:	0a021349 	beq	8514c <SYSTICK_CYCLES+0x5c10d>
     424:	341c0000 	ldrcc	r0, [ip], #-0
     428:	3a0e0300 	bcc	381030 <__RAM_SIZE+0x281030>
     42c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     430:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     434:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     438:	0b1d0000 	bleq	740440 <__RAM_SIZE+0x640440>
     43c:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
     440:	00130101 	andseq	r0, r3, r1, lsl #2
     444:	010b1e00 	tsteq	fp, r0, lsl #28
     448:	13010655 	movwne	r0, #5717	; 0x1655
     44c:	341f0000 	ldrcc	r0, [pc], #-0	; 454 <STACK_SIZE+0x54>
     450:	3a0e0300 	bcc	381058 <__RAM_SIZE+0x281058>
     454:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     458:	0013490b 	andseq	r4, r3, fp, lsl #18
     45c:	82892000 	addhi	r2, r9, #0
     460:	01110101 	tsteq	r1, r1, lsl #2
     464:	13011331 	movwne	r1, #4913	; 0x1331
     468:	89210000 	stmdbhi	r1!, {}	; <UNPREDICTABLE>
     46c:	11010182 	smlabbne	r1, r2, r1, r0
     470:	00130101 	andseq	r0, r3, r1, lsl #2
     474:	82892200 	addhi	r2, r9, #0, 4
     478:	01110101 	tsteq	r1, r1, lsl #2
     47c:	1d230000 	stcne	0, cr0, [r3, #-0]
     480:	11133101 	tstne	r3, r1, lsl #2
     484:	58011201 	stmdapl	r1, {r0, r9, ip}
     488:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     48c:	0013010b 	andseq	r0, r3, fp, lsl #2
     490:	00052400 	andeq	r2, r5, r0, lsl #8
     494:	06021331 			; <UNDEFINED> instruction: 0x06021331
     498:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     49c:	00052500 	andeq	r2, r5, r0, lsl #10
     4a0:	00001331 	andeq	r1, r0, r1, lsr r3
     4a4:	31003426 	tstcc	r0, r6, lsr #8
     4a8:	b7060213 	smladlt	r6, r3, r2, r0
     4ac:	00000642 	andeq	r0, r0, r2, asr #12
     4b0:	31011d27 	tstcc	r1, r7, lsr #26
     4b4:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
     4b8:	01110542 	tsteq	r1, r2, asr #10
     4bc:	0b580112 	bleq	160090c <__RAM_SIZE+0x150090c>
     4c0:	0b570559 	bleq	15c1a2c <__RAM_SIZE+0x14c1a2c>
     4c4:	00001301 	andeq	r1, r0, r1, lsl #6
     4c8:	01828928 	orreq	r8, r2, r8, lsr #18
     4cc:	93011101 	movwls	r1, #4353	; 0x1101
     4d0:	13010a42 	movwne	r0, #6722	; 0x1a42
     4d4:	17290000 	strne	r0, [r9, -r0]!
     4d8:	3a0b0b01 	bcc	2c30e4 <__RAM_SIZE+0x1c30e4>
     4dc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     4e0:	0013010b 	andseq	r0, r3, fp, lsl #2
     4e4:	000d2a00 	andeq	r2, sp, r0, lsl #20
     4e8:	0b3a0803 	bleq	e824fc <__RAM_SIZE+0xd824fc>
     4ec:	0b39053b 	bleq	e419e0 <__RAM_SIZE+0xd419e0>
     4f0:	00001349 	andeq	r1, r0, r9, asr #6
     4f4:	0182892b 	orreq	r8, r2, fp, lsr #18
     4f8:	31011100 	mrscc	r1, (UNDEF: 17)
     4fc:	2c000013 	stccs	0, cr0, [r0], {19}
     500:	0e03012e 	adfeqsp	f0, f3, #0.5
     504:	0b3b0b3a 	bleq	ec31f4 <__RAM_SIZE+0xdc31f4>
     508:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     50c:	01111349 	tsteq	r1, r9, asr #6
     510:	06400112 			; <UNDEFINED> instruction: 0x06400112
     514:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     518:	2d000013 	stccs	0, cr0, [r0, #-76]	; 0xffffffb4
     51c:	08030005 	stmdaeq	r3, {r0, r2}
     520:	0b3b0b3a 	bleq	ec3210 <__RAM_SIZE+0xdc3210>
     524:	13490b39 	movtne	r0, #39737	; 0x9b39
     528:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     52c:	2e000006 	cdpcs	0, 0, cr0, cr0, cr6, {0}
     530:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     534:	0b3b0b3a 	bleq	ec3224 <__RAM_SIZE+0xdc3224>
     538:	13490b39 	movtne	r0, #39737	; 0x9b39
     53c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     540:	2f000006 	svccs	0x00000006
     544:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     548:	0b3b0b3a 	bleq	ec3238 <__RAM_SIZE+0xdc3238>
     54c:	13490b39 	movtne	r0, #39737	; 0x9b39
     550:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     554:	30000006 	andcc	r0, r0, r6
     558:	08030034 	stmdaeq	r3, {r2, r4, r5}
     55c:	0b3b0b3a 	bleq	ec324c <__RAM_SIZE+0xdc324c>
     560:	13490b39 	movtne	r0, #39737	; 0x9b39
     564:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     568:	31000006 	tstcc	r0, r6
     56c:	0e03012e 	adfeqsp	f0, f3, #0.5
     570:	0b3b0b3a 	bleq	ec3260 <__RAM_SIZE+0xdc3260>
     574:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     578:	01111349 	tsteq	r1, r9, asr #6
     57c:	0a400112 	beq	10009cc <__RAM_SIZE+0xf009cc>
     580:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     584:	32000013 	andcc	r0, r0, #19
     588:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     58c:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     590:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
     594:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     598:	000b570b 	andeq	r5, fp, fp, lsl #14
     59c:	012e3300 			; <UNDEFINED> instruction: 0x012e3300
     5a0:	0b3a0e03 	bleq	e83db4 <__RAM_SIZE+0xd83db4>
     5a4:	0b390b3b 	bleq	e43298 <__RAM_SIZE+0xd43298>
     5a8:	13490c27 	movtne	r0, #39975	; 0x9c27
     5ac:	13010b20 	movwne	r0, #6944	; 0x1b20
     5b0:	05340000 	ldreq	r0, [r4, #-0]!
     5b4:	3a080300 	bcc	2011bc <__RAM_SIZE+0x1011bc>
     5b8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     5bc:	0013490b 	andseq	r4, r3, fp, lsl #18
     5c0:	00053500 	andeq	r3, r5, r0, lsl #10
     5c4:	0b3a0e03 	bleq	e83dd8 <__RAM_SIZE+0xd83dd8>
     5c8:	0b390b3b 	bleq	e432bc <__RAM_SIZE+0xd432bc>
     5cc:	00001349 	andeq	r1, r0, r9, asr #6
     5d0:	03003436 	movweq	r3, #1078	; 0x436
     5d4:	3b0b3a08 	blcc	2cedfc <__RAM_SIZE+0x1cedfc>
     5d8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     5dc:	37000013 	smladcc	r0, r3, r0, r0
     5e0:	0e03012e 	adfeqsp	f0, f3, #0.5
     5e4:	0b3b0b3a 	bleq	ec32d4 <__RAM_SIZE+0xdc32d4>
     5e8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     5ec:	01120111 	tsteq	r2, r1, lsl r1
     5f0:	42960640 	addsmi	r0, r6, #64, 12	; 0x4000000
     5f4:	0013010c 	andseq	r0, r3, ip, lsl #2
     5f8:	012e3800 			; <UNDEFINED> instruction: 0x012e3800
     5fc:	0b3a0e03 	bleq	e83e10 <__RAM_SIZE+0xd83e10>
     600:	0b390b3b 	bleq	e432f4 <__RAM_SIZE+0xd432f4>
     604:	01110c27 	tsteq	r1, r7, lsr #24
     608:	06400112 			; <UNDEFINED> instruction: 0x06400112
     60c:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     610:	39000013 	stmdbcc	r0, {r0, r1, r4}
     614:	0e03012e 	adfeqsp	f0, f3, #0.5
     618:	0b3b0b3a 	bleq	ec3308 <__RAM_SIZE+0xdc3308>
     61c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     620:	01120111 	tsteq	r2, r1, lsl r1
     624:	42970a40 	addsmi	r0, r7, #64, 20	; 0x40000
     628:	0013010c 	andseq	r0, r3, ip, lsl #2
     62c:	00053a00 	andeq	r3, r5, r0, lsl #20
     630:	0b3a0e03 	bleq	e83e44 <__RAM_SIZE+0xd83e44>
     634:	0b390b3b 	bleq	e43328 <__RAM_SIZE+0xd43328>
     638:	0a021349 	beq	85364 <SYSTICK_CYCLES+0x5c325>
     63c:	053b0000 	ldreq	r0, [fp, #-0]!
     640:	3a080300 	bcc	201248 <__RAM_SIZE+0x101248>
     644:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     648:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     64c:	3c00000a 	stccc	0, cr0, [r0], {10}
     650:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 5a0 <STACK_SIZE+0x1a0>
     654:	40870c3c 	addmi	r0, r7, ip, lsr ip
     658:	000e030e 	andeq	r0, lr, lr, lsl #6
     65c:	002e3d00 	eoreq	r3, lr, r0, lsl #26
     660:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     664:	030e4087 	movweq	r4, #57479	; 0xe087
     668:	3b0b3a0e 	blcc	2ceea8 <__RAM_SIZE+0x1ceea8>
     66c:	000b390b 	andeq	r3, fp, fp, lsl #18
     670:	11010000 	mrsne	r0, (UNDEF: 1)
     674:	130e2501 	movwne	r2, #58625	; 0xe501
     678:	1b0e030b 	blne	3812ac <__RAM_SIZE+0x2812ac>
     67c:	1106550e 	tstne	r6, lr, lsl #10
     680:	10015201 	andne	r5, r1, r1, lsl #4
     684:	02000006 	andeq	r0, r0, #6
     688:	0b0b0024 	bleq	2c0720 <__RAM_SIZE+0x1c0720>
     68c:	0e030b3e 	vmoveq.16	d3[0], r0
     690:	16030000 	strne	r0, [r3], -r0
     694:	3a0e0300 	bcc	38129c <__RAM_SIZE+0x28129c>
     698:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     69c:	0013490b 	andseq	r4, r3, fp, lsl #18
     6a0:	00240400 	eoreq	r0, r4, r0, lsl #8
     6a4:	0b3e0b0b 	bleq	f832d8 <__RAM_SIZE+0xe832d8>
     6a8:	00000803 	andeq	r0, r0, r3, lsl #16
     6ac:	49002605 	stmdbmi	r0, {r0, r2, r9, sl, sp}
     6b0:	06000013 			; <UNDEFINED> instruction: 0x06000013
     6b4:	0b0b000f 	bleq	2c06f8 <__RAM_SIZE+0x1c06f8>
     6b8:	00001349 	andeq	r1, r0, r9, asr #6
     6bc:	3f012e07 	svccc	0x00012e07
     6c0:	3a0e030c 	bcc	3812f8 <__RAM_SIZE+0x2812f8>
     6c4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6c8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     6cc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     6d0:	97064001 	strls	r4, [r6, -r1]
     6d4:	13010c42 	movwne	r0, #7234	; 0x1c42
     6d8:	05080000 	streq	r0, [r8, #-0]
     6dc:	3a0e0300 	bcc	3812e4 <__RAM_SIZE+0x2812e4>
     6e0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6e4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     6e8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     6ec:	34090000 	strcc	r0, [r9], #-0
     6f0:	3a080300 	bcc	2012f8 <__RAM_SIZE+0x1012f8>
     6f4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6f8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     6fc:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     700:	890a0000 	stmdbhi	sl, {}	; <UNPREDICTABLE>
     704:	11000182 	smlabbne	r0, r2, r1, r0
     708:	00133101 	andseq	r3, r3, r1, lsl #2
     70c:	012e0b00 			; <UNDEFINED> instruction: 0x012e0b00
     710:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     714:	0b3b0b3a 	bleq	ec3404 <__RAM_SIZE+0xdc3404>
     718:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     71c:	01120111 	tsteq	r2, r1, lsl r1
     720:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     724:	0013010c 	andseq	r0, r3, ip, lsl #2
     728:	82890c00 	addhi	r0, r9, #0, 24
     72c:	01110101 	tsteq	r1, r1, lsl #2
     730:	00001331 	andeq	r1, r0, r1, lsr r3
     734:	01828a0d 	orreq	r8, r2, sp, lsl #20
     738:	910a0200 	mrsls	r0, R10_fiq
     73c:	00000a42 	andeq	r0, r0, r2, asr #20
     740:	3f002e0e 	svccc	0x00002e0e
     744:	3a0e030c 	bcc	38137c <__RAM_SIZE+0x28137c>
     748:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     74c:	110c270b 	tstne	ip, fp, lsl #14
     750:	40011201 	andmi	r1, r1, r1, lsl #4
     754:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     758:	340f0000 	strcc	r0, [pc], #-0	; 760 <STACK_SIZE+0x360>
     75c:	3a0e0300 	bcc	381364 <__RAM_SIZE+0x281364>
     760:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     764:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     768:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     76c:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
     770:	030c3f00 	movweq	r3, #52992	; 0xcf00
     774:	3b0b3a0e 	blcc	2cefb4 <__RAM_SIZE+0x1cefb4>
     778:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     77c:	1113490c 	tstne	r3, ip, lsl #18
     780:	40011201 	andmi	r1, r1, r1, lsl #4
     784:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     788:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     78c:	030c3f01 	movweq	r3, #52993	; 0xcf01
     790:	3b0b3a0e 	blcc	2cefd0 <__RAM_SIZE+0x1cefd0>
     794:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
     798:	1113490c 	tstne	r3, ip, lsl #18
     79c:	40011201 	andmi	r1, r1, r1, lsl #4
     7a0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
     7a4:	00001301 	andeq	r1, r0, r1, lsl #6
     7a8:	03000512 	movweq	r0, #1298	; 0x512
     7ac:	3b0b3a08 	blcc	2cefd4 <__RAM_SIZE+0x1cefd4>
     7b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     7b4:	b7060213 	smladlt	r6, r3, r2, r0
     7b8:	00000642 	andeq	r0, r0, r2, asr #12
     7bc:	3f002e13 	svccc	0x00002e13
     7c0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
     7c4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
     7c8:	0b3b0b3a 	bleq	ec34b8 <__RAM_SIZE+0xdc34b8>
     7cc:	00000b39 	andeq	r0, r0, r9, lsr fp
     7d0:	01110100 	tsteq	r1, r0, lsl #2
     7d4:	0b130e25 	bleq	4c4070 <__RAM_SIZE+0x3c4070>
     7d8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     7dc:	01110655 	tsteq	r1, r5, asr r6
     7e0:	06100152 			; <UNDEFINED> instruction: 0x06100152
     7e4:	24020000 	strcs	r0, [r2], #-0
     7e8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     7ec:	000e030b 	andeq	r0, lr, fp, lsl #6
     7f0:	00240300 	eoreq	r0, r4, r0, lsl #6
     7f4:	0b3e0b0b 	bleq	f83428 <__RAM_SIZE+0xe83428>
     7f8:	00000803 	andeq	r0, r0, r3, lsl #16
     7fc:	0b000f04 	bleq	4414 <_Min_Stack_Size+0x3414>
     800:	0500000b 	streq	r0, [r0, #-11]
     804:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     808:	0b3b0b3a 	bleq	ec34f8 <__RAM_SIZE+0xdc34f8>
     80c:	13490b39 	movtne	r0, #39737	; 0x9b39
     810:	13060000 	movwne	r0, #24576	; 0x6000
     814:	0b0e0301 	bleq	381420 <__RAM_SIZE+0x281420>
     818:	3b0b3a0b 	blcc	2cf04c <__RAM_SIZE+0x1cf04c>
     81c:	010b3905 	tsteq	fp, r5, lsl #18
     820:	07000013 	smladeq	r0, r3, r0, r0
     824:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     828:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     82c:	13490b39 	movtne	r0, #39737	; 0x9b39
     830:	00000a38 	andeq	r0, r0, r8, lsr sl
     834:	27011508 	strcs	r1, [r1, -r8, lsl #10]
     838:	0013010c 	andseq	r0, r3, ip, lsl #2
     83c:	00050900 	andeq	r0, r5, r0, lsl #18
     840:	00001349 	andeq	r1, r0, r9, asr #6
     844:	0b000f0a 	bleq	4474 <_Min_Stack_Size+0x3474>
     848:	0013490b 	andseq	r4, r3, fp, lsl #18
     84c:	00160b00 	andseq	r0, r6, r0, lsl #22
     850:	0b3a0e03 	bleq	e84064 <__RAM_SIZE+0xd84064>
     854:	0b39053b 	bleq	e41d48 <__RAM_SIZE+0xd41d48>
     858:	00001349 	andeq	r1, r0, r9, asr #6
     85c:	3f012e0c 	svccc	0x00012e0c
     860:	3a0e030c 	bcc	381498 <__RAM_SIZE+0x281498>
     864:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     868:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
     86c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     870:	97064001 	strls	r4, [r6, -r1]
     874:	13010c42 	movwne	r0, #7234	; 0x1c42
     878:	050d0000 	streq	r0, [sp, #-0]
     87c:	3a0e0300 	bcc	381484 <__RAM_SIZE+0x281484>
     880:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     884:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     888:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     88c:	340e0000 	strcc	r0, [lr], #-0
     890:	3a0e0300 	bcc	381498 <__RAM_SIZE+0x281498>
     894:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     898:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     89c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     8a0:	1d0f0000 	stcne	0, cr0, [pc, #-0]	; 8a8 <__Vectors_Size+0xe8>
     8a4:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     8a8:	0b42b801 	bleq	10ae8b4 <__RAM_SIZE+0xfae8b4>
     8ac:	01120111 	tsteq	r2, r1, lsl r1
     8b0:	0b590b58 	bleq	1643618 <__RAM_SIZE+0x1543618>
     8b4:	13010b57 	movwne	r0, #6999	; 0x1b57
     8b8:	34100000 	ldrcc	r0, [r0], #-0
     8bc:	02133100 	andseq	r3, r3, #0, 2
     8c0:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
     8c4:	1d110000 	ldcne	0, cr0, [r1, #-0]
     8c8:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
     8cc:	0b42b801 	bleq	10ae8d8 <__RAM_SIZE+0xfae8d8>
     8d0:	01120111 	tsteq	r2, r1, lsl r1
     8d4:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
     8d8:	00000b57 	andeq	r0, r0, r7, asr fp
     8dc:	31000512 	tstcc	r0, r2, lsl r5
     8e0:	b7060213 	smladlt	r6, r3, r2, r0
     8e4:	00000642 	andeq	r0, r0, r2, asr #12
     8e8:	01828913 	orreq	r8, r2, r3, lsl r9
     8ec:	31011100 	mrscc	r1, (UNDEF: 17)
     8f0:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     8f4:	0e03012e 	adfeqsp	f0, f3, #0.5
     8f8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     8fc:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     900:	0b201349 	bleq	80562c <__RAM_SIZE+0x70562c>
     904:	00001301 	andeq	r1, r0, r1, lsl #6
     908:	03003415 	movweq	r3, #1045	; 0x415
     90c:	3b0b3a0e 	blcc	2cf14c <__RAM_SIZE+0x1cf14c>
     910:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     914:	16000013 			; <UNDEFINED> instruction: 0x16000013
     918:	0e03012e 	adfeqsp	f0, f3, #0.5
     91c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     920:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     924:	13010b20 	movwne	r0, #6944	; 0x1b20
     928:	05170000 	ldreq	r0, [r7, #-0]
     92c:	3a0e0300 	bcc	381534 <__RAM_SIZE+0x281534>
     930:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     934:	0013490b 	andseq	r4, r3, fp, lsl #18
     938:	002e1800 	eoreq	r1, lr, r0, lsl #16
     93c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
     940:	030e4087 	movweq	r4, #57479	; 0xe087
     944:	3b0b3a0e 	blcc	2cf184 <__RAM_SIZE+0x1cf184>
     948:	000b3905 	andeq	r3, fp, r5, lsl #18
     94c:	11010000 	mrsne	r0, (UNDEF: 1)
     950:	130e2501 	movwne	r2, #58625	; 0xe501
     954:	1b0e030b 	blne	381588 <__RAM_SIZE+0x281588>
     958:	1106550e 	tstne	r6, lr, lsl #10
     95c:	10015201 	andne	r5, r1, r1, lsl #4
     960:	02000006 	andeq	r0, r0, #6
     964:	0b0b0024 	bleq	2c09fc <__RAM_SIZE+0x1c09fc>
     968:	0e030b3e 	vmoveq.16	d3[0], r0
     96c:	24030000 	strcs	r0, [r3], #-0
     970:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     974:	0008030b 	andeq	r0, r8, fp, lsl #6
     978:	000f0400 	andeq	r0, pc, r0, lsl #8
     97c:	00000b0b 	andeq	r0, r0, fp, lsl #22
     980:	03001605 	movweq	r1, #1541	; 0x605
     984:	3b0b3a0e 	blcc	2cf1c4 <__RAM_SIZE+0x1cf1c4>
     988:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
     98c:	06000013 			; <UNDEFINED> instruction: 0x06000013
     990:	13490035 	movtne	r0, #36917	; 0x9035
     994:	13070000 	movwne	r0, #28672	; 0x7000
     998:	0b0e0301 	bleq	3815a4 <__RAM_SIZE+0x2815a4>
     99c:	3b0b3a0b 	blcc	2cf1d0 <__RAM_SIZE+0x1cf1d0>
     9a0:	010b3905 	tsteq	fp, r5, lsl #18
     9a4:	08000013 	stmdaeq	r0, {r0, r1, r4}
     9a8:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     9ac:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     9b0:	13490b39 	movtne	r0, #39737	; 0x9b39
     9b4:	00000a38 	andeq	r0, r0, r8, lsr sl
     9b8:	27011509 	strcs	r1, [r1, -r9, lsl #10]
     9bc:	0013010c 	andseq	r0, r3, ip, lsl #2
     9c0:	00050a00 	andeq	r0, r5, r0, lsl #20
     9c4:	00001349 	andeq	r1, r0, r9, asr #6
     9c8:	0b000f0b 	bleq	45fc <_Min_Stack_Size+0x35fc>
     9cc:	0013490b 	andseq	r4, r3, fp, lsl #18
     9d0:	00160c00 	andseq	r0, r6, r0, lsl #24
     9d4:	0b3a0e03 	bleq	e841e8 <__RAM_SIZE+0xd841e8>
     9d8:	0b39053b 	bleq	e41ecc <__RAM_SIZE+0xd41ecc>
     9dc:	00001349 	andeq	r1, r0, r9, asr #6
     9e0:	0300340d 	movweq	r3, #1037	; 0x40d
     9e4:	3b0b3a0e 	blcc	2cf224 <__RAM_SIZE+0x1cf224>
     9e8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     9ec:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     9f0:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
     9f4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 944 <__Vectors_Size+0x184>
     9f8:	0b3a0e03 	bleq	e8420c <__RAM_SIZE+0xd8420c>
     9fc:	0b390b3b 	bleq	e436f0 <__RAM_SIZE+0xd436f0>
     a00:	13490c27 	movtne	r0, #39975	; 0x9c27
     a04:	01120111 	tsteq	r2, r1, lsl r1
     a08:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     a0c:	0013010c 	andseq	r0, r3, ip, lsl #2
     a10:	00050f00 	andeq	r0, r5, r0, lsl #30
     a14:	0b3a0e03 	bleq	e84228 <__RAM_SIZE+0xd84228>
     a18:	0b390b3b 	bleq	e4370c <__RAM_SIZE+0xd4370c>
     a1c:	06021349 	streq	r1, [r2], -r9, asr #6
     a20:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     a24:	00341000 	eorseq	r1, r4, r0
     a28:	0b3a0e03 	bleq	e8423c <__RAM_SIZE+0xd8423c>
     a2c:	0b390b3b 	bleq	e43720 <__RAM_SIZE+0xd43720>
     a30:	06021349 	streq	r1, [r2], -r9, asr #6
     a34:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     a38:	011d1100 	tsteq	sp, r0, lsl #2
     a3c:	01521331 	cmpeq	r2, r1, lsr r3
     a40:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     a44:	58011201 	stmdapl	r1, {r0, r9, ip}
     a48:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     a4c:	0013010b 	andseq	r0, r3, fp, lsl #2
     a50:	00341200 	eorseq	r1, r4, r0, lsl #4
     a54:	06021331 			; <UNDEFINED> instruction: 0x06021331
     a58:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     a5c:	011d1300 	tsteq	sp, r0, lsl #6
     a60:	01521331 	cmpeq	r2, r1, lsr r3
     a64:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     a68:	58011201 	stmdapl	r1, {r0, r9, ip}
     a6c:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     a70:	1400000b 	strne	r0, [r0], #-11
     a74:	13310005 	teqne	r1, #5
     a78:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     a7c:	15000006 	strne	r0, [r0, #-6]
     a80:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     a84:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     a88:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     a8c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     a90:	010b5705 	tsteq	fp, r5, lsl #14
     a94:	16000013 			; <UNDEFINED> instruction: 0x16000013
     a98:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     a9c:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     aa0:	5806550b 	stmdapl	r6, {r0, r1, r3, r8, sl, ip, lr}
     aa4:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     aa8:	0013010b 	andseq	r0, r3, fp, lsl #2
     aac:	82891700 	addhi	r1, r9, #0, 14
     ab0:	01110101 	tsteq	r1, r1, lsl #2
     ab4:	13011331 	movwne	r1, #4913	; 0x1331
     ab8:	8a180000 	bhi	600ac0 <__RAM_SIZE+0x500ac0>
     abc:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     ac0:	0a42910a 	beq	10a4ef0 <__RAM_SIZE+0xfa4ef0>
     ac4:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
     ac8:	11010182 	smlabbne	r1, r2, r1, r0
     acc:	00133101 	andseq	r3, r3, r1, lsl #2
     ad0:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
     ad4:	0b3a0e03 	bleq	e842e8 <__RAM_SIZE+0xd842e8>
     ad8:	0b39053b 	bleq	e41fcc <__RAM_SIZE+0xd41fcc>
     adc:	13490c27 	movtne	r0, #39975	; 0x9c27
     ae0:	13010b20 	movwne	r0, #6944	; 0x1b20
     ae4:	341b0000 	ldrcc	r0, [fp], #-0
     ae8:	3a0e0300 	bcc	3816f0 <__RAM_SIZE+0x2816f0>
     aec:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     af0:	0013490b 	andseq	r4, r3, fp, lsl #18
     af4:	012e1c00 			; <UNDEFINED> instruction: 0x012e1c00
     af8:	0b3a0e03 	bleq	e8430c <__RAM_SIZE+0xd8430c>
     afc:	0b39053b 	bleq	e41ff0 <__RAM_SIZE+0xd41ff0>
     b00:	0b200c27 	bleq	803ba4 <__RAM_SIZE+0x703ba4>
     b04:	00001301 	andeq	r1, r0, r1, lsl #6
     b08:	0300051d 	movweq	r0, #1309	; 0x51d
     b0c:	3b0b3a0e 	blcc	2cf34c <__RAM_SIZE+0x1cf34c>
     b10:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     b14:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     b18:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; a68 <__Vectors_Size+0x2a8>
     b1c:	40870c3c 	addmi	r0, r7, ip, lsr ip
     b20:	3a0e030e 	bcc	381760 <__RAM_SIZE+0x281760>
     b24:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b28:	1f00000b 	svcne	0x0000000b
     b2c:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; a7c <__Vectors_Size+0x2bc>
     b30:	40870c3c 	addmi	r0, r7, ip, lsr ip
     b34:	3a0e030e 	bcc	381774 <__RAM_SIZE+0x281774>
     b38:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b3c:	0000000b 	andeq	r0, r0, fp
     b40:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     b44:	030b130e 	movweq	r1, #45838	; 0xb30e
     b48:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
     b4c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
     b50:	00061001 	andeq	r1, r6, r1
     b54:	00240200 	eoreq	r0, r4, r0, lsl #4
     b58:	0b3e0b0b 	bleq	f8378c <__RAM_SIZE+0xe8378c>
     b5c:	00000e03 	andeq	r0, r0, r3, lsl #28
     b60:	0b002403 	bleq	9b74 <_Min_Stack_Size+0x8b74>
     b64:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     b68:	04000008 	streq	r0, [r0], #-8
     b6c:	0b0b000f 	bleq	2c0bb0 <__RAM_SIZE+0x1c0bb0>
     b70:	16050000 	strne	r0, [r5], -r0
     b74:	3a0e0300 	bcc	38177c <__RAM_SIZE+0x28177c>
     b78:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     b7c:	0013490b 	andseq	r4, r3, fp, lsl #18
     b80:	01130600 	tsteq	r3, r0, lsl #12
     b84:	0b0b0e03 	bleq	2c4398 <__RAM_SIZE+0x1c4398>
     b88:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b8c:	13010b39 	movwne	r0, #6969	; 0x1b39
     b90:	0d070000 	stceq	0, cr0, [r7, #-0]
     b94:	3a0e0300 	bcc	38179c <__RAM_SIZE+0x28179c>
     b98:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b9c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     ba0:	0800000a 	stmdaeq	r0, {r1, r3}
     ba4:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
     ba8:	00001301 	andeq	r1, r0, r1, lsl #6
     bac:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
     bb0:	0a000013 	beq	c04 <__Vectors_Size+0x444>
     bb4:	0b0b000f 	bleq	2c0bf8 <__RAM_SIZE+0x1c0bf8>
     bb8:	00001349 	andeq	r1, r0, r9, asr #6
     bbc:	0300160b 	movweq	r1, #1547	; 0x60b
     bc0:	3b0b3a0e 	blcc	2cf400 <__RAM_SIZE+0x1cf400>
     bc4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     bc8:	0c000013 	stceq	0, cr0, [r0], {19}
     bcc:	0c3f012e 	ldfeqs	f0, [pc], #-184	; b1c <__Vectors_Size+0x35c>
     bd0:	0b3a0e03 	bleq	e843e4 <__RAM_SIZE+0xd843e4>
     bd4:	0b390b3b 	bleq	e438c8 <__RAM_SIZE+0xd438c8>
     bd8:	01110c27 	tsteq	r1, r7, lsr #24
     bdc:	06400112 			; <UNDEFINED> instruction: 0x06400112
     be0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     be4:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     be8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     bec:	0b3b0b3a 	bleq	ec38dc <__RAM_SIZE+0xdc38dc>
     bf0:	13490b39 	movtne	r0, #39737	; 0x9b39
     bf4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     bf8:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
     bfc:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     c00:	0b3b0b3a 	bleq	ec38f0 <__RAM_SIZE+0xdc38f0>
     c04:	13490b39 	movtne	r0, #39737	; 0x9b39
     c08:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     c0c:	0f000006 	svceq	0x00000006
     c10:	01018289 	smlabbeq	r1, r9, r2, r8
     c14:	13310111 	teqne	r1, #1073741828	; 0x40000004
     c18:	8a100000 	bhi	400c20 <__RAM_SIZE+0x300c20>
     c1c:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     c20:	0a42910a 	beq	10a5050 <__RAM_SIZE+0xfa5050>
     c24:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
     c28:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     c2c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     c30:	0b3a0e03 	bleq	e84444 <__RAM_SIZE+0xd84444>
     c34:	0b39053b 	bleq	e42128 <__RAM_SIZE+0xd42128>
     c38:	01000000 	mrseq	r0, (UNDEF: 0)
     c3c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     c40:	0e030b13 	vmoveq.32	d3[0], r0
     c44:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
     c48:	01520111 	cmpeq	r2, r1, lsl r1
     c4c:	00000610 	andeq	r0, r0, r0, lsl r6
     c50:	0b002402 	bleq	9c60 <_Min_Stack_Size+0x8c60>
     c54:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     c58:	0300000e 	movweq	r0, #14
     c5c:	0b0b0024 	bleq	2c0cf4 <__RAM_SIZE+0x1c0cf4>
     c60:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     c64:	0f040000 	svceq	0x00040000
     c68:	000b0b00 	andeq	r0, fp, r0, lsl #22
     c6c:	00160500 	andseq	r0, r6, r0, lsl #10
     c70:	0b3a0e03 	bleq	e84484 <__RAM_SIZE+0xd84484>
     c74:	0b390b3b 	bleq	e43968 <__RAM_SIZE+0xd43968>
     c78:	00001349 	andeq	r1, r0, r9, asr #6
     c7c:	03011306 	movweq	r1, #4870	; 0x1306
     c80:	3a0b0b0e 	bcc	2c38c0 <__RAM_SIZE+0x1c38c0>
     c84:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c88:	0013010b 	andseq	r0, r3, fp, lsl #2
     c8c:	000d0700 	andeq	r0, sp, r0, lsl #14
     c90:	0b3a0e03 	bleq	e844a4 <__RAM_SIZE+0xd844a4>
     c94:	0b39053b 	bleq	e42188 <__RAM_SIZE+0xd42188>
     c98:	0a381349 	beq	e059c4 <__RAM_SIZE+0xd059c4>
     c9c:	15080000 	strne	r0, [r8, #-0]
     ca0:	010c2701 	tsteq	ip, r1, lsl #14
     ca4:	09000013 	stmdbeq	r0, {r0, r1, r4}
     ca8:	13490005 	movtne	r0, #36869	; 0x9005
     cac:	0f0a0000 	svceq	0x000a0000
     cb0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     cb4:	0b000013 	bleq	d08 <__Vectors_Size+0x548>
     cb8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     cbc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     cc0:	13490b39 	movtne	r0, #39737	; 0x9b39
     cc4:	340c0000 	strcc	r0, [ip], #-0
     cc8:	3a0e0300 	bcc	3818d0 <__RAM_SIZE+0x2818d0>
     ccc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     cd0:	3f13490b 	svccc	0x0013490b
     cd4:	000c3c0c 	andeq	r3, ip, ip, lsl #24
     cd8:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
     cdc:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
     ce0:	0b3b0b3a 	bleq	ec39d0 <__RAM_SIZE+0xdc39d0>
     ce4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     ce8:	01111349 	tsteq	r1, r9, asr #6
     cec:	06400112 			; <UNDEFINED> instruction: 0x06400112
     cf0:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
     cf4:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
     cf8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     cfc:	0b3b0b3a 	bleq	ec39ec <__RAM_SIZE+0xdc39ec>
     d00:	13490b39 	movtne	r0, #39737	; 0x9b39
     d04:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     d08:	0f000006 	svceq	0x00000006
     d0c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     d10:	0b3b0b3a 	bleq	ec3a00 <__RAM_SIZE+0xdc3a00>
     d14:	13490b39 	movtne	r0, #39737	; 0x9b39
     d18:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     d1c:	10000006 	andne	r0, r0, r6
     d20:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     d24:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     d28:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     d2c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     d30:	010b570b 	tsteq	fp, fp, lsl #14
     d34:	11000013 	tstne	r0, r3, lsl r0
     d38:	13310034 	teqne	r1, #52	; 0x34
     d3c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     d40:	12000006 	andne	r0, r0, #6
     d44:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     d48:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     d4c:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     d50:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     d54:	000b5705 	andeq	r5, fp, r5, lsl #14
     d58:	00051300 	andeq	r1, r5, r0, lsl #6
     d5c:	06021331 			; <UNDEFINED> instruction: 0x06021331
     d60:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     d64:	82891400 	addhi	r1, r9, #0, 8
     d68:	01110101 	tsteq	r1, r1, lsl #2
     d6c:	00001331 	andeq	r1, r0, r1, lsr r3
     d70:	01828a15 	orreq	r8, r2, r5, lsl sl
     d74:	910a0200 	mrsls	r0, R10_fiq
     d78:	00000a42 	andeq	r0, r0, r2, asr #20
     d7c:	03012e16 	movweq	r2, #7702	; 0x1e16
     d80:	3b0b3a0e 	blcc	2cf5c0 <__RAM_SIZE+0x1cf5c0>
     d84:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     d88:	2013490c 	andscs	r4, r3, ip, lsl #18
     d8c:	0013010b 	andseq	r0, r3, fp, lsl #2
     d90:	00341700 	eorseq	r1, r4, r0, lsl #14
     d94:	0b3a0e03 	bleq	e845a8 <__RAM_SIZE+0xd845a8>
     d98:	0b39053b 	bleq	e4228c <__RAM_SIZE+0xd4228c>
     d9c:	00001349 	andeq	r1, r0, r9, asr #6
     da0:	03012e18 	movweq	r2, #7704	; 0x1e18
     da4:	3b0b3a0e 	blcc	2cf5e4 <__RAM_SIZE+0x1cf5e4>
     da8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
     dac:	010b200c 	tsteq	fp, ip
     db0:	19000013 	stmdbne	r0, {r0, r1, r4}
     db4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     db8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     dbc:	13490b39 	movtne	r0, #39737	; 0x9b39
     dc0:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
     dc4:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
     dc8:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
     dcc:	0b3a0e03 	bleq	e845e0 <__RAM_SIZE+0xd845e0>
     dd0:	00000b3b 	andeq	r0, r0, fp, lsr fp
     dd4:	01110100 	tsteq	r1, r0, lsl #2
     dd8:	0b130e25 	bleq	4c4674 <__RAM_SIZE+0x3c4674>
     ddc:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     de0:	01110655 	tsteq	r1, r5, asr r6
     de4:	06100152 			; <UNDEFINED> instruction: 0x06100152
     de8:	24020000 	strcs	r0, [r2], #-0
     dec:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     df0:	000e030b 	andeq	r0, lr, fp, lsl #6
     df4:	00240300 	eoreq	r0, r4, r0, lsl #6
     df8:	0b3e0b0b 	bleq	f83a2c <__RAM_SIZE+0xe83a2c>
     dfc:	00000803 	andeq	r0, r0, r3, lsl #16
     e00:	0b000f04 	bleq	4a18 <_Min_Stack_Size+0x3a18>
     e04:	0500000b 	streq	r0, [r0, #-11]
     e08:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     e0c:	0b3b0b3a 	bleq	ec3afc <__RAM_SIZE+0xdc3afc>
     e10:	13490b39 	movtne	r0, #39737	; 0x9b39
     e14:	13060000 	movwne	r0, #24576	; 0x6000
     e18:	0b0e0301 	bleq	381a24 <__RAM_SIZE+0x281a24>
     e1c:	3b0b3a0b 	blcc	2cf650 <__RAM_SIZE+0x1cf650>
     e20:	010b3905 	tsteq	fp, r5, lsl #18
     e24:	07000013 	smladeq	r0, r3, r0, r0
     e28:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     e2c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     e30:	13490b39 	movtne	r0, #39737	; 0x9b39
     e34:	00000a38 	andeq	r0, r0, r8, lsr sl
     e38:	27011508 	strcs	r1, [r1, -r8, lsl #10]
     e3c:	0013010c 	andseq	r0, r3, ip, lsl #2
     e40:	00050900 	andeq	r0, r5, r0, lsl #18
     e44:	00001349 	andeq	r1, r0, r9, asr #6
     e48:	0b000f0a 	bleq	4a78 <_Min_Stack_Size+0x3a78>
     e4c:	0013490b 	andseq	r4, r3, fp, lsl #18
     e50:	00160b00 	andseq	r0, r6, r0, lsl #22
     e54:	0b3a0e03 	bleq	e84668 <__RAM_SIZE+0xd84668>
     e58:	0b39053b 	bleq	e4234c <__RAM_SIZE+0xd4234c>
     e5c:	00001349 	andeq	r1, r0, r9, asr #6
     e60:	0300340c 	movweq	r3, #1036	; 0x40c
     e64:	3b0b3a0e 	blcc	2cf6a4 <__RAM_SIZE+0x1cf6a4>
     e68:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     e6c:	3c0c3f13 	stccc	15, cr3, [ip], {19}
     e70:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
     e74:	0c3f012e 	ldfeqs	f0, [pc], #-184	; dc4 <__Vectors_Size+0x604>
     e78:	0b3a0e03 	bleq	e8468c <__RAM_SIZE+0xd8468c>
     e7c:	0b390b3b 	bleq	e43b70 <__RAM_SIZE+0xd43b70>
     e80:	13490c27 	movtne	r0, #39975	; 0x9c27
     e84:	01120111 	tsteq	r2, r1, lsl r1
     e88:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
     e8c:	0013010c 	andseq	r0, r3, ip, lsl #2
     e90:	00050e00 	andeq	r0, r5, r0, lsl #28
     e94:	0b3a0e03 	bleq	e846a8 <__RAM_SIZE+0xd846a8>
     e98:	0b390b3b 	bleq	e43b8c <__RAM_SIZE+0xd43b8c>
     e9c:	06021349 	streq	r1, [r2], -r9, asr #6
     ea0:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     ea4:	00340f00 	eorseq	r0, r4, r0, lsl #30
     ea8:	0b3a0e03 	bleq	e846bc <__RAM_SIZE+0xd846bc>
     eac:	0b390b3b 	bleq	e43ba0 <__RAM_SIZE+0xd43ba0>
     eb0:	06021349 	streq	r1, [r2], -r9, asr #6
     eb4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     eb8:	011d1000 	tsteq	sp, r0
     ebc:	01521331 	cmpeq	r2, r1, lsr r3
     ec0:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     ec4:	58011201 	stmdapl	r1, {r0, r9, ip}
     ec8:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
     ecc:	0013010b 	andseq	r0, r3, fp, lsl #2
     ed0:	00341100 	eorseq	r1, r4, r0, lsl #2
     ed4:	06021331 			; <UNDEFINED> instruction: 0x06021331
     ed8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
     edc:	011d1200 	tsteq	sp, r0, lsl #4
     ee0:	01521331 	cmpeq	r2, r1, lsr r3
     ee4:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
     ee8:	58011201 	stmdapl	r1, {r0, r9, ip}
     eec:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
     ef0:	1300000b 	movwne	r0, #11
     ef4:	13310005 	teqne	r1, #5
     ef8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
     efc:	14000006 	strne	r0, [r0], #-6
     f00:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     f04:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
     f08:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
     f0c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
     f10:	010b5705 	tsteq	fp, r5, lsl #14
     f14:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
     f18:	0e03012e 	adfeqsp	f0, f3, #0.5
     f1c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     f20:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     f24:	0b201349 	bleq	805c50 <__RAM_SIZE+0x705c50>
     f28:	00001301 	andeq	r1, r0, r1, lsl #6
     f2c:	03003416 	movweq	r3, #1046	; 0x416
     f30:	3b0b3a0e 	blcc	2cf770 <__RAM_SIZE+0x1cf770>
     f34:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
     f38:	17000013 	smladne	r0, r3, r0, r0
     f3c:	0e03012e 	adfeqsp	f0, f3, #0.5
     f40:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     f44:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
     f48:	13010b20 	movwne	r0, #6944	; 0x1b20
     f4c:	05180000 	ldreq	r0, [r8, #-0]
     f50:	3a0e0300 	bcc	381b58 <__RAM_SIZE+0x281b58>
     f54:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     f58:	0013490b 	andseq	r4, r3, fp, lsl #18
     f5c:	012e1900 			; <UNDEFINED> instruction: 0x012e1900
     f60:	0b3a0e03 	bleq	e84774 <__RAM_SIZE+0xd84774>
     f64:	0b39053b 	bleq	e42458 <__RAM_SIZE+0xd42458>
     f68:	13490c27 	movtne	r0, #39975	; 0x9c27
     f6c:	00000b20 	andeq	r0, r0, r0, lsr #22
     f70:	01110100 	tsteq	r1, r0, lsl #2
     f74:	0b130e25 	bleq	4c4810 <__RAM_SIZE+0x3c4810>
     f78:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     f7c:	01110655 	tsteq	r1, r5, asr r6
     f80:	06100152 			; <UNDEFINED> instruction: 0x06100152
     f84:	24020000 	strcs	r0, [r2], #-0
     f88:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     f8c:	000e030b 	andeq	r0, lr, fp, lsl #6
     f90:	00240300 	eoreq	r0, r4, r0, lsl #6
     f94:	0b3e0b0b 	bleq	f83bc8 <__RAM_SIZE+0xe83bc8>
     f98:	00000803 	andeq	r0, r0, r3, lsl #16
     f9c:	0b000f04 	bleq	4bb4 <_Min_Stack_Size+0x3bb4>
     fa0:	0500000b 	streq	r0, [r0, #-11]
     fa4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     fa8:	0b3b0b3a 	bleq	ec3c98 <__RAM_SIZE+0xdc3c98>
     fac:	13490b39 	movtne	r0, #39737	; 0x9b39
     fb0:	13060000 	movwne	r0, #24576	; 0x6000
     fb4:	0b0e0301 	bleq	381bc0 <__RAM_SIZE+0x281bc0>
     fb8:	3b0b3a0b 	blcc	2cf7ec <__RAM_SIZE+0x1cf7ec>
     fbc:	010b3905 	tsteq	fp, r5, lsl #18
     fc0:	07000013 	smladeq	r0, r3, r0, r0
     fc4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     fc8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     fcc:	13490b39 	movtne	r0, #39737	; 0x9b39
     fd0:	00000a38 	andeq	r0, r0, r8, lsr sl
     fd4:	27011508 	strcs	r1, [r1, -r8, lsl #10]
     fd8:	0013010c 	andseq	r0, r3, ip, lsl #2
     fdc:	00050900 	andeq	r0, r5, r0, lsl #18
     fe0:	00001349 	andeq	r1, r0, r9, asr #6
     fe4:	0b000f0a 	bleq	4c14 <_Min_Stack_Size+0x3c14>
     fe8:	0013490b 	andseq	r4, r3, fp, lsl #18
     fec:	00160b00 	andseq	r0, r6, r0, lsl #22
     ff0:	0b3a0e03 	bleq	e84804 <__RAM_SIZE+0xd84804>
     ff4:	0b39053b 	bleq	e424e8 <__RAM_SIZE+0xd424e8>
     ff8:	00001349 	andeq	r1, r0, r9, asr #6
     ffc:	0300340c 	movweq	r3, #1036	; 0x40c
    1000:	3b0b3a0e 	blcc	2cf840 <__RAM_SIZE+0x1cf840>
    1004:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1008:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    100c:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
    1010:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1014:	0b3b0b3a 	bleq	ec3d04 <__RAM_SIZE+0xdc3d04>
    1018:	13490b39 	movtne	r0, #39737	; 0x9b39
    101c:	0a020c3f 	beq	84120 <SYSTICK_CYCLES+0x5b0e1>
    1020:	340e0000 	strcc	r0, [lr], #-0
    1024:	3a134700 	bcc	4d2c2c <__RAM_SIZE+0x3d2c2c>
    1028:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    102c:	000a020b 	andeq	r0, sl, fp, lsl #4
    1030:	012e0f00 			; <UNDEFINED> instruction: 0x012e0f00
    1034:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1038:	0b3b0b3a 	bleq	ec3d28 <__RAM_SIZE+0xdc3d28>
    103c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1040:	01120111 	tsteq	r2, r1, lsl r1
    1044:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1048:	0013010c 	andseq	r0, r3, ip, lsl #2
    104c:	82891000 	addhi	r1, r9, #0
    1050:	01110001 	tsteq	r1, r1
    1054:	00001331 	andeq	r1, r0, r1, lsr r3
    1058:	3f002e11 	svccc	0x00002e11
    105c:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1060:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1064:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1068:	00000b39 	andeq	r0, r0, r9, lsr fp
    106c:	3f002e12 	svccc	0x00002e12
    1070:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1074:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1078:	0b3b0b3a 	bleq	ec3d68 <__RAM_SIZE+0xdc3d68>
    107c:	00000b39 	andeq	r0, r0, r9, lsr fp
    1080:	01110100 	tsteq	r1, r0, lsl #2
    1084:	0b130e25 	bleq	4c4920 <__RAM_SIZE+0x3c4920>
    1088:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    108c:	01110655 	tsteq	r1, r5, asr r6
    1090:	06100152 			; <UNDEFINED> instruction: 0x06100152
    1094:	24020000 	strcs	r0, [r2], #-0
    1098:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    109c:	000e030b 	andeq	r0, lr, fp, lsl #6
    10a0:	00240300 	eoreq	r0, r4, r0, lsl #6
    10a4:	0b3e0b0b 	bleq	f83cd8 <__RAM_SIZE+0xe83cd8>
    10a8:	00000803 	andeq	r0, r0, r3, lsl #16
    10ac:	0b000f04 	bleq	4cc4 <_Min_Stack_Size+0x3cc4>
    10b0:	0500000b 	streq	r0, [r0, #-11]
    10b4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    10b8:	0b3b0b3a 	bleq	ec3da8 <__RAM_SIZE+0xdc3da8>
    10bc:	13490b39 	movtne	r0, #39737	; 0x9b39
    10c0:	35060000 	strcc	r0, [r6, #-0]
    10c4:	00134900 	andseq	r4, r3, r0, lsl #18
    10c8:	00340700 	eorseq	r0, r4, r0, lsl #14
    10cc:	0b3a0e03 	bleq	e848e0 <__RAM_SIZE+0xd848e0>
    10d0:	0b390b3b 	bleq	e43dc4 <__RAM_SIZE+0xd43dc4>
    10d4:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; fb8 <__Vectors_Size+0x7f8>
    10d8:	00000c3c 	andeq	r0, r0, ip, lsr ip
    10dc:	03003408 	movweq	r3, #1032	; 0x408
    10e0:	3b0b3a0e 	blcc	2cf920 <__RAM_SIZE+0x1cf920>
    10e4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    10e8:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    10ec:	0900000c 	stmdbeq	r0, {r2, r3}
    10f0:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1040 <_Min_Stack_Size+0x40>
    10f4:	0b3a0e03 	bleq	e84908 <__RAM_SIZE+0xd84908>
    10f8:	0b390b3b 	bleq	e43dec <__RAM_SIZE+0xd43dec>
    10fc:	01110c27 	tsteq	r1, r7, lsr #24
    1100:	06400112 			; <UNDEFINED> instruction: 0x06400112
    1104:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    1108:	0a000013 	beq	115c <_Min_Stack_Size+0x15c>
    110c:	00018289 	andeq	r8, r1, r9, lsl #5
    1110:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1114:	2e0b0000 	cdpcs	0, 0, cr0, cr11, cr0, {0}
    1118:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    111c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1120:	0b3a0e03 	bleq	e84934 <__RAM_SIZE+0xd84934>
    1124:	0b39053b 	bleq	e42618 <__RAM_SIZE+0xd42618>
    1128:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
    112c:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    1130:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    1134:	0b3a0e03 	bleq	e84948 <__RAM_SIZE+0xd84948>
    1138:	0b390b3b 	bleq	e43e2c <__RAM_SIZE+0xd43e2c>
    113c:	01000000 	mrseq	r0, (UNDEF: 0)
    1140:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    1144:	0e030b13 	vmoveq.32	d3[0], r0
    1148:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    114c:	01520111 	cmpeq	r2, r1, lsl r1
    1150:	00000610 	andeq	r0, r0, r0, lsl r6
    1154:	0b002402 	bleq	a164 <_Min_Stack_Size+0x9164>
    1158:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    115c:	0300000e 	movweq	r0, #14
    1160:	0b0b0024 	bleq	2c11f8 <__RAM_SIZE+0x1c11f8>
    1164:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    1168:	0f040000 	svceq	0x00040000
    116c:	000b0b00 	andeq	r0, fp, r0, lsl #22
    1170:	00160500 	andseq	r0, r6, r0, lsl #10
    1174:	0b3a0e03 	bleq	e84988 <__RAM_SIZE+0xd84988>
    1178:	0b390b3b 	bleq	e43e6c <__RAM_SIZE+0xd43e6c>
    117c:	00001349 	andeq	r1, r0, r9, asr #6
    1180:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
    1184:	07000013 	smladeq	r0, r3, r0, r0
    1188:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    118c:	0b3a0b0b 	bleq	e83dc0 <__RAM_SIZE+0xd83dc0>
    1190:	0b39053b 	bleq	e42684 <__RAM_SIZE+0xd42684>
    1194:	00001301 	andeq	r1, r0, r1, lsl #6
    1198:	03000d08 	movweq	r0, #3336	; 0xd08
    119c:	3b0b3a0e 	blcc	2cf9dc <__RAM_SIZE+0x1cf9dc>
    11a0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    11a4:	000a3813 	andeq	r3, sl, r3, lsl r8
    11a8:	01150900 	tsteq	r5, r0, lsl #18
    11ac:	13010c27 	movwne	r0, #7207	; 0x1c27
    11b0:	050a0000 	streq	r0, [sl, #-0]
    11b4:	00134900 	andseq	r4, r3, r0, lsl #18
    11b8:	000f0b00 	andeq	r0, pc, r0, lsl #22
    11bc:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    11c0:	160c0000 	strne	r0, [ip], -r0
    11c4:	3a0e0300 	bcc	381dcc <__RAM_SIZE+0x281dcc>
    11c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    11cc:	0013490b 	andseq	r4, r3, fp, lsl #18
    11d0:	00340d00 	eorseq	r0, r4, r0, lsl #26
    11d4:	0b3a0e03 	bleq	e849e8 <__RAM_SIZE+0xd849e8>
    11d8:	0b39053b 	bleq	e426cc <__RAM_SIZE+0xd426cc>
    11dc:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 10c0 <_Min_Stack_Size+0xc0>
    11e0:	00000c3c 	andeq	r0, r0, ip, lsr ip
    11e4:	3f012e0e 	svccc	0x00012e0e
    11e8:	3a0e030c 	bcc	381e20 <__RAM_SIZE+0x281e20>
    11ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    11f0:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    11f4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    11f8:	97064001 	strls	r4, [r6, -r1]
    11fc:	13010c42 	movwne	r0, #7234	; 0x1c42
    1200:	050f0000 	streq	r0, [pc, #-0]	; 1208 <_Min_Stack_Size+0x208>
    1204:	3a0e0300 	bcc	381e0c <__RAM_SIZE+0x281e0c>
    1208:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    120c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1210:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1214:	34100000 	ldrcc	r0, [r0], #-0
    1218:	3a0e0300 	bcc	381e20 <__RAM_SIZE+0x281e20>
    121c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1220:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1224:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1228:	1d110000 	ldcne	0, cr0, [r1, #-0]
    122c:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1230:	0b42b801 	bleq	10af23c <__RAM_SIZE+0xfaf23c>
    1234:	01120111 	tsteq	r2, r1, lsl r1
    1238:	0b590b58 	bleq	1643fa0 <__RAM_SIZE+0x1543fa0>
    123c:	13010b57 	movwne	r0, #6999	; 0x1b57
    1240:	34120000 	ldrcc	r0, [r2], #-0
    1244:	02133100 	andseq	r3, r3, #0, 2
    1248:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    124c:	1d130000 	ldcne	0, cr0, [r3, #-0]
    1250:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1254:	0b42b801 	bleq	10af260 <__RAM_SIZE+0xfaf260>
    1258:	01120111 	tsteq	r2, r1, lsl r1
    125c:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    1260:	00000b57 	andeq	r0, r0, r7, asr fp
    1264:	31011d14 	tstcc	r1, r4, lsl sp
    1268:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    126c:	01110b42 	tsteq	r1, r2, asr #22
    1270:	0b580112 	bleq	16016c0 <__RAM_SIZE+0x15016c0>
    1274:	0b570559 	bleq	15c27e0 <__RAM_SIZE+0x14c27e0>
    1278:	00001301 	andeq	r1, r0, r1, lsl #6
    127c:	31000515 	tstcc	r0, r5, lsl r5
    1280:	b7060213 	smladlt	r6, r3, r2, r0
    1284:	00000642 	andeq	r0, r0, r2, asr #12
    1288:	01828916 	orreq	r8, r2, r6, lsl r9
    128c:	31011100 	mrscc	r1, (UNDEF: 17)
    1290:	17000013 	smladne	r0, r3, r0, r0
    1294:	01018289 	smlabbeq	r1, r9, r2, r8
    1298:	13310111 	teqne	r1, #1073741828	; 0x40000004
    129c:	00001301 	andeq	r1, r0, r1, lsl #6
    12a0:	01828a18 	orreq	r8, r2, r8, lsl sl
    12a4:	910a0200 	mrsls	r0, R10_fiq
    12a8:	00000a42 	andeq	r0, r0, r2, asr #20
    12ac:	01828919 	orreq	r8, r2, r9, lsl r9
    12b0:	31011101 	tstcc	r1, r1, lsl #2
    12b4:	1a000013 	bne	1308 <_Min_Stack_Size+0x308>
    12b8:	0e03012e 	adfeqsp	f0, f3, #0.5
    12bc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12c0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    12c4:	0b201349 	bleq	805ff0 <__RAM_SIZE+0x705ff0>
    12c8:	00001301 	andeq	r1, r0, r1, lsl #6
    12cc:	0300341b 	movweq	r3, #1051	; 0x41b
    12d0:	3b0b3a0e 	blcc	2cfb10 <__RAM_SIZE+0x1cfb10>
    12d4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    12d8:	1c000013 	stcne	0, cr0, [r0], {19}
    12dc:	0e03012e 	adfeqsp	f0, f3, #0.5
    12e0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    12e4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    12e8:	13010b20 	movwne	r0, #6944	; 0x1b20
    12ec:	051d0000 	ldreq	r0, [sp, #-0]
    12f0:	3a0e0300 	bcc	381ef8 <__RAM_SIZE+0x281ef8>
    12f4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    12f8:	0013490b 	andseq	r4, r3, fp, lsl #18
    12fc:	002e1e00 	eoreq	r1, lr, r0, lsl #28
    1300:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1304:	030e4087 	movweq	r4, #57479	; 0xe087
    1308:	3b0b3a0e 	blcc	2cfb48 <__RAM_SIZE+0x1cfb48>
    130c:	000b390b 	andeq	r3, fp, fp, lsl #18
    1310:	002e1f00 	eoreq	r1, lr, r0, lsl #30
    1314:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1318:	030e4087 	movweq	r4, #57479	; 0xe087
    131c:	3b0b3a0e 	blcc	2cfb5c <__RAM_SIZE+0x1cfb5c>
    1320:	2000000b 	andcs	r0, r0, fp
    1324:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1274 <_Min_Stack_Size+0x274>
    1328:	40870c3c 	addmi	r0, r7, ip, lsr ip
    132c:	3a0e030e 	bcc	381f6c <__RAM_SIZE+0x281f6c>
    1330:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1334:	0000000b 	andeq	r0, r0, fp
    1338:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    133c:	030b130e 	movweq	r1, #45838	; 0xb30e
    1340:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1344:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    1348:	00061001 	andeq	r1, r6, r1
    134c:	00240200 	eoreq	r0, r4, r0, lsl #4
    1350:	0b3e0b0b 	bleq	f83f84 <__RAM_SIZE+0xe83f84>
    1354:	00000e03 	andeq	r0, r0, r3, lsl #28
    1358:	0b002403 	bleq	a36c <_Min_Stack_Size+0x936c>
    135c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1360:	04000008 	streq	r0, [r0], #-8
    1364:	0b0b000f 	bleq	2c13a8 <__RAM_SIZE+0x1c13a8>
    1368:	16050000 	strne	r0, [r5], -r0
    136c:	3a0e0300 	bcc	381f74 <__RAM_SIZE+0x281f74>
    1370:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1374:	0013490b 	andseq	r4, r3, fp, lsl #18
    1378:	00260600 	eoreq	r0, r6, r0, lsl #12
    137c:	00001349 	andeq	r1, r0, r9, asr #6
    1380:	49003507 	stmdbmi	r0, {r0, r1, r2, r8, sl, ip, sp}
    1384:	08000013 	stmdaeq	r0, {r0, r1, r4}
    1388:	13490101 	movtne	r0, #37121	; 0x9101
    138c:	00001301 	andeq	r1, r0, r1, lsl #6
    1390:	49002109 	stmdbmi	r0, {r0, r3, r8, sp}
    1394:	000b2f13 	andeq	r2, fp, r3, lsl pc
    1398:	00340a00 	eorseq	r0, r4, r0, lsl #20
    139c:	0b3a0e03 	bleq	e84bb0 <__RAM_SIZE+0xd84bb0>
    13a0:	0b39053b 	bleq	e42894 <__RAM_SIZE+0xd42894>
    13a4:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1288 <_Min_Stack_Size+0x288>
    13a8:	00000a02 	andeq	r0, r0, r2, lsl #20
    13ac:	0301130b 	movweq	r1, #4875	; 0x130b
    13b0:	3a0b0b0e 	bcc	2c3ff0 <__RAM_SIZE+0x1c3ff0>
    13b4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    13b8:	0013010b 	andseq	r0, r3, fp, lsl #2
    13bc:	000d0c00 	andeq	r0, sp, r0, lsl #24
    13c0:	0b3a0e03 	bleq	e84bd4 <__RAM_SIZE+0xd84bd4>
    13c4:	0b39053b 	bleq	e428b8 <__RAM_SIZE+0xd428b8>
    13c8:	0a381349 	beq	e060f4 <__RAM_SIZE+0xd060f4>
    13cc:	150d0000 	strne	r0, [sp, #-0]
    13d0:	010c2701 	tsteq	ip, r1, lsl #14
    13d4:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    13d8:	13490005 	movtne	r0, #36869	; 0x9005
    13dc:	0f0f0000 	svceq	0x000f0000
    13e0:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    13e4:	10000013 	andne	r0, r0, r3, lsl r0
    13e8:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    13ec:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    13f0:	13490b39 	movtne	r0, #39737	; 0x9b39
    13f4:	34110000 	ldrcc	r0, [r1], #-0
    13f8:	3a0e0300 	bcc	382000 <__RAM_SIZE+0x282000>
    13fc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1400:	3f13490b 	svccc	0x0013490b
    1404:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    1408:	00341200 	eorseq	r1, r4, r0, lsl #4
    140c:	0b3a1347 	bleq	e86130 <__RAM_SIZE+0xd86130>
    1410:	0b390b3b 	bleq	e44104 <__RAM_SIZE+0xd44104>
    1414:	00000a02 	andeq	r0, r0, r2, lsl #20
    1418:	47003413 	smladmi	r0, r3, r4, r3
    141c:	3b0b3a13 	blcc	2cfc70 <__RAM_SIZE+0x1cfc70>
    1420:	020b3905 	andeq	r3, fp, #81920	; 0x14000
    1424:	1400000a 	strne	r0, [r0], #-10
    1428:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1378 <_Min_Stack_Size+0x378>
    142c:	0b3a0e03 	bleq	e84c40 <__RAM_SIZE+0xd84c40>
    1430:	0b39053b 	bleq	e42924 <__RAM_SIZE+0xd42924>
    1434:	01110c27 	tsteq	r1, r7, lsr #24
    1438:	0a400112 	beq	1001888 <__RAM_SIZE+0xf01888>
    143c:	000c4297 	muleq	ip, r7, r2
    1440:	11010000 	mrsne	r0, (UNDEF: 1)
    1444:	130e2501 	movwne	r2, #58625	; 0xe501
    1448:	1b0e030b 	blne	38207c <__RAM_SIZE+0x28207c>
    144c:	1106550e 	tstne	r6, lr, lsl #10
    1450:	10015201 	andne	r5, r1, r1, lsl #4
    1454:	02000006 	andeq	r0, r0, #6
    1458:	0b0b0024 	bleq	2c14f0 <__RAM_SIZE+0x1c14f0>
    145c:	0e030b3e 	vmoveq.16	d3[0], r0
    1460:	24030000 	strcs	r0, [r3], #-0
    1464:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1468:	0008030b 	andeq	r0, r8, fp, lsl #6
    146c:	000f0400 	andeq	r0, pc, r0, lsl #8
    1470:	00000b0b 	andeq	r0, r0, fp, lsl #22
    1474:	03001605 	movweq	r1, #1541	; 0x605
    1478:	3b0b3a0e 	blcc	2cfcb8 <__RAM_SIZE+0x1cfcb8>
    147c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1480:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1484:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1488:	0b3a0b0b 	bleq	e840bc <__RAM_SIZE+0xd840bc>
    148c:	0b39053b 	bleq	e42980 <__RAM_SIZE+0xd42980>
    1490:	00001301 	andeq	r1, r0, r1, lsl #6
    1494:	03000d07 	movweq	r0, #3335	; 0xd07
    1498:	3b0b3a0e 	blcc	2cfcd8 <__RAM_SIZE+0x1cfcd8>
    149c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    14a0:	000a3813 	andeq	r3, sl, r3, lsl r8
    14a4:	01150800 	tsteq	r5, r0, lsl #16
    14a8:	13010c27 	movwne	r0, #7207	; 0x1c27
    14ac:	05090000 	streq	r0, [r9, #-0]
    14b0:	00134900 	andseq	r4, r3, r0, lsl #18
    14b4:	000f0a00 	andeq	r0, pc, r0, lsl #20
    14b8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    14bc:	160b0000 	strne	r0, [fp], -r0
    14c0:	3a0e0300 	bcc	3820c8 <__RAM_SIZE+0x2820c8>
    14c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    14c8:	0013490b 	andseq	r4, r3, fp, lsl #18
    14cc:	00340c00 	eorseq	r0, r4, r0, lsl #24
    14d0:	0b3a0e03 	bleq	e84ce4 <__RAM_SIZE+0xd84ce4>
    14d4:	0b39053b 	bleq	e429c8 <__RAM_SIZE+0xd429c8>
    14d8:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 13bc <_Min_Stack_Size+0x3bc>
    14dc:	00000c3c 	andeq	r0, r0, ip, lsr ip
    14e0:	3f012e0d 	svccc	0x00012e0d
    14e4:	3a0e030c 	bcc	38211c <__RAM_SIZE+0x28211c>
    14e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    14ec:	110c270b 	tstne	ip, fp, lsl #14
    14f0:	40011201 	andmi	r1, r1, r1, lsl #4
    14f4:	0c429606 	mcrreq	6, 0, r9, r2, cr6
    14f8:	00001301 	andeq	r1, r0, r1, lsl #6
    14fc:	0300340e 	movweq	r3, #1038	; 0x40e
    1500:	3b0b3a0e 	blcc	2cfd40 <__RAM_SIZE+0x1cfd40>
    1504:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1508:	b7060213 	smladlt	r6, r3, r2, r0
    150c:	00000642 	andeq	r0, r0, r2, asr #12
    1510:	11010b0f 	tstne	r1, pc, lsl #22
    1514:	01011201 	tsteq	r1, r1, lsl #4
    1518:	10000013 	andne	r0, r0, r3, lsl r0
    151c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1520:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1524:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    1528:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    152c:	010b570b 	tsteq	fp, fp, lsl #14
    1530:	11000013 	tstne	r0, r3, lsl r0
    1534:	13310034 	teqne	r1, #52	; 0x34
    1538:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    153c:	12000006 	andne	r0, r0, #6
    1540:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1544:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1548:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    154c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1550:	000b570b 	andeq	r5, fp, fp, lsl #14
    1554:	00051300 	andeq	r1, r5, r0, lsl #6
    1558:	06021331 			; <UNDEFINED> instruction: 0x06021331
    155c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1560:	011d1400 	tsteq	sp, r0, lsl #8
    1564:	01521331 	cmpeq	r2, r1, lsr r3
    1568:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    156c:	58011201 	stmdapl	r1, {r0, r9, ip}
    1570:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    1574:	1500000b 	strne	r0, [r0, #-11]
    1578:	01018289 	smlabbeq	r1, r9, r2, r8
    157c:	13010111 	movwne	r0, #4369	; 0x1111
    1580:	8a160000 	bhi	581588 <__RAM_SIZE+0x481588>
    1584:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    1588:	0a42910a 	beq	10a59b8 <__RAM_SIZE+0xfa59b8>
    158c:	89170000 	ldmdbhi	r7, {}	; <UNPREDICTABLE>
    1590:	11010182 	smlabbne	r1, r2, r1, r0
    1594:	00133101 	andseq	r3, r3, r1, lsl #2
    1598:	012e1800 			; <UNDEFINED> instruction: 0x012e1800
    159c:	0b3a0e03 	bleq	e84db0 <__RAM_SIZE+0xd84db0>
    15a0:	0b39053b 	bleq	e42a94 <__RAM_SIZE+0xd42a94>
    15a4:	13490c27 	movtne	r0, #39975	; 0x9c27
    15a8:	13010b20 	movwne	r0, #6944	; 0x1b20
    15ac:	34190000 	ldrcc	r0, [r9], #-0
    15b0:	3a0e0300 	bcc	3821b8 <__RAM_SIZE+0x2821b8>
    15b4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    15b8:	0013490b 	andseq	r4, r3, fp, lsl #18
    15bc:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
    15c0:	0b3a0e03 	bleq	e84dd4 <__RAM_SIZE+0xd84dd4>
    15c4:	0b39053b 	bleq	e42ab8 <__RAM_SIZE+0xd42ab8>
    15c8:	0b200c27 	bleq	80466c <__RAM_SIZE+0x70466c>
    15cc:	00001301 	andeq	r1, r0, r1, lsl #6
    15d0:	0300051b 	movweq	r0, #1307	; 0x51b
    15d4:	3b0b3a0e 	blcc	2cfe14 <__RAM_SIZE+0x1cfe14>
    15d8:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    15dc:	1c000013 	stcne	0, cr0, [r0], {19}
    15e0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1530 <_Min_Stack_Size+0x530>
    15e4:	40870c3c 	addmi	r0, r7, ip, lsr ip
    15e8:	3a0e030e 	bcc	382228 <__RAM_SIZE+0x282228>
    15ec:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    15f0:	0000000b 	andeq	r0, r0, fp
    15f4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    15f8:	030b130e 	movweq	r1, #45838	; 0xb30e
    15fc:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1600:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    1604:	00061001 	andeq	r1, r6, r1
    1608:	00240200 	eoreq	r0, r4, r0, lsl #4
    160c:	0b3e0b0b 	bleq	f84240 <__RAM_SIZE+0xe84240>
    1610:	00000e03 	andeq	r0, r0, r3, lsl #28
    1614:	0b002403 	bleq	a628 <_Min_Stack_Size+0x9628>
    1618:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    161c:	04000008 	streq	r0, [r0], #-8
    1620:	0b0b000f 	bleq	2c1664 <__RAM_SIZE+0x1c1664>
    1624:	16050000 	strne	r0, [r5], -r0
    1628:	3a0e0300 	bcc	382230 <__RAM_SIZE+0x282230>
    162c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1630:	0013490b 	andseq	r4, r3, fp, lsl #18
    1634:	00350600 	eorseq	r0, r5, r0, lsl #12
    1638:	00001349 	andeq	r1, r0, r9, asr #6
    163c:	03011307 	movweq	r1, #4871	; 0x1307
    1640:	3a0b0b0e 	bcc	2c4280 <__RAM_SIZE+0x1c4280>
    1644:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1648:	0013010b 	andseq	r0, r3, fp, lsl #2
    164c:	000d0800 	andeq	r0, sp, r0, lsl #16
    1650:	0b3a0e03 	bleq	e84e64 <__RAM_SIZE+0xd84e64>
    1654:	0b39053b 	bleq	e42b48 <__RAM_SIZE+0xd42b48>
    1658:	0a381349 	beq	e06384 <__RAM_SIZE+0xd06384>
    165c:	15090000 	strne	r0, [r9, #-0]
    1660:	010c2701 	tsteq	ip, r1, lsl #14
    1664:	0a000013 	beq	16b8 <_Min_Stack_Size+0x6b8>
    1668:	13490005 	movtne	r0, #36869	; 0x9005
    166c:	0f0b0000 	svceq	0x000b0000
    1670:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1674:	0c000013 	stceq	0, cr0, [r0], {19}
    1678:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    167c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1680:	13490b39 	movtne	r0, #39737	; 0x9b39
    1684:	340d0000 	strcc	r0, [sp], #-0
    1688:	3a0e0300 	bcc	382290 <__RAM_SIZE+0x282290>
    168c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1690:	3f13490b 	svccc	0x0013490b
    1694:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    1698:	00340e00 	eorseq	r0, r4, r0, lsl #28
    169c:	0b3a0e03 	bleq	e84eb0 <__RAM_SIZE+0xd84eb0>
    16a0:	0b390b3b 	bleq	e44394 <__RAM_SIZE+0xd44394>
    16a4:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1588 <_Min_Stack_Size+0x588>
    16a8:	00000c3c 	andeq	r0, r0, ip, lsr ip
    16ac:	3f012e0f 	svccc	0x00012e0f
    16b0:	3a0e030c 	bcc	3822e8 <__RAM_SIZE+0x2822e8>
    16b4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    16b8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    16bc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    16c0:	97064001 	strls	r4, [r6, -r1]
    16c4:	13010c42 	movwne	r0, #7234	; 0x1c42
    16c8:	05100000 	ldreq	r0, [r0, #-0]
    16cc:	3a0e0300 	bcc	3822d4 <__RAM_SIZE+0x2822d4>
    16d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    16d4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    16d8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    16dc:	34110000 	ldrcc	r0, [r1], #-0
    16e0:	3a0e0300 	bcc	3822e8 <__RAM_SIZE+0x2822e8>
    16e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    16e8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    16ec:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    16f0:	1d120000 	ldcne	0, cr0, [r2, #-0]
    16f4:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    16f8:	0b42b801 	bleq	10af704 <__RAM_SIZE+0xfaf704>
    16fc:	01120111 	tsteq	r2, r1, lsl r1
    1700:	0b590b58 	bleq	1644468 <__RAM_SIZE+0x1544468>
    1704:	13010b57 	movwne	r0, #6999	; 0x1b57
    1708:	34130000 	ldrcc	r0, [r3], #-0
    170c:	02133100 	andseq	r3, r3, #0, 2
    1710:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1714:	1d140000 	ldcne	0, cr0, [r4, #-0]
    1718:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    171c:	0b42b801 	bleq	10af728 <__RAM_SIZE+0xfaf728>
    1720:	01120111 	tsteq	r2, r1, lsl r1
    1724:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    1728:	00000b57 	andeq	r0, r0, r7, asr fp
    172c:	31000515 	tstcc	r0, r5, lsl r5
    1730:	b7060213 	smladlt	r6, r3, r2, r0
    1734:	00000642 	andeq	r0, r0, r2, asr #12
    1738:	01828916 	orreq	r8, r2, r6, lsl r9
    173c:	31011101 	tstcc	r1, r1, lsl #2
    1740:	17000013 	smladne	r0, r3, r0, r0
    1744:	0001828a 	andeq	r8, r1, sl, lsl #5
    1748:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    174c:	1800000a 	stmdane	r0, {r1, r3}
    1750:	0e03012e 	adfeqsp	f0, f3, #0.5
    1754:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1758:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    175c:	0b201349 	bleq	806488 <__RAM_SIZE+0x706488>
    1760:	00001301 	andeq	r1, r0, r1, lsl #6
    1764:	03003419 	movweq	r3, #1049	; 0x419
    1768:	3b0b3a0e 	blcc	2cffa8 <__RAM_SIZE+0x1cffa8>
    176c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1770:	1a000013 	bne	17c4 <_Min_Stack_Size+0x7c4>
    1774:	0e03012e 	adfeqsp	f0, f3, #0.5
    1778:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    177c:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1780:	13010b20 	movwne	r0, #6944	; 0x1b20
    1784:	051b0000 	ldreq	r0, [fp, #-0]
    1788:	3a0e0300 	bcc	382390 <__RAM_SIZE+0x282390>
    178c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1790:	0013490b 	andseq	r4, r3, fp, lsl #18
    1794:	002e1c00 	eoreq	r1, lr, r0, lsl #24
    1798:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    179c:	030e4087 	movweq	r4, #57479	; 0xe087
    17a0:	3b0b3a0e 	blcc	2cffe0 <__RAM_SIZE+0x1cffe0>
    17a4:	000b3905 	andeq	r3, fp, r5, lsl #18
    17a8:	11010000 	mrsne	r0, (UNDEF: 1)
    17ac:	130e2501 	movwne	r2, #58625	; 0xe501
    17b0:	1b0e030b 	blne	3823e4 <__RAM_SIZE+0x2823e4>
    17b4:	1106550e 	tstne	r6, lr, lsl #10
    17b8:	10015201 	andne	r5, r1, r1, lsl #4
    17bc:	02000006 	andeq	r0, r0, #6
    17c0:	0b0b0024 	bleq	2c1858 <__RAM_SIZE+0x1c1858>
    17c4:	0e030b3e 	vmoveq.16	d3[0], r0
    17c8:	24030000 	strcs	r0, [r3], #-0
    17cc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    17d0:	0008030b 	andeq	r0, r8, fp, lsl #6
    17d4:	000f0400 	andeq	r0, pc, r0, lsl #8
    17d8:	00000b0b 	andeq	r0, r0, fp, lsl #22
    17dc:	03001605 	movweq	r1, #1541	; 0x605
    17e0:	3b0b3a0e 	blcc	2d0020 <__RAM_SIZE+0x1d0020>
    17e4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    17e8:	06000013 			; <UNDEFINED> instruction: 0x06000013
    17ec:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    17f0:	0b3a0b0b 	bleq	e84424 <__RAM_SIZE+0xd84424>
    17f4:	0b39053b 	bleq	e42ce8 <__RAM_SIZE+0xd42ce8>
    17f8:	00001301 	andeq	r1, r0, r1, lsl #6
    17fc:	03000d07 	movweq	r0, #3335	; 0xd07
    1800:	3b0b3a0e 	blcc	2d0040 <__RAM_SIZE+0x1d0040>
    1804:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1808:	000a3813 	andeq	r3, sl, r3, lsl r8
    180c:	01150800 	tsteq	r5, r0, lsl #16
    1810:	13010c27 	movwne	r0, #7207	; 0x1c27
    1814:	05090000 	streq	r0, [r9, #-0]
    1818:	00134900 	andseq	r4, r3, r0, lsl #18
    181c:	000f0a00 	andeq	r0, pc, r0, lsl #20
    1820:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    1824:	160b0000 	strne	r0, [fp], -r0
    1828:	3a0e0300 	bcc	382430 <__RAM_SIZE+0x282430>
    182c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1830:	0013490b 	andseq	r4, r3, fp, lsl #18
    1834:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
    1838:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    183c:	0b3b0b3a 	bleq	ec452c <__RAM_SIZE+0xdc452c>
    1840:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1844:	01120111 	tsteq	r2, r1, lsl r1
    1848:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    184c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1850:	00050d00 	andeq	r0, r5, r0, lsl #26
    1854:	0b3a0e03 	bleq	e85068 <__RAM_SIZE+0xd85068>
    1858:	0b390b3b 	bleq	e4454c <__RAM_SIZE+0xd4454c>
    185c:	0a021349 	beq	86588 <SYSTICK_CYCLES+0x5d549>
    1860:	340e0000 	strcc	r0, [lr], #-0
    1864:	3a0e0300 	bcc	38246c <__RAM_SIZE+0x28246c>
    1868:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    186c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1870:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1874:	1d0f0000 	stcne	0, cr0, [pc, #-0]	; 187c <_Min_Stack_Size+0x87c>
    1878:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    187c:	0b42b801 	bleq	10af888 <__RAM_SIZE+0xfaf888>
    1880:	01120111 	tsteq	r2, r1, lsl r1
    1884:	0b590b58 	bleq	16445ec <__RAM_SIZE+0x15445ec>
    1888:	13010b57 	movwne	r0, #6999	; 0x1b57
    188c:	34100000 	ldrcc	r0, [r0], #-0
    1890:	02133100 	andseq	r3, r3, #0, 2
    1894:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1898:	1d110000 	ldcne	0, cr0, [r1, #-0]
    189c:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    18a0:	0b42b801 	bleq	10af8ac <__RAM_SIZE+0xfaf8ac>
    18a4:	01120111 	tsteq	r2, r1, lsl r1
    18a8:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    18ac:	00000b57 	andeq	r0, r0, r7, asr fp
    18b0:	31011d12 	tstcc	r1, r2, lsl sp
    18b4:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    18b8:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
    18bc:	0b590b58 	bleq	1644624 <__RAM_SIZE+0x1544624>
    18c0:	13010b57 	movwne	r0, #6999	; 0x1b57
    18c4:	05130000 	ldreq	r0, [r3, #-0]
    18c8:	02133100 	andseq	r3, r3, #0, 2
    18cc:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    18d0:	1d140000 	ldcne	0, cr0, [r4, #-0]
    18d4:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    18d8:	0b42b801 	bleq	10af8e4 <__RAM_SIZE+0xfaf8e4>
    18dc:	01120111 	tsteq	r2, r1, lsl r1
    18e0:	0b590b58 	bleq	1644648 <__RAM_SIZE+0x1544648>
    18e4:	00000b57 	andeq	r0, r0, r7, asr fp
    18e8:	03012e15 	movweq	r2, #7701	; 0x1e15
    18ec:	3b0b3a0e 	blcc	2d012c <__RAM_SIZE+0x1d012c>
    18f0:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    18f4:	2013490c 	andscs	r4, r3, ip, lsl #18
    18f8:	0013010b 	andseq	r0, r3, fp, lsl #2
    18fc:	00341600 	eorseq	r1, r4, r0, lsl #12
    1900:	0b3a0e03 	bleq	e85114 <__RAM_SIZE+0xd85114>
    1904:	0b39053b 	bleq	e42df8 <__RAM_SIZE+0xd42df8>
    1908:	00001349 	andeq	r1, r0, r9, asr #6
    190c:	03012e17 	movweq	r2, #7703	; 0x1e17
    1910:	3b0b3a0e 	blcc	2d0150 <__RAM_SIZE+0x1d0150>
    1914:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1918:	010b200c 	tsteq	fp, ip
    191c:	18000013 	stmdane	r0, {r0, r1, r4}
    1920:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1924:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1928:	13490b39 	movtne	r0, #39737	; 0x9b39
    192c:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
    1930:	3a0e0301 	bcc	38253c <__RAM_SIZE+0x28253c>
    1934:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1938:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    193c:	000b2013 	andeq	r2, fp, r3, lsl r0
    1940:	11010000 	mrsne	r0, (UNDEF: 1)
    1944:	130e2501 	movwne	r2, #58625	; 0xe501
    1948:	1b0e030b 	blne	38257c <__RAM_SIZE+0x28257c>
    194c:	1106550e 	tstne	r6, lr, lsl #10
    1950:	10015201 	andne	r5, r1, r1, lsl #4
    1954:	02000006 	andeq	r0, r0, #6
    1958:	0b0b0024 	bleq	2c19f0 <__RAM_SIZE+0x1c19f0>
    195c:	0e030b3e 	vmoveq.16	d3[0], r0
    1960:	24030000 	strcs	r0, [r3], #-0
    1964:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1968:	0008030b 	andeq	r0, r8, fp, lsl #6
    196c:	000f0400 	andeq	r0, pc, r0, lsl #8
    1970:	00000b0b 	andeq	r0, r0, fp, lsl #22
    1974:	03001605 	movweq	r1, #1541	; 0x605
    1978:	3b0b3a0e 	blcc	2d01b8 <__RAM_SIZE+0x1d01b8>
    197c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1980:	06000013 			; <UNDEFINED> instruction: 0x06000013
    1984:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    1988:	0b3a0b0b 	bleq	e845bc <__RAM_SIZE+0xd845bc>
    198c:	0b39053b 	bleq	e42e80 <__RAM_SIZE+0xd42e80>
    1990:	00001301 	andeq	r1, r0, r1, lsl #6
    1994:	03000d07 	movweq	r0, #3335	; 0xd07
    1998:	3b0b3a0e 	blcc	2d01d8 <__RAM_SIZE+0x1d01d8>
    199c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    19a0:	000a3813 	andeq	r3, sl, r3, lsl r8
    19a4:	01150800 	tsteq	r5, r0, lsl #16
    19a8:	13010c27 	movwne	r0, #7207	; 0x1c27
    19ac:	05090000 	streq	r0, [r9, #-0]
    19b0:	00134900 	andseq	r4, r3, r0, lsl #18
    19b4:	000f0a00 	andeq	r0, pc, r0, lsl #20
    19b8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    19bc:	160b0000 	strne	r0, [fp], -r0
    19c0:	3a0e0300 	bcc	3825c8 <__RAM_SIZE+0x2825c8>
    19c4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    19c8:	0013490b 	andseq	r4, r3, fp, lsl #18
    19cc:	00340c00 	eorseq	r0, r4, r0, lsl #24
    19d0:	0b3a0e03 	bleq	e851e4 <__RAM_SIZE+0xd851e4>
    19d4:	0b39053b 	bleq	e42ec8 <__RAM_SIZE+0xd42ec8>
    19d8:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 18bc <_Min_Stack_Size+0x8bc>
    19dc:	00000c3c 	andeq	r0, r0, ip, lsr ip
    19e0:	3f012e0d 	svccc	0x00012e0d
    19e4:	3a0e030c 	bcc	38261c <__RAM_SIZE+0x28261c>
    19e8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    19ec:	110c270b 	tstne	ip, fp, lsl #14
    19f0:	40011201 	andmi	r1, r1, r1, lsl #4
    19f4:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    19f8:	00001301 	andeq	r1, r0, r1, lsl #6
    19fc:	0300050e 	movweq	r0, #1294	; 0x50e
    1a00:	3b0b3a0e 	blcc	2d0240 <__RAM_SIZE+0x1d0240>
    1a04:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a08:	b7060213 	smladlt	r6, r3, r2, r0
    1a0c:	00000642 	andeq	r0, r0, r2, asr #12
    1a10:	0300340f 	movweq	r3, #1039	; 0x40f
    1a14:	3b0b3a0e 	blcc	2d0254 <__RAM_SIZE+0x1d0254>
    1a18:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    1a1c:	b7060213 	smladlt	r6, r3, r2, r0
    1a20:	00000642 	andeq	r0, r0, r2, asr #12
    1a24:	31011d10 	tstcc	r1, r0, lsl sp
    1a28:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1a2c:	01110b42 	tsteq	r1, r2, asr #22
    1a30:	0b580112 	bleq	1601e80 <__RAM_SIZE+0x1501e80>
    1a34:	0b570b59 	bleq	15c47a0 <__RAM_SIZE+0x14c47a0>
    1a38:	00001301 	andeq	r1, r0, r1, lsl #6
    1a3c:	31003411 	tstcc	r0, r1, lsl r4
    1a40:	b7060213 	smladlt	r6, r3, r2, r0
    1a44:	00000642 	andeq	r0, r0, r2, asr #12
    1a48:	31011d12 	tstcc	r1, r2, lsl sp
    1a4c:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    1a50:	01110b42 	tsteq	r1, r2, asr #22
    1a54:	0b580112 	bleq	1601ea4 <__RAM_SIZE+0x1501ea4>
    1a58:	0b570559 	bleq	15c2fc4 <__RAM_SIZE+0x14c2fc4>
    1a5c:	05130000 	ldreq	r0, [r3, #-0]
    1a60:	02133100 	andseq	r3, r3, #0, 2
    1a64:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1a68:	89140000 	ldmdbhi	r4, {}	; <UNPREDICTABLE>
    1a6c:	11010182 	smlabbne	r1, r2, r1, r0
    1a70:	15000001 	strne	r0, [r0, #-1]
    1a74:	0001828a 	andeq	r8, r1, sl, lsl #5
    1a78:	42910a02 	addsmi	r0, r1, #8192	; 0x2000
    1a7c:	1600000a 	strne	r0, [r0], -sl
    1a80:	0e03012e 	adfeqsp	f0, f3, #0.5
    1a84:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1a88:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1a8c:	0b201349 	bleq	8067b8 <__RAM_SIZE+0x7067b8>
    1a90:	00001301 	andeq	r1, r0, r1, lsl #6
    1a94:	03003417 	movweq	r3, #1047	; 0x417
    1a98:	3b0b3a0e 	blcc	2d02d8 <__RAM_SIZE+0x1d02d8>
    1a9c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1aa0:	18000013 	stmdane	r0, {r0, r1, r4}
    1aa4:	0e03012e 	adfeqsp	f0, f3, #0.5
    1aa8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1aac:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1ab0:	13010b20 	movwne	r0, #6944	; 0x1b20
    1ab4:	05190000 	ldreq	r0, [r9, #-0]
    1ab8:	3a0e0300 	bcc	3826c0 <__RAM_SIZE+0x2826c0>
    1abc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ac0:	0013490b 	andseq	r4, r3, fp, lsl #18
    1ac4:	012e1a00 			; <UNDEFINED> instruction: 0x012e1a00
    1ac8:	0b3a0e03 	bleq	e852dc <__RAM_SIZE+0xd852dc>
    1acc:	0b39053b 	bleq	e42fc0 <__RAM_SIZE+0xd42fc0>
    1ad0:	13490c27 	movtne	r0, #39975	; 0x9c27
    1ad4:	00000b20 	andeq	r0, r0, r0, lsr #22
    1ad8:	01110100 	tsteq	r1, r0, lsl #2
    1adc:	0b130e25 	bleq	4c5378 <__RAM_SIZE+0x3c5378>
    1ae0:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1ae4:	01110655 	tsteq	r1, r5, asr r6
    1ae8:	06100152 			; <UNDEFINED> instruction: 0x06100152
    1aec:	24020000 	strcs	r0, [r2], #-0
    1af0:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1af4:	000e030b 	andeq	r0, lr, fp, lsl #6
    1af8:	00240300 	eoreq	r0, r4, r0, lsl #6
    1afc:	0b3e0b0b 	bleq	f84730 <__RAM_SIZE+0xe84730>
    1b00:	00000803 	andeq	r0, r0, r3, lsl #16
    1b04:	0b000f04 	bleq	571c <_Min_Stack_Size+0x471c>
    1b08:	0500000b 	streq	r0, [r0, #-11]
    1b0c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1b10:	0b3b0b3a 	bleq	ec4800 <__RAM_SIZE+0xdc4800>
    1b14:	13490b39 	movtne	r0, #39737	; 0x9b39
    1b18:	35060000 	strcc	r0, [r6, #-0]
    1b1c:	00134900 	andseq	r4, r3, r0, lsl #18
    1b20:	01130700 	tsteq	r3, r0, lsl #14
    1b24:	0b0b0e03 	bleq	2c5338 <__RAM_SIZE+0x1c5338>
    1b28:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1b2c:	13010b39 	movwne	r0, #6969	; 0x1b39
    1b30:	0d080000 	stceq	0, cr0, [r8, #-0]
    1b34:	3a0e0300 	bcc	38273c <__RAM_SIZE+0x28273c>
    1b38:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1b3c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1b40:	0900000a 	stmdbeq	r0, {r1, r3}
    1b44:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    1b48:	00001301 	andeq	r1, r0, r1, lsl #6
    1b4c:	4900050a 	stmdbmi	r0, {r1, r3, r8, sl}
    1b50:	0b000013 	bleq	1ba4 <_Min_Stack_Size+0xba4>
    1b54:	0b0b000f 	bleq	2c1b98 <__RAM_SIZE+0x1c1b98>
    1b58:	00001349 	andeq	r1, r0, r9, asr #6
    1b5c:	0300160c 	movweq	r1, #1548	; 0x60c
    1b60:	3b0b3a0e 	blcc	2d03a0 <__RAM_SIZE+0x1d03a0>
    1b64:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1b68:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    1b6c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1b70:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1b74:	13490b39 	movtne	r0, #39737	; 0x9b39
    1b78:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1b7c:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
    1b80:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1b84:	3b0b3a0e 	blcc	2d03c4 <__RAM_SIZE+0x1d03c4>
    1b88:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    1b8c:	1201110c 	andne	r1, r1, #12, 2
    1b90:	97064001 	strls	r4, [r6, -r1]
    1b94:	13010c42 	movwne	r0, #7234	; 0x1c42
    1b98:	340f0000 	strcc	r0, [pc], #-0	; 1ba0 <_Min_Stack_Size+0xba0>
    1b9c:	3a0e0300 	bcc	3827a4 <__RAM_SIZE+0x2827a4>
    1ba0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ba4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1ba8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    1bac:	0b100000 	bleq	401bb4 <__RAM_SIZE+0x301bb4>
    1bb0:	01065501 	tsteq	r6, r1, lsl #10
    1bb4:	11000013 	tstne	r0, r3, lsl r0
    1bb8:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1bbc:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1bc0:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    1bc4:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1bc8:	010b570b 	tsteq	fp, fp, lsl #14
    1bcc:	12000013 	andne	r0, r0, #19
    1bd0:	13310034 	teqne	r1, #52	; 0x34
    1bd4:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1bd8:	13000006 	movwne	r0, #6
    1bdc:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1be0:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1be4:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    1be8:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1bec:	000b5705 	andeq	r5, fp, r5, lsl #14
    1bf0:	00051400 	andeq	r1, r5, r0, lsl #8
    1bf4:	06021331 			; <UNDEFINED> instruction: 0x06021331
    1bf8:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1bfc:	82891500 	addhi	r1, r9, #0, 10
    1c00:	01110101 	tsteq	r1, r1, lsl #2
    1c04:	13011331 	movwne	r1, #4913	; 0x1331
    1c08:	8a160000 	bhi	581c10 <__RAM_SIZE+0x481c10>
    1c0c:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    1c10:	0a42910a 	beq	10a6040 <__RAM_SIZE+0xfa6040>
    1c14:	89170000 	ldmdbhi	r7, {}	; <UNPREDICTABLE>
    1c18:	11010182 	smlabbne	r1, r2, r1, r0
    1c1c:	00133101 	andseq	r3, r3, r1, lsl #2
    1c20:	011d1800 	tsteq	sp, r0, lsl #16
    1c24:	01521331 	cmpeq	r2, r1, lsr r3
    1c28:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    1c2c:	58011201 	stmdapl	r1, {r0, r9, ip}
    1c30:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    1c34:	1900000b 	stmdbne	r0, {r0, r1, r3}
    1c38:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    1c3c:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1c40:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    1c44:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1c48:	010b5705 	tsteq	fp, r5, lsl #14
    1c4c:	1a000013 	bne	1ca0 <_Min_Stack_Size+0xca0>
    1c50:	1331001d 	teqne	r1, #29
    1c54:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1c58:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    1c5c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1c60:	000b5705 	andeq	r5, fp, r5, lsl #14
    1c64:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
    1c68:	0b3a0e03 	bleq	e8547c <__RAM_SIZE+0xd8547c>
    1c6c:	0b39053b 	bleq	e43160 <__RAM_SIZE+0xd43160>
    1c70:	0b200c27 	bleq	804d14 <__RAM_SIZE+0x704d14>
    1c74:	00001301 	andeq	r1, r0, r1, lsl #6
    1c78:	0300341c 	movweq	r3, #1052	; 0x41c
    1c7c:	3b0b3a0e 	blcc	2d04bc <__RAM_SIZE+0x1d04bc>
    1c80:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1c84:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    1c88:	0e03012e 	adfeqsp	f0, f3, #0.5
    1c8c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1c90:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1c94:	0b201349 	bleq	8069c0 <__RAM_SIZE+0x7069c0>
    1c98:	00001301 	andeq	r1, r0, r1, lsl #6
    1c9c:	0300051e 	movweq	r0, #1310	; 0x51e
    1ca0:	3b0b3a0e 	blcc	2d04e0 <__RAM_SIZE+0x1d04e0>
    1ca4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1ca8:	1f000013 	svcne	0x00000013
    1cac:	0e03002e 	cdpeq	0, 0, cr0, cr3, cr14, {1}
    1cb0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1cb4:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1cb8:	00000b20 	andeq	r0, r0, r0, lsr #22
    1cbc:	3f002e20 	svccc	0x00002e20
    1cc0:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    1cc4:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    1cc8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1ccc:	00000b39 	andeq	r0, r0, r9, lsr fp
    1cd0:	01110100 	tsteq	r1, r0, lsl #2
    1cd4:	0b130e25 	bleq	4c5570 <__RAM_SIZE+0x3c5570>
    1cd8:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    1cdc:	01110655 	tsteq	r1, r5, asr r6
    1ce0:	06100152 			; <UNDEFINED> instruction: 0x06100152
    1ce4:	24020000 	strcs	r0, [r2], #-0
    1ce8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    1cec:	000e030b 	andeq	r0, lr, fp, lsl #6
    1cf0:	00240300 	eoreq	r0, r4, r0, lsl #6
    1cf4:	0b3e0b0b 	bleq	f84928 <__RAM_SIZE+0xe84928>
    1cf8:	00000803 	andeq	r0, r0, r3, lsl #16
    1cfc:	0b000f04 	bleq	5914 <_Min_Stack_Size+0x4914>
    1d00:	0500000b 	streq	r0, [r0, #-11]
    1d04:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1d08:	0b3b0b3a 	bleq	ec49f8 <__RAM_SIZE+0xdc49f8>
    1d0c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1d10:	35060000 	strcc	r0, [r6, #-0]
    1d14:	00134900 	andseq	r4, r3, r0, lsl #18
    1d18:	01130700 	tsteq	r3, r0, lsl #14
    1d1c:	0b0b0e03 	bleq	2c5530 <__RAM_SIZE+0x1c5530>
    1d20:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1d24:	13010b39 	movwne	r0, #6969	; 0x1b39
    1d28:	0d080000 	stceq	0, cr0, [r8, #-0]
    1d2c:	3a0e0300 	bcc	382934 <__RAM_SIZE+0x282934>
    1d30:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d34:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    1d38:	0900000a 	stmdbeq	r0, {r1, r3}
    1d3c:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    1d40:	00001301 	andeq	r1, r0, r1, lsl #6
    1d44:	4900050a 	stmdbmi	r0, {r1, r3, r8, sl}
    1d48:	0b000013 	bleq	1d9c <_Min_Stack_Size+0xd9c>
    1d4c:	0b0b000f 	bleq	2c1d90 <__RAM_SIZE+0x1c1d90>
    1d50:	00001349 	andeq	r1, r0, r9, asr #6
    1d54:	0300160c 	movweq	r1, #1548	; 0x60c
    1d58:	3b0b3a0e 	blcc	2d0598 <__RAM_SIZE+0x1d0598>
    1d5c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1d60:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    1d64:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1d68:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1d6c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1d70:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    1d74:	010e0000 	mrseq	r0, (UNDEF: 14)
    1d78:	01134901 	tsteq	r3, r1, lsl #18
    1d7c:	0f000013 	svceq	0x00000013
    1d80:	13490021 	movtne	r0, #36897	; 0x9021
    1d84:	00000b2f 	andeq	r0, r0, pc, lsr #22
    1d88:	3f012e10 	svccc	0x00012e10
    1d8c:	3a0e030c 	bcc	3829c4 <__RAM_SIZE+0x2829c4>
    1d90:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1d94:	110c270b 	tstne	ip, fp, lsl #14
    1d98:	40011201 	andmi	r1, r1, r1, lsl #4
    1d9c:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    1da0:	00001301 	andeq	r1, r0, r1, lsl #6
    1da4:	03000511 	movweq	r0, #1297	; 0x511
    1da8:	3b0b3a0e 	blcc	2d05e8 <__RAM_SIZE+0x1d05e8>
    1dac:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1db0:	b7060213 	smladlt	r6, r3, r2, r0
    1db4:	00000642 	andeq	r0, r0, r2, asr #12
    1db8:	03003412 	movweq	r3, #1042	; 0x412
    1dbc:	3b0b3a0e 	blcc	2d05fc <__RAM_SIZE+0x1d05fc>
    1dc0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    1dc4:	b7060213 	smladlt	r6, r3, r2, r0
    1dc8:	00000642 	andeq	r0, r0, r2, asr #12
    1dcc:	55010b13 	strpl	r0, [r1, #-2835]	; 0xfffff4ed
    1dd0:	00130106 	andseq	r0, r3, r6, lsl #2
    1dd4:	011d1400 	tsteq	sp, r0, lsl #8
    1dd8:	01521331 	cmpeq	r2, r1, lsr r3
    1ddc:	110542b8 			; <UNDEFINED> instruction: 0x110542b8
    1de0:	58011201 	stmdapl	r1, {r0, r9, ip}
    1de4:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    1de8:	0013010b 	andseq	r0, r3, fp, lsl #2
    1dec:	00341500 	eorseq	r1, r4, r0, lsl #10
    1df0:	06021331 			; <UNDEFINED> instruction: 0x06021331
    1df4:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1df8:	011d1600 	tsteq	sp, r0, lsl #12
    1dfc:	01521331 	cmpeq	r2, r1, lsr r3
    1e00:	110542b8 			; <UNDEFINED> instruction: 0x110542b8
    1e04:	58011201 	stmdapl	r1, {r0, r9, ip}
    1e08:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    1e0c:	1700000b 	strne	r0, [r0, -fp]
    1e10:	13310005 	teqne	r1, #5
    1e14:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    1e18:	18000006 	stmdane	r0, {r1, r2}
    1e1c:	01018289 	smlabbeq	r1, r9, r2, r8
    1e20:	13310111 	teqne	r1, #1073741828	; 0x40000004
    1e24:	00001301 	andeq	r1, r0, r1, lsl #6
    1e28:	01828a19 	orreq	r8, r2, r9, lsl sl
    1e2c:	910a0200 	mrsls	r0, R10_fiq
    1e30:	00000a42 	andeq	r0, r0, r2, asr #20
    1e34:	0182891a 	orreq	r8, r2, sl, lsl r9
    1e38:	31011101 	tstcc	r1, r1, lsl #2
    1e3c:	1b000013 	blne	1e90 <_Min_Stack_Size+0xe90>
    1e40:	1331001d 	teqne	r1, #29
    1e44:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    1e48:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
    1e4c:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    1e50:	000b5705 	andeq	r5, fp, r5, lsl #14
    1e54:	012e1c00 			; <UNDEFINED> instruction: 0x012e1c00
    1e58:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    1e5c:	0b3b0b3a 	bleq	ec4b4c <__RAM_SIZE+0xdc4b4c>
    1e60:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    1e64:	01120111 	tsteq	r2, r1, lsl r1
    1e68:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    1e6c:	0013010c 	andseq	r0, r3, ip, lsl #2
    1e70:	00051d00 	andeq	r1, r5, r0, lsl #26
    1e74:	0b3a0e03 	bleq	e85688 <__RAM_SIZE+0xd85688>
    1e78:	0b390b3b 	bleq	e44b6c <__RAM_SIZE+0xd44b6c>
    1e7c:	06021349 	streq	r1, [r2], -r9, asr #6
    1e80:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    1e84:	82891e00 	addhi	r1, r9, #0, 28
    1e88:	01110001 	tsteq	r1, r1
    1e8c:	00001331 	andeq	r1, r0, r1, lsr r3
    1e90:	03012e1f 	movweq	r2, #7711	; 0x1e1f
    1e94:	3b0b3a0e 	blcc	2d06d4 <__RAM_SIZE+0x1d06d4>
    1e98:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1e9c:	010b200c 	tsteq	fp, ip
    1ea0:	20000013 	andcs	r0, r0, r3, lsl r0
    1ea4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1ea8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1eac:	13490b39 	movtne	r0, #39737	; 0x9b39
    1eb0:	2e210000 	cdpcs	0, 2, cr0, cr1, cr0, {0}
    1eb4:	3a0e0301 	bcc	382ac0 <__RAM_SIZE+0x282ac0>
    1eb8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ebc:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    1ec0:	010b2013 	tsteq	fp, r3, lsl r0
    1ec4:	22000013 	andcs	r0, r0, #19
    1ec8:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    1ecc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1ed0:	13490b39 	movtne	r0, #39737	; 0x9b39
    1ed4:	2e230000 	cdpcs	0, 2, cr0, cr3, cr0, {0}
    1ed8:	3a0e0300 	bcc	382ae0 <__RAM_SIZE+0x282ae0>
    1edc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ee0:	200c270b 	andcs	r2, ip, fp, lsl #14
    1ee4:	2400000b 	strcs	r0, [r0], #-11
    1ee8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1e38 <_Min_Stack_Size+0xe38>
    1eec:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1ef0:	3a0e030e 	bcc	382b30 <__RAM_SIZE+0x282b30>
    1ef4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1ef8:	2500000b 	strcs	r0, [r0, #-11]
    1efc:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 1e4c <_Min_Stack_Size+0xe4c>
    1f00:	40870c3c 	addmi	r0, r7, ip, lsr ip
    1f04:	3a0e030e 	bcc	382b44 <__RAM_SIZE+0x282b44>
    1f08:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f0c:	0000000b 	andeq	r0, r0, fp
    1f10:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    1f14:	030b130e 	movweq	r1, #45838	; 0xb30e
    1f18:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    1f1c:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    1f20:	00061001 	andeq	r1, r6, r1
    1f24:	00240200 	eoreq	r0, r4, r0, lsl #4
    1f28:	0b3e0b0b 	bleq	f84b5c <__RAM_SIZE+0xe84b5c>
    1f2c:	00000e03 	andeq	r0, r0, r3, lsl #28
    1f30:	0b002403 	bleq	af44 <_Min_Stack_Size+0x9f44>
    1f34:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    1f38:	04000008 	streq	r0, [r0], #-8
    1f3c:	0b0b000f 	bleq	2c1f80 <__RAM_SIZE+0x1c1f80>
    1f40:	16050000 	strne	r0, [r5], -r0
    1f44:	3a0e0300 	bcc	382b4c <__RAM_SIZE+0x282b4c>
    1f48:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f4c:	0013490b 	andseq	r4, r3, fp, lsl #18
    1f50:	00350600 	eorseq	r0, r5, r0, lsl #12
    1f54:	00001349 	andeq	r1, r0, r9, asr #6
    1f58:	03011307 	movweq	r1, #4871	; 0x1307
    1f5c:	3a0b0b0e 	bcc	2c4b9c <__RAM_SIZE+0x1c4b9c>
    1f60:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    1f64:	0013010b 	andseq	r0, r3, fp, lsl #2
    1f68:	000d0800 	andeq	r0, sp, r0, lsl #16
    1f6c:	0b3a0e03 	bleq	e85780 <__RAM_SIZE+0xd85780>
    1f70:	0b39053b 	bleq	e43464 <__RAM_SIZE+0xd43464>
    1f74:	0a381349 	beq	e06ca0 <__RAM_SIZE+0xd06ca0>
    1f78:	15090000 	strne	r0, [r9, #-0]
    1f7c:	010c2701 	tsteq	ip, r1, lsl #14
    1f80:	0a000013 	beq	1fd4 <_Min_Stack_Size+0xfd4>
    1f84:	13490005 	movtne	r0, #36869	; 0x9005
    1f88:	0f0b0000 	svceq	0x000b0000
    1f8c:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    1f90:	0c000013 	stceq	0, cr0, [r0], {19}
    1f94:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    1f98:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    1f9c:	13490b39 	movtne	r0, #39737	; 0x9b39
    1fa0:	340d0000 	strcc	r0, [sp], #-0
    1fa4:	3a0e0300 	bcc	382bac <__RAM_SIZE+0x282bac>
    1fa8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    1fac:	3f13490b 	svccc	0x0013490b
    1fb0:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    1fb4:	00340e00 	eorseq	r0, r4, r0, lsl #28
    1fb8:	0b3a0e03 	bleq	e857cc <__RAM_SIZE+0xd857cc>
    1fbc:	0b39053b 	bleq	e434b0 <__RAM_SIZE+0xd434b0>
    1fc0:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 1ea4 <_Min_Stack_Size+0xea4>
    1fc4:	00000c3c 	andeq	r0, r0, ip, lsr ip
    1fc8:	4901010f 	stmdbmi	r1, {r0, r1, r2, r3, r8}
    1fcc:	00130113 	andseq	r0, r3, r3, lsl r1
    1fd0:	00211000 	eoreq	r1, r1, r0
    1fd4:	0b2f1349 	bleq	bc6d00 <__RAM_SIZE+0xac6d00>
    1fd8:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
    1fdc:	030c3f01 	movweq	r3, #52993	; 0xcf01
    1fe0:	3b0b3a0e 	blcc	2d0820 <__RAM_SIZE+0x1d0820>
    1fe4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    1fe8:	1201110c 	andne	r1, r1, #12, 2
    1fec:	97064001 	strls	r4, [r6, -r1]
    1ff0:	13010c42 	movwne	r0, #7234	; 0x1c42
    1ff4:	05120000 	ldreq	r0, [r2, #-0]
    1ff8:	3a0e0300 	bcc	382c00 <__RAM_SIZE+0x282c00>
    1ffc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2000:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2004:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    2008:	34130000 	ldrcc	r0, [r3], #-0
    200c:	3a0e0300 	bcc	382c14 <__RAM_SIZE+0x282c14>
    2010:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2014:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2018:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    201c:	0b140000 	bleq	502024 <__RAM_SIZE+0x402024>
    2020:	01065501 	tsteq	r6, r1, lsl #10
    2024:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
    2028:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    202c:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    2030:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
    2034:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    2038:	010b5705 	tsteq	fp, r5, lsl #14
    203c:	16000013 			; <UNDEFINED> instruction: 0x16000013
    2040:	13310034 	teqne	r1, #52	; 0x34
    2044:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2048:	17000006 	strne	r0, [r0, -r6]
    204c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    2050:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    2054:	12011105 	andne	r1, r1, #1073741825	; 0x40000001
    2058:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    205c:	000b5705 	andeq	r5, fp, r5, lsl #14
    2060:	00051800 	andeq	r1, r5, r0, lsl #16
    2064:	06021331 			; <UNDEFINED> instruction: 0x06021331
    2068:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    206c:	82891900 	addhi	r1, r9, #0, 18
    2070:	01110101 	tsteq	r1, r1, lsl #2
    2074:	13011331 	movwne	r1, #4913	; 0x1331
    2078:	8a1a0000 	bhi	682080 <__RAM_SIZE+0x582080>
    207c:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    2080:	0a42910a 	beq	10a64b0 <__RAM_SIZE+0xfa64b0>
    2084:	891b0000 	ldmdbhi	fp, {}	; <UNPREDICTABLE>
    2088:	11010182 	smlabbne	r1, r2, r1, r0
    208c:	00133101 	andseq	r3, r3, r1, lsl #2
    2090:	001d1c00 	andseq	r1, sp, r0, lsl #24
    2094:	01521331 	cmpeq	r2, r1, lsr r3
    2098:	110542b8 			; <UNDEFINED> instruction: 0x110542b8
    209c:	58011201 	stmdapl	r1, {r0, r9, ip}
    20a0:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    20a4:	1d00000b 	stcne	0, cr0, [r0, #-44]	; 0xffffffd4
    20a8:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 1ff8 <_Min_Stack_Size+0xff8>
    20ac:	0b3a0e03 	bleq	e858c0 <__RAM_SIZE+0xd858c0>
    20b0:	0b390b3b 	bleq	e44da4 <__RAM_SIZE+0xd44da4>
    20b4:	01110c27 	tsteq	r1, r7, lsr #24
    20b8:	06400112 			; <UNDEFINED> instruction: 0x06400112
    20bc:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    20c0:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    20c4:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    20c8:	0b3b0b3a 	bleq	ec4db8 <__RAM_SIZE+0xdc4db8>
    20cc:	13490b39 	movtne	r0, #39737	; 0x9b39
    20d0:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    20d4:	1f000006 	svcne	0x00000006
    20d8:	00018289 	andeq	r8, r1, r9, lsl #5
    20dc:	13310111 	teqne	r1, #1073741828	; 0x40000004
    20e0:	2e200000 	cdpcs	0, 2, cr0, cr0, cr0, {0}
    20e4:	3a0e0301 	bcc	382cf0 <__RAM_SIZE+0x282cf0>
    20e8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    20ec:	200c270b 	andcs	r2, ip, fp, lsl #14
    20f0:	0013010b 	andseq	r0, r3, fp, lsl #2
    20f4:	00342100 	eorseq	r2, r4, r0, lsl #2
    20f8:	0b3a0e03 	bleq	e8590c <__RAM_SIZE+0xd8590c>
    20fc:	0b39053b 	bleq	e435f0 <__RAM_SIZE+0xd435f0>
    2100:	00001349 	andeq	r1, r0, r9, asr #6
    2104:	03012e22 	movweq	r2, #7714	; 0x1e22
    2108:	3b0b3a0e 	blcc	2d0948 <__RAM_SIZE+0x1d0948>
    210c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2110:	2013490c 	andscs	r4, r3, ip, lsl #18
    2114:	0013010b 	andseq	r0, r3, fp, lsl #2
    2118:	00052300 	andeq	r2, r5, r0, lsl #6
    211c:	0b3a0e03 	bleq	e85930 <__RAM_SIZE+0xd85930>
    2120:	0b39053b 	bleq	e43614 <__RAM_SIZE+0xd43614>
    2124:	00001349 	andeq	r1, r0, r9, asr #6
    2128:	03002e24 	movweq	r2, #3620	; 0xe24
    212c:	3b0b3a0e 	blcc	2d096c <__RAM_SIZE+0x1d096c>
    2130:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2134:	000b200c 	andeq	r2, fp, ip
    2138:	002e2500 	eoreq	r2, lr, r0, lsl #10
    213c:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    2140:	030e4087 	movweq	r4, #57479	; 0xe087
    2144:	3b0b3a0e 	blcc	2d0984 <__RAM_SIZE+0x1d0984>
    2148:	000b3905 	andeq	r3, fp, r5, lsl #18
    214c:	002e2600 	eoreq	r2, lr, r0, lsl #12
    2150:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    2154:	030e4087 	movweq	r4, #57479	; 0xe087
    2158:	3b0b3a0e 	blcc	2d0998 <__RAM_SIZE+0x1d0998>
    215c:	000b390b 	andeq	r3, fp, fp, lsl #18
    2160:	11010000 	mrsne	r0, (UNDEF: 1)
    2164:	130e2501 	movwne	r2, #58625	; 0xe501
    2168:	1b0e030b 	blne	382d9c <__RAM_SIZE+0x282d9c>
    216c:	1106550e 	tstne	r6, lr, lsl #10
    2170:	10015201 	andne	r5, r1, r1, lsl #4
    2174:	02000006 	andeq	r0, r0, #6
    2178:	0b0b0024 	bleq	2c2210 <__RAM_SIZE+0x1c2210>
    217c:	0e030b3e 	vmoveq.16	d3[0], r0
    2180:	24030000 	strcs	r0, [r3], #-0
    2184:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2188:	0008030b 	andeq	r0, r8, fp, lsl #6
    218c:	000f0400 	andeq	r0, pc, r0, lsl #8
    2190:	00000b0b 	andeq	r0, r0, fp, lsl #22
    2194:	03001605 	movweq	r1, #1541	; 0x605
    2198:	3b0b3a0e 	blcc	2d09d8 <__RAM_SIZE+0x1d09d8>
    219c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    21a0:	06000013 			; <UNDEFINED> instruction: 0x06000013
    21a4:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    21a8:	0b3a0b0b 	bleq	e84ddc <__RAM_SIZE+0xd84ddc>
    21ac:	0b39053b 	bleq	e436a0 <__RAM_SIZE+0xd436a0>
    21b0:	00001301 	andeq	r1, r0, r1, lsl #6
    21b4:	03000d07 	movweq	r0, #3335	; 0xd07
    21b8:	3b0b3a0e 	blcc	2d09f8 <__RAM_SIZE+0x1d09f8>
    21bc:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    21c0:	000a3813 	andeq	r3, sl, r3, lsl r8
    21c4:	01150800 	tsteq	r5, r0, lsl #16
    21c8:	13010c27 	movwne	r0, #7207	; 0x1c27
    21cc:	05090000 	streq	r0, [r9, #-0]
    21d0:	00134900 	andseq	r4, r3, r0, lsl #18
    21d4:	000f0a00 	andeq	r0, pc, r0, lsl #20
    21d8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    21dc:	160b0000 	strne	r0, [fp], -r0
    21e0:	3a0e0300 	bcc	382de8 <__RAM_SIZE+0x282de8>
    21e4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    21e8:	0013490b 	andseq	r4, r3, fp, lsl #18
    21ec:	00340c00 	eorseq	r0, r4, r0, lsl #24
    21f0:	0b3a0e03 	bleq	e85a04 <__RAM_SIZE+0xd85a04>
    21f4:	0b390b3b 	bleq	e44ee8 <__RAM_SIZE+0xd44ee8>
    21f8:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 20dc <_Min_Stack_Size+0x10dc>
    21fc:	00000c3c 	andeq	r0, r0, ip, lsr ip
    2200:	0300340d 	movweq	r3, #1037	; 0x40d
    2204:	3b0b3a0e 	blcc	2d0a44 <__RAM_SIZE+0x1d0a44>
    2208:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    220c:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    2210:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    2214:	13490101 	movtne	r0, #37121	; 0x9101
    2218:	00001301 	andeq	r1, r0, r1, lsl #6
    221c:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
    2220:	000b2f13 	andeq	r2, fp, r3, lsl pc
    2224:	012e1000 			; <UNDEFINED> instruction: 0x012e1000
    2228:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    222c:	0b3b0b3a 	bleq	ec4f1c <__RAM_SIZE+0xdc4f1c>
    2230:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2234:	01120111 	tsteq	r2, r1, lsl r1
    2238:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    223c:	0013010c 	andseq	r0, r3, ip, lsl #2
    2240:	00341100 	eorseq	r1, r4, r0, lsl #2
    2244:	0b3a0e03 	bleq	e85a58 <__RAM_SIZE+0xd85a58>
    2248:	0b390b3b 	bleq	e44f3c <__RAM_SIZE+0xd44f3c>
    224c:	06021349 	streq	r1, [r2], -r9, asr #6
    2250:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2254:	010b1200 	mrseq	r1, R11_fiq
    2258:	13010655 	movwne	r0, #5717	; 0x1655
    225c:	1d130000 	ldcne	0, cr0, [r3, #-0]
    2260:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    2264:	0b42b801 	bleq	10b0270 <__RAM_SIZE+0xfb0270>
    2268:	01120111 	tsteq	r2, r1, lsl r1
    226c:	0b590b58 	bleq	1644fd4 <__RAM_SIZE+0x1544fd4>
    2270:	13010b57 	movwne	r0, #6999	; 0x1b57
    2274:	34140000 	ldrcc	r0, [r4], #-0
    2278:	02133100 	andseq	r3, r3, #0, 2
    227c:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    2280:	1d150000 	ldcne	0, cr0, [r5, #-0]
    2284:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    2288:	0b42b801 	bleq	10b0294 <__RAM_SIZE+0xfb0294>
    228c:	01120111 	tsteq	r2, r1, lsl r1
    2290:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    2294:	00000b57 	andeq	r0, r0, r7, asr fp
    2298:	31000516 	tstcc	r0, r6, lsl r5
    229c:	b7060213 	smladlt	r6, r3, r2, r0
    22a0:	00000642 	andeq	r0, r0, r2, asr #12
    22a4:	01828917 	orreq	r8, r2, r7, lsl r9
    22a8:	31011101 	tstcc	r1, r1, lsl #2
    22ac:	00130113 	andseq	r0, r3, r3, lsl r1
    22b0:	828a1800 	addhi	r1, sl, #0, 16
    22b4:	0a020001 	beq	822c0 <SYSTICK_CYCLES+0x59281>
    22b8:	000a4291 	muleq	sl, r1, r2
    22bc:	82891900 	addhi	r1, r9, #0, 18
    22c0:	01110101 	tsteq	r1, r1, lsl #2
    22c4:	00001331 	andeq	r1, r0, r1, lsr r3
    22c8:	31011d1a 	tstcc	r1, sl, lsl sp
    22cc:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    22d0:	06550b42 	ldrbeq	r0, [r5], -r2, asr #22
    22d4:	0b590b58 	bleq	164503c <__RAM_SIZE+0x154503c>
    22d8:	00000b57 	andeq	r0, r0, r7, asr fp
    22dc:	03012e1b 	movweq	r2, #7707	; 0x1e1b
    22e0:	3b0b3a0e 	blcc	2d0b20 <__RAM_SIZE+0x1d0b20>
    22e4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    22e8:	2013490c 	andscs	r4, r3, ip, lsl #18
    22ec:	0013010b 	andseq	r0, r3, fp, lsl #2
    22f0:	00341c00 	eorseq	r1, r4, r0, lsl #24
    22f4:	0b3a0e03 	bleq	e85b08 <__RAM_SIZE+0xd85b08>
    22f8:	0b39053b 	bleq	e437ec <__RAM_SIZE+0xd437ec>
    22fc:	00001349 	andeq	r1, r0, r9, asr #6
    2300:	03012e1d 	movweq	r2, #7709	; 0x1e1d
    2304:	3b0b3a0e 	blcc	2d0b44 <__RAM_SIZE+0x1d0b44>
    2308:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    230c:	010b200c 	tsteq	fp, ip
    2310:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    2314:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    2318:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    231c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2320:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
    2324:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    2328:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    232c:	0b3a0e03 	bleq	e85b40 <__RAM_SIZE+0xd85b40>
    2330:	0b39053b 	bleq	e43824 <__RAM_SIZE+0xd43824>
    2334:	01000000 	mrseq	r0, (UNDEF: 0)
    2338:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    233c:	0e030b13 	vmoveq.32	d3[0], r0
    2340:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    2344:	01520111 	cmpeq	r2, r1, lsl r1
    2348:	00000610 	andeq	r0, r0, r0, lsl r6
    234c:	0b002402 	bleq	b35c <_Min_Stack_Size+0xa35c>
    2350:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2354:	0300000e 	movweq	r0, #14
    2358:	0b0b0024 	bleq	2c23f0 <__RAM_SIZE+0x1c23f0>
    235c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    2360:	0f040000 	svceq	0x00040000
    2364:	000b0b00 	andeq	r0, fp, r0, lsl #22
    2368:	00160500 	andseq	r0, r6, r0, lsl #10
    236c:	0b3a0e03 	bleq	e85b80 <__RAM_SIZE+0xd85b80>
    2370:	0b390b3b 	bleq	e45064 <__RAM_SIZE+0xd45064>
    2374:	00001349 	andeq	r1, r0, r9, asr #6
    2378:	03011306 	movweq	r1, #4870	; 0x1306
    237c:	3a0b0b0e 	bcc	2c4fbc <__RAM_SIZE+0x1c4fbc>
    2380:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2384:	0013010b 	andseq	r0, r3, fp, lsl #2
    2388:	000d0700 	andeq	r0, sp, r0, lsl #14
    238c:	0b3a0e03 	bleq	e85ba0 <__RAM_SIZE+0xd85ba0>
    2390:	0b39053b 	bleq	e43884 <__RAM_SIZE+0xd43884>
    2394:	0a381349 	beq	e070c0 <__RAM_SIZE+0xd070c0>
    2398:	15080000 	strne	r0, [r8, #-0]
    239c:	010c2701 	tsteq	ip, r1, lsl #14
    23a0:	09000013 	stmdbeq	r0, {r0, r1, r4}
    23a4:	13490005 	movtne	r0, #36869	; 0x9005
    23a8:	0f0a0000 	svceq	0x000a0000
    23ac:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    23b0:	0b000013 	bleq	2404 <_Min_Stack_Size+0x1404>
    23b4:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    23b8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    23bc:	13490b39 	movtne	r0, #39737	; 0x9b39
    23c0:	340c0000 	strcc	r0, [ip], #-0
    23c4:	3a0e0300 	bcc	382fcc <__RAM_SIZE+0x282fcc>
    23c8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    23cc:	3f13490b 	svccc	0x0013490b
    23d0:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    23d4:	012e0d00 			; <UNDEFINED> instruction: 0x012e0d00
    23d8:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    23dc:	0b3b0b3a 	bleq	ec50cc <__RAM_SIZE+0xdc50cc>
    23e0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    23e4:	01120111 	tsteq	r2, r1, lsl r1
    23e8:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    23ec:	0013010c 	andseq	r0, r3, ip, lsl #2
    23f0:	00050e00 	andeq	r0, r5, r0, lsl #28
    23f4:	0b3a0e03 	bleq	e85c08 <__RAM_SIZE+0xd85c08>
    23f8:	0b390b3b 	bleq	e450ec <__RAM_SIZE+0xd450ec>
    23fc:	06021349 	streq	r1, [r2], -r9, asr #6
    2400:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2404:	00340f00 	eorseq	r0, r4, r0, lsl #30
    2408:	0b3a0e03 	bleq	e85c1c <__RAM_SIZE+0xd85c1c>
    240c:	0b390b3b 	bleq	e45100 <__RAM_SIZE+0xd45100>
    2410:	06021349 	streq	r1, [r2], -r9, asr #6
    2414:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2418:	011d1000 	tsteq	sp, r0
    241c:	01521331 	cmpeq	r2, r1, lsr r3
    2420:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    2424:	58011201 	stmdapl	r1, {r0, r9, ip}
    2428:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    242c:	0013010b 	andseq	r0, r3, fp, lsl #2
    2430:	00341100 	eorseq	r1, r4, r0, lsl #2
    2434:	06021331 			; <UNDEFINED> instruction: 0x06021331
    2438:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    243c:	011d1200 	tsteq	sp, r0, lsl #4
    2440:	01521331 	cmpeq	r2, r1, lsr r3
    2444:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    2448:	58011201 	stmdapl	r1, {r0, r9, ip}
    244c:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    2450:	1300000b 	movwne	r0, #11
    2454:	13310005 	teqne	r1, #5
    2458:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    245c:	14000006 	strne	r0, [r0], #-6
    2460:	01018289 	smlabbeq	r1, r9, r2, r8
    2464:	13010111 	movwne	r0, #4369	; 0x1111
    2468:	8a150000 	bhi	542470 <__RAM_SIZE+0x442470>
    246c:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    2470:	0a42910a 	beq	10a68a0 <__RAM_SIZE+0xfa68a0>
    2474:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
    2478:	11000182 	smlabbne	r0, r2, r1, r0
    247c:	00133101 	andseq	r3, r3, r1, lsl #2
    2480:	012e1700 			; <UNDEFINED> instruction: 0x012e1700
    2484:	0b3a0e03 	bleq	e85c98 <__RAM_SIZE+0xd85c98>
    2488:	0b39053b 	bleq	e4397c <__RAM_SIZE+0xd4397c>
    248c:	13490c27 	movtne	r0, #39975	; 0x9c27
    2490:	13010b20 	movwne	r0, #6944	; 0x1b20
    2494:	34180000 	ldrcc	r0, [r8], #-0
    2498:	3a0e0300 	bcc	3830a0 <__RAM_SIZE+0x2830a0>
    249c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    24a0:	0013490b 	andseq	r4, r3, fp, lsl #18
    24a4:	012e1900 			; <UNDEFINED> instruction: 0x012e1900
    24a8:	0b3a0e03 	bleq	e85cbc <__RAM_SIZE+0xd85cbc>
    24ac:	0b39053b 	bleq	e439a0 <__RAM_SIZE+0xd439a0>
    24b0:	0b200c27 	bleq	805554 <__RAM_SIZE+0x705554>
    24b4:	00001301 	andeq	r1, r0, r1, lsl #6
    24b8:	0300051a 	movweq	r0, #1306	; 0x51a
    24bc:	3b0b3a0e 	blcc	2d0cfc <__RAM_SIZE+0x1d0cfc>
    24c0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    24c4:	1b000013 	blne	2518 <_Min_Stack_Size+0x1518>
    24c8:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 2418 <_Min_Stack_Size+0x1418>
    24cc:	40870c3c 	addmi	r0, r7, ip, lsr ip
    24d0:	3a0e030e 	bcc	383110 <__RAM_SIZE+0x283110>
    24d4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    24d8:	0000000b 	andeq	r0, r0, fp
    24dc:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    24e0:	030b130e 	movweq	r1, #45838	; 0xb30e
    24e4:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    24e8:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    24ec:	00061001 	andeq	r1, r6, r1
    24f0:	00240200 	eoreq	r0, r4, r0, lsl #4
    24f4:	0b3e0b0b 	bleq	f85128 <__RAM_SIZE+0xe85128>
    24f8:	00000e03 	andeq	r0, r0, r3, lsl #28
    24fc:	0b002403 	bleq	b510 <_Min_Stack_Size+0xa510>
    2500:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2504:	04000008 	streq	r0, [r0], #-8
    2508:	0b0b000f 	bleq	2c254c <__RAM_SIZE+0x1c254c>
    250c:	16050000 	strne	r0, [r5], -r0
    2510:	3a0e0300 	bcc	383118 <__RAM_SIZE+0x283118>
    2514:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2518:	0013490b 	andseq	r4, r3, fp, lsl #18
    251c:	01130600 	tsteq	r3, r0, lsl #12
    2520:	0b0b0e03 	bleq	2c5d34 <__RAM_SIZE+0x1c5d34>
    2524:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2528:	13010b39 	movwne	r0, #6969	; 0x1b39
    252c:	0d070000 	stceq	0, cr0, [r7, #-0]
    2530:	3a0e0300 	bcc	383138 <__RAM_SIZE+0x283138>
    2534:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2538:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    253c:	0800000a 	stmdaeq	r0, {r1, r3}
    2540:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    2544:	00001301 	andeq	r1, r0, r1, lsl #6
    2548:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
    254c:	0a000013 	beq	25a0 <_Min_Stack_Size+0x15a0>
    2550:	0b0b000f 	bleq	2c2594 <__RAM_SIZE+0x1c2594>
    2554:	00001349 	andeq	r1, r0, r9, asr #6
    2558:	0300160b 	movweq	r1, #1547	; 0x60b
    255c:	3b0b3a0e 	blcc	2d0d9c <__RAM_SIZE+0x1d0d9c>
    2560:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2564:	0c000013 	stceq	0, cr0, [r0], {19}
    2568:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    256c:	0b3b0b3a 	bleq	ec525c <__RAM_SIZE+0xdc525c>
    2570:	13490b39 	movtne	r0, #39737	; 0x9b39
    2574:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    2578:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
    257c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    2580:	3b0b3a0e 	blcc	2d0dc0 <__RAM_SIZE+0x1d0dc0>
    2584:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2588:	1201110c 	andne	r1, r1, #12, 2
    258c:	97064001 	strls	r4, [r6, -r1]
    2590:	13010c42 	movwne	r0, #7234	; 0x1c42
    2594:	340e0000 	strcc	r0, [lr], #-0
    2598:	3a0e0300 	bcc	3831a0 <__RAM_SIZE+0x2831a0>
    259c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    25a0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    25a4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    25a8:	1d0f0000 	stcne	0, cr0, [pc, #-0]	; 25b0 <_Min_Stack_Size+0x15b0>
    25ac:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    25b0:	0b42b801 	bleq	10b05bc <__RAM_SIZE+0xfb05bc>
    25b4:	01120111 	tsteq	r2, r1, lsl r1
    25b8:	0b590b58 	bleq	1645320 <__RAM_SIZE+0x1545320>
    25bc:	13010b57 	movwne	r0, #6999	; 0x1b57
    25c0:	34100000 	ldrcc	r0, [r0], #-0
    25c4:	02133100 	andseq	r3, r3, #0, 2
    25c8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    25cc:	1d110000 	ldcne	0, cr0, [r1, #-0]
    25d0:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    25d4:	0b42b801 	bleq	10b05e0 <__RAM_SIZE+0xfb05e0>
    25d8:	01120111 	tsteq	r2, r1, lsl r1
    25dc:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
    25e0:	00000b57 	andeq	r0, r0, r7, asr fp
    25e4:	31000512 	tstcc	r0, r2, lsl r5
    25e8:	b7060213 	smladlt	r6, r3, r2, r0
    25ec:	00000642 	andeq	r0, r0, r2, asr #12
    25f0:	01828913 	orreq	r8, r2, r3, lsl r9
    25f4:	31011100 	mrscc	r1, (UNDEF: 17)
    25f8:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
    25fc:	0e03012e 	adfeqsp	f0, f3, #0.5
    2600:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2604:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2608:	0b201349 	bleq	807334 <__RAM_SIZE+0x707334>
    260c:	00001301 	andeq	r1, r0, r1, lsl #6
    2610:	03003415 	movweq	r3, #1045	; 0x415
    2614:	3b0b3a0e 	blcc	2d0e54 <__RAM_SIZE+0x1d0e54>
    2618:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    261c:	16000013 			; <UNDEFINED> instruction: 0x16000013
    2620:	0e03012e 	adfeqsp	f0, f3, #0.5
    2624:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2628:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    262c:	13010b20 	movwne	r0, #6944	; 0x1b20
    2630:	05170000 	ldreq	r0, [r7, #-0]
    2634:	3a0e0300 	bcc	38323c <__RAM_SIZE+0x28323c>
    2638:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    263c:	0013490b 	andseq	r4, r3, fp, lsl #18
    2640:	002e1800 	eoreq	r1, lr, r0, lsl #16
    2644:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    2648:	030e4087 	movweq	r4, #57479	; 0xe087
    264c:	3b0b3a0e 	blcc	2d0e8c <__RAM_SIZE+0x1d0e8c>
    2650:	000b3905 	andeq	r3, fp, r5, lsl #18
    2654:	11010000 	mrsne	r0, (UNDEF: 1)
    2658:	130e2501 	movwne	r2, #58625	; 0xe501
    265c:	1b0e030b 	blne	383290 <__RAM_SIZE+0x283290>
    2660:	1106550e 	tstne	r6, lr, lsl #10
    2664:	10015201 	andne	r5, r1, r1, lsl #4
    2668:	02000006 	andeq	r0, r0, #6
    266c:	0b0b0024 	bleq	2c2704 <__RAM_SIZE+0x1c2704>
    2670:	0e030b3e 	vmoveq.16	d3[0], r0
    2674:	24030000 	strcs	r0, [r3], #-0
    2678:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    267c:	0008030b 	andeq	r0, r8, fp, lsl #6
    2680:	000f0400 	andeq	r0, pc, r0, lsl #8
    2684:	00000b0b 	andeq	r0, r0, fp, lsl #22
    2688:	03001605 	movweq	r1, #1541	; 0x605
    268c:	3b0b3a0e 	blcc	2d0ecc <__RAM_SIZE+0x1d0ecc>
    2690:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2694:	06000013 			; <UNDEFINED> instruction: 0x06000013
    2698:	13490035 	movtne	r0, #36917	; 0x9035
    269c:	13070000 	movwne	r0, #28672	; 0x7000
    26a0:	0b0e0301 	bleq	3832ac <__RAM_SIZE+0x2832ac>
    26a4:	3b0b3a0b 	blcc	2d0ed8 <__RAM_SIZE+0x1d0ed8>
    26a8:	010b3905 	tsteq	fp, r5, lsl #18
    26ac:	08000013 	stmdaeq	r0, {r0, r1, r4}
    26b0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    26b4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    26b8:	13490b39 	movtne	r0, #39737	; 0x9b39
    26bc:	00000a38 	andeq	r0, r0, r8, lsr sl
    26c0:	27011509 	strcs	r1, [r1, -r9, lsl #10]
    26c4:	0013010c 	andseq	r0, r3, ip, lsl #2
    26c8:	00050a00 	andeq	r0, r5, r0, lsl #20
    26cc:	00001349 	andeq	r1, r0, r9, asr #6
    26d0:	0b000f0b 	bleq	6304 <_Min_Stack_Size+0x5304>
    26d4:	0013490b 	andseq	r4, r3, fp, lsl #18
    26d8:	00160c00 	andseq	r0, r6, r0, lsl #24
    26dc:	0b3a0e03 	bleq	e85ef0 <__RAM_SIZE+0xd85ef0>
    26e0:	0b39053b 	bleq	e43bd4 <__RAM_SIZE+0xd43bd4>
    26e4:	00001349 	andeq	r1, r0, r9, asr #6
    26e8:	0300340d 	movweq	r3, #1037	; 0x40d
    26ec:	3b0b3a0e 	blcc	2d0f2c <__RAM_SIZE+0x1d0f2c>
    26f0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    26f4:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    26f8:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    26fc:	13490101 	movtne	r0, #37121	; 0x9101
    2700:	00001301 	andeq	r1, r0, r1, lsl #6
    2704:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
    2708:	000b2f13 	andeq	r2, fp, r3, lsl pc
    270c:	00211000 	eoreq	r1, r1, r0
    2710:	052f1349 	streq	r1, [pc, #-841]!	; 23cf <_Min_Stack_Size+0x13cf>
    2714:	34110000 	ldrcc	r0, [r1], #-0
    2718:	3a134700 	bcc	4d4320 <__RAM_SIZE+0x3d4320>
    271c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2720:	000a020b 	andeq	r0, sl, fp, lsl #4
    2724:	012e1200 			; <UNDEFINED> instruction: 0x012e1200
    2728:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    272c:	0b3b0b3a 	bleq	ec541c <__RAM_SIZE+0xdc541c>
    2730:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2734:	01120111 	tsteq	r2, r1, lsl r1
    2738:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    273c:	0013010c 	andseq	r0, r3, ip, lsl #2
    2740:	00341300 	eorseq	r1, r4, r0, lsl #6
    2744:	0b3a0e03 	bleq	e85f58 <__RAM_SIZE+0xd85f58>
    2748:	0b390b3b 	bleq	e4543c <__RAM_SIZE+0xd4543c>
    274c:	06021349 	streq	r1, [r2], -r9, asr #6
    2750:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    2754:	82891400 	addhi	r1, r9, #0, 8
    2758:	01110101 	tsteq	r1, r1, lsl #2
    275c:	00001331 	andeq	r1, r0, r1, lsr r3
    2760:	01828a15 	orreq	r8, r2, r5, lsl sl
    2764:	910a0200 	mrsls	r0, R10_fiq
    2768:	00000a42 	andeq	r0, r0, r2, asr #20
    276c:	3f002e16 	svccc	0x00002e16
    2770:	870c3c0c 	strhi	r3, [ip, -ip, lsl #24]
    2774:	0e030e40 	cdpeq	14, 0, cr0, cr3, cr0, {2}
    2778:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    277c:	00000b39 	andeq	r0, r0, r9, lsr fp
    2780:	01110100 	tsteq	r1, r0, lsl #2
    2784:	0b130e25 	bleq	4c6020 <__RAM_SIZE+0x3c6020>
    2788:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
    278c:	01110655 	tsteq	r1, r5, asr r6
    2790:	06100152 			; <UNDEFINED> instruction: 0x06100152
    2794:	24020000 	strcs	r0, [r2], #-0
    2798:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    279c:	000e030b 	andeq	r0, lr, fp, lsl #6
    27a0:	00240300 	eoreq	r0, r4, r0, lsl #6
    27a4:	0b3e0b0b 	bleq	f853d8 <__RAM_SIZE+0xe853d8>
    27a8:	00000803 	andeq	r0, r0, r3, lsl #16
    27ac:	03001604 	movweq	r1, #1540	; 0x604
    27b0:	3b0b3a0e 	blcc	2d0ff0 <__RAM_SIZE+0x1d0ff0>
    27b4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    27b8:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
    27bc:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    27c0:	0b3a0b0b 	bleq	e853f4 <__RAM_SIZE+0xd853f4>
    27c4:	0b39053b 	bleq	e43cb8 <__RAM_SIZE+0xd43cb8>
    27c8:	00001301 	andeq	r1, r0, r1, lsl #6
    27cc:	03000d06 	movweq	r0, #3334	; 0xd06
    27d0:	3b0b3a0e 	blcc	2d1010 <__RAM_SIZE+0x1d1010>
    27d4:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    27d8:	000a3813 	andeq	r3, sl, r3, lsl r8
    27dc:	01150700 	tsteq	r5, r0, lsl #14
    27e0:	13010c27 	movwne	r0, #7207	; 0x1c27
    27e4:	05080000 	streq	r0, [r8, #-0]
    27e8:	00134900 	andseq	r4, r3, r0, lsl #18
    27ec:	000f0900 	andeq	r0, pc, r0, lsl #18
    27f0:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    27f4:	160a0000 	strne	r0, [sl], -r0
    27f8:	3a0e0300 	bcc	383400 <__RAM_SIZE+0x283400>
    27fc:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2800:	0013490b 	andseq	r4, r3, fp, lsl #18
    2804:	00340b00 	eorseq	r0, r4, r0, lsl #22
    2808:	0b3a0e03 	bleq	e8601c <__RAM_SIZE+0xd8601c>
    280c:	0b390b3b 	bleq	e45500 <__RAM_SIZE+0xd45500>
    2810:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 26f4 <_Min_Stack_Size+0x16f4>
    2814:	00000c3c 	andeq	r0, r0, ip, lsr ip
    2818:	3f012e0c 	svccc	0x00012e0c
    281c:	3a0e030c 	bcc	383454 <__RAM_SIZE+0x283454>
    2820:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2824:	110c270b 	tstne	ip, fp, lsl #14
    2828:	40011201 	andmi	r1, r1, r1, lsl #4
    282c:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    2830:	050d0000 	streq	r0, [sp, #-0]
    2834:	3a0e0300 	bcc	38343c <__RAM_SIZE+0x28343c>
    2838:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    283c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2840:	0e00000a 	cdpeq	0, 0, cr0, cr0, cr10, {0}
    2844:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2848:	0b3b0b3a 	bleq	ec5538 <__RAM_SIZE+0xdc5538>
    284c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2850:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2854:	00000006 	andeq	r0, r0, r6
    2858:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    285c:	030b130e 	movweq	r1, #45838	; 0xb30e
    2860:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    2864:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    2868:	00061001 	andeq	r1, r6, r1
    286c:	00240200 	eoreq	r0, r4, r0, lsl #4
    2870:	0b3e0b0b 	bleq	f854a4 <__RAM_SIZE+0xe854a4>
    2874:	00000e03 	andeq	r0, r0, r3, lsl #28
    2878:	0b002403 	bleq	b88c <_Min_Stack_Size+0xa88c>
    287c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2880:	04000008 	streq	r0, [r0], #-8
    2884:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2888:	0b3b0b3a 	bleq	ec5578 <__RAM_SIZE+0xdc5578>
    288c:	13490b39 	movtne	r0, #39737	; 0x9b39
    2890:	13050000 	movwne	r0, #20480	; 0x5000
    2894:	0b0e0301 	bleq	3834a0 <__RAM_SIZE+0x2834a0>
    2898:	3b0b3a0b 	blcc	2d10cc <__RAM_SIZE+0x1d10cc>
    289c:	010b3905 	tsteq	fp, r5, lsl #18
    28a0:	06000013 			; <UNDEFINED> instruction: 0x06000013
    28a4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    28a8:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    28ac:	13490b39 	movtne	r0, #39737	; 0x9b39
    28b0:	00000a38 	andeq	r0, r0, r8, lsr sl
    28b4:	27011507 	strcs	r1, [r1, -r7, lsl #10]
    28b8:	0013010c 	andseq	r0, r3, ip, lsl #2
    28bc:	00050800 	andeq	r0, r5, r0, lsl #16
    28c0:	00001349 	andeq	r1, r0, r9, asr #6
    28c4:	0b000f09 	bleq	64f0 <_Min_Stack_Size+0x54f0>
    28c8:	0013490b 	andseq	r4, r3, fp, lsl #18
    28cc:	00160a00 	andseq	r0, r6, r0, lsl #20
    28d0:	0b3a0e03 	bleq	e860e4 <__RAM_SIZE+0xd860e4>
    28d4:	0b39053b 	bleq	e43dc8 <__RAM_SIZE+0xd43dc8>
    28d8:	00001349 	andeq	r1, r0, r9, asr #6
    28dc:	3f012e0b 	svccc	0x00012e0b
    28e0:	3a0e030c 	bcc	383518 <__RAM_SIZE+0x283518>
    28e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    28e8:	110c270b 	tstne	ip, fp, lsl #14
    28ec:	40011201 	andmi	r1, r1, r1, lsl #4
    28f0:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    28f4:	050c0000 	streq	r0, [ip, #-0]
    28f8:	3a0e0300 	bcc	383500 <__RAM_SIZE+0x283500>
    28fc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2900:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2904:	0d00000a 	stceq	0, cr0, [r0, #-40]	; 0xffffffd8
    2908:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    290c:	0b3b0b3a 	bleq	ec55fc <__RAM_SIZE+0xdc55fc>
    2910:	13490b39 	movtne	r0, #39737	; 0x9b39
    2914:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    2918:	00000006 	andeq	r0, r0, r6
    291c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    2920:	030b130e 	movweq	r1, #45838	; 0xb30e
    2924:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    2928:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    292c:	00061001 	andeq	r1, r6, r1
    2930:	00240200 	eoreq	r0, r4, r0, lsl #4
    2934:	0b3e0b0b 	bleq	f85568 <__RAM_SIZE+0xe85568>
    2938:	00000e03 	andeq	r0, r0, r3, lsl #28
    293c:	0b002403 	bleq	b950 <_Min_Stack_Size+0xa950>
    2940:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2944:	04000008 	streq	r0, [r0], #-8
    2948:	0b0b000f 	bleq	2c298c <__RAM_SIZE+0x1c298c>
    294c:	16050000 	strne	r0, [r5], -r0
    2950:	3a0e0300 	bcc	383558 <__RAM_SIZE+0x283558>
    2954:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2958:	0013490b 	andseq	r4, r3, fp, lsl #18
    295c:	01130600 	tsteq	r3, r0, lsl #12
    2960:	0b0b0e03 	bleq	2c6174 <__RAM_SIZE+0x1c6174>
    2964:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2968:	13010b39 	movwne	r0, #6969	; 0x1b39
    296c:	0d070000 	stceq	0, cr0, [r7, #-0]
    2970:	3a0e0300 	bcc	383578 <__RAM_SIZE+0x283578>
    2974:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2978:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    297c:	0800000a 	stmdaeq	r0, {r1, r3}
    2980:	0c270115 	stfeqs	f0, [r7], #-84	; 0xffffffac
    2984:	00001301 	andeq	r1, r0, r1, lsl #6
    2988:	49000509 	stmdbmi	r0, {r0, r3, r8, sl}
    298c:	0a000013 	beq	29e0 <_Min_Stack_Size+0x19e0>
    2990:	0b0b000f 	bleq	2c29d4 <__RAM_SIZE+0x1c29d4>
    2994:	00001349 	andeq	r1, r0, r9, asr #6
    2998:	0300160b 	movweq	r1, #1547	; 0x60b
    299c:	3b0b3a0e 	blcc	2d11dc <__RAM_SIZE+0x1d11dc>
    29a0:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    29a4:	0c000013 	stceq	0, cr0, [r0], {19}
    29a8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    29ac:	0b3b0b3a 	bleq	ec569c <__RAM_SIZE+0xdc569c>
    29b0:	13490b39 	movtne	r0, #39737	; 0x9b39
    29b4:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    29b8:	2e0d0000 	cdpcs	0, 0, cr0, cr13, cr0, {0}
    29bc:	030c3f01 	movweq	r3, #52993	; 0xcf01
    29c0:	3b0b3a0e 	blcc	2d1200 <__RAM_SIZE+0x1d1200>
    29c4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    29c8:	1201110c 	andne	r1, r1, #12, 2
    29cc:	97064001 	strls	r4, [r6, -r1]
    29d0:	13010c42 	movwne	r0, #7234	; 0x1c42
    29d4:	050e0000 	streq	r0, [lr, #-0]
    29d8:	3a0e0300 	bcc	3835e0 <__RAM_SIZE+0x2835e0>
    29dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    29e0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    29e4:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    29e8:	340f0000 	strcc	r0, [pc], #-0	; 29f0 <_Min_Stack_Size+0x19f0>
    29ec:	3a0e0300 	bcc	3835f4 <__RAM_SIZE+0x2835f4>
    29f0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    29f4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    29f8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    29fc:	34100000 	ldrcc	r0, [r0], #-0
    2a00:	3a0e0300 	bcc	383608 <__RAM_SIZE+0x283608>
    2a04:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2a08:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2a0c:	1100000a 	tstne	r0, sl
    2a10:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2a14:	0b3b0b3a 	bleq	ec5704 <__RAM_SIZE+0xdc5704>
    2a18:	13490b39 	movtne	r0, #39737	; 0x9b39
    2a1c:	0b120000 	bleq	482a24 <__RAM_SIZE+0x382a24>
    2a20:	00130101 	andseq	r0, r3, r1, lsl #2
    2a24:	00341300 	eorseq	r1, r4, r0, lsl #6
    2a28:	0b3a0e03 	bleq	e8623c <__RAM_SIZE+0xd8623c>
    2a2c:	0b39053b 	bleq	e43f20 <__RAM_SIZE+0xd43f20>
    2a30:	00001349 	andeq	r1, r0, r9, asr #6
    2a34:	31011d14 	tstcc	r1, r4, lsl sp
    2a38:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    2a3c:	01110542 	tsteq	r1, r2, asr #10
    2a40:	0b580112 	bleq	1602e90 <__RAM_SIZE+0x1502e90>
    2a44:	0b570559 	bleq	15c3fb0 <__RAM_SIZE+0x14c3fb0>
    2a48:	00001301 	andeq	r1, r0, r1, lsl #6
    2a4c:	31000515 	tstcc	r0, r5, lsl r5
    2a50:	b7060213 	smladlt	r6, r3, r2, r0
    2a54:	00000642 	andeq	r0, r0, r2, asr #12
    2a58:	31003416 	tstcc	r0, r6, lsl r4
    2a5c:	b7060213 	smladlt	r6, r3, r2, r0
    2a60:	00000642 	andeq	r0, r0, r2, asr #12
    2a64:	31011d17 	tstcc	r1, r7, lsl sp
    2a68:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    2a6c:	01110542 	tsteq	r1, r2, asr #10
    2a70:	0b580112 	bleq	1602ec0 <__RAM_SIZE+0x1502ec0>
    2a74:	0b570559 	bleq	15c3fe0 <__RAM_SIZE+0x14c3fe0>
    2a78:	1d180000 	ldcne	0, cr0, [r8, #-0]
    2a7c:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    2a80:	0542b801 	strbeq	fp, [r2, #-2049]	; 0xfffff7ff
    2a84:	01120111 	tsteq	r2, r1, lsl r1
    2a88:	0b590b58 	bleq	16457f0 <__RAM_SIZE+0x15457f0>
    2a8c:	13010b57 	movwne	r0, #6999	; 0x1b57
    2a90:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
    2a94:	11010182 	smlabbne	r1, r2, r1, r0
    2a98:	0a429301 	beq	10a76a4 <__RAM_SIZE+0xfa76a4>
    2a9c:	00001301 	andeq	r1, r0, r1, lsl #6
    2aa0:	01828a1a 	orreq	r8, r2, sl, lsl sl
    2aa4:	910a0200 	mrsls	r0, R10_fiq
    2aa8:	00000a42 	andeq	r0, r0, r2, asr #20
    2aac:	0182891b 	orreq	r8, r2, fp, lsl r9
    2ab0:	31011101 	tstcc	r1, r1, lsl #2
    2ab4:	1c000013 	stcne	0, cr0, [r0], {19}
    2ab8:	0e03012e 	adfeqsp	f0, f3, #0.5
    2abc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2ac0:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    2ac4:	0b201349 	bleq	8077f0 <__RAM_SIZE+0x7077f0>
    2ac8:	00001301 	andeq	r1, r0, r1, lsl #6
    2acc:	03012e1d 	movweq	r2, #7709	; 0x1e1d
    2ad0:	3b0b3a0e 	blcc	2d1310 <__RAM_SIZE+0x1d1310>
    2ad4:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2ad8:	010b200c 	tsteq	fp, ip
    2adc:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
    2ae0:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    2ae4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2ae8:	13490b39 	movtne	r0, #39737	; 0x9b39
    2aec:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
    2af0:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    2af4:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    2af8:	0b3a0e03 	bleq	e8630c <__RAM_SIZE+0xd8630c>
    2afc:	0b39053b 	bleq	e43ff0 <__RAM_SIZE+0xd43ff0>
    2b00:	01000000 	mrseq	r0, (UNDEF: 0)
    2b04:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    2b08:	0e030b13 	vmoveq.32	d3[0], r0
    2b0c:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    2b10:	01520111 	cmpeq	r2, r1, lsl r1
    2b14:	00000610 	andeq	r0, r0, r0, lsl r6
    2b18:	0b002402 	bleq	bb28 <_Min_Stack_Size+0xab28>
    2b1c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2b20:	0300000e 	movweq	r0, #14
    2b24:	0b0b0024 	bleq	2c2bbc <__RAM_SIZE+0x1c2bbc>
    2b28:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    2b2c:	0f040000 	svceq	0x00040000
    2b30:	000b0b00 	andeq	r0, fp, r0, lsl #22
    2b34:	00160500 	andseq	r0, r6, r0, lsl #10
    2b38:	0b3a0e03 	bleq	e8634c <__RAM_SIZE+0xd8634c>
    2b3c:	0b390b3b 	bleq	e45830 <__RAM_SIZE+0xd45830>
    2b40:	00001349 	andeq	r1, r0, r9, asr #6
    2b44:	03011306 	movweq	r1, #4870	; 0x1306
    2b48:	3a0b0b0e 	bcc	2c5788 <__RAM_SIZE+0x1c5788>
    2b4c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2b50:	0013010b 	andseq	r0, r3, fp, lsl #2
    2b54:	000d0700 	andeq	r0, sp, r0, lsl #14
    2b58:	0b3a0e03 	bleq	e8636c <__RAM_SIZE+0xd8636c>
    2b5c:	0b39053b 	bleq	e44050 <__RAM_SIZE+0xd44050>
    2b60:	0a381349 	beq	e0788c <__RAM_SIZE+0xd0788c>
    2b64:	15080000 	strne	r0, [r8, #-0]
    2b68:	010c2701 	tsteq	ip, r1, lsl #14
    2b6c:	09000013 	stmdbeq	r0, {r0, r1, r4}
    2b70:	13490005 	movtne	r0, #36869	; 0x9005
    2b74:	0f0a0000 	svceq	0x000a0000
    2b78:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    2b7c:	0b000013 	bleq	2bd0 <_Min_Stack_Size+0x1bd0>
    2b80:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2b84:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2b88:	13490b39 	movtne	r0, #39737	; 0x9b39
    2b8c:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
    2b90:	030c3f01 	movweq	r3, #52993	; 0xcf01
    2b94:	3b0b3a0e 	blcc	2d13d4 <__RAM_SIZE+0x1d13d4>
    2b98:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2b9c:	1113490c 	tstne	r3, ip, lsl #18
    2ba0:	40011201 	andmi	r1, r1, r1, lsl #4
    2ba4:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    2ba8:	00001301 	andeq	r1, r0, r1, lsl #6
    2bac:	0300050d 	movweq	r0, #1293	; 0x50d
    2bb0:	3b0b3a0e 	blcc	2d13f0 <__RAM_SIZE+0x1d13f0>
    2bb4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2bb8:	b7060213 	smladlt	r6, r3, r2, r0
    2bbc:	00000642 	andeq	r0, r0, r2, asr #12
    2bc0:	0300340e 	movweq	r3, #1038	; 0x40e
    2bc4:	3b0b3a0e 	blcc	2d1404 <__RAM_SIZE+0x1d1404>
    2bc8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2bcc:	b7060213 	smladlt	r6, r3, r2, r0
    2bd0:	00000642 	andeq	r0, r0, r2, asr #12
    2bd4:	0182890f 	orreq	r8, r2, pc, lsl #18
    2bd8:	31011100 	mrscc	r1, (UNDEF: 17)
    2bdc:	10000013 	andne	r0, r0, r3, lsl r0
    2be0:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 2b30 <_Min_Stack_Size+0x1b30>
    2be4:	40870c3c 	addmi	r0, r7, ip, lsr ip
    2be8:	3a0e030e 	bcc	383828 <__RAM_SIZE+0x283828>
    2bec:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2bf0:	0000000b 	andeq	r0, r0, fp
    2bf4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    2bf8:	030b130e 	movweq	r1, #45838	; 0xb30e
    2bfc:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    2c00:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    2c04:	00061001 	andeq	r1, r6, r1
    2c08:	00240200 	eoreq	r0, r4, r0, lsl #4
    2c0c:	0b3e0b0b 	bleq	f85840 <__RAM_SIZE+0xe85840>
    2c10:	00000e03 	andeq	r0, r0, r3, lsl #28
    2c14:	0b002403 	bleq	bc28 <_Min_Stack_Size+0xac28>
    2c18:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2c1c:	04000008 	streq	r0, [r0], #-8
    2c20:	0b0b000f 	bleq	2c2c64 <__RAM_SIZE+0x1c2c64>
    2c24:	16050000 	strne	r0, [r5], -r0
    2c28:	3a0e0300 	bcc	383830 <__RAM_SIZE+0x283830>
    2c2c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2c30:	0013490b 	andseq	r4, r3, fp, lsl #18
    2c34:	00350600 	eorseq	r0, r5, r0, lsl #12
    2c38:	00001349 	andeq	r1, r0, r9, asr #6
    2c3c:	03011307 	movweq	r1, #4871	; 0x1307
    2c40:	3a0b0b0e 	bcc	2c5880 <__RAM_SIZE+0x1c5880>
    2c44:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2c48:	0013010b 	andseq	r0, r3, fp, lsl #2
    2c4c:	000d0800 	andeq	r0, sp, r0, lsl #16
    2c50:	0b3a0e03 	bleq	e86464 <__RAM_SIZE+0xd86464>
    2c54:	0b39053b 	bleq	e44148 <__RAM_SIZE+0xd44148>
    2c58:	0a381349 	beq	e07984 <__RAM_SIZE+0xd07984>
    2c5c:	15090000 	strne	r0, [r9, #-0]
    2c60:	010c2701 	tsteq	ip, r1, lsl #14
    2c64:	0a000013 	beq	2cb8 <_Min_Stack_Size+0x1cb8>
    2c68:	13490005 	movtne	r0, #36869	; 0x9005
    2c6c:	0f0b0000 	svceq	0x000b0000
    2c70:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
    2c74:	0c000013 	stceq	0, cr0, [r0], {19}
    2c78:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
    2c7c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2c80:	13490b39 	movtne	r0, #39737	; 0x9b39
    2c84:	340d0000 	strcc	r0, [sp], #-0
    2c88:	3a0e0300 	bcc	383890 <__RAM_SIZE+0x283890>
    2c8c:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2c90:	3f13490b 	svccc	0x0013490b
    2c94:	000c3c0c 	andeq	r3, ip, ip, lsl #24
    2c98:	00340e00 	eorseq	r0, r4, r0, lsl #28
    2c9c:	0b3a0e03 	bleq	e864b0 <__RAM_SIZE+0xd864b0>
    2ca0:	0b390b3b 	bleq	e45994 <__RAM_SIZE+0xd45994>
    2ca4:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 2b88 <_Min_Stack_Size+0x1b88>
    2ca8:	00000c3c 	andeq	r0, r0, ip, lsr ip
    2cac:	3f012e0f 	svccc	0x00012e0f
    2cb0:	3a0e030c 	bcc	3838e8 <__RAM_SIZE+0x2838e8>
    2cb4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2cb8:	490c270b 	stmdbmi	ip, {r0, r1, r3, r8, r9, sl, sp}
    2cbc:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    2cc0:	97064001 	strls	r4, [r6, -r1]
    2cc4:	13010c42 	movwne	r0, #7234	; 0x1c42
    2cc8:	05100000 	ldreq	r0, [r0, #-0]
    2ccc:	3a0e0300 	bcc	3838d4 <__RAM_SIZE+0x2838d4>
    2cd0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2cd4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2cd8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    2cdc:	34110000 	ldrcc	r0, [r1], #-0
    2ce0:	3a0e0300 	bcc	3838e8 <__RAM_SIZE+0x2838e8>
    2ce4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    2ce8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    2cec:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    2cf0:	1d120000 	ldcne	0, cr0, [r2, #-0]
    2cf4:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    2cf8:	0b42b801 	bleq	10b0d04 <__RAM_SIZE+0xfb0d04>
    2cfc:	01120111 	tsteq	r2, r1, lsl r1
    2d00:	0b590b58 	bleq	1645a68 <__RAM_SIZE+0x1545a68>
    2d04:	13010b57 	movwne	r0, #6999	; 0x1b57
    2d08:	34130000 	ldrcc	r0, [r3], #-0
    2d0c:	02133100 	andseq	r3, r3, #0, 2
    2d10:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    2d14:	89140000 	ldmdbhi	r4, {}	; <UNPREDICTABLE>
    2d18:	11010182 	smlabbne	r1, r2, r1, r0
    2d1c:	00133101 	andseq	r3, r3, r1, lsl #2
    2d20:	828a1500 	addhi	r1, sl, #0, 10
    2d24:	0a020001 	beq	82d30 <SYSTICK_CYCLES+0x59cf1>
    2d28:	000a4291 	muleq	sl, r1, r2
    2d2c:	012e1600 			; <UNDEFINED> instruction: 0x012e1600
    2d30:	0b3a0e03 	bleq	e86544 <__RAM_SIZE+0xd86544>
    2d34:	0b39053b 	bleq	e44228 <__RAM_SIZE+0xd44228>
    2d38:	13490c27 	movtne	r0, #39975	; 0x9c27
    2d3c:	13010b20 	movwne	r0, #6944	; 0x1b20
    2d40:	34170000 	ldrcc	r0, [r7], #-0
    2d44:	3a0e0300 	bcc	38394c <__RAM_SIZE+0x28394c>
    2d48:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2d4c:	0013490b 	andseq	r4, r3, fp, lsl #18
    2d50:	002e1800 	eoreq	r1, lr, r0, lsl #16
    2d54:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    2d58:	030e4087 	movweq	r4, #57479	; 0xe087
    2d5c:	3b0b3a0e 	blcc	2d159c <__RAM_SIZE+0x1d159c>
    2d60:	000b3905 	andeq	r3, fp, r5, lsl #18
    2d64:	11010000 	mrsne	r0, (UNDEF: 1)
    2d68:	130e2501 	movwne	r2, #58625	; 0xe501
    2d6c:	1b0e030b 	blne	3839a0 <__RAM_SIZE+0x2839a0>
    2d70:	1106550e 	tstne	r6, lr, lsl #10
    2d74:	10015201 	andne	r5, r1, r1, lsl #4
    2d78:	02000006 	andeq	r0, r0, #6
    2d7c:	0b0b0024 	bleq	2c2e14 <__RAM_SIZE+0x1c2e14>
    2d80:	0e030b3e 	vmoveq.16	d3[0], r0
    2d84:	24030000 	strcs	r0, [r3], #-0
    2d88:	3e0b0b00 	vmlacc.f64	d0, d11, d0
    2d8c:	0008030b 	andeq	r0, r8, fp, lsl #6
    2d90:	000f0400 	andeq	r0, pc, r0, lsl #8
    2d94:	00000b0b 	andeq	r0, r0, fp, lsl #22
    2d98:	03001605 	movweq	r1, #1541	; 0x605
    2d9c:	3b0b3a0e 	blcc	2d15dc <__RAM_SIZE+0x1d15dc>
    2da0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2da4:	06000013 			; <UNDEFINED> instruction: 0x06000013
    2da8:	13490035 	movtne	r0, #36917	; 0x9035
    2dac:	13070000 	movwne	r0, #28672	; 0x7000
    2db0:	0b0e0301 	bleq	3839bc <__RAM_SIZE+0x2839bc>
    2db4:	3b0b3a0b 	blcc	2d15e8 <__RAM_SIZE+0x1d15e8>
    2db8:	010b3905 	tsteq	fp, r5, lsl #18
    2dbc:	08000013 	stmdaeq	r0, {r0, r1, r4}
    2dc0:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
    2dc4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2dc8:	13490b39 	movtne	r0, #39737	; 0x9b39
    2dcc:	00000a38 	andeq	r0, r0, r8, lsr sl
    2dd0:	27011509 	strcs	r1, [r1, -r9, lsl #10]
    2dd4:	0013010c 	andseq	r0, r3, ip, lsl #2
    2dd8:	00050a00 	andeq	r0, r5, r0, lsl #20
    2ddc:	00001349 	andeq	r1, r0, r9, asr #6
    2de0:	0b000f0b 	bleq	6a14 <_Min_Stack_Size+0x5a14>
    2de4:	0013490b 	andseq	r4, r3, fp, lsl #18
    2de8:	00160c00 	andseq	r0, r6, r0, lsl #24
    2dec:	0b3a0e03 	bleq	e86600 <__RAM_SIZE+0xd86600>
    2df0:	0b39053b 	bleq	e442e4 <__RAM_SIZE+0xd442e4>
    2df4:	00001349 	andeq	r1, r0, r9, asr #6
    2df8:	0300340d 	movweq	r3, #1037	; 0x40d
    2dfc:	3b0b3a0e 	blcc	2d163c <__RAM_SIZE+0x1d163c>
    2e00:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2e04:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    2e08:	0e00000c 	cdpeq	0, 0, cr0, cr0, cr12, {0}
    2e0c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    2e10:	0b3b0b3a 	bleq	ec5b00 <__RAM_SIZE+0xdc5b00>
    2e14:	13490b39 	movtne	r0, #39737	; 0x9b39
    2e18:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    2e1c:	2e0f0000 	cdpcs	0, 0, cr0, cr15, cr0, {0}
    2e20:	030c3f01 	movweq	r3, #52993	; 0xcf01
    2e24:	3b0b3a0e 	blcc	2d1664 <__RAM_SIZE+0x1d1664>
    2e28:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    2e2c:	1113490c 	tstne	r3, ip, lsl #18
    2e30:	40011201 	andmi	r1, r1, r1, lsl #4
    2e34:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    2e38:	00001301 	andeq	r1, r0, r1, lsl #6
    2e3c:	03000510 	movweq	r0, #1296	; 0x510
    2e40:	3b0b3a0e 	blcc	2d1680 <__RAM_SIZE+0x1d1680>
    2e44:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2e48:	b7060213 	smladlt	r6, r3, r2, r0
    2e4c:	00000642 	andeq	r0, r0, r2, asr #12
    2e50:	03003411 	movweq	r3, #1041	; 0x411
    2e54:	3b0b3a0e 	blcc	2d1694 <__RAM_SIZE+0x1d1694>
    2e58:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2e5c:	b7060213 	smladlt	r6, r3, r2, r0
    2e60:	00000642 	andeq	r0, r0, r2, asr #12
    2e64:	03003412 	movweq	r3, #1042	; 0x412
    2e68:	3b0b3a08 	blcc	2d1690 <__RAM_SIZE+0x1d1690>
    2e6c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2e70:	b7060213 	smladlt	r6, r3, r2, r0
    2e74:	00000642 	andeq	r0, r0, r2, asr #12
    2e78:	31011d13 	tstcc	r1, r3, lsl sp
    2e7c:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    2e80:	01110b42 	tsteq	r1, r2, asr #22
    2e84:	0b580112 	bleq	16032d4 <__RAM_SIZE+0x15032d4>
    2e88:	0b570b59 	bleq	15c5bf4 <__RAM_SIZE+0x14c5bf4>
    2e8c:	00001301 	andeq	r1, r0, r1, lsl #6
    2e90:	31003414 	tstcc	r0, r4, lsl r4
    2e94:	b7060213 	smladlt	r6, r3, r2, r0
    2e98:	00000642 	andeq	r0, r0, r2, asr #12
    2e9c:	31011d15 	tstcc	r1, r5, lsl sp
    2ea0:	b8015213 	stmdalt	r1, {r0, r1, r4, r9, ip, lr}
    2ea4:	01110b42 	tsteq	r1, r2, asr #22
    2ea8:	0b580112 	bleq	16032f8 <__RAM_SIZE+0x15032f8>
    2eac:	0b570559 	bleq	15c4418 <__RAM_SIZE+0x14c4418>
    2eb0:	05160000 	ldreq	r0, [r6, #-0]
    2eb4:	02133100 	andseq	r3, r3, #0, 2
    2eb8:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    2ebc:	89170000 	ldmdbhi	r7, {}	; <UNPREDICTABLE>
    2ec0:	11000182 	smlabbne	r0, r2, r1, r0
    2ec4:	00133101 	andseq	r3, r3, r1, lsl #2
    2ec8:	82891800 	addhi	r1, r9, #0, 16
    2ecc:	01110101 	tsteq	r1, r1, lsl #2
    2ed0:	00001331 	andeq	r1, r0, r1, lsr r3
    2ed4:	01828a19 	orreq	r8, r2, r9, lsl sl
    2ed8:	910a0200 	mrsls	r0, R10_fiq
    2edc:	00000a42 	andeq	r0, r0, r2, asr #20
    2ee0:	03012e1a 	movweq	r2, #7706	; 0x1e1a
    2ee4:	3b0b3a0e 	blcc	2d1724 <__RAM_SIZE+0x1d1724>
    2ee8:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2eec:	2013490c 	andscs	r4, r3, ip, lsl #18
    2ef0:	0013010b 	andseq	r0, r3, fp, lsl #2
    2ef4:	00341b00 	eorseq	r1, r4, r0, lsl #22
    2ef8:	0b3a0e03 	bleq	e8670c <__RAM_SIZE+0xd8670c>
    2efc:	0b39053b 	bleq	e443f0 <__RAM_SIZE+0xd443f0>
    2f00:	00001349 	andeq	r1, r0, r9, asr #6
    2f04:	03012e1c 	movweq	r2, #7708	; 0x1e1c
    2f08:	3b0b3a0e 	blcc	2d1748 <__RAM_SIZE+0x1d1748>
    2f0c:	270b3905 	strcs	r3, [fp, -r5, lsl #18]
    2f10:	010b200c 	tsteq	fp, ip
    2f14:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    2f18:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    2f1c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
    2f20:	13490b39 	movtne	r0, #39737	; 0x9b39
    2f24:	2e1e0000 	cdpcs	0, 1, cr0, cr14, cr0, {0}
    2f28:	3c0c3f00 	stccc	15, cr3, [ip], {-0}
    2f2c:	0e40870c 	cdpeq	7, 4, cr8, cr0, cr12, {0}
    2f30:	0b3a0e03 	bleq	e86744 <__RAM_SIZE+0xd86744>
    2f34:	0b39053b 	bleq	e44428 <__RAM_SIZE+0xd44428>
    2f38:	01000000 	mrseq	r0, (UNDEF: 0)
    2f3c:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
    2f40:	0e030b13 	vmoveq.32	d3[0], r0
    2f44:	06550e1b 			; <UNDEFINED> instruction: 0x06550e1b
    2f48:	01520111 	cmpeq	r2, r1, lsl r1
    2f4c:	00000610 	andeq	r0, r0, r0, lsl r6
    2f50:	0b002402 	bleq	bf60 <_Min_Stack_Size+0xaf60>
    2f54:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
    2f58:	0300000e 	movweq	r0, #14
    2f5c:	0b0b0024 	bleq	2c2ff4 <__RAM_SIZE+0x1c2ff4>
    2f60:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
    2f64:	0f040000 	svceq	0x00040000
    2f68:	000b0b00 	andeq	r0, fp, r0, lsl #22
    2f6c:	00160500 	andseq	r0, r6, r0, lsl #10
    2f70:	0b3a0e03 	bleq	e86784 <__RAM_SIZE+0xd86784>
    2f74:	0b390b3b 	bleq	e45c68 <__RAM_SIZE+0xd45c68>
    2f78:	00001349 	andeq	r1, r0, r9, asr #6
    2f7c:	49003506 	stmdbmi	r0, {r1, r2, r8, sl, ip, sp}
    2f80:	07000013 	smladeq	r0, r3, r0, r0
    2f84:	0e030113 	mcreq	1, 0, r0, cr3, cr3, {0}
    2f88:	0b3a0b0b 	bleq	e85bbc <__RAM_SIZE+0xd85bbc>
    2f8c:	0b39053b 	bleq	e44480 <__RAM_SIZE+0xd44480>
    2f90:	00001301 	andeq	r1, r0, r1, lsl #6
    2f94:	03000d08 	movweq	r0, #3336	; 0xd08
    2f98:	3b0b3a0e 	blcc	2d17d8 <__RAM_SIZE+0x1d17d8>
    2f9c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    2fa0:	000a3813 	andeq	r3, sl, r3, lsl r8
    2fa4:	01150900 	tsteq	r5, r0, lsl #18
    2fa8:	13010c27 	movwne	r0, #7207	; 0x1c27
    2fac:	050a0000 	streq	r0, [sl, #-0]
    2fb0:	00134900 	andseq	r4, r3, r0, lsl #18
    2fb4:	000f0b00 	andeq	r0, pc, r0, lsl #22
    2fb8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    2fbc:	160c0000 	strne	r0, [ip], -r0
    2fc0:	3a0e0300 	bcc	383bc8 <__RAM_SIZE+0x283bc8>
    2fc4:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    2fc8:	0013490b 	andseq	r4, r3, fp, lsl #18
    2fcc:	00340d00 	eorseq	r0, r4, r0, lsl #26
    2fd0:	0b3a0e03 	bleq	e867e4 <__RAM_SIZE+0xd867e4>
    2fd4:	0b39053b 	bleq	e444c8 <__RAM_SIZE+0xd444c8>
    2fd8:	0c3f1349 	ldceq	3, cr1, [pc], #-292	; 2ebc <_Min_Stack_Size+0x1ebc>
    2fdc:	00000c3c 	andeq	r0, r0, ip, lsr ip
    2fe0:	0300340e 	movweq	r3, #1038	; 0x40e
    2fe4:	3b0b3a0e 	blcc	2d1824 <__RAM_SIZE+0x1d1824>
    2fe8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    2fec:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    2ff0:	0f00000c 	svceq	0x0000000c
    2ff4:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 2f44 <_Min_Stack_Size+0x1f44>
    2ff8:	0b3a0e03 	bleq	e8680c <__RAM_SIZE+0xd8680c>
    2ffc:	0b390b3b 	bleq	e45cf0 <__RAM_SIZE+0xd45cf0>
    3000:	13490c27 	movtne	r0, #39975	; 0x9c27
    3004:	01120111 	tsteq	r2, r1, lsl r1
    3008:	42970640 	addsmi	r0, r7, #64, 12	; 0x4000000
    300c:	0013010c 	andseq	r0, r3, ip, lsl #2
    3010:	00051000 	andeq	r1, r5, r0
    3014:	0b3a0e03 	bleq	e86828 <__RAM_SIZE+0xd86828>
    3018:	0b390b3b 	bleq	e45d0c <__RAM_SIZE+0xd45d0c>
    301c:	06021349 	streq	r1, [r2], -r9, asr #6
    3020:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    3024:	00341100 	eorseq	r1, r4, r0, lsl #2
    3028:	0b3a0e03 	bleq	e8683c <__RAM_SIZE+0xd8683c>
    302c:	0b390b3b 	bleq	e45d20 <__RAM_SIZE+0xd45d20>
    3030:	06021349 	streq	r1, [r2], -r9, asr #6
    3034:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    3038:	00341200 	eorseq	r1, r4, r0, lsl #4
    303c:	0b3a0803 	bleq	e85050 <__RAM_SIZE+0xd85050>
    3040:	0b390b3b 	bleq	e45d34 <__RAM_SIZE+0xd45d34>
    3044:	06021349 	streq	r1, [r2], -r9, asr #6
    3048:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    304c:	011d1300 	tsteq	sp, r0, lsl #6
    3050:	01521331 	cmpeq	r2, r1, lsr r3
    3054:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    3058:	58011201 	stmdapl	r1, {r0, r9, ip}
    305c:	570b590b 	strpl	r5, [fp, -fp, lsl #18]
    3060:	0013010b 	andseq	r0, r3, fp, lsl #2
    3064:	00341400 	eorseq	r1, r4, r0, lsl #8
    3068:	06021331 			; <UNDEFINED> instruction: 0x06021331
    306c:	000642b7 			; <UNDEFINED> instruction: 0x000642b7
    3070:	011d1500 	tsteq	sp, r0, lsl #10
    3074:	01521331 	cmpeq	r2, r1, lsr r3
    3078:	110b42b8 			; <UNDEFINED> instruction: 0x110b42b8
    307c:	58011201 	stmdapl	r1, {r0, r9, ip}
    3080:	5705590b 	strpl	r5, [r5, -fp, lsl #18]
    3084:	1600000b 	strne	r0, [r0], -fp
    3088:	13310005 	teqne	r1, #5
    308c:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    3090:	17000006 	strne	r0, [r0, -r6]
    3094:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    3098:	42b80152 	adcsmi	r0, r8, #-2147483628	; 0x80000014
    309c:	1201110b 	andne	r1, r1, #-1073741822	; 0xc0000002
    30a0:	590b5801 	stmdbpl	fp, {r0, fp, ip, lr}
    30a4:	010b5705 	tsteq	fp, r5, lsl #14
    30a8:	18000013 	stmdane	r0, {r0, r1, r4}
    30ac:	00018289 	andeq	r8, r1, r9, lsl #5
    30b0:	13310111 	teqne	r1, #1073741828	; 0x40000004
    30b4:	89190000 	ldmdbhi	r9, {}	; <UNPREDICTABLE>
    30b8:	11010182 	smlabbne	r1, r2, r1, r0
    30bc:	00133101 	andseq	r3, r3, r1, lsl #2
    30c0:	828a1a00 	addhi	r1, sl, #0, 20
    30c4:	0a020001 	beq	830d0 <SYSTICK_CYCLES+0x5a091>
    30c8:	000a4291 	muleq	sl, r1, r2
    30cc:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
    30d0:	0b3a0e03 	bleq	e868e4 <__RAM_SIZE+0xd868e4>
    30d4:	0b39053b 	bleq	e445c8 <__RAM_SIZE+0xd445c8>
    30d8:	13490c27 	movtne	r0, #39975	; 0x9c27
    30dc:	13010b20 	movwne	r0, #6944	; 0x1b20
    30e0:	341c0000 	ldrcc	r0, [ip], #-0
    30e4:	3a0e0300 	bcc	383cec <__RAM_SIZE+0x283cec>
    30e8:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    30ec:	0013490b 	andseq	r4, r3, fp, lsl #18
    30f0:	012e1d00 			; <UNDEFINED> instruction: 0x012e1d00
    30f4:	0b3a0e03 	bleq	e86908 <__RAM_SIZE+0xd86908>
    30f8:	0b39053b 	bleq	e445ec <__RAM_SIZE+0xd445ec>
    30fc:	0b200c27 	bleq	8061a0 <__RAM_SIZE+0x7061a0>
    3100:	00001301 	andeq	r1, r0, r1, lsl #6
    3104:	0300051e 	movweq	r0, #1310	; 0x51e
    3108:	3b0b3a0e 	blcc	2d1948 <__RAM_SIZE+0x1d1948>
    310c:	490b3905 	stmdbmi	fp, {r0, r2, r8, fp, ip, sp}
    3110:	1f000013 	svcne	0x00000013
    3114:	0c3f002e 	ldceq	0, cr0, [pc], #-184	; 3064 <_Min_Stack_Size+0x2064>
    3118:	40870c3c 	addmi	r0, r7, ip, lsr ip
    311c:	3a0e030e 	bcc	383d5c <__RAM_SIZE+0x283d5c>
    3120:	39053b0b 	stmdbcc	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    3124:	0000000b 	andeq	r0, r0, fp
    3128:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
    312c:	030b130e 	movweq	r1, #45838	; 0xb30e
    3130:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
    3134:	52011106 	andpl	r1, r1, #-2147483647	; 0x80000001
    3138:	00061001 	andeq	r1, r6, r1
    313c:	00240200 	eoreq	r0, r4, r0, lsl #4
    3140:	0b3e0b0b 	bleq	f85d74 <__RAM_SIZE+0xe85d74>
    3144:	00000803 	andeq	r0, r0, r3, lsl #16
    3148:	03001603 	movweq	r1, #1539	; 0x603
    314c:	3b0b3a0e 	blcc	2d198c <__RAM_SIZE+0x1d198c>
    3150:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3154:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
    3158:	0b0b0024 	bleq	2c31f0 <__RAM_SIZE+0x1c31f0>
    315c:	0e030b3e 	vmoveq.16	d3[0], r0
    3160:	0f050000 	svceq	0x00050000
    3164:	000b0b00 	andeq	r0, fp, r0, lsl #22
    3168:	00260600 	eoreq	r0, r6, r0, lsl #12
    316c:	00001349 	andeq	r1, r0, r9, asr #6
    3170:	03003407 	movweq	r3, #1031	; 0x407
    3174:	3b0b3a0e 	blcc	2d19b4 <__RAM_SIZE+0x1d19b4>
    3178:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    317c:	000a0213 	andeq	r0, sl, r3, lsl r2
    3180:	000f0800 	andeq	r0, pc, r0, lsl #16
    3184:	13490b0b 	movtne	r0, #39691	; 0x9b0b
    3188:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
    318c:	030c3f01 	movweq	r3, #52993	; 0xcf01
    3190:	3b0b3a0e 	blcc	2d19d0 <__RAM_SIZE+0x1d19d0>
    3194:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    3198:	1113490c 	tstne	r3, ip, lsl #18
    319c:	40011201 	andmi	r1, r1, r1, lsl #4
    31a0:	0c429706 	mcrreq	7, 0, r9, r2, cr6
    31a4:	00001301 	andeq	r1, r0, r1, lsl #6
    31a8:	0300050a 	movweq	r0, #1290	; 0x50a
    31ac:	3b0b3a0e 	blcc	2d19ec <__RAM_SIZE+0x1d19ec>
    31b0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    31b4:	b7060213 	smladlt	r6, r3, r2, r0
    31b8:	00000642 	andeq	r0, r0, r2, asr #12
    31bc:	0300340b 	movweq	r3, #1035	; 0x40b
    31c0:	3b0b3a0e 	blcc	2d1a00 <__RAM_SIZE+0x1d1a00>
    31c4:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    31c8:	3c0c3f13 	stccc	15, cr3, [ip], {19}
    31cc:	0c00000c 	stceq	0, cr0, [r0], {12}
    31d0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    31d4:	0b3b0b3a 	bleq	ec5ec4 <__RAM_SIZE+0xdc5ec4>
    31d8:	13490b39 	movtne	r0, #39737	; 0x9b39
    31dc:	340d0000 	strcc	r0, [sp], #-0
    31e0:	3a0e0300 	bcc	383de8 <__RAM_SIZE+0x283de8>
    31e4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    31e8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    31ec:	0642b706 	strbeq	fp, [r2], -r6, lsl #14
    31f0:	890e0000 	stmdbhi	lr, {}	; <UNPREDICTABLE>
    31f4:	11000182 	smlabbne	r0, r2, r1, r0
    31f8:	00133101 	andseq	r3, r3, r1, lsl #2
    31fc:	002e0f00 	eoreq	r0, lr, r0, lsl #30
    3200:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    3204:	030e4087 	movweq	r4, #57479	; 0xe087
    3208:	3b0b3a0e 	blcc	2d1a48 <__RAM_SIZE+0x1d1a48>
    320c:	000b390b 	andeq	r3, fp, fp, lsl #18
    3210:	11010000 	mrsne	r0, (UNDEF: 1)
    3214:	130e2501 	movwne	r2, #58625	; 0xe501
    3218:	1b0e030b 	blne	383e4c <__RAM_SIZE+0x283e4c>
    321c:	1106550e 	tstne	r6, lr, lsl #10
    3220:	10015201 	andne	r5, r1, r1, lsl #4
    3224:	02000006 	andeq	r0, r0, #6
    3228:	0b0b0024 	bleq	2c32c0 <__RAM_SIZE+0x1c32c0>
    322c:	0e030b3e 	vmoveq.16	d3[0], r0
    3230:	16030000 	strne	r0, [r3], -r0
    3234:	3a0e0300 	bcc	383e3c <__RAM_SIZE+0x283e3c>
    3238:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    323c:	0013490b 	andseq	r4, r3, fp, lsl #18
    3240:	00240400 	eoreq	r0, r4, r0, lsl #8
    3244:	0b3e0b0b 	bleq	f85e78 <__RAM_SIZE+0xe85e78>
    3248:	00000803 	andeq	r0, r0, r3, lsl #16
    324c:	0b000f05 	bleq	6e68 <_Min_Stack_Size+0x5e68>
    3250:	0013490b 	andseq	r4, r3, fp, lsl #18
    3254:	01130600 	tsteq	r3, r0, lsl #12
    3258:	0b0b0e03 	bleq	2c6a6c <__RAM_SIZE+0x1c6a6c>
    325c:	0b3b0b3a 	bleq	ec5f4c <__RAM_SIZE+0xdc5f4c>
    3260:	13010b39 	movwne	r0, #6969	; 0x1b39
    3264:	0d070000 	stceq	0, cr0, [r7, #-0]
    3268:	3a0e0300 	bcc	383e70 <__RAM_SIZE+0x283e70>
    326c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    3270:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
    3274:	0800000a 	stmdaeq	r0, {r1, r3}
    3278:	13490101 	movtne	r0, #37121	; 0x9101
    327c:	00001301 	andeq	r1, r0, r1, lsl #6
    3280:	49002109 	stmdbmi	r0, {r0, r3, r8, sp}
    3284:	000b2f13 	andeq	r2, fp, r3, lsl pc
    3288:	01130a00 	tsteq	r3, r0, lsl #20
    328c:	0b0b0803 	bleq	2c52a0 <__RAM_SIZE+0x1c52a0>
    3290:	0b3b0b3a 	bleq	ec5f80 <__RAM_SIZE+0xdc5f80>
    3294:	13010b39 	movwne	r0, #6969	; 0x1b39
    3298:	340b0000 	strcc	r0, [fp], #-0
    329c:	3a0e0300 	bcc	383ea4 <__RAM_SIZE+0x283ea4>
    32a0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    32a4:	3f13490b 	svccc	0x0013490b
    32a8:	000a020c 	andeq	r0, sl, ip, lsl #4
    32ac:	012e0c00 			; <UNDEFINED> instruction: 0x012e0c00
    32b0:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    32b4:	0b3b0b3a 	bleq	ec5fa4 <__RAM_SIZE+0xdc5fa4>
    32b8:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    32bc:	01111349 	tsteq	r1, r9, asr #6
    32c0:	06400112 			; <UNDEFINED> instruction: 0x06400112
    32c4:	010c4297 			; <UNDEFINED> instruction: 0x010c4297
    32c8:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
    32cc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
    32d0:	0b3b0b3a 	bleq	ec5fc0 <__RAM_SIZE+0xdc5fc0>
    32d4:	13490b39 	movtne	r0, #39737	; 0x9b39
    32d8:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    32dc:	0e000006 	cdpeq	0, 0, cr0, cr0, cr6, {0}
    32e0:	08030005 	stmdaeq	r3, {r0, r2}
    32e4:	0b3b0b3a 	bleq	ec5fd4 <__RAM_SIZE+0xdc5fd4>
    32e8:	13490b39 	movtne	r0, #39737	; 0x9b39
    32ec:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    32f0:	0f000006 	svceq	0x00000006
    32f4:	00018289 	andeq	r8, r1, r9, lsl #5
    32f8:	13310111 	teqne	r1, #1073741828	; 0x40000004
    32fc:	2e100000 	cdpcs	0, 1, cr0, cr0, cr0, {0}
    3300:	030c3f01 	movweq	r3, #52993	; 0xcf01
    3304:	3b0b3a0e 	blcc	2d1b44 <__RAM_SIZE+0x1d1b44>
    3308:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
    330c:	1113490c 	tstne	r3, ip, lsl #18
    3310:	40011201 	andmi	r1, r1, r1, lsl #4
    3314:	0c42970a 	mcrreq	7, 0, r9, r2, cr10
    3318:	00001301 	andeq	r1, r0, r1, lsl #6
    331c:	03000511 	movweq	r0, #1297	; 0x511
    3320:	3b0b3a08 	blcc	2d1b48 <__RAM_SIZE+0x1d1b48>
    3324:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
    3328:	000a0213 	andeq	r0, sl, r3, lsl r2
    332c:	00051200 	andeq	r1, r5, r0, lsl #4
    3330:	0b3a0e03 	bleq	e86b44 <__RAM_SIZE+0xd86b44>
    3334:	0b390b3b 	bleq	e46028 <__RAM_SIZE+0xd46028>
    3338:	0a021349 	beq	88064 <SYSTICK_CYCLES+0x5f025>
    333c:	18130000 	ldmdane	r3, {}	; <UNPREDICTABLE>
    3340:	14000000 	strne	r0, [r0], #-0
    3344:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    3348:	0b3b0b3a 	bleq	ec6038 <__RAM_SIZE+0xdc6038>
    334c:	13490b39 	movtne	r0, #39737	; 0x9b39
    3350:	42b70602 	adcsmi	r0, r7, #2097152	; 0x200000
    3354:	15000006 	strne	r0, [r0, #-6]
    3358:	0c3f012e 	ldfeqs	f0, [pc], #-184	; 32a8 <_Min_Stack_Size+0x22a8>
    335c:	0b3a0e03 	bleq	e86b70 <__RAM_SIZE+0xd86b70>
    3360:	0b390b3b 	bleq	e46054 <__RAM_SIZE+0xd46054>
    3364:	01870c27 	orreq	r0, r7, r7, lsr #24
    3368:	1201110c 	andne	r1, r1, #12, 2
    336c:	97064001 	strls	r4, [r6, -r1]
    3370:	13010c42 	movwne	r0, #7234	; 0x1c42
    3374:	89160000 	ldmdbhi	r6, {}	; <UNPREDICTABLE>
    3378:	11010182 	smlabbne	r1, r2, r1, r0
    337c:	00133101 	andseq	r3, r3, r1, lsl #2
    3380:	828a1700 	addhi	r1, sl, #0, 14
    3384:	0a020001 	beq	83390 <SYSTICK_CYCLES+0x5a351>
    3388:	000a4291 	muleq	sl, r1, r2
    338c:	002e1800 	eoreq	r1, lr, r0, lsl #16
    3390:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    3394:	0b3b0b3a 	bleq	ec6084 <__RAM_SIZE+0xdc6084>
    3398:	0c270b39 			; <UNDEFINED> instruction: 0x0c270b39
    339c:	01111349 	tsteq	r1, r9, asr #6
    33a0:	0a400112 	beq	10037f0 <__RAM_SIZE+0xf037f0>
    33a4:	000c4297 	muleq	ip, r7, r2
    33a8:	002e1900 	eoreq	r1, lr, r0, lsl #18
    33ac:	0e030c3f 	mcreq	12, 0, r0, cr3, cr15, {1}
    33b0:	0b3b0b3a 	bleq	ec60a0 <__RAM_SIZE+0xdc60a0>
    33b4:	01110b39 	tsteq	r1, r9, lsr fp
    33b8:	0a400112 	beq	1003808 <__RAM_SIZE+0xf03808>
    33bc:	000c4297 	muleq	ip, r7, r2
    33c0:	002e1a00 	eoreq	r1, lr, r0, lsl #20
    33c4:	0c3c0c3f 	ldceq	12, cr0, [ip], #-252	; 0xffffff04
    33c8:	030e4087 	movweq	r4, #57479	; 0xe087
    33cc:	3b0b3a0e 	blcc	2d1c0c <__RAM_SIZE+0x1d1c0c>
    33d0:	000b390b 	andeq	r3, fp, fp, lsl #18
    33d4:	11010000 	mrsne	r0, (UNDEF: 1)
    33d8:	11061000 	mrsne	r1, (UNDEF: 6)
    33dc:	03011201 	movweq	r1, #4609	; 0x1201
    33e0:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    33e4:	0005130e 	andeq	r1, r5, lr, lsl #6
    33e8:	11010000 	mrsne	r0, (UNDEF: 1)
    33ec:	11061000 	mrsne	r1, (UNDEF: 6)
    33f0:	03011201 	movweq	r1, #4609	; 0x1201
    33f4:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    33f8:	0005130e 	andeq	r1, r5, lr, lsl #6
    33fc:	11010000 	mrsne	r0, (UNDEF: 1)
    3400:	11061000 	mrsne	r1, (UNDEF: 6)
    3404:	03011201 	movweq	r1, #4609	; 0x1201
    3408:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    340c:	0005130e 	andeq	r1, r5, lr, lsl #6
    3410:	11010000 	mrsne	r0, (UNDEF: 1)
    3414:	11061000 	mrsne	r1, (UNDEF: 6)
    3418:	03011201 	movweq	r1, #4609	; 0x1201
    341c:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    3420:	0005130e 	andeq	r1, r5, lr, lsl #6
    3424:	11010000 	mrsne	r0, (UNDEF: 1)
    3428:	11061000 	mrsne	r1, (UNDEF: 6)
    342c:	03011201 	movweq	r1, #4609	; 0x1201
    3430:	250e1b0e 	strcs	r1, [lr, #-2830]	; 0xfffff4f2
    3434:	0005130e 	andeq	r1, r5, lr, lsl #6
	...

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	10000890 	mulne	r0, r0, r8
       4:	10000892 	mulne	r0, r2, r8
}
       8:	007d0002 	rsbseq	r0, sp, r2
       c:	10000892 	mulne	r0, r2, r8
      10:	100008b8 			; <UNDEFINED> instruction: 0x100008b8
      14:	087d0002 	ldmdaeq	sp!, {r1}^
	...
      20:	00000001 	andeq	r0, r0, r1
      24:	08920000 	ldmeq	r2, {}	; <UNPREDICTABLE>
      28:	08a21000 	stmiaeq	r2!, {ip}
      2c:	00021000 	andeq	r1, r2, r0
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	08a29f30 	stmiaeq	r2!, {r4, r5, r8, r9, sl, fp, ip, pc}
      34:	08a61000 	stmiaeq	r6!, {ip}
        _tx_thread_system_ni_resume(thread_ptr);
      38:	00011000 	andeq	r1, r1, r0
      3c:	0008a651 	andeq	sl, r8, r1, asr r6
}
      40:	0008b810 	andeq	fp, r8, r0, lsl r8
      44:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
      50:	1000081c 	andne	r0, r0, ip, lsl r8
      54:	1000081e 	andne	r0, r0, lr, lsl r8
      58:	007d0002 	rsbseq	r0, sp, r2
      5c:	1000081e 	andne	r0, r0, lr, lsl r8
      60:	10000820 	andne	r0, r0, r0, lsr #16
      64:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
      68:	10000820 	andne	r0, r0, r0, lsr #16
      6c:	10000874 	andne	r0, r0, r4, ror r8
      70:	387d0002 	ldmdacc	sp!, {r1}^
      74:	10000874 	andne	r0, r0, r4, ror r8
      78:	10000890 	mulne	r0, r0, r8
      7c:	0c7d0002 	ldcleq	0, cr0, [sp], #-8
	...
      8c:	1000081c 	andne	r0, r0, ip, lsl r8
      90:	10000834 	andne	r0, r0, r4, lsr r8
      94:	34500001 	ldrbcc	r0, [r0], #-1
      98:	90100008 	andsls	r0, r0, r8
      9c:	04100008 	ldreq	r0, [r0], #-8
      a0:	5001f300 	andpl	pc, r1, r0, lsl #6
      a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
      a8:	00000000 	andeq	r0, r0, r0
      ac:	00080000 	andeq	r0, r8, r0
      b0:	00080210 	andeq	r0, r8, r0, lsl r2
      b4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
      b8:	00080200 	andeq	r0, r8, r0, lsl #4
      bc:	00081c10 	andeq	r1, r8, r0, lsl ip
      c0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
      c4:	00000008 	andeq	r0, r0, r8
	...
      d0:	00080000 	andeq	r0, r8, r0
      d4:	00080410 	andeq	r0, r8, r0, lsl r4
      d8:	50000110 	andpl	r0, r0, r0, lsl r1
      dc:	10000804 	andne	r0, r0, r4, lsl #16
      e0:	1000081c 	andne	r0, r0, ip, lsl r8
      e4:	01f30004 	mvnseq	r0, r4
      e8:	00009f50 	andeq	r9, r0, r0, asr pc
      ec:	00000000 	andeq	r0, r0, r0
      f0:	00010000 	andeq	r0, r1, r0
      f4:	00000000 	andeq	r0, r0, r0
      f8:	10000802 	andne	r0, r0, r2, lsl #16
      fc:	10000804 	andne	r0, r0, r4, lsl #16
     100:	9f300002 	svcls	0x00300002
     104:	10000804 	andne	r0, r0, r4, lsl #16
     108:	10000806 	andne	r0, r0, r6, lsl #16
     10c:	06510001 	ldrbeq	r0, [r1], -r1
     110:	1c100008 	ldcne	0, cr0, [r0], {8}
     114:	01100008 	tsteq	r0, r8
     118:	00005400 	andeq	r5, r0, r0, lsl #8
	...
     128:	00020000 	andeq	r0, r2, r0
     12c:	0000007d 	andeq	r0, r0, sp, ror r0
     130:	00000000 	andeq	r0, r0, r0
     134:	00020000 	andeq	r0, r2, r0
     138:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     148:	00020000 	andeq	r0, r2, r0
     14c:	0000007d 	andeq	r0, r0, sp, ror r0
     150:	00000000 	andeq	r0, r0, r0
     154:	00020000 	andeq	r0, r2, r0
     158:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     168:	00020000 	andeq	r0, r2, r0
     16c:	0000007d 	andeq	r0, r0, sp, ror r0
     170:	00000000 	andeq	r0, r0, r0
     174:	00020000 	andeq	r0, r2, r0
     178:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     188:	00020000 	andeq	r0, r2, r0
     18c:	0000007d 	andeq	r0, r0, sp, ror r0
     190:	00000000 	andeq	r0, r0, r0
     194:	00020000 	andeq	r0, r2, r0
     198:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     1a8:	00020000 	andeq	r0, r2, r0
     1ac:	0000007d 	andeq	r0, r0, sp, ror r0
     1b0:	00000000 	andeq	r0, r0, r0
     1b4:	00020000 	andeq	r0, r2, r0
     1b8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     1c8:	00020000 	andeq	r0, r2, r0
     1cc:	0000007d 	andeq	r0, r0, sp, ror r0
     1d0:	00000000 	andeq	r0, r0, r0
     1d4:	00020000 	andeq	r0, r2, r0
     1d8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     1e8:	00020000 	andeq	r0, r2, r0
     1ec:	0000007d 	andeq	r0, r0, sp, ror r0
     1f0:	00000000 	andeq	r0, r0, r0
     1f4:	00020000 	andeq	r0, r2, r0
     1f8:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     208:	00020000 	andeq	r0, r2, r0
     20c:	0000007d 	andeq	r0, r0, sp, ror r0
     210:	00000000 	andeq	r0, r0, r0
     214:	00020000 	andeq	r0, r2, r0
     218:	0000087d 	andeq	r0, r0, sp, ror r8
	...
     228:	00020000 	andeq	r0, r2, r0
     22c:	0000007d 	andeq	r0, r0, sp, ror r0
     230:	00000000 	andeq	r0, r0, r0
     234:	00020000 	andeq	r0, r2, r0
     238:	0000087d 	andeq	r0, r0, sp, ror r8
     23c:	00000000 	andeq	r0, r0, r0
     240:	00020000 	andeq	r0, r2, r0
     244:	00000c7d 	andeq	r0, r0, sp, ror ip
     248:	00000000 	andeq	r0, r0, r0
     24c:	00020000 	andeq	r0, r2, r0
     250:	0000287d 	andeq	r2, r0, sp, ror r8
     254:	00000000 	andeq	r0, r0, r0
     258:	00020000 	andeq	r0, r2, r0
     25c:	00000c7d 	andeq	r0, r0, sp, ror ip
     260:	00000000 	andeq	r0, r0, r0
     264:	00020000 	andeq	r0, r2, r0
     268:	0000087d 	andeq	r0, r0, sp, ror r8
     26c:	00000000 	andeq	r0, r0, r0
     270:	00020000 	andeq	r0, r2, r0
     274:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     28c:	00500001 	subseq	r0, r0, r1
     290:	00000000 	andeq	r0, r0, r0
     294:	02000000 	andeq	r0, r0, #0
     298:	00549100 	subseq	r9, r4, r0, lsl #2
     29c:	00000000 	andeq	r0, r0, r0
     2a0:	04000000 	streq	r0, [r0], #-0
     2a4:	5001f300 	andpl	pc, r1, r0, lsl #6
     2a8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     2bc:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     2c8:	01f30004 	mvnseq	r0, r4
     2cc:	00009f51 	andeq	r9, r0, r1, asr pc
	...
     2e0:	00500001 	subseq	r0, r0, r1
	...
     2f0:	02000000 	andeq	r0, r0, #0
     2f4:	00007d00 	andeq	r7, r0, r0, lsl #26
     2f8:	00000000 	andeq	r0, r0, r0
     2fc:	02000000 	andeq	r0, r0, #0
     300:	00047d00 	andeq	r7, r4, r0, lsl #26
     304:	00000000 	andeq	r0, r0, r0
     308:	02000000 	andeq	r0, r0, #0
     30c:	00107d00 	andseq	r7, r0, r0, lsl #26
     310:	00000000 	andeq	r0, r0, r0
     314:	02000000 	andeq	r0, r0, #0
     318:	00047d00 	andeq	r7, r4, r0, lsl #26
	...
     330:	50000100 	andpl	r0, r0, r0, lsl #2
	...
     33c:	00510001 	subseq	r0, r1, r1
     340:	00000000 	andeq	r0, r0, r0
     344:	04000000 	streq	r0, [r0], #-0
     348:	5001f300 	andpl	pc, r1, r0, lsl #6
     34c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     360:	01000000 	mrseq	r0, (UNDEF: 0)
     364:	00005100 	andeq	r5, r0, r0, lsl #2
     368:	00000000 	andeq	r0, r0, r0
     36c:	00010000 	andeq	r0, r1, r0
     370:	00000052 	andeq	r0, r0, r2, asr r0
     374:	00000000 	andeq	r0, r0, r0
     378:	f3000400 	vshl.u8	d0, d0, d0
     37c:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     394:	52000100 	andpl	r0, r0, #0, 2
	...
     3a0:	00530001 	subseq	r0, r3, r1
     3a4:	00000000 	andeq	r0, r0, r0
     3a8:	04000000 	streq	r0, [r0], #-0
     3ac:	5201f300 	andpl	pc, r1, #0, 6
     3b0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     3c0:	01000000 	mrseq	r0, (UNDEF: 0)
     3c4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
     3d4:	00020000 	andeq	r0, r2, r0
     3d8:	0000007d 	andeq	r0, r0, sp, ror r0
     3dc:	00000000 	andeq	r0, r0, r0
     3e0:	00020000 	andeq	r0, r2, r0
     3e4:	0000047d 	andeq	r0, r0, sp, ror r4
     3e8:	00000000 	andeq	r0, r0, r0
     3ec:	00020000 	andeq	r0, r2, r0
     3f0:	0000187d 	andeq	r1, r0, sp, ror r8
     3f4:	00000000 	andeq	r0, r0, r0
     3f8:	00020000 	andeq	r0, r2, r0
     3fc:	0000047d 	andeq	r0, r0, sp, ror r4
	...
     414:	00500001 	subseq	r0, r0, r1
     418:	00000000 	andeq	r0, r0, r0
     41c:	01000000 	mrseq	r0, (UNDEF: 0)
     420:	00005300 	andeq	r5, r0, r0, lsl #6
     424:	00000000 	andeq	r0, r0, r0
     428:	00040000 	andeq	r0, r4, r0
     42c:	9f5001f3 	svcls	0x005001f3
	...
     440:	00010000 	andeq	r0, r1, r0
     444:	00000051 	andeq	r0, r0, r1, asr r0
	...
     454:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     460:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     464:	00000008 	andeq	r0, r0, r8
     468:	00000000 	andeq	r0, r0, r0
     46c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     470:	00000010 	andeq	r0, r0, r0, lsl r0
     474:	00000000 	andeq	r0, r0, r0
     478:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     47c:	00000020 	andeq	r0, r0, r0, lsr #32
     480:	00000000 	andeq	r0, r0, r0
     484:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     488:	00000010 	andeq	r0, r0, r0, lsl r0
     48c:	00000000 	andeq	r0, r0, r0
     490:	7d000200 	sfmvc	f0, 4, [r0, #-0]
     494:	00000008 	andeq	r0, r0, r8
     498:	00000000 	andeq	r0, r0, r0
     49c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
     4b4:	01000000 	mrseq	r0, (UNDEF: 0)
     4b8:	00005000 	andeq	r5, r0, r0
     4bc:	00000000 	andeq	r0, r0, r0
     4c0:	00010000 	andeq	r0, r1, r0
     4c4:	00000051 	andeq	r0, r0, r1, asr r0
     4c8:	00000000 	andeq	r0, r0, r0
     4cc:	f3000400 	vshl.u8	d0, d0, d0
     4d0:	009f5001 	addseq	r5, pc, r1
	...
     4e8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
     4f4:	00520001 	subseq	r0, r2, r1
     4f8:	00000000 	andeq	r0, r0, r0
     4fc:	04000000 	streq	r0, [r0], #-0
     500:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
     504:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
     514:	01000000 	mrseq	r0, (UNDEF: 0)
     518:	00005000 	andeq	r5, r0, r0
	...
     528:	00020000 	andeq	r0, r2, r0
     52c:	0000007d 	andeq	r0, r0, sp, ror r0
     530:	00000000 	andeq	r0, r0, r0
     534:	00020000 	andeq	r0, r2, r0
     538:	00000c7d 	andeq	r0, r0, sp, ror ip
     53c:	00000000 	andeq	r0, r0, r0
     540:	00020000 	andeq	r0, r2, r0
     544:	0000107d 	andeq	r1, r0, sp, ror r0
     548:	00000000 	andeq	r0, r0, r0
     54c:	00020000 	andeq	r0, r2, r0
     550:	0000207d 	andeq	r2, r0, sp, ror r0
     554:	00000000 	andeq	r0, r0, r0
     558:	00020000 	andeq	r0, r2, r0
     55c:	0000107d 	andeq	r1, r0, sp, ror r0
     560:	00000000 	andeq	r0, r0, r0
     564:	00020000 	andeq	r0, r2, r0
     568:	00000c7d 	andeq	r0, r0, sp, ror ip
     56c:	00000000 	andeq	r0, r0, r0
     570:	00020000 	andeq	r0, r2, r0
     574:	0000007d 	andeq	r0, r0, sp, ror r0
	...
     58c:	00500001 	subseq	r0, r0, r1
     590:	00000000 	andeq	r0, r0, r0
     594:	01000000 	mrseq	r0, (UNDEF: 0)
     598:	00005100 	andeq	r5, r0, r0, lsl #2
     59c:	00000000 	andeq	r0, r0, r0
     5a0:	00040000 	andeq	r0, r4, r0
     5a4:	9f5001f3 	svcls	0x005001f3
	...
     5b8:	00010000 	andeq	r0, r1, r0
     5bc:	00000050 	andeq	r0, r0, r0, asr r0
     5c0:	00000000 	andeq	r0, r0, r0
     5c4:	001a3400 	andseq	r3, sl, r0, lsl #8
     5c8:	001a3610 	andseq	r3, sl, r0, lsl r6
     5cc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     5d0:	001a3600 	andseq	r3, sl, r0, lsl #12
     5d4:	001a3810 	andseq	r3, sl, r0, lsl r8
     5d8:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     5dc:	001a3810 	andseq	r3, sl, r0, lsl r8
     5e0:	001a3a10 	andseq	r3, sl, r0, lsl sl
     5e4:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     5e8:	001a3a14 	andseq	r3, sl, r4, lsl sl
     5ec:	001a5210 	andseq	r5, sl, r0, lsl r2
     5f0:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     5f4:	001a5228 	andseq	r5, sl, r8, lsr #4
     5f8:	001a5610 	andseq	r5, sl, r0, lsl r6
     5fc:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     600:	001a5614 	andseq	r5, sl, r4, lsl r6
     604:	001a5810 	andseq	r5, sl, r0, lsl r8
     608:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
     60c:	001a5810 	andseq	r5, sl, r0, lsl r8
     610:	001a6010 	andseq	r6, sl, r0, lsl r0
     614:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
	...
     620:	50000000 	andpl	r0, r0, r0
     624:	6010001a 	andsvs	r0, r0, sl, lsl r0
     628:	0110001a 	tsteq	r0, sl, lsl r0
     62c:	00005000 	andeq	r5, r0, r0
     630:	00000000 	andeq	r0, r0, r0
     634:	13a80000 			; <UNDEFINED> instruction: 0x13a80000
     638:	13ac1000 			; <UNDEFINED> instruction: 0x13ac1000
     63c:	00021000 	andeq	r1, r2, r0
     640:	13ac007d 			; <UNDEFINED> instruction: 0x13ac007d
     644:	13ae1000 			; <UNDEFINED> instruction: 0x13ae1000
     648:	00021000 	andeq	r1, r2, r0
     64c:	13ae247d 			; <UNDEFINED> instruction: 0x13ae247d
     650:	1a1e1000 	bne	784658 <__RAM_SIZE+0x684658>
     654:	00031000 	andeq	r1, r3, r0
     658:	1e00e07d 	mcrne	0, 0, lr, cr0, cr13, {3}
     65c:	2810001a 	ldmdacs	r0, {r1, r3, r4}
     660:	0210001a 	andseq	r0, r0, #26
     664:	00247d00 	eoreq	r7, r4, r0, lsl #26
	...
     674:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
     678:	bc100013 	ldclt	0, cr0, [r0], {19}
     67c:	01100013 	tsteq	r0, r3, lsl r0
     680:	13be5000 			; <UNDEFINED> instruction: 0x13be5000
     684:	1a041000 	bne	10468c <__RAM_SIZE+0x468c>
     688:	00011000 	andeq	r1, r1, r0
     68c:	001a0457 	andseq	r0, sl, r7, asr r4
     690:	001a0810 	andseq	r0, sl, r0, lsl r8
     694:	50000110 	andpl	r0, r0, r0, lsl r1
     698:	10001a08 	andne	r1, r0, r8, lsl #20
     69c:	10001a22 	andne	r1, r0, r2, lsr #20
     6a0:	00570001 	subseq	r0, r7, r1
	...
     6b4:	0013a800 	andseq	sl, r3, r0, lsl #16
     6b8:	0013be10 	andseq	fp, r3, r0, lsl lr
     6bc:	51000110 	tstpl	r0, r0, lsl r1
     6c0:	100013be 			; <UNDEFINED> instruction: 0x100013be
     6c4:	10001a04 	andne	r1, r0, r4, lsl #20
     6c8:	04580001 	ldrbeq	r0, [r8], #-1
     6cc:	0810001a 	ldmdaeq	r0, {r1, r3, r4}
     6d0:	0110001a 	tsteq	r0, sl, lsl r0
     6d4:	1a085100 	bne	214adc <__RAM_SIZE+0x114adc>
     6d8:	1a221000 	bne	8846e0 <__RAM_SIZE+0x7846e0>
     6dc:	00011000 	andeq	r1, r1, r0
     6e0:	001a2258 	andseq	r2, sl, r8, asr r2
     6e4:	001a2810 	andseq	r2, sl, r0, lsl r8
     6e8:	f3000410 	vqshl.u8	d0, d0, d0
     6ec:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
     708:	0013a800 	andseq	sl, r3, r0, lsl #16
     70c:	0013be10 	andseq	fp, r3, r0, lsl lr
     710:	52000110 	andpl	r0, r0, #16, 2
     714:	100013be 			; <UNDEFINED> instruction: 0x100013be
     718:	10001926 	andne	r1, r0, r6, lsr #18
     71c:	26560001 	ldrbcs	r0, [r6], -r1
     720:	28100019 	ldmdacs	r0, {r0, r3, r4}
     724:	01100019 	tsteq	r0, r9, lsl r0
     728:	19285b00 	stmdbne	r8!, {r8, r9, fp, ip, lr}
     72c:	19521000 	ldmdbne	r2, {ip}^
     730:	00011000 	andeq	r1, r1, r0
     734:	00195256 	andseq	r5, r9, r6, asr r2
     738:	00197c10 	andseq	r7, r9, r0, lsl ip
     73c:	5b000110 	blpl	b84 <__Vectors_Size+0x3c4>
     740:	1000197c 	andne	r1, r0, ip, ror r9
     744:	10001a04 	andne	r1, r0, r4, lsl #20
     748:	04560001 	ldrbeq	r0, [r6], #-1
     74c:	0810001a 	ldmdaeq	r0, {r1, r3, r4}
     750:	0110001a 	tsteq	r0, sl, lsl r0
     754:	1a085200 	bne	214f5c <__RAM_SIZE+0x114f5c>
     758:	1a221000 	bne	884760 <__RAM_SIZE+0x784760>
     75c:	00011000 	andeq	r1, r1, r0
     760:	001a2256 	andseq	r2, sl, r6, asr r2
     764:	001a2810 	andseq	r2, sl, r0, lsl r8
     768:	f3000410 	vqshl.u8	d0, d0, d0
     76c:	009f5201 	addseq	r5, pc, r1, lsl #4
	...
     778:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
     77c:	be100013 	mrclt	0, 0, r0, cr0, cr3, {0}
     780:	01100013 	tsteq	r0, r3, lsl r0
     784:	1a045300 	bne	11538c <__RAM_SIZE+0x1538c>
     788:	1a081000 	bne	204790 <__RAM_SIZE+0x104790>
     78c:	00011000 	andeq	r1, r1, r0
     790:	00000053 	andeq	r0, r0, r3, asr r0
     794:	00000000 	andeq	r0, r0, r0
     798:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     7b0:	0013e400 	andseq	lr, r3, r0, lsl #8
     7b4:	0013e610 	andseq	lr, r3, r0, lsl r6
     7b8:	30000210 	andcc	r0, r0, r0, lsl r2
     7bc:	0013e69f 	mulseq	r3, pc, r6	; <UNPREDICTABLE>
     7c0:	0014e410 	andseq	lr, r4, r0, lsl r4
     7c4:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     7c8:	100014e4 	andne	r1, r0, r4, ror #9
     7cc:	100014f6 	strdne	r1, [r0], -r6
     7d0:	f6510001 			; <UNDEFINED> instruction: 0xf6510001
     7d4:	00100014 	andseq	r0, r0, r4, lsl r0
     7d8:	01100015 	tsteq	r0, r5, lsl r0
     7dc:	15005500 	strne	r5, [r0, #-1280]	; 0xfffffb00
     7e0:	15121000 	ldrne	r1, [r2, #-0]
     7e4:	00011000 	andeq	r1, r1, r0
     7e8:	00151251 	andseq	r1, r5, r1, asr r2
     7ec:	0016c010 	andseq	ip, r6, r0, lsl r0
     7f0:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     7f4:	100016c8 	andne	r1, r0, r8, asr #13
     7f8:	100016e4 	andne	r1, r0, r4, ror #13
     7fc:	e4550001 	ldrb	r0, [r5], #-1
     800:	03100016 	tsteq	r0, #22
     804:	02100017 	andseq	r0, r0, #23
     808:	08409100 	stmdaeq	r0, {r8, ip, pc}^
     80c:	6c100017 	ldcvs	0, cr0, [r0], {23}
     810:	01100018 	tsteq	r0, r8, lsl r0
     814:	18da5500 	ldmne	sl, {r8, sl, ip, lr}^
     818:	19341000 	ldmdbne	r4!, {ip}
     81c:	00011000 	andeq	r1, r1, r0
     820:	0019a455 	andseq	sl, r9, r5, asr r4
     824:	0019dc10 	andseq	sp, r9, r0, lsl ip
     828:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     82c:	100019f0 	strdne	r1, [r0], -r0
     830:	100019f2 	strdne	r1, [r0], -r2
     834:	00550001 	subseq	r0, r5, r1
     838:	00000000 	andeq	r0, r0, r0
     83c:	02000000 	andeq	r0, r0, #0
	...
     850:	00000202 	andeq	r0, r0, r2, lsl #4
     854:	00140800 	andseq	r0, r4, r0, lsl #16
     858:	00141a10 	andseq	r1, r4, r0, lsl sl
     85c:	30000210 	andcc	r0, r0, r0, lsl r2
     860:	00141a9f 	mulseq	r4, pc, sl	; <UNPREDICTABLE>
     864:	00144710 	andseq	r4, r4, r0, lsl r7
     868:	91000210 	tstls	r0, r0, lsl r2
     86c:	00147a48 	andseq	r7, r4, r8, asr #20
     870:	00148210 	andseq	r8, r4, r0, lsl r2
     874:	30000210 	andcc	r0, r0, r0, lsl r2
     878:	0014829f 	mulseq	r4, pc, r2	; <UNPREDICTABLE>
     87c:	00148410 	andseq	r8, r4, r0, lsl r4
     880:	50000110 	andpl	r0, r0, r0, lsl r1
     884:	10001484 	andne	r1, r0, r4, lsl #9
     888:	10001492 	mulne	r0, r2, r4
     88c:	9f300002 	svcls	0x00300002
     890:	10001492 	mulne	r0, r2, r4
     894:	1000149a 	mulne	r0, sl, r4
     898:	48910002 	ldmmi	r1, {r1}
     89c:	1000149a 	mulne	r0, sl, r4
     8a0:	100014a2 	andne	r1, r0, r2, lsr #9
     8a4:	9f300002 	svcls	0x00300002
     8a8:	100014a2 	andne	r1, r0, r2, lsr #9
     8ac:	100014a4 	andne	r1, r0, r4, lsr #9
     8b0:	a4530001 	ldrbge	r0, [r3], #-1
     8b4:	a4100014 	ldrge	r0, [r0], #-20	; 0xffffffec
     8b8:	02100019 	andseq	r0, r0, #25
     8bc:	a4489100 	strbge	r9, [r8], #-256	; 0xffffff00
     8c0:	da100019 	ble	40092c <__RAM_SIZE+0x30092c>
     8c4:	02100019 	andseq	r0, r0, #25
     8c8:	da9f3800 	ble	fe7ce8d0 <__RAM_segment_used_end__+0xc66ce8d0>
     8cc:	04100019 	ldreq	r0, [r0], #-25	; 0xffffffe7
     8d0:	0210001a 	andseq	r0, r0, #26
     8d4:	00489100 	subeq	r9, r8, r0, lsl #2
     8d8:	00000000 	andeq	r0, r0, r0
     8dc:	01000000 	mrseq	r0, (UNDEF: 0)
	...
     8fc:	00141a00 	andseq	r1, r4, r0, lsl #20
     900:	00142610 	andseq	r2, r4, r0, lsl r6
     904:	30000210 	andcc	r0, r0, r0, lsl r2
     908:	0014269f 	mulseq	r4, pc, r6	; <UNPREDICTABLE>
     90c:	00144710 	andseq	r4, r4, r0, lsl r7
     910:	5b000110 	blpl	d58 <__Vectors_Size+0x598>
     914:	100014a4 	andne	r1, r0, r4, lsr #9
     918:	100014ca 	andne	r1, r0, sl, asr #9
     91c:	9f300002 	svcls	0x00300002
     920:	100014ca 	andne	r1, r0, sl, asr #9
     924:	100014cc 	andne	r1, r0, ip, asr #9
     928:	cc500001 	mrrcgt	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
     92c:	d8100014 	ldmdale	r0, {r2, r4}
     930:	02100014 	andseq	r0, r0, #20
     934:	d89f3000 	ldmle	pc, {ip, sp}	; <UNPREDICTABLE>
     938:	72100014 	andsvc	r0, r0, #20
     93c:	01100018 	tsteq	r0, r8, lsl r0
     940:	18ae5b00 	stmiane	lr!, {r8, r9, fp, ip, lr}
     944:	18b41000 	ldmne	r4!, {ip}
     948:	00011000 	andeq	r1, r1, r0
     94c:	0018da5b 	andseq	sp, r8, fp, asr sl
     950:	00192410 	andseq	r2, r9, r0, lsl r4
     954:	5b000110 	blpl	d9c <__Vectors_Size+0x5dc>
     958:	10001924 	andne	r1, r0, r4, lsr #18
     95c:	10001928 	andne	r1, r0, r8, lsr #18
     960:	28540001 	ldmdacs	r4, {r0}^
     964:	50100019 	andspl	r0, r0, r9, lsl r0
     968:	01100019 	tsteq	r0, r9, lsl r0
     96c:	19505b00 	ldmdbne	r0, {r8, r9, fp, ip, lr}^
     970:	19541000 	ldmdbne	r4, {ip}^
     974:	00011000 	andeq	r1, r1, r0
     978:	00195454 	andseq	r5, r9, r4, asr r4
     97c:	00195610 	andseq	r5, r9, r0, lsl r6
     980:	53000110 	movwpl	r0, #272	; 0x110
     984:	10001956 	andne	r1, r0, r6, asr r9
     988:	10001970 	andne	r1, r0, r0, ror r9
     98c:	70540001 	subsvc	r0, r4, r1
     990:	74100019 	ldrvc	r0, [r0], #-25	; 0xffffffe7
     994:	01100019 	tsteq	r0, r9, lsl r0
     998:	19a45300 	stmibne	r4!, {r8, r9, ip, lr}
     99c:	1a041000 	bne	1049a4 <__RAM_SIZE+0x49a4>
     9a0:	00011000 	andeq	r1, r1, r0
     9a4:	0000005b 	andeq	r0, r0, fp, asr r0
     9a8:	00000000 	andeq	r0, r0, r0
     9ac:	01000000 	mrseq	r0, (UNDEF: 0)
     9b0:	01000100 	mrseq	r0, (UNDEF: 16)
     9b4:	01000100 	mrseq	r0, (UNDEF: 16)
     9b8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     9bc:	47100014 			; <UNDEFINED> instruction: 0x47100014
     9c0:	02100014 	andseq	r0, r0, #20
     9c4:	509f3000 	addspl	r3, pc, r0
     9c8:	52100014 	andspl	r0, r0, #20
     9cc:	02100014 	andseq	r0, r0, #20
     9d0:	5a9f3100 	bpl	fe7ccdd8 <__RAM_segment_used_end__+0xc66ccdd8>
     9d4:	5c100014 	ldcpl	0, cr0, [r0], {20}
     9d8:	02100014 	andseq	r0, r0, #20
     9dc:	649f3100 	ldrvs	r3, [pc], #256	; 9e4 <__Vectors_Size+0x224>
     9e0:	66100014 			; <UNDEFINED> instruction: 0x66100014
     9e4:	02100014 	andseq	r0, r0, #20
     9e8:	6e9f3100 	fmlvse	f3, f7, f0
     9ec:	70100014 	andsvc	r0, r0, r4, lsl r0
     9f0:	02100014 	andseq	r0, r0, #20
     9f4:	789f3100 	ldmvc	pc, {r8, ip, sp}	; <UNPREDICTABLE>
     9f8:	7a100014 	bvc	400a50 <__RAM_SIZE+0x300a50>
     9fc:	02100014 	andseq	r0, r0, #20
     a00:	7a9f3100 	bvc	fe7cce08 <__RAM_segment_used_end__+0xc66cce08>
     a04:	04100014 	ldreq	r0, [r0], #-20	; 0xffffffec
     a08:	0210001a 	andseq	r0, r0, #26
     a0c:	009f3000 	addseq	r3, pc, r0
     a10:	00000000 	andeq	r0, r0, r0
     a14:	02000000 	andeq	r0, r0, #0
	...
     a74:	b4000000 	strlt	r0, [r0], #-0
     a78:	be100013 	mrclt	0, 0, r0, cr0, cr3, {0}
     a7c:	02100013 	andseq	r0, r0, #19
     a80:	be9f3000 	cdplt	0, 9, cr3, cr15, cr0, {0}
     a84:	ce100013 	mrcgt	0, 0, r0, cr0, cr3, {0}
     a88:	01100013 	tsteq	r0, r3, lsl r0
     a8c:	13ce5400 	bicne	r5, lr, #0, 8
     a90:	13e01000 	mvnne	r1, #0
     a94:	00011000 	andeq	r1, r1, r0
     a98:	0013e055 	andseq	lr, r3, r5, asr r0
     a9c:	00166a10 	andseq	r6, r6, r0, lsl sl
     aa0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     aa4:	1000166a 	andne	r1, r0, sl, ror #12
     aa8:	1000166c 	andne	r1, r0, ip, ror #12
     aac:	6c500001 	mrrcvs	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
     ab0:	c0100016 	andsgt	r0, r0, r6, lsl r0
     ab4:	01100016 	tsteq	r0, r6, lsl r0
     ab8:	16c05400 	strbne	r5, [r0], r0, lsl #8
     abc:	16c81000 	strbne	r1, [r8], r0
     ac0:	00011000 	andeq	r1, r1, r0
     ac4:	0016c850 	andseq	ip, r6, r0, asr r8
     ac8:	00170610 	andseq	r0, r7, r0, lsl r6
     acc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     ad0:	10001706 	andne	r1, r0, r6, lsl #14
     ad4:	10001708 	andne	r1, r0, r8, lsl #14
     ad8:	08500001 	ldmdaeq	r0, {r0}^
     adc:	40100017 	andsmi	r0, r0, r7, lsl r0
     ae0:	01100017 	tsteq	r0, r7, lsl r0
     ae4:	17405400 	strbne	r5, [r0, -r0, lsl #8]
     ae8:	17421000 	strbne	r1, [r2, -r0]
     aec:	00011000 	andeq	r1, r1, r0
     af0:	00174250 	andseq	r4, r7, r0, asr r2
     af4:	00179410 	andseq	r9, r7, r0, lsl r4
     af8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     afc:	10001794 	mulne	r0, r4, r7
     b00:	10001796 	mulne	r0, r6, r7
     b04:	96500001 	ldrbls	r0, [r0], -r1
     b08:	be100017 	mrclt	0, 0, r0, cr0, cr7, {0}
     b0c:	01100017 	tsteq	r0, r7, lsl r0
     b10:	17be5400 	ldrne	r5, [lr, r0, lsl #8]!
     b14:	17c01000 	strbne	r1, [r0, r0]
     b18:	00011000 	andeq	r1, r1, r0
     b1c:	0017c050 	andseq	ip, r7, r0, asr r0
     b20:	00180c10 	andseq	r0, r8, r0, lsl ip
     b24:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     b28:	1000180c 	andne	r1, r0, ip, lsl #16
     b2c:	10001814 	andne	r1, r0, r4, lsl r8
     b30:	14500001 	ldrbne	r0, [r0], #-1
     b34:	60100018 	andsvs	r0, r0, r8, lsl r0
     b38:	01100018 	tsteq	r0, r8, lsl r0
     b3c:	18605400 	stmdane	r0!, {sl, ip, lr}^
     b40:	18681000 	stmdane	r8!, {ip}^
     b44:	00011000 	andeq	r1, r1, r0
     b48:	00186850 	andseq	r6, r8, r0, asr r8
     b4c:	00187c10 	andseq	r7, r8, r0, lsl ip
     b50:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     b54:	1000187c 	andne	r1, r0, ip, ror r8
     b58:	10001892 	mulne	r0, r2, r8
     b5c:	925a0001 	subsls	r0, sl, #1
     b60:	96100018 			; <UNDEFINED> instruction: 0x96100018
     b64:	01100018 	tsteq	r0, r8, lsl r0
     b68:	18965200 	ldmne	r6, {r9, ip, lr}
     b6c:	18a21000 	stmiane	r2!, {ip}
     b70:	00011000 	andeq	r1, r1, r0
     b74:	0018a25a 	andseq	sl, r8, sl, asr r2
     b78:	0018ae10 	andseq	sl, r8, r0, lsl lr
     b7c:	52000110 	andpl	r0, r0, #16, 2
     b80:	100018ae 	andne	r1, r0, lr, lsr #17
     b84:	100018b8 			; <UNDEFINED> instruction: 0x100018b8
     b88:	b8540001 	ldmdalt	r4, {r0}^
     b8c:	be100018 	mrclt	0, 0, r0, cr0, cr8, {0}
     b90:	01100018 	tsteq	r0, r8, lsl r0
     b94:	18be5a00 	ldmne	lr!, {r9, fp, ip, lr}
     b98:	18c21000 	stmiane	r2, {ip}^
     b9c:	00011000 	andeq	r1, r1, r0
     ba0:	0018c252 	andseq	ip, r8, r2, asr r2
     ba4:	0018ce10 	andseq	ip, r8, r0, lsl lr
     ba8:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     bac:	100018ce 	andne	r1, r0, lr, asr #17
     bb0:	100018da 	ldrdne	r1, [r0], -sl
     bb4:	da520001 	ble	1480bc0 <__RAM_SIZE+0x1380bc0>
     bb8:	22100018 	andscs	r0, r0, #24
     bbc:	01100019 	tsteq	r0, r9, lsl r0
     bc0:	19225400 	stmdbne	r2!, {sl, ip, lr}
     bc4:	19281000 	stmdbne	r8!, {ip}
     bc8:	00011000 	andeq	r1, r1, r0
     bcc:	00192852 	andseq	r2, r9, r2, asr r8
     bd0:	00193010 	andseq	r3, r9, r0, lsl r0
     bd4:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     bd8:	10001930 	andne	r1, r0, r0, lsr r9
     bdc:	10001938 	andne	r1, r0, r8, lsr r9
     be0:	38520001 	ldmdacc	r2, {r0}^
     be4:	44100019 	ldrmi	r0, [r0], #-25	; 0xffffffe7
     be8:	01100019 	tsteq	r0, r9, lsl r0
     bec:	19445900 	stmdbne	r4, {r8, fp, ip, lr}^
     bf0:	195c1000 	ldmdbne	ip, {ip}^
     bf4:	00011000 	andeq	r1, r1, r0
     bf8:	00195c52 	andseq	r5, r9, r2, asr ip
     bfc:	00196410 	andseq	r6, r9, r0, lsl r4
     c00:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
     c04:	10001964 	andne	r1, r0, r4, ror #18
     c08:	1000198c 	andne	r1, r0, ip, lsl #19
     c0c:	8c520001 	mrrchi	0, 0, r0, r2, cr1
     c10:	98100019 	ldmdals	r0, {r0, r3, r4}
     c14:	01100019 	tsteq	r0, r9, lsl r0
     c18:	19985500 	ldmibne	r8, {r8, sl, ip, lr}
     c1c:	19a41000 	stmibne	r4!, {ip}
     c20:	00011000 	andeq	r1, r1, r0
     c24:	0019a452 	andseq	sl, r9, r2, asr r4
     c28:	0019d210 	andseq	sp, r9, r0, lsl r2
     c2c:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c30:	100019d2 	ldrdne	r1, [r0], -r2
     c34:	100019da 	ldrdne	r1, [r0], -sl
     c38:	da500001 	ble	1400c44 <__RAM_SIZE+0x1300c44>
     c3c:	dc100019 	ldcle	0, cr0, [r0], {25}
     c40:	01100019 	tsteq	r0, r9, lsl r0
     c44:	19dc5400 	ldmibne	ip, {sl, ip, lr}^
     c48:	19f01000 	ldmibne	r0!, {ip}^
     c4c:	00011000 	andeq	r1, r1, r0
     c50:	0019f055 	andseq	pc, r9, r5, asr r0	; <UNPREDICTABLE>
     c54:	0019f210 	andseq	pc, r9, r0, lsl r2	; <UNPREDICTABLE>
     c58:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     c5c:	100019f2 	strdne	r1, [r0], -r2
     c60:	10001a04 	andne	r1, r0, r4, lsl #20
     c64:	04550001 	ldrbeq	r0, [r5], #-1
     c68:	0810001a 	ldmdaeq	r0, {r1, r3, r4}
     c6c:	0210001a 	andseq	r0, r0, #26
     c70:	089f3000 	ldmeq	pc, {ip, sp}	; <UNPREDICTABLE>
     c74:	2210001a 	andscs	r0, r0, #26
     c78:	0110001a 	tsteq	r0, sl, lsl r0
     c7c:	1a225400 	bne	895c84 <__RAM_SIZE+0x795c84>
     c80:	1a281000 	bne	a04c88 <__RAM_SIZE+0x904c88>
     c84:	00011000 	andeq	r1, r1, r0
     c88:	00000050 	andeq	r0, r0, r0, asr r0
     c8c:	00000000 	andeq	r0, r0, r0
     c90:	00000100 	andeq	r0, r0, r0, lsl #2
	...
     cac:	0015fe00 	andseq	pc, r5, r0, lsl #28
     cb0:	00160610 	andseq	r0, r6, r0, lsl r6
     cb4:	3a000210 	bcc	14fc <_Min_Stack_Size+0x4fc>
     cb8:	0016089f 	mulseq	r6, pc, r8	; <UNPREDICTABLE>
     cbc:	00165810 	andseq	r5, r6, r0, lsl r8
     cc0:	53000110 	movwpl	r0, #272	; 0x110
     cc4:	10001658 	andne	r1, r0, r8, asr r6
     cc8:	10001667 	andne	r1, r0, r7, ror #12
     ccc:	a8910003 	ldmge	r1, {r0, r1}
     cd0:	0016787f 	andseq	r7, r6, pc, ror r8
     cd4:	0016b410 	andseq	fp, r6, r0, lsl r4
     cd8:	53000110 	movwpl	r0, #272	; 0x110
     cdc:	100016b4 			; <UNDEFINED> instruction: 0x100016b4
     ce0:	100016bd 			; <UNDEFINED> instruction: 0x100016bd
     ce4:	a8910003 	ldmge	r1, {r0, r1}
     ce8:	0016c87f 	andseq	ip, r6, pc, ror r8
     cec:	0016ee10 	andseq	lr, r6, r0, lsl lr
     cf0:	53000110 	movwpl	r0, #272	; 0x110
     cf4:	100016ee 	andne	r1, r0, lr, ror #13
     cf8:	10001703 	andne	r1, r0, r3, lsl #14
     cfc:	b0910003 	addslt	r0, r1, r3
     d00:	0017087f 	andseq	r0, r7, pc, ror r8
     d04:	00173410 	andseq	r3, r7, r0, lsl r4
     d08:	53000110 	movwpl	r0, #272	; 0x110
     d0c:	10001734 	andne	r1, r0, r4, lsr r7
     d10:	1000173d 	andne	r1, r0, sp, lsr r7
     d14:	a8910003 	ldmge	r1, {r0, r1}
     d18:	0017427f 	andseq	r4, r7, pc, ror r2
     d1c:	00178810 	andseq	r8, r7, r0, lsl r8
     d20:	53000110 	movwpl	r0, #272	; 0x110
     d24:	10001788 	andne	r1, r0, r8, lsl #15
     d28:	10001791 	mulne	r0, r1, r7
     d2c:	b0910003 	addslt	r0, r1, r3
     d30:	0017967f 	andseq	r9, r7, pc, ror r6
     d34:	0017aa10 	andseq	sl, r7, r0, lsl sl
     d38:	53000110 	movwpl	r0, #272	; 0x110
     d3c:	100017aa 	andne	r1, r0, sl, lsr #15
     d40:	100017bb 			; <UNDEFINED> instruction: 0x100017bb
     d44:	a8910003 	ldmge	r1, {r0, r1}
     d48:	0017c07f 	andseq	ip, r7, pc, ror r0
     d4c:	0017da10 	andseq	sp, r7, r0, lsl sl
     d50:	53000110 	movwpl	r0, #272	; 0x110
	...
     d5c:	16980000 	ldrne	r0, [r8], r0
     d60:	16ae1000 	strtne	r1, [lr], r0
     d64:	00011000 	andeq	r1, r1, r0
     d68:	00000052 	andeq	r0, r0, r2, asr r0
	...
     d74:	00164a00 	andseq	r4, r6, r0, lsl #20
     d78:	00166010 	andseq	r6, r6, r0, lsl r0
     d7c:	52000110 	andpl	r0, r0, #16, 2
     d80:	10001660 	andne	r1, r0, r0, ror #12
     d84:	10001667 	andne	r1, r0, r7, ror #12
     d88:	007d0002 	rsbseq	r0, sp, r2
	...
     d94:	00000001 	andeq	r0, r0, r1
	...
     da8:	10001868 	andne	r1, r0, r8, ror #16
     dac:	10001872 	andne	r1, r0, r2, ror r8
     db0:	9f310002 	svcls	0x00310002
     db4:	10001872 	andne	r1, r0, r2, ror r8
     db8:	10001888 	andne	r1, r0, r8, lsl #17
     dbc:	92590001 	subsls	r0, r9, #1
     dc0:	a2100018 	andsge	r0, r0, #24
     dc4:	01100018 	tsteq	r0, r8, lsl r0
     dc8:	18a25900 	stmiane	r2!, {r8, fp, ip, lr}
     dcc:	18a61000 	stmiane	r6!, {ip}
     dd0:	00011000 	andeq	r1, r1, r0
     dd4:	0018a653 	andseq	sl, r8, r3, asr r6
     dd8:	0018ae10 	andseq	sl, r8, r0, lsl lr
     ddc:	59000110 	stmdbpl	r0, {r4, r8}
     de0:	100018ae 	andne	r1, r0, lr, lsr #17
     de4:	100018b8 			; <UNDEFINED> instruction: 0x100018b8
     de8:	9f310002 	svcls	0x00310002
     dec:	100018b8 			; <UNDEFINED> instruction: 0x100018b8
     df0:	100018c0 	andne	r1, r0, r0, asr #17
     df4:	c0590001 	subsgt	r0, r9, r1
     df8:	ce100018 	mrcgt	0, 0, r0, cr0, cr8, {0}
     dfc:	01100018 	tsteq	r0, r8, lsl r0
     e00:	18ce5400 	stmiane	lr, {sl, ip, lr}^
     e04:	18d21000 	ldmne	r2, {ip}^
     e08:	00011000 	andeq	r1, r1, r0
     e0c:	0018d259 	andseq	sp, r8, r9, asr r2
     e10:	0018da10 	andseq	sp, r8, r0, lsl sl
     e14:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
     e24:	10001954 	andne	r1, r0, r4, asr r9
     e28:	1000197c 	andne	r1, r0, ip, ror r9
     e2c:	845a0001 	ldrbhi	r0, [sl], #-1
     e30:	88100019 	ldmdahi	r0, {r0, r3, r4}
     e34:	01100019 	tsteq	r0, r9, lsl r0
     e38:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
     e58:	10001908 	andne	r1, r0, r8, lsl #18
     e5c:	10001928 	andne	r1, r0, r8, lsr #18
     e60:	2c590001 	mrrccs	0, 0, r0, r9, cr1
     e64:	34100019 	ldrcc	r0, [r0], #-25	; 0xffffffe7
     e68:	01100019 	tsteq	r0, r9, lsl r0
     e6c:	19345900 	ldmdbne	r4!, {r8, fp, ip, lr}
     e70:	19441000 	stmdbne	r4, {ip}^
     e74:	00011000 	andeq	r1, r1, r0
     e78:	00194455 	andseq	r4, r9, r5, asr r4
     e7c:	00194610 	andseq	r4, r9, r0, lsl r6
     e80:	53000110 	movwpl	r0, #272	; 0x110
     e84:	10001946 	andne	r1, r0, r6, asr #18
     e88:	10001954 	andne	r1, r0, r4, asr r9
     e8c:	54550001 	ldrbpl	r0, [r5], #-1
     e90:	7c100019 	ldcvc	0, cr0, [r0], {25}
     e94:	01100019 	tsteq	r0, r9, lsl r0
     e98:	19845900 	stmibne	r4, {r8, fp, ip, lr}
     e9c:	198a1000 	stmibne	sl, {ip}
     ea0:	00011000 	andeq	r1, r1, r0
     ea4:	00198a59 	andseq	r8, r9, r9, asr sl
     ea8:	00199810 	andseq	r9, r9, r0, lsl r8
     eac:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
     eb0:	10001998 	mulne	r0, r8, r9
     eb4:	1000199c 	mulne	r0, ip, r9
     eb8:	9c590001 	mrrcls	0, 0, r0, r9, cr1
     ebc:	a2100019 	andsge	r0, r0, #25
     ec0:	01100019 	tsteq	r0, r9, lsl r0
     ec4:	19a25400 	stmibne	r2!, {sl, ip, lr}
     ec8:	19a41000 	stmibne	r4!, {ip}
     ecc:	00031000 	andeq	r1, r3, r0
     ed0:	009f0179 	addseq	r0, pc, r9, ror r1	; <UNPREDICTABLE>
	...
     ee0:	0018f200 	andseq	pc, r8, r0, lsl #4
     ee4:	0018f810 	andseq	pc, r8, r0, lsl r8	; <UNPREDICTABLE>
     ee8:	52000110 	andpl	r0, r0, #16, 2
     eec:	100018f8 	strdne	r1, [r0], -r8
     ef0:	10001900 	andne	r1, r0, r0, lsl #18
     ef4:	00530001 	subseq	r0, r3, r1
     ef8:	04100019 	ldreq	r0, [r0], #-25	; 0xffffffe7
     efc:	01100019 	tsteq	r0, r9, lsl r0
     f00:	00005200 	andeq	r5, r0, r0, lsl #4
	...
     f0c:	100018f2 	strdne	r1, [r0], -r2
     f10:	10001908 	andne	r1, r0, r8, lsl #18
     f14:	00590001 	subseq	r0, r9, r1
     f18:	00000000 	andeq	r0, r0, r0
     f1c:	01000000 	mrseq	r0, (UNDEF: 0)
     f20:	0019a800 	andseq	sl, r9, r0, lsl #16
     f24:	0019da10 	andseq	sp, r9, r0, lsl sl
     f28:	30000210 	andcc	r0, r0, r0, lsl r2
     f2c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
     f30:	00000000 	andeq	r0, r0, r0
     f34:	08000300 	stmdaeq	r0, {r8, r9}
     f38:	0e100014 	mrceq	0, 0, r0, cr0, cr4, {0}
     f3c:	01100014 	tsteq	r0, r4, lsl r0
     f40:	00005100 	andeq	r5, r0, r0, lsl #2
	...
     f4c:	100014ae 	andne	r1, r0, lr, lsr #9
     f50:	100014b4 			; <UNDEFINED> instruction: 0x100014b4
     f54:	00520001 	subseq	r0, r2, r1
     f58:	00000000 	andeq	r0, r0, r0
     f5c:	20000000 	andcs	r0, r0, r0
     f60:	2410000c 	ldrcs	r0, [r0], #-12
     f64:	0210000c 	andseq	r0, r0, #12
     f68:	24007d00 	strcs	r7, [r0], #-3328	; 0xfffff300
     f6c:	2810000c 	ldmdacs	r0, {r2, r3}
     f70:	0210000c 	andseq	r0, r0, #12
     f74:	28247d00 	stmdacs	r4!, {r8, sl, fp, ip, sp, lr}
     f78:	2a10000c 	bcs	400fb0 <__RAM_SIZE+0x300fb0>
     f7c:	0210000c 	andseq	r0, r0, #12
     f80:	2a2c7d00 	bcs	b20388 <__RAM_SIZE+0xa20388>
     f84:	7410000c 	ldrvc	r0, [r0], #-12
     f88:	0310000e 	tsteq	r0, #14
     f8c:	00f07d00 	rscseq	r7, r0, r0, lsl #26
     f90:	10000e74 	andne	r0, r0, r4, ror lr
     f94:	10000e78 	andne	r0, r0, r8, ror lr
     f98:	2c7d0002 	ldclcs	0, cr0, [sp], #-8
     f9c:	10000e78 	andne	r0, r0, r8, ror lr
     fa0:	10000e7c 	andne	r0, r0, ip, ror lr
     fa4:	247d0002 	ldrbtcs	r0, [sp], #-2
     fa8:	10000e7c 	andne	r0, r0, ip, ror lr
     fac:	1000100a 	andne	r1, r0, sl
     fb0:	f07d0003 			; <UNDEFINED> instruction: 0xf07d0003
	...
     fc0:	000c2000 	andeq	r2, ip, r0
     fc4:	000c3810 	andeq	r3, ip, r0, lsl r8
     fc8:	50000110 	andpl	r0, r0, r0, lsl r1
     fcc:	10000c38 	andne	r0, r0, r8, lsr ip
     fd0:	1000100a 	andne	r1, r0, sl
     fd4:	005a0001 	subseq	r0, sl, r1
	...
     fe0:	20000000 	andcs	r0, r0, r0
     fe4:	3a10000c 	bcc	40101c <__RAM_SIZE+0x30101c>
     fe8:	0110000c 	tsteq	r0, ip
     fec:	0c3a5100 	ldfeqs	f5, [sl], #-0
     ff0:	100a1000 	andne	r1, sl, r0
     ff4:	00011000 	andeq	r1, r1, r0
     ff8:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1014:	20000000 	andcs	r0, r0, r0
    1018:	3610000c 	ldrcc	r0, [r0], -ip
    101c:	0110000c 	tsteq	r0, ip
    1020:	0c365200 	lfmeq	f5, 4, [r6], #-0
    1024:	0e721000 	cdpeq	0, 7, cr1, cr2, cr0, {0}
    1028:	00011000 	andeq	r1, r1, r0
    102c:	000e7c5b 	andeq	r7, lr, fp, asr ip
    1030:	000f8410 	andeq	r8, pc, r0, lsl r4	; <UNPREDICTABLE>
    1034:	5b000110 	blpl	147c <_Min_Stack_Size+0x47c>
    1038:	10000f84 	andne	r0, r0, r4, lsl #31
    103c:	10000f9a 	mulne	r0, sl, pc	; <UNPREDICTABLE>
    1040:	9a500001 	bls	140104c <__RAM_SIZE+0x130104c>
    1044:	ce10000f 	cdpgt	0, 1, cr0, cr0, cr15, {0}
    1048:	0110000f 	tsteq	r0, pc
    104c:	0fce5800 	svceq	0x00ce5800
    1050:	0fdc1000 	svceq	0x00dc1000
    1054:	00011000 	andeq	r1, r1, r0
    1058:	000fdc50 	andeq	sp, pc, r0, asr ip	; <UNPREDICTABLE>
    105c:	000fec10 	andeq	lr, pc, r0, lsl ip	; <UNPREDICTABLE>
    1060:	5b000110 	blpl	14a8 <_Min_Stack_Size+0x4a8>
    1064:	10000fec 	andne	r0, r0, ip, ror #31
    1068:	10000ff2 	strdne	r0, [r0], -r2
    106c:	f2500001 	vhadd.s16	d16, d0, d1
    1070:	f410000f 			; <UNDEFINED> instruction: 0xf410000f
    1074:	0110000f 	tsteq	r0, pc
    1078:	0ff45200 	svceq	0x00f45200
    107c:	0ffe1000 	svceq	0x00fe1000
    1080:	00011000 	andeq	r1, r1, r0
    1084:	000ffe56 	andeq	pc, pc, r6, asr lr	; <UNPREDICTABLE>
    1088:	00100a10 	andseq	r0, r0, r0, lsl sl
    108c:	52000110 	andpl	r0, r0, #16, 2
	...
    109c:	10000c20 	andne	r0, r0, r0, lsr #24
    10a0:	10000c3d 	andne	r0, r0, sp, lsr ip
    10a4:	3d530001 	ldclcc	0, cr0, [r3, #-4]
    10a8:	0a10000c 	beq	4010e0 <__RAM_SIZE+0x3010e0>
    10ac:	01100010 	tsteq	r0, r0, lsl r0
    10b0:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    10c4:	0c200000 	stceq	0, cr0, [r0], #-0
    10c8:	0c881000 	stceq	0, cr1, [r8], {0}
    10cc:	00021000 	andeq	r1, r2, r0
    10d0:	0c880091 	stceq	0, cr0, [r8], {145}	; 0x91
    10d4:	0e521000 	cdpeq	0, 5, cr1, cr2, cr0, {0}
    10d8:	00031000 	andeq	r1, r3, r0
    10dc:	527fa891 	rsbspl	sl, pc, #9502720	; 0x910000
    10e0:	7210000e 	andsvc	r0, r0, #14
    10e4:	0210000e 	andseq	r0, r0, #14
    10e8:	7c009100 	stfvcd	f1, [r0], {-0}
    10ec:	9010000e 	andsls	r0, r0, lr
    10f0:	0210000e 	andseq	r0, r0, #14
    10f4:	90009100 	andls	r9, r0, r0, lsl #2
    10f8:	6010000e 	andsvs	r0, r0, lr
    10fc:	0310000f 	tsteq	r0, #15
    1100:	7fa89100 	svcvc	0x00a89100
    1104:	10000fdc 	ldrdne	r0, [r0], -ip
    1108:	10000fea 	andne	r0, r0, sl, ror #31
    110c:	a8910003 	ldmge	r1, {r0, r1}
    1110:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1124:	000c2000 	andeq	r2, ip, r0
    1128:	000c9610 	andeq	r9, ip, r0, lsl r6
    112c:	91000210 	tstls	r0, r0, lsl r2
    1130:	000c9608 	andeq	r9, ip, r8, lsl #12
    1134:	000e5010 	andeq	r5, lr, r0, lsl r0
    1138:	91000210 	tstls	r0, r0, lsl r2
    113c:	000e5008 	andeq	r5, lr, r8
    1140:	000e5210 	andeq	r5, lr, r0, lsl r2
    1144:	53000110 	movwpl	r0, #272	; 0x110
    1148:	10000e52 	andne	r0, r0, r2, asr lr
    114c:	10000ec4 	andne	r0, r0, r4, asr #29
    1150:	08910002 	ldmeq	r1, {r1}
    1154:	10000ec4 	andne	r0, r0, r4, asr #29
    1158:	10000f2c 	andne	r0, r0, ip, lsr #30
    115c:	2c530001 	mrrccs	0, 0, r0, r3, cr1
    1160:	0a10000f 	beq	4011a4 <__RAM_SIZE+0x3011a4>
    1164:	02100010 	andseq	r0, r0, #16
    1168:	00089100 	andeq	r9, r8, r0, lsl #2
	...
    1174:	20000000 	andcs	r0, r0, r0
    1178:	7c10000c 	ldcvc	0, cr0, [r0], {12}
    117c:	0210000e 	andseq	r0, r0, #14
    1180:	7c0c9100 	stfvcd	f1, [ip], {-0}
    1184:	0a10000e 	beq	4011c4 <__RAM_SIZE+0x3011c4>
    1188:	02100010 	andseq	r0, r0, #16
    118c:	000c9100 	andeq	r9, ip, r0, lsl #2
	...
    119c:	20000000 	andcs	r0, r0, r0
    11a0:	7c10000c 	ldcvc	0, cr0, [r0], {12}
    11a4:	0210000e 	andseq	r0, r0, #14
    11a8:	7c109100 	ldfvcd	f1, [r0], {-0}
    11ac:	a210000e 	andsge	r0, r0, #14
    11b0:	0210000e 	andseq	r0, r0, #14
    11b4:	a2109100 	andsge	r9, r0, #0, 2
    11b8:	a610000e 	ldrge	r0, [r0], -lr
    11bc:	0110000e 	tsteq	r0, lr
    11c0:	0ea65300 	cdpeq	3, 10, cr5, cr6, cr0, {0}
    11c4:	100a1000 	andne	r1, sl, r0
    11c8:	00021000 	andeq	r1, r2, r0
    11cc:	00001091 	muleq	r0, r1, r0
    11d0:	00000000 	andeq	r0, r0, r0
    11d4:	00010000 	andeq	r0, r1, r0
    11d8:	0c6e0000 	stcleq	0, cr0, [lr], #-0
    11dc:	0e521000 	cdpeq	0, 5, cr1, cr2, cr0, {0}
    11e0:	00121000 	andseq	r1, r2, r0
    11e4:	08f60091 	ldmeq	r6!, {r0, r4, r7}^
    11e8:	0829f429 	stmdaeq	r9!, {r0, r3, r5, sl, ip, sp, lr, pc}
	...
    11f4:	0e7c9f2d 	cdpeq	15, 7, cr9, cr12, cr13, {1}
    11f8:	100a1000 	andne	r1, sl, r0
    11fc:	00121000 	andseq	r1, r2, r0
    1200:	08f60091 	ldmeq	r6!, {r0, r4, r7}^
    1204:	0829f429 	stmdaeq	r9!, {r0, r3, r5, sl, ip, sp, lr, pc}
	...
    1210:	00009f2d 	andeq	r9, r0, sp, lsr #30
	...
    121c:	0e720001 	cdpeq	0, 7, cr0, cr2, cr1, {0}
    1220:	0e781000 	cdpeq	0, 7, cr1, cr8, cr0, {0}
    1224:	00081000 	andeq	r1, r8, r0
    1228:	04935090 	ldreq	r5, [r3], #144	; 0x90
    122c:	04935190 	ldreq	r5, [r3], #400	; 0x190
    1230:	10000f40 	andne	r0, r0, r0, asr #30
    1234:	1000100a 	andne	r1, r0, sl
    1238:	50900008 	addspl	r0, r0, r8
    123c:	51900493 			; <UNDEFINED> instruction: 0x51900493
    1240:	00000493 	muleq	r0, r3, r4
	...
    1254:	0ca00000 	stceq	0, cr0, [r0]
    1258:	0cb21000 	ldceq	0, cr1, [r2]
    125c:	00041000 	andeq	r1, r4, r0
    1260:	9f788170 	svcls	0x00788170
    1264:	10000cb2 			; <UNDEFINED> instruction: 0x10000cb2
    1268:	10000cb5 			; <UNDEFINED> instruction: 0x10000cb5
    126c:	16500001 	ldrbne	r0, [r0], -r1
    1270:	1e10000d 	cdpne	0, 1, cr0, cr0, cr13, {0}
    1274:	0110000d 	tsteq	r0, sp
    1278:	0d1e5000 	ldceq	0, cr5, [lr, #-0]
    127c:	0d581000 	ldcleq	0, cr1, [r8, #-0]
    1280:	00011000 	andeq	r1, r1, r0
    1284:	000d5857 	andeq	r5, sp, r7, asr r8
    1288:	000e1410 	andeq	r1, lr, r0, lsl r4
    128c:	77000410 	smladvc	r0, r0, r4, r0
    1290:	929f7881 	addsls	r7, pc, #8454144	; 0x810000
    1294:	9410000e 	ldrls	r0, [r0], #-14
    1298:	0410000e 	ldreq	r0, [r0], #-14
    129c:	78817700 	stmvc	r1, {r8, r9, sl, ip, sp, lr}
    12a0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    12ac:	02000000 	andeq	r0, r0, #0
    12b0:	f6000000 			; <UNDEFINED> instruction: 0xf6000000
    12b4:	f910000c 			; <UNDEFINED> instruction: 0xf910000c
    12b8:	0110000c 	tsteq	r0, ip
    12bc:	0cf95000 	ldcleq	0, cr5, [r9]
    12c0:	0e4c1000 	cdpeq	0, 4, cr1, cr12, cr0, {0}
    12c4:	00011000 	andeq	r1, r1, r0
    12c8:	000e9256 	andeq	r9, lr, r6, asr r2
    12cc:	000e9a10 	andeq	r9, lr, r0, lsl sl
    12d0:	56000110 			; <UNDEFINED> instruction: 0x56000110
    12d4:	10000ea2 	andne	r0, r0, r2, lsr #29
    12d8:	10000ea6 	andne	r0, r0, r6, lsr #29
    12dc:	9f300002 	svcls	0x00300002
    12e0:	10000ea6 	andne	r0, r0, r6, lsr #29
    12e4:	10000ff2 	strdne	r0, [r0], -r2
    12e8:	00560001 	subseq	r0, r6, r1
	...
    12f4:	000d4800 	andeq	r4, sp, r0, lsl #16
    12f8:	000d8810 	andeq	r8, sp, r0, lsl r8
    12fc:	58000610 	stmdapl	r0, {r4, r9, sl}
    1300:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1304:	00000004 	andeq	r0, r0, r4
	...
    1310:	54000000 	strpl	r0, [r0], #-0
    1314:	6e10000d 	cdpvs	0, 1, cr0, cr0, cr13, {0}
    1318:	0610000d 	ldreq	r0, [r0], -sp
    131c:	04935000 	ldreq	r5, [r3], #0
    1320:	6e049351 	mcrvs	3, 0, r9, cr4, cr1, {2}
    1324:	5210000d 	andspl	r0, r0, #13
    1328:	0310000e 	tsteq	r0, #14
    132c:	7fb89100 	svcvc	0x00b89100
    1330:	10000e92 	mulne	r0, r2, lr
    1334:	1000100a 	andne	r1, r0, sl
    1338:	b8910003 	ldmlt	r1, {r0, r1}
    133c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    1348:	00000101 	andeq	r0, r0, r1, lsl #2
    134c:	00000000 	andeq	r0, r0, r0
    1350:	000e1400 	andeq	r1, lr, r0, lsl #8
    1354:	000e5210 	andeq	r5, lr, r0, lsl r2
    1358:	57000110 	smladpl	r0, r0, r1, r0
    135c:	10000e96 	mulne	r0, r6, lr
    1360:	10000ea2 	andne	r0, r0, r2, lsr #29
    1364:	a2570001 	subsge	r0, r7, #1
    1368:	a610000e 	ldrge	r0, [r0], -lr
    136c:	0210000e 	andseq	r0, r0, #14
    1370:	a69f3000 	ldrge	r3, [pc], r0
    1374:	b210000e 	andslt	r0, r0, #14
    1378:	0110000f 	tsteq	r0, pc
    137c:	0fb25700 	svceq	0x00b25700
    1380:	0fda1000 	svceq	0x00da1000
    1384:	00031000 	andeq	r1, r3, r0
    1388:	dc9f0177 	ldfles	f0, [pc], {119}	; 0x77
    138c:	f210000f 	vhadd.s16	d0, d0, d15
    1390:	0110000f 	tsteq	r0, pc
    1394:	00005700 	andeq	r5, r0, r0, lsl #14
    1398:	00000000 	andeq	r0, r0, r0
    139c:	00010000 	andeq	r0, r1, r0
	...
    13a8:	10000ea6 	andne	r0, r0, r6, lsr #29
    13ac:	10000eb0 			; <UNDEFINED> instruction: 0x10000eb0
    13b0:	0c910002 	ldceq	0, cr0, [r1], {2}
    13b4:	10000eb0 			; <UNDEFINED> instruction: 0x10000eb0
    13b8:	10000eb2 			; <UNDEFINED> instruction: 0x10000eb2
    13bc:	2c580001 	mrrccs	0, 0, r0, r8, cr1
    13c0:	3010000f 	andscc	r0, r0, pc
    13c4:	0110000f 	tsteq	r0, pc
    13c8:	0f305300 	svceq	0x00305300
    13cc:	0f9a1000 	svceq	0x009a1000
    13d0:	00011000 	andeq	r1, r1, r0
    13d4:	000fdc58 	andeq	sp, pc, r8, asr ip	; <UNPREDICTABLE>
    13d8:	000ff210 	andeq	pc, pc, r0, lsl r2	; <UNPREDICTABLE>
    13dc:	58000110 	stmdapl	r0, {r4, r8}
	...
    13e8:	0f500001 	svceq	0x00500001
    13ec:	100a1000 	andne	r1, sl, r0
    13f0:	00011000 	andeq	r1, r1, r0
    13f4:	0000005b 	andeq	r0, r0, fp, asr r0
    13f8:	00000000 	andeq	r0, r0, r0
    13fc:	00101000 	andseq	r1, r0, r0
    1400:	00101410 	andseq	r1, r0, r0, lsl r4
    1404:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1408:	00101400 	andseq	r1, r0, r0, lsl #8
    140c:	00101810 	andseq	r1, r0, r0, lsl r8
    1410:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1414:	00101824 	andseq	r1, r0, r4, lsr #16
    1418:	00101a10 	andseq	r1, r0, r0, lsl sl
    141c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    1420:	00101a2c 	andseq	r1, r0, ip, lsr #20
    1424:	00133410 	andseq	r3, r3, r0, lsl r4
    1428:	7d000310 	stcvc	3, cr0, [r0, #-64]	; 0xffffffc0
    142c:	13340180 	teqne	r4, #128, 2
    1430:	13381000 	teqne	r8, #0
    1434:	00021000 	andeq	r1, r2, r0
    1438:	13382c7d 	teqne	r8, #32000	; 0x7d00
    143c:	133c1000 	teqne	ip, #0
    1440:	00021000 	andeq	r1, r2, r0
    1444:	133c247d 	teqne	ip, #2097152000	; 0x7d000000
    1448:	13a61000 			; <UNDEFINED> instruction: 0x13a61000
    144c:	00031000 	andeq	r1, r3, r0
    1450:	0001807d 	andeq	r8, r1, sp, ror r0
	...
    145c:	10000000 	andne	r0, r0, r0
    1460:	2e100010 	mrccs	0, 0, r0, cr0, cr0, {0}
    1464:	01100010 	tsteq	r0, r0, lsl r0
    1468:	102e5000 	eorne	r5, lr, r0
    146c:	13a61000 			; <UNDEFINED> instruction: 0x13a61000
    1470:	00031000 	andeq	r1, r3, r0
    1474:	007f9c91 			; <UNDEFINED> instruction: 0x007f9c91
	...
    1480:	10000000 	andne	r0, r0, r0
    1484:	30100010 	andscc	r0, r0, r0, lsl r0
    1488:	01100010 	tsteq	r0, r0, lsl r0
    148c:	10305100 	eorsne	r5, r0, r0, lsl #2
    1490:	13a61000 			; <UNDEFINED> instruction: 0x13a61000
    1494:	00031000 	andeq	r1, r3, r0
    1498:	007fa891 			; <UNDEFINED> instruction: 0x007fa891
	...
    14a4:	10000000 	andne	r0, r0, r0
    14a8:	2a100010 	bcs	4014f0 <__RAM_SIZE+0x3014f0>
    14ac:	01100010 	tsteq	r0, r0, lsl r0
    14b0:	102a5200 	eorne	r5, sl, r0, lsl #4
    14b4:	13a61000 			; <UNDEFINED> instruction: 0x13a61000
    14b8:	00011000 	andeq	r1, r1, r0
    14bc:	0000005a 	andeq	r0, r0, sl, asr r0
	...
    14c8:	00101000 	andseq	r1, r0, r0
    14cc:	00102c10 	andseq	r2, r0, r0, lsl ip
    14d0:	53000110 	movwpl	r0, #272	; 0x110
    14d4:	1000102c 	andne	r1, r0, ip, lsr #32
    14d8:	100013a6 	andne	r1, r0, r6, lsr #7
    14dc:	005b0001 	subseq	r0, fp, r1
	...
    14f0:	00101000 	andseq	r1, r0, r0
    14f4:	00109610 	andseq	r9, r0, r0, lsl r6
    14f8:	91000210 	tstls	r0, r0, lsl r2
    14fc:	00109600 	andseq	r9, r0, r0, lsl #12
    1500:	0010ba10 	andseq	fp, r0, r0, lsl sl
    1504:	58000610 	stmdapl	r0, {r4, r9, sl}
    1508:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    150c:	0010ba04 	andseq	fp, r0, r4, lsl #20
    1510:	00115210 	andseq	r5, r1, r0, lsl r2
    1514:	91000210 	tstls	r0, r0, lsl r2
    1518:	00115200 	andseq	r5, r1, r0, lsl #4
    151c:	0011ea10 	andseq	lr, r1, r0, lsl sl
    1520:	58000610 	stmdapl	r0, {r4, r9, sl}
    1524:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1528:	00120e04 	andseq	r0, r2, r4, lsl #28
    152c:	00128a10 	andseq	r8, r2, r0, lsl sl
    1530:	58000610 	stmdapl	r0, {r4, r9, sl}
    1534:	93590493 	cmpls	r9, #-1828716544	; 0x93000000
    1538:	00000004 	andeq	r0, r0, r4
	...
    1548:	00101000 	andseq	r1, r0, r0
    154c:	00109e10 	andseq	r9, r0, r0, lsl lr
    1550:	91000210 	tstls	r0, r0, lsl r2
    1554:	0010a008 	andseq	sl, r0, r8
    1558:	0010ba10 	andseq	fp, r0, r0, lsl sl
    155c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    1560:	100010ba 	strhne	r1, [r0], -sl
    1564:	1000115c 	andne	r1, r0, ip, asr r1
    1568:	08910002 	ldmeq	r1, {r1}
    156c:	1000115c 	andne	r1, r0, ip, asr r1
    1570:	1000122a 	andne	r1, r0, sl, lsr #4
    1574:	00550001 	subseq	r0, r5, r1
	...
    1588:	00101000 	andseq	r1, r0, r0
    158c:	00130010 	andseq	r0, r3, r0, lsl r0
    1590:	91000210 	tstls	r0, r0, lsl r2
    1594:	0013000c 	andseq	r0, r3, ip
    1598:	00135210 	andseq	r5, r3, r0, lsl r2
    159c:	91000210 	tstls	r0, r0, lsl r2
    15a0:	0013520c 	andseq	r5, r3, ip, lsl #4
    15a4:	00135610 	andseq	r5, r3, r0, lsl r6
    15a8:	53000110 	movwpl	r0, #272	; 0x110
    15ac:	10001356 	andne	r1, r0, r6, asr r3
    15b0:	1000136e 	andne	r1, r0, lr, ror #6
    15b4:	6e510001 	cdpvs	0, 5, cr0, cr1, cr1, {0}
    15b8:	a6100013 			; <UNDEFINED> instruction: 0xa6100013
    15bc:	02100013 	andseq	r0, r0, #19
    15c0:	000c9100 	andeq	r9, ip, r0, lsl #2
	...
    15cc:	10000000 	andne	r0, r0, r0
    15d0:	3c100010 	ldccc	0, cr0, [r0], {16}
    15d4:	02100013 	andseq	r0, r0, #19
    15d8:	3c109100 	ldfccd	f1, [r0], {-0}
    15dc:	a6100013 			; <UNDEFINED> instruction: 0xa6100013
    15e0:	02100013 	andseq	r0, r0, #19
    15e4:	00109100 	andseq	r9, r0, r0, lsl #2
    15e8:	00000000 	andeq	r0, r0, r0
    15ec:	02000000 	andeq	r0, r0, #0
    15f0:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    15fc:	01010000 	mrseq	r0, (UNDEF: 1)
    1600:	01010000 	mrseq	r0, (UNDEF: 1)
    1604:	00000000 	andeq	r0, r0, r0
    1608:	01010000 	mrseq	r0, (UNDEF: 1)
    160c:	00000000 	andeq	r0, r0, r0
    1610:	00000101 	andeq	r0, r0, r1, lsl #2
    1614:	00000101 	andeq	r0, r0, r1, lsl #2
    1618:	00000101 	andeq	r0, r0, r1, lsl #2
    161c:	00102800 	andseq	r2, r0, r0, lsl #16
    1620:	0010a010 	andseq	sl, r0, r0, lsl r0
    1624:	30000210 	andcc	r0, r0, r0, lsl r2
    1628:	0010a09f 	mulseq	r0, pc, r0	; <UNPREDICTABLE>
    162c:	0010a810 	andseq	sl, r0, r0, lsl r8
    1630:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1634:	100010a8 	andne	r1, r0, r8, lsr #1
    1638:	100010b8 	strhne	r1, [r0], -r8
    163c:	01740003 	cmneq	r4, r3
    1640:	0010b89f 	mulseq	r0, pc, r8	; <UNPREDICTABLE>
    1644:	0010ba10 	andseq	fp, r0, r0, lsl sl
    1648:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    164c:	100010ba 	strhne	r1, [r0], -sl
    1650:	1000115c 	andne	r1, r0, ip, asr r1
    1654:	9f300002 	svcls	0x00300002
    1658:	1000115c 	andne	r1, r0, ip, asr r1
    165c:	10001244 	andne	r1, r0, r4, asr #4
    1660:	44540001 	ldrbmi	r0, [r4], #-1
    1664:	5e100012 	mrcpl	0, 0, r0, cr0, cr2, {0}
    1668:	01100012 	tsteq	r0, r2, lsl r0
    166c:	125e5200 	subsne	r5, lr, #0, 4
    1670:	12661000 	rsbne	r1, r6, #0
    1674:	00011000 	andeq	r1, r1, r0
    1678:	00126654 	andseq	r6, r2, r4, asr r6
    167c:	00127610 	andseq	r7, r2, r0, lsl r6
    1680:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1684:	12769f01 	rsbsne	r9, r6, #1, 30
    1688:	127c1000 	rsbsne	r1, ip, #0
    168c:	00011000 	andeq	r1, r1, r0
    1690:	00127c54 	andseq	r7, r2, r4, asr ip
    1694:	00128a10 	andseq	r8, r2, r0, lsl sl
    1698:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    169c:	128a9f01 	addne	r9, sl, #1, 30
    16a0:	12a61000 	adcne	r1, r6, #0
    16a4:	00011000 	andeq	r1, r1, r0
    16a8:	0012a654 	andseq	sl, r2, r4, asr r6
    16ac:	0012f610 	andseq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
    16b0:	51000110 	tstpl	r0, r0, lsl r1
    16b4:	100012f6 	strdne	r1, [r0], -r6
    16b8:	1000130a 	andne	r1, r0, sl, lsl #6
    16bc:	0a540001 	beq	15016c8 <__RAM_SIZE+0x14016c8>
    16c0:	18100013 	ldmdane	r0, {r0, r1, r4}
    16c4:	03100013 	tsteq	r0, #19
    16c8:	9f017400 	svcls	0x00017400
    16cc:	10001318 	andne	r1, r0, r8, lsl r3
    16d0:	10001332 	andne	r1, r0, r2, lsr r3
    16d4:	3c540001 	mrrccc	0, 0, r0, r4, cr1
    16d8:	56100013 			; <UNDEFINED> instruction: 0x56100013
    16dc:	01100013 	tsteq	r0, r3, lsl r0
    16e0:	13565400 	cmpne	r6, #0, 8
    16e4:	13641000 	cmnne	r4, #0
    16e8:	00031000 	andeq	r1, r3, r0
    16ec:	649f0174 	ldrvs	r0, [pc], #372	; 16f4 <_Min_Stack_Size+0x6f4>
    16f0:	7e100013 	mrcvc	0, 0, r0, cr0, cr3, {0}
    16f4:	01100013 	tsteq	r0, r3, lsl r0
    16f8:	137e5400 	cmnne	lr, #0, 8
    16fc:	138c1000 	orrne	r1, ip, #0
    1700:	00031000 	andeq	r1, r3, r0
    1704:	8c9f0174 	ldfhis	f0, [pc], {116}	; 0x74
    1708:	96100013 			; <UNDEFINED> instruction: 0x96100013
    170c:	01100013 	tsteq	r0, r3, lsl r0
    1710:	13965400 	orrsne	r5, r6, #0, 8
    1714:	13a41000 			; <UNDEFINED> instruction: 0x13a41000
    1718:	00031000 	andeq	r1, r3, r0
    171c:	a49f0174 	ldrge	r0, [pc], #372	; 1724 <_Min_Stack_Size+0x724>
    1720:	a6100013 			; <UNDEFINED> instruction: 0xa6100013
    1724:	01100013 	tsteq	r0, r3, lsl r0
    1728:	00005400 	andeq	r5, r0, r0, lsl #8
    172c:	00000000 	andeq	r0, r0, r0
    1730:	00030000 	andeq	r0, r3, r0
	...
    173c:	10001028 	andne	r1, r0, r8, lsr #32
    1740:	100011ae 	andne	r1, r0, lr, lsr #3
    1744:	089e000a 	ldmeq	lr, {r1, r3}
	...
    1750:	100011ae 	andne	r1, r0, lr, lsr #3
    1754:	100011b0 			; <UNDEFINED> instruction: 0x100011b0
    1758:	93520006 	cmpls	r2, #6
    175c:	04935304 	ldreq	r5, [r3], #772	; 0x304
    1760:	100011b0 			; <UNDEFINED> instruction: 0x100011b0
    1764:	100011ea 	andne	r1, r0, sl, ror #3
    1768:	a0910003 	addsge	r0, r1, r3
    176c:	0011ea7f 	andseq	lr, r1, pc, ror sl
    1770:	00120e10 	andseq	r0, r2, r0, lsl lr
    1774:	57000610 	smladpl	r0, r0, r6, r0
    1778:	93580493 	cmpls	r8, #-1828716544	; 0x93000000
    177c:	00120e04 	andseq	r0, r2, r4, lsl #28
    1780:	00128a10 	andseq	r8, r2, r0, lsl sl
    1784:	91000310 	tstls	r0, r0, lsl r3
    1788:	00007fa0 	andeq	r7, r0, r0, lsr #31
    178c:	00000000 	andeq	r0, r0, r0
    1790:	00010000 	andeq	r0, r1, r0
    1794:	01000000 	mrseq	r0, (UNDEF: 0)
    1798:	00000001 	andeq	r0, r0, r1
    179c:	10820000 	addne	r0, r2, r0
    17a0:	10961000 	addsne	r1, r6, r0
    17a4:	00021000 	andeq	r1, r2, r0
    17a8:	10969f30 	addsne	r9, r6, r0, lsr pc
    17ac:	10ba1000 	adcsne	r1, sl, r0
    17b0:	00031000 	andeq	r1, r3, r0
    17b4:	427fac91 	rsbsmi	sl, pc, #37120	; 0x9100
    17b8:	42100011 	andsmi	r0, r0, #17
    17bc:	02100011 	andseq	r0, r0, #17
    17c0:	429f3000 	addsmi	r3, pc, #0
    17c4:	58100011 	ldmdapl	r0, {r0, r4}
    17c8:	02100011 	andseq	r0, r0, #17
    17cc:	589f3100 	ldmpl	pc, {r8, ip, sp}	; <UNPREDICTABLE>
    17d0:	32100011 	andscc	r0, r0, #17
    17d4:	03100013 	tsteq	r0, #19
    17d8:	7fac9100 	svcvc	0x00ac9100
    17dc:	1000133c 	andne	r1, r0, ip, lsr r3
    17e0:	100013a6 	andne	r1, r0, r6, lsr #7
    17e4:	ac910003 	ldcge	0, cr0, [r1], {3}
    17e8:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    17f8:	66000000 	strvs	r0, [r0], -r0
    17fc:	69100011 	ldmdbvs	r0, {r0, r4}
    1800:	01100011 	tsteq	r0, r1, lsl r0
    1804:	11695000 	cmnne	r9, r0
    1808:	12b61000 	adcsne	r1, r6, #0
    180c:	00011000 	andeq	r1, r1, r0
    1810:	0012b656 	andseq	fp, r2, r6, asr r6
    1814:	0012f610 	andseq	pc, r2, r0, lsl r6	; <UNPREDICTABLE>
    1818:	52000110 	andpl	r0, r0, #16, 2
    181c:	100012f6 	strdne	r1, [r0], -r6
    1820:	10001332 	andne	r1, r0, r2, lsr r3
    1824:	3c560001 	mrrccc	0, 0, r0, r6, cr1
    1828:	a6100013 			; <UNDEFINED> instruction: 0xa6100013
    182c:	01100013 	tsteq	r0, r3, lsl r0
    1830:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    183c:	11900000 	orrsne	r0, r0, r0
    1840:	11931000 	orrsne	r1, r3, r0
    1844:	00061000 	andeq	r1, r6, r0
    1848:	53049352 	movwpl	r9, #17234	; 0x4352
    184c:	11930493 			; <UNDEFINED> instruction: 0x11930493
    1850:	11ae1000 			; <UNDEFINED> instruction: 0x11ae1000
    1854:	00031000 	andeq	r1, r3, r0
    1858:	007fa091 			; <UNDEFINED> instruction: 0x007fa091
	...
    1864:	01010000 	mrseq	r0, (UNDEF: 1)
    1868:	00000000 	andeq	r0, r0, r0
    186c:	96000101 	strls	r0, [r0], -r1, lsl #2
    1870:	99100011 	ldmdbls	r0, {r0, r4}
    1874:	01100011 	tsteq	r0, r1, lsl r0
    1878:	11995000 	orrsne	r5, r9, r0
    187c:	11ce1000 	bicne	r1, lr, r0
    1880:	00011000 	andeq	r1, r1, r0
    1884:	0011ce57 	andseq	ip, r1, r7, asr lr
    1888:	0011d210 	andseq	sp, r1, r0, lsl r2
    188c:	30000210 	andcc	r0, r0, r0, lsl r2
    1890:	0011d29f 	mulseq	r1, pc, r2	; <UNPREDICTABLE>
    1894:	0011e810 	andseq	lr, r1, r0, lsl r8
    1898:	57000110 	smladpl	r0, r0, r1, r0
    189c:	1000120e 	andne	r1, r0, lr, lsl #4
    18a0:	10001252 	andne	r1, r0, r2, asr r2
    18a4:	52570001 	subspl	r0, r7, #1
    18a8:	5e100012 	mrcpl	0, 0, r0, cr0, cr2, {0}
    18ac:	01100012 	tsteq	r0, r2, lsl r0
    18b0:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    18bc:	122a0000 	eorne	r0, sl, #0
    18c0:	12641000 	rsbne	r1, r4, #0
    18c4:	00011000 	andeq	r1, r1, r0
    18c8:	00126455 	andseq	r6, r2, r5, asr r4
    18cc:	00127810 	andseq	r7, r2, r0, lsl r8
    18d0:	53000110 	movwpl	r0, #272	; 0x110
	...
    18dc:	10000b54 	andne	r0, r0, r4, asr fp
    18e0:	10000b58 	andne	r0, r0, r8, asr fp
    18e4:	007d0002 	rsbseq	r0, sp, r2
    18e8:	10000b58 	andne	r0, r0, r8, asr fp
    18ec:	10000b5a 	andne	r0, r0, sl, asr fp
    18f0:	247d0002 	ldrbtcs	r0, [sp], #-2
    18f4:	10000b5a 	andne	r0, r0, sl, asr fp
    18f8:	10000c16 	andne	r0, r0, r6, lsl ip
    18fc:	f87d0003 			; <UNDEFINED> instruction: 0xf87d0003
    1900:	000c1600 	andeq	r1, ip, r0, lsl #12
    1904:	000c1a10 	andeq	r1, ip, r0, lsl sl
    1908:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    190c:	00000024 	andeq	r0, r0, r4, lsr #32
	...
    191c:	000b5400 	andeq	r5, fp, r0, lsl #8
    1920:	000b8a10 	andeq	r8, fp, r0, lsl sl
    1924:	50000110 	andpl	r0, r0, r0, lsl r1
    1928:	10000b8a 	andne	r0, r0, sl, lsl #23
    192c:	10000be8 	andne	r0, r0, r8, ror #23
    1930:	ac910003 	ldcge	0, cr0, [r1], {3}
    1934:	000be87f 	andeq	lr, fp, pc, ror r8
    1938:	000bec10 	andeq	lr, fp, r0, lsl ip
    193c:	50000110 	andpl	r0, r0, r0, lsl r1
    1940:	10000bec 	andne	r0, r0, ip, ror #23
    1944:	10000c1a 	andne	r0, r0, sl, lsl ip
    1948:	ac910003 	ldcge	0, cr0, [r1], {3}
    194c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    195c:	000b5400 	andeq	r5, fp, r0, lsl #8
    1960:	000b8a10 	andeq	r8, fp, r0, lsl sl
    1964:	51000110 	tstpl	r0, r0, lsl r1
    1968:	10000b8a 	andne	r0, r0, sl, lsl #23
    196c:	10000be8 	andne	r0, r0, r8, ror #23
    1970:	b0910003 	addslt	r0, r1, r3
    1974:	000be87f 	andeq	lr, fp, pc, ror r8
    1978:	000bec10 	andeq	lr, fp, r0, lsl ip
    197c:	51000110 	tstpl	r0, r0, lsl r1
    1980:	10000bec 	andne	r0, r0, ip, ror #23
    1984:	10000c1a 	andne	r0, r0, sl, lsl ip
    1988:	b0910003 	addslt	r0, r1, r3
    198c:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    199c:	000b5400 	andeq	r5, fp, r0, lsl #8
    19a0:	000b8a10 	andeq	r8, fp, r0, lsl sl
    19a4:	52000110 	andpl	r0, r0, #16, 2
    19a8:	10000b8a 	andne	r0, r0, sl, lsl #23
    19ac:	10000be8 	andne	r0, r0, r8, ror #23
    19b0:	b4910003 	ldrlt	r0, [r1], #3
    19b4:	000be87f 	andeq	lr, fp, pc, ror r8
    19b8:	000bec10 	andeq	lr, fp, r0, lsl ip
    19bc:	52000110 	andpl	r0, r0, #16, 2
    19c0:	10000bec 	andne	r0, r0, ip, ror #23
    19c4:	10000c1a 	andne	r0, r0, sl, lsl ip
    19c8:	b4910003 	ldrlt	r0, [r1], #3
    19cc:	0000007f 	andeq	r0, r0, pc, ror r0
	...
    19d8:	000b5400 	andeq	r5, fp, r0, lsl #8
    19dc:	000b7410 	andeq	r7, fp, r0, lsl r4
    19e0:	53000110 	movwpl	r0, #272	; 0x110
    19e4:	10000b74 	andne	r0, r0, r4, ror fp
    19e8:	10000c1a 	andne	r0, r0, sl, lsl ip
    19ec:	005b0001 	subseq	r0, fp, r1
	...
    1a00:	000b5400 	andeq	r5, fp, r0, lsl #8
    1a04:	000b8a10 	andeq	r8, fp, r0, lsl sl
    1a08:	91000210 	tstls	r0, r0, lsl r2
    1a0c:	000b8a00 	andeq	r8, fp, r0, lsl #20
    1a10:	000bac10 	andeq	sl, fp, r0, lsl ip
    1a14:	55000610 	strpl	r0, [r0, #-1552]	; 0xfffff9f0
    1a18:	93560493 	cmpls	r6, #-1828716544	; 0x93000000
    1a1c:	000bac04 	andeq	sl, fp, r4, lsl #24
    1a20:	000bc010 	andeq	ip, fp, r0, lsl r0
    1a24:	50000610 	andpl	r0, r0, r0, lsl r6
    1a28:	93510493 	cmpls	r1, #-1828716544	; 0x93000000
    1a2c:	000bc004 	andeq	ip, fp, r4
    1a30:	000be810 	andeq	lr, fp, r0, lsl r8
    1a34:	55000610 	strpl	r0, [r0, #-1552]	; 0xfffff9f0
    1a38:	93560493 	cmpls	r6, #-1828716544	; 0x93000000
    1a3c:	000be804 	andeq	lr, fp, r4, lsl #16
    1a40:	000bec10 	andeq	lr, fp, r0, lsl ip
    1a44:	91000210 	tstls	r0, r0, lsl r2
	...
    1a54:	000b5400 	andeq	r5, fp, r0, lsl #8
    1a58:	000b7a10 	andeq	r7, fp, r0, lsl sl
    1a5c:	91000210 	tstls	r0, r0, lsl r2
    1a60:	000b7a20 	andeq	r7, fp, r0, lsr #20
    1a64:	000c1a10 	andeq	r1, ip, r0, lsl sl
    1a68:	5a000110 	bpl	1eb0 <_Min_Stack_Size+0xeb0>
	...
    1a74:	00000002 	andeq	r0, r0, r2
	...
    1a80:	10000b70 	andne	r0, r0, r0, ror fp
    1a84:	10000b8a 	andne	r0, r0, sl, lsl #23
    1a88:	9f300002 	svcls	0x00300002
    1a8c:	10000b8a 	andne	r0, r0, sl, lsl #23
    1a90:	10000b94 	mulne	r0, r4, fp
    1a94:	94540001 	ldrbls	r0, [r4], #-1
    1a98:	c010000b 	andsgt	r0, r0, fp
    1a9c:	0110000b 	tsteq	r0, fp
    1aa0:	0bc05900 	bleq	ff017ea8 <__RAM_segment_used_end__+0xc6f17ea8>
    1aa4:	0be81000 	bleq	ffa05aac <__RAM_segment_used_end__+0xc7905aac>
    1aa8:	00011000 	andeq	r1, r1, r0
    1aac:	000be854 	andeq	lr, fp, r4, asr r8
    1ab0:	000bec10 	andeq	lr, fp, r0, lsl ip
    1ab4:	30000210 	andcc	r0, r0, r0, lsl r2
    1ab8:	000bec9f 	muleq	fp, pc, ip	; <UNPREDICTABLE>
    1abc:	000c1a10 	andeq	r1, ip, r0, lsl sl
    1ac0:	59000110 	stmdbpl	r0, {r4, r8}
	...
    1ad0:	10000b8a 	andne	r0, r0, sl, lsl #23
    1ad4:	10000b98 	mulne	r0, r8, fp
    1ad8:	ce530001 	cdpgt	0, 5, cr0, cr3, cr1, {0}
    1adc:	e810000b 	ldmda	r0, {r0, r1, r3}
    1ae0:	0110000b 	tsteq	r0, fp
    1ae4:	00005300 	andeq	r5, r0, r0, lsl #6
    1ae8:	00000000 	andeq	r0, r0, r0
    1aec:	0ac00000 	beq	ff001af4 <__RAM_segment_used_end__+0xc6f01af4>
    1af0:	0ac21000 	beq	ff085af8 <__RAM_segment_used_end__+0xc6f85af8>
    1af4:	00021000 	andeq	r1, r2, r0
    1af8:	0ac2007d 	beq	ff081cf4 <__RAM_segment_used_end__+0xc6f81cf4>
    1afc:	0ac41000 	beq	ff105b04 <__RAM_segment_used_end__+0xc7005b04>
    1b00:	00021000 	andeq	r1, r2, r0
    1b04:	0ac4147d 	beq	ff106d00 <__RAM_segment_used_end__+0xc7006d00>
    1b08:	0b521000 	bleq	1485b10 <__RAM_SIZE+0x1385b10>
    1b0c:	00031000 	andeq	r1, r3, r0
    1b10:	5200d87d 	andpl	sp, r0, #8192000	; 0x7d0000
    1b14:	5410000b 	ldrpl	r0, [r0], #-11
    1b18:	0210000b 	andseq	r0, r0, #11
    1b1c:	00147d00 	andseq	r7, r4, r0, lsl #26
	...
    1b28:	c0000000 	andgt	r0, r0, r0
    1b2c:	4f10000a 	svcmi	0x0010000a
    1b30:	0110000b 	tsteq	r0, fp
    1b34:	0b4f5000 	bleq	13d5b3c <__RAM_SIZE+0x12d5b3c>
    1b38:	0b541000 	bleq	1505b40 <__RAM_SIZE+0x1405b40>
    1b3c:	00041000 	andeq	r1, r4, r0
    1b40:	9f5001f3 	svcls	0x005001f3
	...
    1b50:	10000ac0 	andne	r0, r0, r0, asr #21
    1b54:	10000b4f 	andne	r0, r0, pc, asr #22
    1b58:	4f510001 	svcmi	0x00510001
    1b5c:	5410000b 	ldrpl	r0, [r0], #-11
    1b60:	0410000b 	ldreq	r0, [r0], #-11
    1b64:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
    1b68:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    1b74:	000ac000 	andeq	ip, sl, r0
    1b78:	000b4f10 	andeq	r4, fp, r0, lsl pc
    1b7c:	52000110 	andpl	r0, r0, #16, 2
    1b80:	10000b4f 	andne	r0, r0, pc, asr #22
    1b84:	10000b54 	andne	r0, r0, r4, asr fp
    1b88:	01f30004 	mvnseq	r0, r4
    1b8c:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    1b98:	0ac00000 	beq	ff001ba0 <__RAM_segment_used_end__+0xc6f01ba0>
    1b9c:	0b4f1000 	bleq	13c5ba4 <__RAM_SIZE+0x12c5ba4>
    1ba0:	00011000 	andeq	r1, r1, r0
    1ba4:	000b4f53 	andeq	r4, fp, r3, asr pc
    1ba8:	000b5410 	andeq	r5, fp, r0, lsl r4
    1bac:	f3000410 	vqshl.u8	d0, d0, d0
    1bb0:	009f5301 	addseq	r5, pc, r1, lsl #6
	...
    1bc4:	000ac000 	andeq	ip, sl, r0
    1bc8:	000ade10 	andeq	sp, sl, r0, lsl lr
    1bcc:	91000210 	tstls	r0, r0, lsl r2
    1bd0:	000ade00 	andeq	sp, sl, r0, lsl #28
    1bd4:	000af810 	andeq	pc, sl, r0, lsl r8	; <UNPREDICTABLE>
    1bd8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1bdc:	10000af8 	strdne	r0, [r0], -r8
    1be0:	10000b04 	andne	r0, r0, r4, lsl #22
    1be4:	045c0001 	ldrbeq	r0, [ip], #-1
    1be8:	3210000b 	andscc	r0, r0, #11
    1bec:	0110000b 	tsteq	r0, fp
    1bf0:	0b325400 	bleq	c96bf8 <__RAM_SIZE+0xb96bf8>
    1bf4:	0b341000 	bleq	d05bfc <__RAM_SIZE+0xc05bfc>
    1bf8:	00021000 	andeq	r1, r2, r0
    1bfc:	00000091 	muleq	r0, r1, r0
	...
    1c08:	0ac00000 	beq	ff001c10 <__RAM_segment_used_end__+0xc6f01c10>
    1c0c:	0ad01000 	beq	ff405c14 <__RAM_segment_used_end__+0xc7305c14>
    1c10:	00021000 	andeq	r1, r2, r0
    1c14:	0ad01491 	beq	ff406e60 <__RAM_segment_used_end__+0xc7306e60>
    1c18:	0b541000 	bleq	1505c20 <__RAM_SIZE+0x1405c20>
    1c1c:	00011000 	andeq	r1, r1, r0
    1c20:	00000056 	andeq	r0, r0, r6, asr r0
    1c24:	00000000 	andeq	r0, r0, r0
    1c28:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    1c34:	000aca00 	andeq	ip, sl, r0, lsl #20
    1c38:	000ade10 	andeq	sp, sl, r0, lsl lr
    1c3c:	30000210 	andcc	r0, r0, r0, lsl r2
    1c40:	000ade9f 	muleq	sl, pc, lr	; <UNPREDICTABLE>
    1c44:	000aea10 	andeq	lr, sl, r0, lsl sl
    1c48:	5e000110 	fltpls	f0, r0
    1c4c:	10000aea 	andne	r0, r0, sl, ror #21
    1c50:	10000b04 	andne	r0, r0, r4, lsl #22
    1c54:	04570001 	ldrbeq	r0, [r7], #-1
    1c58:	3210000b 	andscc	r0, r0, #11
    1c5c:	0110000b 	tsteq	r0, fp
    1c60:	0b325e00 	bleq	c99468 <__RAM_SIZE+0xb99468>
    1c64:	0b341000 	bleq	d05c6c <__RAM_SIZE+0xc05c6c>
    1c68:	00021000 	andeq	r1, r2, r0
    1c6c:	0b349f30 	bleq	d29934 <__RAM_SIZE+0xc29934>
    1c70:	0b541000 	bleq	1505c78 <__RAM_SIZE+0x1405c78>
    1c74:	00011000 	andeq	r1, r1, r0
    1c78:	00000057 	andeq	r0, r0, r7, asr r0
	...
    1c8c:	000ade00 	andeq	sp, sl, r0, lsl #28
    1c90:	000ae210 	andeq	lr, sl, r0, lsl r2
    1c94:	5c000110 	stfpls	f0, [r0], {16}
    1c98:	10000ae2 	andne	r0, r0, r2, ror #21
    1c9c:	10000ae6 	andne	r0, r0, r6, ror #21
    1ca0:	507c0003 	rsbspl	r0, ip, r3
    1ca4:	000ae69f 	muleq	sl, pc, r6	; <UNPREDICTABLE>
    1ca8:	000b0410 	andeq	r0, fp, r0, lsl r4
    1cac:	74001210 	strvc	r1, [r0], #-528	; 0xfffffdf0
    1cb0:	f7007400 			; <UNDEFINED> instruction: 0xf7007400
    1cb4:	f7007530 			; <UNDEFINED> instruction: 0xf7007530
    1cb8:	00f71b30 	rscseq	r1, r7, r0, lsr fp
    1cbc:	1c1e0075 	ldcne	0, cr0, [lr], {117}	; 0x75
    1cc0:	000b109f 	muleq	fp, pc, r0	; <UNPREDICTABLE>
    1cc4:	000b2010 	andeq	r2, fp, r0, lsl r0
    1cc8:	5c000110 	stfpls	f0, [r0], {16}
    1ccc:	10000b20 	andne	r0, r0, r0, lsr #22
    1cd0:	10000b2e 	andne	r0, r0, lr, lsr #22
    1cd4:	00740012 	rsbseq	r0, r4, r2, lsl r0
    1cd8:	30f70074 	rscscc	r0, r7, r4, ror r0
    1cdc:	30f70075 	rscscc	r0, r7, r5, ror r0
    1ce0:	7500f71b 	strvc	pc, [r0, #-1819]	; 0xfffff8e5
    1ce4:	9f1c1e00 	svcls	0x001c1e00
    1ce8:	10000b2e 	andne	r0, r0, lr, lsr #22
    1cec:	10000b32 	andne	r0, r0, r2, lsr fp
    1cf0:	005c0001 	subseq	r0, ip, r1
    1cf4:	00000000 	andeq	r0, r0, r0
    1cf8:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    1cfc:	8c100009 	ldchi	0, cr0, [r0], {9}
    1d00:	02100009 	andseq	r0, r0, #9
    1d04:	8c007d00 	stchi	13, cr7, [r0], {-0}
    1d08:	8e100009 	cdphi	0, 1, cr0, cr0, cr9, {0}
    1d0c:	02100009 	andseq	r0, r0, #9
    1d10:	8e1c7d00 	cdphi	13, 1, cr7, cr12, cr0, {0}
    1d14:	44100009 	ldrmi	r0, [r0], #-9
    1d18:	0210000a 	andseq	r0, r0, #10
    1d1c:	44307d00 	ldrtmi	r7, [r0], #-3328	; 0xfffff300
    1d20:	4810000a 	ldmdami	r0, {r1, r3}
    1d24:	0210000a 	andseq	r0, r0, #10
    1d28:	481c7d00 	ldmdami	ip, {r8, sl, fp, ip, sp, lr}
    1d2c:	c010000a 	andsgt	r0, r0, sl
    1d30:	0210000a 	andseq	r0, r0, #10
    1d34:	00307d00 	eorseq	r7, r0, r0, lsl #26
	...
    1d44:	00098800 	andeq	r8, r9, r0, lsl #16
    1d48:	000a4110 	andeq	r4, sl, r0, lsl r1
    1d4c:	50000110 	andpl	r0, r0, r0, lsl r1
    1d50:	10000a41 	andne	r0, r0, r1, asr #20
    1d54:	10000a48 	andne	r0, r0, r8, asr #20
    1d58:	01f30004 	mvnseq	r0, r4
    1d5c:	0a489f50 	beq	1229aa4 <__RAM_SIZE+0x1129aa4>
    1d60:	0ac01000 	beq	ff005d68 <__RAM_segment_used_end__+0xc6f05d68>
    1d64:	00011000 	andeq	r1, r1, r0
    1d68:	00000050 	andeq	r0, r0, r0, asr r0
	...
    1d74:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    1d78:	41100009 	tstmi	r0, r9
    1d7c:	0110000a 	tsteq	r0, sl
    1d80:	0a415100 	beq	1056188 <__RAM_SIZE+0xf56188>
    1d84:	0a481000 	beq	1205d8c <__RAM_SIZE+0x1105d8c>
    1d88:	00041000 	andeq	r1, r4, r0
    1d8c:	9f5101f3 	svcls	0x005101f3
    1d90:	10000a48 	andne	r0, r0, r8, asr #20
    1d94:	10000ac0 	andne	r0, r0, r0, asr #21
    1d98:	00510001 	subseq	r0, r1, r1
	...
    1da8:	00098800 	andeq	r8, r9, r0, lsl #16
    1dac:	000a4110 	andeq	r4, sl, r0, lsl r1
    1db0:	52000110 	andpl	r0, r0, #16, 2
    1db4:	10000a41 	andne	r0, r0, r1, asr #20
    1db8:	10000a48 	andne	r0, r0, r8, asr #20
    1dbc:	01f30004 	mvnseq	r0, r4
    1dc0:	0a489f52 	beq	1229b10 <__RAM_SIZE+0x1129b10>
    1dc4:	0ac01000 	beq	ff005dcc <__RAM_segment_used_end__+0xc6f05dcc>
    1dc8:	00011000 	andeq	r1, r1, r0
    1dcc:	00000052 	andeq	r0, r0, r2, asr r0
	...
    1dd8:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    1ddc:	41100009 	tstmi	r0, r9
    1de0:	0110000a 	tsteq	r0, sl
    1de4:	0a415300 	beq	10569ec <__RAM_SIZE+0xf569ec>
    1de8:	0a481000 	beq	1205df0 <__RAM_SIZE+0x1105df0>
    1dec:	00041000 	andeq	r1, r4, r0
    1df0:	9f5301f3 	svcls	0x005301f3
    1df4:	10000a48 	andne	r0, r0, r8, asr #20
    1df8:	10000ac0 	andne	r0, r0, r0, asr #21
    1dfc:	00530001 	subseq	r0, r3, r1
	...
    1e08:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    1e0c:	48100009 	ldmdami	r0, {r0, r3}
    1e10:	0210000a 	andseq	r0, r0, #10
    1e14:	48009100 	stmdami	r0, {r8, ip, pc}
    1e18:	c010000a 	andsgt	r0, r0, sl
    1e1c:	0210000a 	andseq	r0, r0, #10
    1e20:	00009100 	andeq	r9, r0, r0, lsl #2
	...
    1e2c:	01010000 	mrseq	r0, (UNDEF: 1)
    1e30:	01010000 	mrseq	r0, (UNDEF: 1)
    1e34:	01010000 	mrseq	r0, (UNDEF: 1)
    1e38:	01010000 	mrseq	r0, (UNDEF: 1)
    1e3c:	01010000 	mrseq	r0, (UNDEF: 1)
	...
    1e48:	00000101 	andeq	r0, r0, r1, lsl #2
    1e4c:	00000101 	andeq	r0, r0, r1, lsl #2
    1e50:	00000101 	andeq	r0, r0, r1, lsl #2
    1e54:	00000101 	andeq	r0, r0, r1, lsl #2
    1e58:	00000101 	andeq	r0, r0, r1, lsl #2
    1e5c:	00098800 	andeq	r8, r9, r0, lsl #16
    1e60:	0009c010 	andeq	ip, r9, r0, lsl r0
    1e64:	91000210 	tstls	r0, r0, lsl r2
    1e68:	0009c004 	andeq	ip, r9, r4
    1e6c:	0009c010 	andeq	ip, r9, r0, lsl r0
    1e70:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1e74:	100009c0 	andne	r0, r0, r0, asr #19
    1e78:	100009ca 	andne	r0, r0, sl, asr #19
    1e7c:	01740003 	cmneq	r4, r3
    1e80:	0009ca9f 	muleq	r9, pc, sl	; <UNPREDICTABLE>
    1e84:	0009e010 	andeq	lr, r9, r0, lsl r0
    1e88:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1e8c:	100009e0 	andne	r0, r0, r0, ror #19
    1e90:	100009ea 	andne	r0, r0, sl, ror #19
    1e94:	01740003 	cmneq	r4, r3
    1e98:	0009ea9f 	muleq	r9, pc, sl	; <UNPREDICTABLE>
    1e9c:	000a1810 	andeq	r1, sl, r0, lsl r8
    1ea0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1ea4:	10000a18 	andne	r0, r0, r8, lsl sl
    1ea8:	10000a22 	andne	r0, r0, r2, lsr #20
    1eac:	01740003 	cmneq	r4, r3
    1eb0:	000a229f 	muleq	sl, pc, r2	; <UNPREDICTABLE>
    1eb4:	000a2c10 	andeq	r2, sl, r0, lsl ip
    1eb8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1ebc:	10000a2c 	andne	r0, r0, ip, lsr #20
    1ec0:	10000a36 	andne	r0, r0, r6, lsr sl
    1ec4:	01740003 	cmneq	r4, r3
    1ec8:	000a369f 	muleq	sl, pc, r6	; <UNPREDICTABLE>
    1ecc:	000a4810 	andeq	r4, sl, r0, lsl r8
    1ed0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    1ed4:	10000a48 	andne	r0, r0, r8, asr #20
    1ed8:	10000a4c 	andne	r0, r0, ip, asr #20
    1edc:	7f740003 	svcvc	0x00740003
    1ee0:	000a4c9f 	muleq	sl, pc, ip	; <UNPREDICTABLE>
    1ee4:	000a5a10 	andeq	r5, sl, r0, lsl sl
    1ee8:	5c000110 	stfpls	f0, [r0], {16}
    1eec:	10000a5a 	andne	r0, r0, sl, asr sl
    1ef0:	10000a5c 	andne	r0, r0, ip, asr sl
    1ef4:	5c540001 	mrrcpl	0, 0, r0, r4, cr1
    1ef8:	6010000a 	andsvs	r0, r0, sl
    1efc:	0110000a 	tsteq	r0, sl
    1f00:	0a605c00 	beq	1818f08 <__RAM_SIZE+0x1718f08>
    1f04:	0a6a1000 	beq	1a85f0c <__RAM_SIZE+0x1985f0c>
    1f08:	00011000 	andeq	r1, r1, r0
    1f0c:	000a6a54 	andeq	r6, sl, r4, asr sl
    1f10:	000a7410 	andeq	r7, sl, r0, lsl r4
    1f14:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f18:	0a749f01 	beq	1d29b24 <__RAM_SIZE+0x1c29b24>
    1f1c:	0a801000 	beq	fe005f24 <__RAM_segment_used_end__+0xc5f05f24>
    1f20:	00011000 	andeq	r1, r1, r0
    1f24:	000a8054 	andeq	r8, sl, r4, asr r0
    1f28:	000a8a10 	andeq	r8, sl, r0, lsl sl
    1f2c:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f30:	0a8a9f01 	beq	fe2a9b3c <__RAM_segment_used_end__+0xc61a9b3c>
    1f34:	0a901000 	beq	fe405f3c <__RAM_segment_used_end__+0xc6305f3c>
    1f38:	00011000 	andeq	r1, r1, r0
    1f3c:	000a9054 	andeq	r9, sl, r4, asr r0
    1f40:	000a9a10 	andeq	r9, sl, r0, lsl sl
    1f44:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f48:	0a9a9f01 	beq	fe6a9b54 <__RAM_segment_used_end__+0xc65a9b54>
    1f4c:	0aa21000 	beq	fe885f54 <__RAM_segment_used_end__+0xc6785f54>
    1f50:	00011000 	andeq	r1, r1, r0
    1f54:	000aa254 	andeq	sl, sl, r4, asr r2
    1f58:	000aac10 	andeq	sl, sl, r0, lsl ip
    1f5c:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f60:	0aac9f01 	beq	feb29b6c <__RAM_segment_used_end__+0xc6a29b6c>
    1f64:	0ab41000 	beq	fed05f6c <__RAM_segment_used_end__+0xc6c05f6c>
    1f68:	00011000 	andeq	r1, r1, r0
    1f6c:	000ab454 	andeq	fp, sl, r4, asr r4
    1f70:	000abe10 	andeq	fp, sl, r0, lsl lr
    1f74:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    1f78:	0abe9f01 	beq	fefa9b84 <__RAM_segment_used_end__+0xc6ea9b84>
    1f7c:	0ac01000 	beq	ff005f84 <__RAM_segment_used_end__+0xc6f05f84>
    1f80:	00011000 	andeq	r1, r1, r0
    1f84:	00000054 	andeq	r0, r0, r4, asr r0
	...
    1f90:	00098800 	andeq	r8, r9, r0, lsl #16
    1f94:	000a4810 	andeq	r4, sl, r0, lsl r8
    1f98:	91000210 	tstls	r0, r0, lsl r2
    1f9c:	000a4808 	andeq	r4, sl, r8, lsl #16
    1fa0:	000ac010 	andeq	ip, sl, r0, lsl r0
    1fa4:	91000210 	tstls	r0, r0, lsl r2
    1fa8:	00000008 	andeq	r0, r0, r8
	...
    1fb4:	00098800 	andeq	r8, r9, r0, lsl #16
    1fb8:	000a4810 	andeq	r4, sl, r0, lsl r8
    1fbc:	91000210 	tstls	r0, r0, lsl r2
    1fc0:	000a480c 	andeq	r4, sl, ip, lsl #16
    1fc4:	000ac010 	andeq	ip, sl, r0, lsl r0
    1fc8:	91000210 	tstls	r0, r0, lsl r2
    1fcc:	0000000c 	andeq	r0, r0, ip
	...
    1fd8:	00098800 	andeq	r8, r9, r0, lsl #16
    1fdc:	000a4810 	andeq	r4, sl, r0, lsl r8
    1fe0:	91000210 	tstls	r0, r0, lsl r2
    1fe4:	000a4810 	andeq	r4, sl, r0, lsl r8
    1fe8:	000ac010 	andeq	ip, sl, r0, lsl r0
    1fec:	91000210 	tstls	r0, r0, lsl r2
    1ff0:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    1ffc:	00098800 	andeq	r8, r9, r0, lsl #16
    2000:	0009be10 	andeq	fp, r9, r0, lsl lr
    2004:	91000210 	tstls	r0, r0, lsl r2
    2008:	0009be14 	andeq	fp, r9, r4, lsl lr
    200c:	000ac010 	andeq	ip, sl, r0, lsl r0
    2010:	57000110 	smladpl	r0, r0, r1, r0
	...
    2020:	10000988 	andne	r0, r0, r8, lsl #19
    2024:	10000a48 	andne	r0, r0, r8, asr #20
    2028:	18910002 	ldmne	r1, {r1}
    202c:	10000a48 	andne	r0, r0, r8, asr #20
    2030:	10000ac0 	andne	r0, r0, r0, asr #21
    2034:	18910002 	ldmne	r1, {r1}
	...
    2040:	1000090a 	andne	r0, r0, sl, lsl #18
    2044:	1000090e 	andne	r0, r0, lr, lsl #18
    2048:	007d0002 	rsbseq	r0, sp, r2
    204c:	1000090e 	andne	r0, r0, lr, lsl #18
    2050:	10000910 	andne	r0, r0, r0, lsl r9
    2054:	247d0002 	ldrbtcs	r0, [sp], #-2
    2058:	10000910 	andne	r0, r0, r0, lsl r9
    205c:	1000096e 	andne	r0, r0, lr, ror #18
    2060:	307d0002 	rsbscc	r0, sp, r2
    2064:	1000096e 	andne	r0, r0, lr, ror #18
    2068:	10000972 	andne	r0, r0, r2, ror r9
    206c:	247d0002 	ldrbtcs	r0, [sp], #-2
    2070:	10000972 	andne	r0, r0, r2, ror r9
    2074:	10000988 	andne	r0, r0, r8, lsl #19
    2078:	307d0002 	rsbscc	r0, sp, r2
	...
    2088:	1000090a 	andne	r0, r0, sl, lsl #18
    208c:	1000092e 	andne	r0, r0, lr, lsr #18
    2090:	2e500001 	cdpcs	0, 5, cr0, cr0, cr1, {0}
    2094:	88100009 	ldmdahi	r0, {r0, r3}
    2098:	01100009 	tsteq	r0, r9
    209c:	00005500 	andeq	r5, r0, r0, lsl #10
	...
    20a8:	090a0000 	stmdbeq	sl, {}	; <UNPREDICTABLE>
    20ac:	092e1000 	stmdbeq	lr!, {ip}
    20b0:	00011000 	andeq	r1, r1, r0
    20b4:	00092e51 	andeq	r2, r9, r1, asr lr
    20b8:	00098810 	andeq	r8, r9, r0, lsl r8
    20bc:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    20d4:	1000090a 	andne	r0, r0, sl, lsl #18
    20d8:	10000936 	andne	r0, r0, r6, lsr r9
    20dc:	36520001 	ldrbcc	r0, [r2], -r1
    20e0:	46100009 	ldrmi	r0, [r0], -r9
    20e4:	01100009 	tsteq	r0, r9
    20e8:	09465b00 	stmdbeq	r6, {r8, r9, fp, ip, lr}^
    20ec:	09521000 	ldmdbeq	r2, {ip}^
    20f0:	00011000 	andeq	r1, r1, r0
    20f4:	00095252 	andeq	r5, r9, r2, asr r2
    20f8:	00095e10 	andeq	r5, r9, r0, lsl lr
    20fc:	58000110 	stmdapl	r0, {r4, r8}
    2100:	1000095e 	andne	r0, r0, lr, asr r9
    2104:	1000097c 	andne	r0, r0, ip, ror r9
    2108:	7c520001 	mrrcvc	0, 0, r0, r2, cr1
    210c:	88100009 	ldmdahi	r0, {r0, r3}
    2110:	01100009 	tsteq	r0, r9
    2114:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    2120:	090a0000 	stmdbeq	sl, {}	; <UNPREDICTABLE>
    2124:	09241000 	stmdbeq	r4!, {ip}
    2128:	00011000 	andeq	r1, r1, r0
    212c:	00092453 	andeq	r2, r9, r3, asr r4
    2130:	00098810 	andeq	r8, r9, r0, lsl r8
    2134:	57000110 	smladpl	r0, r0, r1, r0
	...
    2144:	1000090a 	andne	r0, r0, sl, lsl #18
    2148:	10000972 	andne	r0, r0, r2, ror r9
    214c:	00910002 	addseq	r0, r1, r2
    2150:	10000972 	andne	r0, r0, r2, ror r9
    2154:	10000988 	andne	r0, r0, r8, lsl #19
    2158:	00910002 	addseq	r0, r1, r2
	...
    2168:	1000090a 	andne	r0, r0, sl, lsl #18
    216c:	1000094c 	andne	r0, r0, ip, asr #18
    2170:	04910002 	ldreq	r0, [r1], #2
    2174:	1000094c 	andne	r0, r0, ip, asr #18
    2178:	1000096a 	andne	r0, r0, sl, ror #18
    217c:	00540001 	subseq	r0, r4, r1
	...
    2188:	0a000000 	beq	2190 <_Min_Stack_Size+0x1190>
    218c:	72100009 	andsvc	r0, r0, #9
    2190:	02100009 	andseq	r0, r0, #9
    2194:	72089100 	andvc	r9, r8, #0, 2
    2198:	88100009 	ldmdahi	r0, {r0, r3}
    219c:	02100009 	andseq	r0, r0, #9
    21a0:	00089100 	andeq	r9, r8, r0, lsl #2
	...
    21ac:	0a000000 	beq	21b4 <_Min_Stack_Size+0x11b4>
    21b0:	72100009 	andsvc	r0, r0, #9
    21b4:	02100009 	andseq	r0, r0, #9
    21b8:	720c9100 	andvc	r9, ip, #0, 2
    21bc:	88100009 	ldmdahi	r0, {r0, r3}
    21c0:	02100009 	andseq	r0, r0, #9
    21c4:	000c9100 	andeq	r9, ip, r0, lsl #2
    21c8:	00000000 	andeq	r0, r0, r0
    21cc:	01000000 	mrseq	r0, (UNDEF: 0)
    21d0:	00000000 	andeq	r0, r0, r0
    21d4:	00092200 	andeq	r2, r9, r0, lsl #4
    21d8:	00092e10 	andeq	r2, r9, r0, lsl lr
    21dc:	52000110 	andpl	r0, r0, #16, 2
    21e0:	1000092e 	andne	r0, r0, lr, lsr #18
    21e4:	1000094c 	andne	r0, r0, ip, asr #18
    21e8:	54910002 	ldrpl	r0, [r1], #2
    21ec:	1000094c 	andne	r0, r0, ip, asr #18
    21f0:	10000988 	andne	r0, r0, r8, lsl #19
    21f4:	01f30004 	mvnseq	r0, r4
    21f8:	00009f52 	andeq	r9, r0, r2, asr pc
	...
    2204:	1000092e 	andne	r0, r0, lr, lsr #18
    2208:	1000094c 	andne	r0, r0, ip, asr #18
    220c:	00580001 	subseq	r0, r8, r1
	...
    2218:	e6000000 	str	r0, [r0], -r0
    221c:	ea100008 	b	402244 <__RAM_SIZE+0x302244>
    2220:	01100008 	tsteq	r0, r8
    2224:	08ea5000 	stmiaeq	sl!, {ip, lr}^
    2228:	090a1000 	stmdbeq	sl, {ip}
    222c:	00011000 	andeq	r1, r1, r0
    2230:	00000051 	andeq	r0, r0, r1, asr r0
    2234:	00000000 	andeq	r0, r0, r0
    2238:	00000100 	andeq	r0, r0, r0, lsl #2
    223c:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
    2240:	ec100008 	ldc	0, cr0, [r0], {8}
    2244:	02100008 	andseq	r0, r0, #8
    2248:	ec9f3000 	ldc	0, cr3, [pc], {0}
    224c:	f0100008 			; <UNDEFINED> instruction: 0xf0100008
    2250:	01100008 	tsteq	r0, r8
    2254:	08fc5000 	ldmeq	ip!, {ip, lr}^
    2258:	090a1000 	stmdbeq	sl, {ip}
    225c:	00011000 	andeq	r1, r1, r0
    2260:	00000050 	andeq	r0, r0, r0, asr r0
	...
    226c:	00090000 	andeq	r0, r9, r0
    2270:	00090210 	andeq	r0, r9, r0, lsl r2
    2274:	53000110 	movwpl	r0, #272	; 0x110
    2278:	10000902 	andne	r0, r0, r2, lsl #18
    227c:	10000904 	andne	r0, r0, r4, lsl #18
    2280:	30730003 	rsbscc	r0, r3, r3
    2284:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2294:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    22a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    22a4:	00000008 	andeq	r0, r0, r8
    22a8:	00000000 	andeq	r0, r0, r0
    22ac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    22c4:	01000000 	mrseq	r0, (UNDEF: 0)
    22c8:	00005000 	andeq	r5, r0, r0
    22cc:	00000000 	andeq	r0, r0, r0
    22d0:	00040000 	andeq	r0, r4, r0
    22d4:	9f5001f3 	svcls	0x005001f3
	...
    22e0:	00500001 	subseq	r0, r0, r1
	...
    22f8:	51000100 	mrspl	r0, (UNDEF: 16)
	...
    2304:	01f30004 	mvnseq	r0, r4
    2308:	00009f51 	andeq	r9, r0, r1, asr pc
    230c:	00000000 	andeq	r0, r0, r0
    2310:	00010000 	andeq	r0, r1, r0
    2314:	00000051 	andeq	r0, r0, r1, asr r0
	...
    2328:	01000000 	mrseq	r0, (UNDEF: 0)
    232c:	00005200 	andeq	r5, r0, r0, lsl #4
    2330:	00000000 	andeq	r0, r0, r0
    2334:	00040000 	andeq	r0, r4, r0
    2338:	9f5201f3 	svcls	0x005201f3
	...
    2344:	00520001 	subseq	r0, r2, r1
	...
    235c:	53000100 	movwpl	r0, #256	; 0x100
	...
    2368:	01f30004 	mvnseq	r0, r4
    236c:	00009f53 	andeq	r9, r0, r3, asr pc
    2370:	00000000 	andeq	r0, r0, r0
    2374:	00010000 	andeq	r0, r1, r0
    2378:	00000053 	andeq	r0, r0, r3, asr r0
    237c:	00000000 	andeq	r0, r0, r0
    2380:	001a2800 	andseq	r2, sl, r0, lsl #16
    2384:	001a2e10 	andseq	r2, sl, r0, lsl lr
    2388:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    238c:	001a2e00 	andseq	r2, sl, r0, lsl #28
    2390:	001a3410 	andseq	r3, sl, r0, lsl r4
    2394:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2398:	00000008 	andeq	r0, r0, r8
	...
    23a4:	001a2800 	andseq	r2, sl, r0, lsl #16
    23a8:	001a3110 	andseq	r3, sl, r0, lsl r1
    23ac:	50000110 	andpl	r0, r0, r0, lsl r1
    23b0:	10001a31 	andne	r1, r0, r1, lsr sl
    23b4:	10001a34 	andne	r1, r0, r4, lsr sl
    23b8:	01f30004 	mvnseq	r0, r4
    23bc:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    23c8:	1a280000 	bne	a023d0 <__RAM_SIZE+0x9023d0>
    23cc:	1a311000 	bne	c463d4 <__RAM_SIZE+0xb463d4>
    23d0:	00011000 	andeq	r1, r1, r0
    23d4:	001a3151 	andseq	r3, sl, r1, asr r1
    23d8:	001a3410 	andseq	r3, sl, r0, lsl r4
    23dc:	f3000410 	vqshl.u8	d0, d0, d0
    23e0:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    23ec:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    23f0:	3110001a 	tstcc	r0, sl, lsl r0
    23f4:	0110001a 	tsteq	r0, sl, lsl r0
    23f8:	1a315200 	bne	c56c00 <__RAM_SIZE+0xb56c00>
    23fc:	1a341000 	bne	d06404 <__RAM_SIZE+0xc06404>
    2400:	00041000 	andeq	r1, r4, r0
    2404:	9f5201f3 	svcls	0x005201f3
	...
    2414:	10001a28 	andne	r1, r0, r8, lsr #20
    2418:	10001a31 	andne	r1, r0, r1, lsr sl
    241c:	31530001 	cmpcc	r3, r1
    2420:	3410001a 	ldrcc	r0, [r0], #-26	; 0xffffffe6
    2424:	0410001a 	ldreq	r0, [r0], #-26	; 0xffffffe6
    2428:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    242c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    243c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    2448:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    244c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    2460:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    246c:	00560001 	subseq	r0, r6, r1
	...
    2480:	01000000 	mrseq	r0, (UNDEF: 0)
    2484:	00005100 	andeq	r5, r0, r0, lsl #2
    2488:	00000000 	andeq	r0, r0, r0
    248c:	00010000 	andeq	r0, r1, r0
    2490:	00000055 	andeq	r0, r0, r5, asr r0
    2494:	00000000 	andeq	r0, r0, r0
    2498:	00000100 	andeq	r0, r0, r0, lsl #2
    249c:	00000001 	andeq	r0, r0, r1
    24a0:	00000000 	andeq	r0, r0, r0
    24a4:	02000000 	andeq	r0, r0, #0
    24a8:	009f3000 	addseq	r3, pc, r0
    24ac:	00000000 	andeq	r0, r0, r0
    24b0:	01000000 	mrseq	r0, (UNDEF: 0)
    24b4:	00005000 	andeq	r5, r0, r0
    24b8:	00000000 	andeq	r0, r0, r0
    24bc:	00010000 	andeq	r0, r1, r0
    24c0:	00000050 	andeq	r0, r0, r0, asr r0
    24c4:	00000000 	andeq	r0, r0, r0
    24c8:	00000200 	andeq	r0, r0, r0, lsl #4
	...
    24d4:	30000200 	andcc	r0, r0, r0, lsl #4
    24d8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    24dc:	00000000 	andeq	r0, r0, r0
    24e0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    24f4:	007d0002 	rsbseq	r0, sp, r2
	...
    2500:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    2518:	00500001 	subseq	r0, r0, r1
    251c:	00000000 	andeq	r0, r0, r0
    2520:	04000000 	streq	r0, [r0], #-0
    2524:	5001f300 	andpl	pc, r1, r0, lsl #6
    2528:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    252c:	00000000 	andeq	r0, r0, r0
    2530:	001a7400 	andseq	r7, sl, r0, lsl #8
    2534:	001a7610 	andseq	r7, sl, r0, lsl r6
    2538:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    253c:	001a7600 	andseq	r7, sl, r0, lsl #12
    2540:	001a9210 	andseq	r9, sl, r0, lsl r2
    2544:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    2548:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    2554:	001a7400 	andseq	r7, sl, r0, lsl #8
    2558:	001a7c10 	andseq	r7, sl, r0, lsl ip
    255c:	50000110 	andpl	r0, r0, r0, lsl r1
    2560:	10001a7c 	andne	r1, r0, ip, ror sl
    2564:	10001a92 	mulne	r0, r2, sl
    2568:	00550001 	subseq	r0, r5, r1
    256c:	00000000 	andeq	r0, r0, r0
    2570:	01000000 	mrseq	r0, (UNDEF: 0)
    2574:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    2578:	7c10001a 	ldcvc	0, cr0, [r0], {26}
    257c:	0210001a 	andseq	r0, r0, #26
    2580:	7c9f3000 	ldcvc	0, cr3, [pc], {0}
    2584:	9210001a 	andsls	r0, r0, #26
    2588:	0110001a 	tsteq	r0, sl, lsl r0
    258c:	00005400 	andeq	r5, r0, r0, lsl #8
    2590:	00000000 	andeq	r0, r0, r0
    2594:	00010000 	andeq	r0, r1, r0
    2598:	10001a60 	andne	r1, r0, r0, ror #20
    259c:	10001a74 	andne	r1, r0, r4, ror sl
    25a0:	00500001 	subseq	r0, r0, r1
    25a4:	00000000 	andeq	r0, r0, r0
    25a8:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
    25ac:	ba10001a 	blt	40261c <__RAM_SIZE+0x30261c>
    25b0:	0210001a 	andseq	r0, r0, #26
    25b4:	ba007d00 	blt	219bc <_Min_Stack_Size+0x209bc>
    25b8:	0e10001a 	mrceq	0, 0, r0, cr0, cr10, {0}
    25bc:	0210001b 	andseq	r0, r0, #27
    25c0:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    25d4:	001ab800 	andseq	fp, sl, r0, lsl #16
    25d8:	001aca10 	andseq	ip, sl, r0, lsl sl
    25dc:	50000110 	andpl	r0, r0, r0, lsl r1
    25e0:	10001aca 	andne	r1, r0, sl, asr #21
    25e4:	10001ae5 	andne	r1, r0, r5, ror #21
    25e8:	e5530001 	ldrb	r0, [r3, #-1]
    25ec:	ee10001a 	mrc	0, 0, r0, cr0, cr10, {0}
    25f0:	0410001a 	ldreq	r0, [r0], #-26	; 0xffffffe6
    25f4:	5001f300 	andpl	pc, r1, r0, lsl #6
    25f8:	001aee9f 	mulseq	sl, pc, lr	; <UNPREDICTABLE>
    25fc:	001b0410 	andseq	r0, fp, r0, lsl r4
    2600:	53000110 	movwpl	r0, #272	; 0x110
    2604:	10001b04 	andne	r1, r0, r4, lsl #22
    2608:	10001b0e 	andne	r1, r0, lr, lsl #22
    260c:	04710003 	ldrbteq	r0, [r1], #-3
    2610:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    2614:	00000000 	andeq	r0, r0, r0
    2618:	c2000100 	andgt	r0, r0, #0, 2
    261c:	0e10001a 	mrceq	0, 0, r0, cr0, cr10, {0}
    2620:	0110001b 	tsteq	r0, fp, lsl r0
    2624:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    2634:	10001ac8 	andne	r1, r0, r8, asr #21
    2638:	10001ad6 	ldrdne	r1, [r0], -r6
    263c:	ee520001 	cdp	0, 5, cr0, cr2, cr1, {0}
    2640:	f410001a 			; <UNDEFINED> instruction: 0xf410001a
    2644:	0110001a 	tsteq	r0, sl, lsl r0
    2648:	1afa5200 	bne	ffe96e50 <__RAM_segment_used_end__+0xc7d96e50>
    264c:	1b0e1000 	blne	386654 <__RAM_SIZE+0x286654>
    2650:	00011000 	andeq	r1, r1, r0
    2654:	00000052 	andeq	r0, r0, r2, asr r0
	...
    2660:	ca000000 	bgt	2668 <_Min_Stack_Size+0x1668>
    2664:	e510001a 	ldr	r0, [r0, #-26]	; 0xffffffe6
    2668:	0110001a 	tsteq	r0, sl, lsl r0
    266c:	1aee5000 	bne	ffb96674 <__RAM_segment_used_end__+0xc7a96674>
    2670:	1afc1000 	bne	fff06678 <__RAM_segment_used_end__+0xc7e06678>
    2674:	00011000 	andeq	r1, r1, r0
    2678:	001afc50 	andseq	pc, sl, r0, asr ip	; <UNPREDICTABLE>
    267c:	001b0010 	andseq	r0, fp, r0, lsl r0
    2680:	72000210 	andvc	r0, r0, #16, 4
    2684:	00000020 	andeq	r0, r0, r0, lsr #32
    2688:	00000000 	andeq	r0, r0, r0
    268c:	00000300 	andeq	r0, r0, r0, lsl #6
    2690:	01010000 	mrseq	r0, (UNDEF: 1)
    2694:	00000000 	andeq	r0, r0, r0
    2698:	c2000000 	andgt	r0, r0, #0
    269c:	c410001a 	ldrgt	r0, [r0], #-26	; 0xffffffe6
    26a0:	0110001a 	tsteq	r0, sl, lsl r0
    26a4:	1ac45000 	bne	ff1166ac <__RAM_segment_used_end__+0xc70166ac>
    26a8:	1ace1000 	bne	ff3866b0 <__RAM_segment_used_end__+0xc72866b0>
    26ac:	00011000 	andeq	r1, r1, r0
    26b0:	001ace51 	andseq	ip, sl, r1, asr lr
    26b4:	001adc10 	andseq	sp, sl, r0, lsl ip
    26b8:	73000310 	movwvc	r0, #784	; 0x310
    26bc:	1adc9f7c 	bne	ff72a4b4 <__RAM_segment_used_end__+0xc762a4b4>
    26c0:	1ae51000 	bne	ff9466c8 <__RAM_segment_used_end__+0xc78466c8>
    26c4:	00011000 	andeq	r1, r1, r0
    26c8:	001ae553 	andseq	lr, sl, r3, asr r5
    26cc:	001aea10 	andseq	lr, sl, r0, lsl sl
    26d0:	f3000410 	vqshl.u8	d0, d0, d0
    26d4:	ee9f5001 	cdp	0, 9, cr5, cr15, cr1, {0}
    26d8:	fa10001a 	blx	402748 <__RAM_SIZE+0x302748>
    26dc:	0310001a 	tsteq	r0, #26
    26e0:	9f7c7300 	svcls	0x007c7300
    26e4:	10001afa 	strdne	r1, [r0], -sl
    26e8:	10001b0e 	andne	r1, r0, lr, lsl #22
    26ec:	00510001 	subseq	r0, r1, r1
	...
    26f8:	001adc00 	andseq	sp, sl, r0, lsl #24
    26fc:	001ae510 	andseq	lr, sl, r0, lsl r5
    2700:	51000110 	tstpl	r0, r0, lsl r1
	...
    270c:	00000001 	andeq	r0, r0, r1
    2710:	00000000 	andeq	r0, r0, r0
    2714:	1ac40000 	bne	ff10271c <__RAM_segment_used_end__+0xc700271c>
    2718:	1ace1000 	bne	ff386720 <__RAM_segment_used_end__+0xc7286720>
    271c:	00011000 	andeq	r1, r1, r0
    2720:	001ace51 	andseq	ip, sl, r1, asr lr
    2724:	001ae510 	andseq	lr, sl, r0, lsl r5
    2728:	73000310 	movwvc	r0, #784	; 0x310
    272c:	1ae59f7c 	bne	ff96a524 <__RAM_segment_used_end__+0xc786a524>
    2730:	1aee1000 	bne	ffb86738 <__RAM_segment_used_end__+0xc7a86738>
    2734:	00061000 	andeq	r1, r6, r0
    2738:	345001f3 	ldrbcc	r0, [r0], #-499	; 0xfffffe0d
    273c:	1aee9f1c 	bne	ffbaa3b4 <__RAM_segment_used_end__+0xc7aaa3b4>
    2740:	1afa1000 	bne	ffe86748 <__RAM_segment_used_end__+0xc7d86748>
    2744:	00031000 	andeq	r1, r3, r0
    2748:	fa9f7c73 	blx	fe7e191c <__RAM_segment_used_end__+0xc66e191c>
    274c:	0e10001a 	mrceq	0, 0, r0, cr0, cr10, {0}
    2750:	0110001b 	tsteq	r0, fp, lsl r0
    2754:	00005100 	andeq	r5, r0, r0, lsl #2
    2758:	00000000 	andeq	r0, r0, r0
    275c:	00010000 	andeq	r0, r1, r0
    2760:	00000000 	andeq	r0, r0, r0
    2764:	10001ad2 	ldrdne	r1, [r0], -r2
    2768:	10001ad6 	ldrdne	r1, [r0], -r6
    276c:	ee510001 	cdp	0, 5, cr0, cr1, cr1, {0}
    2770:	f010001a 			; <UNDEFINED> instruction: 0xf010001a
    2774:	0110001a 	tsteq	r0, sl, lsl r0
    2778:	1af05100 	bne	ffc16b80 <__RAM_segment_used_end__+0xc7b16b80>
    277c:	1af41000 	bne	ffd06784 <__RAM_segment_used_end__+0xc7c06784>
    2780:	00021000 	andeq	r1, r2, r0
    2784:	00002472 	andeq	r2, r0, r2, ror r4
	...
    2790:	10001af0 	strdne	r1, [r0], -r0
    2794:	10001afa 	strdne	r1, [r0], -sl
    2798:	00510001 	subseq	r0, r1, r1
	...
    27a4:	001af400 	andseq	pc, sl, r0, lsl #8
    27a8:	001afa10 	andseq	pc, sl, r0, lsl sl	; <UNPREDICTABLE>
    27ac:	52000110 	andpl	r0, r0, #16, 2
	...
    27b8:	1ac00001 	bne	ff0027c4 <__RAM_segment_used_end__+0xc6f027c4>
    27bc:	1b0e1000 	blne	3867c4 <__RAM_SIZE+0x2867c4>
    27c0:	00011000 	andeq	r1, r1, r0
    27c4:	00000054 	andeq	r0, r0, r4, asr r0
    27c8:	00000000 	andeq	r0, r0, r0
    27cc:	c0010000 	andgt	r0, r1, r0
    27d0:	c010001a 	andsgt	r0, r0, sl, lsl r0
    27d4:	0110001a 	tsteq	r0, sl, lsl r0
    27d8:	00005400 	andeq	r5, r0, r0, lsl #8
    27dc:	00000000 	andeq	r0, r0, r0
    27e0:	00010000 	andeq	r0, r1, r0
    27e4:	10001ae6 	andne	r1, r0, r6, ror #21
    27e8:	10001aea 	andne	r1, r0, sl, ror #21
    27ec:	00540001 	subseq	r0, r4, r1
    27f0:	00000000 	andeq	r0, r0, r0
    27f4:	01000000 	mrseq	r0, (UNDEF: 0)
    27f8:	001b0800 	andseq	r0, fp, r0, lsl #16
    27fc:	001b0e10 	andseq	r0, fp, r0, lsl lr
    2800:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    280c:	10001b10 	andne	r1, r0, r0, lsl fp
    2810:	10001b14 	andne	r1, r0, r4, lsl fp
    2814:	007d0002 	rsbseq	r0, sp, r2
    2818:	10001b14 	andne	r1, r0, r4, lsl fp
    281c:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    2820:	207d0002 	rsbscs	r0, sp, r2
	...
    282c:	00010100 	andeq	r0, r1, r0, lsl #2
    2830:	10001b10 	andne	r1, r0, r0, lsl fp
    2834:	10001b2a 	andne	r1, r0, sl, lsr #22
    2838:	2a500001 	bcs	1402844 <__RAM_SIZE+0x1302844>
    283c:	bc10001b 	ldclt	0, cr0, [r0], {27}
    2840:	0110001b 	tsteq	r0, fp, lsl r0
    2844:	00005400 	andeq	r5, r0, r0, lsl #8
    2848:	00000000 	andeq	r0, r0, r0
    284c:	01000000 	mrseq	r0, (UNDEF: 0)
    2850:	1b100001 	blne	40285c <__RAM_SIZE+0x30285c>
    2854:	1b2a1000 	blne	a8685c <__RAM_SIZE+0x98685c>
    2858:	00011000 	andeq	r1, r1, r0
    285c:	001b2a51 	andseq	r2, fp, r1, asr sl
    2860:	001bbc10 	andseq	fp, fp, r0, lsl ip
    2864:	58000110 	stmdapl	r0, {r4, r8}
	...
    2874:	1b100000 	blne	40287c <__RAM_SIZE+0x30287c>
    2878:	1b1c1000 	blne	706880 <__RAM_SIZE+0x606880>
    287c:	00011000 	andeq	r1, r1, r0
    2880:	001b1c52 	andseq	r1, fp, r2, asr ip
    2884:	001b2010 	andseq	r2, fp, r0, lsl r0
    2888:	72000310 	andvc	r0, r0, #16, 6	; 0x40000000
    288c:	1b209f7d 	blne	82a688 <__RAM_SIZE+0x72a688>
    2890:	1bbc1000 	blne	fef06898 <__RAM_segment_used_end__+0xc6e06898>
    2894:	00011000 	andeq	r1, r1, r0
    2898:	00000057 	andeq	r0, r0, r7, asr r0
	...
    28a4:	001b1000 	andseq	r1, fp, r0
    28a8:	001b2810 	andseq	r2, fp, r0, lsl r8
    28ac:	53000110 	movwpl	r0, #272	; 0x110
    28b0:	10001b28 	andne	r1, r0, r8, lsr #22
    28b4:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    28b8:	00590001 	subseq	r0, r9, r1
    28bc:	00000000 	andeq	r0, r0, r0
    28c0:	01000000 	mrseq	r0, (UNDEF: 0)
    28c4:	26000100 	strcs	r0, [r0], -r0, lsl #2
    28c8:	3c10001b 	ldccc	0, cr0, [r0], {27}
    28cc:	0110001b 	tsteq	r0, fp, lsl r0
    28d0:	1b3e5500 	blne	f97cd8 <__RAM_SIZE+0xe97cd8>
    28d4:	1bbc1000 	blne	fef068dc <__RAM_segment_used_end__+0xc6e068dc>
    28d8:	00011000 	andeq	r1, r1, r0
    28dc:	00000055 	andeq	r0, r0, r5, asr r0
    28e0:	00000000 	andeq	r0, r0, r0
    28e4:	00000200 	andeq	r0, r0, r0, lsl #4
    28e8:	02000100 	andeq	r0, r0, #0, 2
    28ec:	001b5000 	andseq	r5, fp, r0
    28f0:	001b5210 	andseq	r5, fp, r0, lsl r2
    28f4:	30000210 	andcc	r0, r0, r0, lsl r2
    28f8:	001b909f 	mulseq	fp, pc, r0	; <UNPREDICTABLE>
    28fc:	001b9210 	andseq	r9, fp, r0, lsl r2
    2900:	50000110 	andpl	r0, r0, r0, lsl r1
    2904:	10001b92 	mulne	r0, r2, fp
    2908:	10001b9a 	mulne	r0, sl, fp
    290c:	9f400002 	svcls	0x00400002
    2910:	10001bac 	andne	r1, r0, ip, lsr #23
    2914:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    2918:	9f400002 	svcls	0x00400002
	...
    2924:	1b2a0000 	blne	a8292c <__RAM_SIZE+0x98292c>
    2928:	1bbc1000 	blne	fef06930 <__RAM_segment_used_end__+0xc6e06930>
    292c:	00011000 	andeq	r1, r1, r0
    2930:	00000056 	andeq	r0, r0, r6, asr r0
	...
    2944:	001b3800 	andseq	r3, fp, r0, lsl #16
    2948:	001b5210 	andseq	r5, fp, r0, lsl r2
    294c:	50000110 	andpl	r0, r0, r0, lsl r1
    2950:	10001b56 	andne	r1, r0, r6, asr fp
    2954:	10001b84 	andne	r1, r0, r4, lsl #23
    2958:	92500001 	subsls	r0, r0, #1
    295c:	9810001b 	ldmdals	r0, {r0, r1, r3, r4}
    2960:	0110001b 	tsteq	r0, fp, lsl r0
    2964:	1b985000 	blne	fe61696c <__RAM_segment_used_end__+0xc651696c>
    2968:	1b9a1000 	blne	fe686970 <__RAM_segment_used_end__+0xc6586970>
    296c:	00021000 	andeq	r1, r2, r0
    2970:	1b9a0078 	blne	fe682b58 <__RAM_segment_used_end__+0xc6582b58>
    2974:	1bae1000 	blne	feb8697c <__RAM_segment_used_end__+0xc6a8697c>
    2978:	00011000 	andeq	r1, r1, r0
    297c:	001bae50 	andseq	sl, fp, r0, asr lr
    2980:	001bbc10 	andseq	fp, fp, r0, lsl ip
    2984:	78000210 	stmdavc	r0, {r4, r9}
	...
    2994:	70000000 	andvc	r0, r0, r0
    2998:	7c10001b 	ldcvc	0, cr0, [r0], {27}
    299c:	0110001b 	tsteq	r0, fp, lsl r0
    29a0:	1b9a5300 	blne	fe6975a8 <__RAM_segment_used_end__+0xc65975a8>
    29a4:	1b9c1000 	blne	fe7069ac <__RAM_segment_used_end__+0xc66069ac>
    29a8:	00011000 	andeq	r1, r1, r0
    29ac:	001b9c53 	andseq	r9, fp, r3, asr ip
    29b0:	001ba010 	andseq	sl, fp, r0, lsl r0
    29b4:	72000310 	andvc	r0, r0, #16, 6	; 0x40000000
    29b8:	00009f7f 	andeq	r9, r0, pc, ror pc
	...
    29c4:	10001b9c 	mulne	r0, ip, fp
    29c8:	10001ba8 	andne	r1, r0, r8, lsr #23
    29cc:	00530001 	subseq	r0, r3, r1
	...
    29d8:	001ba000 	andseq	sl, fp, r0
    29dc:	001ba810 	andseq	sl, fp, r0, lsl r8
    29e0:	52000110 	andpl	r0, r0, #16, 2
	...
    29ec:	1b2a0001 	blne	a829f8 <__RAM_SIZE+0x9829f8>
    29f0:	1b461000 	blne	11869f8 <__RAM_SIZE+0x10869f8>
    29f4:	00021000 	andeq	r1, r2, r0
    29f8:	00009f30 	andeq	r9, r0, r0, lsr pc
    29fc:	00000000 	andeq	r0, r0, r0
    2a00:	01010000 	mrseq	r0, (UNDEF: 1)
    2a04:	10001b24 	andne	r1, r0, r4, lsr #22
    2a08:	10001b2a 	andne	r1, r0, sl, lsr #22
    2a0c:	00550001 	subseq	r0, r5, r1
	...
    2a18:	001b2401 	andseq	r2, fp, r1, lsl #8
    2a1c:	001b2410 	andseq	r2, fp, r0, lsl r4
    2a20:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    2a2c:	1b2c0001 	blne	b02a38 <__RAM_SIZE+0xa02a38>
    2a30:	1b301000 	blne	c06a38 <__RAM_SIZE+0xb06a38>
    2a34:	00011000 	andeq	r1, r1, r0
    2a38:	00000055 	andeq	r0, r0, r5, asr r0
    2a3c:	00000000 	andeq	r0, r0, r0
    2a40:	3c000100 	stfccs	f0, [r0], {-0}
    2a44:	bc10001b 	ldclt	0, cr0, [r0], {27}
    2a48:	0110001b 	tsteq	r0, fp, lsl r0
    2a4c:	00005500 	andeq	r5, r0, r0, lsl #10
    2a50:	00000000 	andeq	r0, r0, r0
    2a54:	01000000 	mrseq	r0, (UNDEF: 0)
    2a58:	10001b3c 	andne	r1, r0, ip, lsr fp
    2a5c:	10001b3c 	andne	r1, r0, ip, lsr fp
    2a60:	00550001 	subseq	r0, r5, r1
    2a64:	00000000 	andeq	r0, r0, r0
    2a68:	01000000 	mrseq	r0, (UNDEF: 0)
    2a6c:	001b4c00 	andseq	r4, fp, r0, lsl #24
    2a70:	001b5010 	andseq	r5, fp, r0, lsl r0
    2a74:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    2a80:	1b880001 	blne	fe202a8c <__RAM_segment_used_end__+0xc6102a8c>
    2a84:	1b8c1000 	blne	fe306a8c <__RAM_segment_used_end__+0xc6206a8c>
    2a88:	00011000 	andeq	r1, r1, r0
    2a8c:	00000055 	andeq	r0, r0, r5, asr r0
    2a90:	00000000 	andeq	r0, r0, r0
    2a94:	92000200 	andls	r0, r0, #0, 4
    2a98:	9a10001b 	bls	402b0c <__RAM_SIZE+0x302b0c>
    2a9c:	0110001b 	tsteq	r0, fp, lsl r0
    2aa0:	00005500 	andeq	r5, r0, r0, lsl #10
    2aa4:	00000000 	andeq	r0, r0, r0
    2aa8:	00010000 	andeq	r0, r1, r0
    2aac:	10001ba8 	andne	r1, r0, r8, lsr #23
    2ab0:	10001bac 	andne	r1, r0, ip, lsr #23
    2ab4:	00550001 	subseq	r0, r5, r1
    2ab8:	00000000 	andeq	r0, r0, r0
    2abc:	bc000000 	stclt	0, cr0, [r0], {-0}
    2ac0:	be10001b 	mrclt	0, 0, r0, cr0, cr11, {0}
    2ac4:	0210001b 	andseq	r0, r0, #27
    2ac8:	be007d00 	cdplt	13, 0, cr7, cr0, cr0, {0}
    2acc:	f410001b 			; <UNDEFINED> instruction: 0xf410001b
    2ad0:	0210001b 	andseq	r0, r0, #27
    2ad4:	00087d00 	andeq	r7, r8, r0, lsl #26
	...
    2ae4:	bc000000 	stclt	0, cr0, [r0], {-0}
    2ae8:	d410001b 	ldrle	r0, [r0], #-27	; 0xffffffe5
    2aec:	0110001b 	tsteq	r0, fp, lsl r0
    2af0:	1bd45000 	blne	ff516af8 <__RAM_segment_used_end__+0xc7416af8>
    2af4:	1bd61000 	blne	ff586afc <__RAM_segment_used_end__+0xc7486afc>
    2af8:	00041000 	andeq	r1, r4, r0
    2afc:	9f5001f3 	svcls	0x005001f3
    2b00:	10001bd6 	ldrdne	r1, [r0], -r6
    2b04:	10001bf1 	strdne	r1, [r0], -r1	; <UNPREDICTABLE>
    2b08:	f1500001 			; <UNDEFINED> instruction: 0xf1500001
    2b0c:	f410001b 			; <UNDEFINED> instruction: 0xf410001b
    2b10:	0410001b 	ldreq	r0, [r0], #-27	; 0xffffffe5
    2b14:	5001f300 	andpl	pc, r1, r0, lsl #6
    2b18:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2b28:	001bbc00 	andseq	fp, fp, r0, lsl #24
    2b2c:	001bce10 	andseq	ip, fp, r0, lsl lr
    2b30:	51000110 	tstpl	r0, r0, lsl r1
    2b34:	10001bce 	andne	r1, r0, lr, asr #23
    2b38:	10001bd6 	ldrdne	r1, [r0], -r6
    2b3c:	01f30004 	mvnseq	r0, r4
    2b40:	1bd69f51 	blne	ff5aa88c <__RAM_segment_used_end__+0xc74aa88c>
    2b44:	1bda1000 	blne	ff686b4c <__RAM_segment_used_end__+0xc7586b4c>
    2b48:	00011000 	andeq	r1, r1, r0
    2b4c:	001bda51 	andseq	sp, fp, r1, asr sl
    2b50:	001bf410 	andseq	pc, fp, r0, lsl r4	; <UNPREDICTABLE>
    2b54:	f3000410 	vqshl.u8	d0, d0, d0
    2b58:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    2b64:	c0000000 	andgt	r0, r0, r0
    2b68:	d410001b 	ldrle	r0, [r0], #-27	; 0xffffffe5
    2b6c:	0110001b 	tsteq	r0, fp, lsl r0
    2b70:	1bd65200 	blne	ff597378 <__RAM_segment_used_end__+0xc7497378>
    2b74:	1bf11000 	blne	ffc46b7c <__RAM_segment_used_end__+0xc7b46b7c>
    2b78:	00011000 	andeq	r1, r1, r0
    2b7c:	00000052 	andeq	r0, r0, r2, asr r0
    2b80:	00000000 	andeq	r0, r0, r0
    2b84:	00000100 	andeq	r0, r0, r0, lsl #2
    2b88:	ca000000 	bgt	2b90 <_Min_Stack_Size+0x1b90>
    2b8c:	ce10001b 	mrcgt	0, 0, r0, cr0, cr11, {0}
    2b90:	0110001b 	tsteq	r0, fp, lsl r0
    2b94:	1bd65300 	blne	ff59779c <__RAM_segment_used_end__+0xc749779c>
    2b98:	1bd81000 	blne	ff606ba0 <__RAM_segment_used_end__+0xc7506ba0>
    2b9c:	00011000 	andeq	r1, r1, r0
    2ba0:	001bd853 	andseq	sp, fp, r3, asr r8
    2ba4:	001bdc10 	andseq	sp, fp, r0, lsl ip
    2ba8:	72000210 	andvc	r0, r0, #16, 4
    2bac:	00000028 	andeq	r0, r0, r8, lsr #32
    2bb0:	00000000 	andeq	r0, r0, r0
    2bb4:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    2bb8:	e810001b 	ldmda	r0, {r0, r1, r3, r4}
    2bbc:	0110001b 	tsteq	r0, fp, lsl r0
    2bc0:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    2bcc:	10001bda 	ldrdne	r1, [r0], -sl
    2bd0:	10001be0 	andne	r1, r0, r0, ror #23
    2bd4:	00510001 	subseq	r0, r1, r1
    2bd8:	00000000 	andeq	r0, r0, r0
    2bdc:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    2be0:	f610001b 			; <UNDEFINED> instruction: 0xf610001b
    2be4:	0210001b 	andseq	r0, r0, #27
    2be8:	f6007d00 			; <UNDEFINED> instruction: 0xf6007d00
    2bec:	7c10001b 	ldcvc	0, cr0, [r0], {27}
    2bf0:	0210001c 	andseq	r0, r0, #28
    2bf4:	00187d00 	andseq	r7, r8, r0, lsl #26
	...
    2c00:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    2c04:	0510001b 	ldreq	r0, [r0, #-27]	; 0xffffffe5
    2c08:	0110001c 	tsteq	r0, ip, lsl r0
    2c0c:	1c055000 	stcne	0, cr5, [r5], {-0}
    2c10:	1c7c1000 	ldclne	0, cr1, [ip], #-0
    2c14:	00011000 	andeq	r1, r1, r0
    2c18:	00000054 	andeq	r0, r0, r4, asr r0
	...
    2c24:	001bf400 	andseq	pc, fp, r0, lsl #8
    2c28:	001c0210 	andseq	r0, ip, r0, lsl r2
    2c2c:	51000110 	tstpl	r0, r0, lsl r1
    2c30:	10001c02 	andne	r1, r0, r2, lsl #24
    2c34:	10001c7c 	andne	r1, r0, ip, ror ip
    2c38:	00570001 	subseq	r0, r7, r1
	...
    2c44:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    2c48:	0010001b 	andseq	r0, r0, fp, lsl r0
    2c4c:	0110001c 	tsteq	r0, ip, lsl r0
    2c50:	1c005200 	sfmne	f5, 4, [r0], {-0}
    2c54:	1c7c1000 	ldclne	0, cr1, [ip], #-0
    2c58:	00011000 	andeq	r1, r1, r0
    2c5c:	00000056 	andeq	r0, r0, r6, asr r0
	...
    2c6c:	f4000000 	vst4.8	{d0-d3}, [r0], r0
    2c70:	0510001b 	ldreq	r0, [r0, #-27]	; 0xffffffe5
    2c74:	0110001c 	tsteq	r0, ip, lsl r0
    2c78:	1c055300 	stcne	3, cr5, [r5], {-0}
    2c7c:	1c0a1000 	stcne	0, cr1, [sl], {-0}
    2c80:	00011000 	andeq	r1, r1, r0
    2c84:	001c0a55 	andseq	r0, ip, r5, asr sl
    2c88:	001c2010 	andseq	r2, ip, r0, lsl r0
    2c8c:	53000110 	movwpl	r0, #272	; 0x110
    2c90:	10001c20 	andne	r1, r0, r0, lsr #24
    2c94:	10001c24 	andne	r1, r0, r4, lsr #24
    2c98:	1c740002 	ldclne	0, cr0, [r4], #-8
    2c9c:	10001c24 	andne	r1, r0, r4, lsr #24
    2ca0:	10001c7c 	andne	r1, r0, ip, ror ip
    2ca4:	00750006 	rsbseq	r0, r5, r6
    2ca8:	9f1afc09 	svcls	0x001afc09
	...
    2cb4:	1c3c0001 	ldcne	0, cr0, [ip], #-4
    2cb8:	1c7c1000 	ldclne	0, cr1, [ip], #-0
    2cbc:	00011000 	andeq	r1, r1, r0
    2cc0:	00000052 	andeq	r0, r0, r2, asr r0
    2cc4:	00000000 	andeq	r0, r0, r0
    2cc8:	00000100 	andeq	r0, r0, r0, lsl #2
    2ccc:	00000101 	andeq	r0, r0, r1, lsl #2
    2cd0:	02020101 	andeq	r0, r2, #1073741824	; 0x40000000
    2cd4:	001c1e00 	andseq	r1, ip, r0, lsl #28
    2cd8:	001c2010 	andseq	r2, ip, r0, lsl r0
    2cdc:	56000110 			; <UNDEFINED> instruction: 0x56000110
    2ce0:	10001c20 	andne	r1, r0, r0, lsr #24
    2ce4:	10001c20 	andne	r1, r0, r0, lsr #24
    2ce8:	20530001 	subscs	r0, r3, r1
    2cec:	2810001c 	ldmdacs	r0, {r2, r3, r4}
    2cf0:	0310001c 	tsteq	r0, #28
    2cf4:	9f7c7300 	svcls	0x007c7300
    2cf8:	10001c28 	andne	r1, r0, r8, lsr #24
    2cfc:	10001c2e 	andne	r1, r0, lr, lsr #24
    2d00:	2e520001 	cdpcs	0, 5, cr0, cr2, cr1, {0}
    2d04:	2e10001c 	mrccs	0, 0, r0, cr0, cr12, {0}
    2d08:	0110001c 	tsteq	r0, ip, lsl r0
    2d0c:	1c2e5600 	stcne	6, cr5, [lr], #-0
    2d10:	1c7c1000 	ldclne	0, cr1, [ip], #-0
    2d14:	00031000 	andeq	r1, r3, r0
    2d18:	009f0476 	addseq	r0, pc, r6, ror r4	; <UNPREDICTABLE>
    2d1c:	00000000 	andeq	r0, r0, r0
    2d20:	03000000 	movweq	r0, #0
    2d24:	02020101 	andeq	r0, r2, #1073741824	; 0x40000000
    2d28:	001c2000 	andseq	r2, ip, r0
    2d2c:	001c2810 	andseq	r2, ip, r0, lsl r8
    2d30:	73000310 	movwvc	r0, #784	; 0x310
    2d34:	1c289f7c 	stcne	15, cr9, [r8], #-496	; 0xfffffe10
    2d38:	1c2c1000 	stcne	0, cr1, [ip], #-0
    2d3c:	00011000 	andeq	r1, r1, r0
    2d40:	001c2c52 	andseq	r2, ip, r2, asr ip
    2d44:	001c7c10 	andseq	r7, ip, r0, lsl ip
    2d48:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    2d54:	00010102 	andeq	r0, r1, r2, lsl #2
    2d58:	10001c20 	andne	r1, r0, r0, lsr #24
    2d5c:	10001c2c 	andne	r1, r0, ip, lsr #24
    2d60:	2c540001 	mrrccs	0, 0, r0, r4, cr1
    2d64:	7c10001c 	ldcvc	0, cr0, [r0], {28}
    2d68:	0110001c 	tsteq	r0, ip, lsl r0
    2d6c:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    2d78:	10001c60 	andne	r1, r0, r0, ror #24
    2d7c:	10001c7c 	andne	r1, r0, ip, ror ip
    2d80:	00510001 	subseq	r0, r1, r1
	...
    2d8c:	001c6200 	andseq	r6, ip, r0, lsl #4
    2d90:	001c7c10 	andseq	r7, ip, r0, lsl ip
    2d94:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    2da0:	1c2e0003 	stcne	0, cr0, [lr], #-12
    2da4:	1c7c1000 	ldclne	0, cr1, [ip], #-0
    2da8:	00031000 	andeq	r1, r3, r0
    2dac:	009f0476 	addseq	r0, pc, r6, ror r4	; <UNPREDICTABLE>
    2db0:	00000000 	andeq	r0, r0, r0
    2db4:	01000000 	mrseq	r0, (UNDEF: 0)
    2db8:	001c3a00 	andseq	r3, ip, r0, lsl #20
    2dbc:	001c7c10 	andseq	r7, ip, r0, lsl ip
    2dc0:	52000110 	andpl	r0, r0, #16, 2
	...
    2dcc:	1c3a0100 	ldfnes	f0, [sl], #-0
    2dd0:	1c3a1000 	ldcne	0, cr1, [sl], #-0
    2dd4:	00011000 	andeq	r1, r1, r0
    2dd8:	00000052 	andeq	r0, r0, r2, asr r0
    2ddc:	00000000 	andeq	r0, r0, r0
    2de0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
    2de4:	5810001c 	ldmdapl	r0, {r2, r3, r4}
    2de8:	0110001c 	tsteq	r0, ip, lsl r0
    2dec:	00005200 	andeq	r5, r0, r0, lsl #4
    2df0:	00000000 	andeq	r0, r0, r0
    2df4:	1c7c0000 	ldclne	0, cr0, [ip], #-0
    2df8:	1c7e1000 	ldclne	0, cr1, [lr], #-0
    2dfc:	00021000 	andeq	r1, r2, r0
    2e00:	1c7e007d 	ldclne	0, cr0, [lr], #-500	; 0xfffffe0c
    2e04:	1d641000 	stclne	0, cr1, [r4, #-0]
    2e08:	00021000 	andeq	r1, r2, r0
    2e0c:	0000147d 	andeq	r1, r0, sp, ror r4
	...
    2e20:	1c7c0000 	ldclne	0, cr0, [ip], #-0
    2e24:	1ca81000 	stcne	0, cr1, [r8]
    2e28:	00011000 	andeq	r1, r1, r0
    2e2c:	001ca850 	andseq	sl, ip, r0, asr r8
    2e30:	001caa10 	andseq	sl, ip, r0, lsl sl
    2e34:	f3000410 	vqshl.u8	d0, d0, d0
    2e38:	aa9f5001 	bge	fe7d6e44 <__RAM_segment_used_end__+0xc66d6e44>
    2e3c:	4a10001c 	bmi	402eb4 <__RAM_SIZE+0x302eb4>
    2e40:	0110001d 	tsteq	r0, sp, lsl r0
    2e44:	1d4a5000 	stclne	0, cr5, [sl, #-0]
    2e48:	1d4c1000 	stclne	0, cr1, [ip, #-0]
    2e4c:	00041000 	andeq	r1, r4, r0
    2e50:	9f5001f3 	svcls	0x005001f3
    2e54:	10001d4c 	andne	r1, r0, ip, asr #26
    2e58:	10001d58 	andne	r1, r0, r8, asr sp
    2e5c:	58500001 	ldmdapl	r0, {r0}^
    2e60:	6410001d 	ldrvs	r0, [r0], #-29	; 0xffffffe3
    2e64:	0410001d 	ldreq	r0, [r0], #-29	; 0xffffffe3
    2e68:	5001f300 	andpl	pc, r1, r0, lsl #6
    2e6c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    2e78:	7c000000 	stcvc	0, cr0, [r0], {-0}
    2e7c:	3610001c 			; <UNDEFINED> instruction: 0x3610001c
    2e80:	0110001d 	tsteq	r0, sp, lsl r0
    2e84:	1d365100 	ldfnes	f5, [r6, #-0]
    2e88:	1d521000 	ldclne	0, cr1, [r2, #-0]
    2e8c:	00041000 	andeq	r1, r4, r0
    2e90:	9f5101f3 	svcls	0x005101f3
    2e94:	10001d52 	andne	r1, r0, r2, asr sp
    2e98:	10001d64 	andne	r1, r0, r4, ror #26
    2e9c:	00510001 	subseq	r0, r1, r1
    2ea0:	00000000 	andeq	r0, r0, r0
    2ea4:	01000000 	mrseq	r0, (UNDEF: 0)
    2ea8:	84000100 	strhi	r0, [r0], #-256	; 0xffffff00
    2eac:	ec10001c 	ldc	0, cr0, [r0], {28}
    2eb0:	0110001c 	tsteq	r0, ip, lsl r0
    2eb4:	1cee5c00 	stclne	12, cr5, [lr]
    2eb8:	1d641000 	stclne	0, cr1, [r4, #-0]
    2ebc:	00011000 	andeq	r1, r1, r0
    2ec0:	0000005c 	andeq	r0, r0, ip, asr r0
    2ec4:	00000000 	andeq	r0, r0, r0
    2ec8:	02000000 	andeq	r0, r0, #0
    2ecc:	00000000 	andeq	r0, r0, r0
    2ed0:	9a000202 	bls	36e0 <_Min_Stack_Size+0x26e0>
    2ed4:	a210001c 	andsge	r0, r0, #28
    2ed8:	0110001c 	tsteq	r0, ip, lsl r0
    2edc:	1ca65200 	sfmne	f5, 4, [r6]
    2ee0:	1caa1000 	stcne	0, cr1, [sl]
    2ee4:	00021000 	andeq	r1, r2, r0
    2ee8:	1caa9f30 	stcne	15, cr9, [sl], #192	; 0xc0
    2eec:	1d4a1000 	stclne	0, cr1, [sl, #-0]
    2ef0:	00011000 	andeq	r1, r1, r0
    2ef4:	001d4c52 	andseq	r4, sp, r2, asr ip
    2ef8:	001d5610 	andseq	r5, sp, r0, lsl r6
    2efc:	52000110 	andpl	r0, r0, #16, 2
    2f00:	10001d56 	andne	r1, r0, r6, asr sp
    2f04:	10001d64 	andne	r1, r0, r4, ror #26
    2f08:	9f300002 	svcls	0x00300002
	...
    2f18:	1cb80000 	ldcne	0, cr0, [r8]
    2f1c:	1ce41000 	stclne	0, cr1, [r4]
    2f20:	00011000 	andeq	r1, r1, r0
    2f24:	001d1057 	andseq	r1, sp, r7, asr r0
    2f28:	001d1210 	andseq	r1, sp, r0, lsl r2
    2f2c:	57000110 	smladpl	r0, r0, r1, r0
    2f30:	10001d20 	andne	r1, r0, r0, lsr #26
    2f34:	10001d32 	andne	r1, r0, r2, lsr sp
    2f38:	00540001 	subseq	r0, r4, r1
    2f3c:	00000000 	andeq	r0, r0, r0
    2f40:	01000000 	mrseq	r0, (UNDEF: 0)
    2f44:	01000000 	mrseq	r0, (UNDEF: 0)
    2f48:	02000000 	andeq	r0, r0, #0
    2f4c:	00000200 	andeq	r0, r0, r0, lsl #4
    2f50:	b6000101 	strlt	r0, [r0], -r1, lsl #2
    2f54:	ca10001c 	bgt	402fcc <__RAM_SIZE+0x302fcc>
    2f58:	0110001c 	tsteq	r0, ip, lsl r0
    2f5c:	1cd05200 	lfmne	f5, 2, [r0], {0}
    2f60:	1ce41000 	stclne	0, cr1, [r4]
    2f64:	00011000 	andeq	r1, r1, r0
    2f68:	001d0652 	andseq	r0, sp, r2, asr r6
    2f6c:	001d0810 	andseq	r0, sp, r0, lsl r8
    2f70:	52000110 	andpl	r0, r0, #16, 2
    2f74:	10001d10 	andne	r1, r0, r0, lsl sp
    2f78:	10001d12 	andne	r1, r0, r2, lsl sp
    2f7c:	20520001 	subscs	r0, r2, r1
    2f80:	3210001d 	andscc	r0, r0, #29
    2f84:	0110001d 	tsteq	r0, sp, lsl r0
    2f88:	1d325200 	lfmne	f5, 4, [r2, #-0]
    2f8c:	1d421000 	stclne	0, cr1, [r2, #-0]
    2f90:	00031000 	andeq	r1, r3, r0
    2f94:	4c9f0472 	cfldrsmi	mvf0, [pc], {114}	; 0x72
    2f98:	4c10001d 	ldcmi	0, cr0, [r0], {29}
    2f9c:	0310001d 	tsteq	r0, #29
    2fa0:	9f047200 	svcls	0x00047200
    2fa4:	10001d4c 	andne	r1, r0, ip, asr #26
    2fa8:	10001d52 	andne	r1, r0, r2, asr sp
    2fac:	00520001 	subseq	r0, r2, r1
    2fb0:	00000000 	andeq	r0, r0, r0
    2fb4:	01000000 	mrseq	r0, (UNDEF: 0)
    2fb8:	01000100 	mrseq	r0, (UNDEF: 16)
    2fbc:	001cc800 	andseq	ip, ip, r0, lsl #16
    2fc0:	001cd010 	andseq	sp, ip, r0, lsl r0
    2fc4:	57000110 	smladpl	r0, r0, r1, r0
    2fc8:	10001cd0 	ldrdne	r1, [r0], -r0
    2fcc:	10001ce4 	andne	r1, r0, r4, ror #25
    2fd0:	20570001 	subscs	r0, r7, r1
    2fd4:	3210001d 	andscc	r0, r0, #29
    2fd8:	0110001d 	tsteq	r0, sp, lsl r0
    2fdc:	00005400 	andeq	r5, r0, r0, lsl #8
    2fe0:	00000000 	andeq	r0, r0, r0
    2fe4:	00010000 	andeq	r0, r1, r0
    2fe8:	01000000 	mrseq	r0, (UNDEF: 0)
    2fec:	00000001 	andeq	r0, r0, r1
    2ff0:	00010000 	andeq	r0, r1, r0
    2ff4:	00000000 	andeq	r0, r0, r0
    2ff8:	10001c9c 	mulne	r0, ip, ip
    2ffc:	10001ca2 	andne	r1, r0, r2, lsr #25
    3000:	9f300002 	svcls	0x00300002
    3004:	10001caa 	andne	r1, r0, sl, lsr #25
    3008:	10001cba 			; <UNDEFINED> instruction: 0x10001cba
    300c:	9f300002 	svcls	0x00300002
    3010:	10001cba 			; <UNDEFINED> instruction: 0x10001cba
    3014:	10001cc0 	andne	r1, r0, r0, asr #25
    3018:	c0540001 	subsgt	r0, r4, r1
    301c:	1010001c 	andsne	r0, r0, ip, lsl r0
    3020:	0210001d 	andseq	r0, r0, #29
    3024:	109f3000 	addsne	r3, pc, r0
    3028:	1210001d 	andsne	r0, r0, #29
    302c:	0110001d 	tsteq	r0, sp, lsl r0
    3030:	1d125400 	cfldrsne	mvf5, [r2, #-0]
    3034:	1d1e1000 	ldcne	0, cr1, [lr, #-0]
    3038:	00011000 	andeq	r1, r1, r0
    303c:	001d3053 	andseq	r3, sp, r3, asr r0
    3040:	001d3210 	andseq	r3, sp, r0, lsl r2
    3044:	51000110 	tstpl	r0, r0, lsl r1
    3048:	10001d32 	andne	r1, r0, r2, lsr sp
    304c:	10001d38 	andne	r1, r0, r8, lsr sp
    3050:	52530001 	subspl	r0, r3, #1
    3054:	6410001d 	ldrvs	r0, [r0], #-29	; 0xffffffe3
    3058:	0110001d 	tsteq	r0, sp, lsl r0
    305c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    306c:	10001c9c 	mulne	r0, ip, ip
    3070:	10001ca2 	andne	r1, r0, r2, lsr #25
    3074:	aa530001 	bge	14c3080 <__RAM_SIZE+0x13c3080>
    3078:	f810001c 			; <UNDEFINED> instruction: 0xf810001c
    307c:	0110001c 	tsteq	r0, ip, lsl r0
    3080:	1cfa5300 	ldclne	3, cr5, [sl]
    3084:	1d121000 	ldcne	0, cr1, [r2, #-0]
    3088:	00011000 	andeq	r1, r1, r0
    308c:	00000053 	andeq	r0, r0, r3, asr r0
    3090:	00000000 	andeq	r0, r0, r0
    3094:	00000800 	andeq	r0, r0, r0, lsl #16
    3098:	00000101 	andeq	r0, r0, r1, lsl #2
    309c:	7e000000 	cdpvc	0, 0, cr0, cr0, cr0, {0}
    30a0:	aa10001c 	bge	403118 <__RAM_SIZE+0x303118>
    30a4:	0210001c 	andseq	r0, r0, #28
    30a8:	aa9f3000 	bge	fe7cf0b0 <__RAM_segment_used_end__+0xc66cf0b0>
    30ac:	b210001c 	andslt	r0, r0, #28
    30b0:	0110001c 	tsteq	r0, ip, lsl r0
    30b4:	1cb25e00 	ldcne	14, cr5, [r2]
    30b8:	1cb61000 	ldcne	0, cr1, [r6]
    30bc:	00021000 	andeq	r1, r2, r0
    30c0:	1cb69f31 	ldcne	15, cr9, [r6], #196	; 0xc4
    30c4:	1d4a1000 	stclne	0, cr1, [sl, #-0]
    30c8:	00011000 	andeq	r1, r1, r0
    30cc:	001d4c5e 	andseq	r4, sp, lr, asr ip
    30d0:	001d6410 	andseq	r6, sp, r0, lsl r4
    30d4:	5e000110 	fltpls	f0, r0
	...
    30e4:	1c960000 	ldcne	0, cr0, [r6], {0}
    30e8:	1ca21000 	stcne	0, cr1, [r2]
    30ec:	00011000 	andeq	r1, r1, r0
    30f0:	001caa55 	andseq	sl, ip, r5, asr sl
    30f4:	001d2210 	andseq	r2, sp, r0, lsl r2
    30f8:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    30fc:	10001d52 	andne	r1, r0, r2, asr sp
    3100:	10001d64 	andne	r1, r0, r4, ror #26
    3104:	00550001 	subseq	r0, r5, r1
	...
    3110:	03000303 	movweq	r0, #771	; 0x303
    3114:	02000000 	andeq	r0, r0, #0
    3118:	001caa00 	andseq	sl, ip, r0, lsl #20
    311c:	001cc010 	andseq	ip, ip, r0, lsl r0
    3120:	72000310 	andvc	r0, r0, #16, 6	; 0x40000000
    3124:	1cc09f04 	stclne	15, cr9, [r0], {4}
    3128:	1ce41000 	stclne	0, cr1, [r4]
    312c:	00031000 	andeq	r1, r3, r0
    3130:	fe9f0477 	mrc2	4, 4, r0, cr15, cr7, {3}
    3134:	0810001c 	ldmdaeq	r0, {r2, r3, r4}
    3138:	0310001d 	tsteq	r0, #29
    313c:	9f047200 	svcls	0x00047200
    3140:	10001d10 	andne	r1, r0, r0, lsl sp
    3144:	10001d12 	andne	r1, r0, r2, lsl sp
    3148:	04720003 	ldrbteq	r0, [r2], #-3
    314c:	001d249f 	mulseq	sp, pc, r4	; <UNPREDICTABLE>
    3150:	001d3210 	andseq	r3, sp, r0, lsl r2
    3154:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    3158:	00009f04 	andeq	r9, r0, r4, lsl #30
    315c:	00000000 	andeq	r0, r0, r0
    3160:	02000000 	andeq	r0, r0, #0
    3164:	00020002 	andeq	r0, r2, r2
    3168:	00010000 	andeq	r0, r1, r0
    316c:	00000001 	andeq	r0, r0, r1
    3170:	10001caa 	andne	r1, r0, sl, lsr #25
    3174:	10001cc0 	andne	r1, r0, r0, asr #25
    3178:	04720003 	ldrbteq	r0, [r2], #-3
    317c:	001cc09f 	mulseq	ip, pc, r0	; <UNPREDICTABLE>
    3180:	001ce410 	andseq	lr, ip, r0, lsl r4
    3184:	77000310 	smladvc	r0, r0, r3, r0
    3188:	1cfe9f04 	ldclne	15, cr9, [lr], #16
    318c:	1d081000 	stcne	0, cr1, [r8, #-0]
    3190:	00031000 	andeq	r1, r3, r0
    3194:	109f0472 	addsne	r0, pc, r2, ror r4	; <UNPREDICTABLE>
    3198:	1210001d 	andsne	r0, r0, #29
    319c:	0310001d 	tsteq	r0, #29
    31a0:	9f047200 	svcls	0x00047200
    31a4:	10001d24 	andne	r1, r0, r4, lsr #26
    31a8:	10001d32 	andne	r1, r0, r2, lsr sp
    31ac:	04740003 	ldrbteq	r0, [r4], #-3
    31b0:	001d329f 	mulseq	sp, pc, r2	; <UNPREDICTABLE>
    31b4:	001d4a10 	andseq	r4, sp, r0, lsl sl
    31b8:	72000310 	andvc	r0, r0, #16, 6	; 0x40000000
    31bc:	1d4c9f04 	stclne	15, cr9, [ip, #-16]
    31c0:	1d521000 	ldclne	0, cr1, [r2, #-0]
    31c4:	00031000 	andeq	r1, r3, r0
    31c8:	009f0472 	addseq	r0, pc, r2, ror r4	; <UNPREDICTABLE>
	...
    31d8:	001c8e00 	andseq	r8, ip, r0, lsl #28
    31dc:	001c9410 	andseq	r9, ip, r0, lsl r4
    31e0:	52000110 	andpl	r0, r0, #16, 2
    31e4:	10001c94 	mulne	r0, r4, ip
    31e8:	10001ca2 	andne	r1, r0, r2, lsr #25
    31ec:	00740009 	rsbseq	r0, r4, r9
    31f0:	08702433 	ldmdaeq	r0!, {r0, r1, r4, r5, sl, sp}^
    31f4:	a29f2206 	addsge	r2, pc, #1610612736	; 0x60000000
    31f8:	aa10001c 	bge	403270 <__RAM_SIZE+0x303270>
    31fc:	0110001c 	tsteq	r0, ip, lsl r0
    3200:	00005200 	andeq	r5, r0, r0, lsl #4
    3204:	00000000 	andeq	r0, r0, r0
    3208:	00010000 	andeq	r0, r1, r0
    320c:	10001c82 	andne	r1, r0, r2, lsl #25
    3210:	10001caa 	andne	r1, r0, sl, lsr #25
    3214:	005c0001 	subseq	r0, ip, r1
	...
    3220:	001c8201 	andseq	r8, ip, r1, lsl #4
    3224:	001c8210 	andseq	r8, ip, r0, lsl r2
    3228:	5c000110 	stfpls	f0, [r0], {16}
	...
    3234:	1ca20001 	stcne	0, cr0, [r2], #4
    3238:	1ca61000 	stcne	0, cr1, [r6]
    323c:	00011000 	andeq	r1, r1, r0
    3240:	0000005c 	andeq	r0, r0, ip, asr r0
    3244:	00000000 	andeq	r0, r0, r0
    3248:	e4000100 	str	r0, [r0], #-256	; 0xffffff00
    324c:	e810001c 	ldmda	r0, {r2, r3, r4}
    3250:	0110001c 	tsteq	r0, ip, lsl r0
    3254:	00005c00 	andeq	r5, r0, r0, lsl #24
    3258:	00000000 	andeq	r0, r0, r0
    325c:	00010000 	andeq	r0, r1, r0
    3260:	10001cec 	andne	r1, r0, ip, ror #25
    3264:	10001cfe 	strdne	r1, [r0], -lr
    3268:	005c0001 	subseq	r0, ip, r1
	...
    3274:	001cec01 	andseq	lr, ip, r1, lsl #24
    3278:	001cec10 	andseq	lr, ip, r0, lsl ip
    327c:	5c000110 	stfpls	f0, [r0], {16}
	...
    3288:	1d420001 	stclne	0, cr0, [r2, #-4]
    328c:	1d461000 	stclne	0, cr1, [r6, #-0]
    3290:	00011000 	andeq	r1, r1, r0
    3294:	0000005c 	andeq	r0, r0, ip, asr r0
    3298:	00000000 	andeq	r0, r0, r0
    329c:	52000100 	andpl	r0, r0, #0, 2
    32a0:	5610001d 			; <UNDEFINED> instruction: 0x5610001d
    32a4:	0110001d 	tsteq	r0, sp, lsl r0
    32a8:	00005c00 	andeq	r5, r0, r0, lsl #24
    32ac:	00000000 	andeq	r0, r0, r0
    32b0:	1d640000 	stclne	0, cr0, [r4, #-0]
    32b4:	1d661000 	stclne	0, cr1, [r6, #-0]
    32b8:	00021000 	andeq	r1, r2, r0
    32bc:	1d66007d 	stclne	0, cr0, [r6, #-500]!	; 0xfffffe0c
    32c0:	1d701000 	ldclne	0, cr1, [r0, #-0]
    32c4:	00021000 	andeq	r1, r2, r0
    32c8:	0000087d 	andeq	r0, r0, sp, ror r8
    32cc:	00000000 	andeq	r0, r0, r0
    32d0:	1d700000 	ldclne	0, cr0, [r0, #-0]
    32d4:	1d721000 	ldclne	0, cr1, [r2, #-0]
    32d8:	00021000 	andeq	r1, r2, r0
    32dc:	1d72007d 	ldclne	0, cr0, [r2, #-500]!	; 0xfffffe0c
    32e0:	1dbc1000 	ldcne	0, cr1, [ip]
    32e4:	00021000 	andeq	r1, r2, r0
    32e8:	0000087d 	andeq	r0, r0, sp, ror r8
    32ec:	00000000 	andeq	r0, r0, r0
    32f0:	1dbc0000 	ldcne	0, cr0, [ip]
    32f4:	1dc01000 	stclne	0, cr1, [r0]
    32f8:	00021000 	andeq	r1, r2, r0
    32fc:	1dc0007d 	stclne	0, cr0, [r0, #500]	; 0x1f4
    3300:	1f041000 	svcne	0x00041000
    3304:	00021000 	andeq	r1, r2, r0
    3308:	0000287d 	andeq	r2, r0, sp, ror r8
	...
    3314:	1dbc0000 	ldcne	0, cr0, [ip]
    3318:	1dd31000 	ldclne	0, cr1, [r3]
    331c:	00011000 	andeq	r1, r1, r0
    3320:	001dd350 	andseq	sp, sp, r0, asr r3
    3324:	001f0410 	andseq	r0, pc, r0, lsl r4	; <UNPREDICTABLE>
    3328:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    3338:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
    333c:	10001dd3 	ldrdne	r1, [r0], -r3
    3340:	d3510001 	cmple	r1, #1
    3344:	0410001d 	ldreq	r0, [r0], #-29	; 0xffffffe3
    3348:	0110001f 	tsteq	r0, pc, lsl r0
    334c:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
    3358:	1dbc0000 	ldcne	0, cr0, [ip]
    335c:	1dd31000 	ldclne	0, cr1, [r3]
    3360:	00011000 	andeq	r1, r1, r0
    3364:	001dd352 	andseq	sp, sp, r2, asr r3
    3368:	001f0410 	andseq	r0, pc, r0, lsl r4	; <UNPREDICTABLE>
    336c:	59000110 	stmdbpl	r0, {r4, r8}
	...
    337c:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
    3380:	10001dd3 	ldrdne	r1, [r0], -r3
    3384:	d3530001 	cmple	r3, #1
    3388:	0410001d 	ldreq	r0, [r0], #-29	; 0xffffffe3
    338c:	0110001f 	tsteq	r0, pc, lsl r0
    3390:	00005800 	andeq	r5, r0, r0, lsl #16
    3394:	00000000 	andeq	r0, r0, r0
    3398:	01000000 	mrseq	r0, (UNDEF: 0)
    339c:	00000001 	andeq	r0, r0, r1
    33a0:	00000000 	andeq	r0, r0, r0
    33a4:	1dbc0000 	ldcne	0, cr0, [ip]
    33a8:	1e0a1000 	cdpne	0, 0, cr1, cr10, cr0, {0}
    33ac:	00021000 	andeq	r1, r2, r0
    33b0:	1e0a0091 	mcrne	0, 0, r0, cr10, cr1, {4}
    33b4:	1e3a1000 	cdpne	0, 3, cr1, cr10, cr0, {0}
    33b8:	00011000 	andeq	r1, r1, r0
    33bc:	001e3a55 	andseq	r3, lr, r5, asr sl
    33c0:	001e5310 	andseq	r5, lr, r0, lsl r3
    33c4:	74000210 	strvc	r0, [r0], #-528	; 0xfffffdf0
    33c8:	001e530c 	andseq	r5, lr, ip, lsl #6
    33cc:	001e8c10 	andseq	r8, lr, r0, lsl ip
    33d0:	7b000610 	blvc	4c18 <_Min_Stack_Size+0x3c18>
    33d4:	1afc0903 	bne	fff057e8 <__RAM_segment_used_end__+0xc7e057e8>
    33d8:	001e8c9f 	mulseq	lr, pc, ip	; <UNPREDICTABLE>
    33dc:	001e9410 	andseq	r9, lr, r0, lsl r4
    33e0:	74000210 	strvc	r0, [r0], #-528	; 0xfffffdf0
    33e4:	001e940c 	andseq	r9, lr, ip, lsl #8
    33e8:	001f0410 	andseq	r0, pc, r0, lsl r4	; <UNPREDICTABLE>
    33ec:	7b000610 	blvc	4c34 <_Min_Stack_Size+0x3c34>
    33f0:	1afc0903 	bne	fff05804 <__RAM_segment_used_end__+0xc7e05804>
    33f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    3408:	bc000000 	stclt	0, cr0, [r0], {-0}
    340c:	fa10001d 	blx	403488 <__RAM_SIZE+0x303488>
    3410:	0210001d 	andseq	r0, r0, #29
    3414:	fa049100 	blx	12781c <__RAM_SIZE+0x2781c>
    3418:	3810001d 	ldmdacc	r0, {r0, r2, r3, r4}
    341c:	0110001e 	tsteq	r0, lr, lsl r0
    3420:	1e385600 	cfmsuba32ne	mvax0, mvax5, mvfx8, mvfx0
    3424:	1e531000 	cdpne	0, 5, cr1, cr3, cr0, {0}
    3428:	00021000 	andeq	r1, r2, r0
    342c:	1e531474 	mrcne	4, 2, r1, cr3, cr4, {3}
    3430:	1e861000 	cdpne	0, 8, cr1, cr6, cr0, {0}
    3434:	00031000 	andeq	r1, r3, r0
    3438:	8c9f0176 	ldfhis	f0, [pc], {118}	; 0x76
    343c:	9410001e 	ldrls	r0, [r0], #-30	; 0xffffffe2
    3440:	0210001e 	andseq	r0, r0, #30
    3444:	94147400 	ldrls	r7, [r4], #-1024	; 0xfffffc00
    3448:	c210001e 	andsgt	r0, r0, #30
    344c:	0310001e 	tsteq	r0, #30
    3450:	9f017600 	svcls	0x00017600
    3454:	10001ecc 	andne	r1, r0, ip, asr #29
    3458:	10001ed0 	ldrdne	r1, [r0], -r0
    345c:	01760003 	cmneq	r6, r3
    3460:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    346c:	001dbc00 	andseq	fp, sp, r0, lsl #24
    3470:	001e8c10 	andseq	r8, lr, r0, lsl ip
    3474:	91000210 	tstls	r0, r0, lsl r2
    3478:	001e8c08 	andseq	r8, lr, r8, lsl #24
    347c:	001f0410 	andseq	r0, pc, r0, lsl r4	; <UNPREDICTABLE>
    3480:	91000210 	tstls	r0, r0, lsl r2
    3484:	00000008 	andeq	r0, r0, r8
	...
    3490:	001dbc00 	andseq	fp, sp, r0, lsl #24
    3494:	001e8c10 	andseq	r8, lr, r0, lsl ip
    3498:	91000210 	tstls	r0, r0, lsl r2
    349c:	001e8c0c 	andseq	r8, lr, ip, lsl #24
    34a0:	001f0410 	andseq	r0, pc, r0, lsl r4	; <UNPREDICTABLE>
    34a4:	91000210 	tstls	r0, r0, lsl r2
    34a8:	0000000c 	andeq	r0, r0, ip
	...
    34b4:	001dbc00 	andseq	fp, sp, r0, lsl #24
    34b8:	001e8c10 	andseq	r8, lr, r0, lsl ip
    34bc:	91000210 	tstls	r0, r0, lsl r2
    34c0:	001e8c10 	andseq	r8, lr, r0, lsl ip
    34c4:	001f0410 	andseq	r0, pc, r0, lsl r4	; <UNPREDICTABLE>
    34c8:	91000210 	tstls	r0, r0, lsl r2
    34cc:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    34d8:	001dbc00 	andseq	fp, sp, r0, lsl #24
    34dc:	001e8c10 	andseq	r8, lr, r0, lsl ip
    34e0:	91000210 	tstls	r0, r0, lsl r2
    34e4:	001e8c14 	andseq	r8, lr, r4, lsl ip
    34e8:	001f0410 	andseq	r0, pc, r0, lsl r4	; <UNPREDICTABLE>
    34ec:	91000210 	tstls	r0, r0, lsl r2
    34f0:	00000014 	andeq	r0, r0, r4, lsl r0
    34f4:	00000000 	andeq	r0, r0, r0
    34f8:	00000100 	andeq	r0, r0, r0, lsl #2
    34fc:	001e6000 	andseq	r6, lr, r0
    3500:	001e8c10 	andseq	r8, lr, r0, lsl ip
    3504:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    3508:	10001e94 	mulne	r0, r4, lr
    350c:	10001f04 	andne	r1, r0, r4, lsl #30
    3510:	00550001 	subseq	r0, r5, r1
	...
    351c:	001e9800 	andseq	r9, lr, r0, lsl #16
    3520:	001eae10 	andseq	sl, lr, r0, lsl lr
    3524:	52000110 	andpl	r0, r0, #16, 2
	...
    3530:	1e9c0000 	cdpne	0, 9, cr0, cr12, cr0, {0}
    3534:	1eae1000 	cdpne	0, 10, cr1, cr14, cr0, {0}
    3538:	00011000 	andeq	r1, r1, r0
    353c:	00000051 	andeq	r0, r0, r1, asr r0
	...
    3548:	001ec200 	andseq	ip, lr, r0, lsl #4
    354c:	001ecc10 	andseq	ip, lr, r0, lsl ip
    3550:	56000110 			; <UNDEFINED> instruction: 0x56000110
    3554:	10001ed0 	ldrdne	r1, [r0], -r0
    3558:	10001f04 	andne	r1, r0, r4, lsl #30
    355c:	00560001 	subseq	r0, r6, r1
    3560:	00000000 	andeq	r0, r0, r0
    3564:	05000000 	streq	r0, [r0, #-0]
	...
    3570:	d0000000 	andle	r0, r0, r0
    3574:	8610001d 			; <UNDEFINED> instruction: 0x8610001d
    3578:	0210001e 	andseq	r0, r0, #30
    357c:	8c9f3000 	ldchi	0, cr3, [pc], {0}
    3580:	c610001e 			; <UNDEFINED> instruction: 0xc610001e
    3584:	0210001e 	andseq	r0, r0, #30
    3588:	c69f3000 	ldrgt	r3, [pc], r0
    358c:	cc10001e 	ldcgt	0, cr0, [r0], {30}
    3590:	0110001e 	tsteq	r0, lr, lsl r0
    3594:	1ecc5700 	cdpne	7, 12, cr5, cr12, cr0, {0}
    3598:	1ed01000 	cdpne	0, 13, cr1, cr0, cr0, {0}
    359c:	00021000 	andeq	r1, r2, r0
    35a0:	1ed09f30 	mrcne	15, 6, r9, cr0, cr0, {1}
    35a4:	1ee21000 	cdpne	0, 14, cr1, cr2, cr0, {0}
    35a8:	00011000 	andeq	r1, r1, r0
    35ac:	001ee257 	andseq	lr, lr, r7, asr r2
    35b0:	001f0410 	andseq	r0, pc, r0, lsl r4	; <UNPREDICTABLE>
    35b4:	30000210 	andcc	r0, r0, r0, lsl r2
    35b8:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    35bc:	00000000 	andeq	r0, r0, r0
    35c0:	00000100 	andeq	r0, r0, r0, lsl #2
    35c4:	00000000 	andeq	r0, r0, r0
    35c8:	36000000 	strcc	r0, [r0], -r0
    35cc:	5e10001e 	mrcpl	0, 0, r0, cr0, cr14, {0}
    35d0:	0110001e 	tsteq	r0, lr, lsl r0
    35d4:	1e5e5500 	cdpne	5, 5, cr5, cr14, cr0, {0}
    35d8:	1e861000 	cdpne	0, 8, cr1, cr6, cr0, {0}
    35dc:	00091000 	andeq	r1, r9, r0
    35e0:	fc09037b 	stc2	3, cr0, [r9], {123}	; 0x7b
    35e4:	2200761a 	andcs	r7, r0, #27262976	; 0x1a00000
    35e8:	001e8c9f 	mulseq	lr, pc, ip	; <UNPREDICTABLE>
    35ec:	001e9410 	andseq	r9, lr, r0, lsl r4
    35f0:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    35f4:	10001e94 	mulne	r0, r4, lr
    35f8:	10001ec2 	andne	r1, r0, r2, asr #29
    35fc:	037b0009 	cmneq	fp, #9
    3600:	761afc09 	ldrvc	pc, [sl], -r9, lsl #24
    3604:	cc9f2200 	lfmgt	f2, 4, [pc], {0}
    3608:	d010001e 	andsle	r0, r0, lr, lsl r0
    360c:	0910001e 	ldmdbeq	r0, {r1, r2, r3, r4}
    3610:	09037b00 	stmdbeq	r3, {r8, r9, fp, ip, sp, lr}
    3614:	00761afc 	ldrshteq	r1, [r6], #-172	; 0xffffff54
    3618:	00009f22 	andeq	r9, r0, r2, lsr #30
    361c:	00000000 	andeq	r0, r0, r0
    3620:	00010000 	andeq	r0, r1, r0
    3624:	10001dfa 	strdne	r1, [r0], -sl
    3628:	10001f04 	andne	r1, r0, r4, lsl #30
    362c:	005b0001 	subseq	r0, fp, r1
	...
    3640:	001e0200 	andseq	r0, lr, r0, lsl #4
    3644:	001e3a10 	andseq	r3, lr, r0, lsl sl
    3648:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
    364c:	10001e3a 	andne	r1, r0, sl, lsr lr
    3650:	10001e53 	andne	r1, r0, r3, asr lr
    3654:	0c740002 	ldcleq	0, cr0, [r4], #-8
    3658:	10001e53 	andne	r1, r0, r3, asr lr
    365c:	10001e8c 	andne	r1, r0, ip, lsl #29
    3660:	037b0006 	cmneq	fp, #6
    3664:	9f1afc09 	svcls	0x001afc09
    3668:	10001e8c 	andne	r1, r0, ip, lsl #29
    366c:	10001e94 	mulne	r0, r4, lr
    3670:	0c740002 	ldcleq	0, cr0, [r4], #-8
    3674:	10001e94 	mulne	r0, r4, lr
    3678:	10001f04 	andne	r1, r0, r4, lsl #30
    367c:	037b0006 	cmneq	fp, #6
    3680:	9f1afc09 	svcls	0x001afc09
	...
    368c:	00000001 	andeq	r0, r0, r1
    3690:	10001e5e 	andne	r1, r0, lr, asr lr
    3694:	10001e8c 	andne	r1, r0, ip, lsl #29
    3698:	94550001 	ldrbls	r0, [r5], #-1
    369c:	0410001e 	ldreq	r0, [r0], #-30	; 0xffffffe2
    36a0:	0110001f 	tsteq	r0, pc, lsl r0
    36a4:	00005500 	andeq	r5, r0, r0, lsl #10
    36a8:	00000000 	andeq	r0, r0, r0
    36ac:	01000000 	mrseq	r0, (UNDEF: 0)
    36b0:	10001e5e 	andne	r1, r0, lr, asr lr
    36b4:	10001e5e 	andne	r1, r0, lr, asr lr
    36b8:	00550001 	subseq	r0, r5, r1
    36bc:	00000000 	andeq	r0, r0, r0
    36c0:	01000000 	mrseq	r0, (UNDEF: 0)
    36c4:	001e8200 	andseq	r8, lr, r0, lsl #4
    36c8:	001e8610 	andseq	r8, lr, r0, lsl r6
    36cc:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    36d8:	1eb20100 	frdnes	f0, f2, f0
    36dc:	1eb21000 	cdpne	0, 11, cr1, cr2, cr0, {0}
    36e0:	00011000 	andeq	r1, r1, r0
    36e4:	00000052 	andeq	r0, r0, r2, asr r0
    36e8:	00000000 	andeq	r0, r0, r0
    36ec:	d6000100 	strle	r0, [r0], -r0, lsl #2
    36f0:	da10001e 	ble	403770 <__RAM_SIZE+0x303770>
    36f4:	0110001e 	tsteq	r0, lr, lsl r0
    36f8:	00005500 	andeq	r5, r0, r0, lsl #10
    36fc:	00000000 	andeq	r0, r0, r0
    3700:	1f240000 	svcne	0x00240000
    3704:	1f261000 	svcne	0x00261000
    3708:	00021000 	andeq	r1, r2, r0
    370c:	1f26007d 	svcne	0x0026007d
    3710:	1f681000 	svcne	0x00681000
    3714:	00021000 	andeq	r1, r2, r0
    3718:	0000107d 	andeq	r1, r0, sp, ror r0
    371c:	00000000 	andeq	r0, r0, r0
    3720:	00010000 	andeq	r0, r1, r0
    3724:	10001f40 	andne	r1, r0, r0, asr #30
    3728:	10001f5e 	andne	r1, r0, lr, asr pc
    372c:	00550001 	subseq	r0, r5, r1
	...
    3738:	001f2a00 	andseq	r2, pc, r0, lsl #20
    373c:	001f5e10 	andseq	r5, pc, r0, lsl lr	; <UNPREDICTABLE>
    3740:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    374c:	1f480001 	svcne	0x00480001
    3750:	1f571000 	svcne	0x00571000
    3754:	00011000 	andeq	r1, r1, r0
    3758:	00000053 	andeq	r0, r0, r3, asr r0
    375c:	00000000 	andeq	r0, r0, r0
    3760:	48010000 	stmdami	r1, {}	; <UNPREDICTABLE>
    3764:	4810001f 	ldmdami	r0, {r0, r1, r2, r3, r4}
    3768:	0110001f 	tsteq	r0, pc, lsl r0
    376c:	00005300 	andeq	r5, r0, r0, lsl #6
    3770:	00000000 	andeq	r0, r0, r0
    3774:	00010000 	andeq	r0, r1, r0
    3778:	10001f4c 	andne	r1, r0, ip, asr #30
    377c:	10001f50 	andne	r1, r0, r0, asr pc
    3780:	00530001 	subseq	r0, r3, r1
    3784:	00000000 	andeq	r0, r0, r0
    3788:	01000000 	mrseq	r0, (UNDEF: 0)
    378c:	001f3e00 	andseq	r3, pc, r0, lsl #28
    3790:	001f5e10 	andseq	r5, pc, r0, lsl lr	; <UNPREDICTABLE>
    3794:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    37a0:	1f3e0100 	svcne	0x003e0100
    37a4:	1f3e1000 	svcne	0x003e1000
    37a8:	00011000 	andeq	r1, r1, r0
    37ac:	00000055 	andeq	r0, r0, r5, asr r0
    37b0:	00000000 	andeq	r0, r0, r0
    37b4:	58000100 	stmdapl	r0, {r8}
    37b8:	5c10001f 	ldcpl	0, cr0, [r0], {31}
    37bc:	0110001f 	tsteq	r0, pc, lsl r0
    37c0:	00005500 	andeq	r5, r0, r0, lsl #10
    37c4:	00000000 	andeq	r0, r0, r0
    37c8:	1f680000 	svcne	0x00680000
    37cc:	1f6a1000 	svcne	0x006a1000
    37d0:	00021000 	andeq	r1, r2, r0
    37d4:	1f6a007d 	svcne	0x006a007d
    37d8:	1fdc1000 	svcne	0x00dc1000
    37dc:	00021000 	andeq	r1, r2, r0
    37e0:	0000107d 	andeq	r1, r0, sp, ror r0
	...
    3800:	10001f68 	andne	r1, r0, r8, ror #30
    3804:	10001f96 	mulne	r0, r6, pc	; <UNPREDICTABLE>
    3808:	96500001 	ldrbls	r0, [r0], -r1
    380c:	9810001f 	ldmdals	r0, {r0, r1, r2, r3, r4}
    3810:	0410001f 	ldreq	r0, [r0], #-31	; 0xffffffe1
    3814:	5001f300 	andpl	pc, r1, r0, lsl #6
    3818:	001f989f 	mulseq	pc, pc, r8	; <UNPREDICTABLE>
    381c:	001f9e10 	andseq	r9, pc, r0, lsl lr	; <UNPREDICTABLE>
    3820:	50000110 	andpl	r0, r0, r0, lsl r1
    3824:	10001f9e 	mulne	r0, lr, pc	; <UNPREDICTABLE>
    3828:	10001fa0 	andne	r1, r0, r0, lsr #31
    382c:	01f30004 	mvnseq	r0, r4
    3830:	1fa09f50 	svcne	0x00a09f50
    3834:	1fa61000 	svcne	0x00a61000
    3838:	00011000 	andeq	r1, r1, r0
    383c:	001fa650 	andseq	sl, pc, r0, asr r6	; <UNPREDICTABLE>
    3840:	001fa810 	andseq	sl, pc, r0, lsl r8	; <UNPREDICTABLE>
    3844:	f3000410 	vqshl.u8	d0, d0, d0
    3848:	a89f5001 	ldmge	pc, {r0, ip, lr}	; <UNPREDICTABLE>
    384c:	b410001f 	ldrlt	r0, [r0], #-31	; 0xffffffe1
    3850:	0110001f 	tsteq	r0, pc, lsl r0
    3854:	1fb45000 	svcne	0x00b45000
    3858:	1fb61000 	svcne	0x00b61000
    385c:	00041000 	andeq	r1, r4, r0
    3860:	9f5001f3 	svcls	0x005001f3
    3864:	10001fb6 			; <UNDEFINED> instruction: 0x10001fb6
    3868:	10001fbe 			; <UNDEFINED> instruction: 0x10001fbe
    386c:	be500001 	cdplt	0, 5, cr0, cr0, cr1, {0}
    3870:	c110001f 	tstgt	r0, pc, lsl r0
    3874:	0110001f 	tsteq	r0, pc, lsl r0
    3878:	1fc15100 	svcne	0x00c15100
    387c:	1fdc1000 	svcne	0x00dc1000
    3880:	00041000 	andeq	r1, r4, r0
    3884:	9f5001f3 	svcls	0x005001f3
	...
    3890:	1f700001 	svcne	0x00700001
    3894:	1fdc1000 	svcne	0x00dc1000
    3898:	00011000 	andeq	r1, r1, r0
    389c:	00000055 	andeq	r0, r0, r5, asr r0
    38a0:	00000000 	andeq	r0, r0, r0
    38a4:	02000200 	andeq	r0, r0, #0, 4
    38a8:	02000200 	andeq	r0, r0, #0, 4
    38ac:	00000200 	andeq	r0, r0, r0, lsl #4
    38b0:	001f8e00 	andseq	r8, pc, r0, lsl #28
    38b4:	001f9010 	andseq	r9, pc, r0, lsl r0	; <UNPREDICTABLE>
    38b8:	30000210 	andcc	r0, r0, r0, lsl r2
    38bc:	001f949f 	mulseq	pc, pc, r4	; <UNPREDICTABLE>
    38c0:	001f9810 	andseq	r9, pc, r0, lsl r8	; <UNPREDICTABLE>
    38c4:	43000210 	movwmi	r0, #528	; 0x210
    38c8:	001f9c9f 	mulseq	pc, pc, ip	; <UNPREDICTABLE>
    38cc:	001f9e10 	andseq	r9, pc, r0, lsl lr	; <UNPREDICTABLE>
    38d0:	43000210 	movwmi	r0, #528	; 0x210
    38d4:	001fa49f 	mulseq	pc, pc, r4	; <UNPREDICTABLE>
    38d8:	001fa810 	andseq	sl, pc, r0, lsl r8	; <UNPREDICTABLE>
    38dc:	43000210 	movwmi	r0, #528	; 0x210
    38e0:	001fb29f 	mulseq	pc, pc, r2	; <UNPREDICTABLE>
    38e4:	001fb610 	andseq	fp, pc, r0, lsl r6	; <UNPREDICTABLE>
    38e8:	43000210 	movwmi	r0, #528	; 0x210
    38ec:	001fca9f 	mulseq	pc, pc, sl	; <UNPREDICTABLE>
    38f0:	001fdc10 	andseq	sp, pc, r0, lsl ip	; <UNPREDICTABLE>
    38f4:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    3900:	1f740000 	svcne	0x00740000
    3904:	1fdc1000 	svcne	0x00dc1000
    3908:	00011000 	andeq	r1, r1, r0
    390c:	00000054 	andeq	r0, r0, r4, asr r0
    3910:	00000000 	andeq	r0, r0, r0
    3914:	6e000100 	adfvss	f0, f0, f0
    3918:	dc10001f 	ldcle	0, cr0, [r0], {31}
    391c:	0110001f 	tsteq	r0, pc, lsl r0
    3920:	00005500 	andeq	r5, r0, r0, lsl #10
    3924:	00000000 	andeq	r0, r0, r0
    3928:	01000000 	mrseq	r0, (UNDEF: 0)
    392c:	10001f6e 	andne	r1, r0, lr, ror #30
    3930:	10001f6e 	andne	r1, r0, lr, ror #30
    3934:	00550001 	subseq	r0, r5, r1
	...
    3940:	001f7a01 	andseq	r7, pc, r1, lsl #20
    3944:	001f7a10 	andseq	r7, pc, r0, lsl sl	; <UNPREDICTABLE>
    3948:	53000110 	movwpl	r0, #272	; 0x110
	...
    3954:	1f8a0001 	svcne	0x008a0001
    3958:	1f8e1000 	svcne	0x008e1000
    395c:	00011000 	andeq	r1, r1, r0
    3960:	00000055 	andeq	r0, r0, r5, asr r0
    3964:	00000000 	andeq	r0, r0, r0
    3968:	90000100 	andls	r0, r0, r0, lsl #2
    396c:	9410001f 	ldrls	r0, [r0], #-31	; 0xffffffe1
    3970:	0110001f 	tsteq	r0, pc, lsl r0
    3974:	00005500 	andeq	r5, r0, r0, lsl #10
    3978:	00000000 	andeq	r0, r0, r0
    397c:	00010000 	andeq	r0, r1, r0
    3980:	10001f98 	mulne	r0, r8, pc	; <UNPREDICTABLE>
    3984:	10001f9c 	mulne	r0, ip, pc	; <UNPREDICTABLE>
    3988:	00550001 	subseq	r0, r5, r1
    398c:	00000000 	andeq	r0, r0, r0
    3990:	01000000 	mrseq	r0, (UNDEF: 0)
    3994:	001fa000 	andseq	sl, pc, r0
    3998:	001fa410 	andseq	sl, pc, r0, lsl r4	; <UNPREDICTABLE>
    399c:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    39a8:	1fae0001 	svcne	0x00ae0001
    39ac:	1fb21000 	svcne	0x00b21000
    39b0:	00011000 	andeq	r1, r1, r0
    39b4:	00000055 	andeq	r0, r0, r5, asr r0
    39b8:	00000000 	andeq	r0, r0, r0
    39bc:	c2000100 	andgt	r0, r0, #0, 2
    39c0:	c610001f 			; <UNDEFINED> instruction: 0xc610001f
    39c4:	0110001f 	tsteq	r0, pc, lsl r0
    39c8:	00005500 	andeq	r5, r0, r0, lsl #10
    39cc:	00000000 	andeq	r0, r0, r0
    39d0:	1fdc0000 	svcne	0x00dc0000
    39d4:	1ffa1000 	svcne	0x00fa1000
    39d8:	00021000 	andeq	r1, r2, r0
    39dc:	1ffa007d 	svcne	0x00fa007d
    39e0:	20421000 	subcs	r1, r2, r0
    39e4:	00021000 	andeq	r1, r2, r0
    39e8:	20420c7d 	subcs	r0, r2, sp, ror ip
    39ec:	20441000 	subcs	r1, r4, r0
    39f0:	00021000 	andeq	r1, r2, r0
    39f4:	2044007d 	subcs	r0, r4, sp, ror r0
    39f8:	20681000 	rsbcs	r1, r8, r0
    39fc:	00021000 	andeq	r1, r2, r0
    3a00:	00000c7d 	andeq	r0, r0, sp, ror ip
    3a04:	00000000 	andeq	r0, r0, r0
    3a08:	00010000 	andeq	r0, r1, r0
    3a0c:	1fe20001 	svcne	0x00e20001
    3a10:	20061000 	andcs	r1, r6, r0
    3a14:	00011000 	andeq	r1, r1, r0
    3a18:	00203453 	eoreq	r3, r0, r3, asr r4
    3a1c:	00206810 	eoreq	r6, r0, r0, lsl r8
    3a20:	53000110 	movwpl	r0, #272	; 0x110
	...
    3a30:	20060000 	andcs	r0, r6, r0
    3a34:	200c1000 	andcs	r1, ip, r0
    3a38:	00011000 	andeq	r1, r1, r0
    3a3c:	00201652 	eoreq	r1, r0, r2, asr r6
    3a40:	00203c10 	eoreq	r3, r0, r0, lsl ip
    3a44:	52000110 	andpl	r0, r0, #16, 2
    3a48:	10002044 	andne	r2, r0, r4, asr #32
    3a4c:	10002068 	andne	r2, r0, r8, rrx
    3a50:	00520001 	subseq	r0, r2, r1
	...
    3a5c:	001ff400 	andseq	pc, pc, r0, lsl #8
    3a60:	00203810 	eoreq	r3, r0, r0, lsl r8
    3a64:	51000110 	tstpl	r0, r0, lsl r1
	...
    3a74:	1ffe0000 	svcne	0x00fe0000
    3a78:	20241000 	eorcs	r1, r4, r0
    3a7c:	00011000 	andeq	r1, r1, r0
    3a80:	00202656 	eoreq	r2, r0, r6, asr r6
    3a84:	00204210 	eoreq	r4, r0, r0, lsl r2
    3a88:	56000110 			; <UNDEFINED> instruction: 0x56000110
    3a8c:	10002044 	andne	r2, r0, r4, asr #32
    3a90:	10002068 	andne	r2, r0, r8, rrx
    3a94:	00560001 	subseq	r0, r6, r1
	...
    3aa4:	00200600 	eoreq	r0, r0, r0, lsl #12
    3aa8:	00200c10 	eoreq	r0, r0, r0, lsl ip
    3aac:	73000510 	movwvc	r0, #1296	; 0x510
    3ab0:	9f253100 	svcls	0x00253100
    3ab4:	10002012 	andne	r2, r0, r2, lsl r0
    3ab8:	1000201e 	andne	r2, r0, lr, lsl r0
    3abc:	1e540001 	cdpne	0, 5, cr0, cr4, cr1, {0}
    3ac0:	26100020 	ldrcs	r0, [r0], -r0, lsr #32
    3ac4:	05100020 	ldreq	r0, [r0, #-32]	; 0xffffffe0
    3ac8:	31007300 	mrscc	r7, LR_irq
    3acc:	00009f25 	andeq	r9, r0, r5, lsr #30
    3ad0:	00000000 	andeq	r0, r0, r0
    3ad4:	00010000 	andeq	r0, r1, r0
    3ad8:	10001fe0 	andne	r1, r0, r0, ror #31
    3adc:	10002006 	andne	r2, r0, r6
    3ae0:	00530001 	subseq	r0, r3, r1
	...
    3aec:	001fe001 	andseq	lr, pc, r1
    3af0:	001fe010 	andseq	lr, pc, r0, lsl r0	; <UNPREDICTABLE>
    3af4:	53000110 	movwpl	r0, #272	; 0x110
	...
    3b00:	00010001 	andeq	r0, r1, r1
    3b04:	10001fec 	andne	r1, r0, ip, ror #31
    3b08:	10001ff0 	strdne	r1, [r0], -r0
    3b0c:	3c530001 	mrrccc	0, 0, r0, r3, cr1
    3b10:	40100020 	andsmi	r0, r0, r0, lsr #32
    3b14:	01100020 	tsteq	r0, r0, lsr #32
    3b18:	00005300 	andeq	r5, r0, r0, lsl #6
    3b1c:	00000000 	andeq	r0, r0, r0
    3b20:	00010000 	andeq	r0, r1, r0
    3b24:	10002000 	andne	r2, r0, r0
    3b28:	10002006 	andne	r2, r0, r6
    3b2c:	00530001 	subseq	r0, r3, r1
    3b30:	00000000 	andeq	r0, r0, r0
    3b34:	01000000 	mrseq	r0, (UNDEF: 0)
    3b38:	32000000 	andcc	r0, r0, #0
    3b3c:	3c100020 	ldccc	0, cr0, [r0], {32}
    3b40:	01100020 	tsteq	r0, r0, lsr #32
    3b44:	20445300 	subcs	r5, r4, r0, lsl #6
    3b48:	20681000 	rsbcs	r1, r8, r0
    3b4c:	00011000 	andeq	r1, r1, r0
    3b50:	00000053 	andeq	r0, r0, r3, asr r0
    3b54:	00000000 	andeq	r0, r0, r0
    3b58:	32010000 	andcc	r0, r1, #0
    3b5c:	32100020 	andscc	r0, r0, #32
    3b60:	01100020 	tsteq	r0, r0, lsr #32
    3b64:	00005300 	andeq	r5, r0, r0, lsl #6
    3b68:	00000000 	andeq	r0, r0, r0
    3b6c:	20680000 	rsbcs	r0, r8, r0
    3b70:	206a1000 	rsbcs	r1, sl, r0
    3b74:	00021000 	andeq	r1, r2, r0
    3b78:	206a007d 	rsbcs	r0, sl, sp, ror r0
    3b7c:	20841000 	addcs	r1, r4, r0
    3b80:	00021000 	andeq	r1, r2, r0
    3b84:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3b90:	20680000 	rsbcs	r0, r8, r0
    3b94:	20771000 	rsbscs	r1, r7, r0
    3b98:	00011000 	andeq	r1, r1, r0
    3b9c:	00207750 	eoreq	r7, r0, r0, asr r7
    3ba0:	00208410 	eoreq	r8, r0, r0, lsl r4
    3ba4:	f3000410 	vqshl.u8	d0, d0, d0
    3ba8:	009f5001 	addseq	r5, pc, r1
    3bac:	00000000 	andeq	r0, r0, r0
    3bb0:	01000000 	mrseq	r0, (UNDEF: 0)
    3bb4:	00207000 	eoreq	r7, r0, r0
    3bb8:	00207e10 	eoreq	r7, r0, r0, lsl lr
    3bbc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    3bc8:	206e0001 	rsbcs	r0, lr, r1
    3bcc:	207e1000 	rsbscs	r1, lr, r0
    3bd0:	00011000 	andeq	r1, r1, r0
    3bd4:	00000054 	andeq	r0, r0, r4, asr r0
    3bd8:	00000000 	andeq	r0, r0, r0
    3bdc:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    3be0:	6e100020 	cdpvs	0, 1, cr0, cr0, cr0, {1}
    3be4:	01100020 	tsteq	r0, r0, lsr #32
    3be8:	00005400 	andeq	r5, r0, r0, lsl #8
    3bec:	00000000 	andeq	r0, r0, r0
    3bf0:	00010000 	andeq	r0, r1, r0
    3bf4:	10002078 	andne	r2, r0, r8, ror r0
    3bf8:	1000207c 	andne	r2, r0, ip, ror r0
    3bfc:	00540001 	subseq	r0, r4, r1
    3c00:	00000000 	andeq	r0, r0, r0
    3c04:	84000000 	strhi	r0, [r0], #-0
    3c08:	8e100020 	cdphi	0, 1, cr0, cr0, cr0, {1}
    3c0c:	02100020 	andseq	r0, r0, #32
    3c10:	8e007d00 	cdphi	13, 0, cr7, cr0, cr0, {0}
    3c14:	42100020 	andsmi	r0, r0, #32
    3c18:	02100021 	andseq	r0, r0, #33	; 0x21
    3c1c:	42087d00 	andmi	r7, r8, #0, 26
    3c20:	5c100021 	ldcpl	0, cr0, [r0], {33}	; 0x21
    3c24:	02100021 	andseq	r0, r0, #33	; 0x21
    3c28:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    3c34:	88000000 	stmdahi	r0, {}	; <UNPREDICTABLE>
    3c38:	90100020 	andsls	r0, r0, r0, lsr #32
    3c3c:	01100020 	tsteq	r0, r0, lsr #32
    3c40:	21425300 	mrscs	r5, SPSR_svc
    3c44:	215c1000 	cmpcs	ip, r0
    3c48:	00011000 	andeq	r1, r1, r0
    3c4c:	00000053 	andeq	r0, r0, r3, asr r0
    3c50:	00000000 	andeq	r0, r0, r0
    3c54:	92000000 	andls	r0, r0, #0
    3c58:	9e100020 	cdpls	0, 1, cr0, cr0, cr0, {1}
    3c5c:	01100020 	tsteq	r0, r0, lsr #32
    3c60:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    3c6c:	10002096 	mulne	r0, r6, r0
    3c70:	10002142 	andne	r2, r0, r2, asr #2
    3c74:	00540001 	subseq	r0, r4, r1
    3c78:	00000000 	andeq	r0, r0, r0
    3c7c:	01000000 	mrseq	r0, (UNDEF: 0)
    3c80:	01000000 	mrseq	r0, (UNDEF: 0)
    3c84:	a0000100 	andge	r0, r0, r0, lsl #2
    3c88:	b6100020 	ldrlt	r0, [r0], -r0, lsr #32
    3c8c:	01100020 	tsteq	r0, r0, lsr #32
    3c90:	20d85300 	sbcscs	r5, r8, r0, lsl #6
    3c94:	21051000 	mrscs	r1, (UNDEF: 5)
    3c98:	00011000 	andeq	r1, r1, r0
    3c9c:	00210c53 	eoreq	r0, r1, r3, asr ip
    3ca0:	00212510 	eoreq	r2, r1, r0, lsl r5
    3ca4:	53000110 	movwpl	r0, #272	; 0x110
    3ca8:	1000212c 	andne	r2, r0, ip, lsr #2
    3cac:	1000213c 	andne	r2, r0, ip, lsr r1
    3cb0:	00530001 	subseq	r0, r3, r1
    3cb4:	00000000 	andeq	r0, r0, r0
    3cb8:	01000000 	mrseq	r0, (UNDEF: 0)
    3cbc:	00000000 	andeq	r0, r0, r0
    3cc0:	00209e00 	eoreq	r9, r0, r0, lsl #28
    3cc4:	0020aa10 	eoreq	sl, r0, r0, lsl sl
    3cc8:	53000110 	movwpl	r0, #272	; 0x110
    3ccc:	100020d8 	ldrdne	r2, [r0], -r8
    3cd0:	10002105 	andne	r2, r0, r5, lsl #2
    3cd4:	2e530001 	cdpcs	0, 5, cr0, cr3, cr1, {0}
    3cd8:	38100021 	ldmdacc	r0, {r0, r5}
    3cdc:	01100021 	tsteq	r0, r1, lsr #32
    3ce0:	00005300 	andeq	r5, r0, r0, lsl #6
    3ce4:	00000000 	andeq	r0, r0, r0
    3ce8:	01000000 	mrseq	r0, (UNDEF: 0)
    3cec:	1000209e 	mulne	r0, lr, r0
    3cf0:	1000209e 	mulne	r0, lr, r0
    3cf4:	00530001 	subseq	r0, r3, r1
    3cf8:	00000000 	andeq	r0, r0, r0
    3cfc:	01000000 	mrseq	r0, (UNDEF: 0)
    3d00:	0020aa00 	eoreq	sl, r0, r0, lsl #20
    3d04:	0020ae10 	eoreq	sl, r0, r0, lsl lr
    3d08:	53000110 	movwpl	r0, #272	; 0x110
	...
    3d14:	20fc0001 	rscscs	r0, ip, r1
    3d18:	21001000 	mrscs	r1, (UNDEF: 0)
    3d1c:	00011000 	andeq	r1, r1, r0
    3d20:	00000053 	andeq	r0, r0, r3, asr r0
    3d24:	00000000 	andeq	r0, r0, r0
    3d28:	0a010100 	beq	44130 <SYSTICK_CYCLES+0x1b0f1>
    3d2c:	0c100021 	ldceq	0, cr0, [r0], {33}	; 0x21
    3d30:	01100021 	tsteq	r0, r1, lsr #32
    3d34:	00005300 	andeq	r5, r0, r0, lsl #6
    3d38:	00000000 	andeq	r0, r0, r0
    3d3c:	01000000 	mrseq	r0, (UNDEF: 0)
    3d40:	1000210a 	andne	r2, r0, sl, lsl #2
    3d44:	1000210a 	andne	r2, r0, sl, lsl #2
    3d48:	00530001 	subseq	r0, r3, r1
    3d4c:	00000000 	andeq	r0, r0, r0
    3d50:	01000000 	mrseq	r0, (UNDEF: 0)
    3d54:	00211c00 	eoreq	r1, r1, r0, lsl #24
    3d58:	00212010 	eoreq	r2, r1, r0, lsl r0
    3d5c:	53000110 	movwpl	r0, #272	; 0x110
	...
    3d68:	212a0001 			; <UNDEFINED> instruction: 0x212a0001
    3d6c:	212e1000 			; <UNDEFINED> instruction: 0x212e1000
    3d70:	00011000 	andeq	r1, r1, r0
    3d74:	00000053 	andeq	r0, r0, r3, asr r0
    3d78:	00000000 	andeq	r0, r0, r0
    3d7c:	2a010000 	bcs	43d84 <SYSTICK_CYCLES+0x1ad45>
    3d80:	2a100021 	bcs	403e0c <__RAM_SIZE+0x303e0c>
    3d84:	01100021 	tsteq	r0, r1, lsr #32
    3d88:	00005300 	andeq	r5, r0, r0, lsl #6
    3d8c:	00000000 	andeq	r0, r0, r0
    3d90:	00010000 	andeq	r0, r1, r0
    3d94:	100020d0 	ldrdne	r2, [r0], -r0
    3d98:	100020d6 	ldrdne	r2, [r0], -r6
    3d9c:	00530001 	subseq	r0, r3, r1
	...
    3da8:	0020ca01 	eoreq	ip, r0, r1, lsl #20
    3dac:	0020ca10 	eoreq	ip, r0, r0, lsl sl
    3db0:	53000110 	movwpl	r0, #272	; 0x110
	...
    3dbc:	20d00100 	sbcscs	r0, r0, r0, lsl #2
    3dc0:	20d01000 	sbcscs	r1, r0, r0
    3dc4:	00011000 	andeq	r1, r1, r0
    3dc8:	00000053 	andeq	r0, r0, r3, asr r0
    3dcc:	00000000 	andeq	r0, r0, r0
    3dd0:	d2000100 	andle	r0, r0, #0, 2
    3dd4:	d6100020 	ldrle	r0, [r0], -r0, lsr #32
    3dd8:	01100020 	tsteq	r0, r0, lsr #32
    3ddc:	00005300 	andeq	r5, r0, r0, lsl #6
    3de0:	00000000 	andeq	r0, r0, r0
    3de4:	215c0000 	cmpcs	ip, r0
    3de8:	215e1000 	cmpcs	lr, r0
    3dec:	00021000 	andeq	r1, r2, r0
    3df0:	215e007d 	cmpcs	lr, sp, ror r0
    3df4:	24841000 	strcs	r1, [r4], #0
    3df8:	00021000 	andeq	r1, r2, r0
    3dfc:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    3e08:	01000000 	mrseq	r0, (UNDEF: 0)
    3e0c:	00000001 	andeq	r0, r0, r1
    3e10:	1000215c 	andne	r2, r0, ip, asr r1
    3e14:	10002166 	andne	r2, r0, r6, ror #2
    3e18:	66500001 	ldrbvs	r0, [r0], -r1
    3e1c:	86100021 	ldrhi	r0, [r0], -r1, lsr #32
    3e20:	01100023 	tsteq	r0, r3, lsr #32
    3e24:	23865400 	orrcs	r5, r6, #0, 8
    3e28:	23ac1000 			; <UNDEFINED> instruction: 0x23ac1000
    3e2c:	00041000 	andeq	r1, r4, r0
    3e30:	9f5001f3 	svcls	0x005001f3
    3e34:	100023ac 	andne	r2, r0, ip, lsr #7
    3e38:	100023ea 	andne	r2, r0, sl, ror #7
    3e3c:	24540001 	ldrbcs	r0, [r4], #-1
    3e40:	84100024 	ldrhi	r0, [r0], #-36	; 0xffffffdc
    3e44:	01100024 	tsteq	r0, r4, lsr #32
    3e48:	00005400 	andeq	r5, r0, r0, lsl #8
	...
    3e58:	21920000 	orrscs	r0, r2, r0
    3e5c:	21b01000 	movscs	r1, r0
    3e60:	00011000 	andeq	r1, r1, r0
    3e64:	0021b052 	eoreq	fp, r1, r2, asr r0
    3e68:	0021b210 	eoreq	fp, r1, r0, lsl r2
    3e6c:	74000210 	strvc	r0, [r0], #-528	; 0xfffffdf0
    3e70:	00221a2c 	eoreq	r1, r2, ip, lsr #20
    3e74:	00225410 	eoreq	r5, r2, r0, lsl r4
    3e78:	52000110 	andpl	r0, r0, #16, 2
    3e7c:	100022e6 	andne	r2, r0, r6, ror #5
    3e80:	100022ec 	andne	r2, r0, ip, ror #5
    3e84:	00520001 	subseq	r0, r2, r1
	...
    3e94:	00222a00 	eoreq	r2, r2, r0, lsl #20
    3e98:	00224a10 	eoreq	r4, r2, r0, lsl sl
    3e9c:	51000110 	tstpl	r0, r0, lsl r1
    3ea0:	1000224a 	andne	r2, r0, sl, asr #4
    3ea4:	10002254 	andne	r2, r0, r4, asr r2
    3ea8:	72310005 	eorsvc	r0, r1, #5
    3eac:	e69f2400 	ldr	r2, [pc], r0, lsl #8
    3eb0:	ec100022 	ldc	0, cr0, [r0], {34}	; 0x22
    3eb4:	01100022 	tsteq	r0, r2, lsr #32
    3eb8:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    3ec8:	100021aa 	andne	r2, r0, sl, lsr #3
    3ecc:	100021ba 			; <UNDEFINED> instruction: 0x100021ba
    3ed0:	1a530001 	bne	14c3edc <__RAM_SIZE+0x13c3edc>
    3ed4:	1c100022 	ldcne	0, cr0, [r0], {34}	; 0x22
    3ed8:	01100022 	tsteq	r0, r2, lsr #32
    3edc:	221c5300 	andscs	r5, ip, #0, 6
    3ee0:	22201000 	eorcs	r1, r0, #0
    3ee4:	00071000 	andeq	r1, r7, r0
    3ee8:	24320072 	ldrtcs	r0, [r2], #-114	; 0xffffff8e
    3eec:	00220073 	eoreq	r0, r2, r3, ror r0
	...
    3ef8:	0021b000 	eoreq	fp, r1, r0
    3efc:	0021ba10 	eoreq	fp, r1, r0, lsl sl
    3f00:	52000110 	andpl	r0, r0, #16, 2
	...
    3f14:	22440000 	subcs	r0, r4, #0
    3f18:	22741000 	rsbscs	r1, r4, #0
    3f1c:	00011000 	andeq	r1, r1, r0
    3f20:	00227453 	eoreq	r7, r2, r3, asr r4
    3f24:	00227610 	eoreq	r7, r2, r0, lsl r6
    3f28:	73000210 	movwvc	r0, #528	; 0x210
    3f2c:	0022e600 	eoreq	lr, r2, r0, lsl #12
    3f30:	0022e810 	eoreq	lr, r2, r0, lsl r8
    3f34:	53000110 	movwpl	r0, #272	; 0x110
    3f38:	100022e8 	andne	r2, r0, r8, ror #5
    3f3c:	100022ea 	andne	r2, r0, sl, ror #5
    3f40:	00730002 	rsbseq	r0, r3, r2
    3f44:	100022ec 	andne	r2, r0, ip, ror #5
    3f48:	10002310 	andne	r2, r0, r0, lsl r3
    3f4c:	00530001 	subseq	r0, r3, r1
	...
    3f58:	0023a800 	eoreq	sl, r3, r0, lsl #16
    3f5c:	0023b010 	eoreq	fp, r3, r0, lsl r0
    3f60:	53000110 	movwpl	r0, #272	; 0x110
	...
    3f70:	100022b6 			; <UNDEFINED> instruction: 0x100022b6
    3f74:	100022c0 	andne	r2, r0, r0, asr #5
    3f78:	c4530001 	ldrbgt	r0, [r3], #-1
    3f7c:	ca100023 	bgt	404010 <__RAM_SIZE+0x304010>
    3f80:	01100023 	tsteq	r0, r3, lsr #32
    3f84:	00005300 	andeq	r5, r0, r0, lsl #6
    3f88:	00000000 	andeq	r0, r0, r0
    3f8c:	00010000 	andeq	r0, r1, r0
    3f90:	00010000 	andeq	r0, r1, r0
    3f94:	21700001 	cmncs	r0, r1
    3f98:	21801000 	orrcs	r1, r0, r0
    3f9c:	00011000 	andeq	r1, r1, r0
    3fa0:	0021ba53 	eoreq	fp, r1, r3, asr sl
    3fa4:	0021e710 	eoreq	lr, r1, r0, lsl r7
    3fa8:	53000110 	movwpl	r0, #272	; 0x110
    3fac:	100021ee 	andne	r2, r0, lr, ror #3
    3fb0:	10002207 	andne	r2, r0, r7, lsl #4
    3fb4:	0e530001 	cdpeq	0, 5, cr0, cr3, cr1, {0}
    3fb8:	1a100022 	bne	404048 <__RAM_SIZE+0x304048>
    3fbc:	01100022 	tsteq	r0, r2, lsr #32
    3fc0:	00005300 	andeq	r5, r0, r0, lsl #6
    3fc4:	00000000 	andeq	r0, r0, r0
    3fc8:	00010000 	andeq	r0, r1, r0
    3fcc:	00000000 	andeq	r0, r0, r0
    3fd0:	1000216e 	andne	r2, r0, lr, ror #2
    3fd4:	1000217a 	andne	r2, r0, sl, ror r1
    3fd8:	ba530001 	blt	14c3fe4 <__RAM_SIZE+0x13c3fe4>
    3fdc:	e7100021 	ldr	r0, [r0, -r1, lsr #32]
    3fe0:	01100021 	tsteq	r0, r1, lsr #32
    3fe4:	22105300 	andscs	r5, r0, #0, 6
    3fe8:	221a1000 	andscs	r1, sl, #0
    3fec:	00011000 	andeq	r1, r1, r0
    3ff0:	00000053 	andeq	r0, r0, r3, asr r0
    3ff4:	00000000 	andeq	r0, r0, r0
    3ff8:	6e010000 	cdpvs	0, 0, cr0, cr1, cr0, {0}
    3ffc:	6e100021 	cdpvs	0, 1, cr0, cr0, cr1, {1}
    4000:	01100021 	tsteq	r0, r1, lsr #32
    4004:	00005300 	andeq	r5, r0, r0, lsl #6
    4008:	00000000 	andeq	r0, r0, r0
    400c:	00010000 	andeq	r0, r1, r0
    4010:	1000217a 	andne	r2, r0, sl, ror r1
    4014:	1000217e 	andne	r2, r0, lr, ror r1
    4018:	00530001 	subseq	r0, r3, r1
    401c:	00000000 	andeq	r0, r0, r0
    4020:	01000000 	mrseq	r0, (UNDEF: 0)
    4024:	0021de00 	eoreq	sp, r1, r0, lsl #28
    4028:	0021e210 	eoreq	lr, r1, r0, lsl r2
    402c:	53000110 	movwpl	r0, #272	; 0x110
	...
    4038:	21ec0101 	mvncs	r0, r1, lsl #2
    403c:	21ee1000 	mvncs	r1, r0
    4040:	00011000 	andeq	r1, r1, r0
    4044:	00000053 	andeq	r0, r0, r3, asr r0
    4048:	00000000 	andeq	r0, r0, r0
    404c:	ec010000 	stc	0, cr0, [r1], {-0}
    4050:	ec100021 	ldc	0, cr0, [r0], {33}	; 0x21
    4054:	01100021 	tsteq	r0, r1, lsr #32
    4058:	00005300 	andeq	r5, r0, r0, lsl #6
    405c:	00000000 	andeq	r0, r0, r0
    4060:	00010000 	andeq	r0, r1, r0
    4064:	100021fe 	strdne	r2, [r0], -lr
    4068:	10002202 	andne	r2, r0, r2, lsl #4
    406c:	00530001 	subseq	r0, r3, r1
    4070:	00000000 	andeq	r0, r0, r0
    4074:	01000000 	mrseq	r0, (UNDEF: 0)
    4078:	00220c00 	eoreq	r0, r2, r0, lsl #24
    407c:	00221010 	eoreq	r1, r2, r0, lsl r0
    4080:	53000110 	movwpl	r0, #272	; 0x110
	...
    408c:	220c0100 	andcs	r0, ip, #0, 2
    4090:	220c1000 	andcs	r1, ip, #0
    4094:	00011000 	andeq	r1, r1, r0
    4098:	00000053 	andeq	r0, r0, r3, asr r0
    409c:	00000000 	andeq	r0, r0, r0
    40a0:	00000100 	andeq	r0, r0, r0, lsl #2
    40a4:	01000100 	mrseq	r0, (UNDEF: 16)
    40a8:	0022a400 	eoreq	sl, r2, r0, lsl #8
    40ac:	0022b410 	eoreq	fp, r2, r0, lsl r4
    40b0:	53000110 	movwpl	r0, #272	; 0x110
    40b4:	10002310 	andne	r2, r0, r0, lsl r3
    40b8:	1000233d 	andne	r2, r0, sp, lsr r3
    40bc:	44530001 	ldrbmi	r0, [r3], #-1
    40c0:	5d100023 	ldcpl	0, cr0, [r0, #-140]	; 0xffffff74
    40c4:	01100023 	tsteq	r0, r3, lsr #32
    40c8:	23645300 	cmncs	r4, #0, 6
    40cc:	23701000 	cmncs	r0, #0
    40d0:	00011000 	andeq	r1, r1, r0
    40d4:	00000053 	andeq	r0, r0, r3, asr r0
    40d8:	00000000 	andeq	r0, r0, r0
    40dc:	00000100 	andeq	r0, r0, r0, lsl #2
    40e0:	a2000000 	andge	r0, r0, #0
    40e4:	ae100022 	cdpge	0, 1, cr0, cr0, cr2, {1}
    40e8:	01100022 	tsteq	r0, r2, lsr #32
    40ec:	23105300 	tstcs	r0, #0, 6
    40f0:	233d1000 	teqcs	sp, #0
    40f4:	00011000 	andeq	r1, r1, r0
    40f8:	00236653 	eoreq	r6, r3, r3, asr r6
    40fc:	00237010 	eoreq	r7, r3, r0, lsl r0
    4100:	53000110 	movwpl	r0, #272	; 0x110
	...
    410c:	22a20100 	adccs	r0, r2, #0, 2
    4110:	22a21000 	adccs	r1, r2, #0
    4114:	00011000 	andeq	r1, r1, r0
    4118:	00000053 	andeq	r0, r0, r3, asr r0
    411c:	00000000 	andeq	r0, r0, r0
    4120:	ae000100 	adfges	f0, f0, f0
    4124:	b2100022 	andslt	r0, r0, #34	; 0x22
    4128:	01100022 	tsteq	r0, r2, lsr #32
    412c:	00005300 	andeq	r5, r0, r0, lsl #6
    4130:	00000000 	andeq	r0, r0, r0
    4134:	00010000 	andeq	r0, r1, r0
    4138:	10002334 	andne	r2, r0, r4, lsr r3
    413c:	10002338 	andne	r2, r0, r8, lsr r3
    4140:	00530001 	subseq	r0, r3, r1
    4144:	00000000 	andeq	r0, r0, r0
    4148:	01000000 	mrseq	r0, (UNDEF: 0)
    414c:	00234201 	eoreq	r4, r3, r1, lsl #4
    4150:	00234410 	eoreq	r4, r3, r0, lsl r4
    4154:	53000110 	movwpl	r0, #272	; 0x110
	...
    4160:	23420100 	movtcs	r0, #8448	; 0x2100
    4164:	23421000 	movtcs	r1, #8192	; 0x2000
    4168:	00011000 	andeq	r1, r1, r0
    416c:	00000053 	andeq	r0, r0, r3, asr r0
    4170:	00000000 	andeq	r0, r0, r0
    4174:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
    4178:	58100023 	ldmdapl	r0, {r0, r1, r5}
    417c:	01100023 	tsteq	r0, r3, lsr #32
    4180:	00005300 	andeq	r5, r0, r0, lsl #6
    4184:	00000000 	andeq	r0, r0, r0
    4188:	00010000 	andeq	r0, r1, r0
    418c:	10002362 	andne	r2, r0, r2, ror #6
    4190:	10002366 	andne	r2, r0, r6, ror #6
    4194:	00530001 	subseq	r0, r3, r1
	...
    41a0:	00236201 	eoreq	r6, r3, r1, lsl #4
    41a4:	00236210 	eoreq	r6, r3, r0, lsl r2
    41a8:	53000110 	movwpl	r0, #272	; 0x110
	...
    41b4:	00000001 	andeq	r0, r0, r1
    41b8:	00010001 	andeq	r0, r1, r1
    41bc:	100023b2 			; <UNDEFINED> instruction: 0x100023b2
    41c0:	100023c2 	andne	r2, r0, r2, asr #7
    41c4:	24530001 	ldrbcs	r0, [r3], #-1
    41c8:	51100024 	tstpl	r0, r4, lsr #32
    41cc:	01100024 	tsteq	r0, r4, lsr #32
    41d0:	24585300 	ldrbcs	r5, [r8], #-768	; 0xfffffd00
    41d4:	24711000 	ldrbtcs	r1, [r1], #-0
    41d8:	00011000 	andeq	r1, r1, r0
    41dc:	00247853 	eoreq	r7, r4, r3, asr r8
    41e0:	00248410 	eoreq	r8, r4, r0, lsl r4
    41e4:	53000110 	movwpl	r0, #272	; 0x110
	...
    41f0:	00000001 	andeq	r0, r0, r1
    41f4:	23b00000 	movscs	r0, #0
    41f8:	23bc1000 			; <UNDEFINED> instruction: 0x23bc1000
    41fc:	00011000 	andeq	r1, r1, r0
    4200:	00242453 	eoreq	r2, r4, r3, asr r4
    4204:	00245110 	eoreq	r5, r4, r0, lsl r1
    4208:	53000110 	movwpl	r0, #272	; 0x110
    420c:	1000247a 	andne	r2, r0, sl, ror r4
    4210:	10002484 	andne	r2, r0, r4, lsl #9
    4214:	00530001 	subseq	r0, r3, r1
	...
    4220:	0023b001 	eoreq	fp, r3, r1
    4224:	0023b010 	eoreq	fp, r3, r0, lsl r0
    4228:	53000110 	movwpl	r0, #272	; 0x110
	...
    4234:	23bc0001 			; <UNDEFINED> instruction: 0x23bc0001
    4238:	23c01000 	biccs	r1, r0, #0
    423c:	00011000 	andeq	r1, r1, r0
    4240:	00000053 	andeq	r0, r0, r3, asr r0
    4244:	00000000 	andeq	r0, r0, r0
    4248:	48000100 	stmdami	r0, {r8}
    424c:	4c100024 	ldcmi	0, cr0, [r0], {36}	; 0x24
    4250:	01100024 	tsteq	r0, r4, lsr #32
    4254:	00005300 	andeq	r5, r0, r0, lsl #6
    4258:	00000000 	andeq	r0, r0, r0
    425c:	01010000 	mrseq	r0, (UNDEF: 1)
    4260:	10002456 	andne	r2, r0, r6, asr r4
    4264:	10002458 	andne	r2, r0, r8, asr r4
    4268:	00530001 	subseq	r0, r3, r1
	...
    4274:	00245601 	eoreq	r5, r4, r1, lsl #12
    4278:	00245610 	eoreq	r5, r4, r0, lsl r6
    427c:	53000110 	movwpl	r0, #272	; 0x110
	...
    4288:	24680001 	strbtcs	r0, [r8], #-1
    428c:	246c1000 	strbtcs	r1, [ip], #-0
    4290:	00011000 	andeq	r1, r1, r0
    4294:	00000053 	andeq	r0, r0, r3, asr r0
    4298:	00000000 	andeq	r0, r0, r0
    429c:	76000100 	strvc	r0, [r0], -r0, lsl #2
    42a0:	7a100024 	bvc	404338 <__RAM_SIZE+0x304338>
    42a4:	01100024 	tsteq	r0, r4, lsr #32
    42a8:	00005300 	andeq	r5, r0, r0, lsl #6
    42ac:	00000000 	andeq	r0, r0, r0
    42b0:	01000000 	mrseq	r0, (UNDEF: 0)
    42b4:	10002476 	andne	r2, r0, r6, ror r4
    42b8:	10002476 	andne	r2, r0, r6, ror r4
    42bc:	00530001 	subseq	r0, r3, r1
	...
    42c8:	00225401 	eoreq	r5, r2, r1, lsl #8
    42cc:	00225410 	eoreq	r5, r2, r0, lsl r4
    42d0:	52000110 	andpl	r0, r0, #16, 2
	...
    42dc:	22de0001 	sbcscs	r0, lr, #1
    42e0:	22e61000 	rsccs	r1, r6, #0
    42e4:	00011000 	andeq	r1, r1, r0
    42e8:	00000053 	andeq	r0, r0, r3, asr r0
    42ec:	00000000 	andeq	r0, r0, r0
    42f0:	d4010000 	strle	r0, [r1], #-0
    42f4:	d4100022 	ldrle	r0, [r0], #-34	; 0xffffffde
    42f8:	01100022 	tsteq	r0, r2, lsr #32
    42fc:	00005300 	andeq	r5, r0, r0, lsl #6
    4300:	00000000 	andeq	r0, r0, r0
    4304:	01000000 	mrseq	r0, (UNDEF: 0)
    4308:	100022de 	ldrdne	r2, [r0], -lr
    430c:	100022de 	ldrdne	r2, [r0], -lr
    4310:	00530001 	subseq	r0, r3, r1
    4314:	00000000 	andeq	r0, r0, r0
    4318:	01000000 	mrseq	r0, (UNDEF: 0)
    431c:	0022e000 	eoreq	lr, r2, r0
    4320:	0022e410 	eoreq	lr, r2, r0, lsl r4
    4324:	53000110 	movwpl	r0, #272	; 0x110
	...
    4330:	22f00100 	rscscs	r0, r0, #0, 2
    4334:	22f01000 	rscscs	r1, r0, #0
    4338:	00011000 	andeq	r1, r1, r0
    433c:	00000051 	andeq	r0, r0, r1, asr r0
    4340:	00000000 	andeq	r0, r0, r0
    4344:	e4000100 	str	r0, [r0], #-256	; 0xffffff00
    4348:	ea100023 	b	4043dc <__RAM_SIZE+0x3043dc>
    434c:	01100023 	tsteq	r0, r3, lsr #32
    4350:	00005300 	andeq	r5, r0, r0, lsl #6
    4354:	00000000 	andeq	r0, r0, r0
    4358:	01000000 	mrseq	r0, (UNDEF: 0)
    435c:	100023de 	ldrdne	r2, [r0], -lr
    4360:	100023de 	ldrdne	r2, [r0], -lr
    4364:	00530001 	subseq	r0, r3, r1
	...
    4370:	0023e401 	eoreq	lr, r3, r1, lsl #8
    4374:	0023e410 	eoreq	lr, r3, r0, lsl r4
    4378:	53000110 	movwpl	r0, #272	; 0x110
	...
    4384:	23e60001 	mvncs	r0, #1
    4388:	23ea1000 	mvncs	r1, #0
    438c:	00011000 	andeq	r1, r1, r0
    4390:	00000053 	andeq	r0, r0, r3, asr r0
	...
    43a0:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    43ac:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    43b0:	00000008 	andeq	r0, r0, r8
	...
    43c4:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    43d0:	01f30004 	mvnseq	r0, r4
    43d4:	00009f50 	andeq	r9, r0, r0, asr pc
    43d8:	00000000 	andeq	r0, r0, r0
    43dc:	00010000 	andeq	r0, r1, r0
	...
    43e8:	00540001 	subseq	r0, r4, r1
	...
    43fc:	01000000 	mrseq	r0, (UNDEF: 0)
    4400:	00005300 	andeq	r5, r0, r0, lsl #6
    4404:	00000000 	andeq	r0, r0, r0
    4408:	00020000 	andeq	r0, r2, r0
    440c:	00003070 	andeq	r3, r0, r0, ror r0
    4410:	00000000 	andeq	r0, r0, r0
    4414:	00010000 	andeq	r0, r1, r0
	...
    4420:	00540001 	subseq	r0, r4, r1
	...
    442c:	00000001 	andeq	r0, r0, r1
    4430:	00000000 	andeq	r0, r0, r0
    4434:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
    4440:	00000001 	andeq	r0, r0, r1
    4444:	00000000 	andeq	r0, r0, r0
    4448:	00010000 	andeq	r0, r1, r0
    444c:	00000054 	andeq	r0, r0, r4, asr r0
    4450:	00000000 	andeq	r0, r0, r0
    4454:	00248400 	eoreq	r8, r4, r0, lsl #8
    4458:	00248610 	eoreq	r8, r4, r0, lsl r6
    445c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    4460:	00248600 	eoreq	r8, r4, r0, lsl #12
    4464:	00274410 	eoreq	r4, r7, r0, lsl r4
    4468:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    446c:	00000010 	andeq	r0, r0, r0, lsl r0
	...
    4478:	00000101 	andeq	r0, r0, r1, lsl #2
	...
    4484:	00248400 	eoreq	r8, r4, r0, lsl #8
    4488:	00249010 	eoreq	r9, r4, r0, lsl r0
    448c:	50000110 	andpl	r0, r0, r0, lsl r1
    4490:	10002490 	mulne	r0, r0, r4
    4494:	10002506 	andne	r2, r0, r6, lsl #10
    4498:	06540001 	ldrbeq	r0, [r4], -r1
    449c:	50100025 	andspl	r0, r0, r5, lsr #32
    44a0:	01100025 	tsteq	r0, r5, lsr #32
    44a4:	25525500 	ldrbcs	r5, [r2, #-1280]	; 0xfffffb00
    44a8:	255a1000 	ldrbcs	r1, [sl, #-0]
    44ac:	00011000 	andeq	r1, r1, r0
    44b0:	00255a50 	eoreq	r5, r5, r0, asr sl
    44b4:	00256210 	eoreq	r6, r5, r0, lsl r2
    44b8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    44bc:	10002562 	andne	r2, r0, r2, ror #10
    44c0:	10002566 	andne	r2, r0, r6, ror #10
    44c4:	66500001 	ldrbvs	r0, [r0], -r1
    44c8:	a2100025 	andsge	r0, r0, #37	; 0x25
    44cc:	01100026 	tsteq	r0, r6, lsr #32
    44d0:	26a25400 	strtcs	r5, [r2], r0, lsl #8
    44d4:	27441000 	strbcs	r1, [r4, -r0]
    44d8:	00011000 	andeq	r1, r1, r0
    44dc:	00000055 	andeq	r0, r0, r5, asr r0
	...
    44f0:	00248400 	eoreq	r8, r4, r0, lsl #8
    44f4:	00249010 	eoreq	r9, r4, r0, lsl r0
    44f8:	51000110 	tstpl	r0, r0, lsl r1
    44fc:	10002490 	mulne	r0, r0, r4
    4500:	10002552 	andne	r2, r0, r2, asr r5
    4504:	01f30004 	mvnseq	r0, r4
    4508:	25529f51 	ldrbcs	r9, [r2, #-3921]	; 0xfffff0af
    450c:	255a1000 	ldrbcs	r1, [sl, #-0]
    4510:	00011000 	andeq	r1, r1, r0
    4514:	00255a51 	eoreq	r5, r5, r1, asr sl
    4518:	00256210 	eoreq	r6, r5, r0, lsl r2
    451c:	f3000410 	vqshl.u8	d0, d0, d0
    4520:	629f5101 	addsvs	r5, pc, #1073741824	; 0x40000000
    4524:	69100025 	ldmdbvs	r0, {r0, r2, r5}
    4528:	01100025 	tsteq	r0, r5, lsr #32
    452c:	25695100 	strbcs	r5, [r9, #-256]!	; 0xffffff00
    4530:	27441000 	strbcs	r1, [r4, -r0]
    4534:	00041000 	andeq	r1, r4, r0
    4538:	9f5101f3 	svcls	0x005101f3
	...
    4548:	100024b8 			; <UNDEFINED> instruction: 0x100024b8
    454c:	100024d0 	ldrdne	r2, [r0], -r0
    4550:	ce520001 	cdpgt	0, 5, cr0, cr2, cr1, {0}
    4554:	e6100025 	ldr	r0, [r0], -r5, lsr #32
    4558:	01100025 	tsteq	r0, r5, lsr #32
    455c:	00005200 	andeq	r5, r0, r0, lsl #4
    4560:	00000000 	andeq	r0, r0, r0
    4564:	00010000 	andeq	r0, r1, r0
    4568:	100025ec 	andne	r2, r0, ip, ror #11
    456c:	10002638 	andne	r2, r0, r8, lsr r6
    4570:	9f300002 	svcls	0x00300002
	...
    457c:	00000002 	andeq	r0, r0, r2
    4580:	25ec0000 	strbcs	r0, [ip, #0]!
    4584:	25f61000 	ldrbcs	r1, [r6, #0]!
    4588:	00011000 	andeq	r1, r1, r0
    458c:	0025fc52 	eoreq	pc, r5, r2, asr ip	; <UNPREDICTABLE>
    4590:	00260010 	eoreq	r0, r6, r0, lsl r0
    4594:	52000110 	andpl	r0, r0, #16, 2
    4598:	10002600 	andne	r2, r0, r0, lsl #12
    459c:	10002624 	andne	r2, r0, r4, lsr #12
    45a0:	00710002 	rsbseq	r0, r1, r2
	...
    45b0:	25e20000 	strbcs	r0, [r2, #0]!
    45b4:	25f61000 	ldrbcs	r1, [r6, #0]!
    45b8:	00011000 	andeq	r1, r1, r0
    45bc:	0025f653 	eoreq	pc, r5, r3, asr r6	; <UNPREDICTABLE>
    45c0:	0025fc10 	eoreq	pc, r5, r0, lsl ip	; <UNPREDICTABLE>
    45c4:	52000110 	andpl	r0, r0, #16, 2
    45c8:	100025fc 	strdne	r2, [r0], -ip
    45cc:	100025fe 	strdne	r2, [r0], -lr
    45d0:	00530001 	subseq	r0, r3, r1
	...
    45e0:	00252000 	eoreq	r2, r5, r0
    45e4:	00252410 	eoreq	r2, r5, r0, lsl r4
    45e8:	53000110 	movwpl	r0, #272	; 0x110
    45ec:	1000260c 	andne	r2, r0, ip, lsl #12
    45f0:	10002614 	andne	r2, r0, r4, lsl r6
    45f4:	72530001 	subsvc	r0, r3, #1
    45f8:	7c100026 	ldcvc	0, cr0, [r0], {38}	; 0x26
    45fc:	01100026 	tsteq	r0, r6, lsr #32
    4600:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    4610:	100024ba 			; <UNDEFINED> instruction: 0x100024ba
    4614:	100024d0 	ldrdne	r2, [r0], -r0
    4618:	ce530001 	cdpgt	0, 5, cr0, cr3, cr1, {0}
    461c:	d8100025 	ldmdale	r0, {r0, r2, r5}
    4620:	01100025 	tsteq	r0, r5, lsr #32
    4624:	25d85300 	ldrbcs	r5, [r8, #768]	; 0x300
    4628:	25de1000 	ldrbcs	r1, [lr]
    462c:	00021000 	andeq	r1, r2, r0
    4630:	00002074 	andeq	r2, r0, r4, ror r0
	...
    463c:	100024c2 	andne	r2, r0, r2, asr #9
    4640:	100024c8 	andne	r2, r0, r8, asr #9
    4644:	00510001 	subseq	r0, r1, r1
	...
    4650:	00248c00 	eoreq	r8, r4, r0, lsl #24
    4654:	00274410 	eoreq	r4, r7, r0, lsl r4
    4658:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    4664:	00000001 	andeq	r0, r0, r1
    4668:	00010001 	andeq	r0, r1, r1
    466c:	10002496 	mulne	r0, r6, r4
    4670:	100024a8 	andne	r2, r0, r8, lsr #9
    4674:	6c530001 	mrrcvs	0, 0, r0, r3, cr1
    4678:	99100025 	ldmdbls	r0, {r0, r2, r5}
    467c:	01100025 	tsteq	r0, r5, lsr #32
    4680:	25a05300 	strcs	r5, [r0, #768]!	; 0x300
    4684:	25bb1000 	ldrcs	r1, [fp, #0]!
    4688:	00011000 	andeq	r1, r1, r0
    468c:	0025c253 	eoreq	ip, r5, r3, asr r2
    4690:	0025ce10 	eoreq	ip, r5, r0, lsl lr
    4694:	53000110 	movwpl	r0, #272	; 0x110
	...
    46a0:	00000001 	andeq	r0, r0, r1
    46a4:	24940000 	ldrcs	r0, [r4], #0
    46a8:	24a01000 	strtcs	r1, [r0], #0
    46ac:	00011000 	andeq	r1, r1, r0
    46b0:	00256c53 	eoreq	r6, r5, r3, asr ip
    46b4:	00259910 	eoreq	r9, r5, r0, lsl r9
    46b8:	53000110 	movwpl	r0, #272	; 0x110
    46bc:	100025c4 	andne	r2, r0, r4, asr #11
    46c0:	100025ce 	andne	r2, r0, lr, asr #11
    46c4:	00530001 	subseq	r0, r3, r1
	...
    46d0:	00249401 	eoreq	r9, r4, r1, lsl #8
    46d4:	00249410 	eoreq	r9, r4, r0, lsl r4
    46d8:	53000110 	movwpl	r0, #272	; 0x110
	...
    46e4:	24a00001 	strtcs	r0, [r0], #1
    46e8:	24a41000 	strtcs	r1, [r4], #0
    46ec:	00011000 	andeq	r1, r1, r0
    46f0:	00000053 	andeq	r0, r0, r3, asr r0
    46f4:	00000000 	andeq	r0, r0, r0
    46f8:	90000100 	andls	r0, r0, r0, lsl #2
    46fc:	94100025 	ldrls	r0, [r0], #-37	; 0xffffffdb
    4700:	01100025 	tsteq	r0, r5, lsr #32
    4704:	00005300 	andeq	r5, r0, r0, lsl #6
    4708:	00000000 	andeq	r0, r0, r0
    470c:	01010000 	mrseq	r0, (UNDEF: 1)
    4710:	1000259e 	mulne	r0, lr, r5
    4714:	100025a0 	andne	r2, r0, r0, lsr #11
    4718:	00530001 	subseq	r0, r3, r1
	...
    4724:	00259e01 	eoreq	r9, r5, r1, lsl #28
    4728:	00259e10 	eoreq	r9, r5, r0, lsl lr
    472c:	53000110 	movwpl	r0, #272	; 0x110
	...
    4738:	25b20001 	ldrcs	r0, [r2, #1]!
    473c:	25b61000 	ldrcs	r1, [r6, #0]!
    4740:	00011000 	andeq	r1, r1, r0
    4744:	00000053 	andeq	r0, r0, r3, asr r0
    4748:	00000000 	andeq	r0, r0, r0
    474c:	c0000100 	andgt	r0, r0, r0, lsl #2
    4750:	c4100025 	ldrgt	r0, [r0], #-37	; 0xffffffdb
    4754:	01100025 	tsteq	r0, r5, lsr #32
    4758:	00005300 	andeq	r5, r0, r0, lsl #6
    475c:	00000000 	andeq	r0, r0, r0
    4760:	01000000 	mrseq	r0, (UNDEF: 0)
    4764:	100025c0 	andne	r2, r0, r0, asr #11
    4768:	100025c0 	andne	r2, r0, r0, asr #11
    476c:	00530001 	subseq	r0, r3, r1
    4770:	00000000 	andeq	r0, r0, r0
    4774:	01000000 	mrseq	r0, (UNDEF: 0)
    4778:	01000000 	mrseq	r0, (UNDEF: 0)
    477c:	0c000100 	stfeqs	f0, [r0], {-0}
    4780:	1e100025 	cdpne	0, 1, cr0, cr0, cr5, {1}
    4784:	01100025 	tsteq	r0, r5, lsr #32
    4788:	26a25300 	strtcs	r5, [r2], r0, lsl #6
    478c:	26cf1000 	strbcs	r1, [pc], r0
    4790:	00011000 	andeq	r1, r1, r0
    4794:	0026d653 	eoreq	sp, r6, r3, asr r6
    4798:	0026f110 	eoreq	pc, r6, r0, lsl r1	; <UNPREDICTABLE>
    479c:	53000110 	movwpl	r0, #272	; 0x110
    47a0:	100026f8 	strdne	r2, [r0], -r8
    47a4:	10002704 	andne	r2, r0, r4, lsl #14
    47a8:	00530001 	subseq	r0, r3, r1
    47ac:	00000000 	andeq	r0, r0, r0
    47b0:	01000000 	mrseq	r0, (UNDEF: 0)
    47b4:	00000000 	andeq	r0, r0, r0
    47b8:	00250a00 	eoreq	r0, r5, r0, lsl #20
    47bc:	00251810 	eoreq	r1, r5, r0, lsl r8
    47c0:	53000110 	movwpl	r0, #272	; 0x110
    47c4:	100026a2 	andne	r2, r0, r2, lsr #13
    47c8:	100026cf 	andne	r2, r0, pc, asr #13
    47cc:	fa530001 	blx	14c47d8 <__RAM_SIZE+0x13c47d8>
    47d0:	04100026 	ldreq	r0, [r0], #-38	; 0xffffffda
    47d4:	01100027 	tsteq	r0, r7, lsr #32
    47d8:	00005300 	andeq	r5, r0, r0, lsl #6
    47dc:	00000000 	andeq	r0, r0, r0
    47e0:	01000000 	mrseq	r0, (UNDEF: 0)
    47e4:	1000250a 	andne	r2, r0, sl, lsl #10
    47e8:	1000250a 	andne	r2, r0, sl, lsl #10
    47ec:	00530001 	subseq	r0, r3, r1
    47f0:	00000000 	andeq	r0, r0, r0
    47f4:	01000000 	mrseq	r0, (UNDEF: 0)
    47f8:	00251800 	eoreq	r1, r5, r0, lsl #16
    47fc:	00251c10 	eoreq	r1, r5, r0, lsl ip
    4800:	53000110 	movwpl	r0, #272	; 0x110
	...
    480c:	26c60001 	strbcs	r0, [r6], r1
    4810:	26ca1000 	strbcs	r1, [sl], r0
    4814:	00011000 	andeq	r1, r1, r0
    4818:	00000053 	andeq	r0, r0, r3, asr r0
    481c:	00000000 	andeq	r0, r0, r0
    4820:	d4010100 	strle	r0, [r1], #-256	; 0xffffff00
    4824:	d6100026 	ldrle	r0, [r0], -r6, lsr #32
    4828:	01100026 	tsteq	r0, r6, lsr #32
    482c:	00005300 	andeq	r5, r0, r0, lsl #6
    4830:	00000000 	andeq	r0, r0, r0
    4834:	01000000 	mrseq	r0, (UNDEF: 0)
    4838:	100026d4 	ldrdne	r2, [r0], -r4
    483c:	100026d4 	ldrdne	r2, [r0], -r4
    4840:	00530001 	subseq	r0, r3, r1
    4844:	00000000 	andeq	r0, r0, r0
    4848:	01000000 	mrseq	r0, (UNDEF: 0)
    484c:	0026e800 	eoreq	lr, r6, r0, lsl #16
    4850:	0026ec10 	eoreq	lr, r6, r0, lsl ip
    4854:	53000110 	movwpl	r0, #272	; 0x110
	...
    4860:	26f60001 	ldrbtcs	r0, [r6], r1
    4864:	26fa1000 	ldrbtcs	r1, [sl], r0
    4868:	00011000 	andeq	r1, r1, r0
    486c:	00000053 	andeq	r0, r0, r3, asr r0
    4870:	00000000 	andeq	r0, r0, r0
    4874:	f6010000 			; <UNDEFINED> instruction: 0xf6010000
    4878:	f6100026 			; <UNDEFINED> instruction: 0xf6100026
    487c:	01100026 	tsteq	r0, r6, lsr #32
    4880:	00005300 	andeq	r5, r0, r0, lsl #6
    4884:	00000000 	andeq	r0, r0, r0
    4888:	00010000 	andeq	r0, r1, r0
    488c:	1000254a 	andne	r2, r0, sl, asr #10
    4890:	10002550 	andne	r2, r0, r0, asr r5
    4894:	00530001 	subseq	r0, r3, r1
	...
    48a0:	00254401 	eoreq	r4, r5, r1, lsl #8
    48a4:	00254410 	eoreq	r4, r5, r0, lsl r4
    48a8:	53000110 	movwpl	r0, #272	; 0x110
	...
    48b4:	254a0100 	strbcs	r0, [sl, #-256]	; 0xffffff00
    48b8:	254a1000 	strbcs	r1, [sl, #-0]
    48bc:	00011000 	andeq	r1, r1, r0
    48c0:	00000053 	andeq	r0, r0, r3, asr r0
    48c4:	00000000 	andeq	r0, r0, r0
    48c8:	4c000100 	stfmis	f0, [r0], {-0}
    48cc:	50100025 	andspl	r0, r0, r5, lsr #32
    48d0:	01100025 	tsteq	r0, r5, lsr #32
    48d4:	00005300 	andeq	r5, r0, r0, lsl #6
    48d8:	00000000 	andeq	r0, r0, r0
    48dc:	00010000 	andeq	r0, r1, r0
    48e0:	10002630 	andne	r2, r0, r0, lsr r6
    48e4:	10002638 	andne	r2, r0, r8, lsr r6
    48e8:	00530001 	subseq	r0, r3, r1
	...
    48f4:	00262801 	eoreq	r2, r6, r1, lsl #16
    48f8:	00262810 	eoreq	r2, r6, r0, lsl r8
    48fc:	53000110 	movwpl	r0, #272	; 0x110
	...
    4908:	26300100 	ldrtcs	r0, [r0], -r0, lsl #2
    490c:	26301000 	ldrtcs	r1, [r0], -r0
    4910:	00011000 	andeq	r1, r1, r0
    4914:	00000053 	andeq	r0, r0, r3, asr r0
    4918:	00000000 	andeq	r0, r0, r0
    491c:	32000100 	andcc	r0, r0, #0, 2
    4920:	36100026 	ldrcc	r0, [r0], -r6, lsr #32
    4924:	01100026 	tsteq	r0, r6, lsr #32
    4928:	00005300 	andeq	r5, r0, r0, lsl #6
    492c:	00000000 	andeq	r0, r0, r0
    4930:	00010000 	andeq	r0, r1, r0
    4934:	1000269a 	mulne	r0, sl, r6
    4938:	100026a2 	andne	r2, r0, r2, lsr #13
    493c:	00530001 	subseq	r0, r3, r1
	...
    4948:	00269001 	eoreq	r9, r6, r1
    494c:	00269010 	eoreq	r9, r6, r0, lsl r0
    4950:	53000110 	movwpl	r0, #272	; 0x110
	...
    495c:	269a0100 	ldrcs	r0, [sl], r0, lsl #2
    4960:	269a1000 	ldrcs	r1, [sl], r0
    4964:	00011000 	andeq	r1, r1, r0
    4968:	00000053 	andeq	r0, r0, r3, asr r0
    496c:	00000000 	andeq	r0, r0, r0
    4970:	9c000100 	stflss	f0, [r0], {-0}
    4974:	a0100026 	andsge	r0, r0, r6, lsr #32
    4978:	01100026 	tsteq	r0, r6, lsr #32
    497c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    498c:	00020000 	andeq	r0, r2, r0
    4990:	0000007d 	andeq	r0, r0, sp, ror r0
    4994:	00000000 	andeq	r0, r0, r0
    4998:	00020000 	andeq	r0, r2, r0
    499c:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    49b4:	00010000 	andeq	r0, r1, r0
    49b8:	00000050 	andeq	r0, r0, r0, asr r0
    49bc:	00000000 	andeq	r0, r0, r0
    49c0:	f3000400 	vshl.u8	d0, d0, d0
    49c4:	009f5001 	addseq	r5, pc, r1
    49c8:	00000000 	andeq	r0, r0, r0
    49cc:	01000000 	mrseq	r0, (UNDEF: 0)
    49d0:	00005000 	andeq	r5, r0, r0
    49d4:	00000000 	andeq	r0, r0, r0
    49d8:	00040000 	andeq	r0, r4, r0
    49dc:	9f5001f3 	svcls	0x005001f3
	...
    49e8:	00000001 	andeq	r0, r0, r1
    49ec:	00000000 	andeq	r0, r0, r0
    49f0:	00010000 	andeq	r0, r1, r0
    49f4:	00000054 	andeq	r0, r0, r4, asr r0
    49f8:	00000000 	andeq	r0, r0, r0
    49fc:	00000100 	andeq	r0, r0, r0, lsl #2
    4a00:	00000000 	andeq	r0, r0, r0
    4a04:	03000000 	movweq	r0, #0
    4a08:	00cc7000 	sbceq	r7, ip, r0
	...
    4a14:	00000001 	andeq	r0, r0, r1
    4a18:	00000000 	andeq	r0, r0, r0
    4a1c:	00010000 	andeq	r0, r1, r0
    4a20:	00000054 	andeq	r0, r0, r4, asr r0
    4a24:	00000000 	andeq	r0, r0, r0
    4a28:	00010000 	andeq	r0, r1, r0
    4a2c:	00000000 	andeq	r0, r0, r0
    4a30:	01000000 	mrseq	r0, (UNDEF: 0)
    4a34:	00005400 	andeq	r5, r0, r0, lsl #8
    4a38:	00000000 	andeq	r0, r0, r0
    4a3c:	00010000 	andeq	r0, r1, r0
	...
    4a48:	00540001 	subseq	r0, r4, r1
    4a4c:	00000000 	andeq	r0, r0, r0
    4a50:	44000000 	strmi	r0, [r0], #-0
    4a54:	46100027 	ldrmi	r0, [r0], -r7, lsr #32
    4a58:	02100027 	andseq	r0, r0, #39	; 0x27
    4a5c:	46007d00 	strmi	r7, [r0], -r0, lsl #26
    4a60:	c0100027 	andsgt	r0, r0, r7, lsr #32
    4a64:	02100028 	andseq	r0, r0, #40	; 0x28
    4a68:	00107d00 	andseq	r7, r0, r0, lsl #26
    4a6c:	00000000 	andeq	r0, r0, r0
    4a70:	01000000 	mrseq	r0, (UNDEF: 0)
    4a74:	64000002 	strvs	r0, [r0], #-2
    4a78:	74100027 	ldrvc	r0, [r0], #-39	; 0xffffffd9
    4a7c:	01100027 	tsteq	r0, r7, lsr #32
    4a80:	27d65100 	ldrbcs	r5, [r6, r0, lsl #2]
    4a84:	28321000 	ldmdacs	r2!, {ip}
    4a88:	00011000 	andeq	r1, r1, r0
    4a8c:	00000051 	andeq	r0, r0, r1, asr r0
    4a90:	00000000 	andeq	r0, r0, r0
    4a94:	4a000000 	bmi	4a9c <_Min_Stack_Size+0x3a9c>
    4a98:	c0100027 	andsgt	r0, r0, r7, lsr #32
    4a9c:	01100028 	tsteq	r0, r8, lsr #32
    4aa0:	00005400 	andeq	r5, r0, r0, lsl #8
    4aa4:	00000000 	andeq	r0, r0, r0
    4aa8:	02020000 	andeq	r0, r2, #0
    4aac:	00010100 	andeq	r0, r1, r0, lsl #2
    4ab0:	1000275e 	andne	r2, r0, lr, asr r7
    4ab4:	10002774 	andne	r2, r0, r4, ror r7
    4ab8:	9f300002 	svcls	0x00300002
    4abc:	100027d6 	ldrdne	r2, [r0], -r6
    4ac0:	10002822 	andne	r2, r0, r2, lsr #16
    4ac4:	9f300002 	svcls	0x00300002
    4ac8:	10002822 	andne	r2, r0, r2, lsr #16
    4acc:	100028c0 	andne	r2, r0, r0, asr #17
    4ad0:	00550001 	subseq	r0, r5, r1
    4ad4:	00000000 	andeq	r0, r0, r0
    4ad8:	01000000 	mrseq	r0, (UNDEF: 0)
    4adc:	01000000 	mrseq	r0, (UNDEF: 0)
    4ae0:	50000100 	andpl	r0, r0, r0, lsl #2
    4ae4:	66100027 	ldrvs	r0, [r0], -r7, lsr #32
    4ae8:	01100027 	tsteq	r0, r7, lsr #32
    4aec:	27765300 	ldrbcs	r5, [r6, -r0, lsl #6]!
    4af0:	27a31000 	strcs	r1, [r3, r0]!
    4af4:	00011000 	andeq	r1, r1, r0
    4af8:	0027aa53 	eoreq	sl, r7, r3, asr sl
    4afc:	0027c310 	eoreq	ip, r7, r0, lsl r3
    4b00:	53000110 	movwpl	r0, #272	; 0x110
    4b04:	100027ca 	andne	r2, r0, sl, asr #15
    4b08:	100027d6 	ldrdne	r2, [r0], -r6
    4b0c:	00530001 	subseq	r0, r3, r1
    4b10:	00000000 	andeq	r0, r0, r0
    4b14:	01000000 	mrseq	r0, (UNDEF: 0)
    4b18:	00000000 	andeq	r0, r0, r0
    4b1c:	00274e00 	eoreq	r4, r7, r0, lsl #28
    4b20:	00275a10 	eoreq	r5, r7, r0, lsl sl
    4b24:	53000110 	movwpl	r0, #272	; 0x110
    4b28:	10002776 	andne	r2, r0, r6, ror r7
    4b2c:	100027a3 	andne	r2, r0, r3, lsr #15
    4b30:	cc530001 	mrrcgt	0, 0, r0, r3, cr1
    4b34:	d6100027 	ldrle	r0, [r0], -r7, lsr #32
    4b38:	01100027 	tsteq	r0, r7, lsr #32
    4b3c:	00005300 	andeq	r5, r0, r0, lsl #6
    4b40:	00000000 	andeq	r0, r0, r0
    4b44:	01000000 	mrseq	r0, (UNDEF: 0)
    4b48:	1000274e 	andne	r2, r0, lr, asr #14
    4b4c:	1000274e 	andne	r2, r0, lr, asr #14
    4b50:	00530001 	subseq	r0, r3, r1
    4b54:	00000000 	andeq	r0, r0, r0
    4b58:	01000000 	mrseq	r0, (UNDEF: 0)
    4b5c:	00275a00 	eoreq	r5, r7, r0, lsl #20
    4b60:	00275e10 	eoreq	r5, r7, r0, lsl lr
    4b64:	53000110 	movwpl	r0, #272	; 0x110
	...
    4b70:	279a0001 	ldrcs	r0, [sl, r1]
    4b74:	279e1000 	ldrcs	r1, [lr, r0]
    4b78:	00011000 	andeq	r1, r1, r0
    4b7c:	00000053 	andeq	r0, r0, r3, asr r0
    4b80:	00000000 	andeq	r0, r0, r0
    4b84:	a8010100 	stmdage	r1, {r8}
    4b88:	aa100027 	bge	404c2c <__RAM_SIZE+0x304c2c>
    4b8c:	01100027 	tsteq	r0, r7, lsr #32
    4b90:	00005300 	andeq	r5, r0, r0, lsl #6
    4b94:	00000000 	andeq	r0, r0, r0
    4b98:	01000000 	mrseq	r0, (UNDEF: 0)
    4b9c:	100027a8 	andne	r2, r0, r8, lsr #15
    4ba0:	100027a8 	andne	r2, r0, r8, lsr #15
    4ba4:	00530001 	subseq	r0, r3, r1
    4ba8:	00000000 	andeq	r0, r0, r0
    4bac:	01000000 	mrseq	r0, (UNDEF: 0)
    4bb0:	0027ba00 	eoreq	fp, r7, r0, lsl #20
    4bb4:	0027be10 	eoreq	fp, r7, r0, lsl lr
    4bb8:	53000110 	movwpl	r0, #272	; 0x110
	...
    4bc4:	27c80001 	strbcs	r0, [r8, r1]
    4bc8:	27cc1000 	strbcs	r1, [ip, r0]
    4bcc:	00011000 	andeq	r1, r1, r0
    4bd0:	00000053 	andeq	r0, r0, r3, asr r0
    4bd4:	00000000 	andeq	r0, r0, r0
    4bd8:	c8010000 	stmdagt	r1, {}	; <UNPREDICTABLE>
    4bdc:	c8100027 	ldmdagt	r0, {r0, r1, r2, r5}
    4be0:	01100027 	tsteq	r0, r7, lsr #32
    4be4:	00005300 	andeq	r5, r0, r0, lsl #6
    4be8:	00000000 	andeq	r0, r0, r0
    4bec:	00010000 	andeq	r0, r1, r0
    4bf0:	00010001 	andeq	r0, r1, r1
    4bf4:	10002830 	andne	r2, r0, r0, lsr r8
    4bf8:	1000286b 	andne	r2, r0, fp, ror #16
    4bfc:	72530001 	subsvc	r0, r3, #1
    4c00:	8b100028 	blhi	404ca8 <__RAM_SIZE+0x304ca8>
    4c04:	01100028 	tsteq	r0, r8, lsr #32
    4c08:	28925300 	ldmcs	r2, {r8, r9, ip, lr}
    4c0c:	28c01000 	stmiacs	r0, {ip}^
    4c10:	00011000 	andeq	r1, r1, r0
    4c14:	00000053 	andeq	r0, r0, r3, asr r0
    4c18:	00000000 	andeq	r0, r0, r0
    4c1c:	00000100 	andeq	r0, r0, r0, lsl #2
    4c20:	2e000000 	cdpcs	0, 0, cr0, cr0, cr0, {0}
    4c24:	38100028 	ldmdacc	r0, {r3, r5}
    4c28:	01100028 	tsteq	r0, r8, lsr #32
    4c2c:	283e5300 	ldmdacs	lr!, {r8, r9, ip, lr}
    4c30:	286b1000 	stmdacs	fp!, {ip}^
    4c34:	00011000 	andeq	r1, r1, r0
    4c38:	00289453 	eoreq	r9, r8, r3, asr r4
    4c3c:	0028c010 	eoreq	ip, r8, r0, lsl r0
    4c40:	53000110 	movwpl	r0, #272	; 0x110
	...
    4c4c:	282e0100 	stmdacs	lr!, {r8}
    4c50:	282e1000 	stmdacs	lr!, {ip}
    4c54:	00011000 	andeq	r1, r1, r0
    4c58:	00000053 	andeq	r0, r0, r3, asr r0
    4c5c:	00000000 	andeq	r0, r0, r0
    4c60:	38000100 	stmdacc	r0, {r8}
    4c64:	3c100028 	ldccc	0, cr0, [r0], {40}	; 0x28
    4c68:	01100028 	tsteq	r0, r8, lsr #32
    4c6c:	00005300 	andeq	r5, r0, r0, lsl #6
    4c70:	00000000 	andeq	r0, r0, r0
    4c74:	00010000 	andeq	r0, r1, r0
    4c78:	10002862 	andne	r2, r0, r2, ror #16
    4c7c:	10002866 	andne	r2, r0, r6, ror #16
    4c80:	00530001 	subseq	r0, r3, r1
    4c84:	00000000 	andeq	r0, r0, r0
    4c88:	01000000 	mrseq	r0, (UNDEF: 0)
    4c8c:	00287001 	eoreq	r7, r8, r1
    4c90:	00287210 	eoreq	r7, r8, r0, lsl r2
    4c94:	53000110 	movwpl	r0, #272	; 0x110
	...
    4ca0:	28700100 	ldmdacs	r0!, {r8}^
    4ca4:	28701000 	ldmdacs	r0!, {ip}^
    4ca8:	00011000 	andeq	r1, r1, r0
    4cac:	00000053 	andeq	r0, r0, r3, asr r0
    4cb0:	00000000 	andeq	r0, r0, r0
    4cb4:	82000100 	andhi	r0, r0, #0, 2
    4cb8:	86100028 	ldrhi	r0, [r0], -r8, lsr #32
    4cbc:	01100028 	tsteq	r0, r8, lsr #32
    4cc0:	00005300 	andeq	r5, r0, r0, lsl #6
    4cc4:	00000000 	andeq	r0, r0, r0
    4cc8:	00010000 	andeq	r0, r1, r0
    4ccc:	10002890 	mulne	r0, r0, r8
    4cd0:	10002894 	mulne	r0, r4, r8
    4cd4:	00530001 	subseq	r0, r3, r1
	...
    4ce0:	00289001 	eoreq	r9, r8, r1
    4ce4:	00289010 	eoreq	r9, r8, r0, lsl r0
    4ce8:	53000110 	movwpl	r0, #272	; 0x110
	...
    4cf4:	00000201 	andeq	r0, r0, r1, lsl #4
    4cf8:	10002762 	andne	r2, r0, r2, ror #14
    4cfc:	10002774 	andne	r2, r0, r4, ror r7
    4d00:	d6510001 	ldrble	r0, [r1], -r1
    4d04:	32100027 	andscc	r0, r0, #39	; 0x27
    4d08:	01100028 	tsteq	r0, r8, lsr #32
    4d0c:	00005100 	andeq	r5, r0, r0, lsl #2
    4d10:	00000000 	andeq	r0, r0, r0
    4d14:	01000000 	mrseq	r0, (UNDEF: 0)
    4d18:	10002762 	andne	r2, r0, r2, ror #14
    4d1c:	10002762 	andne	r2, r0, r2, ror #14
    4d20:	00510001 	subseq	r0, r1, r1
    4d24:	00000000 	andeq	r0, r0, r0
    4d28:	01000000 	mrseq	r0, (UNDEF: 0)
    4d2c:	01000200 	mrseq	r0, R8_usr
    4d30:	02000100 	andeq	r0, r0, #0, 2
    4d34:	00277000 	eoreq	r7, r7, r0
    4d38:	00277410 	eoreq	r7, r7, r0, lsl r4
    4d3c:	51000110 	tstpl	r0, r0, lsl r1
    4d40:	100027d6 	ldrdne	r2, [r0], -r6
    4d44:	100027da 	ldrdne	r2, [r0], -sl
    4d48:	f2510001 	vhadd.s16	d16, d1, d1
    4d4c:	f6100027 			; <UNDEFINED> instruction: 0xf6100027
    4d50:	01100027 	tsteq	r0, r7, lsr #32
    4d54:	27f85100 	ldrbcs	r5, [r8, r0, lsl #2]!
    4d58:	27fc1000 	ldrbcs	r1, [ip, r0]!
    4d5c:	00011000 	andeq	r1, r1, r0
    4d60:	00282251 	eoreq	r2, r8, r1, asr r2
    4d64:	00282610 	eoreq	r2, r8, r0, lsl r6
    4d68:	51000110 	tstpl	r0, r0, lsl r1
	...
    4d74:	100028c0 	andne	r2, r0, r0, asr #17
    4d78:	100028c2 	andne	r2, r0, r2, asr #17
    4d7c:	007d0002 	rsbseq	r0, sp, r2
    4d80:	100028c2 	andne	r2, r0, r2, asr #17
    4d84:	100028fc 	strdne	r2, [r0], -ip
    4d88:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    4d9c:	100028c0 	andne	r2, r0, r0, asr #17
    4da0:	100028e7 	andne	r2, r0, r7, ror #17
    4da4:	e7500001 	ldrb	r0, [r0, -r1]
    4da8:	ee100028 	cdp	0, 1, cr0, cr0, cr8, {1}
    4dac:	04100028 	ldreq	r0, [r0], #-40	; 0xffffffd8
    4db0:	5001f300 	andpl	pc, r1, r0, lsl #6
    4db4:	0028ee9f 	mlaeq	r8, pc, lr, lr	; <UNPREDICTABLE>
    4db8:	0028f110 	eoreq	pc, r8, r0, lsl r1	; <UNPREDICTABLE>
    4dbc:	50000110 	andpl	r0, r0, r0, lsl r1
    4dc0:	100028f1 	strdne	r2, [r0], -r1
    4dc4:	100028fc 	strdne	r2, [r0], -ip
    4dc8:	01f30004 	mvnseq	r0, r4
    4dcc:	00009f50 	andeq	r9, r0, r0, asr pc
    4dd0:	00000000 	andeq	r0, r0, r0
    4dd4:	00010000 	andeq	r0, r1, r0
    4dd8:	100028c8 	andne	r2, r0, r8, asr #17
    4ddc:	100028fc 	strdne	r2, [r0], -ip
    4de0:	00540001 	subseq	r0, r4, r1
    4de4:	00000000 	andeq	r0, r0, r0
    4de8:	05000000 	streq	r0, [r0, #-0]
    4dec:	00000000 	andeq	r0, r0, r0
    4df0:	c2000000 	andgt	r0, r0, #0
    4df4:	e7100028 	ldr	r0, [r0, -r8, lsr #32]
    4df8:	01100028 	tsteq	r0, r8, lsr #32
    4dfc:	28e75000 	stmiacs	r7!, {ip, lr}^
    4e00:	28ee1000 	stmiacs	lr!, {ip}^
    4e04:	00041000 	andeq	r1, r4, r0
    4e08:	9f5001f3 	svcls	0x005001f3
    4e0c:	100028ee 	andne	r2, r0, lr, ror #17
    4e10:	100028f1 	strdne	r2, [r0], -r1
    4e14:	f1500001 			; <UNDEFINED> instruction: 0xf1500001
    4e18:	fc100028 	ldc2	0, cr0, [r0], {40}	; 0x28
    4e1c:	04100028 	ldreq	r0, [r0], #-40	; 0xffffffd8
    4e20:	5001f300 	andpl	pc, r1, r0, lsl #6
    4e24:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    4e28:	00000000 	andeq	r0, r0, r0
    4e2c:	e2000000 	and	r0, r0, #0
    4e30:	e7100028 	ldr	r0, [r0, -r8, lsr #32]
    4e34:	01100028 	tsteq	r0, r8, lsr #32
    4e38:	00005300 	andeq	r5, r0, r0, lsl #6
    4e3c:	00000000 	andeq	r0, r0, r0
    4e40:	00010000 	andeq	r0, r1, r0
    4e44:	100028e2 	andne	r2, r0, r2, ror #17
    4e48:	100028ec 	andne	r2, r0, ip, ror #17
    4e4c:	9f300002 	svcls	0x00300002
	...
    4e58:	28c60001 	stmiacs	r6, {r0}^
    4e5c:	28fc1000 	ldmcs	ip!, {ip}^
    4e60:	00011000 	andeq	r1, r1, r0
    4e64:	00000054 	andeq	r0, r0, r4, asr r0
    4e68:	00000000 	andeq	r0, r0, r0
    4e6c:	c6010000 	strgt	r0, [r1], -r0
    4e70:	c6100028 	ldrgt	r0, [r0], -r8, lsr #32
    4e74:	01100028 	tsteq	r0, r8, lsr #32
    4e78:	00005400 	andeq	r5, r0, r0, lsl #8
    4e7c:	00000000 	andeq	r0, r0, r0
    4e80:	00010000 	andeq	r0, r1, r0
    4e84:	100028e8 	andne	r2, r0, r8, ror #17
    4e88:	100028ec 	andne	r2, r0, ip, ror #17
    4e8c:	00540001 	subseq	r0, r4, r1
    4e90:	00000000 	andeq	r0, r0, r0
    4e94:	01000000 	mrseq	r0, (UNDEF: 0)
    4e98:	0028f200 	eoreq	pc, r8, r0, lsl #4
    4e9c:	0028fc10 	eoreq	pc, r8, r0, lsl ip	; <UNPREDICTABLE>
    4ea0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    4eac:	100028fc 	strdne	r2, [r0], -ip
    4eb0:	100028fe 	strdne	r2, [r0], -lr
    4eb4:	007d0002 	rsbseq	r0, sp, r2
    4eb8:	100028fe 	strdne	r2, [r0], -lr
    4ebc:	10002914 	andne	r2, r0, r4, lsl r9
    4ec0:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    4ecc:	29040001 	stmdbcs	r4, {r0}
    4ed0:	29101000 	ldmdbcs	r0, {ip}
    4ed4:	00011000 	andeq	r1, r1, r0
    4ed8:	00000054 	andeq	r0, r0, r4, asr r0
    4edc:	00000000 	andeq	r0, r0, r0
    4ee0:	02000100 	andeq	r0, r0, #0, 2
    4ee4:	10100029 	andsne	r0, r0, r9, lsr #32
    4ee8:	01100029 	tsteq	r0, r9, lsr #32
    4eec:	00005400 	andeq	r5, r0, r0, lsl #8
    4ef0:	00000000 	andeq	r0, r0, r0
    4ef4:	01000000 	mrseq	r0, (UNDEF: 0)
    4ef8:	10002902 	andne	r2, r0, r2, lsl #18
    4efc:	10002902 	andne	r2, r0, r2, lsl #18
    4f00:	00540001 	subseq	r0, r4, r1
    4f04:	00000000 	andeq	r0, r0, r0
    4f08:	01000000 	mrseq	r0, (UNDEF: 0)
    4f0c:	00290a00 	eoreq	r0, r9, r0, lsl #20
    4f10:	00290e10 	eoreq	r0, r9, r0, lsl lr
    4f14:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    4f20:	10002914 	andne	r2, r0, r4, lsl r9
    4f24:	10002916 	andne	r2, r0, r6, lsl r9
    4f28:	007d0002 	rsbseq	r0, sp, r2
    4f2c:	10002916 	andne	r2, r0, r6, lsl r9
    4f30:	10002918 	andne	r2, r0, r8, lsl r9
    4f34:	047d0002 	ldrbteq	r0, [sp], #-2
    4f38:	10002918 	andne	r2, r0, r8, lsl r9
    4f3c:	1000296e 	andne	r2, r0, lr, ror #18
    4f40:	207d0002 	rsbscs	r0, sp, r2
    4f44:	1000296e 	andne	r2, r0, lr, ror #18
    4f48:	100029a4 	andne	r2, r0, r4, lsr #19
    4f4c:	047d0002 	ldrbteq	r0, [sp], #-2
	...
    4f58:	29680000 	stmdbcs	r8!, {}^	; <UNPREDICTABLE>
    4f5c:	29a41000 	stmibcs	r4!, {ip}
    4f60:	00011000 	andeq	r1, r1, r0
    4f64:	00000050 	andeq	r0, r0, r0, asr r0
	...
    4f70:	c2000000 	andgt	r0, r0, #0
    4f74:	cc100029 	ldcgt	0, cr0, [r0], {41}	; 0x29
    4f78:	01100029 	tsteq	r0, r9, lsr #32
    4f7c:	29d25300 	ldmibcs	r2, {r8, r9, ip, lr}^
    4f80:	29e41000 	stmibcs	r4!, {ip}^
    4f84:	00011000 	andeq	r1, r1, r0
    4f88:	0029e853 	eoreq	lr, r9, r3, asr r8
    4f8c:	0029fc10 	eoreq	pc, r9, r0, lsl ip	; <UNPREDICTABLE>
    4f90:	53000110 	movwpl	r0, #272	; 0x110
	...
    4f9c:	29d60001 	ldmibcs	r6, {r0}^
    4fa0:	29e01000 	stmibcs	r0!, {ip}^
    4fa4:	00011000 	andeq	r1, r1, r0
    4fa8:	00000052 	andeq	r0, r0, r2, asr r0
    4fac:	00000000 	andeq	r0, r0, r0
    4fb0:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
    4fb4:	e0100029 	ands	r0, r0, r9, lsr #32
    4fb8:	01100029 	tsteq	r0, r9, lsr #32
    4fbc:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    4fc8:	100029cc 	andne	r2, r0, ip, asr #19
    4fcc:	100029d2 	ldrdne	r2, [r0], -r2	; <UNPREDICTABLE>
    4fd0:	00730005 	rsbseq	r0, r3, r5
    4fd4:	009f1b34 	addseq	r1, pc, r4, lsr fp	; <UNPREDICTABLE>
	...
    4fe8:	0029a600 	eoreq	sl, r9, r0, lsl #12
    4fec:	0029b210 	eoreq	fp, r9, r0, lsl r2
    4ff0:	53000110 	movwpl	r0, #272	; 0x110
    4ff4:	100029b4 			; <UNDEFINED> instruction: 0x100029b4
    4ff8:	100029ba 			; <UNDEFINED> instruction: 0x100029ba
    4ffc:	ba530001 	blt	14c5008 <__RAM_SIZE+0x13c5008>
    5000:	da100029 	ble	4050ac <__RAM_SIZE+0x3050ac>
    5004:	02100029 	andseq	r0, r0, #41	; 0x29
    5008:	e4007000 	str	r7, [r0], #-0
    500c:	e6100029 	ldr	r0, [r0], -r9, lsr #32
    5010:	01100029 	tsteq	r0, r9, lsr #32
    5014:	29e65300 	stmibcs	r6!, {r8, r9, ip, lr}^
    5018:	29ee1000 	stmibcs	lr!, {ip}^
    501c:	00021000 	andeq	r1, r2, r0
    5020:	00000070 	andeq	r0, r0, r0, ror r0
	...
    502c:	100029ba 			; <UNDEFINED> instruction: 0x100029ba
    5030:	100029c2 	andne	r2, r0, r2, asr #19
    5034:	00530001 	subseq	r0, r3, r1
	...
    5040:	fe000000 	cdp2	0, 0, cr0, cr0, cr0, {0}
    5044:	14100029 	ldrne	r0, [r0], #-41	; 0xffffffd7
    5048:	0110002a 	tsteq	r0, sl, lsr #32
    504c:	2a185300 	bcs	619c54 <__RAM_SIZE+0x519c54>
    5050:	2a2a1000 	bcs	a89058 <__RAM_SIZE+0x989058>
    5054:	00011000 	andeq	r1, r1, r0
    5058:	00000053 	andeq	r0, r0, r3, asr r0
	...
    5068:	002a0200 	eoreq	r0, sl, r0, lsl #4
    506c:	002a1210 	eoreq	r1, sl, r0, lsl r2
    5070:	52000110 	andpl	r0, r0, #16, 2
    5074:	10002a18 	andne	r2, r0, r8, lsl sl
    5078:	10002a1a 	andne	r2, r0, sl, lsl sl
    507c:	1a520001 	bne	1485088 <__RAM_SIZE+0x1385088>
    5080:	2210002a 	andscs	r0, r0, #42	; 0x2a
    5084:	0210002a 	andseq	r0, r0, #42	; 0x2a
    5088:	24107000 	ldrcs	r7, [r0], #-0
    508c:	2a10002a 	bcs	40513c <__RAM_SIZE+0x30513c>
    5090:	0110002a 	tsteq	r0, sl, lsr #32
    5094:	00005200 	andeq	r5, r0, r0, lsl #4
	...
    50a0:	10002a08 	andne	r2, r0, r8, lsl #20
    50a4:	10002a0e 	andne	r2, r0, lr, lsl #20
    50a8:	00510001 	subseq	r0, r1, r1
    50ac:	00000000 	andeq	r0, r0, r0
    50b0:	2c000000 	stccs	0, cr0, [r0], {-0}
    50b4:	3610002a 	ldrcc	r0, [r0], -sl, lsr #32
    50b8:	0210002a 	andseq	r0, r0, #42	; 0x2a
    50bc:	36007d00 	strcc	r7, [r0], -r0, lsl #26
    50c0:	3810002a 	ldmdacc	r0, {r1, r3, r5}
    50c4:	0210002a 	andseq	r0, r0, #42	; 0x2a
    50c8:	38147d00 	ldmdacc	r4, {r8, sl, fp, ip, sp, lr}
    50cc:	e810002a 	ldmda	r0, {r1, r3, r5}
    50d0:	0210002b 	andseq	r0, r0, #43	; 0x2b
    50d4:	00207d00 	eoreq	r7, r0, r0, lsl #26
	...
    50e0:	2c000000 	stccs	0, cr0, [r0], {-0}
    50e4:	3c10002a 	ldccc	0, cr0, [r0], {42}	; 0x2a
    50e8:	0110002a 	tsteq	r0, sl, lsr #32
    50ec:	2a3c5000 	bcs	f190f4 <__RAM_SIZE+0xe190f4>
    50f0:	2be81000 	blcs	ffa090f8 <__RAM_segment_used_end__+0xc79090f8>
    50f4:	00041000 	andeq	r1, r4, r0
    50f8:	9f5001f3 	svcls	0x005001f3
	...
    5104:	01000000 	mrseq	r0, (UNDEF: 0)
    5108:	00010101 	andeq	r0, r1, r1, lsl #2
    510c:	00000000 	andeq	r0, r0, r0
    5110:	00010101 	andeq	r0, r1, r1, lsl #2
    5114:	10002a3c 	andne	r2, r0, ip, lsr sl
    5118:	10002a46 	andne	r2, r0, r6, asr #20
    511c:	46510001 	ldrbmi	r0, [r1], -r1
    5120:	6e10002a 	cdpvs	0, 1, cr0, cr0, cr10, {1}
    5124:	0110002a 	tsteq	r0, sl, lsr #32
    5128:	2a6e5600 	bcs	1b9a930 <__RAM_SIZE+0x1a9a930>
    512c:	2a841000 	bcs	fe109134 <__RAM_segment_used_end__+0xc6009134>
    5130:	00011000 	andeq	r1, r1, r0
    5134:	002a8452 	eoreq	r8, sl, r2, asr r4
    5138:	002b0210 	eoreq	r0, fp, r0, lsl r2
    513c:	56000110 			; <UNDEFINED> instruction: 0x56000110
    5140:	10002b02 	andne	r2, r0, r2, lsl #22
    5144:	10002b64 	andne	r2, r0, r4, ror #22
    5148:	64520001 	ldrbvs	r0, [r2], #-1
    514c:	7a10002b 	bvc	405200 <__RAM_SIZE+0x305200>
    5150:	0110002b 	tsteq	r0, fp, lsr #32
    5154:	2b805600 	blcs	fe01a95c <__RAM_segment_used_end__+0xc5f1a95c>
    5158:	2bb41000 	blcs	fed09160 <__RAM_segment_used_end__+0xc6c09160>
    515c:	00011000 	andeq	r1, r1, r0
    5160:	002bb451 	eoreq	fp, fp, r1, asr r4
    5164:	002be810 	eoreq	lr, fp, r0, lsl r8
    5168:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    5178:	2a460001 	bcs	1185184 <__RAM_SIZE+0x1085184>
    517c:	2a4a1000 	bcs	1289184 <__RAM_SIZE+0x1189184>
    5180:	00011000 	andeq	r1, r1, r0
    5184:	002a8c53 	eoreq	r8, sl, r3, asr ip
    5188:	002aa210 	eoreq	sl, sl, r0, lsl r2
    518c:	53000110 	movwpl	r0, #272	; 0x110
    5190:	10002b42 	andne	r2, r0, r2, asr #22
    5194:	10002b4c 	andne	r2, r0, ip, asr #22
    5198:	00510001 	subseq	r0, r1, r1
	...
    51a4:	96000000 	strls	r0, [r0], -r0
    51a8:	9c10002a 	ldcls	0, cr0, [r0], {42}	; 0x2a
    51ac:	0110002a 	tsteq	r0, sl, lsr #32
    51b0:	2b445200 	blcs	11199b8 <__RAM_SIZE+0x10199b8>
    51b4:	2b4c1000 	blcs	13091bc <__RAM_SIZE+0x12091bc>
    51b8:	00011000 	andeq	r1, r1, r0
    51bc:	00000050 	andeq	r0, r0, r0, asr r0
    51c0:	00000000 	andeq	r0, r0, r0
    51c4:	01010000 	mrseq	r0, (UNDEF: 1)
    51c8:	002a4600 	eoreq	r4, sl, r0, lsl #12
    51cc:	002a8410 	eoreq	r8, sl, r0, lsl r4
    51d0:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    51d4:	10002a8a 	andne	r2, r0, sl, lsl #21
    51d8:	10002b64 	andne	r2, r0, r4, ror #22
    51dc:	00540001 	subseq	r0, r4, r1
    51e0:	00000000 	andeq	r0, r0, r0
    51e4:	01000000 	mrseq	r0, (UNDEF: 0)
    51e8:	01010000 	mrseq	r0, (UNDEF: 1)
    51ec:	50000000 	andpl	r0, r0, r0
    51f0:	5a10002a 	bpl	4052a0 <__RAM_SIZE+0x3052a0>
    51f4:	0210002a 	andseq	r0, r0, #42	; 0x2a
    51f8:	5a9f3000 	bpl	fe7d1200 <__RAM_segment_used_end__+0xc66d1200>
    51fc:	8410002a 	ldrhi	r0, [r0], #-42	; 0xffffffd6
    5200:	0110002a 	tsteq	r0, sl, lsr #32
    5204:	2ae25500 	bcs	ff89a60c <__RAM_segment_used_end__+0xc779a60c>
    5208:	2af41000 	bcs	ffd09210 <__RAM_segment_used_end__+0xc7c09210>
    520c:	00011000 	andeq	r1, r1, r0
    5210:	002afc55 	eoreq	pc, sl, r5, asr ip	; <UNPREDICTABLE>
    5214:	002b6410 	eoreq	r6, fp, r0, lsl r4
    5218:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    5224:	00000009 	andeq	r0, r0, r9
    5228:	10002a2c 	andne	r2, r0, ip, lsr #20
    522c:	10002a3c 	andne	r2, r0, ip, lsr sl
    5230:	9f300002 	svcls	0x00300002
    5234:	10002a3c 	andne	r2, r0, ip, lsr sl
    5238:	10002be8 	andne	r2, r0, r8, ror #23
    523c:	00570001 	subseq	r0, r7, r1
	...
    524c:	002b2e00 	eoreq	r2, fp, r0, lsl #28
    5250:	002b3810 	eoreq	r3, fp, r0, lsl r8
    5254:	53000110 	movwpl	r0, #272	; 0x110
    5258:	10002b3e 	andne	r2, r0, lr, lsr fp
    525c:	10002b50 	andne	r2, r0, r0, asr fp
    5260:	5c530001 	mrrcpl	0, 0, r0, r3, cr1
    5264:	6410002b 	ldrvs	r0, [r0], #-43	; 0xffffffd5
    5268:	0110002b 	tsteq	r0, fp, lsr #32
    526c:	00005300 	andeq	r5, r0, r0, lsl #6
	...
    5278:	10002b26 	andne	r2, r0, r6, lsr #22
    527c:	10002b30 	andne	r2, r0, r0, lsr fp
    5280:	00510001 	subseq	r0, r1, r1
	...
    528c:	002b3800 	eoreq	r3, fp, r0, lsl #16
    5290:	002b3e10 	eoreq	r3, fp, r0, lsl lr
    5294:	73000510 	movwvc	r0, #1296	; 0x510
    5298:	9f1b3400 	svcls	0x001b3400
	...
    52a4:	00050503 	andeq	r0, r5, r3, lsl #10
    52a8:	00050503 	andeq	r0, r5, r3, lsl #10
    52ac:	05030000 	streq	r0, [r3, #-0]
    52b0:	00000005 	andeq	r0, r0, r5
    52b4:	10002ab6 			; <UNDEFINED> instruction: 0x10002ab6
    52b8:	10002ab6 			; <UNDEFINED> instruction: 0x10002ab6
    52bc:	b6540001 	ldrblt	r0, [r4], -r1
    52c0:	c810002a 	ldmdagt	r0, {r1, r3, r5}
    52c4:	0310002a 	tsteq	r0, #42	; 0x2a
    52c8:	9f787400 	svcls	0x00787400
    52cc:	10002ad8 	ldrdne	r2, [r0], -r8
    52d0:	10002ad8 	ldrdne	r2, [r0], -r8
    52d4:	d8540001 	ldmdale	r4, {r0}^
    52d8:	e210002a 	ands	r0, r0, #42	; 0x2a
    52dc:	0310002a 	tsteq	r0, #42	; 0x2a
    52e0:	9f787400 	svcls	0x00787400
    52e4:	10002af4 	strdne	r2, [r0], -r4
    52e8:	10002afc 	strdne	r2, [r0], -ip
    52ec:	78740003 	ldmdavc	r4!, {r0, r1}^
    52f0:	002b149f 	mlaeq	fp, pc, r4, r1	; <UNPREDICTABLE>
    52f4:	002b1410 	eoreq	r1, fp, r0, lsl r4
    52f8:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
    52fc:	10002b14 	andne	r2, r0, r4, lsl fp
    5300:	10002b1e 	andne	r2, r0, lr, lsl fp
    5304:	78740003 	ldmdavc	r4!, {r0, r1}^
    5308:	002b509f 	mlaeq	fp, pc, r0, r5	; <UNPREDICTABLE>
    530c:	002b5810 	eoreq	r5, fp, r0, lsl r8
    5310:	74000310 	strvc	r0, [r0], #-784	; 0xfffffcf0
    5314:	00009f78 	andeq	r9, r0, r8, ror pc
    5318:	00000000 	andeq	r0, r0, r0
    531c:	00010000 	andeq	r0, r1, r0
    5320:	10002a5e 	andne	r2, r0, lr, asr sl
    5324:	10002a62 	andne	r2, r0, r2, ror #20
    5328:	00560001 	subseq	r0, r6, r1
    532c:	00000000 	andeq	r0, r0, r0
    5330:	01000000 	mrseq	r0, (UNDEF: 0)
    5334:	6c000001 	stcvs	0, cr0, [r0], {1}
    5338:	8410002a 	ldrhi	r0, [r0], #-42	; 0xffffffd6
    533c:	0110002a 	tsteq	r0, sl, lsr #32
    5340:	2b025200 	blcs	99b48 <SYSTICK_CYCLES+0x70b09>
    5344:	2b641000 	blcs	190934c <__RAM_SIZE+0x180934c>
    5348:	00011000 	andeq	r1, r1, r0
    534c:	00000052 	andeq	r0, r0, r2, asr r0
    5350:	00000000 	andeq	r0, r0, r0
    5354:	6c010000 	stcvs	0, cr0, [r1], {-0}
    5358:	6c10002a 	ldcvs	0, cr0, [r0], {42}	; 0x2a
    535c:	0110002a 	tsteq	r0, sl, lsr #32
    5360:	00005200 	andeq	r5, r0, r0, lsl #4
    5364:	00000000 	andeq	r0, r0, r0
    5368:	00010000 	andeq	r0, r1, r0
    536c:	10002a7a 	andne	r2, r0, sl, ror sl
    5370:	10002a7e 	andne	r2, r0, lr, ror sl
    5374:	00520001 	subseq	r0, r2, r1
    5378:	00000000 	andeq	r0, r0, r0
    537c:	01000000 	mrseq	r0, (UNDEF: 0)
    5380:	002a8201 	eoreq	r8, sl, r1, lsl #4
    5384:	002a8410 	eoreq	r8, sl, r0, lsl r4
    5388:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    5394:	2a820100 	bcs	fe08579c <__RAM_segment_used_end__+0xc5f8579c>
    5398:	2a821000 	bcs	fe0893a0 <__RAM_segment_used_end__+0xc5f893a0>
    539c:	00011000 	andeq	r1, r1, r0
    53a0:	00000056 	andeq	r0, r0, r6, asr r0
    53a4:	00000000 	andeq	r0, r0, r0
    53a8:	76000100 	strvc	r0, [r0], -r0, lsl #2
    53ac:	7a10002b 	bvc	405460 <__RAM_SIZE+0x305460>
    53b0:	0110002b 	tsteq	r0, fp, lsr #32
    53b4:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    53c0:	2a3c0001 	bcs	f053cc <__RAM_SIZE+0xe053cc>
    53c4:	2a461000 	bcs	11893cc <__RAM_SIZE+0x10893cc>
    53c8:	00011000 	andeq	r1, r1, r0
    53cc:	002b7e51 	eoreq	r7, fp, r1, asr lr
    53d0:	002bb610 	eoreq	fp, fp, r0, lsl r6
    53d4:	51000110 	tstpl	r0, r0, lsl r1
	...
    53e0:	2b7e0100 	blcs	1f857e8 <__RAM_SIZE+0x1e857e8>
    53e4:	2b7e1000 	blcs	1f893ec <__RAM_SIZE+0x1e893ec>
    53e8:	00011000 	andeq	r1, r1, r0
    53ec:	00000051 	andeq	r0, r0, r1, asr r0
    53f0:	00000000 	andeq	r0, r0, r0
    53f4:	aa000100 	bge	57fc <_Min_Stack_Size+0x47fc>
    53f8:	ae10002b 	cdpge	0, 1, cr0, cr0, cr11, {1}
    53fc:	0110002b 	tsteq	r0, fp, lsr #32
    5400:	00005100 	andeq	r5, r0, r0, lsl #2
    5404:	00000000 	andeq	r0, r0, r0
    5408:	00010000 	andeq	r0, r1, r0
    540c:	10002bb2 			; <UNDEFINED> instruction: 0x10002bb2
    5410:	10002bb6 			; <UNDEFINED> instruction: 0x10002bb6
    5414:	00560001 	subseq	r0, r6, r1
	...
    5420:	002bb201 	eoreq	fp, fp, r1, lsl #4
    5424:	002bb210 	eoreq	fp, fp, r0, lsl r2
    5428:	56000110 			; <UNDEFINED> instruction: 0x56000110
	...
    5434:	2bb60001 	blcs	fed85440 <__RAM_segment_used_end__+0xc6c85440>
    5438:	2be81000 	blcs	ffa09440 <__RAM_segment_used_end__+0xc7909440>
    543c:	00011000 	andeq	r1, r1, r0
    5440:	00000056 	andeq	r0, r0, r6, asr r0
    5444:	00000000 	andeq	r0, r0, r0
    5448:	002be800 	eoreq	lr, fp, r0, lsl #16
    544c:	002bec10 	eoreq	lr, fp, r0, lsl ip
    5450:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5454:	002bec00 	eoreq	lr, fp, r0, lsl #24
    5458:	002c0410 	eoreq	r0, ip, r0, lsl r4
    545c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5460:	002c0408 	eoreq	r0, ip, r8, lsl #8
    5464:	002c0810 	eoreq	r0, ip, r0, lsl r8
    5468:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    546c:	002c0800 	eoreq	r0, ip, r0, lsl #16
    5470:	002c1010 	eoreq	r1, ip, r0, lsl r0
    5474:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5478:	00000008 	andeq	r0, r0, r8
	...
    5490:	002be800 	eoreq	lr, fp, r0, lsl #16
    5494:	002bfc10 	eoreq	pc, fp, r0, lsl ip	; <UNPREDICTABLE>
    5498:	50000110 	andpl	r0, r0, r0, lsl r1
    549c:	10002bfc 	strdne	r2, [r0], -ip
    54a0:	10002bfe 	strdne	r2, [r0], -lr
    54a4:	01f30004 	mvnseq	r0, r4
    54a8:	2bfe9f50 	blcs	fffad1f0 <__RAM_segment_used_end__+0xc7ead1f0>
    54ac:	2c011000 	stccs	0, cr1, [r1], {-0}
    54b0:	00011000 	andeq	r1, r1, r0
    54b4:	002c0150 	eoreq	r0, ip, r0, asr r1
    54b8:	002c0410 	eoreq	r0, ip, r0, lsl r4
    54bc:	f3000410 	vqshl.u8	d0, d0, d0
    54c0:	049f5001 	ldreq	r5, [pc], #1	; 54c8 <_Min_Stack_Size+0x44c8>
    54c4:	0610002c 	ldreq	r0, [r0], -ip, lsr #32
    54c8:	0110002c 	tsteq	r0, ip, lsr #32
    54cc:	2c065000 	stccs	0, cr5, [r6], {-0}
    54d0:	2c081000 	stccs	0, cr1, [r8], {-0}
    54d4:	00041000 	andeq	r1, r4, r0
    54d8:	9f5001f3 	svcls	0x005001f3
    54dc:	10002c08 	andne	r2, r0, r8, lsl #24
    54e0:	10002c0a 	andne	r2, r0, sl, lsl #24
    54e4:	0a500001 	beq	14054f0 <__RAM_SIZE+0x13054f0>
    54e8:	1010002c 	andsne	r0, r0, ip, lsr #32
    54ec:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    54f0:	5001f300 	andpl	pc, r1, r0, lsl #6
    54f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    54f8:	00000000 	andeq	r0, r0, r0
    54fc:	00010000 	andeq	r0, r1, r0
    5500:	002bfc00 	eoreq	pc, fp, r0, lsl #24
    5504:	002bfc10 	eoreq	pc, fp, r0, lsl ip	; <UNPREDICTABLE>
    5508:	33000210 	movwcc	r0, #528	; 0x210
    550c:	002c029f 	mlaeq	ip, pc, r2, r0	; <UNPREDICTABLE>
    5510:	002c0410 	eoreq	r0, ip, r0, lsl r4
    5514:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    5520:	00000001 	andeq	r0, r0, r1
    5524:	00000100 	andeq	r0, r0, r0, lsl #2
    5528:	2bf00000 	blcs	ffc05530 <__RAM_segment_used_end__+0xc7b05530>
    552c:	2bf61000 	blcs	ffd89534 <__RAM_segment_used_end__+0xc7c89534>
    5530:	00011000 	andeq	r1, r1, r0
    5534:	002bf653 	eoreq	pc, fp, r3, asr r6	; <UNPREDICTABLE>
    5538:	002bfc10 	eoreq	pc, fp, r0, lsl ip	; <UNPREDICTABLE>
    553c:	70000210 	andvc	r0, r0, r0, lsl r2
    5540:	002bfc7c 	eoreq	pc, fp, ip, ror ip	; <UNPREDICTABLE>
    5544:	002bfc10 	eoreq	pc, fp, r0, lsl ip	; <UNPREDICTABLE>
    5548:	f3000510 	vqrshl.u8	d0, d0, d0
    554c:	1c345001 	ldcne	0, cr5, [r4], #-4
    5550:	10002bfe 	strdne	r2, [r0], -lr
    5554:	10002c01 	andne	r2, r0, r1, lsl #24
    5558:	7c700002 	ldclvc	0, cr0, [r0], #-8
    555c:	10002c08 	andne	r2, r0, r8, lsl #24
    5560:	10002c10 	andne	r2, r0, r0, lsl ip
    5564:	00530001 	subseq	r0, r3, r1
    5568:	00000000 	andeq	r0, r0, r0
    556c:	03000000 	movweq	r0, #0
	...
    5578:	ec000000 	stc	0, cr0, [r0], {-0}
    557c:	fc10002b 	ldc2	0, cr0, [r0], {43}	; 0x2b
    5580:	0310002b 	tsteq	r0, #43	; 0x2b
    5584:	9f7c7000 	svcls	0x007c7000
    5588:	10002bfc 	strdne	r2, [r0], -ip
    558c:	10002bfe 	strdne	r2, [r0], -lr
    5590:	01f30006 	mvnseq	r0, r6
    5594:	9f1c3450 	svcls	0x001c3450
    5598:	10002bfe 	strdne	r2, [r0], -lr
    559c:	10002c01 	andne	r2, r0, r1, lsl #24
    55a0:	7c700003 	ldclvc	0, cr0, [r0], #-12
    55a4:	002c019f 	mlaeq	ip, pc, r1, r0	; <UNPREDICTABLE>
    55a8:	002c0410 	eoreq	r0, ip, r0, lsl r4
    55ac:	f3000610 	vmin.u8	d0, d0, d0
    55b0:	1c345001 	ldcne	0, cr5, [r4], #-4
    55b4:	002c089f 	mlaeq	ip, pc, r8, r0	; <UNPREDICTABLE>
    55b8:	002c0a10 	eoreq	r0, ip, r0, lsl sl
    55bc:	70000310 	andvc	r0, r0, r0, lsl r3
    55c0:	2c0a9f7c 	stccs	15, cr9, [sl], {124}	; 0x7c
    55c4:	2c101000 	ldccs	0, cr1, [r0], {-0}
    55c8:	00061000 	andeq	r1, r6, r0
    55cc:	345001f3 	ldrbcc	r0, [r0], #-499	; 0xfffffe0d
    55d0:	00009f1c 	andeq	r9, r0, ip, lsl pc
    55d4:	00000000 	andeq	r0, r0, r0
    55d8:	02010000 	andeq	r0, r1, #0
    55dc:	00000002 	andeq	r0, r0, r2
    55e0:	01000000 	mrseq	r0, (UNDEF: 0)
    55e4:	00000000 	andeq	r0, r0, r0
    55e8:	10002bec 	andne	r2, r0, ip, ror #23
    55ec:	10002bec 	andne	r2, r0, ip, ror #23
    55f0:	ec500001 	mrrc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    55f4:	f010002b 			; <UNDEFINED> instruction: 0xf010002b
    55f8:	0310002b 	tsteq	r0, #43	; 0x2b
    55fc:	9f7c7000 	svcls	0x007c7000
    5600:	10002bf0 	strdne	r2, [r0], -r0
    5604:	10002bf6 	strdne	r2, [r0], -r6
    5608:	f6530001 			; <UNDEFINED> instruction: 0xf6530001
    560c:	fc10002b 	ldc2	0, cr0, [r0], {43}	; 0x2b
    5610:	0210002b 	andseq	r0, r0, #43	; 0x2b
    5614:	fc7c7000 	ldc2l	0, cr7, [ip], #-0
    5618:	fc10002b 	ldc2	0, cr0, [r0], {43}	; 0x2b
    561c:	0510002b 	ldreq	r0, [r0, #-43]	; 0xffffffd5
    5620:	5001f300 	andpl	pc, r1, r0, lsl #6
    5624:	2bfe1c34 	blcs	fff8c6fc <__RAM_segment_used_end__+0xc7e8c6fc>
    5628:	2c011000 	stccs	0, cr1, [r1], {-0}
    562c:	00021000 	andeq	r1, r2, r0
    5630:	2c087c70 	stccs	12, cr7, [r8], {112}	; 0x70
    5634:	2c101000 	ldccs	0, cr1, [r0], {-0}
    5638:	00011000 	andeq	r1, r1, r0
    563c:	00000053 	andeq	r0, r0, r3, asr r0
    5640:	00000000 	andeq	r0, r0, r0
    5644:	002c1000 	eoreq	r1, ip, r0
    5648:	002c1210 	eoreq	r1, ip, r0, lsl r2
    564c:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    5650:	002c1200 	eoreq	r1, ip, r0, lsl #4
    5654:	002ca410 	eoreq	sl, ip, r0, lsl r4
    5658:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    565c:	00000008 	andeq	r0, r0, r8
	...
    5674:	002c1000 	eoreq	r1, ip, r0
    5678:	002c1810 	eoreq	r1, ip, r0, lsl r8
    567c:	50000110 	andpl	r0, r0, r0, lsl r1
    5680:	10002c18 	andne	r2, r0, r8, lsl ip
    5684:	10002c46 	andne	r2, r0, r6, asr #24
    5688:	465c0001 	ldrbmi	r0, [ip], -r1
    568c:	4810002c 	ldmdami	r0, {r2, r3, r5}
    5690:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    5694:	5001f300 	andpl	pc, r1, r0, lsl #6
    5698:	002c489f 	mlaeq	ip, pc, r8, r4	; <UNPREDICTABLE>
    569c:	002c7010 	eoreq	r7, ip, r0, lsl r0
    56a0:	5c000110 	stfpls	f0, [r0], {16}
    56a4:	10002c70 	andne	r2, r0, r0, ror ip
    56a8:	10002c72 	andne	r2, r0, r2, ror ip
    56ac:	72500001 	subsvc	r0, r0, #1
    56b0:	8d10002c 	ldchi	0, cr0, [r0, #-176]	; 0xffffff50
    56b4:	0110002c 	tsteq	r0, ip, lsr #32
    56b8:	2c8d5c00 	stccs	12, cr5, [sp], {0}
    56bc:	2c901000 	ldccs	0, cr1, [r0], {0}
    56c0:	00041000 	andeq	r1, r4, r0
    56c4:	9f5001f3 	svcls	0x005001f3
    56c8:	10002c90 	mulne	r0, r0, ip
    56cc:	10002ca4 	andne	r2, r0, r4, lsr #25
    56d0:	005c0001 	subseq	r0, ip, r1
	...
    56e4:	002c1000 	eoreq	r1, ip, r0
    56e8:	002c4610 	eoreq	r4, ip, r0, lsl r6
    56ec:	51000110 	tstpl	r0, r0, lsl r1
    56f0:	10002c46 	andne	r2, r0, r6, asr #24
    56f4:	10002c48 	andne	r2, r0, r8, asr #24
    56f8:	01f30004 	mvnseq	r0, r4
    56fc:	2c489f51 	mcrrcs	15, 5, r9, r8, cr1
    5700:	2c8d1000 	stccs	0, cr1, [sp], {0}
    5704:	00011000 	andeq	r1, r1, r0
    5708:	002c8d51 	eoreq	r8, ip, r1, asr sp
    570c:	002c9010 	eoreq	r9, ip, r0, lsl r0
    5710:	f3000410 	vqshl.u8	d0, d0, d0
    5714:	909f5101 	addsls	r5, pc, r1, lsl #2
    5718:	a410002c 	ldrge	r0, [r0], #-44	; 0xffffffd4
    571c:	0110002c 	tsteq	r0, ip, lsr #32
    5720:	00005100 	andeq	r5, r0, r0, lsl #2
	...
    5734:	10002c10 	andne	r2, r0, r0, lsl ip
    5738:	10002c46 	andne	r2, r0, r6, asr #24
    573c:	46520001 	ldrbmi	r0, [r2], -r1
    5740:	4810002c 	ldmdami	r0, {r2, r3, r5}
    5744:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    5748:	5201f300 	andpl	pc, r1, #0, 6
    574c:	002c489f 	mlaeq	ip, pc, r8, r4	; <UNPREDICTABLE>
    5750:	002c8d10 	eoreq	r8, ip, r0, lsl sp
    5754:	52000110 	andpl	r0, r0, #16, 2
    5758:	10002c8d 	andne	r2, r0, sp, lsl #25
    575c:	10002c90 	mulne	r0, r0, ip
    5760:	01f30004 	mvnseq	r0, r4
    5764:	2c909f52 	ldccs	15, cr9, [r0], {82}	; 0x52
    5768:	2ca41000 	stccs	0, cr1, [r4]
    576c:	00011000 	andeq	r1, r1, r0
    5770:	00000052 	andeq	r0, r0, r2, asr r0
	...
    5780:	10000000 	andne	r0, r0, r0
    5784:	4610002c 	ldrmi	r0, [r0], -ip, lsr #32
    5788:	0110002c 	tsteq	r0, ip, lsr #32
    578c:	2c465300 	mcrrcs	3, 0, r5, r6, cr0
    5790:	2c481000 	marcs	acc0, r1, r8
    5794:	00041000 	andeq	r1, r4, r0
    5798:	9f5301f3 	svcls	0x005301f3
    579c:	10002c48 	andne	r2, r0, r8, asr #24
    57a0:	10002c8d 	andne	r2, r0, sp, lsl #25
    57a4:	8d530001 	ldclhi	0, cr0, [r3, #-4]
    57a8:	9010002c 	andsls	r0, r0, ip, lsr #32
    57ac:	0410002c 	ldreq	r0, [r0], #-44	; 0xffffffd4
    57b0:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    57b4:	002c909f 	mlaeq	ip, pc, r0, r9	; <UNPREDICTABLE>
    57b8:	002ca410 	eoreq	sl, ip, r0, lsl r4
    57bc:	53000110 	movwpl	r0, #272	; 0x110
	...
    57c8:	00000003 	andeq	r0, r0, r3
	...
    57d4:	2c120000 	ldccs	0, cr0, [r2], {-0}
    57d8:	2c221000 	stccs	0, cr1, [r2], #-0
    57dc:	00021000 	andeq	r1, r2, r0
    57e0:	2c229f30 	stccs	15, cr9, [r2], #-192	; 0xffffff40
    57e4:	2c461000 	marcs	acc0, r1, r6
    57e8:	00011000 	andeq	r1, r1, r0
    57ec:	002c4850 	eoreq	r4, ip, r0, asr r8
    57f0:	002c6210 	eoreq	r6, ip, r0, lsl r2
    57f4:	30000210 	andcc	r0, r0, r0, lsl r2
    57f8:	002c709f 	mlaeq	ip, pc, r0, r7	; <UNPREDICTABLE>
    57fc:	002c8410 	eoreq	r8, ip, r0, lsl r4
    5800:	30000210 	andcc	r0, r0, r0, lsl r2
    5804:	002c889f 	mlaeq	ip, pc, r8, r8	; <UNPREDICTABLE>
    5808:	002c8a10 	eoreq	r8, ip, r0, lsl sl
    580c:	50000110 	andpl	r0, r0, r0, lsl r1
    5810:	10002c8e 	andne	r2, r0, lr, lsl #25
    5814:	10002c92 	mulne	r0, r2, ip
    5818:	92500001 	subsls	r0, r0, #1
    581c:	a410002c 	ldrge	r0, [r0], #-44	; 0xffffffd4
    5820:	0210002c 	andseq	r0, r0, #44	; 0x2c
    5824:	009f4300 	addseq	r4, pc, r0, lsl #6
	...
    5830:	66000000 	strvs	r0, [r0], -r0
    5834:	7010002c 	andsvc	r0, r0, ip, lsr #32
    5838:	0110002c 	tsteq	r0, ip, lsr #32
    583c:	2c845400 	cfstrscs	mvf5, [r4], {0}
    5840:	2c881000 	stccs	0, cr1, [r8], {0}
    5844:	00011000 	andeq	r1, r1, r0
    5848:	00000054 	andeq	r0, r0, r4, asr r0
    584c:	00000000 	andeq	r0, r0, r0
    5850:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    5854:	2810002c 	ldmdacs	r0, {r2, r3, r5}
    5858:	0110002c 	tsteq	r0, ip, lsr #32
    585c:	00005e00 	andeq	r5, r0, r0, lsl #28
    5860:	00000000 	andeq	r0, r0, r0
    5864:	01000000 	mrseq	r0, (UNDEF: 0)
    5868:	10002c36 	andne	r2, r0, r6, lsr ip
    586c:	10002c36 	andne	r2, r0, r6, lsr ip
    5870:	005e0001 	subseq	r0, lr, r1
	...
    587c:	002c5a01 	eoreq	r5, ip, r1, lsl #20
    5880:	002c5a10 	eoreq	r5, ip, r0, lsl sl
    5884:	50000110 	andpl	r0, r0, r0, lsl r1
	...
    5890:	10002ca4 	andne	r2, r0, r4, lsr #25
    5894:	10002cac 	andne	r2, r0, ip, lsr #25
    5898:	007d0002 	rsbseq	r0, sp, r2
    589c:	10002cac 	andne	r2, r0, ip, lsr #25
    58a0:	10002d4a 	andne	r2, r0, sl, asr #26
    58a4:	207d0002 	rsbscs	r0, sp, r2
    58a8:	10002d4a 	andne	r2, r0, sl, asr #26
    58ac:	10002d4e 	andne	r2, r0, lr, asr #26
    58b0:	007d0002 	rsbseq	r0, sp, r2
    58b4:	10002d4e 	andne	r2, r0, lr, asr #26
    58b8:	10002d78 	andne	r2, r0, r8, ror sp
    58bc:	207d0002 	rsbscs	r0, sp, r2
	...
    58d4:	2ca40000 	stccs	0, cr0, [r4]
    58d8:	2cbc1000 	ldccs	0, cr1, [ip]
    58dc:	00011000 	andeq	r1, r1, r0
    58e0:	002cbc50 	eoreq	fp, ip, r0, asr ip
    58e4:	002cc010 	eoreq	ip, ip, r0, lsl r0
    58e8:	56000110 			; <UNDEFINED> instruction: 0x56000110
    58ec:	10002cc0 	andne	r2, r0, r0, asr #25
    58f0:	10002cd8 	ldrdne	r2, [r0], -r8
    58f4:	d8500001 	ldmdale	r0, {r0}^
    58f8:	4a10002c 	bmi	4059b0 <__RAM_SIZE+0x3059b0>
    58fc:	0110002d 	tsteq	r0, sp, lsr #32
    5900:	2d4a5600 	stclcs	6, cr5, [sl, #-0]
    5904:	2d4c1000 	stclcs	0, cr1, [ip, #-0]
    5908:	00011000 	andeq	r1, r1, r0
    590c:	002d4c50 	eoreq	r4, sp, r0, asr ip
    5910:	002d4e10 	eoreq	r4, sp, r0, lsl lr
    5914:	f3000410 	vqshl.u8	d0, d0, d0
    5918:	4e9f5001 	cdpmi	0, 9, cr5, cr15, cr1, {0}
    591c:	7810002d 	ldmdavc	r0, {r0, r2, r3, r5}
    5920:	0110002d 	tsteq	r0, sp, lsr #32
    5924:	00005600 	andeq	r5, r0, r0, lsl #12
	...
    5938:	2ca40000 	stccs	0, cr0, [r4]
    593c:	2cbc1000 	ldccs	0, cr1, [ip]
    5940:	00011000 	andeq	r1, r1, r0
    5944:	002cbc51 	eoreq	fp, ip, r1, asr ip
    5948:	002cc010 	eoreq	ip, ip, r0, lsl r0
    594c:	59000110 	stmdbpl	r0, {r4, r8}
    5950:	10002cc0 	andne	r2, r0, r0, asr #25
    5954:	10002cc4 	andne	r2, r0, r4, asr #25
    5958:	c4510001 	ldrbgt	r0, [r1], #-1
    595c:	4a10002c 	bmi	405a14 <__RAM_SIZE+0x305a14>
    5960:	0110002d 	tsteq	r0, sp, lsr #32
    5964:	2d4a5900 	vstrcs.16	s11, [sl, #-0]	; <UNPREDICTABLE>
    5968:	2d4e1000 	stclcs	0, cr1, [lr, #-0]
    596c:	00011000 	andeq	r1, r1, r0
    5970:	002d4e51 	eoreq	r4, sp, r1, asr lr
    5974:	002d7810 	eoreq	r7, sp, r0, lsl r8
    5978:	59000110 	stmdbpl	r0, {r4, r8}
	...
    5990:	10002ca4 	andne	r2, r0, r4, lsr #25
    5994:	10002cbc 			; <UNDEFINED> instruction: 0x10002cbc
    5998:	bc520001 	mrrclt	0, 0, r0, r2, cr1
    599c:	c010002c 	andsgt	r0, r0, ip, lsr #32
    59a0:	0110002c 	tsteq	r0, ip, lsr #32
    59a4:	2cc05700 	stclcs	7, cr5, [r0], {0}
    59a8:	2cc81000 	stclcs	0, cr1, [r8], {0}
    59ac:	00011000 	andeq	r1, r1, r0
    59b0:	002cc852 	eoreq	ip, ip, r2, asr r8
    59b4:	002d4a10 	eoreq	r4, sp, r0, lsl sl
    59b8:	57000110 	smladpl	r0, r0, r1, r0
    59bc:	10002d4a 	andne	r2, r0, sl, asr #26
    59c0:	10002d4e 	andne	r2, r0, lr, asr #26
    59c4:	4e520001 	cdpmi	0, 5, cr0, cr2, cr1, {0}
    59c8:	7810002d 	ldmdavc	r0, {r0, r2, r3, r5}
    59cc:	0110002d 	tsteq	r0, sp, lsr #32
    59d0:	00005700 	andeq	r5, r0, r0, lsl #14
	...
    59e0:	2ca40000 	stccs	0, cr0, [r4]
    59e4:	2cb61000 	ldccs	0, cr1, [r6]
    59e8:	00011000 	andeq	r1, r1, r0
    59ec:	002cb653 	eoreq	fp, ip, r3, asr r6
    59f0:	002d4a10 	eoreq	r4, sp, r0, lsl sl
    59f4:	58000110 	stmdapl	r0, {r4, r8}
    59f8:	10002d4a 	andne	r2, r0, sl, asr #26
    59fc:	10002d4e 	andne	r2, r0, lr, asr #26
    5a00:	4e530001 	cdpmi	0, 5, cr0, cr3, cr1, {0}
    5a04:	7810002d 	ldmdavc	r0, {r0, r2, r3, r5}
    5a08:	0110002d 	tsteq	r0, sp, lsr #32
    5a0c:	00005800 	andeq	r5, r0, r0, lsl #16
	...
    5a18:	2ca40000 	stccs	0, cr0, [r4]
    5a1c:	2cc01000 	stclcs	0, cr1, [r0], {0}
    5a20:	00021000 	andeq	r1, r2, r0
    5a24:	2cc00091 	stclcs	0, cr0, [r0], {145}	; 0x91
    5a28:	2d781000 	ldclcs	0, cr1, [r8, #-0]
    5a2c:	00021000 	andeq	r1, r2, r0
    5a30:	00000091 	muleq	r0, r1, r0
    5a34:	00000000 	andeq	r0, r0, r0
    5a38:	00010000 	andeq	r0, r1, r0
    5a3c:	2cc60001 	stclcs	0, cr0, [r6], {1}
    5a40:	2cee1000 	stclcs	0, cr1, [lr]
    5a44:	00011000 	andeq	r1, r1, r0
    5a48:	002cf051 	eoreq	pc, ip, r1, asr r0	; <UNPREDICTABLE>
    5a4c:	002cff10 	eoreq	pc, ip, r0, lsl pc	; <UNPREDICTABLE>
    5a50:	51000110 	tstpl	r0, r0, lsl r1
	...
    5a5c:	00000007 	andeq	r0, r0, r7
	...
    5a68:	2ca40000 	stccs	0, cr0, [r4]
    5a6c:	2cbc1000 	ldccs	0, cr1, [ip]
    5a70:	00021000 	andeq	r1, r2, r0
    5a74:	2cc09f30 	stclcs	15, cr9, [r0], {48}	; 0x30
    5a78:	2d181000 	ldccs	0, cr1, [r8, #-0]
    5a7c:	00021000 	andeq	r1, r2, r0
    5a80:	2d189f30 	ldccs	15, cr9, [r8, #-192]	; 0xffffff40
    5a84:	2d401000 	stclcs	0, cr1, [r0, #-0]
    5a88:	00011000 	andeq	r1, r1, r0
    5a8c:	002d4450 	eoreq	r4, sp, r0, asr r4
    5a90:	002d4610 	eoreq	r4, sp, r0, lsl r6
    5a94:	50000110 	andpl	r0, r0, r0, lsl r1
    5a98:	10002d46 	andne	r2, r0, r6, asr #26
    5a9c:	10002d5a 	andne	r2, r0, sl, asr sp
    5aa0:	9f300002 	svcls	0x00300002
    5aa4:	10002d5a 	andne	r2, r0, sl, asr sp
    5aa8:	10002d5c 	andne	r2, r0, ip, asr sp
    5aac:	5c500001 	mrrcpl	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
    5ab0:	7810002d 	ldmdavc	r0, {r0, r2, r3, r5}
    5ab4:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5ab8:	009f4300 	addseq	r4, pc, r0, lsl #6
    5abc:	00000000 	andeq	r0, r0, r0
    5ac0:	01000000 	mrseq	r0, (UNDEF: 0)
    5ac4:	d6000000 	strle	r0, [r0], -r0
    5ac8:	d810002c 	ldmdale	r0, {r2, r3, r5}
    5acc:	0210002c 	andseq	r0, r0, #44	; 0x2c
    5ad0:	d89f3000 	ldmle	pc, {ip, sp}	; <UNPREDICTABLE>
    5ad4:	ff10002c 			; <UNDEFINED> instruction: 0xff10002c
    5ad8:	0110002c 	tsteq	r0, ip, lsr #32
    5adc:	00005000 	andeq	r5, r0, r0
	...
    5ae8:	2cd60000 	ldclcs	0, cr0, [r6], {0}
    5aec:	2d4a1000 	stclcs	0, cr1, [sl, #-0]
    5af0:	00011000 	andeq	r1, r1, r0
    5af4:	002d4e54 	eoreq	r4, sp, r4, asr lr
    5af8:	002d7810 	eoreq	r7, sp, r0, lsl r8
    5afc:	54000110 	strpl	r0, [r0], #-272	; 0xfffffef0
	...
    5b0c:	10002d10 	andne	r2, r0, r0, lsl sp
    5b10:	10002d1e 	andne	r2, r0, lr, lsl sp
    5b14:	46520001 	ldrbmi	r0, [r2], -r1
    5b18:	4a10002d 	bmi	405bd4 <__RAM_SIZE+0x305bd4>
    5b1c:	0110002d 	tsteq	r0, sp, lsr #32
    5b20:	00005200 	andeq	r5, r0, r0, lsl #4
    5b24:	00000000 	andeq	r0, r0, r0
    5b28:	00010000 	andeq	r0, r1, r0
    5b2c:	10002cc4 	andne	r2, r0, r4, asr #25
    5b30:	10002cee 	andne	r2, r0, lr, ror #25
    5b34:	00510001 	subseq	r0, r1, r1
	...
    5b40:	002cc401 	eoreq	ip, ip, r1, lsl #8
    5b44:	002cc410 	eoreq	ip, ip, r0, lsl r4
    5b48:	51000110 	tstpl	r0, r0, lsl r1
	...
    5b54:	2cce0001 	stclcs	0, cr0, [lr], {1}
    5b58:	2cd21000 	ldclcs	0, cr1, [r2], {0}
    5b5c:	00011000 	andeq	r1, r1, r0
    5b60:	00000051 	andeq	r0, r0, r1, asr r0
    5b64:	00000000 	andeq	r0, r0, r0
    5b68:	ee000100 	adfs	f0, f0, f0
    5b6c:	ff10002c 			; <UNDEFINED> instruction: 0xff10002c
    5b70:	0110002c 	tsteq	r0, ip, lsr #32
    5b74:	00005100 	andeq	r5, r0, r0, lsl #2
    5b78:	00000000 	andeq	r0, r0, r0
    5b7c:	01000000 	mrseq	r0, (UNDEF: 0)
    5b80:	10002cee 	andne	r2, r0, lr, ror #25
    5b84:	10002cee 	andne	r2, r0, lr, ror #25
    5b88:	00510001 	subseq	r0, r1, r1
    5b8c:	00000000 	andeq	r0, r0, r0
    5b90:	01000000 	mrseq	r0, (UNDEF: 0)
    5b94:	002cf800 	eoreq	pc, ip, r0, lsl #16
    5b98:	002cfc10 	eoreq	pc, ip, r0, lsl ip	; <UNPREDICTABLE>
    5b9c:	51000110 	tstpl	r0, r0, lsl r1
	...
    5ba8:	2d1c0100 	ldfcss	f0, [ip, #-0]
    5bac:	2d1c1000 	ldccs	0, cr1, [ip, #-0]
    5bb0:	00011000 	andeq	r1, r1, r0
    5bb4:	00000053 	andeq	r0, r0, r3, asr r0
    5bb8:	00000000 	andeq	r0, r0, r0
    5bbc:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    5bc0:	2810002d 	ldmdacs	r0, {r0, r2, r3, r5}
    5bc4:	0110002d 	tsteq	r0, sp, lsr #32
    5bc8:	00005200 	andeq	r5, r0, r0, lsl #4
    5bcc:	00000000 	andeq	r0, r0, r0
    5bd0:	2d780000 	ldclcs	0, cr0, [r8, #-0]
    5bd4:	2d7c1000 	ldclcs	0, cr1, [ip, #-0]
    5bd8:	00021000 	andeq	r1, r2, r0
    5bdc:	2d7c007d 	ldclcs	0, cr0, [ip, #-500]!	; 0xfffffe0c
    5be0:	2d7e1000 	ldclcs	0, cr1, [lr, #-0]
    5be4:	00021000 	andeq	r1, r2, r0
    5be8:	2d7e207d 	ldclcs	0, cr2, [lr, #-500]!	; 0xfffffe0c
    5bec:	2d961000 	ldccs	0, cr1, [r6]
    5bf0:	00021000 	andeq	r1, r2, r0
    5bf4:	2d96387d 	ldccs	8, cr3, [r6, #500]	; 0x1f4
    5bf8:	2d9a1000 	ldccs	0, cr1, [sl]
    5bfc:	00021000 	andeq	r1, r2, r0
    5c00:	2d9a207d 	ldccs	0, cr2, [sl, #500]	; 0x1f4
    5c04:	2ec01000 	cdpcs	0, 12, cr1, cr0, cr0, {0}
    5c08:	00021000 	andeq	r1, r2, r0
    5c0c:	0000387d 	andeq	r3, r0, sp, ror r8
	...
    5c24:	10002d78 	andne	r2, r0, r8, ror sp
    5c28:	10002d94 	mulne	r0, r4, sp
    5c2c:	94500001 	ldrbls	r0, [r0], #-1
    5c30:	9a10002d 	bls	405cec <__RAM_SIZE+0x305cec>
    5c34:	0410002d 	ldreq	r0, [r0], #-45	; 0xffffffd3
    5c38:	5001f300 	andpl	pc, r1, r0, lsl #6
    5c3c:	002d9a9f 	mlaeq	sp, pc, sl, r9	; <UNPREDICTABLE>
    5c40:	002db810 	eoreq	fp, sp, r0, lsl r8
    5c44:	50000110 	andpl	r0, r0, r0, lsl r1
    5c48:	10002db8 			; <UNDEFINED> instruction: 0x10002db8
    5c4c:	10002e82 	andne	r2, r0, r2, lsl #29
    5c50:	82570001 	subshi	r0, r7, #1
    5c54:	8410002e 	ldrhi	r0, [r0], #-46	; 0xffffffd2
    5c58:	0110002e 	tsteq	r0, lr, lsr #32
    5c5c:	2e845000 	cdpcs	0, 8, cr5, cr4, cr0, {0}
    5c60:	2e861000 	cdpcs	0, 8, cr1, cr6, cr0, {0}
    5c64:	00041000 	andeq	r1, r4, r0
    5c68:	9f5001f3 	svcls	0x005001f3
    5c6c:	10002e86 	andne	r2, r0, r6, lsl #29
    5c70:	10002ec0 	andne	r2, r0, r0, asr #29
    5c74:	00570001 	subseq	r0, r7, r1
	...
    5c88:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    5c8c:	9410002d 	ldrls	r0, [r0], #-45	; 0xffffffd3
    5c90:	0110002d 	tsteq	r0, sp, lsr #32
    5c94:	2d945100 	ldfcss	f5, [r4]
    5c98:	2d9a1000 	ldccs	0, cr1, [sl]
    5c9c:	00041000 	andeq	r1, r4, r0
    5ca0:	9f5101f3 	svcls	0x005101f3
    5ca4:	10002d9a 	mulne	r0, sl, sp
    5ca8:	10002d9e 	mulne	r0, lr, sp
    5cac:	9e510001 	cdpls	0, 5, cr0, cr1, cr1, {0}
    5cb0:	8210002d 	andshi	r0, r0, #45	; 0x2d
    5cb4:	0110002e 	tsteq	r0, lr, lsr #32
    5cb8:	2e825900 	vdivcs.f16	s10, s4, s0	; <UNPREDICTABLE>
    5cbc:	2e861000 	cdpcs	0, 8, cr1, cr6, cr0, {0}
    5cc0:	00011000 	andeq	r1, r1, r0
    5cc4:	002e8651 	eoreq	r8, lr, r1, asr r6
    5cc8:	002ec010 	eoreq	ip, lr, r0, lsl r0
    5ccc:	59000110 	stmdbpl	r0, {r4, r8}
	...
    5ce4:	10002d78 	andne	r2, r0, r8, ror sp
    5ce8:	10002d94 	mulne	r0, r4, sp
    5cec:	94520001 	ldrbls	r0, [r2], #-1
    5cf0:	9a10002d 	bls	405dac <__RAM_SIZE+0x305dac>
    5cf4:	0410002d 	ldreq	r0, [r0], #-45	; 0xffffffd3
    5cf8:	5201f300 	andpl	pc, r1, #0, 6
    5cfc:	002d9a9f 	mlaeq	sp, pc, sl, r9	; <UNPREDICTABLE>
    5d00:	002da210 	eoreq	sl, sp, r0, lsl r2
    5d04:	52000110 	andpl	r0, r0, #16, 2
    5d08:	10002da2 	andne	r2, r0, r2, lsr #27
    5d0c:	10002e82 	andne	r2, r0, r2, lsl #29
    5d10:	82580001 	subshi	r0, r8, #1
    5d14:	8610002e 	ldrhi	r0, [r0], -lr, lsr #32
    5d18:	0110002e 	tsteq	r0, lr, lsr #32
    5d1c:	2e865200 	cdpcs	2, 8, cr5, cr6, cr0, {0}
    5d20:	2ec01000 	cdpcs	0, 12, cr1, cr0, cr0, {0}
    5d24:	00011000 	andeq	r1, r1, r0
    5d28:	00000058 	andeq	r0, r0, r8, asr r0
	...
    5d3c:	002d7800 	eoreq	r7, sp, r0, lsl #16
    5d40:	002d8e10 	eoreq	r8, sp, r0, lsl lr
    5d44:	53000110 	movwpl	r0, #272	; 0x110
    5d48:	10002d8e 	andne	r2, r0, lr, lsl #27
    5d4c:	10002d94 	mulne	r0, r4, sp
    5d50:	945a0001 	ldrbls	r0, [sl], #-1
    5d54:	9a10002d 	bls	405e10 <__RAM_SIZE+0x305e10>
    5d58:	0410002d 	ldreq	r0, [r0], #-45	; 0xffffffd3
    5d5c:	5301f300 	movwpl	pc, #4864	; 0x1300	; <UNPREDICTABLE>
    5d60:	002d9a9f 	mlaeq	sp, pc, sl, r9	; <UNPREDICTABLE>
    5d64:	002e8210 	eoreq	r8, lr, r0, lsl r2
    5d68:	5a000110 	bpl	61b0 <_Min_Stack_Size+0x51b0>
    5d6c:	10002e82 	andne	r2, r0, r2, lsl #29
    5d70:	10002e86 	andne	r2, r0, r6, lsl #29
    5d74:	86530001 	ldrbhi	r0, [r3], -r1
    5d78:	c010002e 	andsgt	r0, r0, lr, lsr #32
    5d7c:	0110002e 	tsteq	r0, lr, lsr #32
    5d80:	00005a00 	andeq	r5, r0, r0, lsl #20
	...
    5d94:	2d780000 	ldclcs	0, cr0, [r8, #-0]
    5d98:	2d941000 	ldccs	0, cr1, [r4]
    5d9c:	00021000 	andeq	r1, r2, r0
    5da0:	2d9a0091 	ldccs	0, cr0, [sl, #580]	; 0x244
    5da4:	2dbc1000 	ldccs	0, cr1, [ip]
    5da8:	00021000 	andeq	r1, r2, r0
    5dac:	2dbc0091 	ldccs	0, cr0, [ip, #580]!	; 0x244
    5db0:	2dee1000 	stclcs	0, cr1, [lr]
    5db4:	00011000 	andeq	r1, r1, r0
    5db8:	002df056 	eoreq	pc, sp, r6, asr r0	; <UNPREDICTABLE>
    5dbc:	002e8210 	eoreq	r8, lr, r0, lsl r2
    5dc0:	56000110 			; <UNDEFINED> instruction: 0x56000110
    5dc4:	10002e82 	andne	r2, r0, r2, lsl #29
    5dc8:	10002e86 	andne	r2, r0, r6, lsl #29
    5dcc:	00910002 	addseq	r0, r1, r2
    5dd0:	10002e86 	andne	r2, r0, r6, lsl #29
    5dd4:	10002ea4 	andne	r2, r0, r4, lsr #29
    5dd8:	00560001 	subseq	r0, r6, r1
	...
    5de4:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    5de8:	9a10002d 	bls	405ea4 <__RAM_SIZE+0x305ea4>
    5dec:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5df0:	9a049100 	bls	12a1f8 <__RAM_SIZE+0x2a1f8>
    5df4:	c010002d 	andsgt	r0, r0, sp, lsr #32
    5df8:	0210002e 	andseq	r0, r0, #46	; 0x2e
    5dfc:	00049100 	andeq	r9, r4, r0, lsl #2
	...
    5e08:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    5e0c:	9a10002d 	bls	405ec8 <__RAM_SIZE+0x305ec8>
    5e10:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5e14:	9a089100 	bls	22a21c <__RAM_SIZE+0x12a21c>
    5e18:	c010002d 	andsgt	r0, r0, sp, lsr #32
    5e1c:	0210002e 	andseq	r0, r0, #46	; 0x2e
    5e20:	00089100 	andeq	r9, r8, r0, lsl #2
	...
    5e2c:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    5e30:	9a10002d 	bls	405eec <__RAM_SIZE+0x305eec>
    5e34:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5e38:	9a0c9100 	bls	32a240 <__RAM_SIZE+0x22a240>
    5e3c:	c010002d 	andsgt	r0, r0, sp, lsr #32
    5e40:	0210002e 	andseq	r0, r0, #46	; 0x2e
    5e44:	000c9100 	andeq	r9, ip, r0, lsl #2
	...
    5e50:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    5e54:	9a10002d 	bls	405f10 <__RAM_SIZE+0x305f10>
    5e58:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5e5c:	9a109100 	bls	42a264 <__RAM_SIZE+0x32a264>
    5e60:	c010002d 	andsgt	r0, r0, sp, lsr #32
    5e64:	0210002e 	andseq	r0, r0, #46	; 0x2e
    5e68:	00109100 	andseq	r9, r0, r0, lsl #2
	...
    5e74:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    5e78:	9a10002d 	bls	405f34 <__RAM_SIZE+0x305f34>
    5e7c:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5e80:	9a149100 	bls	52a288 <__RAM_SIZE+0x42a288>
    5e84:	c010002d 	andsgt	r0, r0, sp, lsr #32
    5e88:	0210002e 	andseq	r0, r0, #46	; 0x2e
    5e8c:	00149100 	andseq	r9, r4, r0, lsl #2
	...
    5e98:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    5e9c:	9a10002d 	bls	405f58 <__RAM_SIZE+0x305f58>
    5ea0:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5ea4:	9a189100 	bls	62a2ac <__RAM_SIZE+0x52a2ac>
    5ea8:	c010002d 	andsgt	r0, r0, sp, lsr #32
    5eac:	0210002e 	andseq	r0, r0, #46	; 0x2e
    5eb0:	00189100 	andseq	r9, r8, r0, lsl #2
    5eb4:	00000000 	andeq	r0, r0, r0
    5eb8:	01000000 	mrseq	r0, (UNDEF: 0)
    5ebc:	a0000100 	andge	r0, r0, r0, lsl #2
    5ec0:	ba10002d 	blt	405f7c <__RAM_SIZE+0x305f7c>
    5ec4:	0110002d 	tsteq	r0, sp, lsr #32
    5ec8:	2df65100 	ldfcse	f5, [r6]
    5ecc:	2e051000 	cdpcs	0, 0, cr1, cr5, cr0, {0}
    5ed0:	00011000 	andeq	r1, r1, r0
    5ed4:	00000051 	andeq	r0, r0, r1, asr r0
    5ed8:	00000000 	andeq	r0, r0, r0
    5edc:	00000900 	andeq	r0, r0, r0, lsl #18
	...
    5ee8:	80000000 	andhi	r0, r0, r0
    5eec:	9410002d 	ldrls	r0, [r0], #-45	; 0xffffffd3
    5ef0:	0210002d 	andseq	r0, r0, #45	; 0x2d
    5ef4:	9a9f3000 	bls	fe7d1efc <__RAM_segment_used_end__+0xc66d1efc>
    5ef8:	3a10002d 	bcc	405fb4 <__RAM_SIZE+0x305fb4>
    5efc:	0210002e 	andseq	r0, r0, #46	; 0x2e
    5f00:	3a9f3000 	bcc	fe7d1f08 <__RAM_segment_used_end__+0xc66d1f08>
    5f04:	7810002e 	ldmdavc	r0, {r1, r2, r3, r5}
    5f08:	0110002e 	tsteq	r0, lr, lsr #32
    5f0c:	2e7c5000 	cdpcs	0, 7, cr5, cr12, cr0, {0}
    5f10:	2e7e1000 	cdpcs	0, 7, cr1, cr14, cr0, {0}
    5f14:	00011000 	andeq	r1, r1, r0
    5f18:	002e7e50 	eoreq	r7, lr, r0, asr lr
    5f1c:	002ea210 	eoreq	sl, lr, r0, lsl r2
    5f20:	30000210 	andcc	r0, r0, r0, lsl r2
    5f24:	002ea29f 	mlaeq	lr, pc, r2, sl	; <UNPREDICTABLE>
    5f28:	002ea410 	eoreq	sl, lr, r0, lsl r4
    5f2c:	50000110 	andpl	r0, r0, r0, lsl r1
    5f30:	10002ea4 	andne	r2, r0, r4, lsr #29
    5f34:	10002ec0 	andne	r2, r0, r0, asr #29
    5f38:	9f430002 	svcls	0x00430002
	...
    5f44:	00000002 	andeq	r0, r0, r2
    5f48:	2dac0000 	stccs	0, cr0, [ip]
    5f4c:	2dbc1000 	ldccs	0, cr1, [ip]
    5f50:	00021000 	andeq	r1, r2, r0
    5f54:	2dbc9f30 	ldccs	15, cr9, [ip, #192]!	; 0xc0
    5f58:	2dde1000 	ldclcs	0, cr1, [lr]
    5f5c:	00011000 	andeq	r1, r1, r0
    5f60:	002de051 	eoreq	lr, sp, r1, asr r0
    5f64:	002dec10 	eoreq	lr, sp, r0, lsl ip
    5f68:	51000110 	tstpl	r0, r0, lsl r1
	...
    5f74:	00000002 	andeq	r0, r0, r2
    5f78:	10002db6 			; <UNDEFINED> instruction: 0x10002db6
    5f7c:	10002dbc 			; <UNDEFINED> instruction: 0x10002dbc
    5f80:	9f300002 	svcls	0x00300002
    5f84:	10002dbc 			; <UNDEFINED> instruction: 0x10002dbc
    5f88:	10002e05 	andne	r2, r0, r5, lsl #28
    5f8c:	00500001 	subseq	r0, r0, r1
	...
    5f98:	b0000000 	andlt	r0, r0, r0
    5f9c:	8210002d 	andshi	r0, r0, #45	; 0x2d
    5fa0:	0110002e 	tsteq	r0, lr, lsr #32
    5fa4:	2e865400 	cdpcs	4, 8, cr5, cr6, cr0, {0}
    5fa8:	2ec01000 	cdpcs	0, 12, cr1, cr0, cr0, {0}
    5fac:	00011000 	andeq	r1, r1, r0
    5fb0:	00000054 	andeq	r0, r0, r4, asr r0
    5fb4:	00000000 	andeq	r0, r0, r0
    5fb8:	00000100 	andeq	r0, r0, r0, lsl #2
    5fbc:	b6000000 	strlt	r0, [r0], -r0
    5fc0:	f810002d 			; <UNDEFINED> instruction: 0xf810002d
    5fc4:	0110002d 	tsteq	r0, sp, lsr #32
    5fc8:	2df85200 	lfmcs	f5, 2, [r8]
    5fcc:	2e821000 	cdpcs	0, 8, cr1, cr2, cr0, {0}
    5fd0:	000a1000 	andeq	r1, sl, r0
    5fd4:	91060091 	swpls	r0, r1, [r6]
    5fd8:	31220604 			; <UNDEFINED> instruction: 0x31220604
    5fdc:	2e869f1c 	mcrcs	15, 4, r9, cr6, cr12, {0}
    5fe0:	2ec01000 	cdpcs	0, 12, cr1, cr0, cr0, {0}
    5fe4:	000a1000 	andeq	r1, sl, r0
    5fe8:	91060091 	swpls	r0, r1, [r6]
    5fec:	31220604 			; <UNDEFINED> instruction: 0x31220604
    5ff0:	00009f1c 	andeq	r9, r0, ip, lsl pc
    5ff4:	00000000 	andeq	r0, r0, r0
    5ff8:	00010000 	andeq	r0, r1, r0
    5ffc:	00000000 	andeq	r0, r0, r0
    6000:	2db00000 	ldccs	0, cr0, [r0]
    6004:	2db61000 	ldccs	0, cr1, [r6]
    6008:	00011000 	andeq	r1, r1, r0
    600c:	002db656 	eoreq	fp, sp, r6, asr r6
    6010:	002df810 	eoreq	pc, sp, r0, lsl r8	; <UNPREDICTABLE>
    6014:	52000110 	andpl	r0, r0, #16, 2
    6018:	10002df8 	strdne	r2, [r0], -r8
    601c:	10002e82 	andne	r2, r0, r2, lsl #29
    6020:	0091000a 	addseq	r0, r1, sl
    6024:	06049106 	streq	r9, [r4], -r6, lsl #2
    6028:	9f1c3122 	svcls	0x001c3122
    602c:	10002e86 	andne	r2, r0, r6, lsl #29
    6030:	10002ec0 	andne	r2, r0, r0, asr #29
    6034:	0091000a 	addseq	r0, r1, sl
    6038:	06049106 	streq	r9, [r4], -r6, lsl #2
    603c:	9f1c3122 	svcls	0x001c3122
	...
    604c:	10002e32 	andne	r2, r0, r2, lsr lr
    6050:	10002e40 	andne	r2, r0, r0, asr #28
    6054:	7e520001 	cdpvc	0, 5, cr0, cr2, cr1, {0}
    6058:	8210002e 	andshi	r0, r0, #46	; 0x2e
    605c:	0110002e 	tsteq	r0, lr, lsr #32
    6060:	00005200 	andeq	r5, r0, r0, lsl #4
    6064:	00000000 	andeq	r0, r0, r0
    6068:	00010000 	andeq	r0, r1, r0
    606c:	10002d9e 	mulne	r0, lr, sp
    6070:	10002dba 			; <UNDEFINED> instruction: 0x10002dba
    6074:	00510001 	subseq	r0, r1, r1
	...
    6080:	002d9e01 	eoreq	r9, sp, r1, lsl #28
    6084:	002d9e10 	eoreq	r9, sp, r0, lsl lr
    6088:	51000110 	tstpl	r0, r0, lsl r1
	...
    6094:	2da80001 	stccs	0, cr0, [r8, #4]!
    6098:	2dac1000 	stccs	0, cr1, [ip]
    609c:	00011000 	andeq	r1, r1, r0
    60a0:	00000051 	andeq	r0, r0, r1, asr r0
    60a4:	00000000 	andeq	r0, r0, r0
    60a8:	f4000100 	vst4.8	{d0,d2,d4,d6}, [r0], r0
    60ac:	0510002d 	ldreq	r0, [r0, #-45]	; 0xffffffd3
    60b0:	0110002e 	tsteq	r0, lr, lsr #32
    60b4:	00005100 	andeq	r5, r0, r0, lsl #2
    60b8:	00000000 	andeq	r0, r0, r0
    60bc:	01000000 	mrseq	r0, (UNDEF: 0)
    60c0:	10002df4 	strdne	r2, [r0], -r4
    60c4:	10002df4 	strdne	r2, [r0], -r4
    60c8:	00510001 	subseq	r0, r1, r1
    60cc:	00000000 	andeq	r0, r0, r0
    60d0:	01000000 	mrseq	r0, (UNDEF: 0)
    60d4:	002dfe00 	eoreq	pc, sp, r0, lsl #28
    60d8:	002e0210 	eoreq	r0, lr, r0, lsl r2
    60dc:	51000110 	tstpl	r0, r0, lsl r1
	...
    60e8:	2e3e0100 	rsfcse	f0, f6, f0
    60ec:	2e3e1000 	cdpcs	0, 3, cr1, cr14, cr0, {0}
    60f0:	00011000 	andeq	r1, r1, r0
    60f4:	00000053 	andeq	r0, r0, r3, asr r0
    60f8:	00000000 	andeq	r0, r0, r0
    60fc:	4a010000 	bmi	46104 <SYSTICK_CYCLES+0x1d0c5>
    6100:	4a10002e 	bmi	4061c0 <__RAM_SIZE+0x3061c0>
    6104:	0110002e 	tsteq	r0, lr, lsr #32
    6108:	00005200 	andeq	r5, r0, r0, lsl #4
    610c:	00000000 	andeq	r0, r0, r0
    6110:	2ec00000 	cdpcs	0, 12, cr0, cr0, cr0, {0}
    6114:	2ec21000 	cdpcs	0, 12, cr1, cr2, cr0, {0}
    6118:	00021000 	andeq	r1, r2, r0
    611c:	2ec2007d 	mcrcs	0, 6, r0, cr2, cr13, {3}
    6120:	2f081000 	svccs	0x00081000
    6124:	00021000 	andeq	r1, r2, r0
    6128:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    613c:	10002ec0 	andne	r2, r0, r0, asr #29
    6140:	10002eca 	andne	r2, r0, sl, asr #29
    6144:	ca500001 	bgt	1406150 <__RAM_SIZE+0x1306150>
    6148:	d410002e 	ldrle	r0, [r0], #-46	; 0xffffffd2
    614c:	0110002e 	tsteq	r0, lr, lsr #32
    6150:	2ed45300 	cdpcs	3, 13, cr5, cr4, cr0, {0}
    6154:	2ee01000 	cdpcs	0, 14, cr1, cr0, cr0, {0}
    6158:	00041000 	andeq	r1, r4, r0
    615c:	9f5001f3 	svcls	0x005001f3
    6160:	10002ee0 	andne	r2, r0, r0, ror #29
    6164:	10002ee8 	andne	r2, r0, r8, ror #29
    6168:	e8530001 	ldmda	r3, {r0}^
    616c:	0810002e 	ldmdaeq	r0, {r1, r2, r3, r5}
    6170:	0410002f 	ldreq	r0, [r0], #-47	; 0xffffffd1
    6174:	5001f300 	andpl	pc, r1, r0, lsl #6
    6178:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    617c:	00000000 	andeq	r0, r0, r0
    6180:	da010100 	ble	46588 <SYSTICK_CYCLES+0x1d549>
    6184:	de10002e 	cdple	0, 1, cr0, cr0, cr14, {1}
    6188:	0110002e 	tsteq	r0, lr, lsr #32
    618c:	00005000 	andeq	r5, r0, r0
	...
    619c:	00020000 	andeq	r0, r2, r0
    61a0:	0000007d 	andeq	r0, r0, sp, ror r0
    61a4:	00000000 	andeq	r0, r0, r0
    61a8:	00020000 	andeq	r0, r2, r0
    61ac:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    61c0:	00010000 	andeq	r0, r1, r0
    61c4:	00000050 	andeq	r0, r0, r0, asr r0
    61c8:	00000000 	andeq	r0, r0, r0
    61cc:	f3000400 	vshl.u8	d0, d0, d0
    61d0:	009f5001 	addseq	r5, pc, r1
	...
    61e4:	01000000 	mrseq	r0, (UNDEF: 0)
    61e8:	00005100 	andeq	r5, r0, r0, lsl #2
    61ec:	00000000 	andeq	r0, r0, r0
    61f0:	00040000 	andeq	r0, r4, r0
    61f4:	9f5101f3 	svcls	0x005101f3
	...
    620c:	00520001 	subseq	r0, r2, r1
    6210:	00000000 	andeq	r0, r0, r0
    6214:	04000000 	streq	r0, [r0], #-0
    6218:	5201f300 	andpl	pc, r1, #0, 6
    621c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    622c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6238:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    623c:	00000008 	andeq	r0, r0, r8
	...
    624c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    6258:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    625c:	00000008 	andeq	r0, r0, r8
	...
    6270:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    627c:	01f30004 	mvnseq	r0, r4
    6280:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    6294:	00010000 	andeq	r0, r1, r0
    6298:	00000051 	andeq	r0, r0, r1, asr r0
    629c:	00000000 	andeq	r0, r0, r0
    62a0:	f3000400 	vshl.u8	d0, d0, d0
    62a4:	009f5101 	addseq	r5, pc, r1, lsl #2
	...
    62b8:	01000000 	mrseq	r0, (UNDEF: 0)
    62bc:	00005000 	andeq	r5, r0, r0
    62c0:	00000000 	andeq	r0, r0, r0
    62c4:	00040000 	andeq	r0, r4, r0
    62c8:	9f5001f3 	svcls	0x005001f3
	...
    62e0:	00500001 	subseq	r0, r0, r1
    62e4:	00000000 	andeq	r0, r0, r0
    62e8:	04000000 	streq	r0, [r0], #-0
    62ec:	5001f300 	andpl	pc, r1, r0, lsl #6
    62f0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    6300:	7d000200 	sfmvc	f0, 4, [r0, #-0]
	...
    630c:	7d000200 	sfmvc	f0, 4, [r0, #-0]
    6310:	00000008 	andeq	r0, r0, r8
	...
    6324:	50000100 	andpl	r0, r0, r0, lsl #2
	...
    6330:	01f30004 	mvnseq	r0, r4
    6334:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    6344:	00020000 	andeq	r0, r2, r0
    6348:	0000007d 	andeq	r0, r0, sp, ror r0
    634c:	00000000 	andeq	r0, r0, r0
    6350:	00020000 	andeq	r0, r2, r0
    6354:	0000087d 	andeq	r0, r0, sp, ror r8
	...
    6368:	00010000 	andeq	r0, r1, r0
    636c:	00000050 	andeq	r0, r0, r0, asr r0
    6370:	00000000 	andeq	r0, r0, r0
    6374:	f3000400 	vshl.u8	d0, d0, d0
    6378:	009f5001 	addseq	r5, pc, r1
	...
    6388:	02000000 	andeq	r0, r0, #0
    638c:	00007d00 	andeq	r7, r0, r0, lsl #26
    6390:	00000000 	andeq	r0, r0, r0
    6394:	02000000 	andeq	r0, r0, #0
    6398:	000c7d00 	andeq	r7, ip, r0, lsl #26
    639c:	00000000 	andeq	r0, r0, r0
    63a0:	02000000 	andeq	r0, r0, #0
    63a4:	00007d00 	andeq	r7, r0, r0, lsl #26
	...
    63b8:	01000000 	mrseq	r0, (UNDEF: 0)
    63bc:	00005000 	andeq	r5, r0, r0
    63c0:	00000000 	andeq	r0, r0, r0
    63c4:	00040000 	andeq	r0, r4, r0
    63c8:	9f5001f3 	svcls	0x005001f3
	...
    63d8:	10002f78 	andne	r2, r0, r8, ror pc
    63dc:	10002f7a 	andne	r2, r0, sl, ror pc
    63e0:	7a500001 	bvc	14063ec <__RAM_SIZE+0x13063ec>
    63e4:	7c10002f 	ldcvc	0, cr0, [r0], {47}	; 0x2f
    63e8:	0410002f 	ldreq	r0, [r0], #-47	; 0xffffffd1
    63ec:	5001f300 	andpl	pc, r1, r0, lsl #6
    63f0:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    63fc:	002f7400 	eoreq	r7, pc, r0, lsl #8
    6400:	002f7610 	eoreq	r7, pc, r0, lsl r6	; <UNPREDICTABLE>
    6404:	50000110 	andpl	r0, r0, r0, lsl r1
    6408:	10002f76 	andne	r2, r0, r6, ror pc
    640c:	10002f78 	andne	r2, r0, r8, ror pc
    6410:	01f30004 	mvnseq	r0, r4
    6414:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    6420:	2f6a0000 	svccs	0x006a0000
    6424:	2f721000 	svccs	0x00721000
    6428:	00011000 	andeq	r1, r1, r0
    642c:	002f7250 	eoreq	r7, pc, r0, asr r2	; <UNPREDICTABLE>
    6430:	002f7410 	eoreq	r7, pc, r0, lsl r4	; <UNPREDICTABLE>
    6434:	f3000410 	vqshl.u8	d0, d0, d0
    6438:	009f5001 	addseq	r5, pc, r1
	...
    6444:	64000000 	strvs	r0, [r0], #-0
    6448:	6810002f 	ldmdavs	r0, {r0, r1, r2, r3, r5}
    644c:	0110002f 	tsteq	r0, pc, lsr #32
    6450:	2f685000 	svccs	0x00685000
    6454:	2f6a1000 	svccs	0x006a1000
    6458:	00041000 	andeq	r1, r4, r0
    645c:	9f5001f3 	svcls	0x005001f3
	...
    6468:	10002f48 	andne	r2, r0, r8, asr #30
    646c:	10002f4a 	andne	r2, r0, sl, asr #30
    6470:	007d0002 	rsbseq	r0, sp, r2
    6474:	10002f4a 	andne	r2, r0, sl, asr #30
    6478:	10002f64 	andne	r2, r0, r4, ror #30
    647c:	107d0002 	rsbsne	r0, sp, r2
	...
    648c:	10002f48 	andne	r2, r0, r8, asr #30
    6490:	10002f52 	andne	r2, r0, r2, asr pc
    6494:	52500001 	subspl	r0, r0, #1
    6498:	6410002f 	ldrvs	r0, [r0], #-47	; 0xffffffd1
    649c:	0410002f 	ldreq	r0, [r0], #-47	; 0xffffffd1
    64a0:	5001f300 	andpl	pc, r1, r0, lsl #6
    64a4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    64b0:	00000101 	andeq	r0, r0, r1, lsl #2
    64b4:	002f4800 	eoreq	r4, pc, r0, lsl #16
    64b8:	002f5210 	eoreq	r5, pc, r0, lsl r2	; <UNPREDICTABLE>
    64bc:	51000110 	tstpl	r0, r0, lsl r1
    64c0:	10002f52 	andne	r2, r0, r2, asr pc
    64c4:	10002f52 	andne	r2, r0, r2, asr pc
    64c8:	52540001 	subspl	r0, r4, #1
    64cc:	5610002f 	ldrpl	r0, [r0], -pc, lsr #32
    64d0:	0310002f 	tsteq	r0, #47	; 0x2f
    64d4:	9f017400 	svcls	0x00017400
    64d8:	10002f56 	andne	r2, r0, r6, asr pc
    64dc:	10002f64 	andne	r2, r0, r4, ror #30
    64e0:	00540001 	subseq	r0, r4, r1
	...
    64ec:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
    64f0:	5210002f 	andspl	r0, r0, #47	; 0x2f
    64f4:	0110002f 	tsteq	r0, pc, lsr #32
    64f8:	2f525200 	svccs	0x00525200
    64fc:	2f641000 	svccs	0x00641000
    6500:	00011000 	andeq	r1, r1, r0
    6504:	00000056 	andeq	r0, r0, r6, asr r0
    6508:	00000000 	andeq	r0, r0, r0
    650c:	00000300 	andeq	r0, r0, r0, lsl #6
    6510:	002f4e00 	eoreq	r4, pc, r0, lsl #28
    6514:	002f5210 	eoreq	r5, pc, r0, lsl r2	; <UNPREDICTABLE>
    6518:	30000210 	andcc	r0, r0, r0, lsl r2
    651c:	002f529f 	mlaeq	pc, pc, r2, r5	; <UNPREDICTABLE>
    6520:	002f6410 	eoreq	r6, pc, r0, lsl r4	; <UNPREDICTABLE>
    6524:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    6530:	10002f28 	andne	r2, r0, r8, lsr #30
    6534:	10002f2a 	andne	r2, r0, sl, lsr #30
    6538:	007d0002 	rsbseq	r0, sp, r2
    653c:	10002f2a 	andne	r2, r0, sl, lsr #30
    6540:	10002f48 	andne	r2, r0, r8, asr #30
    6544:	107d0002 	rsbsne	r0, sp, r2
	...
    6554:	10002f28 	andne	r2, r0, r8, lsr #30
    6558:	10002f32 	andne	r2, r0, r2, lsr pc
    655c:	32500001 	subscc	r0, r0, #1
    6560:	4810002f 	ldmdami	r0, {r0, r1, r2, r3, r5}
    6564:	0410002f 	ldreq	r0, [r0], #-47	; 0xffffffd1
    6568:	5001f300 	andpl	pc, r1, r0, lsl #6
    656c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
    657c:	002f2800 	eoreq	r2, pc, r0, lsl #16
    6580:	002f3510 	eoreq	r3, pc, r0, lsl r5	; <UNPREDICTABLE>
    6584:	51000110 	tstpl	r0, r0, lsl r1
    6588:	10002f35 	andne	r2, r0, r5, lsr pc
    658c:	10002f38 	andne	r2, r0, r8, lsr pc
    6590:	38540001 	ldmdacc	r4, {r0}^
    6594:	3c10002f 	ldccc	0, cr0, [r0], {47}	; 0x2f
    6598:	0310002f 	tsteq	r0, #47	; 0x2f
    659c:	9f017100 	svcls	0x00017100
    65a0:	10002f3c 	andne	r2, r0, ip, lsr pc
    65a4:	10002f48 	andne	r2, r0, r8, asr #30
    65a8:	00510001 	subseq	r0, r1, r1
	...
    65b4:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    65b8:	3210002f 	andscc	r0, r0, #47	; 0x2f
    65bc:	0110002f 	tsteq	r0, pc, lsr #32
    65c0:	2f325200 	svccs	0x00325200
    65c4:	2f481000 	svccs	0x00481000
    65c8:	00011000 	andeq	r1, r1, r0
    65cc:	00000056 	andeq	r0, r0, r6, asr r0
    65d0:	00000000 	andeq	r0, r0, r0
    65d4:	00000300 	andeq	r0, r0, r0, lsl #6
    65d8:	002f2e00 	eoreq	r2, pc, r0, lsl #28
    65dc:	002f3210 	eoreq	r3, pc, r0, lsl r2	; <UNPREDICTABLE>
    65e0:	30000210 	andcc	r0, r0, r0, lsl r2
    65e4:	002f329f 	mlaeq	pc, pc, r2, r3	; <UNPREDICTABLE>
    65e8:	002f4810 	eoreq	r4, pc, r0, lsl r8	; <UNPREDICTABLE>
    65ec:	55000110 	strpl	r0, [r0, #-272]	; 0xfffffef0
	...
    65f8:	10002f1c 	andne	r2, r0, ip, lsl pc
    65fc:	10002f1e 	andne	r2, r0, lr, lsl pc
    6600:	007d0002 	rsbseq	r0, sp, r2
    6604:	10002f1e 	andne	r2, r0, lr, lsl pc
    6608:	10002f28 	andne	r2, r0, r8, lsr #30
    660c:	087d0002 	ldmdaeq	sp!, {r1}^
	...
    661c:	10002f1c 	andne	r2, r0, ip, lsl pc
    6620:	10002f25 	andne	r2, r0, r5, lsr #30
    6624:	25500001 	ldrbcs	r0, [r0, #-1]
    6628:	2810002f 	ldmdacs	r0, {r0, r1, r2, r3, r5}
    662c:	0410002f 	ldreq	r0, [r0], #-47	; 0xffffffd1
    6630:	5001f300 	andpl	pc, r1, r0, lsl #6
    6634:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
    6638:	00000000 	andeq	r0, r0, r0
    663c:	002f0c00 	eoreq	r0, pc, r0, lsl #24
    6640:	002f0e10 	eoreq	r0, pc, r0, lsl lr	; <UNPREDICTABLE>
    6644:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    6648:	002f0e00 	eoreq	r0, pc, r0, lsl #28
    664c:	002f1c10 	eoreq	r1, pc, r0, lsl ip	; <UNPREDICTABLE>
    6650:	7d000210 	sfmvc	f0, 4, [r0, #-64]	; 0xffffffc0
    6654:	00000008 	andeq	r0, r0, r8
	...
    6660:	002f0c00 	eoreq	r0, pc, r0, lsl #24
    6664:	002f1110 	eoreq	r1, pc, r0, lsl r1	; <UNPREDICTABLE>
    6668:	50000110 	andpl	r0, r0, r0, lsl r1
    666c:	10002f11 	andne	r2, r0, r1, lsl pc
    6670:	10002f1c 	andne	r2, r0, ip, lsl pc
    6674:	01f30004 	mvnseq	r0, r4
    6678:	00009f50 	andeq	r9, r0, r0, asr pc
	...
    6684:	2f0c0000 	svccs	0x000c0000
    6688:	2f111000 	svccs	0x00111000
    668c:	00011000 	andeq	r1, r1, r0
    6690:	002f1151 	eoreq	r1, pc, r1, asr r1	; <UNPREDICTABLE>
    6694:	002f1c10 	eoreq	r1, pc, r0, lsl ip	; <UNPREDICTABLE>
    6698:	f3000410 	vqshl.u8	d0, d0, d0
    669c:	009f5101 	addseq	r5, pc, r1, lsl #2
    66a0:	00000000 	andeq	r0, r0, r0
    66a4:	Address 0x000066a4 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	0000006c 	andeq	r0, r0, ip, rrx
   4:	00000002 	andeq	r0, r0, r2
}
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	10000800 	andne	r0, r0, r0, lsl #16
  14:	0000001c 	andeq	r0, r0, ip, lsl r0
        if(ch == '\n' || it >= size) {
  18:	00000000 	andeq	r0, r0, r0
}
  1c:	00000010 	andeq	r0, r0, r0, lsl r0
  20:	00000000 	andeq	r0, r0, r0
  24:	00000010 	andeq	r0, r0, r0, lsl r0
  28:	00000000 	andeq	r0, r0, r0
  2c:	00000014 	andeq	r0, r0, r4, lsl r0
                thread_ptr -> tx_thread_performance_resume_count++;
  30:	00000000 	andeq	r0, r0, r0
  34:	00000018 	andeq	r0, r0, r8, lsl r0
        _tx_thread_system_ni_resume(thread_ptr);
  38:	00000000 	andeq	r0, r0, r0
  3c:	00000018 	andeq	r0, r0, r8, lsl r0
}
  40:	00000000 	andeq	r0, r0, r0
  44:	00000018 	andeq	r0, r0, r8, lsl r0
  48:	00000000 	andeq	r0, r0, r0
  4c:	00000018 	andeq	r0, r0, r8, lsl r0
  50:	00000000 	andeq	r0, r0, r0
  54:	00000018 	andeq	r0, r0, r8, lsl r0
  58:	1000081c 	andne	r0, r0, ip, lsl r8
  5c:	00000074 	andeq	r0, r0, r4, ror r0
  60:	10000890 	mulne	r0, r0, r8
  64:	00000028 	andeq	r0, r0, r8, lsr #32
	...
  70:	00000024 	andeq	r0, r0, r4, lsr #32
  74:	0bef0002 	bleq	ffbc0084 <__RAM_segment_used_end__+0xc7ac0084>
  78:	00040000 	andeq	r0, r4, r0
	...
  84:	00000010 	andeq	r0, r0, r0, lsl r0
  88:	100008b8 			; <UNDEFINED> instruction: 0x100008b8
  8c:	0000002c 	andeq	r0, r0, ip, lsr #32
	...
  98:	000000a4 	andeq	r0, r0, r4, lsr #1
  9c:	10d80002 	sbcsne	r0, r8, r2
  a0:	00040000 	andeq	r0, r4, r0
	...
  ac:	00000008 	andeq	r0, r0, r8
  b0:	100008e4 	andne	r0, r0, r4, ror #17
  b4:	00000002 	andeq	r0, r0, r2
  b8:	00000000 	andeq	r0, r0, r0
  bc:	0000000e 	andeq	r0, r0, lr
  c0:	100008e6 	andne	r0, r0, r6, ror #17
  c4:	00000024 	andeq	r0, r0, r4, lsr #32
  c8:	1000090a 	andne	r0, r0, sl, lsl #18
  cc:	0000007e 	andeq	r0, r0, lr, ror r0
  d0:	10000988 	andne	r0, r0, r8, lsl #19
  d4:	00000138 	andeq	r0, r0, r8, lsr r1
  d8:	10000ac0 	andne	r0, r0, r0, asr #21
  dc:	00000094 	muleq	r0, r4, r0
  e0:	10000b54 	andne	r0, r0, r4, asr fp
  e4:	000000c6 	andeq	r0, r0, r6, asr #1
  e8:	10000c20 	andne	r0, r0, r0, lsr #24
  ec:	000003ea 	andeq	r0, r0, sl, ror #7
  f0:	10001010 	andne	r1, r0, r0, lsl r0
  f4:	00000396 	muleq	r0, r6, r3
  f8:	100013a8 	andne	r1, r0, r8, lsr #7
  fc:	00000680 	andeq	r0, r0, r0, lsl #13
 100:	10001a28 	andne	r1, r0, r8, lsr #20
 104:	0000000c 	andeq	r0, r0, ip
 108:	10001a34 	andne	r1, r0, r4, lsr sl
 10c:	0000002c 	andeq	r0, r0, ip, lsr #32
 110:	00000000 	andeq	r0, r0, r0
 114:	0000002c 	andeq	r0, r0, ip, lsr #32
 118:	00000000 	andeq	r0, r0, r0
 11c:	00000028 	andeq	r0, r0, r8, lsr #32
 120:	00000000 	andeq	r0, r0, r0
 124:	00000020 	andeq	r0, r0, r0, lsr #32
 128:	00000000 	andeq	r0, r0, r0
 12c:	0000001c 	andeq	r0, r0, ip, lsl r0
 130:	00000000 	andeq	r0, r0, r0
 134:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 140:	00000044 	andeq	r0, r0, r4, asr #32
 144:	2c9d0002 	ldccs	0, cr0, [sp], {2}
 148:	00040000 	andeq	r0, r4, r0
 14c:	00000000 	andeq	r0, r0, r0
 150:	10001a60 	andne	r1, r0, r0, ror #20
 154:	00000014 	andeq	r0, r0, r4, lsl r0
 158:	00000000 	andeq	r0, r0, r0
 15c:	00000014 	andeq	r0, r0, r4, lsl r0
 160:	10001a74 	andne	r1, r0, r4, ror sl
 164:	0000001e 	andeq	r0, r0, lr, lsl r0
 168:	10001a94 	mulne	r0, r4, sl
 16c:	00000024 	andeq	r0, r0, r4, lsr #32
 170:	00000000 	andeq	r0, r0, r0
 174:	00000008 	andeq	r0, r0, r8
 178:	00000000 	andeq	r0, r0, r0
 17c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 188:	0000001c 	andeq	r0, r0, ip, lsl r0
 18c:	2ef00002 	cdpcs	0, 15, cr0, cr0, cr2, {0}
 190:	00040000 	andeq	r0, r4, r0
 194:	00000000 	andeq	r0, r0, r0
 198:	10001ab8 			; <UNDEFINED> instruction: 0x10001ab8
 19c:	00000056 	andeq	r0, r0, r6, asr r0
	...
 1a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1ac:	37760002 	ldrbcc	r0, [r6, -r2]!
 1b0:	00040000 	andeq	r0, r4, r0
 1b4:	00000000 	andeq	r0, r0, r0
 1b8:	10001b10 	andne	r1, r0, r0, lsl fp
 1bc:	000000ac 	andeq	r0, r0, ip, lsr #1
	...
 1c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1cc:	414b0002 	cmpmi	fp, r2
 1d0:	00040000 	andeq	r0, r4, r0
 1d4:	00000000 	andeq	r0, r0, r0
 1d8:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
 1dc:	00000038 	andeq	r0, r0, r8, lsr r0
	...
 1e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 1ec:	48970002 	ldmmi	r7, {r1}
 1f0:	00040000 	andeq	r0, r4, r0
 1f4:	00000000 	andeq	r0, r0, r0
 1f8:	10001bf4 	strdne	r1, [r0], -r4
 1fc:	00000088 	andeq	r0, r0, r8, lsl #1
	...
 208:	0000001c 	andeq	r0, r0, ip, lsl r0
 20c:	514c0002 	cmppl	ip, r2
 210:	00040000 	andeq	r0, r4, r0
 214:	00000000 	andeq	r0, r0, r0
 218:	10001c7c 	andne	r1, r0, ip, ror ip
 21c:	000000e8 	andeq	r0, r0, r8, ror #1
	...
 228:	0000001c 	andeq	r0, r0, ip, lsl r0
 22c:	5ac40002 	bpl	ff10023c <__RAM_segment_used_end__+0xc700023c>
 230:	00040000 	andeq	r0, r4, r0
 234:	00000000 	andeq	r0, r0, r0
 238:	10001d64 	andne	r1, r0, r4, ror #26
 23c:	0000000c 	andeq	r0, r0, ip
	...
 248:	0000001c 	andeq	r0, r0, ip, lsl r0
 24c:	668c0002 	strvs	r0, [ip], r2
 250:	00040000 	andeq	r0, r4, r0
 254:	00000000 	andeq	r0, r0, r0
 258:	10001d70 	andne	r1, r0, r0, ror sp
 25c:	0000004c 	andeq	r0, r0, ip, asr #32
	...
 268:	0000001c 	andeq	r0, r0, ip, lsl r0
 26c:	67d40002 	ldrbvs	r0, [r4, r2]
 270:	00040000 	andeq	r0, r4, r0
 274:	00000000 	andeq	r0, r0, r0
 278:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
 27c:	00000148 	andeq	r0, r0, r8, asr #2
	...
 288:	0000001c 	andeq	r0, r0, ip, lsl r0
 28c:	712d0002 			; <UNDEFINED> instruction: 0x712d0002
 290:	00040000 	andeq	r0, r4, r0
 294:	00000000 	andeq	r0, r0, r0
 298:	10001f04 	andne	r1, r0, r4, lsl #30
 29c:	00000020 	andeq	r0, r0, r0, lsr #32
	...
 2a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2ac:	7a640002 	bvc	19002bc <__RAM_SIZE+0x18002bc>
 2b0:	00040000 	andeq	r0, r4, r0
 2b4:	00000000 	andeq	r0, r0, r0
 2b8:	10001f24 	andne	r1, r0, r4, lsr #30
 2bc:	00000044 	andeq	r0, r0, r4, asr #32
	...
 2c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2cc:	82150002 	andshi	r0, r5, #2
 2d0:	00040000 	andeq	r0, r4, r0
 2d4:	00000000 	andeq	r0, r0, r0
 2d8:	10001f68 	andne	r1, r0, r8, ror #30
 2dc:	00000074 	andeq	r0, r0, r4, ror r0
	...
 2e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2ec:	8a5a0002 	bhi	16802fc <__RAM_SIZE+0x15802fc>
 2f0:	00040000 	andeq	r0, r4, r0
 2f4:	00000000 	andeq	r0, r0, r0
 2f8:	10001fdc 	ldrdne	r1, [r0], -ip
 2fc:	0000008c 	andeq	r0, r0, ip, lsl #1
	...
 308:	0000001c 	andeq	r0, r0, ip, lsl r0
 30c:	91b30002 			; <UNDEFINED> instruction: 0x91b30002
 310:	00040000 	andeq	r0, r4, r0
 314:	00000000 	andeq	r0, r0, r0
 318:	10002068 	andne	r2, r0, r8, rrx
 31c:	0000001c 	andeq	r0, r0, ip, lsl r0
	...
 328:	0000001c 	andeq	r0, r0, ip, lsl r0
 32c:	98800002 	stmls	r0, {r1}
 330:	00040000 	andeq	r0, r4, r0
 334:	00000000 	andeq	r0, r0, r0
 338:	10002084 	andne	r2, r0, r4, lsl #1
 33c:	000000d8 	ldrdeq	r0, [r0], -r8
	...
 348:	00000024 	andeq	r0, r0, r4, lsr #32
 34c:	a1cd0002 	bicge	r0, sp, r2
 350:	00040000 	andeq	r0, r4, r0
 354:	00000000 	andeq	r0, r0, r0
 358:	1000215c 	andne	r2, r0, ip, asr r1
 35c:	00000328 	andeq	r0, r0, r8, lsr #6
 360:	00000000 	andeq	r0, r0, r0
 364:	0000004c 	andeq	r0, r0, ip, asr #32
	...
 370:	00000024 	andeq	r0, r0, r4, lsr #32
 374:	b1a00002 	movlt	r0, r2
 378:	00040000 	andeq	r0, r4, r0
 37c:	00000000 	andeq	r0, r0, r0
 380:	10002484 	andne	r2, r0, r4, lsl #9
 384:	000002c0 	andeq	r0, r0, r0, asr #5
 388:	00000000 	andeq	r0, r0, r0
 38c:	00000030 	andeq	r0, r0, r0, lsr r0
	...
 398:	0000001c 	andeq	r0, r0, ip, lsl r0
 39c:	c0650002 	rsbgt	r0, r5, r2
 3a0:	00040000 	andeq	r0, r4, r0
 3a4:	00000000 	andeq	r0, r0, r0
 3a8:	10002744 	andne	r2, r0, r4, asr #14
 3ac:	0000017c 	andeq	r0, r0, ip, ror r1
	...
 3b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3bc:	cae50002 	bgt	ff9403cc <__RAM_segment_used_end__+0xc78403cc>
 3c0:	00040000 	andeq	r0, r4, r0
 3c4:	00000000 	andeq	r0, r0, r0
 3c8:	100028c0 	andne	r2, r0, r0, asr #17
 3cc:	0000003c 	andeq	r0, r0, ip, lsr r0
	...
 3d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3dc:	d2280002 	eorle	r0, r8, #2
 3e0:	00040000 	andeq	r0, r4, r0
 3e4:	00000000 	andeq	r0, r0, r0
 3e8:	100028fc 	strdne	r2, [r0], -ip
 3ec:	00000018 	andeq	r0, r0, r8, lsl r0
	...
 3f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 3fc:	d8dd0002 	ldmle	sp, {r1}^
 400:	00040000 	andeq	r0, r4, r0
 404:	00000000 	andeq	r0, r0, r0
 408:	10002914 	andne	r2, r0, r4, lsl r9
 40c:	00000090 	muleq	r0, r0, r0
	...
 418:	0000001c 	andeq	r0, r0, ip, lsl r0
 41c:	e2210002 	eor	r0, r1, #2
 420:	00040000 	andeq	r0, r4, r0
 424:	00000000 	andeq	r0, r0, r0
 428:	100029a4 	andne	r2, r0, r4, lsr #19
 42c:	00000058 	andeq	r0, r0, r8, asr r0
	...
 438:	0000001c 	andeq	r0, r0, ip, lsl r0
 43c:	e4280002 	strt	r0, [r8], #-2
 440:	00040000 	andeq	r0, r4, r0
 444:	00000000 	andeq	r0, r0, r0
 448:	100029fc 	strdne	r2, [r0], -ip
 44c:	0000002e 	andeq	r0, r0, lr, lsr #32
	...
 458:	0000001c 	andeq	r0, r0, ip, lsl r0
 45c:	e5c90002 	strb	r0, [r9, #2]
 460:	00040000 	andeq	r0, r4, r0
 464:	00000000 	andeq	r0, r0, r0
 468:	10002a2c 	andne	r2, r0, ip, lsr #20
 46c:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
	...
 478:	0000001c 	andeq	r0, r0, ip, lsl r0
 47c:	f0a60002 			; <UNDEFINED> instruction: 0xf0a60002
 480:	00040000 	andeq	r0, r4, r0
 484:	00000000 	andeq	r0, r0, r0
 488:	10002be8 	andne	r2, r0, r8, ror #23
 48c:	00000028 	andeq	r0, r0, r8, lsr #32
	...
 498:	0000001c 	andeq	r0, r0, ip, lsl r0
 49c:	f7d00002 			; <UNDEFINED> instruction: 0xf7d00002
 4a0:	00040000 	andeq	r0, r4, r0
 4a4:	00000000 	andeq	r0, r0, r0
 4a8:	10002c10 	andne	r2, r0, r0, lsl ip
 4ac:	00000094 	muleq	r0, r4, r0
	...
 4b8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4bc:	ffed0002 			; <UNDEFINED> instruction: 0xffed0002
 4c0:	00040000 	andeq	r0, r4, r0
 4c4:	00000000 	andeq	r0, r0, r0
 4c8:	10002ca4 	andne	r2, r0, r4, lsr #25
 4cc:	000000d4 	ldrdeq	r0, [r0], -r4
	...
 4d8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4dc:	09c70002 	stmibeq	r7, {r1}^
 4e0:	00040001 	andeq	r0, r4, r1
 4e4:	00000000 	andeq	r0, r0, r0
 4e8:	10002d78 	andne	r2, r0, r8, ror sp
 4ec:	00000148 	andeq	r0, r0, r8, asr #2
	...
 4f8:	0000001c 	andeq	r0, r0, ip, lsl r0
 4fc:	13900002 	orrsne	r0, r0, #2
 500:	00040001 	andeq	r0, r4, r1
 504:	00000000 	andeq	r0, r0, r0
 508:	10002ec0 	andne	r2, r0, r0, asr #29
 50c:	00000048 	andeq	r0, r0, r8, asr #32
	...
 518:	000000a4 	andeq	r0, r0, r4, lsr #1
 51c:	15150002 	ldrne	r0, [r5, #-2]
 520:	00040001 	andeq	r0, r4, r1
	...
 52c:	00000002 	andeq	r0, r0, r2
 530:	10002f08 	andne	r2, r0, r8, lsl #30
 534:	00000004 	andeq	r0, r0, r4
 538:	10002f0c 	andne	r2, r0, ip, lsl #30
 53c:	00000010 	andeq	r0, r0, r0, lsl r0
 540:	10002f1c 	andne	r2, r0, ip, lsl pc
 544:	0000000c 	andeq	r0, r0, ip
 548:	10002f28 	andne	r2, r0, r8, lsr #30
 54c:	00000020 	andeq	r0, r0, r0, lsr #32
 550:	10002f48 	andne	r2, r0, r8, asr #30
 554:	0000001c 	andeq	r0, r0, ip, lsl r0
 558:	10002f64 	andne	r2, r0, r4, ror #30
 55c:	00000006 	andeq	r0, r0, r6
 560:	10002f6a 	andne	r2, r0, sl, ror #30
 564:	0000000a 	andeq	r0, r0, sl
 568:	10002f74 	andne	r2, r0, r4, ror pc
 56c:	00000004 	andeq	r0, r0, r4
 570:	10002f78 	andne	r2, r0, r8, ror pc
 574:	00000004 	andeq	r0, r0, r4
 578:	00000000 	andeq	r0, r0, r0
 57c:	0000000a 	andeq	r0, r0, sl
 580:	00000000 	andeq	r0, r0, r0
 584:	00000010 	andeq	r0, r0, r0, lsl r0
 588:	00000000 	andeq	r0, r0, r0
 58c:	00000010 	andeq	r0, r0, r0, lsl r0
 590:	00000000 	andeq	r0, r0, r0
 594:	00000006 	andeq	r0, r0, r6
 598:	00000000 	andeq	r0, r0, r0
 59c:	0000000a 	andeq	r0, r0, sl
 5a0:	00000000 	andeq	r0, r0, r0
 5a4:	00000010 	andeq	r0, r0, r0, lsl r0
 5a8:	00000000 	andeq	r0, r0, r0
 5ac:	00000010 	andeq	r0, r0, r0, lsl r0
 5b0:	00000000 	andeq	r0, r0, r0
 5b4:	00000010 	andeq	r0, r0, r0, lsl r0
	...
 5c0:	0000001c 	andeq	r0, r0, ip, lsl r0
 5c4:	1d4a0002 	stclne	0, cr0, [sl, #-8]
 5c8:	00040001 	andeq	r0, r4, r1
 5cc:	00000000 	andeq	r0, r0, r0
 5d0:	10002f7c 	andne	r2, r0, ip, ror pc
 5d4:	00000070 	andeq	r0, r0, r0, ror r0
	...
 5e0:	0000001c 	andeq	r0, r0, ip, lsl r0
 5e4:	1d700002 	ldclne	0, cr0, [r0, #-8]!
 5e8:	00040001 	andeq	r0, r4, r1
 5ec:	00000000 	andeq	r0, r0, r0
 5f0:	10002fec 	andne	r2, r0, ip, ror #31
 5f4:	000000e0 	andeq	r0, r0, r0, ror #1
	...
 600:	0000001c 	andeq	r0, r0, ip, lsl r0
 604:	1d960002 	ldcne	0, cr0, [r6, #8]
 608:	00040001 	andeq	r0, r4, r1
 60c:	00000000 	andeq	r0, r0, r0
 610:	100030cc 	andne	r3, r0, ip, asr #1
 614:	000000d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
 620:	0000001c 	andeq	r0, r0, ip, lsl r0
 624:	1dbc0002 	ldcne	0, cr0, [ip, #8]!
 628:	00040001 	andeq	r0, r4, r1
 62c:	00000000 	andeq	r0, r0, r0
 630:	1000319c 	mulne	r0, ip, r1
 634:	00000040 	andeq	r0, r0, r0, asr #32
	...
 640:	0000001c 	andeq	r0, r0, ip, lsl r0
 644:	1de20002 	stclne	0, cr0, [r2, #8]!
 648:	00040001 	andeq	r0, r4, r1
 64c:	00000000 	andeq	r0, r0, r0
 650:	100031dc 	ldrdne	r3, [r0], -ip
 654:	000000b8 	strheq	r0, [r0], -r8
	...

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
  SystemCoreClock = SYSTEM_CLOCK;
   0:	10000800 	andne	r0, r0, r0, lsl #16
   4:	1000081c 	andne	r0, r0, ip, lsl r8
}
   8:	00000001 	andeq	r0, r0, r1
   c:	00000001 	andeq	r0, r0, r1
  10:	00000001 	andeq	r0, r0, r1
  14:	00000001 	andeq	r0, r0, r1
        if(ch == '\n' || it >= size) {
  18:	00000001 	andeq	r0, r0, r1
}
  1c:	00000001 	andeq	r0, r0, r1
  20:	00000001 	andeq	r0, r0, r1
  24:	00000001 	andeq	r0, r0, r1
  28:	00000001 	andeq	r0, r0, r1
  2c:	00000001 	andeq	r0, r0, r1
                thread_ptr -> tx_thread_performance_resume_count++;
  30:	00000001 	andeq	r0, r0, r1
  34:	00000001 	andeq	r0, r0, r1
        _tx_thread_system_ni_resume(thread_ptr);
  38:	00000001 	andeq	r0, r0, r1
  3c:	00000001 	andeq	r0, r0, r1
}
  40:	00000001 	andeq	r0, r0, r1
  44:	00000001 	andeq	r0, r0, r1
  48:	1000081c 	andne	r0, r0, ip, lsl r8
  4c:	10000890 	mulne	r0, r0, r8
  50:	10000890 	mulne	r0, r0, r8
  54:	100008b8 			; <UNDEFINED> instruction: 0x100008b8
	...
  60:	00000001 	andeq	r0, r0, r1
  64:	00000001 	andeq	r0, r0, r1
  68:	100008b8 			; <UNDEFINED> instruction: 0x100008b8
  6c:	100008e4 	andne	r0, r0, r4, ror #17
	...
  78:	1000092a 	andne	r0, r0, sl, lsr #18
  7c:	1000092c 	andne	r0, r0, ip, lsr #18
  80:	1000092e 	andne	r0, r0, lr, lsr #18
  84:	1000094c 	andne	r0, r0, ip, asr #18
	...
  90:	10000ade 	ldrdne	r0, [r0], -lr
  94:	10000af8 	strdne	r0, [r0], -r8
  98:	10000b00 	andne	r0, r0, r0, lsl #22
  9c:	10000b04 	andne	r0, r0, r4, lsl #22
  a0:	10000b04 	andne	r0, r0, r4, lsl #22
  a4:	10000b32 	andne	r0, r0, r2, lsr fp
	...
  b0:	10000b8a 	andne	r0, r0, sl, lsl #23
  b4:	10000bac 	andne	r0, r0, ip, lsr #23
  b8:	10000bba 			; <UNDEFINED> instruction: 0x10000bba
  bc:	10000bc0 	andne	r0, r0, r0, asr #23
  c0:	10000bc0 	andne	r0, r0, r0, asr #23
  c4:	10000be8 	andne	r0, r0, r8, ror #23
	...
  d0:	100013bc 			; <UNDEFINED> instruction: 0x100013bc
  d4:	100013be 			; <UNDEFINED> instruction: 0x100013be
  d8:	10001868 	andne	r1, r0, r8, ror #16
  dc:	100018da 	ldrdne	r1, [r0], -sl
	...
  e8:	1000163a 	andne	r1, r0, sl, lsr r6
  ec:	1000166c 	andne	r1, r0, ip, ror #12
  f0:	100017c0 	andne	r1, r0, r0, asr #15
  f4:	100017da 	ldrdne	r1, [r0], -sl
	...
 100:	1000168a 	andne	r1, r0, sl, lsl #13
 104:	100016c0 	andne	r1, r0, r0, asr #13
 108:	10001742 	andne	r1, r0, r2, asr #14
 10c:	1000175e 	andne	r1, r0, lr, asr r7
	...
 118:	100016c8 	andne	r1, r0, r8, asr #13
 11c:	10001706 	andne	r1, r0, r6, lsl #14
 120:	10001708 	andne	r1, r0, r8, lsl #14
 124:	10001710 	andne	r1, r0, r0, lsl r7
	...
 130:	00000001 	andeq	r0, r0, r1
 134:	00000001 	andeq	r0, r0, r1
 138:	100008e4 	andne	r0, r0, r4, ror #17
 13c:	100008e6 	andne	r0, r0, r6, ror #17
 140:	00000001 	andeq	r0, r0, r1
 144:	00000001 	andeq	r0, r0, r1
 148:	100008e6 	andne	r0, r0, r6, ror #17
 14c:	1000090a 	andne	r0, r0, sl, lsl #18
 150:	1000090a 	andne	r0, r0, sl, lsl #18
 154:	10000988 	andne	r0, r0, r8, lsl #19
 158:	10000988 	andne	r0, r0, r8, lsl #19
 15c:	10000ac0 	andne	r0, r0, r0, asr #21
 160:	10000ac0 	andne	r0, r0, r0, asr #21
 164:	10000b54 	andne	r0, r0, r4, asr fp
 168:	10000b54 	andne	r0, r0, r4, asr fp
 16c:	10000c1a 	andne	r0, r0, sl, lsl ip
 170:	10000c20 	andne	r0, r0, r0, lsr #24
 174:	1000100a 	andne	r1, r0, sl
 178:	10001010 	andne	r1, r0, r0, lsl r0
 17c:	100013a6 	andne	r1, r0, r6, lsr #7
 180:	100013a8 	andne	r1, r0, r8, lsr #7
 184:	10001a28 	andne	r1, r0, r8, lsr #20
 188:	10001a28 	andne	r1, r0, r8, lsr #20
 18c:	10001a34 	andne	r1, r0, r4, lsr sl
 190:	10001a34 	andne	r1, r0, r4, lsr sl
 194:	10001a60 	andne	r1, r0, r0, ror #20
 198:	00000001 	andeq	r0, r0, r1
 19c:	00000001 	andeq	r0, r0, r1
 1a0:	00000001 	andeq	r0, r0, r1
 1a4:	00000001 	andeq	r0, r0, r1
 1a8:	00000001 	andeq	r0, r0, r1
 1ac:	00000001 	andeq	r0, r0, r1
 1b0:	00000001 	andeq	r0, r0, r1
 1b4:	00000001 	andeq	r0, r0, r1
 1b8:	00000001 	andeq	r0, r0, r1
 1bc:	00000001 	andeq	r0, r0, r1
	...
 1c8:	10001a60 	andne	r1, r0, r0, ror #20
 1cc:	10001a74 	andne	r1, r0, r4, ror sl
 1d0:	00000001 	andeq	r0, r0, r1
 1d4:	00000001 	andeq	r0, r0, r1
 1d8:	10001a74 	andne	r1, r0, r4, ror sl
 1dc:	10001a92 	mulne	r0, r2, sl
 1e0:	10001a94 	mulne	r0, r4, sl
 1e4:	10001ab8 			; <UNDEFINED> instruction: 0x10001ab8
 1e8:	00000001 	andeq	r0, r0, r1
 1ec:	00000001 	andeq	r0, r0, r1
 1f0:	00000001 	andeq	r0, r0, r1
 1f4:	00000001 	andeq	r0, r0, r1
	...
 200:	10001ab8 			; <UNDEFINED> instruction: 0x10001ab8
 204:	10001b0e 	andne	r1, r0, lr, lsl #22
	...
 210:	10001b92 	mulne	r0, r2, fp
 214:	10001b96 	mulne	r0, r6, fp
 218:	10001b98 	mulne	r0, r8, fp
 21c:	10001b9a 	mulne	r0, sl, fp
	...
 228:	10001b10 	andne	r1, r0, r0, lsl fp
 22c:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
	...
 238:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
 23c:	10001bf4 	strdne	r1, [r0], -r4
	...
 248:	10001bf4 	strdne	r1, [r0], -r4
 24c:	10001c7c 	andne	r1, r0, ip, ror ip
	...
 258:	10001c7c 	andne	r1, r0, ip, ror ip
 25c:	10001d64 	andne	r1, r0, r4, ror #26
	...
 268:	10001d64 	andne	r1, r0, r4, ror #26
 26c:	10001d70 	andne	r1, r0, r0, ror sp
	...
 278:	10001d70 	andne	r1, r0, r0, ror sp
 27c:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
	...
 288:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
 28c:	10001f04 	andne	r1, r0, r4, lsl #30
	...
 298:	10001f04 	andne	r1, r0, r4, lsl #30
 29c:	10001f24 	andne	r1, r0, r4, lsr #30
	...
 2a8:	10001f24 	andne	r1, r0, r4, lsr #30
 2ac:	10001f68 	andne	r1, r0, r8, ror #30
	...
 2b8:	10001f68 	andne	r1, r0, r8, ror #30
 2bc:	10001fdc 	ldrdne	r1, [r0], -ip
	...
 2c8:	10001fec 	andne	r1, r0, ip, ror #31
 2cc:	10001ff2 	strdne	r1, [r0], -r2
 2d0:	1000203c 	andne	r2, r0, ip, lsr r0
 2d4:	10002040 	andne	r2, r0, r0, asr #32
	...
 2e0:	10001fdc 	ldrdne	r1, [r0], -ip
 2e4:	10002068 	andne	r2, r0, r8, rrx
	...
 2f0:	10002068 	andne	r2, r0, r8, rrx
 2f4:	10002084 	andne	r2, r0, r4, lsl #1
	...
 300:	1000209a 	mulne	r0, sl, r0
 304:	100020ae 	andne	r2, r0, lr, lsr #1
 308:	100020d8 	ldrdne	r2, [r0], -r8
 30c:	10002138 	andne	r2, r0, r8, lsr r1
	...
 318:	10002084 	andne	r2, r0, r4, lsl #1
 31c:	1000215c 	andne	r2, r0, ip, asr r1
	...
 328:	1000216a 	andne	r2, r0, sl, ror #2
 32c:	1000217e 	andne	r2, r0, lr, ror r1
 330:	100021ba 			; <UNDEFINED> instruction: 0x100021ba
 334:	1000221a 	andne	r2, r0, sl, lsl r2
	...
 340:	1000229e 	mulne	r0, lr, r2
 344:	100022b2 			; <UNDEFINED> instruction: 0x100022b2
 348:	10002310 	andne	r2, r0, r0, lsl r3
 34c:	10002370 	andne	r2, r0, r0, ror r3
	...
 358:	100023ac 	andne	r2, r0, ip, lsr #7
 35c:	100023c0 	andne	r2, r0, r0, asr #7
 360:	10002424 	andne	r2, r0, r4, lsr #8
 364:	10002484 	andne	r2, r0, r4, lsl #9
	...
 370:	1000215c 	andne	r2, r0, ip, asr r1
 374:	10002484 	andne	r2, r0, r4, lsl #9
 378:	00000001 	andeq	r0, r0, r1
 37c:	00000001 	andeq	r0, r0, r1
	...
 388:	10002490 	mulne	r0, r0, r4
 38c:	100024a4 	andne	r2, r0, r4, lsr #9
 390:	1000256c 	andne	r2, r0, ip, ror #10
 394:	100025ce 	andne	r2, r0, lr, asr #11
	...
 3a0:	10002506 	andne	r2, r0, r6, lsl #10
 3a4:	1000251c 	andne	r2, r0, ip, lsl r5
 3a8:	100026a2 	andne	r2, r0, r2, lsr #13
 3ac:	10002704 	andne	r2, r0, r4, lsl #14
	...
 3b8:	10002484 	andne	r2, r0, r4, lsl #9
 3bc:	10002744 	andne	r2, r0, r4, asr #14
 3c0:	00000001 	andeq	r0, r0, r1
 3c4:	00000001 	andeq	r0, r0, r1
	...
 3d0:	1000274a 	andne	r2, r0, sl, asr #14
 3d4:	1000275e 	andne	r2, r0, lr, asr r7
 3d8:	10002776 	andne	r2, r0, r6, ror r7
 3dc:	100027d6 	ldrdne	r2, [r0], -r6
	...
 3e8:	10002770 	andne	r2, r0, r0, ror r7
 3ec:	10002774 	andne	r2, r0, r4, ror r7
 3f0:	100027d6 	ldrdne	r2, [r0], -r6
 3f4:	100027da 	ldrdne	r2, [r0], -sl
 3f8:	100027f2 	strdne	r2, [r0], -r2	; <UNPREDICTABLE>
 3fc:	100027f6 	strdne	r2, [r0], -r6
 400:	100027f8 	strdne	r2, [r0], -r8
 404:	100027fc 	strdne	r2, [r0], -ip
 408:	10002822 	andne	r2, r0, r2, lsr #16
 40c:	10002826 	andne	r2, r0, r6, lsr #16
	...
 418:	1000282a 	andne	r2, r0, sl, lsr #16
 41c:	1000283c 	andne	r2, r0, ip, lsr r8
 420:	1000283e 	andne	r2, r0, lr, lsr r8
 424:	100028c0 	andne	r2, r0, r0, asr #17
	...
 430:	10002744 	andne	r2, r0, r4, asr #14
 434:	100028c0 	andne	r2, r0, r0, asr #17
	...
 440:	100028c0 	andne	r2, r0, r0, asr #17
 444:	100028fc 	strdne	r2, [r0], -ip
	...
 450:	100028fc 	strdne	r2, [r0], -ip
 454:	10002914 	andne	r2, r0, r4, lsl r9
	...
 460:	10002914 	andne	r2, r0, r4, lsl r9
 464:	100029a4 	andne	r2, r0, r4, lsr #19
	...
 470:	100029a4 	andne	r2, r0, r4, lsr #19
 474:	100029fc 	strdne	r2, [r0], -ip
	...
 480:	100029fc 	strdne	r2, [r0], -ip
 484:	10002a2a 	andne	r2, r0, sl, lsr #20
	...
 490:	10002a2c 	andne	r2, r0, ip, lsr #20
 494:	10002be8 	andne	r2, r0, r8, ror #23
	...
 4a0:	10002be8 	andne	r2, r0, r8, ror #23
 4a4:	10002c10 	andne	r2, r0, r0, lsl ip
	...
 4b0:	10002c10 	andne	r2, r0, r0, lsl ip
 4b4:	10002ca4 	andne	r2, r0, r4, lsr #25
	...
 4c0:	10002ca4 	andne	r2, r0, r4, lsr #25
 4c4:	10002d78 	andne	r2, r0, r8, ror sp
	...
 4d0:	10002d78 	andne	r2, r0, r8, ror sp
 4d4:	10002ec0 	andne	r2, r0, r0, asr #29
	...
 4e0:	10002ec0 	andne	r2, r0, r0, asr #29
 4e4:	10002f08 	andne	r2, r0, r8, lsl #30
	...
 4f0:	00000001 	andeq	r0, r0, r1
 4f4:	00000001 	andeq	r0, r0, r1
 4f8:	10002f08 	andne	r2, r0, r8, lsl #30
 4fc:	10002f0c 	andne	r2, r0, ip, lsl #30
 500:	10002f0c 	andne	r2, r0, ip, lsl #30
 504:	10002f1c 	andne	r2, r0, ip, lsl pc
 508:	10002f1c 	andne	r2, r0, ip, lsl pc
 50c:	10002f28 	andne	r2, r0, r8, lsr #30
 510:	10002f28 	andne	r2, r0, r8, lsr #30
 514:	10002f48 	andne	r2, r0, r8, asr #30
 518:	10002f48 	andne	r2, r0, r8, asr #30
 51c:	10002f64 	andne	r2, r0, r4, ror #30
 520:	10002f64 	andne	r2, r0, r4, ror #30
 524:	10002f6a 	andne	r2, r0, sl, ror #30
 528:	10002f6a 	andne	r2, r0, sl, ror #30
 52c:	10002f74 	andne	r2, r0, r4, ror pc
 530:	10002f74 	andne	r2, r0, r4, ror pc
 534:	10002f78 	andne	r2, r0, r8, ror pc
 538:	10002f78 	andne	r2, r0, r8, ror pc
 53c:	10002f7c 	andne	r2, r0, ip, ror pc
 540:	00000001 	andeq	r0, r0, r1
 544:	00000001 	andeq	r0, r0, r1
 548:	00000001 	andeq	r0, r0, r1
 54c:	00000001 	andeq	r0, r0, r1
 550:	00000001 	andeq	r0, r0, r1
 554:	00000001 	andeq	r0, r0, r1
 558:	00000001 	andeq	r0, r0, r1
 55c:	00000001 	andeq	r0, r0, r1
 560:	00000001 	andeq	r0, r0, r1
 564:	00000001 	andeq	r0, r0, r1
 568:	00000001 	andeq	r0, r0, r1
 56c:	00000001 	andeq	r0, r0, r1
 570:	00000001 	andeq	r0, r0, r1
 574:	00000001 	andeq	r0, r0, r1
 578:	00000001 	andeq	r0, r0, r1
 57c:	00000001 	andeq	r0, r0, r1
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	0000029e 	muleq	r0, lr, r2
       4:	011d0003 	tsteq	sp, r3
}
       8:	01020000 	mrseq	r0, (UNDEF: 2)
       c:	000d0efb 	strdeq	r0, [sp], -fp
      10:	01010101 	tsteq	r1, r1, lsl #2
      14:	01000000 	mrseq	r0, (UNDEF: 0)
        if(ch == '\n' || it >= size) {
      18:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
}
      1c:	7070612f 	rsbsvc	r6, r0, pc, lsr #2
      20:	6163696c 	cmnvs	r3, ip, ror #18
      24:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
      28:	2f2e2e00 	svccs	0x002e2e00
      2c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
      34:	6f747262 	svcvs	0x00747262
        _tx_thread_system_ni_resume(thread_ptr);
      38:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
      3c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
}
      40:	6f702f78 	svcvs	0x00702f78
      44:	2f737472 	svccs	0x00737472
      48:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
      4c:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; fffffec0 <__RAM_segment_used_end__+0xc7effec0>
      50:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
      54:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
      58:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
      5c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
      60:	2f2e2e2f 	svccs	0x002e2e2f
      64:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
      68:	2f736f74 	svccs	0x00736f74
      6c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
      70:	2f786461 	svccs	0x00786461
      74:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
      78:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
      7c:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
      80:	6f432f2e 	svcvs	0x00432f2e
      84:	492f6572 	stmdbmi	pc!, {r1, r4, r5, r6, r8, sl, sp, lr}	; <UNPREDICTABLE>
      88:	6300636e 	movwvs	r6, #878	; 0x36e
      8c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
      90:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
      94:	6f646978 	svcvs	0x00646978
      98:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
      9c:	6172676f 	cmnvs	r2, pc, ror #14
      a0:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
      a4:	63675f6d 	cmnvs	r7, #436	; 0x1b4
      a8:	63675c63 	cmnvs	r7, #25344	; 0x6300
      ac:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
      b0:	6f6e2d6d 	svcvs	0x006e2d6d
      b4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
      b8:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
      bc:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
      c0:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
      c4:	30312e31 	eorscc	r2, r1, r1, lsr lr
      c8:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
      cc:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
      d0:	61652d65 	cmnvs	r5, r5, ror #26
      d4:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
      d8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
      dc:	00006564 	andeq	r6, r0, r4, ror #10
      e0:	6e69616d 	powvsez	f6, f1, #5.0
      e4:	0100632e 	tsteq	r0, lr, lsr #6
      e8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
      ec:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
      f0:	00682e74 	rsbeq	r2, r8, r4, ror lr
      f4:	74000002 	strvc	r0, [r0], #-2
      f8:	70615f78 	rsbvc	r5, r1, r8, ror pc
      fc:	00682e69 	rsbeq	r2, r8, r9, ror #28
     100:	75000003 	strvc	r0, [r0, #-3]
     104:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
     108:	00040068 	andeq	r0, r4, r8, rrx
     10c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
     110:	682e6f69 	stmdavs	lr!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}
     114:	00000500 	andeq	r0, r0, r0, lsl #10
     118:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
     11c:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
     120:	00003e6e 	andeq	r3, r0, lr, ror #28
     124:	05000000 	streq	r0, [r0, #-0]
     128:	0205002f 	andeq	r0, r5, #47	; 0x2f
     12c:	10000800 	andne	r0, r0, r0, lsl #16
     130:	06012c03 	streq	r2, [r1], -r3, lsl #24
     134:	06050501 	streq	r0, [r5], -r1, lsl #10
     138:	06090521 	streq	r0, [r9], -r1, lsr #10
     13c:	00050501 	andeq	r0, r5, r1, lsl #10
     140:	06010402 	streq	r0, [r1], -r2, lsl #8
     144:	00090521 	andeq	r0, r9, r1, lsr #10
     148:	13010402 	movwne	r0, #5122	; 0x1402
     14c:	01040200 	mrseq	r0, R12_usr
     150:	02002006 	andeq	r2, r0, #6
     154:	3d060104 	stfccs	f0, [r6, #-16]
     158:	02000a05 	andeq	r0, r0, #20480	; 0x5000
     15c:	05480104 	strbeq	r0, [r8, #-260]	; 0xfffffefc
     160:	04020009 	streq	r0, [r2], #-9
     164:	02130601 	andseq	r0, r3, #1048576	; 0x100000
     168:	01010004 	tsteq	r1, r4
     16c:	05002605 	streq	r2, [r0, #-1541]	; 0xfffff9fb
     170:	00000002 	andeq	r0, r0, r2
     174:	05051900 	streq	r1, [r5, #-2304]	; 0xfffff700
     178:	06010521 	streq	r0, [r1], -r1, lsr #10
     17c:	0004023d 	andeq	r0, r4, sp, lsr r2
     180:	1c050101 	stfnes	f0, [r5], {1}
     184:	00020500 	andeq	r0, r2, r0, lsl #10
     188:	03000000 	movweq	r0, #0
     18c:	0505010b 	streq	r0, [r5, #-267]	; 0xfffffef5
     190:	06010521 	streq	r0, [r1], -r1, lsr #10
     194:	0004023d 	andeq	r0, r4, sp, lsr r2
     198:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     19c:	00020500 	andeq	r0, r2, r0, lsl #10
     1a0:	03000000 	movweq	r0, #0
     1a4:	0505010f 	streq	r0, [r5, #-271]	; 0xfffffef1
     1a8:	06010521 	streq	r0, [r1], -r1, lsr #10
     1ac:	0005024b 	andeq	r0, r5, fp, asr #4
     1b0:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     1b4:	00020500 	andeq	r0, r2, r0, lsl #10
     1b8:	03000000 	movweq	r0, #0
     1bc:	05050113 	streq	r0, [r5, #-275]	; 0xfffffeed
     1c0:	01054b21 	tsteq	r5, r1, lsr #22
     1c4:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     1c8:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     1cc:	02050012 	andeq	r0, r5, #18
     1d0:	00000000 	andeq	r0, r0, r0
     1d4:	05011803 	streq	r1, [r1, #-2051]	; 0xfffff7fd
     1d8:	054b2105 	strbeq	r2, [fp, #-261]	; 0xfffffefb
     1dc:	022f0601 	eoreq	r0, pc, #1048576	; 0x100000
     1e0:	01010005 	tsteq	r1, r5
     1e4:	05001205 	streq	r1, [r0, #-517]	; 0xfffffdfb
     1e8:	00000002 	andeq	r0, r0, r2
     1ec:	011d0300 	tsteq	sp, r0, lsl #6
     1f0:	4b210505 	blmi	84160c <__RAM_SIZE+0x74160c>
     1f4:	2f060105 	svccs	0x00060105
     1f8:	01000502 	tsteq	r0, r2, lsl #10
     1fc:	00120501 	andseq	r0, r2, r1, lsl #10
     200:	00000205 	andeq	r0, r0, r5, lsl #4
     204:	22030000 	andcs	r0, r3, #0
     208:	21050501 	tstcs	r5, r1, lsl #10
     20c:	0601054b 	streq	r0, [r1], -fp, asr #10
     210:	0005022f 	andeq	r0, r5, pc, lsr #4
     214:	12050101 	andne	r0, r5, #1073741824	; 0x40000000
     218:	00020500 	andeq	r0, r2, r0, lsl #10
     21c:	03000000 	movweq	r0, #0
     220:	05050127 	streq	r0, [r5, #-295]	; 0xfffffed9
     224:	01054b21 	tsteq	r5, r1, lsr #22
     228:	05022f06 	streq	r2, [r2, #-3846]	; 0xfffff0fa
     22c:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     230:	02050037 	andeq	r0, r5, #55	; 0x37
     234:	1000081c 	andne	r0, r0, ip, lsl r8
     238:	06013403 	streq	r3, [r1], -r3, lsl #8
     23c:	06050501 	streq	r0, [r5], -r1, lsl #10
     240:	060b052f 	streq	r0, [fp], -pc, lsr #10
     244:	06050501 	streq	r0, [r5], -r1, lsl #10
     248:	1413132f 	ldrne	r1, [r3], #-815	; 0xfffffcd1
     24c:	2f068206 	svccs	0x00068206
     250:	052f0875 	streq	r0, [pc, #-2165]!	; fffff9e3 <__RAM_segment_used_end__+0xc7eff9e3>
     254:	023d0601 	eorseq	r0, sp, #1048576	; 0x100000
     258:	0101000f 	tsteq	r1, pc
     25c:	05001005 	streq	r1, [r0, #-5]
     260:	00089002 	andeq	r9, r8, r2
     264:	00c00310 	sbceq	r0, r0, r0, lsl r3
     268:	21050501 	tstcs	r5, r1, lsl #10
     26c:	053d3013 	ldreq	r3, [sp, #-19]!	; 0xffffffed
     270:	052a0609 	streq	r0, [sl, #-1545]!	; 0xfffff9f7
     274:	04020005 	streq	r0, [r2], #-5
     278:	05260601 	streq	r0, [r6, #-1537]!	; 0xfffff9ff
     27c:	04020009 	streq	r0, [r2], #-9
     280:	02001301 	andeq	r1, r0, #67108864	; 0x4000000
     284:	00210104 	eoreq	r0, r1, r4, lsl #2
     288:	06010402 	streq	r0, [r1], -r2, lsl #8
     28c:	000b0520 	andeq	r0, fp, r0, lsr #10
     290:	06010402 	streq	r0, [r1], -r2, lsl #8
     294:	0009053a 	andeq	r0, r9, sl, lsr r5
     298:	06010402 	streq	r0, [r1], -r2, lsl #8
     29c:	00060214 	andeq	r0, r6, r4, lsl r2
     2a0:	01d10101 	bicseq	r0, r1, r1, lsl #2
     2a4:	00030000 	andeq	r0, r3, r0
     2a8:	00000181 	andeq	r0, r0, r1, lsl #3
     2ac:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
     2b0:	0101000d 	tsteq	r1, sp
     2b4:	00000101 	andeq	r0, r0, r1, lsl #2
     2b8:	00000100 	andeq	r0, r0, r0, lsl #2
     2bc:	612f2e01 			; <UNDEFINED> instruction: 0x612f2e01
     2c0:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     2c4:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     2c8:	63006e6f 	movwvs	r6, #3695	; 0xe6f
     2cc:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     2d0:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     2d4:	6f646978 	svcvs	0x00646978
     2d8:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     2dc:	6172676f 	cmnvs	r2, pc, ror #14
     2e0:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     2e4:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     2e8:	63675c63 	cmnvs	r7, #25344	; 0x6300
     2ec:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     2f0:	6f6e2d6d 	svcvs	0x006e2d6d
     2f4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     2f8:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     2fc:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     300:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     304:	30312e31 	eorscc	r2, r1, r1, lsr lr
     308:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     30c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     310:	61652d65 	cmnvs	r5, r5, ror #26
     314:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     318:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     31c:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
     320:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
     324:	6300656e 	movwvs	r6, #1390	; 0x56e
     328:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
     32c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
     330:	6f646978 	svcvs	0x00646978
     334:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
     338:	6172676f 	cmnvs	r2, pc, ror #14
     33c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
     340:	63675f6d 	cmnvs	r7, #436	; 0x1b4
     344:	63675c63 	cmnvs	r7, #25344	; 0x6300
     348:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
     34c:	6f6e2d6d 	svcvs	0x006e2d6d
     350:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
     354:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
     358:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
     35c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
     360:	30312e31 	eorscc	r2, r1, r1, lsr lr
     364:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     368:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     36c:	61652d65 	cmnvs	r5, r5, ror #26
     370:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
     374:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     378:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
     37c:	2e007379 	mcrcs	3, 0, r7, cr0, cr9, {3}
     380:	72442f2e 	subvc	r2, r4, #46, 30	; 0xb8
     384:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
     388:	4d432f73 	stclmi	15, cr2, [r3, #-460]	; 0xfffffe34
     38c:	5f534953 	svcpl	0x00534953
     390:	4d432f35 	stclmi	15, cr2, [r3, #-212]	; 0xffffff2c
     394:	2f534953 	svccs	0x00534953
     398:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     39c:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     3a0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     3a4:	2f2e2e00 	svccs	0x002e2e00
     3a8:	76697244 	strbtvc	r7, [r9], -r4, asr #4
     3ac:	2f737265 	svccs	0x00737265
     3b0:	49534d43 	ldmdbmi	r3, {r0, r1, r6, r8, sl, fp, lr}^
     3b4:	2f355f53 	svccs	0x00355f53
     3b8:	69766544 	ldmdbvs	r6!, {r2, r6, r8, sl, sp, lr}^
     3bc:	412f6563 			; <UNDEFINED> instruction: 0x412f6563
     3c0:	412f4d52 			; <UNDEFINED> instruction: 0x412f4d52
     3c4:	4d434d52 	stclmi	13, cr4, [r3, #-328]	; 0xfffffeb8
     3c8:	492f3333 	stmdbmi	pc!, {r0, r1, r4, r5, r8, r9, ip, sp}	; <UNPREDICTABLE>
     3cc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
     3d0:	00006564 	andeq	r6, r0, r4, ror #10
     3d4:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
     3d8:	415f6d65 	cmpmi	pc, r5, ror #26
     3dc:	4d434d52 	stclmi	13, cr4, [r3, #-328]	; 0xfffffeb8
     3e0:	632e3333 			; <UNDEFINED> instruction: 0x632e3333
     3e4:	00000100 	andeq	r0, r0, r0, lsl #2
     3e8:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
     3ec:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     3f0:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     3f4:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     3f8:	00000200 	andeq	r0, r0, r0, lsl #4
     3fc:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
     400:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
     404:	00030068 	andeq	r0, r3, r8, rrx
     408:	726f6300 	rsbvc	r6, pc, #0, 6
     40c:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
     410:	682e3333 	stmdavs	lr!, {r0, r1, r4, r5, r8, r9, ip, sp}
     414:	00000400 	andeq	r0, r0, r0, lsl #8
     418:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
     41c:	415f6d65 	cmpmi	pc, r5, ror #26
     420:	4d434d52 	stclmi	13, cr4, [r3, #-328]	; 0xfffffeb8
     424:	682e3333 	stmdavs	lr!, {r0, r1, r4, r5, r8, r9, ip, sp}
     428:	00000500 	andeq	r0, r0, r0, lsl #10
     42c:	00010500 	andeq	r0, r1, r0, lsl #10
     430:	00000205 	andeq	r0, r0, r5, lsl #4
     434:	c4030000 	strgt	r0, [r3], #-0
     438:	03050100 	movweq	r0, #20736	; 0x5100
     43c:	06130513 			; <UNDEFINED> instruction: 0x06130513
     440:	3d010501 	cfstr32cc	mvfx0, [r1, #-4]
     444:	01000502 	tsteq	r0, r2, lsl #10
     448:	00010501 	andeq	r0, r1, r1, lsl #10
     44c:	08b80205 	ldmeq	r8!, {r0, r2, r9}
     450:	cc031000 	stcgt	0, cr1, [r3], {-0}
     454:	03050100 	movweq	r0, #20736	; 0x5100
     458:	060d0515 			; <UNDEFINED> instruction: 0x060d0515
     45c:	06030501 	streq	r0, [r3], -r1, lsl #10
     460:	060e0540 	streq	r0, [lr], -r0, asr #10
     464:	06030501 	streq	r0, [r3], -r1, lsl #10
     468:	05660c03 	strbeq	r0, [r6, #-3075]!	; 0xfffff3fd
     46c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
     470:	0a023d01 	beq	8f87c <SYSTICK_CYCLES+0x6683d>
     474:	0d010100 	stfeqs	f0, [r1, #-0]
     478:	03000012 	movweq	r0, #18
     47c:	0001a100 	andeq	sl, r1, r0, lsl #2
     480:	fb010200 	blx	40c8a <SYSTICK_CYCLES+0x17c4b>
     484:	01000d0e 	tsteq	r0, lr, lsl #26
     488:	00010101 	andeq	r0, r1, r1, lsl #2
     48c:	00010000 	andeq	r0, r1, r0
     490:	2e2e0100 	sufcse	f0, f6, f0
     494:	726f432f 	rsbvc	r4, pc, #-1140850688	; 0xbc000000
     498:	72532f65 	subsvc	r2, r3, #404	; 0x194
     49c:	3a630063 	bcc	18c0630 <__RAM_SIZE+0x17c0630>
     4a0:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     4a4:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     4a8:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     4ac:	6f72705c 	svcvs	0x0072705c
     4b0:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     4b4:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     4b8:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     4bc:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     4c0:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     4c4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     4c8:	61652d65 	cmnvs	r5, r5, ror #26
     4cc:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     4d0:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     4d4:	31323032 	teqcc	r2, r2, lsr r0
     4d8:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     4dc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     4e0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     4e4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     4e8:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     4ec:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     4f0:	616d5c65 	cmnvs	sp, r5, ror #24
     4f4:	6e696863 	cdpvs	8, 6, cr6, cr9, cr3, {3}
     4f8:	3a630065 	bcc	18c0694 <__RAM_SIZE+0x17c0694>
     4fc:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     500:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     504:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     508:	6f72705c 	svcvs	0x0072705c
     50c:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     510:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     514:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     518:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     51c:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     520:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     524:	61652d65 	cmnvs	r5, r5, ror #26
     528:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     52c:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     530:	31323032 	teqcc	r2, r2, lsr r0
     534:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     538:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     53c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     540:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     544:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
     548:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
     54c:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
     550:	3a630073 	bcc	18c0724 <__RAM_SIZE+0x17c0724>
     554:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
     558:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     55c:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
     560:	6f72705c 	svcvs	0x0072705c
     564:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
     568:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
     56c:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
     570:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
     574:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
     578:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
     57c:	61652d65 	cmnvs	r5, r5, ror #26
     580:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
     584:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
     588:	31323032 	teqcc	r2, r2, lsr r0
     58c:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
     590:	5c62696c 			; <UNDEFINED> instruction: 0x5c62696c
     594:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
     598:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
     59c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
     5a0:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
     5a4:	30315c69 	eorscc	r5, r1, r9, ror #24
     5a8:	312e332e 			; <UNDEFINED> instruction: 0x312e332e
     5ac:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
     5b0:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
     5b4:	2f2e2e00 	svccs	0x002e2e00
     5b8:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     5bc:	636e492f 	cmnvs	lr, #770048	; 0xbc000
     5c0:	72700000 	rsbsvc	r0, r0, #0
     5c4:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     5c8:	0100632e 	tsteq	r0, lr, lsr #6
     5cc:	645f0000 	ldrbvs	r0, [pc], #-0	; 5d4 <STACK_SIZE+0x1d4>
     5d0:	75616665 	strbvc	r6, [r1, #-1637]!	; 0xfffff99b
     5d4:	745f746c 	ldrbvc	r7, [pc], #-1132	; 5dc <STACK_SIZE+0x1dc>
     5d8:	73657079 	cmnvc	r5, #121	; 0x79
     5dc:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
     5e0:	735f0000 	cmpvc	pc, #0
     5e4:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
     5e8:	00682e74 	rsbeq	r2, r8, r4, ror lr
     5ec:	73000003 	movwvc	r0, #3
     5f0:	72616474 	rsbvc	r6, r1, #116, 8	; 0x74000000
     5f4:	00682e67 	rsbeq	r2, r8, r7, ror #28
     5f8:	73000004 	movwvc	r0, #4
     5fc:	65646474 	strbvs	r6, [r4, #-1140]!	; 0xfffffb8c
     600:	00682e66 	rsbeq	r2, r8, r6, ror #28
     604:	3c000004 	stccc	0, cr0, [r0], {4}
     608:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
     60c:	6e692d74 	mcrvs	13, 3, r2, cr9, cr4, {3}
     610:	0000003e 	andeq	r0, r0, lr, lsr r0
     614:	69727000 	ldmdbvs	r2!, {ip, sp, lr}^
     618:	2e66746e 	cdpcs	4, 6, cr7, cr6, cr14, {3}
     61c:	00050068 	andeq	r0, r5, r8, rrx
     620:	01050000 	mrseq	r0, (UNDEF: 5)
     624:	00020500 	andeq	r0, r2, r0, lsl #10
     628:	03000000 	movweq	r0, #0
     62c:	05010185 	streq	r0, [r1, #-389]	; 0xfffffe7b
     630:	06051303 	streq	r1, [r5], -r3, lsl #6
     634:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     638:	1a052f06 	bne	14c258 <__RAM_SIZE+0x4c258>
     63c:	01050106 	tsteq	r5, r6, lsl #2
     640:	00010222 	andeq	r0, r1, r2, lsr #4
     644:	01050101 	tsteq	r5, r1, lsl #2
     648:	e4020500 	str	r0, [r2], #-1280	; 0xfffffb00
     64c:	03100008 	tsteq	r0, #8
     650:	0501018e 	streq	r0, [r1, #-398]	; 0xfffffe72
     654:	14051303 	strne	r1, [r5], #-771	; 0xfffffcfd
     658:	01220501 			; <UNDEFINED> instruction: 0x01220501
     65c:	05012d05 	streq	r2, [r1, #-3333]	; 0xfffff2fb
     660:	02130601 	andseq	r0, r3, #1048576	; 0x100000
     664:	01010001 	tsteq	r1, r1
     668:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     66c:	00000002 	andeq	r0, r0, r2
     670:	019f0300 	orrseq	r0, pc, r0, lsl #6
     674:	13030501 	movwne	r0, #13569	; 0x3501
     678:	05010e05 	streq	r0, [r1, #-3589]	; 0xfffff1fb
     67c:	06051303 	streq	r1, [r5], -r3, lsl #6
     680:	01050106 	tsteq	r5, r6, lsl #2
     684:	0605051e 			; <UNDEFINED> instruction: 0x0605051e
     688:	06210524 	strteq	r0, [r1], -r4, lsr #10
     68c:	20060501 	andcs	r0, r6, r1, lsl #10
     690:	22010520 	andcs	r0, r1, #32, 10	; 0x8000000
     694:	00010220 	andeq	r0, r1, r0, lsr #4
     698:	01050101 	tsteq	r5, r1, lsl #2
     69c:	e6020500 	str	r0, [r2], -r0, lsl #10
     6a0:	03100008 	tsteq	r0, #8
     6a4:	060101bc 			; <UNDEFINED> instruction: 0x060101bc
     6a8:	06030501 	streq	r0, [r3], -r1, lsl #10
     6ac:	10051321 	andne	r1, r5, r1, lsr #6
     6b0:	09051106 	stmdbeq	r5, {r1, r2, r8, ip}
     6b4:	06050521 	streq	r0, [r5], -r1, lsr #10
     6b8:	060b0521 	streq	r0, [fp], -r1, lsr #10
     6bc:	2e2a0501 	cfsh64cs	mvdx0, mvdx10, #1
     6c0:	052e2205 	streq	r2, [lr, #-517]!	; 0xfffffdfb
     6c4:	07052011 	smladeq	r5, r1, r0, r2
     6c8:	0609052e 	streq	r0, [r9], -lr, lsr #10
     6cc:	0615051f 			; <UNDEFINED> instruction: 0x0615051f
     6d0:	200a0501 	andcs	r0, sl, r1, lsl #10
     6d4:	03061405 	movweq	r1, #25605	; 0x6405
     6d8:	03052076 	movweq	r2, #20598	; 0x5076
     6dc:	06160514 			; <UNDEFINED> instruction: 0x06160514
     6e0:	05202001 	streq	r2, [r0, #-1]!
     6e4:	03051a09 	movweq	r1, #23049	; 0x5a09
     6e8:	01053106 	tsteq	r5, r6, lsl #2
     6ec:	01021306 	tsteq	r2, r6, lsl #6
     6f0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     6f4:	02050001 	andeq	r0, r5, #1
     6f8:	1000090a 	andne	r0, r0, sl, lsl #18
     6fc:	0101c703 	tsteq	r1, r3, lsl #14
     700:	03050106 	movweq	r0, #20742	; 0x5106
     704:	0515bb06 	ldreq	fp, [r5, #-2822]	; 0xfffff4fa
     708:	20010606 	andcs	r0, r1, r6, lsl #12
     70c:	053d1105 	ldreq	r1, [sp, #-261]!	; 0xfffffefb
     710:	0402001a 	streq	r0, [r2], #-26	; 0xffffffe6
     714:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
     718:	04020005 	streq	r0, [r2], #-5
     71c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     720:	04020007 	streq	r0, [r2], #-7
     724:	002f0603 	eoreq	r0, pc, r3, lsl #12
     728:	06030402 	streq	r0, [r3], -r2, lsl #8
     72c:	0025052e 	eoreq	r0, r5, lr, lsr #10
     730:	06030402 	streq	r0, [r3], -r2, lsl #8
     734:	00260549 	eoreq	r0, r6, r9, asr #10
     738:	06030402 	streq	r0, [r3], -r2, lsl #8
     73c:	00070501 	andeq	r0, r7, r1, lsl #10
     740:	2f030402 	svccs	0x00030402
     744:	03040200 	movweq	r0, #16896	; 0x4200
     748:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     74c:	05053c03 	streq	r3, [r5, #-3075]	; 0xfffff3fd
     750:	20061806 	andcs	r1, r6, r6, lsl #16
     754:	0609052e 	streq	r0, [r9], -lr, lsr #10
     758:	33030565 	movwcc	r0, #13669	; 0x3565
     75c:	01060605 	tsteq	r6, r5, lsl #12
     760:	05510105 	ldrbeq	r0, [r1, #-261]	; 0xfffffefb
     764:	7a03060b 	bvc	c1f98 <SYSTICK_CYCLES+0x98f59>
     768:	0610054a 	ldreq	r0, [r0], -sl, asr #10
     76c:	2e0b0501 	cfsh32cs	mvfx0, mvfx11, #1
     770:	2f060705 	svccs	0x00060705
     774:	06022006 	streq	r2, [r2], -r6
     778:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     77c:	02050001 	andeq	r0, r5, #1
     780:	10000988 	andne	r0, r0, r8, lsl #19
     784:	0101e303 	tsteq	r1, r3, lsl #6
     788:	03050106 	movweq	r0, #20742	; 0x5106
     78c:	0605ca06 	streq	ip, [r5], -r6, lsl #20
     790:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     794:	08053d06 	stmdaeq	r5, {r1, r2, r8, sl, fp, ip, sp}
     798:	0f050106 	svceq	0x00050106
     79c:	01040200 	mrseq	r0, R12_usr
     7a0:	002a0520 	eoreq	r0, sl, r0, lsr #10
     7a4:	3c020402 	cfstrscc	mvf0, [r2], {2}
     7a8:	02003705 	andeq	r3, r0, #1310720	; 0x140000
     7ac:	053c0304 	ldreq	r0, [ip, #-772]!	; 0xfffffcfc
     7b0:	053d0607 	ldreq	r0, [sp, #-1543]!	; 0xfffff9f9
     7b4:	2001060c 	andcs	r0, r1, ip, lsl #12
     7b8:	23060705 	movwcs	r0, #26373	; 0x6705
     7bc:	01061205 	tsteq	r6, r5, lsl #4
     7c0:	054a0e05 	strbeq	r0, [sl, #-3589]	; 0xfffff1fb
     7c4:	051f060b 	ldreq	r0, [pc, #-1547]	; 1c1 <__STACKSEAL_SIZE+0x1c1>
     7c8:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
     7cc:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
     7d0:	0531060b 	ldreq	r0, [r1, #-1547]!	; 0xfffff9f5
     7d4:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
     7d8:	053c0601 	ldreq	r0, [ip, #-1537]!	; 0xfffff9ff
     7dc:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     7e0:	07052e02 	streq	r2, [r5, -r2, lsl #28]
     7e4:	12052f06 	andne	r2, r5, #6, 30
     7e8:	0e050106 	adfeqs	f0, f5, f6
     7ec:	0305204a 	movweq	r2, #20554	; 0x504a
     7f0:	06052506 	streq	r2, [r5], -r6, lsl #10
     7f4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     7f8:	08053d06 	stmdaeq	r5, {r1, r2, r8, sl, fp, ip, sp}
     7fc:	24050106 	strcs	r0, [r5], #-262	; 0xfffffefa
     800:	01040200 	mrseq	r0, R12_usr
     804:	002b053c 	eoreq	r0, fp, ip, lsr r5
     808:	20020402 	andcs	r0, r2, r2, lsl #8
     80c:	02003d05 	andeq	r3, r0, #320	; 0x140
     810:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
     814:	05340605 	ldreq	r0, [r4, #-1541]!	; 0xfffff9fb
     818:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     81c:	053f060a 	ldreq	r0, [pc, #-1546]!	; 21a <__STACKSEAL_SIZE+0x21a>
     820:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     824:	053f060a 	ldreq	r0, [pc, #-1546]!	; 222 <__STACKSEAL_SIZE+0x222>
     828:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     82c:	053f0605 	ldreq	r0, [pc, #-1541]!	; 22f <__STACKSEAL_SIZE+0x22f>
     830:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     834:	052f0607 	streq	r0, [pc, #-1543]!	; 235 <__STACKSEAL_SIZE+0x235>
     838:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     83c:	03054a0e 	movweq	r4, #23054	; 0x5a0e
     840:	06052406 	streq	r2, [r5], -r6, lsl #8
     844:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     848:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
     84c:	07050106 	streq	r0, [r5, -r6, lsl #2]
     850:	12053d06 	andne	r3, r5, #384	; 0x180
     854:	0e050106 	adfeqs	f0, f5, f6
     858:	0603054a 	streq	r0, [r3], -sl, asr #10
     85c:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
     860:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     864:	07056701 	streq	r6, [r5, -r1, lsl #14]
     868:	3c600306 	stclcc	3, cr0, [r0], #-24	; 0xffffffe8
     86c:	060a0513 			; <UNDEFINED> instruction: 0x060a0513
     870:	0f052e01 	svceq	0x00052e01
     874:	01040200 	mrseq	r0, R12_usr
     878:	3b0a0520 	blcc	281d00 <__RAM_SIZE+0x181d00>
     87c:	30060905 	andcc	r0, r6, r5, lsl #18
     880:	01060c05 	tsteq	r6, r5, lsl #24
     884:	1e0a0520 	cfsh32ne	mvfx0, mvfx10, #16
     888:	02001705 	andeq	r1, r0, #1310720	; 0x140000
     88c:	05330104 	ldreq	r0, [r3, #-260]!	; 0xfffffefc
     890:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     894:	07053c02 	streq	r3, [r5, -r2, lsl #24]
     898:	12052f06 	andne	r2, r5, #6, 30
     89c:	0e050106 	adfeqs	f0, f5, f6
     8a0:	2012054a 	andscs	r0, r2, sl, asr #10
     8a4:	02001c05 	andeq	r1, r0, #1280	; 0x500
     8a8:	05220104 	streq	r0, [r2, #-260]!	; 0xfffffefc
     8ac:	04020039 	streq	r0, [r2], #-57	; 0xffffffc7
     8b0:	07053c02 	streq	r3, [r5, -r2, lsl #24]
     8b4:	12052f06 	andne	r2, r5, #6, 30
     8b8:	0e050106 	adfeqs	f0, f5, f6
     8bc:	2012054a 	andscs	r0, r2, sl, asr #10
     8c0:	02001b05 	andeq	r1, r0, #5120	; 0x1400
     8c4:	05220104 	streq	r0, [r2, #-260]!	; 0xfffffefc
     8c8:	052f0607 	streq	r0, [pc, #-1543]!	; 2c9 <__STACKSEAL_SIZE+0x2c9>
     8cc:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     8d0:	05204a0e 	streq	r4, [r0, #-2574]!	; 0xfffff5f2
     8d4:	0b03060a 	bleq	c2104 <SYSTICK_CYCLES+0x990c5>
     8d8:	060d0520 	streq	r0, [sp], -r0, lsr #10
     8dc:	06070501 	streq	r0, [r7], -r1, lsl #10
     8e0:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
     8e4:	4a0e0501 	bmi	381cf0 <__RAM_SIZE+0x281cf0>
     8e8:	060a0520 	streq	r0, [sl], -r0, lsr #10
     8ec:	060d0522 	streq	r0, [sp], -r2, lsr #10
     8f0:	06070501 	streq	r0, [r7], -r1, lsl #10
     8f4:	0612053d 			; <UNDEFINED> instruction: 0x0612053d
     8f8:	4a0e0501 	bmi	381d04 <__RAM_SIZE+0x281d04>
     8fc:	00010220 	andeq	r0, r1, r0, lsr #4
     900:	01050101 	tsteq	r5, r1, lsl #2
     904:	c0020500 	andgt	r0, r2, r0, lsl #10
     908:	0310000a 	tsteq	r0, #10
     90c:	06010299 			; <UNDEFINED> instruction: 0x06010299
     910:	06030501 	streq	r0, [r3], -r1, lsl #10
     914:	05151359 	ldreq	r1, [r5, #-857]	; 0xfffffca7
     918:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     91c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     920:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     924:	05320603 	ldreq	r0, [r2, #-1539]!	; 0xfffff9fd
     928:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     92c:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     930:	12053c01 	andne	r3, r5, #256	; 0x100
     934:	01040200 	mrseq	r0, R12_usr
     938:	0402004d 	streq	r0, [r2], #-77	; 0xffffffb3
     93c:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
     940:	08040200 	stmdaeq	r4, {r9}
     944:	0012052e 	andseq	r0, r2, lr, lsr #10
     948:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
     94c:	02000705 	andeq	r0, r0, #1310720	; 0x140000
     950:	59060804 	stmdbpl	r6, {r2, fp}
     954:	02000d05 	andeq	r0, r0, #320	; 0x140
     958:	01060804 	tsteq	r6, r4, lsl #16
     95c:	08040200 	stmdaeq	r4, {r9}
     960:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     964:	05130608 	ldreq	r0, [r3, #-1544]	; 0xfffff9f8
     968:	04020005 	streq	r0, [r2], #-5
     96c:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     970:	04020014 	streq	r0, [r2], #-20	; 0xffffffec
     974:	0e052e01 	cdpeq	14, 0, cr2, cr5, cr1, {0}
     978:	210d052c 	tstcs	sp, ip, lsr #10
     97c:	06050520 	streq	r0, [r5], -r0, lsr #10
     980:	1307050f 	movwne	r0, #29967	; 0x750f
     984:	01062705 	tsteq	r6, r5, lsl #14
     988:	054a1205 	strbeq	r1, [sl, #-517]	; 0xfffffdfb
     98c:	052f0607 	streq	r0, [pc, #-1543]!	; 38d <__STACKSEAL_SIZE+0x38d>
     990:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     994:	04020055 	streq	r0, [r2], #-85	; 0xffffffab
     998:	003c3c02 	eorseq	r3, ip, r2, lsl #24
     99c:	20070402 	andcs	r0, r7, r2, lsl #8
     9a0:	07040200 	streq	r0, [r4, -r0, lsl #4]
     9a4:	00120520 	andseq	r0, r2, r0, lsr #10
     9a8:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
     9ac:	2e585505 	cdpcs	5, 5, cr5, cr8, cr5, {0}
     9b0:	75030a05 	strvc	r0, [r3, #-2565]	; 0xfffff5fb
     9b4:	06030501 	streq	r0, [r3], -r1, lsl #10
     9b8:	05201003 	streq	r1, [r0, #-3]!
     9bc:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     9c0:	002ed701 	eoreq	sp, lr, r1, lsl #14
     9c4:	01050101 	tsteq	r5, r1, lsl #2
     9c8:	54020500 	strpl	r0, [r2], #-1280	; 0xfffffb00
     9cc:	0310000b 	tsteq	r0, #11
     9d0:	060102b2 			; <UNDEFINED> instruction: 0x060102b2
     9d4:	06030501 	streq	r0, [r3], -r1, lsl #10
     9d8:	051513d7 	ldreq	r1, [r5, #-983]	; 0xfffffc29
     9dc:	2e010606 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx6
     9e0:	21060505 	tstcs	r6, r5, lsl #10
     9e4:	01060b05 	tsteq	r6, r5, lsl #22
     9e8:	32060305 	andcc	r0, r6, #335544320	; 0x14000000
     9ec:	01060605 	tsteq	r6, r5, lsl #12
     9f0:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
     9f4:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     9f8:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     9fc:	0e055b01 	vmlaeq.f64	d5, d5, d1
     a00:	08040200 	stmdaeq	r4, {r9}
     a04:	0012053c 	andseq	r0, r2, ip, lsr r5
     a08:	2e080402 	cdpcs	4, 0, cr0, cr8, cr2, {0}
     a0c:	08040200 	stmdaeq	r4, {r9}
     a10:	0007052e 	andeq	r0, r7, lr, lsr #10
     a14:	06080402 	streq	r0, [r8], -r2, lsl #8
     a18:	000d054b 	andeq	r0, sp, fp, asr #10
     a1c:	06080402 	streq	r0, [r8], -r2, lsl #8
     a20:	04020001 	streq	r0, [r2], #-1
     a24:	02006608 	andeq	r6, r0, #8, 12	; 0x800000
     a28:	13060804 	movwne	r0, #26628	; 0x6804
     a2c:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
     a30:	01060804 	tsteq	r6, r4, lsl #16
     a34:	02001405 	andeq	r1, r0, #83886080	; 0x5000000
     a38:	054a0104 	strbeq	r0, [sl, #-260]	; 0xfffffefc
     a3c:	0d053a0e 	vstreq	s6, [r5, #-56]	; 0xffffffc8
     a40:	05052e21 	streq	r2, [r5, #-3617]	; 0xfffff1df
     a44:	07050f06 	streq	r0, [r5, -r6, lsl #30]
     a48:	06270513 			; <UNDEFINED> instruction: 0x06270513
     a4c:	66120501 	ldrvs	r0, [r2], -r1, lsl #10
     a50:	21060705 	tstcs	r6, r5, lsl #14
     a54:	01061205 	tsteq	r6, r5, lsl #4
     a58:	02005505 	andeq	r5, r0, #20971520	; 0x1400000
     a5c:	3c2e0204 	sfmcc	f0, 4, [lr], #-16
     a60:	07040200 	streq	r0, [r4, -r0, lsl #4]
     a64:	00120520 	andseq	r0, r2, r0, lsr #10
     a68:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
     a6c:	2e3c5505 	cdpcs	5, 3, cr5, cr12, cr5, {0}
     a70:	75030a05 	strvc	r0, [r3, #-2565]	; 0xfffff5fb
     a74:	06030501 	streq	r0, [r3], -r1, lsl #10
     a78:	052e1003 	streq	r1, [lr, #-3]!
     a7c:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     a80:	3c3d0801 	ldccc	8, cr0, [sp], #-4
     a84:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
     a88:	02050001 	andeq	r0, r5, #1
     a8c:	10000c20 	andne	r0, r0, r0, lsr #24
     a90:	0103d303 	tsteq	r3, r3, lsl #6
     a94:	03050106 	movweq	r0, #20742	; 0x5106
     a98:	06059206 	streq	r9, [r5], -r6, lsl #4
     a9c:	202e0106 	eorcs	r0, lr, r6, lsl #2
     aa0:	18052e20 	stmdane	r5, {r5, r9, sl, fp, sp}
     aa4:	01040200 	mrseq	r0, R12_usr
     aa8:	002d053c 	eoreq	r0, sp, ip, lsr r5
     aac:	9e020402 	cdpls	4, 0, cr0, cr2, cr2, {0}
     ab0:	b1060305 	tstlt	r6, r5, lsl #6
     ab4:	06060513 			; <UNDEFINED> instruction: 0x06060513
     ab8:	06030501 	streq	r0, [r3], -r1, lsl #10
     abc:	060605cd 	streq	r0, [r6], -sp, asr #11
     ac0:	590a0501 	stmdbpl	sl, {r0, r8, sl}
     ac4:	33060305 	movwcc	r0, #25349	; 0x6305
     ac8:	0e051317 	mcreq	3, 0, r1, cr5, cr7, {0}
     acc:	03053c06 	movweq	r3, #23558	; 0x5c06
     ad0:	14052f06 	strne	r2, [r5], #-3846	; 0xfffff0fa
     ad4:	2c050106 	stfcss	f0, [r5], {6}
     ad8:	0603052e 	streq	r0, [r3], -lr, lsr #10
     adc:	062d055a 			; <UNDEFINED> instruction: 0x062d055a
     ae0:	052e2e01 	streq	r2, [lr, #-3585]!	; 0xfffff1ff
     ae4:	4b055826 	blmi	156b84 <__RAM_SIZE+0x56b84>
     ae8:	66520574 			; <UNDEFINED> instruction: 0x66520574
     aec:	05744105 	ldrbeq	r4, [r4, #-261]!	; 0xfffffefb
     af0:	03054a07 	movweq	r4, #23047	; 0x5a07
     af4:	17053e06 	strne	r3, [r5, -r6, lsl #28]
     af8:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     afc:	0805742b 	stmdaeq	r5, {r0, r1, r3, r5, sl, ip, sp, lr}
     b00:	0603054a 	streq	r0, [r3], -sl, asr #10
     b04:	061c053d 			; <UNDEFINED> instruction: 0x061c053d
     b08:	37054a01 	strcc	r4, [r5, -r1, lsl #20]
     b0c:	9e100558 	mrcls	5, 0, r0, cr0, cr8, {2}
     b10:	67060305 	strvs	r0, [r6, -r5, lsl #6]
     b14:	01061005 	tsteq	r6, r5
     b18:	67060305 	strvs	r0, [r6, -r5, lsl #6]
     b1c:	01061c05 	tsteq	r6, r5, lsl #24
     b20:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
     b24:	05840603 	streq	r0, [r4, #1539]	; 0x603
     b28:	3c010613 	stccc	6, cr0, [r1], {19}
     b2c:	82581c05 	subshi	r1, r8, #1280	; 0x500
     b30:	05203c05 	streq	r3, [r0, #-3077]!	; 0xfffff3fb
     b34:	31056637 	tstcc	r5, r7, lsr r6
     b38:	4a2b0566 	bmi	ac20d8 <__RAM_SIZE+0x9c20d8>
     b3c:	05662605 	strbeq	r2, [r6, #-1541]!	; 0xfffff9fb
     b40:	17056620 	strne	r6, [r5, -r0, lsr #12]
     b44:	4a0f0566 	bmi	3c20e4 <__RAM_SIZE+0x2c20e4>
     b48:	054a0a05 	strbeq	r0, [sl, #-2565]	; 0xfffff5fb
     b4c:	05840603 	streq	r0, [r4, #1539]	; 0x603
     b50:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     b54:	05590605 	ldrbeq	r0, [r9, #-1541]	; 0xfffff9fb
     b58:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     b5c:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     b60:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
     b64:	05860603 	streq	r0, [r6, #1539]	; 0x603
     b68:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
     b6c:	052e2e44 	streq	r2, [lr, #-3652]!	; 0xfffff1bc
     b70:	04020003 	streq	r0, [r2], #-3
     b74:	05230604 	streq	r0, [r3, #-1540]!	; 0xfffff9fc
     b78:	04020006 	streq	r0, [r2], #-6
     b7c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
     b80:	054c0605 	strbeq	r0, [ip, #-1541]	; 0xfffff9fb
     b84:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
     b88:	04020019 	streq	r0, [r2], #-25	; 0xffffffe7
     b8c:	0705ac01 	streq	sl, [r5, -r1, lsl #24]
     b90:	0a059106 	beq	164fb0 <__RAM_SIZE+0x64fb0>
     b94:	09050106 	stmdbeq	r5, {r1, r2, r8}
     b98:	25053d06 	strcs	r3, [r5, #-3334]	; 0xfffff2fa
     b9c:	2e050106 	adfcss	f0, f5, f6
     ba0:	05052e20 	streq	r2, [r5, #-3616]	; 0xfffff1e0
     ba4:	20510306 	subscs	r0, r1, r6, lsl #6
     ba8:	01060c05 	tsteq	r6, r5, lsl #24
     bac:	e4030105 	str	r0, [r3], #-261	; 0xfffffefb
     bb0:	053cf200 	ldreq	pc, [ip, #-512]!	; 0xfffffe00
     bb4:	a2030605 	andge	r0, r3, #5242880	; 0x500000
     bb8:	0b052e7f 	bleq	14c5bc <__RAM_SIZE+0x4c5bc>
     bbc:	059e0106 	ldreq	r0, [lr, #262]	; 0x106
     bc0:	20220344 	eorcs	r0, r2, r4, asr #6
     bc4:	030e0520 	movweq	r0, #58656	; 0xe520
     bc8:	0705200a 	streq	r2, [r5, -sl]
     bcc:	0d053006 	stceq	0, cr3, [r5, #-24]	; 0xffffffe8
     bd0:	07050106 	streq	r0, [r5, -r6, lsl #2]
     bd4:	05134c06 	ldreq	r4, [r3, #-3078]	; 0xfffff3fa
     bd8:	21110610 	tstcs	r1, r0, lsl r6
     bdc:	03060305 	movweq	r0, #25349	; 0x6305
     be0:	0513200b 	ldreq	r2, [r3, #-11]
     be4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     be8:	053e0605 	ldreq	r0, [lr, #-1541]!	; 0xfffff9fb
     bec:	2e01060c 	cfmadd32cs	mvax0, mvfx0, mvfx1, mvfx12
     bf0:	03060705 	movweq	r0, #26373	; 0x6705
     bf4:	0a052076 	beq	148dd4 <__RAM_SIZE+0x48dd4>
     bf8:	16050106 	strne	r0, [r5], -r6, lsl #2
     bfc:	01040200 	mrseq	r0, R12_usr
     c00:	0609053c 			; <UNDEFINED> instruction: 0x0609053c
     c04:	053c063d 	ldreq	r0, [ip, #-1597]!	; 0xfffff9c3
     c08:	020c030c 	andeq	r0, ip, #12, 6	; 0x30000000
     c0c:	03050134 	movweq	r0, #20788	; 0x5134
     c10:	06053006 	streq	r3, [r5], -r6
     c14:	1c050106 	stfnes	f0, [r5], {6}
     c18:	01040200 	mrseq	r0, R12_usr
     c1c:	220c054a 	andcs	r0, ip, #310378496	; 0x12800000
     c20:	32060305 	andcc	r0, r6, #335544320	; 0x14000000
     c24:	01060605 	tsteq	r6, r5, lsl #12
     c28:	21060505 	tstcs	r6, r5, lsl #10
     c2c:	01061205 	tsteq	r6, r5, lsl #4
     c30:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
     c34:	136a0603 	cmnne	sl, #3145728	; 0x300000
     c38:	01060905 	tsteq	r6, r5, lsl #18
     c3c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     c40:	00030582 	andeq	r0, r3, r2, lsl #11
     c44:	06040402 	streq	r0, [r4], -r2, lsl #8
     c48:	06052308 	streq	r2, [r5], -r8, lsl #6
     c4c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     c50:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     c54:	02003e06 	andeq	r3, r0, #6, 28	; 0x60
     c58:	66060404 	strvs	r0, [r6], -r4, lsl #8
     c5c:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
     c60:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
     c64:	055a0604 	ldrbeq	r0, [sl, #-1540]	; 0xfffff9fc
     c68:	04020047 	streq	r0, [r2], #-71	; 0xffffffb9
     c6c:	05010604 	streq	r0, [r1, #-1540]	; 0xfffff9fc
     c70:	0402000b 	streq	r0, [r2], #-11
     c74:	02004a04 	andeq	r4, r0, #4, 20	; 0x4000
     c78:	053c0404 	ldreq	r0, [ip, #-1028]!	; 0xfffffbfc
     c7c:	04020005 	streq	r0, [r2], #-5
     c80:	05d80604 	ldrbeq	r0, [r8, #1540]	; 0x604
     c84:	04020008 	streq	r0, [r2], #-8
     c88:	00010604 	andeq	r0, r1, r4, lsl #12
     c8c:	66040402 	strvs	r0, [r4], -r2, lsl #8
     c90:	02000905 	andeq	r0, r0, #81920	; 0x14000
     c94:	77030104 	strvc	r0, [r3, -r4, lsl #2]
     c98:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
     c9c:	05057401 	streq	r7, [r5, #-1025]	; 0xfffffbff
     ca0:	00270525 	eoreq	r0, r7, r5, lsr #10
     ca4:	06020402 	streq	r0, [r2], -r2, lsl #8
     ca8:	04020041 	streq	r0, [r2], #-65	; 0xffffffbf
     cac:	05200602 	streq	r0, [r0, #-1538]!	; 0xfffff9fe
     cb0:	0402000d 	streq	r0, [r2], #-13
     cb4:	05580601 	ldrbeq	r0, [r8, #-1537]	; 0xfffff9ff
     cb8:	04020012 	streq	r0, [r2], #-18	; 0xffffffee
     cbc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     cc0:	0402000d 	streq	r0, [r2], #-13
     cc4:	02002e01 	andeq	r2, r0, #1, 28
     cc8:	022e0104 	eoreq	r0, lr, #4, 2
     ccc:	01010002 	tsteq	r1, r2
     cd0:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
     cd4:	00101002 	andseq	r1, r0, r2
     cd8:	02d30310 	sbcseq	r0, r3, #16, 6	; 0x40000000
     cdc:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
     ce0:	13bb0603 			; <UNDEFINED> instruction: 0x13bb0603
     ce4:	05151513 	ldreq	r1, [r5, #-1299]	; 0xfffffaed
     ce8:	20010606 	andcs	r0, r1, r6, lsl #12
     cec:	05202020 	streq	r2, [r0, #-32]!	; 0xffffffe0
     cf0:	054c0603 	strbeq	r0, [ip, #-1539]	; 0xfffff9fd
     cf4:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     cf8:	05a00603 	streq	r0, [r0, #1539]!	; 0x603
     cfc:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     d00:	05950603 	ldreq	r0, [r5, #1539]	; 0x603
     d04:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     d08:	04020022 	streq	r0, [r2], #-34	; 0xffffffde
     d0c:	03059001 	movweq	r9, #20481	; 0x5001
     d10:	90090306 	andls	r0, r9, r6, lsl #6
     d14:	06060513 			; <UNDEFINED> instruction: 0x06060513
     d18:	81080501 	tsthi	r8, r1, lsl #10
     d1c:	35060305 	strcc	r0, [r6, #-773]	; 0xfffffcfb
     d20:	01060605 	tsteq	r6, r5, lsl #12
     d24:	054b0a05 	strbeq	r0, [fp, #-2565]	; 0xfffff5fb
     d28:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
     d2c:	0402002a 	streq	r0, [r2], #-42	; 0xffffffd6
     d30:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
     d34:	052f0605 	streq	r0, [pc, #-1541]!	; 737 <STACK_SIZE+0x337>
     d38:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
     d3c:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
     d40:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     d44:	05201f0c 	streq	r1, [r0, #-3852]!	; 0xfffff0f4
     d48:	63030605 	movwvs	r0, #13829	; 0x3605
     d4c:	060c0520 	streq	r0, [ip], -r0, lsr #10
     d50:	06050501 	streq	r0, [r5], -r1, lsl #10
     d54:	060c05e6 	streq	r0, [ip], -r6, ror #11
     d58:	06050501 	streq	r0, [r5], -r1, lsl #10
     d5c:	060c05e6 	streq	r0, [ip], -r6, ror #11
     d60:	04020001 	streq	r0, [r2], #-1
     d64:	00205804 	eoreq	r5, r0, r4, lsl #16
     d68:	20080402 	andcs	r0, r8, r2, lsl #8
     d6c:	060505c8 	streq	r0, [r5], -r8, asr #11
     d70:	060c0550 			; <UNDEFINED> instruction: 0x060c0550
     d74:	06050501 	streq	r0, [r5], -r1, lsl #10
     d78:	13d60903 	bicsne	r0, r6, #49152	; 0xc000
     d7c:	01060b05 	tsteq	r6, r5, lsl #22
     d80:	05810e05 	streq	r0, [r1, #3589]	; 0xe05
     d84:	0305420a 	movweq	r4, #21002	; 0x520a
     d88:	07053606 	streq	r3, [r5, -r6, lsl #12]
     d8c:	03050106 	movweq	r0, #20742	; 0x5106
     d90:	17055906 	strne	r5, [r5, -r6, lsl #18]
     d94:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     d98:	0a056627 	beq	15a63c <__RAM_SIZE+0x5a63c>
     d9c:	06030558 			; <UNDEFINED> instruction: 0x06030558
     da0:	06110583 	ldreq	r0, [r1], -r3, lsl #11
     da4:	03052e01 	movweq	r2, #24065	; 0x5e01
     da8:	0e052106 	adfeqs	f2, f5, f6
     dac:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
     db0:	03052e08 	movweq	r2, #24072	; 0x5e08
     db4:	06058406 	streq	r8, [r5], -r6, lsl #8
     db8:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
     dbc:	224b0605 	subcs	r0, fp, #5242880	; 0x500000
     dc0:	01060e05 	tsteq	r6, r5, lsl #28
     dc4:	05580805 	ldrbeq	r0, [r8, #-2053]	; 0xfffff7fb
     dc8:	13590607 	cmpne	r9, #7340032	; 0x700000
     dcc:	1f060c05 	svcne	0x00060c05
     dd0:	03060305 	movweq	r0, #25349	; 0x6305
     dd4:	0605200b 	streq	r2, [r5], -fp
     dd8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     ddc:	14052106 	strne	r2, [r5], #-262	; 0xfffffefa
     de0:	0a050106 	beq	141200 <__RAM_SIZE+0x41200>
     de4:	05055858 	streq	r5, [r5, #-2136]	; 0xfffff7a8
     de8:	08052106 	stmdaeq	r5, {r1, r2, r8, sp}
     dec:	18050106 	stmdane	r5, {r1, r2, r8}
     df0:	02040200 	andeq	r0, r4, #0, 4
     df4:	00290558 	eoreq	r0, r9, r8, asr r5
     df8:	82030402 	andhi	r0, r3, #33554432	; 0x2000000
     dfc:	3f060705 	svccc	0x00060705
     e00:	08052006 	stmdaeq	r5, {r1, r2, sp}
     e04:	20740306 	rsbscs	r0, r4, r6, lsl #6
     e08:	01060b05 	tsteq	r6, r5, lsl #22
     e0c:	84060805 	strhi	r0, [r6], #-2053	; 0xfffff7fb
     e10:	01060b05 	tsteq	r6, r5, lsl #22
     e14:	02001905 	andeq	r1, r0, #81920	; 0x14000
     e18:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
     e1c:	063e0605 	ldrteq	r0, [lr], -r5, lsl #12
     e20:	060b0520 	streq	r0, [fp], -r0, lsr #10
     e24:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
     e28:	05212f07 	streq	r2, [r1, #-3847]!	; 0xfffff0f9
     e2c:	05010627 	streq	r0, [r1, #-1575]	; 0xfffff9d9
     e30:	1405900e 	strne	r9, [r5], #-14
     e34:	20120520 	andscs	r0, r2, r0, lsr #10
     e38:	67060705 	strvs	r0, [r6, -r5, lsl #14]
     e3c:	01060a05 	tsteq	r6, r5, lsl #20
     e40:	052e1205 	streq	r1, [lr, #-517]!	; 0xfffffdfb
     e44:	052e1f0e 	streq	r1, [lr, #-3854]!	; 0xfffff0f2
     e48:	0526060b 	streq	r0, [r6, #-1547]!	; 0xfffff9f5
     e4c:	04020035 	streq	r0, [r2], #-53	; 0xffffffcb
     e50:	052e0601 	streq	r0, [lr, #-1537]!	; 0xfffff9ff
     e54:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
     e58:	07052001 	streq	r2, [r5, -r1]
     e5c:	12052106 	andne	r2, r5, #-2147483647	; 0x80000001
     e60:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
     e64:	210e0565 	tstcs	lr, r5, ror #10
     e68:	06050520 	streq	r0, [r5], -r0, lsr #10
     e6c:	06080522 	streq	r0, [r8], -r2, lsr #10
     e70:	06070501 	streq	r0, [r7], -r1, lsl #10
     e74:	06120530 			; <UNDEFINED> instruction: 0x06120530
     e78:	660e0501 	strvs	r0, [lr], -r1, lsl #10
     e7c:	06090520 	streq	r0, [r9], -r0, lsr #10
     e80:	2f050517 	svccs	0x00050517
     e84:	01062505 	tsteq	r6, r5, lsl #10
     e88:	05ac0c05 	streq	r0, [ip, #3077]!	; 0xc05
     e8c:	10052012 	andne	r2, r5, r2, lsl r0
     e90:	06050520 	streq	r0, [r5], -r0, lsr #10
     e94:	06110567 	ldreq	r0, [r1], -r7, ror #10
     e98:	20080501 	andcs	r0, r8, r1, lsl #10
     e9c:	081f0c05 	ldmdaeq	pc, {r0, r2, sl, fp}	; <UNPREDICTABLE>
     ea0:	060305c8 	streq	r0, [r3], -r8, asr #11
     ea4:	061d0527 	ldreq	r0, [sp], -r7, lsr #10
     ea8:	3c060501 	cfstr32cc	mvfx0, [r6], {1}
     eac:	03060305 	movweq	r0, #25349	; 0x6305
     eb0:	06052e09 	streq	r2, [r5], -r9, lsl #28
     eb4:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
     eb8:	08052f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, sp}
     ebc:	07050106 	streq	r0, [r5, -r6, lsl #2]
     ec0:	12053d06 	andne	r3, r5, #384	; 0x180
     ec4:	0e050106 	adfeqs	f0, f5, f6
     ec8:	06030566 	streq	r0, [r3], -r6, ror #10
     ecc:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
     ed0:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     ed4:	0505c901 	streq	ip, [r5, #-2305]	; 0xfffff6ff
     ed8:	586b0306 	stmdapl	fp!, {r1, r2, r8, r9}^
     edc:	01060805 	tsteq	r6, r5, lsl #16
     ee0:	02000f05 	andeq	r0, r0, #5, 30
     ee4:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
     ee8:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
     eec:	07052e02 	streq	r2, [r5, -r2, lsl #28]
     ef0:	0c054b06 			; <UNDEFINED> instruction: 0x0c054b06
     ef4:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
     ef8:	05310607 	ldreq	r0, [r1, #-1543]!	; 0xfffff9f9
     efc:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
     f00:	0b05660e 	bleq	15a740 <__RAM_SIZE+0x5a740>
     f04:	1a051f06 	bne	148b24 <__RAM_SIZE+0x48b24>
     f08:	01040200 	mrseq	r0, R12_usr
     f0c:	02002e06 	andeq	r2, r0, #6, 28	; 0x60
     f10:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
     f14:	0903060a 	stmdbeq	r3, {r1, r3, r9, sl}
     f18:	060d054a 	streq	r0, [sp], -sl, asr #10
     f1c:	06070501 	streq	r0, [r7], -r1, lsl #10
     f20:	0612054b 	ldreq	r0, [r2], -fp, asr #10
     f24:	660e0501 	strvs	r0, [lr], -r1, lsl #10
     f28:	060a0520 	streq	r0, [sl], -r0, lsr #10
     f2c:	060d0522 	streq	r0, [sp], -r2, lsr #10
     f30:	06070501 	streq	r0, [r7], -r1, lsl #10
     f34:	0612054b 	ldreq	r0, [r2], -fp, asr #10
     f38:	660e0501 	strvs	r0, [lr], -r1, lsl #10
     f3c:	00010220 	andeq	r0, r1, r0, lsr #4
     f40:	01050101 	tsteq	r5, r1, lsl #2
     f44:	a8020500 	stmdage	r2, {r8, sl}
     f48:	03100013 	tsteq	r0, #19
     f4c:	060104c1 	streq	r0, [r1], -r1, asr #9
     f50:	06030501 	streq	r0, [r3], -r1, lsl #10
     f54:	05141367 	ldreq	r1, [r4, #-871]	; 0xfffffc99
     f58:	05010606 	streq	r0, [r1, #-1542]	; 0xfffff9fa
     f5c:	01d30309 	bicseq	r0, r3, r9, lsl #6
     f60:	0306204a 	movweq	r2, #24650	; 0x604a
     f64:	05017eb2 	streq	r7, [r1, #-3762]	; 0xfffff14e
     f68:	0501060a 	streq	r0, [r1, #-1546]	; 0xfffff9f6
     f6c:	05052e09 	streq	r2, [r5, #-3593]	; 0xfffff1f7
     f70:	08053f06 	stmdaeq	r5, {r1, r2, r8, r9, sl, fp, ip, sp}
     f74:	07050106 	streq	r0, [r5, -r6, lsl #2]
     f78:	20063006 	andcs	r3, r6, r6
     f7c:	0d054b06 	vstreq	d4, [r5, #-24]	; 0xffffffe8
     f80:	07050106 	streq	r0, [r5, -r6, lsl #2]
     f84:	10063d06 	andne	r3, r6, r6, lsl #26
     f88:	05240622 	streq	r0, [r4, #-1570]!	; 0xfffff9de
     f8c:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     f90:	05320605 	ldreq	r0, [r2, #-1541]!	; 0xfffff9fb
     f94:	0501060b 	streq	r0, [r1, #-1547]	; 0xfffff9f5
     f98:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
     f9c:	0f051307 	svceq	0x00051307
     fa0:	07050106 	streq	r0, [r5, -r6, lsl #2]
     fa4:	060d052e 	streq	r0, [sp], -lr, lsr #10
     fa8:	150505ec 	strne	r0, [r5, #-1516]	; 0xfffffa14
     fac:	03140513 	tsteq	r4, #79691776	; 0x4c00000
     fb0:	05017ccd 	streq	r7, [r1, #-3277]	; 0xfffff333
     fb4:	16051403 	strne	r1, [r5], -r3, lsl #8
     fb8:	053c0106 	ldreq	r0, [ip, #-262]!	; 0xfffffefa
     fbc:	03b10308 			; <UNDEFINED> instruction: 0x03b10308
     fc0:	060a0501 	streq	r0, [sl], -r1, lsl #10
     fc4:	060d0531 			; <UNDEFINED> instruction: 0x060d0531
     fc8:	2a0b0501 	bcs	2c23d4 <__RAM_SIZE+0x1c23d4>
     fcc:	03060505 	movweq	r0, #25861	; 0x6505
     fd0:	05132e11 	ldreq	r2, [r3, #-3601]	; 0xfffff1ef
     fd4:	05010609 	streq	r0, [r1, #-1545]	; 0xfffff9f7
     fd8:	0f052e08 	svceq	0x00052e08
     fdc:	0605052d 	streq	r0, [r5], -sp, lsr #10
     fe0:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
     fe4:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
     fe8:	13052e05 	movwne	r2, #24069	; 0x5e05
     fec:	e4560306 	ldrb	r0, [r6], #-774	; 0xfffffcfa
     ff0:	01061905 	tsteq	r6, r5, lsl #18
     ff4:	2e062b05 	vmlacs.f64	d2, d6, d5
     ff8:	01063105 	tsteq	r6, r5, lsl #2
     ffc:	2e063505 	cfsh32cs	mvfx3, mvfx6, #5
    1000:	05013d05 	streq	r3, [r1, #-3333]	; 0xfffff2fb
    1004:	1305190d 	movwne	r1, #22797	; 0x590d
    1008:	05207a03 	streq	r7, [r0, #-2563]!	; 0xfffff5fd
    100c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    1010:	052e062b 	streq	r0, [lr, #-1579]!	; 0xfffff9d5
    1014:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    1018:	052e0635 	streq	r0, [lr, #-1589]!	; 0xfffff9cb
    101c:	0d05013d 	stfeqs	f0, [r5, #-244]	; 0xffffff0c
    1020:	1b130518 	blne	4c2488 <__RAM_SIZE+0x3c2488>
    1024:	01061905 	tsteq	r6, r5, lsl #18
    1028:	2e062b05 	vmlacs.f64	d2, d6, d5
    102c:	01063105 	tsteq	r6, r5, lsl #2
    1030:	2e063505 	cfsh32cs	mvfx3, mvfx6, #5
    1034:	05013d05 	streq	r3, [r1, #-3333]	; 0xfffff2fb
    1038:	1305170d 	movwne	r1, #22285	; 0x570d
    103c:	0619051c 			; <UNDEFINED> instruction: 0x0619051c
    1040:	062b0501 	strteq	r0, [fp], -r1, lsl #10
    1044:	0631052e 	ldrteq	r0, [r1], -lr, lsr #10
    1048:	06350501 	ldrteq	r0, [r5], -r1, lsl #10
    104c:	013d052e 	teqeq	sp, lr, lsr #10
    1050:	05160d05 	ldreq	r0, [r6, #-3333]	; 0xfffff2fb
    1054:	19051d13 	stmdbne	r5, {r0, r1, r4, r8, sl, fp, ip}
    1058:	2b050106 	blcs	141478 <__RAM_SIZE+0x41478>
    105c:	31052e06 	tstcc	r5, r6, lsl #28
    1060:	35050106 	strcc	r0, [r5, #-262]	; 0xfffffefa
    1064:	3d052e06 	stccc	14, cr2, [r5, #-24]	; 0xffffffe8
    1068:	150d0501 	strne	r0, [sp, #-1281]	; 0xfffffaff
    106c:	05250705 	streq	r0, [r5, #-1797]!	; 0xfffff8fb
    1070:	4a01060f 	bmi	428b4 <SYSTICK_CYCLES+0x19875>
    1074:	23060705 	movwcs	r0, #26373	; 0x6705
    1078:	01061105 	tsteq	r6, r5, lsl #2
    107c:	4b060705 	blmi	182c98 <__RAM_SIZE+0x82c98>
    1080:	01060a05 	tsteq	r6, r5, lsl #20
    1084:	33060905 	movwcc	r0, #26885	; 0x6905
    1088:	01060f05 	tsteq	r6, r5, lsl #30
    108c:	22060705 	andcs	r0, r6, #1310720	; 0x140000
    1090:	01060d05 	tsteq	r6, r5, lsl #26
    1094:	03060905 	movweq	r0, #26885	; 0x6905
    1098:	0f054a7a 	svceq	0x00054a7a
    109c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    10a0:	1f052f06 	svcne	0x00052f06
    10a4:	202e0106 	eorcs	r0, lr, r6, lsl #2
    10a8:	03060705 	movweq	r0, #26373	; 0x6705
    10ac:	0d05010b 	stfeqs	f0, [r5, #-44]	; 0xffffffd4
    10b0:	07050106 	streq	r0, [r5, -r6, lsl #2]
    10b4:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    10b8:	07050106 	streq	r0, [r5, -r6, lsl #2]
    10bc:	0b052f06 	bleq	14ccdc <__RAM_SIZE+0x4ccdc>
    10c0:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    10c4:	7cb90306 	ldcvc	3, cr0, [r9], #24
    10c8:	14030520 	strne	r0, [r3], #-1312	; 0xfffffae0
    10cc:	01061605 	tsteq	r6, r5, lsl #12
    10d0:	030a053c 	movweq	r0, #42300	; 0xa53c
    10d4:	050103c5 	streq	r0, [r1, #-965]	; 0xfffffc3b
    10d8:	0531060c 	ldreq	r0, [r1, #-1548]!	; 0xfffff9f4
    10dc:	0301060f 	movweq	r0, #5647	; 0x160f
    10e0:	09052e79 	stmdbeq	r5, {r0, r3, r4, r5, r6, r9, sl, fp, sp}
    10e4:	15054106 	strne	r4, [r5, #-262]	; 0xfffffefa
    10e8:	054a0106 	strbeq	r0, [sl, #-262]	; 0xfffffefa
    10ec:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    10f0:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    10f4:	054b0609 	strbeq	r0, [fp, #-1545]	; 0xfffff9f7
    10f8:	05010633 	streq	r0, [r1, #-1587]	; 0xfffff9cd
    10fc:	052f0609 	streq	r0, [pc, #-1545]!	; afb <__Vectors_Size+0x33b>
    1100:	4a01060f 	bmi	42944 <SYSTICK_CYCLES+0x19905>
    1104:	19060905 	stmdbne	r6, {r0, r2, r8, fp}
    1108:	01060f05 	tsteq	r6, r5, lsl #30
    110c:	2f060905 	svccs	0x00060905
    1110:	01060f05 	tsteq	r6, r5, lsl #30
    1114:	2f060905 	svccs	0x00060905
    1118:	01060d05 	tsteq	r6, r5, lsl #26
    111c:	05200c05 	streq	r0, [r0, #-3077]!	; 0xfffff3fb
    1120:	0b052c0f 	bleq	14c164 <__RAM_SIZE+0x4c164>
    1124:	11053106 	tstne	r5, r6, lsl #2
    1128:	0b050106 	bleq	141548 <__RAM_SIZE+0x41548>
    112c:	11052f06 	tstne	r5, r6, lsl #30
    1130:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1134:	0f054006 	svceq	0x00054006
    1138:	09050106 	stmdbeq	r5, {r1, r2, r8}
    113c:	0f052f06 	svceq	0x00052f06
    1140:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1144:	0d052f06 	stceq	15, cr2, [r5, #-24]	; 0xffffffe8
    1148:	0c050106 	stfeqs	f0, [r5], {6}
    114c:	2c0f0520 	cfstr32cs	mvfx0, [pc], {32}
    1150:	31060b05 	tstcc	r6, r5, lsl #22
    1154:	01061105 	tsteq	r6, r5, lsl #2
    1158:	2f060b05 	svccs	0x00060b05
    115c:	01061105 	tsteq	r6, r5, lsl #2
    1160:	41060905 	tstmi	r6, r5, lsl #18
    1164:	01060f05 	tsteq	r6, r5, lsl #30
    1168:	2f060905 	svccs	0x00060905
    116c:	01060f05 	tsteq	r6, r5, lsl #30
    1170:	2f060905 	svccs	0x00060905
    1174:	0f030505 	svceq	0x00030505
    1178:	060d0501 	streq	r0, [sp], -r1, lsl #10
    117c:	2e050501 	cfsh32cs	mvfx0, mvfx5, #1
    1180:	03060905 	movweq	r0, #26885	; 0x6905
    1184:	015b0274 	cmpeq	fp, r4, ror r2
    1188:	01060f05 	tsteq	r6, r5, lsl #30
    118c:	2f060905 	svccs	0x00060905
    1190:	01060f05 	tsteq	r6, r5, lsl #30
    1194:	2f060905 	svccs	0x00060905
    1198:	060f0522 	streq	r0, [pc], -r2, lsr #10
    119c:	06090501 	streq	r0, [r9], -r1, lsl #10
    11a0:	060f052f 	streq	r0, [pc], -pc, lsr #10
    11a4:	06090501 	streq	r0, [r9], -r1, lsl #10
    11a8:	200f032f 	andcs	r0, pc, pc, lsr #6
    11ac:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
    11b0:	001c0501 	andseq	r0, ip, r1, lsl #10
    11b4:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    11b8:	31060e05 	tstcc	r6, r5, lsl #28
    11bc:	01061105 	tsteq	r6, r5, lsl #2
    11c0:	31060e05 	tstcc	r6, r5, lsl #28
    11c4:	01061105 	tsteq	r6, r5, lsl #2
    11c8:	32060b05 	andcc	r0, r6, #5120	; 0x1400
    11cc:	06110513 			; <UNDEFINED> instruction: 0x06110513
    11d0:	2d100501 	cfldr32cs	mvfx0, [r0, #-4]
    11d4:	052e7703 	streq	r7, [lr, #-1795]!	; 0xfffff8fd
    11d8:	0d030609 	stceq	6, cr0, [r3, #-36]	; 0xffffffdc
    11dc:	060c0520 	streq	r0, [ip], -r0, lsr #10
    11e0:	06090501 	streq	r0, [r9], -r1, lsl #10
    11e4:	060c0533 			; <UNDEFINED> instruction: 0x060c0533
    11e8:	001e0501 	andseq	r0, lr, r1, lsl #10
    11ec:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    11f0:	2f060b05 	svccs	0x00060b05
    11f4:	01061105 	tsteq	r6, r5, lsl #2
    11f8:	32060905 	andcc	r0, r6, #81920	; 0x14000
    11fc:	01060c05 	tsteq	r6, r5, lsl #24
    1200:	3d060b05 	vstrcc	d0, [r6, #-20]	; 0xffffffec
    1204:	01061105 	tsteq	r6, r5, lsl #2
    1208:	32060905 	andcc	r0, r6, #81920	; 0x14000
    120c:	01060c05 	tsteq	r6, r5, lsl #24
    1210:	02001e05 	andeq	r1, r0, #5, 28	; 0x50
    1214:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1218:	1303060b 	movwne	r0, #13835	; 0x360b
    121c:	060e052e 	streq	r0, [lr], -lr, lsr #10
    1220:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    1224:	0613054f 	ldreq	r0, [r3], -pc, asr #10
    1228:	060d0501 	streq	r0, [sp], -r1, lsl #10
    122c:	0667054e 	strbteq	r0, [r7], -lr, asr #10
    1230:	4a4e0501 	bmi	138263c <__RAM_SIZE+0x128263c>
    1234:	02000d05 	andeq	r0, r0, #320	; 0x140
    1238:	4b060804 	blmi	183250 <__RAM_SIZE+0x83250>
    123c:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    1240:	01060804 	tsteq	r6, r4, lsl #16
    1244:	08040200 	stmdaeq	r4, {r9}
    1248:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
    124c:	02004a08 	andeq	r4, r0, #8, 20	; 0x8000
    1250:	004a0804 	subeq	r0, sl, r4, lsl #16
    1254:	20080402 	andcs	r0, r8, r2, lsl #8
    1258:	08040200 	stmdaeq	r4, {r9}
    125c:	03100520 	tsteq	r0, #32, 10	; 0x8000000
    1260:	31310147 	teqcc	r1, r7, asr #2
    1264:	36060b05 	strcc	r0, [r6], -r5, lsl #22
    1268:	01061105 	tsteq	r6, r5, lsl #2
    126c:	060b052e 	streq	r0, [fp], -lr, lsr #10
    1270:	05201003 	streq	r1, [r0, #-3]!
    1274:	0501060e 	streq	r0, [r1, #-1550]	; 0xfffff9f2
    1278:	05420610 	strbeq	r0, [r2, #-1552]	; 0xfffff9f0
    127c:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1280:	0541060d 	strbeq	r0, [r1, #-1549]	; 0xfffff9f3
    1284:	0501064c 	streq	r0, [r1, #-1612]	; 0xfffff9b4
    1288:	0d053c3c 	stceq	12, cr3, [r5, #-240]	; 0xffffff10
    128c:	08040200 	stmdaeq	r4, {r9}
    1290:	38054b06 	stmdacc	r5, {r1, r2, r8, r9, fp, lr}
    1294:	08040200 	stmdaeq	r4, {r9}
    1298:	13050106 	movwne	r0, #20742	; 0x5106
    129c:	08040200 	stmdaeq	r4, {r9}
    12a0:	0402004a 	streq	r0, [r2], #-74	; 0xffffffb6
    12a4:	02007408 	andeq	r7, r0, #8, 8	; 0x8000000
    12a8:	003c0804 	eorseq	r0, ip, r4, lsl #16
    12ac:	58080402 	stmdapl	r8, {r1, sl}
    12b0:	08040200 	stmdaeq	r4, {r9}
    12b4:	06090520 	streq	r0, [r9], -r0, lsr #10
    12b8:	05011203 	streq	r1, [r1, #-515]	; 0xfffffdfd
    12bc:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    12c0:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    12c4:	2063030d 	rsbcs	r0, r3, sp, lsl #6
    12c8:	01061d05 	tsteq	r6, r5, lsl #26
    12cc:	83060d05 	movwhi	r0, #27909	; 0x6d05
    12d0:	01063d05 	tsteq	r6, r5, lsl #26
    12d4:	2e4a1305 	cdpcs	3, 4, cr1, cr10, cr5, {0}
    12d8:	0520ac58 	streq	sl, [r0, #-3160]!	; 0xfffff3a8
    12dc:	0d05203d 	stceq	0, cr2, [r5, #-244]	; 0xffffff0c
    12e0:	18054e06 	stmdane	r5, {r1, r2, r9, sl, fp, lr}
    12e4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    12e8:	38054b06 	stmdacc	r5, {r1, r2, r8, r9, fp, lr}
    12ec:	13050106 	movwne	r0, #20742	; 0x5106
    12f0:	20589e4a 	subscs	r9, r8, sl, asr #28
    12f4:	00018105 	andeq	r8, r1, r5, lsl #2
    12f8:	23020402 	movwcs	r0, #9218	; 0x2402
    12fc:	053c7105 	ldreq	r7, [ip, #-261]!	; 0xfffffefb
    1300:	81053c66 	tsthi	r5, r6, ror #24
    1304:	05583c01 	ldrbeq	r3, [r8, #-3073]	; 0xfffff3ff
    1308:	051a060d 	ldreq	r0, [sl, #-1549]	; 0xfffff9f3
    130c:	08010613 	stmdaeq	r1, {r0, r1, r4, r9, sl}
    1310:	0520584a 	streq	r5, [r0, #-2122]!	; 0xfffff7b6
    1314:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    1318:	9e010613 	mcrls	6, 0, r0, cr1, cr3, {0}
    131c:	ae052090 	mcrge	0, 0, r2, cr5, cr0, {4}
    1320:	04020001 	streq	r0, [r2], #-1
    1324:	95052302 	strls	r2, [r5, #-770]	; 0xfffffcfe
    1328:	ae053c01 	cdpge	12, 0, cr3, cr5, cr1, {0}
    132c:	05585801 	ldrbeq	r5, [r8, #-2049]	; 0xfffff7ff
    1330:	0a030609 	beq	c2b5c <SYSTICK_CYCLES+0x99b1d>
    1334:	060c0501 	streq	r0, [ip], -r1, lsl #10
    1338:	06090501 	streq	r0, [r9], -r1, lsl #10
    133c:	060f052f 	streq	r0, [pc], -pc, lsr #10
    1340:	06090501 	streq	r0, [r9], -r1, lsl #10
    1344:	0f056708 	svceq	0x00056708
    1348:	09050106 	stmdbeq	r5, {r1, r2, r8}
    134c:	1d053d06 	stcne	13, cr3, [r5, #-24]	; 0xffffffe8
    1350:	01040200 	mrseq	r0, R12_usr
    1354:	0023051d 	eoreq	r0, r3, sp, lsl r5
    1358:	06010402 	streq	r0, [r1], -r2, lsl #8
    135c:	04020001 	streq	r0, [r2], #-1
    1360:	09052e01 	stmdbeq	r5, {r0, r9, sl, fp, sp}
    1364:	20090306 	andcs	r0, r9, r6, lsl #6
    1368:	01060c05 	tsteq	r6, r5, lsl #24
    136c:	02001d05 	andeq	r1, r0, #320	; 0x140
    1370:	052e0204 	streq	r0, [lr, #-516]!	; 0xfffffdfc
    1374:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
    1378:	052e0603 	streq	r0, [lr, #-1539]!	; 0xfffff9fd
    137c:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    1380:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    1384:	052f0609 	streq	r0, [pc, #-1545]!	; d83 <__Vectors_Size+0x5c3>
    1388:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    138c:	0402001d 	streq	r0, [r2], #-29	; 0xffffffe3
    1390:	31052e02 	tstcc	r5, r2, lsl #28
    1394:	03040200 	movweq	r0, #16896	; 0x4200
    1398:	37052e06 	strcc	r2, [r5, -r6, lsl #28]
    139c:	03040200 	movweq	r0, #16896	; 0x4200
    13a0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    13a4:	0f052f06 	svceq	0x00052f06
    13a8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    13ac:	05670806 	strbeq	r0, [r7, #-2054]!	; 0xfffff7fa
    13b0:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    13b4:	243d0609 	ldrtcs	r0, [sp], #-1545	; 0xfffff9f7
    13b8:	060c0514 			; <UNDEFINED> instruction: 0x060c0514
    13bc:	16052e01 	strne	r2, [r5], -r1, lsl #28
    13c0:	0609051e 			; <UNDEFINED> instruction: 0x0609051e
    13c4:	06130536 			; <UNDEFINED> instruction: 0x06130536
    13c8:	3c090501 	cfstr32cc	mvfx0, [r9], {1}
    13cc:	055a062e 	ldrbeq	r0, [sl, #-1582]	; 0xfffff9d2
    13d0:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    13d4:	05250609 	streq	r0, [r5, #-1545]!	; 0xfffff9f7
    13d8:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    13dc:	053d0609 	ldreq	r0, [sp, #-1545]!	; 0xfffff9f7
    13e0:	2e74030d 	cdpcs	3, 7, cr0, cr4, cr13, {0}
    13e4:	13052e06 	movwne	r2, #24070	; 0x5e06
    13e8:	210d0549 	tstcs	sp, r9, asr #10
    13ec:	1f061105 	svcne	0x00061105
    13f0:	01061305 	tsteq	r6, r5, lsl #6
    13f4:	2e2e1105 	sufcse	f1, f6, f5
    13f8:	3c2b1605 	stccc	6, cr1, [fp], #-20	; 0xffffffec
    13fc:	0d053c2e 	stceq	12, cr3, [r5, #-184]	; 0xffffff48
    1400:	200c0306 	andcs	r0, ip, r6, lsl #6
    1404:	13052006 	movwne	r2, #20486	; 0x5006
    1408:	210d0549 	tstcs	sp, r9, asr #10
    140c:	1f061105 	svcne	0x00061105
    1410:	01061305 	tsteq	r6, r5, lsl #6
    1414:	2e2e1105 	sufcse	f1, f6, f5
    1418:	0609052e 	streq	r0, [r9], -lr, lsr #10
    141c:	05010903 	streq	r0, [r1, #-2307]	; 0xfffff6fd
    1420:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    1424:	05590609 	ldrbeq	r0, [r9, #-1545]	; 0xfffff9f7
    1428:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    142c:	90030626 	andls	r0, r3, r6, lsr #12
    1430:	2205747b 	andcs	r7, r5, #2063597568	; 0x7b000000
    1434:	061e0501 	ldreq	r0, [lr], -r1, lsl #10
    1438:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    143c:	06030520 	streq	r0, [r3], -r0, lsr #10
    1440:	201e052e 	andscs	r0, lr, lr, lsr #10
    1444:	05201405 	streq	r1, [r0, #-1029]!	; 0xfffffbfb
    1448:	052f0603 	streq	r0, [pc, #-1539]!	; e4d <__Vectors_Size+0x68d>
    144c:	2e01061b 	mcrcs	6, 0, r0, cr1, cr11, {0}
    1450:	03060905 	movweq	r0, #26885	; 0x6905
    1454:	050104f1 	streq	r0, [r1, #-1265]	; 0xfffffb0f
    1458:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    145c:	054b060b 	strbeq	r0, [fp, #-1547]	; 0xfffff9f5
    1460:	0501060d 	streq	r0, [r1, #-1549]	; 0xfffff9f3
    1464:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    1468:	4a01060c 	bmi	42ca0 <SYSTICK_CYCLES+0x19c61>
    146c:	0520202e 	streq	r2, [r0, #-46]!	; 0xffffffd2
    1470:	2e2e1b1a 	vmovcs.32	d14[1], r1
    1474:	35060d05 	strcc	r0, [r6, #-3333]	; 0xfffff2fb
    1478:	13052e06 	movwne	r2, #24070	; 0x5e06
    147c:	210d0549 	tstcs	sp, r9, asr #10
    1480:	1f061105 	svcne	0x00061105
    1484:	01061305 	tsteq	r6, r5, lsl #6
    1488:	05201105 	streq	r1, [r0, #-261]!	; 0xfffffefb
    148c:	203c2e13 	eorscs	r2, ip, r3, lsl lr
    1490:	05254505 	streq	r4, [r5, #-1285]!	; 0xfffffafb
    1494:	0521060b 	streq	r0, [r1, #-1547]!	; 0xfffff9f5
    1498:	05010612 	streq	r0, [r1, #-1554]	; 0xfffff9ee
    149c:	05202e0b 	streq	r2, [r0, #-3595]!	; 0xfffff1f5
    14a0:	0549060f 	strbeq	r0, [r9, #-1551]	; 0xfffff9f1
    14a4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    14a8:	1a052e0f 	bne	14ccec <__RAM_SIZE+0x4ccec>
    14ac:	01040200 	mrseq	r0, R12_usr
    14b0:	00450520 	subeq	r0, r5, r0, lsr #10
    14b4:	2e020402 	cdpcs	4, 0, cr0, cr2, cr2, {0}
    14b8:	02003905 	andeq	r3, r0, #81920	; 0x14000
    14bc:	05200204 	streq	r0, [r0, #-516]!	; 0xfffffdfc
    14c0:	0905320c 	stmdbeq	r5, {r2, r3, r9, ip, sp}
    14c4:	0c052e06 	stceq	14, cr2, [r5], {6}
    14c8:	09050106 	stmdbeq	r5, {r1, r2, r8}
    14cc:	0f053306 	svceq	0x00053306
    14d0:	09050106 	stmdbeq	r5, {r1, r2, r8}
    14d4:	20063d06 	andcs	r3, r6, r6, lsl #26
    14d8:	060d052e 	streq	r0, [sp], -lr, lsr #10
    14dc:	0520061c 	streq	r0, [r0, #-1564]!	; 0xfffff9e4
    14e0:	0d054913 	vstreq.16	s8, [r5, #-38]	; 0xffffffda	; <UNPREDICTABLE>
    14e4:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    14e8:	0613051f 			; <UNDEFINED> instruction: 0x0613051f
    14ec:	2e110501 	cfmul32cs	mvfx0, mvfx1, mvfx1
    14f0:	0520202e 	streq	r2, [r0, #-46]!	; 0xffffffd2
    14f4:	09030609 	stmdbeq	r3, {r0, r3, r9, sl}
    14f8:	0f051301 	svceq	0x00051301
    14fc:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1500:	05133006 	ldreq	r3, [r3, #-6]
    1504:	5105170b 	tstpl	r5, fp, lsl #14
    1508:	11050106 	tstne	r5, r6, lsl #2
    150c:	0609054a 	streq	r0, [r9], -sl, asr #10
    1510:	0f051608 	svceq	0x00051608
    1514:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1518:	20063d06 	andcs	r3, r6, r6, lsl #26
    151c:	20061606 	andcs	r1, r6, r6, lsl #12
    1520:	0f055906 	svceq	0x00055906
    1524:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1528:	10063d06 	andne	r3, r6, r6, lsl #26
    152c:	06230622 	strteq	r0, [r3], -r2, lsr #12
    1530:	054b0620 	strbeq	r0, [fp, #-1568]	; 0xfffff9e0
    1534:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    1538:	063d0609 	ldrteq	r0, [sp], -r9, lsl #12
    153c:	f8032210 			; <UNDEFINED> instruction: 0xf8032210
    1540:	0305207d 	movweq	r2, #20605	; 0x507d
    1544:	028d0306 	addeq	r0, sp, #402653184	; 0x18000000
    1548:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    154c:	2e2e0601 	cfmadda32cs	mvax0, mvax0, mvfx14, mvfx1
    1550:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
    1554:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    1558:	054d0604 	strbeq	r0, [sp, #-1540]	; 0xfffff9fc
    155c:	04020001 	streq	r0, [r2], #-1
    1560:	00130604 	andseq	r0, r3, r4, lsl #12
    1564:	4a040402 	bmi	102574 <__RAM_SIZE+0x2574>
    1568:	01000302 	tsteq	r0, r2, lsl #6
    156c:	00010501 	andeq	r0, r1, r1, lsl #10
    1570:	1a280205 	bne	a01d8c <__RAM_SIZE+0x901d8c>
    1574:	95031000 	strls	r1, [r3, #-0]
    1578:	03050101 	movweq	r0, #20737	; 0x5101
    157c:	01110513 	tsteq	r1, r3, lsl r5
    1580:	05011c05 	streq	r1, [r1, #-3077]	; 0xfffff3fb
    1584:	06051303 	streq	r1, [r5], -r3, lsl #6
    1588:	01050106 	tsteq	r5, r6, lsl #2
    158c:	0605052c 	streq	r0, [r5], -ip, lsr #10
    1590:	06010523 	streq	r0, [r1], -r3, lsr #10
    1594:	00010230 	andeq	r0, r1, r0, lsr r2
    1598:	01050101 	tsteq	r5, r1, lsl #2
    159c:	34020500 	strcc	r0, [r2], #-1280	; 0xfffffb00
    15a0:	0310001a 	tsteq	r0, #26
    15a4:	060106de 			; <UNDEFINED> instruction: 0x060106de
    15a8:	06030501 	streq	r0, [r3], -r1, lsl #10
    15ac:	13211367 			; <UNDEFINED> instruction: 0x13211367
    15b0:	01061305 	tsteq	r6, r5, lsl #6
    15b4:	75060305 	strvc	r0, [r6, #-773]	; 0xfffffcfb
    15b8:	06010513 			; <UNDEFINED> instruction: 0x06010513
    15bc:	00080213 	andeq	r0, r8, r3, lsl r2
    15c0:	01050101 	tsteq	r5, r1, lsl #2
    15c4:	00020500 	andeq	r0, r2, r0, lsl #10
    15c8:	03000000 	movweq	r0, #0
    15cc:	060106e9 	streq	r0, [r1], -r9, ror #13
    15d0:	06030501 	streq	r0, [r3], -r1, lsl #10
    15d4:	05211375 	streq	r1, [r1, #-885]!	; 0xfffffc8b
    15d8:	4a010613 	bmi	42e2c <SYSTICK_CYCLES+0x19ded>
    15dc:	2f060305 	svccs	0x00060305
    15e0:	06010513 			; <UNDEFINED> instruction: 0x06010513
    15e4:	00080213 	andeq	r0, r8, r3, lsl r2
    15e8:	01050101 	tsteq	r5, r1, lsl #2
    15ec:	00020500 	andeq	r0, r2, r0, lsl #10
    15f0:	03000000 	movweq	r0, #0
    15f4:	060106f3 			; <UNDEFINED> instruction: 0x060106f3
    15f8:	06030501 	streq	r0, [r3], -r1, lsl #10
    15fc:	05211375 	streq	r1, [r1, #-885]!	; 0xfffffc8b
    1600:	2e010613 	mcrcs	6, 0, r0, cr1, cr3, {0}
    1604:	06030520 	streq	r0, [r3], -r0, lsr #10
    1608:	0105132f 	tsteq	r5, pc, lsr #6
    160c:	07021306 	streq	r1, [r2, -r6, lsl #6]
    1610:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1614:	02050001 	andeq	r0, r5, #1
    1618:	00000000 	andeq	r0, r0, r0
    161c:	0106fd03 	tsteq	r6, r3, lsl #26	; <UNPREDICTABLE>
    1620:	03050106 	movweq	r0, #20742	; 0x5106
    1624:	05133d06 	ldreq	r3, [r3, #-3334]	; 0xfffff2fa
    1628:	4a01060a 	bmi	42e58 <SYSTICK_CYCLES+0x19e19>
    162c:	2f010520 	svccs	0x00010520
    1630:	01000602 	tsteq	r0, r2, lsl #12
    1634:	00010501 	andeq	r0, r1, r1, lsl #10
    1638:	00000205 	andeq	r0, r0, r5, lsl #4
    163c:	84030000 	strhi	r0, [r3], #-0
    1640:	01060107 	tsteq	r6, r7, lsl #2
    1644:	2f060305 	svccs	0x00060305
    1648:	01060a05 	tsteq	r6, r5, lsl #20
    164c:	2020202e 	eorcs	r2, r0, lr, lsr #32
    1650:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
    1654:	01010005 	tsteq	r1, r5
    1658:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    165c:	00000002 	andeq	r0, r0, r2
    1660:	078a0300 	streq	r0, [sl, r0, lsl #6]
    1664:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    1668:	13670603 	cmnne	r7, #3145728	; 0x300000
    166c:	061b0521 	ldreq	r0, [fp], -r1, lsr #10
    1670:	06030501 	streq	r0, [r3], -r1, lsl #10
    1674:	0613052f 	ldreq	r0, [r3], -pc, lsr #10
    1678:	03055801 	movweq	r5, #22529	; 0x5801
    167c:	05132f06 	ldreq	r2, [r3, #-3846]	; 0xfffff0fa
    1680:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1684:	01010008 	tsteq	r1, r8
    1688:	00000338 	andeq	r0, r0, r8, lsr r3
    168c:	01cc0003 	biceq	r0, ip, r3
    1690:	01020000 	mrseq	r0, (UNDEF: 2)
    1694:	000d0efb 	strdeq	r0, [sp], -fp
    1698:	01010101 	tsteq	r1, r1, lsl #2
    169c:	01000000 	mrseq	r0, (UNDEF: 0)
    16a0:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    16a4:	6f432f2e 	svcvs	0x00432f2e
    16a8:	532f6572 			; <UNDEFINED> instruction: 0x532f6572
    16ac:	63006372 	movwvs	r6, #882	; 0x372
    16b0:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    16b4:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    16b8:	6f646978 	svcvs	0x00646978
    16bc:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    16c0:	6172676f 	cmnvs	r2, pc, ror #14
    16c4:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    16c8:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    16cc:	63675c63 	cmnvs	r7, #25344	; 0x6300
    16d0:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    16d4:	6f6e2d6d 	svcvs	0x006e2d6d
    16d8:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    16dc:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    16e0:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    16e4:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    16e8:	30312e31 	eorscc	r2, r1, r1, lsr lr
    16ec:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    16f0:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    16f4:	61652d65 	cmnvs	r5, r5, ror #26
    16f8:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    16fc:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    1700:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    1704:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    1708:	6300656e 	movwvs	r6, #1390	; 0x56e
    170c:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    1710:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    1714:	6f646978 	svcvs	0x00646978
    1718:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    171c:	6172676f 	cmnvs	r2, pc, ror #14
    1720:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    1724:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    1728:	63675c63 	cmnvs	r7, #25344	; 0x6300
    172c:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    1730:	6f6e2d6d 	svcvs	0x006e2d6d
    1734:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    1738:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    173c:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    1740:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    1744:	30312e31 	eorscc	r2, r1, r1, lsr lr
    1748:	62696c5c 	rsbvs	r6, r9, #92, 24	; 0x5c00
    174c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    1750:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1754:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1758:	61652d65 	cmnvs	r5, r5, ror #26
    175c:	315c6962 	cmpcc	ip, r2, ror #18
    1760:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
    1764:	6e695c31 	mcrvs	12, 3, r5, cr9, cr1, {1}
    1768:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    176c:	3a630065 	bcc	18c1908 <__RAM_SIZE+0x17c1908>
    1770:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    1774:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    1778:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    177c:	6f72705c 	svcvs	0x0072705c
    1780:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    1784:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    1788:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    178c:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    1790:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    1794:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    1798:	61652d65 	cmnvs	r5, r5, ror #26
    179c:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    17a0:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    17a4:	31323032 	teqcc	r2, r2, lsr r0
    17a8:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    17ac:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    17b0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    17b4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    17b8:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    17bc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    17c0:	79735c65 	ldmdbvc	r3!, {r0, r2, r5, r6, sl, fp, ip, lr}^
    17c4:	3a630073 	bcc	18c1998 <__RAM_SIZE+0x17c1998>
    17c8:	6573755c 	ldrbvs	r7, [r3, #-1372]!	; 0xfffffaa4
    17cc:	785c7372 	ldmdavc	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
    17d0:	6e6f6469 	cdpvs	4, 6, cr6, cr15, cr9, {3}
    17d4:	6f72705c 	svcvs	0x0072705c
    17d8:	6d617267 	sfmvs	f7, 2, [r1, #-412]!	; 0xfffffe64
    17dc:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    17e0:	6363675f 	cmnvs	r3, #24903680	; 0x17c0000
    17e4:	6363675c 	cmnvs	r3, #92, 14	; 0x1700000
    17e8:	6d72612d 	ldfvse	f6, [r2, #-180]!	; 0xffffff4c
    17ec:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    17f0:	61652d65 	cmnvs	r5, r5, ror #26
    17f4:	312d6962 			; <UNDEFINED> instruction: 0x312d6962
    17f8:	2d332e30 	ldccs	14, cr2, [r3, #-192]!	; 0xffffff40
    17fc:	31323032 	teqcc	r2, r2, lsr r0
    1800:	5c30312e 	ldfpls	f3, [r0], #-184	; 0xffffff48
    1804:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    1808:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    180c:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    1810:	6e695c69 	cdpvs	12, 6, cr5, cr9, cr9, {3}
    1814:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
    1818:	75000065 	strvc	r0, [r0, #-101]	; 0xffffff9b
    181c:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    1820:	00010063 	andeq	r0, r1, r3, rrx
    1824:	65645f00 	strbvs	r5, [r4, #-3840]!	; 0xfffff100
    1828:	6c756166 	ldfvse	f6, [r5], #-408	; 0xfffffe68
    182c:	79745f74 	ldmdbvc	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1830:	2e736570 	mrccs	5, 3, r6, cr3, cr0, {3}
    1834:	00020068 	andeq	r0, r2, r8, rrx
    1838:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
    183c:	2e666564 	cdpcs	5, 6, cr6, cr6, cr4, {3}
    1840:	00030068 	andeq	r0, r3, r8, rrx
    1844:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    1848:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
    184c:	0400682e 	streq	r6, [r0], #-2094	; 0xfffff7d2
    1850:	74730000 	ldrbtvc	r0, [r3], #-0
    1854:	2e6f6964 	vnmulcs.f16	s13, s30, s9	; <UNPREDICTABLE>
    1858:	00050068 	andeq	r0, r5, r8, rrx
    185c:	16050000 	strne	r0, [r5], -r0
    1860:	60020500 	andvs	r0, r2, r0, lsl #10
    1864:	0310001a 	tsteq	r0, #26
    1868:	2405011c 	strcs	r0, [r5], #-284	; 0xfffffee4
    186c:	01040200 	mrseq	r0, R12_usr
    1870:	000b0513 	andeq	r0, fp, r3, lsl r5
    1874:	01010402 	tsteq	r1, r2, lsl #8
    1878:	02000c05 	andeq	r0, r0, #1280	; 0x500
    187c:	01060104 	tsteq	r6, r4, lsl #2
    1880:	02000b05 	andeq	r0, r0, #5120	; 0x1400
    1884:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    1888:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    188c:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1890:	052f0605 	streq	r0, [pc, #-1541]!	; 1293 <_Min_Stack_Size+0x293>
    1894:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    1898:	01010003 	tsteq	r1, r3
    189c:	05001405 	streq	r1, [r0, #-1029]	; 0xfffffbfb
    18a0:	00000002 	andeq	r0, r0, r2
    18a4:	01220300 			; <UNDEFINED> instruction: 0x01220300
    18a8:	02002b05 	andeq	r2, r0, #5120	; 0x1400
    18ac:	05130104 	ldreq	r0, [r3, #-260]	; 0xfffffefc
    18b0:	0402000b 	streq	r0, [r2], #-11
    18b4:	0d050101 	stfeqs	f0, [r5, #-4]
    18b8:	01040200 	mrseq	r0, R12_usr
    18bc:	0b050106 	bleq	141cdc <__RAM_SIZE+0x41cdc>
    18c0:	01040200 	mrseq	r0, R12_usr
    18c4:	0605052e 	streq	r0, [r5], -lr, lsr #10
    18c8:	060c053d 			; <UNDEFINED> instruction: 0x060c053d
    18cc:	2f010501 	svccs	0x00010501
    18d0:	01000302 	tsteq	r0, r2, lsl #6
    18d4:	001e0501 	andseq	r0, lr, r1, lsl #10
    18d8:	1a740205 	bne	1d020f4 <__RAM_SIZE+0x1c020f4>
    18dc:	27031000 	strcs	r1, [r3, -r0]
    18e0:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    18e4:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    18e8:	11060905 	tstne	r6, r5, lsl #18
    18ec:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
    18f0:	2f210609 	svccs	0x00210609
    18f4:	01060e05 	tsteq	r6, r5, lsl #28
    18f8:	1e060b05 	vmlane.f64	d0, d6, d5
    18fc:	01061205 	tsteq	r6, r5, lsl #4
    1900:	05200b05 	streq	r0, [r0, #-2821]!	; 0xfffff4fb
    1904:	3d320605 	ldccc	6, cr0, [r2, #-20]!	; 0xffffffec
    1908:	13060105 	movwne	r0, #24837	; 0x6105
    190c:	0101002e 	tsteq	r1, lr, lsr #32
    1910:	05001605 	streq	r1, [r0, #-1541]	; 0xfffff9fb
    1914:	001a9402 	andseq	r9, sl, r2, lsl #8
    1918:	01310310 	teqeq	r1, r0, lsl r3
    191c:	05130505 	ldreq	r0, [r3, #-1285]	; 0xfffffafb
    1920:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1924:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    1928:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    192c:	052f0605 	streq	r0, [pc, #-1541]!	; 132f <_Min_Stack_Size+0x32f>
    1930:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1934:	052f0605 	streq	r0, [pc, #-1541]!	; 1337 <_Min_Stack_Size+0x337>
    1938:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    193c:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
    1940:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    1944:	052f0605 	streq	r0, [pc, #-1541]!	; 1347 <_Min_Stack_Size+0x347>
    1948:	05010616 	streq	r0, [r1, #-1558]	; 0xfffff9ea
    194c:	04022f01 	streq	r2, [r2], #-3841	; 0xfffff0ff
    1950:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    1954:	02050024 	andeq	r0, r5, #36	; 0x24
    1958:	00000000 	andeq	r0, r0, r0
    195c:	06013a03 	streq	r3, [r1], -r3, lsl #20
    1960:	06050501 	streq	r0, [r5], -r1, lsl #10
    1964:	06010521 	streq	r0, [r1], -r1, lsr #10
    1968:	0001022f 	andeq	r0, r1, pc, lsr #4
    196c:	30050101 	andcc	r0, r5, r1, lsl #2
    1970:	00020500 	andeq	r0, r2, r0, lsl #10
    1974:	03000000 	movweq	r0, #0
    1978:	0106013e 	tsteq	r6, lr, lsr r1
    197c:	3d060505 	cfstr32cc	mvfx0, [r6, #-20]	; 0xffffffec
    1980:	060c0513 			; <UNDEFINED> instruction: 0x060c0513
    1984:	06090501 	streq	r0, [r9], -r1, lsl #10
    1988:	06140534 			; <UNDEFINED> instruction: 0x06140534
    198c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1990:	060c0521 	streq	r0, [ip], -r1, lsr #10
    1994:	060b0501 	streq	r0, [fp], -r1, lsl #10
    1998:	05207a03 	streq	r7, [r0, #-2563]!	; 0xfffff5fd
    199c:	09050105 	stmdbeq	r5, {r0, r2, r8}
    19a0:	060e0513 			; <UNDEFINED> instruction: 0x060e0513
    19a4:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    19a8:	21060905 	tstcs	r6, r5, lsl #18
    19ac:	01060b05 	tsteq	r6, r5, lsl #22
    19b0:	02001705 	andeq	r1, r0, #1310720	; 0x140000
    19b4:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
    19b8:	05340605 	ldreq	r0, [r4, #-1541]!	; 0xfffff9fb
    19bc:	20130601 	andscs	r0, r3, r1, lsl #12
    19c0:	01010020 	tsteq	r1, r0, lsr #32
    19c4:	000001f5 	strdeq	r0, [r0], -r5
    19c8:	00cb0003 	sbceq	r0, fp, r3
    19cc:	01020000 	mrseq	r0, (UNDEF: 2)
    19d0:	000d0efb 	strdeq	r0, [sp], -fp
    19d4:	01010101 	tsteq	r1, r1, lsl #2
    19d8:	01000000 	mrseq	r0, (UNDEF: 0)
    19dc:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    19e0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    19e4:	2f2e2e2f 	svccs	0x002e2e2f
    19e8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    19ec:	2f736f74 	svccs	0x00736f74
    19f0:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    19f4:	2f786461 	svccs	0x00786461
    19f8:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    19fc:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    1a00:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    1a04:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1a08:	2f2e2e2f 	svccs	0x002e2e2f
    1a0c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1a10:	2f736f74 	svccs	0x00736f74
    1a14:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1a18:	2f786461 	svccs	0x00786461
    1a1c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    1a20:	6f632f73 	svcvs	0x00632f73
    1a24:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    1a28:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    1a2c:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    1a30:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1a34:	2f2e2e00 	svccs	0x002e2e00
    1a38:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1a3c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1a40:	6f747262 	svcvs	0x00747262
    1a44:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1a48:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1a4c:	6f632f78 	svcvs	0x00632f78
    1a50:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    1a54:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    1a58:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1a5c:	6f6c625f 	svcvs	0x006c625f
    1a60:	725f6b63 	subsvc	r6, pc, #101376	; 0x18c00
    1a64:	61656c65 	cmnvs	r5, r5, ror #24
    1a68:	632e6573 			; <UNDEFINED> instruction: 0x632e6573
    1a6c:	00000100 	andeq	r0, r0, r0, lsl #2
    1a70:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    1a74:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    1a78:	00020068 	andeq	r0, r2, r8, rrx
    1a7c:	5f787400 	svcpl	0x00787400
    1a80:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    1a84:	00030068 	andeq	r0, r3, r8, rrx
    1a88:	5f787400 	svcpl	0x00787400
    1a8c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1a90:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    1a94:	00000300 	andeq	r0, r0, r0, lsl #6
    1a98:	00010500 	andeq	r0, r1, r0, lsl #10
    1a9c:	1ab80205 	bne	fee022b8 <__RAM_segment_used_end__+0xc6d022b8>
    1aa0:	ca031000 	bgt	c5aa8 <SYSTICK_CYCLES+0x9ca69>
    1aa4:	01060100 	mrseq	r0, (UNDEF: 22)
    1aa8:	13143006 	tstne	r4, #6
    1aac:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    1ab0:	05051313 	streq	r1, [r5, #-787]	; 0xfffffced
    1ab4:	05020416 	streq	r0, [r2, #-1046]	; 0xfffffbea
    1ab8:	03f80337 	mvnseq	r0, #-603979776	; 0xdc000000
    1abc:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    1ac0:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    1ac4:	015c0337 	cmpeq	ip, r7, lsr r3
    1ac8:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    1acc:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    1ad0:	21030601 	tstcs	r3, r1, lsl #12
    1ad4:	01062201 	tsteq	r6, r1, lsl #4
    1ad8:	03060104 	movweq	r0, #24836	; 0x6104
    1adc:	13017c81 	movwne	r7, #7297	; 0x1c81
    1ae0:	01060e05 	tsteq	r6, r5, lsl #28
    1ae4:	21060505 	tstcs	r6, r5, lsl #10
    1ae8:	060e0513 			; <UNDEFINED> instruction: 0x060e0513
    1aec:	06050501 	streq	r0, [r5], -r1, lsl #10
    1af0:	052e1203 	streq	r1, [lr, #-515]!	; 0xfffffdfd
    1af4:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    1af8:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    1afc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    1b00:	05260609 	streq	r0, [r6, #-1545]!	; 0xfffff9f7
    1b04:	05010613 	streq	r0, [r1, #-1555]	; 0xfffff9ed
    1b08:	09052034 	stmdbeq	r5, {r2, r4, r5, sp}
    1b0c:	05153106 	ldreq	r3, [r5, #-262]	; 0xfffffefa
    1b10:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    1b14:	0526060d 	streq	r0, [r6, #-1549]!	; 0xfffff9f3
    1b18:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
    1b1c:	14030609 	strne	r0, [r3], #-1545	; 0xfffff9f7
    1b20:	06310520 	ldrteq	r0, [r1], -r0, lsr #10
    1b24:	06090501 	streq	r0, [r9], -r1, lsl #10
    1b28:	061a0532 			; <UNDEFINED> instruction: 0x061a0532
    1b2c:	06090501 	streq	r0, [r9], -r1, lsl #10
    1b30:	1b051321 	blne	1467bc <__RAM_SIZE+0x467bc>
    1b34:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1b38:	30052306 	andcc	r2, r5, r6, lsl #6
    1b3c:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1b40:	04313306 	ldrteq	r3, [r1], #-774	; 0xfffffcfa
    1b44:	03370502 	teqeq	r7, #8388608	; 0x800000
    1b48:	0501039e 	streq	r0, [r1, #-926]	; 0xfffffc62
    1b4c:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    1b50:	03060104 	movweq	r0, #24836	; 0x6104
    1b54:	05017cfd 	streq	r7, [r1, #-3325]	; 0xfffff303
    1b58:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    1b5c:	4203060d 	andmi	r0, r3, #13631488	; 0xd00000
    1b60:	0619052e 	ldreq	r0, [r9], -lr, lsr #10
    1b64:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1b68:	06370521 	ldrteq	r0, [r7], -r1, lsr #10
    1b6c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1b70:	061d0523 	ldreq	r0, [sp], -r3, lsr #10
    1b74:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1b78:	06390521 	ldrteq	r0, [r9], -r1, lsr #10
    1b7c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    1b80:	06390521 	ldrteq	r0, [r9], -r1, lsr #10
    1b84:	06090501 	streq	r0, [r9], -r1, lsl #10
    1b88:	052e2a03 	streq	r2, [lr, #-2563]!	; 0xfffff5fd
    1b8c:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    1b90:	09052019 	stmdbeq	r5, {r0, r3, r4, sp}
    1b94:	32053106 	andcc	r3, r5, #-2147483647	; 0x80000001
    1b98:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1b9c:	12052306 	andne	r2, r5, #402653184	; 0x18000000
    1ba0:	2c050106 	stfcss	f0, [r5], {6}
    1ba4:	06090520 	streq	r0, [r9], -r0, lsr #10
    1ba8:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    1bac:	03820337 	orreq	r0, r2, #-603979776	; 0xdc000000
    1bb0:	17050501 	strne	r0, [r5, -r1, lsl #10]
    1bb4:	30060105 	andcc	r0, r6, r5, lsl #2
    1bb8:	01000102 	tsteq	r0, r2, lsl #2
    1bbc:	0002f901 	andeq	pc, r2, r1, lsl #18
    1bc0:	dd000300 	stcle	3, cr0, [r0, #-0]
    1bc4:	02000000 	andeq	r0, r0, #0
    1bc8:	0d0efb01 	vstreq	d15, [lr, #-4]
    1bcc:	01010100 	mrseq	r0, (UNDEF: 17)
    1bd0:	00000001 	andeq	r0, r0, r1
    1bd4:	01000001 	tsteq	r0, r1
    1bd8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1bdc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1be0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1be4:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    1be8:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1bec:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1bf0:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 1b3c <_Min_Stack_Size+0xb3c>
    1bf4:	2f6e6f6d 	svccs	0x006e6f6d
    1bf8:	00637273 	rsbeq	r7, r3, r3, ror r2
    1bfc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1c00:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1c04:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1c08:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    1c0c:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1c10:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1c14:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    1c18:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    1c1c:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    1c20:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    1c24:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    1c28:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    1c2c:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    1c30:	2f2e2e2f 	svccs	0x002e2e2f
    1c34:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1b84 <_Min_Stack_Size+0xb84>
    1c38:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    1c3c:	742f736f 	strtvc	r7, [pc], #-879	; 1c44 <_Min_Stack_Size+0xc44>
    1c40:	61657268 	cmnvs	r5, r8, ror #4
    1c44:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    1c48:	6f6d6d6f 	svcvs	0x006d6d6f
    1c4c:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    1c50:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    1c54:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c58:	615f6574 	cmpvs	pc, r4, ror r5	; <UNPREDICTABLE>
    1c5c:	636f6c6c 	cmnvs	pc, #108, 24	; 0x6c00
    1c60:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
    1c64:	00010063 	andeq	r0, r1, r3, rrx
    1c68:	5f787400 	svcpl	0x00787400
    1c6c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    1c70:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    1c74:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1c78:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    1c7c:	0300682e 	movweq	r6, #2094	; 0x82e
    1c80:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1c84:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1c88:	2e646165 	powcssz	f6, f4, f5
    1c8c:	00030068 	andeq	r0, r3, r8, rrx
    1c90:	5f787400 	svcpl	0x00787400
    1c94:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
    1c98:	6f6f705f 	svcvs	0x006f705f
    1c9c:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    1ca0:	00000003 	andeq	r0, r0, r3
    1ca4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    1ca8:	001b1002 	andseq	r1, fp, r2
    1cac:	00d10310 	sbcseq	r0, r1, r0, lsl r3
    1cb0:	06010601 	streq	r0, [r1], -r1, lsl #12
    1cb4:	1313145a 	tstne	r3, #1509949440	; 0x5a000000
    1cb8:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    1cbc:	0e030505 	cfsh32eq	mvfx0, mvfx3, #5
    1cc0:	06390501 	ldrteq	r0, [r9], -r1, lsl #10
    1cc4:	20110501 	andscs	r0, r1, r1, lsl #10
    1cc8:	31060505 	tstcc	r6, r5, lsl #10
    1ccc:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    1cd0:	0103e503 	tsteq	r3, r3, lsl #10
    1cd4:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    1cd8:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    1cdc:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    1ce0:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    1ce4:	01063016 	tsteq	r6, r6, lsl r0
    1ce8:	01210306 			; <UNDEFINED> instruction: 0x01210306
    1cec:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    1cf0:	93030601 	movwls	r0, #13825	; 0x3601
    1cf4:	2006017c 	andcs	r0, r6, ip, ror r1
    1cf8:	202e0306 	eorcs	r0, lr, r6, lsl #6
    1cfc:	16090515 			; <UNDEFINED> instruction: 0x16090515
    1d00:	01062805 	tsteq	r6, r5, lsl #16
    1d04:	23060905 	movwcs	r0, #26885	; 0x6905
    1d08:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    1d0c:	0103a103 	tsteq	r3, r3, lsl #2
    1d10:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    1d14:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    1d18:	de030609 	cfmadd32le	mvax0, mvfx0, mvfx3, mvfx9
    1d1c:	1505017c 	strne	r0, [r5, #-380]	; 0xfffffe84
    1d20:	09050106 	stmdbeq	r5, {r1, r2, r8}
    1d24:	02045006 	andeq	r5, r4, #6
    1d28:	a0033705 	andge	r3, r3, r5, lsl #14
    1d2c:	01050103 	tsteq	r5, r3, lsl #2
    1d30:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    1d34:	5c033705 	stcpl	7, cr3, [r3], {5}
    1d38:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    1d3c:	30160505 	andscc	r0, r6, r5, lsl #10
    1d40:	03060106 	movweq	r0, #24838	; 0x6106
    1d44:	06220121 	strteq	r0, [r2], -r1, lsr #2
    1d48:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    1d4c:	d8030609 	stmdale	r3, {r0, r3, r9, sl}
    1d50:	0c05017c 	stfeqs	f0, [r5], {124}	; 0x7c
    1d54:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    1d58:	200a0306 	andcs	r0, sl, r6, lsl #6
    1d5c:	01061a05 	tsteq	r6, r5, lsl #20
    1d60:	05201005 	streq	r1, [r0, #-5]!
    1d64:	0b030605 	bleq	c3580 <SYSTICK_CYCLES+0x9a541>
    1d68:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    1d6c:	06050501 	streq	r0, [r5], -r1, lsl #10
    1d70:	06080531 			; <UNDEFINED> instruction: 0x06080531
    1d74:	06090501 	streq	r0, [r9], -r1, lsl #10
    1d78:	04202603 	strteq	r2, [r0], #-1539	; 0xfffff9fd
    1d7c:	03370502 	teqeq	r7, #8388608	; 0x800000
    1d80:	050102d6 	streq	r0, [r1, #-726]	; 0xfffffd2a
    1d84:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    1d88:	09050104 	stmdbeq	r5, {r2, r8}
    1d8c:	7da80306 	stcvc	3, cr0, [r8, #24]!
    1d90:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    1d94:	03010501 	movweq	r0, #5377	; 0x1501
    1d98:	052001a3 	streq	r0, [r0, #-419]!	; 0xfffffe5d
    1d9c:	e5030609 	str	r0, [r3, #-1545]	; 0xfffff9f7
    1da0:	0c052e7e 	stceq	14, cr2, [r5], {126}	; 0x7e
    1da4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    1da8:	2c054006 	stccs	0, cr4, [r5], {6}
    1dac:	10050106 	andne	r0, r5, r6, lsl #2
    1db0:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    1db4:	05201803 	streq	r1, [r0, #-2051]!	; 0xfffff7fd
    1db8:	05010639 	streq	r0, [r1, #-1593]	; 0xfffff9c7
    1dbc:	05320611 	ldreq	r0, [r2, #-1553]!	; 0xfffff9ef
    1dc0:	0501063f 	streq	r0, [r1, #-1599]	; 0xfffff9c1
    1dc4:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    1dc8:	05010641 	streq	r0, [r1, #-1601]	; 0xfffff9bf
    1dcc:	05310611 	ldreq	r0, [r1, #-1553]!	; 0xfffff9ef
    1dd0:	05010636 	streq	r0, [r1, #-1590]	; 0xfffff9ca
    1dd4:	0a030611 	beq	c3620 <SYSTICK_CYCLES+0x9a5e1>
    1dd8:	06210520 	strteq	r0, [r1], -r0, lsr #10
    1ddc:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    1de0:	063b0523 	ldrteq	r0, [fp], -r3, lsr #10
    1de4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    1de8:	06140531 			; <UNDEFINED> instruction: 0x06140531
    1dec:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    1df0:	063e0525 	ldrteq	r0, [lr], -r5, lsr #10
    1df4:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    1df8:	063c0521 	ldrteq	r0, [ip], -r1, lsr #10
    1dfc:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    1e00:	06400521 	strbeq	r0, [r0], -r1, lsr #10
    1e04:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    1e08:	05200f03 	streq	r0, [r0, #-3843]!	; 0xfffff0fd
    1e0c:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    1e10:	06330611 			; <UNDEFINED> instruction: 0x06330611
    1e14:	0431062e 	ldrteq	r0, [r1], #-1582	; 0xfffff9d2
    1e18:	03370502 	teqeq	r7, #8388608	; 0x800000
    1e1c:	050101f7 	streq	r0, [r1, #-503]	; 0xfffffe09
    1e20:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    1e24:	11050104 	tstne	r5, r4, lsl #2
    1e28:	7ebb0306 	cdpvc	3, 11, cr0, cr11, cr6, {0}
    1e2c:	06180501 	ldreq	r0, [r8], -r1, lsl #10
    1e30:	11052e01 	tstne	r5, r1, lsl #28
    1e34:	7efd0306 	cdpvc	3, 15, cr0, cr13, cr6, {0}
    1e38:	02041520 	andeq	r1, r4, #32, 10	; 0x8000000
    1e3c:	c0033705 	andgt	r3, r3, r5, lsl #14
    1e40:	05050102 	streq	r0, [r5, #-258]	; 0xfffffefe
    1e44:	05010417 	streq	r0, [r1, #-1047]	; 0xfffffbe9
    1e48:	b8030618 	stmdalt	r3, {r3, r4, r9, sl}
    1e4c:	02042e7d 	andeq	r2, r4, #2000	; 0x7d0
    1e50:	ca030105 	bgt	c226c <SYSTICK_CYCLES+0x9922d>
    1e54:	04202002 	strteq	r2, [r0], #-2
    1e58:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    1e5c:	017df103 	cmneq	sp, r3, lsl #2	; <UNPREDICTABLE>
    1e60:	01062105 	tsteq	r6, r5, lsl #2
    1e64:	21061505 	tstcs	r6, r5, lsl #10
    1e68:	01063c05 	tsteq	r6, r5, lsl #24
    1e6c:	21061505 	tstcs	r6, r5, lsl #10
    1e70:	01062505 	tsteq	r6, r5, lsl #10
    1e74:	21061505 	tstcs	r6, r5, lsl #10
    1e78:	01064005 	tsteq	r6, r5
    1e7c:	21061505 	tstcs	r6, r5, lsl #10
    1e80:	01064105 	tsteq	r6, r5, lsl #2
    1e84:	21061505 	tstcs	r6, r5, lsl #10
    1e88:	01064105 	tsteq	r6, r5, lsl #2
    1e8c:	03060d05 	movweq	r0, #27909	; 0x6d05
    1e90:	042e00ca 	strteq	r0, [lr], #-202	; 0xffffff36
    1e94:	03370502 	teqeq	r7, #8388608	; 0x800000
    1e98:	050101b9 	streq	r0, [r1, #-441]	; 0xfffffe47
    1e9c:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    1ea0:	0d050104 	stfeqs	f0, [r5, #-16]
    1ea4:	7ec50306 	cdpvc	3, 12, cr0, cr5, cr6, {0}
    1ea8:	06140501 	ldreq	r0, [r4], -r1, lsl #10
    1eac:	06050501 	streq	r0, [r5], -r1, lsl #10
    1eb0:	060b0525 	streq	r0, [fp], -r5, lsr #10
    1eb4:	00070201 	andeq	r0, r7, r1, lsl #4
    1eb8:	01760101 	cmneq	r6, r1, lsl #2
    1ebc:	00030000 	andeq	r0, r3, r0
    1ec0:	000000cf 	andeq	r0, r0, pc, asr #1
    1ec4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    1ec8:	0101000d 	tsteq	r1, sp
    1ecc:	00000101 	andeq	r0, r0, r1, lsl #2
    1ed0:	00000100 	andeq	r0, r0, r0, lsl #2
    1ed4:	2f2e2e01 	svccs	0x002e2e01
    1ed8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1edc:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1ee0:	6f747262 	svcvs	0x00747262
    1ee4:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1ee8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1eec:	6f632f78 	svcvs	0x00632f78
    1ef0:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    1ef4:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1ef8:	2f2e2e00 	svccs	0x002e2e00
    1efc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1f00:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1f04:	6f747262 	svcvs	0x00747262
    1f08:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1f0c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1f10:	6f702f78 	svcvs	0x00702f78
    1f14:	2f737472 	svccs	0x00737472
    1f18:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    1f1c:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 1d90 <_Min_Stack_Size+0xd90>
    1f20:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    1f24:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
    1f28:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    1f2c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1f30:	2f2e2e2f 	svccs	0x002e2e2f
    1f34:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1f38:	2f736f74 	svccs	0x00736f74
    1f3c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1f40:	2f786461 	svccs	0x00786461
    1f44:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1f48:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    1f4c:	0000636e 	andeq	r6, r0, lr, ror #6
    1f50:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
    1f54:	5f657479 	svcpl	0x00657479
    1f58:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 1da0 <_Min_Stack_Size+0xda0>
    1f5c:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
    1f60:	70756e61 	rsbsvc	r6, r5, r1, ror #28
    1f64:	0100632e 	tsteq	r0, lr, lsr #6
    1f68:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    1f6c:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    1f70:	00682e74 	rsbeq	r2, r8, r4, ror lr
    1f74:	74000002 	strvc	r0, [r0], #-2
    1f78:	70615f78 	rsbvc	r5, r1, r8, ror pc
    1f7c:	00682e69 	rsbeq	r2, r8, r9, ror #28
    1f80:	74000003 	strvc	r0, [r0], #-3
    1f84:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1f88:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1f8c:	0300682e 	movweq	r6, #2094	; 0x82e
    1f90:	05000000 	streq	r0, [r0, #-0]
    1f94:	02050001 	andeq	r0, r5, #1
    1f98:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
    1f9c:	0100cd03 	tsteq	r0, r3, lsl #26
    1fa0:	26060106 	strcs	r0, [r6], -r6, lsl #2
    1fa4:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    1fa8:	01210319 			; <UNDEFINED> instruction: 0x01210319
    1fac:	01062205 	tsteq	r6, r5, lsl #4
    1fb0:	24061905 	strcs	r1, [r6], #-2309	; 0xfffff6fb
    1fb4:	01064105 	tsteq	r6, r5, lsl #2
    1fb8:	31061905 	tstcc	r6, r5, lsl #18
    1fbc:	01062205 	tsteq	r6, r5, lsl #4
    1fc0:	05204105 	streq	r4, [r0, #-261]!	; 0xfffffefb
    1fc4:	17310619 			; <UNDEFINED> instruction: 0x17310619
    1fc8:	01061c05 	tsteq	r6, r5, lsl #24
    1fcc:	26061d05 	strcs	r1, [r6], -r5, lsl #26
    1fd0:	01064605 	tsteq	r6, r5, lsl #12
    1fd4:	03061905 	movweq	r1, #26885	; 0x6905
    1fd8:	28052018 	stmdacs	r5, {r3, r4, sp}
    1fdc:	1c050106 	stfnes	f0, [r5], {6}
    1fe0:	03010520 	movweq	r0, #5408	; 0x1520
    1fe4:	1d052e2f 	stcne	14, cr2, [r5, #-188]	; 0xffffff44
    1fe8:	20410306 	subcs	r0, r1, r6, lsl #6
    1fec:	01062905 	tsteq	r6, r5, lsl #18
    1ff0:	21061d05 	tstcs	r6, r5, lsl #26
    1ff4:	01062d05 	tsteq	r6, r5, lsl #26
    1ff8:	21061d05 	tstcs	r6, r5, lsl #26
    1ffc:	01064905 	tsteq	r6, r5, lsl #18
    2000:	21061d05 	tstcs	r6, r5, lsl #26
    2004:	01064905 	tsteq	r6, r5, lsl #18
    2008:	23061d05 	movwcs	r1, #27909	; 0x6d05
    200c:	01062a05 	tsteq	r6, r5, lsl #20
    2010:	05202005 	streq	r2, [r0, #-5]!
    2014:	05320621 	ldreq	r0, [r2, #-1569]!	; 0xfffff9df
    2018:	0501064a 	streq	r0, [r1, #-1610]	; 0xfffff9b6
    201c:	1603061d 			; <UNDEFINED> instruction: 0x1603061d
    2020:	0644052e 	strbeq	r0, [r4], -lr, lsr #10
    2024:	061d0501 	ldreq	r0, [sp], -r1, lsl #10
    2028:	06010541 	streq	r0, [r1], -r1, asr #10
    202c:	022e1a03 	eoreq	r1, lr, #12288	; 0x3000
    2030:	01010001 	tsteq	r1, r1
    2034:	00000239 	andeq	r0, r0, r9, lsr r2
    2038:	00df0003 	sbcseq	r0, pc, r3
    203c:	01020000 	mrseq	r0, (UNDEF: 2)
    2040:	000d0efb 	strdeq	r0, [sp], -fp
    2044:	01010101 	tsteq	r1, r1, lsl #2
    2048:	01000000 	mrseq	r0, (UNDEF: 0)
    204c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    2050:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2054:	2f2e2e2f 	svccs	0x002e2e2f
    2058:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    205c:	2f736f74 	svccs	0x00736f74
    2060:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2064:	2f786461 	svccs	0x00786461
    2068:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    206c:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    2070:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    2074:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2078:	2f2e2e2f 	svccs	0x002e2e2f
    207c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2080:	2f736f74 	svccs	0x00736f74
    2084:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2088:	2f786461 	svccs	0x00786461
    208c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2090:	6f632f73 	svcvs	0x00632f73
    2094:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    2098:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    209c:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    20a0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    20a4:	2f2e2e00 	svccs	0x002e2e00
    20a8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    20ac:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    20b0:	6f747262 	svcvs	0x00747262
    20b4:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    20b8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    20bc:	6f632f78 	svcvs	0x00632f78
    20c0:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    20c4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    20c8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    20cc:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    20d0:	6f705f65 	svcvs	0x00705f65
    20d4:	635f6c6f 	cmpvs	pc, #28416	; 0x6f00
    20d8:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    20dc:	00632e65 	rsbeq	r2, r3, r5, ror #28
    20e0:	74000001 	strvc	r0, [r0], #-1
    20e4:	6f705f78 	svcvs	0x00705f78
    20e8:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    20ec:	00000200 	andeq	r0, r0, r0, lsl #4
    20f0:	615f7874 	cmpvs	pc, r4, ror r8	; <UNPREDICTABLE>
    20f4:	682e6970 	stmdavs	lr!, {r4, r5, r6, r8, fp, sp, lr}
    20f8:	00000300 	andeq	r0, r0, r0, lsl #6
    20fc:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
    2100:	5f657479 	svcpl	0x00657479
    2104:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 1f4c <_Min_Stack_Size+0xf4c>
    2108:	0300682e 	movweq	r6, #2094	; 0x82e
    210c:	623c0000 	eorsvs	r0, ip, #0
    2110:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
    2114:	3e6e692d 	vmulcc.f16	s13, s28, s27	; <UNPREDICTABLE>
    2118:	00000000 	andeq	r0, r0, r0
    211c:	00010500 	andeq	r0, r1, r0, lsl #10
    2120:	1bf40205 	blne	ffd0293c <__RAM_segment_used_end__+0xc7c0293c>
    2124:	cb031000 	blgt	c612c <SYSTICK_CYCLES+0x9d0ed>
    2128:	01060100 	mrseq	r0, (UNDEF: 22)
    212c:	13145a06 	tstne	r4, #24576	; 0x6000
    2130:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    2134:	06160505 	ldreq	r0, [r6], -r5, lsl #10
    2138:	32062020 	andcc	r2, r6, #32
    213c:	01060f05 	tsteq	r6, r5, lsl #30
    2140:	31060505 	tstcc	r6, r5, lsl #10
    2144:	01062305 	tsteq	r6, r5, lsl #6
    2148:	23060505 	movwcs	r0, #25861	; 0x6505
    214c:	01062405 	tsteq	r6, r5, lsl #8
    2150:	21060505 	tstcs	r6, r5, lsl #10
    2154:	01062305 	tsteq	r6, r5, lsl #6
    2158:	23060505 	movwcs	r0, #25861	; 0x6505
    215c:	01062305 	tsteq	r6, r5, lsl #6
    2160:	21060505 	tstcs	r6, r5, lsl #10
    2164:	01062505 	tsteq	r6, r5, lsl #10
    2168:	26060505 	strcs	r0, [r6], -r5, lsl #10
    216c:	01063605 	tsteq	r6, r5, lsl #12
    2170:	052e2805 	streq	r2, [lr, #-2053]!	; 0xfffff7fb
    2174:	05210605 	streq	r0, [r1, #-1541]!	; 0xfffff9fb
    2178:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    217c:	13350605 	teqne	r5, #5242880	; 0x500000
    2180:	01060f05 	tsteq	r6, r5, lsl #30
    2184:	23060505 	movwcs	r0, #25861	; 0x6505
    2188:	05131315 	ldreq	r1, [r3, #-789]	; 0xfffffceb
    218c:	05010619 	streq	r0, [r1, #-1561]	; 0xfffff9e7
    2190:	05300605 	ldreq	r0, [r0, #-1541]!	; 0xfffff9fb
    2194:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    2198:	132f0605 			; <UNDEFINED> instruction: 0x132f0605
    219c:	01061905 	tsteq	r6, r5, lsl #18
    21a0:	31060505 	tstcc	r6, r5, lsl #10
    21a4:	19051313 	stmdbne	r5, {r0, r1, r4, r8, r9, ip}
    21a8:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    21ac:	13132106 	tstne	r3, #-2147483647	; 0x80000001
    21b0:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
    21b4:	06050501 	streq	r0, [r5], -r1, lsl #10
    21b8:	06240531 			; <UNDEFINED> instruction: 0x06240531
    21bc:	06050501 	streq	r0, [r5], -r1, lsl #10
    21c0:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    21c4:	03c00337 	biceq	r0, r0, #-603979776	; 0xdc000000
    21c8:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    21cc:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    21d0:	015c0337 	cmpeq	ip, r7, lsr r3
    21d4:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    21d8:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    21dc:	21030601 	tstcs	r3, r1, lsl #12
    21e0:	01062201 	tsteq	r6, r1, lsl #4
    21e4:	03060104 	movweq	r0, #24836	; 0x6104
    21e8:	05017cb8 	streq	r7, [r1, #-3256]	; 0xfffff348
    21ec:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    21f0:	05320605 	ldreq	r0, [r2, #-1541]!	; 0xfffff9fb
    21f4:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    21f8:	09052e08 	stmdbeq	r5, {r3, r9, sl, fp, sp}
    21fc:	23052406 	movwcs	r2, #21510	; 0x5406
    2200:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2204:	2f052f06 	svccs	0x00052f06
    2208:	09050106 	stmdbeq	r5, {r1, r2, r8}
    220c:	33052106 	movwcc	r2, #20742	; 0x5106
    2210:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2214:	20130306 	andscs	r0, r3, r6, lsl #6
    2218:	01062005 	tsteq	r6, r5
    221c:	03060505 	movweq	r0, #25861	; 0x6505
    2220:	02043c0f 	andeq	r3, r4, #3840	; 0xf00
    2224:	88033705 	stmdahi	r3, {r0, r2, r8, r9, sl, ip, sp}
    2228:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    222c:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    2230:	f6030601 			; <UNDEFINED> instruction: 0xf6030601
    2234:	0105017c 	tsteq	r5, ip, ror r1
    2238:	09051306 	stmdbeq	r5, {r1, r2, r8, r9, ip}
    223c:	2e600306 	cdpcs	3, 6, cr0, cr0, cr6, {0}
    2240:	01061305 	tsteq	r6, r5, lsl #6
    2244:	2f060905 	svccs	0x00060905
    2248:	01061705 	tsteq	r6, r5, lsl #14
    224c:	23060905 	movwcs	r0, #26885	; 0x6905
    2250:	01063405 	tsteq	r6, r5, lsl #8
    2254:	21060905 	tstcs	r6, r5, lsl #18
    2258:	01063405 	tsteq	r6, r5, lsl #8
    225c:	23060905 	movwcs	r0, #26885	; 0x6905
    2260:	01063305 	tsteq	r6, r5, lsl #6
    2264:	21060905 	tstcs	r6, r5, lsl #18
    2268:	01062f05 	tsteq	r6, r5, lsl #30
    226c:	01000a02 	tsteq	r0, r2, lsl #20
    2270:	00038d01 	andeq	r8, r3, r1, lsl #26
    2274:	ce000300 	cdpgt	3, 0, cr0, cr0, cr0, {0}
    2278:	02000000 	andeq	r0, r0, #0
    227c:	0d0efb01 	vstreq	d15, [lr, #-4]
    2280:	01010100 	mrseq	r0, (UNDEF: 17)
    2284:	00000001 	andeq	r0, r0, r1
    2288:	01000001 	tsteq	r0, r1
    228c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2290:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2294:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2298:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    229c:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    22a0:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    22a4:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 21f0 <_Min_Stack_Size+0x11f0>
    22a8:	2f6e6f6d 	svccs	0x006e6f6d
    22ac:	00637273 	rsbeq	r7, r3, r3, ror r2
    22b0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    22b4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    22b8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    22bc:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    22c0:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    22c4:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    22c8:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    22cc:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    22d0:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    22d4:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    22d8:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    22dc:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    22e0:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    22e4:	2f2e2e2f 	svccs	0x002e2e2f
    22e8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2238 <_Min_Stack_Size+0x1238>
    22ec:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    22f0:	742f736f 	strtvc	r7, [pc], #-879	; 22f8 <_Min_Stack_Size+0x12f8>
    22f4:	61657268 	cmnvs	r5, r8, ror #4
    22f8:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    22fc:	6f6d6d6f 	svcvs	0x006d6d6f
    2300:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    2304:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    2308:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    230c:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    2310:	5f6c6f6f 	svcpl	0x006c6f6f
    2314:	72616573 	rsbvc	r6, r1, #482344960	; 0x1cc00000
    2318:	632e6863 			; <UNDEFINED> instruction: 0x632e6863
    231c:	00000100 	andeq	r0, r0, r0, lsl #2
    2320:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    2324:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    2328:	00020068 	andeq	r0, r2, r8, rrx
    232c:	5f787400 	svcpl	0x00787400
    2330:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    2334:	00030068 	andeq	r0, r3, r8, rrx
    2338:	5f787400 	svcpl	0x00787400
    233c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2340:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    2344:	00000300 	andeq	r0, r0, r0, lsl #6
    2348:	00010500 	andeq	r0, r1, r0, lsl #10
    234c:	1c7c0205 	lfmne	f0, 2, [ip], #-20	; 0xffffffec
    2350:	d6031000 	strle	r1, [r3], -r0
    2354:	01060100 	mrseq	r0, (UNDEF: 22)
    2358:	13142206 	tstne	r4, #1610612736	; 0x60000000
    235c:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    2360:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    2364:	16050513 			; <UNDEFINED> instruction: 0x16050513
    2368:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    236c:	0103e903 	tsteq	r3, r3, lsl #18
    2370:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    2374:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    2378:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    237c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2380:	01063016 	tsteq	r6, r6, lsl r0
    2384:	01210306 			; <UNDEFINED> instruction: 0x01210306
    2388:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    238c:	90030601 	andls	r0, r3, r1, lsl #12
    2390:	2c05017c 	stfcss	f0, [r5], {124}	; 0x7c
    2394:	53050106 	movwpl	r0, #20742	; 0x5106
    2398:	206d0520 	rsbcs	r0, sp, r0, lsr #10
    239c:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
    23a0:	052f0605 	streq	r0, [pc, #-1541]!	; 1da3 <_Min_Stack_Size+0xda3>
    23a4:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    23a8:	0d030609 	stceq	6, cr0, [r3, #-36]	; 0xffffffdc
    23ac:	0620062e 	strteq	r0, [r0], -lr, lsr #12
    23b0:	06280523 	strteq	r0, [r8], -r3, lsr #10
    23b4:	06090501 	streq	r0, [r9], -r1, lsl #10
    23b8:	06150523 	ldreq	r0, [r5], -r3, lsr #10
    23bc:	06090501 	streq	r0, [r9], -r1, lsl #10
    23c0:	06180521 	ldreq	r0, [r8], -r1, lsr #10
    23c4:	06090501 	streq	r0, [r9], -r1, lsl #10
    23c8:	06110521 	ldreq	r0, [r1], -r1, lsr #10
    23cc:	05015e03 	streq	r5, [r1, #-3587]	; 0xfffff1fd
    23d0:	11030609 	tstne	r3, r9, lsl #12
    23d4:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    23d8:	03d70337 	bicseq	r0, r7, #-603979776	; 0xdc000000
    23dc:	17050501 	strne	r0, [r5, -r1, lsl #10]
    23e0:	01042e06 	tsteq	r4, r6, lsl #28
    23e4:	03060905 	movweq	r0, #26885	; 0x6905
    23e8:	05017ca7 	streq	r7, [r1, #-3239]	; 0xfffff359
    23ec:	20010615 	andcs	r0, r1, r5, lsl r6
    23f0:	03061105 	movweq	r1, #24837	; 0x6105
    23f4:	14052023 	strne	r2, [r5], #-35	; 0xffffffdd
    23f8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    23fc:	33053f06 	movwcc	r3, #24326	; 0x5f06
    2400:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    2404:	2c052406 	cfstrscs	mvf2, [r5], {6}
    2408:	11050106 	tstne	r5, r6, lsl #2
    240c:	05133406 	ldreq	r3, [r3, #-1030]	; 0xfffffbfa
    2410:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    2414:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    2418:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    241c:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    2420:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    2424:	05240611 	streq	r0, [r4, #-1553]!	; 0xfffff9ef
    2428:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    242c:	09030615 	stmdbeq	r3, {r0, r2, r4, r9, sl}
    2430:	1313162e 	tstne	r3, #48234496	; 0x2e00000
    2434:	01061805 	tsteq	r6, r5, lsl #16
    2438:	03061905 	movweq	r1, #26885	; 0x6905
    243c:	05134a20 	ldreq	r4, [r3, #-2592]	; 0xfffff5e0
    2440:	05010625 	streq	r0, [r1, #-1573]	; 0xfffff9db
    2444:	05230619 	streq	r0, [r3, #-1561]!	; 0xfffff9e7
    2448:	0501061c 	streq	r0, [r1, #-1564]	; 0xfffff9e4
    244c:	0522061d 	streq	r0, [r2, #-1565]!	; 0xfffff9e3
    2450:	2001062b 	andcs	r0, r1, fp, lsr #12
    2454:	03061905 	movweq	r1, #26885	; 0x6905
    2458:	0513205f 	ldreq	r2, [r3, #-95]	; 0xffffffa1
    245c:	05010631 	streq	r0, [r1, #-1585]	; 0xfffff9cf
    2460:	1905202e 	stmdbne	r5, {r1, r2, r3, r5, sp}
    2464:	22052506 	andcs	r2, r5, #25165824	; 0x1800000
    2468:	3b050106 	blcc	142888 <__RAM_SIZE+0x42888>
    246c:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    2470:	052e0c03 	streq	r0, [lr, #-3075]!	; 0xfffff3fd
    2474:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    2478:	1d05201c 	stcne	0, cr2, [r5, #-112]	; 0xffffff90
    247c:	3d053106 	stfccs	f3, [r5, #-24]	; 0xffffffe8
    2480:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2484:	2e2a0306 	cdpcs	3, 2, cr0, cr10, cr6, {0}
    2488:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    248c:	0102c803 	tsteq	r2, r3, lsl #16
    2490:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    2494:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    2498:	b603060d 	strlt	r0, [r3], -sp, lsl #12
    249c:	0204017d 	andeq	r0, r4, #1073741855	; 0x4000001f
    24a0:	ce033705 	cdpgt	7, 0, cr3, cr3, cr5, {0}
    24a4:	01050102 	tsteq	r5, r2, lsl #2
    24a8:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    24ac:	5c033705 	stcpl	7, cr3, [r3], {5}
    24b0:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    24b4:	30160505 	andscc	r0, r6, r5, lsl #10
    24b8:	03060106 	movweq	r0, #24838	; 0x6106
    24bc:	06220121 	strteq	r0, [r2], -r1, lsr #2
    24c0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    24c4:	aa03060d 	bge	c3d00 <SYSTICK_CYCLES+0x9acc1>
    24c8:	1a05017d 	bne	142ac4 <__RAM_SIZE+0x42ac4>
    24cc:	10050106 	andne	r0, r5, r6, lsl #2
    24d0:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    24d4:	061d0533 			; <UNDEFINED> instruction: 0x061d0533
    24d8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    24dc:	062d0521 	strteq	r0, [sp], -r1, lsr #10
    24e0:	20200501 	eorcs	r0, r0, r1, lsl #10
    24e4:	23061105 	movwcs	r1, #24837	; 0x6105
    24e8:	01063005 	tsteq	r6, r5
    24ec:	22061005 	andcs	r1, r6, #5
    24f0:	01060905 	tsteq	r6, r5, lsl #18
    24f4:	7ef20306 	cdpvc	3, 15, cr0, cr2, cr6, {0}
    24f8:	030d0520 	movweq	r0, #54560	; 0xd520
    24fc:	1313010e 	tstne	r3, #-2147483645	; 0x80000003
    2500:	01061005 	tsteq	r6, r5
    2504:	03061105 	movweq	r1, #24837	; 0x6105
    2508:	134a00e1 	movtne	r0, #41185	; 0xa0e1
    250c:	01061d05 	tsteq	r6, r5, lsl #26
    2510:	24060d05 	strcs	r0, [r6], #-3333	; 0xfffff2fb
    2514:	01061005 	tsteq	r6, r5
    2518:	31061105 	tstcc	r6, r5, lsl #2
    251c:	01061f05 	tsteq	r6, r5, lsl #30
    2520:	03210520 			; <UNDEFINED> instruction: 0x03210520
    2524:	05207fad 	streq	r7, [r0, #-4013]!	; 0xfffff053
    2528:	ec030609 	stc	6, cr0, [r3], {9}
    252c:	0c052000 	stceq	0, cr2, [r5], {-0}
    2530:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2534:	22052406 	andcs	r2, r5, #100663296	; 0x6000000
    2538:	10050106 	andne	r0, r5, r6, lsl #2
    253c:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    2540:	061d0532 			; <UNDEFINED> instruction: 0x061d0532
    2544:	2e1a0501 	cfmul32cs	mvfx0, mvfx10, mvfx1
    2548:	23061105 	movwcs	r1, #24837	; 0x6105
    254c:	29051313 	stmdbcs	r5, {r0, r1, r4, r8, r9, ip}
    2550:	26050106 	strcs	r0, [r5], -r6, lsl #2
    2554:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    2558:	05131321 	ldreq	r1, [r3, #-801]	; 0xfffffcdf
    255c:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    2560:	05310611 	ldreq	r0, [r1, #-1553]!	; 0xfffff9ef
    2564:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    2568:	11052033 	tstne	r5, r3, lsr r0
    256c:	26053106 	strcs	r3, [r5], -r6, lsl #2
    2570:	11050106 	tstne	r5, r6, lsl #2
    2574:	21052306 	tstcs	r5, r6, lsl #6
    2578:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    257c:	200d0306 	andcs	r0, sp, r6, lsl #6
    2580:	22051313 	andcs	r1, r5, #1275068416	; 0x4c000000
    2584:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    2588:	3d052306 	stccc	3, cr2, [r5, #-24]	; 0xffffffe8
    258c:	57050106 	strpl	r0, [r5, -r6, lsl #2]
    2590:	206a0520 	rsbcs	r0, sl, r0, lsr #10
    2594:	05203005 	streq	r3, [r0, #-5]!
    2598:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    259c:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    25a0:	0d052010 	stceq	0, cr2, [r5, #-64]	; 0xffffffc0
    25a4:	2e090306 	cdpcs	3, 0, cr0, cr9, cr6, {0}
    25a8:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    25ac:	0101fb03 	tsteq	r1, r3, lsl #22	; <UNPREDICTABLE>
    25b0:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    25b4:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    25b8:	8303060d 	movwhi	r0, #13837	; 0x360d
    25bc:	1905017e 	stmdbne	r5, {r1, r2, r3, r4, r5, r6, r8}
    25c0:	01050106 	tsteq	r5, r6, lsl #2
    25c4:	052e0f03 	streq	r0, [lr, #-3843]!	; 0xfffff0fd
    25c8:	69030611 	stmdbvs	r3, {r0, r4, r9, sl}
    25cc:	34051320 	strcc	r1, [r5], #-800	; 0xfffffce0
    25d0:	31050106 	tstcc	r5, r6, lsl #2
    25d4:	060d0520 	streq	r0, [sp], -r0, lsr #10
    25d8:	042e0d03 	strteq	r0, [lr], #-3331	; 0xfffff2fd
    25dc:	03370502 	teqeq	r7, #8388608	; 0x800000
    25e0:	050101f2 	streq	r0, [r1, #-498]	; 0xfffffe0e
    25e4:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    25e8:	0d050104 	stfeqs	f0, [r5, #-16]
    25ec:	7e8c0306 	cdpvc	3, 8, cr0, cr12, cr6, {0}
    25f0:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    25f4:	06050501 	streq	r0, [r5], -r1, lsl #10
    25f8:	060b0525 	streq	r0, [fp], -r5, lsr #10
    25fc:	00060201 	andeq	r0, r6, r1, lsl #4
    2600:	017f0101 	cmneq	pc, r1, lsl #2
    2604:	00030000 	andeq	r0, r3, r0
    2608:	0000015b 	andeq	r0, r0, fp, asr r1
    260c:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2610:	0101000d 	tsteq	r1, sp
    2614:	00000101 	andeq	r0, r0, r1, lsl #2
    2618:	00000100 	andeq	r0, r0, r0, lsl #2
    261c:	2f2e2e01 	svccs	0x002e2e01
    2620:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2624:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2628:	6f747262 	svcvs	0x00747262
    262c:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2630:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2634:	6f632f78 	svcvs	0x00632f78
    2638:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    263c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2640:	2f2e2e00 	svccs	0x002e2e00
    2644:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2648:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    264c:	6f747262 	svcvs	0x00747262
    2650:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2654:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2658:	6f702f78 	svcvs	0x00702f78
    265c:	2f737472 	svccs	0x00737472
    2660:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    2664:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 24d8 <_Min_Stack_Size+0x14d8>
    2668:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    266c:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
    2670:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    2674:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2678:	2f2e2e2f 	svccs	0x002e2e2f
    267c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2680:	2f736f74 	svccs	0x00736f74
    2684:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2688:	2f786461 	svccs	0x00786461
    268c:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    2690:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    2694:	0000636e 	andeq	r6, r0, lr, ror #6
    2698:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    269c:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    26a0:	7a696c61 	bvc	1a5d82c <__RAM_SIZE+0x195d82c>
    26a4:	69685f65 	stmdbvs	r8!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    26a8:	6c5f6867 	mrrcvs	8, 6, r6, pc, cr7	; <UNPREDICTABLE>
    26ac:	6c657665 	stclvs	6, cr7, [r5], #-404	; 0xfffffe6c
    26b0:	0100632e 	tsteq	r0, lr, lsr #6
    26b4:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    26b8:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    26bc:	00682e74 	rsbeq	r2, r8, r4, ror lr
    26c0:	74000002 	strvc	r0, [r0], #-2
    26c4:	70615f78 	rsbvc	r5, r1, r8, ror pc
    26c8:	00682e69 	rsbeq	r2, r8, r9, ror #28
    26cc:	74000003 	strvc	r0, [r0], #-3
    26d0:	6e695f78 	mcrvs	15, 3, r5, cr9, cr8, {3}
    26d4:	61697469 	cmnvs	r9, r9, ror #8
    26d8:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    26dc:	0300682e 	movweq	r6, #2094	; 0x82e
    26e0:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    26e4:	6d65735f 	stclvs	3, cr7, [r5, #-380]!	; 0xfffffe84
    26e8:	6f687061 	svcvs	0x00687061
    26ec:	682e6572 	stmdavs	lr!, {r1, r4, r5, r6, r8, sl, sp, lr}
    26f0:	00000300 	andeq	r0, r0, r0, lsl #6
    26f4:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
    26f8:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    26fc:	0300682e 	movweq	r6, #2094	; 0x82e
    2700:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2704:	6576655f 	ldrbvs	r6, [r6, #-1375]!	; 0xfffffaa1
    2708:	665f746e 	ldrbvs	r7, [pc], -lr, ror #8
    270c:	7367616c 	cmnvc	r7, #108, 2
    2710:	0300682e 	movweq	r6, #2094	; 0x82e
    2714:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2718:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
    271c:	682e7865 	stmdavs	lr!, {r0, r2, r5, r6, fp, ip, sp, lr}
    2720:	00000300 	andeq	r0, r0, r0, lsl #6
    2724:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
    2728:	6b636f6c 	blvs	18de4e0 <__RAM_SIZE+0x17de4e0>
    272c:	6f6f705f 	svcvs	0x006f705f
    2730:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    2734:	74000003 	strvc	r0, [r0], #-3
    2738:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    273c:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    2740:	2e6c6f6f 	cdpcs	15, 6, cr6, cr12, cr15, {3}
    2744:	00030068 	andeq	r0, r3, r8, rrx
    2748:	5f787400 	svcpl	0x00787400
    274c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2750:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    2754:	00000300 	andeq	r0, r0, r0, lsl #6
    2758:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2760 <_Min_Stack_Size+0x1760>
    275c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2760:	0300682e 	movweq	r6, #2094	; 0x82e
    2764:	05000000 	streq	r0, [r0, #-0]
    2768:	02050001 	andeq	r0, r5, #1
    276c:	10001d64 	andne	r1, r0, r4, ror #26
    2770:	0100f003 	tsteq	r0, r3	; <UNPREDICTABLE>
    2774:	09030505 	stmdbeq	r3, {r0, r2, r8, sl}
    2778:	01053320 	tsteq	r5, r0, lsr #6
    277c:	2e170306 	cdpcs	3, 1, cr0, cr7, cr6, {0}
    2780:	01000102 	tsteq	r0, r2, lsl #2
    2784:	00013701 	andeq	r3, r1, r1, lsl #14
    2788:	e8000300 	stmda	r0, {r8, r9}
    278c:	02000000 	andeq	r0, r0, #0
    2790:	0d0efb01 	vstreq	d15, [lr, #-4]
    2794:	01010100 	mrseq	r0, (UNDEF: 17)
    2798:	00000001 	andeq	r0, r0, r1
    279c:	01000001 	tsteq	r0, r1
    27a0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    27a4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    27a8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    27ac:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    27b0:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    27b4:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    27b8:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 2704 <_Min_Stack_Size+0x1704>
    27bc:	2f6e6f6d 	svccs	0x006e6f6d
    27c0:	00637273 	rsbeq	r7, r3, r3, ror r2
    27c4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    27c8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    27cc:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    27d0:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    27d4:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    27d8:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    27dc:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    27e0:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    27e4:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    27e8:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    27ec:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    27f0:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    27f4:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    27f8:	2f2e2e2f 	svccs	0x002e2e2f
    27fc:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 274c <_Min_Stack_Size+0x174c>
    2800:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2804:	742f736f 	strtvc	r7, [pc], #-879	; 280c <_Min_Stack_Size+0x180c>
    2808:	61657268 	cmnvs	r5, r8, ror #4
    280c:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    2810:	6f6d6d6f 	svcvs	0x006d6d6f
    2814:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    2818:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    281c:	6e695f78 	mcrvs	15, 3, r5, cr9, cr8, {3}
    2820:	61697469 	cmnvs	r9, r9, ror #8
    2824:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    2828:	72656b5f 	rsbvc	r6, r5, #97280	; 0x17c00
    282c:	5f6c656e 	svcpl	0x006c656e
    2830:	65746e65 	ldrbvs	r6, [r4, #-3685]!	; 0xfffff19b
    2834:	00632e72 	rsbeq	r2, r3, r2, ror lr
    2838:	74000001 	strvc	r0, [r0], #-1
    283c:	6f705f78 	svcvs	0x00705f78
    2840:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    2844:	00000200 	andeq	r0, r0, r0, lsl #4
    2848:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    284c:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    2850:	7a696c61 	bvc	1a5d9dc <__RAM_SIZE+0x195d9dc>
    2854:	00682e65 	rsbeq	r2, r8, r5, ror #28
    2858:	74000003 	strvc	r0, [r0], #-3
    285c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2860:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2864:	0300682e 	movweq	r6, #2094	; 0x82e
    2868:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    286c:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    2870:	0300682e 	movweq	r6, #2094	; 0x82e
    2874:	05000000 	streq	r0, [r0, #-0]
    2878:	02050001 	andeq	r0, r5, #1
    287c:	10001d70 	andne	r1, r0, r0, ror sp
    2880:	0100e503 	tsteq	r0, r3, lsl #10
    2884:	05230505 	streq	r0, [r3, #-1285]!	; 0xfffffafb
    2888:	05010621 	streq	r0, [r1, #-1569]	; 0xfffff9df
    288c:	05052e08 	streq	r2, [r5, #-3592]	; 0xfffff1f8
    2890:	3c200306 	stccc	3, cr0, [r0], #-24	; 0xffffffe8
    2894:	01061d05 	tsteq	r6, r5, lsl #26
    2898:	51060505 	tstpl	r6, r5, lsl #10
    289c:	061d054e 	ldreq	r0, [sp], -lr, asr #10
    28a0:	06050501 	streq	r0, [r5], -r1, lsl #10
    28a4:	052e0b03 	streq	r0, [lr, #-2819]!	; 0xfffff4fd
    28a8:	05350601 	ldreq	r0, [r5, #-1537]!	; 0xfffff9ff
    28ac:	4b030609 	blmi	c40d8 <SYSTICK_CYCLES+0x9b099>
    28b0:	06210520 	strteq	r0, [r1], -r0, lsr #10
    28b4:	06090501 	streq	r0, [r9], -r1, lsl #10
    28b8:	02313351 	eorseq	r3, r1, #1140850689	; 0x44000001
    28bc:	0101000b 	tsteq	r1, fp
    28c0:	00000386 	andeq	r0, r0, r6, lsl #7
    28c4:	01450003 	cmpeq	r5, r3
    28c8:	01020000 	mrseq	r0, (UNDEF: 2)
    28cc:	000d0efb 	strdeq	r0, [sp], -fp
    28d0:	01010101 	tsteq	r1, r1, lsl #2
    28d4:	01000000 	mrseq	r0, (UNDEF: 0)
    28d8:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    28dc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    28e0:	2f2e2e2f 	svccs	0x002e2e2f
    28e4:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    28e8:	2f736f74 	svccs	0x00736f74
    28ec:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    28f0:	2f786461 	svccs	0x00786461
    28f4:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    28f8:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    28fc:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    2900:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2904:	2f2e2e2f 	svccs	0x002e2e2f
    2908:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    290c:	2f736f74 	svccs	0x00736f74
    2910:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2914:	2f786461 	svccs	0x00786461
    2918:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    291c:	6f632f73 	svcvs	0x00632f73
    2920:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    2924:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    2928:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    292c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2930:	2f2e2e00 	svccs	0x002e2e00
    2934:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2938:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    293c:	6f747262 	svcvs	0x00747262
    2940:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2944:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2948:	6f632f78 	svcvs	0x00632f78
    294c:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    2950:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2954:	5c3a6300 	ldcpl	3, cr6, [sl], #-0
    2958:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
    295c:	69785c73 	ldmdbvs	r8!, {r0, r1, r4, r5, r6, sl, fp, ip, lr}^
    2960:	5c6e6f64 	stclpl	15, cr6, [lr], #-400	; 0xfffffe70
    2964:	676f7270 			; <UNDEFINED> instruction: 0x676f7270
    2968:	5c6d6172 	stfple	f6, [sp], #-456	; 0xfffffe38
    296c:	5f6d7261 	svcpl	0x006d7261
    2970:	5c636367 	stclpl	3, cr6, [r3], #-412	; 0xfffffe64
    2974:	2d636367 	stclcs	3, cr6, [r3, #-412]!	; 0xfffffe64
    2978:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
    297c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
    2980:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
    2984:	30312d69 	eorscc	r2, r1, r9, ror #26
    2988:	322d332e 	eorcc	r3, sp, #-1207959552	; 0xb8000000
    298c:	2e313230 	mrccs	2, 1, r3, cr1, cr0, {1}
    2990:	615c3031 	cmpvs	ip, r1, lsr r0
    2994:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    2998:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    299c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    29a0:	636e695c 	cmnvs	lr, #92, 18	; 0x170000
    29a4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
    29a8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    29ac:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    29b0:	5f646165 	svcpl	0x00646165
    29b4:	61657263 	cmnvs	r5, r3, ror #4
    29b8:	632e6574 			; <UNDEFINED> instruction: 0x632e6574
    29bc:	00000100 	andeq	r0, r0, r0, lsl #2
    29c0:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    29c4:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    29c8:	00020068 	andeq	r0, r2, r8, rrx
    29cc:	5f787400 	svcpl	0x00787400
    29d0:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    29d4:	00030068 	andeq	r0, r3, r8, rrx
    29d8:	5f787400 	svcpl	0x00787400
    29dc:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    29e0:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    29e4:	00000300 	andeq	r0, r0, r0, lsl #6
    29e8:	6c647473 	cfstrdvs	mvd7, [r4], #-460	; 0xfffffe34
    29ec:	682e6269 	stmdavs	lr!, {r0, r3, r5, r6, r9, sp, lr}
    29f0:	00000400 	andeq	r0, r0, r0, lsl #8
    29f4:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    29f8:	682e676e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
    29fc:	00000400 	andeq	r0, r0, r0, lsl #8
    2a00:	6975623c 	ldmdbvs	r5!, {r2, r3, r4, r5, r9, sp, lr}^
    2a04:	692d746c 	pushvs	{r2, r3, r5, r6, sl, ip, sp, lr}
    2a08:	00003e6e 	andeq	r3, r0, lr, ror #28
    2a0c:	05000000 	streq	r0, [r0, #-0]
    2a10:	02050001 	andeq	r0, r5, #1
    2a14:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
    2a18:	0100e203 	tsteq	r0, r3, lsl #4
    2a1c:	a0060106 	andge	r0, r6, r6, lsl #2
    2a20:	13131314 	tstne	r3, #20, 6	; 0x50000000
    2a24:	05131513 	ldreq	r1, [r3, #-1299]	; 0xfffffaed
    2a28:	39051905 	stmdbcc	r5, {r0, r2, r8, fp, ip}
    2a2c:	44050106 	strmi	r0, [r5], #-262	; 0xfffffefa
    2a30:	202e052e 	eorcs	r0, lr, lr, lsr #10
    2a34:	31060505 	tstcc	r6, r5, lsl #10
    2a38:	01065905 	tsteq	r6, r5, lsl #18
    2a3c:	052f4505 	streq	r4, [pc, #-1285]!	; 253f <_Min_Stack_Size+0x153f>
    2a40:	2e052f46 	cdpcs	15, 0, cr2, cr5, cr6, {2}
    2a44:	0605052c 	streq	r0, [r5], -ip, lsr #10
    2a48:	602e0903 	eorvs	r0, lr, r3, lsl #18
    2a4c:	01063105 	tsteq	r6, r5, lsl #2
    2a50:	052e1005 	streq	r1, [lr, #-5]!
    2a54:	14260605 	strtne	r0, [r6], #-1541	; 0xfffff9fb
    2a58:	01063005 	tsteq	r6, r5
    2a5c:	052e1905 	streq	r1, [lr, #-2309]!	; 0xfffff6fb
    2a60:	05310605 	ldreq	r0, [r1, #-1541]!	; 0xfffff9fb
    2a64:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2a68:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    2a6c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    2a70:	1a350605 	bne	d4428c <__RAM_SIZE+0xc4428c>
    2a74:	0622055b 			; <UNDEFINED> instruction: 0x0622055b
    2a78:	06050501 	streq	r0, [r5], -r1, lsl #10
    2a7c:	0623052f 	strteq	r0, [r3], -pc, lsr #10
    2a80:	06050501 	streq	r0, [r5], -r1, lsl #10
    2a84:	062d052f 	strteq	r0, [sp], -pc, lsr #10
    2a88:	06050501 	streq	r0, [r5], -r1, lsl #10
    2a8c:	0629052f 	strteq	r0, [r9], -pc, lsr #10
    2a90:	06050501 	streq	r0, [r5], -r1, lsl #10
    2a94:	06280521 	strteq	r0, [r8], -r1, lsr #10
    2a98:	06050501 	streq	r0, [r5], -r1, lsl #10
    2a9c:	06260521 	strteq	r0, [r6], -r1, lsr #10
    2aa0:	06050501 	streq	r0, [r5], -r1, lsl #10
    2aa4:	062b0521 	strteq	r0, [fp], -r1, lsr #10
    2aa8:	06050501 	streq	r0, [r5], -r1, lsl #10
    2aac:	0628052f 	strteq	r0, [r8], -pc, lsr #10
    2ab0:	06050501 	streq	r0, [r5], -r1, lsl #10
    2ab4:	062c052f 	strteq	r0, [ip], -pc, lsr #10
    2ab8:	06050501 	streq	r0, [r5], -r1, lsl #10
    2abc:	062e0521 	strteq	r0, [lr], -r1, lsr #10
    2ac0:	06050501 	streq	r0, [r5], -r1, lsl #10
    2ac4:	1205133f 	andne	r1, r5, #-67108864	; 0xfc000000
    2ac8:	0e050106 	adfeqs	f0, f5, f6
    2acc:	06050520 	streq	r0, [r5], -r0, lsr #10
    2ad0:	06270521 	strteq	r0, [r7], -r1, lsr #10
    2ad4:	06050501 	streq	r0, [r5], -r1, lsl #10
    2ad8:	05200a03 	streq	r0, [r0, #-2563]!	; 0xfffff5fd
    2adc:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    2ae0:	12030605 	andne	r0, r3, #5242880	; 0x500000
    2ae4:	0623053c 			; <UNDEFINED> instruction: 0x0623053c
    2ae8:	06050501 	streq	r0, [r5], -r1, lsl #10
    2aec:	4f282e31 	svcmi	0x00282e31
    2af0:	01063d05 	tsteq	r6, r5, lsl #26
    2af4:	05202f05 	streq	r2, [r0, #-3845]!	; 0xfffff0fb
    2af8:	04320605 	ldrteq	r0, [r2], #-1541	; 0xfffff9fb
    2afc:	03370502 	teqeq	r7, #8388608	; 0x800000
    2b00:	050102e9 	streq	r0, [r1, #-745]	; 0xfffffd17
    2b04:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2b08:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    2b0c:	0105015c 	tsteq	r5, ip, asr r1
    2b10:	16050514 			; <UNDEFINED> instruction: 0x16050514
    2b14:	06010630 			; <UNDEFINED> instruction: 0x06010630
    2b18:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    2b1c:	01040106 	tsteq	r4, r6, lsl #2
    2b20:	7d8f0306 	stcvc	3, cr0, [pc, #24]	; 2b40 <_Min_Stack_Size+0x1b40>
    2b24:	06200501 	strteq	r0, [r0], -r1, lsl #10
    2b28:	06050501 	streq	r0, [r5], -r1, lsl #10
    2b2c:	06220532 			; <UNDEFINED> instruction: 0x06220532
    2b30:	2e080501 	cfsh32cs	mvfx0, mvfx8, #1
    2b34:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    2b38:	01062005 	tsteq	r6, r5
    2b3c:	2f060905 	svccs	0x00060905
    2b40:	01062e05 	tsteq	r6, r5, lsl #28
    2b44:	2f060905 	svccs	0x00060905
    2b48:	01063205 	tsteq	r6, r5, lsl #4
    2b4c:	03060505 	movweq	r0, #25861	; 0x6505
    2b50:	1d052e13 	stcne	14, cr2, [r5, #-76]	; 0xffffffb4
    2b54:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    2b58:	3c160306 	ldccc	3, cr0, [r6], {6}
    2b5c:	01060805 	tsteq	r6, r5, lsl #16
    2b60:	03060905 	movweq	r0, #26885	; 0x6905
    2b64:	043c00cd 	ldrteq	r0, [ip], #-205	; 0xffffff33
    2b68:	03370502 	teqeq	r7, #8388608	; 0x800000
    2b6c:	050101dd 	streq	r0, [r1, #-477]	; 0xfffffe23
    2b70:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    2b74:	03060104 	movweq	r0, #24836	; 0x6104
    2b78:	05017eb6 	streq	r7, [r1, #-3766]	; 0xfffff14a
    2b7c:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    2b80:	ca030609 	bgt	c43ac <SYSTICK_CYCLES+0x9b36d>
    2b84:	33053c7e 	movwcc	r3, #23678	; 0x5c7e
    2b88:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2b8c:	38052106 	stmdacc	r5, {r1, r2, r8, sp}
    2b90:	09050106 	stmdbeq	r5, {r1, r2, r8}
    2b94:	3c2c0306 	stccc	3, cr0, [ip], #-24	; 0xffffffe8
    2b98:	01061505 	tsteq	r6, r5, lsl #10
    2b9c:	2f060905 	svccs	0x00060905
    2ba0:	01061905 	tsteq	r6, r5, lsl #18
    2ba4:	31060905 	tstcc	r6, r5, lsl #18
    2ba8:	01063305 	tsteq	r6, r5, lsl #6
    2bac:	2f060905 	svccs	0x00060905
    2bb0:	01063305 	tsteq	r6, r5, lsl #6
    2bb4:	31060905 	tstcc	r6, r5, lsl #18
    2bb8:	01063205 	tsteq	r6, r5, lsl #4
    2bbc:	2f060905 	svccs	0x00060905
    2bc0:	01062e05 	tsteq	r6, r5, lsl #28
    2bc4:	03060905 	movweq	r0, #26885	; 0x6905
    2bc8:	02043c1e 	andeq	r3, r4, #7680	; 0x1e00
    2bcc:	d7033705 	strle	r3, [r3, -r5, lsl #14]
    2bd0:	01050101 	tsteq	r5, r1, lsl #2
    2bd4:	13050514 	movwne	r0, #21780	; 0x5514
    2bd8:	0401062f 	streq	r0, [r1], #-1583	; 0xfffff9d1
    2bdc:	030d0501 	movweq	r0, #54529	; 0xd501
    2be0:	05017ea5 	streq	r7, [r1, #-3749]	; 0xfffff15b
    2be4:	0d053c0c 	stceq	12, cr3, [r5, #-48]	; 0xffffffd0
    2be8:	3c090306 	stccc	3, cr0, [r9], {6}
    2bec:	01061e05 	tsteq	r6, r5, lsl #28
    2bf0:	31060d05 	tstcc	r6, r5, lsl #26
    2bf4:	01061005 	tsteq	r6, r5
    2bf8:	26061105 	strcs	r1, [r6], -r5, lsl #2
    2bfc:	01062105 	tsteq	r6, r5, lsl #2
    2c00:	25061105 	strcs	r1, [r6, #-261]	; 0xfffffefb
    2c04:	01065505 	tsteq	r6, r5, lsl #10
    2c08:	05204105 	streq	r4, [r0, #-261]!	; 0xfffffefb
    2c0c:	7eb00319 	mrcvc	3, 5, r0, cr0, cr9, {0}
    2c10:	031e052e 	tsteq	lr, #192937984	; 0xb800000
    2c14:	052001d7 	streq	r0, [r0, #-471]!	; 0xfffffe29
    2c18:	09030609 	stmdbeq	r3, {r0, r3, r9, sl}
    2c1c:	02043f20 	andeq	r3, r4, #32, 30	; 0x80
    2c20:	fc033705 	stc2	7, cr3, [r3], {5}
    2c24:	05050101 	streq	r0, [r5, #-257]	; 0xfffffeff
    2c28:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    2c2c:	06090501 	streq	r0, [r9], -r1, lsl #10
    2c30:	017e8d03 	cmneq	lr, r3, lsl #26
    2c34:	01060c05 	tsteq	r6, r5, lsl #24
    2c38:	33060d05 	movwcc	r0, #27909	; 0x6d05
    2c3c:	01063d05 	tsteq	r6, r5, lsl #26
    2c40:	8a031905 	bhi	c905c <SYSTICK_CYCLES+0xa001d>
    2c44:	00082e7e 	andeq	r2, r8, lr, ror lr
    2c48:	01060101 	tsteq	r6, r1, lsl #2
    2c4c:	00030000 	andeq	r0, r3, r0
    2c50:	000000cf 	andeq	r0, r0, pc, asr #1
    2c54:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    2c58:	0101000d 	tsteq	r1, sp
    2c5c:	00000101 	andeq	r0, r0, r1, lsl #2
    2c60:	00000100 	andeq	r0, r0, r0, lsl #2
    2c64:	2f2e2e01 	svccs	0x002e2e01
    2c68:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2c6c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2c70:	6f747262 	svcvs	0x00747262
    2c74:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2c78:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2c7c:	6f632f78 	svcvs	0x00632f78
    2c80:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    2c84:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2c88:	2f2e2e00 	svccs	0x002e2e00
    2c8c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2c90:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2c94:	6f747262 	svcvs	0x00747262
    2c98:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2c9c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2ca0:	6f702f78 	svcvs	0x00702f78
    2ca4:	2f737472 	svccs	0x00737472
    2ca8:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    2cac:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 2b20 <_Min_Stack_Size+0x1b20>
    2cb0:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    2cb4:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
    2cb8:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    2cbc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2cc0:	2f2e2e2f 	svccs	0x002e2e2f
    2cc4:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2cc8:	2f736f74 	svccs	0x00736f74
    2ccc:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2cd0:	2f786461 	svccs	0x00786461
    2cd4:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    2cd8:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    2cdc:	0000636e 	andeq	r6, r0, lr, ror #6
    2ce0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2ce8 <_Min_Stack_Size+0x1ce8>
    2ce4:	61657268 	cmnvs	r5, r8, ror #4
    2ce8:	6e695f64 	cdpvs	15, 6, cr5, cr9, cr4, {3}
    2cec:	61697469 	cmnvs	r9, r9, ror #8
    2cf0:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    2cf4:	0100632e 	tsteq	r0, lr, lsr #6
    2cf8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2cfc:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    2d00:	00682e74 	rsbeq	r2, r8, r4, ror lr
    2d04:	74000002 	strvc	r0, [r0], #-2
    2d08:	70615f78 	rsbvc	r5, r1, r8, ror pc
    2d0c:	00682e69 	rsbeq	r2, r8, r9, ror #28
    2d10:	74000003 	strvc	r0, [r0], #-3
    2d14:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2d18:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2d1c:	0300682e 	movweq	r6, #2094	; 0x82e
    2d20:	05000000 	streq	r0, [r0, #-0]
    2d24:	02050001 	andeq	r0, r5, #1
    2d28:	10001f04 	andne	r1, r0, r4, lsl #30
    2d2c:	0102c003 	tsteq	r2, r3
    2d30:	18030505 	stmdane	r3, {r0, r2, r8, sl}
    2d34:	06210501 	strteq	r0, [r1], -r1, lsl #10
    2d38:	06050501 	streq	r0, [r5], -r1, lsl #10
    2d3c:	053c2e03 	ldreq	r2, [ip, #-3587]!	; 0xfffff1fd
    2d40:	3303061d 	movwcc	r0, #13853	; 0x361d
    2d44:	03170501 	tsteq	r7, #4194304	; 0x400000
    2d48:	01054a4d 	tsteq	r5, sp, asr #20
    2d4c:	02203f03 	eoreq	r3, r0, #3, 30
    2d50:	01010008 	tsteq	r1, r8
    2d54:	0000017f 	andeq	r0, r0, pc, ror r1
    2d58:	00d00003 	sbcseq	r0, r0, r3
    2d5c:	01020000 	mrseq	r0, (UNDEF: 2)
    2d60:	000d0efb 	strdeq	r0, [sp], -fp
    2d64:	01010101 	tsteq	r1, r1, lsl #2
    2d68:	01000000 	mrseq	r0, (UNDEF: 0)
    2d6c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    2d70:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2d74:	2f2e2e2f 	svccs	0x002e2e2f
    2d78:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2d7c:	2f736f74 	svccs	0x00736f74
    2d80:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2d84:	2f786461 	svccs	0x00786461
    2d88:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    2d8c:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    2d90:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    2d94:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2d98:	2f2e2e2f 	svccs	0x002e2e2f
    2d9c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2da0:	2f736f74 	svccs	0x00736f74
    2da4:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2da8:	2f786461 	svccs	0x00786461
    2dac:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2db0:	6f632f73 	svcvs	0x00632f73
    2db4:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    2db8:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    2dbc:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    2dc0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2dc4:	2f2e2e00 	svccs	0x002e2e00
    2dc8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2dcc:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2dd0:	6f747262 	svcvs	0x00747262
    2dd4:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2dd8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2ddc:	6f632f78 	svcvs	0x00632f78
    2de0:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    2de4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    2de8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2dec:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    2df0:	5f646165 	svcpl	0x00646165
    2df4:	6c656873 	stclvs	8, cr6, [r5], #-460	; 0xfffffe34
    2df8:	6e655f6c 	cdpvs	15, 6, cr5, cr5, cr12, {3}
    2dfc:	2e797274 	mrccs	2, 3, r7, cr9, cr4, {3}
    2e00:	00010063 	andeq	r0, r1, r3, rrx
    2e04:	5f787400 	svcpl	0x00787400
    2e08:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2e0c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    2e10:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2e14:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    2e18:	0300682e 	movweq	r6, #2094	; 0x82e
    2e1c:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2e20:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    2e24:	2e646165 	powcssz	f6, f4, f5
    2e28:	00030068 	andeq	r0, r3, r8, rrx
    2e2c:	01050000 	mrseq	r0, (UNDEF: 5)
    2e30:	24020500 	strcs	r0, [r2], #-1280	; 0xfffffb00
    2e34:	0310001f 	tsteq	r0, #31
    2e38:	220100cb 	andcs	r0, r1, #203	; 0xcb
    2e3c:	19050514 	stmdbne	r5, {r2, r4, r8, sl}
    2e40:	052e1a03 	streq	r1, [lr, #-2563]!	; 0xfffff5fd
    2e44:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    2e48:	05410605 	strbeq	r0, [r1, #-1541]	; 0xfffff9fb
    2e4c:	05010622 	streq	r0, [r1, #-1570]	; 0xfffff9de
    2e50:	09052e08 	stmdbeq	r5, {r3, r9, sl, fp, sp}
    2e54:	05052506 	streq	r2, [r5, #-1286]	; 0xfffffafa
    2e58:	05020432 	streq	r0, [r2, #-1074]	; 0xfffffbce
    2e5c:	03d30337 	bicseq	r0, r3, #-603979776	; 0xdc000000
    2e60:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    2e64:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    2e68:	015c0337 	cmpeq	ip, r7, lsr r3
    2e6c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    2e70:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    2e74:	21030601 	tstcs	r3, r1, lsl #12
    2e78:	01062201 	tsteq	r6, r1, lsl #4
    2e7c:	03060104 	movweq	r0, #24836	; 0x6104
    2e80:	05017cac 	streq	r7, [r1, #-3244]	; 0xfffff354
    2e84:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    2e88:	13030605 	movwne	r0, #13829	; 0x3605
    2e8c:	0204012e 	andeq	r0, r4, #-2147483637	; 0x8000000b
    2e90:	ca033805 	bgt	d0eac <SYSTICK_CYCLES+0xa7e6d>
    2e94:	01050101 	tsteq	r5, r1, lsl #2
    2e98:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    2e9c:	0401062f 	streq	r0, [r1], #-1583	; 0xfffff9d1
    2ea0:	b1030601 	tstlt	r3, r1, lsl #12
    2ea4:	042e017e 	strteq	r0, [lr], #-382	; 0xfffffe82
    2ea8:	03370502 	teqeq	r7, #8388608	; 0x800000
    2eac:	050101d2 	streq	r0, [r1, #-466]	; 0xfffffe2e
    2eb0:	2e061405 	cdpcs	4, 0, cr1, cr6, cr5, {0}
    2eb4:	03060104 	movweq	r0, #24836	; 0x6104
    2eb8:	4d017eaf 	stcmi	14, cr7, [r1, #-700]	; 0xfffffd44
    2ebc:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    2ec0:	0103a703 	tsteq	r3, r3, lsl #14
    2ec4:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    2ec8:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    2ecc:	7cfb0301 	ldclvc	3, cr0, [fp], #4
    2ed0:	05022001 	streq	r2, [r2, #-1]
    2ed4:	3f010100 	svccc	0x00010100
    2ed8:	03000002 	movweq	r0, #2
    2edc:	0000d800 	andeq	sp, r0, r0, lsl #16
    2ee0:	fb010200 	blx	436ea <SYSTICK_CYCLES+0x1a6ab>
    2ee4:	01000d0e 	tsteq	r0, lr, lsl #26
    2ee8:	00010101 	andeq	r0, r1, r1, lsl #2
    2eec:	00010000 	andeq	r0, r1, r0
    2ef0:	2e2e0100 	sufcse	f0, f6, f0
    2ef4:	2f2e2e2f 	svccs	0x002e2e2f
    2ef8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2e48 <_Min_Stack_Size+0x1e48>
    2efc:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2f00:	742f736f 	strtvc	r7, [pc], #-879	; 2f08 <_Min_Stack_Size+0x1f08>
    2f04:	61657268 	cmnvs	r5, r8, ror #4
    2f08:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    2f0c:	6f6d6d6f 	svcvs	0x006d6d6f
    2f10:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    2f14:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    2f18:	2f2e2e2f 	svccs	0x002e2e2f
    2f1c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 2e6c <_Min_Stack_Size+0x1e6c>
    2f20:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2f24:	742f736f 	strtvc	r7, [pc], #-879	; 2f2c <_Min_Stack_Size+0x1f2c>
    2f28:	61657268 	cmnvs	r5, r8, ror #4
    2f2c:	702f7864 	eorvc	r7, pc, r4, ror #16
    2f30:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
    2f34:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    2f38:	5f786574 	svcpl	0x00786574
    2f3c:	2f33336d 	svccs	0x0033336d
    2f40:	2f756e67 	svccs	0x00756e67
    2f44:	00636e69 	rsbeq	r6, r3, r9, ror #28
    2f48:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2f4c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2f50:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2f54:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2f58:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    2f5c:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    2f60:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 2eac <_Min_Stack_Size+0x1eac>
    2f64:	2f6e6f6d 	svccs	0x006e6f6d
    2f68:	00636e69 	rsbeq	r6, r3, r9, ror #28
    2f6c:	5f787400 	svcpl	0x00787400
    2f70:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2f74:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    2f78:	7065656c 	rsbvc	r6, r5, ip, ror #10
    2f7c:	0100632e 	tsteq	r0, lr, lsr #6
    2f80:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2f84:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    2f88:	00682e74 	rsbeq	r2, r8, r4, ror lr
    2f8c:	74000002 	strvc	r0, [r0], #-2
    2f90:	70615f78 	rsbvc	r5, r1, r8, ror pc
    2f94:	00682e69 	rsbeq	r2, r8, r9, ror #28
    2f98:	74000003 	strvc	r0, [r0], #-3
    2f9c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2fa0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2fa4:	0300682e 	movweq	r6, #2094	; 0x82e
    2fa8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    2fac:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2fb0:	682e7265 	stmdavs	lr!, {r0, r2, r5, r6, r9, ip, sp, lr}
    2fb4:	00000300 	andeq	r0, r0, r0, lsl #6
    2fb8:	00010500 	andeq	r0, r1, r0, lsl #10
    2fbc:	1f680205 	svcne	0x00680205
    2fc0:	c9031000 	stmdbgt	r3, {ip}
    2fc4:	01060100 	mrseq	r0, (UNDEF: 22)
    2fc8:	13142206 	tstne	r4, #1610612736	; 0x60000000
    2fcc:	04160505 	ldreq	r0, [r6], #-1285	; 0xfffffafb
    2fd0:	03370502 	teqeq	r7, #8388608	; 0x800000
    2fd4:	050103ff 	streq	r0, [r1, #-1023]	; 0xfffffc01
    2fd8:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    2fdc:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    2fe0:	0105015c 	tsteq	r5, ip, asr r1
    2fe4:	16050514 			; <UNDEFINED> instruction: 0x16050514
    2fe8:	06010630 			; <UNDEFINED> instruction: 0x06010630
    2fec:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    2ff0:	01040106 	tsteq	r4, r6, lsl #2
    2ff4:	7bf90306 	blvc	ffe43c14 <__RAM_segment_used_end__+0xc7d43c14>
    2ff8:	08053301 	stmdaeq	r5, {r0, r8, r9, ip, sp}
    2ffc:	0a050106 	beq	14341c <__RAM_SIZE+0x4341c>
    3000:	200b0306 	andcs	r0, fp, r6, lsl #6
    3004:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3008:	01039403 	tsteq	r3, r3, lsl #8
    300c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3010:	062f1305 	strteq	r1, [pc], -r5, lsl #6
    3014:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    3018:	7ce8030e 	stclvc	3, cr0, [r8], #56	; 0x38
    301c:	2e0d0501 	cfsh32cs	mvfx0, mvfx13, #1
    3020:	03060a05 	movweq	r0, #27141	; 0x6a05
    3024:	0d052e0d 	stceq	14, cr2, [r5, #-52]	; 0xffffffcc
    3028:	0a050106 	beq	143448 <__RAM_SIZE+0x43448>
    302c:	3c0c0306 	stccc	3, cr0, [ip], {6}
    3030:	01060d05 	tsteq	r6, r5, lsl #26
    3034:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    3038:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    303c:	0103c603 	tsteq	r3, r3, lsl #12
    3040:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    3044:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    3048:	b8030609 	stmdalt	r3, {r0, r3, r9, sl}
    304c:	0106017c 	tsteq	r6, ip, ror r1
    3050:	20590306 	subscs	r0, r9, r6, lsl #6
    3054:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3058:	0103ea03 	tsteq	r3, r3, lsl #20
    305c:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    3060:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    3064:	94030609 	strls	r0, [r3], #-1545	; 0xfffff9f7
    3068:	1005017c 	andne	r0, r5, ip, ror r1
    306c:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    3070:	04280609 	strteq	r0, [r8], #-1545	; 0xfffff9f7
    3074:	03370502 	teqeq	r7, #8388608	; 0x800000
    3078:	050103df 	streq	r0, [r1, #-991]	; 0xfffffc21
    307c:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    3080:	09050104 	stmdbeq	r5, {r2, r8}
    3084:	7c9f0306 	ldcvc	3, cr0, [pc], {6}
    3088:	06100501 	ldreq	r0, [r0], -r1, lsl #10
    308c:	03010501 	movweq	r0, #5377	; 0x1501
    3090:	052000d9 	streq	r0, [r0, #-217]!	; 0xffffff27
    3094:	b1030609 	tstlt	r3, r9, lsl #12
    3098:	0204207f 	andeq	r2, r4, #127	; 0x7f
    309c:	d2033705 	andle	r3, r3, #1310720	; 0x140000
    30a0:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    30a4:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    30a8:	06090501 	streq	r0, [r9], -r1, lsl #10
    30ac:	017cac03 	cmneq	ip, r3, lsl #24
    30b0:	01061005 	tsteq	r6, r5
    30b4:	06090520 	streq	r0, [r9], -r0, lsr #10
    30b8:	05201203 	streq	r1, [r0, #-515]!	; 0xfffffdfd
    30bc:	05010628 	streq	r0, [r1, #-1576]	; 0xfffff9d8
    30c0:	0d052e0c 	stceq	14, cr2, [r5, #-48]	; 0xffffffd0
    30c4:	02042406 	andeq	r2, r4, #100663296	; 0x6000000
    30c8:	b9033705 	stmdblt	r3, {r0, r2, r8, r9, sl, ip, sp}
    30cc:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    30d0:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    30d4:	060d0501 	streq	r0, [sp], -r1, lsl #10
    30d8:	017cc503 	cmneq	ip, r3, lsl #10
    30dc:	01061405 	tsteq	r6, r5, lsl #8
    30e0:	060d0520 	streq	r0, [sp], -r0, lsr #10
    30e4:	05200e03 	streq	r0, [r0, #-3587]!	; 0xfffff1fd
    30e8:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    30ec:	0633060d 	ldrteq	r0, [r3], -sp, lsl #12
    30f0:	0431062e 	ldrteq	r0, [r1], #-1582	; 0xfffff9d2
    30f4:	03370502 	teqeq	r7, #8388608	; 0x800000
    30f8:	050103a0 	streq	r0, [r1, #-928]	; 0xfffffc60
    30fc:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    3100:	0d050104 	stfeqs	f0, [r5, #-16]
    3104:	7cf20306 	ldclvc	3, cr0, [r2], #24
    3108:	06140501 	ldreq	r0, [r4], -r1, lsl #10
    310c:	06050501 	streq	r0, [r5], -r1, lsl #10
    3110:	060b0533 			; <UNDEFINED> instruction: 0x060b0533
    3114:	00090201 	andeq	r0, r9, r1, lsl #4
    3118:	02420101 	subeq	r0, r2, #1073741824	; 0x40000000
    311c:	00030000 	andeq	r0, r3, r0
    3120:	000000c3 	andeq	r0, r0, r3, asr #1
    3124:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    3128:	0101000d 	tsteq	r1, sp
    312c:	00000101 	andeq	r0, r0, r1, lsl #2
    3130:	00000100 	andeq	r0, r0, r0, lsl #2
    3134:	2f2e2e01 	svccs	0x002e2e01
    3138:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    313c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    3140:	6f747262 	svcvs	0x00747262
    3144:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    3148:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    314c:	6f632f78 	svcvs	0x00632f78
    3150:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    3154:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    3158:	2f2e2e00 	svccs	0x002e2e00
    315c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3160:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    3164:	6f747262 	svcvs	0x00747262
    3168:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    316c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    3170:	6f702f78 	svcvs	0x00702f78
    3174:	2f737472 	svccs	0x00737472
    3178:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    317c:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 2ff0 <_Min_Stack_Size+0x1ff0>
    3180:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    3184:	692f756e 	stmdbvs	pc!, {r1, r2, r3, r5, r6, r8, sl, ip, sp, lr}	; <UNPREDICTABLE>
    3188:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    318c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3190:	2f2e2e2f 	svccs	0x002e2e2f
    3194:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    3198:	2f736f74 	svccs	0x00736f74
    319c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    31a0:	2f786461 	svccs	0x00786461
    31a4:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    31a8:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    31ac:	0000636e 	andeq	r6, r0, lr, ror #6
    31b0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 31b8 <_Min_Stack_Size+0x21b8>
    31b4:	61657268 	cmnvs	r5, r8, ror #4
    31b8:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
    31bc:	5f6b6361 	svcpl	0x006b6361
    31c0:	6c616e61 	stclvs	14, cr6, [r1], #-388	; 0xfffffe7c
    31c4:	2e657a79 			; <UNDEFINED> instruction: 0x2e657a79
    31c8:	00010063 	andeq	r0, r1, r3, rrx
    31cc:	5f787400 	svcpl	0x00787400
    31d0:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    31d4:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    31d8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    31dc:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    31e0:	0300682e 	movweq	r6, #2094	; 0x82e
    31e4:	05000000 	streq	r0, [r0, #-0]
    31e8:	02050001 	andeq	r0, r5, #1
    31ec:	10001fdc 	ldrdne	r1, [r0], -ip
    31f0:	0100c803 	tsteq	r0, r3, lsl #16
    31f4:	13131414 	tstne	r3, #20, 8	; 0x14000000
    31f8:	16050513 			; <UNDEFINED> instruction: 0x16050513
    31fc:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3200:	0103fe03 	tsteq	r3, r3, lsl #28	; <UNPREDICTABLE>
    3204:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3208:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    320c:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    3210:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    3214:	01063016 	tsteq	r6, r6, lsl r0
    3218:	01210306 			; <UNDEFINED> instruction: 0x01210306
    321c:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    3220:	fa030601 	blx	c4a2c <SYSTICK_CYCLES+0x9b9ed>
    3224:	0805017b 	stmdaeq	r5, {r0, r1, r3, r4, r5, r6, r8}
    3228:	09050106 	stmdbeq	r5, {r1, r2, r8}
    322c:	18052406 	stmdane	r5, {r1, r2, sl, sp}
    3230:	0c050106 	stfeqs	f0, [r5], {6}
    3234:	06050520 	streq	r0, [r5], -r0, lsr #10
    3238:	3c00d903 			; <UNDEFINED> instruction: 0x3c00d903
    323c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3240:	01039503 	tsteq	r3, r3, lsl #10
    3244:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    3248:	0104202e 	tsteq	r4, lr, lsr #32
    324c:	03060d05 	movweq	r0, #27909	; 0x6d05
    3250:	05017c91 	streq	r7, [r1, #-3217]	; 0xfffff36f
    3254:	0501061a 	streq	r0, [r1, #-1562]	; 0xfffff9e6
    3258:	0523060d 	streq	r0, [r3, #-1549]!	; 0xfffff9f3
    325c:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    3260:	2e670301 	cdpcs	3, 6, cr0, cr7, cr1, {0}
    3264:	03061105 	movweq	r1, #24837	; 0x6105
    3268:	1f05201d 	svcne	0x0005201d
    326c:	11050106 	tstne	r5, r6, lsl #2
    3270:	14053106 	strne	r3, [r5], #-262	; 0xfffffefa
    3274:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    3278:	02042406 	andeq	r2, r4, #100663296	; 0x6000000
    327c:	dc033705 	stcle	7, cr3, [r3], {5}
    3280:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    3284:	06010517 			; <UNDEFINED> instruction: 0x06010517
    3288:	01042030 	tsteq	r4, r0, lsr r0
    328c:	b3032a05 	movwlt	r2, #14853	; 0x3a05
    3290:	1c05017c 	stfnes	f0, [r5], {124}	; 0x7c
    3294:	15052306 	strne	r2, [r5, #-774]	; 0xfffffcfa
    3298:	03060106 	movweq	r0, #24838	; 0x6106
    329c:	19052e6b 	stmdbne	r5, {r0, r1, r3, r5, r6, r9, sl, fp, sp}
    32a0:	062a0516 			; <UNDEFINED> instruction: 0x062a0516
    32a4:	2e1e0501 	cfmul32cs	mvfx0, mvfx14, mvfx1
    32a8:	21061905 	tstcs	r6, r5, lsl #18
    32ac:	01062305 	tsteq	r6, r5, lsl #6
    32b0:	31061905 	tstcc	r6, r5, lsl #18
    32b4:	01061d05 	tsteq	r6, r5, lsl #26
    32b8:	052e2b05 	streq	r2, [lr, #-2821]!	; 0xfffff4fb
    32bc:	2b052e1c 	blcs	14eb34 <__RAM_SIZE+0x4eb34>
    32c0:	19052032 	stmdbne	r5, {r1, r4, r5, sp}
    32c4:	20100306 	andscs	r0, r0, r6, lsl #6
    32c8:	01062305 	tsteq	r6, r5, lsl #6
    32cc:	1c061b05 			; <UNDEFINED> instruction: 0x1c061b05
    32d0:	01061c05 	tsteq	r6, r5, lsl #24
    32d4:	05201b05 	streq	r1, [r0, #-2821]!	; 0xfffff4fb
    32d8:	0b030615 	bleq	c4b34 <SYSTICK_CYCLES+0x9baf5>
    32dc:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    32e0:	03be0337 			; <UNDEFINED> instruction: 0x03be0337
    32e4:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    32e8:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    32ec:	015c0337 	cmpeq	ip, r7, lsr r3
    32f0:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    32f4:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    32f8:	21030601 	tstcs	r3, r1, lsl #12
    32fc:	01062201 	tsteq	r6, r1, lsl #4
    3300:	15050104 	strne	r0, [r5, #-260]	; 0xfffffefc
    3304:	7cba0306 	ldcvc	3, cr0, [sl], #24
    3308:	06240501 	strteq	r0, [r4], -r1, lsl #10
    330c:	20180501 	andscs	r0, r8, r1, lsl #10
    3310:	06050520 	streq	r0, [r5], -r0, lsr #10
    3314:	042e1d03 	strteq	r1, [lr], #-3331	; 0xfffff2fd
    3318:	03370502 	teqeq	r7, #8388608	; 0x800000
    331c:	05010395 	streq	r0, [r1, #-917]	; 0xfffffc6b
    3320:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    3324:	01050104 	tsteq	r5, r4, lsl #2
    3328:	017ce703 	cmneq	ip, r3, lsl #14
    332c:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    3330:	05206803 	streq	r6, [r0, #-2051]!	; 0xfffff7fd
    3334:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    3338:	1d05201c 	stcne	0, cr2, [r5, #-112]	; 0xffffff90
    333c:	2e053206 	cdpcs	2, 0, cr3, cr5, cr6, {0}
    3340:	20050106 	andcs	r0, r5, r6, lsl #2
    3344:	0621052e 	strteq	r0, [r1], -lr, lsr #10
    3348:	06250532 			; <UNDEFINED> instruction: 0x06250532
    334c:	20330501 	eorscs	r0, r3, r1, lsl #10
    3350:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
    3354:	05320625 	ldreq	r0, [r2, #-1573]!	; 0xfffff9db
    3358:	0201064f 	andeq	r0, r1, #82837504	; 0x4f00000
    335c:	01010006 	tsteq	r1, r6
    3360:	00000145 	andeq	r0, r0, r5, asr #2
    3364:	00d80003 	sbcseq	r0, r8, r3
    3368:	01020000 	mrseq	r0, (UNDEF: 2)
    336c:	000d0efb 	strdeq	r0, [sp], -fp
    3370:	01010101 	tsteq	r1, r1, lsl #2
    3374:	01000000 	mrseq	r0, (UNDEF: 0)
    3378:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    337c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3380:	2f2e2e2f 	svccs	0x002e2e2f
    3384:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    3388:	2f736f74 	svccs	0x00736f74
    338c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    3390:	2f786461 	svccs	0x00786461
    3394:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    3398:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    339c:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    33a0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    33a4:	2f2e2e2f 	svccs	0x002e2e2f
    33a8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    33ac:	2f736f74 	svccs	0x00736f74
    33b0:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    33b4:	2f786461 	svccs	0x00786461
    33b8:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    33bc:	6f632f73 	svcvs	0x00632f73
    33c0:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    33c4:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    33c8:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    33cc:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    33d0:	2f2e2e00 	svccs	0x002e2e00
    33d4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    33d8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    33dc:	6f747262 	svcvs	0x00747262
    33e0:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    33e4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    33e8:	6f632f78 	svcvs	0x00632f78
    33ec:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    33f0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    33f4:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    33f8:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    33fc:	5f646165 	svcpl	0x00646165
    3400:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    3404:	72655f6b 	rsbvc	r5, r5, #428	; 0x1ac
    3408:	5f726f72 	svcpl	0x00726f72
    340c:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
    3410:	2e72656c 	cdpcs	5, 7, cr6, cr2, cr12, {3}
    3414:	00010063 	andeq	r0, r1, r3, rrx
    3418:	5f787400 	svcpl	0x00787400
    341c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    3420:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    3424:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    3428:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    342c:	0300682e 	movweq	r6, #2094	; 0x82e
    3430:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    3434:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    3438:	2e646165 	powcssz	f6, f4, f5
    343c:	00030068 	andeq	r0, r3, r8, rrx
    3440:	01050000 	mrseq	r0, (UNDEF: 5)
    3444:	68020500 	stmdavs	r2, {r8, sl}
    3448:	03100020 	tsteq	r0, #32
    344c:	060100d4 			; <UNDEFINED> instruction: 0x060100d4
    3450:	05220601 	streq	r0, [r2, #-1537]!	; 0xfffff9ff
    3454:	02041705 	andeq	r1, r4, #1310720	; 0x140000
    3458:	f6033705 			; <UNDEFINED> instruction: 0xf6033705
    345c:	01050103 	tsteq	r5, r3, lsl #2
    3460:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    3464:	5c033705 	stcpl	7, cr3, [r3], {5}
    3468:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    346c:	30160505 	andscc	r0, r6, r5, lsl #10
    3470:	03060106 	movweq	r0, #24838	; 0x6106
    3474:	06220121 	strteq	r0, [r2], -r1, lsr #2
    3478:	06010401 	streq	r0, [r1], -r1, lsl #8
    347c:	017c8203 	cmneq	ip, r3, lsl #4
    3480:	01063405 	tsteq	r6, r5, lsl #8
    3484:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
    3488:	05240609 	streq	r0, [r4, #-1545]!	; 0xfffff9f7
    348c:	02042405 	andeq	r2, r4, #83886080	; 0x5000000
    3490:	e2033705 	and	r3, r3, #1310720	; 0x140000
    3494:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    3498:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    349c:	03010501 	movweq	r0, #5377	; 0x1501
    34a0:	20017ca8 	andcs	r7, r1, r8, lsr #25
    34a4:	01000302 	tsteq	r0, r2, lsl #6
    34a8:	0002af01 	andeq	sl, r2, r1, lsl #30
    34ac:	d9000300 	stmdble	r0, {r8, r9}
    34b0:	02000000 	andeq	r0, r0, #0
    34b4:	0d0efb01 	vstreq	d15, [lr, #-4]
    34b8:	01010100 	mrseq	r0, (UNDEF: 17)
    34bc:	00000001 	andeq	r0, r0, r1
    34c0:	01000001 	tsteq	r0, r1
    34c4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    34c8:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    34cc:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    34d0:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    34d4:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    34d8:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    34dc:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 3428 <_Min_Stack_Size+0x2428>
    34e0:	2f6e6f6d 	svccs	0x006e6f6d
    34e4:	00637273 	rsbeq	r7, r3, r3, ror r2
    34e8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    34ec:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    34f0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    34f4:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    34f8:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    34fc:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    3500:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    3504:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    3508:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    350c:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    3510:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    3514:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    3518:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    351c:	2f2e2e2f 	svccs	0x002e2e2f
    3520:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 3470 <_Min_Stack_Size+0x2470>
    3524:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    3528:	742f736f 	strtvc	r7, [pc], #-879	; 3530 <_Min_Stack_Size+0x2530>
    352c:	61657268 	cmnvs	r5, r8, ror #4
    3530:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    3534:	6f6d6d6f 	svcvs	0x006d6d6f
    3538:	6e692f6e 	cdpvs	15, 6, cr2, cr9, cr14, {3}
    353c:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    3540:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    3544:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    3548:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    354c:	5f6d6574 	svcpl	0x006d6574
    3550:	65657270 	strbvs	r7, [r5, #-624]!	; 0xfffffd90
    3554:	5f74706d 	svcpl	0x0074706d
    3558:	63656863 	cmnvs	r5, #6488064	; 0x630000
    355c:	00632e6b 	rsbeq	r2, r3, fp, ror #28
    3560:	74000001 	strvc	r0, [r0], #-1
    3564:	6f705f78 	svcvs	0x00705f78
    3568:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    356c:	00000200 	andeq	r0, r0, r0, lsl #4
    3570:	615f7874 	cmpvs	pc, r4, ror r8	; <UNPREDICTABLE>
    3574:	682e6970 	stmdavs	lr!, {r4, r5, r6, r8, fp, sp, lr}
    3578:	00000300 	andeq	r0, r0, r0, lsl #6
    357c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 3584 <_Min_Stack_Size+0x2584>
    3580:	61657268 	cmnvs	r5, r8, ror #4
    3584:	00682e64 	rsbeq	r2, r8, r4, ror #28
    3588:	00000003 	andeq	r0, r0, r3
    358c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    3590:	00208402 	eoreq	r8, r0, r2, lsl #8
    3594:	00c80310 	sbceq	r0, r8, r0, lsl r3
    3598:	13131401 	tstne	r3, #16777216	; 0x1000000
    359c:	31160505 	tstcc	r6, r5, lsl #10
    35a0:	01060805 	tsteq	r6, r5, lsl #16
    35a4:	75030105 	strvc	r0, [r3, #-261]	; 0xfffffefb
    35a8:	0609052e 	streq	r0, [r9], -lr, lsr #10
    35ac:	06201103 	strteq	r1, [r0], -r3, lsl #2
    35b0:	05230620 	streq	r0, [r3, #-1568]!	; 0xfffff9e0
    35b4:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    35b8:	05310609 	ldreq	r0, [r1, #-1545]!	; 0xfffff9f7
    35bc:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    35c0:	0134060d 	teqeq	r4, sp, lsl #12
    35c4:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    35c8:	0103ec03 	tsteq	r3, r3, lsl #24
    35cc:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    35d0:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    35d4:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    35d8:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    35dc:	01063016 	tsteq	r6, r6, lsl r0
    35e0:	01210306 			; <UNDEFINED> instruction: 0x01210306
    35e4:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    35e8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    35ec:	017c8903 	cmneq	ip, r3, lsl #18
    35f0:	01040200 	mrseq	r0, R12_usr
    35f4:	02002006 	andeq	r2, r0, #6
    35f8:	4a061104 	bmi	187a10 <__RAM_SIZE+0x87a10>
    35fc:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3600:	11040200 	mrsne	r0, R12_usr
    3604:	0103e303 	tsteq	r3, r3, lsl #6
    3608:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    360c:	00171104 	andseq	r1, r7, r4, lsl #2
    3610:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    3614:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    3618:	0402000d 	streq	r0, [r2], #-13
    361c:	9f030611 	svcls	0x00030611
    3620:	1005017c 	andne	r0, r5, ip, ror r1
    3624:	11040200 	mrsne	r0, R12_usr
    3628:	11050106 	tstne	r5, r6, lsl #2
    362c:	2e0a0306 	cdpcs	3, 0, cr0, cr10, cr6, {0}
    3630:	01063d05 	tsteq	r6, r5, lsl #26
    3634:	060d052e 	streq	r0, [sp], -lr, lsr #10
    3638:	05020433 	streq	r0, [r2, #-1075]	; 0xfffffbcd
    363c:	03e40337 	mvneq	r0, #-603979776	; 0xdc000000
    3640:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3644:	05150505 	ldreq	r0, [r5, #-1285]	; 0xfffffafb
    3648:	05010626 	streq	r0, [r1, #-1574]	; 0xfffff9da
    364c:	05670605 	strbeq	r0, [r7, #-1541]!	; 0xfffff9fb
    3650:	7f940337 	svcvc	0x00940337
    3654:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3658:	2f130505 	svccs	0x00130505
    365c:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3660:	0100e803 	tsteq	r0, r3, lsl #16
    3664:	22060905 	andcs	r0, r6, #81920	; 0x14000
    3668:	4a033705 	bmi	d1284 <SYSTICK_CYCLES+0xa8245>
    366c:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3670:	30160505 	andscc	r0, r6, r5, lsl #10
    3674:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3678:	01320306 	teqeq	r2, r6, lsl #6
    367c:	57033705 	strpl	r3, [r3, -r5, lsl #14]
    3680:	14050501 	strne	r0, [r5], #-1281	; 0xfffffaff
    3684:	29030905 	stmdbcs	r3, {r0, r2, r8, fp}
    3688:	03370520 	teqeq	r7, #32, 10	; 0x8000000
    368c:	0505015b 	streq	r0, [r5, #-347]	; 0xfffffea5
    3690:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    3694:	03010501 	movweq	r0, #5377	; 0x1501
    3698:	05017cb1 	streq	r7, [r1, #-3249]	; 0xfffff34f
    369c:	0402000d 	streq	r0, [r2], #-13
    36a0:	67030603 	strvs	r0, [r3, -r3, lsl #12]
    36a4:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    36a8:	02005805 	andeq	r5, r0, #327680	; 0x50000
    36ac:	002e0704 	eoreq	r0, lr, r4, lsl #14
    36b0:	06090402 	streq	r0, [r9], -r2, lsl #8
    36b4:	04580666 	ldrbeq	r0, [r8], #-1638	; 0xfffff99a
    36b8:	03370502 	teqeq	r7, #8388608	; 0x800000
    36bc:	050103e3 	streq	r0, [r1, #-995]	; 0xfffffc1d
    36c0:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    36c4:	0d050104 	stfeqs	f0, [r5, #-16]
    36c8:	7c980306 	ldcvc	3, cr0, [r8], {6}
    36cc:	02043c01 	andeq	r3, r4, #256	; 0x100
    36d0:	ec033705 	stc	7, cr3, [r3], {5}
    36d4:	01050103 	tsteq	r5, r3, lsl #2
    36d8:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    36dc:	5c033705 	stcpl	7, cr3, [r3], {5}
    36e0:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    36e4:	30160505 	andscc	r0, r6, r5, lsl #10
    36e8:	03060106 	movweq	r0, #24838	; 0x6106
    36ec:	06220121 	strteq	r0, [r2], -r1, lsr #2
    36f0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    36f4:	0402000d 	streq	r0, [r2], #-13
    36f8:	8903060e 	stmdbhi	r3, {r1, r2, r3, r9, sl}
    36fc:	0482017c 	streq	r0, [r2], #380	; 0x17c
    3700:	03370502 	teqeq	r7, #8388608	; 0x800000
    3704:	050103e3 	streq	r0, [r1, #-995]	; 0xfffffc1d
    3708:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    370c:	0d050104 	stfeqs	f0, [r5, #-16]
    3710:	7c980306 	ldcvc	3, cr0, [r8], {6}
    3714:	02043c01 	andeq	r3, r4, #256	; 0x100
    3718:	ec033705 	stc	7, cr3, [r3], {5}
    371c:	01050103 	tsteq	r5, r3, lsl #2
    3720:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    3724:	5c033705 	stcpl	7, cr3, [r3], {5}
    3728:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    372c:	30160505 	andscc	r0, r6, r5, lsl #10
    3730:	03060106 	movweq	r0, #24838	; 0x6106
    3734:	06220121 	strteq	r0, [r2], -r1, lsr #2
    3738:	01042001 	tsteq	r4, r1
    373c:	02000d05 	andeq	r0, r0, #320	; 0x140
    3740:	89030b04 	stmdbhi	r3, {r2, r8, r9, fp}
    3744:	0200017c 	andeq	r0, r0, #124, 2
    3748:	05580b04 	ldrbeq	r0, [r8, #-2820]	; 0xfffff4fc
    374c:	0b030611 	bleq	c4f98 <SYSTICK_CYCLES+0x9bf59>
    3750:	06390501 	ldrteq	r0, [r9], -r1, lsl #10
    3754:	023c2e01 	eorseq	r2, ip, #1, 28
    3758:	0101000d 	tsteq	r1, sp
    375c:	000007d8 	ldrdeq	r0, [r0], -r8
    3760:	00e00003 	rsceq	r0, r0, r3
    3764:	01020000 	mrseq	r0, (UNDEF: 2)
    3768:	000d0efb 	strdeq	r0, [sp], -fp
    376c:	01010101 	tsteq	r1, r1, lsl #2
    3770:	01000000 	mrseq	r0, (UNDEF: 0)
    3774:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    3778:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    377c:	2f2e2e2f 	svccs	0x002e2e2f
    3780:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    3784:	2f736f74 	svccs	0x00736f74
    3788:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    378c:	2f786461 	svccs	0x00786461
    3790:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    3794:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    3798:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    379c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    37a0:	2f2e2e2f 	svccs	0x002e2e2f
    37a4:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    37a8:	2f736f74 	svccs	0x00736f74
    37ac:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    37b0:	2f786461 	svccs	0x00786461
    37b4:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    37b8:	6f632f73 	svcvs	0x00632f73
    37bc:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    37c0:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    37c4:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    37c8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    37cc:	2f2e2e00 	svccs	0x002e2e00
    37d0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    37d4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    37d8:	6f747262 	svcvs	0x00747262
    37dc:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    37e0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    37e4:	6f632f78 	svcvs	0x00632f78
    37e8:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    37ec:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    37f0:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    37f4:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    37f8:	5f646165 	svcpl	0x00646165
    37fc:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    3800:	725f6d65 	subsvc	r6, pc, #6464	; 0x1940
    3804:	6d757365 	ldclvs	3, cr7, [r5, #-404]!	; 0xfffffe6c
    3808:	00632e65 	rsbeq	r2, r3, r5, ror #28
    380c:	74000001 	strvc	r0, [r0], #-1
    3810:	6f705f78 	svcvs	0x00705f78
    3814:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    3818:	00000200 	andeq	r0, r0, r0, lsl #4
    381c:	615f7874 	cmpvs	pc, r4, ror r8	; <UNPREDICTABLE>
    3820:	682e6970 	stmdavs	lr!, {r4, r5, r6, r8, fp, sp, lr}
    3824:	00000300 	andeq	r0, r0, r0, lsl #6
    3828:	745f7874 	ldrbvc	r7, [pc], #-2164	; 3830 <_Min_Stack_Size+0x2830>
    382c:	61657268 	cmnvs	r5, r8, ror #4
    3830:	00682e64 	rsbeq	r2, r8, r4, ror #28
    3834:	74000003 	strvc	r0, [r0], #-3
    3838:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    383c:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
    3840:	00030068 	andeq	r0, r3, r8, rrx
    3844:	01050000 	mrseq	r0, (UNDEF: 5)
    3848:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
    384c:	03100021 	tsteq	r0, #33	; 0x21
    3850:	060104ee 	streq	r0, [r1], -lr, ror #9
    3854:	13300601 	teqne	r0, #1048576	; 0x100000
    3858:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    385c:	03050513 	movweq	r0, #21779	; 0x5513
    3860:	26050126 	strcs	r0, [r5], -r6, lsr #2
    3864:	08050106 	stmdaeq	r5, {r1, r2, r8}
    3868:	06090520 	streq	r0, [r9], -r0, lsr #10
    386c:	05200624 	streq	r0, [r0, #-1572]!	; 0xfffff9dc
    3870:	01350605 	teqeq	r5, r5, lsl #12
    3874:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3878:	017faa03 	cmneq	pc, r3, lsl #20
    387c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3880:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    3884:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    3888:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    388c:	01063016 	tsteq	r6, r6, lsl r0
    3890:	01210306 			; <UNDEFINED> instruction: 0x01210306
    3894:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    3898:	cb030601 	blgt	c50a4 <SYSTICK_CYCLES+0x9c065>
    389c:	02000100 	andeq	r0, r0, #0, 2
    38a0:	20060104 	andcs	r0, r6, r4, lsl #2
    38a4:	11040200 	mrsne	r0, R12_usr
    38a8:	02044a06 	andeq	r4, r4, #24576	; 0x6000
    38ac:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    38b0:	a1031104 	tstge	r3, r4, lsl #2
    38b4:	0505017f 	streq	r0, [r5, #-383]	; 0xfffffe81
    38b8:	11040200 	mrsne	r0, R12_usr
    38bc:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    38c0:	042e0611 	strteq	r0, [lr], #-1553	; 0xfffff9ef
    38c4:	04020001 	streq	r0, [r2], #-1
    38c8:	df030611 	svcle	0x00030611
    38cc:	14050100 	strne	r0, [r5], #-256	; 0xffffff00
    38d0:	11040200 	mrsne	r0, R12_usr
    38d4:	08050106 	stmdaeq	r5, {r1, r2, r8}
    38d8:	11040200 	mrsne	r0, R12_usr
    38dc:	06090520 	streq	r0, [r9], -r0, lsr #10
    38e0:	06180540 	ldreq	r0, [r8], -r0, asr #10
    38e4:	200c0501 	andcs	r0, ip, r1, lsl #10
    38e8:	44060d05 	strmi	r0, [r6], #-3333	; 0xfffff2fb
    38ec:	01062b05 	tsteq	r6, r5, lsl #22
    38f0:	03060d05 	movweq	r0, #27909	; 0x6d05
    38f4:	16052009 	strne	r2, [r5], -r9
    38f8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    38fc:	30052506 	andcc	r2, r5, r6, lsl #10
    3900:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3904:	18054d06 	stmdane	r5, {r1, r2, r8, sl, fp, lr}
    3908:	3d050106 	stfccs	f0, [r5, #-24]	; 0xffffffe8
    390c:	060d052e 	streq	r0, [sp], -lr, lsr #10
    3910:	06160541 	ldreq	r0, [r6], -r1, asr #10
    3914:	060d0501 	streq	r0, [sp], -r1, lsl #10
    3918:	0610053d 			; <UNDEFINED> instruction: 0x0610053d
    391c:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3920:	2e01bb03 	vmlacs.f64	d11, d1, d3
    3924:	01061a05 	tsteq	r6, r5, lsl #20
    3928:	21061105 	tstcs	r6, r5, lsl #2
    392c:	01063205 	tsteq	r6, r5, lsl #4
    3930:	21061105 	tstcs	r6, r5, lsl #2
    3934:	01063605 	tsteq	r6, r5, lsl #12
    3938:	21061105 	tstcs	r6, r5, lsl #2
    393c:	01063805 	tsteq	r6, r5, lsl #16
    3940:	21061105 	tstcs	r6, r5, lsl #2
    3944:	01063405 	tsteq	r6, r5, lsl #8
    3948:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    394c:	03060304 	movweq	r0, #25348	; 0x6304
    3950:	002e7e99 	mlaeq	lr, r9, lr, r7
    3954:	58050402 	stmdapl	r5, {r1, sl}
    3958:	07040200 	streq	r0, [r4, -r0, lsl #4]
    395c:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
    3960:	06660609 	strbteq	r0, [r6], -r9, lsl #12
    3964:	05020458 	streq	r0, [r2, #-1112]	; 0xfffffba8
    3968:	7fa10337 	svcvc	0x00a10337
    396c:	17050501 	strne	r0, [r5, -r1, lsl #10]
    3970:	01042e06 	tsteq	r4, r6, lsl #28
    3974:	00da0306 	sbcseq	r0, sl, r6, lsl #6
    3978:	02043c01 	andeq	r3, r4, #256	; 0x100
    397c:	aa033705 	bge	d1598 <SYSTICK_CYCLES+0xa8559>
    3980:	0105017f 	tsteq	r5, pc, ror r1
    3984:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    3988:	5c033705 	stcpl	7, cr3, [r3], {5}
    398c:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3990:	30160505 	andscc	r0, r6, r5, lsl #10
    3994:	03060106 	movweq	r0, #24838	; 0x6106
    3998:	06220121 	strteq	r0, [r2], -r1, lsr #2
    399c:	00010401 	andeq	r0, r1, r1, lsl #8
    39a0:	060e0402 	streq	r0, [lr], -r2, lsl #8
    39a4:	0100cb03 	tsteq	r0, r3, lsl #22
    39a8:	05020482 	streq	r0, [r2, #-1154]	; 0xfffffb7e
    39ac:	7fa10337 	svcvc	0x00a10337
    39b0:	17050501 	strne	r0, [r5, -r1, lsl #10]
    39b4:	01042e06 	tsteq	r4, r6, lsl #28
    39b8:	00da0306 	sbcseq	r0, sl, r6, lsl #6
    39bc:	02043c01 	andeq	r3, r4, #256	; 0x100
    39c0:	aa033705 	bge	d15dc <SYSTICK_CYCLES+0xa859d>
    39c4:	0105017f 	tsteq	r5, pc, ror r1
    39c8:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    39cc:	5c033705 	stcpl	7, cr3, [r3], {5}
    39d0:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    39d4:	30160505 	andscc	r0, r6, r5, lsl #10
    39d8:	03060106 	movweq	r0, #24838	; 0x6106
    39dc:	06220121 	strteq	r0, [r2], -r1, lsr #2
    39e0:	01042001 	tsteq	r4, r1
    39e4:	0b040200 	bleq	1041ec <__RAM_SIZE+0x41ec>
    39e8:	0100cb03 	tsteq	r0, r3, lsl #22
    39ec:	0b040200 	bleq	1041f4 <__RAM_SIZE+0x41f4>
    39f0:	06110558 			; <UNDEFINED> instruction: 0x06110558
    39f4:	05012c03 	streq	r2, [r1, #-3075]	; 0xfffff3fd
    39f8:	20010634 	andcs	r0, r1, r4, lsr r6
    39fc:	2f061105 	svccs	0x00061105
    3a00:	01063405 	tsteq	r6, r5, lsl #8
    3a04:	21061105 	tstcs	r6, r5, lsl #2
    3a08:	01063805 	tsteq	r6, r5, lsl #16
    3a0c:	03061105 	movweq	r1, #24837	; 0x6105
    3a10:	053d200d 	ldreq	r2, [sp, #-13]!
    3a14:	05010650 	streq	r0, [r1, #-1616]	; 0xfffff9b0
    3a18:	35052e5c 	strcc	r2, [r5, #-3676]	; 0xfffff1a4
    3a1c:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    3a20:	061e0523 	ldreq	r0, [lr], -r3, lsr #10
    3a24:	2e140501 	cfmul32cs	mvfx0, mvfx4, mvfx1
    3a28:	42061505 	andmi	r1, r6, #20971520	; 0x1400000
    3a2c:	01063105 	tsteq	r6, r5, lsl #2
    3a30:	32061505 	andcc	r1, r6, #20971520	; 0x1400000
    3a34:	01062105 	tsteq	r6, r5, lsl #2
    3a38:	31061505 	tstcc	r6, r5, lsl #10
    3a3c:	01061805 	tsteq	r6, r5, lsl #16
    3a40:	03061905 	movweq	r1, #26885	; 0x6905
    3a44:	34052e0a 	strcc	r2, [r5], #-3594	; 0xfffff1f6
    3a48:	1c050106 	stfnes	f0, [r5], {6}
    3a4c:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
    3a50:	043c1c03 	ldrteq	r1, [ip], #-3075	; 0xfffff3fd
    3a54:	03370502 	teqeq	r7, #8388608	; 0x800000
    3a58:	05017de0 	streq	r7, [r1, #-3552]	; 0xfffff220
    3a5c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    3a60:	01062f13 	tsteq	r6, r3, lsl pc
    3a64:	21050104 	tstcs	r5, r4, lsl #2
    3a68:	01029c03 	tsteq	r2, r3, lsl #24
    3a6c:	052e2005 	streq	r2, [lr, #-5]!
    3a70:	05320621 	ldreq	r0, [r2, #-1569]!	; 0xfffff9df
    3a74:	05010652 	streq	r0, [r1, #-1618]	; 0xfffff9ae
    3a78:	054d0621 	strbeq	r0, [sp, #-1569]	; 0xfffff9df
    3a7c:	0501062d 	streq	r0, [r1, #-1581]	; 0xfffff9d3
    3a80:	1d052e60 	stcne	14, cr2, [r5, #-384]	; 0xfffffe80
    3a84:	3c110306 	ldccc	3, cr0, [r1], {6}
    3a88:	01065905 	tsteq	r6, r5, lsl #18
    3a8c:	32061d05 	andcc	r1, r6, #320	; 0x140
    3a90:	01063405 	tsteq	r6, r5, lsl #8
    3a94:	061d0520 	ldreq	r0, [sp], -r0, lsr #10
    3a98:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
    3a9c:	05010643 	streq	r0, [r1, #-1603]	; 0xfffff9bd
    3aa0:	21055820 	tstcs	r5, r0, lsr #16
    3aa4:	4a053206 	bmi	1502c4 <__RAM_SIZE+0x502c4>
    3aa8:	21050106 	tstcs	r5, r6, lsl #2
    3aac:	24053f06 	strcs	r3, [r5], #-3846	; 0xfffff0fa
    3ab0:	25050106 	strcs	r0, [r5, #-262]	; 0xfffffefa
    3ab4:	4f053206 	svcmi	0x00053206
    3ab8:	21050106 	tstcs	r5, r6, lsl #2
    3abc:	43054006 	movwmi	r4, #20486	; 0x5006
    3ac0:	6f050106 	svcvs	0x00050106
    3ac4:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    3ac8:	153c1a03 	ldrne	r1, [ip, #-2563]!	; 0xfffff5fd
    3acc:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    3ad0:	7de70337 	stclvc	3, cr0, [r7, #220]!	; 0xdc
    3ad4:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3ad8:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3adc:	015c0337 	cmpeq	ip, r7, lsr r3
    3ae0:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3ae4:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    3ae8:	21030601 	tstcs	r3, r1, lsl #12
    3aec:	01062201 	tsteq	r6, r1, lsl #4
    3af0:	1d050104 	stfnes	f0, [r5, #-16]
    3af4:	028e0306 	addeq	r0, lr, #402653184	; 0x18000000
    3af8:	04020001 	streq	r0, [r2], #-1
    3afc:	00200601 	eoreq	r0, r0, r1, lsl #12
    3b00:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    3b04:	0502044a 	streq	r0, [r2, #-1098]	; 0xfffffbb6
    3b08:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    3b0c:	7dde0311 	ldclvc	3, cr0, [lr, #68]	; 0x44
    3b10:	00050501 	andeq	r0, r5, r1, lsl #10
    3b14:	17110402 	ldrne	r0, [r1, -r2, lsl #8]
    3b18:	11040200 	mrsne	r0, R12_usr
    3b1c:	01042e06 	tsteq	r4, r6, lsl #28
    3b20:	02001d05 	andeq	r1, r0, #320	; 0x140
    3b24:	03061104 	movweq	r1, #24836	; 0x6104
    3b28:	000102a2 	andeq	r0, r1, r2, lsr #5
    3b2c:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    3b30:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3b34:	05210611 	streq	r0, [r1, #-1553]!	; 0xfffff9ef
    3b38:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    3b3c:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    3b40:	05420621 	strbeq	r0, [r2, #-1569]	; 0xfffff9df
    3b44:	2e01064d 	cfmadd32cs	mvax2, mvfx0, mvfx1, mvfx13
    3b48:	32062105 	andcc	r2, r6, #1073741825	; 0x40000001
    3b4c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3b50:	017de503 	cmneq	sp, r3, lsl #10
    3b54:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3b58:	26051505 	strcs	r1, [r5], -r5, lsl #10
    3b5c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3b60:	37056706 	strcc	r6, [r5, -r6, lsl #14]
    3b64:	017f9403 	cmneq	pc, r3, lsl #8
    3b68:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3b6c:	062f1305 	strteq	r1, [pc], -r5, lsl #6
    3b70:	03080501 	movweq	r0, #34049	; 0x8501
    3b74:	050100e8 	streq	r0, [r1, #-232]	; 0xffffff18
    3b78:	053e0609 	ldreq	r0, [lr, #-1545]!	; 0xfffff9f7
    3b7c:	014a0337 	cmpeq	sl, r7, lsr r3
    3b80:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3b84:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    3b88:	06090501 	streq	r0, [r9], -r1, lsl #10
    3b8c:	05013203 	streq	r3, [r1, #-515]	; 0xfffffdfd
    3b90:	01570337 	cmpeq	r7, r7, lsr r3
    3b94:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3b98:	20290309 	eorcs	r0, r9, r9, lsl #6
    3b9c:	5b033705 	blpl	d17b8 <SYSTICK_CYCLES+0xa8779>
    3ba0:	17050501 	strne	r0, [r5, -r1, lsl #10]
    3ba4:	01042e06 	tsteq	r4, r6, lsl #28
    3ba8:	03061d05 	movweq	r1, #27909	; 0x6d05
    3bac:	050102b1 	streq	r0, [r1, #-689]	; 0xfffffd4f
    3bb0:	7ef90319 	mrcvc	3, 7, r0, cr9, cr9, {0}
    3bb4:	06300520 	ldrteq	r0, [r0], -r0, lsr #10
    3bb8:	05202001 	streq	r2, [r0, #-1]!
    3bbc:	2e030621 	cfmadd32cs	mvax1, mvfx0, mvfx3, mvfx1
    3bc0:	05020420 	streq	r0, [r2, #-1056]	; 0xfffffbe0
    3bc4:	7dd40337 	ldclvc	3, cr0, [r4, #220]	; 0xdc
    3bc8:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3bcc:	2f130505 	svccs	0x00130505
    3bd0:	01040106 	tsteq	r4, r6, lsl #2
    3bd4:	a8032505 	stmdage	r3, {r0, r2, r8, sl, sp}
    3bd8:	24050102 	strcs	r0, [r5], #-258	; 0xfffffefe
    3bdc:	0625053c 			; <UNDEFINED> instruction: 0x0625053c
    3be0:	06560540 	ldrbeq	r0, [r6], -r0, asr #10
    3be4:	06250501 	strteq	r0, [r5], -r1, lsl #10
    3be8:	0631054d 	ldrteq	r0, [r1], -sp, asr #10
    3bec:	2e640501 	cdpcs	5, 6, cr0, cr4, cr1, {0}
    3bf0:	02001d05 	andeq	r1, r0, #320	; 0x140
    3bf4:	03060304 	movweq	r0, #25348	; 0x6304
    3bf8:	02004a3e 	andeq	r4, r0, #253952	; 0x3e000
    3bfc:	00580504 	subseq	r0, r8, r4, lsl #10
    3c00:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
    3c04:	09040200 	stmdbeq	r4, {r9}
    3c08:	58066606 	stmdapl	r6, {r1, r2, r9, sl, sp, lr}
    3c0c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3c10:	017dde03 	cmneq	sp, r3, lsl #28
    3c14:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    3c18:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    3c1c:	9d03061d 	stcls	6, cr0, [r3, #-116]	; 0xffffff8c
    3c20:	043c0102 	ldrteq	r0, [ip], #-258	; 0xfffffefe
    3c24:	03370502 	teqeq	r7, #8388608	; 0x800000
    3c28:	05017de7 	streq	r7, [r1, #-3559]	; 0xfffff219
    3c2c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    3c30:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    3c34:	0105015c 	tsteq	r5, ip, asr r1
    3c38:	16050514 			; <UNDEFINED> instruction: 0x16050514
    3c3c:	06010630 			; <UNDEFINED> instruction: 0x06010630
    3c40:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    3c44:	01040106 	tsteq	r4, r6, lsl #2
    3c48:	02001d05 	andeq	r1, r0, #320	; 0x140
    3c4c:	03060e04 	movweq	r0, #28164	; 0x6e04
    3c50:	8201028e 	andhi	r0, r1, #-536870904	; 0xe0000008
    3c54:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3c58:	017dde03 	cmneq	sp, r3, lsl #28
    3c5c:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    3c60:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    3c64:	9d03061d 	stcls	6, cr0, [r3, #-116]	; 0xffffff8c
    3c68:	043c0102 	ldrteq	r0, [ip], #-258	; 0xfffffefe
    3c6c:	03370502 	teqeq	r7, #8388608	; 0x800000
    3c70:	05017de7 	streq	r7, [r1, #-3559]	; 0xfffff219
    3c74:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    3c78:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    3c7c:	0105015c 	tsteq	r5, ip, asr r1
    3c80:	16050514 			; <UNDEFINED> instruction: 0x16050514
    3c84:	06010630 			; <UNDEFINED> instruction: 0x06010630
    3c88:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    3c8c:	04200106 	strteq	r0, [r0], #-262	; 0xfffffefa
    3c90:	001d0501 	andseq	r0, sp, r1, lsl #10
    3c94:	030b0402 	movweq	r0, #46082	; 0xb402
    3c98:	0001028e 	andeq	r0, r1, lr, lsl #5
    3c9c:	580b0402 	stmdapl	fp, {r1, sl}
    3ca0:	03060d05 	movweq	r0, #27909	; 0x6d05
    3ca4:	3505012d 	strcc	r0, [r5, #-301]	; 0xfffffed3
    3ca8:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3cac:	2b052f06 	blcs	14f8cc <__RAM_SIZE+0x4f8cc>
    3cb0:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    3cb4:	2b053506 	blcs	1510d4 <__RAM_SIZE+0x510d4>
    3cb8:	57050106 	strpl	r0, [r5, -r6, lsl #2]
    3cbc:	2e080558 	cfrshl32cs	mvfx8, mvfx8, r0
    3cc0:	32060905 	andcc	r0, r6, #81920	; 0x14000
    3cc4:	01063205 	tsteq	r6, r5, lsl #4
    3cc8:	3f060905 	svccc	0x00060905
    3ccc:	01060c05 	tsteq	r6, r5, lsl #24
    3cd0:	32060d05 	andcc	r0, r6, #320	; 0x140
    3cd4:	01063705 	tsteq	r6, r5, lsl #14
    3cd8:	40060905 	andmi	r0, r6, r5, lsl #18
    3cdc:	01062b05 	tsteq	r6, r5, lsl #22
    3ce0:	052e5705 	streq	r5, [lr, #-1797]!	; 0xfffff8fb
    3ce4:	1c030605 	stcne	6, cr0, [r3], {5}
    3ce8:	0805313c 	stmdaeq	r5, {r2, r3, r4, r5, r8, ip, sp}
    3cec:	09050106 	stmdbeq	r5, {r1, r2, r8}
    3cf0:	01153406 	tsteq	r5, r6, lsl #8
    3cf4:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3cf8:	017cfb03 	cmneq	ip, r3, lsl #22	; <UNPREDICTABLE>
    3cfc:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3d00:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    3d04:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    3d08:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    3d0c:	01063016 	tsteq	r6, r6, lsl r0
    3d10:	01210306 			; <UNDEFINED> instruction: 0x01210306
    3d14:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    3d18:	06090501 	streq	r0, [r9], -r1, lsl #10
    3d1c:	0102fa03 	tsteq	r2, r3, lsl #20	; <UNPREDICTABLE>
    3d20:	01040200 	mrseq	r0, R12_usr
    3d24:	02002006 	andeq	r2, r0, #6
    3d28:	4a061104 	bmi	188140 <__RAM_SIZE+0x88140>
    3d2c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    3d30:	11040200 	mrsne	r0, R12_usr
    3d34:	017cf203 	cmneq	ip, r3, lsl #4	; <UNPREDICTABLE>
    3d38:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    3d3c:	00171104 	andseq	r1, r7, r4, lsl #2
    3d40:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    3d44:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    3d48:	04020009 	streq	r0, [r2], #-9
    3d4c:	8e030611 	mcrhi	6, 0, r0, cr3, cr1, {0}
    3d50:	02000103 	andeq	r0, r0, #-1073741824	; 0xc0000000
    3d54:	20061104 	andcs	r1, r6, r4, lsl #2
    3d58:	11040200 	mrsne	r0, R12_usr
    3d5c:	0c052106 	stfeqs	f2, [r5], {6}
    3d60:	11040200 	mrsne	r0, R12_usr
    3d64:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3d68:	39052606 	stmdbcc	r5, {r1, r2, r9, sl, sp}
    3d6c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    3d70:	0432060d 	ldrteq	r0, [r2], #-1549	; 0xfffff9f3
    3d74:	03370502 	teqeq	r7, #8388608	; 0x800000
    3d78:	05017cf9 	streq	r7, [r1, #-3321]	; 0xfffff307
    3d7c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    3d80:	06260515 			; <UNDEFINED> instruction: 0x06260515
    3d84:	06050501 	streq	r0, [r5], -r1, lsl #10
    3d88:	03370567 	teqeq	r7, #432013312	; 0x19c00000
    3d8c:	05017f94 	streq	r7, [r1, #-3988]	; 0xfffff06c
    3d90:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    3d94:	01062f13 	tsteq	r6, r3, lsl pc
    3d98:	e8030805 	stmda	r3, {r0, r2, fp}
    3d9c:	09050100 	stmdbeq	r5, {r8}
    3da0:	37052206 	strcc	r2, [r5, -r6, lsl #4]
    3da4:	05014a03 	streq	r4, [r1, #-2563]	; 0xfffff5fd
    3da8:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    3dac:	01063016 	tsteq	r6, r6, lsl r0
    3db0:	03060905 	movweq	r0, #26885	; 0x6905
    3db4:	37050132 	smladxcc	r5, r2, r1, r0
    3db8:	05015703 	streq	r5, [r1, #-1795]	; 0xfffff8fd
    3dbc:	09051405 	stmdbeq	r5, {r0, r2, sl, ip}
    3dc0:	05202903 	streq	r2, [r0, #-2307]!	; 0xfffff6fd
    3dc4:	015b0337 	cmpeq	fp, r7, lsr r3
    3dc8:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    3dcc:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    3dd0:	039c0301 	orrseq	r0, ip, #67108864	; 0x4000000
    3dd4:	00090501 	andeq	r0, r9, r1, lsl #10
    3dd8:	06030402 	streq	r0, [r3], -r2, lsl #8
    3ddc:	ba086d03 	blt	21f1f0 <__RAM_SIZE+0x11f1f0>
    3de0:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    3de4:	04020058 	streq	r0, [r2], #-88	; 0xffffffa8
    3de8:	02002e07 	andeq	r2, r0, #7, 28	; 0x70
    3dec:	66060904 	strvs	r0, [r6], -r4, lsl #18
    3df0:	02045806 	andeq	r5, r4, #393216	; 0x60000
    3df4:	f2033705 	vabd.s8	d3, d3, d5
    3df8:	0505017c 	streq	r0, [r5, #-380]	; 0xfffffe84
    3dfc:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    3e00:	06090501 	streq	r0, [r9], -r1, lsl #10
    3e04:	01038903 	tsteq	r3, r3, lsl #18
    3e08:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    3e0c:	7cfb0337 	ldclvc	3, cr0, [fp], #220	; 0xdc
    3e10:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3e14:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3e18:	015c0337 	cmpeq	ip, r7, lsr r3
    3e1c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3e20:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    3e24:	21030601 	tstcs	r3, r1, lsl #12
    3e28:	01062201 	tsteq	r6, r1, lsl #4
    3e2c:	09050104 	stmdbeq	r5, {r2, r8}
    3e30:	0e040200 	cdpeq	2, 0, cr0, cr4, cr0, {0}
    3e34:	02fa0306 	rscseq	r0, sl, #402653184	; 0x18000000
    3e38:	02048201 	andeq	r8, r4, #268435456	; 0x10000000
    3e3c:	f2033705 	vabd.s8	d3, d3, d5
    3e40:	0505017c 	streq	r0, [r5, #-380]	; 0xfffffe84
    3e44:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    3e48:	06090501 	streq	r0, [r9], -r1, lsl #10
    3e4c:	01038903 	tsteq	r3, r3, lsl #18
    3e50:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    3e54:	7cfb0337 	ldclvc	3, cr0, [fp], #220	; 0xdc
    3e58:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3e5c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    3e60:	015c0337 	cmpeq	ip, r7, lsr r3
    3e64:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    3e68:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    3e6c:	21030601 	tstcs	r3, r1, lsl #12
    3e70:	01062201 	tsteq	r6, r1, lsl #4
    3e74:	05010420 	streq	r0, [r1, #-1056]	; 0xfffffbe0
    3e78:	04020009 	streq	r0, [r2], #-9
    3e7c:	02fa030b 	rscseq	r0, sl, #738197504	; 0x2c000000
    3e80:	00050201 	andeq	r0, r5, r1, lsl #4
    3e84:	01050101 	tsteq	r5, r1, lsl #2
    3e88:	00020500 	andeq	r0, r2, r0, lsl #10
    3e8c:	03000000 	movweq	r0, #0
    3e90:	0601049c 			; <UNDEFINED> instruction: 0x0601049c
    3e94:	16220601 	strtne	r0, [r2], -r1, lsl #12
    3e98:	04160505 	ldreq	r0, [r6], #-1285	; 0xfffffafb
    3e9c:	03370502 	teqeq	r7, #8388608	; 0x800000
    3ea0:	0105012b 	tsteq	r5, fp, lsr #2
    3ea4:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    3ea8:	5c033705 	stcpl	7, cr3, [r3], {5}
    3eac:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    3eb0:	30160505 	andscc	r0, r6, r5, lsl #10
    3eb4:	03060106 	movweq	r0, #24838	; 0x6106
    3eb8:	06220121 	strteq	r0, [r2], -r1, lsr #2
    3ebc:	06010401 	streq	r0, [r1], -r1, lsl #8
    3ec0:	05014d03 	streq	r4, [r1, #-3331]	; 0xfffff2fd
    3ec4:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    3ec8:	054e0605 	strbeq	r0, [lr, #-1541]	; 0xfffff9fb
    3ecc:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    3ed0:	09052008 	stmdbeq	r5, {r3, sp}
    3ed4:	200c0306 	andcs	r0, ip, r6, lsl #6
    3ed8:	01060f05 	tsteq	r6, r5, lsl #30
    3edc:	03060905 	movweq	r0, #26885	; 0x6905
    3ee0:	0c05200e 	stceq	0, cr2, [r5], {14}
    3ee4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    3ee8:	10053206 	andne	r3, r5, r6, lsl #4
    3eec:	11050106 	tstne	r5, r6, lsl #2
    3ef0:	34053206 	strcc	r3, [r5], #-518	; 0xfffffdfa
    3ef4:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    3ef8:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    3efc:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    3f00:	0b030611 	bleq	c574c <SYSTICK_CYCLES+0x9c70d>
    3f04:	06340520 	ldrteq	r0, [r4], -r0, lsr #10
    3f08:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    3f0c:	061c054d 	ldreq	r0, [ip], -sp, asr #10
    3f10:	2e410501 	cdpcs	5, 4, cr0, cr1, cr1, {0}
    3f14:	03060905 	movweq	r0, #26885	; 0x6905
    3f18:	05054a51 	streq	r4, [r5, #-2641]	; 0xfffff5af
    3f1c:	042e3603 	strteq	r3, [lr], #-1539	; 0xfffff9fd
    3f20:	03370502 	teqeq	r7, #8388608	; 0x800000
    3f24:	05050161 	streq	r0, [r5, #-353]	; 0xfffffe9f
    3f28:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    3f2c:	03010501 	movweq	r0, #5377	; 0x1501
    3f30:	0220011b 	eoreq	r0, r0, #-1073741818	; 0xc0000006
    3f34:	01010005 	tsteq	r1, r5
    3f38:	000006b7 			; <UNDEFINED> instruction: 0x000006b7
    3f3c:	00e10003 	rsceq	r0, r1, r3
    3f40:	01020000 	mrseq	r0, (UNDEF: 2)
    3f44:	000d0efb 	strdeq	r0, [sp], -fp
    3f48:	01010101 	tsteq	r1, r1, lsl #2
    3f4c:	01000000 	mrseq	r0, (UNDEF: 0)
    3f50:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    3f54:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3f58:	2f2e2e2f 	svccs	0x002e2e2f
    3f5c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    3f60:	2f736f74 	svccs	0x00736f74
    3f64:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    3f68:	2f786461 	svccs	0x00786461
    3f6c:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    3f70:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    3f74:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    3f78:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    3f7c:	2f2e2e2f 	svccs	0x002e2e2f
    3f80:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    3f84:	2f736f74 	svccs	0x00736f74
    3f88:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    3f8c:	2f786461 	svccs	0x00786461
    3f90:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    3f94:	6f632f73 	svcvs	0x00632f73
    3f98:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    3f9c:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    3fa0:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    3fa4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    3fa8:	2f2e2e00 	svccs	0x002e2e00
    3fac:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    3fb0:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    3fb4:	6f747262 	svcvs	0x00747262
    3fb8:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    3fbc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    3fc0:	6f632f78 	svcvs	0x00632f78
    3fc4:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    3fc8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    3fcc:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    3fd0:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    3fd4:	5f646165 	svcpl	0x00646165
    3fd8:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    3fdc:	735f6d65 	cmpvc	pc, #6464	; 0x1940
    3fe0:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    3fe4:	632e646e 			; <UNDEFINED> instruction: 0x632e646e
    3fe8:	00000100 	andeq	r0, r0, r0, lsl #2
    3fec:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    3ff0:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    3ff4:	00020068 	andeq	r0, r2, r8, rrx
    3ff8:	5f787400 	svcpl	0x00787400
    3ffc:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    4000:	00030068 	andeq	r0, r3, r8, rrx
    4004:	5f787400 	svcpl	0x00787400
    4008:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    400c:	00682e72 	rsbeq	r2, r8, r2, ror lr
    4010:	74000003 	strvc	r0, [r0], #-3
    4014:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4018:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    401c:	0300682e 	movweq	r6, #2094	; 0x82e
    4020:	05000000 	streq	r0, [r0, #-0]
    4024:	02050001 	andeq	r0, r5, #1
    4028:	10002484 	andne	r2, r0, r4, lsl #9
    402c:	0105b203 	tsteq	r5, r3, lsl #4
    4030:	30060106 	andcc	r0, r6, r6, lsl #2
    4034:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    4038:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    403c:	010d0305 	tsteq	sp, r5, lsl #6
    4040:	06080534 			; <UNDEFINED> instruction: 0x06080534
    4044:	06050501 	streq	r0, [r5], -r1, lsl #10
    4048:	012e1b03 			; <UNDEFINED> instruction: 0x012e1b03
    404c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    4050:	017ee803 	cmneq	lr, r3, lsl #16
    4054:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    4058:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    405c:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    4060:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    4064:	01063016 	tsteq	r6, r6, lsl r0
    4068:	01210306 			; <UNDEFINED> instruction: 0x01210306
    406c:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    4070:	8d030601 	stchi	6, cr0, [r3, #-4]
    4074:	02000101 	andeq	r0, r0, #1073741824	; 0x40000000
    4078:	20060104 	andcs	r0, r6, r4, lsl #2
    407c:	11040200 	mrsne	r0, R12_usr
    4080:	02044a06 	andeq	r4, r4, #24576	; 0x6000
    4084:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    4088:	df031104 	svcle	0x00031104
    408c:	0505017e 	streq	r0, [r5, #-382]	; 0xfffffe82
    4090:	11040200 	mrsne	r0, R12_usr
    4094:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    4098:	042e0611 	strteq	r0, [lr], #-1553	; 0xfffff9ef
    409c:	04020001 	streq	r0, [r2], #-1
    40a0:	a2030611 	andge	r0, r3, #17825792	; 0x1100000
    40a4:	10050101 	andne	r0, r5, r1, lsl #2
    40a8:	11040200 	mrsne	r0, R12_usr
    40ac:	36050106 	strcc	r0, [r5], -r6, lsl #2
    40b0:	11040200 	mrsne	r0, R12_usr
    40b4:	0005052e 	andeq	r0, r5, lr, lsr #10
    40b8:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    40bc:	0029053f 	eoreq	r0, r9, pc, lsr r5
    40c0:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    40c4:	00050501 	andeq	r0, r5, r1, lsl #10
    40c8:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    40cc:	054a2003 	strbeq	r2, [sl, #-3]
    40d0:	0402000e 	streq	r0, [r2], #-14
    40d4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    40d8:	04020005 	streq	r0, [r2], #-5
    40dc:	05230611 	streq	r0, [r3, #-1553]!	; 0xfffff9ef
    40e0:	04020010 	streq	r0, [r2], #-16
    40e4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    40e8:	04020005 	streq	r0, [r2], #-5
    40ec:	05240611 	streq	r0, [r4, #-1553]!	; 0xfffff9ef
    40f0:	04020008 	streq	r0, [r2], #-8
    40f4:	05010611 	streq	r0, [r1, #-1553]	; 0xfffff9ef
    40f8:	05420609 	strbeq	r0, [r2, #-1545]	; 0xfffff9f7
    40fc:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    4100:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    4104:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    4108:	05210609 	streq	r0, [r1, #-1545]!	; 0xfffff9f7
    410c:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    4110:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    4114:	20010625 	andcs	r0, r1, r5, lsr #12
    4118:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
    411c:	b1030605 	tstlt	r3, r5, lsl #12
    4120:	14052e01 	strne	r2, [r5], #-3585	; 0xfffff1ff
    4124:	08050106 	stmdaeq	r5, {r1, r2, r8}
    4128:	0605052e 	streq	r0, [r5], -lr, lsr #10
    412c:	3c019303 	stccc	3, cr9, [r1], {3}
    4130:	01062b05 	tsteq	r6, r5, lsl #22
    4134:	05580805 	ldrbeq	r0, [r8, #-2053]	; 0xfffff7fb
    4138:	05320609 	ldreq	r0, [r2, #-1545]!	; 0xfffff9f7
    413c:	05010632 	streq	r0, [r1, #-1586]	; 0xfffff9ce
    4140:	053f0609 	ldreq	r0, [pc, #-1545]!	; 3b3f <_Min_Stack_Size+0x2b3f>
    4144:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    4148:	0532060d 	ldreq	r0, [r2, #-1549]!	; 0xfffff9f3
    414c:	05010637 	streq	r0, [r1, #-1591]	; 0xfffff9c9
    4150:	05400609 	strbeq	r0, [r0, #-1545]	; 0xfffff9f7
    4154:	0501062b 	streq	r0, [r1, #-1579]	; 0xfffff9d5
    4158:	05052e57 	streq	r2, [r5, #-3671]	; 0xfffff1a9
    415c:	3c1d0306 	ldccc	3, cr0, [sp], {6}
    4160:	01060805 	tsteq	r6, r5, lsl #16
    4164:	34060905 	strcc	r0, [r6], #-2309	; 0xfffff6fb
    4168:	02040115 	andeq	r0, r4, #1073741829	; 0x40000005
    416c:	b2033705 	andlt	r3, r3, #1310720	; 0x140000
    4170:	0105017b 	tsteq	r5, fp, ror r1
    4174:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    4178:	5c033705 	stcpl	7, cr3, [r3], {5}
    417c:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    4180:	30160505 	andscc	r0, r6, r5, lsl #10
    4184:	03060106 	movweq	r0, #24838	; 0x6106
    4188:	06220121 	strteq	r0, [r2], -r1, lsr #2
    418c:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    4190:	c3030609 	movwgt	r0, #13833	; 0x3609
    4194:	02000104 	andeq	r0, r0, #4, 2
    4198:	20060104 	andcs	r0, r6, r4, lsl #2
    419c:	11040200 	mrsne	r0, R12_usr
    41a0:	02045806 	andeq	r5, r4, #393216	; 0x60000
    41a4:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    41a8:	a9031104 	stmdbge	r3, {r2, r8, ip}
    41ac:	0505017b 	streq	r0, [r5, #-379]	; 0xfffffe85
    41b0:	11040200 	mrsne	r0, R12_usr
    41b4:	04020017 	streq	r0, [r2], #-23	; 0xffffffe9
    41b8:	042e0611 	strteq	r0, [lr], #-1553	; 0xfffff9ef
    41bc:	00090501 	andeq	r0, r9, r1, lsl #10
    41c0:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    41c4:	0104d703 	tsteq	r4, r3, lsl #14
    41c8:	11040200 	mrsne	r0, R12_usr
    41cc:	02002006 	andeq	r2, r0, #6
    41d0:	21061104 	tstcs	r6, r4, lsl #2
    41d4:	02000c05 	andeq	r0, r0, #1280	; 0x500
    41d8:	01061104 	tsteq	r6, r4, lsl #2
    41dc:	26060d05 	strcs	r0, [r6], -r5, lsl #26
    41e0:	01062805 	tsteq	r6, r5, lsl #16
    41e4:	20100520 	andscs	r0, r0, r0, lsr #10
    41e8:	03061105 	movweq	r1, #24837	; 0x6105
    41ec:	3d053c0a 	stccc	12, cr3, [r5, #-40]	; 0xffffffd8
    41f0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    41f4:	02044f06 	andeq	r4, r4, #6, 30
    41f8:	a5033705 	strge	r3, [r3, #-1797]	; 0xfffff8fb
    41fc:	0105017b 	tsteq	r5, fp, ror r1
    4200:	15050514 	strne	r0, [r5, #-1300]	; 0xfffffaec
    4204:	01062605 	tsteq	r6, r5, lsl #12
    4208:	67060505 	strvs	r0, [r6, -r5, lsl #10]
    420c:	94033705 	strls	r3, [r3], #-1797	; 0xfffff8fb
    4210:	0105017f 	tsteq	r5, pc, ror r1
    4214:	13050514 	movwne	r0, #21780	; 0x5514
    4218:	0501062f 	streq	r0, [r1, #-1583]	; 0xfffff9d1
    421c:	00e80308 	rsceq	r0, r8, r8, lsl #6
    4220:	06090501 	streq	r0, [r9], -r1, lsl #10
    4224:	03370522 	teqeq	r7, #142606336	; 0x8800000
    4228:	0105014a 	tsteq	r5, sl, asr #2
    422c:	16050514 			; <UNDEFINED> instruction: 0x16050514
    4230:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    4234:	32030609 	andcc	r0, r3, #9437184	; 0x900000
    4238:	03370501 	teqeq	r7, #4194304	; 0x400000
    423c:	05050157 	streq	r0, [r5, #-343]	; 0xfffffea9
    4240:	03090514 	movweq	r0, #38164	; 0x9514
    4244:	37052029 	strcc	r2, [r5, -r9, lsr #32]
    4248:	05015b03 	streq	r5, [r1, #-2819]	; 0xfffff4fd
    424c:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    4250:	01050104 	tsteq	r5, r4, lsl #2
    4254:	0104f303 	tsteq	r4, r3, lsl #6	; <UNPREDICTABLE>
    4258:	03060905 	movweq	r0, #26885	; 0x6905
    425c:	05207c92 	streq	r7, [r0, #-3218]!	; 0xfffff36e
    4260:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    4264:	0524060d 	streq	r0, [r4, #-1549]!	; 0xfffff9f3
    4268:	05010610 	streq	r0, [r1, #-1552]	; 0xfffff9f0
    426c:	0c030609 	stceq	6, cr0, [r3], {9}
    4270:	062c053c 			; <UNDEFINED> instruction: 0x062c053c
    4274:	201e0501 	andscs	r0, lr, r1, lsl #10
    4278:	03061105 	movweq	r1, #24837	; 0x6105
    427c:	51053c78 	tstpl	r5, r8, ror ip
    4280:	11050106 	tstne	r5, r6, lsl #2
    4284:	2e063106 	adfcss	f3, f6, f6
    4288:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    428c:	03060304 	movweq	r0, #25348	; 0x6304
    4290:	0200200c 	andeq	r2, r0, #12
    4294:	00580504 	subseq	r0, r8, r4, lsl #10
    4298:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
    429c:	09040200 	stmdbeq	r4, {r9}
    42a0:	58066606 	stmdapl	r6, {r1, r2, r9, sl, sp, lr}
    42a4:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    42a8:	017edf03 	cmneq	lr, r3, lsl #30
    42ac:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    42b0:	0601042e 	streq	r0, [r1], -lr, lsr #8
    42b4:	01019c03 	tsteq	r1, r3, lsl #24
    42b8:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    42bc:	7ee80337 	mcrvc	3, 7, r0, cr8, cr7, {1}
    42c0:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    42c4:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    42c8:	015c0337 	cmpeq	ip, r7, lsr r3
    42cc:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    42d0:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    42d4:	21030601 	tstcs	r3, r1, lsl #12
    42d8:	01062201 	tsteq	r6, r1, lsl #4
    42dc:	02000104 	andeq	r0, r0, #4, 2
    42e0:	03060e04 	movweq	r0, #28164	; 0x6e04
    42e4:	9001018d 	andls	r0, r1, sp, lsl #3
    42e8:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    42ec:	017edf03 	cmneq	lr, r3, lsl #30
    42f0:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    42f4:	0601042e 	streq	r0, [r1], -lr, lsr #8
    42f8:	01019c03 	tsteq	r1, r3, lsl #24
    42fc:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    4300:	7ee80337 	mcrvc	3, 7, r0, cr8, cr7, {1}
    4304:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    4308:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    430c:	015c0337 	cmpeq	ip, r7, lsr r3
    4310:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    4314:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    4318:	21030601 	tstcs	r3, r1, lsl #12
    431c:	01062201 	tsteq	r6, r1, lsl #4
    4320:	00010420 	andeq	r0, r1, r0, lsr #8
    4324:	030b0402 	movweq	r0, #46082	; 0xb402
    4328:	0001018d 	andeq	r0, r1, sp, lsl #3
    432c:	580b0402 	stmdapl	fp, {r1, sl}
    4330:	03060d05 	movweq	r0, #27909	; 0x6d05
    4334:	050100c1 	streq	r0, [r1, #-193]	; 0xffffff3f
    4338:	05010630 	streq	r0, [r1, #-1584]	; 0xfffff9d0
    433c:	26030609 	strcs	r0, [r3], -r9, lsl #12
    4340:	062c054a 	strteq	r0, [ip], -sl, asr #10
    4344:	09052001 	stmdbeq	r5, {r0, sp}
    4348:	3c090306 	stccc	3, cr0, [r9], {6}
    434c:	0648052f 	strbeq	r0, [r8], -pc, lsr #10
    4350:	2e540501 	cdpcs	5, 5, cr0, cr4, cr1, {0}
    4354:	052e2d05 	streq	r2, [lr, #-3333]!	; 0xfffff2fb
    4358:	38030609 	stmdacc	r3, {r0, r3, r9, sl}
    435c:	05151620 	ldreq	r1, [r5, #-1568]	; 0xfffff9e0
    4360:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    4364:	3603060d 	strcc	r0, [r3], -sp, lsl #12
    4368:	05312e20 	ldreq	r2, [r1, #-3616]!	; 0xfffff1e0
    436c:	05010629 	streq	r0, [r1, #-1577]	; 0xfffff9d7
    4370:	4c03060d 	stcmi	6, cr0, [r3], {13}
    4374:	0629053c 			; <UNDEFINED> instruction: 0x0629053c
    4378:	05202001 	streq	r2, [r0, #-1]!
    437c:	0521060d 	streq	r0, [r1, #-1549]!	; 0xfffff9f3
    4380:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    4384:	1a03060d 	bne	c5bc0 <SYSTICK_CYCLES+0x9cb81>
    4388:	10052f3c 	andne	r2, r5, ip, lsr pc
    438c:	11050106 	tstne	r5, r6, lsl #2
    4390:	39053406 	stmdbcc	r5, {r1, r2, sl, ip, sp}
    4394:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    4398:	04320611 	ldrteq	r0, [r2], #-1553	; 0xfffff9ef
    439c:	03370502 	teqeq	r7, #8388608	; 0x800000
    43a0:	05017d9b 	streq	r7, [r1, #-3483]	; 0xfffff265
    43a4:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    43a8:	06260515 			; <UNDEFINED> instruction: 0x06260515
    43ac:	06050501 	streq	r0, [r5], -r1, lsl #10
    43b0:	03370567 	teqeq	r7, #432013312	; 0x19c00000
    43b4:	05017f94 	streq	r7, [r1, #-3988]	; 0xfffff06c
    43b8:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    43bc:	01062f13 	tsteq	r6, r3, lsl pc
    43c0:	e8030805 	stmda	r3, {r0, r2, fp}
    43c4:	09050100 	stmdbeq	r5, {r8}
    43c8:	37053006 	strcc	r3, [r5, -r6]
    43cc:	05014a03 	streq	r4, [r1, #-2563]	; 0xfffff5fd
    43d0:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    43d4:	01063016 	tsteq	r6, r6, lsl r0
    43d8:	03060905 	movweq	r0, #26885	; 0x6905
    43dc:	37050132 	smladxcc	r5, r2, r1, r0
    43e0:	05015703 	streq	r5, [r1, #-1795]	; 0xfffff8fd
    43e4:	09051405 	stmdbeq	r5, {r0, r2, sl, ip}
    43e8:	05202903 	streq	r2, [r0, #-2307]!	; 0xfffff6fd
    43ec:	015b0337 	cmpeq	fp, r7, lsr r3
    43f0:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    43f4:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    43f8:	fb03060d 	blx	c5c36 <SYSTICK_CYCLES+0x9cbf7>
    43fc:	09050102 	stmdbeq	r5, {r1, r8}
    4400:	05201303 	streq	r1, [r0, #-771]!	; 0xfffffcfd
    4404:	0501063b 	streq	r0, [r1, #-1595]	; 0xfffff9c5
    4408:	09055820 	stmdbeq	r5, {r5, fp, ip, lr}
    440c:	00d00306 	sbcseq	r0, r0, r6, lsl #6
    4410:	062f052e 	strteq	r0, [pc], -lr, lsr #10
    4414:	580c0501 	stmdapl	ip, {r0, r8, sl}
    4418:	32060d05 	andcc	r0, r6, #320	; 0x140
    441c:	01063605 	tsteq	r6, r5, lsl #12
    4420:	3f060d05 	svccc	0x00060d05
    4424:	01061005 	tsteq	r6, r5
    4428:	32061105 	andcc	r1, r6, #1073741825	; 0x40000001
    442c:	01063b05 	tsteq	r6, r5, lsl #22
    4430:	40060d05 	andmi	r0, r6, r5, lsl #26
    4434:	01062f05 	tsteq	r6, r5, lsl #30
    4438:	052e5b05 	streq	r5, [lr, #-2821]!	; 0xfffff4fb
    443c:	1a030609 	bne	c5c68 <SYSTICK_CYCLES+0x9cc29>
    4440:	0c052f3c 	stceq	15, cr2, [r5], {60}	; 0x3c
    4444:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    4448:	39054206 	stmdbcc	r5, {r1, r2, r9, lr}
    444c:	052e0106 	streq	r0, [lr, #-262]!	; 0xfffffefa
    4450:	0432060d 	ldrteq	r0, [r2], #-1549	; 0xfffff9f3
    4454:	03370502 	teqeq	r7, #8388608	; 0x800000
    4458:	05017c80 	streq	r7, [r1, #-3200]	; 0xfffff380
    445c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    4460:	06260515 			; <UNDEFINED> instruction: 0x06260515
    4464:	06050501 	streq	r0, [r5], -r1, lsl #10
    4468:	03370567 	teqeq	r7, #432013312	; 0x19c00000
    446c:	05017f94 	streq	r7, [r1, #-3988]	; 0xfffff06c
    4470:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    4474:	01062f13 	tsteq	r6, r3, lsl pc
    4478:	e8030805 	stmda	r3, {r0, r2, fp}
    447c:	09050100 	stmdbeq	r5, {r8}
    4480:	37053e06 	strcc	r3, [r5, -r6, lsl #28]
    4484:	05014a03 	streq	r4, [r1, #-2563]	; 0xfffff5fd
    4488:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    448c:	01063016 	tsteq	r6, r6, lsl r0
    4490:	03060905 	movweq	r0, #26885	; 0x6905
    4494:	37050132 	smladxcc	r5, r2, r1, r0
    4498:	05015703 	streq	r5, [r1, #-1795]	; 0xfffff8fd
    449c:	09051405 	stmdbeq	r5, {r0, r2, sl, ip}
    44a0:	05202903 	streq	r2, [r0, #-2307]!	; 0xfffff6fd
    44a4:	015b0337 	cmpeq	fp, r7, lsr r3
    44a8:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    44ac:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    44b0:	96030609 	strls	r0, [r3], -r9, lsl #12
    44b4:	02000104 	andeq	r0, r0, #4, 2
    44b8:	3c030304 	stccc	3, cr0, [r3], {4}
    44bc:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    44c0:	02005805 	andeq	r5, r0, #327680	; 0x50000
    44c4:	002e0704 	eoreq	r0, lr, r4, lsl #14
    44c8:	06090402 	streq	r0, [r9], -r2, lsl #8
    44cc:	04580666 	ldrbeq	r0, [r8], #-1638	; 0xfffff99a
    44d0:	03370502 	teqeq	r7, #8388608	; 0x800000
    44d4:	05017ba9 	streq	r7, [r1, #-2985]	; 0xfffff457
    44d8:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    44dc:	09050104 	stmdbeq	r5, {r2, r8}
    44e0:	04d20306 	ldrbeq	r0, [r2], #774	; 0x306
    44e4:	02043c01 	andeq	r3, r4, #256	; 0x100
    44e8:	b2033705 	andlt	r3, r3, #1310720	; 0x140000
    44ec:	0105017b 	tsteq	r5, fp, ror r1
    44f0:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    44f4:	5c033705 	stcpl	7, cr3, [r3], {5}
    44f8:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    44fc:	30160505 	andscc	r0, r6, r5, lsl #10
    4500:	03060106 	movweq	r0, #24838	; 0x6106
    4504:	06220121 	strteq	r0, [r2], -r1, lsr #2
    4508:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    450c:	04020009 	streq	r0, [r2], #-9
    4510:	c303060e 	movwgt	r0, #13838	; 0x360e
    4514:	04900104 	ldreq	r0, [r0], #260	; 0x104
    4518:	03370502 	teqeq	r7, #8388608	; 0x800000
    451c:	05017ba9 	streq	r7, [r1, #-2985]	; 0xfffff457
    4520:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    4524:	09050104 	stmdbeq	r5, {r2, r8}
    4528:	04d20306 	ldrbeq	r0, [r2], #774	; 0x306
    452c:	02043c01 	andeq	r3, r4, #256	; 0x100
    4530:	b2033705 	andlt	r3, r3, #1310720	; 0x140000
    4534:	0105017b 	tsteq	r5, fp, ror r1
    4538:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    453c:	5c033705 	stcpl	7, cr3, [r3], {5}
    4540:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    4544:	30160505 	andscc	r0, r6, r5, lsl #10
    4548:	03060106 	movweq	r0, #24838	; 0x6106
    454c:	06220121 	strteq	r0, [r2], -r1, lsr #2
    4550:	01042001 	tsteq	r4, r1
    4554:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4558:	c3030b04 	movwgt	r0, #15108	; 0x3b04
    455c:	02000104 	andeq	r0, r0, #4, 2
    4560:	05580b04 	ldrbeq	r0, [r8, #-2820]	; 0xfffff4fc
    4564:	10030611 	andne	r0, r3, r1, lsl r6
    4568:	06390501 	ldrteq	r0, [r9], -r1, lsl #10
    456c:	00200201 	eoreq	r0, r0, r1, lsl #4
    4570:	01050101 	tsteq	r5, r1, lsl #2
    4574:	00020500 	andeq	r0, r2, r0, lsl #10
    4578:	03000000 	movweq	r0, #0
    457c:	0601058b 	streq	r0, [r1], -fp, lsl #11
    4580:	14220601 	strtne	r0, [r2], #-1537	; 0xfffff9ff
    4584:	04150505 	ldreq	r0, [r5], #-1285	; 0xfffffafb
    4588:	03370502 	teqeq	r7, #8388608	; 0x800000
    458c:	05017fbf 	streq	r7, [r1, #-4031]	; 0xfffff041
    4590:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    4594:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    4598:	0105015c 	tsteq	r5, ip, asr r1
    459c:	16050514 			; <UNDEFINED> instruction: 0x16050514
    45a0:	06010630 			; <UNDEFINED> instruction: 0x06010630
    45a4:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    45a8:	01040106 	tsteq	r4, r6, lsl #2
    45ac:	01390306 	teqeq	r9, r6, lsl #6
    45b0:	01061405 	tsteq	r6, r5, lsl #8
    45b4:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    45b8:	13030605 	movwne	r0, #13829	; 0x3605
    45bc:	0502042e 	streq	r0, [r2, #-1070]	; 0xfffffbd2
    45c0:	7fa00337 	svcvc	0x00a00337
    45c4:	17050501 	strne	r0, [r5, -r1, lsl #10]
    45c8:	01042e06 	tsteq	r4, r6, lsl #28
    45cc:	00de0306 	sbcseq	r0, lr, r6, lsl #6
    45d0:	06010501 	streq	r0, [r1], -r1, lsl #10
    45d4:	0609052f 	streq	r0, [r9], -pc, lsr #10
    45d8:	05206f03 	streq	r6, [r0, #-3843]!	; 0xfffff0fd
    45dc:	0501062c 	streq	r0, [r1, #-1580]	; 0xfffff9d4
    45e0:	15310609 	ldrne	r0, [r1, #-1545]!	; 0xfffff9f7
    45e4:	01062305 	tsteq	r6, r5, lsl #6
    45e8:	4d060905 	vstrmi.16	s0, [r6, #-10]	; <UNPREDICTABLE>
    45ec:	03023c06 	movweq	r3, #11270	; 0x2c06
    45f0:	69010100 	stmdbvs	r1, {r8}
    45f4:	03000004 	movweq	r0, #4
    45f8:	0000dd00 	andeq	sp, r0, r0, lsl #26
    45fc:	fb010200 	blx	44e06 <SYSTICK_CYCLES+0x1bdc7>
    4600:	01000d0e 	tsteq	r0, lr, lsl #26
    4604:	00010101 	andeq	r0, r1, r1, lsl #2
    4608:	00010000 	andeq	r0, r1, r0
    460c:	2e2e0100 	sufcse	f0, f6, f0
    4610:	2f2e2e2f 	svccs	0x002e2e2f
    4614:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 4564 <_Min_Stack_Size+0x3564>
    4618:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    461c:	742f736f 	strtvc	r7, [pc], #-879	; 4624 <_Min_Stack_Size+0x3624>
    4620:	61657268 	cmnvs	r5, r8, ror #4
    4624:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    4628:	6f6d6d6f 	svcvs	0x006d6d6f
    462c:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    4630:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    4634:	2f2e2e2f 	svccs	0x002e2e2f
    4638:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 4588 <_Min_Stack_Size+0x3588>
    463c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    4640:	742f736f 	strtvc	r7, [pc], #-879	; 4648 <_Min_Stack_Size+0x3648>
    4644:	61657268 	cmnvs	r5, r8, ror #4
    4648:	702f7864 	eorvc	r7, pc, r4, ror #16
    464c:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
    4650:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    4654:	5f786574 	svcpl	0x00786574
    4658:	2f33336d 	svccs	0x0033336d
    465c:	2f756e67 	svccs	0x00756e67
    4660:	00636e69 	rsbeq	r6, r3, r9, ror #28
    4664:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4668:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    466c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4670:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    4674:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    4678:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    467c:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 45c8 <_Min_Stack_Size+0x35c8>
    4680:	2f6e6f6d 	svccs	0x006e6f6d
    4684:	00636e69 	rsbeq	r6, r3, r9, ror #28
    4688:	5f787400 	svcpl	0x00787400
    468c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    4690:	745f6461 	ldrbvc	r6, [pc], #-1121	; 4698 <_Min_Stack_Size+0x3698>
    4694:	5f656d69 	svcpl	0x00656d69
    4698:	63696c73 	cmnvs	r9, #29440	; 0x7300
    469c:	00632e65 	rsbeq	r2, r3, r5, ror #28
    46a0:	74000001 	strvc	r0, [r0], #-1
    46a4:	6f705f78 	svcvs	0x00705f78
    46a8:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    46ac:	00000200 	andeq	r0, r0, r0, lsl #4
    46b0:	615f7874 	cmpvs	pc, r4, ror r8	; <UNPREDICTABLE>
    46b4:	682e6970 	stmdavs	lr!, {r4, r5, r6, r8, fp, sp, lr}
    46b8:	00000300 	andeq	r0, r0, r0, lsl #6
    46bc:	745f7874 	ldrbvc	r7, [pc], #-2164	; 46c4 <_Min_Stack_Size+0x36c4>
    46c0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    46c4:	0300682e 	movweq	r6, #2094	; 0x82e
    46c8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    46cc:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    46d0:	2e646165 	powcssz	f6, f4, f5
    46d4:	00030068 	andeq	r0, r3, r8, rrx
    46d8:	01050000 	mrseq	r0, (UNDEF: 5)
    46dc:	44020500 	strmi	r0, [r2], #-1280	; 0xfffffb00
    46e0:	03100027 	tsteq	r0, #39	; 0x27
    46e4:	220100ce 	andcs	r0, r1, #206	; 0xce
    46e8:	05051414 	streq	r1, [r5, #-1044]	; 0xfffffbec
    46ec:	0401331a 	streq	r3, [r1], #-794	; 0xfffffce6
    46f0:	03370502 	teqeq	r7, #8388608	; 0x800000
    46f4:	050103f0 	streq	r0, [r1, #-1008]	; 0xfffffc10
    46f8:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    46fc:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    4700:	0105015c 	tsteq	r5, ip, asr r1
    4704:	16050514 			; <UNDEFINED> instruction: 0x16050514
    4708:	06010630 			; <UNDEFINED> instruction: 0x06010630
    470c:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    4710:	01040106 	tsteq	r4, r6, lsl #2
    4714:	7c850306 	stcvc	3, cr0, [r5], {6}
    4718:	04020001 	streq	r0, [r2], #-1
    471c:	00200601 	eoreq	r0, r0, r1, lsl #12
    4720:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    4724:	0502044a 	streq	r0, [r2, #-1098]	; 0xfffffbb6
    4728:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    472c:	03e70311 	mvneq	r0, #1140850688	; 0x44000000
    4730:	00050501 	andeq	r0, r5, r1, lsl #10
    4734:	17110402 	ldrne	r0, [r1, -r2, lsl #8]
    4738:	11040200 	mrsne	r0, R12_usr
    473c:	01042e06 	tsteq	r4, r6, lsl #28
    4740:	11040200 	mrsne	r0, R12_usr
    4744:	7c970306 	ldcvc	3, cr0, [r7], {6}
    4748:	04020001 	streq	r0, [r2], #-1
    474c:	02041611 	andeq	r1, r4, #17825792	; 0x1100000
    4750:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    4754:	e9031104 	stmdb	r3, {r2, r8, ip}
    4758:	01050103 	tsteq	r5, r3, lsl #2
    475c:	11040200 	mrsne	r0, R12_usr
    4760:	00050514 	andeq	r0, r5, r4, lsl r5
    4764:	14110402 	ldrne	r0, [r1], #-1026	; 0xfffffbfe
    4768:	02003705 	andeq	r3, r0, #1310720	; 0x140000
    476c:	5c031104 	stfpls	f1, [r3], {4}
    4770:	00010501 	andeq	r0, r1, r1, lsl #10
    4774:	14110402 	ldrne	r0, [r1], #-1026	; 0xfffffbfe
    4778:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    477c:	00161104 	andseq	r1, r6, r4, lsl #2
    4780:	30110402 	andscc	r0, r1, r2, lsl #8
    4784:	11040200 	mrsne	r0, R12_usr
    4788:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    478c:	03061104 	movweq	r1, #24836	; 0x6104
    4790:	02000121 	andeq	r0, r0, #1073741832	; 0x40000008
    4794:	00221104 	eoreq	r1, r2, r4, lsl #2
    4798:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    479c:	00010401 	andeq	r0, r1, r1, lsl #8
    47a0:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    47a4:	017c8f03 	cmneq	ip, r3, lsl #30
    47a8:	02002205 	andeq	r2, r0, #1342177280	; 0x50000000
    47ac:	01061104 	tsteq	r6, r4, lsl #2
    47b0:	11040200 	mrsne	r0, R12_usr
    47b4:	00050520 	andeq	r0, r5, r0, lsr #10
    47b8:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    47bc:	00080531 	andeq	r0, r8, r1, lsr r5
    47c0:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    47c4:	06090501 	streq	r0, [r9], -r1, lsl #10
    47c8:	06180524 	ldreq	r0, [r8], -r4, lsr #10
    47cc:	200c0501 	andcs	r0, ip, r1, lsl #10
    47d0:	03060505 	movweq	r0, #25861	; 0x6505
    47d4:	0204203c 	andeq	r2, r4, #60	; 0x3c
    47d8:	9a033705 	bls	d23f4 <SYSTICK_CYCLES+0xa93b5>
    47dc:	05050103 	streq	r0, [r5, #-259]	; 0xfffffefd
    47e0:	042e0617 	strteq	r0, [lr], #-1559	; 0xfffff9e9
    47e4:	e6030601 	str	r0, [r3], -r1, lsl #12
    47e8:	0105017c 	tsteq	r5, ip, ror r1
    47ec:	05051906 	streq	r1, [r5, #-2310]	; 0xfffff6fa
    47f0:	03040200 	movweq	r0, #16896	; 0x4200
    47f4:	7fa70306 	svcvc	0x00a70306
    47f8:	04020020 	streq	r0, [r2], #-32	; 0xffffffe0
    47fc:	02005805 	andeq	r5, r0, #327680	; 0x50000
    4800:	002e0704 	eoreq	r0, lr, r4, lsl #14
    4804:	06090402 	streq	r0, [r9], -r2, lsl #8
    4808:	04580666 	ldrbeq	r0, [r8], #-1638	; 0xfffff99a
    480c:	03370502 	teqeq	r7, #8388608	; 0x800000
    4810:	050103e7 	streq	r0, [r1, #-999]	; 0xfffffc19
    4814:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    4818:	03060104 	movweq	r0, #24836	; 0x6104
    481c:	3c017c94 	stccc	12, cr7, [r1], {148}	; 0x94
    4820:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    4824:	0103f003 	tsteq	r3, r3	; <UNPREDICTABLE>
    4828:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    482c:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    4830:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    4834:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    4838:	01063016 	tsteq	r6, r6, lsl r0
    483c:	01210306 			; <UNDEFINED> instruction: 0x01210306
    4840:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    4844:	04020001 	streq	r0, [r2], #-1
    4848:	8503060e 	strhi	r0, [r3, #-1550]	; 0xfffff9f2
    484c:	0482017c 	streq	r0, [r2], #380	; 0x17c
    4850:	03370502 	teqeq	r7, #8388608	; 0x800000
    4854:	050103e7 	streq	r0, [r1, #-999]	; 0xfffffc19
    4858:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    485c:	03060104 	movweq	r0, #24836	; 0x6104
    4860:	3c017c94 	stccc	12, cr7, [r1], {148}	; 0x94
    4864:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    4868:	0103f003 	tsteq	r3, r3	; <UNPREDICTABLE>
    486c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    4870:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    4874:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    4878:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    487c:	01063016 	tsteq	r6, r6, lsl r0
    4880:	01210306 			; <UNDEFINED> instruction: 0x01210306
    4884:	20010622 	andcs	r0, r1, r2, lsr #12
    4888:	02000104 	andeq	r0, r0, #4, 2
    488c:	85030b04 	strhi	r0, [r3, #-2820]	; 0xfffff4fc
    4890:	0200017c 	andeq	r0, r0, #124, 2
    4894:	06580b04 	ldrbeq	r0, [r8], -r4, lsl #22
    4898:	0100cd03 	tsteq	r0, r3, lsl #26
    489c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    48a0:	01039a03 	tsteq	r3, r3, lsl #20
    48a4:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    48a8:	0601042e 	streq	r0, [r1], -lr, lsr #8
    48ac:	017ce603 	cmneq	ip, r3, lsl #12
    48b0:	43030d05 	movwmi	r0, #15621	; 0x3d05
    48b4:	063e0520 	ldrteq	r0, [lr], -r0, lsr #10
    48b8:	20300501 	eorscs	r0, r0, r1, lsl #10
    48bc:	23060d05 	movwcs	r0, #27909	; 0x6d05
    48c0:	01062205 	tsteq	r6, r5, lsl #4
    48c4:	32060d05 	andcc	r0, r6, #320	; 0x140
    48c8:	01061c05 	tsteq	r6, r5, lsl #24
    48cc:	05201005 	streq	r1, [r0, #-5]!
    48d0:	05320611 	ldreq	r0, [r2, #-1553]!	; 0xfffff9ef
    48d4:	05010620 	streq	r0, [r1, #-1568]	; 0xfffff9e0
    48d8:	14052044 	strne	r2, [r5], #-68	; 0xffffffbc
    48dc:	06050520 	streq	r0, [r5], -r0, lsr #10
    48e0:	042e2d03 	strteq	r2, [lr], #-3331	; 0xfffff2fd
    48e4:	03370502 	teqeq	r7, #8388608	; 0x800000
    48e8:	0501039a 	streq	r0, [r1, #-922]	; 0xfffffc66
    48ec:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    48f0:	03060104 	movweq	r0, #24836	; 0x6104
    48f4:	1b017ce6 	blne	63c94 <SYSTICK_CYCLES+0x3ac55>
    48f8:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    48fc:	01039a03 	tsteq	r3, r3, lsl #20
    4900:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    4904:	0601042e 	streq	r0, [r1], -lr, lsr #8
    4908:	017ce603 	cmneq	ip, r3, lsl #12
    490c:	55031505 	strpl	r1, [r3, #-1285]	; 0xfffffafb
    4910:	06500520 	ldrbeq	r0, [r0], -r0, lsr #10
    4914:	06150501 	ldreq	r0, [r5], -r1, lsl #10
    4918:	06470541 	strbeq	r0, [r7], -r1, asr #10
    491c:	4a2c0501 	bmi	b05d28 <__RAM_SIZE+0xa05d28>
    4920:	33061505 	movwcc	r1, #25861	; 0x6505
    4924:	01062005 	tsteq	r6, r5
    4928:	052e4905 	streq	r4, [lr, #-2309]!	; 0xfffff6fb
    492c:	053f0615 	ldreq	r0, [pc, #-1557]!	; 431f <_Min_Stack_Size+0x331f>
    4930:	0501063c 	streq	r0, [r1, #-1596]	; 0xfffff9c4
    4934:	05510615 	ldrbeq	r0, [r1, #-1557]	; 0xfffff9eb
    4938:	01120305 	tsteq	r2, r5, lsl #6
    493c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    4940:	01039a03 	tsteq	r3, r3, lsl #20
    4944:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    4948:	0601042e 	streq	r0, [r1], -lr, lsr #8
    494c:	017ce603 	cmneq	ip, r3, lsl #12
    4950:	01060805 	tsteq	r6, r5, lsl #16
    4954:	32060905 	andcc	r0, r6, #81920	; 0x14000
    4958:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    495c:	039a0337 	orrseq	r0, sl, #-603979776	; 0xdc000000
    4960:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    4964:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    4968:	015c0337 	cmpeq	ip, r7, lsr r3
    496c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    4970:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    4974:	21030601 	tstcs	r3, r1, lsl #12
    4978:	01062201 	tsteq	r6, r1, lsl #4
    497c:	09050104 	stmdbeq	r5, {r2, r8}
    4980:	7cdb0306 	ldclvc	3, cr0, [fp], {6}
    4984:	00200601 	eoreq	r0, r0, r1, lsl #12
    4988:	06110402 	ldreq	r0, [r1], -r2, lsl #8
    498c:	0502043c 	streq	r0, [r2, #-1084]	; 0xfffffbc4
    4990:	04020037 	streq	r0, [r2], #-55	; 0xffffffc9
    4994:	03910311 	orrseq	r0, r1, #1140850688	; 0x44000000
    4998:	00050501 	andeq	r0, r5, r1, lsl #10
    499c:	17110402 	ldrne	r0, [r1, -r2, lsl #8]
    49a0:	11040200 	mrsne	r0, R12_usr
    49a4:	01042e06 	tsteq	r4, r6, lsl #28
    49a8:	02000105 	andeq	r0, r0, #1073741825	; 0x40000001
    49ac:	ed031104 	stfs	f1, [r3, #-16]
    49b0:	0905017c 	stmdbeq	r5, {r2, r3, r4, r5, r6, r8}
    49b4:	03040200 	movweq	r0, #16896	; 0x4200
    49b8:	02001d06 	andeq	r1, r0, #384	; 0x180
    49bc:	00580504 	subseq	r0, r8, r4, lsl #10
    49c0:	2e070402 	cdpcs	4, 0, cr0, cr7, cr2, {0}
    49c4:	09040200 	stmdbeq	r4, {r9}
    49c8:	58066606 	stmdapl	r6, {r1, r2, r9, sl, sp, lr}
    49cc:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    49d0:	01039103 	tsteq	r3, r3, lsl #2
    49d4:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    49d8:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    49dc:	ea030609 	b	c6208 <SYSTICK_CYCLES+0x9d1c9>
    49e0:	043c017c 	ldrteq	r0, [ip], #-380	; 0xfffffe84
    49e4:	03370502 	teqeq	r7, #8388608	; 0x800000
    49e8:	0501039a 	streq	r0, [r1, #-922]	; 0xfffffc66
    49ec:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    49f0:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    49f4:	0105015c 	tsteq	r5, ip, asr r1
    49f8:	16050514 			; <UNDEFINED> instruction: 0x16050514
    49fc:	06010630 			; <UNDEFINED> instruction: 0x06010630
    4a00:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    4a04:	01040106 	tsteq	r4, r6, lsl #2
    4a08:	02000905 	andeq	r0, r0, #81920	; 0x14000
    4a0c:	03060e04 	movweq	r0, #28164	; 0x6e04
    4a10:	82017cdb 	andhi	r7, r1, #56064	; 0xdb00
    4a14:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    4a18:	01039103 	tsteq	r3, r3, lsl #2
    4a1c:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    4a20:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    4a24:	ea030609 	b	c6250 <SYSTICK_CYCLES+0x9d211>
    4a28:	043c017c 	ldrteq	r0, [ip], #-380	; 0xfffffe84
    4a2c:	03370502 	teqeq	r7, #8388608	; 0x800000
    4a30:	0501039a 	streq	r0, [r1, #-922]	; 0xfffffc66
    4a34:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    4a38:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    4a3c:	0105015c 	tsteq	r5, ip, asr r1
    4a40:	16050514 			; <UNDEFINED> instruction: 0x16050514
    4a44:	06010630 			; <UNDEFINED> instruction: 0x06010630
    4a48:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    4a4c:	04200106 	strteq	r0, [r0], #-262	; 0xfffffefa
    4a50:	00090501 	andeq	r0, r9, r1, lsl #10
    4a54:	030b0402 	movweq	r0, #46082	; 0xb402
    4a58:	02017cdb 	andeq	r7, r1, #56064	; 0xdb00
    4a5c:	01010016 	tsteq	r1, r6, lsl r0
    4a60:	0000017c 	andeq	r0, r0, ip, ror r1
    4a64:	00cc0003 	sbceq	r0, ip, r3
    4a68:	01020000 	mrseq	r0, (UNDEF: 2)
    4a6c:	000d0efb 	strdeq	r0, [sp], -fp
    4a70:	01010101 	tsteq	r1, r1, lsl #2
    4a74:	01000000 	mrseq	r0, (UNDEF: 0)
    4a78:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    4a7c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4a80:	2f2e2e2f 	svccs	0x002e2e2f
    4a84:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    4a88:	2f736f74 	svccs	0x00736f74
    4a8c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    4a90:	2f786461 	svccs	0x00786461
    4a94:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    4a98:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    4a9c:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    4aa0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4aa4:	2f2e2e2f 	svccs	0x002e2e2f
    4aa8:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    4aac:	2f736f74 	svccs	0x00736f74
    4ab0:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    4ab4:	2f786461 	svccs	0x00786461
    4ab8:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    4abc:	6f632f73 	svcvs	0x00632f73
    4ac0:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    4ac4:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    4ac8:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    4acc:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4ad0:	2f2e2e00 	svccs	0x002e2e00
    4ad4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4ad8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    4adc:	6f747262 	svcvs	0x00747262
    4ae0:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    4ae4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    4ae8:	6f632f78 	svcvs	0x00632f78
    4aec:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    4af0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4af4:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    4af8:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    4afc:	5f646165 	svcpl	0x00646165
    4b00:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    4b04:	2e74756f 	cdpcs	5, 7, cr7, cr4, cr15, {3}
    4b08:	00010063 	andeq	r0, r1, r3, rrx
    4b0c:	5f787400 	svcpl	0x00787400
    4b10:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    4b14:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    4b18:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    4b1c:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    4b20:	0300682e 	movweq	r6, #2094	; 0x82e
    4b24:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    4b28:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    4b2c:	2e646165 	powcssz	f6, f4, f5
    4b30:	00030068 	andeq	r0, r3, r8, rrx
    4b34:	01050000 	mrseq	r0, (UNDEF: 5)
    4b38:	c0020500 	andgt	r0, r2, r0, lsl #10
    4b3c:	03100028 	tsteq	r0, #40	; 0x28
    4b40:	060100ce 	streq	r0, [r1], -lr, asr #1
    4b44:	14220601 	strtne	r0, [r2], #-1537	; 0xfffff9ff
    4b48:	05051313 	streq	r1, [r5, #-787]	; 0xfffffced
    4b4c:	02041516 	andeq	r1, r4, #92274688	; 0x5800000
    4b50:	f6033705 			; <UNDEFINED> instruction: 0xf6033705
    4b54:	01050103 	tsteq	r5, r3, lsl #2
    4b58:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    4b5c:	5c033705 	stcpl	7, cr3, [r3], {5}
    4b60:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    4b64:	30160505 	andscc	r0, r6, r5, lsl #10
    4b68:	03060106 	movweq	r0, #24838	; 0x6106
    4b6c:	06220121 	strteq	r0, [r2], -r1, lsr #2
    4b70:	06010401 	streq	r0, [r1], -r1, lsl #8
    4b74:	017c8203 	cmneq	ip, r3, lsl #4
    4b78:	01061405 	tsteq	r6, r5, lsl #8
    4b7c:	05200805 	streq	r0, [r0, #-2053]!	; 0xfffff7fb
    4b80:	1e030609 	cfmadd32ne	mvax0, mvfx0, mvfx3, mvfx9
    4b84:	062d052e 	strteq	r0, [sp], -lr, lsr #10
    4b88:	06090501 	streq	r0, [r9], -r1, lsl #10
    4b8c:	0614054d 	ldreq	r0, [r4], -sp, asr #10
    4b90:	2e3a0501 	cdpcs	5, 3, cr0, cr10, cr1, {0}
    4b94:	40060905 	andmi	r0, r6, r5, lsl #18
    4b98:	01061905 	tsteq	r6, r5, lsl #18
    4b9c:	03060905 	movweq	r0, #26885	; 0x6905
    4ba0:	0a03200a 	beq	ccbd0 <SYSTICK_CYCLES+0xa3b91>
    4ba4:	060c0501 	streq	r0, [ip], -r1, lsl #10
    4ba8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    4bac:	34090524 	strcc	r0, [r9], #-1316	; 0xfffffadc
    4bb0:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    4bb4:	0103a703 	tsteq	r3, r3, lsl #14
    4bb8:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    4bbc:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    4bc0:	7cd70301 	ldclvc	3, cr0, [r7], {1}
    4bc4:	06090501 	streq	r0, [r9], -r1, lsl #10
    4bc8:	31204003 			; <UNDEFINED> instruction: 0x31204003
    4bcc:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    4bd0:	0103e103 	tsteq	r3, r3, lsl #2
    4bd4:	05170505 	ldreq	r0, [r7, #-1285]	; 0xfffffafb
    4bd8:	02300601 	eorseq	r0, r0, #1048576	; 0x100000
    4bdc:	01010003 	tsteq	r1, r3
    4be0:	00000143 	andeq	r0, r0, r3, asr #2
    4be4:	00e40003 	rsceq	r0, r4, r3
    4be8:	01020000 	mrseq	r0, (UNDEF: 2)
    4bec:	000d0efb 	strdeq	r0, [sp], -fp
    4bf0:	01010101 	tsteq	r1, r1, lsl #2
    4bf4:	01000000 	mrseq	r0, (UNDEF: 0)
    4bf8:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    4bfc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4c00:	2f2e2e2f 	svccs	0x002e2e2f
    4c04:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    4c08:	2f736f74 	svccs	0x00736f74
    4c0c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    4c10:	2f786461 	svccs	0x00786461
    4c14:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    4c18:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    4c1c:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    4c20:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4c24:	2f2e2e2f 	svccs	0x002e2e2f
    4c28:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    4c2c:	2f736f74 	svccs	0x00736f74
    4c30:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    4c34:	2f786461 	svccs	0x00786461
    4c38:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    4c3c:	6f632f73 	svcvs	0x00632f73
    4c40:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    4c44:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    4c48:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    4c4c:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4c50:	2f2e2e00 	svccs	0x002e2e00
    4c54:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4c58:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    4c5c:	6f747262 	svcvs	0x00747262
    4c60:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    4c64:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    4c68:	6f632f78 	svcvs	0x00632f78
    4c6c:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    4c70:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    4c74:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    4c78:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    4c7c:	655f7265 	ldrbvs	r7, [pc, #-613]	; 4a1f <_Min_Stack_Size+0x3a1f>
    4c80:	72697078 	rsbvc	r7, r9, #120	; 0x78
    4c84:	6f697461 	svcvs	0x00697461
    4c88:	72705f6e 	rsbsvc	r5, r0, #440	; 0x1b8
    4c8c:	7365636f 	cmnvc	r5, #-1140850687	; 0xbc000001
    4c90:	00632e73 	rsbeq	r2, r3, r3, ror lr
    4c94:	74000001 	strvc	r0, [r0], #-1
    4c98:	6f705f78 	svcvs	0x00705f78
    4c9c:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    4ca0:	00000200 	andeq	r0, r0, r0, lsl #4
    4ca4:	615f7874 	cmpvs	pc, r4, ror r8	; <UNPREDICTABLE>
    4ca8:	682e6970 	stmdavs	lr!, {r4, r5, r6, r8, fp, sp, lr}
    4cac:	00000300 	andeq	r0, r0, r0, lsl #6
    4cb0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 4cb8 <_Min_Stack_Size+0x3cb8>
    4cb4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    4cb8:	0300682e 	movweq	r6, #2094	; 0x82e
    4cbc:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    4cc0:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    4cc4:	2e646165 	powcssz	f6, f4, f5
    4cc8:	00030068 	andeq	r0, r3, r8, rrx
    4ccc:	01050000 	mrseq	r0, (UNDEF: 5)
    4cd0:	fc020500 	stc2	5, cr0, [r2], {-0}
    4cd4:	03100028 	tsteq	r0, #40	; 0x28
    4cd8:	220100d1 	andcs	r0, r1, #209	; 0xd1
    4cdc:	1b030505 	blne	c60f8 <SYSTICK_CYCLES+0x9d0b9>
    4ce0:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    4ce4:	03e30337 	mvneq	r0, #-603979776	; 0xdc000000
    4ce8:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    4cec:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    4cf0:	015c0337 	cmpeq	ip, r7, lsr r3
    4cf4:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    4cf8:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    4cfc:	21030601 	tstcs	r3, r1, lsl #12
    4d00:	01062201 	tsteq	r6, r1, lsl #4
    4d04:	03060104 	movweq	r0, #24836	; 0x6104
    4d08:	3f017c97 	svccc	0x00017c97
    4d0c:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    4d10:	0103d203 	tsteq	r3, r3, lsl #4
    4d14:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    4d18:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    4d1c:	7f920301 	svcvc	0x00920301
    4d20:	02022001 	andeq	r2, r2, #1
    4d24:	4e010100 	adfmis	f0, f1, f0
    4d28:	03000001 	movweq	r0, #1
    4d2c:	0000cd00 	andeq	ip, r0, r0, lsl #26
    4d30:	fb010200 	blx	4553a <SYSTICK_CYCLES+0x1c4fb>
    4d34:	01000d0e 	tsteq	r0, lr, lsl #26
    4d38:	00010101 	andeq	r0, r1, r1, lsl #2
    4d3c:	00010000 	andeq	r0, r1, r0
    4d40:	2e2e0100 	sufcse	f0, f6, f0
    4d44:	2f2e2e2f 	svccs	0x002e2e2f
    4d48:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 4c98 <_Min_Stack_Size+0x3c98>
    4d4c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    4d50:	742f736f 	strtvc	r7, [pc], #-879	; 4d58 <_Min_Stack_Size+0x3d58>
    4d54:	61657268 	cmnvs	r5, r8, ror #4
    4d58:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    4d5c:	6f6d6d6f 	svcvs	0x006d6d6f
    4d60:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    4d64:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    4d68:	2f2e2e2f 	svccs	0x002e2e2f
    4d6c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 4cbc <_Min_Stack_Size+0x3cbc>
    4d70:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    4d74:	742f736f 	strtvc	r7, [pc], #-879	; 4d7c <_Min_Stack_Size+0x3d7c>
    4d78:	61657268 	cmnvs	r5, r8, ror #4
    4d7c:	702f7864 	eorvc	r7, pc, r4, ror #16
    4d80:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
    4d84:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    4d88:	5f786574 	svcpl	0x00786574
    4d8c:	2f33336d 	svccs	0x0033336d
    4d90:	2f756e67 	svccs	0x00756e67
    4d94:	00636e69 	rsbeq	r6, r3, r9, ror #28
    4d98:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4d9c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4da0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4da4:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    4da8:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    4dac:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    4db0:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 4cfc <_Min_Stack_Size+0x3cfc>
    4db4:	2f6e6f6d 	svccs	0x006e6f6d
    4db8:	00636e69 	rsbeq	r6, r3, r9, ror #28
    4dbc:	5f787400 	svcpl	0x00787400
    4dc0:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    4dc4:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
    4dc8:	61697469 	cmnvs	r9, r9, ror #8
    4dcc:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    4dd0:	0100632e 	tsteq	r0, lr, lsr #6
    4dd4:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    4dd8:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    4ddc:	00682e74 	rsbeq	r2, r8, r4, ror lr
    4de0:	74000002 	strvc	r0, [r0], #-2
    4de4:	70615f78 	rsbvc	r5, r1, r8, ror pc
    4de8:	00682e69 	rsbeq	r2, r8, r9, ror #28
    4dec:	74000003 	strvc	r0, [r0], #-3
    4df0:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4df4:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
    4df8:	00030068 	andeq	r0, r3, r8, rrx
    4dfc:	01050000 	mrseq	r0, (UNDEF: 5)
    4e00:	14020500 	strne	r0, [r2], #-1280	; 0xfffffb00
    4e04:	03100029 	tsteq	r0, #41	; 0x29
    4e08:	310101cc 	smlabtcc	r1, ip, r1, r0
    4e0c:	19030505 	stmdbne	r3, {r0, r2, r8, sl}
    4e10:	061a0501 	ldreq	r0, [sl], -r1, lsl #10
    4e14:	06050501 	streq	r0, [r5], -r1, lsl #10
    4e18:	061b053d 			; <UNDEFINED> instruction: 0x061b053d
    4e1c:	06050501 	streq	r0, [r5], -r1, lsl #10
    4e20:	06180532 			; <UNDEFINED> instruction: 0x06180532
    4e24:	06050501 	streq	r0, [r5], -r1, lsl #10
    4e28:	0618054b 	ldreq	r0, [r8], -fp, asr #10
    4e2c:	06050501 	streq	r0, [r5], -r1, lsl #10
    4e30:	061b0534 			; <UNDEFINED> instruction: 0x061b0534
    4e34:	06050501 	streq	r0, [r5], -r1, lsl #10
    4e38:	061a053d 			; <UNDEFINED> instruction: 0x061a053d
    4e3c:	06050501 	streq	r0, [r5], -r1, lsl #10
    4e40:	0618054b 	ldreq	r0, [r8], -fp, asr #10
    4e44:	00050501 	andeq	r0, r5, r1, lsl #10
    4e48:	06010402 	streq	r0, [r1], -r2, lsl #8
    4e4c:	00090541 	andeq	r0, r9, r1, asr #10
    4e50:	16010402 	strne	r0, [r1], -r2, lsl #8
    4e54:	02001305 	andeq	r1, r0, #335544320	; 0x14000000
    4e58:	01060104 	tsteq	r6, r4, lsl #2
    4e5c:	02000d05 	andeq	r0, r0, #320	; 0x140
    4e60:	03060104 	movweq	r0, #24836	; 0x6104
    4e64:	052e0815 	streq	r0, [lr, #-2069]!	; 0xfffff7eb
    4e68:	04020005 	streq	r0, [r2], #-5
    4e6c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    4e70:	2e1b0301 	cdpcs	3, 1, cr0, cr11, cr1, {0}
    4e74:	01001c02 	tsteq	r0, r2, lsl #24
    4e78:	0001b701 	andeq	fp, r1, r1, lsl #14
    4e7c:	d2000300 	andle	r0, r0, #0, 6
    4e80:	02000000 	andeq	r0, r0, #0
    4e84:	0d0efb01 	vstreq	d15, [lr, #-4]
    4e88:	01010100 	mrseq	r0, (UNDEF: 17)
    4e8c:	00000001 	andeq	r0, r0, r1
    4e90:	01000001 	tsteq	r0, r1
    4e94:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4e98:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4e9c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4ea0:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    4ea4:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    4ea8:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    4eac:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 4df8 <_Min_Stack_Size+0x3df8>
    4eb0:	2f6e6f6d 	svccs	0x006e6f6d
    4eb4:	00637273 	rsbeq	r7, r3, r3, ror r2
    4eb8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4ebc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4ec0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4ec4:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    4ec8:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    4ecc:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    4ed0:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 4e1c <_Min_Stack_Size+0x3e1c>
    4ed4:	2f6e6f6d 	svccs	0x006e6f6d
    4ed8:	00636e69 	rsbeq	r6, r3, r9, ror #28
    4edc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    4ee0:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    4ee4:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    4ee8:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    4eec:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    4ef0:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    4ef4:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    4ef8:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    4efc:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    4f00:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    4f04:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    4f08:	6e692f75 	mcrvs	15, 3, r2, cr9, cr5, {3}
    4f0c:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    4f10:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    4f14:	5f72656d 	svcpl	0x0072656d
    4f18:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    4f1c:	615f6d65 	cmpvs	pc, r5, ror #26
    4f20:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    4f24:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
    4f28:	00010063 	andeq	r0, r1, r3, rrx
    4f2c:	5f787400 	svcpl	0x00787400
    4f30:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    4f34:	00020068 	andeq	r0, r2, r8, rrx
    4f38:	5f787400 	svcpl	0x00787400
    4f3c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    4f40:	0300682e 	movweq	r6, #2094	; 0x82e
    4f44:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    4f48:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    4f4c:	682e7265 	stmdavs	lr!, {r0, r2, r5, r6, r9, ip, sp, lr}
    4f50:	00000200 	andeq	r0, r0, r0, lsl #4
    4f54:	00010500 	andeq	r0, r1, r0, lsl #10
    4f58:	29a40205 	stmibcs	r4!, {r0, r2, r9}
    4f5c:	ce031000 	cdpgt	0, 0, cr1, cr3, cr0, {0}
    4f60:	13140100 	tstne	r4, #0, 2
    4f64:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    4f68:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    4f6c:	05010615 	streq	r0, [r1, #-1557]	; 0xfffff9eb
    4f70:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    4f74:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    4f78:	05240609 	streq	r0, [r4, #-1545]!	; 0xfffff9f7
    4f7c:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    4f80:	0542060d 	strbeq	r0, [r2, #-1549]	; 0xfffff9f3
    4f84:	0501061b 	streq	r0, [r1, #-1563]	; 0xfffff9e5
    4f88:	01052010 	tsteq	r5, r0, lsl r0
    4f8c:	2000c003 	andcs	ip, r0, r3
    4f90:	03061105 	movweq	r1, #24837	; 0x6105
    4f94:	14052046 	strne	r2, [r5], #-70	; 0xffffffba
    4f98:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    4f9c:	2e0c0306 	cdpcs	3, 0, cr0, cr12, cr6, {0}
    4fa0:	01062505 	tsteq	r6, r5, lsl #10
    4fa4:	27061105 	strcs	r1, [r6, -r5, lsl #2]
    4fa8:	01061f05 	tsteq	r6, r5, lsl #30
    4fac:	052e1c05 	streq	r1, [lr, #-3077]!	; 0xfffff3fb
    4fb0:	052f0611 	streq	r0, [pc, #-1553]!	; 49a7 <_Min_Stack_Size+0x39a7>
    4fb4:	0501064e 	streq	r0, [r1, #-1614]	; 0xfffff9b2
    4fb8:	15052e14 	strne	r2, [r5, #-3604]	; 0xfffff1ec
    4fbc:	1e053206 	cdpne	2, 0, cr3, cr5, cr6, {0}
    4fc0:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    4fc4:	23052106 	movwcs	r2, #20742	; 0x5106
    4fc8:	20050106 	andcs	r0, r5, r6, lsl #2
    4fcc:	0611052e 	ldreq	r0, [r1], -lr, lsr #10
    4fd0:	06160524 	ldreq	r0, [r6], -r4, lsr #10
    4fd4:	20140501 	andscs	r0, r4, r1, lsl #10
    4fd8:	03061505 	movweq	r1, #25861	; 0x6505
    4fdc:	05132010 	ldreq	r2, [r3, #-16]
    4fe0:	05010624 	streq	r0, [r1, #-1572]	; 0xfffff9dc
    4fe4:	05210615 	streq	r0, [r1, #-1557]!	; 0xfffff9eb
    4fe8:	05010645 	streq	r0, [r1, #-1605]	; 0xfffff9bb
    4fec:	05210615 	streq	r0, [r1, #-1557]!	; 0xfffff9eb
    4ff0:	05010645 	streq	r0, [r1, #-1605]	; 0xfffff9bb
    4ff4:	05210615 	streq	r0, [r1, #-1557]!	; 0xfffff9eb
    4ff8:	05010640 	streq	r0, [r1, #-1600]	; 0xfffff9c0
    4ffc:	05210615 	streq	r0, [r1, #-1557]!	; 0xfffff9eb
    5000:	05010644 	streq	r0, [r1, #-1604]	; 0xfffff9bc
    5004:	05240611 	streq	r0, [r4, #-1553]!	; 0xfffff9ef
    5008:	0501063a 	streq	r0, [r1, #-1594]	; 0xfffff9c6
    500c:	25052401 	strcs	r2, [r5, #-1025]	; 0xfffffbff
    5010:	20204a03 	eorcs	r4, r0, r3, lsl #20
    5014:	03061505 	movweq	r1, #25861	; 0x6505
    5018:	4005201f 	andmi	r2, r5, pc, lsl r0
    501c:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    5020:	44052106 	strmi	r2, [r5], #-262	; 0xfffffefa
    5024:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    5028:	21052306 	tstcs	r5, r6, lsl #6
    502c:	02200106 	eoreq	r0, r0, #-2147483647	; 0x80000001
    5030:	01010007 	tsteq	r1, r7
    5034:	0000015b 	andeq	r0, r0, fp, asr r1
    5038:	00c60003 	sbceq	r0, r6, r3
    503c:	01020000 	mrseq	r0, (UNDEF: 2)
    5040:	000d0efb 	strdeq	r0, [sp], -fp
    5044:	01010101 	tsteq	r1, r1, lsl #2
    5048:	01000000 	mrseq	r0, (UNDEF: 0)
    504c:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    5050:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5054:	2f2e2e2f 	svccs	0x002e2e2f
    5058:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    505c:	2f736f74 	svccs	0x00736f74
    5060:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    5064:	2f786461 	svccs	0x00786461
    5068:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    506c:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    5070:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    5074:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5078:	2f2e2e2f 	svccs	0x002e2e2f
    507c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    5080:	2f736f74 	svccs	0x00736f74
    5084:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    5088:	2f786461 	svccs	0x00786461
    508c:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    5090:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
    5094:	2e00636e 	cdpcs	3, 0, cr6, cr0, cr14, {3}
    5098:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    509c:	2f2e2e2f 	svccs	0x002e2e2f
    50a0:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    50a4:	2f736f74 	svccs	0x00736f74
    50a8:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    50ac:	2f786461 	svccs	0x00786461
    50b0:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    50b4:	6f632f73 	svcvs	0x00632f73
    50b8:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    50bc:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    50c0:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    50c4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    50c8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    50cc:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    50d0:	735f7265 	cmpvc	pc, #1342177286	; 0x50000006
    50d4:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    50d8:	65645f6d 	strbvs	r5, [r4, #-3949]!	; 0xfffff093
    50dc:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
    50e0:	65746176 	ldrbvs	r6, [r4, #-374]!	; 0xfffffe8a
    50e4:	0100632e 	tsteq	r0, lr, lsr #6
    50e8:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    50ec:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    50f0:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    50f4:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    50f8:	726f705f 	rsbvc	r7, pc, #95	; 0x5f
    50fc:	00682e74 	rsbeq	r2, r8, r4, ror lr
    5100:	00000003 	andeq	r0, r0, r3
    5104:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5108:	0029fc02 	eoreq	pc, r9, r2, lsl #24
    510c:	00c90310 	sbceq	r0, r9, r0, lsl r3
    5110:	13131401 	tstne	r3, #16777216	; 0x1000000
    5114:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    5118:	0501060f 	streq	r0, [r1, #-1551]	; 0xfffff9f1
    511c:	05230605 	streq	r0, [r3, #-1541]!	; 0xfffff9fb
    5120:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5124:	05260609 	streq	r0, [r6, #-1545]!	; 0xfffff9f7
    5128:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    512c:	05230609 	streq	r0, [r3, #-1545]!	; 0xfffff9f7
    5130:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    5134:	1303060d 	movwne	r0, #13837	; 0x360d
    5138:	061c052e 	ldreq	r0, [ip], -lr, lsr #10
    513c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5140:	063d0521 	ldrteq	r0, [sp], -r1, lsr #10
    5144:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5148:	063d0521 	ldrteq	r0, [sp], -r1, lsr #10
    514c:	060d0501 	streq	r0, [sp], -r1, lsl #10
    5150:	06110523 	ldreq	r0, [r1], -r3, lsr #10
    5154:	20100501 	andscs	r0, r0, r1, lsl #10
    5158:	03060905 	movweq	r0, #26885	; 0x6905
    515c:	32052e0c 	andcc	r2, r5, #12, 28	; 0xc0
    5160:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    5164:	0d052201 	sfmeq	f2, 4, [r5, #-4]
    5168:	20600306 	rsbcs	r0, r0, r6, lsl #6
    516c:	01061105 	tsteq	r6, r5, lsl #2
    5170:	05201005 	streq	r1, [r0, #-5]!
    5174:	05320611 	ldreq	r0, [r2, #-1553]!	; 0xfffff9ef
    5178:	2e01061e 	mcrcs	6, 0, r0, cr1, cr14, {0}
    517c:	03061105 	movweq	r1, #24837	; 0x6105
    5180:	3b052012 	blcc	14d1d0 <__RAM_SIZE+0x4d1d0>
    5184:	11050106 	tstne	r5, r6, lsl #2
    5188:	1e052306 	cdpne	3, 0, cr2, cr5, cr6, {0}
    518c:	02020106 	andeq	r0, r2, #-2147483647	; 0x80000001
    5190:	d5010100 	strle	r0, [r1, #-256]	; 0xffffff00
    5194:	03000004 	movweq	r0, #4
    5198:	0000de00 	andeq	sp, r0, r0, lsl #28
    519c:	fb010200 	blx	459a6 <SYSTICK_CYCLES+0x1c967>
    51a0:	01000d0e 	tsteq	r0, lr, lsl #26
    51a4:	00010101 	andeq	r0, r1, r1, lsl #2
    51a8:	00010000 	andeq	r0, r1, r0
    51ac:	2e2e0100 	sufcse	f0, f6, f0
    51b0:	2f2e2e2f 	svccs	0x002e2e2f
    51b4:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 5104 <_Min_Stack_Size+0x4104>
    51b8:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    51bc:	742f736f 	strtvc	r7, [pc], #-879	; 51c4 <_Min_Stack_Size+0x41c4>
    51c0:	61657268 	cmnvs	r5, r8, ror #4
    51c4:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    51c8:	6f6d6d6f 	svcvs	0x006d6d6f
    51cc:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    51d0:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    51d4:	2f2e2e2f 	svccs	0x002e2e2f
    51d8:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 5128 <_Min_Stack_Size+0x4128>
    51dc:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    51e0:	742f736f 	strtvc	r7, [pc], #-879	; 51e8 <_Min_Stack_Size+0x41e8>
    51e4:	61657268 	cmnvs	r5, r8, ror #4
    51e8:	702f7864 	eorvc	r7, pc, r4, ror #16
    51ec:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
    51f0:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    51f4:	5f786574 	svcpl	0x00786574
    51f8:	2f33336d 	svccs	0x0033336d
    51fc:	2f756e67 	svccs	0x00756e67
    5200:	00636e69 	rsbeq	r6, r3, r9, ror #28
    5204:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    5208:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    520c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    5210:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    5214:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    5218:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    521c:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 5168 <_Min_Stack_Size+0x4168>
    5220:	2f6e6f6d 	svccs	0x006e6f6d
    5224:	00636e69 	rsbeq	r6, r3, r9, ror #28
    5228:	5f787400 	svcpl	0x00787400
    522c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    5230:	68745f72 	ldmdavs	r4!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    5234:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    5238:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
    523c:	632e7972 			; <UNDEFINED> instruction: 0x632e7972
    5240:	00000100 	andeq	r0, r0, r0, lsl #2
    5244:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    5248:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    524c:	00020068 	andeq	r0, r2, r8, rrx
    5250:	5f787400 	svcpl	0x00787400
    5254:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    5258:	00030068 	andeq	r0, r3, r8, rrx
    525c:	5f787400 	svcpl	0x00787400
    5260:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    5264:	00682e72 	rsbeq	r2, r8, r2, ror lr
    5268:	74000003 	strvc	r0, [r0], #-3
    526c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    5270:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    5274:	0300682e 	movweq	r6, #2094	; 0x82e
    5278:	05000000 	streq	r0, [r0, #-0]
    527c:	02050001 	andeq	r0, r5, #1
    5280:	10002a2c 	andne	r2, r0, ip, lsr #20
    5284:	0100cc03 	tsteq	r0, r3, lsl #24
    5288:	13131414 	tstne	r3, #20, 8	; 0x14000000
    528c:	13131313 	tstne	r3, #1275068416	; 0x4c000000
    5290:	13131413 	tstne	r3, #318767104	; 0x13000000
    5294:	18050515 	stmdane	r5, {r0, r2, r4, r8, sl}
    5298:	01060805 	tsteq	r6, r5, lsl #16
    529c:	68030105 	stmdavs	r3, {r0, r2, r8}
    52a0:	031d054a 	tsteq	sp, #310378496	; 0x12800000
    52a4:	11052e0a 	tstne	r5, sl, lsl #28
    52a8:	2e300306 	cdpcs	3, 3, cr0, cr0, cr6, {0}
    52ac:	01062705 	tsteq	r6, r5, lsl #14
    52b0:	03061505 	movweq	r1, #25861	; 0x6505
    52b4:	24055821 	strcs	r5, [r5], #-2081	; 0xfffff7df
    52b8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    52bc:	2e350306 	cdpcs	3, 3, cr0, cr5, cr6, {0}
    52c0:	13062b05 	movwne	r2, #27397	; 0x6b05
    52c4:	05205005 	streq	r5, [r0, #-5]!
    52c8:	15051f48 	strne	r1, [r5, #-3912]	; 0xfffff0b8
    52cc:	05172506 	ldreq	r2, [r7, #-1286]	; 0xfffffafa
    52d0:	05010642 	streq	r0, [r1, #-1602]	; 0xfffff9be
    52d4:	052f0615 	streq	r0, [pc, #-1557]!	; 4cc7 <_Min_Stack_Size+0x3cc7>
    52d8:	05010644 	streq	r0, [r1, #-1604]	; 0xfffff9bc
    52dc:	05230615 	streq	r0, [r3, #-1557]!	; 0xfffff9eb
    52e0:	03010626 	movweq	r0, #5670	; 0x1626
    52e4:	11052077 	tstne	r5, r7, ror r0
    52e8:	00c70306 	sbceq	r0, r7, r6, lsl #6
    52ec:	062d0520 	strteq	r0, [sp], -r0, lsr #10
    52f0:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    52f4:	05020431 	streq	r0, [r2, #-1073]	; 0xfffffbcf
    52f8:	029d0337 	addseq	r0, sp, #-603979776	; 0xdc000000
    52fc:	17050501 	strne	r0, [r5, -r1, lsl #10]
    5300:	01042e06 	tsteq	r4, r6, lsl #28
    5304:	03061105 	movweq	r1, #24837	; 0x6105
    5308:	05017de1 	streq	r7, [r1, #-3553]	; 0xfffff21f
    530c:	05010614 	streq	r0, [r1, #-1556]	; 0xfffff9ec
    5310:	05230615 	streq	r0, [r3, #-1557]!	; 0xfffff9eb
    5314:	02043211 	andeq	r3, r4, #268435457	; 0x10000001
    5318:	9c033705 	stcls	7, cr3, [r3], {5}
    531c:	01050102 	tsteq	r5, r2, lsl #2
    5320:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    5324:	5c033705 	stcpl	7, cr3, [r3], {5}
    5328:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    532c:	30160505 	andscc	r0, r6, r5, lsl #10
    5330:	03060106 	movweq	r0, #24838	; 0x6106
    5334:	06220121 	strteq	r0, [r2], -r1, lsr #2
    5338:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    533c:	dc030611 	stcle	6, cr0, [r3], {17}
    5340:	2d05017d 	stfcss	f0, [r5, #-500]	; 0xfffffe0c
    5344:	11050106 	tstne	r5, r6, lsl #2
    5348:	26053f06 	strcs	r3, [r5], -r6, lsl #30
    534c:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    5350:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    5354:	2e00e803 	cdpcs	8, 0, cr14, cr0, cr3, {0}
    5358:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    535c:	0101a503 	tsteq	r1, r3, lsl #10
    5360:	06170505 	ldreq	r0, [r7], -r5, lsl #10
    5364:	0501042e 	streq	r0, [r1, #-1070]	; 0xfffffbd2
    5368:	d9030611 	stmdble	r3, {r0, r4, r9, sl}
    536c:	0204017e 	andeq	r0, r4, #-2147483617	; 0x8000001f
    5370:	ab033705 	blge	d2f8c <SYSTICK_CYCLES+0xa9f4d>
    5374:	01050101 	tsteq	r5, r1, lsl #2
    5378:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    537c:	5c033705 	stcpl	7, cr3, [r3], {5}
    5380:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    5384:	30160505 	andscc	r0, r6, r5, lsl #10
    5388:	03060106 	movweq	r0, #24838	; 0x6106
    538c:	06220121 	strteq	r0, [r2], -r1, lsr #2
    5390:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    5394:	b8030613 	stmdalt	r3, {r0, r1, r4, r9, sl}
    5398:	2305017c 	movwcs	r0, #20860	; 0x517c
    539c:	13050106 	movwne	r0, #20742	; 0x5106
    53a0:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    53a4:	1c051532 	cfstr32ne	mvfx1, [r5], {50}	; 0x32
    53a8:	11050106 	tstne	r5, r6, lsl #2
    53ac:	22052306 	andcs	r2, r5, #402653184	; 0x18000000
    53b0:	11050106 	tstne	r5, r6, lsl #2
    53b4:	14053106 	strne	r3, [r5], #-262	; 0xfffffefa
    53b8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    53bc:	2e0e0306 	cdpcs	3, 0, cr0, cr14, cr6, {0}
    53c0:	01062405 	tsteq	r6, r5, lsl #8
    53c4:	21061505 	tstcs	r6, r5, lsl #10
    53c8:	01064505 	tsteq	r6, r5, lsl #10
    53cc:	21061505 	tstcs	r6, r5, lsl #10
    53d0:	01064505 	tsteq	r6, r5, lsl #10
    53d4:	23061505 	movwcs	r1, #25861	; 0x6505
    53d8:	01063f05 	tsteq	r6, r5, lsl #30
    53dc:	06150520 	ldreq	r0, [r5], -r0, lsr #10
    53e0:	06240523 	strteq	r0, [r4], -r3, lsr #10
    53e4:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    53e8:	06230527 	strteq	r0, [r3], -r7, lsr #10
    53ec:	20140501 	andscs	r0, r4, r1, lsl #10
    53f0:	03061505 	movweq	r1, #25861	; 0x6505
    53f4:	43052e09 	movwmi	r2, #24073	; 0x5e09
    53f8:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    53fc:	27054d06 	strcs	r4, [r5, -r6, lsl #26]
    5400:	18050106 	stmdane	r5, {r1, r2, r8}
    5404:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    5408:	01010142 	tsteq	r1, r2, asr #2
    540c:	27051501 	strcs	r1, [r5, -r1, lsl #10]
    5410:	1c050106 	stfnes	f0, [r5], {6}
    5414:	061d052e 	ldreq	r0, [sp], -lr, lsr #10
    5418:	0627053f 			; <UNDEFINED> instruction: 0x0627053f
    541c:	20570501 	subscs	r0, r7, r1, lsl #10
    5420:	03061505 	movweq	r1, #25861	; 0x6505
    5424:	3b053c1e 	blcc	1544a4 <__RAM_SIZE+0x544a4>
    5428:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    542c:	27054d06 	strcs	r4, [r5, -r6, lsl #26]
    5430:	18050106 	stmdane	r5, {r1, r2, r8}
    5434:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    5438:	01010142 	tsteq	r1, r2, asr #2
    543c:	27051501 	strcs	r1, [r5, -r1, lsl #10]
    5440:	1c050106 	stfnes	f0, [r5], {6}
    5444:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    5448:	133c0a03 	teqne	ip, #12288	; 0x3000
    544c:	01062305 	tsteq	r6, r5, lsl #6
    5450:	23061505 	movwcs	r1, #25861	; 0x6505
    5454:	01065905 	tsteq	r6, r5, lsl #18
    5458:	05204805 	streq	r4, [r0, #-2053]!	; 0xfffff7fb
    545c:	05230615 	streq	r0, [r3, #-1557]!	; 0xfffff9eb
    5460:	05010618 	streq	r0, [r1, #-1560]	; 0xfffff9e8
    5464:	05270619 	streq	r0, [r7, #-1561]!	; 0xfffff9e7
    5468:	05010646 	streq	r0, [r1, #-1606]	; 0xfffff9ba
    546c:	052f0619 	streq	r0, [pc, #-1561]!	; 4e5b <_Min_Stack_Size+0x3e5b>
    5470:	05010648 	streq	r0, [r1, #-1608]	; 0xfffff9b8
    5474:	05230619 	streq	r0, [r3, #-1561]!	; 0xfffff9e7
    5478:	0501062a 	streq	r0, [r1, #-1578]	; 0xfffff9d6
    547c:	6703061d 	smladvs	r3, sp, r6, r0
    5480:	0627052e 	strteq	r0, [r7], -lr, lsr #10
    5484:	204f0501 	subcs	r0, pc, r1, lsl #10
    5488:	03061905 	movweq	r1, #26885	; 0x6905
    548c:	46053c20 	strmi	r3, [r5], -r0, lsr #24
    5490:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    5494:	3c200306 	stccc	3, cr0, [r0], #-24	; 0xffffffe8
    5498:	01061805 	tsteq	r6, r5, lsl #16
    549c:	24061905 	strcs	r1, [r6], #-2309	; 0xfffff6fb
    54a0:	01063f05 	tsteq	r6, r5, lsl #30
    54a4:	4d061905 	vstrmi.16	s2, [r6, #-10]	; <UNPREDICTABLE>
    54a8:	01062b05 	tsteq	r6, r5, lsl #22
    54ac:	05201c05 	streq	r1, [r0, #-3077]!	; 0xfffff3fb
    54b0:	0142061d 	cmpeq	r2, sp, lsl r6
    54b4:	15010101 	strne	r0, [r1, #-257]	; 0xfffffeff
    54b8:	01062b05 	tsteq	r6, r5, lsl #22
    54bc:	052e2005 	streq	r2, [lr, #-5]!
    54c0:	0c030615 	stceq	6, cr0, [r3], {21}
    54c4:	0627053c 			; <UNDEFINED> instruction: 0x0627053c
    54c8:	20180501 	andscs	r0, r8, r1, lsl #10
    54cc:	03061905 	movweq	r1, #26885	; 0x6905
    54d0:	29052e0c 	stmdbcs	r5, {r2, r3, r9, sl, fp, sp}
    54d4:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    54d8:	23052706 	movwcs	r2, #22278	; 0x5706
    54dc:	20050106 	andcs	r0, r5, r6, lsl #2
    54e0:	0615052e 	ldreq	r0, [r5], -lr, lsr #10
    54e4:	0652052f 	ldrbeq	r0, [r2], -pc, lsr #10
    54e8:	18052001 	stmdane	r5, {r0, sp}
    54ec:	06190520 	ldreq	r0, [r9], -r0, lsr #10
    54f0:	06220532 			; <UNDEFINED> instruction: 0x06220532
    54f4:	06190501 	ldreq	r0, [r9], -r1, lsl #10
    54f8:	06270521 	strteq	r0, [r7], -r1, lsr #10
    54fc:	2e240501 	cfsh64cs	mvdx0, mvdx4, #1
    5500:	24061505 	strcs	r1, [r6], #-1285	; 0xfffffafb
    5504:	01061a05 	tsteq	r6, r5, lsl #20
    5508:	05201805 	streq	r1, [r0, #-2053]!	; 0xfffff7fb
    550c:	10030619 	andne	r0, r3, r9, lsl r6
    5510:	28051320 	stmdacs	r5, {r5, r8, r9, ip}
    5514:	19050106 	stmdbne	r5, {r1, r2, r8}
    5518:	49052106 	stmdbmi	r5, {r1, r2, r8, sp}
    551c:	19050106 	stmdbne	r5, {r1, r2, r8}
    5520:	49052106 	stmdbmi	r5, {r1, r2, r8, sp}
    5524:	19050106 	stmdbne	r5, {r1, r2, r8}
    5528:	48052106 	stmdami	r5, {r1, r2, r8, sp}
    552c:	19050106 	stmdbne	r5, {r1, r2, r8}
    5530:	4c052106 	stfmis	f2, [r5], {6}
    5534:	15050106 	strne	r0, [r5, #-262]	; 0xfffffefa
    5538:	42052406 	andmi	r2, r5, #100663296	; 0x6000000
    553c:	21050106 	tstcs	r5, r6, lsl #2
    5540:	2e410306 	cdpcs	3, 4, cr0, cr1, cr6, {0}
    5544:	01062b05 	tsteq	r6, r5, lsl #22
    5548:	05205305 	streq	r5, [r0, #-773]!	; 0xfffffcfb
    554c:	3c0d0329 	stccc	3, cr0, [sp], {41}	; 0x29
    5550:	03061905 	movweq	r1, #26885	; 0x6905
    5554:	48052e1f 	stmdami	r5, {r0, r1, r2, r3, r4, r9, sl, fp, sp}
    5558:	19050106 	stmdbne	r5, {r1, r2, r8}
    555c:	4c052106 	stfmis	f2, [r5], {6}
    5560:	19050106 	stmdbne	r5, {r1, r2, r8}
    5564:	25052306 	strcs	r2, [r5, #-774]	; 0xfffffcfa
    5568:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    556c:	2e270306 	cdpcs	3, 2, cr0, cr7, cr6, {0}
    5570:	01062305 	tsteq	r6, r5, lsl #6
    5574:	052e1005 	streq	r1, [lr, #-5]!
    5578:	16260611 			; <UNDEFINED> instruction: 0x16260611
    557c:	01062f05 	tsteq	r6, r5, lsl #30
    5580:	41061105 	tstmi	r6, r5, lsl #2
    5584:	0502043f 	streq	r0, [r2, #-1087]	; 0xfffffbc1
    5588:	01890337 	orreq	r0, r9, r7, lsr r3
    558c:	17050501 	strne	r0, [r5, -r1, lsl #10]
    5590:	01042e06 	tsteq	r4, r6, lsl #28
    5594:	03060905 	movweq	r0, #26885	; 0x6905
    5598:	05017c9d 	streq	r7, [r1, #-3229]	; 0xfffff363
    559c:	0204180d 	andeq	r1, r4, #851968	; 0xd0000
    55a0:	e1033705 	tst	r3, r5, lsl #14
    55a4:	01050103 	tsteq	r5, r3, lsl #2
    55a8:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    55ac:	5c033705 	stcpl	7, cr3, [r3], {5}
    55b0:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    55b4:	30160505 	andscc	r0, r6, r5, lsl #10
    55b8:	03060106 	movweq	r0, #24838	; 0x6106
    55bc:	06220121 	strteq	r0, [r2], -r1, lsr #2
    55c0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    55c4:	9703060d 	strls	r0, [r3, -sp, lsl #12]
    55c8:	1f05017c 	svcne	0x0005017c
    55cc:	1c050106 	stfnes	f0, [r5], {6}
    55d0:	060d053c 			; <UNDEFINED> instruction: 0x060d053c
    55d4:	06100524 	ldreq	r0, [r0], -r4, lsr #10
    55d8:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    55dc:	063f0523 	ldrteq	r0, [pc], -r3, lsr #10
    55e0:	060d0501 	streq	r0, [sp], -r1, lsl #10
    55e4:	06240532 			; <UNDEFINED> instruction: 0x06240532
    55e8:	060d0501 	streq	r0, [sp], -r1, lsl #10
    55ec:	06260532 			; <UNDEFINED> instruction: 0x06260532
    55f0:	3c230501 	cfstr32cc	mvfx0, [r3], #-4
    55f4:	21060d05 	tstcs	r6, r5, lsl #26
    55f8:	01062705 	tsteq	r6, r5, lsl #14
    55fc:	052e1005 	streq	r1, [lr, #-5]!
    5600:	0543060d 	strbeq	r0, [r3, #-1549]	; 0xfffff9f3
    5604:	0501061f 	streq	r0, [r1, #-1567]	; 0xfffff9e1
    5608:	043f060d 	ldrteq	r0, [pc], #-1549	; 5610 <_Min_Stack_Size+0x4610>
    560c:	03370502 	teqeq	r7, #8388608	; 0x800000
    5610:	050103bb 	streq	r0, [r1, #-955]	; 0xfffffc45
    5614:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    5618:	0d050104 	stfeqs	f0, [r5, #-16]
    561c:	7cc30306 	stclvc	3, cr0, [r3], {6}
    5620:	05020401 	streq	r0, [r2, #-1025]	; 0xfffffbff
    5624:	03c10337 	biceq	r0, r1, #-603979776	; 0xdc000000
    5628:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    562c:	05140505 	ldreq	r0, [r4, #-1285]	; 0xfffffafb
    5630:	015c0337 	cmpeq	ip, r7, lsr r3
    5634:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    5638:	06301605 	ldrteq	r1, [r0], -r5, lsl #12
    563c:	21030601 	tstcs	r3, r1, lsl #12
    5640:	01062201 	tsteq	r6, r1, lsl #4
    5644:	0d050104 	stfeqs	f0, [r5, #-16]
    5648:	7cb80306 	ldcvc	3, cr0, [r8], #24
    564c:	06130501 	ldreq	r0, [r3], -r1, lsl #10
    5650:	06110501 	ldreq	r0, [r1], -r1, lsl #10
    5654:	2002bf03 	andcs	fp, r2, r3, lsl #30
    5658:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    565c:	0100f503 	tsteq	r0, r3, lsl #10	; <UNPREDICTABLE>
    5660:	05170505 	ldreq	r0, [r7, #-1285]	; 0xfffffafb
    5664:	02300601 	eorseq	r0, r0, #1048576	; 0x100000
    5668:	01010017 	tsteq	r1, r7, lsl r0
    566c:	0000012f 	andeq	r0, r0, pc, lsr #2
    5670:	00bd0003 	adcseq	r0, sp, r3
    5674:	01020000 	mrseq	r0, (UNDEF: 2)
    5678:	000d0efb 	strdeq	r0, [sp], -fp
    567c:	01010101 	tsteq	r1, r1, lsl #2
    5680:	01000000 	mrseq	r0, (UNDEF: 0)
    5684:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    5688:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    568c:	2f2e2e2f 	svccs	0x002e2e2f
    5690:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    5694:	2f736f74 	svccs	0x00736f74
    5698:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    569c:	2f786461 	svccs	0x00786461
    56a0:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    56a4:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    56a8:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
    56ac:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    56b0:	2f2e2e2f 	svccs	0x002e2e2f
    56b4:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    56b8:	2f736f74 	svccs	0x00736f74
    56bc:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    56c0:	2f786461 	svccs	0x00786461
    56c4:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    56c8:	6f632f73 	svcvs	0x00632f73
    56cc:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    56d0:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    56d4:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    56d8:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    56dc:	2f2e2e00 	svccs	0x002e2e00
    56e0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    56e4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    56e8:	6f747262 	svcvs	0x00747262
    56ec:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    56f0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    56f4:	6f632f78 	svcvs	0x00632f78
    56f8:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    56fc:	636e692f 	cmnvs	lr, #770048	; 0xbc000
    5700:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    5704:	6c625f65 	stclvs	15, cr5, [r2], #-404	; 0xfffffe6c
    5708:	5f6b636f 	svcpl	0x006b636f
    570c:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
    5710:	2e657361 	cdpcs	3, 6, cr7, cr5, cr1, {3}
    5714:	00010063 	andeq	r0, r1, r3, rrx
    5718:	5f787400 	svcpl	0x00787400
    571c:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    5720:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
    5724:	78740000 	ldmdavc	r4!, {}^	; <UNPREDICTABLE>
    5728:	6970615f 	ldmdbvs	r0!, {r0, r1, r2, r3, r4, r6, r8, sp, lr}^
    572c:	0300682e 	movweq	r6, #2094	; 0x82e
    5730:	05000000 	streq	r0, [r0, #-0]
    5734:	02050001 	andeq	r0, r5, #1
    5738:	10002be8 	andne	r2, r0, r8, ror #23
    573c:	0100c703 	tsteq	r0, r3, lsl #14
    5740:	13131314 	tstne	r3, #20, 6	; 0x50000000
    5744:	05160505 	ldreq	r0, [r6, #-1285]	; 0xfffffafb
    5748:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    574c:	20770301 	rsbscs	r0, r7, r1, lsl #6
    5750:	03060905 	movweq	r0, #26885	; 0x6905
    5754:	13132014 	tstne	r3, #20
    5758:	06120513 			; <UNDEFINED> instruction: 0x06120513
    575c:	06090501 	streq	r0, [r9], -r1, lsl #10
    5760:	0c05152f 	cfstr32eq	mvfx1, [r5], {47}	; 0x2f
    5764:	0e050106 	adfeqs	f0, f5, f6
    5768:	1c052806 	stcne	8, cr2, [r5], {6}
    576c:	12050106 	andne	r0, r5, #-2147483647	; 0x80000001
    5770:	14052020 	strne	r2, [r5], #-32	; 0xffffffe0
    5774:	06050532 			; <UNDEFINED> instruction: 0x06050532
    5778:	05200b03 	streq	r0, [r0, #-2819]!	; 0xfffff4fd
    577c:	05130601 	ldreq	r0, [r3, #-1537]	; 0xfffff9ff
    5780:	7a03060d 	bvc	c6fbc <SYSTICK_CYCLES+0x9df7d>
    5784:	06170520 	ldreq	r0, [r7], -r0, lsr #10
    5788:	10052e01 	andne	r2, r5, r1, lsl #28
    578c:	05206003 	streq	r6, [r0, #-3]!
    5790:	20260301 	eorcs	r0, r6, r1, lsl #6
    5794:	6c031405 	cfstrsvs	mvf1, [r3], {5}
    5798:	03022020 	movweq	r2, #8224	; 0x2020
    579c:	e8010100 	stmda	r1, {r8}
    57a0:	03000001 	movweq	r0, #1
    57a4:	0000da00 	andeq	sp, r0, r0, lsl #20
    57a8:	fb010200 	blx	45fb2 <SYSTICK_CYCLES+0x1cf73>
    57ac:	01000d0e 	tsteq	r0, lr, lsl #26
    57b0:	00010101 	andeq	r0, r1, r1, lsl #2
    57b4:	00010000 	andeq	r0, r1, r0
    57b8:	2e2e0100 	sufcse	f0, f6, f0
    57bc:	2f2e2e2f 	svccs	0x002e2e2f
    57c0:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 5710 <_Min_Stack_Size+0x4710>
    57c4:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    57c8:	742f736f 	strtvc	r7, [pc], #-879	; 57d0 <_Min_Stack_Size+0x47d0>
    57cc:	61657268 	cmnvs	r5, r8, ror #4
    57d0:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    57d4:	6f6d6d6f 	svcvs	0x006d6d6f
    57d8:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    57dc:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    57e0:	2f2e2e2f 	svccs	0x002e2e2f
    57e4:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 5734 <_Min_Stack_Size+0x4734>
    57e8:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    57ec:	742f736f 	strtvc	r7, [pc], #-879	; 57f4 <_Min_Stack_Size+0x47f4>
    57f0:	61657268 	cmnvs	r5, r8, ror #4
    57f4:	702f7864 	eorvc	r7, pc, r4, ror #16
    57f8:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
    57fc:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    5800:	5f786574 	svcpl	0x00786574
    5804:	2f33336d 	svccs	0x0033336d
    5808:	2f756e67 	svccs	0x00756e67
    580c:	00636e69 	rsbeq	r6, r3, r9, ror #28
    5810:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    5814:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5818:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    581c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    5820:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    5824:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    5828:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 5774 <_Min_Stack_Size+0x4774>
    582c:	2f6e6f6d 	svccs	0x006e6f6d
    5830:	00636e69 	rsbeq	r6, r3, r9, ror #28
    5834:	65787400 	ldrbvs	r7, [r8, #-1024]!	; 0xfffffc00
    5838:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    583c:	6c615f65 	stclvs	15, cr5, [r1], #-404	; 0xfffffe6c
    5840:	61636f6c 	cmnvs	r3, ip, ror #30
    5844:	632e6574 			; <UNDEFINED> instruction: 0x632e6574
    5848:	00000100 	andeq	r0, r0, r0, lsl #2
    584c:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    5850:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    5854:	00020068 	andeq	r0, r2, r8, rrx
    5858:	5f787400 	svcpl	0x00787400
    585c:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    5860:	00030068 	andeq	r0, r3, r8, rrx
    5864:	5f787400 	svcpl	0x00787400
    5868:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    586c:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    5870:	00000300 	andeq	r0, r0, r0, lsl #6
    5874:	745f7874 	ldrbvc	r7, [pc], #-2164	; 587c <_Min_Stack_Size+0x487c>
    5878:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    587c:	0300682e 	movweq	r6, #2094	; 0x82e
    5880:	05000000 	streq	r0, [r0, #-0]
    5884:	02050001 	andeq	r0, r5, #1
    5888:	10002c10 	andne	r2, r0, r0, lsl ip
    588c:	0100d303 	tsteq	r0, r3, lsl #6
    5890:	22060106 	andcs	r0, r6, #-2147483647	; 0x80000001
    5894:	17050514 	smladne	r5, r4, r5, r0
    5898:	06080515 			; <UNDEFINED> instruction: 0x06080515
    589c:	060a0501 	streq	r0, [sl], -r1, lsl #10
    58a0:	060e0536 			; <UNDEFINED> instruction: 0x060e0536
    58a4:	10052001 	andne	r2, r5, r1
    58a8:	0605054e 	streq	r0, [r5], -lr, asr #10
    58ac:	2000c003 	andcs	ip, r0, r3
    58b0:	01060805 	tsteq	r6, r5, lsl #16
    58b4:	24060905 	strcs	r0, [r6], #-2309	; 0xfffff6fb
    58b8:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    58bc:	0102ca03 	tsteq	r2, r3, lsl #20
    58c0:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    58c4:	062f1305 	strteq	r1, [pc], -r5, lsl #6
    58c8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    58cc:	7db2030d 	ldcvc	3, cr0, [r2, #52]!	; 0x34
    58d0:	2e0c0501 	cfsh32cs	mvfx0, mvfx12, #1
    58d4:	40060d05 	andmi	r0, r6, r5, lsl #26
    58d8:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    58dc:	0102c603 	tsteq	r2, r3, lsl #12
    58e0:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    58e4:	062f1305 	strteq	r1, [pc], -r5, lsl #6
    58e8:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    58ec:	7db60311 	ldcvc	3, cr0, [r6, #68]!	; 0x44
    58f0:	4a100501 	bmi	406cfc <__RAM_SIZE+0x306cfc>
    58f4:	03060505 	movweq	r0, #25861	; 0x6505
    58f8:	08053c0a 	stmdaeq	r5, {r1, r3, sl, fp, ip, sp}
    58fc:	01050106 	tsteq	r5, r6, lsl #2
    5900:	05200903 	streq	r0, [r0, #-2307]!	; 0xfffff6fd
    5904:	a903060a 	stmdbge	r3, {r1, r3, r9, sl}
    5908:	0d05207f 	stceq	0, cr2, [r5, #-508]	; 0xfffffe04
    590c:	0a050106 	beq	145d2c <__RAM_SIZE+0x45d2c>
    5910:	0d052806 	stceq	8, cr2, [r5, #-24]	; 0xffffffe8
    5914:	0a050106 	beq	145d34 <__RAM_SIZE+0x45d34>
    5918:	25052806 	strcs	r2, [r5, #-2054]	; 0xfffff7fa
    591c:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5920:	0609052e 	streq	r0, [r9], -lr, lsr #10
    5924:	052e0c03 	streq	r0, [lr, #-3075]!	; 0xfffff3fd
    5928:	0501060c 	streq	r0, [r1, #-1548]	; 0xfffff9f4
    592c:	0424060d 	strteq	r0, [r4], #-1549	; 0xfffff9f3
    5930:	03370502 	teqeq	r7, #8388608	; 0x800000
    5934:	050102ea 	streq	r0, [r1, #-746]	; 0xfffffd16
    5938:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    593c:	01062f13 	tsteq	r6, r3, lsl pc
    5940:	11050104 	tstne	r5, r4, lsl #2
    5944:	017d9203 	cmneq	sp, r3, lsl #4
    5948:	052e1005 	streq	r1, [lr, #-5]!
    594c:	0f030609 	svceq	0x00030609
    5950:	0c05312e 	stfeqs	f3, [r5], {46}	; 0x2e
    5954:	10050106 	andne	r0, r5, r6, lsl #2
    5958:	20584203 	subscs	r4, r8, r3, lsl #4
    595c:	36201003 	strtcc	r1, [r0], -r3
    5960:	03180536 	tsteq	r8, #226492416	; 0xd800000
    5964:	14052e10 	strne	r2, [r5], #-3600	; 0xfffff1f0
    5968:	052e1203 	streq	r1, [lr, #-515]!	; 0xfffffdfd
    596c:	1c030609 	stcne	6, cr0, [r3], {9}
    5970:	0613052e 	ldreq	r0, [r3], -lr, lsr #10
    5974:	052e2001 	streq	r2, [lr, #-1]!
    5978:	20760318 	rsbscs	r0, r6, r8, lsl r3
    597c:	03060505 	movweq	r0, #25861	; 0x6505
    5980:	0b05200e 	bleq	14d9c0 <__RAM_SIZE+0x4d9c0>
    5984:	09020106 	stmdbeq	r2, {r1, r2, r8}
    5988:	c8010100 	stmdagt	r1, {r8}
    598c:	03000002 	movweq	r0, #2
    5990:	0000ef00 	andeq	lr, r0, r0, lsl #30
    5994:	fb010200 	blx	4619e <SYSTICK_CYCLES+0x1d15f>
    5998:	01000d0e 	tsteq	r0, lr, lsl #26
    599c:	00010101 	andeq	r0, r1, r1, lsl #2
    59a0:	00010000 	andeq	r0, r1, r0
    59a4:	2e2e0100 	sufcse	f0, f6, f0
    59a8:	2f2e2e2f 	svccs	0x002e2e2f
    59ac:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 58fc <_Min_Stack_Size+0x48fc>
    59b0:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    59b4:	742f736f 	strtvc	r7, [pc], #-879	; 59bc <_Min_Stack_Size+0x49bc>
    59b8:	61657268 	cmnvs	r5, r8, ror #4
    59bc:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    59c0:	6f6d6d6f 	svcvs	0x006d6d6f
    59c4:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    59c8:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    59cc:	2f2e2e2f 	svccs	0x002e2e2f
    59d0:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 5920 <_Min_Stack_Size+0x4920>
    59d4:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    59d8:	742f736f 	strtvc	r7, [pc], #-879	; 59e0 <_Min_Stack_Size+0x49e0>
    59dc:	61657268 	cmnvs	r5, r8, ror #4
    59e0:	702f7864 	eorvc	r7, pc, r4, ror #16
    59e4:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
    59e8:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    59ec:	5f786574 	svcpl	0x00786574
    59f0:	2f33336d 	svccs	0x0033336d
    59f4:	2f756e67 	svccs	0x00756e67
    59f8:	00636e69 	rsbeq	r6, r3, r9, ror #28
    59fc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    5a00:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5a04:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    5a08:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    5a0c:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    5a10:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    5a14:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 5960 <_Min_Stack_Size+0x4960>
    5a18:	2f6e6f6d 	svccs	0x006e6f6d
    5a1c:	00636e69 	rsbeq	r6, r3, r9, ror #28
    5a20:	65787400 	ldrbvs	r7, [r8, #-1024]!	; 0xfffffc00
    5a24:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    5a28:	6f705f65 	svcvs	0x00705f65
    5a2c:	635f6c6f 	cmpvs	pc, #28416	; 0x6f00
    5a30:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    5a34:	00632e65 	rsbeq	r2, r3, r5, ror #28
    5a38:	74000001 	strvc	r0, [r0], #-1
    5a3c:	6f705f78 	svcvs	0x00705f78
    5a40:	682e7472 	stmdavs	lr!, {r1, r4, r5, r6, sl, ip, sp, lr}
    5a44:	00000200 	andeq	r0, r0, r0, lsl #4
    5a48:	615f7874 	cmpvs	pc, r4, ror r8	; <UNPREDICTABLE>
    5a4c:	682e6970 	stmdavs	lr!, {r4, r5, r6, r8, fp, sp, lr}
    5a50:	00000300 	andeq	r0, r0, r0, lsl #6
    5a54:	745f7874 	ldrbvc	r7, [pc], #-2164	; 5a5c <_Min_Stack_Size+0x4a5c>
    5a58:	61657268 	cmnvs	r5, r8, ror #4
    5a5c:	00682e64 	rsbeq	r2, r8, r4, ror #28
    5a60:	74000003 	strvc	r0, [r0], #-3
    5a64:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    5a68:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
    5a6c:	00030068 	andeq	r0, r3, r8, rrx
    5a70:	5f787400 	svcpl	0x00787400
    5a74:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
    5a78:	6f6f705f 	svcvs	0x006f705f
    5a7c:	00682e6c 	rsbeq	r2, r8, ip, ror #28
    5a80:	00000003 	andeq	r0, r0, r3
    5a84:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    5a88:	002ca402 	eoreq	sl, ip, r2, lsl #8
    5a8c:	00d30310 	sbcseq	r0, r3, r0, lsl r3
    5a90:	13141401 	tstne	r4, #16777216	; 0x1000000
    5a94:	05051413 	streq	r1, [r5, #-1043]	; 0xfffffbed
    5a98:	08051517 	stmdaeq	r5, {r0, r1, r2, r4, r8, sl, ip}
    5a9c:	01050106 	tsteq	r5, r6, lsl #2
    5aa0:	052e7003 	streq	r7, [lr, #-3]!
    5aa4:	1803060a 	stmdane	r3, {r1, r3, r9, sl}
    5aa8:	060d0566 	streq	r0, [sp], -r6, ror #10
    5aac:	10052001 	andne	r2, r5, r1
    5ab0:	03010532 	movweq	r0, #5426	; 0x1532
    5ab4:	052000ee 	streq	r0, [r0, #-238]!	; 0xffffff12
    5ab8:	98030609 	stmdals	r3, {r0, r3, r9, sl}
    5abc:	02042e7f 	andeq	r2, r4, #2032	; 0x7f0
    5ac0:	dc033705 	stcle	7, cr3, [r3], {5}
    5ac4:	01050103 	tsteq	r5, r3, lsl #2
    5ac8:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    5acc:	5c033705 	stcpl	7, cr3, [r3], {5}
    5ad0:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    5ad4:	30160505 	andscc	r0, r6, r5, lsl #10
    5ad8:	03060106 	movweq	r0, #24838	; 0x6106
    5adc:	06220121 	strteq	r0, [r2], -r1, lsr #2
    5ae0:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    5ae4:	9c030609 	stcls	6, cr0, [r3], {9}
    5ae8:	2305017c 	movwcs	r0, #20860	; 0x517c
    5aec:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    5af0:	043f0609 	ldrteq	r0, [pc], #-1545	; 5af8 <_Min_Stack_Size+0x4af8>
    5af4:	03370502 	teqeq	r7, #8388608	; 0x800000
    5af8:	050103cd 	streq	r0, [r1, #-973]	; 0xfffffc33
    5afc:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    5b00:	09050104 	stmdbeq	r5, {r2, r8}
    5b04:	7cb10306 	ldcvc	3, cr0, [r1], #24
    5b08:	06130501 	ldreq	r0, [r3], -r1, lsl #10
    5b0c:	06090501 	streq	r0, [r9], -r1, lsl #10
    5b10:	0610052f 	ldreq	r0, [r0], -pc, lsr #10
    5b14:	001f0501 	andseq	r0, pc, r1, lsl #10
    5b18:	06010402 	streq	r0, [r1], -r2, lsl #8
    5b1c:	00210520 	eoreq	r0, r1, r0, lsr #10
    5b20:	06010402 	streq	r0, [r1], -r2, lsl #8
    5b24:	00090501 	andeq	r0, r9, r1, lsl #10
    5b28:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
    5b2c:	32060d05 	andcc	r0, r6, #320	; 0x140
    5b30:	01061005 	tsteq	r6, r5
    5b34:	02001105 	andeq	r1, r0, #1073741825	; 0x40000001
    5b38:	03060204 	movweq	r0, #25092	; 0x6204
    5b3c:	1b052e09 	blne	151368 <__RAM_SIZE+0x51368>
    5b40:	02040200 	andeq	r0, r4, #0, 4
    5b44:	40050106 	andmi	r0, r5, r6, lsl #2
    5b48:	02040200 	andeq	r0, r4, #0, 4
    5b4c:	20730306 	rsbscs	r0, r3, r6, lsl #6
    5b50:	02004105 	andeq	r4, r0, #1073741825	; 0x40000001
    5b54:	01060204 	tsteq	r6, r4, lsl #4
    5b58:	02040200 	andeq	r0, r4, #0, 4
    5b5c:	06090520 	streq	r0, [r9], -r0, lsr #10
    5b60:	04201203 	strteq	r1, [r0], #-515	; 0xfffffdfd
    5b64:	03370502 	teqeq	r7, #8388608	; 0x800000
    5b68:	050103c0 	streq	r0, [r1, #-960]	; 0xfffffc40
    5b6c:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    5b70:	03370514 	teqeq	r7, #20, 10	; 0x5000000
    5b74:	0105015c 	tsteq	r5, ip, asr r1
    5b78:	16050514 			; <UNDEFINED> instruction: 0x16050514
    5b7c:	06010630 			; <UNDEFINED> instruction: 0x06010630
    5b80:	22012103 	andcs	r2, r1, #-1073741824	; 0xc0000000
    5b84:	01040106 	tsteq	r4, r6, lsl #2
    5b88:	03060905 	movweq	r0, #26885	; 0x6905
    5b8c:	05017cb8 	streq	r7, [r1, #-3256]	; 0xfffff348
    5b90:	05010623 	streq	r0, [r1, #-1571]	; 0xfffff9dd
    5b94:	044d0609 	strbeq	r0, [sp], #-1545	; 0xfffff9f7
    5b98:	03370502 	teqeq	r7, #8388608	; 0x800000
    5b9c:	050103b1 	streq	r0, [r1, #-945]	; 0xfffffc4f
    5ba0:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    5ba4:	09050104 	stmdbeq	r5, {r2, r8}
    5ba8:	7ccd0306 	stclvc	3, cr0, [sp], {6}
    5bac:	0c053101 	stfeqs	f3, [r5], {1}
    5bb0:	0e050106 	adfeqs	f0, f5, f6
    5bb4:	11053606 	tstne	r5, r6, lsl #12
    5bb8:	0e050106 	adfeqs	f0, f5, f6
    5bbc:	11052806 	tstne	r5, r6, lsl #16
    5bc0:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5bc4:	3c0c0306 	stccc	3, cr0, [ip], {6}
    5bc8:	06100531 			; <UNDEFINED> instruction: 0x06100531
    5bcc:	030c0501 	movweq	r0, #50433	; 0xc501
    5bd0:	053c7fa4 	ldreq	r7, [ip, #-4004]!	; 0xfffff05c
    5bd4:	e503060d 	str	r0, [r3, #-1549]	; 0xfffff9f3
    5bd8:	02042000 	andeq	r2, r4, #0
    5bdc:	b4033705 	strlt	r3, [r3], #-1797	; 0xfffff8fb
    5be0:	01050102 	tsteq	r5, r2, lsl #2
    5be4:	13050514 	movwne	r0, #21780	; 0x5514
    5be8:	0401062f 	streq	r0, [r1], #-1583	; 0xfffff9d1
    5bec:	03110501 	tsteq	r1, #4194304	; 0x400000
    5bf0:	20017dc8 	andcs	r7, r1, r8, asr #27
    5bf4:	05201005 	streq	r1, [r0, #-5]!
    5bf8:	04320611 	ldrteq	r0, [r2], #-1553	; 0xfffff9ef
    5bfc:	03370502 	teqeq	r7, #8388608	; 0x800000
    5c00:	050102b0 	streq	r0, [r1, #-688]	; 0xfffffd50
    5c04:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    5c08:	01062f13 	tsteq	r6, r3, lsl pc
    5c0c:	15050104 	strne	r0, [r5, #-260]	; 0xfffffefc
    5c10:	017dcc03 	cmneq	sp, r3, lsl #24
    5c14:	053c1405 	ldreq	r1, [ip, #-1029]!	; 0xfffffbfb
    5c18:	0b030605 	bleq	c7434 <SYSTICK_CYCLES+0x9e3f5>
    5c1c:	0608053c 			; <UNDEFINED> instruction: 0x0608053c
    5c20:	06090501 	streq	r0, [r9], -r1, lsl #10
    5c24:	06130532 			; <UNDEFINED> instruction: 0x06130532
    5c28:	052e4a01 	streq	r4, [lr, #-2561]!	; 0xfffff5ff
    5c2c:	20680318 	rsbcs	r0, r8, r8, lsl r3
    5c30:	a7031005 	strge	r1, [r3, -r5]
    5c34:	01052e7f 	tsteq	r5, pc, ror lr
    5c38:	2000f603 	andcs	pc, r0, r3, lsl #12
    5c3c:	44031405 	strmi	r1, [r3], #-1029	; 0xfffffbfb
    5c40:	05363620 	ldreq	r3, [r6, #-1568]!	; 0xfffff9e0
    5c44:	2e1c031c 	mrccs	3, 0, r0, cr12, cr12, {0}
    5c48:	03060505 	movweq	r0, #25861	; 0x6505
    5c4c:	0b05200f 	bleq	14dc90 <__RAM_SIZE+0x4dc90>
    5c50:	0e020106 	adfeqs	f0, f2, f6
    5c54:	20010100 	andcs	r0, r1, r0, lsl #2
    5c58:	03000003 	movweq	r0, #3
    5c5c:	0000da00 	andeq	sp, r0, r0, lsl #20
    5c60:	fb010200 	blx	4646a <SYSTICK_CYCLES+0x1d42b>
    5c64:	01000d0e 	tsteq	r0, lr, lsl #26
    5c68:	00010101 	andeq	r0, r1, r1, lsl #2
    5c6c:	00010000 	andeq	r0, r1, r0
    5c70:	2e2e0100 	sufcse	f0, f6, f0
    5c74:	2f2e2e2f 	svccs	0x002e2e2f
    5c78:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 5bc8 <_Min_Stack_Size+0x4bc8>
    5c7c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    5c80:	742f736f 	strtvc	r7, [pc], #-879	; 5c88 <_Min_Stack_Size+0x4c88>
    5c84:	61657268 	cmnvs	r5, r8, ror #4
    5c88:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    5c8c:	6f6d6d6f 	svcvs	0x006d6d6f
    5c90:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    5c94:	2e2e0063 	cdpcs	0, 2, cr0, cr14, cr3, {3}
    5c98:	2f2e2e2f 	svccs	0x002e2e2f
    5c9c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 5bec <_Min_Stack_Size+0x4bec>
    5ca0:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    5ca4:	742f736f 	strtvc	r7, [pc], #-879	; 5cac <_Min_Stack_Size+0x4cac>
    5ca8:	61657268 	cmnvs	r5, r8, ror #4
    5cac:	702f7864 	eorvc	r7, pc, r4, ror #16
    5cb0:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
    5cb4:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    5cb8:	5f786574 	svcpl	0x00786574
    5cbc:	2f33336d 	svccs	0x0033336d
    5cc0:	2f756e67 	svccs	0x00756e67
    5cc4:	00636e69 	rsbeq	r6, r3, r9, ror #28
    5cc8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    5ccc:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    5cd0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    5cd4:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    5cd8:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    5cdc:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    5ce0:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 5c2c <_Min_Stack_Size+0x4c2c>
    5ce4:	2f6e6f6d 	svccs	0x006e6f6d
    5ce8:	00636e69 	rsbeq	r6, r3, r9, ror #28
    5cec:	65787400 	ldrbvs	r7, [r8, #-1024]!	; 0xfffffc00
    5cf0:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    5cf4:	5f646165 	svcpl	0x00646165
    5cf8:	61657263 	cmnvs	r5, r3, ror #4
    5cfc:	632e6574 			; <UNDEFINED> instruction: 0x632e6574
    5d00:	00000100 	andeq	r0, r0, r0, lsl #2
    5d04:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
    5d08:	2e74726f 	cdpcs	2, 7, cr7, cr4, cr15, {3}
    5d0c:	00020068 	andeq	r0, r2, r8, rrx
    5d10:	5f787400 	svcpl	0x00787400
    5d14:	2e697061 	cdpcs	0, 6, cr7, cr9, cr1, {3}
    5d18:	00030068 	andeq	r0, r3, r8, rrx
    5d1c:	5f787400 	svcpl	0x00787400
    5d20:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    5d24:	682e6461 	stmdavs	lr!, {r0, r5, r6, sl, sp, lr}
    5d28:	00000300 	andeq	r0, r0, r0, lsl #6
    5d2c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 5d34 <_Min_Stack_Size+0x4d34>
    5d30:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    5d34:	0300682e 	movweq	r6, #2094	; 0x82e
    5d38:	05000000 	streq	r0, [r0, #-0]
    5d3c:	02050001 	andeq	r0, r5, #1
    5d40:	10002d78 	andne	r2, r0, r8, ror sp
    5d44:	0100dd03 	tsteq	r0, r3, lsl #26
    5d48:	4c060106 	stfmis	f0, [r6], {6}
    5d4c:	13131314 	tstne	r3, #20, 6	; 0x50000000
    5d50:	05141313 	ldreq	r1, [r4, #-787]	; 0xfffffced
    5d54:	05151705 	ldreq	r1, [r5, #-1797]	; 0xfffff8fb
    5d58:	05010608 	streq	r0, [r1, #-1544]	; 0xfffff9f8
    5d5c:	056e060a 	strbeq	r0, [lr, #-1546]!	; 0xfffff9f6
    5d60:	2001060d 	andcs	r0, r1, sp, lsl #12
    5d64:	05321005 	ldreq	r1, [r2, #-5]!
    5d68:	01ba0301 			; <UNDEFINED> instruction: 0x01ba0301
    5d6c:	06090520 	streq	r0, [r9], -r0, lsr #10
    5d70:	3c7ecc03 	ldclcc	12, cr12, [lr], #-12
    5d74:	37050204 	strcc	r0, [r5, -r4, lsl #4]
    5d78:	0103cf03 	tsteq	r3, r3, lsl #30
    5d7c:	05140105 	ldreq	r0, [r4, #-261]	; 0xfffffefb
    5d80:	37051405 	strcc	r1, [r5, -r5, lsl #8]
    5d84:	05015c03 	streq	r5, [r1, #-3075]	; 0xfffff3fd
    5d88:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    5d8c:	01063016 	tsteq	r6, r6, lsl r0
    5d90:	01210306 			; <UNDEFINED> instruction: 0x01210306
    5d94:	04010622 	streq	r0, [r1], #-1570	; 0xfffff9de
    5d98:	06090501 	streq	r0, [r9], -r1, lsl #10
    5d9c:	017ca903 	cmneq	ip, r3, lsl #18
    5da0:	01062305 	tsteq	r6, r5, lsl #6
    5da4:	06090520 	streq	r0, [r9], -r0, lsr #10
    5da8:	0502043f 	streq	r0, [r2, #-1087]	; 0xfffffbc1
    5dac:	03c00337 	biceq	r0, r0, #-603979776	; 0xdc000000
    5db0:	17050501 	strne	r0, [r5, -r1, lsl #10]
    5db4:	01042e06 	tsteq	r4, r6, lsl #28
    5db8:	03060905 	movweq	r0, #26885	; 0x6905
    5dbc:	13017cbe 	movwne	r7, #7358	; 0x1cbe
    5dc0:	01061505 	tsteq	r6, r5, lsl #10
    5dc4:	2f060905 	svccs	0x00060905
    5dc8:	06180513 			; <UNDEFINED> instruction: 0x06180513
    5dcc:	2e120501 	cfmul32cs	mvfx0, mvfx2, mvfx1
    5dd0:	21060905 	tstcs	r6, r5, lsl #18
    5dd4:	06100513 			; <UNDEFINED> instruction: 0x06100513
    5dd8:	1b140501 	blne	5071e4 <__RAM_SIZE+0x4071e4>
    5ddc:	05250905 	streq	r0, [r5, #-2309]!	; 0xfffff6fb
    5de0:	0402000d 	streq	r0, [r2], #-13
    5de4:	34030602 	strcc	r0, [r3], #-1538	; 0xfffff9fe
    5de8:	00190520 	andseq	r0, r9, r0, lsr #10
    5dec:	06020402 	streq	r0, [r2], -r2, lsl #8
    5df0:	003d0501 	eorseq	r0, sp, r1, lsl #10
    5df4:	06020402 	streq	r0, [r2], -r2, lsl #8
    5df8:	052e4c03 	streq	r4, [lr, #-3075]!	; 0xfffff3fd
    5dfc:	0402003e 	streq	r0, [r2], #-62	; 0xffffffc2
    5e00:	05010602 	streq	r0, [r1, #-1538]	; 0xfffff9fe
    5e04:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
    5e08:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    5e0c:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    5e10:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    5e14:	04020009 	streq	r0, [r2], #-9
    5e18:	0d052e01 	stceq	14, cr2, [r5, #-4]
    5e1c:	10053206 	andne	r3, r5, r6, lsl #4
    5e20:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5e24:	10053606 	andne	r3, r5, r6, lsl #12
    5e28:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5e2c:	2c052806 	stccs	8, cr2, [r5], {6}
    5e30:	10050106 	andne	r0, r5, r6, lsl #2
    5e34:	06110520 	ldreq	r0, [r1], -r0, lsr #10
    5e38:	062f0531 			; <UNDEFINED> instruction: 0x062f0531
    5e3c:	20140501 	andscs	r0, r4, r1, lsl #10
    5e40:	05362005 	ldreq	r2, [r6, #-5]!
    5e44:	0d051d21 	stceq	13, cr1, [r5, #-132]	; 0xffffff7c
    5e48:	10052806 	andne	r2, r5, r6, lsl #16
    5e4c:	11050106 	tstne	r5, r6, lsl #2
    5e50:	2d053106 	stfcss	f3, [r5, #-24]	; 0xffffffe8
    5e54:	14050106 	strne	r0, [r5], #-262	; 0xfffffefa
    5e58:	36200520 	strtcc	r0, [r0], -r0, lsr #10
    5e5c:	201d2105 	andscs	r2, sp, r5, lsl #2
    5e60:	03060905 	movweq	r0, #26885	; 0x6905
    5e64:	0204200c 	andeq	r2, r4, #12
    5e68:	89033705 	stmdbhi	r3, {r0, r2, r8, r9, sl, ip, sp}
    5e6c:	01050103 	tsteq	r5, r3, lsl #2
    5e70:	14050514 	strne	r0, [r5], #-1300	; 0xfffffaec
    5e74:	5c033705 	stcpl	7, cr3, [r3], {5}
    5e78:	14010501 	strne	r0, [r1], #-1281	; 0xfffffaff
    5e7c:	30160505 	andscc	r0, r6, r5, lsl #10
    5e80:	03060106 	movweq	r0, #24838	; 0x6106
    5e84:	06220121 	strteq	r0, [r2], -r1, lsr #2
    5e88:	05010401 	streq	r0, [r1, #-1025]	; 0xfffffbff
    5e8c:	ef030609 	svc	0x00030609
    5e90:	2305017c 	movwcs	r0, #20860	; 0x517c
    5e94:	05200106 	streq	r0, [r0, #-262]!	; 0xfffffefa
    5e98:	043f0609 	ldrteq	r0, [pc], #-1545	; 5ea0 <_Min_Stack_Size+0x4ea0>
    5e9c:	03370502 	teqeq	r7, #8388608	; 0x800000
    5ea0:	050102fa 	streq	r0, [r1, #-762]	; 0xfffffd06
    5ea4:	2e061705 	cdpcs	7, 0, cr1, cr6, cr5, {0}
    5ea8:	09050104 	stmdbeq	r5, {r2, r8}
    5eac:	7d840306 	stcvc	3, cr0, [r4, #24]
    5eb0:	0c053101 	stfeqs	f3, [r5], {1}
    5eb4:	0e050106 	adfeqs	f0, f5, f6
    5eb8:	11053606 	tstne	r5, r6, lsl #12
    5ebc:	0e050106 	adfeqs	f0, f5, f6
    5ec0:	11053606 	tstne	r5, r6, lsl #12
    5ec4:	0e050106 	adfeqs	f0, f5, f6
    5ec8:	11054406 	tstne	r5, r6, lsl #8
    5ecc:	0e050106 	adfeqs	f0, f5, f6
    5ed0:	11055206 	tstne	r5, r6, lsl #4
    5ed4:	0e050106 	adfeqs	f0, f5, f6
    5ed8:	11054406 	tstne	r5, r6, lsl #8
    5edc:	0e050106 	adfeqs	f0, f5, f6
    5ee0:	11054406 	tstne	r5, r6, lsl #8
    5ee4:	0d050106 	stfeqs	f0, [r5, #-24]	; 0xffffffe8
    5ee8:	3c0c0306 	stccc	3, cr0, [ip], {6}
    5eec:	06100531 			; <UNDEFINED> instruction: 0x06100531
    5ef0:	030c0501 	movweq	r0, #50433	; 0xc501
    5ef4:	053c7eda 	ldreq	r7, [ip, #-3802]!	; 0xfffff126
    5ef8:	af03060d 	svcge	0x0003060d
    5efc:	02042001 	andeq	r2, r4, #1
    5f00:	dd033705 	stcle	7, cr3, [r3, #-20]	; 0xffffffec
    5f04:	01050101 	tsteq	r5, r1, lsl #2
    5f08:	13050514 	movwne	r0, #21780	; 0x5514
    5f0c:	0401062f 	streq	r0, [r1], #-1583	; 0xfffff9d1
    5f10:	03110501 	tsteq	r1, #4194304	; 0x400000
    5f14:	20017e9f 	mulcs	r1, pc, lr	; <UNPREDICTABLE>
    5f18:	05201005 	streq	r1, [r0, #-5]!
    5f1c:	04320611 	ldrteq	r0, [r2], #-1553	; 0xfffff9ef
    5f20:	03370502 	teqeq	r7, #8388608	; 0x800000
    5f24:	050101d9 	streq	r0, [r1, #-473]	; 0xfffffe27
    5f28:	05051401 	streq	r1, [r5, #-1025]	; 0xfffffbff
    5f2c:	01062f13 	tsteq	r6, r3, lsl pc
    5f30:	15050104 	strne	r0, [r5, #-260]	; 0xfffffefc
    5f34:	017ea303 	cmneq	lr, r3, lsl #6
    5f38:	053c1405 	ldreq	r1, [ip, #-1029]!	; 0xfffffbfb
    5f3c:	0b030605 	bleq	c7758 <SYSTICK_CYCLES+0x9e719>
    5f40:	0608053c 			; <UNDEFINED> instruction: 0x0608053c
    5f44:	06090501 	streq	r0, [r9], -r1, lsl #10
    5f48:	06130532 			; <UNDEFINED> instruction: 0x06130532
    5f4c:	052ee401 	streq	lr, [lr, #-1025]!	; 0xfffffbff
    5f50:	20680318 	rsbcs	r0, r8, r8, lsl r3
    5f54:	dd031005 	stcle	0, cr1, [r3, #-20]	; 0xffffffec
    5f58:	05202e7e 	streq	r2, [r0, #-3710]!	; 0xfffff182
    5f5c:	00e40314 	rsceq	r0, r4, r4, lsl r3
    5f60:	36363620 	ldrtcc	r3, [r6], -r0, lsr #12
    5f64:	05363636 	ldreq	r3, [r6, #-1590]!	; 0xfffff9ca
    5f68:	2e1c031c 	mrccs	3, 0, r0, cr12, cr12, {0}
    5f6c:	03060505 	movweq	r0, #25861	; 0x6505
    5f70:	0b052011 	bleq	14dfbc <__RAM_SIZE+0x4dfbc>
    5f74:	0e020106 	adfeqs	f0, f2, f6
    5f78:	e4010100 	str	r0, [r1], #-256	; 0xffffff00
    5f7c:	03000001 	movweq	r0, #1
    5f80:	00017c00 	andeq	r7, r1, r0, lsl #24
    5f84:	fb010200 	blx	4678e <SYSTICK_CYCLES+0x1d74f>
    5f88:	01000d0e 	tsteq	r0, lr, lsl #26
    5f8c:	00010101 	andeq	r0, r1, r1, lsl #2
    5f90:	00010000 	andeq	r0, r1, r0
    5f94:	2f2e0100 	svccs	0x002e0100
    5f98:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
    5f9c:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    5fa0:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    5fa4:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    5fa8:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    5fac:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    5fb0:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    5fb4:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    5fb8:	615c6d61 	cmpvs	ip, r1, ror #26
    5fbc:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    5fc0:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    5fc4:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    5fc8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    5fcc:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    5fd0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    5fd4:	2e30312d 	rsfcssp	f3, f0, #5.0
    5fd8:	30322d33 	eorscc	r2, r2, r3, lsr sp
    5fdc:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    5fe0:	696c5c30 	stmdbvs	ip!, {r4, r5, sl, fp, ip, lr}^
    5fe4:	63675c62 	cmnvs	r7, #25088	; 0x6200
    5fe8:	72615c63 	rsbvc	r5, r1, #25344	; 0x6300
    5fec:	6f6e2d6d 	svcvs	0x006e2d6d
    5ff0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    5ff4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    5ff8:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    5ffc:	695c312e 	ldmdbvs	ip, {r1, r2, r3, r5, r8, ip, sp}^
    6000:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    6004:	63006564 	movwvs	r6, #1380	; 0x564
    6008:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    600c:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    6010:	6f646978 	svcvs	0x00646978
    6014:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    6018:	6172676f 	cmnvs	r2, pc, ror #14
    601c:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    6020:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    6024:	63675c63 	cmnvs	r7, #25344	; 0x6300
    6028:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    602c:	6f6e2d6d 	svcvs	0x006e2d6d
    6030:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    6034:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    6038:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    603c:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    6040:	30312e31 	eorscc	r2, r1, r1, lsr lr
    6044:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    6048:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    604c:	61652d65 	cmnvs	r5, r5, ror #26
    6050:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    6054:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    6058:	6d5c6564 	cfldr64vs	mvdx6, [ip, #-400]	; 0xfffffe70
    605c:	69686361 	stmdbvs	r8!, {r0, r5, r6, r8, r9, sp, lr}^
    6060:	6300656e 	movwvs	r6, #1390	; 0x56e
    6064:	73755c3a 	cmnvc	r5, #14848	; 0x3a00
    6068:	5c737265 	lfmpl	f7, 2, [r3], #-404	; 0xfffffe6c
    606c:	6f646978 	svcvs	0x00646978
    6070:	72705c6e 	rsbsvc	r5, r0, #28160	; 0x6e00
    6074:	6172676f 	cmnvs	r2, pc, ror #14
    6078:	72615c6d 	rsbvc	r5, r1, #27904	; 0x6d00
    607c:	63675f6d 	cmnvs	r7, #436	; 0x1b4
    6080:	63675c63 	cmnvs	r7, #25344	; 0x6300
    6084:	72612d63 	rsbvc	r2, r1, #6336	; 0x18c0
    6088:	6f6e2d6d 	svcvs	0x006e2d6d
    608c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    6090:	2d696261 	sfmcs	f6, 2, [r9, #-388]!	; 0xfffffe7c
    6094:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
    6098:	3230322d 	eorscc	r3, r0, #-805306366	; 0xd0000002
    609c:	30312e31 	eorscc	r2, r1, r1, lsr lr
    60a0:	6d72615c 	ldfvse	f6, [r2, #-368]!	; 0xfffffe90
    60a4:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
    60a8:	61652d65 	cmnvs	r5, r5, ror #26
    60ac:	695c6962 	ldmdbvs	ip, {r1, r5, r6, r8, fp, sp, lr}^
    60b0:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
    60b4:	735c6564 	cmpvc	ip, #100, 10	; 0x19000000
    60b8:	00007379 	andeq	r7, r0, r9, ror r3
    60bc:	6d737973 			; <UNDEFINED> instruction: 0x6d737973
    60c0:	632e6d65 			; <UNDEFINED> instruction: 0x632e6d65
    60c4:	00000100 	andeq	r0, r0, r0, lsl #2
    60c8:	64647473 	strbtvs	r7, [r4], #-1139	; 0xfffffb8d
    60cc:	682e6665 	stmdavs	lr!, {r0, r2, r5, r6, r9, sl, sp, lr}
    60d0:	00000200 	andeq	r0, r0, r0, lsl #4
    60d4:	6665645f 			; <UNDEFINED> instruction: 0x6665645f
    60d8:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
    60dc:	7079745f 	rsbsvc	r7, r9, pc, asr r4
    60e0:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    60e4:	00000300 	andeq	r0, r0, r0, lsl #6
    60e8:	6474735f 	ldrbtvs	r7, [r4], #-863	; 0xfffffca1
    60ec:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
    60f0:	00040068 	andeq	r0, r4, r8, rrx
    60f4:	72726500 	rsbsvc	r6, r2, #0, 10
    60f8:	682e6f6e 	stmdavs	lr!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}
    60fc:	00000400 	andeq	r0, r0, r0, lsl #8
    6100:	00010500 	andeq	r0, r1, r0, lsl #10
    6104:	2ec00205 	cdpcs	2, 12, cr0, cr0, cr5, {0}
    6108:	35031000 	strcc	r1, [r3, #-0]
    610c:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    6110:	132f0603 			; <UNDEFINED> instruction: 0x132f0603
    6114:	12051313 	andne	r1, r5, #1275068416	; 0x4c000000
    6118:	03050106 	movweq	r0, #20742	; 0x5106
    611c:	15132f06 	ldrne	r2, [r3, #-3846]	; 0xfffff0fa
    6120:	01060c05 	tsteq	r6, r5, lsl #24
    6124:	20060520 	andcs	r0, r6, r0, lsr #10
    6128:	26060305 	strcs	r0, [r6], -r5, lsl #6
    612c:	01061705 	tsteq	r6, r5, lsl #14
    6130:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
    6134:	13420603 	movtne	r0, #9731	; 0x2603
    6138:	01061305 	tsteq	r6, r5, lsl #6
    613c:	30060305 	andcc	r0, r6, r5, lsl #6
    6140:	13060105 	movwne	r0, #24837	; 0x6105
    6144:	03060505 	movweq	r0, #25861	; 0x6505
    6148:	15052072 	strne	r2, [r5, #-114]	; 0xffffff8e
    614c:	05050106 	streq	r0, [r5, #-262]	; 0xfffffefa
    6150:	0b055006 	bleq	15a170 <__RAM_SIZE+0x5a170>
    6154:	05052e06 	streq	r2, [r5, #-3590]	; 0xfffff1fa
    6158:	0c052f06 	stceq	15, cr2, [r5], {6}
    615c:	0c020106 	stfeqs	f0, [r2], {6}
    6160:	19010100 	stmdbne	r1, {r8}
    6164:	03000004 	movweq	r0, #4
    6168:	00014b00 	andeq	r4, r1, r0, lsl #22
    616c:	fb010200 	blx	46976 <SYSTICK_CYCLES+0x1d937>
    6170:	01000d0e 	tsteq	r0, lr, lsl #26
    6174:	00010101 	andeq	r0, r1, r1, lsl #2
    6178:	00010000 	andeq	r0, r1, r0
    617c:	2f2e0100 	svccs	0x002e0100
    6180:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
    6184:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    6188:	006e6f69 	rsbeq	r6, lr, r9, ror #30
    618c:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    6190:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    6194:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    6198:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    619c:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    61a0:	615c6d61 	cmpvs	ip, r1, ror #26
    61a4:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    61a8:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    61ac:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    61b0:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    61b4:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    61b8:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    61bc:	2e30312d 	rsfcssp	f3, f0, #5.0
    61c0:	30322d33 	eorscc	r2, r2, r3, lsr sp
    61c4:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    61c8:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    61cc:	6f6e2d6d 	svcvs	0x006e2d6d
    61d0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    61d4:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    61d8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    61dc:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    61e0:	6863616d 	stmdavs	r3!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    61e4:	00656e69 	rsbeq	r6, r5, r9, ror #28
    61e8:	755c3a63 	ldrbvc	r3, [ip, #-2659]	; 0xfffff59d
    61ec:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
    61f0:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
    61f4:	705c6e6f 	subsvc	r6, ip, pc, ror #28
    61f8:	72676f72 	rsbvc	r6, r7, #456	; 0x1c8
    61fc:	615c6d61 	cmpvs	ip, r1, ror #26
    6200:	675f6d72 			; <UNDEFINED> instruction: 0x675f6d72
    6204:	675c6363 	ldrbvs	r6, [ip, -r3, ror #6]
    6208:	612d6363 			; <UNDEFINED> instruction: 0x612d6363
    620c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
    6210:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
    6214:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
    6218:	2e30312d 	rsfcssp	f3, f0, #5.0
    621c:	30322d33 	eorscc	r2, r2, r3, lsr sp
    6220:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
    6224:	72615c30 	rsbvc	r5, r1, #48, 24	; 0x3000
    6228:	6f6e2d6d 	svcvs	0x006e2d6d
    622c:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
    6230:	5c696261 	sfmpl	f6, 2, [r9], #-388	; 0xfffffe7c
    6234:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
    6238:	5c656475 	cfstrdpl	mvd6, [r5], #-468	; 0xfffffe2c
    623c:	00737973 	rsbseq	r7, r3, r3, ror r9
    6240:	73797300 	cmnvc	r9, #0, 6
    6244:	6c6c6163 	stfvse	f6, [ip], #-396	; 0xfffffe74
    6248:	00632e73 	rsbeq	r2, r3, r3, ror lr
    624c:	5f000001 	svcpl	0x00000001
    6250:	61666564 	cmnvs	r6, r4, ror #10
    6254:	5f746c75 	svcpl	0x00746c75
    6258:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    625c:	00682e73 	rsbeq	r2, r8, r3, ror lr
    6260:	5f000002 	svcpl	0x00000002
    6264:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    6268:	00682e73 	rsbeq	r2, r8, r3, ror lr
    626c:	5f000003 	svcpl	0x00000003
    6270:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    6274:	2e6c6176 	mcrcs	1, 3, r6, cr12, cr6, {3}
    6278:	00030068 	andeq	r0, r3, r8, rrx
    627c:	69745f00 	ldmdbvs	r4!, {r8, r9, sl, fp, ip, lr}^
    6280:	7073656d 	rsbsvc	r6, r3, sp, ror #10
    6284:	682e6365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, sp, lr}
    6288:	00000300 	andeq	r0, r0, r0, lsl #6
    628c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
    6290:	00682e73 	rsbeq	r2, r8, r3, ror lr
    6294:	73000003 	movwvc	r0, #3
    6298:	2e746174 	mrccs	1, 3, r6, cr4, cr4, {3}
    629c:	00030068 	andeq	r0, r3, r8, rrx
    62a0:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
    62a4:	682e7365 	stmdavs	lr!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
    62a8:	00000300 	andeq	r0, r0, r0, lsl #6
    62ac:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
    62b0:	00682e6f 	rsbeq	r2, r8, pc, ror #28
    62b4:	00000003 	andeq	r0, r0, r3
    62b8:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    62bc:	00000002 	andeq	r0, r0, r2
    62c0:	012c0300 			; <UNDEFINED> instruction: 0x012c0300
    62c4:	00010213 	andeq	r0, r1, r3, lsl r2
    62c8:	01050101 	tsteq	r5, r1, lsl #2
    62cc:	08020500 	stmdaeq	r2, {r8, sl}
    62d0:	0310002f 	tsteq	r0, #47	; 0x2f
    62d4:	03050130 	movweq	r0, #20784	; 0x5130
    62d8:	06010513 			; <UNDEFINED> instruction: 0x06010513
    62dc:	00020213 	andeq	r0, r2, r3, lsl r2
    62e0:	01050101 	tsteq	r5, r1, lsl #2
    62e4:	0c020500 	cfstr32eq	mvfx0, [r2], {-0}
    62e8:	0310002f 	tsteq	r0, #47	; 0x2f
    62ec:	01060135 	tsteq	r6, r5, lsr r1
    62f0:	21060305 	tstcs	r6, r5, lsl #6
    62f4:	09051313 	stmdbeq	r5, {r0, r1, r4, r8, r9, ip}
    62f8:	03052e06 	movweq	r2, #24070	; 0x5e06
    62fc:	01052f06 	tsteq	r5, r6, lsl #30
    6300:	03021306 	movweq	r1, #8966	; 0x2306
    6304:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6308:	02050001 	andeq	r0, r5, #1
    630c:	10002f1c 	andne	r2, r0, ip, lsl pc
    6310:	06013d03 	streq	r3, [r1], -r3, lsl #26
    6314:	06030501 	streq	r0, [r3], -r1, lsl #10
    6318:	04020021 	streq	r0, [r2], #-33	; 0xffffffdf
    631c:	0e054b01 	vmlaeq.f64	d4, d5, d1
    6320:	01040200 	mrseq	r0, R12_usr
    6324:	00090501 	andeq	r0, r9, r1, lsl #10
    6328:	01010402 	tsteq	r1, r2, lsl #8
    632c:	01000102 	tsteq	r0, r2, lsl #2
    6330:	00010501 	andeq	r0, r1, r1, lsl #10
    6334:	2f280205 	svccs	0x00280205
    6338:	c3031000 	movwgt	r1, #12288	; 0x3000
    633c:	01060100 	mrseq	r0, (UNDEF: 22)
    6340:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    6344:	10051413 	andne	r1, r5, r3, lsl r4
    6348:	03050106 	movweq	r0, #20742	; 0x5106
    634c:	00050520 	andeq	r0, r5, r0, lsr #10
    6350:	06030402 	streq	r0, [r3], -r2, lsl #8
    6354:	000e0522 	andeq	r0, lr, r2, lsr #10
    6358:	06030402 	streq	r0, [r3], -r2, lsl #8
    635c:	00090501 	andeq	r0, r9, r1, lsl #10
    6360:	2e030402 	cdpcs	4, 0, cr0, cr3, cr2, {0}
    6364:	02000c05 	andeq	r0, r0, #1280	; 0x500
    6368:	05200304 	streq	r0, [r0, #-772]!	; 0xfffffcfc
    636c:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    6370:	052c0603 	streq	r0, [ip, #-1539]!	; 0xfffff9fd
    6374:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    6378:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    637c:	04020009 	streq	r0, [r2], #-9
    6380:	15052203 	strne	r2, [r5, #-515]	; 0xfffffdfd
    6384:	01040200 	mrseq	r0, R12_usr
    6388:	03051e06 	movweq	r1, #24070	; 0x5e06
    638c:	01040200 	mrseq	r0, R12_usr
    6390:	33060106 	movwcc	r0, #24838	; 0x6106
    6394:	13060105 	movwne	r0, #24837	; 0x6105
    6398:	0101002e 	tsteq	r1, lr, lsr #32
    639c:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    63a0:	002f4802 	eoreq	r4, pc, r2, lsl #16
    63a4:	00d00310 	sbcseq	r0, r0, r0, lsl r3
    63a8:	05010601 	streq	r0, [r1, #-1537]	; 0xfffff9ff
    63ac:	133d0603 	teqne	sp, #3145728	; 0x300000
    63b0:	06100514 			; <UNDEFINED> instruction: 0x06100514
    63b4:	20030501 	andcs	r0, r3, r1, lsl #10
    63b8:	02000505 	andeq	r0, r0, #20971520	; 0x1400000
    63bc:	22060304 	andcs	r0, r6, #4, 6	; 0x10000000
    63c0:	03040200 	movweq	r0, #16896	; 0x4200
    63c4:	02000106 	andeq	r0, r0, #-2147483647	; 0x80000001
    63c8:	052e0304 	streq	r0, [lr, #-772]!	; 0xfffffcfc
    63cc:	04020024 	streq	r0, [r2], #-36	; 0xffffffdc
    63d0:	052c0603 	streq	r0, [ip, #-1539]!	; 0xfffff9fd
    63d4:	0402002b 	streq	r0, [r2], #-43	; 0xffffffd5
    63d8:	05010603 	streq	r0, [r1, #-1539]	; 0xfffff9fd
    63dc:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
    63e0:	05200601 	streq	r0, [r0, #-1537]!	; 0xfffff9ff
    63e4:	04020003 	streq	r0, [r2], #-3
    63e8:	06010601 	streq	r0, [r1], -r1, lsl #12
    63ec:	06010532 			; <UNDEFINED> instruction: 0x06010532
    63f0:	01002e13 	tsteq	r0, r3, lsl lr
    63f4:	00010501 	andeq	r0, r1, r1, lsl #10
    63f8:	2f640205 	svccs	0x00640205
    63fc:	dc031000 	stcle	0, cr1, [r3], {-0}
    6400:	03050100 	movweq	r0, #20736	; 0x5100
    6404:	01051313 	tsteq	r5, r3, lsl r3
    6408:	022e1306 	eoreq	r1, lr, #402653184	; 0x18000000
    640c:	01010001 	tsteq	r1, r1
    6410:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    6414:	002f6a02 	eoreq	r6, pc, r2, lsl #20
    6418:	00e30310 	rsceq	r0, r3, r0, lsl r3
    641c:	13030501 	movwne	r0, #13569	; 0x3501
    6420:	060f0513 			; <UNDEFINED> instruction: 0x060f0513
    6424:	06030501 	streq	r0, [r3], -r1, lsl #10
    6428:	0601053d 			; <UNDEFINED> instruction: 0x0601053d
    642c:	01022013 	tsteq	r2, r3, lsl r0
    6430:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    6434:	02050001 	andeq	r0, r5, #1
    6438:	10002f74 	andne	r2, r0, r4, ror pc
    643c:	0100ea03 	tsteq	r0, r3, lsl #20
    6440:	13130305 	tstne	r3, #335544320	; 0x14000000
    6444:	13060105 	movwne	r0, #24837	; 0x6105
    6448:	00010220 	andeq	r0, r1, r0, lsr #4
    644c:	01050101 	tsteq	r5, r1, lsl #2
    6450:	78020500 	stmdavc	r2, {r8, sl}
    6454:	0310002f 	tsteq	r0, #47	; 0x2f
    6458:	050100f0 	streq	r0, [r1, #-240]	; 0xffffff10
    645c:	13131303 	tstne	r3, #201326592	; 0xc000000
    6460:	06010513 			; <UNDEFINED> instruction: 0x06010513
    6464:	01022013 	tsteq	r2, r3, lsl r0
    6468:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    646c:	02050001 	andeq	r0, r5, #1
    6470:	00000000 	andeq	r0, r0, r0
    6474:	0100f803 	tsteq	r0, r3, lsl #16	; <UNPREDICTABLE>
    6478:	03050106 	movweq	r0, #20742	; 0x5106
    647c:	14132106 	ldrne	r2, [r3], #-262	; 0xfffffefa
    6480:	13060105 	movwne	r0, #24837	; 0x6105
    6484:	0002022e 	andeq	r0, r2, lr, lsr #4
    6488:	01050101 	tsteq	r5, r1, lsl #2
    648c:	00020500 	andeq	r0, r2, r0, lsl #10
    6490:	03000000 	movweq	r0, #0
    6494:	06010180 	streq	r0, [r1], -r0, lsl #3
    6498:	06030501 	streq	r0, [r3], -r1, lsl #10
    649c:	09051321 	stmdbeq	r5, {r0, r5, r8, r9, ip}
    64a0:	03052e06 	movweq	r2, #24070	; 0x5e06
    64a4:	01052f06 	tsteq	r5, r6, lsl #30
    64a8:	03021306 	movweq	r1, #8966	; 0x2306
    64ac:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    64b0:	02050001 	andeq	r0, r5, #1
    64b4:	00000000 	andeq	r0, r0, r0
    64b8:	01018703 	tsteq	r1, r3, lsl #14
    64bc:	03050106 	movweq	r0, #20742	; 0x5106
    64c0:	05132106 	ldreq	r2, [r3, #-262]	; 0xfffffefa
    64c4:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
    64c8:	052f0603 	streq	r0, [pc, #-1539]!	; 5ecd <_Min_Stack_Size+0x4ecd>
    64cc:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    64d0:	01010003 	tsteq	r1, r3
    64d4:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    64d8:	00000002 	andeq	r0, r0, r2
    64dc:	018e0300 	orreq	r0, lr, r0, lsl #6
    64e0:	13030501 	movwne	r0, #13569	; 0x3501
    64e4:	06010513 			; <UNDEFINED> instruction: 0x06010513
    64e8:	01022e13 	tsteq	r2, r3, lsl lr
    64ec:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
    64f0:	02050001 	andeq	r0, r5, #1
    64f4:	00000000 	andeq	r0, r0, r0
    64f8:	01019403 	tsteq	r1, r3, lsl #8
    64fc:	13130305 	tstne	r3, #335544320	; 0x14000000
    6500:	01060f05 	tsteq	r6, r5, lsl #30
    6504:	3d060305 	stccc	3, cr0, [r6, #-20]	; 0xffffffec
    6508:	13060105 	movwne	r0, #24837	; 0x6105
    650c:	00010220 	andeq	r0, r1, r0, lsr #4
    6510:	01050101 	tsteq	r5, r1, lsl #2
    6514:	00020500 	andeq	r0, r2, r0, lsl #10
    6518:	03000000 	movweq	r0, #0
    651c:	0601019b 			; <UNDEFINED> instruction: 0x0601019b
    6520:	06030501 	streq	r0, [r3], -r1, lsl #10
    6524:	05131321 	ldreq	r1, [r3, #-801]	; 0xfffffcdf
    6528:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
    652c:	052f0603 	streq	r0, [pc, #-1539]!	; 5f31 <_Min_Stack_Size+0x4f31>
    6530:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    6534:	01010003 	tsteq	r1, r3
    6538:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
    653c:	00000002 	andeq	r0, r0, r2
    6540:	01a30300 			; <UNDEFINED> instruction: 0x01a30300
    6544:	21030501 	tstcs	r3, r1, lsl #10
    6548:	2e060905 	vmlacs.f16	s0, s12, s10	; <UNPREDICTABLE>
    654c:	2f060305 	svccs	0x00060305
    6550:	13060105 	movwne	r0, #24837	; 0x6105
    6554:	01000302 	tsteq	r0, r2, lsl #6
    6558:	00010501 	andeq	r0, r1, r1, lsl #10
    655c:	00000205 	andeq	r0, r0, r5, lsl #4
    6560:	a9030000 	stmdbge	r3, {}	; <UNPREDICTABLE>
    6564:	01060101 	tsteq	r6, r1, lsl #2
    6568:	21060305 	tstcs	r6, r5, lsl #6
    656c:	05131313 	ldreq	r1, [r3, #-787]	; 0xfffffced
    6570:	052e0609 	streq	r0, [lr, #-1545]!	; 0xfffff9f7
    6574:	052f0603 	streq	r0, [pc, #-1539]!	; 5f79 <_Min_Stack_Size+0x4f79>
    6578:	02130601 	andseq	r0, r3, #1048576	; 0x100000
    657c:	01010003 	tsteq	r1, r3
    6580:	00000082 	andeq	r0, r0, r2, lsl #1
    6584:	00360003 	eorseq	r0, r6, r3
    6588:	01020000 	mrseq	r0, (UNDEF: 2)
    658c:	000d0efb 	strdeq	r0, [sp], -fp
    6590:	01010101 	tsteq	r1, r1, lsl #2
    6594:	01000000 	mrseq	r0, (UNDEF: 0)
    6598:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
    659c:	6174732f 	cmnvs	r4, pc, lsr #6
    65a0:	70757472 	rsbsvc	r7, r5, r2, ror r4
    65a4:	6363672f 	cmnvs	r3, #12320768	; 0xbc0000
    65a8:	74730000 	ldrbtvc	r0, [r3], #-0
    65ac:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    65b0:	52415f70 	subpl	r5, r1, #112, 30	; 0x1c0
    65b4:	334d434d 	movtcc	r4, #54093	; 0xd34d
    65b8:	00732e33 	rsbseq	r2, r3, r3, lsr lr
    65bc:	00000001 	andeq	r0, r0, r1
    65c0:	7c020500 	cfstr32vc	mvfx0, [r2], {-0}
    65c4:	0310002f 	tsteq	r0, #47	; 0x2f
    65c8:	210100d3 	ldrdcs	r0, [r1, -r3]
    65cc:	362f2130 			; <UNDEFINED> instruction: 0x362f2130
    65d0:	21232130 			; <UNDEFINED> instruction: 0x21232130
    65d4:	21212121 			; <UNDEFINED> instruction: 0x21212121
    65d8:	21212123 			; <UNDEFINED> instruction: 0x21212123
    65dc:	23212221 			; <UNDEFINED> instruction: 0x23212221
    65e0:	21212321 			; <UNDEFINED> instruction: 0x21212321
    65e4:	23212121 			; <UNDEFINED> instruction: 0x23212121
    65e8:	22212121 	eorcs	r2, r1, #1073741832	; 0x40000008
    65ec:	0e032321 	cdpeq	3, 0, cr2, cr3, cr1, {1}
    65f0:	2009032e 	andcs	r0, r9, lr, lsr #6
    65f4:	2e7faf03 	cdpcs	15, 7, cr10, cr15, cr3, {0}
    65f8:	2e0c0331 	mcrcs	3, 0, r0, cr12, cr1, {1}
    65fc:	2e15032f 	cdpcs	3, 1, cr0, cr5, cr15, {1}
    6600:	0002022f 	andeq	r0, r2, pc, lsr #4
    6604:	00bb0101 	adcseq	r0, fp, r1, lsl #2
    6608:	00030000 	andeq	r0, r3, r0
    660c:	0000003e 	andeq	r0, r0, lr, lsr r0
    6610:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    6614:	0101000d 	tsteq	r1, sp
    6618:	00000101 	andeq	r0, r0, r1, lsl #2
    661c:	00000100 	andeq	r0, r0, r0, lsl #2
    6620:	732f2e01 			; <UNDEFINED> instruction: 0x732f2e01
    6624:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    6628:	672f7075 			; <UNDEFINED> instruction: 0x672f7075
    662c:	00006363 	andeq	r6, r0, r3, ror #6
    6630:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    6634:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    6638:	7a696c61 	bvc	1a617c4 <__RAM_SIZE+0x19617c4>
    663c:	6f6c5f65 	svcvs	0x006c5f65
    6640:	656c5f77 	strbvs	r5, [ip, #-3959]!	; 0xfffff089
    6644:	2e6c6576 	mcrcs	5, 3, r6, cr12, cr6, {3}
    6648:	00010073 	andeq	r0, r1, r3, ror r0
    664c:	05000000 	streq	r0, [r0, #-0]
    6650:	002fec02 	eoreq	lr, pc, r2, lsl #24
    6654:	00da0310 	sbcseq	r0, sl, r0, lsl r3
    6658:	21212301 			; <UNDEFINED> instruction: 0x21212301
    665c:	212f232f 			; <UNDEFINED> instruction: 0x212f232f
    6660:	2f212131 	svccs	0x00212131
    6664:	21212123 			; <UNDEFINED> instruction: 0x21212123
    6668:	21212f23 			; <UNDEFINED> instruction: 0x21212f23
    666c:	2f2f232f 	svccs	0x002f232f
    6670:	3221302f 	eorcc	r3, r1, #47	; 0x2f
    6674:	032e0d03 			; <UNDEFINED> instruction: 0x032e0d03
    6678:	09032e0d 	stmdbeq	r3, {r0, r2, r3, r9, sl, fp, sp}
    667c:	0e032f20 	cdpeq	15, 0, cr2, cr3, cr0, {1}
    6680:	2f322420 	svccs	0x00322420
    6684:	03200c03 			; <UNDEFINED> instruction: 0x03200c03
    6688:	21222e0b 			; <UNDEFINED> instruction: 0x21222e0b
    668c:	23233021 			; <UNDEFINED> instruction: 0x23233021
    6690:	232f2121 			; <UNDEFINED> instruction: 0x232f2121
    6694:	2f212121 	svccs	0x00212121
    6698:	2f2e0903 	svccs	0x002e0903
    669c:	2f212321 	svccs	0x00212321
    66a0:	03212f21 			; <UNDEFINED> instruction: 0x03212f21
    66a4:	0b032e0c 	bleq	d1edc <SYSTICK_CYCLES+0xa8e9d>
    66a8:	7ec6032e 	cdpvc	3, 12, cr0, cr6, cr14, {1}
    66ac:	32342f2e 	eorscc	r2, r4, #46, 30	; 0xb8
    66b0:	0b033534 	bleq	d3b88 <SYSTICK_CYCLES+0xaab49>
    66b4:	00d9032e 	sbcseq	r0, r9, lr, lsr #6
    66b8:	2e0a032e 	cdpcs	3, 0, cr0, cr10, cr14, {1}
    66bc:	2e120334 	mrccs	3, 0, r0, cr2, cr4, {1}
    66c0:	01000202 	tsteq	r0, r2, lsl #4
    66c4:	0000cd01 	andeq	ip, r0, r1, lsl #26
    66c8:	5d000300 	stcpl	3, cr0, [r0, #-0]
    66cc:	02000000 	andeq	r0, r0, #0
    66d0:	0d0efb01 	vstreq	d15, [lr, #-4]
    66d4:	01010100 	mrseq	r0, (UNDEF: 17)
    66d8:	00000001 	andeq	r0, r0, r1
    66dc:	01000001 	tsteq	r0, r1
    66e0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    66e4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    66e8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    66ec:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    66f0:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    66f4:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    66f8:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    66fc:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    6700:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    6704:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    6708:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    670c:	72732f75 	rsbsvc	r2, r3, #468	; 0x1d4
    6710:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    6714:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    6718:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    671c:	6863735f 	stmdavs	r3!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    6720:	6c756465 	cfldrdvs	mvd6, [r5], #-404	; 0xfffffe6c
    6724:	00532e65 	subseq	r2, r3, r5, ror #28
    6728:	00000001 	andeq	r0, r0, r1
    672c:	cc020500 	cfstr32gt	mvfx0, [r2], {-0}
    6730:	03100030 	tsteq	r0, #48	; 0x30
    6734:	2f0100dc 	svccs	0x000100dc
    6738:	2f2f2421 	svccs	0x002f2421
    673c:	2f2f2332 	svccs	0x002f2332
    6740:	03332f2f 	teqeq	r3, #47, 30	; 0xbc
    6744:	21212023 			; <UNDEFINED> instruction: 0x21212023
    6748:	2124242f 			; <UNDEFINED> instruction: 0x2124242f
    674c:	212f302f 			; <UNDEFINED> instruction: 0x212f302f
    6750:	032f2131 			; <UNDEFINED> instruction: 0x032f2131
    6754:	24212e0f 	strtcs	r2, [r1], #-3599	; 0xfffff1f1
    6758:	200c0324 	andcs	r0, ip, r4, lsr #6
    675c:	25242122 	strcs	r2, [r4, #-290]!	; 0xfffffede
    6760:	21212126 			; <UNDEFINED> instruction: 0x21212126
    6764:	1503242f 	strne	r2, [r3, #-1071]	; 0xfffffbd1
    6768:	2f2f2f20 	svccs	0x002f2f20
    676c:	31212f30 			; <UNDEFINED> instruction: 0x31212f30
    6770:	0b03302f 	bleq	d2834 <SYSTICK_CYCLES+0xa97f5>
    6774:	21212220 			; <UNDEFINED> instruction: 0x21212220
    6778:	22201803 	eorcs	r1, r0, #196608	; 0x30000
    677c:	352f2f25 	strcc	r2, [pc, #-3877]!	; 585f <_Min_Stack_Size+0x485f>
    6780:	00c10322 	sbceq	r0, r1, r2, lsr #6
    6784:	d403302e 	strle	r3, [r3], #-46	; 0xffffffd2
    6788:	3a032e7d 	bcc	d2184 <SYSTICK_CYCLES+0xa9145>
    678c:	13032f2e 	movwne	r2, #16174	; 0x3f2e
    6790:	0002022e 	andeq	r0, r2, lr, lsr #4
    6794:	008f0101 	addeq	r0, pc, r1, lsl #2
    6798:	00030000 	andeq	r0, r3, r0
    679c:	00000060 	andeq	r0, r0, r0, rrx
    67a0:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
    67a4:	0101000d 	tsteq	r1, sp
    67a8:	00000101 	andeq	r0, r0, r1, lsl #2
    67ac:	00000100 	andeq	r0, r0, r0, lsl #2
    67b0:	2f2e2e01 	svccs	0x002e2e01
    67b4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    67b8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    67bc:	6f747262 	svcvs	0x00747262
    67c0:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    67c4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    67c8:	6f702f78 	svcvs	0x00702f78
    67cc:	2f737472 	svccs	0x00737472
    67d0:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    67d4:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 6648 <_Min_Stack_Size+0x5648>
    67d8:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    67dc:	732f756e 			; <UNDEFINED> instruction: 0x732f756e
    67e0:	00006372 	andeq	r6, r0, r2, ror r3
    67e4:	745f7874 	ldrbvc	r7, [pc], #-2164	; 67ec <_Min_Stack_Size+0x57ec>
    67e8:	61657268 	cmnvs	r5, r8, ror #4
    67ec:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
    67f0:	5f6b6361 	svcpl	0x006b6361
    67f4:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    67f8:	00532e64 	subseq	r2, r3, r4, ror #28
    67fc:	00000001 	andeq	r0, r0, r1
    6800:	9c020500 	cfstr32ls	mvfx0, [r2], {-0}
    6804:	03100031 	tsteq	r0, #49	; 0x31
    6808:	210100e5 	smlattcs	r1, r5, r0, r0
    680c:	2432302f 	ldrtcs	r3, [r2], #-47	; 0xffffffd1
    6810:	2121212f 			; <UNDEFINED> instruction: 0x2121212f
    6814:	21212121 			; <UNDEFINED> instruction: 0x21212121
    6818:	21212124 			; <UNDEFINED> instruction: 0x21212124
    681c:	212f2121 			; <UNDEFINED> instruction: 0x212f2121
    6820:	22252f21 	eorcs	r2, r5, #33, 30	; 0x84
    6824:	01000102 	tsteq	r0, r2, lsl #2
    6828:	0000cf01 	andeq	ip, r0, r1, lsl #30
    682c:	5d000300 	stcpl	3, cr0, [r0, #-0]
    6830:	02000000 	andeq	r0, r0, #0
    6834:	0d0efb01 	vstreq	d15, [lr, #-4]
    6838:	01010100 	mrseq	r0, (UNDEF: 17)
    683c:	00000001 	andeq	r0, r0, r1
    6840:	01000001 	tsteq	r0, r1
    6844:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    6848:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    684c:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    6850:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    6854:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    6858:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    685c:	726f702f 	rsbvc	r7, pc, #47	; 0x2f
    6860:	632f7374 			; <UNDEFINED> instruction: 0x632f7374
    6864:	6574726f 	ldrbvs	r7, [r4, #-623]!	; 0xfffffd91
    6868:	336d5f78 	cmncc	sp, #120, 30	; 0x1e0
    686c:	6e672f33 	mcrvs	15, 3, r2, cr7, cr3, {1}
    6870:	72732f75 	rsbsvc	r2, r3, #468	; 0x1d4
    6874:	74000063 	strvc	r0, [r0], #-99	; 0xffffff9d
    6878:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    687c:	5f72656d 	svcpl	0x0072656d
    6880:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    6884:	70757272 	rsbsvc	r7, r5, r2, ror r2
    6888:	00532e74 	subseq	r2, r3, r4, ror lr
    688c:	00000001 	andeq	r0, r0, r1
    6890:	dc020500 	cfstr32le	mvfx0, [r2], {-0}
    6894:	03100031 	tsteq	r0, #49	; 0x31
    6898:	210100d5 	ldrdcs	r0, [r1, -r5]
    689c:	21262f21 			; <UNDEFINED> instruction: 0x21262f21
    68a0:	252f2621 	strcs	r2, [pc, #-1569]!	; 6287 <_Min_Stack_Size+0x5287>
    68a4:	032f2126 			; <UNDEFINED> instruction: 0x032f2126
    68a8:	2121200a 			; <UNDEFINED> instruction: 0x2121200a
    68ac:	2f212621 	svccs	0x00212621
    68b0:	200a0321 	andcs	r0, sl, r1, lsr #6
    68b4:	21212133 			; <UNDEFINED> instruction: 0x21212133
    68b8:	03242125 			; <UNDEFINED> instruction: 0x03242125
    68bc:	21212009 			; <UNDEFINED> instruction: 0x21212009
    68c0:	25212122 	strcs	r2, [r1, #-290]!	; 0xfffffede
    68c4:	26212127 	strtcs	r2, [r1], -r7, lsr #2
    68c8:	212e0903 			; <UNDEFINED> instruction: 0x212e0903
    68cc:	212f2621 			; <UNDEFINED> instruction: 0x212f2621
    68d0:	21212121 			; <UNDEFINED> instruction: 0x21212121
    68d4:	2f212121 	svccs	0x00212121
    68d8:	35262121 	strcc	r2, [r6, #-289]!	; 0xfffffedf
    68dc:	7ee1032f 	cdpvc	3, 14, cr0, cr1, cr15, {1}
    68e0:	2e09032e 	cdpcs	3, 0, cr0, cr9, cr14, {1}
    68e4:	032e1403 			; <UNDEFINED> instruction: 0x032e1403
    68e8:	09032e0c 	stmdbeq	r3, {r2, r3, r9, sl, fp, sp}
    68ec:	2e12032e 	cdpcs	3, 1, cr0, cr2, cr14, {1}
    68f0:	2e3a0336 	mrccs	3, 1, r0, cr10, cr6, {1}
    68f4:	02303031 	eorseq	r3, r0, #49	; 0x31
    68f8:	01010002 	tsteq	r1, r2

Disassembly of section .debug_str:

00000000 <.debug_str>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 8 <__STACKSEAL_SIZE+0x8>
       4:	61657268 	cmnvs	r5, r8, ror #4
}
       8:	776f5f64 	strbvc	r5, [pc, -r4, ror #30]!
       c:	5f64656e 	svcpl	0x0064656e
      10:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
      14:	696c5f78 	stmdbvs	ip!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
        if(ch == '\n' || it >= size) {
      18:	74007473 	strvc	r7, [r0], #-1139	; 0xfffffb8d
}
      1c:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
      20:	5f72656d 	svcpl	0x0072656d
      24:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
      28:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
      2c:	7463615f 	strbtvc	r6, [r3], #-351	; 0xfffffea1
                thread_ptr -> tx_thread_performance_resume_count++;
      30:	5f657669 	svcpl	0x00657669
      34:	76657270 			; <UNDEFINED> instruction: 0x76657270
        _tx_thread_system_ni_resume(thread_ptr);
      38:	73756f69 	cmnvc	r5, #420	; 0x1a4
      3c:	554e4700 	strbpl	r4, [lr, #-1792]	; 0xfffff900
}
      40:	37314320 	ldrcc	r4, [r1, -r0, lsr #6]!
      44:	2e303120 	rsfcssp	f3, f0, f0
      48:	20312e33 	eorscs	r2, r1, r3, lsr lr
      4c:	31323032 	teqcc	r2, r2, lsr r0
      50:	34323830 	ldrtcc	r3, [r2], #-2096	; 0xfffff7d0
      54:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
      58:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
      5c:	2d202965 			; <UNDEFINED> instruction: 0x2d202965
      60:	7570636d 	ldrbvc	r6, [r0, #-877]!	; 0xfffffc93
      64:	726f633d 	rsbvc	r6, pc, #-201326592	; 0xf4000000
      68:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
      6c:	2033336d 	eorscs	r3, r3, sp, ror #6
      70:	68746d2d 	ldmdavs	r4!, {r0, r2, r3, r5, r8, sl, fp, sp, lr}^
      74:	20626d75 	rsbcs	r6, r2, r5, ror sp
      78:	70666d2d 	rsbvc	r6, r6, sp, lsr #26
      7c:	70663d75 	rsbvc	r3, r6, r5, ror sp
      80:	732d3576 			; <UNDEFINED> instruction: 0x732d3576
      84:	31642d70 	smccc	17104	; 0x42d0
      88:	6d2d2036 	stcvs	0, cr2, [sp, #-216]!	; 0xffffff28
      8c:	616f6c66 	cmnvs	pc, r6, ror #24
      90:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
      94:	61683d69 	cmnvs	r8, r9, ror #26
      98:	2d206472 	cfstrscs	mvf6, [r0, #-456]!	; 0xfffffe38
      9c:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
      a0:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
      a4:	2d38766d 	ldccs	6, cr7, [r8, #-436]!	; 0xfffffe4c
      a8:	616d2e6d 	cmnvs	sp, sp, ror #28
      ac:	642b6e69 	strtvs	r6, [fp], #-3689	; 0xfffff197
      b0:	662b7073 			; <UNDEFINED> instruction: 0x662b7073
      b4:	672d2070 			; <UNDEFINED> instruction: 0x672d2070
      b8:	64672d20 	strbtvs	r2, [r7], #-3360	; 0xfffff2e0
      bc:	66726177 			; <UNDEFINED> instruction: 0x66726177
      c0:	2d20322d 	sfmcs	f3, 4, [r0, #-180]!	; 0xffffff4c
      c4:	2d20674f 	stccs	7, cr6, [r0, #-316]!	; 0xfffffec4
      c8:	74616466 	strbtvc	r6, [r1], #-1126	; 0xfffffb9a
      cc:	65732d61 	ldrbvs	r2, [r3, #-3425]!	; 0xfffff29f
      d0:	6f697463 	svcvs	0x00697463
      d4:	2d20736e 	stccs	3, cr7, [r0, #-440]!	; 0xfffffe48
      d8:	6e756666 	cdpvs	6, 7, cr6, cr5, cr6, {3}
      dc:	6f697463 	svcvs	0x00697463
      e0:	65732d6e 	ldrbvs	r2, [r3, #-3438]!	; 0xfffff292
      e4:	6f697463 	svcvs	0x00697463
      e8:	7400736e 	strvc	r7, [r0], #-878	; 0xfffffc92
      ec:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
      f0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
      f4:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
      f8:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
      fc:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     100:	6f687365 	svcvs	0x00687365
     104:	7400646c 	strvc	r6, [r0], #-1132	; 0xfffffb94
     108:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     10c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     110:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
     114:	705f7972 	subsvc	r7, pc, r2, ror r9	; <UNPREDICTABLE>
     118:	6d617261 	sfmvs	f7, 2, [r1, #-388]!	; 0xfffffe7c
     11c:	72657465 	rsbvc	r7, r5, #1694498816	; 0x65000000
     120:	5f787400 	svcpl	0x00787400
     124:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
     128:	726f5f78 	rsbvc	r5, pc, #120, 30	; 0x1e0
     12c:	6e696769 	cdpvs	7, 6, cr6, cr9, cr9, {3}
     130:	705f6c61 	subsvc	r6, pc, r1, ror #24
     134:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     138:	00797469 	rsbseq	r7, r9, r9, ror #8
     13c:	615f7874 	cmpvs	pc, r4, ror r8	; <UNPREDICTABLE>
     140:	696c7070 	stmdbvs	ip!, {r4, r5, r6, ip, sp, lr}^
     144:	69746163 	ldmdbvs	r4!, {r0, r1, r5, r6, r8, sp, lr}^
     148:	645f6e6f 	ldrbvs	r6, [pc], #-3695	; 150 <__STACKSEAL_SIZE+0x150>
     14c:	6e696665 	cdpvs	6, 6, cr6, cr9, cr5, {3}
     150:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
     154:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     158:	5f646165 	svcpl	0x00646165
     15c:	72746e65 	rsbsvc	r6, r4, #1616	; 0x650
     160:	78740079 	ldmdavc	r4!, {r0, r3, r4, r5, r6}^
     164:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
     168:	695f7865 	ldmdbvs	pc, {r0, r2, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     16c:	7265686e 	rsbvc	r6, r5, #7208960	; 0x6e0000
     170:	74007469 	strvc	r7, [r0], #-1129	; 0xfffffb97
     174:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     178:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     17c:	6c65645f 	cfstrdvs	mvd6, [r5], #-380	; 0xfffffe84
     180:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
     184:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
     188:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     18c:	5f787400 	svcpl	0x00787400
     190:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
     194:	64695f78 	strbtvs	r5, [r9], #-3960	; 0xfffff088
     198:	5f787400 	svcpl	0x00787400
     19c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     1a0:	725f6461 	subsvc	r6, pc, #1627389952	; 0x61000000
     1a4:	79646165 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
     1a8:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
     1ac:	756f6976 	strbvc	r6, [pc, #-2422]!	; fffff83e <__RAM_segment_used_end__+0xc7eff83e>
     1b0:	78740073 	ldmdavc	r4!, {r0, r1, r4, r5, r6}^
     1b4:	6d656d5f 	stclvs	13, cr6, [r5, #-380]!	; 0xfffffe84
     1b8:	0079726f 	rsbseq	r7, r9, pc, ror #4
     1bc:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1c4 <__STACKSEAL_SIZE+0x1c4>
     1c0:	61657268 	cmnvs	r5, r8, ror #4
     1c4:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
     1c8:	5f6b6361 	svcpl	0x006b6361
     1cc:	00727470 	rsbseq	r7, r2, r0, ror r4
     1d0:	6d5f7874 	ldclvs	8, cr7, [pc, #-464]	; 8 <__STACKSEAL_SIZE+0x8>
     1d4:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     1d8:	6769685f 			; <UNDEFINED> instruction: 0x6769685f
     1dc:	74736568 	ldrbtvc	r6, [r3], #-1384	; 0xfffffa98
     1e0:	6972705f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
     1e4:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
     1e8:	61775f79 	cmnvs	r7, r9, ror pc
     1ec:	6e697469 	cdpvs	4, 6, cr7, cr9, cr9, {3}
     1f0:	78740067 	ldmdavc	r4!, {r0, r1, r2, r5, r6}^
     1f4:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     1f8:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     1fc:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     200:	5f6c616e 	svcpl	0x006c616e
     204:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     208:	5f74756f 	svcpl	0x0074756f
     20c:	61726170 	cmnvs	r2, r0, ror r1
     210:	7874006d 	ldmdavc	r4!, {r0, r2, r3, r5, r6}^
     214:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     218:	5f646165 	svcpl	0x00646165
     21c:	70737573 	rsbsvc	r7, r3, r3, ror r5
     220:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
     224:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
     228:	6f697665 	svcvs	0x00697665
     22c:	6c007375 	stcvs	3, cr7, [r0], {117}	; 0x75
     230:	20676e6f 	rsbcs	r6, r7, pc, ror #28
     234:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     238:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
     23c:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     240:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
     244:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
     248:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     24c:	5f646165 	svcpl	0x00646165
     250:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
     254:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
     258:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     25c:	5f646165 	svcpl	0x00646165
     260:	72657375 	rsbvc	r7, r5, #-738197503	; 0xd4000001
     264:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
     268:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
     26c:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     270:	6f687365 	svcvs	0x00687365
     274:	7400646c 	strvc	r6, [r0], #-1132	; 0xfffffb94
     278:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     27c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     280:	6e776f5f 	mrcvs	15, 3, r6, cr7, cr15, {2}
     284:	6d5f6465 	cfldrdvs	mvd6, [pc, #-404]	; f8 <__STACKSEAL_SIZE+0xf8>
     288:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     28c:	756f635f 	strbvc	r6, [pc, #-863]!	; ffffff35 <__RAM_segment_used_end__+0xc7efff35>
     290:	6600746e 	strvs	r7, [r0], -lr, ror #8
     294:	74737269 	ldrbtvc	r7, [r3], #-617	; 0xfffffd97
     298:	756e755f 	strbvc	r7, [lr, #-1375]!	; 0xfffffaa1
     29c:	5f646573 	svcpl	0x00646573
     2a0:	6f6d656d 	svcvs	0x006d656d
     2a4:	74007972 	strvc	r7, [r0], #-2418	; 0xfffff68e
     2a8:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     2ac:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
     2b0:	5f6c6f6f 	svcpl	0x006c6f6f
     2b4:	61657263 	cmnvs	r5, r3, ror #4
     2b8:	5f646574 	svcpl	0x00646574
     2bc:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
     2c0:	5f787400 	svcpl	0x00787400
     2c4:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     2c8:	755f6461 	ldrbvc	r6, [pc, #-1121]	; fffffe6f <__RAM_segment_used_end__+0xc7effe6f>
     2cc:	5f726573 	svcpl	0x00726573
     2d0:	6f697270 	svcvs	0x00697270
     2d4:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
     2d8:	5f787400 	svcpl	0x00787400
     2dc:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     2e0:	705f6461 	subsvc	r6, pc, r1, ror #8
     2e4:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
     2e8:	00797469 	rsbseq	r7, r9, r9, ror #8
     2ec:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2f4 <__STACKSEAL_SIZE+0x2f4>
     2f0:	61657268 	cmnvs	r5, r8, ror #4
     2f4:	75735f64 	ldrbvc	r5, [r3, #-3940]!	; 0xfffff09c
     2f8:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     2fc:	6c635f64 	stclvs	15, cr5, [r3], #-400	; 0xfffffe70
     300:	756e6165 	strbvc	r6, [lr, #-357]!	; 0xfffffe9b
     304:	78740070 	ldmdavc	r4!, {r4, r5, r6}^
     308:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
     30c:	6f705f65 	svcvs	0x00705f65
     310:	735f6c6f 	cmpvc	pc, #28416	; 0x6f00
     314:	00657a69 	rsbeq	r7, r5, r9, ror #20
     318:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
     31c:	00726574 	rsbseq	r6, r2, r4, ror r5
     320:	745f7874 	ldrbvc	r7, [pc], #-2164	; 328 <__STACKSEAL_SIZE+0x328>
     324:	61657268 	cmnvs	r5, r8, ror #4
     328:	6e695f64 	cdpvs	15, 6, cr5, cr9, cr4, {3}
     32c:	69726568 	ldmdbvs	r2!, {r3, r5, r6, r8, sl, sp, lr}^
     330:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
     334:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     338:	74007974 	strvc	r7, [r0], #-2420	; 0xfffff68c
     33c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     340:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     344:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
     348:	54007265 	strpl	r7, [r0], #-613	; 0xfffffd9b
     34c:	48545f58 	ldmdami	r4, {r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     350:	44414552 	strbmi	r4, [r1], #-1362	; 0xfffffaae
     354:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
     358:	00544355 	subseq	r4, r4, r5, asr r3
     35c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 364 <__STACKSEAL_SIZE+0x364>
     360:	61657268 	cmnvs	r5, r8, ror #4
     364:	63735f64 	cmnvs	r3, #100, 30	; 0x190
     368:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
     36c:	685f656c 	ldmdavs	pc, {r2, r3, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
     370:	006b6f6f 	rsbeq	r6, fp, pc, ror #30
     374:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     378:	5f657479 	svcpl	0x00657479
     37c:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 1c4 <__STACKSEAL_SIZE+0x1c4>
     380:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
     384:	61480065 	cmpvs	r8, r5, rrx
     388:	61466472 	hvcvs	26178	; 0x6642
     38c:	5f746c75 	svcpl	0x00746c75
     390:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     394:	5f72656c 	svcpl	0x0072656c
     398:	6567654c 	strbvs	r6, [r7, #-1356]!	; 0xfffffab4
     39c:	0079636e 	rsbseq	r6, r9, lr, ror #6
     3a0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 3a8 <__STACKSEAL_SIZE+0x3a8>
     3a4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
     3a8:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
     3ac:	616e7265 	cmnvs	lr, r5, ror #4
     3b0:	65725f6c 	ldrbvs	r5, [r2, #-3948]!	; 0xfffff094
     3b4:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     3b8:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
     3bc:	5f657a69 	svcpl	0x00657a69
     3c0:	6b636974 	blvs	18da998 <__RAM_SIZE+0x17da998>
     3c4:	78740073 	ldmdavc	r4!, {r0, r1, r4, r5, r6}^
     3c8:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     3cc:	5f646165 	svcpl	0x00646165
     3d0:	69646461 	stmdbvs	r4!, {r0, r5, r6, sl, sp, lr}^
     3d4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     3d8:	735f6c61 	cmpvc	pc, #24832	; 0x6100
     3dc:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
     3e0:	695f646e 	ldmdbvs	pc, {r1, r2, r3, r5, r6, sl, sp, lr}^	; <UNPREDICTABLE>
     3e4:	006f666e 	rsbeq	r6, pc, lr, ror #12
     3e8:	745f7874 	ldrbvc	r7, [pc], #-2164	; 3f0 <__STACKSEAL_SIZE+0x3f0>
     3ec:	61657268 	cmnvs	r5, r8, ror #4
     3f0:	75735f64 	ldrbvc	r5, [r3, #-3940]!	; 0xfffff09c
     3f4:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     3f8:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
     3fc:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     400:	5f787400 	svcpl	0x00787400
     404:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     408:	6f6f705f 	svcvs	0x006f705f
     40c:	64695f6c 	strbtvs	r5, [r9], #-3948	; 0xfffff094
     410:	5f787400 	svcpl	0x00787400
     414:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     418:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
     41c:	6b636174 	blvs	18d89f4 <__RAM_SIZE+0x17d89f4>
     420:	646e655f 	strbtvs	r6, [lr], #-1375	; 0xfffffaa1
     424:	5f787400 	svcpl	0x00787400
     428:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
     42c:	776f5f78 			; <UNDEFINED> instruction: 0x776f5f78
     430:	5f64656e 	svcpl	0x0064656e
     434:	76657270 			; <UNDEFINED> instruction: 0x76657270
     438:	73756f69 	cmnvc	r5, #420	; 0x1a4
     43c:	5f787400 	svcpl	0x00787400
     440:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     444:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
     448:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
     44c:	745f6c61 	ldrbvc	r6, [pc], #-3169	; 454 <STACK_SIZE+0x54>
     450:	6f656d69 	svcvs	0x00656d69
     454:	665f7475 			; <UNDEFINED> instruction: 0x665f7475
     458:	74636e75 	strbtvc	r6, [r3], #-3701	; 0xfffff18b
     45c:	006e6f69 	rsbeq	r6, lr, r9, ror #30
     460:	425f5854 	subsmi	r5, pc, #84, 16	; 0x540000
     464:	5f455459 	svcpl	0x00455459
     468:	4c4f4f50 	mcrrmi	15, 5, r4, pc, cr0
     46c:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
     470:	00544355 	subseq	r4, r4, r5, asr r3
     474:	425f5854 	subsmi	r5, pc, #84, 16	; 0x540000
     478:	5f455459 	svcpl	0x00455459
     47c:	4c4f4f50 	mcrrmi	15, 5, r4, pc, cr0
     480:	5f787400 	svcpl	0x00787400
     484:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     488:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
     48c:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
     490:	6f69736e 	svcvs	0x0069736e
     494:	65735f6e 	ldrbvs	r5, [r3, #-3950]!	; 0xfffff092
     498:	6e657571 	mcrvs	5, 3, r7, cr5, cr1, {3}
     49c:	5f006563 	svcpl	0x00006563
     4a0:	6975625f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
     4a4:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
     4a8:	7475705f 	ldrbtvc	r7, [r5], #-95	; 0xffffffa1
     4ac:	78740073 	ldmdavc	r4!, {r0, r1, r4, r5, r6}^
     4b0:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
     4b4:	6f705f65 	svcvs	0x00705f65
     4b8:	735f6c6f 	cmpvc	pc, #28416	; 0x6f00
     4bc:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
     4c0:	6f69736e 	svcvs	0x0069736e
     4c4:	696c5f6e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     4c8:	74007473 	strvc	r7, [r0], #-1139	; 0xfffffb8d
     4cc:	756d5f78 	strbvc	r5, [sp, #-3960]!	; 0xfffff088
     4d0:	5f786574 	svcpl	0x00786574
     4d4:	656e776f 	strbvs	r7, [lr, #-1903]!	; 0xfffff891
     4d8:	78740072 	ldmdavc	r4!, {r1, r4, r5, r6}^
     4dc:	7361745f 	cmnvc	r1, #1593835520	; 0x5f000000
     4e0:	6e655f6b 	cdpvs	15, 6, cr5, cr5, cr11, {3}
     4e4:	00797274 	rsbseq	r7, r9, r4, ror r2
     4e8:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
     4ec:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
     4f0:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
     4f4:	2f2e0074 	svccs	0x002e0074
     4f8:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
     4fc:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
     500:	2f6e6f69 	svccs	0x006e6f69
     504:	6e69616d 	powvsez	f6, f1, #5.0
     508:	7400632e 	strvc	r6, [r0], #-814	; 0xfffffcd2
     50c:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     510:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
     514:	5f6c6f6f 	svcpl	0x006c6f6f
     518:	70737573 	rsbsvc	r7, r3, r3, ror r5
     51c:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
     520:	6f635f64 	svcvs	0x00635f64
     524:	00746e75 	rsbseq	r6, r4, r5, ror lr
     528:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     52c:	5f657479 	svcpl	0x00657479
     530:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 378 <__STACKSEAL_SIZE+0x378>
     534:	6174735f 	cmnvs	r4, pc, asr r3
     538:	54007472 	strpl	r7, [r0], #-1138	; 0xfffffb8e
     53c:	49545f58 	ldmdbmi	r4, {r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     540:	5f52454d 	svcpl	0x0052454d
     544:	45544e49 	ldrbmi	r4, [r4, #-3657]	; 0xfffff1b7
     548:	4c414e52 	mcrrmi	14, 5, r4, r1, cr2
     54c:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
     550:	00544355 	subseq	r4, r4, r5, asr r3
     554:	745f7874 	ldrbvc	r7, [pc], #-2164	; 55c <STACK_SIZE+0x15c>
     558:	61657268 	cmnvs	r5, r8, ror #4
     55c:	75735f64 	ldrbvc	r5, [r3, #-3940]!	; 0xfffff09c
     560:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     564:	706f5f64 	rsbvc	r5, pc, r4, ror #30
     568:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
     56c:	5f787400 	svcpl	0x00787400
     570:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     574:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
     578:	6b636174 	blvs	18d8b50 <__RAM_SIZE+0x17d8b50>
     57c:	6c69665f 	stclvs	6, cr6, [r9], #-380	; 0xfffffe84
     580:	61765f6c 	cmnvs	r6, ip, ror #30
     584:	0065756c 	rsbeq	r7, r5, ip, ror #10
     588:	6578745f 	ldrbvs	r7, [r8, #-1119]!	; 0xfffffba1
     58c:	6f6c625f 	svcvs	0x006c625f
     590:	725f6b63 	subsvc	r6, pc, #101376	; 0x18c00
     594:	61656c65 	cmnvs	r5, r5, ror #24
     598:	5f006573 	svcpl	0x00006573
     59c:	5f657874 	svcpl	0x00657874
     5a0:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     5a4:	6f6f705f 	svcvs	0x006f705f
     5a8:	72635f6c 	rsbvc	r5, r3, #108, 30	; 0x1b0
     5ac:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     5b0:	5f787400 	svcpl	0x00787400
     5b4:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     5b8:	6e5f6461 	cdpvs	4, 5, cr6, cr15, cr1, {3}
     5bc:	00656d61 	rsbeq	r6, r5, r1, ror #26
     5c0:	6578745f 	ldrbvs	r7, [r8, #-1119]!	; 0xfffffba1
     5c4:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     5c8:	5f646165 	svcpl	0x00646165
     5cc:	61657263 	cmnvs	r5, r3, ror #4
     5d0:	74006574 	strvc	r6, [r0], #-1396	; 0xfffffa8c
     5d4:	756d5f78 	strbvc	r5, [sp, #-3960]!	; 0xfffff088
     5d8:	5f786574 	svcpl	0x00786574
     5dc:	61657263 	cmnvs	r5, r3, ror #4
     5e0:	5f646574 	svcpl	0x00646574
     5e4:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
     5e8:	5f787400 	svcpl	0x00787400
     5ec:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     5f0:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
     5f4:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
     5f8:	635f646e 	cmpvs	pc, #1845493760	; 0x6e000000
     5fc:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
     600:	625f6c6f 	subsvs	r6, pc, #28416	; 0x6f00
     604:	6b636f6c 	blvs	18dc3bc <__RAM_SIZE+0x17dc3bc>
     608:	5f787400 	svcpl	0x00787400
     60c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     610:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
     614:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
     618:	6c5f6c61 	mrrcvs	12, 6, r6, pc, cr1	; <UNPREDICTABLE>
     61c:	5f747369 	svcpl	0x00747369
     620:	64616568 	strbtvs	r6, [r1], #-1384	; 0xfffffa98
     624:	5f787400 	svcpl	0x00787400
     628:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     62c:	6e5f6461 	cdpvs	4, 5, cr6, cr15, cr1, {3}
     630:	745f7765 	ldrbvc	r7, [pc], #-1893	; 638 <STACK_SIZE+0x238>
     634:	5f656d69 	svcpl	0x00656d69
     638:	63696c73 	cmnvs	r9, #29440	; 0x7300
     63c:	6f6c0065 	svcvs	0x006c0065
     640:	6420676e 	strtvs	r6, [r0], #-1902	; 0xfffff892
     644:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	; 0xfffffe44
     648:	58540065 	ldmdapl	r4, {r0, r2, r5, r6}^
     64c:	4d49545f 	cfstrdmi	mvd5, [r9, #-380]	; 0xfffffe84
     650:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     654:	5245544e 	subpl	r5, r5, #1308622848	; 0x4e000000
     658:	004c414e 	subeq	r4, ip, lr, asr #2
     65c:	555c3a43 	ldrbpl	r3, [ip, #-2627]	; 0xfffff5bd
     660:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
     664:	6469785c 	strbtvs	r7, [r9], #-2140	; 0xfffff7a4
     668:	635c6e6f 	cmpvs	ip, #1776	; 0x6f0
     66c:	5c65646f 	cfstrdpl	mvd6, [r5], #-444	; 0xfffffe44
     670:	68746967 	ldmdavs	r4!, {r0, r1, r2, r5, r6, r8, fp, sp, lr}^
     674:	715c6275 	cmpvc	ip, r5, ror r2
     678:	2d756d65 	ldclcs	13, cr6, [r5, #-404]!	; 0xfffffe6c
     67c:	756d6973 	strbvc	r6, [sp, #-2419]!	; 0xfffff68d
     680:	6f74616c 	svcvs	0x0074616c
     684:	6f625c72 	svcvs	0x00625c72
     688:	73647261 	cmnvc	r4, #268435462	; 0x10000006
     68c:	73706d5c 	cmnvc	r0, #92, 26	; 0x1700
     690:	6e612d32 	mcrvs	13, 3, r2, cr1, cr2, {1}
     694:	5c353035 	ldcpl	0, cr3, [r5], #-212	; 0xffffff2c
     698:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     69c:	00786461 	rsbseq	r6, r8, r1, ror #8
     6a0:	6d5f7874 	ldclvs	8, cr7, [pc, #-464]	; 4d8 <STACK_SIZE+0xd8>
     6a4:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     6a8:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
     6ac:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
     6b0:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
     6b4:	756f6976 	strbvc	r6, [pc, #-2422]!	; fffffd46 <__RAM_segment_used_end__+0xc7effd46>
     6b8:	78740073 	ldmdavc	r4!, {r0, r1, r4, r5, r6}^
     6bc:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     6c0:	5f646165 	svcpl	0x00646165
     6c4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     6c8:	656e5f79 	strbvs	r5, [lr, #-3961]!	; 0xfffff087
     6cc:	73007478 	movwvc	r7, #1144	; 0x478
     6d0:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
     6d4:	746e6920 	strbtvc	r6, [lr], #-2336	; 0xfffff6e0
     6d8:	72617500 	rsbvc	r7, r1, #0, 10
     6dc:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
     6e0:	74007469 	strvc	r7, [r0], #-1129	; 0xfffffb97
     6e4:	756d5f78 	strbvc	r5, [sp, #-3960]!	; 0xfffff088
     6e8:	5f786574 	svcpl	0x00786574
     6ec:	70737573 	rsbsvc	r7, r3, r3, ror r5
     6f0:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
     6f4:	6f635f64 	svcvs	0x00635f64
     6f8:	00746e75 	rsbseq	r6, r4, r5, ror lr
     6fc:	6d5f7874 	ldclvs	8, cr7, [pc, #-464]	; 534 <STACK_SIZE+0x134>
     700:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     704:	6e776f5f 	mrcvs	15, 3, r6, cr7, cr15, {2}
     708:	68737265 	ldmdavs	r3!, {r0, r2, r5, r6, r9, ip, sp, lr}^
     70c:	635f7069 	cmpvs	pc, #105	; 0x69
     710:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     714:	5f787400 	svcpl	0x00787400
     718:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
     71c:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
     720:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
     724:	695f646e 	ldmdbvs	pc, {r1, r2, r3, r5, r6, sl, sp, lr}^	; <UNPREDICTABLE>
     728:	006f666e 	rsbeq	r6, pc, lr, ror #12
     72c:	4e4f4c55 	mcrmi	12, 2, r4, cr15, cr5, {2}
     730:	78740047 	ldmdavc	r4!, {r0, r1, r2, r6}^
     734:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     738:	5f646165 	svcpl	0x00646165
     73c:	70737573 	rsbsvc	r7, r3, r3, ror r5
     740:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
     744:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
     748:	74007478 	strvc	r7, [r0], #-1144	; 0xfffffb88
     74c:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     750:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     754:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
     758:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     75c:	00676e69 	rsbeq	r6, r7, r9, ror #28
     760:	705f7874 	subsvc	r7, pc, r4, ror r8	; <UNPREDICTABLE>
     764:	006c6f6f 	rsbeq	r6, ip, pc, ror #30
     768:	745f7874 	ldrbvc	r7, [pc], #-2164	; 770 <STACK_SIZE+0x370>
     76c:	006b7361 	rsbeq	r7, fp, r1, ror #6
     770:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     774:	5f657479 	svcpl	0x00657479
     778:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 5c0 <STACK_SIZE+0x1c0>
     77c:	6176615f 	cmnvs	r6, pc, asr r1
     780:	62616c69 	rsbvs	r6, r1, #26880	; 0x6900
     784:	5f00656c 	svcpl	0x0000656c
     788:	5f657874 	svcpl	0x00657874
     78c:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     790:	6c6c615f 	stfvse	f6, [ip], #-380	; 0xfffffe84
     794:	7461636f 	strbtvc	r6, [r1], #-879	; 0xfffffc91
     798:	49550065 	ldmdbmi	r5, {r0, r2, r5, r6}^
     79c:	7400544e 	strvc	r5, [r0], #-1102	; 0xfffffbb2
     7a0:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     7a4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     7a8:	6e75725f 	mrcvs	2, 3, r7, cr5, cr15, {2}
     7ac:	756f635f 	strbvc	r6, [pc, #-863]!	; 455 <STACK_SIZE+0x55>
     7b0:	5400746e 	strpl	r7, [r0], #-1134	; 0xfffffb92
     7b4:	554d5f58 	strbpl	r5, [sp, #-3928]	; 0xfffff0a8
     7b8:	5f584554 	svcpl	0x00584554
     7bc:	55525453 	ldrbpl	r5, [r2, #-1107]	; 0xfffffbad
     7c0:	74005443 	strvc	r5, [r0], #-1091	; 0xfffffbbd
     7c4:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     7c8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     7cc:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
     7d0:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
     7d4:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
     7d8:	73616c5f 	cmnvc	r1, #24320	; 0x5f00
     7dc:	72705f74 	rsbsvc	r5, r0, #116, 30	; 0x1d0
     7e0:	706d6565 	rsbvc	r6, sp, r5, ror #10
     7e4:	676e6974 			; <UNDEFINED> instruction: 0x676e6974
     7e8:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     7ec:	00646165 	rsbeq	r6, r4, r5, ror #2
     7f0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 7f8 <__Vectors_Size+0x38>
     7f4:	61657268 	cmnvs	r5, r8, ror #4
     7f8:	72635f64 	rsbvc	r5, r3, #100, 30	; 0x190
     7fc:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     800:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
     804:	6f697665 	svcvs	0x00697665
     808:	74007375 	strvc	r7, [r0], #-885	; 0xfffffc8b
     80c:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     810:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
     814:	5f6c6f6f 	svcpl	0x006c6f6f
     818:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     81c:	66654400 	strbtvs	r4, [r5], -r0, lsl #8
     820:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     824:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     828:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     82c:	5f787400 	svcpl	0x00787400
     830:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     834:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
     838:	6e726574 	mrcvs	5, 3, r6, cr2, cr4, {3}
     83c:	725f6c61 	subsvc	r6, pc, #24832	; 0x6100
     840:	69616d65 	stmdbvs	r1!, {r0, r2, r5, r6, r8, sl, fp, sp, lr}^
     844:	676e696e 	strbvs	r6, [lr, -lr, ror #18]!
     848:	6369745f 	cmnvs	r9, #1593835520	; 0x5f000000
     84c:	5f00736b 	svcpl	0x0000736b
     850:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
     854:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
     858:	7a696c61 	bvc	1a5b9e4 <__RAM_SIZE+0x195b9e4>
     85c:	656b5f65 	strbvs	r5, [fp, #-3941]!	; 0xfffff09b
     860:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
     864:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
     868:	75007265 	strvc	r7, [r0, #-613]	; 0xfffffd9b
     86c:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     870:	2064656e 	rsbcs	r6, r4, lr, ror #10
     874:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     878:	5f787400 	svcpl	0x00787400
     87c:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     880:	6f6f705f 	svcvs	0x006f705f
     884:	72635f6c 	rsbvc	r5, r3, #108, 30	; 0x1b0
     888:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     88c:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
     890:	6f697665 	svcvs	0x00697665
     894:	74007375 	strvc	r7, [r0], #-885	; 0xfffffc8b
     898:	756d5f78 	strbvc	r5, [sp, #-3960]!	; 0xfffff088
     89c:	5f786574 	svcpl	0x00786574
     8a0:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
     8a4:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
     8a8:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     8ac:	5f646165 	svcpl	0x00646165
     8b0:	65656c73 	strbvs	r6, [r5, #-3187]!	; 0xfffff38d
     8b4:	78740070 	ldmdavc	r4!, {r4, r5, r6}^
     8b8:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
     8bc:	6f705f65 	svcvs	0x00705f65
     8c0:	665f6c6f 	ldrbvs	r6, [pc], -pc, ror #24
     8c4:	6d676172 	stfvse	f6, [r7, #-456]!	; 0xfffffe38
     8c8:	73746e65 	cmnvc	r4, #1616	; 0x650
     8cc:	5f787400 	svcpl	0x00787400
     8d0:	6574756d 	ldrbvs	r7, [r4, #-1389]!	; 0xfffffa93
     8d4:	75735f78 	ldrbvc	r5, [r3, #-3960]!	; 0xfffff088
     8d8:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
     8dc:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
     8e0:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
     8e4:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
     8e8:	6174735f 	cmnvs	r4, pc, asr r3
     8ec:	54006b63 	strpl	r6, [r0], #-2915	; 0xfffff49d
     8f0:	48545f58 	ldmdami	r4, {r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     8f4:	44414552 	strbmi	r4, [r1], #-1362	; 0xfffffaae
     8f8:	48435500 	stmdami	r3, {r8, sl, ip, lr}^
     8fc:	74005241 	strvc	r5, [r0], #-577	; 0xfffffdbf
     900:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     904:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
     908:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
     90c:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
     910:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
     914:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
     918:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     91c:	5f646165 	svcpl	0x00646165
     920:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     924:	74735f6b 	ldrbtvc	r5, [r3], #-3947	; 0xfffff095
     928:	00747261 	rsbseq	r7, r4, r1, ror #4
     92c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 934 <__Vectors_Size+0x174>
     930:	61657268 	cmnvs	r5, r8, ror #4
     934:	64695f64 	strbtvs	r5, [r9], #-3940	; 0xfffff09c
     938:	6f687300 	svcvs	0x00687300
     93c:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
     940:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
     944:	2064656e 	rsbcs	r6, r4, lr, ror #10
     948:	00746e69 	rsbseq	r6, r4, r9, ror #28
     94c:	6e69616d 	powvsez	f6, f1, #5.0
     950:	665f5f00 	ldrbvs	r5, [pc], -r0, lsl #30
     954:	5f636e75 	svcpl	0x00636e75
     958:	7874005f 	ldmdavc	r4!, {r0, r1, r2, r3, r4, r6}^
     95c:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
     960:	5f646165 	svcpl	0x00646165
     964:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     968:	69735f6b 	ldmdbvs	r3!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     96c:	7400657a 	strvc	r6, [r0], #-1402	; 0xfffffa86
     970:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     974:	5f72656d 	svcpl	0x0072656d
     978:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     97c:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
     980:	7463615f 	strbtvc	r6, [r3], #-351	; 0xfffffea1
     984:	5f657669 	svcpl	0x00657669
     988:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
     98c:	5f787400 	svcpl	0x00787400
     990:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
     994:	6f6f705f 	svcvs	0x006f705f
     998:	776f5f6c 	strbvc	r5, [pc, -ip, ror #30]!
     99c:	0072656e 	rsbseq	r6, r2, lr, ror #10
     9a0:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     9a4:	65740030 	ldrbvs	r0, [r4, #-48]!	; 0xffffffd0
     9a8:	00317473 	eorseq	r7, r1, r3, ror r4
     9ac:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     9b0:	65740032 	ldrbvs	r0, [r4, #-50]!	; 0xffffffce
     9b4:	00337473 	eorseq	r7, r3, r3, ror r4
     9b8:	74736574 	ldrbtvc	r6, [r3], #-1396	; 0xfffffa8c
     9bc:	65740034 	ldrbvs	r0, [r4, #-52]!	; 0xffffffcc
     9c0:	00357473 	eorseq	r7, r5, r3, ror r4
     9c4:	745f7874 	ldrbvc	r7, [pc], #-2164	; 9cc <__Vectors_Size+0x20c>
     9c8:	61657268 	cmnvs	r5, r8, ror #4
     9cc:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
     9d0:	5f6b6361 	svcpl	0x006b6361
     9d4:	68676968 	stmdavs	r7!, {r3, r5, r6, r8, fp, sp, lr}^
     9d8:	5f747365 	svcpl	0x00747365
     9dc:	00727470 	rsbseq	r7, r2, r0, ror r4
     9e0:	6d5f7874 	ldclvs	8, cr7, [pc, #-464]	; 818 <__Vectors_Size+0x58>
     9e4:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
     9e8:	6e776f5f 	mrcvs	15, 3, r6, cr7, cr15, {2}
     9ec:	6e5f6465 	cdpvs	4, 5, cr6, cr15, cr5, {3}
     9f0:	00747865 	rsbseq	r7, r4, r5, ror #16
     9f4:	70612f2e 	rsbvc	r2, r1, lr, lsr #30
     9f8:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
     9fc:	6f697461 	svcvs	0x00697461
     a00:	79732f6e 	ldmdbvc	r3!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp}^
     a04:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
     a08:	4d52415f 	ldfmie	f4, [r2, #-380]	; 0xfffffe84
     a0c:	33334d43 	teqcc	r3, #4288	; 0x10c0
     a10:	5f00632e 	svcpl	0x0000632e
     a14:	6e69755f 	mcrvs	5, 3, r7, cr9, cr15, {2}
     a18:	745f3874 	ldrbvc	r3, [pc], #-2164	; a20 <__Vectors_Size+0x260>
     a1c:	49545300 	ldmdbmi	r4, {r8, r9, ip, lr}^
     a20:	43440052 	movtmi	r0, #16466	; 0x4052
     a24:	41564d49 	cmpmi	r6, r9, asr #26
     a28:	4c430043 	mcrrmi	0, 4, r0, r3, cr3
     a2c:	00524449 	subseq	r4, r2, r9, asr #8
     a30:	49555043 	ldmdbmi	r5, {r0, r1, r6, ip, lr}^
     a34:	50420044 	subpl	r0, r2, r4, asr #32
     a38:	4c4c4149 	stfmie	f4, [ip], {73}	; 0x49
     a3c:	5f444900 	svcpl	0x00444900
     a40:	00524650 	subseq	r4, r2, r0, asr r6
     a44:	49434344 	stmdbmi	r3, {r2, r6, r8, r9, lr}^
     a48:	53005753 	movwpl	r5, #1875	; 0x753
     a4c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
     a50:	726f436d 	rsbvc	r4, pc, #-1275068415	; 0xb4000001
     a54:	6f6c4365 	svcvs	0x006c4365
     a58:	70556b63 	subsvc	r6, r5, r3, ror #22
     a5c:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
     a60:	5f444900 	svcpl	0x00444900
     a64:	52464d4d 	subpl	r4, r6, #4928	; 0x1340
     a68:	49434900 	stmdbmi	r3, {r8, fp, lr}^
     a6c:	554c4c41 	strbpl	r4, [ip, #-3137]	; 0xfffff3bf
     a70:	41464200 	mrsmi	r4, (UNDEF: 102)
     a74:	5f5f0052 	svcpl	0x005f0052
     a78:	746e6975 	strbtvc	r6, [lr], #-2421	; 0xfffff68b
     a7c:	745f3233 	ldrbvc	r3, [pc], #-563	; a84 <__Vectors_Size+0x2c4>
     a80:	42435300 	submi	r5, r3, #0, 6
     a84:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     a88:	44490065 	strbmi	r0, [r9], #-101	; 0xffffff9b
     a8c:	5246445f 	subpl	r4, r6, #1593835520	; 0x5f000000
     a90:	43434400 	movtmi	r4, #13312	; 0x3400
     a94:	4341564d 	movtmi	r5, #5709	; 0x164d
     a98:	53534300 	cmppl	r3, #0, 6
     a9c:	00524c45 	subseq	r4, r2, r5, asr #24
     aa0:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     aa4:	6f436d65 	svcvs	0x00436d65
     aa8:	6c436572 	cfstr64vs	mvdx6, [r3], {114}	; 0x72
     aac:	006b636f 	rsbeq	r6, fp, pc, ror #6
     ab0:	4d434344 	stclmi	3, cr4, [r3, #-272]	; 0xfffffef0
     ab4:	00554156 	subseq	r4, r5, r6, asr r1
     ab8:	65565f5f 	ldrbvs	r5, [r6, #-3935]	; 0xfffff0a1
     abc:	726f7463 	rsbvc	r7, pc, #1660944384	; 0x63000000
     ac0:	54560073 	ldrbpl	r0, [r6], #-115	; 0xffffff8d
     ac4:	5300524f 	movwpl	r5, #591	; 0x24f
     ac8:	00524146 	subseq	r4, r2, r6, asr #2
     acc:	52534349 	subspl	r4, r3, #603979777	; 0x24000001
     ad0:	52494100 	subpl	r4, r9, #0, 2
     ad4:	44005243 	strmi	r5, [r0], #-579	; 0xfffffdbd
     ad8:	00525346 	subseq	r5, r2, r6, asr #6
     adc:	41464d4d 	cmpmi	r6, sp, asr #26
     ae0:	43430052 	movtmi	r0, #12370	; 0x3052
     ae4:	52444953 	subpl	r4, r4, #1359872	; 0x14c000
     ae8:	53464300 	movtpl	r4, #25344	; 0x6300
     aec:	534e0052 	movtpl	r0, #57426	; 0xe052
     af0:	00524341 	subseq	r4, r2, r1, asr #6
     af4:	5246564d 	subpl	r5, r6, #80740352	; 0x4d00000
     af8:	564d0030 			; <UNDEFINED> instruction: 0x564d0030
     afc:	00315246 	eorseq	r5, r1, r6, asr #4
     b00:	5246564d 	subpl	r5, r6, #80740352	; 0x4d00000
     b04:	45520032 	ldrbmi	r0, [r2, #-50]	; 0xffffffce
     b08:	56524553 			; <UNDEFINED> instruction: 0x56524553
     b0c:	00334445 	eorseq	r4, r3, r5, asr #8
     b10:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     b14:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     b18:	45520034 	ldrbmi	r0, [r2, #-52]	; 0xffffffcc
     b1c:	56524553 			; <UNDEFINED> instruction: 0x56524553
     b20:	00354445 	eorseq	r4, r5, r5, asr #8
     b24:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     b28:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     b2c:	45520036 	ldrbmi	r0, [r2, #-54]	; 0xffffffca
     b30:	56524553 			; <UNDEFINED> instruction: 0x56524553
     b34:	00374445 	eorseq	r4, r7, r5, asr #8
     b38:	74737953 	ldrbtvc	r7, [r3], #-2387	; 0xfffff6ad
     b3c:	6e496d65 	cdpvs	13, 4, cr6, cr9, cr5, {3}
     b40:	53007469 	movwpl	r7, #1129	; 0x469
     b44:	52534348 	subspl	r4, r3, #72, 6	; 0x20000001
     b48:	43434400 	movtmi	r4, #13312	; 0x3400
     b4c:	41564d49 	cmpmi	r6, r9, asr #26
     b50:	43490043 	movtmi	r0, #36931	; 0x9043
     b54:	41564d49 	cmpmi	r6, r9, asr #26
     b58:	43440055 	movtmi	r0, #16469	; 0x4055
     b5c:	00575349 	subseq	r5, r7, r9, asr #6
     b60:	52534641 	subspl	r4, r3, #68157440	; 0x4100000
     b64:	53465300 	movtpl	r5, #25344	; 0x6300
     b68:	43440052 	movtmi	r0, #16466	; 0x4052
     b6c:	00575343 	subseq	r5, r7, r3, asr #6
     b70:	52504853 	subspl	r4, r0, #5439488	; 0x530000
     b74:	43455600 	movtmi	r5, #22016	; 0x5600
     b78:	5f524f54 	svcpl	0x00524f54
     b7c:	4c424154 	stfmie	f4, [r2], {84}	; 0x54
     b80:	79545f45 	ldmdbvc	r4, {r0, r2, r6, r8, r9, sl, fp, ip, lr}^
     b84:	49006570 	stmdbmi	r0, {r4, r5, r6, r8, sl, sp, lr}
     b88:	46415f44 	strbmi	r5, [r1], -r4, asr #30
     b8c:	44490052 	strbmi	r0, [r9], #-82	; 0xffffffae
     b90:	4153495f 	cmpmi	r3, pc, asr r9
     b94:	50430052 	subpl	r0, r3, r2, asr r0
     b98:	00524341 	subseq	r4, r2, r1, asr #6
     b9c:	52534648 	subspl	r4, r3, #72, 12	; 0x4800000
     ba0:	615f5f00 	cmpvs	pc, r0, lsl #30
     ba4:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     ba8:	6432695f 	ldrtvs	r6, [r2], #-2399	; 0xfffff6a1
     bac:	776f7000 	strbvc	r7, [pc, -r0]!
     bb0:	65003031 	strvs	r3, [r0, #-49]	; 0xffffffcf
     bb4:	00327078 	eorseq	r7, r2, r8, ror r0
     bb8:	5f74756f 	svcpl	0x0074756f
     bbc:	5f746366 	svcpl	0x00746366
     bc0:	70617277 	rsbvc	r7, r1, r7, ror r2
     bc4:	66696400 	strbtvs	r6, [r9], -r0, lsl #8
     bc8:	6f5f0066 	svcvs	0x005f0066
     bcc:	625f7475 	subsvs	r7, pc, #1962934272	; 0x75000000
     bd0:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     bd4:	70760072 	rsbsvc	r0, r6, r2, ror r0
     bd8:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
     bdc:	696d0066 	stmdbvs	sp!, {r1, r2, r5, r6}^
     be0:	6469776e 	strbtvs	r7, [r9], #-1902	; 0xfffff892
     be4:	5f006874 	svcpl	0x00006874
     be8:	6165615f 	cmnvs	r5, pc, asr r1
     bec:	645f6962 	ldrbvs	r6, [pc], #-2402	; bf4 <__Vectors_Size+0x434>
     bf0:	00766964 	rsbseq	r6, r6, r4, ror #18
     bf4:	6f74655f 	svcvs	0x0074655f
     bf8:	75700061 	ldrbvc	r0, [r0, #-97]!	; 0xffffff9f
     bfc:	68635f74 	stmdavs	r3!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
     c00:	5f007261 	svcpl	0x00007261
     c04:	5f74756f 	svcpl	0x0074756f
     c08:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     c0c:	78616d00 	stmdavc	r1!, {r8, sl, fp, sp, lr}^
     c10:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     c14:	6f687700 	svcvs	0x00687700
     c18:	5f00656c 	svcpl	0x0000656c
     c1c:	6165615f 	cmnvs	r5, pc, asr r1
     c20:	645f6962 	ldrbvs	r6, [pc], #-2402	; c28 <__Vectors_Size+0x468>
     c24:	007a6932 	rsbseq	r6, sl, r2, lsr r9
     c28:	63617266 	cmnvs	r1, #1610612742	; 0x60000006
     c2c:	756f5f00 	strbvc	r5, [pc, #-3840]!	; fffffd34 <__RAM_segment_used_end__+0xc7effd34>
     c30:	63665f74 	cmnvs	r6, #116, 30	; 0x1d0
     c34:	5f5f0074 	svcpl	0x005f0074
     c38:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     c3c:	32645f69 	rsbcc	r5, r4, #420	; 0x1a4
     c40:	007a6975 	rsbseq	r6, sl, r5, ror r9
     c44:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
     c48:	64695f74 	strbtvs	r5, [r9], #-3956	; 0xfffff08c
     c4c:	63660078 	cmnvs	r6, #120	; 0x78
     c50:	69727074 	ldmdbvs	r2!, {r2, r4, r5, r6, ip, sp, lr}^
     c54:	0066746e 	rsbeq	r7, r6, lr, ror #8
     c58:	6167656e 	cmnvs	r7, lr, ror #10
     c5c:	65766974 	ldrbvs	r6, [r6, #-2420]!	; 0xfffff68c
     c60:	615f5f00 	cmpvs	pc, r0, lsl #30
     c64:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     c68:	6461645f 	strbtvs	r6, [r1], #-1119	; 0xfffffba1
     c6c:	5f5f0064 	svcpl	0x005f0064
     c70:	6c5f6176 	ldfvse	f6, [pc], {118}	; 0x76
     c74:	00747369 	rsbseq	r7, r4, r9, ror #6
     c78:	432f2e2e 			; <UNDEFINED> instruction: 0x432f2e2e
     c7c:	2f65726f 	svccs	0x0065726f
     c80:	2f637253 	svccs	0x00637253
     c84:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     c88:	632e6674 			; <UNDEFINED> instruction: 0x632e6674
     c8c:	746e5f00 	strbtvc	r5, [lr], #-3840	; 0xfffff100
     c90:	665f616f 	ldrbvs	r6, [pc], -pc, ror #2
     c94:	616d726f 	cmnvs	sp, pc, ror #4
     c98:	665f0074 			; <UNDEFINED> instruction: 0x665f0074
     c9c:	00616f74 	rsbeq	r6, r1, r4, ror pc
     ca0:	74756f5f 	ldrbtvc	r6, [r5], #-3935	; 0xfffff0a1
     ca4:	6c756e5f 	ldclvs	14, cr6, [r5], #-380	; 0xfffffe84
     ca8:	7865006c 	stmdavc	r5!, {r2, r3, r5, r6}^
     cac:	6c617670 	stclvs	6, cr7, [r1], #-448	; 0xfffffe40
     cb0:	74756f00 	ldrbtvc	r6, [r5], #-3840	; 0xfffff100
     cb4:	7463665f 	strbtvc	r6, [r3], #-1631	; 0xfffff9a1
     cb8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     cbc:	5f5f0065 	svcpl	0x005f0065
     cc0:	62616561 	rsbvs	r6, r1, #406847488	; 0x18400000
     cc4:	63645f69 	cmnvs	r4, #420	; 0x1a4
     cc8:	6567706d 	strbvs	r7, [r7, #-109]!	; 0xffffff93
     ccc:	746e5f00 	strbtvc	r5, [lr], #-3840	; 0xfffff100
     cd0:	6c5f616f 	ldfvse	f6, [pc], {111}	; 0x6f
     cd4:	00676e6f 	rsbeq	r6, r7, pc, ror #28
     cd8:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
     cdc:	0066746e 	rsbeq	r7, r6, lr, ror #8
     ce0:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     ce4:	5f696261 	svcpl	0x00696261
     ce8:	64326975 	ldrtvs	r6, [r2], #-2421	; 0xfffff68b
     cec:	615f5f00 	cmpvs	pc, r0, lsl #30
     cf0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     cf4:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     cf8:	00746770 	rsbseq	r6, r4, r0, ror r7
     cfc:	6c78616d 	ldfvse	f6, [r8], #-436	; 0xfffffe4c
     d00:	5f006e65 	svcpl	0x00006e65
     d04:	696f7461 	stmdbvs	pc!, {r0, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     d08:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
     d0c:	656c6e72 	strbvs	r6, [ip, #-3698]!	; 0xfffff18e
     d10:	00735f6e 	rsbseq	r5, r3, lr, ror #30
     d14:	70615f5f 	rsbvc	r5, r1, pc, asr pc
     d18:	615f5f00 	cmpvs	pc, r0, lsl #30
     d1c:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     d20:	756d645f 	strbvc	r6, [sp, #-1119]!	; 0xfffffba1
     d24:	425f006c 	subsmi	r0, pc, #108	; 0x6c
     d28:	006c6f6f 	rsbeq	r6, ip, pc, ror #30
     d2c:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     d30:	3436746e 	ldrtcc	r7, [r6], #-1134	; 0xfffffb92
     d34:	5f00745f 	svcpl	0x0000745f
     d38:	645f7369 	ldrbvs	r7, [pc], #-873	; d40 <__Vectors_Size+0x580>
     d3c:	74696769 	strbtvc	r6, [r9], #-1897	; 0xfffff897
     d40:	73765f00 	cmnvc	r6, #0, 30
     d44:	6972706e 	ldmdbvs	r2!, {r1, r2, r3, r5, r6, ip, sp, lr}^
     d48:	0066746e 	rsbeq	r7, r6, lr, ror #8
     d4c:	766e6f63 	strbtvc	r6, [lr], -r3, ror #30
     d50:	615f5f00 	cmpvs	pc, r0, lsl #30
     d54:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     d58:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     d5c:	00716570 	rsbseq	r6, r1, r0, ror r5
     d60:	69755f5f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     d64:	7470746e 	ldrbtvc	r7, [r0], #-1134	; 0xfffffb92
     d68:	00745f72 	rsbseq	r5, r4, r2, ror pc
     d6c:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     d70:	65746361 	ldrbvs	r6, [r4, #-865]!	; 0xfffffc9f
     d74:	6f5f0072 	svcvs	0x005f0072
     d78:	725f7475 	subsvc	r7, pc, #1962934272	; 0x75000000
     d7c:	5f007665 	svcpl	0x00007665
     d80:	6165615f 	cmnvs	r5, pc, asr r1
     d84:	645f6962 	ldrbvs	r6, [pc], #-2402	; d8c <__Vectors_Size+0x5cc>
     d88:	00627573 	rsbeq	r7, r2, r3, ror r5
     d8c:	65615f5f 	strbvs	r5, [r1, #-3935]!	; 0xfffff0a1
     d90:	5f696261 	svcpl	0x00696261
     d94:	69646c75 	stmdbvs	r4!, {r0, r2, r4, r5, r6, sl, fp, sp, lr}^
     d98:	646f6d76 	strbtvs	r6, [pc], #-3446	; da0 <__Vectors_Size+0x5e0>
     d9c:	615f5f00 	cmpvs	pc, r0, lsl #30
     da0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     da4:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     da8:	00656c70 	rsbeq	r6, r5, r0, ror ip
     dac:	5f74756f 	svcpl	0x0074756f
     db0:	5f746366 	svcpl	0x00746366
     db4:	70617277 	rsbvc	r7, r1, r7, ror r2
     db8:	7079745f 	rsbsvc	r7, r9, pc, asr r4
     dbc:	72700065 	rsbsvc	r0, r0, #101	; 0x65
     dc0:	66006365 	strvs	r6, [r0], -r5, ror #6
     dc4:	74646977 	strbtvc	r6, [r4], #-2423	; 0xfffff689
     dc8:	5f5f0068 	svcpl	0x005f0068
     dcc:	63756e67 	cmnvs	r5, #1648	; 0x670
     dd0:	5f61765f 	svcpl	0x0061765f
     dd4:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
     dd8:	615f5f00 	cmpvs	pc, r0, lsl #30
     ddc:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
     de0:	6d63645f 	cfstrdvs	mvd6, [r3, #-380]!	; 0xfffffe84
     de4:	00746c70 	rsbseq	r6, r4, r0, ror ip
     de8:	6f746e5f 	svcvs	0x00746e5f
     dec:	6f6c5f61 	svcvs	0x006c5f61
     df0:	6c5f676e 	mrrcvs	7, 6, r6, pc, cr14	; <UNPREDICTABLE>
     df4:	00676e6f 	rsbeq	r6, r7, pc, ror #28
     df8:	6c5f7369 	mrrcvs	3, 6, r7, pc, cr9	; <UNPREDICTABLE>
     dfc:	6162006c 	cmnvs	r2, ip, rrx
     e00:	70006573 	andvc	r6, r0, r3, ror r5
     e04:	69636572 	stmdbvs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     e08:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
     e0c:	2f2e2e00 	svccs	0x002e2e00
     e10:	65726f43 	ldrbvs	r6, [r2, #-3907]!	; 0xfffff0bd
     e14:	6372532f 	cmnvs	r2, #-1140850688	; 0xbc000000
     e18:	7261752f 	rsbvc	r7, r1, #197132288	; 0xbc00000
     e1c:	00632e74 	rsbeq	r2, r3, r4, ror lr
     e20:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     e24:	6365725f 	cmnvs	r5, #-268435451	; 0xf0000005
     e28:	61750076 	cmnvs	r5, r6, ror r0
     e2c:	735f7472 	cmpvc	pc, #1912602624	; 0x72000000
     e30:	00646e65 	rsbeq	r6, r4, r5, ror #28
     e34:	5f746567 	svcpl	0x00746567
     e38:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
     e3c:	5f787400 	svcpl	0x00787400
     e40:	636f6c62 	cmnvs	pc, #25088	; 0x6200
     e44:	6f705f6b 	svcvs	0x00705f6b
     e48:	735f6c6f 	cmpvc	pc, #28416	; 0x6f00
     e4c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
     e50:	5f787400 	svcpl	0x00787400
     e54:	636f6c62 	cmnvs	pc, #25088	; 0x6200
     e58:	6f705f6b 	svcvs	0x00705f6b
     e5c:	695f6c6f 	ldmdbvs	pc, {r0, r1, r2, r3, r5, r6, sl, fp, sp, lr}^	; <UNPREDICTABLE>
     e60:	2e2e0064 	cdpcs	0, 2, cr0, cr14, cr4, {3}
     e64:	2f2e2e2f 	svccs	0x002e2e2f
     e68:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; db8 <__Vectors_Size+0x5f8>
     e6c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
     e70:	742f736f 	strtvc	r7, [pc], #-879	; e78 <__Vectors_Size+0x6b8>
     e74:	61657268 	cmnvs	r5, r8, ror #4
     e78:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
     e7c:	6f6d6d6f 	svcvs	0x006d6d6f
     e80:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
     e84:	78742f63 	ldmdavc	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
     e88:	6f6c625f 	svcvs	0x006c625f
     e8c:	725f6b63 	subsvc	r6, pc, #101376	; 0x18c00
     e90:	61656c65 	cmnvs	r5, r5, ror #24
     e94:	632e6573 			; <UNDEFINED> instruction: 0x632e6573
     e98:	725f5f00 	subsvc	r5, pc, #0, 30
     e9c:	6f747365 	svcvs	0x00747365
     ea0:	695f6572 	ldmdbvs	pc, {r1, r4, r5, r6, r8, sl, sp, lr}^	; <UNPREDICTABLE>
     ea4:	7265746e 	rsbvc	r7, r5, #1845493760	; 0x6e000000
     ea8:	74707572 	ldrbtvc	r7, [r0], #-1394	; 0xfffffa8e
     eac:	746e6900 	strbtvc	r6, [lr], #-2304	; 0xfffff700
     eb0:	736f705f 	cmnvc	pc, #95	; 0x5f
     eb4:	65727574 	ldrbvs	r7, [r2, #-1396]!	; 0xfffffa8c
     eb8:	726f7700 	rsbvc	r7, pc, #0, 14
     ebc:	74705f6b 	ldrbtvc	r5, [r0], #-3947	; 0xfffff095
     ec0:	5f5f0072 	svcpl	0x005f0072
     ec4:	5f746567 	svcpl	0x00746567
     ec8:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     ecc:	70757272 	rsbsvc	r7, r5, r2, ror r2
     ed0:	6f705f74 	svcvs	0x00705f74
     ed4:	72757473 	rsbsvc	r7, r5, #1929379840	; 0x73000000
     ed8:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
     edc:	6f6c625f 	svcvs	0x006c625f
     ee0:	705f6b63 	subsvc	r6, pc, r3, ror #22
     ee4:	5f6c6f6f 	svcpl	0x006c6f6f
     ee8:	61746f74 	cmnvs	r4, r4, ror pc
     eec:	6e69006c 	cdpvs	0, 6, cr0, cr9, cr12, {3}
     ef0:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
     ef4:	5f747075 	svcpl	0x00747075
     ef8:	65766173 	ldrbvs	r6, [r6, #-371]!	; 0xfffffe8d
     efc:	6f6f7000 	svcvs	0x006f7000
     f00:	74705f6c 	ldrbtvc	r5, [r0], #-3948	; 0xfffff094
     f04:	78740072 	ldmdavc	r4!, {r1, r4, r5, r6}^
     f08:	6f6c625f 	svcvs	0x006c625f
     f0c:	705f6b63 	subsvc	r6, pc, r3, ror #22
     f10:	5f6c6f6f 	svcpl	0x006c6f6f
     f14:	70737573 	rsbsvc	r7, r3, r3, ror r5
     f18:	69736e65 	ldmdbvs	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
     f1c:	6c5f6e6f 	mrrcvs	14, 6, r6, pc, cr15	; <UNPREDICTABLE>
     f20:	00747369 	rsbseq	r7, r4, r9, ror #6
     f24:	69645f5f 	stmdbvs	r4!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
     f28:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
     f2c:	6e695f65 	cdpvs	15, 6, cr5, cr9, cr5, {3}
     f30:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
     f34:	73747075 	cmnvc	r4, #117	; 0x75
     f38:	5f787400 	svcpl	0x00787400
     f3c:	636f6c62 	cmnvs	pc, #25088	; 0x6200
     f40:	6f705f6b 	svcvs	0x00705f6b
     f44:	735f6c6f 	cmpvc	pc, #28416	; 0x6f00
     f48:	00657a69 	rsbeq	r7, r5, r9, ror #20
     f4c:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     f50:	6b636f6c 	blvs	18dcd08 <__RAM_SIZE+0x17dcd08>
     f54:	6f6f705f 	svcvs	0x006f705f
     f58:	72635f6c 	rsbvc	r5, r3, #108, 30	; 0x1b0
     f5c:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     f60:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
     f64:	74007478 	strvc	r7, [r0], #-1144	; 0xfffffb88
     f68:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
     f6c:	5f6b636f 	svcpl	0x006b636f
     f70:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; db8 <__Vectors_Size+0x5f8>
     f74:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
     f78:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
     f7c:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
     f80:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
     f84:	5f787400 	svcpl	0x00787400
     f88:	636f6c62 	cmnvs	pc, #25088	; 0x6200
     f8c:	6f705f6b 	svcvs	0x00705f6b
     f90:	615f6c6f 	cmpvs	pc, pc, ror #24
     f94:	6c696176 	stfvse	f6, [r9], #-472	; 0xfffffe28
     f98:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
     f9c:	5f585400 	svcpl	0x00585400
     fa0:	434f4c42 	movtmi	r4, #64578	; 0xfc42
     fa4:	4f505f4b 	svcmi	0x00505f4b
     fa8:	74004c4f 	strvc	r4, [r0], #-3151	; 0xfffff3b1
     fac:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
     fb0:	5f6b636f 	svcpl	0x006b636f
     fb4:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; dfc <__Vectors_Size+0x63c>
     fb8:	6f6c625f 	svcvs	0x006c625f
     fbc:	735f6b63 	cmpvc	pc, #101376	; 0x18c00
     fc0:	00657a69 	rsbeq	r7, r5, r9, ror #20
     fc4:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
     fc8:	6b636f6c 	blvs	18dcd80 <__RAM_SIZE+0x17dcd80>
     fcc:	6f6f705f 	svcvs	0x006f705f
     fd0:	72635f6c 	rsbvc	r5, r3, #108, 30	; 0x1b0
     fd4:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
     fd8:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
     fdc:	6f697665 	svcvs	0x00697665
     fe0:	74007375 	strvc	r7, [r0], #-885	; 0xfffffc8b
     fe4:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
     fe8:	5f6b636f 	svcpl	0x006b636f
     fec:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; e34 <__Vectors_Size+0x674>
     ff0:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
     ff4:	65720065 	ldrbvs	r0, [r2, #-101]!	; 0xffffff9b
     ff8:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
     ffc:	6f6c625f 	svcvs	0x006c625f
    1000:	705f6b63 	subsvc	r6, pc, r3, ror #22
    1004:	6e007274 	mcrvs	2, 0, r7, cr0, cr4, {3}
    1008:	5f747865 	svcpl	0x00747865
    100c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1010:	70006461 	andvc	r6, r0, r1, ror #8
    1014:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    1018:	5f73756f 	svcpl	0x0073756f
    101c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1020:	74006461 	strvc	r6, [r0], #-1121	; 0xfffffb9f
    1024:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
    1028:	5f6b636f 	svcpl	0x006b636f
    102c:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; e74 <__Vectors_Size+0x6b4>
    1030:	6176615f 	cmnvs	r6, pc, asr r1
    1034:	62616c69 	rsbvs	r6, r1, #26880	; 0x6900
    1038:	6c5f656c 	cfldr64vs	mvdx6, [pc], {108}	; 0x6c
    103c:	00747369 	rsbseq	r7, r4, r9, ror #6
    1040:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
    1044:	6f6c625f 	svcvs	0x006c625f
    1048:	705f6b63 	subsvc	r6, pc, r3, ror #22
    104c:	54007274 	strpl	r7, [r0], #-628	; 0xfffffd8c
    1050:	4c425f58 	mcrrmi	15, 5, r5, r2, cr8
    1054:	5f4b434f 	svcpl	0x004b434f
    1058:	4c4f4f50 	mcrrmi	15, 5, r4, pc, cr0
    105c:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
    1060:	00544355 	subseq	r4, r4, r5, asr r3
    1064:	5f78745f 	svcpl	0x0078745f
    1068:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    106c:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1070:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1074:	696e5f6d 	stmdbvs	lr!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1078:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    107c:	00656d75 	rsbeq	r6, r5, r5, ror sp
    1080:	5f78745f 	svcpl	0x0078745f
    1084:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    1088:	65725f6b 	ldrbvs	r5, [r2, #-3947]!	; 0xfffff095
    108c:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
    1090:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    1094:	2f2e2e2f 	svccs	0x002e2e2f
    1098:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; fe8 <__Vectors_Size+0x828>
    109c:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    10a0:	742f736f 	strtvc	r7, [pc], #-879	; 10a8 <_Min_Stack_Size+0xa8>
    10a4:	61657268 	cmnvs	r5, r8, ror #4
    10a8:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    10ac:	6f6d6d6f 	svcvs	0x006d6d6f
    10b0:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    10b4:	78742f63 	ldmdavc	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    10b8:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    10bc:	6c615f65 	stclvs	15, cr5, [r1], #-404	; 0xfffffe6c
    10c0:	61636f6c 	cmnvs	r3, ip, ror #30
    10c4:	632e6574 			; <UNDEFINED> instruction: 0x632e6574
    10c8:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    10cc:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    10d0:	5f646165 	svcpl	0x00646165
    10d4:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    10d8:	6e5f6d65 	cdpvs	13, 5, cr6, cr15, cr5, {3}
    10dc:	75735f69 	ldrbvc	r5, [r3, #-3945]!	; 0xfffff097
    10e0:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    10e4:	656d0064 	strbvs	r0, [sp, #-100]!	; 0xffffff9c
    10e8:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    10ec:	7a69735f 	bvc	1a5de70 <__RAM_SIZE+0x195de70>
    10f0:	656d0065 	strbvs	r0, [sp, #-101]!	; 0xffffff9b
    10f4:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    10f8:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    10fc:	6e696600 	cdpvs	6, 6, cr6, cr9, cr0, {0}
    1100:	65687369 	strbvs	r7, [r8, #-873]!	; 0xfffffc97
    1104:	61770064 	cmnvs	r7, r4, rrx
    1108:	6f5f7469 	svcvs	0x005f7469
    110c:	6f697470 	svcvs	0x00697470
    1110:	745f006e 	ldrbvc	r0, [pc], #-110	; 1118 <_Min_Stack_Size+0x118>
    1114:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1118:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    111c:	5f6c6f6f 	svcpl	0x006c6f6f
    1120:	72616573 	rsbvc	r6, r1, #482344960	; 0x1cc00000
    1124:	5f006863 	svcpl	0x00006863
    1128:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1130 <_Min_Stack_Size+0x130>
    112c:	61657268 	cmnvs	r5, r8, ror #4
    1130:	75635f64 	strbvc	r5, [r3, #-3940]!	; 0xfffff09c
    1134:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    1138:	74705f74 	ldrbtvc	r5, [r0], #-3956	; 0xfffff08c
    113c:	745f0072 	ldrbvc	r0, [pc], #-114	; 1144 <_Min_Stack_Size+0x144>
    1140:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1144:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1148:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
    114c:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
    1150:	7369645f 	cmnvc	r9, #1593835520	; 0x5f000000
    1154:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    1158:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    115c:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    1160:	6c615f65 	stclvs	15, cr5, [r1], #-404	; 0xfffffe6c
    1164:	61636f6c 	cmnvs	r3, ip, ror #30
    1168:	2e006574 	cfrshl64cs	mvdx0, mvdx4, r6
    116c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1170:	2f2e2e2f 	svccs	0x002e2e2f
    1174:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1178:	2f736f74 	svccs	0x00736f74
    117c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1180:	2f786461 	svccs	0x00786461
    1184:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1188:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    118c:	742f6372 	strtvc	r6, [pc], #-882	; 1194 <_Min_Stack_Size+0x194>
    1190:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1194:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    1198:	5f6c6f6f 	svcpl	0x006c6f6f
    119c:	61656c63 	cmnvs	r5, r3, ror #24
    11a0:	2e70756e 	cdpcs	5, 7, cr7, cr0, cr14, {3}
    11a4:	745f0063 	ldrbvc	r0, [pc], #-99	; 11ac <_Min_Stack_Size+0x1ac>
    11a8:	79625f78 	stmdbvc	r2!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    11ac:	705f6574 	subsvc	r6, pc, r4, ror r5	; <UNPREDICTABLE>
    11b0:	5f6c6f6f 	svcpl	0x006c6f6f
    11b4:	61656c63 	cmnvs	r5, r3, ror #24
    11b8:	0070756e 	rsbseq	r7, r0, lr, ror #10
    11bc:	65657266 	strbvs	r7, [r5, #-614]!	; 0xfffffd9a
    11c0:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    11c4:	2f2e2e00 	svccs	0x002e2e00
    11c8:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    11cc:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    11d0:	6f747262 	svcvs	0x00747262
    11d4:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    11d8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    11dc:	6f632f78 	svcvs	0x00632f78
    11e0:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    11e4:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    11e8:	5f78742f 	svcpl	0x0078742f
    11ec:	65747962 	ldrbvs	r7, [r4, #-2402]!	; 0xfffff69e
    11f0:	6f6f705f 	svcvs	0x006f705f
    11f4:	72635f6c 	rsbvc	r5, r3, #108, 30	; 0x1b0
    11f8:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    11fc:	5f00632e 	svcpl	0x0000632e
    1200:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
    1204:	5f657479 	svcpl	0x00657479
    1208:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 1050 <_Min_Stack_Size+0x50>
    120c:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    1210:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    1214:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    1218:	6f6c6200 	svcvs	0x006c6200
    121c:	695f6b63 	ldmdbvs	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
    1220:	7269646e 	rsbvc	r6, r9, #1845493760	; 0x6e000000
    1224:	5f746365 	svcpl	0x00746365
    1228:	00727470 	rsbseq	r7, r2, r0, ror r4
    122c:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
    1230:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    1234:	78656e00 	stmdavc	r5!, {r9, sl, fp, sp, lr}^
    1238:	6f705f74 	svcvs	0x00705f74
    123c:	5f006c6f 	svcpl	0x00006c6f
    1240:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
    1244:	5f657479 	svcpl	0x00657479
    1248:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 1090 <_Min_Stack_Size+0x90>
    124c:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    1250:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    1254:	756f635f 	strbvc	r6, [pc, #-863]!	; efd <__Vectors_Size+0x73d>
    1258:	5f00746e 	svcpl	0x0000746e
    125c:	625f7874 	subsvs	r7, pc, #116, 16	; 0x740000
    1260:	5f657479 	svcpl	0x00657479
    1264:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 10ac <_Min_Stack_Size+0xac>
    1268:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    126c:	00657461 	rsbeq	r7, r5, r1, ror #8
    1270:	76657270 			; <UNDEFINED> instruction: 0x76657270
    1274:	73756f69 	cmnvc	r5, #420	; 0x1a4
    1278:	6f6f705f 	svcvs	0x006f705f
    127c:	5f5f006c 	svcpl	0x005f006c
    1280:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    1284:	5f6e6974 	svcpl	0x006e6974
    1288:	736d656d 	cmnvc	sp, #457179136	; 0x1b400000
    128c:	74007465 	strvc	r7, [r0], #-1125	; 0xfffffb9b
    1290:	5f706d65 	svcpl	0x00706d65
    1294:	00727470 	rsbseq	r7, r2, r0, ror r4
    1298:	6d617865 	stclvs	8, cr7, [r1, #-404]!	; 0xfffffe6c
    129c:	5f656e69 	svcpl	0x00656e69
    12a0:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    12a4:	7400736b 	strvc	r7, [r0], #-875	; 0xfffffc95
    12a8:	6c61746f 	cfstrdvs	mvd7, [r1], #-444	; 0xfffffe44
    12ac:	6568745f 	strbvs	r7, [r8, #-1119]!	; 0xfffffba1
    12b0:	7465726f 	strbtvc	r7, [r5], #-623	; 0xfffffd91
    12b4:	6c616369 	stclvs	3, cr6, [r1], #-420	; 0xfffffe5c
    12b8:	6176615f 	cmnvs	r6, pc, asr r1
    12bc:	62616c69 	rsbvs	r6, r1, #26880	; 0x6900
    12c0:	7400656c 	strvc	r6, [r0], #-1388	; 0xfffffa94
    12c4:	5f736968 	svcpl	0x00736968
    12c8:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    12cc:	696c5f6b 	stmdbvs	ip!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    12d0:	705f6b6e 	subsvc	r6, pc, lr, ror #22
    12d4:	66007274 			; <UNDEFINED> instruction: 0x66007274
    12d8:	74737269 	ldrbtvc	r7, [r3], #-617	; 0xfffffd97
    12dc:	6572665f 	ldrbvs	r6, [r2, #-1631]!	; 0xfffff9a1
    12e0:	6c625f65 	stclvs	15, cr5, [r2], #-404	; 0xfffffe6c
    12e4:	5f6b636f 	svcpl	0x006b636f
    12e8:	6e756f66 	cdpvs	15, 7, cr6, cr5, cr6, {3}
    12ec:	2e2e0064 	cdpcs	0, 2, cr0, cr14, cr4, {3}
    12f0:	2f2e2e2f 	svccs	0x002e2e2f
    12f4:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1244 <_Min_Stack_Size+0x244>
    12f8:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    12fc:	742f736f 	strtvc	r7, [pc], #-879	; 1304 <_Min_Stack_Size+0x304>
    1300:	61657268 	cmnvs	r5, r8, ror #4
    1304:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    1308:	6f6d6d6f 	svcvs	0x006d6d6f
    130c:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    1310:	78742f63 	ldmdavc	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    1314:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    1318:	6f705f65 	svcvs	0x00705f65
    131c:	735f6c6f 	cmpvc	pc, #28416	; 0x6f00
    1320:	63726165 	cmnvs	r2, #1073741849	; 0x40000019
    1324:	00632e68 	rsbeq	r2, r3, r8, ror #28
    1328:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
    132c:	6f6c625f 	svcvs	0x006c625f
    1330:	6c5f6b63 	mrrcvs	11, 6, r6, pc, cr3	; <UNPREDICTABLE>
    1334:	5f6b6e69 	svcpl	0x006b6e69
    1338:	00727470 	rsbseq	r7, r2, r0, ror r4
    133c:	69617661 	stmdbvs	r1!, {r0, r5, r6, r9, sl, ip, sp, lr}^
    1340:	6c62616c 	stfvse	f6, [r2], #-432	; 0xfffffe50
    1344:	79625f65 	stmdbvc	r2!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1348:	00736574 	rsbseq	r6, r3, r4, ror r5
    134c:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
    1350:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    1354:	5f787400 	svcpl	0x00787400
    1358:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
    135c:	6c665f74 	stclvs	15, cr5, [r6], #-464	; 0xfffffe30
    1360:	5f736761 	svcpl	0x00736761
    1364:	756f7267 	strbvc	r7, [pc, #-615]!	; 1105 <_Min_Stack_Size+0x105>
    1368:	64695f70 	strbtvs	r5, [r9], #-3952	; 0xfffff090
    136c:	5f787400 	svcpl	0x00787400
    1370:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    1374:	64695f65 	strbtvs	r5, [r9], #-3941	; 0xfffff09b
    1378:	5f787400 	svcpl	0x00787400
    137c:	616d6573 	smcvs	54867	; 0xd653
    1380:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    1384:	72635f65 	rsbvc	r5, r3, #404	; 0x194
    1388:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    138c:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
    1390:	6f697665 	svcvs	0x00697665
    1394:	5f007375 	svcpl	0x00007375
    1398:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
    139c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    13a0:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    13a4:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    13a8:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    13ac:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    13b0:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    13b4:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    13b8:	5f657a69 	svcpl	0x00657a69
    13bc:	73756e75 	cmnvc	r5, #1872	; 0x750
    13c0:	6d5f6465 	cfldrdvs	mvd6, [pc, #-404]	; 1234 <_Min_Stack_Size+0x234>
    13c4:	726f6d65 	rsbvc	r6, pc, #6464	; 0x1940
    13c8:	745f0079 	ldrbvc	r0, [pc], #-121	; 13d0 <_Min_Stack_Size+0x3d0>
    13cc:	75715f78 	ldrbvc	r5, [r1, #-3960]!	; 0xfffff088
    13d0:	5f657565 	svcpl	0x00657565
    13d4:	61657263 	cmnvs	r5, r3, ror #4
    13d8:	5f646574 	svcpl	0x00646574
    13dc:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    13e0:	745f0074 	ldrbvc	r0, [pc], #-116	; 13e8 <_Min_Stack_Size+0x3e8>
    13e4:	76655f78 	uqsub16vc	r5, r5, r8
    13e8:	5f746e65 	svcpl	0x00746e65
    13ec:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    13f0:	72635f73 	rsbvc	r5, r3, #460	; 0x1cc
    13f4:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    13f8:	6f635f64 	svcvs	0x00635f64
    13fc:	00746e75 	rsbseq	r6, r4, r5, ror lr
    1400:	735f7874 	cmpvc	pc, #116, 16	; 0x740000
    1404:	70616d65 	rsbvc	r6, r1, r5, ror #26
    1408:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    140c:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
    1410:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
    1414:	5f6e6f69 	svcpl	0x006e6f69
    1418:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    141c:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1420:	6d65735f 	stclvs	3, cr7, [r5, #-380]!	; 0xfffffe84
    1424:	6f687061 	svcvs	0x00687061
    1428:	705f6572 	subsvc	r6, pc, r2, ror r5	; <UNPREDICTABLE>
    142c:	6f667265 	svcvs	0x00667265
    1430:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    1434:	675f6563 	ldrbvs	r6, [pc, -r3, ror #10]
    1438:	635f7465 	cmpvs	pc, #1694498816	; 0x65000000
    143c:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1440:	5f787400 	svcpl	0x00787400
    1444:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
    1448:	6c665f74 	stclvs	15, cr5, [r6], #-464	; 0xfffffe30
    144c:	5f736761 	svcpl	0x00736761
    1450:	756f7267 	strbvc	r7, [pc, #-615]!	; 11f1 <_Min_Stack_Size+0x1f1>
    1454:	75735f70 	ldrbvc	r5, [r3, #-3952]!	; 0xfffff090
    1458:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    145c:	5f646564 	svcpl	0x00646564
    1460:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1464:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
    1468:	6575715f 	ldrbvs	r7, [r5, #-351]!	; 0xfffffea1
    146c:	735f6575 	cmpvc	pc, #490733568	; 0x1d400000
    1470:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1474:	5f787400 	svcpl	0x00787400
    1478:	6e657665 	cdpvs	6, 6, cr7, cr5, cr5, {3}
    147c:	6c665f74 	stclvs	15, cr5, [r6], #-464	; 0xfffffe30
    1480:	5f736761 	svcpl	0x00736761
    1484:	756f7267 	strbvc	r7, [pc, #-615]!	; 1225 <_Min_Stack_Size+0x225>
    1488:	75635f70 	strbvc	r5, [r3, #-3952]!	; 0xfffff090
    148c:	6e657272 	mcrvs	2, 3, r7, cr5, cr2, {3}
    1490:	58540074 	ldmdapl	r4, {r2, r4, r5, r6}^
    1494:	4556455f 	ldrbmi	r4, [r6, #-1375]	; 0xfffffaa1
    1498:	465f544e 	ldrbmi	r5, [pc], -lr, asr #8
    149c:	5347414c 	movtpl	r4, #29004	; 0x714c
    14a0:	4f52475f 	svcmi	0x0052475f
    14a4:	535f5055 	cmppl	pc, #85	; 0x55
    14a8:	43555254 	cmpmi	r5, #84, 4	; 0x40000005
    14ac:	58540054 	ldmdapl	r4, {r2, r4, r6}^
    14b0:	4556455f 	ldrbmi	r4, [r6, #-1375]	; 0xfffffaa1
    14b4:	465f544e 	ldrbmi	r5, [pc], -lr, asr #8
    14b8:	5347414c 	movtpl	r4, #29004	; 0x714c
    14bc:	4f52475f 	svcmi	0x0052475f
    14c0:	74005055 	strvc	r5, [r0], #-85	; 0xffffffab
    14c4:	76655f78 	uqsub16vc	r5, r5, r8
    14c8:	5f746e65 	svcpl	0x00746e65
    14cc:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    14d0:	72675f73 	rsbvc	r5, r7, #460	; 0x1cc
    14d4:	5f70756f 	svcpl	0x0070756f
    14d8:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
    14dc:	5f787400 	svcpl	0x00787400
    14e0:	616d6573 	smcvs	54867	; 0xd653
    14e4:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    14e8:	72635f65 	rsbvc	r5, r3, #404	; 0x194
    14ec:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    14f0:	656e5f64 	strbvs	r5, [lr, #-3940]!	; 0xfffff09c
    14f4:	54007478 	strpl	r7, [r0], #-1144	; 0xfffffb88
    14f8:	45535f58 	ldrbmi	r5, [r3, #-3928]	; 0xfffff0a8
    14fc:	4850414d 	ldmdami	r0, {r0, r2, r3, r6, r8, lr}^
    1500:	5f45524f 	svcpl	0x0045524f
    1504:	55525453 	ldrbpl	r5, [r2, #-1107]	; 0xfffffbad
    1508:	54005443 	strpl	r5, [r0], #-1091	; 0xfffffbbd
    150c:	55515f58 	ldrbpl	r5, [r1, #-3928]	; 0xfffff0a8
    1510:	00455545 	subeq	r5, r5, r5, asr #10
    1514:	515f5854 	cmppl	pc, r4, asr r8	; <UNPREDICTABLE>
    1518:	45554555 	ldrbmi	r4, [r5, #-1365]	; 0xfffffaab
    151c:	5254535f 	subspl	r5, r4, #2080374785	; 0x7c000001
    1520:	00544355 	subseq	r4, r4, r5, asr r3
    1524:	5f78745f 	svcpl	0x0078745f
    1528:	616d6573 	smcvs	54867	; 0xd653
    152c:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    1530:	65705f65 	ldrbvs	r5, [r0, #-3941]!	; 0xfffff09b
    1534:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    1538:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    153c:	69745f65 	ldmdbvs	r4!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1540:	756f656d 	strbvc	r6, [pc, #-1389]!	; fdb <__Vectors_Size+0x81b>
    1544:	6f635f74 	svcvs	0x00635f74
    1548:	00746e75 	rsbseq	r6, r4, r5, ror lr
    154c:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
    1550:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1554:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    1558:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    155c:	78656e5f 	stmdavc	r5!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
    1560:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
    1564:	6576655f 	ldrbvs	r6, [r6, #-1375]!	; 0xfffffaa1
    1568:	665f746e 	ldrbvs	r7, [pc], -lr, ror #8
    156c:	7367616c 	cmnvc	r7, #108, 2
    1570:	6f72675f 	svcvs	0x0072675f
    1574:	635f7075 	cmpvs	pc, #117	; 0x75
    1578:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    157c:	705f6465 	subsvc	r6, pc, r5, ror #8
    1580:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    1584:	0073756f 	rsbseq	r7, r3, pc, ror #10
    1588:	655f7874 	ldrbvs	r7, [pc, #-2164]	; d1c <__Vectors_Size+0x55c>
    158c:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    1590:	616c665f 	cmnvs	ip, pc, asr r6
    1594:	675f7367 	ldrbvs	r7, [pc, -r7, ror #6]
    1598:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    159c:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    15a0:	735f7465 	cmpvc	pc, #1694498816	; 0x65000000
    15a4:	63726165 	cmnvs	r2, #1073741849	; 0x40000019
    15a8:	745f0068 	ldrbvc	r0, [pc], #-104	; 15b0 <_Min_Stack_Size+0x5b0>
    15ac:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
    15b0:	5f6b636f 	svcpl	0x006b636f
    15b4:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 13fc <_Min_Stack_Size+0x3fc>
    15b8:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    15bc:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    15c0:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    15c4:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    15c8:	74756d5f 	ldrbtvc	r6, [r5], #-3423	; 0xfffff2a1
    15cc:	635f7865 	cmpvs	pc, #6619136	; 0x650000
    15d0:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    15d4:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
    15d8:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    15dc:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    15e0:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    15e4:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    15e8:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    15ec:	7a696c61 	bvc	1a5c778 <__RAM_SIZE+0x195c778>
    15f0:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
    15f4:	6576655f 	ldrbvs	r6, [r6, #-1375]!	; 0xfffffaa1
    15f8:	665f746e 	ldrbvs	r7, [pc], -lr, ror #8
    15fc:	7367616c 	cmnvc	r7, #108, 2
    1600:	6f72675f 	svcvs	0x0072675f
    1604:	735f7075 	cmpvc	pc, #117	; 0x75
    1608:	65707375 	ldrbvs	r7, [r0, #-885]!	; 0xfffffc8b
    160c:	6f69736e 	svcvs	0x0069736e
    1610:	696c5f6e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1614:	74007473 	strvc	r7, [r0], #-1139	; 0xfffffb8d
    1618:	75715f78 	ldrbvc	r5, [r1, #-3960]!	; 0xfffff088
    161c:	5f657565 	svcpl	0x00657565
    1620:	61706163 	cmnvs	r0, r3, ror #2
    1624:	79746963 	ldmdbvc	r4!, {r0, r1, r5, r6, r8, fp, sp, lr}^
    1628:	5f787400 	svcpl	0x00787400
    162c:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    1630:	75735f65 	ldrbvc	r5, [r3, #-3941]!	; 0xfffff09b
    1634:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    1638:	5f646564 	svcpl	0x00646564
    163c:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1640:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
    1644:	6576655f 	ldrbvs	r6, [r6, #-1375]!	; 0xfffffaa1
    1648:	665f746e 	ldrbvs	r7, [pc], -lr, ror #8
    164c:	7367616c 	cmnvc	r7, #108, 2
    1650:	6f72675f 	svcvs	0x0072675f
    1654:	635f7075 	cmpvs	pc, #117	; 0x75
    1658:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    165c:	6e5f6465 	cdpvs	4, 5, cr6, cr15, cr5, {3}
    1660:	00747865 	rsbseq	r7, r4, r5, ror #16
    1664:	5f78745f 	svcpl	0x0078745f
    1668:	616d6573 	smcvs	54867	; 0xd653
    166c:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    1670:	65705f65 	ldrbvs	r5, [r0, #-3941]!	; 0xfffff09b
    1674:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    1678:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    167c:	75705f65 	ldrbvc	r5, [r0, #-3941]!	; 0xfffff09b
    1680:	6f635f74 	svcvs	0x00635f74
    1684:	00746e75 	rsbseq	r6, r4, r5, ror lr
    1688:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
    168c:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1690:	6165725f 	cmnvs	r5, pc, asr r2
    1694:	78740064 	ldmdavc	r4!, {r2, r5, r6}^
    1698:	6575715f 	ldrbvs	r7, [r5, #-351]!	; 0xfffffea1
    169c:	655f6575 	ldrbvs	r6, [pc, #-1397]	; 112f <_Min_Stack_Size+0x12f>
    16a0:	7400646e 	strvc	r6, [r0], #-1134	; 0xfffffb92
    16a4:	65735f78 	ldrbvs	r5, [r3, #-3960]!	; 0xfffff088
    16a8:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    16ac:	5f65726f 	svcpl	0x0065726f
    16b0:	74006469 	strvc	r6, [r0], #-1129	; 0xfffffb97
    16b4:	75715f78 	ldrbvc	r5, [r1, #-3960]!	; 0xfffff088
    16b8:	5f657565 	svcpl	0x00657565
    16bc:	69617661 	stmdbvs	r1!, {r0, r5, r6, r9, sl, ip, sp, lr}^
    16c0:	6c62616c 	stfvse	f6, [r2], #-432	; 0xfffffe50
    16c4:	74735f65 	ldrbtvc	r5, [r3], #-3941	; 0xfffff09b
    16c8:	6761726f 	strbvs	r7, [r1, -pc, ror #4]!
    16cc:	745f0065 	ldrbvc	r0, [pc], #-101	; 16d4 <_Min_Stack_Size+0x6d4>
    16d0:	65735f78 	ldrbvs	r5, [r3, #-3960]!	; 0xfffff088
    16d4:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    16d8:	5f65726f 	svcpl	0x0065726f
    16dc:	61657263 	cmnvs	r5, r3, ror #4
    16e0:	5f646574 	svcpl	0x00646574
    16e4:	00727470 	rsbseq	r7, r2, r0, ror r4
    16e8:	535f5854 	cmppl	pc, #84, 16	; 0x540000
    16ec:	50414d45 	subpl	r4, r1, r5, asr #26
    16f0:	45524f48 	ldrbmi	r4, [r2, #-3912]	; 0xfffff0b8
    16f4:	5f585400 	svcpl	0x00585400
    16f8:	4554554d 	ldrbmi	r5, [r4, #-1357]	; 0xfffffab3
    16fc:	745f0058 	ldrbvc	r0, [pc], #-88	; 1704 <_Min_Stack_Size+0x704>
    1700:	6c625f78 	stclvs	15, cr5, [r2], #-480	; 0xfffffe20
    1704:	5f6b636f 	svcpl	0x006b636f
    1708:	6c6f6f70 	stclvs	15, cr6, [pc], #-448	; 1550 <_Min_Stack_Size+0x550>
    170c:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    1710:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    1714:	756f635f 	strbvc	r6, [pc, #-863]!	; 13bd <_Min_Stack_Size+0x3bd>
    1718:	7400746e 	strvc	r7, [r0], #-1134	; 0xfffffb92
    171c:	65735f78 	ldrbvs	r5, [r3, #-3960]!	; 0xfffff088
    1720:	6870616d 	ldmdavs	r0!, {r0, r2, r3, r5, r6, r8, sp, lr}^
    1724:	5f65726f 	svcpl	0x0065726f
    1728:	656d616e 	strbvs	r6, [sp, #-366]!	; 0xfffffe92
    172c:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1730:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1734:	5f646165 	svcpl	0x00646165
    1738:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
    173c:	696c6169 	stmdbvs	ip!, {r0, r3, r5, r6, r8, sp, lr}^
    1740:	7400657a 	strvc	r6, [r0], #-1402	; 0xfffffa86
    1744:	75715f78 	ldrbvc	r5, [r1, #-3960]!	; 0xfffff088
    1748:	5f657565 	svcpl	0x00657565
    174c:	61657263 	cmnvs	r5, r3, ror #4
    1750:	5f646574 	svcpl	0x00646574
    1754:	76657270 			; <UNDEFINED> instruction: 0x76657270
    1758:	73756f69 	cmnvc	r5, #420	; 0x1a4
    175c:	5f787400 	svcpl	0x00787400
    1760:	75657571 	strbvc	r7, [r5, #-1393]!	; 0xfffffa8f
    1764:	75735f65 	ldrbvc	r5, [r3, #-3941]!	; 0xfffff09b
    1768:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    176c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
    1770:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
    1774:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
    1778:	6575715f 	ldrbvs	r7, [r5, #-351]!	; 0xfffffea1
    177c:	6d5f6575 	cfldr64vs	mvdx6, [pc, #-468]	; 15b0 <_Min_Stack_Size+0x5b0>
    1780:	61737365 	cmnvs	r3, r5, ror #6
    1784:	735f6567 	cmpvc	pc, #432013312	; 0x19c00000
    1788:	00657a69 	rsbeq	r7, r5, r9, ror #20
    178c:	715f7874 	cmpvc	pc, r4, ror r8	; <UNPREDICTABLE>
    1790:	65756575 	ldrbvs	r6, [r5, #-1397]!	; 0xfffffa8b
    1794:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
    1798:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    179c:	2f2e2e2f 	svccs	0x002e2e2f
    17a0:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 16f0 <_Min_Stack_Size+0x6f0>
    17a4:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    17a8:	742f736f 	strtvc	r7, [pc], #-879	; 17b0 <_Min_Stack_Size+0x7b0>
    17ac:	61657268 	cmnvs	r5, r8, ror #4
    17b0:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    17b4:	6f6d6d6f 	svcvs	0x006d6d6f
    17b8:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    17bc:	78742f63 	ldmdavc	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    17c0:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    17c4:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    17c8:	5f657a69 	svcpl	0x00657a69
    17cc:	68676968 	stmdavs	r7!, {r3, r5, r6, r8, fp, sp, lr}^
    17d0:	76656c5f 			; <UNDEFINED> instruction: 0x76656c5f
    17d4:	632e6c65 			; <UNDEFINED> instruction: 0x632e6c65
    17d8:	5f787400 	svcpl	0x00787400
    17dc:	616d6573 	smcvs	54867	; 0xd653
    17e0:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    17e4:	6f635f65 	svcvs	0x00635f65
    17e8:	00746e75 	rsbseq	r6, r4, r5, ror lr
    17ec:	655f7874 	ldrbvs	r7, [pc, #-2164]	; f80 <__Vectors_Size+0x7c0>
    17f0:	746e6576 	strbtvc	r6, [lr], #-1398	; 0xfffffa8a
    17f4:	616c665f 	cmnvs	ip, pc, asr r6
    17f8:	675f7367 	ldrbvs	r7, [pc, -r7, ror #6]
    17fc:	70756f72 	rsbsvc	r6, r5, r2, ror pc
    1800:	6c65645f 	cfstrdvs	mvd6, [r5], #-380	; 0xfffffe84
    1804:	64657961 	strbtvs	r7, [r5], #-2401	; 0xfffff69f
    1808:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
    180c:	5f007261 	svcpl	0x00007261
    1810:	735f7874 	cmpvc	pc, #116, 16	; 0x740000
    1814:	70616d65 	rsbvc	r6, r1, r5, ror #26
    1818:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    181c:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    1820:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    1824:	756f635f 	strbvc	r6, [pc, #-863]!	; 14cd <_Min_Stack_Size+0x4cd>
    1828:	5f00746e 	svcpl	0x0000746e
    182c:	6d5f7874 	ldclvs	8, cr7, [pc, #-464]	; 1664 <_Min_Stack_Size+0x664>
    1830:	78657475 	stmdavc	r5!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    1834:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    1838:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    183c:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    1840:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1844:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1848:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    184c:	5f657a69 	svcpl	0x00657a69
    1850:	68676968 	stmdavs	r7!, {r3, r5, r6, r8, fp, sp, lr}^
    1854:	76656c5f 			; <UNDEFINED> instruction: 0x76656c5f
    1858:	5f006c65 	svcpl	0x00006c65
    185c:	735f7874 	cmpvc	pc, #116, 16	; 0x740000
    1860:	70616d65 	rsbvc	r6, r1, r5, ror #26
    1864:	65726f68 	ldrbvs	r6, [r2, #-3944]!	; 0xfffff098
    1868:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    186c:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    1870:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    1874:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
    1878:	736e6570 	cmnvc	lr, #112, 10	; 0x1c000000
    187c:	5f6e6f69 	svcpl	0x006e6f69
    1880:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1884:	745f0074 	ldrbvc	r0, [pc], #-116	; 188c <_Min_Stack_Size+0x88c>
    1888:	76655f78 	uqsub16vc	r5, r5, r8
    188c:	5f746e65 	svcpl	0x00746e65
    1890:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    1894:	72635f73 	rsbvc	r5, r3, #460	; 0x1cc
    1898:	65746165 	ldrbvs	r6, [r4, #-357]!	; 0xfffffe9b
    189c:	74705f64 	ldrbtvc	r5, [r0], #-3940	; 0xfffff09c
    18a0:	78740072 	ldmdavc	r4!, {r1, r4, r5, r6}^
    18a4:	6575715f 	ldrbvs	r7, [r5, #-351]!	; 0xfffffea1
    18a8:	775f6575 			; <UNDEFINED> instruction: 0x775f6575
    18ac:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
    18b0:	5f787400 	svcpl	0x00787400
    18b4:	616d6573 	smcvs	54867	; 0xd653
    18b8:	726f6870 	rsbvc	r6, pc, #112, 16	; 0x700000
    18bc:	75735f65 	ldrbvc	r5, [r3, #-3941]!	; 0xfffff09b
    18c0:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    18c4:	5f646564 	svcpl	0x00646564
    18c8:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    18cc:	78740074 	ldmdavc	r4!, {r2, r4, r5, r6}^
    18d0:	6575715f 	ldrbvs	r7, [r5, #-351]!	; 0xfffffea1
    18d4:	655f6575 	ldrbvs	r6, [pc, #-1397]	; 1367 <_Min_Stack_Size+0x367>
    18d8:	6575716e 	ldrbvs	r7, [r5, #-366]!	; 0xfffffe92
    18dc:	00646575 	rsbeq	r6, r4, r5, ror r5
    18e0:	5f78745f 	svcpl	0x0078745f
    18e4:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    18e8:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    18ec:	64656863 	strbtvs	r6, [r5], #-2147	; 0xfffff79d
    18f0:	00656c75 	rsbeq	r6, r5, r5, ror ip
    18f4:	5f78745f 	svcpl	0x0078745f
    18f8:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    18fc:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1900:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1904:	74735f6d 	ldrbtvc	r5, [r3], #-3949	; 0xfffff093
    1908:	00657461 	rsbeq	r7, r5, r1, ror #8
    190c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1910:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1914:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1918:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    191c:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1920:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1924:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 1870 <_Min_Stack_Size+0x870>
    1928:	2f6e6f6d 	svccs	0x006e6f6d
    192c:	2f637273 	svccs	0x00637273
    1930:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1934:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    1938:	7a696c61 	bvc	1a5cac4 <__RAM_SIZE+0x195cac4>
    193c:	656b5f65 	strbvs	r5, [fp, #-3941]!	; 0xfffff09b
    1940:	6c656e72 	stclvs	14, cr6, [r5], #-456	; 0xfffffe38
    1944:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
    1948:	632e7265 			; <UNDEFINED> instruction: 0x632e7265
    194c:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1950:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1954:	6c616974 			; <UNDEFINED> instruction: 0x6c616974
    1958:	5f657a69 	svcpl	0x00657a69
    195c:	5f776f6c 	svcpl	0x00776f6c
    1960:	6576656c 	ldrbvs	r6, [r6, #-1388]!	; 0xfffffa94
    1964:	745f006c 	ldrbvc	r0, [pc], #-108	; 196c <_Min_Stack_Size+0x96c>
    1968:	70695f78 	rsbvc	r5, r9, r8, ror pc
    196c:	675f7273 			; <UNDEFINED> instruction: 0x675f7273
    1970:	73007465 	movwvc	r7, #1125	; 0x465
    1974:	64657661 	strbtvs	r7, [r5], #-1633	; 0xfffff99f
    1978:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    197c:	5f646165 	svcpl	0x00646165
    1980:	00727470 	rsbseq	r7, r2, r0, ror r4
    1984:	5f78745f 	svcpl	0x0078745f
    1988:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    198c:	635f6461 	cmpvs	pc, #1627389952	; 0x61000000
    1990:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1994:	70750065 	rsbsvc	r0, r5, r5, rrx
    1998:	65746164 	ldrbvs	r6, [r4, #-356]!	; 0xfffffe9c
    199c:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
    19a0:	5f6b6361 	svcpl	0x006b6361
    19a4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    19a8:	70690074 	rsbvc	r0, r9, r4, ror r0
    19ac:	765f7273 			; <UNDEFINED> instruction: 0x765f7273
    19b0:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
    19b4:	6e617200 	cdpvs	2, 6, cr7, cr1, cr0, {0}
    19b8:	656e0064 	strbvs	r0, [lr, #-100]!	; 0xffffff9c
    19bc:	74735f77 	ldrbtvc	r5, [r3], #-3959	; 0xfffff089
    19c0:	5f6b6361 	svcpl	0x006b6361
    19c4:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    19c8:	6e650074 	mcrvs	0, 3, r0, cr5, cr4, {3}
    19cc:	5f797274 	svcpl	0x00797274
    19d0:	636e7566 	cmnvs	lr, #427819008	; 0x19800000
    19d4:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    19d8:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    19dc:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    19e0:	5f646165 	svcpl	0x00646165
    19e4:	63657865 	cmnvs	r5, #6619136	; 0x650000
    19e8:	5f657475 	svcpl	0x00657475
    19ec:	00727470 	rsbseq	r7, r2, r0, ror r4
    19f0:	65766173 	ldrbvs	r6, [r6, #-371]!	; 0xfffffe8d
    19f4:	68745f64 	ldmdavs	r4!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    19f8:	68736572 	ldmdavs	r3!, {r1, r4, r5, r6, r8, sl, sp, lr}^
    19fc:	00646c6f 	rsbeq	r6, r4, pc, ror #24
    1a00:	72746e65 	rsbsvc	r6, r4, #1616	; 0x650
    1a04:	6e695f79 	mcrvs	15, 3, r5, cr9, cr9, {3}
    1a08:	00747570 	rsbseq	r7, r4, r0, ror r5
    1a0c:	5f78745f 	svcpl	0x0078745f
    1a10:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1a14:	635f6461 	cmpvs	pc, #1627389952	; 0x61000000
    1a18:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    1a1c:	635f6465 	cmpvs	pc, #1694498816	; 0x65000000
    1a20:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    1a24:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1a28:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1a2c:	5f646165 	svcpl	0x00646165
    1a30:	61657263 	cmnvs	r5, r3, ror #4
    1a34:	5f646574 	svcpl	0x00646574
    1a38:	00727470 	rsbseq	r7, r2, r0, ror r4
    1a3c:	5f78745f 	svcpl	0x0078745f
    1a40:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1a44:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1a48:	6b636174 	blvs	18da020 <__RAM_SIZE+0x17da020>
    1a4c:	6975625f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
    1a50:	2e00646c 	cdpcs	4, 0, cr6, cr0, cr12, {3}
    1a54:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1a58:	2f2e2e2f 	svccs	0x002e2e2f
    1a5c:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    1a60:	2f736f74 	svccs	0x00736f74
    1a64:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1a68:	2f786461 	svccs	0x00786461
    1a6c:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
    1a70:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
    1a74:	742f6372 	strtvc	r6, [pc], #-882	; 1a7c <_Min_Stack_Size+0xa7c>
    1a78:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1a7c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1a80:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    1a84:	2e657461 	cdpcs	4, 6, cr7, cr5, cr1, {3}
    1a88:	75610063 	strbvc	r0, [r1, #-99]!	; 0xffffff9d
    1a8c:	735f6f74 	cmpvc	pc, #116, 30	; 0x1d0
    1a90:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    1a94:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1a98:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1a9c:	5f646165 	svcpl	0x00646165
    1aa0:	66726570 			; <UNDEFINED> instruction: 0x66726570
    1aa4:	616d726f 	cmnvs	sp, pc, ror #4
    1aa8:	5f65636e 	svcpl	0x0065636e
    1aac:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1ab0:	5f74756f 	svcpl	0x0074756f
    1ab4:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1ab8:	745f0074 	ldrbvc	r0, [pc], #-116	; 1ac0 <_Min_Stack_Size+0xac0>
    1abc:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1ac0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1ac4:	6769685f 			; <UNDEFINED> instruction: 0x6769685f
    1ac8:	74736568 	ldrbtvc	r6, [r3], #-1384	; 0xfffffa98
    1acc:	6972705f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
    1ad0:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    1ad4:	745f0079 	ldrbvc	r0, [pc], #-121	; 1adc <_Min_Stack_Size+0xadc>
    1ad8:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1adc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1ae0:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    1ae4:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    1ae8:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    1aec:	6c64695f 			; <UNDEFINED> instruction: 0x6c64695f
    1af0:	65725f65 	ldrbvs	r5, [r2, #-3941]!	; 0xfffff09b
    1af4:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
    1af8:	756f635f 	strbvc	r6, [pc, #-863]!	; 17a1 <_Min_Stack_Size+0x7a1>
    1afc:	5f00746e 	svcpl	0x0000746e
    1b00:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1b08 <_Min_Stack_Size+0xb08>
    1b04:	61657268 	cmnvs	r5, r8, ror #4
    1b08:	756d5f64 	strbvc	r5, [sp, #-3940]!	; 0xfffff09c
    1b0c:	5f786574 	svcpl	0x00786574
    1b10:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
    1b14:	00657361 	rsbeq	r7, r5, r1, ror #6
    1b18:	5f78745f 	svcpl	0x0078745f
    1b1c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1b20:	705f6461 	subsvc	r6, pc, r1, ror #8
    1b24:	6f667265 	svcvs	0x00667265
    1b28:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    1b2c:	725f6563 	subsvc	r6, pc, #415236096	; 0x18c00000
    1b30:	6e696c65 	cdpvs	12, 6, cr6, cr9, cr5, {3}
    1b34:	73697571 	cmnvc	r9, #473956352	; 0x1c400000
    1b38:	6f635f68 	svcvs	0x00635f68
    1b3c:	00746e75 	rsbseq	r6, r4, r5, ror lr
    1b40:	5f78745f 	svcpl	0x0078745f
    1b44:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1b48:	705f6461 	subsvc	r6, pc, r1, ror #8
    1b4c:	6f667265 	svcvs	0x00667265
    1b50:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    1b54:	735f6563 	cmpvc	pc, #415236096	; 0x18c00000
    1b58:	63696c6f 	cmnvs	r9, #28416	; 0x6f00
    1b5c:	64657469 	strbtvs	r7, [r5], #-1129	; 0xfffffb97
    1b60:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
    1b64:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
    1b68:	5f6e6f69 	svcpl	0x006e6f69
    1b6c:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1b70:	745f0074 	ldrbvc	r0, [pc], #-116	; 1b78 <_Min_Stack_Size+0xb78>
    1b74:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1b78:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1b7c:	7070615f 	rsbsvc	r6, r0, pc, asr r1
    1b80:	6163696c 	cmnvs	r3, ip, ror #18
    1b84:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1b88:	6174735f 	cmnvs	r4, pc, asr r3
    1b8c:	655f6b63 	ldrbvs	r6, [pc, #-2915]	; 1031 <_Min_Stack_Size+0x31>
    1b90:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    1b94:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
    1b98:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1b9c:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1ba0:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1ba4:	5f646165 	svcpl	0x00646165
    1ba8:	66726570 			; <UNDEFINED> instruction: 0x66726570
    1bac:	616d726f 	cmnvs	sp, pc, ror #4
    1bb0:	5f65636e 	svcpl	0x0065636e
    1bb4:	6578655f 	ldrbvs	r6, [r8, #-1375]!	; 0xfffffaa1
    1bb8:	65747563 	ldrbvs	r7, [r4, #-1379]!	; 0xfffffa9d
    1bbc:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
    1bc0:	646e695f 	strbtvs	r6, [lr], #-2399	; 0xfffff6a1
    1bc4:	5f007865 	svcpl	0x00007865
    1bc8:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1bd0 <_Min_Stack_Size+0xbd0>
    1bcc:	61657268 	cmnvs	r5, r8, ror #4
    1bd0:	65705f64 	ldrbvs	r5, [r0, #-3940]!	; 0xfffff09c
    1bd4:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    1bd8:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    1bdc:	65725f65 	ldrbvs	r5, [r2, #-3941]!	; 0xfffff09b
    1be0:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    1be4:	756f635f 	strbvc	r6, [pc, #-863]!	; 188d <_Min_Stack_Size+0x88d>
    1be8:	5f00746e 	svcpl	0x0000746e
    1bec:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1bf4 <_Min_Stack_Size+0xbf4>
    1bf0:	61657268 	cmnvs	r5, r8, ror #4
    1bf4:	65705f64 	ldrbvs	r5, [r0, #-3940]!	; 0xfffff09c
    1bf8:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    1bfc:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    1c00:	61775f65 	cmnvs	r7, r5, ror #30
    1c04:	615f7469 	cmpvs	pc, r9, ror #8
    1c08:	74726f62 	ldrbtvc	r6, [r2], #-3938	; 0xfffff09e
    1c0c:	756f635f 	strbvc	r6, [pc, #-863]!	; 18b5 <_Min_Stack_Size+0x8b5>
    1c10:	5f00746e 	svcpl	0x0000746e
    1c14:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1c1c <_Min_Stack_Size+0xc1c>
    1c18:	61657268 	cmnvs	r5, r8, ror #4
    1c1c:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
    1c20:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1c24:	6d5f7974 	vldrvs.16	s15, [pc, #-232]	; 1b44 <_Min_Stack_Size+0xb44>	; <UNPREDICTABLE>
    1c28:	00737061 	rsbseq	r7, r3, r1, rrx
    1c2c:	5f78745f 	svcpl	0x0078745f
    1c30:	73726576 	cmnvc	r2, #494927872	; 0x1d800000
    1c34:	5f6e6f69 	svcpl	0x006e6f69
    1c38:	5f006469 	svcpl	0x00006469
    1c3c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1c44 <_Min_Stack_Size+0xc44>
    1c40:	61657268 	cmnvs	r5, r8, ror #4
    1c44:	79735f64 	ldmdbvc	r3!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    1c48:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    1c4c:	6174735f 	cmnvs	r4, pc, asr r3
    1c50:	705f6b63 	subsvc	r6, pc, r3, ror #22
    1c54:	5f007274 	svcpl	0x00007274
    1c58:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1c60 <_Min_Stack_Size+0xc60>
    1c5c:	61657268 	cmnvs	r5, r8, ror #4
    1c60:	65705f64 	ldrbvs	r5, [r0, #-3940]!	; 0xfffff09c
    1c64:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    1c68:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    1c6c:	72705f65 	rsbsvc	r5, r0, #404	; 0x194
    1c70:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1c74:	695f7974 	ldmdbvs	pc, {r2, r4, r5, r6, r8, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    1c78:	7265766e 	rsbvc	r7, r5, #115343360	; 0x6e00000
    1c7c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
    1c80:	756f635f 	strbvc	r6, [pc, #-863]!	; 1929 <_Min_Stack_Size+0x929>
    1c84:	5f00746e 	svcpl	0x0000746e
    1c88:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1c90 <_Min_Stack_Size+0xc90>
    1c8c:	61657268 	cmnvs	r5, r8, ror #4
    1c90:	65705f64 	ldrbvs	r5, [r0, #-3940]!	; 0xfffff09c
    1c94:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    1c98:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    1c9c:	75735f65 	ldrbvc	r5, [r3, #-3941]!	; 0xfffff09b
    1ca0:	6e657073 	mcrvs	0, 3, r7, cr5, cr3, {3}
    1ca4:	6f635f64 	svcvs	0x00635f64
    1ca8:	00746e75 	rsbseq	r6, r4, r5, ror lr
    1cac:	5f78745f 	svcpl	0x0078745f
    1cb0:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1cb4:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1cb8:	69636570 	stmdbvs	r3!, {r4, r5, r6, r8, sl, sp, lr}^
    1cbc:	735f6c61 	cmpvc	pc, #24832	; 0x6100
    1cc0:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    1cc4:	745f0067 	ldrbvc	r0, [pc], #-103	; 1ccc <_Min_Stack_Size+0xccc>
    1cc8:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1ccc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1cd0:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    1cd4:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    1cd8:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    1cdc:	6578655f 	ldrbvs	r6, [r8, #-1375]!	; 0xfffffaa1
    1ce0:	65747563 	ldrbvs	r7, [r4, #-1379]!	; 0xfffffa9d
    1ce4:	676f6c5f 			; <UNDEFINED> instruction: 0x676f6c5f
    1ce8:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1cec:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1cf0:	5f646165 	svcpl	0x00646165
    1cf4:	66726570 			; <UNDEFINED> instruction: 0x66726570
    1cf8:	616d726f 	cmnvs	sp, pc, ror #4
    1cfc:	5f65636e 	svcpl	0x0065636e
    1d00:	5f6e6f6e 	svcpl	0x006e6f6e
    1d04:	656c6469 	strbvs	r6, [ip, #-1129]!	; 0xfffffb97
    1d08:	7465725f 	strbtvc	r7, [r5], #-607	; 0xfffffda1
    1d0c:	5f6e7275 	svcpl	0x006e7275
    1d10:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1d14:	745f0074 	ldrbvc	r0, [pc], #-116	; 1d1c <_Min_Stack_Size+0xd1c>
    1d18:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1d1c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1d20:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    1d24:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    1d28:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    1d2c:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    1d30:	6c735f65 	ldclvs	15, cr5, [r3], #-404	; 0xfffffe6c
    1d34:	5f656369 	svcpl	0x00656369
    1d38:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    1d3c:	745f0074 	ldrbvc	r0, [pc], #-116	; 1d44 <_Min_Stack_Size+0xd44>
    1d40:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1d44:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1d48:	7265705f 	rsbvc	r7, r5, #95	; 0x5f
    1d4c:	6d726f66 	ldclvs	15, cr6, [r2, #-408]!	; 0xfffffe68
    1d50:	65636e61 	strbvs	r6, [r3, #-3681]!	; 0xfffff19f
    1d54:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    1d58:	75727265 	ldrbvc	r7, [r2, #-613]!	; 0xfffffd9b
    1d5c:	705f7470 	subsvc	r7, pc, r0, ror r4	; <UNPREDICTABLE>
    1d60:	6d656572 	cfstr64vs	mvdx6, [r5, #-456]!	; 0xfffffe38
    1d64:	6f697470 	svcvs	0x00697470
    1d68:	6f635f6e 	svcvs	0x00635f6e
    1d6c:	00746e75 	rsbseq	r6, r4, r5, ror lr
    1d70:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1d74:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1d78:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1d7c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    1d80:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    1d84:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    1d88:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 1cd4 <_Min_Stack_Size+0xcd4>
    1d8c:	2f6e6f6d 	svccs	0x006e6f6d
    1d90:	2f637273 	svccs	0x00637273
    1d94:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1d9c <_Min_Stack_Size+0xd9c>
    1d98:	61657268 	cmnvs	r5, r8, ror #4
    1d9c:	6e695f64 	cdpvs	15, 6, cr5, cr9, cr4, {3}
    1da0:	61697469 	cmnvs	r9, r9, ror #8
    1da4:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    1da8:	5f00632e 	svcpl	0x0000632e
    1dac:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1db4 <_Min_Stack_Size+0xdb4>
    1db0:	61657268 	cmnvs	r5, r8, ror #4
    1db4:	72705f64 	rsbsvc	r5, r0, #100, 30	; 0x190
    1db8:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    1dbc:	6c5f7974 	mrrcvs	9, 7, r7, pc, cr4	; <UNPREDICTABLE>
    1dc0:	00747369 	rsbseq	r7, r4, r9, ror #6
    1dc4:	5f78745f 	svcpl	0x0078745f
    1dc8:	6c697562 	cfstr64vs	mvdx7, [r9], #-392	; 0xfffffe78
    1dcc:	706f5f64 	rsbvc	r5, pc, r4, ror #30
    1dd0:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    1dd4:	745f0073 	ldrbvc	r0, [pc], #-115	; 1ddc <_Min_Stack_Size+0xddc>
    1dd8:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1ddc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1de0:	6568735f 	strbvs	r7, [r8, #-863]!	; 0xfffffca1
    1de4:	655f6c6c 	ldrbvs	r6, [pc, #-3180]	; 1180 <_Min_Stack_Size+0x180>
    1de8:	7972746e 	ldmdbvc	r2!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^
    1dec:	2f2e2e00 	svccs	0x002e2e00
    1df0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1df4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1df8:	6f747262 	svcvs	0x00747262
    1dfc:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1e00:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1e04:	6f632f78 	svcvs	0x00632f78
    1e08:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    1e0c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1e10:	5f78742f 	svcpl	0x0078742f
    1e14:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1e18:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1e1c:	6c6c6568 	cfstr64vs	mvdx6, [ip], #-416	; 0xfffffe60
    1e20:	746e655f 	strbtvc	r6, [lr], #-1375	; 0xfffffaa1
    1e24:	632e7972 			; <UNDEFINED> instruction: 0x632e7972
    1e28:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1e2c:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
    1e30:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 1c68 <_Min_Stack_Size+0xc68>
    1e34:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
    1e38:	6e6f6300 	cdpvs	3, 6, cr6, cr15, cr0, {0}
    1e3c:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 1c74 <_Min_Stack_Size+0xc74>
    1e40:	6c61765f 	stclvs	6, cr7, [r1], #-380	; 0xfffffe84
    1e44:	5f006575 	svcpl	0x00006575
    1e48:	635f7874 	cmpvs	pc, #116, 16	; 0x740000
    1e4c:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    1e50:	735f6c6f 	cmpvc	pc, #28416	; 0x6f00
    1e54:	5f007465 	svcpl	0x00007465
    1e58:	765f7874 			; <UNDEFINED> instruction: 0x765f7874
    1e5c:	735f7066 	cmpvc	pc, #102	; 0x66
    1e60:	65746174 	ldrbvs	r6, [r4, #-372]!	; 0xfffffe8c
    1e64:	2f2e2e00 	svccs	0x002e2e00
    1e68:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1e6c:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    1e70:	6f747262 	svcvs	0x00747262
    1e74:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    1e78:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1e7c:	6f632f78 	svcvs	0x00632f78
    1e80:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    1e84:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    1e88:	5f78742f 	svcpl	0x0078742f
    1e8c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1e90:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1e94:	7065656c 	rsbvc	r6, r5, ip, ror #10
    1e98:	5f00632e 	svcpl	0x0000632e
    1e9c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 1ea4 <_Min_Stack_Size+0xea4>
    1ea0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    1ea4:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1ea8:	00646165 	rsbeq	r6, r4, r5, ror #2
    1eac:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    1eb0:	69745f72 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1eb4:	00736b63 	rsbseq	r6, r3, r3, ror #22
    1eb8:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    1ebc:	6f6c5f6b 	svcvs	0x006c5f6b
    1ec0:	74736577 	ldrbtvc	r6, [r3], #-1399	; 0xfffffa89
    1ec4:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1ec8:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1ecc:	5f646165 	svcpl	0x00646165
    1ed0:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    1ed4:	6e615f6b 	cdpvs	15, 6, cr5, cr1, cr11, {3}
    1ed8:	7a796c61 	bvc	1e5d064 <__RAM_SIZE+0x1d5d064>
    1edc:	2e2e0065 	cdpcs	0, 2, cr0, cr14, cr5, {3}
    1ee0:	2f2e2e2f 	svccs	0x002e2e2f
    1ee4:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1e34 <_Min_Stack_Size+0xe34>
    1ee8:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    1eec:	742f736f 	strtvc	r7, [pc], #-879	; 1ef4 <_Min_Stack_Size+0xef4>
    1ef0:	61657268 	cmnvs	r5, r8, ror #4
    1ef4:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    1ef8:	6f6d6d6f 	svcvs	0x006d6d6f
    1efc:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    1f00:	78742f63 	ldmdavc	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    1f04:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1f08:	5f646165 	svcpl	0x00646165
    1f0c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    1f10:	6e615f6b 	cdpvs	15, 6, cr5, cr1, cr11, {3}
    1f14:	7a796c61 	bvc	1e5d0a0 <__RAM_SIZE+0x1d5d0a0>
    1f18:	00632e65 	rsbeq	r2, r3, r5, ror #28
    1f1c:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    1f20:	69685f6b 	stmdbvs	r8!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    1f24:	73656867 	cmnvc	r5, #6750208	; 0x670000
    1f28:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
    1f2c:	2f2e2e2f 	svccs	0x002e2e2f
    1f30:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 1e80 <_Min_Stack_Size+0xe80>
    1f34:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    1f38:	742f736f 	strtvc	r7, [pc], #-879	; 1f40 <_Min_Stack_Size+0xf40>
    1f3c:	61657268 	cmnvs	r5, r8, ror #4
    1f40:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    1f44:	6f6d6d6f 	svcvs	0x006d6d6f
    1f48:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    1f4c:	78742f63 	ldmdavc	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    1f50:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1f54:	5f646165 	svcpl	0x00646165
    1f58:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    1f5c:	72655f6b 	rsbvc	r5, r5, #428	; 0x1ac
    1f60:	5f726f72 	svcpl	0x00726f72
    1f64:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
    1f68:	2e72656c 	cdpcs	5, 7, cr6, cr2, cr12, {3}
    1f6c:	745f0063 	ldrbvc	r0, [pc], #-99	; 1f74 <_Min_Stack_Size+0xf74>
    1f70:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    1f74:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    1f78:	6174735f 	cmnvs	r4, pc, asr r3
    1f7c:	655f6b63 	ldrbvs	r6, [pc, #-2915]	; 1421 <_Min_Stack_Size+0x421>
    1f80:	726f7272 	rsbvc	r7, pc, #536870919	; 0x20000007
    1f84:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
    1f88:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
    1f8c:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    1f90:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1f94:	5f646165 	svcpl	0x00646165
    1f98:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    1f9c:	705f6d65 	subsvc	r6, pc, r5, ror #26
    1fa0:	6d656572 	cfstr64vs	mvdx6, [r5, #-456]!	; 0xfffffe38
    1fa4:	635f7470 	cmpvs	pc, #112, 8	; 0x70000000
    1fa8:	6b636568 	blvs	18db550 <__RAM_SIZE+0x17db550>
    1fac:	655f5f00 	ldrbvs	r5, [pc, #-3840]	; 10b4 <_Min_Stack_Size+0xb4>
    1fb0:	6c62616e 	stfvse	f6, [r2], #-440	; 0xfffffe48
    1fb4:	6e695f65 	cdpvs	15, 6, cr5, cr9, cr5, {3}
    1fb8:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    1fbc:	73747075 	cmnvc	r4, #117	; 0x75
    1fc0:	72756300 	rsbsvc	r6, r5, #0, 6
    1fc4:	746e6572 	strbtvc	r6, [lr], #-1394	; 0xfffffa8e
    1fc8:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    1fcc:	00646165 	rsbeq	r6, r4, r5, ror #2
    1fd0:	5f78745f 	svcpl	0x0078745f
    1fd4:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    1fd8:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    1fdc:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    1fe0:	65725f6d 	ldrbvs	r5, [r2, #-3949]!	; 0xfffff093
    1fe4:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
    1fe8:	6c6e695f 			; <UNDEFINED> instruction: 0x6c6e695f
    1fec:	00656e69 	rsbeq	r6, r5, r9, ror #28
    1ff0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    1ff4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    1ff8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    1ffc:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2000:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    2004:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    2008:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 1f54 <_Min_Stack_Size+0xf54>
    200c:	2f6e6f6d 	svccs	0x006e6f6d
    2010:	2f637273 	svccs	0x00637273
    2014:	745f7874 	ldrbvc	r7, [pc], #-2164	; 201c <_Min_Stack_Size+0x101c>
    2018:	61657268 	cmnvs	r5, r8, ror #4
    201c:	79735f64 	ldmdbvc	r3!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    2020:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2024:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
    2028:	74706d65 	ldrbtvc	r6, [r0], #-3429	; 0xfffff29b
    202c:	6568635f 	strbvs	r6, [r8, #-863]!	; 0xfffffca1
    2030:	632e6b63 			; <UNDEFINED> instruction: 0x632e6b63
    2034:	6d6f6300 	stclvs	3, cr6, [pc, #-0]	; 203c <_Min_Stack_Size+0x103c>
    2038:	656e6962 	strbvs	r6, [lr, #-2402]!	; 0xfffff69e
    203c:	6c665f64 	stclvs	15, cr5, [r6], #-400	; 0xfffffe70
    2040:	00736761 	rsbseq	r6, r3, r1, ror #14
    2044:	5f78745f 	svcpl	0x0078745f
    2048:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    204c:	79735f72 	ldmdbvc	r3!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2050:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2054:	6165645f 	cmnvs	r5, pc, asr r4
    2058:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    205c:	00657461 	rsbeq	r7, r5, r1, ror #8
    2060:	5f78745f 	svcpl	0x0078745f
    2064:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2068:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    206c:	65747379 	ldrbvs	r7, [r4, #-889]!	; 0xfffffc87
    2070:	65725f6d 	ldrbvs	r5, [r2, #-3949]!	; 0xfffff093
    2074:	656d7573 	strbvs	r7, [sp, #-1395]!	; 0xfffffa8d
    2078:	69727000 	ldmdbvs	r2!, {ip, sp, lr}^
    207c:	7469726f 	strbtvc	r7, [r9], #-623	; 0xfffffd91
    2080:	69625f79 	stmdbvs	r2!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2084:	65680074 	strbvs	r0, [r8, #-116]!	; 0xffffff8c
    2088:	705f6461 	subsvc	r6, pc, r1, ror #8
    208c:	74007274 	strvc	r7, [r0], #-628	; 0xfffffd8c
    2090:	5f6c6961 	svcpl	0x006c6961
    2094:	00727470 	rsbseq	r7, r2, r0, ror r4
    2098:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    209c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    20a0:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    20a4:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    20a8:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    20ac:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    20b0:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 1ffc <_Min_Stack_Size+0xffc>
    20b4:	2f6e6f6d 	svccs	0x006e6f6d
    20b8:	2f637273 	svccs	0x00637273
    20bc:	745f7874 	ldrbvc	r7, [pc], #-2164	; 20c4 <_Min_Stack_Size+0x10c4>
    20c0:	61657268 	cmnvs	r5, r8, ror #4
    20c4:	79735f64 	ldmdbvc	r3!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    20c8:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    20cc:	7365725f 	cmnvc	r5, #-268435451	; 0xf0000005
    20d0:	2e656d75 	mcrcs	13, 3, r6, cr5, cr5, {3}
    20d4:	745f0063 	ldrbvc	r0, [pc], #-99	; 20dc <_Min_Stack_Size+0x10dc>
    20d8:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    20dc:	5f72656d 	svcpl	0x0072656d
    20e0:	74737973 	ldrbtvc	r7, [r3], #-2419	; 0xfffff68d
    20e4:	615f6d65 	cmpvs	pc, r5, ror #26
    20e8:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    20ec:	00657461 	rsbeq	r7, r5, r1, ror #8
    20f0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    20f4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    20f8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    20fc:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2100:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    2104:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    2108:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 2054 <_Min_Stack_Size+0x1054>
    210c:	2f6e6f6d 	svccs	0x006e6f6d
    2110:	2f637273 	svccs	0x00637273
    2114:	745f7874 	ldrbvc	r7, [pc], #-2164	; 211c <_Min_Stack_Size+0x111c>
    2118:	61657268 	cmnvs	r5, r8, ror #4
    211c:	79735f64 	ldmdbvc	r3!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    2120:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2124:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
    2128:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    212c:	5f00632e 	svcpl	0x0000632e
    2130:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2138 <_Min_Stack_Size+0x1138>
    2134:	61657268 	cmnvs	r5, r8, ror #4
    2138:	79735f64 	ldmdbvc	r3!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    213c:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2140:	7375735f 	cmnvc	r5, #2080374785	; 0x7c000001
    2144:	646e6570 	strbtvs	r6, [lr], #-1392	; 0xfffffa90
    2148:	73616200 	cmnvc	r1, #0, 4
    214c:	72705f65 	rsbsvc	r5, r0, #404	; 0x194
    2150:	69726f69 	ldmdbvs	r2!, {r0, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
    2154:	5f007974 	svcpl	0x00007974
    2158:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2160 <_Min_Stack_Size+0x1160>
    215c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2160:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2164:	6c735f65 	ldclvs	15, cr5, [r3], #-404	; 0xfffffe6c
    2168:	00656369 	rsbeq	r6, r5, r9, ror #6
    216c:	6f697270 	svcvs	0x00697270
    2170:	79746972 	ldmdbvc	r4!, {r1, r4, r5, r6, r8, fp, sp, lr}^
    2174:	70616d5f 	rsbvc	r6, r1, pc, asr sp
    2178:	2f2e2e00 	svccs	0x002e2e00
    217c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2180:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2184:	6f747262 	svcvs	0x00747262
    2188:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    218c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2190:	6f632f78 	svcvs	0x00632f78
    2194:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    2198:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    219c:	5f78742f 	svcpl	0x0078742f
    21a0:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    21a4:	745f6461 	ldrbvc	r6, [pc], #-1121	; 21ac <_Min_Stack_Size+0x11ac>
    21a8:	5f656d69 	svcpl	0x00656d69
    21ac:	63696c73 	cmnvs	r9, #29440	; 0x7300
    21b0:	00632e65 	rsbeq	r2, r3, r5, ror #28
    21b4:	5f78745f 	svcpl	0x0078745f
    21b8:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    21bc:	78655f72 	stmdavc	r5!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    21c0:	65726970 	ldrbvs	r6, [r2, #-2416]!	; 0xfffff690
    21c4:	69745f64 	ldmdbvs	r4!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    21c8:	735f656d 	cmpvc	pc, #457179136	; 0x1b400000
    21cc:	6563696c 	strbvs	r6, [r3, #-2412]!	; 0xfffff694
    21d0:	78656e00 	stmdavc	r5!, {r9, sl, fp, sp, lr}^
    21d4:	68745f74 	ldmdavs	r4!, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    21d8:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    21dc:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    21e0:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    21e4:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    21e8:	5f646165 	svcpl	0x00646165
    21ec:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    21f0:	696c735f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r8, r9, ip, sp, lr}^
    21f4:	5f006563 	svcpl	0x00006563
    21f8:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2200 <_Min_Stack_Size+0x1200>
    21fc:	61657268 	cmnvs	r5, r8, ror #4
    2200:	69745f64 	ldmdbvs	r4!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    2204:	756f656d 	strbvc	r6, [pc, #-1389]!	; 1c9f <_Min_Stack_Size+0xc9f>
    2208:	69740074 	ldmdbvs	r4!, {r2, r4, r5, r6}^
    220c:	756f656d 	strbvc	r6, [pc, #-1389]!	; 1ca7 <_Min_Stack_Size+0xca7>
    2210:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
    2214:	00747570 	rsbseq	r7, r4, r0, ror r5
    2218:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    221c:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2220:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    2224:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2228:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    222c:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    2230:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 217c <_Min_Stack_Size+0x117c>
    2234:	2f6e6f6d 	svccs	0x006e6f6d
    2238:	2f637273 	svccs	0x00637273
    223c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2244 <_Min_Stack_Size+0x1244>
    2240:	61657268 	cmnvs	r5, r8, ror #4
    2244:	69745f64 	ldmdbvs	r4!, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    2248:	756f656d 	strbvc	r6, [pc, #-1389]!	; 1ce3 <_Min_Stack_Size+0xce3>
    224c:	00632e74 	rsbeq	r2, r3, r4, ror lr
    2250:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2254:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2258:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    225c:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    2260:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    2264:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    2268:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 21b4 <_Min_Stack_Size+0x11b4>
    226c:	2f6e6f6d 	svccs	0x006e6f6d
    2270:	2f637273 	svccs	0x00637273
    2274:	745f7874 	ldrbvc	r7, [pc], #-2164	; 227c <_Min_Stack_Size+0x127c>
    2278:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    227c:	7078655f 	rsbsvc	r6, r8, pc, asr r5
    2280:	74617269 	strbtvc	r7, [r1], #-617	; 0xfffffd97
    2284:	5f6e6f69 	svcpl	0x006e6f69
    2288:	636f7270 	cmnvs	pc, #112, 4
    228c:	2e737365 	cdpcs	3, 7, cr7, cr3, cr5, {3}
    2290:	745f0063 	ldrbvc	r0, [pc], #-99	; 2298 <_Min_Stack_Size+0x1298>
    2294:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2298:	5f72656d 	svcpl	0x0072656d
    229c:	69707865 	ldmdbvs	r0!, {r0, r2, r5, r6, fp, ip, sp, lr}^
    22a0:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    22a4:	705f6e6f 	subsvc	r6, pc, pc, ror #28
    22a8:	65636f72 	strbvs	r6, [r3, #-3954]!	; 0xfffff08e
    22ac:	5f007373 	svcpl	0x00007373
    22b0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 22b8 <_Min_Stack_Size+0x12b8>
    22b4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    22b8:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    22bc:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    22c0:	756f635f 	strbvc	r6, [pc, #-863]!	; 1f69 <_Min_Stack_Size+0xf69>
    22c4:	5f00746e 	svcpl	0x0000746e
    22c8:	745f7874 	ldrbvc	r7, [pc], #-2164	; 22d0 <_Min_Stack_Size+0x12d0>
    22cc:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    22d0:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
    22d4:	6e655f74 	mcrvs	15, 3, r5, cr5, cr4, {3}
    22d8:	78740064 	ldmdavc	r4!, {r2, r5, r6}^
    22dc:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    22e0:	695f7265 	ldmdbvs	pc, {r0, r2, r5, r6, r9, ip, sp, lr}^	; <UNPREDICTABLE>
    22e4:	745f0064 	ldrbvc	r0, [pc], #-100	; 22ec <_Min_Stack_Size+0x12ec>
    22e8:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    22ec:	5f72656d 	svcpl	0x0072656d
    22f0:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
    22f4:	6174735f 	cmnvs	r4, pc, asr r3
    22f8:	5f007472 	svcpl	0x00007472
    22fc:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2304 <_Min_Stack_Size+0x1304>
    2300:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2304:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    2308:	5f6d6574 	svcpl	0x006d6574
    230c:	636f6c63 	cmnvs	pc, #25344	; 0x6300
    2310:	745f006b 	ldrbvc	r0, [pc], #-107	; 2318 <_Min_Stack_Size+0x1318>
    2314:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2318:	5f72656d 	svcpl	0x0072656d
    231c:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2320:	735f6461 	cmpvc	pc, #1627389952	; 0x61000000
    2324:	6b636174 	blvs	18da8fc <__RAM_SIZE+0x17da8fc>
    2328:	6572615f 	ldrbvs	r6, [r2, #-351]!	; 0xfffffea1
    232c:	745f0061 	ldrbvc	r0, [pc], #-97	; 2334 <_Min_Stack_Size+0x1334>
    2330:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2334:	5f72656d 	svcpl	0x0072656d
    2338:	66726570 			; <UNDEFINED> instruction: 0x66726570
    233c:	616d726f 	cmnvs	sp, pc, ror #4
    2340:	5f65636e 	svcpl	0x0065636e
    2344:	7078655f 	rsbsvc	r6, r8, pc, asr r5
    2348:	74617269 	strbtvc	r7, [r1], #-617	; 0xfffffd97
    234c:	5f6e6f69 	svcpl	0x006e6f69
    2350:	756a6461 	strbvc	r6, [sl, #-1121]!	; 0xfffffb9f
    2354:	635f7473 	cmpvs	pc, #1929379840	; 0x73000000
    2358:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    235c:	5f585400 	svcpl	0x00585400
    2360:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
    2364:	745f0052 	ldrbvc	r0, [pc], #-82	; 236c <_Min_Stack_Size+0x136c>
    2368:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    236c:	5f72656d 	svcpl	0x0072656d
    2370:	66726570 			; <UNDEFINED> instruction: 0x66726570
    2374:	616d726f 	cmnvs	sp, pc, ror #4
    2378:	5f65636e 	svcpl	0x0065636e
    237c:	63616572 	cmnvs	r1, #478150656	; 0x1c800000
    2380:	61766974 	cmnvs	r6, r4, ror r9
    2384:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
    2388:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    238c:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    2390:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2394:	705f7265 	subsvc	r7, pc, r5, ror #4
    2398:	6f667265 	svcvs	0x00667265
    239c:	6e616d72 	mcrvs	13, 3, r6, cr1, cr2, {3}
    23a0:	615f6563 	cmpvs	pc, r3, ror #10
    23a4:	76697463 	strbtvc	r7, [r9], -r3, ror #8
    23a8:	5f657461 	svcpl	0x00657461
    23ac:	6e756f63 	cdpvs	15, 7, cr6, cr5, cr3, {3}
    23b0:	745f0074 	ldrbvc	r0, [pc], #-116	; 23b8 <_Min_Stack_Size+0x13b8>
    23b4:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    23b8:	5f72656d 	svcpl	0x0072656d
    23bc:	72727563 	rsbsvc	r7, r2, #415236096	; 0x18c00000
    23c0:	5f746e65 	svcpl	0x00746e65
    23c4:	00727470 	rsbseq	r7, r2, r0, ror r4
    23c8:	745f7874 	ldrbvc	r7, [pc], #-2164	; 23d0 <_Min_Stack_Size+0x13d0>
    23cc:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    23d0:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    23d4:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    23d8:	6572705f 	ldrbvs	r7, [r2, #-95]!	; 0xffffffa1
    23dc:	756f6976 	strbvc	r6, [pc, #-2422]!	; 1a6e <_Min_Stack_Size+0xa6e>
    23e0:	745f0073 	ldrbvc	r0, [pc], #-115	; 23e8 <_Min_Stack_Size+0x13e8>
    23e4:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    23e8:	5f72656d 	svcpl	0x0072656d
    23ec:	66726570 			; <UNDEFINED> instruction: 0x66726570
    23f0:	616d726f 	cmnvs	sp, pc, ror #4
    23f4:	5f65636e 	svcpl	0x0065636e
    23f8:	63616564 	cmnvs	r1, #100, 10	; 0x19000000
    23fc:	61766974 	cmnvs	r6, r4, ror r9
    2400:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
    2404:	746e756f 	strbtvc	r7, [lr], #-1391	; 0xfffffa91
    2408:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    240c:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2410:	705f7265 	subsvc	r7, pc, r5, ror #4
    2414:	726f6972 	rsbvc	r6, pc, #1867776	; 0x1c8000
    2418:	00797469 	rsbseq	r7, r9, r9, ror #8
    241c:	5f78745f 	svcpl	0x0078745f
    2420:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2424:	65705f72 	ldrbvs	r5, [r0, #-3954]!	; 0xfffff08e
    2428:	726f6672 	rsbvc	r6, pc, #119537664	; 0x7200000
    242c:	636e616d 	cmnvs	lr, #1073741851	; 0x4000001b
    2430:	78655f65 	stmdavc	r5!, {r0, r2, r5, r6, r8, r9, sl, fp, ip, lr}^
    2434:	61726970 	cmnvs	r2, r0, ror r9
    2438:	6e6f6974 			; <UNDEFINED> instruction: 0x6e6f6974
    243c:	756f635f 	strbvc	r6, [pc, #-863]!	; 20e5 <_Min_Stack_Size+0x10e5>
    2440:	5f00746e 	svcpl	0x0000746e
    2444:	745f7874 	ldrbvc	r7, [pc], #-2164	; 244c <_Min_Stack_Size+0x144c>
    2448:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    244c:	6174735f 	cmnvs	r4, pc, asr r3
    2450:	735f6b63 	cmpvc	pc, #101376	; 0x18c00
    2454:	00657a69 	rsbeq	r7, r5, r9, ror #20
    2458:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2460 <_Min_Stack_Size+0x1460>
    245c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2460:	6d616e5f 	stclvs	14, cr6, [r1, #-380]!	; 0xfffffe84
    2464:	78740065 	ldmdavc	r4!, {r0, r2, r5, r6}^
    2468:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    246c:	635f7265 	cmpvs	pc, #1342177286	; 0x50000006
    2470:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    2474:	6e5f6465 	cdpvs	4, 5, cr6, cr15, cr5, {3}
    2478:	00747865 	rsbseq	r7, r4, r5, ror #16
    247c:	5f78745f 	svcpl	0x0078745f
    2480:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2484:	696c5f72 	stmdbvs	ip!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2488:	74007473 	strvc	r7, [r0], #-1139	; 0xfffffb8d
    248c:	69745f78 	ldmdbvs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2490:	5f72656d 	svcpl	0x0072656d
    2494:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
    2498:	6c616e72 	stclvs	14, cr6, [r1], #-456	; 0xfffffe38
    249c:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    24a0:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    24a4:	655f7265 	ldrbvs	r7, [pc, #-613]	; 2247 <_Min_Stack_Size+0x1247>
    24a8:	72697078 	rsbvc	r7, r9, #120	; 0x78
    24ac:	5f006465 	svcpl	0x00006465
    24b0:	745f7874 	ldrbvc	r7, [pc], #-2164	; 24b8 <_Min_Stack_Size+0x14b8>
    24b4:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    24b8:	7078655f 	rsbsvc	r6, r8, pc, asr r5
    24bc:	64657269 	strbtvs	r7, [r5], #-617	; 0xfffffd97
    24c0:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    24c4:	705f7265 	subsvc	r7, pc, r5, ror #4
    24c8:	5f007274 	svcpl	0x00007274
    24cc:	745f7874 	ldrbvc	r7, [pc], #-2164	; 24d4 <_Min_Stack_Size+0x14d4>
    24d0:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    24d4:	6572635f 	ldrbvs	r6, [r2, #-863]!	; 0xfffffca1
    24d8:	64657461 	strbtvs	r7, [r5], #-1121	; 0xfffffb9f
    24dc:	7274705f 	rsbsvc	r7, r4, #95	; 0x5f
    24e0:	5f585400 	svcpl	0x00585400
    24e4:	454d4954 	strbmi	r4, [sp, #-2388]	; 0xfffff6ac
    24e8:	54535f52 	ldrbpl	r5, [r3], #-3922	; 0xfffff0ae
    24ec:	54435552 	strbpl	r5, [r3], #-1362	; 0xfffffaae
    24f0:	2f2e2e00 	svccs	0x002e2e00
    24f4:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    24f8:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    24fc:	6f747262 	svcvs	0x00747262
    2500:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2504:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2508:	6f632f78 	svcvs	0x00632f78
    250c:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    2510:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2514:	5f78742f 	svcpl	0x0078742f
    2518:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    251c:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
    2520:	61697469 	cmnvs	r9, r9, ror #8
    2524:	657a696c 	ldrbvs	r6, [sl, #-2412]!	; 0xfffff694
    2528:	5f00632e 	svcpl	0x0000632e
    252c:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2534 <_Min_Stack_Size+0x1534>
    2530:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2534:	6174735f 	cmnvs	r4, pc, asr r3
    2538:	735f6b63 	cmpvc	pc, #101376	; 0x18c00
    253c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
    2540:	2f2e2e00 	svccs	0x002e2e00
    2544:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2548:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    254c:	6f747262 	svcvs	0x00747262
    2550:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2554:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2558:	6f632f78 	svcvs	0x00632f78
    255c:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    2560:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2564:	5f78742f 	svcpl	0x0078742f
    2568:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    256c:	79735f72 	ldmdbvc	r3!, {r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2570:	6d657473 	cfstrdvs	mvd7, [r5, #-460]!	; 0xfffffe34
    2574:	7463615f 	strbtvc	r6, [r3], #-351	; 0xfffffea1
    2578:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
    257c:	00632e65 	rsbeq	r2, r3, r5, ror #28
    2580:	69707865 	ldmdbvs	r0!, {r0, r2, r5, r6, fp, ip, sp, lr}^
    2584:	69746172 	ldmdbvs	r4!, {r1, r4, r5, r6, r8, sp, lr}^
    2588:	745f6e6f 	ldrbvc	r6, [pc], #-3695	; 2590 <_Min_Stack_Size+0x1590>
    258c:	00656d69 	rsbeq	r6, r5, r9, ror #26
    2590:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
    2594:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2598:	64007265 	strvs	r7, [r0], #-613	; 0xfffffd9b
    259c:	61746c65 	cmnvs	r4, r5, ror #24
    25a0:	65727000 	ldrbvs	r7, [r2, #-0]!
    25a4:	756f6976 	strbvc	r6, [pc, #-2422]!	; 1c36 <_Min_Stack_Size+0xc36>
    25a8:	69745f73 	ldmdbvs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    25ac:	0072656d 	rsbseq	r6, r2, sp, ror #10
    25b0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    25b4:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    25b8:	62696c2f 	rsbvs	r6, r9, #12032	; 0x2f00
    25bc:	736f7472 	cmnvc	pc, #1912602624	; 0x72000000
    25c0:	7268742f 	rsbvc	r7, r8, #788529152	; 0x2f000000
    25c4:	78646165 	stmdavc	r4!, {r0, r2, r5, r6, r8, sp, lr}^
    25c8:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 2514 <_Min_Stack_Size+0x1514>
    25cc:	2f6e6f6d 	svccs	0x006e6f6d
    25d0:	2f637273 	svccs	0x00637273
    25d4:	745f7874 	ldrbvc	r7, [pc], #-2164	; 25dc <_Min_Stack_Size+0x15dc>
    25d8:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    25dc:	7379735f 	cmnvc	r9, #2080374785	; 0x7c000001
    25e0:	5f6d6574 	svcpl	0x006d6574
    25e4:	63616564 	cmnvs	r1, #100, 10	; 0x19000000
    25e8:	61766974 	cmnvs	r6, r4, ror r9
    25ec:	632e6574 			; <UNDEFINED> instruction: 0x632e6574
    25f0:	78745f00 	ldmdavc	r4!, {r8, r9, sl, fp, ip, lr}^
    25f4:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    25f8:	745f7265 	ldrbvc	r7, [pc], #-613	; 2600 <_Min_Stack_Size+0x1600>
    25fc:	61657268 	cmnvs	r5, r8, ror #4
    2600:	6e655f64 	cdpvs	15, 6, cr5, cr5, cr4, {3}
    2604:	00797274 	rsbseq	r7, r9, r4, ror r2
    2608:	6b726f77 	blvs	1c9e3ec <__RAM_SIZE+0x1b9e3ec>
    260c:	5f676e69 	svcpl	0x00676e69
    2610:	00727470 	rsbseq	r7, r2, r0, ror r4
    2614:	69707865 	ldmdbvs	r0!, {r0, r2, r5, r6, fp, ip, sp, lr}^
    2618:	5f646572 	svcpl	0x00646572
    261c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2620:	74007372 	strvc	r7, [r0], #-882	; 0xfffffc8e
    2624:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2628:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    262c:	5f646165 	svcpl	0x00646165
    2630:	75706e69 	ldrbvc	r6, [r0, #-3689]!	; 0xfffff197
    2634:	2e2e0074 	mcrcs	0, 1, r0, cr14, cr4, {3}
    2638:	2f2e2e2f 	svccs	0x002e2e2f
    263c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 258c <_Min_Stack_Size+0x158c>
    2640:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2644:	742f736f 	strtvc	r7, [pc], #-879	; 264c <_Min_Stack_Size+0x164c>
    2648:	61657268 	cmnvs	r5, r8, ror #4
    264c:	632f7864 			; <UNDEFINED> instruction: 0x632f7864
    2650:	6f6d6d6f 	svcvs	0x006d6d6f
    2654:	72732f6e 	rsbsvc	r2, r3, #440	; 0x1b8
    2658:	78742f63 	ldmdavc	r4!, {r0, r1, r5, r6, r8, r9, sl, fp, sp}^
    265c:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2660:	745f7265 	ldrbvc	r7, [pc], #-613	; 2668 <_Min_Stack_Size+0x1668>
    2664:	61657268 	cmnvs	r5, r8, ror #4
    2668:	6e655f64 	cdpvs	15, 6, cr5, cr5, cr4, {3}
    266c:	2e797274 	mrccs	2, 3, r7, cr9, cr4, {3}
    2670:	65720063 	ldrbvs	r0, [r2, #-99]!	; 0xffffff9d
    2674:	69746361 	ldmdbvs	r4!, {r0, r5, r6, r8, r9, sp, lr}^
    2678:	65746176 	ldrbvs	r6, [r4, #-374]!	; 0xfffffe8a
    267c:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2680:	63007265 	movwvs	r7, #613	; 0x265
    2684:	65727275 	ldrbvs	r7, [r2, #-629]!	; 0xfffffd8b
    2688:	745f746e 	ldrbvc	r7, [pc], #-1134	; 2690 <_Min_Stack_Size+0x1690>
    268c:	72656d69 	rsbvc	r6, r5, #6720	; 0x1a40
    2690:	2f2e2e00 	svccs	0x002e2e00
    2694:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2698:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    269c:	6f747262 	svcvs	0x00747262
    26a0:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    26a4:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    26a8:	6f632f78 	svcvs	0x00632f78
    26ac:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    26b0:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    26b4:	6578742f 	ldrbvs	r7, [r8, #-1071]!	; 0xfffffbd1
    26b8:	6f6c625f 	svcvs	0x006c625f
    26bc:	725f6b63 	subsvc	r6, pc, #101376	; 0x18c00
    26c0:	61656c65 	cmnvs	r5, r5, ror #24
    26c4:	632e6573 			; <UNDEFINED> instruction: 0x632e6573
    26c8:	2f2e2e00 	svccs	0x002e2e00
    26cc:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    26d0:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    26d4:	6f747262 	svcvs	0x00747262
    26d8:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    26dc:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    26e0:	6f632f78 	svcvs	0x00632f78
    26e4:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    26e8:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    26ec:	6578742f 	ldrbvs	r7, [r8, #-1071]!	; 0xfffffbd1
    26f0:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    26f4:	6c615f65 	stclvs	15, cr5, [r1], #-404	; 0xfffffe6c
    26f8:	61636f6c 	cmnvs	r3, ip, ror #30
    26fc:	632e6574 			; <UNDEFINED> instruction: 0x632e6574
    2700:	6f6f7000 	svcvs	0x006f7000
    2704:	6f635f6c 	svcvs	0x00635f6c
    2708:	6f72746e 	svcvs	0x0072746e
    270c:	6c625f6c 	stclvs	15, cr5, [r2], #-432	; 0xfffffe50
    2710:	5f6b636f 	svcpl	0x006b636f
    2714:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
    2718:	2f2e2e00 	svccs	0x002e2e00
    271c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2720:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2724:	6f747262 	svcvs	0x00747262
    2728:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    272c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2730:	6f632f78 	svcvs	0x00632f78
    2734:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    2738:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    273c:	6578742f 	ldrbvs	r7, [r8, #-1071]!	; 0xfffffbd1
    2740:	7479625f 	ldrbtvc	r6, [r9], #-607	; 0xfffffda1
    2744:	6f705f65 	svcvs	0x00705f65
    2748:	635f6c6f 	cmpvs	pc, #28416	; 0x6f00
    274c:	74616572 	strbtvc	r6, [r1], #-1394	; 0xfffffa8e
    2750:	00632e65 	rsbeq	r2, r3, r5, ror #28
    2754:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2758:	635f6461 	cmpvs	pc, #1627389952	; 0x61000000
    275c:	72746e6f 	rsbsvc	r6, r4, #1776	; 0x6f0
    2760:	625f6c6f 	subsvs	r6, pc, #28416	; 0x6f00
    2764:	6b636f6c 	blvs	18de51c <__RAM_SIZE+0x17de51c>
    2768:	7a69735f 	bvc	1a5f4ec <__RAM_SIZE+0x195f4ec>
    276c:	72620065 	rsbvc	r0, r2, #101	; 0x65
    2770:	5f6b6165 	svcpl	0x006b6165
    2774:	67616c66 	strbvs	r6, [r1, -r6, ror #24]!
    2778:	2f2e2e00 	svccs	0x002e2e00
    277c:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2780:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2784:	6f747262 	svcvs	0x00747262
    2788:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    278c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2790:	6f632f78 	svcvs	0x00632f78
    2794:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
    2798:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    279c:	6578742f 	ldrbvs	r7, [r8, #-1071]!	; 0xfffffbd1
    27a0:	7268745f 	rsbvc	r7, r8, #1593835520	; 0x5f000000
    27a4:	5f646165 	svcpl	0x00646165
    27a8:	61657263 	cmnvs	r5, r3, ror #4
    27ac:	632e6574 			; <UNDEFINED> instruction: 0x632e6574
    27b0:	73655f00 	cmnvc	r5, #0, 30
    27b4:	6b636174 	blvs	18dad8c <__RAM_SIZE+0x17dad8c>
    27b8:	65727000 	ldrbvs	r7, [r2, #-0]!
    27bc:	65685f76 	strbvs	r5, [r8, #-3958]!	; 0xfffff08a
    27c0:	655f7061 	ldrbvs	r7, [pc, #-97]	; 2767 <_Min_Stack_Size+0x1767>
    27c4:	6d00646e 	cfstrsvs	mvf6, [r0, #-440]	; 0xfffffe48
    27c8:	685f7861 	ldmdavs	pc, {r0, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    27cc:	00706165 	rsbseq	r6, r0, r5, ror #2
    27d0:	64727470 	ldrbtvs	r7, [r2], #-1136	; 0xfffffb90
    27d4:	5f666669 	svcpl	0x00666669
    27d8:	2f2e0074 	svccs	0x002e0074
    27dc:	6c707061 	ldclvs	0, cr7, [r0], #-388	; 0xfffffe7c
    27e0:	74616369 	strbtvc	r6, [r1], #-873	; 0xfffffc97
    27e4:	2f6e6f69 	svccs	0x006e6f69
    27e8:	6d737973 			; <UNDEFINED> instruction: 0x6d737973
    27ec:	632e6d65 			; <UNDEFINED> instruction: 0x632e6d65
    27f0:	694d5f00 	stmdbvs	sp, {r8, r9, sl, fp, ip, lr}^
    27f4:	74535f6e 	ldrbvc	r5, [r3], #-3950	; 0xfffff092
    27f8:	5f6b6361 	svcpl	0x006b6361
    27fc:	657a6953 	ldrbvs	r6, [sl, #-2387]!	; 0xfffff6ad
    2800:	636e6900 	cmnvs	lr, #0, 18
    2804:	5f5f0072 	svcpl	0x005f0072
    2808:	6b726273 	blvs	1c9b1dc <__RAM_SIZE+0x1b9b1dc>
    280c:	6165685f 	cmnvs	r5, pc, asr r8
    2810:	6e655f70 	mcrvs	15, 3, r5, cr5, cr0, {3}
    2814:	5f5f0064 	svcpl	0x005f0064
    2818:	6e727265 	cdpvs	2, 7, cr7, cr2, cr5, {3}
    281c:	735f006f 	cmpvc	pc, #111	; 0x6f
    2820:	006b7262 	rsbeq	r7, fp, r2, ror #4
    2824:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
    2828:	696c5f6b 	stmdbvs	ip!, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
    282c:	0074696d 	rsbseq	r6, r4, sp, ror #18
    2830:	725f7473 	subsvc	r7, pc, #1929379840	; 0x73000000
    2834:	00766564 	rsbseq	r6, r6, r4, ror #10
    2838:	636f6c63 	cmnvs	pc, #25344	; 0x6300
    283c:	00745f6b 	rsbseq	r5, r4, fp, ror #30
    2840:	69766e65 	ldmdbvs	r6!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
    2844:	006e6f72 	rsbeq	r6, lr, r2, ror pc
    2848:	65736c5f 	ldrbvs	r6, [r3, #-3167]!	; 0xfffff3a1
    284c:	74006b65 	strvc	r6, [r0], #-2917	; 0xfffff49b
    2850:	635f736d 	cmpvs	pc, #-1275068415	; 0xb4000001
    2854:	6d697475 	cfstrdvs	mvd7, [r9, #-468]!	; 0xfffffe2c
    2858:	655f0065 	ldrbvs	r0, [pc, #-101]	; 27fb <_Min_Stack_Size+0x17fb>
    285c:	76636578 			; <UNDEFINED> instruction: 0x76636578
    2860:	76740065 	ldrbtvc	r0, [r4], -r5, rrx
    2864:	6365735f 	cmnvs	r5, #2080374785	; 0x7c000001
    2868:	74735f00 	ldrbtvc	r5, [r3], #-3840	; 0xfffff100
    286c:	73007461 	movwvc	r7, #1121	; 0x461
    2870:	74635f74 	strbtvc	r5, [r3], #-3956	; 0xfffff08c
    2874:	5f006d69 	svcpl	0x00006d69
    2878:	766e655f 			; <UNDEFINED> instruction: 0x766e655f
    287c:	78655f00 	stmdavc	r5!, {r8, r9, sl, fp, ip, lr}^
    2880:	73007469 	movwvc	r7, #1129	; 0x469
    2884:	65645f74 	strbvs	r5, [r4, #-3956]!	; 0xfffff08c
    2888:	665f0076 			; <UNDEFINED> instruction: 0x665f0076
    288c:	74617473 	strbtvc	r7, [r1], #-1139	; 0xfffffb8d
    2890:	6c696600 	stclvs	6, cr6, [r9], #-0
    2894:	6b5f0065 	blvs	17c2a30 <__RAM_SIZE+0x16c2a30>
    2898:	006c6c69 	rsbeq	r6, ip, r9, ror #24
    289c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    28a0:	5f00745f 	svcpl	0x0000745f
    28a4:	746e695f 	strbtvc	r6, [lr], #-2399	; 0xfffff6a1
    28a8:	61656c5f 	cmnvs	r5, pc, asr ip
    28ac:	34367473 	ldrtcc	r7, [r6], #-1139	; 0xfffffb8d
    28b0:	7300745f 	movwvc	r7, #1119	; 0x45f
    28b4:	6c625f74 	stclvs	15, cr5, [r2], #-464	; 0xfffffe30
    28b8:	7a69736b 	bvc	1a5f66c <__RAM_SIZE+0x195f66c>
    28bc:	6e690065 	cdpvs	0, 6, cr0, cr9, cr5, {3}
    28c0:	61697469 	cmnvs	r9, r9, ror #8
    28c4:	6573696c 	ldrbvs	r6, [r3, #-2412]!	; 0xfffff694
    28c8:	6e6f6d5f 	mcrvs	13, 3, r6, cr15, cr15, {2}
    28cc:	726f7469 	rsbvc	r7, pc, #1761607680	; 0x69000000
    28d0:	6e61685f 	mcrvs	8, 3, r6, cr1, cr15, {2}
    28d4:	73656c64 	cmnvc	r5, #100, 24	; 0x6400
    28d8:	5f747300 	svcpl	0x00747300
    28dc:	00646967 	rsbeq	r6, r4, r7, ror #18
    28e0:	70612f2e 	rsbvc	r2, r1, lr, lsr #30
    28e4:	63696c70 	cmnvs	r9, #112, 24	; 0x7000
    28e8:	6f697461 	svcvs	0x00697461
    28ec:	79732f6e 	ldmdbvc	r3!, {r1, r2, r3, r5, r6, r8, r9, sl, fp, sp}^
    28f0:	6c616373 	stclvs	3, cr6, [r1], #-460	; 0xfffffe34
    28f4:	632e736c 			; <UNDEFINED> instruction: 0x632e736c
    28f8:	736d7400 	cmnvc	sp, #0, 8
    28fc:	7473635f 	ldrbtvc	r6, [r3], #-863	; 0xfffffca1
    2900:	00656d69 	rsbeq	r6, r5, r9, ror #26
    2904:	6d69745f 	cfstrdvs	mvd7, [r9, #-380]!	; 0xfffffe84
    2908:	5f007365 	svcpl	0x00007365
    290c:	696c6e5f 	stmdbvs	ip!, {r0, r1, r2, r3, r4, r6, r9, sl, fp, sp, lr}^
    2910:	745f6b6e 	ldrbvc	r6, [pc], #-2926	; 2918 <_Min_Stack_Size+0x1918>
    2914:	61775f00 	cmnvs	r7, r0, lsl #30
    2918:	73007469 	movwvc	r7, #1129	; 0x469
    291c:	6e695f74 	mcrvs	15, 3, r5, cr9, cr4, {3}
    2920:	5f5f006f 	svcpl	0x005f006f
    2924:	675f6f69 	ldrbvs	r6, [pc, -r9, ror #30]
    2928:	68637465 	stmdavs	r3!, {r0, r2, r5, r6, sl, ip, sp, lr}^
    292c:	74007261 	strvc	r7, [r0], #-609	; 0xfffffd9f
    2930:	736e5f76 	cmnvc	lr, #472	; 0x1d8
    2934:	73006365 	movwvc	r6, #869	; 0x365
    2938:	6c6e5f74 	stclvs	15, cr5, [lr], #-464	; 0xfffffe30
    293c:	006b6e69 	rsbeq	r6, fp, r9, ror #28
    2940:	65706f5f 	ldrbvs	r6, [r0, #-3935]!	; 0xfffff0a1
    2944:	7261006e 	rsbvc	r0, r1, #110	; 0x6e
    2948:	5f007667 	svcpl	0x00007667
    294c:	646f6d5f 	strbtvs	r6, [pc], #-3423	; 2954 <_Min_Stack_Size+0x1954>
    2950:	00745f65 	rsbseq	r5, r4, r5, ror #30
    2954:	6c625f5f 	stclvs	15, cr5, [r2], #-380	; 0xfffffe84
    2958:	7a69736b 	bvc	1a5f70c <__RAM_SIZE+0x195f70c>
    295c:	00745f65 	rsbseq	r5, r4, r5, ror #30
    2960:	615f7473 	cmpvs	pc, r3, ror r4	; <UNPREDICTABLE>
    2964:	006d6974 	rsbeq	r6, sp, r4, ror r9
    2968:	6e696c5f 	mcrvs	12, 3, r6, cr9, cr15, {2}
    296c:	635f006b 	cmpvs	pc, #107	; 0x6b
    2970:	65736f6c 	ldrbvs	r6, [r3, #-3948]!	; 0xfffff094
    2974:	5f747300 	svcpl	0x00747300
    2978:	636f6c62 	cmnvs	pc, #25088	; 0x6200
    297c:	5f00736b 	svcpl	0x0000736b
    2980:	74617369 	strbtvc	r7, [r1], #-873	; 0xfffffc97
    2984:	73007974 	movwvc	r7, #2420	; 0x974
    2988:	746d5f74 	strbtvc	r5, [sp], #-3956	; 0xfffff08c
    298c:	5f006d69 	svcpl	0x00006d69
    2990:	6f6e695f 	svcvs	0x006e695f
    2994:	7400745f 	strvc	r7, [r0], #-1119	; 0xfffffba1
    2998:	735f736d 	cmpvc	pc, #-1275068415	; 0xb4000001
    299c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    29a0:	5f747300 	svcpl	0x00747300
    29a4:	00646975 	rsbeq	r6, r4, r5, ror r9
    29a8:	735f7473 	cmpvc	pc, #1929379840	; 0x73000000
    29ac:	00657a69 	rsbeq	r7, r5, r9, ror #20
    29b0:	735f7473 	cmpvc	pc, #1929379840	; 0x73000000
    29b4:	65726170 	ldrbvs	r6, [r2, #-368]!	; 0xfffffe90
    29b8:	5f5f0034 	svcpl	0x005f0034
    29bc:	705f6f69 	subsvc	r6, pc, r9, ror #30
    29c0:	68637475 	stmdavs	r3!, {r0, r2, r4, r5, r6, sl, ip, sp, lr}^
    29c4:	44007261 	strmi	r7, [r0], #-609	; 0xfffffd9f
    29c8:	49617461 	stmdbmi	r1!, {r0, r5, r6, sl, ip, sp, lr}^
    29cc:	5f007864 	svcpl	0x00007864
    29d0:	6b726f66 	blvs	1c9e770 <__RAM_SIZE+0x1b9e770>
    29d4:	65675f00 	strbvs	r5, [r7, #-3840]!	; 0xfffff100
    29d8:	64697074 	strbtvs	r7, [r9], #-116	; 0xffffff8c
    29dc:	645f5f00 	ldrbvs	r5, [pc], #-3840	; 29e4 <_Min_Stack_Size+0x19e4>
    29e0:	745f7665 	ldrbvc	r7, [pc], #-1637	; 29e8 <_Min_Stack_Size+0x19e8>
    29e4:	6f5f5f00 	svcvs	0x005f5f00
    29e8:	745f6666 	ldrbvc	r6, [pc], #-1638	; 29f0 <_Min_Stack_Size+0x19f0>
    29ec:	74617000 	strbtvc	r7, [r1], #-0
    29f0:	69740068 	ldmdbvs	r4!, {r3, r5, r6}^
    29f4:	7073656d 	rsbsvc	r6, r3, sp, ror #10
    29f8:	5f006365 	svcpl	0x00006365
    29fc:	6469755f 	strbtvs	r7, [r9], #-1375	; 0xfffffaa1
    2a00:	7300745f 	movwvc	r7, #1119	; 0x45f
    2a04:	6f6d5f74 	svcvs	0x006d5f74
    2a08:	74006564 	strvc	r6, [r0], #-1380	; 0xfffffa9c
    2a0c:	755f736d 	ldrbvc	r7, [pc, #-877]	; 26a7 <_Min_Stack_Size+0x16a7>
    2a10:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2a14:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
    2a18:	6b6e696c 	blvs	1b9cfd0 <__RAM_SIZE+0x1a9cfd0>
    2a1c:	625f5f00 	subsvs	r5, pc, #0, 30
    2a20:	6e636b6c 	vnmulvs.f64	d22, d3, d28
    2a24:	00745f74 	rsbseq	r5, r4, r4, ror pc
    2a28:	69675f5f 	stmdbvs	r7!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, fp, ip, lr}^
    2a2c:	00745f64 	rsbseq	r5, r4, r4, ror #30
    2a30:	74732f2e 	ldrbtvc	r2, [r3], #-3886	; 0xfffff0d2
    2a34:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    2a38:	63672f70 	cmnvs	r7, #112, 30	; 0x1c0
    2a3c:	74732f63 	ldrbtvc	r2, [r3], #-3939	; 0xfffff09d
    2a40:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
    2a44:	52415f70 	subpl	r5, r1, #112, 30	; 0x1c0
    2a48:	334d434d 	movtcc	r4, #54093	; 0xd34d
    2a4c:	00732e33 	rsbseq	r2, r3, r3, lsr lr
    2a50:	20554e47 	subscs	r4, r5, r7, asr #28
    2a54:	32205341 	eorcc	r5, r0, #67108865	; 0x4000001
    2a58:	2e36332e 	cdpcs	3, 3, cr3, cr6, cr14, {1}
    2a5c:	2f2e0031 	svccs	0x002e0031
    2a60:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
    2a64:	2f707574 	svccs	0x00707574
    2a68:	2f636367 	svccs	0x00636367
    2a6c:	695f7874 	ldmdbvs	pc, {r2, r4, r5, r6, fp, ip, sp, lr}^	; <UNPREDICTABLE>
    2a70:	6974696e 	ldmdbvs	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
    2a74:	7a696c61 	bvc	1a5dc00 <__RAM_SIZE+0x195dc00>
    2a78:	6f6c5f65 	svcvs	0x006c5f65
    2a7c:	656c5f77 	strbvs	r5, [ip, #-3959]!	; 0xfffff089
    2a80:	2e6c6576 	mcrcs	5, 3, r6, cr12, cr6, {3}
    2a84:	2e2e0073 	mcrcs	0, 1, r0, cr14, cr3, {3}
    2a88:	2f2e2e2f 	svccs	0x002e2e2f
    2a8c:	6c2f2e2e 	stcvs	14, cr2, [pc], #-184	; 29dc <_Min_Stack_Size+0x19dc>
    2a90:	74726269 	ldrbtvc	r6, [r2], #-617	; 0xfffffd97
    2a94:	742f736f 	strtvc	r7, [pc], #-879	; 2a9c <_Min_Stack_Size+0x1a9c>
    2a98:	61657268 	cmnvs	r5, r8, ror #4
    2a9c:	702f7864 	eorvc	r7, pc, r4, ror #16
    2aa0:	7374726f 	cmnvc	r4, #-268435450	; 0xf0000006
    2aa4:	726f632f 	rsbvc	r6, pc, #-1140850688	; 0xbc000000
    2aa8:	5f786574 	svcpl	0x00786574
    2aac:	2f33336d 	svccs	0x0033336d
    2ab0:	2f756e67 	svccs	0x00756e67
    2ab4:	2f637273 	svccs	0x00637273
    2ab8:	745f7874 	ldrbvc	r7, [pc], #-2164	; 2ac0 <_Min_Stack_Size+0x1ac0>
    2abc:	61657268 	cmnvs	r5, r8, ror #4
    2ac0:	63735f64 	cmnvs	r3, #100, 30	; 0x190
    2ac4:	75646568 	strbvc	r6, [r4, #-1384]!	; 0xfffffa98
    2ac8:	532e656c 			; <UNDEFINED> instruction: 0x532e656c
    2acc:	2f2e2e00 	svccs	0x002e2e00
    2ad0:	2e2f2e2e 	cdpcs	14, 2, cr2, cr15, cr14, {1}
    2ad4:	696c2f2e 	stmdbvs	ip!, {r1, r2, r3, r5, r8, r9, sl, fp, sp}^
    2ad8:	6f747262 	svcvs	0x00747262
    2adc:	68742f73 	ldmdavs	r4!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
    2ae0:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2ae4:	6f702f78 	svcvs	0x00702f78
    2ae8:	2f737472 	svccs	0x00737472
    2aec:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
    2af0:	6d5f7865 	ldclvs	8, cr7, [pc, #-404]	; 2964 <_Min_Stack_Size+0x1964>
    2af4:	672f3333 			; <UNDEFINED> instruction: 0x672f3333
    2af8:	732f756e 			; <UNDEFINED> instruction: 0x732f756e
    2afc:	742f6372 	strtvc	r6, [pc], #-882	; 2b04 <_Min_Stack_Size+0x1b04>
    2b00:	68745f78 	ldmdavs	r4!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    2b04:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
    2b08:	6174735f 	cmnvs	r4, pc, asr r3
    2b0c:	625f6b63 	subsvs	r6, pc, #101376	; 0x18c00
    2b10:	646c6975 	strbtvs	r6, [ip], #-2421	; 0xfffff68b
    2b14:	2e00532e 	cdpcs	3, 0, cr5, cr0, cr14, {1}
    2b18:	2e2e2f2e 	cdpcs	15, 2, cr2, cr14, cr14, {1}
    2b1c:	2f2e2e2f 	svccs	0x002e2e2f
    2b20:	7262696c 	rsbvc	r6, r2, #108, 18	; 0x1b0000
    2b24:	2f736f74 	svccs	0x00736f74
    2b28:	65726874 	ldrbvs	r6, [r2, #-2164]!	; 0xfffff78c
    2b2c:	2f786461 	svccs	0x00786461
    2b30:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
    2b34:	6f632f73 	svcvs	0x00632f73
    2b38:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
    2b3c:	33336d5f 	teqcc	r3, #6080	; 0x17c0
    2b40:	756e672f 	strbvc	r6, [lr, #-1839]!	; 0xfffff8d1
    2b44:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
    2b48:	5f78742f 	svcpl	0x0078742f
    2b4c:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
    2b50:	6e695f72 	mcrvs	15, 3, r5, cr9, cr2, {3}
    2b54:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
    2b58:	2e747075 	mrccs	0, 3, r7, cr4, cr5, {3}
    2b5c:	Address 0x00002b5c is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
  SystemCoreClock = SYSTEM_CLOCK;
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
}
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	00000014 	andeq	r0, r0, r4, lsl r0
      14:	00000000 	andeq	r0, r0, r0
        if(ch == '\n' || it >= size) {
      18:	10000800 	andne	r0, r0, r0, lsl #16
}
      1c:	0000001c 	andeq	r0, r0, ip, lsl r0
      20:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
      24:	00018e02 	andeq	r8, r1, r2, lsl #28
      28:	00000014 	andeq	r0, r0, r4, lsl r0
	...
                thread_ptr -> tx_thread_performance_resume_count++;
      34:	00000010 	andeq	r0, r0, r0, lsl r0
        _tx_thread_system_ni_resume(thread_ptr);
      38:	83080e41 	movwhi	r0, #36417	; 0x8e41
      3c:	00018e02 	andeq	r8, r1, r2, lsl #28
}
      40:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      4c:	00000010 	andeq	r0, r0, r0, lsl r0
      50:	83080e41 	movwhi	r0, #36417	; 0x8e41
      54:	00018e02 	andeq	r8, r1, r2, lsl #28
      58:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      64:	00000014 	andeq	r0, r0, r4, lsl r0
      68:	83080e41 	movwhi	r0, #36417	; 0x8e41
      6c:	00018e02 	andeq	r8, r1, r2, lsl #28
      70:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      7c:	00000018 	andeq	r0, r0, r8, lsl r0
      80:	83080e41 	movwhi	r0, #36417	; 0x8e41
      84:	00018e02 	andeq	r8, r1, r2, lsl #28
      88:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      94:	00000018 	andeq	r0, r0, r8, lsl r0
      98:	83080e41 	movwhi	r0, #36417	; 0x8e41
      9c:	00018e02 	andeq	r8, r1, r2, lsl #28
      a0:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      ac:	00000018 	andeq	r0, r0, r8, lsl r0
      b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
      b4:	00018e02 	andeq	r8, r1, r2, lsl #28
      b8:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      c4:	00000018 	andeq	r0, r0, r8, lsl r0
      c8:	83080e41 	movwhi	r0, #36417	; 0x8e41
      cc:	00018e02 	andeq	r8, r1, r2, lsl #28
      d0:	00000014 	andeq	r0, r0, r4, lsl r0
	...
      dc:	00000018 	andeq	r0, r0, r8, lsl r0
      e0:	83080e41 	movwhi	r0, #36417	; 0x8e41
      e4:	00018e02 	andeq	r8, r1, r2, lsl #28
      e8:	0000001c 	andeq	r0, r0, ip, lsl r0
      ec:	00000000 	andeq	r0, r0, r0
      f0:	1000081c 	andne	r0, r0, ip, lsl r8
      f4:	00000074 	andeq	r0, r0, r4, ror r0
      f8:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
      fc:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     100:	380e4101 	stmdacc	lr, {r0, r8, lr}
     104:	000c0e6a 	andeq	r0, ip, sl, ror #28
     108:	00000014 	andeq	r0, r0, r4, lsl r0
     10c:	00000000 	andeq	r0, r0, r0
     110:	10000890 	mulne	r0, r0, r8
     114:	00000028 	andeq	r0, r0, r8, lsr #32
     118:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     11c:	00018e02 	andeq	r8, r1, r2, lsl #28
     120:	0000000c 	andeq	r0, r0, ip
     124:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     128:	7c020001 	stcvc	0, cr0, [r2], {1}
     12c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     130:	0000000c 	andeq	r0, r0, ip
     134:	00000120 	andeq	r0, r0, r0, lsr #2
     138:	00000000 	andeq	r0, r0, r0
     13c:	00000010 	andeq	r0, r0, r0, lsl r0
     140:	0000000c 	andeq	r0, r0, ip
     144:	00000120 	andeq	r0, r0, r0, lsr #2
     148:	100008b8 			; <UNDEFINED> instruction: 0x100008b8
     14c:	0000002c 	andeq	r0, r0, ip, lsr #32
     150:	0000000c 	andeq	r0, r0, ip
     154:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     158:	7c020001 	stcvc	0, cr0, [r2], {1}
     15c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     160:	0000000c 	andeq	r0, r0, ip
     164:	00000150 	andeq	r0, r0, r0, asr r1
     168:	00000000 	andeq	r0, r0, r0
     16c:	00000008 	andeq	r0, r0, r8
     170:	0000000c 	andeq	r0, r0, ip
     174:	00000150 	andeq	r0, r0, r0, asr r1
     178:	100008e4 	andne	r0, r0, r4, ror #17
     17c:	00000002 	andeq	r0, r0, r2
     180:	00000018 	andeq	r0, r0, r8, lsl r0
     184:	00000150 	andeq	r0, r0, r0, asr r1
     188:	00000000 	andeq	r0, r0, r0
     18c:	0000000e 	andeq	r0, r0, lr
     190:	83080e42 	movwhi	r0, #36418	; 0x8e42
     194:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
     198:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     19c:	0000000c 	andeq	r0, r0, ip
     1a0:	00000150 	andeq	r0, r0, r0, asr r1
     1a4:	100008e6 	andne	r0, r0, r6, ror #17
     1a8:	00000024 	andeq	r0, r0, r4, lsr #32
     1ac:	0000002c 	andeq	r0, r0, ip, lsr #32
     1b0:	00000150 	andeq	r0, r0, r0, asr r1
     1b4:	1000090a 	andne	r0, r0, sl, lsl #18
     1b8:	0000007e 	andeq	r0, r0, lr, ror r0
     1bc:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     1c0:	86088509 	strhi	r8, [r8], -r9, lsl #10
     1c4:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     1c8:	8a048905 	bhi	1225e4 <__RAM_SIZE+0x225e4>
     1cc:	8e028b03 	vmlahi.f64	d8, d2, d3
     1d0:	300e4101 	andcc	r4, lr, r1, lsl #2
     1d4:	240e0a6f 	strcs	r0, [lr], #-2671	; 0xfffff591
     1d8:	00000b42 	andeq	r0, r0, r2, asr #22
     1dc:	00000028 	andeq	r0, r0, r8, lsr #32
     1e0:	00000150 	andeq	r0, r0, r0, asr r1
     1e4:	10000988 	andne	r0, r0, r8, lsl #19
     1e8:	00000138 	andeq	r0, r0, r8, lsr r1
     1ec:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     1f0:	86068507 	strhi	r8, [r6], -r7, lsl #10
     1f4:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     1f8:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
     1fc:	300e4101 	andcc	r4, lr, r1, lsl #2
     200:	0e0a5b02 	vmlaeq.f64	d5, d10, d2
     204:	000b421c 	andeq	r4, fp, ip, lsl r2
     208:	00000020 	andeq	r0, r0, r0, lsr #32
     20c:	00000150 	andeq	r0, r0, r0, asr r1
     210:	10000ac0 	andne	r0, r0, r0, asr #21
     214:	00000094 	muleq	r0, r4, r0
     218:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     21c:	86048505 	strhi	r8, [r4], -r5, lsl #10
     220:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     224:	580e4101 	stmdapl	lr, {r0, r8, lr}
     228:	140e4702 	strne	r4, [lr], #-1794	; 0xfffff8fe
     22c:	00000028 	andeq	r0, r0, r8, lsr #32
     230:	00000150 	andeq	r0, r0, r0, asr r1
     234:	10000b54 	andne	r0, r0, r4, asr fp
     238:	000000c6 	andeq	r0, r0, r6, asr #1
     23c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     240:	86088509 	strhi	r8, [r8], -r9, lsl #10
     244:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     248:	8a048905 	bhi	122664 <__RAM_SIZE+0x22664>
     24c:	8e028b03 	vmlahi.f64	d8, d2, d3
     250:	780e4101 	stmdavc	lr, {r0, r8, lr}
     254:	240e5e02 	strcs	r5, [lr], #-3586	; 0xfffff1fe
     258:	0000003c 	andeq	r0, r0, ip, lsr r0
     25c:	00000150 	andeq	r0, r0, r0, asr r1
     260:	10000c20 	andne	r0, r0, r0, lsr #24
     264:	000003ea 	andeq	r0, r0, sl, ror #7
     268:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     26c:	86088509 	strhi	r8, [r8], -r9, lsl #10
     270:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     274:	8a048905 	bhi	122690 <__RAM_SIZE+0x22690>
     278:	8e028b03 	vmlahi.f64	d8, d2, d3
     27c:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     280:	050b5005 	streq	r5, [fp, #-5]
     284:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     288:	01250370 			; <UNDEFINED> instruction: 0x01250370
     28c:	422c0e0a 	eormi	r0, ip, #10, 28	; 0xa0
     290:	51065006 	tstpl	r6, r6
     294:	0b42240e 	bleq	10892d4 <__RAM_SIZE+0xf892d4>
     298:	00000040 	andeq	r0, r0, r0, asr #32
     29c:	00000150 	andeq	r0, r0, r0, asr r1
     2a0:	10001010 	andne	r1, r0, r0, lsl r0
     2a4:	00000396 	muleq	r0, r6, r3
     2a8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     2ac:	86088509 	strhi	r8, [r8], -r9, lsl #10
     2b0:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     2b4:	8a048905 	bhi	1226d0 <__RAM_SIZE+0x226d0>
     2b8:	8e028b03 	vmlahi.f64	d8, d2, d3
     2bc:	2c0e4201 	sfmcs	f4, 4, [lr], {1}
     2c0:	050b5005 	streq	r5, [fp, #-5]
     2c4:	0e410a51 			; <UNDEFINED> instruction: 0x0e410a51
     2c8:	8d030180 	stfhis	f0, [r3, #-512]	; 0xfffffe00
     2cc:	2c0e0a01 			; <UNDEFINED> instruction: 0x2c0e0a01
     2d0:	06500642 	ldrbeq	r0, [r0], -r2, asr #12
     2d4:	42240e51 	eormi	r0, r4, #1296	; 0x510
     2d8:	0000000b 	andeq	r0, r0, fp
     2dc:	0000002c 	andeq	r0, r0, ip, lsr #32
     2e0:	00000150 	andeq	r0, r0, r0, asr r1
     2e4:	100013a8 	andne	r1, r0, r8, lsr #7
     2e8:	00000680 	andeq	r0, r0, r0, lsl #13
     2ec:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     2f0:	86088509 	strhi	r8, [r8], -r9, lsl #10
     2f4:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     2f8:	8a048905 	bhi	122714 <__RAM_SIZE+0x22714>
     2fc:	8e028b03 	vmlahi.f64	d8, d2, d3
     300:	600e4101 	andvs	r4, lr, r1, lsl #2
     304:	0e033803 	cdpeq	8, 0, cr3, cr3, cr3, {0}
     308:	00000024 	andeq	r0, r0, r4, lsr #32
     30c:	00000014 	andeq	r0, r0, r4, lsl r0
     310:	00000150 	andeq	r0, r0, r0, asr r1
     314:	10001a28 	andne	r1, r0, r8, lsr #20
     318:	0000000c 	andeq	r0, r0, ip
     31c:	83080e43 	movwhi	r0, #36419	; 0x8e43
     320:	00018e02 	andeq	r8, r1, r2, lsl #28
     324:	00000030 	andeq	r0, r0, r0, lsr r0
     328:	00000150 	andeq	r0, r0, r0, asr r1
     32c:	10001a34 	andne	r1, r0, r4, lsr sl
     330:	0000002c 	andeq	r0, r0, ip, lsr #32
     334:	80100e41 	andshi	r0, r0, r1, asr #28
     338:	82038104 	andhi	r8, r3, #4, 2
     33c:	41018302 	tstmi	r1, r2, lsl #6
     340:	058e140e 	streq	r1, [lr, #1038]	; 0x40e
     344:	4c280e41 	stcmi	14, cr0, [r8], #-260	; 0xfffffefc
     348:	ce42140e 	cdpgt	4, 4, cr1, cr2, cr14, {0}
     34c:	c341100e 	movtgt	r1, #4110	; 0x100e
     350:	0ec0c1c2 	acseqdm	f4, f2
     354:	00000000 	andeq	r0, r0, r0
     358:	0000002c 	andeq	r0, r0, ip, lsr #32
     35c:	00000150 	andeq	r0, r0, r0, asr r1
     360:	00000000 	andeq	r0, r0, r0
     364:	0000002c 	andeq	r0, r0, ip, lsr #32
     368:	810c0e41 	tsthi	ip, r1, asr #28
     36c:	83028203 	movwhi	r8, #8707	; 0x2203
     370:	100e4101 	andne	r4, lr, r1, lsl #2
     374:	0e41048e 	cdpeq	4, 4, cr0, cr1, cr14, {4}
     378:	100e4c20 	andne	r4, lr, r0, lsr #24
     37c:	0c0ece42 	stceq	14, cr12, [lr], {66}	; 0x42
     380:	c1c2c341 	bicgt	ip, r2, r1, asr #6
     384:	0000000e 	andeq	r0, r0, lr
     388:	0000002c 	andeq	r0, r0, ip, lsr #32
     38c:	00000150 	andeq	r0, r0, r0, asr r1
     390:	00000000 	andeq	r0, r0, r0
     394:	00000028 	andeq	r0, r0, r8, lsr #32
     398:	82080e41 	andhi	r0, r8, #1040	; 0x410
     39c:	41018302 	tstmi	r1, r2, lsl #6
     3a0:	0484100e 	streq	r1, [r4], #14
     3a4:	0e41038e 	cdpeq	3, 4, cr0, cr1, cr14, {4}
     3a8:	100e4b20 	andne	r4, lr, r0, lsr #22
     3ac:	0ec4ce42 	cdpeq	14, 12, cr12, cr4, cr2, {2}
     3b0:	c2c34108 	sbcgt	r4, r3, #8, 2
     3b4:	0000000e 	andeq	r0, r0, lr
     3b8:	00000018 	andeq	r0, r0, r8, lsl r0
     3bc:	00000150 	andeq	r0, r0, r0, asr r1
     3c0:	00000000 	andeq	r0, r0, r0
     3c4:	00000020 	andeq	r0, r0, r0, lsr #32
     3c8:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     3cc:	180e4101 	stmdane	lr, {r0, r8, lr}
     3d0:	00040e49 	andeq	r0, r4, r9, asr #28
     3d4:	00000018 	andeq	r0, r0, r8, lsl r0
     3d8:	00000150 	andeq	r0, r0, r0, asr r1
     3dc:	00000000 	andeq	r0, r0, r0
     3e0:	0000001c 	andeq	r0, r0, ip, lsl r0
     3e4:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     3e8:	100e4101 	andne	r4, lr, r1, lsl #2
     3ec:	00040e48 	andeq	r0, r4, r8, asr #28
     3f0:	00000028 	andeq	r0, r0, r8, lsr #32
     3f4:	00000150 	andeq	r0, r0, r0, asr r1
     3f8:	00000000 	andeq	r0, r0, r0
     3fc:	00000030 	andeq	r0, r0, r0, lsr r0
     400:	82080e41 	andhi	r0, r8, #1040	; 0x410
     404:	41018302 	tstmi	r1, r2, lsl #6
     408:	038e0c0e 	orreq	r0, lr, #3584	; 0xe00
     40c:	4e280e41 	cdpmi	14, 2, cr0, cr8, cr1, {2}
     410:	ce420c0e 	cdpgt	12, 4, cr0, cr2, cr14, {0}
     414:	c341080e 	movtgt	r0, #6158	; 0x180e
     418:	00000ec2 	andeq	r0, r0, r2, asr #29
     41c:	0000000c 	andeq	r0, r0, ip
     420:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     424:	7c020001 	stcvc	0, cr0, [r2], {1}
     428:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     42c:	0000000c 	andeq	r0, r0, ip
     430:	0000041c 	andeq	r0, r0, ip, lsl r4
     434:	10001a60 	andne	r1, r0, r0, ror #20
     438:	00000014 	andeq	r0, r0, r4, lsl r0
     43c:	0000000c 	andeq	r0, r0, ip
     440:	0000041c 	andeq	r0, r0, ip, lsl r4
     444:	00000000 	andeq	r0, r0, r0
     448:	00000014 	andeq	r0, r0, r4, lsl r0
     44c:	00000018 	andeq	r0, r0, r8, lsl r0
     450:	0000041c 	andeq	r0, r0, ip, lsl r4
     454:	10001a74 	andne	r1, r0, r4, ror sl
     458:	0000001e 	andeq	r0, r0, lr, lsl r0
     45c:	83100e41 	tsthi	r0, #1040	; 0x410
     460:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     464:	00018e02 	andeq	r8, r1, r2, lsl #28
     468:	0000000c 	andeq	r0, r0, ip
     46c:	0000041c 	andeq	r0, r0, ip, lsl r4
     470:	10001a94 	mulne	r0, r4, sl
     474:	00000024 	andeq	r0, r0, r4, lsr #32
     478:	00000014 	andeq	r0, r0, r4, lsl r0
     47c:	0000041c 	andeq	r0, r0, ip, lsl r4
     480:	00000000 	andeq	r0, r0, r0
     484:	00000008 	andeq	r0, r0, r8
     488:	83080e41 	movwhi	r0, #36417	; 0x8e41
     48c:	00018e02 	andeq	r8, r1, r2, lsl #28
     490:	00000018 	andeq	r0, r0, r8, lsl r0
     494:	0000041c 	andeq	r0, r0, ip, lsl r4
     498:	00000000 	andeq	r0, r0, r0
     49c:	00000020 	andeq	r0, r0, r0, lsr #32
     4a0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     4a4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     4a8:	00018e02 	andeq	r8, r1, r2, lsl #28
     4ac:	0000000c 	andeq	r0, r0, ip
     4b0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     4b4:	7c020001 	stcvc	0, cr0, [r2], {1}
     4b8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     4bc:	00000014 	andeq	r0, r0, r4, lsl r0
     4c0:	000004ac 	andeq	r0, r0, ip, lsr #9
     4c4:	10001ab8 			; <UNDEFINED> instruction: 0x10001ab8
     4c8:	00000056 	andeq	r0, r0, r6, asr r0
     4cc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     4d0:	00018e02 	andeq	r8, r1, r2, lsl #28
     4d4:	0000000c 	andeq	r0, r0, ip
     4d8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     4dc:	7c020001 	stcvc	0, cr0, [r2], {1}
     4e0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     4e4:	00000020 	andeq	r0, r0, r0, lsr #32
     4e8:	000004d4 	ldrdeq	r0, [r0], -r4
     4ec:	10001b10 	andne	r1, r0, r0, lsl fp
     4f0:	000000ac 	andeq	r0, r0, ip, lsr #1
     4f4:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     4f8:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     4fc:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     500:	89038804 	stmdbhi	r3, {r2, fp, pc}
     504:	00018e02 	andeq	r8, r1, r2, lsl #28
     508:	0000000c 	andeq	r0, r0, ip
     50c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     510:	7c020001 	stcvc	0, cr0, [r2], {1}
     514:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     518:	00000014 	andeq	r0, r0, r4, lsl r0
     51c:	00000508 	andeq	r0, r0, r8, lsl #10
     520:	10001bbc 			; <UNDEFINED> instruction: 0x10001bbc
     524:	00000038 	andeq	r0, r0, r8, lsr r0
     528:	83080e41 	movwhi	r0, #36417	; 0x8e41
     52c:	00018e02 	andeq	r8, r1, r2, lsl #28
     530:	0000000c 	andeq	r0, r0, ip
     534:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     538:	7c020001 	stcvc	0, cr0, [r2], {1}
     53c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     540:	0000001c 	andeq	r0, r0, ip, lsl r0
     544:	00000530 	andeq	r0, r0, r0, lsr r5
     548:	10001bf4 	strdne	r1, [r0], -r4
     54c:	00000088 	andeq	r0, r0, r8, lsl #1
     550:	83180e41 	tsthi	r8, #1040	; 0x410
     554:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     558:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     55c:	00018e02 	andeq	r8, r1, r2, lsl #28
     560:	0000000c 	andeq	r0, r0, ip
     564:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     568:	7c020001 	stcvc	0, cr0, [r2], {1}
     56c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     570:	0000001c 	andeq	r0, r0, ip, lsl r0
     574:	00000560 	andeq	r0, r0, r0, ror #10
     578:	10001c7c 	andne	r1, r0, ip, ror ip
     57c:	000000e8 	andeq	r0, r0, r8, ror #1
     580:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     584:	86048505 	strhi	r8, [r4], -r5, lsl #10
     588:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     58c:	00000001 	andeq	r0, r0, r1
     590:	0000000c 	andeq	r0, r0, ip
     594:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     598:	7c020001 	stcvc	0, cr0, [r2], {1}
     59c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5a0:	00000014 	andeq	r0, r0, r4, lsl r0
     5a4:	00000590 	muleq	r0, r0, r5
     5a8:	10001d64 	andne	r1, r0, r4, ror #26
     5ac:	0000000c 	andeq	r0, r0, ip
     5b0:	83080e41 	movwhi	r0, #36417	; 0x8e41
     5b4:	00018e02 	andeq	r8, r1, r2, lsl #28
     5b8:	0000000c 	andeq	r0, r0, ip
     5bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     5c0:	7c020001 	stcvc	0, cr0, [r2], {1}
     5c4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5c8:	00000014 	andeq	r0, r0, r4, lsl r0
     5cc:	000005b8 			; <UNDEFINED> instruction: 0x000005b8
     5d0:	10001d70 	andne	r1, r0, r0, ror sp
     5d4:	0000004c 	andeq	r0, r0, ip, asr #32
     5d8:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     5dc:	00018e02 	andeq	r8, r1, r2, lsl #28
     5e0:	0000000c 	andeq	r0, r0, ip
     5e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     5e8:	7c020001 	stcvc	0, cr0, [r2], {1}
     5ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     5f0:	00000024 	andeq	r0, r0, r4, lsr #32
     5f4:	000005e0 	andeq	r0, r0, r0, ror #11
     5f8:	10001dbc 			; <UNDEFINED> instruction: 0x10001dbc
     5fc:	00000148 	andeq	r0, r0, r8, asr #2
     600:	83280e42 			; <UNDEFINED> instruction: 0x83280e42
     604:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
     608:	87078608 	strhi	r8, [r7, -r8, lsl #12]
     60c:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
     610:	8b038a04 	blhi	e2e28 <SYSTICK_CYCLES+0xb9de9>
     614:	00018e02 	andeq	r8, r1, r2, lsl #28
     618:	0000000c 	andeq	r0, r0, ip
     61c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     620:	7c020001 	stcvc	0, cr0, [r2], {1}
     624:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     628:	0000000c 	andeq	r0, r0, ip
     62c:	00000618 	andeq	r0, r0, r8, lsl r6
     630:	10001f04 	andne	r1, r0, r4, lsl #30
     634:	00000020 	andeq	r0, r0, r0, lsr #32
     638:	0000000c 	andeq	r0, r0, ip
     63c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     640:	7c020001 	stcvc	0, cr0, [r2], {1}
     644:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     648:	00000018 	andeq	r0, r0, r8, lsl r0
     64c:	00000638 	andeq	r0, r0, r8, lsr r6
     650:	10001f24 	andne	r1, r0, r4, lsr #30
     654:	00000044 	andeq	r0, r0, r4, asr #32
     658:	83100e41 	tsthi	r0, #1040	; 0x410
     65c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     660:	00018e02 	andeq	r8, r1, r2, lsl #28
     664:	0000000c 	andeq	r0, r0, ip
     668:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     66c:	7c020001 	stcvc	0, cr0, [r2], {1}
     670:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     674:	00000018 	andeq	r0, r0, r8, lsl r0
     678:	00000664 	andeq	r0, r0, r4, ror #12
     67c:	10001f68 	andne	r1, r0, r8, ror #30
     680:	00000074 	andeq	r0, r0, r4, ror r0
     684:	83100e41 	tsthi	r0, #1040	; 0x410
     688:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     68c:	00018e02 	andeq	r8, r1, r2, lsl #28
     690:	0000000c 	andeq	r0, r0, ip
     694:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     698:	7c020001 	stcvc	0, cr0, [r2], {1}
     69c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     6a0:	00000020 	andeq	r0, r0, r0, lsr #32
     6a4:	00000690 	muleq	r0, r0, r6
     6a8:	10001fdc 	ldrdne	r1, [r0], -ip
     6ac:	0000008c 	andeq	r0, r0, ip, lsl #1
     6b0:	840c0e4f 	strhi	r0, [ip], #-3663	; 0xfffff1b1
     6b4:	86028503 	strhi	r8, [r2], -r3, lsl #10
     6b8:	c60a6401 	strgt	r6, [sl], -r1, lsl #8
     6bc:	000ec4c5 	andeq	ip, lr, r5, asr #9
     6c0:	00000b41 	andeq	r0, r0, r1, asr #22
     6c4:	0000000c 	andeq	r0, r0, ip
     6c8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     6cc:	7c020001 	stcvc	0, cr0, [r2], {1}
     6d0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     6d4:	00000014 	andeq	r0, r0, r4, lsl r0
     6d8:	000006c4 	andeq	r0, r0, r4, asr #13
     6dc:	10002068 	andne	r2, r0, r8, rrx
     6e0:	0000001c 	andeq	r0, r0, ip, lsl r0
     6e4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6e8:	00018e02 	andeq	r8, r1, r2, lsl #28
     6ec:	0000000c 	andeq	r0, r0, ip
     6f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     6f4:	7c020001 	stcvc	0, cr0, [r2], {1}
     6f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     6fc:	0000001c 	andeq	r0, r0, ip, lsl r0
     700:	000006ec 	andeq	r0, r0, ip, ror #13
     704:	10002084 	andne	r2, r0, r4, lsl #1
     708:	000000d8 	ldrdeq	r0, [r0], -r8
     70c:	84080e45 	strhi	r0, [r8], #-3653	; 0xfffff1bb
     710:	02018e02 	andeq	r8, r1, #2, 28
     714:	c4000e5a 	strgt	r0, [r0], #-3674	; 0xfffff1a6
     718:	000000ce 	andeq	r0, r0, lr, asr #1
     71c:	0000000c 	andeq	r0, r0, ip
     720:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     724:	7c020001 	stcvc	0, cr0, [r2], {1}
     728:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     72c:	00000014 	andeq	r0, r0, r4, lsl r0
     730:	0000071c 	andeq	r0, r0, ip, lsl r7
     734:	1000215c 	andne	r2, r0, ip, asr r1
     738:	00000328 	andeq	r0, r0, r8, lsr #6
     73c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     740:	00018e02 	andeq	r8, r1, r2, lsl #28
     744:	00000014 	andeq	r0, r0, r4, lsl r0
     748:	0000071c 	andeq	r0, r0, ip, lsl r7
     74c:	00000000 	andeq	r0, r0, r0
     750:	0000004c 	andeq	r0, r0, ip, asr #32
     754:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     758:	00018e02 	andeq	r8, r1, r2, lsl #28
     75c:	0000000c 	andeq	r0, r0, ip
     760:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     764:	7c020001 	stcvc	0, cr0, [r2], {1}
     768:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     76c:	00000018 	andeq	r0, r0, r8, lsl r0
     770:	0000075c 	andeq	r0, r0, ip, asr r7
     774:	10002484 	andne	r2, r0, r4, lsl #9
     778:	000002c0 	andeq	r0, r0, r0, asr #5
     77c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     780:	86038504 	strhi	r8, [r3], -r4, lsl #10
     784:	00018e02 	andeq	r8, r1, r2, lsl #28
     788:	00000014 	andeq	r0, r0, r4, lsl r0
     78c:	0000075c 	andeq	r0, r0, ip, asr r7
     790:	00000000 	andeq	r0, r0, r0
     794:	00000030 	andeq	r0, r0, r0, lsr r0
     798:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     79c:	00018e02 	andeq	r8, r1, r2, lsl #28
     7a0:	0000000c 	andeq	r0, r0, ip
     7a4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     7a8:	7c020001 	stcvc	0, cr0, [r2], {1}
     7ac:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     7b0:	00000018 	andeq	r0, r0, r8, lsl r0
     7b4:	000007a0 	andeq	r0, r0, r0, lsr #15
     7b8:	10002744 	andne	r2, r0, r4, asr #14
     7bc:	0000017c 	andeq	r0, r0, ip, ror r1
     7c0:	83100e41 	tsthi	r0, #1040	; 0x410
     7c4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     7c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     7cc:	0000000c 	andeq	r0, r0, ip
     7d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     7d4:	7c020001 	stcvc	0, cr0, [r2], {1}
     7d8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     7dc:	00000014 	andeq	r0, r0, r4, lsl r0
     7e0:	000007cc 	andeq	r0, r0, ip, asr #15
     7e4:	100028c0 	andne	r2, r0, r0, asr #17
     7e8:	0000003c 	andeq	r0, r0, ip, lsr r0
     7ec:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     7f0:	00018e02 	andeq	r8, r1, r2, lsl #28
     7f4:	0000000c 	andeq	r0, r0, ip
     7f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     7fc:	7c020001 	stcvc	0, cr0, [r2], {1}
     800:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     804:	00000014 	andeq	r0, r0, r4, lsl r0
     808:	000007f4 	strdeq	r0, [r0], -r4
     80c:	100028fc 	strdne	r2, [r0], -ip
     810:	00000018 	andeq	r0, r0, r8, lsl r0
     814:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     818:	00018e02 	andeq	r8, r1, r2, lsl #28
     81c:	0000000c 	andeq	r0, r0, ip
     820:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     824:	7c020001 	stcvc	0, cr0, [r2], {1}
     828:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     82c:	00000018 	andeq	r0, r0, r8, lsl r0
     830:	0000081c 	andeq	r0, r0, ip, lsl r8
     834:	10002914 	andne	r2, r0, r4, lsl r9
     838:	00000090 	muleq	r0, r0, r0
     83c:	8e040e41 	cdphi	14, 0, cr0, cr4, cr1, {2}
     840:	200e4101 	andcs	r4, lr, r1, lsl #2
     844:	00040e6b 	andeq	r0, r4, fp, ror #28
     848:	0000000c 	andeq	r0, r0, ip
     84c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     850:	7c020001 	stcvc	0, cr0, [r2], {1}
     854:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     858:	0000000c 	andeq	r0, r0, ip
     85c:	00000848 	andeq	r0, r0, r8, asr #16
     860:	100029a4 	andne	r2, r0, r4, lsr #19
     864:	00000058 	andeq	r0, r0, r8, asr r0
     868:	0000000c 	andeq	r0, r0, ip
     86c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     870:	7c020001 	stcvc	0, cr0, [r2], {1}
     874:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     878:	0000000c 	andeq	r0, r0, ip
     87c:	00000868 	andeq	r0, r0, r8, ror #16
     880:	100029fc 	strdne	r2, [r0], -ip
     884:	0000002e 	andeq	r0, r0, lr, lsr #32
     888:	0000000c 	andeq	r0, r0, ip
     88c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     890:	7c020001 	stcvc	0, cr0, [r2], {1}
     894:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     898:	0000001c 	andeq	r0, r0, ip, lsl r0
     89c:	00000888 	andeq	r0, r0, r8, lsl #17
     8a0:	10002a2c 	andne	r2, r0, ip, lsr #20
     8a4:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
     8a8:	84140e45 	ldrhi	r0, [r4], #-3653	; 0xfffff1bb
     8ac:	86048505 	strhi	r8, [r4], -r5, lsl #10
     8b0:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     8b4:	200e4101 	andcs	r4, lr, r1, lsl #2
     8b8:	0000000c 	andeq	r0, r0, ip
     8bc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     8c0:	7c020001 	stcvc	0, cr0, [r2], {1}
     8c4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     8c8:	00000020 	andeq	r0, r0, r0, lsr #32
     8cc:	000008b8 			; <UNDEFINED> instruction: 0x000008b8
     8d0:	10002be8 	andne	r2, r0, r8, ror #23
     8d4:	00000028 	andeq	r0, r0, r8, lsr #32
     8d8:	83080e42 	movwhi	r0, #36418	; 0x8e42
     8dc:	4c018e02 	stcmi	14, cr8, [r1], {2}
     8e0:	cec3000e 	cdpgt	0, 12, cr0, cr3, cr14, {0}
     8e4:	83080e42 	movwhi	r0, #36418	; 0x8e42
     8e8:	00018e02 	andeq	r8, r1, r2, lsl #28
     8ec:	0000000c 	andeq	r0, r0, ip
     8f0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     8f4:	7c020001 	stcvc	0, cr0, [r2], {1}
     8f8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     8fc:	00000014 	andeq	r0, r0, r4, lsl r0
     900:	000008ec 	andeq	r0, r0, ip, ror #17
     904:	10002c10 	andne	r2, r0, r0, lsl ip
     908:	00000094 	muleq	r0, r4, r0
     90c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     910:	00018e02 	andeq	r8, r1, r2, lsl #28
     914:	0000000c 	andeq	r0, r0, ip
     918:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     91c:	7c020001 	stcvc	0, cr0, [r2], {1}
     920:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     924:	00000040 	andeq	r0, r0, r0, asr #32
     928:	00000914 	andeq	r0, r0, r4, lsl r9
     92c:	10002ca4 	andne	r2, r0, r4, lsr #25
     930:	000000d4 	ldrdeq	r0, [r0], -r4
     934:	83200e44 			; <UNDEFINED> instruction: 0x83200e44
     938:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     93c:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     940:	89038804 	stmdbhi	r3, {r2, fp, pc}
     944:	02018e02 	andeq	r8, r1, #2, 28
     948:	c3000e4f 	movwgt	r0, #3663	; 0xe4f
     94c:	c7c6c5c4 	strbgt	ip, [r6, r4, asr #11]
     950:	42cec9c8 	sbcmi	ip, lr, #200, 18	; 0x320000
     954:	0883200e 	stmeq	r3, {r1, r2, r3, sp}
     958:	06850784 	streq	r0, [r5], r4, lsl #15
     95c:	04870586 	streq	r0, [r7], #1414	; 0x586
     960:	02890388 	addeq	r0, r9, #136, 6	; 0x20000002
     964:	0000018e 	andeq	r0, r0, lr, lsl #3
     968:	0000000c 	andeq	r0, r0, ip
     96c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     970:	7c020001 	stcvc	0, cr0, [r2], {1}
     974:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     978:	00000028 	andeq	r0, r0, r8, lsr #32
     97c:	00000968 	andeq	r0, r0, r8, ror #18
     980:	10002d78 	andne	r2, r0, r8, ror sp
     984:	00000148 	andeq	r0, r0, r8, asr #2
     988:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     98c:	86078508 	strhi	r8, [r7], -r8, lsl #10
     990:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     994:	8a038904 	bhi	e2dac <SYSTICK_CYCLES+0xb9d6d>
     998:	41018e02 	tstmi	r1, r2, lsl #28
     99c:	0a4c380e 	beq	130e9dc <__RAM_SIZE+0x120e9dc>
     9a0:	0b42200e 	bleq	10889e0 <__RAM_SIZE+0xf889e0>
     9a4:	0000000c 	andeq	r0, r0, ip
     9a8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     9ac:	7c020001 	stcvc	0, cr0, [r2], {1}
     9b0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     9b4:	00000014 	andeq	r0, r0, r4, lsl r0
     9b8:	000009a4 	andeq	r0, r0, r4, lsr #19
     9bc:	10002ec0 	andne	r2, r0, r0, asr #29
     9c0:	00000048 	andeq	r0, r0, r8, asr #32
     9c4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     9c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     9cc:	0000000c 	andeq	r0, r0, ip
     9d0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     9d4:	7c020001 	stcvc	0, cr0, [r2], {1}
     9d8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     9dc:	0000000c 	andeq	r0, r0, ip
     9e0:	000009cc 	andeq	r0, r0, ip, asr #19
     9e4:	00000000 	andeq	r0, r0, r0
     9e8:	00000002 	andeq	r0, r0, r2
     9ec:	0000000c 	andeq	r0, r0, ip
     9f0:	000009cc 	andeq	r0, r0, ip, asr #19
     9f4:	10002f08 	andne	r2, r0, r8, lsl #30
     9f8:	00000004 	andeq	r0, r0, r4
     9fc:	00000014 	andeq	r0, r0, r4, lsl r0
     a00:	000009cc 	andeq	r0, r0, ip, asr #19
     a04:	10002f0c 	andne	r2, r0, ip, lsl #30
     a08:	00000010 	andeq	r0, r0, r0, lsl r0
     a0c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a10:	00018e02 	andeq	r8, r1, r2, lsl #28
     a14:	00000014 	andeq	r0, r0, r4, lsl r0
     a18:	000009cc 	andeq	r0, r0, ip, asr #19
     a1c:	10002f1c 	andne	r2, r0, ip, lsl pc
     a20:	0000000c 	andeq	r0, r0, ip
     a24:	83080e41 	movwhi	r0, #36417	; 0x8e41
     a28:	00018e02 	andeq	r8, r1, r2, lsl #28
     a2c:	00000018 	andeq	r0, r0, r8, lsl r0
     a30:	000009cc 	andeq	r0, r0, ip, asr #19
     a34:	10002f28 	andne	r2, r0, r8, lsr #30
     a38:	00000020 	andeq	r0, r0, r0, lsr #32
     a3c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     a40:	86038504 	strhi	r8, [r3], -r4, lsl #10
     a44:	00018e02 	andeq	r8, r1, r2, lsl #28
     a48:	00000018 	andeq	r0, r0, r8, lsl r0
     a4c:	000009cc 	andeq	r0, r0, ip, asr #19
     a50:	10002f48 	andne	r2, r0, r8, asr #30
     a54:	0000001c 	andeq	r0, r0, ip, lsl r0
     a58:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     a5c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     a60:	00018e02 	andeq	r8, r1, r2, lsl #28
     a64:	0000000c 	andeq	r0, r0, ip
     a68:	000009cc 	andeq	r0, r0, ip, asr #19
     a6c:	10002f64 	andne	r2, r0, r4, ror #30
     a70:	00000006 	andeq	r0, r0, r6
     a74:	0000000c 	andeq	r0, r0, ip
     a78:	000009cc 	andeq	r0, r0, ip, asr #19
     a7c:	10002f6a 	andne	r2, r0, sl, ror #30
     a80:	0000000a 	andeq	r0, r0, sl
     a84:	0000000c 	andeq	r0, r0, ip
     a88:	000009cc 	andeq	r0, r0, ip, asr #19
     a8c:	10002f74 	andne	r2, r0, r4, ror pc
     a90:	00000004 	andeq	r0, r0, r4
     a94:	0000000c 	andeq	r0, r0, ip
     a98:	000009cc 	andeq	r0, r0, ip, asr #19
     a9c:	10002f78 	andne	r2, r0, r8, ror pc
     aa0:	00000004 	andeq	r0, r0, r4
     aa4:	0000001c 	andeq	r0, r0, ip, lsl r0
     aa8:	000009cc 	andeq	r0, r0, ip, asr #19
     aac:	00000000 	andeq	r0, r0, r0
     ab0:	0000000a 	andeq	r0, r0, sl
     ab4:	810c0e41 	tsthi	ip, r1, asr #28
     ab8:	83028203 	movwhi	r8, #8707	; 0x2203
     abc:	c2c34301 	sbcgt	r4, r3, #67108864	; 0x4000000
     ac0:	00000ec1 	andeq	r0, r0, r1, asr #29
     ac4:	00000014 	andeq	r0, r0, r4, lsl r0
     ac8:	000009cc 	andeq	r0, r0, ip, asr #19
     acc:	00000000 	andeq	r0, r0, r0
     ad0:	00000010 	andeq	r0, r0, r0, lsl r0
     ad4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     ad8:	00018e02 	andeq	r8, r1, r2, lsl #28
     adc:	00000014 	andeq	r0, r0, r4, lsl r0
     ae0:	000009cc 	andeq	r0, r0, ip, asr #19
     ae4:	00000000 	andeq	r0, r0, r0
     ae8:	00000010 	andeq	r0, r0, r0, lsl r0
     aec:	83080e41 	movwhi	r0, #36417	; 0x8e41
     af0:	00018e02 	andeq	r8, r1, r2, lsl #28
     af4:	0000000c 	andeq	r0, r0, ip
     af8:	000009cc 	andeq	r0, r0, ip, asr #19
     afc:	00000000 	andeq	r0, r0, r0
     b00:	00000006 	andeq	r0, r0, r6
     b04:	0000000c 	andeq	r0, r0, ip
     b08:	000009cc 	andeq	r0, r0, ip, asr #19
     b0c:	00000000 	andeq	r0, r0, r0
     b10:	0000000a 	andeq	r0, r0, sl
     b14:	00000014 	andeq	r0, r0, r4, lsl r0
     b18:	000009cc 	andeq	r0, r0, ip, asr #19
     b1c:	00000000 	andeq	r0, r0, r0
     b20:	00000010 	andeq	r0, r0, r0, lsl r0
     b24:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b28:	00018e02 	andeq	r8, r1, r2, lsl #28
     b2c:	00000014 	andeq	r0, r0, r4, lsl r0
     b30:	000009cc 	andeq	r0, r0, ip, asr #19
     b34:	00000000 	andeq	r0, r0, r0
     b38:	00000010 	andeq	r0, r0, r0, lsl r0
     b3c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b40:	00018e02 	andeq	r8, r1, r2, lsl #28
     b44:	00000014 	andeq	r0, r0, r4, lsl r0
     b48:	000009cc 	andeq	r0, r0, ip, asr #19
     b4c:	00000000 	andeq	r0, r0, r0
     b50:	00000010 	andeq	r0, r0, r0, lsl r0
     b54:	83080e41 	movwhi	r0, #36417	; 0x8e41
     b58:	00018e02 	andeq	r8, r1, r2, lsl #28
     b5c:	0000000c 	andeq	r0, r0, ip
     b60:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b64:	7c020001 	stcvc	0, cr0, [r2], {1}
     b68:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b6c:	0000000c 	andeq	r0, r0, ip
     b70:	00000b5c 	andeq	r0, r0, ip, asr fp
     b74:	10003294 	mulne	r0, r4, r2
     b78:	0000000c 	andeq	r0, r0, ip
     b7c:	0000000c 	andeq	r0, r0, ip
     b80:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b84:	7c020001 	stcvc	0, cr0, [r2], {1}
     b88:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b8c:	0000000c 	andeq	r0, r0, ip
     b90:	00000b7c 	andeq	r0, r0, ip, ror fp
     b94:	100032a0 	andne	r3, r0, r0, lsr #5
     b98:	00000010 	andeq	r0, r0, r0, lsl r0
     b9c:	0000000c 	andeq	r0, r0, ip
     ba0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ba4:	7c020001 	stcvc	0, cr0, [r2], {1}
     ba8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     bac:	00000018 	andeq	r0, r0, r8, lsl r0
     bb0:	00000b9c 	muleq	r0, ip, fp
     bb4:	00000000 	andeq	r0, r0, r0
     bb8:	0000005c 	andeq	r0, r0, ip, asr r0
     bbc:	83100e41 	tsthi	r0, #1040	; 0x410
     bc0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     bc4:	00018e02 	andeq	r8, r1, r2, lsl #28
     bc8:	00000014 	andeq	r0, r0, r4, lsl r0
     bcc:	00000b9c 	muleq	r0, ip, fp
     bd0:	100032b0 			; <UNDEFINED> instruction: 0x100032b0
     bd4:	0000007c 	andeq	r0, r0, ip, ror r0
     bd8:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     bdc:	00018e02 	andeq	r8, r1, r2, lsl #28
     be0:	0000000c 	andeq	r0, r0, ip
     be4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     be8:	7c020001 	stcvc	0, cr0, [r2], {1}
     bec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     bf0:	00000014 	andeq	r0, r0, r4, lsl r0
     bf4:	00000be0 	andeq	r0, r0, r0, ror #23
     bf8:	1000332c 	andne	r3, r0, ip, lsr #6
     bfc:	0000003c 	andeq	r0, r0, ip, lsr r0
     c00:	8e180e41 	cdphi	14, 1, cr0, cr8, cr1, {2}
     c04:	00000001 	andeq	r0, r0, r1
     c08:	00000014 	andeq	r0, r0, r4, lsl r0
     c0c:	00000be0 	andeq	r0, r0, r0, ror #23
     c10:	00000000 	andeq	r0, r0, r0
     c14:	0000000a 	andeq	r0, r0, sl
     c18:	83080e41 	movwhi	r0, #36417	; 0x8e41
     c1c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c20:	0000000c 	andeq	r0, r0, ip
     c24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c28:	7c020001 	stcvc	0, cr0, [r2], {1}
     c2c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     c30:	00000014 	andeq	r0, r0, r4, lsl r0
     c34:	00000c20 	andeq	r0, r0, r0, lsr #24
     c38:	10003368 	andne	r3, r0, r8, ror #6
     c3c:	00000048 	andeq	r0, r0, r8, asr #32
     c40:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     c44:	00018e02 	andeq	r8, r1, r2, lsl #28
     c48:	0000000c 	andeq	r0, r0, ip
     c4c:	00000c20 	andeq	r0, r0, r0, lsr #24
     c50:	100033b0 			; <UNDEFINED> instruction: 0x100033b0
     c54:	0000000c 	andeq	r0, r0, ip
     c58:	00000014 	andeq	r0, r0, r4, lsl r0
     c5c:	00000c20 	andeq	r0, r0, r0, lsr #24
     c60:	00000000 	andeq	r0, r0, r0
     c64:	00000018 	andeq	r0, r0, r8, lsl r0
     c68:	83080e41 	movwhi	r0, #36417	; 0x8e41
     c6c:	00018e02 	andeq	r8, r1, r2, lsl #28
     c70:	00000014 	andeq	r0, r0, r4, lsl r0
     c74:	00000c20 	andeq	r0, r0, r0, lsr #24
     c78:	00000000 	andeq	r0, r0, r0
     c7c:	00000018 	andeq	r0, r0, r8, lsl r0
     c80:	83080e41 	movwhi	r0, #36417	; 0x8e41
     c84:	00018e02 	andeq	r8, r1, r2, lsl #28
     c88:	00000018 	andeq	r0, r0, r8, lsl r0
     c8c:	00000c20 	andeq	r0, r0, r0, lsr #24
     c90:	100033bc 			; <UNDEFINED> instruction: 0x100033bc
     c94:	0000002c 	andeq	r0, r0, ip, lsr #32
     c98:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     c9c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     ca0:	00018e02 	andeq	r8, r1, r2, lsl #28
     ca4:	0000000c 	andeq	r0, r0, ip
     ca8:	00000c20 	andeq	r0, r0, r0, lsr #24
     cac:	00000000 	andeq	r0, r0, r0
     cb0:	0000000c 	andeq	r0, r0, ip
     cb4:	0000000c 	andeq	r0, r0, ip
     cb8:	00000c20 	andeq	r0, r0, r0, lsr #24
     cbc:	100033e8 	andne	r3, r0, r8, ror #7
     cc0:	0000000c 	andeq	r0, r0, ip
     cc4:	0000000c 	andeq	r0, r0, ip
     cc8:	00000c20 	andeq	r0, r0, r0, lsr #24
     ccc:	100033f4 	strdne	r3, [r0], -r4
     cd0:	0000000c 	andeq	r0, r0, ip
     cd4:	0000000c 	andeq	r0, r0, ip
     cd8:	00000c20 	andeq	r0, r0, r0, lsr #24
     cdc:	10003400 	andne	r3, r0, r0, lsl #8
     ce0:	0000000c 	andeq	r0, r0, ip
     ce4:	0000000c 	andeq	r0, r0, ip
     ce8:	00000c20 	andeq	r0, r0, r0, lsr #24
     cec:	1000340c 	andne	r3, r0, ip, lsl #8
     cf0:	0000000c 	andeq	r0, r0, ip
     cf4:	0000001c 	andeq	r0, r0, ip, lsl r0
     cf8:	00000c20 	andeq	r0, r0, r0, lsr #24
     cfc:	10003418 	andne	r3, r0, r8, lsl r4
     d00:	00000070 	andeq	r0, r0, r0, ror r0
     d04:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     d08:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
     d0c:	0ec4ce0a 	cdpeq	14, 12, cr12, cr4, cr10, {0}
     d10:	000b4200 	andeq	r4, fp, r0, lsl #4
     d14:	0000001c 	andeq	r0, r0, ip, lsl r0
     d18:	00000c20 	andeq	r0, r0, r0, lsr #24
     d1c:	10003488 	andne	r3, r0, r8, lsl #9
     d20:	0000008c 	andeq	r0, r0, ip, lsl #1
     d24:	83180e41 	tsthi	r8, #1040	; 0x410
     d28:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     d2c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     d30:	00018e02 	andeq	r8, r1, r2, lsl #28
     d34:	00000018 	andeq	r0, r0, r8, lsl r0
     d38:	00000c20 	andeq	r0, r0, r0, lsr #24
     d3c:	00000000 	andeq	r0, r0, r0
     d40:	0000001c 	andeq	r0, r0, ip, lsl r0
     d44:	83080e41 	movwhi	r0, #36417	; 0x8e41
     d48:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
     d4c:	000ec3ce 	andeq	ip, lr, lr, asr #7
     d50:	00000018 	andeq	r0, r0, r8, lsl r0
     d54:	00000c20 	andeq	r0, r0, r0, lsr #24
     d58:	00000000 	andeq	r0, r0, r0
     d5c:	0000001c 	andeq	r0, r0, ip, lsl r0
     d60:	83080e41 	movwhi	r0, #36417	; 0x8e41
     d64:	47018e02 	strmi	r8, [r1, -r2, lsl #28]
     d68:	000ec3ce 	andeq	ip, lr, lr, asr #7
     d6c:	0000000c 	andeq	r0, r0, ip
     d70:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     d74:	7c020001 	stcvc	0, cr0, [r2], {1}
     d78:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     d7c:	00000024 	andeq	r0, r0, r4, lsr #32
     d80:	00000d6c 	andeq	r0, r0, ip, ror #26
     d84:	00000000 	andeq	r0, r0, r0
     d88:	0000001a 	andeq	r0, r0, sl, lsl r0
     d8c:	82080e41 	andhi	r0, r8, #1040	; 0x410
     d90:	41018302 	tstmi	r1, r2, lsl #6
     d94:	038e180e 	orreq	r1, lr, #917504	; 0xe0000
     d98:	420c0e47 	andmi	r0, ip, #1136	; 0x470
     d9c:	41080ece 	smlabtmi	r8, lr, lr, r0
     da0:	000ec2c3 	andeq	ip, lr, r3, asr #5
     da4:	00000028 	andeq	r0, r0, r8, lsr #32
     da8:	00000d6c 	andeq	r0, r0, ip, ror #26
     dac:	10003514 	andne	r3, r0, r4, lsl r5
     db0:	00000024 	andeq	r0, r0, r4, lsr #32
     db4:	810c0e41 	tsthi	ip, r1, asr #28
     db8:	83028203 	movwhi	r8, #8707	; 0x2203
     dbc:	180e4101 	stmdane	lr, {r0, r8, lr}
     dc0:	0e4a048e 	cdpeq	4, 4, cr0, cr10, cr14, {4}
     dc4:	0ece4210 	mcreq	2, 6, r4, cr14, cr0, {0}
     dc8:	c2c3410c 	sbcgt	r4, r3, #12, 2
     dcc:	00000ec1 	andeq	r0, r0, r1, asr #29
     dd0:	0000000c 	andeq	r0, r0, ip
     dd4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     dd8:	7c020001 	stcvc	0, cr0, [r2], {1}
     ddc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     de0:	0000001c 	andeq	r0, r0, ip, lsl r0
     de4:	00000dd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     de8:	00000000 	andeq	r0, r0, r0
     dec:	0000003a 	andeq	r0, r0, sl, lsr r0
     df0:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     df4:	86058506 	strhi	r8, [r5], -r6, lsl #10
     df8:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     dfc:	00018e02 	andeq	r8, r1, r2, lsl #28
     e00:	00000020 	andeq	r0, r0, r0, lsr #32
     e04:	00000dd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     e08:	10003538 	andne	r3, r0, r8, lsr r5
     e0c:	0000003e 	andeq	r0, r0, lr, lsr r0
     e10:	83200e42 			; <UNDEFINED> instruction: 0x83200e42
     e14:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     e18:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     e1c:	89038804 	stmdbhi	r3, {r2, fp, pc}
     e20:	00018e02 	andeq	r8, r1, r2, lsl #28
     e24:	0000000c 	andeq	r0, r0, ip
     e28:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     e2c:	7c020001 	stcvc	0, cr0, [r2], {1}
     e30:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     e34:	0000000c 	andeq	r0, r0, ip
     e38:	00000e24 	andeq	r0, r0, r4, lsr #28
     e3c:	00000000 	andeq	r0, r0, r0
     e40:	00000002 	andeq	r0, r0, r2
     e44:	0000000c 	andeq	r0, r0, ip
     e48:	00000e24 	andeq	r0, r0, r4, lsr #28
     e4c:	10003576 	andne	r3, r0, r6, ror r5
     e50:	00000002 	andeq	r0, r0, r2
     e54:	0000000c 	andeq	r0, r0, ip
     e58:	00000e24 	andeq	r0, r0, r4, lsr #28
     e5c:	00000000 	andeq	r0, r0, r0
     e60:	00000002 	andeq	r0, r0, r2
     e64:	0000000c 	andeq	r0, r0, ip
     e68:	00000e24 	andeq	r0, r0, r4, lsr #28
     e6c:	00000000 	andeq	r0, r0, r0
     e70:	00000002 	andeq	r0, r0, r2
     e74:	0000000c 	andeq	r0, r0, ip
     e78:	00000e24 	andeq	r0, r0, r4, lsr #28
     e7c:	00000000 	andeq	r0, r0, r0
     e80:	00000002 	andeq	r0, r0, r2
     e84:	0000000c 	andeq	r0, r0, ip
     e88:	00000e24 	andeq	r0, r0, r4, lsr #28
     e8c:	10003578 	andne	r3, r0, r8, ror r5
     e90:	00000002 	andeq	r0, r0, r2
     e94:	0000000c 	andeq	r0, r0, ip
     e98:	00000e24 	andeq	r0, r0, r4, lsr #28
     e9c:	00000000 	andeq	r0, r0, r0
     ea0:	00000004 	andeq	r0, r0, r4
     ea4:	0000000c 	andeq	r0, r0, ip
     ea8:	00000e24 	andeq	r0, r0, r4, lsr #28
     eac:	00000000 	andeq	r0, r0, r0
     eb0:	00000004 	andeq	r0, r0, r4
     eb4:	0000000c 	andeq	r0, r0, ip
     eb8:	00000e24 	andeq	r0, r0, r4, lsr #28
     ebc:	00000000 	andeq	r0, r0, r0
     ec0:	00000002 	andeq	r0, r0, r2
     ec4:	0000000c 	andeq	r0, r0, ip
     ec8:	00000e24 	andeq	r0, r0, r4, lsr #28
     ecc:	1000357a 	andne	r3, r0, sl, ror r5
     ed0:	00000002 	andeq	r0, r0, r2
     ed4:	0000000c 	andeq	r0, r0, ip
     ed8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     edc:	7c020001 	stcvc	0, cr0, [r2], {1}
     ee0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ee4:	0000000c 	andeq	r0, r0, ip
     ee8:	00000ed4 	ldrdeq	r0, [r0], -r4
     eec:	1000357c 	andne	r3, r0, ip, ror r5
     ef0:	00000010 	andeq	r0, r0, r0, lsl r0
     ef4:	0000000c 	andeq	r0, r0, ip
     ef8:	00000ed4 	ldrdeq	r0, [r0], -r4
     efc:	00000000 	andeq	r0, r0, r0
     f00:	00000010 	andeq	r0, r0, r0, lsl r0
     f04:	0000000c 	andeq	r0, r0, ip
     f08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     f0c:	7c020001 	stcvc	0, cr0, [r2], {1}
     f10:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     f14:	00000024 	andeq	r0, r0, r4, lsr #32
     f18:	00000f04 	andeq	r0, r0, r4, lsl #30
     f1c:	1000358c 	andne	r3, r0, ip, lsl #11
     f20:	00000098 	muleq	r0, r8, r0
     f24:	84180e41 	ldrhi	r0, [r8], #-3649	; 0xfffff1bf
     f28:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     f2c:	0e0a5201 	cdpeq	2, 0, cr5, cr10, cr1, {0}
     f30:	c5ce420c 	strbgt	r4, [lr, #524]	; 0x20c
     f34:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
     f38:	0c0e710b 	stfeqs	f7, [lr], {11}
     f3c:	0000000c 	andeq	r0, r0, ip
     f40:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     f44:	7c020001 	stcvc	0, cr0, [r2], {1}
     f48:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     f4c:	00000018 	andeq	r0, r0, r8, lsl r0
     f50:	00000f3c 	andeq	r0, r0, ip, lsr pc
     f54:	10003624 	andne	r3, r0, r4, lsr #12
     f58:	00000040 	andeq	r0, r0, r0, asr #32
     f5c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     f60:	86038504 	strhi	r8, [r3], -r4, lsl #10
     f64:	00018e02 	andeq	r8, r1, r2, lsl #28
     f68:	0000001c 	andeq	r0, r0, ip, lsl r0
     f6c:	00000f3c 	andeq	r0, r0, ip, lsr pc
     f70:	10003664 	andne	r3, r0, r4, ror #12
     f74:	000000e8 	andeq	r0, r0, r8, ror #1
     f78:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     f7c:	86058506 	strhi	r8, [r5], -r6, lsl #10
     f80:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     f84:	00018e02 	andeq	r8, r1, r2, lsl #28
     f88:	0000000c 	andeq	r0, r0, ip
     f8c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     f90:	7c020001 	stcvc	0, cr0, [r2], {1}
     f94:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     f98:	0000001c 	andeq	r0, r0, ip, lsl r0
     f9c:	00000f88 	andeq	r0, r0, r8, lsl #31
     fa0:	1000374c 	andne	r3, r0, ip, asr #14
     fa4:	0000002e 	andeq	r0, r0, lr, lsr #32
     fa8:	84040e45 	strhi	r0, [r4], #-3653	; 0xfffff1bb
     fac:	c40a4801 	strgt	r4, [sl], #-2049	; 0xfffff7ff
     fb0:	0b42000e 	bleq	1080ff0 <__RAM_SIZE+0xf80ff0>
     fb4:	000ec447 	andeq	ip, lr, r7, asr #8
     fb8:	0000001c 	andeq	r0, r0, ip, lsl r0
     fbc:	00000f88 	andeq	r0, r0, r8, lsl #31
     fc0:	1000377a 	andne	r3, r0, sl, ror r7
     fc4:	00000024 	andeq	r0, r0, r4, lsr #32
     fc8:	83180e41 	tsthi	r8, #1040	; 0x410
     fcc:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     fd0:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     fd4:	00018e02 	andeq	r8, r1, r2, lsl #28
     fd8:	00000018 	andeq	r0, r0, r8, lsl r0
     fdc:	00000f88 	andeq	r0, r0, r8, lsl #31
     fe0:	00000000 	andeq	r0, r0, r0
     fe4:	0000001a 	andeq	r0, r0, sl, lsl r0
     fe8:	83100e41 	tsthi	r0, #1040	; 0x410
     fec:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     ff0:	00018e02 	andeq	r8, r1, r2, lsl #28
     ff4:	0000002c 	andeq	r0, r0, ip, lsr #32
     ff8:	00000f88 	andeq	r0, r0, r8, lsl #31
     ffc:	100037a0 	andne	r3, r0, r0, lsr #15
    1000:	00000260 	andeq	r0, r0, r0, ror #4
    1004:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1008:	86088509 	strhi	r8, [r8], -r9, lsl #10
    100c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1010:	8a048905 	bhi	12342c <__RAM_SIZE+0x2342c>
    1014:	8e028b03 	vmlahi.f64	d8, d2, d3
    1018:	980e4201 	stmdals	lr, {r0, r9, lr}
    101c:	0e0a6501 	cfsh32eq	mvfx6, mvfx10, #1
    1020:	000b4224 	andeq	r4, fp, r4, lsr #4
    1024:	0000000c 	andeq	r0, r0, ip
    1028:	00000f88 	andeq	r0, r0, r8, lsl #31
    102c:	00000000 	andeq	r0, r0, r0
    1030:	00000014 	andeq	r0, r0, r4, lsl r0
    1034:	0000000c 	andeq	r0, r0, ip
    1038:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    103c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1040:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1044:	00000020 	andeq	r0, r0, r0, lsr #32
    1048:	00001034 	andeq	r1, r0, r4, lsr r0
    104c:	10003a00 	andne	r3, r0, r0, lsl #20
    1050:	000000e0 	andeq	r0, r0, r0, ror #1
    1054:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    1058:	86078508 	strhi	r8, [r7], -r8, lsl #10
    105c:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1060:	8a038904 	bhi	e3478 <SYSTICK_CYCLES+0xba439>
    1064:	00018e02 	andeq	r8, r1, r2, lsl #28
    1068:	00000028 	andeq	r0, r0, r8, lsr #32
    106c:	00001034 	andeq	r1, r0, r4, lsr r0
    1070:	10003ae0 	andne	r3, r0, r0, ror #21
    1074:	0000024c 	andeq	r0, r0, ip, asr #4
    1078:	84300e42 	ldrthi	r0, [r0], #-3650	; 0xfffff1be
    107c:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1080:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1084:	8a038904 	bhi	e349c <SYSTICK_CYCLES+0xba45d>
    1088:	02018e02 	andeq	r8, r1, #2, 28
    108c:	200e0ab3 			; <UNDEFINED> instruction: 0x200e0ab3
    1090:	00000b42 	andeq	r0, r0, r2, asr #22
    1094:	0000000c 	andeq	r0, r0, ip
    1098:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    109c:	7c020001 	stcvc	0, cr0, [r2], {1}
    10a0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    10a4:	00000018 	andeq	r0, r0, r8, lsl r0
    10a8:	00001094 	muleq	r0, r4, r0
    10ac:	10003d2c 	andne	r3, r0, ip, lsr #26
    10b0:	00000020 	andeq	r0, r0, r0, lsr #32
    10b4:	83100e41 	tsthi	r0, #1040	; 0x410
    10b8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    10bc:	00018e02 	andeq	r8, r1, r2, lsl #28
    10c0:	0000000c 	andeq	r0, r0, ip
    10c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    10c8:	7c020001 	stcvc	0, cr0, [r2], {1}
    10cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    10d0:	00000014 	andeq	r0, r0, r4, lsl r0
    10d4:	000010c0 	andeq	r1, r0, r0, asr #1
    10d8:	10003d4c 	andne	r3, r0, ip, asr #26
    10dc:	00000022 	andeq	r0, r0, r2, lsr #32
    10e0:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    10e4:	00018e02 	andeq	r8, r1, r2, lsl #28
    10e8:	0000000c 	andeq	r0, r0, ip
    10ec:	000010c0 	andeq	r1, r0, r0, asr #1
    10f0:	00000000 	andeq	r0, r0, r0
    10f4:	00000004 	andeq	r0, r0, r4
    10f8:	00000024 	andeq	r0, r0, r4, lsr #32
    10fc:	000010c0 	andeq	r1, r0, r0, asr #1
    1100:	10003d6e 	andne	r3, r0, lr, ror #26
    1104:	00000038 	andeq	r0, r0, r8, lsr r0
    1108:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    110c:	86058506 	strhi	r8, [r5], -r6, lsl #10
    1110:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1114:	58018e02 	stmdapl	r1, {r1, r9, sl, fp, pc}
    1118:	c6c7c8ce 	strbgt	ip, [r7], lr, asr #17
    111c:	000ec4c5 	andeq	ip, lr, r5, asr #9
    1120:	00000014 	andeq	r0, r0, r4, lsl r0
    1124:	000010c0 	andeq	r1, r0, r0, asr #1
    1128:	10003da6 	andne	r3, r0, r6, lsr #27
    112c:	00000024 	andeq	r0, r0, r4, lsr #32
    1130:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1134:	00018e02 	andeq	r8, r1, r2, lsl #28
    1138:	0000000c 	andeq	r0, r0, ip
    113c:	000010c0 	andeq	r1, r0, r0, asr #1
    1140:	10003dca 	andne	r3, r0, sl, asr #27
    1144:	00000008 	andeq	r0, r0, r8
    1148:	0000000c 	andeq	r0, r0, ip
    114c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1150:	7c020001 	stcvc	0, cr0, [r2], {1}
    1154:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1158:	0000001c 	andeq	r0, r0, ip, lsl r0
    115c:	00001148 	andeq	r1, r0, r8, asr #2
    1160:	10003dd4 	ldrdne	r3, [r0], -r4
    1164:	000000a4 	andeq	r0, r0, r4, lsr #1
    1168:	83180e41 	tsthi	r8, #1040	; 0x410
    116c:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    1170:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    1174:	00018e02 	andeq	r8, r1, r2, lsl #28
    1178:	0000000c 	andeq	r0, r0, ip
    117c:	00001148 	andeq	r1, r0, r8, asr #2
    1180:	00000000 	andeq	r0, r0, r0
    1184:	00000010 	andeq	r0, r0, r0, lsl r0
    1188:	0000000c 	andeq	r0, r0, ip
    118c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1190:	7c020001 	stcvc	0, cr0, [r2], {1}
    1194:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1198:	00000018 	andeq	r0, r0, r8, lsl r0
    119c:	00001188 	andeq	r1, r0, r8, lsl #3
    11a0:	10003e78 	andne	r3, r0, r8, ror lr
    11a4:	00000024 	andeq	r0, r0, r4, lsr #32
    11a8:	83100e41 	tsthi	r0, #1040	; 0x410
    11ac:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    11b0:	00018e02 	andeq	r8, r1, r2, lsl #28
    11b4:	0000000c 	andeq	r0, r0, ip
    11b8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    11bc:	7c020001 	stcvc	0, cr0, [r2], {1}
    11c0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    11c4:	00000018 	andeq	r0, r0, r8, lsl r0
    11c8:	000011b4 			; <UNDEFINED> instruction: 0x000011b4
    11cc:	10003e9c 	mulne	r0, ip, lr
    11d0:	000000dc 	ldrdeq	r0, [r0], -ip
    11d4:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    11d8:	86038504 	strhi	r8, [r3], -r4, lsl #10
    11dc:	00018e02 	andeq	r8, r1, r2, lsl #28
    11e0:	0000000c 	andeq	r0, r0, ip
    11e4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    11e8:	7c020001 	stcvc	0, cr0, [r2], {1}
    11ec:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    11f0:	00000014 	andeq	r0, r0, r4, lsl r0
    11f4:	000011e0 	andeq	r1, r0, r0, ror #3
    11f8:	10003f78 	andne	r3, r0, r8, ror pc
    11fc:	0000000e 	andeq	r0, r0, lr
    1200:	83080e42 	movwhi	r0, #36418	; 0x8e42
    1204:	00018e02 	andeq	r8, r1, r2, lsl #28
    1208:	0000000c 	andeq	r0, r0, ip
    120c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1210:	7c020001 	stcvc	0, cr0, [r2], {1}
    1214:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1218:	00000018 	andeq	r0, r0, r8, lsl r0
    121c:	00001208 	andeq	r1, r0, r8, lsl #4
    1220:	10003f88 	andne	r3, r0, r8, lsl #31
    1224:	00000020 	andeq	r0, r0, r0, lsr #32
    1228:	83100e41 	tsthi	r0, #1040	; 0x410
    122c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1230:	00018e02 	andeq	r8, r1, r2, lsl #28
    1234:	0000000c 	andeq	r0, r0, ip
    1238:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    123c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1240:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1244:	0000001c 	andeq	r0, r0, ip, lsl r0
    1248:	00001234 	andeq	r1, r0, r4, lsr r2
    124c:	10003fa8 	andne	r3, r0, r8, lsr #31
    1250:	00000108 	andeq	r0, r0, r8, lsl #2
    1254:	84180e43 	ldrhi	r0, [r8], #-3651	; 0xfffff1bd
    1258:	86058506 	strhi	r8, [r5], -r6, lsl #10
    125c:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    1260:	00018e02 	andeq	r8, r1, r2, lsl #28
    1264:	00000018 	andeq	r0, r0, r8, lsl r0
    1268:	00001234 	andeq	r1, r0, r4, lsr r2
    126c:	100040b0 	strhne	r4, [r0], -r0
    1270:	00000078 	andeq	r0, r0, r8, ror r0
    1274:	83100e41 	tsthi	r0, #1040	; 0x410
    1278:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    127c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1280:	0000000c 	andeq	r0, r0, ip
    1284:	00001234 	andeq	r1, r0, r4, lsr r2
    1288:	00000000 	andeq	r0, r0, r0
    128c:	00000024 	andeq	r0, r0, r4, lsr #32
    1290:	0000000c 	andeq	r0, r0, ip
    1294:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1298:	7c020001 	stcvc	0, cr0, [r2], {1}
    129c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    12a0:	00000018 	andeq	r0, r0, r8, lsl r0
    12a4:	00001290 	muleq	r0, r0, r2
    12a8:	10004128 	andne	r4, r0, r8, lsr #2
    12ac:	00000024 	andeq	r0, r0, r4, lsr #32
    12b0:	83100e41 	tsthi	r0, #1040	; 0x410
    12b4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    12b8:	00018e02 	andeq	r8, r1, r2, lsl #28
    12bc:	0000000c 	andeq	r0, r0, ip
    12c0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    12c4:	7c020001 	stcvc	0, cr0, [r2], {1}
    12c8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    12cc:	00000020 	andeq	r0, r0, r0, lsr #32
    12d0:	000012bc 			; <UNDEFINED> instruction: 0x000012bc
    12d4:	1000414c 	andne	r4, r0, ip, asr #2
    12d8:	0000004a 	andeq	r0, r0, sl, asr #32
    12dc:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    12e0:	86038504 	strhi	r8, [r3], -r4, lsl #10
    12e4:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
    12e8:	0e5f680e 	cdpeq	8, 5, cr6, cr15, cr14, {0}
    12ec:	00000010 	andeq	r0, r0, r0, lsl r0
    12f0:	00000020 	andeq	r0, r0, r0, lsr #32
    12f4:	000012bc 			; <UNDEFINED> instruction: 0x000012bc
    12f8:	10004198 	mulne	r0, r8, r1
    12fc:	00000080 	andeq	r0, r0, r0, lsl #1
    1300:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    1304:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1308:	4b018e02 	blmi	64b18 <SYSTICK_CYCLES+0x3bad9>
    130c:	41100e0a 	tstmi	r0, sl, lsl #28
    1310:	0000000b 	andeq	r0, r0, fp
    1314:	0000000c 	andeq	r0, r0, ip
    1318:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    131c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1320:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1324:	00000014 	andeq	r0, r0, r4, lsl r0
    1328:	00001314 	andeq	r1, r0, r4, lsl r3
    132c:	10004218 	andne	r4, r0, r8, lsl r2
    1330:	0000001c 	andeq	r0, r0, ip, lsl r0
    1334:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
    1338:	00018e02 	andeq	r8, r1, r2, lsl #28
    133c:	0000000c 	andeq	r0, r0, ip
    1340:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1344:	7c020001 	stcvc	0, cr0, [r2], {1}
    1348:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    134c:	00000014 	andeq	r0, r0, r4, lsl r0
    1350:	0000133c 	andeq	r1, r0, ip, lsr r3
    1354:	10004234 	andne	r4, r0, r4, lsr r2
    1358:	0000001a 	andeq	r0, r0, sl, lsl r0
    135c:	84080e46 	strhi	r0, [r8], #-3654	; 0xfffff1ba
    1360:	00018e02 	andeq	r8, r1, r2, lsl #28
    1364:	0000000c 	andeq	r0, r0, ip
    1368:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    136c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1370:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1374:	0000000c 	andeq	r0, r0, ip
    1378:	00001364 	andeq	r1, r0, r4, ror #6
    137c:	10004250 	andne	r4, r0, r0, asr r2
    1380:	0000000c 	andeq	r0, r0, ip
    1384:	0000000c 	andeq	r0, r0, ip
    1388:	00001364 	andeq	r1, r0, r4, ror #6
    138c:	1000425c 	andne	r4, r0, ip, asr r2
    1390:	0000000c 	andeq	r0, r0, ip
    1394:	0000000c 	andeq	r0, r0, ip
    1398:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    139c:	7c020001 	stcvc	0, cr0, [r2], {1}
    13a0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    13a4:	00000018 	andeq	r0, r0, r8, lsl r0
    13a8:	00001394 	muleq	r0, r4, r3
    13ac:	10004268 	andne	r4, r0, r8, ror #4
    13b0:	00000024 	andeq	r0, r0, r4, lsr #32
    13b4:	83100e41 	tsthi	r0, #1040	; 0x410
    13b8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    13bc:	00018e02 	andeq	r8, r1, r2, lsl #28
    13c0:	0000000c 	andeq	r0, r0, ip
    13c4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    13c8:	7c020001 	stcvc	0, cr0, [r2], {1}
    13cc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    13d0:	00000020 	andeq	r0, r0, r0, lsr #32
    13d4:	000013c0 	andeq	r1, r0, r0, asr #7
    13d8:	00000000 	andeq	r0, r0, r0
    13dc:	0000001a 	andeq	r0, r0, sl, lsl r0
    13e0:	83100e41 	tsthi	r0, #1040	; 0x410
    13e4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    13e8:	4a018e02 	bmi	64bf8 <SYSTICK_CYCLES+0x3bbb9>
    13ec:	c3c4c5ce 	bicgt	ip, r4, #864026624	; 0x33800000
    13f0:	0000000e 	andeq	r0, r0, lr
    13f4:	00000024 	andeq	r0, r0, r4, lsr #32
    13f8:	000013c0 	andeq	r1, r0, r0, asr #7
    13fc:	00000000 	andeq	r0, r0, r0
    1400:	000000b8 	strheq	r0, [r0], -r8
    1404:	84100e44 	ldrhi	r0, [r0], #-3652	; 0xfffff1bc
    1408:	86038504 	strhi	r8, [r3], -r4, lsl #10
    140c:	7f018e02 	svcvc	0x00018e02
    1410:	c5c6ce0a 	strbgt	ip, [r6, #3594]	; 0xe0a
    1414:	42000ec4 	andmi	r0, r0, #196, 28	; 0xc40
    1418:	0000000b 	andeq	r0, r0, fp
    141c:	0000000c 	andeq	r0, r0, ip
    1420:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1424:	7c020001 	stcvc	0, cr0, [r2], {1}
    1428:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    142c:	00000018 	andeq	r0, r0, r8, lsl r0
    1430:	0000141c 	andeq	r1, r0, ip, lsl r4
    1434:	00000000 	andeq	r0, r0, r0
    1438:	00000028 	andeq	r0, r0, r8, lsr #32
    143c:	83100e41 	tsthi	r0, #1040	; 0x410
    1440:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1444:	00018e02 	andeq	r8, r1, r2, lsl #28
    1448:	00000018 	andeq	r0, r0, r8, lsl r0
    144c:	0000141c 	andeq	r1, r0, ip, lsl r4
    1450:	00000000 	andeq	r0, r0, r0
    1454:	00000030 	andeq	r0, r0, r0, lsr r0
    1458:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    145c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1460:	00018e02 	andeq	r8, r1, r2, lsl #28
    1464:	00000024 	andeq	r0, r0, r4, lsr #32
    1468:	0000141c 	andeq	r1, r0, ip, lsl r4
    146c:	1000428c 	andne	r4, r0, ip, lsl #5
    1470:	00000050 	andeq	r0, r0, r0, asr r0
    1474:	83100e42 	tsthi	r0, #1056	; 0x420
    1478:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    147c:	55018e02 	strpl	r8, [r1, #-3586]	; 0xfffff1fe
    1480:	c4c5ce0a 	strbgt	ip, [r5], #3594	; 0xe0a
    1484:	42000ec3 	andmi	r0, r0, #3120	; 0xc30
    1488:	0000000b 	andeq	r0, r0, fp
    148c:	00000018 	andeq	r0, r0, r8, lsl r0
    1490:	0000141c 	andeq	r1, r0, ip, lsl r4
    1494:	00000000 	andeq	r0, r0, r0
    1498:	00000048 	andeq	r0, r0, r8, asr #32
    149c:	83100e42 	tsthi	r0, #1056	; 0x420
    14a0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    14a4:	00018e02 	andeq	r8, r1, r2, lsl #28
    14a8:	0000000c 	andeq	r0, r0, ip
    14ac:	0000141c 	andeq	r1, r0, ip, lsl r4
    14b0:	100042dc 	ldrdne	r4, [r0], -ip
    14b4:	00000010 	andeq	r0, r0, r0, lsl r0
    14b8:	0000000c 	andeq	r0, r0, ip
    14bc:	0000141c 	andeq	r1, r0, ip, lsl r4
    14c0:	00000000 	andeq	r0, r0, r0
    14c4:	00000010 	andeq	r0, r0, r0, lsl r0
    14c8:	0000000c 	andeq	r0, r0, ip
    14cc:	0000141c 	andeq	r1, r0, ip, lsl r4
    14d0:	00000000 	andeq	r0, r0, r0
    14d4:	0000000c 	andeq	r0, r0, ip
    14d8:	0000000c 	andeq	r0, r0, ip
    14dc:	0000141c 	andeq	r1, r0, ip, lsl r4
    14e0:	00000000 	andeq	r0, r0, r0
    14e4:	00000010 	andeq	r0, r0, r0, lsl r0
    14e8:	0000000c 	andeq	r0, r0, ip
    14ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    14f0:	7c020001 	stcvc	0, cr0, [r2], {1}
    14f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    14f8:	00000018 	andeq	r0, r0, r8, lsl r0
    14fc:	000014e8 	andeq	r1, r0, r8, ror #9
    1500:	100042ec 	andne	r4, r0, ip, ror #5
    1504:	00000024 	andeq	r0, r0, r4, lsr #32
    1508:	83100e41 	tsthi	r0, #1040	; 0x410
    150c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1510:	00018e02 	andeq	r8, r1, r2, lsl #28
    1514:	0000000c 	andeq	r0, r0, ip
    1518:	000014e8 	andeq	r1, r0, r8, ror #9
    151c:	10004310 	andne	r4, r0, r0, lsl r3
    1520:	00000004 	andeq	r0, r0, r4
    1524:	0000000c 	andeq	r0, r0, ip
    1528:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    152c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1530:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1534:	00000018 	andeq	r0, r0, r8, lsl r0
    1538:	00001524 	andeq	r1, r0, r4, lsr #10
    153c:	10004314 	andne	r4, r0, r4, lsl r3
    1540:	00000024 	andeq	r0, r0, r4, lsr #32
    1544:	83100e41 	tsthi	r0, #1040	; 0x410
    1548:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    154c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1550:	0000000c 	andeq	r0, r0, ip
    1554:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1558:	7c020001 	stcvc	0, cr0, [r2], {1}
    155c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1560:	00000018 	andeq	r0, r0, r8, lsl r0
    1564:	00001550 	andeq	r1, r0, r0, asr r5
    1568:	10004338 	andne	r4, r0, r8, lsr r3
    156c:	00000020 	andeq	r0, r0, r0, lsr #32
    1570:	83100e41 	tsthi	r0, #1040	; 0x410
    1574:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1578:	00018e02 	andeq	r8, r1, r2, lsl #28
    157c:	0000000c 	andeq	r0, r0, ip
    1580:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1584:	7c020001 	stcvc	0, cr0, [r2], {1}
    1588:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    158c:	0000001c 	andeq	r0, r0, ip, lsl r0
    1590:	0000157c 	andeq	r1, r0, ip, ror r5
    1594:	10004358 	andne	r4, r0, r8, asr r3
    1598:	00000282 	andeq	r0, r0, r2, lsl #5
    159c:	0c0e470a 	stceq	7, cr4, [lr], {10}
    15a0:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    15a4:	3a03018e 	bcc	c1be4 <SYSTICK_CYCLES+0x98ba5>
    15a8:	00000b01 	andeq	r0, r0, r1, lsl #22
    15ac:	00000018 	andeq	r0, r0, r8, lsl r0
    15b0:	0000157c 	andeq	r1, r0, ip, ror r5
    15b4:	100045dc 	ldrdne	r4, [r0], -ip
    15b8:	0000001e 	andeq	r0, r0, lr, lsl r0
    15bc:	0c0e460a 	stceq	6, cr4, [lr], {10}
    15c0:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    15c4:	0b49018e 	bleq	1241c04 <__RAM_SIZE+0x1141c04>
    15c8:	00000018 	andeq	r0, r0, r8, lsl r0
    15cc:	0000157c 	andeq	r1, r0, ip, ror r5
    15d0:	100045fc 	strdne	r4, [r0], -ip
    15d4:	00000022 	andeq	r0, r0, r2, lsr #32
    15d8:	0c0e460a 	stceq	6, cr4, [lr], {10}
    15dc:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    15e0:	0b4b018e 	bleq	12c1c20 <__RAM_SIZE+0x11c1c20>
    15e4:	00000018 	andeq	r0, r0, r8, lsl r0
    15e8:	0000157c 	andeq	r1, r0, ip, ror r5
    15ec:	10004620 	andne	r4, r0, r0, lsr #12
    15f0:	00000042 	andeq	r0, r0, r2, asr #32
    15f4:	0c0e5a0a 			; <UNDEFINED> instruction: 0x0c0e5a0a
    15f8:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    15fc:	0b47018e 	bleq	11c1c3c <__RAM_SIZE+0x10c1c3c>
    1600:	00000024 	andeq	r0, r0, r4, lsr #32
    1604:	0000157c 	andeq	r1, r0, ip, ror r5
    1608:	10004664 	andne	r4, r0, r4, ror #12
    160c:	0000006a 	andeq	r0, r0, sl, rrx
    1610:	0e450a0a 	vmlaeq.f32	s1, s10, s20
    1614:	8503840c 	strhi	r8, [r3, #-1036]	; 0xfffffbf4
    1618:	43018e02 	movwmi	r8, #7682	; 0x1e02
    161c:	0c0e450b 	cfstr32eq	mvfx4, [lr], {11}
    1620:	02850384 	addeq	r0, r5, #132, 6	; 0x10000002
    1624:	0b68018e 	bleq	1a01c64 <__RAM_SIZE+0x1901c64>
    1628:	0000000c 	andeq	r0, r0, ip
    162c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1630:	7c020001 	stcvc	0, cr0, [r2], {1}
    1634:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1638:	0000001c 	andeq	r0, r0, ip, lsl r0
    163c:	00001628 	andeq	r1, r0, r8, lsr #12
    1640:	100046d0 	ldrdne	r4, [r0], -r0
    1644:	00000254 	andeq	r0, r0, r4, asr r2
    1648:	100e410a 	andne	r4, lr, sl, lsl #2
    164c:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    1650:	018e0286 	orreq	r0, lr, r6, lsl #5
    1654:	0b012903 	bleq	4ba68 <SYSTICK_CYCLES+0x22a29>
    1658:	0000001c 	andeq	r0, r0, ip, lsl r0
    165c:	00001628 	andeq	r1, r0, r8, lsr #12
    1660:	10004924 	andne	r4, r0, r4, lsr #18
    1664:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1668:	100e410a 	andne	r4, lr, sl, lsl #2
    166c:	03850484 	orreq	r0, r5, #132, 8	; 0x84000000
    1670:	018e0286 	orreq	r0, lr, r6, lsl #5
    1674:	000be702 	andeq	lr, fp, r2, lsl #14
    1678:	0000000c 	andeq	r0, r0, ip
    167c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1680:	7c020001 	stcvc	0, cr0, [r2], {1}
    1684:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1688:	0000001c 	andeq	r0, r0, ip, lsl r0
    168c:	00001678 	andeq	r1, r0, r8, ror r6
    1690:	10004af4 	strdne	r4, [r0], -r4	; <UNPREDICTABLE>
    1694:	0000008a 	andeq	r0, r0, sl, lsl #1
    1698:	040e4c0a 	streq	r4, [lr], #-3082	; 0xfffff3f6
    169c:	0e410a4a 	vmlseq.f32	s1, s2, s20
    16a0:	520b5b00 	andpl	r5, fp, #0, 22
    16a4:	0b41000e 	bleq	10416e4 <__RAM_SIZE+0xf416e4>
    16a8:	00000018 	andeq	r0, r0, r8, lsl r0
    16ac:	00001678 	andeq	r1, r0, r8, ror r6
    16b0:	10004b80 	andne	r4, r0, r0, lsl #23
    16b4:	00000020 	andeq	r0, r0, r0, lsr #32
    16b8:	080e490a 	stmdaeq	lr, {r1, r3, r8, fp, lr}
    16bc:	018e0280 	orreq	r0, lr, r0, lsl #5
    16c0:	00000b47 	andeq	r0, r0, r7, asr #22
    16c4:	00000014 	andeq	r0, r0, r4, lsl r0
    16c8:	00001678 	andeq	r1, r0, r8, ror r6
    16cc:	10004ba0 	andne	r4, r0, r0, lsr #23
    16d0:	00000012 	andeq	r0, r0, r2, lsl r0
    16d4:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    16d8:	0b47028e 	bleq	11c2118 <__RAM_SIZE+0x10c2118>
    16dc:	00000014 	andeq	r0, r0, r4, lsl r0
    16e0:	00001678 	andeq	r1, r0, r8, ror r6
    16e4:	10004bb4 			; <UNDEFINED> instruction: 0x10004bb4
    16e8:	00000012 	andeq	r0, r0, r2, lsl r0
    16ec:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    16f0:	0b47028e 	bleq	11c2130 <__RAM_SIZE+0x10c2130>
    16f4:	00000014 	andeq	r0, r0, r4, lsl r0
    16f8:	00001678 	andeq	r1, r0, r8, ror r6
    16fc:	10004bc8 	andne	r4, r0, r8, asr #23
    1700:	00000012 	andeq	r0, r0, r2, lsl r0
    1704:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1708:	0b47028e 	bleq	11c2148 <__RAM_SIZE+0x10c2148>
    170c:	00000014 	andeq	r0, r0, r4, lsl r0
    1710:	00001678 	andeq	r1, r0, r8, ror r6
    1714:	10004bdc 	ldrdne	r4, [r0], -ip
    1718:	00000012 	andeq	r0, r0, r2, lsl r0
    171c:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1720:	0b47028e 	bleq	11c2160 <__RAM_SIZE+0x10c2160>
    1724:	00000014 	andeq	r0, r0, r4, lsl r0
    1728:	00001678 	andeq	r1, r0, r8, ror r6
    172c:	10004bf0 	strdne	r4, [r0], -r0
    1730:	00000012 	andeq	r0, r0, r2, lsl r0
    1734:	080e420a 	stmdaeq	lr, {r1, r3, r9, lr}
    1738:	0b47028e 	bleq	11c2178 <__RAM_SIZE+0x10c2178>
    173c:	0000000c 	andeq	r0, r0, ip
    1740:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1744:	7c020001 	stcvc	0, cr0, [r2], {1}
    1748:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    174c:	00000010 	andeq	r0, r0, r0, lsl r0
    1750:	0000173c 	andeq	r1, r0, ip, lsr r7
    1754:	10004c04 	andne	r4, r0, r4, lsl #24
    1758:	0000004e 	andeq	r0, r0, lr, asr #32
    175c:	000b670a 	andeq	r6, fp, sl, lsl #14
    1760:	0000000c 	andeq	r0, r0, ip
    1764:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1768:	7c020001 	stcvc	0, cr0, [r2], {1}
    176c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1770:	00000010 	andeq	r0, r0, r0, lsl r0
    1774:	00001760 	andeq	r1, r0, r0, ror #14
    1778:	10004c54 	andne	r4, r0, r4, asr ip
    177c:	00000040 	andeq	r0, r0, r0, asr #32
    1780:	000b600a 	andeq	r6, fp, sl
    1784:	0000000c 	andeq	r0, r0, ip
    1788:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    178c:	7c020001 	stcvc	0, cr0, [r2], {1}
    1790:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1794:	00000018 	andeq	r0, r0, r8, lsl r0
    1798:	00001784 	andeq	r1, r0, r4, lsl #15
    179c:	10004c94 	mulne	r0, r4, ip
    17a0:	00000030 	andeq	r0, r0, r0, lsr r0
    17a4:	8e100e50 	mrchi	14, 0, r0, cr0, cr0, {2}
    17a8:	0ece4703 	cdpeq	7, 12, cr4, cr14, cr3, {0}
    17ac:	00000010 	andeq	r0, r0, r0, lsl r0
    17b0:	0000000c 	andeq	r0, r0, ip
    17b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17b8:	7c020001 	stcvc	0, cr0, [r2], {1}
    17bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    17c0:	00000024 	andeq	r0, r0, r4, lsr #32
    17c4:	000017b0 			; <UNDEFINED> instruction: 0x000017b0
    17c8:	10004cc4 	andne	r4, r0, r4, asr #25
    17cc:	000002ec 	andeq	r0, r0, ip, ror #5
    17d0:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    17d4:	86088509 	strhi	r8, [r8], -r9, lsl #10
    17d8:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    17dc:	8a048905 	bhi	123bf8 <__RAM_SIZE+0x23bf8>
    17e0:	8e028b03 	vmlahi.f64	d8, d2, d3
    17e4:	00000001 	andeq	r0, r0, r1
    17e8:	0000000c 	andeq	r0, r0, ip
    17ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    17f0:	7c020001 	stcvc	0, cr0, [r2], {1}
    17f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    17f8:	0000000c 	andeq	r0, r0, ip
    17fc:	000017e8 	andeq	r1, r0, r8, ror #15
    1800:	10004fb0 			; <UNDEFINED> instruction: 0x10004fb0
    1804:	00000012 	andeq	r0, r0, r2, lsl r0
    1808:	00000020 	andeq	r0, r0, r0, lsr #32
    180c:	000017e8 	andeq	r1, r0, r8, ror #15
    1810:	10004fc4 	andne	r4, r0, r4, asr #31
    1814:	00000060 	andeq	r0, r0, r0, rrx
    1818:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    181c:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1820:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1824:	8a038904 	bhi	e3c3c <SYSTICK_CYCLES+0xbabfd>
    1828:	00018e02 	andeq	r8, r1, r2, lsl #28
    182c:	0000000c 	andeq	r0, r0, ip
    1830:	000017e8 	andeq	r1, r0, r8, ror #15
    1834:	10005024 	andne	r5, r0, r4, lsr #32
    1838:	00000028 	andeq	r0, r0, r8, lsr #32
    183c:	0000002c 	andeq	r0, r0, ip, lsr #32
    1840:	000017e8 	andeq	r1, r0, r8, ror #15
    1844:	1000504c 	andne	r5, r0, ip, asr #32
    1848:	0000009c 	muleq	r0, ip, r0
    184c:	840c0e42 	strhi	r0, [ip], #-3650	; 0xfffff1be
    1850:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
    1854:	180e4201 	stmdane	lr, {r0, r9, lr}
    1858:	0c0e0a65 			; <UNDEFINED> instruction: 0x0c0e0a65
    185c:	0a440b41 	beq	1104568 <__RAM_SIZE+0x1004568>
    1860:	0b410c0e 	bleq	10448a0 <__RAM_SIZE+0xf448a0>
    1864:	0c0e0a50 			; <UNDEFINED> instruction: 0x0c0e0a50
    1868:	00000b41 	andeq	r0, r0, r1, asr #22
    186c:	00000018 	andeq	r0, r0, r8, lsl r0
    1870:	000017e8 	andeq	r1, r0, r8, ror #15
    1874:	100050e8 	andne	r5, r0, r8, ror #1
    1878:	00000058 	andeq	r0, r0, r8, asr r0
    187c:	84080e43 	strhi	r0, [r8], #-3651	; 0xfffff1bd
    1880:	67018e02 	strvs	r8, [r1, -r2, lsl #28]
    1884:	000ec4ce 	andeq	ip, lr, lr, asr #9
    1888:	0000000c 	andeq	r0, r0, ip
    188c:	000017e8 	andeq	r1, r0, r8, ror #15
    1890:	10005140 	andne	r5, r0, r0, asr #2
    1894:	00000004 	andeq	r0, r0, r4
    1898:	0000000c 	andeq	r0, r0, ip
    189c:	000017e8 	andeq	r1, r0, r8, ror #15
    18a0:	10005144 	andne	r5, r0, r4, asr #2
    18a4:	0000000a 	andeq	r0, r0, sl
    18a8:	0000000c 	andeq	r0, r0, ip
    18ac:	000017e8 	andeq	r1, r0, r8, ror #15
    18b0:	10005150 	andne	r5, r0, r0, asr r1
    18b4:	00000002 	andeq	r0, r0, r2
    18b8:	00000018 	andeq	r0, r0, r8, lsl r0
    18bc:	000017e8 	andeq	r1, r0, r8, ror #15
    18c0:	10005154 	andne	r5, r0, r4, asr r1
    18c4:	0000003e 	andeq	r0, r0, lr, lsr r0
    18c8:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    18cc:	86038504 	strhi	r8, [r3], -r4, lsl #10
    18d0:	00018e02 	andeq	r8, r1, r2, lsl #28
    18d4:	0000002c 	andeq	r0, r0, ip, lsr #32
    18d8:	000017e8 	andeq	r1, r0, r8, ror #15
    18dc:	10005194 	mulne	r0, r4, r1
    18e0:	000000da 	ldrdeq	r0, [r0], -sl
    18e4:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    18e8:	86078508 	strhi	r8, [r7], -r8, lsl #10
    18ec:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    18f0:	8a038904 	bhi	e3d08 <SYSTICK_CYCLES+0xbacc9>
    18f4:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
    18f8:	0207f00e 	andeq	pc, r7, #14
    18fc:	200e0a5b 	andcs	r0, lr, fp, asr sl
    1900:	00000b42 	andeq	r0, r0, r2, asr #22
    1904:	0000000c 	andeq	r0, r0, ip
    1908:	000017e8 	andeq	r1, r0, r8, ror #15
    190c:	10005270 	andne	r5, r0, r0, ror r2
    1910:	00000004 	andeq	r0, r0, r4
    1914:	00000024 	andeq	r0, r0, r4, lsr #32
    1918:	000017e8 	andeq	r1, r0, r8, ror #15
    191c:	10005274 	andne	r5, r0, r4, ror r2
    1920:	00000066 	andeq	r0, r0, r6, rrx
    1924:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    1928:	86048505 	strhi	r8, [r4], -r5, lsl #10
    192c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1930:	f80e4201 			; <UNDEFINED> instruction: 0xf80e4201
    1934:	0e0a6603 	cfmadd32eq	mvax0, mvfx6, mvfx10, mvfx3
    1938:	000b4114 	andeq	r4, fp, r4, lsl r1
    193c:	00000018 	andeq	r0, r0, r8, lsl r0
    1940:	000017e8 	andeq	r1, r0, r8, ror #15
    1944:	100052dc 	ldrdne	r5, [r0], -ip
    1948:	00000012 	andeq	r0, r0, r2, lsl r0
    194c:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
    1950:	0ec44701 	cdpeq	7, 12, cr4, cr4, cr1, {0}
    1954:	00000000 	andeq	r0, r0, r0
    1958:	00000018 	andeq	r0, r0, r8, lsl r0
    195c:	000017e8 	andeq	r1, r0, r8, ror #15
    1960:	100052f0 	strdne	r5, [r0], -r0
    1964:	00000044 	andeq	r0, r0, r4, asr #32
    1968:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
    196c:	86038504 	strhi	r8, [r3], -r4, lsl #10
    1970:	00018e02 	andeq	r8, r1, r2, lsl #28
    1974:	0000000c 	andeq	r0, r0, ip
    1978:	000017e8 	andeq	r1, r0, r8, ror #15
    197c:	10005334 	andne	r5, r0, r4, lsr r3
    1980:	00000012 	andeq	r0, r0, r2, lsl r0
    1984:	0000000c 	andeq	r0, r0, ip
    1988:	000017e8 	andeq	r1, r0, r8, ror #15
    198c:	10005348 	andne	r5, r0, r8, asr #6
    1990:	00000002 	andeq	r0, r0, r2
    1994:	0000000c 	andeq	r0, r0, ip
    1998:	000017e8 	andeq	r1, r0, r8, ror #15
    199c:	1000534c 	andne	r5, r0, ip, asr #6
    19a0:	0000000c 	andeq	r0, r0, ip
    19a4:	0000000c 	andeq	r0, r0, ip
    19a8:	000017e8 	andeq	r1, r0, r8, ror #15
    19ac:	10005358 	andne	r5, r0, r8, asr r3
    19b0:	00000034 	andeq	r0, r0, r4, lsr r0
    19b4:	0000001c 	andeq	r0, r0, ip, lsl r0
    19b8:	000017e8 	andeq	r1, r0, r8, ror #15
    19bc:	1000538c 	andne	r5, r0, ip, lsl #7
    19c0:	00000018 	andeq	r0, r0, r8, lsl r0
    19c4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    19c8:	41018e02 	tstmi	r1, r2, lsl #28
    19cc:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    19d0:	00000008 	andeq	r0, r0, r8
    19d4:	0000000c 	andeq	r0, r0, ip
    19d8:	000017e8 	andeq	r1, r0, r8, ror #15
    19dc:	100053a4 	andne	r5, r0, r4, lsr #7
    19e0:	00000034 	andeq	r0, r0, r4, lsr r0
    19e4:	0000001c 	andeq	r0, r0, ip, lsl r0
    19e8:	000017e8 	andeq	r1, r0, r8, ror #15
    19ec:	100053d8 	ldrdne	r5, [r0], -r8
    19f0:	00000018 	andeq	r0, r0, r8, lsl r0
    19f4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    19f8:	41018e02 	tstmi	r1, r2, lsl #28
    19fc:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    1a00:	00000008 	andeq	r0, r0, r8
    1a04:	00000020 	andeq	r0, r0, r0, lsr #32
    1a08:	000017e8 	andeq	r1, r0, r8, ror #15
    1a0c:	100053f0 	strdne	r5, [r0], -r0
    1a10:	0000007c 	andeq	r0, r0, ip, ror r0
    1a14:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
    1a18:	86048505 	strhi	r8, [r4], -r5, lsl #10
    1a1c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
    1a20:	d00e4301 	andle	r4, lr, r1, lsl #6
    1a24:	140e7904 	strne	r7, [lr], #-2308	; 0xfffff6fc
    1a28:	00000030 	andeq	r0, r0, r0, lsr r0
    1a2c:	000017e8 	andeq	r1, r0, r8, ror #15
    1a30:	1000546c 	andne	r5, r0, ip, ror #8
    1a34:	000002c8 	andeq	r0, r0, r8, asr #5
    1a38:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1a3c:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1a40:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1a44:	8a048905 	bhi	123e60 <__RAM_SIZE+0x23e60>
    1a48:	8e028b03 	vmlahi.f64	d8, d2, d3
    1a4c:	480e4201 	stmdami	lr, {r0, r9, lr}
    1a50:	240e0a64 	strcs	r0, [lr], #-2660	; 0xfffff59c
    1a54:	0a710b42 	beq	1c44764 <__RAM_SIZE+0x1b44764>
    1a58:	0b42240e 	bleq	108aa98 <__RAM_SIZE+0xf8aa98>
    1a5c:	0000000c 	andeq	r0, r0, ip
    1a60:	000017e8 	andeq	r1, r0, r8, ror #15
    1a64:	10005734 	andne	r5, r0, r4, lsr r7
    1a68:	00000004 	andeq	r0, r0, r4
    1a6c:	0000000c 	andeq	r0, r0, ip
    1a70:	000017e8 	andeq	r1, r0, r8, ror #15
    1a74:	10005738 	andne	r5, r0, r8, lsr r7
    1a78:	00000004 	andeq	r0, r0, r4
    1a7c:	0000000c 	andeq	r0, r0, ip
    1a80:	000017e8 	andeq	r1, r0, r8, ror #15
    1a84:	1000573c 	andne	r5, r0, ip, lsr r7
    1a88:	00000004 	andeq	r0, r0, r4
    1a8c:	0000003c 	andeq	r0, r0, ip, lsr r0
    1a90:	000017e8 	andeq	r1, r0, r8, ror #15
    1a94:	10005740 	andne	r5, r0, r0, asr #14
    1a98:	000002b4 			; <UNDEFINED> instruction: 0x000002b4
    1a9c:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    1aa0:	86068507 	strhi	r8, [r6], -r7, lsl #10
    1aa4:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    1aa8:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    1aac:	a80e4201 	stmdage	lr, {r0, r9, lr}
    1ab0:	0e0a7102 	adfeqe	f7, f2, f2
    1ab4:	6b0b421c 	blvs	2d232c <__RAM_SIZE+0x1d232c>
    1ab8:	421c0e0a 	andsmi	r0, ip, #10, 28	; 0xa0
    1abc:	0a48020b 	beq	12022f0 <__RAM_SIZE+0x11022f0>
    1ac0:	0b421c0e 	bleq	1088b00 <__RAM_SIZE+0xf88b00>
    1ac4:	1c0e0a5f 			; <UNDEFINED> instruction: 0x1c0e0a5f
    1ac8:	00000b42 	andeq	r0, r0, r2, asr #22
    1acc:	0000000c 	andeq	r0, r0, ip
    1ad0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1ad4:	7c020001 	stcvc	0, cr0, [r2], {1}
    1ad8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1adc:	00000018 	andeq	r0, r0, r8, lsl r0
    1ae0:	00001acc 	andeq	r1, r0, ip, asr #21
    1ae4:	10005ba0 	andne	r5, r0, r0, lsr #23
    1ae8:	0000003c 	andeq	r0, r0, ip, lsr r0
    1aec:	84040e4a 	strhi	r0, [r4], #-3658	; 0xfffff1b6
    1af0:	0ec44901 	vdiveq.f16	s9, s8, s2	; <UNPREDICTABLE>
    1af4:	00000000 	andeq	r0, r0, r0
    1af8:	0000001c 	andeq	r0, r0, ip, lsl r0
    1afc:	00001acc 	andeq	r1, r0, ip, asr #21
    1b00:	10005bdc 	ldrdne	r5, [r0], -ip
    1b04:	00000018 	andeq	r0, r0, r8, lsl r0
    1b08:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1b0c:	41018e02 	tstmi	r1, r2, lsl #28
    1b10:	0e49180e 	cdpeq	8, 4, cr1, cr9, cr14, {0}
    1b14:	00000008 	andeq	r0, r0, r8
    1b18:	0000000c 	andeq	r0, r0, ip
    1b1c:	00001acc 	andeq	r1, r0, ip, asr #21
    1b20:	10005bf4 	strdne	r5, [r0], -r4
    1b24:	00000002 	andeq	r0, r0, r2
    1b28:	00000028 	andeq	r0, r0, r8, lsr #32
    1b2c:	00001acc 	andeq	r1, r0, ip, asr #21
    1b30:	10005bf8 	strdne	r5, [r0], -r8
    1b34:	000002ca 	andeq	r0, r0, sl, asr #5
    1b38:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
    1b3c:	86068507 	strhi	r8, [r6], -r7, lsl #10
    1b40:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
    1b44:	8e028903 	vmlahi.f16	s16, s4, s6	; <UNPREDICTABLE>
    1b48:	300e4301 	andcc	r4, lr, r1, lsl #6
    1b4c:	1c0e0a6a 			; <UNDEFINED> instruction: 0x1c0e0a6a
    1b50:	00000b42 	andeq	r0, r0, r2, asr #22
    1b54:	00000018 	andeq	r0, r0, r8, lsl r0
    1b58:	00001acc 	andeq	r1, r0, ip, asr #21
    1b5c:	10005ec4 	andne	r5, r0, r4, asr #29
    1b60:	00000030 	andeq	r0, r0, r0, lsr r0
    1b64:	8e040e49 	cdphi	14, 0, cr0, cr4, cr9, {2}
    1b68:	180e4101 	stmdane	lr, {r0, r8, lr}
    1b6c:	00040e4c 	andeq	r0, r4, ip, asr #28
    1b70:	00000014 	andeq	r0, r0, r4, lsl r0
    1b74:	00001acc 	andeq	r1, r0, ip, asr #21
    1b78:	10005ef4 	strdne	r5, [r0], -r4
    1b7c:	0000000a 	andeq	r0, r0, sl
    1b80:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1b84:	00018e02 	andeq	r8, r1, r2, lsl #28
    1b88:	00000014 	andeq	r0, r0, r4, lsl r0
    1b8c:	00001acc 	andeq	r1, r0, ip, asr #21
    1b90:	10005f00 	andne	r5, r0, r0, lsl #30
    1b94:	00000012 	andeq	r0, r0, r2, lsl r0
    1b98:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1b9c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1ba0:	00000014 	andeq	r0, r0, r4, lsl r0
    1ba4:	00001acc 	andeq	r1, r0, ip, asr #21
    1ba8:	00000000 	andeq	r0, r0, r0
    1bac:	00000006 	andeq	r0, r0, r6
    1bb0:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1bb4:	00018e02 	andeq	r8, r1, r2, lsl #28
    1bb8:	00000014 	andeq	r0, r0, r4, lsl r0
    1bbc:	00001acc 	andeq	r1, r0, ip, asr #21
    1bc0:	00000000 	andeq	r0, r0, r0
    1bc4:	00000006 	andeq	r0, r0, r6
    1bc8:	83080e41 	movwhi	r0, #36417	; 0x8e41
    1bcc:	00018e02 	andeq	r8, r1, r2, lsl #28
